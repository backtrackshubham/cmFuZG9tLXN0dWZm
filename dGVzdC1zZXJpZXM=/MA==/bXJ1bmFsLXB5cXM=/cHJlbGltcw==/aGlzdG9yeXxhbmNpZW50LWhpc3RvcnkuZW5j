{
  "testId" : "history|ancient-history",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/pyqs/mrunal-pyqs/prelims/1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "The word 'Hindu' as reference to the people of Hind (India)was first used by: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwx",
      "description" : "VGhlIG5hbWUgb2YgSW5kaWEgaXMgYSBjb3JydXB0aW9uIG9mIHRoZSB3b3JkIFNpbmRodS4gU2luZGh1IGlzIHRoZSBuYW1lIG9mIHRoZSBJbmR1cyBSaXZlciwgbWVudGlvbmVkIGluIHRoZSBSaWctIFZlZGEuIE5laWdoYm9yaW5nIEFyYWJzLCBJcmFuaWFucyB1dHRlcmVkICdzJyBhcyAnaCcgYW5kIGNhbGxlZCB0aGlzIGxhbmQgSGluZHUuIEdyZWVrcyBwcm9ub3VuY2VkIHRoaXMgbmFtZSBhcyBJbmR1cy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the Greeks ",
        "option2" : " the Romans",
        "option3" : " the Chinese ",
        "option4" : " the Arabs"
      }
    },
    {
      "index" : 2,
      "question" : "Who among the following was a Brahmavadini whocomposed some hymns of the Vedas? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwy",
      "description" : "T3RoZXIgQnJhaG1hdmFkaW5pIGFyZSBWaXNod2F3YXJhLCBTaWt0YSwgTml2YXZhcmksIEdob3NoYSBhbmQgTWFpdHJleWku",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lopamudra ",
        "option2" : " Gargi",
        "option3" : " Leelavati ",
        "option4" : " Savitri"
      }
    },
    {
      "index" : 3,
      "question" : "Match List-I with List-II and select the correct answer (usingcodes given below the lists) List-I (Eras) List-II (Reckoned from)A. Vikrama era 1. 3102 B.C.B. Saka era 2. 320 A.D.C. Gupta era 3. 78 A.D.D. Kali era 4. 58 B.C.5. 248 A.D.Codes:",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwz",
      "description" : "MjQ4IEEuRC4gaXMgS2FsYWNodXJpIGVyYS4gVmlrcmFtIGVyYSB3YXMgc3RhcnRlZCBieSBraW5nIFZpa3JhbWFkaXR5YS4gU2hha2EgZXJhIHdhcyBzdGFydGVkIGJ5IEthbmlzaGthLiBHdXB0YSBlcmEgd2FzIHN0YXJ0ZWQgYnkgQ2hhbmRyYWd1cHRhLUku",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 5; D - 1",
        "option2" : " A - 1; B - 3; C - 2; D - 4",
        "option3" : " A - 4; B - 5; C - 2; D - 3",
        "option4" : " A - 4; B - 3; C - 2; D - 1"
      }
    },
    {
      "index" : 4,
      "question" : "In Sanskrit plays written during the Gupta period womenand Sudras speak: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0",
      "description" : "SW4gU2Fuc2tyaXQgcGxheXMgb2YgR3VwdGEgcGVyaW9kIHdvbWVuIGFuZCBTdWRyYXMgc3BlYWsgcHJha3JpdCBhbmQgRWxpdGUgY2xhc3Mgc3BlYWsgU2Fuc2tyaXQu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sanskrit ",
        "option2" : " Prakrit",
        "option3" : " Pali ",
        "option4" : " Sauraseni"
      }
    },
    {
      "index" : 5,
      "question" : "The name by which Ashoka is generally referred to hisinscriptions is: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1",
      "description" : "SW4gdGhlIHllYXIgMTkxNSBuZWFyIGEgdmlsbGFnZSBjYWxsZWQgTWFza2kgaW4gUmFpY2h1ciBEaXN0cmljdCBvZiBLYXJuYXRha2EsIGEgcm9jayBpbnNjcmlwdGlvbiB3YXMgZGlzY292ZXJlZCBvbiBhIGhpbGwuIEluIHRoaXMgaW5zY3JpcHRpb24gZm9yIHRoZSBmaXJzdCB0aW1lIHRoZSBuYW1lIG9mIEFzaG9rYSB3YXMgZm91bmQgd2l0aCB0aXRsZXMgbGlrZSBEZXZhbmFtcHJpeWEgYW5kIFByaXlhZGFyc2hpLiBJdCB3YXMgdGhlbiBjZXJ0YWluIHRoYXQgRGV2YW5hbXByaXlhIFByaXlhZGFyc2hpIHdhcyBubyBvdGhlciB0aGFuIEFzaG9rYS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chakravarti ",
        "option2" : " Dharmadeva",
        "option3" : " Dharmakirti ",
        "option4" : " Priyaarsi"
      }
    },
    {
      "index" : 6,
      "question" : "The term 'Yavanapriya' mentioned in ancient Sanskrit textsdenoted:    ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2",
      "description" : "WWF2YW5hcyB3ZXJlIEluZG8tR3JlZWtzLiBUaGV5IGxpa2VkIHBlcHBlciwgdGhhdCBpcyB3aHkgcGVwcGVyIHdhcyBrbm93biBhcyBZYXZhbmFwcml5YS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a fine variety of Indian Muslim",
        "option2" : " ivory",
        "option3" : " damsels sent to the Greek court for dance performance",
        "option4" : " pepper"
      }
    },
    {
      "index" : 7,
      "question" : "The concept of Anuvrata was advocated by: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3",
      "description" : "QW51dnJhdGEgd2FzIHRoZSBmaXZlIG1haW4gdGVhY2hpbmdzIG9mIEphaW5pc20tIEFoaW1zYSwgQXNhdGV5YSwgQXBhcmlncmFoYSwgU2F0eWEgYW5kIEJyYWhtYWNoYXJ5YQ==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mahayana Buddhism",
        "option2" : " Hinayana Buddhism",
        "option3" : " Jainism",
        "option4" : " The Lokayata school"
      }
    },
    {
      "index" : 8,
      "question" : "According to Mimamsa system of philosophy, liberation ispossible by means by:   ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw4",
      "description" : "TWltYW5zYSBtZWFucyBpbnZlc3RpZ2F0aW9uIG9yIGVucXVpcnkuIFRoZSBwcmltYXJ5IGVucXVpcnkgaXMgaW50byB0aGUgbmF0dXJlIG9mIGRoYXJtYSBiYXNlZCBvbiBjbG9zZSB0aGVvbG9neSBvZiB0aGUgVmVkYXMuIEl0IGhhcyB0d28gZGl2aXNpb25zLCBQdXJ2YSBNaW1hbnNhIGFuZCBVdHRhciBNaW1hbnNhLiBUaGUgUHVydmEgTWltYW5zYSBleHBsYWlucyB0aGUgRGhhcm1hIGFzIGEgInZpcnR1ZSIsICJtb3JhbGl0eSIgb3IgImR1dHkiLiBEaGFybWEgaXMgdGhlIGVzc2VudGlhbGx5IHJpdHVhbGlzbSwgYW5kIHRoZXJlIGlzIGEgZ3JlYXQgc2lnbmlmaWNhbmNlIG9mIHRoZSBLYXJtYSBvciBhY3Rpb24gaW4gYXR0YWluaW5nIERoYXJtYS4gTWltYW5zYSBzeXN0ZW0gb2YgcGhpbG9zb3BoeSBzdHJlc3NlcyBvbiB0aGUgZG9jdHJpbmUgb2YgImthcm1hIi4gSXQgc2F5cyB0aGF0IGxpYmVyYXRpb24gaXMgcG9zc2libGUgYnkgbWVhbnMgb2YgcGVyZm9ybWluZyAiS2FybWEuIg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " jnana ",
        "option2" : " hakti",
        "option3" : " yoga ",
        "option4" : " karma"
      }
    },
    {
      "index" : 9,
      "question" : "Bronze icons of Nataraja cast during the Chola periodinvariably show the deity with: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw5",
      "description" : "Rm91ciBoYW5kZWQgQnJvbnplIGljb24gb2YgTmF0YXJhamEgaXMgdGhlIGZpbmVzdCBleGFtcGxlIG9mIENob2xhIHNjdWxwdHVyZS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " eight hands ",
        "option2" : " six hands",
        "option3" : " four hands ",
        "option4" : " two hans"
      }
    },
    {
      "index" : 10,
      "question" : "According to ancient Indian cosmogonic ideas thesequential order of the cycle of four acons (yugas) is:",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMA==",
      "description" : "QSBjb21wbGV0ZSBZdWdhIHN0YXJ0cyB3aXRoIHRoZSBTYXR5YSBZdWdhIChLcml0YSksIHZpYSBUcmV0YSBZdWdhIGFuZCBEdmFwYXJhIFl1Z2EgaW50byBhIEthbGkgWXVnYS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dvapara, Krita, Treta and Kali",
        "option2" : " Krita, Dvapara, Treta and Kali",
        "option3" : " Krita, Treta, Dvapara and Kali",
        "option4" : " Treta, Dvapara, Kali and Krita"
      }
    },
    {
      "index" : 11,
      "question" : "Which one of the following temples figured in the newsregarding the institution of the Devadasi? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMQ==",
      "description" : "RGV2YWRhc2kgaXMgYSBnaXJsICJkZWRpY2F0ZWQiIHRvIHdvcnNoaXAgYW5kIHNlcnZpY2Ugb2YgYSBkZWl0eSBvciBhIHRlbXBsZSBmb3IgdGhlIHJlc3Qgb2YgaGVyIGxpZmUuIFRoZXkgd2VyZSBDb25zaWRlcmVkIHRoZSBodW1hbiB3aWZlIG9mIExvcmQgSmFnYW5uYXRoLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jagannath temple, Puri",
        "option2" : " Pashupatinath temple, Kathmandu",
        "option3" : " Kandariya Mahadev temple, Khajuraho",
        "option4" : " Chausath Yogini temple, Bhedaghat"
      }
    },
    {
      "index" : 12,
      "question" : "The river most mentioned in early Vedic literatureis : ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMg==",
      "description" : "U2FwdGEgU2luZGh1IHBsYXkgYSBwcm9taW5lbnQgcGFydCBpbiB0aGUgaHltbnMgb2YgdGhlIFJpZ3ZlZGEsIGFuZCBjb25zZXF1ZW50bHkgaW4gZWFybHkgVmVkaWMgcmVsaWdpb24u",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sindhu ",
        "option2" : " Sutudri",
        "option3" : " Sarasvati ",
        "option4" : " Ganga"
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following is not a part of early Jainsliterature? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMw==",
      "description" : "VGhlcmlnYXRoYSB3YXMgYSBwYXJ0IG9mIHRoZSBCdWRkaGlzdCBsaXRlcmF0dXJlLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Therigatha ",
        "option2" : " Acarangasutra",
        "option3" : " Sutrakritanga ",
        "option4" : " Brihatkalpasutra"
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following were common to both Buddhismand Jainism? 1. Avoidance of extremities of penance and enjoyment2. Indifference to the authority of the Vedas3. Denial of efficacy of rituals4. Non-injury to animal lifeSelect the answer using the codes given below:Codes:",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNA==",
      "description" : "Qm90aCBkZW5pZWQgdGhlIGF1dGhvcml0eSBvZiB0aGUgVmVkYXMgYW5kIHRoZSBuZWNlc3NpdHkgb2YgcGVyZm9ybWluZyBzYWNyaWZpY2VzIGFuZCByaXR1YWxzLiBCb3RoIG9mIHRoZW0gd2VyZSBvcHBvc2VkIHRvIGFuaW1hbCBzYWNyaWZpY2VzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2, 3 and 4",
        "option3" : " 1, 3, and 4 ",
        "option4" : " 1 an 2"
      }
    },
    {
      "index" : 15,
      "question" : "In the context of ancient Indian society which one of thefollowing terms does not belong to the category of the otherthree? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNQ==",
      "description" : "S29zYSB3YXMgdXNlZCBmb3IgdHJlYXN1cnkgYW5kIHRoZSByZXN0IG9mIHRoZSB0aHJlZSB0ZXJtcyB3ZXJlIHJlbGF0ZWQgdG8gZmFtaWx5Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kula ",
        "option2" : " Vamsa",
        "option3" : " Kosa ",
        "option4" : " Gotra"
      }
    },
    {
      "index" : 16,
      "question" : "Who among the following is known for his work on medicineduring the Gupta period? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNg==",
      "description" : "U3VzcnV0aGEgU2FtaGl0YSB3YXMgd3JpdHRlbiBieSBTdXNydXRoYS4gSGUgd2FzIHNhaWQgdG8gaGF2ZSBiZWVuIHRoZSBiZXN0IHN1cmdlb24gZHVyaW5nIHRoZSBHdXB0YSBwZXJpb2Qu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Saumilla ",
        "option2" : " Sudraka",
        "option3" : " Shaunaka ",
        "option4" : " Susrutha"
      }
    },
    {
      "index" : 17,
      "question" : "Which one of the following sculptures was invariably usedgreen schist as the medium? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNw==",
      "description" : "VGhlIEJoYXJodXQgc3R1cGEgbWF5IGhhdmUgYmVlbiBlc3RhYmxpc2hlZCBieSB0aGUgTWF1cnlhIEtpbmcgQXNob2thIGluIHRoZSAzcmQgY2VudHVyeSBCQ0UsIGJ1dCBtYW55IHdvcmtzIG9mIGFydCB3ZXJlIGFwcGFyZW50bHkgYWRkZWQgZHVyaW5nIHRoZSBTdW5nYSBwZXJpb2QsIGZyb20gMm5kIGNlbnR1cnkgQkNFLiBUaGUgcnVpbmVkIHN0dXBhIGlzIHN0aWxsIGF0IEJoYXJodXQsIGhvd2V2ZXIgdGhlIGdhdGV3YXlzIGFuZCByYWlsaW5ncyB3ZXJlIGRpc21hbnRsZWQgYW5kIHJlYXNzZW1ibGVkIGF0IEtvbGthdGEgTXVzZXVtLiBUaGV5IGNvbnRhaW4gbnVtZXJvdXMgYmlydGggc3RvcmllcyBvZiB0aGUgQnVkZGhhJ3MgcHJldmlvdXMgbGl2ZXMsIG9yIEphdGFrYSB0YWxlcy4gTWFueSBvZiB0aGVtIGFyZSBpbiB0aGUgc2hhcGUgb2YgbGFyZ2UsIHJvdW5kIG1lZGFsbGlvbnMuIFR3byBvZiB0aGUgcGFuZWxzIGFyZSBhdCB0aGUgU21pdGhzb25pYW4uIEJoYXJodXQgc2N1bHB0dXJlcyB3ZXJlIGludmFyaWFibHkgdXNlZCBncmVlbiBzY2hpc3QgYXMgdGhlIG1lZGl1bS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Maurya sculptures",
        "option2" : " Mathura sculptures",
        "option3" : " Bharhut sculptures",
        "option4" : " Gandhara sculptures"
      }
    },
    {
      "index" : 18,
      "question" : "Match List-I with List-II and select the correct answer:List-I List-IIA. Vishakhadatta 1. MedicineB. Varahamihira 2. DramaC. Charaka 3. AstronomyD. Brahmagupta 4. MathematicsCodes:",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxOA==",
      "description" : "VmlzaGFraGFkYXR0YSB3cm90ZSBhIGRyYW1hIG5hbWVkICdNdWRyYSBSYWtzaGFzYScu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B -  3; C - 4; D - 2",
        "option2" : " A - 2; B -  1; C - 3; D - 4",
        "option3" : " A - 2; B - 3;  C - 1; D - 4",
        "option4" : " A - 3; B - 4;  C - 1; D - 2"
      }
    },
    {
      "index" : 19,
      "question" : "Which one of the following texts of ancient India allowsdivorce to a wife deserted by her husband?             ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxOQ==",
      "description" : "QXJ0aGFzaGFzdHJhIHdhcyB3cml0dGVuIGJ5IEthdXRpbHlhLiBJbiB0aGlzIGJvb2sgJ01va3NoYScgaGFzIGJlZW4gdXNlZCBmb3IgZGl2b3JjZS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kamasutra ",
        "option2" : " Manava Dharma Shastra",
        "option3" : " Sukra Nitisara ",
        "option4" : " Arthashastra"
      }
    },
    {
      "index" : 20,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists:                                   List-I List-IIA. Gupta 1. BadamiB. Chandella 2. PanamalaiC. Chalukya 3. KhajurahoD. Pallava 4. DeogarhCodes:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMA==",
      "description" : "QmFkYW1pIHdhcyBhbHNvIGtub3duIGFzIFZhdGFwaSBpbiBCaWphcHVyIGRpc3RyaWN0IG9mIEthcm5hdGFrYS4gUGFuYW1hbGFpIG9yIEthbmNoaSBpbiBUYW1pbCBOYWR1IHdhcyB0aGUgY2FwaXRhbCBvZiBQYWxsYXZhcy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 4; B - 3; C - 1; D - 2",
        "option2" : " A - 4; B - 2; C - 3; D - 1",
        "option3" : " A - 2; B - 3; C - 4; D - 1",
        "option4" : " A - 3; B - 4; C - 1; D - 2"
      }
    },
    {
      "index" : 21,
      "question" : "Which one of the following statements regarding Ashokastone pillars is incorrect? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMQ==",
      "description" : "QXNob2thIHN0b25lIHBpbGxhcnMgd2VyZSBtZWFudCB0byBzcHJlYWQgaGlzIERoYW1tYSAobm90IHRoZSBwYXJ0IG9mIGFyY2hpdGVjdHVyYWwgc3RydWN0dXJlLik=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " These are highly polished",
        "option2" : " These are monolithic",
        "option3" : " The shaft of pillars is tapering in shape",
        "option4" : " These are parts of architectural structures"
      }
    },
    {
      "index" : 22,
      "question" : "Which one of the following scripts of ancient India waswritten from right to left? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMg==",
      "description" : "S2hhcm9zdGhpIHNjcmlwdCB3YXMgZGVjaXBoZXJlZCBieSBKYW1lcyBQcmluc2VwICgxNzk5LTE4NDApLCB1c2luZyB0aGUgYmlsaW5ndWFsIGNvaW5zIG9mIHRoZSBJbmRvLUdyZWVrIHBlcmlvZC4gVGhpcyBpbiB0dXJuIGxlZCB0byB0aGUgcmVhZGluZyBvZiB0aGUgRWRpY3RzIG9mIEFzaG9rYSwgc29tZSBvZiB3aGljaCwgIGZyb20gdGhlIG5vcnRod2VzdCAgb2YgIHRoZSBBc2lhbiBzdWJjb250aW5lbnQsIHdlcmUgd3JpdHRlbiBpbiB0aGUgS2hhcm9zdGhpIHNjcmlwdC4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Brahmi ",
        "option2" : " Nandnagari",
        "option3" : " Sharada ",
        "option4" : " Kharosthi"
      }
    },
    {
      "index" : 23,
      "question" : "The famous dialogue between Nachiketa and Yama ismentioned in the: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMw==",
      "description" : "S2F0aG9wYW5pc2hhZCBpcyB0aGUgY29udmVyc2F0aW9uIGJldHdlZW4gTmFjaGlrZXRhIGFuZCBZYW1yYWogKEdvZCBvZiBkZWF0aCkuIE5hY2hpa2V0YSB3YXMgYSBzZWVrZXIsIGFuZCBZYW1yYWogd2FzIGEgR3VydSAoa25vd2VyIG9mIHNlY3JldHMpLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chhandogyopanishad ",
        "option2" : " Mundakopanishad",
        "option3" : " Kathopanishad ",
        "option4" : " Kenopanisha"
      }
    },
    {
      "index" : 24,
      "question" : "Milindapanho is in the form of a dialogue between the kingMenander and Buddhist monk: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNA==",
      "description" : "TWlsaW5kYXBhbmhvIHdhc24ndCB3cml0dGVuIGJ5IG9uZSBwZXJzb24uIEl0IGlzIHRoZSBjb2xsZWN0ZWQgZGlhbG9ndWUgYmV0d2VlbiB0aGUgSW5kby1HcmVlayBraW5nIE1pbGluZGEgKG9yIE1lYW5kZXIpIGFuZCB0aGUgQnVkZGhpc3Qgc2FnZSBOYWdhc2VuYS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nagasena ",
        "option2" : " Nagarjuna",
        "option3" : " Nagabhatta ",
        "option4" : " Kumarilabhatta"
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following edicts mentions the personalname of Ashoka? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNQ==",
      "description" : "TWFza2ksIEd1cmphcmEsIE5ldHR1ciBhbmQgVWRlZ29sYW0gaW5zY3JpcHRpb25zIG1lbnRpb24gdGhlIHBlcnNvbmFsIG5hbWUgb2YgQXNob2thLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kalsi ",
        "option2" : " Rummindei",
        "option3" : " Special Kalinga Edict ",
        "option4" : " Maski"
      }
    },
    {
      "index" : 26,
      "question" : "The following map shows four of the sixteenMahajanapadas that existed in ancient India:          The places marked A, B, C and D respectively are:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNg==",
      "description" : "TWF0c3lhIE1haGFqYW5hcGFkYSBjb21wcmlzZWQgdGhlIHByZXNlbnQtZGF5IEphaXB1ci1CaGFyYXRhcHVyLUFsd2FyIGFyZWEgb2YgUmFqYXN0aGFuLCBBdmFudGkgd2FzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgb25lcyBhbmQgaXRzIGNvcmUgYXJlYSBjb21wcmlzZXMgdGhlIHByZXNlbnQtZGF5IFVqamFpbiBkaXN0cmljdCBvZiBNYWRoeWEgUHJhZGVzaC4gVmF0c2Egd2l0aCBpdHMgY2FwaXRhbCBhdCBLYXVzYW1iaSB3YXMgYW5vdGhlciBwb3dlcmZ1bCBNYWhhamFuYXBhZGEsIGFubmV4ZWQgYnkgTWFnYWRoYS4gQW5nYSBNYWhhamFuYXBhZGEgd2FzIGluIEdhbmdldGljIHZhbGxleS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Matsya, Cedi, Kosala, Anga",
        "option2" : " Surasena, Avanti, Vatsa, Magadha",
        "option3" : " Matsya, Avanti, Vatsa, Anga",
        "option4" : " Surasena, Cedi, Kosala, Magadha"
      }
    },
    {
      "index" : 27,
      "question" : "In the Mahayana Buddhism, the Bodhisatva Avalokitesvarawas also known as: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNw==",
      "description" : "QXZhbG9raXRlxZt2YXJhIGlzIGEgYm9kaGlzYXR0dmEgd2hvIGVtYm9kaWVzIHRoZSBjb21wYXNzaW9uIG9mIGFsbCBCdWRkaGFzLiBIZSBpcyBvbmUgb2YgdGhlIG1vcmUgd2lkZWx5IHJldmVyZWQgYm9kaGlzYXR0dmFzIGluIG1haW5zdHJlYW0gTWFoYXlhbmEgQnVkZGhpc20uIEluIFNhbnNrcml0LCBBdmFsb2tpdGVzdmFyYSBpcyBhbHNvIHJlZmVycmVkIHRvIGFzIFBhZG1hcGFuaSAoJ0hvbGRlciBvZiB0aGUgTG90dXMnKSBvciBMb2tlxZt2YXJhICgnTG9yZCBvZiB0aGUgV29ybGQnKS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vajrapani ",
        "option2" : " Manjusri",
        "option3" : " Padmapani ",
        "option4" : " Maitreya"
      }
    },
    {
      "index" : 28,
      "question" : "The silver coins issued by the Guptas were called:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyOA==",
      "description" : "UnVwYWthIHdhcyBhIHNpbHZlciBjb2luIG9mIEd1cHRhIHBlcmlvZC4xNiBSdXBha2Egd2FzIGVxdWFsIHRvIDEgZ29sZCBjb2luLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rupaka ",
        "option2" : " Karshapana",
        "option3" : " Dinara ",
        "option4" : " Pana"
      }
    },
    {
      "index" : 29,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists: List-I (Author) List-II (Text)A. Varahamihira 1. Prabandha ChintamaniB. Vishakhadatta 2. Mrichchha-KatikamC. Sudraka 3. Brihat-SamhitaD. Bilhana 4. Devi-Chandraguptam5. Vikramankadeva-CharitaCodes:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyOQ==",
      "description" : "VmFyYWhhbWloaXJhIGFsc28gd3JvdGUgUGFuY2hhc2lkZGhhbnRpa2E7IFZpc2hha2hhZGF0dGEgYWxzbyB3cm90ZSBNdWRyYSBSYWtzaGFzYS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 4; C - 5; D - 2",
        "option2" : " A - 3; B - 4; C - 2; D - 5",
        "option3" : " A - 5; B - 3; C - 4; D - 1",
        "option4" : " A - 1; B - 3; C - 5; D - 2"
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following was a corporation of merchantsin ancient India? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMA==",
      "description" : "QSBtYW5pZ3JhbWFtIHdhcyBhIGxhcmdlLCBpbmZsdWVudGlhbCBndWlsZCBvZiBTb3V0aCBJbmRpYW4gbWVyY2hhbnRzIGR1cmluZyB0aGUgcGVyaW9kIG9mIFdlc3Rlcm4gQ2hhbHVreWFuIHJ1bGVycyBpbiAxMHRoICAtIDEydGggQ2VudHVyeSBDRS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chaturvedimangalam",
        "option2" : " Parishad",
        "option3" : " Ashtadikgaja",
        "option4" : " Manigrama"
      }
    },
    {
      "index" : 31,
      "question" : "The Badami rock inscription of Pulakesin I is dated in theSaka year 465. If the same were to be dated in Vikrama Samvat,the year would be: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMQ==",
      "description" : "VGhlIFNha2EgZXJhIHN0YXJ0ZWQgaW4gNzggQUQsIHdoaWxlIFZpa3JhbSBlcmEgc3RhcnRlZCBmcm9tIDU4IEJDLiBTbyBpZiB3ZSB3YW50IHRvIGNvbnZlcnQgQmFkYW1pIHJvY2sgaW5zY3JpcHRpb24gb2YgUHVsYWtlc2luIEkgdG8gVmlrcmFtIGVyYSwgaXQgd2lsbCBiZSA0NjUgKyA3OCArIDU4ID0gNjAxIFZpa3JhbSBTYW12YXQu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 601 ",
        "option2" : " 300",
        "option3" : " 330 ",
        "option4" : " 407"
      }
    },
    {
      "index" : 32,
      "question" : "Many of the Greeks, Kushanas and Shakas embracedBuddhism rather than Hinduism because: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMg==",
      "description" : "VGhleSBlbWJyYWNlZCBCdWRkaGlzbSBiZWNhdXNlIGNhc3RlIHJpZGRlbiBIaW5kdWlzbSBkaWQgbm90IGF0dHJhY3QgdGhlbS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism was in the ascendant at that time",
        "option2" : " they had renounced the policy of war and violence",
        "option3" : " caste-ridden Hinduism did not attract them",
        "option4" : " Buddhism provided easier access to Indian society"
      }
    },
    {
      "index" : 33,
      "question" : "The Ashoka major rock edicts which tell us about theSangam Kingdom include rock edicts: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMw==",
      "description" : "VGhlIGxsIGFuZCBYbGxsIHJvY2sgZWRpY3RzIG1lbnRpb24gdGhlIHNvdXRoZXJuIGtpbmdkb21zIG9mICBDaG9sYSwgUGFuZHlhLCBTYXR5YXB1dHJhLCBLZXJhbGFwdXRyYSBhbmQgVGFtYmFwYW5uaS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " I and X ",
        "option2" : " I and XI",
        "option3" : " II and XIII ",
        "option4" : " II an XIV"
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following pairs are correctly matched?1. Mrichchakatikam-Shudraka2. Buddhacharita-Vasuvandhu3. Mudrarakshasha-Vishakadatta4. Harshacharita-BanabhattaSelect the correct answer using the codes given below:Codes:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNA==",
      "description" : "QnVkZGhhY2hhcml0YSB3YXMgd3JpdHRlbiBieSBBc2h2YWdob3NoLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 1, 3 and 4",
        "option3" : " 1 and 4 ",
        "option4" : " 2 an 3"
      }
    },
    {
      "index" : 35,
      "question" : "What is the correct chronological order in which thefollowing appeared in India? 1. Gold coins2. Punch marked silver coins3. Iron plough4. Urban cultureSelect the correct answer using the codes given below:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNQ==",
      "description" : "SW4gSW5kaWEgSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiAgYXBwZWFyZWQgdGhlIGZpcnN0IHNpZ25zIG9mIHVyYmFuaXphdGlvbiBiZXR3ZWVuIDI1MDAgYW5kIDIwMDAgQkNFLiBBY2NvcmRpbmcgdG8gcmVzZWFyY2hlcnMsIGl0IGlzIGEgaGFyZCBmYWN0IHRoYXQgdGhlIGVhcmxpZXN0IGtub3duIHNwZWNpbWVuIG9mIGlyb24gcGxvdWdoc2hhcmUgY29tZXMgZnJvbSBHYW53YXJpYSBpbiBEaXN0cmljdCBHb3Jha2hwdXIsIFV0dGFyIFByYWRlc2ggYW5kIGRhdGVzIGZyb20gY2EuIDcwMCBCQy4gVGhlIGZpcnN0IGRvY3VtZW50ZWQgY29pbmFnZSBpcyBkZWVtZWQgdG8gc3RhcnQgd2l0aCAnUHVuY2ggTWFya2VkJyBjb2lucyBpc3N1ZWQgYmV0d2VlbiB0aGUgN3RoLTZ0aCBjZW50dXJ5IEJDIGFuZCAxc3RjZW50dXJ5IEFELiBJdCB3YXMgdGhlIEluZG8gR3JlZWtzIHdobyBydWxlZCBhIGxhcmdlIHBhcnQgb2YgTm9ydGgtIFdlc3Rlcm4gSW5kaWEgYXJvdW5kIDIwMCBCQyAoMjIxOCB5ZWFycyBhZ28pIHRoYXQgZmlyc3QgaW50cm9kdWNlZCBjb2lucyBtYWRlIG9mIFB1cmUgR29sZCBpbiBJbmRpYSBiZWZvcmUgS3VzaGFucy4gVGhlcmVmb3JlLCAgYWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiB0aGUgY29ycmVjdCBjaHJvbm9sb2dpY2FsIG9yZGVyIG9mIHRoZSBldmVudCBhcHBlYXJlZCBpbiBJbmRpYSBpcyA0LCAzLCAyIGFuZCAxLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 3, 4, 1, 2 ",
        "option2" : " 3, 4, 2, 1",
        "option3" : " 4, 3, 1, 2 ",
        "option4" : " 4, 3, 2, 1"
      }
    },
    {
      "index" : 36,
      "question" : "Assertion (A): According to Ashoka's edicts social harmonyamong the people was more important than religiousdevotion.Reason (R): He spread ideas of equity instead of promotionof religion. ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNg==",
      "description" : "QXNob2thJ3MgZWRpY3RzIHB1dCBzdHJlc3Mgb24gc29jaWFsIGhhcm1vbnkgYW1vbmcgdGhlIHBlb3BsZSBieSBzcHJlYWRpbmcgaWRlYXMgb2YgZXF1aXR5IGluc3RlYWQgb2YgcHJvbW90aW9uIG9mIHJlbGlnaW9uLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 37,
      "question" : "Which of the following pairs are correctly matched?   1. Lothal : Ancient dockyard2. Sarnath : First Sermon of Buddha3. Rajgir : Lion capital of Ashoka4. Nalanda : Great seat of Buddhist learningSelect the correct answer using the codes given below:Codes:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNw==",
      "description" : "TGlvbiBjYXBpdGFsIG9mIEFzaG9rYSBpcyBpbiBTYXJhbmF0aCAobm90IFJhamdpciku",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 3 and 4",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 1 an 2"
      }
    },
    {
      "index" : 38,
      "question" : "Which one of the following ancient Indian records is theearliest royal order to preserve food-grains to be utilisedduring the crises in the country?                                ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzOA==",
      "description" : "VGhlIGVhcmxpZXN0IGtub3duIGNvcHBlci1wbGF0ZSBjYWxsZWQgU29oZ2F1cmEgaXMgYSBNYXVyeWEgcmVjb3JkIHRoYXQgbWVudGlvbnMgZmFtaW5lIHJlbGllZiBlZmZvcnRzLiBJdCBpcyBvbmUgb2YgdGhlIHZlcnkgZmV3IHByZS1Bc2hva2EgQnJhaG1pIGluc2NyaXB0aW9ucyBpbiBJbmRpYS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sohgaura Copper-plate",
        "option2" : " Rummindei Pillar-edict of Ashoka",
        "option3" : " Prayaga-prasasti",
        "option4" : " Mehrauli Pillar inscription of Chandra"
      }
    },
    {
      "index" : 39,
      "question" : "The concept of Eight fold path forms the theme of:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzOQ==",
      "description" : "VGhlIE5vYmxlIEVpZ2h0IGZvbGQgUGF0aCwgaXMgb25lIG9mIHRoZSBwcmluY2lwYWwgdGVhY2hpbmdzIG9mIHRoZSBCdWRkaGEsIHdobyBkZXNjcmliZWQgaXQgYXMgdGhlIHdheSBsZWFkaW5nIHRvIHRoZSBjZXNzYXRpb24gb2Ygc3VmZmVyaW5nIChEdWtraGEpIGFuZCBhdHRhaW5tZW50IG9mIHNlbGYtYXdha2VuaW5nLiBJbiBCdWRkaGlzdCBzeW1ib2xpc20sIHRoZSBOb2JsZSBFaWdodCBmb2xkIFBhdGggaXMgb2Z0ZW4gcmVwcmVzZW50ZWQgYnkgbWVhbnMgb2YgdGhlIERoYXJtYSB3aGVlbCAoRGhhcm1hY2hha3JhKSwgd2hvc2UgZWlnaHQgc3Bva2VzIHJlcHJlc2VudCB0aGUgZWlnaHQgZWxlbWVudHMgb2YgdGhlIHBhdGguIEVpZ2h0IGZvbGQgcGF0aCBpbmNsdWRlcyByaWdodCB1bmRlcnN0YW5kaW5nLCByaWdodCBzcGVlY2gsIHJpZ2h0IGxpdmVsaWhvb2Q7IHJpZ2h0IG1pbmRmdWxuZXNzLCByaWdodCB0aG91Z2h0LCByaWdodCBhY3Rpb24sIHJpZ2h0IGVmZm9ydCBhbmQgcmlnaHQgY29uY2VudHJhdGlvbi4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dipavamsa",
        "option2" : " Divyavadana",
        "option3" : " Mahaparinibban",
        "option4" : " Dharma Chakara Pravartana Sutta"
      }
    },
    {
      "index" : 40,
      "question" : "The given map relates to :                                               ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0MA==",
      "description" : "VGhlIGdpdmVuIG1hcCBpcyByZWxhdGVkIHRvIHRoZSByZWlnbiBvZiBBc2hva2EgdG93YXJkcyBlbmQgb2YgaGlzIHJ1bGUuIEFzaG9rYSAoMzA0LTIzMiBCQyksIHBvcHVsYXJseSBrbm93biBhcyBBc2hva2EgdGhlIEdyZWF0LCB3YXMgYW4gSW5kaWFuIGVtcGVyb3Igb2YgdGhlIE1hdXJ5YSBEeW5hc3R5IHdobyBydWxlZCBvdmVyIHRoZSBJbmRpYW4gc3ViY29udGluZW50IGZyb20gMjY5IEJDIHRvIDIzMiBCQy4gSGlzIGVtcGlyZSBzdHJldGNoZWQgZnJvbSBwcmVzZW50LWRheSBQYWtpc3RhbiwgQWZnaGFuaXN0YW4gaW4gdGhlIHdlc3QsIHRvIHRoZSBwcmVzZW50LWRheSBCYW5nbGFkZXNoIGFuZCB0aGUgSW5kaWFuIHN0YXRlIG9mIEFzc2FtIGluIHRoZSBlYXN0LCBhbmQgYXMgZmFyIHNvdXRoIGFzIG5vcnRoZXJuIEtlcmFsYSBhbmQgQW5kaHJhLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kanishka at the time of his death.",
        "option2" : " Samudragupta after the close of his South Indian campaign.",
        "option3" : " Ashoka towards close of his reign.",
        "option4" : " Empire of Thaneswar on the eve of Harsha's accession."
      }
    },
    {
      "index" : 41,
      "question" : "From the third century AD when the Hun invasion endedthe Roman Empire, the Indian merchants relied more andmore on the: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0MQ==",
      "description" : "QWZ0ZXIgdGhlIDNyZCBjZW50dXJ5IEFEIFJvbWFuIGVtcGlyZSBjYW1lIHRvIGFuIGVuZC4gSW5kaWFuIG1lcmNoYW50cyBtZWFud2hpbGUgIGhhZCBiZWd1biB0byByZWx5IG1vcmUgaGVhdmlseSBvbiB0aGUgc291dGgtZWFzdCBBc2lhbiBUcmFkZS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " African trade",
        "option2" : " West-European trade",
        "option3" : " South-East Asian trade",
        "option4" : " Middle-Eastern trade"
      }
    },
    {
      "index" : 42,
      "question" : "The following persons came to India at one time or another:1. Fa-Hien 2. I-Tsing3. Megasthanese 4. Hieun-TsangThe correct chronological sequence of their visits is:(a) 3, 1, 2, 4 (b) 3, 1, 4, 2                    city state of India in the 6th century B.C. ?               ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Mg==",
      "description" : "RmEtSGllbi00MDUtNDExIENFOyBJLVRzaW5nLTY3MS02OTUgQ0U7IE1lZ2FzdGhhbmVzZSAtIDMwMi0yOTggQkM7IEhpZXVuLVRzYW5nLTYzMC02NDVDRQ==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Gandhar ",
        "option2" : " Kamoj",
        "option3" : " 1, 3, 2, 4 ",
        "option4" : " 1, 3, 4, 2 43. Which one of the following was initially the most powerful"
      }
    },
    {
      "index" : 44,
      "question" : "The Indo-Laws Kingdom set up in north Afghanistan in thebeginning of the second century B.C. was:              ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0NA==",
      "description" : "QmFjdHJpYSB3YXMgdGhlIGFuY2llbnQgY2l2aWxpemF0aW9ucyBvZiBJcmFuaWFuIHBlb3BsZXMuIEFuY2llbnQgQmFjdHJpYSB3YXMgbG9jYXRlZCBiZXR3ZWVuIHRoZSBIaW5kdSBLdXNoIG1vdW50YWluIHJhbmdlIGFuZCB0aGUgQW11IERhcnlhIHJpdmVyLCBjb3ZlcmluZyB0aGUgZmxhdCByZWdpb24gdGhhdCBzdHJhZGRsZXMgbW9kZXJuLWRheSBBZmdoYW5pc3RhbiBhbmQgVGFqaWtpc3Rhbi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bactria ",
        "option2" : " Scythia",
        "option3" : " Zedrasia ",
        "option4" : " Aria"
      }
    },
    {
      "index" : 45,
      "question" : "The term 'Aryan' denotes:                                             ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0NQ==",
      "description" : "QXJ5YW4gaXMgaW4gZmFjdCBhIGxpbmd1aXN0aWMgdGVybSBpbmRpY2F0aW5nIGEgc3BlZWNoIGdyb3VwIG9mIEluZG8tRXVyb3BlYW4gb3JpZ2luLCBhbmQgaXMgbm90IGFuIGV0aG5pYyB0ZXJtLiBFIEIgRCBfOCAzNCAyIEFuY2llbnQgSGlzdG9yeSAg",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " an ethnic group ",
        "option2" : " a nomadic people",
        "option3" : " a speech group ",
        "option4" : " a superior race"
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following ports handled the North Indiantrade during the Gupta period? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Ng==",
      "description" : "VGFtcmFsaXB0YSBvciBUYW1yYWxpcHRpIHdhcyB0aGUgbmFtZSBvZiBhbiBhbmNpZW50IGNpdHkgb24gdGhlIEJheSBvZiBCZW5nYWwgY29ycmVzcG9uZGluZyB3aXRoIFRhbWx1ayBpbiBtb2Rlcm4tZGF5IEluZGlhLiBUYW1yYWxpcHRhIG1heSBoYXZlIGJlZW4gb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCB1cmJhbiBjZW50cmVzIG9mIHRyYWRlIGFuZCBjb21tZXJjZSBvZiBlYXJseSBoaXN0b3JpYyBJbmRpYSwgdHJhZGluZyBhbG9uZyB0aGUgU2lsayBSb2FkIHdpdGggQ2hpbmEsIGJ5IFV0dGFyYXBhdGhhLCB0aGUgbm9ydGhlcm4gaGlnaCByb2FkLCB0aGUgbWFpbiB0cmFkZSByb3V0ZSBpbnRvIHRoZSBNaWRkbGUgRWFzdCBhbmQgRXVyb3BlOyBhbmQgYnkgc2VhZmFyaW5nIHJvdXRlcyB0byBCYWxpLCBKYXZhIGFuZCB0aGUgRmFyIEVhc3Qu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tamralipti ",
        "option2" : " Broach",
        "option3" : " Kalyan ",
        "option4" : " Cambray"
      }
    },
    {
      "index" : 47,
      "question" : "Assertion (A): The Aham and Puram poems of the PadinenKilukanakku group formed a continuation of the Sangamcomposition.Reason (R): They were included under the post-Sangamworks as against the Sangam works proper.               ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Nw==",
      "description" : "VGhlIGRpZGFjdGljIHdvcmtzIG9mIFNhbmdhbSBwZXJpb2QgYXJlIGNhbGxlZCBLaWx1a2FuYWtrdSAoMTggbWlub3IgZ3JvdXBzKSBjb25zaXN0aW5nIG9mIFRpcnVrdXJyYWwgYW5kIE5hbGFkaXlhci4gVGhlIEFoYW0gYW5kIFB1cmFtIHBvZW1zIG9mIHRoZSBLaWx1a2FuYWtrdSBncm91cCB3ZXJlIGNvbXBvc2VkIGluIHBvc3QtU2FuZ2FtIHBlcmlvZC4gVGhhdCdzIHdoeSBSIGV4cGxhaW5zIEEu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 48,
      "question" : "Assertion (A): The emphasis of Jainism on non-violence(ahimsa) prevented agriculturalists from embracing Jainism.Reason (R): Cultivation involved killing of insects and pests.",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0OA==",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSB0cnVlIGFuZCB0aGUgcmVhc29uIGlzIGNvcnJlY3QgZXhwbGFuYXRpb24gb2YgYXNzZXJ0aW9uLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 49,
      "question" : "Assertion (A): The origin of feudal system in ancient Indiacan be traced to military campaigns.Reason (R): There was considerable expansion of the feudalsystem during the Gupta period. ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0OQ==",
      "description" : "Qm90aCB0aGUgc3RhdGVtZW50cyBhcmUgdHJ1ZSBidXQgZG8gbm90IGV4cGxhaW4gZWFjaCBvdGhlci4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 50,
      "question" : "Assertion (A): Ashoka annexed Kalinga to the MauryanEmpire.Reason (R): Kalinga controlled the land and sea routes toSouth India. ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1MA==",
      "description" : "QXNob2thIGFubmV4ZWQgS2FsaW5nYSB0byB0aGUgTWF1cnlhbiBlbXBpcmUgaW4gMjYxIEJDLiBUaG91Z2ggQXNob2thIGFiYW5kb25lZCB0aGUgcG9saWN5IG9mIHBoeXNpY2FsIG9jY3VwYXRpb24gaW4gZmF2b3VyIG9mIHBvbGljeSBvZiBjdWx0dXJhbCBjb25xdWVzdCBhZnRlciB0aGUgS2FsaW5nYSBXYXIsIHlldCBoZSByZXRhaW5lZCBLYWxpbmdhIGFmdGVyIGl0cyBjb25xdWVzdCBhbmQgaW5jb3Jwb3JhdGVkIGl0IGludG8gaGlzIGVtcGlyZS4gVGh1cyBSIGV4cGxhaW5zIEEu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 51,
      "question" : "The practice of military governorship was first introducedin India by the: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1MQ==",
      "description" : "R3JlZWtzIGZpcnN0IGludHJvZHVjZWQgbWlsaXRhcnkgZ292ZXJub3JzaGlwIGluIEluZGlhLiBUaGV5IGFwcG9pbnRlZCB0aGVpciBHb3Zlcm5vcnMgY2FsbGVkIHN0cmF0ZWdvcy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Greeks ",
        "option2" : " Shakas",
        "option3" : " Parthians ",
        "option4" : " Mughals"
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following dynasties was ruling over NorthIndia at the time of Alexander's invasion? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Mg==",
      "description" : "QWxleGFuZGVyIGludmFkZWQgSW5kaWEgaW4gMzI2IEJDLiBOYW5kYXMgd2VyZSBydWxpbmcgb3ZlciBJbmRpYSBhdCB0aGF0IHRpbWUuIFRoZSBjaHJvbm9sb2dpY2FsIG9yZGVyIG9mIHRoZXNlIDQgZHluYXN0aWVzIHdhczogTmFuZGEsIE1hdXJ5YSwgU3VuZ2EgYW5kIEthbnZhcy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nanda ",
        "option2" : " Maurya",
        "option3" : " Sunga ",
        "option4" : " Kanva"
      }
    },
    {
      "index" : 53,
      "question" : "Hoysala monuments are found in: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Mw==",
      "description" : "VGhlIGNhcGl0YWwgb2YgdGhlIEhveXNhbGFzIHdhcyBpbml0aWFsbHkgbG9jYXRlZCBhdCBCZWx1ciBidXQgd2FzIGxhdGVyIG1vdmVkIHRvIEhhbGViaWQu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hampi and Hosper",
        "option2" : " Halebid and Belur",
        "option3" : " Mysore and Bangalore",
        "option4" : " Sringeri and Dharwar"
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following pairs is correctly matched?",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1NA==",
      "description" : "UGFpbnRlZCBHcmV5d2FyZSBiZWxvbmdlZCB0byBsYXRlciBWZWRpYyBwZXJpb2QgKDEwMDAtIDYwMEJDKS4gQWphbnRhIHBhaW50aW5ncyBiZWxvbmcgdG8gdGhlIEd1cHRhIHBlcmlvZC4gUGFoYXJpIFNjaG9vbCBjYW1lIGludG8gZXhpc3RlbmNlIGR1cmluZyB0aGUgTXVnaGFsIHBlcmlvZC4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The Harappan civilization - Painted Greyware",
        "option2" : " The Kushans - Gandhra School of Art",
        "option3" : " The Mughals - Ajanta Paintings",
        "option4" : " The Marathas - Pahari School of Painting"
      }
    },
    {
      "index" : 55,
      "question" : "Assertion (A): Harshavardhana convened the PrayagAssembly.Reason (R): He wanted to popularize only the Mahayanaform of Buddhism. ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1NQ==",
      "description" : "VG8gcG9wdWxhcml6ZSB0aGUgTWFoYXlhbmEgZm9ybSBvZiBCdWRkaGlzbS4gSGFyc2hhdmFyZGhhbmEgY29udmVuZWQgYW4gYXNzZW1ibHkgYXQgS2FubmF1ai4gVGhlIFByYXlhZyBhc3NlbWJseSB3YXMgY29udmVuZWQgdG8gcG9wdWxhcml6ZSBoaW1zZWxmLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both  A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 56,
      "question" : "Which one of the Chola kings conquered Ceylon?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Ng==",
      "description" : "SW4gMTAxNywgUmFqZW5kcmEgY29ucXVlcmVkIENleWxvbiAoU3JpbGFua2EpLiBFYXJsaWVyIFJhamFyYWphIEkgY29ucXVlcmVkIG9ubHkgaGFsZiBvZiBpdC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Aditya-I ",
        "option2" : " Rajaraja-I",
        "option3" : " Rajendra ",
        "option4" : " Vijayalaya"
      }
    },
    {
      "index" : 57,
      "question" : "Who among the following presided over the BuddhistCouncil held during the reign of Kanishka atKashmir ? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Nw==",
      "description" : "VmFzdW1pdHJhIGFuZCBBc2hhdmFnaG9zaCB0b2dldGhlciBwcmVzaWRlZCBvdmVyIHRoZSBmb3VydGggY291bmNpbC4gSW4gdGhpcyBjb3VuY2lsIEJ1ZGRoaXN0cyB3ZXJlIGRpdmlkZWQgaW50byBNYWhheWFuaXN0cyBhbmQgSGluYXlhbmlzdHMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Parsva ",
        "option2" : " Nagarjuna",
        "option3" : " Sudraka ",
        "option4" : " Vasumitra"
      }
    },
    {
      "index" : 58,
      "question" : "Which one of the following animals was not representedseals and terracotta art of the Harappan culture?    ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1OA==",
      "description" : "Q293LCBjYW1lbCwgaG9yc2UgYW5kIGxpb24gd2VyZSBub3QgZGVwaWN0ZWQgb24gc2VhbHMuIFVuaWNvcm4gKGJ1bGwpIHdhcyB0aGUgYW5pbWFsIG1vc3QgY29tbW9ubHkgcmVwcmVzZW50ZWQgb24gdGhlIHNlYWxzLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Cow ",
        "option2" : " Elephant",
        "option3" : " Rhinoceros ",
        "option4" : " Tiger"
      }
    },
    {
      "index" : 59,
      "question" : "Match List-I (Ancient site) with List-II (Archaeologicalfinding) and select the correct answer using the codes givenbelow the lists: List-I List-II(Ancient site) (Archaeological finding)A. Lothal 1. Ploughed fieldB. Kalibangan 2. DockyardC. Dholavira 3. Terrcotta replica of a ploughD. Banawali 4. An inscription comprising tenlarge sized signs of theHarappan scriptCodes:",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1OQ==",
      "description" : "VGhlIGNvcnJlY3QgbWF0Y2ggaXMgb3B0aW9uIChiKS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B - 2; C - 3; D - 4",
        "option2" : " A - 2; B - 1; C - 4; D - 3",
        "option3" : " A - 1; B - 2; C - 4; D - 3",
        "option4" : " A - 2; B - 1; C - 3; D - 4"
      }
    },
    {
      "index" : 60,
      "question" : "Which one of the following statements is not correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2MA==",
      "description" : "VGhlIFN0YXR1ZSBvZiBHb21hdGVzaHdhcmEgd2FzIGJ1aWx0IGluIGRlZmVyZW5jZSB0byBKYWluIGRlaXR5IEJhaHViYWxpLCBJdCBkb2VzIG5vdCByZXByZXNlbnQgbGFzdCBUaXJ0aGFua2FyYSBvZiBKYWlucy4gSW5kaWEncyBsYXJnZXN0IEJ1ZGRoaXN0IG1vbmFzdGVyeSBpcyBUYXdhbmcgTW9uYXN0ZXJ5IGxvY2F0ZWQgaW4gQXJ1bmFjaGFsIFByYWRlc2guIEl0IGlzIHRoZSBzZWNvbmQgbGFyZ2VzdCBpbiB0aGUgd29ybGQgYWZ0ZXIgdGhlIFBvdGFsYSBQYWxhY2UgaW4gTGhhc2EsIFRpYmV0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The statue of Gomateshwara at Shravana Belagola represents the last Tirthankara of Jains.",
        "option2" : " India's largest Buddhist monastery is in Arunachal Pradesh.",
        "option3" : " Khajuraho temples were built under Chandela kings.",
        "option4" : " Hoysaleswara temple is dedicated to Siva."
      }
    },
    {
      "index" : 61,
      "question" : "In ancient Indian Buddhist monasteries, a ceremony calledPavarana used to be held. It was the: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2MQ==",
      "description" : "UGF2YXJhbmEgaXMgYSBCdWRkaGlzdCBob2x5IGRheSBjZWxlYnJhdGVkIG9uIHRoZSBmdWxsIG1vb24gb2YgdGhlIGVsZXZlbnRoIGx1bmFyIG1vbnRoLiBJdCBtYXJrcyB0aGUgZW5kIG9mIHRoZSBtb250aCBvZiBWYXNzYSwgc29tZXRpbWVzIGNhbGxlZCAiQnVkZGhpc3QgTGVudC4iIFRoaXMgZGF5IG1hcmtzIHRoZSBlbmQgb2YgdGhlIHJhaW55IHNlYXNvbiBpbiBzb21lIEFzaWFuIGNvdW50cmllcyBsaWtlIFRoYWlsYW5kLCB3aGVyZSBUaGVyYXZhZGEgQnVkZGhpc20gaXMgcHJhY3RpY2VkLiBPbiB0aGlzIGRheSwgZWFjaCBtb25rIChQYWxpOiBiaGlra2h1KSBtdXN0IGNvbWUgYmVmb3JlIHRoZSBjb21tdW5pdHkgb2YgbW9ua3MgKFNhbmdoYSkgYW5kIGF0b25lIGZvciBhbiBvZmZlbnNlIGhlIG1heSBoYXZlIGNvbW1pdHRlZCBkdXJpbmcgdGhlIFZhc3NhLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " occasion to elect the Sanghparinayaka and two speakers one on Dhamma and the other on Vinaya",
        "option2" : " confession by monks of their offences committed during their stay in the monasteries during the rainy season",
        "option3" : " ceremony of initiation of new person into the Buddhist Sangha in which the head is shaved and when yellow robes are offered",
        "option4" : " gathering of Buddhist monks on the next day to the"
      }
    },
    {
      "index" : 62,
      "question" : "The ancient Indian play Mudrarakshasa of Visakhadutt hasits subject on: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Mg==",
      "description" : "VGhlIE11ZHJhcmFrc2hhc2EgKCJUaGUgU2lnbmV0IG9mIHRoZSBNaW5pc3RlciIpLCBhIGhpc3RvcmljYWwgcGxheSBpbiBTYW5za3JpdCBieSBWaXNoYWtoYWRhdHRhICg0dGggY2VudHVyeSBDRSkgbmFycmF0ZXMgdGhlIGFzY2VudCBvZiB0aGUga2luZyBDaGFuZHJhZ3VwdGEgTWF1cnlhIHRvIHBvd2VyIGluIE5vcnRoZXJuIEluZGlhLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a conflict between Gods and Demons of ancient Hindu lore",
        "option2" : " a romantic story of an Aryan prince and a tribal woman",
        "option3" : " the story of the power struggle between two Aryan .",
        "option4" : " the court intrigues at the time of Chandragupta"
      }
    },
    {
      "index" : 63,
      "question" : "Emperor Harsha's southward march was stopped on theNarmada river by: ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Mw==",
      "description" : "RW1wZXJvciBIYXJzaGEncyBzb3V0aHdhcmQgbWFyY2ggd2FzIHN0b3BwZWQgb24gdGhlIE5hcm1hZGEgcml2ZXIgYnkgUHVsYWtlc2luIElJLCB0aGUgQ2hhbHVreWEga2luZyBvZiBWYXRhcGkgaW4gbm9ydGhlcm4gTXlzb3JlLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pulakesin-I ",
        "option2" : " Pulakesin-II",
        "option3" : " Vikramaditya-I ",
        "option4" : " Vikramaitya-II"
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements:1. The Cholas defeated Pandya and Chera rulers andestablished their domination over peninsular India inthe early medieval times.2. The Cholas sent an expedition against Sailendra empireof South-East Asia and conquered some of the areas.Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2NA==",
      "description" : "VGhlIENob2xhIGtpbmdkb20gb2YgdGhlIFNhbmdhbSBwZXJpb2QgZXh0ZW5kZWQgZnJvbSBtb2Rlcm4gVGlydWNoaSBkaXN0cmljdCB0byBzb3V0aGVybiBBbmRocmEgUHJhZGVzaC4gVGhlaXIgY2FwaXRhbCB3YXMgZmlyc3QgbG9jYXRlZCBhdCBVcmFpeXVyIGFuZCB0aGVuIHNoaWZ0ZWQgdG8gUHVoYXIuIEthcmlrYWxhIHdhcyBhIGZhbW91cyBraW5nIG9mIHRoZSBTYW5nYW0gQ2hvbGFzLiBQYXR0aW5hcHBhbGFpIHBvcnRyYXlzIGhpcyBlYXJseSBsaWZlIGFuZCBoaXMgbWlsaXRhcnkgY29ucXVlc3RzLiBJbiB0aGUgQmF0dGxlIG9mIFZlbm5pIGhlIGRlZmVhdGVkIHRoZSBtaWdodHkgY29uZmVkZXJhY3kgY29uc2lzdGluZyBvZiB0aGUgQ2hlcmFzLCBQYW5keWFzIGFuZCBlbGV2ZW4gbWlub3IgY2hpZWZ0YWlucy4gVGhlIENob2xhIGVtcGVyb3IgbGF1bmNoZWQgYSBzdWNjZXNzZnVsIG5hdmFsIGV4cGVkaXRpb24gYWdhaW5zdCB0aGUgc2FpbGVuZHJhIGtpbmdkb20u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 65,
      "question" : "Mrichchhakatika' an ancient Indian book written byShudraka deals with: ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2NQ==",
      "description" : "TXJpY2hjaGhha2F0aWthIChUaGUgQ2xheSBDb3VydCkgaXMgYSBTYW5za3JpdCBwbGF5IHdyaXR0ZW4gYnkgU2h1ZHJha2EgaW4gMm5kIEMgQkMuIEl0IGlzIGFib3V0IGEgeW91bmcgbWFuIG5hbWVkIENoYXJ1ZGF0dGEsIGFuZCBoaXMgbG92ZSBmb3IgVmFzYW50YXNlbmEsIGEgcmljaCBjb3VydGVzYW4u",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the love affair of a rich merchant with the daughter of a courtesan",
        "option2" : " the victory of Chandragupta II over the Shaka Kshatrapas of western India",
        "option3" : " the military expeditions and exploits of Samudragupta",
        "option4" : " the love affairs between a Gupta king and a princess of"
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements: 1. Vardhaman Mahavira's mother was the daughter ofLichchhavi chief Chetaka2. Gautama Buddha's mother was a princess from theKoshalan dynasty3. Parshvanatha, the twenty-third Tirthankara, belongedto BenarasWhich of these statements is/are correct?",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Ng==",
      "description" : "VmFyZGhhbWFuIE1haGF2aXJhJ3MgbW90aGVyLCBUcmlzaGFsYSB3YXMgdGhlIHNpc3RlciAobm90IHRoZSBkYXVnaHRlcikgb2YgTGljaGNoaGF2aSBjaGllZiBDaGV0YWthLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2",
        "option3" : " 2 and 3 ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements: 1. The last Mauryan ruler, Brihadratha was assassinatedby his commander-in-chief, Pushyamitra Sunga.EBD_8342Ancient History  2. The last Sunga king, Devabhuti was assassinated byhis Brahmana Minister Vasudeva Kanva who usurpedthe throne.3. The last ruler of the Kanva dynasty was deposed bythe Andhras.Which of these statements is/are correct?",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Nw==",
      "description" : "QWxsIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuIFRoZSBsYXN0IE1hdXJ5YW4gcnVsZXIsIEJyaWhhZHJhdGhhIHdhcyBhc3Nhc3NpbmF0ZWQgYnkgaGlzIGNvbW1hbmRlci1pbi1jaGllZiwgUHVzaHlhbWl0cmEgIFN1bmdhIGluICAxODUgQkMuICBUaGUgbGFzdCAgcnVsZXIgIG9mICBLYW52YSBkeW5hc3R5LCBTdXNoYXJtYSB3YXMgZGVwb3NlZCBieSB0aGUgQW5kaHJhcyBhbmQgU2F0YXZhaGFuYSBkeW5hc3R5IGNhbWUgaW50byBiZWluZy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " Only 2",
        "option3" : " Only 3 ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following statements:1. The Chinese pilgrim Fa-Hien attended the fourth GreatBuddhist Council held by Kanishka.2. The Chinese pilgrim Hiuen-Tsang met Harsha andfound him to be antagonistic to Buddhism.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2OA==",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIGZvdXJ0aCBCdWRkaGlzdCBDb3VuY2lsIHdhcyBoZWxkIGluIEthc2htaXIgZHVyaW5nIHRoZSByZWlnbiBvZiBLYW5pc2hrYSB1bmRlciB0aGUgcHJlc2lkZW50c2hpcCBvZiBWYXN1bWl0cmEgYW5kIEFzaHZhZ2hvc2guIEZhLUhpZW4gdmlzaXRlZCBJbmRpYSBkdXJpbmcgdGhlIHJlaWduIG9mIENoYW5kcmEgR3VwdGEtSUkgYW5kIG5vdCBkdXJpbmcgS2FuaXNoa2EncyByZWlnbi4gU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IGFzIEhhcnNoYSB3YXMgbm90IGFudGFnb25pc3RpYyB0byBCdWRkaGlzbSB3aGVuIEhpdWVuIC1Uc2FuZyBtZXQgaGltLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 69,
      "question" : "With reference to ancient Jainism, which one of the followingstatements is correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2OQ==",
      "description" : "SmFpbmlzbSBzcHJlYWQgaW4gU291dGggSW5kaWEgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgQmhhZHJhYmFodSAobm90IFN0aGFsYWJhaHUpLiBUaGUgSmFpbmFzIHdobyByZW1haW5lZCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiBCaGFkcmFiYWh1IHdlcmUgY2FsbGVkIERpZ2FtYmFyYXMgKG5vdCBTaHZldGFtYmFyYXMpIGFmdGVyIHRoZSBmaXJzdCBjb3VuY2lsIGhlbGQgYXQgUGF0YWxpcHV0cmEgKG1vZGVybiBQYXRuYSkgYnkgU3RodWxiYWh1Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jainism was spread in South India under the leadership of Sthalabahu.",
        "option2" : " The Jainas who remained under the leadership of Bhadrabahu were called Shvetambaras after the council held at Pataliputra.",
        "option3" : " Jainism enjoyed the patronage of the Kalinga king Kharaavela in the first century BC.",
        "option4" : " In the initial stage of Jainism, the Jainas worshipped"
      }
    },
    {
      "index" : 70,
      "question" : "Which one of the following four Vedas contains an accountof magical charms and spells? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3MA==",
      "description" : "QXRoYXJ2YXZlZGEgaXMgYSBib29rIG9mIG1hZ2ljYWwgZm9ybXVsYS4gSXQgY29udGFpbnMgY2hhcm1zIGFuZCBzcGVsbHMgdG8gd2FyZC1vZmYgZXZpbCBhbmQgZGlzZWFzZS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rigveda ",
        "option2" : " Yajurveda",
        "option3" : " Atharvaveda ",
        "option4" : " Samavea"
      }
    },
    {
      "index" : 72,
      "question" : "Who among the following laid the foundation ofRashtrakuta Empire? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Mg==",
      "description" : "RGFudGlkdXJnYSwgYSBmZXVkYXRvcnkgb2YgQ2hhbHVreWFzLCBmb3VuZGVkIHRoZSBSYXN0cmFrdXRhIGVtcGlyZSBpbiA3NTMgQyBFIChBRCkgd2l0aCB0aGVpciBjYXBpdGFsIGF0IE1hbnlha2hldC4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amostghavarsha I ",
        "option2" : " Dantidurga",
        "option3" : " Dhruva ",
        "option4" : " Krishna I"
      }
    },
    {
      "index" : 73,
      "question" : "Between which of the following was the ancient town ofTakshasila located? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Mw==",
      "description" : "U2luZGh1IHdhcyB0aGUgb2xkIG5hbWUgb2Ygcml2ZXIgSW5kdXMgYW5kIFZpdGFzdGEgd2FzIHRoZSBvbGQgbmFtZSBvZiBSaXZlciBKaGVsdW0uIEluIHBlcnNlbnQgdGltZSBUYWtzaGFzaGlsYSBzaXR1YXRlZCBpbiBQYWtpc3Rhbi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Indus and Jhelum ",
        "option2" : " Jhelum and Chena",
        "option3" : " Chenab and Ravi ",
        "option4" : " Ravi an Beas"
      }
    },
    {
      "index" : 74,
      "question" : "With reference to the invaders in ancient India, which oneof the following is the correct chronological order?",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3NA==",
      "description" : "QWxleGFuZGVyIChHcmVlaywgMzI2IEIuQy5FLik7IFNha2FzICg5MCBCLkMuRS4pOyBLdXNoYW5hcyAoNDUgQy5FLik=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Greeks-Sakas-Kushanas",
        "option2" : " Greeks- Kushanas-Sakas",
        "option3" : " Sakas-Greeks- Kushanas",
        "option4" : " Sakas-Kushanas-Greeks"
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements: 1. The Ikshvaku rulers  of  Southern India wereantagonistic towards Buddhism.2. The Pala rulers of Eastern India were patrons ofBuddhism.Which of the statement(s) given above is/ are correct?",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3NQ==",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIG1vc3Qgb2YgdGhlIGluc2NyaXB0aW9ucyBvZiB0aGUgQW5kaHJhIElrc2h2YWt1IHBlcmlvZCByZWNvcmQgZWl0aGVyIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIEJ1ZGRoaXN0IHZpaGFyYXMgb3IgdGhlIGdpZnRzIG1hZGUgdG8gdGhlbSB3aGljaCBzaG93cyB0aGF0IHRoZSBJa3NodmFrdSBydWxlcnMgb2YgU291dGhlcm4gSW5kaWEgd2VyZSBzdXBwb3J0ZXJzIG9mIEJ1ZGRoaXNtLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 76,
      "question" : "The Allahabad Pillar inscription is associated with whichone of the following? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Ng==",
      "description" : "SXQgd2FzIHdyaXR0ZW4gYnkgU2FtdWRyYWd1cHRhJ3MgY291cnQgcG9ldCBIYXJpc2VuYS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mahapadma Nanda ",
        "option2" : " Chandragupta Maurya",
        "option3" : " Ashoka ",
        "option4" : " Samuragupta"
      }
    },
    {
      "index" : 77,
      "question" : "What does Baudhayan theorem (Baudhayan Sulva Sutras)relate to? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Nw==",
      "description" : "VGhpcyBpcyBzYW1lIGFzIHRoZSBQeXRoYWdvcmFzIHRoZW9yZW0u",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lengths of sides of a right angled triangle",
        "option2" : " Calculation of the value of pi",
        "option3" : " Logarithmic calculations",
        "option4" : " Normal distribution curve"
      }
    },
    {
      "index" : 78,
      "question" : "Anekantavada is a core theory and philosophy of whichone of the following? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3OA==",
      "description" : "VGhlIEphaW5hIG1ldGFwaHlzaWNzIGlzIHJlYWxpc3RpYyBhbmQgcmVsYXRpdmlzdGljIHBsdXJhbGlzbS4gSXQgaXMgY2FsbGVkIEFuZWthbnRhdmFkYSBvciB0aGUgZG9jdHJpbmUgb2YgJ21heW5lc3Mgb2YgcmVhbGl0eScuIE1hdHRlciBhbmQgc3Bpcml0IGFyZSByZWdhcmRlZCBhcyBzZXBhcmF0ZSBhbmQgaW5kZXBlbmRlbnQgcmVhbGl0aWVzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism ",
        "option2" : " Jainism",
        "option3" : " Sikkhism ",
        "option4" : " Vaishnavism"
      }
    },
    {
      "index" : 79,
      "question" : "There are only two known examples of cave paintings ofthe Gupta period in ancient India. One of these is paintingsof Ajanta caves. Where is the other surviving example ofGupta paintings? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3OQ==",
      "description" : "QSBjb3BwZXIgcGxhdGUgaW5zY3JpcHRpb24gb2YgTWFoYXJhamEgU3ViYW5kaHUsIHJlY29yZGluZyBoaXMgZG9uYXRpb24gZm9yIHRoZSByZXBhaXIgb2YgdGhlIHZpaGFyYSB3YXMgZm91bmQgYXQgdGhlIHNpdGUgb2YgQ2F2ZSAyLiBUaG91Z2gsIHRoZSBkYXRlIG9mIHRoZSBCYWdoIGluc2NyaXB0aW9uIGlzIG1pc3NpbmcsIHRoZSBCYWR3YW5pIGNvcHBlciBwbGF0ZSBpbnNjcmlwdGlvbiBpcyBkYXRlZCBpbiB0aGUgeWVhciAoR3VwdGEgZXJhKSAxNjcgKDQ4Nyku",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bagh caves ",
        "option2" : " Ellora caves",
        "option3" : " Lomas Rishi cave ",
        "option4" : " Nasik caves"
      }
    },
    {
      "index" : 80,
      "question" : "India maintained its early cultural contacts and trade linkswith Southeast Asia across the Bay of Bengal. For this pre-eminence of early maritime history of Bay of Bengal, whichof the following could be the most convincing explanation/explanations ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODA=",
      "description" : "T3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " As compared to other countries, India had a better ship-building technology in ancient and medieval times",
        "option2" : " The rulers of southern India always partronized traders, Brahmin priests and Buddhist monks in this context.",
        "option3" : " Monsoon winds across the Bay of Bengal facilitated sea voyages",
        "option4" : " Both (a) and (b) are convincing explanations in this"
      }
    },
    {
      "index" : 81,
      "question" : "The Jain philosophy holds that the world is created andmaintained by ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODE=",
      "description" : "SmFpbmlzbSBkb2VzIG5vdCBzdXBwb3J0IGJlbGllZiBpbiBhIGNyZWF0b3IgZGVpdHkuIEFjY29yZGluZyB0byB0aGUgSmFpbiBkb2N0cmluZSwgdGhlIHVuaXZlcnNlIGFuZCBpdHMgY29uc3RpdHVlbnRzIChzb3VsLCBtYXR0ZXIsIHNwYWNlLCB0aW1lLCBhbmQgbW90aW9uKSBoYXZlIGFsd2F5cyBleGlzdGVkLiBBbGwgdGhlIGNvbnN0aXR1ZW50cyBhbmQgYWN0aW9ucyBhcmUgZ292ZXJuZWQgYnkgdW5pdmVyc2FsIG5hdHVyYWwgbGF3cy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Universal Law ",
        "option2" : " Universal Truth",
        "option3" : " Universal Faith ",
        "option4" : " Universal Soul"
      }
    },
    {
      "index" : 82,
      "question" : "Regarding the Indus Valley Civilization, consider thefollowing statements :1. It was predominantly a secular civilization and thereligious element, though present, did not dominatethe scene2. During this period, cotton was used for manufacturingtextiles in India  Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODI=",
      "description" : "V2UgaGF2ZSByZWFkIGFib3V0IHRoZSBNZWhyZ2FyaCBjb3R0b24gd2hpY2ggaXMgdGhlIGVhcmxpZXN0IGV4YW1wbGUgb2YgQ290dG9uIGN1bHRpdmF0aW9uIGluIHRoZSBvbGQgd29ybGQsIG9sZGVyIHRoYW4gdGhlIFBlcnV2aWFucy4gVGhlIGNsb3RoIHdhcyBtYWRlLCBhbmQgZXZlbiBkeWVkLCBzbyBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgZmlyc3Qgc3RhdGVtZW50IGlzIGFsc28gY29ycmVjdCBhbmQgaGFzIGJlZW4gJ2xpZnRlZCcgZnJvbSBhIGZhbW91cyBoaXN0b3J5IGJvb2su",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 83,
      "question" : "The 'Dharma' and 'Rita' depict a central Idea of ancientVedic civilization of India. In this context, consider thefollowing statements : 1. Dharma was a conception of obligations and of thedischarge of one's duties to oneself and to others.2. Rita was the fundamental moral law governing thefunctioning of the universe and all it contained.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODM=",
      "description" : "J1JpdGEnIHJlZmVycyB0byByZWd1bGF0aW9uIG9yZGVyIGJ5IG5hdHVyZSBhbmQgd2FzIHJlbGF0ZWQgdG8gdGhlIGNvbmR1Y3Qgb2YgdGhlIFZlZGljIEdvZHMgYW5kIEh1bWFucywgc29tZXdoZXJlIHJlbGF0ZWQgdG8gdGhlIG1vcmFsIGFuZCBwaHlzaWNhbCBsYXcuIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICdSaXRhJyB3YXMgbGF0ZXIgcmVwbGFjZWQgYnkgJ0RoYXJtYScgYW5kIHdhcyBhIG1vcmUgc29waGlzdGljYXRlZCBmb3JtIG9mIHByaW5jaXBsZXMgb2YgbGF3LiBBcyBwZXIgQ2hhbmFreWEsICdEaGFybWEnIHdhcyB0aGUgcHJvbW90aW9uIG9mIG9uZSdzIG93biBzZWN1cml0eSwgaGFwcGluZXNzIGFzIHdlbGwgYXMgdGhlIHNvY2lhbCBvcmRlci4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 84,
      "question" : "With reference to the scientific progress of ancient India,which of the statements given below are correct?1. Different kinds of specialized surgical instruments werein common use by 1st century AD.2. Transplant of internal organs in the human body hadbegun by the beginning of 3rd century AD.3. The concept  of  sine  of  an  angle  was  known in  5thcentury AD.4. The concept of cyclic quadrilaterals was known in 7thcentury AD.Select the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODQ=",
      "description" : "MXN0LCAzcmQgYW5kIDR0aCBhcmUgY29ycmVjdC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 85,
      "question" : "With reference to the history of ancient India, which of thefollowing was/were common to both Buddhism and Jainism?1. Avoidance of extremities of penance and enjoyment2. Indifference to the authority of the Vedas3. Denial of efficacy of ritualsSelect the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODU=",
      "description" : "Qm90aCBCdWRkaGlzbSBhbmQgSmFpbmlzbSBkZW5pZWQgdGhlIGF1dGhvcml0eSBvZiB0aGUgVmVkYXMgYW5kIHRoZSBlZmZpY2FjeSBvZiBSaXR1YWxzLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 86,
      "question" : "The Nagara, the Dravida and the Vesara are the",
      "questionId" : "WzE5OTUsIDIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODY=",
      "description" : "TmFnYXJhLCBEcmF2aWRhIGFuZCBWZXNhcmEgYXJlIHRocmVlIG1haW4gc3R5bGVzIG9mIEluZGlhbiB0ZW1wbGUgYXJjaGl0ZWN0dXJlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTUsIDIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " three main racial groups of the Indian subcontinent",
        "option2" : " three main linguistic divisions into which the languages of India can be classified",
        "option3" : " three main styles of Indian temple architecture",
        "option4" : " three main musical Gharanas prevalent in India"
      }
    },
    {
      "index" : 87,
      "question" : "Lord Buddha's image is sometimes shown with the hand gesturecalled 'Bhumisparsha Mudra'. It symbolizes             ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODc=",
      "description" : "VGhlIGVhcnRoIHdpdG5lc3MgQnVkZGhhIGlzIG9uZSBvZiB0aGUgbW9zdCBjb21tb24gaWNvbmljIGltYWdlcyBvZiBCdWRkaGlzbS4gSXQgZGVwaWN0cyB0aGUgQnVkZGhhIHNpdHRpbmcgaW4gbWVkaXRhdGlvbiB3aXRoIGhpcyBsZWZ0IGhhbmQsIHBhbG0gdXByaWdodCwgaW4gaGlzIGxhcDsgYW5kIGhpcyByaWdodCBoYW5kIHRvdWNoaW5nIHRoZSBlYXJ0aC4gVGhpcyByZXByZXNlbnRzIHRoZSBtb21lbnQgb2YgdGhlIEJ1ZGRoYSdzIGVubGlnaHRlbm1lbnQu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddha's calling of the Earth to watch over Mara and to prevent Mara from disturbing his meditation",
        "option2" : " Buddha's calling of the Earth to witness his purity and chastity despite the temptations of Mara",
        "option3" : " Buddha's reminder to his followers that they all arise from the Earth and finally dissolve into the Earth, and thus this life is transitory",
        "option4" : " Both the statements (a) and (b) are correct in this"
      }
    },
    {
      "index" : 88,
      "question" : "The religion of early Vedic Aryans was primarily of   ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODg=",
      "description" : "VGhlIGVhcmx5IFZlZGljIEFyeWFucyBpbmR1bGdlZCBpbiBJbWFnZSBXb3JzaGlwIGFuZCBZYWpuYXMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhakti",
        "option2" : " image worship and Yajnas",
        "option3" : " worship of nature and Yajnas",
        "option4" : " worship of nature and Bhakti"
      }
    },
    {
      "index" : 89,
      "question" : "With reference to the guilds (Shreni) of ancient India thatplayed a very important role in the country's economy, whichof the following statements is/are correct? 1. Every guild was registered with the central authorityof the State and the king was the chief administrativeauthority on them.2. The wages, rules of work, standards and prices werefixed by the guild.3. The guild had judicial powers over its own members.Select the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODk=",
      "description" : "VGhlIHdhZ2VzLCBydWxlcyBvZiB3b3JrLCBzdGFuZGFyZHMgYW5kIHByaWNlcyB3ZXJlIGZpeGVkIGJ5IHRoZSBndWlsZC4gVGhlIGd1aWxkIGhhZCBqdWRpY2lhbCBwb3dlcnMgb3ZlciBpdHMgb3duIG1lbWJlcnMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 90,
      "question" : "Some Buddhist rock-cut caves are called Chaityas, while theothers are called Viharas. What is the difference between thetwo? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTA=",
      "description" : "Q2hhaXR5YXMgcmVmZXIgdG8gdGhlIGhhbGxzIGVuY2xvc2luZyB0aGUgc3R1cGFzLiBDaGFpdHlhcyB3ZXJlIHByb2JhYmx5IGNvbnN0cnVjdGVkIHRvIGhvbGQgbGFyZ2UgbnVtYmVycyBvZiBkZXZvdGVlcyBmb3IgcHJheWVyLiBWaWhhcmFzIG9uIHRoZSBvdGhlciBoYW5kIGFyZSBjb25zdHJ1Y3Rpb25zIGJ1aWx0IGluIGFuY2llbnQgSW5kaWEgaW4gb3JkZXIgdG8gcHJvdmlkZSByZXN0aW5nIHBsYWNlcyBmb3IgdGhlIHdhbmRlcmluZyBCdWRkaGlzdCBtb25rcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vihara is a place of worship, while Chaitya is the dwelling place of the monks",
        "option2" : " Chaitya is a place of worship, while Vihara is the dwelling place of the monks",
        "option3" : " Chaitya is the stupa at the far end of the cave, while Vihara is the hall axial to it",
        "option4" : " There is no material difference between the two"
      }
    },
    {
      "index" : 91,
      "question" : "With reference to the history of philosophical thought inIndia, consider the following statements regarding Sankhyaschool: 1. Sankhya does not accept the theory of rebirth ortransmigration of soul.2. Sankhya holds that it is the self-knowledge that leadsto liberation and not any exterior influence or agent.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTE=",
      "description" : "U2Fua2h5YSB5b2dhIGJlbGlldmVzIHRoYXQgc2VsZiAta25vd2xlZGdlIGxlYWRzIHRvIGxpYmVyYXRpb24uIEFsbW9zdCBhbGwgdGhlIHJlc3Qgb2YgcGhpbG9zb3BoaWVzIG9mIEluZGlhIGFkb3B0ZWQgU2Fua2h5YSBhcyBpdHMgbWFpbiBiYXNlLiBTYW5raHlhIHlvZ2EgYWxzbyBiZWxpZXZlcyBpbiByZWJpcnRoLiBBY2NvcmRpbmcgdG8gU2Fua2h5YSBkYXJzaGFuIGVhY2ggcHVydXNoYSBleHBlcmllbmNlcyBiaG9nYSwgYXBhdmFyZ2EgYW5kIHRha2VzIGJpcnRoIHJlcGVhdGVkbHkgdW50aWwga2FpdmFseWEuKG1va3NhKS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 92,
      "question" : "Which one of the following describes best the concept ofNirvana in Buddhism? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTI=",
      "description" : "VGhlIGNvbmNlcHQgb2YgTmlydmFuYSB3YXMgb3JpZ2luYWxseSBleHBsYWluZWQgYnkgTG9yZCBCdWRkaGEgKDU2Ni00ODYgQkMpLiBUaGUgd29yZCAnTmlydmFuYScgY29tZXMgZnJvbSB0aGUgcm9vdCBtZWFuaW5nICd0byBibG93IG91dCcgYW5kIHJlZmVycyB0byB0aGUgZXh0aW5ndWlzaGluZyBvZiB0aGUgZmlyZXMgb2YgZ3JlZWQsIGhhdHJlZCwgYW5kIGRlbHVzaW9uLiBXaGVuIHRoZXNlIGVtb3Rpb25hbCBhbmQgcHN5Y2hvbG9naWNhbCBkZWZpbGVtZW50cyBhcmUgZGVzdHJveWVkIGJ5IHdpc2RvbSwgdGhlIG1pbmQgYmVjb21lcyBmcmVlLCByYWRpYW50LCBhbmQgam95ZnVsIGFuZCBoZSB3aG8gaGFzIHJlYWxpemVkIHRoZSBUcnV0aCAoTmlydmFuYSkgaXMgdGhlIGhhcHBpZXN0IGJlaW5nIGluIHRoZSB3b3JsZC4gSGUgaXMgZnJlZSBmcm9tIGFsbCBjb21wbGV4ZXMgYW5kIG9ic2Vzc2lvbnMuIEhlIGRvZXMgbm90IHJlcGVudCB0aGUgcGFzdCBub3IgZG9lcyBoZSBicm9vZCBvdmVyIHRoZSBmdXR1cmUuIEhlIGxpdmVzIGZ1bGx5IGluIHByZXNlbnQuIEhlIGFwcHJlY2lhdGVzIGFuZCBlbmpveXMgdGhpbmdzIGluIGxpZmUgaW4gdGhlIHB1cmVzdCBzZW5zZSB3aXRob3V0IHNlbGYgcHJvamVjdGlvbnMuIEhlIGlzIGZyZWUgZnJvbSB0aGUgdGhpcnN0IG9mIGJlY29taW5nIGFuZCB0aGUgaWxsdXNpb24gb2Ygc2VsZi4gQnVkZGlzbSBleHBsYWluIE5pdnJhbmEgYXMgYSBzdGF0ZSBvZiBibGlzcyBvciBwZWFjZS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The extinction of the flame of desire",
        "option2" : " The complete annihilation of self",
        "option3" : " A state of bliss and rest",
        "option4" : " A mental stage beyond all comprehension."
      }
    },
    {
      "index" : 93,
      "question" : "Which of the following characterizes / characterize the peopleof Indus Civilization? 1. They possessed great palaces and temples.2. They worshipped both male and female deities.3. They employed horse-drawn chariots in warfare.Select the correct statement/statements using the codesgiven below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTM=",
      "description" : "SW5kdXMgdmFsbGV5IHBlb3BsZSBkaWQgbm90IHBvc3Nlc3MgZ3JlYXQgcGFsYWNlcyBhbmQgdGVtcGxlcyByYXRoZXIgdGhlIGNpdmlsaXphdGlvbiB3YXMgbm90ZWQgZm9yIGl0cyBjaXRpZXMgYnVpbHQgb2YgYnJpY2ssIHJvYWRzaWRlIGRyYWluYWdlIHN5c3RlbSBhbmQgbXVsdGlzdG9yaWVkIGhvdXNlcy4gSW5kdXMgdmFsbGV5IHBlb3BsZSB3ZXJlIHBlYWNlIGxvdmluZy4gVGhleSB3ZXJlIG5ldmVyIGVuZ2FnZWQgaW4gYW55IHdhci4gSG93ZXZlciBzcGVjdWxhdGlvbnMgaGF2ZSBiZWVuIHJpZmUgdGhhdCBzb21lIHRlY3RvbmljIGZvcmNlcyBkZXN0cm95ZWQgdGhlIGNpdmlsaXphdGlvbi4gU29tZSBoaXN0b3JpYW5zIGFyZSBvZiB0aGUgdmlldyB0aGF0IGludmFzaW9uIG9mIEFyeWFucywgc2VhIGxldmVsIGNoYW5nZXMsIGVhcnRocXVha2VzIG1pZ2h0IGhhdmUgYnJvdWdodCB0aGUgY2l2aWxpemF0aW9uIHRvIGl0cyBlbmQgdGhlcmVmb3JlIHBlb3BsZSBlbXBsb3lpbmcgaG9yc2UgZHJhd24gY2hhcmlvdHMgaW4gd2FyZmFyZSBpcyBub3QgdHJ1ZS4gTW9yZW92ZXIsIEluZHVzIHZhbGxleSBzZWFscyBzaG93IHN3YXN0aWthLCBhbmltYWxzIHdoaWNoIGlzIHN1Z2dlc3RpdmUgb2YgdGhlaXIgcmVsaWdpb3VzIGJlbGllZnMuIEluIHZpZXcgb2YgbGFyZ2UgbnVtYmVyIG9mIGZpZ3VyaW5lcyBmb3VuZCBpbiBJbmR1cyB2YWxsZXksIHNvbWUgc2Nob2xhcnMgYmVsaWV2ZSB0aGV5IHdvcnNoaXBwZWQgbW90aGVyIGdvZGRlc3Mgc3ltYm9saXppbmcgZmVydGlsaXR5LiBUaGV5IHdvcnNoaXBwZWQgYSBmYXRoZXIgR29kIHdobyBtaWdodCBiZSBhIHByb2dlbml0b3Igb2YgdGhlIHJhY2UgYW5kIHdhcyBhIHByb2JhYmx5IGEgcHJvdG90eXBlIG9mIFNpdmEgYXMgdGhlIExvcmQgb2YgdGhlIEFuaW1hbHMu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only",
        "option2" : " 2 only",
        "option3" : " 1, 2 and 3",
        "option4" : " None of the statements given above is correct"
      }
    },
    {
      "index" : 94,
      "question" : "Which of the following statements is/are applicable to Jaindoctrine? 1. The surest way of annihilating Karma is to practicepenance.2. Every object, even the smallest particle has a soul.3. Karma is the bane of the soul and must be ended.Select the correct answer using the codes given below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTQ=",
      "description" : "VGhlIHN1cmVzdCB3YXkgb2YgYW5uaWhpbGF0aW5nIEthcm1hIGlzIHRvIHByYWN0aWNlIHBlbmFuY2UuIEthcm1hIGlzIHRoZSBiYW5lIG9mIHRoZSAgc291bCBhbmQgbXVzdCBiZSBlbmRlZC4gJ1N3YWRoeWF5IFBhcmFtYW0gVGFwJyBBY2NvcmRpbmcgdG8gSmFpbiBkb2N0cmluZXMgUGVuYW5jZSB3YXNoZXMgYXdheSBhbGwgdGhlIGJsZW1pc2hlcyBhbmQgcHVyZ2VzIHRoZSBzb3VsIG9mIGFsbCBrYXJtaWMgbWF0dGVyLiBBbHNvLCBhY2NvcmRpbmcgdG8gSmFpbmlzbSwgS2FybWEgaXMgdGhlIGJhbmUgb2YgdGhlIHNvdWwuIEthcm1hIG5vdCBvbmx5IGVuY29tcGFzc2VzIHRoZSBjYXVzYWxpdHkgb2YgdHJhbnNtaWdyYXRpb24gYnV0IGl0IGlzIGFsc28gY29uY2VpdmVkIGFzIGFuIGV4dHJlbWVseSBzdWJ0bGUgbWF0dGVyIHdoaWNoIGluZmlsdHJhdGVzIHRoZSBzb3VsLCBvYnNjdXJpbmcgaXRzIG5hdHVyYWwsIHRyYW5zcGFyZW50LCBwdXJlIHF1YWxpdGllcy4gS2FybWEgaXMgdGhvdWdodCBvZiBhcyBhIGtpbmQgb2YgcG9sbHV0aW9uIHRoYXQgdGFpbnRzIHRoZSBzb3VsIHdpdGggdmFyaW91cyBjb2xvcnMuIEJhc2VkIG9uIGl0cyBrYXJtYSwgYSBzb3VsIHVuZGVyZ29lcyB0cmFuc21pZ3JhdGlvbiBhbmQgcmVpbmNhcm5hdGlvbiBpbiB2YXJpb3VzIHN0YXRlcyBvZiBleGlzdGVuY2UgbGlrZSBoZWF2ZW5zIG9yIGhlbGxzIG9yIGFzIGh1bWFucyBvciBhbmltYWxzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 95,
      "question" : "With reference to the history of Indian rock-cut architecture,consider the following statements: 1. The caves at Badami are the oldest surviving rock-cutcaves in India.2. The Barabar rock-cut caves were originally made forAjivikas by Emperor Chandragupta Maurya.3. At Ellora, caves were made for different faiths.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTU=",
      "description" : "VGhlIEJhcmJhcmEgcm9jayBjdXQgY2F2ZXMgYXJlIHRoZSBvbGRlc3Qgcm9jayBjdXQgY2F2ZXMuIFRoZXkgd2VyZSBvcmlnaW5hbGx5IG1hZGUgZm9yIHRoZSBBaml2aWthcyBkdXJpbmcgdGhlIE1hdXJ5YW4gcGVyaW9kICgzMjItMTg1IEJDRSkuIFRoZSBFbGxvcmEgY2F2ZXMgd2VyZSBidWlsdCBiZXR3ZWVuIDV0aCBjZW50dXJ5IGFuZCAxMHRoIGNlbnR1cnkuIFRoZXJlIHdlcmUgMzQgY2F2ZXMgb3V0IG9mIHdoaWNoIDEyIHdlcmUgQnVkZGhpc3QgY2F2ZXMsIDE3IHdlcmUgSGluZHUgY2F2ZXMgYW5kIDUgd2VyZSBKYWluIGNhdmVzLiBUaGUgcHJveGltaXR5IG9mIHRoZSBjYXZlcyBjbGVhcmx5IGRlbW9uc3RyYXRlcyB0aGUgcmVsaWdpb3VzIGhhcm1vbnkgcHJldmFsZW50IGF0IHRoYXQgcGVyaW9kIG9mIHRpbWUu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 96,
      "question" : "The Chinese traveller Yuan Chwang (Hiuen Tsang) whovisited India recorded the general conditions and culture ofIndia at that time. In this context, which of the followingstatements is/are correct?                            1. The roads and river-routes were completely immunefrom robbery.2. As regards punishment for offences, ordeals by fire,water and poison were the instruments for determiningthe innocence or guilt of a person.EBD_8342Ancient History  3. The tradesmen had to pay duties at ferries and barrierstations.Select the correct answer using the codes given below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTY=",
      "description" : "VGhlIHRyYWRlc21lbiBoYWQgdG8gcGF5IGxpZ2h0IGR1dGllcyBhdCBmZXJyaWVzIGFuZCBiYXJyaWVycy4gQWZ0ZXIgcGF5aW5nIHRoZSByZXZlbnVlIHRoZXkgY291bGQgZ28gdG8gYW5kIGZybyB0byBiYXJ0ZXIgdGhlaXIgbWVyY2hhbmRpc2UuIFRoZSBwdW5pc2htZW50IGZvciBzb2NpYWwgb2ZmZW5jZXMgYWNjb3JkaW5nIHRvIHRoZSB0cmF2ZWxsZXIncyBhY2NvdW50LCB3ZXJlIHRvIGN1dCBvZmYgdGhlIG5vc2UsIG9yIGFuIGVhciBvciBhIGhhbmQuIE1pbm9yIG9mZmVuY2VzIHdlcmUgZGVhbHQgd2l0aCBmaW5lcy4gQW5kIHRvIGRldGVybWluZSBndWlsdCBvciBpbm5vY2VuY2UsIG9yZGVhbHMgYnkgZmlyZSwgd2F0ZXIgYW5kIHBvaXNvbiB3ZXJlIHRoZSBpbnN0cnVtZW50cyB3aGljaCB3ZXJlIHVzZWQu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 97,
      "question" : "In the context of cultural history of India, a pose in danceand dramatics called 'Tribhanga' has been a favourite ofIndian artists from ancient times till today. Which one of thefollowing statements best describes this pose?   ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTc=",
      "description" : "VGhlIHBvc2UgJ1RyaWJoYW5nYScgaXMgdGhlIGZhdm91cml0ZSBwb3N0dXJlIG9mIExvcmQgS3Jpc2huYS4gV2UgaGF2ZSBvZnRlbiBzZWVuIExvcmQgS3Jpc2huYSBzdGFuZGluZyBpbiB0cmliaGFuZ2EgcG9zdHVyZSBiZWZvcmUgaGlzIGNvdyAnS2FtZGhlbnUnIG9yIHdoZW5ldmVyIGhlIGlzIHBsYXlpbmcgaGlzIGZsdXRlLiBIZSBpcyBvZnRlbiBjYWxsZWQgVHJpYmhhbmEgTXVyYXJpLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " One leg is bent and the body is slightly but oppositely curved at waist and neck",
        "option2" : " Facial expressions, hand gestures and make-up are combined to symbolize certain epic or historic characters",
        "option3" : " Movements of body, face and hands are used to express oneself or to tell a story",
        "option4" : " A little smile, slightly curved waist and certain hand"
      }
    },
    {
      "index" : 98,
      "question" : "Consider the following historical places:              1. Ajanta Caves2. Lepakshi Temple3. Sanchi StupaWhich  of  the  above  places  is/are  also  known  for  muralpaintings?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTg=",
      "description" : "QWphbnRhIENhdmVzIGhhdmUgbXVyYWwgcGFpbnRpbmdzIGluIGNhdmVzIDEsIDIsIDE2IGFuZCAxNy4gU29tZSBvZiB0aGUgcGFpbnRpbmdzIHdlcmUgY29tbWlzc2lvbmVkIGJ5IEhhcmlzZW5hIG9mIFZha2F0YWthIGR5bmFzdHkuIFRoZSB0aGVtZSBvZiB0aGUgcGFpbnRpbmdzIHdhcyBKYXRha2EgdGFsZXMuIExlcGFrc2hpIFRlbXBsZSBpcyByZW5vd25lZCBmb3IgYmVpbmcgb25lIG9mIHRoZSBiZXN0IHJlcG9zaXRvcmllcyBvZiBtdXJhbCBwYWludGluZ3Mgb2YgdGhlIFZpamF5bmFnYXIga2luZ3MuIFNhbmNoaSBTdHVwYSBoYXMgbWFueSBiZWF1dGlmdWwgc2N1bHB0dXJlcyBidXQgbm90IG11cmFsIHBhaW50aW5ncy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None"
      }
    },
    {
      "index" : 99,
      "question" : "With reference to the Indian history of art and culture, considerthe following pairs : Famous work of  Sculpture Site1. A grand image of Buddha's :    AjantaMahaparinirvana withnumerous celestial musiciansabove and the sorrowfulfigures  of his followers below2. A huge image of Varaha : Mount AbuAvatar (boar incarnation)of Vishnu, as he rescuesGoddess Earth from the deepand chaotic waters, sculptedon rock3. 'Arjuna's Penance'/ : Mamallapuram'Descent of Ganga' sculptedon the surface of huge bouldersWhich of the pairs given above is/are correctly matched?",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTk=",
      "description" : "MSBpcyBjb3JyZWN0bHkgbWF0Y2hlZCBiZWNhdXNlIFBhcmluaXJ2YW5hIG9mIHRoZSBCdWRkaGEgaW4gQ2F2ZSAxNyBvZiBBamFudGEsIHdpdGggbnVtZXJvdXMgY2VsZXN0aWFsIG11c2ljaWFucyBhYm92ZSBhbmQgdGhlIHNvcnJvd2Z1bCBmaWd1cmVzIG9mIGhpcyBmb2xsb3dlcnMgYmVsb3csIGlzIG9uZSBvZiB0aGUgZ3JhbmRlc3QgYW5kIHlldCBtb3N0IGRlbGljYXRlbHkgZXhwcmVzc2l2ZSBzY2VuZXMgZXZlciBtYWRlIGluIHN0b25lLiAyIGlzIHdyb25nICBiZWNhdXNlIEUgQiBEIF84IDM0IDIgQW5jaWVudCBIaXN0b3J5ICAgaHVnZSAgaW1hZ2UgIG9mICBWYXJhaGEgIEF2YXRhciAgb2YgIFZpc2hudSwgIGFzICBoZSAgcmVzY3VlcyBHb2RkZXNzIEVhcnRoIGZyb20gdGhlIGRlZXBhbmQgY2hhb3RpYyB3YXRlcnMsIHNjdWxwdGVkIG9uIHJvY2sgaXMgZm91bmQgaW4gTWFtYWxsYXB1cmFtLiAzIGlzIHJpZ2h0IGJlY2F1c2UgQXJqdW5hJ3MgUGVuYW5jZSAnRGVzY2VudCBvZiBHYW5nYScgc2N1bHB0ZWQgb24gdGhlIHN1cmZhY2Ugb2YgaHVnZSBib3VsZGVycyBpcyBmb3VuZCBpbiBNYW1hbGxhcHVyYW0u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 100,
      "question" : "With reference to Buddhist history, tradition  and  culturein India, consider the following pairs : Famous shrine            Location1. Tabo monastery and : Spiti Valleytemple complex2. Lhotsava Lhakhang : Zanskar Valleytemple, Nako3. Alchi temple complex : LadakhWhich of the  pairs given above is/are correctly matched?",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTAw",
      "description" : "VGFibyBtb25hc3RlcnkgYW5kIHRlbXBsZSBjb21wbGV4IGlzIGluIFNwaXRpIFZhbGxleSBhbmQgQWxjaGkgdGVtcGxlIGNvbXBsZXggaXMgaW4gTGFkYWtoLiBMaG90c2F2YSBMaGFraGFuZywgTmFrbyBpcyBpbiBIaW1hY2hhbCBQcmFkZXNoLiBaYW5za2FyIFZhbGxleSBpcyBpbiBKYW1tdSBhbmQgS2FzaG1pci4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 101,
      "question" : "Which one of the following pairs does not form part of thesix systems of Indian Philosophy?                         ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTAx",
      "description" : "TG9rYXlhdGEgYW5kIEthcGFsaWthIGRvIG5vdCBmb3JtIG9mIFNpeCBzeXN0ZW0gb2YgSW5kaWFuIHBoaWxvc29waHkgU2Fta2h5YSBQcmFrcml0aSBhbmQgUHVydXNoIFlvZ2EgUmVsZWFzaW5nIFB1cnVzaCBmcm9tIFBhcmtyaXRpIE55YXlhIExvZ2ljYWwgdGhpbmtpbmcgVmFpc2hlc2hpa2EgUmVhbGlzdGljIGFuZCBvYmplY3RpdmUgcGhpbG9zb3BoeSBvZiB1bml2ZXJzZSBNaW1hbXNhIEFuYWx5emluZyBTYW1oaXRhIGFuZCBCcmFobWFuYSBwb3J0aW9uIG9mIFZlZGEuIFNpeCBzeXN0ZW0gb2YgSW5kaWFuIHBoaWxvc29waHkgYXJlIFZlZGFudGEgSXQgaXMgdGhlIGNsaW1heCBvZiBJbmRpYW4gUGh5bG9zb3BoeQ==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mimamsa and Vedanta",
        "option2" : " Nyaya and Vaisheshika",
        "option3" : " Lokayata and Kapalika",
        "option4" : " Sankhya and Yoga"
      }
    },
    {
      "index" : 104,
      "question" : "With reference to the art and archaeo-logical history of India,which one among the following was made earliest?",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNA==",
      "description" : "Um9jay1jdXQgRWxlcGhhbnQgYXQgRGhhdWxpIHdhcyBidWlsdCBkdXJpbmcgdGhlIHJlaWduIG9mIEFzaG9rYSBpbiAyNTAgQkMuIExpbmdhcmFqYSBUZW1wbGUgYXQgQmh1Ym5lc2h3YXIgd2FzIGJ1aWx0IGJ5IFlheWF0aSAoMTAyNS0xMDQwKS4gUm9jay1jdXQgbW9udW1lbnRzIGF0IE1haGFiYWxpcHVyYW0gd2VyZSBidWlsdCBkdXJpbmcgN3RoLTh0aCBjZW50dXJ5IEFEIGR1cmluZyB0aGUgcmVpZ24gb2YgUGFsbGF2YXMuIFZhcmFoYSBJbWFnZSBhdCBVZGF5Z2lyaSB3YXMgYnVpbHQgYnkgQ2hhbmRyYWd1cHRhIElJIG9mIEd1cHRhIEVtcGlyZS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lingaraja Temple at Bhubneshwar",
        "option2" : " Rock-cut Elephant at Dhauli",
        "option3" : " Rock-cut Monuments at Mahabalipuram",
        "option4" : " varaha Image at Udayagiri"
      }
    },
    {
      "index" : 105,
      "question" : "Which one of the following books of ancient India has thelove story of the son of the founder of Sunga dynasty?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNQ==",
      "description" : "VGhlIE1hbGF2aWthZ25pbWl0cmEgaXMgYSBTYW5za3JpdCBwbGF5IGJ5IEthbGlkYXMuIFRoZSBwbGF5IHRlbGxzIHRoZSBsb3ZlIHN0b3J5IG9mIEFnbmltaXRyYSwgdGhlIFNodW5nYSBFbXBlcm9yLiBIZSBmYWxscyBpbiBsb3ZlIHdpdGggdGhlIHBpY3R1cmUgb2YgYW4gZXhpbGVkIHNlcnZhbnQgZ2lybCBuYW1lZCBNYWxhdmlrYS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Swapnavasavadatta",
        "option2" : " Malavikagnirnitra",
        "option3" : " Meghadoota",
        "option4" : " Ratnavali"
      }
    },
    {
      "index" : 106,
      "question" : "In the context of the history of India, consider the followingpairs:  Term Description(1) Eripatti Land, revenue from which was set apart for themain¬tenance of the village tank(2) Taniyurs Villages donated to a single Brahmin or a groupof Brahmins(3) Ghatikas Colleges generally attached to the templesWhich of the pairs given above is/are correctly matched?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNg==",
      "description" : "QSBzcGVjaWFsIGNhdGVnb3J5IG9mIGxhbmQsIGVyaXBhdHRpLCAgb3IgIGxhbmQsICBpcyBtZW50aW9uZWQuIERvbmF0ZWQgYnkgaW5kaXZpZHVhbHMsIHRoZSByZXZlbnVlIGZyb20gdGhpcyBsYW5kIHdhcyBzZXQgYXBhcnQgZm9yIHRoZSBtYWludGVuYW5jZSBvZiB0aGUgdmlsbGFnZSB0YW5rLiBPY2Nhc2lvbmFsbHkgYSB2ZXJ5IGxhcmdlIHZpbGxhZ2Ugd291bGQgYmUgYWRtaW5pc3RlcmVkIGFzIGEgc2luZ2xlIHVuaXQgYW5kIHRoaXMgd2FzIGNhbGxlZCBUYW5peXVyLiAgUmVmOiBBIEhpc3Rvcnkgb2YgSW5kaWEgYnkgUm9taWxhIFRoYXBhci4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 3 only",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 3"
      }
    },
    {
      "index" : 107,
      "question" : "With reference to the religious history of India, considerthe following statements: 1. Sautrantika and Sammitiya were the sects of Jainism.2. Sarvastivadin held that the constituents ofphenomena were not wholly momentary, but existedforever in a latent form.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNw==",
      "description" : "U2F1dHJhbnRpa2FzIGFuZCBTYW1tdGl5YXMgYXMgQnVkZGhpc20gc2VjdHMuIFNvIGZpcnN0IHN0YXRlbWVudCBpcyB3cm9uZy4gQW5kIFNhcnZhc3RpdmFkaW4gc2VjdCBvZiBCdWRkaGlzbSBiZWxpZXZlcyB0aGF0IGFsbCB0aGluZ3MgZXhpc3QsIGFuZCBleGlzdCBjb250aW51b3VzbHksIGluIHRoZSBwYXN0IGFuZCB0aGUgZnV0dXJlIGFzIHdlbGwgYXMgaW4gdGhlIHByZXNlbnQuICBTbyBzZWNvbmQgc3RhdGVtZW50IGlzIHJpZ2h0Lg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 108,
      "question" : "The painting of Bodhisattva Padmapani is one of themost famous and oft-illustrated paintings at ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwOA==",
      "description" : "TmV3IE5DRVJULCBTdGQuIDExLiBBbiBJbnRyb2R1Y3Rpb24gdG8gSW5kaWFuIEFydCAoUGFnZSA1NCBzaG93cyBiaWcgcGhvdG8gd2l0aCBjYXB0aW9uOiBQYWRtYXBhbmlib2RkaGlzYXR0dmEgYXQgYWphbnRhIENhdmUgbm8uIDEp",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ajanta ",
        "option2" : " Badami",
        "option3" : " Bagh ",
        "option4" : " Ellora"
      }
    },
    {
      "index" : 109,
      "question" : "Which of the following is/are famous for Sun temples?1. Arasavalli2. Amarakantak3. OmkareshwarSelect the correct answer using the code given below:",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwOQ==",
      "description" : "KC0pIEFuZGhyYSBQcmFkZXNoIHN0YXRlIEdvdnQuIHdlYnNpdGUgc2F5cyBBcmFzYXZhbGxpIGluIFNyaWtha3VsYW0gZGlzdHJpY3QgaGFzIHN1biB0ZW1wbGUuIFNvIDEgaXMgcmlnaHQuICgtKVNyaSBPbWthcmVzaHdhciB0ZW1wbGUgaW4gTXlzb3JlIGlzIGZvciBMb3JkIFNoaXZhIGFuZCBpdCdzIG5vdCBhIFN1biBUZW1wbGUuICgtKUFtYXJha2FudGFrIGluIE1hZGh5YSBQcmFkZXNoIGhhcyB0ZW1wbGVzLCBidXQgbm90IGFueSBTdW4gdGVtcGxlLiBTbyAjMyBpcyB3cm9uZy4gSGVuY2UsIGJ5IGVsaW1pbmF0aW9uLCBhbnN3ZXIgIkEiIG9ubHkgMS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 110,
      "question" : "With reference to the difference between the culture ofRigvedic Aryans and Indus Valley people, which of thefollowing statements  is/are  correct?               1. Rigvedic Aryans used the coat of mail and helmet inwarfare whereas the people of Indus ValleyCivilization did not leave any evidence of using them.2. Rigvedic Aryans knew gold, silver and copperwhereas Indus Valley people knew only copper andiron.3. Rigvedic Aryans had domesticated the horse whereasthere is no evidence of Indus Valley people havingbeen aware of this animal.Select the correct answer using the code given below:",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExMA==",
      "description" : "TkVXIE5DRVJUIENsYXNzIDEyIGhpc3RvcnksIENoLiAxOiAgIEFsbCB0aGUgZ29sZCBqZXdlbHJ5IGZvdW5kIGF0IEhhcmFwcGFuIHNpdGVzIHdhcyByZWNvdmVyZWQgZnJvbSBob2FyZHMuIFNvLCBzZWNvbmQgc3RhdGVtZW50IGlzIHdyb25nLCB3aGljaCBlbGltaW5hdGVkIEIgYW5kIEQuIEJ1dCB0aGVuIGRlcGVuZGluZyBvbiB3aGljaCBoaXN0b3J5IGJvb2sgeW91IHJlZmVyLCBIYXJhcHBhbnMgd2VyZSBhd2FyZSBvciB1bmF3YXJlIGFib3V0IHRoZSBob3JzZXMuIFNvIHRoZSBleHBlcnRzIHdlcmUgZGl2aWRlZCBiZXR3ZWVuIG9wdGlvbiBBIGFuZCBvcHRpb24gQy4gVVBTQyBjaG9zZSAnQycgYXMgdGhlIG9mZmljaWFsIGFuc3dlci0gbWVhbmluZyBIYXJhcHBhbnMgZGlkIG5vdCBrbm93IGFib3V0IHRoZSBob3JzZXMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 111,
      "question" : "Which one of the following was a very important seaportin the Kakatiya kingdom? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExMQ==",
      "description" : "QWNhZGVtaWMgYm9va3Mgb24gbWVkaWV2YWwgaGlzdG9yeSBtZW50aW9uIHRoYXQgR2FuYXBhdGkgd2FzIHRoZSBtb3N0IHBvd2VyZnVsIG9mIEtha2F0aXlhIHNvdmVyZWlnbnMuIE1vdHVwYWxsaSwgbm93IGluIEtyaXNobmEgZGlzdHJpY3QsIHdhcyBhbiBpbXBvcnRhbnQgc2VhcG9ydCBpbiBoaXMga2luZ2RvbSwgZnJlcXVlbnRlZCBieSBmb3JlaWduIG1lcmNoYW50cy4gU28sICJCIiBpcyB0aGUgYW5zd2VyLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kakinada",
        "option2" : " Motupalli",
        "option3" : " Machilipatnam (Masulipatnam)",
        "option4" : " Nelluru"
      }
    },
    {
      "index" : 112,
      "question" : "With reference to the religious practices in India, the\"Sthanakvasi\" sect belongs to(Pre18 Set-D) ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTEy",
      "description" : "U3RoYW5ha3Zhc2kgZG9uJ3QgZGlmZmVyIG11Y2ggZnJvbSB0aGUgb3RoZXIgU3ZldGFtYmFyYSBKYWluYXMsIGhlbmNlIG5vdy1hLWRheXMgdGhleSBpbnZhcmlhYmx5IGNhbGwgdGhlbXNlbHZlcyBhcyBTdmV0YW1iYXJhIFN0aGFuYWt2YXNpLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism ",
        "option2" : " Jainism",
        "option3" : " Vaishnavism ",
        "option4" : " Shaivism"
      }
    },
    {
      "index" : 113,
      "question" : "With reference to Indian history, who among the followingis a future Buddha, yet to come to save the world?",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTEz",
      "description" : "TWFpdHJleWEsIGlzIHRoZSBmdXR1cmUgQnVkZGhhLCB3aG9zZSBjb21pbmcgd2FzIHNhaWQgdG8gaGF2ZSBiZWVuIHByb3BoZXNpZWQgYnkgdGhlIGhpc3RvcmljYWwgQnVkZGhhIGFuZCB3aG8gaW4geWVhcnMgdG8gY29tZSwgd291bGQgcHVyaWZ5IHRoZSB3b3JsZCB3aXRoIGhpcyB0ZWFjaGluZ3MuIGxldCdzIGFsc28gbGVhcm4gYWJvdXQgdGhlIHdyb25nIG9wdGlvbnMsIGxlc3QgdGhleSdyZSBhc2tlZCBpbiBmdXR1cmUgZXhhbXM6IEF2YWxva2l0ZXN2YXJhICh3YXRjaGZ1bCBsb3JkKSwgYWxzbyBjYWxsZWQgUGFkbWFwYW5pIChsb3R1cy1iZWFyZXIpLCB3aG9zZSBhdHRyaWJ1dGUgaXMgY29tcGFzc2lvbiwgd2hpY2ggcmVhY2hlcyBkb3duIGV2ZW4gdG8gQXZpY2hpLCB0aGUgbG93ZXN0IEJ1ZGRoaXN0IHB1cmdhdG9yeS4gTG9rc2VzdmFyYSBpcyBhbHNvIHVzZWQgYXMgYSBzeW5vbnltIGZvciBBdmFsb2tpdGVzdmFyKGEp",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Avalokiteshvara ",
        "option2" : " Lokesvara",
        "option3" : " Maitreya ",
        "option4" : " Pamapani"
      }
    },
    {
      "index" : 114,
      "question" : "Consider the following pairs Craft vs Heritage of:1. Puthukkuli shawls: Tamil Nadu 2. Sujni embroidery: Maharashtra3. Uppada Jamdani saris: KarnatakaWhich of the pairs given above is/are correct?",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTE0",
      "description" : "U3VqbmkgZW1icm9pZGVyeS0gSW5jb3JyZWN0LiBJdCBiZWxvbmdzIHRvIEJpaGFyLiAoLSlVcGFkYSBKYW1kYW5pIFNhcmVlcy0gSW5jb3JyZWN0LiBJdCBiZWxvbmdzIHRvIEFuZGhyYSBQcmFkZXNoLiAoLSlTbywgYnkgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIEE6IDEgb25seS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2",
        "option3" : " 3 only ",
        "option4" : " 2 an 3"
      }
    },
    {
      "index" : 115,
      "question" : "Consider the following pairs of Tradition vs State:1. Chapchar Kut festival: Mizoram 2. Khongjom Parba ballad: Manipur3. Thang-Ta dance: SikkimWhich of the pairs given above is/are correct ?",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTE1",
      "description" : "S2hvbmdqb20gUGFydmEgaXMgYW4gaW1wb3J0YW50IGZvbGsgbXVzaWMgZnJvbSB0aGUgc3RhdGUgb2YgTWFuaXB1ci4gSXQgaXMgYSBwb3B1bGFyIGJhbGxhZCBnZW5yZSB3aGljaCBpcyBhIG11c2ljYWwgbmFycmF0aW9uIG9mIHRoZSBiYXR0bGUgb2YgS2hvbmdqb20gZm91Z2h0IGJldHdlZW4gdGhlIEJyaXRpc2ggYXJteSBhbmQgdGhlIE1hbmlwdXJpIHJlc2lzdGFuY2UgZm9yY2VzIGluIDE4OTEuIFNvLCBzdGF0ZW1lbnQjMiBpcyByaWdodCwgdGhpcyBlbGltaW5hdGVzIEEgYW5kIChDKSAoLSlUaGFuZyBUYSBpcyB0aGUgZXhjbHVzaXZlIG1hcnRpYWwgZGFuY2UgZm9ybSBvZiBNYW5pcHVyLiBUaGFuZyBtZWFucyBzd29yZCBhbmQgVGEgbWVhbnMgc3BlYXIuIFNvLCBzdGF0ZW1lbnQjMyBpcyB3cm9uZywgdGhpcyBlbGltaW5hdGVzIChEKSBUaGVyZWZvcmUgYW5zd2VyIG11c3QgYmUgQjogb25seSAxIGFuZCAyLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2",
        "option3" : " 3 only ",
        "option4" : " 2 an 3"
      }
    },
    {
      "index" : 116,
      "question" : "Which one of the following is not a Harappan Site?          ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExNg==",
      "description" : "Tml0aW4gY2gxOiBTb2hnYXVyYSBDb3BwZXIgUGxhdGU6IFRoZSBlYXJsaWVzdCBrbm93biBjb3BwZXItcGxhdGUsIGtub3duIGFzIHRoZSBTb2hnYXVyYSBjb3BwZXItcGxhdGUsIGlzIGEgTWF1cnlhbiByZWNvcmQgdGhhdCBtZW50aW9ucyBmYW1pbmUgcmVsaWVmIGVmZm9ydHMuIFNvIGl0IGNhbid0IGJlIGEgSGFyYXBwYW4gc2l0ZSwgYW5zd2VyIGlzIGMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chanhudaro ",
        "option2" : " Kot Diji",
        "option3" : " Sohagaura ",
        "option4" : " Desalpur"
      }
    },
    {
      "index" : 117,
      "question" : "In which of the following relief sculpture inscriptions is'Ranyo Ashoka' (King Ashoka) mentioned along with thestone  portrait  of  Ashoka?                         ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExNw==",
      "description" : "MTk5MzogQSB0ZWFtIG9mIGFyY2hlb2xvZ2lzdHMgc3VydmV5ZWQgU2FubmFpLCBLYXJuYXRha2EuIFRoZSBtb3N0IGRyYW1hdGljIGV2aWRlbmNlIGNhbWUgZnJvbSBLYW5hZ2FoYWxsaS4gVGhlIGRpc2NvdmVyaWVzIGF0IHRoZSBzaXRlIGluY2x1ZGVkIGEgYnJva2VuIHJlbGllZiBzY3VscHR1cmUgc2hvd2luZyBhIGtpbmcgYW5kIHF1ZWVuIGZsYW5rZWQgYnkgZmVtYWxlIGF0dGVuZGFudHMuIEFuIGluc2NyaXB0aW9uIGluIGJyYWhtaSBsZXR0ZXIgcmVhZCAiUmFueW8gQXNob2thIiAoS2luZyBBc2hva2EpLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kanganahalli ",
        "option2" : " Sanchi",
        "option3" : " Shahbazgarhi ",
        "option4" : " Sohgaura"
      }
    },
    {
      "index" : 118,
      "question" : "Consider the following : 1. Deification of the Buddha2. Treading the path of Bodhisattvas3. Image worship and ritualsWhich of the above is/ are the feature/ features of MahayanaBuddhism?",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExOA==",
      "description" : "VGhlIE1haGF5YW5hIGZvbGxvd2VycyBiZWxpZXZlIGluIGlkb2wgb3IgaW1hZ2Ugd29yc2hpcCBvZiBCdWRkaGEuIFNvIDEgYW5kIDMgYXJlIGNvcnJlY3QuIFRoZSBjb25jZXB0IG9mIEJvZGhpc2F0dHZhIGlzIHRoZSByZXN1bHQgb2YgTWFoYXlhbmEgQnVkZGhpc20uIFNvIDIgaXMgYWxzbyBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 119,
      "question" : "With reference to forced labour(Vishti) in India during theGupta period, which one of the following statements iscorrect? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExOQ==",
      "description" : "QSBIaXN0b3J5IG9mIEFuY2llbnQgYW5kIEVhcmx5IE1lZGlldmFsIEluZGlhIGJ5IFVwaW5kZXIgU2luZ2gsIHBhZ2UgNTA4OiBGb3JjZWQgbGFib3VyIChWaXNodGkpIGJlY2FtZSBtb3JlIGNvbW1vbiB0aGFuIGJlZm9yZSBpbiB0aGlzIEd1cHRhIHBlcmlvZC4gVGhlIGZhY3QgdGhhdCBpdCBpcyBtZW50aW9uZWQgYWxvbmcgd2l0aCB0aGUgdGF4ZXMgaW4gdGhlIGxhbmQgZ3JhbnQgaW5zY3JpcHRpb25zIHN1Z2dlc3QgdGhhdCBWaXNodGkgd2FzIGNvbnNpZGVyZWQgYXMgc291cmNlIG9mIGluY29tZSBmb3IgdGhlIHN0YXRlLCBhIHNvcnQgb2YgdGF4IHBhaWQgYnkgdGhlIHBlb3BsZS4gVGhlIGZhY3QgdGhhdCBtb3N0IG9mIHRoZSBpbnNjcmlwdGlvbnMgcmVmZXJyaW5nIHRvIFZpc2h0aSBjb21lIGZyb20gTWFkaHlhIFByYWRlc2ggYW5kIEthdGhpeWF3YXIgcmVnaW9ucyBtYXkgc3VnZ2VzdCB0aGlzIHByYWN0aWNlIGZvciBtb3JlIHByZXZhbGVudCBpbiB0aGlzIGFyZWFzLiBTbywgYSBpcyByaWdodCBiIGlzIHdyb25nLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " It was considered a source of income for the State, a sort of tax paid by the people.",
        "option2" : " It was totally absent in the Madhya Pradesh and Kathiawar regions of the Gupta Empire.",
        "option3" : " The forced labourer as entitled to weekly wages.",
        "option4" : " The eldest son of the labourer was sent as the forced"
      }
    },
    {
      "index" : 120,
      "question" : "Building 'Kalyaana Mandapas' was a notable feature inthe temple construction in the kingdom of ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyMA==",
      "description" : "VmlqYXlhbmFnYXJhIFNjaG9vbDogTW9yZSB0aGFuIG9uZSBtYW5kYXBzIHdlcmUgYnVpbHQgaW4gZWFjaCB0ZW1wbGUuIFRoZSBjZW50cmFsIG1hbmRhcCBjYW1lIHRvIGJlIGtub3duIGFzIEthbHlhbiBNYW5kYXAuIDEyMS4gKGMpICgtKUJvZGhpc2F0dGF2YSBhcmUgcGFydCBvZiB0aGUgTWFoYXlhbmEvVmFqcmF5YW5hIFRyYWRpdGlvbi4gVGhleSBhcmUgbWVudGlvbmVkIGluIHRoZSBNYWhheWFuYSBsaXRlcmF0dXJlIGNhbGxlZCBhcyB0aGUgVmFpcHVseWEgU3V0cmEtIHdyaXR0ZW4gaW4gU2Fuc2tyaXQgKC0pSW5zaWRlIHRoZSBWYWlwdWx5YSBTdXRyYS0gUHJham5hIFBhcmFtaXRhIGFyZSBtZW50aW9uZWQuIDEyMi4gKGMpICgtKVN0YXRlbWVudCAyLSBJbmNvcnJlY3QgYmVjYXVzZSBBbWFyc2ltaGEgYmVsb25nZWQgdG8gdGhlIENvdXJ0IG9mIENoYW5kcmEgR3VwdGEtIElJIChoZSB3YXMgb25lIG9mIHRoZSBuYXZyYXRuYSkuIFRodXMsIGJ5ICBlbGltaW5hdGlvbiB3ZSBhcmUgbGVmdCB3aXRoIGNvcnJlY3QgYW5zd2VyIEMuICgtKVN0YXRlbWVudCAzLSBDb3JyZWN0IGJlY2F1c2UgS2FsaWRhc2EgYmVsb25nZWQgdG8gdGhlICBDb3VydCAgb2YgIENoYW5kcmEgIEd1cHRhLSAgSUkgICggIGhlICB3YXMgIG9uZSAgb2YgIHRoZSBOYXZyYXRuYSkuICgtKVN0YXRlbWVudCAxLSBJbmNvcnJlY3QgYmVjYXVzZSBQYW5pbmkgYmVsb25nZWQgdG8gdGhlIDUtNnRoIENlbnR1cnkgQkNFIFBlcmlvZC0gaGUgd3JvdGUgQXN0ZGh5YXlpLCB3aGVyZSBhc1B1c2h5YW1pdHJhIFN1bmdhIGJlbG9uZ2VkIHRvIHRoZSBQb3N0IE1hdXJ5YW4gUGVyaW9kLSAybmQgQ2VudHVyeSBCQ0UtIGhlIGNhbWUgdG8gcG93ZXIgYWZ0ZXIga2lsbGluZyBsYXN0IE1hdXJ5YW4gS2luZy0gQnJpaGFkcmF0aGEuIDEyMy4gKGIpICgtKUZvdXJ0aCBDb3VuY2lsIGNvbnZlbmVkIGluIEthc2htaXIgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBLYW5pc2hrYSAoLSlJdCByZXN1bHRlZCBpbnRvIGRpdmlzaW9uIG9mIGFsbCB0aGUgQnVkZGhpc3RzIGludG8gdHdvIG1ham9yIHNlY3RzICgtKVNhcnZhc3RpdmFkaW5zIChwb3B1bGFyIGluIEthc2htaXIgYW5kIE1hdGh1cmEgcmVnaW9ucykgYW5kIE1haGFzYW5naGlrYXMgdG9nZXRoZXIgZm9ybWluZyB0aGUgTWFoYXlhbmlzdHMgKGZvbGxvd2VycyBvZiB0aGUgR3JlYXRlciBWZWhpY2xlKSwgKC0pU3RoYXZpcmF2YWRpbnMgYW5kIG90aGVycyBmb3JtaW5nIHRoZSBIaW5heWFuaXN0cyAoZm9sbG93ZXJzIG9mIHRoZSBMZXNzZXIgVmVoaWNsZSk7IFRodXMsIFN0aGF2aXJhdmFkaW5zIGlzIG5vdCBwYXJ0IG9mIE1haGF5YW5hLiBTbywgIzEgd3JvbmcuICgtKVRoZSBNYWhhc2FuZ2hpa2FzIGdhdmUgcmlzZSB0byB0aGUgZm9sbG93aW5nIHNlY3RzOiAxLiBFa2F2eWFoYXJpa2FzIDIuIExva290dGFyYXZhZGlucyAzLiBLdWtrdXRpa2FzIDQuIEJhaHVzcnV0aXlhcyA1LiBQcmFqbmFwYXRpdmFkaW5zIDYuIENoYWl0eWEtc2FpbGFzIDcuIEFwYXJhLXNhaWxhcyA4LiBVdHRhcmEtc2FpbGFzLiBTbywgIzIgaXMgcmlnaHQsIGhlbmNlIGFuc3dlciAnYicuIDEyNC4gKGMpICgtKU1haGVuZHJhIFZhcm1hbi0gSSAoNTkwLSA2MzAgQ0UpICgtKUdvcGFsYSAoNzUwIENFKSAoLSlLaW5nIEJob2phLSBQcmF0aWhhcmEoIDgzNi04ODUgQ0UpICgtKVByYW50YWthLTEgQ2hvbGEgKCA5MDctOTUzIENFKQ==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chalukya ",
        "option2" : " Chandela",
        "option3" : " Rashtrakuta ",
        "option4" : " Vijayanagara"
      }
    },
    {
      "index" : 125,
      "question" : "Which of the following phrases defines the nature of the'Hundi' generally referred to in the sources of the post-Harsha period? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNQ==",
      "description" : "SHVuZGkgaXMgYSBub3RlIHJlY29yZGluZyBhIGRlcG9zaXQgbWFkZSBieSBhIHBlcnNvbi4gVGhlIGFtb3VudCBkZXBvc2l0ZWQgY2FuIGJlIGNsYWltZWQgaW4gYW5vdGhlciBwbGFjZSBieSBwcmVzZW50aW5nIHRoZSByZWNvcmQgb2YgdGhlIGRlcG9zaXQuIDEyNi4gKGEpICgtKU1lYXN1cmVtZW50IG9mIExhbmQgLSBkaWZmZXJlbnQgdGVybXMgdXNlZCBkdXJpbmcgR3VwdGEgQWdlLSBtZW50aW9uZWQgaW4gZGlmZmVyZW50IGluc2NyaXB0aW9ucy0gKC0pS3VseWF2YXBhLCBEcm9uYXZhcGEsIEFkaGF2YXBhIEFuZCBQYXRha2EgZnJvbSBCZW5nYWwsICgtKU5pdmFydGFuYSBBbmQgSGh1bWkgZnJvbSBjZW50cmFsIEluZGlhLCBhbmQgdG8gKC0pTml2YXJ0YW5hIEFuZCBQYWRhdmFydGEgZnJvbSB3ZXN0ZXJuIEluZGlhICgtKVZlcnkgdG91Z2ggdG8gYXR0ZW5kLCBub3QgZ2l2ZW4gaW4gc3RhbmRhcmQgYm9va3MgbGlrZSBOQ0VSVCBvciBUYW1pbGFuYWR1",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " An advisory issued by the king to his subordinates",
        "option2" : " A diary to be maintained for daily accounts",
        "option3" : " A bill of exchange",
        "option4" : " An order from the feudal lord to his subordinates"
      }
    },
    {
      "index" : 127,
      "question" : "Who among the following rulers advised his subjectsthrough this inscription?: 'Whosoever praises hisreligious sect or blames other sects out of excessivedevotion to his own sect, with the view of glorifying hisown sect, he rather injures his own sect very severely.'",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNw==",
      "description" : "QXNob2thJ3MgRGhhbW1hLSBBbHdheXMgdGFsa2VkIGFib3V0IFRvbGVyYW5jZSBhbW9uZyBhbGwgc2VjdHMu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ashoka ",
        "option2" : " Samudragupta",
        "option3" : " Harshavardhana ",
        "option4" : " Krishna Deva Raya"
      }
    },
    {
      "index" : 128,
      "question" : "With reference to the history of India, consider thefollowing pairs: Famous Place Present State1. Bhilsa Madhya Pradesh2. Dwarasamudra Maharashtra3. Girinagar Gujarat4. Sthaneshwara Uttar PradeshWhich of the pairs given above are correctly matched?",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyOA==",
      "description" : "TWFwcGluZyBRdWVzdGlvbiAxLiBCaGlsc2EtIE1hZGh5YSBQcmFkZXNoLSBDb3JyZWN0LSBLbm93biBhcyBWaWRpc2hhLCBtYWluIGNlbnRyZSBvZiB0aGUgU3VuZ2EgZHluYXN0eSAmVWRhaWdpcmkgY2F2ZXMgaW4gTWFkaHlhIFByYWRlc2ggKG5vdCB0byBiZSBjb25mdXNlZCB3aXRoIFVkYWlnaXJpLU9kaXNoYSkgMi4gR2lyaW5hZ2FyLSBHdWphcmF0LSBDb3JyZWN0IDMuIFN0aGFuZXNod2FyYS0gVXR0YXJwcmFkZXNoLSBJbmNvcnJlY3QuIFN0aGFuZXNod2FyYS0gbG9jYXRlZCBpbiBIYXJheWFuYSAobm90IGluIFV0dGFycHJhZGVzaCkgTWFpbiBzZWF0IG9mIHRoZSBQdXNoeWFiaHV0aWR5YW5zdHktIEhhcnNoYXZhcmRoYW4gKDYwNi02NDdDRSkgb3JpZ2luYWxseSBiZWxvbmdlZCB0byBTdGhhbmVzaHdhcmEsIHdobyBsYXRlciBvbiBzaGlmdGVkIHRoZSBjYXBpdGFsIGF0IEthbm5hdWogNC4gRHdhcnNhbXVkcmEtIE1haGFyYXNodHJhLSBJbmNvcnJlY3QtIEhveXNhbGEgZHluYXN0eSB1c2VkIHRvIHJ1bGUgZnJvbSBEd2Fyc2FtdWRyYS0gYWxzbyBrbm93biBhcyBIYWxlYmlkIC0gbG9jYXRlZCBpbiBLYXJuYXRha2Eu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1 and 4 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 2 an 4 only"
      }
    }
  ],
  "subject" : "History",
  "topic" : "Ancient History",
  "year" : "0"
}
