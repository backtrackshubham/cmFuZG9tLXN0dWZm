{
  "testId" : "history|ancient-history",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "The word 'Hindu' as reference to the people of Hind (India) was first used by:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwx",
      "description" : "VGhlIG5hbWUgb2YgSW5kaWEgaXMgYSBjb3JydXB0aW9uIG9mIHRoZSB3b3JkIFNpbmRodS4gIFNpbmRodSBpcyB0aGUgbmFtZSBvZiB0aGUgSW5kdXMgUml2ZXIsIG1lbnRpb25lZCBpbiB0aGUgUmlnLSAgVmVkYS4gTmVpZ2hib3JpbmcgQXJhYnMsIElyYW5pYW5zIHV0dGVyZWQgJ3MnIGFzICdoJyBhbmQgY2FsbGVkICB0aGlzIGxhbmQgSGluZHUuIEdyZWVrcyBwcm9ub3VuY2VkIHRoaXMgbmFtZSBhcyBJbmR1cy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the Greeks ",
        "option2" : " the Romans ",
        "option3" : " the Chinese ",
        "option4" : " the Arabs "
      }
    },
    {
      "index" : 2,
      "question" : "Who among the following was a Brahmavadini who composed some hymns of the Vedas?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwy",
      "description" : "T3RoZXIgQnJhaG1hdmFkaW5pIGFyZSBWaXNod2F3YXJhLCBTaWt0YSwgTml2YXZhcmksICBHaG9zaGEgYW5kIE1haXRyZXlpLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lopamudra ",
        "option2" : " Gargi ",
        "option3" : " Leelavati ",
        "option4" : " Savitri "
      }
    },
    {
      "index" : 3,
      "question" : "Match List-I with List-II and select the correct answer (using codes given below the lists)  List-I (Eras) List-II (Reckoned from) A. Vikrama era 1. 3102 B.C. B. Saka era 2. 320 A.D. C. Gupta era 3. 78 A.D. D. Kali era 4. 58 B.C. 5. 248 A.D. Codes: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwz",
      "description" : "MjQ4IEEuRC4gaXMgS2FsYWNodXJpIGVyYS4gVmlrcmFtIGVyYSB3YXMgc3RhcnRlZCBieSAga2luZyBWaWtyYW1hZGl0eWEuIFNoYWthIGVyYSB3YXMgc3RhcnRlZCBieSBLYW5pc2hrYS4gR3VwdGEgIGVyYSB3YXMgc3RhcnRlZCBieSBDaGFuZHJhZ3VwdGEtSS4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 5; D - 1 ",
        "option2" : " A - 1; B - 3; C - 2; D - 4 ",
        "option3" : " A - 4; B - 5; C - 2; D - 3 ",
        "option4" : " A - 4; B - 3; C - 2; D - 1 "
      }
    },
    {
      "index" : 4,
      "question" : "In Sanskrit plays written during the Gupta period women and Sudras speak:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0",
      "description" : "SW4gU2Fuc2tyaXQgcGxheXMgb2YgR3VwdGEgcGVyaW9kIHdvbWVuIGFuZCBTdWRyYXMgIHNwZWFrIHByYWtyaXQgYW5kIEVsaXRlIGNsYXNzIHNwZWFrIFNhbnNrcml0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sanskrit ",
        "option2" : " Prakrit ",
        "option3" : " Pali ",
        "option4" : " Sauraseni "
      }
    },
    {
      "index" : 5,
      "question" : "The name by which Ashoka is generally referred to his inscriptions is:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1",
      "description" : "SW4gdGhlIHllYXIgMTkxNSBuZWFyIGEgdmlsbGFnZSBjYWxsZWQgTWFza2kgaW4gUmFpY2h1ciAgRGlzdHJpY3Qgb2YgS2FybmF0YWthLCBhIHJvY2sgaW5zY3JpcHRpb24gd2FzIGRpc2NvdmVyZWQgb24gIGEgaGlsbC4gSW4gdGhpcyBpbnNjcmlwdGlvbiBmb3IgdGhlIGZpcnN0IHRpbWUgdGhlIG5hbWUgb2YgQXNob2thICB3YXMgZm91bmQgd2l0aCB0aXRsZXMgbGlrZSBEZXZhbmFtcHJpeWEgYW5kIFByaXlhZGFyc2hpLiBJdCAgd2FzIHRoZW4gY2VydGFpbiB0aGF0IERldmFuYW1wcml5YSBQcml5YWRhcnNoaSB3YXMgbm8gIG90aGVyIHRoYW4gQXNob2thLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chakravarti ",
        "option2" : " Dharmadeva ",
        "option3" : " Dharmakirti ",
        "option4" : " Priyaarsi "
      }
    },
    {
      "index" : 6,
      "question" : "The term 'Yavanapriya' mentioned in ancient Sanskrit texts denoted:     ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2",
      "description" : "WWF2YW5hcyB3ZXJlIEluZG8tR3JlZWtzLiBUaGV5IGxpa2VkIHBlcHBlciwgdGhhdCBpcyAgd2h5IHBlcHBlciB3YXMga25vd24gYXMgWWF2YW5hcHJpeWEuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a fine variety of Indian Muslim ",
        "option2" : " ivory ",
        "option3" : " damsels sent to the Greek court for dance  performance ",
        "option4" : " pepper "
      }
    },
    {
      "index" : 7,
      "question" : "The concept of Anuvrata was advocated by:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3",
      "description" : "QW51dnJhdGEgd2FzIHRoZSBmaXZlIG1haW4gdGVhY2hpbmdzIG9mIEphaW5pc20tICBBaGltc2EsIEFzYXRleWEsIEFwYXJpZ3JhaGEsIFNhdHlhIGFuZCBCcmFobWFjaGFyeWEg",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mahayana Buddhism ",
        "option2" : " Hinayana Buddhism ",
        "option3" : " Jainism ",
        "option4" : " The Lokayata school "
      }
    },
    {
      "index" : 8,
      "question" : "According to Mimamsa system of philosophy, liberation is possible by means by:    ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw4",
      "description" : "TWltYW5zYSBtZWFucyBpbnZlc3RpZ2F0aW9uIG9yIGVucXVpcnkuIFRoZSBwcmltYXJ5ICBlbnF1aXJ5IGlzIGludG8gdGhlIG5hdHVyZSBvZiBkaGFybWEgYmFzZWQgb24gY2xvc2UgdGhlb2xvZ3kgIG9mIHRoZSBWZWRhcy4gSXQgaGFzIHR3byBkaXZpc2lvbnMsIFB1cnZhIE1pbWFuc2EgYW5kIFV0dGFyICBNaW1hbnNhLiBUaGUgUHVydmEgTWltYW5zYSBleHBsYWlucyB0aGUgRGhhcm1hIGFzIGEgICJ2aXJ0dWUiLCAibW9yYWxpdHkiIG9yICJkdXR5Ii4gRGhhcm1hIGlzIHRoZSBlc3NlbnRpYWxseSAgcml0dWFsaXNtLCBhbmQgdGhlcmUgaXMgYSBncmVhdCBzaWduaWZpY2FuY2Ugb2YgdGhlIEthcm1hIG9yICBhY3Rpb24gaW4gYXR0YWluaW5nIERoYXJtYS4gTWltYW5zYSBzeXN0ZW0gb2YgcGhpbG9zb3BoeSAgc3RyZXNzZXMgb24gdGhlIGRvY3RyaW5lIG9mICJrYXJtYSIuIEl0IHNheXMgdGhhdCBsaWJlcmF0aW9uICBpcyBwb3NzaWJsZSBieSBtZWFucyBvZiBwZXJmb3JtaW5nICJLYXJtYS4iIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " jnana ",
        "option2" : " hakti ",
        "option3" : " yoga ",
        "option4" : " karma "
      }
    },
    {
      "index" : 9,
      "question" : "Bronze icons of Nataraja cast during the Chola period invariably show the deity with:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw5",
      "description" : "Rm91ciBoYW5kZWQgQnJvbnplIGljb24gb2YgTmF0YXJhamEgaXMgdGhlIGZpbmVzdCAgZXhhbXBsZSBvZiBDaG9sYSBzY3VscHR1cmUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " eight hands ",
        "option2" : " six hands ",
        "option3" : " four hands ",
        "option4" : " two hans "
      }
    },
    {
      "index" : 10,
      "question" : "According to ancient Indian cosmogonic ideas the sequential order of the cycle of four acons (yugas) is:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMA==",
      "description" : "QSBjb21wbGV0ZSBZdWdhIHN0YXJ0cyB3aXRoIHRoZSBTYXR5YSBZdWdhIChLcml0YSksICB2aWEgVHJldGEgWXVnYSBhbmQgRHZhcGFyYSBZdWdhIGludG8gYSBLYWxpIFl1Z2EuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dvapara, Krita, Treta and Kali ",
        "option2" : " Krita, Dvapara, Treta and Kali ",
        "option3" : " Krita, Treta, Dvapara and Kali ",
        "option4" : " Treta, Dvapara, Kali and Krita "
      }
    },
    {
      "index" : 11,
      "question" : "Which one of the following temples figured in the news regarding the institution of the Devadasi?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMQ==",
      "description" : "RGV2YWRhc2kgaXMgYSBnaXJsICJkZWRpY2F0ZWQiIHRvIHdvcnNoaXAgYW5kIHNlcnZpY2UgIG9mIGEgZGVpdHkgb3IgYSB0ZW1wbGUgZm9yIHRoZSByZXN0IG9mIGhlciBsaWZlLiBUaGV5IHdlcmUgIENvbnNpZGVyZWQgdGhlIGh1bWFuIHdpZmUgb2YgTG9yZCBKYWdhbm5hdGguIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jagannath temple, Puri ",
        "option2" : " Pashupatinath temple, Kathmandu ",
        "option3" : " Kandariya Mahadev temple, Khajuraho ",
        "option4" : " Chausath Yogini temple, Bhedaghat "
      }
    },
    {
      "index" : 12,
      "question" : "The river most mentioned in early Vedic literature is :  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMg==",
      "description" : "U2FwdGEgU2luZGh1IHBsYXkgYSBwcm9taW5lbnQgcGFydCBpbiB0aGUgaHltbnMgb2YgIHRoZSBSaWd2ZWRhLCBhbmQgY29uc2VxdWVudGx5IGluIGVhcmx5IFZlZGljIHJlbGlnaW9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sindhu ",
        "option2" : " Sutudri ",
        "option3" : " Sarasvati ",
        "option4" : " Ganga "
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following is not a part of early Jains literature?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxMw==",
      "description" : "VGhlcmlnYXRoYSB3YXMgYSBwYXJ0IG9mIHRoZSBCdWRkaGlzdCBsaXRlcmF0dXJlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Therigatha ",
        "option2" : " Acarangasutra ",
        "option3" : " Sutrakritanga ",
        "option4" : " Brihatkalpasutra "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following were common to both Buddhism and Jainism?  1. Avoidance of extremities of penance and enjoyment 2. Indifference to the authority of the Vedas 3. Denial of efficacy of rituals 4. Non-injury to animal life Select the answer using the codes given below: Codes: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNA==",
      "description" : "Qm90aCBkZW5pZWQgdGhlIGF1dGhvcml0eSBvZiB0aGUgVmVkYXMgYW5kIHRoZSAgbmVjZXNzaXR5IG9mIHBlcmZvcm1pbmcgc2FjcmlmaWNlcyBhbmQgcml0dWFscy4gQm90aCBvZiB0aGVtICB3ZXJlIG9wcG9zZWQgdG8gYW5pbWFsIHNhY3JpZmljZXMuICAgQSAxMCA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1, 3, and 4 ",
        "option4" : " 1 an 2 "
      }
    },
    {
      "index" : 15,
      "question" : "In the context of ancient Indian society which one of the following terms does not belong to the category of the other three?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNQ==",
      "description" : "S29zYSB3YXMgdXNlZCBmb3IgdHJlYXN1cnkgYW5kIHRoZSByZXN0IG9mIHRoZSB0aHJlZSAgdGVybXMgd2VyZSByZWxhdGVkIHRvIGZhbWlseS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kula ",
        "option2" : " Vamsa ",
        "option3" : " Kosa ",
        "option4" : " Gotra "
      }
    },
    {
      "index" : 16,
      "question" : "Who among the following is known for his work on medicine during the Gupta period?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNg==",
      "description" : "U3VzcnV0aGEgU2FtaGl0YSB3YXMgd3JpdHRlbiBieSBTdXNydXRoYS4gSGUgd2FzICBzYWlkIHRvIGhhdmUgYmVlbiB0aGUgYmVzdCBzdXJnZW9uIGR1cmluZyB0aGUgR3VwdGEgcGVyaW9kLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Saumilla ",
        "option2" : " Sudraka ",
        "option3" : " Shaunaka ",
        "option4" : " Susrutha "
      }
    },
    {
      "index" : 17,
      "question" : "Which one of the following sculptures was invariably used green schist as the medium?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxNw==",
      "description" : "VGhlIEJoYXJodXQgc3R1cGEgbWF5IGhhdmUgYmVlbiBlc3RhYmxpc2hlZCBieSB0aGUgIE1hdXJ5YSBLaW5nIEFzaG9rYSBpbiB0aGUgM3JkIGNlbnR1cnkgQkNFLCBidXQgbWFueSAgd29ya3Mgb2YgYXJ0IHdlcmUgYXBwYXJlbnRseSBhZGRlZCBkdXJpbmcgdGhlIFN1bmdhIHBlcmlvZCwgIGZyb20gMm5kIGNlbnR1cnkgQkNFLiBUaGUgcnVpbmVkIHN0dXBhIGlzIHN0aWxsIGF0IEJoYXJodXQsICBob3dldmVyIHRoZSBnYXRld2F5cyBhbmQgcmFpbGluZ3Mgd2VyZSBkaXNtYW50bGVkIGFuZCAgcmVhc3NlbWJsZWQgYXQgS29sa2F0YSBNdXNldW0uIFRoZXkgY29udGFpbiBudW1lcm91cyAgYmlydGggc3RvcmllcyBvZiB0aGUgQnVkZGhhJ3MgcHJldmlvdXMgbGl2ZXMsIG9yIEphdGFrYSB0YWxlcy4gIE1hbnkgb2YgdGhlbSBhcmUgaW4gdGhlIHNoYXBlIG9mIGxhcmdlLCByb3VuZCBtZWRhbGxpb25zLiAgVHdvIG9mIHRoZSBwYW5lbHMgYXJlIGF0IHRoZSBTbWl0aHNvbmlhbi4gQmhhcmh1dCBzY3VscHR1cmVzICB3ZXJlIGludmFyaWFibHkgdXNlZCBncmVlbiBzY2hpc3QgYXMgdGhlIG1lZGl1bS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Maurya sculptures ",
        "option2" : " Mathura sculptures ",
        "option3" : " Bharhut sculptures ",
        "option4" : " Gandhara sculptures "
      }
    },
    {
      "index" : 18,
      "question" : "Match List-I with List-II and select the correct answer:  List-I List-II A. Vishakhadatta 1. Medicine B. Varahamihira 2. Drama C. Charaka 3. Astronomy D. Brahmagupta 4. Mathematics Codes: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxOA==",
      "description" : "VmlzaGFraGFkYXR0YSB3cm90ZSBhIGRyYW1hIG5hbWVkICdNdWRyYSAgUmFrc2hhc2EnLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B -  3; C - 4; D - 2 ",
        "option2" : " A - 2; B -  1; C - 3; D - 4 ",
        "option3" : " A - 2; B - 3;  C - 1; D - 4 ",
        "option4" : " A - 3; B - 4;  C - 1; D - 2 "
      }
    },
    {
      "index" : 19,
      "question" : "Which one of the following texts of ancient India allows divorce to a wife deserted by her husband?              ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwxOQ==",
      "description" : "QXJ0aGFzaGFzdHJhIHdhcyB3cml0dGVuIGJ5IEthdXRpbHlhLiBJbiB0aGlzIGJvb2sgICdNb2tzaGEnIGhhcyBiZWVuIHVzZWQgZm9yIGRpdm9yY2UuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kamasutra ",
        "option2" : " Manava Dharma Shastra ",
        "option3" : " Sukra Nitisara ",
        "option4" : " Arthashastra "
      }
    },
    {
      "index" : 20,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:                                    List-I List-II A. Gupta 1. Badami B. Chandella 2. Panamalai C. Chalukya 3. Khajuraho D. Pallava 4. Deogarh Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMA==",
      "description" : "QmFkYW1pIHdhcyBhbHNvIGtub3duIGFzIFZhdGFwaSBpbiBCaWphcHVyIGRpc3RyaWN0IG9mICBLYXJuYXRha2EuIFBhbmFtYWxhaSBvciBLYW5jaGkgaW4gVGFtaWwgTmFkdSB3YXMgdGhlIGNhcGl0YWwgIG9mIFBhbGxhdmFzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 4; B - 3; C - 1; D - 2 ",
        "option2" : " A - 4; B - 2; C - 3; D - 1 ",
        "option3" : " A - 2; B - 3; C - 4; D - 1 ",
        "option4" : " A - 3; B - 4; C - 1; D - 2 "
      }
    },
    {
      "index" : 21,
      "question" : "Which one of the following statements regarding Ashoka stone pillars is incorrect?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMQ==",
      "description" : "QXNob2thIHN0b25lIHBpbGxhcnMgd2VyZSBtZWFudCB0byBzcHJlYWQgaGlzIERoYW1tYSAgKG5vdCB0aGUgcGFydCBvZiBhcmNoaXRlY3R1cmFsIHN0cnVjdHVyZS4pIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " These are highly polished ",
        "option2" : " These are monolithic ",
        "option3" : " The shaft of pillars is tapering in shape ",
        "option4" : " These are parts of architectural structures "
      }
    },
    {
      "index" : 22,
      "question" : "Which one of the following scripts of ancient India was written from right to left?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMg==",
      "description" : "S2hhcm9zdGhpIHNjcmlwdCB3YXMgZGVjaXBoZXJlZCBieSBKYW1lcyBQcmluc2VwICAoMTc5OS0xODQwKSwgdXNpbmcgdGhlIGJpbGluZ3VhbCBjb2lucyBvZiB0aGUgSW5kby1HcmVlayAgcGVyaW9kLiBUaGlzIGluIHR1cm4gbGVkIHRvIHRoZSByZWFkaW5nIG9mIHRoZSBFZGljdHMgb2YgQXNob2thLCAgc29tZSBvZiB3aGljaCwgIGZyb20gdGhlIG5vcnRod2VzdCAgb2YgIHRoZSBBc2lhbiAgc3ViY29udGluZW50LCB3ZXJlIHdyaXR0ZW4gaW4gdGhlIEtoYXJvc3RoaSBzY3JpcHQuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Brahmi ",
        "option2" : " Nandnagari ",
        "option3" : " Sharada ",
        "option4" : " Kharosthi "
      }
    },
    {
      "index" : 23,
      "question" : "The famous dialogue between Nachiketa and Yama is mentioned in the:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyMw==",
      "description" : "S2F0aG9wYW5pc2hhZCBpcyB0aGUgY29udmVyc2F0aW9uIGJldHdlZW4gTmFjaGlrZXRhICBhbmQgWWFtcmFqIChHb2Qgb2YgZGVhdGgpLiBOYWNoaWtldGEgd2FzIGEgc2Vla2VyLCBhbmQgIFlhbXJhaiB3YXMgYSBHdXJ1IChrbm93ZXIgb2Ygc2VjcmV0cykuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chhandogyopanishad ",
        "option2" : " Mundakopanishad ",
        "option3" : " Kathopanishad ",
        "option4" : " Kenopanisha "
      }
    },
    {
      "index" : 24,
      "question" : "Milindapanho is in the form of a dialogue between the king Menander and Buddhist monk:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNA==",
      "description" : "TWlsaW5kYXBhbmhvIHdhc24ndCB3cml0dGVuIGJ5IG9uZSBwZXJzb24uIEl0IGlzIHRoZSAgY29sbGVjdGVkIGRpYWxvZ3VlIGJldHdlZW4gdGhlIEluZG8tR3JlZWsga2luZyBNaWxpbmRhIChvciAgTWVhbmRlcikgYW5kIHRoZSBCdWRkaGlzdCBzYWdlIE5hZ2FzZW5hLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nagasena ",
        "option2" : " Nagarjuna ",
        "option3" : " Nagabhatta ",
        "option4" : " Kumarilabhatta "
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following edicts mentions the personal name of Ashoka?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNQ==",
      "description" : "TWFza2ksIEd1cmphcmEsIE5ldHR1ciBhbmQgVWRlZ29sYW0gaW5zY3JpcHRpb25zICBtZW50aW9uIHRoZSBwZXJzb25hbCBuYW1lIG9mIEFzaG9rYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kalsi ",
        "option2" : " Rummindei ",
        "option3" : " Special Kalinga Edict ",
        "option4" : " Maski "
      }
    },
    {
      "index" : 26,
      "question" : "The following map shows four of the sixteen Mahajanapadas that existed in ancient India:           The places marked A, B, C and D respectively are: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNg==",
      "description" : "TWF0c3lhIE1haGFqYW5hcGFkYSBjb21wcmlzZWQgdGhlIHByZXNlbnQtZGF5ICBKYWlwdXItQmhhcmF0YXB1ci1BbHdhciBhcmVhIG9mIFJhamFzdGhhbiwgQXZhbnRpIHdhcyBvbmUgIG9mIHRoZSBtb3N0IGltcG9ydGFudCBvbmVzIGFuZCBpdHMgY29yZSBhcmVhIGNvbXByaXNlcyB0aGUgIHByZXNlbnQtZGF5IFVqamFpbiBkaXN0cmljdCBvZiBNYWRoeWEgUHJhZGVzaC4gVmF0c2Egd2l0aCAgaXRzIGNhcGl0YWwgYXQgS2F1c2FtYmkgd2FzIGFub3RoZXIgcG93ZXJmdWwgTWFoYWphbmFwYWRhLCAgYW5uZXhlZCBieSBNYWdhZGhhLiBBbmdhIE1haGFqYW5hcGFkYSB3YXMgaW4gR2FuZ2V0aWMgIHZhbGxleS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Matsya, Cedi, Kosala, Anga ",
        "option2" : " Surasena, Avanti, Vatsa, Magadha ",
        "option3" : " Matsya, Avanti, Vatsa, Anga ",
        "option4" : " Surasena, Cedi, Kosala, Magadha "
      }
    },
    {
      "index" : 27,
      "question" : "In the Mahayana Buddhism, the Bodhisatva Avalokitesvara was also known as:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyNw==",
      "description" : "QXZhbG9raXRlxZt2YXJhIGlzIGEgYm9kaGlzYXR0dmEgd2hvIGVtYm9kaWVzIHRoZSAgY29tcGFzc2lvbiBvZiBhbGwgQnVkZGhhcy4gSGUgaXMgb25lIG9mIHRoZSBtb3JlIHdpZGVseSAgcmV2ZXJlZCBib2RoaXNhdHR2YXMgaW4gbWFpbnN0cmVhbSBNYWhheWFuYSBCdWRkaGlzbS4gIEluIFNhbnNrcml0LCBBdmFsb2tpdGVzdmFyYSBpcyBhbHNvIHJlZmVycmVkIHRvIGFzIFBhZG1hcGFuaSAgKCdIb2xkZXIgb2YgdGhlIExvdHVzJykgb3IgTG9rZcWbdmFyYSAoJ0xvcmQgb2YgdGhlIFdvcmxkJykuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vajrapani ",
        "option2" : " Manjusri ",
        "option3" : " Padmapani ",
        "option4" : " Maitreya "
      }
    },
    {
      "index" : 28,
      "question" : "The silver coins issued by the Guptas were called:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyOA==",
      "description" : "UnVwYWthIHdhcyBhIHNpbHZlciBjb2luIG9mIEd1cHRhIHBlcmlvZC4xNiBSdXBha2EgIHdhcyBlcXVhbCB0byAxIGdvbGQgY29pbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rupaka ",
        "option2" : " Karshapana ",
        "option3" : " Dinara ",
        "option4" : " Pana "
      }
    },
    {
      "index" : 29,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I (Author) List-II (Text) A. Varahamihira 1. Prabandha Chintamani B. Vishakhadatta 2. Mrichchha-Katikam C. Sudraka 3. Brihat-Samhita D. Bilhana 4. Devi-Chandraguptam 5. Vikramankadeva-Charita Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwyOQ==",
      "description" : "VmFyYWhhbWloaXJhIGFsc28gd3JvdGUgUGFuY2hhc2lkZGhhbnRpa2E7ICBWaXNoYWtoYWRhdHRhIGFsc28gd3JvdGUgTXVkcmEgUmFrc2hhc2EuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 4; C - 5; D - 2 ",
        "option2" : " A - 3; B - 4; C - 2; D - 5 ",
        "option3" : " A - 5; B - 3; C - 4; D - 1 ",
        "option4" : " A - 1; B - 3; C - 5; D - 2 "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following was a corporation of merchants in ancient India?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMA==",
      "description" : "QSBtYW5pZ3JhbWFtIHdhcyBhIGxhcmdlLCBpbmZsdWVudGlhbCBndWlsZCBvZiBTb3V0aCAgSW5kaWFuIG1lcmNoYW50cyBkdXJpbmcgdGhlIHBlcmlvZCBvZiBXZXN0ZXJuIENoYWx1a3lhbiAgcnVsZXJzIGluIDEwdGggIC0gMTJ0aCBDZW50dXJ5IENFLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chaturvedimangalam ",
        "option2" : " Parishad ",
        "option3" : " Ashtadikgaja ",
        "option4" : " Manigrama "
      }
    },
    {
      "index" : 31,
      "question" : "The Badami rock inscription of Pulakesin I is dated in the Saka year 465. If the same were to be dated in Vikrama Samvat, the year would be:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMQ==",
      "description" : "VGhlIFNha2EgZXJhIHN0YXJ0ZWQgaW4gNzggQUQsIHdoaWxlIFZpa3JhbSBlcmEgc3RhcnRlZCAgZnJvbSA1OCBCQy4gU28gaWYgd2Ugd2FudCB0byBjb252ZXJ0IEJhZGFtaSByb2NrIGluc2NyaXB0aW9uICBvZiBQdWxha2VzaW4gSSB0byBWaWtyYW0gZXJhLCBpdCB3aWxsIGJlIDQ2NSArIDc4ICsgNTggPSA2MDEgIFZpa3JhbSBTYW12YXQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 601 ",
        "option2" : " 300 ",
        "option3" : " 330 ",
        "option4" : " 407 "
      }
    },
    {
      "index" : 32,
      "question" : "Many of the Greeks, Kushanas and Shakas embraced Buddhism rather than Hinduism because:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMg==",
      "description" : "VGhleSBlbWJyYWNlZCBCdWRkaGlzbSBiZWNhdXNlIGNhc3RlIHJpZGRlbiAgSGluZHVpc20gZGlkIG5vdCBhdHRyYWN0IHRoZW0uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism was in the ascendant at that time ",
        "option2" : " they had renounced the policy of war and violence ",
        "option3" : " caste-ridden Hinduism did not attract them ",
        "option4" : " Buddhism provided easier access to Indian society "
      }
    },
    {
      "index" : 33,
      "question" : "The Ashoka major rock edicts which tell us about the Sangam Kingdom include rock edicts:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzMw==",
      "description" : "VGhlIGxsIGFuZCBYbGxsIHJvY2sgZWRpY3RzIG1lbnRpb24gdGhlIHNvdXRoZXJuICBraW5nZG9tcyBvZiAgQ2hvbGEsIFBhbmR5YSwgU2F0eWFwdXRyYSwgS2VyYWxhcHV0cmEgYW5kICBUYW1iYXBhbm5pLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " I and X ",
        "option2" : " I and XI ",
        "option3" : " II and XIII ",
        "option4" : " II an XIV "
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following pairs are correctly matched?  1. Mrichchakatikam-Shudraka 2. Buddhacharita-Vasuvandhu 3. Mudrarakshasha-Vishakadatta 4. Harshacharita-Banabhatta Select the correct answer using the codes given below: Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNA==",
      "description" : "QnVkZGhhY2hhcml0YSB3YXMgd3JpdHRlbiBieSBBc2h2YWdob3NoLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 1, 3 and 4 ",
        "option3" : " 1 and 4 ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 35,
      "question" : "What is the correct chronological order in which the following appeared in India?  1. Gold coins 2. Punch marked silver coins 3. Iron plough 4. Urban culture Select the correct answer using the codes given below: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNQ==",
      "description" : "SW4gSW5kaWEgSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiAgYXBwZWFyZWQgdGhlIGZpcnN0ICBzaWducyBvZiB1cmJhbml6YXRpb24gYmV0d2VlbiAyNTAwIGFuZCAyMDAwIEJDRS4gIEFjY29yZGluZyB0byByZXNlYXJjaGVycywgaXQgaXMgYSBoYXJkIGZhY3QgdGhhdCB0aGUgZWFybGllc3QgIGtub3duIHNwZWNpbWVuIG9mIGlyb24gcGxvdWdoc2hhcmUgY29tZXMgZnJvbSBHYW53YXJpYSAgaW4gRGlzdHJpY3QgR29yYWtocHVyLCBVdHRhciBQcmFkZXNoIGFuZCBkYXRlcyBmcm9tIGNhLiAgNzAwIEJDLiAgVGhlIGZpcnN0IGRvY3VtZW50ZWQgY29pbmFnZSBpcyBkZWVtZWQgdG8gc3RhcnQgd2l0aCAnUHVuY2ggIE1hcmtlZCcgY29pbnMgaXNzdWVkIGJldHdlZW4gdGhlIDd0aC02dGggY2VudHVyeSBCQyBhbmQgIDFzdGNlbnR1cnkgQUQuICBJdCB3YXMgdGhlIEluZG8gR3JlZWtzIHdobyBydWxlZCBhIGxhcmdlIHBhcnQgb2YgTm9ydGgtICBXZXN0ZXJuIEluZGlhIGFyb3VuZCAyMDAgQkMgKDIyMTggeWVhcnMgYWdvKSB0aGF0IGZpcnN0ICBpbnRyb2R1Y2VkIGNvaW5zIG1hZGUgb2YgUHVyZSBHb2xkIGluIEluZGlhIGJlZm9yZSBLdXNoYW5zLiAgVGhlcmVmb3JlLCAgYWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiB0aGUgY29ycmVjdCAgY2hyb25vbG9naWNhbCBvcmRlciBvZiB0aGUgZXZlbnQgYXBwZWFyZWQgaW4gSW5kaWEgaXMgNCwgMywgMiAgYW5kIDEuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 3, 4, 1, 2 ",
        "option2" : " 3, 4, 2, 1 ",
        "option3" : " 4, 3, 1, 2 ",
        "option4" : " 4, 3, 2, 1 "
      }
    },
    {
      "index" : 36,
      "question" : "Assertion (A): According to Ashoka's edicts social harmony among the people was more important than religious devotion. Reason (R): He spread ideas of equity instead of promotion of religion.  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNg==",
      "description" : "QXNob2thJ3MgZWRpY3RzIHB1dCBzdHJlc3Mgb24gc29jaWFsIGhhcm1vbnkgYW1vbmcgIHRoZSBwZW9wbGUgYnkgc3ByZWFkaW5nIGlkZWFzIG9mIGVxdWl0eSBpbnN0ZWFkIG9mIHByb21vdGlvbiAgb2YgcmVsaWdpb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 37,
      "question" : "Which of the following pairs are correctly matched?    1. Lothal : Ancient dockyard 2. Sarnath : First Sermon of Buddha 3. Rajgir : Lion capital of Ashoka 4. Nalanda : Great seat of Buddhist learning Select the correct answer using the codes given below: Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzNw==",
      "description" : "TGlvbiBjYXBpdGFsIG9mIEFzaG9rYSBpcyBpbiBTYXJhbmF0aCAobm90IFJhamdpcikuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 3 and 4 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 1 an 2 "
      }
    },
    {
      "index" : 38,
      "question" : "Which one of the following ancient Indian records is the earliest royal order to preserve food-grains to be utilised during the crises in the country?                                 ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzOA==",
      "description" : "VGhlIGVhcmxpZXN0IGtub3duIGNvcHBlci1wbGF0ZSBjYWxsZWQgU29oZ2F1cmEgaXMgYSAgTWF1cnlhIHJlY29yZCB0aGF0IG1lbnRpb25zIGZhbWluZSByZWxpZWYgZWZmb3J0cy4gSXQgaXMgb25lICBvZiB0aGUgdmVyeSBmZXcgcHJlLUFzaG9rYSBCcmFobWkgaW5zY3JpcHRpb25zIGluIEluZGlhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sohgaura Copper-plate ",
        "option2" : " Rummindei Pillar-edict of Ashoka ",
        "option3" : " Prayaga-prasasti ",
        "option4" : " Mehrauli Pillar inscription of Chandra "
      }
    },
    {
      "index" : 39,
      "question" : "The concept of Eight fold path forms the theme of:   ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXwzOQ==",
      "description" : "VGhlIE5vYmxlIEVpZ2h0IGZvbGQgUGF0aCwgaXMgb25lIG9mIHRoZSBwcmluY2lwYWwgIHRlYWNoaW5ncyBvZiB0aGUgQnVkZGhhLCB3aG8gZGVzY3JpYmVkIGl0IGFzIHRoZSB3YXkgbGVhZGluZyAgdG8gdGhlIGNlc3NhdGlvbiBvZiBzdWZmZXJpbmcgKER1a2toYSkgYW5kIGF0dGFpbm1lbnQgb2YgIHNlbGYtYXdha2VuaW5nLiBJbiBCdWRkaGlzdCBzeW1ib2xpc20sIHRoZSBOb2JsZSBFaWdodCAgZm9sZCBQYXRoIGlzIG9mdGVuIHJlcHJlc2VudGVkIGJ5IG1lYW5zIG9mIHRoZSBEaGFybWEgd2hlZWwgIChEaGFybWFjaGFrcmEpLCB3aG9zZSBlaWdodCBzcG9rZXMgcmVwcmVzZW50IHRoZSBlaWdodCAgZWxlbWVudHMgb2YgdGhlIHBhdGguIEVpZ2h0IGZvbGQgcGF0aCBpbmNsdWRlcyByaWdodCAgdW5kZXJzdGFuZGluZywgcmlnaHQgc3BlZWNoLCByaWdodCBsaXZlbGlob29kOyByaWdodCAgbWluZGZ1bG5lc3MsIHJpZ2h0IHRob3VnaHQsIHJpZ2h0IGFjdGlvbiwgcmlnaHQgZWZmb3J0IGFuZCAgcmlnaHQgY29uY2VudHJhdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dipavamsa ",
        "option2" : " Divyavadana ",
        "option3" : " Mahaparinibban ",
        "option4" : " Dharma Chakara Pravartana Sutta "
      }
    },
    {
      "index" : 40,
      "question" : "The given map relates to :                                                ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0MA==",
      "description" : "VGhlIGdpdmVuIG1hcCBpcyByZWxhdGVkIHRvIHRoZSByZWlnbiBvZiBBc2hva2EgdG93YXJkcyAgZW5kIG9mIGhpcyBydWxlLiBBc2hva2EgKDMwNC0yMzIgQkMpLCBwb3B1bGFybHkga25vd24gYXMgIEFzaG9rYSB0aGUgR3JlYXQsIHdhcyBhbiBJbmRpYW4gZW1wZXJvciBvZiB0aGUgTWF1cnlhICBEeW5hc3R5IHdobyBydWxlZCBvdmVyIHRoZSBJbmRpYW4gc3ViY29udGluZW50IGZyb20gMjY5ICBCQyB0byAyMzIgQkMuIEhpcyBlbXBpcmUgc3RyZXRjaGVkIGZyb20gcHJlc2VudC1kYXkgIFBha2lzdGFuLCBBZmdoYW5pc3RhbiBpbiB0aGUgd2VzdCwgdG8gdGhlIHByZXNlbnQtZGF5ICBCYW5nbGFkZXNoIGFuZCB0aGUgSW5kaWFuIHN0YXRlIG9mIEFzc2FtIGluIHRoZSBlYXN0LCBhbmQgIGFzIGZhciBzb3V0aCBhcyBub3J0aGVybiBLZXJhbGEgYW5kIEFuZGhyYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kanishka at the time of his death. ",
        "option2" : " Samudragupta after the close of his South Indian  campaign. ",
        "option3" : " Ashoka towards close of his reign. ",
        "option4" : " Empire of Thaneswar on the eve of Harsha's accession. "
      }
    },
    {
      "index" : 41,
      "question" : "From the third century AD when the Hun invasion ended the Roman Empire, the Indian merchants relied more and more on the:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0MQ==",
      "description" : "QWZ0ZXIgdGhlIDNyZCBjZW50dXJ5IEFEIFJvbWFuIGVtcGlyZSBjYW1lIHRvIGFuICBlbmQuIEluZGlhbiBtZXJjaGFudHMgbWVhbndoaWxlICBoYWQgYmVndW4gdG8gcmVseSBtb3JlICBoZWF2aWx5IG9uIHRoZSBzb3V0aC1lYXN0IEFzaWFuIFRyYWRlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " African trade ",
        "option2" : " West-European trade ",
        "option3" : " South-East Asian trade ",
        "option4" : " Middle-Eastern trade "
      }
    },
    {
      "index" : 42,
      "question" : "The following persons came to India at one time or another: 1. Fa-Hien 2. I-Tsing 3. Megasthanese 4. Hieun-Tsang The correct chronological sequence of their visits is: (a) 3, 1, 2, 4 (b) 3, 1, 4, 2                     city state of India in the 6th century B.C. ?                ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Mg==",
      "description" : "RmEtSGllbi00MDUtNDExIENFOyBJLVRzaW5nLTY3MS02OTUgQ0U7ICBNZWdhc3RoYW5lc2UgLSAzMDItMjk4IEJDOyBIaWV1bi1Uc2FuZy02MzAtNjQ1Q0Ug",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Gandhar ",
        "option2" : " Kamoj ",
        "option3" : " 1, 3, 2, 4 ",
        "option4" : " 1, 3, 4, 2  43. Which one of the following was initially the most powerful "
      }
    },
    {
      "index" : 44,
      "question" : "The Indo-Laws Kingdom set up in north Afghanistan in the beginning of the second century B.C. was:               ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0NA==",
      "description" : "QmFjdHJpYSB3YXMgdGhlIGFuY2llbnQgY2l2aWxpemF0aW9ucyBvZiBJcmFuaWFuIHBlb3BsZXMuICBBbmNpZW50IEJhY3RyaWEgd2FzIGxvY2F0ZWQgYmV0d2VlbiB0aGUgSGluZHUgS3VzaCAgbW91bnRhaW4gcmFuZ2UgYW5kIHRoZSBBbXUgRGFyeWEgcml2ZXIsIGNvdmVyaW5nIHRoZSBmbGF0ICByZWdpb24gdGhhdCBzdHJhZGRsZXMgbW9kZXJuLWRheSBBZmdoYW5pc3RhbiBhbmQgVGFqaWtpc3Rhbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bactria ",
        "option2" : " Scythia ",
        "option3" : " Zedrasia ",
        "option4" : " Aria "
      }
    },
    {
      "index" : 45,
      "question" : "The term 'Aryan' denotes:                                              ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0NQ==",
      "description" : "QXJ5YW4gaXMgaW4gZmFjdCBhIGxpbmd1aXN0aWMgdGVybSBpbmRpY2F0aW5nIGEgc3BlZWNoICBncm91cCBvZiBJbmRvLUV1cm9wZWFuIG9yaWdpbiwgYW5kIGlzIG5vdCBhbiBldGhuaWMgdGVybS4gIEUgIEIgIEQgIF84ICAzNCAgMiAgQW5jaWVudCBIaXN0b3J5IEEgMTEg",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " an ethnic group ",
        "option2" : " a nomadic people ",
        "option3" : " a speech group ",
        "option4" : " a superior race "
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following ports handled the North Indian trade during the Gupta period?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Ng==",
      "description" : "VGFtcmFsaXB0YSBvciBUYW1yYWxpcHRpIHdhcyB0aGUgbmFtZSBvZiBhbiBhbmNpZW50ICBjaXR5IG9uIHRoZSBCYXkgb2YgQmVuZ2FsIGNvcnJlc3BvbmRpbmcgd2l0aCBUYW1sdWsgaW4gIG1vZGVybi1kYXkgSW5kaWEuIFRhbXJhbGlwdGEgbWF5IGhhdmUgYmVlbiBvbmUgb2YgdGhlICBtb3N0IGltcG9ydGFudCB1cmJhbiBjZW50cmVzIG9mIHRyYWRlIGFuZCBjb21tZXJjZSBvZiBlYXJseSAgaGlzdG9yaWMgSW5kaWEsIHRyYWRpbmcgYWxvbmcgdGhlIFNpbGsgUm9hZCB3aXRoIENoaW5hLCBieSAgVXR0YXJhcGF0aGEsIHRoZSBub3J0aGVybiBoaWdoIHJvYWQsIHRoZSBtYWluIHRyYWRlIHJvdXRlICBpbnRvIHRoZSBNaWRkbGUgRWFzdCBhbmQgRXVyb3BlOyBhbmQgYnkgc2VhZmFyaW5nIHJvdXRlcyB0byAgQmFsaSwgSmF2YSBhbmQgdGhlIEZhciBFYXN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tamralipti ",
        "option2" : " Broach ",
        "option3" : " Kalyan ",
        "option4" : " Cambray "
      }
    },
    {
      "index" : 47,
      "question" : "Assertion (A): The Aham and Puram poems of the Padinen Kilukanakku group formed a continuation of the Sangam composition. Reason (R): They were included under the post-Sangam works as against the Sangam works proper.                ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0Nw==",
      "description" : "VGhlIGRpZGFjdGljIHdvcmtzIG9mIFNhbmdhbSBwZXJpb2QgYXJlIGNhbGxlZCAgS2lsdWthbmFra3UgKDE4IG1pbm9yIGdyb3VwcykgY29uc2lzdGluZyBvZiBUaXJ1a3VycmFsIGFuZCAgTmFsYWRpeWFyLiBUaGUgQWhhbSBhbmQgUHVyYW0gcG9lbXMgb2YgdGhlIEtpbHVrYW5ha2t1ICBncm91cCB3ZXJlIGNvbXBvc2VkIGluIHBvc3QtU2FuZ2FtIHBlcmlvZC4gVGhhdCdzIHdoeSAgUiBleHBsYWlucyBBLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation  of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 48,
      "question" : "Assertion (A): The emphasis of Jainism on non-violence (ahimsa) prevented agriculturalists from embracing Jainism. Reason (R): Cultivation involved killing of insects and pests.  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0OA==",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSB0cnVlIGFuZCB0aGUgcmVhc29uIGlzIGNvcnJlY3QgIGV4cGxhbmF0aW9uIG9mIGFzc2VydGlvbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 49,
      "question" : "Assertion (A): The origin of feudal system in ancient India can be traced to military campaigns. Reason (R): There was considerable expansion of the feudal system during the Gupta period.  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw0OQ==",
      "description" : "Qm90aCB0aGUgc3RhdGVtZW50cyBhcmUgdHJ1ZSBidXQgZG8gbm90IGV4cGxhaW4gZWFjaCBvdGhlci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 50,
      "question" : "Assertion (A): Ashoka annexed Kalinga to the Mauryan Empire. Reason (R): Kalinga controlled the land and sea routes to South India.  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1MA==",
      "description" : "QXNob2thIGFubmV4ZWQgS2FsaW5nYSB0byB0aGUgTWF1cnlhbiBlbXBpcmUgaW4gIDI2MSBCQy4gVGhvdWdoIEFzaG9rYSBhYmFuZG9uZWQgdGhlIHBvbGljeSBvZiBwaHlzaWNhbCAgb2NjdXBhdGlvbiBpbiBmYXZvdXIgb2YgcG9saWN5IG9mIGN1bHR1cmFsIGNvbnF1ZXN0IGFmdGVyICB0aGUgS2FsaW5nYSBXYXIsIHlldCBoZSByZXRhaW5lZCBLYWxpbmdhIGFmdGVyIGl0cyBjb25xdWVzdCAgYW5kIGluY29ycG9yYXRlZCBpdCBpbnRvIGhpcyBlbXBpcmUuIFRodXMgUiBleHBsYWlucyBBLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 51,
      "question" : "The practice of military governorship was first introduced in India by the:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1MQ==",
      "description" : "R3JlZWtzIGZpcnN0IGludHJvZHVjZWQgbWlsaXRhcnkgZ292ZXJub3JzaGlwIGluIEluZGlhLiAgVGhleSBhcHBvaW50ZWQgdGhlaXIgR292ZXJub3JzIGNhbGxlZCBzdHJhdGVnb3MuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Greeks ",
        "option2" : " Shakas ",
        "option3" : " Parthians ",
        "option4" : " Mughals "
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following dynasties was ruling over North India at the time of Alexander's invasion?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Mg==",
      "description" : "QWxleGFuZGVyIGludmFkZWQgSW5kaWEgaW4gMzI2IEJDLiBOYW5kYXMgd2VyZSBydWxpbmcgIG92ZXIgSW5kaWEgYXQgdGhhdCB0aW1lLiBUaGUgY2hyb25vbG9naWNhbCBvcmRlciBvZiB0aGVzZSA0ICBkeW5hc3RpZXMgd2FzOiBOYW5kYSwgTWF1cnlhLCBTdW5nYSBhbmQgS2FudmFzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nanda ",
        "option2" : " Maurya ",
        "option3" : " Sunga ",
        "option4" : " Kanva "
      }
    },
    {
      "index" : 53,
      "question" : "Hoysala monuments are found in:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Mw==",
      "description" : "VGhlIGNhcGl0YWwgb2YgdGhlIEhveXNhbGFzIHdhcyBpbml0aWFsbHkgbG9jYXRlZCBhdCAgQmVsdXIgYnV0IHdhcyBsYXRlciBtb3ZlZCB0byBIYWxlYmlkLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hampi and Hosper ",
        "option2" : " Halebid and Belur ",
        "option3" : " Mysore and Bangalore ",
        "option4" : " Sringeri and Dharwar "
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following pairs is correctly matched?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1NA==",
      "description" : "UGFpbnRlZCBHcmV5d2FyZSBiZWxvbmdlZCB0byBsYXRlciBWZWRpYyBwZXJpb2QgKDEwMDAtICA2MDBCQykuIEFqYW50YSBwYWludGluZ3MgYmVsb25nIHRvIHRoZSBHdXB0YSBwZXJpb2QuIFBhaGFyaSAgU2Nob29sIGNhbWUgaW50byBleGlzdGVuY2UgZHVyaW5nIHRoZSBNdWdoYWwgcGVyaW9kLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The Harappan civilization - Painted Greyware ",
        "option2" : " The Kushans - Gandhra School of Art ",
        "option3" : " The Mughals - Ajanta Paintings ",
        "option4" : " The Marathas - Pahari School of Painting "
      }
    },
    {
      "index" : 55,
      "question" : "Assertion (A): Harshavardhana convened the Prayag Assembly. Reason (R): He wanted to popularize only the Mahayana form of Buddhism.  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1NQ==",
      "description" : "VG8gcG9wdWxhcml6ZSB0aGUgTWFoYXlhbmEgZm9ybSBvZiBCdWRkaGlzbS4gIEhhcnNoYXZhcmRoYW5hIGNvbnZlbmVkIGFuIGFzc2VtYmx5IGF0IEthbm5hdWouIFRoZSAgUHJheWFnIGFzc2VtYmx5IHdhcyBjb252ZW5lZCB0byBwb3B1bGFyaXplIGhpbXNlbGYuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation  of A ",
        "option2" : " Both  A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 56,
      "question" : "Which one of the Chola kings conquered Ceylon?   ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Ng==",
      "description" : "SW4gMTAxNywgUmFqZW5kcmEgY29ucXVlcmVkIENleWxvbiAoU3JpbGFua2EpLiBFYXJsaWVyICBSYWphcmFqYSBJIGNvbnF1ZXJlZCBvbmx5IGhhbGYgb2YgaXQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Aditya-I ",
        "option2" : " Rajaraja-I ",
        "option3" : " Rajendra ",
        "option4" : " Vijayalaya "
      }
    },
    {
      "index" : 57,
      "question" : "Who among the following presided over the Buddhist Council held during the reign of Kanishka at Kashmir ?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1Nw==",
      "description" : "VmFzdW1pdHJhIGFuZCBBc2hhdmFnaG9zaCB0b2dldGhlciBwcmVzaWRlZCBvdmVyICB0aGUgZm91cnRoIGNvdW5jaWwuIEluIHRoaXMgY291bmNpbCBCdWRkaGlzdHMgd2VyZSBkaXZpZGVkICBpbnRvIE1haGF5YW5pc3RzIGFuZCBIaW5heWFuaXN0cy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Parsva ",
        "option2" : " Nagarjuna ",
        "option3" : " Sudraka ",
        "option4" : " Vasumitra "
      }
    },
    {
      "index" : 58,
      "question" : "Which one of the following animals was not represented seals and terracotta art of the Harappan culture?     ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1OA==",
      "description" : "Q293LCBjYW1lbCwgaG9yc2UgYW5kIGxpb24gd2VyZSBub3QgZGVwaWN0ZWQgb24gc2VhbHMuICBVbmljb3JuIChidWxsKSB3YXMgdGhlIGFuaW1hbCBtb3N0IGNvbW1vbmx5IHJlcHJlc2VudGVkICBvbiB0aGUgc2VhbHMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Cow ",
        "option2" : " Elephant ",
        "option3" : " Rhinoceros ",
        "option4" : " Tiger "
      }
    },
    {
      "index" : 59,
      "question" : "Match List-I (Ancient site) with List-II (Archaeological finding) and select the correct answer using the codes given below the lists:  List-I List-II (Ancient site) (Archaeological finding) A. Lothal 1. Ploughed field B. Kalibangan 2. Dockyard C. Dholavira 3. Terrcotta replica of a plough D. Banawali 4. An inscription comprising ten large sized signs of the Harappan script Codes: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw1OQ==",
      "description" : "VGhlIGNvcnJlY3QgbWF0Y2ggaXMgb3B0aW9uIChiKS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B - 2; C - 3; D - 4 ",
        "option2" : " A - 2; B - 1; C - 4; D - 3 ",
        "option3" : " A - 1; B - 2; C - 4; D - 3 ",
        "option4" : " A - 2; B - 1; C - 3; D - 4 "
      }
    },
    {
      "index" : 60,
      "question" : "Which one of the following statements is not correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2MA==",
      "description" : "VGhlIFN0YXR1ZSBvZiBHb21hdGVzaHdhcmEgd2FzIGJ1aWx0IGluIGRlZmVyZW5jZSB0byAgSmFpbiBkZWl0eSBCYWh1YmFsaSwgSXQgZG9lcyBub3QgcmVwcmVzZW50IGxhc3QgVGlydGhhbmthcmEgIG9mIEphaW5zLiBJbmRpYSdzIGxhcmdlc3QgQnVkZGhpc3QgbW9uYXN0ZXJ5IGlzIFRhd2FuZyAgTW9uYXN0ZXJ5IGxvY2F0ZWQgaW4gQXJ1bmFjaGFsIFByYWRlc2guIEl0IGlzIHRoZSBzZWNvbmQgIGxhcmdlc3QgaW4gdGhlIHdvcmxkIGFmdGVyIHRoZSBQb3RhbGEgUGFsYWNlIGluIExoYXNhLCBUaWJldC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The statue of Gomateshwara at Shravana Belagola  represents the last Tirthankara of Jains. ",
        "option2" : " India's largest Buddhist monastery is in Arunachal  Pradesh. ",
        "option3" : " Khajuraho temples were built under Chandela kings. ",
        "option4" : " Hoysaleswara temple is dedicated to Siva. "
      }
    },
    {
      "index" : 61,
      "question" : "In ancient Indian Buddhist monasteries, a ceremony called Pavarana used to be held. It was the:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2MQ==",
      "description" : "UGF2YXJhbmEgaXMgYSBCdWRkaGlzdCBob2x5IGRheSBjZWxlYnJhdGVkIG9uIHRoZSAgZnVsbCBtb29uIG9mIHRoZSBlbGV2ZW50aCBsdW5hciBtb250aC4gSXQgbWFya3MgdGhlIGVuZCAgb2YgdGhlIG1vbnRoIG9mIFZhc3NhLCBzb21ldGltZXMgY2FsbGVkICJCdWRkaGlzdCAgTGVudC4iIFRoaXMgZGF5IG1hcmtzIHRoZSBlbmQgb2YgdGhlIHJhaW55IHNlYXNvbiBpbiAgc29tZSBBc2lhbiBjb3VudHJpZXMgbGlrZSBUaGFpbGFuZCwgd2hlcmUgVGhlcmF2YWRhICBCdWRkaGlzbSBpcyBwcmFjdGljZWQuIE9uIHRoaXMgZGF5LCBlYWNoIG1vbmsgKFBhbGk6ICBiaGlra2h1KSBtdXN0IGNvbWUgYmVmb3JlIHRoZSBjb21tdW5pdHkgb2YgbW9ua3MgIChTYW5naGEpIGFuZCBhdG9uZSBmb3IgYW4gb2ZmZW5zZSBoZSBtYXkgaGF2ZSAgY29tbWl0dGVkIGR1cmluZyB0aGUgVmFzc2EuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " occasion to elect the Sanghparinayaka and two  speakers one on Dhamma and the other on Vinaya ",
        "option2" : " confession by monks of their offences committed  during their stay in the monasteries during the rainy  season ",
        "option3" : " ceremony of initiation of new person into the Buddhist  Sangha in which the head is shaved and when yellow  robes are offered ",
        "option4" : " gathering of Buddhist monks on the next day to the "
      }
    },
    {
      "index" : 62,
      "question" : "The ancient Indian play Mudrarakshasa of Visakhadutt has its subject on:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Mg==",
      "description" : "VGhlIE11ZHJhcmFrc2hhc2EgKCJUaGUgU2lnbmV0IG9mIHRoZSBNaW5pc3RlciIpLCBhICBoaXN0b3JpY2FsIHBsYXkgaW4gU2Fuc2tyaXQgYnkgVmlzaGFraGFkYXR0YSAoNHRoIGNlbnR1cnkgIENFKSBuYXJyYXRlcyB0aGUgYXNjZW50IG9mIHRoZSBraW5nIENoYW5kcmFndXB0YSBNYXVyeWEgIHRvIHBvd2VyIGluIE5vcnRoZXJuIEluZGlhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a conflict between Gods and Demons of ancient Hindu  lore ",
        "option2" : " a romantic story of an Aryan prince and a tribal woman ",
        "option3" : " the story of the power struggle between two Aryan . ",
        "option4" : " the court intrigues at the time of Chandragupta "
      }
    },
    {
      "index" : 63,
      "question" : "Emperor Harsha's southward march was stopped on the Narmada river by:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Mw==",
      "description" : "RW1wZXJvciBIYXJzaGEncyBzb3V0aHdhcmQgbWFyY2ggd2FzIHN0b3BwZWQgb24gIHRoZSBOYXJtYWRhIHJpdmVyIGJ5IFB1bGFrZXNpbiBJSSwgdGhlIENoYWx1a3lhIGtpbmcgb2YgIFZhdGFwaSBpbiBub3J0aGVybiBNeXNvcmUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pulakesin-I ",
        "option2" : " Pulakesin-II ",
        "option3" : " Vikramaditya-I ",
        "option4" : " Vikramaitya-II "
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements: 1. The Cholas defeated Pandya and Chera rulers and established their domination over peninsular India in the early medieval times. 2. The Cholas sent an expedition against Sailendra empire of South-East Asia and conquered some of the areas. Which of these statements is/are correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2NA==",
      "description" : "VGhlIENob2xhIGtpbmdkb20gb2YgdGhlIFNhbmdhbSBwZXJpb2QgZXh0ZW5kZWQgIGZyb20gbW9kZXJuIFRpcnVjaGkgZGlzdHJpY3QgdG8gc291dGhlcm4gQW5kaHJhIFByYWRlc2guICBUaGVpciBjYXBpdGFsIHdhcyBmaXJzdCBsb2NhdGVkIGF0IFVyYWl5dXIgYW5kIHRoZW4gc2hpZnRlZCB0byAgUHVoYXIuIEthcmlrYWxhIHdhcyBhIGZhbW91cyBraW5nIG9mIHRoZSBTYW5nYW0gQ2hvbGFzLiAgUGF0dGluYXBwYWxhaSBwb3J0cmF5cyBoaXMgZWFybHkgbGlmZSBhbmQgaGlzIG1pbGl0YXJ5ICBjb25xdWVzdHMuIEluIHRoZSBCYXR0bGUgb2YgVmVubmkgaGUgZGVmZWF0ZWQgdGhlIG1pZ2h0eSAgY29uZmVkZXJhY3kgY29uc2lzdGluZyBvZiB0aGUgQ2hlcmFzLCBQYW5keWFzIGFuZCBlbGV2ZW4gIG1pbm9yIGNoaWVmdGFpbnMuICBUaGUgQ2hvbGEgZW1wZXJvciBsYXVuY2hlZCBhIHN1Y2Nlc3NmdWwgbmF2YWwgZXhwZWRpdGlvbiAgYWdhaW5zdCB0aGUgc2FpbGVuZHJhIGtpbmdkb20uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 65,
      "question" : "Mrichchhakatika' an ancient Indian book written by Shudraka deals with:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2NQ==",
      "description" : "TXJpY2hjaGhha2F0aWthIChUaGUgQ2xheSBDb3VydCkgaXMgYSBTYW5za3JpdCBwbGF5ICB3cml0dGVuIGJ5IFNodWRyYWthIGluIDJuZCBDIEJDLiBJdCBpcyBhYm91dCBhIHlvdW5nIG1hbiAgbmFtZWQgQ2hhcnVkYXR0YSwgYW5kIGhpcyBsb3ZlIGZvciBWYXNhbnRhc2VuYSwgYSByaWNoICBjb3VydGVzYW4uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the love affair of a rich merchant with the daughter of  a courtesan ",
        "option2" : " the victory of Chandragupta II over the Shaka  Kshatrapas of western India ",
        "option3" : " the military expeditions and exploits of Samudragupta ",
        "option4" : " the love affairs between a Gupta king and a princess of "
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements:  1. Vardhaman Mahavira's mother was the daughter of Lichchhavi chief Chetaka 2. Gautama Buddha's mother was a princess from the Koshalan dynasty 3. Parshvanatha, the twenty-third Tirthankara, belonged to Benaras Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Ng==",
      "description" : "VmFyZGhhbWFuIE1haGF2aXJhJ3MgbW90aGVyLCBUcmlzaGFsYSB3YXMgdGhlIHNpc3RlciAgKG5vdCB0aGUgZGF1Z2h0ZXIpIG9mIExpY2hjaGhhdmkgY2hpZWYgQ2hldGFrYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " 1,"
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements:  1. The last Mauryan ruler, Brihadratha was assassinated by his commander-in-chief, Pushyamitra Sunga. E B D _8 34 2 Ancient History A 5 2. The last Sunga king, Devabhuti was assassinated by his Brahmana Minister Vasudeva Kanva who usurped the throne. 3. The last ruler of the Kanva dynasty was deposed by the Andhras. Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2Nw==",
      "description" : "QWxsIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuIFRoZSBsYXN0IE1hdXJ5YW4gcnVsZXIsICBCcmloYWRyYXRoYSB3YXMgYXNzYXNzaW5hdGVkIGJ5IGhpcyBjb21tYW5kZXItaW4tY2hpZWYsICBQdXNoeWFtaXRyYSAgU3VuZ2EgaW4gIDE4NSBCQy4gIFRoZSBsYXN0ICBydWxlciAgb2YgIEthbnZhICBkeW5hc3R5LCBTdXNoYXJtYSB3YXMgZGVwb3NlZCBieSB0aGUgQW5kaHJhcyBhbmQgIFNhdGF2YWhhbmEgZHluYXN0eSBjYW1lIGludG8gYmVpbmcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " Only 2 ",
        "option3" : " Only 3 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following statements: 1. The Chinese pilgrim Fa-Hien attended the fourth Great Buddhist Council held by Kanishka. 2. The Chinese pilgrim Hiuen-Tsang met Harsha and found him to be antagonistic to Buddhism. Which of the statements given above is/are correct?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2OA==",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIGZvdXJ0aCBCdWRkaGlzdCBDb3VuY2lsICB3YXMgaGVsZCBpbiBLYXNobWlyIGR1cmluZyB0aGUgcmVpZ24gb2YgS2FuaXNoa2EgdW5kZXIgdGhlICBwcmVzaWRlbnRzaGlwIG9mIFZhc3VtaXRyYSBhbmQgQXNodmFnaG9zaC4gRmEtSGllbiB2aXNpdGVkICBJbmRpYSBkdXJpbmcgdGhlIHJlaWduIG9mIENoYW5kcmEgR3VwdGEtSUkgYW5kIG5vdCBkdXJpbmcgIEthbmlzaGthJ3MgcmVpZ24uIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyBIYXJzaGEgd2FzICBub3QgYW50YWdvbmlzdGljIHRvIEJ1ZGRoaXNtIHdoZW4gSGl1ZW4gLVRzYW5nIG1ldCBoaW0uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 69,
      "question" : "With reference to ancient Jainism, which one of the following statements is correct?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw2OQ==",
      "description" : "SmFpbmlzbSBzcHJlYWQgaW4gU291dGggSW5kaWEgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgIEJoYWRyYWJhaHUgKG5vdCBTdGhhbGFiYWh1KS4gVGhlIEphaW5hcyB3aG8gcmVtYWluZWQgIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIEJoYWRyYWJhaHUgd2VyZSBjYWxsZWQgRGlnYW1iYXJhcyAgKG5vdCBTaHZldGFtYmFyYXMpIGFmdGVyIHRoZSBmaXJzdCBjb3VuY2lsIGhlbGQgYXQgUGF0YWxpcHV0cmEgIChtb2Rlcm4gUGF0bmEpIGJ5IFN0aHVsYmFodS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jainism was spread in South India under the leadership  of Sthalabahu. ",
        "option2" : " The Jainas who remained under the leadership of  Bhadrabahu were called Shvetambaras after the council  held at Pataliputra. ",
        "option3" : " Jainism enjoyed the patronage of the Kalinga king  Kharaavela in the first century BC. ",
        "option4" : " In the initial stage of Jainism, the Jainas worshipped "
      }
    },
    {
      "index" : 70,
      "question" : "Which one of the following four Vedas contains an account of magical charms and spells?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3MA==",
      "description" : "QXRoYXJ2YXZlZGEgaXMgYSBib29rIG9mIG1hZ2ljYWwgZm9ybXVsYS4gSXQgY29udGFpbnMgIGNoYXJtcyBhbmQgc3BlbGxzIHRvIHdhcmQtb2ZmIGV2aWwgYW5kIGRpc2Vhc2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rigveda ",
        "option2" : " Yajurveda ",
        "option3" : " Atharvaveda ",
        "option4" : " Samavea "
      }
    },
    {
      "index" : 72,
      "question" : "Who among the following laid the foundation of Rashtrakuta Empire?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Mg==",
      "description" : "RGFudGlkdXJnYSwgYSBmZXVkYXRvcnkgb2YgQ2hhbHVreWFzLCBmb3VuZGVkIHRoZSAgUmFzdHJha3V0YSBlbXBpcmUgaW4gNzUzIEMgRSAoQUQpIHdpdGggdGhlaXIgY2FwaXRhbCBhdCAgTWFueWFraGV0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amostghavarsha I ",
        "option2" : " Dantidurga ",
        "option3" : " Dhruva ",
        "option4" : " Krishna I "
      }
    },
    {
      "index" : 73,
      "question" : "Between which of the following was the ancient town of Takshasila located?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Mw==",
      "description" : "U2luZGh1IHdhcyB0aGUgb2xkIG5hbWUgb2Ygcml2ZXIgSW5kdXMgYW5kIFZpdGFzdGEgIHdhcyB0aGUgb2xkIG5hbWUgb2YgUml2ZXIgSmhlbHVtLiBJbiBwZXJzZW50IHRpbWUgIFRha3NoYXNoaWxhIHNpdHVhdGVkIGluIFBha2lzdGFuLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Indus and Jhelum ",
        "option2" : " Jhelum and Chena ",
        "option3" : " Chenab and Ravi ",
        "option4" : " Ravi an Beas "
      }
    },
    {
      "index" : 74,
      "question" : "With reference to the invaders in ancient India, which one of the following is the correct chronological order?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3NA==",
      "description" : "QWxleGFuZGVyIChHcmVlaywgMzI2IEIuQy5FLik7IFNha2FzICg5MCBCLkMuRS4pOyAgS3VzaGFuYXMgKDQ1IEMuRS4pIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Greeks-Sakas-Kushanas ",
        "option2" : " Greeks- Kushanas-Sakas ",
        "option3" : " Sakas-Greeks- Kushanas ",
        "option4" : " Sakas-Kushanas-Greeks "
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements:  1. The Ikshvaku rulers  of  Southern India were antagonistic towards Buddhism. 2. The Pala rulers of Eastern India were patrons of Buddhism. Which of the statement(s) given above is/ are correct? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3NQ==",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIG1vc3Qgb2YgdGhlIGluc2NyaXB0aW9ucyBvZiAgdGhlIEFuZGhyYSBJa3NodmFrdSBwZXJpb2QgcmVjb3JkIGVpdGhlciB0aGUgY29uc3RydWN0aW9uICBvZiB0aGUgQnVkZGhpc3QgdmloYXJhcyBvciB0aGUgZ2lmdHMgbWFkZSB0byB0aGVtIHdoaWNoICBzaG93cyB0aGF0IHRoZSBJa3NodmFrdSBydWxlcnMgb2YgU291dGhlcm4gSW5kaWEgd2VyZSAgc3VwcG9ydGVycyBvZiBCdWRkaGlzbS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 76,
      "question" : "The Allahabad Pillar inscription is associated with which one of the following?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Ng==",
      "description" : "SXQgd2FzIHdyaXR0ZW4gYnkgU2FtdWRyYWd1cHRhJ3MgY291cnQgcG9ldCBIYXJpc2VuYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mahapadma Nanda ",
        "option2" : " Chandragupta Maurya ",
        "option3" : " Ashoka ",
        "option4" : " Samuragupta "
      }
    },
    {
      "index" : 77,
      "question" : "What does Baudhayan theorem (Baudhayan Sulva Sutras) relate to?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3Nw==",
      "description" : "VGhpcyBpcyBzYW1lIGFzIHRoZSBQeXRoYWdvcmFzIHRoZW9yZW0uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lengths of sides of a right angled triangle ",
        "option2" : " Calculation of the value of pi ",
        "option3" : " Logarithmic calculations ",
        "option4" : " Normal distribution curve "
      }
    },
    {
      "index" : 78,
      "question" : "Anekantavada is a core theory and philosophy of which one of the following?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3OA==",
      "description" : "VGhlIEphaW5hIG1ldGFwaHlzaWNzIGlzIHJlYWxpc3RpYyBhbmQgcmVsYXRpdmlzdGljICBwbHVyYWxpc20uIEl0IGlzIGNhbGxlZCBBbmVrYW50YXZhZGEgb3IgdGhlIGRvY3RyaW5lIG9mICAnbWF5bmVzcyBvZiByZWFsaXR5Jy4gTWF0dGVyIGFuZCBzcGlyaXQgYXJlIHJlZ2FyZGVkIGFzICBzZXBhcmF0ZSBhbmQgaW5kZXBlbmRlbnQgcmVhbGl0aWVzLiAgIEEgMTIg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism ",
        "option2" : " Jainism ",
        "option3" : " Sikkhism ",
        "option4" : " Vaishnavism "
      }
    },
    {
      "index" : 79,
      "question" : "There are only two known examples of cave paintings of the Gupta period in ancient India. One of these is paintings of Ajanta caves. Where is the other surviving example of Gupta paintings?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeXw3OQ==",
      "description" : "QSBjb3BwZXIgcGxhdGUgaW5zY3JpcHRpb24gb2YgTWFoYXJhamEgU3ViYW5kaHUsICByZWNvcmRpbmcgaGlzIGRvbmF0aW9uIGZvciB0aGUgcmVwYWlyIG9mIHRoZSB2aWhhcmEgd2FzIGZvdW5kICBhdCB0aGUgc2l0ZSBvZiBDYXZlIDIuIFRob3VnaCwgdGhlIGRhdGUgb2YgdGhlIEJhZ2ggaW5zY3JpcHRpb24gIGlzIG1pc3NpbmcsIHRoZSBCYWR3YW5pIGNvcHBlciBwbGF0ZSBpbnNjcmlwdGlvbiBpcyBkYXRlZCBpbiAgdGhlIHllYXIgKEd1cHRhIGVyYSkgMTY3ICg0ODcpLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fEFuY2llbnQgSGlzdG9yeQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bagh caves ",
        "option2" : " Ellora caves ",
        "option3" : " Lomas Rishi cave ",
        "option4" : " Nasik caves "
      }
    },
    {
      "index" : 80,
      "question" : "India maintained its early cultural contacts and trade links with Southeast Asia across the Bay of Bengal. For this pre- eminence of early maritime history of Bay of Bengal, which of the following could be the most convincing explanation/ explanations ?   ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODA=",
      "description" : "T3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " As compared to other countries, India had a better  ship-building technology in ancient and medieval times ",
        "option2" : " The rulers of southern India always partronized traders,  Brahmin priests and Buddhist monks in this context. ",
        "option3" : " Monsoon winds across the Bay of Bengal facilitated  sea voyages ",
        "option4" : " Both (a) and (b) are convincing explanations in this "
      }
    },
    {
      "index" : 81,
      "question" : "The Jain philosophy holds that the world is created and maintained by  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODE=",
      "description" : "SmFpbmlzbSBkb2VzIG5vdCBzdXBwb3J0IGJlbGllZiBpbiBhIGNyZWF0b3IgZGVpdHkuICBBY2NvcmRpbmcgdG8gdGhlIEphaW4gZG9jdHJpbmUsIHRoZSB1bml2ZXJzZSBhbmQgaXRzICBjb25zdGl0dWVudHMgKHNvdWwsIG1hdHRlciwgc3BhY2UsIHRpbWUsIGFuZCBtb3Rpb24pIGhhdmUgIGFsd2F5cyBleGlzdGVkLiBBbGwgdGhlIGNvbnN0aXR1ZW50cyBhbmQgYWN0aW9ucyBhcmUgIGdvdmVybmVkIGJ5IHVuaXZlcnNhbCBuYXR1cmFsIGxhd3MuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Universal Law ",
        "option2" : " Universal Truth ",
        "option3" : " Universal Faith ",
        "option4" : " Universal Soul "
      }
    },
    {
      "index" : 82,
      "question" : "Regarding the Indus Valley Civilization, consider the following statements : 1. It was predominantly a secular civilization and the religious element, though present, did not dominate the scene 2. During this period, cotton was used for manufacturing textiles in India   Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODI=",
      "description" : "V2UgaGF2ZSByZWFkIGFib3V0IHRoZSBNZWhyZ2FyaCBjb3R0b24gd2hpY2ggaXMgdGhlICBlYXJsaWVzdCBleGFtcGxlIG9mIENvdHRvbiBjdWx0aXZhdGlvbiBpbiB0aGUgb2xkIHdvcmxkLCBvbGRlciAgdGhhbiB0aGUgUGVydXZpYW5zLiBUaGUgY2xvdGggd2FzIG1hZGUsIGFuZCBldmVuIGR5ZWQsIHNvICBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgZmlyc3Qgc3RhdGVtZW50IGlzIGFsc28gY29ycmVjdCAgYW5kIGhhcyBiZWVuICdsaWZ0ZWQnIGZyb20gYSBmYW1vdXMgaGlzdG9yeSBib29rLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 83,
      "question" : "The 'Dharma' and 'Rita' depict a central Idea of ancient Vedic civilization of India. In this context, consider the following statements :  1. Dharma was a conception of obligations and of the discharge of one's duties to oneself and to others. 2. Rita was the fundamental moral law governing the functioning of the universe and all it contained. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODM=",
      "description" : "J1JpdGEnIHJlZmVycyB0byByZWd1bGF0aW9uIG9yZGVyIGJ5IG5hdHVyZSBhbmQgd2FzICByZWxhdGVkIHRvIHRoZSBjb25kdWN0IG9mIHRoZSBWZWRpYyBHb2RzIGFuZCBIdW1hbnMsICBzb21ld2hlcmUgcmVsYXRlZCB0byB0aGUgbW9yYWwgYW5kIHBoeXNpY2FsIGxhdy4gU3RhdGVtZW50ICAyIGlzIGNvcnJlY3QuICdSaXRhJyB3YXMgbGF0ZXIgcmVwbGFjZWQgYnkgJ0RoYXJtYScgYW5kIHdhcyBhICBtb3JlIHNvcGhpc3RpY2F0ZWQgZm9ybSBvZiBwcmluY2lwbGVzIG9mIGxhdy4gQXMgcGVyICBDaGFuYWt5YSwgJ0RoYXJtYScgd2FzIHRoZSBwcm9tb3Rpb24gb2Ygb25lJ3Mgb3duICBzZWN1cml0eSwgaGFwcGluZXNzIGFzIHdlbGwgYXMgdGhlIHNvY2lhbCBvcmRlci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 84,
      "question" : "With reference to the scientific progress of ancient India, which of the statements given below are correct?   A 6 1. Different kinds of specialized surgical instruments were in common use by 1st century AD. 2. Transplant of internal organs in the human body had begun by the beginning of 3rd century AD. 3. The concept  of  sine  of  an  angle  was  known in  5th century AD. 4. The concept of cyclic quadrilaterals was known in 7th century AD. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODQ=",
      "description" : "MXN0LCAzcmQgYW5kIDR0aCBhcmUgY29ycmVjdC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 85,
      "question" : "With reference to the history of ancient India, which of the following was/were common to both Buddhism and Jainism?  1. Avoidance of extremities of penance and enjoyment 2. Indifference to the authority of the Vedas 3. Denial of efficacy of rituals Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODU=",
      "description" : "Qm90aCBCdWRkaGlzbSBhbmQgSmFpbmlzbSBkZW5pZWQgdGhlIGF1dGhvcml0eSBvZiAgdGhlIFZlZGFzIGFuZCB0aGUgZWZmaWNhY3kgb2YgUml0dWFscy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 86,
      "question" : "The Nagara, the Dravida and the Vesara are the  ",
      "questionId" : "WzE5OTUsIDIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODY=",
      "description" : "TmFnYXJhLCBEcmF2aWRhIGFuZCBWZXNhcmEgYXJlIHRocmVlIG1haW4gc3R5bGVzIG9mICBJbmRpYW4gdGVtcGxlIGFyY2hpdGVjdHVyZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTUsIDIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " three main racial groups of the Indian subcontinent ",
        "option2" : " three main linguistic divisions into which the languages  of India can be classified ",
        "option3" : " three main styles of Indian temple architecture ",
        "option4" : " three main musical Gharanas prevalent in India "
      }
    },
    {
      "index" : 87,
      "question" : "Lord Buddha's image is sometimes shown with the hand gesture called 'Bhumisparsha Mudra'. It symbolizes              ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODc=",
      "description" : "VGhlIGVhcnRoIHdpdG5lc3MgQnVkZGhhIGlzIG9uZSBvZiB0aGUgbW9zdCBjb21tb24gIGljb25pYyBpbWFnZXMgb2YgQnVkZGhpc20uIEl0IGRlcGljdHMgdGhlIEJ1ZGRoYSBzaXR0aW5nIGluICBtZWRpdGF0aW9uIHdpdGggaGlzIGxlZnQgaGFuZCwgcGFsbSB1cHJpZ2h0LCBpbiBoaXMgbGFwOyBhbmQgIGhpcyByaWdodCBoYW5kIHRvdWNoaW5nIHRoZSBlYXJ0aC4gVGhpcyByZXByZXNlbnRzIHRoZSAgbW9tZW50IG9mIHRoZSBCdWRkaGEncyBlbmxpZ2h0ZW5tZW50LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddha's calling of the Earth to watch over Mara and  to prevent Mara from disturbing his meditation ",
        "option2" : " Buddha's calling of the Earth to witness his purity and  chastity despite the temptations of Mara ",
        "option3" : " Buddha's reminder to his followers that they all arise  from the Earth and finally dissolve into the Earth, and  thus this life is transitory ",
        "option4" : " Both the statements (a) and (b) are correct in this "
      }
    },
    {
      "index" : 88,
      "question" : "The religion of early Vedic Aryans was primarily of    ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODg=",
      "description" : "VGhlIGVhcmx5IFZlZGljIEFyeWFucyBpbmR1bGdlZCBpbiBJbWFnZSBXb3JzaGlwICBhbmQgWWFqbmFzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhakti ",
        "option2" : " image worship and Yajnas ",
        "option3" : " worship of nature and Yajnas ",
        "option4" : " worship of nature and Bhakti "
      }
    },
    {
      "index" : 89,
      "question" : "With reference to the guilds (Shreni) of ancient India that played a very important role in the country's economy, which of the following statements is/are correct?  1. Every guild was registered with the central authority of the State and the king was the chief administrative authority on them. 2. The wages, rules of work, standards and prices were fixed by the guild. 3. The guild had judicial powers over its own members. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8ODk=",
      "description" : "VGhlIHdhZ2VzLCBydWxlcyBvZiB3b3JrLCBzdGFuZGFyZHMgYW5kIHByaWNlcyB3ZXJlICBmaXhlZCBieSB0aGUgZ3VpbGQuICBUaGUgZ3VpbGQgaGFkIGp1ZGljaWFsIHBvd2VycyBvdmVyIGl0cyBvd24gbWVtYmVycy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 90,
      "question" : "Some Buddhist rock-cut caves are called Chaityas, while the others are called Viharas. What is the difference between the two?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTA=",
      "description" : "Q2hhaXR5YXMgcmVmZXIgdG8gdGhlIGhhbGxzIGVuY2xvc2luZyB0aGUgc3R1cGFzLiAgQ2hhaXR5YXMgd2VyZSBwcm9iYWJseSBjb25zdHJ1Y3RlZCB0byBob2xkIGxhcmdlIG51bWJlcnMgIG9mIGRldm90ZWVzIGZvciBwcmF5ZXIuIFZpaGFyYXMgb24gdGhlIG90aGVyIGhhbmQgYXJlICBjb25zdHJ1Y3Rpb25zIGJ1aWx0IGluIGFuY2llbnQgSW5kaWEgaW4gb3JkZXIgdG8gcHJvdmlkZSAgcmVzdGluZyBwbGFjZXMgZm9yIHRoZSB3YW5kZXJpbmcgQnVkZGhpc3QgbW9ua3MuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vihara is a place of worship, while Chaitya is the  dwelling place of the monks ",
        "option2" : " Chaitya is a place of worship, while Vihara is the  dwelling place of the monks ",
        "option3" : " Chaitya is the stupa at the far end of the cave, while  Vihara is the hall axial to it ",
        "option4" : " There is no material difference between the two "
      }
    },
    {
      "index" : 91,
      "question" : "With reference to the history of philosophical thought in India, consider the following statements regarding Sankhya school:  1. Sankhya does not accept the theory of rebirth or transmigration of soul. 2. Sankhya holds that it is the self-knowledge that leads to liberation and not any exterior influence or agent. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTE=",
      "description" : "U2Fua2h5YSB5b2dhIGJlbGlldmVzIHRoYXQgc2VsZiAta25vd2xlZGdlIGxlYWRzIHRvICBsaWJlcmF0aW9uLiBBbG1vc3QgYWxsIHRoZSByZXN0IG9mIHBoaWxvc29waGllcyBvZiBJbmRpYSAgYWRvcHRlZCBTYW5raHlhIGFzIGl0cyBtYWluIGJhc2UuIFNhbmtoeWEgeW9nYSBhbHNvICBiZWxpZXZlcyBpbiByZWJpcnRoLiBBY2NvcmRpbmcgdG8gU2Fua2h5YSBkYXJzaGFuIGVhY2ggIHB1cnVzaGEgZXhwZXJpZW5jZXMgYmhvZ2EsIGFwYXZhcmdhIGFuZCB0YWtlcyBiaXJ0aCAgcmVwZWF0ZWRseSB1bnRpbCBrYWl2YWx5YS4obW9rc2EpLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 92,
      "question" : "Which one of the following describes best the concept of Nirvana in Buddhism?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTI=",
      "description" : "VGhlIGNvbmNlcHQgb2YgTmlydmFuYSB3YXMgb3JpZ2luYWxseSBleHBsYWluZWQgYnkgIExvcmQgQnVkZGhhICg1NjYtNDg2IEJDKS4gVGhlIHdvcmQgJ05pcnZhbmEnIGNvbWVzIGZyb20gIHRoZSByb290IG1lYW5pbmcgJ3RvIGJsb3cgb3V0JyBhbmQgcmVmZXJzIHRvIHRoZSBleHRpbmd1aXNoaW5nICBvZiB0aGUgZmlyZXMgb2YgZ3JlZWQsIGhhdHJlZCwgYW5kIGRlbHVzaW9uLiBXaGVuIHRoZXNlICBlbW90aW9uYWwgYW5kIHBzeWNob2xvZ2ljYWwgZGVmaWxlbWVudHMgYXJlIGRlc3Ryb3llZCBieSAgd2lzZG9tLCB0aGUgbWluZCBiZWNvbWVzIGZyZWUsIHJhZGlhbnQsIGFuZCBqb3lmdWwgYW5kIGhlICB3aG8gaGFzIHJlYWxpemVkIHRoZSBUcnV0aCAoTmlydmFuYSkgaXMgdGhlIGhhcHBpZXN0IGJlaW5nICBpbiB0aGUgd29ybGQuIEhlIGlzIGZyZWUgZnJvbSBhbGwgY29tcGxleGVzIGFuZCBvYnNlc3Npb25zLiAgSGUgZG9lcyBub3QgcmVwZW50IHRoZSBwYXN0IG5vciBkb2VzIGhlIGJyb29kIG92ZXIgdGhlICBmdXR1cmUuIEhlIGxpdmVzIGZ1bGx5IGluIHByZXNlbnQuIEhlIGFwcHJlY2lhdGVzIGFuZCBlbmpveXMgIHRoaW5ncyBpbiBsaWZlIGluIHRoZSBwdXJlc3Qgc2Vuc2Ugd2l0aG91dCBzZWxmIHByb2plY3Rpb25zLiAgSGUgaXMgZnJlZSBmcm9tIHRoZSB0aGlyc3Qgb2YgYmVjb21pbmcgYW5kIHRoZSBpbGx1c2lvbiBvZiAgc2VsZi4gQnVkZGlzbSBleHBsYWluIE5pdnJhbmEgYXMgYSBzdGF0ZSBvZiBibGlzcyBvciBwZWFjZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The extinction of the flame of desire ",
        "option2" : " The complete annihilation of self ",
        "option3" : " A state of bliss and rest ",
        "option4" : " A mental stage beyond all comprehension. "
      }
    },
    {
      "index" : 93,
      "question" : "Which of the following characterizes / characterize the people of Indus Civilization?  1. They possessed great palaces and temples. 2. They worshipped both male and female deities. 3. They employed horse-drawn chariots in warfare. Select the correct statement/statements using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTM=",
      "description" : "SW5kdXMgdmFsbGV5IHBlb3BsZSBkaWQgbm90IHBvc3Nlc3MgZ3JlYXQgcGFsYWNlcyBhbmQgIHRlbXBsZXMgcmF0aGVyIHRoZSBjaXZpbGl6YXRpb24gd2FzIG5vdGVkIGZvciBpdHMgY2l0aWVzIGJ1aWx0ICBvZiBicmljaywgcm9hZHNpZGUgZHJhaW5hZ2Ugc3lzdGVtIGFuZCBtdWx0aXN0b3JpZWQgaG91c2VzLiAgSW5kdXMgdmFsbGV5IHBlb3BsZSB3ZXJlIHBlYWNlIGxvdmluZy4gVGhleSB3ZXJlICBuZXZlciBlbmdhZ2VkIGluIGFueSB3YXIuIEhvd2V2ZXIgc3BlY3VsYXRpb25zIGhhdmUgYmVlbiAgcmlmZSB0aGF0IHNvbWUgdGVjdG9uaWMgZm9yY2VzIGRlc3Ryb3llZCB0aGUgY2l2aWxpemF0aW9uLiBTb21lICBoaXN0b3JpYW5zIGFyZSBvZiB0aGUgdmlldyB0aGF0IGludmFzaW9uIG9mIEFyeWFucywgc2VhIGxldmVsICBjaGFuZ2VzLCBlYXJ0aHF1YWtlcyBtaWdodCBoYXZlIGJyb3VnaHQgdGhlIGNpdmlsaXphdGlvbiAgdG8gaXRzIGVuZCB0aGVyZWZvcmUgcGVvcGxlIGVtcGxveWluZyBob3JzZSBkcmF3biBjaGFyaW90cyAgaW4gd2FyZmFyZSBpcyBub3QgdHJ1ZS4gTW9yZW92ZXIsIEluZHVzIHZhbGxleSBzZWFscyBzaG93ICBzd2FzdGlrYSwgYW5pbWFscyB3aGljaCBpcyBzdWdnZXN0aXZlIG9mIHRoZWlyIHJlbGlnaW91cyAgYmVsaWVmcy4gSW4gdmlldyBvZiBsYXJnZSBudW1iZXIgb2YgZmlndXJpbmVzIGZvdW5kIGluIEluZHVzICB2YWxsZXksIHNvbWUgc2Nob2xhcnMgYmVsaWV2ZSB0aGV5IHdvcnNoaXBwZWQgbW90aGVyICBnb2RkZXNzIHN5bWJvbGl6aW5nIGZlcnRpbGl0eS4gVGhleSB3b3JzaGlwcGVkIGEgZmF0aGVyIEdvZCAgd2hvIG1pZ2h0IGJlIGEgcHJvZ2VuaXRvciBvZiB0aGUgcmFjZSBhbmQgd2FzIGEgcHJvYmFibHkgYSAgcHJvdG90eXBlIG9mIFNpdmEgYXMgdGhlIExvcmQgb2YgdGhlIEFuaW1hbHMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None of the statements given above is correct "
      }
    },
    {
      "index" : 94,
      "question" : "Which of the following statements is/are applicable to Jain doctrine?  1. The surest way of annihilating Karma is to practice penance. 2. Every object, even the smallest particle has a soul. 3. Karma is the bane of the soul and must be ended. Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTQ=",
      "description" : "VGhlIHN1cmVzdCB3YXkgb2YgYW5uaWhpbGF0aW5nIEthcm1hIGlzIHRvIHByYWN0aWNlICBwZW5hbmNlLiBLYXJtYSBpcyB0aGUgYmFuZSBvZiB0aGUgIHNvdWwgYW5kIG11c3QgYmUgZW5kZWQuICAnU3dhZGh5YXkgUGFyYW1hbSBUYXAnIEFjY29yZGluZyB0byBKYWluIGRvY3RyaW5lcyAgUGVuYW5jZSB3YXNoZXMgYXdheSBhbGwgdGhlIGJsZW1pc2hlcyBhbmQgcHVyZ2VzIHRoZSAgc291bCBvZiBhbGwga2FybWljIG1hdHRlci4gIEFsc28sIGFjY29yZGluZyB0byBKYWluaXNtLCBLYXJtYSBpcyB0aGUgYmFuZSBvZiB0aGUgc291bC4gIEthcm1hIG5vdCBvbmx5IGVuY29tcGFzc2VzIHRoZSBjYXVzYWxpdHkgb2YgdHJhbnNtaWdyYXRpb24gIGJ1dCBpdCBpcyBhbHNvIGNvbmNlaXZlZCBhcyBhbiBleHRyZW1lbHkgc3VidGxlIG1hdHRlciB3aGljaCAgaW5maWx0cmF0ZXMgdGhlIHNvdWwsIG9ic2N1cmluZyBpdHMgbmF0dXJhbCwgdHJhbnNwYXJlbnQsIHB1cmUgIHF1YWxpdGllcy4gS2FybWEgaXMgdGhvdWdodCBvZiBhcyBhIGtpbmQgb2YgcG9sbHV0aW9uIHRoYXQgdGFpbnRzICB0aGUgc291bCB3aXRoIHZhcmlvdXMgY29sb3JzLiBCYXNlZCBvbiBpdHMga2FybWEsIGEgc291bCAgdW5kZXJnb2VzIHRyYW5zbWlncmF0aW9uIGFuZCByZWluY2FybmF0aW9uIGluIHZhcmlvdXMgc3RhdGVzICBvZiBleGlzdGVuY2UgbGlrZSBoZWF2ZW5zIG9yIGhlbGxzIG9yIGFzIGh1bWFucyBvciBhbmltYWxzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 95,
      "question" : "With reference to the history of Indian rock-cut architecture, consider the following statements:  1. The caves at Badami are the oldest surviving rock-cut caves in India. 2. The Barabar rock-cut caves were originally made for Ajivikas by Emperor Chandragupta Maurya. 3. At Ellora, caves were made for different faiths. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTU=",
      "description" : "VGhlIEJhcmJhcmEgcm9jayBjdXQgY2F2ZXMgYXJlIHRoZSBvbGRlc3Qgcm9jayBjdXQgY2F2ZXMuICBUaGV5IHdlcmUgb3JpZ2luYWxseSBtYWRlIGZvciB0aGUgQWppdmlrYXMgZHVyaW5nIHRoZSAgTWF1cnlhbiBwZXJpb2QgKDMyMi0xODUgQkNFKS4gVGhlIEVsbG9yYSBjYXZlcyB3ZXJlIGJ1aWx0ICBiZXR3ZWVuIDV0aCBjZW50dXJ5IGFuZCAxMHRoIGNlbnR1cnkuIFRoZXJlIHdlcmUgMzQgY2F2ZXMgIG91dCBvZiB3aGljaCAxMiB3ZXJlIEJ1ZGRoaXN0IGNhdmVzLCAxNyB3ZXJlIEhpbmR1IGNhdmVzICBhbmQgNSB3ZXJlIEphaW4gY2F2ZXMuIFRoZSBwcm94aW1pdHkgb2YgdGhlIGNhdmVzIGNsZWFybHkgIGRlbW9uc3RyYXRlcyB0aGUgcmVsaWdpb3VzIGhhcm1vbnkgcHJldmFsZW50IGF0IHRoYXQgcGVyaW9kICBvZiB0aW1lLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 96,
      "question" : "The Chinese traveller Yuan Chwang (Hiuen Tsang) who visited India recorded the general conditions and culture of India at that time. In this context, which of the following statements is/are correct?                             1. The roads and river-routes were completely immune from robbery. 2. As regards punishment for offences, ordeals by fire, water and poison were the instruments for determining the innocence or guilt of a person. E B D _8 34 2 Ancient History A 7 3. The tradesmen had to pay duties at ferries and barrier stations. Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTY=",
      "description" : "VGhlIHRyYWRlc21lbiBoYWQgdG8gcGF5IGxpZ2h0IGR1dGllcyBhdCBmZXJyaWVzIGFuZCAgYmFycmllcnMuIEFmdGVyIHBheWluZyB0aGUgcmV2ZW51ZSB0aGV5IGNvdWxkIGdvIHRvIGFuZCBmcm8gIHRvIGJhcnRlciB0aGVpciBtZXJjaGFuZGlzZS4gVGhlIHB1bmlzaG1lbnQgZm9yIHNvY2lhbCAgb2ZmZW5jZXMgYWNjb3JkaW5nIHRvIHRoZSB0cmF2ZWxsZXIncyBhY2NvdW50LCB3ZXJlIHRvIGN1dCAgb2ZmIHRoZSBub3NlLCBvciBhbiBlYXIgb3IgYSBoYW5kLiBNaW5vciBvZmZlbmNlcyB3ZXJlIGRlYWx0ICB3aXRoIGZpbmVzLiBBbmQgdG8gZGV0ZXJtaW5lIGd1aWx0IG9yIGlubm9jZW5jZSwgb3JkZWFscyBieSAgZmlyZSwgd2F0ZXIgYW5kIHBvaXNvbiB3ZXJlIHRoZSBpbnN0cnVtZW50cyB3aGljaCB3ZXJlIHVzZWQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 97,
      "question" : "In the context of cultural history of India, a pose in dance and dramatics called 'Tribhanga' has been a favourite of Indian artists from ancient times till today. Which one of the following statements best describes this pose?    ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTc=",
      "description" : "VGhlIHBvc2UgJ1RyaWJoYW5nYScgaXMgdGhlIGZhdm91cml0ZSBwb3N0dXJlIG9mIExvcmQgIEtyaXNobmEuIFdlIGhhdmUgb2Z0ZW4gc2VlbiBMb3JkIEtyaXNobmEgc3RhbmRpbmcgaW4gIHRyaWJoYW5nYSBwb3N0dXJlIGJlZm9yZSBoaXMgY293ICdLYW1kaGVudScgb3Igd2hlbmV2ZXIgIGhlIGlzIHBsYXlpbmcgaGlzIGZsdXRlLiBIZSBpcyBvZnRlbiBjYWxsZWQgVHJpYmhhbmEgTXVyYXJpLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " One leg is bent and the body is slightly but oppositely  curved at waist and neck ",
        "option2" : " Facial expressions, hand gestures and make-up are  combined to symbolize certain epic or historic  characters ",
        "option3" : " Movements of body, face and hands are used to  express oneself or to tell a story ",
        "option4" : " A little smile, slightly curved waist and certain hand "
      }
    },
    {
      "index" : 98,
      "question" : "Consider the following historical places:               1. Ajanta Caves 2. Lepakshi Temple 3. Sanchi Stupa Which  of  the  above  places  is/are  also  known  for  mural paintings? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTg=",
      "description" : "QWphbnRhIENhdmVzIGhhdmUgbXVyYWwgcGFpbnRpbmdzIGluIGNhdmVzIDEsIDIsIDE2IGFuZCAgMTcuIFNvbWUgb2YgdGhlIHBhaW50aW5ncyB3ZXJlIGNvbW1pc3Npb25lZCBieSBIYXJpc2VuYSBvZiAgVmFrYXRha2EgZHluYXN0eS4gVGhlIHRoZW1lIG9mIHRoZSBwYWludGluZ3Mgd2FzIEphdGFrYSAgdGFsZXMuIExlcGFrc2hpIFRlbXBsZSBpcyByZW5vd25lZCBmb3IgYmVpbmcgb25lIG9mIHRoZSBiZXN0ICByZXBvc2l0b3JpZXMgb2YgbXVyYWwgcGFpbnRpbmdzIG9mIHRoZSBWaWpheW5hZ2FyIGtpbmdzLiBTYW5jaGkgIFN0dXBhIGhhcyBtYW55IGJlYXV0aWZ1bCBzY3VscHR1cmVzIGJ1dCBub3QgbXVyYWwgcGFpbnRpbmdzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 99,
      "question" : "With reference to the Indian history of art and culture, consider the following pairs :  Famous work of  Sculpture Site 1. A grand image of Buddha's :    Ajanta Mahaparinirvana with numerous celestial musicians above and the sorrowful figures  of his followers below 2. A huge image of Varaha : Mount Abu Avatar (boar incarnation) of Vishnu, as he rescues Goddess Earth from the deep and chaotic waters, sculpted on rock 3. 'Arjuna's Penance'/ : Mamallapuram 'Descent of Ganga' sculpted on the surface of huge boulders Which of the pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8OTk=",
      "description" : "MSBpcyBjb3JyZWN0bHkgbWF0Y2hlZCBiZWNhdXNlIFBhcmluaXJ2YW5hIG9mIHRoZSAgQnVkZGhhIGluIENhdmUgMTcgb2YgQWphbnRhLCB3aXRoIG51bWVyb3VzIGNlbGVzdGlhbCAgbXVzaWNpYW5zIGFib3ZlIGFuZCB0aGUgc29ycm93ZnVsIGZpZ3VyZXMgb2YgaGlzIGZvbGxvd2VycyAgYmVsb3csIGlzIG9uZSBvZiB0aGUgZ3JhbmRlc3QgYW5kIHlldCBtb3N0IGRlbGljYXRlbHkgIGV4cHJlc3NpdmUgc2NlbmVzIGV2ZXIgbWFkZSBpbiBzdG9uZS4gMiBpcyB3cm9uZyAgYmVjYXVzZSAgRSAgQiAgRCAgXzggIDM0ICAyICBBbmNpZW50IEhpc3RvcnkgQSAxMyAgaHVnZSAgaW1hZ2UgIG9mICBWYXJhaGEgIEF2YXRhciAgb2YgIFZpc2hudSwgIGFzICBoZSAgcmVzY3VlcyAgR29kZGVzcyBFYXJ0aCBmcm9tIHRoZSBkZWVwYW5kIGNoYW90aWMgd2F0ZXJzLCBzY3VscHRlZCAgb24gcm9jayBpcyBmb3VuZCBpbiBNYW1hbGxhcHVyYW0uIDMgaXMgcmlnaHQgYmVjYXVzZSBBcmp1bmEncyAgUGVuYW5jZSAnRGVzY2VudCBvZiBHYW5nYScgc2N1bHB0ZWQgb24gdGhlIHN1cmZhY2Ugb2YgIGh1Z2UgYm91bGRlcnMgaXMgZm91bmQgaW4gTWFtYWxsYXB1cmFtLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 100,
      "question" : "With reference to Buddhist history, tradition  and  culture in India, consider the following pairs :  Famous shrine            Location 1. Tabo monastery and : Spiti Valley temple complex 2. Lhotsava Lhakhang : Zanskar Valley temple, Nako 3. Alchi temple complex : Ladakh Which of the  pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTAw",
      "description" : "VGFibyBtb25hc3RlcnkgYW5kIHRlbXBsZSBjb21wbGV4IGlzIGluIFNwaXRpIFZhbGxleSAgYW5kIEFsY2hpIHRlbXBsZSBjb21wbGV4IGlzIGluIExhZGFraC4gTGhvdHNhdmEgTGhha2hhbmcsICBOYWtvIGlzIGluIEhpbWFjaGFsIFByYWRlc2guIFphbnNrYXIgVmFsbGV5IGlzIGluIEphbW11ICBhbmQgS2FzaG1pci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 101,
      "question" : "Which one of the following pairs does not form part of the six systems of Indian Philosophy?                          ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTAx",
      "description" : "TG9rYXlhdGEgYW5kIEthcGFsaWthIGRvIG5vdCBmb3JtIG9mIFNpeCBzeXN0ZW0gb2YgIEluZGlhbiBwaGlsb3NvcGh5ICBTYW1raHlhIFByYWtyaXRpIGFuZCBQdXJ1c2ggIFlvZ2EgUmVsZWFzaW5nIFB1cnVzaCBmcm9tIFBhcmtyaXRpICBOeWF5YSBMb2dpY2FsIHRoaW5raW5nICBWYWlzaGVzaGlrYSBSZWFsaXN0aWMgYW5kIG9iamVjdGl2ZSBwaGlsb3NvcGh5ICBvZiB1bml2ZXJzZSAgTWltYW1zYSBBbmFseXppbmcgU2FtaGl0YSBhbmQgQnJhaG1hbmEgIHBvcnRpb24gb2YgVmVkYS4gIFNpeCBzeXN0ZW0gb2YgSW5kaWFuIHBoaWxvc29waHkgYXJlICBWZWRhbnRhIEl0IGlzIHRoZSBjbGltYXggb2YgSW5kaWFuIFBoeWxvc29waHkg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mimamsa and Vedanta ",
        "option2" : " Nyaya and Vaisheshika ",
        "option3" : " Lokayata and Kapalika ",
        "option4" : " Sankhya and Yoga "
      }
    },
    {
      "index" : 104,
      "question" : "With reference to the art and archaeo-logical history of India, which one among the following was made earliest?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNA==",
      "description" : "Um9jay1jdXQgRWxlcGhhbnQgYXQgRGhhdWxpIHdhcyBidWlsdCBkdXJpbmcgdGhlIHJlaWduICBvZiBBc2hva2EgaW4gMjUwIEJDLiBMaW5nYXJhamEgVGVtcGxlIGF0IEJodWJuZXNod2FyICB3YXMgYnVpbHQgYnkgWWF5YXRpICgxMDI1LTEwNDApLiBSb2NrLWN1dCBtb251bWVudHMgYXQgIE1haGFiYWxpcHVyYW0gd2VyZSBidWlsdCBkdXJpbmcgN3RoLTh0aCBjZW50dXJ5IEFEIGR1cmluZyAgdGhlIHJlaWduIG9mIFBhbGxhdmFzLiBWYXJhaGEgSW1hZ2UgYXQgVWRheWdpcmkgd2FzIGJ1aWx0IGJ5ICBDaGFuZHJhZ3VwdGEgSUkgb2YgR3VwdGEgRW1waXJlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lingaraja Temple at Bhubneshwar ",
        "option2" : " Rock-cut Elephant at Dhauli ",
        "option3" : " Rock-cut Monuments at Mahabalipuram ",
        "option4" : " varaha Image at Udayagiri "
      }
    },
    {
      "index" : 105,
      "question" : "Which one of the following books of ancient India has the love story of the son of the founder of Sunga dynasty?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNQ==",
      "description" : "VGhlIE1hbGF2aWthZ25pbWl0cmEgaXMgYSBTYW5za3JpdCBwbGF5IGJ5IEthbGlkYXMuICBUaGUgcGxheSB0ZWxscyB0aGUgbG92ZSBzdG9yeSBvZiBBZ25pbWl0cmEsIHRoZSBTaHVuZ2EgIEVtcGVyb3IuIEhlIGZhbGxzIGluIGxvdmUgd2l0aCB0aGUgcGljdHVyZSBvZiBhbiBleGlsZWQgIHNlcnZhbnQgZ2lybCBuYW1lZCBNYWxhdmlrYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Swapnavasavadatta ",
        "option2" : " Malavikagnirnitra ",
        "option3" : " Meghadoota ",
        "option4" : " Ratnavali "
      }
    },
    {
      "index" : 106,
      "question" : "In the context of the history of India, consider the following pairs:   Term Description (1) Eripatti Land, revenue from which was set apart for the main¬tenance of the village tank (2) Taniyurs Villages donated to a single Brahmin or a group of Brahmins (3) Ghatikas Colleges generally attached to the temples Which of the pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNg==",
      "description" : "QSBzcGVjaWFsIGNhdGVnb3J5IG9mIGxhbmQsIGVyaXBhdHRpLCAgb3IgIGxhbmQsICBpcyAgbWVudGlvbmVkLiBEb25hdGVkIGJ5IGluZGl2aWR1YWxzLCB0aGUgcmV2ZW51ZSBmcm9tIHRoaXMgIGxhbmQgd2FzIHNldCBhcGFydCBmb3IgdGhlIG1haW50ZW5hbmNlIG9mIHRoZSB2aWxsYWdlIHRhbmsuICBPY2Nhc2lvbmFsbHkgYSB2ZXJ5IGxhcmdlIHZpbGxhZ2Ugd291bGQgYmUgYWRtaW5pc3RlcmVkIGFzICBhIHNpbmdsZSB1bml0IGFuZCB0aGlzIHdhcyBjYWxsZWQgVGFuaXl1ci4gICBSZWY6IEEgSGlzdG9yeSBvZiBJbmRpYSBieSBSb21pbGEgVGhhcGFyLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 107,
      "question" : "With reference to the religious history of India, consider the following statements:  1. Sautrantika and Sammitiya were the sects of Jainism. 2. Sarvastivadin held that the constituents of phenomena were not wholly momentary, but existed forever in a latent form. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwNw==",
      "description" : "U2F1dHJhbnRpa2FzIGFuZCBTYW1tdGl5YXMgYXMgQnVkZGhpc20gc2VjdHMuIFNvICBmaXJzdCBzdGF0ZW1lbnQgaXMgd3JvbmcuICBBbmQgU2FydmFzdGl2YWRpbiBzZWN0IG9mIEJ1ZGRoaXNtIGJlbGlldmVzIHRoYXQgYWxsICB0aGluZ3MgZXhpc3QsIGFuZCBleGlzdCBjb250aW51b3VzbHksIGluIHRoZSBwYXN0IGFuZCB0aGUgIGZ1dHVyZSBhcyB3ZWxsIGFzIGluIHRoZSBwcmVzZW50LiAgU28gc2Vjb25kIHN0YXRlbWVudCBpcyAgcmlnaHQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 108,
      "question" : "The painting of Bodhisattva Padmapani is one of the most famous and oft-illustrated paintings at  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwOA==",
      "description" : "TmV3IE5DRVJULCBTdGQuIDExLiBBbiBJbnRyb2R1Y3Rpb24gdG8gSW5kaWFuIEFydCAoUGFnZSAgNTQgc2hvd3MgYmlnIHBob3RvIHdpdGggY2FwdGlvbjogUGFkbWFwYW5pYm9kZGhpc2F0dHZhIGF0ICBhamFudGEgQ2F2ZSBuby4gMSkg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ajanta ",
        "option2" : " Badami ",
        "option3" : " Bagh ",
        "option4" : " Ellora "
      }
    },
    {
      "index" : 109,
      "question" : "Which of the following is/are famous for Sun temples?  1. Arasavalli 2. Amarakantak 3. Omkareshwar Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEwOQ==",
      "description" : "KC0pIEFuZGhyYSBQcmFkZXNoIHN0YXRlIEdvdnQuIHdlYnNpdGUgc2F5cyBBcmFzYXZhbGxpICBpbiBTcmlrYWt1bGFtIGRpc3RyaWN0IGhhcyBzdW4gdGVtcGxlLiBTbyAxIGlzIHJpZ2h0LiAgKC0pU3JpIE9ta2FyZXNod2FyIHRlbXBsZSBpbiBNeXNvcmUgaXMgZm9yIExvcmQgU2hpdmEgIGFuZCBpdCdzIG5vdCBhIFN1biBUZW1wbGUuICAoLSlBbWFyYWthbnRhayBpbiBNYWRoeWEgUHJhZGVzaCBoYXMgdGVtcGxlcywgYnV0IG5vdCAgYW55IFN1biB0ZW1wbGUuIFNvICMzIGlzIHdyb25nLiBIZW5jZSwgYnkgZWxpbWluYXRpb24sICBhbnN3ZXIgIkEiIG9ubHkgMS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 110,
      "question" : "With reference to the difference between the culture of Rigvedic Aryans and Indus Valley people, which of the following statements  is/are  correct?                1. Rigvedic Aryans used the coat of mail and helmet in warfare whereas the people of Indus Valley Civilization did not leave any evidence of using them. 2. Rigvedic Aryans knew gold, silver and copper whereas Indus Valley people knew only copper and iron. 3. Rigvedic Aryans had domesticated the horse whereas there is no evidence of Indus Valley people having been aware of this animal. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExMA==",
      "description" : "TkVXIE5DRVJUIENsYXNzIDEyIGhpc3RvcnksIENoLiAxOiAgIEFsbCB0aGUgZ29sZCAgamV3ZWxyeSBmb3VuZCBhdCBIYXJhcHBhbiBzaXRlcyB3YXMgcmVjb3ZlcmVkIGZyb20gaG9hcmRzLiAgU28sIHNlY29uZCBzdGF0ZW1lbnQgaXMgd3JvbmcsIHdoaWNoIGVsaW1pbmF0ZWQgQiBhbmQgRC4gIEJ1dCB0aGVuIGRlcGVuZGluZyBvbiB3aGljaCBoaXN0b3J5IGJvb2sgeW91IHJlZmVyLCAgSGFyYXBwYW5zIHdlcmUgYXdhcmUgb3IgdW5hd2FyZSBhYm91dCB0aGUgaG9yc2VzLiBTbyB0aGUgIGV4cGVydHMgd2VyZSBkaXZpZGVkIGJldHdlZW4gb3B0aW9uIEEgYW5kIG9wdGlvbiBDLiBVUFNDICBjaG9zZSAnQycgYXMgdGhlIG9mZmljaWFsIGFuc3dlci0gbWVhbmluZyBIYXJhcHBhbnMgZGlkIG5vdCAga25vdyBhYm91dCB0aGUgaG9yc2VzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 111,
      "question" : "Which one of the following was a very important seaport in the Kakatiya kingdom?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExMQ==",
      "description" : "QWNhZGVtaWMgYm9va3Mgb24gbWVkaWV2YWwgaGlzdG9yeSBtZW50aW9uIHRoYXQgIEdhbmFwYXRpIHdhcyB0aGUgbW9zdCBwb3dlcmZ1bCBvZiBLYWthdGl5YSBzb3ZlcmVpZ25zLiAgTW90dXBhbGxpLCBub3cgaW4gS3Jpc2huYSBkaXN0cmljdCwgd2FzIGFuIGltcG9ydGFudCAgc2VhcG9ydCBpbiBoaXMga2luZ2RvbSwgZnJlcXVlbnRlZCBieSBmb3JlaWduIG1lcmNoYW50cy4gIFNvLCAiQiIgaXMgdGhlIGFuc3dlci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kakinada ",
        "option2" : " Motupalli ",
        "option3" : " Machilipatnam (Masulipatnam) ",
        "option4" : " Nelluru "
      }
    },
    {
      "index" : 112,
      "question" : "With reference to the religious practices in India, the \"Sthanakvasi\" sect belongs to(Pre18 Set-D)  ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTEy",
      "description" : "U3RoYW5ha3Zhc2kgZG9uJ3QgZGlmZmVyIG11Y2ggZnJvbSB0aGUgb3RoZXIgIFN2ZXRhbWJhcmEgSmFpbmFzLCBoZW5jZSBub3ctYS1kYXlzIHRoZXkgaW52YXJpYWJseSBjYWxsICB0aGVtc2VsdmVzIGFzIFN2ZXRhbWJhcmEgU3RoYW5ha3Zhc2kuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Buddhism ",
        "option2" : " Jainism ",
        "option3" : " Vaishnavism ",
        "option4" : " Shaivism "
      }
    },
    {
      "index" : 113,
      "question" : "With reference to Indian history, who among the following is a future Buddha, yet to come to save the world?  ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTEz",
      "description" : "TWFpdHJleWEsIGlzIHRoZSBmdXR1cmUgQnVkZGhhLCB3aG9zZSBjb21pbmcgd2FzICBzYWlkIHRvIGhhdmUgYmVlbiBwcm9waGVzaWVkIGJ5IHRoZSBoaXN0b3JpY2FsIEJ1ZGRoYSBhbmQgIHdobyBpbiB5ZWFycyB0byBjb21lLCB3b3VsZCBwdXJpZnkgdGhlIHdvcmxkIHdpdGggaGlzICB0ZWFjaGluZ3MuIGxldCdzIGFsc28gbGVhcm4gYWJvdXQgdGhlIHdyb25nIG9wdGlvbnMsIGxlc3QgIHRoZXkncmUgYXNrZWQgaW4gZnV0dXJlIGV4YW1zOiBBdmFsb2tpdGVzdmFyYSAod2F0Y2hmdWwgIGxvcmQpLCBhbHNvIGNhbGxlZCBQYWRtYXBhbmkgKGxvdHVzLWJlYXJlciksIHdob3NlIGF0dHJpYnV0ZSAgaXMgY29tcGFzc2lvbiwgd2hpY2ggcmVhY2hlcyBkb3duIGV2ZW4gdG8gQXZpY2hpLCB0aGUgIGxvd2VzdCBCdWRkaGlzdCBwdXJnYXRvcnkuIExva3Nlc3ZhcmEgaXMgYWxzbyB1c2VkIGFzIGEgIHN5bm9ueW0gZm9yIEF2YWxva2l0ZXN2YXIoYSkg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Avalokiteshvara ",
        "option2" : " Lokesvara ",
        "option3" : " Maitreya ",
        "option4" : " Pamapani "
      }
    },
    {
      "index" : 114,
      "question" : "Consider the following pairs Craft vs Heritage of: 1. Puthukkuli shawls: Tamil Nadu  2. Sujni embroidery: Maharashtra 3. Uppada Jamdani saris: Karnataka Which of the pairs given above is/are correct? ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTE0",
      "description" : "U3VqbmkgZW1icm9pZGVyeS0gSW5jb3JyZWN0LiBJdCBiZWxvbmdzIHRvIEJpaGFyLiAgKC0pVXBhZGEgSmFtZGFuaSBTYXJlZXMtIEluY29ycmVjdC4gSXQgYmVsb25ncyB0byBBbmRocmEgIFByYWRlc2guICAoLSlTbywgYnkgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIEE6IDEgb25seS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 3 only ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 115,
      "question" : "Consider the following pairs of Tradition vs State: 1. Chapchar Kut festival: Mizoram  2. Khongjom Parba ballad: Manipur 3. Thang-Ta dance: Sikkim Which of the pairs given above is/are correct ? ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnl8MTE1",
      "description" : "S2hvbmdqb20gUGFydmEgaXMgYW4gaW1wb3J0YW50IGZvbGsgbXVzaWMgZnJvbSB0aGUgIHN0YXRlIG9mIE1hbmlwdXIuIEl0IGlzIGEgcG9wdWxhciBiYWxsYWQgZ2VucmUgd2hpY2ggaXMgYSAgbXVzaWNhbCBuYXJyYXRpb24gb2YgdGhlIGJhdHRsZSBvZiBLaG9uZ2pvbSBmb3VnaHQgYmV0d2VlbiAgdGhlIEJyaXRpc2ggYXJteSBhbmQgdGhlIE1hbmlwdXJpIHJlc2lzdGFuY2UgZm9yY2VzIGluICAxODkxLiBTbywgc3RhdGVtZW50IzIgaXMgcmlnaHQsIHRoaXMgZWxpbWluYXRlcyBBIGFuZCAoQykgICgtKVRoYW5nIFRhIGlzIHRoZSBleGNsdXNpdmUgbWFydGlhbCBkYW5jZSBmb3JtIG9mICBNYW5pcHVyLiBUaGFuZyBtZWFucyBzd29yZCBhbmQgVGEgbWVhbnMgc3BlYXIuIFNvLCAgc3RhdGVtZW50IzMgaXMgd3JvbmcsIHRoaXMgZWxpbWluYXRlcyAoRCkgVGhlcmVmb3JlIGFuc3dlciAgbXVzdCBiZSBCOiBvbmx5IDEgYW5kIDIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxBbmNpZW50IEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 3 only ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 116,
      "question" : "Which one of the following is not a Harappan Site?            ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExNg==",
      "description" : "Tml0aW4gY2gxOiBTb2hnYXVyYSBDb3BwZXIgUGxhdGU6IFRoZSBlYXJsaWVzdCBrbm93biAgY29wcGVyLXBsYXRlLCBrbm93biBhcyB0aGUgU29oZ2F1cmEgY29wcGVyLXBsYXRlLCBpcyBhICBNYXVyeWFuIHJlY29yZCB0aGF0IG1lbnRpb25zIGZhbWluZSByZWxpZWYgZWZmb3J0cy4gU28gaXQgIGNhbid0IGJlIGEgSGFyYXBwYW4gc2l0ZSwgYW5zd2VyIGlzIGMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chanhudaro ",
        "option2" : " Kot Diji ",
        "option3" : " Sohagaura ",
        "option4" : " Desalpur "
      }
    },
    {
      "index" : 117,
      "question" : "In which of the following relief sculpture inscriptions is 'Ranyo Ashoka' (King Ashoka) mentioned along with the stone  portrait  of  Ashoka?                          ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExNw==",
      "description" : "MTk5MzogQSB0ZWFtIG9mIGFyY2hlb2xvZ2lzdHMgc3VydmV5ZWQgU2FubmFpLCAgS2FybmF0YWthLiBUaGUgbW9zdCBkcmFtYXRpYyBldmlkZW5jZSBjYW1lIGZyb20gIEthbmFnYWhhbGxpLiBUaGUgZGlzY292ZXJpZXMgYXQgdGhlIHNpdGUgaW5jbHVkZWQgYSBicm9rZW4gIHJlbGllZiBzY3VscHR1cmUgc2hvd2luZyBhIGtpbmcgYW5kIHF1ZWVuIGZsYW5rZWQgYnkgIGZlbWFsZSBhdHRlbmRhbnRzLiBBbiBpbnNjcmlwdGlvbiBpbiBicmFobWkgbGV0dGVyIHJlYWQgICJSYW55byBBc2hva2EiIChLaW5nIEFzaG9rYSkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Kanganahalli ",
        "option2" : " Sanchi ",
        "option3" : " Shahbazgarhi ",
        "option4" : " Sohgaura "
      }
    },
    {
      "index" : 118,
      "question" : "Consider the following :  1. Deification of the Buddha 2. Treading the path of Bodhisattvas 3. Image worship and rituals Which of the above is/ are the feature/ features of Mahayana Buddhism? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExOA==",
      "description" : "VGhlIE1haGF5YW5hIGZvbGxvd2VycyBiZWxpZXZlIGluIGlkb2wgb3IgaW1hZ2UgIHdvcnNoaXAgb2YgQnVkZGhhLiBTbyAxIGFuZCAzIGFyZSBjb3JyZWN0LiBUaGUgY29uY2VwdCAgb2YgQm9kaGlzYXR0dmEgaXMgdGhlIHJlc3VsdCBvZiBNYWhheWFuYSBCdWRkaGlzbS4gU28gIDIgaXMgYWxzbyBjb3JyZWN0LiAgIEEgMTQg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 119,
      "question" : "With reference to forced labour(Vishti) in India during the Gupta period, which one of the following statements is correct?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDExOQ==",
      "description" : "QSBIaXN0b3J5IG9mIEFuY2llbnQgYW5kIEVhcmx5IE1lZGlldmFsIEluZGlhIGJ5ICBVcGluZGVyIFNpbmdoLCBwYWdlIDUwODogIEZvcmNlZCBsYWJvdXIgKFZpc2h0aSkgYmVjYW1lIG1vcmUgY29tbW9uIHRoYW4gYmVmb3JlICBpbiB0aGlzIEd1cHRhIHBlcmlvZC4gVGhlIGZhY3QgdGhhdCBpdCBpcyBtZW50aW9uZWQgYWxvbmcgIHdpdGggdGhlIHRheGVzIGluIHRoZSBsYW5kIGdyYW50IGluc2NyaXB0aW9ucyBzdWdnZXN0IHRoYXQgIFZpc2h0aSB3YXMgY29uc2lkZXJlZCBhcyBzb3VyY2Ugb2YgaW5jb21lIGZvciB0aGUgc3RhdGUsICBhIHNvcnQgb2YgdGF4IHBhaWQgYnkgdGhlIHBlb3BsZS4gVGhlIGZhY3QgdGhhdCBtb3N0IG9mIHRoZSAgaW5zY3JpcHRpb25zIHJlZmVycmluZyB0byBWaXNodGkgY29tZSBmcm9tIE1hZGh5YSBQcmFkZXNoICBhbmQgS2F0aGl5YXdhciByZWdpb25zIG1heSBzdWdnZXN0IHRoaXMgcHJhY3RpY2UgZm9yICBtb3JlIHByZXZhbGVudCBpbiB0aGlzIGFyZWFzLiBTbywgYSBpcyByaWdodCBiIGlzIHdyb25nLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " It was considered a source of income for the State,  a sort of tax paid by the people. ",
        "option2" : " It was totally absent in the Madhya Pradesh and  Kathiawar regions of the Gupta Empire. ",
        "option3" : " The forced labourer as entitled to weekly wages. ",
        "option4" : " The eldest son of the labourer was sent as the forced "
      }
    },
    {
      "index" : 120,
      "question" : "Building 'Kalyaana Mandapas' was a notable feature in the temple construction in the kingdom of  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyMA==",
      "description" : "VmlqYXlhbmFnYXJhIFNjaG9vbDogTW9yZSB0aGFuIG9uZSBtYW5kYXBzIHdlcmUgIGJ1aWx0IGluIGVhY2ggdGVtcGxlLiBUaGUgY2VudHJhbCBtYW5kYXAgY2FtZSB0byBiZSAga25vd24gYXMgS2FseWFuIE1hbmRhcC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chalukya ",
        "option2" : " Chandela ",
        "option3" : " Rashtrakuta ",
        "option4" : " Vijayanagara "
      }
    },
    {
      "index" : 121,
      "question" : "With reference to the cultural history of India, which one of the following is the correct description of the term 'paramitas'?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyMQ==",
      "description" : "ICgtKUJvZGhpc2F0dGF2YSBhcmUgcGFydCBvZiB0aGUgTWFoYXlhbmEvVmFqcmF5YW5hICBUcmFkaXRpb24uIFRoZXkgYXJlIG1lbnRpb25lZCBpbiB0aGUgTWFoYXlhbmEgbGl0ZXJhdHVyZSAgY2FsbGVkIGFzIHRoZSBWYWlwdWx5YSBTdXRyYS0gd3JpdHRlbiBpbiBTYW5za3JpdCAgKC0pSW5zaWRlIHRoZSBWYWlwdWx5YSBTdXRyYS0gUHJham5hIFBhcmFtaXRhIGFyZSAgbWVudGlvbmVkLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The earliest Dharmashastra texts written in  aphoristic (sutra) style. ",
        "option2" : " Philosophical schools that did not accept the  authority of Vedas. ",
        "option3" : " Perfections whose attainment led to the Bodhisattva  path ",
        "option4" : " Powerful merchant guilds of early medieval south "
      }
    },
    {
      "index" : 122,
      "question" : "With reference to the scholars/litterateurs of ancient India, consider the following statements:  1. Panini is associated with Pushyamitra Shunga 2. Amarasimha is associated with Harshavardhana 3. Kalidasa is associated with Chandra Gupta-II Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyMg==",
      "description" : "ICgtKVN0YXRlbWVudCAyLSBJbmNvcnJlY3QgYmVjYXVzZSBBbWFyc2ltaGEgIGJlbG9uZ2VkIHRvIHRoZSBDb3VydCBvZiBDaGFuZHJhIEd1cHRhLSBJSSAoaGUgd2FzIG9uZSAgb2YgdGhlIG5hdnJhdG5hKS4gVGh1cywgYnkgIGVsaW1pbmF0aW9uIHdlIGFyZSBsZWZ0IHdpdGggIGNvcnJlY3QgYW5zd2VyIEMuICAoLSlTdGF0ZW1lbnQgMy0gQ29ycmVjdCBiZWNhdXNlIEthbGlkYXNhIGJlbG9uZ2VkIHRvICB0aGUgIENvdXJ0ICBvZiAgQ2hhbmRyYSAgR3VwdGEtICBJSSAgKCAgaGUgIHdhcyAgb25lICBvZiAgdGhlICBOYXZyYXRuYSkuICAoLSlTdGF0ZW1lbnQgMS0gSW5jb3JyZWN0IGJlY2F1c2UgUGFuaW5pIGJlbG9uZ2VkIHRvICB0aGUgNS02dGggQ2VudHVyeSBCQ0UgUGVyaW9kLSBoZSB3cm90ZSBBc3RkaHlheWksICB3aGVyZSBhc1B1c2h5YW1pdHJhIFN1bmdhIGJlbG9uZ2VkIHRvIHRoZSBQb3N0ICBNYXVyeWFuIFBlcmlvZC0gMm5kIENlbnR1cnkgQkNFLSBoZSBjYW1lIHRvIHBvd2VyICBhZnRlciBraWxsaW5nIGxhc3QgTWF1cnlhbiBLaW5nLSBCcmloYWRyYXRoYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 123,
      "question" : "With reference to the religious history of India, consider the following statements:  1. Sthaviravadins belong to Mahayana Buddhism. 2. Lokottaravadin sect was an offshoot of Mahasanghika sect of Buddhism. 3. The deification of Buddha by Mahasanghikas fostered Mahayana Buddhism. Which of the statements given above are correct? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyMw==",
      "description" : "ICgtKUZvdXJ0aCBDb3VuY2lsIGNvbnZlbmVkIGluIEthc2htaXIgdW5kZXIgdGhlICBwYXRyb25hZ2Ugb2YgS2FuaXNoa2EgICgtKUl0IHJlc3VsdGVkIGludG8gZGl2aXNpb24gb2YgYWxsIHRoZSBCdWRkaGlzdHMgaW50byAgdHdvIG1ham9yIHNlY3RzICAoLSlTYXJ2YXN0aXZhZGlucyAocG9wdWxhciBpbiBLYXNobWlyIGFuZCBNYXRodXJhICByZWdpb25zKSBhbmQgTWFoYXNhbmdoaWthcyB0b2dldGhlciBmb3JtaW5nIHRoZSAgTWFoYXlhbmlzdHMgKGZvbGxvd2VycyBvZiB0aGUgR3JlYXRlciBWZWhpY2xlKSwgICgtKVN0aGF2aXJhdmFkaW5zIGFuZCBvdGhlcnMgZm9ybWluZyB0aGUgSGluYXlhbmlzdHMgIChmb2xsb3dlcnMgb2YgdGhlIExlc3NlciBWZWhpY2xlKTsgIFRodXMsIFN0aGF2aXJhdmFkaW5zIGlzIG5vdCBwYXJ0IG9mIE1haGF5YW5hLiBTbywgIzEgIHdyb25nLiAgKC0pVGhlIE1haGFzYW5naGlrYXMgZ2F2ZSByaXNlIHRvIHRoZSBmb2xsb3dpbmcgIHNlY3RzOiAxLiBFa2F2eWFoYXJpa2FzIDIuIExva290dGFyYXZhZGlucyAzLiBLdWtrdXRpa2FzICA0LiBCYWh1c3J1dGl5YXMgNS4gUHJham5hcGF0aXZhZGlucyA2LiBDaGFpdHlhLXNhaWxhcyA3LiAgQXBhcmEtc2FpbGFzIDguIFV0dGFyYS1zYWlsYXMuIFNvLCAjMiBpcyByaWdodCwgaGVuY2UgIGFuc3dlciAnYicuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 124,
      "question" : "Consider the following events in the history of India:  1. Rise of Pratiharas under King Bhoja 2. Establishment of Pallava power under Mahendravarman - I 3. Establishment of Chola Parantaka - I 4. Pala dynasty founded by Gopala What is the correct chronological order of the above events, starting from the earliest time ? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNA==",
      "description" : "ICgtKU1haGVuZHJhIFZhcm1hbi0gSSAoNTkwLSA2MzAgQ0UpICAoLSlHb3BhbGEgKDc1MCBDRSkgICgtKUtpbmcgQmhvamEtIFByYXRpaGFyYSggODM2LTg4NSBDRSkgICgtKVByYW50YWthLTEgQ2hvbGEgKCA5MDctOTUzIENFKSA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2-1-4-3 ",
        "option2" : " 3-1-4-2 ",
        "option3" : " 2-4-1-3 ",
        "option4" : " 3-4-1-2 "
      }
    },
    {
      "index" : 125,
      "question" : "Which of the following phrases defines the nature of the 'Hundi' generally referred to in the sources of the post- Harsha period?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNQ==",
      "description" : "SHVuZGkgaXMgYSBub3RlIHJlY29yZGluZyBhIGRlcG9zaXQgbWFkZSBieSBhICBwZXJzb24uIFRoZSBhbW91bnQgZGVwb3NpdGVkIGNhbiBiZSBjbGFpbWVkIGluIGFub3RoZXIgIHBsYWNlIGJ5IHByZXNlbnRpbmcgdGhlIHJlY29yZCBvZiB0aGUgZGVwb3NpdC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " An advisory issued by the king to his subordinates ",
        "option2" : " A diary to be maintained for daily accounts ",
        "option3" : " A bill of exchange ",
        "option4" : " An order from the feudal lord to his subordinates "
      }
    },
    {
      "index" : 126,
      "question" : "With reference to the history of India, the terms 'kulyavapa' and 'dronavapa' denote  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNg==",
      "description" : "ICgtKU1lYXN1cmVtZW50IG9mIExhbmQgLSBkaWZmZXJlbnQgdGVybXMgdXNlZCBkdXJpbmcgIEd1cHRhIEFnZS0gbWVudGlvbmVkIGluIGRpZmZlcmVudCBpbnNjcmlwdGlvbnMtICAoLSlLdWx5YXZhcGEsIERyb25hdmFwYSwgQWRoYXZhcGEgQW5kIFBhdGFrYSBmcm9tICBCZW5nYWwsICAoLSlOaXZhcnRhbmEgQW5kIEhodW1pIGZyb20gY2VudHJhbCBJbmRpYSwgYW5kIHRvICAoLSlOaXZhcnRhbmEgQW5kIFBhZGF2YXJ0YSBmcm9tIHdlc3Rlcm4gSW5kaWEgICgtKVZlcnkgdG91Z2ggdG8gYXR0ZW5kLCBub3QgZ2l2ZW4gaW4gc3RhbmRhcmQgYm9va3MgIGxpa2UgTkNFUlQgb3IgVGFtaWxhbmFkdSA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " measurement of land ",
        "option2" : " coins of different monetary value ",
        "option3" : " classification of urban land ",
        "option4" : " religious rituals "
      }
    },
    {
      "index" : 127,
      "question" : "Who among the following rulers advised his subjects through this inscription?: 'Whosoever praises his religious sect or blames other sects out of excessive devotion to his own sect, with the view of glorifying his own sect, he rather injures his own sect very severely.'  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyNw==",
      "description" : "QXNob2thJ3MgRGhhbW1hLSBBbHdheXMgdGFsa2VkIGFib3V0IFRvbGVyYW5jZSAgYW1vbmcgYWxsIHNlY3RzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ashoka ",
        "option2" : " Samudragupta ",
        "option3" : " Harshavardhana ",
        "option4" : " Krishna Deva Raya "
      }
    },
    {
      "index" : 128,
      "question" : "With reference to the history of India, consider the following pairs:  Famous Place Present State 1. Bhilsa Madhya Pradesh 2. Dwarasamudra Maharashtra 3. Girinagar Gujarat 4. Sthaneshwara Uttar Pradesh Which of the pairs given above are correctly matched? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyOA==",
      "description" : "TWFwcGluZyBRdWVzdGlvbiAgMS4gQmhpbHNhLSBNYWRoeWEgUHJhZGVzaC0gQ29ycmVjdC0gS25vd24gYXMgIFZpZGlzaGEsIG1haW4gY2VudHJlIG9mIHRoZSBTdW5nYSBkeW5hc3R5ICZVZGFpZ2lyaSAgY2F2ZXMgaW4gTWFkaHlhIFByYWRlc2ggKG5vdCB0byBiZSBjb25mdXNlZCB3aXRoICBVZGFpZ2lyaS1PZGlzaGEpICAyLiBHaXJpbmFnYXItIEd1amFyYXQtIENvcnJlY3QgIDMuIFN0aGFuZXNod2FyYS0gVXR0YXJwcmFkZXNoLSBJbmNvcnJlY3QuICBTdGhhbmVzaHdhcmEtIGxvY2F0ZWQgaW4gSGFyYXlhbmEgKG5vdCBpbiBVdHRhcnByYWRlc2gpICBNYWluIHNlYXQgb2YgdGhlIFB1c2h5YWJodXRpZHlhbnN0eS0gSGFyc2hhdmFyZGhhbiAgKDYwNi02NDdDRSkgb3JpZ2luYWxseSBiZWxvbmdlZCB0byBTdGhhbmVzaHdhcmEsIHdobyAgbGF0ZXIgb24gc2hpZnRlZCB0aGUgY2FwaXRhbCBhdCBLYW5uYXVqICA0LiBEd2Fyc2FtdWRyYS0gTWFoYXJhc2h0cmEtIEluY29ycmVjdC0gSG95c2FsYSAgZHluYXN0eSB1c2VkIHRvIHJ1bGUgZnJvbSBEd2Fyc2FtdWRyYS0gYWxzbyBrbm93biBhcyAgSGFsZWJpZCAtIGxvY2F0ZWQgaW4gS2FybmF0YWthLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 2 an 4 only "
      }
    },
    {
      "index" : 129,
      "question" : "With reference to the period of Gupta dynasty in ancient India, the towns Ghantasala, Kadura and Chaul were well known as  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5fDEyOQ==",
      "description" : "QnkgRWxpbWluYXRpb24gICgtKVBvcnR1Z3Vlc2Ugd2lsbCBiZSBmaWdodGluZyB0aGUgQmF0dGxlIG9mIENoYXVsIHRvICBjb250cm9sIGNvYXN0YWwgYXJlYXMgb2YgV2VzdGVybiBJbmRpYS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8QW5jaWVudCBIaXN0b3J5",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Ancient History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " ports handling foreign trade ",
        "option2" : " capital of powerful kingdoms ",
        "option3" : " places of exquisite stone art and architecture ",
        "option4" : " important Buddhist pilgrimage centres "
      }
    }
  ],
  "subject" : "History",
  "topic" : "Ancient History",
  "year" : "0"
}
