{
  "testId" : "general-science-&-ecology|environment,-ecology,-biodiversity-&-climate-change",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following programmes:  1. Afforestation and development of wastelands 2. Reforestation and replantation in existing forests 3. Encouraging the wood substitutes and supplying other types of fuel 4. Promotion of wide use of insecticides and pesticides to restrict the loss of forest area from degradation caused by pests and insects. The National Forest Policy of 1988 includes: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwx",
      "description" : "TmF0aW9uYWwgRm9yZXN0IFBvbGljeSwgMTk4OCBkZXNjcmliZXMgdGhlIHByb3RlY3Rpb24gIG9mIGZvcmVzdCBhbmQgZGV2ZWxvcG1lbnQgb2YgZm9yZXN0LiBJdCBkb2VzIG5vdCBkZXNjcmliZSAgdGhlIHVzZSBvZiBpbnNlY3RpY2lkZSBhbmQgcGVzdGljaWRlIGluIGZvcmVzdCBhcmVhcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2 and 4 ",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 2,
      "question" : "Within biological communities, some species are important in determining the ability of a large number of other species to persist in the community. Such species are called   ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwy",
      "description" : "QSBrZXlzdG9uZSBzcGVjaWVzIGlzIGEgc3BlY2llcyB0aGF0IHBsYXkgYSBjcml0aWNhbCByb2xlICBpbiBtYWludGFpbmluZyB0aGUgc3RydWN0dXJlIG9mIGFuIGVjb2xvZ2ljYWwgY29tbXVuaXR5ICBhbmQgIHdob3NlIGltcGFjdCBpbiB0aGUgY29tbXVuaXR5IGlzIGdyZWF0ZXIgdGhhbiB3b3VsZCAgYmUgZXhwZWN0ZWQgYmFzZWQgb24gaXRzIHJlbGF0aXZlIGFidW5kYW5jZSBvciB0b3RhbCBiaW9tYXNzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Keystone species ",
        "option2" : " Allopatric species ",
        "option3" : " Sympatric species ",
        "option4" : " Threatene species "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following animals of India:  1. Crocodile 2. Elephant Which of these is/are endangered species? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwz",
      "description" : "T25seSBjcm9jb2RpbGUgaXMga2VwdCBpbiB0aGUgUmVkIGJvb2sgb3IgZW5kYW5nZXJlZCAgc3BlY2llcyBsaXN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements:  1. Kyoto protocol came into force in the year 2005. 2. Kyoto protocol deals primarily with the depletion of the ozone layer. 3. Methane as a green house gas is more harmful than carbon dioxide. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw0",
      "description" : "VGhlIHByb3RvY29sIHdhcyBpbml0aWFsbHkgYWRvcHRlZCBvbiAxMXRoIERlY2VtYmVyICAxOTk3LiBCdXQgaXQgZW50ZXJlZCBpbnRvIGZvcmNlIG9uIDE2dGggRmVicnVhcnkgMjAwNSwgYWZ0ZXIgIEt5b3RvLCBKYXBhbi4gU28sIGl0IGlzIGNhbGxlZCBLeW90byBwcm90b2NvbC4gIEt5b3RvIHByb3RvY29sIGRlYWxzIHdpdGggcmVkdWNpbmcgdGhlIGdyZWVuIGhvdXNlICBnYXNlcyAgZW1pc3Npb24gdG8gYSBsZXZlbCBhdCBsZWFzdCA1JSBiZWxvdyAxOTkwIGxldmVsLiBNZXRoYW5lIGlzICBtb3JlIGVmZmVjdGl2ZSBvciBoYXJtZnVsIGdyZWVuIGhvdXNlIGdhcyB0aGFuIGNhcmJvbiAgZGlveGlkZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3 ",
        "option3" : " 1 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements:  1. Clean Development Mechanism (CDM) in respect of carbon credits is one of the Kyoto Protocol Mechanisms. 2. Under the CDM, the projects handled pertain only to the Annex-I countries. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw1",
      "description" : "VGhlIENsZWFuIERldmVsb3BtZW50IE1lY2hhbmlzbSAoQ0RNKSBpcyBvbmUgIG9mIHRoZSBGbGV4aWJsZSBNZWNoYW5pc21zIGRlZmluZWQgaW4gdGhlIEt5b3RvIFByb3RvY29sICAoSVBDQywgMjAwNykgdGhhdCBwcm92aWRlcyBmb3IgZW1pc3Npb25zIHJlZHVjdGlvbiAgcHJvamVjdHMgd2hpY2ggZ2VuZXJhdGUgQ2VydGlmaWVkIEVtaXNzaW9uIFJlZHVjdGlvbiAgdW5pdHMgd2hpY2ggbWF5IGJlIHRyYWRlZCBpbiBlbWlzc2lvbnMgdHJhZGluZyBzY2hlbWVzLiAgVGhlIENETSBpcyBkZWZpbmVkIGluIEFydGljbGUgMTIgb2YgdGhlIFByb3RvY29sIGFuZCBpcyAgaW50ZW5kZWQgdG8gbWVldCB0d28gb2JqZWN0aXZlczogKDEpIHRvIGFzc2lzdCBwYXJ0aWVzIG5vdCAgaW5jbHVkZWQgaW4gQW5uZXggSSBpbiBhY2hpZXZpbmcgc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQgIGFuZCBpbiBjb250cmlidXRpbmcgdG8gdGhlIHVsdGltYXRlIG9iamVjdGl2ZSBvZiB0aGUgVW5pdGVkICBOYXQgaW9ucyBGcmFtZXdvcmsgQ29udmVuIHRpb24gb24gQ2wgaW1hdGUgIENoYW5nZShVTkZDQ0MpLCB3aGljaCBpcyB0byBwcmV2ZW50IGRhbmdlcm91cyBjbGltYXRlICBjaGFuZ2U7IGFuZCAoMikgdG8gYXNzaXN0IHBhcnRpZXMgaW5jbHVkZWQgaW4gQW5uZXggSSBpbiAgYWNoaWV2aW5nIGNvbXBsaWFuY2Ugd2l0aCB0aGVpciBxdWFudGlmaWVkIGVtaXNzaW9uICBsaW1pdGF0aW9uIGFuZCByZWR1Y3Rpb24gY29tbWl0bWVudHMgKGdyZWVuaG91c2UgZ2FzICAoR0hHKSBlbWlzc2lvbiBjYXBzKS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 6,
      "question" : "Where was the World Summit on Sustainable Development (Rio+10) held?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw2",
      "description" : "VGhlIFVuaXRlZCBOYXRpb25zIFdvcmxkIFN1bW1pdCBvbiBTdXN0YWluYWJsZSAgRGV2ZWxvcG1lbnQgKFJpbysxMCkgdG9vayBwbGFjZSBpbiBKb2hhbm5lc2J1cmcgKFNvdXRoICBBZnJpY2EpLiBJdCB3YXMgY29uZHVjdGVkIGJldHdlZW4gMjYgQXVndXN0IGFuZCA0ICBTZXB0ZW1iZXIgMjAwMi4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Davos ",
        "option2" : " Nova Scotia ",
        "option3" : " Johannesburg ",
        "option4" : " Shanghai "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements:  1. Salt-water crocodile is found in the Andaman and Nicobar Islands. 2. Shrew and tapir are found in the Western Ghats of the Malabar region. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw3",
      "description" : "SW4gSW5kaWEgc2FsdCB3YXRlciBjcm9jb2RpbGUgaXMgZm91bmQgaW4gdGhlIEFuZGFtYW4gIGFuZCBOaWNvYmFyIElzbGFuZHMsIGl0IGNhbiBncm93IHVwIHRvIDYtNyBtdCBsb25nIGV4aXN0aW5nICBmcm9tIFNyaWxhbmthIHRvIFBhcHVhIE5ldyBHdWluZWEsIE5vcnRoIEF1c3RyYWxpYSBhbmQgIFNvbG9tYW4gSXNsYW5kcy4gIFNocmV3IGFuZCB0YXBpciBhcmUgZm91bmQgaW4gdGhlIGdyZWF0IEhpbWFsYXlhbiByYW5nZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 8,
      "question" : "The concept of carbon credit originated from which one of the following?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw4",
      "description" : "VGhlIEt5b3RvIFByb3RvY29sIGludmVudGVkIHRoZSBjb25jZXB0IG9mIGNhcmJvbiAgZW1pc3Npb25zIHRyYWRpbmcsIHdoZXJlYnkgY2FyYm9uIGNyZWRpdHMgd2VyZSBhICJmbGV4aWJpbGl0eSAgbWVjaGFuaXNtIi4gVW5kZXIgdGhpcyBmbGV4aWJpbGl0eSBtZWNoYW5pc20gQW5uZXggMSAgKGRldmVsb3BlZCBjb3VudHJpZXMpIGNvdWxkIHVzZSB0aGUgY2FyYm9uIGNyZWRpdHMgdG8gbWVldCAgdGhlaXIgZW1pc3Npb24gcmVkdWN0aW9uIGNvbW1pdG1lbnRzLiAgQSBjYXJib24gY3JlZGl0IGlzIGEgZ2VuZXJpYyB0ZXJtIGZvciBhbnkgdHJhZGFibGUgY2VydGlmaWNhdGUgIG9yIHBlcm1pdCByZXByZXNlbnRpbmcgdGhlIHJpZ2h0IHRvIGVtaXQgb25lIHRvbm5lIG9mIGNhcmJvbiAgZGlveGlkZSBvciB0aGUgbWFzcyBvZiBhbm90aGVyIGdyZWVuaG91c2UgZ2FzIHdpdGggYSBjYXJib24gIGRpb3hpZGUgKHRDTzJlKSBlcXVpdmFsZW50IHRvIG9uZSB0b25uZSBvZiBjYXJib24gZGlveGlkZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Earth Summit, Rio de Janeiro ",
        "option2" : " Kyoto Protocol ",
        "option3" : " Montreal Protocol ",
        "option4" : " G-8 Summit, Heiligendamm "
      }
    },
    {
      "index" : 9,
      "question" : "Due to their extensive rice cultivation, some regions may be contributing to global warming. To what possible reason/ reasons is this attributable ?  1. The anaerobic conditions associated with rice cultivation cause the emission of methane. 2. When nitrogen based fertilizers are used, nitrous oxide is emitted from the cultivated soil. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXw5",
      "description" : "TWV0aGFuZSBhbmQgbml0cm91cyBveGlkZSBhcmUgdGhlIHR3byBncmVlbiBob3VzZSAgZ2FzZXMgZW1pdHRlZCBmcm9tIHJpY2UgZmllbGQuIEluIHJpY2UgZmllbGQsIGZsb29kaW5nIGN1dHMgb2ZmICB0aGUgb3h5Z2VuIHN1cHBseSBmcm9tIGF0bW9zcGhlcmUgcmVzdWx0aW5nIGluIGFuYWVyb2JpYyAgY29uZGl0aW9uIHdoaWNoIGVtaXRzIG1ldGhhbmUgYW5kIG5pdHJvZ2VuIGZlcnRpbGl6ZXIgd2hpY2ggIGdlbmVyYWxseSB1c2VkIGluIHJpY2UgZmllbGQgZm9yIGhpZ2ggcHJvZHVjdGlvbiwgZW1pdHMgbml0cm91cyAgb3hpZGUgYnkgcmVhY3Rpbmcgd2l0aCBhdG1vc3BoZXJpYyBveHlnZW4uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following pairs :  Protected area Well-known for 1. Bhiterkanika, Orissa - Salt Water Crocodile 2. Desert National Park, - Great Indian Bustard Rajasthan 3. Eravikulam, Kerala - Hoolak Gibbon Which of the pairs given above is / are correctly matched ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxMA==",
      "description" : "ICgtKSAgQmhpdGVya2FuaWthLCBPcmlzc2EgaXMgYSBwcm90ZWN0ZWQgYXJlYSBmb3Igc2FsdCB3YXRlciAgY3JvY29kaWxlLCB3aGVyZSBicmVlZGluZyBpcyB0aGUgbWFpbiBwdXJwb3NlIG9mIHRoYXQgIHByb3RlY3RlZCBhcmVhLiAgKC0pR3JlYXQgSW5kaWFuIEJ1c3RhcmQgaXMgcHJvdGVjdGVkIGluIGRlc2VydCBhcmVhIG9mICBSYWphc3RoYW4uICAoLSlUaGUgRXJhdmlrdWxhbSBOYXRpb25hbCBQYXJrIHdhcyBlc3RhYmxpc2hlZCB0byAgcHJvdGVjdCB0aGUgTmlsZ2lyaSB0YWhpciAod2lsZCBnb2F0KSBzcGVjaWVzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements :  1. Biodiversity hotspots are located only in tropical regions. 2. India has four biodiversity hotspots i.e., Eastern Himalayas, Western Himalayas, Western Ghats and Andaman and Nicobar Islands. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxMQ==",
      "description" : "QmlvZGl2ZXJzaXR5IGhvdCBzcG90cyBhcmUgbm90IGNvbmZpbmVkIHRvIHRyb3BpY2FsICByZWdpb25zIGFuZCBJbmRpYW4gaG90c3BvdHMgYXJlIHByZXNlbnQgaW4gZWFzdGVybiAgSGltYWxheWFzLCBXZXN0ZXJuIEdoYXRzIGFuZCBBbmRhbWFuIElzbGFuZHMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements :                            1. The boundaries of a National Park are defined by legislation. 2. A Biosphere Reserve is declared to conserve a few specific species of flora and fauna. 3. In a Wildlife Sanctuary, limited biotic interference is permitted. Which of the statements given above is / correct ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxMg==",
      "description" : "VGhlIGZpeCBib3VuZGFyeSBvZiBuYXRpb25hbCBwYXJrIGlzIGRlc2NyaWJlZCBpbiBXaWxkICBMaWZlIFByb3RlY3Rpb24gQWN0LCAxOTcyIGFuZCB0aGUgYWN0dWFsIGFyZWEgb2YgdGhlIG5hdGlvbmFsICBwYXJrIGlzIG5vdGlmaWVkIGJ5IHN0YXRlIGdvdmVybm1lbnQuICBBIGJpb3NwaGVyZSByZXNlcnZlIGNvbnNlcnZlcyBhbiBlY29zeXN0ZW0gYW5kIG5vdCAganVzdCBmZXcgc3BlY2lmaWMgc3BlY2llcyBvZiBwbGFudHMgYW5kIGFuaW1hbHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 13,
      "question" : "A pesticide which is a chlorinated hydrocarbon is sprayed on a food crop. The food chain is : Food crop - Rat - Snake - Hawk. In this food chain, the highest concentration of the pesticide would accumulate in which one of the following ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxMw==",
      "description" : "QmlvbWFnbmlmaWNhdGlvbiBpcyB0aGUgcGhlbm9tZW5vbiBvZiBpbmNyZWFzaW5nICBjb25jZW50cmF0aW9uIG9mIGNvbXBvdW5kIGluIHRoZSB0aXNzdWUgb2Ygb3JnYW5pc20sIGFzICB0aGUgY29tcG91bmQgcGFzc2VzIHVwIGEgZm9vZCBjaGFpbiwgdXN1YWxseSBhcyBhIHJlc3VsdCBvZiAgZm9vZCBpbnRha2UuIEluIHRoaXMgY2FzZSwgdGhlIGNvbmNlbnRyYXRpb24gb2YgY29tcG91bmQgIHdpbGwgaW5jcmVhc2Ugd2l0aCBpbmNyZWFzaW5nIHRoZSB0cm9waWMgbGV2ZWwuIEJpb21hZ25pZnlpbmcgIHBvbGx1dGFudHMgd2hpY2ggaW5jcmVhc2VzIGluIGNvbmNlbnRyYXRpb24gZnJvbSBwcm9kdWNlcnMgIMKuIFByaW1hcnkgY29uc3VtZXJzIMKuIFNlY29uZGFyeSBjb25zdW1lcnMgwq4gIFRlcnRpYXJ5IGNvbnN1bWVycyDCriAgVG9wIGNvbnN1bWVyLiBIYXdrIGlzIHRoZSB0b3AgIGNvbnN1bWVyLCBzbyB0aGUgcGVzdGljaWRlIGNvbmNlbnRyYXRpb24gd2lsbCBiZSBoaWdoZXN0IGluICBIYXdrLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Food crop ",
        "option2" : " Rat ",
        "option3" : " Snake ",
        "option4" : " Hawk "
      }
    },
    {
      "index" : 14,
      "question" : "As a result of their annual survey, the National Geographic Society and an international polling firm Globe Scan gave India top rank in Greendex 2009 score. What is this score?  4 Issues on Environment, Ecology, Biodiversity         & Climate Change E B D _8 34 2 Issues on Environment, Ecology, Biodiversity & Climate Change E 51 ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxNA==",
      "description" : "SW4gdGhlIHRoaXJkIGFubnVhbCBzdXJ2ZXJ5IG9mIE5hdGlvbmFsIEdlb2dyYXBoaWMgIFNvY2lldHkgYW5kIEdsb2JlIFNjYW4sIEluZGlhbiB0b3AgcmFua2VkIGluIEdyZWVuZGV4IDIwMDkgIGR1ZSB0byBlbnZpcm9ubWVudGFsbHkgc3VzdGFpbmFibGUgY29uc3VtZXIgYmVoYXZpb3VyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is a measure of efforts made by different countries in  adopting technologies for reducing carbon footprint. ",
        "option2" : " It is a measure of environmentally sustainable  consumer behaviour in different countries. ",
        "option3" : " It is an assessment of programmes/ schemes  undertaken by different countries for improving the  conservation of natural resources. ",
        "option4" : " It is an index showing the volume of carbon credits "
      }
    },
    {
      "index" : 15,
      "question" : "India is a party to the Ramsar Convention and has declared many areas as Ramsar sites. Which of the following statements best describes as to how we should maintain these sites in the context of this convention?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxNQ==",
      "description" : "UmFtc2FyIGNvbnZlbnRpb24gZGVzY3JpYmVzIHRvIGNvbnNlcnZlIGFsbCB0aGUgc2l0ZXMgIHRocm91Z2ggZWNvc3lzdGVtIGFwcHJvYWNoIGFuZCBhbGxvdyB0aGVpciBzaW11bHRhbmVvdXMgIHN1c3RhaW5hYmxlIHVzZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Keep all the sites completely inaccessible to man so  that they will not be exploited. ",
        "option2" : " Conserve all the sites through ecosystem approach  and permit tourism and recreation only. ",
        "option3" : " Conserve all the sites through ecosystem approach  for a period without any exploitation, with specific  criteria and specific period for each site, and then allow  sustainable use of them by future generations. ",
        "option4" : " Conserve all the sites through ecosystem approach "
      }
    },
    {
      "index" : 16,
      "question" : "What are the possible limitations of India in mitigating the global warming at present and in the immediate future?  1. Appropriate alternate technologies are not sufficiently available. 2. India cannot invest huge funds in research and development. 3. Many developed countries have already set up their polluting industries in India. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxNg==",
      "description" : "R2xvYmFsIHdhcm1pbmcgaXMgdGhlIGluY3JlYXNlIGluIHRoZSBhdmVyYWdlICB0ZW1wZXJhdHVyZSBvZiBFYXJ0aCdzIG5lYXItc3VyZmFjZSBhaXIgYW5kIG9jZWFucyBieSAgaW5jcmVhc2luZyBjb25jZW50cmF0aW9ucyBvZiBncmVlbmhvdXNlIGdhc2VzLCB3aGljaCByZXN1bHQgIGZyb20gaHVtYW4gYWN0aXZpdHkgc3VjaCBhcyB0aGUgYnVybmluZyBvZiBmb3NzaWwgZnVlbCBhbmQgIGRlZm9yZXN0YXRpb24uIENsaW1hdGUgY2hhbmdlIG1pdGlnYXRpb24gaXMgYWN0aW9uIHRvICBkZWNyZWFzZSB0aGUgcG90ZW50aWFsIGVmZmVjdHMgb2YgZ2xvYmFsIHdhcm1pbmcuIEF0IGEgdGltZSAgcmF0ZSBvZiBtaXRpZ2F0aW9uIGlzIGxlc3MgaW4gSW5kaWEgYmVjYXVzZSBhcHByb3ByaWF0ZSAgdGVjaG5vbG9naWVzIGFyZSBsaW1pdGVkIGFuZCBjb3N0bHkuIE1vcmVvdmVyIEluZGlhIGRvbid0ICBoYXZlIGh1Z2UgZnVuZHMgcmVxdWlyZWQgZm9yIHJlc2VhcmNoIGFuZCBkZXZlbG9wbWVudCBpbiAgdGhhdCBhcmVhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following which can be found in the ambient atmosphere :  1. Soot 2. Sulphur hexafluoride 3. Water vapour Which of the above contribute to the warming up of the atmosphere? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxNw==",
      "description" : "QW1iaWVudCB0ZW1wZXJhdHVyZSBzaW1wbHkgbWVhbnMgInRoZSB0ZW1wZXJhdHVyZSAgb2YgdGhlIHN1cnJvdW5kaW5ncyIgYW5kIHdpbGwgYmUgdGhlIHNhbWUgYXMgcm9vbSAgdGVtcGVyYXR1cmUuIEluZG9vciB0aGUgY29tbW9uIHJhbmdlIGlzIDIwwrBDICg2OMKwRikgdG8gIDI3wrBDICg4MCDCsEYpLiAgU2ltaWxhcmx5LCBhbWJpZW50IHByZXNzdXJlIG9uIGFuIG9iamVjdCBpcyB0aGUgIHByZXNzdXJlIG9mIHRoZSBzdXJyb3VuZGluZyBtZWRpdW0sIHN1Y2ggYXMgYSBnYXMgb3IgbGlxdWlkLCAgd2hpY2ggY29tZXMgaW50byBjb250YWN0IHdpdGggdGhlIG9iamVjdC4gVGhlIHNvb3QsIHN1bHBodXIgIGhleGFmbG91cmlkZSwgYW5kIHdhdGVyIHZhcG91ciBhbGwgdGhyZWUgY2FuIGJlIGZvdW5kIGF0ICBhbWJpZW50IGF0bW9zcGhlcmUgd2hpY2ggY29ycmVzcG9uZHMgdG8gYW1iaWVudCAgdGVtcGVyYXR1cmUgYW5kIHByZXNzdXJlLCBhbmQgc3Vic2VxdWVudGx5IHdhcm1pbmcgdXAgIG9mIGF0bW9zcGhlcmUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 18,
      "question" : "The United Nations Framework Convention on Climate Change (UNFCCC) is an international treaty drawn at  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxOA==",
      "description" : "VGhlIFVuaXRlZCBOYXRpb25zIGZyYW1ld29yayBjb252ZW50aW9uIG9uIGNsaW1hdGUgIGNoYW5nZSBpcyBhbiBpbnRlcm5hdGlvbmFsIHRyZWF0eSBkcmF3biBhdCBVTiBjb25mZXJlbmNlICBvbiBFbnZpcm9ubWVudCBhbmQgZGV2ZWxvcG1lbnQsIFJpbyBkZSBKYW5laXJvLCAxOTkyLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgSXNzdWVzIG9uIEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZSBFIDYzIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " United Nations Conference on the Human  Environment, Stockholm, 1972 ",
        "option2" : " UN 'Conference on Environment and Development,  Rio de Janeiro, 1992 ",
        "option3" : " World Summit on Sustainable Development,  Johannesburg, 2002 ",
        "option4" : " UN Climate' Change Conference, Copenhagen, 2009 "
      }
    },
    {
      "index" : 19,
      "question" : "Regarding 'carbon credits'', which one of the following statements is not correct ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MTk=",
      "description" : "VW5kZXIgdGhlIEt5b3RvIFByb3RvY29sLCB0aGUgJ2NhcHMnIG9yIHF1b3RhcyBmb3IgIEdyZWVuaG91c2UgZ2FzZXMgZm9yIHRoZSBkZXZlbG9wZWQgQW5uZXggMSBjb3VudHJpZXMgYXJlICBrbm93biBhcyBBc3NpZ25lZCBBbW91bnRzIGFuZCBhcmUgbGlzdGVkIGluIEFubmV4IEIuICBUaGUgcXVhbnRpdHkgb2YgdGhlIGluaXRpYWwgYXNzaWduZWQgYW1vdW50IGlzIGRlbm9taW5hdGVkICBpbiBpbmRpdmlkdWFsIHVuaXRzLCBjYWxsZWQgQXNzaWduZWQgYW1vdW50IHVuaXRzIChBQVVzKSwgIGVhY2ggb2Ygd2hpY2ggcmVwcmVzZW50cyBhbiBhbGxvd2FuY2UgdG8gZW1pdCBvbmUgbWV0cmljICB0b25uZSBvZiBjYXJib24gZGlveGlkZSBlcXVpdmFsZW50LCBhbmQgdGhlc2UgYXJlIGVudGVyZWQgIGludG8gdGhlIGNvdW50cnkncyBuYXRpb25hbCByZWdpc3RyeS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The carbon credit system was ratified in conjunction  with the Kyoto Protocol. ",
        "option2" : " Carbon credits are awarded to countries or groups that  have reduced greenhouse gases below their emission  quota. ",
        "option3" : " The goal of the carbon credit system is to limit the  increase of carbon dioxide emission. ",
        "option4" : " Carbon credits are traded at a price fixed from time to "
      }
    },
    {
      "index" : 20,
      "question" : "Human activities in the recent past have caused the increased concentration of carbon dioxide in the atmosphere, but a lot of it does not remain in the lower atmosphere because of  1. its escape into the outer stratosphere. 2. the photosynthesis by phytoplankton in the oceans. 3. the trapping of air in the polar ice caps. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjA=",
      "description" : "U2luY2UgQ08yIGlzIGhlYXZpZXIgdGhhbiBhaXIsIGl0IHNpbmtzIGluIG9jZWFuIHRoYW4gIG1vdmluZyB1cC4gQWxzbywgZHVyaW5nIHdpbnRlciwgaXQgaXMgb2JzZXJ2ZWQgdGhhdCBDTzIgaXMgIHRyYXBwZWQgaW4gaWNlIGNhcHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 21,
      "question" : "In the context of ecosystem productivity, marine upwelling zones are important as they increase the marine productivity by bringing the  1. decomposer microorganisms to the surface. 2. nutrients to the surface. 3. bottom-dwelling organisms to the surface. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjE=",
      "description" : "VXB3ZWxsaW5nIGJyaW5ncyBudXRyaWVudC1yaWNoIHdhdGVyIHRvd2FyZHMgdGhlIG9jZWFuICBzdXJmYWNlLCByZXBsYWNpbmcgdGhlIHdhcm1lciwgdXN1YWxseSBudXRyaWVudC1kZXBsZXRlZCAgc3VyZmFjZSB3YXRlci4gVGhpcyBpcyB0byBkbyB3aXRoIHRoZSBwaHl0b3BsYW5rdG9uJ3MgYW5kICBub3RoaW5nIHRvIGRvIHdpdGggdGhlIGRlY29tcG9zZXIgbWljcm9vcmdhbmlzbXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 22,
      "question" : "The formation of ozone hole in the Antarctic region has been a cause of concern. What could be the reason for the formation of this hole ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjI=",
      "description" : "VGhlIG5pdHJpYyBhY2lkIGluIHBvbGFyIHN0cmF0b3NwaGVyaWMgY2xvdWRzIHJlYWN0cyB3aXRoICBDRkNzIHRvIGZvcm0gY2hsb3JpbmUsIHdoaWNoIGNhdGFseXplcyB0aGUgcGhvdG9jaGVtaWNhbCAgZGVzdHJ1Y3Rpb24gb2Ygb3pvbmUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Presence of prominent tropo-spheric turbulence; and  inflow of chlorofluorocarbons. ",
        "option2" : " Presence of prominent polar front and stratospheric  clouds; and inflow of chlorofluorocarbons. ",
        "option3" : " Absence of polar front and stratospheric clouds; and  inflow of methane and chlorofluorocarbons. ",
        "option4" : " Increased temperature at polar region due to global "
      }
    },
    {
      "index" : 23,
      "question" : "Two important rivers-one with its source in Jharkhand (and known by a different name in Odisha), and another, with its source in Odisha-merge at a place only a short distance from the coast of Bay of Bengal before flowing into the sea. This is an important site of wildlife and biodiversity and a protected area. Which one of the following could be this ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjM=",
      "description" : "VGhlIEJoaXRhcmthbmlrYSBNYW5ncm92ZXMgYXJlIGEgbWFuZ3JvdmUgd2V0bGFuZCAgaW4gSW5kaWEncyBPcmlzc2Egc3RhdGUuIFRoZSBCaGl0YXJrYW5pa2EgTWFuZ3JvdmVzIGNvdmVyICBhbiBhcmVhIG9mIDY1MCBrbTIgaW4gdGhlIHJpdmVyIGRlbHRhIG9mIHRoZSBCcmFobWFuaSBhbmQgIEJhaXRhcmFuaSByaXZlcnMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Bhitarkanika ",
        "option2" : " Chandipur-on-sea ",
        "option3" : " Gopalpur-on-sea ",
        "option4" : " Simlipal "
      }
    },
    {
      "index" : 24,
      "question" : "Three of the following criteria have contributed to the recognition of Western Ghats, Sri Lanka and Indo Burma regions as hotspots of biodiversity :    1. Species richness 2. Vegetation density 3. Endemism 4. Ethno-botanical importance 5. Threat perception 6. Adaption of flora and fauna to warm and humid conditions Which three of the above are correct criteria in this context? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjQ=",
      "description" : "VG8gcXVhbGlmeSBhcyBhIGhvdHNwb3QsIGEgcmVnaW9uIG11c3QgbWVldCB0d28gc3RyaWN0ICBjcml0ZXJpYTogaXQgbXVzdCBjb250YWluIGF0IGxlYXN0IDEsNTAwIHNwZWNpZXMgb2YgdmFzY3VsYXIgIHBsYW50cyAoPiAwLjUgcGVyY2VudCBvZiB0aGUgd29ybGQncyB0b3RhbCkgYXMgZW5kZW1pY3MsIGFuZCAgaXQgaGFzIHRvIGhhdmUgbG9zdCBhdCBsZWFzdCA3MCBwZXJjZW50IG9mIGl0cyBvcmlnaW5hbCBoYWJpdGF0LiAgU28gd2UgY2hvb3NlIFNwZWNpZXMgcmljaG5lc3MgYXMgd2VsbCBhcyBFbmRlbWlzbS4gQWxvbmcgIHdpdGggdGhpcyBUaHJlYXQgcGVyY2VwdGlvbiBpcyBuZWNlc3NhcnkgdG8gdGFrZSAsIGJlY2F1c2UgaXQgIG1ha2VzIHRoZSBiYXNlIG9mIHRoaXMgY29uY2VwdC4gQWRhcHRhdGlvbiBvZiBmbG9yYSBpcyBhbiAgYXJiaXRyYXJ5IG9wdGlvbiwgRXRobm8tYm90YW5pY2FsIGltcG9ydGFuY2UgZG9lcyBub3RoaW5nICB3aXRoIHRoZSBCaW9kaXZlcnNpdHkgSG90c3BvdCBzZWxlY3Rpb24gY3JpdGVyaWEsIHZlZ2V0YXRpb24gIERlbnNpdHkgaXMgYWxzbyBkaXNjYXJkZWQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 6 ",
        "option2" : " 2, 4 and 6 ",
        "option3" : " 1, 3 and 5 ",
        "option4" : " 3, 4 an 6 "
      }
    },
    {
      "index" : 25,
      "question" : "The Himalayan range is very rich in species diversity. Which one among the following is the most appropriate reason for this phenomenon ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjU=",
      "description" : "SGltYWxheWFzIGFuZCBpdHMgYWRqb2luaW5nIGFyZWFzIGFyZSBtYXJrZWQgYXMgYSAgY29uZmx1ZW5jZSBvZiBzZXZlcmFsIGJpb2dlb2dyYXBoaWNhbCByZWFsbXMuIEl0IGhhcyB2YXJpdHkgIG9mIGZvcmVzdCB0eXBlIGFuZCBpcyByaWNoIGluIHpvby1iaW9nZW9ncmFwaGljIHJlZ2lvbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It has a high rainfall that supports luxuriant vegetative  growth ",
        "option2" : " It is a confluence of different bio-geographical zones. ",
        "option3" : " Exotic and invasive species have not been introduced  in this region. ",
        "option4" : " It has less human interference. "
      }
    },
    {
      "index" : 26,
      "question" : "There is a concern over the increase in harmful algal blooms in the seawaters of India. What could be the causative factors for this phenomenon?   E 52 1. Discharge of nutrients from the estuaries. 2. Run-off from the land during the monsoon. 3. Upwelling in the seas. Select the correct answer from the codes given below: ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MjY=",
      "description" : "QWxnYWUgbXVsdGlwbHkgcmFwaWRseSB3aGVuIG51dHJpZW50cyBhcmUgcHJlc2VudC4gU28sICBkaXNjaGFyZ2Ugb2YgbnV0cmllbnRzIGZhdm91ciBhbGdhZSBhbmQgc3Vic2VxdWVudGx5IGFsZ2FsICBibG9vbSBncm93dGggZnJvbSBlc3R1YXJpZXMgdG8gc2VhLiBUaGUgcnVuIG9mZiBmcm9tIHRoZSAgbGFuZCBkdXJpbmcgdGhlIG1vbnNvb24gYnJpbmcgc2FsdHMgd2hpY2ggZmF2b3VycyB0aGUgIGdyb3d0aCBvZiBhbGdhZS4gVXB3ZWxsaW5nIG9mIHRoZSBzZWEgd2F0ZXIgYnJpbmdzIHRoZSAgbnV0cmllbnRzIHRvIHRvcCBsZXZlbCBsZWFkaW5nIHRvIHJhcGlkIGFsZ2FlIG11bHRpcGxpY2F0aW9uLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following :  1. Photosynthesis 2.    Respiration. 3. Decay of organic matter 4.    Volcanic action. Which of the above add carbon dioxide to the carbon cycle on earth ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mjc=",
      "description" : "UGhvdG9zeW50aGVzaXMgYnkgcGxhbnRzIHJlbW92ZXMgYWJvdXQgMTIwIGJpbGxpb24gIHRvbnMgb2YgY2FyYm9uIGZyb20gdGhlIGFpciBwZXIgeWVhciwgYnV0IHBsYW50IGRlY29tcG9zaXRpb24gIHJldHVybnMgYWJvdXQgdGhlIHNhbWUgYW1vdW50LiBXaGVuIHRoZSBvcmdhbmljIG1hdHRlciBpcyAgb3hpZGl6ZWQgdGhyb3VnaCByZXNwaXJhdGlvbiwgdGhlIHJldmVyc2Ugb2YgcGhvdG9zeW50aGVzaXMgIHRha2VzIHBsYWNlLiBSZXNwaXJhdGlvbiByZWxlYXNlcyBDTzIgaW50byB0aGUgYXRtb3NwaGVyZS4gIFJlc3BpcmF0aW9uIGFuZCBwaG90b3N5bnRoZXNpcyBvY2N1ciBhdCBuZWFybHkgZXF1YWwgcmF0ZXMgIG92ZXIgb25lIHllYXIuIFZvbGNhbmljIGVydXB0aW9ucyBhbmQgbWV0YW1vcnBoaXNtIHJlbGVhc2UgIGdhc2VzIGludG8gdGhlIGF0bW9zcGhlcmUuIFZvbGNhbmljIGdhc2VzIGFyZSBwcmltYXJpbHkgd2F0ZXIgIHZhcG9yLCBjYXJib24gZGlveGlkZSBhbmQgc3VscGh1ciBkaW94aWRlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 4 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " 1 an 4 "
      }
    },
    {
      "index" : 28,
      "question" : "A sandy and saline area is the natural habitat of an Indian animal species. The animal has no predators in that area but its existence is threatened due to the destruction of its habitat. Which one of the following could be that animal ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mjg=",
      "description" : "VGhlIEluZGlhbiB3aWxkIGFzcyBhcmUgYWxzbyBjYWxsZWQgYXMgZ2h1ZGtodXIgaW4gIGxvY2FsIEd1amFyYXRpIGxhbmd1YWdlLCBpcyBhIHN1YnNwZWNpZXMgb2YgdGhlIG9uYWdlciBuYXRpdmUgIG9mIFNvdXRoIEFzaWEuIEl0IGlzIHVua25vd24gaG93IHRoZXkgZGlzYXBwZWFyZWQgdGhvdWdoICB0aGV5IGhhdmUgbmV2ZXIgYmVlbiBodW50aW5nIHRhcmdldCBkdXJpbmcgYW55IGVtcGVyb3JzICBpbiBJbmRpYS4gVGhlIGhpc3Rvcnkgc3BlYWtzIHRoYXQgdGhlaXIgbnVtYmVyIGhhcyBiZWVuICBkZWNsaW5pbmcgYWZ0ZXIgZHVlIHRvIGRpc2Vhc2VzIHN1Y2ggYXMgc3VycmEgYW5kIGhvcnNlICBzaWNrbmVzcy4gVGhlIHByb2Nlc3MgcmVsYXRlZCB0byBzYWx0IGFjdGl2aXRpZXMgaGF2ZSBhbHNvICBiZWVuIGEgcmVhc29uIGJlaGluZCBpdC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Indian wild buffalo ",
        "option2" : " Indian wild ass ",
        "option3" : " Indian wild boar ",
        "option4" : " Inian gazelle "
      }
    },
    {
      "index" : 29,
      "question" : "Biodiversity forms the basis for human existence in the following ways :  1. Soil formation 2. Prevention of soil erosion 3. Recycling of waste 4. Pollination of crops Select the correct answer using the codes given below ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mjk=",
      "description" : "QmlvbG9naWNhbCBkaXZlcnNpdHkgaGVscHMgaW4gdGhlIGZvcm1hdGlvbiBhbmQgIG1haW50ZW5hbmNlIG9mIHNvaWwgc3RydWN0dXJlIGFuZCB0aGUgcmV0ZW50aW9uIG9mIG1vaXN0dXJlICBhbmQgbnV0cmllbnQgbGV2ZWxzLiBCaW9kaXZlcnNpdHkgc3VwcG9ydHMgZWNvc3lzdGVtICBzZXJ2aWNlcyBpbmNsdWRpbmcgYWlyIHF1YWxpdHksIGNsaW1hdGUgd2F0ZXIgcHVyaWZpY2F0aW9uLCAgcG9sbGluYXRpb24sIGFuZCBwcmV2ZW50aW9uIG9mIGVyb3Npb24uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1,2 and 3 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 an 4 only "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following is not a site for in-situ method of conservation of flora ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzA=",
      "description" : "Wm9vIGFuZCBib3RhbmljYWwgZ2FyZGVucyBhcmUgdGhlIG1vc3QgY29udmVudGlvbmFsICBtZXRob2RzIG9mIGV4LXNpdHUgY29uc2VydmF0aW9uLCByZXN0IGFsbCBvcHRpb25zIGFyZSBuYXR1cmFsICBoYWJpdGF0cyBzbyBhcmUgb2YgaW4tc2l0dSBjb25zZXJ2YXRpb24uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Biosphere Reserve ",
        "option2" : " Botanical Garden ",
        "option3" : " National Park ",
        "option4" : " Willife Sanctuary "
      }
    },
    {
      "index" : 31,
      "question" : "The 2004 Tsunami made people realize that mangroves can serve as a reliable safety hedge against coastal calamities. How do mangroves function as a safety hedge? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzE=",
      "description" : "VGhlIG1hbmdyb3ZlIHRyZWVzIGRvIG5vdCBnZXQgdXByb290ZWQgYnkgc3Rvcm1zICBhbmQgdGlkZXMgYmVjYXVzZSBvZiB0aGVpciBleHRlbnNpdmUgcm9vdHMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The mangrove swamps separate the human settlements  from the sea by a wide zone in which people neither  live nor venture out ",
        "option2" : " The mangroves provide both food and medicines  which people are in need of after any natural disaster ",
        "option3" : " The mangrove trees are tall with dense canopies and  serve as an excellent shelter during a cyclone or tsunami ",
        "option4" : " The mangrove trees do not get uprooted by storms "
      }
    },
    {
      "index" : 32,
      "question" : "The 'Red Data Books'' published by the International Union for Conservation of Nature and Natural resources (IUCN) contain lists of ?  1. Endemic plant and animal species present in the biodiversity hotspots. 2. Threatened plant and animal species. 3. Protected sites for conservation of nature and natural resources in various countries. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzI=",
      "description" : "VGhlIHJlZCBkYXRhIGJvb2sgY29udGFpbnMgb25seSA4IGxpc3RzIG9mIHRocmVhdGVuZWQgIHBsYW50IGFuZCBhbmltYWwgc3BlY2llcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements : 1. Biodiversity is normally greater in the lower latitudes as compared to the higher latitudes. 2. Along the mountain gradients, biodiversity is normally greater in the lower altitudes as compared to the higher altitudes.  Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzM=",
      "description" : "QmlvZGl2ZXJzaXR5IGlzIGhpZ2hlciBpbiB0aGUgbG93IGxhdGl0dWRlcyBhcyBjb21wYXJlZCAgdG8gdGhlIGhpZ2hlciBsYXRpdHVkZXMgYXMgdGhlIGhhYml0YXQgdG9sZXJhbmNlIGxldmVsIGlzIHZlcnkgIG5hcnJvdyBhdCBncmVhdGVyIGxhdGl0dWRlLiAgTW91bnRhaW5zIGhhdmUgaGlnaCByYW5nZSBvZiBzcGVjaWVzIGF0IHRoZSBsb3cgYWx0aXR1ZGUgYXMgIHRoZXkgY2FuIHN1cHBvcnQgbGFyZ2VyIG51bWJlciBvZiBzcGVjaWVzIGR1ZSB0byBjbGltYXRpYyAgY29uZGl0aW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 34,
      "question" : "With reference to India, consider the following Central Acts : 1. Import and Export (Control) Act, 1947 2. Mining and Mineral Development (Regulation) Act, 1957 3. Customs Act, 1962 4. Indian Forest Act, 1927 Which of the above Acts have relevance to/bearing on the biodiversity conservation in the country ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzQ=",
      "description" : "VGhlcmUgYXJlIDM1IGFjdHMgb2YgSW5kaWFuIEdvdmVybm1lbnQgd2hpY2ggaGF2ZSAgcmVsZXZhbmNlIHRvIEJpb2RpdmVyc2l0eSBjb25zZXJ2YXRpb24gYW5kIGluY2x1ZGVzIGFsbCB0aGUgIGZvdXIgb3B0aW9uIGdpdmVuIGluIHRoaXMgcXVlc3Rpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2,3 and 4 only ",
        "option3" : " 1,2,3 and 4 ",
        "option4" : " None of the above Acts "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following: 1. Carbon dioxide 2. Oxides of Nitrogen 3. Oxides of Sulphur Which of the above is/are the emission/emissions from coal combustion at thermal power plants?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8MzU=",
      "description" : "Q29hbCBjb21idXN0aW9uIGF0IHRoZXJtYWwgcG93ZXIgcGxhbnRzIHJlbGVhc2UgYWxsIG9mICB0aGUgZ2l2ZW4gcHJvZHVjdHMgbGlrZSBDTzIsIE5PeCBhbmQgU094LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 1,
      "question" : "NBA checks the biopiracy and protects the indigenous and traditional genetic resources. 2. NBA directly monitors and supervises the scientific research on genetic modification of crop plants. 3. Application for Intellectual Property Rights related to genetic/biological resources cannot be made without the approval of NBA. Which of the statements given above is /are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwx",
      "description" : "TmF0aW9uYWwgRm9yZXN0IFBvbGljeSwgMTk4OCBkZXNjcmliZXMgdGhlIHByb3RlY3Rpb24gIG9mIGZvcmVzdCBhbmQgZGV2ZWxvcG1lbnQgb2YgZm9yZXN0LiBJdCBkb2VzIG5vdCBkZXNjcmliZSAgdGhlIHVzZSBvZiBpbnNlY3RpY2lkZSBhbmQgcGVzdGljaWRlIGluIGZvcmVzdCBhcmVhcy4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 0,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 37,
      "question" : "The National Green Tribunal Act, 2010 was enacted in consonance with which of the following provisions of the Constitution of India?  1. Right to healthy environment, construed as a part of Right to life under Article 21 2. Provision of grants for raising the level of administration in the Scheduled Areas for the welfare of Scheduled Tribes under Article 275(1) 3. Powers and functions of Gram Sabha as mentioned under Article 243 (A) Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mzc=",
      "description" : "VGhlIE5hdGlvbmFsIEdyZWVuIFRyaWJ1bmFsIEFjdCwgMjAxMCB3YXMgZW5hY3RlZCBpbiAgY29uc29uYW5jZSB3aXRoIHRoZSBSaWdodCB0byBoZWFsdGh5IGVudmlyb25tZW50LCAgY29uc3RydWVkIGFzIGEgcGFydCBvZiBSaWdodCB0byBsaWZlIHVuZGVyIEFydC4gMjEuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "    1 only ",
        "option2" : "    2 and 3 only ",
        "option3" : "    1 and 3 only ",
        "option4" : "    1, 2 an 3 "
      }
    },
    {
      "index" : 38,
      "question" : "If National Water Mission is properly and completely implemented, how will it impact the country?  1. Part of the water needs of urban areas will be met through recycling of wastewater. 2. The water requirements of coastal cities with inadequate alternative sources of water will be met by adopting appropriate technologies that allow for the use of ocean water. 3. All the rivers of Himalayan origin will be linked to the rivers of peninsular India, 4. The expenses incurred by farmers for digging bore- wells and for installing motors and pump-sets to draw groundwater will be completely reimbursed by the Government. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mzg=",
      "description" : "SWYgTmF0aW9uYWwgV2F0ZXIgTWlzc2lvbiBpcyBwcm9wZXJseSBhbmQgY29tcGxldGVseSAgaW1wbGVtZW50ZWQsIHRoZW4gdGhlIHBhcnQgb2YgdGhlIHdhdGVyIG5lZWRzIG9mIHVyYmFuIGFyZWFzICB3aWxsIGJlIG1ldCB0aHJvdWdoIHJlY3ljbGluZyBvZiB3YXN0ZSB3YXRlciBhbmQgdGhlIHdhdGVyICByZXF1aXJlbWVudHMgb2YgY29hc3RhbCBjaXRpZXMgd2l0aCBpbmFkZXF1YXRlIGFsdGVybmF0aXZlICBzb3VyY2VzIG9mIHdhdGVyIHdpbGwgYmUgbWV0IGJ5IGFkb3B0aW5nIGFwcHJvcHJpYXRlICB0ZWNobm9sb2dpZXMgdGhhdCBhbGxvdyBmb3IgdGhlIHVzZSBvZiBvY2VhbiB3YXRlci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 39,
      "question" : "Biomass gasification is considered to be one of the sustainable solutions to the power crisis in India. In this context, which of the following statements is/are correct?  E B D _8 34 2 Issues on Environment, Ecology, Biodiversity & Climate Change E 53 1. Coconut shells, groundnut shells and rice husk can be used in biomass gasification. 2. The combustible gases generated from biomass gasification consist of hydrogen and carbon dioxide only. 3. The combustible gases generated from biomass gasification can be used for direct heat generation but not in internal combustion engines. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Mzk=",
      "description" : "VGhlIGNvbWJ1c3RpYmxlIGdhcyBwcm9kdWNlZCBkdXJpbmcgZ2FzaWZpY2F0aW9uICBwcm9jZXNzIGluY2x1ZGVzIGNhcmJvbiBtb25veGlkZSBoeWRyb2dlbiwgY2FyYm9uICBkaW94aWRlIGFuZCBwb3NzaWJseSBoeWRyb2NhcmJvbnMgbGlrZSBtZXRoYW5lIChDSDQpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 40,
      "question" : "The acidification of oceans is increasing. Why is this phenomenon a cause of concern?  1. The growth and survival of calcareous phytoplankton will be adversely affected. 2. The growth and survival of coral reefs will be  adversely affected. 3. The survival of some animals that have phytoplanktonic larvae will be adversely affected. 4. The cloud seeding and formation of clouds will be adversely affected. Which of the statements given above is /are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDA=",
      "description" : "MSwgMiwgMyBhbmQgNCBhcmUgY29ycmVjdC4gIE1hcmluZSBvcmdhbmlzbXMgbGlrZSBjb3JhbCBhbmQgcGh5dG9wbGFua3RvbiBhcmUgYWZmZWN0ZWQgIGJ5IG9jZWFuIGFjaWRpZmljYXRpb24uIEl0IGRlY3JlYXNlIGdyb3d0aCwgcmVwcm9kdWN0aW9uICBhbmQgc3Vydml2YWwgb2YgdGhlc2Ugc3BlY2llcy4gVGhlIGFjaWRpZmljYXRpb24gb2Ygb2NlYW4gIG1heSBsZWFkIHRvIGNsb3VkIGZvcm1hdGlvbiBhcy4gIFN1bGZ1cmljIGFjaWQgc2VlZHMgdGhlIGNsb3VkIGZvcm1hdGlvbiB3aGljaCBpcyBlbWl0dGVkICBmcm9tIG9jZWFuIGluIHRoZSBmb3JtIG9mIGRpbWV0aHlsc3VsZmlkZSAoRE1TKSBwcm9kdWNlZCAgYnkgcGh5dG9wbGFua3Rvbi4gVGhlc2UgcGh5dG9wbGFua3RvbnMgcHJvZHVjZSBsZXNzICBETVMgd2hlbiBvY2VhbiB3YXRlciBpcyBhY2lkaWZpZWQgYW5kIHJlc3VsdCBpbiBsZXNzIGNsb3VkICBmb3JtYXRpb24uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 43,
      "question" : "In which one among the following categories of protected areas in India are local people not allowed to collect and use the biomass?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDM=",
      "description" : "SW4gbmF0aW9uYWwgcGFya3MsIGxvY2FsIHBlb3BsZSBhcmUgbm90IGFsbG93ZWQgdG8gY29sbGVjdCAgYW5kIHVzZSB0aGUgYmlvbWFzcyBhdmFpbGFibGUgaW4gdGhlIGFyZWEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Biosphere Reserves ",
        "option2" : " National Parks ",
        "option3" : " Wetlands declared under Ramsar Convention ",
        "option4" : " Wildlife Sanctuaries "
      }
    },
    {
      "index" : 44,
      "question" : "Which one of the following groups of animals belongs to the category of endangered species?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDQ=",
      "description" : "R3JlYXQgSW5kaWFuIEJ1c3RhcmQsIE11c2sgRGVlciwgUmVkIFBhbmRhIGFuZCAgQXNpYXRpYyBXaWxkIEFzcywgYXJlIGVuZGFuZ2VyZWQgc3BlY2llcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Great Indian Bustard, Musk Deer, Red Panda and  Asiatic Wild Ass ",
        "option2" : " Kashmir  Stag, Cheetal, Blue Bull and Great Indian Bustard ",
        "option3" : " Snow Leopard, Swamp Deer, Rhesus Monkey and  Saras (Crane) ",
        "option4" : " Lion-tailed Macaque, Blue Bull, Hanuman Langur and "
      }
    },
    {
      "index" : 45,
      "question" : "The Millennium Ecosystem Assessment describes the following major categories of ecosystem services provisioning, supporting, regulating, preserving and cultural. Which one of the following is supporting service?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDU=",
      "description" : "U3VwcG9ydGluZyBzZXJ2aWNlcyBvZiBNaWxsZW5uaXVtIEVjb3N5c3RlbSAgQXNzZXNzbWVudCBhcmUgbmVjZXNzYXJ5IGZvciBwcm9kdWN0aW9uIG9mIGFsbCBvdGhlciAgZWNvc3lzdGVtIHNlcnZpY2VzIGluY2x1ZGluZyBzb2lsIGZvcm1hdGlvbiwgbnV0cmllbnQgIGN5Y2xpbmcsIHBob3Rvc3ludGhlc2lzIHRvIG5hbWUgYSBmZXcuICAgRSA2NCA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Production of food and water ",
        "option2" : " Control of climate and disease ",
        "option3" : " Nutrient cycling and crop pollination ",
        "option4" : " Maintenance of diversity "
      }
    },
    {
      "index" : 46,
      "question" : "What is the difference between the antelopes Oryx and Chiru?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDY=",
      "description" : "T3J5eCBoYXMgYWRhcHRlZCB0byBsaXZlIGluIGhvdCBhbmQgYXJpZCBhcmVhcyB3aGVyZWFzICBDaGlydSBpcyBhZGFwdGVkIHRvIGxpdmUgaW4gc3RlcHBlcyBhbmQgc2VtaS1kZXNlcnQgYXJlYXMgb2YgIGNvbGQgaGlnaCBtb3VudGFpbnMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Oryx is adapted to live in hot and arid areas whereas  Chiru is adapted to live in steppes and semi-desert  areas of cold high mountains ",
        "option2" : " Oryx is poached for its antlers whereas Chiru is  poached for its musk ",
        "option3" : " Oryx exists in western India only whereas Chiru exists  in north-east India only ",
        "option4" : " None of the statements (a), (b) and (c) given above is "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following can be threats to the biodiversity of a geographical area?  1. Global warming 2. Fragmentation of habitat 3. Invasion of alien species 4. Promotion of vegetarianism Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDc=",
      "description" : "RXhjZXB0IHByb21vdGlvbiBvZiB2ZWdldGFyaWFuaXNtIGFsbCBvdGhlciBhY3RzIGFyZSAgdGhyZWF0cyB0byB0aGUgYmlvZGl2ZXJzaXR5IG9mIGEgZ2VvZ3JhcGhpY2FsIGFyZWEuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following agricultural practices :       1. Contour bunding 2. Relay cropping 3. Zero tillage In the context of global climate change, which of the above helps/help in carbon sequestration/storage in the soil? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDg=",
      "description" : "QWxsIHRoZSBnaXZlbiBhZ3JpY3VsdHVyYWwgcHJhY3RpY2VzIGhlbHAgaW4gY2FyYm9uICBzZXF1ZXN0cmF0aW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "    1 and 2 only ",
        "option2" : "    3 only ",
        "option3" : "    1, 2 and 3 ",
        "option4" : "    None of them "
      }
    },
    {
      "index" : 49,
      "question" : "What would happen if phytoplankton of an ocean is completely destroyed for some reason?  1. The ocean as a carbon sink would be adversely affected. 2. The food chains in the ocean would be adversely affected. 3. The   density  of  ocean   water would drastically decrease. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NDk=",
      "description" : "SWYgcGh5dG9wbGFua3RvbiBvZiBhbiBvY2VhbiBpcyBjb21wbGV0ZWx5IGRlc3Ryb3llZCAgZm9yIHNvbWUgcmVhc29uIHRoZW4gIChpKSBUaGUgb2NlYW4gYXMgYSBjYXJib24gc2luayB3b3VsZCBiZSBhZHZlcnNlbHkgYWZmZWN0ZWQuICAoaWkpIFRoZSBmb29kIGNoYWlucyBpbiB0aGUgb2NlYW4gd291bGQgYmUgYWR2ZXJzZWx5ICBhZmZlY3RlZCBhcyB0aGUgZmlzaGVzIGxpdmUgb24gdGhlbS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 50,
      "question" : "Vultures which used to be very common in Indian countryside some years ago are rarely seen nowadays. This is attributed to  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTA=",
      "description" : "QSBkcnVnIHVzZWQgYnkgY2F0dGxlIG93bmVycyBmb3IgdHJlYXRpbmcgdGhlaXIgZGlzZWFzZWQgIGNhdHRsZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " the destruction of their nesting sites by new invasive  species ",
        "option2" : " a drug used by cattle owners for treating their diseased  cattle ",
        "option3" : " scarcity of food available  to them ",
        "option4" : " a widespread,  persistent and fatal disease among them "
      }
    },
    {
      "index" : 51,
      "question" : "Due to improper/ indiscriminate disposal of old and used computers or their parts, which of the following are released into the environment as e-waste?  1. Beryllium 2. Cadmium 3. Chromium 4. Heptachlor 5. Mercury 6. Lead 7. Plutonium Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTE=",
      "description" : "RWxlY3Ryb25pYyB3YXN0ZSBvciBFLXdhc3RlIGhhcyBmZXJyb3VzIGFuZCBub24tICBmZXJyb3VzIG1ldGFscyBib3RoLiBOb24tZmVycm91cyBtZXRhbHMgbGlrZSBjb3BwZXIsICBhbHVtaW5pdW0sIHNpbHZlciwgZ29sZCwgcGxhdGludW0sIHBhbGxhZGl1bSBldGMuIFRoZSBwcmVzZW5jZSAgb2YgZWxlbWVudHMgbGlrZSBsZWFkLCBtZXJjdXJ5LCBhcnNlbmljLCBjYWRtaXVtLCBzZWxlbml1bSAgYW5kIGhleGF2YWxlbnQgY2hyb21pdW0gYXJlIGNsYXNzaWZpZWQgYXMgaGF6YXJkb3VzIHdhc3RlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 3, 4, 6 and 7 only ",
        "option2" : " 1, 2, 3, 5 and 6 only ",
        "option3" : " 2, 4, 5 and 7 only ",
        "option4" : " 1, 2, 3, 4, 5, 6 an 7 "
      }
    },
    {
      "index" : 52,
      "question" : "With reference to food chains in ecosystems, consider the following statements:  1. A food chain illustrates the order in which a chain of organisms feed upon each other. 2. Food chains are found within the populations of a species. 3. A food chain illustrates the numbers of each organism which  are eaten by others. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTI=",
      "description" : "QSBmb29kIGNoYWluIGlsbHVzdHJhdGVzIHRoZSBvcmRlciBpbiB3aGljaCBhIGNoYWluIG9mICBvcmdhbmlzbXMgZmVlZCB1cG9uIGVhY2ggb3RoZXIuICBBIGZvb2QgY2hhaW4gaXMgdGhlIHNlcXVlbmNlIG9mIHdobyBlYXRzIHdob20gaW4gYSAgYmlvbG9naWNhbCBjb21tdW5pdHkgdG8gb2J0YWluIG51dHJpdGlvbi4gIFNhbXBsZTotIEdyYXNzbGFuZCBCaW9tZSAgR3Jhc3M+IEdyYXNzIEhvcHBlciA+IFJhdD4gU25ha2UgPiBIYXdrIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 53,
      "question" : "In which of the following States is lion-tailed macaque found in its natural habitat?  1. Tamil Nadu 2. Kerala 3. Karnataka 4. Andhra Pradesh Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTM=",
      "description" : "TGlvbi10YWlsZWQgTWFjYXF1ZXMgYXJlIGZvdW5kIGluIHRoZSBtb3VudGFpbiAgZm9yZXN0cyBzY2F0dGVyZWQgYWNyb3NzIHRocmVlIEluZGlhbiBzdGF0ZXMgc3RhdGVkIGFib3ZlLiAgVGhlIGxpb24tdGFpbGVkIE1hY2FxdWVzIGFyZSBlbmRhbmdlcmVkIGFzIHBlciBJVUNOLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following terms describes not only the physical space occupied by an organism, but also its functional role in the community of organisms?   ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTQ=",
      "description" : "RWNvbG9naWNhbCBOaWNoZSBpcyBhIHRlcm0gdGhhdCBkZXNjcmliZXMgdGhlIHdheSBvZiAgbGlmZSBvZiBhIHNwZWNpZXMuIEVhY2ggc3BlY2llcyBpcyB0aG91Z2h0IHRvIGhhdmUgYSBzZXBhcmF0ZSAgdW5pcXVlIG5pY2hlLiBUaGUgZWNvbG9naWNhbCBuaWNoZSBkZXNjcmliZXMgaG93IGFuICBvcmdhbmlzbSBvciBwb3B1bGF0aW9uIHJlc3BvbmRzIHRvIHRoZSBkaXN0cmlidXRpb24gb2YgIHJlc291cmNlcyBhbmQgY29tcGV0aXRvcnMuIEEgbmljaGUgaXMgdGhlIHN1bSBvZiB0aGUgaGFiaXRhdCAgcmVxdWlyZW1lbnRzIHRoYXQgYWxsb3cgYSBzcGVjaWVzIHRvIHBlcnNpc3QgYW5kIHByb2R1Y2Ugb2Zmc3ByaW5nLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Ecotone ",
        "option2" : " Ecological niche ",
        "option3" : " Habitat ",
        "option4" : " Home range "
      }
    },
    {
      "index" : 55,
      "question" : "Consider the following:  1. Star tortoise 2. Monitor lizard 3. Pygmy hog 4. Spider monkey Which of the above are naturally found in India? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTU=",
      "description" : "U3RhciB0b3J0b2lzZSBpcyBmb3VuZCBpbiBJbmRpYSBpbiB0aGUgZHJ5IGFuZCBzY3J1YiAgZm9yZXN0cy4gUHlnbXkgSG9nIGlzIGFuIGVuZGFuZ2VyZWQgc3BlY2llcyBmb3VuZCBpbiAgQXNzYW0uIE9ubHkgMTUwIGFuaW1hbHMgYXJlIGxlZnQuIE1vbml0b3IgTGl6YXJkIGlzIGZvdW5kIGluICBJbmRpYSwgU3JpIExhbmthIGFuZCBQYWtpc3Rhbi4gU3BpZGVyIE1vbmtleSBpcyB0aGUgIGluaGFiaXRhbnQgb2YgdHJvcGljYWwgZm9yZXN0cyBvZiBDZW50cmFsIGFuZCBTb3V0aCBBbWVyaWNhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 56,
      "question" : "Which of the following can be found as pollutants in the drinking water in some parts of India?  1. Arsenic 2. Sorbitol 3. Fluoride 4. Formaldehyde 5. Uranium Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTY=",
      "description" : "RHJpbmtpbmcgd2F0ZXIgaW4gc29tZSBwYXJ0cyBvZiBJbmRpYSBoYXMgY29udGFtaW5hbnRzICBsaWtlIEFyc2VuaWMsIEZsdW9yaWRlIG90aGVyIHRoYW4gbWFueSBvdGhlciBjb250YW1pbmFudHMuICBUaGUgc291cmNlcyBvZiBBcnNlbmljIGFyZSBydW4gb2ZmIGZyb20gb3JjaGFyZHMuIFRoZSAgc291cmNlcyBvZiBmbHVvcmlkZSBhcmUgZXJvc2lvbiBvZiBuYXR1cmFsIGRlcG9zaXRzLCBkaXNjaGFyZ2UgIGZyb20gZmVydGlsaXplcnMgYW5kIGFsdW1pbnVtIGZhY3Rvcmllcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2, 4 and 5 only ",
        "option3" : " 1, 3 and 5 only ",
        "option4" : " 1, 2, 3, 4 an 5 "
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following pairs:  1. Nokrek Bio-sphere Reserve : Garo Hills 2. Logtak (Loktak) Lake : Barail Range 3. Namdapha National Park : Dafla Hills Which of the above pairs is/are correctly matched? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTc=",
      "description" : "Tm9rcmVrIEJpb3NwaGVyZSBSZXNlcnZlIGlzIHNpdHVhdGVkIGluIEdhcm8gSGlsbHMgaW4gIE1lZ2hhbGF5YS4gTG9rdGFrIExha2UgaXMgaW4gTWFuaXB1ci4gQmFyYWlsIFJhbmdlIGlzIGluICBBc3NhbS4gVGhvdWdoIE5hbWRhcGhhIE5hdGlvbmFsIFBhcmsgYW5kIERhZmxhIEhpbGwgIGJvdGggYXJlIGluIEFydW5hY2hhbCBQcmFkZXNoLCB0aGUgdHdvIGFyZSBzZXBhcmF0ZSBlbnRpdGllcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 58,
      "question" : "In the grasslands, trees do not replace the grasses as a part of an ecological succession because of  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTg=",
      "description" : "VGhlIHRyZWVzIGNhbm5vdCByZXBsYWNlIHRoZSBncmFzc2VzIGFzIGEgcGFydCBvZiBhbiAgZWNvbG9naWNhbCBzdWNjZXNzaW9uIGJlY2F1c2Ugb2Ygd2F0ZXIgbGltaXRzIGFuZCBmaXJlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " insects and fungi ",
        "option2" : " limited sunlight and paucity of nutrients ",
        "option3" : " water limits and fire ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 59,
      "question" : "Which one of the following is the correct sequence of ecosystems in the order of decreasing productivity?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NTk=",
      "description" : "VGhlIHByb2R1Y3Rpdml0eSBvZiBNYW5ncm92ZXMgPiBncmFzc2xhbmRzID4gbGFrZXMgID4gb2NlYW5zLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Oceans, lakes, grasslands, mangroves ",
        "option2" : " Mangroves, oceans, grasslands, lakes ",
        "option3" : " Mangroves, grasslands, lakes, oceans ",
        "option4" : " Oceans, mangroves, lakes, grasslands "
      }
    },
    {
      "index" : 60,
      "question" : "Consider the following fauna of India:  1. Gharial 2. Leatherback turtle 3. Swamp deer Which of the above is/are endangered? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjA=",
      "description" : "R2hhcmlhbCBpcyBjcml0aWNhbGx5IGVuZGFuZ2VyZWQgYWNjb3JkaW5nIHRvIElVQ04uICBPdmVyaHVudGluZyBmb3Igc2tpbiBhbmQgdHJvcGhpZXMsIGhhYml0YXQgbG9zcyBkdWUgdG8gIGNvbnN0cnVjdGlvbiBvZiBkYW1zIGFuZCBiYXJyYWdlcyBoYXMgYmVlbiB0aGUgcmVhc29uIGZvciAgdGhlaXIgZGVjbGluZS4gTGVhdGhlciBiYWNrIHR1cnRsZXMgYXJlIGVuZGFuZ2VyZWQgZHVlIHRvICBodW1hbiBjYXJlbGVzc25lc3MuIFN3YW1wIGRlZXIgb2NjdXBpZXMgYSBwbGFjZSBpbiB0aGUgIGxpc3Qgb2YgdGhlIGVuZGFuZ2VyZWQgc3BlY2llcyBvZiB0aGUgd29ybGQuIERlZm9yZXN0YXRpb24sICBkcmFpbmluZyBvZiBzd2FtcHMgYW5kIG1hcnNoZXMgZm9yIGZhcm1pbmcgaGFzIGxlZCB0byB0aGUgIGRlc3RydWN0aW9uIG9mIHRoZWlyIG5hdHVyYWwgaGFiaXRhdC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 61,
      "question" : "With reference to the food chains in ecosystems, which of the following kinds of organism is/are known as decomposer organism/organisms?  1. Virus 2. Fungi 3. Bacteria Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjE=",
      "description" : "QmFjdGVyaWEgIGFuZCBGdW5naSAgYm90aCAgYXJlICBrbm93biBhcyAgZGVjb21wb3NlciAgb3JnYW5pc21zLiBCYWN0ZXJpYSBhcmUgaW1wb3J0YW50IGRlY29tcG9zZXJzOyB0aGV5IGNhbiAgYnJlYWsgZG93biBhbnkga2luZCBvZiBvcmdhbmljIG1hdHRlcnMuIEZ1bmdpIGFyZSBwcmltYXJ5ICBkZWNvbXBvc2VycywgdGhleSBub3Qgb25seSBkZWNvbXBvc2UgdGhlIHN1cmZhY2UgIG9yZ2FuaXNtcyBidXQgdGhleSBjYW4gYWxzbyBwZW5ldHJhdGUgZGVlcCBpbnRvIHRoZSBvcmdhbmljICBtYXR0ZXJzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following international agreements :  1. The  International Treaty  on Plant  Genetic  Resources for Food and Agriculture 2. The United Nations Convention to Combat Desertification 3. The World Heritage Convention Which of the above has/have a bearing on the biodiversity? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjI=",
      "description" : "VGhlIEludGVybmF0aW9uYWwgVHJlYXR5IG9uIFBsYW50IEdlbmV0aWMgUmVzb3VyY2VzICBmb3IgRm9vZCBhbmQgQWdyaWN1bHR1cmUgYWltcyBhdCBndWFyYW50ZWVpbmcgZm9vZCBzZWN1cml0eSAgdGhyb3VnaCB0aGUgY29uc2VydmF0aW9uLCBleGNoYW5nZSBhbmQgc3VzdGFpbmFibGUgdXNlIG9mICB0aGUgd29ybGQncyBwbGFudCBnZW5ldGljIHJlc291cmNlcyBmb3IgZm9vZCBhbmQgYWdyaWN1bHR1cmUuICBUaGUgVW5pdGVkIE5hdGlvbnMgQ29udmVudGlvbiB0byBDb21iYXQgRGVzZXJ0aWZpY2F0aW9uICBpcyBhIENvbnZlbnRpb24gdG8gY29tYmF0IGRlc2VydGlmaWNhdGlvbiBhbmQgbWl0aWdhdGUgdGhlICBlZmZlY3RzIG9mIGRyb3VnaHQuIFRoZSBXb3JsZCBIZXJpdGFnZSBDb252ZW50aW9uIGlzICBjb25jZXJuZWQgd2l0aCB0aGUgcHJvdGVjdGlvbiBvZiB0aGUgd29ybGQgY3VsdHVyYWwgYW5kICBuYXR1cmFsIGhlcml0YWdlLkFsbCB0aHJlZSBvZiB0aGVtIGhhdmUgYSBiZWFyaW5nIG9uIHRoZSAgYmlvZGl2ZXJzaXR5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3 "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statements regarding 'Earth Hour':  1. It is an initiative of UNEP and UNESCO. 2. It is a movement in which the participants  switch  off the lights for one hour on a certain day every year. 3. It is a movement to raise the awareness about the climate change and the need to save the planet. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjM=",
      "description" : "RWFydGggSG91ciBpcyBhIHdvcmxkd2lkZSBtb3ZlbWVudCBmb3IgdGhlIHBsYW5ldCAgb3JnYW5pemVkIGJ5IHRoZSBXb3JsZCBXaWRlIEZ1bmQgZm9yIE5hdHVyZSAoV1dGKS4gVGhlICBldmVudCBpcyBoZWxkIHdvcmxkd2lkZSBhbm51YWxseSBlbmNvdXJhZ2luZyBpbmRpdmlkdWFscywgIGNvbW11bml0aWVzLCBob3VzZWhvbGRzIGFuZCBidXNpbmVzc2VzIHRvIHR1cm4gb2ZmIHRoZWlyICBub24tZXNzZW50aWFsIGxpZ2h0cyBmb3Igb25lIGhvdXIsIGZyb20gODozMCB0byA5OjMwIHAubS4gdG8gIHJhaXNlIHRoZSBhd2FyZW5lc3MgYWJvdXQgdGhlIGNsaW1hdGUgY2hhbmdlIGFuZCB0aGUgbmVlZCAgdG8gc2F2ZSB0aGUgcGxhbmV0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 64,
      "question" : "Which one of the following is the correct sequence of a food chain?  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjQ=",
      "description" : "RGlhdG9tcyBhcmUgYXV0b3Ryb3BocyB3aGljaCBwcmVwYXJlIHRoZWlyIG93biBmb29kLiAgQ3J1c3RhY2VhbnMgYXJlIGhlcmJpdm9yb3VzIGFuaW1hbHMgd2hpY2ggZmVlZCBvbiBkaWF0b21zLiAgSGVycmluZ3MgYXJlIGNhcm5pdm9yb3VzIGFuaW1hbHMgd2hpY2ggZmVlZCBvbiAgQ3J1c3RhY2VhbnMuIFRoaXMgY29tcGxldGVzIHRoZSBmb29kIGNoYWluLiAgRGlhdG9tcyBhcmUgYXV0b3Ryb3BocywgcHJlcGFyZSB0aGVpciBvd24gZm9vZC4gQ3J1c3RhY2VhbnMgIGVhdHMgZGlhdG9tcy4gQ3J1c3RhY2VhbnMgYXJlIG1lbWJlcnMgb2Ygem9vcGxhbmtvbnMgYW5kICBhcmUgZWF0ZW4gYnkgSGVycmluZyBmaXNoIHdoZW4gc21hbGwuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Diatoms-Crustaceans-Herrings ",
        "option2" : " Crustaceans-Diatoms-Herrings ",
        "option3" : " Diatoms-Herrings-Crustaceans ",
        "option4" : " Crustaceans-Herrings-Diatoms "
      }
    },
    {
      "index" : 65,
      "question" : "If  a wetland  of  international importance is brought under the 'Montreux  Record', what does  it imply?  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjU=",
      "description" : "VGhlIE1vbnRyZXV4IFJlY29yZCBpcyBhIHJlZ2lzdGVyIG9mIHdldGxhbmQgc2l0ZXMgb24gIHRoZSBMaXN0IG9mIFdldGxhbmRzIG9mIEludGVybmF0aW9uYWwgSW1wb3J0YW5jZSB3aGVyZSAgY2hhbmdlcyBpbiBlY29sb2dpY2FsIGNoYXJhY3RlciBoYXZlIG9jY3VycmVkLCBhcmUgb2NjdXJyaW5nLCAgb3IgYXJlIGxpa2VseSB0byBvY2N1ciBhcyBhIHJlc3VsdCBvZiB0ZWNobm9sb2dpY2FsICBkZXZlbG9wbWVudHMsIHBvbGx1dGlvbiBvciBvdGhlciBodW1hbiBpbnRlcmZlcmVuY2UuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Changes in ecological character have occurred, are  occurring or are likely to occur in the wetland as a  result of human interference ",
        "option2" : " The  country  in which  the wetland  is  located  should  enact a law to prohibit any human  activity  within  five  kilometres from the edge of the wetland ",
        "option3" : " The  survival of the wetland depends on  the  cultural  practices  and  traditions  of certain communities living  in its vicinity and therefore the cultural diversity therein  should not be destroyed ",
        "option4" : " It is given the status of 'World Heritage Site' "
      }
    },
    {
      "index" : 66,
      "question" : "With reference to Bombay Natural History Society (BNHS), consider the following statements :  1. It is an autonomous organization under the Ministry of Environment and Forests. 2. It strives to conserve nature through action-based research, education   and  public awareness. 3. It organizes  and  conducts nature trails and camps for the general public. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NjY=",
      "description" : "VGhlIEJvbWJheSBOYXR1cmFsIEhpc3RvcnkgU29jaWV0eSBpcyBvbmUgb2YgdGhlICBsYXJnZXN0IG5vbi1nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9ucyBpbiBJbmRpYSBlbmdhZ2VkICBpbiBjb25zZXJ2YXRpb24gYW5kIGJpb2RpdmVyc2l0eSByZXNlYXJjaC4gSXQgc3RyaXZlcyB0byAgY29uc2VydmUgbmF0dXJlIHRocm91Z2ggYWN0aW9uLWJhc2VkIHJlc2VhcmNoLCBlZHVjYXRpb24gIGFuZCBwdWJsaWMgYXdhcmVuZXNzLiBJdCBvcmdhbml6ZXMgYW5kIGNvbmR1Y3RzIG5hdHVyZSAgdHJhaWxzIGFuZCBjYW1wcyBmb3IgdGhlIGdlbmVyYWwgcHVibGljLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 67,
      "question" : "With reference to 'Global Environment Facility'', which of the following statements is/are correct?  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Njc=",
      "description" : "SXQgaXMgYW4gaW5kZXBlbmRlbnQgZmluYW5jaWFsIG9yZ2FuaXphdGlvbiB3aGljaCAgd29ya3MgIHdpdGggY291bnRyaWVzIG9uIGVudmlyb25tZW50YWwgaXNzdWVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It  serves  as  financial mechanism  for  'Convention on  Biological  Diversity' and 'United  Nations  Framework  Convention  on  Climate Change' ",
        "option2" : "  It undertakes  scientific research  on  environmental  issues at global level ",
        "option3" : " It is an agency under OECD to  facilitate  the  transfer  of technology and  funds  to underdeveloped countries  with specific aim to  protect their environment ",
        "option4" : " Both (a) and (b) "
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following pairs :  1. Dampa Tiger Reserve : Mizoram 2. Gumti Wildlife Sanctuary : Sikkim 3. Saramati Peak : Nagaland E B D _8 34 2 Issues on Environment, Ecology, Biodiversity & Climate Change E 55 Which of the above pairs is/are correctly matched? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Njg=",
      "description" : "RGFtcGEgVGlnZXIgUmVzZXJ2ZSwgdGhlIGxhcmdlc3Qgd2lsZGxpZmUgc2FuY3R1YXJ5IGluICBNaXpvcmFtLiBTYXJhbWF0aSAgcGVhayBpcyBpbiAgTmFnYWxhbmQuIEl0IGlzIGxvY2F0ZWQgbmVhciAgVHVlbnNhbmcgdG93biB3aXRoIGEgaGVpZ2h0IG9mIDMsODI2IG0uIEd1bXRpIFdpbGRsaWZlICBTYW5jdHVhcnkgaXMgZmFtb3VzIHdpbGRsaWZlIHJlc2VydmUgaW4gVHJpcHVyYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 69,
      "question" : "With reference to a conservation organization called 'Wetlands International', which of the following statements is/ are correct?  1. It is  an  intergovernmental organization  formed  by the countries which are signatories to Ramsar Convention. 2. It works  at  the  field  level to develop and mobilize knowledge, and  use the practical  experience  to advocate for better policies. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Njk=",
      "description" : "VGhpcyBvcmdhbml6YXRpb24gaXMgaW4gcGFydG5lcnNoaXAgYnV0IG5vdCBmb3JtZWQgYnkgIFJhbXNhciBjb252ZW50aW9uLiBUaGUgb3JnYW5pemF0aW9uICB3YXMgZm9ybWVkIGluIDE5NTQgIGFuZCBSYW1zYXIgY29udmVudGlvbiB3YXMgc2lnbmVkIGluIDE5NzEuICdXZXRsYW5kcyAgSW50ZXJuYXRpb25hbCcsIEl0IHdvcmtzIGF0IHRoZSBmaWVsZCBsZXZlbCB0byBkZXZlbG9wIGFuZCAgbW9iaWxpemUga25vd2xlZGdlLCBhbmQgdXNlIHRoZSBwcmFjdGljYWwgZXhwZXJpZW5jZSB0byAgYWR2b2NhdGUgZm9yIGJldHRlciBwb2xpY2llcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 70,
      "question" : "Other than poaching, what are the possible  reasons  for the  decline in the population of Ganges River Dolphins?  1. Construction  of dams and barrages on rivers 2. Increase in the population of crocodiles in rivers 3. Getting trapped in fishing nets accidentally 4. Use of synthetic fertilizers and other agricultural chemicals in crop-fields in the vicinity of rivers Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzA=",
      "description" : "VGhlIGNvbnN0cnVjdGlvbiBvZiBkYW1zIGFuZCBiYXJyYWdlcyBvbiByaXZlcnMsICBnZXR0aW5nIHRyYXBwZWQgaW4gZmlzaGluZyBuZXRzIGFjY2lkZW50bHkgYW5kIHVzZSBvZiAgc3ludGhldGljIGZlcnRpbGl6ZXJzIGFuZCBvdGhlciBhZ3JpY3VsdHVyYWwgY2hlbWljYWxzIGluIGNyb3AtICBmaWVsZHMgbmVhciB0aGUgcml2ZXJzIGFyZSB0aGUgcmVhc29ucyBmb3IgdGhlIGRlY2xpbmUgaW4gdGhlICBwb3B1bGF0aW9uIG9mIEdhbmdlcyByaXZlciBEb2xwaGlucy4gIEUgIEIgIEQgIF84ICAzNCAgMiAgSXNzdWVzIG9uIEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZSBFIDY1IA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 71,
      "question" : "Which of the following adds/add carbon dioxide to the carbon cycle on the planet Earth?  1. Volcanic action 2. Respiration 3. Photosynthesis 4. Decay of organic matter Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzE=",
      "description" : "Vm9sY2FuaWMgYWN0aW9uLCBSZXNwaXJhdGlvbiBhbmQgZGVjYXkgb2Ygb3JnYW5pYyAgbWF0dGVyIGFkZHMvYWRkIGNhcmJvbiBkaW94aWRlIHRvIHRoZSBjYXJib24gY3ljbGUgb24gdGhlICBwbGFuZXQgRWFydGguIEhvd2V2ZXIsIHBob3Rvc3ludGhlc2lzIHVzZXMgQ2FyYm9uIGRpb3hpZGUgIHRvIHByb2R1Y2UgZm9vZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 72,
      "question" : "If you walk  through countryside, you are likely to see  some birds stalking alongside the cattle to seize the insects disturbed by their movement through grasses.  Which of the following is/are such bird/birds? 1. Painted Stork 2. Common Myna 3. Black-necked Crane Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzI=",
      "description" : "Q29tbW9uIE15bmEgYXJlICBiaXJkcyBzdGFsa2luZyBhbG9uZ3NpZGUgdGhlIGNhdHRsZSAgdG8gc2VpemUgdGhlIGluc2VjdHMgZGlzdHVyYmVkIGJ5IHRoZWlyIG1vdmVtZW50IHRocm91Z2ggIGdyYXNzZXMuIFRoZSBjb21tb24gbXluYSBpcyByZWFkaWx5IGlkZW50aWZpZWQgYnkgdGhlIGJyb3duICBib2R5LCBibGFjayBob29kZWQgaGVhZCBhbmQgdGhlIGJhcmUgeWVsbG93IHBhdGNoIGJlaGluZCAgdGhlIGV5ZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 73,
      "question" : "With  reference  to  'Eco-Sensitive Zones',  which  of  the following statements is/are correct?  1. Eco-Sensitive Zones  are  the areas that are declared under the  Wildlife  (Protection)  Act, 1972. 2. The purpose of the declaration of Eco-Sensitive Zones is to prohibit all kinds of human activities in those zones except agriculture. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzM=",
      "description" : "RWNvLXNlbnNpdGl2ZSB6b25lcyBhcmUgZWNvbG9naWNhbCBpbXBvcnRhbnQgYXJlYSAgdW5kZXIgZW52aXJvbm1lbnQgcHJvdGVjdGlvbiBBY3QgMTk4NiBhcm91bmQgbmF0aW9uYWwgIHBhcmtzIGFuZCB3aWxkbGlmZSBzYW5jdHVhcmllcyBwcm9oaWJpdGluZyByZXN0aW5nIGNlcnRhaW4gIGh1bWFuIGFjdGl2aXRpZXMgaW4gdGhlIHpvbmUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 74,
      "question" : "Consider the following statements :  1. Animal  Welfare Board  of India is established under the Environment (Protection) Act, 1986. 2. National  Tiger  Conservation Authority is a statutory body. 3. National Ganga  River  Basin Authority is chaired  by the Prime Minister. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzQ=",
      "description" : "VGhlIEFuaW1hbCBXZWxmYXJlIEJvYXJkIG9mIEluZGlhIHdhcyBlc3RhYmxpc2hlZCBpbiAgMTk2MiB1bmRlciBTZWN0aW9uIDQgb2YgVGhlIFByZXZlbnRpb24gb2YgQ3J1ZWx0eSB0byBBbmltYWxzICBBY3QsIDE5NjAuIFRoZSBOYXRpb25hbCBUaWdlciBDb25zZXJ2YXRpb24gQXV0aG9yaXR5IGlzICBzZXQgdXAgdW5kZXIgdGhlIENoYWlybWFuc2hpcCBvZiB0aGUgTWluaXN0ZXIgZm9yICBFbnZpcm9ubWVudCBhbmQgRm9yZXN0cyBhbmQgaXMgYSBzdGF0dXRvcnkgYm9keS4gTmF0aW9uYWwgIEdhbmdhIFJpdmVyIEJhc2luIEF1dGhvcml0eSB3YXMgZXN0YWJsaXNoZWQgYnkgdGhlIENlbnRyYWwgIEdvdmVybm1lbnQgb2YgSW5kaWEsIG9uIDIwIEZlYnJ1YXJ5IDIwMDkuIFRoZSBQcmltZSAgTWluaXN0ZXIgaXMgdGhlIGNoYWlyIG9mIHRoZSBBdXRob3JpdHkuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 75,
      "question" : "Which of the following have coral reefs?  1. Andaman and Nicobar Islands 2. Gulf of Kachchh 3. Gulf of Mannar 4. Sunderbans Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzU=",
      "description" : "Q29yYWwgcmVlZnMgYXJlIGRpdmVyc2UgdW5kZXJ3YXRlciBlY29zeXN0ZW1zIGhlbGQgIHRvZ2V0aGVyIGJ5IGNhbGNpdW0gY2FyYm9uYXRlIHN0cnVjdHVyZXMgc2VjcmV0ZWQgYnkgY29yYWxzLiAgQW5kYW1hbiBhbmQgTmljb2JhciwgR3VsZiBvZiBLYWNoY2hoIGFuZCBHdWxmIG9mIE1hbm5hciAgaGF2ZSBjb3JhbCByZWVmcy4gSG93ZXZlciBTdW5kZXJiYW5zIGRvIG5vdCBoYXZlIGNvcmFsICByZWVmLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 76,
      "question" : "In India, the problem of soil erosion is associated with which of the following?  1. Terrace cultivation 2. Deforestation 3. Tropical climate Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8NzY=",
      "description" : "SW4gSW5kaWEsIHRoZSBwcm9ibGVtIG9mIHNvaWwgZXJvc2lvbiBpcyBhc3NvY2lhdGVkIHdpdGggIGRlZm9yZXN0YXRhaW9uLiBUZXJyYWNlIGN1bHRpdmF0aW9uIGhlbHBzIGluIGxlc3MgZXJvc2lvbiBvZiAgc29pbC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 77,
      "question" : "The most important strategy for the conservation of biodiversity together with traditional human life is the establishment of  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Nzc=",
      "description" : "Qmlvc3BoZXJlIHJlc2VydmVzIGFyZSBlc3RhYmxpc2hlZCB1bmRlciBVTkVTQ08ncyAgTWFuIGFuZCBCaW9zcGhlcmUgKE1BQikgUHJvZ3JhbW1lLiBCaW9zcGhlcmUgUmVzZXJ2ZXMgIENvbWJpbmUgUHJvdGVjdGVkIGFyZWFzIHdpdGggem9uZXMgd2hlcmUgc3VzdGFpbmFibGUgIGRldmVsb3BtZW50IGlzIG51cnR1cmVkIGJ5IG5hdGl2ZSBkd2VsbGVycy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " biosphere reserves ",
        "option2" : " otanical gardens ",
        "option3" : " national parks ",
        "option4" : " willife sanctuaries "
      }
    },
    {
      "index" : 78,
      "question" : "The scientific view is that the increase in global temperature should not exceed 2 °C above pre-industrial level. If the global temperature increases beyond 3 °C above the pre- industrial level, what can be its possible impact/impacts on the world?  1. Terrestrial  biosphere  tends toward a net carbon source. 2. Widespread coral mortality will occur. 3. All the  global wetlands  will permanently disappear. 4. Cultivation  of  cereals  will not be possible anywhere in the world. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Nzg=",
      "description" : "UmlzZSBpbiB0ZW1wZXJhdHVyZSBieSAzwrBDIHRvIHRoYXQgb2YgcHJlLWluZHVzdHJpYWwgIGxldmVsIHdpbGwgbGVkIGFzIHBlciBjaG9pY2UgMSBhbmQgMi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 79,
      "question" : "Lichens,  which  are  capable  of initiating  ecological succession even on a bare rock, are actually a symbiotic association of  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8Nzk=",
      "description" : "SW4gb3JnYW5pc21zIGNhbGxlZCBsaWNoZW5zLCBhIGNobG9yb3BoeSBJSS1jb250YWluaW5nICBwYXJ0bmVyLCB3aGljaCBpcyBhbiBhbGdhLCBhbmQgYSBmdW5ndXMgbGl2ZSB0b2dldGhlci4gRnVuZ3VzICBwcm92aWRlcyBzaGVsdGVyLCB3YXRlciBhbmQgbWluZXJhbHMgdG8gdGhlIGFsZ2EgYW5kLCBpbiAgcmV0dXJuLCB0aGUgYWxnYSBwcm92aWRlcyBmb29kIHdoaWNoIGl0IHByZXBhcmVzIGJ5ICBwaG90b3N5bnRoZXNpcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " algae and bacteria ",
        "option2" : " algae and fungi ",
        "option3" : " bacteria and fungi ",
        "option4" : " fungi an mosses "
      }
    },
    {
      "index" : 80,
      "question" : "Which of the following are some important pollutants released by steel industry in India?  1. Oxides of sulphur 2. Oxides of nitrogen 3. Carbon monoxide 4. Carbon dioxide Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8ODA=",
      "description" : "SW4gc3RlZWwgZnVybmFjZSBjb2tlIHJlYWN0cyB3aXRoIGlyb24gdG8gcmVsZWFzZSAgcG9sbHV0YW50cyBsaWtlIE94aWRlcyBvZiBzdWxwaHVyLCBPeGlkZXMgb2Ygbml0cm9nZW4sIENhcmJvbiAgbW9ub3hpZGUgYW5kIENhcmJvbiBkaW94aWRlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only ",
        "option2" : " 1and 3 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 81,
      "question" : "Every year, a monthlong ecologically important campaign/ festival is held during which certain communities/ tribes plant saplings of fruit-bearing trees. Which of the following are such communities ribes?                                    ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8ODE=",
      "description" : "VGhlIGZlc3RpdmFsIHN0YXJ0cyB3aXRoIHRoZSBncmVlbiBtYXJjaCBjZWxlYnJhdGluZyAgdGhlIGJlZ2lubmluZyBvZiB0aGUgcmFpbnMgYW5kIG5ldyBzb3dpbmcgc2Vhc29uIGR1cmluZyAgd2hpY2ggcGxhbnRpbmcgb2Ygc2FwbGluZyBvZiBmcnVpdCBiZWFyaW5nIHRyZWVzIGlzIGRvbmUgb24gIG1hc3Mgc2NhbGUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  Bhutia and Lepcha ",
        "option2" : "  Gond and Korku ",
        "option3" : "  Irula and Toda ",
        "option4" : "  Sahariya an Agariya "
      }
    },
    {
      "index" : 82,
      "question" : "In India, cluster bean (Guar) is traditionally used as a vegetable or animal feed, but recently the cultivation of this has assumed significance. Which one of the following statements is correct in this context?                        ",
      "questionId" : "WzIwMTQtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDgy",
      "description" : "VGhlIHNlZWRzIG9mIGNsdXN0ZXIgYmVhbiBpcyB0aGUgc291cmNlIG9mIHNoYWxlIGdhcy4gIFRoZSBndW0gbWFkZSBmcm9tIGl0cyBzZWVkcyBpcyB1c2VkIGluIHRoZSBleHRyYWN0aW9uIG9mICBzaGFsZSBnYXMuIEdlbmVyYWxseSB0aGUgY2x1c3RlciBiZWFuIGlzIHVzZWQgYXMgdmVnZXRhYmxlICBvciBhbmltYWwgZmVlZC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The oil extracted from seeds is used in the manufacture  of biodegradable plastics ",
        "option2" : " The gum made from its seeds is used in the extraction  of shale gas ",
        "option3" : " The leaf extract of this plant has the properties of  antihistamines ",
        "option4" : " It is a source of high quality biodiesel "
      }
    },
    {
      "index" : 83,
      "question" : "If you travel through the Himalayas, you are likely to see which of the following plants naturally growing there?  1. Oak            2.  Rhododendron       3.    Sandalwood Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2V8ODM=",
      "description" : "T2FrIGFuZCBSaG9kb2RlbmRyb24gYXJlIGZvdW5kIGluIEhpbWFsYXlhbiB6b25lLiAgV2hpbGUgc2FuZGFsd29vZCBpcyBmb3VuZCBpbiBTb3V0aCBJbmRpYS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxFbnZpcm9ubWVudCwgRWNvbG9neSwgQmlvZGl2ZXJzaXR5ICYgQ2xpbWF0ZSBDaGFuZ2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 84,
      "question" : "Which one of the following National Parks has a climate that varies from tropical to subtropical, temperate and arctic?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg0",
      "description" : "TmFtZGFwaGEgTmF0aW9uYWwgUGFyayBpcyBsb2NhdGVkIGluIEFydW5hY2hhbCAgUHJhZGVzaC4gVGhlIGNsaW1hdGUgb2YgdGhpcyBhcmVhIHZhcmllcyBmcm9tIHRyb3BpY2FsIHRvICBzdWJ0cm9waWNhbCwgdGVtcGVyYXRlIGFuZCBhcmN0aWMuIEl0IGlzIHRyb3BpY2FsIGFuZCAgc3VidHJvcGljYWwgaW4gc291dGhlcm4gcmVnaW9ucyBhbmQgYXJjdGljIHR5cGUgaW4gbm9ydGhlcm4gIHBhcnQgb2YgdGhlIHBhcmsuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Khangchendzonga National Park ",
        "option2" : " Nandadevi National Park ",
        "option3" : " Neora Valley National Park ",
        "option4" : " Namdapha National Park "
      }
    },
    {
      "index" : 85,
      "question" : "'BioCarbon Fund Initiative for Sustainable Forest Landscapes' is managed by the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg1",
      "description" : "SG91c2VkIHdpdGhpbiB0aGUgQ2FyYm9uIEZpbmFuY2UgVW5pdCBvZiB0aGUgV29ybGQgIEJhbmssIHRoZSBCaW9DYXJib24gRnVuZCBpcyBhIHB1YmxpYy1wcml2YXRlIHNlY3RvciBpbml0aWF0aXZlICBtb2JpbGl6aW5nIGZpbmFuY2UgdG8gaGVscCBmb3IgZGV2ZWxvcG1lbnQgb2YgcHJvamVjdHMgdGhhdCAgc2VxdWVzdGVyIG9yIGNvbnNlcnZlIGNhcmJvbiBpbiBmb3Jlc3QgYW5kIGFncm8tICBlY29zeXN0ZW1zLiBJdCB3YXMgY3JlYXRlZCBpbiAyMDA0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Asian Development Bank ",
        "option2" : " International Monetary Fund ",
        "option3" : " United Nations Environment Programme ",
        "option4" : " World Bank "
      }
    },
    {
      "index" : 86,
      "question" : "With reference to 'Forest Carbon Partnership Facility', which of the following statements is/ are correct?  1. It is a global partnership of governments, businesses, civil society and indigenous peoples. 2. It provides financial aid to universities, individual scientists and institutions involved in scientific forestry research to develop eco-friendly and climate adaptation technologies for sustainable forest management. 3. It assists the countries in their 'REDD+ (Reducing Emissions from Deforestation and Forest Degradation+)' efforts by providing them with financial and technical assistance. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg2",
      "description" : "VGhlIEZvcmVzdCBDYXJib24gUGFydG5lcnNoaXAgRmFjaWxpdHkgaXMgYSBnbG9iYWwgIHBhcnRuZXJzaGlwIG9mIGdvdmVybm1lbnRzLCBidXNpbmVzc2VzLCBjaXZpbCBzb2NpZXR5LCBhbmQgIEluZGlnZW5vdXMgUGVvcGxlcyBmb2N1c2VkIG9uIHJlZHVjaW5nIGVtaXNzaW9ucyBmcm9tICBkZWZvcmVzdGF0aW9uIGFuZCBmb3Jlc3QgZGVncmFkYXRpb24sIGZvcmVzdCBjYXJib24gc3RvY2sgIGNvbnNlcnZhdGlvbiwgdGhlIHN1c3RhaW5hYmxlIG1hbmFnZW1lbnQgb2YgZm9yZXN0cywgYW5kICB0aGUgZW5oYW5jZW1lbnQgb2YgZm9yZXN0IGNhcmJvbiBzdG9ja3MgaW4gZGV2ZWxvcGluZyAgY291bnRyaWVzIChhY3Rpdml0aWVzIGNvbW1vbmx5IHJlZmVycmVkIHRvIGFzIFJFREQrKS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 87,
      "question" : "With reference to an organization known as 'Birdlife International', which of the following statements is/are correct?  1. It is a Global Partnership of Conservation Organizations. 2. The concept of 'biodiversity hotspots' originated from this organization. 3. It identifies the sites known/referred to as 'Important Bird and Biodiversity Areas'. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg3",
      "description" : "QmlyZExpZmUgaW50ZXJuYXRpb25hbCBpcyBhIGdsb2JhbCBwYXJ0bmVyc2hpcCBvZiAgY29uc2VydmF0aW9uIG9yZ2FuaXNhdGlvbnMgdGhhdCBzdHJpdmVzIHRvIGNvbnNlcnZlIGJpcmRzLCAgdGhlaXIgaGFiaXRhdHMgYW5kIGdsb2JhbCBiaW9kaXZlcnNpdHkuIEl0IGlzIHdvcmtpbmcgd2l0aCAgcGVvcGxlIHRvd2FyZHMgc3VzdGFpbmFiaWxpdHkgaW4gdGhlIHVzZSBvZiBuYXR1cmFsICByZXNvdXJjZXMuIEl0IGlzIHRoZSBXb3JsZCdzIGxhcmdlc3QgcGFydG5lcnNoaXAgb2YgIGNvbnNlcnZhdGlvbiBvcmdhbmlzYXRpb25zLCB3aXRoIG92ZXIgMTIwIHBhcnRuZXIgIG9yZ2FuaXphdGlvbnMuIEFuIEltcG9ydGFudCBCaXJkIGFuZCBCaW9kaXZlcnNpdHkgQXJlYSAgKElCQSkgaXMgYW4gYXJlYSByZWNvZ25pemVkIGFzIGJlaW5nIGdsb2JhbGx5IGltcG9ydGFudCAgaGFiaXRhdCBmb3IgdGhlIGNvbnNlcnZhdGlvbiBvZiBiaXJkIHBvcHVsYXRpb25zLiBUaGUgIHByb2dyYW0gd2FzIGRldmVsb3BlZCBhbmQgc2l0ZXMgYXJlIGlkZW50aWZpZWQgYnkgQmlyZExpZmUgIEludGVybmF0aW9uYWwuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 88,
      "question" : "In India, in which one of the following types of forests is teak a dominant tree species?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg4",
      "description" : "VGhlIHRyb3BpY2FsIG1vaXN0IGRlY2lkdW91cyBmb3Jlc3RzIGFyZSBmb3VuZCBpbiAgU2FoeWFkcmlzLCB0aGUgbm9ydGgtZWFzdGVybiBwYXJ0cyBvZiB0aGUgcGVuaW5zdWxhIGFuZCBhbG9uZyAgdGhlIGZvb3RoaWxscyBvZiB0aGUgSGltYWxheWFzLiBUZWFrIGFuZCBzYWwgYXJlIGZvdW5kIGluICB0aGVzZSBmb3Jlc3RzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Tropical moist deciduous forest ",
        "option2" : " Tropical rain forest ",
        "option3" : " Tropical thorn scrub forest ",
        "option4" : " Temperate forest with grasslands "
      }
    },
    {
      "index" : 89,
      "question" : "Which one of the following is the best description of the term 'ecosystem'?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDg5",
      "description" : "QW4gZWNvc3lzdGVtIGluY2x1ZGVzIGFsbCBvZiB0aGUgbGl2aW5nIHRoaW5ncyAocGxhbnRzLCAgYW5pbWFscyBhbmQgb3JnYW5pc21zKSBpbiBhIGdpdmVuIGFyZWEsIGludGVyYWN0aW5nIHdpdGggIGVhY2ggb3RoZXIsIGFuZCBhbHNvIHdpdGggdGhlaXIgbm9uLWxpdmluZyBlbnZpcm9ubWVudHMgICh3ZWF0aGVyLCBlYXJ0aCwgc3VuLCBzb2lsLCBjbGltYXRlLCBhdG1vc3BoZXJlKS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " A community of organisms interacting with one  another. ",
        "option2" : " That part of the Earth which is inhabited by living  organisms. ",
        "option3" : " A community of organisms together with the  environment in which they live ",
        "option4" : " The flora and fauna of a geographical area "
      }
    },
    {
      "index" : 90,
      "question" : "Which of the following National Parks is unique in being a swamp with floating vegetation that supports a rich biodiversity?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDkw",
      "description" : "VGhlIEtlaWJ1bCBMYW1qYW8gTmF0aW9uYWwgUGFyayBpcyBhIG5hdGlvbmFsIHBhcmsgIGxvY2F0ZWQgaW4gTWFuaXB1ci4gSXQgaXMgNDAga20gaW4gYXJlYSBhbmQgdGhlIG9ubHkgZmxvYXRpbmcgIHBhcmsgaW4gdGhlIHdvcmxkIHdoaWNoIGlzIGxvY2F0ZWQgaW4gTm9ydGggRWFzdCBJbmRpYSwgYW5kICBhbiBpbnRlZ3JhbCBwYXJ0IG9mIExva3RhayBMYWtlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Bhitarkanika National Park ",
        "option2" : " Keibul Lamjao National Park ",
        "option3" : " Keoladeo Ghana National Park ",
        "option4" : " Sultanpur National Park "
      }
    },
    {
      "index" : 91,
      "question" : "With reference to the International Union for Conservation of Nature and Natural Resources (IUCN) and the Convention on International Trade in Endangered Species of Wild Fauna and Flora (CITES), which of the following statements is/are correct?                                          1. IUCN is an organ of the United Nations and CITES is an international agreement between governments. 2. IUCN runs thousands of field projects around the world to better manage natural environments. 3. CITES is legally binding on the States that have joined it, but this Convention does not take the place of national laws. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDkx",
      "description" : "SVVDTiBpcyBub3QgYW4gb3JnYW4gb2YgVU4uIEl0IGhhcyBvYnNlcnZlciBhbmQgIGNvbnN1bHRhdGl2ZSBzdGF0dXMgYXQgdGhlIFVuaXRlZCBOYXRpb25zLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 92,
      "question" : "With reference to 'dugong', a mammal found in India, which of the following statements is/are correct?  1. It is a herbivorous marine animal. 2. It is found along the entire coast of India. 3. It is given legal protection under Schedule I of the Wildlife (Protection) Act, 1972. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDky",
      "description" : "VGhlIGR1Z29uZyBpcyBhIG1lZGl1bS1zaXplZCBtYXJpbmUgbWFtbWFsLiBEdWdvbmcgIGlzIGxpc3RlZCB1bmRlciBzY2hlZHVsZSAxIG9mIEluZGlhIFdpbGRsaWZlIFByb3RlY3Rpb24gQWN0LCAgMTk3Mi4gSW4gMjAwOCwgYSBNb1Ugd2FzIHNpZ25lZCBiZXR3ZWVuIHRoZSBNaW5pc3RyeSBvZiAgRW52aXJvbm1lbnQgYW5kIEZvcmVzdHMgYW5kIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhLCBpbiAgb3JkZXIgdG8gY29uc2VydmUgZHVnb25ncy4gSW4gZmFjdCB0aGUgaGlnaGVzdCBsZXZlbCBvZiBsZWdhbCAgcHJvdGVjdGlvbiBpcyBhY2NvcmRlZCB0byBkdWdvbmdzIGluIEluZGlhLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 93,
      "question" : "Which one of the following is the national aquatic animal of India?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDkz",
      "description" : "VGhlIEdhbmdldGljIGRvbHBoaW5zIGhhdmUgYmVlbiBkZWNsYXJlZCBhcyB0aGUgIE5hdGlvbmFsIEFxdWF0aWMgQW5pbWFsIG9mIEluZGlhIC5SaXZlciBEb2xwaGluIGlzIHRoZSAgTmF0aW9uYWwgQXF1YXRpYyBBbmltYWwgb2YgSW5kaWEuIFRoZSBNaW5pc3RyeSBvZiAgRW52aXJvbm1lbnQgYW5kIEZvcmVzdHMgbm90aWZpZWQgIHRoZSBHYW5nZXMgUml2ZXIgRG9scGhpbiAgYXMgdGhlIE5hdGlvbmFsIEFxdWF0aWMgQW5pbWFsIG9uIDE4dGggTWF5IDIwMTAuIFRoaXMgIG1hbW1hbCBpcyBhbHNvIHNhaWQgdG8gcmVwcmVzZW50IHRoZSBwdXJpdHkgb2YgdGhlIGhvbHkgR2FuZ2EgIGFzIGl0IGNhbiBvbmx5IHN1cnZpdmUgaW4gcHVyZSBhbmQgZnJlc2ggd2F0ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Saltwater crocodile ",
        "option2" : " Olive ridley turtle ",
        "option3" : " Gangetic dolphin ",
        "option4" : " Gharial "
      }
    },
    {
      "index" : 94,
      "question" : "Which one of the following is associated with the issue of control and phasing out of the use of ozone-depleting substances?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk0",
      "description" : "VGhlIE1vbnRyZWFsIFByb3RvY29sIGlzIGFuIGludGVybmF0aW9uYWwgdHJlYXR5ICBkZXNpZ25lZCB0byBwcm90ZWN0IHRoZSBvem9uZSBsYXllciBieSBwaGFzaW5nIG91dCB0aGUgIHByb2R1Y3Rpb24gb2YgbnVtZXJvdXMgc3Vic3RhbmNlcyB0aGF0IGFyZSByZXNwb25zaWJsZSAgZm9yIG96b25lIGRlcGxldGlvbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Bretton Woods Conference ",
        "option2" : " Montreal Protocol ",
        "option3" : " Kyoto Protocol ",
        "option4" : " Nagoya Protocol "
      }
    },
    {
      "index" : 95,
      "question" : "What is Rio+20 Conference, often mentioned in the news?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk1",
      "description" : "VGhlIFVuaXRlZCBOYXRpb25zIENvbmZlcmVuY2Ugb24gRW52aXJvbm1lbnQgYW5kICBEZXZlbG9wbWVudCAoVU5DRUQpLCBhbHNvIGtub3duIGFzIHRoZSBSaW8gU3VtbWl0IG9yICBFYXJ0aCBTdW1taXQuIEl0IHdhcyBhIG1ham9yIFVuaXRlZCBOYXRpb25zIGNvbmZlcmVuY2UgIGhlbGQgaW4gUmlvIGRlIEphbmVpcm8gZnJvbSAzIHRvIDE0IEp1bmUgMTk5Mi4gSW4gMjAxMiwgdGhlICBVbml0ZWQgTmF0aW9ucyBDb25mZXJlbmNlIG9uIFN1c3RhaW5hYmxlIERldmVsb3BtZW50ICB3YXMgYWxzbyBoZWxkIGluIFJpbywgYW5kIGlzIGFsc28gY29tbW9ubHkgY2FsbGVkIFJpbysyMCBvciAgUmlvIEVhcnRoIFN1bW1pdCAyMDEyLiAgIEUgNjYg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is the United Nations Conference on Sustainable  Development ",
        "option2" : " It is a Ministerial Meeting of the World Trade Organization ",
        "option3" : " It is a Conference of the Inter-governmental Panel on  Climate Change ",
        "option4" : " It is a Conference of the Member Countries of the "
      }
    },
    {
      "index" : 96,
      "question" : "Which of the following statements regarding 'Green Climate Fund' is/are correct?  1. It is intended to assist the developing countries in adaptation and mitigation practices to counter climate change. 2. It is founded under the aegis of UNEP, OECD, Asian Development Bank and World Bank. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk2",
      "description" : "VGhlIEdyZWVuIENsaW1hdGUgRnVuZCAoR0NGKSBpcyBhIGZ1bmQgd2l0aGluIHRoZSAgZnJhbWV3b3JrIG9mIHRoZSBVTkZDQ0MgZm91bmRlZCBhcyBhIG1lY2hhbmlzbSB0byAgcmVkaXN0cmlidXRlIG1vbmV5IGZyb20gdGhlIGRldmVsb3BlZCB0byB0aGUgZGV2ZWxvcGluZyAgd29ybGQsIGluIG9yZGVyIHRvIGFzc2lzdCB0aGUgZGV2ZWxvcGluZyBjb3VudHJpZXMgaW4gIGFkYXB0YXRpb24gYW5kIG1pdGlnYXRpb24gcHJhY3RpY2VzIHRvIGNvdW50ZXIgY2xpbWF0ZSAgY2hhbmdlLiBUaGUgRnVuZCBpcyBnb3Zlcm5lZCBieSB0aGUgR0NGIEJvYXJkLiBUaGUgYXNzZXRzICBvZiB0aGUgR0NGIHdpbGwgYmUgYWRtaW5pc3RlcmVkIGJ5IGEgdHJ1c3RlZSBvbmx5IGZvciB0aGUgIHB1cnBvc2Ugb2YsIGFuZCBpbiBhY2NvcmRhbmNlIHdpdGgsIHRoZSByZWxldmFudCBkZWNpc2lvbnMgIG9mIHRoZSBHQ0YgQm9hcmQuIFRoZSBXb3JsZCBCYW5rIHdhcyBpbnZpdGVkIGJ5IHRoZSBDT1AgIHRvIHNlcnZlIGFzIHRoZSBpbnRlcmltIHRydXN0ZWUgb2YgdGhlIEdDRiwgc3ViamVjdCB0byBhIHJldmlldyAgdGhyZWUgeWVhcnMgYWZ0ZXIgb3BlcmF0aW9uIG9mIHRoZSBGdW5kLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 97,
      "question" : "With reference to bio-toilets used by the Indian Railways, consider the following  statements:  1. The decomposition of human waste in the bio-toilets is initiated by a fungal inoculum. 2. Ammonia and water vapour are the only end products in this decomposition which are released into the atmosphere. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk3",
      "description" : "VGhlIGJpby10b2lsZXRzIGFyZSBmaXR0ZWQgdW5kZXJuZWF0aCB0aGUgbGF2YXRvcmllcyBhbmQgIHRoZSBodW1hbiB3YXN0ZSBkaXNjaGFyZ2VkIGludG8gdGhlbSBpcyBhY3RlZCB1cG9uIGJ5IGEgIHBhcnRpY3VsYXIga2luZCBvZiBiYWN0ZXJpYSB0aGF0IGNvbnZlcnRzIGl0IGludG8gQ08yLCBDSDQgIGFuZCBub24tY29ycm9zaXZlIG5ldXRyYWwgd2F0ZXIuIFRoZSBuZXctYWdlIGdyZWVuIHRvaWxldHMgIGhhdmUgYmVlbiBkZXNpZ25lZCBieSBSYWlsd2F5cyBhbG9uZyB3aXRoIERlZmVuY2UgIFJlc2VhcmNoIGFuZCBEZXZlbG9wbWVudCBPcmdhbmlzYXRpb24gKERSRE8pIGtlZXBpbmcgIGluIG1pbmQgdGhlIHJlcXVpcmVtZW50cyBvZiBJbmRpYW4gdHJhaW5zLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 98,
      "question" : "Consider the following pairs :  Terms sometimes seen in the news Their origin 1. Annex-I Countries Cartagena Protocol 2. Certified Emissions Reductions Nagoya Protocol 3. Clean Development Mechanism Kyoto Protocol Which of the pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk4",
      "description" : "KGkpICBUaGUgS3lvdG8gUHJvdG9jb2wgc2VwYXJhdGVzIGNvdW50cmllcyBpbnRvIHR3byAgZ3JvdXBzLiBBbm5leCBJIGluY2x1ZGVzIGRldmVsb3BlZCBuYXRpb25zLCB3aGlsZSBOb24tICBBbm5leCBJIHJlZmVycyB0byBkZXZlbG9waW5nIGNvdW50cmllcy4gIEEgQ0VSIGlzIGEgY2VydGlmaWNhdGUgd2hpY2ggaXMgaXNzdWVkIGV2ZXJ5IHRpbWUgdGhlICBVbml0ZWQgIE5hdGlvbnMgIHByZXZlbnRzICBvbmUgIHRvbm5lICBvZiAgQ08yIGVxdWl2YWxlbnQgIGJlaW5nIGVtaXR0ZWQgdGhyb3VnaCBjYXJib24gcHJvamVjdHMgcmVnaXN0ZXJlZCB3aXRoIHRoZSAgQ2xlYW4gRGV2ZWxvcG1lbnQgTWVjaGFuaXNtIChDRE0pLiAgIChpaSkgQWxsIHRocmVlIHRlcm1zIGFyZSBhc3NvY2lhdGVkIHdpdGggS3lvdG8gUHJvdG9jb2wuICBUaGVyZWZvcmUsIGFuc3dlciAnYycgMyBvbmx5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 99,
      "question" : "With reference to an initiative called 'The Economics of Ecosystems and Biodiversity (TEEB)', which of the following statements is/are correct?  1. It is an initiative hosted by UNEP, IMF and World Economic Forum. 2. It is a global initiative that focuses on drawing attention to the economic benefits of biodiversity. 3. It presents an approach that can help decision-makers recognize, demonstrate and capture the value of ecosystems and biodiversity. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDk5",
      "description" : "KGkpIFRoZSBFY29ub21pY3Mgb2YgRWNvc3lzdGVtcyBhbmQgIEJpb2RpdmVyc2l0eSAoVEVFQikgaXMgYSBzdHVkeSBsZWQgYnkgUGF2YW4gU3VraGRldi4gSXQgaXMgIGFuIGludGVybmF0aW9uYWwgaW5pdGlhdGl2ZSB0byBkcmF3IGF0dGVudGlvbiB0byB0aGUgZ2xvYmFsICBlY29ub21pYyBiZW5lZml0cyBvZiBiaW9kaXZlcnNpdHkuIEl0cyBvYmplY3RpdmUgaXMgdG8gIGhpZ2hsaWdodCB0aGUgZ3Jvd2luZyBjb3N0IG9mIGJpb2RpdmVyc2l0eSBsb3NzIGFuZCAgZWNvc3lzdGVtIGFuZCB0byBkcmF3IHRvZ2V0aGVyIGV4cGVydGlzZSBmcm9tIHRoZSBmaWVsZHMgb2YgIHNjaWVuY2UsIGVjb25vbWljcyBhbmQgcG9saWN5IHRvIGVuYWJsZSBwcmFjdGljYWwgIGFjdGlvbnMuICAoaWkpIEFzIHBlciB0aGUgb2ZmaWNpYWwgcGFnZSBvZiB0aGUgb3JnYW5pemF0aW9uLiAyIGFuZCAzICBhcmUgY29ycmVjdCwgYnV0IHRoZXJlIGlzIG5vIG1lbnRpb24gb2YgdGhlaXIgYXNzb2NpYXRpb24gIHdpdGggIFVORVAsICBJTUYuICBIZW5jZSAgMXN0IHN0YXRlbWVudCBpcyB3cm9uZy4gIEFjY29yZGluZ2x5IGFuc3dlciBpcyAnYycg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 100,
      "question" : "Which of the following statements is/are correct?   Proper design and effective implementation of UN-REDD+ Programme can significantly contribute to 1. protection of biodiversity 2. resilience of forest ecosystems 3. poverty reduction Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwMA==",
      "description" : "QXMgcGVyIHRoZSBvZmZpY2lhbCB3ZWJwYWdlIG9mIFVOLVJFREQrIHByb2dyYW0gIHRoZWlyIGV4cGxpY2l0IG9iamVjdGl2ZXMgYXJlIG9ubHkgMSBhbmQgMi4gV2hpbGUgUkVERCsrICBjYW4gaGVscCByZW1vdmluZyB0aGUgcG92ZXJ0eSwgaW4gYW4gaW5kaXJlY3QgbWFubmVyLCBidXQgIGl0J3Mgbm90IGV4cGxpY2l0bHkgbWVudGlvbmVkIGluIHRoZWlyIG9iamVjdGl2ZXMuIFNvLCBhZnRlciAgdGhlIGV4YW0sIGV4cGVydHMgd2VyZSBkaXZpZGVkIGJldHdlZW4gQSBhbmQgRCwgQnV0LCBpbiBpdHMgIG9mZmljaWFsIEFuc3dlcmtleSwgVVBTQyBoYXMga2VwdCAnRCcgYXMgdGhlIGFuc3dlci4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 101,
      "question" : "What is 'Greenhouse Gas Protocol'?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwMQ==",
      "description" : "KGkpICBUaGUgR3JlZW5ob3VzZSBHYXMgUHJvdG9jb2wgKEdIRyBQcm90b2NvbCkgaXMgIHRoZSBtb3N0IHdpZGVseSB1c2VkIGludGVybmF0aW9uYWwgYWNjb3VudGluZyB0b29sIGZvciAgZ292ZXJubWVudCBhbmQgYnVzaW5lc3MgbGVhZGVycyB0byB1bmRlcnN0YW5kLCBxdWFudGlmeSwgIGFuZCBtYW5hZ2UgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zLiBBIGRlY2FkZS1sb25nICBwYXJ0bmVyc2hpcCBiZXR3ZWVuIHRoZSBXb3JsZCBSZXNvdXJjZXMgSW5zdGl0dXRlIChXUkkpICBhbmQgdGhlIFdvcmxkIEJ1c2luZXNzIENvdW5jaWwgZm9yIFN1c3RhaW5hYmxlICBEZXZlbG9wbWVudCAoV0JDU0QpLCB0aGUgR0hHIFByb3RvY29sIGlzIHdvcmtpbmcgd2l0aCAgYnVzaW5lc3NlcywgZ292ZXJubWVudHMsIGFuZCAgKGlpKSBBIGlzIGNvcnJlY3QgYWNjb3JkaW5nIHRvIHRoZWlyICJBQk9VVCBVUyIgcGFnZSAgUmVmICA6IGh0dHA6Ly93d3cuZ2hncHJvdG9jb2wub3JnL2Fib3V0LWdoZ3Ag",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is an international accounting tool for government  and business leaders to understand, quantify and  manage greenhouse gas emissions ",
        "option2" : " It is an initiative of the United Nations to offer  financial incentives to developing countries to reduce  greenhouse gas emissions and to adopt eco-friendly  technologies ",
        "option3" : " It is an inter-governmental agreement ratified by all  the member countries of the United Nations to reduce  greenhouse gas emissions to specified levels by the  year 2022 ",
        "option4" : " It is one of the multilateral REDD+ initiatives hosted "
      }
    },
    {
      "index" : 102,
      "question" : "With reference to 'Agenda 21', sometimes seen in the news, consider the following statements :  1. It is a global action plan for sustainable development 2. It originated in the World Summit on Sustainable Development held in Johannesburg in 2002. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwMg==",
      "description" : "QWdlbmRhIDIxIGlzIGEgbm9uLWJpbmRpbmcsIHZvbHVudGFyaWx5IGltcGxlbWVudGVkICBhY3Rpb24gcGxhbiBvZiB0aGUgVW5pdGVkIE5hdGlvbnMgd2l0aCByZWdhcmRzIHRvICBzdXN0YWluYWJsZSBkZXZlbG9wbWVudC4gSXQgaXMgYSBwcm9kdWN0IG9mIHRoZSBFYXJ0aCAgU3VtbWl0IGhlbGQgaW4gUmlvIGRlIEphbmVpcm8sIEJyYXppbCwgaW4gMTk5Mi4gVGhlcmVmb3JlLCAgb25seSBmaXJzdCBzdGF0ZW1lbnQgcmlnaHQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 103,
      "question" : "Consider the following statements:  (1) The International Solar Alliance was launched at the United Nations Climate Change Conference in 2015. (2) The Alliance includes all the member countries of the United Nations. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwMw==",
      "description" : "IChpKSBUaGUgQ09QLTIxIENsaW1hdGUgQ29uZmVyZW5jZSB3YXMgaGVsZCBpbiBQYXJpcywgIEZyYW5jZSBmcm9tIDMwIE5vdmVtYmVyIHRvIDEyIERlY2VtYmVyIDIwMTUuIER1cmluZyB0aGlzICBjb25mZXJlbmNlLCBJbmRpYSBhbmQgRnJhbmNlIGhhdmUgbGF1bmNoZWQgdGhlICBJbnRlcm5hdGlvbmFsIFNvbGFyIEFsbGlhbmNlIChJU0EpLiBJbnRlcm5hdGlvbmFsIFNvbGFyICBBbGxpYW5jZSBpbmNsdWRlcyBhbiBhbGxpYW5jZSBvZiAxMjEgY291bnRyaWVzIGxvY2F0ZWQgIGJldHdlZW4gVHJvcGljIG9mIENhbmNlciBhbmQgVHJvcGljIG9mIENhcHJpY29ybi4gIChpaSkgV2hpbGUgSVNBIHdhcyBsYXVuY2hlZCBvbiBTaWRlbGluZXMgb2YgUGFyaXMgU3VtbWl0LCAgdGhlcmVmb3JlIGZpcnN0IHN0YXRlbWVudCByaWdodCBidXQgaXQgaW5jbHVkZXMgb25seSB0aGUgMTIxICBjb3VudHJpZXMgYmV0d2VlbiBDYXByaWNvcm4gYW5kIENhbmNlciByZWNlaXZpbmcgc3VubGlnaHQgIGZvciAzMDAgZGF5cyBvciBtb3JlLiBIZW5jZSAybmQgc3RhdGVtZW50IGlzIHdyb25nLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 104,
      "question" : "With reference to the Agreement at the UNFCCC Meeting in Paris in 2015, which of the following statements is/are correct?  1. The Agreement was signed by all the member countries of the UN and it will go into effect in 2017. 2. The Agreement aims to limit the greenhouse gas emissions so that the rise in average global temperature by the end of this century does not exceed 2 °C or even 1.5 °C above pre-industrial levels. 3. Developed countries acknowledged their historical responsibility in global warming and committed to donate $ 1000 billion a year from 2020 to help developing countries to cope with climate change. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwNA==",
      "description" : "IChpKSAgIFRoZSBhZ3JlZW1lbnQgZW1waGFzaXplZCBvbiB1cmdlbnQgbmVlZCB0byBhZGRyZXNzICB0aGUgc2lnbmlmaWNhbnQgZ2FwIGJldHdlZW4gdGhlIGFnZ3JlZ2F0ZSBlZmZlY3Qgb2YgUGFydGllcycgIG1pdGlnYXRpb24gcGxlZGdlcyBpbiB0ZXJtcyBvZiBnbG9iYWwgYW5udWFsIGVtaXNzaW9ucyBvZiAgZ3JlZW5ob3VzZSBnYXNlcyBieSAyMDIwIGFuZCBhZ2dyZWdhdGUgZW1pc3Npb24gIHBhdGh3YXlzIGNvbnNpc3RlbnQgd2l0aCBob2xkaW5nIHRoZSBpbmNyZWFzZSBpbiB0aGUgIGdsb2JhbCBhdmVyYWdlIHRlbXBlcmF0dXJlIHRvIHdlbGwgYmVsb3cgMsKwQyBhYm92ZSAgcHJlaW5kdXN0cmlhbCBsZXZlbHMgYW5kIHB1cnN1aW5nIGVmZm9ydHMgdG8gbGltaXQgdGhlICB0ZW1wZXJhdHVyZSBpbmNyZWFzZSB0byAxLjXCsEMgYWJvdmUgcHJlaW5kdXN0cmlhbCBsZXZlbHMuICAoaWkpIFBhcmlzIFN1bW1pdCAtIG5vdCBhbGwgbmF0aW9ucyBoYXZlIHNpZ25lZCB0aGUgIGFncmVlbWVudCBhbmQgdGhlcmUgaXMgbm8gZGVhZGxpbmUgdG8gcmF0aWZ5IGl0LiBoZW5jZSwgIHN0YXRlbWVudCAxIGlzIHdyb25nLiBUaGlzIGVsaW1pbmF0ZXMgYSBhbmQgYi4gQW5kICBkZXZlbG9wZWQgY291bnRyaWVzIGNvbW1pdHRlZCB0byBnaXZlICQxMDAgYmlsbGlvbiBieSAgMjAyMC4gQnV0LCBmb3IgZnV0dXJlLCB0aGVyZSBpcyBubyBtZW50aW9uIG9mIGdpdmluZyAkMSwwMDAgIGJpbGxpb24gZG9sbGFycy4gVGhlcmVmb3JlLCB0aGlyZCBzdGF0ZW1lbnQgd3JvbmcuIFdlIGFyZSBsZWZ0ICB3aXRoIEFuc3dlciAoYikgb25seS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 105,
      "question" : "Consider the following statements:  1. The Sustainable Development Goals were first proposed in 1972 by a global think tank called the 'Club of Rome'. 2. The Sustainable Development Goals have to be achieved by 2030. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwNQ==",
      "description" : "QXQgdGhlIFVuaXRlZCBOYXRpb25zIFN1c3RhaW5hYmxlIERldmVsb3BtZW50ICBTdW1taXQgb24gMjUgU2VwdGVtYmVyIDIwMTUsIHdvcmxkIGxlYWRlcnMgYWRvcHRlZCB0aGUgIDIwMzAgQWdlbmRhIGZvciBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCwgd2hpY2ggaW5jbHVkZXMgIGEgc2V0IG9mIDE3IFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzIChTREdzKSB0byBlbmQgIHBvdmVydHksIGZpZ2h0IGluZXF1YWxpdHkgYW5kIGluanVzdGljZSwgYW5kIHRhY2tsZSBjbGltYXRlICBjaGFuZ2UgYnkgMjAzMC4gVGhlIGhpc3Rvcnkgb2YgdGhlIFNER3MgY2FuIGJlIHRyYWNlZCB0byAgMTk3MiB3aGVuIGdvdmVybm1lbnRzIG1ldCB1bmRlciB0aGUgYXVzcGljZXMgb2YgdGhlICBVbml0ZWQgTmF0aW9ucyBIdW1hbiBhbmQgRW52aXJvbm1lbnQgQ29uZmVyZW5jZS4gVGhlICAnQ2x1YiBvZiBSb21lJyBpcyBhIGdsb2JhbCB0aGluayB0YW5rIHRoYXQgZGVhbHMgd2l0aCBhIHJhbmdlICBvZiBpbnRlcm5hdGlvbmFsIHBvbGl0aWNhbCBpc3N1ZXMuICBSZWY6IFVORFAgJiBUaGUgSGluZHUgIGh0dHA6Ly93d3cudW5kcC5vcmcvY29udGVudC91bmRwL2VuL2hvbWUvLi4uL3Bvc3QtICAyMDE1LWRldmVsb3BtZW50LWFnZW5kYS5odG1sIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 106,
      "question" : "The term 'Intended Nationally Determined Contributions' is sometimes seen in the news in the context of  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwNg==",
      "description" : "IChpKSBDb3VudHJpZXMgYWNyb3NzIHRoZSBnbG9iZSBjb21taXR0ZWQgdG8gY3JlYXRlIGEgbmV3ICBpbnRlcm5hdGlvbmFsIGNsaW1hdGUgYWdyZWVtZW50IGJ5IHRoZSBjb25jbHVzaW9uIG9mIHRoZSAgVS5OLiBGcmFtZXdvcmsgQ29udmVudGlvbiBvbiBDbGltYXRlIENoYW5nZSAoVU5GQ0NDKSAgQ29uZmVyZW5jZSBvZiB0aGUgUGFydGllcyAoQ09QMjEpIGluIFBhcmlzIGluIERlY2VtYmVyIDIwMTUuICAoaWkpIElOREMgYXJlIGFzc29jaWF0ZWQgd2l0aCBVTkZDQ0MtQ2xpbWF0ZSBjaGFuZ2UuICBIZW5jZSBiKSBpcyB0aGUgYXB0IGNob2ljZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " pledges made by the European countries to  rehabilitate refugees from the war-affected Middle East ",
        "option2" : " plan of action outlined by the countries of the world to  combat climate change ",
        "option3" : " capital contributed by the member countries in the  establishment of Asian Infrastructure Investment Bank ",
        "option4" : " plan of action outlined by the countries of the world "
      }
    },
    {
      "index" : 107,
      "question" : "What is/are the importance/importances of the 'United Nations Convention to Combat Desertification'?  1. It aims to promote effective action through innovative national programs and supportive inter-national partnerships. 2. It has a special/particular focus on South Asia and North Africa regions, and its Secretariat facilitates the allocation of major portion of financial resources to these regions. 3. It is committed to bottom-up approach, encouraging the participation of local people in combating the desertification. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwNw==",
      "description" : "IChpKSBVbml0ZWQgTmF0aW9ucyBDb252ZW50aW9uIHRvIENvbWJhdCBEZXNlcnRpZmljYXRpb24gIChVTkNDRCkgYWltcyB0byBwcm9tb3RlIGVmZmVjdGl2ZSBhY3Rpb24gdGhyb3VnaCBpbm5vdmF0aXZlICBuYXRpb25hbCBwcm9ncmFtbWVzIGFuZCBzdXBwb3J0aXZlIGludGVybmF0aW9uYWwgIHBhcnRuZXJzaGlwcy4gIFVOQ0NEIGlzIGNvbW1pdHRlZCB0byBhIGJvdHRvbS11cCAgYXBwcm9hY2gsIGVuY291cmFnaW5nIHRoZSBwYXJ0aWNpcGF0aW9uIG9mIGxvY2FsIHBlb3BsZSBpbiAgY29tYmF0aW5nIGRlc2VydGlmaWNhdGlvbi4gIChpaSkgQXMgIHBlciAgIG9mICB0aGUgIGNvbnZlbnRpb24sICBTdGF0ZW1lbnQgIDMgIGlzICByaWdodC4gIEJ1dCAgVU5DQ0NEIGZvY3VzZXMgb24gQWZyaWNhLCBBc2lhLCBMYXRpbiBBbWVyaWNhIGFuZCB0aGUgIENhcmliYmVhbiwgTm9ydGhlcm4gTWVkaXRlcnJhbmVhbiBhbmQgQ2VudHJhbCBhbmQgRWFzdGVybiAgRXVyb3BlLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyB3cm9uZy4gVGhlcmVmb3JlLCBhbnN3ZXIgKGMpLiAgUmVmOmh0dHA6Ly93d3cudW5jY2QuaW50L2VuL3JlZ2lvbmFsLWFjY2Vzcy9QYWdlcy8gIGRlZmF1bHQuYXNweC8gIEUgIEIgIEQgIF84ICAzNCAgMiAgSXNzdWVzIG9uIEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZSBFIDY3IA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 108,
      "question" : "Which of the following best describes/ describe the aim of 'Green India Mission' of the Government of India?  1. Incorporating environmental benefits and costs into the Union and State Budgets thereby implementing the 'green accounting'  E 58 2. Launching the second green revolution to enhance agricultural output so as to ensure food security to one and all in the future 3. Restoring and enhancing forest cover and responding to climate change by a combination of adaptation and mitigation measures Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwOA==",
      "description" : "IChpKSBUaGUgTmF0aW9uYWwgTWlzc2lvbiBmb3IgYSBHcmVlbiBJbmRpYSB3YXMgIGFubm91bmNlZCBieSB0aGUgUHJpbWUgTWluaXN0ZXIgYXMgb25lIG9mIHRoZSBlaWdodCAgTWlzc2lvbnMgdW5kZXIgdGhlIE5hdGlvbmFsIEFjdGlvbiBQbGFuIG9uIENsaW1hdGUgIENoYW5nZSAoTkFQQ0MpLiBJdCByZWNvZ25pemVzIHRoYXQgY2xpbWF0ZSBjaGFuZ2UgIHBoZW5vbWVub24gd2lsbCBzZXJpb3VzbHkgYWZmZWN0IGFuZCBhbHRlciB0aGUgZGlzdHJpYnV0aW9uLCAgdHlwZSBhbmQgcXVhbGl0eSBvZiBuYXR1cmFsIHJlc291cmNlcyBvZiB0aGUgY291bnRyeS4gR0lNICBwdXRzIHRoZSAnZ3JlZW5pbmcnIGluIHRoZSBjb250ZXh0IG9mIGNsaW1hdGUgY2hhbmdlICBhZGFwdGF0aW9uIGFuZCBtaXRpZ2F0aW9uLCBtZWFudCB0byBlbmhhbmNlIGVjb3N5c3RlbSAgc2VydmljZXMgbGlrZSBjYXJib24gc2VxdWVzdHJhdGlvbiBhbmQgc3RvcmFnZSAoaW4gZm9yZXN0cyAgYW5kIG90aGVyIGVjb3N5c3RlbXMpLCBoeWRyb2xvZ2ljYWwgc2VydmljZXMgYW5kICBiaW9kaXZlcnNpdHk7IGFsb25nIHdpdGggcHJvdmlzaW9uaW5nIHNlcnZpY2VzIGxpa2UgZnVlbCwgIGZvZGRlciwgc21hbGwgdGltYmVyLiAgKGlpKSBSZWY6IEluZGlhIFllYXJib29rIDIwMTYgcGFnZSAzMzg6IEVudmlyb25tZW50ICBtaW5pc3RyeSBoYXMgbGF1bmNoZWQgTmF0aW9uYWwgTWlzc2lvbiBmb3IgYSBHcmVlbiBJbmRpYSAgdGhyb3VnaCBhIGNvbnN1bHRhdGl2ZSBwcm9jZXNzIGludm9sdmluZyByZWxldmFudCAgc3Rha2Vob2xkZXJzLCBhaW1lZCBhdCBib3RoIGluY3JlYXNpbmcgdGhlIGZvcmVzdCBhbmQgdHJlZSAgY292ZXIgYnkgNSBtaWxsaW9uIGhhLCBhcyB3ZWxsIGFzIGluY3JlYXNpbmcgdGhlIHF1YWxpdHkgb2YgIHRoZSBleGlzdGluZyBmb3Jlc3QgY292ZXIgaW4gYW5vdGhlciA1IG1pbGxpb24gaGEuIEhlbmNlICBvbmx5IHN0YXRlbWVudCAzIGZpdHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 109,
      "question" : "'Net metering' is sometimes seen in the news in the context of promoting the  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEwOQ==",
      "description" : "IChpKSBBIE5ldCBtZXRlcmluZyBpcyBhIGJpbGxpbmcgbWVjaGFuaXNtIHRoYXQgY3JlZGl0cyAgc29sYXIgZW5lcmd5IHN5c3RlbSBvd25lcnMgZm9yIHRoZSBlbGVjdHJpY2l0eSB0aGV5IGFkZCB0byAgdGhlIGdyaWQuIE5ldCBtZXRlcmluZyBhbGxvd3MgcmVzaWRlbnRpYWwgYW5kIGNvbW1lcmNpYWwgIGN1c3RvbWVycyB3aG8gZ2VuZXJhdGUgdGhlaXIgb3duIGVsZWN0cmljaXR5IGZyb20gc29sYXIgIHBvd2VyIHRvIGZlZWQgZWxlY3RyaWNpdHkgdGhleSBkbyBub3QgdXNlIGJhY2sgaW50byB0aGUgZ3JpZC4gIChpaSkgVW5kZXIgTmV0LW1ldGVyaW5nIHN5c3RlbSwgQ3VzdG9tZXIgaW5zdGFsbHMgYSBzb2xhciAgb3Igd2luZHBvd2VyIHBsYW50IG9uIGhpcyBwcmVtaXNlLCBnZXRzIGl0IGdyaWQtY29ubmVjdGVkICB3aXRoIHRoZSBlbGVjdHJpY2l0eSBkaXN0cmlidXRpb24gY29tcGFueSAoRElTQ09NKSBIZW5jZSAgKGEpIGlzIHRoZSBhcHQgY2hvaWNlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " production and use of solar energy by the  households/consumers ",
        "option2" : " use of piped natural gas in the kitchens of households ",
        "option3" : " installation of CNG kits in motor-cars ",
        "option4" : " installation of water meters in urban households "
      }
    },
    {
      "index" : 112,
      "question" : "In the cities of our country, which among the following atmospheric gases are normally considered in calculating the value of Air Quality Index?  1. Carbon dioxide 2. Carbon monoxide 3. Nitrogen dioxide 4. Sulfur dioxide 5. Methane Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExMg==",
      "description" : "IChpKSBUaGUgQVFJIGxldmVsIGlzIGJhc2VkIG9uIHRoZSBsZXZlbCBvZiA4IGF0bW9zcGhlcmljICBwb2xsdXRhbnRzLCBuYW1lbHkgc3VsZnVyIGRpb3hpZGUgKFNPMiksIG5pdHJvZ2VuIGRpb3hpZGUgIChOTzIpLCBzdXNwZW5kZWQgcGFydGljdWxhdGVzIHNtYWxsZXIgdGhhbiAxMCDCtW0gaW4gIGFlcm9keW5hbWljIGRpYW1ldGVyIChQTTEwKSwgc3VzcGVuZGVkIHBhcnRpY3VsYXRlcyAgc21hbGxlciB0aGFuIDIuNSDCtW0gaW4gYWVyb2R5bmFtaWMgZGlhbWV0ZXIgKFBNMi41KSwgTkgzLCAgUGIsIGNhcmJvbiBtb25veGlkZSAoQ08pLCBhbmQgb3pvbmUgKE8zKSBtZWFzdXJlZCBhdCB0aGUgIG1vbml0b3Jpbmcgc3RhdGlvbnMgdGhyb3VnaG91dC4gIFNvIGJ5IGVsaW1pbmF0aW9uIHdlIGFyZSBsZWZ0IHdpdGggb3B0aW9uICdiJy4gIFJlZjogVGhlaGluZHUgbmV3c3BhcGVyLyBBcHJpbCA5LCAyMDE1OyAgaCB0IHRwIDogLyAvd3d3LiB0IGhlaCBpbmR1IC5jb20vb3AgaW4gaW9uIC9ibG9ncy9iIGwgb2ctICBkYXRhZGVsdmUvYXJ0aWNsZTcwODM5ODUuZWNlIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1, 4 and 5 only ",
        "option4" : " 1, 2, 3, 4 an 5 "
      }
    },
    {
      "index" : 113,
      "question" : "Which of the following are the key features of 'National Ganga River Basin Authority (NGRBA)'?  1. River basin is the unit of planning and management. 2. It spearheads the river conservation efforts at the national level. 3. One of the Chief Ministers of the States through which the Ganga flows becomes the Chairman of NGRBA on rotation basis. Select the correct answer using the code given Below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExMw==",
      "description" : "IChpKSBOYXRpb25hbCBHYW5nYSBSaXZlciBCYXNpbiBBdXRob3JpdHkgIChOR1JCQSkgaXMgYSBmaW5hbmNpbmcsIHBsYW5uaW5nLCBpbXBsZW1lbnRpbmcsIG1vbml0b3ItICBpbmcgYW5kIGNvb3JkaW5hdGluZyBhdXRob3JpdHkgZm9yIHRoZSBHYW5nZXMgUml2ZXIsIGZ1bmMtICB0aW9uaW5nIHVuZGVyIHRoZSB3YXRlciByZXNvdXJjZSBtaW5pc3RyeSBvZiBJbmRpYS4gVGhlIG1pcy0gIHNpb24gb2YgdGhlIG9yZ2FuaXNhdGlvbiBpcyB0byBzcGVhcmhlYWQgdGhlIHJpdmVyIGNvbnNlcnZhLSAgdGlvbiBlZmZvcnRzIGF0IHRoZSBuYXRpb25hbCBsZXZlbC4gIChpaSkgSW4gMjAxNCwgVVBTQyBhc2tlZCBzaW1pbGFyIHF1ZXN0aW9uLCB3aGVyZSBvbmUgb2YgIHRoZSBzdGF0ZW1lbnQgd2FzLSAnUE0gaXMgY2hhaXJtYW4gb2YgTkdSQkEnLiBUaGF0ICBzdGF0ZW1lbnQgd2FzIHJpZ2h0IGFzIHBlciBJbmRpYSBZZWFyYm9vayAyMDE0LiBUaGVyZWZvcmUsICBoZXJlIHN0YXRlbWVudCAzIGlzIHdyb25nLCBDTSBjYW4ndCBiZSB0aGUgY2hhaXJtYW4gb2YgIE5HUkJBLiBCeSBlbGltaW5hdGlvbiwgd2UgcmVhY2ggYW5zd2VyIChhKS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 114,
      "question" : "What is/are unique about 'Kharai camel', a breed found in India?  1. It is capable of swimming up to three kilometers in seawater. 2. It survives by grazing on mangroves. 3. It lives in the wild and cannot be domesticated. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExNA==",
      "description" : "VGhlc2UgY2FtZWxzIGNhbiBzd2ltIHVwIHRvIHRocmVlIGtpbG9tZXRlcnMgaW50byB0aGUgIHNlYSBpbiBzZWFyY2ggb2YgbWFuZ3JvdmVzIC0gU28sIDEgYW5kIDIgYXJlIGNvcnJlY3QuTW9zdCAgZmFtaWxpZXMgaW4gSmF0dCBhbmQgUmFiYXJpIGNvbW11bml0aWVzIG9mIEthY2hjaGgsIGFyZSAgdHJhZGl0aW9uYWwgcmVhcmVycyBvZiBLaGFyYWkgY2FtZWxzLiBTbywgdGhpcmQgc3RhdGVtZW50IGFsc28gIGNvcnJlY3QuICBLaGFyYWkgY2FtZWxzIGZvdW5kIGluIHRoZSBLdXRjaCByZWdpb24gYXJlIHZlcnkgdW5pcXVlLiAgVGhleSBjYW4gY2FuIHN3aW0gdGhyb3VnaCBkZWVwIHNlYSB3YXRlcnMgYW5kIGl0IGZlZWRzIG9uICBtYW5ncm92ZXMgYW5kIG90aGVyIHNhbGluZSBwbGFudHMuIFRoZSBicmVlZGVycyBoYXZlICBtZXRpY3Vsb3VzbHkgZm9sbG93ZWQgdGhlIHRyYWRpdGlvbmFsIGdyYXppbmcgcGF0dGVybiBpbiB0aGUgIGNvYXN0YWwgZGlzdHJpY3RzLiBUaGV5IGRvIG5vdCBwcm92aWRlIHNwZWNpYWwgaG91c2luZyBvciAgc2hlbHRlciB0byB0aGUgY2FtZWxzLkdpdmVuIHRoZSBicmVlZCdzIGFiaWxpdHkgdG8gc3Vydml2ZSAgYm90aCBvbiBsYW5kIGFuZCBzZWEsIHRoZSBLaGFyYWkgY2FtZWwgaXMgb25lIG9mIHRoZSBtb3N0ICBwcmVmZXJyZWQgY2hvaWNlcyBvZiBncmF6aWVycyBpbiB0aGUgYXJpZCBjb2FzdGFsIHJlZ2lvbiBvZiAgS2FjaGNoaC4gUGVvcGxlIGNvbnN1bWUgaXRzIG1pbGssIHdoaWxlIG1hbGUgY2FsdmVzIGFyZSAgc29sZCBmb3IgZWNvbm9taWMgcmV0dXJucyAoZmVtYWxlcyBhcmUgbm90IHNvbGQgYmVjYXVzZSAgdGhleSBhcmUgY29uc2lkZXJlZCBzYWNyZWQpLiBBIG1hbGUgY2FsZiBmZXRjaGVzIGFueXdoZXJlICBiZXR3ZWVuIFJzLiA2LDAwMCBhbmQgUnMuMTQsMDAwLCBzYXlzIFJhbWVzaCBCaGF0dGkgb2YgIFNhaGplZXZhbiwgYW4gTkdPIHdvcmtpbmcgb24gbGl2ZWxpaG9vZCBpc3N1ZXMgb2YgIGdyYXppZXJzIGluIEthY2hjaGguIEl0IGNhbiBiZSBkb21lc3RpY2F0ZWQgYWxzbyAtIHNvIGl0cyAgbm90IHdpbGQuIFRoZXkgYXJlIHJlYXJlZCBpbiAgZm91ciBibG9ja3Mgb2YgQWJkYXNhLCBCdW5kcmEsICBMYWtocGF0IGFuZCBCYWNoYXUgb2YgR3VqYXJhdC4gIFJlZiA6IERPV04gVE8gRUFSVEggKEFuIGltcG9ydGFudCBzb3VyY2UgZm9yIEVudikgIFJhcmUgS2hhcmFpIGNhbWVsIHNwZWNpZXMsIGZvdW5kIGluIEt1dGNoIGRpc3RyaWN0LCBpcyAgdW5kZXIgdGhyZWF0IGR1ZSB0byB0aGUgb25zbGF1Z2h0IG9mIGluZHVzdHJpYWxpc2F0aW9uLCAgcG9zdC0yMDAxIGVhcnRocXVha2UuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 115,
      "question" : "Recently, our scientists have discovered a new and distinct species of banana plant which attains a height of about 11 metres and has orange-coloured fruit pulp. In which part of India has it been discovered?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExNQ==",
      "description" : "U2NpZW50aXN0cyBhdCB0aGUgQm90YW5pY2FsIFN1cnZleSBvZiBJbmRpYSAoQlNJKSBoYXZlICBkaXNjb3ZlcmVkIGEgbmV3IHNwZWNpZXMgb2YgYmFuYW5hIGZyb20gYSByZW1vdGUgdHJvcGljYWwgIEtyaXNobmEgTmFsYWggcmFpbiBmb3Jlc3Qgb24gdGhlIExpdHRsZSBBbmRhbWFuIGlzbGFuZHMuICBUaGUgbmV3IHNwZWNpZXMgaXMgYWJvdXQgMTEgbWV0cmVzIGhpZ2gsIHdoZXJlYXMgYXMgdGhlICB1c3VhbCBiYW5hbmEgc3BlY2llcyBpcyBhYm91dCB0aHJlZSB0byBmb3VyIG1ldGVycyBoaWdoLiAgVGhlIGZydWl0IHB1bHAgaXMgb3JhbmdlIGluIGNvbG91ciwgZGlzdGluY3RpdmUgZnJvbSB0aGUgd2hpdGUgIGFuZCB5ZWxsb3cgY29sb3Igb2YgcmVndWxhciBiYW5hbmFzLiBIZW5jZSAoYSkgaXMgdGhlIGNvcnJlY3QgIGFuc3dlci4gIFJlZjogVGhlSGluZHUvT2N0b2JlciAxMSwgMjAxNSAgaHR0cDovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbC9vdGhlci1zdGF0ZXMvICBhbmRhbWFucy15aWVsZC1hLXN3ZWV0LWJhbmFuYS13aXRoLW9yYW5nZS1wdWxwLyAgYXJ0aWNsZTc3NTAzMTYuZWNlICAgRSA2OCA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Andaman Islands ",
        "option2" : " Anaimalai Forests ",
        "option3" : " Maikala Hills ",
        "option4" : " Tropical rain forests of northeast "
      }
    },
    {
      "index" : 116,
      "question" : "With reference to 'Red Sanders', sometimes seen in the news, consider the following statements:  1. It is a tree species found in a part of South India. 2. It is one of the most important trees in the tropical rain forest areas of South India. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExNg==",
      "description" : "IChpKSBQdGVyb2NhcnB1cyBzYW50YWxpbnVzLCB3aXRoIHRoZSBjb21tb24gbmFtZXMgUmVkICBTYW5kZXJzLCBSZWQgU2FuZGFsd29vZCwgYW5kIHNhdW5kZXJzd29vZCwgaXMgYSBzcGVjaWVzICBvZiBQdGVyb2NhcnB1cyBlbmRlbWljIHRvIHRoZSBzb3V0aGVybiBFYXN0ZXJuIEdoYXRzICBtb3VudGFpbiByYW5nZSBvZiBTb3V0aCBJbmRpYS4gVGhpcyB0cmVlIGlzIHZhbHVlZCBmb3IgdGhlICByaWNoIHJlZCBjb2xvciBvZiBpdHMgd29vZC4gVGhlIHdvb2QgaXMgbm90IGFyb21hdGljLiAgKGlpKSBJdCB3YXMgaW4gbmF0aW9uYWwgbWVkaWEgZHVyaW5nIEFwcmlsIDIwMTUsIHdoZW4gIEFuZGhyYSBQcmFkZXNoIHBvbGljZSBraWxsZWQgMjAgUmVkIFNhbmRlciBzbXVnZ2xlcnMgaW4gIGFuIGVuY291bnRlci4gU28gZmlyc3Qgc3RhdGVtZW50IGlzIHJpZ2h0LiAgKGlpaSkgUmVkIFNhbmRlcnMgaXMgYXNzb2NpYXRlZCB3aXRoIFRyb3BpY2FsIGRyeSAgZGVjaWR1b3VzIGZvcmVzdCwgYXMgcGVyIGVudmlyb25tZW50IG1pbmlzdHJ5IHdlYnNpdGUsICBIZW5jZSAybmQgc3RhdGVtZW50IHdyb25nLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 117,
      "question" : "The term M-STRIPES' is sometimes seen in  the news in the context of  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExNw==",
      "description" : "TmF0aW9uYWwgVGlnZXIgQ29uc2VydmF0aW9uIEF1dGhvcml0eSAoTlRDQSkgaXMgIHBsYW5uaW5nIHRvIGltcGxlbWVudCBhIG5ldyBjb21wdXRlcml6ZWQgdGlnZXIgIG1vbml0b3JpbmcgcHJvdG9jb2wgaW4gYWxsIHRpZ2VyIHJlc2VydmVzIG9mIHRoZSBjb3VudHJ5ICBrbm93biBhcyBNb25pdG9yaW5nIFN5c3RlbSBmb3IgVGlnZXIsIEludGVuc2l2ZSAgUGF0cm9sbGluZyBhbmQgRWNvbG9naWNhbCBTdGF0dXMgKE1TVHJJUEVTKS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Captive breeding of Wild Fauna ",
        "option2" : " Maintenance of Tiger Reserves ",
        "option3" : " Indigenous Satellite Navigation System ",
        "option4" : " Security of National Highways "
      }
    },
    {
      "index" : 118,
      "question" : "Recently there was a proposal to translocate some of the lions from their natural habitat in Gujarat to which one of the following sites ?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExOA==",
      "description" : "RXZlbiBpZiB5b3UgZWxpbWluYXRlIENvcmJldHQgKFV0dHJha2hhbmQpIGFuZCAgTXVkdW1hbGFpIChUYW1pbCBOYWR1KSBmb3IgY2xpbWF0aWMgcmVhc29ucyBmb3IgTGlvbiAgcmVsb2NhdGlvbiwgc3RpbGwgeW91J3JlIGxlZnQgd2l0aCBTYXJpc2thIChSYWphc3RoYW4pLiBTYXJpc2thICBiZWluZyBhIHRpZ2VyIHJlc2VydmUsIHdvdWxkIHNvdW5kIHVuZml0IGZvciBsaW9uICBpbW1pZ3JhdGlvbi4gU28gYnkgZWxpbWluYXRpb24gYW5zd2VyIHdvdWxkIGJlICJCIi4gYW5kICBJbmRpYW5leHByZXNzIHJlcG9ydCBjb25maXJtIGl0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Corbett National Park ",
        "option2" : " KunoPalpur Wildlife Sanctuary ",
        "option3" : " Mudumalai Wildlife Sanctuary ",
        "option4" : " Sariska National Park "
      }
    },
    {
      "index" : 119,
      "question" : "In India, if a species of tortoise is declared protected under Schedule I of the Wildlife (Protection) Act, 1972, what does it imply ?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDExOQ==",
      "description" : "VGlnZXIgaXMgZ2l2ZW4gYXMgU2NoZWR1bGUgSSBhbmltYWwuIFNvICJBIiBpcyBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It enjoys the same level of protection as the tiger. ",
        "option2" : " It no longer exists in the wild, a few individuals are  under captive protection; and now it is impossible to  prevent its extinction. ",
        "option3" : " It is endemic to a particular region of India. ",
        "option4" : " Both (b) and (c) stated above are correct in this "
      }
    },
    {
      "index" : 120,
      "question" : "According to the Wildlife (Protection) Act, 1972, which of the following animals cannot be hunted by any person except under some provisions provided by law?  1. Gharial 2. Indian wild ass 3. Wild buffalo Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyMA==",
      "description" : "VGhlIHNjaGVkdWxlIDUgdmVybWluLSBjcm93LCBmcnVpdGJhdCwgbWljZSBhbmQgcmF0ICBjYW4gYmUga2lsbGVkLiBTaW5jZSB0aGUgYW5pbWFscyBnaXZlbiBpbiBhYm92ZSBNQ1EgYXJlICBvdXRzaWRlIHRoYXQgbGlzdCBoZW5jZSBhbnN3ZXIgaXMgIkQiLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 121,
      "question" : "If you want to see gharials in their natural habitat, which one of the following is the best place to visit? (a) Bhitarkanika Mangroves  (a) Sathyamangalam Tiger Reserve  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyMQ==",
      "description" : "R2hhcmlhbHMgYXJlIHJpdmVyIGR3ZWxsaW5nIGZpc2gtZWF0ZXJzIGFuZCB0aGVpciBvbmx5ICB2aWFibGUgcG9wdWxhdGlvbiBpcyBpbiB0aGUgQ2hhbWJhbCBTYW5jdHVhcnkuIFNvICJCIiAgc2hvdWxkIGJlIHRoZSBhbnN3ZXIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Chambal River ",
        "option2" : " Nallamala Forest ",
        "option3" : " Pulicat Lake ",
        "option4" : " DeeporBeel  122. From the ecological point of view, which one of the  following assumes importance in being a good link between  the Eastern Ghats and the Western Ghats? "
      }
    },
    {
      "index" : 123,
      "question" : "Consider the following statements in respect of Trade Related Analysis of Fauna and Flora in Commerce (TRAFFIC):  E B D _8 34 2 Issues on Environment, Ecology, Biodiversity & Climate Change E 59 1. TRAFFIC is a bureau under United Nations Environment Programme (UNEP). 2. The mission of TRAFFIC is to ensure that trade in wild plants and animals is not a threat to the conservation of nature. Which of the above statements is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyMw==",
      "description" : "Rmlyc3Qgc3RhdGVtZW50IGlzIHdyb25nIGJlY2F1c2UgVFJBRkZJQyBpcyBqb2ludCAgcHJvZ3JhbSBvZiBXV0YgYW5kIElVQ04gYW5kIFNlY29uZCBzdGF0ZW1lbnQgaXMgIGNvcnJlY3QgYmVjYXVzZSB2ZXJiYXRpbSBnaXZlbiBpbiB0aGUgb3JnYW5pemF0aW9uJ3MgIG9mZmljaWFsIHBhZ2UuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 124,
      "question" : "Due  to  some  reasons,  if  there  is  a  huge  fall  in  the population of species of butterflies, what could be its likely consequence/consequences?  1. Pollination of some plants could be adversely affected. 2. There could be a drastic increase in the fungal infections of some cultivated plants. 3. It could lead to a fall in the population of some species of wasps, spiders and birds. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyNA==",
      "description" : "U3RhdGVtZW50IDEgaXMgcmlnaHQgKGJ5IGNvbW1vbiBrbm93bGVkZ2UpIGJ1dCBmb3IgIHRoZSBzYWtlIG9mIHJlZmVyZW5jZS0gTkNFUlQgQ2xhc3MgMTIgYmlvbG9neSBwYWdlIDMwISAgVGhpcyBlbGltaW5hdGVzICJCIi4gU2Vjb25kIHN0YXRlbWVudCBzaG91bGQgYmUgd3JvbmcgIGJlY2F1c2Ugb2YgdGhlIGV4dHJlbWUgd29yZCAiZHJhc3RpYyIuIFRoaXMgZWxpbWluYXRlcyAgIkQiLiBCZXNpZGVzIEknbSB1bmFibGUgdG8gZmluZCBhbnkgc3BlY2lmaWMgcmVmZXJlbmNlIHRoYXQgIG1lbnRpb25zIGxpbmthZ2UgYmV0d2VlbiBidXR0ZXJmbHkgcG9wdWxhdGlvbiB2cyBmdW5ndXMgIGluZmVjdGlvbi4gQmlyZHMgYW5kIHNwaWRlcnMgdGVuZCB0byBwcmV5IG9uIGJ1dHRlcmZsaWVzIChieSAgY29tbW9uIGtub3dsZWRnZSkgc28gc3RhdGVtZW50IDMgaXMgYSBwb3NzaWJsZSAgb3V0Y29tZS4gIEhlbmNlICBhbnN3ZXIgICJDIjogIDEgIGFuZCAzICBvbmx5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 127,
      "question" : "In the context of mitigating the impending global warming due to anthropogenic emissions of carbon dioxide, which of the following can be the potential sites for carbon sequestration?  1. Abandoned and uneconomic coal seams 2. Depleted oil and gas reservoirs 3. Subterranean deep saline formations Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyNw==",
      "description" : "Q2FyYm9uIHNlcXVlc3RyYXRpb24gbWF5IGJlIGNhcnJpZWQgb3V0IGJ5IHB1bXBpbmcgIGNhcmJvbiBpbnRvIGNhcmJvbiBzaW5rcyBvZiB0d28gdHlwZXM6ICBBLiBOYXR1cmFsIHNpbmtzLSBvY2VhbiwgZm9yZXN0LCBzb2lsIGV0Yy4gIEIuIEFydGlmaWNpYWwgc2luay0gZGVwbGV0ZWQgb2lsIHJlc2VydmUsIHVubWluYWJsZSBtaW5lcy4gIFNvIHN0YXRlbWVudCAxIGFuZCAyIGFyZSBjb3JyZWN0LiAgQW5kIGRlZXAgU2FsaW5lIEZvcm1hdGlvbnMgaW5mYWN0IGhhdmUgaGlnaGVzdCAgY2FwYWNpdHkgIGZvciAgdGhpcy4gICBTbyAgYWNjb3JkaW5nbHksICBhbnN3ZXIgIGlzICAiRCIuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 128,
      "question" : "It is possible to produce algae based biofuels, but what is/are the likely limitation(s) of developing countries in promoting this industry?  1. Production of algae based biofuels is possible in seas only and not on continents. 2. Setting up and engineering the algae based biofuel production requires high level of expertise echnology until the construction is completed. 3. Economically viable production necessitates the setting up of large scale facilities which may raise ecological and social concerns. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyOA==",
      "description" : "VVMgTmF0aW9uYWwgUmVzZWFyY2ggQ291bmNpbCByZXBvcnQgb24gQWxnYWwgIEJpb2Z1ZWwgKDIwMTIpIG9ic2VydmVkIHRoYXQgIDEuIGFsZ2FlIGFuZCBjeWFub2JhY3RlcmlhIGJpb21hc3MgcHJvZHVjdGlvbiBpbiB0aGUgIFUuUy4gZGVzZXJ0IFNvdXRod2VzdCBjb3VsZCBiZSBwZXJjZWl2ZWQgYXMgYSBnb29kIHVzZSAgb2YgbG93LXZhbHVlIGxhbmQgYnkgc29tZSwgYnV0IGFzIGFuIGludHJ1c2lvbiBpbnRvIHByaXN0aW5lICBsYW5kIGJ5IG90aGVycy4gU2ltaWxhcmx5LCB0aGUgdXNlIG9mIGdlbmV0aWNhbGx5IG1vZGlmaWVkICBvcmdhbmlzbXMgaW4gcHJvZHVjdGlvbiBzeXN0ZW1zIGNvdWxkIGFmZmVjdCBzb2NpYWwgIGFjY2VwdGFiaWxpdHkuIFNvIHRoaXMgaXMgc29jaWFsIGNvbmNlcm4uIFthbmQgaXQgYWxzbyBwcm92ZXMgIHN0YXRlbWVudCAjMSB3cm9uZy5dICAyLiBPcGVuIEFsZ2FsIHBvbmRzIHdpbGwgYXR0cmFjdCBpbnNlY3QgbGFydmFlIGludmFzaW9uICBhbmQgYWZmZWN0IHByZWRhdG9yLXByZXkgYmFsYW5jZS4gVGhpcyBpcyBlY29sb2dpY2FsICBjb25jZXJuLiBIZW5jZSBTdGF0ZW1lbnQgMyBpcyByaWdodC4gIDMuIEFuZCB0aGUgcmVwb3J0IGRpc2N1c3NlZCBjaGFsbGVuZ2VzIHByb2R1Y3Rpb24gYW5kICB0ZWNobm9sb2d5LiBIZW5jZSBhbnN3ZXIgMiBhbmQgMy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 129,
      "question" : "With reference to 'Global Climate Change Alliance', which of the following statements is/are correct?  1. It is an initiative of the European Union. 2. It provides technical and financial support to targeted developing countries to integrate climate change into their development policies and budgets. 3. It is coordinated by World Resources Institute (WRI) and World Business Council for Sustainable Development (WBCSD). Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEyOQ==",
      "description" : "QXMgcGVyIHRoZWlyIG9yZ2FuaXphdGlvbnMnICJBYm91dCB1cyIgcGFnZTogIEV1cm9wZUFpZCAoREcgZm9yIEludGVybmF0aW9uYWwgQ29vcGVyYXRpb24gYW5kICBEZXZlbG9wbWVudCkgZHJpdmVzIGFuZCBvdmVyc2VlcyB0aGUgb3ZlcmFsbCAgaW1wbGVtZW50YXRpb24gb2YgdGhlIEdDQ0EuICBTbyB0aGlyZCBzdGF0ZW1lbnQgaXMgd3JvbmcuICBCeSBlbGltaW5hdGlvbiB3ZSBhcmUgbGVmdCB3aXRoICJBIi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 130,
      "question" : "Consider the following statements:  1. Climate and Clean Air Coalition (CCAC) to reduce Short Lived Climate Pollutants is a unique initiative of G20 group of countries. 2. The CCAC focuses on methane, black carbon and hydrofluorocarbons. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzMA==",
      "description" : "QXMgcGVyIHRoZSB0aW1lbGluZSBnaXZlbiBvbiB0aGVpciBvZmZpY2lhbCAiQWJvdXQgdXMiICBwYWdlOiBDQ0FDIHdhcyBmb3JtZWQgaW4gMjAxMiBieSBVTkVQIGFuZCBHaGFuYSwgIEJhbmdsYWRlc2ggZXRjLiBjb3VudHJpZXMuIFNvIGZpcnN0IHN0YXRlbWVudCBpcyAgd3JvbmcuU2Vjb25kIHN0YXRlbWVudCBpcyByaWdodC0gdGhleSBmb2N1cyBvbiBTaG9ydCBMaXZlZCAgQ2xpbWF0ZSBQb2xsdXRhbnRzIHN1Y2ggYXMgbWV0aGFuZSwgYmxhY2sgY2FyYm9uIGFuZCAgaHlkcm9mbHVvcm9jYXJib25zLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 131,
      "question" : "Why is a plant called Prosopis juliflora often mentioned in  news  ?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzMQ==",
      "description" : "VGhpcyBwbGFudCBpcyBhIG5hdGl2ZSBvZiBNZXhpY28sIGFuZCBzcHJlYWQgdGhyb3VnaG91dCAgSW5kaWEgSXQncyBhbiBhZ2dyZXNzaXZlIGNvbG9uaXplciwgY29tbW9uIHdlZWQgb2YgIHdhc3RlbGFuZHMsIHNjcnVibGFuZHMgYW5kIGRlZ3JhZGVkIGZvcmVzdHMuIFNpbmNlIGl0J3MgIG1lbnRpb24gdW5kZXIgdGhlIGhlYWQgb2YgaW52YXNpdmUgYWxpZW4gc3BlY2llcyBzbyBpdCdkICByZWR1Y2UgYmlvZGl2ZXJzaXR5IGluIHRoZSBhcmVhLCBIZW5jZSBPcHRpb24gKEIpIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Its extract is widely used in cosmetics. ",
        "option2" : " It tends to reduce the biodiversity in the area in  which it grows. ",
        "option3" : " Its extract is used in the synthesis of pesticides. ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 132,
      "question" : "Which of the following statements best describes \"carbon fertilization\"?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzMg==",
      "description" : "U3R1ZGllcyBoYXZlIHNob3duIHRoYXQgaW5jcmVhc2VkIGNvbmNlbnRyYXRpb25zIG9mICBjYXJib24gZGlveGlkZSBpbmNyZWFzZSBwaG90b3N5bnRoZXNpcywgc3B1cnJpbmcgcGxhbnQgIGdyb3d0aC4uLlJlc3VsdHMgc2hvd2VkIHRoYXQgY2FyYm9uIGRpb3hpZGUgZmVydGlsaXphdGlvbiAgZXhwbGFpbnMgNzAgcGVyY2VudCBvZiB0aGUgZ3JlZW5pbmcgZWZmZWN0LiBbTkFTQSAyMDE2XSAgRSAgQiAgRCAgXzggIDM0ICAyICBJc3N1ZXMgb24gRW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlIEUgNjkg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Increased plant growth due to increased  concentration of carbon dioxide in the atmosphere ",
        "option2" : " Increased temperature of Earth due to increased  concentration of carbon dioxide in the atmosphere ",
        "option3" : " Increased acidity of oceans as a result of increased  concentration of carbon dioxide in the atmosphere ",
        "option4" : " Adaptation of all living beings on Earth to the climate "
      }
    },
    {
      "index" : 133,
      "question" : "The term \"sixth mass extinction/sixth extinction\" is often mentioned in the news in the context of the discussion of  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzMw==",
      "description" : "U2NpZW50aXN0cyBhcmUgc3VnZ2VzdGluZyB0aGF0IHRoZSBzaXh0aCBtYXNzIGV4dGluY3Rpb24gIGlzIHVuZGVyd2F5IGFzIHRoZXJlIGlzIGEgc3BlY2llcyBsb3NzIG9mIDEwMC0xMDAwIGV2ZXJ5ICB5ZWFyLiBUaGUgbm9ybWFsIGJhY2tncm91bmQgZXh0aW5jdGlvbiByYXRlIGlzIGFib3V0IDEwLSAgMjUgc3BlY2llcyBwZXIgeWVhci4gSGFiaXRhdCBsb3NzLCBvdmVycG9wdWxhdGlvbiBvZiAgaHVtYW5zLCBwb2xsdXRpb24sIG92ZXItaGFydmVzdGluZyBhbmQgaW52YXNpdmUgc3BlY2llcyAgaW52YXNpb24gYXJlIGNpdGVkIGFzIHRoZSBtYWluIHJlYXNvbnMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Widespread monoculture practices in agriculture and  large-scale commercial farming with indiscriminate use  of chemicals in many parts of the world that may  result in the loss of good native ecosystems. ",
        "option2" : " Fears of a possible collision of a meteorite with the  Earth in the near future in the manner it happened 65  million years ago that caused the mass extinction of  many species including those of dinosaurs. . ",
        "option3" : " Large scale cultivation of genetically modified crops  in many parts of the world and promoting their  cultivation in other parts of the world which may  cause the disappearance of good native crop plants  and the loss of food biodiversity. ",
        "option4" : " Mankind's over-exploitation/misuse of natural "
      }
    },
    {
      "index" : 134,
      "question" : "How is the National Green Tribunal (NGT) different from the Central Pollution Control Board  1. The NGT has been established by an Act whereas the CPCB has been created by an executive order of the Government. 2. The NGT provides environmental justice and helps reduce the burden of litigation in the higher courts whereas the CPCB promotes cleanliness of streams and wells, and aims to improve the quality of air in the country. Which of the statements given above is/are  correct: ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzNA==",
      "description" : "IMK3IENlbnRyYWwgUG9sbHV0aW9uIENvbnRyb2wgQm9hcmQgKENQQ0IpLCBpcyBzdGF0dXRvcnkgIG9yZ2FuaXphdGlvbiwgd2FzIGNvbnN0aXR1dGVkIGluIFNlcHRlbWJlciwgMTk3NCB1bmRlciAgdGhlIFdhdGVyIChQcmV2ZW50aW9uIGFuZCBDb250cm9sIG9mIFBvbGx1dGlvbikgQWN0LCAxOTc0LiAgU28gIzEgaXMgd3JvbmcuICDCtyBQcmluY2lwYWwgZnVuY3Rpb25zIG9mIHRoZSBDUENCLCBhcyBzcGVsdCBvdXQgaW4gdGhlICBXYXRlciAoUHJldmVudGlvbiBhbmQgQ29udHJvbCBvZiBQb2xsdXRpb24pIEFjdCwgMTk3NCwgIGFuZCB0aGUgQWlyIChQcmV2ZW50aW9uIGFuZCBDb250cm9sIG9mIFBvbGx1dGlvbikgQWN0LCAgMTk4MSwgKGkpIHRvIHByb21vdGUgY2xlYW5saW5lc3Mgb2Ygc3RyZWFtcyBhbmQgd2VsbHMgaW4gIGRpZmZlcmVudCBhcmVhcy4gU28gbGFzdCBwYXJ0IG9mIHNlbnRlbmNlICMyIGlzIHJpZ2h0LiAgwrcgRW52aXJvbm1lbnQ6IE5hdGlvbmFsIEdyZWVuIFRyaWJ1bmFsIChOR1QpIHdhcyBzZXQgIHVwIGluIDIwMTAgdW5kZXIgdGhlIE5HVCBBY3QsIDIwMTAsIGZvciB0aGUgcHVycG9zZSBvZiAgZWZmZWN0aXZlIGFuZCBleHBlZGl0aW91cyBkaXNwb3NhbCBvZiBjYXNlcyByZWxhdGluZyB0byAgZW52aXJvbm1lbnRhbCBwcm90ZWN0aW9uLiBUaGUgVHJpYnVuYWwgc2hhbGwgbm90IGJlIGJvdW5kICBieSB0aGUgcHJvY2VkdXJlIGxhaWQgZG93biB1bmRlciB0aGUgQ29kZSBvZiBDaXZpbCAgUHJvY2VkdXJlLCAxOTA4LCBidXQgc2hhbGwgYmUgZ3VpZGVkIGJ5IHByaW5jaXBsZXMgb2YgbmF0dXJhbCAganVzdGljZS4gVGhlIFRyaWJ1bmFsIGlzIG1hbmRhdGVkIHRvIG1ha2UgYW4gZW5kZWF2b3IgZm9yICBkaXNwb3NhbCBvZiBhcHBsaWNhdGlvbnMgb3IgYXBwZWFscyBmaW5hbGx5IHdpdGhpbiA2IG1vbnRocyAgb2YgZmlsaW5nLiBTbyBmaXJzdCBwYXJ0IG9mIHNlbnRlbmNlICMyIGlzIHJpZ2h0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 135,
      "question" : "Consider the following statements:  1. The definition of \"Critical Wildlife Habitat\" is incorporated in the Forest Rights Act, 2006. 2. For the first time in India, Baigas have been given Habitat Rights. 3. Union Ministry of Environment, Forest and Climate Change officially decides and declares Habitat Rights for Primitive and Vulnerable Tribal Groups in any part of Indi(a) Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzNQ==",
      "description" : "IMK3IEJhaWdhcyBhcmUgY29uc2lkZXJlZCBhcyBhIHBhcnRpY3VsYXJseSB2dWxuZXJhYmxlICB0cmliYWwgZ3JvdXAgKFBWVEcpIGluIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIGFuZCByZWx5ICBtb3N0bHkgb24gc2hpZnRpbmcgY3VsdGl2YXRpb24sIGZvcmVzdCBwcm9kdWNlIGFuZCBmaXNoaW5nICBmb3Igc3VzdGVuYW5jZSwgc3ByZWFkIG92ZXIgZm9yZXN0ZWQgYXJlYXMgb2YgTWFkaHlhICBQcmFkZXNoIGFuZCBDaGhhdHRpc2dhcmguIEluIDIwMTYsIHRoZXkgYmVjYW1lIEluZGlhJ3MgIGZpcnN0IGNvbW11bml0eSB0byBnZXQgaGFiaXRhdCByaWdodHMuIFJlZjogRG93bnRvZWFydGgtICAyMDE2IFNvLCAjMiBpcyByaWdodC4gIMK3IFVuZGVyIEZSQSBBY3QsIGRpc3RyaWN0IGxldmVsIENvbW1pdHRlZXMgaGF2ZSB0byAgYWRqdWRpY2F0ZSB0aGUgcmlnaHRzLCB3aGVyZWFzIFRyaWJhbCBtaW5pc3RyeSBvbmx5IGlzc3VlcyAgZ3VpZGVsaW5lcy4gIFRoYXQgIG1ha2VzICAjMyAgd3JvbmcgIC8gIGlycmVsZXZhbnQuICBCeSAgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIEE6IG9ubHkgMSBhbmQgMi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 136,
      "question" : "In which one of the following States is Pakhui Wildlife Sanctuary located?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzNg==",
      "description" : "IlBha2h1aSAvIFBha2tlIFRpZ2VyIHJlc2VydmUiIGlzIGluIEFydW5hbmNoYWwgIFByYWRlc2gsIHNvIGlmIHRoZXJlIGlzIGEgd2lsZGxpZmUgc2FuY3R1YXJ5IGluIFBha2h1aSwgaXQgIHNob3VsZCBiZSBpbiAiQSIgZm9yIEFydW5hbmNoYWwgUHJhZGVzaC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Arunachal Pradesh ",
        "option2" : " Manipur ",
        "option3" : " Meghalaya ",
        "option4" : " Nagaland "
      }
    },
    {
      "index" : 137,
      "question" : "The Partnership for Action on Green Economy (PAGE), a UN mechanism to assist countries transition towards greener and more inclusive economies, emerged at  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzNw==",
      "description" : "SW4gMjAxMiwgUmlvKzIwICh0aGUgVW5pdGVkIE5hdGlvbnMgQ29uZmVyZW5jZSBvbiAgU3VzdGFpbmFibGUgRGV2ZWxvcG1lbnQpIHdhcyBoZWxkIGluIEJyYXppbC4uLi5QYXJ0bmVyc2hpcCAgZm9yIEFjdGlvbiBvbiBHcmVlbiBFY29ub215IChQQUdFKSB3YXMgbGF1bmNoZWQgaW4gIDIwMTMgYXMgYSByZXNwb25zZSB0byB0aGUgY2FsbCBhdCBSaW8rMjAgdG8gc3VwcG9ydCB0aG9zZSAgY291bnRyaWVzIHdpc2hpbmcgdG8gZW1iYXJrIG9uIGdyZWVuZXIgYW5kIG1vcmUgaW5jbHVzaXZlICBncm93dGggdHJhamVjdG9yaWVzLiBbUmVmOiBPcmdhbml6YXRpb24ncyBBYm91dCBVUyBQYWdlXSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The Earth Summit on Sustainable Development 2002,  Johannesburg ",
        "option2" : " The United Nations Conference on Sustainable  Development 2012, Rio de Janeiro ",
        "option3" : " The United Nations Framework Convention on  Climate Change 2015, Paris ",
        "option4" : " The World Sustainable Development Summit 2016, "
      }
    },
    {
      "index" : 138,
      "question" : "\"Momentum for Change : Climate Neutral Now\" is an initiative launched by  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzOA==",
      "description" : "VU5GQ0NDIHNlY3JldGFyaWF0IGxhdW5jaGVkIGl0cyBDbGltYXRlIE5ldXRyYWwgTm93ICBpbml0aWF0aXZlIGluIDIwMTUuIFRoZSBmb2xsb3dpbmcgeWVhciwgdGhlIHNlY3JldGFyaWF0ICBsYXVuY2hlZCBhIG5ldyBwaWxsYXIgdW5kZXIgaXRzIE1vbWVudHVtIGZvciBDaGFuZ2UgIGluaXRpYXRpdmUgZm9jdXNlZCBvbiBDbGltYXRlIE5ldXRyYWwgTm93LCBhcyBwYXJ0IG9mICBsYXJnZXIgZWZmb3J0cyB0byBzaG93Y2FzZSBzdWNjZXNzZnVsIGNsaW1hdGUgYWN0aW9uIGFyb3VuZCAgdGhlIHdvcmwoZCkgKFJlZjogIk9yZ2FuaXphdGlvbidzIEFib3V0IFVTIFBhZ2UiKSA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The Intergovernmentai Panel on Climate Change ",
        "option2" : " The UNEP Secretariat ",
        "option3" : " The UNFCCC Secretariat ",
        "option4" : " The World Meteorological Organisation "
      }
    },
    {
      "index" : 139,
      "question" : "Which one of the following national parks lies completely in the Temperate alpine zone?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDEzOQ==",
      "description" : "RnJvbSB0aGUgZ2l2ZW4gb3B0aW9ucywgVmFsbGV5IG9mIGZsb3dlcnMgaXMgY29tcGxldGVseSAgaW4gdGhlIHRlbXBlcmF0ZSB6b25lLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Manas national park ",
        "option2" : " Namdapha national park ",
        "option3" : " Neora valley national park ",
        "option4" : " Valley of flower national park "
      }
    },
    {
      "index" : 140,
      "question" : "Consider the following statements:  1. Asiatic lion naturally found in India only 2. Double-humped camel is naturally found in India only 3. One-horned rhinoceros is naturally found in India only Which one of the statement given above is/are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0MA==",
      "description" : "VHdvIGh1bXBlZCBjYW1lbCBhcmUgY2FsbGVkIEJhY3RyaWFuIGNhbWVsLCBmb3VuZCBpbiAgQ2VudHJhbCBBc2lhJ3MgY29sZCBkZXNlcnRzLiBTbywgQiBhbmQgRCByZW1vdmVkLiAgSmF2YW4gcmhpbm9jZXJvcyBpcyBjYWxsZWQgbGVzc2VyIG9uZS1ob3JuZWQgcmhpbm9jZXJvcyAgYW5kIGZvdW5kIG9ubHkgb24gdGhlIGlzbGFuZCBvZiBKYXZhIGluIEluZG9uZXNpYS4gSW5kaWFuICByaGlub2Nlcm9zIGlzIGNhbGxlZCBncmVhdGVyIG9uZS1ob3JuZWQgcmhpbm9jZXJvcy4gU28gdGhhdCAgbWVhbnMgc2Vjb25kIHN0YXRlbWVudCBpcyBmYWxzZSwgd2UgYXJlIGxlZnQgd2l0aCBBbnN3ZXIgIEE6IDEgb25seS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 141,
      "question" : "In the context of which of the following do some scientists suggest the use of cirrus cloud thinning technique and the injection of sulphate aerosol into stratosphere?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0MQ==",
      "description" : "U3VscGhhdGUgYWVyb3NvbCBwYXJ0aWNsZXMgYXJlIHZlcnkgZ29vZCByZWZsZWN0b3JzIG9mICBzdW5saWdodCwgYW5kIGl0IGhhcyBiZWVuIHNob3duLCB0aHJvdWdoIHZhcmlvdXMgY2xpbWF0ZSAgbW9kZWxzLCB0aGF0IGV2ZW4gaWYgMSUgb2YgY3VycmVudCBpbmNpZGVudCBzb2xhciByYWRpYXRpb24gaXMgIHJlZmxlY3RlZCBiYWNrIGluIHNwYWNlLCBhIHZlcnkgc2lnbmlmaWNhbnQgYW1vdW50IG9mIHRlbXBlcmF0dXJlICByaXNlIG9uIGVhcnRoIGNhbiBiZSBvZmZzZXQuIFNvLCBEIGlzIHRoZSBjbG9zZXN0IG1hdGNoLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Creating the artificial rains in some regions ",
        "option2" : " Reducing the frequency and intensity of tropical  cyclones ",
        "option3" : " Reducing the adverse effects of the solar wind on the  earth ",
        "option4" : " Reducing the global warming "
      }
    },
    {
      "index" : 142,
      "question" : "Which one of the following are Agasthyamala biosphere reserve?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0Mg==",
      "description" : "QWdhc3RoeWFtYWxhaSBiaW9zcGhlcmUgY29uc2lzdHMgb2YgTmV5eWFyLCBQZXBwYXJhICBhbmQgIFNoZW5kdXJuZXkgV2lsZGxpZmUgc2FuY3R1YXJpZXMgYW5kIHRoZWlyIGFkam9pbmluZyAgYXJlYXMuIFNvLCBBIGlzIHRoZSBjbG9zZXN0IG1hdGNoLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Neyyar, peppara and shendurney wildlife sanctuaries  and kalakad mundanthurai tiger reserve ",
        "option2" : " Mudumalai sathayamangalam and Wayanad wildlife  sanctuaries and silent valley national park ",
        "option3" : " Kaundinya gundla bhrameshwaram and papikonda  wildlife sanctuaries and mukurthi national park ",
        "option4" : " Kawal and Shree Venkateshwara wildlife sanctuaries; "
      }
    },
    {
      "index" : 143,
      "question" : "Consider the following pairs :  Wildlife: Naturally found in 1. Blue finned mahseer : Cauvery river 2. Irrawaddy dolphin : Chambal river 3. Rusty spotted cats : Eastern ghats Which one of the pair given above are correctly matched? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0Mw==",
      "description" : "IMK3IEdhbmdldGljIHJpdmVyIGRvbHBoaW4gKFBsYXRhbmlzdGEgZ2FuZ2V0aWNhKSBpcyBmb3VuZCAgaW4gQ2hhbWJhbCByaXZlciwgc2F5cyBUaW1lc29mSW5kaWEuICDCtyBJcnJhd2FkZHkgRG9scGhpbiAoT3JjYWVsbGEgYnJldmlyb3N0cmlzKSBpcyBhIGRpZmZlcmVudCAgc3BlY2llcy4gSXQncyBmb3VuZCBpbiBDaGlsaWthIGxhZ29vbiBhbmQgc2FsdC13YXRlciBlc3R1YXJpZXMgIG9mIE9kaXNoYSwgc2F5cyBJbmRpYVRvZGF5LiBTbywgIzIgaXMgd3JvbmcsIGJ5IGVsaW1pbmF0aW9uICB3ZSBhcmUgbGVmdCB3aXRoIEFuc3dlciBDLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 144,
      "question" : "Why is there a great concern about the microbeads that are released into environment?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0NA==",
      "description" : "MjAxNy1JbmRpYW5FeHByZXNzOiAgQnVyZWF1IG9mIEluZGlhbiBTdGFuZGFyZHMgKEJJUykgaGFzIGNsYXNzaWZpZWQgbWljcm9iZWFkcyAgYXMgJ3Vuc2FmZScgZm9yIHVzZSBpbiBjb3NtZXRpYyBwcm9kdWN0cy4gTkdUIGhhZCBlYXJsaWVyICBkaXJlY3RlZCB0aGUgQ2VudHJlIHRvIHRlc3QgY29zbWV0aWMgcHJvZHVjdHMgY29udGFpbmluZyAgbWljcm9iZWFkcyBhZnRlciBhIHBsZWEgc291Z2h0IGJhbiBvbiB0aGVpciB1c2Ugb24gdGhlICBncm91bmQgdGhleSBhcmUgZXh0cmVtZWx5IGRhbmdlcm91cyBmb3IgYXF1YXRpYyBsaWZlIGFuZCAgZW52aXJvbm1lbnQuIFNvLCBBIGlzIHRoZSBjbG9zZXN0IGFuc3dlci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " They are considered harmful to marine ecosystem ",
        "option2" : " They are considered to cause skin cancer in children ",
        "option3" : " They are small enough to absorbed by crop plants in  irrigated fields ",
        "option4" : " They are often found to be used as food adulterants "
      }
    },
    {
      "index" : 145,
      "question" : "Which of the following statements are correct about the deposits of methane hydrate? 1. Global warming might trigger the release of methane gas from these deposits 2. Large deposits of 'methane hydrate' are found in Arctic Tundra and under the seafloor. 3. Methane in atmosphere oxidizes to carbon dioxide after a decade or two. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZXwxNDU=",
      "description" : "QXMgcGVyIHRoZSBOQVNBIHdlYnBhZ2U6ICDCtyBMYXJnZSBhbW91bnRzIG9mIG1ldGhhbmUgYXJlIGZyb3plbiBpbiBBcmN0aWMgdHVuZHJhICBzb2lscyBhbmQgaW4gbWFyaW5lIHNlZGltZW50cyBpbmNsdWRpbmcgZ2FzIGh5ZHJhdGVzLiBBcyAgRWFydGgncyBjbGltYXRlIHdhcm1zLCB0aGF0IG1ldGhhbmUgaXMgdnVsbmVyYWJsZSB0byAgcG9zc2libGUgcmVsZWFzZSBpbnRvIHRoZSBhdG1vc3BoZXJlLCB3aGVyZSBpdCBjYW4gYWRkIHRvICBnbG9iYWwgd2FybWluZy4gU28gIzEgYW5kIDIgYXJlIGNvcnJlY3QuICDCtyBJbiBNZXRoYW5lIEN5Y2xlLCBldmVyeSBtb2xlY3VsZSBvZiBtZXRoYW5lIHRoYXQgZ29lcyAgaW50byB0aGUgYXRtb3NwaGVyZSByZW1haW5zIHRoZXJlIGZvciA4IHllYXJzIHVudGlsIGl0IGlzICByZW1vdmVkIGJ5IG94aWRhdGlvbiBpbnRvIGNhcmJvbiBkaW94aWRlIChDTzIpIGFuZCB3YXRlciAgKEgyTykuIFNvLCAjMyBpcyBhbHNvIGNvcnJlY3QuIFRoaXMsIGFuc3dlciBkOiBBbGwgdGhyZWUgY29ycmVjdC4gIDE0Ni4gKGMgJiBkKSBBcyBwZXIgZ29vZ2xlIHNjaG9sYXIgcmVzZWFyY2ggcGFwZXJzLCBCaW9tYXNzICBidXJuaW5nIGlzIGEgc291cmNlIG9mIGdyZWVuaG91c2UgZ2FzZXMsIGNhcmJvbiBkaW94aWRlLCAgbWV0aGFuZSwgYW5kIG5pdHJvdXMgb3hpZGUuIEluIGFkZGl0aW9uLCBiaW9tYXNzIGJ1cm5pbmcgIGlzIGEgc291cmNlIG9mIGNoZW1pY2FsbHkgYWN0aXZlIGdhc2VzLCBpbmNsdWRpbmcgY2FyYm9uICBtb25veGlkZSwgbm9uLW1ldGhhbmUgaHlkcm9jYXJib25zLCBhbmQgbml0cmljIG94aWRlLiAgVGhlc2UgZ2FzZXMsIGFsb25nIHdpdGggbWV0aGFuZSwgbGVhZCB0byB0aGUgY2hlbWljYWwgIHByb2R1Y3Rpb24gb2YgdHJvcG9zcGhlcmljIG96b25lLiAgU28sIGFuc3dlciBzaG91bGQgYmUgIEQ6IDEsIDIsMyBhbmQgNC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fEVudmlyb25tZW50LCBFY29sb2d5LCBCaW9kaXZlcnNpdHkgJiBDbGltYXRlIENoYW5nZQ==",
      "year" : 0,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 147,
      "question" : "Consider the following statements:  1. Agricultural soils release nitrogen oxides into environment. 2. Cattle release ammonia into environment. 3. Poultry industry release reactive nitrogen compounds into environment. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0Nw==",
      "description" : "MjAxOC1KdW5lLCBUaGVIaW5kdSAgwrcgQWdyaWN1bHR1cmFsIHNvaWxzIGNvbnRyaWJ1dGVkIHRvIG92ZXIgNzAlIG9mIE4yTyAgZW1pc3Npb25zIGZyb20gSW5kaWEgaW4gMjAxMCAgwrcgQ2F0dGxlIGFjY291bnQgZm9yIDgwJSBvZiB0aGUgYW1tb25pYSBwcm9kdWN0aW9uICBQb3VsdHJ5IGluZHVzdHJ5IHJlY29yZGVkIGFuIGV4Y3JldGlvbiBvZiByZWFjdGl2ZSBuaXRyb2dlbiAgY29tcG91bmRzIG9mIDAuNDE1IHRvbm5lcyBpbiAyMDE2LiBTbyBEOiBhbGwgMyBzdGF0ZW1lbnRzICBhcmUgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 148,
      "question" : "Which of the following are the reasons/factors for exposure to benzene pollution ?  1. Automobile exhaust 2. Tobacco smoke 3. Wood burning 4. Using varnished wooden furniture 5. Using products made of polyurethane Select the correct answer using the code given below : ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0OA==",
      "description" : "ICgtKVNvdXJjZSBvZiBiZW56ZW5lIHBvbGx1dGlvbiBpcyB0aGUgYXV0b21vYmlsZSBhbmQgIHBldHJvbGV1bSBpbmR1c3RyeS4gKE5JT1MgUGFnZSAxNjcpICBTbywgIzEgaXMgY29ycmVjdC4gICgtKUJlbnplbmUgYW5kIHBvbHljeWNsaWMgYXJvbWF0aWMgaHlkcm9jYXJib25zICAoUEFIKSBhcmUgdWJpcXVpdG91cyBlbnZpcm9ubWVudGFsIHBvbGx1dGFudHMgIGdlbmVyYXRlZCBkdXJpbmcgaW5jb21wbGV0ZSBjb21idXN0aW9uIG9mIGNvYWwgb2lsLCAgcGV0cm9sIGFuZCB3b29kLiBUaGV5J3JlIGFsc28gZm91bmQgaW4gY2lnYXJldHRlIHNtb2tlICBhbmQgY2hhcmNvYWwgYm9pbGVkIGZvb2QuIFNvLCAjMiBhbmQgIzMgYXJlIGNvcnJlY3QuICAoVGFtaWxuYWR1IFN0YXRlIEJvYXJkIGNsYXNzIDExIENoZW1pc3RyeSBjaGFwdGVyIDEzKSAgKC0pQmVuemVuZSBpcyBhbHNvIHByZXNlbnQgaW4gcGFydGljbGVib2FyZCBmdXJuaXR1cmUsICBwbHl3b29kLCBmaWJyZWdsYXNzLCBmbG9vcmluZyBhZGhlc2l2ZXMsIHBhaW50cywgd29vZCAgcGFuZWxsaW5nLiBUaGVyZWZvcmUsIG5ldyBidWlsZGluZ3Mgb3IgcmVjZW50bHkgIHJlZGVjb3JhdGVkIGluZG9vciBlbnZpcm9ubWVudHMgaGF2ZSBiZWVuIGFzc29jaWF0ZWQgIHdpdGggaGlnaCBjb25jZW50cmF0aW9ucyBvZiBiZW56ZW5lIGZyb20gbWF0ZXJpYWxzIGFuZCAgZnVybml0dXJlLiBTYXlzIE5DQkkgcmVzZWFyY2ggcGFwZXIuIFNvLCAjNCBzaG91bGQgYmUgIGNvcnJlY3QuIFRoZXJlZm9yZSB0aGUgYW5zd2VyIHNob3VsZCBiZSBkLiAgIEUgNzAg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3, 4 an 5 "
      }
    },
    {
      "index" : 149,
      "question" : "With reference to India's Desert National Park, which of the following statements are correct?  1. It is spread over two districts. 2. There is no human habitation inside the Park. 3. It is one of the natural habitats of the Great Indian Bustard. Select the correct answer using the code given below; ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE0OQ==",
      "description" : "ICgtKU5vcm1hbGx5IGh1bWFuIGFjdGl2aXRpZXMgYXJlIG5vdCBhbGxvd2VkIGluICBOYXRpb25hbCAgUGFyayAgIGJ1dCAgbWFueSAgdmlsbGFnZXJzICBsaXZlZCAgaW5zaWRlICBEZXNlcnQgIE5hdGlvbmFsIHBhcmssIGFuZCB0aGV5IGRpZCBub3QgaGF2ZSBhY2Nlc3MgdG8gZXZlbiAgYmFzaWMgZmFjaWxpdHkgbGlrZSByb2FkLCBlbGVjdHJpY2l0eSBhbmQgd2F0ZXIuIDIwMTc6ICBTdXByZW1lIENvdXJ0IG9yZGVyZWQgdGhlIGdvdmVybm1lbnQgdG8gcHJvdmlkZSBzdWNoICBmYWNpbGl0aWVzIHRvIHRoZW0gU28sIzIgYXMgd3JvbmcuIEJ5IGVsaW1pbmF0aW9uIHRoZSAgYW5zd2VyIGlzIGMuICAoLSlEZXNlcnQgbmF0aW9uYWwgcGFyayBpcyBzcHJlYWQgaW4gdHdvIGRpc3RyaWN0cyBvZiAgUmFqYXN0aGFuIEphaXNhbG1lciAmQmFybWVyLiAgU28gIzEgaXMgY29ycmVjdCAgKC0pSXQgaXMgIE5hdHVyYWwgaG9tZSB0byB0aGUgR3JlYXQgSW5kaWFuIEJ1c3RhcmQuIDNyZCAgU3RhdGVtZW50IGlzIHJpZ2h0IA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 und 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 150,
      "question" : "Consider the following statements:  1. 36% of India's districts are classified as 'overexploited' or 'critical' by the Central Ground Water Authority (CGWA). 2. CGWA was formed under the Environment (Protection) Act. 3. India has the largest area under groundwater irrigation in the world. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1MA==",
      "description" : "ICgtKVRoZSBDZW50cmFsIEdyb3VuZCBXYXRlciBBdXRob3JpdHkgKENHV0EpICB3YXMgIGZvcm1lZCB1bmRlciAgdGhlIEVudmlyb25tZW50IChQcm90ZWN0aW9uKSBBY3QuMTk4NiwybmQgIHN0YXRlbWVudCBpcyBjb3JyZWN0LiAgKC0pVGhlIGNvdW50cmllcyB3aXRoIHRoZSBsYXJnZXN0IGV4dGVudCBvZiBhcmVhcyAgZXF1aXBwZWQgZm9yIGlycmlnYXRpb24gd2l0aCBncm91bmR3YXRlciwgaW4gIGFic29sdXRldGVybXMsIGFyZSBJbmRpYSAoMzkgbWlsbGlvbiBoYSksIENoaW5hICgxOSBtaWxsaW9uICBoYSkgYW5kdGhlIFVTQSAoMTcgbWlsbGlvbiBoYSkuIFNheXMgRkFPIHJlc2VhcmNoIHBhcGVyICBwdWJsaXNoZWQgaW4gMjAxMC4gU28sICMzIGlzIGNvcnJlY3QgU28gQW5zd2VyIGIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1 an 3 only "
      }
    },
    {
      "index" : 151,
      "question" : "Among the following Tiger Reserves, which one has the largest area under 'Critical Tiger Habitat'?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1MQ==",
      "description" : "ICgtKVN1bmRhcmJhbiBoYXMgQ3JpdGljYWwgVGlnZXIgSGFiaXRhdCBhcmVhIG9mIDE2OTkuNjIgc3EuICAoLSlOYWdhcmp1bnNhZ2FyLVNyaXNhaWxhbSBDb3JlLyBDcml0aWNhbCBUaWdlciBIYWJpdGF0OiAgMzcyMSBTcS4gS20gICgtKUlmIFN1bmRhcmJhbnMgY3JpdGljYWwgVGlnZXIgSGFiaXRhdCBpcyBzbWFsbGVyIHRoYW4gIE5hZ2FyanVuc2FnYXIgdGhlbiByZW1haW5pbmcgb3B0aW9ucyBhcmUgdW5saWtlbHkgdG8gIGhhdmUgYSBiaWdnZXIgc2l6ZSB0aGFuIE5hZ2FyanVuc2FnYXIgc28gYW5zd2VyIHNob3VsZCAgYmUgYy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Corbett ",
        "option2" : " Ranthambore ",
        "option3" : " Nagarjunsagar-Srisailam ",
        "option4" : " Sunderbans "
      }
    },
    {
      "index" : 152,
      "question" : "If a particular plant species is placed under Schedule VI of The Wildlife Protection Act, 1972, what is the implication?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1Mg==",
      "description" : "ICgtKVdpbGRsaWZlIFByb3RlY3Rpb24gQWN0LCAxOTcyLCBoYXMgc2l4IHNjaGVkdWxlcy4gICgtKU5vIHBlcnNvbiBpcyBhbGxvd2VkIHRvIGN1bHRpdmF0ZSBhIHNwZWNpZmllZCBwbGFudCAgbWVudGlvbmVkIGluIHNjaGVkdWxlIDYsIGV4Y2VwdCB3aXRoIGEgbGljZW5jZSBncmFudGVkICBieSB0aGUgQ2hpZWYgV2lsZCBMaWZlIFdhcmRlbi4gVGhlIHBsYW50IG1lbnRpb25lZCBpbiAgdGhlIHNpeHRoIHNjaGVkdWxlIGFyZSAgKC0pMS4gQmVkZG9tZXMnIGN5Y2FkICAoLSkyLiBCbHVlIFZhbmRhICAoLSkzLiBLdXRoICAoLSk0LiBMYWRpZXMgc2xpcHBlciBvcmNoaWRzICAoLSk1LiBQaXRjaGVyIHBsYW50ICAoLSk2LiBSZWQgVmFuZGEg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " A licence is required to cultivate that plant. ",
        "option2" : " Such a plant cannot be cultivated under any  circumstances. ",
        "option3" : " It is a Genetically Modified crop plant. ",
        "option4" : " Such a plant is invasive and harmful to the "
      }
    },
    {
      "index" : 153,
      "question" : "Which one of the following statements best describes the term 'Social Cost of Carbon'? It is a measure, in monetary value, of the  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1Mw==",
      "description" : "ICgtKUluIG1pY3JvZWNvbm9taWNzLCBTb2NpYWwgY29zdCBpcyBhIGNvbmNlcHQgIGFzc29jaWF0ZWQgd2l0aCBzb21lIHR5cGUgb2YgbmVnYXRpdmUgZXh0ZXJuYWxpdHkuIEZvciAgZXhhbXBsZSwgRmFjdG9yaWVzIGVtaXQgbGFyZ2UgYW1vdW50IG9mIHNtb2tlIGZyb20gdGhlaXIgIGNoaW1uZXlzIGludG8gdGhlIGF0bW9zcGhlcmUuIFRoaXMgbWF5IG5vdCBmaWd1cmUgaW4gdGhlICBjYWxjdWxhdGlvbiBvZiBjb3N0cyBpbiB0aGVpciByZWNvcmRzLiBCdXQgdGhlIGNvc3QgdG8gdGhlICBjb21tdW5pdHkgbWF5IGJlIGluIHRoZSBmb3JtIG9mIGFkZGl0aW9uYWwgd2FzaGluZyBiaWxscyAgZm9yIGNsb3RoZXMgYW5kIHRoZSBtb25leSBzcGVudCBieSB0aGUgY29tbXVuaXR5IG9uICBtZWRpY2FsIGJpbGxzIGV0Yy4gVGhlc2UgY29zdHMgYXJlIHNvY2lhbCBjb3N0cy4gICgtKU9FQ0QgZGVmaW5lcyBTb2NpYWwgQ29zdCBvZiBDYXJib24gYXMgdGhlIG5ldCAgcHJlc2VudCB2YWx1ZSBvZiBjbGltYXRlIGNoYW5nZSBpbXBhY3RzIG92ZXIgdGhlIG5leHQgIDEwMCB5ZWFycyAob3IgbG9uZ2VyKSBvZiBvbmUgYWRkaXRpb25hbCB0b25uZSBvZiBjYXJib24gIGVtaXR0ZWQgdG8gdGhlIGF0bW9zcGhlcmUgdG9kYXkuICAoLSlDb25zaWRlcmluZyB0aGVzZSBpbnRlcnByZXRhdGlvbnMsIGEgaXMgdGhlIGNsb3Nlc3QgIG9wdGlvbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " long-term damage done by a tonne of CO2  emissions in a given year. ",
        "option2" : " requirement of fossil fuels for a country to provide  goods and services to its citizens, based on the  burning of those fuels. ",
        "option3" : " efforts put in by a climate refugee to adapt to live in  a new place. ",
        "option4" : " contribution of an individual person to the carbon "
      }
    },
    {
      "index" : 154,
      "question" : "In the context of India, which of the following is/are considered to be practice(s) of eco-friendly agriculture? 1. Crop diversification  2. Legume intensification 3. Tensiometer use 4. Vertical farming Select the correct answer using the code given below: ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1NA==",
      "description" : "ICgtKUNyb3AgZGl2ZXJzaWZpY2F0aW9uIHJlZHVjZXMgdGhlIG5lZWQgb2YgaGVyYmljaWRlcy4gIFNvLCAjMSBpcyBjb3JyZWN0LiAgKC0pV2UgY2FuIHNhdmUgaHVnZSBxdWFudGl0eSBvZiB3YXRlciBhbmQgZW5lcmd5IGJ5ICBrbm93aW5nIHdoZW4gYW5kIGhvdyBtdWNoIHdhdGVyIGlzIHJlcXVpcmVkIGJ5IGEgIGNyb3AuIFVzZSBvZiB0ZW5zaW9tZXRlcnMgY291bGQgYmUgcmVhbGx5IGhlbHBmdWwgaW4gIHByb3ZpZGluZyBlc3RpbWF0ZXMgb2Ygc29pbCBtb2lzdHVyZS4gU28sICMzIGlzIGNvcnJlY3QuICAoLSlWZXJ0aWNhbCBmYXJtaW5nIHVzZXMgc2lnbmlmaWNhbnRseSBsZXNzIHdhdGVyIGFuZCAgcGVzdGljaWRlcyB0aGFuIHRyYWRpdGlvbmFsIGFncmljdWx0dXJhbCBtZXRob2RzLiBTbywgIzQgaXMgIGNvcnJlY3QuIFRoZXJlZm9yZSB0aGUgYW5zd2VyIHNob3VsZCBiZSAnZCcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 3 only ",
        "option3" : " 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 155,
      "question" : "With reference to Indian elephants, consider the following statements :  1. The leader of an elephant group is a female 2. The maximum gestation period can be 22 months. 3. An elephant can normally go on calving till the age of 40 years only. 4. Among the States in India, the highest elephant population is in Kerala. Which of the statements given above is/ are correct ? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1NQ==",
      "description" : "ICgtKUFzIHBlciB0aGUgMjAxNydzIGRhdGE6IEthcm5hdGFrYSBoYXMgdGhlIGhpZ2hlc3QgIG51bWJlciBvZiBlbGVwaGFudHMgKDYsMDQ5KSwgZm9sbG93ZWQgYnkgQXNzYW0gKDUsNzE5KSAgYW5kIEtlcmFsYSAoMywwNTQpLiBTbyA0dGggc3RhdGVtZW50IC0gd3JvbmcuICAoLSlJbiB0aGUgbWFqb3JpdHkgb2YgY2FzZXMgYW4gZWxlcGhhbnQgZ3JvdXAgaXMgaGVhZGVkICBieSBhIGZlbWFsZSBlbGVwaGFudCwgbmFtZWQgJ21hdHJpYXJjaCcuIFNvLCAjMSBpcyBjb3JyZWN0ICAnISBBbnN3ZXIgc2hvdWxkIGJlIGEuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 3 an 4 only "
      }
    },
    {
      "index" : 156,
      "question" : "Which of the following Protected Areas are located in Cauvery basin ?  1. Nagarhole National park 2. Papikonda National park 3. Sathyamangalam Tiger Reserve 4. Wayanad Wildlife sanctuary Select the correct answer using the code given below : ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1Ng==",
      "description" : "ICgtKUNhdXJ2ZXJ5IGJhc2luIGxpZXMgaW4gdGhlIFN0YXRlcyBvZiBUYW1pbCBOYWR1LCAgS2FybmF0YWthLCBLZXJhbGEgYW5kIFBvbmRpY2hlcnJ5LiAgKC0pUGFwaWtvbmRhIE5hdGlvbmFsIFBhcmsgaXMgaW4gQW5kaHJhIFByYWRlc2ggU28sICAjMiBpcyB3cm9uZy4gSW4gYm90aCBvZiB0aGVzZSBvcHRpb25zIHN0YXRlbWVudHMgMyBhbmQgNCAgYXJlIGNvbW1vbiBzbyB3ZSBoYXZlIHRvIGFjY2VwdCB0aGVtIGFzIGNvcnJlY3QgIHdpdGhvdXQgY2hlY2tpbmcuIEV2ZXJ5dGhpbmcgYm9pbHMgZG93biB0byB3ZWF0aGVyICBTdGF0ZW1lbnQjMSBpcyByaWdodCBvciBub3Q/ICAoLSlOYWdhcmhvbGUgTmF0aW9uYWwgUGFyayBpcyBsb2NhdGVkIGluIEthcm5hdGFrYSwgIGFuZCBpcyB0aGUgaW4gQ2F1dmVyeSBiYXNpbi4gU28sIEFuc3dlciBjLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1,2,3 an 4 "
      }
    },
    {
      "index" : 157,
      "question" : "With reference to India's biodiversity, Ceylon frogmouth, Coppersmith barbet, Gray-chinned minivet and White- throated redstart are  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1Nw==",
      "description" : "VGhlIGhpbmR1IGhhcyBjb3ZlcmVkIHNvbWUgb2YgdGhlIGJpcmRzIHNlbGVjdGl2ZWx5ICBpbiBuZXdzIGJ1dCBkaWZmaWN1bHQgdG8gcmVtZW1iZXIgaW4gcmVhbCBsaWZlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Birds ",
        "option2" : " Primates ",
        "option3" : " Reptiles ",
        "option4" : " Amphibians "
      }
    },
    {
      "index" : 158,
      "question" : "Which one of the following protected areas is well- known for the conservation of a sub-species of the Indian swamp deer (Barasinga) that thrives well in hard ground and is exclusively graminivorous?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1OA==",
      "description" : "S2FuaGEgIE5hdGlvbmFsICBQYXJrICBpbiAgTWFkaHlhICBQcmFkZXNoICBpcyAgd2VsbCAga25vd24gZm9yIHRoZSBCYXJhc2luZ2hhIG9yIHRoZSBTd2FtcCBkZWVyLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Kanha National Park ",
        "option2" : " Manas National Park ",
        "option3" : " Mudumalai Wildlife Sanctuary ",
        "option4" : " Tal Chhapar Wildlife Sanctuary "
      }
    },
    {
      "index" : 159,
      "question" : "Which of the following are the most likely places to find the musk deer in its natural habitat ?  1. Askot Wildlife Sanctuary 2. Gangotri National Park 3. Kishanpur Wildlife Sanctuary 4. Manas National Park Select the correct answer using the code given below ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdlfDE1OQ==",
      "description" : "ICgtKU11c2sgZGVlciBhcmUgZm91bmQgaW4gaGlnaCBhbHRpdHVkZSBlY29zeXN0ZW1zLCBpbiAgdGhlIGNvbGRlciBwYXJ0IG9mIEhpbWFsYXlhcy4gICgtKUtpc2hhbnB1ciBXaWxkbGlmZSBTYW5jdHVhcnkgaXMgaW4gVXR0YXIgUHJhZGVzaC4gIFNvLCAjMyBpcyB1bmxpa2VseSB0IGJlIGEgTmF0dXJhbCBoYWJpdGF0IG9mIE11c2sgZGVlci4gSW4gIGJvdGggb2YgdGhlIHJlbWFpbmluZyBvcHRpb25zIGZpcnN0IHN0YXRlbWVudCBpcyBjb21tb24uICBOb3cgYmV0d2VlbiB0aGUgR2FuZ290cmkgYW5kIE1hbmFzLCBNYW5hcyAoQXNzYW0pICBpcyBsaWtlbHkgdG8gYmUgYSBsb3dlciBhbHRpdHVkZSBwbGFjZSBzbywgQTogMSBhbmQgMiBzaG91bGQgIGJlIHRoZSBhbnN3ZXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8RW52aXJvbm1lbnQsIEVjb2xvZ3ksIEJpb2RpdmVyc2l0eSAmIENsaW1hdGUgQ2hhbmdl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Environment, Ecology, Biodiversity & Climate Change",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 and 4 only ",
        "option4" : " 1 an 4 only "
      }
    }
  ],
  "subject" : "General Science & Ecology",
  "topic" : "Environment, Ecology, Biodiversity & Climate Change",
  "year" : "0"
}
