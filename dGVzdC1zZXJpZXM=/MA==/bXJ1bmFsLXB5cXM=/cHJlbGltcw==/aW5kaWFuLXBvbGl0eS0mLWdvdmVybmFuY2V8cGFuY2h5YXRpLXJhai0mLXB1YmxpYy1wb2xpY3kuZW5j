{
  "testId" : "indian-polity-&-governance|panchyati-raj-&-public-policy",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/pyqs/mrunal-pyqs/prelims/1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which one of the following is incorrect in respect of LocalGovernment in India? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwx",
      "description" : "QWNjb3JkaW5nIHRvIDczcmQgQW1lbmRtZW50IEFjdCAxOTkzLCB1bmRlciBBcnRpY2xlIDI0M0QsIG5vdCBsZXNzIHRoYW4gMS8zcmQgaS5lLiAzMyUgc2VhdHMgc2hvdWxkIGJlIHJlc2VydmVkIGZvciB3b21lbiBpbiBsb2NhbCBib2RpZXMu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " According to the Indian Constitution, local government is not an independent tier in the federal system",
        "option2" : " 30% of the seats in local bodies are reserved for women",
        "option3" : " Local government finances are to be provided by a Commission",
        "option4" : " Elections to local bodies are to be determined by a"
      }
    },
    {
      "index" : 2,
      "question" : "What is the system of governance in the Panchayati Raj setup? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwy",
      "description" : "QWNjb3JkaW5nIHRvIDczcmQgQW1lbmRtZW50IEFjdCwgdGhyZWUtdGllciBzeXN0ZW0gb2YgUGFuY2hheWF0cyBleGlzdHM6IFZpbGxhZ2UgbGV2ZWwsIERpc3RyaWN0IFBhbmNoYXlhdCBhdCB0aGUgZGlzdHJpY3QgbGV2ZWwsIHRoZSBpbnRlcm1lZGlhdGUgUGFuY2hheWF0IHdoaWNoIHN0YW5kcyBiZXR3ZWVuIHRoZSB2aWxsYWdlIGFuZCBEaXN0cmljdCBQYW5jaGF5YXRzIGluIHRoZSBTdGF0ZXMgd2hlcmUgdGhlIHBvcHVsYXRpb24gaXMgYWJvdmUgMjAgTGFraHMu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Single tier structure of local self government at the village level .",
        "option2" : " Two tier system of local self government at the village and block levels",
        "option3" : " Three tier structure of local self government at the village, block and district levels",
        "option4" : " Four tier system of local self government at the village"
      }
    },
    {
      "index" : 3,
      "question" : "Panchayat Raj was first introduced in India in October, 1959in: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwz",
      "description" : "UGFuY2hheWF0aSBSYWogU3lzdGVtIHdhcyBmaXJzdCBpbnRyb2R1Y2VkIGluIE5hZ2F1ciBkaXN0cmljdCBvZiBSYWphc3RoYW4gb24gT2N0b2JlciAyLCAxOTU5IGZvbGxvd2VkIGJ5IEFuZGhyYSBQcmFkZXNoIGluIDE5NTku",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Rajasthan ",
        "option2" : " Tamil Nadu",
        "option3" : " Kerala ",
        "option4" : " Karnataka"
      }
    },
    {
      "index" : 4,
      "question" : "In the new Panchayati Raj Bill enacted in 1993, there areseveral fresh provisions deviating from the past. Whichone of the following is not one such provisions? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXw0",
      "description" : "UHJvdmlzaW9uIGdpdmVuIGluIG9wdGlvbiAoZCkgaXMgbm90IGluY2x1ZGVkIHVuZGVyIDczcmQgQW1lbmRtZW50IEFjdCAxOTkzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A number of added responsibilities in the area of agriculture, rural development, primary education and social forestry among other",
        "option2" : " Elections being made mandatory for all posts at the time they are due",
        "option3" : " A statutory representation for women in the panchayats, upto a third of the strength",
        "option4" : " Regular remuneration to the panchayat members, so"
      }
    },
    {
      "index" : 5,
      "question" : "A college student desires to get elected to the MunicipalCouncil of his city. The validity of his nomination woulddepend on the important condition, among others, that:",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXw1",
      "description" : "TmFtZSBpbiB0aGUgdm90ZXJzIGxpc3QgaXMgdGhlIGltcG9ydGFudCBjb25kaXRpb24u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " he obtains permission from the principal of his college",
        "option2" : " he is a member of a political party",
        "option3" : " his name figures in the voters' list",
        "option4" : " he files a declaration owing allegiance to the"
      }
    },
    {
      "index" : 6,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists:  List-I List-II(Local bodies)  (States as in 1999)A. Zila Parishads at 1. Andhra Pradeshthe sub-divisionallevelB. Mandal Praja Parishad 2. AssamC. Tribal Councils 3. MizoramD. Absence of Village 4. MeghalayaPanchayatsCodes :",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXw2",
      "description" : "TG9jYWwgYm9kaWVzIFN0YXRlcyBhcyBpbiAxOTk5IFppbGEgUGFyaXNhZCBhdCB0aGUgc3ViLSBkaXZpc2lvbmFsIGxldmVsIEFzc2FtIE1hbmRhbCBQcmFqYSBQYXJpc2hhZCBBbmRocmEgUHJhZGVzaCBUcmliYWwgQ291bmNpbHMgTWVnaGFsYXlhIEFic2VuY2Ugb2YgdmlsbGFnZSAgcGFuY2hheWF0IE1pem9yYW0g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A-2, B-1, C-4, D-3 ",
        "option2" : " A-1, B-2, C-4, D-3",
        "option3" : " A-3, B-2, C-1, D-4 ",
        "option4" : " A-2, B-1, C-3, D-4"
      }
    },
    {
      "index" : 7,
      "question" : "If a Panchayat is dissolved, elections are to be held within:",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXw3",
      "description" : "RHVyYXRpb24gb2YgUGFuY2hheWF0cyBpcyBmaXZlIHllYXIuIEZyZXNoIGVsZWN0aW9uIHRvIGNvbnN0aXR1dGUgYSBQYW5jaGF5YXQgc2hhbGwgYmUgY29tcGxldGVkIGJlZm9yZSB0aGUgZXhwaXJ5IG9mIGl0cyB0ZXJtOyBvciBpbiBjYXNlIG9mIGRpc3NvbHV0aW9uIGZyZXNoIGVsZWN0aW9uIGlzIHRvIGJlIGNvbmR1Y3RlZCBiZWZvcmUgdGhlIGV4cGlyeSBvZiBhIHBlcmlvZCBvZiA2IG1vbnRocyBmcm9tIHRoZSBkYXRlIG9mIGl0cyBkaXNzb2x1dGlvbi4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 month ",
        "option2" : " 3 months",
        "option3" : " 6 months ",
        "option4" : " 1 year"
      }
    },
    {
      "index" : 8,
      "question" : "In India, the first Municipal Corporation was set up in whichone among the following? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXw4",
      "description" : "SW4gMTY4OCwgdGhlIGZpcnN0IE11bmljaXBhbCBDb3Jwb3JhdGlvbiBvZiBJbmRpYSB3YXMgc2V0IHVwIGluIE1hZHJhcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Calcutta ",
        "option2" : " Madras",
        "option3" : " Bombay ",
        "option4" : " Delhi"
      }
    },
    {
      "index" : 9,
      "question" : "The Constitution (Seventy-Third Amendment) Act, 1992,which aims at promoting the Panchayati Raj Institutions inthe country, provides for which of the following? 1. Constitution of District Planning Committees.2. State Election Commissions to conduct all panchayatelections.3. Establishment of State Finance Commission.Select the correct answer using the codes given below:",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8OQ==",
      "description" : "RGlzdHJpY3QgcGxhbm5pbmcgY29tbWl0dGVlIGNvbWVzIHVuZGVyIDc0dGggQW1lbmRtZW50IG5vdCBpbiA3M3JkIEFtZW5kbWVudC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 10,
      "question" : "In the areas covered under the Panchayat (Extension to theScheduled Areas) Act, 1996, what is the role/power of GramSabha? 1. Gram Sabha has the power to prevent alienation ofland in the Scheduled Areas.2. Gram Sabha has the ownership of minor forest produce.3. Recommendation of Gram Sabha is required for grantingprospecting licence or mining lease for any mineral inthe Scheduled Areas.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MTA=",
      "description" : "UmVjb21tZW5kYXRpb24gb2YgR3JhbSBzYWJoYSBvciBQYW5jaGF5YXQgYXQgdGhlIGFwcHJvcHJpYXRlIGxldmVsIHNoYWxsIGJlIG1hbmRhdG9yeSBmb3IgZ3JhbnQgb2YgcHJvc3BlY3RpbmcgbGljZW5jZSBvciBtaW5pbmcgbGVhc2UgZm9yIG1pbm9yIG1pbmVyYWxzIChub3QgZm9yIGFueSBtaW5lcmFscykgaW4gdGhlIHNoZWR1bGVkIGFyZWFzLiBUaGVyZWZvcmUgc3RhdGVtZW50IDMgaXMgZmFsc2Uu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : "    1 only ",
        "option2" : "    1 and 2 only",
        "option3" : "    2 and 3 only ",
        "option4" : "    1, 2 an 3"
      }
    },
    {
      "index" : 11,
      "question" : "Under the Scheduled Tribes and Other Traditional ForestDwellers (Recognition of Forest Rights) Act, 2006 who shallbe the authority to initiate the process for determining thenature and extent of individual or community forest rights orboth? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MTE=",
      "description" : "U2VjdGlvbiBDIG9mIHRoZSBGb3Jlc3QgRHdlbGxlcnd3cyBBY3QgcHJvdmlkZXMgYSB0cmFuc3BhcmVudCB0aHJlZSBzdGVwIHByb2NlZHVyZSBmb3IgZGVjaWRpbmcgb24gd2hvIGdldHMgcmlnaHRzLiBGaXJzdGx5LCB0aGUgR3JhbSBTYWJoYSBtYWtlcyBhIHJlY29tbWVuZGF0aW9uLSBpLmUsIHdobyBoYXMgYmVlbiBjdWx0aXZhdGluZyBsYW5kIGZvciBob3cgbG9uZywgd2hpY2ggbWlub3IgZm9yZXN0IHByb2R1Y2UgaXMgY29sbGVjdGVkOyBldGMuIFRoZSBHcmFtIFNhYmhhIHBsYXlzIHRoaXMgcm9sZSBiZWNhdXNlIGl0IGlzIGEgcHVibGljIGJvZHkgd2hlcmUgYWxsIHBlb3BsZSBwYXJ0aWNpcGF0ZSBhbmQgaGVuY2UgaXMgZnVsbHkgZGVtb2NyYXRpYyBhbmQgdHJhbnNwYXJlbnQuIFRoZSBHcmFtIFNhYmhhJ3MgcmVjb21tZW5kYXRpb24gZ29lcyB0aHJvdWdoIHR3byBzdGFnZXMgb2Ygc2NyZWVuaW5nIGNvbW1pdHRlZXMtIHRoZSBUYWx1a2EgYW5kIHRoZSBEaXN0cmljdCBsZXZlbHMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " State Forest Department",
        "option2" : " District Collector / Deputy Commissioner",
        "option3" : " Tahsildar / Block Development Officer / Mandal Revenue Officer",
        "option4" : " Gram Sabha"
      }
    },
    {
      "index" : 12,
      "question" : "The Government enacted the Panchayat Extension toScheduled Areas (PESA) Act in 1996. Which one of thefollowing is not identified as its objective? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MTI=",
      "description" : "VGhlIHNhbGllbnQgZmVhdHVyZSBvZiB0aGUgUGFuY2hheWF0cyAoRXh0ZW5zaW9uIHRvIHRoZSBTY2hlZHVsZWQgQXJlYXMpIEFjdCwgMTk5NiAoUEVTQSkgYW5kIHRoZSBtb2RhbGl0aWVzIHdvcmtlZCBvdXQgdG8gZ3JhbnQgcmlnaHRzIHRvIHRyaWJhbHMgaW4gdGhlIGNvdW50cnkgYXJlOiAoaSkgTGVnaXNsYXRpb24gb24gUGFuY2hheWF0cyBzaGFsbCBiZSBpbiBjb25mb3JtaXR5IHdpdGggdGhlIGN1c3RvbWFyeSBsYXcsIHNvY2lhbCBhbmQgcmVsaWdpb3VzIHByYWN0aWNlcyBhbmQgdHJhZGl0aW9uYWwgbWFuYWdlbWVudCBwcmFjdGljZXMgb2YgY29tbXVuaXR5IHJlc291cmNlczsgKGlpKSBIYWJpdGF0aW9uIG9yIGEgZ3JvdXAgb2YgaGFiaXRhdGlvbnMgb3IgYSBoYW1sZXQgb3IgYSBncm91cCBvZiBoYW1sZXRzIGNvbXByaXNpbmcgYSBjb21tdW5pdHkgYW5kIG1hbmFnaW5nIGl0cyBhZmZhaXJzIGluIGFjY29yZGFuY2Ugd2l0aCB0cmFkaWF0aW9ucyBhbmQgY3VzdG9tczsgYW5kIHNoYWxsIGhhdmUgYSBzZXBhcmF0ZSBHcmFtIFNhYmhhLiAoaWlpKSBFdmVyeSBHcmFtIFNhYmhhIHRvIHNhZmVndWFyZCBhbmQgcHJlc2VydmUgdGhlIHRyYWRpdGlvbnMgYW5kIGN1c3RvbXMgb2YgcGVvcGxlLCB0aGVpciBjdWx0dXJhbCBpZGVudGl0eSwgY29tbXVuaXR5IHJlc291cmNlcyBhbmQgdGhlIGN1c3RvbWFyeSBtb2RlIG9mIGRpc3B1dGUgcmVzb2x1dGlvbi4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " To provide self-governance",
        "option2" : " To recognize traditional rights",
        "option3" : " To create autonomous regions in tribal areas",
        "option4" : " To free tribal people from exploitation"
      }
    },
    {
      "index" : 13,
      "question" : "The fundamental object of Panchayati Raj system is to ensurewhich among the following ? (1) People's participation in development(2) Political accountability(3) Democratic decentralization(4) Financial mobilizationSelect the correct answer using the code given below.",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MTM=",
      "description" : "RmluYW5jaWFsIG1vYmlsaXphdGlvbiBpcyBub3QgdGhlIGZ1bmRhbWVudGFsIG9iamVjdGl2ZSBvZiBQUmxzLiBFdmVuIHRob3VnaCBQYW5jaGF5YXRzIGhhdmUgdGhlIHBvd2VycyB0byBjb2xsZWN0IHJldmVudWUuIFBvbGl0aWNhbCBhY2NvdW50YWJpbGl0eSByZWZlcnMgdG8gdGhlIHJlc3BvbnNpYmlsaXR5IG9yIG9ibGlnYXRpb24gb2YgZ292ZXJubWVudCBvZmZpY2lhbHMgKGJvdGggcG9saXRpY2lhbnMgYW5kIGNpdmlsIHNlcnZhbnRzKSB0byBhY3QgaW4gdGhlIGJlc3QgaW50ZXJlc3RzIG9mIHNvY2lldHkgb3IgZmFjZSBjb25zZXF1ZW5jZXMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 4 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements: 1. The minimum age prescribed for any person to be amember of Panchayat is 25 years.2. A Panchayat reconstituted after prematuredissolution continues only for the remainder period.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfFBhbmNoeWF0aSBSYWogJiBQdWJsaWMgUG9saWN5fDE0",
      "description" : "VGhpcyBxdWVzdGlvbiBjYW4gYmUgZGlyZWN0bHkgc29sdmVkIGZyb20gRGlzaGEgcHVibGljYXRpb24ncyBQb2xpdHkgY29tcGVuZGl1bSwgcGFnZSBQLTEyMS4gKC0pVGhlIG1pbmltdW0gYWdlIHRvIGNvbnRlc3QgUGFuY2hheWF0IGVsZWN0aW9ucyBpcyAyMSB5ZWFycy4gKC0pMm5kIHN0YXRlbWVudCBpcyBjb3JyZWN0LiBCLiBQdWJsaWMgUG9saWN5",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfFBhbmNoeWF0aSBSYWogJiBQdWJsaWMgUG9saWN5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following are the objectives of the Commissionfor Agricultural Costs and Prices (CACP)?              1. To stabilize agricultural prices2. To ensure meaningful real income level to the farmers3. To protect the interest of the consumers by providingessential agricultural commodities at reasonable ratesthrough public distribution system4. To ensure maximum price for the farmerCodes:",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwxNQ==",
      "description" : "VGhlIG9iamVjdGl2ZSBvZiB0aGUgcHJpY2UgcG9saWN5IHVuZGVybHlpbmcgTVNQIGlzIHRvIGJyaW5nIGEgYmFsYW5jZWQgYW5kIGludGVncmF0ZWQgcHJpY2Ugc3RydWN0dXJlIGZvciBhZ3JpY3VsdHVyYWwgY29tbW9kaXRpZXMgYW5kIG5vdCB0byBlbnN1cmUgbWF4aW11bSBwcmljZSBmb3IgdGhlIGZhcm1lcnMu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1, 2 and 4",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 2,  3 an 4"
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements regarding the NationalHuman Rights Commission of India:1. Its Chairman must be a retired Chief Justice of India2. It exists in each state as State Human RightsCommission3. Its powers are only recommendatory in nature4. It is mandatory to appoint a woman as a member of thecommissionWhich of the above statements are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwxNg==",
      "description" : "SGVyZSB0aGUgcG9zc2libGUgYW5zd2VyIGlzIChkKSBiZWNhdXNlIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyBpdCBpcyBub3QgbWFuZGF0b3J5IHRoYXQgZWFjaCBzdGF0ZSBtdXN0IGhhdmUgYSBTdGF0ZSBIdW1hbiBSaWdodHMgQ29tbWlzc2lvbi4gQnV0IHN0YXRlbWVudCA0IGlzIGNvcnJlY3QgYXMgQ2hhaXJwZXJzb24gb2YgdGhlIE5hdGlvbmFsIENvbW1pc3Npb24gb24gV29tZW4gaXMgYWxzbyB0aGUgbWVtYmVyIG9mIE5IUkMu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2 and 4",
        "option3" : " 2 and 3 ",
        "option4" : " 1, 3 an  4"
      }
    },
    {
      "index" : 17,
      "question" : "Which one of the following legislations does not deal withthe protection of environment? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwxNw==",
      "description" : "VGhlIHdhdGVyIChjZXNzKSBBY3QsIDE5NzcgcHJvdmlkZXMgZm9yIHRoZSBsZXZ5IGFuZCBjb2xsZWN0aW9uIG9mIGEgY2VzcyBvbiB3YXRlciBjb25zdW1lZCBieSBwZXJzb25zIGNhcnJ5aW5nIG9uIGNlcnRhaW4gaW5kdXN0cmllcyBhbmQgYnkgbG9jYWwgYXV0aG9yaXRpZXMsIHdpdGggYSB2aWV3IHRvIGF1Z21lbnQgdGhlIHJlc291cmNlcyBvZiB0aGUgQ2VudHJhbCBCb2FyZCBhbmQgdGhlIFN0YXRlIEJvYXJkcyBmb3IgdGhlIHByZXZlbnRpb24gYW5kIGNvbnRyb2wgb2Ygd2F0ZXIgcG9sbHV0aW9uLiBUaGUgUHVibGljIExpYWJpbGl0eSBJbnN1cmFuY2UgQWN0LCAxOTkxIHByb3ZpZGVzIGZvciBwdWJsaWMgbGlhYmlsaXR5IGluc3VyYW5jZSBmb3IgdGhlIHB1cnBvc2Ugb2YgcHJvdmlkaW5nIGltbWVkaWF0ZSByZWxpZWYgdG8gIHRoZSBwZXJzb25zIGFmZmVjdGVkIGJ5IGFjY2lkZW50IG9jY3VycmluZyB3aGlsZSBoYW5kbGluZyBhbnkgaGF6YXJkb3VzICBzdWJzdGFuY2UgYW5kIGZvciBtYXR0ZXJzIGNvbm5lY3RlZCB0aGVyZXdpdGggb3IgaW5jaWRlbnRhbCB0aGVyZXRvLiAxOC4gKGIpIFB1Ymxpc2hlciBQdWJsaWNhdGlvbiBNaW5pc3RyeSBvZiBJbmR1c3RyeSBXaG9sZXNhbGUgUHJpY2UgSW5kaWEgIENlbnRyYWwgc3RhdGlzdGljYWwgIG9yZ2FuaXphdGlvbiAgTmF0aW9uYWwgQWNjb3VudHMgU3RhdGlzdGljcyBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgRWNvbm9taWMgU3VydmV5ICBNaW5pc3RyeSBvZiBGaW5hbmNlIFJlcG9ydCBvbiBDdXJyZW5jeSBhbmQgIEZpbmFuY2Ug",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The Water (Cess) Act, 1977",
        "option2" : " The Forest (Conservation) Act, 1980",
        "option3" : " The Public Liability Insurance Act, 1991",
        "option4" : " The Port Laws Amendment Act, 1997"
      }
    },
    {
      "index" : 19,
      "question" : "The Consultative Committee of Members of Parliament forRailway Zones is constituted by the:                           ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwxOQ==",
      "description" : "TWFpbiBwdXJwb3NlIG9mIHRoZXNlIENvbW1pdHRlZXMgaXMgdG8gcHJvdmlkZSBhIGZvcnVtIGZvciBpbmZvcm1hbCBkaXNjdXNzaW9ucyBiZXR3ZWVuIHRoZSBHb3Zlcm5tZW50IGFuZCBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgb24gcG9saWNpZXMgYW5kIHByb2dyYW1tZXMgb2YgdGhlIEdvdmVybm1lbnQgYW5kIHRoZSBtYW5uZXIgb2YgdGhlaXIgaW1wbGVtZW50YXRpb24u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " President of India",
        "option2" : " Ministry of Railways",
        "option3" : " Ministry of Parliament Affairs",
        "option4" : " Ministry of Transport"
      }
    },
    {
      "index" : 20,
      "question" : "Which one of the following statements is NOT correct?",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyMA==",
      "description" : "TWFkaHlhIFByYWRlc2ggcHVibGlzaGVzIGxhcmdlc3QgbnVtYmVyIG9mIG5ld3NwYXBlcnMgaW4gSW5kaWEu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The Press Council of India is an autonomous quasi- judicial body established under an Act of the Parliament.",
        "option2" : " The Press Information Bureau provides accreditation to media person so as to have easy access to information from government sources.",
        "option3" : " Among all the states of India, Maharashtra publishes the largest number of newspaper.",
        "option4" : " Press Trust of India is the largest news agency in the"
      }
    },
    {
      "index" : 21,
      "question" : "With reference to Indian public finance, consider thefollowing statements: 1. Disbursements from Public Accounts of India aresubject to the Vote of the Parliament2. The Indian Constitution provides for the establishmentof a Consolidated Fund, a Public Account and aContingency Fund for each State3. Appropriations and disbursements under the RailwayBudget are subject to the same form of parliamentarycontrol as other appropriations and disbursementsWhich of the statements given above are correct?",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyMQ==",
      "description" : "VGhlIEluZGlhbiBDb25zdGl0dXRpb24gcHJvdmlkZXMgZm9yIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgQ29uc29saWRhdGVkIEZ1bmQgYW5kIGEgUHVibGljIEFjY291bnQgdW5kZXIgQXJ0aWNsZSAyNjYgYW5kIGEgQ29udGluZ2VuY3kgRnVuZCBmb3IgZWFjaCBTdGF0ZSB1bmRlciBBcnRpY2xlIEhJTlRTICYgU09MVVRJT05TIEUgQiBEIF84IDM0IDIgUGFuY2hheWF0aSBSYWogJiBQdWJsaWMgUG9saWN5ICAgMjY3LiBEaXNidXJzZW1lbnRzIGZyb20gUHVibGljIEFjY291bnRzIG9mIEluZGlhIGFyZSBub3Qgc3ViamVjdCB0byBhIFZvdGUgb2YgUGFybGlhbWVudC4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 22,
      "question" : "The Archaeological Survey of India is an attached office ofthe Department/Ministry of : ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyMg==",
      "description" : "VGhlIEFyY2hhZW9sb2dpY2FsIFN1cnZleSBvZiBJbmRpYSwgZXN0YWJsaXNoZWQgaW4gMTg2MSBpcyBhIGRlcGFydG1lbnQgb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgYXR0YWNoZWQgdG8gdGhlIE1pbmlzdHJ5IG9mIEN1bHR1cmUuIEFTSSBpcyByZXNwb25zaWJsZSBmb3IgYXJjaGFlb2xvZ2ljYWwgc3R1ZGllcyBhbmQgdGhlIHByZXNlcnZhdGlvbiBvZiBhcmNoYWVvbG9naWNhbCBoZXJpdGFnZSBvZiB0aGUgY291bnRyeSBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHZhcmlvdXMgYWN0cyBvZiB0aGUgSW5kaWFuIFBhcmxpYW1lbnQu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Culture",
        "option2" : " Tourism",
        "option3" : " Science and Technology",
        "option4" : " Human Resource Development"
      }
    },
    {
      "index" : 23,
      "question" : "Assertion (A) : The Central Rural Sanitation Programmewas launched in 1986 to improve the quality of life of ruralpeople in India.Reason (R) : Rural sanitation is a subject in the ConcurrentList in the Constitution of India.In the context of above two statements, which one of thefollowing is correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyMw==",
      "description" : "UnVyYWwgc2FuaXRhdGlvbiBpcyBub3QgYSBzdWJqZWN0IGluIHRoZSBDb25jdXJyZW50IExpc3QuIFB1YmxpYyBIZWFsdGggYW5kIFNhbml0YXRpb24gY29tZXMgdW5kZXIgdGhlIFN0YXRlIExpc3QuIFBlcnNvbmFsIGFuZCBmb29kIGh5Z2llbmUgaGF2ZSBiZWVuIG1ham9yIGNhdXNlIG9mIG1hbnkgZGlzZWFzZXMgaW4gZGV2ZWxvcGluZyBjb3VudHJpZXMuIEl0IHdhcyBpbiB0aGlzIGNvbnRleHQgdGhhdCB0aGUgY2VudHJhbCBSdXJhbCBTYW5pdGF0aW9uICBQcm9ncmFtbWVyIChDUlNQKSB3YXMgbGF1bmNoZWQgaW4gMTk4Ni4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A.",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A.",
        "option3" : " A is true but R is false. ",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following: 1. Disputes with mobile cellular companies2. Motor accident cases3. Pension casesFor which of the above are Lok Adalats held?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyNA==",
      "description" : "TmF0aW9uYWwgTGVnYWwgU2VydmljZXMgQXV0aG9yaXR5IChOQUxTQSkgYWxvbmcgd2l0aCBvdGhlciBMZWdhbCBTZXJ2aWNlcyBJbnN0aXR1dGlvbnMgY29uZHVjdHMgTG9rIEFkYWxhdHMuIExvayBBZGFsYXQgaXMgb25lIG9mIHRoZSBhbHRlcm5hdGl2ZSBkaXNwdXRlIHJlZHJlc3NhbCBtZWNoYW5pc21zLCBpdCBpcyBhIGZvcnVtIHdoZXJlIGRpc3B1dGVzIC8gY2FzZXMgcGVuZGluZyBpbiB0aGUgY291cnQgb2YgbGF3IG9yIGF0IHByZS1saXRpZ2F0aW9uIHN0YWdlIGFyZSBzZXR0bGVkIC8gY29tcHJvbWlzZWQgYW1pY2FibHkuIExvayBBZGFsYXRzIGhhdmUgYmVlbiBnaXZlbiBzdGF0dXRvcnkgc3RhdHVzIHVuZGVyIHRoZSBMZWdhbCBTZXJ2aWNlcyBBdXRob3JpdGllcyBBY3QsIDE5ODcuIFVuZGVyIHRoZSBzYWlkIEFjdCwgdGhlIGF3YXJkIChkZWNpc2lvbikgbWFkZSBieSB0aGUgTG9rIEFkYWxhdHMgaXMgZGVlbWVkIHRvIGJlIGEgZGVjcmVlIG9mIGEgY2l2aWwgY291cnQgYW5kIGlzIGZpbmFsIGFuZCBiaW5kaW5nIG9uIGFsbCBwYXJ0aWVzIGFuZCBubyBhcHBlYWwgYWdhaW5zdCBzdWNoIGFuIGF3YXJkIGxpZXMgYmVmb3JlIGFueSBjb3VydCBvZiBsYXcuIElmIHRoZSBwYXJ0aWVzIGFyZSBub3Qgc2F0aXNmaWVkIHdpdGggdGhlIGF3YXJkIG9mIHRoZSBMb2sgQWRhbGF0IHRob3VnaCB0aGVyZSBpcyBubyBwcm92aXNpb24gZm9yIGFwcGVhbCBhZ2FpbnN0IHN1Y2ggYW4gYXdhcmQsIGJ1dCB0aGV5IGFyZSBmcmVlIHRvIGluaXRpYXRlIGxpdGlnYXRpb24gYnkgYXBwcm9hY2hpbmcgdGhlIGNvdXJ0IG9mIGFwcHJvcHJpYXRlIGp1cmlzZGljdGlvbiBieSBmaWxsaW5nIGEgY2FzZSBieSBmb2xsb3dpbmcgdGhlIHJlcXVpcmVkIHByb2NlZHVyZSwgaW4gZXhlcmNpc2Ugb2YgdGhlaXIgcmlnaHQgdG8gbGl0aWdhdGUu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements: I. There is no provision in the Constitution of India toencourage equal pay for equal work for both men andwomen.EBD_8342Panchayati Raj & Public Policy  2. The Constitution of India does not define backwardclasses.Which of the statement(s) given above is/are correct?",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyNQ==",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIGVxdWFsIHBheSBmb3IgZXF1YWwgd29yayBmb3IgYm90aCBtZW4gYW5kIHdvbWVuIGlzIHByb3ZpZGVkIHVuZGVyIEFydGljbGUgMzkoZCkgaW4gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgdGhlIFN0YXRlIFBvbGljeSB1bmRlciBQYXJ0IElWIG9mIHRoZSBDb25zdGl0dXRpb24uIFVuZGVyIEFydGljbGUgLSAzNDAgb2YgdGhlIEluZGlhbiBjb25zdGl0dXRpb24sIGl0IGlzIG9ibGlnYXRvcnkgZm9yIHRoZSBnb3Zlcm5tZW50IHRvIHByb21vdGUgdGhlIHdlbGZhcmUgb2YgdGhlIG90aGVyIEJhY2t3YXJkIGNsYXNzZXMgKE9CQykgLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " I only ",
        "option2" : " 2 only",
        "option3" : " Both I and 2 ",
        "option4" : " Neither I nor 2"
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements: 1. The nation-wide scheme of the National Child LabourProjects (NCLP) is run by the Union Ministry of SocialJustice and Empowerment.2. Gurupadswamy Committee dealt with the issues of childlabour.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeXwyNg==",
      "description" : "TmF0aW9uYWwgQ2hpbGQgTGFib3VyIFByb2plY3QgKE5DTFApIFNjaGVtZSB3YXMgbGF1bmNoZWQgYnkgdGhlIGdvdmVybm1lbnQgb2YgSW5kaWEgaW4gMTk4OCBmb3IgcmVoYWJpbGl0YXRpb24gb2YgQ2hpbGQgTGFib3VyLlRoZSBzY2hlbWUgZm9jdXNlcyBvbiAoLSlBbGwgdGhlIGNoaWxkIGxhYm91cnMgYmVsb3cgdGhlIGFnZSBvZiAxNCB5ZWFzLCBpZGVudGlmaWVkIGluIHRoZSB0YXJnZXQgYXJlYS4gKC0pQWxsIHRoZSBhZG9sZXNjZW50IGxhYm91cnMgYmVsb3cgdGhlIGFnZSBvZiAxOCB5ZWFycywgb2NjdXBpZWQgaW4gaGF6YXJkb3VzIG9jY3VwYXRpb25zIG9yIHByb2Nlc3Nlcy4gKC0pRmFtaWxpZXMgb2Ygc3VjaCBjaGlsZHJlbiBtZW50aW9uZWQgaW4gdGhlIGFib3ZlIHBvaW50cy4gR3VydXBhZGFzd2FteSBDb21taXR0ZWUgZGVhbHQgd2l0aCB0aGUgIGlzc3VlcyBvZiBjaGlsZCBsYWJvdXIu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxQYW5jaHlhdGkgUmFqICYgUHVibGljIFBvbGljeQ==",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements :In India, a Metropolitan Planning Committee :1. is constituted under the provisions of the Constitutionof India.2. prepares the draft development plans for metropolitanarea.3. has the sole responsibility for implementing Governmentsponsored schemes in the metropolitan area.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8Mjc=",
      "description" : "QXJ0aWNsZSAyNDNaRSAtIENvbW1pdHRlZSBvbiBNZXRyb3BvbGl0YW4gUGxhbm5pbmcgZG9lcyBub3QgaGF2ZSBhIHNvbGUgcmVzcG9uc2liaWxpdHkgZm9yIGltcGxlbWVudGluZyBHb3Zlcm5tZW50ICBzcG9uc29yZWQgc2NoZW1lcyBpbiBtZXRyb3BvbGl0YW4gYXJlYS4gTWV0cm9wb2xpdGFuIHBsYW5uaW5nIGNvbW1pdHRlZSBpcyBjb25zdGl0dXRlZCB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgY29uc3RpdHV0aW9uIG9mIEluZGlhLiBBY2NvcmRpbmcgdG8gdGhlIGNvbnN0aXR1dGlvbiBvZiBJbmRpYSwgZXZlcnkgTWV0cm9wb2xpdGFuIGFyZWEgc2hhbGwgaGF2ZSBhIE1ldHJvcG9saXRhbiBwbGFubmluZyBjb21taXR0ZWUgdG8gcHJlcGFyZSBhIGRyYWZ0IGRldmVsb3BtZW50IHBsYW4u",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements: The parliamentary Committee on public accounts1. consists of not more than 25 Members of the Lok Sabha2. scrutinizes appropriation and finance accounts of theGovernment3. examines the report of the Comptroller and AuditorGeneral of India.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8Mjg=",
      "description" : "QXQgcHJlc2VudCB0aGUgUHVibGljIEFjY291bnRzIGNvbW1pdHRlZSBjb25zaXN0cyBvZiAyMiBtZW1iZXJzICgxNSBmcm9tIHRoZSBMb2sgU2FiaGEgYW5kIDcgZnJvbSB0aGUgUmFqeWEgU2FiaGEuIFRoZSBmdW5jdGlvbiBvZiB0aGUgY29tbWl0dGVlIGlzIDEuIFRvIGV4YW1pbmUgdGhlIGFubnVhbCBhdWRpdCByZXBvcnRzIG9mIHRoZSBjb21wdHJvbGxlciBhbmQgYXVkaXRvciBnZW5lcmFsIG9mIEluZGlhIChDQUcpLCB3aGljaCBhcmUgbGFpZCBiZWZvcmUgdGhlIFBhcmxpYW1lbnQgYnkgdGhlIFByZXNpZGVudC4gMi4gVG8gZXhhbWluZSB0aGUgYXBwcm9wcmlhdGlvbiBhY2NvdW50cyBhbmQgdGhlIGZpbmFuY2UgYWNjb3VudHMgb2YgdGhlIFVuaW9uIGdvdmVybm1lbnQgYW5kIGFueSBvdGhlciBhY2NvdW50cyBsYWlkIGJlZm9yZSB0aGUgTG9rLVNhYmhhLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 29,
      "question" : "Rashtriya Garima Abhiyaan' is a national campaign to",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfFBhbmNoeWF0aSBSYWogJiBQdWJsaWMgUG9saWN5fDI5",
      "description" : "KGkpIEl0IGlzIGEgY2FtcGFpZ24gZm9yIGVyYWRpY2F0aW9uIG9mIGluaHVtYW4gcHJhY3RpY2Ugb2YgbWFudWFsIHNjYXZlbmdpbmcgYW5kIGNvbXByZWhlbnNpdmUgcmVoYWJpbGl0YXRpb24gb2YgbWFudWFsIHNjYXZlbmdlcnMgaW4gSW5kaWEuIEFzaGlmIFNoYWlraCBpcyB3ZWxsIGtub3duIGZvciBoaXMgcm9sZSBpbiB0aGUgY2FtcGFpZ24gKFJhc2hhdHJpeWEgR2FyaW1hIEFiaGl5YW4pIHRocm91Z2ggdmFyaW91cyBjYW1wYWlnbnMgb2YgSmFuIFNhaGFzLiAoaWkpIFJhc2h0cml5YSBHYXJpbWEgQWJoaXlhYW4gaXMgYW4gTkdPLWxlZCBtb3ZlbWVudCBmb3IgbWFudWFsIHNjYXZlbmdlcnMuIFJlZjogVGhlIEhpbmR1IG5ld3NwYXBlcg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfFBhbmNoeWF0aSBSYWogJiBQdWJsaWMgUG9saWN5",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " rehabilitate the homeless and destitute persons and provide them with suitable sources of livelihood",
        "option2" : " release the sex workers from their practice and provide them with alternative sources of livelihood",
        "option3" : " eradicate the practice of manual scavenging and rehabilitate the manual scavengers",
        "option4" : " release the bonded labourers from their bondage and"
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements about particularlyVulnerable Tribal Groups (PVTGs) in India: 1. PVTGs reside in 18 states and one union Territory.2. A stagnant or declining population is one of thecriteria for determining PVTG status.3. There are 92 PVTGs officially notified in the countryso far.4. Irular and Konda Reddi tribes are included in the list ofPVTGs.Which of the statements given above are correct?",
      "questionId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MzA=",
      "description" : "NzUgdHJpYmFsIGdyb3VwcyBoYXZlIGJlZW4gY2F0ZWdvcml6ZWQgY2F0ZWdvcml6ZWQgYnkgTWluaXN0cnkgb2YgSG9tZSBBZmZhaXJzIGFzIFBhcnRpY3VsYXJseSBWdWxuZXJhYmxlIFRyaWJhbCBHcm91cHMgKFBWVEcpcy4gUFZUR3MgcmVzaWRlIGluIDE4IFN0YXRlcyBhbmQgVVQgb2YgQSZOIElzbGFuZHMuIFNheXMgVHJpYmFsIE1pbmlzdHJ5IHdlYnNpdGUuIFNvLCAjMSBpcyByaWdodCBidXQgIzMgaXMgd3JvbmcuIFRoaXMgZWxpbWluYXRlcyBhbGwgb3B0aW9ucyBleGNlcHQgYy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1,2 and 3 ",
        "option2" : " 2,3 and 4",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 1,3 an 4"
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements: 1. The United Nations Convention against Corruption(UNCAC) has a \"protocol against the smuggling ofMigrants by Land, Sea and Air\".2. The UNCAC is the ever-first legally binding globalanti-corruption instrument.3. A highlight of the United Nations Convention againstTransnational organized Crime (UNTOC) is theinclusion of a specific chapter aimed at returningassets to their rightful owners from whom they hadbeen taken illicitly.4. The United Nations office on Drugs and Crime(UNODC) is mandated by its member states to assistin the implementation of both UNCAC and UNTOC.Which of the following statements given above arecorrect?",
      "questionId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MzE=",
      "description" : "VW5pdGVkIE5hdGlvbnMgQ29udmVudGlvbiBhZ2FpbnN0IENvcnJ1cHRpb24gaXMgdGhlIG9ubHkgbGVnYWxseSBiaW5kaW5nIHVuaXZlcnNhbCBhbnRpLWNvcnJ1cHRpb24gaW5zdHJ1bWVudC4gU28sICMyIGlzIHJpZ2h0LCB0aGlzIGVsaW1pbmF0ZXMgQS4gVXBvbiBjaGVja2luZyB0aGUgb2ZmaWNpYWwgd2VicGFnZXMgb2YgVU5UT0MgYW5kIFVOQ0FDLCBpdCdzIGV2aWRlbnQgdGhhdCAjMyBpcyBub3QgcmVsYXRlZCB3aXRoIFVOVE9DIGJ1dCBVTkNBQy4gU28sICMzIGlzIHdyb25nLiBTbywgYnkgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIGMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2, 3 and 4 only",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 32,
      "question" : "As per the Industrial Employment (Standing Orders)Central (Amendment) Rules, 2018: 1. If rules for fixed-term employment are implemented, itbecomes easier for the firms/companies to lay offworkers2. No notice of termination of employment shall benecessary in the case of temporary workmanWhich of the following statements given above is/arecorrect",
      "questionId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3l8MzI=",
      "description" : "MjAxOC1NYXJjaDogSW5kaWFuRXhwcmVzczogQXMgcGVyIHRoZSB0aGUgSW5kdXN0cmlhbCBFbXBsb3ltZW50IChTdGFuZGluZyBPcmRlcnMpIENlbnRyYWwgKEFtZW5kbWVudCkgUnVsZXMsIDIwMTg6ICgtKU5vIHdvcmttYW4gZW1wbG95ZWQgb24gZml4ZWQgdGVybSBlbXBsb3ltZW50IGJhc2lzIHNoYWxsIGJlIGVudGl0bGVkIHRvIGFueSBub3RpY2Ugb3IgcGF5LCBpZiBoaXMgc2VydmljZXMgYXJlIHRlcm1pbmF0ZWQgYnkgbm9uLXJlbmV3YWwgb2YgY29udHJhY3QuIFNvLCAjMSBpcyByaWdodC4gKC0pTm8gbm90aWNlIG9mIHRlcm1pbmF0aW9uIG9mIGVtcGxveW1lbnQgc2hhbGwgYmUgbmVjZXNzYXJ5IGluIHRoZSBjYXNlIG9mIHRlbXBvcmFyeSB3b3JrbWFuLiBTbywgIzIgaXMgcmlnaHQuIEFuc3dlciBDOiBib3RoIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTkgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8UGFuY2h5YXRpIFJhaiAmIFB1YmxpYyBQb2xpY3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Panchyati Raj & Public Policy",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    }
  ],
  "subject" : "Indian Polity & Governance",
  "topic" : "Panchyati Raj & Public Policy",
  "year" : "0"
}
