{
  "testId" : "geography|agriculture",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "In the map the given four areas are differently shaded, three of which indicate cereal crops production areas and one indicates non-cereal crop production area.As per the index given, the non-cereal crop production area is :  INDIA Major Crop Production Areas 1 2 3 4 ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MQ==",
      "description" : "Q290dG9uIGdyb3dzIHRoZXJlIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 2 ",
        "option3" : " 3 ",
        "option4" : " 4 "
      }
    },
    {
      "index" : 2,
      "question" : "Coffee cultivation in Sri Lanka was abandoned because of the disease :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mg==",
      "description" : "Q29mZmVlIGN1bHRpdmF0aW9uIGluIFNyaSBMYW5rYSB3YXMgYWJhbmRvbmVkIGJlY2F1c2UgIHRoZSBsZWFmIHJ1c3QgZGlzZWFzZSB3aGljaCBhZmZlY3RzIHRoZSBmcnVpdCBhbmQgbGVhZiBvZiBjb2ZmZWUuICBUaGUgY2F1c2F0aXZlIGZ1bmd1cyBpcyBIZW1pbGVpYSBWYXN0YXJpeC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " leaf blight ",
        "option2" : " leaf spot ",
        "option3" : " leaf rust ",
        "option4" : " rut "
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following sets of conditions is necessary for a good crop of wheat?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mw==",
      "description" : "V2hlYXQgaXMgYSB0ZW1wZXJhdGUgcmVnaW9uIGNyb3AgdGh1cyByZXF1aXJlIG1vZGVyYXRlICB0ZW1wZXJhdHVyZSBhbmQgcmFpbmZhbGwgYm90aC4gVGVtcGVyYXR1cmUgc2hvdWxkIG5vdCBleGNlZWQgIGFib3ZlIDIwwrBDIGFuZCByYWluZmFsbCBzaG91bGQgYmUgYmV0d2VlbiA1MC0xMDAgY20gIGFsb25nd2l0aCBhIGZpcnN0IGZyZWUgZ3Jvd2luZyBzZWFzb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Moderate temperature and moderate rainfall ",
        "option2" : " High temperature and heavy rainfall ",
        "option3" : " High temperature and moderate rainfall ",
        "option4" : " Low temperature and low rainfall "
      }
    },
    {
      "index" : 4,
      "question" : "Which one of the following is an important crop of the Barak valley?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8NA==",
      "description" : "VGhlIGltcG9ydGFudCBjcm9wIG9mIEJhcmFrIHZhbGxleSBpcyBqdXRlLCBiZWNhdXNlICBCYXJhayB2YWxsZXkgaXMgc2l0dWF0ZWQgaW4gQXNzYW0uIFRoZSB0ZW1wZXJhdHVyZSBvZiB0aGUgIHZhbGxleSB2YXJpZXMgZnJvbSAyNcKwIHRvIDMwwrBDIGFuZCByYWluZmFsbCB2YXJpZXMgZnJvbSAxMDAgdG8gIDIwMCBjbSwgd2hpY2ggaXMgaWRlYWwgZm9yIGp1dGUgY3VsdGl2YXRpb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Jute ",
        "option2" : " Tea ",
        "option3" : " Sugarcane ",
        "option4" : " Cotton "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following pairs of states and their important crops are correctly matched?  1. Kerala-Tapioca 2. Maharashtra-Cotton 3. West Bengal-Jute 4. Gujarat-Groundnut ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8NQ==",
      "description" : "T3B0aW9uIDEgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSwgVGFwaW9jYSBpcyBub3QgYW4gIGltcG9ydGFudCBjcmFwIG9mIEtlcmFsYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1, 2 and 4 ",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 6,
      "question" : "Which one of the following areas of India produces largest amount of cotton?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Ng==",
      "description" : "V2VzdGVybiBhbmQgU291dGhlcm4gSW5kaWEgcHJvZHVjZXMgbGFyZ2VzdCBjb3R0b24gOiAgTWFoYXJhc2h0cmEgKDI2LjYzJSksIEd1amFyYXQgKDE3LjY3JSksIEFuZGhyYSBQcmFkZXNoICAoMTMuNzUlKSBhbmQgTWFkaHlhIFByYWRlc2ggYXJlIHRoZSBsZWFkaW5nIHByb2R1Y2VycyBpbiAgSW5kaWEuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " North-west India and Gangetic West Bengal ",
        "option2" : " North-west and western India ",
        "option3" : " Western and southern India ",
        "option4" : " Plains of northern India "
      }
    },
    {
      "index" : 7,
      "question" : "Which one of the following is cultivated by transplanting seedlings?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Nw==",
      "description" : "T25pb24gaXMgY3VsdGl2YXRlZCBieSB0cmFuc3BsYW50aW5nIHNlZWRsaW5ncy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Maize ",
        "option2" : " Sorghum ",
        "option3" : " Onion ",
        "option4" : " Soyabean "
      }
    },
    {
      "index" : 8,
      "question" : "Match List-I with List-II and select the correct answer:  List-I List-II (Crops) (Geographical conditions) A. Barley 1. Hot and dry climate with poor soil B. Rice 2. Cool climate with poorer soil C. Millets 3. Warm and moist climate with high attitude D. Tea 4. Hot and moist climate with rich soil Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8OA==",
      "description" : "QmFybGV5IHJlcXVpcmVzIGNvb2wgY2xpbWF0ZSB3aXRoIHBvb3Igc29pbCBxdWFsaXR5LiAgQmFybGV5IGNhbiBiZSBncm93biBpbiBoaWdoIGxhdGl0dWRlIGV2ZW4gYmV5b25kIHRoZSBBcmN0aWMgIGNpcmNsZS4gV2hlcmVhcyByaWNlIG5lZWRzIGhvdCBhbmQgbW9pc3QgY2xpbWF0ZSB3aXRoIHJpY2ggIHNvaWwuICBNaWxsZXRzIGFyZSBncm93biBpbiBob3QgYW5kIGRyeSBjbGltYXRlIHdpdGggcG9vciBzb2lsLCAgd2hlcmVhcyB0ZWEgbmVlZHMgd2FybSBhbmQgbW9pc3QgY2xpbWF0ZSB3aXRoIGhpZ2ggYWx0aXR1ZGUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 1; D - 3 ",
        "option2" : " A - 3; B - 4; C - 1; D - 2 ",
        "option3" : " A - 2; B - 1; C - 4; D - 3 ",
        "option4" : " A - 3; B - 2; C - 4; D -1 "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the map given below:  The place marked A, B, C and D in the map are respectively known for the cultivation of : ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8OQ==",
      "description" : "VGhlIHBsYWNlIG1hcmtlZCBpbiB0aGUgZ2l2ZW4gbWFwIG9mIEluZGlhLiAgJ0EnIHJlZmVycyB0byBHdWphcmF0IHdoZXJlIGdyb3VuZG51dCBpcyBhIG1ham9yIGNyb3AuICAnQicgcmVmZXJzIHRvIHdlc3Rlcm4gcGFydCBvZiBNYWhhcmFzaHRyYSB3aGljaCBpcyBrbm93biAgIGZvciBzdWdhcmNhbmUuICAnQycgcmVmZXJzIHRvIHNvdXRoZXJuIHBhcnQgb2YgT3Jpc3NhIGFuZCBub3J0aGVybiBwYXJ0IG9mICBBbmRocmEgUHJhZGVzaCwgd2hlcmUgJ1JhZ2knIGlzIGN1bHRpdmF0ZWQgYWJ1bmRhbnRseS4gICdEJyByZWZlcnMgQW5kaHJhIFByYWRlc2ggYW5kIHRvYmFjY28gaXMgY3VsdGl2YXRlZCBpbiAgdGhpcyBhcmVhLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " groundnut, ragi, tobacco and sugarcane ",
        "option2" : " groundnut, sugarcane, ragi and tobacco ",
        "option3" : " ragi, sugarcane, groundnut and tobacco ",
        "option4" : " ragi, groundnut, sugarcane and tobacco "
      }
    },
    {
      "index" : 10,
      "question" : "The following are the major oilseeds produced in India: 1. Sesamum 2. Mustard 3. Groundnut 4. Soyabean Which one of the following is the correct sequence of the descending order of the quantity of their production?   ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTA=",
      "description" : "VGhlIGRlc2NlbmRpbmcgb3JkZXIgb2YgdGhlIHF1YW50aXRpZXMgb2Ygb2lsc2VlZCAgcHJvZHVjdGlvbiBpcywgIEdyb3VuZG51dCA+U295YWJlYW4+IE11c3RhcmQgICA+IFNlc2FtdW0g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2, 3, 4 ",
        "option2" : " 3, 2, 4, 1 ",
        "option3" : " 2, 4, 3, 1 ",
        "option4" : " 3, 4, 2, 1 "
      }
    },
    {
      "index" : 11,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:                                   List-I List-II (Agricultural products) (Foremost producer) A. Cotton 1. Madhya Pradesh B. Gram 2. Gujarat C. Black pepper 3. West Bengal D. Pineapple 4. Kerala 4 Agriculture  B 52 Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTE=",
      "description" : "R3VqYXJhdCBpcyB0aGUgZm9yZW1vc3QgcHJvZHVjZXIgb2YgY290dG9uLiBHcmFtIGlzICBwcm9kdWNlZCBpbiBNYWRoeWEgUHJhZGVzaCwgQmxhY2sgcGVwcGVyIGlzIHByb2R1Y2VkIGluICBLZXJhbGEgYW5kIFBpbmVhcHBsZSBpcyBwcm9kdWNlZCBoaWdoZXN0IGluIFdlc3QgQmVuZ2FsLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-2; B-1; C- 4; D-3 ",
        "option2" : " A-2; B-1; C- 3; D-4 ",
        "option3" : " A-1; B-2; C- 4; D-3 ",
        "option4" : " A-1; B-2; C- 3; D-4 "
      }
    },
    {
      "index" : 12,
      "question" : "Match List I with List II and select the correct answer using the codes given below the lists:  List-I List-II A. Cotton 1. Rainfall 1000-1500 mm; Temperature 40°-60°C B. Flax 2. Rainfall 1500-2000 mm; Temperature 25°-35°C C. Sugar beet 3. Rainfall 600-800 mm; Temperature  5°-18º C D. Jute 4. Rainfall 500-1000 mm; Temperature 18°-22°C 5. Rainfall 500-600 mm; Temperature 18°-22°C Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTI=",
      "description" : "QS4gQ290dG9uIGN1bHRpdmF0aW9uIG5lZWRzIDE1MDAtMjAwMCBtbSBhbmQgdGhlICBzdWl0YWJsZSB0ZW1wZXJhdHVyZSBmb3IgY290dG9uIGdyb3d0aCBpcyAyNcKwIC0gMzXCsEMuICBCLiBGbGF4IGN1bHRpdmF0aW9uIG5lZWRzIDYwMC04MDAgbW0gYW5kIHRlbXBlcmF0dXJlICB2YXJpZXMgZnJvbSA1wrAgLSAxOMKwIEMuICBDLiBUaGUgc3VpdGFibGUgY2xpbWF0aWMgY29uZGl0aW9uIGZvciBzdWdhciBiZWV0IHJlcXVpcmVzICA1MDAtNjAwIG1tIGFuZCB0ZW1wZXJhdHVyZSAxOMKwLTIywrAgQy4gIEQuIEp1dGUgY3VsdGl2YXRpb24gbmVlZHMgNTAwLTEwMDAgbW0gcmFpbmZhbGwgYW5kICB0ZW1wZXJhdHVyZSBiZXR3ZWVuIDE4wrotMjLCukMg",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-1; B-3; C-4; D-2 ",
        "option2" : " A-2; B-3; C-5; D-4 ",
        "option3" : " A-4; B-5; C-2; D-1 ",
        "option4" : " A-4; B-3; C-5; D-2 "
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following agricultural practices is eco-friendly?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTM=",
      "description" : "T3JnYW5pYyBmYXJtaW5nIGlzIGEgcHJvZHVjdGlvbiBzeXN0ZW0gb2YgY3JvcHMgd2hpY2ggIGF2b2lkcyB0aGUgdXNlIG9mIHN5bnRoZXRpYyBhbmQgY2hlbWljYWwgaW5wdXRzIGxpa2UgZmVydGlsaXplcnMsICBwZXN0aWNpZGVzLCBncm93dGggcmVndWxhdG9ycyBhbmQgbGl2ZXN0b2NrIGZlZWQgYWRkaXRpdmVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Organic farming ",
        "option2" : " Shifting cultivation ",
        "option3" : " Cultivation of high yielding varieties ",
        "option4" : " Growing plants in glass-houses "
      }
    },
    {
      "index" : 14,
      "question" : "Assertion (A) : Insect resistant transgenic cotton has been produced by inserting Bt gene.  Reason (R) : The Bt gene is derived from a bacterium. ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTQ=",
      "description" : "QXNzZXJ0aW9uIGFuZCByZWFzb24gaXMgdHJ1ZSBhbmQgcmVhc29uIGlzIHRoZSBjb3JyZWN0ICBleHBsYW5hdGlvbiBvZiBhc3NlcnRpb24uICBCYWNpbGx1cyB0aHVyaW5naWVuc2lzIGlzIHRoZSBiYWN0ZXJpdW0gd2hpY2ggaXMgdXNlZCBpbiBCdCAgZ2VuZSBvZiBjb3R0b24uIEJ0IGNvdHRvbiBpcyBpbnNlY3QgcmVzaXN0YW50LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of  A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 15,
      "question" : "Assertion (A) : In Australia, cattle rearing is done more for meat than for milk. Reason (R) : Australians are traditionally nonvegetarians  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTU=",
      "description" : "QXNzZXJ0aW9uIGlzIGNvcnJlY3QsIGJ1dCByZWFzb24gaXMgbm90IHRoZSBjb3JyZWN0ICBleHBsYW5hdGlvbiBvZiBhc3NlcnRpb24gYnV0IGhlIHN0YXRlbWVudCBpcyB0cnVlLiAgSW4gQXVzdHJhbGlhIGZhcm1lcnMgcmVhciBjYXR0bGUgZm9yIG1lYXQgZXhwb3J0LCBhbmQgbW9zdCBvZiAgdGhlIEF1c3RyYWxpYW4gcGVvcGxlIGFyZSBub24tdmVnZXRhcmlhbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 16,
      "question" : "The high density of population in Nile valley and Islands of Java is primarily due to :  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTY=",
      "description" : "RHVlIHRvIGF2YWlsYWJpbGl0eSBvZiBmZXJ0aWxlIGFsbHV2aWFsIHNvaWwgaW50ZW5zaXZlICBhZ3JpY3VsdHVyYWwgcHJhY3RpY2VzIHdhcyBwb3NzaWJsZSBpbiB0aGUgTmlsZSByaXZlciBhbmQgIGlzbGFuZHMgb2YgSmF2YS4gU28sIGluIHRoaXMgcmVnaW9ucyBoaWdoIGRlbnNpdHkgb2YgIHBvcHVsYXRpb24gaXMgZm91bmQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " intensive agriculture ",
        "option2" : " industrialization ",
        "option3" : " urbanization ",
        "option4" : " topographic limitations "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to Indian agriculture, which one of the following statements is correct?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTc=",
      "description" : "SW4gSW5kaWFuIGFncmljdWx0dXJlIGFib3V0IDkwJSBvZiB0aGUgYXJlYSB1bmRlciBwdWxzZSAgaXMgcmFpbmZlZCwgYnV0IHB1bHNlcyBuZWVkIGxlc3Mgd2F0ZXIgZm9yIGN1bHRpdmF0aW9uIHNvLCB0aGUgIHByb2R1Y3Rpb24gb2YgcHVsc2UgaGFtcGVycy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " About 90 percent of the area under pulses in India is  rainfed ",
        "option2" : " Share of pulses in the gross cropped are at the national  level has doubled in the last two decades. ",
        "option3" : " India accounts for about 15 percent of the total area  under rice in the world ",
        "option4" : " Rice occupies about 34 percent of the gross cropped "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following high yielding varieties of crops in India:  1. Arjun 2. Jaya 3. Padma 4. Sonalika Which of these are of wheat? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTg=",
      "description" : "QXJqdW4gYW5kIFNvbmFsaWthIGFyZSBoeWJyaWQgdmFyaWV0eSBvZiB3aGVhdCAgcHJvZHVjZWQgYnkgSW5kaWFuIENvdW5jaWwgb2YgQWdyaWN1bHR1cmFsIFJlc2VhcmNoLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 19,
      "question" : "Assertion (A) : Eastern coast of India produces more rice than the western coast. Reason (R) : Eastern coast receives more rainfall than the western coast.  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MTk=",
      "description" : "QXNzZXJ0aW9uIGlzIHRydWUsIGJ1dCByZWFzb24gaXMgZmFsc2UuIFRoZSB3ZXN0ZXJuIGNvYXN0ICByZWNlaXZlcyBtb3JlIHJhaW5mYWxsIHRoYW4gZWFzdGVybiBjb2FzdCwgYnV0IHRoZSB0ZW1wZXJhdHVyZSAgYmV0d2VlbiAyMC0yN8K6QywgaGVhdnkgY2xheWVkIHNvaWwgcXVhbGl0eSBhbmQgcmFpbmZhbGwgaXMgIG1vcmUgc3VpdGFibGUgZm9yIHJpY2UgY3VsdGl2YXRpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements:  1. India is the original home of the cotton plant 2. India is the first country in the world to develop hybrid cotton variety leading to increased production Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjA=",
      "description" : "SW5kaWEgaXMgdGhlIG9yaWdpbmFsIGhvbWUgb2YgY290dG9uIHBsYW50LCBhbmQgSW5kaWEgIHJhbmtzIG51bWJlciBvbmUgaW4gdGhlIHdvcmxkIGFjY291bnRpbmcgZm9yIDIwJSBvZiB0aGUgIHRvdGFsIGFyZWEgcGxhbnRlZCB1bmRlciBjb3R0b24uIFRoZSBjb3R0b24gaHlicmlkIHZhcmlldHkgIEgtNCBkZXZlbG9wZWQgZmlyc3QgYW5kIFJhai0xNiwgRGhhbmFsYXhtaSwgYW5kIEZhdGVoIGFyZSAgdGhlIHZhcmlldHkgd2hpY2ggd2VyZSBkZXZlbG9wZWQgaW4gSW5kaWEuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 21,
      "question" : "The Genetic Engineering Approval Committee, whose permission is required for cultivation of any genetically modified crop such as Bt Cotton in India, is under the Union Ministry of :  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjE=",
      "description" : "VGhlIGdlbmV0aWMgZW5naW5lZXJpbmcgYXBwcm92YWwgY29tbWl0dGVlIGNvbWVzICB1bmRlciBNaW5pc3RyeSBvZiBFbnZpcm9tZW50LCBGb3Jlc3QgYW5kIENsaW1hdGUgY2hhbmdlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Agriculture ",
        "option2" : " Environment and Forests ",
        "option3" : " Commerce and Industry ",
        "option4" : " Rural-Development "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements:  1. India ranks first in the world in fruit production 2. India ranks second in the world in export of tobacco Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjI=",
      "description" : "SW5kaWEgcmFua2VkIDJuZCBpbiB0aGUgZnJ1aXQgcHJvZHVjdGlvbiBpbiB0aGUgd29ybGQgIGFuZCByYW5rZWQgNnRoIGluIHByb2R1Y3Rpb24gb2YgdG9iYWNjby4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither I nor 2 "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following crops:  1. Cotton 2. Groundnut 3. Maize 4. Mustard Which of the above are kharif crops? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjM=",
      "description" : "Q290dG9uLCBHcm91bmRudXQgYW5kIE1haXplIGFyZSBraGFyaWYgY3JvcCB3aGVyZWFzICBNdXN0YXJkIGlzIGEgcmFiaSBjcm9wLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 3 and 4 ",
        "option4" : " 1, 2 ,"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:  1. India is the only country in the world producing all the five known commercial varieties of silk. 2. India is the largest producer of sugar in the world. Which of the statements given above less is/are correct? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjQ=",
      "description" : "Rml2ZSB2YXJpZXRpZXMgb2Ygc2lsa3dvcm1zIGFyZSByZWFyZWQgaW4gSW5kaWEgZm9yICBwcm9kdWNpbmcgZml2ZSB2YXJpZXRpZXMgb2Ygc2lsay4gTXVsYmVycnkgc2lsaywgTXVnYSBzaWxrLCAgVGFzYXIgc2lsaywgT2FrIHRhc2FyIHNpbGsgYW5kIEVyaSBzaWxrLiBJbmRpYSBpcyB0aGUgMm5kIGxhcmdlc3QgIHByb2R1Y2VyIG9mIHN1Z2FyIGluIHRoZSB3b3JsZC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following statements is correct?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjU=",
      "description" : "Qmlvc2FmZXR5IHByb3RvY29sIGlzIGFuIGFncmVlbWVudCBkZXNpZ25lZCB0byAgcmVndWxhdGUgdGhlIGludGVybmF0aW9uYWwgdHJhZGUsIGhhbmRsaW5nIGFuZCB1c2Ugb2YgYW55ICBnZW5ldGljYWxseSBlbmdpbmVlcmVkIG9yZ2FuaXNtIHRoYXQgbWF5IGhhdmUgYWR2ZXJzZSAgZWZmZWN0cyBvbiB0aGUgY29uc2VydmF0aW9uIGFuZCBzdXN0YWluYWJsZSB1c2Ugb2YgYmlvbG9naWNhbCAgZGl2ZXJzaXR5LCB0YWtpbmcgYWxzbyBpbnRvIGFjY291bnQgcmlza3MgdG8gdGhlIGh1bWFuIGhlYWx0aC4gIFRoZSBmaXJzdCBtZWV0aW5nIHdhcyBoZWxkIGluIDIwMDQgaW4gS3VhbGEgTHVtcHVyLCAgTWFsYXlzaWEuIEluZGlhIGlzIGEgc2lnbmF0b3J5IG1lbWJlciB0byBpdCB0aGUgQmlvc2FmZXR5ICBwcm90b2NvbCBkZWFscyB3aXRoIGdlbmV0aWNhbGx5IG1vZGlmaWVkIG9yZ2FuaXNtIGJ1dCB0aGV5ICBkb25vdCBuYW1lIHRoZW0gc28uIFVTQSBoYXMgc2lnbiBpdCBwdXQgbm90IHlldCByYXRpZnkgdGhpcyAgdHJlYXR5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The first meeting of the Parties (MOP) to the Cartagena  Protocol on Biosafety was held in Phillippines in the  year 2004. ",
        "option2" : " India is not a signatory to the Biosafety protocol/  convention on Biological Diversity. ",
        "option3" : " The Biosafety protoco1 deals with genetically modified  organisms. ",
        "option4" : " United State of America is member of the Biosafety "
      }
    },
    {
      "index" : 26,
      "question" : "Assertion (A): The percentage of net sown area in the total area of Andhra Pradesh is less as compared to that of West Bengal. Reason (R) : The soil of most of Andhra Pradesh is laterite.  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MjY=",
      "description" : "TGF0ZXJpdGUgc29pbCBpcyBtb3N0bHkgZm91bmQgaW4gYXJlYXMgb2YgaGlnaCByYWluZmFsbCAgYW5kIHRlbXBlcmF0dXJlIHdpdGggYWx0ZXJuYXRlIGRyeSBhbmQgd2V0IFBlcmlvZHMgaXQgaXMgIHN1aXRhYmxlIGZvciBncm93aW5nIHJpY2UsIHJhZ2kgYW5kIHN1Z2FyY2FuZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 27,
      "question" : "Which one of the following is the correct sequence in the decreasing order of production (in million tones) of the given foodgrains in India?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mjc=",
      "description" : "UHJvZHVjdGlvbiBvZiByaWNlIGlzIDk2LjQzIE1ULCB3aGVhdCBpcyA3OC40IE1ULCBwdWxzZXMgIGlzIDE1LjExIE1UIGFuZCBjb2Fyc2UgY2VyZWFscyBhcmUgNDAuNzMgTVQgaW4gSW5kaWEuIFNvLCAgdGhlIGNvcnJlY3Qgc2VxdWVuY2UgaW4gZGVjcmVhc2luZyBvcmRlciBpcyBSaWNlIC0gV2hlYXQgLSAgQ29hcnNlIGNlcmVhbHMgLSBQdWxzZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Wheat - Rice - Pulses - Coarse Cereals ",
        "option2" : " Rice - Wheat - Pulses - Coarse Cereals ",
        "option3" : " Wheat - Rice - Coarse Cereals - Pulses ",
        "option4" : " Rice - Wheat - Coarse Cereals - Pulses "
      }
    },
    {
      "index" : 28,
      "question" : "Assertion (A) : There are no tea plantations in any African country.  Reason (R) : Tea plants need fertile soil with high humus. ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mjg=",
      "description" : "SW4gdGhlIDIwdGggY2VudHVyeSB0ZWEgd2FzIGJlaW5nIGdyb3duIGluIDMgQWZyaWNhbiAgY291bnRyaWVzIGxpa2UgVGFuemFuaWEsIEtlbnlhIGFuZCBVZ2FuZGEuIFNvLCB0aGUgYXNzZXJ0aW9uICBpcyB3cm9uZy4gQnV0IHRoZSByZWFzb24gaXMgY29ycmVjdCBiZWNhdXNlIHRlYSBwbGFudHMgbmVlZCAgaGlnaGx5IG9yZ2FuaWMgb3IgbG9hbXkgc29pbHMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 29,
      "question" : "Dalbergia species is associated with which one of the following?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mjk=",
      "description" : "Um9zZXdvb2QgaXMgYXNzb2NpYXRlZCB3aXRoIERhbGJlcmdpYSBzcGVjaWVzLiAgRGFsYmVyZ2lhIHNwZWNpZXMgYXJlIHVzZWQgYXMgZm9vZCBwbGFudHMgYW5kIGZyYWduYW50ICB3b29kIGluIGFyb21hdGljIG9pbHMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Cashewnut ",
        "option2" : " Coffee ",
        "option3" : " Tea ",
        "option4" : " Rosewoo "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following places was associated with Acharya Vinoba Bhave's Bhoodan Movement at the beginning of the movement?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzA=",
      "description" : "Qmhvb2RhbiBNb3ZlbWVudCB3YXMgYSB2b2x1bnRhcnkgbGFuZCByZWZvcm0gIG1vdmVtZW50IGluIEluZGlhIHN0YXJ0ZWQgYnkgQWNoYXJ5YSBWaW5vYmEgQmhhdmUgb24gIEFwcmlsIDE4LCAxOTUxIHN0YXJ0ZWQgYXQgUG9jaGFtcGFsbGkgdmlsbGFnZSwgaW4gVGVsYW5nYW5hICAoQW5kaHJhIFBhcmRlc2gpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Udaygiri ",
        "option2" : " Rapur ",
        "option3" : " Pochampalli ",
        "option4" : " Venkatagiri "
      }
    },
    {
      "index" : 31,
      "question" : "Which one amongst the following has the largest livestock population in the world?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzE=",
      "description" : "SW5kaWEgaGFzIGxhcmdlc3QgbGl2ZXN0b2NrIHBvcHVsYXRpb24gaW4gdGhlIHdvcmxkLCAgaGF2aW5nIDU3JSBvZiB3b3JsZCdzIGJ1ZmZhbG8gcG9wdWxhdGlvbiBhbmQgMTQlIG9mIHRoZSAgY2F0dGxlIHBvcHVsYXRpb24uIEFjY29yZGluZyB0byAxN3RoIEluZGlhJ3MgTGl2ZXN0b2NrICBFICBCICBEICBfOCAgMzQgIDIgIEFncmljdWx0dXJlIEIgNTcgIENlbnN1cywgMjAwMywgdGhlIGNvdW50cnkgaGFzIGFib3V0IDE4LjUgY3JvcmUgY2F0dGxlIGFuZCAgOS44IGNyb3JlIGJ1ZmZhbG8gd2l0aCB0b3RhbCBsaXZlc3RvY2sgb2YgNDgtNTAgY3JvcmUgYW5kIHRvdGFsICBwb3VsdHJ5IG9mIDQ4LjkwIGNyb3JlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Brazil ",
        "option2" : " China ",
        "option3" : " India ",
        "option4" : " USA "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements:    1. Chikmagalur is well-known for sugar production. 2. Mandya is well-known as a coffee producing region. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzI=",
      "description" : "Q2hpa21hZ2FsdXIgaXMgZmFtb3VzIGZvciBjb2ZmZWUuIE1hbmR5YSBpcyBmYW1vdXMgIGZvciBzdWdhciBhbmQgcGFwZXIgcHJvZHVjdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 33,
      "question" : "Though coffee and tea both are cultivated on hill slopes, there is some difference between them regarding their cultivation. In this context, consider the following statements:  1. Coffee plant requires a hot and humid climate of tropical areas whereas tea can be cultivated in both tropical and subtropical areas. 2. Coffee is propagated by seeds but tea is propagated by stem cuttings only. Which of the statements given above is/ are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzM=",
      "description" : "Tm90IG9ubHkgdGhlIHRlYSBwbGFudHMgYnV0IGFsc28gdGhlIGNvZmZlZSBwbGFudHMgY2FuICBiZSBwcm9wYWdhdGVkIGJ5IHNlZWRzIGFuZCBzdGVtIGN1dHRpbmcuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 34,
      "question" : "With reference to soil conservation, consider the following practices:  1. Crop rotation 2. Sand fences 3. Terracing 4. Wind breaks Which of the above are considered appropriate methods for soil conservation in India? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzQ=",
      "description" : "VGhlIGRpZmZlcmVudCB0eXBlcyBvZiBzb2lsIGVyb3Npb24gaW4gSW5kaWEgYXJlIE5vcm1hbCAgb3IgR2VvbG9naWMgRXJvc2lvbiwgQWNjZWxlcmF0ZWQgc29pbCBFcm9zaW9uLCBXaW5kIEVyb3Npb24sICBXYXRlciBFcm9zaW9uLCBzaGVldCBFcm9zaW9uLCBHdWxseSBFcm9zaW9uLCBMYW5kIHNsaWRlcyBvciAgc2xpcCBFcm9zaW9uIGFuZCBzdHJlYW0tYmFuayBFcm9zaW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 35,
      "question" : "An objective of the National Food Security Mission is to increase the production of certain crops through area expansion and productivity enhancement in a sustainable manner in the identified districts of the country. What are those crops?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzU=",
      "description" : "TmF0aW9uYWwgRm9vZCBTZWN1cml0eSBNaXNzaW9uIGxhdW5jaGVkIGJ5ICBnb3Zlcm5tZW50IG9mIEluZGlhIHRvIGluY3JlYXNlIHRoZSBmb29kIHByb2R1Y3Rpb24gb2YgIHJpY2UsIHdoZWF0IGFuZCBwdWxzZXMgYW5kIGNvbW1lcmNpYWwgZ2FwcyBsaWtlIHN1Z2FyY2FuY2UgIGp1dGUuIFRoZSB0YXJnZXQgaXMgdG8gaW5jcmVhc2UgdGhlIHByb2R1Y3Rpb24gb2YgcmljZSBieSAxMCAgbWlsbGlvbiB0b25lcywgd2hlYXQgYnkgOCBtaWxsaW9uIHRvbmVzIGFuZCBwdWxzZXMsIGJ5IDIgIG1pbGxpb24gdG9uZXMgIGJ5IHRoZSBlbmQgb2YgRWxldmVudGggUGxhbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Rice and wheat only ",
        "option2" : " Rice, wheat and pulses only ",
        "option3" : " Rice, wheat, pulses and oil seeds only ",
        "option4" : " Rice, wheat, pulses, oil seeds and vegetables "
      }
    },
    {
      "index" : 36,
      "question" : "Due to their extensive rice cultivation, some regions may be contributing to global warming. To what possible reason/ reasons is this is attributable?  1. The anaerobic conditions associated with rice cultivation cause the emission of methane. 2. When nitrogen based fertilizers are used, nitrous oxide is emitted from the cultivated soil. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8MzY=",
      "description" : "QXMgcGVyIHNjaWVudGlmaWMgZXN0aW1hdGlvbnMgaXQgaGFzIGJlZW4gc3VnZ2VzdGVkICB0aGF0IG1vcmUgdGhhbiAyIHBlciBjZW50IG9mIGh1bWFuLWluZHVjZWQgY2xpbWF0ZSB3YXJtaW5nICBjYW4gYmUgYXR0cmlidXRlZCB0byByaWNlIGZhcm1pbmcuIEl0IGlzIHByZWRvbWluYW50bHkgZHVlIHRvICBtZXRoYW5lLCBhIHBvdGVudCBncmVlbmhvdXNlIGdhcyBlbWl0dGVkIGZyb20gZmxvb2RlZCAgcmljZSBmaWVsZHMuIE1ldGhhbm9nZW4gYmFjdGVyaWEgaW4gdGhlIHdhdGVybG9nZ2VkIHNvaWwgIHByb2R1Y2UgaXQgaW4gbGFyZ2UgcXVhbnRpdGllcy4gIE5pdHJvdXMgb3hpZGUgaXMgYWxzbyByZWxlYXNlZCBmcm9tIGN1bHRpdmF0ZWQgZmllbGRzIGR1ZSB0byAgdHJhbnNmb3JtYXRpb24gb2Ygbml0cm9nZW4gYmFzZWQgZmVydGlsaXplcnMgdGhhdCBjYW4gaGF2ZSBhICBoYXJtZnVsIGNsaW1hdGUgZWZmZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 37,
      "question" : "Tamil Nadu is a leading producer of mill-made cotton yarn in the country. What could be the reason?  1. Black cotton soil is the predominant type of soil in the State. 2. Rich pool of skilled labour is available. Which of the above is/are the correct reasons? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mzc=",
      "description" : "VGhlIHByZWRvbWluYW50IHNvaWwgaW4gVGFtaWwgTmFkdSBpcyByZWQgd2hpY2ggIHN1cHBvcnRzIGNvdHRvbiBjdWx0aXZhdGlvbiBhbmQgYSByaWNoIHBvb2wgb2Ygc2tpbGxlZCBsYWJvdXIgIGlzIGF2YWlsYWJsZSBpbiBUYW1pbCBOYWR1LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 38,
      "question" : "Given below are the names of four energy crops. Which one of them can be cultivated for ethanol ?               ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmV8Mzg=",
      "description" : "TWFpemUgaXMgb25lIG9mIHRoZSBjYXJib2h5ZHJhdGUgcmljaCBjcm9wczsgaGVuY2UgaXQgIGlzIG1vcmUgc3VpdGVkIGZvciBldGhhbm9sLXByb2R1Y3Rpb24gYW1vbmcgdGhlIGdpdmVuICBjcm9wcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8QWdyaWN1bHR1cmU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Jatropha ",
        "option2" : " Maize ",
        "option3" : " Pongamia ",
        "option4" : " Sunflower "
      }
    },
    {
      "index" : 39,
      "question" : "Salinization occurs when the irrigation water accumulated in the soil evaporates, leaving behind salts and minerals. What are the effects of salinization on the irrigated land ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDM5",
      "description" : "U2FsaW5pemF0aW9uIGZvciBhIGxvbmcgdGltZSBvbiB0aGUgaXJyaWdhdGVkIGxhbmQgbGVkIHRvICBzb2lsIGltcGVybWVhYmlsaXR5LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " It greatly increases the crop production ",
        "option2" : " It makes some soils impermeable ",
        "option3" : " It raises the water table ",
        "option4" : " It fills the air spaces in the soil with water "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following is the chief characteristic of 'mixed farming'?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQw",
      "description" : "TWl4ZWQgZmFybWluZyByZWZlciB0byByZWFyaW5nIG9mIGFuaW1hbHMgYW5kIGN1bHRpdmF0aW9uICBvZiBjcm9wcyB0b2dldGhlci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Cultivation of both cash crops and food crops ",
        "option2" : " Cultivation of two or more crops in the same field ",
        "option3" : " Rearing of animals and cultivation of crops together ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following crops of India :  1. Cowpea 2. Green gram 3. Pigeon pea Which of the above is/are used as pulse, fodder and green manure? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQx",
      "description" : "QWxsIHRoZXNlIGNyb3BzIGFyZSBsZWd1bWlub3VzIGNyb3AgKFB1bHNlcyBjcm9wcyksICBhbmQgaGF2ZSB0aGUgY2FwYWNpdHkgdG8gZml4IGF0bW9zcGhlcmljIG5pdHJvZ2VuIHRocm91Z2ggIHN5bWJpb3RpYyBuaXRyb2dlbiBmaXhhdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following crops  of India :  1. Groundnut 2. Sesamum 3. Pearl millet Which of the above is/are predominantly rained crop/crops? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQy",
      "description" : "QWxsIG9mIHRoZW0gYXJlIHByZWRvbWluYW50bHkgcmFpbiBmZWQgY3JvcHMg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : "    3 only ",
        "option4" : "    1, 2 an 3 "
      }
    },
    {
      "index" : 43,
      "question" : "Contour bunding is a method of soil conservation used in  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQz",
      "description" : "Q29udG91ciBCdW5kaW5nIGlzIG9uZSBvZiB0aGUgc2ltcGxlIG1ldGhvZCBvZiBzb2lsICBhbmQgd2F0ZXIgY29uc2VydmF0aW9uLiBUaGlzIHRlY2huaXF1ZSBpcyB1c2VkIGF0IHBsYWNlcyAgd2hlcmUgdGhlIGxhbmQgaXMgc2xvcHB5LiBEdWUgdG8gc2xvcGUsIHNvaWwgYW5kIG51dHJpZW50cyAgZXJvZGUgZmFzdCB3aGljaCBtYWtlcyBhZ3JpY3VsdHVyZSBvbiB0aGlzIGxhbmQgdmVyeSAgdW5lY29ub21pY2FsLiBUbyBhZG9wdCB0aGlzIHRlY2huaXF1ZSB0aGUgYWdyaWN1bHR1cmUgZmllbGRzICBjb250b3VycyBhcmUgbWFya2VkIGFuZCB0aGVuIHRoZSBidW5kcyBhcmUgdGFrZW4gYWxvbmcgIHRoZSBjb250b3Vycy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " desert margins, liable to strong wind action ",
        "option2" : " low flat plains, close to stream courses, liable to flooding ",
        "option3" : " scrublands, liable to spread of weed growth ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following crops:  1. Cotton 2. Groundnut 3. Rice 4. Wheat  B 54 Which of these are Kharif crops? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ0",
      "description" : "UmljZSBpcyB0aGUgbWFpbiBraGFyaWYgY3JvcCBhbmQgZ3JvdW5kbnV0IGFuZCBjb3R0b24gIGFyZSBhbHNvIHRoZSBraGFyaWYgY3JvcHMgd2hlYXQgaXMgYSByYWtpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 4 ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 45,
      "question" : "With reference  to  Neem  tree, consider the following statements :  1. Neem oil can be used as a pesticide to control the proliferation of some  species of insects and mites. 2. Neem seeds are used in the manufacture of biofuels and hospital detergents. 3. Neem oil has applications in pharmaceutical industry. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ1",
      "description" : "TmVlbSBvaWwgY2FuIGJlIHVzZWQgYXMgcGVzdGljaWRlIHRvIGNvbnRyb2wgdGhlICBwcm9saWZlcmF0aW9uIG9mIHNvbWUgc3BlY2llcyBvZiBpbnNlY3RzIGFuZCBtaXRlcyBhbmQgYWxzbyAgaGFzIGFwcGxpY2F0aW9ucyBpbiBwaGFybWFjZXV0aWNhbCBpbmR1c3RyeSBhcyBuZWVtIG9pbCBoYXMgIHZhcmlvdXMgbWVkaWNpbmFsIHByb3BlcnRpZXMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following pairs :  Region Well-known for the production of 1. Kinnaur : Areca nut 2. Mewat : Mango 3. Coromandel : Soya bean Which of the above  pairs is/ are correctly matched? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ2",
      "description" : "S2lubmF1ciAoSGltYWNoYWwpIGlzIGZhbW91cyBmb3IgYXBwbGVzLiBBcmVjYSBudXQgIG1vc3RseSBjb25maW5lZCB0byBLYXJuYXRha2EsIEtlcmFsYSBhbmQgQXNzYW0uICBNZXdhdCBpbiBoYXJ5YW5hIGlzIG5vdCBmYW1vdXMgZm9yIG1hbmdvLiBVUCBpcyBmYW1vdXMgIGZvciBtYW5nby4gIFNpbWlsYXJseSwgY29yb21hbmRlbCBjb2FzdCBpcyBub3QgZmFtb3VzIGZvciBzb3lhIGJlYW5zLlRvcCAgdHdvIHByb2R1Y2VycyAgb2Ygc295YSBhcmUgTWFkaHlhIFByYWRlc2ggYW5kICBNYWhhcmFzaHRyYSB3aGljaCBhcmUgb3V0c2lkZSBjb3JvbWFuZGVsIGNvYXN0LiAgVGhlcmVmb3JlLCAoZCkgaXMgdGhlIGNvcnJlY3Qgb3B0aW9uLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following techniques phenomena : 1. Budding and grafting in fruit plants  2. Cytoplasmic male sterility 3. Gene silencing Which of the above is/are used to create transgenic crops? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ3",
      "description" : "Q3l0b3BsYXNtaWMgbWFsZSBzdGVyaWxpdHkgYW5kIGdlbmUgc2lsZW5jaW5nIGFyZSB1c2VkICBmb3IgY3JlYXRpb24gb2YgdHJhbnNnZW5pYyBjcm9wcy4gR3JhZnRpbmcgYW5kIGJ1ZGRpbmcgaW4gIGZydWl0IHBsYW50cyBhcmUgbm90IHVzZWQgZm9yIHRyYW5zZ2VuaWMgY3JvcCBwcm9kdWN0aW9uIGJ1dCAgdXNlZCBkdXJpbmcgcmVndWxhciBob3J0aWN1bHR1cmUgcHJhY3RpY2VzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements :  1. Maize  can be used for  the production of starch. 2. Oil extracted from maize can be a feedstock for biodiesel. 3. Alcoholic  beverages  can  be produced by using maize. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ4",
      "description" : "QWxsIHRocmVlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIGFzIE1haXplIGNhbiBiZSB1c2VkICBmb3IgdGhlIHByb2R1Y3Rpb24gb2Ygc3RhcmNoLk9pbCBleHRyYWN0ZWQgZnJvbSBtYWl6ZSBjYW4gYmUgIGEgZmVlZHN0b2NrIGZvciBiaW9kaWVzZWwuIEFsY29ob2xpYyBiZXZlcmFnZXMgY2FuIGJlICBwcm9kdWNlZCBieSB1c2luZyBtYWl6ZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 49,
      "question" : "What  are  the  significances of  a practical approach to sugarcane production known as 'Sustainable Sugarcane Initiative'?  1. Seed cost is very low in this compared to the conventional method of cultivation. 2. Drip irrigation can be practiced very effectively in this. 3. There is no application of chemical/inorganic  fertilizers at all in this. 4. The scope for intercropping is more in this compared to the  conventional  method  of cultivation. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDQ5",
      "description" : "TlBLIChmZXJ0aWxpemVycykgY2FuIGJlIGFwcGxpZWQgYXQgdGhlIHJhdGUgb2YgMTEyIGtnLCAyNSAga2cgYW5kIDQ4IGtnIHBlciBhY3JlLCByZXNwZWN0aXZlbHkgdGhyb3VnaCBpbm9yZ2FuaWMgb3IgIG9yZ2FuaWMgbWV0aG9kcy4gSGVuY2Ugc3RhdGVtZW50ICMzIGlzIHdyb25nLCB0aGlzICBlbGltaW5hdGVzIChhKSwgKGMpIGFuZCAoZCkuIHRoZXJlZm9yZSwgYW5zd2VyIChiKSAxLDIsNCBvbmx5LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1, 2 and 4 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following pairs :      Programme/Project Ministry 1 . Drought-Prone Area : Ministry of Agriculture Programme 2. Desert Development : Ministry of Environment Programme and Forests 3. National Watershed : Ministry of Rural Development Project Development for Rainfed Areas Which of the above pairs is/ are correctly matched? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDUw",
      "description" : "VGhlIGRyYXVnaHQgcHJvbmUgYXJlYSBwcm9ncmFtbWUgaXMgYnkgbWluaXN0cnkgb2YgIFJ1cmFsIGRldmVsb3BtZW50ICB0byBtaW5pbWlzZSB0aGUgYWR2ZXJzZSBlZmZlY3RzIG9mICBkcm91Z2h0IG9uIHByb2R1Y3Rpb24gb2YgY3JvcHMgYW5kIGxpdmVzdG9jayBhbmQgIHByb2R1Y3Rpdml0eSBvZiBsYW5kLCB3YXRlciBhbmQgaHVtYW4gcmVzb3VyY2VzLiBUaGUgZGVzZXJ0ICBkZXZlbG9wbWVudCBwcm9ncmFtbWUgaXMgYWxzbyBieSBtaW5pc3RyeSBvZiBSdXJhbCAgZGV2ZWxvcG1lbnQgdG8gbWluaW1pc2UgdGhlIGFkdmVyc2UgZWZmZWN0IG9mIGRyb3VnaHQgYW5kICBjb250cm9sIGRlc2VydGlmaWNhdGlvbi4gTmF0aW9uYWwgV2F0ZXJzaGVkIERldmVsb3BtZW50ICBQcm9qZWN0IGZvciBSYWluZmVkIEFyZWFzIGlzIGJ5IG1pbmlzdHJ5IG9mIGFncmljdWx0dXJlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : "  3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : "  None "
      }
    },
    {
      "index" : 51,
      "question" : "What are the benefits of implementing the 'Integrated Watershed Development Programme'?  1. Prevention of soil runoff 2. Linking the country's perennial rivers with seasonal rivers 3. Rainwater harvesting and recharge of groundwater table 4. Regeneration  of  natural vegetation Select  the correct  answer  using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDUx",
      "description" : "SW50ZWdyYXRlZCBXYXRlcnNoZWQgTWFuYWdlbWVudCBQcm9ncmFtbWUgIChJV01QKSB3YXMgbGF1bmNoZWQgZHVyaW5nIDIwMDktMTAuSXQgYWltcyBhdCAgUHJldmVudGlvbiAgb2Ygc29pbCBydW5vZmYsIFJhaW53YXRlciBoYXJ2ZXN0aW5nIGFuZCByZWNoYXJnZSBvZiAgZ3JvdW5kd2F0ZXIgdGFibGUgYW5kIFJlZ2VuZXJhdGlvbiBvZiBuYXR1cmFsIHZlZ2V0YXRpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 52,
      "question" : "In India, cluster  bean  (Guar)  is traditionally used as a vegetable or animal feed, but recently the cultivation of this has assumed significance.  Which  one  of  the following statements is correct in this context?  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDUy",
      "description" : "R3VhciBndW0gaXMgdXNlZCBpbiBoeWRyYXVsaWMgZnJhY3R1cmluZyB0ZWNobm9sb2d5ICBkdXJpbmcgc2hhbGUgZ2FzIGV4dHJhY3Rpb24uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The oil extracted from seeds is used in the manufacture  of biodegradable plastics ",
        "option2" : " The gum made from its seeds is used in the extraction  of shale gas ",
        "option3" : " The leaf extract of this plant has  the  properties  of  antihistamines ",
        "option4" : " It is a source of high quality biodiesel "
      }
    },
    {
      "index" : 53,
      "question" : "Which of the following statements is/are correct regarding vegetative propagation of plants?                             1. Vegetative propagation produces clonal population. 2. Vegetative  propagation helps in eliminating the virus. 3. Vegetative propagation can be practiced most of the year. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJlfDUz",
      "description" : "VmVnZXRhdGl2ZSByZXByb2R1Y3Rpb24gaXMgYSBmb3JtIG9mIGFzZXh1YWwgIHJlcHJvZHVjdGlvbiBpbiBwbGFudHMuIEl0IGlzIGEgcHJvY2VzcyBieSB3aGljaCBuZXcgIG9yZ2FuaXNtcyBhcmlzZSB3aXRob3V0IHByb2R1Y3Rpb24gb2Ygc2VlZHMgLkl0IGhlbHBzIGluICBkZXZlbG9wbWVudCBvZiBjbG9uZXMuIFZlZ2V0YXRpdmUgcHJvcGFnYXRpb24gaW52b2x2ZXMgIG9ubHkgbWl0b3NpcywgdGhpcyBlbnN1cmVzIHRoYXQgdGhlIGdlbmV0aWMgaW5mb3JtYXRpb24gaW4gIEROQSBvZiB2ZWdldGF0aXZlIHByb2dlbnkgKGNoaWxkKSBpcyBzYW1lIGFzIGluIHRoZSBtb3RoZXIgIHBsYW50IGFuZCBjYW4gYmUgcHJhY3RpY2VkIHRocm91Z2hvdXQgdGhlIHllYXIuICBIb3dldmVyIGl0IGRvZXMgbm90IGhlbHBzIGluIGVsaW1pbmF0aW9uIG9mIHZpcnVzZXMuIFBsYW50ICBvbmNlIHN5c3RlbWF0aWNhbGx5IGluZmVjdGVkIHdpdGggYSB2aXJ1cywgdXN1YWxseSByZW1haW5zICBpbmZlY3RlZCBmb3IgaXRzIGxpZmV0aW1lLiBUaHVzIGFueSB2ZWdldGF0aXZlIHBhcnRzIHRha2VuIGZvciAgcHJvcGFnYXRpb24gcmVtYWlucyBpbmZlY3RlZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fEFncmljdWx0dXJl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 54,
      "question" : "The substitution of steel for wooden ploughs in agricultural production is an example of  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1NA==",
      "description" : "Q2FwaXRhbC1hdWdtZW50aW5nIHRlY2hub2xvZ2ljYWwgcHJvZ3Jlc3MgcmVzdWx0cyBpbiAgdGhlIG1vcmUgcHJvZHVjdGl2ZSB1c2Ugb2YgZXhpc3RpbmcgY2FwaXRhbCBnb29kczsgZm9yICBleGFtcGxlLCB0aGUgc3Vic3RpdHV0aW9uIG9mIHN0ZWVsIGZyb20gd29vZGVuIHBsb3VnaHMgaW4gIGFncmljdWx0dXJhbCBwcm9kdWN0aW9uLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " labour-augmenting  technological progress ",
        "option2" : " capital-augmenting technological progress ",
        "option3" : " capital-reducing technological progress ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 55,
      "question" : "Which one of the following best describes the main objective of 'Seed Village Concept'?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1NQ==",
      "description" : "U2VlZCB2aWxsYWdlIGNvbmNlcHQgaXMgdG8gcHJvbW90ZSB0aGUgcXVhbGl0eSBzZWVkICBwcm9kdWN0aW9uIG9mIGZvdW5kYXRpb24gYW5kIGNlcnRpZmllZCBzZWVkIGNsYXNzZXMuIFRoZSAgYXJlYSB3aGljaCBpcyBzdWl0YWJsZSBmb3IgcmFpc2luZyBhIHBhcnRpY3VsYXIgY3JvcCB3aWxsIGJlICBzZWxlY3RlZCwgYW5kIHJhaXNlZCB3aXRoIHNpbmdsZSB2YXJpZXR5IG9mIGEga2luZC4gU3VpdGFibGUgIGFyZWEgZm9yIHNlZWQgcHJvZHVjdGlvbiB3aWxsIGJlIGlkZW50aWZpZWQgYnkgdGhlIFNjaWVudGlzdHMuICBUaGUgZm91bmRhdGlvbi8gY2VydGlmaWVkIHNlZWRzIG9yIFVuaXZlcnNpdHkgbGFiZWxsZWQgc2VlZHMgIHdpbGwgYmUgc3VwcGxpZWQgYnkgdGhlIFVuaXZlcnNpdHkgdGhyb3VnaCBLcmlzaGkgVmlneWFuICBLZW5kcmFzIChLVktzKSBhbmQgUmVzZWFyY2ggU3RhdGlvbnMgYXQgNTAlIHN1YnNpZHkgIGNvc3QgdG8gdGhlIGlkZW50aWZpZWQgZmFybWVycyBpbiB0aGUgYXJlYS4gVGhlIGZhcm1lcnMgd2lsbCAgdXNlIHRoZXNlIHF1YWxpdHkgc2VlZHMgYW5kIHRha2UgdXAgdGhlaXIgb3duIHNlZWQgIHByb2R1Y3Rpb24gaW4gYSBzbWFsbCBhcmVhICgxIGFjcmUpIGZvciB0aGVpciBvd24gdXNlLiBUaGUgIGNyb3BzIGFyZSBSaWNlLCBQdWxzZXMgYW5kIE9pbHNlZWRzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Encouraging the farmers to use their own farm seeds  and discouraging them to buy the seeds from others ",
        "option2" : " Involving the farmers for training in quality seed  production and thereby to make available quality seeds  to others at appropriate time and affordable cost ",
        "option3" : " Earmarking  some villages exclusively for the  production of certified seeds ",
        "option4" : " Identifying the entrepreneurs in village and providing "
      }
    },
    {
      "index" : 56,
      "question" : "What can be the impact of excessive / inappropriate use of nitrogenous fertilizers in agriculture?  1. Proliferation of nitrogen-fixing microorganisms in soil can occur. 2. Increase in the acidity of soil can take place. 3. Leaching of nitrate to the ground-water can occur. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1Ng==",
      "description" : "RXhjZXNzaXZlLyBpbmFwcHJvcHJpYXRlIHVzZSBvZiBuaXRyb2dlbm91cyBmZXJ0aWxpemVycyAgaW5jcmVhc2UgdGhlIGFjaWRpdHkgb2Ygc29pbCBhbmQgTGVhY2hpbmcgb2Ygbml0cmF0ZSB0byB0aGUgIGdyb3VuZCB3YXRlci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 57,
      "question" : "In India, markets in agricultural products are regulated under the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1Nw==",
      "description" : "QWdyaWN1bHR1cmFsIFByb2R1Y2UgTWFya2V0IENvbW1pdHRlZSBBY3RzIG9mICByZXNwZWN0aXZlIHN0YXRlcyBhcmUgcmVzcG9uc2libGUgZm9yIG1hcmtldHMgaW4gYWdyaWN1bHR1cmFsICBwcm9kdWN0cy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Essential Commodities Act, 1955 ",
        "option2" : " Agricultural Produce Market Committee Act enacted  by States ",
        "option3" : " Agricultural Produce (Grading and Marking) Act, 1937 ",
        "option4" : " Food Products Order, 1956 and Meat and Food "
      }
    },
    {
      "index" : 58,
      "question" : "The terms 'Agreement on Agriculture', 'Agreement on the Application of Sanitary and Phytosanitary Measures' and 'Peace Clause' appear in the news frequently in the context of the affairs of the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1OA==",
      "description" : "J0FncmVlbWVudCBvbiBBZ3JpY3VsdHVyZScsICdBZ3JlZW1lbnQgb24gdGhlICBBcHBsaWNhdGlvbiBvZiBTYW5pdGFyeSBhbmQgUGh5dG9zYW5pdGFyeSBNZWFzdXJlcycgYW5kICAnUGVhY2UgQ2xhdXNlJyBhcmUgcmVsYXRlZCB0byBXb3JsZCBUcmFkZSBPcmdhbmlzYXRpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Food and Agriculture Organization  E  B  D  _8  34  2  Agriculture B 55 ",
        "option2" : " United Nations Framework Conference on Climate Change ",
        "option3" : " World Trade Organisation ",
        "option4" : " United Nations Environment Programme "
      }
    },
    {
      "index" : 59,
      "question" : "The FAO accords the status of 'Globally Important Agricultural Heritage System (GIAHS)' to traditional agricultural systems. What is the overall goal of this initiative?  1. To provide modern technology, training in modern farming methods and financial support to local communities of identified GIAHS so as to greatly enhance their agricultural productivity 2. To identify and safeguard eco-friendly traditional farm practices and their associated landscapers, agricultural biodiversity and knowledge systems of the local communities 3. To provide Geographical Indication status to all the varieties of agricultural produce in such identified GIAHS Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw1OQ==",
      "description" : "KGkpICBJbiBvcmRlciB0byBzYWZlZ3VhcmQgYW5kIHN1cHBvcnQgdGhlIHdvcmxkJ3MgYWdyaS0gIGN1bHR1cmFsIGhlcml0YWdlIHN5c3RlbXMsIGluIDIwMDIgRkFPIHN0YXJ0ZWQgYW4gaW5pdGlhdGl2ZSAgZm9yIHRoZSBkeW5hbWljIGNvbnNlcnZhdGlvbiBvZiBHbG9iYWxseSBJbXBvcnRhbnQgICBCIDU4ICBBZ3JpY3VsdHVyYWwgSGVyaXRhZ2UgU3lzdGVtcyAoR0lBSFMpLiBUaGUgR0lBSFMgIEluaXRpYXRpdmUgcHJvbW90ZXMgcHVibGljIHVuZGVyLXN0YW5kaW5nLCBhd2FyZW5lc3MsICBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCByZWNvZ25pdGlvbiBvZiBBZ3JpY3VsdHVyYWwgIEhlcml0YWdlIHN5c3RlbXMuIEl0IGFpbXMgdG8gaWRlbnRpZnkgYW5kIGVuc3VyZSBnbG9iYWwgIHJlY29nbml0aW9uIG9mIHRoZSBpbXBvcnRhbmNlIG9mIHVuaXF1ZSB0cmFkaXRpb25hbCAgYWdyaWN1bHR1cmFsIHN5c3RlbXMgZm9yIGZvb2Qgc2VjdXJpdHkgYW5kIHN1c3RhaW5hYmxlICBkZXZlbG9wbWVudC4gVGhlIEdJQUhTIGluaXRpYXRpdmUgZXhwbGljaXRseSByZWNvZ25pc2VzICB0aGF0IGNoYW5nZSBpbiAndHJhZGl0aW9uYWwnIHBvbGl0aWNhbCwgc29jaWFsIGFuZCBlY29ub21pYyAgcHJvY2Vzc2VzIGlzIGluZXZpdGFibGU7IHRoZXkgY2Fubm90IGJlIGZyb3plbiBvciAgcmUtY3JlYXRlZC4gIChpaSkgVGhlcmUgaXMgbm8gcHJvdmlzaW9uIHRvIGdpdmUgR2VvZ3JhcGhpY2FsIGluZGljYXRpb24gdG8gICdBTEwnIHZhcmlldGllcy4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgd3JvbmcuIEJ5ICBlbGltaW5hdGlvbiBtZXRob2QsIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIChiKSBvbmx5IDIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 60,
      "question" : "With reference to 'Initiative for Nutritional Security through Intensive Millets Promotion', which of the following statements is/are correct?  1. This initiative aims to demonstrate the improved production and post-harvest technologies, and to demonstrate value addition techniques, in an integrated manner, with cluster approach. 2. Poor, small, marginal and tribal farmers have larger stake in this scheme. 3. An important objective of the scheme is to encourage farmers of commercial crops to shift to millet cultivation by offering them free kits of critical inputs of nutrients and micro irrigation equipment. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2MA==",
      "description" : "KGkpICBUaGlzIGluaXRpYXRpdmUgYWltcyB0byBkZW1vbnN0cmF0ZSB0aGUgaW1wcm92ZWQgIHByb2R1Y3Rpb24gYW5kIHBvc3QtaGFydmVzdCB0ZWNobm9sb2dpZXMgaW4gYW4gaW50ZWdyYXRlZCAgbWFubmVyIHRvIGNhdGFseXplIGluY3JlYXNlZCBwcm9kdWN0aW9uIG9mIG1pbGxldHMgaW4gdGhlICBjb3VudHJ5LiBUaGUgc2NoZW1lLCB0aHJvdWdoIHByb2Nlc3NpbmcgYW5kIHZhbHVlICBhZGRpdGlvbiB0ZWNobmlxdWVzLCBpcyBleHBlY3RlZCB0byBnZW5lcmF0ZSBjb25zdW1lciAgZGVtYW5kIGZvciBtaWxsZXQgYmFzZWQgZm9vZCBwcm9kdWN0cy4gUG9vciwgc21hbGwsICBtYXJnaW5hbCBhbmQgdHJpYmFsIGZhcm1lcnMgaGF2ZSBsYXJnZXIgc3Rha2UgaW4gdGhpcyBzY2hlbWUuICAoaWkpIDFzdCBhbmQgMm5kIHN0YXRlbWVudHMgYXJlIHJpZ2h0LiBQb2xpY3kgYWltcyB0byBnaXZlIGZyZWUgIGtpdHMgYnV0ICd3YW50aW5nIHRvIHNoaWZ0IGNvbW1lcmNpYWwgY3JvcCBmYXJtZXJzIHRvIG1pbGxldCcgIGRvZXNuJ3QgZml0IGxvZ2ljLiBUaGVyZSBpcyBubyBzdWNoIG1lbnRpb24gaW4gdGhlIHNjaGVtZSwgIG5vciBhbnkgdGFsayBhYm91dCBnaXZpbmcgbWljcm8taXJyaWdhdGlvbiBlcXVpcG1lbnQuICBIZW5jZSAzcmQgc3RhdGVtZW50IHdyb25nLiAgUmVmOiBodHRwOi8vYWdyaWNvb3AubmljLmluL0FkbWluX0Fncmljb29wL1VwbG9hZGVkXyAgRmlsZS9JTlNJTVAucGRmIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements :  The nation-wide 'Soil Health Card Scheme' aims at 1. expanding the cultivable area under irrigation. 2. enabling the banks to assess the quantum of loans to be granted to farmers on the basis of soil quality. 3. checking the overuse of fertilizers in farmlands. Which of the above statements is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2MQ==",
      "description" : "QSBzb2lsIGhlYWx0aCBjYXJkIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IDEyIHNvaWwgIHBhcmFtZXRlcnMsIHNvIGZhcm1lciBjYW4gdXNlIGFwcHJvcHJpYXRlIGZlcnRpbGl6ZXJzLiBoZW5jZSAgb25seSAzIGlzIHRoZSBjb3JyZWN0IHN0YXRlbWVudC4gU3RhdGVtZW50IDEgYW5kIDIgYXJlICBpcnJlbGV2YW50LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 62,
      "question" : "What is/are the advantage/advantages of implementing the 'National Agriculture Market' (NAM) scheme?     1. It is a pan-India electronic trading portal for agricultural commodities. 2. It provides the farmers access to nationwide market, with prices commensurate with the quality of their produce. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2Mg==",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0IGFzIHBlciBHb3Zlcm5tZW50ICBub3RpZmljYXRpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 63,
      "question" : "Which of the following practices can help in water conservation in agriculture?  1. Reduced or zero tillage of the land 2. Applying gypsum before irrigating the field 3. Allowing crop residue to remain in the field Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2Mw==",
      "description" : "QWNjb3JkaW5nIHRvIHRoZSBLdXJ1a3NoZXRyYSBNYWdhemluZSBOb3ZlbWJlciAgMjAxNyBzcGVjaWFsIGlzc3VlIG9uIGlycmlnYXRpb246IFRpbGxhZ2UgZXhwb3NlcyB0aGUgc29pbCAgdG8gZHJ5aW5nLCBjb252ZXJzZWx5LCByZWR1Y3Rpb25zIGluIHRpbGxhZ2UgaGVscCBjb25zZXJ2ZSAgc29pbCB3YXRlci4gU28gIzEgaXMgcmlnaHQuIFRoZSByZXRlbnRpb24gb2YgY3JvcCByZXNpZHVlcyAgaGVscHMgaW4gcmVkdWNpbmcgd2F0ZXIgbG9zcyBmcm9tIHRoZSBzb2lsIHRvIHRoZSBhaXIgYW5kICBjb29scyB0aGUgc29pbC4gU28sICMzIGlzIHJpZ2h0LiBBY2NvcmRpbmcgdG8gc29tZSByYW5kb20gIHJlc2VhcmNoIHBhcGVycyAmIEdvb2dsZSBib29rcyBldmVuIGd5cHN1bSBhcHBsaWNhdGlvbiAgaGVscHMgaW4gd2F0ZXIgY29uc2VydmF0aW9uIHNvIGV4cGVydHMgd2FyZSBkaXZpZGVkICBiZXR3ZWVuIE9wdGlvbiAoYykgb3IgKGQpLiBCdXQgaW4gdGhlIG9mZmljaWFsIGFuc3dlciBrZXkgIFVQU0MgaGFzIGtlcHQgKGMpIGFzIHRoZSBjb3JyZWN0IGFuc3dlci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 64,
      "question" : "With reference to agriculture in India, how can the technique of 'genome sequencing', often seen in the news, be used in the immediate future?  1. Genome sequencing can be used to identify genetic markers for disease resistance and drought tolerance in various crop plants. 2. This technique helps in reducing the time required to develop new varieties of crop plants. 3. It can be used to decipher the host-pathogen relationships in crops. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2NA==",
      "description" : "U2luY2UgVVBTQyBoYXMgY29tYmluZWQgdGhlIHByZWxpbWluYXJ5IGV4YW0gb2YgIGNpdmlsIHNlcnZpY2VzIGFuZCBmb3Jlc3Qgc2VydmljZXMsIHNvIGZldyBzdWNoIG9kZCAgcXVlc3Rpb25zIGFyZSBleHBlY3RlZC4gVGhlcmUgaXMgbm8gbmVlZCB0byBsb3NlIHNsZWVwLCBpZiAgeW91IGNhbid0IHNvbHZlIGl0LiBCdXQgbGV0J3MgZG8gaXQ6ICBOQ0VSVCBDbGFzcyAxMiBCaW9sb2d5IENoYXB0ZXIgNjogIk1vbGVjdWxhciBCYXNpcyBvZiAgSW5oZXJpdGFuY2UiLiAgSXQgZXhwbGFpbnMgdGhlIGJlbmVmaXRzIG9mIGh1bWFuIGdlbm9tZSBzZXF1ZW5jaW5nICB0aGF0LSAiSXQgaXMgdGhlIHNlcXVlbmNlIG9mIGJhc2VzIGluIEROQSB0aGF0IGRldGVybWluZXMgIHRoZSBnZW5ldGljIGluZm9ybWF0aW9uIG9mIGEgZ2l2ZW4gb3JnYW5pc20uIFNvLCBsZWFybmluZyAgYWJvdXQgdGhlIEROQSBzZXF1ZW5jZXMgY2FuIGxlYWQgdG8gYW4gdW5kZXJzdGFuZGluZyAgb2YgdGhlaXIgbmF0dXJhbCBjYXBhYmlsaXRpZXMgdGhhdCBjYW4gYmUgYXBwbGllZCB0b3dhcmQgIHNvbHZpbmcgY2hhbGxlbmdlcyBpbiBoZWFsdGggY2FyZSwgYWdyaWN1bHR1cmUsIGVuZXJneSAgcHJvZHVjdGlvbiwgZW52aXJvbm1lbnRhbCByZW1lZGlhdGlvbi4iICBTbyBvbiB0aGF0IGxvZ2ljLCBzdGF0ZW1lbnQgMSBhbmQgMyBzaG91bGQgYmUgcG9zc2libGUsICBhbmQgaWYgMSBhbmQgMyBhcmUgcG9zc2libGUgdGhlbiBzdGF0ZW1lbnQgMiBvdWdodCB0byBiZSAgcG9zc2libGUgYXMgd2VsbCEgU28gYW5zd2VyIChkKSBhbGwgdGhyZWUgc3RhdGVtZW50cyBhcmUgIGNvcnJlY3QuIFNlYXJjaGluZyBhY2FkZW1pYyBwYXBlcnMgb24gR29vZ2xlIFNjaG9sYXIgIGVuZ2luZWVyIGNvbmZpcm1zIHRoYXQgKGQpIGlzIHRoZSBhbnN3ZXIuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 65,
      "question" : "With reference to the circumstances in Indian agriculture, the concept of \"Conservation Agriculture\" assumes significance. Which of the following fall under the Conservation Agriculture?  1. Avoiding the monoculture practices 2. Adopting minimum tillage 3. Avoiding the cultivation of plantation crops 4. Using crop residues to cover soil surface 5. Adopting spatial and temporal crop sequencing/crop rotations Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2NQ==",
      "description" : "S3VydWtzaGV0cmEgRmVicnVhcnkgMjAxOCBJc3N1ZSBvbiBBZ3JpY3VsdHVyZSwgcGFnZSAgNDMgaGFzIGdpdmVuIHRocmVlIGtleSBmZWF0dXJlcyBvZiBjb25zZXJ2YXRpb24gYWdyaWN1bHR1cmUgIHZpejogIGkuIG1pbmltdW0gc29pbCBkaXN0dXJiYW5jZSBieSBhZG9wdGluZyBuby10aWxsYWdlIG9yICBtaW5pbXVtIHRpbGxhZ2UgYW5kIHJlZHVjZWQgdHJhZmZpYyBmb3IgYWdyaWN1bHR1cmFsICBvcGVyYXRpb25zLiBTbywgIzIgaXMgcmlnaHQuIFRoaXMgZWxpbWluYXRlcyBPcHRpb24gKGEpICBpaS4gbWF4aW11bSBzb2lsIGNvdmVyIGJ5IGxlYXZpbmcgY3JvcCByZXNpZHVlcyBvbiB0aGUgIHNvaWwgc3VyZmFjZS4gU28sICM0IGlzIHJpZ2h0LiBUaGlzIGVsaW1pbmF0ZXMgT3B0aW9uIChkKSAgaWlpLiBhZG9wdCBzcGF0aWFsIGFuZCB0ZW1wb3JhbCBjcm9wIHNlcXVlbmNpbmcvY3JvcCAgcm90YXRpb24uIFNvLCAjNSBpcyB2ZXJiYXRpbSByaWdodC4gSGVuY2UgZmluYWwgYW5zd2VyIChjKSA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 ",
        "option2" : " 2, 3, 4 and 5 ",
        "option3" : " 2, 4 and 5 ",
        "option4" : " 1, 2, 3 an 5 "
      }
    },
    {
      "index" : 66,
      "question" : "What are the advantages of fertigation in agriculture?  1. Controlling the alkalinity of irrigation water is possible. 2. Efficient application of Rock Phosphate and all other phosphatic fertilizers is possible. 3. Increased availability of nutrients to plants is possible. 4. Reduction in the leaching of chemical nutrients is possible. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2Ng==",
      "description" : "TkNFUlQgdm9jYXRpb25hbCBjbGFzcyAxMSBmbG9yaWN1bHR1cmlzdCBib29rIHBhZ2UgIDg0OiAgV2hlbiBhbiBlbGVtZW50IGZvcm1zIHByZWNpcGl0YXRlIHdpdGggYW5vdGhlciAgc3Vic3RhbmNlIGNvbW1vbmx5IGZvdW5kIGluIHRoZSBpcnJpZ2F0aW9uIHdhdGVyLCBpdCBpcyAgbm90IGFkdmlzYWJsZSB0byB1c2UgdGhpcyBtZXRob2QuIFBob3NwaG9ydXMgYW5kICBhbmh5ZHJvdXMgYW1tb25pYSBtYXkgZm9ybSBhIHByZWNpcGl0YXRlIGluIHdhdGVyIHdpdGggIGhpZ2ggY2FsY2l1bSBhbmQgbWFnbmVzaXVtIGNvbnRlbnQuIFNvIHRoZXkgYXJlIG5vdCAgdXNlZCAgaW4gIGZlcnRpZ2F0aW9uLiAgU28gIDJuZCAgc3RhdGVtZW50ICBpcyAgd3JvbmcgIGJ5ICBlbGltaW5hdGlvbiB3ZSBhcnJpdmVkIGF0IHRoZSBhbnN3ZXIgJ2MnLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 1, 2 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 2, 3 an 4 only "
      }
    },
    {
      "index" : 67,
      "question" : "What is/are the advantage/advantages of zero tillage in agriculture?  1. Sowing of what is possible without burning the residue of the previous crop. 2. Without the need for nursery of rice saplings, direct planting of paddy seeds in the wet soil is possible. 3. Carbon sequestration in the soil is possible. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2Nw==",
      "description" : "ICgtKU9wZW4gYnVybmluZyBvZiBjcm9wIHJlc2lkdWVzIGluIHRoZSBhZ3JpY3VsdHVyYWwgIGZpZWxkcyBoYXMgYmVjb21lIGFuIGVudmlyb25tZW50YWwgY29uY2VybiBpbiBJbmRpYSwgIHBhcnRpY3VsYXJseSBkdXJpbmcgcGFkZHkgaGFydmVzdGluZyBzZWFzb24uIC4uLi5UaGUgIFVuaW9uIGdvdmVybm1lbnQgaXMgcHJvdmlkaW5nIHN1YnNpZHkgZm9yIEhhcHB5ICBTZWVkZXJzLCBaZXJvIFRpbGwgU2VlZCBEcmlsbCBldGMuIHdoaWNoIGNhbiBoZWxwIHBsYW50aW5nICB0aGUgc2VlZHMgZm9yIG5leHQgY3JvcCB3aXRob3V0IGJ1cm5pbmcgdGhlIHByZXZpb3VzICBjcm9wLiBTbywgIzEgaXMgY29ycmVjdC4gUmVmOiBFY29ub21pYyBTdXJ2ZXkgMjAxOS0yMCAgVm9sdW1lIDIgcGFnZSAxODYtMTg5LiAgKC0pSW4gdGhlIHplcm8gdGlsbGFnZSwgV2UgYXJlIG5vdCBkaXN0dXJiaW5nIHRoZSBzb2lsICBhbmQgd2UgYXJlIG5vdCBidXJuaW5nIHRoZSBwcmV2aW91cyBjcm9wIFJlc2lkdWUgc28gIHRoYXQgd2F5LCBpdCBjb3VsZCBoZWxwIGluIENhcmJvbiBzZXF1ZXN0cmF0aW9uLiBTbywgIzMgIHNob3VsZCBiZSBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 68,
      "question" : "'The  crop  is  subtropical  in  nature.  A  hard  frost  is injurious to it. It requires at least 210 frost-free days and 50 to 100 centimeters of rainfall for its growth. A light well-drained soil capable of retaining moisture is ideally suited for the cultivation of the crop.' Which one of the following is the crop?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZXw2OA==",
      "description" : "ICgtKVN1Z2FyY2FuZSByZXF1aXJlcyBhbiBhbm51YWwgcmFpbmZhbGwgYmV0d2VlbiAgNzVjbS5hbmQgMTAwY20uIElycmlnYXRpb24gaXMgcmVxdWlyZWQgaW4gdGhlIHJlZ2lvbnMgb2YgIGxvdyByYWluZmFsbC4gU28sICNDIGVsaW1pbmF0ZWQuICAoLSlDb3R0b24gcmVxdWlyZXMgaGlnaCB0ZW1wZXJhdHVyZSwgbGlnaHQgcmFpbmZhbGwgb3IgIGlycmlnYXRpb24sIDIxMCBmcm9zdC1mcmVlIGRheXMuICAoLSlKdXRlOiByZXF1aXJlcyBoaWdoIHRlbXBlcmF0dXJlLCBoZWF2eSByYWluZmFsbCBhbmQgIGh1bWlkIGNsaW1hdGUgICgtKVRlYTogcmVxdWlyZXMgY29vbCBjbGltYXRlIGFuZCB3ZWxsIGRpc3RyaWJ1dGVkIGhpZ2ggIHJhaW5mYWxsIHRocm91Z2hvdXQgdGhlIHllYXIgICgtKUNvdHRvbjogQ290dG9uIHJlcXVpcmVzIGhpZ2ggdGVtcGVyYXR1cmUsIGxpZ2h0ICByYWluZmFsbCwgMjEwIGZyb3N0LWZyZWUgZGF5cy4gICgtKUNvbnNpZGVyaW5nIHRoZXNlIGRlc2NyaXB0aW9ucywgY290dG9uIHNlZW1zIHRvIGJlICB0aGUgYmV0dGVyIGNob2ljZSBhbW9uZyB0aGUgZ2l2ZW4gb3B0aW9ucy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxBZ3JpY3VsdHVyZQ==",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Agriculture",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Cotton ",
        "option2" : " Jute ",
        "option3" : " Sugarcane ",
        "option4" : " Tea "
      }
    }
  ],
  "subject" : "Geography",
  "topic" : "Agriculture",
  "year" : "0"
}
