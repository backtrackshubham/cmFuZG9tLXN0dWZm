{
  "testId" : "indian-polity-&-governance|government-&-administration-(india-&-world)",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which one of the following is correct in respect of the commencement of the election process in India?     ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE=",
      "description" : "VGhlIEVsZWN0aW9uIGNvbW1pc3Npb24gb2YgSW5kaWEgaXMgYW4gYXV0b25vbW91cyAgY29uc3RpdHV0aW9uYWwgYXV0aG9yaXR5IHJlc3BvbnNpYmxlIGZvciBhZG1pbmlzdGVyaW5nIFVuaW9uICBhbmQgU3RhdGUgZWxlY3Rpb24gcHJvY2Vzc2VzIGluIEluZGlhLiBUaGUgYm9keSBhZG1pbmlzdGVycyAgZWxlY3Rpb25zIHRvIHRoZSBMb2sgU2FiaGEsIFJhanlhIFNhYmhhLCBhbmQgU3RhdGUgIExlZ2lzbGF0aXZlIEFzc2VtYmxpZXMgaW4gSW5kaWEsIGFuZCB0aGUgb2ZmaWNlcyBvZiB0aGUgIFByZXNpZGVudCBhbmQgVmljZSBQcmVzaWRlbnQgaW4gdGhlIGNvdW50cnkuIFRoZSAgcmVjb21tZW5kYXRpb24gZm9yIGVsZWN0aW9uIGlzIG1hZGUgYnkgdGhlIEVsZWN0aW9uICBDb21taXNzaW9uIGFuZCB0aGUgbm90aWZpY2F0aW9uIGZvciBlbGVjdGlvbiBpcyBpc3N1ZTRkIGJ5ICB0aGUgUHJlc2lkZW50IGFuZCBHb3Zlcm5vcnMgb2YgdGhlIFN0YXRlcyBjb25jZXJuZWQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The recommendation for election is made by the  government and the notification for election is issued  by the Election Commission ",
        "option2" : " The recommendation for election is made by the  Election Commission and the notification for election  is issued by the Home Ministry at the Centre and Home  Departments in the States ",
        "option3" : " The recommendation for election is made by the  Election Commission and the notification for election  is issued by the President and Governors of the States  concerned ",
        "option4" : " Both the exercises of making a recommendation for "
      }
    },
    {
      "index" : 2,
      "question" : "Council of states House of the People Not more than 250 Not more than 552 members members Not more than 238 not more than 530 representatives of representative of states States and Union plus not more than 2 Territories nominated Anglo-Indians plus X Which one of the following will fit in the place marked 'X'?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI=",
      "description" : "VGhlIG1heGltdW0gc3RyZW5ndGggb2YgdGhlIEhvdXNlIGVudmlzYWdlZCBieSB0aGUgIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBpcyA1NTIsIHdoaWNoIGlzIG1hZGUgdXAgYnkgZWxlY3Rpb24gb2YgIHVwIHRvIDUzMCBtZW1iZXJzIHRvIHJlcHJlc2VudCB0aGUgc3RhdGVzOyB1cCB0byAyMCBtZW1iZXJzICB0byByZXByZXNlbnQgdGhlIFVuaW9uIFRlcnJpdG9yaWVzIGFuZCBub3QgbW9yZSB0aGFuIHR3byAgbWVtYmVycyBvZiB0aGVBbmdsby1JbmRpYW4gQ29tbXVuaXR5IHRvIGJlIG5vbWluYXRlZCAgYnkgdGhlIFByZXNpZGVudCBvZiBJbmRpYSwgaWYsIGluIGhpcy9oZXIgb3BpbmlvbiwgdGhhdCAgY29tbXVuaXR5IGlzIG5vdCBhZGVxdWF0ZWx5IHJlcHJlc2VudGVkIGluIHRoZSBIb3VzZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Ministers who are not members of Parliament but who  have to get themselves elected to either House of  Parliament within six months after assuming office ",
        "option2" : " Not more than 20 nominated members ",
        "option3" : " Not more than 20 representative of Union Territories ",
        "option4" : " The Attorney General who has the right to speak and "
      }
    },
    {
      "index" : 3,
      "question" : "Who among the following have the right to vote in the elections to both the Lok Sabha and the Rajya Sabha?    ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM=",
      "description" : "QXMgSW5kaWFuIGZvbGxvd3MgVW5pdmVyc2FsIEFkdWx0IFN1ZmZyYWdlIGVsZWN0ZWQgIG1lbWJlcnMgb2YgdGhlIExvd2VyIEhvdXNlIG9mIHRoZSBTdGF0ZSBMZWdpc2xhdHVyZSBpLiBlLiwgIExhcyBoYXZlIHRoZSByaWdodCB0byB2b3RlIGluIHRoZSBlbGVjdGlvbnMgdG8gYm90aCB0aGUgTG9rICBTYWJoYSBhbmQgUmFqeWEgU2FiaGEuIFRoZSBTdGF0ZSBMZWdpc2xhdHVyZSBiZXNpZGVzICBtYWtpbmcgbGF3cyBhbHNvIGhhcyBvbmUgZWxlY3RvcmFsIHBvd2VyIGluIGVsZWN0aW5nIHRoZSAgUHJlc2lkZW50IG9mIEluZGlhLiBFbGVjdGVkIG1lbWJlcnMgb2YgdGhlIExlZ2lzbGF0aXZlICBBc3NlbWJseSBhbG9uZyB3aXRoIHRoZSBlbGVjdGVkIG1lbWJlcnMgb2YgUGFybGlhbWVudCBhcmUgIGludm9sdmVkIGluIHRoaXMgcHJvY2Vzcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Elected members of the Lower House of the Parliament ",
        "option2" : " Elected members of the Upper House of the Parliament ",
        "option3" : " Elected members of the Upper House of the State  Legislature ",
        "option4" : " Elected members of the Lower House of the State "
      }
    },
    {
      "index" : 4,
      "question" : "Which one of the following States of India does not have a Legislative Council even though the Constitution? (Seventh Amendment) Act, 1956 provides for it?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ=",
      "description" : "VGhlcmUgYXJlIG9ubHkgZml2ZSBzdGF0ZXMgd2l0aCBiaWNhbWVyYWwgbGVnaXNsYXR1cmUgIChMZWdpc2xhdGl2ZSBhc3NlbWJseSBhcyB3ZWxsIGFzIExlZ2lzbGF0aXZlIENvdW5jaWwpIC0gVVAsICBCaWhhciwgTWFoYXJhc2h0cmEsIEthcm5hdGFrYSBhbmQgSmFtbXUgJiBLYXNobWlyIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Maharashtra ",
        "option2" : " Bihar ",
        "option3" : " Karnataka ",
        "option4" : " Mahya Praesh "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following is the State in which the Lok Ayukta Act includes the Chief Minister in its ambit?             ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU=",
      "description" : "SW4gR3VqYXJhdCBhbmQgTWFoYXJhc2h0cmEgdGhlIENoaWVmIE1pbmlzdGVycyBjb21lICB1bmRlciB0aGUgYW1iaXQgb2YgTG9rIEF5dWt0YSBBY3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " West Bengal and Kerala ",
        "option2" : " Gujarat and Maharashtra ",
        "option3" : " Madhya Pradesh and Orissa ",
        "option4" : " Rajasthan and Karnataka "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the followings political parties is/are national political parties?  1. Muslim League 2. Revolutionary Socialist Party 3. All India Forward Block 4. Peasants and Workers Party of India Codes: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDY=",
      "description" : "QWxsIHRoZSBwYXJ0aWVzIG1lbnRpb25lZCBhcmUgc3RhdGUgbGV2ZWwgcGFydGllcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2 and 4 ",
        "option3" : " 3 only ",
        "option4" : " None "
      }
    },
    {
      "index" : 7,
      "question" : "The Dinesh Goswami Committee was concerned with:      ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDc=",
      "description" : "RGluZXNoIEdvc3dhbWkgQ29tbWl0dGVlICgxOTkwKSB3YXMgY29uY2VybmVkIHdpdGggIGVsZWN0b3JhbCByZWZvcm1zLiBJdCBzdWdnZXN0ZWQgcHJvdmlkaW5nIHN0YXRlIGZ1bmRpbmcgaW4gIGtpbmQgdG8gcG9saXRpY2FsIHBhcnRpZXMuIEl0IGFsc28gc3VnZ2VzdGVkIHRoYXQgYSBjYW5kaWRhdGUgIHNob3VsZCBub3QgYmUgYWxsb3dlZCAgdG8gIGNvbnRlc3QgZWxlY3Rpb24gZnJvbSBtb3JlIHRoYW4gIHR3byBjb25zdGl0dWVuY2llcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " de-nationalisation of banks ",
        "option2" : " electoral reforms ",
        "option3" : " steps to put down insurgency in the north-east ",
        "option4" : " the problem of the Chakmas "
      }
    },
    {
      "index" : 8,
      "question" : "If in an election to a State legislative assembly, the candidate who is declared elected loses his deposit, it means that: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDg=",
      "description" : "QSBkZWZlYXRlZCBjYW5kaWRhdGUgd2hvIGZhaWxzIHRvIHNlY3VyZSBtb3JlIHRoYW4gIG9uZSBzaXh0aCBvZiB0aGUgdmFsaWQgdm90ZXMgcG9sbGVkIGluIHRoZSBjb25zdGl0dWVuY3kgd2lsbCAgbG9zZSBoaXMgc2VjdXJpdHkgZGVwb3NpdC4gV2hlbiBhIHZlcnkgbGFyZ2UgbnVtYmVyIG9mICBjYW5kaWRhdGVzIGNvbnRlc3QgdGhlIGVsZWN0aW9uLCBkdWUgdG8gZGlzdHJpYnV0aW9uIG9mIHZvdGVzLCAgdGhlIHdpbm5pbmcgY2FuZGlkYXRlIG1heSBnZXQgbGVzcyB0aGFuIDEvNiB0aCBvZiB2YWxpZCAgdm90ZXJzLiAgOS4gKCopIEluY29tcGxldGUgcXVlc3Rpb24uIEluIHRoaXMgcXVlc3Rpb24gbm8gZGF0YSBpcyAgcHJvdmlkZWQgZm9yIHBlcmNlbnRhZ2Ugb2YgU0MgcG9wdWxhdGlvbi4gVGhhdCdzIHdoeSB0aGUgIG51bWJlciBvZiByZXNlcnZlZCBzZWF0cyBmb3IgU0NzIGNhbm5vdCBiZSBwcmVkaWN0ZWQuICAgQyAyNCA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " the polling was very poor ",
        "option2" : " the election was for a multi-member constituency ",
        "option3" : " the elected candidate's victory over his nearest rival  was very marginal ",
        "option4" : " a very large number of candidates contested the election "
      }
    },
    {
      "index" : 10,
      "question" : "Which one of the following is a part of the electoral college for the President but, not the forum for his impeachment?    ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDEw",
      "description" : "QWNjb3JkaW5nIHRvIGFydGljbGUgNTQsIGVsZWN0b3JhbCBjb2xsZWdlIG9mIFByZXNpZGVudCAgaW5jbHVkZXMgZWxlY3RlZCBtZW1iZXJzIG9mIExTLCBSUyBhbmQgU3RhdGUgbGVnaXNsYXRpdmUgIGFzc2VtYmxpZXMuIFVuZGVyIGFydGljbGUgNjEsIG1lbWJlcnMgb2Ygc3RhdGUgbGVnaXNsYXRpdmUgIGFzc2VtYmxpZXMgZG8gbm90IHRha2UgcGFydCBpbiB0aGUgcHJvY2VzcyBvZiBpbXBlYWNobWVudCAgb2YgdGhlIHByZXNpZGVudC4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Lok Sabha ",
        "option2" : " Rajya Sabha ",
        "option3" : " State Legislative Councils ",
        "option4" : " State Legislative Assemblies "
      }
    },
    {
      "index" : 11,
      "question" : "Which one of the following statements about the duties of Prime Minister is correct?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDEx",
      "description" : "UE0gaGFzIGNvbXBsZXRlIGRpc2NyZXRpb24gdG8gY2hvb3NlIGhpcyBtaW5pc3RlcnMgaW4gIHRoZSBDYWJpbmV0IG5vdCBuZWNlc3NhcmlseSBmcm9tIHRoZSB0d28gSG91c2VzIG9mICBQYXJsaWFtZW50IGJ1dCBjYW4gYWxzbyBjaG9vc2UgYW55IG90aGVyIHBlcnNvbi4gVGhhdCBwZXJzb24gIHNob3VsZCBiZWNvbWUgbWVtYmVyIG9mIGVpdGhlciBob3VzZSB3aXRoaW4gNiBtb250aHMgZnJvbSAgdGhlIGRhdGUgaGUgZW50ZXJzIHRoZSBvZmZpY2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Is free to choose his minister only from among members  of either House of the Parliament ",
        "option2" : " Can choose his cabinet after consulting the President  of India. ",
        "option3" : " Has full discretion in the choice of persons who are to  serve as ministers in his cabinet ",
        "option4" : " Has only limited power in the choice of his cabinet "
      }
    },
    {
      "index" : 12,
      "question" : "Of the four forms of political protests mentioned below, which one is derived from the name of the person who used it as a political weapon for the first time?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDEy",
      "description" : "Q2FwdGFpbiBDaGFybGVzIEN1bm5pbmdoYW0gQm95Y290dCB3YXMgYSBCcml0aXNoICBsYW5kIGFnZW50IHdob3NlIG9zdHJhY2lzbSBieSB0aGUgbG9jYWwgY29tbXVuaXR5IGluICBJcmVsYW5kIGFzIHBhcnQgb2YgYSBjYW1wYWlnbiBmb3IgYWdyYXJpYW4gdGVuYW50cycgcmlnaHRzIGluICAxODgwIGdhdmUgdGhlIEVuZ2xpc2ggbGFuZ3VhZ2UgdGhlIHZlcmIgdG8gYm95Y290dCwgbWVhbmluZyAgInRvIG9zdHJhY2lzZSIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Boycott ",
        "option2" : " Gherao ",
        "option3" : " Bandh ",
        "option4" : " Hartal "
      }
    },
    {
      "index" : 13,
      "question" : "Given below are two statements, one labelled as Assertion (A) and the other labelled as Reason (R) : Assertion (A) : The word minority is not defined in the Constitution of India. Reason (R) : The Minorities Commission is not a constitutional body. 2 Government & Administration (India & World) E B D _8 34 2 Government & Administration (India & World) C 15 In the context of the above two statements, which one of the following is correct?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDEz",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0IGJ1dCBkbyBub3QgZXhwbGFpbiB0aGUgIGFzc2VydGlvbi4gQXQgcHJlc2VudCwgdGhlIE1pbm9yaXRpZXMgQ29tbWlzc2lvbiBoYXMgYSAgU3RhdHV0b3J5IHN0YXR1cy4gMTAzcmQgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEJpbGwgIHByb3ZpZGVzIGZvciBncmFudGluZyBjb25zdGl0dXRpb25hbCBzdGF0dXMgdG8gdGhlIE1pbm9yaXRpZXMgIENvbW1pc3Npb24uIFRoZSBiaWxsIGhhcyBub3QgcGFzc2VkIGJ5IHRoZSBIb3VzZXMgb2YgIFBhcmxpYW1lbnQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 14,
      "question" : "If the Prime Minister of India belonged to the Upper House of Parliament:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE0",
      "description" : "QmVjYXVzZSBuby1jb25maWRlbmNlIG1vdGlvbiBjYW4gYmUgbW92ZWQgb25seSBpbiAgTG9rIFNhYmhhIChub3QgaW4gUlMpIGJ5IHRoZSBvcHBvc2l0aW9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " he will not be able to vote in his favour in the event of  a no-confidence motion ",
        "option2" : " he will not be able to speak on the budget in the Lower  House ",
        "option3" : " he can make statements only in the Upper House ",
        "option4" : " he was to become a member of the Lower House within "
      }
    },
    {
      "index" : 15,
      "question" : "In the Presidential election in India, every elected member of the Legislative Assembly of a State shall have as many votes as there are multiples of one thousands in the quotient obtained by dividing the population of the State by the total number of the elected members of the Assembly. As at present (1997) the expression 'population' here means the population as ascertained by the:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE1",
      "description" : "VGhlIGV4cHJlc3Npb24gYXQgcHJlc2VudCBwb3B1bGF0aW9uIGluIDE5OTcgaGVyZSAgbWVhbnMgdGhlIHByZXZpb3VzIGNlbnN1cywgaS5lLiwgMTk3MS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1991 Census ",
        "option2" : " 1981 Census ",
        "option3" : " 1971 Census ",
        "option4" : " 1961 Census "
      }
    },
    {
      "index" : 16,
      "question" : "Match List I with List II and select the correct answer:   List-I List-II (Functionaries) (Oaths or affirmations) A. President of India 1. Secrecy of information B. Judges of Supreme 2. Faithful Discharge of Court duties C. Members of 3. Faith and Allegiance Parliament to the Constitution of India D. Minister for the 4. Upholding the Union Constitution and the law Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE2",
      "description" : "T2F0aCBvciBhZmZpcm1hdGlvbiBieSB0aGUgUHJlc2lkZW50IHVuZGVyIGFydGljbGUgNjA7ICBPYXRoIG9yIGFmZmlybWF0aW9uIGJ5IEp1ZGdlIG9mIFNDLCBNZW1iZXJzIG9mIFBhcmxpYW1lbnQsICBNaW5pc3RlcnMgZm9yIHRoZSBVbmlvbiBjb21lcyB1bmRlciBUaGlyZCBTY2hlZHVsZSBvZiB0aGUgIENvbnN0aXR1dGlvbi4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A-3, B-4- C-1 D-2 ",
        "option2" : " A-4, B-3, C-2, D-1 ",
        "option3" : " A-3, B-4, C-2, D-1 ",
        "option4" : " A-4, B-3, C-1, D-2 "
      }
    },
    {
      "index" : 17,
      "question" : "Which one of the following is not a principle of \"Panchsheel\"?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE3",
      "description" : "VGhlIEZpdmUgUHJpbmNpcGxlcyBvZiBQZWFjZWZ1bCBDb2V4aXN0ZW5jZSBhcmUgYSBzZXJpZXMgIG9mIGFncmVlbWVudHMgYmV0d2VlbiB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEgYW5kICBJbmRpYS4gVGhleSB3ZXJlIGZvcm1lZCBpbiAxOTU0LiAgVGhlIDUgcHJpbmNpcGxlcyBhcmUgY2FsbGVkICB0aGUgUGFuY2hzaGVlbCwgd2hpY2ggZm9ybSB0aGUgYmFzaXMgb2YgdGhlIE5vbi1BbGlnbmVkICBNb3ZlbWVudCwgd2VyZSBsYWlkIGRvd24gYnkgSmF3YWhhcmxhbCBOZWhydS4gVGhvc2UgYXJlOiAgMS4gTXV0dWFsIHJlc3BlY3QgZm9yIGVhY2ggb3RoZXIncyB0ZXJyaXRvcmlhbCBpbnRlZ3JpdHkgYW5kICBzb3ZlcmVpZ250eSAgMi4gTXV0dWFsIG5vbi1hZ2dyZXNzaW9uIGFnYWluc3QgYW55b25lLiAgMy4gTXV0dWFsIG5vbi1pbnRlcmZlcmVuY2UgaW4gZWFjaCBvdGhlcidzIGludGVybmFsIGFmZmFpcnMgIDQuIEVxdWFsaXR5IGFuZCBtdXR1YWwgYmVuZWZpdCAgNS4gUGVhY2VmdWwgY28tZXhpc3RlbmNlICBFICBCICBEICBfOCAgMzQgIDIgIEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCkgQyAyNSAgb2Ygb2ZmaWNlIG9mIHRoZSBFbGVjdGlvbiBDb21taXNzaW9uZXIgaXMgNiB5ZWFycyBvciB0aWxsIGhlICBhdHRhaW5zIHRoZSBhZ2Ugb2YgNjUgeWVhcnMgb3Igd2hpY2hldmVyIGlzIGVhcmxpZXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Non-alignment ",
        "option2" : " Peaceful Co-existence ",
        "option3" : " Mutual respect for each other's territorial integrity and  sovereignty ",
        "option4" : " Mutual non-interference in each other's internal affairs "
      }
    },
    {
      "index" : 18,
      "question" : "Which one of the following statements about a Money Bill is not correct?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE4",
      "description" : "QSBNb25leSBiaWxsIGNhbiBiZSBpbnRyb2R1Y2VkIG9ubHkgaW4gTFMgKG5vdCBpbiBSUykgIHRoYXQgdG9vIG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiB0aGUgUHJlc2lkZW50LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A Money Bill can be tabled in either House of  Parliament ",
        "option2" : " The Speaker of Lok Sabha is the final authority to decide  whether a Bill is a Money Bill or not ",
        "option3" : " The Rajya Sabha must return a Money Bill passed by  the Lok Sabha and send it for consideration within 14  days ",
        "option4" : " The President cannot return a Money Bill to the Lok "
      }
    },
    {
      "index" : 19,
      "question" : "The Speaker can ask a member of the House to stop speaking and let another member speak. This phenomenon is known as:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDE5",
      "description" : "RGVjb3J1bSBtZWFucyBtYWludGFpbmluZyBwcm9wZXIgYmVoYXZpb3VyLiAgSW50ZXJwZWxsYXRpb24gbWVhbnMgZm9ybWFsIHJpZ2h0IG9mIGEgUGFybGlhbWVudCB0byBzdWJtaXQgIGZvcm1hbCBxdWVzdGlvbiB0byB0aGUgZ292ZXJubWVudC4gQ3Jvc3NpbmcgdGhlIGZsb29yIG1lYW5zICB0byB2b3RlIGFnYWluc3QgdGhlIHBhcnR5IGxpbmVzLiBZaWVsZGluZyB0aGUgZmxvb3IgbWVhbnMgdGhlICBzcGVha2VyIGdpdmluZyBwYXJ0IG9mIGhpcyBvciBoZXIgc3BlYWtpbmcgdGltZSB0byBhbm90aGVyICBzcGVha2VyLiBXaGlsZSB0aGlzIHByYWN0aWNlIGlzIGFsbG93ZWQgaW4gc29tZSBsZWdpc2xhdGl2ZSAgYm9kaWVzLCBpdCBpcyBub3QgYWxsb3dlZCBpbiBkZWxpYmVyYXRpdmUgYXNzZW1ibGllcywgdW5sZXNzICBzcGVjaWZpY2FsbHkgYXV0aG9yaXplZCBpbiB0aGUgcnVsZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " decorum ",
        "option2" : " crossing the floor ",
        "option3" : " interpellation ",
        "option4" : " yieling the floor "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements about the Attorney General of India:  1. He is appointed by the President of India 2. He must have the same qualifications as are required for a judge of the Supreme Court 3. He must be a member of either House of Parliament 4. He can be removed by impeachment by Parliament Which of these statements are correct? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDIw",
      "description" : "VW5kZXIgQXJ0aWNsZSA3NiwgaW1wZWFjaG1lbnQgcHJvY2VkdXJlIG9mIHRoZSAgQXR0b3JuZXktR2VuZXJhbCBpcyBub3QgcHJvdmlkZWQuICBIZSBzaGFsbCBob2xkIG9mZmljZSAgZHVyaW5nIHRoZSBwbGVhc3VyZSBvZiB0aGUgUHJlc2lkZW50LiBIZSBtdXN0IG5vdCBiZSBhICBtZW1iZXIgb2YgZWl0aGVyIEhvdXNlIG9mIFBhcmxpYW1lbnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 21,
      "question" : "The primary function of the Finance Commission in India is to:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDIx",
      "description" : "QXJ0aWNsZSAyODA7IEl0IHNoYWxsIGJlIHRoZSBkdXR5IG9mIGNvbW1pc3Npb24gdG8gbWFrZSAgcmVjb21tZW5kYXRpb25zIHRvIHRoZSBQcmVzaWRlbnQgYXMgdG86ICAoaSkgdGhlIGRpc3RyaWJ1dGlvbiBiZXR3ZWVuIHVuaW9uIGFuZCBzdGF0ZXMgb2YgdGhlIG1ldCBwcm9jZWVkcyAgb2YgdGF4ZXMsIGdyYW50cyBpbiBhaWQgb2YgdGhlIHJldmVudWVzIG9mIHRoZSBzdGF0ZXMgb3V0IG9mIHRoZSAgY29uc29saWRhdGVkIEZ1bmQgb2YgSW5kaWEsIGFueSBtYXR0ZXIgcmVmZXJyZWQgdG8gdGhlIGNvbW1pc3Npb24gIGJ5IHRoZSBwcmVzaWRlbnQgaW4gdGhlIGludGVyZXN0cyBvZiBzb3VuZCBmaW5hbmNlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " distribution of revenue between the Centre and the  States ",
        "option2" : " prepare the Annual Budget ",
        "option3" : " advise the President on financial matters ",
        "option4" : " allocate funds to various ministries of the Union and "
      }
    },
    {
      "index" : 22,
      "question" : "The Parliament can make any law for the whole or any part India for implementing international treaties:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDIy",
      "description" : "SXQgaXMgdGhlIHNvbGUgcHJlcm9nYXRpdmUgb2YgUGFybGlhbWVudCB1bmRlciBBcnRpY2xlICAyNTMgb2YgdGhlIENvbnN0aXR1dGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " with the consent of all the State ",
        "option2" : " with the consent of the majority of States ",
        "option3" : " with the consent of the States concerned ",
        "option4" : " without the consent of any State "
      }
    },
    {
      "index" : 23,
      "question" : "The state which has the largest number of seats reserved for the Scheduled Tribes in the Lok Sabha is :             ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDIz",
      "description" : "UHJlc2VudGx5ICgyMDE4KSBKaGFya2hhbmQsIE1hZGh5YSBQcmFkZXNoIGFuZCAgb2Rpc2EgZWFjaCBoYXZlIDUgc2VhdHMgcmVzZXJ2ZWQgZm9yIHNjaGVkdWxlIGNhc3RlIGluIHRoZSAgTG9rLSBTYWJoYS4gIEJ1dCBhY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCBNYWRoeWEgUHJhZGVzaCBpcyB0aGUgIGFwcHJvcHJpYXRlIGVuc3VyZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Bihar ",
        "option2" : " Gujarat ",
        "option3" : " Uttar Pradesh ",
        "option4" : " Mahya Praesh "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following functionaries:  1. Cabinet Secretary 2. Chief Election Commissioner 3. Union Cabinet Minister 4. Chief Justice of India Their correct sequence in the Order of Precedence is: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI0",
      "description" : "Q2hpZWYgSnVzdGljZSBvZiBJbmRpYSwgVW5pb24gQ2FiaW5ldCBNaW5pc3RlciwgQ2hpZWYgIEVsZWN0aW9uIENvbW1pc3Npb25lciBhbmQgQ2FiaW5ldCBTZWNyZXRhcnkgaXMgdGhlIGNvcnJlY3QgIG9yZGVyIG9mIHByZWNlZGVuY2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 3, 4, 2, 1 ",
        "option2" : " 4, 3, 1, 2 ",
        "option3" : " 4, 3, 2, 1 ",
        "option4" : " 3, 4, 1, 2 "
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following duties is not performed by Comptroller and Auditor general of India?                 ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI1",
      "description" : "QXMgcGVyIHByb3Zpc2lvbnMgdW5kZXIgQXJ0aWNsZSAxNDksIHRoZSBDb21wdHJvbGxlciAgYW5kIEF1ZGl0b3IgR2VuZXJhbCBzaGFsbCBwZXJmb3JtIHN1Y2ggZHV0aWVzIGFuZCBleGVyY2lzZSAgc3VjaCBwb3dlcnMgaW4gcmVsYXRpb24gdG8gdGhlIGFjY291bnRzIG9mIHRoZSBVbmlvbiBhbmQgb2YgIHRoZSBTdGF0ZXMgYW5kIG9mIGFueSBvdGhlciBhdXRob3JpdHkgb3IgYm9keSBhcyBtYXkgYmUgIHByZXNjcmliZWQgYnkgb3IgdW5kZXIgYW55IGxhdyBtYWRlIGJ5IFBhcmxpYW1lbnQgYW5kLCAgdW50aWwgcHJvdmlzaW9uIGluIHRoYXQgYmVoYWxmIGlzIHNvIG1hZGUsIHNoYWxsIHBlcmZvcm0gc3VjaCAgZHV0aWVzIGFuZCBleGVyY2lzZSBzdWNoIHBvd2VycyBpbiByZWxhdGlvbiB0byB0aGUgYWNjb3VudHMgIG9mIHRoZSBVbmlvbiBhbmQgb2YgdGhlIFN0YXRlcyBhcyB3ZXJlIGNvbmZlcnJlZCBvbiBvciAgZXhlcmNpc2FibGUgYnkgdGhlIEF1ZGl0b3IgR2VuZXJhbCBvZiBJbmRpYSBpbW1lZGlhdGVseSAgYmVmb3JlIHRoZSBjb21tZW5jZW1lbnQgb2YgdGhpcyBDb25zdGl0dXRpb24gaW4gcmVsYXRpb24gdG8gIHRoZSBhY2NvdW50cyBvZiB0aGUgRG9taW5pb24gb2YgSW5kaWEgYW5kIG9mIHRoZSBQcm92aW5jZXMgIHJlc3BlY3RpdmVseS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " To audit and report on all expenditure from the  Consolidated Fund of India ",
        "option2" : " To audit and report on all expenditure from the  Contingency Funds and Public Accounts ",
        "option3" : " To audit and report on all trading, manufacturing, profit  and loss accounts ",
        "option4" : " To control the receipt and issue of public money, and "
      }
    },
    {
      "index" : 26,
      "question" : "In what way does the Indian Parliament exercise control over the administration?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI2",
      "description" : "UGFybGlhbWVudGFyeSBDb21taXR0ZWVzIGFyZSBmb3JtZWQgdG8gZGlzcG9zZSBvZmYgIHRoZSBsYXJnZSB2b2x1bWUgb2Ygd29yayBpbiB0aW1lIGJ1dCB3aXRoIGRldGFpbGVkIHNjcnV0aW55LiAgVGhlaXIgYXBwb2ludG1lbnQsIHRlcm1zIG9mIG9mZmljZSBhcyB3ZWxsIGFzIGZ1bmN0aW9ucyBldGMgIGFyZSByZWd1bGF0ZWQgYnkgcHJvdmlzaW9ucyB1bmRlciBBcnRpY2xlIDExOCgxKS4gVGhlc2UgYXJlICBvZiAyIGtpbmRzOiBTdGFuZGluZyBDb21taXR0ZWVzIGFuZCBBZC1ob2MgQ29tbWl0dGVlcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Through Parliamentary Committees ",
        "option2" : " Through Consultative Committees in various ministries ",
        "option3" : " By making the administrators send periodic reports ",
        "option4" : " By compelling the executive to issue writs "
      }
    },
    {
      "index" : 27,
      "question" : "In which one of the following areas does the State Government not have control over its local bodies?   ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI3",
      "description" : "VGhlIFN0YXRlIGdvdmVybm1lbnQgZG9lcyBub3QgaGF2ZSBjb250cm9sIG92ZXIgaXRzICBsb2NhbCBib2RpZXMgaW4gbWF0dGVycyBvZiBDaXRpemVucycgZ3JpZXZhbmNlcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Citizens' grievances ",
        "option2" : " Financial matters ",
        "option3" : " Legislation ",
        "option4" : " Personnel matters "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements regarding the political parties in India:  1. The Representation of the People Act, 1951 provides for the registration of political parties 2. Registration of political parties is carried out by the Election Commission 3. A national level political party is one which is recognized in four or more states  C 16 4. During the 1999 general elections, there were six national and 48 state level parties recognised by the Election commission Which of these statement are correct? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI4",
      "description" : "QWxsIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2 and 4 ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to Indian polity, which one of the following statements is correct?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDI5",
      "description" : "UHJlc2lkZW50IGNhbiBpc3N1ZSBhbiBvcmRpbmFuY2Ugb25seSB3aGVuIGJvdGggIGhvdXNlcyBvZiBwYXJsaWFtZW50IGFyZSBub3QgaW4gc2Vzc2lvbiAoQXJ0IDEyMykuIE5vICBtaW5pbXVtIGFnZSBpcyBwcmVzY3JpYmVkIGZvciBhcHBvaW50bWVudCBhcyBhIGp1ZGdlIG9mICB0aGUgU3VwcmVtZSBDb3VydCBpbiB0aGUgQ29uc3RpdHV0aW9uLiBUaGUgYWdlIG9mIGEgSnVkZ2UgIG9mIHRoZSBTQyBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IHN1Y2ggYXV0aG9yaXR5IGFuZCBpbiBzdWNoICBtYW5uZXIgYXMgcGFybGlhbWVudCBtYXkgYnkgbGF3IHByb3ZpZGUuIE5EQyBpcyBjb21wb3NlZCAgb2YgdGhlIFBNIGFzIGl0cyBoZWFkLCBhbGwgVW5pb24gQ2FiaW5ldCBtaW5pc3RlcnMsIHRoZSBDTXMgIG9mIGFsbCBzdGF0ZXMsIENNcy9BZG1pbmlzdHJhdG9ycyBvZiBhbGwgVVRzIGFuZCB0aGUgbWVtYmVycyAgb2YgdGhlIFBsYW5uaW5nIENvbW1pc3Npb24uIFRoZXJlIGlzIG5vIGNvbnN0aXR1dGlvbmFsICBwcm92aXNpb24gcmVnYXJkaW5nIHRoZSBhY2NvdW50YWJpbGl0eSBvZiB0aGUgcGxhbm5pbmcgIGNvbW1pc3Npb24gdGhlIHBhcmxpYW1lbnQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Planning Commission is accountable to the Parliament ",
        "option2" : " President can make ordinance only when either of the  two Houses of Parliament is not in session ",
        "option3" : " The minimum age prescribed for appointment as a  Judge of the Supreme Court is 40 years ",
        "option4" : " National Development Council is constituted of Union "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements with reference to India:  1. The Chief Election Commission and other Election Commissioners enjoy equal powers but receive unequal salaries 2. The Chief Election Commissioner is entitled to the same salary as is provided to a judge of the Supreme Court 3. The Chief Election Commissioner shall not be removed from his office except in like manner and on like grounds as a judge of the Supreme Court 4. The term of office of the Election Commissioner is five years from the date he assumes his office or till the day he attains the age of 62 years, whichever is earlier Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDMw",
      "description" : "VGhlIENoaWVmIEVsZWN0aW9uIENvbW1pc3Npb25lciBhbmQgb3RoZXIgRWxlY3Rpb24gIENvbW1pc3Npb25lcnMgZW5qb3kgZXF1YWwgcG93ZXJzIGFuZCBzYWxhcmllcy4gVGhlIHRlcm0gIEFsbG9jYXRpb24gb2Ygc2VhdHMgZm9yIFNjaGVkdWxlZCBDYXN0ZXMgYW5kIFRyaWJlcyBpbiB0aGUgIExvayBTYWJoYSBhcmUgbWFkZSBvbiB0aGUgYmFzaXMgb2YgcHJvcG9ydGlvbiBvZiBTY2hlZHVsZWQgIENhc3RlcyBhbmQgVHJpYmVzIGluIHRoZSBTdGF0ZSBjb25jZXJuZWQgdG8gdGhhdCBvZiB0aGUgIHRvdGFsIHBvcHVsYXRpb24sIHZpZGUgcHJvdmlzaW9uIGNvbnRhaW5lZCBpbiBBcnRpY2xlIDMzMCBvZiAgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSByZWFkIHdpdGggU2VjdGlvbiAzIG9mIHRoZSBSLiBQLiAgQWN0LCAxOTUwLiBBcnRpY2xlIDMzMiBSZXNlcnZhdGlvbiBvZiBzZWF0cyBmb3IgU2NoZWR1bGVkICBDYXN0ZXMgYW5kIFNjaGVkdWxlZCBUcmliZXMgaW4gdGhlIExlZ2lzbGF0aXZlIEFzc2VtYmxpZXMgIG9mIHRoZSBTdGF0ZXMgOiAgKDEpIFNlYXRzIHNoYWxsIGJlIHJlc2VydmVkIGZvciB0aGUgU2NoZWR1bGVkIENhc3RlcyBhbmQgIHRoZSBTY2hlZHVsZWQgVHJpYmVzLCBleGNlcHQgdGhlIFNjaGVkdWxlZCBUcmliZXMgaW4gdGhlICBhdXRvbm9tb3VzIGRpc3RyaWN0cyBvZiBBc3NhbSwgaW4gdGhlIExlZ2lzbGF0aXZlIEFzc2VtYmx5ICBvZiBldmVyeSBTdGF0ZS4gICgyKSBTZWF0cyBzaGFsbCBiZSByZXNlcnZlZCBhbHNvIGZvciB0aGUgYXV0b25vbW91cyAgZGlzdHJpY3RzIGluIHRoZSBMZWdpc2xhdGl2ZSBBc3NlbWJseSBvZiB0aGUgU3RhdGUgb2YgQXNzYW0uICAoMykgVGhlIG51bWJlciBvZiBzZWF0cyByZXNlcnZlZCBmb3IgdGhlIFNjaGVkdWxlZCAgQ2FzdGVzIG9yIHRoZSBTY2hlZHVsZWQgVHJpYmVzIGluIHRoZSBMZWdpc2xhdGl2ZSBBc3NlbWJseSAgb2YgYW55IFN0YXRlIHVuZGVyIGNsYXVzZSAoMSkgc2hhbGwgYmVhciwgYXMgbmVhcmx5IGFzIG1heSAgYmUsIHRoZSBzYW1lIHByb3BvcnRpb24gdG8gdGhlIHRvdGFsIG51bWJlciBvZiBzZWF0cyBpbiB0aGUgIEFzc2VtYmx5IGFzIHRoZSBwb3B1bGF0aW9uIG9mIHRoZSBTY2hlZHVsZWQgQ2FzdGVzIGluICB0aGUgU3RhdGUgb3Igb2YgdGhlIFNjaGVkdWxlZCBUcmliZXMgaW4gdGhlIFN0YXRlIG9yIHBhcnQgb2YgIHRoZSBTdGF0ZSwgYXMgdGhlIGNhc2UgbWF5IGJlLCBpbiByZXNwZWN0IG9mIHdoaWNoIHNlYXRzIGFyZSAgc28gcmVzZXJ2ZWQsIGJlYXJzIHRvIHRoZSB0b3RhbCBwb3B1bGF0aW9uIG9mIHRoZSBTdGF0ZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " l and 4 ",
        "option4" : " 2 an 4 "
      }
    },
    {
      "index" : 31,
      "question" : "In  the  case  of  election  to  the  Lok Sabha,  the  amount  of Security deposited for general category candidates and SC/ST category candidates respectively is:                      ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDMx",
      "description" : "QXMgcGVyIHRoZSBnaXZlbiBvcHRpb25zIHRoZSByaWdodCBhbnN3ZXIgaXMgKGMpLiAgQXMgaWYgIG5vdyAoMjAxOCk7IFRoZSBzZWN1cml0eSBkZXBvc2l0IGZvciBMb2sgU2FiYWggZWxlY3Rpb24gaXMgIFJzIDI1LDAwMCB3aGlsZSBmb3Igb24gQXNzZW1ibHkgZWxlY3Rpb24gaXQgaXMgUnMgMTAsMDAwLiBBICBkZSBmZWFzdGVkIGluZGljYXRlIHdobyBmYWlscyB0byBzZWN1cmUgbW92ZSB0aGFuIG9uZSBzaXh0aCAgb2YgdGhlIHZhbGlkIHZvdGVzIHBvbGxlZCBpbiB0aGUgY29uc3RpdHVlbmN5IHdpbGwgbG9zZSBoaXMgIHNlY3VyaXR5IGRlcG9zaXQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " ` 5,000   and  '  2,500 ",
        "option2" : " ` 10,000 and  '  2,500 ",
        "option3" : " ` 10,000 and  '  5,000 ",
        "option4" : " ` 15,000 and  '  7,500 "
      }
    },
    {
      "index" : 32,
      "question" : "The term of the Lok Sabha:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDMy",
      "description" : "VGhlIHRlcm0gb2YgdGhlIExTIGNhbiBiZSBleHRlbmRlZCBieSBub3QgbW9yZSB0aGFuICBvbmUgeWVhciBhdCBhIHRpbWUgZHVyaW5nIHRoZSBwcm9jbGFtYXRpb24gb2YgbmF0aW9uYWwgIGVtZXJnZW5jeSB1bmRlciBBcnRpY2xlIDM1Mi4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " cannot be extended under any circumstances ",
        "option2" : " can be extended by six months at a time ",
        "option3" : " can be extended by one year at a time during the  proclamation of emergency ",
        "option4" : " can be extended for two years at a time during the "
      }
    },
    {
      "index" : 33,
      "question" : "Which one of the following authorities recommends the principles governing the grants-in-aid of the revenues to the states out of the Consolidated Fund of India?    ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDMz",
      "description" : "VGhlIGZpbmFuY2UgY29tbWlzc2lvbiB3aWxsIGJlIGdvdmVybmVkIGJ5IHRoZSAgcHJpbmNpcGxlcyB0byBhbGxvY2F0ZSBncmFudHMtaW4tYWlkIG9mIHRoZSByZXZlbnVlcyBvZiB0aGUgIHN0YXRlcyBvdXQgb2YgdGhlIGNvbnNvbGlkYXRlZCBmdW5kIG9mIEluZGlhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Finance Commission ",
        "option2" : " Inter-State Council ",
        "option3" : " Union Ministry of Finance ",
        "option4" : " Public Accounts Committee "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following statements is correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM0",
      "description" : "SW4gIFJhanlhICBTYWJoYSwgIDEyICBtZW1iZXJzICBhcmUgIG5vbWluYXRlZCAgYnkgIHRoZSAgUHJlc2lkZW50IGZyb20gdGhlIHBlcnNvbnMgd2hvIGhhdmUgc3BlY2lhbCBrbm93bGVkZ2UgaW4gIGFydCwgc2NpZW5jZSwgbGl0ZXJhdHVyZSBhbmQgc29jaWFsIHNlcnZpY2UuIEluIExvayBTYWJoYSwgIDIgIG1lbWJlcnMgYXJlIG5vbWluYXRlZCBieSB0aGUgUHJlc2lkZW50IGZyb20gdGhlIEFuZ2xvLSAgSW5kaWFuIGNvbW11bml0eSAoQXJ0IDMzMSkuIEEgbm9taW5hdGVkIG1lbWJlciBjYW4gdm90ZSAgb25seSBpbiB0aGUgVmljZS1QcmVzaWRlbnRpYWwgZWxlY3Rpb25zLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Only the Rajya Sabha and not the Lok Sabha can have  nominated members ",
        "option2" : " There is a constitutional provision for nominating  two members belonging to the Anglo-Indian  community to the Rajya Sabha ",
        "option3" : " There is no constitutional bar for a nominated member  to be appointed as a Union minister ",
        "option4" : " A nominated member can vote both in the Presidential "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements:  1. The joint sitting of the two houses of the Parliament in India is sanctioned under Article 108 of the Constitution 2. The first joint sitting of Lok Sabha and Rajya Sabha was held in the year 1961 3. The second joint sitting of the two Houses of Indian Parliament was held to pass the Banking Service Commission (Repeal) Bill Which of these statements is correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM1",
      "description" : "U28gZmFyIHRocmVlIGpvaW50IHNpdHRpbmdzIGhhdmUgYmVlbiBoZWxkLCBGaXJzdCB3YXMgIGhlbGQgb24gRG93cnkgUHJvaGliaXRpb24gQmlsbCwgMTk2MSwgU2Vjb25kIHdhcyBoZWxkIG9uICBCYW5raW5nIFNlcnZpY2UgQ29tbWlzc2lvbiAoUmVwZWFsKSBCaWxsLCAxOTc4IGFuZCBUaGlyZCAgd2FzIGhlbGQgb24gUHJldmVudGlvbiBvZiBUZXJyb3Jpc20gQmlsbCwgMjAwMi4gVGhlIHByZXNpZGluZyAgb2ZmaWNlciBvZiBqb2ludCBzaXR0aW5nIGlzIFNwZWFrZXIgb2YgdGhlIExvayBTYWJoYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 36,
      "question" : "Which one of the following Bills must be passed by each House of the Indian Parliamentary separately by special majority?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM2",
      "description" : "QWNjb3JkaW5nIHRvIEFydGljbGUgMzY4IGFuIGFtZW5kbWVudCBvZiB0aGlzICBDb25zdGl0dXRpb24gbWF5IGJlIGluaXRpYXRlZCBvbmx5IGJ5IHRoZSBpbnRyb2R1Y3Rpb24gb2YgYSAgQmlsbCBmb3IgdGhlIHB1cnBvc2UgaW4gZWl0aGVyIEhvdXNlIG9mIFBhcmxpYW1lbnQsIGFuZCB3aGVuICB0aGUgQmlsbCBpcyBwYXNzZWQgaW4gZWFjaCBIb3VzZSBieSBhIG1ham9yaXR5IG9mIHRoZSB0b3RhbCAgbWVtYmVyc2hpcCBvZiB0aGF0IEhvdXNlIHByZXNlbnQgYW5kIHZvdGluZywgaXQgc2hhbGwgYmUgIHByZXNlbnRlZCB0byB0aGUgUHJlc2lkZW50IHdobyBzaGFsbCBnaXZlIGhpcyBhc3NlbnQgdG8gdGhlICBCaWxsIGFuZCB0aGVyZXVwb24gdGhlIENvbnN0aXR1dGlvbiBzaGFsbCBzdGFuZCBhbWVuZGVkIGluICBhY2NvcmRhbmNlIHdpdGggdGhlIHRlcm1zIG9mIHRoZSBCaWxsLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Ordinary Bill ",
        "option2" : " Money Bill ",
        "option3" : " Finance Bill ",
        "option4" : " Constitution Amendment Bill "
      }
    },
    {
      "index" : 37,
      "question" : "As per Indian Protocol, who among the following ranks highest in the order of precedence?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM3",
      "description" : "T3JkZXIgb2YgcHJlY2VkZW5jZSBpcyBQcmVzaWRlbnQsIFZpY2UgUHJlc2lkZW50LCBQTSwgIEdvdmVybm9yIG9mIFN0YXRlIHdpdGhpbiB0aGVpciByZXNwZWN0aXZlIHN0YXRlcywgRm9ybWVyICBQcmVzaWRlbnRzIGFuZCBEZXB1dHkgUE0sIENKSSBhbmQgU3BlYWtlciBvZiBMUy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Deputy Prime Minister ",
        "option2" : " Former Presidents ",
        "option3" : " Governor of a State within his State ",
        "option4" : " Speaker of the Lok Sabha "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements:  The function(s) of the Finance commission is/are: 1. to allow the withdrawal of the money out of the Consolidated Fund of India 2. to allocate between the States the shares of proceeds of taxes 3. to consider applications for grants-in-aid from States 4. to supervise and report on whether the Union and State governments are levying taxes in accordance with the budgetary provisions Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM4",
      "description" : "QXJ0aWNsZSAyODAgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBwcm92aWRlcyBmb3IgYSAgRmluYW5jZSBDb21taXNzaW9uIGFzIGEgcXVhc2ktanVkaWNpYWwgYm9keS4gSXQgaXMgIGNvbnN0aXR1dGVkIGJ5IHRoZSBQcmVzaWRlbnQgb2YgSW5kaWEgZXZlcnkgZmlmdGggeWVhciBvciBhdCAgc3VjaCBlYXJsaWVyIHRpbWUgYXMgaGUgY29uc2lkZXJzIG5lY2Vzc2FyeS4gVGhlIGNvbW1pc3Npb24gIG1ha2VzIHJlY29tbWVuZGF0aW9ucyB0byB0aGUgcHJlc2lkZW50IHdpdGggcmVnYXJkIHRvIHRoZSAgZGlzdHJpYnV0aW9uIG9mIHRoZSBwcm9jZWVkcyBvZiB0YXhlcyBiZXR3ZWVuIHRoZSB1bmlvbiBhbmQgIHRoZSBzdGF0ZXMuIFRoZSBwcmluY2lwbGVzIHdoaWNoIHNob3VsZCBnb3Zlcm4gdGhlIGdyYW50cy0gIGluLWFpZCB0byBiZSBnaXZlbiB0byB0aGUgc3RhdGVzLiBBbnkgb3RoZXIgbWF0dGVyIHJlZmVycmVkIHRvICB0aGUgQ29tbWlzc2lvbiBieSB0aGUgUHJlc2lkZW50IGluIHRoZSBpbnRlcmVzdCBvZiBzb3VuZCAgZmluYW5jZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " 2 and 3 ",
        "option3" : " 3 and 4 ",
        "option4" : " 1, 2 an 4 "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements:  In the electoral college for Presidential Election in India, 1. the value of the vote of an elected Member of Legislative Assembly equals = State Population ×100 Number of Elected MLAs of the State 2. the value of the vote of an elected Member of Parliament equals to total value of the votes of all elected MLA's and total number of elected MP's 3. there were more than 5000 members in the latest elections. Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDM5",
      "description" : "VGhlIHZhbHVlIG9mIGEgTVAncyB2b3RlIGlzIGNhbGN1bGF0ZWQgYnkgZGl2aWRpbmcgdGhlICB0b3RhbCB2YWx1ZSBvZiBhbGwgTUxBcycgdm90ZXMgYnkgdGhlIG51bWJlciBvZiBNUHMuICBWYWx1ZSBvZiBhbiBNUCB2b3RlICAgID0gIFRoZSBzdW0gb2Ygdm90ZSB2YWx1ZSBvZiBlbGVjdGVkIG1lbWJlcnMgb2YgYWxsIHRoZSAgIExlZ2lzbGF0aXZlIEFzc2VtYmxpZXMgIFRoZSBzdW0gb2YgZWxlY3RlZCBtZW1iZXJzIG9mIGJvdGggdGhlIGhvdXNlIG9mIFBhcmxpYW1lbnQg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " Only 2 ",
        "option3" : " 1 and 3 ",
        "option4" : " Only 3 "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements:  1. While members of the Rajya Sabha are associated with Committees on Public Accounts and Public Undertakings, members of Committee on Estimates are drawn entirely from the Lok Sabha 2. The Ministry of Parliamentary Affairs works under the overall direction of Cabinet Committee on Parliamentary Affairs 3. The Ministry of Parliamentary Affairs nominates Members of Parliament on Committees, Councils, Board and Commissions etc. set up by the Government of India in the various ministries. E B D _8 34 2 Government & Administration (India & World) C 17 Which of these statements is are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQw",
      "description" : "VGhlIFBBQyBpcyBmb3JtZWQgZXZlcnkgeWVhciB3aXRoIGEgc3RyZW5ndGggb2Ygbm90ICBtb3JlIHRoYW4gMjIgbWVtYmVycyBvZiB3aGljaCAxNSBhcmUgZnJvbSBMb2sgU2FiaGEsIHRoZSAgbG93ZXIgaG91c2Ugb2YgdGhlIFBhcmxpYW1lbnQsIGFuZCA3IGZyb20gUmFqeWEgU2FiaGEsIHRoZSAgdXBwZXIgaG91c2Ugb2YgdGhlIFBhcmxpYW1lbnQuIFRoZSB0ZXJtIG9mIG9mZmljZSBvZiB0aGUgIG1lbWJlcnMgaXMgb25lIHllYXIuICBUaGUgRXN0aW1hdGVzIENvbW1pdHRlZSwgY29uc3RpdHV0ZWQgIGZvciB0aGUgZmlyc3QgdGltZSBpbiAxOTUwLCBpcyBhIFBhcmxpYW1lbnRhcnkgQ29tbWl0dGVlICBjb25zaXN0aW5nIG9mIDMwIE1lbWJlcnMsIGVsZWN0ZWQgZXZlcnkgeWVhciBieSB0aGUgTG9rICBTYWJoYSBmcm9tIGFtb25nc3QgaXRzIE1lbWJlcnMuIFRoZSBNaW5pc3RyeSBvZiAgUGFybGlhbWVudGFyeSBBZmZhaXJzIHJlbmRlcnMgc2VjcmV0YXJpYWwgYXNzaXN0YW5jZSB0byB0aGUgIENhYmluZXQgQ29tbWl0dGVlIG9uIFBhcmxpYW1lbnRhcnkgQWZmYWlycywgd2hpY2gsIGludGVyLSAgYWxpYSByZWNvbW1lbmRzIHByb3JvZ2F0aW9uIG9mIGJvdGggdGhlIEhvdXNlcyBvZiB0aGUgIFBhcmxpYW1lbnQsIEdvdnQncyBzdGFuZCBvbiBQcml2YXRlIE1lbWJlcnMnIEJpbGxzIGFuZCAgUmVzb2x1dGlvbnMuIE9wdGlvbiAzIGlzIG5vdCBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 41,
      "question" : "Survey of India is under the ministry of :  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQx",
      "description" : "U3VydmV5IG9mIEluZGlhLCBUaGUgTmF0aW9uYWwgU3VydmV5IGFuZCBNYXBwaW5nICBPcmdhbml6YXRpb24gb2YgdGhlIGNvdW50cnkgdW5kZXIgdGhlIERlcGFydG1lbnQgb2YgU2NpZW5jZSAgYW5kIFRlY2hub2xvZ3ksIGlzIHRoZSBvbGRlc3Qgc2NpZW50aWZpYyBkZXBhcnRtZW50IG9mIHRoZSAgR292dC4gb2YgIEluZGlhLiBJdCB3YXMgc2V0IHVwIGluIDE3NjcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Defence ",
        "option2" : " Environment and Forests ",
        "option3" : " Home Affairs ",
        "option4" : " Science and Technology "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to Indian Parliament, which one of the following is not correct?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQy",
      "description" : "QXBwcm9wcmlhdGlvbiBCaWxsIGlzIGEgbW9uZXkgYmlsbC4gSW4gY2FzZSBvZiBtb25leSAgYmlsbCwgUlMgaGFzIG9ubHkgcmVjb21tZW5kYXRvcnkgcG93ZXIgYW5kIG5lZWQgbm90IHRvIGJlICBwYXNzZWQgYnkgUlMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The Appropriation Bill must be passed by both the  Houses of Parliament before it can be enacted into law ",
        "option2" : " No money shall be withdrawn from the Consolidated  Fund of India except under the appropriation made by  the Appropriation Act ",
        "option3" : " Finance Bill is required for proposing new taxes but no  additional Bill/Act is required for making changes in  the rates of taxes which are already under operation. ",
        "option4" : " No Money Bill can be introduced except on the "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following tasks:  1. Superintendence, direction and conduct of free and fair elections 2. Preparation of electoral rolls for all elections to the Parliament, state Legislatures and the Office of the President and the Vice-President 3. Giving recognition to political, parties and allotting election symbols to political parties and individuals contesting the election. 4. Proclamation of final verdict in case of election disputes Which of the above are the functions of the Election Commission of India? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQz",
      "description" : "VGhlIEhpZ2ggQ291cnQgKGFuZCBub3QgdGhlIEVsZWN0aW9uIENvbW1pc3Npb24pIGlzICB0aGUgZmluYWwgYXV0aG9yaXR5IHRvIGdpdmUgYSBmaW5hbCB2ZXJkaWN0IGluIGNhc2Ugb2YgZWxlY3Rpb24gIGRpc3B1dGVzLiBJbiB0aGUgYWx0ZXJuYXRpdmUgc3BlY2lhbCBlbGVjdGlvbiBiZW5jaGVzIG1heSBiZSAgY29uc3RpdHV0ZWQgaW4gaGlnaCBjb3VydHMgYW5kIGVhcm1hcmtlZCBleGNsdXNpdmVseSBmb3IgIHRoZSBkaXNwb3NhbCBvZiBlbGVjdGlvbiBwZXRpdGlvbnMgYW5kIGRpc3B1dGVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 4 "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements:  1. The Speaker of Lok Sabha has the power to adjourn the House sine die but, on prorogation, it is only the President who can summon the House 2. Unless sooner dissolved or there is an extension of the term, there is an automatic dissolution of the Lok Sabha by efflux of time, at the end of the period of five years, even if no formal order of dissolution is issued by the President 3. The Speaker of Lok Sabha continues in office even after the dissolution of the House and until immediately before the first meeting of the House Which of the statements given above are correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ0",
      "description" : "TG9rIFNhYmhhIHNwZWFrZXIgaXMgdGhlIHByZXNpZGluZyBvZmZpY2VyIG9yIGhlYWQgb2YgIExvayBTYWJoYS4gSGUgaXMgdGhlIGd1YXJkaWFuIG9mIHBvd2VyIGFuZCBwcml2aWxlZ2VzIG9mICBtZW1iZXJzIGFuZCBjb21taXR0ZWVzIG9mIExvayBTYWJoYS4gVGhlIFNwZWFrZXIgb2YgdGhlICBMb2sgU2FiaGEgcHJlc2lkZXMgb3ZlciB0aGUgam9pbnQgc2l0dGluZyBvZiB0aGUgdHdvIEhvdXNlcy4gICJBZGpvdXJubWVudCIgaXMgYSBwb3N0cG9uZW1lbnQgb2YgdGhlIHNpdHRpbmcgb3IgIHByb2NlZWRpbmdzIG9mIHRoZSBIb3VzZSBmcm9tIG9uZSB0aW1lIHRvIGFub3RoZXIgc3BlY2lmaWVkICBmb3IgdGhlIHJlYXNzZW1ibGluZyBvZiB0aGUgSG91c2UuIER1cmluZyB0aGUgY291cnNlIG9mIGEgIHNlc3Npb24sIHRoZSBMb2sgc2FiaGEgbWF5IGJlIGFkam91cm5lZCBmcm9tIGRheSB0byBkYXkgIG9yIGZvciBtb3JlIHRoYW4gYSBkYXkuIEl0IG1heSBhbHNvIGJlIGFkam91cm5lZCBzaW5lIGRpZSAgd2hpY2ggbWVhbnMgdGhlIHRlcm1pbmF0aW9uIG9mIGEgc2l0dGluZyBvZiB0aGUgSG91c2UgIHdpdGhvdXQgYW55IGRlZmluaXRlIGRhdGUgYmVpbmcgZml4ZWQgZm9yIGl0cyBuZXh0IHNpdHRpbmcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 . ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 45,
      "question" : "Which one of the following statements is not correct?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ1",
      "description" : "SW4gY2FzZSBvZiBhIE5vLWNvbmZpZGVuY2UgbW90aW9uLCB0aGVyZSBpcyBubyBuZWVkIHRvICBzZXQgb3V0IHRoZSBncm91bmRzIG9uIHdoaWNoIGl0IGlzIGJhc2VkLiBOby1Db25maWRlbmNlICBtb3Rpb24gaXMgaW50cm9kdWNlZCBvbmx5IGluIHRoZSBMb2sgU2FiaGEgYnkgdGhlICBvcHBvc2l0aW9uIGFuZCBuZWVkcyBhIHN1cHBvcnQgb2Ygbm90IGxlc3MgdGhhbiA1MCBtZW1iZXJzICBvZiBMUyBmb3IgaXRzIGludHJvZHVjdGlvbi4gUnVsZSAxOTggb2YgdGhlIExvayBTYWJoYSBzcGVjaWZpZXMgIHRoZSBwcm9jZWR1cmUgZm9yIGEgbW90aW9uIG9mIG5vLWNvbmZpZGVuY2UuIEFueSBtZW1iZXIgIG1heSBnaXZlIGEgd3JpdHRlbiBub3RpY2U7IHRoZSBzcGVha2VyIHNoYWxsIHJlYWQgdGhlIG1vdGlvbiAgb2Ygbm8tY29uZmlkZW5jZSBpbiB0aGUgSG91c2UgYW5kIGFzayBhbGwgdGhvc2UgcGVyc29ucyB0byAgcmlzZSB3aG8gZmF2b3VycyB0aGF0IHRoZSBtb3Rpb24gYmUgdGFrZW4gdXAuIElmIHRoZXJlIGFyZSA1MCAgTVBzIGluIGZhdm91ciwgdGhlIHNwZWFrZXIgYWxsb3RzIGEgZGF0ZSBmb3IgZGlzY3Vzc2luZyB0aGUgbW90aW9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " In the Lok Sabha, a no-confidence motion has to set  out the grounds on which it is based ",
        "option2" : " In the case of a no-confidence motion in Lok Sabha,  no conditions of admissibility have been laid down in  the Rules ",
        "option3" : " A motion of no-confidence once admitted, has to be  taken up within ten days of the leave being granted ",
        "option4" : " Rajya Sabha is not empowered to entertain a motion of "
      }
    },
    {
      "index" : 46,
      "question" : "The resolution for removing the Vice-President of India can be moved in the:  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ2",
      "description" : "QXJ0aWNsZSA2NyhiKSBpbiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIHN0YXRlcywgYSBWaWNlICBQcmVzaWRlbnQgbWF5IGJlIHJlbW92ZWQgZnJvbSBoaXMgb2ZmaWNlIGJ5IGEgcmVzb2x1dGlvbiBvZiAgdGhlIGNvdW5jaWwgb2YgU3RhdGVzIHBhc3NlZCBieSBhIG1ham9yaXR5IG9mIGFsbCB0aGUgdGhlbiAgbWVtYmVycyBvZiB0aGUgY291bmNpbCBhbmQgYWdyZWVkIHRvIGJ5IHRoZSBIb3VzZSBvZiB0aGUgIFBlb3BsZTsgYnV0IG5vIHJlc29sdXRpb24gZm9yIHRoZSBwdXJwb3NlIG9mIHRoaXMgY2xhdXNlICBzaGFsbCBiZSBtb3ZlZCB1bmxlc3MgYXQgbGVhc3QgZm91cnRlZW4gZGF5cyBub3RpY2UgaGFzICBiZWVuIGdpdmVuIG9mIHRoZSBpbnRlbnRpb24gdG8gbW92ZSB0aGUgcmVzb2x1dGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Lok Sabha alone ",
        "option2" : " Either House of Parliament ",
        "option3" : " Joint Sitting of Parliament ",
        "option4" : " Rajya Sabha alone "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the Constitution of India, which one of the following pairs is not correctly matched?            ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ3",
      "description" : "U3RvY2sgRXhjaGFuZ2VzIGFyZSBsaXN0ZWQgaW4gdGhlIFNldmVudGggU2NoZWR1bGUgIChBcnRpY2xlIDI0NikgTGlzdCBJLVVuaW9uIExpc3QsIGl0ZW0gbm8uIDkwIHRoYXQgcmVhZHMsIHRheGVzICBvdGhlciB0aGFuIHN0YW1wIGR1dGllcyBvbiB0cmFuc2FjdGlvbnMgaW4gc3RvY2sgZXhjaGFuZ2VzICBhbmQgZnV0dXJlcyBtYXJrZXRzLiBGb3Jlc3RzLUNvbmN1cnJlbnQgTGlzdCwgMTctQSwgUG9zdCAgT2ZmaWNlIFNhdmluZ3MgQmFuayAtVW5pb24gTGlzdC0zLCBQdWJsaWMgaGVhbHRoIGFuZCAgc2FuaXRhdGlvbjsgaG9zcGl0YWxzIGFuZCBkaXNwZW5zYXJpZXMgLSBTdGF0ZSBMaXN0IC02LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Forests : Concurrent List ",
        "option2" : " Stock Exchange : Concurrent List ",
        "option3" : " Post Office Savings Bank : Union List ",
        "option4" : " Public Health : State List "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements :  1. The highest deciding body for planning in India is the Planning Commission of India 2. The Secretary of the Planning Commission of India is also the Secretary of National Development Council 3. The Constitution includes economic and social planning in the Concurrent List in the Seventh Schedule of the Constitution of India Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ4",
      "description" : "VGhlIGhpZ2hlc3QgZGVjaXNpb24gbWFraW5nIGJvZHkgZm9yIHBsYW5uaW5nIGluIEluZGlhICBpcyB0aGUgUGFybGlhbWVudCwgTmF0aW9uYWwgRGV2ZWxvcG1lbnQgQ291bmNpbCBpcyBhdCBzZWNvbmQgIHBvc2l0aW9uIGFuZCBQbGFubmluZyBDb21taXNzaW9uIGF0IHRoaXJkIHBvc2l0aW9uLiAgRWNvbm9taWMgYW5kIHNvY2lhbCBwbGFubmluZyBpcyBwbGFjZWQgdW5kZXIgRW50cnkgMjAgaW4gIHRoZSBDb25jdXJyZW50IGxpc3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 2 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following events:  1. Fourth general elections in India 2. Formation of Haryana state 3. Mysore named as Karnataka state 4. Meghalaya and Tripura become full states Which one of the following is the correct chronological order of the above? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDQ5",
      "description" : "SGFyeWFuYSB3YXMgZm91bmRlZCBpbiAxOTY2IHdoZW4gdGhlIGZvcm1lciBzdGF0ZSBvZiAgUHVuamFiIHdhcyBkaXZpZGVkIGludG8gSGFyeWFuYSBhbmQgdGhlIG1vZGVybiBQdW5qYWIuICBUaGUgMTk2NyBnZW5lcmFsIGVsZWN0aW9ucyBvciB0aGUgNHRoIExvayBTYWJoYSB3YXMgaGVsZCBpbiAgRmVicnVhcnkuIFRyaXB1cmEsIE1hbmlwdXIgYW5kIE1lZ2hhbGF5YSBiZWNhbWUgZnVsbC0gIGZsZWRnZWQgc3RhdGVzIG9uIEphbiAyMSwgMTk3Mi4gTXlzb3JlIHN0YXRlIHdhcyByZW5hbWVkICBLYXJuYXRha2EgaW4gMTk5Ny4gIDUwLiAoKikgRm9vZCBhbmQgTnV0cml0aW9uIEJvYXJkIHdvcmtzIHVuZGVyIE1pbmlzdHJ5IG9mICBXb21lbiBhbmQgQ2hpbGQgRGV2ZWxvcG1lbnQuIEl0IGlzIGEgdGVjaG5pY2FsIHN1cHBvcnQgICBDIDI2ICB3aW5nIHVuZGVyIENoaWxkIERldmVsb3BtZW50IEJ1cmVhdSBvZiB0aGUgTWluaXN0cnkuICBOb25lIG9mIHRoZSBnaXZlbiBvcHRpb25zIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 2, 1, 4, 3 ",
        "option2" : " 4, 3, 2, 1 ",
        "option3" : " 2, 3, 4, 1 ",
        "option4" : " 4, 1, 2, 3 "
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements:  1. The Rajya Sabha alone has the power to declare that it would be in national interest for the Parliament to legislate with respect to a matter in the State List. 2. Resolutions approving the proclamation of Emergency are passed only by the Lok Sabha. Which of the statement(s) given above is/are correct? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDUx",
      "description" : "U3RhdGVtZW50IDEgaXMgY29ycmVjdCBhcyBwZXIgcHJvdmlzaW9ucyB1bmRlciBBcnRpY2xlICAyNDkuIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyByZXNvbHV0aW9ucyBhcHByb3ZpbmcgdGhlICBwcm9jbGFtYXRpb24gb2YgRW1lcmdlbmN5IGFyZSBwYXNzZWQgYnkgYm90aCBIb3VzZXMgb2YgIFBhcmxpYW1lbnQgKG5vdCBvbmx5IExTKS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 52,
      "question" : "Assertion (A) : The Council of Ministers in the Union of India is  collectively responsible both to the Lok Sabha and Rajya Sabha. Reason (R) : The Members of both the Lok Sabha and the Rajya Sabha are eligible to be the Ministers of the Union Government.  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDUy",
      "description" : "QXNzZXJ0aW9uIGlzIGZhbHNlLCBiZWNhdXNlIHRoZSBDb3VuY2lsIG9mIE1pbmlzdGVycyBpbiAgdGhlIFVuaW9uIG9mIEluZGlhIGlzIGNvbGxlY3RpdmVseSByZXNwb25zaWJsZSB0byB0aGUgTG9rICBTYWJoYSBvbmx5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Both A are R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following statements:  1. Jawaharlal Nehru was in his fourth term as the Prime Minister of India at the time of his death. 2. Jawaharlal Nehru represented Rae Bareilly constituency as a Member of Parliament. 3. The first non-Congress Prime Minister of India assumed the office in the year 1977.  C 18 Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDUz",
      "description" : "VGVybXMgb2YgSmF3YWhhciBMYWwgTmVocnUgKDE5NDctNTI7IDE5NTItNTc7IDE5NTctICA2MjsgMTk2Mi02NCkuIEhlIGRpZWQgaW4gMTk2NCBkdXJpbmcgaGlzIDR0aCBQcmltZS1taW5pc3RlcmlhbCAgdGVybS4gSGUgcmVwcmVzZW50ZWQgUGh1bHB1ciBjb25zdGl0dWVuY3kgaW4gVVAuIFRoZSBmaXJzdCAgbm9uLWNvbmdyZXNzIFBNIG9mIEluZGlhIHdhcyBNb3JhcmppIERlc2FpIChKYW50YSBQYXJ0eSkgIGZyb20gMTk3Ny0xOTc5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 3 only ",
        "option3" : " 1 only ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 54,
      "question" : "Who was the Speaker of the First Lok Sabha?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU0",
      "description" : "R1YgTWF2YWxhbmthciAoMTk1Mi01NiksIEh1a3VtIFNpbmdoICgxOTYyLTY3KTsgSy5NLiAgTXVuc2hpIGFuZCBVLk4uIERoZWJhciB3ZXJlIG5ldmVyIHRoZSBTcGVha2VycyBvZiB0aGUgIExvayBTYWJoYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Hukum Singh ",
        "option2" : " G.V. Mavalankar ",
        "option3" : " K. M. Munshi ",
        "option4" : " U.N. Dhebar "
      }
    },
    {
      "index" : 55,
      "question" : "Consider the following statements in respect of financial emergency under Article 360 of the Constitution of India:  1. A proclamation of financial emergency issued shall cease to operate at the expiration of two months, unless before the expiration of that period it has been approved by the resolutions of both Houses of Parliament. 2. If any proclamation of financial emergency is in operation, it is competent for the President of India to issue directions for the reduction of salaries and allowances of all  or any class of persons serving in connection with the affairs of the Union but excluding the Judges of Supreme Court and the High Courts. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU1",
      "description" : "U3RhdGVtZW50IDEgaXMgY29ycmVjdCBhcyB1bmRlciBBcnRpY2xlIDM2MCwgYW55ICBQcm9jbGFtYXRpb24gb2YgRmluYW5jaWFsIEVtZXJnZW5jeSBpc3N1ZWQgc2hhbGwgY2Vhc2UgdG8gIG9wZXJhdGUgYXQgdGhlIGV4cGlyYXRpb24gb2YgdHdvIG1vbnRocywgdW5sZXNzIGJlZm9yZSB0aGUgIGV4cGlyYXRpb24gb2YgdGhhdCBwZXJpb2QgaXQgaGFzIGJlZW4gYXBwcm92ZWQgYnkgdGhlICByZXNvbHV0aW9ucyBQYXNzZWQgYnkgYm90aCBIb3VzZXMgb2YgUGFybGlhbWVudC4gSWYgIGFwcHJvdmVkIGJ5IGJvdGggSG91c2VzLCB0aGVuIGl0IG9wZXJhdGVzIGZvciA2IG1vbnRocy4gIER1cmluZyB0aGUgcHJvY2xhbWF0aW9uIG9mIGZpbmFuY2lhbCBlbWVyZ2VuY3kuIFByZXNpZGVudCAgb2YgSW5kaWEgY2FuIGlzc3VlIGRpcmVjdGlvbnMgZm9yIHRoZSByZWR1Y3Rpb24gb2Ygc2FsYXJpZXMgIGFuZCBhbGxvd2FuY2VzIG9mIGFsbCBvciBhbnkgY2xhc3Mgb2YgcGVyc29ucyBzZXJ2aW5nIGluICBjb25uZWN0aW9uIHdpdGggdGhlIGFmZmFpcnMgb2YgdGhlIHVuaW9uIGluY2x1ZGluZyB0aGUganVkZ2VzICBvZiBzdXByZW1lICBjb3VydCBhbmQgdGhlIEhpZ2ggd2FydHMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following statements:  1. The Chairman of the Committee on Public Accounts is appointed by the Speaker of the Lok Sabha. 2. The Committee on Public Accounts comprises Members of Lok Sabha, Members of Rajya Sabha and few eminent persons of industry and trade. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU2",
      "description" : "U3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IGFzIFB1YmxpYyBBY2NvdW50cyBDb21taXR0ZWUgIGNvbnNpc3RzIG9mIDIyIG1lbWJlcnM6IDE1IGZyb20gTG9rIFNhYmhhIGFuZCA3IGZyb20gUmFqeWEgIFNhYmhhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 57,
      "question" : "Who among the following have held the office of the Vice- President of India?  1. Mohammad Hidayatullah 2. Fakhruddin Ali Ahmed 3. Neelam Sanjiva Reddy 4. Shankar Dayal Sharma Select the correct answer using the code given below: Codes: ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU3",
      "description" : "TW9oZC4gSGlkYXlhdHVsbGFoICgxOTc5LTg0KTsgU2hhbmthciBEYXlhbCBTaGFybWEgICgxOTg3LTkyKSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 3 an 4 only "
      }
    },
    {
      "index" : 58,
      "question" : "Match List-I with List-II and select the correct answer using the code given below the Lists:  List-I (Person) List-II (Position) A. Nagendra Singh 1. Chief  Election Commissioner of India B. A. N. Ray 2. President, International Court of Justice C. R. K. Trivedi 3. Chief Justice of India D. Ashok Desai 4. Attorney General of India Codes: ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU4",
      "description" : "QXNob2sgRGVzYWkgd2FzIEF0dG9ybmV5IEdlbmVyYWwgb2YgSW5kaWEgKDE5OTYtOTgpOyAgTmFnZW5kcmEgU2luZ2ggd2FzIFByZXNpZGVudCBvZiBJbnRlcm5hdGlvbmFsIENvdXJ0IG9mICBKdXN0aWNlICgxOTg1LTg4KTsgQU4gUmF5IHdhcyBDSkkgKDE5NzMtNzcpOyBSSyBUcml2ZWRpICB3YXMgQ2hpZWYgRWxlY3Rpb24gQ29tbWlzc2lvbmVyICgxOTgyLTg1KSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A-1; B-4; C-2; D-3 ",
        "option2" : " A-2; B-3; C-1; D-4 ",
        "option3" : " A-1; B-3; C-2; D-4 ",
        "option4" : " A-2; B-4; C-1; D-3 "
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following statements:  The Constitution of India provides that: 1. the Legislative Assembly of each State shall consist of not more than 450 members chosen by direct election from territorial constituencies in the State 2. a person shall not be qualified to be chosen to fill a seat in the Legislative Assembly of a State if he/she is less than 25 years of age Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDU5",
      "description" : "U3RhdGVtZW50IDIgaXMgY29ycmVjdCBhcyBwZXIgcHJvdmlzaW9ucyBnaXZlbiB1bmRlciAgQXJ0aWNsZSAxNzMuIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyBhY2NvcmRpbmcgdG8gYXJ0aWNsZSAgMTcwLCB0aGUgbGVnaXNsYXRpdmUgYXNzZW1ibHkgb2YgZWFjaCBzdGF0ZSBzaGFsbCBjb25zaXN0IG9mICBub3QgbW9yZSB0aGFuIDUwMCBhbmQgbm90IGxlc3MgdGhhbiA2MCBtZW1iZXJzIGNob3NlbiBieSAgZGlyZWN0IGVsZWN0aW9uIGZyb20gdGVycml0b3JpYWwgY29uc3RpdHVlbmNpZXMgaW4gdGhlIHN0YXRlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 60,
      "question" : "With reference to the Union Government, consider the following statements:  1. The Constitution of India provides that all Cabinet Ministers shall be compulsorily be a sitting members of Lok Sabha only. 2. The Union Cabinet Secretariat operates under the direction of the Ministry of Parliamentary Affairs. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDYw",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIG1lbWJlcnMgb2YgUmFqeWEgU2FiaGEgIGNhbiBiZWNvbWUgY2FiaW5ldCBtaW5pc3RlcnMuIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyAgQ2FiaW5ldCBzZWNyZXRhcmlhdCBpcyB1bmRlciB0aGUgZGlyZWN0IGNoYXJnZSBvZiB0aGUgUE0uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 61,
      "question" : "With reference to Union Government, consider the following statements:  1. The Ministries and Departments of the Government of India are created by the Prime Minister on the advice of the Cabinet Secretary. 2. Each of the ministries is assigned to a Minister by the President of India on the advice of the Prime Minister. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDYx",
      "description" : "QWNjb3JkaW5nIHRvIEFydGljbGUgNzAgdGhlIFByaW1lIE1pbmlzdGVyIHNoYWxsIGJlICBhcHBvaW50ZWQgYnkgdGhlIFByZXNpZGVudCBhbmQgdGhlIG90aGVyIE1pbmlzdGVycyBzaGFsbCBiZSAgYXBwb2ludGVkIGJ5IHRoZSBQcmVzaWRlbnQgb24gdGhlIGFkdmljZSBvZiB0aGUgUHJpbWUgIE1pbmlzdGVyLiBUaGUgZ292ZXJubWVudCBvZiBJbmRpYSAoQWxsb2NhdGlvbiBvZiBCdXNpbmVzcykgIFJ1bGVzLCAxOTYxIGlzIG1hZGUgYnkgdGhlIFByZXNpZGVudCBvZiBJbmRpYSB1bmRlciBBcnRpY2xlICA3NyBvZiB0aGUgY29uc3RpdHV0aW9uIGZvciB0aGUgYWxsb2NhdGlvbiBvZiBidXNpbmVzcyBvZiB0aGUgIGdvdmVybm1lbnQgb2YgSW5kaWEuICBUaGUgTWluaXN0cmllcy8gRGVwYXJ0bWVudHMgb2YgdGhlIGdvdmVybm1lbnQgb2YgSW5kaWEgIGFyZSBjcmVhdGVkIGJ5IHRoZSBwcmVzaWRlbnQgb24gdGhlIGFkdmljZSBvZiB0aGUgcHJpbWUgIE1pbmlzdGVyIHVuZGVyIHRoZXNlIFJ1bGVzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following statements:  1. The Advocate General of a State in India is appointed by the President of India upon the recommendation of the Governor of the concerned State. 2. As provided in Civil Procedure Code, High Courts have original, appellate and advisory jurisdiction at the State level. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDYy",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIEFkdm9jYXRlIEdlbmVyYWwgb2YgdGhlICBzdGF0ZSBpcyBhcHBvaW50ZWQgYnkgdGhlIGdvdmVybm9yIG9mIHRoZSBTdGF0ZS4gU3RhdGVtZW50IDIgIGlzIGNvcnJlY3QuIFRoZSBvcmlnaW5hbCBjaXZpbCBqdXJpc2RpY3Rpb24gb2YgdGhlIEhpZ2ggQ291cnRzICBoYXMgbm90IGFsdG9nZXRoZXIgYmVlbiBhYm9saXNlZCBidXQgcmV0YWluZWQgaW4gcmVzcGVjdCBvZiAgYWN0aW9ucyBvZiBoaWdoZXIgdmFsdWUuICBUaGUgT3JpZ2luYWwgQ3JpbWluYWwgSnVyaXNkaWN0aW9uIG9mIEhpZ2ggQ291cnRzIGhhcywgIGhvd2V2ZXIsIGJlZW4gY29tcGxldGVseSB0YWtlbiBhd2F5IGJ5IHRoZSBjcmltaW5hbCAgcHJvY2VkdXJlIGNvZGUsIDE5NzMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statements:  1. Central Administrative Tribunal (CAT) was set up during the Prime Ministership of Lal Bahadur Shastri. 2. The Members of CAT are drawn from both judicial and administrative streams. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDYz",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIENBVCB3YXMgc2V0IHVwIGluIDE5ODUgIGR1cmluZyB0aGUgcHJpbWUgbWluaXN0ZXJzaGlwIG9mIFJhaml2IEdhbmRoaS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 64,
      "question" : "With reference to Union Government, consider the following statements:  1. Number of Ministries at the Centre on 15th August 1947 was 18. 2. Number of Ministries at the Centre at present is 36. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDY0",
      "description" : "VGhlIG51bWJlciBvZiBtaW5pc3RlcmllcyBhdCB0aGUgQ2VudHJlIGNhbiB2YXJ5IGJhc2VkICBvbiBmYWN0b3JzIHN1Y2ggYXMgdm9sdW1lIG9mIHdvcmssIGltcG9ydGFuY2UgYXR0YWNoZWQgdG8gIGRpZmZlcmVudCBzZWN0b3JzLCBjaGFuZ2VzIG9mIG9yaWVudGF0aW9uIG9mIHBvbGljeSBldGMuIE9uICAxNSBBdWcsIDE5NDcsIHRoZSBudW1iZXIgb2YgbWluaXN0cmllcyBhdCB0aGUgY2VudHJlIHdhcyAxOC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 65,
      "question" : "With reference to the Consumer Disputes Redressal at district level in India, which one of the following statements is not correct ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDY1",
      "description" : "VGhlIERpc3RyaWN0IEZvcnVtIGVudGVydGFpbnMgdGhlIGNvbXBsYWludHMgd2hlcmUgIHRoZSB2YWx1ZSBvZiBnb29kcyBvciBzZXJ2aWNlcyBkb2VzIG5vdCBleGNlZWQgcnVwZWVzICB0d2VudHkgbGFraHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A State Government can establish more than one  District Forum in a district if it deems fit. ",
        "option2" : " One of the members of the District Forum shall be a woman ",
        "option3" : " The District Forum entertains the complaints where  the value of goods or services does not exceed rupees  fifty lakhs. ",
        "option4" : " A complaint in relation to any goods sold or any service "
      }
    },
    {
      "index" : 66,
      "question" : "When the annual Union Budget is not passed by the Lok Sabha ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw2Ng==",
      "description" : "SWYgYW5udWFsIHVuaW9uIGJ1ZGdldCBpcyBub3QgcGFzc2VkIGJ5IHRoZSBMT0sgIFNBQkhBLCBpdCBpcyB0YW50YW1vdW50IHRvIG5vIGNvbmZpZGVuY2UgbW90aW9uLiBTbyB0aGUgIGdvdnQgc3VibWl0cyB0aGUgcmVzaWduYXRpb24gb2YgaGlzIGNvdW5jaWwgb2YgbWluaXN0ZXJzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The Budget is modified and presented again ",
        "option2" : " The Budget is referred to the Rajya Sabha for  suggestions ",
        "option3" : " The Union Finance Minister is asked to resign ",
        "option4" : " The Prime Minister submits the resignation of Council "
      }
    },
    {
      "index" : 67,
      "question" : "The authorization for the withdrawal of funds from the Consolidated Fund of India must come from         ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw2Nw==",
      "description" : "UGFybGlhbWVudCBzaGFsbCBoYXZlIHBvd2VyIHRvIGF1dGhvcmlzZSBieSBsYXcgdGhlICB3aXRoZHJhd2FsIG9mIG1vbmV5cyBmcm9tIHRoZSBDb25zb2xpZGF0ZWQgRnVuZCBvZiBJbmRpYSAgZm9yIHRoZSBwdXJwb3NlcyBmb3Igd2hpY2ggdGhlIHNhaWQgZ3JhbnRzIGFyZSBtYWRlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The President of India ",
        "option2" : " The Parliament of India ",
        "option3" : " The Prime Minister of India ",
        "option4" : " The Union Finance Minister "
      }
    },
    {
      "index" : 68,
      "question" : "In the Parliament of India, the purpose of an adjournment motion is  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw2OA==",
      "description" : "QWRqb3Vybm1lbnQgbW90aW9uIDogIChpKSBJdCBpcyBpbnRyb2R1Y2VkIGluIHRoZSBQYXJsaWFtZW50IHRvIGRyYXcgYXR0ZW50aW9uIG9mICB0aGUgaG91c2UgdG8gYSBkZWZpbml0ZSBtYXR0ZXIgb2YgdXJnZW50IHB1YmxpYyBpbXBvcnRhbmNlLiAgKGlpKSBJdCBpcyByZWdhcmRlZCBhcyBhbiBleHRyYW9yZGluYXJ5IGRldmljZSwgYmVjYXVzZSBpdCAgaW50ZXJydXB0cyB0aGUgbm9ybWFsIGJ1c2luZXNzIG9mIHRoZSBob3VzZS4gIChpaWkpIEl0IGludm9sdmVzIGFuIGVsZW1lbnQgb2YgY2Vuc3VyZSBhZ2FpbnN0IHRoZSAgZ292ZXJubWVudCBhbmQgUmFqeWEgU2FiaGEgY2Fubm90IGludHJvZHVjZSAgQWRqb3Vybm1lbnQgTW90aW9uLiAgKGl2KSBUaGUgZGlzY3Vzc2lvbiBvbiBhZGpvdXJubWVudCBtb3Rpb24gc2hvdWxkIGxhc3QgIGZvciBub3QgbGVzcyB0aGFuIHR3byBob3VycyBhbmQgdGhpcnR5IG1pbnV0ZXMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " to allow a discussion on a definite matter of urgent  public importance ",
        "option2" : " to let opposition members collect information from the  ministers ",
        "option3" : " to allow a reduction of specific amount in demand for  grant ",
        "option4" : " to postpone the proceedings to check the inappropriate "
      }
    },
    {
      "index" : 69,
      "question" : "Consider the following statements:  1. Union Territories are not represented in the Rajya Sabha. 2. It is within the purview of the Chief Election Commissioner to adjudicate the election disputes. 3. According to the Constitution of India, the Parliament consists of the Lok Sabha and the Rajya Sabha only. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw2OQ==",
      "description" : "Tm9uZSBvZiB0aGUgYWJvdmUgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgKGkpIFVuaW9uIFRlcnJpdG9yaWVzIChEZWxoaSBhbmQgUG9uZGljaGVycnkpIGFyZSAgcmVwcmVzZW50ZWQgaW4gdGhlIFJhanlhIFNhYmhhLiAgKGlpKSBJdCBpcyBub3Qgd2l0aGluIHRoZSBwdXJ2aWV3IG9mIHRoZSBDaGllZiBFbGVjdGlvbiAgQ29tbWlzc2lvbmVyIHRvIGFkanVkaWNhdGUgZWxlY3Rpb24gZGlzcHV0ZXMuIEl0IGlzIHRoZSAgU3VwcmVtZSBDb3VydCBhbmQgSGlnaCBDb3VydCB3aGljaCBsb29rIGludG8gdGhlIGRpc3B1dGVzLiAgKGlpaSkgQWNjb3JkaW5nIHRvIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEsIHRoZSBQYXJsaWFtZW50ICBjb25zaXN0cyBvZiB0aGUgTG9rIFNhYmhhLCB0aGUgUmFqeWEgU2FiaGEgYW5kIHRoZSAgUHJlc2lkZW50ICBvZiBJbmRpYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : "    2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 70,
      "question" : "Regarding the office of the Lok Sabha Speaker, consider the following statements:  1. He/She holds the office during the pleasure of the President. 2. He/She need not be a member of the House at the time of his/her election but has to become a member of the House within six months from the date of his/her election. 3. If he/she intends to resign, the letter of his/her resignation has to be addressed to the Deputy Speaker. Which of the statements given above is /are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3MA==",
      "description" : "SWYgdGhlIExvayBTYWJoYSBTcGVha2VyIHdhbnRzIHRvIHJlc2lnbiwgdGhlIGxldHRlciBvZiAgaGlzICAvICBoZXIgIHJlc2lnbmF0aW9uICBoYXMgIHRvICBiZSAgYWRkcmVzc2VkICB0byAgdGhlICBEZXB1dHkgIFNwZWFrZXIuIFRoZSBTcGVha2VyIGlzIGVsZWN0ZWQgYnkgdGhlIExvay1TYWJoYSBmcm9tICBhbW9uZ3N0IGl0cyBNZW1iZXJzLiBVc3VhbGx5IHRoZSBTcGVha2VyIHJlbWFpbnMgaW4gb2ZmaWNlICBkdXJpbmcgdGhlIGxpZmUgb2YgdGhlIExvay1TYWJoYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 71,
      "question" : "Which of the following can be said to be essentially the parts of 'Inclusive Governance'?  1. Permitting the Non-Banking Financial Companies to do banking 2. Establishing effective District Planning Committees in all the districts 3. Increasing the government spending on public health 4. Strengthening the Mid-day Meal Scheme Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3MQ==",
      "description" : "SW5jbHVzaXZlIGdvdmVybmFuY2UgTWVhbnMgdGhhdCB0aGUgYmVuZWZpdCBvZiAgZ292ZXJuYW5jZSBTaG91bGQgcmVhY2ggdGhlIGRvd24gdHJvZGRlbiBhbmQgdG8gdGhlIGxhc3QgIGNvcm5lciBvZiB0aGUgY291bnRyeS4gIFByb3Zpc2lvbnMgZ2l2ZW4gaW4gb3B0aW9uIDIsIDMgYW5kIDQgbGVhZHMgdG8gdGhlIGluY2x1c2l2ZSAgZ292ZXJuYW5jZS4gIFBlcm1pdHRpbmcgdGhlIE5vbi1CYW5raW5nIEZpbmFuY2lhbCBjb21wYW5pZXMgdG8gZG8gIGJhbmtpbmcgaXMgbm90IGRpcmVjdGx5IGxpbmtlZCB0byB0aGUgaW5jbHVzaXZlIGdvdmVybmFuY2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 72,
      "question" : "In India, other than ensuring that public funds are used efficiently and for intended purpose, what is the importance of the office of the Comptroller and Auditor General (CAG)?  1. CAG exercises exchequer control on behalf of the Parliament when the President of India declares national emergency/financial emergency. 2. CAG reports on the execution of projects or programmes by the ministries are discussed by the Public Accounts Committee. 3. Information from CAG reports can be used by investigating agencies to frame charges against those who have violated the law while managing public finances. 4. While dealing with the audit and accounting of government companies, CAG has certain judicial powers for prosecuting those who violate the law. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3Mg==",
      "description" : "T25seSAybmQgYW5kIDNyZCBhcmUgY29ycmVjdCBzdGF0ZW1lbnRzLiAgKDIpIENBRyByZXBvcnRzIG9uIGV4ZWN1dGlvbiBvZiBwcm9qZWN0cyBvciBwcm9ncmFtbWVzICBieSB0aGUgbWluaXN0cmllcyBhcmUgZGlzY3Vzc2VkIGJ5IHRoZSBQdWJsaWMgQWNjb3VudHMgIENvbW1pdHRlZS4gICgzKSBJbmZvcm1hdGlvbiBmcm9tIENBRyByZXBvcnRzIGNhbiBiZSB1c2VkIGJ5ICBpbnZlc3RpZ2F0aW5nIGFnZW5jaWVzIHRvIHByZXNzIGNoYXJnZXMgIGFnYWluc3QgdGhvc2Ugd2hvICBoYXZlIHZpb2xhdGVkIHRoZSBsYXcgd2hpbGUgbWFuYWdpbmcgcHVibGljIGZpbmFuY2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : "    1, 3 and 4 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 73,
      "question" : "The Prime Minister of India, at the time of his/her appointment  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3Mw==",
      "description" : "QXJ0aWNsZSA3NShJKSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBwcm92aWRlcyB0aGF0ICB0aGUgUHJpbWUgTWluaXN0ZXIgc2hhbGwgYmUgYXBwb2ludGVkIGJ5IHRoZSBQcmVzaWRlbnQuIFRoZSAgQ29uc3RpdHV0aW9uIHBlcm1pdHMgYSBwZXJzb24gdG8gYmUgYXBwb2ludGVkIFBNIHdpdGhvdXQgIGhpc1xoZXIgYmVpbmcgYSBtZW1iZXIgb2YgZWl0aGVyIEhvdXNlIG9mIHRoZSBQYXJsaWFtZW50IGF0ICB0aGUgdGltZSBvZiBhcHBvaW50bWVudC4gSG93ZXZlciBoZS9zaGUgaGFzIHRvIGJlY29tZSBhICBNZW1iZXIgb2YgZWl0aGVyIGhvdXNlIG9mIHBhcmxpYW1lbnQgd2l0aCBpbiBTaXggTW9udGhzICBmcm9tIHRoZSBkYXRlIG9mIGhpcy9oZXIgYXBwb2ludG1lbnQgYXMgcHJpbWUtbWluaXN0ZXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " need not necessarily be a member of one of the Houses  of the Parliament but must become a member of one of  the Houses within six months ",
        "option2" : " need not necessarily be a member of one of the Houses  of the Parliament but must become a member of the  Lok Sabha within six months ",
        "option3" : " must be a member of one of the Houses of the Parliament ",
        "option4" : " must be a member of the Lok Sabha "
      }
    },
    {
      "index" : 74,
      "question" : "A deadlock between the Lok Sabha and the Rajya Sabha calls for a joint sitting of the Parliament during the passage of  1. Ordinary Legislation 2. Money Bill 3. Constitution Amendment Bill Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3NA==",
      "description" : "Sm9pbnQgc2l0dGluZyBpcyBhbiBleHRyYS1vcmRpbmFyeSBNYWNoaW5lcnkgcHJvdmlkZWQgIGJ5IHRoZSBjb25zdGl0dXRpb24gdG8gcmVzb2x2ZSBhIGRlYWRsb2NrIGJldHdlZW4gdGhlIHR3byAgaG91c2VzIG92ZXIgdGhlIHBhc3NhZ2Ugb2YgYSBiaWxsLiAgRSAgQiAgRCAgXzggIDM0ICAyICBHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpIEMgMjcgIFRoZSBwcm92aXNpb24gb2Ygam9pbnQgc2l0dGluZyBpcyBhcHBsaWNhYmxlIHRvIG9yZGluYXJ5IGJpbGxzICBvZiBmaW5hbmNpYWwgYmlsbHMgb25seSBhbmQgbm90IHRvIE1vbmV5IGJpbGxzIG9yICBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgYmlsbHMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 75,
      "question" : "What will follow if a Money Bill is substantially amended by the Rajya Sabha?                 ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3NQ==",
      "description" : "V2hlbiBhIG1vbmV5IGJpbGwgcmV0dXJucyB0byB0aGUgTG9rc2FiaGEgd2l0aCAgYW1lbmRtZW50cyBtYWRlIGJ5IHRoZSBSYWp5YXNhYmhhLCBpdCBpcyBvcGVuIHRvIExva3NhYmhhICB0byBhY2NlcHQgb3IgdG8gcmVqZWN0IGFueSBvciBhbGwgb2YgdGhlIHJlY29tbWVuZGF0aW9ucy4gIFdoZW4gdGhlIExva3NhYmhhIGNob29zZXMgdG8gYWNjZXB0IG9yIGRlY2xpbmUgdGhlIG1vbmV5ICBiaWxsIHdpdGggb3Igd2l0aG91dCB0aGUgcmVjb21tZW5kYXRpb24sIHRoZSBtb25leSBiaWxsIGlzICBkZWVtZWQgcGFzc2VkIGluIGJvdGggaG91c2VzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The Lok Sabha may still proceed with the Bill, accepting or  not accepting the recommendations of the Rajya Sabha ",
        "option2" : " The Lok Sabha cannot consider the bill further ",
        "option3" : " The Lok Sabha may send the Bill to the Rajya Sabha  for reconsideration ",
        "option4" : " The President may call a joint sitting for passing the Bill "
      }
    },
    {
      "index" : 76,
      "question" : "Which one of the following statements is correct?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3Ng==",
      "description" : "Tm8gcHJvY2VkdXJlIGhhcyBiZWVuIGxhaWQgZG93biBpbiB0aGUgY29uc3RpdHV0aW9uICBvZiBJbmRpYSBmb3IgdGhlIHJlbW92YWwgb2YgYSBnb3Zlcm5vciBmcm9tIGhpcy9oZXIgcG9zdC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " In India, the same person cannot be appointed as  Governor for two or more States at the same time ",
        "option2" : " The Judges of the High Court of the States in India are  appointed by the Governor of the State just as the  Judges of Supreme Court are appointed by the  President ",
        "option3" : " No procedure has been laid down in the Constitution  of India for the removal of a Governor from his/her  post ",
        "option4" : " In the case of a Union Territory having a legislative "
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements : Attorney General of India can  1. take part in the proceedings of the Lok Sabha 2. be a member of a committee of the Lok Sabha 3. speak in the Lok Sabha 4. vote in the Lok Sabha Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3Nw==",
      "description" : "VGhlIEF0dG9ybmV5IEdlbmVyYWwgb2YgSW5kaWEgaGFzIGEgcG9zdCBwYXJhbGxlbCB0byAgYW55IG1pbmlzdGVyIGluIFBhcmxpYW1lbnQuIEhlIGNhbiB0YWtlIHBhcnQgaW4gdGhlICBwcm9jZWVkaW5ncyBvZiBlaXRoZXIgaG91c2UuIEhlIGNhbiBiZSBhIG1lbWJlciBvZiBhbnkgIGNvbW1pdHRlZSBvZiBQYXJsaWFtZW50LiBIZSBoYXMgdGhlIHJpZ2h0IHRvIHNwZWFrIGluIHRoZSAgUGFybGlhbWVudCBidXQgaGUgaGFzIG5vIHJpZ2h0IHRvIHZvdGUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 4 ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 1 an 3 only "
      }
    },
    {
      "index" : 78,
      "question" : "The Parliament can make any law for whole or any part of India for implementing international treaties           ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3OA==",
      "description" : "UGFybGlhbWVudCBoYXMgZXhjbHVzaXZlIHBvd2VyIHRvIG1ha2UgbGF3IHdpdGggcmVzcGVjdCAgdG8gYW55IG9mIHRoZSBtYXR0ZXJzIGVudW1lcmF0ZWQgIHdpdGggdGhlIFVuaW9uIExpc3QuICBBY2NvcmRpbmcgdG8gZW50cnkgbm8gMTQgaW4gdGhlIFVuaW9uIExpc3QgaXQgcmVhZHMtICdlbnRlcmluZyAgaW50byB0cmVhdGllcyBhbmQgYWdyZWVtZW50cyB3aXRoIGZvcmVpZ24gY29udHJpZXMgYW5kICBpbXBsZW1lbnRpbmcgb2YgdHJlYXRpZXMsIGFncmVlbWVudCBhbmQgY29udmVudGlvbiB3aXRoICBmb3JlaWduIGNvdW50cmllcycuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " with the consent of all the States ",
        "option2" : " with the consent of the majority of States ",
        "option3" : " with the consent of the States concerned ",
        "option4" : " without the consent of any State "
      }
    },
    {
      "index" : 79,
      "question" : "In the context of India, which of the following principles is/are implied institutionally in the parliamentary government?  1. Members of the Cabinet are Members of the Parliament. 2. Ministers hold the office till they enjoy confidence in the Parliament. 3. Cabinet is headed by the Head of the State. Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw3OQ==",
      "description" : "TWluaXN0ZXIvbWluaXN0ZXJzIGNhbiBiZSByZW1vdmVkIGJ5IGlzc3Vpbmcgbm8gIGNvbmZpZGVuY2UgbW90aW9uIGluIHRoZSBwYXJsaWFtZW50LiAgQWxsIGNhYmluZXQgbWVtYmVycyAgYXJlIG1hbmRhdGVkIGJ5IHRoZSBjb25zdGl0dXRpb24gdG8gYmUgdGhlIG1lbWJlciBvZiBlaXRoZXIgIGhvdXNlIG9mIHRoZSBwYXJsaWFtZW50IG9mIEluZGlhLiBUaGUgY2FiaW5ldCBpcyBoZWFkZWQgYnkgIHRoZSBwcmltZSBtaW5pc3RlciBhbmQgaXMgYWR2aXNlZCBieSB0aGUgY2FiaW5ldCBzZWNyZXRhcnkgIHdobyBhbHNvIGFjdHMgYXMgdGhlIGhlYWQgb2YgSW5kaWFuIEFkbWluaXN0cmF0aXZlIHNlcnZpY2UuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 80,
      "question" : "Consider the following statements:  1. The Council of Ministers in the Centre shall be collectively responsible to the Parliament. 2. The Union Ministers shall hold the office during the pleasure of the President of India. 3. The Prime Minister shall communicate to the President about the proposals for legislation. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4MA==",
      "description" : "QXJ0aWNsZSAtIDc1ICg0KTogVGhlIG1pbmlzdGVycyBTaGFsbCBob2xkIG9mZmljZSAgIGR1cmluZyB0aGUgcGxlYXN1cmUgb2YgdGhlIHByZXNpZGVudC4gIEFydGljbGUgLSA3NSAoNSk6IFRoZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBzaGFsbCBiZSAgY29sbGVjdGl2ZWx5IHJlc3BvbnNpYmxlIHRvIHRoZSBMb2stU2FiaGEuICBBcnRpY2xlLTc4ICgyKTogUHJpbWUgbWluaXN0ZXIgc2hhbGwgZnVybmlzaCBzdWNoIGluZm9ybWF0aW9uICByZWxhdGluZyB0byB0aGUgYWRtaW5pc3RyYXRpb24gb2YgdGhlIGFmZmFpcnMgb2YgdGhlIHVuaW9uIGFuZCAgcHJvcG9zYWxzIGZvciBsZWdpc2xhdGlvbiBvbiB0aGUgcHJlc2lkZW50IG1heSBjYWxsIGZhci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following statements:  1. The Chairman and the Deputy Chairman of the Rajya Sabha are not the members of that House. 2. While the nominated members of the two Houses of the Parliament have no voting right in the presidential election, they have the right to vote in the election of the Vice President. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4MQ==",
      "description" : "VGhlIGZpcnN0IHN0YXRlbWVudCBpcyBub3QgY29ycmVjdCBiZWNhdXNlIGl0cyB0YWxrcyAgYWJvdXQgY2hhaXJtYW4gYXMgd2VsbCBhcyB0aGUgZGVwdXR5IGNoYWlybWFuLiBUaGUgVmljZS0gIFByZXNpZGVudCBvZiBJbmRpYSBpcyBleC1vZmZpY2lvIENoYWlybWFuIG9mIFJhanlhIFNhYmhhLiAgUmFqeWEgU2FiaGEgYWxzbyBjaG9vc2VzIGZyb20gYW1vbmdzdCBpdHMgbWVtYmVycywgYSAgRGVwdXR5IENoYWlybWFuLiAgUHJlc2lkZW50OiBFbGVjdGVkIG1lbWJlcnMgb2YgcGFybGlhbWVudCAoTVBzIGZyb20gTG9rICBTYWJoYSBhcyB3ZWxsIGFzIFJhanlhIFNhYmhhKS4gIEVsZWN0ZWQgbWVtYmVycyBvZiBTdGF0ZSBsZWdpc2xhdGl2ZSBtZW1iZXJzLCBpbmNsdWRpbmcgdGhhdCAgaWYgTkNUIG9mIERlbGhpIGFuZCBQb25kaWNoZXJyeS4gIFZpY2UgUHJlc2lkZW50OiBWaWNlIFByZXNpZGVudCBpcyBlbGVjdGVkIGluZGlyZWN0bHksIGJ5IGFuICBlbGVjdG9yYWwgY29sbGVnZSBjb25zaXN0aW5nIG9mIG1lbWJlcnMgb2YgYm90aCBob3VzZXMgb2YgIHRoZSBwYXJsaWFtZW50LiBUaGUgc2Vjb25kIHN0YXRlbWVudCBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements :  1. The President shall make rules for the more convenient transaction of the business of the Government of India, and for  the  allocation  among Ministers of the said business. 2. All executive  actions  of  the Government of India shall be expressed to be taken in the name of the Prime Minister. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4Mg==",
      "description" : "Q2xhdXNlICgzKSBvZiBBcnRpY2xlIDc3ICgnQ29uZHVjdCBvZiBCdXNpbmVzcyBvZiB0aGUgIEdvdmVybm1lbnQgb2YgSW5kaWEnKSBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGxheXMgZG93biAgYXMgZm9sbG93czogICdUaGUgUHJlc2lkZW50IHNoYWxsIG1ha2UgcnVsZXMgZm9yIHRoZSBtb3JlICBjb252ZW5pZW50IHRyYW5zYWN0aW9uIG9mIHRoZSBidXNpbmVzcyBvZiB0aGUgR292ZXJubWVudCAgb2YgSW5kaWEsIGFuZCBmb3IgdGhlIGFsbG9jYXRpb24gYW1vbmcgTWluaXN0ZXJzIG9mIHRoZSBzYWlkICBidXNpbmVzcy4gIFRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgbWVudGlvbnMgdGhhdCwgJ0FsbCBleGVjdXRpdmUgIGFjdGlvbiBvZiB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBzaGFsbCBiZSBleHByZXNzZWQgdG8gYmUgIHRha2VuIGluIHRoZSBuYW1lIG9mIHRoZSBQcmVzaWRlbnQuJyBUaGVyZWZvcmUsIG9ubHkgb3B0aW9uICAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 83,
      "question" : "The power to increase the number of judges in the Supreme Court of India is vested in  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4Mw==",
      "description" : "SXQgaXMgdGhlIFBhcmxpYW1lbnQgd2hpY2ggaGFzIHRoZSAgcG93ZXIgdG8gaW5jcmVhc2UgIHRoZSBudW1iZXIgb2YganVkZ2VzIGluIHRoZSBTdXByZW1lIENvdXJ0IG9mIEluZGlhLiAgUGFybGlhbWVudCBpbmNyZWFzZWQgdGhlIG51bWJlciBvZiBqdWRnZXMgZnJvbSB0aGUgb3JpZ2luYWwgIGVpZ2h0IGluIDE5NTAgdG8gZWxldmVuIGluIDE5NTYsIGZvdXJ0ZWVuIGluIDE5NjAsIGVpZ2h0ZWVuIGluICAxOTc4LCB0d2VudHktc2l4IGluIDE5ODYgYW5kIHRoaXJ0eS1vbmUgaW4gMjAwOC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " the President of India ",
        "option2" : " the Parliament ",
        "option3" : " the Chief Justice of India ",
        "option4" : " the Law Commission "
      }
    },
    {
      "index" : 84,
      "question" : "Consider the  following statements regarding a No- Confidence Motion in India :                   1. There  is  no  mention  of  a No-Confidence Motion in the Constitution of India. 2. A Motion of No-Confidence can be introduced in the Lok Sabha only. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4NA==",
      "description" : "QXJ0aWNsZSA3NSBzYXlzIHRoYXQgdGhlIENvdW5jaWwgb2YgTWluaXN0ZXJzIHNoYWxsIGJlICBjb2xsZWN0aXZlbHkgcmVzcG9uc2libGUgdG8gTG9rc2FiaGEuIEluIG90aGVyIHdvcmRzLCBMb2sgIFNhYmhhIGNhbiByZW1vdmUgdGhlbSBieSBwYXNzaW5nIGEgbm8tY29uZmlkZW5jZSBtb3Rpb24uICBCdXQgdGhlIHdvcmQgJ25vIGNvbmZpZGVuY2UgbW90aW9uJyBpdHNlbGYgaXMgbm90IG1lbnRpb25lZCAgaW4gQ29uc3RpdHV0aW9uLiBJdCBjb21lcyBmcm9tIFJ1bGUgMTk4IG9mIExvayBTYWJoYSBSdWxlcy4gIFJhanlhIFNhYmhhIGNhbm5vdCBwYXNzIG9yIHJlbW92ZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBieSAgcGFzc2luZyBuby1jb25maWRlbmNlIG1vdGlvbi4gTm8gY29uZmlkZW5jZSBtb3Rpb24gY2FuICBiZSBpbnRyb2R1Y2VkLCBvbmx5IGluIExvayBTYWJoYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : "  2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2 "
      }
    },
    {
      "index" : 85,
      "question" : "Which  one  of  the  following  is the  largest  Committee  of the Parliament? ",
      "questionId" : "fFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQpfDg1",
      "description" : "VGhlIGxhcmdlc3QgQ29tbWl0dGVlIGlzIHRoZSBjb21taXR0ZWUgb2YgRXN0aW1hdGVzLCAgZ2l2ZW4gaXRzIDMwIG1lbWJlcnMgIENvbW1pdHRlZSBvbiBOby4gb2YgbWVtYmVycyAgUHVibGljIEFjY291bnRzIDIyICBFc3RpbWF0ZXMgMzAgIFB1YmxpYyBVbmRlcnRha2luZ3MgMjIgIFBldGl0aW9ucyBMUygxNSkgLCBSUygxMCkg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxJbmRpYW4gUG9saXR5ICYgR292ZXJuYW5jZXxHb3Zlcm5tZW50ICYgQWRtaW5pc3RyYXRpb24gKEluZGlhICYgV29ybGQp",
      "year" : 0,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The  Committee  on  Public Accounts ",
        "option2" : " The Committee on Estimates ",
        "option3" : " The  Committee  on  Public Undertakings ",
        "option4" : " The Committee on Petitions "
      }
    },
    {
      "index" : 86,
      "question" : "Which  of  the  following  are  the discretionary powers given to the Governor of a State?  1. Sending  a  report  to  the President of India for imposing the President's rule 2. Appointing the Ministers 3. Reserving certain bills passed by the  State Legislature for consideration of the President of India 4. Making the rules to conduct the  business  of  the State Government Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4Ng==",
      "description" : "VGhlIGdvdmVybm9yIGhhcyBDb25zdGl0dXRpb25hbCBkaXNjcmV0aW9uIGluIGNhc2VzICBvZiBSZXNlcnZhdGlvbiBvZiBiaWxsIGZvciBjb25zaWRlcmF0aW9uIG9mIHRoZSBQcmVzaWRlbnQgYW5kICBSZWNvbW1lbmRhdGlvbiBvZiB0aGUgaW1wb3NpdGlvbiBvZiBQcmVzaWRlbnQncyAgcnVsZS5UaGVyZWZvcmUsIHN0YXRlbWVudCAxIGFuZCAzIGFyZSBkZWZpbml0ZWx5IHJpZ2h0LiBNb3Jlb3ZlciAgR292ZXJub3Igb25seSBhcHBvaW50cyB0aG9zZSBwZXJzb25zIGFzIG1pbmlzdGVycyB3aG8gYXJlICByZWNvbW1lbmRlZCBieSB0aGUgQ2hpZWYgTWluaXN0ZXIuIFNvIEdvdmVybm9yIGRvZXNuJ3QgIGhhdmUgJ0Rpc2NyZXRpb24nIGluIGFwcG9pbnRtZW50IG9mIHRoZSBtaW5pc3Rlci5UaGVyZWZvcmUgMiAgaXMgd3JvbmcgLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 87,
      "question" : "Which of the following is/are the function/functions of the Cabinet Secretariat?  1. Preparation  of  agenda  for Cabinet Meetings 2. Secretarial assistance to Cabinet Committees 3. Allocation  of   financial resources to the Ministries Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4Nw==",
      "description" : "VGhlIGZ1bmN0aW9ucyBvZiB0aGUgQ2FiaW5ldCBTZWNyZXRhcmlhdCBpbmNsdWRlcyAgcHJlcGFyYXRpb24gb2YgYWdlbmRhIGZvciBDYWJpbmV0IE1lZXRpbmdzICYgU2VjcmV0YXJpYWwgIGFzc2lzdGFuY2UgdG8gQ2FiaW5ldCBDb21taXR0ZWVzLiBIb3dldmVyIEFsbG9jYXRpb24gb2YgIGZpbmFuY2lhbCByZXNvdXJjZXMgdG8gdGhlIE1pbmlzdHJpZXMgYXMgcGVyIHRoZSBwcm92aXNpb25zICBpbiBidWRnZXQgaXMgdGhlIHRhc2sgb2YgZmluYW5jZSBtaW5pc3RyeS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following statements :                 A Constitutional Government is one which 1. places  effective  restrictions on individual liberty in the interest of State Authority 2. places effective restrictions on the Authority of the State in the interest of individual liberty Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKXw4OA==",
      "description" : "QSBjb25zdGl0dXRpb25hbCBHb3Zlcm5tZW50IG5lZWRzIHRvIGJhbGFuY2UgIGJldHdlZW4gaW5kaXZpZHVhbCBsaWJlcnR5IHZpeiBhIHZpeiBTdGF0ZSBBdXRob3JpdHkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SW5kaWFuIFBvbGl0eSAmIEdvdmVybmFuY2V8R292ZXJubWVudCAmIEFkbWluaXN0cmF0aW9uIChJbmRpYSAmIFdvcmxkKQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 89,
      "question" : "Consider the following statements :  1 The Legislative Council of a State in India can be larger in size than half of the Legislative Assembly of that particular State 2. The Governor of a State nominates the Chairman of Legislative Council of that particular State. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8ODk=",
      "description" : "VGhlIG1heGltdW0gc3RyZW5ndGggb2YgdGhlIGxlZ2lzbGF0aXZlIGNvdW5jaWwgaXMgZml4ZWQgIGF0IG9uZSB0aGlyZCBvZiB0aGUgdG90YWwgc3RyZW5ndGggb2YgdGhlIGxlZ2lzbGF0aXZlIGFzc2VtYmx5ICBhbmQgdGhlIG1pbmltdW0gc3RyZW5ndGggaXMgZml4ZWQgYXQgNDAuIFRoZSBjaGFpcm1hbiBvZiB0aGUgIGxlZ2lzbGF0aXZlIGNvdW5jaWwgaXMgZWxlY3RlZCBieSB0aGUgY291bmNpbCBpdHNlbGYgZnJvbSAgYW1vbmdzdCBpdHMgbWVtYmVycy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 90,
      "question" : "With reference to the Union Government, consider the following  statements :  1. The Department  of   Revenue is  responsible  for  the preparation of Union Budget that is presented to the Parliament. 2. No amount can be withdrawn from the Consolidated Fund of India without the authorization from the Parliament of India. 3. All the disbursements made from Public Account also need the authorization from the Parliament of India. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTA=",
      "description" : "VGhlIGRlcGFydG1lbnQgb2YgZWNvbm9taWMgYWZmYWlycyB1bmRlciB0aGUgbWluaXN0cnkgIG9mIGZpbmFuY2UgaXMgcmVzcG9uc2libGUgZm9yIHRoZSBwcmVwYXJhdGlvbiBvZiB1bmlvbiBCdWRnZXQgIHRoYXQgaXMgcHJlc2VudGVkIHRvIHRoZSBwYXJsaWFtZW50LiAgKC0pQ29uc29saWRhdGVkIGZ1bmQgb2YgSW5kaWEgaXMgYSBmdW5kIHRvIHdoaWNoIGFsbCAgcmVjZWlwdHMgYXJlIGNyZWRpdGVkIGFuZCBhbGwgcGF5bWVudHMgYXJlIGRlYml0ZWQuICAoLSlObyBtb25leSBjYW4gYmUgYXBwcm9wcmlhdGVkIChpc3N1ZWQgb3IgZHJhd24pIG91dCAgb2YgdGhlIGNvbnNvbGlkYXRlZCBmdW5kIG9mIEluZGlhIHdpdGhvdXQgdGhlIGF1dGhvcml6YXRpb24gIGZyb20gdGhlIHBhcmxpYW1lbnQgb2YgSW5kaWEuICBQdWJsaWMgYWNjb3VudCBvZiBJbmRpYSBpcyBvcGVyYXRlZCBieSBleGVjdXRpdmUgYWN0aW9uLCAgdGhhdCBpcywgdGhlIHBheW1lbnRzIGZyb20gdGhpcyBhY2NvdW50IGNhbiBiZSBtYWRlIHdpdGhvdXQgIHBhcmxpYW1lbnRhcnkgYXBwcm9wcmlhdGlvbi4gU3VjaCBwYXltZW50cyBhcmUgbW9zdGx5IGluICB0aGUgbmF0dXJlIG9mIGJhbmtpbmcgdHJhbnNhY3Rpb25zLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 91,
      "question" : "There is a Parliamentary System of Government in India because the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTE=",
      "description" : "VGhlIGV4ZWN1dGl2ZSBpbiBhIFBhcmxpYW1lbnRhcnkgc3lzdGVtIGlzIHJlc3BvbnNpYmxlICAxdG8gdGhlIGxlZ2lzbGF0dXJlIGZvciBhbGwgaXRzIGFjdGlvbnMuIFRoZSBtaW5pc3RlcnMgYXJlICBhbnN3ZXJhYmxlIHRvIHRoZSBwYXJsaWFtZW50IGFuZCByZXNwb25zaWJsZSB0byB0aGUgTG9rICBTYWJoYS4gVGhlIENvdW5jaWwgb2YgTWluaXN0ZXJzIHJlbWFpbnMgaW4gb2ZmaWNlIGFzIGxvbmcgIGFzIHRoZXkgZW5qb3kgdGhlIHN1cHBvcnQgYW5kIGNvbmZpZGVuY2Ugb2YgdGhlIExvayBTYWJoYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Lok Sabha is elected directly by the people ",
        "option2" : " Parliament  can amend the Constitution ",
        "option3" : " Rajya Sabha cannot be dissolved ",
        "option4" : " Council of Ministers is responsible to the Lok Sabha "
      }
    },
    {
      "index" : 92,
      "question" : "Consider the following statements:  1. The Rajya Sabha has no power either to reject or to amend a Money Bill. 2. The Rajya Sabha cannot vote on the Demands for Grants. 3. The Rajya Sabha cannot discuss the Annual Financial Statement. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTI=",
      "description" : "QSBNb25leSBCaWxsIGNhbm5vdCBiZSBpbnRyb2R1Y2VkIGluIFJhanlhIFNhYmhhLiAgUmFqeWEgU2FiaGEgaGFzIG5vIHBvd2VyIGVpdGhlciB0byByZWplY3Qgb3IgYW1lbmQgYSBNb25leSAgQmlsbC4gSXQgY2FuIG9ubHkgbWFrZSByZWNvbW1lbmRhdGlvbnMgb24gdGhlIE1vbmV5IEJpbGwuICBSYWp5YSBTYWJoYSBjYW4gZGlzY3VzcyB0aGUgYnVkZ2V0IGJ1dCBjYW5ub3Qgdm90ZSBvbiB0aGUgIGRlbWFuZHMgZm9yIGdyYW50cyAoIHdoaWNoIGlzIHRoZSBleGNsdXNpdmUgcHJpdmlsYWdlIG9mIHRoZSAgTG9rLVNhYmhhLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 93,
      "question" : "When a bill is referred to a joint sitting of both the Houses of the Parliament, it has to be passed by  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTM=",
      "description" : "SW4gSW5kaWEsIGlmIGEgYmlsbCBoYXMgYmVlbiByZWplY3RlZCBieSBhbnkgaG91c2Ugb2YgdGhlICBwYXJsaWFtZW50IGFuZCBpZiBtb3JlIHRoYW4gc2l4IG1vbnRocyBoYXZlIGVsYXBzZWQsIHRoZSAgIEMgMjggIFByZXNpZGVudCBtYXkgc3VtbW9uIGEgam9pbnQgc2Vzc2lvbiBmb3IgcHVycG9zZSBvZiAgcGFzc2luZyB0aGUgYmlsbC4gVGhlIGJpbGwgaXMgcGFzc2VkIGJ5IGEgc2ltcGxlIG1ham9yaXR5IG9mIGEgIGpvaW50IHNpdHRpbmcuIEpvaW50IHNpdHRpbmcgaXMgYW4gZXh0cmEtb3JkaW5hcnkgbWFjaGluZXJ5ICBwcm92aWRlZCBieSB0aGUgY29uc3RpdHV0aW9uIHRvIHJlc29sdmUgYSBkZWFkbG9jayBiZXR3ZWVuICB0aGUgdHdvIGhvdXNlcyBvdmVyIHRoZSBwYXNzYWdlIG9mIGEgYmlsbC4gIElmIHRoZSBiaWxsIGluIGRpc3B1dGUgaXMgcGFzc2VkIGJ5IGEgbWFqb3JpdHkgb2YgdGhlIHRvdGFsICBudW1iZXIgb2YgbWVtYmVyIGJvdGggdGhlIGhvdXNlcyBwcmVzZW50IGFuZCB2b3RpbmcgaW4gIHRoZSBqb2ludCBzaXR0aW5nLCB0aGUgYmlsbCBpcyBkZWVtZWQgdG8gaGF2ZSBiZWVuIHBhc3NlZCBieSAgYm90aCB0aGUgaG91c2VzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " a simple majority of members present and voting ",
        "option2" : " three-fourths majority of members present and voting ",
        "option3" : " two-thirds majority of the Houses ",
        "option4" : " absolute majority of the Houses "
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements  1. The Executive Power of the Union of India is vested in the Prime Minister. 2. The Prime Minister is the ex officio Chairman of the Civil Services Board. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTQ=",
      "description" : "VGhlIEV4ZWN1dGl2ZSBwb3dlcnMgb2YgdGhlIFVuaW9uIG9mIEluZGlhIGlzIHZlc3RlZCAgaW4gdGhlIFByZXNpZGVudC4gVGhlIENhYmluZXQgU2VjcmV0YXJ5IChhbmQgbm90IHRoZSBQcmltZSAgTWluaXN0ZXIpIGlzIHRoZSBleC1vZmZpY2lvIGhlYWQgb2YgdGhlIENpdmlsIFNlcnZpY2VzIEJvYXJkLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 95,
      "question" : "Democracy's superior virtue lies in the fact that it calls into activity  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTU=",
      "description" : "TkVXIE5DRVJUIENsYXNzIDggQ2l2aWNzLCBDaGFwdGVyIDMsIHBhZ2UgMzIgIFRoZSB0YWtlLW9mZiBwb2ludCBmb3IgYSBkZW1vY3JhY3kgaXMgdGhlIGlkZWEgb2YgY29uc2VudCwgIGkuZS4gdGhlIGRlc2lyZSwgYXBwcm92YWwgYW5kIHBhcnRpY2lwYXRpb24gb2YgcGVvcGxlLiBJdCBpcyAgdGhlIGRlY2lzaW9uIG9mIHBlb3BsZSB0aGF0IGNyZWF0ZXMgYSBkZW1vY3JhdGljICBnb3Zlcm5tZW50IGFuZCBkZWNpZGVzIGFib3V0IGl0cyBmdW5jdGlvbmluZy4gIFNvLCBzaW5jZSBkZW1vY3JhY3kgcmVxdWlyZXMgdm90ZXJzJyBkZWNpc2lvbiBtYWtpbmctICBoZW5jZSBpbnRlbGxpZ2VuY2UgYW5kIGNoYXJhY3RlciBhcmUgY2FsbGVkIGluLiBoZW5jZSAgYW5zd2VyICJBIiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " the intelligence and character of ordinary men and  women. ",
        "option2" : " the methods for strengthening executive leadership. ",
        "option3" : " a superior individual with dynamism and vision. ",
        "option4" : " a band of dedicated party workers. "
      }
    },
    {
      "index" : 96,
      "question" : "One of the implications of equality in society is the absence of  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTY=",
      "description" : "TkVXIE5DRVJUIENsYXNzIDExLCBQb2xpdGljYWwgU2NpZW5jZSwgcGFnZSA0NS4gICgtKUZpcnN0IHN0ZXAgdG93YXJkcyBicmluZ2luZyBhYm91dCBlcXVhbGl0eSBpcyBvZiBjb3Vyc2UgIGVuZGluZyB0aGUgZm9ybWFsIHN5c3RlbSBvZiBpbmVxdWFsaXR5IGFuZCBwcml2aWxlZ2VzLiAgVGhlIGNhc3RlIHN5c3RlbSBpbiBJbmRpYSBwcmV2ZW50ZWQgcGVvcGxlIGZyb20gdGhlICAnbG93ZXInIGNhc3RlcyBmcm9tIGRvaW5nIGFueXRoaW5nIGV4Y2VwdCBtYW51YWwgbGFib3VyLiAgSW4gbWFueSBjb3VudHJpZXMgb25seSBwZW9wbGUgZnJvbSBzb21lIGZhbWlsaWVzIGNvdWxkICBvY2N1cHkgaGlnaCBwb3NpdGlvbnMuIEF0dGFpbm1lbnQgb2YgZXF1YWxpdHkgcmVxdWlyZXMgIHRoYXQgYWxsIHN1Y2ggcmVzdHJpY3Rpb25zIG9yIHByaXZpbGVnZXMgc2hvdWxkIGJlIGJyb3VnaHQgIHRvIGFuIGVuZC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Privileges ",
        "option2" : " Restraints ",
        "option3" : " Competition ",
        "option4" : " Ieology "
      }
    },
    {
      "index" : 97,
      "question" : "Which of the following are not necessarily the consequences of the proclamation of the President's rule in a State?  1. Dissolution of the State Legislative Assembly 2. Removal of the Council of Ministers in the State 3. Dissolution of the local bodies Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTc=",
      "description" : "TUlORCBJVDogeW91J3ZlIHRvIGZpbmQgdGhlIHdyb25nIHN0YXRlbWVudHMgaGVyZS0gIHRoZXkncmUgdGhlIHJpZ2h0IGFuc3dlcnMuICAoLSl3aGVuIHRoZSBQcmVzaWRlbnQncyBSdWxlIGlzIGltcG9zZWQgaW4gYSBzdGF0ZSwgdGhlICBQcmVzaWRlbnQgZGlzbWlzc2VzIHRoZSBzdGF0ZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBoZWFkZWQgIGJ5IHRoZSBjaGllZiBtaW5pc3Rlci4gVGhlIHN0YXRlIGdvdmVybm9yLCBvbiBiZWhhbGYgb2YgdGhlICBQcmVzaWRlbnQsIGNhcnJpZXMgb24gdGhlIHN0YXRlIGFkbWluaXN0cmF0aW9uIHdpdGggdGhlIGhlbHAgIG9mIHRoZSBjaGllZiBzZWNyZXRhcnkgb2YgdGhlIHN0YXRlIG9yIHRoZSBhZHZpc29ycyBhcHBvaW50ZWQgIGJ5IHRoZSBQcmVzaWRlbnQuIE1lYW5pbmcgIjIiIGlzIGRlZmluaXRlbHkgdGhlICBjb25zZXF1ZW5jZSBvZiBwcm9jbGFtYXRpb24uIEhlbmNlIGFsbCBvcHRpb25zIGludm9sdmluZyAgIjIiIGFyZSB3cm9uZy4gSGVuY2UgYnkgZWxpbWluYXRpb24gd2UgYXJlIGxlZnQgd2l0aCAgYW5zd2VyICJCIjogMSBhbmQgMyBvbmx5LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 98,
      "question" : "Which one of the following is not a feature of Indian federalism?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTg=",
      "description" : "SW5kaWFuIGZlZGVyYXRpb24gaXMgbm90IHRoZSByZXN1bHQgb2YgYW4gYWdyZWVtZW50ICBhbW9uZyB0aGUgc3RhdGVzIHVubGlrZSB0aGUgQW1lcmljYW4gZmVkZXJhdGlvbi4gU28sICJEIiAgaXMgbm90IHRoZSBmZWF0dXJlIG9mIEluZGlhbiBmZWRlcmFsaXNtLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " There is an independent judiciary in India. ",
        "option2" : " Powers have been clearly divided between the Centre  and the States. ",
        "option3" : " The federating units have been given unequal  representation in the Rajya Sabha. ",
        "option4" : " It is the result of an agreement among the federating "
      }
    },
    {
      "index" : 99,
      "question" : "Local self-government can be best explained as an exercise in  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8OTk=",
      "description" : "QmFsd2FudCBSYWkgRyBNZWh0YSBDb21taXR0ZWUgc3VibWl0dGVkIGl0cyByZXBvcnQgIGluIE5vdmVtYmVyIDE5NTcgYW5kIHJlY29tbWVuZGVkIHRoZSBlc3RhYmxpc2htZW50IG9mICB0aGUgc2NoZW1lIG9mICdkZW1vY3JhdGljIGRlY2VudHJhbGlzYXRpb24nLCB3aGljaCAgdWx0aW1hdGVseSBjYW1lIHRvIGJlIGtub3duIGFzIFBhbmNoYXlhdGkgUmFqLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Federalism ",
        "option2" : " Democratic decentralization ",
        "option3" : " Administrative delegation ",
        "option4" : " Direct democracy "
      }
    },
    {
      "index" : 100,
      "question" : "The main advantage of the parliamentary form of government is that  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTAw",
      "description" : "TmV3IE5DRVJULCBTdGQuIDExLCBJbnRyb2R1Y3Rpb24gdG8gSW5kaWFuICBDb25zdGl0dXRpb24sIHBhZ2UgOTE6IFBhcmxpYW1lbnRhcnkgc3lzdGVtIGlzIGFsc28ga25vd24gIGFzIENhYmluZXQgR292ZXJubWVudC4gSXQgcHJvdmlkZXMgZm9yIGNvbGxlY3RpdmUgIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBleGVjdXRpdmUgdG8gdGhlIGxlZ2lzbGF0dXJlLkhlbmNlICBhbnN3ZXIgIkMiLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " the executive and legislature work independently. ",
        "option2" : " it provides continuity of policy and is more efficient. ",
        "option3" : " the executive remains responsible to the legislature. ",
        "option4" : " the head of the government cannot be changed "
      }
    },
    {
      "index" : 101,
      "question" : "Out of the following statements, choose the one that brings out the principle underlying the Cabinet form of Government:  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTAx",
      "description" : "TkNFUlQgQ2xhc3MgOTogRGVtb2NyYXRpYyBQb2xpdGllcyBwYWdlIDg3OiAiU2luY2UgIGl0IGlzIG5vdCBwcmFjdGljYWwgZm9yIGFsbCBtaW5pc3RlcnMgdG8gbWVldCByZWd1bGFybHkgYW5kICBkaXNjdXNzIGV2ZXJ5dGhpbmcsIChoZW5jZSkgdGhlIGRlY2lzaW9ucyBhcmUgdGFrZW4gaW4gIENhYmluZXQgbWVldGluZ3MuIFRoYXQgaXMgd2h5IHBhcmxpYW1lbnRhcnkgZGVtb2NyYWN5ICBpbiBtb3N0IGNvdW50cmllcyBpcyBvZnRlbiBrbm93biBhcyB0aGUgQ2FiaW5ldCBmcm9tIG9mICBnb3Zlcm5tZW50LiIgVGhlcmVmb3JlLCBzb21lIGV4cGVydCBmZWx0IHRoYXQgY2FiaW5ldCBmcm9tICBvZiBHb3Zlcm5tZW50IGhlbHBzIGluIHdvcmsgZGlzdHJpYnV0aW9uIGFuZCB0aGVyZWJ5ICBzcGVlZGluZyB1cCBlZmZpY2llbmN5IHNvIEIgaXMgdGhlIHJpZ2h0IGFuc3dlci4gSG93ZXZlciwgIG90aGVyIGV4cGVydHMgd2VudCBieSB0aGUgaW50ZXJwcmV0YXRpb24gZ2l2ZW4gaW4gTS4gIExheG1pa2FudGgncyBib29rIG9uIEluZGlhbiBQb2xpdHk6ICJQYXJsaWFtZW50YXJ5IHN5c3RlbSAgaXMgYWxzbyBrbm93biBhcyBjYWJpbmV0IEdvdmVybm1lbnQuIEl0IHByb3ZpZGVzIGZvciAgY29sbGVjdGl2ZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgZXhlY3V0aXZlIHRvIHRoZSBsZWdpc2xhdHVyZS4iICBTbyBzaG91bGQgYmUgdGhlIGFuc3dlci4gVVBTQyBoYXMga2VwdCAnQycgYXMgdGhlIG9mZmljaWFsICBhbnN3ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " An arrangement for minimizing the criticism against  the Government whose responsibilities are complex  and hard to carry out to the satisfaction of all. ",
        "option2" : " A mechanism for speeding up the activities of the  Government whose responsibilities are increasing day  by day. ",
        "option3" : " A mechanism of parliamentary democracy for  ensuring collective responsibility of the Government  to the people. ",
        "option4" : " A device for strengthening the hands of the head of "
      }
    },
    {
      "index" : 102,
      "question" : "The Parliament of India exercises control over the functions of the Council of Ministers through.             1. Adjournment motion 2. Question hour 3. Supplementary questions Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTAy",
      "description" : "VGhlIFBhcmxpYW1lbnQgZXhlcmNpc2VzIGNvbnRyb2wgb3ZlciB0aGUgbWluaXN0ZXJzICB0aHJvdWdoIHZhcmlvdXMgZGV2aWNlcyBsaWtlIHF1ZXN0aW9uIGhvdXIsIGRpc2N1c3Npb25zLCAgYWRqb3Vybm1lbnQgbW90aW9uLCBubyBjb25maWRlbmNlIG1vdGlvbiwgZXRjLiBhbmQgIFN1cHBsZW1lbnRhcnkgcXVlc3Rpb25zIGNhbiBiZSBhc2tlZCBkdXJpbmcgdGhlICBxdWVzdGlvbiBob3VyLlRoZXJlZm9yZSwgYWxsIHRocmVlIGFyZSBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 103,
      "question" : "With reference to the Parliament of India, consider the following statements:  1. A private member's bill is a bill presented by a Member of Parliament who is not elected but only nominated by the President of India. 2. Recently, a private member's bill has been passed in the Parliament of India for the first time in its history. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTAz",
      "description" : "UHJpdmF0ZSBtZW1iZXIncyBiaWxsIGFzIGEgYmlsbCBpbnRyb2R1Y2VkIGJ5IGFueSAgbWVtYmVyIG9mIHRoZSBwYXJsaWFtZW50IHdobydzIG5vdCBhIG1pbmlzdGVyLiBIZW5jZSBmaXJzdCAgc3RhdGVtZW50IGlzIHdyb25nLiAgKC0pVGhlIEluZGlhbiBFeHByZXNzIHJlcG9ydCBpbiAyMDE2IHNheXMgb25seSAxNCBwcml2YXRlICBtZW1iZXJzIGJpbGwgaGF2ZSBiZWVuIHBhc3NlZCBzaW5jZSAxOTUyLiBTbyBzdGF0ZW1lbnQgIDIgaXMgYWxzbyB3cm9uZy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 104,
      "question" : "For election to the Lok Sabha, a nomination paper can be filed by  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA0",
      "description" : "Rm9yIGVsZWN0aW9uIHRvIHRoZSBMb2sgU2FiaGEsIGEgbm9taW5hdGlvbiBwYXBlciAgY2FuIGJlIGZpbGVkIGJ5IGFueSBjaXRpemVuIG9mIEluZGlhIHdob3NlIG5hbWUgYXBwZWFycyAgaW4gdGhlIGVsZWN0b3JhbCByb2xsIG9mIGEgY29uc3RpdHVlbmN5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " anyone residing in India. ",
        "option2" : " a resident of the constituency from which the election  is to be contested. ",
        "option3" : " any citizen of India whose name appears in the  electoral roll of a constituency. ",
        "option4" : " any citizen of India. "
      }
    },
    {
      "index" : 105,
      "question" : "Consider the following statements:  1. In the election for Lok Sabha or State Assembly, the winning candidate must get at least 50 per cent of the votes polled, to be declared elected. 2. According to the provisions laid down in the Constitution of India, in Lok Sabha, the Speaker's post goes to the majority party and the Deputy Speaker's to the Opposition. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA1",
      "description" : "TmV3IE5DRVJULCBTdGQuIDExLCBJbnRyb2R1Y3Rpb24gdG8gSW5kaWFuICBDb25zdGl0dXRpb24gQ2hhcHRlciAzOiBFbGVjdGlvbiBhbmQgUmVwcmVzZW50YXRpb24sIFBhZ2UgIDU3OiBJbmRpYSBoYXMgZmlyc3QgcGFzdCB0aGUgcG9zdCBzeXN0ZW0gd2hlcmVpbiBhIGNhbmRpZGF0ZSAgd2hvIHdpbnMgdGhlIGVsZWN0aW9uIG1heSBub3QgKG5lZWQgdG8pIGdldCBtYWpvcml0eSAgKDUwJSsxKSB2b3Rlcy4gU3RhdGVtZW50ICMxIGlzIHdyb25nLiAgVXB0byB0aGUgMTB0aCBMb2sgU2FiaGEsIGJvdGggdGhlIFNwZWFrZXIgYW5kIHRoZSAgRGVwdXR5IFNwZWFrZXIgd2VyZSB1c3VhbGx5IGZyb20gdGhlIHJ1bGluZyBwYXJ0eS4gU2luY2UgIHRoZSAxMXRoIExvayBTYWJoYSwgdGhlcmUgaGFzIGJlZW4gYSBjb25zZW5zdXMgdGhhdCB0aGUgIFNwZWFrZXIgY29tZXMgZnJvbSB0aGUgcnVsaW5nIHBhcnR5IChvciBydWxpbmcgYWxsaWFuY2UpICBhbmQgIHRoZSAgcG9zdCAgb2YgIERlcHV0eSAgU3BlYWtlciAgZ29lcyAgdG8gIHRoZSAgbWFpbiAgb3Bwb3NpdGlvbiBwYXJ0eS5NZWFuaW5nIGl0J3MgYW4gJ2luZm9ybWFsIGNvbnNlbnN1cycgIGFtb25nIHBvbGl0aWNhbCBwYXJ0aWVzLCBhbmQgbm90IENvbnN0aXR1dGlvbmFsIHByb3Zpc2lvbi4gIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyB3cm9uZy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 106,
      "question" : "Right  to  vote  and  to  be  elected  in  India  is  a  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA2",
      "description" : "TmV3IE5DRVJUIENsYXNzIDk6IERlbW9jcmF0aWMgUG9saXRpY3MsIFBhZ2UgMTA5OiAgUmlnaHQgdG8gdm90ZSBpbiBlbGVjdGlvbnMgaXMgYW4gaW1wb3J0YW50IGNvbnN0aXR1dGlvbmFsICByaWdodC4gIE5ldyBOQ0VSVCwgU3RkLiAxMSwgSW50cm9kdWN0aW9uIHRvIEluZGlhbiBDb25zdGl0dXRpb24sICBQYWdlIDY2IG9uZSBvZiB0aGUgaW1wb3J0YW50IGRlY2lzaW9ucyBvZiB0aGUgZnJhbWVycyBvZiAgSW5kaWEgQ29uc3RpdHV0aW9uIHdhcyB0byBndWFyYW50ZWUgZXZlcnkgYWR1bHQgY2l0aXplbiBpbiAgSW5kaWEsIHRoZSByaWdodCB0byB2b3RlLiBbQXJ0aWNsZSAzMjZdICBDb21iaW5pbmcgdGhlIGludGVycHJldGF0aW9uIG9mIGJvdGggdGV4dGJvb2tzLCAiQyIgaXMgdGhlICBhbnN3ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Fundamental Right ",
        "option2" : " Natural Right ",
        "option3" : " Constitutional Right ",
        "option4" : " Legal Right "
      }
    },
    {
      "index" : 107,
      "question" : "Consider the following statements:  1. The Election Commission of India is a five-member body. 2. Union Ministry of Home Affairs decides the election schedule for the conduct of both general elections and by-elections.  C 22 3. Election Commission resolves the disputes relating to splits/mergers of recognized political parties. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA3",
      "description" : "RWxlY3Rpb24gQ29tbWlzc2lvbiBoYXMgdGhyZWUgZWxlY3Rpb24gIENvbW1pc3Npb25lcnMuICBFbGVjdGlvbiBDb21taXNzaW9uIGRlY2lkZXMgdGhlIGVsZWN0aW9uIHNjaGVkdWxlIGZvciAgdGhlIGNvbmR1Y3Qgb2YgYm90aCBnZW5lcmFsIGVsZWN0aW9ucyBhbmQgYnllLWVsZWN0aW9ucy4gIEl0IGFsc28gZGVjaWRlcyB0aGUgZGlzcHV0ZXMgcmVsYXRpbmcgdG8gc3BsaXRzL21lcmdlcnMgb2YgIHJlY29nbml6ZWQgcG9saXRpY2FsIHBhcnRpZXMuICBIZW5jZSBhbnN3ZXIgIkQiIG9ubHkgMy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 108,
      "question" : "Consider the following statements :  1. In the first Lok Sabha, the single largest party in the opposition was the Swatantra Party. 2. In the Lok Sabha, a \"Leader of the Opposition\" was recognized for the first time in 1969. 3. In the Lok Sabha, if a party does not have a minimum of 75 members, its leader cannot be recognized as the Leader of the Opposition. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA4",
      "description" : "MiBvbmx5ICDCtyBUaGUgcmVzdWx0cyBvZiB0aGUgZmlyc3QgZ2VuZXJhbCBlbGVjdGlvbiBkaWQgbm90ICBzdXJwcmlzZSBhbnlvbmUuLi5Db25ncmVzcyBwYXJ0eSB3b24gMzY0IG9mIHRoZSA0ODkgIHNlYXRzICBpbiAgdGhlICBmaXJzdCAgTG9rICBTYWJoYSAgYW5kICBmaW5pc2hlZCAgd2F5ICBhaGVhZCAgb2YgIGFueSBvdGhlciBjaGFsbGVuZ2VyLiBUaGUgQ29tbXVuaXN0IFBhcnR5IG9mIEluZGlhIHRoYXQgIGNhbWUgbmV4dCBpbiB0ZXJtcyBvZiBzZWF0cyB3b24gb25seSAxNiBzZWF0cy4gW05DRVJUICBDbGFzczEyOiBQb2xpdGljcyBpbiBJbmRpYSBzaW5jZSBJbmRlcGVuZGVuY2UsIHAzMF0uIFNvLCAgc3RhdGVtZW50IzEgaXMgd3JvbmcgIMK3IEluIHRoZSByZW1haW5pbmcgb3B0aW9ucyBiIGFuZCBjLCBib3RoIGNvbnRhaW4gIHN0YXRlbWVudCMyLCBzbyBhcyBzdWNoIHdlJ3ZlIHRvIGFjY2VwdCBpdCBhcyB0cnVlLCBhbmQgbm8gIG5lZWQgdG8gd2FzdGUgdGltZSBmaW5kaW5nIHByb29mcywgTm9uZXRoZWxlc3MsIHRvIHNhdGlhdGUgIHRoZSBjdXJpb3NpdHk6IEl0IHdhcyBSYW0gU3ViaGFnIFNpbmdoLSB3aG8gYmVjYW1lIHRoZSAgZmlyc3QgbGVhZGVyIG9mIG9wcG9zaXRpb24gaW4gTG9rIFNhYmhhIGluIDE5NjkuIFJlZjogSW5kaWFuICBFeHByZXNzICBFICBCICBEICBfOCAgMzQgIDIgIEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCkgQyAyOSAgwrcgSW4gZWFjaCBIb3VzZSBvZiBQYXJsaWFtZW50LCB0aGVyZSBpcyB0aGUgJ0xlYWRlciBvZiB0aGUgIE9wcG9zaXRpb24nLiBUaGUgbGVhZGVyIG9mIHRoZSBsYXJnZXN0IE9wcG9zaXRpb24gcGFydHkgaGF2aW5nICBub3QgbGVzcyB0aGFuIG9uZS10ZW50aCBzZWF0cyBvZiB0aGUgdG90YWwgc3RyZW5ndGggb2YgdGhlICBIb3VzZSBpcyByZWNvZ25pemVkIGFzIHRoZSBsZWFkZXIgb2YgdGhlIE9wcG9zaXRpb24gaW4gdGhhdCAgSG91c2UuIG1heGltdW0gc3RyZW5ndGggb2YgdGhlIExvayBTYWJoYSBpcyBmaXhlZCBhdCA1NTIgIHNvIG1pbmltdW0gMTAlIGRvZXNuJ3QgdHJhbnNsYXRlIHRvIDc1IGluIGFueSBjYXNlLiBIZW5jZSAgc3RhdGVtZW50IzMgaXMgd3JvbmcsIGJ5IGVsaW1pbmF0aW9uLCB3ZSBnZXQgQW5zd2VyIChiKSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1  and 3  only ",
        "option2" : " 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 109,
      "question" : "With reference to the Parliament of India, which of the following Parliamentary Committees scrutinizes and reports to the House whether the powers to make regulations, rules, sub-rules, by-laws, et(c) conferred by the Constitution or delegated by the Parliament are being properly exercised by the Executive within the scope of such delegation ?(Pre18 Set-D)  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTA5",
      "description" : "IMK3IENvbW1pdHRlZSBvbiBnb3Zlcm5tZW50IGFzc3VyYW5jZXMtIGNoZWNrcyB0aGUgIGFzc3VyYW5jZXMsIHByb21pc2VzIGFuZCB1bmRlcnRha2luZ3MgZ2l2ZW4gYnkgbWluaXN0ZXJzICBmcm9tIHRpbWUgdG8gdGltZSBvbiB0aGUgZmxvb3Igb2YgdGhlIEhvdXNlIGFuZCByZXBvcnRzICBvbiB0aGUgZXh0ZW50IHRvIHdoaWNoIHRoZXkgaGF2ZSBiZWVuIGNhcnJpZWQgdGhyb3VnaC4gIEluIHRoZSBMb2sgU2FiaGEsIGl0IGNvbnNpc3RzIG9mIDE1IG1lbWJlcnMgYW5kIGluIHRoZSAgUmFqeWEgU2FiaGEsIGl0IGNvbnNpc3RzIG9mIDEwIG1lbWJlcnMuIEl0IHdhcyBjb25zdGl0dXRlZCAgaW4gMTk1My4gIMK3IENvbW1pdHRlZSBvbiBTdWJvcmRpbmF0ZSBsZWdpc2xhdGlvbiBleGFtaW5lcyBhbmQgIHJlcG9ydHMgdG8gdGhlIEhvdXNlIHdoZXRoZXIgdGhlIHBvd2VycyB0byBtYWtlICByZWd1bGF0aW9ucywgcnVsZXMsIHN1Yi1ydWxlcyBhbmQgYnllLWxhd3MgZGVsZWdhdGVkIGJ5ICB0aGUgUGFybGlhbWVudCBvciBjb25mZXJyZWQgYnkgdGhlIENvbnN0aXR1dGlvbiB0byB0aGUgIEV4ZWN1dGl2ZSBhcmUgYmVpbmcgcHJvcGVybHkgZXhlcmNpc2VkIGJ5IGl0LiBJbiBib3RoIHRoZSAgSG91c2VzLCB0aGUgY29tbWl0dGVlIGNvbnNpc3RzIG9mIDE1IG1lbWJlcnMuIEl0IHdhcyAgY29uc3RpdHV0ZWQgaW4gMTk1My4gIMK3IFJ1bGVzIGNvbW1pdHRlZSBjb25zaWRlcnMgdGhlIG1hdHRlcnMgb2YgcHJvY2VkdXJlICBhbmQgY29uZHVjdCBvZiBidXNpbmVzcyBpbiB0aGUgSG91c2UgYW5kIHJlY29tbWVuZHMgIG5lY2Vzc2FyeSBhbWVuZG1lbnRzIG9yIGFkZGl0aW9ucyB0byB0aGUgcnVsZXMgb2YgdGhlICBIb3VzZS4gVGhlIExvayBTYWJoYSBjb21taXR0ZWUgY29uc2lzdHMgb2YgMTUgbWVtYmVycyAgaW5jbHVkaW5nIHRoZSBTcGVha2VyIGFzIGl0cyBleC1vZmZpY2lvIGNoYWlybWFuLiBJbiB0aGUgUmFqeWEgIFNhYmhhLCBpdCBjb25zaXN0cyBvZiAxNiBtZW1iZXJzIGluY2x1ZGluZyB0aGUgQ2hhaXJtYW4gYXMgIGl0cyBleC1vZmZpY2lvIGNoYWlybWFuICDCtyBCdXNpbmVzcyBhZHZpc29yeSBjb21taXR0ZWUgcmVndWxhdGVzIHRoZSBwcm9ncmFtbWUgIGFuZCB0aW1lIHRhYmxlIG9mIHRoZSBIb3VzZS4gSXQgYWxsb2NhdGVzIHRpbWUgZm9yIHRoZSAgdHJhbnNhY3Rpb24gb2YgbGVnaXNsYXRpdmUgYW5kIG90aGVyIGJ1c2luZXNzIGJyb3VnaHQgIGJlZm9yZSB0aGUgSG91c2UgYnkgdGhlIGdvdmVybm1lbnQuIFRoZSBMb2sgU2FiaGEgIGNvbW1pdHRlZSBjb25zaXN0cyBvZiAxNSBtZW1iZXJzIGluY2x1ZGluZyB0aGUgU3BlYWtlciAgYXMgaXRzIGNoYWlybWFuLiBJbiB0aGUgUmFqeWEgU2FiaGEsIGl0IGhhcyAxMSBtZW1iZXJzICBpbmNsdWRpbmcgdGhlIENoYWlybWFuIGFzIGl0cyBleC1vZmZpY2lvIGNoYWlybWFuLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Committee on Government Assurances ",
        "option2" : " Committee on Subordinate Legislation ",
        "option3" : " Rules Committee ",
        "option4" : " Business Advisory Committee "
      }
    },
    {
      "index" : 110,
      "question" : "Regarding Money Bill, which of the following statements is not correct?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTEw",
      "description" : "IMK3IEFydGljbGUgMTEwKDEpKEEpOiBhICBCaWxsICBzaGFsbCBiZSAgZGVlbWVkICB0byAgYmUgIGEgIE1vbmV5ICBCaWxsICBpZiBpdCBjb250YWlucyBwcm92aXNpb24gcmVsYXRlZCB0byByZWxhdGluZyAgdG8gaW1wb3NpdGlvbiwgYWJvbGl0aW9uLCByZW1pc3Npb24sIGFsdGVyYXRpb24gb3IgcmVndWxhdGlvbiAgb2YgYW55IHRheC4gIMK3IEFydGljbGUgMTEwKDEpKGMpOiB0aGUgY3VzdG9keSBvZiB0aGUgQ29uc29saWRhdGVkIEZ1bmQgIG9yIHRoZSBDb250aW5nZW5jeSBGdW5kIG9mIEluZGlhLCB0aGUgcGF5bWVudCBvZiBtb25leXMgIGludG8gb3IgdGhlIHdpdGhkcmF3YWwgb2YgbW9uZXlzIGZyb20gYW55IHN1Y2ggRnVuZC4gIMK3IEFydGljbGUgMTEwKDEpKGcpICBhbnkgIG1hdHRlciAgaW5jaWRlbnRhbCAgdG8gIGFueSAgb2YgIHRoZSAgbWF0dGVycyBzcGVjaWZpZWQgIGluICBzdWItY2xhdXNlcyAgKGEpICB0byAgKGYpIGRlcGVuZGluZyBvbiAgaG93IHlvdSBpbnRlcnByZXQgdGhlc2UgcHJvdmlzaW9ucywgaXQgaXMgZGlmZmljdWx0IHRvIG91dGxpbmUgIGFueSBvZiB0aGUgZ2l2ZW4gc3RhdGVtZW50IGFzIGEgd3Jvbmcgc3RhdGVtZW50LiBCdXQsIFVQU0MgIGhhcyBrZXB0ICdDJyBhcyB0aGUgb2ZmaWNpYWwgYW5zd2VyLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " A bill shall be deemed to be a Money Bill if it contains  only provisions relating to imposition, abolition,  remission, alteration or regulation of any tax. ",
        "option2" : " A Money Bill has provisions for the custody of the  Consolidated Fund of India or the Contingency Fund  of Indi(a) ",
        "option3" : " A Money Bill is concerned with the appropriation of  moneys out of the Contingency Fund of Indi(a) ",
        "option4" : " A Money Bill deals with the regulation of borrowing "
      }
    },
    {
      "index" : 111,
      "question" : "With reference to the election of the President of India, consider the following statements:  1. The value of the vote of each MLA varies from State to State. 2. The value of the vote of MPs of the Lok Sabha is more than the value of the vote of MPs of the Rajya Sabh(a) Which of the statements given above is/are Correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTEx",
      "description" : "U3RhdGVtZW50IDEtIENvcnJlY3Q6IFZhbHVlIG9mIDEgTUxBJ3Mgdm90ZSBpcyAgYmFzZWQgb24gdG90YWwgcG9wdWxhdGlvbiBvZiBzdGF0ZSB0byBiZSBkaXZpZGVkIGJ5IHRoZSAgdG90YWwgTUxBcy4gSGVuY2UgaXQgb3VnaHQgdG8gdmFyeSBmcm9tIHN0YXRlIHRvIHN0YXRlLiAgU3RhdGVtZW50IDItIHZhZ3VlbHkgd29yZGVkLCBhbmQgb3BlbiB0byBtdWx0aXBsZSAgaW50ZXJwcmV0YXRpb246IEludGVycHJldGF0aW9uIDIoaSk6IFdoaWxlIHRoZSB2YWx1ZSBvZiBhbiAgTUxBJ3Mgdm90ZSBkZXBlbmRzIG9uIHRoZSBwb3B1bGF0aW9uIG9mIHRoZSBzdGF0ZSBoZSAgb3Igc2hlIGJlbG9uZ3MgdG8sIHRoZSB2YWx1ZSBvZiBhbiBNUCdzIHZvdGUgcmVtYWlucyB0aGUgIHNhbWUgYXQgNzA4IHNvIHN0YXRlbWVudCMyIGlzIHdyb25nLiBIb3dldmVyIGlmIHlvdSAgaW50ZXJwcmV0IGl0IGFzICdjb2xsZWN0aXZlJyB2YWx1ZSB0aGVuIExTIGhhcyBtb3JlIHNlYXRzICB0aGFuIFJTLCB0aGUgKGNvbGxlY3RpdmUpIHZhbHVlIG9mIHZvdGUgb2YgTVBzIG9mIExTID4gUlMgIHRoZW4gIzIgc2hvdWxkIGJlIHJpZ2h0LiBBY2NvcmRpbmdseSwgZXhwZXJ0cyB3ZXJlIGRpdmlkZWQgIG92ZXIgIGFuc3dlciAgQSAgb3IgIEMuICBVUFNDICBoYXMgIGFsc28gIGtlcHQgICdBJyAgYXMgIHRoZSAgb2ZmaWNpYWwgYW5zd2VyLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 or 2 "
      }
    },
    {
      "index" : 112,
      "question" : "Consider the following statements:  1. The Speaker of the Legislative Assembly shall vacate his/her office if he/she ceases to be a member of  the Assembly. 2. Whenever the Legislative Assembly is dissolved, the Speaker shall vacate his/her immediately. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTEy",
      "description" : "IMK3IFRoZSBTcGVha2VyIGlzIGVsZWN0ZWQgYnkgdGhlIGFzc2VtYmx5IGl0c2VsZiBmcm9tICBhbW9uZ3N0IGl0cyBtZW1iZXJzLiBVc3VhbGx5LCB0aGUgU3BlYWtlciByZW1haW5zIGluICBvZmZpY2UgZHVyaW5nIHRoZSBsaWZlIG9mIHRoZSBhc3NlbWJseS4gSG93ZXZlciwgaGUgdmFjYXRlcyAgaGlzIG9mZmljZSBlYXJsaWVyIGluIGFueSBvZiB0aGUgZm9sbG93aW5nIHRocmVlIGNhc2VzOiAxLiBpZiAgaGUgIGNlYXNlcyAgdG8gIGJlICBhICBtZW1iZXIgIG9mICB0aGUgIGFzc2VtYmx5Li4uLi4gIFNvICBzdGF0ZW1lbnQjMSBpcyByaWdodC4gIMK3IENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgQXJ0IDE3OTogIi4uLlByb3ZpZGVkIGZ1cnRoZXIgIHRoYXQsIHdoZW5ldmVyIHRoZSBBc3NlbWJseSBpcyBkaXNzb2x2ZWQsIHRoZSBTcGVha2VyICBzaGFsbCBub3QgdmFjYXRlIGhpcyBvZmZpY2UgdW50aWwgaW1tZWRpYXRlbHkgYmVmb3JlIHRoZSAgZmlyc3QgbWVldGluZyBvZiB0aGUgQXNzZW1ibHkgYWZ0ZXIgdGhlIGRpc3NvbHV0aW9uLiIgU28sICBzdGF0ZW1lbnQjMiBpcyB3cm9uZy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 113,
      "question" : "Consider the following statements:  1. No criminal proceedings shall be instituted against the Governor of a State any court during his term of office. 2. The emoluments and allowances of the Governor of a State shall not be diminished during his term of office. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTEz",
      "description" : "IMK3IEdvdmVybm9yIGVuam95cyBwZXJzb25hbCBpbW11bml0eSBmcm9tIGxlZ2FsIGxpYWJpbGl0eSAgZm9yIGhpcyBvZmZpY2lhbCBhY3RzLiBEdXJpbmcgaGlzIHRlcm0gb2Ygb2ZmaWNlLCBoZSBpcyBpbW11bmUgIGZyb20gYW55IGNyaW1pbmFsIHByb2NlZWRpbmdzLCBldmVuIGluIHJlc3BlY3Qgb2YgaGlzICBwZXJzb25hbCBhY3RzLiBIZSBjYW5ub3QgYmUgYXJyZXN0ZWQgb3IgaW1wcmlzb25lKGQpICDCtyBIaXMgZW1vbHVtZW50cyBhbmQgYWxsb3dhbmNlcyBjYW5ub3QgYmUgIGRpbWluaXNoZWQgZHVyaW5nIGhpcyB0ZXJtIG9mIG9mZmljZS4gVGh1cyBib3RoIHN0YXRlbWVudHMgIGFyZSByaWdodC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 114,
      "question" : "If the President of India exercises his power as provided under Article 356 of the Constitution in respect of a particular State, then  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTE0",
      "description" : "VGhlIFByZXNpZGVudCdzIFJ1bGUgY2FuIGJlIHByb2NsYWltZWQgdW5kZXIgQXJ0aWNsZSAgMzU2Li4uIEhlIGNhbiBkZWNsYXJlIHRoYXQgdGhlIHBvd2VycyBvZiB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgIGFyZSB0byBiZSBleGVyY2lzZWQgYnkgdGhlIFBhcmxpYW1lbnQuIFNvICJCIiBpcyB0aGUgcmlnaHQgIGFuc3dlci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " the Assembly of the State is automatically dissolve",
        "option2" : " the powers of the Legislature of that State shall be  exercisable by or under the authority of the Parliament. ",
        "option3" : " Article 19 is suspended in that State. ",
        "option4" : " "
      }
    },
    {
      "index" : 115,
      "question" : "The Ninth Schedule was introduced in the Constitution of India during the prime membership of  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTE1",
      "description" : "IMK3ICJBcnRpY2xlIDMxQiBhbG9uZyB3aXRoIHRoZSBOaW50aCBTY2hlZHVsZSB3YXMgIGFkZGVkIGJ5IHRoZSAxc3QgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCBvZiAxOTUxICB0byByZWR1Y2UgdGhlIHNjb3BlIG9mIEp1ZGljaWFsIHJldmlldyBpbiB0aGUgbWF0dGVycyBvZiAgbGFuZCByZWZvcm1zIGFuZCBaYW1pbmRhcmktQWJvbGl0aW9uLiBPcmlnaW5hbGx5IChpbiAxOTUxKSwgIHRoZSBOaW50aCBTY2hlZHVsZSBjb250YWluZWQgb25seSAxMyBhY3RzIGFuZCByZWd1bGF0aW9ucyAgYnV0IGF0IHByZXNlbnQgKGluIDIwMTYpIHRoZWlyIG51bWJlciBpcyAyODIuIiAgwrcgU28sIGlmIGl0IHdhcyBtYWRlIHRoZSA1MHMsIHRoZW4gaXQgbXVzdCBiZSB0aGUgUHJpbWUgIE1pbmlzdGVyIE5laHJ1LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Jawaharlal Nehru ",
        "option2" : " Lal Bahadur Shastri ",
        "option3" : " Indira Gandhi ",
        "option4" : " Morarji Desai "
      }
    },
    {
      "index" : 116,
      "question" : "Consider the following statements:  1. The Parliament (Prevention of Disqualification) Act, 1959 exempts several posts from disqualification on the grounds of 'Office of Profit'. 2. The above-mentioned Act was amended five times. 3. The term 'Office of Profit' is well-defined in the Constitution of India. Which of the following statements given above is/are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTE2",
      "description" : "SWYgJ09mZmljZSBvZiBQcm9maXQnIHdhcyB3ZWxsIGRlZmluZWQgaW4gQ29uc3RpdHV0aW9uLCAgdGhlbiB0aGVyZSB3b3VsZG4ndCBoYXZlIGJlZW4gY29udHJvdmVyc2llcyByZWxhdGVkIHRvICBBQVAtTUxBcycgZGlzcXVhbGlmaWNhdGlvbiAoMjAxOC1KYW4pLCBhbmQgS2Vqcml3YWwgJiAgQ28uIHdvdWxkbid0IGhhdmUgYmVlbiBydW5uaW5nIGZyb20gcGlsbGFyIHRvIHBvc3QgYmV0d2VlbiAgRUMgYW5kIFNDIHRvIHByZXZlbnQgdGhlaXIgZGlzcXVhbGlmaWNhdGlvbi4gU28sICMzIGlzICB3cm9uZywgYW5kIGJ5IGVsaW1pbmF0aW9uIHdlIGFyZSBsZWZ0IHdpdGggQW5zd2VyIEE6MSAgYW5kIDIgb25seS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 117,
      "question" : "With reference to the legislative Assembly of a state in India, consider the following Statements:  1. The Governor makes a customary address to Members of the house at the commencement of the first session of the year. 2. When  a  State  Legislature  does  not  have  a  rule  on the particular matter, it follows the lok Sabha rule on that matter. ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTE3",
      "description" : "IMK3IEdvdmVybm9yIGNhbiBhZGRyZXNzIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBhdCB0aGUgIGNvbW1lbmNlbWVudCBvZiB0aGUgZmlyc3Qgc2Vzc2lvbiBhZnRlciBlYWNoIGdlbmVyYWwgIGVsZWN0aW9uIGFuZCB0aGUgZmlyc3Qgc2Vzc2lvbiBvZiBlYWNoIHllYXIuIFNvICMxIGlzIHJpZ2h0LiAgwrcgQXJ0aWNsZSAyMDggb2YgdGhlIENvbnN0aXR1dGlvbjogQSBIb3VzZSBvZiB0aGUgIExlZ2lzbGF0dXJlIG9mIGEgU3RhdGUgbWF5IG1ha2UgcnVsZXMgZm9yIHJlZ3VsYXRpbmcgc3ViamVjdCAgdG8gdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBDb25zdGl0dXRpb24sIGl0cyBwcm9jZWR1cmUgYW5kICB0aGUgY29uZHVjdCBvZiBpdHMgYnVzaW5lc3MuIFRodXMsIGl0J3Mgbm90IG1hbmRhdGVkIGluIHRoZSAgQ29uc3RpdHV0aW9uIGZvciB0aGUgU3RhdGUgbGVnaXNsYXR1cmUgdG8gKEFMV0FZUykgZm9sbG93ICAvIGNvcHkgdGhlIHJ1bGVzIG9mIExvayBTYWJoYS4gU28sICMyIGlzIHdyb25nLiBUaHVzLCBhbnN3ZXIgIEE6IG9ubHkgMS4gIMK3IENvdW50ZXJ2aWV3OiBBcyBwZXIgSW5kaWFuRXhwcmVzcyBBcnRpY2xlIGluIDIwMTYtICBTZXB0ZW1iZXIsIHNlY29uZCBzdGF0ZW1lbnQgaXMgY29ycmVjdCBzbyBhbnN3ZXIgc2hvdWxkICBiZSBDOiBCb3RoIDEgYW5kIDIuICDCtyBGaW5hbCB2ZXJkaWN0OiBVUFNDIG9mZmljaWFsIEFuc3dlcmtleSBzYXlzICdDOiBib3RoICBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0Jy4gIDExOCAoYykgQ2VudHJlLVN0YXRlIHJlbGF0aW9uczogIMK3IFdoaWxlIHNlbGVjdGluZyBHb3Zlcm5vcnMsIHRoZSBDZW50cmFsIEdvdmVybm1lbnQgICBDIDMwICBzaG91bGQgYWRvcHQgdGhlIGZvbGxvd2luZyBzdHJpY3QgZ3VpZGVsaW5lcyBhcyAgcmVjb21tZW5kZWQgaW4gdGhlIFNhcmthcmlhIENvbW1pc3Npb24gcmVwb3J0OiBIZSAgc2hvdWxkIGJlIGEgZGV0YWNoZWQgZmlndXJlIGFuZCBub3QgdG9vIGludGltYXRlbHkgIGNvbm5lY3RlZCB3aXRoIHRoZSBsb2NhbCBwb2xpdGljcyBvZiB0aGUgc3RhdGVzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 119,
      "question" : "In India, which of the following review the independent regulators in sectors like telecommunications, insurance, electricity etc.?    1. Ad Hoc Committees set up by the Parliament. 2. Parliamentary Department Related Standing Committees 3. Finance Commission 4. Financial Sector Legislative Reforms Commission 5. NITI Aayog Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTE5",
      "description" : "IMK3IEZpbmFuY2lhbCBTZWN0b3IgTGVnaXNsYXRpdmUgUmVmb3JtcyBDb21taXNzaW9uIHdhcyAgc2V0dXAgZm9yIGEgbGltaXRlZCB0aW1lIHBlcmlvZCB1bmRlciBKdXN0aWNlIEIuTi4gIFNyaWtyaXNobmEncyBjaGFpcm1hbnNoaXAuIEFuZCBpdHMgbWFuZGF0ZSBkaWQgbm90IGluY2x1ZGUgIHJldmlld2luZyB0aGUgZWxlY3RyaWNpdHkgcmVndWxhdG9yLiAjNCBpcyB3cm9uZy4gU2ltaWxhciAgcmVhc29uIGVsaW1pbmF0ZXMgRmluYW5jZSBDb21taXNzaW9uICgjMykgd2hpY2ggaXMgc2V0dXAgIHBlcmlvZGljYWxseSBmb3IgdGhlIHRheCBkaXN0cmlidXRpb24gYmV0d2VlbiBVbmlvbiBhbmQgIFN0YXRlcy4gVGh1cyBCIGFuZCBDIGFyZSBlbGltaW5hdGVkLiAgwrcgTklUSSBBeW9nIGlzIGEgdGhpbmsgdGFuayBhbmQgcG9saWN5IGFkdmlzb3IgZm9yIHRoZSAgR292ZXJubWVudC4gWWVzLCBpdCByZXZpZXdzIGRldmVsb3BtZW50IHdvcmsgaW4gdGhlICBBc3BpcmF0aW9uYWwgZGlzdHJpY3RzIGFuZCBTREcgaW1wbGVtZW50YXRpb24gYWNyb3NzIEluZGlhICBidXQgcmV2aWV3aW5nIGluZGVwZW5kZW50IHJlZ3VsYXRvcnMgaXMgbm90IHVuZGVyIGl0cyAgcHVydmlldy4gU28sICM1IGlzIHdyb25nLiBUaGlzIGVsaW1pbmF0ZXMgRC4gVGh1cyBieSAgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggQW5zd2VyICBBOiBvbmx5IDEgYW5kIDIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 ,  3 and 4 ",
        "option3" : " 3, 4 and 5 ",
        "option4" : " 2 an 5 "
      }
    },
    {
      "index" : 120,
      "question" : "In the context of polity, which one of the following would you accept as the most appropriate definition of liberty?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTIw",
      "description" : "IMK3IEhpc3RvcmljYWxseSBzcGVha2luZywgdGhlIHRlcm0gbGliZXJ0eSB3YXMgaW5pdGlhbGx5ICBkZWZpbmVkIGFzIGFic2VuY2Ugb2YgYWxsIHJlc3RyYWludHMgb24gYW4gaW5kaXZpZHVhbC4gIFRoaXMgIGlzICBrbm93biBhcyAgdGhlICBuZWdhdGl2ZSAgY29uY2VwdCAgb2YgIGxpYmVydHkuICBFYXJseSAgbGliZXJhbGlzbSBjaGFtcGlvbmVkIG5lZ2F0aXZlIGxpYmVydHkuIEpvaG4gU3R1YXJ0IE1pbGwsICB0aGUgbmluZXRlZW50aCBjZW50dXJ5IEVuZ2xpc2ggcG9saXRpY2FsIHBoaWxvc29waGVyLCAgZGVzY3JpYmVkLCAnUmVzdHJhaW50IGFzIGFuIGV2aWwnLiBTbywgKGQpIGlzIGFwcHJvcHJpYXRlLiAgwrcgSG93ZXZlciwgYWZ0ZXIgdGhlIGV4YW1pbmF0aW9uLCBtYW55IG9mIHRoZSBjb2FjaGluZyAgY2xhc3NlcyBmZWx0IHRoYXQgYW5zd2VyIHNob3VsZCBiZSAnYicgYmFzZWQgb24gYW5vdGhlciAgaW50ZXJwcmV0YXRpb24gYnkgRC5ELkJhc3UuICBCdXQgYXMgcGVyIHRoZSBvZmZpY2lhbCBVUFNDIEFuc3dlcmtleSwgY29ycmVjdCBhbnN3ZXIgaXMgICdkJy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " Protection against the tyranny of political rulers ",
        "option2" : " Absence of restraint ",
        "option3" : " Opportunity to do whatever one likes ",
        "option4" : " Opportunity to develop oneself fully "
      }
    },
    {
      "index" : 121,
      "question" : "In the context of India, which one of the following is the characteristic appropriate for bureaucracy?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTIx",
      "description" : "QnVyZWF1Y3JhdHMgYXJlIGFwcG9pbnRlZCBieSB0aGUgUHJlc2lkZW50IC8gR292ZXJub3IgIG9mIEluZGlhIGZvciBpbXBsZW1lbnRpbmcgdGhlIHBvbGljaWVzIG9mIHRoZSBnb3Zlcm5tZW50IG9mICB0aGUgZGF5LiBPdGhlciBvcHRpb25zIGFyZSBsZXNzIHN1aXRhYmxlLiAgMTIyLiAoYSxkKSAod2h5IHR3byBhbnN3ZXJzIHBvc3NpYmxlKSAgQXMgcGVyIHRoZSBSZXByZXNlbnRhdGlvbiBvZiBQZW9wbGUgQWN0LCAxOTUxLCBhIHBlcnNvbiAgY29udmljdGVkIG9mIGFueSBvZmZlbmNlIGFuZCBzZW50ZW5jZWQgdG8gaW1wcmlzb25tZW50ICBmb3Igbm90IGxlc3MgdGhhbiB0d28geWVhcnMgc2hhbGwgYmUgZGlzcXVhbGlmaWVkIGZyb20gdGhlICBkYXRlIG9mIHN1Y2ggY29udmljdGlvbiBhbmQgc2hhbGwgY29udGludWUgdG8gYmUgZGlzcXVhbGlmaWVkICBmb3IgYSBmdXJ0aGVyIHBlcmlvZCBvZiBzaXggeWVhcnMgc2luY2UgaGlzIHJlbGVhc2UuICBUaGVyZSBpcyAgbm8gY2xhdXNlIG9mICdwZXJtYW5lbnQgZGlzcXVhbGlmaWNhdGlvbicgaW4gdGhlICBSZXByZXNlbnRhdGlvbiBvZiBQZW9wbGVzIEFjdCwgMTk1MS4gSGVuY2UsIDJuZCBzdGF0ZW1lbnQgIGlzIGluY29ycmVjdC4gU28sIGFuc3dlciBjb3VsZCBiZSAoYSkgb3IgKGQpLiBJdCBhbGwgZGVwZW5kcyBvbiAgdGhlIHZhbGlkaXR5IG9mIHRoZSBmaXJzdCBzdGF0ZW1lbnQjMS4gIEFjY29yZGluZyB0byBzb21lIGV4cGVydHMsICMxIGlzIHJpZ2h0IGJlY2F1c2UgIMK3IEEgY2l0aXplbiBiZWNvbWVzIGVsaWdpYmxlIHRvIHZvdGUgdXBvbiBhdHRhaW5pbmcgdGhlICBhZ2Ugb2YgMTguICDCtyBXaGVyZWFzIHRvIGJlY29tZSBhIG1lbWJlciBvZiB0aGUgVmlkaGFuIFNhYmhhLCAgaGUgbXVzdCBiZSBtaW5pbXVtIDI1IHllYXJzIG9sZC4gIMK3IEFydGljbGUgMTY0KDQpIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIMKuIEEgTWluaXN0ZXIgIHdobyBmb3IgYW55IHBlcmlvZCBvZiBzaXggY29uc2VjdXRpdmUgbW9udGhzIGlzIG5vdCBhICBtZW1iZXIgb2YgdGhlIExlZ2lzbGF0dXJlIG9mIHRoZSBTdGF0ZSBzaGFsbCBhdCB0aGUgZXhwaXJhdGlvbiAgb2YgdGhhdCBwZXJpb2QgY2Vhc2UgdG8gYmUgYSBNaW5pc3Rlci4gIMK3IFNvLCBhY2NvcmRpbmdseSwgc29tZSBleHBlcnRzIGludGVycHJldCB0aGF0IGV2ZW4gMTggIG9yIDE5IHllYXIgb2xkIHBlcnNvbiAoV2hvIGlzIGVsaWdpYmxlIHRvIHZvdGUpLCBjYW4gYmVjb21lICBtaW5pc3RlciBmb3IgYXRsZWFzdCA2IG1vbnRocy4gU28jMSBpcyByaWdodC4gIMK3IE90aGVyIGV4cGVydHMgZGlmZmVyLCB0aGF0ICdzaW5jZSBDb25zdGl0dXRpb24gaXRzZWxmIGhhcyAgbm90IHNwZWNpZmljYWxseSBzYWlkIHRoaXMsIHNvIHN0YXRlbWVudCMxIGlzIHdyb25nJywgc28gIGFuc3dlciBpcyAnZCcuICDCtyBGaW5hbCBqdWRnZTogd2UndmUgdG8gd2FpdCBmb3IgdGhlIG9mZmljaWFsIGFuc3dlcmtleSAgb2YgVVBTQyAgMTIzLiAoYSxjKSAgwrcgQXJ0aWNsZSA4NSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBlbXBvd2VycyB0aGUgIFByZXNpZGVudCB0byBzdW1tb24gZWFjaCBob3VzZSBvZiB0aGUgUGFybGlhbWVudCBhdCBzdWNoICB0aW1lIGFuZCBwbGFjZSBhcyBoZSB0aGlua3MgZml0LiAgKEhlbmNlLCAxc3Qgc3RhdGVtZW50IGlzICBjb3JyZWN0KSAgwrcgVGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBkb2VzIG5vdCBtZW50aW9uIHRoZSAgYW55dGhpbmcgYWJvdXQgdGhlIG51bWJlciBvZiBQYXJsaWFtZW50YXJ5IHNlc3Npb25zIGluIGEgIHllYXIuIChIZW5jZSwgMm5kIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QpICDCtyBUaGVyZSBpcyBzb21lIGFtYmlndWl0eSBpbiB0aGUgM3JkIHN0YXRlbWVudC4gIMK3IElmIHRoZSBVUFNDIGludGVycHJldHMgaXQgaW4gYSBuYXJyb3cgYW5kIGxpdGVyYWwgc2Vuc2UsICB0aGVuIGV4YWN0IG51bWJlciBvZiBkYXlzIGZvciB3aGljaCB0aGUgUGFybGlhbWVudCBpcyAgc3VwcG9zZWQgdG8gbWVldCBpbiBhIHllYXIgaXMgbm90IG1lbnRpb25lZCBpbiB0aGUgIENvbnN0aXR1dGlvbiBhbmQgaGVuY2UsIDNyZCBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gIMK3IEhvd2V2ZXIsIGlmIHdlIGludGVycHJldCB0aGUgcXVlc3Rpb24gaW4gYSBicm9hZGVyICBtYW5uZXIsIHRoZW4gQXJ0aWNsZSA4NSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBtZW50aW9ucyAgdGhhdCA2IG1vbnRocyBzaGFsbCBub3QgaW50ZXJ2ZW5lIHRoZSAyIHNlc3Npb25zIG9mIHRoZSAgUGFybGlhbWVudC4gSW50ZXJwcmV0aW5nIHRoaXMgY2xhdXNlLCBpdCBlc3NlbnRpYWxseSBtZWFucyAgdGhhdCBQYXJsaWFtZW50IGhhcyB0byBtZWV0IGF0IGxlYXN0IGZvciAyIGRheXMgaW4gYSB5ZWFyIHRvICBwcmV2ZW50IHRoZSB2aW9sYXRpb24gb2YgQXJ0aWNsZSA4NS4gSW4gc3VjaCBhIHNjZW5hcmlvLCAzcmQgIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " An agency widening the scope of parliamentary  democracy ",
        "option2" : " An agency for strengthening the structure of  federalism ",
        "option3" : " An agency for facilitating political stability and  economic growth ",
        "option4" : " An agency for the implementation of public policy "
      }
    },
    {
      "index" : 124,
      "question" : "Rajyasabha has equal powers with Loksabha in  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTI0",
      "description" : "ICgtKUFydGljbGUgMzEyOiBXaXRoIHJlZ2FyZHMgdG8gdGhlIGNyZWF0aW9uIG9mIEFsbCBJbmRpYSAgU2VydmljZXMsIFJhanlhIFNhYmhhIGhhcyBzcGVjaWFsIHBvd2VycyBzdWNoIHRoYXQgaWYgUmFqeWEgIFNhYmhhIGlzIHBhc3NpbmcgYSByZXNvbHV0aW9uIGJ5IGEgbWFqb3JpdHkgb2YgMi8zcmQgb2YgdGhlICBtZW1iZXJzIHByZXNlbnQgYW5kIHZvdGluZywgUGFybGlhbWVudCBtYXksIGJ5IGxhdywgY3JlYXRlICBvbmUgb3IgbW9yZSBBbGwgSW5kaWEgU2VydmljZXMgaW4gbmF0aW9uYWwgaW50ZXJlc3QuIFNvIEEgaXMgIHdyb25nLiAgwrcgQXJ0aWNsZSA3NSgzKSBob2xkIHRoZSBnb3Zlcm5tZW50IGNvbGxlY3RpdmVseSAgcmVzcG9uc2libGUgdG8gdGhlIExvayBTYWJoYS4gSGVuY2UsIGluIHRoaXMgcmVnYXJkcywgTG9rICBTYWJoYSBoYXMgZ3JlYXRlciBwb3dlciBhcyBjb21wYXJlZCB0byBSYWp5YSBTYWJoYS4gIFNvICBDIGlzIHdyb25nLiAgwrcgQ3V0IE1vdGlvbnMsIHdoaWNoIGFyZSBtZWFudCB0byByZWR1Y2UgdGhlIGFtb3VudCAgYWxsb2NhdGVkIHRvIHRoZSBtaW5pc3RyaWVzIGluIHRoZSBkZW1hbmQgZm9yIGdyYW50cywgY2FuIGJlICBtYWRlIG9ubHkgaW4gTG9rIFNhYmhhLiBSYWp5YSBTYWJoYSBjYW4gb25seSBtYWtlICByZWNvbW1lbmRhdGlvbnMgd2l0aCByZWdhcmRzIHRvIHRoZSBjdXQgbW90aW9uLiAgU28gZCBpcyAgd3JvbmcuIEFydGljbGUgMzY4IG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uLCBhIGJpbGwgdG8gYW1lbmQgIHRoZSBDb25zdGl0dXRpb24gY2FuIGJlIGludHJvZHVjZWQgaW4gZWl0aGVyIGhvdXNlIG9mIHRoZSAgUGFybGlhbWVudCBhbmQgYm90aCB0aGUgaG91c2VzIGhhdmUgZXF1YWwgcG93ZXJzIGluICByZXNwZWN0IHRvIHRoZSBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQmlsbC4gIFNvIGIgaXMgcmlnaHQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " The matter of creating new all India services ",
        "option2" : " Amending the Constitution ",
        "option3" : " The removal of the government ",
        "option4" : " Making cut motions "
      }
    },
    {
      "index" : 125,
      "question" : "A constitutional government by definition is a  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCl8MTI1",
      "description" : "SW4gSW5kaWEsIHRoZSBjb25zdGl0dXRpb25hbCBnb3Zlcm5tZW50IGlzIGEgbGltaXRlZCAgZ292ZXJubWVudC4gVGhlIHBvd2VycyBvZiB0aGUgZ292ZXJubWVudCBhcmUgbGltaXRlZCBieSAgbWVhbnMgb2YgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBlbnNocmluZWQgaW4gdGhlIFBhcnQtSUlJICBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiwgdGhhdCBhcmUgZXNzZW50aWFsbHkgZ2l2ZW4gdG8gdXMgIGFnYWluc3QgdGhlIHN0YXRlIGFjdGlvbnMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEluZGlhbiBQb2xpdHkgJiBHb3Zlcm5hbmNlfEdvdmVybm1lbnQgJiBBZG1pbmlzdHJhdGlvbiAoSW5kaWEgJiBXb3JsZCk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Government & Administration (India & World)",
      "questionType" : "normal",
      "subject" : "Indian Polity & Governance",
      "questionOptions" : {
        "option1" : " government by legislature ",
        "option2" : " popular government ",
        "option3" : " Multi party government ",
        "option4" : " Limited government "
      }
    }
  ],
  "subject" : "Indian Polity & Governance",
  "topic" : "Government & Administration (India & World)",
  "year" : "0"
}
