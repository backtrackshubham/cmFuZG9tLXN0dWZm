{
  "testId" : "general-science-&-ecology|science-&-technology",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to Indian satellites and their launchers, consider the following statements:  1. All the INSAT series of satellites were launched abroad. 2. PSLVs were used to launch IRS-series of satellites. 3. India used the indigenously built cryogenic engines foer the first time for powering the third stage of GSLV. 4. GSAT,  launched  in  the  year  2001,  has  payloads  to demonstrate digital broadcasts and internet services. Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDE=",
      "description" : "QWxsIHRoZSBzdGF0ZW1lbnRzIGFib3V0IHRoZSBJbmRpYW4gc2F0ZWxsaXRlIGdpdmVuIGluICB0aGUgcXVlc3Rpb24gYXJlIGNvcnJlY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 2,
      "question" : "Assertion (A) : Artificial satellites are always launched from the earth in the eastward direction. Reason (R) : The earth rotates from west to east and so the satellite attains the escape velocity.  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDI=",
      "description" : "VGhlIHN1cmZhY2UgdmVsb2NpdHkgb2Ygcm90YXRpb24gdmFyaWVzIGZyb20gcG9pbnQgdG8gIHBvaW50IG9uIHRoZSBFYXJ0aC4gSXQgaXMgYWJvdXQgMTYwMCBrbSBwZXIgaG91ciBvciBhYm91dCA0NjAgIG1ldGVycyBpbiBhIHNlY29uZCBuZWFyIHRoZSBlcXVhdG9yLiBUaGUgdmVsb2NpdHkgZ3JhZHVhbGx5ICByZWR1Y2VzIGFzIHdlIG1vdmUgdG8gdGhlIHBvbGVzIGFuZCBpdCBpcyBwcmFjdGljYWxseSB6ZXJvICB0aGVyZS4gQSBzYXRlbGxpdGUgbGF1bmNoZWQgZnJvbSB0aGUgc2l0ZXMgbmVhciB0aGUgZXF1YXRvciAgdG93YXJkcyB0aGUgZWFzdCBkaXJlY3Rpb24gd2lsbCBnZXQgYW4gaW5pdGlhbCBib29zdCBlcXVhbCB0byAgdGhlIHZlbG9jaXR5IG9mIEVhcnRoIHN1cmZhY2UuIFRoaXMgaXMgc2ltaWxhciB0byBhbiBhdGhsZXRlICBjaXJjbGluZyByb3VuZCBhbmQgcm91bmQgYmVmb3JlIHRocm93aW5nIGEgZGlzY3VzIG9yIGEgc2hvdCAgcHV0LiBUaGUgIGluaXRpYWwgYm9vc3QgaGVscHMgaW4gY3V0dGluZyBkb3duIHRoZSBjb3N0IG9mICByb2NrZXRzIHVzZWQgdG8gbGF1bmNoIHRoZSBzYXRlbGxpdGVzLiBUaGlzIGlzIHRoZSBtYWpvciByZWFzb24gIGZvciBsYXVuY2hpbmcgc2F0ZWxsaXRlcyBpbiB0aGUgZWFzdCB3YXJkIGRpcmVjdGlvbi4gQnV0IHRoaXMgIGJlbmVmaXQgY2FuIGJlIHRha2VuIG9ubHkgZm9yIHN1Y2ggc2F0ZWxsaXRlcyB3aGljaCBhcmUgcGxhY2VkICBpbiBnZW8tc3RhdGlvbmFyeSBvcmJpdCBvciB3aGljaCBjaXJjbGUgdGhlIEVhcnRoIHBhcmFsbGVsIHRvICB0aGUgZXF1YXRvci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is NOT a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements:  1. India launched its first full-fledged meteorological satellite (METSAT) in September, 2002 2. For the first time, the space vehicle PSLV C-4 carried a payload of more than 1000 kg into a geosynchronous orbit Which of these statement is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDM=",
      "description" : "TUVUU0FUIHdhcyB0aGUgZmlyc3QgSW5kaWFuIChJU1JPKSwgTWV0ZXJvbG9naWNhbCAgZ2Vvc3RhdGlvbmFyeSBzYXRlbGxpdGUgZGVzaWduZWQgdG8gc2ltdWx0YW5lb3VzbHkgb2J0YWluICBhdG1vc3BoZXJpYyBjbG91ZCBjb3Zlciwgd2F0ZXIgdmFwb3VyIGFuZCB0ZW1wZXJhdHVyZSBkYXRhLiAgUFNMVi1DNCBjYXJyaWVkIGEgcGF5bG9hZCBvZiAxMDYwIGtnIGluIHRvIGEgIGdlb3N5bmNocm9ub3VzIG9yYml0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 4,
      "question" : "NASA's Deep Impact space mission was employed to take detailed pictures of which comet nucleus?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ=",
      "description" : "RGVlcCBJbXBhY3Qgd2FzIGEgTkFTQSBzcGFjZSBwcm9iZSBsYXVuY2hlZCBmcm9tICBDYXBlIENhbmF2ZXJhbCBBaXIgRm9yY2UgU3RhdGlvbiAgb24gSmFudWFyeSAxMiwgMjAwNS4gSXQgIHdhcyBkZXNpZ25lZCB0byBzdHVkeSB0aGUgaW50ZXJpb3IgY29tcG9zaXRpb24gb2YgdGhlIGNvbWV0ICBUZW1wZWwgMS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Halley's Comet ",
        "option2" : " Hale-Bopp ",
        "option3" : " Hyakutake ",
        "option4" : " Tempel 1 "
      }
    },
    {
      "index" : 5,
      "question" : "Which one of the following pairs is not correctly matched?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDU=",
      "description" : "QXRsYW50aXMgIHdhcyBhIFNwYWNlIFNodXR0bGUgb3JiaXRlciBvZiBOYXRpb25hbCAgQWVyb25hdXRpY3MgYW5kIFNwYWNlIEFkbWluaXN0cmF0aW9uIChOQVNBKS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Cosmic Background Explorer (COBE) : Satellite Programme ",
        "option2" : " Falcon: Under - sea cable system ",
        "option3" : " Discovery: Space shuttle ",
        "option4" : " Atlantis: Space station "
      }
    },
    {
      "index" : 6,
      "question" : "Selene-1, the lunar orbiter mission belongs to which one of the followings?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDY=",
      "description" : "TWl0c3ViaXNoaSBIZWF2eSBJbmR1c3RyaWVzLCBMdGQuIGFuZCB0aGUgSmFwYW4gIEFlcm9zcGFjZSBFeHBsb3JhdGlvbiBBZ2VuY3kgKEpBWEEpIGxhdW5jaGVkIHRoZSBMdW5hciAgT3JiaXQgRXhwbG9yZXIgIktBR1VZQSIgKFNFTEVORSkgYXQgb24gU2VwdGVtYmVyIDE0LCAgMjAwNywgZnJvbSB0aGUgVGFuZWdhc2hpbWEgU3BhY2UgQ2VudGVyLiBUaGUgbWFqb3IgIG9iamVjdGl2ZXMgb2YgdGhlIG1pc3Npb24gYXJlIHRvIHVuZGVyc3RhbmQgdGhlIE1vb24ncyAgb3JpZ2luIGFuZCBldm9sdXRpb24gYW5kIHRvIG9ic2VydmUgdGhlIE1vb24gaW4gdmFyaW91cyAgd2F5cyBpbiBvcmRlciB0byB1dGlsaXplIGl0IGluIHRoZSBmdXR1cmUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " China ",
        "option2" : " European Union ",
        "option3" : " Japan ",
        "option4" : " USA "
      }
    },
    {
      "index" : 7,
      "question" : "ISRO successfully conducted a rocket test using cryogenic engines in the year 2007. Where is the teststand used for the purpose, located?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc=",
      "description" : "SXQgaXMgbG9jYXRlZCBpbiBNYWhlbmRyYWdpcmksIFRhbWlsIE5hZHUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Balasore ",
        "option2" : " Thiruvananthapuram ",
        "option3" : " Mahendragiri ",
        "option4" : " Karwar "
      }
    },
    {
      "index" : 8,
      "question" : "Which one of the following is a spacecraft?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDg=",
      "description" : "Q2Fzc2luaSBpcyBhbiB1bm1hbm5lZCBzcGFjZWNyYWZ0IHNlbnQgdG8gdGhlIHBsYW5ldCAgU2F0dXJuLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Apophis ",
        "option2" : " Cassini ",
        "option3" : " Spitzer ",
        "option4" : " TechSar "
      }
    },
    {
      "index" : 9,
      "question" : "What is the purpose of the US Space Agency's Themis Mission, which was recently in the news?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDk=",
      "description" : "VGhlIFRoZW1pcyBtaXNzaW9uLCBjb21wcmlzaW5nIGZpdmUgaWRlbnRpY2FsIHByb2JlcywgIGFpbXMgdG8gZ2FpbiBuZXcgaW5zaWdodHMgaW50byB0aGUgY29sb3VyZnVsIGRpc3BsYXlzIGluICBoaWdoLWxhdGl0dWRlIHNraWVzLiAgSW4gcGFydGljdWxhciwgc2NpZW50aXN0cyB3YW50IHRvIHVuZGVyc3RhbmQgd2hhdCB0cmlnZ2VycyBhICBzdWRkZW4gYnJpZ2h0ZW5pbmcgb2YgdGhlIGxpZ2h0cy4gQSBVUyBzcGFjZSBhZ2VuY3kgIChOQVNBKSBoYXMgYmxhc3RlZCBvZmYgZnJvbSBDYXBlIENhbmF2ZXJhbCBpbiBGbG9yaWRhLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " To study the possibility of life on Mars ",
        "option2" : " To study the satellites of Saturn ",
        "option3" : " To study the colourful of display of high latitude skies ",
        "option4" : " To build a space laboratory to study the stellar "
      }
    },
    {
      "index" : 10,
      "question" : "In the context of space technology, what is 'Bhuvan', recently in the news?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDEw",
      "description" : "Qmh1dmFuLCBpcyBhIHNvZnR3YXJlIGFwcGxpY2F0aW9uIHdoaWNoIGFsbG93cyB1c2VycyAgdG8gZXhwbG9yZSBhIDJELzNEIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBzdXJmYWNlIG9mIHRoZSBFYXJ0aC4gIElTUk8gbGF1bmNoZWQgdGhlIGJldGEgdmVyc2lvbiBvZiBpdHMgd2ViLWJhc2VkIEdJUyB0b29sLCAgQmh1dmFuLCBvbiBBdWd1c3QgMTIsIDIwMDkuIEJodXZhbiBvZmZlcnMgZGV0YWlsZWQgaW1hZ2VyeSAgb2YgSW5kaWFuIGxvY2F0aW9ucyBjb21wYXJlZCB0byBvdGhlciBWaXJ0dWFsIEdsb2JlIFNvZnR3YXJlLCAgd2l0aCBzcGF0aWFsIHJlc29sdXRpb25zIHJhbmdpbmcgdXAgdG8gMSBtZXRyZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " A mini satellite launched by ISRO for promoting the  distance education in India ",
        "option2" : " The name given to the next Moon Impact Probe, for  Chandrayan-II ",
        "option3" : " A geoportal of ISRO with 3 D imaging capabilities of  India ",
        "option4" : " A space telescope developed by India "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements:  The satellite Oceansat-2 launched by India helps in 1. estimating the water vapour content in the atmosphere. 2. predicting the onset of monsoons. 3. monitoring the pollution of coastal waters. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDEx",
      "description" : "T2NlYW5zYXQtMiBjb250aW51ZXMgd2l0aCB0aGUgc2VydmljZSBvZiBvY2VhbnNhdC0xLiAgVGhlIG1haW4gb2JqZWN0aXZlcyBvZiBvY2VhbnNhdC0yIGFyZSB0byBzdHVkeSBzdXJmYWNlIHdpbmRzICBhbmQgb2NlYW4gc3VyZmFjZSBzdHJhdGEsIG9ic2VydmF0aW9uIG9mIGNobG9yb3BoeWxsICBjb25jZW50cmF0aW9uLCBtb25pdG9yaW5nIG9mIHBoeXRvcGxhbmt0aW9uIGJsb29tcywgc3R1ZHkgIG9mIGF0bW9zcGhlcmljIGFlcm9zb2wgYW5kIHN1c3BlbmRlZCBzZWRpbWVudHMgaW4gd2F0aC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to technologies for solar power production, consider the following statements :  1. 'Photovoltaics' is a technology that generates electricity  by direct conversion of light into electricity, while 'Solar Thermal' is a technology  that utilizes the Sun's rays to generate heat which  is  further  used  in electricity generation process. 2. Photovoltaics generates Alternating Current (AC), while Solar Thermal generates Direct Current (DC). 3. India has manufacturing base for Solar Thermal technology, but not for Photovoltaics. Which  of  the  statements  given above is/are correct? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXwxMg==",
      "description" : "UGhvdG92b2x0YWljcycgaXMgYSB0ZWNobm9sb2d5IHRoYXQgZ2VuZXJhdGVzIGVsZWN0cmljaXR5ICBieSBkaXJlY3QgY29udmVyc2lvbiBvZiBsaWdodCBpbnRvIGVsZWN0cmljaXR5LCB3aGlsZSAnU29sYXIgIFRoZXJtYWwnIGlzIGEgdGVjaG5vbG9neSB0aGF0IHV0aWxpemVzIHRoZSBTdW4ncyByYXlzIHRvICBnZW5lcmF0ZSBoZWF0IHdoaWNoIGlzIGZ1cnRoZXIgdXNlZCBpbiBlbGVjdHJpY2l0eSBnZW5lcmF0aW9uICBwcm9jZXNzLiBCb3RoIFBob3Rvdm9sdGFpYyBjZWxscyBhbmQgc29sYXIgdGhlcm1hbCAgZ2VuZXJhdGUgIGRpcmVjdCBjdXJyZW50IChEQykuIEluZGlhIGhhcyBhIG1hbnVmYWN0dXJpbmcgYmFzZSBmb3IgYm90aC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following pairs is/are correctly matched?  Spacecraft Purpose 1. Cassini-Huygens : Orbiting the Venus and transmitting data to the Earth 2. Messenger : Mapping and investigating the Mercury 3. Voyager 1 and 2 : Exploring the outer solar system Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXwxMw==",
      "description" : "Q2Fzc2luaS1IdXlnZW5zIGlzIGFuIHVubWFubmVkIHNwYWNlY3JhZnQgc2VudCB0byAgdGhlIHBsYW5ldCBTYXR1cm4uIFRoZXJlZm9yZSwgb3B0aW9uIDEgaXMgd3JvbmcsIHRoaXMgIGVsaW1pbmF0ZXMgb3B0aW9uIChhKSwgKGMpIGFuZCAoZCkuIE5vdyB3ZSBhcmUgbGVmdCB3aXRoIGZpbmFsICBhbnN3ZXIgQiBvbmx5IDIgYW5kIDMuIE1FU1NFTkdFUiAgaXMgYSByb2JvdGljIE5BU0EgIHNwYWNlY3JhZnQgb3JiaXRpbmcgdGhlIHBsYW5ldCBNZXJjdXJ5LiBWb3lhZ2VyIDEgIChTZXB0ZW1iZXIgMTk3NykgYW5kIHZveWFnZXIgMiAoQXVnIDE5NzcpIHdlcmUgbGF1bmNoZWQgIHRvIHN0dWR5IHRoZSBvdXRlciBTb2xhciBTeXN0ZW0uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to 'Astrosat', the astronomical observatory launched by India, which of the following statements is/are correct?  1. Other than USA and Russia, India is the only country to have launched a similar observatory into space. 2. Astrosat is a 2000 kg satellite placed in an orbit at 1650 km above the surface of the Earth. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTQ=",
      "description" : "KGkpICBJbmRpYSBoYXMgYmVjb21lIG9ubHkgdGhlIGZpZnRoIGNvdW50cnkgYWZ0ZXIgdGhlICBVUywgUnVzc2lhLCBFdXJvcGlhbiBVbmlvbiBhbmQgSmFwYW4sIHRvIGhhdmUgYW4gZXllICBzY2FubmluZyB0aGUgZXhvdGljIGRlcHRocyBvZiB0aGUgdW5pdmVyc2UgYWZ0ZXIgdGhlICBBU1RST1NBVCwgdGhlIEluZGlhbiBTcGFjZSBSZXNlYXJjaCBPcmdhbmlzYXRpb24ncyAgbXVsdGktd2F2ZWxlbmd0aCBzcGFjZSBvYnNlcnZhdG9yeSwgd2FzIHN1Y2Nlc3NmdWxseSAgcGxhY2VkIGluIG9yYml0LiAgKGlpKSBBc3Ryb3NhdCB3ZWlnaHMgMTUxMyBrZ3MuIEhlbmNlIDJuZCBzdGF0ZW1lbnQgYWxzbyB3cm9uZy4gIFJlZjogdGhlSGluZHUvIFNlcHRlbWJlciAyOCwgMjAxNTsgaHR0cDovLyAgd3d3LnRoZWhpbmR1LmNvbS9zY2ktdGVjaC9zY2llbmNlL2lzcm8tbGF1bmNoZXMtICBhc3Ryb3NhdC1maXJzdC1zcGFjZS1vYnNlcnZhdG9yeS9hcnRpY2xlNzY5NzcwNy5lY2Ug",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following statements:  The Mangalyaan launched by ISRO 1. is also called the Mars Orbiter Mission 2. made India the second country to have a spacecraft orbit the Mars after USA 3. made India the only country to be successful in making its spacecraft orbit the Mars in its very first attempt Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTU=",
      "description" : "KGkpIFRoZSBNYXJzIE9yYml0ZXIgTWlzc2lvbiAoTU9NKSwgYWxzbyBjYWxsZWQgIE1hbmdhbHlhYW4uIEl0IGlzIEluZGlhJ3MgZmlyc3QgaW50ZXJwbGFuZXRhcnkgbWlzc2lvbiBhbmQgIElTUk8gaGFzIGJlY29tZSB0aGUgZm91cnRoIHNwYWNlIGFnZW5jeSB0byByZWFjaCBNYXJzLCAgYWZ0ZXIgdGhlIFNvdmlldCBzcGFjZSBwcm9ncmFtLCBOQVNBLCBhbmQgdGhlIEV1cm9wZWFuICBTcGFjZSBBZ2VuY3kuIEl0IGlzIHRoZSBmaXJzdCBBc2lhbiBuYXRpb24gdG8gcmVhY2ggTWFycyAgb3JiaXQsIGFuZCB0aGUgZmlyc3QgbmF0aW9uIGluIHRoZSB3b3JsZCB0byBkbyBzbyBpbiBpdHMgZmlyc3QgIGF0dGVtcHQuICAoaWkpIFN0YXRlbWVudCAxIGFuZCAzIGFyZSByaWdodC4gQXBhcnQgZnJvbSBJbmRpYSBhbmQgVVNBLCAgUnVzc2lhIGFuZCBFdXJvcGVhbiBzcGFjZSBhZ2VuY3kgYWxzbyBoYXZlIGl0LiBFdXJvcGVhbiAgU3BhY2UgQWdlbmN5J3MgTWFycyBFeHByZXNzIGhhcyB0d28gY29tcG9uZW50cyAxKSAgTWFycyBPcmJpdGVyIDIpIEJlYWdsZSAyIExhbmRlci4gSGVuY2UgMm5kIHN0YXRlbWVudCBpcyAgd3JvbmcuIEhlbmNlIGJ5IGVsaW1pbmF0aW9uIHdlIGFyZSBsZWZ0IHdpdGggY2hvaWNlIChjKS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 16,
      "question" : "'Project Loon', sometimes seen in the news, is related to (a) waste management technology                        the context of  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTY=",
      "description" : "KGkpIFByb2plY3QgbG9vbiBpcyBhIG5ldHdvcmsgIG9mICBiYWxsb29ucyB0cmF2ZWxsaW5nIG9uICB0aGUgZWRnZSBvZiBzcGFjZSwgZGVzaWduZWQgdG8gZXh0ZW5kIGludGVybmV0IGNvbm5lY3Rpdml0eSAgdG8gcGVvcGxlIGluIHJ1cmFsICYgcmVtb3RlIGFyZWFzIHdvcmxkd2lkZS4gIChpaSkgVW5kZXIgUHJvamVjdCBMb29uLCBHb29nbGUgSW5jLiBhaW1zIHRvIHByb3ZpZGUgIGludGVybmV0IGNvbm5lY3Rpdml0eSB2aWEgdXNpbmcgaGVsaXVtIGJhbGxvb25zLiBIZW5jZSAoYikgIGlzIHRoZSBhcHQgY2hvaWNlLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgU2NpZW5jZSAmIFRlY2hub2xvZ3kgRSA4MSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Observation and understanding of the Universe ",
        "option2" : " wireless communication technology ",
        "option3" : " solar power production technology ",
        "option4" : " water conservation technology  17. The terms 'Event Horizon', 'Singularity', `String Theory'  and 'Standard Model' are sometimes seen in the news in "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to the Indian Regional Navigation Satellite System (IRNSS), consider the following statements:  1. IRNSS has three satellites in geostationary and four satellites in geosynchronous orbits. 2. IRNSS covers entire India and about 5500 sq. km beyond its borders. 3. India will have its own satellite navigation system with full global coverage by the middle of 2019. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTg=",
      "description" : "ICgtKUluIElSTlNTLCBPdXQgb2YgdGhlIHNldmVuIHNhdGVsbGl0ZXMgb2Ygc3BhY2UgIHNlZ21lbnQ7IGZvdXIgc2F0ZWxsaXRlcyBhcmUgaW4gZ2Vvc3luY2hyb25vdXMgb3JiaXQgYW5kICB0aHJlZSBzYXRlbGxpdGVzIGFyZSBpbiBnZW9zdGF0aW9uYXJ5IG9yYml0LiBTbyAxc3Qgc3RhdGVtZW50ICBpcyByaWdodC4gIkQiIGlzIGVsaW1pbmF0ZShkKSBbQW5kIHdlIG5vIGxvbmdlciBuZWVkIHRvICB3b3JyeSBhYm91dCB0aGUgdmFsaWRpdHkgb2Ygc3RhdGVtZW50ICMzLCBiZWNhdXNlIHRoZXJlICBpcyAgbm8gIG9wdGlvbiAgd2hlcmUgIDEgIGFuZCAzICBhcmUgIHRvZ2V0aGVyLl0gICgtKUlSTlNTIGNvdmVycyBhbiBhcmVhIG9mIGFib3V0IDEsNTAwIGttIGFyb3VuZCAgSW5kaShhKSBTbywgMm5kIHN0YXRlbWVudCBpcyB3cm9uZy4gQiBhbmQgQyBhcmUgZWxpbWluYXRlKGQpICBUaGVyZWZvcmUsICBBbnN3ZXIgIGhhcyAgdG8gIGJlICBBKSAgMSAgb25seS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " None "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to India's satellite launch  vehicles, consider the following statements:  1. PSLVs launch the satellites useful for Earth resources monitoring whereas GSLVs are designed mainly to launch communication satellites. 2. Satellites launched by PSLV appear to remain permanently fixed in the same position in the sky, as viewed from a particular location on Earth. 3. GSLV Mk III is a four-staged launch l vehicle with the first and third stages l using solid rocket motors; and the second and fourth stages using liquid rocket engines. Which of the statements given above is/are correct.? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTk=",
      "description" : "ICgtKUlTUk8gZGV2ZWxvcGVkIFBTTFYgdG8gbGF1bmNoIHNhdGVsbGl0ZXMgaW50byBwb2xhciAgb3JiaXRzIGFuZCBHU0xWIHRvIGxhdW5jaCBnZW9zeW5jaHJvbm91cyBzYXRlbGxpdGVzIGludG8gIGdlb3N0YXRpb25hcnkgb3JiaXRzLiBHZW9zdGF0aW9uYXJ5IHNhdGVsbGl0ZXMgb3JiaXQgYXJvdW5kICB0aGUgZWFydGggaW4gMjQgaG91cnMgYW5kIHNpbmNlIHRoZSBlYXJ0aCByb3RhdGVzIHdpdGggdGhlICBzYW1lIHBlcmlvZCwgdGhlIHNhdGVsbGl0ZSB3b3VsZCBhcHBlYXIgZml4ZWQgZnJvbSBhbnkgIHBvaW50IG9uIGVhcnRoLiBTbywgc3RhdGVtZW50IzIgaXMgd3JvbmcuICAoLSlHU0xWIGlzIGEgMy1zdGFnZSBsYXVuY2ggdmVoaWNsZSwgd2hlcmUgZmlyc3QgMiBzdGFnZXMgIGFyZSBzaW1pbGFyIHRvIFBTTFYgd2l0aCBzYW1lIHNvbGlkIGFuZCBsaXF1aWQgbmF0dXJlIG9mICBmdWVsIGJ1dCB0aGUgdGhpcmQgc3RhZ2UgaXMgY29tcGxldGVseSBkaWZmZXJlbnQsIGkuZS4sICBjcnlvZ2VuaWMgc3RhZ2UuIFNvIHRoaXJkIHN0YXRlbWVudCBpcyBXUk9ORy4gQnkgIGVsaW1pbmF0aW9uLCB3ZSdyZSBsZWZ0IHdpdGggYW5zd2VyIEE6IG9ubHkgMS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 2 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 20,
      "question" : "For the measurement/estimation of which of the following are satellite images/remote sensing data used?  1. Chlorophyll content in the vegetation of a specific location 2. Greenhouse gas emissions from rice paddies of a specific location 3. Land surface temperatures of a specific location Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MjA=",
      "description" : "MjAxOC1TZXB0LCBJbmRpYW4gRXhwcmVzczogICgtKUNoaW5hJ3MgSFktMUMgbWFyaW5lIHNhdGVsbGl0ZSBpcyBleHBlY3RlZCB0byBpbXByb3ZlICBDaGluYSdzIG9jZWFuIHJlbW90ZSBzZW5zaW5nIGNhcGFiaWxpdHkuIEl0IGNhbiBkZXRlY3QgIGNobG9yb3BoeWxsIGFuZCBzdXNwZW5kZWQgc2VkaW1lbnQgY29uY2VudHJhdGlvbnMgYW5kICBkaXNzb2x2ZWQgb3JnYW5pYyBtYXR0ZXIsIHdoaWNoIGNhbiBhZmZlY3Qgb2NlYW4gY29sb3VyLCAgYXMgd2VsbCBhcyB0ZW1wZXJhdHVyZXMgb24gdGhlIHNlYSBzdXJmYWNlLiBTbyB0aGF0IG1lYW5zICBSZW1vdGUgU2Vuc2luZyBjYW4gaGVscCBpbiBib3RoIHN0YXRlbWVudCAxIGFuZCAgc3RhdGVtZW50IDMuICB0aGVyZSBpcyBvbmx5IG9uZSBzdWNoIG9wdGlvbiAoZCkuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 21,
      "question" : "The experiment will employ a trio of spacecraft flying in formation in the shape of an equilateral triangle that has sides one million kilometres long, with lasers shining between the craft.' The experiment in question refers to  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MjE=",
      "description" : "MjAxNidzIHRoZSBoaW5kdSBBcnRpY2xlIGdpdmVzIGEgZGVzY3JpcHRpb24gYWJvdXQgIEV2b2x2ZWQgTElTQSBmaXR0aW5nIHRoZSBxdWVzdGlvbiBzdGF0ZW1lbnQuIFNvLCAoZCkgIGFuc3dlci4gIEIuIERlZmVuY2Ug",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Voyager-2 ",
        "option2" : " New Horizons ",
        "option3" : " LISA Pathfinder ",
        "option4" : " Evolve LISA "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements:  1. In November, 2006, DRDO successfully conducted the interception test using Prithvi-II missile. 2. Prithivi-II is a surface-to-surface missile and can be deployed to guard the metros against air attacks. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDIy",
      "description" : "UHJpdGh2aSBBaXIgRGVmZW5jZSggKFBBRCkgbWlzc2lsZSB3YXMgdGVzdGVkIGluICBOb3ZlbWJlciAyMDA2LCBmb2xsb3dlZCBieSBBQUQgaW4gRGVjZW1iZXIgMjAwNy4gV2l0aCAgdGhlIHRlc3Qgb2YgdGhlIFBBRCBtaXNzaWxlLCBJbmRpYSBiZWNhbWUgdGhlIGZvdXJ0aCBjb3VudHJ5ICB0byBoYXZlIHN1Y2Nlc3NmdWxseSBkZXZlbG9wZWQgYW4gQW50aS1iYWxsaXN0aWMgbWlzc2lsZSAgc3lzdGVtLCBhZnRlciBVbml0ZWQgU3RhdGVzLCBSdXNzaWEsIGFuZCBJc3JhZWwuIE9uIDYgTWFyY2ggIDIwMDksIEluZGlhIGFnYWluIHN1Y2Nlc3NmdWxseSB0ZXN0ZWQgaXRzIG1pc3NpbGUgZGVmZW5jZSAgc2hpZWxkLCBkdXJpbmcgd2hpY2ggYW4gaW5jb21pbmcgImVuZW15IiBtaXNzaWxlIHdhcyAgaW50ZXJjZXB0ZWQgYXQgYW4gYWx0aXR1ZGUgb2YgNzUga20uICBQcml0aHZpICBpcyBhIHRhY3RpY2FsIHN1cmZhY2UtdG8tc3VyZmFjZSBzaG9ydC1yYW5nZSAgYmFsbGlzdGljIG1pc3NpbGUgKFNSQk0pIGRldmVsb3BlZCBieSBEUkRPIG9mIEluZGlhICB1bmRlciB0aGUgSW50ZWdyYXRlZCBHdWlkZWQgTWlzc2lsZSBEZXZlbG9wbWVudCAgUHJvZ3JhbSAoSUdNRFApIC5JdCBpcyBhbHNvIGEgc2luZ2xlLXN0YWdlIGxpcXVpZC0gIGZ1ZWxsZWQgbWlzc2lsZSBoYXZpbmcgYSBtYXhpbXVtIHdhcmhlYWQgbW91bnRpbmcgIGNhcGFiaWxpdHkgb2YgNTAwIGtnLCBidXQgd2l0aCBhbiBleHRlbmRlZCByYW5nZSBvZiAyNTAgIGttICgxNjAgbWkpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 23,
      "question" : "What is the Galileo Project which has been in news recently?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDIz",
      "description" : "R2FsaWxlbyBpcyB0aGUgZ2xvYmFsIG5hdmlnYXRpb24gc2F0ZWxsaXRlIHN5c3RlbSAoR05TUykgIHRoYXQgaXMgY3VycmVudGx5IGJlaW5nIGNyZWF0ZWQgYnkgdGhlIEV1cm9wZWFuIFVuaW9uIChFVSkgIGFuZCB0aGUgRXVyb3BlYW4gU3BhY2UgQWdlbmN5IChFU0EpLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " An intercountry programme of missile shield  developed by the United States of America ",
        "option2" : " A project developed by India with assistance from  Canada ",
        "option3" : " An environmental protection project being developed  by Japan ",
        "option4" : " A multi-satellite navigation project being developed "
      }
    },
    {
      "index" : 24,
      "question" : "From which one of the following did India buy the Barak anti-missile defence systems?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDI0",
      "description" : "QmFyYWsgaXMgYW4gSXNyYWVsaSBzdXJmYWNlLXRvLWFpciBtaXNzaWxlIChTQU0pICBkZXNpZ25lZCB0byBiZSB1c2VkIGFzIGEgc2hpcC1ib3JuZSBwb2ludC1kZWZlbnNlIG1pc3NpbGUgIHN5c3RlbSBhZ2FpbnN0IGFpcmNyYWZ0LCBhbnRpLXNoaXAgbWlzc2lsZXMsIGFuZCBVQVZzLiBJbmRpYSAgYW5kIElzcmFlbCBqb2ludGx5IGRldmVsb3BlZCBhbmQgcHJvZHVjZWQgaXQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Israel ",
        "option2" : " France ",
        "option3" : " Russia ",
        "option4" : " USA "
      }
    },
    {
      "index" : 25,
      "question" : "In the context of the Indian defence, what is 'Dhruv'? (a) Aircraft-carrying warship  statements:  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDI1",
      "description" : "SGluZHVzdGFuIEFlcm9uYXV0aWNzIExpbWl0ZWQgKEhBTCkgaGFzIGRldmVsb3BlZCAgdGhlIERocnV2IGFkdmFuY2VkIGxpZ2h0IGhlbGljb3B0ZXIgKEFMSCksIGEgbGlnaHQgKDUuNXQgIGNsYXNzKSBtdWx0aXJvbGUgYW5kIG11bHRpbWlzc2lvbiBoZWxpY29wdGVyIGZvciBhcm15LCBhaXIgIGZvcmNlLCBuYXZ5LCBjb2FzdGd1YXJkIGFuZCBjaXZpbCBvcGVyYXRpb25zICBmb3IgYm90aCB1dGlsaXR5ICBhbmQgYXR0YWNrIHJvbGVzIGJ5IGRheSBhbmQgbmlnaHQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " Missile-carrying submarine ",
        "option3" : " Advanced light helicopter ",
        "option4" : " Intercontinental ballistic missile  26. In the context of Indian defence, consider the following  1. The Shourya missile flies with a speed of more than 8  Mach.  2. The range of Shourya missile is more than  1600 km. Which of the statements given above is/are  correct? "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements:  1. INS Sindhughosh is an aircraft carrier. 2. INS Viraat is a submarine. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDI3",
      "description" : "SU5TIFNpbmRodWdob3NoIChTNTUpIGlzIHRoZSBsZWFkIHNoaXAgb2YgaGVyIGNsYXNzIG9mICBkaWVzZWwtZWxlY3RyaWMgc3VibWFyaW5lcyBvZiB0aGUgSW5kaWFuIE5hdnkuIElOUyBWaXJhYXQgaXMgIGEgQ2VudGF1ci1jbGFzcyBhaXJjcmFmdCBjYXJyaWVyIGluIHNlcnZpY2Ugd2l0aCB0aGUgSW5kaWFuICBOYXZ5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to Agni-IV Missile, which of the following statements is/are correct?  1. It is a surface-to-surface missile. 2. It is fuelled by liquid propellant only 3. It can deliver one-tonne nuclear warheads about 7500 km away Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXwyOA==",
      "description" : "QWduaSBJViBpcyBhIHN1cmZhY2UtdG8tc3VyZmFjZSBtaXNzaWxlLiBJdCBpcyBmdWVsbGVkIGJ5ICBzb2xpZCBwcm9wZWxsYW50LiBJdCBjYW4gZGVsaXZlciBvbmUtdG9ubmUgbnVjbGVhciB3YXJoZWFkcyAgYWJvdXQgNDAwMCBrbSBhd2F5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 29,
      "question" : "The term 'IndARC', sometimes seen in the news, is the name of  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Mjk=",
      "description" : "SW5kQVJDIHN0YW5kcyBmb3IgSW5kaWEncyB1bmRlcndhdGVyIG9ic2VydmF0b3J5IHRvICBzY2llbnRpZmljYWxseSBzdHVkeSB0aGUgQXJjdGljIHJlZ2lvbi4gVGhpcyBpcyB0aGUgY291bnRyeSdzICBmaXJzdCB1bmRlcndhdGVyIG1vb3JlZCBvYnNlcnZhdG9yeSBpbiB0aGUgS29uZ3Nmam9yZGVuICBmam9yZCwgaGFsZiB3YXkgYmV0d2VlbiBOb3J3YXkgYW5kIHRoZSBOb3J0aCBQb2xlLiBJdCAgcmVwcmVzZW50cyBhIG1ham9yIG1pbGVzdG9uZSBpbiBJbmRpYSdzIHNjaWVudGlmaWMgZW5kZWF2b3VycyAgaW4gdGhlIEFyY3RpYyByZWdpb24uICBJdCBpcyBkZXZlbG9wZWQgYnkgRWFydGggU3lzdGVtIFNjaWVuY2UgIE9yZ2FuaXNhdGlvbiAoRVNTTyksIE5hdGlvbmFsIENlbnRyZSBmb3IgQW50YXJjdGljIGFuZCAgT2NlYW4gUmVzZWFyY2ggKE5DQU9SKSwgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE9jZWFuICBUZWNobm9sb2d5IChOSU9UKSBhbmQgSW5kaWFuIE5hdGlvbmFsIENlbnRyZSBmb3IgT2NlYW4gIEluZm9ybWF0aW9uIFNlcnZpY2VzIChJTkNPSVMpLiBJbmRBUkMgd2FzIGRlcGxveWVkIGZyb20gIFJWIExhbmNlIHdoaWNoIGlzICBhIHJlc2VhcmNoIHZlc3NlbCBiZWxvbmdpbmcgdG8gdGhlICBOb3J3ZWdpYW4gUG9sYXIgSW5zdGl0dXRlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " an indigenously developed radar system inducted into  Indian Defence ",
        "option2" : " India's satellite to provide services to the countries of  Indian Ocean Rim ",
        "option3" : " a scientific establishment set up by India in Antarctic  region ",
        "option4" : " India's underwater observatory to scientifically study "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following is the best description of 'INS Astradharini', that was in the news recently? (a) Amphibious warfare ship  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MzA=",
      "description" : "SU5TIEFzdHJhZGhhcmluaSBpcyBhbiBpbmRpZ2Vub3VzbHkgZGVzaWduZWQgYW5kICBidWlsdCB0b3JwZWRvIGxhdW5jaCBhbmQgcmVjb3ZlcnkgdmVzc2VsIGJ1aWx0IGJ5IFNob2Z0ICBTaGlweWFyZCBmb3IgSW5kaWFuIE5hdnkuIEl0IHdhcyBjb21taXNzaW9uZWQgYnkgSW5kaWFuICBOYXZ5IG9uIDYgT2N0b2JlciAyMDE1IGF0IE5hdmFsIEJhc2UgaW4gVmlzYWtoYXBhdGFuYW0uICBSZWY6ICBJbmRpYSBZZWFyYm9vayAyMDE2IHBhZ2UgOTcyICA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " An Israeli radar system ",
        "option2" : " Nuclear-powered submarine ",
        "option3" : " Torpedo launch and recovery vessel ",
        "option4" : " Nuclear-powered aircraft carrier  31. What is \"Terminal High Altitude Area Defense (THAAD)\",  sometimes seen in the news? "
      }
    },
    {
      "index" : 32,
      "question" : "In the context of recent advances in human reproductive technology, 'Pronuclear Transfer' is used for  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MzI=",
      "description" : "MjAxNi1UaGUgSGluZHU6IFByb251Y2xlYXIgdHJhbnNmZXIgdGVjaG5vbG9neSB3YXMgIHVzZWQgZm9yIGNyZWF0aW9uIG9mIGEgJ3RocmVlLXBhcmVudCBiYWJ5JyAtIEl0IGhhcyBETkEgIGZyb20gMSkgZmF0aGVyIDIpIG1vdGhlciAzKSBmZW1hbGUgZG9ub3ItIHNvIGFzIHRvIHByZXZlbnQgIG1pdG9jaG9uZHJpYWwgZGlzZWFzZS4uICBDLiBOdWNsZWFyIFRlY2hub2xvZ3kg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Fertilization of egg in vitro by the donor sperm ",
        "option2" : " Genetic modification of sperm producing cells ",
        "option3" : " Development of stem cells into functional embryos ",
        "option4" : " Prevention of mitochondrial diseases in offspring "
      }
    },
    {
      "index" : 33,
      "question" : "In which one of the following areas did the Indira Gandhi Centre for Atomic Research make significant progress in the year 2005'?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDMz",
      "description" : "VGhlIEluZGlyYSBHYW5kaGkgQ2VudHJlIGhhcyBlc3RhYmxpc2hlZCBhICBjb21wcmVoZW5zaXZlIFIgJiBEIGluZnJhc3RydWN0dXJlIG92ZXIgdGhlIGVudGlyZSByYW5nZSAgb2YgRkJSIHRlY2hub2xvZ3ksIHNwYW5uaW5nIHJlYWN0b3IgZW5naW5lZXJpbmcsICBtZXRhbGx1cmd5IGFuZCBtYXRlcmlhbHMsIGNoZW1pc3RyeSBvZiBmdWVscyBhbmQgbWF0ZXJpYWxzLCAgZnVlbCByZXByb2Nlc3NpbmcgYW5kIHJlYWN0b3Igc2FmZXR5IHN0dWRpZXMuIERldmVsb3BtZW50ICBvZiB0aGUgaW5kaWdlbm91cyBwbHV0b25pdW0tdXJhbml1bSBtaXhlZCBjYXJiaWRlIG51Y2xlYXIgIGZ1ZWwgZm9yIHRoZSBmYXN0IGJyZWVkZXIgdGVzdCByZWFjdG9yLiBUaGUgZnVlbCBoYXMgcGVyZm9ybWVkICBzYXRpc2ZhY3RvcmlseSBhbmQgcHJvZHVjZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIG91ciBjb3VudHJ5LCAgbnVjbGVhciBlbGVjdHJpY2l0eSBmcm9tIGEgZmFzdCByZWFjdG9yLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Reprocessing the uranium-plutonium mixed carbide  fuel of the Fast Breeder Test Reactor. ",
        "option2" : " New applications of radioisotopes in metallurgy. ",
        "option3" : " A new technology for production of heavy water. ",
        "option4" : " A new technology for high level nuclear waste "
      }
    },
    {
      "index" : 34,
      "question" : "In which one of the following locations is the International Thermonuclear Experimental Reactor (ITER) project to be built?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDM0",
      "description" : "SVRFUiAoSW50ZXJuYXRpb25hbCBUaGVybW9udWNsZWFyIEV4cGVyaW1lbnRhbCAgUmVhY3RvciApIGlzIGFuIGludGVybmF0aW9uYWwgbnVjbGVhciBmdXNpb24gcmVzZWFyY2ggYW5kICBlbmdpbmVlcmluZyBtZWdhcHJvamVjdCwgd2hpY2ggaXMgY3VycmVudGx5IGJ1aWxkaW5nIHRoZSAgd29ybGQncyBsYXJnZXN0IGV4cGVyaW1lbnRhbCB0b2thbWFrIG51Y2xlYXIgZnVzaW9uIHJlYWN0b3IgIGFkamFjZW50IHRvIHRoZSBDYWRhcmFjaGUgZmFjaWxpdHkgaW4gdGhlIHNvdXRoIG9mIEZyYW5jZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Northern Spain ",
        "option2" : " Southern France ",
        "option3" : " Eastern Germany ",
        "option4" : " Southern Italy "
      }
    },
    {
      "index" : 35,
      "question" : "In the year 2008, which one of the following conducted a complex scientific experiment in which sub-atomic particles were accelerated to nearly the speed of light?         ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDM1",
      "description" : "RXVyb3BlYW4gb3JnYW5pc2F0aW9uIGZvciBOdWNsZWFyIFJlc2VhcmNoIGNvbmR1Y3RlZCAgYSBjb21wbGV4IHNjaWVudGlmaWMgZXhwZXJpbWVudCBpbiB5ZWFyIDIwMDgsIGluIHdoaWNoIHN1Yi4gIGF0b21pYyBwYXJ0aWNsZXMgd2VyZSBhY2NlbGVyYXRlZCB0byBuZWFybHkgdGhlIHNwZWVkIG9mIGxpZ2h0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " European Space Agency ",
        "option2" : " European Organization for Nuclear Research ",
        "option3" : " International Atomic Energy Agency ",
        "option4" : " National Aeronautics and Space administration "
      }
    },
    {
      "index" : 36,
      "question" : "To meet its rapidly growing energy demand, some opine that India should pursue research and development on thorium as the future fuel of nuclear energy. In this context, what advantage does thorium hold over uranium?  1. Thorium is far more abundant in nature than uranium. 2. On the basis of per unit mass of mined mineral, thorium can generate more energy compared to natural uranium. 3. Thorium produces less harmful waste compared to uranium. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXwzNg==",
      "description" : "VGhvcml1bSBmdWVsIGdlbmVyYXRlcyBubyBuZXcgYm9tYi11c2FibGUgbWF0ZXJpYWwgIGluIHRoZSB3YXN0ZSBwcm9maWxlOyB0aGUgd2FzdGUgY29uc2lzdHMgb2YgdGhlIHJhZGlvaXNvdG9wZSAgVXJhbml1bS0yMzMsIG9yIFUyMzMsIHdoaWNoIGlzIHZpcnR1YWxseSBpbXBvc3NpYmxlIHRvICB3ZWFwb25pemUvIFRob3JpdW0gZnVlbCB3aWxsIGdlbmVyYXRlIG1vcmUgZW5lcmd5IHBlciB1bml0ICBvZiBtYXNzIHRoYW4gdXJhbml1bSBmdWVsIGJ5IGEgZmFjdG9yIG9mIGFwcHJveGltYXRlbHkgMzAuICBUaG9yaXVtIGlzIGZvdXIgdGltZXMgbW9yZSBhYnVuZGFudCBpbiBuYXR1cmUgdGhhbiB1cmFuaXVtLCAgYW5kIGlzIHdpZGVseSBkaXN0cmlidXRlZCB0aHJvdWdob3V0IHRoZSBFYXJ0aCdzIGNydXN0LiBBbGwgIHN0YXRlbWVudHMgaW4gdGhpcyBxdWVzdGlvbiBhcmUgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 37,
      "question" : "India is an important member of the  'International Thermonuclear Experimental Reactor'. If this experiment succeeds, what is the immediate advantage for India?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Mzc=",
      "description" : "KGkpIFRoZSBJVEVSIChJbnRlcm5hdGlvbmFsIFRoZXJtb251Y2xlYXIgIEV4cGVyaW1lbnRhbCBSZWFjdG9yKSBwcm9qZWN0IGFpbXMgdG8gbWFrZSB0aGUgbG9uZy0gIGF3YWl0ZWQgdHJhbnNpdGlvbiBmcm9tIGV4cGVyaW1lbnRhbCBzdHVkaWVzIG9mIHBsYXNtYSAgcGh5c2ljcyB0byBmdWxsLXNjYWxlIGVsZWN0cmljaXR5LXByb2R1Y2luZyBmdXNpb24gcG93ZXIgIHN0YXRpb25zLiAgKGlpKSBBcyBzdWNoIHByb2plY3Qgc3RhcnRlZCBpbiAyMDA2LCB0byBmaW5kIHdoZXRoZXIgIE51Y2xlYXIgZnVzaW9uIGNhbiBiZSBhIHNvdXJjZSBvZiBlbmVyZ3kgYW5kIGVsZWN0cmljaXR5IGluICBmdXR1cmUuIEhlbmNlIChkKSBpcyB0aGUgYXB0IGNob2ljZS4gIFJlZjogSW5kaWFuZXhwcmVzcy8gSnVuZSAyOCwgMjAxNjsgaHR0cDovLyAgaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9pbmRpYS9pbmRpYS1uZXdzLWluZGlhL2luZGlhLSAgb24tc2NoZWR1bGUtd2l0aC1kZWxpdmVyaWVzLWZvci1pdGVyLWZ1c2lvbi1yZWFjdG9yLSAgb2ZmaWNpYWwtMjg4MDM5Ni8g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It can use thorium in place of uranium for power  generation ",
        "option2" : " It can attain a global role in satellite navigation ",
        "option3" : " It can drastically improve the efficiency of its fission  reactors in power generation ",
        "option4" : " It can build fusion reactors for power generation "
      }
    },
    {
      "index" : 38,
      "question" : "In India, why are some nuclear reactors kept under 'IAEA Safeguards' while others are not ?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Mzg=",
      "description" : "ICgtKUFzIHBlciB0aGUgSW5kaWEtVVMgQ2l2aWxpYW4gTnVjbGVhciBEZWFsLCBJbmRpYSBjYW4gIG1haW50YWluIDItdHlwZXMgb2YgbnVjbGVhciByZWFjdG9ycy4gQ2VydGFpbiByZWFjdG9ycywgaW4gIHdoaWNoIHdlIGFyZSB1c2luZyB0aGUgZG9tZXN0aWMgZnVlbCwgSW5kaWEgY2FuIGtlZXAgdGhlbSAgb3V0c2lkZSB0aGUgcHVydmlldyBvZiBJQUVBLiAgKC0pSG93ZXZlciwgdGhlIHJlYWN0b3JzIGluIHdoaWNoIHdlIGFyZSB1c2luZyAgaW1wb3J0ZWQgZnVlbCwgdGhleSB3aWxsIGJlIG1hbmRhdG9yaWx5IHVuZGVyIHRoZSBJQUVBICBpbnNwZWN0aW9uLiAgKC0pVGhlcmUgYXJlIGF0IHByZXNlbnQgMjIgb3BlcmF0aW9uYWwgcmVhY3RvcnMsIG9mICB3aGljaCAxNCBhcmUgdW5kZXIgdGhlIEludGVybmF0aW9uYWwgQXRvbWljIEVuZXJneSAgQWdlbmN5IChJQUVBKSBzYWZlZ3VhcmRzIGFzIHRoZXNlIHVzZSBpbXBvcnRlZCAgZnVlbC5SZWY6IDIwMTkncyBFY29ub21pYyBUaW1lcyBBcnRpY2xlLiAgRC4gQmlvdGVjaG5vbG9neSA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Some use uranium and others use thorium ",
        "option2" : " Some use imported uranium and others use  domestic supplies ",
        "option3" : " Some are operated by foreign enterprises and others  are operated by domestic enterprises ",
        "option4" : " Some are State-owned and others are privately- "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following professional(s) are more likely to run the risk of a permanent change in their cell's DNA?  1. Researchers using Carbon 14 isotope 2. X-ray technician 3. Coal miner 4. Dyer and painter Select the correct answer by using the codes given below Codes: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDM5",
      "description" : "WC1SYXkgdGVjaG5pcXVlLCBDMTQgYW5kIER5ZXIgdGVjaG5pcXVlIGlzIHZlcnkgIGltcG9ydGFudCB0ZWNobmlxdWUgZm9yIHBlcm1hbmVudCBjaGFuZ2UgaW4gRE5BLiBCdXQgaW4gIGNvYWwgbWluZXIsIEMxNCBhbW91bnQgaXMgdmVyeSB2ZXJ5IGxlc3MuIFNvLCB0aGVyZSBpcyBubyByaXNrICBvZiBjaGFuZ2UgaW4gRE5BLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 2 alone ",
        "option2" : " 1 , 2 and 3 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 1, 3 an 4 "
      }
    },
    {
      "index" : 40,
      "question" : "Which one of the following techniques can be used to establish the paternity of a child?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQw",
      "description" : "RE5BIGZpbmdlciBwcmludGluZyB0ZWNobm9sb2d5IGlzIHRoZSBwcm9jZXNzIG9mICBlc3RhYmxpc2hpbmcgdGhlIGJpb2xvZ2ljYWwgcGF0ZXJuYWwgcmVsYXRpb25zaGlwIGJldHdlZW4gIGluZGl2aWR1YWwgYW5kIGhpcyBhbGxlZ2VkIGNoaWxkIG9uIHRoZSBhbmFseXNpcyBvZiBzYW1wbGUgIGNlbGxzIHRha2VuIGZyb20gZWFjaCBvZiB0aGVtLiAgRE5BIGZpbmdlciBwcmludGluZyBjYW4gc29sdmUgY2FzZXMgb2YgcmFwZSBtdXJkZXIgZXRjLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Protein analysis ",
        "option2" : " Chromosome counting ",
        "option3" : " Quantitative analysis of DNA ",
        "option4" : " DNA finger printing "
      }
    },
    {
      "index" : 41,
      "question" : "Assertion (A) : Insect resistant transgenic cotton has been produced by inserting Bt gene. Reason (R) : The Bt gene is derived from a bacterium.  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQx",
      "description" : "QnQtY290dG9uIGlzIGEgdHJhbnNnZW5pYyBjcm9wIG9mIGJhY3Rlcml1bSwgIEJhY2kgbGx1cyB0aHVyaW5naWVuc2lzIC4gIFRoIGlzICBnZW5lICBjb25mZXIgcyAgIHRoZSAgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgcGxhbnQsIHJlc2lzdGFuY2UgYWdhaW5zdCBhIHZhcmlldHkgIG9mIGluc2VjdHMgYW5kIHBlc3RzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 42,
      "question" : "Assertion (A) : Dolly was the first cloned mammal. Reason (R) : Dolly was produced by in vitro fertilization.   E 74 ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQy",
      "description" : "Q2xvbmluZyBpcyBhIHByb2Nlc3MsIHdoaWNoIGFydGlmaWNpYWxseSBwZXJmb3JtZWQgaW4gIGxhYm9yYXRvcnkgKCBpbiB2aXRybykuIERvbGx5IHdhcyBhIGNsb25uZWQgYW5pbWFsLCBidXQgbm90ICB0aGUgZmlyc3QgY2xvbmVkIG1hbW1hbC4gQSBtaWNlIHdhcyBjbG9uZWQgZmlyc3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 43,
      "question" : "Assertion (A) : 'DNA finger printing' has become a powerful tool to establish paternity and identity of criminals in rape and assault cases. Reason (R) : Trace evidences such as hairs, saliva and dried semen are adequate for DNA analysis.  Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQz",
      "description" : "RE5BIGZpbmdlciBwcmludGluZyBpcyB0aGUgdGVjaG5pcXVlIHdoaWNoIGlkZW50aWZ5ICBwYXRlcm5pdHkgYW5kIGNyaW1pbmFscyBpbiByYXBlIGNhc2VzLCBieSB0aGUgaGVscCBvZiBhbnkgIHRpc3N1ZSBzYW1wbGUsIGhhaXIsIHNhbGl2YSBvciBkcmllZCBzZW1lbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 44,
      "question" : "Insect-resistant cotton plants have been genetically engineered by inserting a gene from a/an  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ0",
      "description" : "SW5zZWN0IHJlc2lzdGFudCBjb3R0b24gcGxhbnRzIGhhdmUgYmVlbiBnZW5ldGljYWxseSAgZW5naW5lZXJlZCBieSBpbnNlcnRpbmcgYSBnZW5lIGZyb20gYmFjdGVyaXVtIEJhY2lsbHVzICB0aHVyaW5naWVuc2lzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " virus ",
        "option2" : " acterium ",
        "option3" : " insect ",
        "option4" : " plant "
      }
    },
    {
      "index" : 45,
      "question" : "Hybridoma technology is a new biotechnological approach for commercial production of  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ1",
      "description" : "SHlicmlkb21hIHRlY2hub2xvZ3kgaXMgdXNlZCB0byBjb21tZXJjaWFsbHkgIHByb2R1Y3Rpb24gb2YgbW9ub2Nsb25hbCBhbnRpYm9kaWVzLiBUaGUgbW9ub2Nsb25hbCAgYW50aWJvZGllcyBhcmUgcHJvdGVjdGl2ZSBwcm90ZWluIHByb2R1Y2VkIGJ5IHRoZSBjbG9uZSBvZiAgc2luZ2xlIGltbXVuZSBjZWxsLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " monoclonal antibodies ",
        "option2" : " interferon ",
        "option3" : " antibiotics ",
        "option4" : " alcohol "
      }
    },
    {
      "index" : 46,
      "question" : "The American multinational company, Monsanto, has produced an insect-resistant cotton variety that is undergoing field trials in India. A toxic gene from which one of the following bacteria has been transferred to this transgenic cotton?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ2",
      "description" : "QmFjaWxsdXMgdGh1cmluZ2llbnNpcyAoQnQpIGlzIGFuIGluc2VjdGljaWRlIHdpdGggIHVudXN1YWwgcHJvcGVydGllcyB0aGF0IG1ha2UgaXQgdXNlZnVsIGZvciBwZXN0IGNvbnRyb2wgaW4gIGNlcnRhaW4gc2l0dWF0aW9uLiBCdCBpcyBhIG5hdHVyYWxseSBvY2N1cnJpbmcgYmFjdGVyaXVtICBjb21tb24gaW4gc29pbHMgdGhyb3VnaG91dCB0aGUgd29ybGQuIFNldmVyYWwgc3RyYWlucyBjYW4gIGluZmVjdCBhbmQga2lsbCBpbnNlY3RzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Bacillus subtilis ",
        "option2" : " Bacillus thuringiensis ",
        "option3" : " Bacillus anyloliquifanciens ",
        "option4" : " Bacillus globlii "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the latest developments in stem cell research, consider the following statements  1. The only source of human stem cells are the embryos at blastocyst stage. 2. The stem cells can be derived without caisining destruction to blastocysts. 3. The stem cells can regenerate themselves in vitro virtually forever. 4. Indian research centres also created a few cell lines which can be developed into many types  of tissues. Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ3",
      "description" : "U3RlbSBjZWxscyBhcmUgYSBjbGFzcyBvZiB1bmRpZmZlcmVudGlhdGVkIGNlbGxzLCB0aGF0IGFyZSAgYWJsZSB0byBkaWZmZXJlbnRpYXRlIGludG8gc3BlY2lhbGl6ZWQgY2VsbCB0eXBlcy4gIFNvdXJjZXMgYXJlIDogIChpKSBFbWJyeW8gZm9ybWVkIGR1cmluZyB0aGUgYmxhc3RvY3lzdCBwaGFzZSBvZiAgZW1icnlvbG9naWNhbCBkZXZlbG9wbWVudC4gIChpaSkgQWR1bHQgdGlzc3VlIChhZHVsc3RlbSBjZWxscykg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 48,
      "question" : "Which one of the following is the landmark performance of Dr. V. Mohan Reddy, an Indian, born doctor working in U.S.A. during February, 2005?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ4",
      "description" : "RHIuIFYuIE1vaGFuIFJlZGR5IGluIEZlYnJ1YXJ5IDIwMDUgcGVyZm9ybWVkICBzdWNjZXNzZnVsIG9wZW4gaGVhcnQgc3VyZ2VyeSBvZiBwcmVtYXR1cmUgYmFieSBvZiA3MDAgIGdtcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Research on human stem cell which is likely to  revolutionise treatment of deadly disease like cancer. ",
        "option2" : " Successful open heart procedure called arterial switch  performed on an infant. ",
        "option3" : " Research on genetic engineering which can help in  treatment of deadly disease like AIDS. ",
        "option4" : " Successful brain surgery to revive the function of nearly "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements :  1. ELISA test is employed as the first and most basic test for an individual to detect cancer. 2. Almost 50 per cent of human beings have Rh+ blood while the remaining have Rh- blood. Which of the statements given above is / are correct ? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDQ5",
      "description" : "RUxJU0EgKEVuenltZS1MaW5rZWQgSW1tdW5vIFNvcmJlbnQgQXNzYXkpIGlzICBtb3N0IHdpZGVseSB1c2VkIGluIGRldGVjdGluZyB0aGUgcHJlc2VuY2Ugb2YgSElWICBhbnRpYm9kaWVzLiBSaCsgYmxvb2QgZ3JvdXAgaXMgZm91bmQgaW4gbW9yZSB0aGFuIDg1JSBvZiAgcGVvcGxlLiAgRSAgQiAgRCAgXzggIDM0ICAyICBTY2llbmNlICYgVGVjaG5vbG9neSBFIDgzIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 50,
      "question" : "Which one of the following Union Ministries is implementing the Biodiese1 Mission (as Nodal Ministry)?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDUw",
      "description" : "VGhlIENvbW1pdHRlZSBvbiBEZXZlbG9wbWVudCBvZiBCaW8tZnVlbHMgc2V0LXVwICBieSB0aGUgUGxhbm5pbmcgQ29tbWlzc2lvbiBpbiBKdWx5LCAyMDAyLCBpbiBpdHMgcmVwb3J0IG9mICBBcHJpbCwgMjAwMywgcmVjb21tZW5kZWQgbGF1bmNoaW5nIG9mIHRoZSBOYXRpb25hbCAgQ29tbWlzc2lvbiBvbiBCaW8tZGllc2VsLiBNaW5pc3RyeSBvZiBSdXJhbCBkZXZlbG9wbWVudCAgd2FzIGRlc2lnbmF0ZWQgYXMgdGhlIE5vZGFsIE1pbmlzdHJ5IGZvciB0aGlzIE1pc3Npb24uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Ministry of Agriculture ",
        "option2" : " Ministry of Science and Technology ",
        "option3" : " Ministry of New and Renewable Energy ",
        "option4" : " Ministry of Rural Development "
      }
    },
    {
      "index" : 51,
      "question" : "In the context of alternative sources of energy, ethanol as a viable bio-fuel can be obtained from  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDUx",
      "description" : "U3VnYXJjYW5lIGV0aGFub2wgaXMgYW4gYWxjb2hvbC1iYXNlZCBmdWVsIHByb2R1Y2VkICBieSB0aGUgZmVybWVudGF0aW9uIG9mIHN1Z2FyY2FuZSBqdWljZSBhbmQgbW9sYXNzZXMuICBCZWNhdXNlIGl0IGlzIGEgY2xlYW4sIGFmZm9yZGFibGUgYW5kIGxvdy1jYXJib24gYmlvZnVlbCwgIHN1Z2FyY2FuZSBldGhhbm9sIGhhcyBlbWVyZ2VkIGFzIGEgbGVhZGluZyByZW5ld2FibGUgZnVlbCAgZm9yIHRoZSB0cmFuc3BvcnRhdGlvbiBzZWN0b3IuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Potato ",
        "option2" : " Rice ",
        "option3" : " Sugarcane ",
        "option4" : " Wheat "
      }
    },
    {
      "index" : 52,
      "question" : "In the context of CO2 emission and Global Warming, what is the name of a market driven device under the UNFCC that allows developing countries to get funds/ incentives from the developed countries to adopt better technologies that reduce greenhouse gas emissions?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDUy",
      "description" : "VGhlIENsZWFuIERldmVsb3BtZW50IE1lY2hhbmlzbSAoQ0RNKSwgZGVmaW5lZCAgaW4gQXJ0aWNsZSAxMiBvZiB0aGUgUHJvdG9jb2wsIGFsbG93cyBhIGNvdW50cnkgd2l0aCBhbiAgZW1pc3Npb24tcmVkdWN0aW9uIG9yIGVtaXNzaW9uLWxpbWl0YXRpb24gY29tbWl0bWVudCB1bmRlciAgdGhlIEt5b3RvIFByb3RvY29sIChBbm5leCBCIFBhcnR5KSB0byBpbXBsZW1lbnQgYW4gIGVtaXNzaW9uLXJlZHVjdGlvbiBwcm9qZWN0IGluIGRldmVsb3BpbmcgY291bnRyaWVzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Carbon Footprint ",
        "option2" : " Carbon Credit Rating ",
        "option3" : " Clean Development Mechanism ",
        "option4" : " Emission Reduction Norm "
      }
    },
    {
      "index" : 53,
      "question" : "With reference to the treatment of cancerous tumours, a tool called cyberknife has been making the news. In this context, which one of the following statements is not correct ? (a) It is a robotic image guided system  following statements best qualifies golden rice ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDUz",
      "description" : "VGhlIEN5YmVyS25pZmUgVlNJIFJvYm90aWMgUmFkaW9zdXJnZXJ5IFN5c3RlbSBpcyAgYSBub24taW52YXNpdmUgYWx0ZXJuYXRpdmUgdG8gc3VyZ2VyeSBmb3IgdGhlIHRyZWF0bWVudCBvZiAgYm90aCBjYW5jZXJvdXMgYW5kIG5vbi1jYW5jZXJvdXMgdHVtb3VycyBhbnl3aGVyZSBpbiAgdGhlIGJvZHkgaW5jbHVkaW5nIHRoZSBQcm9zdGF0ZSwgTHVuZywgQnJhaW4sIFNwaW5lLCBMaXZlciwgIFBhbmNyZWFzIGFuZCBLaWRuZXkuIFRoZSB0cmVhdG1lbnQgZGVsaXZlcmluZyBiZWFtcyBvZiAgaGlnaC1kb3NlIHJhZGlhdGlvbiB0byB0dW1vdXJzIHdpdGggZXh0cmVtZSBhY2N1cmFjeSBvZmZlcnMgIG5ldyBob3BlIHRvIHBhdGllbnRzIHdvcmxkd2lkZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The grains have been fortified with genes to provide ",
        "option2" : " It delivers an extremely precise dose of radiation. ",
        "option3" : " It has the capability of achieving sub-millimetre  accuracy. ",
        "option4" : " It can map the spread of tumour in the body  54. Genetically modified \"golden rice\" has been engineered to  meet human nutritional requirements. Which one of the "
      }
    },
    {
      "index" : 55,
      "question" : "Recently , 'oil zapper' was in the news. What is it ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw1NQ==",
      "description" : "VGhlIG9pbCB6YXBwZXIgZmVlZHMgb24gaHlkcm9jYXJib24gY29tcG91bmRzICBwcmVzZW50IGluIGNydWRlIG9pbCBhbmQgb2lseSBzbHVkZ2UgKGEgaGF6YXJkb3VzICBoeWRyb2NhcmJvbiB3YXN0ZSBnZW5lcmF0ZWQgYnkgb2lsIHJlZmluZXJpZXMpIGFuZCBjb252ZXJ0cyAgdGhlbSBpbnRvIGhhcm1sZXNzIENPMiBhbmQgd2F0ZXIuIFRoZSBzY2llbnRpZmljIHRlcm0gZm9yICB0aGUgYWJvdmUtbWVudGlvbmVkIHByb2Nlc3MgaXMgYmlvcmVtZWRpYXRpb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is an eco-friendly technology for the remediation of  oily sludge and oil spills ",
        "option2" : " It is the latest technology developed for undersea oil  exploration ",
        "option3" : " It is a genetically engineered high biofuel yielding maize  variety ",
        "option4" : " It is the latest technology to control the accidentally "
      }
    },
    {
      "index" : 56,
      "question" : "A genetically engineered form of brinjal, known as the Bt- brinjal, has been developed. The objective of this is  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw1Ng==",
      "description" : "QnQgQnJpbmphbCBpcyBhIHRyYW5zZ2VuaWMgYnJpbmphbCBjcmVhdGVkIGJ5IGluc2VydGluZyBhICBnZW5lIGNyeTFBYyBmcm9tIHRoZSBzb2lsIGJhY3Rlcml1bSBCYWNpbGx1cyB0aHVyaW5naWVuc2lzICBpbnRvIEJyaW5qYWwuIFRoaXMgaXMgc2FpZCB0byBnaXZlIHRoZSBCcmluamFsIHBsYW50IHJlc2lzdGFuY2UgIGFnYWluc3QgbGVwaWRvcHRlcmFuIGluc2VjdHMgbGlrZSB0aGUgQnJpbmphbCBGcnVpdCBhbmQgU2hvb3QgIEJvcmVyIExldWNpbm9kZXMgb3Jib25hbGlzIGFuZCBGcnVpdCBCb3JlciBIZWxpY292ZXJwYSAgYXJtaWdlcmEuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " to make it pest-resistant. ",
        "option2" : " to improve its taste and nutritive qualities. ",
        "option3" : " to make it drought-resistant. ",
        "option4" : " to make its shelf-life longer. "
      }
    },
    {
      "index" : 57,
      "question" : "Microbial fuel cells are considered a source of sustainable energy. Why ?   1. They use living organisms as catalysts to generate electricity from certain substrates. 2. They use a variety of inorganic materials as substrates. 3. They can be installed in waste water treatment plants to cleanse water and produce electricity. Which of the following statements given above is/ are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw1Nw==",
      "description" : "TWljcm9iaWFsIGZ1ZWwgY2VsbHMgdHJhbnNmb3JtIG9yZ2FuaWMgd2FzdGVzIGRpcmVjdGx5ICBpbnRvIGVsZWN0cmljaXR5IHRocm91Z2ggbWljcm9iaWFsbHkgY2F0YWx5emVkIGVsZWN0cm9jaGVtaWNhbCAgcmVhY3Rpb25zLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 58,
      "question" : "With reference to 'stem cells', frequently in the news,  which of the following statements is/are correct?           1. Stem cells can be derived from mammals only. 2. Stem  cells  can  be  used  for screening new drugs. 3. Stem  cells  can be  used  for medical therapies. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw1OA==",
      "description" : "U3RlbSBjZWxscyBjYW4gYmUgdXNlZCBmb3IgbWVkaWNhbCB0aGVyYXBpZXMgYWxzbyBjYW4gIGJlIHVzZWQgZm9yIHNjcmVlbmluZyBuZXcgZHJ1Z3MuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 59,
      "question" : "What are the reasons for the people's resistance to the introduction of Bt brinjal in India?  1. Bt brinjal has been created by inserting a gene from a soil fungus into its genome. 2. The seeds of Bt brinjal are terminator seeds and therefore, the farmers have to buy the seeds before every season from the seed companies. 3. There is an apprehension that the consumption of Bt brinjal may have adverse impact on health. 4. There is some concern that the introduction of Bt brinjal may have adverse effect on the biodiversity. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw1OQ==",
      "description" : "M3JkIGFuZCA0dGggc3RhdGVtZW50cyBhcmUgIGNvcnJlY3QgaGVuY2UgdGhlIG9wdGlvbiAgKGMpIGlzIHJpZ2h0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 60,
      "question" : "Other than resistance to pests, what are the prospects for which genetically engineered plants have been created?  1. To enable them to withstand drought 2. To increase the nutritive value of the produce 3. To enable them to grow and do photosynthesis in spaceships and space stations 4. To increase their shelf life Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw2MA==",
      "description" : "RXhjZXB0IDNyZCwgYWxsIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 61,
      "question" : "Mycorrhizal biotechnology has been used in rehabilitating degraded sites because mycorrhiza enables the plants to    1. resist drought and increase absorptive area 2. tolerate extremes of pH 3. resist disease infestation Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw2MQ==",
      "description" : "TXljb3JyaGl6YWwgYXNzb2NpYXRpb25zIHBsYXkgdml0YWwgcm9sZSBpbiBwbGFudCAgbnV0cml0aW9uLiBUaGV5IGdyZWF0bHkgaW5jcmVhc2UgdGhlIGVmZmljaWVuY3kgb2YgbnV0cmllbnQgIGFuZCB3YXRlciB1cHRha2U7IGVuaGFuY2UgcmVzaXN0YW5jZSB0byBwYXRob2dlbnMsIGFuZCAgYnVmZmVyIHBsYW50IHNwZWNpZXMgYWdhaW5zdCBzZXZlcmFsIGVudmlyb25tZW50YWwgc3RyZXNzZXMgIGFuZCBkcm91Z2h0IHJlc2lzdGFuY2UuIE15Y29ycmhpemFsIGFsc28gaW1wcm92ZSBwbGFudCAgZ3Jvd3RoIGFuZCBzdXJ2aXZhbCBpbiBzb2lscyBjb250YW1pbmF0ZWQgYnkgaGVhdnkgbWV0YWxzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 62,
      "question" : "Recombinant DNA technology (Genetic Engineering) allows genes to be transferred  1. across different species of plants 2. from animals to plants 3. from microorganisms to higher organisms Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw2Mg==",
      "description" : "UmVjb21iaW5hbnQgRE5BIGFyZSBETkEgc2VxdWVuY2VzLCB3aGljaCByZXN1bHQgIGZyb20gYnJpbmdpbmcgZ2VuZXRpYyBtYXRlcmlhbCBmb3JtIGRpZmZlcmVudCBzb3VyY2VzLiBUaGUgIGdlbmVzIGNhbiBiZSB0cmFuc2ZlcnJlZCBiZXR3ZWVuIGFueSBzcGVjaWVzLCB0aGF0IGlzIGFjcm9zcyAgZGlmZmVyZXRuIHNwZWNpZXMgb2YgcGxhbnRzLCBmcm9tIGFuaW1hbHMgdG8gcGxhbnRzIGFuZCBmcm9tICBtaWNyb29yZ2FuaXNtcyB0byBoaWdoZXIgb3JnYW5pc21zLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following techniques/phenomena:  1. Budding and grafting in fruit plants 2. Cytoplasmic male sterility 3. Gene silencing Which of the above is\\are used to create transgenic crops? ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw2Mw==",
      "description" : "Q3l0b3BsYXNtaWMgbWFsZSBzdGVyaWxpdHkgYW5kIGdlbmUgc2lsZW5jaW5nIGFyZSBuZXcgIHRlY2hub2xvZ2llcyBzcGVjaWZpY2FsbHkgZGV2ZWxvcGVkIGZvciBwcm9kdWN0aW9uIG9mICB0cmFuc2dlbmljIHBsYW50cy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 only ",
        "option4" : " None "
      }
    },
    {
      "index" : 64,
      "question" : "There  is some  concern  regarding the nanoparticles of some chemical elements  that  are  used by the industry in the  manufacture  of various products. Why?      1. They can accumulate in the environment, and contaminate water and soil. 2. They can enter the food chains. 3. They can trigger the production of free radicals. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw2NA==",
      "description" : "QWxsIGFyZSBjb3JyZWN0IA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 65,
      "question" : "With reference to the use of nano-technology in health sector, which of the following statements is/are correct?  1. Targeted drug delivery is made possible by nanotechnology. 2. Nanotechnology can largely contribute to gene therapy. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8NjU=",
      "description" : "VGFyZ2V0ZWQgZHJ1ZyBkZWxpdmVyeSBpcyBtYWRlIHBvc3NpYmxlIGJ5ICBuYW5vdGVjaG5vbG9neS4gTWVkaWNhbCBuYW5vdGVjaG5vbG9neSBjYW4gbGFyZ2VseSAgY29udHJpYnV0ZSB0byBnZW5ldGljIHRoZXJhcHkgYW5kIGltcHJvdmVtZW50LiBEaXNlYXNlcyAgY2FuIGJlIGVhc2lseSB0cmVhdGVkIGlmIGFwcHJvYWNoZWQgYXQgdGhlIGdlbmV0aWMgbGV2ZWwuIFNvICBpbnN0ZWFkIG9mIHRyZWF0aW5nIGRpc2Vhc2VzIGJhc2VkIG9uIHRoZSBzeW1wdG9tcywgIG5hbm90ZWNobm9sb2d5IHdpbGwgaGVscCBtZWRpY2FsIHByYWN0aXRpb25lcnMgdHJlYXQgdGhlICBwcm9ibGVtIGJ5IGxvb2tpbmcgYXQgdGhlIHJvb3QgY2F1c2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 Only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 66,
      "question" : "The Genetic Engineering Appraisal Committee is constituted under the                               ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8NjY=",
      "description" : "VGhlIEdlbmV0aWMgZW5naW5lZXJpbmcgQXBwcm92YWwgQ29tbWl0dGVlICBmdW5jdGlvbnMgYXMgYSBzdGF0dXRvcnkgYm9keSB1bmRlciB0aGUgRW52aXJvbWVudCAgUHJvdGVjdGlvbiBBY3QgMTk4NiBvZiB0aGUgTWluaXN0cnkgb2YgRW52aXJvbm1lbnQgJiBGb3Jlc3QuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Food Safety and Standards Act, 2006 ",
        "option2" : " Geographical Indications of Goods (Registration and  Protection)Act, 1999 ",
        "option3" : " Environment (Protection) Act, 1986 ",
        "option4" : " Wildlife (Protection)Act, 1972 "
      }
    },
    {
      "index" : 67,
      "question" : "With reference to 'fuel cells' in which hydrogen-rich fuel and oxygen are used to generate electricity, consider the following statements:  1. If pure hydrogen is used as a fuel, the fuel cell emits heat and water as by- products. 2. Fuel cells can be used for powering buildings and not for small devices like laptop computers. 3. Fuel cells produce electricity in the form of Alternating Current (AC) Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Njc=",
      "description" : "QSBmdWVsIGNlbGwgaXMgYSBkZXZpY2UgdGhhdCBjb252ZXJ0cyBjaGVtaWNhbCBlbmVyZ3kgIGludG8gZWxlY3RyaWNhbCBlbmVyZ3kgYnkgdXNpbmcgaHlkcm9nZW4gZ2FzIGFuZCBveHlnZW4gIGdhcy4gVGhlIHByb2R1Y3RzIG9mIHRoaXMgcmVhY3Rpb24gYXJlIHdhdGVyIGVsZWN0cmljaXR5IGFuZCAgaGVhdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 Only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 68,
      "question" : "In the context of the developments in Bioinformatics, the term 'transcriptome' sometimes seen in the news, refers to  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Njg=",
      "description" : "VGhlIHRyYW5zY3JpcHRvbmUgaXMgdGhlIHNldCBvZiBhbGwgUk5BIG1vbGVjdWxlcyBpbiAgb25lIGNlbGwgb3IgYSBwb3B1bGF0aW9uIG9mIGNlbGxzLiBJdCByZWZlcnMgdG8gYWxsIFJOQXMgb3IgIG1STkEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " a range of enzymes used in genome editing ",
        "option2" : " the full range of mRNA molecules expressed by an  organism ",
        "option3" : " the description of the mechanism of gene expression ",
        "option4" : " a mechanism of genetic mutations taking place in cells "
      }
    },
    {
      "index" : 69,
      "question" : "What is the application of Somatic Cell Nuclear Transfer (SCNT) Technology?    ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8Njk=",
      "description" : "RW5jeWNsb3BlZGlhIEJyaXRhbm5pY2Egc2F5cyBTQ05UIHRlY2hub2xvZ3kgd2FzICB1c2VkIGZvciBjbG9uaW5nIHRoZSBzaGVlcCAiRG9sbHkiLiBBbmQgb3ZlciB0aGUgeWVhcnMsICB0aGVIaW5kdSBoYXMgYmVlbiBydW5uaW5nIG5ld3Mgb2YgY2xvbmluZyBvZiBidWZmYWxvcyBieSAgU29tYXRpYyBDZWxsIHRlY2hub2xvZ3kuIFNvLCAiYyIgaXMgdGhlIGFuc3dlci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Production of biolarvicides ",
        "option2" : " Manufacture of biodegradable plastics ",
        "option3" : " Reproductive cloning of animals ",
        "option4" : " Production of organisms free of diseases "
      }
    },
    {
      "index" : 70,
      "question" : "With reference to the Genetically Modified mustard (GM mustard) developed in India, consider the following statements :    1. GM mustard has the genes of a soil bacterium that give the plant the property of pest-resistance to a wide variety of pests. 2. GM mustard has the genes that allow the plant cross- pollination and hybridization. 3. GM mustard has been developed jointly by the IARI and Punjab Agricultural University. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8NzA=",
      "description" : "ICgtKUdNIE11c3RhcmQgaXMgYSBwZXJmZWN0IGZsb3dlciBzbyBpdCAnc2VsZi1wb2xsaW5hdGVzJy4gIFRoZXJlZm9yZSBEZWxoaSBVbml2ZXJzaXR5J3MgdGhlbiBWQyBEci4gRGVlcGFrIFBlbnRhbCAgY3JlYXRlZCBHTSBtdXN0YXJkIHNvIHRoYXQgaGUgY291bGQgY3Jvc3MtcG9sbGluYXRlIEluZGlhbiAgdmFyaWV0eSB3aXRoIEV1cm9wZWFuIHZhcmlldHkgdG8gbWFrZSBuZXcgaHlicmlkIGNhbGxlZCAgRE1ILTExLiBIZW5jZSAjMiBpcyByaWdodCBhbmQgIzMgaXMgd3JvbmcuIEFuZCBieSAgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIGI6IE9ubHkgMi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 3  only ",
        "option2" : " 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements:   1. According to the Indian Patents Act, a biological process to create a seed can be patented in India. 2. In India, there is no Intellectual Property Appellate Board. 3. Plant Varieties are not eligible to the patented in India. Which of the statements given above is/ are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8NzE=",
      "description" : "ICgtKU5hdGlvbmFsIElQUiBQb2xpY3kgMjAxNiBzaGlmdGVkIHRoZSBDb3B5cmlnaHQgT2ZmaWNlICBhbmQgaXRzIHN0YXR1dG9yeSBib2R5IEludGVsbGVjdHVhbCBQcm9wZXJ0eSBBcHBlbGxhdGUgQm9hcmQgIChJUEFCKSBmcm9tIEhSRCBtaW5pc3RyeSB0byBjb21tZXJjZSBtaW5pc3RyeS4gIEluZGlhIFBhdGVudCBBY3Q6ICBDaGFwdGVyIDI6IEludmVudGlvbnMgbm90IHBhdGVudGFibGU6ICBCdWxsZXQgKGopOiBwbGFudHMgYW5kIGFuaW1hbHMgaW4gd2hvbGUgb3IgYW55IHBhcnQgdGhlcmVvZiwgIGluY2x1ZGluZyBzZWVkcywgdmFyaWV0aWVzIGFuZCBzcGVjaWVzLiBTbywgIzEgaXMgd3JvbmcsICMzICBpcyByaWdodCwgYW5zd2VyIGlzIGMuICA3MiAoYSkgICgtKVNjaWVudGlzdHMgYXQgVW5pdmVyc2l0eSBvZiBUZXhhcyBjcmVhdGVkIEZpcnN0IExpdmluZyAgT3JnYW5pc20gV2l0aCAnQXJ0aWZpY2lhbCcgRE5BLiBTbywgQiBpcyBlbGltaW5hdGVkLiAoQmVjYXVzZSAgd2UgYXJlIHJlcXVpcmVkIHRvIGZpbmQgd3Jvbmcgb3B0aW9uLCB3aGVyZWFzIEIgaXMgcmlnaHQuKSAgKC0pRE5BIHJlcGxpY2F0aW9uIGNhbiBhbHNvIGJlIHBlcmZvcm1lZCBpbiB2aXRybyAob3V0c2lkZSAgYSBjZWxsKS4gU28sIGMgaXMgZWxpbWluYXRlZC4gICgtKUNlbGwgZGl2aXNpb24gb2YgQ2hsYW15ZG9tb25hcyBpcyB1c3VhbGx5IGFjaGlldmVkICBpbiB0aGUgbGFib3JhdG9yeSBieSBhbHRlcm5hdGlvbiBvZiBsaWdodCBhbmQgZGFyayBwZXJpb2RzLiAgU28sIGQgaXMgZWxpbWluYXRlZC4gVGh1cyB3ZSBhcmUgbGVmdCB3aXRoIGFuc3dlciBhLiAgIEUgODQgIDczIChhKSAgKC0pVXNpbmcgUk5BLWludGVyZmVyZW5jZSB0ZWNobm9sb2d5LCBUYW1pbCBOYWR1ICBBZ3JpY3VsdHVyYWwgVW5pdmVyc2l0eSAoVE5BVSkgc2NpZW50aXN0cyBoYXZlIG1hZGUgbWFqb3IgIGJyZWFrdGhyb3VnaHMgaW4gaW50cm9kdWNpbmcgcmVzaXN0YW5jZSB0byBtYW55IHZpcnVzZXMgaW4gIHZhcmlvdXMgY3JvcHMuIFNvLCAjNCBpcyByaWdodCBhbmQgd2UgYXJlIGxlZnQgd2l0aCBvcHRpb24gYSBvciAgZC4gIFJOQS1pIGlzIGJlaW5nIGV4cGxvcmVkIGFzIGEgZm9ybSBvZiB0cmVhdG1lbnQgZm9yIGEgdmFyaWV0eSAgb2YgZGlzZWFzZXMsIGluY2x1ZGluZyBoZXBhdGl0aXMsIEFJRFMsIEh1bnRpbmd0b24gZGlzZWFzZSwgIGFuZCBjYW5jZXIuIFNvLCAjMiBpcyByaWdodCwgdGhlcmVmb3JlIGFuc3dlciBpcyBhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2, and 3 "
      }
    },
    {
      "index" : 74,
      "question" : "With reference to the carbon nanotubes, consider the following statement :  1. They can be used as the carriers of drugs and antigens in the human body. 2. They can be made into artificial blood capillaries for an injured part of human body. 3. They can be used in biochemical sensors. 4. Carbon nanotubes are biodegradable. Which of the statements given above are correct ? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8NzQ=",
      "description" : "IMK3IDIwMTktU2VwdDogRGVsaGkgcmVzZWFyY2hlcnMgaGF2ZSBtYWRlIGEgY2FyYm9uICBuYW5vdHViZSBiYXNlZCBzZW5zb3IgZm9yIGRldGVjdGluZyBjYW5jZXIgY2VsbHMsIHNheXMgIHRoZUhpbmR1IFNvLCAjMyBpcyByaWdodC4gT3B0aW9uIGEgaXMgZWxpbWluYXRlZC4gSW4gYWxsIHRoZSAgcmVtYWluaW5nIG9wdGlvbnMsIHN0YXRlbWVudCM0IGlzIGNvbW1vbiwgc28gV2UgaGF2ZSAgdG8gYWNjZXB0IGl0IGFzIGNvcnJlY3Qgd2l0aG91dCBjaGVja2luZy4gICgtKUZvciBiaW9tZWRpY2FsIGFwcGxpY2F0aW9ucywgY2FyYm9uIG5hbm90dWJlcyBzaG93ICBwcm9taXNlIGFzIHZlaGljbGVzIGZvciB0YXJnZXRlZCBkcnVnLWRlbGl2ZXJ5IGFuZCBuZXJ2ZSAgY2VsbCByZWdlbmVyYXRpb24uIHNheXMgQnJpdGFubmljYSBzbyAjMSBtYXkgYmUgdHJ1ZS4gICgtKVNvbWUgb2YgdGhlIHJlc2VhcmNoIHBhcGVyIHNheSB0aGF0IEFydGlmaWNpYWwgYmxvb2QgIHZlc3NlbHMgY291bGQgYmUgbWFkZSBzbyBhbnN3ZXIgc2hvdWxkIGJlICdjJy4gIEUuIENvbXB1dGVyICYgIE1vZGVybiBQaHlzaWNzIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 75,
      "question" : "Assertion (A) : Information technology is fast becoming a very important field of activity in India. Reason (R) : Software is one of the major exports of the country and India has a very strong base in hardware.  Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc1",
      "description" : "WWVzLCBpdCBpcyB0cnVlIHRoYXQgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBpcyBmYXN0ICBiZWNvbWluZyBhIHZlcnkgaW1wb3J0YW50IGZpZWxkIG9mIGFjdGl2aXR5IGluIEluZGlhIGJlY2F1c2UgIG5vdyBhIGRheXMgaXQgaXMgdXNlZCBldmVyeXdoZXJlIGluIGRldmVsb3BtZW50IG9mIGV2ZXJ5ICBzZWN0b3IuIEl0IGlzIGFwcGxpZWQgaW4gZmllbGQgb2YgbWVkaWNpbmUsIHJlc2VhcmNoLCBiYW5raW5nICBldGMuIEl0IGlzIGFsc28gdHJ1ZSB0aGF0IHNvZnR3YXJlIGlzIG9uZSBvZiBtYWpvciBleHBvcnRzIG9mIHRoZSAgY291bnRyeSBidXQgSW5kaWEgZG9lcyBub3QgaGF2ZSBzdHJvbmcgYmFzZSBpbiBoYXJkd2FyZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 76,
      "question" : "The memory of a computer is commonly expressed in terms of kilobytes or megabytes. A byte is made up of:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc2",
      "description" : "VGhlIGJ5dGUsIGlzIGEgdW5pdCBvZiBkaWdpdGFsIGluZm9ybWF0aW9uIGluIGNvbXB1dGluZyAgYW5kIHRlbGVjb21tdW5pY2F0aW9ucywgdGhhdCBtb3N0IGNvbW1vbmx5IGNvbnNpc3RzIG9mICBlaWdodCBiaXRzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " eight binary digits ",
        "option2" : " eight decimal digits ",
        "option3" : " two binary digits ",
        "option4" : " two decimal digits "
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements:  1. Smart card is a plastic card with an embedded microchip. 2. Digital technology is primarily used with new physical communication medium such as satellite and fibre optics transmission. 3. A digital library is a collection of documents in an organized electronic form available on the internet only. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc3",
      "description" : "QSBkaWdpdGFsIGxpYnJhcnkgaXMgYW4gb25saW5lIGRhdGFiYXNlIG9mIGRpdGlnYWwgb2JqZWN0cy0gIHRleHQsIGltYWdlcywgYXVkaW8sIGFuZCB2aWRlb3MgZXRjLiBCZXNpZGVzIGl0LCBpdCBwcm92aWRlcyAgbWVhbnMgZm9yIG9yZ2FuaXNpbmcsIHNlYXJjaGluZyBhbmQgcmV0cmlldmluZyB0aGUgY29udGVudCAgY29udGFpbmVkIGluIHRoZSBjb2xsZWN0aW9uLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 3 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " 1,"
      }
    },
    {
      "index" : 78,
      "question" : "Consider the following statements:  1. Adam Osborne introduced the first portable computer. 2. Ian Wilmut created the first cloned sheep. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc4",
      "description" : "QWRhbSBPc2Jvcm5lIGludHJvZHVjZWQgdGhlIGZpcnN0IHBvcnRhYmxlIGNvbXB1dGVyICBpbiAxOTgxIGFuZCBJYW4gV2lsbXV0LCBhbiBFbmdsaXNoIGVtYnJ5b2xvZ2lzdCBmaXJzdCBjbG9uZWQgIGEgbWFtbWFsIChMYW1iKSBpbiB5ZWFyIDE5OTYuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 79,
      "question" : "WiMAX is related to which one of the following     ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDc5",
      "description" : "V2lNQVggaXMgb25lIG9mIHRoZSBob3R0ZXN0IGJyb2FkYmFuZCB3aXJlbGVzcyAgdGVjaG5vbG9naWVzIGFyb3VuZCB0b2RheS4gV2lNQVggc3lzdGVtcyBhcmUgZXhwZWN0ZWQgIHRvIGRlbGl2ZXIgYnJvYWRiYW5kIGFjY2VzcyBzZXJ2aWNlcyB0byByZXNpZGVudGlhbCBhbmQgIGVudGVycHJpc2UgY3VzdG9tZXJzIGluIGFuIGVjb25vbWljYWwgd2F5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Biotechnology ",
        "option2" : " Space technology ",
        "option3" : " Missile technology ",
        "option4" : " Communication technology "
      }
    },
    {
      "index" : 80,
      "question" : "Consider the following:  1. Bluetooth device 2. Cordless phone 3. Microwave oven 4. Wi-Fi device Which of the above can operate between 2.4 and 2.5 GHz range of radio frequency band? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDgw",
      "description" : "TWljcm93YXZlcyBhcmUgZWxlY3Ryb21hZ25ldGljIHdhZ2VzIHdpdGggd2F2ZWxlbmd0aHMgIHJhbmdpbmcgZnJvbSBhcyBsb25nIGFzIG9uZSBtZXRlciB0byBhcyBzaG9ydCBhcyBvbmUgIG1pbGxpbWV0ZXIsIG9yIGVxdWl2YWxlbnRseSwgd2l0aCBmcmVxdWVuY2llcyBiZXR3ZWVuIDMwMCAgTUh6ICgwLjMgR0h6KSBhbmQgMzAwIEdIei4gQSBtaWNyb3dhdmUgb3ZlbiBwYXNzZXMgIChub25pb25pemluZyBtaWNyb3dhZ2UgcmFkaWF0aW9uIChhdCBhIGZyZXF1ZW5jeSBuZWFyIDIuNDUgIEdIeikgdGhyb3VnaCBmb29kLCBjYXVzaW5nIGRpZWxlY3RyaWMgaGVhdGluZyBieSBhYnNvcnB0aW9uICBvZiBlbmVyZ3kgaW4gdGhlIHdhdGVyLCBmYXRzIGFuZCBzdWdhciBjb250YWluZWQgaW4gdGhlIGZvb2QuICBCbHVldG9vdGggYW5kIFdpLUZpIGhhdmUgbWFueSBhcHBsaWNhdGlvbnM6IHNldHRpbmcgdXAgIG5ldHdvcmtzLCBwcmludGluZywgb3IgdHJhbnNmZXJyaW5nIGZpbGVzLiBUaGV5IGFsc28gd29yayBpbiAgdGhlIGdpdmVuIGZyZXF1ZW5jeSByYW5nZS4gQWxsIGNvcmRsZXNzIHNvbGQgaW4gdGhlIFVTIHVzZSAgdGhlIDEuOSBHSHogb3IgMi40LUdIeiBiYW5kcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 81,
      "question" : "Recently, LASIK (Laser Assisted In Situ Keratomileusis) procedure is being made popular for vision correction. Which one of the following statements in this context is-not correct?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDgx",
      "description" : "SW4gb3JkZXIgdG8gdW5kZXIgZ28gTEFTSUsgcHJvY2VkdXJlIG9uZSBzaG91bGQgYmUgIGF0IGxlYXN0IDE4IHllYXJzIG9sZCwgYXMgdGhlIHZpc2lvbiBvZiBwZW9wbGUgeW91bmdlciB0aGFuICAxOCB1c3VhbGx5IGNvbnRpbnVlcyB0byBjaGFuZ2UuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " LASIK procedure is used to correct refractive errors  of the eye  E  B  D  _8  34  2  Science & Technology E 77 ",
        "option2" : " It is a procedure that permanently changes the shapes  of the cornea ",
        "option3" : " It reduces a person's dependence on glasses or contact  lenses ",
        "option4" : " It is a procedure that can be done on the person of any "
      }
    },
    {
      "index" : 82,
      "question" : "Which among the following do/does not belong/belongs to the GSM family of wireless technologies?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5fDgy",
      "description" : "TW9yZSB0aGFuIDMuOCBiaWxsaW9uIHBlb3BsZSB3b3JsZHdpZGUgdXNlZCB0aGUgR2xvYmFsICBTeXN0ZW0gZm9yIE1vYmlsZSBDb21tdW5pY2F0aW9ucyAoR1NNKSBmYW1pbHkgb2YgIHRlY2hub2xvZ2llcyBhcyBvZiBNYXkgMjAwOS4gR1NNIGlzIHRoZSBtb3N0IHdpZGVseSB1c2VzZCAgd2lyZWxlc3MgdGVjaG5vbG9neSBpbiB0aGUgd29ybGQuIEdTTSBoYXMgc3RyYWluZ2h0Zm9yd2FyZCwgIGNvc3QtZWZmZWN0aXZlIG1pZ3JhdGlvbiBwYXRoIHRvIDNHIHRocm91Z2ggR1BSUywgRURHRSAgYW5kICBVTVRTLUhTUEEsICBhcyAgd2VsbCAgYXMgIGJleW9uZCAgM0cgIHZpYSAgdGhlICBIU1BBICBFdm9sdXRpb24gKEhTUEErKS4gTFRFIGFuZCBTeXN0ZW0gQXJjaGl0ZWN0dXJlIEV2b2x1dGlvbiAgKFNBRSkgaW5pdGlhdGl2ZXMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFNjaWVuY2UgJiBUZWNobm9sb2d5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " EDGE ",
        "option2" : " LTE ",
        "option3" : " DSL ",
        "option4" : " Both EDGE an LTE "
      }
    },
    {
      "index" : 83,
      "question" : "What is the difference between Blue-tooth and Wi-Fi devices?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw4Mw==",
      "description" : "Qmx1ZXRvb3RoIG5ldHdvcmtpbmcgdHJhbnNtaXRzIGRhdGEgdmlhIGxvdy1wb3dlciAgcmFkaW8gd2F2ZXMuIEl0IGNvbW11bmljYXRlcyBvbiBhIGZyZXF1ZW5jeSBvZiAyLjQ1ICBnaWdhaGVydHogKGFjdHVhbGx5IGJldHdlZW4gMi40MDIgR0h6IGFuZCAyLjQ4MCBHSHosIHRvIGJlICBleGFjdCkuIFdpLUZpIC1JRUVFIDgwMi4xMSBpcyBhIHNldCBvZiBzdGFuZGFyZHMgZm9yICBpbXBsZW1lbnRpbmcgd2lyZWxlc3MgbG9jYWwgYXJlYSBuZXR3b3JrIChXTEFOKSBjb21wdXRlciAgY29tbXVuaWNhdGlvbiBpbiB0aGUgMi40LCAzLjYgYW5kIDUgR0h6IGZyZXF1ZW5jeSBiYW5kcy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Bluetooth uses 2.4 GHz radio frequency band, whereas  Wi-Fi can use 2.4 GHz or 5 GHz frequency band ",
        "option2" : " Bluetooth is used for Wireless Local Area Networks  (WLAN) only, whereas Wi-Fi is used for wireless wide  area networks (WWAN) only ",
        "option3" : " When information is transmitted between two devices  using Bluetooth technology, the devices have to be in  the line of sight of each other, but when Wi-Fi  technology is used the devices need not be in the line  of sight of each other ",
        "option4" : " The statements (a) and (b) given above are correct in "
      }
    },
    {
      "index" : 84,
      "question" : "What is the difference between a CFL and an LED lamp ? (1) To produce light, a CFL uses mercury vapour and phosphor while an LED lamp uses semi-conductor material (2) The average life span of a CFL is much longer than that of an LED lamp (3) A CFL is less energy-efficient as compared to an LED lamp  Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw4NA==",
      "description" : "TEVEIGJ1bGJzIGFyZSBncm91cGVkIGluIGNsdXN0ZXJzIHdpdGggZGlmZnVzZXIgbGVuc2VzICB3aGljaCBoYXZlIGJyb2FkZW5lZCB0aGUgYXBwbGljYXRpb25zIGZvciBMRUQgdXNlIGluIHRoZSAgaG9tZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 85,
      "question" : "A new optical disc format known as the Blu-ray Disc (BD) is becoming popular. In what way is it different from the traditional DVD ?  1. DVD supports Standard Definition video while BD supports high definition video 2. Compared to a DVD, the BD format has several times more storage capacity 3. Thickness of BD is 2.4 mm while that of DVD is 1.2 mm. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw4NQ==",
      "description" : "U3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0IGFzIHRoZSB0aGlja25lc3Mgb2YgQkQgaXMgMS4xICBtbSB3aGlsZSB0aGF0IG9mIERWRCBpcyAxLjIgbW0uIFRoZSBkaWZmZXJlbmNlIGxpZXMgaW4gIGNhcGFjaXR5IHNvIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFzIGZhciBhcyBzdGF0ZW1lbnQgMSBpcyAgY29uY2VybmVkLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1,2 and 3 "
      }
    },
    {
      "index" : 86,
      "question" : "What is 'Virtual Private Network' ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw4Ng==",
      "description" : "QSB2aXJ0dWFsIHByaXZhdGUgbmV0d29yayBwcm92aWRlcyBhIHByaXZhdGUgbmV0d29yayAgYWNyb3NzIGEgcHVibGljIG5ldHdvcmsgZW5zdXJpbmcgc2VjdXJpdHkgYnkgZXN0YWJsaXNoaW5nICBhbiBlbmNyeXB0ZWQgbGF5ZXJlZCB0dW5uZWxpbmcgcHJvdG9jb2wuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is a private computer network of an organization  where the remote users can transmit encrypted  information through the server of the organization. ",
        "option2" : " It is a computer network across a public internet that  provides users access to their organization's network  while maintaining the security of the information  transmitted. ",
        "option3" : " It is a computer network in which users can access a  shared pool of computing resources through a service  provider. ",
        "option4" : " None of the statements (a), (b) and (c) given above is "
      }
    },
    {
      "index" : 87,
      "question" : "Graphene is frequently in news recently, what is its importance?  1. It is a two dimensional material and has good electrical conductivity. 2. It is one of the thinnest but strongest materials tested so far. 3. It is entirely made of silicon and has high optical transparency. 4. It can be used as conducting electrodes required for touch screens. LCDs and organic LEDs. Which of the statements given above are correct? ",
      "questionId" : "WzIwMTItSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8ODc=",
      "description" : "R3JhcGhlbmUgaXMgYW4gYWxsb3Ryb3BlIG9mIGNhcmJvbiBpbiB0aGUgZm9ybSBvZiBhIHR3byAgZGltZW50aW9uYWwgYW5kIGhleGFnb25hbCBsYXR0aWNlLiBJdCBpcyBhYm91dCAxMDAgdGltZXMgIHN0cm9uZ2VyIHRoYW4gc3RlZWwuICBJdCBjb25kdWN0cyBoZWF0IGFuZCBlbGVjdHJpY2l0eSB2ZXJ5ICBlZmZpY2llbnRseSwgc28gaXQgaXMgdXNlZCBpbiBzZW1pY29uZHVjdG9yLCBlbGVjdHJvbmljcywgYmF0dGVyeSAgZW5lcmd5IGV0Yy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTItSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1, 2 and  4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 88,
      "question" : "In addition to fingerprint scanning, which of the following can be used in the biometric identification of a person?  1. Iris scanning 2. Retinal scanning 3. Voice recognition Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neXw4OA==",
      "description" : "QmlvbWV0cmljcyBpZGVudGlmaWNhdGlvbiBpcyB1c2VkIGluIGNvbXB1dGVyIHNjaWVuY2UgIGFzIGEgZm9ybSBvZiBpZGVudGlmaWNhdGlvbiBhbmQgYWNjZXNzIGNvbnRyb2wuIEJpb21ldHJpYyAgaWRlbnRpZmllcnMgYXJlIHRoZSBkaXN0aW5jdGl2ZSwgbWVhc3VyYWJsZSBjaGFyYWN0ZXJpc3RpY3MgIHVzZWQgdG8gbGFiZWwgaW5kaXZpZHVhbHMuIEJpb21ldHJpYyBpZGVudGlmaWVycyBhcmUgY2F0ZWdvcml6ZWQgIGFzIHBoeXNpb2xvZ2ljYWwgdmVyc3VzIGJlaGF2aW9yYWwgY2hhcmFjdGVyaXN0aWNzLiAgUGh5c2lvbG9naWNhbCBCaW9tZXRyaWMgaWRlbnRpZmllcnMgYXJlIGZpbmdlcnByaW50LCBwYWxtICB2ZWlucywgZmFjZSByZWNvZ25pdGlvbiwgRE5BLCBwYWxtIHByaW50LCBoYW5kIGdlb21ldHJ5LCAgaXJpcyByZWNvZ25pdGlvbiwgcmV0aW5hIGFuZCBvZG91ci9zY2VudC4gQmVoYXZpb3VyYWwgIGlkZW50aWZpZXJzIGFyZSB0eXBpbmcgcmh5dGhtLCBnYWl0IGFuZCB2b2ljZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxTY2llbmNlICYgVGVjaG5vbG9neQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : "  1, 2 and 3 "
      }
    },
    {
      "index" : 89,
      "question" : "With reference to 'Near Field Communication (NFC) Technology', which of the following statements is/are correct?  1. It is a contactless communication technology that uses electromagnetic radio fields. 2. NFC is designed for use by devices which can be at a distance of even a metre from each other 3. NFC can use encryption when sending sensitive information. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8ODk=",
      "description" : "TmVhciBmaWVsZCBjb21tdW5pY2F0aW9uIGlzIGEgc2V0IG9mIGNvbW11bmljYXRpb24gIHByb3RvY29scyBlbmFibGluZyB0d28gZWxlY3Ryb25pYyBkZXZpY2VzLiBUaGlzIGRldmljZSBpcyAgdXNlZCBpbiBjb250YWN0bGVzcyBwYXltZW50LCBjcmVkaXQgY2FyZCBhbmQgZWxlY3Ryb25pYyB0aWNrZXQgIHVzaW5nIGVuY3J5cHRpb24gd2hlbiBzZW5kaW5nIHNlbnNpdGl2ZSBpbmZvcm1hdGlvbi4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 Only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 90,
      "question" : "In the  context of modern scientific research, consider the following statements about 'Ice Cube', a particle detector located at South pole, which was recently in the news:  1. It is the world's largest neutrino detector, encompassing a cubic kilometre of ice. 2. It is a powerful telescope to search for dark matter. 3. It is buried deep in the ice. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTA=",
      "description" : "VGhlIEljZWN1YmUgTmV1dHJpbm8gb2JzZXJ2YXRvcnkgaXMgYSBuZXV0cmlubyAgb2JzZXJ2YXRvcnkgKHRlbGVzY29wZSkuIEl0IGlzIGNvbnN0cnVjdGVkIGF0IHRoZSAgRSAgQiAgRCAgXzggIDM0ICAyICBTY2llbmNlICYgVGVjaG5vbG9neSBFIDg1ICBBbXVuZHNlbi1zY290dCBzb3V0aCBwb2xlIHN0YXRpb24gaW4gQW50YXJjdGljYXMgKHNvdXRoICBwb2xlKS4gVGhpcyBwcm9qZWN0IGlzIHN1cGVydmlzZWQgYnkgdGhlIHVuaXZlcnNpdHkgb2YgIHdpc2NvbnNpbi1NYWRpc29uLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  only ",
        "option2" : " 2 and 3 Only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 91,
      "question" : "What is 'Greased Lightning-10 (GL-10)', recently in the news?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTE=",
      "description" : "VGhlICdHcmVhc2VkIExpZ2h0ZW5pbmctMTAnIChHTC0xMCkgaXMgYSAyOCBrZyB3aXRoIDEwICBlbmdpbmVzIHRoYXQgY2FuIHRha2Ugb2ZmIGFuZCBsYW5kIGxpa2UgYSBoZWxpY29wdGVyIGFuZCBmbHkgIGVmZmljaWVudGx5IGxpa2UgYW4gYWlyY3JhZnQuIEl0IGlzIGEgYmF0dGVyeS1wb3dlcmVkIGRyb25lICBwcm90b3R5cGUgcGxhbmUgZGVzaWduZWQgYnkgTkFTQS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Electric plane tested by NASA ",
        "option2" : " Solar-powered two-seater aircraft designed by Japan ",
        "option3" : " Space observatory launched by China ",
        "option4" : " Reusable rocket designed by ISRO "
      }
    },
    {
      "index" : 92,
      "question" : "Regarding 'DigiLocker', sometimes seen in the news, which of the following statements is/are correct?  1. It is a digital locker system offered by the Government under Digital India Programme. 2. It allows you to access your e-documents irrespective of your physical location..  E 78 Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTI=",
      "description" : "RGlnaWxvY2tlciBvciBkaWdpdGFsIGxvY2tlciBpcyBvbmUgb2YgdGhlIGtleSBpbml0aWF0aXZlcyAgdW5kZXIgdGhlIERpZ2l0YWwgSW5kaWEgUHJvZ3JhbW1lLiAgRGlnaXRhbCBsb2NrZXIgaXMgYWltZWQgYXQgbWluaW1pc2luZyB0aGUgdXNhZ2Ugb2YgcGh5c2ljYWwgIGRvY3VtZW50cyBhbmQgZW5hYmxlIHNoYXJpbmcgb2YgZS1kb2N1bWVudHMgYWNyb3NzICBhZ2VuY2llcy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  only ",
        "option2" : " 2  Only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 93,
      "question" : "With reference to 'Li-Fi', recently in the news, which of the following statements is/are correct?  1. It uses light as the medium for high-speed data transmission. 2. It is a wireless technology and is several times faster than 'Wi-Fi'. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTM=",
      "description" : "KGkpIFRoaXMgT1dDIHRlY2hub2xvZ3kgdXNlcyBsaWdodCBmcm9tIGxpZ2h0LSAgZW1pdHRpbmcgZGlvZGVzIChMRURzKSBhcyBhIG1lZGl1bSB0byBkZWxpdmVyIG5ldHdvcmtlZCwgIG1vYmlsZSwgaGlnaC1zcGVlZCBjb21tdW5pY2F0aW9uIGluIGEgc2ltaWxhciBtYW5uZXIgdG8gIFdpLUZpLiBJdCBpcyBhIGJpZGlyZWN0aW9uYWwsIGhpZ2gtc3BlZWQgYW5kIGZ1bGx5IG5ldHdvcmtlZCAgd2lyZWxlc3MgY29tbXVuaWNhdGlvbiB0ZWNobm9sb2d5IHNpbWlsYXIgdG8gV2ktRmkuICAoaWkpIExpLWZpIGdpdmVzIGRhdGEgdHJhbnNmZXIgcmF0ZSBvZiAxMCBnaWdhYnl0ZXMgcGVyICBzZWNvbmQuIFNvIDFzdCBzdGF0ZW1lbnQgaXMgcmlnaHQuIExpLUZpIGRldmljZSBjaXJjdWxhdGVzICBkYXRhIHZpYSBMRURzIHRoYXQgZW1pdCBhbiBpbnRlcm1pdHRlbnQgZmxpY2tlciBhdCBhIHNwZWVkICBpbXBlcmNlcHRpYmxlIHRvIHRoZSBodW1hbiBleWUuIFNvLCAybmQgc3RhdGVtZW50IGFsc28gIHJpZ2h0LiAgUmVmOiBGZWIgMjAxNiwgdGhlSGluZHUgOyBodHRwOi8vd3d3LnRoZWhpbmR1LmNvbSAvICB0b2RheXMtcGFwZXIgcC1pbnRlcm5hdGlvbmFsL2xpZmktZGF0YS10cmFuc21pc3Npb24tICB0aHJvdWdoLWxpZ2h0L2FydGljbGU2MjE4ODkyLmVjZSA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 94,
      "question" : "What is the purpose of 'evolved Laser Interferometer Space Antenna (eLISA)' project?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTQ=",
      "description" : "ZUxJU0EgYWltcyB0byBtZWFzdXJlIGdyYXZpdGF0aW9uYWwgd2F2ZXMgaW4gdGhlICBmcmVxdWVuY3kgcmFuZ2UgZnJvbSAwLjFtSHogdG8gYWJvdXQgMTAwIG1Iei4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " To detect neutrinos ",
        "option2" : " To detect gravitational waves ",
        "option3" : " To detect the effectiveness of missile defence system ",
        "option4" : " To study the effect of solar flares on our "
      }
    },
    {
      "index" : 95,
      "question" : "Organic Light Emitting Diodes (OLEDs) are used to create digital display in many devices. What are the advantages of OLED displays over Liquid Crystal displays?  1. OLED displays can be fabricated on flexible plastic substrates. 2. Roll-up displays embedded in clothing can be made using OLEDs. 3. Transparent displays are possible using OLEDs. Select the correct answer using the code given below ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTU=",
      "description" : "T0xFRHMgIGNhbiAgYmUgIGZvcm1lZCAgb24gIGFueSAgc3Vic3RyYXRlICBzdWNoICBhcyAgZ2xhc3NlcywgY2xvdGhzLCBwbGFzdGljIGFuZCBvdGhlciBiZW5kYWJsZSBzdWJzdHJhdGVzLiBTbyAgYWNjb3JkaW5nbHksIGFsbCB0aHJlZSBhcmUgcG9zc2libGUuIEFuc3dlciAiYyIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 3  only ",
        "option2" : " 2 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None of the above statements is correct "
      }
    },
    {
      "index" : 96,
      "question" : "Consider the following pairs of Terms sometimes seen in news vs Context /Topic:  1. Belle II experiment: Artificial Intelligence 2. Blockchain technology: Digital/ Cryptocurrency 3. CRISPR - Cas9: Particle Physics Which of the pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTY=",
      "description" : "ICgtKUNSSVNQUiwgYSBuZXcgZ2Vub21lIGVkaXRpbmcgdG9vbCwgY291bGQgdHJhbnNmb3JtICB0aGUgZmllbGQgb2YgYmlvbG9neS4gSXQgYWxsb3dzIHNjaWVudGlzdHMgdG8gZWRpdCBnZW5vbWVzICB3aXRoIHVucHJlY2VkZW50ZWQgcHJlY2lzaW9uLiBTbywgIzMgaXMgd3JvbmcsIENSSVNQUiBpcyAgZGVmaW5pdGVseSBub3QgYXNzb2NpYXRlZCB3aXRoIFBhcnRpY2xlIFBoeXNpY3MuIFRoaXMgIGVsaW1pbmF0ZXMgQSwgQyBhbmQgKEQpIFRodXMgd2UgYXJlIGxlZnQgd2l0aCBhbnN3ZXIgIkI6ICBvbmx5IDIiIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 3  only ",
        "option2" : " 2 only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 97,
      "question" : "When the alarm of your smartphone rings in the morning, you  wake  up  and  tap  it  to  stop  the  alarm  which  causes your geyser to be switched on automatically. The smart min-or  in  your  bathroom  shows  the  day's  weather  and also indicates the level of water in your overhead tank. After you take some groceries from your refrigerator for making breakfast, it recognises the shortage of stock in it  and  places  an  order  for  the  supply  of  fresh  grocery items.  When  you  step  out  of  your  house  and  lock  the door, all lights, fans, geysers and AC machines get switched off automatically. On your way to office, your car warns you about traffic congestion ahead and suggests an alternative route, and if you are late for a meeting, it sends a- message to your office accordingly. In the context of emerging communication technologies, which one of the following term\" best applies to the above scenario?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTc=",
      "description" : "VGhlIElvVCBpcyB0aGUgbmV0d29yayBvZiBwaHlzaWNhbCBvYmplY3RzIHdoaWNoIGFyZSAgYWNjZXNzZWQgdGhyb3VnaCB0aGUgSW50ZXJuZXQuIEludGVybmV0IG9mIFRoaW5ncyAoSW9UKSAgaGFzIGEgYnJvYWQgc2NvcGUsIGEgaGVhcnQgcGF0aWVudCBjYW4gZG8gaGVhcnQgbW9uaXRvcmluZyAgZWFzaWx5LCBmYXJtIGFuaW1hbHMgY2FuIGJlIGVhc2lseSBzZW5zZWQgd2l0aCBhIGhlbHAgb2YgIGJpb2NoaXAgdHJhbnNwb25kZXIsIGFuIGF1dG9tb2JpbGUgdGhhdCBoYXMgYnVpbHQtaW4gIHNlbnNvcnMgY2FuIGFsZXJ0IHRoZSBkcml2ZXIgd2hlbiB0aXJlIHByZXNzdXJlIGlzIGxvdy4gU28sICAiQiIgaXMgdGhlIGNvcnJlY3QgdGVybSByZWxhdGVkIHRvIGFib3ZlIHBhc3NhZ2UuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Border Gateway Protocol ",
        "option2" : " Internet of Things ",
        "option3" : " Internet Protocol ",
        "option4" : " Virtual Private Network "
      }
    },
    {
      "index" : 98,
      "question" : "In which of the following areas can GPS technology be used?  1. Mobile phone operations 2. Banking operations 3. Controlling the power grids Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTg=",
      "description" : "ICgtKTIwMTg6IEdvdmVybm1lbnQncyBFQVNFIGZyYW1ld29yayBmb3IgUHVibGljIHNlY3RvciAgQmFua3MgcHJvdmlkZXMgZm9yIGRldmVsb3BpbmcgbW9iaWxlIGFwcCB0byBsb2NhdGUgIG5lYXJlc3QgQVRNcyAoc28gdGhhdCBjYW4gYmUgcG9zc2libGUgb25seSB2aWEgR1BTLikgSW4gIDIwMTYsIFBOQiBiYW5rIGhhZCBhbHJlYWR5IGxhdW5jaGVkIGFuZHJvaWQgbW9iaWxlICBhcHBzIGVuYWJsaW5nIHRoZSBjdXN0b21lciB0byBsb2NhdGUgbmVhcmVzdCBQTkIgQVRNICB1c2luZyBHUFMuIHNvLCB5ZXMgc2Vjb25kIHN0YXRlbWVudCBpcyByaWdodCwgR1BTIGNhbiAgaW5kZWVkIGJlIHVzZWQgaW4gQmFua2luZyBvcGVyYXRpb25zLiAgKC0pMjAxNjogVGhlIERlcGFydG1lbnQgb2YgVGVsZWNvbSBoYXMgbWFuZGF0ZWQgdGhhdCAgbW9iaWxlIHBob25lcyBzb2xkIGluIEluZGlhIHdpbGwgY29tZSB3aXRoIGEgZGVkaWNhdGVkICAncGFuaWMgYnV0dG9uJyBhbmQgR2xvYmFsIFBvc2l0aW9uaW5nIFN5c3RlbSAoR1BTKSBmYWNpbGl0eSAgdGhhdCBjYW4gYmUgdXNlZCB0byBzZW5kIG91dCBhIHNpZ25hbCBpbiBjYXNlIG9mIGRpc3RyZXNzLiAgVGhpcyBpcyBhaW1lZCBhdCBpbXByb3ZpbmcgdGhlIHNhZmV0eSBvZiB3b21lbiBhbmQgIGVuc3VyaW5nIGEgcXVpY2sgcmVzcG9uc2UgZnJvbSBzZWN1cml0eSBhZ2VuY2llcy4gU28sICBmaXJzdCBzdGF0ZW1lbnQgaXMgcmlnaHQuIFRodXMgd2UgYXJlIGxlZnQgd2l0aCBjb3JyZWN0ICBhbnN3ZXIsIGQ6IDEsIDIgYW5kIDMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 99,
      "question" : "The terms 'Wanna Cry, Petya and Eternal Blue' sometimes mentioned in the news recently are related to  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8OTk=",
      "description" : "ICgtKVdhbm5hY3J5IHJhbnNvbXdhcmUgbG9ja3MgdXNlcidzIGRldmljZXMgYW5kICBwcmV2ZW50cyB0aGVtIGZyb20gYWNjZXNzaW5nIGRhdGEgYW5kIHNvZnR3YXJlIHVudGlsIGEgIGNlcnRhaW4gcmFuc29tIGlzIHBhaWQgdG8gaXRzIGNyZWF0b3IuIExpa2UgV2FubmFDcnksICAiUGV0eWEiIHdvcm0gc3ByZWFkcyByYXBpZGx5IHRocm91Z2ggbmV0d29ya3MgdGhhdCB1c2UgIE1pY3Jvc29mdCBXaW5kb3dzLCBhbmQgZGVtYW5kcyAkMzAwIHBhaWQgaW4gYml0Y29pbiB0byAgdW5sb2NrIHlvdXIgaW5mZWN0ZWQgUChDKSBFdGVybmFsQmx1ZSBpcyB0aGUgbmFtZSBnaXZlbiAgdG8gYSBzb2Z0d2FyZSB2dWxuZXJhYmlsaXR5IGluIE1pY3Jvc29mdCdzIFdpbmRvd3MgIG9wZXJhdGluZyBzeXN0ZW0sIGJlY2F1c2Ugb2Ygd2hpY2ggYWZvcmVtZW50aW9uZWQgIHJhbnNvbXdhcmVzIHNwcmVhKGQpIFNvLCBhbGwgdGhlc2UgdGVybXMgYXJlIHJlbGF0ZWQgdG8gIGN5YmVyc2VjdXJpdHkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Exo-planets ",
        "option2" : " Crypto-currency ",
        "option3" : " Cyber attacks ",
        "option4" : " Mini satellites "
      }
    },
    {
      "index" : 100,
      "question" : "\"3D printing\" has applications in which of the following? 1. Preparation of confectionery items  2. Manufacture of bionic ears 3. Automotive industry 4. Reconstructive surgeries 5. Data processing technologies Select the correct answer using the code given below : ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTAw",
      "description" : "QmlvcHJpbnRpbmcgcHJvY2VzcyBpbiB3aGljaCBsaXZpbmcgdGlzc3VlcyBjYW4gYmUgIDNkLXByaW50ZWQgdXNpbmcgc3RlbS1jZWxsIGNvbnRhaW5pbmcgYmlvaW5rLiBUaGlzIG1lYW5zICAzRCBwcmludGluZyBoYXMgYXBwbGljYXRpb25zIGluIGJpb25pYyBlYXJzICgjMikgYW5kICByZWNvbnN0cnVjdGl2ZSBzdXJnZXJpZXMgKCM0KS4gVGhlcmUgaXMgb25seSBvbmUgb3B0aW9uICB3aGVyZSAyIGFuZCA0IGFyZSB0b2dldGhlciBpLmUuIE9wdGlvbiBkOiBhbGwgc3RhdGVtZW50cyAgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only ",
        "option2" : " 2, 3 and 5 only ",
        "option3" : " 1  and 4  only ",
        "option4" : " 1, 2, 3, 4 and 5 "
      }
    },
    {
      "index" : 101,
      "question" : "With reference to communication technologies, what is/are the difference/differences between LTE (Long-Term Evolution) and VoLTE (Voice over Long-Term Evolution)?  1. LTE  is  commonly  marketed  as  3G  and  VoLTE  is commonly marketed as advanced 3G. 2. LTE is data-only technology and VoLTE is voice-only technology. Select the correct answer using the code given below ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTAx",
      "description" : "MjAxNy1TZXB0LCBJbmRpYVRvZGF5ICAoLSlWb0xURSBhbGxvd3MgYW4gb3BlcmF0b3IgdG8gb2ZmZXIgYm90aCB2b2ljZSBhbmQgZGF0YSAgb3ZlciBhIDRHIExURSBuZXR3b3JrLiBUaGUgYmlnIGFkdmFudGFnZSBvZiBWb0xURSBpcyB0aGF0ICBjYWxsIHF1YWxpdHkgaXMgc3VwZXJpb3IgdG8gM0cgYW5kIDJHIGNvbm5lY3Rpb25zICh0aHJvdWdoICB3aGljaCB2b2ljZSBpcyB1c3VhbGx5IHJvdXRlZCkgYXMgbXVjaCBtb3JlIGRhdGEgY2FuIGJlICB0cmFuc2ZlcnJlZCB2aWEgNEcuICAoLSlGcm9tIGFib3ZlIHN0YXRlbWVudCwgd2UgY2FuIGluZmVyOiBWT0xURSBhc3NvY2lhdGVkICB3aXRoIDRnIHNvICMxIGlzIHdyb25nLiBWT0xURSBhbGxvd3MgYm90aCBkYXRhIGFuZCB2b2ljZSAgc28gIzIgaXMgd3JvbmcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 102,
      "question" : "In The context of digital technologies for  entertainment, consider the following statements :  1. In Augmented Reality (AR), a simulated environment is created and the physical world is completely shut out. 2. In Virtual Reality (VR), images generated from the computer are projected onto real life objects or surroundings. 3. AR allows individual to be present in the world and improves the experience using the camera of smart- phone or PC. 4. VR closes the world, and transposes an individual, providing complete immersion experience. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTAy",
      "description" : "MjAxNy1BdWd1c3QsIHRoZUhpbmR1OiAgKC0pVmlydHVhbCBSZWFsaXR5OiBjb21wdXRlci1nZW5lcmF0ZWQgc2ltdWxhdGlvbiBvZiByZWFsLSAgbGlmZSBlbnZpcm9ubWVudHMgdGhhdCBhcmUgcHJpbWFyaWx5IGFjaGlldmVkIHdpdGggdGhlIHVzZSBvZiAgaGVhZHNldHMuIFdoZW4gd29ybiwgdGhlIHVzZXIncyB2aXNpb24gYW5kIGhlYXJpbmcgYXJlICBzdGltdWxhdGVkIHRvIHByb3ZpZGUgcmVhbGlzdGljIGV4cGVyaWVuY2VzLiAgKC0pQXVnbWVudGVkIFJlYWxpdHk6IHN1cGVyaW1wb3NpdGlvbiBvZiBjb21wdXRlci0gIGdlbmVyYXRlZCBpbWFnZXMgb24gZXhpc3RpbmcgZW52aXJvbm1lbnRzIHRvIG1ha2UgdGhlbSAgbW9yZSBpbnRlcmFjdGl2ZS4gSXQgaXMgdXRpbGlzZWQgaW4gdGhlIGZvcm0gb2YgYXBwbGljYXRpb25zIGZvciAgbW9iaWxlIGRldmljZXMgc3VjaCBhcyBQb2tlbW9uIEdPLiBTbywgIzIgaXMgd3JvbmcuIFRoaXMgIGVsaW1pbmF0ZXMgQSBhbmQgQy4gQmFzZWQgb24gdGhlIHNhbWUgc2VudGVuY2UsICMzIGlzIGNvcnJlY3QuICBTbywgYiBpcyB0aGUgYW5zd2VyLiAgMTAzIChjKSAgQXMgcGVyIHRoZSBDb3Jwb3JhdGUgQWZmYWlycyBNaW5pc3RyeSB3ZWJzaXRlLCBEaWdpdGFsICBTaWduYXR1cmUgbWVhbnMgYW4gZWxlY3Ryb25pYyBzaWduYXR1cmUgdXNlZnVsIHRvIGF1dGhlbnRpLSAgY2F0ZSB0aGUgaWRlbnRpdHkgb2YgdGhlIHNlbmRlciBvZiBhIG1lc3NhZ2Ugb3IgdGhlIHNpZ25lciBvZiAgYW4gZWxlY3Ryb25pYyBkb2N1bWVudC4gVGhpcyBlbnN1cmVzIHRoYXQgdGhlIG9yaWdpbmFsIGNvbi0gIHRlbnQgb2YgdGhlIGRvY3VtZW50IGlzIG5vdCBjaGFuZ2VkLiBTbyAjMyBpcyByaWdodC4gVGhlICBvdGhlciBzdGF0ZW1lbnRzIGFyZSByZWxhdGVkIHRvIERpZ2l0YWwgU2lnbmF0dXJlIENlcnRpZmljYXRlcyAgKERTQykgd2hpY2ggaXMgYSBzZXBhcmF0ZSBtZWNoYW5pc20uICAgRSA4NiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 ",
        "option3" : " 1,2 and 3 ",
        "option4" : " 4 only "
      }
    },
    {
      "index" : 104,
      "question" : "In the context of wearable technology, which of the following tasks is/are accomplished by wearable devices?  1. Location identification of a person 2. Sleep monitoring of a person 3. Assisting the hearing impaired person Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTA0",
      "description" : "ICgtKVdlYXJhYmxlIGRldmljZXMgc3VjaCBhcyBzbWFydCB3YXRjaGVzIGNhbiB0cmFjayAgR1BTIGxvY2F0aW9uIG9mIGEgcGVyc29uIGFuZCBtb25pdG9yIGhpcyBoZWFydCByYXRlIGFuZCAgc2xlZXBpbmcgcGF0dGVybiBzbyAxIGFuZCAyIGFyZSByaWdodC4gIFRoZXJlIGlzIG9ubHkgb25lICBvcHRpb24gZCB3aGVyZSB0aGV5J3JlIHRvZ2V0aGVyLiAgKC0pQnV0IGp1c3QgdG8gY3Jvc3NjaGVjayB2YWxpZGl0eSBvZiB0aGlyZCBzdGF0ZW1lbnQ6IDIwMTgtICBGZWIgdGhlSGluZHU6IFJlU291bmQgY29tcGFueSdzIG5ld2VzdCBwcm9kdWN0LCBhICBoZWFyaW5nIGFpZCwgTGlOWCAzRCB3YXMgbmFtZWQgYW4gSG9ub3JlZSBpbiBib3RoIHRoZSAgQWNjZXNzaWJsZSBUZWNoIGFuZCBXZWFyYWJsZSBUZWNoIGNhdGVnb3JpZXMgYXQgQ29uc3VtZXIgIEVsZWN0cm9uaWNzIFNob3cgKENFUyksIGluIExhcyBWZWdhcy4gIFNvICMzIGlzIHJpZ2h0ID0gIEFuc3dlciBkOiAxLCAyIGFuZCAzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 105,
      "question" : "Consider the following activities :  1. Spraying pesticides on a crop field 2. Inspecting the craters of active volcanoes 3. Collecting breath samples from spouting whales for DNA analysis At the present level of technology, which of the above activities can be successfully carried out by using drones? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTA1",
      "description" : "ICgtKURyb25lIHVzZWQgZm9yIHNwcmF5aW5nIHBlc3RpY2lkZXMgb24gYSBjcm9wIGZpZWxkICBzYXlzICB0aGUgSGluZHUuIFNvICMxIGlzIGNvcnJlY3QuICAoLSlEcm9uZSBjYW4gYmUgdXNlZCBmb3IgbW9uaXRvcmluZyBhY3RpdmUgdm9sY2Fub2VzLCAgc2F5cyBTY2llbmNlIFVTQSBuZXdzICAoLSlEcm9uZXMgY2FuIGJlIHVzZWQgZm9yIGRvaW5nIHN0YXRlbWVudCMzLCBzYXlzICByZXV0ZXJzLmNvbSBhcnRpY2xlICAoLSlTbyBhbGwgdGhyZWUgY29ycmVjdCA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 106,
      "question" : "In India, the term 'Public Key Infrastructure' is used in the context of  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTA2",
      "description" : "ICgtKVJhdmkgQWdyYWhhcmkgU2NpZW5jZSBUZWNoIENoLiAxNTogICgtKUluZGlhIGlzIGFtb25nIHRob3NlIGZldyBuYXRpb25zIHRoYXQgaGF2ZSB0aGUgIERpZ2l0YWwgU2lnbmF0dXJlIExlZ2lzbGF0aW9uLiAgKC0pRGlnaXRhbCBzaWduYXR1cmVzIGRlcGxveSB0aGUgUHVibGljIEtleSAgSW5mcmFzdHJ1Y3R1cmUgKFBLSSkgdGVjaG5vbG9neS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Digital security infrastructure ",
        "option2" : " Food security infrastructure ",
        "option3" : " Health care and education infrastructure ",
        "option4" : " Telecommunication and transportation "
      }
    },
    {
      "index" : 107,
      "question" : "With the present state of development, Artificial Intelligence can effectively do which of the following?  1. Bring down electricity consumption in industrial units 2. Create meaningful short stories and songs 3. Disease diagnosis 4. Text-to-speech conversion 5. Wireless transmission of electrical energy Select the correct answer using the code given below: ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTA3",
      "description" : "ICgtKUFzIHBlciB0aGUgYXJ0aWNsZXMgcHVibGlzaGVkIGluIHRpbWUuY29tIGFuZCAgdGhldmVyZ2UsIEFJIGhhcyBiZWVuIHVzZWQgZm9yIHdyaXRpbmcgc29uZ3MgYW5kIHN0b3JpZXMuICBTbyAjMiBpcyBjb3JyZWN0LiAgKC0pQS5JLiBjYW4gYmUgdXNlZCBmb3Igc3BlZWNoLXRvLXRleHQgYW5kIHRleHQtdG8tICBzcGVlY2gsIGFzc2lzdGl2ZSBkaWFnbm9zdGljIHNvbHV0aW9uczsgIFNvICMzICM0IGFyZSAgY29ycmVjdC4gU2F5IE5pdGkgQWF5b2cgZG9jdW1lbnQgcGFnZSA4MSAgKC0pT25seSAgaW4gIHRoZSAgZCAgb3B0aW9uICAyLCAgMyAgYW5kICA0ICBhcmUgIHRvZ2V0aGVyICBzbyAgYW5zd2VyIHNob3VsZCBiZSAnZCcg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 5 only ",
        "option2" : " 1, 3, and 4 only {?} ",
        "option3" : " 2, 4, and 5 only ",
        "option4" : " 1, 2, 3, 4 and 5 "
      }
    },
    {
      "index" : 108,
      "question" : "With reference to visible light communication (VLC) technology, which of the following statements are correct?  1. VLC uses electromagnetic spectrum wavelengths 375 to 780nm 2. VLC  is  known  as  long-range  optical  wireless communication 3. VLC can transmit large amounts of data faster than Bluetooth 4. VLC has no electromagnetic interference Select the correct answer using the code given below ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3l8MTA4",
      "description" : "ICgtKUxpLUZpIGlzIGEgVmlzaWJsZSBMaWdodCBDb21tdW5pY2F0aW9ucyAoVkxDKSBzeXN0ZW0gIGZvciBydW5uaW5nIHdpcmVsZXNzIGNvbW11bmljYXRpb24uIExpLUZpJ3MgbWFpbiAgZGlzYWR2YW50YWdlOiBJdCBpcyBlZmZlY3RpdmUgZm9yIHNob3J0IHJhbmdlIG9ubHkuIFNheXMsICBSYXZpIEFncmFoYXJpJ3MgQm9vaywgY2hhcHRlcjE0IG9uIHRoZSBJbnRlcm5ldC4gICgtKVNvLCAjMiBpcyB3cm9uZy4gQnkgZWxpbWluYXRpb24sIHRoZSBhbnN3ZXIgaXMgJ2MnLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8U2NpZW5jZSAmIFRlY2hub2xvZ3k=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Science & Technology",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 1, 2 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 2, 3 and 4 only "
      }
    }
  ],
  "subject" : "General Science & Ecology",
  "topic" : "Science & Technology",
  "year" : "0"
}
