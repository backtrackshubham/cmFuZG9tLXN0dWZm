{
  "testId" : "economic-&-social-development|poverty,-planning,-finance",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which one of the following Five Year Plans recognised human development as the core of all development efforts?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwx",
      "description" : "SW4gdGhlIGVpZ2h0IGZpdmUgeWVhciBwbGFuICgxOTkyLTE5OTcpLCB0aGUgdG9wIHByaW9yaXR5ICB3YXMgZ2l2ZW4gdG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBodW1hbiByZXNvdXJjZXMgaS5lLiwgIGVtcGxveW1lbnQsIGVkdWNhdGlvbiwgYW5kIHB1YmxpYyBoZWFsdGguIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The Third Five Year Plan ",
        "option2" : " The Fifth Five Year Plan ",
        "option3" : " The Sixth Five Year Plan ",
        "option4" : " The Eighth Five Year Plan "
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following are among the non-plan expenditures of the Government of India?  1. Defence expenditure 2. Subsidies 3. All expenditures linked with the previous plan periods 4. Interest payment Codes: ",
      "questionId" : "WzE5OTUsIDE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwy",
      "description" : "Tm9uLXBsYW4gZXhwZW5kaXR1cmVzIGluY2x1ZGUgbm9uLWRldmVsb3BtZW50YWwgIGV4cGVuZGl0dXJlIChpbnRlcmVzdCBwYXltZW50LCBzdWJzaWRpZXMsIGRlZmVuY2Ug",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTUsIDE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2 and 4 ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 3,
      "question" : "What is the annual rate aimed in the Eighth Five Year Plan  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwz",
      "description" : "VGhlIHRhcmdldGVkIGFubnVhbCBncm93dGggcmF0ZSB3YXMgNS42JSBidXQgdGhlICBhY3R1YWwgZ3Jvd3RoIHJhdGUgd2FzIDYuNyUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 5.6% ",
        "option2" : " 6% ",
        "option3" : " 6.5% ",
        "option4" : " 7% "
      }
    },
    {
      "index" : 4,
      "question" : "The largest source of financing the public sector outlay of the Eighth Five Year Plan comes from:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw0",
      "description" : "RmluYW5jaW5nIG9mIEVpZ2h0aCBmaXZlIHllYXIgcGxhbiBvdXRsYXkgSW4gdGhlIFB1YmxpYyBzZWN0b3IgKFJ1cGVlcyBpbiBjcm9yZXMpICBDYXBpdGFsICAgUmVjZWlwdHMgIHJldmVudWVzICBCdWRnZXRvcnkgIFNvdXJjZTogR09JLiwgUGxhbm5pbmcgQ29tbWlzc2lvbiwgdmFyaW91cyBwbGFuIGRvY3VtZW50cy4gRWNvbm9taWMgc3VydmV5IEdPSSwgMTk5OS0yMDAwLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgUG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2UgIGFuZCBFY29ub21pYy9Tb2NpYWwgRGV2ZWxvcG1lbnQgRCAyMyAgdGhlIHNraWxscyAgdGhleSBuZWVkIHRvIGVmZmVjdCBjaGFuZ2Ugd2l0aGluIHRoZWlyICBjb21tdW5pdGllcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " balance from current revenue ",
        "option2" : " contribution of public enterprises ",
        "option3" : " government borrowings ",
        "option4" : " deficit financing "
      }
    },
    {
      "index" : 5,
      "question" : "The New Exim Policy announced in 1992, is for period of :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw1",
      "description" : "VGhlIE5ldyBFeGltIFBvbGljeSB3YXMgZm9yIGZpdmUgeWVhcnMgKEFwcmlsIDEsIDE5OTIgLSAgTWFyY2ggMzEsIDE5OTcpLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 3 years ",
        "option2" : " 4 years ",
        "option3" : " 7 years ",
        "option4" : " 5 years "
      }
    },
    {
      "index" : 6,
      "question" : "Given below are two statements, one labelled as Assertion (A) and the other labelled as Reason (R). Assertion (A) : An important policy instrument of economic liberalization is reduction in import duties on capital goods. Reason (R) : Reduction in import duties would help the local entrepreneurs to improve technology to face the global markets. In the context of the above two statements, which one of the following is correct?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw2",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0IGFuZCBleHBsYWluIG9uZSBvZiB0aGUgIGluc3RydW1lbnRzIHRvIGxpYmVyYWxpc2UgdGhlIEluZGlhbiBlY29ub215IC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation ",
        "option2" : " Both A and R are true R is not a correct explanation ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 7,
      "question" : "The Eighth Five Year Plan is different from the earliest ones. The critical difference lies in the fact that:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw3",
      "description" : "RWlnaHRoIEZpdmUgWWVhciBQbGFuICgxOTkyLTk3KSBoYWQgYSBiaWdnZXIgb3V0bGF5ICB3aXRoIGVuZXJneSBiZWluZyBnaXZlbiAyNi42JSBvZiB0b3RhbCBvdXRsYXkgdG8gYSBjaGVxdWUgYSAgdGFyZ2V0ZWQgZ3Jvd3RoIHJhdGUgb2YgNi43OCUgcGVyIGFubnVtLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " it has a considerably larger outlay compared to the  earlier plans ",
        "option2" : " it has a major thrust on agricultural and rural development ",
        "option3" : " considerable emphasis is placed on infrastructure  growth ",
        "option4" : " industrial licensing has been abolished "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements : Most international agencies which find Development Programme in India on intergovernmental bilateral agreements, mainly provide:  1. Technical assistance 2. Soft loans which are required to be paid back with interest 3. Grants, not required to be paid back 4. Food assistance to be paid back ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw4",
      "description" : "QSBzb2Z0IGxvYW4gaXMgYSBsb2FuIHdpdGggYSBiZWxvdyBtYXJrZXQgcmF0ZSBvZiBpbnRlcmVzdC4gIEl0IGFsc28gaW5jbHVkZXMgY29uY2Vzc2lvbnMgdG8gYm9ycm93ZXJzIHN1Y2ggYXMgbG9uZyAgcmVwYXltZW50IHBlcmlvZHMgb3IgaW50ZXJlc3QgaG9saWRheXMuICBUZWNobmljYWwgYXNzaXN0YW5jZSBpcyBhaWQgaW52b2x2aW5nIGhpZ2hseSBlZHVjYXRlZCBvciAgdHJhaW5lZCBwZXJzb25uZWwsIHN1Y2ggYXMgZG9jdG9ycywgd2hvIGFyZSBtb3ZlZCBpbnRvIGEgIGRldmVsb3BpbmcgY291bnRyeSB0byBhc3Npc3Qgd2l0aCBhIHByb2dyYW0gb2YgZGV2ZWxvcG1lbnQuICBGb29kIGFzc2lzdGFuY2UgaXMgZ2l2ZW4gdG8gY291bnRyaWVzIGluIHVyZ2VudCBuZWVkIG9mICBmb29kIHN1cHBsaWVzLCBlc3BlY2lhbGx5IGlmIHRoZXkgaGF2ZSBqdXN0IGV4cGVyaWVuY2VkIGEgIG5hdHVyYWwgZGlzYXN0ZXIuIEdyYW50IGlzIHVzdWFsbHkgZ2l2ZW4gdG8gZ292ZXJubWVudHMgIHRocm91Z2ggaW5kaXZpZHVhbCBjb3VudHJpZXMsIGludGVybmF0aW9uYWwgYWlkIGFnZW5jaWVzIGFuZCAgdGhyb3VnaCBtdWx0aWxhdGVyYWwgaW5zdGl0dXRpb25zIHN1Y2ggYXMgdGhlIHdvcmxkIEJhbmsgIGFuZCBieSB0aHJvdWdoIGRldmVsb3BtZW50IGNoYXJpdGllcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 2 and 4 are correct ",
        "option2" : " 1, 2 and 3 are correct ",
        "option3" : " 1, 2 and 4 are correct ",
        "option4" : " 3 and 4 are correct "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following items imported by India:  1. Capital goods 2. Petroleum 3. Pearls and precious stones 4. Chemicals 5. Iron and Steel The correct sequence of the decreasing order of these items (as per 94-95 figures), in terms of value is: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw5",
      "description" : "VmFsdWUgb2YgaW1wb3J0IGluIEluZGlhIGFzIHBlciA5NC05NSBmaWd1cmVzICAxLiBQZXRyb2xldW0gb2lscyAgYW5kIG9pbHMgIC0gVVMkIDMsMjg1LDU2MC41OCBtaWxsaW9uICBvYnRhaW5lZCAgZnJvbSAgYml0dW1pbm91ICAyLiBQZXRyb2xldW0gb2lscyBvaWxzLCBldGMuLVVTICQgMiw2NDIsMzUxLjg3IG1pbGxpb25zICAoZXhjbC4gY3J1ZGUpLCBQcmVwYXJhdGlvbiAgMy4gRGlhbW9uZHMgbm9uLWluZHVzdHJpYWwtVVMgJCAxLDUwMCwgNjY4LjgwICBtaWxsaW9uIHVud29ya2VkIG9yIHNpbXBseSBzd2FuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 3, 4, 5 ",
        "option2" : " 1, 2, 4, 3, 5 ",
        "option3" : " 2, 1, 3, 4, 5 ",
        "option4" : " 2, 1, 4, 5, 3 "
      }
    },
    {
      "index" : 10,
      "question" : "The Sixth and the Eighth Five Year Plans covered the period 1980-1985 and 1992-1997 respectively. The Seventh Five Year Plan covered the period:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxMA==",
      "description" : "UGVyaW9kIGJldHdlZW4gMTk5MC05MiB3YXMgc2Vjb25kIHBsYW4gaG9saWRheS4gVGhlICBmaXJzdCBwbGFuIGhvbGlkYXkgd2FzIGJldHdlZW4gMTk2Ni02OS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1987-1992 ",
        "option2" : " 1986 -1991 ",
        "option3" : " 1985-1990 ",
        "option4" : " 1988 -1994 "
      }
    },
    {
      "index" : 11,
      "question" : "Economic Survey in India is published officially, every year by the:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxMQ==",
      "description" : "RWNvbm9teSBTdXJ2ZXkgaW4gSW5kaWEgaXMgcHVibGlzaGVkIG9mZmljaWFsbHksIGV2ZXJ5ICB5ZWFyIGJ5IHRoZSBNaW5pc3RyeSBvZiBGaW5hbmNlLCBHb3Z0LiBvZiAgSW5kaWEuIGFuZCBpc3N1ZWQgIGJlZm9yZSB0aGUgYW5udWFsIGJ1ZGdldC4gSXQgcmV2aWV3cyB0aGUgZGV2ZWxvcG1lbnQgaW4gdGhlICBJbmRpYW4gZWNvbm9teSBvdmVyIHRoZSBwcmV2aW91cyAxMiBtb250aHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Reserve Bank of India ",
        "option2" : " Planning Commission of India ",
        "option3" : " Ministry of Finance, Govt. of India ",
        "option4" : " Ministry of Industries, Govt. of India "
      }
    },
    {
      "index" : 12,
      "question" : "Which one of the following regions of the world supplies the maximum of our imported commodities (in terms of rupee value)?  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxMg==",
      "description" : "SW5kaWEgaW1wb3J0ZWQgbW9zdCBvZiB0aGVpciBjb21tb2RpdGllcyBmcm9tIEFzaWEgIGFuZCBPY2VhbmlhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Africa ",
        "option2" : " America ",
        "option3" : " Asia and Oceania ",
        "option4" : " Europe "
      }
    },
    {
      "index" : 13,
      "question" : "The planning process is the industries sector in India has assumed a relatively less important position in the nineties as compared to that in the earlier period. Which one of the following is not true in this regard?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxMw==",
      "description" : "U3RhdGVtZW50IChhKSwgKGIpIGFuZCAoYykgYXJlIHRydWUgd2hpY2ggZXhwbGFpbiB0aGUgIGRlY2xpbmluZyAgaW1wb3J0YW50IHBvc2l0aW9uIG9mIGluZHVzdHJpZXMgc2VjdG9yIGFmdGVyICBuaW5ldGllcyBpbiB0aGUgcGxhbm5pbmcgcHJvY2Vzcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " With the advent of liberalisation, industrial investment  development have largely been placed within the  domain of private and multinational sectors ",
        "option2" : " With market assuming a central place, the role of central  planning in many sectors has been rendered redundant ",
        "option3" : " The focus of planning has shifted to sectors like  human resource ",
        "option4" : " The nation's priorities have shifted away from "
      }
    },
    {
      "index" : 14,
      "question" : "Which one of the following is the objective of National Renewal Fund?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxNA==",
      "description" : "VGhlIGNvbmNlcHQgb2YgdGhlIE5hdGlvbmFsIFJlbmV3YWwgRnVuZCB3YXMgIGFubm91bmNlZCBieSB0aGUgR292ZXJubWVudCBhcyBhIHBhcnQgb2YgdGhlIE5ldyBJbmR1c3RyaWFsICBQb2xpY3ksIDE5OTEuIFRoZSBHb3Zlcm5tZW50IGVzdGFibGlzaGVkIHRoZSBOYXRpb25hbCAgUmVuZXdhbCBGdW5kIChOUkYpIGJ5IGEgR292ZXJubWVudCBvZiBJbmRpYSByZXNvbHV0aW9uICBvbiAzcmQgRmVicnVhcnkgLCAxOTkyLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " To safeguard the interests of workers who may be  affected by technological upgradation of industry or  closure of sick units ",
        "option2" : " To develop the core sector of the economy ",
        "option3" : " For the development of infrastructure such as energy,  transport communications and irrigation ",
        "option4" : " For human resource development such as full literacy, "
      }
    },
    {
      "index" : 15,
      "question" : "The Employment Assurance Scheme envisages financial assistance to rural areas for guaranteeing employment to at least:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxNQ==",
      "description" : "RW1wbG95bWVudCBBc3N1cmFuY2Ugc2NoZW1lIHdhcyBsYXVuY2hlZCBvbiAybmQgIE9jdG9iZXIsIDE5OTMuIEl0IGlzIG9wZW4gdG8gYWxsIGFkdWx0IHJ1cmFsIHBvb3Igd2hvIGFyZSBpbiAgbmVlZCBvZiB3YWdlIGVtcGxveW1lbnQuIEEgbWF4aW11bSBvZiB0d28gYWR1bHRzIHBlciAgZmFtaWx5IHdvdWxkIGJlIHByb3ZpZGVkIHdhZ2UgZW1wbG95bWVudCwgd2hlbiB0aGVyZSBpcyAgZGVtYW5kIGR1cmluZyBsZWFuIGFncmljdWx0dXJhbCBzZWFzb24sIHN1YmplY3QgdG8gIGF2YWlsYWJpbGl0eSBvZiBmdW5kcy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 50 percent of the men and women seeking jobs in rural  areas ",
        "option2" : " 50 percent of the men seeking jobs in rural areas ",
        "option3" : " one man and one woman in a rural family living below  the poverty line ",
        "option4" : " one person in a rural landless household living below "
      }
    },
    {
      "index" : 16,
      "question" : "A rise in 'SENSEX' means:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxNg==",
      "description" : "SW5jcmVhc2UgaW4gU0VOU0VYIHJlZmxlY3RzIHRoZSBvdmVyYWxsIG1vb2Qgb2YgdGhlICBlY29ub215LiBBIHJpc2UgaW4gaXQgbWVhbnMgdGhhdCBpbnZlc3RvcnMgYW5kIEZJSXMgYXJlICBwb3NpdGl2ZSBhYm91dCB0aGUgZ3Jvd3RoIG9mIEluZGlhbiBlY29ub215IGFuZCBleHBlY3QgIHRoYXQgaXQgd2lsbCBiZSBzdXN0YWluZWQgaW4gZnV0dXJlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " a rise in prices of shares of all companies registered  with Bombay Stock Exchange ",
        "option2" : " a rise in prices of shares of all companies registered  with National Stock Exchange ",
        "option3" : " an overall rise in prices of shares of group up companies  registered with Bombay Stock Exchange ",
        "option4" : " a rise in prices of shares of all companies belonging to a "
      }
    },
    {
      "index" : 17,
      "question" : "Assertion (A) : The rate of growth of India's exports has shown an appreciable increase after 1991.  Reason (R) : The Govt. of India has resorted to devaluation. ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxNw==",
      "description" : "RGV2YWx1YXRpb24gb2YgY3VycmVuY3kgaXMgY29uc2Npb3VzIGRlY2lzaW9uIHRha2VuICBieSBDZW50cmFsIGJhbmsgb2YgY291bnRyeSB0byBsb3dlciB0aGUgZXh0ZXJuYWwgdmFsdWUgb2YgIGRvbWVzdGljIGN1cnJlbmN5LiBBcyBhIHJlc3VsdCBvZiB0aGlzIEluZGlhbiBnb29kcyBiZWNvbWUgIGNoZWFwZXIgZm9yIEZvcmVpZ25lcnMuIEltcG9ydCBkZWNyZWFzZSBhbmQgZXhwb3J0cyAgaW5jcmVhc2VzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 18,
      "question" : "Match List I with List II and select the correct answer using the codes given below the lists:           List-I List-II A. UN Development 1. UN India Human Programme Development Report B. National Council 2. India Development of  Applied Economic Report Research C. Indira Gandhi 3. World Development Institute of Research Development Research D. World Bank 4. Human Development Report Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxOA==",
      "description" : "VU4gRGV2ZWxvcG1lbnQgcHJvZ3JhbW1lIGJyaW5ncyBvdXQgVU4gSW5kaWEgIEh1bWFuIERldmVsb3BtZW50IFJlcG9ydC4gTmF0aW9uYWwgY291bmNpbCBvZiBBcHBsaWVkICBFY29ub21pYyBSZXNlYXJjaCBicmluZ3Mgb3V0IEluZGlhIERldmVsb3BtZW50IFJlcG9ydC4gIEh1bWFuIERldmVsb3BtZW50IFJlcG9ydCBpcyBicmluZyBvdXQgYnkgd29ybGQgQmFuay4gIFdvcmxkIERldmVsb3BtZW50IFJlc2VhcmNoIGlzIGNhcnJpZWQgb3V0IGJ5IEluZGlyYSBHYW5kaGkgIEluc3RpdHV0ZSBvZiBEZXZlbG9wbWVudCBSZXNlYXJjaC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-1;  B-2; C-3; D-4 ",
        "option2" : " A-4;  B-2; C-1; D-3 ",
        "option3" : " A-2;  B-3; C-4; D-1 ",
        "option4" : " A-2;  B-1; C-4; D-3 "
      }
    },
    {
      "index" : 19,
      "question" : "'...instil into the vast millions of workers, men and women, who actually do the job, a sense of partnership and of cooperative performance...' The above passage relates to:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwxOQ==",
      "description" : "Q29tbXVuaXR5IERldmVsb3BtZW50IGlzIGEgcHJvY2VzcyB3aGVyZSAgY29tbXVuaXR5IG1lbWJlcnMgY29tZSB0b2dldGhlciB0byB0YWtlIGNvbGxlY3RpdmUgYWN0aW9uICBhbmQgZ2VuZXJhdGUgc29sdXRpb25zIHRvIGNvbW1vbiBwcm9ibGVtcy4gIEl0IHNlZWtzIHRvIGVtcG93ZXIgaW5kaXZpZHVhbHMgYW5kIGdyb3VwcyBvZiBwZW9wbGUgd2l0aCAgZXhwZW5kaXR1cmUsIGNpdmlsIGFkbWluaXN0cmF0aW9uKSwgZGV2ZWxvcG1lbnRhbCAgZXhwZW5kaXR1cmUgYW5kIGV4cGVuZGl0dXJlIGluY3VycmVkIG9uIHByb2plY3RzIHdoaWNoICByZW1haW5lZCB1bmZpbmlzaGVkIGluIHRoZSBlYXJsaWVyIHBsYW5zLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Planned Development ",
        "option2" : " Community Development ",
        "option3" : " Panchayati Raj System ",
        "option4" : " Integrated Development Programme "
      }
    },
    {
      "index" : 20,
      "question" : "Economic liberalisation in India started with:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyMA==",
      "description" : "RWNvbm9taWMgbGliZXJhbGl6YXRpb24gaW4gSW5kaWEgc3RhcnRlZCB3aXRoIGluZHVzdHJpYWwgIGRlLWxpY2Vuc2luZy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " substantial changes in industrial licensing policy ",
        "option2" : " the convertibility of Indian rupee ",
        "option3" : " doing away with procedural formalities for foreign direct  investment ",
        "option4" : " significant reduction in tax rates "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements:  The Indian rupee is fully convertible: 1. in respect of Current Account of Balance of payment 2. in respect of Capital Account of Balance of payment 3. into gold Which of these statements is/are correct ? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyMQ==",
      "description" : "SW4gcmVzcGVjdCBvZiBjYXBpdGFsIGFjY291bnQgb2YgYmFsYW5jZSBvZiBwYXltZW50LCAgdGhlIGluZGlhbiBydXBlZSBpcyBwYXJ0aWFsbHkgY29udmVydGlibGUgYWZ0ZXIgMTk5MS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 alone ",
        "option2" : " 3 alone ",
        "option3" : " 1 and 2 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 22,
      "question" : "The growth rate of per capita income at current prices is higher than that of per capita income at constant prices, because the latter takes into account the rate of :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyMg==",
      "description" : "VGhlIGdyb3d0aCByYXRlIG9mIHBlciBjYXBpdGEgaW5jb21lIGF0IGN1cnJlbnQgcHJpY2VzICBpcyBoaWdoZXIgdGhhbiB0aGF0IG9mIHBlciBjYXBpdGEgaW5jb21lIGF0IGNvbnN0YW50IHByaWNlcywgIGJlY2F1c2UgY3VycmVudCBwcmljZXMgYXJlIGluZmx1ZW5jZWQgYnkgdGhlIGVmZmVjdCBvZiBwcmljZSAgaW5mbGF0aW9uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " growth of population ",
        "option2" : " increase in price level ",
        "option3" : " growth of money supply ",
        "option4" : " increase in the wage rate "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following:  1. Market borrowing 2. Treasury bills 3. Special securities issued to RBI Which of these is/are components(s) of internal debt? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyMw==",
      "description" : "SW50ZXJuYWwgZGVidCBpcyB0aGF0IHBhcnQgb2YgdGhlIHRvdGFsIGRlYnQgdGhhdCBpcyBvd2VkICB0byBsZW5kZXJzIHdpdGhpbiB0aGUgY291bnRyeS4gTWFya2V0IGJvcnJvd2luZ3MsIFRyZWFzdXJ5ICBiaWxscyBhbmQgc3BlY2lhbCBzZWN1cml0aWVzIGlzc3VlZCB0byBSQkkgYXJlIGFsbCBzb3VyY2VzIG9mICBpbnRlcm5hbCBib3Jyb3dpbmdzIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 24,
      "question" : "Global capital flows to developing countries increased significantly during the nineties. In view of the East Asian financial crisis and Latin American experience, which type of inflow is good for the host country?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyNA==",
      "description" : "RkRJIGlzIGRlZmluZWQgYXMgaW52ZXN0bWVudCBieSBhIGZvcmVpZ24gbXVsdGluYXRpb25hbCAgb3IgaXRzIHN1YnNpZGlhcnkgb3IgYSBmb3JlaWduIGNvbXBhbnkgaW4gdGVybXMgb2Ygc2V0dGluZyB1cCAgYSAgcHJvamVjdCAgaW4gIGFub3RoZXIgIGNvdW50cnkgIGVpdGhlciAgYnkgIHdheSAgb2YgIGEgIDEwMCUgIHN1YnNpZGlhcnkgb3IgYnkgd2F5IG9mIGEgam9pbnQgdmVudHVyZS4gVGh1cywgRkRJICBpbnZlc3RtZW50IGlzIGxvbmcgdGVybSBpbiBuYXR1cmUuIFRodXMsIGl0IGNhbiBub3QgYmUgcHVsbGVkICBvdXQgb2YgdGhlIGNvdW50cnkgYXQgc2hvcnQgbm90aWNlLiAgSXQgaXMgYWxzbyBub24tZGVidCAgY3JlYXRpbmcuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Commercial loans ",
        "option2" : " Foreign Direct Investment ",
        "option3" : " Foreign Portfolio Investment ",
        "option4" : " External Commercial borrowings "
      }
    },
    {
      "index" : 25,
      "question" : "Five Year Plan in India is finally approved by:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyNQ==",
      "description" : "SW4gSW5kaWEgcGxhbnMgYXJlIGZvcm11bGF0ZWQgYnkgUGxhbm5pbmcgQ29tbWlzc2lvbiAgYW5kIGFyZSBmaW5hbGx5IGFwcHJvdmVkIGJ5IE5hdGlvbmFsIERldmVsb3BtZW50IENvdW5jaWwuICBBbGwgc3RhdGUgY2hpZWYgbWluaXN0ZXJzIGFyZSBtZW1iZXJzIG9mIE5EQy4gVGhlIE5EQyBpcyAgaGVhZGVkIGJ5IHByaW1lIG1pbmlzdGVyIG9mIEluZGlhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Union Cabinet ",
        "option2" : " President on the advice of Prime Minister ",
        "option3" : " Planning Commission ",
        "option4" : " National Development Council "
      }
    },
    {
      "index" : 26,
      "question" : "A country is said to be a debt trap if :  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyNg==",
      "description" : "RGVidCBUcmFwIGlzIGEgc2l0dWF0aW9uIHdoZXJlIHlvdSBhZGQgb24gYSBuZXcgZGVidCAgaW4gb3JkZXIgdG8gcmVwYXkgYW4gZXhpc3RpbmcgZGVidC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " it has to borrow to make interest payments on  outstanding loans ",
        "option2" : " It has to abide by the conditionalities imposed by the  International Monetary fund. ",
        "option3" : " it has been refused loans or aid by creditors abroad ",
        "option4" : " the World Bank charges a very high rate of interest on "
      }
    },
    {
      "index" : 27,
      "question" : "Which one of the following is the correct statement? Service tax is a/an:  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyNw==",
      "description" : "QWxsIHRheGVzIHdoaWNoIGFyZSB0aGUgcGVyc29uYWwgbGlhYmlsaXR5IG9mIGFuIGFzc2Vzc2VlICBjb21lIHVuZGVyIGRpcmVjdCB0YXhlcy4gVGhleSBpbmNsdWRlIGluY29tZSB0YXgsICBwcm9mZXNzaW9uYWwgdGF4LCAgd2VhbHRoIHRheCwgc2VjdXJpdGllcyB0cmFuc2FjdGlvbiB0YXgsICBjb21tb2RpdHkgdHJhbnNhY3Rpb24gdGF4IGFuZCB0aGUgbGlrZS4gT24gdGhlIG90aGVyIGhhbmQsICB0aGUgdGF4ZXMgd2hpY2ggYSBwZXJzb24gY2FuIHJlY292ZXIgZnJvbSBzb21lIG90aGVyIHBlcnNvbiAgYnV0IHRoZSBsaWFiaWxpdHkgb2Ygd2hpY2ggcmVtYWlucyBvZiB0aGUgcGVyc29uIGNvbGxlY3RpbmcgIHN1Y2ggdGF4ZXMgYXJlIGluZGlyZWN0IHRheGVzLiBUaGVzZSBhcmUgY3VzdG9tIGR1dHksIGV4Y2lzZSwgIHNlcnZpY2UgdGF4LCB2YXQsIENTVCBhbmQgdGhlIGxpa2UuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " direct tax levied by the Central Government. ",
        "option2" : " indirect tax levied by the Central Government. ",
        "option3" : " direct tax levied by the State Government. ",
        "option4" : " indirect tax levied by the State Government. "
      }
    },
    {
      "index" : 28,
      "question" : "During which Five Year Plan was the Emergency clamped, new elections took place and the Janata Party was elected?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyOA==",
      "description" : "VGhpcyBhbGwgaGFwcGVuZWQgZnJvbSAxOTc1LTc4IGR1cmluZyBmaWZ0aCBmaXZlIHllYXIgIHBsYW4gIHRoZSBwZXJpb2Qgb2Ygd2hpY2ggaXMgKDE5NzQtNzgpIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Third ",
        "option2" : " Fourth ",
        "option3" : " Fifth ",
        "option4" : " Sixth "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements regarding Indian Planning:  1. The Second Five-Year Plan emphasized on the establishment of heavy industries. 2. The Third Five-Year Plan introduced the concept of import substitution as a strategy for industrialization. E B D _8 34 2 Poverty, Planning, Finance  and Economic/Social Development D 15 Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwyOQ==",
      "description" : "VGhlIHNlY29uZCBmaXZlLXllYXIgcGxhbiBlbXBoYXNpemVkIG9uIHRoZSAgZGV2ZWxvcG1lbnQgb2YgdGhlIHB1YmxpYyBzZWN0b3IgYW5kICdyYXBpZCAgaW5kdXN0cmlhbGl6YXRpb24uIFRoZSAgdGhpcmQgZml2ZSAteWVhciBwbGFuLCBzdHJlc3NlZCBvbiAgYWdyaWN1bHR1cmUgYW5kIGltcHJvdmVtZW50IGluIHRoZSBwcm9kdWN0aW9uIG9mIGZvb2QgZ3JhaW5zICB3aXRoIGxvbmcgdGVybSBkZXZlbG9wbWVudCA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following brings out the publication called 'Energy Statistics' from time to time?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzMA==",
      "description" : "SXQgaXMgcHVibGlzaGVkIGJ5IE1pbmlzdHJ5IG9mIFN0YXRpc3RpY3MgYW5kIFByb2dyYW1tZSAgSW1wbGVtZW50YXRpb24sIENlbnRyYWwgU3RhdGlzdGljYWwgT3JnYW5pemF0aW9uLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Central Power Research Institute ",
        "option2" : " Planning Commission ",
        "option3" : " Power Finance Corporation Ltd. ",
        "option4" : " Central Statistical Organization "
      }
    },
    {
      "index" : 31,
      "question" : "In the context of independent India's economy, which one of the following was the earliest event to take place?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzMQ==",
      "description" : "TmF0aW9uYWxpemF0aW9uIG9mIFN0YXRlIEJhbmsgb2YgSW5kaWEgLSAxOTU1OyAgSW50cm9kdWN0aW9uIG9mIEZpcnN0IEZpdmUtWWVhciBQbGFuIC0gMTk1MTsgRW5hY3RtZW50IG9mICBCYW5raW5nIFJlZ3VsYXRpb24gQWN0IC0gMTk0OTsgTmF0aW9uYWxpemF0aW9uIG9mIEluc3VyYW5jZSAgQ29tcGFuaWVzIC0gMTk1NS01NiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Nationalization of Insurance companies ",
        "option2" : " Nationalization of State Bank of India ",
        "option3" : " Enactment of Banking Regulation Act ",
        "option4" : " Introduction of First Five-Year Plan "
      }
    },
    {
      "index" : 32,
      "question" : "The SEZ Act, 2005 which came, into effect in February 2006 has certain objectives. In this context, consider the following:  1. Development of infrastructure facilities. 2. Promotion of investment from foreign sources. 3. Promotion of exports of services only. Which of the above are the objectives of this Act? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzMg==",
      "description" : "VGhlIG9iamVjdGl2ZXMgb2YgZXN0YWJsaXNoaW5nIFNFWnMgU3BlY2lhbCBleHBvcnQgIFpvbmVzIGluY2x1ZGUgbWFraW5nIGF2YWlsYWJsZSBnb29kcyBhbmQgc2VydmljZXMgZnJlZSBvZiAgdGF4ZXMgYW5kIGR1dGllcyBzdXBwb3J0ZWQgYnkgYW4gaW50ZWdyYXRlZCBpbmZyYXN0cnVjdHVyZSAgZm9yIGV4cG9ydCBwcm9kdWN0aW9uLCBhbmQgc2luZ2xlIHdpbmRvdyBhcHByb3ZhbCAgbWVjaGFuaXNtIGFuZCBhIHBhY2thZ2Ugb2YgaW5jZW50aXZlcyB0byBhdHRyYWN0IGZvcmVpZ24gIGFuZCBkb21lc3RpYyBpbnZlc3RtZW50cyBmb3IgcHJvbW90aW5nIGV4cG9ydC1sZWQgZ3Jvd3RoLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 33,
      "question" : "A great deal of Foreign Direct Investment (FDI) to India comes from Mauritius than from many major and mature economies like UK and France. Why?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzMw==",
      "description" : "SW5kaWEgaGFzIGNvbXByZWhlbnNpdmUgRG91YmxlIFRheGF0IGlvbiAgQXZvaWRhbmNlIEFncmVlbWVudHMgKERUQUEpIHdpdGggMjMgY291bnRyaWVzLiBUaGlzICBtZWFucyB0aGF0IHRoZXJlIGFyZSBhZ3JlZWQgcmF0ZXMgb2YgdGF4IGFuZCBqdXJpc2RpY3Rpb24gIG9uIHNwZWNpZmllZCB0eXBlcyBvZiBpbmNvbWUgYXJpc2luZyBpbiBhIGNvdW50cnkgdG8gYSB0YXggIHJlc2lkZW50IG9mIGFub3RoZXIgY291bnRyeS4gVW5kZXIgdGhlIEluY29tZSBUYXggQWN0ICAxOTYxIG9mIEluZGlhLCB0aGVyZSBhcmUgdHdvIHNwZWNpZmljIHByb3Zpc2lvbnMsIFNlY3Rpb24gIDkwIGFuZCBTZWN0aW9uIDkxLCB3aGljaCBwcm92aWRlIHNwZWNpZmljIHJlbGllZiB0byAgdGF4cGF5ZXJzIHRvIHNhdmUgdGhlbSBmcm9tIERUQUEuIFNlY3Rpb24gOTAgaXMgZm9yICB0YXhwYXllcnMgd2hvIGhhdmUgcGFpZCB0aGUgdGF4IGluIGEgY291bnRyeSB3aXRoIHdoaWNoICBJbmRpYSBoYXMgc2lnbmVkIERUQUEsIHdoaWxlIFNlY3Rpb24gOTEgcHJvdmlkZXMgcmVsaWVmICB0byB0YXhwYXllcnMgd2hvIGhhdmUgcGFpZCB0YXggdG8gYSBjb3VudHJ5IHdpdGggd2hpY2ggIEluZGlhIGhhcyBub3Qgc2lnbmVkIGEgRFRBQS4gVGh1cywgSW5kaWEgZ2l2ZXMgcmVsaWVmIHRvICBib3RoIGtpbmQgb2YgdGF4cGF5ZXJzIE1hdXJpdGl1cyBieSBpdHNlbGYgaXMgYSBsb3cgdGF4IGNvdW50aW5nLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " India has preference for certain countries as regards  receiving FDI ",
        "option2" : " India has double taxation avoidance agreement with  Mauritius ",
        "option3" : " Most citizens of Mauritius have ethnic identity with  India and so they feel secure to invest in India ",
        "option4" : " Impending dangers of global climatic change prompt "
      }
    },
    {
      "index" : 34,
      "question" : "India-based Neutrino Observatory is included by the Planning Commission as a mega science project under the 11th Five-Year Plan. In this context, consider the following statements:  1. Neutrinos are chargeless elementary particles that travel close to the speed of light. 2. Neutrinos are created, in nuclear reactions of beta decay. 3. Neutrinos have a negligible, but non-zero mass 4. Trillions of Neutrinos pass through human body every second. Which of the statements given above are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzNA==",
      "description" : "QSBuZXV0cmlubyBpcyBhbiBlbGVtZW50YXJ5IHBhcnRpY2xlIHRoYXQgdXN1YWxseSB0cmF2ZWxzICBjbG9zZSB0byB0aGUgc3BlZWQgb2YgbGlnaHQsIGlzIGVsZWN0cmljYWxseSBuZXV0cmFsLCBhbmQgaXMgYWJsZSAgdG8gcGFzcyB0aHJvdWdoIG9yZGluYXJ5IG1hdHRlciBhbG1vc3QgdW5kaXN0dXJiZWQuIFRoaXMgIG1ha2VzIG5ldXRyaW5vcyBleHRyZW1lbHkgZGlmZmljdWx0IHRvIGRldGVjdC4gTmV1dHJpbm9zIGhhdmUgIGEgdmVyeSBzbWFsbCwgYnV0IG5vbnplcm8gcmVzdCBtYXNzLiBOZXV0cmlub3MgYXJlIGFmZmVjdGVkICBvbmx5IGJ5IGEgJ3dlYWsnIHN1Yi1hdG9taWMgZm9yY2Ugb2YgbXVjaCBzaG9ydGVyIHJhbmdlICB0aGFuIGVsZWN0cm9tYWduZXRpc20sIGFuZCBhcmUgdGhlcmVmb3JlIGFibGUgdG8gcGFzcyB0aHJvdWdoICBncmVhdCBkaXN0YW5jZXMgaW4gbWF0dGVyIHdpdGhvdXQgYmVpbmcgYWZmZWN0ZWQgYnkgaXQuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1, 2 and 3 only ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1,"
      }
    },
    {
      "index" : 35,
      "question" : "Inclusive growth as enunciated in the Eleventh Five Year Plan does not include one of the following:  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzNQ==",
      "description" : "SW5jbHVzaXZlIGdyb3d0aCBpcyAnYnJvYWQtYmFzZWQgZ3Jvd3RoJywgJ3NoYXJlZCAgZ3Jvd3RoJywgYW5kICdwcm8tcG9vciBncm93dGgnLiBJdCBleGNsdWRlcyB0aGUgY2FwaXRhbCAgbWFya2V0cyB3aGljaCBpcyBsZWZ0IHRvIG9wZXJhdGUgYnkgaXRzZWxmIGluIHRoZSBvcGVuIG1hcmtldC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Reduction of poverty ",
        "option2" : " Extension of employment opportunities ",
        "option3" : " Strengthening of capital market ",
        "option4" : " Reduction of gender inequality "
      }
    },
    {
      "index" : 36,
      "question" : "Who of the following shall cause every recommendation made by the finance Commission to be laid before each House of Parliament?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzNg==",
      "description" : "QXMgcGVyIHByb3Zpc2lvbnMgZ2l2ZW4gdW5kZXIgQXJ0aWNsZSAyODEgb2YgdGhlIEluZGlhbiAgQ29uc3RpdHV0aW9uIHRoZSByZWNvbW1lbmRhdGlvbnMgb2YgdGhlIGZpbmFuY2UgIGNvbW1pc3Npb24gZ28gdG8gdGhlIHByZXNpZGVudCB3aG8gaXMgY29uc3RpdHV0aW9uYWxseSAgYm91bmQgdG8gcGxhY2UgaXQgYmVmb3JlIHRoZSB0d28gaG91c2VzIG9mIHRoZSBwYXJsaWFtZW50LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The President of India ",
        "option2" : " The Speaker of Lok Sabha ",
        "option3" : " The Prime Minister of India ",
        "option4" : " The Union Finance Minister "
      }
    },
    {
      "index" : 37,
      "question" : "Which one of the following is responsible for the preparation and presentation of Union Budget to the Parliament?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzNw==",
      "description" : "VGhlIERFQSBvciB0aGUgRGVwYXJ0bWVudCBvZiBFY29ub21pYyBBZmZhaXJzIGlzICByZXNwb25zaWJsZSBmb3IgcHJlcGFyYXRpb24gYW5kIHByZXNlbnRhdGlvbiB0byB0aGUgIFBhcmxpYW1lbnQgb2YgQ2VudHJhbCBCdWRnZXQgYW5kIHRoZSBCdWRnZXRzIGZvciB0aGUgU3RhdGUgIEdvdmVybm1lbnRzIHVuZGVyIFByZXNpZGVudCdzIFJ1bGUgYW5kIFVuaW9uIFRlcnJpdG9yeSAgQWRtaW5pc3RyYXRpb24uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Department of Revenue ",
        "option2" : " Department of Economic Affairs ",
        "option3" : " Department of Financial Services ",
        "option4" : " Department of Expenditure "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following actions by the Government:  1. Cutting the tax rates 2. Increasing the government spending 3. Abolishing the subsidies in the context of economic recession Which of the above actions can be considered a part of the 'fiscal stimulus' package? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzOA==",
      "description" : "QWJvbGlzaGluZyB0aGUgc3Vic2lkaWVzIHdpbGwgbGVhZCB0byBoaWdoZXIgcHJpY2VzIG9mICBnb29kcyBhbmQgc2VydmljZXMgd2hpY2ggYXJlIHN1YnNpZHplZC4gQSByZWR1Y3Rpb24gaW4gdGhlICB0YXggcmF0ZSB3b3VsZCBiZSBhIHN0aW11bHVzLiBXaGlsZSBpbmNyZWFzZSBpbiBnb3Zlcm5tZW50ICBleHBlbmRpdHVyZSB3b3VsZCBpbmNyZWFzZSB0aGUgbGV2ZWwgb2YgZGVtYW5kIGluIHRoZSAgZWNvbm9teS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 39,
      "question" : "In the context of India's Five Year Plans, a shift in the pattern of industrialization, with lower emphasis on heavy industries and more on infrastructure begins in  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXwzOQ==",
      "description" : "SXQgd2FzIGR1cmluZyBlaWdodGggcGxhbiBwZXJpb2QgKDE5OTItOTcpIHRoYXQgIGVtcGhhc2lzIHdhcyBwdXQgb24gaW5mcmFzdHJ1Y3R1cmUgZGV2ZWxvcG1lbnQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Fourth Plan ",
        "option2" : " Sixth Plan ",
        "option3" : " Eighth Plan ",
        "option4" : " Tenth Plan "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the Nationa1 Investment Fund to which the disinvestment proceeds are routed, consider the following statements:  1. The assets in the National Investment Fund are managed by the Union Ministry of Finance. 2. The National Investment Fund is to be maintained within the Consolidated Fund of India. 3. Certain Asset Management companies are appointed as the fund managers. 4. A certain proportion of annual income is used for financing select social sectors. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw0MA==",
      "description" : "T24gMjcgSmFudWFyeSAyMDA1LCB0aGUgR292ZXJubWVudCBoYWQgZGVjaWRlZCB0byAgY29uc3RpdHV0ZSBhICdOYXRpb25hbCBJbnZlc3RtZW50IEZ1bmQnIChOSUYpIGludG8gd2hpY2ggIHJlYWxpemF0aW9uIGZyb20gc2FsZSBvZiBtaW5vcml0eSBzaGFyZWhvbGRpbmcgb2YgdGhlICBHb3Zlcm5tZW50IGluIENQU0VzIHdvdWxkIGJlIGNoYW5uZWxpc2VkLiBUaGlzIGZ1bmQgaXMgIG1hbmFnZWQgYnkgcHJvZmVzc2lvbmFscyBhbmQgYSBwYXJ0IG9mIGl0IGlzIHVzZWQgZm9yIHVzZSBpbiAgc29jaWFsIHNlY3RvciAtIGxpa2UgZWR1Y2F0aW9uLCBoZWFsdGggY2FyZSBhbmQgZW1wbG95bWVudC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 3 and 4 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 41,
      "question" : "In India, the tax proceeds of which one of the following as a percentage of gross tax revenue has significantly declined in the last five years?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw0MQ==",
      "description" : "VGhlIGV4Y2lzZSBkdXR5J3Mgc2hhcmUgaW4gdGhlIHRvdGFsIHRheCByZXZlbnVlLCB3aGljaCAgd2FzIDQxLjMgcGVyY2VudCBpbiAxOTkyLTkzLCBkZWNsaW5lZCB0byAyNS4xIHBlcmNlbnQgaW4gMjAwNi0gIDA3LiBUaGUgY3VzdG9tcyBkdXR5J3Mgc2hhcmUgaW4gdGhlIHRvdGFsIHRheCByZXZlbnVlLCB3aGljaCAgd2FzIDMxLjkgcGVyY2VudCBpbiAxOTkyLTkzLCBmZWxsIHRvIDE3LjUgcGVyY2VudCBpbiAyMDA2LTA3LCAgYXMgYSByZXN1bHQgb2YgbWFzc2l2ZSBzdHJ1Y3R1cmluZyBvbiBleGNpc2UgYW5kIGN1c3RvbXMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Service tax ",
        "option2" : " Personal income tax ",
        "option3" : " Excise duty ",
        "option4" : " Corporation tax "
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following authorities makes recommendation to the Governor of a State as to the principles for determining the taxes and duties which may be appropriated by the Panchayats in that particular State?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw0Mg==",
      "description" : "U3RhdGUgRmluYWNlIENvbW1pc3Npb24gZ292ZXJucyB0aGUgZGlzdHJpYnV0aW9uICBiZXR3ZWVuIHRoZSBTdGF0ZSBhbmQgdGhlIFBhbmNoYXlhdHMgb2YgdGhlIG5ldCBwcm9jZWVkcyAgb2YgdGhlIHRheGVzLCBkdXRpZXMsIHRvbGxzIGFuZCBmZWVzIGxldmlhYmxlIGJ5IHRoZSBTdGF0ZSwgIHdoaWNoIG1heSBiZSBkaXZpZGVkIGJldHdlZW4gdGhlbSB1bmRlciB0aGlzIFBhcnQgYW5kIHRoZSAgYWxsb2NhdGlvbiBiZXR3ZWVuIHRoZSBQYW5jaGF5YXRzIGF0IGFsbCBsZXZlbHMgb2YgdGhlaXIgIHJlc3BlY3RpdmUgc2hhcmVzIG9mIHN1Y2ggcHJvY2VlZHM7IHRoZSBkZXRlcm1pbmF0aW9uIG9mICB0aGUgdGF4ZXMsIGR1dGllcywgdG9sbHMgYW5kIGZlZXMgd2hpY2ggbWF5IGJlIGFzc2lnbmVkIGFzLCAgb3IgYXBwcm9wcmlhdGVkIGJ5LCB0aGUgUGFuY2hheWF0czsgdGhlIGdyYW50cy1pbi1haWQgdG8gdGhlICBQYW5jaGF5YXRzIGZyb20gdGhlIENvbnNvbGlkYXRlZCBGdW5kIG9mIHRoZSBTdGF0ZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " District Planning Committees ",
        "option2" : " State Finance Commission ",
        "option3" : " Finance ministry of that State ",
        "option4" : " Panchayati Raj Ministry of that State "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements: In India, taxes on transactions in Stock Exchanges and Futures Markets are  1. levied by the Union 2. collected by the States Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZXw0Mw==",
      "description" : "SW4gSW5kaWEgdGF4ZXMgb24gdHJhbnNhY3Rpb25zIGluIFN0b2NrIEV4Y2hhbmdlIGFuZCAgRnV0dXJlIE1hcmtldHMgYXJlIGxldmllZCBhbmQgY29sbGVjdGVkIGJ5IHRoZSBVbmlvbiBHb3Z0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxQb3ZlcnR5LCBQbGFubmluZywgRmluYW5jZQ==",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 44,
      "question" : "India has experienced persistent and high food inflation in the recent past. What could be the reasons? 1. Due to a gradual switchover to the cultivation of commercial crops, the area under the cultivation of food grains has steadily decreased in the last five years by about 30%.  D 16 2. As a consequence of increasing incomes, the consumption patterns of the people have undergone a significant change. 3. The food supply chain has structural constraints.  Which of the statements given above are correct ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDQ=",
      "description" : "Tm90d2l0aHN0YW5kaW5nIHNvbWUgbW9kZXJhdGlvbiwgZm9vZCBwcmljZSBpbmZsYXRpb24gIGhhcyByZW1haW5lZCBwZXJzaXN0ZW50bHkgZWxldmF0ZWQgZm9yIG92ZXIgYSB5ZWFyIG5vdywgIHJlZmxlY3RpbmcgaW4gcGFydCB0aGUgc3RydWN0dXJhbCBkZW1hbmQtc3VwcGx5IG1pc21hdGNoZXMgIGluIHNldmVyYWwgY29tbW9kaXRpZXMuIFRoZSB0cmVuZCBvZiBmb29kIGluZmxhdGlvbiB3YXMgICBEIDI0ICBwb2ludGluZyBhdCBub3Qgb25seSBzdHJ1Y3R1cmFsIGRlbWFuZC1zdXBwbHkgbWlzbWF0Y2hlcyAgaW4gY29tbW9kaXRpZXMgY29tcHJpc2VzIHRoZSBlc3NlbnRpYWwgY29uc3VtcHRpb24gYmFza2V0ICBidXQgYWxzbyBhdCBjaGFuZ2luZyBjb25zdW1wdGlvbiBwYXR0ZXJucy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 45,
      "question" : "In terms of economy, the visit by foreign nationals to witness the XIX commonwealth games in India amounted to  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDU=",
      "description" : "SW5jb21lIGZyb20gJ3RvdXJpc20nIGlzIGFuIGludmlzaWJsZSBleHBvcnQgYW5kIGJyaW5ncyAgZm9yZWlnbiBleGNoYW5nZSBpbiB0aGUgY291bnRyeS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Export ",
        "option2" : " Import ",
        "option3" : " Production ",
        "option4" : " Consumption "
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following statements appropriately describes the 'fiscal stimulus' ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDY=",
      "description" : "R292ZXJubWVudHMgdXNlIGZpc2NhbCBwb2xpY3kgdG8gaW5mbHVlbmNlIHRoZSBsZXZlbCBvZiAgYWdncmVnYXRlIGRlbWFuZCBpbiB0aGUgZWNvbm9teS4gSXQgaXMgYW4gZWZmb3J0IHRvIGFjaGlldmUgIGVjb25vbWljIG9iamVjdGl2ZXMgb2YgcHJpY2Ugc3RhYmlsaXR5LCBmdWxsIGVtcGxveW1lbnQsIGFuZCAgZWNvbm9taWMgZ3Jvd3RoLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It is a massive investment by the government in  manufacturing sector to ensure the supply of goods  to meet the demand surge caused by rapid economic  growth. ",
        "option2" : " It is an intense affirmative action of the government to  boost economic activity in the country. ",
        "option3" : " It is government's intensive action on financial  institutions to ensure disbursement of loans to  agriculture and allied sectors to promote greater food  production and contain food inflation. ",
        "option4" : " It is an extreme affirmative action by the government "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following actions which the government can take :  1. Devaluing the domestic currency. 2. Reduction in the export subsidy. 3. Adopting suitable policies which attract greater FDI and more funds from FIIs. Which of the above action/actions can help in reducing the current account deficit ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDc=",
      "description" : "Q3VycmVudCBBY2NvdW50IGRlZmljaXQgaXMgZXhjZXNzIG9mIEV4cG9ydHMgb3ZlciAgaW1wb3J0cy4gQWZ0ZXIgZGV2YWx1YXRpb24gb2YgZG9tZXN0aWMgY3VycmVuY3ksIGRvbWVzdGljICBnb29kcyB3b3VsZCBiZWNvbWUgY2hlYXBlciB3aGljaCB3aWxsIGNyZWF0ZSBhZGRpdGlvbmFsICBkZW1hbmQgZm9yIGNvdW50cmllcyBwcm9kdWN0cyBpbiB0aGUgd29ybGQgbWFya2V0cy4gIFJpc2luZyBjYXBpdGFsIEluZmxvdyB0aHJvdWdoIEZESSBhbmQgRklJIG1heSBhcHByZWNpYXRlICB0aGUgZG9tZXN0aWMgY3VycmVuY3kgYW5kIGNhbiB3b3JzZW4gYSBjb3VudHJ5J3MgY3VycmVudCAgYWNjb3VudCBieSBpbmNyZWFzaW5nIG1vcmUgaW1wb3J0cyBhbmQgcmVkdWNpbmcgZXhwb3J0cywgIEZESSBhbmQgRklJIHJlcHJlc2VudHMgbm9uLWRlYnQgbGlhYmlsaXRpZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 3 only ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 48,
      "question" : "Both Foreign Direct Investment (FDI) and Foreign Institutional Investor (FII) are related to investment in a country. Which one of the following statements best represents an important difference between the two ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDg=",
      "description" : "Rm9yZWlnbiBEaXJlY3QgSW52ZXN0bWVudCBvbmx5IHRhcmdldHMgYSBzcGVjaWZpYyAgZW50ZXJwcmlzZS4gSXQgYWltcyB0byBpbmNyZWFzZSB0aGUgZW50ZXJwcmlzZXMgY2FwYWNpdHkgb3IgIHByb2R1Y3Rpdml0eSBvciBjaGFuZ2UgaXRzIG1hbmFnZW1lbnQgY29udHJvbC4gVGhlIEZJSSAgaW52ZXN0bWVudCBmbG93cyBvbmx5IGludG8gdGhlIHNlY29uZGFyeSBtYXJrZXQuIEl0IGhlbHBzICBpbiBpbmNyZWFzaW5nIGNhcGl0YWwgYXZhaWxhYmlsaXR5IGluIGdlbmVyYWwgcmF0aGVyIHRoYW4gIGVuaGFuY2luZyB0aGUgY2FwaXRhbCBvZiBhIHNwZWNpZmljIGVudGVycHJpc2UuIFRoZSBGb3JlaWduICBEaXJlY3QgSW52ZXN0bWVudCBpcyBjb25zaWRlcmVkIHRvIGJlIG1vcmUgc3RhYmxlIHRoYW4gIEZvcmVpZ24gSW5zdGl0dXRpb25hbCBJbnZlc3Rvci4gRkRJIG5vdCBvbmx5IGJyaW5ncyBpbiBjYXBpdGFsICBidXQgYWxzbyBoZWxwcyBpbiBnb29kIGdvdmVybmFuY2UgcHJhY3Rpc2VzIGFuZCBiZXR0ZXIgIG1hbmFnZW1lbnQgc2tpbGxzIGFuZCBldmVuIHRlY2hub2xvZ3kgdHJhbnNmZXIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " FII helps bring better management skills and  technology, while FDI only brings in capital. ",
        "option2" : " FII helps in increasing capital availability in general,  while FDI only targets specific sectors. ",
        "option3" : " FDI flows only into the secondary market while FII  targets primary market ",
        "option4" : " FII is considered to be more stable than FDI. "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to 'Aam Admi Bima Yojana'', consider the following statements ? 1. The member insured under the scheme must be the head of the family or an earning member of the family in a rural landless house-hold. 2. The member insured must be in the age group of 30 to 65 years. 3. There is a provision for free scholarship for up to two children of the insured who are studying between classes 9 and 12.  Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NDk=",
      "description" : "VGhlIHN0YXRlbWVudHMgMXN0IGFuZCAzcmQgYXJlIGNvcnJlY3QsIGJ1dCAybmQgIHN0YXRlbWVudCBpcyB3cm9uZyBiZWNhdXNlLCB0aGUgbWVtYmVyIHNob3VsZCBiZSBhZ2VkICBiZXR3ZWVuIDE4IGFuZCA1OSB5ZWFycyBub3QgMzAgYW5kIDY1IHllYXJzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 50,
      "question" : "Microfinance is the provision of financial services to people of low-income groups. This includes both the consumers and the self-employed. The service/services rendered under microfinance is/are :  1. Credit facilities 2. Savings facilities 3. Insurance facilities 4. Fund Transfer facilities Select the correct answer using the codes given below the lists ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTA=",
      "description" : "TWljcm9maW5hbmNlIGlzIGEgbW92ZW1lbnQgd2hvc2Ugb2JqZWN0IGlzICJhIHdvcmxkICBpbiB3aGljaCBhcyBtYW55IHBvb3IgYW5kIG5lYXItcG9vciBob3VzZWhvbGRzIGFzICBwb3NzaWJsZSBoYXZlIHBlcm1hbmVudCBhY2Nlc3MgdG8gYW4gYXBwcm9wcmlhdGUgcmFuZ2Ugb2YgIGhpZ2ggcXVhbGl0eSBmaW5hbmNpYWwgc2VydmljZXMsIGluY2x1ZGluZyBub3QganVzdCBjcmVkaXQgYnV0ICBhbHNvIHNhdmluZ3MsIGluc3VyYW5jZSwgYW5kIGZ1bmQgdHJhbnNmZXJzLiIg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 51,
      "question" : "Among the following who are eligible to benefit from the 'Mahatma Gandhi National Rural Employment Guarantee Act'?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTE=",
      "description" : "QWxsIGFkdWx0IG1lbWJlcnMgb2YgdGhlIGhvdXNlaG9sZCB3aG8gcmVnaXN0ZXJlZCAgY2FuIGFwcGx5IGZvciB3b3JrLiBUbyByZWdpc3RlciwgdGhleSBoYXZlIHRvOiAgQmUgbG9jYWwgcmVzaWRlbnRzIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Adult members of only the scheduled caste and  scheduled tribe households ",
        "option2" : " Adult members of below poverty line (BPL) households ",
        "option3" : " Adult members of households of all backward  communities ",
        "option4" : " Adult members of any household "
      }
    },
    {
      "index" : 52,
      "question" : "With reference to the Finance Commission of India, which of the following statements is correct ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTI=",
      "description" : "VGhlIENvbW1pc3Npb24gc2hhbGwgbWFrZSByZWNvbW1lbmRhdGlvbnMgYXMgdG8gIHRoZSBmb2xsb3dpbmcgbWF0dGVycywgbmFtZWx5IDogIChpKSBUaGUgZGlzdHJpYnV0aW9uIGJldHdlZW4gdGhlIFVuaW9uIGFuZCB0aGUgU3RhdGVzIG9mICB0aGUgbmV0IHByb2NlZWRzIG9mIHRheGVzIHdoaWNoIGFyZSB0byBiZSwgb3IgbWF5IGJlLCBkaXZpZGVkICBiZXR3ZWVuIHRoZW0gdW5kZXIgQ2hhcHRlciBJIFBhcnQgWElJIG9mIHRoZSBDb25zdGl0dXRpb24gIGFuZCB0aGUgYWxsb2NhdGlvbiBiZXR3ZWVuIHRoZSBTdGF0ZXMgb2YgdGhlIHJlc3BlY3RpdmUgIHNoYXJlcyBvZiBzdWNoIHByb2NlZWRzOyAgKGlpKSBUaGUgcHJpbmNpcGxlcyB3aGljaCBzaG91bGQgZ292ZXJuIHRoZSBncmFudHMtaW4tYWlkICBvZiB0aGUgcmV2ZW51ZXMgb2YgdGhlIFN0YXRlcyBvdXQgb2YgdGhlIENvbnNvbGlkYXRlZCAgRnVuZCBvZiBJbmRpYSBhbmQgdGhlIHN1bXMgdG8gYmUgcGFpZCB0byB0aGUgU3RhdGVzIHdoaWNoICBhcmUgaW4gbmVlZCBvZiBhc3Npc3RhbmNlIGJ5IHdheSBvZiBncmFudHMtaW4tYWlkIG9mIHRoZWlyICByZXZlbnVlcyB1bmRlciBhcnRpY2xlIDI3NSBvZiB0aGUgQ29uc3RpdHV0aW9uIGZvciAgcHVycG9zZXMgb3RoZXIgdGhhbiB0aG9zZSBzcGVjaWZpZWQgaW4gdGhlIHByb3Zpc2lvbnMgdG8gIGNsYXVzZSAoMSkgb2YgdGhhdCBhcnRpY2xlOyBhbmQgIChpaWkpIFRoZSBtZWFzdXJlcyBuZWVkZWQgdG8gYXVnbWVudCB0aGUgQ29uc29saWRhdGVkICBGdW5kIG9mIGEgU3RhdGUgdG8gc3VwcGxlbWVudCB0aGUgcmVzb3VyY2VzIG9mIHRoZSAgUGFuY2hheWF0cyBhbmQgTXVuaWNpcGFsaXRpZXMgaW4gdGhlIFN0YXRlIG9uIHRoZSBiYXNpcyBvZiAgdGhlIHJlY29tbWVuZGF0aW9ucyBtYWRlIGJ5IHRoZSBGaW5hbmNlIENvbW1pc3Npb24gb2YgIHRoZSBTdGF0ZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It encourages the inflow of foreign capital for  infrastructure development ",
        "option2" : " It facilitates the proper distribution of finances among  the Public Sector Undertakings ",
        "option3" : " It ensures transparency in financial administration ",
        "option4" : " None of the statements (a), (b) and (c) given above is "
      }
    },
    {
      "index" : 53,
      "question" : "What is the difference between 'vote-on-account' and 'interim budget' ?  1. The provision of a 'vote-on-account'' is used by a regular Government, while an 'interim budget'' is a provision used by a caretaker Government 2. A 'vote-on-account'' only deals with the expenditure in Government budget, while an 'interim budget'' includes both expenditure and receipts Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTM=",
      "description" : "U3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QgYXMgY2FyZXRha2VyIEdvdmVybm1lbnQgaXMgIHRoZSBnb3Zlcm5tZW50IHdoaWNoIGlzIHJlYWR5IHRvIEdvLCBpdCBkb2VzIG5vdCBwcmVzZW50ICB0aGUgSW50ZXJpbSBCdWRnZXQuIFRoZSBJbnRlcmltIEJ1ZGdldCBpcyBwcmVzZW50ZWQgYnkgdGhlICBJbmNvbWluZyBHb3Zlcm5tZW50IG9yIG5ldyBHb3Zlcm5tZW50IHdoaWNoIGhhcyAgZGlmZmVyZW50IGZpc2NhbCBhbmQgcmV2ZW51ZSBwbGFucyBmcm9tIHRoZSBvdXRnb2luZyAgR292ZXJubWVudC4gIFMuTi4gVm90ZSBvbiBhY2NvdW50IEludGVyaW0gQnVkZ2V0ICAxIEl0IGRlYWxzIG9ubHkgd2l0aCB0aGUgICBleHBlbmRpdHVyZSBzaWRlIG9mIHRoZSAgIGdvdmVybm1lbnQgYnVkZ2V0LiAgSXQgaW5jbHVkZXMgYm90aCAgIGV4cGVuZGl0dXJlcyBhbmQgICByZWNlaXB0cyBvZiB0aGUgICBnb3Zlcm5tZW50J3MgYnVkZ2V0LiAgMiBJdCBpcyBmb3Igb25seSB0d28gb3IgICB0aHJlZSBtb250aHMuICBJdCBpcyBmb3Igb25lIHllYXIuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 54,
      "question" : "Why is the offering of 'teaser loans'' by commercial banks a cause of economic concern ? 1. The teaser loans are considered to be an aspect of sub-prime lending and banks may be exposed to the risk of defaulters in future. 2. In India, the teaser loans are mostly given to inexperienced entrepreneurs to set up manufacturing or export units.  Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTQ=",
      "description" : "VGhlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYmVjYXVzZSBpdCBpbmNsdWRlcyB0aGUgIGRlZmluaXRpb24gb2YgdGVhc2VyIGxvYW5zIGJ1dCB0aGUgc3RhdGVtZW50ICgyKSBpcyBub3QgY29ycmVjdCwgIGJlY2F1c2UgaW4gSW5kaWEgdGVhc2VyIGxvYW4gaXMgcHJvdmlkZWQgdG8gdGhlIGhvbWUgYnV5ZXJzICBub3Qgc2V0dGluZyB1cCBtYW51ZmFjdHVyaW5nIG9yIGV4cG9ydCB1bml0cy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 55,
      "question" : "Which of the following can aid in furthering the Government's objective of inclusive growth ?  1. Promoting Self-Help Groups. 2. Promoting Micro Small and Medium Enterprises. 3. Implementing the Right to Education Act. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTU=",
      "description" : "VGhlIGNvbmNlcHQgb2YgdGhlIGluY2x1c2l2ZSBncm93dGggaXMgYmFzZWQgb24gYm90aCAgZWNvbm9taWMgYW5kIHNvY2lhbCBlbXBvd2VybWVudCBvZiBvcmRpbmFyeSBhbmQgdW5kZXIgIHByaXZpbGVnZWQgaW5kaXZpZHVhbHMuIFRodXMgYWxsIHRoZSBzdGF0ZW1lbnQgYXJlIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1,2 an 3 only "
      }
    },
    {
      "index" : 56,
      "question" : "Why is the Government of India disinvesting its equity in the Central Public Sector Enterprises (CPSEs) ? 1. The Government intends to use the revenue earned from the disinvestment mainly to pay back the external debt. 2. The Government no longer intends to retain the management control of the CPSEs  E B D _8 34 2 Poverty, Planning, Finance  and Economic/Social Development D 17 Which the correct statements given above is/are correct ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTY=",
      "description" : "V2hlbiB3ZSBzYXkgICdNYWlubHknICB0aGUgIG1vbmV5IGlzICB0byAgYmUgIHVzZWQgIHRvICBwYXkgdGhlIGV4dGVybmFsIGRlYnQsIGl0IGlzIG5vdCBjb3JyZWN0IHRvIHNheSBzby4gR292ZXJubWVudCAgdGhvdWdoICdtYXkgaW50ZW5kJyB0byByZXRhaW4gdGhlIG1hbmFnZW1lbnQgY29udHJvbCwgYnV0ICB0aGVyZSBhcmUgZmlzY2FsIGNvbnN0cmFpbnRzLCB0aGF0IGluZHVjZSB0aGUgZ292ZXJubWVudCB0byAgZ28gZm9yIGRpc2ludmVzdG1lbnQuIEJvdGggc3RhdGVtZW50cyBhcmUgTk9UIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 57,
      "question" : "Economic growth is usually coupled with  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTc=",
      "description" : "SW5mbGF0aW9uIGFuZCBlY29ub21pYyBncm93dGggYXJlIHBhcmFsbGVsIGxpbmVzIGFuZCAgY2FuIG5ldmVyIG1lZXQuIEluZmxhdGlvbiByZWR1Y2VzIHRoZSB2YWx1ZSBvZiBtb25leSBhbmQgIG1ha2VzIGl0IGRpZmZpY3VsdCBmb3IgdGhlIGNvbW1vbiBwZW9wbGUuIEluZmxhdGlvbiBhbmQgIGVjb25vbWljIGdyb3d0aCBhcmUgaW5jb21wYXRpYmxlIGJlY2F1c2UgdGhlIGZvcm1lciBhZmZlY3RzICBhbGwgc2VjdG9ycyBhcyBpbmRpY2F0ZWQgYnkgQ1BJIG9yIENvbnN1bWVyIFByaWNlIEluZGV4LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Deflation ",
        "option2" : " Inflation ",
        "option3" : " Stagflation ",
        "option4" : " Hyperinflation "
      }
    },
    {
      "index" : 58,
      "question" : "The lowering of Bank Rate by the Reserve Bank of India leads to  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTg=",
      "description" : "QmFuayByYXRlIHJlZmVycyB0byB0aGUgb2ZmaWNpYWwgaW50ZXJlc3QgcmF0ZSBhdCB3aGljaCAgUkJJIHdpbGwgcHJvdmlkZSBsb2FucyB0byB0aGUgYmFua2luZyBzeXN0ZW0gd2hpY2ggaW5jbHVkZXMgIGNvbW1lcmNpYWwvY29vcGVyYXRpdmUgICBiYW5rcywgZGV2ZWxvcG1lbnQgYmFua3MgZXRjLiAgd2hlbiBSQkkgbG93ZXJzIHRoZSBiYW5rIHJhdGUsIHRoZSBjb3N0IG9mIGJvcnJvd2luZyBmb3IgIGJhbmtzIGRlY3JlYXNlcyBhbmQgdGhlIGNyZWRpdCB2b2x1bWUgZ2V0cyBpbmNyZWFzZWQgIGxlYWRpbmcgdG8gaW5jcmVhc2UgaW4gbW9uZXkgYW5kIG1vcmUgbGlxdWlkaXR5IGluIHRoZSBtYXJrZXQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " more liquidity in the market ",
        "option2" : " less liquidity in the market ",
        "option3" : " no change in the liquidity in the market ",
        "option4" : " mobilization of more deposits by commercial banks "
      }
    },
    {
      "index" : 59,
      "question" : "How do District Rural Development Agencies (DRDAs) help in the reduction of rural poverty in India?  1. DRDAs act as Panchayati Raj Institutions in certain specified backward regions of the country. 2. DRDAs undertake area-specific scientific study of the causes of poverty and malnutrition and prepare detailed remedial measures. 3. DRDAs secure inter-sectoral and inter-departmental coordination and cooperation for effective implementation of anti-poverty programmes. 4. DRDAs watch over and ensure effective utilization of the funds intended for anti-poverty programmes. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NTk=",
      "description" : "RFJEQSBoYXMgdHJhZGl0aW9uYWxseSBiZWVuIHRoZSBwcmluY2lwYWwgb3JnYW4gYXQgdGhlICBkaXN0cmljdCBsZXZlbCB0byBvdmVyc2VlIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBhbnRpLXBvdmVydHkgIHByb2dyYW1tZXMgb2YgdGhlIE1pbmlzdHJ5IG9mIFJ1cmFsIERldmVsb3BtZW50LiBJdCBkb2VzICBub3QgYWN0cyBhcyBQYW5jaGF5YXRpIFJhaiBJbnN0aXR1dGlvbnMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 60,
      "question" : "The Multi-dimensional Poverty Index developed by Oxford Poverty and Human Development Initiative with UNDP support covers which of the following?  1. Deprivation of education, health, assets and services at household level 2. Purchasing power parity at national level 3. Extent of budget deficit and GDP growth rate at national level Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjA=",
      "description" : "RGVwcml2YXRpb24gb2YgZWR1Y2F0aW9uLCBoZWFsdGgsIGFzc2V0cyBhbmQgc2VydmljZXMgIGF0IGhvdXNlaG9sZCBsZXZlbCA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 61,
      "question" : "Which of the following is /are among the noticeable features of the recommendations of the Thirteenth Finance Commission?  1. A design for the Goods and Services Tax, and a compensation package linked to adherence to the proposed design 2. A design for the creation of lakhs of jobs in the next ten years in consonance with India's demographic dividend 3. Devolution of a specified share of central taxes to local bodies as grants Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjE=",
      "description" : "VGhlIDEzdGggZmluYW5jZSBjb21taXNzaW9uIGhhcyBhbiBlbGFib3JhdGUgZGVzaWduICBmb3IgdGhlIEdTVC4gU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgUmVwb3J0IGJhc2ljYWxseSBkaXNjdXNzZXMgdGhlIGltcHJvdmVkIGltcGxlbWVudGF0aW9uIG9mICB0aGUgZXhpc3Rpbmcgc2NoZW1lcy4gVGhlIHRoaXJkIHN0YXRlbWVudCBpcyBjb3JyZWN0LiBUaGUgIHJlcG9ydCBpbiBpdHMgcGFyYSAxMC40NCBtZW50aW9uczogJ1Rha2luZyBpbnRvIGFjY291bnQgdGhlICBkZW1hbmQgb2YgbG9jYWwgYm9kaWVzIHRoYXQgdGhleSBiZSBhbGxvd2VkIHRvIGJlbmVmaXQgZnJvbSAgdGhlIGJ1b3lhbmN5IG9mIGNlbnRyYWwgdGF4ZXMgYW5kIHRoZSBjb25zdGl0dXRpb25hbCBkZXNpZ24gIG9mIHN1cHBsZW1lbnRpbmcgdGhlIHJlc291cmNlcyBvZiBQYW5jaGF5YXRzIGFuZCAgbXVuaWNpcGFsaXRpZXMgdGhyb3VnaCBncmFudHMtaW4tYWlkLCB3ZSByZWNvbW1lbmQgdGhhdCAgbG9jYWwgYm9kaWVzIGJlIHRyYW5zZmVycmVkIGEgcGVyY2VudGFnZSBvZiB0aGUgZGl2aXNpYmxlICBwb29sIG9mIHRheGVzIGNvdmVyIGFuZCBhYm92ZSB0aGUgc2hhcmUgb2YgdGhlIHN0YXRlcywgYXMgIHN0aXB1bGF0ZWQgYnkgdXMsIGFmdGVyIGNvbnZlcnRpbmcgdGhpcyBzaGFyZSB0byBncmFudC1pbi1haWQgIHVuZGVyIEFydGljbGUgMjc1Licg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following specific stages of demographic transition associated with economic development :  1. Low birthrate with low death rate 2. High birthrate with high death rate 3. High birthrate with low death rate Select the correct order of the above stages using the codes given below : ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjI=",
      "description" : "RGVtb2dyYXBoaWMgVHJhbnNpdGlvbiBpcyB0aGUgdHJhbnNpdGlvbiBmcm9tIGhpZ2ggIGJpcnRoIGFuZCBkZWF0aCByYXRlcyB0byBsb3dlciBiaXJ0aCBhbmQgZGVhdGggcmF0ZXMgYXMgYSAgY291bnRyeSBvciByZWdpb24gZGV2ZWxvcHMgZnJvbSBhIHByZS1pbmR1c3RyaWFsIHRvIGFuICBpbmR1c3RyaWFsaXplZCBlY29ub21pYyBTeXN0ZW0uICBFICBCICBEICBfOCAgMzQgIDIgIFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlICBhbmQgRWNvbm9taWMvU29jaWFsIERldmVsb3BtZW50IEQgMjUg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 3 ",
        "option2" : " 2, 1, 3 ",
        "option3" : " 2, 3, 1 ",
        "option4" : " 3, 2, 1 "
      }
    },
    {
      "index" : 63,
      "question" : "Under which of the following circumstances may 'capital gains' arise?  1. When there is an increase in the sales of a product 2. When there is a natural increase in the value of the property owned 3. When you purchase a painting and there is a growth in its value due to increase in its popularity Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjM=",
      "description" : "Q2FwaXRhbCBnYWluIGlzIGFuIGluY3JlYXNlIGluIHRoZSB2YWx1ZSBvZiBhIGNhcGl0YWwgIGFzc2V0IChpbnZlc3RtZW50IG9yIHJlYWwgZXN0YXRlKSB0aGF0IGdpdmVzIGl0IGEgaGlnaGVyIHdvcnRoICB0aGFuIHRoZSBwdXJjaGFzZSBwcmljZS4gVGhlIGdhaW4gaXMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiAgYSBoaWdoZXIgc2VsbGluZyBwcmljZSBhbmQgYSBsb3dlciBwdXJjaGFzZSBwcmljZS4gVGhlICBpbmNyZWFzZSBpbiB0aGUgc2FsZXMgb2YgYSBwcm9kdWN0IGRvZXMgbm90IG1lYW4gaW5jcmVhc2UgIHRoZSBzZWxsaW5nIHByaWNlIG9mIHRoZSBwcm9kdWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 64,
      "question" : "Which of the following measures would result in an increase in the money supply in the economy?  1. Purchase of government securities from the public by the Central Bank 2. Deposit of currency in commercial banks by the public 3. Borrowing by the government from the Central Bank 4. Sale of government securities to the public by the Central Bank Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjQ=",
      "description" : "MS4gUHVyY2hhc2Ugb2YgZ292ZXJubWVudCBzZWN1cml0aWVzIGZyb20gdGhlIHB1YmxpYyAgYnkgdGhlIENlbnRyYWwgQmFuayAgMy4gQm9ycm93aW5nIGJ5IHRoZSBnb3Zlcm5tZW50IGZyb20gdGhlIENlbnRyYWwgQmFuayA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1 and 3 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 65,
      "question" : "Which of the following would include Foreign Direct Investment in India?  1. Subsidiaries of foreign companies in India 2. Majority foreign equity holding in Indian companies 3. Companies exclusively financed by foreign companies 4. Portfolio investment Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjU=",
      "description" : "QSBGb3JlaWduIGRpcmVjdCBpbnZlc3RtZW50IChGREkpIGludm9sdmVzICBlc3RhYmxpc2hpbmcgYSBkaXJlY3QgYnVzaW5lc3MgaW50ZXJlc3QgaW4gYSBmb3JlaWduIGNvdW50cnksICBzdWNoIGFzIGJ1eWluZyBvciBlc3RhYmxpc2hpbmcgYSBtYW51ZmFjdHVyaW5nIGJ1c2luZXNzLCAgd2hpbGUgZm9yZWlnbiBQb3J0Zm9saW8gSW52ZXN0bWVudCAoRlBJKSByZWZlcnMgdG8gaW52ZXN0aW5nICBpbiBmaW5hbmNpYWwgYXNzZXRzIHN1Y2ggYXMgc3RvY2tzIG9yIGJvcmRzIGluIGEgZm9yZWlnbiAgY291bnRyeS4gSGVuY2UsIEZESSBkb2VzIG5vdCBpbnZvbHZlIHBvcnRmb2xpbyBJbnZlc3RtZW50LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 only "
      }
    },
    {
      "index" : 66,
      "question" : "Who among the following constitute the National Development Council?  1. The Prime Minister 2. The Chairman, Finance Commission 3. Ministers of the Union Cabinet 4. Chief Ministers of the States Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NjY=",
      "description" : "VGhlIE5hdGlvbmFsIERldmVsb3BtZW50IENvdW5jaWwgaW5jbHVkZXMgdGhlIFByaW1lICBNaW5pc3RlciwgVW5pb24gbWluaXN0ZXJzLCBDaGllZiBtaW5pc3RlcnMgb2YgYWxsIHN0YXRlcywgIGFkbWluaXN0cmF0aXZlIGhlYWRzIG9mIHRoZSBVbmlvbiBUZXJyaXRvcmllcyBhbmQgbWVtYmVycyAgb2YgdGhlIHBsYW5uaW5nIGNvbW1pc3Npb24uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 1, 3 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 67,
      "question" : "To obtain full benefits of demographic dividend, what should India do?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8Njc=",
      "description" : "VG8gcmVhcCB0aGUgYmVuZWZpdHMgb2YgZGVtb2dyYXBoaWMgZGl2aWRlbmQsIHNraWxscyAgaGF2ZSB0byBiZSBkZXZlbG9wZWQgYmVjYXVzZSBhIHJlbGF0aXZlbHkgbGFyZ2VyIHBvcnRpb24gb2YgIHBvcHVsYXRpb24gZmFsbCB1bmRlciB0aGUgY2F0ZWdvcnkgb2YgcHJvZHVjdGl2ZSBsYWJvdXIgZm9yY2UgIHdoZW4gdGhlcmUgaXMgYSBkZW1vZ3JhcGhpYyBkaXZpZGVuZC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Promoting skill development ",
        "option2" : " Introducing more social security schemes ",
        "option3" : " Reducing infant mortality rate ",
        "option4" : " Privatization of higher education "
      }
    },
    {
      "index" : 68,
      "question" : "A rise in general level of prices may be caused by  1. an increase in the money supply 2. a decrease in the aggregate level of output 3. an increase in the effective demand Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8Njg=",
      "description" : "R2VuZXJhbCBQcmljZSByaXNlIG1heSBiZSBjYXVzZWQgYnkgYW4gaW5jcmVhc2UgaW4gdGhlICBtb25leSBzdXBwbHkgYXMgdGhlIHJlYWwgdmFsdWUgb2YgdGhlIG1vbmV5IHJlZHVjZXMuIFRoZSAgaGlnaGVyIGFnZ3JlZ2F0ZSBwcmljZSBsZXZlbCB3aWxsIHJlZHVjZSB0aGUgcHVyY2hhc2luZyAgcG93ZXIgc3Vic2VxdWVudGx5IHJlZHVjaW5nIHRoZSBjb25zdW1lciBzcGVuZGluZy4gIEVmZmVjdGl2ZSBkZW1hbmQgYWxzbyBpbmNyZWFzZXMgd2hlbiB0aGVyZSBpcyBsZXNzICBwdXJjaGFzaW5nIHBvd2VyIGR1ZSB0byBpbmZsYXRpb24uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 69,
      "question" : "Which one of the following is likely to be the most inflationary in its effect?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8Njk=",
      "description" : "RXh0cmVtZWx5IGhpZ2ggcmF0ZXMgb2YgaW5mbGF0aW9uIGFyZSBnZW5lcmFsbHkgIGFzc29jaWF0ZWQgd2l0aCBoaWdoIHJhdGVzIG9mIG1vbmV5IGdyb3d0aC4gSXQgaXMgb2Z0ZW4gdGhlICByZXN1bHQgb2YgZmluYW5jaW5nIGxhcmdlIGRlZmljaXRzIGJ5IHByaW50aW5nIG1vbmV5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Repayment of public debt ",
        "option2" : " Borrowing from the public to finance a budget deficit ",
        "option3" : " Borrowing from banks to finance a budget deficit ",
        "option4" : " Creating new money to finance a budget deficit "
      }
    },
    {
      "index" : 70,
      "question" : "Supply  of  money  remaining  the  same  when  there  is  an increase in demand for money, there will be  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzA=",
      "description" : "U3VwcGx5IG9mIG1vbmV5IHJlbWFpbmluZyB0aGUgc2FtZSB3aGVuIHRoZXJlIGlzIGFuICBpbmNyZWFzZSBpbiBkZW1hbmQgZm9yIG1vbmV5LCB0aGVyZSB3aWxsIGJlIGFuIGluY3JlYXNlIGluICB0aGUgcmF0ZSBvZiBpbnRlcmVzdCBhbmQgdmljZS12ZXJzYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " a fall in the level of prices ",
        "option2" : " an increase in the rate of interest ",
        "option3" : " a decrease in the rate of interest ",
        "option4" : " an increase in the level of income and employment "
      }
    },
    {
      "index" : 71,
      "question" : "Economic growth in country X will necessarily have to occur if  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzE=",
      "description" : "QSBjb3VudHJ5J3MgZWNvbm9taWMgZ3Jvd3RoIGlzIHJlZmxlY3RlZCB0aHJvdWdoICBjYXBpdGFsIGZvcm1hdGlvbiwgd2hpY2ggaW4gdHVybiBlbmNvdXJhZ2VzIHByaXZhdGUgIGVudGVycHJpc2VzIGluIGVuaGFuY2luZyB0aGUgZ3Jvd3RoIG9mICBhIGNvdW50cnkncyBlY29ub215LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " there is technical progress in the world economy ",
        "option2" : " there is population growth in X ",
        "option3" : " there is capital formation of X ",
        "option4" : " the volume of trade grows in the world economy "
      }
    },
    {
      "index" : 72,
      "question" : "If the interest rate is decreased in an economy, it will  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzI=",
      "description" : "V2hlbiBpbnRlcmVzdCByYXRlcyBkZWNyZWFzZXMgdGhlbiBpbnZlc3RtZW50ICBleHBlbmRpdHVyZSBieSBidXNpbmVzc2VzIG9uIGNhcGl0YWwgZ29vZHMgbGlrZSBmYWN0b3JpZXMgIGFuZCBlcXVpcG1lbnQgd2lsbCBpbmNyZWFzZSBpbiBhbiBlY29ub215LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " decrease the consumption expenditure in the economy ",
        "option2" : " increase the tax collection of the Government ",
        "option3" : " increase the investment expenditure in the economy ",
        "option4" : " increase the total savings in the economy "
      }
    },
    {
      "index" : 73,
      "question" : "With  reference to Union Budget, which  of  the  following is/are covered under Non-Plan Expenditure?  1. Defence expenditure 2. Interest payments 3. Salaries and pensions 4. Subsidies Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzM=",
      "description" : "Tm9uLXBsYW4gZXhwZW5kaXR1cmUgY292ZXJzIGludGVyZXN0IHBheW1lbnRzLCAgc3Vic2lkaWVzIChtYWlubHkgb24gZm9vZCBhbmQgZmVydGlsaXNlcnMpLCB3YWdlIGFuZCBzYWxhcnkgIHBheW1lbnRzIHRvIGdvdmVybm1lbnQgZW1wbG95ZWVzLCBncmFudHMgdG8gU3RhdGVzIGFuZCAgVW5pb24gVGVycml0b3JpZXMgZ292ZXJubWVudHMsIHBlbnNpb25zLCBwb2xpY2UsIGVjb25vbWljICBzZXJ2aWNlcyBpbiB2YXJpb3VzIHNlY3RvcnMsIGRlZmVuY2UsIGxvYW5zIHRvIHB1YmxpYyAgZW50ZXJwcmlzZXMsIGxvYW5zIHRvIFN0YXRlcywgVW5pb24gVGVycml0b3JpZXMgYW5kIGZvcmVpZ24gIGdvdmVybm1lbnRzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2, 3 and 4 ",
        "option4" : " None "
      }
    },
    {
      "index" : 74,
      "question" : "The  sales  tax  you  pay  while purchasing a toothpaste is a  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzQ=",
      "description" : "VGF4ZXMgb24gdG9vdGggcGFzdGUgY29tZSB1bmRlciBHU1Qgd2hpY2ggaXMgIGFkbWluaXN0ZXJlZCBieSBTdGF0ZSBnb3Zlcm5tZW50LlNhbGVzIHRheCBpcyBwYWlkIHRvIHNhbGVzICB0YXggYXV0aG9yaXR5IGluIHRoZSBzdGF0ZSBmcm9tIHdoZXJlIHRoZSBnb29kcyBhcmUgbW92ZWQuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " tax imposed by the  Central Government ",
        "option2" : " tax  imposed by the Central Government but collected  by the State Government ",
        "option3" : " tax  imposed  by  the  State Government but collected  by the Central Government ",
        "option4" : " tax imposed and collected by the State Government "
      }
    },
    {
      "index" : 75,
      "question" : "What does venture capital mean?  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2V8NzU=",
      "description" : "VmVudHVyZSBjYXBpdGFsIChWQykgaXMgYSBsb25nIHRlcm0gIGZpbmFuY2lhbCBjYXBpdGFsICBwcm92aWRlZCB0byBlYXJseS1zdGFnZSwgaGlnaC1wb3RlbnRpYWwsIGdyb3d0aCBzdGFydHVwICBjb21wYW5pZXMgb3IgbmV3IGNvbXBhbmllcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8UG92ZXJ0eSwgUGxhbm5pbmcsIEZpbmFuY2U=",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A short-term capital provided to industries ",
        "option2" : " A  long-term start-up capital provided to new  entrepreneurs ",
        "option3" : " Funds provided to industries at times of incurring losses ",
        "option4" : " Funds provided for replacement and renovation of "
      }
    },
    {
      "index" : 76,
      "question" : "With reference to 'Indian Ocean Rim Association for Regional Cooperation (IOR-ARC)', consider the following statements:  1. It was established very recently in response to incidents of piracy and accidents of oil spills. 2. It is an alliance meant for maritime security only. Which of the statements given above is / are correct? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDc2",
      "description" : "SU9SLUFSQyBpcyBhIHJlZ2lvbmFsIGNvb3BlcmF0aW9uIGluaXRpYXRpdmUgb2YgdGhlICBJbmRpYW4gT2NlYW4gUmltIGNvdW50cmllcyB3aGljaCAgd2FzIGVzdGFibGlzaGVkIGluICBNYXVyaXRpdXMgaW4gTWFyY2ggMTk5NyB3aXRoIHRoZSBhaW0gb2YgcHJvbW90aW5nICBlY29ub21pYyBhbmQgdGVjaG5pY2FsIGNvb3BlcmF0aW9uLiBJT1ItQVJDIGlzIHRoZSBvbmx5ICBwYW4tSW5kaWFuIG9jZWFuIGdyb3VwaW5nLiBJdCBicmluZ3MgdG9nZXRoZXIgY291bnRyaWVzICBmcm9tIHRocmVlIGNvbnRpbmVudHMgaGF2aW5nIGRpZmZlcmVudCBzaXplcywgZWNvbm9taWMgIHN0cmVuZ3RocywgYW5kIGEgd2lkZSBkaXZlcnNpdHkgb2YgbGFuZ3VhZ2VzLCBjdWx0dXJlcy4gSXQgIGFpbXMgdG8gY3JlYXRlIGEgcGxhdGZvcm0gZm9yIHRyYWRlLCBzb2Npby1lY29ub21pYyBhbmQgIGN1bHR1cmFsIGNvb3BlcmF0aW9uIGluIHRoZSBJbmRpYW4gT2NlYW4gcmltIGFyZWEsIHdoaWNoICBjb25zdGl0dXRlcyBhIHBvcHVsYXRpb24gb2YgYWJvdXQgdHdvIGJpbGxpb24gcGVvcGxlLiAgUHJlc2VudGx5IGl0IGhhcyAxOSBtZW1iZXJzLSBBdXN0cmFsaWEsIEJhbmdsYWRlc2gsIEluZGlhLCAgSW5kb25lc2lhLCBJcmFuLCBLZW55YSwgTWFsYXlzaWEsIE1hZGFnYXNjYXIsIE1hdXJpdGl1cywgIE1vemFtYmlxdWUsIE9tYW4sIFNleWNoZWxsZXMsIFNpbmdhcG9yZSwgU291dGggQWZyaWNhLCAgU3JpIExhbmthLCBUYW56YW5pYSwgVGhhaWxhbmQsIFVBRSBhbmQgWWVtZW4uICBTaXggcHJpb3JpdHkgYXJlYXMgd2VyZSBpZGVudGlmaWVkIHRvIHRha2UgZm9yd2FyZCB0aGUgIGNvb3BlcmF0aW9uIHVuZGVyIElPUi1BUkM6ICAoaSkgTWFyaXRpbWUgU2FmZXR5IGFuZCBTZWN1cml0eTsgIChpaSkgVHJhZGUgYW5kIEludmVzdG1lbnQgRmFjaWxpdGF0aW9uOyAgKGlpaSkgRmlzaGVyaWVzIE1hbmFnZW1lbnQ7ICAoaXYpIERpc2FzdGVyIFJpc2sgUmVkdWN0aW9uOyAgKHYpIEFjYWRlbWljIGFuZCBTJlQgQ29vcGVyYXRpb247IGFuZCAgKHZpKSBUb3VyaXNtIFByb21vdGlvbiBhbmQgQ3VsdHVyYWwgRXhjaGFuZ2VzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 77,
      "question" : "With reference to inflation in India, which of the following statements is correct?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDc3",
      "description" : "V2hlbiBpbmZsYXRpb24gYmVjb21lcyB2ZXJ5IGhpZ2gsIHRoZSBSQkkgZGVjcmVhc2VzICBzdXBwbHkgb2YgbW9uZXkgKHRvIGNoZWNrIGluZmxhdGlvbikgYnkgYWRvcHRpbmcgdGlnaHQgIG1vbmV0YXJ5IHBvbGljeS4gRGVjcmVhc2luZyB0aGUgbW9uZXkgY2lyY3VsYXRpb24gIGRlY3JlYXNlcyB0aGUgZGVtYW5kIG9mIGdvb2RzIGFuZCBzZXJ2aWNlcywgd2hpY2ggaGVscHMgIGluIGNvbnRyb2xsaW5nIHRoZSBpbmZsYXRpb24uIEl0IGlzIG1haW5seSBlZmZlY3RpdmUgaW4gY2FzZSBvZiAgZGVtYW5kIHB1bGwgaW5mbGF0aW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Controlling the inflation in India is the responsibility  of the Government of India only ",
        "option2" : " The Reserve Bank of India has no role in controlling  the inflation ",
        "option3" : " Decreased money circulation helps in controlling the  inflation ",
        "option4" : " Increased money circulation helps in controlling the "
      }
    },
    {
      "index" : 78,
      "question" : "There has been a persistent deficit budget year after year. Which of the following actions can be taken by the government to reduce the deficit?  1. Reducing revenue expenditure 2. Introducing new welfare schemes 3. Rationalizing subsidies 4. Expanding industries Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDc4",
      "description" : "VG8gcmVkdWNlIHRoZSBidWRnZXQgZGVmaWNpdCwgdGhlIGdvdmVybm1lbnQgaGFzIHRvICBpbmNyZWFzZSBpbmNvbWUgYW5kIHJlZHVjZSBFeHBlbmRpdHVyZS4gSW50cm9kdWNpbmcgbmV3ICB3ZWxmYXJlIHNjaGVtZXMgYW5kIEV4cGFuZGluZyBpbmR1c3RyaWVzIHdpbGwgaW5jcmVhc2UgdGhlICBnb3Zlcm5tZW50IGV4cGVuZGl0dXJlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 79,
      "question" : "The Fair and Remunerative Price (FRP) of sugarcane is approved by the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDc5",
      "description" : "VGhlIEZhaXIgYW5kIFJlbXVuZXJhdGl2ZSBQcmljZSAoRlJQKSBvZiBzdWdhcmNhbmUgaXMgIGFwcHJvdmVkIGJ5IENhYmluZXQgQ29tbWl0dGVlIG9uIEVjb25vbWljIEFmZmFpcnMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Cabinet Committee on Economic Affairs ",
        "option2" : " Commission for Agricultural Costs and Prices ",
        "option3" : " Directorate of Marketing and Inspection, Ministry of  Agriculture ",
        "option4" : " Agricultural Produce Market Committee "
      }
    },
    {
      "index" : 80,
      "question" : "'Pradhan Mantri Jan-Dhan Yojana' has been launched for  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDgw",
      "description" : "UHJhZGhhbiBNYW50cmkgSmFuLURoYW4gWW9qYW5hIChQTUpEWSkgaXMgTmF0aW9uYWwgIE1pc3Npb24gZm9yIEZpbmFuY2lhbCBJbmNsdXNpb24gdG8gZW5zdXJlIGFjY2VzcyB0byBmaW5hbmNpYWwgIHNlcnZpY2VzLCBuYW1lbHksIEJhbmtpbmcvIFNhdmluZ3MgJiBEZXBvc2l0IEFjY291bnRzLCAgUmVtaXR0YW5jZSwgQ3JlZGl0LCBJbnN1cmFuY2UsIFBlbnNpb24gaW4gYW4gYWZmb3JkYWJsZSAgbWFubmVyLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " providing housing loan to poor people at cheaper  interest rates ",
        "option2" : " promoting women's Self-Help Groups in backward areas ",
        "option3" : " promoting financial inclusion in the country ",
        "option4" : " providing financial help to the marginalized communities "
      }
    },
    {
      "index" : 81,
      "question" : "With reference to the Fourteenth Finance Commission, which of the following statements is/ are correct?  1. It has increased the share of States in the central divisible pool from 32 percent to 42 percent. 2. It has made recommendations concerning sector- specific grants. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDgx",
      "description" : "VW5pb24gR292ZXJubWVudCBhY2NlcHRlZCB0aGUgMTR0aCBGaW5hbmNlICBDb21taXNzaW9uJ3MgcmVjb21tZW5kYXRpb24gdG8gZGV2b2x2ZSBhbiAgdW5wcmVjZWRlbnRlZCA0MiBwZXIgY2VudCBvZiB0aGUgZGl2aXNpYmxlIHBvb2wgdG8gc3RhdGVzICBkdXJpbmcgMjAwMTUtMTYgdG8gMjAxOS0yMCwgYWdhaW5zdCAzMiBwZXIgY2VudCBzdWdnZXN0ZWQgIGJ5IHRoZSBwcmV2aW91cyBjb21taXNzaW9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 82,
      "question" : "Convertibility of rupee implies  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDgy",
      "description" : "Q29udmVydGliaWxpdHkgb2YgcnVwZWUgaW1wbGllcyBmcmVlbHkgcGVybWl0dGluZyB0aGUgIGNvbnZlcnNpb24gb2YgcnVwZWUgdG8gb3RoZXIgY3VycmVuY2llcyBhbmQgdmljZSB2ZXJzYS4gIEN1cnJlbmN5IENvbnZlcnRpYmlsaXR5IGlzIHRoZSBlYXNlIHdpdGggd2hpY2ggYSBjb3VudHJ5J3MgIGN1cnJlbmN5IGNhbiBiZSBjb252ZXJ0ZWQgaW50byBnb2xkIG9yIGFub3RoZXIgY3VycmVuY3kuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " being able to convert rupee notes into gold ",
        "option2" : " allowing the value of rupee to be fixed by market forces ",
        "option3" : " freely permitting the conversion of rupee to other  currencies and vice versa ",
        "option4" : " developing an international market for currencies in India "
      }
    },
    {
      "index" : 83,
      "question" : "The Government of India has established NITI Aayog to replace the  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDgz",
      "description" : "VGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgaGFzIGVzdGFibGlzaGVkIE5JVEkgQWF5b2cgIHRvIHJlcGxhY2UgdGhlIFBsYW5uaW5nIENvbW1pc3Npb24uIFRoZSBVbmlvbiBHb3Zlcm5tZW50ICBvZiBJbmRpYSBhbm5vdW5jZWQgZm9ybWF0aW9uIG9mIE5JVEkgQWF5b2cgb24gMSBKYW51YXJ5ICAyMDE1IGFuZCB0aGUgZmlyc3QgbWVldGluZyBvZiBOSVRJIEFheW9nIHdhcyBoZWxkIG9uIDggIEZlYnJ1YXJ5IDIwMTUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Human Rights Commission ",
        "option2" : " Finance Commission ",
        "option3" : " Law Commission ",
        "option4" : " Planning Commission "
      }
    },
    {
      "index" : 84,
      "question" : "With reference to 'Financial Stability and Development Council', consider the following statements :  1. It is an organ of NITI Aayog. 2. It is headed by the Union Finance Minister. 3. It monitors macroprudential supervision of the economy. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg0",
      "description" : "KGkpIEZpbmFuY2lhbCBTdGFiaWxpdHkgYW5kIERldmVsb3BtZW50IENvdW5jaWwgaXMgYW4gIGFwZXgtbGV2ZWwgYm9keSBjb25zdGl0dXRlZCBieSB0aGUgZ292ZXJubWVudCBvZiBJbmRpYS4gIFRoZSBpZGVhIHRvIGNyZWF0ZSBzdWNoIGEgc3VwZXIgcmVndWxhdG9yeSBib2R5IHdhcyBmaXJzdCAgbW9vdGVkIGJ5IHRoZSBSYWdodXJhbSBSYWphbiBDb21taXR0ZWUgaW4gMjAwOC4gRmluYWxseSAgaW4gMjAxMCwgdGhlIHRoZW4gRmluYW5jZSBNaW5pc3RlciBvZiBJbmRpYSwgUHJhbmFiICBNdWtoZXJqZWUsIGRlY2lkZWQgdG8gc2V0IHVwIHN1Y2ggYW4gYXV0b25vbW91cyBib2R5ICBkZWFsaW5nIHdpdGggbWFjcm8gcHJ1ZGVudGlhbCBhbmQgZmluYW5jaWFsIHJlZ3VsYXJpdGllcyBpbiAgdGhlIGVudGlyZSBmaW5hbmNpYWwgc2VjdG9yIG9mIEluZGlhLiAgIEQgMjYgIChpaSkgSXQgZmFsbHMgdW5kZXIgRGVwLiBPZiBlY29ub21pYyBhZmZhaXJzIGFuZCBGTSBpcyB0aGUgIGNoYWlybWFuLiBTbywgMSBpcyB3cm9uZyBhbmQgMiBpcyByaWdodC4gQnkgZWxpbWluYXRpb24sIHdlICBhcmUgbGVmdCB3aXRoIGFuc3dlciAnYycuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 85,
      "question" : "Regarding 'Atal Pension Yojana', which of the following statements is/are correct?  1. It is a minimum guaranteed pension scheme mainly targeted at unorganized sector workers. 2. Only one member of a family can join the scheme. 3. Same amount of pension is guaranteed for the spouse for life after subscriber's death. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg1",
      "description" : "VGhlcmUgaXMgbm8gcmVzdHJpY3Rpb24gYXMgc3VjaCB0aGF0IG9ubHkgb25lIG1lbWJlciAgb2YgYSBmYW1pbHkgY2FuIGpvaW4gdGhlIHNjaGVtZS4gIFJlZjogR2l2ZW4gaW4gRGlzaGEgUHVibGljYXRpb24ncyBNZWdhIFllYXJib29rIDIwMTYsICBwYWdlLTg0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 86,
      "question" : "With reference to 'Stand up India scheme', which of the following statement is/are correct?  1. Its purpose is to promote entrepreneurship among SC/ST and women entrepreneurs. 2. It provides for refinance through SIDBI. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg2",
      "description" : "KGkpIFByaW1lIE1pbmlzdGVyICAgbGF1bmNoZWQgdGhlICdTdGFuZCB1cCBJbmRpYSAgU2NoZW1lJyBhaW1lZCBhdCBwcm9tb3RpbmcgZW50cmVwcmVuZXVyc2hpcCBhbW9uZyAgU2NoZWR1bGVkIENhc3Rlcy9TY2hlZHVsZWQgVHJpYmVzIGFuZCB3b21lbiBieSBnaXZpbmcgIGxvYW5zIGluIHRoZSByYW5nZSBvZiAnICAxMCBsYWtoIHRvIGAgMSBjcm9yZSBmb3Igc2V0dGluZyB1cCBhICBuZXcgZW50ZXJwcmlzZS4gVGhlcmUgd291bGQgYmUgYSBgIDEwLDAwMCBjcm9yZSByZWZpbmFuY2UgIHdpbmRvdyB0aHJvdWdoIFNtYWxsIEluZHVzdHJpZXMgRGV2ZWxvcG1lbnQgQmFuayBvZiAgSW5kaWEgKFNJREJJKSBhbmQgdGhlIE5hdGlvbmFsIENyZWRpdCBHdWFyYW50ZWUgVHJ1c3RlZSAgQ29tcGFueSBMdGQgKE5DR1RDKSB3aWxsIGNyZWF0ZSBhIGNvcnB1cyBvZiAnICA1LDAwMCBjcm9yZS4gIChpaSkgQm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0IGFzIHBlciA6IFByZXNzIEluZm9ybWF0aW9uICBCdXJlYXUgKFBJQikgR292ZXJubWVudCBvZiBJbmRpYSAgTWluaXN0cnkgb2YgRmluYW5jZS8wMy1BcHJpbC0yMDE2LiAgUmVmOiBodHRwOi8vcGliLm5pYy5pbi8gIG5ld3NpdGVQcmludFJlbGVhc2UuYXNweD9yZWxpZD0xMzg1MjMg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 87,
      "question" : "Pradhan Mantri MUDRA Yojana is aimed at  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg3",
      "description" : "KGkpIFByYWRoYW4gTWFudHJpIE11ZHJhIFlvamFuYSB1bmRlciB0aGUgTWljcm8gIFVuaXRzIERldmVsb3BtZW50IGFuZCBSZWZpbmFuY2UgQWdlbmN5IChNVURSQSkgIEJhbmsgaXMgYSBuZXcgaW5zdGl0dXRpb24gYmVpbmcgc2V0IHVwIGJ5IEdvdmVybm1lbnQgb2YgIEluZGlhIGZvciBkZXZlbG9wbWVudCBhbmQgcmVmaW5hbmNpbmcgYWN0aXZpdGllcyByZWxhdGluZyB0byAgbWljcm8gdW5pdHMuIEl0IHdhcyBhbm5vdW5jZWQgYnkgdGhlIEZpbmFuY2UgTWluaXN0ZXIgIHdoaWxlIHByZXNlbnRpbmcgdGhlIFVuaW9uIEJ1ZGdldCBmb3IgRlkgMjAxNi4gVGhlICBwdXJwb3NlIG9mIE1VRFJBIGlzIHRvIHByb3ZpZGUgZnVuZGluZyB0byB0aGUgbm9uICBjb3Jwb3JhdGUgc21hbGwgYnVzaW5lc3Mgc2VjdG9yLiAgUmVmOiBHaXZlbiBpbiBEaXNoYSBNZWdhIFllYXJib29rIHBhZ2UtQS04My4gTVVEUkEgIFlvamFuYSBhaW1zIHRvIGhlbHAgc21hbGwgYnVzaW5lc3NtZW4gd2hvJ3JlIHVuYWJsZSB0byAgZ2V0IGxvYW5zIGZyb20gZm9ybWFsIGZpbmFuY2lhbCBzeXN0ZW0uIEhlbmNlIChhKSBpcyB0aGUgIGFuc3dlci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " bringing the small entrepreneurs into formal financial  system ",
        "option2" : " providing loans to poor farmers for cultivating  particular crops ",
        "option3" : " providing pensions to old and destitute persons ",
        "option4" : " funding the voluntary organizations involved in the "
      }
    },
    {
      "index" : 88,
      "question" : "Which  one  of  the  following  is  a  purpose  of  'UDAY',  a scheme of the Government?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg4",
      "description" : "VWp3YWwgRElTQ09NIEFzc3VyYW5jZSBZb2phbmEgKFVEQVkpIGlzIHRoZSAgZmluYW5jaWFsIHR1cm5hcm91bmQgYW5kIHJldml2YWwgcGFja2FnZSBmb3IgZWxlY3RyaWNpdHkgIGRpc3RyaWJ1dGlvbiBjb21wYW5pZXMgb2YgSW5kaWEgKERJU0NPTXMpIGluaXRpYXRlZCBieSAgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgd2l0aCB0aGUgaW50ZW50IHRvIGZpbmQgYSBwZXJtYW5lbnQgIHNvbHV0aW9uIHRvIHRoZSBmaW5hbmNpYWwgbWVzcyB0aGF0IHRoZSBwb3dlciBkaXN0cmlidXRpb24gaXMgIGluLiAgUmVmOiBFY29ub21pYyBTdXJ2ZXkgVm9sLjIsIHBhZ2UgMTI1LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Providing technical and financial assistance to start-up  entrepreneurs in the field of renewable sources of energy ",
        "option2" : " Providing electricity to every household in the  country by 2018 ",
        "option3" : " Replacing the coal-based power plants with natural  gas, nuclear, solar, wind and tidal power plants over a  period of time ",
        "option4" : " Providing for financial turnaround and revival of "
      }
    },
    {
      "index" : 89,
      "question" : "What is/are the purpose/purposes of 'District Mineral Foundations' in India?  1. Promoting mineral exploration activities in mineral- rich districts 2. Protecting the interests of the persons affected by mining operations 3. Authorizing State Governments to issue licences for mineral exploration Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDg5",
      "description" : "RGlzdHJpY3QgTWluZXJhbCBGb3VuZGF0aW9uIChETUYpIGlzIGEgdHJ1c3Qgc2V0IHVwIGFzICBhIG5vbi1wcm9maXQgYm9keSwgaW4gdGhvc2UgZGlzdHJpY3RzIGFmZmVjdGVkIGJ5IHRoZSBtaW5pbmcgIHdvcmtzLCB0byB3b3JrIGZvciB0aGUgaW50ZXJlc3QgYW5kIGJlbmVmaXQgb2YgcGVyc29ucyBhbmQgIGFyZWFzIGFmZmVjdGVkIGJ5IG1pbmluZyByZWxhdGVkIG9wZXJhdGlvbnMuIEl0IGlzIGZ1bmRlZCAgdGhyb3VnaCB0aGUgY29udHJpYnV0aW9ucyBmcm9tIG1pbmVycy4gSXRzIG1hbm5lciBvZiAgb3BlcmF0aW9uIGNvbWVzIHVuZGVyIHRoZSBqdXJpc2RpY3Rpb24gb2YgdGhlIHJlbGV2YW50IFN0YXRlICBHb3Zlcm5tZW50LiAgUmVmOiAgRWNvbm9taWMgU3VydmV5IFZvbC4yLCBwYWdlIDE0MS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 90,
      "question" : "'SWAYAM', an initiative of the Government of India, aims at  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDkw",
      "description" : "U1dBWUFNIG9yIFN0dWR5IFdlYnMgb2YgQWN0aXZlLUxlYXJuaW5nIGZvciAgWW91bmcgQXNwaXJpbmcgTWluZHMgcHJvZ3JhbW1lIG9mIE1pbmlzdHJ5IG9mIEh1bWFuICBSZXNvdXJjZSBEZXZlbG9wbWVudCwgR292ZXJubWVudCBvZiBJbmRpYS4gUHJvZmVzc29ycyAgb2YgY2VudHJhbGx5IGZ1bmRlZCBpbnN0aXR1dGlvbnMgbGlrZSBJSVRzLCBJSU1zLCBjZW50cmFsICB1bml2ZXJzaXRpZXMgd2lsbCBvZmZlciBvbmxpbmUgY291cnNlcyB0byBjaXRpemVucyBvZiBJbmRpYS4gQWxsICBjb3Vyc2VzIHdvdWxkIGJlIG9mZmVyZWQgZnJlZSBvZiBjb3N0IHVuZGVyIHRoaXMuICBSZWY6IFByZXNzIEluZm9ybWF0aW9uIEJ1cmVhdSAoUElCLikgMjAxNiwgR292ZXJubWVudCAgb2YgSW5kaWEuIE1pbmlzdHJ5IG9mIEh1bWFuIFJlc291cmNlIERldmVsb3BtZW50OyAgaHR0cDovL3BpYi5uaWMuaW4vbmV3c2l0ZS9QcmludFJlbGVhc2UuYXNweD9yZWxpZD0gIDE0ODUxNS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " promoting the Self Help Groups in rural areas ",
        "option2" : " providing financial and technical assistance to young  start-up entrepreneurs ",
        "option3" : " promoting the education and health of adolescent girls ",
        "option4" : " providing affordable and quality education to the "
      }
    },
    {
      "index" : 91,
      "question" : "Regarding DigiLocker, sometimes seen in the news, which of the following statements is/are correct?  1. It is a digital locker system offered by the Government under Digital India Programme. 2. It allows you to access your e-documents irrespective of your physical location. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDkx",
      "description" : "RGlnaUxvY2tlciBpcyBhICdkaWdpdGFsIGxvY2tlcicgc2VydmljZSBsYXVuY2hlZCBieSAgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgaW4gRmVicnVhcnkgMjAxNSB0byBwcm92aWRlIGEgIHNlY3VyZSBkZWRpY2F0ZWQgcGVyc29uYWwgZWxlY3Ryb25pYyBzcGFjZSBmb3Igc3RvcmluZyB0aGUgIGRvY3VtZW50cyBvZiByZXNpZGVudCBJbmRpYW4gY2l0aXplbnMuICBSZWY6IEluZGlhbmV4cHJlc3MgL05vdmVtYmVyIDE3LCAyMDE1LiAgaHR0cDovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvaW5kaWEvaW5kaWEtbmV3cy0gIGluZGlhL2RpZ2l0YWwtbG9ja2Vycy1wdXQteW91ci1kb2N1bWVudHMtaW4tYS1zYWZlLW9uLSAgc2VjdXJlLWNsb3VkLyA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 92,
      "question" : "'Mission Indradhanush' launched by the Government of India pertains to  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDky",
      "description" : "KGkpIFRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGxhdW5jaGVkIE1pc3Npb24gIEluZHJhZGhhbnVzaCBpbiBEZWNlbWJlciAyMDE0IHdpdGggdGhlIHVsdGltYXRlIGdvYWwgdG8gIGVuc3VyZSB0aGF0IGFsbCBjaGlsZHJlbiB1bmRlciB0aGUgYWdlIG9mIHR3byB5ZWFycyBhbmQgIHByZWduYW50IHdvbWVuIGFyZSBmdWxseSBpbW11bml6ZWQgd2l0aCBhbGwgYXZhaWxhYmxlICB2YWNjaW5lcy4gIChpaSkgVGhpcyBtaXNzaW9uIGFpbXMgdG8gYWNoaWV2ZSAxMDAlIHZhY2NpbmF0aW9uIG9mICBjaGlsZHJlbiBhbmQgcHJlZ25hbnQgd29tZW4gYnkgMjAyMC4gIFJlZjogRGlzaGEgUHVibGljYXRpb24ncyBNZWdhIFllYXJib29rIDIwMTYsIHBhZ2UgQi0gIDQ4NCA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " immunization of children and pregnant women ",
        "option2" : " construction of smart cities across the country ",
        "option3" : " India's  own search for the Earth-like planets in outer  space ",
        "option4" : " New Educational Policy "
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements:  1. National Payments Corporation of India (NPCI) helps in promoting the financial inclusion in the country. 2. NPCI has launched RuPay, a card payment scheme. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDkz",
      "description" : "TlBDSSBpcyBhIG5vdC1mb3ItcHJvZml0IGNvbXBhbnkgZm9ybWVkIGJ5IHZhcmlvdXMgIGJhbmtzLCB3aXRoIHByaW1hcnkgb2JqZWN0aXZlIG9mIHByb3ZpZGluZyBjb3N0LWVmZmVjdGl2ZSAgcGF5bWVudCBzb2x1dGlvbnMgdG8gdGhlIGJhbmtzLiBOUENJJ3Mgc29sdXRpb25zIHN1Y2ggYXMgIElNUFMsICBCSElNLCBSdVBheSwgIEFFUFMgZXRjLiAgaGF2ZSAgaW5kZWVkIGhlbHBlZCBpbiAgZmluYW5jaWFsIGluY2x1c2lvbi4gU28gZmlyc3QgaXMgY29ycmVjdC4gQW5kIHNlY29uZCBpcyAgY29ycmVjdC0gTlBDSSBsYXVuY2hlZCBSdXBheSBjYXJkIGluIDIwMTIsIGFzIDd0aCAgcGF5bWVudCBnYXRld2F5IGluIHRoZSB3b3JsZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 94,
      "question" : "Which of the following is a most likely consequence of implementing the 'Unified Payments Interface (UPI)'?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk0",
      "description" : "IkEiIGlzIHRoZSBtb3N0IGFwcHJvcHJpYXRlIGNob2ljZS4gTW9iaWxlIHdhbGxldHMgIHdpbGwgbm90IGJlIG5lY2Vzc2FyeSwgYmVjYXVzZSB5b3VyIG1vYmlsZSBudW1iZXIgaXMgIGRpcmVjdGx5IGxpbmtlZCB3aXRoIHRoZSBiYW5rIGFjY291bnQgdXNpbmcgYmFuaydzICAnY3VzdG9taXplZCBhcHAnIHdoaWNoIGlzIGJ1aWx0IG9uIHRoZSBVUEkgcGxhdGZvcm0uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Mobile wallets will not be necessary for online  payments. ",
        "option2" : " Digital currency will totally replace the physical  currency in about two decades. ",
        "option3" : " FDI inflows will drastically increase. ",
        "option4" : " Direct transfer of subsidies to poor people will "
      }
    },
    {
      "index" : 95,
      "question" : "Which of the following statements is/are correct regarding the Monetary Policy Committee (MPC)?  1. It decides the RBI's benchmark interest rates. 2. It is a 12-member body including the Governor of RBI and is reconstituted every year. 3. It functions under the chairmanship of the Union Finance Minister. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk1",
      "description" : "TVBDIGhhcyA2IG1lbWJlcnMsIG5vdCAxMjsgYW5kIGl0J3MgaGVhZGVkIGJ5IFJCSSAgZ292ZXJub3IgYW5kIG5vdCBGaW5hbmNlIE1pbmlzdGVyLiBTbyBzdGF0ZW1lbnQgMiBhbmQgIDMgYXJlIHdyb25nLCBoZW5jZSBieSBlbGltaW5hdGlvbiwgd2UgcmVhY2ggYW5zd2VyIChBKSAgb25seSAxIGNvcnJlY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 2 an"
      }
    },
    {
      "index" : 96,
      "question" : "What is the purpose of setting up of Small Finance Banks (SFBs) in India?  1. To supply credit to small business units 2. To supply credit to small and marginal farmers 3. To encourage young entrepreneurs to set up business particularly in rural areas. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk2",
      "description" : "V2hpbGUgZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBhbGwgdGhyZWUgd2lsbCBiZSBlbmNvdXJhZ2VkICBiZWNhdXNlIG9mIFNtYWxsIEZpbmFuY2UgYmFua3MuIEJ1dCB3aGVuIFJCSSBpbnZpdGVkICBhcHBsaWNhdGlvbnMsIHRoZSBzcGVjaWZpYyBwdXJwb3NlIHdlcmUgMSBhbmQgMiBvbmx5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 97,
      "question" : "Who among the following can join the National Pension System (NPS)?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk3",
      "description" : "TlBTIHdhcyBjb21wdWxzb3J5IGZvciBuZXcgY2VudHJhbCBnb3Z0IHJlY3J1aXRzICAoZXhjZXB0IGFybWVkIGZvcmNlcykgV0VGIDEvMS8yMDA0LiBzbyAiRCIgaXMgd3JvbmcuICBBbnkgIEluZGlhbiAgYmV0d2VlbiAgMTggIHRvICA1NSAgY2FuICBqb2luICBOUFMuICBTbyAgIkIiICBpcyAgd3JvbmcuIE5SSXMgYXJlIGFsbG93ZWQgdG8gb3BlbiBOUFMgYWNjb3VudCBhcyBwZXIgIFBGUkRBIG5vcm1zLiAgU28gd2UgYXJlIGxlZnQgd2l0aCBhbnN3ZXIgIkMiLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Resident Indian citizens only ",
        "option2" : " Persons of age from 21 to 55 only ",
        "option3" : " All State Government employees joining the services  after the date of notification by the respective State  Governments ",
        "option4" : " All Central Government employees including those "
      }
    },
    {
      "index" : 98,
      "question" : "What is/are the most likely advantages of implementing 'Goods and Services Tax (GST)'?  1. It will replace multiple taxes collected by multiple authorities and will thus create a single market in India. 2. It will drastically reduce the 'Current Account Deficit' of India and will enable it to increase its foreign exchange reserves. 3. It will enormously increase the growth and size of economy of India and will enable it to overtake China in the near future. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk4",
      "description" : "RXhwb3J0cyB3aWxsIGJlY29tZSBaRVJPIFJBVEVEIHVuZGVyIEdTVCwgc28gIHN0YXRlbWVudHMgMiBhbmQgMyB3b3VsZCBoYXZlIGJlZW4gY29ycmVjdCBJZiBleGFtaW5lciAgaGFkIHVzZWQgbW9kZXJhdGUgd29yZHMgIkdTVCB3aWxsIGhlbHAiLiBCdXQgaGUgaGFzICB1c2VkICdleHRyZW1lJyB3b3Jkcy4gR1NUIGlzIHVubGlrZWx5IHRvICdkcmFzdGljYWxseScgcmVkdWNlICBDQUQgQmVjYXVzZSBvZiBjcnVkZSBvaWwgaW1wb3J0IGFuZCBPUEVDIGNhcnRlbCB0aGF0ICBtYW5pcHVsYXRlcyBpdHMgcHJpY2VzLiBTaW1pbGFybHksIEdTVCBpcyB1bmxpa2VseSB0byAgZW5vcm1vdXNseSBpbmNyZWFzZSBzaXplIG9mIG91cmVjb25vbXkgKElNRiBwcm9qZWN0aW9uICB+MS0xLjUlIGFkZGl0aW9uIGluIGdyb3d0aCByYXRlLikgYW5kIHdlIGNhbid0IG92ZXJ0YWtlICBDaGluYSBpbiBuZWFyIGZ1dHVyZSwgYmVjYXVzZSB1bmxpa2UgQ2hpbmEgd2UgYXJlIGtlZXBpbmcgIG91ciBjdXJyZW5jeSB1bmRlcnZhbHVlZCBhZ2FpbnN0IGRvbGxhci4gSGVuY2Ugc3RhdGVtZW50ICAyIGFuZCAzIGFyZSB3cm9uZy4gV2UgYXJlIGxlZnQgd2l0aCBBbnN3ZXIgQS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 99,
      "question" : "With reference to the 'Prohibition of Benami Property Transactions Act, 1988 (PBPT Act)', consider the following statements:  1. A property transaction is not treated as a benami transaction if the owner of the property is not aware of the transaction. 2. Properties held benami are liable for confiscation by the Government. 3. The Act provides for three authorities for investigations but does not provide for any appellate mechanism. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDk5",
      "description" : "QWN0IHByb3ZpZGVzIGlzIGFuIGFwcGVsbGF0ZSB0cmlidW5hbCwgYW5kIHRoZXkncmUgIHJlcXVpcmVkIHRvIGZpbmlzaCBjYXNlIHdpdGhpbiBvbmUgeWVhci4gU28gIzMgaXMgd3JvbmcsICBieSBlbGltaW5hdGlvbiwgd2UgYXJlIGxlZnQgd2l0aCBBIGFuZCBCLiBTbywgQiBpcyBtb3N0ICBhcHByb3ByaWF0ZSBiZWNhdXNlIElUIGRlcHQgKD10aGVyZWZvcmUgR292ZXJubWVudCkgY2FuICBzZWl6ZSB0aGUgYmVuYW1pIHByb3BlcnRpZXMuICBFICBCICBEICBfOCAgMzQgIDIgIFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlICBhbmQgRWNvbm9taWMvU29jaWFsIERldmVsb3BtZW50IEQgMjcg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 2 an 3 only "
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements:  1. Tax revenue as a per cent of GDP of India has steadily increased in the last decade. 2. Fiscal  deficit  as  a  per  cent  of  GDP  of  India  has steadily increased in the last decade. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwMA==",
      "description" : "SWYgd2UgbG9vayBhdCB0aGUgb3ZlcmFsbCB0cmVuZCBmcm9tIDIwMDcgdG8gMjAxNyAgdGhlcmUgaXMgZ3JhZHVhbCBpbmNyZWFzZSBidXQgb24geWVhcmx5IGJhc2lzIHRoZXJlIGhhdmUgIGJlZW4gdXBzIGFuZCBkb3ducy4gU28sIE5laXRoZXIgVGF4IHJldmVudWUgbm9yIEZpc2NhbCAgZGVmaWNpdCBhcyBhIHBlcmNlbnRhZ2Ugb2YgR0RQIGhhdmUgc3RlYWRpbHkgaW5jcmVhc2VkLiAgVVBTQyBrZXB0IEQgaXMgdGhlIG9mZmljaWFsIGFuc3dlciA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 101,
      "question" : "What is the aim of the programme 'Unnat Bharat Abhiyan'?  ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwMQ==",
      "description" : "QW5zd2VyIGlzICJiIiBhcyBwZXIgdGhlIFByZXNzIEluZm9ybWF0aW9uIEJ1cmVhdS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Achieving 100% literacy by promoting collaboration  between voluntary organizations and government's  education system and local communities. ",
        "option2" : " Connecting institutions of higher education with local  communities to address development challenges  through appropriate technologies. ",
        "option3" : " Strengthening India's scientific research institutions  in order to make India a scientific and technological  power. ",
        "option4" : " Developing human capital by allocating special funds "
      }
    },
    {
      "index" : 102,
      "question" : "With reference to 'National Investment and Infrastructure Fund', which of the following statements is/are correct?  1. It is an organ of NITI Aayog. 2. It has a corpus of ` 4, 00,000 crore at present. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwMg==",
      "description" : "TklJRiBpcyB1bmRlciBEZXBhcnRtZW50IG9mIEVjb25vbWljIEFmZmFpcnMuIFNvICBmaXJzdCBzdGF0ZW1lbnQgaXMgd3JvbmcuIEl0IHdhcyBzZXR1cCBpbiBCdWRnZXQgMjAxNSwgd2l0aCAgUnMuNDBrIGNyb3JlcywgYnV0IGV2ZW4gaWYgY291bnRpbmcgdGhlIHJlY2VudCBhbGxvdG1lbnRzICB0aWxsIEJ1ZGdldCAyMDE3LCB0aGUgNCBsYWtoIGFtb3VudCBpcyB1bnJlYWxpc3RpYy4gU28sICBzZWNvbmQgc3RhdGVtZW50IGlzIGFsc28gd3JvbmcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 103,
      "question" : "Which of the following are the objectives of 'National Nutrition Mission'?  1. To create awareness relating to malnutrition among pregnant women and lactating mothers. 2. To reduce the incidence of anemia among young children, adolescent girls and women. 3. To promote the consumption of millets, coarse cereals and unpolished rice. 4. To promote the consumption of poultry eggs. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwMw==",
      "description" : "V2hpbGUgdGhpcyBtaXNzaW9uIHdpbGwgY2VydGFpbmx5IGluY3JlYXNlIGNvbnN1bXB0aW9uICBvZiBtaWxsZXRzLCBjb2Fyc2UgY2VyZWFscyBhbmQgZWdncyBvbmNlIHBlb3BsZSBiZWNvbWUgIGF3YXJlIG9mIHRoZWlyIG51dHJpdGlvbmFsIGJlbmVmaXRzLCBidXQgcHJvbW90aW5nIHRoZWlyICAnY29uc3VtcHRpb24nIGlzIG5vdCB0aGUgZXhwbGljaXQgb2JqZWN0aXZlIG9mIHRoaXMgbWlzc2lvbi4gIEV4cGxpY2l0bHkgc3RhdGVkIG9iamVjdGl2ZXMgYXJlIG9ubHkgMSBhbmQgMi4gU28sIGV4cGVydHMgIHdlcmUgZGl2aWRlZCBiZXR3ZWVuIEEgYW5kIEIgYW5kIEMtIGJlY2F1c2UgaW4gdGhlICAyMDE2J3MgVU4tUkVERCsgcXVlc3Rpb24sIFVQU0Mgb2ZmaWNpYWwgZXZlbiBrZXB0ICAnaW5kaXJlY3QgYmVuZWZpdCcgb2YgcG92ZXJ0eSByZW1vdmFsIGFzIG9uZSBvZiB0aGUgb2JqZWN0aXZlLiAgQnV0IGluIG9mZmljaWFsIGFuc3dlciBrZXkgb2YgMjAxNywgdGhleSBoYXZlIGdvbmUgb25seSAgYnkgbGl0ZXJhbCBpbnRlcnByZXRhdGlvbiBvZiBleHBsaWNpdGx5IG1lbnRpb25lZCAnZGlyZWN0ICBiZW5lZml0cywgYW5kIHRoZXkgY2hvc2UgJ0EnIGFzIHRoZSBvZmZpY2lhbCBhbnN3ZXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 1, 2 and 3 only ",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 3 an 4 only "
      }
    },
    {
      "index" : 104,
      "question" : "What is the purpose of Vidyanjali Yojana'?  1. To enable the famous foreign educational institutions to open their campuses in India. 2. To increase the quality of education provided in government schools by taking help from the private sector and the community. 3. To encourage voluntary monetary contributions from private individuals and organizations so as to improve the infrastructure facilities for primary and secondary schools. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwNA==",
      "description" : "ICgtKUluZGlhbmV4cHJlc3MgSnVuZSAyMDE2OiBIUkQgTWluaXN0cnkgaGFzIGxhdW5jaGVkICBhbiBpbml0aWF0aXZlIGNhbGxlZCAnVmlkeWFuamFsaScgdG8gZW5jb3VyYWdlIHlvdW5nc3RlcnMgdG8gIHZvbHVudGVlciB0aGVpciBzZXJ2aWNlcyBhdCBhbnkgbmVpZ2hib3Job29kIGdvdmVybm1lbnQgIHNjaG9vbC4gU28gYWNjb3JkaW5nbHkgIkEiIGlzIHRoZSBtb3N0IGFwcHJvcHJpYXRlIGNob2ljZS4gICgtKVdoYXQgYWJvdXQgc3RhdGVtZW50ICIzIj8gV2hpbGUgdGhlIG15Z292LmluIHBvcnRhbCAgZ3VpZGVsaW5lcyBtZW50aW9uIHRoYXQgVmlkeWFuamFsaSB3aWxsIGNvdmVyIGluaXRpYXRpdmVzICB1bmRlciBDU1IsIFBQUCwgUFNVLiBCdXQgbW9iaWxpemF0aW9uIG9mIHZvbHVudGFyeSAgbW9uZXRhcnkgY29udHJpYnV0aW9uIGlzIG5vdCB0aGUgcHJpbWFyeSBhbmQgZXhwbGljaXQgICdwdXJwb3NlJyBvZiB0aGUgc2NoZW1lLiAgKC0pQW5kIHRoZSBzY2hlbWUgaXMgdGFyZ2V0ZWQgYXQgcHJpbWFyeSAoQ2xhc3MgMSB0byA1KSAgYW5kIHVwcGVyIHByaW1hcnkgY2xhc3NlcyAoQ2xhc3MgNiB0byA4KSBzbyAnc2Vjb25kYXJ5ICBzY2hvb2xzJyBpbmZyYXN0cnVjdHVyZSBmYWNpbGl0aWVzJyBhcmUgYmV5b25kIGl0cyBzY29wZSBvZiAgd29yay4gSFJEIG1pbmlzdHJ5J3Mgb3RoZXIgc2NoZW1lcyBzcGVjaWZpY2FsbHkgY291bnQgIGNsYXNzIDkgb253YXJkcyBhcyAnc2Vjb25kYXJ5IGVkdWNhdGlvbicgIEhlbmNlIDMgaXMgd3JvbmcuIFRoZXJlZm9yZSwgQW5zd2VyIGlzICJBIi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1  and 2  only ",
        "option4" : " 2 an 3 only "
      }
    },
    {
      "index" : 105,
      "question" : "Consider the following statements:  1. The Reserve Bank of India manages and services Government of India Securities but not any State Government Securities. 2. Treasury bills are issued by the Government of India and there are no treasury bills issued by the State Governments. 3. Treasury bills offer are issued at a discount from the par value. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwNQ==",
      "description" : "ICgtKVJCSSBpcyBwdWJsaWMgZGVidCBtYW5hZ2VyIGZvciBib3RoIHN0YXRlIGFuZCB1bmlvbiAgR292ZXJubWVudHMsIHNvICMxIGlzIHdyb25nLiAgKC0pQWNjb3JkaW5nIHRvIERlcHQgb2YgRWNvbm9taWMgQWZmYWlycywgU2hvcnQtdGVybSAgZGVidCBvZiB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50IG9uIHJlc2lkdWFsIG1hdHVyaXR5IGJhc2lzICBpbmNsdWRlcyAxNC1kYXkgaW50ZXJtZWRpYXRlIHRyZWFzdXJ5IGJpbGxzLCByZWd1bGFyIHRyZWFzdXJ5ICBiaWxscywgZGF0ZWQgc2VjdXJpdGllcyBtYXR1cmluZyBpbiB0aGUgZW5zdWluZyBvbmUgeWVhciAgYW5kIGV4dGVybmFsIGRlYnQgd2l0aCByZW1haW5pbmcgbWF0dXJpdHkgb2YgbGVzcyB0aGFuIG9uZSAgeWVhci4gICgtKVNob3J0LXRlcm0gZGVidCBvZiBTdGF0ZSBHb3Zlcm5tZW50cyBjb21wcmlzZXMgIGludGVybmFsIGRlYnQgdGhhdCBpbmNsdWRlcyBtYXJrZXQgbG9hbnMgbWF0dXJpbmcgd2l0aGluICBuZXh0IG9uZSB5ZWFyLCBhbmQgcmVwYXltZW50IG9mIGxvYW5zIHRvIENlbnRyZS4gVGhlcmVmb3JlLCAgIzIgaXMgcmlnaHQuICAoLSlULWJpbGxzIGFyZSBzb2xkIGF0IGRpc2NvdW50IGFuZCByZS1wdXJjaGFzZWQgYXQgcGFyICB2YWx1ZSAoZmFjZSB2YWx1ZSkuIFNvLCAjMyBpcyByaWdodC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 Only ",
        "option3" : " 2  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 106,
      "question" : "If a commodity is provided free to the public by the Government, then:  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwNg==",
      "description" : "RnJvbSB0aGUgZmluaXRlIG1vbmV5IGF2YWlsYWJsZSwgR292ZXJubWVudCBjb3VsZCAgYnVpbGQgYSBzdHJlZXQgbGlnaHQgb3IgYSB3YXRlciB0YXAuIFNvLCBvcHBvcnR1bml0eSBjb3N0IGlzICBpbnZvbHZlZCBpbiBwdXJzdWluZyBlaXRoZXIgb25lIG9mIHRoZSBhY3Rpdml0eS4gRXhwZXJ0cyAgd2VyZSBkaXZpZGVkIG92ZXIgQyBvciBELXNvbWUgaW50ZXJwcmV0aW5nIHRoYXQgIG9wcG9ydHVuaXR5IGNvc3QgaXMgYm9ybmUgYnkgdGhlIERlY2lzaW9uIE1ha2VyLCB3aGlsZSAgb3RoZXJzIHNheWluZyBvcHBvcnR1bml0eSBjb3N0IGlzIGJvcm5lIGJ5IHRoZSBwZXJzb24gIHdobyAgZXZlbnR1YWxseSAgcGF5cyAgZm9yICBpdC4gIFVQU0MgIGhhcyAga2VwdCAgJ0MnICBhcyAgdGhlICBvZmZpY2lhbCBhbnN3ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " the opportunity cost is zero. ",
        "option2" : " the opportunity cost is ignored. ",
        "option3" : " the opportunity cost is transferred from the  consumers of the product to the tax-paying public. ",
        "option4" : " the opportunity cost is transferred from the "
      }
    },
    {
      "index" : 107,
      "question" : "Increase in absolute and per capita real GNP do not connote a higher level of economic development, if  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwNw==",
      "description" : "RWNvbm9taWMgZGV2ZWxvcG1lbnQgaW5jbHVkZXMgbm90IG9ubHkgZWNvbm9taWMgIGdyb3d0aCBidXQgYWxzbyB2YXJpb3VzIG90aGVyIGVjb25vbWljIGNoYW5nZXMgdGhhdCAgaW1wcm92ZSB0aGUgcXVhbGl0eSBvZiBsaWZlIG9yIHN0YW5kYXJkIG9mIGxpdmluZyBvZiBwZW9wbGUgIGluIGEgY291bnRyeS4gSWYgd2l0aCBlY29ub21pYyBncm93dGgsIGEgY291bnRyeSAgZXhwZXJpZW5jZXMgdmFyaW91cyBlY29ub21pYyBjaGFuZ2VzIHN1Y2ggYXMgcmVkdWN0aW9uICBpbiBwb3ZlcnR5IGFuZCB1bmVtcGxveW1lbnQsIHJlZHVjdGlvbiBpbiBpbmNvbWUgYW5kICB3ZWFsdGggaW5lcXVhbGl0eSwgaW5jcmVhc2UgaW4gbGl0ZXJhY3kgcmF0ZSwgaW1wcm92ZW1lbnQgaW4gIGhlYWx0aCBhbmQgaHlnaWVuZSwgZXRjLCB0aGF0IGltcHJvdmUgdGhlIHF1YWxpdHkgb2YgbGlmZSAgdGhlbiB0aGF0IGlzIGVjb25vbWljIGRldmVsb3BtZW50LiAoTklPUyBFY29ub21pY3MgIFRleHRib29rIFBhZ2UgMzIpLiBTbywgQyBpcyB0aGUgZml0dGluZyBjaG9pY2Ug",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " industrial output fails to keep pace with agricultural  output. ",
        "option2" : " agricultural output fails to keep pace with industrial  output. ",
        "option3" : " poverty and unemployment increase. ",
        "option4" : " imports grow faster than exports. "
      }
    },
    {
      "index" : 108,
      "question" : " Atal innovation mission is set up under the  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwOA==",
      "description" : "VGhlIEF0YWwgSW5ub3ZhdGlvbiBNaXNzaW9uIChBSU0pIGlzIGEgZmxhZ3NoaXAgaW5pLSAgdGlhdGl2ZSBvZiB0aGUgUHJpbWUgTWluaXN0ZXIsIHNldCB1cCBieSBOSVRJIEFheW9nIHRvIHByby0gIG1vdGUgaW5ub3ZhdGlvbiBhbmQgZW50cmVwcmVuZXVyc2hpcCBhY3Jvc3MgdGhlIGxlbmd0aCAgYW5kIGJyZWFkdGggb2YgdGhlIGNvdW50cnkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Department of science of technology ",
        "option2" : " Ministry of labour and employment ",
        "option3" : " NITI Ayog ",
        "option4" : " Ministry of skill development and entrepreneurship "
      }
    },
    {
      "index" : 109,
      "question" : "In a given year in India, official poverty lines are higher in some states than in other because  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEwOQ==",
      "description" : "UGFnZSAxOSwgQXNpYW4gRGV2ZWxvcG1lbnQgQmFuayBkb2N1bWVudCBvbiAgVW5kZXJzdGFuZGluZyBwb3ZlcnR5IGluIEluZGlhLiAgKC0pUG92ZXJ0eSBsaW5lcyBhcmUgZXN0aW1hdGVkIHVzaW5nIHRoZSBvcmlnaW5hbCBzdGF0ZS0gIHNwZWNpZmljIHBvdmVydHkgbGluZXMgaWRlbnRpZmllZCBieSB0aGUgRXhwZXJ0IEdyb3VwIGFuZCAgdXBkYXRpbmcgdGhlbSB0byAyMDA0LTIwMDUgcHJpY2VzIHVzaW5nIHRoZSBDb25zdW1lciAgUHJpY2UgSW5kZXggb2YgQWdyaWN1bHR1cmFsIExhYm9yZXJzIChDUElBTCkgZm9yIHJ1cmFsICBwb3ZlcnR5IGxpbmVzIGFuZCBDb25zdW1lciBQcmljZSBJbmRleCBmb3IgSW5kdXN0cmlhbCAgV29ya2VycyAoQ1BJSVcpIGZvciB1cmJhbiBwb3ZlcnR5IGxpbmVzLiAgKC0pU28sIEI6IHByaWNlIGxldmVscyBpcyB0aGUgbW9zdCBhcHByb3ByaWF0ZSBjaG9pY2UuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Poverty rates vary from state to state ",
        "option2" : " Price levels vary from state to state ",
        "option3" : " Gross state product varies from state to state ",
        "option4" : " Quality of public distribution varies from state to state "
      }
    },
    {
      "index" : 110,
      "question" : "With reference to India's Five Year Plans, which of the following statements is/are correct?  1. From the Second Five-Year Plan, there was a determined thrust towards substitution of basic and capital good industries. 2. The Fourth Five-Year Plan adopted the objective of correcting the earlier trend of increased concentration of wealth and economic power. 3. In the Fifth Five-Year Plan, for the first time, the financial sector was included as an integral part of the Plan. Select the correct answer using the code given below ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExMA==",
      "description" : "ICgtKTJuZCBGWVA6IHJhcGlkIGluZHVzdHJpYWxpemF0aW9uIHdpdGggcGFydGljdWxhciAgZW1waGFzaXMgb24gdGhlIGRldmVsb3BtZW50IG9mIGJhc2ljIGFuZCBoZWF2eSAgaW5kdXN0cmllcyBzbyBTdGF0ZW1lbnQxIGlzIGNvcnJlY3QuIFRoaXMgZWxpbWluYXRlcyBCIGFuZCAgQy4gVGhlIGNvcnJlY3QgYW5zd2VyIGNvdWxkIGJlIEEgb3IgRC4gSW4gYm90aCB0aGVzZSAgb3B0aW9ucywgc2Vjb25kIHN0YXRlbWVudCBpcyBjb21tb24gc28gd2Ugc2hvdWxkICBhY2NlcHQgc3RhdGVtZW50ICMyIHRvIGJlIGNvcnJlY3Qgd2l0aG91dCBjaGVja2luZyBpdHMgIHZhbGlkaXR5LiAgKC0pNXRoIEZZUDogRmlmdGggUGxhbiAoMTk3NC03OSkgd2FzIGZvcm11bGF0ZWQgYWdhaW5zdCAgdGhlIGJhY2tkcm9wIG9mIHNldmVyZSBpbmZsYXRpb25hcnkgcHJlc3N1cmVzLiBvYmplY3RpdmVzICBvZiB0aGUgcGxhbiB3ZXJlIHRvIGFjaGlldmUgc2VsZi1yZWxpYW5jZSBhbmQgYWRvcHQgIG1lYXN1cmVzIGZvciByYWlzaW5nIHRoZSBjb25zdW1wdGlvbiBzdGFuZGFyZCBvZiBwZW9wbGUgIGxpdmluZyBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lLiBUaGlzIFBsYW4gYWxzbyBnYXZlIGhpZ2ggIHByaW9yaXR5IHRvIGJyaW5nIGluZmxhdGlvbiB1bmRlciBjb250cm9sIGFuZCB0byBhY2hpZXZlICBzdGFiaWxpdHkgaW4gdGhlIGVjb25vbWljIHNpdHVhdGlvbi4gSXQgdGFyZ2V0ZWQgYW4gYW5udWFsICBncm93dGggcmF0ZSBvZiA1LjUgcGVyY2VudCBpbiB0aGUgbmF0aW9uYWwgaW5jb21lLiBUaGVyZSAgaXMgbm8gbWVudGlvbiBvZiBGaW5hbmNpYWwgU2VjdG9yIGhlcmUsIHNvICMzIGlzIHdyb25nLiAgV2UgYXJlICBsZWZ0ICB3aXRoICBBbnN3ZXIgIEE6ICBvbmx5ICAxICBhbmQgMi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 111,
      "question" : "Which of the following statements is/are correct regarding the Maternity Benefit (Amendment) Act, 2017?    1. Pregnant women are entitled for three months pre- delivery and three months post-delivery paid leave 2. Enterprises with creches must allow the mother minimum six creche visits daily 3. Women with two children get reduced entitlements. Select the correct answer using the code given below ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExMQ==",
      "description" : "QXMgcGVyIHRoZSBiYXJlIGFjdDogICgtKUluIGNhc2Ugb2YgYSB3b21hbiB3aG8gaGFzIHR3byBvciBtb3JlIGNoaWxkcmVuLCAgdGhlIG1hdGVybml0eSBiZW5lZml0IHdpbGwgY29udGludWUgdG8gYmUgMTIgd2Vla3MuIElmIGxlc3MgIHRoYW4gdHdvIGNoaWxkcmVuIHRoZW4gc2hlJ2xsIGdldCAyNiB3ZWVrcyBwYWlkIGxlYXZlLiAgKC0pRXZlcnkgZXN0YWJsaXNobWVudCB3aXRoIDUwIG9yIG1vcmUgZW1wbG95ZWVzIHRvICBwcm92aWRlIGNyw6hjaGUgZmFjaWxpdGllcyB3aXRoaW4gYSBwcmVzY3JpYmVkIGRpc3RhbmNlLiAgVGhlICB3b21hbiB3aWxsIGJlIGFsbG93ZWQgZm91ciB2aXNpdHMgdG8gdGhlIGNyw6hjaGUgaW4gYSBkYXkuICBTbyAjMiBpcyB3cm9uZy4gV2UgYXJlIGxlZnQgd2l0aCBBbnN3ZXIgQzogb25seSAzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 112,
      "question" : "Considering the following statements:  1. Purchasing Power Parity (PPP) exchange rates are calculated by the prices of the same basket of goods and services in different countries. 2. In terms of PPP dollars, India is the sixth largest economy in the world. Which of the statements given above is/ are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExMg==",
      "description" : "ICgtKVBQUDogSHlwb3RoZXRpY2FsIGNvbmNlcHQgdGhhdCB0cmllcyB0byBjb21wYXJlIHR3byAgY3VycmVuY2llcycgZXhjaGFuZ2UgcmF0ZSB0aHJvdWdoIHRoZWlyICBwdXJjaGFzaW5nIHBvd2VyICBpbiByZXNwZWN0aXZlIGNvdW50cmllcy4gU28sICMxIGlzIHJpZ2h0LiAgIEQgMjggICgtKTIwMTQtQXByaWwsIEVjb25vbWljIFRpbWVzOiBJbmRpYSBkaXNwbGFjZXMgSmFwYW4gIHRvIGJlY29tZSB0aGlyZC1sYXJnZXN0IHdvcmxkIGVjb25vbXkgaW4gdGVybXMgb2YgUFBQOiAgV29ybGQgQmFuay4gU28gIzIgaXMgd3JvbmcsIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIEE6ICAxIG9ubHkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 113,
      "question" : "Which one of the following is not the most likely measure the Government/RBI takes to stop the slide of Indian rupee?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExMw==",
      "description" : "VG8gY29udHJvbCBydXBlZSB3ZWFrZW5pbmcsICAoLSlBOiB3aWxsIGhlbHAgYnkgcmVkdWNpbmcgdGhlIEN1cnJlbnQgYWNjb3VudCBkZWZpY2l0LiAgKC0pQjogd2lsbCBoZWxwIGJ5IHJlZHVjaW5nIHRoZSBkZW1hbmQgb2YgZG9sbGFycyBpbiAgbG9hbi1yZXBheW1lbnQuICAoLSlDOiB3aWxsIGhlbHAgYnkgaW5jcmVhc2luZyB0aGUgaW5mbG93IG9mIGRvbGxhcnMgYW5kICBvdGhlciBjdXJyZW5jaWVzLiAgKC0pRDogd2lsbCBiYWNrZmlyZSwgYmVjYXVzZSBydXBlZSBjdXJyZW5jeSBzdXBwbHkgd2lsbCAgaW5jcmVhc2Ugd2l0aG91dCBjb3JyZXNwb25kaW5nIGluY3JlYXNlIGluIHRoZSBzdXBwbHkgb2YgIGRvbGxhcnMgYW5kIGFzIGEgcmVzdWx0OiBkb2xsYXIgd2lsbCBzdHJlbmd0aGVuLCBJbmRpYW4gIFJ1cGVlIHdpbGwgd2Vha2VuIGZ1cnRoZXIuIFNvIEQgaXMgdGhlIGFuc3dlci4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Curbing imports of non-essential goods and  promoting exports ",
        "option2" : " Encouraging indian borrowers to issue rupee  denominated Masala bonds ",
        "option3" : " Easing conditions relating to external commercial  borrowing ",
        "option4" : " Following an expansionary monetary policy "
      }
    },
    {
      "index" : 114,
      "question" : "The money multiplier in an economy increases with which one of the following?          ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExNA==",
      "description" : "ICgtKU1vbmV5IE11bHRpcGxpZXIgZGlyZWN0bHkgaW1wcm92ZXMgd2l0aCBjdXQgaW4gbGVnYWwgIHJlc2VydmUgcmF0aW9zIChTTFIsIENSUjogc28gQSBhbmQgRCBhcmUgd3JvbmcpICAoLSlNb25leSBNdWx0aXBsaWVyIGluZGlyZWN0bHkgaW1wcm92ZXMgYXMgZWNvbm9teSAgZGV2ZWxvcHMsIGNvbnN1bXB0aW9uL2xvYW4gZGVtYW5kIGluY3JlYXNlcywgYmFua2luZyAgcGVuZXRyYXRpb24gaW1wcm92ZXMgZXRjLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Increase in the cash reserve ratio ",
        "option2" : " Increase in the banking habit of the population ",
        "option3" : " Increase in the statutory liquidity ",
        "option4" : " Increase in the population of the country "
      }
    },
    {
      "index" : 115,
      "question" : "If another global financial crisis happens in the near future, which of the following actions/policies are most likely to give some immunity to India ?  1. Not depending on short-term foreign borrowings 2. Opening up to more foreign banks 3. Maintaining full capital account convertibility Select the correct answer using the code given below : ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExNQ==",
      "description" : "ICgtKUtlZXBpbmcgZnVsbCBjYXBpdGFsIGFjY291bnQgY29udmVydGliaWxpdHkgd2lsbCBtYWtlICBJbmRpYSB2dWxuZXJhYmxlIHRvIGdsb2JhbCBjcmlzaXMsIGp1c3QgbGlrZSB0aGUgMTk5NydzIGNyaXNpcyAgYW1vbmcgdGhlIEVhc3QgQXNpYW4gY291bnRyaWVzLiBTbyBudW1iZXIgMyBpcyB3cm9uZy4gICgtKUlmIEluZGlhbiBHb3Zlcm5tZW50IC9SQkkgYWxsb3dzIG9wZW5pbmcgb2YgbW9yZSAgZm9yZWlnbiBiYW5rcyBpbiBJbmRpYSwgdGhlcmUgY291bGQgYmUgYSBkYW5nZXJvdXMgIHNjZW5hcmlvIHdoZXJlIGZvcmVpZ24gcHJvYmxlbXMgbWF5IHBlcmNvbGF0ZSBpbnRvICBJbmRpYW4gZWNvbm9teS4gIFNvLCAjMiBpcyB3cm9uZy4gU28gd2UgYXJlIGxlZnQgd2l0aCAgQW5zd2VyIChhKSBvbmx5IDEuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 116,
      "question" : "If you withdraw Rs. 1,00,000 in cash from your Demand Deposit Account at your bank, the immediate effect on aggregate money supply in the economy will be  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExNg==",
      "description" : "ICgtKUFnZ3JlZ2F0ZSBtb25leSBzdXBwbHkgbWVhbnMgTTMuICAoLSk9IENvaW4gYW5kIGN1cnJlbmN5IHdpdGggcHVibGljICtEZW1hbmQgRGVwb3NpdCAgd2l0aCBjb21tZXJjaWFsIGJhbmtzICtUaW1lIERlcG9zaXRzIHdpdGggY29tbWVyY2lhbCAgYmFua3MgICgtKVNvIGlmIHlvdSB3aXRoZHJhdyAxMDAwMDAgcnVwZWVzIGZyb20geW91ciAgYWNjb3VudCB0aGVuIE0zIHdpbGwgcmVtYWluIHVuY2hhbmdlZCBiZWNhdXNlIMK5IDEgbGFraCAgd2lsbCBzaGlmdCBmcm9tIHRoZSBjb2x1bW4gb2YgJ2RlbWFuZCBkZXBvc2l0cycgdG8gdGhlICAnY29pbiBjdXJyZW5jeSB3aXRoIHB1YmxpYy4nIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " to reduce it by   `  1,00,000 ",
        "option2" : " to increase it by   `  1,00,000 ",
        "option3" : " to increase it by more than   `  1,00,000 ",
        "option4" : " to leave it unchanged "
      }
    },
    {
      "index" : 117,
      "question" : "Along with the Budget, the Finance Minister also places other documents before the Parliament which include 'The Macro Economic Framework Statement'. The aforesaid document is presented because this is mandated by  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExNw==",
      "description" : "VGhpcyBkb2N1bWVudCBpcyBwcmVzZW50ZWQgYXMgcGVyIHRoZSBQcm92aXNpb25zIG9mICB0aGUgRlJCTSBhY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Long standing parliamentary convention ",
        "option2" : " Article 112 and Article 110(1) of the Constitution of  India ",
        "option3" : " Article 113 of the Constitution of India ",
        "option4" : " Provisions of the Fiscal Responsibility and Budget "
      }
    },
    {
      "index" : 118,
      "question" : "Under the Kisan Credit Card scheme, short-term credit support is given to farmers for which of the  following purposes ?  1. Working capital for maintenance of farm assets 2. Purchase of combine harvesters, tractors and mini trucks 3. Consumption requirements of farm households 4. Post-harvest expenses 5. Construction of family house and setting up of village cold storage facility Select the correct answer using the code given below : ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExOA==",
      "description" : "S2lzYW4gQ3JlZGl0IENhcmQgcHJpbWFyaWx5IG1lYW50IGZvciBidXlpbmcgZmFybSAgaW5wdXRzLlNvIGNvbnN0cnVjdGlvbiBvZiAnZmFtaWx5IGhvdXNlJyBzZWVtcyBmYXItICBmZXRjaGVkLiBTbywgIzUgaXMgd3JvbmcuIEZ1cnRoZXIsIHNldHRpbmcgdXAgYSB2aWxsYWdlICBjb2xkIHN0b3JhZ2UgZmFjaWxpdHkgY2Fubm90IGJlIGRvbmUgdGhyb3VnaCBhIHNob3J0LXRlcm0gIGNyZWRpdCAoYXMgZ2l2ZW4gaW4gdGhlIHF1ZXN0aW9uIHByZW1pc2UpIGl0IHdpbGwgcmVxdWlyZSBhICB2ZXJ5IGxvbmcgdGVybSBsb2FuLiBTbywgIzUgaXMgd3JvbmcuIEJ5IGVsaW1pbmF0aW9uIHdlICBhcmUgbGVmdCB3aXRoIGFuc3dlciAnYicuICBJbnRlcmVzdGluZ2x5IG5vIHF1ZXN0aW9ucyBmcm9tIHRoZSBnb3Zlcm5tZW50IHNjaGVtZXMgIHJlbGF0ZWQgdG8gaW5zdXJhbmNlIGFuZCBwZW5zaW9uLiBBbHRob3VnaCBpbiB0aGUgbGFzdCAgdHdvIHllYXJzIG1hbnkgaW5pdGlhdGl2ZXMgd2VyZSB1bmRlcnRha2VuIHN1Y2ggYXMgUE0gIFNocmFtIFlvZ2kgTWFhbiBEaGFuLCBMYWdodSBWeWFwYXJpIE1hYW4gRGhhbiwgIEtpc2FuIE1hYW4gRGhhbiBldGMuIHNjaGVtZXMg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 5 only ",
        "option2" : " 1, 3 and 4 only ",
        "option3" : " 2, 3, 4 and 5 only ",
        "option4" : " 1, 2, 3, 4 an 5 "
      }
    },
    {
      "index" : 119,
      "question" : "Consider the following statements  1. The weightage of food in Consumer Price Index (CPI) is higher than that in Wholesale Price Index (WPI). 2. The WPI does not capture changes in the prices of services, which CPI does. 3. Reserve Bank of India has now adopted WPI as its key measure of inflation and to decide on changing the key policy rates. Which of the statements given- above is/are correct ? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDExOQ==",
      "description" : "ICgtKVVuZGVyIHRoZSBuZXcgbW9uZXRhcnkgcG9saWN5IEZyYW1ld29yayBlZmZlY3RpdmUgIHNpbmNlIDIwMTYsIFJCSSB0cmllcyB0byBjb250cm9sIGluZmxhdGlvbiBhdCAyLTYlIG9mIENQSSAgKEFsbCBJbmRpYSkuIFNvLCAjMyBpcyB3cm9uZy4gT3B0aW9uIGMgYW5kIGQgZWxpbWluYXRlZC4gSW4gIGJvdGggKGEgJiBiKSB0aGUgb3B0aW9ucywgc3RhdGVtZW50IzIgaXMgY29tbW9uIHNvIHdlICBoYXZlIHRvIGFjY2VwdCAjMiBhcyBjb3JyZWN0LCBFdmVuIHdpdGhvdXQgY2hlY2tpbmcuICBFdmVyeXRoaW5nIGJvaWxzIGRvd24gdG8gd2hldGhlciBzdGF0ZW1lbnQjMSBpcyBjb3JyZWN0ICBvciBub3Q/ICAoLSlCb3RoIFdQSSBhbmQgQ1BJIGFyZSBiYXNlZCBvbiBMYXNwZXlyZXMgZm9ybXVsYSAgd2hlcmVpbiB3ZWlnaHRhZ2UgaXMgYXNzaWduZWQgdG8gbXVsdGlwbGUgY29tbW9kaXRpZXMgIGFuZCB0aGVpciBwcmljZXMgYXJlIHRyYWNrZWQuIFRoZSB3ZWlnaHQgb2YgYW4gaW5kaXZpZHVhbCAgY29tbW9kaXR5IGRlcGVuZHMgb24gaG93IGZyZXF1ZW50bHkgaXQgaXMgYm91Z2h0IGJ5ICB0aGUgY29uc3VtZXIuIFNvIG9idmlvdXNseSBjb25zdW1lciBwcmljZSBpbmRleCB3b3VsZCAgYmUgZ2l2aW5nIG1vcmUgd2VpZ2h0YWdlIHRvIHRoZSBmb29kIHByb2R1Y3RzIGNvbXBhcmVkICB0byBXUEkgd2hpY2ggaXMgYWltZWQgYXQgdGhlIG1hbnVmYWN0dXJlcnMuIFNvLCAjMSAgc2hvdWxkIGJlIGNvcnJlY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 only 4, ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 120,
      "question" : "With  reference  to  the  Indian  economy  after  the  1991 economic liberalization, consider the following statements :  1. Worker productivity per worker (at 2004-05 prices) increased in urban areas while it decreased in rural areas. 2. The percentage share of rural areas in the workforce steadily increased. 3. In rural areas, the growth in the non-farm economy increased. 4. The growth rate in rural employment decreased. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNlfDEyMA==",
      "description" : "ICgtKUFmdGVyIHRoZSBMUEcgcmVmb3JtcyBvZiAxOTkxIGl0IGlzIGluZXZpdGFibGUgdGhhdCAgdGhlIHJ1cmFsL2FncmljdWx0dXJlIHdvcmtmb3JjZSB3b3VsZCBzdGFydCBzaGlmdGluZyAgdG93YXJkcyB1cmJhbi9ub24tYWdyaSBzZWN0b3JzLiBTbyB0aGF0IG1lYW5zICMyIGlzICB3cm9uZyBhbmQgIzMgc2hvdWxkIGJlIGNvcnJlY3QuICAoLSlTaW5jZSB0aGUgdG90YWwgbnVtYmVyIG9mIHdvcmtlcnMgaGF2ZSByZW1haW5lZCAgbW9yZSBvciBsZXNzIHRoZSBzYW1lIGJ1dCAjIG9mICBydXJhbCB3b3JrZXJzIGRlY2xpbmVkLCAgVGhhdCBtZWFucyB0aGVpciBQZXJjZW50YWdlIHNoYXJlIGFsc28gZGVjbGluZWQsIEFuZCBpdCAgd2lsbCBhbHNvIGhpbnQgdGhhdCBncm93dGggcmF0ZSBpbiBSdXJhbCBFbXBsb3ltZW50IGhhcyAgZGVjcmVhc2VkLiBzbyBTdGF0ZW1lbnQjMiBpcyB3cm9uZyB3aGlsZSAjNCBpcyBjb3JyZWN0LiAgT25seSBvcHRpb24gYiBmaXRzIGludG8gdGhpcyBwYXR0ZXJuLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fFBvdmVydHksIFBsYW5uaW5nLCBGaW5hbmNl",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Poverty, Planning, Finance",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 4 "
      }
    }
  ],
  "subject" : "Economic & Social Development",
  "topic" : "Poverty, Planning, Finance",
  "year" : "0"
}
