{
  "testId" : "history|modern-history",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "In the interim government formed in 1946, the Vice-President of the Executive Council was:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE=",
      "description" : "Qy4gUmFqYWdvcGFsYWNoYXJpIHdhcyB0aGUgSGVhZCBvZiB0aGUgRGVwYXJ0bWVudCBvZiAgRWR1Y2F0aW9uIGFuZCBEci4gUmFqZW5kcmEgUHJhc2FkIHdhcyB0aGUgSGVhZCBvZiB0aGUgIERlcGFydG1lbnQgb2YgRm9vZCAmIEFncmljdWx0dXJlIGluIHRoZSBFeGVjdXRpdmUgQ291bmNpbC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jawaharlal Nehru ",
        "option2" : " Dr. S. Radhakrishnan ",
        "option3" : " C. Rajagopalachari ",
        "option4" : " Dr. Rajenra Prasa "
      }
    },
    {
      "index" : 2,
      "question" : "Hooghly was used as a base for piracy in the Bay of Bengal by:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI=",
      "description" : "VGhlIFBvcnR1Z3Vlc2UgdXNlZCBIb29naGx5IGFzIGEgYmFzZSBmb3IgcGlyYWN5IGluICB0aGUgQmF5IG9mIEJlbmdhbC4gSW4gMTYzMSAtIDMyLCBRYXNpbSBLaGFuLCB3aG8gd2FzIHRoZSAgZ292ZXJub3Igb2YgQmVuZ2FsIGR1cmluZyBTaGFoIEphaGFuIHJlaWducyBmaW5hbGx5ICBzdWJkdWVkIHRoZW0uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the Portuguese ",
        "option2" : " the French ",
        "option3" : " the Danish ",
        "option4" : " the British "
      }
    },
    {
      "index" : 3,
      "question" : "The 'Modi script' was employed in the documents of the:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM=",
      "description" : "SXQgd2FzIG1haW5seSB1c2VkIGluIG1haW50YWluaW5nIHRoZSByZXZlbnVlIGFuZCAgYWRtaW5pc3RyYXRpdmUgcmVjb3Jkcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Wodeyars ",
        "option2" : " Zamorins ",
        "option3" : " Hoysalas ",
        "option4" : " Marathas "
      }
    },
    {
      "index" : 4,
      "question" : "Examine the map given below:  The places marked 1, 2, 3 and 4 were respectively the seats of powers of the: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ=",
      "description" : "U2NpbmRpYXMgb2YgR3dhbGlvcjsgSG9sa2FycyBvZiBJbmRvcmU7IEdhZWt3YWRzIG9mICBCYXJvZGE7IEJob25zbGVzIG9mIE5hZ3B1ci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Scindias, Holkars, Gaekwads and Bhonsles ",
        "option2" : " Holkars, Scindias, Gaekwads and Bhonsles ",
        "option3" : " Gaekwads, Bhonsles, Scindias and Holkars ",
        "option4" : " Scindias, Holkars, Bhonsles and Gaekwads "
      }
    },
    {
      "index" : 5,
      "question" : "Which one of the following pairs is correctly matched?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU=",
      "description" : "QmF0dGxlIG9mIFdhbmRpd2FzaCBpbiAxOTYwIGFuZCBGcmVuY2ggd2VyZSBmaW5hbGx5ICBkZWZlYXRlZCBieSBFbmdsaXNoLiBCYXR0bGUgb2YgQnV4YXIgKDE3NjQpIC0gRW5nbGlzaCB1bmRlciAgTXVucm8gZGVmZWF0ZWQgTWlyIFFhc2ltLCBTaHVqYS11ZC1kYXVsYSBhbmQgU2hhaCBBbGFtIElJLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Battle of Buxar-Mir Jafar vs. Clive ",
        "option2" : " Battle of Wandiwash-French vs. East India Company ",
        "option3" : " Battle of Chilianwala-Dalhousie vs. Marathas ",
        "option4" : " Battle of Kharda-Nizam vs. East India Company "
      }
    },
    {
      "index" : 6,
      "question" : "The word Adivasi was used for the first time to refer to the tribal people by:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDY=",
      "description" : "QWRpdmFzaSBtZWFucyBwcmltaXRpdmUgcGVvcGxlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Mahatma Gandhi ",
        "option2" : " Thakkar Bappa ",
        "option3" : " Jyotiba Phule ",
        "option4" : " B.R. Ambekar "
      }
    },
    {
      "index" : 7,
      "question" : "Match List I with List II and select the correct answer  List I (A) Governor-General of Presidency of Fort William in Bengal (under Regulating Act, 1773) (B) Governor-General of India (under Charter Act, 1833) (C) Governor-General and Viceroy of India (under Indian Council Act, 1858) (D) Governor-General and Crown Representative (under Government of India Act, 1935) List II . 1. Archibald Percival Wavell, Viscount and Earl Wavell 2. James Andrew Broun-Ramsay, Earl and Marquess of Dalhousie 3. Charles Cornwallis 2nd Earl and first Marquess of Cornwallis 4. Gilbert John Elliot-Murray-Kynynmound, Earl of Minto 5. Louis Mountbatten, Earl Mountbatten of Burma ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDc=",
      "description" : "VGhlIEVhcmwgQ29ybndhbGxpcyB0b29rIG9mZmljZSBvbiAxMiBTZXB0ZW1iZXIgMTc4NiAgYW5kIGxlZnQgb2ZmaWNlIG9uIDI4IE9jdG9iZXIgMTc5My4gVGhlIE1hcnF1ZXNzIENvcm53YWxsaXMgIHRvb2sgb2ZmaWNlIG9uIDMwIEp1bHkgMTgwNSBhbmQgbGVmdCBvZmZpY2Ugb24gNSBPY3RvYmVyIDE4MDUuICBKYW1lcyBBbmRyZXcgQnJvdW4tUmFtc2F5LCAxc3QgTWFycXVlc3Mgb2YgRGFsaG91c2llICBzZXJ2ZWQgYXMgR292ZXJub3ItR2VuZXJhbCBvZiBJbmRpYSBmcm9tIDE4NDggdG8gMTg1Ni4gIExvcmQgTW91bnRiYXR0ZW4gd2FzIHRoZSBsYXN0IFZpY2Vyb3kgb2YgSW5kaWEgKDE5NDcpIGFuZCAgdGhlIGZpcnN0IEdvdmVybm9yLUdlbmVyYWwgb2YgdGhlIGluZGVwZW5kZW50IERvbWluaW9uIG9mICBJbmRpYSAoMTk0Ny00OCkuICBUaGUgVmlzY291bnQgV2F2ZWxsIHRlbnVyZSBpcyAxIE9jdG9iZXIgMTk0MyAtIDIxIEZlYnJ1YXJ5ICAxOTQ3LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A-3; B-2; C-4 ;D-1 ",
        "option2" : " A-1; B-2; C-3; D-4 ",
        "option3" : " A-2; B-5; C-3; D-1 ",
        "option4" : " A-2; B-4; C-5; D-3 "
      }
    },
    {
      "index" : 8,
      "question" : "His principal forte was social and religious reform. He relied upon legislation to do away with social ills and work unceasingly for the eradication of child marriage and the purdah system. To encourage consideration of social problems on a national scale, he inaugurated the Indian National Social Conference, which for many years met for its annual session alongside the Indian National Congress. The reference in this passage is to:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDg=",
      "description" : "UmFuYWRlIHdvcmtlZCBmb3Igc29jaWFsIHJlZm9ybSBpbiB0aGUgYXJlYXMgb2YgY2hpbGQgIG1hcnJpYWdlLCB3aWRvdyByZW1hcnJpYWdlLCBhbmQgd29tZW4ncyByaWdodHMuIEhlIHdhcyBhICBkaXN0aW5ndWlzaGVkIEluZGlhbiBzY2hvbGFyLCBzb2NpYWwgcmVmb3JtZXIgYW5kIGF1dGhvci4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ishwar Chandra Vidyasagar ",
        "option2" : " Behramji Merwanji Malabari ",
        "option3" : " Mahadev Govind Ranade ",
        "option4" : " B.R. Ambedkar "
      }
    },
    {
      "index" : 9,
      "question" : "The following advertisement.  THE MARVEL OF THE CENTURY THE WONDER OF THE WORLD LIVING PHOTOGRAPHIC PICTURES IN LIFE-SIZED REPRODUCTIONS BY MESSERS LUMIERE BROTHERS CINEMATOGRAPHIE A FEW EXHIBITIONS WILL BE GIVEN AT WATSON'S HOTEL TONIGHT Appeared in the Times of India dated 7th August: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDk=",
      "description" : "VGhpcyB3YXMgdGhlIGZpcnN0IGFkdmVydGlzZW1lbnQgb2YgSW5kaWFuIGNpbmVtYSBpbiAgVGltZXMgb2YgSW5kaWEgZGF0ZWQgN3RoIEF1Z3VzdCwgMTg5Ni4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1931 ",
        "option2" : " 1929 ",
        "option3" : " 1921 ",
        "option4" : " 1896 "
      }
    },
    {
      "index" : 10,
      "question" : "Who among the following was the first European to initiate the policy of taking part in the quarrels of Indian princes with a view to acquire territories?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDEw",
      "description" : "RHVwbGVpeCBzdWNjZWVkZWQgRHVtYXMgYXMgdGhlIEZyZW5jaCBnb3Zlcm5vciBvZiAgUG9uZGljaGVycnkuIEhpcyBhbWJpdGlvbiBub3cgd2FzIHRvIGFjcXVpcmUgZm9yIEZyYW5jZSAgdmFzdCB0ZXJyaXRvcmllcyBpbiBJbmRpYSwgYW5kIGZvciB0aGlzIHB1cnBvc2UgaGUgZW50ZXJlZCBpbnRvICByZWxhdGlvbnMgd2l0aCB0aGUgbmF0aXZlIHByaW5jZXMsIGFuZCBhZG9wdGVkIGEgc3R5bGUgb2YgIG9yaWVudGFsIHNwbGVuZG91ciBpbiBoaXMgZHJlc3MgYW5kIHN1cnJvdW5kaW5ncy4gSGUgYnVpbHQgIGFuIGFybXkgb2YgbmF0aXZlIHRyb29wcywgY2FsbGVkIHNlcG95cywgd2hvIHdlcmUgdHJhaW5lZCAgYXMgaW5mYW50cnltZW4gbWVuIGluIGhpcyBzZXJ2aWNlIGFsc28gaW5jbHVkZWQgdGhlIGZhbW91cyAgSHlkZXIgQWxpIG9mIE15c29yZS4gQ29sb25pYWwgYWRtaW5pc3RyYXRvciBhbmQgZ292ZXJub3ItICBnZW5lcmFsIG9mIHRoZSBGcmVuY2ggdGVycml0b3JpZXMgaW4gSW5kaWEsIHdobyBuZWFybHkgcmVhbGl6ZWQgIGhpcyBkcmVhbSBvZiBlc3RhYmxpc2hpbmcgYSBGcmVuY2ggZW1waXJlIGluIEluZGlhLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Clive ",
        "option2" : " Dupleix ",
        "option3" : " Albuquerque ",
        "option4" : " Warren Hastings "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following landmarks in Indian education:  1. Hindu College, Calcutta 2. University of Calcutta 3. Adam's Report 4. Wood's Despatch The correct chronological order of these landmarks is: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDEx",
      "description" : "SGluZHUgQ29sbGVnZSwgQ2FsY3V0dGEgLSAxODE3OyBVbml2ZXJzaXR5IG9mIENhbGN1dHRhICAtIDE4NTg7IEFkYW0ncyBSZXBvcnQgLSAxODM1LTM4OyBXb29kJ3MgRGVzcGF0Y2ggLSAxODU0IA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3, 4, 2 ",
        "option2" : " 1, 4, 3, 2 ",
        "option3" : " 3, 1,4, 2 ",
        "option4" : " 3, 2, 4, 1 "
      }
    },
    {
      "index" : 12,
      "question" : "Which one of the following is an important historical novel written during the latter half of the nineteenth century?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDEy",
      "description" : "RHVyZ2VzaCBOYW5kaW5pIHdhcyB3cml0dGVuIGJ5IEJhbmtpbSBDaGFuZHJhICBDaGF0dGVyamVlIGluIDE4NjItMTg2NCBpbiBCYW5nbGEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rast Goftar ",
        "option2" : " Durgesh Nandini ",
        "option3" : " Maratha ",
        "option4" : " Nibanhamala "
      }
    },
    {
      "index" : 13,
      "question" : "Who among the following was associated with suppression of thugs?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDEz",
      "description" : "Q2FwdGFpbiBXaWxsaWFtIFNsZWVtYW4gd2FzIGFwcG9pbnRlZCBieSBMb3JkICBXaWxsaWFtIEJlbnRpY2sgKDE4MjgtMzUpIHRvIHN1cHByZXNzIHRoZSB0aHVncy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " General Henry Prendergast ",
        "option2" : " Captain Sleeman ",
        "option3" : " Alexander Burres ",
        "option4" : " Captain Robert Pemberton "
      }
    },
    {
      "index" : 14,
      "question" : "What is the correct chronological sequence of the following? 1. Wood's Education Despatch 2. Macaulay's minute on education 3. The Sargent Education Report 4. Indian Education (Hunter Commission) Select the correct answer using the code given below:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE0",
      "description" : "V29vZCdzIERlc3BhdGNoIChNYWduYSBDYXJ0YSBvZiBFbmdsaXNoIGVkdWNhdGlvbikgIC0gMTg1NDsgTWFjYXVsYXkncyBNaW51dGUgb24gRWR1Y2F0aW9uIC0gMTgzNTsgU2FyZ2VudCAgRWR1Y2F0aW9uIFJlcG9ydCAtIDE5NDQ7IEh1bnRlciBDb21taXNzaW9uIC0gMTg4Mi04MyA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2, 1, 4, 3 ",
        "option2" : " 2, 1, 3, 4 ",
        "option3" : " 1, 2, 4, 3 ",
        "option4" : " 4, 3, 1, 3 "
      }
    },
    {
      "index" : 15,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I List-II A. Moplah revolt 1. Kerala B. Pabna revolt 2. Bihar C. Eka movement 3. Bengal D. Birsa Munda revolt 4. Awadh Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE1",
      "description" : "TW9wbGFoIHJldm9sdCBpbiBNYWxhYmFyIGluIEtlcmFsYSBpbiAxOTIxOyBQYWJuYSAgcmV2b2x0IGluIEVhc3QgQmVuZ2FsIChub3cgaW4gQmFuZ2xhZGVzaCkgaW4gMTg3MzsgRWthICBtb3ZlbWVudCBpbiAxOTIxLTIyIGluIGRpc3RyaWN0cyBvZiBVUDsgQmlyc2EgTXVuZGEgcmV2b2x0ICBpbiAxODk5IGluIFJhbmNoaSwgQmloYXIgKEJ1dCBub3cgcGFydCBvZiBKaGFya2hhbmQpLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B - 3; C - 4; D - 2 ",
        "option2" : " A - 2; B - 3; C - 4; D - 1 ",
        "option3" : " A - 1; B - 2; C - 3; D - 4 ",
        "option4" : " A - 3; B - 4; C - 1; D - 2 "
      }
    },
    {
      "index" : 16,
      "question" : "The educated middle class in India:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE2",
      "description" : "VGhlIHJldm9sdCBkaWQgbm90IHNwcmVhZCB0byBhbGwgcGFydHMgb2YgdGhlIGNvdW50cnkuICBOb3Igd2FzIGl0IHN1cHBvcnRlZCBieSBhbGwgZ3JvdXBzIGFuZCBzZWN0aW9ucyBvZiB0aGUgIEluZGlhbiBzb2NpZXR5LiBTb3V0aCBhbmQgV2VzdCBJbmRpYSByZW1haW5lZCBsYXJnZWx5ICBvdXRzaWRlIHRoZSBmb2xkIG9mIHRoZSByZXZvbHQuIE1hbnkgSW5kaWFuIHJ1bGVycyByZWZ1c2VkIHRvICBoZWxwIHRoZSByZWJlbHMgYW5kIHNvbWUgd2VyZSBvcGVubHkgaG9zdGlsZSB0byB0aGUgcmViZWxzICBhbmQgaGVscGVkIHRoZSBCcml0aXNoIGluIHN1cHByZXNzaW5nIHRoZSByZXZvbHQuIFRoZSBtaWRkbGUgIGFuZCB1cHBlciBjbGFzc2VzIGFuZCB0aGUgbW9kZXJuIGVkdWNhdGVkIEluZGlhbnMgYWxzbyAgZGlkIG5vdCBzdXBwb3J0IHRoZSByZXZvbHQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " opposed the revolt of 1857 ",
        "option2" : " supported the revolt of 1857 ",
        "option3" : " remained neutral to the revolt of 1857 ",
        "option4" : " fought against native rulers "
      }
    },
    {
      "index" : 17,
      "question" : "The paintings of Abanindranath Tagore are classified as:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE3",
      "description" : "QWJhbmluZHJhbmF0aCBUYWdvcmUgaXMga25vd24gYXMgdGhlIGxlYWRlciBvZiB0aGUgIFJldml2YWxpc3QgTW92ZW1lbnQgaW4gdGhlIGZpZWxkIG9mIG1vZGVybiBJbmRpYW4gcGFpbnRpbmcgIGluIEJlbmdhbC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " realistic ",
        "option2" : " socialistic ",
        "option3" : " revivalistic ",
        "option4" : " impressionistic "
      }
    },
    {
      "index" : 18,
      "question" : "There was no independent development of industries in India during British rule because of the:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE4",
      "description" : "VGhlIGVjb25vbXkgdW5kZXIgdGhlIEJyaXRpc2hlcnMgd29ya2VkIG9uIHRoZSAgcHJpbmNpcGxlIHRoYXQgSW5kaWEgd291bGQgcHJvZHVjZXIgb2YgcmF3IG1hdGVyaWFscy4gVGhlICByYXcgbWF0ZXJpYWxzIGxpa2UgY290dG9uLCBpcm9uIG9yZTsgaW5kaWdvIGV0YyB3b3VsZCB0aGVuIGJlICBib3VnaHQgYXQgbG93IHJhdGVzIGFuZCBleHBvcnRlZCB0byBFbmdsYW5kIGZvciBpdHMgIGluZHVzdHJpZXMgdG8gY29uc3VtZS4gSW5kaWEgd291bGQgdGhlbiBiZSB1c2VkIGFsc28gYXMgYSAgbWFya2V0IHRvIHNlbGwgb2ZmIGZpbmlzaGVkIGdvb2RzLiBIZW5jZSB0aGVyZSB3YXMgbm8gbmVlZCAgb2YgYW55IGhlYXZ5IGluZHVzdHJ5IGhlcmUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " absence of heavy industries ",
        "option2" : " scarcity of foreign capital ",
        "option3" : " scarcity of natural resources ",
        "option4" : " preference of the rich to invest in land "
      }
    },
    {
      "index" : 19,
      "question" : "The first feature film (talkie) to be produced in India was:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDE5",
      "description" : "QWxhbSBBcmEgIHdhcyB0aGUgZmlyc3QgSW5kaWFuIHNvdW5kIGZpbG0gZGlyZWN0ZWQgYnkgIEFyZGVzaGlyIElyYW5pLiBUaGUgZmlyc3QgSW5kaWFuIHRhbGtpZSB3YXMgc28gcG9wdWxhciB0aGF0ICBwb2xpY2UgYWlkIGhhZCB0byBiZSBzdW1tb25lZCB0byBjb250cm9sIHRoZSBjcm93ZHMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hatimtai ",
        "option2" : " Alam Ara ",
        "option3" : " Pundalik ",
        "option4" : " Raja Harishchanra "
      }
    },
    {
      "index" : 20,
      "question" : "The Governor-General who followed a spirited \"Forward\" policy towards Afghanistan was:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDIw",
      "description" : "TG9yZCBMeXR0b24gKDE4NzYtODApIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Minto ",
        "option2" : " Dufferin ",
        "option3" : " Elgin ",
        "option4" : " Lytton "
      }
    },
    {
      "index" : 21,
      "question" : "At a time when empires in Europe were crumbling before the might of Napoleon, which one of the following Governors-General kept the British flag flying high in India?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDIx",
      "description" : "TG9yZCBIYXN0aW5ncyAoMTgxMy0yMykg",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Warren Hastings ",
        "option2" : " Lord Cornwallis ",
        "option3" : " Lord Wellesley ",
        "option4" : " Lor Hastings "
      }
    },
    {
      "index" : 22,
      "question" : "Which one of the following statements is not correct?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDIy",
      "description" : "R2hhc2hpcmFtIEtvdHdhbCBpcyBhIE1hcmF0aGkgcGxheSB3cml0dGVuIGJ5ICBwbGF5d3JpZ2h0IFZpamF5IFRlbmR1bGthciBpbiAxOTcyLiBOZWVsIERhcnBhbiwgdGhlIE1pcnJvciAgb2YgSW5kaWdvOyB0cmFuc2xhdGVkIGFzIE5lZWwgRGFycGFuOyBvciwgdGhlIEluZGlnbyBQbGFudGluZyAgTWlycm9yIGlzIGEgQmVuZ2FsaSBwbGF5IHdyaXR0ZW4gYnkgRGluYWJhbmRodSBNaXRyYSBpbiAxODU4LSAgMTg1OS4gVGhlIHBsYXkgd2FzIGVzc2VudGlhbCB0byBOZWVsIEJpZHJvaGEsIG9yIEluZGlnbyBSZXZvbHQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 'Neel Darpan' was a play based on the exploitation of  the Indigo farmers. ",
        "option2" : " The author of the play 'Ghashiram Kotwal's is Vijay  Tendulkar. ",
        "option3" : " The play 'Navann' by Nabin Chandra Das was based  on the famine of Bengal. ",
        "option4" : " Urdu theatre used to depend heavily on Parsi theatre. "
      }
    },
    {
      "index" : 23,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists :  List-I (Books) List-II (Authors) A. The First Indian 1. Rabindranath Tagore War of Independence B. Anand Math 2. Sri Aurobindo C. Life Divine 3. Bankim Chandra Chatterji D. Sadhana 4. Vinayak Damodar Savarkar Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDIz",
      "description" : "VGhlIExpZmUgRGl2aW5lIGlzIFNyaSBBdXJvYmluZG8ncyBtYWpvciBwaGlsb3NvcGhpY2FsICBvcHVzLiBJdCBjb21iaW5lcyBhIHN5bnRoZXNpcyBvZiB3ZXN0ZXJuIHRob3VnaHQgYW5kICBlYXN0ZXJuIHNwaXJpdHVhbGl0eSB3aXRoIFNyaSBBdXJvYmluZG8ncyBvd24gb3JpZ2luYWwgIGluc2lnaHRzLCBjb3ZlcmluZyB0b3BpY3Mgc3VjaCBhcyB0aGUgbmF0dXJlIG9mIHRoZSBEaXZpbmUgICh0aGUgQWJzb2x1dGUsIEJyYWhtYW4pLCBob3cgdGhlIGNyZWF0aW9uIGNhbWUgYWJvdXQsIHRoZSAgZXZvbHV0aW9uIG9mIGNvbnNjaW91c25lc3MgYW5kIHRoZSBjb3Ntb3MsIHRoZSBzcGlyaXR1YWwgIHBhdGgsIGFuZCBodW1hbiBldm9sdXRpb25hcnktc3Bpcml0dWFsIGRlc3RpbnkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 4; B - 3; C - 2; D - 1 ",
        "option2" : " A - 3; B - 4; C - 1; D - 2 ",
        "option3" : " A - 4; B - 3; C - 1; D - 2 ",
        "option4" : " A - 3; B - 4; C - 2; D - 1 "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following events:  1. Indigo Revolt 2. Santhal Rebellion 3. Deccan Riot 4. Mutiny of the Sepoys The correct chronological sequence of these events is: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI0",
      "description" : "SW5kaWdvIHJldm9sdCAtIDE4NjA7IFNhbnRoYWwgcmViZWxsaW9uIC0gMTg1NS01NjsgIERlY2NhbiByaW90IC0gMTg3NSA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 4, 2, 1, 3 ",
        "option2" : " 4, 2, 3, 1 ",
        "option3" : " 2, 4, 3, 1 ",
        "option4" : " 2, 4, 1, 3 "
      }
    },
    {
      "index" : 25,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I (Year) List-II (Event) A. 1775 1. First Anglo-Burmese War B. 1780 2. First Anglo-Afghan War C. 1824 3. First Anglo-Maratha War D. 1838 4. Second Anglo-Mysore War Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI1",
      "description" : "Rmlyc3QgQW5nbG8tQnVybWVzZSBXYXIgLSBCdXJtZXNlIGRlZmVhdGVkLCBUcmVhdHkgIG9mIFlhbmRvYm8gKDE4MjYpOyBGaXJzdCBBbmdsby1BZmdoYW4gV2FyIC0gQWZnaGFuICBkZWZlYXRlZCAoMTgzOCk7IEZpcnN0IEFuZ2xvLU1hcmF0aGEgV2FyIC0gQnJpdGlzaGVycyB3ZXJlICBkZWZlYXRlZCwgVHJlYXR5IG9mIFNhbGJhaSAoMTc4Mik7IFNlY29uZCBBbmdsby1NeXNvcmUgIFdhciAtIEhhaWRlciBBbGkgZGllZCBhbmQgc3VjY2VlZGVkIGJ5IFRpcHUgU3VsdGFuLCBUcmVhdHkgIG9mIE1hbmdhbG9yZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 4; B - 3; C - 2; D - 1 ",
        "option2" : " A - 4; B - 3; C - 1; D - 2 ",
        "option3" : " A - 3; B - 4; C - 1; D - 2 ",
        "option4" : " A - 3; B - 4; C - 2; D - 1 "
      }
    },
    {
      "index" : 26,
      "question" : "The last major extension of British Indian territory took place during the time of :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI2",
      "description" : "VGhlIGxhc3QgbWFqb3IgZXh0ZW5zaW9uIG9mIEJyaXRpc2ggSW5kaWFuIFRlcnJpdG9yeSB0b29rICBwbGFjZSBkdXJpbmcgRGFsaG91c2llIHVuZGVyIGhpcyBEb2N0cmluZSBvZiBMYXBzZSAoSmhhbnNpLCAgU2F0YXJhLCBKYWl0cHVyLCBTYW1iYWxwdXIsIFVkYWlwdXIgYW5kIE5hZ3B1cikgYW5kIG9uIHRoZSAgYmFzaXMgb2YgbWlzZ292ZXJuYW5jZSAoQXdhZGgpLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dufferin ",
        "option2" : " Dalhousie ",
        "option3" : " Lytton ",
        "option4" : " Curzon "
      }
    },
    {
      "index" : 27,
      "question" : "Which one of the following statements is incorrect?   ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI3",
      "description" : "RGFkcmEgYW5kIE5hZ2FyIEhhdmVsaSB3YXMgdW5kZXIgUG9ydHVndWVzZSBjb2xvbmlhbCAgcnVsZSB0aWxsIDE5NTQgYW5kIG5vdCBGcmVuY2ggY29sb25pYWwgcnVsZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Goa attained full statehood in 1987. ",
        "option2" : " Diu is an island in the Gulf of Khambhat. ",
        "option3" : " Daman and Diu were separated from Goa by the 56th  Amendment of the Constitution of India. ",
        "option4" : " Dadra and Nagar Haveli were under French colonial "
      }
    },
    {
      "index" : 28,
      "question" : "Who among the following Indian rulers established embassies in foreign countries on modern lines?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI4",
      "description" : "VGlwdSBTdWx0YW4gZXN0YWJsaXNoZWQgZW1iYXNzaWVzIGluIEZyYW5jZSwgVHVya2V5ICBhbmQgRWd5cHQgb24gbW9kZXJuIGxpbmVzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Haider Ali ",
        "option2" : " Mir Qasim ",
        "option3" : " Shah Alam II ",
        "option4" : " Tipu Sultan "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following pairs is not correctly matched?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDI5",
      "description" : "TWVlbmEgS3VtYXJpIGlzIG5vdCB0aGUgcmVjaXBpZW50IG9mIEJoYXJhdCBSYXRuYS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " India's first technicolour film -Jhansi ki Rani ",
        "option2" : " India's first 3-D film - My dear Kuttichathan ",
        "option3" : " India's first insured film -Taal ",
        "option4" : " India's first actress to win the Bharat Ratna-Meena "
      }
    },
    {
      "index" : 30,
      "question" : "Under the Permanent Settlement, 1793, the Zamindars are required to issue pattas to the farmers which were not issued by many of the Zamindars. The reason was:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDMw",
      "description" : "Sm9obiBTaG9yZSBwbGFubmVkIFBlcm1hbmVudCBTZXR0bGVtZW50IGFuZCBpdCB3YXMgIGludHJvZHVjZWQgaW4gMTc5MyBieSBMb3JkIENvcm53YWxsaXMuIFphbWluZGFycyB3ZXJlIG1hZGUgIHRoZSBvd25lcnMgb2YgdGhlIGxhbmQgYW5kIHRoZSBCcml0aXNoIGdvdCBhIGZpeGVkIHNoYXJlIG9mICAxMC8xMXRoIG9mIHRoZSByZXZlbnVlIGNvbGxlY3RlZCBieSB0aGUgemFtaW5kYXJzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the Zamindars were trusted by the farmers. ",
        "option2" : " there was no officials check upon the Zamindars. ",
        "option3" : " it was the responsibility of the British government. ",
        "option4" : " the farmers were not interested in getting pattas. "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements:   1. Arya Samaj was founded in 1835. 2. Lala Lajpat Rai opposed the appeal of Arya Samaj to the authority of Vedas in support of its social reform programme. 3. Under Keshab Chandra Sen, the Brahmo Samaj campaigned for women's education. 4. Vinoba Bhave founded the Sarvodya Samaj to work among refugees. Which of these statements are correct? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDMx",
      "description" : "QXJ5YSBTYW1haiB3YXMgZm91bmRlZCBpbiAxODc1IChub3QgMTgzNSkgYXQgQm9tYmF5ICBieSBEYXlhbmFuZGEgU2FyYXN3YXRpLiBMYWxhIExhanBhdCBSYWkgam9pbmVkIHRoZSBBcnlhICBTYW1hai4gSGlzIGpvdXJuYWwgQXJ5YSBHYXpldHRlIGNvbmNlbnRyYXRlZCBtYWlubHkgb24gIHN1YmplY3RzIHJlbGF0ZWQgdG8gdGhlIEFyeWEgU2FtYWouIEhlIG5ldmVyIG9wcG9zZWQgQXJ5YSAgU2FtYWouICBISU5UUyAmIFNPTFVUSU9OUyAgRSAgQiAgRCAgXzggIDM0ICAyICBNb2Rlcm4gSGlzdG9yeSBBIDM1IA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 2 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 32,
      "question" : "Who amongst the following Englishmen, first translated Bhagavad-Gita into English?   ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDMy",
      "description" : "Q2hhcmxlcyBXaWxraW5zIHdhcyBhIG1lbWJlciBvZiBBc2lhdGljIFNvY2lldHkgb2YgIEJlbmdhbCBmb3VuZGVkIGJ5IFdpbGxpYW0gSm9uZXMuIEhlIHRyYW5zbGF0ZWQgQmhhZ2F2YWQgIEdpdGEgaW50byBFbmdsaXNoIGluIDE3OTQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " William Jones ",
        "option2" : " Charles Wilkins ",
        "option3" : " Alexander Cunningham ",
        "option4" : " John Marshall "
      }
    },
    {
      "index" : 33,
      "question" : "Which one of the following submitted in 1875 a petition to the House of Commons demanding India's direct representation in the British parliament?   ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDMz",
      "description" : "UG9vbmEgU2FydmFqYW5payBTYWJoYSB3YXMgZXN0YWJsaXNoZWQgaW4gMTg3MCBieSAgTS5HLiBSYW5hZGF5IGFuZCBKb3NoaS4gSXQgc3VibWl0dGVkIGluIDE4NzUgYSBwZXRpdGlvbiB0byAgdGhlIEhvdXNlIG9mIENvbW1vbnMgZGVtYW5kaW5nIEluZGlhJ3MgZGlyZWN0ICByZXByZXNlbnRhdGlvbiBpbiB0aGUgQnJpdGlzaCBQYXJsaWFtZW50LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The Deccan Association ",
        "option2" : " The Indian Association ",
        "option3" : " The Madras Mahajan Sabha ",
        "option4" : " The Poona Sarvajanik Sabha "
      }
    },
    {
      "index" : 34,
      "question" : "With which one of the following mountain tribes did the British first come into contact with after the grant of Diwani in the year 1765?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM0",
      "description" : "QWZ0ZXIgdGhlIGdyYW50IG9mIERpd2FuaSBpbiB0aGUgeWVhciAxNzY1LCB0aGUgQnJpdGlzaCAgZmlyc3QgY2FtZSBpbiBjb250YWN0IHdpdGggYSBtb3VudGFpbiB0cmliZXMgY2FsbGVkIEtoYXNpcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Garos ",
        "option2" : " Khasis ",
        "option3" : " Kukis ",
        "option4" : " Tipperahs "
      }
    },
    {
      "index" : 35,
      "question" : "Match List-I (Acts of Colonial Government of India) with List-II (Provisions) and select the correct answer using the codes given below the lists:  List-I List-II (Acts of Colonial (Provisions) Government of India) A. Charter Act, 1813 1. Set up a Board of Control in Britain to fully regulate the East India B. Regulating Act 2. Company's trade monopoly in India was ended C. Act of 1858 3. The power to govern was transferred from the East India Company to the  British Crown D. Pitt's India Act 4. The Company's directors were asked to present to the British government all correspondence and docu- ments pertaining to the administration of the company Codes: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM1",
      "description" : "UmVndWxhdGluZyBBY3Qgd2FzIHBhc3NlZCBpbiAxNzczLiBQaXR0cyBJbmRpYSBBY3QgIHdhcyBwYXNzZWQgaW4gMTc4NC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 3; D - 1 ",
        "option2" : " A - 1; B - 3; C - 4; D - 2 ",
        "option3" : " A - 2; B - 3; C - 4; D - 1 ",
        "option4" : " A - 1; B - 4; C - 3; D - 2 "
      }
    },
    {
      "index" : 36,
      "question" : "Which one of the following Acts of British India strengthened the Viceroy's authority over his Executive Council by substituting \"Portfolio\" or departmental system for corporate functioning?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM2",
      "description" : "VGhlIEluZGlhbiBDb3VuY2lscyBBY3Qgb2YgMTg2MSB0cmFuc2Zvcm1lZCB0aGUgIHZpY2Vyb3kncyBFeGVjdXRpdmUgQ291bmNpbCBpbnRvIGEgbWluaWF0dXJlIGNhYmluZXQgcnVuIG9uICB0aGUgcG9ydGZvbGlvIHN5c3RlbSwgYW5kIGVhY2ggb2YgdGhlIGZpdmUgb3JkaW5hcnkgbWVtYmVycyAgd2FzIHBsYWNlZCBpbiBjaGFyZ2Ugb2YgYSBkaXN0aW5jdCBkZXBhcnRtZW50IG9mIENhbGN1dHRhJ3MgIGdvdmVybm1lbnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Indian Council Act, 1861 ",
        "option2" : " Government of India Act, 1858 ",
        "option3" : " Indian Council Act, 1892 ",
        "option4" : " Indian Council Act, 1909 "
      }
    },
    {
      "index" : 37,
      "question" : "During the colonial period in India, what was the purpose of the Whitley Commission?   ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM3",
      "description" : "V2hpdGxleSBjaGFpcmVkIHRoZSBSb3lhbCBDb21taXNzaW9uIG9uIExhYm91ciBpbiAgSW5kaWEsIHdoaWNoIHJlcG9ydGVkIGluIDE5MzEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " To review the fitness of India for further political  reforms. ",
        "option2" : " To report on existing conditions of labour and to make  recommendations. ",
        "option3" : " To draw up a plan for financial reforms for India. ",
        "option4" : " To develop a comprehensive scheme for Civil Services "
      }
    },
    {
      "index" : 38,
      "question" : "With reference to the entry of European powers into India, which one of the following statements is not correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM4",
      "description" : "VGhlIFBvcnR1Z3Vlc2UgY2FwdHVyZWQgR29hIGZyb20gcnVsZXJzIG9mIEJpamFwdXIgaW4gIDE1MTAgYW5kIG5vdCBpbiAxNDk5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The Portuguese captured Goa in 1499. ",
        "option2" : " The English opened their first factory in South India at  Masulipatam. ",
        "option3" : " In Eastern India, the English Company opened its first  factory in Orissa in 1633. ",
        "option4" : " Under the leadership of Dupleix, the French occupied "
      }
    },
    {
      "index" : 39,
      "question" : "In India, among the following locations, the Dutch established their earliest factory at:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDM5",
      "description" : "VGhlIER1dGNoIEVhc3QgSW5kaWEgQ29tcGFueSBpbiBJbmRpYSwgZXN0YWJsaXNoZWQgIHRoZSBmaXJzdCBmYWN0b3J5IGluIE1hc3VsaXBhdHRhbmFtIGluIDE2MDUsIGZvbGxvd2VkIGJ5ICBQdWxpY2F0IGluIDE2MTAsIFN1cmF0IGluIDE2MTYsIEJpbWlsaXBhdGFtIGluIDE2NDEgYW5kICBDaGluc3VyYSBpbiAxNjUzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Surat ",
        "option2" : " Pulicat ",
        "option3" : " Cochin ",
        "option4" : " Cassimbazar "
      }
    },
    {
      "index" : 40,
      "question" : "The aim of education as stated by the Wood's Despatch of 1854 was:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQw",
      "description" : "V29vZCdzIERlc3BhdGNoIG9mIDE4NTQgYXJlIGNvbnNpZGVyZWQgYXMgdGhlIE1hZ25hICBDYXJ0YSBvZiBFbmdsaXNoIGVkdWNhdGlvbiBpbiBJbmRpYS4gU3RhdGVtZW50IChDKSBpcyBpbmNvcnJlY3QgIGFzIGl0IHJlY29tbWVuZGVkIEVuZ2xpc2ggYXMgdGhlIG1lZGl1bSBvZiBpbnN0cnVjdGlvbnMgIGZvciBoaWdoZXIgc3R1ZGllcyBhbmQgdmVybmFjdWxhcnMgYXQgc2Nob29sIGxldmVsLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the creation of employment opportunities for native  Indians ",
        "option2" : " the spread of western culture in India ",
        "option3" : " the promotion of literacy among the people using  English medium ",
        "option4" : " the introduction of scientific research and rationalism "
      }
    },
    {
      "index" : 41,
      "question" : "Which one of the following statements is not correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQx",
      "description" : "RmFycnVraHNpeWFyIGludHJvZHVjZWQgcmV2ZW51ZSBmYXJtaW5nIGluIEJlbmdhbC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ali Mardan Khan introduced the system of revenue  farming in Bengal. ",
        "option2" : " Maharaja Ranjit Singh set up modern foundries to  manufacture cannons at Lahore. ",
        "option3" : " Sawai Jai Singh of Amber had Euclid's Elements of  Geometry' translated into Sanskrit. ",
        "option4" : " Sultan Tipu of Mysore gave money for the "
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following provisions was not made in the Charter Act of 1833 ?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQy",
      "description" : "Q2hhcnRlciBBY3Qgb2YgMTgzMyBwcm92aWRlcyBmb3IgdGhlIGFwcG9pbnRtZW50IG9mIGEgIGxhdyBtZW1iZXIgYnV0IG5vdCBuZWNlc3NhcmlseSBhbiBJbmRpYW4uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The trading activities of the East India Company were  to be abolished. ",
        "option2" : " The designation of the supreme authority was to be  changed as the Governor-General of India in Council. ",
        "option3" : " All law-making powers to be conferred on Governor-  General in Council. ",
        "option4" : " An Indian was to be appointed as a Law Member in "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to colonial rule in India, what was sought by the Ilbert Bill in 1883?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQz",
      "description" : "SWxiZXJ0IEJpbGwgd2FzIGludHJvZHVjZWQgZHVyaW5nIHRoZSB2aWNlcm95YWxpdHkgb2YgIExvcmQgUmlwcG9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " To bring Indians and Europeans at par as far as the  criminal jurisdiction of courts was concerned.  E  B  D  _8  34  2  Modern History A 29 ",
        "option2" : " To impose severe restrictions on the freedom of the  native press as it was perceived to be hostile to colonial  rulers. ",
        "option3" : " To encourage the native Indians to appear for civil  service examinations by conducting them in India. ",
        "option4" : " To allow native Indians to posses arms by amending "
      }
    },
    {
      "index" : 44,
      "question" : "In India, the first Bank of limited liability managed by Indians and founded in 1881 was:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ0",
      "description" : "VGhlIGZpcnN0IGVudGlyZWx5IEluZGlhbiBqb2ludCBzdG9jayBiYW5rIHdhcyB0aGUgT3VkaCAgQ29tbWVyY2lhbCBCYW5rLCBlc3RhYmxpc2hlZCBpbiAxODgxIGluIEZhaXphYmFkLiBJdCAgY29sbGFwc2VkIGluIDE5NTguIFRoZSBuZXh0IHdhcyB0aGUgUHVuamFiIE5hdGlvbmFsIEJhbmsgIHdhcyBlc3RhYmxpc2hlZCBpbiBMYWhvcmUgaW4gMTg5NSwgd2hpY2ggaGFzIHN1cnZpdmVkIHRvICB0aGUgcHJlc2VudCBhbmQgaXMgbm93IG9uZSBvZiB0aGUgbGFyZ2VzdCBiYW5rcyBpbiBJbmRpYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hindustan Commercial Bank ",
        "option2" : " Oudh Commercial Bank ",
        "option3" : " Punjab National Bank ",
        "option4" : " Punjab and Sind Bank "
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following pairs are correctly matched? List-I (Period) List-II 1. AD 1767-69 First Anglo-Maratha War 2. AD 1790-92 Third Mysore War 3. AD 1824-26 First Anglo-Burmese War 4. AD 1845-46 Second Sikh War Select the correct answer using the codes given below:  Codes: ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ1",
      "description" : "Rmlyc3QgQW5nbG8tTWFyYXRoYSBXYXIgLSAxNzc1LTE3ODI7IEZpcnN0IEFuZ2xvIC0gIFNpa2ggV2FyIC0gMTg0NS0xODQ2OyBTZWNvbmQgQW5nbG8gLSBTaWtoIFdhciAtIDE4NDgtMTg0OTsg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2 and 4 ",
        "option2" : " 3 and 4 ",
        "option3" : " 1 and 2 ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following pairs is not correctly matched?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ2",
      "description" : "VmVybmFjdWxhciBQcmVzcyBBY3Qgd2FzIHBhc3NlZCBieSBMb3JkIEx5dHRvbiBpbiAgMTg3OCBhbmQgaXQgd2FzIHJlcGVhbGVkIGJ5IFJpcG9uIGluIDE4ODIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pitt's India Act : Warren Hastings ",
        "option2" : " Doctrine of Lapse : Dalhousie ",
        "option3" : " Vernacular Press Act : Curzon ",
        "option4" : " Ilbert Bill : Ripon "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following Viceroys of India during the British rule: 1. Lord Curzon 2. Lord Chelmsford 3. Lord Hardinge 4. Lord Irwin Which one of the following is the correct chronological order of their tenure?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ3",
      "description" : "TG9yZCBDdXJ6b24gKDE4OTktMTkwNSk7IExvcmQgQ2hlbG1zZm9yZCAgKDE5MTYtMTkyMSk7IExvcmQgSGFyZGluZ2UgKDE5MTAtMTkxNik7IExvcmQgSXJ3aW4gKDE5MjYtICAxOTMxKSA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3, 2, 4 ",
        "option2" : " 2, 4, 1, 3 ",
        "option3" : " 1, 4, 2, 3 ",
        "option4" : " 2, 3, 1, 4 "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following princely States of the British rule in India:  1. Jhansi 2. Sambalpur 3. Satara The correct chronological order in which they were annexed by the British is:  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ4",
      "description" : "VGhlc2UgcHJpbmNlbHkgc3RhdGVzIHdlcmUgYW5uZXhlZCBieSBMb3JkIERhbGhvdXNpZSAgdW5kZXIgRG9jdHJpbmUgb2YgTGFwc2UuIEpoYW5zaSAtIDE4NTQsIFNhbWJhbHB1ci0gMTg0OSAgYW5kIFNhdGFyYSAtIDE4NDguIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2, 3 ",
        "option2" : " 1, 3, 2 ",
        "option3" : " 3, 2, 1 ",
        "option4" : " 3, 1, 2 "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements: 1. In the Third Battle of Panipat, Ahmed Shah Abdali defeated Ibrahim Lodi. 2. Tipu Sultan was killed in the Third Anglo-Mysore War. 3. Mir Jafar entered in a conspiracy with the English for the defeat of Nawab Siraj-ud-Daulah in the Battle of Plassey. Which of the statements given above is/are correct?   ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDQ5",
      "description" : "SW4gdGhlIGZpcnN0IEJhdHRsZSBvZiBQYW5pcGF0ICgxNTI2KSwgSWJyYWhpbSBMb2RpIHdhcyAgZGVmZWF0ZWQgYnkgQmFidXIuIEluIHRoZSBUaGlyZCBCYXR0bGUgb2YgUGFuaXBhdCAoMTc2MSksICBBaG1lZCBTaGFoIEFiZGFsaSBkZWZlYXRlZCBNYXJhdGhhcy4gVGlwdSBTdWx0YW4gd2FzICBraWxsZWQgaW4gdGhlIGZvdXJ0aCBBbmdsby1NeXNvcmUgV2FyICgxNzk5KS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 3 only ",
        "option3" : " 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 50,
      "question" : "Which one of the following places did Kunwar Singh, a prominent leader of the Revolt of 1857 belong to ?   ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDUw",
      "description" : "S3Vud2FyIFNpbmdoIGJlbG9uZ2VkIHRvIGEgcm95YWwgVWpqYWluaSBob3VzZSBvZiAgSmFnZGlzcHVyLCBjdXJyZW50bHkgYSBwYXJ0IG9mIEJob2pwdXIgZGlzdHJpY3QsIEJpaGFyIHN0YXRlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bihar ",
        "option2" : " Madhya Pradesh ",
        "option3" : " Rajasthan ",
        "option4" : " Uttar Praesh "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following territories was not affected by the Revolt of 1857 ?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDUx",
      "description" : "TGVhZGVyOiBKaGFuc2kgLSBSYW5pIExheG1pYmFpOyBMdWNrbm93IC0gQmVndW0gIEhhenJhdCBNZWhhbDsgSmFnZGlzaHB1ciAoQmloYXIpLSBLdW53YXIgU2luZ2guIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jhansi ",
        "option2" : " Chittor ",
        "option3" : " Jagdishpur ",
        "option4" : " Lucknow "
      }
    },
    {
      "index" : 52,
      "question" : "Consider the following statements: 1. Ishwar Chandra Vidyasagar founded the Bethune School at Calcutta with the main aim of encouraging education for women. 2. Bankim Chandra Chattopadhyay was the first graduate of the Calcutta University. 3. Keshav Chandra Sen's campaign against Sati led to the enactment of a law to ban Sati by the Governor General. Which of the statements given above is/are correct?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDUy",
      "description" : "U3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0IGFzIFJhamEgUmFtIE1vaGFuIFJveSdzICBjYW1wYWlnbiBhZ2FpbnN0IFNhdGkgbGVkIHRvIHRoZSBlbmFjdG1lbnQgb2YgQmVuZ2FsICBSZWd1bGF0aW9uIEFjdCBvZiAxODI5IHRvIGJhbiBTYXRpIGJ5IEdvdmVybm9yLUdlbmVyYWwgIFdpbGxpYW0gQmVudGljay4gQmFua2ltIENoYW5kcmEgQ2hhdHRvcGFkaHlheSAgYW5kICBHYXR0dW5hdGggQm9zZSB3ZXJlIHRoZSBmaXJzdCBncmFkdWF0ZXMgb2YgdGhlIENhbGN1dHRhICBVbml2ZXJzaXR5IG9uIEphbiAzMCwgMTg1OC4gSkVEIEJldGh1bmUgZm91bmRlZCB0aGUgIEJldGh1bmUgU2Nob29sIGluIENhbGN1dHRhIGluIDE4NDkuIElzaHdhciBDaGFuZHJhICBWaWR5YXNhZ2FyIHdhcyBhbHNvIGFzc29jaWF0ZWQgd2l0aCB0aGlzLiBUaGF0J3Mgd2h5IHRoZSAgYmVzdCBwb3NzaWJsZSBhbnN3ZXIgaGVyZSBpcyBvcHRpb24gKGIpLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " 1,"
      }
    },
    {
      "index" : 53,
      "question" : "Who among the following repealed the Vernacular Press Act?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDUz",
      "description" : "TG9yZCBMeXR0b24gYnJvdWdodCBWZXJuYWN1bGFyIFByZXNzIEFjdCBjYW1lIGluIHRvICBmb3JjZSBpbiAxODc4LiBJdCB3YXMgcmVwZWFsZWQgYnkgTG9yZCBSaXBvbiBpbiAxODgyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lord Dufferin ",
        "option2" : " Lord Ripon ",
        "option3" : " Lord Curzon ",
        "option4" : " Lor Haringe "
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following is the correct statement?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU0",
      "description" : "TW9kZXJuIEtvY2hpIGJlY2FtZSBhIHBhcnQgb2YgdGhlIEJyaXRpc2ggY29sb255ICBhZnRlciBiZWluZyBhIER1dGNoIGNvbG9ueS4gS29jaGkgd2FzIGZpcnN0IGEgUG9ydHVndWVzZSAgY29sb255LiBGb3J0IFdpbGxpYW1zIHdhcyBidWlsdCBpbiBLb2NoaSBieSB0aGUgRHV0Y2guIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The modern Kochi was a Dutch colony till India's  independence. ",
        "option2" : " The Dutch defeated the Portuguese and built Fort  Williams in the modern Kochi. ",
        "option3" : " The modern Kochi was first a Dutch colony before the  Portuguese took over. ",
        "option4" : " The modern Kochi never became a part of a British "
      }
    },
    {
      "index" : 55,
      "question" : "Consider the following statements: 1. Warren Hastings was the first Governor General who established a regular police force in India on the British pattern. 2. A Supreme Court was established at Calcutta by the Regulating Act, 1773. 3. The Indian Penal Code came into effect in the year 1860. Which of the statements given above are correct?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU1",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIExvcmQgQ3Vyem9uIHdhcyB0aGUgZmlyc3QgIEdvdmVybm9yIEdlbmVyYWwgd2hvIGVzdGFibGlzaGVkIGEgcmVndWxhciBwb2xpY2UgZm9yY2UgaW4gIEluZGlhIG9uIHRoZSBCcml0aXNoIHBhdHRlcm4uIEEgU3VwcmVtZSBDb3VydCB3YXMgIGVzdGFibGlzaGVkIGF0IEZvcnQgV2lsbGlhbXMgYnkgdGhlIFJlZ3VsYXRpbmcgQWN0LCAxNzczICB3aXRoIGp1cmlzZGljdGlvbiBvdmVyIEJlbmdhbCwgQmloYXIgYW5kIE9yaXNzYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 56,
      "question" : "Which one of the following is the correct chronological order of the battles fought in India in the 18th Century?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU2",
      "description" : "QmF0dGxlIG9mIEFtYnVyLTE3NDksIEJhdHRsZSBvZiBQbGFzc2V5LTE3NTcsIEJhdHRsZSBvZiAgV2FuZGl3YXNoLTE3NjAsICBCYXR0bGUgb2YgQnV4YXItMTc2NC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Battle of Wandiwash-Battle of Buxar-Battle of  Ambur-Battle of Plassey ",
        "option2" : " Battle of Ambur-Battle of Plassey-Battle of  Wandiwash-Battle of Buxar ",
        "option3" : " Battle of Wandiwash-Battle of Plassey-Battle of  Ambur-Battle of Buxar ",
        "option4" : " Battle of Ambur-Battle of Buxar-Battle of "
      }
    },
    {
      "index" : 57,
      "question" : "Who among the following was a proponent of Fabianism as a movement?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU3",
      "description" : "VGhlIEZhYmlhbiBTb2NpZXR5IGlzIGEgQnJpdGlzaCBzb2NpYWxpc3QgaW50ZWxsZWN0dWFsICBtb3ZlbWVudCBiZXN0IGtub3duIGZvciBpdHMgaW5pdGlhbCBncm91bmQtYnJlYWtpbmcgd29yayAgYmVnaW5uaW5nIGluIHRoZSBsYXRlIDE5dGggY2VudHVyeSBhbmQgdGhlbiB1cCB0byBXb3JsZCAgV2FyIEkuIEZhYmlhbmlzbSBmb2N1c2VkIG9uIHRoZSBhZHZhbmNlbWVudCBvZiBzb2NpYWxpc3QgIGlkZWFzIHRocm91Z2ggZ3JhZHVhbCBpbmZsdWVuY2UgYW5kIHBhdGllbnRseSBpbnNpbnVhdGluZyAgc29jaWFsaXN0IGlkZW9sb2d5IGludG8gaW50ZWxsZWN0dWFsIGNpcmNsZXMgYW5kIGdyb3VwcyB3aXRoICBwb3dlci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Annie Besant ",
        "option2" : " A.O. Hume ",
        "option3" : " Michael Madhusudan Dutt ",
        "option4" : " R. Palme Dutt "
      }
    },
    {
      "index" : 58,
      "question" : "Consider the following statements: 1. The Charter Act, 1853 abolished East India Company monopoly of Indian trade. 2. Under the Government of India Act, 1858 the British Parliament abolished the rule of East India Company and undertook the responsibility of ruling India directly.  A 30 Which of the statement(s) given above is/are correct?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDU4",
      "description" : "VGhlIENoYXJ0ZXIgQWN0LCAxODEzIChub3QgMTg1MykgYWJvbGlzaGVkIEVhc3QgSW5kaWEgIENvbXBhbnkgbW9ub3BvbHkgb2YgSW5kaWFuIHRyYWRlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 61,
      "question" : "Who was the Governor-General of India during the Sepoy Mutiny?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDYx",
      "description" : "UmV2b2x0IG9mIDE4NTcgaXMgcmVmZXJyZWQgYXMgU2Vwb3kgTXV0aW55IGJ5IG1hbnkgIGhpc3RvcmlhbnMuIEFmdGVyIHRoZSBtdXRpbnkgTG9yZCBDYW5uaW5nIHdhcyBtYWRlIHRoZSAgVmljZXJveSAgYW5kICBwb3dlciAgd2FzICB0cmFuc2ZlcnJlZCAgZnJvbSAgdGhlICBFYXN0ICBJbmRpYSAgQ29tcGFueSB0byB0aGUgQnJpdGlzaCBjcm93biBieSBBY3Qgb2YgMTg1OC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lord Canning ",
        "option2" : " Lord Dalhousie ",
        "option3" : " Lord Hardings ",
        "option4" : " Lor Lytton "
      }
    },
    {
      "index" : 62,
      "question" : "Who among the following started the newspaper Shome Prakash?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDYy",
      "description" : "SXQgd2FzIHN0YXJ0ZWQgYnkgSXNod2FyIENoYW5kcmEgVmlkeWFzYWdhci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dayanand Saraswati ",
        "option2" : " Ishwar Chandra Vidyasagar ",
        "option3" : " Raja Rammohan Roy ",
        "option4" : " Surendranath Banerjee  "
      }
    },
    {
      "index" : 63,
      "question" : "The ruler of which one of the following States was removed from power by the British on the pretext of misgovernance? (a) Awadh (b) Jhansi                        necessary rules was adopted during whose time?    ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDYz",
      "description" : "T3RoZXIgdGhyZWUgc3RhdGVzIHdlcmUgYW5uZXhlZCB1bmRlciB0aGUgRG9jdHJpbmUgb2YgIExhcHNlIGJ5IExvcmQgRGFsaG91c2llLiBCdXQgZG9jdHJpbmUgb2YgTGFwc2Ugd2FzIG5vdCAgYXBwbGljYWJsZSBvbiBBd2FkaCBhcyBOYXdhYiBXYXppZCBBbGkgU2hhaCBoYWQgbWFueSAgY2hpbGRyZW4uIFRoZXJlZm9yZSwgRGFsaG91c2llIGFubmV4ZWQgQXdhZGggb24gdGhlIHByZXRleHQgIG9mIG1pc2dvdmVybmFuY2UgaW4gMTg1Ni4gSmhhbnNpICgxODUzKSwgTmFncHVyICgxODU0KSBhbmQgIFNhdGFyYSAoMTg0OCkg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lord Lytton ",
        "option2" : " Lord Bentinck ",
        "option3" : " Nagpur ",
        "option4" : " Satara  64. The First Factory Act restricting the working hours of women  and children and authorizing local government to make "
      }
    },
    {
      "index" : 65,
      "question" : "Who among the following Europeans were the last to come to pre-independence India as traders?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDY1",
      "description" : "UG9ydHVndWVzZSAoMTQ5OCk7IER1dGNoICgxNjAyKTsgRW5nbGlzaCAoMTU5OSk7IEZyZW5jaCAgKDE2NjQpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dutch ",
        "option2" : " English ",
        "option3" : " French ",
        "option4" : " Portuguese "
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements: 1. Robert Clive was the first Governor-General of Bengal. 2. William Bentinck was the first Governor-General of India. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDY2",
      "description" : "U3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFzIFdhcnJlbiBIYXN0aW5ncyB3YXMgdGhlICBmaXJzdCBnb3Zlcm5vci1nZW5lcmFsIG9mIEJlbmdhbC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 67,
      "question" : "Which one of the following was the first fort constructed by the British in India?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDY3",
      "description" : "Rm9ydCBXaWxsaWFtLCBDYWxjdXR0YSAoMTc4MSk7IEZvcnQgU3QgR2VvcmdlLCBDaGVubmFpICAoMTY0NCk7IEZvcnQgU3QgRGF2aWQsIE1hZHJhcygxNjcwKTsgRm9ydCBTdCBBbmdlbG8sIEtlcmFsYSAgKDE1MDUpIGJ1dCBieSB0aGUgUG9ydHVndWVzZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Fort William ",
        "option2" : " Fort St George ",
        "option3" : " Fort St David ",
        "option4" : " Fort St Angelo "
      }
    },
    {
      "index" : 72,
      "question" : "Who among the following Governor Generals created the Covenanted Civil Service of India which later came to be known as the Indian Civil Service ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDcy",
      "description" : "TG9yZCBDb3Jud2FsbGlzICgxNzg2LTkzKSB3YXMgdGhlIGZpcnN0IHRvIGJyaW5nIGludG8gIGV4aXN0ZW5jZSBhbmQgb3JnYW5pemUgdGhlIGNpdmlsIHNlcnZpY2VzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Warren Hastings ",
        "option2" : " Wellesley ",
        "option3" : " Cornwallis ",
        "option4" : " William Bentinck "
      }
    },
    {
      "index" : 73,
      "question" : "By a regulation in 1793, the District Collector was deprived of his judicial powers and made the collecting agent only. What was the reason for such a regulation ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDcz",
      "description" : "VGhlIGp1ZGljaWFsIHJlZm9ybXMgdW5kZXJ0YWtlbiBieSBMb3JkIENvcm53YWxsaXMgIGxhaWQgYSBzdHJvbmcgZm91bmRhdGlvbiBpbiB0aGUgQnJpdGlzaCBJbmRpYW4gYWRtaW5pc3RyYXRpdmUgIHN5c3RlbSBpbiB0aGUgeWVhciAxNzkzLiBUaGUganVkaWNpYWwgcmVmb3JtcyBvZiBDb3Jud2FsbGlzICB3ZXJlIGRvY3VtZW50ZWQgaW4gdGhlIGZhbW91cyBDb3Jud2FsbGlzIENvZGUuIEhvd2V2ZXIgIHRoZSBuZXcganVkaWNpYWwgcmVmb3JtcyBvZiBMb3JkIENvcm53YWxsaXMgd2VyZSBiYXNlZCBvbiAgdGhlIHByaW5jaXBsZSBvZiBTZXBhcmF0aW9uIG9mIFBvd2Vycy4gQ29ybndhbGxpcyBhdCBmaXJzdCAgc291Z2h0IHRvIHNlcGFyYXRlIHRoZSByZXZlbnVlIGFkbWluaXN0cmF0aW9uIGZyb20gdGhlICBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlLiBUaGUgY29sbGVjdG9yIHVzZWQgdG8gYmUgdGhlIGhlYWQgIG9mIHRoZSBSZXZlbnVlIERlcGFydG1lbnQgaW4gYSBkaXN0cmljdCBhbmQgYWxzbyBlbmpveWVkICBleHRlbnNpdmUganVkaWNpYWwgYW5kIG1hZ2lzdGVyaWFsIHBvd2Vycy4gSG93ZXZlciAgQ29ybndhbGxpcyB3YW50ZWQgU2VwYXJhdGlvbiBvZiBQb3dlciBhbmQgdGhlIENvcm53YWxsaXMgIENvZGUgZGl2ZXN0ZWQgdGhlIGNvbGxlY3RvciBvZiBhbGwgdGhlIGp1ZGljaWFsIGFuZCB0aGUgIG1hZ2lzdGVyaWFsIHBvd2Vycy4gVGh1cyB0aGUgQ29sbGVjdG9ycyB3ZXJlIGdpdmVuIG9ubHkgIHRoZSBwb3dlciBvZiB0aGUgcmV2ZW51ZSBhZG1pbmlzdHJhdGlvbiBhY2NvcmRpbmcgdG8gdGhlICBDb3Jud2FsbGlzIENvZGUuIEEgbmV3IGNsYXNzIG9mIG9mZmljZXIgY2FsbGVkIHRoZSBEaXN0cmljdCAgSnVkZ2Ugd2FzIGNyZWF0ZWQgdG8gcHJlc2lkZSBvdmVyIHRoZSBkaXN0cmljdCBDaXZpbCBDb3VydC4gIFRoZSBkaXN0cmljdCBqdWRnZSB3YXMgYWxzbyBnaXZlbiB0aGUgbWFnaXN0ZXJpYWwgYW5kIHRoZSAgcG9saWNlIGZ1bmN0aW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Lord Cornwallis felt that the District Collector's  efficiency of revenue collection would enormously  increase without the burden of additional work. ",
        "option2" : " Lord Cornwallis felt that judicial power should  compulsorily be in the hands of Europeans while  Indians can be given the job of revenue collection in  the districts. ",
        "option3" : " Lord Cornwallis was alarmed at the extent of power  concentrated in the District Collector and felt that such  absolute power was undesirable in one person. ",
        "option4" : " The judicial work demanded a deep knowledge of India "
      }
    },
    {
      "index" : 74,
      "question" : "What was the immediate reason for Ahmad Shah Abdali to invade India and fight the third battle of Panipat ?   ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDc0",
      "description" : "VG8gYXZlbmdlIHRoZWlyIGV4cHVsc2lvbiBvZiBUaW11ciBTaGFoLCBBaG1hZCBTaGFoICBBYmRhbGkgaW52YWRlZCBJbmRpYSBmb3IgdGhlIGZpZnRoIHRpbWUgaW4gT2N0LiAxNzU5LCBhbmQgIGZpbmFsbHkgY29ucXVlcmVkIFB1bmphYi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He wanted to avenge the expulsion by Marathas of  his viceroy Timur Shah from Lahore. ",
        "option2" : " The frustrated governor of Jalandhar Adina Beg Khan  invited him to invade Punjab. ",
        "option3" : " He wanted to punish Mughal administration for non-  payment of the revenues of the Chahar Mahal (Gujarat,  Aurangabad, Sialkot and Pasrur). ",
        "option4" : " He wanted to annex the fertile plains of Punjab up to "
      }
    },
    {
      "index" : 75,
      "question" : "With reference to Pondicherry (now Puducherry), consider the following statements:  1. The first European power to occupy Pondicherry were the Portuguese. 2. The second European power to occupy Pondicherry were the French. 3. The English never occupied Pondicherry. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5fDc1",
      "description" : "VGhlIFBvcnR1Z3Vlc2UgZXN0YWJsaXNoZWQgYSBmYWN0b3J5IGluIFBvbmRpY2hlcnJ5ICBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBzaXh0ZWVudGggY2VudHVyeS4gIFRoZSBzZWNvbmQgRXVyb3BlYW5zIHdobyBvY2N1cGllZCBpdCB3ZXJlIER1dGNoLiBFbmdsaXNoICBhbHNvIGludmFkZWQgaXQgaW4gMTc5MyBhbmQgcmV0dXJuZWQgaXQgdG8gRnJlbmNoIGluIDE4MTQgYWZ0ZXIgIHRoZSB0cmVhdHkgb2YgUGFyaXMuIFRodXMgc3RhdGVtZW50IDEgb25seSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1vZGVybiBIaXN0b3J5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 76,
      "question" : "The tendency for increased litigation was visible after the introduction of the land settlement system of Lord Cornwallis in 1793. The reason for this is normally traced to which of the following  provisions ?  E B D _8 34 2 Modern History A 31 ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw3Ng==",
      "description" : "VGhhdCB0aGUgcmVmb3JtcyBvZiBDb3Jud2FsbGlzIGhhZCBpbmNyZWFzZWQgdGhlIGxpdGlnYXRpb24gIGFuZCB0aGUgbWFpbiByZWFzb24gZm9yIHRoaXMgd2FzIHRoZSBDb3VydCBGZWUgd2FzIHJlbW92ZWQgIGFuZCBub3cgZXZlcnkgYm9keSBjb3VsZCBkcmFnIGFueWJvZHkgdG8gY291cnRzLiBUaGUgIGV4dGVuc2lvbiB0byByaWdodCBvZiBhcHBlYWwgd2FzIGFsc28gb25lIG9mIHRoZSByZWFzb25zLiAgQ291cnQgZmVlcyB3ZXJlIGFib2xpc2hlZCBieSBDb3Jud2FsbGlzLiBMYXd5ZXJzIHdlcmUgdG8gIHByZXNjcmliZSB0aGVpciBmZWVzLiBPcmRpbmFyeSBwZW9wbGUgY291bGQgc3VlIHRoZSAgR292ZXJubWVudCBzZXJ2YW50cyAoSW5kaWFucykgaWYgdGhleSBjb21taXR0ZWQgbWlzdGFrZXMuICBJbmh1bWFuIHB1bmlzaG1lbnRzIHN1Y2ggYXMgY3V0dGluZyBsaW1icywgY3V0dGluZyBub3NlICBhbmQgZWFycyB3ZXJlIGFib2xpc2hlZC4gVGhlc2UgYXJlIHNvbWUgb2YgdGhlIHJlYXNvbnMgdGhhdCAgbGVkIHRvIGluY3JlYXNlZCBsaXRpZ2F0aW9uLiBUaGUgcmVhc29ucyBnaXZlbiBpbiB0aGUgb3B0aW9ucyAgZG9uJ3Qgc2VlbSB0byBmaXQgaW4gdGhlIGNyaXRlcmlhIG9mIHRoZSByZWZvcm1zIG9mIENvcm53YWxsaXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Making Zamindar's position stronger Vis-Vis the Ryot ",
        "option2" : " Making East India Company an overlord of Zamindars ",
        "option3" : " Making judicial system more efficient ",
        "option4" : " None of the (a), (b) and (c) above "
      }
    },
    {
      "index" : 77,
      "question" : "Which amongst the following provided a common factor for tribal insurrection in India in the 19th century?   ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw3Nw==",
      "description" : "VGhlIGZpcnN0IG9wdGlvbiBpcyByZWplY3RlZCBiZWNhdXNlIGl0IHVzZWQgdGhlIHRlcm0gICd0cmliYWwgcHJvZHVjdHMnLiBUaGUgc2Vjb25kIG9wdGlvbiBpcyByZWplY3RlZCBiZWNhdXNlICBOT1QgaW4gYWxsIGFyZWFzLCB0aGUgaW1wYWN0IG9mIGZvcmVpZ24gbWlzc2lvbmFyaWVzIHdhcyAgc2Vlbi4gVGhlIHRoaXJkIG9wdGlvbiBpcyBhbHNvIE5PVCBjb3JyZWN0LCBiZWNhdXNlIG5vdCBpbiAgYWxsIGFyZWFzIHNhdyB0aGUgcmlzZSBvZiBtb25leSBsZW5kZXJzLiBUaGUgZm91cnRoIG9wdGlvbiBpcyAgY29ycmVjdCBhbmQgaXQgaW5jbHVkZXMgZXZlcnl0aGluZyB3aGF0IGhhcHBlbmVkIGluIHRoYXQgIGVyYS4gVGhlIG1vc3QgY29tbW9uIHRoaW5nIHdhcyB0aGUgZm9yZWlnbiBpbnRlcmZlcmVuY2UgaW4gIHRoZSBpbmRpZ2Vub3VzIHdvcmxkIG9mIHRoZWlyIG93biB3aGljaCBkaXNtYW50bGVkIHRoZSAgc3RydWN0dXJlIHRoYXQgZXhpc3RlZCBzaW5jZSBjZW50dXJpZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Introduction of a new system of land revenue and  taxation of tribal products. ",
        "option2" : " Influence of foreign religious missionaries in tribal  areas. ",
        "option3" : " Rise of a large number of money lenders, traders and  revenue farmers as middlemen in tribal areas. ",
        "option4" : " The complete disruption of the old agrarian order of "
      }
    },
    {
      "index" : 78,
      "question" : "With reference to the period of colonial rule in India, 'Home Charges' formed an important part of drain of wealth from India. Which of the following funds constituted 'Home Charges'' ?   1. Funds used to support the India office in London. 2. Funds used to pay salaries and pensions of British personnel engaged in India. 3. Funds used for waging wars outside India by the British. ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw3OA==",
      "description" : "SXQgaXMgY2xlYXIgZnJvbSBFY29ub21pYyBIaXN0b3J5IG9mIEluZGlhIGJ5IFJDIERhdHQ6ICAnIFRoZSBJbmRpYW4gVHJpYnV0ZSB3aGV0aGVyIHdlaWdodGVkIGluIHRoZSBzY2FsZXMgb2YganVzdGljZSAgb3Igdmlld2VkIGluIHRoZSBsaWdodCBvZiBvdXIgaW50ZXJlc3QsIHdpbGwgYmUgZm91bmQgdG8gYmUgYXQgIHZhcmlhbmNlIHdpdGggaHVtYW5pdHksIHdpdGggdGhlIGNvbW1vbnNlbnNlIGFuZCB3aXRoICB0aGUgcmVjZWl2ZWQgbWF4aW1zIG9mIGVjb25vbWljYWwgc2NpZW5jZS4gSXQgd291bGQgYmUgdHJ1ZSAgd2lzZG9tIHRoZW4gdG8gcHJvdmlkZSBmb3IgdGhlIGZ1dHVyZSBwYXltZW50IG9mIHN1Y2ggb2YgIHRoZSBIb21lIENoYXJnZXMgb2YgdGhlIEluZGlhbiBHb3Zlcm5tZW50IGFzIHJlYWxseSBmcm9tICB0aGUgdHJpYnV0ZSBvdXQgb2YgSW5kaWFuIEV4Y2hlcXVlci4gVGhlc2UgY2hhcmdlcyB3b3VsZCAgYmUgcHJvYmFibHkgZm91bmQgdG8gYmUgdGhlIGRpdmlkZW5kcyBvbiBFYXN0IEluZGlhIFN0b2NrLCAgaW50ZXJlc3QgaW4gSG9tZSBkZWJ0LCB0aGUgc2FsYXJpZXMgb2YgdGhlIG9mZmljZXJzLCAgZXN0YWJsaXNobWVudHMgb2YgdGhlIGFuZCBidWlsZGluZyBjb25uZWN0ZWQgd2l0aCB0aGUgSG9tZSAgRGVwYXJ0bWVudCBvZiBJbmRpYW4gR292ZXJubWVudCwgZnVybG91Z2ggYW5kIHJldGlyZWQgcGF5ICB0byBtZW1iZXJzIG9mIHRoZSBJbmRpYW4gTWlsaXRhcnkgYW5kIENpdmlsIFNlcnZpY2VzIHdoZW4gIGF0IEhvbWUsIENoYXJnZXMgb2YgYWxsIGRlc2NyaXB0aW9ucyBwYWlkIGluIHRoaXMgY291bnRyeSAgY29ubmVjdGVkIHdpdGggdGhlIEJyaXRpc2ggdHJvb3BzIHNlcnZpbmcgaW4gSW5kaWEgYW5kICBwb3J0aW9uIG9mIHRoZSBjb3N0IG9mIHRyYW5zcG9ydGluZyB0aGUgQnJpdGlzaCB0cm9vcHMgdG8gYW5kICBmcm9tIEluZGlhJy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 79,
      "question" : "What was the purpose with which Sir William Wedderburn and W.S. Caine had set up the Indian Parliamentary Committee in 1893 ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw3OQ==",
      "description" : "T24gMjggRGVjZW1iZXIgMTg4NSwgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyAgd2FzIGZvdW5kZWQgYXQgR29rdWxkYXMgVGVqcGFsIFNhbnNrcml0IENvbGxlZ2UgaW4gQm9tYmF5LCAgd2l0aCA3MiBkZWxlZ2F0ZXMgaW4gYXR0ZW5kYW5jZS4gQS4gTy4gSHVtZSBhc3N1bWVkIG9mZmljZSAgYXMgdGhlIEdlbmVyYWwgU2VjcmV0YXJ5LiBXb21lc2ggQ2hhbmRyYSBCb25uZXJqZWUgb2YgIENhbGN1dHRhIHdhcyBlbGVjdGVkIFByZXNpZGVudC4gVGhlIGFkZGl0aW9uYWwgQnJpdGlzaCAgTWVtYmVycyB3ZXJlIFdpbGxpYW0gV2VkZGVyYnVybiBhbmQgSnVzdGljZSBKb2huICBKYXJkaW5lLiBBbGwgb3RoZXJzIHdlcmUgdGhlIEhpbmR1cyBmcm9tIENhbGN1dHRhIGFuZCAgTWFkcmFzIFByZXNpZGVuY3kuIFdlZGRlcmJ1cm4gaGFkIGVudGVyZWQgdGhlIHBhcmxpYW1lbnQgIGFzIGEgbGliZXJhbCBtZW1iZXIgaW4gMTg5MyBhbmQgaGFkIHNvdWdodCB0byB2b2ljZSBJbmRpYSdzICBncmlldmFuY2VzIHdpdGhpbiB0aGUgaG91c2UuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " To agitate for Indian political reforms in the House of  Commons. ",
        "option2" : " To campaign for the entry of Indians into the Imperial  Judiciary. ",
        "option3" : " To facilitate a discussion on India's Independence in  the British Parliament. ",
        "option4" : " To agitate for the entry of eminent Indians into the "
      }
    },
    {
      "index" : 80,
      "question" : "With reference to Ryotwari Settlement, consider the following statements :  1. The rent was paid directly by the peasants to the Government. 2. The Government gave Pattas to the Ryots. 3. The lands were surveyed and assessed before being taxed. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4MA==",
      "description" : "UnlvdHdhcmkgc2V0dGxlbWVudCwgdGhlIHJlbnQgd2FzIHBhaWQgZGlyZWN0bHkgYnkgdGhlICBwZWFzYW50cyB0byB0aGUgR292ZXJubWVudCBhbmQgdGhlIEdvdmVybm1lbnQgZ2F2ZSBwYXR0YXMgIHRvIHRoZSBSeW90cy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 81,
      "question" : "Which of the following statements is/are correct regarding Brahmo Samaj?  1. It opposed idolatry. 2. It denied the need for a priestly class for interpreting the religious texts. 3. It popularized the doctrine that the Vedas are infallible. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4MQ==",
      "description" : "U3RhdGVtZW50cyAxICYgMiBhcmUgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following :  1. Assessment of land revenue on the basis of nature of the soil and the quality of crops. 2. Use of mobile cannons in warfare. 3. Cultivation of tobacco and red chillies. Which of the above was/were introduced into India by the English? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4Mg==",
      "description" : "UmFqYSBUb2Rhcm1hbCBoYWQgaW50cm9kdWNlZCB0aGUgYXNzZXNzbWVudCBvZiBsYW5kICByZXZlbnVlIG9uIHRoZSBiYXNpcyBvZiBuYXR1cmUgb2YgdGhlIHNvaWwgYW5kIHRoZSBxdWFsaXR5IG9mICBjcm9wcywgYXMgQWtiYXIncyBhYmxlIG1pbmlzdGVyLiBCYWJ1ciwgdGhlIGZvdW5kZXIgb2YgdGhlICBNdWdoYWwgRW1waXJlIG9uIHRoZSBJbmRpYW4gc3ViY29udGluZW50LCBlbXBsb3llZCAgZmlyZWFybXMsIGd1biBjYXJ0cyBhbmQgbW92YWJsZSBhcnRpbGxlcnkgaW4gYmF0dGxlLiBJbiBCYXR0bGUgIG9mIFBhbmlwYXQgKDE1MjYpIGhlIHVzZWQgbW9iaWxlIGNhbm9ucyB0byBkZWZlYXQgdGhlIG11Y2ggIGxhcmdlciBmb3JjZXMgb2YgSWJyYWhpbSBMb2RoaS4gVG9iYWNjbyB3YXMgaW50cm9kdWNlZCBpbiAgSW5kaWEgYnkgUG9ydHVndWVzZSBpbiAxNnRoIG9yIDE3dGggY2VudHVyeS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " None "
      }
    },
    {
      "index" : 83,
      "question" : "The Ilbert Bill controversy was related to the  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4Mw==",
      "description" : "SWxiZXJ0IGJpbGwgZXhlbXB0ZWQgQnJpdGlzaCBzdWJqZWN0cyBmcm9tIHRyaWFsIGJ5IEluZGlhbiAgbWFnaXN0cmF0ZXMgYW5kIGluIGNhc2VzIGludm9sdmluZyBkZWF0aCBvciB0cmFuc3BvcnRhdGlvbiAgdGhleSAgY291bGQgIG9ubHkgIGJlICB0cmllZCAgYnkgIGEgIGhpZ2ggIGNvdXJ0LiAgVGhpcyAgcHJvcG9zYWwgIHByb3Zva2VkIGZ1cmlvdXMgcHJvdGVzdHMgYnkgdGhlIEluZGlhbnMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " imposition of certain restrictions to carry arms by the Indians ",
        "option2" : " imposition of restrictions on newspapers and  magazines published in Indian languages ",
        "option3" : " removal of disqualifications imposed on the Indian  magistrates with regard to the trial of the Europeans ",
        "option4" : " removal of a duty on imported cotton cloth "
      }
    },
    {
      "index" : 84,
      "question" : "The Radcliffe Committee was appointed to  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4NA==",
      "description" : "VGhlIFJhZGNsaWZmZSBMaW5lIGlzIGEgYm91bmRhcnkgZGVtYXJjYXRpb24gbGluZSAgYmV0d2VlbiBJbmRpYSBhbmQgUGFraXN0YW4gdXBvbiB0aGUgUGFydGl0aW9uIG9mIEluZGlhLiBUaGUgIFJhZGNsaWZmZSBMaW5lIHdhcyBuYW1lZCBhZnRlciBpdHMgYXJjaGl0ZWN0LCBTaXIgQ3lyaWwgIFJhZGNsaWZmZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " solve the problem of minorities in India ",
        "option2" : " give effect to the Independence Bill ",
        "option3" : "  delimit  the  boundaries between India and Pakistan ",
        "option4" : " enquire into the riots in East Bengal "
      }
    },
    {
      "index" : 85,
      "question" : "The  Partition of Bengal made by Lord Curzon in 1905 lasted until  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4NQ==",
      "description" : "SW4gMTkxMSBLaW5nIEdlb3JnZSBWIHZpc2l0ZWQgIEluZGlhLiBBIGR1cmJhciB3YXMgIGhlbGQgYXQgIERlbGhpIGFuZCAgVGhlIGNhcGl0YWwgb2YgSW5kaWEgd2FzIHRyYW5zZmVycmVkIGZyb20gQ2FsY3V0dGEgdG8gIERlbGhpIGFsc28gUGFydGl0aW9uIG9mIEJlbmdhbCB3YXMgIGFubnVsbGVkLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the  First World  War  when Indian troops were needed  by the British and the partition was ended ",
        "option2" : " King George V abrogated Curzon's Act at the Royal  Durbar in Delhi in 1911 ",
        "option3" : " Gandhiji launched  his  Civil Disobedience Movement ",
        "option4" : " the Partition of India in 1947 when East Bengal became "
      }
    },
    {
      "index" : 86,
      "question" : "What was/were the object/objects of Queen Victoria's Proclamation (1858)?  1. To disclaim any intention to annex Indian States. 2. To place the Indian administration under the British Crown. 3. To regulate East India Company's trade with India. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4Ng==",
      "description" : "VGhlIG9iamVjdC9vYmplY3RzIG9mIFF1ZWVuIFZpY3RvcmlhJ3MgUHJvY2xhbWF0aW9uICAoMTg1OCkgd2VyZSB0byBkaXNjbGFpbSBhbnkgaW50ZW50aW9uIHRvIGFubmV4IEluZGlhbiBTdGF0ZXMgIGFzIHRoZSBhbm5vdW5jZW1lbnQgcmV2ZXJzZWQgTG9yZCBEYWxob3VzaWUncyBwcmUtd2FyICBwb2xpY3kgb2YgcG9saXRpY2FsIHVuaWZpY2F0aW9uIHRocm91Z2ggcHJpbmNlbHkgc3RhdGUgIGFubmV4YXRpb24uSXQgd2FzIGFsc28gdG8gcGxhY2UgdGhlIEluZGlhbiBhZG1pbmlzdHJhdGlvbiAgdW5kZXIgdGhlIEJyaXRpc2ggQ3Jvd24gVGhlcmVmb3JlLCBzdGF0ZW1lbnQgMSAmIDIgYXJlICBjb3JyZWN0LiBIb3dldmVyIGl0IHdhcyBub3QgdG8gcmVndWxhdGUgRWFzdCBJbmRpYSBDb21wYW55J3MgIHRyYWRlIHdpdGggSW5kaWEgc28gc3RhdGVtZW50IDMgaXMgd3JvbmcuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 87,
      "question" : "A community  of  people  called Manganiyars is well-known for their  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4Nw==",
      "description" : "TWFuZ2FuaXlhcnMtYSB0cmliYWwgY29tbXVuaXR5IGZyb20gUmFqYXN0aGFuIChOb3J0aCAgd2VzdCkgd2l0aCBhIHN0cm9uZyBtdXNpY2FsIHRyYWRpdGlvbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " martial  arts  in  North-East India ",
        "option2" : " musical tradition in North-West India ",
        "option3" : " classical vocal music in South India ",
        "option4" : " pietra dura tradition in Central India "
      }
    },
    {
      "index" : 88,
      "question" : "The Ghadr (Ghadar) was a  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeXw4OA==",
      "description" : "VGhlIEdoYWRhciBQYXJ0eSB3YXMgYSByZXZvbHV0aW9uYXJ5IGFzc29jaWF0aW9uICBmb3VuZGVkIGJ5IFB1bmphYmkgSW5kaWFucywgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIENhbmFkYSAgd2l0aCB0aGUgYWltIHRvIGdhaW5pbmcgSW5kaWEncyBpbmRlcGVuZGVuY2UgZnJvbSBCcml0aXNoICBydWxlLiBLZXkgbWVtYmVycyBpbmNsdWRlZCBMYWxhIEhhciBEYXlhbCwgU29oYW4gU2luZ2ggIEJoYWtuYSwgS2FydGFyIFNpbmdoIFNhcmFiaGEsIGFuZCBSYXNoYmVoYXJpIEJvc2UuSXQgaGFkICBpdHMgaGVhZHF1YXJ0ZXJzIGF0IFNhbiBGcmFuY2lzY28uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNb2Rlcm4gSGlzdG9yeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " revolutionary association  of Indians with headquarters  at San Francisco ",
        "option2" : " nationalist organization operating from Singapore ",
        "option3" : " militant organization with headquarters at Berlin ",
        "option4" : " communist movement for India's  freedom  with  head "
      }
    },
    {
      "index" : 89,
      "question" : "With reference to Indian history, which of the following is/ are the essential element/elements of the feudal system?  1. A very strong centralized political authority and a very weak provincial or local political authority. 2. Emergence  of administrative structure based on control and possession of land. 3. Creation of lord-vassal relationship between the feudal lord and his overlord. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8ODk=",
      "description" : "QSBwZXJzb24gYmVjYW1lIGEgdmFzc2FsIGJ5IHBsZWRnaW5nIHBvbGl0aWNhbCBhbGxlZ2lhbmNlICBhbmQgcHJvdmlkaW5nIG1pbGl0YXJ5LCBwb2xpdGljYWwsIGFuZCBmaW5hbmNpYWwgc2VydmljZSB0byBhICBsb3JkLiBBIGxvcmQgcG9zc2Vzc2VkIGNvbXBsZXRlIHNvdmVyZWlnbnR5IG92ZXIgbGFuZCBvciAgRSAgQiAgRCAgXzggIDM0ICAyICBNb2Rlcm4gSGlzdG9yeSBBIDM3ICBhY3RlZCBpbiB0aGUgc2VydmljZSBvZiBhbm90aGVyIHNvdmVyZWlnbiwgdXN1YWxseSBhIGtpbmcuIElmIGEgIGxvcmQgYWN0ZWQgaW4gdGhlIHNlcnZpY2Ugb2YgYSBraW5nLCB0aGUgbG9yZCB3YXMgY29uc2lkZXJlZCBhICB2YXNzYWwgb2YgdGhlIGtpbmcuIEFzIHBhcnQgb2YgdGhlIGZldWRhbCBhZ3JlZW1lbnQsIHRoZSBsb3JkICBwcm9taXNlZCB0byBwcm90ZWN0IHRoZSB2YXNzYWwgYW5kIHByb3ZpZGVkIHRoZSB2YXNzYWwgd2l0aCAgYSBwbG90IG9mIGxhbmQuIFRoaXMgbGFuZCBjb3VsZCBiZSBwYXNzZWQgb24gdG8gdGhlIHZhc3NhbCdzICBoZWlycywgZ2l2aW5nIHRoZSB2YXNzYWwgdGVudXJlIG92ZXIgdGhlIGxhbmQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 90,
      "question" : "Who of the following was/were economic critic/ critics of colonialism in India?  1. Dadabhai Naoroji 2. G. Subramania Iyer 3. R. C. Dutt Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTA=",
      "description" : "RGFkYWJoYWkgTmFvcm9qaSwgUi4gQy4gRHV0dCwgUmFuYWRlLCBHb2toYWxlLCBHLiAgU3VicmFtYW5pYSBJeWVyLCB3ZXJlIGFtb25nIHRob3NlIHdobyBncm91bmRlZCBJbmRpYW4gIG5hdGlvbmFsaXNtIGZpcm1seSBvbiB0aGUgZm91bmRhdGlvbiBvZiBhbnRpLWltcGVyaWFsaXNtIGJ5ICBmYXNoaW9uaW5nIHRoZSB3b3JsZCdzIGZpcnN0IGVjb25vbWljIGNyaXRpcXVlIG9mIGNvbG9uaWFsaXNtLCAgYmVmb3JlIEhvYnNvbiBhbmQgTGVuaW4uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 91,
      "question" : "The Government of India Act of 1919 clearly defined  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTE=",
      "description" : "VGhlIE1vbnRhZ3UtQ2hlbG1zZm9yZCBSZWZvcm1zIHdoaWNoIGJlY2FtZSB0aGUgIEdvdmVybm1lbnQgb2YgSW5kaWEgQWN0IGluIDE5MTkgY2xlYXJseSBkZWZpbmVkIHRoZSAganVyaXNkaWN0aW9uIG9mIHRoZSBjZW50cmFsIGFuZCBwcm92aW5jaWFsIGdvdmVybm1lbnRzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the separation of power between the judiciary and the  legislature ",
        "option2" : " the jurisdiction of the central and provincial  governments ",
        "option3" : " the powers of the Secretary of State for India and the  Viceroy ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 92,
      "question" : "Satya ShodhakSamaj organized  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTI=",
      "description" : "U2F0eWFzaG9kaGFrIFNhbWFqIGlzIGEgc29jaWV0eSBlc3RhYmxpc2hlZCAgYnkgSnlvdGlyYW8gUGh1bGUgb24gU2VwdGVtYmVyIDI0LCAxODczLiBUaGlzIHdhcyBzdGFydGVkICBhcyBhIGdyb3VwIHdob3NlIG1haW4gYWltIHdhcyB0byBsaWJlcmF0ZSB0aGUgc29jaWFsIHNodWRyYSAgYW5kIHVudG91Y2hhYmxlIGNhc3RlcyBmcm9tIGV4cGxvaXRhdGlvbiBhbmQgb3BwcmVzc2lvbi4gIFJlZjogQ2xhc3MgMTIgTkNFUlQgSGlzdG9yeSwgUGFnZSAxMzAuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a movement for upliftment of tribals in Bihar ",
        "option2" : " a temple-entry movement in Gujarat ",
        "option3" : " an anti-caste movement in Maharashtra ",
        "option4" : " a peasant movement in Punjab "
      }
    },
    {
      "index" : 95,
      "question" : "What was the main reason for the split in the Indian National Congress at Surat in 1907?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTU=",
      "description" : "KGkpIEV4dHJlbWlzdHMgYW5kIG1vZGVyYXRlcyBib3RoIHNlZW1lZCB0byBiZSAgbG9ja2luZyBob3Jucy4gVGhlIEV4dHJlbWlzdHMgdGhvdWdodCB0aGF0IHRoZSBwZW9wbGUgaGFkICBiZWVuIGVuY291cmFnZWQgYW5kIHRoZSBiYXR0bGUgZm9yIGZyZWVkb20gaGFkIGJlZ3VuLiAgVGhleSBmZWx0IHRoZSB0aW1lIGhhZCBjb21lIGZvciB0aGUgYmlnIHB1c2ggdG8gZHJpdmUgdGhlICBCcml0aXNoIG91dCBhbmQgY29uc2lkZXJlZCB0aGUgTW9kZXJhdGVzIHRvIGJlIGEgc3R1bWJsaW5nICBibG9jayB0byB0aGUgbW92ZW1lbnQuICAoaWkpIFNvLCBTdXJhdCBzcGxpdCBvY2N1cnJlZCBiZWNhdXNlIGV4dHJlbWlzdHMgd2VyZSAgZGlzc2F0aXNmaWVkIHdpdGggTW9kZXJhdGVzJyBjYXBhY2l0eSB0byBuZWdvdGlhdGUgd2l0aCB0aGUgIEJyaXRpc2guIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Introduction of communalism into Indian politics by  Lord Minto ",
        "option2" : " Extremists' lack of faith in the capacity of the  moderates to negotiate with the British Government ",
        "option3" : " Foundation of Muslim League ",
        "option4" : " Aurobindo Ghosh's inability to be elected as the "
      }
    },
    {
      "index" : 96,
      "question" : "The plan of Sir Stafford Cripps envisaged that after the Second World War  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTY=",
      "description" : "KGkpIFRoZSBtYWluIHByb3Bvc2FscyBvZiB0aGUgcGxhbiBvZiBTaXIgU3RhZmZvcmQgIENyaXBwcyB3YXMgdGhhdCBhbiBJbmRpYW4gVW5pb24gd2l0aCBhIGRvbWluaW9uIHN0YXR1cyAgd291bGQgYmUgc2V0IHVwOyBpdCB3b3VsZCBiZSBmcmVlIHRvIGRlY2lkZSBpdHMgcmVsYXRpb25zIHdpdGggIHRoZSBDb21tb253ZWFsdGggYW5kIGZyZWUgdG8gcGFydGljaXBhdGUgaW4gdGhlIFVuaXRlZCAgTmF0aW9ucyBhbmQgb3RoZXIgaW50ZXJuYXRpb25hbCBib2RpZXMuICAoaWkpIENyaXBwcyBwcm9wb3NlZCB0byBnaXZlIGRvbWluaW9uIHN0YXR1cyB0byBJbmRpYSBhZnRlciAgV1cyLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " India should be granted complete independence ",
        "option2" : " India should be partitioned into two before granting  independence ",
        "option3" : " India should be made a republic with the condition  that she will join the Commonwealth ",
        "option4" : " India should be given Dominion status "
      }
    },
    {
      "index" : 97,
      "question" : "With reference to cultural history of India, consider the following statements :  1. Most of the Tyagaraja Kritis are devotional songs in praise of Lord Krishn(a) 2. Tyagaraja created several new ragas. 3. Annamacharya and Tyagaraja are contemporaries. 4. Annamacharya kirtanas are devotional songs in praise of Lord Venkateshwar(a) Which of the statements given above are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTc=",
      "description" : "QW5uYW1hY2hhcnlhIGJlbG9uZ2VkIHRvIDE1dGggY2VudHVyeS4gU28sICBBbm5hbWFjaGFyeWEgYW5kIFR5YWdhcmFqYSAoYm9ybiBpbiAxNzY3KSBjYW4ndCBiZSBiZSAgY29udGVtcG9yYXJpZXMuIEJ5IGVsaW1pbmF0aW9uIHdlIGdldCBCOiAyIGFuZCA0IG9ubHkuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1  and 3  only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 98,
      "question" : "The staple commodities of export by the English East India Company from Bengal in the middle of the 18th century were  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTg=",
      "description" : "ICgtKU5FVyBOQ0VSVCwgU3RkIDgtIE91ciBQYXN0IElJSSwgQ2hhcHRlciAyOiAiLi4uLlRoZSAgZmluZSBxdWFsaXRpZXMgb2YgY290dG9uIGFuZCBzaWxrIHByb2R1Y2VkIGluIEluZGlhIGhhZCBhIGJpZyAgbWFya2V0IGluIEV1cm9wZS4uLi4gVGhlIGNvbXBldGl0aW9uIGFtb25nIHRoZSBFdXJvcGVhbiAgY29tcGFuaWVzIGluZXZpdGFibHkgcHVzaGVkIHVwIHRoZSBwcmljZXMgYXQgd2hpY2ggdGhlc2UgIGdvb2RzIGNvdWxkIGJlIHB1cmNoYXNlKGQpIiAgKC0pTkVXIE5DRVJUIFN0KGQpMTItIENoLjEyIENvbG9uaWFsIENpdGllczogIi4uLi5CeSAgdGhlIGVuZCBvZiB0aGUgbmluZXRlZW50aCBjZW50dXJ5LCBoYWxmIHRoZSBpbXBvcnRzIGFuZCAgZXhwb3J0cyBvZiBJbmRpYSBwYXNzZWQgdGhyb3VnaCBCb21iYXkuIE9uZSBpbXBvcnRhbnQgIGl0ZW0gb2YgdGhpcyB0cmFkZSB3YXMgb3BpdW0gdGhhdCB0aGUgRWFzdCBJbmRpYSBDb21wYW55ICBleHBvcnRlZCB0byBDaGluKGEpIiAgKC0pIkluZGlnbyBhbmQgc2FsdHBldHJlIHdlcmUgdGhlIG90aGVyIG1ham9yIGltcG9ydHMgZnJvbSAgSW5kaWEsIGFuZCB0aGUgZmFjdCB0aGF0IGJvdGggcHJvZHVjdHMgd2VyZSBwcm9kdWNlZCBpbiB0aGUgIGVhc3Rlcm4gR2FuZ2V0aWMgcGxhaW4sIGVzcGVjaWFsbHkgaW4gQmloYXIsIHN0aW11bGF0ZWQgQnJpdGlzaCAgZWZmb3J0cyB0byBlc3RhYmxpc2ggZmFjdG9yaWVzIG9uIHRoZSBlYXN0IGNvYXN0IGFzIHdlbGwgYXMgdGhlICB3ZXN0IGNvYXN0IG9mIHRoZSBJbmRpYW4gc3ViY29udGluZW50LiIgU28gU2FsdHBldHJlIHdhcyAgaW5kZWVkIGV4cG9ydGVkIG90aGVyd2lzZSBCcml0aXNoIHdvdWxkbid0IGhhdmUgbWFkZSAgZWZmb3J0cyB0byBzZXR1cCBmYWN0b3JpZXMgb24gRWFzdCBjb2FzdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Raw cotton, oil-seeds and opium ",
        "option2" : " Sugar, salt, zinc and lead ",
        "option3" : " Copper, silver, gold, spices and tea ",
        "option4" : " Cotton, silk, saltpetre and opium "
      }
    },
    {
      "index" : 99,
      "question" : "Which one of the following statements does not apply to the system of Subsidiary Alliance introduced by Lord Wellesley?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8OTk=",
      "description" : "UG9pbnQgIEEsICBCICBhbmQgIEQgIHdlcmUgIHRoZSAgc2FsaWVudCAgZmVhdHVyZXMgIG9mICBTdWJzaWRpYXJ5IEFsbGlhbmNlLCBoZW5jZSAiQyIgZG9lc24ndCBhcHBseS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " To maintain a large standing army at other's expense ",
        "option2" : " To keep India safe from Napoleonic danger ",
        "option3" : " To secure a fixed income for the Company ",
        "option4" : " To establish British paramountcy over the Indian "
      }
    },
    {
      "index" : 100,
      "question" : "Economically, one of the results of the British rule in India in the 19th century was the  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTAw",
      "description" : "Q29tbWVyY2lhbGl6YXRpb24gb2YgSW5kaWFuIGFncmljdWx0dXJlIHdhcyBhbW9uZyAgdGhlIG1ham9yIGltcGFjdHMgb2YgQnJpdGlzaCBydWxlIG9uIEluZGlhbiBlY29ub215LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " increase in the export of Indian handicrafts ",
        "option2" : " growth in the number of Indian owned factories ",
        "option3" : " commercialization of Indian agriculture ",
        "option4" : " rapid increase in the urban population "
      }
    },
    {
      "index" : 101,
      "question" : "Which among the following events happened earliest ?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTAx",
      "description" : "ICgtKTE4NTk6IE5lZWxkYXJwYW4gd2FzIHdyaXR0ZW4gICgtKTE4NjM6IFNhdHllbmRyYW5hdGggY2xlYXJlZCBDU0UuICAoLSkxODc1OiBBcnlhIFNhbWFqIHdhcyBmb3VuZGUoZCkgICgtKTE4ODI6IEFuYW5kbWF0aCB3YXMgd3JpdHRlbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Swami Dayanand established Arya Samaj. ",
        "option2" : " Dinabandhu Mitra wrote Neeldarpan. ",
        "option3" : " Bankim Chandra Chattopadhyay wrote Anandmath. ",
        "option4" : " Satyendranath Tagore became the first Indian to "
      }
    },
    {
      "index" : 102,
      "question" : "With reference to educational institutes during colonial rule in India, consider the following pairs of Institution vs Founder:  1. Sanskrit College at Benaras: William Jones 2. Calcutta Madarsa: Warren Hastings 3. Fort William College: Arthur Wellesley Which of the pairs given above is/are correct ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTAy",
      "description" : "IDEuIEluIDE3OTEgZHVlIHRvIHRoZSBzaW5jZXJlIGVmZm9ydHMgb2YgdGhlIEJyaXRpc2ggcmVzaWRlbnQsICBKb25hdGhhbiBEdW5jYW4sIGEgU2Fuc2tyaXQgQ29sbGVnZSB3YXMgZXN0YWJsaXNoZWQgdG8gIHByb21vdGUgdGhlIHN0dWR5IG9mIEhpbmR1IGxhd3MgYW5kIHBoaWxvc29waHkgaW4gQmFuYXJhcy4gIEFuZCBTaXIgV2lsbGlhbSBKb25lcyBpcyBhc3NvY2lhdGVkIHdpdGggQXNpYXRpYyBTb2NpZXR5IG9mICBCZW5nYWwgKE5DRVJUIHRoZW1lcy1JSSBwYWdlIDIzMikuIFNvLCAjMSBpcyB3cm9uZy4gQSBhbmQgIEMgZWxpbWluYXRlKGQpICAyLiBGb3J0IFdpbGxpYW0gQ29sbGVnZSB3YXMgZXN0YWJsaXNoZWQgYnkgTG9yZCBXZWxsZXNsZXkgICgxNzk4KSBmb3IgdGhlIHRyYWluaW5nIG9mIGNpdmlsIHNlcnZhbnRzLiBCdXQsIEFydGh1ciBXZWxsZXNsZXkgIHdhcyB0aGUgYnJvdGhlciBvZiBMb3JkIFdlbGxlc2xleSB3aG8gZm91Z2h0IHRoZSA0dGggQW5nbG8tICBNeXNvcmUgd2FyIGFnYWluc3QgVGlwdSBTdWx0YW4uIEFydGh1ciBXZWxsZXNsZXksIGZvcmNlZCAgVGlwdSB0byByZXRyZWF0IHRvIGhpcyBjYXBpdGFsIFNyaXJhbmdhcGF0dGluYW0uIChUYW1pbG5hZHUgIGJvYXJkIEhpc3RvcnkgdGV4dGJvb2sgQ2xhc3MgMTIgcGFnZSAyOSkuIFNvICMzIGlzIHdyb25nLCBDICBhbmQgRCBlbGltaW5hdGUoZCkgIDMuIFRodXMgYnkgZWxpbWluYXRpb24sIHdlIGFyZSBsZWZ0IHdpdGggQjogb25seSAyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 103,
      "question" : "Regarding Wood's Dispatch, which of the following statements are true ?  1. Grants-in-Aid system was introduce(d) 2. Establishment of universities was recommende(d) 3. English as a medium of instruction at all levels of education was recommende(d) Select the correct answer using the code given below : ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTAz",
      "description" : "V29vZCdzIGRpc3BhdGNoIHJlY29tbWVuZGVkIHRoYXQgUHJpbWFyeSBhbmQgIHNlY29uZGFyeSBlZHVjYXRpb24gc2hvdWxkIGJlIGluIFZlcm5hY3VsYXIgbGFuZ3VhZ2UuKiIgIHNvIHN0YXRlbWVudCMzIGlzIHdyb25nLCBhbmQgYnkgZWxpbWluYXRpb24gd2UgYXJlIGxlZnQgd2l0aCAgQW5zd2VyIEE6IG9ubHkgMSBhbmQgMi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 104,
      "question" : "Which of the following led to the introduction of English Education in India ?  1. Charter Act of 1813 2. General Committee of Public Instruction, 1823 3. Orientalist and Anglicist Controversy Select the correct answer using the code given below ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTA0",
      "description" : "QWxsIHRocmVlIHdlcmUgcmVzcG9uc2libGUgZm9yIHRoZSBpbnRyb2R1Y3Rpb24gb2YgIEVuZ2xpc2ggZWR1Y2F0aW9uIGluIEluZGkoYSkg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 105,
      "question" : "Who among the following were the founders of the \"Hind Mazdoor Sabha\" established in 1948 ?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTA1",
      "description" : "VGhlIEZvdW5kaW5nIENvbmZlcmVuY2UgZWxlY3RlZCBDb20uIEFzaG9rIE1laHRhICBhcyB0aGUgR2VuZXJhbCBTZWNyZXRhcnkgYW5kIENvbS4gRy5HLiBNZWh0YSBhbmQgVi5TLiAgTWF0aHVyIGFzIFNlY3JldGFyaWVzLiBNcy4gTWFuaWJlbiBLYXJhIGFuZCBDb20uIFQuUy4gIFJhbWFudWphbSB3ZXJlIGVsZWN0ZWQgYXMgVmljZS1QcmVzaWRlbnRzIG9mIEhNUy4gU28sIEQgIGlzIG1vc3QgZml0dGluZy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " (B) Krishna Pillai, E.M.S. Namboodiripad and K.(C)  George ",
        "option2" : " Jayaprakash Narayan, DeenDayal Upadhyay and  M.N. Roy ",
        "option3" : " (C)P. Ramaswamy Iyer, K. Kamaraj and Veeresalingam  Pantulu ",
        "option4" : " Ashok Mehta, T.S. Ramanujam and G.G. Mehta "
      }
    },
    {
      "index" : 108,
      "question" : "With reference to land reforms in independent India, which one of the following statements is correct?     ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTA4",
      "description" : "QmlwYW4gQ2hhbmRyYSdzIEluZGlhIFNpbmNlIEluZGVwZW5kZW5jZSwgQ2guMzEgb24gIExhbmQgUmVmb3JtcyAoSUlJKSAgKC0pSW4gbW9zdCBzdGF0ZXMsIGluaXRpYWxseSwgdGhlIGNlaWxpbmdzIHdlcmUgaW1wb3NlZCBvbiAgaW5kaXZpZHVhbCBhbmQgbm90IGZhbWlseSBob2xkaW5ncywgZW5hYmxpbmcgbGFuZG93bmVycyB0byAgZGl2aWRlIHVwIHRoZWlyIGhvbGRpbmdzICdub3Rpb25hbGx5JyBpbiB0aGUgbmFtZXMgb2YgIHJlbGF0aXZlcyBtZXJlbHkgdG8gYXZvaWQgdGhlIGNlaWxpbmcuIFNvLCAoYSkgaXMgd3JvbmcuICAoLSlBIGxhcmdlIG51bWJlciBvZiBleGVtcHRpb25zIHRvIHRoZSBjZWlsaW5nIGxpbWl0cyB3ZXJlICBwZXJtaXR0ZWQgYnkgbW9zdCBzdGF0ZXMgZm9sbG93aW5nIHRoZSBTZWNvbmQgUGxhbiAgcmVjb21tZW5kYXRpb25zIHRoYXQgY2VydGFpbiBjYXRlZ29yaWVzIG9mIGxhbmQgY291bGQgYmUgIGV4ZW1wdGVkIGZyb20gY2VpbGluZ3MuIFRoZXNlIHdlcmUgdGVhLCBjb2ZmZWUgYW5kIHJ1YmJlciAgcGxhbnRhdGlvbnMsIG9yY2hhcmRzLCBzcGVjaWFsaXplZCBmYXJtcyBldGMuIFNvLCAoZCkgaXMgIHdyb25nLiAgKC0pQyBpcyBhICdoeXBlcmJvbGUnIHdyb25nIHN0YXRlbWVudC4gTGFuZCByZWZvcm0gaXMgbm90ICByZXNwb25zaWJsZSBmb3IgY2FzaCBjcm9wIGN1bHRpdmF0aW9uIGJlY29taW5nIHByZWRvbWluYW50ICBpbiBJbmRpYS4gQmVzaWRlcywgbWFqb3JpdHkgb2YgSW5kaWEncyBhcmVhIHVuZGVyIGN1bHRpdmF0aW9uIGlzICBmb29kZ3JhaW5zIGFuZCBjZXJlYWxzLiAoYW5kIG5vdCBjYXNoIGNyb3BzKSBhcyBwZXIgVGFibGUzLCAgcGFnZSAxMDEgb2YgRWNvbm9taWMgU3VydmV5IDIwMTctMTguICAoLSlUaHVzLCAoYikgaXMgdGhlIG1vc3Qgc3VpdGFibGUgYW5zd2VyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " The ceiling laws were aimed at family holdings and  not individual holdings. ",
        "option2" : " The major aim of land reforms was providing  agriculture land to all the landless. ",
        "option3" : " It resulted in cultivation of cash crops as a  predominant form of cultivation. ",
        "option4" : " Land reforms permitted no exemptions to the ceiling "
      }
    },
    {
      "index" : 109,
      "question" : "Consider the following statements about 'the Charter Act of 1813' :  1. It ended the trade monopoly of the East India Company in India except for trade in tea and trade with China. 2. It asserted the sovereignty of the British Crown over the Indian territories held by the Company. 3. The revenues of India were now controlled by the British Parliament. Which of the statements given above are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTA5",
      "description" : "ICgtKVRoZSBDb21wYW55J3MgbW9ub3BvbHkgb3ZlciB0cmFkZSBpbiBJbmRpYSBlbmRlZCwgIGJ1dCB0aGUgQ29tcGFueSByZXRhaW5lZCB0aGUgdHJhZGUgd2l0aCBDaGluYSBhbmQgdGhlICB0cmFkZSAgaW4gdGVhLiAgU28gIzEgaXMgcmlnaHQuICAoLSlUaGUgIENvbXBhbnkgIHdhcyAgdG8gIHJldGFpbiAgdGhlICBwb3NzZXNzaW9uICBvZiAgdGVycml0b3JpZXMgYW5kIHRoZSByZXZlbnVlIGZvciAyMCB5ZWFycyBtb3JlLCB3aXRob3V0ICBwcmVqdWRpY2UgdG8gdGhlIHNvdmVyZWlnbnR5IG9mIHRoZSBDcm93bi4gU28sICMyIGlzIHJpZ2h0ICBidXQgIzMgaXMgd3JvbmcuIEhlbmNlIGFuc3dlciAoYSk6IDEgYW5kIDIgb25seS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 110,
      "question" : "Consider the following pairs :  Movement: Organization Leader 1. All India Anti-Untouchability League: Mahatma Gandhi 2. All India Kisan Sabha: Swami Sahajanad Saraswati 3. Self Respect Movement: E.V. Ramaswami Naicker Which of the pairs given above is/are correctly matched? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTEw",
      "description" : "ICgtKVdoaWxlIGluIGphaWwsIEdhbmRoaSBzZXQgdXAgdGhlIEFsbCBJbmRpYSBBbnRpLSAgVW50b3VjaGFiaWxpdHkgIExlYWd1ZSBpbiBTZXB0ZW1iZXIgMTkzMjMgQWxsIEluZGlhIEtpc2FuICBDb25ncmVzcy9TYWJoYTogIFRoaXMgc2FiaGEgd2FzIGZvdW5kZWQgaW4gTHVja25vdyBpbiAgQXByaWwgMTkzNiB3aXRoIFN3YW1pIFNhaGphbmFuZCBTYXJhc3dhdGkgYXMgdGhlICBwcmVzaWRlbnQgYW5kIE4uRy4gUmFuZ2EgYXMgdGhlICBnZW5lcmFsIHNlY3JldGFyeS4gRHVyaW5nICB0aGUgMTkyMHMgaW4gU291dGggSW5kaWEsIHRoZSBub24tYnJhaG1pbnMgIG9yZ2FuaXNlZCB0aGUgIFNlbGYtUmVzcGVjdCBNb3ZlbWVudCBsZWQgYnkgRS5WLiBSYW1hc3dhbXkgIE5haWNrZXIuICAoLSlTbywgKGQpOiBhbGwgdGhyZWUgYXJlIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 111,
      "question" : "Indigo cultivation in India declined by the beginning of the  20th  century  because  of  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTEx",
      "description" : "ICgtKTIwdGggKHR3ZW50aWV0aCkgY2VudHVyeSBtZWFucyAxLzEvMTkwMSB0byAzMS8xMi8gIDIwMDAuIFdlIGhhdmUgdG8gZmluZCBvdXQgd2h5IEluZGlnbyBjdWx0aXZhdGlvbiAgZGVjbGluZWQgYnkgdGhlIGJlZ2lubmluZyBvZiAxOTAxLiAgKC0pMTkxNzogR2FuZGhpLWppJ3MgQ2hhbXBhcmFuIFNhdHlhZ3JhaGEuIFNvLCAoYykgaXMgIG5vdCBmaXR0aW5nIHRoZSB0aW1lbGluZS4gICgtKU5DRVJUIE91ciBQYXN0LUlJSTogUGFnZSAzNS0zNjogSW4gTWFyY2ggMTg1OSAgdGhvdXNhbmRzIG9mIHJ5b3RzIGluIEJlbmdhbCByZWZ1c2VkIHRvIGdyb3cgaW5kaWdvLiBBcyAgdGhlIHJlYmVsbGlvbiBzcHJlYWQsIHJ5b3RzIHJlZnVzZWQgdG8gcGF5IHJlbnRzIHRvIHRoZSAgcGxhbnRlcnMsIGFuZCBhdHRhY2tlZCBpbmRpZ28gZmFjdG9yaWVzIGFybWVkIHdpdGggIHN3b3JkcyBhbmQgc3BlYXJzLCBib3dzIGFuZCBhcnJvd3MuLi4uLi5BZnRlciB0aGUgcmV2b2x0LCAgaW5kaWdvIHByb2R1Y3Rpb24gY29sbGFwc2VkIGluIEJlbmdhbC4gQnV0IHRoZSBwbGFudGVycyAgbm93IHNoaWZ0ZWQgdGhlaXIgb3BlcmF0aW9uIHRvIEJpaGFyLiBXaXRoIHRoZSBkaXNjb3ZlcnkgIG9mIHN5bnRoZXRpYyBkeWVzIGluIHRoZSBsYXRlIG5pbmV0ZWVudGggY2VudHVyeSB0aGVpciAgYnVzaW5lc3Mgd2FzIHNldmVyZWx5IGFmZmVjdGVkLCBidXQgeWV0IHRoZXkgbWFuYWdlZCB0byAgZXhwYW5kIHByb2R1Y3Rpb24uIEluIG90aGVyIHdvcmRzLCB0aGUgaW52ZW50aW9uIG9mICBhcnRpZmljaWFsIGR5ZSBkaWQgbm90IGFmZmVjdCB0aGVtIHlldC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Peasant resistance to the oppressive conduct of  planters ",
        "option2" : " Its unprofitability in the world market because of  new inventions ",
        "option3" : " National leaders' opposition to the cultivation of  indigo ",
        "option4" : " Government control over the planters "
      }
    },
    {
      "index" : 112,
      "question" : "Wellesley established the Fort William College at Calcutta because  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTEy",
      "description" : "ICgtKUxvcmQgV2VsbGVzbGV5ICgxNzk4LTE4MDUpIHdhbnRlZCBhZGVxdWF0ZSAgdHJhaW5pbmcgZm9yIHRoZSBFdXJvcGVhbiBjaXZpbCBzZXJ2YW50cy4gQXQgRm9ydCBXaWxsaWFtICBDb2xsZWdlIGluIENhbGN1dHRhIHRoZSBjaXZpbCBzZXJ2YW50cyBmcm9tIGFsbCB0aGUgIHByZXNpZGVuY2llcyB0b29rIHRocmVlIHllYXJzIG9mIHRyYWluaW5nIGJlZm9yZSBnZXR0aW5nICB0aGVpciBjaXZpbCBwb3N0aW5nLiAgKC0pQnV0IHRoZSBDb3VydCBvZiBEaXJlY3RvcnMgZmVhcmVkIHRoYXQgc3VjaCBhICB0cmFpbmluZyBwcm9ncmFtbWUgbWlnaHQgcmVzdWx0IGluIHRoZSBsb3lhbHRpZXMgb2YgdGhlICBjaXZpbCBzZXJ2YW50cyBzaGlmdGluZyBmcm9tIExvbmRvbiB0byBDYWxjdXR0YS4gU28gaW4gIDE4MDIgRm9ydCBXaWxsaWFtIENvbGxlZ2Ugd2FzIGNsb3NlZC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He was asked by the Board of Directors at London  to  do  so ",
        "option2" : " He wanted to revive interest in oriental learning in  India ",
        "option3" : " He wanted to provide William Carey and his  associates employment ",
        "option4" : " He wanted to train British civilians for "
      }
    },
    {
      "index" : 113,
      "question" : "Which of the following statements correctly explain the impact of the Industrial Revolution on India during the first half of the nineteenth century?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnl8MTEz",
      "description" : "ICgtKU1hY2hpbmVzIHdlcmUgdmVyeSBmZXcuIFRoZXkgd2VyZSBpbnRyb2R1Y2VkIGluICB0aGUgc3RhcnRpbmcgb2YgdGhlIDIwdGggQ2VudHVyeSBDRSAgJyEgKGIpIGlzIHdyb25nLiAgKC0pUmFpbHdheSBsaW5lcyB3ZXJlIGxhaWQgcG9zdCAxODUwcy0gaS5lLiBzZWNvbmQgaGFsZiAgb2YgdGhlIDE5dGggQ2VudHVyeSBDRSAnISAoYykgaXMgd3JvbmcuICAoLSlUaGUgQnJpdGlzaCBnb29kcyB3ZXJlIGdpdmVuIGR1dHkgZnJlZSB0cmFkZSAgcGVybWl0cyAnISAoZCkgaXMgd3JvbmcuICAoLSlTaW5jZSBPcHRpb24gKGIpLCAoYykgJiAoZCkgLSBJbmNvcnJlY3QsIFRoZXJlZm9yZSB3ZSAgYXJlIGxlZnQgd2l0aCB0aGUgYW5zd2VyICcoYSknLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TW9kZXJuIEhpc3Rvcnk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Modern History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Indian handicrafts were ruined. ",
        "option2" : " Machines were introduced in the Indian textile  industry in large number. ",
        "option3" : " Railway lines were laid in many parts of the country. ",
        "option4" : " Heavy duties were imposed on the imports of British "
      }
    }
  ],
  "subject" : "History",
  "topic" : "Modern History",
  "year" : "0"
}
