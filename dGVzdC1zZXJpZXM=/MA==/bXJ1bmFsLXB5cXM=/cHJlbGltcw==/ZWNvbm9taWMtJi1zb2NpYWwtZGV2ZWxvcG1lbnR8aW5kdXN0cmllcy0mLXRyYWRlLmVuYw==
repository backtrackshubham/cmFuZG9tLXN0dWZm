{
  "testId" : "economic-&-social-development|industries-&-trade",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which of the following benefits are likely to accrue to India from the World Trade Organisation?  1. India's share in the world trade is to go up from the present 600 million US dollars to 5 billion US dollars by 2000 AD. 2. It will help boost exports of agricultural commodities from India. 3. India's share in the world trade is likely to triple by the year 2000 A.D. ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MQ==",
      "description" : "V29ybGQgVHJhZGUgT3JnYW5pemF0aW9uIGlzIGF0dGVtcHRpbmcgdG8gbG93ZXIgdHJhZGUgIGJhcnJpZXJzIGFjcm9zcyBuYXRpb25zLiBIZW5jZSBleHBvcnQgIG9mIGFsbCBtZW1iZXIgbmF0aW9ucyAgd2lsbCBnbyB1cC4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 2,
      "question" : "Local supply of coal is not available to :  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Mg==",
      "description" : "VlNMIEJoYWRyYXZhdGkgbG9jYXRlZCBpbiBLYXJuYXRha2EgaXMgdGhlIG9ubHkgaXJvbiAgYW5kIHN0YXRlIHBsYW50IHdoaWNoIGRvZXMgbm90IGhhdmUgY2FwYXRpdmUgY29hbCBtaW5lcyAgYW5kIGlzIHNpdHVhdGVkIG91dHNpZGUgdGhlIGNvYWwgcHJvZHVjaW5nIGFyZWEuIFRoZSBwbGFudCAgc3dpdGNoZWQgb3ZlciB0byBlbGVjdHJpYyBmdXJuYWNlcyBhZnRlciB0aGUgY29tcGxldGlvbiBvZiAgTWFoYXRtYSBHYW5kaGkgSHlkZWwgUG93ZXIgU3RhdGlvbi4gICAzLiAoYikgSW5kdXN0cmlhbCBMaWNlbnNpbmcgd2FzIGFib2xpc2hlZCBmb3IgYWxsIGV4Y2VwdCBzaG9ydCAgbGlzdCBvZiAxOCBpbmR1c3RyaWVzIGluIE5ldyBJbmR1c3RyaWFsIFBvbGljeSAxOTkxLiBDdXJyZW50bHksICBhcyBwZXIgMjAxNSBkYXRhLCBvbmx5IGZpdmUgaW5kdXN0cmllcyBhcmUgdW5kZXIgY29tcHVsc29yeSAgbGljZW5zaW5nIG1haW5seSBvbiBhY2NvdW50IG9mIGVudmlyb25tZW50YWwsIHNhZmV0eSBhbmQgIHN0cmF0ZWdpYyBjb25zaWRlcmF0aW9ucy4gVGhleSBhcmU6ICAxLiBEaXN0aWxsYXRpb24gYW5kIGJyZXdpbmcgb2YgYWxjb2hvbGljIGRyaW5rcyAgMi4gQ2lnYXJzIGFuZCBDaWdhcmV0dGVzIG9mIHRvYmFjY28gYW5kIG1hbnVmYWN0dXJlZCAgdG9iYWNjbyBzdWJzdGl0dXRlcy4gIDMuIEVsZWN0cm9uaWMgQWVyb3NwYWNlIGFuZCBkZWZlbnNlIGVxdWlwbWVudDogYWxsIHR5cGVzICA0LiBJbmR1c3RyaWFsIGV4cGxvc2l2ZXMgaW5jbHVkaW5nIGRldG9uYXRpbmcgZnVzZXMsICBzYWZldHkgZnVzZXMsIGd1biBwb3dkZXIsIG5pdHJvY2VsbHVsb3NlIGFuZCBtYXRjaGVzLiAgNS4gU3BlY2lmaWVkIEhhemFyZG91cyBjaGVtaWNhbHMgaS5lLiAoaSkgIEh5ZHJvY3lhbmljICBhY2lkIGFuZCBpdHMgZGVyaXZhdGl2ZXMgKGlpKSBQaG9zZ2VuZSBhbmQgaXRzIGRlcml2YXRpdmVzICBhbmQgKGlpaSkgSXNvY3lhbmF0ZXMgJiBkaWlzb2N5YW5hdGVzIG9mIGh5ZHJvY2FyYm9uLCBub3QgIGVsc2V3aGVyZSBzcGVjaWZpZWQgKGV4YW1wbGUgTWV0aHlsIGlzb2N5YW5hdGUpLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " TISCO, Jamshedpur ",
        "option2" : " VSL, Bhadravati ",
        "option3" : " HSL, Durgapur ",
        "option4" : " HSL, Bhilai "
      }
    },
    {
      "index" : 4,
      "question" : "Scheme of (i) Urban Micro-Enterprises, (ii) Urban Wage Employment and (iii) Housing and Shelter Upgradation are parts of:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8NA==",
      "description" : "VGhlIE5laHJ1IFJvemdhciBZb2phbmEgKDE5ODkpIGhhcyBiZWVuIGRlc2lnbmVkIHRvICBwcm92aWRlIGVtcGxveW1lbnQgdG8gdGhlIHVyYmFuIHVuZW1wbG95ZWQgYW5kIHVuZGVyLSAgZW1wbG95ZWQgcG9vci4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Integrated Rural Development Programme ",
        "option2" : " Nehru Rojgar Yojana ",
        "option3" : " Jawahar Rojgar Yojana ",
        "option4" : " Prime Minister's Rojgar Yojana "
      }
    },
    {
      "index" : 5,
      "question" : "The contribution of India's small scale sector to the gross turnover in the manufacturing sector since 1992 has been of the order of:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8NQ==",
      "description" : "VGhlIGNvbnRyaWJ1dGlvbiBvZiBzbWFsbCBzY2FsZSBpbmR1c3RyaWVzIHRvICBlbXBsb3ltZW50IGFuZCBleHBvcnRzIGlzIHN1YnN0YW50aWFsLiBUaGUgc2VjdG9yICBjb250cmlidXRlcyBvdmVyIDQwIHBlciBjZW50IG9mIHRoZSBncm9zcyB0dXJub3ZlciBpbiB0aGUgIG1hbnVmYWN0dXJpbmcgc2VjdG9yLCA0NSBwZXIgY2VudCBvZiBtYW51ZmFjdHVyZWQgZXhwb3J0cyAgYW5kIDI1IHBlciBjZW50IG9mIHRvdGFsIGV4cG9ydHMuIEFzIGluIDIwMTUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 40% ",
        "option2" : " 34% ",
        "option3" : " 30% ",
        "option4" : " 45% "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following places are known for paper manufacturing industry ?  1. Yamuna Nagar 2. Guwahati 3. Shahabad 4. Ballarpur Choose the correct answer using the codes given below: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Ng==",
      "description" : "WWFtdW5hIE5hZ2FyLCBHdXdhaGF0aSBhbmQgQmFsbGFycHVyIGFyZSBmYW1vdXMgZm9yICBwYXBlciBtYW51ZmFjdHVyaW5nIGluZHVzdHJ5LiBZYW11bmEgTmFnYXIgaXMgaW4gSGFyeWFuYSwgIEd1d2FoYXRpIGlzIGluIEFzc2FtIGFuZCBCYWxsYXJwdXIgaXMgaW4gTWFoYXJhc2h0cmEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1, 2 and 4 ",
        "option3" : " I, 3 and 4 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 7,
      "question" : "Match List-I with List-II and select the correct answer:  List-I List-II (Hazardous industries)  (Located at) A. Glass Industry         1.     Moradabad B. Brassware Industry 2. Marakpur C. Slate Industry 3. Ferozabad D. Handmade Carpet 4. Mirzapur Industry Codes: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Nw==",
      "description" : "SGF6YXJkb3VzIGluZHVzdHJpZXMgTG9jYXRpb24gIEEuIEdsYXNzIEluZHVzdHJ5IC0gRmlyb3phYmFkICBCLiBCcmFzc3dhcmUgSW5kdXN0cnkgLSBNb3JhZGFiYWQgIEMuIFNsYXRlIEluZHVzdHJ5IC0gTWFyYWtwdXIgIEQuIEhhbmRtYWRlIENhcnBldCAtIE1pcnphcHVyICBJbmR1c3RyeSAgQWxsIHRoZXNlIGluZHVzdHJpZXMgdXNlIGNoaWxkIGxhYm91ciBmaWxsaW5nIG9mIGEgcHVibGljIGludGVyZXN0ICBwZXRpdGlvbiBpbiB0aGUgU3VwcmVtZSBDb3VydCBpcyBwZW5kaW5nLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-3; B-1; C-2; D-4 ",
        "option2" : " A-1; B-3; C-4; D-2 ",
        "option3" : " A-3; B-1; C-4; D-2 ",
        "option4" : " A-1; B-3; C-2; D-4 "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements:  The price of any currency in international market is decided by the: 1. World Bank 2. Demand for goods/services provided by the country concerned 3. Stability of the government of the concerned country 4. Economic potential of the country in question of these statements: Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8OA==",
      "description" : "RXhwb3J0IGFuZCBpbXBvcnQgbGV2ZWxzIG9mIGEgY291bnRyeSBhbmQgcG9saXRpY2FsICBzdGFiaWxpdHkgYXJlIHZlcnkgY3J1Y2lhbCAgZm9yIHRoZSBtYXJrZXQgcHJpY2Ugb2YgdGhlIG5hdGlvbnMgIGN1cnJlbmN5LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 are correct ",
        "option2" : " 2 and 3 are correct ",
        "option3" : " 3 and 4 are correct ",
        "option4" : " 1 and 4 are correct "
      }
    },
    {
      "index" : 9,
      "question" : "Some time back, the Government of India, decided to de-license 'white goods' industry. 'White goods' include:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8OQ==",
      "description" : "V2hpdGUgZ29vZHMgYXJlIGxhcmdlIGVsZWN0cmljYWwgZ29vZHMgdXNlZCAgZG9tZXN0aWNhbGx5IHN1Y2ggYXMgYWlyIGNvbmRpdGlvbmVycywgcmVmcmlnZXJhdG9ycywgY29va2luZyAgcmFuZ2UgZXRjLiwgd2hpY2ggaGFkIGEgd2hpdGUgZW5hbWVsIGZpbmlzaC4gRGVzcGl0ZSB0aGVpciAgYXZhaWxhYmlsaXR5IGluIHZhcmllZCBjb2xvdXJzIG5vdywgdGhleSBhcmUgc3RpbGwgY2FsbGVkIHdoaXRlICBnb29kcy4gVGhlIHRlcm0gaXMgdXNlZCB3aGVyZSBCcml0aXNoIEVuZ2xpc2ggaXMgc3Bva2VuLiBJbiAgdGhlIHllYXIgMTk5MyB0aGUgZ292dC4gb2YgSW5kaWEgaGFkIGRlY2lkZWQgdG8gZGUtbGljZW5jZSAgdGhlc2UgZ29vZHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " stainless steel and aluminium utensils ",
        "option2" : " milk and milk products ",
        "option3" : " items purchased for conspicuous consumption ",
        "option4" : " soaps, detergents and other mass consumption goods "
      }
    },
    {
      "index" : 10,
      "question" : "The rough outline map given shows centres of cement industry labelled 1, 2, 3 and 4. Match these centres with the following sets of names :  Names: A. Katni B. Tirunelveli C. Sikka D. Churk Select the correct answer using the codes given below: Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTA=",
      "description" : "SW4gIHRoZSAgcm91Z2ggIG91dGxpbmUgIG1hcCAgb2YgIEluZGlhICBzaG93ICBjZW50cmVzICBvZiAgY2VtZW50IGluZHVzdHJ5IDogICcxJyBTaWtrYSAgaW4gR3VqYXJhdC4gICcyJyBLYXRuaSAgaW4gTWFkaHlhIFByYWRlc2ggICczJyBDaHVyayAgaW4gVXR0YXIgUHJhZGVzaCAgJzQnIFRpcnVuZWx2ZWxpICBpbiBUYW1pbCBOYWR1LiAgQWxsIHRoZSBwbGFjZXMgaGF2ZSBjZW1lbnQgaW5kdXN0cmllcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-3; B- 4; C- 2; D- 1 ",
        "option2" : " A-2; B- 4; C- 1; D- 3 ",
        "option3" : " A-1; B- 2; C- 4; D- 3 ",
        "option4" : " A-2; B- 3; C- 1; D- 4 "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements:  Small-scale industries are, in most cases, not as efficient and competitive as the large-scale ones. Yet the Government provides preferential treatment and reservations in a range of products to the small firms because small-scale industries: 1. provide higher employment on a per unit capital deployment basis 2. promote a regional dispersion of industries and economical activities 3. have performed better in export of manufactured products than the large scale ones 4. provide jobs to low-skill workers, who otherwise may not find employment avenues elsewhere Which of the above statements are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTE=",
      "description" : "U1NJIGNvbnRyaWJ1dGlvbiB0byBJbmRpYW4gZXhwb3J0cyBpcyAzNSUgYW5kIGluIHRoZSAgdG90YWwgbWFudWZhY3R1cmluZyB0dXJub3ZlciBjb250cmlidXRlIGFwcHJveGltYXRlbHkgNDAlLiAgU21hbGwgc2NhbGUsIGluZHVzdHJpZXMgaGF2ZSBhIGxvdyBjYXBpdGFsIG91dHB1dCByYXRpbyBhbmQgIGdpdmUgZW1wbG95bWVudCB0byBsYXJnZXIgbnVtYmVyIG9mIHdvcmtlcnMuIEFzIHRoZXkgdXNlICByYXcgbWF0ZXJpYWwgdGhhdCBjYW4gYmUgZGlzcGVyc2VkIG92ZXIgYSB3aWRlciBhcmVhLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 4 ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 12,
      "question" : "From the balance sheet of a company, it is possible to:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTI=",
      "description" : "SW4gZmluYW5jaWFsIGFjY291bnRpbmcsIGEgYmFsYW5jZSBzaGVldCBvciBzdGF0ZW1lbnQgIG9mIGZpbmFuY2lhbCBwb3NpdGlvbiBpcyBhIHN1bW1hcnkgb2YgdGhlIGZpbmFuY2lhbCBzdGF0dXMgb2YgIGFuIG9yZ2FuaXNhdGlvbiB3aGljaCBjYW4gYmUgYSBzb2xlIHByb3ByaWV0b3JzaGlwLCBhICBidXNpbmVzcyBwYXJ0bmVyc2hpcCBvciBhIGNvbXBhbnkuIEFzc2V0cywgbGlhYmlsaXRpZXMgYW5kICBvd25lcnNoaXAgb2YgZXF1aXR5IGFyZSBsaXN0ZWQgYXMgb24gYSBzcGVjaWZpYyBkYXRlLCB3aGljaCBpcyAgbm9ybWFsbHkgdGhlIGVuZCBvZiB0aGUgZmluYW5jaWFsIHllYXIuIEEgYmFsYW5jZSBzaGVldCBpcyB0aGUgICdzbmFwc2hvdCBvZiBhIGNvbXBhbnkncyBmaW5hbmNpYWwgY29uZGl0aW9uJy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " judge the extent of profitability of this company ",
        "option2" : " assess the profitability and size of the company ",
        "option3" : " determine the size and composition of the assets and  liabilities of the company ",
        "option4" : " determine the market share, debts and assets of the "
      }
    },
    {
      "index" : 13,
      "question" : "Match List-I with List-II and select the correct answer using the codes given the lists:  List I List-II (Industries)  (Industrial Centres) A. Pearl fishing 1. Pune B. Automobiles 2. Tuticorin C. Ship building 3. Pinjore D. Engineering goods 4. Marmagao Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTM=",
      "description" : "SW5kdXN0cmllcyBJbmR1c3RyaWFsIGNlbnRyZXMgIEEuIFBlYXJsIGZpc2hpbmcgVHV0aWNvcmluICBCLiBBdXRvbW9iaWxlIGluZHVzdHJ5IFB1bmUgIEMuIFNoaXAgYnVpbGRpbmcgTWFybWFnYW8gIEQuIEVuZ2luZWVyaW5nIGdvb2RzIFBpbmpvcmUg",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-2; B-1; C-4; D-3 ",
        "option2" : " A-2; B-1; C-3; D-4 ",
        "option3" : " A-1; B-2; C-4; D-3 ",
        "option4" : " A-1; B-2; C-3; D-4 "
      }
    },
    {
      "index" : 14,
      "question" : "The product life cycle from inception to demise is shown in the graph. Match List I with List II and select the correct answer using the codes given below the lists:  List-I (Stage) List-II A. Product Development       1 2 3 4 5 Profit Time Loss/Investment Profit/Sales Sales B. Maturity C. Growth D. Introduction Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTQ=",
      "description" : "QS4gUHJvZHVjdCBEZXZlbG9wbWVudCAtIDEgIEIuIE1hdHVyaXR5ICAtIDQgIEMuIEdyb3d0aCAgICAgICAgIC0gMyAgRC4gSW50cm9kdWN0aW9uICAgIC0gMiAgVGhlIHByb2R1Y3QgbGlmZSBjeWNsZSB0aGVvcnkgd2FzIGRldmVsb3BlZCBieSBSYXltb25kICBWZXJub24gdG8gZXhwbGFpbiB0aGUgb2JzZXJ2ZWQgcGF0dGVybiBvZiBpbnRlcm5hdGlvbmFsIHRyYWRlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-1; B-4; C-2; D-1 ",
        "option2" : " A-1; B-4; C-3; D-2 ",
        "option3" : " A-4; B-1; C-2; D-3 ",
        "option4" : " A-4; B-1; C-3; D-2 "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following statements:  Industrial development in India, to an extent, is constrained by: 1. lack of adequate entrepreneurship and leadership in business 2. lack of savings to invest 3. lack of technology, skills and infrastructure 4. limited purchasing power among the larger masses Which of the above statements are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTU=",
      "description" : "SW5kdXN0cmlhbCBkZXZlbG9wbWVudCBpbiBJbmRpYSBpcyBjb25zdHJhaW5lZCBieSBsdWNrIG9mICBzYXZpbmdzIHRvIGludmVzdCwgbGFjayBvZiB0ZWNobm9sb2d5LCBza2lsbHMgYW5kIGluZnJhc3RydWN0dXJlICBhbmQgbGltaXRlZCBwdXJjaGFzaW5nIGNhcGFjaXR5IGFtb25nIHRoZSBsYXJnZXIgbWFzc2VzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1, 3 and 4 ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1, 2 an 4 "
      }
    },
    {
      "index" : 16,
      "question" : "Tourism industry in India is quite small compared to many other countries in terms of India's potential size. Which one of the following statements is correct in this regard?   ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTY=",
      "description" : "SW5kaWEgZHVlIHRvIGl0cyBoYW5kaWNyYWZ0cywgY3VsdHVyZSBhbmQgbW9udW1lbnRzIGlzICBhIHByZWZlcnJlZCBkZXN0aW5hdGlvbi4gSG93ZXZlciwgdGhlcmUgaXMgYSBsYWNrIG9mIHRvdXJpc3QgIGluZnJhc3RydWN0dXJlLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgSW5kaWFuIEluZHVzdHJpZXMgJiBUcmFkZSBEIDM5IA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Distances in India are too far apart and luxury hotels  are too expensive for western tourists. ",
        "option2" : " For most of months India is too hot for western tourists  to feel comfortable. ",
        "option3" : " Most of the picturesque resorts in India such as in the  North East and Kashmir are, for all practical purposes,  out of bounds. ",
        "option4" : " In India, the infrastructure required for attracting "
      }
    },
    {
      "index" : 17,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I (Industrial Unit) List-II ( Centre) A. Atlas Cycle Company Ltd. 1. Bangalore B. Bharat Earth Movers Ltd. 2. Bhubaneswar C. Indian Farmers Fertilizers 3. Kalol Co-operative Ltd. D. National Aluminium 4. Sonepat Company Ltd. Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTc=",
      "description" : "QXRsYXMgY3ljbGUgY29tcGFueSBpcyBzaXR1YXRlZCBhdCBTb25lcGF0IGluIEhhcnlhbmEuICBCaGFyYXQgRWFydGggTW92ZXJzIExpbWl0ZWQgaXMgaW4gQmFuZ2xvcmUsIEthcm5hdGFrYS4gIEluZGlhbiBGYXJtZXJzIEZlcnRpbGl6ZXJzIENvLW9wZXJhdGl2ZSBMdGQgaXMgcHJlc2VudCBpbiBLYWxvbCAgaW4gR3VqYXJhdCBhbmQgTmF0aW9uYWwgQWx1bWluaXVtIENvbXBhbnkgTGltaXRlZCBpcyAgbG9jYXRlZCBhdCBCaHViYW5lc3dhci4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A - 1; B - 4; C - 2; D - 3 ",
        "option2" : " A - 1; B - 4; C - 3; D - 2 ",
        "option3" : " A - 4; B - 1; C - 2; D - 3 ",
        "option4" : " A - 4; B - 1; C - 3; D - 2 "
      }
    },
    {
      "index" : 18,
      "question" : "Assertion (A) : Information technology is fast becoming a very important field of activity in India. Reason (R) : Software is one of the major exports of the country and India has a very strong base in hardware.  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTg=",
      "description" : "SW4gSW5kaWEgaW5mb3JtYXRpb24gdGVjaG5vbG9neSBpcyBmYXN0IGJlY29taW5nIGEgIHZlcnkgaW1wb3J0YW50IHNlY3RvciBvZiBhY3Rpdml0eSBpbiBJbmRpYS4gU29mdHdhcmUgaXMgbm90ICBvbmUgb2YgdGhlIG1ham9yIGV4cG9ydHMgb2YgdGhlIGNvdW50cnkgYW5kIEluZGlhIGhhcyBhICBub3JtYWwgYmFzZSBpbiBoYXJkd2FyZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following factors regarding an industry  1. Capital investment 2. Business turnover 3. Labour force 4. Power consumption Which of these determine the nature and size of the industry? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MTk=",
      "description" : "QW1vbmcgdmFyaW91cyBmYWN0b3JzIGVudHJlcHJlbmV1cmlhbCBza2lsbHMsICBhdmFpbGFiaWxpdHkgb2YgZmluYW5jZSB0dXJub3ZlciBhbmQgcG93ZXIgY29uc3VtcHRpb24gZXRjLiAgZGVjaWRlcyB0aGUgbmF0dXJlIGFuZCBzaXplIG9mIGFuIGluZHVzdHJ5LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 ",
        "option2" : " 1, 2 and 4 ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 2 an 3 "
      }
    },
    {
      "index" : 20,
      "question" : "Assertion (A) : India's software exports increased at an average growth rate of 50% since 1995-96. Reason (R) : Indian software companies were cost-effective and maintained international quality.  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjA=",
      "description" : "VGhlIG9ubHkgbmVnYXRpdmUgZmFjdG9yIGlzIHRoZSB0aW1lIGRpZmZlcmVuY2Ugd2hpY2ggIGNhdXNlcyBsYXJnZSBlbXBsb3llZSB0dXJub3ZlciBhcyBtb3N0IElUIHdvcmsgaXMgIGNvbmR1Y3RlZCBkdXJpbmcgbmlnaHQgc2hpZnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following states:  1. Gujarat 2. Karnataka 3. Maharashtra 4. Tamil Nadu The descending order of these states with reference to their level of Per Capita Net State Domestic Product is: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjE=",
      "description" : "VGhlIGRlc2NlbmRpbmcgb3JkZXIgb2YgdGhlIHN0YXRlcyB3aXRoIHJlZmVyZW5jZSB0byAgdGhlaXIgbGV2ZWwgb2YgcGVyIGNhcGl0YSBOZXQgU3RhdGUgRG9tZXN0aWMgUHJvZHVjdCAtICBNYWhhcmFzaHRyYSDCriBHdWphcmF0IMKuIEthcm5hdGFrYSDCriBUYW1pbCBOYWR1IA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 3, 4, 2 ",
        "option2" : " 3, 1, 2, 4 ",
        "option3" : " 1, 3, 2, 4 ",
        "option4" : " 3, 1, 4, 2 "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the Public Sector Undertakings in India, consider the following statements:  1. Minerals and Metals Trading Corporation of India Limited is the largest non-oil importer of the country 2. Project and Equipment Corporation of India Limited is under the Ministry of Industry 3. One of the objectives of Export Credit Guarantee Corporation of India Limited is to enforce quality control and compulsory pre-shipment inspection of various exportable commodities Which of these statements is/are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjI=",
      "description" : "TWluZXJhbHMgYW5kIE1ldGFscyBUcmFkaW5nIENvcnBvcmF0aW9uIExpbWl0ZWQgIChNTVRDKSBpcyBvbmUgb2YgdGhlIHR3byBiaWdnZXN0IGZvcmVpZ24gZXhjaGFuZ2UgZWFybmVyICBmb3IgSW5kaWEuICBJdCBpcyB0aGUgbGFyZ2VzdCBpbnRlcm5hdGlvbmFsIHRyYWRpbmcgY29tcGFueSBvZiAgSW5kaWEgYW5kIHRoZSBmaXJzdCBQdWJsaWMgU2VjdG9yIEVudGVycHJpc2UgdG8gYmUgYWNjb3JkZWQgIHRoZSBzdGF0dXMgb2YgRklWRSBTVEFSIEVYUE9SVCBIT1VTRSBieSBHb3Z0LiBvZiBJbmRpYSAgZm9yIGxvbmcgc3RhbmRpbmcgY29udHJpYnV0aW9uIHRvIGV4cG9ydHMuIE1NVEMgaXMgdGhlICBsYXJnZXN0IG5vbi1vaWwgaW1wb3J0ZXIgaW4gSW5kaWEuIFByb2plY3QgYW5kIEVxdWlwbWVudCAgQ29ycG9yYXRpb24gb2YgSW5kaWEgTGltaXRlZCBpcyB1bmRlciB0aGUgTWluaXN0cnkgb2YgIENvbW1lcmNlICYgSW5kdXN0cnkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 ",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 23,
      "question" : "HINDALCO, an aluminium factory located at Renukut owes its site basically to :  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjM=",
      "description" : "SElOREFMQ08sIGFuIGFsdW1pbml1bSBmYWN0b3J5IGxvY2F0ZWQgYXQgUmVudWt1dCAgZHVlIHRvIGFidW5kYW50IHN1cHBseSBvZiBwb3dlciBmcm9tIE5hdGlvbmFsIFRoZXJtYWwgIFBvd2VyIFN0YXRpb24sIFJpaGFuZCBhbmQgYSBjYXBhdGl2ZSBwb3dlciBwbGFudCBhdCBSZW51ICBTYWdhci4gSXQgaGFzIGEgY29nZW5lcmF0aW9uIHVuaXQgYXQgdGhlIHBsYW50IGl0c2VsZi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " proximity of raw materials ",
        "option2" : " abundant supply of power ",
        "option3" : " efficient transport network ",
        "option4" : " proximity to the market "
      }
    },
    {
      "index" : 24,
      "question" : "Which one of the following committees recommended the abolition of reservation of items for the small scale sector in industry?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjQ=",
      "description" : "QWJpZCBIdXNzYWluIENvbW1pdHRlZSAoMTk5NykgcmVjb21tZW5kZWQgdG90YWwgZGUtICByZXNlcnZhdGlvbiBhbmQgZGVzaXJlZCByZXBsYWNpbmcgcG9saWN5IG9mIHJlc2VydmF0aW9uIHdpdGggIGEgcG9saWN5IG9mIHByb21vdGlvbiBhbmQgc3RyZW5ndGhlbmluZyBvZiBzbWFsbCBzY2FsZSB1bml0cy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Abid Hussian Committee ",
        "option2" : " Narasimham Committee ",
        "option3" : " Nayak Committee ",
        "option4" : " Rakesh Mohan Committee "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to India, which one of the following statements is NOT correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjU=",
      "description" : "T05HQyBpcyBJbmRpYSdzIGxhcmdlc3QgcGV0cm9jaGVtaWNhbCBjb21wYW55LiBJUENMIGlzICB0aGUgc2Vjb25kIGxhcmdlc3QgcGV0cm9jaGVtaWNhbCBjb21wYW55LiBJdCBwcm9kdWNlcyBhcm91bmQgIDY5JSBvZiBJbmRpYSdzIGNydWRlIG9pbCBhbmQgYXJvdW5kIDYyJSBvZiBpdHMgbmF0dXJhbCBnYXMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " IPCL is India's largest petrochemical company ",
        "option2" : " RIL is the largest private sector company in India ",
        "option3" : " MTNL is listed on NYSE ",
        "option4" : " BSNL is the first telecom service organization in India "
      }
    },
    {
      "index" : 26,
      "question" : "Which one of the following statements is NOT correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MjY=",
      "description" : "SW5kaWEgaXMgdGhlIHNlY29uZCBsYXJnZXN0IHByb2R1Y2VyIG9mIG5pdHJvZ2Vub3VzICBmZXJ0aWxpemVycyBpbiB0aGUgd29ybGQuIEluZGlhIGlzIHRoZSB0aGlyZCBsYXJnZXN0IHN0ZWVsICBwcm9kdWNpbmcgY291bnRyeSBpbiB0aGUgdGhlIHdvcmxkLiBJbmRpYSBpcyB0aGUgc2Vjb25kICBsYXJnZXN0IHByb2R1Y2VyIG9mIHNpbGsgaW4gdGhlIHdvcmxkIGFmdGVyIGNoaW5hLiBJbmRpYSBpcyB0aGUgIHNlY29uZCBsYXJnZXN0IHByb2R1Y2VyIG9mIGNvYWwgaW4gdGhlIHdvcmxkIGFmdGVyIGNoaW5hLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " India is the second largest producer of nitrogenous  fertilizers in the world. ",
        "option2" : " India is the ninth largest steel producing country in  the world. ",
        "option3" : " India is the second largest producer of silk in the world. ",
        "option4" : " India ranks third in the world in coal production. "
      }
    },
    {
      "index" : 27,
      "question" : "During the year 2000-01 which one of the following Industries  recorded the highest growth rate in India?   ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Mjc=",
      "description" : "VGhlIHN0ZWVsIGluZHVzdHJ5IHJlY29yZGVkIGhpZ2hlc3QgZ3Jvd3RoIHJhdGUgb2YgIDclLCAgZWxlY3RyaWNpdHksIGdlbmVyYXRpb24gZ3Jvd3RoIHJhdGUgd2FzIDQlLCBjb2FsIGluZHVzdHJ5ICBncm93dGggd2FzIDMuMyUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Cement ",
        "option2" : " Coal ",
        "option3" : " Electricity ",
        "option4" : " Steel "
      }
    },
    {
      "index" : 28,
      "question" : "Which one of the following statements is correct?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Mjg=",
      "description" : "QWxsaWFuY2UgQWlyIHdhcyBmb3JtZWQgaW4gMTk5NiBhbmQgd2FzIGNvbXBsZWxldHkgIG93bmVkIGJ5IEluZGlhbiBBaXJsaW5lLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Alliance Air is a wholly-owned subsidiary of Indian Airlines ",
        "option2" : " The Airports Authority of India manages seven of the  country's international airports ",
        "option3" : " The Airports Authority of India is the regulatory  organisation for enforcing civil air regulations in India ",
        "option4" : " It is the function of Directorate General of Civil Aviation "
      }
    },
    {
      "index" : 29,
      "question" : "Assertion (A) : India does not export natural rubber. Reason (R) :  About 97% of India's demand for natural rubber is met from domestic production.  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8Mjk=",
      "description" : "SW5kaWEgaXMgdGhlIGZvdXJ0aCBsYXJnZXN0IGNvdW50cnksIHJlZ2FyZGluZyBjb25zdW1wdGlvbiAgb2YgcnViYmVyIHdpdGggdG90YWwgY29uc3VtcHRpb24gNjMxMDAwIHRvbnMgaW4gMjAwMSwgYWZ0ZXIgIFVTQSBhbmQgSmFwYW4uIER1ZSB0byBoaWdoIGNvbnN1bXB0aW9uIGluIGRvbWVzdGljIG1hcmtldCAgSW5kaWEgZG9lcyBub3QgZXhwb3J0IG5hdHVyYWwgcnViYmVyLiBIb3dldmVyIHNtYWxsICBxdWFudGl0aWVzIG9mIG5hdHVyYWwgcnViYmVyIGlzIGV4cG9ydGVkIHRvIGdldCBoaWdoZXIgcHJpY2VzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 30,
      "question" : "Assertion (A): Balance of Payments represents a better Picture of a country economic transactions with the rest of the world than the Balance of Trade Reason (R): Balance of Payments takes into account the exchange of both visible and invisible items whereas balance of Trade does not.  Codes: ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzA=",
      "description" : "QmFsYW5jZSBvZiBwYXltZW50cyBvZiBhIG5hdGlvbiBjb25zaXN0cyBvZiB2aXNpYmxlICBhY2NvdW50LCBpbnZpc2libGUgYWNjb3VudCBhbmQgY2FwaXRhbCBhY2NvdW50LiBXaGVyZWFzICBiYWxhbmNlIG9mIHRyYWRlID0gRXhwb3J0IG9mIGdvb2RzIC0gaW1wb3J0IG9mIGdvb2RzLiBJZiBhICBjb3VudHJ5IGltcG9ydHMgYXJlIG1vcmUgdGhhbiBleHBvcnRzIHRoZSBkZWZpY2l0IGNhbiBiZSAgbWFkZSB1cCBieSBpbnZpc2libGVzIGxpa2UgcmVtbWl0YW5jZSBieSBOUkkgYW5kIEZESSAgaW52ZXN0bWVudC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both 'A' and 'R', are individually true and 'R' is the  correct explanation of 'A'. ",
        "option2" : " Both 'A' and 'R' are individually true but 'R' is not the,  correct explanation of 'A' . ",
        "option3" : " 'A' is true but 'R' is false. ",
        "option4" : " 'A' is false but 'R' is true. "
      }
    },
    {
      "index" : 31,
      "question" : "Which one of the following statements is not correct?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzE=",
      "description" : "Um91cmtlbGEgU3RlZWwgUGxhbnQgKFJTUCkgaXMgdGhlIGZpcnN0IGludGVyZ3JhdGVkIHN0ZWVsICBwbGFudCBpbiB0aGUgcHVibGljIHNlY3RvciBpbiBJbmRpYS4gSXQgd2FzIHNldCB1cCB3aXRoIEdlcm1hbiAgY29sbGFib3JhdGlvbiB3aXRoIGFuIGluc3RhbGxlZCBjYXBhY2l0eSBvZiAxIG1pbGxpb24gdG9ubmVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Rourkela Steel Plant, the first integrated steel plant in  the Public Sector of India was set up with the Soviet  Union collaboration. ",
        "option2" : " Salem Steel Plant is a premier producer of stainless  steel in India. ",
        "option3" : " Maharashtra Elektrosmelt Ltd. is a subsidiary of the  Steel Authority of India Ltd. ",
        "option4" : " Visakhapatnam Steel Plant is a unit of the Rashtriya "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements:  1. MMTC Limited is India's largest international trading organization. 2. Neelachal Ispat Nigam Limited has been set up by MMTC jointly with the Government of Orissa. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzI=",
      "description" : "TmVlbGFjaGFsIElzcGF0IE5pZ2FtIExpbWl0ZWQgKE5JTkwpLCBhIGNvbXBhbnkgIHByb21vdGVkIGJ5IE1NVEMgTHRkLCBJbmR1c3RyaWFsIFByb21vdGlvbiBhbmQgIEludmVzdG1lbnQgQ29ycG9yYXRpb24gb2YgT3Jpc3NhIExpbWl0ZWQgKElQSUNPTCkgYW5kIG90aGVyICBnb3Zlcm5tZW50IGFnZW5jaWVzIGhhcyBzZXQgdXAgYW4gMS4xIG1pbGxpb24gdG9uIEludGVncmF0ZWQgIElyb24gYW5kIHN0ZWVsIHBsYW50IGF0IEthbGluZ2FuYWdhciwgRHVidXJpLCBPcmlzc2EuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 33,
      "question" : "Which one of the following sets of commodities are exported to India by arid and semi-arid countries in the Middle East?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzM=",
      "description" : "RnJ1aXRzIGFuZCBwYWxtIG9pbCBhcmUgZXhwb3J0ZWQgdG8gSW5kaWEgYnkgYXJpZCBhbmQgIHNlbWkgYXJpZCBjb3VudHJpZXMgb2YgbWlkZGxlIGVhc3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Raw wool and carpets ",
        "option2" : " Fruits and palm oil ",
        "option3" : " Precious stones and pearls ",
        "option4" : " Perfume and Coffee. "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following is not a feature of Limited Liability Partnership firm?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzQ=",
      "description" : "QSBsaW1pdGVkIGxpYWJpbGl0eSBwYXJ0bmVyc2hpcCAoTExQKSBpcyBhIHBhcnRuZXJzaGlwIGluICB3aGljaCBzb21lIG9yIGFsbCBwYXJ0bmVycyAoZGVwZW5kaW5nIG9uIHRoZSBqdXJpc2RpY3Rpb24pICBoYXZlIGxpbWl0ZWQgbGlhYmlsaXR5LiAgTExQIHNoYWxsIGJlIGEgYm9keSBjb3Jwb3JhdGUgYW5kIGEgbGVnYWwgZW50aXR5IHNlcGFyYXRlICBmcm9tIGl0cyBwYXJ0bmVycy4gSXQgd2lsbCBoYXZlIHBlcnBldHVhbCBzdWNjZXNzaW9uLiBJbmRpYW4gIFBhcnRuZXJzaGlwIEFjdCwgMTkzMiBzaGFsbCBub3QgYmUgYXBwbGljYWJsZSB0byBMTFBzIGFuZCAgdGhlcmUgc2hhbGwgbm90IGJlIGFueSB1cHBlciBsaW1pdCBvbiBudW1iZXIgb2YgcGFydG5lcnMgaW4gIGFuIExMUCB1bmxpa2UgYW4gb3JkaW5hcnkgcGFydG5lcnNoaXAgZmlybSB3aGVyZSB0aGUgIG1heGltdW0gbnVtYmVyIG9mIHBhcnRuZXJzIGNhbiBub3QgZXhjZWVkIDIwLCBMTFAgQWN0ICBtYWtlcyBhIG1hbmRhdG9yeSBzdGF0ZW1lbnQgd2hlcmUgb25lIG9mIHRoZSBwYXJ0bmVyIHRvICB0aGUgTExQIHNob3VsZCBiZSBhbiBJbmRpYW4uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Partners should be less than 20 ",
        "option2" : " Partnership and management need not be separate ",
        "option3" : " Internal governance may be decided by mutual  agreement among partners ",
        "option4" : " It is corporate body with perpetual succession "
      }
    },
    {
      "index" : 35,
      "question" : "In India, which of the following, is regulated by the Forward Markets Commission?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGV8MzU=",
      "description" : "Rm9yd2FyZCBNYXJrZXRzIENvbW1pc3Npb24gKEZNQykgaXMgdGhlIGNoaWVmICByZWd1bGF0b3Igb2YgZm9yd2FyZHMgYW5kIGZ1dHVyZXMgbWFya2V0cyBpbiBJbmRpYS4gQXMgb2YgIE1hcmNoIDIwMDksIGl0IHJlZ3VsYXRlcyBScyA1MiBUcmlsbGlvbiB3b3J0aCBvZiBjb21tb2RpdHkgIHRyYWRlIGluIEluZGlhLiBJdCBpcyBoZWFkcXVhcnRlcmVkIGluIE11bWJhaSBhbmQgaXMgb3ZlcnNlZW4gIGJ5IHRoZSBNaW5pc3RyeSBvZiBDb25zdW1lciBBZmZhaXJzLCBHb3Zlcm5tZW50IG9mIEluZGlhLiAgVGhlIGNvbW1pc3Npb24gYWxsb3dzIGNvbW1vZGl0eSB0cmFkaW5nIGluIDIyIGV4Y2hhbmdlcyAgSW5kaWEgb2Ygd2hpY2ggNiBhcmUgbmF0aW9uYWwuIEl0IHdhcyBlc3RhYmxpc2hlZCBpbiAxOTUzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmR1c3RyaWVzICYgVHJhZGU=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Currency Futures Trading ",
        "option2" : " Commodities Futures Trading ",
        "option3" : " Equity Futures Trading ",
        "option4" : " Both Commodities Futures and Financial Futures Trading "
      }
    },
    {
      "index" : 36,
      "question" : "What is/are the recent policy initiative(s) of Government of India to promote the growth of manufacturing sector?  1. Setting up of National Investment and Manufacturing Zones 2. Providing the benefit of 'single window clearance' 3. Establishing the Technology Acquisition and Development Fund Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDM2",
      "description" : "QWxsIHRoZSB0aHJlZSBpbml0aWF0aXZlIChzKSBtZW50aW9uZWQgaW4gdGhlIHF1ZXN0aW9uICBhcmUgdGhlIHBhcnQgb2YgTmF0aW9uYWwgTWFudWZhY3R1cmluZyBQb2xpY3kuIFRoZSBvYmplY3RpdmUgIG9mIHRoZSBOYXRpb25hbCBNYW51ZmFjdHVyaW5nIHBvbGljeSBpcyB0byBib29zdCB0aGUgIGNvdW50cnkncyBzaGFyZSBvZiBpbmR1c3RyaWFsIHByb2R1Y3Rpb24sIGVtcGxveW1lbnQsICBkZXZlbG9wbWVudCBvZiB3b3JsZC1jbGFzcyBpbmZyYXN0cnVjdHVyZSBhbmQgaW52ZXN0bWVudHMgIGluIEluZGlhJ3MgbWFudWZhY3R1cmluZyBzcGFjZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 37,
      "question" : "In  India, in the overall Index of Industrial Production, the Indices of Eight Core Industries have a combined weight of 37.90%. Which of the following are among those Eight Core Industries?  1. Cement 2. Fertilizers 3. Natural gas 4. Refinery products 5. Textiles Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDM3",
      "description" : "VGhlIEVpZ2h0IGNvcmUgaW5kdXN0cmllcyBoYXZlIGEgY29tYmluZWQgd2VpZ2h0IG9mICAzNy45MCBwZXIgY2VudCBpbiB0aGUgaW5kZXggb2YgSW5kdXN0cmlhbCAgUHJvZHVjdGlvbiAoSUlQKS4gIFRoZXkgYXJlIGFzIGZvbGxvd3M6ICBDb2FsLCBjcnVkZSBvaWwsIE5hdHVyYWwgR2FzLCBQZXRyb2xldW0gUmVmaW5lcnkgUHJvZHVjdHMsICBmZXJ0aWxpemVycywgc3RlZWwgKEFsbG95ICsgTm9uIC0gQWxsb3kpLCBDZW1lbnQgYW5kIEVsZWN0cmljaXR5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 5 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1, 2, 3 and 4 only ",
        "option4" : " 1, 2, 3, 4 an 5 "
      }
    },
    {
      "index" : 38,
      "question" : "Despite having large reserves of coal, why does India import millions of tonnes of coal?  1. It is the policy of India to save its own coal reserves for future, and import it from other countries for the present use. 2. Most of the power plants in India are coal-based and they are not able to get sufficient supplies of coal from within the country. 3. Steel companies need large quantity of coking coal which has to be imported. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDM4",
      "description" : "Mm5kIGFuZCAzcmQgYXJlIGNvcnJlY3Qgc3RhdGVtZW50cy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 39,
      "question" : "The balance of payments of a country is a systematic record of  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDM5",
      "description" : "VGhlIEJhbGFuY2Ugb2YgUGF5bWVudHMoQm9QcykgYWNjb3VudHMgYXJlIGFuICBhY2NvdW50aW5nIHJlY29yZCBvZiBhbGwgbW9uZXRhcnkgdHJhbnNhY3Rpb25zIGJldHdlZW4gIGNvdW50cnkgYW5kIHRoZSByZXN0IG9mIHRoZSB3b3JsZC4gVGhlc2UgdHJhbnNhY3Rpb25zIGluY2x1ZGUgIHBheW1lbnQgZm9yIHRoZSBjb3VudHJ5J3MgZXhwb3J0cyBhbmQgaW1wb3J0cyBvZiBnb29kcywgIHNlcnZpY2VzLCBmaW5hbmNpYWwgY2FwaXRhbHMgYW5kIGZpbmFuY2lhbCB0cmFuc2ZlcnMuIFRoZSBiYWxhbmNlICBvZiBwYXltZW50cyBjYW4gc2hvdyBpZiBhIGNvdW50cnkgaGFzIGEgZGVmaWNpdCBvciBzdXJwbHVzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " all import and export transactions of a country during  a given period of time, normally a year ",
        "option2" : " good exported from a country during a year ",
        "option3" : " economic transaction between the government of one  country to another ",
        "option4" : " capital movements from one country to another. "
      }
    },
    {
      "index" : 40,
      "question" : "Which one among the following industries is the maximum consumer of water in India?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDQw",
      "description" : "VGhlcm1hbCBwb3dlciBwbGFudHMgdXNlIHdhdGVyIHRvIHR1cm4gaW50byBzdGVhbSAgKGhlYXQgZW5lcmd5KSB0byBnZW5lcmF0ZSBlbGVjdHJpY2l0eSAoZWxlY3RyaWNhbCBlbmVyZ3kpLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Engineering ",
        "option2" : " Paper and pulp ",
        "option3" : " Textiles ",
        "option4" : " Thermal power "
      }
    },
    {
      "index" : 41,
      "question" : "Disguised unemployment generally means  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDQx",
      "description" : "RGlzZ3Vpc2VkIHVuZW1wbG95bWVudCBpcyBhIHNpdHVhdGlvbiAgd2hlbiBwZW9wbGUgIGRvIG5vdCBoYXZlIHByb2R1Y3RpdmUgZnVsbC10aW1lIGVtcGxveW1lbnQsIGJ1dCBhcmUgbm90ICBjb3VudGVkIGluIHRoZSBvZmZpY2lhbCB1bmVtcGxveW1lbnQgc3RhdGlzdGljcy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " large number of people remain unemployed ",
        "option2" : " alternative employment is not available ",
        "option3" : " marginal productivity of labour is zero ",
        "option4" : " productivity of workers is low "
      }
    },
    {
      "index" : 42,
      "question" : "With  reference  to  Balance  of Payments, which of the following constitutes/constitute the Current Account?  1. Balance of trade 2. Foreign assets 3. Balance of invisibles 4. Special Drawing Rights Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRlfDQy",
      "description" : "VGhlIGN1cnJlbnQgYWNjb3VudCBjb25zaXN0cyBvZiB0aGUgYmFsYW5jZSBvZiB0cmFkZSAgYW5kIGJhbGFuY2Ugb2YgaW52aXNpYmxlcy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kdXN0cmllcyAmIFRyYWRl",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1, 2 an 4 "
      }
    },
    {
      "index" : 43,
      "question" : "In India, the steel production industry requires the import of  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0Mw==",
      "description" : "VGhlIGNvYWwgZm91bmQgaW4gSW5kaWEgaXMgbWFpbmx5IG9mIG5vbi1jb2tpbmcgcXVhbGl0eSAgYW5kIGhlbmNlIGNva2luZyBjb2FsIGhhcyB0byBiZSBpbXBvcnRlZC4gNzAlIG9mIHRoZSBzdGVlbCAgcHJvZHVjZWQgdG9kYXkgdXNlcyBjb2FsLiBDb2tpbmcgY29hbCBpcyBhIHZpdGFsIGluZ3JlZGllbnQgIGluIHRoZSBzdGVlbCBtYWtpbmcgcHJvY2Vzcy4gICBEIDQwIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " saltpetre ",
        "option2" : " rock phosphate ",
        "option3" : " coking coal ",
        "option4" : " All of the above "
      }
    },
    {
      "index" : 44,
      "question" : "In the 'Index of Eight Core Industries', which one of the following is given the highest weight?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0NA==",
      "description" : "RWxlY3RyaWNpdHkgZ2VuZXJhdGlvbiAod2VpZ2h0OiAxMC4zMiUpIGluY3JlYXNlZCBieSAgMy41JSBpbiBKdWx5LCAyMDE1LiBJdHMgY3VtdWxhdGl2ZSBpbmRleCBkdXJpbmcgQXByaWwgdG8gSnVseSwgIDIwMTUtMTYgaW5jcmVhc2VkIGJ5IDIuMCAlIG92ZXIgdGhlIGNvcnJlc3BvbmRpbmcgcGVyaW9kICBvZiBwcmV2aW91cyB5ZWFyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Coal production ",
        "option2" : " Electricity generation ",
        "option3" : " Fertilizer production ",
        "option4" : " Steel prouction "
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following brings out the 'Consumer Price Index Number for Industrial Workers'?  ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0NQ==",
      "description" : "VGhlIGxhYm91ciBCdXJlYXUgYnJpbmdzIG91dCAiY29uc3VtZXIgcHJpY2UgaW5kZXggIG51bWJlcnMiIGZvciBpbmR1c3RyaWFsIHdvcmtlcnMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The Reserve Bank of India ",
        "option2" : " The Department of Economic Affairs ",
        "option3" : " The Labour Bureau ",
        "option4" : " The Department of Personnel and Training "
      }
    },
    {
      "index" : 46,
      "question" : "Recently, India's first 'National Investment and Manufacturing Zone' was proposed to be set up in (a) Andhra Pradesh (b) Gujarat                    Regulations, 2011?   ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0Ng==",
      "description" : "SW4gb3JkZXIgdG8gYm9vc3QgJ01ha2UgaW4gSW5kaWEnIGNhbXBhaWduLCBmaXJzdCAgbmF0aW9uYWwgaW52ZXN0bWVudCBhbmQgbWFudWZhY3R1cmluZyB6b25lIHRvIGNvbWUgdXAgaW4gIEFuZGhyYSBQcmFkZXNoLiBUaGUgc3RhdGUgYXNzdXJlZCB0aGUgQ2VudHJlIG9mICBhdmFpbGFiaWxpdHkgb2YgMTAgc3Ega20gb2YgbGFuZCBpbiBvbmUgcGxhY2UgaW4gUHJha2FzaGFtICBkaXN0cmljdC4gIFJlZjogRWNvbm9taWMgVGltZXMvRVQgQnVyZWF1IFNlcCAyMSwgMjAxNS4gaHR0cDovLyAgYXJ0aWNsZXMuZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS8yMDE1LTA5LTIxLyAgbiBlIHdzIC8gNiA2IDcgNiAwIDkgNCA4IF8gMSBfIGEgbiBkIGggciBhIC0gcCByIGEgZCBlIHMgaCAtIG4gaSBtIHogLSAgbWFudWZhY3R1cmluZy16b25lIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " Maharashtra ",
        "option4" : " Uttar Praesh  47. With reference to pre-packaged items in India, it is  mandatory to the manufacturer to put which of the  following information on the main label, as per the Food  Safety and Standards (Packaging and Labelling)  1. List of ingredients including additives  2. Nutrition information  3. Recommendations, if any, made by the medical  profession about the possibility of any allergic reactions  4. Vegetarian/non-vegetarian  Select the correct answer using the code given below. "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to 'Quality Council of India (QCI)', consider the following statements:  1. QCI was set up jointly by the Government of India and the Indian Industry. 2. Chairman of QCI is appointed by the Prime Minister on the recommendations of the industry to the Government. Which of the above statements is/are correct? ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0OA==",
      "description" : "Qm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LCBhcyBwZXIgdGhlaXIgb3JnYW5pemF0aW9uJ3MgIGFib3V0IHVzIHBhZ2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 49,
      "question" : "India enacted The Geographical Indications of Goods (Registration and Protection) Act, 1999 in order to comply with the obligations to  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw0OQ==",
      "description" : "R0kgaW5kaWNhdG9ycyBmYWxsIHVuZGVyIFdUTyBkb21haW4gc28gRCBpcyB0aGUgIGFuc3dlci4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " ILO ",
        "option2" : " IMF ",
        "option3" : " UNCTAD ",
        "option4" : " WTO "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following countries :  1. Australia 2. Canada 3. China 4. India 5. Japan 6. USA Which of the above are among the 'free-trade partners' of ASEAN ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw1MA==",
      "description" : "MSwzLDQgYW5kIDUgIE1ydW5hbCdzIExlY3R1cmUgQm9QIzM6IGF0IDI0dGggbWludXRlICDCtyBSQ0VQIGFib3V0IEFTRUFOIHBsdXMgaXRzIGZyZWUgdHJhZGUgcGFydG5lcnMgd2hpY2ggIGluY2x1ZGVzOiBDaGluYSwgSW5kaWEsIEphcGFuLCBLb3JlYSwgQXVzdHJhbGlhIGFuZCAgTmV3WmVhbGFuKGQpICDCtyBDYW5hZGEgKCMyKSBhbmQgVVNBICgjNikgaXMgZGVmaW5pdGVseSBub3QgdGhlcmUsIHNvICBBLCBCIGFuZCBEIGFyZSByZW1vdmUoZCkgVGh1cyBieSBlbGltaW5hdGlvbiwgd2UgYXJlIGxlZnQgIHdpdGggYW5zd2VyIChDKSA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 4 and 5 ",
        "option2" : " 3, 4, 5 and 6 ",
        "option3" : " 1, 3, 4 and 5 ",
        "option4" : " 2, 3, 4 an 6 "
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements  1. The quantity of imported edible oils is more than the domestic production of edible oils in the last five years. 2. The Government does not impose any customs duty on all the imported edible oils a special case. Which of the statements given above is/are correct ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw1MQ==",
      "description" : "Rmlyc3Qgc3RhdGVtZW50IGlzIHJpZ2h0IGFzIHBlciBJQ0FSIHJlcG9ydC4gSWYgd2UgbG9vayAgYXQgdGhlIGJ1ZGdldCBkb2N1bWVudHMgb2YgbGFzdCB0aHJlZSB5ZWFyLCBHb3Zlcm5tZW50ICBkb2VzIGltcG9zZSBjdXN0b20gZHV0eSBvbiBpbXBvcnRlZCBlZGlibGUgb2lscywgc28sICMyICBpcyBhIGh5cGVyYm9sZSB3cm9uZyBzdGF0ZW1lbnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 52,
      "question" : "Consider the following statements:  1. Coal sector was nationalized by the Government of India under Indira Gandhi. 2. Now, coal blocks are allocated on lottery basis. 3. Till recently, India imported coal to meet the shortages of domestic supply, but now india is self-sufficient in coal production. Which one of the following statements given above is/ are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw1Mg==",
      "description" : "IMK3IDE5NzM6IENvYWwgTWluZXMgTmF0aW9uYWxpemF0aW9uIEFjdC0gQ29hbCBJbmRpYSBhbmQgIG90aGVyIENQU0VzIHRvb2sgb3ZlciBwcml2YXRlIGNvYWwgbWluaW5nIGNvbXBhbmllcy4gVGhleSAgd2lsbCBkaWcgY29hbCwgc2VsbCBpdCB0byB0aGVybWFsIHBvd2VyIHBsYW50cyAmIG90aGVyICBpbmR1c3RyaWVzLiAoSW5kaXJhIEdhbmRoaSB3YXMgUE0gYXQgdGhhdCB0aW1lLikgU28sICMxIGlzICByaWdodC4gQW5zd2VyIGNvdWxkIGJlIEEgb3IgRC4gIMK3IDIwMTU6IENvYWwgTWluZXMgU3BlY2lhbCBQcm92aXNpb24gQWN0OiBJdCBvcGVucyB1cCAgY29tbWVyY2lhbCBjb2FsIG1pbmluZyBmb3IgYm90aCBwcml2YXRlIGFuZCBwdWJsaWMgZW50aXRpZXMsICBhbmQgdGh1cyBlbmRzIHRoZSBtb25vcG9seSBvZiBDb2FsIEluZGlhLiBQcmVzZW50bHksIGNvYWwgIGJsb2NrcyBhcmUgYWxsb3R0ZWQgb24gdGhlIGJhc2lzIG9mIGF1Y3Rpb24uICMyIGlzIHdyb25nLiAgVGh1cyBBbnN3ZXIgQTogMSBvbmx5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 53,
      "question" : "With reference to Foreign Direct Investment in India, which one of the following is considered its major characteristics ?  ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw1Mw==",
      "description" : "ICgtKUZESSBpcyBtb3JlIHRoYW4gMTAlIGVxdWl0eSBpbnZlc3RtZW50IGJ5IGEgIGZvcmVpZ24gZW50aXR5IGludG8gYW4gSW5kaWFuIGNvbXBhbnkuICAoLSlUaGF0IG1lYW5zIGRlYnQgLyBib3Jyb3dpbmcgLyBsb2FucyBhcmUgbm90IHRoZSAgd29yZHMgd2UgYXNzb2NpYXRlIHdpdGggRkRJIGFuZCB0aGVyZWZvcmUgb3B0aW9uIGMgYW5kICBkIGFyZSB3cm9uZy4gICgtKVdhbG1hcnQgaGFzIGludmVzdGVkIGJpbGxpb25zIG9mIGRvbGxhcnMgd29ydGggRkRJICBpbnRvIEZsaXBrYXJ0IHdoaWNoIGlzIHN0aWxsIGFuIHVubGlzdGVkIGNvbXBhbnkgKFVubGlzdGVkICBjb21wYW55IG1lYW5zIGl0cyBzaGFyZXMgYXJlIG5vdCBsaXN0ZWQgaW4gc3RvY2sgIGV4Y2hhbmdlIHN1Y2ggYXMgQlNFIE5TRS4pVGhlcmVmb3JlLCBBLCBpcyBhbHNvIHdyb25nLiAgU28sIEFuc3dlciBzaG91bGQgYmUgYi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It is the investment through capital instruments  essentially in a listed company. ",
        "option2" : " It is largely non-debt creating capital flow. ",
        "option3" : " It is the investment which involves debt-servicing. ",
        "option4" : " It is the investment made by foreign institutional "
      }
    },
    {
      "index" : 54,
      "question" : "With reference to the international trade of India at present, which of the following statements is/are correct?  1. India's merchandise exports are less than its merchandise imports. 2. India's imports of iron and steel, chemicals, fertilisers and machinery have decreased in recent years. 3. India's exports of services are more than its imports of services. 4. India suffers from an overall trade/current account deficit. Select the correct answer using the code given below : ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZXw1NA==",
      "description" : "ICgtKUNvbnRpbnVvdXNseSwgd2UgYXJlIHN1ZmZlcmluZyBmcm9tIGN1cnJlbnQgYWNjb3VudCAgZGVmaWNpdHMgc28gZm9yIHN0YXRlbWVudCM0IGlzIGNvcnJlY3QuIE9wdGlvbiBhIGFuZCBjIGFyZSAgZWxpbWluYXRlZCBzaW5jZSB0aGV5IGRvbid0IGNvbnRhaW4gIzQuICAoLSlGdXJ0aGVyIEluZGlhJ3MgTWVyY2hhbmRpc2UvIGdvb2RzIGV4cG9ydCBpcyBsZXNzICB0aGFuIGl0cyBnb29kcyBpbXBvcnRzLiBTbywgIzEgaXMgY29ycmVjdC4gSGVuY2UgdGhlICBhbnN3ZXIgc2hvdWxkIGJlIGQuICAoLSlGb3IgZnVydGhlciBkYXRhc2V0cywgeW91IG1heSByZWZlciB0byBFY29ub21pYyAgU3VydmV5IDIwMTktMjAgVm9sdW1lIDI6IHBhZ2UgMTA0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZHVzdHJpZXMgJiBUcmFkZQ==",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Industries & Trade",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 3 an 4 only "
      }
    }
  ],
  "subject" : "Economic & Social Development",
  "topic" : "Industries & Trade",
  "year" : "0"
}
