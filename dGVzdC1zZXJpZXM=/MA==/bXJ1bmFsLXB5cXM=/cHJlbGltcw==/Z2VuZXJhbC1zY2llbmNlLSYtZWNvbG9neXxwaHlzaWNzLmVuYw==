{
  "testId" : "general-science-&-ecology|physics",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "A parachutist jumps from a height of 5000 metre. The relationship between his falling speed, v and the distance fallen through d is best represented as :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MQ==",
      "description" : "V2hlbiBhIHBhcmFjaHV0aXN0IGp1bXBzIGZyb20gYSBoZWlnaHQsIGl0cyBzcGVlZCAgZmlyc3QgaW5jcmVhc2VzIHdpdGggdGhlIGRpc3RhbmNlIGZhbGxlbiBhbmQgdGhlbiBiZWNvbWVzICBjb25zdGFudC4gU28sIHRoZSBncmFwaCBnaXZlbiBpbiBvcHRpb24gKGQpIGJlc3QgcmVwcmVzZW50cyAgdGhlIGdpdmVuIHNpdHVhdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  V  d ",
        "option2" : "  V  d ",
        "option3" : "  V  d ",
        "option4" : " "
      }
    },
    {
      "index" : 2,
      "question" : "Who among the following anticipated Newton by declaring that all things gravitate to the earth?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mg==",
      "description" : "QnJhaG1hZ3VwdGEgd2FzIGFuIEluZGlhbiBtYXRoZW1hdGljaWFuIGFuZCAgYXN0cm9ub21lciB3aG8gaGFkIHdyaXR0ZW4gbnVtZXJvdXMgaW1wb3J0YW50IGJvb2tzIG9uICBtYXRoZW1hdGljcyBhbmQgYXN0cm9ub215LiBIZSBhbnRpY2lwYXRlZCBOZXd0b24gYnkgIGRlY2xhcmluZyB0aGF0IGFsbCB0aGluZ3MgZ3Jhdml0YXRlIHRvIHRoZSBlYXJ0aC4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Aryabhatta ",
        "option2" : " Varahamihira ",
        "option3" : " Buddhagupta ",
        "option4" : " Brahmagupta "
      }
    },
    {
      "index" : 3,
      "question" : "A liquid is flowing in a streamlined manner through a cylindrical pipe. Along a section containing the axis of the pipe, the flow profile will be :  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mw==",
      "description" : "SWYgYSBmbHVpZCBmbG93cyBzdWNoIHRoYXQgaXRzIHZlbG9jaXR5IGF0IGEgcG9pbnQgaXMgYWx3YXlzICB0aGUgc2FtZSBpbiBtYWduaXR1ZGUgYW5kIGRpcmVjdGlvbiwgdGhlIGZsdWlkIGlzIHNhaWQgdG8gIGhhdmUgYSBzdHJlYW1saW5lIGZsb3cuIFRoZSAgdHlwZSBvZiBmbG93IGluIGEgZmx1aWQgc3lzdGVtIGlzICBjaGFyYWN0ZXJpemVkIGJ5IHRoZSBwcmVzZW5jZSBvZiBsYW1pbmFlLCBvciBwYXJhbGxlbCBzdHJlYW1zICBvZiBmbHVpZC4gIEEgc3RyZWFtbGluZSBpcyBhIHN0cmFpZ2h0IG9yIGN1cnZlZCBwYXRoIHN1Y2ggdGhhdCAgdGFuZ2VudCB0byBpdCBhdCBhIHBvaW50IGdpdmVzIHRoZSBkaXJlY3Rpb24gb2YgZmxvdyBvZiBsaXF1aWQgYXQgIHRoYXQgcG9pbnQuIFRodXMsIGFjY29yZGluZyB0byBxdWVzdGlvbiB0aGUgZmxvdyBwcm9maWxlIGlzICBiZXN0IHJlcHJlc2VudGVkIGJ5IGZpZ3VyZSAoYSkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " ",
        "option2" : "",
        "option3" : " ",
        "option4" : ""
      }
    },
    {
      "index" : 4,
      "question" : "The variation of displacement d with time t in the case of a particle falling freely under gravity from rest is correctly shown in graph:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NA==",
      "description" : "QXMgIGQgPSArIDIxdXQgZ3QgIDIgIHUgPSAwICAgICAgICAgICAgICAgIChnaXZlbikgZCAgdCAgZCA9IMK9IGd0MiAgZCDCtSB0MiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " d   t ",
        "option2" : " d  t ",
        "option3" : " d  t ",
        "option4" : " d "
      }
    },
    {
      "index" : 5,
      "question" : "A simple machine helps a person in doing:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NQ==",
      "description" : "QSBzaW1wbGUgbWFjaGluZSBpcyBhIG1lY2hhbmljYWwgZGV2aWNlIHRoYXQgY2hhbmdlcyAgdGhlIGRpcmVjdGlvbiBvciBtYWduaXR1ZGUgb2YgYSBmb3JjZS4gSW4gZ2VuZXJhbCwgdGhleSBjYW4gIGJlIGRlZmluZWQgYXMgdGhlIHNpbXBsZXN0IG1lY2hhbmlzbXMgdGhhdCB1c2UgbWVjaGFuaWNhbCAgYWR2YW50YWdlIHRvIG11bHRpcGx5IGZvcmNlLiBUaHVzLCBzaW1wbGUgbWFjaGluZSBoZWxwcyB1cyAgaW4gIGRvaW5nICBzYW1lICBhbW91bnQgIG9mICB3b3JrICB3aXRoICBsZXNzZXIgIGZvcmNlLiAgRmV3ICBleGFtcGxlcyBvZiBzaW1wbGUgbWFjaGluZXMgYXJlIHB1bGxleSwgbGV2ZXIgLHdoZWVsLCBzY3JldywgIGV0Yy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " less work ",
        "option2" : " the same amount of work with lesser force ",
        "option3" : " the same amount of work slowly ",
        "option4" : " the same amount of work much faster "
      }
    },
    {
      "index" : 6,
      "question" : "The tendency of a liquid drop to contract and occupy minimum area is due to :  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Ng==",
      "description" : "SXQgaXMgb2JzZXJ2ZWQgdGhhdCAgbGlxdWlkIGRyb3AgdGVuZCB0byBjb250cmFjdCBhbmQgIGFwcGVhciBzcGhlcmljYWwgd2hlbiBpdCBpcyBzZXQgZnJlZSBmcm9tIGV4dGVybmFsIGZvcmNlcyBsaWtlICBncmF2aXR5LCBldGMuIFN1cmZhY2UgdGVuc2lvbiBpcyB0aGUgcHJvcGVydHkgYW1vbmcgbGlxdWlkcyAgZHVlIHRvIHdoaWNoIHRoZXkgdGVuZCB0byBvY2N1cHkgbWluaW11bSBzdXJmYWNlIGFyZWEuICBUaGF0J3Mgd2h5IHdhdGVyIGRyb3BsZXQgYXBwZWFycyBzcGhlcmljYWwgYmVjYXVzZSBmb3IgYSAgZ2l2ZW4gdm9sdW1lLCBhIHNwaGVyZSBoYXMgbWluaW11bSBzdXJmYWNlIGFyZWEuIER1ZSB0byAgdGhpcyBwcm9wZXJ0eSBvZiBzdXJmYWNlIHRlbnNpb24gbGlxdWlkIHN1cmZhY2Ugc3RyZXRjaGVzICBhbmQgYmVoYXZlcyBsaWtlIGEgc3RyZXRjaGVkIG1lbWJyYW5lLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " surface tension ",
        "option2" : " viscosity ",
        "option3" : " density ",
        "option4" : " vapour pressure "
      }
    },
    {
      "index" : 7,
      "question" : "Which one of the following is a vector quantity?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Nw==",
      "description" : "U2NhbGFycyBhcmUgcXVhbnRpdGllcyB0aGF0IGhhdmUgbWFnbml0dWRlIG9ubHk7IHRoZXkgIGFyZSBpbmRlcGVuZGVudCBvZiBkaXJlY3Rpb24uIFZlY3RvcnMgaGF2ZSBib3RoIG1hZ25pdHVkZSAgYW5kIGRpcmVjdGlvbi4gTW9tZW50dW0gaXMgdGhlIHByb2R1Y3Qgb2YgdGhlIG1hc3MgYW5kICB2ZWxvY2l0eSBvZiBhbiBvYmplY3QgKHAgPSBtdikuIE1vbWVudHVtIGlzIGEgdmVjdG9yICBxdWFudGl0eSwgc2luY2UgaXQgaGFzIGEgZGlyZWN0aW9uIGFzIHdlbGwgYXMgYSBtYWduaXR1ZGUuIFRoZSAgcmVzdCBvZiBxdWFudGl0aWVzIGluIG9wdGlvbiBwcmVzc3VyZSwgd29yayBhbmQgZW5lcmd5IGhhdmUgIG1hZ25pdHVkZSBidXQgbm90IGRpcmVjdGlvbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Momentum ",
        "option2" : " Pressure ",
        "option3" : " Energy ",
        "option4" : " Work "
      }
    },
    {
      "index" : 8,
      "question" : "A girl is swinging on a swing in sitting position. When the girl stands up, the period of swing will :  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OA==",
      "description" : "RWZmZWN0aXZlIGxlbmd0aCBpcyB0aGUgbGVuZ3RoIG9mIHBvaW50IG9mIHN1c3BlbnNpb24gIHRvIHRoZSBjZW50cmUgb2YgZ3Jhdml0eShtYXNzKSBvZiBhIGJvZHkuIExldCBpdCBiZSBsIHdoZW4gdGhlICBnaXJsIGlzIHNpdHRpbmcgYW5kICBsJyB3aGVuIGdpcmwgc3RhbmRzIHVwLiBIZXJlIGwgPiBsJy4gVGh1cywgIHRoZSB0aW1lIHBlcmlvZCBvZiBzd2luZyB3aWxsIGRlY3JlYXNlIGJlY2F1c2UgdGltZSBwZXJpb2QgIG9mIHN3aW5nIGlzIGdpdmVuIGJ5IGZvcm11bGEgIGxUID0gMs+AICBnICBTbywgaXQgaXMgY2xlYXIgZnJvbSBhYm92ZSBmb3JtdWxhIHRoYXQgdGhlIHRpbWUgcGVyaW9kIG9mICBzeXN0ZW0gaXMgZGlyZWN0bHkgcHJvcG9ydGlvbmFsIHRvIGVmZmVjdGl2ZSBsZW5ndGguIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " be shorter ",
        "option2" : " be longer ",
        "option3" : " depends on the height of the girl ",
        "option4" : " not change "
      }
    },
    {
      "index" : 9,
      "question" : "A boy standing at the point O in the given diagram throws a ball three times with the same force, but projecting it along different inclinations from the ground. The results of the throws have been plotted in the diagram. Which one of the following is a valid conclusion?  H ei gh t Distance ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OQ==",
      "description" : "VGhlIGFib3ZlIGRpYWdyYW0gcmVwcmVzZW50cyBhIGJvZHkgaW4gcHJvamVjdGlsZSAgbW90aW9uICBNYXhpbXVtIGhlaWdodCB5bWF4ID0gICBuIHEyIDJzaW4gIDJnICBUaHVzLCBhY2NvcmRpbmcgdG8gYWJvdmUgZXF1YXRpb24gZ3JlYXRlciB0aGUgaW5pdGlhbCAgaW5jbGluYXRpb24sIHRoZSBncmVhdGVyIGlzIHRoZSBoZWlnaHQgcmVhY2hlZC4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The larger the initial inclination, the longer the throw ",
        "option2" : " The larger the height reached, the longer the throw ",
        "option3" : " The larger the height reached, the shorter the throw ",
        "option4" : " The larger the initial inclination, the greater the height "
      }
    },
    {
      "index" : 10,
      "question" : "The working principle of a washing machine is :  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTA=",
      "description" : "V2FzaGluZyBtYWNoaW5lIHdvcmtzIG9uIHRoZSBwcmluY2lwbGUgb2YgIGNlbnRyaWZ1Z2F0aW9uLiBDZW50cmlmdWdhdGlvbiBpcyBhIHByb2Nlc3MgdGhhdCBpbnZvbHZlcyAgdGhlIHVzZSBvZiB0aGUgY2VudHJpZnVnYWwgZm9yY2UgZm9yIHRoZSBzZXBhcmF0aW9uIG9mIG1peHR1cmVzICB3aXRoIGEgY2VudHJpZnVnZSwgdXNlZCBpbiBpbmR1c3RyeSBhbmQgaW4gbGFib3JhdG9yeSBzZXR0aW5ncy4gIE1vcmUtZGVuc2UgY29tcG9uZW50cyBvZiB0aGUgbWl4dHVyZSBtaWdyYXRlIGF3YXkgZnJvbSAgdGhlIGF4aXMgb2YgdGhlIGNlbnRyaWZ1Z2UsIHdoaWxlIGxlc3MtZGVuc2UgY29tcG9uZW50cyBvZiAgdGhlIG1peHR1cmUgbWlncmF0ZSB0b3dhcmRzIHRoZSBheGlzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " centrifugation ",
        "option2" : " dialysis ",
        "option3" : " reverse osmosis ",
        "option4" : " iffusion "
      }
    },
    {
      "index" : 11,
      "question" : "A smooth plane inclined at an angle Q with the horizontal as shown in the given figure. A body starts from rest and slides down on the inclined surface. The time taken by the body to reach the bottom is:  h q l Unit - E: General Science & Ecology 1 Physics  E 2 after 2 seconds?  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTE=",
      "description" : "QW4gb2JqZWN0IG9uIGFuIGluY2xpbmVkIHBsYW5lIHdpdGggaW5jbGluYXRpb24gcSBtb3ZlcyAgd2l0aCBhbiBhY2NlbGVyYXRpb24gZyBzaW4gcSBkb3duIHRoZSBwbGFuZS4gIFRoZSB0aW1lIHRha2VuIHRvIHJlYWNoIHRoZSBib3R0b20gaXMgZ2l2ZW4gYnkgIHEgIGcgc2luIHEgZyBjb3MgcSAgZyAgID0gPWwgMjEgYXQgKGFzIHUgMCkgIDIgIMK0ICDDniA9ID0gPSAgcSBxwrQgcSAgbCBsdCAyIDIgMiAgc2luIHNpbiBzaW4gIGggIGEgZyBnICBcID0gIHEgIDEgMiAgc2luICBodCAgZyA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  2h  g (b)  2l  g ",
        "option2" : " 9.8 m/s ",
        "option3" : " 19.6 m/s ",
        "option4" : " 21/ sin h  g  q (d)  2sin h  g  q  12. A ball is dropped from the top of a high building with a  constant acceleration of 9.8 m/s2. What will be its velocity "
      }
    },
    {
      "index" : 13,
      "question" : "A hunter aims his gun at a point between the eyebrows of a monkey sitting on a branch of a tree. Just as he fires, the monkey jumps down. The bullet will :  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTM=",
      "description" : "QXMgbW9ua2V5IGFuZCBidWxsZXQgYm90aCBmYWxsIHVuZGVyIHRoZSBzYW1lICBncmF2aXRhdGlvbmFsIGZvcmNlLCBzbyBidWxsZXQgd2lsbCBoaXQgZXhhY3RseSB0aGUgc2FtZSBwb2ludCBpdCAgaGFzIGJlZW4gYWltZWQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " hit the monkey at the point aimed ",
        "option2" : " hit the monkey below the point aimed ",
        "option3" : " hit the monkey above the point aimed ",
        "option4" : " miss the monkey altogether "
      }
    },
    {
      "index" : 14,
      "question" : "For which one of the following is capillarity not the reason?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTQ=",
      "description" : "Q2FwaWxsYXJ5IGFjdGlvbiwgb3IgY2FwaWxsYXJpdHksIGlzIGEgcGhlbm9tZW5vbiB3aGVyZSAgbGlxdWlkIHNwb250YW5lb3VzbHkgcmlzZXMgaW4gYSBuYXJyb3cgc3BhY2Ugc3VjaCBhcyBhIHRoaW4gIHR1YmUsIG9yIGluIHBvcm91cyBtYXRlcmlhbHMgc3VjaCBhcyBwYXBlciBvciBpbiBzb21lIG5vbi0gIHBvcm91cyBtYXRlcmlhbHMgc3VjaCBhcyBsaXF1aWZpZWQgY2FyYm9uIGZpYnJlLiBUaGlzIGVmZmVjdCAgY2FuIGNhdXNlIGxpcXVpZHMgdG8gZmxvdyBhZ2FpbnN0IHRoZSBmb3JjZSBvZiBncmF2aXR5IG9yIHRoZSAgbWFnbmV0aWMgZmllbGQgaW5kdWN0aW9uLiBJbiBibG90dGluZyBvZiBpbmssIHNwcmVhZCBvZiB3YXRlciAgZHJvcCBvbiBhIGNvdHRvbiBjbG90aCBhbmQgdGhlIHJpc2luZyBvZiB3YXRlciBmcm9tIHRoZSByb290cyAgb2YgYSBwbGFudCB0byBpdHMgZm9saWFnZS4gIEhJTlRTICYgU09MVVRJT05TICAgRSAxMCA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Blotting of ink ",
        "option2" : " Rising of underground water ",
        "option3" : " Spread a water drop on a cotton cloth ",
        "option4" : " Rising of water from the roots of a plant to its foliage "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following features of newer models of motor cars:  1. Radial tyres 2. Streamlined body 3. Multipoint fuel injection 4. Catalytic converter with exhaust Which of these features make the new models of motor cars more fuel efficient? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTU=",
      "description" : "QSAic3RyZWFtbGluZWQiIGRlc2lnbiBpcyBvbmUgaW4gd2hpY2ggb2JqZWN0cyB0aGF0ICBtb3ZlIHRocm91Z2ggYSBnYXMgb3IgbGlxdWlkIGFyZSBzaGFwZWQgdG8gbWF0Y2ggdGhlc2UgIGxpbmVzLCBhbmQgdGhlcmVmb3JlLCByZWR1Y2UgdGhlIGVuZXJneSByZXF1aXJlZCB0byBwcm9kdWNlICB0aGF0IG1vdGlvbi4gTXVsdGkgcG9pbnQgZnVlbCBpbmplY3Rpb24gc3lzdGVtIGluamVjdHMgZnVlbCAgaW50byBpbmRpdmlkdWFsIGN5bGluZGVycywgYmFzZWQgb24gY29tbWFuZHMgZnJvbSB0aGUgJ29uICBib2FyZCBlbmdpbmUgbWFuYWdlbWVudCBzeXN0ZW0gY29tcHV0ZXItcG9wdWxhcmx5ICBrbm93biBhcyB0aGUgRW5naW5lIENvbnRyb2wgVW5pdC9FQ1UuIFRoZXNlIHRlY2huaXF1ZXMgIHJlc3VsdCBub3Qgb25seSBpbiBiZXR0ZXIgJ3Bvd2VyIGJhbGFuY2UnIGFtb25nc3QgdGhlICBjeWxpbmRlcnMgYnV0IGFsc28gaW4gaGlnaGVyIG91dHB1dCBmcm9tIGVhY2ggb25lIG9mIHRoZW0sICBhbG9uZyB3aXRoIGZhc3RlciB0aHJvdHRsZSByZXNwb25zZS4gVGhlIG90aGVyIHR3byBvcHRpb25zICByYWRpYWwgdHlyZXMgYW5kIGNhdGFseXRpYyBjb252ZXJ0ZXIgd2l0aCBleGhhdXN0IGRvIG5vdCAgY29udHJpYnV0ZSB0byBtYWtlIHRoZSBjYXIgbW9yZSBmdWVsIGVmZmljaWVudC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1, 3 an 4 "
      }
    },
    {
      "index" : 16,
      "question" : "Assertion (A) : A man standing on a completely frictionless surface can propel himself by whistling. Reason (R) : If no external force acts on a system, its momentum cannot change.  Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTY=",
      "description" : "Rmlyc3QgIHN0YXRlbWVudCBjYW4gYmUgZXhwbGFpbmVkIG9uIHRoZSBiYXNpcyBvZiBsYXdzICBvZiBtb3Rpb24uIEZpcnN0IHN0YXRlbWVudCBpbnZvbHZlcyB0aGUgdXNlIG9mIE5ld3RvbidzICB0aGlyZCBsYXcgb2YgbW90aW9uLCAiRm9yIGV2ZXJ5IGFjdGlvbiB0aGVyZSBpcyBhbiBlcXVhbCBhbmQgIG9wcG9zaXRlIHJlYWN0aW9uIi4gSW4gZmlyc3QgY2FzZSB3aGlsZSB3aGlzdGxpbmcgYSBtYW4gdXNlcyAgaGlzIGJyZWF0aGUgYXMgYSBwcm9wZWxsYW50IHRvIHByb3BlbCBoaW1zZWxmLiBUaGUgc2Vjb25kICBzdGF0ZW1lbnQgY2FuIGJlIGV4cGxhaW5lZCBvbiB0aGUgYmFzaXMgb2YgbGF3IG9mICBjb25zZXJ2YXRpb24gb2YgbGluZWFyIG1vbWVudHVtIGFjY29yZGluZyB0byB3aGljaCB0aGUgIG1vbWVudHVtIG9mIGJvZHkgcmVtYWlucyBjb25zZXJ2ZWQgdW50aWwgYW55IGV4dGVybmFsICBmb3JjZSBhY3RzIHVwb24gaXQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 17,
      "question" : "The mass of a body on earth is 100 kg (acceleration due to gravity, ge = 10 m/s2. If acceleration due to gravity on the moon is ge / 6, then the mass of the body on the moon is :    ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTc=",
      "description" : "TWFzcyBpcyBhIHVuaXZlcnNhbCBjb25zdGFudC4gVGhlIG1hc3Mgb2YgYSBib2R5ICByZW1haW5zICB1bmNoYW5nZWQgICBpbiAgYW55ICBwYXJ0ICBvZiAgdW5pdmVyc2UuICBNYXNzICBvZiAgYSAgYm9keSBkb2VzIG5vdCBjaGFuZ2Ugd2l0aCByZXNwZWN0IHRvIGdyYXZpdHkuIEl0IGlzIHRoZSB3ZWlnaHQgIHRoYXQgY2hhbmdlcyB3aXRoIGdyYXZpdHkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 100/6 kg ",
        "option2" : " 60 kg ",
        "option3" : " 100 kg ",
        "option4" : " 600 kg "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements:  A simple pendulum is set into oscillation. Then: 1. the acceleration is zero when the bob passes through the mean position. 2. in each cycle the bob attains a given velocity twice. 3. both acceleration and velocity of the bob are zero when it reaches its extreme position during the oscillation. 4. the amplitude of oscillation of the simple pendulum decreases with time. Which of these statements are correct? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTg=",
      "description" : "VGhlIGJvYiBvZiBhIHNpbXBsZSBwZW5kdWx1bSBpcyBhdHRhY2hlZCB0byBhIHN0cmluZyAgd2hpY2ggcHVsbHMgdGhlIGJvYiBhbG9uZyBpdHMgbGVuZ3RoLiAgQiBCwqIgIEEgIENDwqIgIEhlcmUgQiBhbmQgQyBhcmUgZXh0cmVtZSBwb3NpdGlvbnMgd2hlcmVhcyBBIGlzIG1lYW4gIHBvc2l0aW9uLlRoZSBzcGVlZCBvZiB0aGUgYm9iIGluY3JlYXNlcyBhcyBpdCBhcHByb2FjaGVzICB0aGUgbWVhbiBwb3NpdGlvbiBBIGFuZCBjb250aW51ZXMgdG8gbW92ZSB0aWxsIGl0IHJlYWNoZXMgQy4gIEF0IEMgdGhlIHNwZWVkIGJlY29tZXMgemVyby4gRHVlIHRvIHRoZSB1bmJhbGFuY2VkIGZvcmNlICB0aGUgYm9iIG1vdmVzIHRvd2FyZHMgdGhlIG1lYW4gcG9zaXRpb24uIFRoZSBzcGVlZCBvZiAgdGhlIGJvYiBpcyBtYXhpbXVtIGF0IHRoZSBtZWFuIHBvc2l0aW9uIGFuZCBpcyB6ZXJvIGF0IHRoZSAgZXh0cmVtZSBwb3NpdGlvbnMuIFRodXMsICBpdCBpcyBjbGVhciB0aGF0IGluIGVhY2ggY3ljbGUgYm9iICB2ZWxvY2l0eSBpbmNyZWFzZXMgZnJvbSB6ZXJvIHRvIG1heGltdW0uIFRoaXMgbWVhbnMgdGhhdCBpdCAgYXR0YWlucyBhIGdpdmVuIHZlbG9jaXR5IHR3aWNlLiBTdXBwb3NlIHRoZSBib2Igb2YgdGhlICBwZW5kdWx1bSByZWFjaGVzIHVwIHRvIEIgd2hpbGUgb3NjaWxsYXRpbmcsIHRoZW4gQUIgaXMgdGhlICBhbXBsaXR1ZGUuIEZvciB0aGUgbmV4dCBvc2NpbGxhdGlvbiB0aGUgYm9iIGZhaWxzIHRvIHJlYWNoIEIgIGJ1dCBpdCB3aWxsIHJldmVyc2UgdGhlIGRpcmVjdGlvbiBmcm9tIHBvaW50IELCoiBpbnN0ZWFkIG9mIEIuICBUaGUgYW1wbGl0dWRlIG9mIG9zY2lsbGF0aW9uIGluIHRoZSBzZWNvbmQgY2FzZSBpcyBBQsKiIHdoaWNoICBpcyBsZXNzIHRoYW4gQUIuIFRoYXQgbWVhbnMsIGEgcmV0YXJkaW5nIGZvcmNlIGlzIGFjdGluZyBvbiAgdGhlIGJvYiB0aGVyZWJ5IHJlZHVjaW5nIHRoZSBhbXBsaXR1ZGUgb2Ygb3NjaWxsYXRpb24uIFRoaXMgIHJldGFyZGluZyBmb3JjZSBpcyBub3RoaW5nIGJ1dCBhaXItcmVzaXN0YW5jZSBvciBhaXItZnJpY3Rpb24uICBBdCBleHRyZW1lIHBvc2l0aW9uLCBhY2NlbGVyYXRpb24gaXMgbWF4aW11bS4gU28gc3RhdGVtZW50ICAzIGlzIG5vdCBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 3 and 4 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 19,
      "question" : "Which of the following distance-time graph (x-t) represents one-dimensional uniform motion?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTk=",
      "description" : "RmlndXJlIChkKSBjb3JyZWN0bHkgcmVwcmVzZW50cyB0aGUgdGltZS1kaXN0YW5jZSBncmFwaCAgZm9yIG9uZSBkaW1lbnNpb25hbCB1bmlmb3JtIG1vdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : "  t  x ",
        "option2" : "  x  t ",
        "option3" : "  x  t ",
        "option4" : " "
      }
    },
    {
      "index" : 20,
      "question" : "Assertion (A) : With the increase of temperature, the viscosity of glycerine increases. Reason (R) : Rise of temperature increases kinetic energy of molecules.  Codes : ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjA=",
      "description" : "U3RhdGVtZW50IDEgaXMgZmFsc2UuIFRoZSB0ZW1wZXJhdHVyZSBkZXBlbmRlbmNlIG9mICBsaXF1aWQgdmlzY29zaXR5IGlzIHRoZSBwaGVub21lbm9uIGJ5IHdoaWNoIGxpcXVpZCB2aXNjb3NpdHkgIHRlbmRzIHRvIGRlY3JlYXNlIChvciwgYWx0ZXJuYXRpdmVseSwgaXRzIGZsdWlkaXR5IHRlbmRzIHRvICBpbmNyZWFzZSkgYXMgaXRzIHRlbXBlcmF0dXJlIGluY3JlYXNlcy4gVGh1cywgd2l0aCBpbmNyZWFzZSAgb2YgdGVtcGVyYXR1cmUgdmlzY29zaXR5IG9mICBnbHljZXJpbmUgZGVjcmVhc2UuIFN0YXRlbWVudCAyICBpcyBjb3JyZWN0IGJlY2F1c2Ugd2l0aCB0aGUgcmlzZSBvZiB0ZW1wZXJhdHVyZSBpbiBjYXNlIG9mICBsaXF1aWQsIHRoZSBraW5ldGljIGVuZXJneSBpbmNyZWFzZXMgYXMga2luZXRpYyBlbmVyZ3kgb2YgbGlxdWlkICBtb2xlY3VsZXMgaXMgZGlyZWN0bHkgcHJvcG9ydGlvbmFsIHRvIGFic29sdXRlIHRlbXBlcmF0dXJlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 21,
      "question" : "Assertion (A) : An iron ball floats on mercury but gets immersed in water. Reason (R) : The specific gravity of iron is more than that of mercury.  Codes: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjE=",
      "description" : "U3RhdGVtZW50IDEgaXMgdHJ1ZSBidXQgc3RhdGVtZW50IDIgaXMgZmFsc2UuIFNwZWNpZmljICBncmF2aXR5IGlzIHRoZSByYXRpbyBvZiB0aGUgZGVuc2l0eSAobWFzcyBvZiBhIHVuaXQgdm9sdW1lKSBvZiAgYSBzdWJzdGFuY2UgdG8gdGhlIGRlbnNpdHkgKG1hc3Mgb2YgdGhlIHNhbWUgdW5pdCB2b2x1bWUpICBvZiBhIHJlZmVyZW5jZSBzdWJzdGFuY2UuIE1lcmN1cnkgaGFzIGEgc3BlY2lmaWMgZ3Jhdml0eSBvZiAgMTMuNTYgd2hlcmVhcyBzcGVjaWZpYyBncmF2aXR5IG9mIGlyb24gaXMgNy4yMS5UaHVzLCBpcm9uIGJhbGwgIGZsb2F0cyBvbiBtZXJjdXJ5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 22,
      "question" : "A solid cube gets completely immersed in water when a 0.2 kg mass is placed on it. If the mass is removed, the cube is 2 cm above the water level. What is the length of each side of the cube?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjI=",
      "description" : "VGhlIHZvbHVtZSBvZiAyIGNtIHBhcnQgb2YgdGhlIGN1YmUsIGFzc3VtaW5nICB0aGUgc2lkZSBvZiBjdWJlIGlzIHguICBWb2x1bWUgPSAyIMOXIHggw5cgeCA9IDJ4MiAgTWFzcyBkaXNwbGFjZWQgYnkgdGhpcyBwb3J0aW9uID0gMC4yIGtnID0gMjAwIGdtICBVc2luZyAgTWFzcyA9IFZvbHVtZSDDlyBkZW5zaXR5ICAgIHggIDIgY20gIDIwMCA9IDJ4MiDDlyAxICB4MiA9IDEwMCAgeCA9IDEwIGNtIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 12 cm ",
        "option2" : " 10 cm ",
        "option3" : " 8 cm ",
        "option4" : " 6 cm "
      }
    },
    {
      "index" : 23,
      "question" : "Assertion (A) : The weight of a body decreases with the increase of altitude on earth. Reason (R) : The earth is not a perfect sphere.         Codes: ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjM=",
      "description" : "V2VpZ2h0IGlzIGJhc2ljYWxseSB0aGUgbWVhc3VyZW1lbnQgb2YgdGhlICBncmF2aXRhdGlvbmFsIGZvcmNlIHRoYXQgYWN0cyBvbiBhbiBvYmplY3QuIFdlaWdodCBvZiBhbnkgIGJvZHkgaXMgZ2l2ZW4gYnkgZm9ybXVsYSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXID0gbWcsICBXaGVyZSBtIGlzIHRoZSBtYXNzIG9mIGJvZHkuICBnIHJlZmVycyB0byB0aGUgYWNjZWxlcmF0aW9uIHRoYXQgdGhlIEVhcnRoIGltcGFydHMgdG8gb2JqZWN0cyAgb24gb3IgbmVhciBpdHMgc3VyZmFjZS4gSXQgaXMgY2FsbGVkIGFjY2VsZXJhdGlvbiBkdWUgdG8gZ3Jhdml0eS4gIE5vdywgbWFzcyBpcyB1bml2ZXJzYWwgY29uc3RhbnQuIEl0IHdpbGwgcmVtYWluIHNhbWUgYXQgZWFydGggIHN1cmZhY2Ugb3IgYXQgYW55IHBvaW50IGFib3ZlIHRoZSBzdXJmYWNlIG9mIGVhcnRoLiAgQWNjZWxlcmF0aW9uIGR1ZSB0byBncmF2aXR5IGRlY3JlYXNlcyB3aXRoIGFsdGl0dWRlLCBzaW5jZSAgZ3JlYXRlciBhbHRpdHVkZSBtZWFucyBncmVhdGVyIGRpc3RhbmNlIGZyb20gdGhlIEVhcnRoJ3MgIGNlbnRyZS4gIFRoZSBmb2xsb3dpbmcgZm9ybXVsYSBhcHByb3hpbWF0ZXMgdGhlIEVhcnRoJ3MgZ3Jhdml0eSAgZm9ybXVsYSB2YXJpYXRpb24gd2l0aCBhbHRpdHVkZTogICAyICByIG8gIGUgIHJlZyBnICByIGggIMOmIMO2ICA9IMOnIMO3w6cgw7crw6ggw7ggIFdoZXJlICBnciAgaXMgdGhlIGdyYXZpdHkgbWVhc3VyZSBhdCBoZWlnaHQgYWJvdmUgc2VhIGxldmVsLiAgcmUgaXMgdGhlIEVhcnRoJ3MgbWVhbiByYWRpdXMuICBnbyBpcyB0aGUgc3RhbmRhcmQgZ3Jhdml0eS4gIEVhcnRoIGlzIG5vdCBhIHBlcmZlY3Qgc3BoZXJlIGJlY2F1c2UgaXRzIHR3byBwb2xlcyAgY2F1c2UgaXQgIHRvIGJ1bGdlIG91dCBpbiB0aGUgbWlkZGxlLiBJdCBzcGlucyBvbiBpdHMgYXhpcyBhbmQgdGhlICBjZW50cmlmdWdhbCBmb3JjZSBtYWtlcyB0aGUgcGFydCBhdCB0aGUgZXF1YXRvciBidWxnZSBvdXQgIHNsaWdodGx5LiAgRSAgQiAgRCAgXzggIDM0ICAyICBQaHlzaWNzIEUgMTEg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A  E  B  D  _8  34  2  Physics E 3 ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:   -wheel vehicle moving in a sharp circular path at high speed will : 1. overturn about its outer wheels 2. overturn about its inner wheels 3. skid outwards 4. skid inwards Which of these statements are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjQ=",
      "description" : "SW4gY2FzZSBvZiBvYmplY3QgbW92aW5nIGFsb25nIGEgY2lyY3VsYXIgcGF0aCB0d28gIHR5cGVzIG9mIGZvcmNlcyBjZW50cmlwZXRhbCBhbmQgY2VudHJpZnVnYWwgYWN0cyB1cG9uIGl0LiBBcyAgdGhleSBoYXZlIG9wcG9zaXRlIGltcGFjdCB0aHVzLCB0aGUgb2JqZWN0IHJlbWFpbnMgaW4gIGJhbGFuY2UuIFdoZW4gY2VudHJpZnVnYWwgZm9yY2UgZ2V0cyBkaXN0dXJiZWQgdGhlbiB0aGUgIG9iamVjdCB3aWxsIGxlYXZlIHRoZSBiYWxhbmNlIGFuZCBza2lkIHRvd2FyZCBhbiBvdXR3YXJkICBkaXJlY3Rpb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 and 4 ",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 4 "
      }
    },
    {
      "index" : 25,
      "question" : "An oil tanker partially filled with oil moves forward on a level road with uniform acceleration. The free surface of oil then:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjU=",
      "description" : "VGhlIHN1cmZhY2Ugb2YgdGFua2VyIHdpbGwgbW92ZSBpbiBmb3J3YXJkIGRpcmVjdGlvbiAgd2l0aCBpbmNyZWFzaW5nIHZlbG9jaXR5IChhcyBhY2NlbGVyYXRpb24gaW4gdW5pZm9ybSksIHNvIGRlcHRoICB3aWxsIGJlIGxhcmdlciBhdCB0aGUgcmVhciBlbmQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " remains horizontal ",
        "option2" : " is inclined to the horizontal with smaller depth at the  rear end ",
        "option3" : " is inclined to the horizontal with larger depth at the  rear end ",
        "option4" : " assumes a parabolic curve "
      }
    },
    {
      "index" : 26,
      "question" : "If the radius of the earth were to shrink by one per cent, its mass remaining the same, the value of g on the earth's surface would:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MjY=",
      "description" : "VGhlIHZhbHVlIG9mIGcgb24gZWFydGgncyBzdXJmYWNlIGlzIGdpdmVuIGJ5ICA9ICAyICBHTWcgIFIgIMOeICBEIMOmIEQgw7YgID0gLSDDpyDDtyAgw6ggw7ggIDIgIGcgUiAgZyBSICAgKGlmIE0gaXMgY29uc3RhbnQpICBUaHVzLCBpZiByYWRpdXMgb2YgdGhlIGVhcnRoIHNocmlua3MgYnkgMSUsIHRoZSB2YWx1ZSBvZiBnIHdpbGwgIGluY3JlYXNlIGJ5IDIlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " increase by 0.5% ",
        "option2" : " increase y 2% ",
        "option3" : " decrease by 0.5% ",
        "option4" : " ecrease by 2% "
      }
    },
    {
      "index" : 27,
      "question" : "A car is running on a road at a uniform speed of 60 km/h. The net resultant force on the car is :  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mjc=",
      "description" : "QnkgTmV3dG9uJ3Mgc2Vjb25kIGxhdyBGID0gbWEuIElmIGEgPSAwLCBGbmV0ID0gMCAgVGh1cywgdGhlIHJlc3VsdGFudCBmb3JjZSBpcyB6ZXJvLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " driving force in the direction of car's motion ",
        "option2" : " resistance force opposite to the direction of car's motion ",
        "option3" : " an inclined force ",
        "option4" : " equal to zero "
      }
    },
    {
      "index" : 28,
      "question" : "A spherical body moves with a uniform angular velocity (w) around a circular path of radius r. Which one of the following statements is correct?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mjg=",
      "description" : "QSBib2R5IG1vdmluZyB3aXRoIGEgdW5pZm9ybSBhbmd1bGFyIHZlbG9jaXR5IHcgb24gYSAgY2lyY3VsYXIgcGF0aCBvZiByYWRpdXMgciBoYXMgcmFkaWFsIGFjY2VsZXJhdGlvbiBlcXVhbCB3MnIgIGRpcmVjdGVkIHRvd2FyZHMgdGhlIGNlbnRyZSBvZiB0aGUgcGF0aC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The body has no acceleration ",
        "option2" : " The body has a radial acceleration w2r directed toward  centre of path ",
        "option3" : " The body has a radial acceleration 2/5w2r directed  away from the centre of the path ",
        "option4" : " The body has an acceleration w2  tangential to its path "
      }
    },
    {
      "index" : 29,
      "question" : "A weightless rubber balloon is filled with 200 cc of water. Its weight in water is equal to :  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mjk=",
      "description" : "SW4gdGhpcyBjYXNlLCBiYWxsb29uIGlzIGZpbGxlZCB1cCB3aXRoIHdhdGVyIGFuZCB0aGVuICBwdXQgaW50byB3YXRlci4gSW5pdGlhbGx5LCBhZnRlciBzb21lIG9zY2lsbGF0aW9ucyBpdCBiZWNvbWUgIHN0YWJsZSBiZWNhdXNlIHRoZSBkb3dud2FyZCBkaXJlY3RpbmcgZm9yY2UgZXhlcnRlZCBieSAgd2VpZ2h0IG9mIHdhdGVyIGluIGJhbGxvb24gaXMgYmFsYW5jZWQgYnkgdGhlIHVwd2FyZCAgZGlyZWN0aW5nIGJ1b3lhbmN5IGZvcmNlIG9mIHdhdGVyLiBIZW5jZSwgdGhlIHJlc3VsdGFudCAgd2VpZ2h0IGluIHdhdGVyIGlzIHplcm8gYXMgdGhlcmUgaXMgbm8gcmVzdWx0YW50IGZvcmNlIGFjdGluZyAgdXBvbiBpdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 9.8/5 N ",
        "option2" : " 9.8/10 N ",
        "option3" : " 9.8/2 N ",
        "option4" : " zero "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following is the correct sequence of the given substances in the decreasing order of their densities?      ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MzA=",
      "description" : "RGVuc2l0eSBvZiBnb2xkIGlzIDE5LjMwIGcvY20zLiBUaGUgZGVuc2l0eSBvZiB1bHRyYSAgcHVyZSBsaXF1aWQgbWVyY3VyeSBpcyAxMy41MzQgZy9jbTMgYW5kIHRoZSBkZW5zaXR5IG9mIHN0ZWVsICBpcyA3LjgwIGcvY20zLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Steel > Mercury > Gold ",
        "option2" : " Gold > Mercury > Steel ",
        "option3" : " Steel > Gold > Mercury ",
        "option4" : " Gold > Steel > Mercury "
      }
    },
    {
      "index" : 31,
      "question" : "What is the approximate mean velocity with which the earth moves round the sun in its orbit?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MzE=",
      "description" : "RWFydGgncyBtZWFuIG9yYml0YWwgc3BlZWQgaXMgMzAga20vcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 20 km/s ",
        "option2" : " 30 km/s ",
        "option3" : " 40 km/s ",
        "option4" : " 50 km/s "
      }
    },
    {
      "index" : 32,
      "question" : "Four wires of same material and of dimensions as under are stretched by a load of same magnitude separately. Which one of them will be elongated maximum?                    ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MzI=",
      "description" : "RWxvbmdhdGlvbiAoRGwpIGluIGEgd2lyZSBpcyBnaXZlbiBieSAgPSDCtCAgRCAgRiBsWSAgQSBsICDDniBEID0gIEZsbCAgQVkgIEZvciB3aXJlcyBvZiBzYW1lIG1hdGVyaWFsIGFuZCBzYW1lIGxvYWQsICBEIMK1IMOeIEQgwrUgIDIgIGwgbGwgbCAgQSByICBUaGVyZWZvcmUsIHRoZSBleHRlbnNpb25zIHdpbGwgYmUgbWF4aW11bSBpbiBjYXNlIG9mIHRoZSAgd2lyZSB3aXRoIGxlbmd0aCAzIG0gYW5kIGRpYW1ldGVyIDEuNSBtbS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Wire of 1m length and 2 mm diameter ",
        "option2" : " Wire of 2 m length and 2 mm diameter ",
        "option3" : " Wire of 3 m length and 1.5 mm diameter ",
        "option4" : " Wire of 1 m length and 1 mm diameter "
      }
    },
    {
      "index" : 33,
      "question" : "Three identical vessels A, B and C are filled with water, mercury and kerosene respectively up to an equal height. The three vessels are provided with identical taps at the bottom of the vessels. If the three taps are opened simultaneously, then which vessel is emptied first?   ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MzM=",
      "description" : "VmlzY29jaXR5IG9mIEtlcm9zZW5lIGlzIGxlYXN0IGFtb25nIGFsbCwgc28gaXQgd2lsbCAgZW1wdGllZCBmaXJzdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Vessel B ",
        "option2" : " All the vessels A, B and C will be emptied simultaneously ",
        "option3" : " Vessel A ",
        "option4" : " Vessel C "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements :  If there were no phenomenon  of capillarity 1. it would be difficult to use a kerosene lamp 2. one would not be able to use a straw to consume a soft drink 3. the blotting paper would fail to function 4. the big trees that we see around would not have grown on the Earth Which of the statements given above are correct? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDM0",
      "description" : "IDEuIGl0IHdvdWxkIGJlIGRpZmZpY3VsdCB0byB1c2UgYSBrZXJvc2VuZSBsYW1wICAyLiB0aGUgYmxvdHRpbmcgcGFwZXIgd291bGQgZmFpbCB0byBmdW5jdGlvbiAgMy4gdGhlIGJpZyB0cmVlcyB0aGF0IHdlIHNlZSBhcm91bmQgd291bGQgbm90IGhhdmUgZ3Jvd24gIG9uIHRoZSBFYXJ0aCA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 1, 3 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 35,
      "question" : "Ball bearings are used in bicycles, cars, etc., because  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDM1",
      "description" : "QmFsbCBiZWFyaW5ncyBhcmUgdXNlZCB0byByZWR1Y2UgZnJpY3Rpb24gYW5kIGZyaWN0aW9uIGlzICBkaXJlY3RseSBwcm9wb3J0aW9uYWwgdG8gZWZmZWN0aXZlIHN1cmZhY2UgYXJlYS4gU28gaWYgIGVmZmVjdGl2ZSBzdXJmYWNlIGFyZWEgaXMgcmVkdWNlZCB0aGVuIGZyaWN0aW9uIHdpbGwgYWxzbyAgcmVkdWNlLiAgQi4gSGVhdCBhbmQgVGhlcm1vZHluYW1pY3Mg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " the actual area of contact between the wheel and axle  is increased ",
        "option2" : " the effective area of contact between the wheel and  axle is increased ",
        "option3" : " the effective area of contact between the wheel and  axle is reduced ",
        "option4" : " None of the above statements is correct "
      }
    },
    {
      "index" : 36,
      "question" : "The clouds float in the atmosphere because of their low:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MzY=",
      "description" : "QmVjYXVzZSBvZiBkZW5zaXR5LiBUaGUgZGVuc2l0eSBvZiB0aGUgY2xvdWRzIGlzIGxlc3MgIHRoYW4gdGhhdCBvZiB0aGUgYWlyLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " temperature ",
        "option2" : " velocity ",
        "option3" : " pressure ",
        "option4" : " ensity "
      }
    },
    {
      "index" : 37,
      "question" : "Strips of two metals A and B are firmly jointed together as shown in the figure.  A B On heating, A expands more than B does. If this jointed strip is heated, then it will appear as ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mzc=",
      "description" : "VGhlcm1hbCBleHBhbnNpb24gaXMgdGhlIHRlbmRlbmN5IG9mIG1hdHRlciB0byBjaGFuZ2UgIGluIHZvbHVtZSBpbiByZXNwb25zZSB0byBhIGNoYW5nZSBpbiB0ZW1wZXJhdHVyZS4gSW4gdGhpcyAgY2FzZSBBIGV4cGFuZHMgbW9yZSB0aGFuIEIuIFRoZXJlZm9yZSwgZXhwYW5zaW9uIG9mIHZvbHVtZSAgd2lsbCBiZSBtb3JlIGZvciBBIGluIGNvbXBhcmlzb24gdG8gQiBvbiBhcHBsaWNhdGlvbiBvZiBzYW1lICBhbW91bnQgb2YgaGVhdC4gVGhlcmVmb3JlLCBvbiBoZWF0aW5nIGl0IHdpbGwgYXBwZWFyIGxpa2UgIGZpZ3VyZSAoYikuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " ",
        "option2" : " ",
        "option3" : " ",
        "option4" : " "
      }
    },
    {
      "index" : 38,
      "question" : "Low temperatures (cryogenics) find application in :  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mzg=",
      "description" : "SW4gcGh5c2ljcywgY3J5b2dlbmljcyBpcyB0aGUgc3R1ZHkgb2YgdGhlIHByb2R1Y3Rpb24gIG9mIHZlcnkgbG93IHRlbXBlcmF0dXJlIChiZWxvdyAtMTUwIMKwQywgLSAyMzggwrBGIG9yIDEyMyBLKSAgYW5kIHRoZSBiZWhhdmlvciBvZiBtYXRlcmlhbHMgYXQgdGhvc2UgdGVtcGVyYXR1cmVzLiAgQXBwbGljYXRpb24gb2YgY3J5b2dlbmljcyBhcmUgaW4gTVJJLiAgTVJJIGlzIGEgbWV0aG9kIG9mIGltYWdpbmcgb2JqZWN0cyB0aGF0IHVzZXMgYSBzdHJvbmcgIG1hZ25ldGljIGZpZWxkIHRvIGRldGVjdCB0aGUgcmVsYXhhdGlvbiBvZiBwcm90b25zIHRoYXQgaGF2ZSAgYmVlbiBwZXJ0dXJiZWQgYnkgYSByYWRpby1mcmVxdWVuY3kgcHVsc2UuIFRoaXMgbWFnbmV0aWMgIGZpZWxkIGlzIGdlbmVyYXRlZCBieSBlbGVjdHJvbWFnbmV0cywgYW5kIGhpZ2ggZmllbGQgc3RyZW5ndGhzICBjYW4gYmUgYWNoaWV2ZWQgYnkgdXNpbmcgc3VwZXJjb25kdWN0aW5nIG1hZ25ldHMuICBUcmFkaXRpb25hbGx5LCBsaXF1aWQgaGVsaXVtIGlzIHVzZWQgdG8gY29vbCB0aGUgY29pbHMgYmVjYXVzZSAgaXQgaGFzIGEgYm9pbGluZyBwb2ludCBvZiBhcm91bmQgNCBLIGF0IGFtYmllbnQgcHJlc3N1cmUuICBDcnlvZ2VuaWMgbGlxdWlkcyBhcmUgYWxzbyB1c2VkIGluIHRoZSBzcGFjZSBwcm9ncmFtLiBGb3IgIGV4YW1wbGUsIGNyeW9nZW5zIGFyZSB1c2VkIHRvIHByb3BlbCByb2NrZXRzIGludG8gc3BhY2UuIEEgIHRhbmsgb2YgbGlxdWlkIGh5ZHJvZ2VuIHByb3ZpZGVzIHRoZSBmdWVsIHRvIGJlIGJ1cm5lZCBhbmQgIGEgc2Vjb25kIHRhbmsgb2YgbGlxdWlkIG94eWdlbiBpcyBwcm92aWRlZCBmb3IgY29tYnVzdGlvbi4gIENyeW9nZW5pYyBwcm9jZXNzZXMgYXJlIGFsc28gdXNlZCB0byBzdXBwbHkgImJhbmtzIiAgc3RvcmluZyBleWUgY29ybmVhcywgYmxvb2QsIGFuZCBzcGVybSBmb3IgZnV0dXJlIHN1cmdpY2FsICBwcm9jZWR1cmVzLiBJbiAxOTYxIEFtZXJpY2FuIHN1cmdlb24gSXJ2aW5nIFMuIENvb3BlciAgaW50cm9kdWNlZCBhIGZyZWV6aW5nIHRlY2huaXF1ZSBjYWxsZWQgY3J5b3N1cmdlcnkuICBDcnlvc3VyZ2VyeSBpcyByZWxhdGl2ZWx5IGJsb29kbGVzcyBiZWNhdXNlIHRoZSBsb3cgIHRlbXBlcmF0dXJlcyB1c2VkIGNvbnN0cmljdCB0aGUgYmxvb2QgdmVzc2Vscywgc3RlbW1pbmcgIHRoZSBsb3NzIG9mIGJsb29kLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " space travel, surgery and magnetic levitation ",
        "option2" : " surgery, magnetic levitation and telemetry ",
        "option3" : " space travel, surgery and telemetry ",
        "option4" : " space travel, magnetic levitation and telemetry "
      }
    },
    {
      "index" : 39,
      "question" : "Assertion (A) : A piece of copper and a piece of glass are heated to the same temperature. When touched, thereafter, the copper piece appears hotter than the glass piece. Reason (R) : The density of copper is more than that of glass.  Codes: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Mzk=",
      "description" : "Qm90aCBzdGF0ZW1lbnQgMSBhbmQgc3RhdGVtZW50IDIgYXJlIGNvcnJlY3QuIE9uICBoZWF0aW5nIHVwIHRvIHNhbWUgdGVtcGVyYXR1cmUgY29wcGVyIHBpZWNlIGlzIGZvdW5kIGhvdHRlciAgdGhhbiBpbiBjb21wYXJpc29uIHRvIGdsYXNzIHBpZWNlIGJlY2F1c2UgY29wcGVyIGJlaW5nIGEgIG1ldGFsIGlzIGEgZ29vZCBjb25kdWN0b3Igb2YgaGVhdCBhbmQgZWxlY3RyaWNpdHkgd2hpbGUgZ2xhc3MgIG9uIHRoZSBvdGhlciBoYW5kIGlzIGEgcG9vciBjb25kdWN0b3Igb2YgaGVhdC4gVGhlIGRlbnNpdHkgIG9mIGNvcHBlciBpcyA4LjkyIGdtL2NtMyAgYW5kIG9mIGdsYXNzIGlzIDIuNiBnbS9jbTMgLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 40,
      "question" : "Assertion (A) : The boiling point of water decreases as the altitude increases. Reason (R) : The atmospheric pressure increases with altitude.  Codes : ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDA=",
      "description" : "VGhlIGJvaWxpbmcgcG9pbnQgb2YgYW4gZWxlbWVudCBvciBhIHN1YnN0YW5jZSBpcyB0aGUgIHRlbXBlcmF0dXJlIGF0IHdoaWNoIHRoZSB2YXBvdXIgcHJlc3N1cmUgb2YgdGhlIGxpcXVpZCBlcXVhbHMgIHRoZSBlbnZpcm9ubWVudGFsIHByZXNzdXJlIHN1cnJvdW5kaW5nIHRoZSBsaXF1aWQuIEFzICBhbHRpdHVkZSBpbmNyZWFzZXMsIGF0bW9zcGhlcmljIHByZXNzdXJlIGRlY3JlYXNlcywgc28gIGJvaWxpbmcgcG9pbnQgZGVjcmVhc2VzLCBzbyB0aGUgbGlxdWlkIHdvdWxkIGJvaWwgYXQgYSBsb3dlciAgdGVtcGVyYXR1cmUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 41,
      "question" : "When water is heated from 0°C to l0°C. Its volume:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDE=",
      "description" : "SW5pdGlhbGx5IGF0IHN0YXJ0IG9mIGhlYXRpbmcgZnJvbSAwwrBDIHRvIDTCsEMgdGhlcmUgd2lsbCBiZSAgYSBjb250cmFjdGlvbiBhcyBhIHJlc3VsdCBvZiB3aGljaCB2b2x1bWUgZGVjcmVhc2VzLiBPbiAgZnVydGhlciBoZWF0aW5nIGJleW9uZCA0wrBDIHRvIDEwwrBDIHRoZSBtb2xlY3VsZXMgZ2FpbiAga2luZXRpYyBlbmVyZ3kgYW5kIHN0YXJ0IG1vdmluZyBtb3JlIHJhbmRvbWx5LiBUaHVzLCAgaW50ZXJtb2xlY3VsYXIgZGlzdGFuY2UgaW5jcmVhc2VzIGFzIGEgcmVzdWx0IG9mIHdoaWNoIGl0cyAgdm9sdW1lIGluY3JlYXNlcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " increases ",
        "option2" : " decreases ",
        "option3" : " does not change ",
        "option4" : " first decreases and then increases "
      }
    },
    {
      "index" : 42,
      "question" : "A hollow sphere of radius R, a hollow cube of side R and a thin circular plate of radius R, made up of the same material, are all heated to 20°C above room temperature. When left to cool in the room, which of them will reach the room temperature first?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDI=",
      "description" : "VGhlIGxvc3Mgb2YgaGVhdCBpcyBkaXJlY3RseSBwcm9wb3J0aW9uYWwgdG8gdGhlIHN1cmZhY2UgIGFyZWEsIGhlbmNlIGxvc3Mgb2YgaGVhdCB3aWxsIGJlIGVhcmxpZXIgaW4gY2FzZSBvZiBzcGhlcmUgIGJlY2F1c2UgaXQgaGFzIHRoZSBtYXhpbXVtIHN1cmZhY2UgYXJlYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Circular plate ",
        "option2" : " Cube ",
        "option3" : " Sphere ",
        "option4" : " All of them will reach the room temperature at the same time "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements: .  1. Steam at 100°C and boiling water at 100°C contain same amount of heat. 2. Latent heat of fusion of ice is equal to the latent heat of vaporization of water. 3. In an air-conditioner, heat is extracted from the room air at the evaporator coils and is rejected out at the condenser coils. Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDM=",
      "description" : "T25seSBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBbiBhaXIgY29uZGl0aW9uZXIgKG9mdGVuICByZWZlcnJlZCB0byBhcyBBQykgaXMgYSBob21lIGFwcGxpYW5jZSwgc3lzdGVtLCBvciBtZWNoYW5pc20gIGRlc2lnbmVkIHRvIGRlaHVtaWRpZnkgYW5kIGV4dHJhY3QgaGVhdCBmcm9tIGFuIGFyZWEuIFN0ZWFtICAoYXQgMTAwIGRlZ3JlZSBDZWxzaXVzICkgaGFzIG1vcmUgZW5lcmd5IHRoYW4gd2F0ZXIgICBFIDEyICAoIGF0IDEwMCBkZWdyZWUgQ2Vsc2l1cyApIGJlY2F1c2UgaXQgdGFrZXMgZW5lcmd5IHRvIGJyZWFrIHRoZSAgYm9uZHMgdGhhdCBrZWVwIGl0IGxpcXVpZC4gTGF0ZW50IGhlYXQgaXMgdGhlIGhlYXQgcmVsZWFzZWQgb3IgIGFic29yYmVkIGJ5IGEgY2hlbWljYWwgc3Vic3RhbmNlIG9yIGEgdGhlcm1vZHluYW1pYyAgc3lzdGVtIGR1cmluZyBhIGNoYW5nZSBvZiBzdGF0ZSB0aGF0IG9jY3VycyB3aXRob3V0IGEgIGNoYW5nZSBpbiB0ZW1wZXJhdHVyZS4gTGF0ZW50IGhlYXQgb2YgZnVzaW9uIG9mIHdhdGVyIGlzIDMzNCAga0ova2cgd2hlcmVhcyBMYXRlbnQgaGVhdCBvZiB2YXBvcml6YXRpb24gb2Ygd2F0ZXIgaXMgMjI2MCAga0ova2cuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " Only 2 ",
        "option4" : " Only 3 "
      }
    },
    {
      "index" : 44,
      "question" : "Cloudy nights are warmer compared to clear cloudless nights, because clouds:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDQ=",
      "description" : "Q2xvdWR5IG5pZ2h0cyBhcmUgd2FybWVyIHRoYW4gY2xlYXIgbmlnaHRzIGJlY2F1c2UsICB0aGUgY2xvdWQgY292ZXIgcHJvdmlkZXMgYSBzaGllbGQgd2hpY2ggYWN0IGFzIGFuIGluc3VsYXRvciAgYW5kIHN0b3JlIHVwIHRoZSBoZWF0IHJhZGlhdGVkIGJ5IHRoZSBlYXJ0aCBhbmQgZG8gbm90ICBwZXJtaXQgaGVhdCB0byBlc2NhcGUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " prevent clod waves from the sky from descending on earth ",
        "option2" : " reflect back the heat given off by earth ",
        "option3" : " produce heat and radiate it towards earth ",
        "option4" : " absorb heat from the atmosphere and send it towards "
      }
    },
    {
      "index" : 45,
      "question" : "The surface of a lake is frozen in severe winter, but the water at its bottom is still liquid. What is the reason ?   ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDQ1",
      "description" : "VGhlIGFub21hbG91cyBleHBlbnNpb24gb2Ygd2F0ZXIgYXMgaXQgY29vbHMgZnJvbSAgNMKwQyB0byAwwrBDIG1lYW5zIHRoYXQgdGhlIGRlbnNpdHkgb2Ygd2F0ZXIgaXMgZ3JlYXRlc3QgYXQgIDTCsEMuIFNvIHRoZSBpY2UgdGhhdCBmb3JtcyBpbiBjb2xkIHdlYXRoZXIgZm9ybXMgYXQgdGhlIHRvcCBvZiAgdGhlIHdhdGVyICh3aGVyZSB0aGUgbGVzcyBkZW5zZSBjb2xkZXN0IHdhdGVyIGdhdGhlcnMpIGFuZCAgdGhlbiBhY3RzIGFzIGFuIGluc3VsYXRpbmcgYmFycmllciBwcmV2ZW50aW5nIHRoZSB3YXRlciAgdW5kZXJuZWF0aCBmcm9tIGdldHRpbmcgbXVjaCBjb2xkZXIgKGJlY2F1c2UgaGVhdCBjYW5ub3QgIGVzY2FwZSkuICBDLiBPcHRpY3MgYW5kIFNvdW5kIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Ice is a bad conductor of heat. ",
        "option2" : " Since the surface of the lake is at the same temperature  as the air, no heat is lost. ",
        "option3" : " The density of water is maximum at 4°C. ",
        "option4" : " None of the statements (a), (b) and (c) given is correct. "
      }
    },
    {
      "index" : 46,
      "question" : "When the same note is played on a sitar and a flute, the sound produced can be distinguished from each other because of the difference in :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDY=",
      "description" : "U291bmRzIG1heSBiZSBnZW5lcmFsbHkgY2hhcmFjdGVyaXplZCBieSBwaXRjaCwgIGxvdWRuZXNzLCBhbmQgcXVhbGl0eS4gU291bmQgInF1YWxpdHkiIG9yICJ0aW1icmUiIGRlc2NyaWJlcyAgdGhvc2UgY2hhcmFjdGVyaXN0aWNzIG9mIHNvdW5kIHdoaWNoIGFsbG93IHRoZSBlYXIgdG8gIGRpc3Rpbmd1aXNoIHNvdW5kcyB3aGljaCBoYXZlIHRoZSBzYW1lIHBpdGNoIGFuZCBsb3VkbmVzcy4gIFF1YWxpdHkgaXMgdGhlbiBhIGdlbmVyYWwgdGVybSBmb3IgdGhlIGRpc3Rpbmd1aXNoYWJsZSAgY2hhcmFjdGVyaXN0aWNzIG9mIGEgdG9uZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " pitch, loudness and quality ",
        "option2" : " pitch and loudness ",
        "option3" : " quality only ",
        "option4" : " loudness only "
      }
    },
    {
      "index" : 47,
      "question" : "Assertion (A) : A diamond sparkles more than a glass imitation cut to the same shape. Reason (R) : The refractive index of diamond is less than that of glass. In context of the above two statements, which one of the following is correct?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDc=",
      "description" : "VGhpcyBpcyBhIHBoZW5vbWVub24gb2YgdG90YWwgaW50ZXJuYWwgcmVmbGVjdGlvbiBvZiAgbGlnaHQsIGRlcGVuZGVudCBvbiB0aGVgY3JpdGljYWwgYW5nbGUnIG9mIHRoZSBpbmNpZGVuY2Ugb2YgIGxpZ2h0IGluIGEgbWF0ZXJpYWwgbWVkaXVtIGF0IGl0cyBib3VuZGluZyBzdXJmYWNlIHdpdGggYWlyLiAgVGhlIGhpZ2hlciB0aGUgcmVmcmFjdGl2ZSBpbmRleCBvZiBhIHRyYW5zcGFyZW50IG1hdGVyaWFsIHRoZSAgc21hbGxlciBpcyB0aGUgY3JpdGljYWwgYW5nbGUgYW5kIGhlbmNlIHRoZSBsYXJnZXIgaXMgdGhlIHJhbmdlICBvZiBhbmdsZXMgb2YgaW5jaWRlbmNlIGZvciBtb3JlIGxpZ2h0IHRvIGJlIHRvdGFsbHkgcmVmbGVjdGVkLiAgQSBkaWFtb25kIGhhcyBhIGxhcmdlIHJlZnJhY3RpdmUgaW5kZXggYW5kIHZlcnkgc21hbGwgY3JpdGljYWwgIGFuZ2xlIGFzIGFnYWluc3QgZ2xhc3MsIHdoaWNoIGhhcyBhIGxvd2VyIHJlZnJhY3RpdmUgaW5kZXggIGFuZCBsYXJnZSBjcml0aWNhbCBhbmdsZS4gIEEgc2tpbGxlZCBkaWFtb25kIGN1dHRlciBleHBsb2l0cyB0aGUgbGFyZ2UgcmFuZ2Ugb2YgYW5nbGVzICBvZiBpbmNpZGVuY2UgaW4gdGhlIGRpYW1vbmQgdG8gY3V0IG11bHRpcGxlIGZhY2VzIGF0IHN1aXRhYmxlICBhbmdsZXMuIExpZ2h0IGVudGVyaW5nIGRpYW1vbmQgZnJvbSBkaWZmZXJlbnQgZmFjZXMsIHN1ZmZlcnMgIG11bHRpcGxlIHRvdGFsIGludGVybmFsIHJlZmxlY3Rpb24gYW5kIGNvbWVzIG91dCBvZiB0aGUgIGRpYW1vbmQgYXMgaW50ZW5zZSBiZWFtcyBmcm9tIHNlbGVjdGVkIGRpcmVjdGlvbnMuIEhlbmNlLCAgYSBkaWFtb25kIHNoaW5lcyBicmlsbGlhbnRseS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true and R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 48,
      "question" : "Optical fibre works on the principle of :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDg=",
      "description" : "QW4gb3B0aWNhbCBmaWJyZSBpcyBhIHRoaW4sIGZsZXhpYmxlLCB0cmFuc3BhcmVudCBmaWJyZSB0aGF0ICBhY3RzIGFzIGEgd2F2ZWd1aWRlIG9yICJsaWdodCBwaXBlIiB0byB0cmFuc21pdCBsaWdodCBiZXR3ZWVuICB0aGUgdHdvIGVuZHMgb2YgdGhlIGZpYnJlLiBBbiBvcHRpY2FsIGZpYnJlIHRyYW5zbWl0cyBsaWdodCAgYWxvbmcgaXRzIGF4aXMsIGJ5IHRoZSBwcm9jZXNzIG9mIHRvdGFsIGludGVybmFsIHJlZmxlY3Rpb24uICBXaGVuIGxpZ2h0IHRyYXZlbGluZyBpbiBhIGRlbnNlIG1lZGl1bSBoaXRzIGEgYm91bmRhcnkgYXQgIGFuIGFuZ2xlIGxhcmdlciB0aGFuIHRoZSAiY3JpdGljYWwgYW5nbGUiIGZvciB0aGUgYm91bmRhcnksICB0aGUgbGlnaHQgd2lsbCBiZSBjb21wbGV0ZWx5IHJlZmxlY3RlZC4gVGhpcyBlZmZlY3QgaXMgdXNlZCBpbiAgb3B0aWNhbCBmaWJyZXMgdG8gY29uZmluZSBsaWdodCBpbiB0aGUgY29yZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " total internal reflection ",
        "option2" : " refraction ",
        "option3" : " scattering ",
        "option4" : " interference "
      }
    },
    {
      "index" : 49,
      "question" : "Suppose a rocketship is receding from the earth at a speed of 2/10 th the velocity of light. A light in the rocketship appears blue to the passengers on the ship. What colour would it appear to an observer on the earth?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NDk=",
      "description" : "VGhlIG9ic2VydmVyIG9uIHRoZSBlYXJ0aCB3aWxsIGRldGVjdCBhIHdhdmVsZW5ndGggIGdpdmVuIGJ5ICAwbGFtYmRhIC0gbGFtYmRhICBsYW1iZGEgIHYgYz0gwrEgIHdoZXJlIGwgICA9IG9yaWdpbmFsIHdhdmVsZW5ndGggIGwwID0gYXBwYXJlbnQgd2F2ZWxlbmd0aCAgdiAgID0gdmVsb2NpdHkgb2Ygc291cmNlICBIZXJlLCBzb3VyY2UgaXMgcmVjZWRpbmcsIHRoZXJlZm9yZSArdmUgc2lnbiB3aWxsIGJlIHRha2VuICBRICAwbGFtYmRhIC0gbGFtYmRhMiBjICAxMCBsYW1iZGEgIGMgPSAgMCAwMiAyMSAgMTAgMTAgIGwgLSBsIGwgIMOeID0gw54gLSA9ICBsIGwgIDAgIDAgMCAgMiA4IDEwMSAxLjI1ICAxMCAxMCA4ICBsICDDniA9IC0gPSDDniBsID0gbCA9IGwgIGwgIFRoZSB3YXZlbGVuZ3RoIG9mIGJsdWUgbGlnaHQgdmFyaWVzIGZyb20gNDUwIG5tIHRvICA0NzUgbm0uIFRoZXJlZm9yZSwgdGhlIG9ic2VydmVkIGxpZ2h0IHdpbGwgaGF2ZSB3YXZlbGVuZ3RoICByYW5naW5nIGZyb20gNTYyLjUgbm0gdG8gNTkzLjc1IG5tIHdoaWNoIHdpbGwgYmUgeWVsbG93IG9yYW5nZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Blue ",
        "option2" : " Orange ",
        "option3" : " Yellow ",
        "option4" : " Yellow-orange "
      }
    },
    {
      "index" : 50,
      "question" : "An air bubble in water will act like a :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTA=",
      "description" : "QWlyIGJ1YmJsZSBpbiB3YXRlciB3b3VsZCBhY3QgYXMgYSBkaXZlcmdpbmcgbGVucywgIGJlY2F1c2UgdGhlIGluZGV4IG9mIHJlZnJhY3Rpb24gb2YgYWlyIGlzIGxlc3MgdGhhbiB0aGF0IG9mICB3YXRlci4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " convex mirror ",
        "option2" : " convex lens ",
        "option3" : " concave mirror ",
        "option4" : " concave lens "
      }
    },
    {
      "index" : 51,
      "question" : "When a mirror is rotated by an angle q, the reflected ray will rotate by :  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTE=",
      "description" : "Q29uc2lkZXIgYSBwbGFuZS1taXJyb3IgYW5kIGEgZml4ZWQgaW5jaWRlbnQgcmF5IG9mIGxpZ2h0LiAgQmVmb3JlIHRoZSBtaXJyb3IgaGFzIHJvdGF0ZWQsIHRoZSBhbmdsZSBvZiBpbmNpZGVuY2UgaXMgcSBhcyAgaXMgdGhlIGFuZ2xlIG9mIHJlZmxlY3Rpb24uIElmIHRoZSBtaXJyb3IgaXMgcm90YXRlZCB0aHJvdWdoIGFuICBhbmdsZSBmICB0aGUgbm9ybWFsIGlzIHJvdGF0ZWQgYnkgYW4gYW5nbGUgZiBhbmQgdGh1cyB0aGUgIGFuZ2xlIG9mIGluY2lkZW5jZSBpbmNyZWFzZXMgdG8gcSArIGYuIFRoZXJlZm9yZSwgdGhlIGFuZ2xlIG9mICByZWZsZWN0aW9uIG11c3QgYWxzbyBpbmNyZWFzZSBieSBmIHRvIHEgKyBmLiBUaGUgZGlmZmVyZW5jZSAgYmV0d2VlbiB0aGUgZmluYWwgYW5nbGUgb2YgcmVmbGVjdGlvbiBhbmQgdGhlIGluaXRpYWwgYW5nbGUgb2YgIHJlZmxlY3Rpb24gaXMgMmYuIFRodXMgZm9yIGEgZml4ZWQgaW5jaWRlbnQgcmF5LCB0aGUgYW5nbGUgb2YgdGhlICByZWZsZWN0aW9uIGlzIHR3aWNlIHRoZSBhbmdsZSB0aHJvdWdoIHdoaWNoIHRoZSBtaXJyb3IgaGFzIHJvdGF0ZWQuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 0° ",
        "option2" : " q/2 ",
        "option3" : " q ",
        "option4" : " 2q "
      }
    },
    {
      "index" : 52,
      "question" : "Total internal reflection can take place when light travels from:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTI=",
      "description" : "VG90YWwgaW50ZXJuYWwgcmVmbGVjdGlvbiBpcyBhbiBvcHRpY2FsIHBoZW5vbWVub24gdGhhdCAgaGFwcGVucyB3aGVuIGEgcmF5IG9mIGxpZ2h0IHN0cmlrZXMgYSBtZWRpdW0gYm91bmRhcnkgYXQgIGFuIGFuZ2xlIGxhcmdlciB0aGFuIGEgcGFydGljdWxhciBjcml0aWNhbCBhbmdsZSB3aXRoIHJlc3BlY3QgIHRvIHRoZSBub3JtYWwgdG8gdGhlIHN1cmZhY2UuIElmIHRoZSByZWZyYWN0aXZlIGluZGV4IGlzIGxvd2VyICBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgYm91bmRhcnksIG5vIGxpZ2h0IGNhbiBwYXNzIHRocm91Z2ggIGFuZCBhbGwgbGlnaHQgaXMgcmVmbGVjdGVkLiBUaGUgY3JpdGljYWwgYW5nbGUgaXMgdGhlIGFuZ2xlIG9mICBpbmNpZGVuY2UgYWJvdmUgd2hpY2ggdGhlIHRvdGFsIGludGVybmFsIHJlZmxlY3Rpb24gb2NjdXJzLiAgVG90YWwgaW50ZXJuYWwgcmVmbGVjdGlvbiB0YWtlcyBwbGFjZSB3aGVuIGxpZ2h0IHRyYXZlbHMgZnJvbSAgb3B0aWNhbGx5IGRlbnNlciBtZWRpdW0gdG8gb3B0aWNhbGx5IHJhcmVyIG1lZGl1bS4gIFJlZnJhY3RpdmUgaW5kZXggb2YgZGlhbW9uZCBpcyB2ZXJ5IGhpZ2ggKDIuNDE3KSB3aGVyZWFzICByZWZyYWN0aXZlIGluZGV4IG9mIGdsYXNzIGlzIG9ubHkgaW4gYmV0d2VlbiAoMS41IHRvIDEuNiksICB3aGVyZWFzIGluIHJlc3QgYWxsIG9wdGlvbnMgdGhlcmUgaXMgbm8gcG9zc2liaWxpdHkgb2YgdG90YWwgIGludGVybmFsIHJlZmxlY3Rpb24gYmVjYXVzZSByZWZyYWN0aXZlIGluZGV4IG9mICB3YXRlciAoMS4zMykgIGFuZCBhaXIgKDEuMDAwOCkgaXMgbGVzcyB0aGFuIHJlZnJhY3RpdmUgaW5kZXggb2YgZ2xhc3MuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " diamond to glass ",
        "option2" : " water to glass ",
        "option3" : " air to water ",
        "option4" : " air to glass "
      }
    },
    {
      "index" : 53,
      "question" : "Match List I (Quantity) with List II (Units) and select the correct answer using the codes given below the lists:  List-I List-II A. High speed 1. Mach B. Wavelength 2. Angstrom C. Pressure 3. Pascal D. Energy 4. Joule Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTM=",
      "description" : "TWFjaCBudW1iZXIgKE1hIG9yIE0pIGlzIHRoZSBzcGVlZCBvZiBhbiBvYmplY3QgIG1vdmluZyB0aHJvdWdoIGFpciwgb3IgYW55IG90aGVyIGZsdWlkIHN1YnN0YW5jZS4gSXQgaXMgIGNvbW1vbmx5IHVzZWQgdG8gcmVwcmVzZW50IHRoZSBzcGVlZCBvZiBhbiBvYmplY3Qgd2hlbiBpdCAgaXMgdHJhdmVsbGluZyBjbG9zZSB0byBvciBhYm92ZSB0aGUgc3BlZWQgb2Ygc291bmQuICBQcmVzc3VyZSBpcyB0aGUgZm9yY2UgcGVyIHVuaXQgYXJlYSBhcHBsaWVkIGluIGEgZGlyZWN0aW9uICBwZXJwZW5kaWN1bGFyIHRvIHRoZSBzdXJmYWNlIG9mIGFuIG9iamVjdC4gVGhlIFNJIHVuaXQgZm9yICBwcmVzc3VyZSBpcyB0aGUgcGFzY2FsIChQYSksIGVxdWFsIHRvIG9uZSBuZXd0b24gcGVyIHNxdWFyZSAgbWV0ZXIgKE4vbTIgKS4gIEluIHBoeXNpY3MsIHRoZSB3YXZlbGVuZ3RoIG9mIGEgc2ludXNvaWRhbCB3YXZlIGlzIHRoZSBzcGF0aWFsICBwZXJpb2Qgb2YgdGhlIHdhdmUtdGhlIGRpc3RhbmNlIG92ZXIgd2hpY2ggdGhlIHdhdmUncyAgc2hhcGUgcmVwZWF0cy4gVGhlIHVuaXQgZm9yIHdhdmVsZW5ndGggaXMgdGhlIGFuZ3N0cm9tLiAgSW4gcGh5c2ljcywgZW5lcmd5IGlzIGEgcXVhbnRpdHkgdGhhdCBpcyB0aGUgYWJpbGl0eSB0byBkbyAgd29yay4gSW4gdGhlIEludGVybmF0aW9uYWwgU3lzdGVtIG9mIFVuaXRzIChTSSksIGVuZXJneSBpcyAgbWVhc3VyZWQgaW4gam91bGVzLCBidXQgaW4gc29tZSBmaWVsZHMgb3RoZXIgdW5pdHMgc3VjaCBhcyAga2lsb3dhdHQtaG91cnMgYW5kIGtpbG9jYWxvcmllcyBhcmUgYWxzbyB1c2VkLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " A-2, B-1, C-3, D-4 ",
        "option2" : " A-1, B-2, C-4, D-3 ",
        "option3" : " A-1, B-2, C-3, D-4 ",
        "option4" : " A-2, B-1, C-4, D-3 "
      }
    },
    {
      "index" : 54,
      "question" : "Consider the following statements:   1. If a person looks at a coin which is in a bucket of water, the coin will appear to be closer than it really is. 2. If a person under water looks at a coin above the water surface, the coin will appear to be at a higher level than it really is. E B D _8 34 2 Physics E 5 Which of the above statements is/are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTQ=",
      "description" : "UmVmcmFjdGlvbiBpcyB0aGUgY2hhbmdlIGluIGRpcmVjdGlvbiBvZiBhIHdhdmUgZHVlIHRvICBhIGNoYW5nZSBpbiBpdHMgc3BlZWQuIFRoaXMgaXMgbW9zdCBjb21tb25seSBvYnNlcnZlZCAgd2hlbiBhIHdhdmUgcGFzc2VzIGZyb20gb25lIG1lZGl1bSB0byBhbm90aGVyIGF0IGFueSAgYW5nbGUgb3RoZXIgdGhhbiA5MMKwIG9yIDDCsC4gUmVmcmFjdGlvbiBvZiBsaWdodCBpcyB0aGUgbW9zdCAgY29tbW9ubHkgb2JzZXJ2ZWQgcGhlbm9tZW5vbi4gSW4gYm90aCBjYXNlcyB0aGUgIHBoZW5vbWVub24gb2YgcmVmcmFjdGlvbiBpcyBhcHBsaWNhYmxlIGJlY2F1c2UgdGhlcmUgd2lsbCAgYmUgYSBjaGFuZ2UgaW4gdGhlIGRpcmVjdGlvbiBhbmQgc3BlZWQgYXMgbGlnaHQgZW50ZXJzIGZyb20gIG9uZSBtZWRpYSB0byBvdGhlci4gSW4gY2FzZSAxIGxpZ2h0IGZvciBvYnNlcnZlciBvdXRzaWRlICBFICBCICBEICBfOCAgMzQgIDIgIFBoeXNpY3MgRSAxMyAgd2F0ZXIgdGhlIGxpZ2h0IHJheSBpcyB0cmF2ZWxsaW5nIGZyb20gZGVuc2VyIG1lZGl1bSAod2F0ZXIpICB0byByYXJlciBtZWRpdW0gKGFpcikuIFRodXMsIGltYWdlIG9mIGNvaW4gd2lsbCBhcHBlYXIgY2xvc2VyICBkdWUgdG8gcmVmcmFjdGlvbi4gV2hlcmVhcyBpbiBjYXNlIDIgZm9yIG9ic2VydmVyIHVuZGVyICB3YXRlciByZWZyYWN0aW9uIGFsc28gdGFrZXMgcGxhY2UgYnV0IGluIG9wcG9zaXRlIHdheSBhcyAgbGlnaHQgdHJhdmVscyBmcm9tIHJhcmVyIG1lZGl1bSAoYWlyKSB0byBkZW5zZXIgbWVkaXVtICh3YXRlcikgIC5UaHVzLCAgdGhlIGltYWdlIG9mIGNvaW4gd2lsbCBhcHBlYXIgYXQgYSBoaWdoZXIgbGV2ZWwgdGhhbiAgYWN0dWFsIHBvc2l0aW9uIG9mIGNvaW4uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 alone ",
        "option3" : " 2 alone ",
        "option4" : " neither 1 nor 2 "
      }
    },
    {
      "index" : 55,
      "question" : "A noise level of 100 decibel would correspond to:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTU=",
      "description" : "VGhlIGRlY2liZWwgaXMgd2lkZWx5IGtub3duIGFzIGEgbWVhc3VyZSBvZiBzb3VuZCAgcHJlc3N1cmUgbGV2ZWwsIGJ1dCBpcyBhbHNvIHVzZWQgZm9yIGEgd2lkZSB2YXJpZXR5IG9mIG90aGVyICBtZWFzdXJlbWVudHMgaW4gc2NpZW5jZSBhbmQgZW5naW5lZXJpbmcuIFRoZSBkZWNpYmVsIGlzICBjb21tb25seSB1c2VkIGluIGFjb3VzdGljcyB0byBxdWFudGlmeSBzb3VuZCBsZXZlbHMgIHJlbGF0aXZlIHRvIGEgMCBkQiByZWZlcmVuY2Ugd2hpY2ggaGFzIGJlZW4gZGVmaW5lZCBhcyBhICBzb3VuZCBwcmVzc3VyZSBsZXZlbCBvZiAuMDAwMiBtaWNyb2Jhci4gVGhlIG5vaXNlIGxldmVsIG9mICAxMDAgZGVjaWJlbCB3b3VsZCBjb3JyZXNwb25kcyB0byBub2lzZSBmcm9tIGEgbWFjaGluZSAgc2hvcC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Just audible sound ",
        "option2" : " Ordinary conversation ",
        "option3" : " Sound from a noisy street ",
        "option4" : " Noise from a machine shop "
      }
    },
    {
      "index" : 56,
      "question" : "Assertion (A) : In a motion picture, usually 24 frames are projected every second over the whole length of the film. Reason (R) : An image formed on the retina of eye persists for about 0.1 s after the removal of stimulus.              Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTY=",
      "description" : "QSBpcyBjb3JyZWN0IGJ1dCBhbiBpbWFnZSBmb3JtZWQgb24gdGhlIHJldGluYSBvZiBleWUgIHBlcnNpc3RzIGZvciBhYm91dCAxIHNlYygwLjA2c2VjKSAgMTYgIGFmdGVyIGl0IGNoYW5nZXMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 57,
      "question" : "Assertion (A) : Small glass beads fixed on traffic signals glow brightly when light falls upon them. Reason (R) : Light is totally reflected when the angle of incidence exceeds a certain critical value and light travelling in a denser medium is reflected from a rarer medium.   Codes : ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTc=",
      "description" : "Qm90aCBvZiB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdCBhbmQgc3RhdGVtZW50IDIgaXMgIGFsc28gY29ycmVjdCBleHBsYW5hdGlvbiBmb3Igc3RhdGVtZW50IDEuIFRvdGFsIGludGVybmFsICByZWZsZWN0aW9uIGlzIGFuIG9wdGljYWwgcGhlbm9tZW5vbiB0aGF0IGhhcHBlbnMgd2hlbiBhICByYXkgb2YgbGlnaHQgc3RyaWtlcyBhIG1lZGl1bSBib3VuZGFyeSBhdCBhbiBhbmdsZSBsYXJnZXIgIHRoYW4gYSBwYXJ0aWN1bGFyIGNyaXRpY2FsIGFuZ2xlIHdpdGggcmVzcGVjdCB0byB0aGUgbm9ybWFsIHRvICB0aGUgc3VyZmFjZS4gSWYgdGhlIHJlZnJhY3RpdmUgaW5kZXggaXMgbG93ZXIgb24gdGhlIG90aGVyIHNpZGUgIG9mIHRoZSBib3VuZGFyeSwgbm8gbGlnaHQgY2FuIHBhc3MgdGhyb3VnaCBhbmQgYWxsIG9mIHRoZSAgbGlnaHQgaXMgcmVmbGVjdGVkLiBUaHVzIGJlY2F1c2Ugb2YgdGhpcyBwaGVub21lbmEgdHJhZmZpYyAgbGlnaHQgYmVhZHMgZ2xvdyB3aGVuIGxpZ2h0IGZhbGxzIG9uIHRoZW0uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 58,
      "question" : "When a CD (compact disc used in audio and video systems) is seen in sunlight, rainbow like colours are seen. This can be explained on the basis of the phenomenon of :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTg=",
      "description" : "VGhlIHJlYXNvbiBDRHMgcmVmbGVjdCByYWluYm93IGNvbG9ycyBpcyBiZWNhdXNlIHRoZXkgIGhhdmUgYSBjbGVhciBwbGFzdGljIGNvYXRpbmcgb24gdG9wIG9mIGEgbWlycm9yaXplZCBzdXJmYWNlLiBMaWdodCAgcmVmcmFjdHMgKGJlbmRzKSB3aGVuIGl0IG1vdmVzIGZyb20gb25lIG1lZGl1bSAoc3VjaCBhcyBhaXIpICB0byBhbm90aGVyIHdpdGggYSBkaWZmZXJlbnQgb3B0aWNhbCBkZW5zaXR5IChzdWNoIGFzIHRoZSBjbGVhciAgcGxhc3RpYyBzdXJmYWNlIG9mIGEgQ0QpLiBEaWZmZXJlbnQgd2F2ZSBsZW5ndGhzIG9mIGxpZ2h0IChldmVyeSAgY29sb3IgaGFzIGEgZGlmZmVyZW50IHdhdmUgbGVuZ3RoKSB0cmF2ZWwgYXQgZGlmZmVyZW50IHNwZWVkcywgc28gIHRoYXQgIGZ1bGwgc3BlY3RydW0gYXBwZWFycyB3aGVuIHdoaXRlIGxpZ2h0IHBhc3NlcyBmcm9tIHRoZSBhaXIgIHRocm91Z2ggdGhlIHBsYXN0aWMgc3VyZmFjZSBvZiBhIENELCBzZXBhcmF0ZWQgbGlnaHQgcmF5cyB3aGljaCAgYXJlIHRoZW4gcmVmbGVjdGVkIGJhY2sgdG8gdXMgYnkgdGhlIG1pcnJvcml6ZWQgY2VudGVyIHN1cmZhY2UgIG9mIGEgQ0QuIEhlcmUgdGhlIGRpZmZyYWN0aW9uIGFuZCB0cmFuc21pc3Npb24gYWxzbyB0YWtlcyAgcGxhY2UgYmVjYXVzZSBkaWZmcmFjdGlvbiBvZiBsaWdodCByYXlzIG9jY3VyIHdoZW4gaXQgc3RyaWtlcyAgdGhlIHN1cmZhY2Ugb2YgQ0QgYW5kIHRyYW5zbWlzc2lvbiBpcyBvYnZpb3VzIHdoZW4gbGlnaHQgIGVudGVycyBmcm9tIG9uZSBtZWRpdW0gdG8gYW5vdGhlci4gVGhlIHRoaWNrbmVzcyBvZiB0aGUgIGRpZmZlcmVudCBvcHRpY2FsIG1lZGlhLCBhbmdsZSBvZiBzb3VyY2UgbGlnaHQsIGFuZCBicmlnaHRuZXNzICBvZiBzb3VyY2UgbGlnaHQgYWxsIGFmZmVjdCB3aGljaCByYWluYm93IHBhdHRlcm5zIGFyZSB2aXNpYmxlICBvbiBhIENELiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " reflection and diffraction ",
        "option2" : " reflection and transmission ",
        "option3" : " diffraction and transmission ",
        "option4" : " refraction, diffraction and transmission "
      }
    },
    {
      "index" : 59,
      "question" : "Assertion (A) : A stick is dipped in water in a slanting position. If observed sideways, the stick appears short and bent at the surface of water. Reason (R) : A light coming from the stick undergoes scattering from water molecules giving the stick a short and bent appearance.  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NTk=",
      "description" : "U3RhdGVtZW50IDEgaXMgdHJ1ZSBidXQgc3RhdGVtZW50IDIgaXMgZmFsc2UuIFllcyB0aGUgIHN0aWNrIGRpcHBlZCBpbiB3YXRlciBhcHBlYXJzIHRvIGJlIGJlbnQgYW5kIHNob3J0IGJ1dCAgcmVmcmFjdGlvbiBvZiBsaWdodCBieSB3YXRlciBtb2xlY3VsZXMgaXMgdGhlIHBoZW5vbWVuYSAgcmVzcG9uc2libGUgZm9yIHRoaXMgb2JzZXJ2YXRpb24gbm90IGJlY2F1c2Ugb2Ygc2NhdHRlcmluZyAgb2YgbGlnaHQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 60,
      "question" : "When light waves pass from air to glass, the variables affected are:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjA=",
      "description" : "V2hlbiBsaWdodCBlbnRlcnMgZnJvbSByYXJlciAoYWlyKSB0byBkZW5zZXIgKGdsYXNzKSAgbWVkaXVtIHdhdmVsZW5ndGggYW5kIHZlbG9jaXR5IHdpbGwgZ2V0IGFmZmVjdGVkLiBUaGUgIHZlbG9jaXR5IHdpbGwgZGVjcmVhc2UuIE1vcmVvdmVyLCBhcyB0aGUgcmF5IGJlbnQgaW4gcGFzc2luZyAgdGhyb3VnaCBkaWZmZXJlbnQgbWVkaWEgd2hpY2ggcmVzdWx0cyBpbiAgZGVjcmVhc2Ugb2YgIHdhdmVsZW5ndGguIEFzIHN1Y2ggdGhlcmUgaXMgbm8gY2hhbmdlIGluIGZyZXF1ZW5jeSB3aGVuICBsaWdodCBlbnRlcnMgZnJvbSBhaXIgdG8gZ2xhc3MuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " wavelength, frequency and velocity ",
        "option2" : " velocity and frequency ",
        "option3" : " wavelength and frequency ",
        "option4" : " wavelength and velocity "
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements:  1. Light of longer wavelength are scattered much more than the light of shorter wavelength. 2. The speed of visible light in water is 0.95 times the speed in vacuum. 3. Radio waves are produced by rapidly oscillating electrical currents. 4. To detect the overspeeding vehicles, police use the Doppler effect of reflected short radio waves. Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjE=",
      "description" : "UmFkaW8gd2F2ZXMgYXJlIGEgZm9ybSBvZiBlbGVjdHJvbWFnbmV0aWMgcmFkaWF0aW9uLCAgY3JlYXRlZCB3aGVuZXZlciBhIGNoYXJnZWQgb2JqZWN0IChpbiBub3JtYWwgcmFkaW8gIHRyYW5zbWlzc2lvbiwgYW4gZWxlY3Ryb24pIGFjY2VsZXJhdGVzIHdpdGggYSBmcmVxdWVuY3kgdGhhdCAgbGllcyBpbiB0aGUgcmFkaW8gZnJlcXVlbmN5IChSRikgcG9ydGlvbiBvZiB0aGUgZWxlY3Ryb21hZ25ldGljICBzcGVjdHJ1bS4gVGh1cyBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgVGhlIERvcHBsZXIncyBFZmZlY3QgIHNob3dzIGEgY2hhbmdlIGluIGEgd2F2ZSdzIGZyZXF1ZW5jeSByZWNlaXZlZCB3aGVuIGl0IGlzICBlaXRoZXIgcmVmbGVjdGVkIGZyb20gYSBtb3Zpbmcgb2JqZWN0IG9yIGdlbmVyYXRlZCBvbiBhICBtb3Zpbmcgb2JqZWN0LiBQb2xpY2UgcmFkYXIgc3BlZWQgZGV0ZWN0b3JzIGJvdW5jZSBhIHJhZGlvICBmcmVxdWVuY3kgd2F2ZSBvZmYgY2FycyBhbmQgdXNlIHRoZWlyIGludGVybmFsIGVsZWN0cm9uaWNzICB0byBkZXRlcm1pbmUgdGhlIHNwZWVkIGF0IHdoaWNoIHRoZSBvYmplY3QgaXMgbW92aW5nIGJ5ICB0aGF0IGZyZXF1ZW5jeSBjaGFuZ2UuIFRoZXJlZm9yZSwgc3RhdGVtZW50IDQgaXMgYWxzbyBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following natural phenomena:  1. Terrestrial heating 2. Reflection of light 3. Refraction of light 4. Diffraction of light Due to which of these phenomena is a mirage formed ? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjI=",
      "description" : "Q29udmVjdGlvbiBjdXJyZW50cyBvZiBob3QgYWlyIHJpc2luZyBvZmYgYSBzdXJmYWNlIGhhdmUgIGEgbG93ZXIgZGVuc2l0eSB0aGFuIHRoZSBhaXIgZGlyZWN0bHkgYWJvdmUgaXQuIFRoZSBkaWZmZXJlbmNlICBpbiBkZW5zaXR5IGNhdXNlIGxpZ2h0IHBhc3NpbmcgdGhyb3VnaCB0aGUgYWlyIHRvIHJlZnJhY3QgIGRpZmZlcmVudGx5LCB3aGljaCBjYXVzZXMgdGhlIGZvcm1hdGlvbiBvZiBtaXJhZ2UuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1 and 3 ",
        "option4" : " 4 only "
      }
    },
    {
      "index" : 63,
      "question" : "Diffusion of light in the atmosphere takes place due to : (a) carbon dioxide (b) dust particles   ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjM=",
      "description" : "RHVzdCBwYXJ0aWNsZXMgYXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgZGlmZnVzaW9uIG9mIGxpZ2h0ICBpbiBhdG1vc3BoZXJlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The velocity of sound in air increases with the increase  of temperature ",
        "option2" : " The velocity of sound in air is independent of pressure ",
        "option3" : " helium ",
        "option4" : " water vapours  64. Which one of the following statements is not correct? "
      }
    },
    {
      "index" : 65,
      "question" : "In which one among the following is the speed of sound maximum?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjU=",
      "description" : "VGhlIHNwZWVkIG9mIHNvdW5kIGlzIHRoZSBkaXN0YW5jZSB0cmF2ZWxsZWQgZHVyaW5nIGEgIHVuaXQgb2YgdGltZSBieSBhIHNvdW5kIHdhdmUgcHJvcGFnYXRpbmcgdGhyb3VnaCBhbiBlbGFzdGljICBtZWRpdW0uIEluIGRyeSBhaXIgYXQgMjAgwrBDICg2OCDCsEYpLCB0aGUgc3BlZWQgb2Ygc291bmQgaXMgMzQzLjIgIG1ldHJlcyBwZXIgc2Vjb25kICgxLDEyNiBmdC9zKS4gSW4gZnJlc2ggd2F0ZXIsIHNvdW5kIHRyYXZlbHMgYXQgIGFib3V0IDE0OTcgbS9zIGF0IDI1IMKwQy4gVGhlIHZhbHVlIG9mIDMzMS4zIG0vcyAgd2hpY2ggIHJlcHJlc2VudHMgdGhlIDAgwrBDIHNwZWVkLiBUaGUgc3BlZWQgb2Ygc291bmQgYXQgMTAwIMKwQyBpcyAgMzg2IG0vcy4gVGhlIHNwZWVkIG9mIHNvdW5kIGluIHdvb2QgaXMgMzMwMCAtIDM2MDAgbS9zLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Air at 0°C ",
        "option2" : " Air at 100°C ",
        "option3" : " Water ",
        "option4" : " Woo "
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements:  1. If magenta and yellow coloured circles intersect, the intersected area will have red colour. 2. If cyan and magenta coloured circles intersect, the intersected area will have blue colour. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NjY=",
      "description" : "Q29tYmluYXRpb24gb2YgcmVkIGFuZCBibHVlIGNvbG91ciByZXN1bHRzIGludG8gIGZvcm1hdGlvbiBvZiBtYWdlbnRhIGNvbG91ci4gV2hlcmUgYXMgY29tYmluYXRpb24gb2YgcmVkICBhbmQgZ3JlZW4gY29sb3VyIHJlc3VsdHMgaW4gdG8gZm9ybWF0aW9uIG9mIHllbGxvdyBjb2xvdXIuICBUaHVzIG9uIGNvbWJpbmF0aW9uIG9mIG1hZ2VudGEgYW5kIHllbGxvdyBjb2xvdXIgcmVkICBjb2xvdXIgd2lsbCBiZSBoaWdobGlnaHRlZC4gT24gdGhlIG90aGVyICBzaWRlIGNvbWJpbmF0aW9uICBvZiBibHVlIGFuZCBncmVlbiByZXN1bHRzIGludG8gZm9ybWF0aW9uIG9mIGN5YW4gY29sb3VyLiAgQ29tYmluYXRpb24gb2YgcmVkIGFuZCBibHVlIGNvbG91ciBwcm9kdWNlIG1hZ2VudGEgY29sb3VyLiAgVGhlcmVmb3JlLCBvbiBjb21iaW5hdGlvbiBvZiBjeWFuIGFuZCBtYWdlbnRhIGNvbG91cnMgIGJsdWUgY29sb3VyIHdpbGwgYmUgbW9yZSBoaWdobGlnaHRlZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements:  1. A flute of smaller length produces waves of lower frequency. 2. Sound travels in rocks in the form of longitudinal elastic waves only. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Njc=",
      "description" : "VGhlIGZsdXRlIGlzIGEgbXVzaWNhbCBpbnN0cnVtZW50IG9mIHRoZSB3b29kd2luZCAgZmFtaWx5LiBBIGZsdXRlIG9mIHNtYWxsZXIgbGVuZ3RoIHByb2R1Y2VzIHdhdmVzIG9mIGhpZ2hlciAgZnJlcXVlbmN5LiBTb3VuZCB3YXZlcyB0cmF2ZWxzIHRocm91Z2ggbWVkaXVtIHJvY2tzIGluICB0aGUgZm9ybSBvZiBsb25naXR1ZGluYWwgYXMgd2VsbCBhcyB0cmFuc3ZlcnNlIHdhdmVzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 68,
      "question" : "Assertion (A) : A jet aircraft moving at Mach Number equal to 1 travels faster at an altitude of 15 km than while moving at Mach Number equal to 1 near the sea level. Reason (R) : The velocity of sound depends on the temperature of the surrounding medium.  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Njg=",
      "description" : "TWFjaCBudW1iZXIsIGEgdXNlZnVsIHF1YW50aXR5IGluIGFlcm9keW5hbWljcywgaXMgIHRoZSByYXRpbyBvZiBhaXIgc3BlZWQgdG8gdGhlIGxvY2FsIHNwZWVkIG9mIHNvdW5kLiBUaGUgc3BlZWQgIG9mIHNvdW5kIHZhcmllcyB3aXRoIHRlbXBlcmF0dXJlLiBTaW5jZSB0ZW1wZXJhdHVyZSBhbmQgIHNvdW5kIHZlbG9jaXR5IG5vcm1hbGx5IGRlY3JlYXNlIHdpdGggaW5jcmVhc2luZyBhbHRpdHVkZSwgIHNvdW5kIGlzIHJlZnJhY3RlZCB1cHdhcmQuIE1hY2ggbnVtYmVyIGlzIGEgZnVuY3Rpb24gb2YgIHRlbXBlcmF0dXJlIGF0IGFsdGl0dWRlLiBXaXRoIGRlY3JlYXNlIGluIHNvdW5kIHZlbG9jaXR5ICBNYWNoIG51bWJlciBpbmNyZWFzZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A are R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 69,
      "question" : "Assertion (A): Radio waves bend in a magnetic field. Reason (R): Radio waves are electromagnetic in nature.  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Njk=",
      "description" : "UmFkaW8gd2F2ZXMgYXJlIGEgdHlwZSBvZiBlbGVjdHJvbWFnbmV0aWMgcmFkaWF0aW9uLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A are R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 70,
      "question" : "Which one of the following types of waves are used in a night vision apparatus?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NzA=",
      "description" : "TmlnaHQgVmlzaW9uIGFzIHJlZmVyZW5jZWQgaGVyZSBpcyB0aGF0IHRlY2hub2xvZ3kgdGhhdCAgcHJvdmlkZXMgdXMgd2l0aCB0aGUgbWlyYWNsZSBvZiB2aXNpb24gaW4gdG90YWwgZGFya25lc3MgYW5kICB0aGUgaW1wcm92ZW1lbnQgb2YgdmlzaW9uIGluIGxvdyBsaWdodCBlbnZpcm9ubWVudHMuIEluZnJhLSAgcmVkIHdhdmVzIGFyZSB1c2VkIGluIG5pZ2h0IHZpc2lvbiBhcHBhcmF0dXMuICAgRSAxNCA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Radio waves ",
        "option2" : " Microwaves ",
        "option3" : " Infra-red waves ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 71,
      "question" : "Consider the figure given below and answer the item that follows: P2 P1O S In the  figure  shown above,  OP1 and  OP2 are two plane mirrors kept perpendicular to each other. S is the direction of a beam of light falling on the mirror OP1. The direction of the reflected beam of light from the mirror OP2 will be:  ",
      "questionId" : "WzIwMTEgLSBJSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljc3w3MQ==",
      "description" : "UDIgIFAxTyAgSW4gdGhlIGFib3ZlIGZpZ3VyZSwgZG90dGVkIGxpbmUgc2hvd3MgdGhlIHJlZmxlY3RlZCBiZWFtIG9mICBsaWdodCBmcm9tIG1pcnJvciBPUDIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljcw==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Perpendicular to the direction S. ",
        "option2" : " At 45° to the direction S. ",
        "option3" : " Opposite and parallel to the direction S. ",
        "option4" : " At 60° to the direction S. "
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following phenomena:  1. Size of the sun at dusk. 2. Colour of the sun at dawn 3. Moon being visible at dawn 4. Twinkle of stars in the sky 5. Polestar being visible in the sky Which of the above are optical illusions? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDcy",
      "description" : "U2l6ZSBvZiB0aGUgU3VuIGF0IGR1c2sgaXMgYW4gb3B0aWNhbCBpbGx1c2lvbiBiZWNhdXNlIG9mICBhdG1vc3BoZXJpYyByZWZyYWN0aW9uLiBDb2xvdXIgb2YgdGhlIHN1biBhcHBlYXJzIHllbGxvdyAgZHVlIHRvIHNjYXR0ZXJpbmcgd2hlcmVhcyBwdXJlIHN1bmxpZ2h0IGlzIHdoaXRlIGluIGNvbG91ci4gIFR3aW5rbGluZyBvZiBzdGFycyBpcyBhbiBvcHRpY2FsIGlsbHVzaW9uLiBBaXIgd2hpcmxwb29scyBtYWtlICB0aGUgc3RhcnMgdHdpbmtsZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 3, 4 and 5 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 2, 3 an 5 "
      }
    },
    {
      "index" : 73,
      "question" : "Rainbow is produced when sunlight falls on drops of rain. Which of the following physical phenomena are responsible for this?  1. Dispersion 2. Refraction 3. Internal reflection Select the correct answer using the codes below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDcz",
      "description" : "Rm9ybWF0aW9uIG9mIHJhaW5ib3cgaW52b2x2ZXMgYWxsIGRpc3BlcnNpYW4sIHJlZnJhY3Rpb24gIGFuZCBpbnRlcm5hbCByZWZsZWN0aW9uLiAgTGlnaHQgZnJvbSBzdW4gIFJlZnJhY3Rpb24gIEludGVybmFsICAgcmVmcmFjdGlvbiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 74,
      "question" : "During a thunderstorm, the thunder in the skies is produced by the  1. meeting of cumulonimbus clouds in the sky 2. lightning that separates the nimbus clouds 3. violent upward movement of air and water particles Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDc0",
      "description" : "VGh1bmRlcnN0b3JtcyAgcmVzdWx0ICBmcm9tICB0aGUgIHJhcGlkICB1cHdhcmQgIG1vdmVtZW50ICBvZiAgd2FybSwgIG1vaXN0IGFpci4gIFRoZXkgIGNhbiAgb2NjdXIgIGluc2lkZSAgd2FybSwgIG1vaXN0ICBhaXIgbWFzc2VzIGFuZCBhdCBmcm9udHMuIEFzIHRoZSB3YXJtLCBtb2lzdCBhaXIgIG1vdmVzIHVwd2FyZCwgaXQgY29vbHMsIGNvbmRlbnNlcywgYW5kIGZvcm1zICBjdW11bG9uaW1idXMgY2xvdWRzIHRoYXQgY2FuIHJlYWNoIGhlaWdodHMgb2Ygb3ZlciAyMCBrbSAgKDEyLjQ1IG1pbGVzKS4gVGhlIHRodW5kZXJzdG9ybXMgYXJlIGFzc29jaWF0ZWQgd2l0aCB0aGUgIGN1bXVsb25pbWJ1cyBjbG91ZHMuIFRoZXNlICBjbG91ZHMgbm9ybWFsbHkgZm9ybSBvbiB3YXJtICBzdW5ueSBkYXlzIGJ1dCB0aGV5IGNhbiBhbHNvIGJlIGZvdW5kIG9uIGNvbGQgZnJvbnQuIEJ1dCAgdGhpcyBxdWVzdGlvbiBpcyBhc2tpbmcgYWJvdXQgdGhlIFRodW5kZXIgaS5lLiB0aGUgc291bmQgIHByb2R1Y2VkLiBUaGUgbGlnaHRuaW5nIGdlbmVyYXRlcyBiZXR3ZWVuIDEwMCBtaWxsaW9uIGFuZCAgMSBiaWxsaW9uIHZvbHRzIG9mIGVsZWN0cmljaXR5IGFuZCBjYW4gaGVhdCB0aGUgYWlyIHRvIGFyb3VuZCAgNTBLwrBGLiBUaGUgcmFwaWQgZXhwYW5zaW9uIGNhdXNlcyB0aGUgc2hvY2sgd2F2ZXMuICBUaHVuZGVyIGhhcHBlbnMgYmVjYXVzZSB0aGUgbGlnaHRuaW5nIHdvdWxkIGhlYXQgdGhlIGFpciAgYXQgaHVnZSB0ZW1wZXJhdHVyZXMgYW5kIHRoZSBhaXIgZXhwYW5kcyBzbyBmYXN0IHRoYXQgaXQgIG1ha2UgYSBsb3VkIGNsYXAgb2YgdGh1bmRlci4gIEQuIEVsZWN0cmljaXR5IGFuZCBNYWduZXRpc20g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " None of the above produces the thunder "
      }
    },
    {
      "index" : 75,
      "question" : "Assertion (A): Transformer is useful for stepping up or stepping down voltages. Reason (R): Transformer is a device used in D.C. circuits. In the context of the above two statements, which one of the following is correct?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NzU=",
      "description" : "QSB0cmFuc2Zvcm1lciBpcyBhIGRldmljZSB0aGF0IHRyYW5zZmVycyBlbGVjdHJpY2FsIGVuZXJneSAgZnJvbSBvbmUgY2lyY3VpdCB0byBhbm90aGVyIHRocm91Z2ggaW5kdWN0aXZlbHkgY291cGxlZCAgY29uZHVjdG9ycy10aGUgdHJhbnNmb3JtZXIncyBjb2lscy4gQSB2YXJ5aW5nIGN1cnJlbnQgaW4gIHRoZSBmaXJzdCBvciBwcmltYXJ5IHdpbmRpbmcgY3JlYXRlcyBhIHZhcnlpbmcgbWFnbmV0aWMgZmx1eCAgaW4gdGhlIHRyYW5zZm9ybWVyJ3MgY29yZSBhbmQgdGh1cyBhIHZhcnlpbmcgbWFnbmV0aWMgZmllbGQgIHRocm91Z2ggdGhlIHNlY29uZGFyeSB3aW5kaW5nLiBUaGlzIHZhcnlpbmcgbWFnbmV0aWMgZmllbGQgIGluZHVjZXMgYSB2b2x0YWdlIGluIHRoZSBzZWNvbmRhcnkgd2luZGluZy4gQnkgYXBwcm9wcmlhdGUgIHNlbGVjdGlvbiBvZiB0aGUgcmF0aW8gb2YgdHVybnMsIGEgdHJhbnNmb3JtZXIgdGh1cyBhbGxvd3MgYW4gIGFsdGVybmF0aW5nIGN1cnJlbnQgKEFDKSBvciB2b2x0YWdlIHRvIGJlICJzdGVwcGVkIHVwIiBieSAgbWFraW5nIE5zIGdyZWF0ZXIgdGhhbiBOcCBvciAic3RlcHBlZCBkb3duIiBieSBtYWtpbmcgTnMgIGxlc3MgdGhhbiBOcC4gIEhlcmUgTnAgcmVwcmVzZW50cyBudW1iZXIgb2YgdHVybnMgaW4gcHJpbWFyeSB3aW5kaW5nLiAgTnMgcmVwcmVzZW50cyB0aGUgIG51bWJlciBvZiB0dXJucyBpbiBzZWNvbmRhcnkgd2luZGluZy4gIEFzIGl0IGlzIGNsZWFyIGZyb20gcHJpbmNpcGxlIGludm9sdmVkIHRoYXQgdHJhbnNmb3JtZXIgY2FuIGJlICB1c2VkIHRvIHN0ZXAgdXAgYW5kIHN0ZXAgZG93biBBLkMuIHZvbHRhZ2Ugb25seS4gVGhpcyAgZGV2aWNlIGNhbiBub3QgYmUgdXNlZCBmb3IgRC5DLiB2b2x0YWdlIGFzIGl0cyB3b3JraW5nIGlzICBiYXNlZCBvbiB0aGUgY2hhbmdlIG9mIG1hZ25ldGljIGZsdXggd2l0aCB2YXJ5aW5nIGN1cnJlbnQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 76,
      "question" : "Domestic electrical wiring is basically a :  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8NzY=",
      "description" : "SW4gYSBwYXJhbGxlbCBjaXJjdWl0LCB0aGUgdm9sdGFnZSBhY3Jvc3MgZWFjaCBvZiB0aGUgIGNvbXBvbmVudHMgaXMgdGhlIHNhbWUsIGFuZCB0aGUgdG90YWwgY3VycmVudCBpcyB0aGUgc3VtIG9mICB0aGUgY3VycmVudHMgdGhyb3VnaCBlYWNoIGNvbXBvbmVudC4gVGhlIHdpcmluZyBmb3IgbW9zdCAgaG9tZXMgaXMgcGFyYWxsZWwgLkluIHBhcmFsbGVsIGNpcmN1aXQgZWFjaCBicmFuY2ggcmVjZWl2ZXMgIGVxdWFsIGN1cnJlbnQuIElmIG9uZSBicmFuY2ggaW4gdGhlIGNpcmN1aXQgaXMgYnJva2VuLCBlbGVjdHJpYyAgY3VycmVudCB3aWxsIHN0aWxsIGZsb3cgaW4gb3RoZXIgYnJhbmNoZXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " series connection ",
        "option2" : " parallel connection ",
        "option3" : " combination of series and parallel connections ",
        "option4" : " series connection within each room and parallel "
      }
    },
    {
      "index" : 77,
      "question" : "Which one of the following is paramagnetic in nature?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Nzc=",
      "description" : "SXJvbiA9IEZlcnJvbWFnbmV0aWMgIEh5ZHJvZ2VuID0gRGlhbWFnbmV0aWMgIE94eWdlbiA9IFBhcmFtYWduZXRpYyAgTml0cm9nZW4gPSBEaWFtYWduZXRpYyA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Iron ",
        "option2" : " Hydrogen ",
        "option3" : " Oxygen ",
        "option4" : " Nitrogen "
      }
    },
    {
      "index" : 78,
      "question" : "A fuse is used in mains electric supply as a safety device. Which one of the following statements about the fuse is correct?  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Nzg=",
      "description" : "QSBmdXNlIGlzIGEgdHlwZSBvZiBzYWNyaWZpY2lhbCBvdmVyY3VycmVudCBwcm90ZWN0aW9uICBkZXZpY2UuIEl0cyBlc3NlbnRpYWwgY29tcG9uZW50IGlzIGEgbWV0YWwgd2lyZSBvciBzdHJpcCB0aGF0ICBtZWx0cyB3aGVuIHRvbyBtdWNoIGN1cnJlbnQgZmxvd3MuIFNob3J0IGNpcmN1aXQsIG92ZXJsb2FkICBvciBkZXZpY2UgZmFpbHVyZSBpcyBvZnRlbiB0aGUgcmVhc29uIGZvciBleGNlc3NpdmUgY3VycmVudC4gIFRoZSByZXNpc3RhbmNlIG9mIHRoZSBlbGVtZW50IHVzZWQgaW4gZnVzZSBnZW5lcmF0ZXMgaGVhdCAgZHVlIHRvIHRoZSBjdXJyZW50IGZsb3cuIEl0IGhhcyBsb3cgbWVsdGluZyBwb2ludCBzbyB0aGF0IGl0ICBtZWx0cyB3aGVuIGEgc2hvcnQtY2lyY3VpdCBvciBvdmVybG9hZGluZyB0YWtlcyBwbGFjZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " It is connected in parallel with the main switch ",
        "option2" : " It is made mainly from silver alloys ",
        "option3" : " It must have a low melting point ",
        "option4" : " It must have very high resistance "
      }
    },
    {
      "index" : 79,
      "question" : "Assertion (A) : The temperature of a metal wire rises when an electric current is passed through it. Reason (R) : Collision of metal atoms with each other releases heat energy.   Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8Nzk=",
      "description" : "QSBtZXRhbGxpYyBjb25kdWN0b3IgaGFzIGEgbGFyZ2UgbnVtYmVyIG9mIGZyZWUgIGVsZWN0cm9ucyBpbiBpdC4gV2hlbiBhIHBvdGVudGlhbCBkaWZmZXJlbmNlIGlzIGFwcGxpZWQgYWNyb3NzICB0aGUgZW5kcyBvZiBhIG1ldGFsbGljIHdpcmUsIHRoZSBmcmVlIGVsZWN0cm9ucyBiZWdpbiB0byBkcmlmdCAgZnJvbSBhIHJlZ2lvbiBvZiBsb3cgcG90ZW50aWFsIHRvIGEgcmVnaW9uIG9mIGhpZ2ggcG90ZW50aWFsLiAgVGhlc2UgZWxlY3Ryb25zIGNvbGxpZGUgd2l0aCB0aGUgcG9zaXRpdmUgaW9ucyAodGhlIGF0b21zICB3aGljaCBoYXZlIGxvc3QgdGhlaXIgZWxlY3Ryb25zKS4gSW4gdGhlc2UgY29sbGlzaW9ucywgdGhlICBlbmVyZ3kgb2YgdGhlIGVsZWN0cm9uIGlzIHRyYW5zZmVycmVkIHRvIHRoZSBwb3NpdGl2ZSBpb25zICBhbmQgdGhleSBiZWdpbiB0byB2aWJyYXRlIG1vcmUgdmlvbGVudGx5LiBBcyBhIHJlc3VsdCwgaGVhdCBpcyAgcHJvZHVjZWQuIFRoZSBncmVhdGVyIHRoZSBudW1iZXIgb2YgZWxlY3Ryb25zIGZsb3dpbmcgcGVyICBzZWNvbmQsIHRoZSBncmVhdGVyIHdpbGwgYmUgdGhlIHJhdGUgb2YgY29sbGlzaW9ucyBhbmQgc28gIGdyZWF0ZXIgaXMgdGhlIGhlYXQgcHJvZHVjZWQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 80,
      "question" : "Consider the following statements:  An ordinary light bulb has a rather short life because the: 1. filament wire is not uniform. 2. bulb cannot be evacuated completely. 3. wires supporting the filament melt at high temperatures. Which of the above statements are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODA=",
      "description" : "VGhlIGVsZWN0cmljIGxpZ2h0IGJ1bGIgdXNlcyBhIGdsb3dpbmcgd2lyZSBmaWxhbWVudCAgaGVhdGVkIGJ5IGVsZWN0cmljYWwgcmVzaXN0YW5jZSB0byB3aGl0ZSB0byBnZW5lcmF0ZSBsaWdodCAoYSAgcHJvY2VzcyBrbm93biBhcyB0aGVybWFsIHJhZGlhdGlvbikuIFRoZSAnYnVsYicgaXMgdGhlIGdsYXNzICBlbmNsb3N1cmUgd2hpY2gga2VlcHMgdGhlIGZpbGFtZW50IGluIGEgdmFjdXVtIG9yIGxvdy0gIHByZXNzdXJlIG5vYmxlIGdhcy4gQ29tcGxldGUgZXZhY3VhdGlvbiBvZiBidWxiIGlzIG5vdCAgcG9zc2libGUuIEEgc21hbGwgcXVhbnRpdHkgb2YgZ2FzZXMgbGVmdCBiZWhpbmQgd2hpY2ggIGV4cGFuZHMgb24gaGVhdGluZyBieSBoZWF0IHRocm91Z2ggZmlsYW1lbnQuIE1vcmVvdmVyLCAgdGhlIHdpcmVzIHN1cHBvcnRpbmcgdGhlIGZpbGFtZW50IHNvbWV0aW1lcyBtZWx0IGR1ZSB0byAgaGlnaCBoZWF0IGdlbmVyYXRlZCBhcyBhIHJlc3VsdCBvZiBoaWdoIHJlc2lzdGFuY2Ugb2YgZmlsYW1lbnQuICBUaHVzLCB0aGVzZSBmYWN0b3JzIGxlYWRzIHRvIHNob3J0IGxpZmUgc3BhbiBvZiBvcmRpbmFyeSBidWxiLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 2 ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following statements regarding a motor car battery:  1. The voltage is usually 12 V. 2. Electrolyte used is hydrochloric acid. 3. Electrodes are lead and copper. 4. Capacity is expressed in ampere-hour. Which of the above statements are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODE=",
      "description" : "SW4gY2FzZSBvZiBtb3RvciBjYXIgYmF0dGVyeSBvciBhdXRvbW90aXZlIGJhdHRlcmllcyBhICBub21pbmFsIDEyLXZvbHQgcG90ZW50aWFsIGRpZmZlcmVuY2UgaXMgcHJvdmlkZWQgYnkgIGNvbm5lY3Rpbmcgc2l4IGdhbHZhbmljIGNlbGxzIGluIHNlcmllcy4gQ2FwYWNpdHkgb2YgdGhlc2UgIGJhdHRlcmllcyBpcyBleHByZXNzZWQgaW4gYW1wZXJlLWhvdXIuIEVsZWN0cm9seXRlIHVzZWQgaXMgYSAgc29sdXRpb24gb2YgYWJvdXQgMzUlIHN1bHBodXJpYyBhY2lkIGFuZCA2NSUgd2F0ZXIgYW5kICBlbGVjdHJvZGVzIHVzZWQgYXJlICBwbGF0ZXMgb2YgbGVhZCBhbmQgc2VwYXJhdGUgcGxhdGVzIG9mICBsZWFkIGRpb3hpZGUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 and 3 ",
        "option3" : " 3 and 4 ",
        "option4" : " 1 an 4 "
      }
    },
    {
      "index" : 82,
      "question" : "Fluorescent tubes are fitted with a choke. The choke coil :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODI=",
      "description" : "QSBmbHVvcmVzY2VudCBsYW1wIG9yIGZsdW9yZXNjZW50IHR1YmUgaXMgYSBnYXMtICBkaXNjaGFyZ2UgbGFtcCB0aGF0IHVzZXMgZWxlY3RyaWNpdHkgdG8gZXhjaXRlIG1lcmN1cnkgdmFwb3VyLiAgVGhlIGV4Y2l0ZWQgbWVyY3VyeSBhdG9tcyBwcm9kdWNlIHNob3J0LXdhdmUgdWx0cmF2aW9sZXQgIGxpZ2h0IHRoYXQgdGhlbiBjYXVzZXMgYSBwaG9zcGhvciB0byBmbHVvcmVzY2UsIHByb2R1Y2luZyAgdmlzaWJsZSBsaWdodCAuSW4gZmx1b3Jlc2NlbnQgdHViZXMgdGhlIHNpbXBsZXN0IGJhbGxhc3QgZm9yICBhbHRlcm5hdGluZyBjdXJyZW50IHVzZSBpcyBhbiBpbmR1Y3RvciAoY2hva2UgY29pbCApIHBsYWNlZCBpbiAgc2VyaWVzLCBjb25zaXN0aW5nIG9mIGEgd2luZGluZyBvbiBhIGxhbWluYXRlZCBtYWduZXRpYyAgY29yZS4gVGhlIGluZHVjdGFuY2Ugb2YgdGhpcyB3aW5kaW5nIGxpbWl0cyB0aGUgZmxvdyBvZiBBQyAgY3VycmVudCBvbiBhY2NvdW50IG9mIGl0cyBsYXJnZSBpbXBlZGFuY2UuIFRoZSBvbmx5IHdhc3RlICBFICBCICBEICBfOCAgMzQgIDIgIFBoeXNpY3MgRSAxNSAgb2YgZW5lcmd5IGlzIGR1ZSB0byB0aGUgaHlzdGVyZXNpcyBsb3NzIGluIHRoZSBpcm9uIGNvcmUsICB3aGljaCBpcyBtdWNoIGxlc3MgdGhhbiB0aGUgd2FzdGUgb2YgZW5lcmd5IGluIGNvbXBhcmlzb24gIHRvIHJlc2lzdGFuY2Ugd2hpY2ggY2FuIGFsc28gcmVkdWNlIHRoZSBjdXJyZW50IGlmIHBsYWNlZCAgaW5zdGVhZCBvZiB0aGUgY2hva2luZyBjb2lsLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " steps up the line voltage ",
        "option2" : " steps-down the line voltage ",
        "option3" : " reduces current in the circuit ",
        "option4" : " chokes low frequency current "
      }
    },
    {
      "index" : 83,
      "question" : "Two wires have their lengths, diameters and resistivities all in the ratio of 1 : 2. If the resistance of the thinner wire is 10 ohm, the resistance of the thicker wire is :  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODM=",
      "description" : "UmVzaXN0YW5jZSAoUikgb2YgYSBsZW5ndGggbCwgcmVzaXN0aXZpdHkgciBhbmQgYXJlYSBvZiAgY3Jvc3Mtc2VjdGlvbiBBIGlzIGdpdmVuIGJ5ICA9IHIgIGxSICBBICBGb3IgdGhlIHR3byB3aXJlcywgIHIgID0gwrQgwrQgPSDCtCDCtCAgciAgMSAxIDIxICAyIDIgMTIgIDEgMSA0ICAyIDIgMSAgUiBsIEEgIFIgbCBBICA9IDEgIFwgUjEgPSBSMiA9IDEwIFcgIChRICByMSA6IHIyID0gbDEgOiBsMiA9IDEgOiAyIGFuZCBBMSA6IEEyID0gMSA6IDQpIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 5 ohm ",
        "option2" : " 10 ohm ",
        "option3" : " 20 ohm ",
        "option4" : " 40 ohm "
      }
    },
    {
      "index" : 84,
      "question" : "Assertion (A) : In our houses, the current in A.C. electricity line changes direction 60 times per second. Reason (R) : The frequency of alternating voltage supplied is 50 Hz.  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODQ=",
      "description" : "QW4gYWx0ZXJuYXRpbmcgY3VycmVudCAoYS5jLikgaXMgb25lIHdoaWNoIGlzIGNvbnN0YW50bHkgIGNoYW5naW5nIGRpcmVjdGlvbi4gIEFsdGVybmF0aW5nIGN1cnJlbnQgaGF2ZSB0d28gY3ljbGVzICBwb3NpdGl2ZSBoYWxmIGN5Y2xlIGFuZCBuZWdhdGl2ZSBoYWxmIGN5Y2xlLiBNYWlucyBlbGVjdHJpY2l0eSAgaXMgYW4gYS5jLiBzdXBwbHkgd2hpY2ggaXMgc3VwcGxpZWQgdG8gaG9tZXMgaW4gSW5kaWEgYXQgMjIwICBWIEFDIGF0IDUwIEh6LiBUaHVzLCBpbiBvdXIgaG91c2VzIHRoZSBjdXJyZW50IGluIEEuQy4gIGVsZWN0cmljaXR5IGxpbmUgY2hhbmdlcyBkaXJlY3Rpb24gPSA1MCDDlyAyID0gMTAwIHRpbWVzIHBlciAgc2Vjb25kLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 85,
      "question" : "What is the order of magnitude of electric resistance of the human body (dry) ?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODU=",
      "description" : "SHVtYW4gYm9keSBoYXMgZGlmZmVyZW50IHJlc2lzdGFuY2Ugd2hlbiBodW1hbiBib2R5ICBkcnkgdGhlbiB0aGUgcmVzaXN0YW5jZSBpcyAxMDUgb2htcywgYW5kIHdoZW4gaHVtYW4gYm9keSAgd2V0IGJlY2F1c2Ugb2Ygd2F0ZXIgb3Igc3dlZXQgdGhlbiB0aGUgcmVzaXN0YW5jZSBpcyAxMDAwICBvaG1zLCBzbyBmb3IgZHJ5IHNraW4gdGhlIHJlc2lzdGFuY2UgaXMgMTA0ICBvaG1zLiBIZW5jZSAgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 102 ohm ",
        "option2" : " 104 ohm ",
        "option3" : " 106 ohm ",
        "option4" : " 108 ohm "
      }
    },
    {
      "index" : 86,
      "question" : "Which one of the following is printed on a commonly used fluorescent tube light?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODY=",
      "description" : "QSBmbHVvcmVzY2VudCBsYW1wIG9yIGZsdW9yZXNjZW50IHR1YmUgaXMgYSBnYXMtICBkaXNjaGFyZ2UgbGFtcCB0aGF0IHVzZXMgZWxlY3RyaWNpdHkgdG8gZXhjaXRlIG1lcmN1cnkgdmFwb3VyLiAgVGhlIGV4Y2l0ZWQgbWVyY3VyeSBhdG9tcyBwcm9kdWNlIHNob3J0LXdhdmUgdWx0cmF2aW9sZXQgIGxpZ2h0IHRoYXQgdGhlbiBjYXVzZXMgYSBwaG9zcGhvciB0byBmbHVvcmVzY2UsIHByb2R1Y2luZyAgdmlzaWJsZSBsaWdodC4gNjUwMCBLIGlzIHVzdWFsbHkgcHJpbnRlZCBvbiBhIHVzZWQgZmx1b3Jlc2NlbnQgIHR1YmVsaWdodC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 220 K ",
        "option2" : " 273 K ",
        "option3" : " 6500 K ",
        "option4" : " 9000 K "
      }
    },
    {
      "index" : 87,
      "question" : "Electrically charged  particles  from space travelling at speeds of several hundred km/sec can severely harm living beings if they reach the surface of the Earth. What prevents them from reaching the surface of the Earth?  ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDg3",
      "description" : "RWFydGgncyBtYWduZXRpYyBmaWVsZCBkaXZlcnRzIHRoZW0gdG9yd2FyZHMgaXRzIHBvbGVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " The Earth's magnetic field diverts them towards its  poles ",
        "option2" : " Ozone layer around the Earth reflects them back to  outer space ",
        "option3" : " Moisture in the upper layers of atmosphere prevents  them from reaching the surface of the Earth ",
        "option4" : " None of the statements (a), (b) and (c) given above is "
      }
    },
    {
      "index" : 88,
      "question" : "The known forces of nature can be divided into four classes, viz., gravity, electromagnetism, weak nuclear force and strong nuclear force. With reference to them, which one of the following statements is not correct?  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDg4",
      "description" : "R3Jhdml0eSBpcyB0aGUgZmVlYmxlIGZvcmNlIGFtb25nIHRoZSBmb3VyLiAgRS4gTW9kZXJuIFBoeXNpY3Mg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Gravity is the strongest of the four ",
        "option2" : " Electromagnetism acts only on particles with an electric  charge ",
        "option3" : " Weak nuclear force causes radioactivity ",
        "option4" : " Strong nuclear force holds protons and neutrons inside "
      }
    },
    {
      "index" : 89,
      "question" : "The technique used to transmit audio signals in television broadcasts is :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8ODk=",
      "description" : "RnJlcXVlbmN5IG1vZHVsYXRpb24gOiBJdCBpcyBhIHByb2Nlc3MgaW4gd2hpY2ggdGhlICBmcmVxdWVuY3kgb2YgdGhlIGNhcnJpZXIgaXMgdmFyaWVkIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgIGluc3RhbnRhbmVvdXMgdmFsdWUgb2YgbW9kdWxhdGluZyB2b2x0YWdlLiBJbiAgdGVsZWNvbW11bmljYXRpb25zIGFuZCBzaWduYWwgcHJvY2Vzc2luZywgZnJlcXVlbmN5ICBtb2R1bGF0aW9uIChGTSkgY29udmV5cyBpbmZvcm1hdGlvbiBvdmVyIGEgY2FycmllciB3YXZlICBieSB2YXJ5aW5nIGl0cyBpbnN0YW50YW5lb3VzIGZyZXF1ZW5jeS4gRk0gaXMgbW9zdCAgY29tbW9ubHkgdXNlZCBmb3IgcmFkaW8gYW5kIHRlbGV2aXNpb24gYnJvYWRjYXN0aW5nLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Amplitude Modulation ",
        "option2" : " Frequency Modulation ",
        "option3" : " Pulse Code Modulation ",
        "option4" : " Time Division Multiplexing "
      }
    },
    {
      "index" : 90,
      "question" : "Consider the following statements:  At the present level of technology available in India, solar energy can be conveniently used to : 1. Supply hot water to residential buildings. 2. Supply water for minor irrigation projects. 3. Provide street lighting. 4. Electrify a cluster of villages and small towns. ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTA=",
      "description" : "U29sYXIgZW5lcmd5LCByYWRpYW50IGxpZ2h0IGFuZCBoZWF0IGZyb20gdGhlIHN1biwgaGFzICBiZWVuIGhhcm5lc3NlZCBieSBodW1hbnMgc2luY2UgYW5jaWVudCB0aW1lcyB1c2luZyBhIHJhbmdlICBvZiBldmVyLWV2b2x2aW5nIHRlY2hub2xvZ2llcy4gQXQgcHJlc2VudCBzb2xhciBlbmVyZ3kgaW4gIG91ciBjb3VudHJ5IGlzIHVzZWQgZm9yIHNvbGFyIHdhdGVyIGhlYXRlci4gU29sYXIgbGlnaHRzIHRoYXQgIGNoYXJnZSBkdXJpbmcgdGhlIGRheSBhbmQgbGlnaHQgdXAgYXQgbmlnaHQgYXJlIGEgY29tbW9uICBzaWdodCBhbG9uZyB3YWxrd2F5cy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 are correct ",
        "option2" : " 2 and 4 are correct ",
        "option3" : " 1 and 3 are correct ",
        "option4" : " 1, 2 and 3 are correct "
      }
    },
    {
      "index" : 91,
      "question" : "One astronomical unit is the average distance between:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTE=",
      "description" : "QW4gYXN0cm9ub21pY2FsIHVuaXQgKGFiYnJldmlhdGVkIGFzIEFVLCBhdSBvciBhLnUuKSBpcyAgYSB1bml0IG9mIGxlbmd0aCBlcXVhbCB0byBhYm91dCAxNDksNTk3LDg3MC43IGtpbG9tZXRlcnMgb3IgIGFwcHJveGltYXRlbHkgdGhlIG1lYW4gRWFydGgtU3VuIGRpc3RhbmNlLiBUaGUgIGFzdHJvbm9taWNhbCBjb25zdGFudCB3aG9zZSB2YWx1ZSBpcyBvbmUgYXN0cm9ub21pY2FsIHVuaXQgIGlzIHJlZmVycmVkIHRvIGFzIHVuaXQgZGlzdGFuY2UgYW5kIGlzIGdpdmVuIGJ5IHRoZSBzeW1ib2wgQS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Earth and the Sun ",
        "option2" : " Earth and the Moon ",
        "option3" : " Jupiter and the Sun ",
        "option4" : " Pluto an the Sun "
      }
    },
    {
      "index" : 92,
      "question" : "For reproducing sound, a CD (Compact Disc) audio player uses a :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTI=",
      "description" : "SW4gY29tcGFjdCBkaXNjIGRpZ2l0YWwgZGF0YSBpcyBzY2FubmVkIGJ5IGxhc2VyIGJlYW0gIGZvciB0aGUgcmVwcm9kdWN0aW9uIG9mIHJlY29yZGVkIHNvdW5kLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " quartz crystal ",
        "option2" : " titanium needle ",
        "option3" : " laser beam ",
        "option4" : " barium titanate ceramic "
      }
    },
    {
      "index" : 93,
      "question" : "Which one of the following does a TV remote control unit use to operate a TV set?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTM=",
      "description" : "UmFkaW8gd2F2ZXMgYXJlIGEgdHlwZSBvZiBlbGVjdHJvbWFnbmV0aWMgcmFkaWF0aW9uICB3aXRoIHdhdmVsZW5ndGhzIGluIHRoZSBlbGVjdHJvbWFnbmV0aWMgc3BlY3RydW0gbG9uZ2VyICB0aGFuIGluZnJhcmVkIGxpZ2h0LiBMaWtlIGFsbCBvdGhlciBlbGVjdHJvbWFnbmV0aWMgd2F2ZXMsICB0aGV5IHRyYXZlbCBhdCB0aGUgc3BlZWQgb2YgbGlnaHQuIEFydGlmaWNpYWxseS1nZW5lcmF0ZWQgcmFkaW8gIHdhdmVzIGFyZSB1c2VkIGZvciBmaXhlZCBhbmQgbW9iaWxlIHJhZGlvIGNvbW11bmljYXRpb24sICBicm9hZGNhc3RpbmcsIHJhZGFyIGFuZCBvdGhlciBuYXZpZ2F0aW9uIHN5c3RlbXMsIHNhdGVsbGl0ZSAgY29tbXVuaWNhdGlvbiwgY29tcHV0ZXIgbmV0d29ya3MgYW5kIGlubnVtZXJhYmxlIG90aGVyICBhcHBsaWNhdGlvbnMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " Light waves ",
        "option2" : " Sound waves ",
        "option3" : " Microwaves ",
        "option4" : " Raio waves "
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements:  In a nuclear reactor, self-sustained chain reaction is possible, because: 1. more neutrons are released in each of the fission reactions. 2. the neutrons immediately take part in the fission process. 3. the fast neutrons are slowed down by graphite. 4. every neutron released in the fission reaction initiates further fission. Which of these statements are correct? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTQ=",
      "description" : "QSBudWNsZWFyIHJlYWN0b3IgaXMgYSBkZXZpY2UgdG8gaW5pdGlhdGUgYW5kIGNvbnRyb2wgYSAgc3VzdGFpbmVkIG51Y2xlYXIgY2hhaW4gcmVhY3Rpb24uIFRoZSBtb3N0IGNvbW1vbiB1c2Ugb2YgIG51Y2xlYXIgcmVhY3RvcnMgaXMgZm9yIHRoZSBnZW5lcmF0aW9uIG9mIGVsZWN0cmljYWwgcG93ZXIgIGFuZCBmb3IgdGhlIHBvd2VyIGluIHNvbWUgc2hpcHMuIEluIGV2ZXJ5IGZpc3Npb24gcmVhY3Rpb24gaW4gIHdoaWNoIHVyYW5pdW0gbnVjbGVpIHNwbGl0cyB1cCB0byBnaXZlIHNtYWxsZXIgbnVjbGVpIHRocmVlICBtb3JlIG5ldXRyb25zIGFyZSBwcm9kdWNlZCB3aGljaCBmdXJ0aGVyIHJlc3VsdHMgaW50byAgc3BsaXR0aW5nIG9mIGhlYXZ5IHVyYW5pdW0gbnVjbGVpIGFuZCBtb3JlIG51bWJlciBvZiAgbmV1dHJvbnMgd2lsbCBiZSBwcm9kdWNlZC4gVGh1cywgc3RhdGVtZW50LCAxIGFuZCAyIGFyZSAgY29ycmVjdC4gSW4gbnVjbGVhciByZWFjdG9yIGFsbCB0aGUgbmV1dHJvbnMgcHJvZHVjZWQgY2FuICBub3QgdGFrZSBwYXJ0IGluIGZpc3Npb24gcmVhY3Rpb24sIGVsc2UgcmVhY3Rpb24gY2FuIHR1cm4gb3V0ICBleHRyZW1lbHkgdmlvbGVudC4gVGh1cywgZ3JhcGhpdGUgcm9kcyBhcmUgdXNlZCBhcyBhIGNvbnRyb2wgIHJvZHMgdG8gc2xvdyBkb3duIHRoZSBzcGVlZCBvZiBmYXN0IG1vdmluZyBuZXV0cm9ucy4gVGh1cywgIHN0YXRlbWVudCAzIGlzIGFsc28gY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2 and 4 ",
        "option4" : " 2, 3 an 4 "
      }
    },
    {
      "index" : 95,
      "question" : "Consider the following statements:  1. A geo-stationary satellite is at an approximate height of 10,000 km. 2. FM transmission of music is of very good quality because the atmospheric or man made noises which are generally frequency variations can do little harm. Which of the statements give above is/are correct? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTU=",
      "description" : "VGhlIGdlb3N0YXRpb25hcnkgc2F0ZWxsaXRlIGlzIGEgc2F0ZWxsaXRlIGhhdmluZyBhICB0aW1lLXBlcmlvZCBvZiAyNCBob3Vycy4gVXNpbmcgdGhpcyB0aW1lLXBlcmlvZCwgdGhlIGhlaWdodCAgb2YgdGhlIHNhdGVsbGl0ZSBjb21lcyBvdXQgdG8gYmUgYXBwcm94aW1hdGVseSAzNSw4MDAga20uICBGTSBicm9hZGNhc3RpbmcgaXMgYSBicm9hZGNhc3QgdGVjaG5vbG9neSBwaW9uZWVyZWQgYnkgIEVkd2luIEhvd2FyZCBBcm1zdHJvbmcgdGhhdCB1c2VzIGZyZXF1ZW5jeSBtb2R1bGF0aW9uICAoRk0pIHRvIHByb3ZpZGUgaGlnaC1maWRlbGl0eSBzb3VuZCBvdmVyIGJyb2FkY2FzdCByYWRpby4gIEZNIHRyYW5zbWlzc2lvbiBpcyBxdWl0ZSBpbW11bmUgdG8gbm9pc2UgYXMgY29tcGFyZWQgdG8gIEFNIHRyYW5zbWlzc2lvbi4gTm9pc2UgaXMgYSBmb3JtIG9mIGFtcGxpdHVkZSB2YXJpYXRpb25zIGluICB0aGUgdHJhbnNtaXR0ZWQgc2lnbmFsIGR1ZSB0byBhdG1vc3BoZXJlLCBpbmR1c3RyaWVzLCBldGMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2. ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 96,
      "question" : "What does the term Dolby B or Dolby C printed on tape- recorders and other sound systems refer to:  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTY=",
      "description" : "RG9sYnkgQiBhbmQgQyBhcmUgdGhlIG5vaXNlIHJlZHVjdGlvbiBjaXJjdWl0cyAgZGV2ZWxvcGVkIGJ5IERvbGJ5IGxhYm9yYXRvcmllcy4gRG9sYnkgbm9pc2UgcmVkdWN0aW9uICBoYXMgbWFkZSBpdCBwb3NzaWJsZSB0byBwcm90ZWN0IHRoZSBtdXNpYyBmcm9tIHRhcGUgbm9pc2UsICBhbmQgaGVscGVkIG1ha2UgY2Fzc2V0dGUgdGhlIG1vc3QgcG9wdWxhciBhdWRpbyBwcm9kdWN0ICBldmVyIGRldmlzZWQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " frequency Modulated System ",
        "option2" : " amplitude Modulated System ",
        "option3" : " noise Reduction Circuit ",
        "option4" : " both DC and AC power can be used "
      }
    },
    {
      "index" : 97,
      "question" : "Which of the following types is used by computed tomography employed for visualisation of the internal structure of human body?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8OTc=",
      "description" : "WC1yYXkgY29tcHV0ZWQgdG9tb2dyYXBoeSAoQ1QpIGlzIGEgbWVkaWNhbCBpbWFnaW5nICBtZXRob2QgZW1wbG95aW5nIHRvbW9ncmFwaHkgY3JlYXRlZCBieSBjb21wdXRlciAgcHJvY2Vzc2luZy4gVGhpcyB0ZWNobmlxdWUgaXMgdXNlZCB0byBnZW5lcmF0ZSBhIHRocmVlLSAgZGltZW5zaW9uYWwgaW1hZ2Ugb2YgdGhlIGluc2lkZSBvZiBhbiBvYmplY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " X-ray ",
        "option2" : " South waves ",
        "option3" : " Magnetic resonance ",
        "option4" : " Raio isotopes "
      }
    },
    {
      "index" : 98,
      "question" : "The efforts to detect the existence of Higgs boson particle have become frequent news in the recent past. What is/are the importance / importances of discovering this particle?  1. It will enable us to understand as to why elementary particles have mass.  E 8 2. It will enable us in the near future to develop the technology of transferring matter from one point to another without traversing the physical space between them. 3. It will enable us to create better fuels for nuclear fission. Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljc3w5OA==",
      "description" : "VGhlIGRpc2NvdmVyeSBvZiBIaWdncyBib3NvbiBpcyBpbXBvcnRhbnQgYmVjYXVzZSBpdCAgZXhwbGFpbnMgd2h5IHN1YiBhdG9taWMgcGFydGljbGVzIGhhdmUgbWFzcy4gIEFjY29yZGluZyB0byAgdGhlIHNjaWVudGlzdHMsIEhpZ2dzIGJvc29uIGlzIHRoZSBvbmx5IHBhcnRpY2xlIHdoaWNoICBleHBsYWlucyBob3cgdGhlIGJhc2ljIGJ1aWxkaW5nIGJsb2NrcyBvZiBtYXR0ZXIgaW50ZXJhY3QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljcw==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 99,
      "question" : "With reference to solar power production in India, consider the following statements:  1. India is the third largest in the world in the manufacture of silicon wafers used in photovoltaic units. 2. The solar power tariffs are determined by the Solar Energy Corporation of India Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljc3w5OQ==",
      "description" : "IMK3IFRoZXJlIGlzIG5vIHNpZ25pZmljYW50IHByb2R1Y3Rpb24gb2Ygc2lsaWNvbiB3YWZlcnMgIGluIEluZGlhIChhcyBvZiAyMDExKS4gU28gdW5saWtlbHkgdGhhdCBpdCBiZWNhbWUgM3JkIGxhcmdlc3QgIGJ5IDIwMTctMTguIFNvLCAjMSBpcyB3cm9uZy4gIMK3IFRhcmlmZnMgYXJlIGRldGVybWluZWQgdW5kZXIgdGhlIEVsZWN0cmljaXR5IEFjdC4gQW55ICBlbnRpdHkgd2l0aCAiQ29ycG9yYXRpb24iIHdvcmQgaXMgaXJyZWxldmFudC4gc28sICMyIGlzICB3cm9uZy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljcw==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following phenomena :  1. Light is affected by gravity. 2. The Universe is constantly expanding. 3. Matter warps its surrounding space-time. Which of the above is/are the prediction/predictions of Albert Einstein's General Theory of Relativity, often discussed in media ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljc3wxMDA=",
      "description" : "IMK3IDIwMTA6IEludGVybmF0aW9uYWwgVGVhbSBvZiBBc3Ryb25vbWVycyBjb25maXJtZWQgIEFsYmVydCBFaW5zdGVpbidzIHRoZW9yeSBvZiBnZW5lcmFsIHJlbGF0aXZpdHkgYW5kIHRoYXQgdGhlICBleHBhbnNpb24gb2YgdGhlIHVuaXZlcnNlIGlzIGFjY2VsZXJhdGluZyBhZnRlciBsb29raW5nIGF0ICBkYXRhIGZyb20gdGhlIEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUuIFRoZXJlIGlzIGFuICB1bmtub3duIHNvdXJjZSBvZiBlbmVyZ3kgaW4gdGhlIHVuaXZlcnNlIHdoaWNoIGlzIGNhdXNpbmcgIHRoZSBjb3NtaWMgZXhwYW5zaW9uIHRvIHNwZWVkIHVwLiAyMDE2OiBKYXBhbmVzZSAgcmVzZWFyY2hlcnMnIHN0dWR5IGZpbmRzIHRoYXQgdGhlIGV4cGFuc2lvbiBvZiB0aGUgdW5pdmVyc2UgICBFIDE2ICBjb3VsZCBiZSBleHBsYWluZWQgYnkgYSBjb3Ntb2xvZ2ljYWwgY29uc3RhbnQsIGFzICBwcm9wb3NlZCBieSBFaW5zdGVpbiBpbiBoaXMgdGhlb3J5IG9mIGdlbmVyYWwgcmVsYXRpdml0eS4gIFNvIHNlY29uZCBzdGF0ZW1lbnQgaXMgcmlnaHQuIFRoaXMgZWxpbWluYXRlcyBCIGFuZCAoQykgIMK3IDIwMTg6IEh1YmJsZSBTcGFjZSBUZWxlc2NvcGUgY2FwdHVyZWQgaW1hZ2Ugb2YgYSAgcGhlbm9tZW5vbiBjYWxsZWQgRWluc3RlaW4gUmluZy4gRWluc3RlaW4gaW4gaGlzIHRoZW9yeSAgb2YgZ2VuZXJhbCByZWxhdGl2aXR5LCBoYWQgc3VnZ2VzdGVkIHRoYXQgYSBtYXNzaXZlIG9iamVjdCAgd291bGQgd2FycCBzcGFjZSBhbmQgdGltZS4gU28sIHN0YXRlbWVudDMgaXMgcmlnaHQuIEhlbmNlICB3ZSBhcmUgbGVmdCB3aXRoIGNvcnJlY3QgYW5zd2VyICJEIjogMSwgMiBhbmQgMyBhbGwgY29ycmVjdC4gIFtSZWY6IFRoZUhpbmR1IE5ld3NwYXBlcl0gIEYuIFNwYWNlIFBoeXNpY3Mg",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlbmVyYWwgU2NpZW5jZSAmIEVjb2xvZ3l8UGh5c2ljcw==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 101,
      "question" : "Cryogenic engines find applications in :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTAx",
      "description" : "QSBjcnlvZ2VuaWMgcm9ja2V0IGVuZ2luZSBpcyBhIHJvY2tldCBlbmdpbmUgdGhhdCB1c2VzICBhIGNyeW9nZW5pYyBmdWVsIG9yIG94aWRpc2VyLCB0aGF0IGlzLCBpdHMgZnVlbCBvciBveGlkaXplciAob3IgIGJvdGgpIGFyZSBnYXNlcyBsaXF1ZWZpZWQgYW5kIHN0b3JlZCBhdCB2ZXJ5IGxvdyAgdGVtcGVyYXR1cmVzLiBOb3RhYmx5LCB0aGVzZSBlbmdpbmVzIHdlcmUgb25lIG9mIHRoZSBtYWluICBmYWN0b3JzIG9mIHRoZSB1bHRpbWF0ZSBzdWNjZXNzIGluIHJlYWNoaW5nIHRoZSBNb29uIGJ5IHRoZSAgU2F0dXJuIFYgcm9ja2V0LiBWYXIgaW91cyBjcnlvZ2VuaWMgZnVlbC1veGlkaXplciAgY29tYmluYXRpb25zIGhhdmUgYmVlbiB0cmllZCwgYnV0IHRoZSBjb21iaW5hdGlvbiBvZiBsaXF1aWQgIGh5ZHJvZ2VuICBmdWVsIGFuZCB0aGUgbGlxdWlkIG94eWdlbiAgb3hpZGl6ZXIgaXMgb25lIG9mIHRoZSAgbW9zdCB3aWRlbHkgdXNlZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " sub-marine propulsion ",
        "option2" : " frost-free refrigerators ",
        "option3" : " rocket technology ",
        "option4" : " research in superconductivity "
      }
    },
    {
      "index" : 102,
      "question" : "Consider the following statements:  A person in a spaceship located half way between the earth and the sun will notice that the : 1. sky is jet black. 2. stars do not twinkle. 3. temperature outside the spaceship is much higher than that on the surface of the earth. ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTAy",
      "description" : "VGhlcmUgaXMgYSBwcmVzZW5jZSBvZiBhdG1vc3BoZXJlIGF0IGVhcnRoJ3Mgc3VyZmFjZSAgd2hpY2ggY29uc2lzdHMgb2YgdGhpY2sgYW5kIG1vdmluZyBsYXllcnMgb2YgYWlyLiBUaGUgZHVzdCAgcGFydGljbGVzLCBwYXJ0aWN1bGF0ZXMsIHNtb2csIHdhdGVyIHZhcG91ciBhbmQgc21va2UgYXJlICBhbHNvIHByZXNlbnQgaW4gYWlyLiBTdGFycyB0d2lua2xlIHdoZW4gd2Ugc2VlIHRoZW0gZnJvbSB0aGUgIEVhcnRoJ3Mgc3VyZmFjZSBiZWNhdXNlIHdlIGFyZSB2aWV3aW5nIHRoZW0gdGhyb3VnaCB0aGljayAgbGF5ZXJzIG9mIHR1cmJ1bGVudCAobW92aW5nKSBhaXIgaW4gdGhlIEVhcnRoJ3MgYXRtb3NwaGVyZS4gIEFzIHRoZWlyIGxpZ2h0IHRyYXZlbHMgdGhyb3VnaCB0aGUgbWFueSBsYXllcnMgb2YgdGhlIEVhcnRoJ3MgIGF0bW9zcGhlcmUsIHRoZSBsaWdodCBvZiB0aGUgc3RhciBpcyBiZW50IChyZWZyYWN0ZWQpIG1hbnkgIHRpbWVzIGluIHJhbmRvbSBkaXJlY3Rpb25zIChsaWdodCBpcyBiZW50IHdoZW4gaXQgaGl0cyBhICBjaGFuZ2UgaW4gZGVuc2l0eSAtbGlrZSBhIHBvY2tldCBvZiBjb2xkIGFpciBvciBob3QgYWlyKS4gVGhpcyAgcmFuZG9tIHJlZnJhY3Rpb24gcmVzdWx0cyBpbiB0aGUgc3RhciBhcyBpdHMgdHdpbmtsaW5nIGJ1dCBmb3IgIGEgcGVyc29uIGluIHNwYWNlc2hpcCBubyBzdWNoIHJlZnJhY3Rpb25zIGFyZSBwb3NzaWJsZSBhcyAgdGhlcmUgaXMgdmFjY3VtIGluIHNwYWNlLiBUaHVzLCBzdGFyIHdpbGwgbm90IHR3aW5rbGUuICBTaW1pbGFybHksIHNreSB3aWxsIGFwcGVhciBibHVlIHRvIHVzIGR1ZSB0byBSYXlsZWlnaCBzY2F0dGVyaW5nICB3aGljaCBpcyBhZ2FpbiBkdWUgdG8gcHJlc2VuY2Ugb2YgYXRtb3NwaGVyZSBvbiBlYXJ0aCdzICBzdXJmYWNlLiBUaGUgc2hvcnRlciB3YXZlbGVuZ3RoIGxpZ2h0IGlzIGFic29yYmVkIGJ5IHRoZSAgZ2FzIG1vbGVjdWxlcyBvZiBhdG1vc3BoZXJlLiBUaGUgYWJzb3JiZWQgYmx1ZSBsaWdodCBpcyAgdGhlbiByYWRpYXRlZCBpbiBkaWZmZXJlbnQgZGlyZWN0aW9ucy4gSXQgZ2V0cyBzY2F0dGVyZWQgYWxsICBhcm91bmQgdGhlIHNreS4gU29tZSBvZiB0aGlzIHNjYXR0ZXJlZCBibHVlIGxpZ2h0IHJlYWNoZXMgIHlvdS4gU2luY2UsIHlvdSBzZWUsIHRoZSBza3kgbG9va3MgYmx1ZS4gV2hlcmVhcyBubyAgYXRtb3NwaGVyZSBpcyB0aGVyZSBpbiBzcGFjZSB0aHVzLCBubyBhYnNvcmJpbmcgYW5kICBzY2F0dGVyaW5nIGlzIHBvc3NpYmxlIHRoYXQncyB3aHkgZm9yIGEgcGVyc29uIGluIHNwYWNlc2hpcCAgc2t5IGFwcGVhcnMgYmxhY2suICBUZW1wZXJhdHVyZSBvdXRzaWRlIHRoZSBzcGFjZXNoaXAgaXMgaGlnaGVyIGluIGNvbXBhcmlzb24gIHRvIGVhcnRoJ3Mgc3VyZmFjZSBiZWNhdXNlIG9mIGJlaW5nIG5lYXJlciB0byBzdW4uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 3 alone is correct ",
        "option2" : " 1 and 2 are correct ",
        "option3" : " 1 and 3 are correct ",
        "option4" : " 1, 2 an 3 are correct "
      }
    },
    {
      "index" : 103,
      "question" : "The tail of a comet is directed away from the sun because:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTAz",
      "description" : "VGhlIHJhZGlhdGlvbiBlbWl0dGVkIGJ5IHN1biBleGVydHMgYSByYWRpYWwgcHJlc3NzdXJlICBvbiB0aGUgY29tZXQuIFNvIHRoZSB0YWlsIG9mIGNvbWV0IGlzIGFsd2F5cyBkaXJlY3RlZCBhd2F5ICBmcm9tIHRoZSBzdW4uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " as the comet rotates around the sun, the lighter mass  of  the  comet  is  pushed away due  to  the  centrifugal  force alone ",
        "option2" : " as the comet rotates, the lighter mass of the comet is  attracted by some stars situated in the direction of its tail ",
        "option3" : " the radiation emitted by the sun exerts a radial pressure  on the comet throwing its tail away from the sun ",
        "option4" : " the tail of the comet always exists in the same "
      }
    },
    {
      "index" : 104,
      "question" : "A 'black hole' is a body in space which does not allow any radiation to come out. This property is due to its:  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTA0",
      "description" : "QSBibGFjayBob2xlIGlzIGEgcmVnaW9uIG9mIHNwYWNlIGZyb20gd2hpY2ggbm90aGluZywgIG5vdCBldmVuIGxpZ2h0LCBjYW4gZXNjYXBlLiBJdCBpcyB0aGUgcmVzdWx0IG9mIHRoZSBkZWZvcm1hdGlvbiAgb2Ygc3BhY2V0aW1lIGNhdXNlZCBieSBhIHZlcnkgY29tcGFjdCBtYXNzLiBUaGUgc2ltcGxlc3QgIGJsYWNrIGhvbGUgaGFzIG1hc3MgYnV0IG5laXRoZXIgZWxlY3RyaWMgY2hhcmdlIG5vciBhbmd1bGFyICBtb21lbnR1bS4gVGhlIG1hc3Mgb2YgYSBibGFjayBob2xlIGlzIGZpbml0ZSwgdGhlIHJlYXNvbiAgd2h5IGEgYmxhY2sgaG9sZSBoYXMgaW5maW5pdGUgZGVuc2l0eSBpcyB0aGF0IGl0J3MgbWFzcyBpcyAgY29uY2VudHJhdGVkIGludG8gYSBzcGFjZSBvZiB6ZXJvLXZvbHVtZS4gVGh1cywgaXQgaGFzIGEgIHZlcnkgaGlnaCBkZW5zaXR5LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " very small size ",
        "option2" : " very large size ",
        "option3" : " very high density ",
        "option4" : " very low size "
      }
    },
    {
      "index" : 105,
      "question" : "Consider the following statements in respect of India advanced satellite INSAT-4A:  1. INSAT-4A was launched in December, 2005 from New Mexico. 2. The European Commercial Launch Service Provider Arianespace was associated with the launch of INSA T-4A. 3. Tata-Sky; a digital cable service provider; is associated with DTH television broadcasting service from INSA  A. Which of the statements given above are correct? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTA1",
      "description" : "U3RhdGVtZW50ICcyJyBhbmQgJzMnIGlzIGNvcnJlY3QsIGJ1dCAnMScgaXMgaW5jb3JyZWN0LiAgQmVjYXVzZSBJTlNBVC00QSB3YXMgbGF1bmNoZWQgb24gMjIgRGVjZW1iZXIgMjAwNSAgZnJvbSBGcmVuY2ggR3VpYW5hLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1 an 3 only "
      }
    },
    {
      "index" : 106,
      "question" : "Consider the following statements in respect of a jet engine and a rocket:  1. A jet engine uses the surrounding air for its oxygen supply and so is unsuitable for motion in space. 2. A rocket carries its own supply of oxygen in the gas form, and fuel. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3N8MTA2",
      "description" : "QSBqZXQgZW5naW5lIGNvbWJpbmVzIG94eWdlbiBmcm9tIHRoZSBhaXIgd2l0aCBmdWVsIGF0ICBoaWdoIHRlbXBlcmF0dXJlLiBUaGVyZSBpcyB1c3VhbGx5IGEgc3BhcmsgdG8gaWduaXRlIHRoZSBmdWVsICB2YXBvciwgYnV0IG9uY2UgdGhlIGVuZ2luZSBiZWdpbnMgdHVybmluZywgaXQgd2lsbCBjb250aW51ZSAgcnVubmluZyB1bnRpbCBpdCBydW5zIG91dCBvZiBmdWVsIG9yIGFpci4gIEEgcm9ja2V0LCBjYXJyaWVzIGl0cyBvd24gc3VwcGx5IG9mIGxpcXVpZCBveHlnZW4gZm9yICBjb21idXN0aW9uLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW5lcmFsIFNjaWVuY2UgJiBFY29sb2d5fFBoeXNpY3M=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 107,
      "question" : "Satellites used for telecommunication relay are kept in a geostationary orbit. A satellite is said to be in such as orbit when :  1. The orbit is geosynchronous. 2. The orbit is circular. 3. The orbit lies in the plane of the earth's equator. 4. The orbit is at an altitude of 22,236. Select the correct answer using the codes given below : ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDEwNw==",
      "description" : "QSBnZW9zdGF0aW9uYXJ5IG9yYml0IChvciBHZW9zdGF0aW9uYXJ5IEVhcnRoIE9yYml0IC0gIEdFTykgaXMgYSBnZW9zeW5jaHJvbm91cyBvcmJpdCBkaXJlY3RseSBhYm92ZSB0aGUgRWFydGgncyAgZXF1YXRvciAoMMKwIGxhdGl0dWRlKSwgd2l0aCBhIHBlcmlvZCBlcXVhbCB0byB0aGUgRWFydGgncyAgcm90YXRpb25hbCBwZXJpb2QgYW5kIGFuIG9yYml0YWwgZWNjZW50cmljaXR5IG9mIGFwcHJveGltYXRlbHkgIHplcm8uIEl0IGlzIHRoZSBwYXJ0IG9mIHNwYWNlIGFib3V0IDM1LDc4NiBrbSAoMjIsMjM2IG1pbGVzKSAgYWJvdmUgc2VhIGxldmVsLCBpbiB0aGUgcGxhbmUgb2YgdGhlIGVxdWF0b3IsIHdoZXJlIG5lYXItICBnZW9zdGF0aW9uYXJ5IG9yYml0cyBtYXkgYmUgaW1wbGVtZW50ZWQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 1, 3 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 108,
      "question" : "An artificial satellite orbiting around the Earth does not fall down. This is so because the attraction of Earth  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNzfDEwOA==",
      "description" : "QW4gYXJ0aWZpY2lhbCBzYXRlbGxpdGUgbW92aW5nIHJvdW5kIHRoZSBFYXJ0aCBpbiBhICBjaXJjdWxhciBvcmJpdCBwb3NzZXNzZXMgYW4gYWNjZWxlcmF0aW9uIHdoaWNoIGlzICdjb25zdGFudCcgIGluIG1hZ25pdHVkZSBidXQgJ2NoYW5naW5nIGluIGRpcmVjdGlvbicuIEFuIGFydGlmaWNpYWwgIHNhdGVsbGl0ZSByZXZvbHZlcyByb3VuZCB0aGUgZWFydGggdW5kZXIgY2VudHJpcGV0YWwgIGFjY2VsZXJhdGlvbi4gQnkgdGhlIGxhdW5jaCByb2NrZXQsIGltbWVkaWF0ZWx5IGJlZm9yZSB0aGUgIHNhdGVsbGl0ZSBpcyBlc3RhYmxpc2hlZCBpbiB0aGUgcHJlZGV0ZXJtaW5lZCBvcmJpdCwgdGhlIHNwZWVkICBnaXZlbiB0byBpdCBpcyAzMCwgMDAwIGttL2hyLiBUaGUgc3BlZWQgbXVzdCBiZSBncmVhdCBlbm91Z2ggIHNvIGdyYXZpdHkgZG9lc24ndCBicmluZyB0aGUgc2F0ZWxsaXRlIGJhY2sgdG8gRWFydGgsIGJ1dCBub3QgIHNvIGdyZWF0IHRoYXQgdGhlIHNhdGVsbGl0ZSBlc2NhcGVzIGdyYXZpdHkgb3V0IGludG8gc3BhY2UuICBUaGlzIG1lYW5zIHRoYXQgdGhlIHNwZWVkLCB3aGljaCBpcyBwcm92aWRlZCBieSB0aGUgcm9ja2V0ICBpcyB0aGUgc291cmNlIG9mIHRoZSBjZW50cmlmdWdhbCBmb3JjZSwgYW5kIHRoZSBhdHRyYWN0aW9uIG9mICB0aGUgZWFydGggaG9sZHMgaXQgZnJvbSBtb3ZpbmcgYXdheSBmcm9tIHRoaXMgY2VudHJpZnVnYWwgIGZvcmNlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VuZXJhbCBTY2llbmNlICYgRWNvbG9neXxQaHlzaWNz",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physics",
      "questionType" : "normal",
      "subject" : "General Science & Ecology",
      "questionOptions" : {
        "option1" : " does not exist at such distance ",
        "option2" : " is neutralized by the attraction of the moon ",
        "option3" : " provides the necessary speed for its steady motion ",
        "option4" : " provides the necessary acceleration for its motion "
      }
    }
  ],
  "subject" : "General Science & Ecology",
  "topic" : "Physics",
  "year" : "0"
}
