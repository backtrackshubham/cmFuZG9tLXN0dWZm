{
  "testId" : "history|medieval-history",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "The Mughal school of painting formed the spinal column of different schools of Indian miniature art. Which one of the following painting styles was not affected by Mughal painting?   ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MQ==",
      "description" : "SXQgZG9lcyBub3QgcXVpdGUgYmVsb25nIHRvIHRoZSB0ZW1wZXIgb2YgTXVnaGFsICBwYWludGluZyB3aGljaCB3YXMgYXJpc3RvY3JhdGljLCBjZWxlYnJhdGVkIGltcGVyaWFsIHByb21wICBhbmQgY2lyY3Vtc3RhbmNlcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pahari ",
        "option2" : " Rajasthani ",
        "option3" : " Kangra ",
        "option4" : " Kalighata "
      }
    },
    {
      "index" : 2,
      "question" : "Who among the following were famous jurists of medieval India?   ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mg==",
      "description" : "UmFqc2VraGFyYSB3YXMgYSBzYW5za3JpdCBwb2V0IGFuZCBkcmFtYXRpc3QuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vijnanesvara ",
        "option2" : " Hemadri ",
        "option3" : " Rajasekhara ",
        "option4" : " Jimutavahana "
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following monuments has a dome which is said to be one of the largest in the world?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mw==",
      "description" : "SXQgaXMgdGhlIE1vdXNzb2xldW0gb2YgTXVoYW1tYWQgQWRpbCBTaGFoIFN1ciBvZiAgQmlqYXB1ci4gIFRoaXMgaXMgdGhlIHNlY29uZCBsYXJnZXN0IGRvbWUgaW4gdGhlIHdvcmxkLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tomb of Sher Shah, Sasaram ",
        "option2" : " Jama Masjid, Delhi ",
        "option3" : " Tomb of Ghiyas-ud-din Tughlaq, Delhi ",
        "option4" : " Gol Gumbaz, Bijapur "
      }
    },
    {
      "index" : 4,
      "question" : "Ashtapradhan was a council of ministers:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NA==",
      "description" : "SXQgd2FzIGNvbnN0aXR1dGVkIGJ5IFNoaXZhamkgaW4gTWFyYXRoYSBhZG1pbmlzdHJhdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " in the Gupta administration ",
        "option2" : " in the Chola administration ",
        "option3" : " in the Vijayanagar administration ",
        "option4" : " in the Maratha administration "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the map given below:  The route indicated in the map was followed, during the course of his military exploits, by: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NQ==",
      "description" : "QWxhdWRkaW4gS2hhbGppIHNlbnQgTWFsaWsgS2FmdXIgKHBvcHVsYXJseSBrbm93biBhcyAgSGF6YXIgRGluYXJpKSBmb3Igc291dGhlcm4gZXhwZWRpdGlvbiBhbmQgaGUgcmVhY2hlZCB1cCB0byAgS2FueWFrdW1hcmkuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chandragupta II ",
        "option2" : " Harshavardhana ",
        "option3" : " Rajendra Chola ",
        "option4" : " Malik Kafur "
      }
    },
    {
      "index" : 6,
      "question" : "The term 'Apabhramsa' was used in medieval Sanskrit texts to denote:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Ng==",
      "description" : "QmVmb3JlIHRoZSByaXNlIG9mIG1vZGVybiBsYW5ndWFnZSwgQXBhYmhyYW1zIHdhcyAgdGhlIG1vc3QgdmlicmFudCBsYW5ndWFnZSBvZiBjb2xsb3F1aWFsIGFuZCBsaXRlcmFyeSB3b3JrcyAgaW4gbm9ydGggSW5kaWEuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " outcastes among the Rajputs ",
        "option2" : " deviations from Vedic rituals ",
        "option3" : " early forms of some of the modern Indian language ",
        "option4" : " non-Sanskrit verse metres "
      }
    },
    {
      "index" : 7,
      "question" : "Nastaliq was:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nw==",
      "description" : "SXQgd2FzIGEgcGVyc2lhbiBzY3JpcHQgZHVyaW5nIE11Z2hhbCBwZXJpb2QuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a persian script used in medieval India ",
        "option2" : " a raga composed by Tansen ",
        "option3" : " a cess levied by the Mughal rulers ",
        "option4" : " a manual of code of conduct for the Ulemas "
      }
    },
    {
      "index" : 8,
      "question" : "The sufi saint who maintained that devotional music was one way of coming close to God was;  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8OA==",
      "description" : "U2hhaWtoIE11aW4tdWQtZGluIENoaXNodGksIHdhcyBhIHNhaW50IG9mIENoaXNodGkgIFNpbHNpbGFoLCBpbnRyb2R1Y2VkIGluIEluZGlhIGJ5IFNoYWlraCBNdWluLXVkLWRpbiBTaWp6aSAgKDEyMzYgQS5ELikgV2FoZC10dWwtd2FqdWQgKHVuaXR5IG9mIHRoZSBwaGVub21lbmFsIHdvcmxkKSAgYnkgU2FtYSBhbmQgTWVoZmlsLCB3aGljaCBpcyByZWNpdGF0aW9uIG9mIHRoZSBuYW1lcyBvZiAgR29kLCB3YXMgYSBwcm9taW5lbnQgZmVhdHVyZSBvZiB0aGUgc2lsc2lsYWgsIHVuZGVybGluZWQgYnkgIE11aW4tdWQtZGluIENoaXNodGkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Muin-ud-din Chisti ",
        "option2" : " Baba Farid ",
        "option3" : " Saiyid Muhammad Gesudaraz ",
        "option4" : " Shah Alam Bukhari "
      }
    },
    {
      "index" : 9,
      "question" : "Mughal painting reached its zenith under:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8OQ==",
      "description" : "SmFoYW5naXIgd2FzIHRoZSBNdWdoYWwgRW1wZXJvciBmcm9tIDE2MDUtMTYyNy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Humayun ",
        "option2" : " Akar ",
        "option3" : " Jahangir ",
        "option4" : " Shahjahan "
      }
    },
    {
      "index" : 10,
      "question" : "In medieval India, Mansabdari system was introduced for: (a) making recruitment to the army  (a) Guru Amar Das-Miri and Piri  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTA=",
      "description" : "TWFuc2FiZGFyaSBzeXN0ZW0gd2FzIGludHJvZHVjZWQgaW4gMTU5NS05Niwgd2FzIGEgIGNvbWJpbmVkIHN0YXR1cyBzaG93aW5nIGEgbm9ibGUncyBjaXZpbCBhbmQgbWlsaXRhcnkgIGNhcGFjaXR5LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " facilitating revenue collection ",
        "option2" : " Guru Arjun Dev-Adi Granth ",
        "option3" : " ensuring religious harmony ",
        "option4" : " effecting clean administration  11. Which of the following pairs is correctly matched? "
      }
    },
    {
      "index" : 12,
      "question" : "Prem Vatika, poems on the life of Krishna, were composed by : (a) Bihari (b) Surdas  title of :  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTI=",
      "description" : "UmFza2hhbiAoYXBwcm94LiAxNTU4LTE2MjgpIHdhcyBhIEhpbmRpIHBvZXQgd2hvICB3YXMgYm90aCBhIE11c2xpbSBhbmQgZm9sbG93ZXIgb2YgTG9yZCBLcmlzaG5hLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tute-Hind ",
        "option2" : " Kaisr-I-Hind ",
        "option3" : " Raskhan ",
        "option4" : " Kabir  13. After consolidating his power, Balban assumed the grand "
      }
    },
    {
      "index" : 14,
      "question" : "Head of the military department under the recognised central machinery of administration during Akbar's reign was: (a) Diwan (b) Mir Bakshi  the following is correct?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTQ=",
      "description" : "SGUgd2FzIHRoZSBoZWFkIG9mIHRoZSBtaWxpdGFyeSBhbmQgaW50ZWxsaWdlbmNlICBkZXBhcnRtZW50LiBIZSB3YXMgbm90IHRoZSBDb21tYW5kZXItaW4tQ2hpZWYgYnV0IHdhcyAgdGhlIHBheW1hc3Rlci1nZW5lcmFsLiBBbGwgaW50ZWxsaWdlbmNlIG9mZmljZXJzIChiYW5kcykgYW5kICBuZXdzLXJlcG9ydGVycyAoV2FxaWEtbmF2aXMpIHJlcG9ydGVkIHRvIGhpbS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not the correct explanation ",
        "option3" : " Mir Saman ",
        "option4" : " Bakshi  15. Assertion (A): The sponsor and the most prominent figure  of the Chisti order of Sufis in India is Khwaja Moinuddin  Chisti.  Reason (R): The Chisti order takes its name from a village  Chisti in Ajmer.  In the context of the above two statements, which one of "
      }
    },
    {
      "index" : 16,
      "question" : "Which one of the following pairs of composers in different languages and their works on the Mahabharata theme is correctly matched?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTY=",
      "description" : "UGFtcGEgIHdhcyBhIEthbm5hZGEgcG9ldCB3aG9zZSB3b3JrcyByZWZsZWN0ZWQgaGlzICBwaGlsb3NvcGhpY2FsIGJlbGllZnMuIFZpa3JhbWFyanVuYSBWaWpheWEsIGFsc28ga25vd24gYXMgIFBhbXBhIEJoYXJhdGEsIGlzIGEgS2FubmFkYSB2ZXJzaW9uIG9mIHRoZSBNYWhhYmhhcmF0YSAgb2YgVnlhc2EuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sarladasa-Bengali ",
        "option2" : " Kasirama-Oriya ",
        "option3" : " Tikkana-Marathi ",
        "option4" : " Pampa-Kannaa "
      }
    },
    {
      "index" : 17,
      "question" : "The medieval Indian writer who refers to the discovery of America is :  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTc=",
      "description" : "QWJ1IEZhemwgIHJlZmVycyB0byB0aGUgZGlzY292ZXJ5IG9mIEFtZXJpY2EuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Malik Muhammad Jayasi ",
        "option2" : " Amir Khusrau ",
        "option3" : " Raskhan ",
        "option4" : " Abul Fazl "
      }
    },
    {
      "index" : 18,
      "question" : "The member of Shivaji's Ashtapradhan who looked after foreign affairs was:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTg=",
      "description" : "U2FjaGl2IHdhcyB0aGUgbWluaXN0ZXIgaW4gY2hhcmdlIG9mIHJveWFsIGNvcnJlcy0gIHBvbmRlbmNlLiBQYW5kaXQgUmFvIC0gcmVsaWdpb3VzIG1hdHRlci4gU3VtYW50IHdvcmtlZCBhcyAgZm9yZWlnbiAgTWluaXN0ZXIuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Peshwa ",
        "option2" : " Sachiv ",
        "option3" : " Pandit Rao ",
        "option4" : " Sumant "
      }
    },
    {
      "index" : 19,
      "question" : "The loss of Qandhar was a big blow to the Mughal empire from the view point of :  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTk=",
      "description" : "U2hhaCBKYWhhbiByZWNvdmVyZWQgS2FuZGhhciBpbiAxNjM4IGZyb20gdGhlICBJcmFuaWFucyBidXQgbG9zdCBpdCBhZ2FpbiBpbiAxNjQ5IGRlc3BpdGUgdGhyZWUgY2FtcGFpZ25zLiAgVGhlIGxvc3Mgb2YgS2FuZGhhciB3YXMgYSBiaWcgYmxvdyBhcyBpdCB3YXMgYSBzdHJhdGVnaWMgIHN0cm9uZ2hvbGQuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " natural resources ",
        "option2" : " uffer territory ",
        "option3" : " communication ",
        "option4" : " strategic stronghol "
      }
    },
    {
      "index" : 20,
      "question" : "Fawazil in the Sultanate period meant:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjA=",
      "description" : "RmF3YXppbCB3YXMgYmFsYW5jZSBiZXR3ZWVuIHRoZSBpbmNvbWUgYW5kICBleHBlbmRpdHVyZSBvZiBJcXRhLWhvbGRlcnMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " extra payment to the nobles ",
        "option2" : " revenue assigned in lieu of salary ",
        "option3" : " excess amount paid to the exchequer by the Iqtadars ",
        "option4" : " illegal exactions extracted from the peasants "
      }
    },
    {
      "index" : 21,
      "question" : "Sultan of Delhi who is reputed to have built the biggest network of canals in India was:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjE=",
      "description" : "Rmlyb3ogU2hhaCBUdWdobGFxIGJ1aWx0IGFuZCByZXBhaXJlZCBhIGxhcmdlIG51bWJlciAgb2YgY2FuYWxzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Iltutmish ",
        "option2" : " Ghiyasuddin Tughlaq ",
        "option3" : " Firoz Shah Tughlaq ",
        "option4" : " Sikandar Lodi "
      }
    },
    {
      "index" : 22,
      "question" : "Assertion (A): At first the Turkish administration in India was essentially military. Reason (R):  The country was parcelled out as 'Iqtas' among leading military leaders.  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjI=",
      "description" : "SXF0YSBpcyB0aGF0IHBhcnQgb2YgbGFuZCBncmFudGVkIGJ5IHRoZSBzdWx0YW4gdG8gaXRzICBtaWxpdGFyeSBjaGllZnMgZm9yIG1haW50ZW5hbmNlIG9mIHRyb29wZXJzLiBUaGUgbGFuZCB3YXMgIHRha2VuIGJhY2sgd2hlbiB0aGUgSXF0YWRhcnMgd2VyZSBub3QgaW4gYSBwb3NpdGlvbiB0byAgbWFpbnRhaW4gdGhlIGFybXkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 23,
      "question" : "Assertion (A): During the reign of Shahjahan, Dara Sikoh was sent on expedition to Balkha, Badakhshan and Qandahar. Reason (R): The expedition sent by Shahjahan to the Middle-East was a marvellous success.  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjM=",
      "description" : "UiBpcyBpbmNvcnJlY3QgYXMgdGhpcyBleHBlZGl0aW9uIGZhaWxlZCBtaXNlcmFibHkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:  Ahadis were those troopers who: 1. offered their services singly 2. did not attach themselves to any chief 3. had the emperor as their immediate colonel 4. attached themselves to Mirzas Of these statements: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjQ=",
      "description" : "QWhhZGlzIHdlcmUgdGhlIGdlbnRsZW1lbiB0cm9vcGVycyB3aG8gd2VyZSAgcmVjcnVpdGVkIGluZGl2aWR1YWxseSBhbmQgd2VyZSB1bmRlciB0aGUgY29tbWFuZCBvZiBhICBzZXBhcmF0ZSBtYW5zYWJkYXIgb3Igb2ZmaWNlciwgYW5kIGhhZCBhIGRpd2FuIGFuZCBhIGJha3NoaSAgb2YgdGhlaXIgb3duLiBUaGV5IHdlcmUgY29uc2lkZXJlZCB2ZXJ5IGVmZmljaWVudCBhbmQgbG95YWwgIHRyb29wcyBhbmQgd2VyZSBwYWlkIGhpZ2ggc2FsYXJpZXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 are correct ",
        "option2" : " 1, 2 and 3 are correct ",
        "option3" : " 2 and 3 are correct ",
        "option4" : " 1 and 4 are correct "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following:  1. Tughlaqabad fort 2. Lodi Garden 3. Qutab Minar 4. Fatehpur Sikri The correct chronological order in which they were built is : ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjU=",
      "description" : "VHVnaGxhcWFiYWQgRm9ydCBpcyBhIHJ1aW5lZCBmb3J0IGluIERlbGhpLCBzdHJldGNoaW5nICBhY3Jvc3MgNi41IGttLCBidWlsdCBieSBHaGl5YXMtdWQtZGluIFR1Z2hsYXEsIHRoZSBmb3VuZGVyICBvZiBUdWdobGFxIGR5bmFzdHksIG9mIHRoZSBEZWxoaSBTdWx0YW5hdGUgb2YgSW5kaWEgaW4gMTMyMSwgIHdoaWNoIHdhcyBsYXRlciBhYmFuZG9uZWQgaW4gMTMyNy4gRmF0ZWhwdXIgU2lrcmkgaXMgYSBjaXR5ICBhbmQgYSBtdW5pY2lwYWwgYm9hcmQgaW4gQWdyYSBkaXN0cmljdCBpbiB0aGUgc3RhdGUgb2YgVXR0YXIgIFByYWRlc2gsIEluZGlhLiBJdCB3YXMgY29uc3RydWN0ZWQgYnkgTXVnaGFsIEVtcGVyb3IgQWtiYXIgIGJlZ2lubmluZyBpbiAxNTcwLCBpbiBob25vdXIgb2YgU3VmaSBzYWludCBTaGFpa2ggU2FsaW0gIENoaXN0aS4gUXV0YWIgTWluYXIgLSAxMjA2IC0xMjM2OyBMb2RpIEdhcmRlbiAtIDE0NTEgLSAgMTUyNi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 3, 1, 4, 2 ",
        "option2" : " 3, 1, 2, 4 ",
        "option3" : " 1, 3, 2, 4 ",
        "option4" : " 1, 3, 4, 2 "
      }
    },
    {
      "index" : 26,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I List-II A . 1556 1. Battle of Haldi Ghati B. 1600 2. Nadir Shah's capture of Delhi C. 1686 3. Death of Shivaji D. 1739 4. Grant of Charter to East India Company 5. Accession of Akbar Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjY=",
      "description" : "VGhlIEJhdHRsZSBvZiBIYWxkaWdoYXRpIHdhcyBmb3VnaHQgYmV0d2VlbiB0aGUgIE11Z2hhbCBFbXBpcmUgYW5kIHRoZSBmb3JjZXMgb2YgTWV3YXIgb24gSnVuZSAyMSwgMTU3NiBhdCAgSGFsZGlnaGF0aSBpbiBSYWphc3RoYW4sIEluZGlhLiBJdCB3YXMgYSBkZWNpc2l2ZSB2aWN0b3J5IGZvciAgdGhlIE11Z2hhbCBFbXBlcm9yIEphbGFsIHVkLURpbiBNdWhhbW1hZCBBa2JhcidzICBnZW5lcmFsIFJhamEgTWFuIFNpbmdoIGFnYWluc3QgdGhlIE1haGFyYW5hIFByYXRhcCBTaW5naCAgb2YgTWV3YXIuIEFrYmFyIHdhcyAxNCB5ZWFycyBvbGQgd2hlbiBoZSB3YXMgY3Jvd25lZCBhdCAgS2FsYW5hdXIgaW4gMTU1Ni4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 4; C - 2; D - 1 ",
        "option2" : " A - 5; B - 4; C - 3; D - 2 ",
        "option3" : " A - 5; B - 2; C - 1; D - 4 ",
        "option4" : " A - 1; B - 5; C - 3; D - 2 "
      }
    },
    {
      "index" : 27,
      "question" : "In the given map, the shaded part represents Akbar's empire at a certain juncture, A stands for an independent country and 'B' marks the site of city. Which one of the following alternative gives all correct information?                   ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjc=",
      "description" : "VGhlIHNoYWRlZCBwYXJ0IHJlcHJlc2VudHMgQWtiYXIncyB0ZXJyaXRvcnkgYXQgdGhlICB0aW1lIG9mIGhpcyBkZWF0aCBpbiAxNjA1LiBBIC0gR29uZHdhbmE7IEIgLSBMYWhvcmUg",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar in 1557 : (A) Gokunda, (B) Lahore ",
        "option2" : " Akbar in 1557 : (A) Khandesh, (B) Multan ",
        "option3" : " Akbar in 1605: (A) Gondwana, (B) Multan ",
        "option4" : " Akbar in 1605: (A) Gondwana, (B) Lahore "
      }
    },
    {
      "index" : 28,
      "question" : "The first writer to use Urdu as the medium of poetic expression was:  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjg=",
      "description" : "QW1pciBLaHVzcmF1ICgxMjUzIC0xMzI1IENFKSwgYSBQZXJzaWFuIHBvZXQgd2FzICBhc3NvY2lhdGVkIHdpdGggdGhlIHJ1bGVycyBvZiBEZWxoaSBTdWx0YW5hdGUuIEhlIGNvbXBvc2VkICBwb2V0cnkgaW4gQXJhYmljIGFuZCBQZXJzaWFuIGJlc2lkZXMgYmVpbmcgdGhlIGZpcnN0IHdyaXRlciAgdG8gdXNlIFVyZHUgYXMgYSBtZWRpdW0gb2YgcG9ldGljIGV4cHJlc3Npb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amir Khusrau ",
        "option2" : " Mirza Ghali ",
        "option3" : " Bahadur Shah Zafar ",
        "option4" : " Faiz "
      }
    },
    {
      "index" : 29,
      "question" : "To which Lodi Sultan does the given map relate and what town does the site marked. A represent  A on the map represent? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjk=",
      "description" : "QmFobG9sIExvZGkgZGVmZWF0ZWQgSHVzc2FpbiBTaGFoIFNoYXJxaSBvZiBKYXVucHVyICBpbiAxNDc5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bahlol Lodi - Jaunpur ",
        "option2" : " Sikandar Lodi - Aligarh ",
        "option3" : " Ibrahim Lodi - Jaunpur ",
        "option4" : " Ibrahim Lodi - Aligarh "
      }
    },
    {
      "index" : 30,
      "question" : "Assertion (A): During the time of Akbar, for every ten cavalrymen, the mansabdars had to maintain twenty horses. Reason (R): Horses had to be rested while on march and replacements' were necessary in times of war.          ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzA=",
      "description" : "QSBpcyBpbmNvcnJlY3QgYXMgRHUgYXNwYSBTaWggYXNwYSBzeXN0ZW0gd2FzICBpbnRyb2R1Y2VkIGJ5IEphaGFuZ2lyIChub3QgQWtiYXIpLiBTbyBhbnN3ZXIgaXMgZC4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 31,
      "question" : "One consistent feature found in the history of southern India was the growth of small regional kingdoms rather than large empires because of :  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzE=",
      "description" : "T25lIGNvbnNpc3RlbnQgZmVhdHVyZSBmb3VuZCBpbiB0aGUgaGlzdG9yeSBvZiBzb3V0aGVybiAgSW5kaWEgd2FzIHRoZSBncm93dGggb2Ygc21hbGwgcmVnaW9uYWwga2luZ2RvbXMgcmF0aGVyIHRoYW4gIGxhcmdlIGVtcGlyZXMgYmVjYXVzZSBvZiBhYnNlbmNlIG9mIHZhc3QgYXJlYXMgb2YgZmVydGlsZSAgbGFuZC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " absence of minerals like iron ",
        "option2" : " too many divisions in the social structure ",
        "option3" : " absence of vast areas of fertile land ",
        "option4" : " scarcity of manpower "
      }
    },
    {
      "index" : 32,
      "question" : "'The king was freed from his people and they from their king'. On whose death did Badauni comment thus?   ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzI=",
      "description" : "TXVoYW1tYWQgQmluIFR1Z2hsYXEgZGllZCBpbiAxMzUxIENFLiBIZSB3YXMgIHN1Y2NlZWRlZCBieSBoaXMgY291c2luIEZpcm96IFR1Z2hsYXEuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Balban ",
        "option2" : " Ala-ud-din Khalji ",
        "option3" : " Muhammad-bin-Tughlaq ",
        "option4" : " Firoz Shah Tughlaq "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements: The striking feature of the Jama Masjid in Kashmir completed by Zain-ul-Abdin include(s):  1. turret 2. similarity with Buddhist pagodas 3. Persian style Which of the above statements is/are correct? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzM=",
      "description" : "SmFtYSBNYXNqaWQgaXMgYSBtb3NxdWUgaW4gU3JpbmFnYXIsIEphbW11ICYgS2FzaG1pciwgIEluZGlhLiBUaGUgSmFtYSBNYXNqaWQgb2YgU3JpbmFnYXIgaXMgc2l0dWF0ZWQgYXQgTm93aGF0dGEsICBpbiB0aGUgbWlkZGxlIG9mIHRoZSBvbGQgY2l0eS4gSXQgd2FzIGJ1aWx0IGJ5IFN1bHRhbiBTaWthbmRhciAgaW4gMTQwMCBBRC4gTGF0ZXIsIHRoZSBzb24gb2YgU3VsdGFuIFNpa2FuZGFyLCBaYWluLXVsLUFiaWRpbiAgaGFkIHRoZSBtb3NxdWUgZXh0ZW5kZWQuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 alone ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following pairs is not correctly matched?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzQ=",
      "description" : "U2lyIFRob21hcyBSb2UgYWxzbyB2aXNpdGVkIHRoZSBjb3VydCBvZiBKYWhhbmdpci4gSGUgIHdhcyBhbiBhbWJhc3NhZG9yIG9mIEphbWVzIC0gSSwga2luZyBvZiBFbmdsYW5kLiBUYXZlcm5pZXIncyAgYWNjb3VudCBjb3ZlcnMgdGhlIHJlaWduIG9mIFNoYWhqYWhhbiBhbmQgQXVyYW5nemViLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgTWVkaWV2YWwgSGlzdG9yeSBBIDIzIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jahangir : William Hawkins ",
        "option2" : " Akbar : Sir Thomas Roe ",
        "option3" : " Shahjahan : Travernier ",
        "option4" : " Aurangzeb : Manucci "
      }
    },
    {
      "index" : 35,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the list:                                    List-I List-II A. Land allotted to 1. Jagirdari System big feudal landlords B. Land allotted to 2. Ryotwari System revenue farmers of rent collectors C. Land allotted to each 3. Mahalwari peasant with the right System to sublet, mortgage transfer, gift or sell D. Revenue settlements 4. Zamindari System made at village level Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzU=",
      "description" : "VW5kZXIgdGhlIE1haGFsd2FyaSBzeXN0ZW0sIHJldmVudWUsIHNldHRsZW1lbnQgd2FzICB0byBiZSBtYWRlIGJ5IHZpbGxhZ2Ugb3IgZXN0YXRlcyB3aXRoIHRoZSBsYW5kbG9yZHMuIEluIHRoZSAgUnlvdHdhcmkgc3lzdGVtLCBhIGRpcmVjdCBzZXR0bGVtZW50IHdhcyBtYWRlIGJldHdlZW4gdGhlICBnb3Zlcm5tZW50IGFuZCB0aGUgcnlvdCAoY3VsdGl2YXRvcikuIEluIHRoZSBaYW1pbmRhcmkgIHN5c3RlbSwgbGFuZCBpcyBhbGxvdHRlZCB0byByZXZlbnVlIGZhcm1lcnMgb2YgWmFtaW5kYXJzIChyZW50ICBjb2xsZWN0b3JzKS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B - 3; C - 2; D - 4 ",
        "option2" : " A - 1; B - 4; C - 2; D - 3 ",
        "option3" : " A - 3; B - 4; C - 1; D - 2 ",
        "option4" : " A - 2; B - 1; C - 3; D - 4 "
      }
    },
    {
      "index" : 36,
      "question" : "Who among the following streamlined the Maratha administration after Sambhaji ?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzY=",
      "description" : "QmVzdCBhbnN3ZXIgaXMgQmFsYWppIFZpc2h3YW5hdGguIEFzIFNhbWJoYWppICAoMTY4MC04OSkgd2VyZSBzdWNjZWVkZWQgYnkgUmFqYXJhbSwgU2hpdmFqaSBJSSwgVGFyYWJhaSBhbmQgIFNoYWh1IGppLiBCYWxhamkgVmlzaHdhbmF0aCBwbGF5ZWQgYSBjcnVjaWFsIHJvbGUgaW4gdGhlIGZpbmFsICB2aWN0b3J5IG9mIFNoYWh1IGJ5IHdpbm5pbmcgb3ZlciBhbG1vc3QgYWxsIHRoZSBNYXJhdGhhICBzYXJkYXJzIHRvIHRoZSBzaWRlIG9mIFNoYWh1LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Raja Ram ",
        "option2" : " Balaji Vishwanath ",
        "option3" : " Ganga Bai ",
        "option4" : " Nanaji Deshmukh "
      }
    },
    {
      "index" : 37,
      "question" : "The given map refers to the kingdom of :                      ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzc=",
      "description" : "S2hhbmRlc2ggd2FzIGFuY2llbnQgbmFtZSBvZiB0aGUgbm9ydGgtd2VzdGVybiAgcmVnaW9uIG9mIE1haGFyYXNodHJhLiBBc2lyZ2FyaCB3YXMgYW4gaW1wb3J0YW50IGZvcnQgaW4gIEtoYW5kZXNoLiBJbiAxNjAxLCBNdWdoYWwgZW1wZXJvciBBa2JhciBhbm5leGVkIHRoZSAgS2hhbmRlc2ggc3VsdGFuYXRlIGFuZCBCdXJoYW5wdXIgYmVjYW1lIHRoZSBjYXBpdGFsIG9mICBLaGFuZGVzaCBTdWJhaCBvZiB0aGUgTXVnaGFsIGVtcGlyZS4gVGhlIHNoYWRlZCBwb3J0aW9uICBpbiBnaXZlbiBtYXAgaW5kaWNhdGVzIEtoYW5kZXNoIGR1cmluZyBBa2Jhci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar at the time of capture of Khandesh in 1601 ",
        "option2" : " Akbar at the time of his death in 1605 ",
        "option3" : " Aurangzeb at the time of capture of Hyderabad ",
        "option4" : " Aurangzeb at the time of his death in 1707 "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following events:  1. Reign of Krishna Deva of Vijaynagara 2. Construction of Qutab Minar 3. Arrival of Portuguese in India 4. Death of Firoz Tughlaq Correct chronological sequence of these events is : ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzg=",
      "description" : "UmVpZ24gb2YgS3Jpc2huYSBEZXZhIG9mIFZpamF5bmFnYXJhIC0gKDE1MDkgLSAzMCk7ICBDb25zdHJ1Y3Rpb24gb2YgUXV0YWIgTWluYXIgKDEyMDYgLSAxMjEwKTsgQXJyaXZhbCBvZiAgUG9ydHVnZXNlIGluIEluZGlhICgxNDk4KTsgRGVhdGggb2YgRmlyb3ogVHVnaGxhcSAoMTM4OCkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2, 4, 3, 1 ",
        "option2" : " 2, 4, 1, 3 ",
        "option3" : " 4, 2, 1, 3 ",
        "option4" : " 4, 2, 3, 1 "
      }
    },
    {
      "index" : 39,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:                                 List-I List-II A. Iqta 1. Marathas B. Jagir 2. Delhi Sultans C. Amaram 3. Mughals D. Mokasa 4. Vijayanagara Codes: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzk=",
      "description" : "VGhlc2UgYXJlIHRoZSBsYW5kIGdyYW50cyBnaXZlbiBkdXJpbmcgdGhlIHBlcmlvZCBvZiAgZGlmZmVyZW50IGR5bmFzdGllcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 2; C - 1; D - 4 ",
        "option2" : " A - 2; B - 3; C - 4; D - 1 ",
        "option3" : " A - 2; B - 3; C - 1; D - 4 ",
        "option4" : " A - 3; B - 2; C - 4; D - 1 "
      }
    },
    {
      "index" : 40,
      "question" : "Which one of the following Muslim rulers was hailed as the 'Jagadguru' by his Muslim subject because of his belief in secularism?   ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDA=",
      "description" : "SWJyYWhpbSBBZGlsIFNoYWggSUkgKDE1NTYgLSAxNjI3KSwgb2YgdGhlIEFkaWwgU2hhaGkgIGR5bmFzdHksIHdhcyB0aGUga2luZyBvZiBCaWphcHVyIFN1bHRhbmF0ZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hussain Shah ",
        "option2" : " Zain-ul-Aidin ",
        "option3" : " Ibrahim Adil Shah ",
        "option4" : " Mahmu II "
      }
    },
    {
      "index" : 41,
      "question" : "In which one of the following cities is the Lingaraja Temple located?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDE=",
      "description" : "TGluZ2FyYWphIFRlbXBsZSB3YXMgY29uc3RydWN0ZWQgYnkgWWF5YXRpIEtlc2FyaSwgIHJ1bGVyIG9mIE9yaXNzYS4gSXQgaXMgbG9jYXRlZCBpbiBCaHViYW5lc2h3YXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhubaneswar ",
        "option2" : " Bijapur ",
        "option3" : " Kolkata ",
        "option4" : " Shravananbelagola "
      }
    },
    {
      "index" : 42,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I (Bhakti Saint)  List-II (Profession) A. Namdev 1. Barber B. Kabir 2. Weaver C. Ravidas 3. Tailor D. Sena 4. Cobbler Codes: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDI=",
      "description" : "VGhlc2UgQmhha3RpIHNhaW50cyB3ZXJlIGRpc2NpcGxlcyBvZiBTYWludCBSYW1hbmFuZGEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 3; C - 1; D - 4 ",
        "option2" : " A - 3; B - 2; C - 4; D - 1 ",
        "option3" : " A - 3; B - 2; C - 1; D - 4 ",
        "option4" : " A - 2; B - 3; C - 4; D - 1 "
      }
    },
    {
      "index" : 43,
      "question" : "Mongols under Chengiz Khan invaded India during the reign of :  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDM=",
      "description" : "TW9uZ29scyB1bmRlciBDaGVuZ2l6IEtoYW4gKGRpZWQgaW4gMTIyNykgaW52YWRlZCAgSW5kaWEgZHVyaW5nIHRoZSByZWlnbiBvZiBJbHR1dG1pc2ggKDEyMTEtMzYpIGJ1dCBkaWQgbm90IGVudGVyICBkZWVwIGluIEluZGlhIGFzIElsdHV0bWlzaCByZWZ1c2VkIHRvIGdpdmUgc2hlbHRlciB0byB0aGUgUGVyc2lhbiAga2luZywgS2h3YXJpem0gU2hhaCwgd2hvbSBDaGVuZ2l6IEtoYW4gd2FzIGNoYXNpbmcuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Balban ",
        "option2" : " Firoz Tughlaq ",
        "option3" : " Iltutmish ",
        "option4" : " Muhamma Bin Tughlaq "
      }
    },
    {
      "index" : 44,
      "question" : "Which among the following ports was called Babul Makka (Gate of Makka) during the Mughal period?               ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDQ=",
      "description" : "U3VyYXQgd2FzIGNhbGxlZCBHYXRlIG9mIE1ha2thIGJlY2F1c2UgdGhlIHBpbGdyaW1hZ2UgIHRvIE1ha2thIHN0YXJ0ZWQgZnJvbSBTdXJhdC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Calicut ",
        "option2" : " Broach ",
        "option3" : " Cambay ",
        "option4" : " Surat "
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following pairs is correctly matched?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDU=",
      "description" : "RGV3YW4taS1CYW5kYWdhbmkgKERlcGFydG1lbnQgb2YgU2xhdmVzKSB3YXMgIGNvbnN0aXR1dGVkIGJ5IEZpcm96IFR1Z2hsYXE7IERld2FuLWktTXVzdGFraHJhaiAoRGVwdCAgb2YgQXJyZWFycykgLSBBbGF1ZGRpbiBLaGFsamk7IERld2FuLWktS29oaSAoRGVwdCBvZiAgQWdyaWN1bHR1cmUpIC0gTXVoYW1tYWQgQmluIFR1Z2hsYXE7IERld2FuLWktQXJ6IChEZXB0ICBvZiBNaWxpdGFyeSkgLSBCYWxiYW4uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dewan-i-Bandagani - Tughlaq ",
        "option2" : " Dewan-i-Mustakhraj - Balban ",
        "option3" : " Dewan-i-Kohi - Alauddin Khilji ",
        "option4" : " Dewan-i-Arz - Muhammad Tughlaq "
      }
    },
    {
      "index" : 46,
      "question" : "Assertion (A): Battle of Khanua was certainly more decisive and significant than the First Battle of Panipat Reason (R): Rana Sanga, the Rajput hero, was certainly a more formidable adversary than Ibrahim Lodi.            47. Bay of Bengal The shaded area in the above map shows the empire of :  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDY=",
      "description" : "QmF0dGxlIG9mIEtoYW51YSAoMTUyNywgUmFuYSBTYW5nYSB3YXMgZGVmZWF0ZWQgYnkgIEJhYmFyKTsgRmlyc3QgQmF0dGxlIG9mIFBhbmlwYXQgKDE1MjYsIElicmFoaW0gTG9kaGkgd2FzICBkZWZlYXRlZCBieSBCYWJ1cikuIFJhbmEgU2FuZ2hhIG9uY2UgZGVmZWF0ZWQgSWJyYWhpbSAgTG9kaGkgc28gUiBleHBsYWlucyBBLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Alauddin Khalji ",
        "option2" : " Mohammad Tughlaq ",
        "option3" : " Shahjahan ",
        "option4" : " Aurangzeb "
      }
    },
    {
      "index" : 48,
      "question" : "Who among the following was the first Bhakti saint to use Hindi for the propagation of his message?                ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDg=",
      "description" : "UmFtYW5hbmRhICgxMzYwLTE0NzApIHdhcyB0aGUgZmlyc3QgQmhha3RpIHNhaW50IHRvIHVzZSAgSGluZGkgZm9yIHRoZSBwcm9wYWdhdGlvbiBvZiBoaXMgbWVzc2FnZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dadu ",
        "option2" : " Kair ",
        "option3" : " Ramananda ",
        "option4" : " Tulsias "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to medieval Indian rulers, which one of the following statement is correct?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDk=",
      "description" : "Rmlyb3ogVHVnaGxhcSBzZXQgdXAgYSBzZXBhcmF0ZSBkZXBhcnRtZW50IG9mIHNsYXZlcyAga25vd24gYXMgJ0Rpd2FuLWktQmFuZGFnYW4nLiBNb2hkIEJpbiBUdWdobGFxIHdhcyAgc3VjY2VlZGVkIGJ5IGhpcyBjb3VzaW4gKG5vdCB1bmNsZSkgRmlyb3ogVHVnaGxhcS4gIEFsYXVkZGluIEtoYWxqaSBpbnRyb2R1Y2VkIHRoZSBicmFuZGluZyBzeXN0ZW0gb2YgaG9yc2VzICBpbiBoaXMgbWlsaXRhcnkuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Alauddin Khalji first set up a separate ariz's department. ",
        "option2" : " Balban introduced the branding of horses in his military. ",
        "option3" : " Muhammad Bin Tughlaq was succeeded by his uncle  to the military. ",
        "option4" : " Firoz Tughlaq set up a separate department of slaves. "
      }
    },
    {
      "index" : 50,
      "question" : "The motive behind Shah Jahan's Balkh campaign was to:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTA=",
      "description" : "VGhlIG1vdGl2ZSBiZWhpbmQgU2hhaCBKYWhhbidzIEJhbGtoIGFuZCBCYWRha3NoYW4gIGNhbXBhaWduIGluIGNlbnRyYWwgQXNpYSB3YXMgdG8gc2VjdXJlIHRoZSBkZWZlbmNlIG9mIE5vcnRoLSAgV2VzdCBJbmRpYS4gVGhhdCdzIHdoeSB0aGUgc3RhdGVtZW50IGEgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " secure a friendly ruler in Balkh and Badakshan which  bordered Kabul ",
        "option2" : " conquer Samarqand and Farghana, the Mughal  homelands ",
        "option3" : " fix the Mughal frontier on the 'scientific line', the Amu  Daria ",
        "option4" : " expand the Mughal Empire beyond the sub-continent "
      }
    },
    {
      "index" : 51,
      "question" : "Assertion (A): Muhammad Bin Tughlaq left Delhi, and for two years lived in a camp called Swarga-Dwari. Reason (R): At that time, Delhi was ravaged by plague and many people died.  52. Historian Barani refused to consider the state in India under Delhi Sultans as truly Islamic because:  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTE=",
      "description" : "TGlrZSBBbGxhdWRkaW4gS2hhbGppLCBNdWhhbW1hZCBiaW4gVHVnaGxhcSBhbHNvICB0cmllZCB0byBicmluZyBjaGFuZ2VzIGluIHRoZSBhZ3JhcmlhbiBzZXQgdXAuIFNvbWUgaGlzdG9yaWFucyAgcG9pbnQgb3V0IHRoYXQgaGUgbWFkZSBhbiBvdmVyIGFzc2Vzc21lbnQgYmVjYXVzZSBvZiB3aGljaCAgbWFueSBwZWFzYW50cyBmbGVkIHRoZSByZWdpb24uIEJ1dCB0aGUgc3RhdGVzIHNoYXJlIHJlbWFpbmVkICBoYWxmLiBBIHNldmVyZSBmYW1pbmUgaW4gdGhpcyBwZXJpb2Qgd29yc2VuZWQgdGhlIHNpdHVhdGlvbi4gIE11aGFtbWFkIGJpbiBUdWdobGFxIHRyaWVkIHRvIHByb3ZpZGUgcmVsaWVmIHRvIHRob3NlICBhZmZlY3RlZCBhbmQgbWFkZSBlZmZvcnRzIHRvIGltcHJvdmUgYW5kIGV4dGVuZCBjdWx0aXZhdGlvbi4gIFRoZSBzdWx0YW4gbGVmdCBEZWxoaSBhbmQgcmVuZGVyZWQgaW4gYSBjYW1wIGNhbGxlZCAgc3dhcmdhZHdhcmkgbmVhciBrYW5hdWouIEhlIGFsc28gc2V0IHVwIGEgc2VwYXJhdGUgIGRlcGFydG1lbnQgY2FsbGVkIGRpd2FuLWkgYW1pci1pIGtvaGkgd2hvc2UgZnVuY3Rpb24gd2FzICB0byBleHRlbmQgY3VsdGl2YXRpb24gYnkgcHJvdmlkaW5nIGxvYW5zLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " majority of the population did not follow Islam ",
        "option2" : " muslim theologists were often disregarded ",
        "option3" : " Sultan supplemented the Muslim law by framing his  own regulations ",
        "option4" : " religious freedom was accorded to non-muslims "
      }
    },
    {
      "index" : 53,
      "question" : "With reference to Suffism in Indian history, consider the following statements:  1. Sheikh Ahmad Sarhandi was a contemporary of Ibrahim Lodi 2. Sheikh Nasiruddin Chirag-I-Dehlavi was a disciple of Sheikh Nizamuddin Auliya 3. Aurangzeb was a contemporary of Sheikh Salim Chisti 4. Qadiri order of Sufis was first introduced in India by Sheikh Niamutullah and Makhdum Muhammad Jilani Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTM=",
      "description" : "U2hlaWtoIEFobWFkIFNhcmhhbmRpIG9mIE5hcXNoYmFuZGkgb3JkZXIgd2FzIGEgIGNvbnRlbXBvcmFyeSBvZiBBa2JhciBhbmQgSmFoYW5naXIuIFRoZSBRYWRpcmkgb3JkZXIgb2YgIFN1ZmlzIHdhcyBmaXJzdCBpbnRyb2R1Y2VkIGluIEluZGlhIGJ5IFNoZWlraCBOaXphbWF0dWxsYWggIChIZSBkaWVkIGluIDE0MzAgQUQpIGFuZCBNYWtoZHVtIChvciBOYXNpcnVkZGluKSAgTXVoYW1tYWQgSmlsYW5pIChkaWVkIGluIDE1MTcpLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3 ",
        "option3" : " 2 and 3 ",
        "option4" : " 2 an 4 "
      }
    },
    {
      "index" : 54,
      "question" : "Assertion (A):  Emperor Akbar marched towards Afghanistan in 1581 with a huge army. Reason (R): He was on his way to reclaim his ancestral country of Ferghana in Central Asia.  55. Assertion (A): Shah Alam II spent the initial years as an emperor far away from his capital. Reason (R): There was always a lurking danger of foreign invasion from the north-west frontier.  56. Assertion (A): Saluva Narasimha put an end to the old dynasty and assumed the royal title. Reason (R) : He wanted to save the kingdom from further degeneration and disintegration.  57. Assertion (A) : Marathas emerged as the strongest native power in India after the decline of Mughal empire. Reason (R) : Marathas were the first to have a clear concept of a united Indian nation.  58. Alam Khan, one of those who invited Babur to invade India was:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTQ=",
      "description" : "QSBpcyBjb3JyZWN0IGFzIEFrYmFyIG1hcmNoZWQgdG93YXJkcyBBZmdoYW5pc3RhbiBpbiAgMTU4MSB0byBjb25xdWVyIEthYnVsIHRvIGV4cGFuZCBoaXMga2luZ2RvbS4gUiBpcyBpbmNvcnJlY3QgIGFzIGhlIGhhZCBubyBpbnRlbnRpb24gdG8gcmVjbGFpbSBoaXMgYW5jZXN0cmFsIGNvdW50cnkgb2YgIEZlcmdoYW5hLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " an uncle of Ibrahim Lodi and a pretender to the throne  of Delhi ",
        "option2" : " a cousin of Ibrahim Lodi who was ill-treated and expelled  from the country ",
        "option3" : " the father of Dilawar Khan to whom cruel treatment  was meted out by Ibrahim Lodi ",
        "option4" : " a high official in Punjab province who was "
      }
    },
    {
      "index" : 59,
      "question" : "Battle of Dharmat was fought between:  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTk=",
      "description" : "VGhlIGJhdHRsZSBvZiBEaGFybWF0IHdhcyBmb3VnaHQgYmV0d2VlbiBBdXJhbmd6ZWIgIGFuZCBEYXJhIFNoaWtvaCBpbiAxNjU4IGZvciBTaGFoamFoYW4ncyB0aHJvbmUuIERhcmEgU2hpa29oICB3YXMgZGVmZWF0ZWQgYnkgQXVyYW5nemViLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Muhammad Ghori and Jai Chand ",
        "option2" : " Babur and Afghans ",
        "option3" : " Aurangzeb and Dara Shikoh ",
        "option4" : " Ahmad Shah Durrani and the Marathas "
      }
    },
    {
      "index" : 60,
      "question" : "How did the Mughal Emperor Jahandarshah's reign, come to an early end?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjA=",
      "description" : "SGUgd2FzIGRlZmVhdGVkIGJ5IGhpcyBuZXBoZXcsIEZhcnJ1a2ggU2l5eWFyIHdpdGggIHRoZSBoZWxwIG9mIFNheXlpZCBCcm90aGVycy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He was deposed by his Wazir ",
        "option2" : " He died due to a slip while climbing down the steps ",
        "option3" : " He was defeated by his nephew in a battle ",
        "option4" : " He died of sickness due to drinking "
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements: 1. Kitab-i-Nauras, a collection of songs in praise of Hindu deities and Muslim saints, was written by Ibrahim Adil Shah II 2. Amir Khusrau was the originator in India of the early from of the musical style known as Qawali                  Which of these statements is/are correct? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjE=",
      "description" : "SWJyYWhpbSBBZGlsIFNoYWggSUkgd2FzIHJ1bGVyIG9mIEJpamFwdXIgYW5kIHdyb3RlICBLaXRhYi1pLU5hdXJhcy4gQW1pciBLaHVzcmF1IGlzIHBvcHVsYXJseSBrbm93biBhcyAnRmF0aGVyICBvZiBRYXdhbGknIGluIEluZGlhLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 62,
      "question" : "How did Sultan Qutb-ud-din Aibak die?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjI=",
      "description" : "UXV0YnVkLWRpbiBBaWJhayBkaWVkIGFmdGVyIGEgZmFsbCBmcm9tIGhpcyBob3JzZSB3aGlsZSAgcGxheWluZyBjaGF1Z2FuIChwb2xvKSBpbiAxMjEwLiBIZSB3YXMgc3VjY2VlZGVkIGJ5IEFyYW0gIFNoYWguIFF1dGJ1ZC1kaW4gQWliYWsgd2FzIHRoZSBmb3VuZGVyIG9mIGZpcnN0IGluZGVwZW5kZW50ICBUdXJraXNoIGtpbmdkb20gaW4gTm9ydGhlcm4gSW5kaWEgaW4gMTIwNi4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He was treacherously stabbed to death by one of his  ambitious nobles ",
        "option2" : " He was killed in a battle with Taj-u-din Yildiz, the ruler  of Ghazni who entered into a contest with him over the  capture of Punjab ",
        "option3" : " He sustained injuries while besieging the fortress of  Kalinjar in Bundelkhand and succumbed to them later ",
        "option4" : " He died after a fall from his horse while playing Chaugan "
      }
    },
    {
      "index" : 63,
      "question" : "Which one of the following sequences indicates the correct chronological order?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjM=",
      "description" : "VGhlIGNvcnJlY3QgY2hyb25vbG9naWNhbCBvcmRlciBpcyBTaGFua2FyYWNoYXJ5YSAoOXRoICBDZW50dXJ5IENFKSAtIFJhbWFudWphICgxMDE3LTExMzcgQ0UpIC0gQ2hhaXRhbnlhICgxNDg2LSAgMTUzMyBDRSkg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Shankaracharya-Ramanuja-Chaitanya ",
        "option2" : " Ramanuja-Shankaracharya-Chaitanya ",
        "option3" : " Ramanuja-Chaitanya-Shankaracharya ",
        "option4" : " Shankaracharya-Chaitanya-Ramanuja "
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements: 1. Narasimha Saluva ended the Sangama dynasty and seized the throne for himself and started the Saluva dynasty. 2. Vira Narasimha deposed the last Saluva ruler and seized the throne for himself. 3. Vira Narasimha was succeeded by his younger brother, Krishnadeva Raya. 4. Krishnadeva Raya was succeeded by his half brother, Achyuta Raya. Which of the statements given above are correct? (a) 1, 2 and 3 (b) 2, 3 and 4  Sultanate?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjQ=",
      "description" : "U2FuZ2FtYSBkeW5hc3R5IHdhcyBmb3VuZGVkIGJ5IEhhcmloYXJhLUkuIFNhbHV2YSAgZHluYXN0eSB3YXMgZm91bmRlZCBieSBOYXJhc2ltaGEgU2FsdXZhIGJ5IGRlZmVhdGluZyAgRGV2IFJheXVhLUlJIG9mIFNhbmdhbWEgZHluYXN0eS4gVGFsdXZhIGR5bmFzdHkgd2FzICBmb3VuZGVkIGJ5IFZpcmEgTmFyYXNpbWhhIGFuZCB3YXMgc3VjY2VlZGVkIGJ5IEtEIFJheWEgIGFuZCBBY2h5dXRhIFJheWEuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Firoz  Shah Tughlaq ",
        "option2" : " Ghiyas-ud-din Tughlaq Shah II ",
        "option3" : " 1 and 4 ",
        "option4" : " 1, 2, 3 an 4  65. Who was the last ruler of the Tughlaq dynasty of the Delhi "
      }
    },
    {
      "index" : 66,
      "question" : "How did the dynasty of Nizam Shahis of Ahmadnagar come to an end?   ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjY=",
      "description" : "QWhtYWRuYWdhciB3YXMgZm91bmRlZCBieSBNYWxpayBBaG1hZCBvZiAgTml6YW0gIFNoYWhpIGR5bmFzdHkgaW4gMTQ5MC4gSXQgd2FzIGFubmV4ZWQgYnkgU2hhaGphaGFuIGluIDE2MzMgIGludG8gdGhlIE11Z2hhbCBFbXBpcmUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ahmadnagar was annexed into Mughal empire and  Hussain Shah was given life imprisonment ",
        "option2" : " Mughal troops destroyed Daulatabad fort and killed  Nizam-ul Mulk of Ahmadnagar ",
        "option3" : " Fateh Khan usurped the throne from Nizam-ul-Mulk ",
        "option4" : " Malik Ambar was defeated in a battle with Mughals in "
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements about Sikh Gurus:  1. Banda Bahadur was appointed as the military leader of the Sikhs by Guru Tegh Bahadur. 2. Guru Arjun Dev became the Sikh Guru after Guru Ram Das. 3. Guru Arjun Dev gave to Sikhs their own script Guru Mukhi. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njc=",
      "description" : "QmFuZGEgQmFoYWR1ciB3YXMgYXBwb2ludGVkIGFzIHRoZSBtaWxpdGFyeSBsZWFkZXIgb2YgIHRoZSBTaWtocyBieSBHdXJ1IEdvYmluZCBTaW5naCBhbmQgbm90IEd1cnUgVGVnaCBCYWhhZHVyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 and 3 ",
        "option4" : " 1 an 2 "
      }
    },
    {
      "index" : 68,
      "question" : "The initial design and construction of which massive temple took place during the reign of Suryavarman II?         ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njg=",
      "description" : "QW5na29ydmF0IHRlbXBsZSBpcyB0aGUgZmlyc3QgSGluZHUgdGVtcGxlLCBkZWRpY2F0ZWQgIHRvIHRoZSBnb2QgVmlzaG51LiBCdWRkaGlzdCB0ZW1wbGUgd2FzIGJ1aWx0IGR1cmluZyB0aGUgcmVpZ24gIG9mIFN1cnlhdmFybWFuIElJLiBJdCBpcyB0aGUgd29ybGQncyBsYXJnZXN0IHJlbGlnaW91cyBidWlsZGluZy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sri Mariamman Temple ",
        "option2" : " Angkor Vat Temple ",
        "option3" : " Batu Caves Temple ",
        "option4" : " Kamakhya Temple "
      }
    },
    {
      "index" : 69,
      "question" : "When Raja Wodeyar founded the kingdom of Mysore, who was the ruler of the Vijayanagar Empire?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njk=",
      "description" : "SW5kaWdlbm91cyBjaGllZnRhaW5zIGZyb20gS2FybmF0YWthIHJvc2UgdG8gYmVjb21lICB0aGUgZm91bmRlcnMgb2YgYSBkeW5hc3R5IGFmdGVyIGEgc2VyaWVzIG9mIGludGVybmFsIGJpY2tlcmluZ3MgIHdpdGggb3RoZXIgbG9jYWwgY2hpZWZ0YWlucy4gVmlqYXlhIGFuZCBLcmlzaG5hLCB0d28gYnJvdGhlcnMgIHdlcmUgcmVzcG9uc2libGUgZm9yIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoaXMgc21hbGwgIGZldWRhdG9yeSBzdGF0ZSBvZiAgVmlqYXlhbmFnYXJhIEVtcGlyZS4gVmlqYXlhIGFzY2VuZGVkIHRoZSAgdGhyb25lIHVuZGVyIHRoZSBhc3N1bWVkIG5hbWUgb2YgWWFkdXJhamEgaW4gMTM5OSBBLkQuIFRvICBiZWdpbiB3aXRoLCB0aGlzIHdhcyBhIHZlcnkgc21hbGwgc3RhdGUgY29udGFpbmluZyBvbmx5IHBhcnRzICBvZiBNeXNvcmUgZGlzdHJpY3QuIE15c29yZSB3YXMgdGhlIGNhcGl0YWwgY2l0eS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sadasiva ",
        "option2" : " Tirumala ",
        "option3" : " Ranga II ",
        "option4" : " Venkata II "
      }
    },
    {
      "index" : 70,
      "question" : "In the year 1613, where was the English East India Company given permission to set up a factory (trading post)?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzA=",
      "description" : "SW4gMTYxMiAgU2lyIFRob21hcyBSb2UgdmlzaXRlZCB0byBNdWdoYWwgRW1wZXJvciAgSmFoYW5naXIgdG8gYXJyYW5nZSBmb3IgYSBjb21tZXJjaWFsIHRyZWF0eSB0aGF0IHdvdWxkIGdpdmUgIHRoZSBjb21wYW55IGV4Y2x1c2l2ZSByaWdodHMgdG8gcmVzaWRlIGFuZCBidWlsZCBmYWN0b3JpZXMgIGluIFN1cmF0IGFuZCBvdGhlciBhcmVhcy4gIEluIHJldHVybiwgdGhlIGNvbXBhbnkgb2ZmZXJlZCB0byAgcHJvdmlkZSB0aGUgRW1wZXJvciB3aXRoIGdvb2RzIGFuZCByYXJpdGllcyBmcm9tIHRoZSAgRXVyb3BlYW4gbWFya2V0LiAgSmFoYW5naXIgYWNjZXB0ZWQgdGhlIHByb3Bvc2FsIGFuZCB0aGUgIGNvbXBhbnkgY3JlYXRlZCB0cmFkaW5nIHBvc3RzIGluIFN1cmF0ICh3aGVyZSBhIGZhY3Rvcnkgd2FzICBidWlsdCBpbiAxNjEzKSwgTWFkcmFzICgxNjM5KSwgQm9tYmF5ICgxNjY4KSwgYW5kIENhbGN1dHRhICAoMTY5MCkuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bangalore ",
        "option2" : " Madras ",
        "option3" : " Masulipattam ",
        "option4" : " Surat "
      }
    },
    {
      "index" : 71,
      "question" : "Assertion (A): Muhammad bin Tughlaq issued a new gold coin which was called Dinar by Ibn Batutah. Reason (R): Muhammad bin Tughlaq wanted to issue token currency in gold coins to promote trade with West Asian and North African countries.  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzE=",
      "description" : "QSBpcyBjb3JyZWN0IGJ1dCBSIGlzIHdyb25nIGFzIGhlIGlzc3VlZCBicm9uemUgY29pbnMgIGFzIHRoZSB0b2tlbiBjdXJyZW5jeSB3aGljaCB3YXMgYSBncmVhdCBmaWFzY28uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A are R are true but R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 72,
      "question" : "Which one of the following is the correct chronological order of the Afghan rulers to the throne of Delhi?    ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzI=",
      "description" : "QmFobG9sICgxNDUxLTE0ODkpOyBTaWthbmRhciAoMTQ4OS0xNTE3KTsgSWJyYWhpbSAgKDE1MTctMTUyNikg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sikandar Shah-Ibrahim Lodi-Bahlol Khan Lodi ",
        "option2" : " Sikandar Shah-Bahlol Khan Lodi-Ibrahim Lodi ",
        "option3" : " Bahlol Khan Lodi-Sikandar Shah-Ibrahim Lodi ",
        "option4" : " Bahlol Khan Lodi-Ibrahim Lodi-Sikandar Shah "
      }
    },
    {
      "index" : 73,
      "question" : "Bhakta Tukaram was a contemporary of which Mughal emperor?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzM=",
      "description" : "QmVzdCBhbnN3ZXIgaXMgYyBhcyBUdWthcmFtICgxNjA4LTE2NTApIHdhcyBhIE1hcmF0aGkgIEJoYWt0aSBwb2V0IGFuZCBhIGRldm90ZWUgb2YgTG9yZCBLcmlzaG5hLiBUaW1lIHBlcmlvZCBvZiAgSmFoYW5naXIgd2FzIDE2MDUtMTYyNy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Babar ",
        "option2" : " Akar ",
        "option3" : " Jahangir ",
        "option4" : " Aurangzeb "
      }
    },
    {
      "index" : 74,
      "question" : "In Indian history, who was Abdul Hamid Lahori?     ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzQ=",
      "description" : "QWJkdWwgSGFtaWQgTGFob3JpIChkLiAxNjU0KSB3YXMgYSB0cmF2ZWxsZXIgZHVyaW5nIHRoZSAgcGVyaW9kIG9mIFNoYWhqYWhhbiB3aG8gbGF0ZXIgYmVjYW1lIGEgY291cnQgaGlzdG9yaWFuIG9mICBTaGFoamFoYW4uIEhlIHdyb3RlIHRoZSBib29rIFBhZHNoYWggTmFtYSBhbHNvIHJlZmVycmVkICBhcyBCYWRzaGFoIG5hbWEsIGFib3V0IHRoZSByZWlnbiBvZiBTaGFoamFoYW4uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " An important military commander during Akbar reign. ",
        "option2" : " An official historian of the reign of Shahjahan. ",
        "option3" : " An important noble and confidant of Aurangzeb. ",
        "option4" : " A chronicler and poet during the reign of Muhammad "
      }
    },
    {
      "index" : 75,
      "question" : "Where is the famous Vijaya Vittala temple having its 56 carved pillars emitting musical notes located? (a) Belur (b) Bhadrachalam  (a) Akbar (b) Jahangir  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzU=",
      "description" : "VmlqYXlhIFZpdHRhbGEgdGVtcGxlIGlzIGxvY2F0ZWQgYXQgSGFtcGksIHRoZSBjYXBpdGFsIG9mICBWaWpheWFuYWdhciBraW5nZG9tIGR1cmluZyB0aGUgcmVpZ24gb2YgS3Jpc2huYWRldiBSYXlhLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hampi ",
        "option2" : " Shahjahan ",
        "option3" : " Srirangam  76. During the time of which Mughal Emperor did the English  East India Company establish its first factory in India? ",
        "option4" : " Aurangzeb "
      }
    },
    {
      "index" : 77,
      "question" : "Where is the famous Virupaksha temple located?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzc=",
      "description" : "T2xkZXN0IHRlbXBsZSBpbiBIYW1waSAoUGF0dGFka2FsKSBsb2NhdGVkIG9uIHNvdXRoZXJuICBiYW5rIG9mIHJpdmVyIFR1bmdhYmhhZHJhLiBJdCBpcyBub3cgYSBXb3JsZCBIZXJpdGFnZSBzaXRlLiAgSXQgd2FzIGJ1aWx0IGJ5IExva2FtYWhhZGV2aSwgdGhlIFF1ZWVuIG9mIFZpa2FyYW1hZGl0eWEgIElJIChBLkQuNzMzLTc0NSkgaW4gYWJvdXQgQS5ELjc0MCB0byBjb21tZW1vcmF0ZSBoZXIgIGh1c2JhbmQncyB2aWN0b3J5IG92ZXIgdGhlIFBhbGxhdmFzIG9mIEthbmNoaXB1cmFtLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhadrachalam ",
        "option2" : " Chidamaram ",
        "option3" : " Hampi ",
        "option4" : " Srikalahasti "
      }
    },
    {
      "index" : 78,
      "question" : "Match List-I with List-II and select the correct answer using the code given below the lists:  List-I (Famous temple)     List-II (State) A. Vidyashankara temple 1.  Andhra Pradesh B. Rajarani temple 2.  Karnataka C. Kandariya Mahadeo 3.  Madhya Pradesh temple D. Bhimesvara temple 4.  Orissa Codes: ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzg=",
      "description" : "QmhpbWVzaHdhciAoS2FraW5hZGEpOyBLYW5kYXJpeWEgTWFoYWRlbyAgKEtoYWp1cmFobyk7IFJhamFyYW5pIHRlbXBsZSAoQmh1Ym5lc2h2YXIpOyBWaWR5YXNoYW5rYXJhICBUZW1wbGUgKFNyaW5nZXJpKS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 3; D - 1 ",
        "option2" : " A - 2; B - 3; C - 4; D - 1 ",
        "option3" : " A - 1; B - 4; C - 3; D - 2 ",
        "option4" : " A - 1; B - 3; C - 4; D - 2 "
      }
    },
    {
      "index" : 79,
      "question" : "With whose permission did the English set up their first factory in Surat?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzk=",
      "description" : "SmFtZXMtSSBXaWxsaWFtIEhhd2tpbnMgc2VudCB0byB0aGUgY291cnQgb2YgSmFoYW5naXIgIGFuZCBKYWhhbmdpciBwcm92aWRlZCB0aGUgZmFybWFuIHdoaWNoIGFsbG93ZWQgRWFzdCBJbmRpYSAgQ28uIHRvIHNldCB1cCBhIGZhY3RvcnkgYXQgU3VyYXQgaW4gMTYxMy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar ",
        "option2" : " Jahangir ",
        "option3" : " Shahjahan ",
        "option4" : " Aurangzeb "
      }
    },
    {
      "index" : 80,
      "question" : "Among the following, who was not a proponent of Bhakti cult ?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8ODA=",
      "description" : "TmFnYXJqdW5hIHdhcyBhbiBlYXJseSBwaGlsb3NvcGhlciBhbmQgd2FzIHRoZSAgZm91bmRlciBvZiB0aGUgTWFkaHlhbWlrYSBwaGlsb3NvcGh5LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nagarjuna ",
        "option2" : " Tukaram ",
        "option3" : " Tyagaraja ",
        "option4" : " Vallabhacharya "
      }
    },
    {
      "index" : 81,
      "question" : "Why did Buddhism start declining in India in the early medieval times ?  1. Buddha was by that time considered as one of the incarnations of Vishnu and thus became a part of Vaishnavism. 2. Invading tribes from Central Asia till the time of last Gupta king adopted Hinduism and persecuted Buddhists. 3. Kings of Gupta dynasty were strongly opposed to Buddhism. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8ODE=",
      "description" : "QnVkZGhhIHdhcyBjb25zaWRlcmVkIDl0aCBpbmNhcm5hdGlvbiBvZiBWaXNobnUuIE5vICB0cmliZSBmcm9tIENlbnRyYWwgQXNpYSBwZXJzZWN1dGVkIEJ1ZGRoaXN0cy4gR3VwdGEgZHluYXN0eSAgZGlkIG5vdCBvcHBvc2UgQnVkZGhpc20uIEhvd2V2ZXIsIHRoZXkgZGlkIG5vdCBnaXZlIHRoZW0gIHBhdHJvbmFnZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 82,
      "question" : "With reference to Dhrupad, one of the major traditions of India that has been kept alive for centuries, which of the following statements are correct?  1. Dhrupad originated and developed in the Rajput kingdoms during the Mughal period. 2. Dhrupad is primarily a devotional and spiritual music. 3. Dhrupad Alap uses Sanskrit syllables from Mantras. Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDgy",
      "description" : "RGhydXBhZCBpcyBwcmltYXJpbHkgYSBzcGlyaXR1YWwgYW5kIGRldm90aW9uYWwgbXVzaWMgIGFuZCBpdCB1c2VzIFNhbnNrcml0IHN5bGxhYmxlcyBmcm9tIG1hbnRyYXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : "    None of the above is correct "
      }
    },
    {
      "index" : 83,
      "question" : "With reference to the religious history of medieval India, the Sufi mystics were known to pursue which of the following practices?  1. Meditation and control of breath 2. Severe ascetic exercises in a lonely place 3. Recitation of holy songs to arouse a state of ecstasy in their audience Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDgz",
      "description" : "QWxsIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QsIGhlbmNlIHRoZSBvcHRpb24gKGQpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following Bhakti Saints:  1. Dadu Dayal 2. Guru Nanak 3. Tyagaraja Who among the above was/were preaching when the Lodi dynasty fell and Babur took over? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg0",
      "description" : "R3VydSBOYW5hayBEZXYgd2FzIGJvcm4gaW4gMTQ2OS4gQmFidXIgZGVmZWF0ZWQgIElicmFoaW0gTG9kaSBpbiAxNTI2LiBXaGVuIEJhYnVyIHRvb2sgb3ZlciBhbmQgZXN0YWJsaXNoZWQgIHRoZSBNdWdoYWwgZHluYXN0eSwgTmFuYWsgd2FzIHRyYXZlbGxpbmcgdG8gZGlmZmVyZW50IHBhcnRzICBvZiBJbmRpYSBhbmQgcHJlYWNoaW5nIFNpa2hpc20uIEJhYnVyIG9uY2UgbWV0IEd1cnUgTmFuYWsgIGR1cmluZyBvbmUgb2YgaGlzIHRyYXZlbC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 2 "
      }
    },
    {
      "index" : 85,
      "question" : "Ibadat Khana at Fatehpur Sikri was  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg1",
      "description" : "SWJhZGF0IEtoYW5hIGF0IEZhdGVocHVyIFNpa3JpIHdhcyB0aGUgaGFsbCBpbiB3aGljaCAgQWtiYXIgaGVsZCBkaXNjdXNzaW9ucyB3aXRoIHNjaG9sYXJzIG9mIHZhcmlvdXMgcmVsaWdpb25zIG9uICBldmVyeSBUaHVyc2RheSB0byBkZWJhdGUgb24gcmVsaWdpb3VzIGlzc3VlcyByYWlzZWQgYnkgQWtiYXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the mosque for the use of Royal Family ",
        "option2" : " Akbar's  private  prayer chamber ",
        "option3" : " the hall in which Akbar held discussions with scholars  of various religions ",
        "option4" : " the room in which the nobles belonging to different "
      }
    },
    {
      "index" : 86,
      "question" : "In medieval India, the designations 'Mahattara'  and  'Pattakila' were used for  ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg2",
      "description" : "SW4gbWVkaWV2YWwgSW5kaWEsIHRoZSBkZXNpZ25hdGlvbnMgJ01haGF0dGFyYScgYW5kICAnUGF0dGFraWxhJyB3ZXJlIHVzZWQgZm9yIHZpbGxhZ2UgaGVhZG1lbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : "  military officers ",
        "option2" : "  village headmen ",
        "option3" : "  specialists in Vedic rituals ",
        "option4" : "  chiefs of craft guils "
      }
    },
    {
      "index" : 87,
      "question" : "Consider the following pairs:  Medieval Indian State Present Region 1. Champaka : Central India 2. Durgara : Jammu 3. Kuluta : Malabar Which of the above pairs is / are correctly matched? ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4Nw==",
      "description" : "U3RhdGVzIHN1Y2ggYXMgQ2hhbXBha2EgKENoYW1iYSksIER1cmdhcmEgKEphbW11KSwgIFRyaWdhcnRhIChKYWxhbmRoYXIpLCBLdWx1dGEgKEt1bHUpLCBLdW1hb24gYW5kIEdhcmh3YWwgIG1hbmFnZWQgdG8gcmVtYWluIG91dHNpZGUgdGhlIG1haW4gYXJlYXMgb2YgY29uZmxpY3QgaW4gdGhlICBub3J0aGVybiBwbGFpbnMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 ",
        "option4" : "Only "
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following:  The arrival of Babur into India led to the 1. introduction of gunpowder in the subcontinent 2. introduction of the arch and dome in the region's architecture 3. establishment of Timurid dynasty in the region Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4OA==",
      "description" : "SW4gdGhlIGZvdXJ0ZWVudGggYW5kIGZpZnRlZW50aCBjZW50dXJ5IGd1biBwb3dkZXIgd2FzICB1c2VkIGZvciBtaWxpdGFyeSBwdXJwb3NlIGluIEluZGlhIGFuZCBldmVuIGFydGlsbGVyeSBpbiBpdHMgIHJ1ZGltZW50YXJ5IGZvcm0gd2FzIGtub3duLiBUaGUgQmFidXIncyBmaXJzdCByZWFsICBleHBlZGl0aW9uIHRvb2sgcGxhY2UgaW4gSW5kaWEgaW4gMTUxOSB3aGVuIGhlIGNhcHR1cmVkICBCaGVyYS4gVGhlIERlbGhpIFN1bHRhbmF0ZSdzIGdyZWF0ZXN0IGNvbnRyaWJ1dGlvbiB0byBJbmRpYW4gIGZpbmUgYXJ0cyB3YXMgdGhlIGludHJvZHVjdGlvbiBvZiBJc2xhbWljIGFyY2hpdGVjdHVyYWwgZmVhdHVyZXMsICBpbmNsdWRpbmcgdHJ1ZSBkb21lcyBhbmQgYXJjaGVzLCBhbmQgdGhlIGludGVncmF0aW9uIG9mICBJbmRpYW4gYW5kIElzbGFtaWMgc3R5bGVzIG9mIGFyY2hpdGVjdHVyZS4gVGhlIFRpbXVyaWQgIGR5bmFzdHkgd2FzIGEgU3VubmkgTXVzbGltIGR5bmFzdHkuIE1lbWJlcnMgb2YgdGhlICBUaW11cmlkIGR5bmFzdHkgd2VyZSBzdHJvbmdseSBpbmZsdWVuY2VkIGJ5IHRoZSBQZXJzaWFuICBjdWx0dXJlIGFuZCBoYWQgZXN0YWJsaXNoZWQgdHdvIHdlbGwta25vd24gZW1waXJlcyBpbiAgaGlzdG9yeSwgbmFtZWx5IHRoZSBUaW11cmlkIEVtcGlyZSAoMTM3MC0xNTA3KSBpbiBQZXJzaWEgYW5kICBDZW50cmFsIEFzaWEgYW5kIHRoZSBNdWdoYWwgRW1waXJlICgxNTI2LTE4NTcpIGluIHRoZSAgSW5kaWFuIHN1YmNvbnRpbmVudC4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 89,
      "question" : "Who of the following founded a new city on the south bank of a tributary to river Krishna and undertook to rule his new kingdom as the agent of a deity to whom all the land south of the river Krishna was supposed to belong?      ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4OQ==",
      "description" : "VmlqYXlhbmFnYXJhIG9yICJjaXR5IG9mIHZpY3RvcnkiIHdhcyB0aGUgbmFtZSBvZiBib3RoICBhIGNpdHkgYW5kIGFuIGVtcGlyZS4gVGhlIGVtcGlyZSB3YXMgZm91bmRlZCBpbiB0aGUgIGZvdXJ0ZWVudGggY2VudHVyeS4gSW4gaXRzIGhleWRheSBpdCBzdHJldGNoZWQgZnJvbSB0aGUgcml2ZXIgIEtyaXNobmEgaW4gdGhlIG5vcnRoIHRvIHRoZSBleHRyZW1lIHNvdXRoIG9mIHRoZSBwZW5pbnN1bGEsICAoS3Jpc2huYS1UdW5nYWJoYWRyYSBkb2FiKS4gSXQgd2FzIGZvdW5kZWQgYnkgSGFyaWhhcmEgIDEgYW5kIEJ1a2thLCBpbiAxMzM2LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amoghavarsha I ",
        "option2" : " Ballala II ",
        "option3" : " Harihara I ",
        "option4" : " Prataparura II "
      }
    },
    {
      "index" : 90,
      "question" : "Banjaras during the medieval period of Indian history were generally  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5MA==",
      "description" : "SW4gSW5kaWEsIEJhbmphcmEgcGVvcGxlIHdlcmUgdHJhbnNwb3J0ZXJzIG9mIGdvb2RzICBmcm9tIG9uZSBwbGFjZSAgdG8gYW5vdGhlciBhbmQgdGhlIGdvb2RzIHRoZXkgdHJhbnNwb3J0ZWQgIGluY2x1ZGVkIHNhbHQsIGdyYWlucywgZmlyZXdvb2QgYW5kIGNhdHRsZS5UaHVzLCBCYW5qYXJhcyAgd2VyZSB0cmFkZXItbm9tYWRzLiAgUmVmOiBDbGFzcyA3IE5DRVJUIFBhZ2UgOTQtOTUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " agriculturists ",
        "option2" : " warriors ",
        "option3" : " weavers ",
        "option4" : " traers "
      }
    },
    {
      "index" : 91,
      "question" : "Who of the following had first deciphered the edicts of Emperor Ashoka?  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5MQ==",
      "description" : "SW4gMTgzNywgQnJpdGlzaCBhcmNoZW9sb2dpc3QgYW5kIGhpc3RvcmlhbiBKYW1lcyAgUHJpbnNlcCBkZWNvZGVkIHRoZSBlZGljdHMgb2YgZW1wZXJvciBBc2hva2EuIFByaW5zZXAncyAgaW5zY3JpcHRpb24gcHJvdmVkIHRvIGJlIGEgc2VyaWVzIG9mIGVkaWN0cyBpc3N1ZWQgYnkgYSBraW5nICBjYWxsaW5nIGhpbXNlbGYgJ0JlbG92ZWQtb2YtdGhlLUdvZHMsIEtpbmcgUGl5YWRhc2kuJyAgUmVmOiBTdGQgMTJ0aCBOQ0VSVCwgVGhlbWVzIGluIEluZGlhIEhpc3RvcnksIFBhcnQtSSwgIFBhZ2UgMjgtMjkg",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Georg Buehler ",
        "option2" : " James Prinsep ",
        "option3" : " Max Muller ",
        "option4" : " William Jones "
      }
    },
    {
      "index" : 92,
      "question" : "With reference to the religious history of India, consider the following statements :  1. The concept of Bodhisattva is central to Hinayana sect of Buddhism. 2. Bodhisattva is a compassionate one on his way to enlightenment. 3. Bodhisattva delays achieving his own salvation to help all sentient beings on their path to it. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Mg==",
      "description" : "VGhlIGNvbmNlcHQgb2YgQm9kaGlzYXR0dmEgaXMgY2VudHJhbCB0byB0aGUgIE1haGF5YW5hIGRvY3RyaW5lcyBvZiBCdWRkaGlzbS4gVGhlIHRlcm0gJ2JvZGhpc2F0dHZhJyAgbGl0ZXJhbGx5IG1lYW5zICdvbmUgd2hvIGhhcyBlbmxpZ2h0ZW5tZW50IGFzIGhpcy9oZXIgIGVzc2VuY2UnLiBBIGJvZGhpc2F0dHZhIGlzIGEgYmVpbmcgd2hvIGlzIGRlc3RpbmVkIGZvciAgZW5saWdodGVubWVudCByYXRoZXIgdGhhbiBvbmUgd2hvIGhhcyBnYWluZWQgaXQgYWxyZWFkeS4gQSAgYm9kaGlzYXR0dmEgaXMgYWxzbyBub3JtYWxseSB0aG91Z2h0IG9mIGFzIGNvbnNjaW91c2x5ICB3b3JraW5nIHRvd2FyZHMgZW5saWdodGVubWVudDogeW91IGNhbid0IGNhbGwgc29tZW9uZSBhICBib2RoaXNhdHR2YSBqdXN0IGJlY2F1c2UgdGhleSBtaWdodCBiZSBlbmxpZ2h0ZW5lZCBpbiB0aGUgIGZ1dHVyZSBpZiB0aGV5IGhhdmVuJ3Qgc3RhcnRlZCBtYWtpbmcgYW4gZWZmb3J0IHlldC4gRm9yIHRoaXMgIHJlYXNvbiwgdGhlIGVhcmxpZXN0IHVzZSBvZiB0aGUgdGVybSAnYm9kaGlzYXR0dmEnIHJlZmVycyB0byAgU2lkZGhhcnRoYSBHYXV0YW1hIGJlZm9yZSBoZSBnYWluZWQgZW5saWdodGVubWVudCwgYW5kICBhbHNvIGluIGhpcyBwcmV2aW91cyBsaXZlcy4gIFRodXMsIEJvZGRoaXNhdHR2YSBpcyBjZW50cmFsIHRvIE1haGF5YW4gc2VjdCBvZiAgQnVkZGhpc20uIEhlbmNlIGZpcnN0IHN0YXRlbWVudCBpcyB3cm9uZy4gV2hpbGUgMm5kIGFuZCAgM3JkIGFyZSBjb3JyZWN0LiAgRSAgQiAgRCAgXzggIDM0ICAyICBNZWRpZXZhbCBIaXN0b3J5IEEgMjUgIFJlZiA6IEFzIHBlciBTdGQgMTJ0aCBOQ0VSVCwgVGhlbWVzIGluIEluZGlhIEhpc3RvcnksICBQYXJ0LUksIFBhZ2UgMTAzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 93,
      "question" : "What is/are common to the two historical places known as Ajanta and Mahabalipuram?  1. Both were built in the same period. 2. Both belong to the same religious denomination. 3. Both have rock-cut monuments. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Mw==",
      "description" : "Rmlyc3QgYW5kIHNlY29uZCBzdGF0ZW1lbnRzIGFyZSB3cm9uZyBiZWNhdXNlICBBamFudGEgKEJ1ZGRoaXN0IGNhdmVzKSB3YXMgYnVpbHQgZnJvbSAybmQgQ2VudHVyeSBCQ0UgdG8gIDV0aCBDZW50dXJ5IENFLCB3aGlsZSBNYWhhYmFsaXB1cmFtIChIaW5kdSB0ZW1wbGUpIHdhcyAgYnVpbHQgZHVyaW5nIDctOHRoIENlbnR1cmllcyBieSBQYWxsYXZhIEtpbmdzLiBUaGlyZCAgc3RhdGVtZW50IGlzIGNvcnJlY3QtIGJvdGggYXJlIHJvY2sgY3V0IG1vbnVtZW50cy4gIFJlZjogQ2xhc3MtMTEgTkNFUlQsIFBhZ2UgODMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " None of the statements given above is correct "
      }
    },
    {
      "index" : 94,
      "question" : "With reference to the economic history of medieval India, the term Araghatta' refers to  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5NA==",
      "description" : "VGhlIFBlcnNpYW4gd2hlZWwgaXMgYSBtZWNoYW5pY2FsIHdhdGVyIGxpZnRpbmcgZGV2aWNlICBvcGVyYXRlZCB1c3VhbGx5IGJ5IGRyYXVnaHQgYW5pbWFscyBsaWtlIGJ1bGxvY2tzLCAgYnVmZmFsb2VzIG9yIGNhbWVscy4gSXQgaXMgdXNlZCB0byBsaWZ0IHdhdGVyIGZyb20gd2F0ZXIgIHNvdXJjZXMgdHlwaWNhbGx5IG9wZW4gd2VsbHMuIEluIFNhbnNrcml0IHRoZSB3b3JkICBBcmFnaGF0dGEgaGFzIGJlZW4gdXNlZCBpbiB0aGUgYW5jaWVudCB0ZXh0cyB0byBkZXNjcmliZSAgdGhlIFBlcnNpYW4gV2hlZWwuIFRoZSAnYXJhLWdoYXR0YScgY29tZXMgZnJvbSB0aGUgIGNvbWJpbmF0aW9uIG9mIHRoZSB3b3JkcyAnYXJhJyBtZWFuaW5nIHNwb2tlIGFuZCAnZ2hhdHRhJyAgbWVhbmluZyBwb3QuICBSZWY6IDd0aFN0ZCBOQ0VSVCwgT3VyIFBhc3QgSUksIFBhZ2UgNi03LiBJdCBkaXNjdXNzZXMgIGFib3V0IHRoZSBpbnZlbnRpb24gb2Ygd2F0ZXItd2hlZWwgaXJyaWdhdGlvbiwga25vd24gaW4gIFBlcnNpYW4gYXMgJ0FncmFoYXR0YScuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " bonded labour ",
        "option2" : " land grants made to military officers ",
        "option3" : " waterwheel used in the irrigation of land ",
        "option4" : " wastel and converted to cultivated land "
      }
    },
    {
      "index" : 95,
      "question" : "With reference to the cultural history of India, the memorizing of chronicles, dynastic histories and Epic tales was the profession of who of the following? (a) Shramana (b) Parivraaj               96. Consider the following pairs:  ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5NQ==",
      "description" : "VGhlIE1hYWdhZGhhIGFuZCB0aGUgc3V1dGFzIHdlcmUgYXNzb2NpYXRlZCB3aXRoICBtZW1vcml6aW5nIG9mIGNocm9uaWNsZXMsIGR5bmFzdGljIGhpc3RvcmllcyBhbmQgRXBpYyB0YWxlcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 ",
        "option2" : " 2, 3, 4 and 5 ",
        "option3" : " Agrahaarika ",
        "option4" : " Maagaha  Famous place Region  1. Bodhgaya Baghelkhand  2. Khajuraho Bundelkhand  3. Shirdi Vidarbha  4. Nasik (Nashik) Malwa  5. Tirupati Rayalaseema  Which of the pairs given above are correctly matched? "
      }
    },
    {
      "index" : 97,
      "question" : "With reference to the cultural history of medieval India, consider the following statements :  1. Siddhas (Sittars) of Tamil region were monotheistic and condemned idolatry. 2. Lingayats of Kannada region questioned the theory of rebirth and rejected the caste hierarchy. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Nw==",
      "description" : "KGkpIFNpZGRoYXMgbWVhbnMgdGhlIHJlZmluZWQgbW9ub3RoZWlzdGljIGNyZWVkICBleGlzdGVkLiBTaXR0YXIgaW1wbGllcyBhbiBleHBlcnQgaW4gb2NjdWx0aXNtLCBhbGNoZW15IGFuZCAgc28gb24gd2l0aCBtYWdpYyBvciBzdXBlcnN0aXRpb3VzIHBvd2Vycy4gIChpaSkgVGhlIGxpbmdheWF0cyBiZWxpZXZlZCB0aGF0IG9uIGRlYXRoIHRoZSBkZXZvdGVlIHdpbGwgIGJlIHJldW5pdGVkIHdpdGggU2hpdmEgYW5kIG5vdCByZXR1cm4gdG8gdGhpcyB3b3JsZC4gIFRoZXJlZm9yZSBpbnN0ZWFkIG9mIGNyZW1hdGluZyB0aGUgYm9keSwgdGhleSBjZXJlbW9uaWFsbHkgIGJ1cnkgdGhlaXIgZGVhZC4gIChpaWkpIFRoZXkgY3JpdGljaXNlZCB0aGUgY2FzdGUgc3lzdGVtIGFuZCBxdWVzdGlvbmVkICBiZWxpZWYgaW4gdGhlIHRoZW9yeSBvZiByZWJpcnRoLiAgKGl2KSBDZXJ0YWluIHByYWN0aWNlcyB3ZXJlIGVuY291cmFnZWQgYnkgdGhlIGxpbmdheWF0cyAgc3VjaCBhcyBwb3N0LXB1YmVydHkgbWFycmlhZ2VzIGFuZCB3aWRvdyByZW1hcnJpYWdlLiAgS25vd2xlZGdlIG9mIHRoZSBWaXJhc2hhaXZhIHRyYWRpdGlvbiBoYXMgYmVlbiBkZXJpdmVkICBmcm9tIHZhY2hhbmFzIChzYXlpbmdzKSBjb21wb3NlZCBpbiBLYW5uYWRhIGJ5IHRob3NlICB3aG8gaGFkIGpvaW5lZCAgUmVmOiAgU3RkIDEydGggTkNFUlQsIFRoZW1lcyBpbiBJbmRpYSBIaXN0b3J5LCBQYXJ0LUlJLCAgUGFnZSAxNDgg",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 98,
      "question" : "Regarding the taxation system of Krishna Deva, the ruler of Vijayanagar, consider the following statements:     1. The tax rate on land was fixed depending on the quality of the land. 2. Private owners of workshops paid an industries tax. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5OA==",
      "description" : "KGkpIEluIHJlaWduIG9mIEtyaXNobmEgRGV2YSwgbGFuZCByZXZlbnVlIHdhcyB0aGUgIG1haW4gc291cmNlIG9mIGluY29tZSBvZiB0aGUgZ292ZXJubWVudC4gVG8gYXNzZXNzIHRoZSAgcHJvcGVyIHJldmVudWUgZW50aXJlIGxhbmQgd2FzIGNsYXNzaWZpZWQgaW50byBmb3VyIHBhcnRzOiAgdGhlIHdldCBsYW5kLCB0aGUgZHJ5IGxhbmQsIHRoZSBvcmNoYXJkcyBhbmQgdGhlIHdvb2RzLiBUaGUgIGdvdmVybm1lbnQgYWxzbyBsZXZpZWQgb3RoZXIgdGF4ZXMgbGlrZSB0aGUgZ3JhemluZyB0YXgsIHRoZSAgY3VzdG9tcyBkdXR5LCB0YXggb24gZ2FyZGVuaW5nIGFuZCBpbmR1c3RyaWVzIHRheGVzIG9uICBtYW51ZmFjdHVyZSBvZiB2YXJpb3VzIGFydGljbGVzLiAgKGlpKSBGcm9tIHRoZSB0cmF2ZWxvZ3VlIHdyaXR0ZW4gYnkgUGVyc2lhbmVudm95IEFiZHVyICBSYXp6YXFpbiB0aGUgY291cnQgb2YgVmlqYXluYWdhciwgd2UgZmluZCBib3RoIHN0YXRlbWVudHMgIGFyZSBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 99,
      "question" : "With reference to the cultural history of India, consider the following statements :(Pre18 Set-D)         1. White marble was used in making Buland Darwaza and Khankah at Fatehpur Sikri. 2. Red sandstone and marble were used in making Ilara Imambara and Rumi Darwaza at Lucknow. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5OQ==",
      "description" : "SUNTRSBDbGFzcyA5IHRleHRib29rIFBhZ2UgMTUwIHNheXMgQnVsYW5kIERhcndhemEgIGNvbnN0cnVjdGVkIGluIHJlZCBhbmQgeWVsbG93IHN0YW5kc3RvbmVzIHdpdGggd2hpdGUgIG1hcmJsZSBpbmxheSBpbiB0aGUgc3BhbiBvZiB0aGUgYXJjaGVzLiBPdGhlciByYW5kb20gZ29vZ2xlICBib29rcyByZXZlYWwgdGhhdCBLaGFua2FoIHRvbyBjb250YWlucyB3aGl0ZSBtYXJibGVzLiBTbywgIHN0YXRlbWVudCMxIG91Z2h0IHRvIGJlIHJpZ2h0LiBTZWNvbmQgc3RhdGVtZW50IGlzIHdyb25nLiAgJ1J1bWkgRGFyd2F6YSwgQmFyYSBJbWFtYmFyYSwgQ2hoYXRhciBNYW56aWwgYXJlICBtb251bWVudHMgYXJlIGZyYWdpbGUgaW4gdGVybXMgb2Ygc3RydWN0dXJhbCBzdHJlbmd0aCAgKGJlY2F1c2UpIFRoZSBjb21tb24gbWF0ZXJpYWwgdXNlZCBmb3IgcmFpc2luZyBtb3N0IG9mIHRoZSAgbW9udW1lbnRzIGluIEx1Y2tub3cgd2FzIGJyaWNrIGFuZCBwbGFzdGVyLCAgc2F5cyAgVGltZXNvZkluZGlhLiBTbywgYWNjb3JkaW5nbHkgYW5zd2VyIHNob3VsZCBoYXZlIGJlZW4gJ2EnICBidXQgVVBTQyBoYXMga2VwdCAnZCcgYXMgdGhlIG9mZmljaWFsIGFuc3dlci4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 100,
      "question" : "The well-known painting \"Bani Thani\" belongs to the  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDA=",
      "description" : "UGFpbnRpbmdzIGF0IEtpc2hhbmdhcmggaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBtb3N0ICByb21hbnRpYyBsZWdlbmRzIC0gU2F3YW50IFNpbmdoIGFuZCBoaXMgYmVsb3ZlZCBCYW5pICBUaGFuaS4gYW5kIG9mIHRoZSBpbnRlcnR3aW5pbmcgb2YgbGl2ZXMgYW5kIG15dGhzLCByb21hbmNlICBhbmQgYmhha3RpLiBJdCBpcyBzb21ldGltZXMgYXJndWVkIHRoYXQgdGhlIHdvbWVuIGluICdiYW5pICB0aGFuaScgaXMgc2FpZCB0byByZXNlbWJsZSB0aGUgY2hhcmFjdGVyIG9mIFJhZGhhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bundi school ",
        "option2" : " Jaipur school ",
        "option3" : " Kangra school ",
        "option4" : " Kishangarh school "
      }
    },
    {
      "index" : 101,
      "question" : " With reference to Mughal India, what is/are the difference/ differences between Jagirdar and Zamindar?         1. Jagirdars were holders of land assignments in lieu of judicial and police duties, whereas Zamindars were holders of revenue rights without obligation to perform any duty other than revenue collection. 2. Land assignments to Jagirdars were hereditary and revenue rights of Zamindars were not hereditary. Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDE=",
      "description" : "ICgtKVR3byBjbGFzc2VzIHNoYXJlZCBwb3dlciBvZiB0aGUgU3RhdGUgd2l0aCBNdWdoYWwgIGVtcGVyb3I6IHphbWluZGFycyBhbmQgdGhlIG5vYmxlcy4gIFRoZSB6YW1pbmRhcnMgd2VyZSAgaGVyZWRpdGFyeSBvd25lcnMgb2YgdGhlaXIgbGFuZHMgd2hvICBlbmpveWVkIGNlcnRhaW4gIHByaXZpbGVnZXMgb24gaGVyZWRpdGFyeSBiYXNpcy4gVGhleSBvY2N1cGllZCBhbiBpbXBvcnRhbnQgIHBsYWNlIGluIHRoZSBlbXBpcmUgYmVjYXVzZSB0aGV5ICBoZWxwZWQgaW4gdGhlIGNvbGxlY3Rpb24gb2YgIHJldmVudWUgYW5kIGluIGxvY2FsIGFkbWluaXN0cmF0aW9uLCAgZm9yIHdoaWNoIHRoZXkgIG1haW50YWluZWQgc29sZGllcnMuICAoLSlUaGUgbm9iaWxpdHkgY29tcHJpc2VkIHBlb3BsZSB3aG8gd2VyZSBlaXRoZXIgIGFzc2lnbmVkICBsYXJnZSBqYWdpcnMgLyBNYW5zYWJzIG9yIGFwcG9pbnRlZCBTdWJhaGRhcnMuICBUaHVzLCBib3RoIDEgYW5kIDIgYXJlIHdyb25nIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 102,
      "question" : " Consider the following statements:                         1. In the revenue administration of Delhi Sultanate, the in-charge of revenue collection was known as 'Amil'. 2. The Iqta system of Sultans of Delhi was an ancient indigenous institution. 3. The office of' Mir Bakshi' came into existence during the reign of Khalji Sultans of Delhi. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDI=",
      "description" : "ICgtKVRoZSBmaXJzdCBzdGFnZSBvZiBJcXRhIHN5c3RlbSBzdGFydGVkIGluIDEyMDYuIFRoZSAgc3lzdGVtIHN0YXJ0ZWQgd2l0aCB0aGUgYXNzaWdubWVudCBvZiBkaWZmZXJlbnQgcmVnaW9ucyBhcyAgaXF0YXMgKHRlcnJpdG9yaWFsIGFyZWFzIG9yIHVuaXRzIHdob3NlIHJldmVudWVzIHdlcmUgIGFzc2lnbmVkIHRvIG9mZmljaWFscyBpbiBsaWV1IG9mIHNhbGFyaWVzKSB0byBtaWxpdGFyeSAgY29tbWFuZGVycywgb3V0IG9mIHdob3NlIHJldmVudWVzIHRoZXkgY291bGQgbWFpbnRhaW4gIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIHRyb29wcyBhcyB3ZWxsLiBTbywgaXQgbWVhbnMgSXF0YSAgc3RhcnRlZCBpbiAxMjA2IGl0c2VsZiBhbmQgaXQgd2FzIG5vdCBhbiBhbmNpZW50IGluZGlnZW5vdXMgIEluZGlhbiBpbnN0aXR1dGlvbi4gIzIgaXMgd3JvbmcuIGIgYW5kIGQgZWxpbWluYXRlZC4gICgtKU11Z2hhbCBDZW50cmFsIEFkbWluaXN0cmF0aW9uOiBNaXIgQmFrc2hpIHdhcyBIZWFkICBvZiB0aGUgbWlsaXRhcnkgZGVwYXJ0bWVudC4gU28sICMzIGlzIHdyb25nLiBXZSBhcmUgbGVmdCB3aXRoICBhbnN3ZXIgYToxIG9ubHkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 103,
      "question" : "Consider the following statements :  1. Saint Nimbarka was a contemporary of Akbar. 2. Saint Kabir was greatly influenced by Shaikh Ahmad Sirhindi. Which of the statements given above is/ are correct? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDM=",
      "description" : "ICgtKUluIHRoZSAxM3RoIGNlbnR1cnksIE5pbWJhcmthIGFuZCBWYWxsYWJoYWNoYXJ5YSAgd2VyZSBhbHNvIG90aGVyIHByZWFjaGVycyBvZiBWYWlzaG5hdml0ZSBCaGFrdGkgaW4gdGhlICBUZWxhbmdhbmEgcmVnaW9uLiBBa2JhciB3YXMgMTV0aCBDZW50dXJ5LCBzbyB1bmxpa2VseSB0byAgYmUgY29udGVtcG9yYXJpZXMuICMxIGlzIHdyb25nLiAgKC0pIk5hcXNoYmFuZGkgc2Nob29sIGRlZ3JhZGVkIFN1ZmlzbSB0byB0aGUgc3RhdHVzIG9mICBhIGhhbmRtYWlkIG9mIG9ydGhvZG94IElzbGFtLiBTaGFpa2ggQWhtYWQgU2lyaGluZGkgICgxNTYzLSAxNjI0KSBiZWNhbWUgdGhlIGxlYWRpbmcgc3Bva2VzbWFuIG9mIHRoaXMgc2Nob29sICBhZnRlciBBa2JhcidzIGRlYXRoLiBIaXMgdGVhY2hpbmdzIHdlcmUgbm90IGNvbmZpbmVkIHRvIHRoZSAgcmVmb3JtIG9mIElzbGFtOyBoZSBhZHZvY2F0ZWQgYSBjcnVzYWRlIGFnYWluc3QgdGhlICBIaW5kdXMuIiAgU28sIGl0J3MgdW5saWtlbHkgdGhhdCBLYWJpciB3b3VsZCBiZSAnZ3JlYXRseSAgaW5mbHVlbmNlZCcgYnkgc3VjaCBoYXJkY29yZSByYWRpY2FsIGVsZW1lbnQuICMyIGlzIHdyb25nLiAgQmVzaWRlcywgS2FiaXIgRGFzIHRpbWVsaW5lIGlzICgxMzk4IG9yIDE0NDAtMTUxOCkgc28gaGUgd2FzICBsb25nIGRlYWQgYmVmb3JlIFNpcmhpbmRpIHdhcyBldmVuIGJvcm4uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 104,
      "question" : "With reference to the Mian Tansen, which one of the following statement is not correct   ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDQ=",
      "description" : "ICgtKVRhbnNlbiBpbnZlbnRlZCB0aGUgbmlnaHQgcmFnYSBEYXJiYXJpIEthbmhyYSwgIG1vcm5pbmcgcmFnYSBNaWFuIEtpIFRvZGksIG1pZC1kYXkgcmFnYSwgTWlhbiBraSBTYXJhbmcsICBzZWFzb25hbCByYWdhIE1pYW4ga2kgTWFsaGFyLiBTbyAjZCBpcyByaWdodCwgdGhlcmVmb3JlICBlbGltaW5hdGVkLCBiZWNhdXNlIHdlJ3ZlIHRvIGZpbmQgd3Jvbmcgc3RhdGVtZW50LiAgKC0pSGUgY29tcG9zZWQgbWFueSBkaHJ1cGFkcyBvbiBHYW5lc2hhLCBTaGl2YSwgIFBhcnZhdGkgYW5kIFJhbWEuIEhlIGFsc28gY29tcG9zZWQgc29uZ3Mgb24gaGlzIHBhdHJvbnMuICBTbyBiIGFuZCBjIGFsc28gZWxpbWluYXRlZC4gICgtKVRhbnNlbiB3YXMgdGhlIHRpdGxlIGdpdmVuIHRvIGhpbSBieSBSYWphIFZpa3JhbWppdCBvZiAgR3dhbGlvci4gU28sIGEgaXMgd3JvbmcsIGFuZCB0aGVyZWZvcmUgaXQncyB0aGUgYW5zd2VyLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tansen was the title given to him by Emperor Akbar. ",
        "option2" : " Tansen composed Dhrupads on Hindu god and  goddesses. ",
        "option3" : " Tansen composed songs on his patrons. ",
        "option4" : " Tansen invented many Ragas. "
      }
    },
    {
      "index" : 105,
      "question" : "Who among the following Mughal Emperors Shifted emphasis from illustrated manuscripts to album and individual portrait?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXwxMDU=",
      "description" : "ICgtKVVuZGVyIEFrYmFyLCBwYWludGluZyBhcHBlYXJzIHRvIGhhdmUgYmVlbiBjb25maW5lZCAgb25seSB0byBtYW51c2NyaXB0IGlsbHVzdHJhdGlvbi4gU28gYiBpcyB3cm9uZy4gUG9ydHJhaXQgIHJlYWNoZWQgZ3JlYXQgaGVpZ2h0cyBkdXJpbmcgSmFoYW5naXIncyByZWlnbi4gVGhlIHBvcnRyYWl0ICB3ZXJlIHBhaW50ZWQgd2l0aCBncmVhdCBjYXJlIG9mIGRldGFpbHMgYW5kIGZpbmVzc2Ugb2YgIGRyYXdpbmcgYW5kIG1vZGVsaW5nLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Humayun ",
        "option2" : " Akar ",
        "option3" : " Jahangir ",
        "option4" : " Shah Jahan "
      }
    }
  ],
  "subject" : "History",
  "topic" : "Medieval History",
  "year" : "0"
}
