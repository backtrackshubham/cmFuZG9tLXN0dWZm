{
  "testId" : "history|medieval-history",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/pyqs/mrunal-pyqs/prelims/1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "The Mughal school of painting formed the spinal column ofdifferent schools of Indian miniature art. Which one of thefollowing painting styles was not affected by Mughalpainting?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MQ==",
      "description" : "SXQgZG9lcyBub3QgcXVpdGUgYmVsb25nIHRvIHRoZSB0ZW1wZXIgb2YgTXVnaGFsIHBhaW50aW5nIHdoaWNoIHdhcyBhcmlzdG9jcmF0aWMsIGNlbGVicmF0ZWQgaW1wZXJpYWwgcHJvbXAgYW5kIGNpcmN1bXN0YW5jZXMu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pahari ",
        "option2" : " Rajasthani",
        "option3" : " Kangra ",
        "option4" : " Kalighata"
      }
    },
    {
      "index" : 2,
      "question" : "Who among the following were famous jurists of medievalIndia?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mg==",
      "description" : "UmFqc2VraGFyYSB3YXMgYSBzYW5za3JpdCBwb2V0IGFuZCBkcmFtYXRpc3Qu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Vijnanesvara ",
        "option2" : " Hemadri",
        "option3" : " Rajasekhara ",
        "option4" : " Jimutavahana"
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following monuments has a dome whichis said to be one of the largest in the world? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mw==",
      "description" : "SXQgaXMgdGhlIE1vdXNzb2xldW0gb2YgTXVoYW1tYWQgQWRpbCBTaGFoIFN1ciBvZiBCaWphcHVyLiAgVGhpcyBpcyB0aGUgc2Vjb25kIGxhcmdlc3QgZG9tZSBpbiB0aGUgd29ybGQu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tomb of Sher Shah, Sasaram",
        "option2" : " Jama Masjid, Delhi",
        "option3" : " Tomb of Ghiyas-ud-din Tughlaq, Delhi",
        "option4" : " Gol Gumbaz, Bijapur"
      }
    },
    {
      "index" : 4,
      "question" : "Ashtapradhan was a council of ministers: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NA==",
      "description" : "SXQgd2FzIGNvbnN0aXR1dGVkIGJ5IFNoaXZhamkgaW4gTWFyYXRoYSBhZG1pbmlzdHJhdGlvbi4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " in the Gupta administration",
        "option2" : " in the Chola administration",
        "option3" : " in the Vijayanagar administration",
        "option4" : " in the Maratha administration"
      }
    },
    {
      "index" : 5,
      "question" : "Consider the map given below: The route indicated in the map was followed, during thecourse of his military exploits, by:",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NQ==",
      "description" : "QWxhdWRkaW4gS2hhbGppIHNlbnQgTWFsaWsgS2FmdXIgKHBvcHVsYXJseSBrbm93biBhcyBIYXphciBEaW5hcmkpIGZvciBzb3V0aGVybiBleHBlZGl0aW9uIGFuZCBoZSByZWFjaGVkIHVwIHRvIEthbnlha3VtYXJpLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Chandragupta II ",
        "option2" : " Harshavardhana",
        "option3" : " Rajendra Chola ",
        "option4" : " Malik Kafur"
      }
    },
    {
      "index" : 6,
      "question" : "The term 'Apabhramsa' was used in medieval Sanskrit textsto denote: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Ng==",
      "description" : "QmVmb3JlIHRoZSByaXNlIG9mIG1vZGVybiBsYW5ndWFnZSwgQXBhYmhyYW1zIHdhcyB0aGUgbW9zdCB2aWJyYW50IGxhbmd1YWdlIG9mIGNvbGxvcXVpYWwgYW5kIGxpdGVyYXJ5IHdvcmtzIGluIG5vcnRoIEluZGlhLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " outcastes among the Rajputs",
        "option2" : " deviations from Vedic rituals",
        "option3" : " early forms of some of the modern Indian language",
        "option4" : " non-Sanskrit verse metres"
      }
    },
    {
      "index" : 7,
      "question" : "Nastaliq was: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nw==",
      "description" : "SXQgd2FzIGEgcGVyc2lhbiBzY3JpcHQgZHVyaW5nIE11Z2hhbCBwZXJpb2Qu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " a persian script used in medieval India",
        "option2" : " a raga composed by Tansen",
        "option3" : " a cess levied by the Mughal rulers",
        "option4" : " a manual of code of conduct for the Ulemas"
      }
    },
    {
      "index" : 8,
      "question" : "The sufi saint who maintained that devotional music wasone way of coming close to God was; ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8OA==",
      "description" : "U2hhaWtoIE11aW4tdWQtZGluIENoaXNodGksIHdhcyBhIHNhaW50IG9mIENoaXNodGkgU2lsc2lsYWgsIGludHJvZHVjZWQgaW4gSW5kaWEgYnkgU2hhaWtoIE11aW4tdWQtZGluIFNpanppICgxMjM2IEEuRC4pIFdhaGQtdHVsLXdhanVkICh1bml0eSBvZiB0aGUgcGhlbm9tZW5hbCB3b3JsZCkgYnkgU2FtYSBhbmQgTWVoZmlsLCB3aGljaCBpcyByZWNpdGF0aW9uIG9mIHRoZSBuYW1lcyBvZiBHb2QsIHdhcyBhIHByb21pbmVudCBmZWF0dXJlIG9mIHRoZSBzaWxzaWxhaCwgdW5kZXJsaW5lZCBieSBNdWluLXVkLWRpbiBDaGlzaHRpLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Muin-ud-din Chisti",
        "option2" : " Baba Farid",
        "option3" : " Saiyid Muhammad Gesudaraz",
        "option4" : " Shah Alam Bukhari"
      }
    },
    {
      "index" : 9,
      "question" : "Mughal painting reached its zenith under: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8OQ==",
      "description" : "SmFoYW5naXIgd2FzIHRoZSBNdWdoYWwgRW1wZXJvciBmcm9tIDE2MDUtMTYyNy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Humayun ",
        "option2" : " Akar",
        "option3" : " Jahangir ",
        "option4" : " Shahjahan"
      }
    },
    {
      "index" : 10,
      "question" : "In medieval India, Mansabdari system was introduced for:(a) making recruitment to the army (a) Guru Amar Das-Miri and Piri ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTA=",
      "description" : "TWFuc2FiZGFyaSBzeXN0ZW0gd2FzIGludHJvZHVjZWQgaW4gMTU5NS05Niwgd2FzIGEgY29tYmluZWQgc3RhdHVzIHNob3dpbmcgYSBub2JsZSdzIGNpdmlsIGFuZCBtaWxpdGFyeSBjYXBhY2l0eS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " facilitating revenue collection",
        "option2" : " Guru Arjun Dev-Adi Granth",
        "option3" : " ensuring religious harmony",
        "option4" : " effecting clean administration 11. Which of the following pairs is correctly matched?"
      }
    },
    {
      "index" : 12,
      "question" : "Prem Vatika, poems on the life of Krishna, were composed by :(a) Bihari (b) Surdas title of : ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTI=",
      "description" : "UmFza2hhbiAoYXBwcm94LiAxNTU4LTE2MjgpIHdhcyBhIEhpbmRpIHBvZXQgd2hvIHdhcyBib3RoIGEgTXVzbGltIGFuZCBmb2xsb3dlciBvZiBMb3JkIEtyaXNobmEu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Tute-Hind ",
        "option2" : " Kaisr-I-Hind",
        "option3" : " Raskhan ",
        "option4" : " Kabir 13. After consolidating his power, Balban assumed the grand"
      }
    },
    {
      "index" : 14,
      "question" : "Head of the military department under the recognised centralmachinery of administration during Akbar's reign was:(a) Diwan (b) Mir Bakshi the following is correct? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTQ=",
      "description" : "SGUgd2FzIHRoZSBoZWFkIG9mIHRoZSBtaWxpdGFyeSBhbmQgaW50ZWxsaWdlbmNlIGRlcGFydG1lbnQuIEhlIHdhcyBub3QgdGhlIENvbW1hbmRlci1pbi1DaGllZiBidXQgd2FzIHRoZSBwYXltYXN0ZXItZ2VuZXJhbC4gQWxsIGludGVsbGlnZW5jZSBvZmZpY2VycyAoYmFuZHMpIGFuZCBuZXdzLXJlcG9ydGVycyAoV2FxaWEtbmF2aXMpIHJlcG9ydGVkIHRvIGhpbS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not the correct explanation",
        "option3" : " Mir Saman ",
        "option4" : " Bakshi 15. Assertion (A): The sponsor and the most prominent figure of the Chisti order of Sufis in India is Khwaja Moinuddin Chisti. Reason (R): The Chisti order takes its name from a village Chisti in Ajmer. In the context of the above two statements, which one of"
      }
    },
    {
      "index" : 16,
      "question" : "Which one of the following pairs of composers in differentlanguages and their works on the Mahabharata theme iscorrectly matched? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTY=",
      "description" : "UGFtcGEgIHdhcyBhIEthbm5hZGEgcG9ldCB3aG9zZSB3b3JrcyByZWZsZWN0ZWQgaGlzIHBoaWxvc29waGljYWwgYmVsaWVmcy4gVmlrcmFtYXJqdW5hIFZpamF5YSwgYWxzbyBrbm93biBhcyBQYW1wYSBCaGFyYXRhLCBpcyBhIEthbm5hZGEgdmVyc2lvbiBvZiB0aGUgTWFoYWJoYXJhdGEgb2YgVnlhc2Eu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sarladasa-Bengali ",
        "option2" : " Kasirama-Oriya",
        "option3" : " Tikkana-Marathi ",
        "option4" : " Pampa-Kannaa"
      }
    },
    {
      "index" : 17,
      "question" : "The medieval Indian writer who refers to the discovery ofAmerica is : ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTc=",
      "description" : "QWJ1IEZhemwgIHJlZmVycyB0byB0aGUgZGlzY292ZXJ5IG9mIEFtZXJpY2Eu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Malik Muhammad Jayasi",
        "option2" : " Amir Khusrau",
        "option3" : " Raskhan",
        "option4" : " Abul Fazl"
      }
    },
    {
      "index" : 18,
      "question" : "The member of Shivaji's Ashtapradhan who looked afterforeign affairs was: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTg=",
      "description" : "U2FjaGl2IHdhcyB0aGUgbWluaXN0ZXIgaW4gY2hhcmdlIG9mIHJveWFsIGNvcnJlcy0gcG9uZGVuY2UuIFBhbmRpdCBSYW8gLSByZWxpZ2lvdXMgbWF0dGVyLiBTdW1hbnQgd29ya2VkIGFzIGZvcmVpZ24gIE1pbmlzdGVyLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Peshwa ",
        "option2" : " Sachiv",
        "option3" : " Pandit Rao ",
        "option4" : " Sumant"
      }
    },
    {
      "index" : 19,
      "question" : "The loss of Qandhar was a big blow to the Mughal empirefrom the view point of : ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MTk=",
      "description" : "U2hhaCBKYWhhbiByZWNvdmVyZWQgS2FuZGhhciBpbiAxNjM4IGZyb20gdGhlIElyYW5pYW5zIGJ1dCBsb3N0IGl0IGFnYWluIGluIDE2NDkgZGVzcGl0ZSB0aHJlZSBjYW1wYWlnbnMuIFRoZSBsb3NzIG9mIEthbmRoYXIgd2FzIGEgYmlnIGJsb3cgYXMgaXQgd2FzIGEgc3RyYXRlZ2ljIHN0cm9uZ2hvbGQu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " natural resources ",
        "option2" : " uffer territory",
        "option3" : " communication ",
        "option4" : " strategic stronghol"
      }
    },
    {
      "index" : 20,
      "question" : "Fawazil in the Sultanate period meant: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjA=",
      "description" : "RmF3YXppbCB3YXMgYmFsYW5jZSBiZXR3ZWVuIHRoZSBpbmNvbWUgYW5kIGV4cGVuZGl0dXJlIG9mIElxdGEtaG9sZGVycy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " extra payment to the nobles",
        "option2" : " revenue assigned in lieu of salary",
        "option3" : " excess amount paid to the exchequer by the Iqtadars",
        "option4" : " illegal exactions extracted from the peasants"
      }
    },
    {
      "index" : 21,
      "question" : "Sultan of Delhi who is reputed to have built the biggestnetwork of canals in India was: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjE=",
      "description" : "Rmlyb3ogU2hhaCBUdWdobGFxIGJ1aWx0IGFuZCByZXBhaXJlZCBhIGxhcmdlIG51bWJlciBvZiBjYW5hbHMu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Iltutmish",
        "option2" : " Ghiyasuddin Tughlaq",
        "option3" : " Firoz Shah Tughlaq",
        "option4" : " Sikandar Lodi"
      }
    },
    {
      "index" : 22,
      "question" : "Assertion (A): At first the Turkish administration in Indiawas essentially military.Reason (R):  The country was parcelled out as 'Iqtas' amongleading military leaders. ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjI=",
      "description" : "SXF0YSBpcyB0aGF0IHBhcnQgb2YgbGFuZCBncmFudGVkIGJ5IHRoZSBzdWx0YW4gdG8gaXRzIG1pbGl0YXJ5IGNoaWVmcyBmb3IgbWFpbnRlbmFuY2Ugb2YgdHJvb3BlcnMuIFRoZSBsYW5kIHdhcyB0YWtlbiBiYWNrIHdoZW4gdGhlIElxdGFkYXJzIHdlcmUgbm90IGluIGEgcG9zaXRpb24gdG8gbWFpbnRhaW4gdGhlIGFybXku",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 23,
      "question" : "Assertion (A): During the reign of Shahjahan, Dara Sikohwas sent on expedition to Balkha, Badakhshan andQandahar.Reason (R): The expedition sent by Shahjahan to theMiddle-East was a marvellous success. ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjM=",
      "description" : "UiBpcyBpbmNvcnJlY3QgYXMgdGhpcyBleHBlZGl0aW9uIGZhaWxlZCBtaXNlcmFibHku",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements: Ahadis were those troopers who:1. offered their services singly2. did not attach themselves to any chief3. had the emperor as their immediate colonel4. attached themselves to MirzasOf these statements:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjQ=",
      "description" : "QWhhZGlzIHdlcmUgdGhlIGdlbnRsZW1lbiB0cm9vcGVycyB3aG8gd2VyZSByZWNydWl0ZWQgaW5kaXZpZHVhbGx5IGFuZCB3ZXJlIHVuZGVyIHRoZSBjb21tYW5kIG9mIGEgc2VwYXJhdGUgbWFuc2FiZGFyIG9yIG9mZmljZXIsIGFuZCBoYWQgYSBkaXdhbiBhbmQgYSBiYWtzaGkgb2YgdGhlaXIgb3duLiBUaGV5IHdlcmUgY29uc2lkZXJlZCB2ZXJ5IGVmZmljaWVudCBhbmQgbG95YWwgdHJvb3BzIGFuZCB3ZXJlIHBhaWQgaGlnaCBzYWxhcmllcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 are correct",
        "option2" : " 1, 2 and 3 are correct",
        "option3" : " 2 and 3 are correct",
        "option4" : " 1 and 4 are correct"
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following: 1. Tughlaqabad fort 2. Lodi Garden3. Qutab Minar 4. Fatehpur SikriThe correct chronological order in which they were built is :",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjU=",
      "description" : "VHVnaGxhcWFiYWQgRm9ydCBpcyBhIHJ1aW5lZCBmb3J0IGluIERlbGhpLCBzdHJldGNoaW5nIGFjcm9zcyA2LjUga20sIGJ1aWx0IGJ5IEdoaXlhcy11ZC1kaW4gVHVnaGxhcSwgdGhlIGZvdW5kZXIgb2YgVHVnaGxhcSBkeW5hc3R5LCBvZiB0aGUgRGVsaGkgU3VsdGFuYXRlIG9mIEluZGlhIGluIDEzMjEsIHdoaWNoIHdhcyBsYXRlciBhYmFuZG9uZWQgaW4gMTMyNy4gRmF0ZWhwdXIgU2lrcmkgaXMgYSBjaXR5IGFuZCBhIG11bmljaXBhbCBib2FyZCBpbiBBZ3JhIGRpc3RyaWN0IGluIHRoZSBzdGF0ZSBvZiBVdHRhciBQcmFkZXNoLCBJbmRpYS4gSXQgd2FzIGNvbnN0cnVjdGVkIGJ5IE11Z2hhbCBFbXBlcm9yIEFrYmFyIGJlZ2lubmluZyBpbiAxNTcwLCBpbiBob25vdXIgb2YgU3VmaSBzYWludCBTaGFpa2ggU2FsaW0gQ2hpc3RpLiBRdXRhYiBNaW5hciAtIDEyMDYgLTEyMzY7IExvZGkgR2FyZGVuIC0gMTQ1MSAtIDE1MjYu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 3, 1, 4, 2 ",
        "option2" : " 3, 1, 2, 4",
        "option3" : " 1, 3, 2, 4 ",
        "option4" : " 1, 3, 4, 2"
      }
    },
    {
      "index" : 26,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists: List-I List-IIA . 1556 1. Battle of Haldi GhatiB. 1600 2. Nadir Shah's capture ofDelhiC. 1686 3. Death of ShivajiD. 1739 4. Grant of Charter toEast India Company5. Accession of AkbarCodes:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MjY=",
      "description" : "VGhlIEJhdHRsZSBvZiBIYWxkaWdoYXRpIHdhcyBmb3VnaHQgYmV0d2VlbiB0aGUgTXVnaGFsIEVtcGlyZSBhbmQgdGhlIGZvcmNlcyBvZiBNZXdhciBvbiBKdW5lIDIxLCAxNTc2IGF0IEhhbGRpZ2hhdGkgaW4gUmFqYXN0aGFuLCBJbmRpYS4gSXQgd2FzIGEgZGVjaXNpdmUgdmljdG9yeSBmb3IgdGhlIE11Z2hhbCBFbXBlcm9yIEphbGFsIHVkLURpbiBNdWhhbW1hZCBBa2JhcidzIGdlbmVyYWwgUmFqYSBNYW4gU2luZ2ggYWdhaW5zdCB0aGUgTWFoYXJhbmEgUHJhdGFwIFNpbmdoIG9mIE1ld2FyLiBBa2JhciB3YXMgMTQgeWVhcnMgb2xkIHdoZW4gaGUgd2FzIGNyb3duZWQgYXQgS2FsYW5hdXIgaW4gMTU1Ni4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 4; C - 2; D - 1",
        "option2" : " A - 5; B - 4; C - 3; D - 2",
        "option3" : " A - 5; B - 2; C - 1; D - 4",
        "option4" : " A - 1; B - 5; C - 3; D - 2"
      }
    },
    {
      "index" : 27,
      "question" : "In the given map, the shaded part represents Akbar's empireat a certain juncture, A stands for an independent countryand 'B' marks the site of city. Which one of the followingalternative gives all correct information?                  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjc=",
      "description" : "VGhlIHNoYWRlZCBwYXJ0IHJlcHJlc2VudHMgQWtiYXIncyB0ZXJyaXRvcnkgYXQgdGhlIHRpbWUgb2YgaGlzIGRlYXRoIGluIDE2MDUuIEEgLSBHb25kd2FuYTsgQiAtIExhaG9yZQ==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar in 1557 : (A) Gokunda, (B) Lahore",
        "option2" : " Akbar in 1557 : (A) Khandesh, (B) Multan",
        "option3" : " Akbar in 1605: (A) Gondwana, (B) Multan",
        "option4" : " Akbar in 1605: (A) Gondwana, (B) Lahore"
      }
    },
    {
      "index" : 28,
      "question" : "The first writer to use Urdu as the medium of poeticexpression was: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjg=",
      "description" : "QW1pciBLaHVzcmF1ICgxMjUzIC0xMzI1IENFKSwgYSBQZXJzaWFuIHBvZXQgd2FzIGFzc29jaWF0ZWQgd2l0aCB0aGUgcnVsZXJzIG9mIERlbGhpIFN1bHRhbmF0ZS4gSGUgY29tcG9zZWQgcG9ldHJ5IGluIEFyYWJpYyBhbmQgUGVyc2lhbiBiZXNpZGVzIGJlaW5nIHRoZSBmaXJzdCB3cml0ZXIgdG8gdXNlIFVyZHUgYXMgYSBtZWRpdW0gb2YgcG9ldGljIGV4cHJlc3Npb24u",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amir Khusrau ",
        "option2" : " Mirza Ghali",
        "option3" : " Bahadur Shah Zafar ",
        "option4" : " Faiz"
      }
    },
    {
      "index" : 29,
      "question" : "To which Lodi Sultan does the given map relate and whattown does the site marked. A represent A on the map represent?",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mjk=",
      "description" : "QmFobG9sIExvZGkgZGVmZWF0ZWQgSHVzc2FpbiBTaGFoIFNoYXJxaSBvZiBKYXVucHVyIGluIDE0Nzku",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bahlol Lodi - Jaunpur",
        "option2" : " Sikandar Lodi - Aligarh",
        "option3" : " Ibrahim Lodi - Jaunpur",
        "option4" : " Ibrahim Lodi - Aligarh"
      }
    },
    {
      "index" : 30,
      "question" : "Assertion (A): During the time of Akbar, for every tencavalrymen, the mansabdars had to maintain twenty horses.Reason (R): Horses had to be rested while on march andreplacements' were necessary in times of war.         ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzA=",
      "description" : "QSBpcyBpbmNvcnJlY3QgYXMgRHUgYXNwYSBTaWggYXNwYSBzeXN0ZW0gd2FzIGludHJvZHVjZWQgYnkgSmFoYW5naXIgKG5vdCBBa2JhcikuIFNvIGFuc3dlciBpcyBkLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A and R are true but R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 31,
      "question" : "One consistent feature found in the history of southernIndia was the growth of small regional kingdoms rather thanlarge empires because of : ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzE=",
      "description" : "T25lIGNvbnNpc3RlbnQgZmVhdHVyZSBmb3VuZCBpbiB0aGUgaGlzdG9yeSBvZiBzb3V0aGVybiBJbmRpYSB3YXMgdGhlIGdyb3d0aCBvZiBzbWFsbCByZWdpb25hbCBraW5nZG9tcyByYXRoZXIgdGhhbiBsYXJnZSBlbXBpcmVzIGJlY2F1c2Ugb2YgYWJzZW5jZSBvZiB2YXN0IGFyZWFzIG9mIGZlcnRpbGUgbGFuZC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " absence of minerals like iron",
        "option2" : " too many divisions in the social structure",
        "option3" : " absence of vast areas of fertile land",
        "option4" : " scarcity of manpower"
      }
    },
    {
      "index" : 32,
      "question" : "'The king was freed from his people and they from theirking'. On whose death did Badauni comment thus?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzI=",
      "description" : "TXVoYW1tYWQgQmluIFR1Z2hsYXEgZGllZCBpbiAxMzUxIENFLiBIZSB3YXMgc3VjY2VlZGVkIGJ5IGhpcyBjb3VzaW4gRmlyb3ogVHVnaGxhcS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Balban",
        "option2" : " Ala-ud-din Khalji",
        "option3" : " Muhammad-bin-Tughlaq",
        "option4" : " Firoz Shah Tughlaq"
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements:The striking feature of the Jama Masjid in Kashmir completedby Zain-ul-Abdin include(s): 1. turret2. similarity with Buddhist pagodas3. Persian styleWhich of the above statements is/are correct?",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzM=",
      "description" : "SmFtYSBNYXNqaWQgaXMgYSBtb3NxdWUgaW4gU3JpbmFnYXIsIEphbW11ICYgS2FzaG1pciwgSW5kaWEuIFRoZSBKYW1hIE1hc2ppZCBvZiBTcmluYWdhciBpcyBzaXR1YXRlZCBhdCBOb3doYXR0YSwgaW4gdGhlIG1pZGRsZSBvZiB0aGUgb2xkIGNpdHkuIEl0IHdhcyBidWlsdCBieSBTdWx0YW4gU2lrYW5kYXIgaW4gMTQwMCBBRC4gTGF0ZXIsIHRoZSBzb24gb2YgU3VsdGFuIFNpa2FuZGFyLCBaYWluLXVsLUFiaWRpbiBoYWQgdGhlIG1vc3F1ZSBleHRlbmRlZC4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 alone ",
        "option2" : " 1, 2 and 3",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 3"
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following pairs is not correctly matched?",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzQ=",
      "description" : "U2lyIFRob21hcyBSb2UgYWxzbyB2aXNpdGVkIHRoZSBjb3VydCBvZiBKYWhhbmdpci4gSGUgd2FzIGFuIGFtYmFzc2Fkb3Igb2YgSmFtZXMgLSBJLCBraW5nIG9mIEVuZ2xhbmQuIFRhdmVybmllcidzIGFjY291bnQgY292ZXJzIHRoZSByZWlnbiBvZiBTaGFoamFoYW4gYW5kIEF1cmFuZ3plYi4gSElOVFMgJiBTT0xVVElPTlMgRSBCIEQgXzggMzQgMiBNZWRpZXZhbCBIaXN0b3J5ICA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Jahangir : William Hawkins",
        "option2" : " Akbar : Sir Thomas Roe",
        "option3" : " Shahjahan : Travernier",
        "option4" : " Aurangzeb : Manucci"
      }
    },
    {
      "index" : 35,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the list:                                   List-I List-IIA. Land allotted to 1. Jagirdari Systembig feudal landlordsB. Land allotted to 2. Ryotwari Systemrevenue farmers ofrent collectorsC. Land allotted to each 3. Mahalwaripeasant with the right Systemto sublet, mortgagetransfer, gift or sellD. Revenue settlements 4. Zamindari Systemmade at village levelCodes:",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzU=",
      "description" : "VW5kZXIgdGhlIE1haGFsd2FyaSBzeXN0ZW0sIHJldmVudWUsIHNldHRsZW1lbnQgd2FzIHRvIGJlIG1hZGUgYnkgdmlsbGFnZSBvciBlc3RhdGVzIHdpdGggdGhlIGxhbmRsb3Jkcy4gSW4gdGhlIFJ5b3R3YXJpIHN5c3RlbSwgYSBkaXJlY3Qgc2V0dGxlbWVudCB3YXMgbWFkZSBiZXR3ZWVuIHRoZSBnb3Zlcm5tZW50IGFuZCB0aGUgcnlvdCAoY3VsdGl2YXRvcikuIEluIHRoZSBaYW1pbmRhcmkgc3lzdGVtLCBsYW5kIGlzIGFsbG90dGVkIHRvIHJldmVudWUgZmFybWVycyBvZiBaYW1pbmRhcnMgKHJlbnQgY29sbGVjdG9ycyku",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 1; B - 3; C - 2; D - 4",
        "option2" : " A - 1; B - 4; C - 2; D - 3",
        "option3" : " A - 3; B - 4; C - 1; D - 2",
        "option4" : " A - 2; B - 1; C - 3; D - 4"
      }
    },
    {
      "index" : 36,
      "question" : "Who among the following streamlined the Marathaadministration after Sambhaji ? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8MzY=",
      "description" : "QmVzdCBhbnN3ZXIgaXMgQmFsYWppIFZpc2h3YW5hdGguIEFzIFNhbWJoYWppICgxNjgwLTg5KSB3ZXJlIHN1Y2NlZWRlZCBieSBSYWphcmFtLCBTaGl2YWppIElJLCBUYXJhYmFpIGFuZCBTaGFodSBqaS4gQmFsYWppIFZpc2h3YW5hdGggcGxheWVkIGEgY3J1Y2lhbCByb2xlIGluIHRoZSBmaW5hbCB2aWN0b3J5IG9mIFNoYWh1IGJ5IHdpbm5pbmcgb3ZlciBhbG1vc3QgYWxsIHRoZSBNYXJhdGhhIHNhcmRhcnMgdG8gdGhlIHNpZGUgb2YgU2hhaHUu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Raja Ram ",
        "option2" : " Balaji Vishwanath",
        "option3" : " Ganga Bai ",
        "option4" : " Nanaji Deshmukh"
      }
    },
    {
      "index" : 37,
      "question" : "The given map refers to the kingdom of :                     ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzc=",
      "description" : "S2hhbmRlc2ggd2FzIGFuY2llbnQgbmFtZSBvZiB0aGUgbm9ydGgtd2VzdGVybiByZWdpb24gb2YgTWFoYXJhc2h0cmEuIEFzaXJnYXJoIHdhcyBhbiBpbXBvcnRhbnQgZm9ydCBpbiBLaGFuZGVzaC4gSW4gMTYwMSwgTXVnaGFsIGVtcGVyb3IgQWtiYXIgYW5uZXhlZCB0aGUgS2hhbmRlc2ggc3VsdGFuYXRlIGFuZCBCdXJoYW5wdXIgYmVjYW1lIHRoZSBjYXBpdGFsIG9mIEtoYW5kZXNoIFN1YmFoIG9mIHRoZSBNdWdoYWwgZW1waXJlLiBUaGUgc2hhZGVkIHBvcnRpb24gaW4gZ2l2ZW4gbWFwIGluZGljYXRlcyBLaGFuZGVzaCBkdXJpbmcgQWtiYXIu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar at the time of capture of Khandesh in 1601",
        "option2" : " Akbar at the time of his death in 1605",
        "option3" : " Aurangzeb at the time of capture of Hyderabad",
        "option4" : " Aurangzeb at the time of his death in 1707"
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following events: 1. Reign of Krishna Deva of Vijaynagara2. Construction of Qutab Minar3. Arrival of Portuguese in India4. Death of Firoz TughlaqCorrect chronological sequence of these events is :",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzg=",
      "description" : "UmVpZ24gb2YgS3Jpc2huYSBEZXZhIG9mIFZpamF5bmFnYXJhIC0gKDE1MDkgLSAzMCk7IENvbnN0cnVjdGlvbiBvZiBRdXRhYiBNaW5hciAoMTIwNiAtIDEyMTApOyBBcnJpdmFsIG9mIFBvcnR1Z2VzZSBpbiBJbmRpYSAoMTQ5OCk7IERlYXRoIG9mIEZpcm96IFR1Z2hsYXEgKDEzODgpLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2, 4, 3, 1 ",
        "option2" : " 2, 4, 1, 3",
        "option3" : " 4, 2, 1, 3 ",
        "option4" : " 4, 2, 3, 1"
      }
    },
    {
      "index" : 39,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists:                                List-I List-IIA. Iqta 1. MarathasB. Jagir 2. Delhi SultansC. Amaram 3. MughalsD. Mokasa 4. VijayanagaraCodes:",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Mzk=",
      "description" : "VGhlc2UgYXJlIHRoZSBsYW5kIGdyYW50cyBnaXZlbiBkdXJpbmcgdGhlIHBlcmlvZCBvZiBkaWZmZXJlbnQgZHluYXN0aWVzLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 3; B - 2; C - 1; D - 4",
        "option2" : " A - 2; B - 3; C - 4; D - 1",
        "option3" : " A - 2; B - 3; C - 1; D - 4",
        "option4" : " A - 3; B - 2; C - 4; D - 1"
      }
    },
    {
      "index" : 40,
      "question" : "Which one of the following Muslim rulers was hailed as the'Jagadguru' by his Muslim subject because of his belief insecularism?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDA=",
      "description" : "SWJyYWhpbSBBZGlsIFNoYWggSUkgKDE1NTYgLSAxNjI3KSwgb2YgdGhlIEFkaWwgU2hhaGkgZHluYXN0eSwgd2FzIHRoZSBraW5nIG9mIEJpamFwdXIgU3VsdGFuYXRlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hussain Shah ",
        "option2" : " Zain-ul-Aidin",
        "option3" : " Ibrahim Adil Shah ",
        "option4" : " Mahmu II"
      }
    },
    {
      "index" : 41,
      "question" : "In which one of the following cities is the Lingaraja Templelocated? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDE=",
      "description" : "TGluZ2FyYWphIFRlbXBsZSB3YXMgY29uc3RydWN0ZWQgYnkgWWF5YXRpIEtlc2FyaSwgcnVsZXIgb2YgT3Jpc3NhLiBJdCBpcyBsb2NhdGVkIGluIEJodWJhbmVzaHdhci4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhubaneswar ",
        "option2" : " Bijapur",
        "option3" : " Kolkata ",
        "option4" : " Shravananbelagola"
      }
    },
    {
      "index" : 42,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists: List-I (Bhakti Saint)  List-II (Profession)A. Namdev 1. BarberB. Kabir 2. WeaverC. Ravidas 3. TailorD. Sena 4. CobblerCodes:",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDI=",
      "description" : "VGhlc2UgQmhha3RpIHNhaW50cyB3ZXJlIGRpc2NpcGxlcyBvZiBTYWludCBSYW1hbmFuZGEu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 3; C - 1; D - 4",
        "option2" : " A - 3; B - 2; C - 4; D - 1",
        "option3" : " A - 3; B - 2; C - 1; D - 4",
        "option4" : " A - 2; B - 3; C - 4; D - 1"
      }
    },
    {
      "index" : 43,
      "question" : "Mongols under Chengiz Khan invaded India during thereign of : ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDM=",
      "description" : "TW9uZ29scyB1bmRlciBDaGVuZ2l6IEtoYW4gKGRpZWQgaW4gMTIyNykgaW52YWRlZCBJbmRpYSBkdXJpbmcgdGhlIHJlaWduIG9mIElsdHV0bWlzaCAoMTIxMS0zNikgYnV0IGRpZCBub3QgZW50ZXIgZGVlcCBpbiBJbmRpYSBhcyBJbHR1dG1pc2ggcmVmdXNlZCB0byBnaXZlIHNoZWx0ZXIgdG8gdGhlIFBlcnNpYW4ga2luZywgS2h3YXJpem0gU2hhaCwgd2hvbSBDaGVuZ2l6IEtoYW4gd2FzIGNoYXNpbmcu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Balban ",
        "option2" : " Firoz Tughlaq",
        "option3" : " Iltutmish ",
        "option4" : " Muhamma Bin Tughlaq"
      }
    },
    {
      "index" : 44,
      "question" : "Which among the following ports was called Babul Makka(Gate of Makka) during the Mughal period?              ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDQ=",
      "description" : "U3VyYXQgd2FzIGNhbGxlZCBHYXRlIG9mIE1ha2thIGJlY2F1c2UgdGhlIHBpbGdyaW1hZ2UgdG8gTWFra2Egc3RhcnRlZCBmcm9tIFN1cmF0Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Calicut ",
        "option2" : " Broach",
        "option3" : " Cambay ",
        "option4" : " Surat"
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following pairs is correctly matched? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDU=",
      "description" : "RGV3YW4taS1CYW5kYWdhbmkgKERlcGFydG1lbnQgb2YgU2xhdmVzKSB3YXMgY29uc3RpdHV0ZWQgYnkgRmlyb3ogVHVnaGxhcTsgRGV3YW4taS1NdXN0YWtocmFqIChEZXB0IG9mIEFycmVhcnMpIC0gQWxhdWRkaW4gS2hhbGppOyBEZXdhbi1pLUtvaGkgKERlcHQgb2YgQWdyaWN1bHR1cmUpIC0gTXVoYW1tYWQgQmluIFR1Z2hsYXE7IERld2FuLWktQXJ6IChEZXB0IG9mIE1pbGl0YXJ5KSAtIEJhbGJhbi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dewan-i-Bandagani - Tughlaq",
        "option2" : " Dewan-i-Mustakhraj - Balban",
        "option3" : " Dewan-i-Kohi - Alauddin Khilji",
        "option4" : " Dewan-i-Arz - Muhammad Tughlaq"
      }
    },
    {
      "index" : 46,
      "question" : "Assertion (A): Battle of Khanua was certainly more decisiveand significant than the First Battle of PanipatReason (R): Rana Sanga, the Rajput hero, was certainly amore formidable adversary than Ibrahim Lodi.           47.Bay of BengalThe shaded area in the above map shows the empire of :",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDY=",
      "description" : "QmF0dGxlIG9mIEtoYW51YSAoMTUyNywgUmFuYSBTYW5nYSB3YXMgZGVmZWF0ZWQgYnkgQmFiYXIpOyBGaXJzdCBCYXR0bGUgb2YgUGFuaXBhdCAoMTUyNiwgSWJyYWhpbSBMb2RoaSB3YXMgZGVmZWF0ZWQgYnkgQmFidXIpLiBSYW5hIFNhbmdoYSBvbmNlIGRlZmVhdGVkIElicmFoaW0gTG9kaGkgc28gUiBleHBsYWlucyBBLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Alauddin Khalji ",
        "option2" : " Mohammad Tughlaq",
        "option3" : " Shahjahan ",
        "option4" : " Aurangzeb"
      }
    },
    {
      "index" : 48,
      "question" : "Who among the following was the first Bhakti saint to useHindi for the propagation of his message?               ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDg=",
      "description" : "UmFtYW5hbmRhICgxMzYwLTE0NzApIHdhcyB0aGUgZmlyc3QgQmhha3RpIHNhaW50IHRvIHVzZSBIaW5kaSBmb3IgdGhlIHByb3BhZ2F0aW9uIG9mIGhpcyBtZXNzYWdlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Dadu ",
        "option2" : " Kair",
        "option3" : " Ramananda ",
        "option4" : " Tulsias"
      }
    },
    {
      "index" : 49,
      "question" : "With reference to medieval Indian rulers, which one of thefollowing statement is correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NDk=",
      "description" : "Rmlyb3ogVHVnaGxhcSBzZXQgdXAgYSBzZXBhcmF0ZSBkZXBhcnRtZW50IG9mIHNsYXZlcyBrbm93biBhcyAnRGl3YW4taS1CYW5kYWdhbicuIE1vaGQgQmluIFR1Z2hsYXEgd2FzIHN1Y2NlZWRlZCBieSBoaXMgY291c2luIChub3QgdW5jbGUpIEZpcm96IFR1Z2hsYXEuIEFsYXVkZGluIEtoYWxqaSBpbnRyb2R1Y2VkIHRoZSBicmFuZGluZyBzeXN0ZW0gb2YgaG9yc2VzIGluIGhpcyBtaWxpdGFyeS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Alauddin Khalji first set up a separate ariz's department.",
        "option2" : " Balban introduced the branding of horses in his military.",
        "option3" : " Muhammad Bin Tughlaq was succeeded by his uncle to the military.",
        "option4" : " Firoz Tughlaq set up a separate department of slaves."
      }
    },
    {
      "index" : 50,
      "question" : "The motive behind Shah Jahan's Balkh campaign was to:",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTA=",
      "description" : "VGhlIG1vdGl2ZSBiZWhpbmQgU2hhaCBKYWhhbidzIEJhbGtoIGFuZCBCYWRha3NoYW4gY2FtcGFpZ24gaW4gY2VudHJhbCBBc2lhIHdhcyB0byBzZWN1cmUgdGhlIGRlZmVuY2Ugb2YgTm9ydGgtIFdlc3QgSW5kaWEuIFRoYXQncyB3aHkgdGhlIHN0YXRlbWVudCBhIGlzIGNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " secure a friendly ruler in Balkh and Badakshan which bordered Kabul",
        "option2" : " conquer Samarqand and Farghana, the Mughal homelands",
        "option3" : " fix the Mughal frontier on the 'scientific line', the Amu Daria",
        "option4" : " expand the Mughal Empire beyond the sub-continent"
      }
    },
    {
      "index" : 51,
      "question" : "Assertion (A): Muhammad Bin Tughlaq left Delhi, and fortwo years lived in a camp called Swarga-Dwari.Reason (R): At that time, Delhi was ravaged by plague andmany people died. 52. Historian Barani refused to consider the state in India underDelhi Sultans as truly Islamic because: ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTE=",
      "description" : "TGlrZSBBbGxhdWRkaW4gS2hhbGppLCBNdWhhbW1hZCBiaW4gVHVnaGxhcSBhbHNvIHRyaWVkIHRvIGJyaW5nIGNoYW5nZXMgaW4gdGhlIGFncmFyaWFuIHNldCB1cC4gU29tZSBoaXN0b3JpYW5zIHBvaW50IG91dCB0aGF0IGhlIG1hZGUgYW4gb3ZlciBhc3Nlc3NtZW50IGJlY2F1c2Ugb2Ygd2hpY2ggbWFueSBwZWFzYW50cyBmbGVkIHRoZSByZWdpb24uIEJ1dCB0aGUgc3RhdGVzIHNoYXJlIHJlbWFpbmVkIGhhbGYuIEEgc2V2ZXJlIGZhbWluZSBpbiB0aGlzIHBlcmlvZCB3b3JzZW5lZCB0aGUgc2l0dWF0aW9uLiBNdWhhbW1hZCBiaW4gVHVnaGxhcSB0cmllZCB0byBwcm92aWRlIHJlbGllZiB0byB0aG9zZSBhZmZlY3RlZCBhbmQgbWFkZSBlZmZvcnRzIHRvIGltcHJvdmUgYW5kIGV4dGVuZCBjdWx0aXZhdGlvbi4gVGhlIHN1bHRhbiBsZWZ0IERlbGhpIGFuZCByZW5kZXJlZCBpbiBhIGNhbXAgY2FsbGVkIHN3YXJnYWR3YXJpIG5lYXIga2FuYXVqLiBIZSBhbHNvIHNldCB1cCBhIHNlcGFyYXRlIGRlcGFydG1lbnQgY2FsbGVkIGRpd2FuLWkgYW1pci1pIGtvaGkgd2hvc2UgZnVuY3Rpb24gd2FzIHRvIGV4dGVuZCBjdWx0aXZhdGlvbiBieSBwcm92aWRpbmcgbG9hbnMu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " majority of the population did not follow Islam",
        "option2" : " muslim theologists were often disregarded",
        "option3" : " Sultan supplemented the Muslim law by framing his own regulations",
        "option4" : " religious freedom was accorded to non-muslims"
      }
    },
    {
      "index" : 53,
      "question" : "With reference to Suffism in Indian history, consider thefollowing statements: 1. Sheikh Ahmad Sarhandi was a contemporary of Ibrahim Lodi2. Sheikh Nasiruddin Chirag-I-Dehlavi was a disciple ofSheikh Nizamuddin Auliya3. Aurangzeb was a contemporary of Sheikh Salim Chisti4. Qadiri order of Sufis was first introduced in India bySheikh Niamutullah and Makhdum Muhammad JilaniWhich of these statements are correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTM=",
      "description" : "U2hlaWtoIEFobWFkIFNhcmhhbmRpIG9mIE5hcXNoYmFuZGkgb3JkZXIgd2FzIGEgY29udGVtcG9yYXJ5IG9mIEFrYmFyIGFuZCBKYWhhbmdpci4gVGhlIFFhZGlyaSBvcmRlciBvZiBTdWZpcyB3YXMgZmlyc3QgaW50cm9kdWNlZCBpbiBJbmRpYSBieSBTaGVpa2ggTml6YW1hdHVsbGFoIChIZSBkaWVkIGluIDE0MzAgQUQpIGFuZCBNYWtoZHVtIChvciBOYXNpcnVkZGluKSBNdWhhbW1hZCBKaWxhbmkgKGRpZWQgaW4gMTUxNyku",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3",
        "option3" : " 2 and 3 ",
        "option4" : " 2 an 4"
      }
    },
    {
      "index" : 54,
      "question" : "Assertion (A):  Emperor Akbar marched towardsAfghanistan in 1581 with a huge army.Reason (R): He was on his way to reclaim his ancestralcountry of Ferghana in Central Asia. 55. Assertion (A): Shah Alam II spent the initial years as anemperor far away from his capital.Reason (R): There was always a lurking danger of foreigninvasion from the north-west frontier. 56. Assertion (A): Saluva Narasimha put an end to the olddynasty and assumed the royal title.Reason (R) : He wanted to save the kingdom from furtherdegeneration and disintegration. 57. Assertion (A) : Marathas emerged as the strongest nativepower in India after the decline of Mughal empire.Reason (R) : Marathas were the first to have a clear conceptof a united Indian nation. 58. Alam Khan, one of those who invited Babur to invade Indiawas: ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTQ=",
      "description" : "QSBpcyBjb3JyZWN0IGFzIEFrYmFyIG1hcmNoZWQgdG93YXJkcyBBZmdoYW5pc3RhbiBpbiAxNTgxIHRvIGNvbnF1ZXIgS2FidWwgdG8gZXhwYW5kIGhpcyBraW5nZG9tLiBSIGlzIGluY29ycmVjdCBhcyBoZSBoYWQgbm8gaW50ZW50aW9uIHRvIHJlY2xhaW0gaGlzIGFuY2VzdHJhbCBjb3VudHJ5IG9mIEZlcmdoYW5hLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " an uncle of Ibrahim Lodi and a pretender to the throne of Delhi",
        "option2" : " a cousin of Ibrahim Lodi who was ill-treated and expelled from the country",
        "option3" : " the father of Dilawar Khan to whom cruel treatment was meted out by Ibrahim Lodi",
        "option4" : " a high official in Punjab province who was"
      }
    },
    {
      "index" : 59,
      "question" : "Battle of Dharmat was fought between: ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NTk=",
      "description" : "VGhlIGJhdHRsZSBvZiBEaGFybWF0IHdhcyBmb3VnaHQgYmV0d2VlbiBBdXJhbmd6ZWIgYW5kIERhcmEgU2hpa29oIGluIDE2NTggZm9yIFNoYWhqYWhhbidzIHRocm9uZS4gRGFyYSBTaGlrb2ggd2FzIGRlZmVhdGVkIGJ5IEF1cmFuZ3plYi4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Muhammad Ghori and Jai Chand",
        "option2" : " Babur and Afghans",
        "option3" : " Aurangzeb and Dara Shikoh",
        "option4" : " Ahmad Shah Durrani and the Marathas"
      }
    },
    {
      "index" : 60,
      "question" : "How did the Mughal Emperor Jahandarshah's reign, cometo an early end? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjA=",
      "description" : "SGUgd2FzIGRlZmVhdGVkIGJ5IGhpcyBuZXBoZXcsIEZhcnJ1a2ggU2l5eWFyIHdpdGggdGhlIGhlbHAgb2YgU2F5eWlkIEJyb3RoZXJzLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He was deposed by his Wazir",
        "option2" : " He died due to a slip while climbing down the steps",
        "option3" : " He was defeated by his nephew in a battle",
        "option4" : " He died of sickness due to drinking"
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements:1. Kitab-i-Nauras, a collection of songs in praise of Hindudeities and Muslim saints, was written by Ibrahim AdilShah II2. Amir Khusrau was the originator in India of the earlyfrom of the musical style known as Qawali                 Which of these statements is/are correct?",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjE=",
      "description" : "SWJyYWhpbSBBZGlsIFNoYWggSUkgd2FzIHJ1bGVyIG9mIEJpamFwdXIgYW5kIHdyb3RlIEtpdGFiLWktTmF1cmFzLiBBbWlyIEtodXNyYXUgaXMgcG9wdWxhcmx5IGtub3duIGFzICdGYXRoZXIgb2YgUWF3YWxpJyBpbiBJbmRpYS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 62,
      "question" : "How did Sultan Qutb-ud-din Aibak die? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjI=",
      "description" : "UXV0YnVkLWRpbiBBaWJhayBkaWVkIGFmdGVyIGEgZmFsbCBmcm9tIGhpcyBob3JzZSB3aGlsZSBwbGF5aW5nIGNoYXVnYW4gKHBvbG8pIGluIDEyMTAuIEhlIHdhcyBzdWNjZWVkZWQgYnkgQXJhbSBTaGFoLiBRdXRidWQtZGluIEFpYmFrIHdhcyB0aGUgZm91bmRlciBvZiBmaXJzdCBpbmRlcGVuZGVudCBUdXJraXNoIGtpbmdkb20gaW4gTm9ydGhlcm4gSW5kaWEgaW4gMTIwNi4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " He was treacherously stabbed to death by one of his ambitious nobles",
        "option2" : " He was killed in a battle with Taj-u-din Yildiz, the ruler of Ghazni who entered into a contest with him over the capture of Punjab",
        "option3" : " He sustained injuries while besieging the fortress of Kalinjar in Bundelkhand and succumbed to them later",
        "option4" : " He died after a fall from his horse while playing Chaugan"
      }
    },
    {
      "index" : 63,
      "question" : "Which one of the following sequences indicates the correctchronological order? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjM=",
      "description" : "VGhlIGNvcnJlY3QgY2hyb25vbG9naWNhbCBvcmRlciBpcyBTaGFua2FyYWNoYXJ5YSAoOXRoIENlbnR1cnkgQ0UpIC0gUmFtYW51amEgKDEwMTctMTEzNyBDRSkgLSBDaGFpdGFueWEgKDE0ODYtIDE1MzMgQ0Up",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Shankaracharya-Ramanuja-Chaitanya",
        "option2" : " Ramanuja-Shankaracharya-Chaitanya",
        "option3" : " Ramanuja-Chaitanya-Shankaracharya",
        "option4" : " Shankaracharya-Chaitanya-Ramanuja"
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements:1. Narasimha Saluva ended the Sangama dynasty andseized the throne for himself and started the Saluvadynasty.2. Vira Narasimha deposed the last Saluva ruler and seizedthe throne for himself.3. Vira Narasimha was succeeded by his younger brother,Krishnadeva Raya.4. Krishnadeva Raya was succeeded by his half brother,Achyuta Raya.Which of the statements given above are correct?(a) 1, 2 and 3 (b) 2, 3 and 4 Sultanate? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjQ=",
      "description" : "U2FuZ2FtYSBkeW5hc3R5IHdhcyBmb3VuZGVkIGJ5IEhhcmloYXJhLUkuIFNhbHV2YSBkeW5hc3R5IHdhcyBmb3VuZGVkIGJ5IE5hcmFzaW1oYSBTYWx1dmEgYnkgZGVmZWF0aW5nIERldiBSYXl1YS1JSSBvZiBTYW5nYW1hIGR5bmFzdHkuIFRhbHV2YSBkeW5hc3R5IHdhcyBmb3VuZGVkIGJ5IFZpcmEgTmFyYXNpbWhhIGFuZCB3YXMgc3VjY2VlZGVkIGJ5IEtEIFJheWEgYW5kIEFjaHl1dGEgUmF5YS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Firoz  Shah Tughlaq",
        "option2" : " Ghiyas-ud-din Tughlaq Shah II",
        "option3" : " 1 and 4 ",
        "option4" : " 1, 2, 3 an 4 65. Who was the last ruler of the Tughlaq dynasty of the Delhi"
      }
    },
    {
      "index" : 66,
      "question" : "How did the dynasty of Nizam Shahis of Ahmadnagar cometo an end?  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NjY=",
      "description" : "QWhtYWRuYWdhciB3YXMgZm91bmRlZCBieSBNYWxpayBBaG1hZCBvZiAgTml6YW0gU2hhaGkgZHluYXN0eSBpbiAxNDkwLiBJdCB3YXMgYW5uZXhlZCBieSBTaGFoamFoYW4gaW4gMTYzMyBpbnRvIHRoZSBNdWdoYWwgRW1waXJlLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Ahmadnagar was annexed into Mughal empire and Hussain Shah was given life imprisonment",
        "option2" : " Mughal troops destroyed Daulatabad fort and killed Nizam-ul Mulk of Ahmadnagar",
        "option3" : " Fateh Khan usurped the throne from Nizam-ul-Mulk",
        "option4" : " Malik Ambar was defeated in a battle with Mughals in"
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements about Sikh Gurus:1. Banda Bahadur was appointed as the military leader ofthe Sikhs by Guru Tegh Bahadur.2. Guru Arjun Dev became the Sikh Guru after Guru RamDas.3. Guru Arjun Dev gave to Sikhs their own script GuruMukhi.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njc=",
      "description" : "QmFuZGEgQmFoYWR1ciB3YXMgYXBwb2ludGVkIGFzIHRoZSBtaWxpdGFyeSBsZWFkZXIgb2YgdGhlIFNpa2hzIGJ5IEd1cnUgR29iaW5kIFNpbmdoIGFuZCBub3QgR3VydSBUZWdoIEJhaGFkdXIu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3",
        "option3" : " 1 and 3 ",
        "option4" : " 1 an 2"
      }
    },
    {
      "index" : 68,
      "question" : "The initial design and construction of which massive templetook place during the reign of Suryavarman II?        ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njg=",
      "description" : "QW5na29ydmF0IHRlbXBsZSBpcyB0aGUgZmlyc3QgSGluZHUgdGVtcGxlLCBkZWRpY2F0ZWQgdG8gdGhlIGdvZCBWaXNobnUuIEJ1ZGRoaXN0IHRlbXBsZSB3YXMgYnVpbHQgZHVyaW5nIHRoZSByZWlnbiBvZiBTdXJ5YXZhcm1hbiBJSS4gSXQgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCByZWxpZ2lvdXMgYnVpbGRpbmcu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sri Mariamman Temple",
        "option2" : " Angkor Vat Temple",
        "option3" : " Batu Caves Temple",
        "option4" : " Kamakhya Temple"
      }
    },
    {
      "index" : 69,
      "question" : "When Raja Wodeyar founded the kingdom of Mysore, whowas the ruler of the Vijayanagar Empire? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Njk=",
      "description" : "SW5kaWdlbm91cyBjaGllZnRhaW5zIGZyb20gS2FybmF0YWthIHJvc2UgdG8gYmVjb21lIHRoZSBmb3VuZGVycyBvZiBhIGR5bmFzdHkgYWZ0ZXIgYSBzZXJpZXMgb2YgaW50ZXJuYWwgYmlja2VyaW5ncyB3aXRoIG90aGVyIGxvY2FsIGNoaWVmdGFpbnMuIFZpamF5YSBhbmQgS3Jpc2huYSwgdHdvIGJyb3RoZXJzIHdlcmUgcmVzcG9uc2libGUgZm9yIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoaXMgc21hbGwgZmV1ZGF0b3J5IHN0YXRlIG9mICBWaWpheWFuYWdhcmEgRW1waXJlLiBWaWpheWEgYXNjZW5kZWQgdGhlIHRocm9uZSB1bmRlciB0aGUgYXNzdW1lZCBuYW1lIG9mIFlhZHVyYWphIGluIDEzOTkgQS5ELiBUbyBiZWdpbiB3aXRoLCB0aGlzIHdhcyBhIHZlcnkgc21hbGwgc3RhdGUgY29udGFpbmluZyBvbmx5IHBhcnRzIG9mIE15c29yZSBkaXN0cmljdC4gTXlzb3JlIHdhcyB0aGUgY2FwaXRhbCBjaXR5Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sadasiva ",
        "option2" : " Tirumala",
        "option3" : " Ranga II ",
        "option4" : " Venkata II"
      }
    },
    {
      "index" : 70,
      "question" : "In the year 1613, where was the English East India Companygiven permission to set up a factory (trading post)? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzA=",
      "description" : "SW4gMTYxMiAgU2lyIFRob21hcyBSb2UgdmlzaXRlZCB0byBNdWdoYWwgRW1wZXJvciBKYWhhbmdpciB0byBhcnJhbmdlIGZvciBhIGNvbW1lcmNpYWwgdHJlYXR5IHRoYXQgd291bGQgZ2l2ZSB0aGUgY29tcGFueSBleGNsdXNpdmUgcmlnaHRzIHRvIHJlc2lkZSBhbmQgYnVpbGQgZmFjdG9yaWVzIGluIFN1cmF0IGFuZCBvdGhlciBhcmVhcy4gIEluIHJldHVybiwgdGhlIGNvbXBhbnkgb2ZmZXJlZCB0byBwcm92aWRlIHRoZSBFbXBlcm9yIHdpdGggZ29vZHMgYW5kIHJhcml0aWVzIGZyb20gdGhlIEV1cm9wZWFuIG1hcmtldC4gIEphaGFuZ2lyIGFjY2VwdGVkIHRoZSBwcm9wb3NhbCBhbmQgdGhlIGNvbXBhbnkgY3JlYXRlZCB0cmFkaW5nIHBvc3RzIGluIFN1cmF0ICh3aGVyZSBhIGZhY3Rvcnkgd2FzIGJ1aWx0IGluIDE2MTMpLCBNYWRyYXMgKDE2MzkpLCBCb21iYXkgKDE2NjgpLCBhbmQgQ2FsY3V0dGEgKDE2OTApLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bangalore ",
        "option2" : " Madras",
        "option3" : " Masulipattam ",
        "option4" : " Surat"
      }
    },
    {
      "index" : 71,
      "question" : "Assertion (A): Muhammad bin Tughlaq issued a new goldcoin which was called Dinar by Ibn Batutah.Reason (R): Muhammad bin Tughlaq wanted to issue tokencurrency in gold coins to promote trade with West Asianand North African countries. ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzE=",
      "description" : "QSBpcyBjb3JyZWN0IGJ1dCBSIGlzIHdyb25nIGFzIGhlIGlzc3VlZCBicm9uemUgY29pbnMgYXMgdGhlIHRva2VuIGN1cnJlbmN5IHdoaWNoIHdhcyBhIGdyZWF0IGZpYXNjby4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Both A are R are true but R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 72,
      "question" : "Which one of the following is the correct chronologicalorder of the Afghan rulers to the throne of Delhi?   ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzI=",
      "description" : "QmFobG9sICgxNDUxLTE0ODkpOyBTaWthbmRhciAoMTQ4OS0xNTE3KTsgSWJyYWhpbSAoMTUxNy0xNTI2KQ==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sikandar Shah-Ibrahim Lodi-Bahlol Khan Lodi",
        "option2" : " Sikandar Shah-Bahlol Khan Lodi-Ibrahim Lodi",
        "option3" : " Bahlol Khan Lodi-Sikandar Shah-Ibrahim Lodi",
        "option4" : " Bahlol Khan Lodi-Ibrahim Lodi-Sikandar Shah"
      }
    },
    {
      "index" : 73,
      "question" : "Bhakta Tukaram was a contemporary of which Mughalemperor? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzM=",
      "description" : "QmVzdCBhbnN3ZXIgaXMgYyBhcyBUdWthcmFtICgxNjA4LTE2NTApIHdhcyBhIE1hcmF0aGkgQmhha3RpIHBvZXQgYW5kIGEgZGV2b3RlZSBvZiBMb3JkIEtyaXNobmEuIFRpbWUgcGVyaW9kIG9mIEphaGFuZ2lyIHdhcyAxNjA1LTE2Mjcu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Babar ",
        "option2" : " Akar",
        "option3" : " Jahangir ",
        "option4" : " Aurangzeb"
      }
    },
    {
      "index" : 74,
      "question" : "In Indian history, who was Abdul Hamid Lahori?    ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzQ=",
      "description" : "QWJkdWwgSGFtaWQgTGFob3JpIChkLiAxNjU0KSB3YXMgYSB0cmF2ZWxsZXIgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgU2hhaGphaGFuIHdobyBsYXRlciBiZWNhbWUgYSBjb3VydCBoaXN0b3JpYW4gb2YgU2hhaGphaGFuLiBIZSB3cm90ZSB0aGUgYm9vayBQYWRzaGFoIE5hbWEgYWxzbyByZWZlcnJlZCBhcyBCYWRzaGFoIG5hbWEsIGFib3V0IHRoZSByZWlnbiBvZiBTaGFoamFoYW4u",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " An important military commander during Akbar reign.",
        "option2" : " An official historian of the reign of Shahjahan.",
        "option3" : " An important noble and confidant of Aurangzeb.",
        "option4" : " A chronicler and poet during the reign of Muhammad"
      }
    },
    {
      "index" : 75,
      "question" : "Where is the famous Vijaya Vittala temple having its 56carved pillars emitting musical notes located?(a) Belur (b) Bhadrachalam (a) Akbar (b) Jahangir ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8NzU=",
      "description" : "VmlqYXlhIFZpdHRhbGEgdGVtcGxlIGlzIGxvY2F0ZWQgYXQgSGFtcGksIHRoZSBjYXBpdGFsIG9mIFZpamF5YW5hZ2FyIGtpbmdkb20gZHVyaW5nIHRoZSByZWlnbiBvZiBLcmlzaG5hZGV2IFJheWEu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hampi ",
        "option2" : " Shahjahan ",
        "option3" : " Srirangam 76. During the time of which Mughal Emperor did the English East India Company establish its first factory in India?",
        "option4" : " Aurangzeb"
      }
    },
    {
      "index" : 77,
      "question" : "Where is the famous Virupaksha temple located? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzc=",
      "description" : "T2xkZXN0IHRlbXBsZSBpbiBIYW1waSAoUGF0dGFka2FsKSBsb2NhdGVkIG9uIHNvdXRoZXJuIGJhbmsgb2Ygcml2ZXIgVHVuZ2FiaGFkcmEuIEl0IGlzIG5vdyBhIFdvcmxkIEhlcml0YWdlIHNpdGUuIEl0IHdhcyBidWlsdCBieSBMb2thbWFoYWRldmksIHRoZSBRdWVlbiBvZiBWaWthcmFtYWRpdHlhIElJIChBLkQuNzMzLTc0NSkgaW4gYWJvdXQgQS5ELjc0MCB0byBjb21tZW1vcmF0ZSBoZXIgaHVzYmFuZCdzIHZpY3Rvcnkgb3ZlciB0aGUgUGFsbGF2YXMgb2YgS2FuY2hpcHVyYW0u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bhadrachalam ",
        "option2" : " Chidamaram",
        "option3" : " Hampi ",
        "option4" : " Srikalahasti"
      }
    },
    {
      "index" : 78,
      "question" : "Match List-I with List-II and select the correct answer usingthe code given below the lists: List-I (Famous temple)     List-II (State)A. Vidyashankara temple 1.  Andhra PradeshB. Rajarani temple 2.  KarnatakaC. Kandariya Mahadeo 3.  Madhya PradeshtempleD. Bhimesvara temple 4.  OrissaCodes:",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzg=",
      "description" : "QmhpbWVzaHdhciAoS2FraW5hZGEpOyBLYW5kYXJpeWEgTWFoYWRlbyAoS2hhanVyYWhvKTsgUmFqYXJhbmkgdGVtcGxlIChCaHVibmVzaHZhcik7IFZpZHlhc2hhbmthcmEgVGVtcGxlIChTcmluZ2VyaSku",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " A - 2; B - 4; C - 3; D - 1",
        "option2" : " A - 2; B - 3; C - 4; D - 1",
        "option3" : " A - 1; B - 4; C - 3; D - 2",
        "option4" : " A - 1; B - 3; C - 4; D - 2"
      }
    },
    {
      "index" : 79,
      "question" : "With whose permission did the English set up their firstfactory in Surat? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8Nzk=",
      "description" : "SmFtZXMtSSBXaWxsaWFtIEhhd2tpbnMgc2VudCB0byB0aGUgY291cnQgb2YgSmFoYW5naXIgYW5kIEphaGFuZ2lyIHByb3ZpZGVkIHRoZSBmYXJtYW4gd2hpY2ggYWxsb3dlZCBFYXN0IEluZGlhIENvLiB0byBzZXQgdXAgYSBmYWN0b3J5IGF0IFN1cmF0IGluIDE2MTMu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Akbar ",
        "option2" : " Jahangir",
        "option3" : " Shahjahan ",
        "option4" : " Aurangzeb"
      }
    },
    {
      "index" : 80,
      "question" : "Among the following, who was not a proponent of Bhakticult ? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8ODA=",
      "description" : "TmFnYXJqdW5hIHdhcyBhbiBlYXJseSBwaGlsb3NvcGhlciBhbmQgd2FzIHRoZSBmb3VuZGVyIG9mIHRoZSBNYWRoeWFtaWthIHBoaWxvc29waHku",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nagarjuna ",
        "option2" : " Tukaram",
        "option3" : " Tyagaraja ",
        "option4" : " Vallabhacharya"
      }
    },
    {
      "index" : 81,
      "question" : "Why did Buddhism start declining in India in the earlymedieval times ? 1. Buddha was by that time considered as one of theincarnations of Vishnu and thus became a part ofVaishnavism.2. Invading tribes from Central Asia till the time of lastGupta king adopted Hinduism and persecutedBuddhists.3. Kings of Gupta dynasty were strongly opposed toBuddhism.Which of the statements given above is/are correct ?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnl8ODE=",
      "description" : "QnVkZGhhIHdhcyBjb25zaWRlcmVkIDl0aCBpbmNhcm5hdGlvbiBvZiBWaXNobnUuIE5vIHRyaWJlIGZyb20gQ2VudHJhbCBBc2lhIHBlcnNlY3V0ZWQgQnVkZGhpc3RzLiBHdXB0YSBkeW5hc3R5IGRpZCBub3Qgb3Bwb3NlIEJ1ZGRoaXNtLiBIb3dldmVyLCB0aGV5IGRpZCBub3QgZ2l2ZSB0aGVtIHBhdHJvbmFnZS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxIaXN0b3J5fE1lZGlldmFsIEhpc3Rvcnk=",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 82,
      "question" : "With reference to Dhrupad, one of the major traditions ofIndia that has been kept alive for centuries, which of thefollowing statements are correct? 1. Dhrupad originated and developed in the Rajputkingdoms during the Mughal period.2. Dhrupad is primarily a devotional and spiritual music.3. Dhrupad Alap uses Sanskrit syllables from Mantras.Select the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDgy",
      "description" : "RGhydXBhZCBpcyBwcmltYXJpbHkgYSBzcGlyaXR1YWwgYW5kIGRldm90aW9uYWwgbXVzaWMgYW5kIGl0IHVzZXMgU2Fuc2tyaXQgc3lsbGFibGVzIGZyb20gbWFudHJhcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1, 2 and 3 ",
        "option4" : "    None of the above is correct"
      }
    },
    {
      "index" : 83,
      "question" : "With reference to the religious history of medieval India,the Sufi mystics were known to pursue which of thefollowing practices? 1. Meditation and control of breath2. Severe ascetic exercises in a lonely place3. Recitation of holy songs to arouse a state of ecstasyin their audienceSelect the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDgz",
      "description" : "QWxsIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QsIGhlbmNlIHRoZSBvcHRpb24gKGQpIGlzIGNvcnJlY3Qu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following Bhakti Saints: 1. Dadu Dayal2. Guru Nanak3. TyagarajaWho among the above was/were preaching when the Lodidynasty fell and Babur took over?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg0",
      "description" : "R3VydSBOYW5hayBEZXYgd2FzIGJvcm4gaW4gMTQ2OS4gQmFidXIgZGVmZWF0ZWQgSWJyYWhpbSBMb2RpIGluIDE1MjYuIFdoZW4gQmFidXIgdG9vayBvdmVyIGFuZCBlc3RhYmxpc2hlZCB0aGUgTXVnaGFsIGR5bmFzdHksIE5hbmFrIHdhcyB0cmF2ZWxsaW5nIHRvIGRpZmZlcmVudCBwYXJ0cyBvZiBJbmRpYSBhbmQgcHJlYWNoaW5nIFNpa2hpc20uIEJhYnVyIG9uY2UgbWV0IEd1cnUgTmFuYWsgZHVyaW5nIG9uZSBvZiBoaXMgdHJhdmVsLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 only",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 2"
      }
    },
    {
      "index" : 85,
      "question" : "Ibadat Khana at Fatehpur Sikri was ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg1",
      "description" : "SWJhZGF0IEtoYW5hIGF0IEZhdGVocHVyIFNpa3JpIHdhcyB0aGUgaGFsbCBpbiB3aGljaCBBa2JhciBoZWxkIGRpc2N1c3Npb25zIHdpdGggc2Nob2xhcnMgb2YgdmFyaW91cyByZWxpZ2lvbnMgb24gZXZlcnkgVGh1cnNkYXkgdG8gZGViYXRlIG9uIHJlbGlnaW91cyBpc3N1ZXMgcmFpc2VkIGJ5IEFrYmFyLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " the mosque for the use of Royal Family",
        "option2" : " Akbar's  private  prayer chamber",
        "option3" : " the hall in which Akbar held discussions with scholars of various religions",
        "option4" : " the room in which the nobles belonging to different"
      }
    },
    {
      "index" : 86,
      "question" : "In medieval India, the designations 'Mahattara'  and  'Pattakila'were used for ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5fDg2",
      "description" : "SW4gbWVkaWV2YWwgSW5kaWEsIHRoZSBkZXNpZ25hdGlvbnMgJ01haGF0dGFyYScgYW5kICdQYXR0YWtpbGEnIHdlcmUgdXNlZCBmb3IgdmlsbGFnZSBoZWFkbWVuLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8SGlzdG9yeXxNZWRpZXZhbCBIaXN0b3J5",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : "  military officers ",
        "option2" : "  village headmen",
        "option3" : "  specialists in Vedic rituals ",
        "option4" : "  chiefs of craft guils"
      }
    },
    {
      "index" : 87,
      "question" : "Consider the following pairs: Medieval Indian State Present Region1. Champaka : Central India2. Durgara : Jammu3. Kuluta : MalabarWhich of the above pairs is / are correctly matched?",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4Nw==",
      "description" : "U3RhdGVzIHN1Y2ggYXMgQ2hhbXBha2EgKENoYW1iYSksIER1cmdhcmEgKEphbW11KSwgVHJpZ2FydGEgKEphbGFuZGhhciksIEt1bHV0YSAoS3VsdSksIEt1bWFvbiBhbmQgR2FyaHdhbCBtYW5hZ2VkIHRvIHJlbWFpbiBvdXRzaWRlIHRoZSBtYWluIGFyZWFzIG9mIGNvbmZsaWN0IGluIHRoZSBub3J0aGVybiBwbGFpbnMu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only",
        "option3" : " 1 and 3 ",
        "option4" : "Only"
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following: The arrival of Babur into India led to the1. introduction of gunpowder in the subcontinent2. introduction of the arch and dome in the region'sarchitecture3. establishment of Timurid dynasty in the regionSelect the correct answer using the code given below.",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4OA==",
      "description" : "SW4gdGhlIGZvdXJ0ZWVudGggYW5kIGZpZnRlZW50aCBjZW50dXJ5IGd1biBwb3dkZXIgd2FzIHVzZWQgZm9yIG1pbGl0YXJ5IHB1cnBvc2UgaW4gSW5kaWEgYW5kIGV2ZW4gYXJ0aWxsZXJ5IGluIGl0cyBydWRpbWVudGFyeSBmb3JtIHdhcyBrbm93bi4gVGhlIEJhYnVyJ3MgZmlyc3QgcmVhbCBleHBlZGl0aW9uIHRvb2sgcGxhY2UgaW4gSW5kaWEgaW4gMTUxOSB3aGVuIGhlIGNhcHR1cmVkIEJoZXJhLiBUaGUgRGVsaGkgU3VsdGFuYXRlJ3MgZ3JlYXRlc3QgY29udHJpYnV0aW9uIHRvIEluZGlhbiBmaW5lIGFydHMgd2FzIHRoZSBpbnRyb2R1Y3Rpb24gb2YgSXNsYW1pYyBhcmNoaXRlY3R1cmFsIGZlYXR1cmVzLCBpbmNsdWRpbmcgdHJ1ZSBkb21lcyBhbmQgYXJjaGVzLCBhbmQgdGhlIGludGVncmF0aW9uIG9mIEluZGlhbiBhbmQgSXNsYW1pYyBzdHlsZXMgb2YgYXJjaGl0ZWN0dXJlLiBUaGUgVGltdXJpZCBkeW5hc3R5IHdhcyBhIFN1bm5pIE11c2xpbSBkeW5hc3R5LiBNZW1iZXJzIG9mIHRoZSBUaW11cmlkIGR5bmFzdHkgd2VyZSBzdHJvbmdseSBpbmZsdWVuY2VkIGJ5IHRoZSBQZXJzaWFuIGN1bHR1cmUgYW5kIGhhZCBlc3RhYmxpc2hlZCB0d28gd2VsbC1rbm93biBlbXBpcmVzIGluIGhpc3RvcnksIG5hbWVseSB0aGUgVGltdXJpZCBFbXBpcmUgKDEzNzAtMTUwNykgaW4gUGVyc2lhIGFuZCBDZW50cmFsIEFzaWEgYW5kIHRoZSBNdWdoYWwgRW1waXJlICgxNTI2LTE4NTcpIGluIHRoZSBJbmRpYW4gc3ViY29udGluZW50Lg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 89,
      "question" : "Who of the following founded a new city on the south bankof a tributary to river Krishna and undertook to rule his newkingdom as the agent of a deity to whom all the land southof the river Krishna was supposed to belong?     ",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw4OQ==",
      "description" : "VmlqYXlhbmFnYXJhIG9yICJjaXR5IG9mIHZpY3RvcnkiIHdhcyB0aGUgbmFtZSBvZiBib3RoIGEgY2l0eSBhbmQgYW4gZW1waXJlLiBUaGUgZW1waXJlIHdhcyBmb3VuZGVkIGluIHRoZSBmb3VydGVlbnRoIGNlbnR1cnkuIEluIGl0cyBoZXlkYXkgaXQgc3RyZXRjaGVkIGZyb20gdGhlIHJpdmVyIEtyaXNobmEgaW4gdGhlIG5vcnRoIHRvIHRoZSBleHRyZW1lIHNvdXRoIG9mIHRoZSBwZW5pbnN1bGEsIChLcmlzaG5hLVR1bmdhYmhhZHJhIGRvYWIpLiBJdCB3YXMgZm91bmRlZCBieSBIYXJpaGFyYSAxIGFuZCBCdWtrYSwgaW4gMTMzNi4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Amoghavarsha I ",
        "option2" : " Ballala II",
        "option3" : " Harihara I ",
        "option4" : " Prataparura II"
      }
    },
    {
      "index" : 90,
      "question" : "Banjaras during the medieval period of Indian history weregenerally ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5MA==",
      "description" : "SW4gSW5kaWEsIEJhbmphcmEgcGVvcGxlIHdlcmUgdHJhbnNwb3J0ZXJzIG9mIGdvb2RzIGZyb20gb25lIHBsYWNlICB0byBhbm90aGVyIGFuZCB0aGUgZ29vZHMgdGhleSB0cmFuc3BvcnRlZCBpbmNsdWRlZCBzYWx0LCBncmFpbnMsIGZpcmV3b29kIGFuZCBjYXR0bGUuVGh1cywgQmFuamFyYXMgd2VyZSB0cmFkZXItbm9tYWRzLiBSZWY6IENsYXNzIDcgTkNFUlQgUGFnZSA5NC05NS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " agriculturists ",
        "option2" : " warriors",
        "option3" : " weavers ",
        "option4" : " traers"
      }
    },
    {
      "index" : 91,
      "question" : "Who of the following had first deciphered the edicts ofEmperor Ashoka? ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5MQ==",
      "description" : "SW4gMTgzNywgQnJpdGlzaCBhcmNoZW9sb2dpc3QgYW5kIGhpc3RvcmlhbiBKYW1lcyBQcmluc2VwIGRlY29kZWQgdGhlIGVkaWN0cyBvZiBlbXBlcm9yIEFzaG9rYS4gUHJpbnNlcCdzIGluc2NyaXB0aW9uIHByb3ZlZCB0byBiZSBhIHNlcmllcyBvZiBlZGljdHMgaXNzdWVkIGJ5IGEga2luZyBjYWxsaW5nIGhpbXNlbGYgJ0JlbG92ZWQtb2YtdGhlLUdvZHMsIEtpbmcgUGl5YWRhc2kuJyBSZWY6IFN0ZCAxMnRoIE5DRVJULCBUaGVtZXMgaW4gSW5kaWEgSGlzdG9yeSwgUGFydC1JLCBQYWdlIDI4LTI5",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Georg Buehler ",
        "option2" : " James Prinsep",
        "option3" : " Max Muller ",
        "option4" : " William Jones"
      }
    },
    {
      "index" : 92,
      "question" : "With reference to the religious history of India, considerthe following statements : 1. The concept of Bodhisattva is central to Hinayanasect of Buddhism.2. Bodhisattva is a compassionate one on his way toenlightenment.3. Bodhisattva delays achieving his own salvation tohelp all sentient beings on their path to it.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Mg==",
      "description" : "VGhlIGNvbmNlcHQgb2YgQm9kaGlzYXR0dmEgaXMgY2VudHJhbCB0byB0aGUgTWFoYXlhbmEgZG9jdHJpbmVzIG9mIEJ1ZGRoaXNtLiBUaGUgdGVybSAnYm9kaGlzYXR0dmEnIGxpdGVyYWxseSBtZWFucyAnb25lIHdobyBoYXMgZW5saWdodGVubWVudCBhcyBoaXMvaGVyIGVzc2VuY2UnLiBBIGJvZGhpc2F0dHZhIGlzIGEgYmVpbmcgd2hvIGlzIGRlc3RpbmVkIGZvciBlbmxpZ2h0ZW5tZW50IHJhdGhlciB0aGFuIG9uZSB3aG8gaGFzIGdhaW5lZCBpdCBhbHJlYWR5LiBBIGJvZGhpc2F0dHZhIGlzIGFsc28gbm9ybWFsbHkgdGhvdWdodCBvZiBhcyBjb25zY2lvdXNseSB3b3JraW5nIHRvd2FyZHMgZW5saWdodGVubWVudDogeW91IGNhbid0IGNhbGwgc29tZW9uZSBhIGJvZGhpc2F0dHZhIGp1c3QgYmVjYXVzZSB0aGV5IG1pZ2h0IGJlIGVubGlnaHRlbmVkIGluIHRoZSBmdXR1cmUgaWYgdGhleSBoYXZlbid0IHN0YXJ0ZWQgbWFraW5nIGFuIGVmZm9ydCB5ZXQuIEZvciB0aGlzIHJlYXNvbiwgdGhlIGVhcmxpZXN0IHVzZSBvZiB0aGUgdGVybSAnYm9kaGlzYXR0dmEnIHJlZmVycyB0byBTaWRkaGFydGhhIEdhdXRhbWEgYmVmb3JlIGhlIGdhaW5lZCBlbmxpZ2h0ZW5tZW50LCBhbmQgYWxzbyBpbiBoaXMgcHJldmlvdXMgbGl2ZXMuIFRodXMsIEJvZGRoaXNhdHR2YSBpcyBjZW50cmFsIHRvIE1haGF5YW4gc2VjdCBvZiBCdWRkaGlzbS4gSGVuY2UgZmlyc3Qgc3RhdGVtZW50IGlzIHdyb25nLiBXaGlsZSAybmQgYW5kIDNyZCBhcmUgY29ycmVjdC4gRSBCIEQgXzggMzQgMiBNZWRpZXZhbCBIaXN0b3J5ICAgUmVmIDogQXMgcGVyIFN0ZCAxMnRoIE5DRVJULCBUaGVtZXMgaW4gSW5kaWEgSGlzdG9yeSwgUGFydC1JLCBQYWdlIDEwMy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 2 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 93,
      "question" : "What is/are common to the two historical places known asAjanta and Mahabalipuram? 1. Both were built in the same period.2. Both belong to the same religious denomination.3. Both have rock-cut monuments.Select the correct answer using the code given below.",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Mw==",
      "description" : "Rmlyc3QgYW5kIHNlY29uZCBzdGF0ZW1lbnRzIGFyZSB3cm9uZyBiZWNhdXNlIEFqYW50YSAoQnVkZGhpc3QgY2F2ZXMpIHdhcyBidWlsdCBmcm9tIDJuZCBDZW50dXJ5IEJDRSB0byA1dGggQ2VudHVyeSBDRSwgd2hpbGUgTWFoYWJhbGlwdXJhbSAoSGluZHUgdGVtcGxlKSB3YXMgYnVpbHQgZHVyaW5nIDctOHRoIENlbnR1cmllcyBieSBQYWxsYXZhIEtpbmdzLiBUaGlyZCBzdGF0ZW1lbnQgaXMgY29ycmVjdC0gYm90aCBhcmUgcm9jayBjdXQgbW9udW1lbnRzLiBSZWY6IENsYXNzLTExIE5DRVJULCBQYWdlIDgzLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only",
        "option2" : " 3 only",
        "option3" : " 1 and 3 only",
        "option4" : " None of the statements given above is correct"
      }
    },
    {
      "index" : 94,
      "question" : "With reference to the economic history of medieval India,the term Araghatta' refers to ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5NA==",
      "description" : "VGhlIFBlcnNpYW4gd2hlZWwgaXMgYSBtZWNoYW5pY2FsIHdhdGVyIGxpZnRpbmcgZGV2aWNlIG9wZXJhdGVkIHVzdWFsbHkgYnkgZHJhdWdodCBhbmltYWxzIGxpa2UgYnVsbG9ja3MsIGJ1ZmZhbG9lcyBvciBjYW1lbHMuIEl0IGlzIHVzZWQgdG8gbGlmdCB3YXRlciBmcm9tIHdhdGVyIHNvdXJjZXMgdHlwaWNhbGx5IG9wZW4gd2VsbHMuIEluIFNhbnNrcml0IHRoZSB3b3JkIEFyYWdoYXR0YSBoYXMgYmVlbiB1c2VkIGluIHRoZSBhbmNpZW50IHRleHRzIHRvIGRlc2NyaWJlIHRoZSBQZXJzaWFuIFdoZWVsLiBUaGUgJ2FyYS1naGF0dGEnIGNvbWVzIGZyb20gdGhlIGNvbWJpbmF0aW9uIG9mIHRoZSB3b3JkcyAnYXJhJyBtZWFuaW5nIHNwb2tlIGFuZCAnZ2hhdHRhJyBtZWFuaW5nIHBvdC4gUmVmOiA3dGhTdGQgTkNFUlQsIE91ciBQYXN0IElJLCBQYWdlIDYtNy4gSXQgZGlzY3Vzc2VzIGFib3V0IHRoZSBpbnZlbnRpb24gb2Ygd2F0ZXItd2hlZWwgaXJyaWdhdGlvbiwga25vd24gaW4gUGVyc2lhbiBhcyAnQWdyYWhhdHRhJy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " bonded labour",
        "option2" : " land grants made to military officers",
        "option3" : " waterwheel used in the irrigation of land",
        "option4" : " wastel and converted to cultivated land"
      }
    },
    {
      "index" : 95,
      "question" : "With reference to the cultural history of India, thememorizing of chronicles, dynastic histories and Epic taleswas the profession of who of the following?(a) Shramana (b) Parivraaj              96. Consider the following pairs: ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5NQ==",
      "description" : "VGhlIE1hYWdhZGhhIGFuZCB0aGUgc3V1dGFzIHdlcmUgYXNzb2NpYXRlZCB3aXRoIG1lbW9yaXppbmcgb2YgY2hyb25pY2xlcywgZHluYXN0aWMgaGlzdG9yaWVzIGFuZCBFcGljIHRhbGVzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 ",
        "option2" : " 2, 3, 4 and 5",
        "option3" : " Agrahaarika ",
        "option4" : " Maagaha Famous place Region 1. Bodhgaya Baghelkhand 2. Khajuraho Bundelkhand 3. Shirdi Vidarbha 4. Nasik (Nashik) Malwa 5. Tirupati Rayalaseema Which of the pairs given above are correctly matched?"
      }
    },
    {
      "index" : 97,
      "question" : "With reference to the cultural history of medieval India,consider the following statements : 1. Siddhas (Sittars) of Tamil region were monotheisticand condemned idolatry.2. Lingayats of Kannada region questioned the theoryof rebirth and rejected the caste hierarchy.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5Nw==",
      "description" : "KGkpIFNpZGRoYXMgbWVhbnMgdGhlIHJlZmluZWQgbW9ub3RoZWlzdGljIGNyZWVkIGV4aXN0ZWQuIFNpdHRhciBpbXBsaWVzIGFuIGV4cGVydCBpbiBvY2N1bHRpc20sIGFsY2hlbXkgYW5kIHNvIG9uIHdpdGggbWFnaWMgb3Igc3VwZXJzdGl0aW91cyBwb3dlcnMuIChpaSkgVGhlIGxpbmdheWF0cyBiZWxpZXZlZCB0aGF0IG9uIGRlYXRoIHRoZSBkZXZvdGVlIHdpbGwgYmUgcmV1bml0ZWQgd2l0aCBTaGl2YSBhbmQgbm90IHJldHVybiB0byB0aGlzIHdvcmxkLiBUaGVyZWZvcmUgaW5zdGVhZCBvZiBjcmVtYXRpbmcgdGhlIGJvZHksIHRoZXkgY2VyZW1vbmlhbGx5IGJ1cnkgdGhlaXIgZGVhZC4gKGlpaSkgVGhleSBjcml0aWNpc2VkIHRoZSBjYXN0ZSBzeXN0ZW0gYW5kIHF1ZXN0aW9uZWQgYmVsaWVmIGluIHRoZSB0aGVvcnkgb2YgcmViaXJ0aC4gKGl2KSBDZXJ0YWluIHByYWN0aWNlcyB3ZXJlIGVuY291cmFnZWQgYnkgdGhlIGxpbmdheWF0cyBzdWNoIGFzIHBvc3QtcHViZXJ0eSBtYXJyaWFnZXMgYW5kIHdpZG93IHJlbWFycmlhZ2UuIEtub3dsZWRnZSBvZiB0aGUgVmlyYXNoYWl2YSB0cmFkaXRpb24gaGFzIGJlZW4gZGVyaXZlZCBmcm9tIHZhY2hhbmFzIChzYXlpbmdzKSBjb21wb3NlZCBpbiBLYW5uYWRhIGJ5IHRob3NlIHdobyBoYWQgam9pbmVkIFJlZjogIFN0ZCAxMnRoIE5DRVJULCBUaGVtZXMgaW4gSW5kaWEgSGlzdG9yeSwgUGFydC1JSSwgUGFnZSAxNDg=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 98,
      "question" : "Regarding the taxation system of Krishna Deva, the ruler ofVijayanagar, consider the following statements:    1. The tax rate on land was fixed depending on thequality of the land.2. Private owners of workshops paid an industries tax.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5OA==",
      "description" : "KGkpIEluIHJlaWduIG9mIEtyaXNobmEgRGV2YSwgbGFuZCByZXZlbnVlIHdhcyB0aGUgbWFpbiBzb3VyY2Ugb2YgaW5jb21lIG9mIHRoZSBnb3Zlcm5tZW50LiBUbyBhc3Nlc3MgdGhlIHByb3BlciByZXZlbnVlIGVudGlyZSBsYW5kIHdhcyBjbGFzc2lmaWVkIGludG8gZm91ciBwYXJ0czogdGhlIHdldCBsYW5kLCB0aGUgZHJ5IGxhbmQsIHRoZSBvcmNoYXJkcyBhbmQgdGhlIHdvb2RzLiBUaGUgZ292ZXJubWVudCBhbHNvIGxldmllZCBvdGhlciB0YXhlcyBsaWtlIHRoZSBncmF6aW5nIHRheCwgdGhlIGN1c3RvbXMgZHV0eSwgdGF4IG9uIGdhcmRlbmluZyBhbmQgaW5kdXN0cmllcyB0YXhlcyBvbiBtYW51ZmFjdHVyZSBvZiB2YXJpb3VzIGFydGljbGVzLiAoaWkpIEZyb20gdGhlIHRyYXZlbG9ndWUgd3JpdHRlbiBieSBQZXJzaWFuZW52b3kgQWJkdXIgUmF6emFxaW4gdGhlIGNvdXJ0IG9mIFZpamF5bmFnYXIsIHdlIGZpbmQgYm90aCBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 99,
      "question" : "With reference to the cultural history of India, consider thefollowing statements :(Pre18 Set-D)        1. White marble was used in making Buland Darwaza andKhankah at Fatehpur Sikri.2. Red sandstone and marble were used in making IlaraImambara and Rumi Darwaza at Lucknow.Which of the statements given above is/are correct ?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeXw5OQ==",
      "description" : "SUNTRSBDbGFzcyA5IHRleHRib29rIFBhZ2UgMTUwIHNheXMgQnVsYW5kIERhcndhemEgY29uc3RydWN0ZWQgaW4gcmVkIGFuZCB5ZWxsb3cgc3RhbmRzdG9uZXMgd2l0aCB3aGl0ZSBtYXJibGUgaW5sYXkgaW4gdGhlIHNwYW4gb2YgdGhlIGFyY2hlcy4gT3RoZXIgcmFuZG9tIGdvb2dsZSBib29rcyByZXZlYWwgdGhhdCBLaGFua2FoIHRvbyBjb250YWlucyB3aGl0ZSBtYXJibGVzLiBTbywgc3RhdGVtZW50IzEgb3VnaHQgdG8gYmUgcmlnaHQuIFNlY29uZCBzdGF0ZW1lbnQgaXMgd3JvbmcuICdSdW1pIERhcndhemEsIEJhcmEgSW1hbWJhcmEsIENoaGF0YXIgTWFuemlsIGFyZSBtb251bWVudHMgYXJlIGZyYWdpbGUgaW4gdGVybXMgb2Ygc3RydWN0dXJhbCBzdHJlbmd0aCAoYmVjYXVzZSkgVGhlIGNvbW1vbiBtYXRlcmlhbCB1c2VkIGZvciByYWlzaW5nIG1vc3Qgb2YgdGhlIG1vbnVtZW50cyBpbiBMdWNrbm93IHdhcyBicmljayBhbmQgcGxhc3RlciwgIHNheXMgVGltZXNvZkluZGlhLiBTbywgYWNjb3JkaW5nbHkgYW5zd2VyIHNob3VsZCBoYXZlIGJlZW4gJ2EnIGJ1dCBVUFNDIGhhcyBrZXB0ICdkJyBhcyB0aGUgb2ZmaWNpYWwgYW5zd2VyLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEhpc3Rvcnl8TWVkaWV2YWwgSGlzdG9yeQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Medieval History",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    }
  ],
  "subject" : "History",
  "topic" : "Medieval History",
  "year" : "0"
}
