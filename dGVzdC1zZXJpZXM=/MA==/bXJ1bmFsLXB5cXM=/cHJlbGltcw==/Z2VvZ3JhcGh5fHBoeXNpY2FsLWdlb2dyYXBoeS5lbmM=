{
  "testId" : "geography|physical-geography",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/pyqs/mrunal-pyqs/prelims/1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "A meteor is : ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE=",
      "description" : "TWV0ZW9yIGlzIGEgc21hbGwgY2VsZXN0aWFsIGJvZHkgd2hpY2ggaGFzIGVudGVyZWQgdGhlIGVhcnRoJ3MgYXRtb3NwaGVyZSBieSB0aGUgZ3Jhdml0YXRpb25hbCBmb3JjZSBvZiBlYXJ0aCwgd2hlbiB0aGV5IHBhc3MgY2xvc2UgdG8gaXQuIE1ldGVvcnMgdHlwaWNhbGx5IG9jY3VycyBpbiB0aGUgbWVzb3NwaGVyZSwgYW5kIG1vc3QgcmFuZ2UgaW4gYWx0aXR1ZGUgZnJvbSA3NSBrbSB0byAxMDAga20u",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " a rapidly moving star",
        "option2" : " a  piece  of  mater  which  has  entered  the  earth's atmosphere from outer space",
        "option3" : " part of a constellation",
        "option4" : " a comet without a tail"
      }
    },
    {
      "index" : 2,
      "question" : "Which one of the following does not belong to biospherereserves set-up so far? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI=",
      "description" : "QXMgcGVyIHRoZSBxdWVzdGlvbiBhbnN3ZXIgaXMgKGQpLiBHdWxmIG9mIEthY2hjaGggaGFzIGJlZW4gZGVjbGFyZWQgYSBiaW8tc3BoZXJlIHJlc2VydmUgaW4gMjAwOC4gVGhlcmUgYXJlIDE4IG5vdGlmaWVkIEJpby1zcGhlcmUgcmVzZXJ2ZXMgaW4gSW5kaWEuIE91dCBvZiB0aGVtLCAxMCBCaW9zcGhlcmUgUmVzZXJ2ZXMgYXJlIGluIHRoZSBVTkVTQ08ncyBNQUIgd29ybGQgTmV0d29yay4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Great Nicobar ",
        "option2" : " Sunderans",
        "option3" : " Nanda Devi ",
        "option4" : " Gulf of Kutch"
      }
    },
    {
      "index" : 3,
      "question" : "The graph given below shows the mean average monthlytemperatures (in ºC) and mean monthly rainfall (in cms) of aplace: This graph is indicative of which one of the climatic zonesof the world?",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM=",
      "description" : "SW4gdGhlIGdyYXBoIHRoZSB0ZW1wZXJhdHVyZSByYW5nZXMgZnJvbSAxNcKwIHRvIDI1wrAuIFNvLCB0aGUgZ3JhcGggaW5kaWNhdGVzIHdldCBhbmQgZHJ5IHRyb3BpY2FsIHJlZ2lvbiwgYW5kIGluIHRoaXMgcmVnaW9uIHJhaW4gZmFsbCBkb2VzIG5vdCBleGNlZWQgMjUgY20u",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Wet and dry tropical ",
        "option2" : " Rainy tropical",
        "option3" : " Semi-arid tropical ",
        "option4" : " Temperate marine"
      }
    },
    {
      "index" : 4,
      "question" : "Willy Willy is: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ=",
      "description" : "SXQgaXMgYSB0cm9waWNhbCBjeWNsb25lIG9mIG5vcnRoLXdlc3QgIEF1c3RyYWxpYS4gV2lsbHkgV2lsbHkgb3JpZ2luYXRlcyBpbiB0aGUgVGltb3Igc2VhIGFuZCBjYXVzZXMgcmFpbmZhbGwgaW4gZGlmZmVyZW50IHBhcnRzIG9mIEF1c3RyYWxpYS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " a type of tree grown in temperate regions",
        "option2" : " a wind that blows in a desert",
        "option3" : " a tropical cyclone of the north-west Australia",
        "option4" : " a kind of common fish found near Laccadives Islands"
      }
    },
    {
      "index" : 5,
      "question" : "Which one of the following is the continent with the highestmean elevation in the world? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU=",
      "description" : "QW50YXJjdGljYSBpcyB0aGUgaGlnaGVzdCBjb250aW5lbnQgb24gdGhlIHBsYW5ldCB3aXRoIGFuIGF2ZXJhZ2UgZWxldmF0aW9uIG9mIDcsNTQ1IGZlZXQgYWJvdmUgc2VhIGxldmVsLiBUaGUgZWxldmF0aW9uIG9mIEFudGFyY3RpY2EgYXQgdGhlIHNvdXRoIHBvbGUgaXMgOSwzMDAgZmVldC4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Antarctica ",
        "option2" : " North America",
        "option3" : " Asia ",
        "option4" : " South America"
      }
    },
    {
      "index" : 6,
      "question" : "Which one of the following layers of the atmosphere isresponsible for the deflection of radio waves? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY=",
      "description" : "SW9ub3NwaGVyZSBpcyB0aGUgdG9wIGxheWVyIG9mIHRoZSBhdG1vc3BoZXJlLiBSYWRpbyB3YXZlcyBhcmUgZGVmbGVjdGVkIGluIHRoZSBpb25vc3BoZXJlIG9mIHRoZSBhdG1vc3BoZXJlLiBJb25vc3BoZXJlIGlzIGNvbXBvc2VkIG9mIEQsIEUgYW5kIEYgbGF5ZXJzLiBEIGxheWVyICg2MCBrbSBmcm9tIGVhcnRoKSBpcyBnb29kIGF0IGFic29yYmluZyBBTSByYWRpbyB3YXZlcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Troposphere ",
        "option2" : " Stratosphere",
        "option3" : " Mesosphere ",
        "option4" : " Ionosphere"
      }
    },
    {
      "index" : 7,
      "question" : "Given below are two statements one labelled as  Assertion(A) and the other labelled as Reason (R). Assertion (A) : Areas near the equator receive rainfallthroughout the year.Reason (R) : High temperatures and high humidity causeconvectional rain in most afternoons near the equator.In the context of the above two statements, which one ofthe following is correct?",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc=",
      "description" : "VGhlIGFzc2VydGlvbiBpcyBjb3JyZWN0IGFuZCByZWFzb24gY29ycmVjdGx5IGV4cGxhaW5zIHRoZSBhc3NlcnRpb24gYmVjYXVzZSBkdWUgdG8gaGlnaCB0ZW1wZXJhdHVyZSB0aGUgYXRtb3NwaGVyaWMgYWlyIGdldHMgaGVhdGVkIGFuZCByaXNlcyB1cC4gSXQgY29vbHMgZG93biBhbmQgcHJlY2lwaXRhdGVzIHdoaWxlIHRoZSBjb29sIGFpciBkZXNjZW5kcyBkb3duIHRvIHRha2UgdGhlIHBsYWNlIG9mIHRoZSB2YWNjdW0u",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 8,
      "question" : "Given below are two statements, one labelled as Assertion(A) and the other labelled as Reason (R) : Assertion (A) : Mangroves are very specialised foresteco-systems of tropical and sub-tropical regions borderingcertain sea coasts.Reason (R) : They stabilise the shoreline and act as bulwarkagainst encroachments by the sea.In the context of the above two statements, which one ofthe following is correct?",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDg=",
      "description" : "Qm90aCB0aGUgc3RhdGVtZW50IGFyZSBjb3JyZWN0IGFuZCByZWFzb24gaXMgY29ycmVjdGx5IGV4cGxhaW5lZC4gTWFuZ3JvdmVzIGFyZSBmb3VuZCBpbiB0aGUgYm9yZGVyaW5nIHJlZ2lvbiBvZiB0cm9waWNhbCBhbmQgc3ViLXRyb3BpY2FsIHNlYSBjb2FzdC4gTWFuZ3JvdmVzIHN0YWJpbGlzZSB0aGUgc2hvcmVsaW5lIGFuZCBhY3QgYXMgYnVsd2FyayBhZ2FpbnN0IHNlYSBlcm9zaW9uIHdoaWNoIG1ha2UgaXQgYSBzcGVjaWFsaXNlZCBmb3Jlc3QgZWNvc3lzdGVtLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and  R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 9,
      "question" : "Diamond ring is a phenomenon observed: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDk=",
      "description" : "RGlhbW9uZCByaW5nIGlzIG9ic2VydmVkIGR1cmluZyBzb2xhciBlY2xpcHNlLCBvbmx5IGFsb25nIHRoZSBwZXJpcGhlcmFsIHJlZ2lvbnMgb2YgdGhlIHRvdGFsaXR5IHRyYWlsLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " at the start of a total solar eclipse",
        "option2" : " at the end of a total solar eclipse",
        "option3" : " only along the peripheral regions of the totality trail",
        "option4" : " only in the central regions of the totality trail"
      }
    },
    {
      "index" : 10,
      "question" : "Which one of the following factors is responsible for thechange in the regular direction of the ocean currents in theIndian Ocean? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEw",
      "description" : "RHVlIHRvIHRoZSBtb25zb29uIGRyaWZ0IG9mIEluZGlhbiBvY2VhbiwgaXRzIHJlZ3VsYXIgZGlyZWN0aW9uIG9mIHRoZSBvY2VhbiBjdXJyZW50cyBjaGFuZ2VzIHR3aWNlIGFuIHllYXIu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Indian Ocean is half an ocean",
        "option2" : " Indian Ocean has monsoon drift",
        "option3" : " Indian Ocean is a land-locked ocean",
        "option4" : " Indian Ocean has greater variation in salinity"
      }
    },
    {
      "index" : 11,
      "question" : "Daily weather map showing isobars is an example of: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEx",
      "description" : "RGFpbHkgd2hlYXRoZXIgbWFwIHNob3dpbmcgaXNvYmFycyBpcyBhbiBleGFtcGxlIG9mIGlzb3BsZXRoIG1hcC4gSXNvcGxldGggbWFwIHNob3dzIGFuIGltYWdpbmFyeSAgc3VyZmFjZSBieSBtZWFucyBvZiBsaW5lcyBqb2luaW5nIHBvaW50cyBvZiBlcXVhbCB2YWx1ZXMu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Choropleth map ",
        "option2" : " Isopleth map",
        "option3" : " Chorochromatic map ",
        "option4" : " Choroschematic map"
      }
    },
    {
      "index" : 12,
      "question" : "The group of small pieces of rock revolving round the sunbetween the orbits of Mars and Jupiter are called:(a) meteors (b) comets                      ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEy",
      "description" : "VGhlIGFzdGVyb2lkcyBhcmUgZ3JvdXAgb2Ygc21hbGwgcGllY2VzIG9mIHJvY2sgcmV2b2x2aW5nIHJvdW5kIHRoZSBzdW4gYmV0d2VlbiB0aGUgb3JiaXQgb2YgTWFycyBhbmQgSnVwaXRlci4gVGhleSBhcmUgYXBwcm94aW1hdGVseSA0MCwwMDAgaW4gbnVtYmVyLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 06.30 hrs ",
        "option2" : " 05.30 hrs",
        "option3" : " meteorites ",
        "option4" : " asterois 13. If the earth's direction of rotation is reversed, what should be the IST when it is noon at the International Date Line?"
      }
    },
    {
      "index" : 14,
      "question" : "Which one of the following stars is nearest to the Earth?   ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE0",
      "description" : "U3VuIGlzIHRoZSBzdGFyIG5lYXJlc3QgdG8gdGhlIGVhcnRoLiBJdCBpcyAxNTAgbWlsbGlvbiBraWxvbWV0ZXIgYXdheSBmcm9tIGVhcnRoLiBTdW4gaGFzIHRlbXBlcmF0dXJlcyBvZiBvdmVyIDE1IG1pbGxpb24gwrpDLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Polaris ",
        "option2" : " Alpha Centauri",
        "option3" : " Sun ",
        "option4" : " Sirius"
      }
    },
    {
      "index" : 15,
      "question" : "Which one of the following conditions is most relevant forthe presence of life on Mars? ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE1",
      "description" : "TWFycyBpcyB0aGUgb25seSBwbGFuZXQgd2l0aCBzaW1pbGFyIGRheSB0aW1lIHRlbXBlcmF0dXJlcyBhbmQgYW4gYXRtb3NwaGVyZSBzaW1pbGFyIHRvIGVhcnRoLiBUaGUgbW9zdCByZWxldmFudCBjb25kaXRpb24gZm9yIHByZXNlbmNlIG9mIGxpZmUgb24gTWFycyBpcyBvY2N1cnJlbmNlIG9mIGljZSBjYXBzIGFuZCBmcm96ZW4gd2F0ZXIu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Atmospheric composition",
        "option2" : " Thermal conditions",
        "option3" : " Occurrence of ice caps and frozen water",
        "option4" : " Occurrence of ozone"
      }
    },
    {
      "index" : 16,
      "question" : "Consider the map given  below: World climate typesOf the four shaded areas in the map, which is characterisedby hot dry summers, mild and moist winters and seasonalreversal of winds.",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE2",
      "description" : "SW4gdGhlIGdpdmVuIHdvcmxkIG1hcCAnMScgcmVmZXJzIHRoZSBob3QsIGRyeSBzdW1tZXJzLCBtaWxkIGFuZCBtb2lzdCB3aW50ZXIgaW4gQ2FsaWZvcm5pYSAoVS5TLkEpLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 2 ",
        "option3" : " 3 ",
        "option4" : " 4"
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding asteroids:1. Asteroids are rocky debris of varying size orbiting thesun2. Most of the asteroids are small but some have diameteras large and 1000 km3. The orbit of asteroids lies between the orbits of Jupiterand SaturnOf these statements:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE3",
      "description" : "VGhlIGFzdGVyb2lkcyBhcmUgZ3JvdXAgb2Ygc21hbGwgcGllY2VzIG9mIHJvY2t5IGRlYnJpcyBvZiBkaWZmZXJlbnQgc2l6ZXMuIFNvbWUgYXN0ZXJvaWRzIGFyZSBzbWFsbCBhbmQgc29tZSBhc3Rlcm9pZHMgZXZlbiBoYXZlIGRpYW1ldGVyIDEwMDAga20uIFRoZSBhc3Rlcm9pZHMgcmV2b2x2ZSBiZXR3ZWVuIE1hcnMgYW5kIEp1cGl0ZXIu",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 are correct ",
        "option2" : " 2 and 3 are correct",
        "option3" : " 1 and 2 are correct ",
        "option4" : " 1 an 3 are correct"
      }
    },
    {
      "index" : 18,
      "question" : "Match the rivers labelled A, B, C and D on the given mapwith their names given in the list and select the correct answerusing the codes given below the lists: A BCD1. St. Lawrence2. Orinoco 3. Mackenzie4. Amazon5. Yukon List-I List-IICodes:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE4",
      "description" : "SW4gdGhlIGdpdmVuIGRpYWdyYW0gb2YgTm9ydGggQW1lcmljYSBhbmQgU291dGggQW1lcmljYS4gJ2EnIG1hcmtlZCByaXZlciBpcyBZdWtvbiAnYicgbWFya2VkIHJpdmVyIGlzIE1hY2tlbnppZSAnYycgbWFya2VkIHJpdmVyIGlzIFN0LiBMYXdyZW5jZSAnZCcgbWFya2VkIHJpdmVyIGlzIE9yaW5vY28u",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-4; B-3; C-2; D-1 ",
        "option2" : " A-5; B-3; C-1; D-2",
        "option3" : " A-5; B-4; C-1; D-3 ",
        "option4" : " A-3; B-1; C-4; D-2"
      }
    },
    {
      "index" : 19,
      "question" : "The correct sequence of different layers of the atmospherefrom the surface of the Earth upwards is: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE5",
      "description" : "VGhlIGNvcnJlY3Qgc2VxdWVuY2Ugb2YgZGlmZmVyZW50IGxheWVycyBvZiBhdG1vc3BoZXJlIGZyb20gdGhlIHN1cmZhY2Ugb2YgZWFydGggaXMgVHJvcG9zcGhlcmUsIFN0cmF0b3NwaGVyZSwgTWVzb3NwaGVyZSBhbmQgSW9ub3NwaGVyZS4gVHJvcG9zcGhlcmUgZXh0ZW5kcyB1cHRvIDgga20gZnJvbSBlYXJ0aCBzdXJmYWNlLCBidXQgYXQgZXF1YXRvciBpdCBpcyAxNi0xOCBrbS4gU3RyYXRvc3BoZXJlIGV4dGVuZHMgYWJvdmUgVHJvcG9zcGhlcmUgMTgtNTAga20uIE1lc29zcGhlcmUgZXh0ZW5kcyB1cCB0byA4MCBrbSBhbmQgYWJvdmUgTWVzb3NwaGVyZSBJb25vc3BoZXJlIGlzIHByZXNlbnQsIHdoaWNoIGV4dGVuZHMgdXAgdG8gNDAwIGttLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Troposphere, Stratosphere, Ionosphere, Mesosphere",
        "option2" : " Stratosphere, Troposphere, Ionosphere, Mesosphere",
        "option3" : " Troposphere, Stratosphere, Mesosphere, Ionosphere",
        "option4" : " Stratosphere, Troposphere, Mesosphere, Ionosphere"
      }
    },
    {
      "index" : 20,
      "question" : "Estuaries possess distinct blooms of excessive growth of apigmented dinoflagellates. These blooms are called",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIw",
      "description" : "UmVkIHRpZGVzIGFyZSBhIHNwZWNpYWwgdHlwZSBvZiBibG9vbXMsIHdoaWNoIGFyZSBmb3VuZCBhdCB0aGUgZXN0dWFyaWVzLiBUaGVzZSBibG9vbXMgYXJlIHBpZ21lbnRlZCBkaW5vZmxhZ2VsbGF0ZXMuIFRoZXNlIHNpbmdsZSBjZWxsZWQgb3JnYW5pc21zIGFyZSBhYmxlIHRvIHN3aW0gc2hvcnQgZGlzdGFuY2VzLiBXaGVuIHRoZSBhbGdhZSBpcyBwcmVzZW50IGluIGhpZ2ggY29uY2VudHJhdGlvbiwgdGhlIHdhdGVyIGFwcGVhcnMgcHVycGxlIG9yIHBpbmsgaW4gY29sb3VyLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " red tides ",
        "option2" : " sea tides",
        "option3" : " black tides ",
        "option4" : " sea flowers"
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following climatic conditions (northernhemisphere) :       Temp. Rainfall       °C cm. .9 4.7 .4 5.7 .3 8.2 .4 9.2 .0 9.2 .3 17.7 .8 14.5 .8 14.0 .3 12.7 .3 7.0 .2 5.0 .7 3.5These are most likely to be found in the natural regions of:",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIx",
      "description" : "VGhlIGNsaW1hdGljIGNvbmRpdGlvbnMsIHdoaWNoIGFyZSBnaXZlbiBpbiB0aGUgdGFibGUgZGVub3RlcyB0aGUgY2xpbWF0aWMgY29uZGl0aW9uIG9mIENoaW5hIHR5cGUgY2xpbWF0ZS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " China type ",
        "option2" : " equatorial type",
        "option3" : " hot desert type ",
        "option4" : " monsoon type"
      }
    },
    {
      "index" : 22,
      "question" : "Match List-I with List-II and select the correct answer byusing the codes given below the lists:                       List-I List-II(Special characteristic) (Name of planet)A. Smallest planet 1. Mercuryof the solar systemB. Largest planet of 2. Venusthe solar systemC. Planet second from the 3. JupiterSun in the solar systemD. Planet nearest to the Sun 4. Pluto5. SaturnCodes :",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIy",
      "description" : "QS4gIFRoZSBzbWFsbGVzdCBwbGFuZXQgb2YgdGhlIHNvbGFyIHN5c3RlbSBpcy1QbHV0byBCLiBUaGUgbGFyZ2VzdCBwbGFuZXQgb2YgdGhlIHNvbGFyIHN5c3RlbSBpcy1KdXBpdGVyIEMuIFRoZSBwbGFuZXQgc2Vjb25kIGZyb20gdGhlIFN1biBpbiB0aGUgc29sYXIgc3lzdGVtIGlzLVZlbnVzIEQuIFBsYW5ldCBuZWFyZXN0IHRvIHRoZSBTdW4gaXMgLSBNZXJjdXJ5Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-2; B-3; C-5; D-1 ",
        "option2" : " A-3; B-5; C-1; D-2",
        "option3" : " A-4; B-1; C-2; D-3 ",
        "option4" : " A-4; B-3; C-2; D-1"
      }
    },
    {
      "index" : 23,
      "question" : "Physical regions marked as 1, 2, 3, and 4 on the given mapare respectively: 1234",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIz",
      "description" : "SW4gdGhlIGdpdmVuIGZpZ3VyZSA6ICgtKUFuZGVzIGlzIG1hcmtlZCBhcyAnMScsIHdoaWNoIGlzIGxvY2F0ZWQgYXQgdGhlIHdlc3Rlcm4gY29hc3Qgb2YgU291dGggQW1lcmljYS4gKC0pQnJhemlsaWFuIHNoaWVsZCBpcyBtYXJrZWQgYXMgJzInLCB0aGlzIGFyZWEgaXMgbG9jYXRlZCBhdCB0aGUgZWFzdGVybiBwYXJ0IG9mIFNvdXRoIEFtZXJpY2EuIFRoZSBzaGllbGQgZXh0ZW5kcyBvdmVyIDguNSBtaWxsaW9uIHNxdWFyZS4gKC0pR3V5YW5hIGhpZ2hsYW5kIGlzIG1hcmtlZCBhcyAnMycgR3V5YW5hIGhpZ2hsYW5kIGlzIGEgcGxhdGVhdSBhbmQgbG93IG1vdW50YWluIHJlZ2lvbiBvZiBTb3V0aCBBbWVyaWNhIGxvY2F0ZWQgbm9ydGggb2YgQW1hem9uIHJpdmVyIGFuZCBTb3V0aCBvZiBPcmlub2NvIHJpdmVyLiAoLSlBbWF6b24gYmFzaW4gaXMgbWFya2VkIGFzICc0JywgaXQgaXMgdGhlIHRyb3BpY2FsIHJhaW4gZm9yZXN0IGluIHRoZSB3b3JsZC4gQW1hem9uIHJpdmVyIGRyYWlucyBtb3JlIHRoYW4gaGFsZiBvZiBCcmF6aWwsIHBhcnQgb2YgQm9saXZpYSwgUGVydSBhbmQgRWN1YWRvci4gSElOVFMgJiBTT0xVVElPTlMgRSBCIEQgXzggMzQgMiBQaHlzaWNhbCBHZW9ncmFwaHkgIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Andes, Brazilian Shield, Guyana Highlands and Amazon Basin",
        "option2" : " Andes, Guyana Highlands, Brazilian Shield and Amazon Basin",
        "option3" : " Amazon Basin, Guyana Highlands, Brazilians Shield and Andes",
        "option4" : " Guyana Highlands, Brazilian Shield Andes and Amazon"
      }
    },
    {
      "index" : 24,
      "question" : "Which one of the following types of coal contains a higherpercentage of carbon than the rest? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI0",
      "description" : "QW50aHJhY2l0ZSBpcyBhIGRlbnNlLCBzaGlueSBjb2FsIHRoYXQgaGFzIGEgaGlnaCBjYXJib24gY29udGVudC4gVmVyeSBsaXR0bGUgdm9sYXRpbGUgbWF0dGVyIGlzIHByZXNlbnQgaW4gaXQuIEl0IGdpdmVzIGEgY2xlYW4gZmxhbWUgd2hpbGUgYnVybmluZy4gQW50aHJhY2l0ZSBjb250YWlucyA5MSUgb2YgY2FyYm9uOyBpcyB2ZXJ5IGxpdHRsZSB2b2xhdGlsZSBhbmQgaGFzIGFsbW9zdCBzbW9rZWxlc3MgYnVybmluZy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Bituminous coal ",
        "option2" : " Lignite",
        "option3" : " Peat ",
        "option4" : " Anthracite"
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following scholars suggested the earth'sorigin from gases and dust particles? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI1",
      "description" : "Ty4gU2NobWlkdCBpbiAxOTQzIGdhdmUgSW50ZXJzdGVsbGFyIER1c3QgSHlwb3RoZXNpcyBmb3IgdGhlIG9yaWdpbiBvZiB0aGUgZWFydGggYW5kIHNvbGFyIHN5c3RlbS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " James Jeans ",
        "option2" : " H. Alfven",
        "option3" : " F. Hoyle ",
        "option4" : " O. Schmit"
      }
    },
    {
      "index" : 26,
      "question" : "In the given map, which one of the following pairs of oceancurrents are shown? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI2",
      "description" : "QmVuZ3VlbGEgaXMgYSBjb2xkIGN1cnJlbnQgZmxvd3MgZnJvbSBzb3V0aCB0byBub3J0aCBhbG9uZyB0aGUgd2VzdCBjb2FzdCBvZiBBZnJpY2EuIEd1aW5lYSBjdXJyZW50IGlzIGEgd2FybSBjdXJyZW50IGZsb3dpbmcgZWFzdCBvZiBHdWluZWEgYWxvbmcgdGhlIHdlc3QgY29hc3Qgb2YgQWZyaWNhLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Benguela and Falkland ",
        "option2" : " Canary and Humoldt",
        "option3" : " Agulhas and Guinea ",
        "option4" : " Benguela an Guinea"
      }
    },
    {
      "index" : 27,
      "question" : "Which one of the areas marked as A, B, C and D in the givenfigure of the cyclone, witnesses heavy torrential shortduration rainfall accompanied by thunderstorms?   ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI3",
      "description" : "SW4gdGhlIGdpdmVuIGZpZ3VyZSAnQicgbGllcyBiZXR3ZWVuIHR3byBjeWNsb25lIHpvbmUgJ0EnIGFuZCAnRCcuIEF0IHRoZSAnQicgbWFya2VkIHJlZ2lvbiByYWluZmFsbCB3b3VsZCBiZSBhY2NvbXBhbmllZCBieSB0aHVuZGVyIHN0b3Jtcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A ",
        "option2" : " B ",
        "option3" : " C ",
        "option4" : " D"
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following temperature and rainfall data:    Month Temperature (ºC) Rainfall (cm)January 6.7 14.0February 6.7 13.2March 7.2 11.4April 8.9  9.4May11.1 8.1June 13.9  8.1July 15.0 9.6August 15.0  12.2September 13.9 10.4October 11.1 14.4November 8.9 14.0December 7.8 16.8The climate to which this data pertains is :",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI4",
      "description" : "VGhlIGdpdmVuIGRhdGEgc2hvd3MgdGhlIGNsaW1hdGljIGNvbmRpdGlvbiBvZiBNZWRpdGVycmFuZWFuIHR5cGUuIEluIHRoaXMgY2xpbWF0aWMgem9uZSB0aGUgdGVtcGVyYXR1cmUgdmFyaWVzIGZyb20gNyAtIDE1wrBDIGFuZCByYWluZmFsbCB2YXJpZXMgZnJvbSA2IC0gMTYgY20u",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " St. Lawrence type ",
        "option2" : " China type",
        "option3" : " West European type ",
        "option4" : " Meiterranean type"
      }
    },
    {
      "index" : 29,
      "question" : "At which one of the following positions shown in thediagram will the height of the ocean tide be maximum?SunEarth's OrbitMoon's OrbitM3M2M1M4E            ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI5",
      "description" : "QXQgJ000JyBwb3NpdGlvbiBvZiB0aGUgZGlhZ3JhbSB0aGUgaGVpZ2h0IG9mIHRoZSB0aWRlIGlzIGF0IG1heGltdW0sIGJlY2F1c2UgaW4gdGhpcyBwb3NpdGlvbiBlYXJ0aCwgbW9vbiBhbmQgc3VuIGxpZXMgaW4gYSBzdHJhaWdodCBsaW5lLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Ml ",
        "option2" : " M2 ",
        "option3" : " M3 ",
        "option4" : " M4"
      }
    },
    {
      "index" : 30,
      "question" : "Match List-I with List-II and select the correct answer usingthe codes given below the lists: List-I (Timber) List-II (Country)A. Cedar 1. MyanmarB. Douglas Fir 2. CanadaC. Mahogany 3. MexicoD. Teak 4. HondurasCodes:",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMw",
      "description" : "KC0pQ2VkYXItQ2FuYWRhICgtKURvdWdsYXMgRmlyLU1leGljbyAoLSlNYWhvZ2FueS1Ib25kdXJhcyAoLSlUZWFrLU15YW5tYXI=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A - 3; B- 2; C- 1; D-4 ",
        "option2" : " A - 3; B- 2; C- 4; D-1",
        "option3" : " A - 2; B- 3; C- 4; D-1 ",
        "option4" : " A - 2; B- 3; C- 1; D-4"
      }
    },
    {
      "index" : 31,
      "question" : "Along which one of the following meridians did Indiaexperience the first light of the sunrise of the new millennium?",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMx",
      "description" : "VGhlIGZpcnN0IGxpZ2h0IG9mIHRoZSBzdW5yaXNlIG9mIG5ldyBtaWxsZW5pdW0gaW4gSW5kaWEgZXhwZXJpZW5jZWQgYXQgS2F0aGFsIGlzbGFuZCBvZiBBbmRhbWFuIGFuZCBOaWNvYmFyLCB3aGljaCBpcyBsb2NhdGVkIGF0IDkywrAzMCBFIG1lcmlkaWFuLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 2°30' W ",
        "option2" : " 82°30' E",
        "option3" : " 92°30' W ",
        "option4" : " 92°30' E"
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements: 1. Tides are of great help in navigation and fishing.2. High tide enables big ships to enter or leave the harboursafely3. Tide prevents siltation in the harbours4. Kandla and Diamond Harbour are tidal portsWhich of these statements are correct?",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMy",
      "description" : "QWxsIHRoZSBnaXZlbiBzdGF0ZW1lbnRzIGFyZSB0cnVlLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 4 ",
        "option2" : " 2, 3 and 4",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements about the 'RoaringForties': 1. They blow uninterrupted in the northern and SouthernHemispheres2. They blow with great strength and constancy3. Their direction is generally from north-west to east inthe Southern Hemisphere4. Overcast skies, rain and raw weather are generallyassociated with themWhich of these statements are correct?",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMz",
      "description" : "VGhlIHdlc3RlcmxpZXMgaW4gdGhlIHNvdXRoZXJuIGhlbWlzcGhlcmUgaXMgY2FsbGVkIGFzIHJvYXJpbmcgZm9ydGllczsgbGllcyBiZXR3ZWVuIDQwwrBTIHRvIDUwwrBTIGFuZCBpcyBhIHBlcm1hbmVudCB3aW5kLiBJdCBpcyBzbG93IG92ZXIgbGFuZG1hc3Mu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2, 3 and 4",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 1, 2 an 4"
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following weather conditions is indicatedby a sudden fall in barometer reading? ",
      "questionId" : "WzIwMTFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM0",
      "description" : "SW4gc3Rvcm15IHdlYXRoZXIgY29uZGl0aW9uIHRoZSBwcmVzc3VyZSBvZiBhdG1vc3BoZXJlIHZhcmllcywgd2hpY2ggY2F1c2VzIHN1ZGRlbiBmYWxsIGluIGJhcm9tZXRlciByZWFkaW5nLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Stormy ",
        "option2" : " Calm weather",
        "option3" : " Cold and dry weather ",
        "option4" : " Hot an sunny weather"
      }
    },
    {
      "index" : 35,
      "question" : "Who amongst the following was the first to state that theearth was spherical ? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM1",
      "description" : "QXJpc3RvdGxlIGluIDM0MCBCLkMgZmlyc3Qgc3RhdGVkIHRoYXQgdGhlIGVhcnRoIHdhcyBzcGhlcmljYWwgaW4gaGlzIGJvb2sgJ09uIHRoZSBIZWF2ZW4nLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Aristotle ",
        "option2" : " Copernicus",
        "option3" : " Ptolemy ",
        "option4" : " Strabo"
      }
    },
    {
      "index" : 36,
      "question" : "If the stars are seen to rise perpendicular to the horizon byan observer, he is located on the: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM2",
      "description" : "SWYgdGhlIHN0YXJzIGFyZSBzZWVuIHRvIHJpc2UgcGVycGVuZGljdWxhciB0byB0aGUgaG9yaXpvbiBieSBhbiBvYnNlcnZlciB0aGVuIHRoZSBvYnNlcnZlciBpcyBhdCB0aGUgZXF1YXRvciBiZWNhdXNlIGNlbGVzdGljYWwgZXF1YXRvciBpcyBhbiBpbWFnaW5hcnkgY2lyY2xlIGFyb3VuZCB0aGUgc2t5IGRpcmVjdGx5IGFib3ZlIHRoZSBlYXJ0aCdzIGVxdWF0b3IuIEl0IGlzIGFsd2F5cyA5MMK6IGZyb20gdGhlIHBvbGUuIEFsbCB0aGUgc3RhcnMgcm90YXRlIGluIGEgcGF0aCB0aGF0IGlzIHBhcmFsbGVsIHRvIHRoZSBjZWxlc3RpY2FsIGVxdWF0b3Iu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Equator ",
        "option2" : " Tropic of Cancer",
        "option3" : " South Pole ",
        "option4" : " North Pole"
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements made about sedimentaryrocks: 1. Sedimentary rocks are formed at earth's surface by thehydrological system2. Formation of sedimentary rocks involves theweathering of preexisting rocks3. Sedimentary rocks contain fossils4. Sedimentary rocks typically occur in layersWhich of these statements are correct?",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM3",
      "description" : "QWxsIHRoZSBzdGF0ZW1lbnRzIGFyZSB0cnVlIGFib3V0IHRoZSBzZWRpbWVudGFyeSByb2NrLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 4",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 38,
      "question" : "Volcanic eruptions do not occur in : ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM4",
      "description" : "VGhlIGJhc2FsdGljICByb2NrIGZvdW5kIGluIEJhbHRpYyBzZWEgaXMgdHJhbnNwb3J0ZWQgYnkgZ2xhY2llci4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Baltic Sea ",
        "option2" : " Black Sea",
        "option3" : " Caribbean Sea ",
        "option4" : " Caspian Sea"
      }
    },
    {
      "index" : 39,
      "question" : "Quartzite is metamorphosed from: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM5",
      "description" : "UXVhcnR6aXRlIGlzIGEgbWV0YW1vcnBob3NlZCBmb3JtIG9mICBzYW5kc3RvbmUu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " limestone ",
        "option2" : " osidian",
        "option3" : " sandstone ",
        "option4" : " shale"
      }
    },
    {
      "index" : 40,
      "question" : "Identify the correct order of the process of soil-erosion fromthe following: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQw",
      "description" : "VGhlIGNvcnJlY3Qgb3JkZXIgb2Ygc29pbCBlcm9zaW9uIHByb2Nlc3MgaXMgc3BsYXNoIGVyb3Npb24sIHNoZWV0IGVyb3Npb24sIHJpbGwgZXJvc2lvbiBhbmQgZ3VsbHkgZXJvc2lvbi4gU3BsYXNoIG9jY3VycyB3aGVuIHRoZSByYWluZHJvcCBoaXRzIHRoZSBzdXJmYWNlOyBleHBsb3NpdmUgaW1wYWN0IHNvaWwgaW50byBpbmRpdmlkdWFsIHBhcnRpY2xlcy4gU2hlZXQgZXJvc2lvbiBpcyB0aGUgZGV0YWNobWVudCBvZiBzb2lsIHBhcnRpY2xlcyBieSByYWluIGRyb3AgYW5kIHRoZWlyIHJlbW92YWwgZG93biBzbG9wZSBieSB3YXRlciBmbG93aW5nIG92ZXJsYW5kIGFzIGEgc2hlZXQgaW4gZGVmaW5pdGUgY2hhbm5lbHMuIFJpbGwgZXJvc2lvbiByZWZlcnMgdG8gdGhlIGRldmVsb3BtZW50IG9mIHNtYWxsIGVwaGVtZXJhbCBjb25jZW50cmF0ZWQgZmxvdyBwYXRocyB3aGljaCBmdW5jdGlvbiBhcyBib3RoIHNlZGltZW50YXJ5IHNvdXJjZSBhbmQgc2VkaW1lbnQgZGVsaXZlcnkgc3lzdGVtcyBmb3IgZXJvc2lvbiBvbiBoaWxsIHNsb3Blcy4gU2hlZXQgZXJvc2lvbiByZW1vdmVzIHRoZSB0aGlzIHRvcCBsYXllciBieSByYWluZHJvcCBraWxsIG9yIG9yaW9uIG9jY3VycyBpbiBsaW5lcyB3aGljaCBhcmUgbGVzcyB0aGFuIDMwIGNtIGRlZXAgd2hlbiB0aGVzZSByaWxscyBhcmUgZGVlcGVyIHRoYW4gMzAgZm9ybWluZyBjaGFubmVscyBhcmUgY2FsbGVkIGFzIGd1bGx5IGVyb3Npb24uIEd1bGx5IGVyb3Npb24gb2NjdXJzIHdoZW4gd2F0ZXIgZmxvd3MgaW4gbmFycm93IGNoYW5uZWxzIGFmdGVyIGhlYXZ5IHJhaW4gYW5kIG1lbHRpbmcgc25vdy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Splash erosion, Sheet erosion, Rill erosion, Gully erosion",
        "option2" : " Sheet erosion, Splash erosion, Gully erosion, Rill erosion",
        "option3" : " Rill erosion, Gully erosion, Sheet erosion, Splash erosion",
        "option4" : " Gully erosion, Rill erosion, Sheet erosion, Splash"
      }
    },
    {
      "index" : 41,
      "question" : "Temperature and rainfall of a meteorological station are givenbelow: Temperature (0°C) Rainfall (cm) .4 12.2 .6 9.1 .7 7.9 .2 2.5 .3 1.0 .9 0.3 .9 - .4 - .6 0.815.0 2.5 .3 6.1 .6 11.7Average temperature: 12.8°CAverage rainfall: 54.9 cm per annumIdentify the region having the above climatic patterns fromamongst the following:",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQx",
      "description" : "VGhlIHJlZ2lvbiB3aWxsIGJlIE1lZGl0ZXJyYW5lYW4gYWNjb3JkaW5nIHRvIHRoZSBjaGFyYWN0ZXJpc3RpY3MgZGVzY3IgaWJlZCBieSB0aGUgY2xpbWF0aWMgcGF0dGVybnMuIE1lZGl0ZXJyYW5lYW4gY2xpbWF0ZSBpcyBjaGFyYWN0ZXJpc2VkIGJ5IGhvdCwgZHJ5IHN1bW1lcnMgYW5kIHdhcm0sIHdldCB3aW50ZXJzLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean region",
        "option2" : " Monsoon region",
        "option3" : " Steppe region",
        "option4" : " N.W. European region"
      }
    },
    {
      "index" : 42,
      "question" : "Assertion (A) : During the neap tides. The high tide islower and the low tide is higher than usual.Reason (R) : The neap tide, unlike the spring tide, occurson the new moon instead of on the full moon.               ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQy",
      "description" : "VGhlIHN1biwgdGhlIGVhcnRoIGFuZCB0aGUgbW9vbiBjb21lIGluIHRoZSBwb3NpdGlvbiBvZiBxdWFkcmF0dXJlIChmb3JtLWEgcmlnaHQgYW5nbGUpIG9uIHNldmVudGggYW5kIGVpZ2h0aCBkYXkgb2YgZXZlcnkgZm9ydG5pZ2h0IG9mIGEgbW9udGggYW5kIHRodXMgdGhlIHRpZGUgcHJvZHVjaW5nIGZvcmNlcyBvZiB0aGUgc3VuIGFuZCB0aGUgbW9vbiB3b3JrcyBpbiBvcHBvc2l0ZSBkaXJlY3Rpb24sIGNhdXNpbmcgbG93IHRpZGUuIFRoaXMgaXMgbG93ZXIgaW4gaGVpZ2h0IHRoYW4gdGhlIG5vcm1hbCB0aWRlIGFuZCBpcyBjYWxsZWQgbmVhcCB0aWRlLiBCdXQgdGhlIHNwcmluZyB0aWRlIG9jY3VycyBkdXJpbmcgZnVsbCBtb29uIGFuZCBhcmUgY2FsbGVkIGhpZ2ggdGlkZXMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of  A",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1. In equatorial regions, the year is divided into fourmain seasons2. In Mediterranean region, summer months receivesmore rain.3. In China type climate; rainfall occurs throughout theyear4. Tropical highlands exhibit vertical zonation ofdifferent climatesWhich of these statements are correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ1",
      "description" : "MXN0IHN0YXRlbWVudCBpcyB3cm9uZzogRXF1YXRpb25hbCByZWdpb24gaGFzIG9ubHkgdHdvIHNlYXNvbnMuIDJuZCBzdGF0ZW1lbnQgOiBNZWRpdGVycmFuZWFuIGdldHMgcmFpbmZhbGwgZHVyaW5nIHdpbnRlciBzZWFzb24gaXMgYWxzbyB3cm9uZy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 1, 2 and 3",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 3 an 4"
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following ecosystems: 1. Taiga 2. Tropical Evergreen3. Tropical Deciduous 4. TundraThe correct sequence in decreasing order of the Albedovalues of these ecosystems is :",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ2",
      "description" : "QWNjb3JkaW5nIHRvIGVjb3N5c3RlbSwgdGhlIG1heGltdW0gYWxiZWRvIHdvdWxkIGJlIG9mIFR1bmRyYSwgdGhlbiBUYWlnYSwgdGhlbiBUcm9waWNhbCBEZWNpZHVvdXMgdGhlbiBUcm9waWNhbCBldmVyIGdyZWVuLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 4, 3, 2 ",
        "option2" : " 4, 1, 3, 2",
        "option3" : " 4, 1, 2, 3 ",
        "option4" : " 1, .4, 2, 3"
      }
    },
    {
      "index" : 47,
      "question" : "Assertion (A) : 60° - 65º latitudes in both the hemisphereshave a low pressure belt instead of high pressure.Reason (R) : The low pressure areas are permanent overoceans rather than on land. ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ3",
      "description" : "QSBpcyB0cnVlIGJ1dCBSIGlzIGZhbHNlLiBTdWItcG9sYXIgbG93IHByZXNzdXJlIGlzIGxvY2F0ZWQgYmV0d2VlbiA2MC02NcK6IGxhdGl0dWRlIGluIGJvdGggaGVtaXNwaGVyZS4gTG93IHByZXNzdXJlIGlzIHByb2R1Y2VkIGluIHRoaXMgYXJlYSwgYmVjYXVzZSB0aGUgc3VyZmFjZSBhaXIgc3ByZWFkcyBvdXR3YXJkIGZyb20gdGhpcyB6b25lIGR1ZSB0byByb3RhdGlvbiBvZiBlYXJ0aC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 48,
      "question" : "Assertion (A) : The surface winds spiral inwards upon thecentre of the cyclone.Reason (R) : Air descends in the centre of the cyclone.",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ4",
      "description" : "QWlyIGJlZ2lucyB0byBzbG93bHkgZGVzY2VuZCBpbiB0aGUgY2VudHJlIG9mIHRoZSBzdG9ybSwgY3JlYXRpbmcgYSByYWluLWZyZWUgYXJlYS4gVGhpcyBpcyBhIG5ld2x5IGZvcm1lZCBleWUuIE9uIGxhbmQsIHRoZSBjZW50cmUgb2YgdGhlIGV5ZSBpcywgYnkgZm9yLCB0aGUgY2FsbWVzdCBwYXJ0IG9mIHRoZSBzdG9ybS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following climatic and geographicalphenomena: 1. Condensation2. High temperature and humidity3. Orography4. Vertical windThunder cloud development is due to which of thesephenomena?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ5",
      "description" : "VGhlIHRodW5kZXIgY2xvdWRzIGRldmVsb3AgYnkgdGhlIGFib3ZlIGNsaW1hdGljIGFuZCBnZW9ncmFwaGljIHBoZW5vbWVuYS4gSGlnaCB0ZW1wZXJhdHVyZSBhbmQgaHVtaWRpdHkgY2F1c2VzIHRoZSB3aW5kIHRvIHJpc2UgdmVydGljYWxseSB1cCBhbmQgZHVlIHRvIG9yb2dyYXBoeSBhbmQgcHJlc3N1cmUgb2YgbW91bnRhaW5zIHRoZXNlIHdpbmRzIGdldCBjb25kZW5zZWQgYW5kIGZvcm0gY3VtdWxvbmltYnVzIGNsb3VkcyBvciB0aHVuZGVyIGNsb3Vkcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2, 3 and 4",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 1, 2 , 3 an 4"
      }
    },
    {
      "index" : 50,
      "question" : "For short-term climatic predictions, which one of thefollowing events, detected in the last decade, is associatedwith occasional weak monsoon rains in the Indian sub-continent? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUw",
      "description" : "RTEgTmlubyBhbmQgTGEgTmluYSBhcmUgb3Bwb3NpdGUgcGhhc2VzIG9mIHdoYXQgaXMga25vd24gYXMgdGhlIEUxIE5pbm8tc291dGhlcm4gT3NjaWxsYXRpb24gKEVOU08pIGN5Y2xlLiBUaGUgRU5TTyBjeWNsZSBpcyBhIHNjaWVudGlmaWMgdGVybSB0aGF0IGRlc2NyaWJlcyB0aGUgZmx1Y3R1YXRpb25zIGluIHRlbXBlcmF0dXJlIGJldHdlZW4gdGhlIG9jZWFuIGFuZCBhdG1vc3BoZXJlIGluIHRoZSBlYXN0LWNlbnRyYWwuIEltcGFjdCBvZiBFMSAtTmlubzogLSBOb3JtYWwgb3IgSGlnaCByYWluZmFsbCBpbiBFYXN0ZXJuL0NlbnRyYWwgUGFjaWZpYy4gLSBEcm91Z2h0IG9yIFNjYW50IHJhaW5mYWxsIGluIHdlc3Rlcm4gUGFjaWZpYy9Bc2lhLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " La Nina",
        "option2" : " Movement of Jet Stream",
        "option3" : " El Nino. and Southern Oscillations",
        "option4" : " Greenhouse effect at global level"
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following is not a lagoon? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUx",
      "description" : "UGVyaXlhciBMYWtlIGlzIGZhdm91cmVkIGJ5IHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIGRhbSBhY3Jvc3MgdGhlIE11bGxvcGVyaXlhciBSaXZlci4gSXQgaXMgYW4gYXJ0aWZpY2lhbCBsYWtlIGluIHRoZSBtaWRkbGUgb2YgdGhlIHBlcml5YXIgd2lsZGxpZmUgc2FuY3R1YXJ5Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Ashtamudi lake ",
        "option2" : " Chilka lake",
        "option3" : " Periyar lake ",
        "option4" : " Pulicat lake"
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following statements is correct withreference to our solar system? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUy",
      "description" : "VGhlIGVhcnRoIGlzIHRoZSBkZW5zZXN0IG9mIGFsbCB0aGUgcGxhbmV0LiBEZW5zaXR5IG9mIEVhcnRoIGlzIDUuNTIsIFZlbnVzLTUuNTAsIE1lcmN1cnkgNS4yNywgTWFycyAtIDMuOTUsIEp1cGl0ZXIgYW5kIFNhdHVybiAtIDAuNjksIFVyYW51cyAtIDEuMjcu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The earth is the densest of all the planets in our solar system",
        "option2" : " The predominant element in the composition of earth is silicon",
        "option3" : " The sun contains 75 percent of the mass of the solar system",
        "option4" : " The diameter of the sun is 190 times that of the earth"
      }
    },
    {
      "index" : 53,
      "question" : "Assertion (A) : The amount of moisture in the atmosphereis related to latitudeReason (R) : The capacity to hold moisture in the form ofwater vapour is related to temperature. ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUz",
      "description" : "VGhlIGFtb3VudCBvZiBtb2lzdHVyZSBpbiBhdG1vc3BoZXJlIGlzIHJlbGF0ZWQgdG8gbGF0aXR1ZGUgYmVjYXVzZSB0aGUgdGVtcGVyYXR1cmUgZGVwZW5kcyB1cG9uIHRoZSBsYXRpdHVkZSBhbmQgY2FwYWNpdHkgdG8gaG9sZCBtb2lzdHVyZSBpcyByZWxhdGVkIHRvIHRlbXBlcmF0dXJlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 54,
      "question" : "Assertion (A) : Unlike temperate forests, the tropical rainforests, if cleared, can yield productive farmland that cansupport intensive agriculture for several years even withoutchemical fertilizers.Reason (R) : The primary productivity of the tropical rainforest is very high when compared to that of temperateforests. ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU0",
      "description" : "RHVlIHRvIENvbnN0YW50IHJhaW4gaW4gdHJvcGljYWwgcmFpbiBmb3Jlc3RzIHRoZSBudXRyaWVudHMgaW4gdGhlIHNvaWwgY29udGludW91c2x5IGxlYWNoZXMgb3V0LiBUbyBjb21wZW5zYXRlIGZvciB0aGUgbG9zcyB0aGUgYWRkaXRpb25hbCBtaW5lcmFscyBhbmQgZXNzZW50aWFsIGVsZW1lbnRzIGFyZSByZXF1aXJlZCB0aHJvdWdoIENoZW1pY2FsIGZlcnRpbGl6ZXJzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A.",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 55,
      "question" : "Assertion (A) : Areas lying within five to eight degreeslatitude on either side of the equator receive rainfallthroughout the year.Reason (R) : High temperatures and high humidity causeconvectional rain to fall mostly in the afternoons near theequator. ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU1",
      "description" : "VGhlIGhpZ2hlc3QgcmFpbmZhbGwgdG90YWxzIG9jY3VyIG5lYXIgdGhlIGVxdWF0b3IgaW4gdGhlIHRyb3BpY3MsIHdoZXJlIHRoZSBzdHJvbmcgaGVhdGluZyBieSB0aGUgc3VuIGNyZWF0ZXMgc2lnbmlmaWNhbnQgdmVydGljYWwgdXBsaWZ0cyBvZiBhaXIgYW5kIHRoZSBmb3JtYXRpb24gb2YgcHJvbG9uZ2VkIGhlYXZ5IHNob3dlYXMgYW5kIGZyZXF1ZW50IHRodW5kZXJzdG9ybXMu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 56,
      "question" : "Which one among the following covers the highestpercentage of forest area in the world? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU2",
      "description" : "VGVtcGVyYXR1cmUgY29uaWZlcm91cyBmb3Jlc3RzIGNvdmVycyB0aGUgaGlnaGVzdCBwZXJjZW50YWdlIG9mIGZvcmVzdCBhcmVhIGluIHRoZSB3b3JsZC4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Temperate coniferous forests",
        "option2" : " Temperate deciduous forests",
        "option3" : " Tropical monsoon forests",
        "option4" : " Tropical rain forests"
      }
    },
    {
      "index" : 57,
      "question" : "Among the following which planet takes maximum time forone revolution around the Sun? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU3",
      "description" : "SnVwaXRlciB0YWtlcyBtYXhpbXVtIHRpbWUgZm9yIG9uZSByZXZvbHV0aW9uIGkuZS4sIDExIHllYXIgODYgZGF5cy4gTWFycyB0YWtlIDY4NyBkYXlzLCBWZW51cyB0YWtlcyAyNjcgZGF5cy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Earth ",
        "option2" : " Jupiter",
        "option3" : " Mars ",
        "option4" : " Venus"
      }
    },
    {
      "index" : 58,
      "question" : "Assertion (A) : Thickness of the atmosphere is maximumover the Equator.Reason (R) : High insolation and strong convection currentsoccur over the Equator. ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU4",
      "description" : "VGhlIGNpcmN1bGF0aW9uIG9mIGF0bW9zcGhlcmUgYW5kIG9jZWFucyBpcyBmdW5kYS0gbWVudGFsbHkgY2F1c2VkIGJ5IHRoZSBmYWN0IHRoYXQgdGhlIGFtb3VudCBvZiBpbmNvbWluZyBzb2xhciByYWRpYXRpb24gdmFyaWVzIGZyb20gYSBtYXhpbXVtIGF0IHRoZSBlcXVhdG9yIHRvIGEgbWluaW11bSBhdCB0aGUgcG9sZXMuIE1vcmUgcmVmbGVjdGlvbiBhbmQgYWJzb3JwdGlvbiBvZiBpbmNvbWluZyByYWRpYXRpb24gdGFrZXMgcGxhY2UgaW4gaGlnaCBsYXRpdHVkZSBiZWNhdXNlIG9mIHRoZSBncmVhdGVyIHRoaWNrbmVzcyBvZiBhdG1vc3BoZXJlIHRoYXQgbXVzdCBiZSBwZW5ldHJhdGVkLiBUaGlja25lc3Mgb2YgdGhlIGVhcnRoIGlzIG1heGltdW0gb3ZlciB0aGUgcG9sZS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 59,
      "question" : "Where is the volcanic mountain, Mount St. Helens located?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU5",
      "description" : "Vm9sY2FuaWMgbW91bnRhaW4uIFN0LiBIZWxlbiBpcyBsb2NhdGVkIGluIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYS4gNjAuIChjICkgVGhlIG1vb24gcm90YXRlcyBhYm91dCBpdHMgb3duIGF4aXMgaW4gMjcuMzIyIGRheXMuIFdoZW4gdGhlIE1vb24gZmlyc3QgZm9ybWVkLCBpdHMgcm90YXRpb25hbCBzcGVlZCBhbmQgb3JiaXQgd2VyZSB2ZXJ5IGRpZmZlcmVudCB0aGFuIHRoZXkgYXJlIG5vdy4gIE92ZXIgdGltZSwgdGhlIEVhcnRoJ3MgZ3Jhdml0YXRpb25hbCBmaWVsZCBncmFkdWFsbHkgc2xvd2VkIHRoZSBNb29uJ3Mgcm90YXRpb24gdW50aWwgdGhlIG9yYml0YWwgcGVyaW9kIGFuZCB0aGUgcm90YXRpb25hbCBzcGVlZCBzdGFiaWxpemVkLCBtYWtpbmcgb25lIHNpZGUgb2YgdGhlIG1vb24gYWx3YXlzIGZhY2UgdGhlIEVhcnRoLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Chile ",
        "option2" : " Japan",
        "option3" : " Philippines ",
        "option4" : " Unite States of America"
      }
    },
    {
      "index" : 61,
      "question" : "Assertion (A) : Existence of human life on Venus is highlyimprobable.Reason (R): Venus has extremely high level of carbon dioxidein its atmosphere. ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYx",
      "description" : "VGhlIGF0bW9zcGhlcmUgb2YgVmVudXMgaXMgY29tcG9zZWQgcHJpbWFyaWx5IG9mIGNhcmJvbiBkaW94aWRlIGFuZCBtdWNoIGRlbnNlciBhbmQgaG90dGVyIHRoYW4gdGhhdCBvZiBFYXJ0aC4gVGhlIGF0bW9zcGhlcmUgb2YgVmVudXMgc3VwcG9ydHMgb3BhcXVlIGNsb3VkcyBtYWRlIG9mIHN1bGZ1cmljICBhY2lkLCBtYWtpbmcgb3B0aWNhbCBFYXJ0aC1iYXNlZCBhbmQgb3JiaXRhbCBvYnNlcnZhdGlvbiBvZiB0aGUgc3VyZmFjZSBpbXBvc3NpYmxlLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 62,
      "question" : "Assertion (A) : Wind patterns are clockwise in the NorthernHemisphere and anti-clockwise in the Southern Hemisphere.Reason (R) : The directions of wind patterns in the Northernand the Southern Hemisphere are governed by the Corioliseffect. ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYy",
      "description" : "QSBpcyB0cnVlIGFzIHRoZSBkaXJlY3Rpb24gb2Ygd2luZCBpbiB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZSBpcyBjbG9jayB3aXNlIGFuZCBpbiBzb3V0aGVybiBoZW1pc3BoZXJlIGl0IGlzIGFudGkgY2xvY2sgd2lzZS4gVGhlIGV4cGxhbmF0aW9uIGlzIGNvcnJlY3QgYXMgdGhpcyBpcyBtYWlubHkgZHVlIHRvIGNvcmlvbGlzIGVmZmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 63,
      "question" : "Where are the Balearic Islands located? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYz",
      "description" : "VGhlIEJhbGVhcmljIElzbGFuZHMgYXJlIGFuIGFyY2hpcGVsYWdvIG9mIFNwYWluIGluIHRoZSBXZXN0ZXJuIE1lZGl0ZXJyYW5lYW4gc2VhLCBuZWFyIHRoZSBlYXN0ZXJuIGNvYXN0IG9mIHRoZSBJYmVyaWFuIHBlbmluc3VsYS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean Sea ",
        "option2" : " Black Sea",
        "option3" : " Baltic Sea ",
        "option4" : " North Sea"
      }
    },
    {
      "index" : 64,
      "question" : "Which one of the following pairs is not correctly matched?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY0",
      "description" : "TWFuYWd1YSBpcyB0aGUgY2FwaXRhbCBvZiBOaWNhcmFndWEsIG5vdCBCYWxtb3Bhbi4gQmFsbW9wYW4gaXMgdGhlIGNhcGl0YWwgY2l0eSBvZiBCYWxpemUu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Bahamas: Nassau",
        "option2" : " Costa Rica: San Jose",
        "option3" : " Nicaragua: Balmopan",
        "option4" : " Dominican Republic: Santo Domingo"
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following statements: 1. The Axis of the earth's magnetic field is inclined at 23and half to the geographic axis of the earth.2. The earth's magnetic pole in the Northern Hemisphereis located on a Peninsula in Northern Canada.3. The earth's magnetic equator passes through Thumbain South India.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY1",
      "description" : "RWFydGggbWFnbmV0aWMgZmllbGQgaXMgaW5jaGluZWQgYmV0d2VlbiAtOTDCsCB0byA5MMKwLiBJbiB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZSBpdCBwb2ludHMgZG93bndhcmRzIGFuZCB1cHdhcmQgaW4gdGhlIHNvdXRoZXJuIGhlbWlzcGhlcmUu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2 and 3",
        "option3" : " 2 only ",
        "option4" : " 3 only"
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements: 1. Total land area of earth is approximately 1475 lakh squarekilometers.2. Ratio of land area to water area of earth is approximately1 : 4.3. Maximum percentage of earth's water is in the Pacific Ocean.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY2",
      "description" : "VG90YWwgbGFuZCBhcmVhIGlzIDE0ODIyNjAwMCBrbTIgc3F1YXJlIGtpbG9tZXRlcnMuIFNvLCB0aGUgcmF0aW8gb2YgbGFuZCBhcmVhIHRvIHdhdGVyIGFyZWEgb2YgZWFydGggaXMgYXBwcm94aW1hdGVseSAxIDogMy4gVGhlIFBhY2lmaWMgT2NlYW4gaXMgdGhlIGxhcmdlc3Qgb2NlYW4sIHNvIG1heGltdW0gcGVyY2VudGFnZSBvZiBlYXJ0aCdzIHdhdGVyIGlzIHByZXNlbnQgaW4gaXQu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 and 3",
        "option3" : " 1 only ",
        "option4" : " 3 only"
      }
    },
    {
      "index" : 67,
      "question" : "In which one of the following oceans Diamantine Trench issituated? ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY3",
      "description" : "RGlhbWFudGluZSBUcmVuY2ggaXMgaXN0dWF0ZWQgaW4gc291dGgtZWFzdCBwYXJ0IG9mIEluZGlhbiBPY2Vhbi4gVGhlIGRlcHRoIG9mIERpYW1hbnRpbmUgVHJlbmNoIGlzIDgwNDcgbS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Pacific Ocean ",
        "option2" : " Atlantic Ocean",
        "option3" : " Indian Ocean ",
        "option4" : " Arctic Ocean"
      }
    },
    {
      "index" : 68,
      "question" : "Assertion (A): To orbit around the Sun the planet Marstakes lesser time than the time taken by the earth.Reason (R) : The diameter of the planet Mars is less thanthat of earth. Codes:",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY4",
      "description" : "QSBpcyBpbmNvcnJlY3QgYXMgdGhlIG1hcnMgcmV2b2x1dGlvbiByb3VuZCB0aGUgc3VuIHRha2VzIDEuODggeWVhcnMgb2YgRWFydGgncyByZXZvbHV0aW9uLiBUaGUgZGlhbWV0cmUgb2YgZWFydGggaXMgYWxtb3N0IGRvdWJsZSAgdG8gdGhlIGRpYW1ldGVyIG9mIG1hcnMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both 'A' and 'R' are individually true and 'R' is the correct explanation of 'A' .",
        "option2" : " Both 'A' and 'R' are individually true but 'R' is not the correct explanation of 'A'.",
        "option3" : " 'A' is true but 'R' is false.",
        "option4" : " 'A' is false but 'R' is true."
      }
    },
    {
      "index" : 69,
      "question" : "What is the average distance (approximate) between thesun and the earth? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY5",
      "description" : "VGhlIGFjdHVhbCBhdmVyYWdlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHN1biBhbmQgdGhlIGVhcnRoIGlzIDE1MiDDlyAxMDYga20gd2hpY2ggaXMgbmVhciB0byAxNTAgw5cgMTA2IGttLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 70 × 105 km ",
        "option2" : " 100 × 105 km",
        "option3" : " 110 × 106 km ",
        "option4" : " 150 × 106 km"
      }
    },
    {
      "index" : 70,
      "question" : "Consider the following statements: 1. Either of the two belts over the oceans at about 30° to35° N and S Latitudes is known as Horse latitude.2. Horse latitudes are low pressure belts.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcw",
      "description" : "VGhlIGhvcnNlIGxhdGl0dWRlcyBhcmUgbG9jYXRlZCBiZXR3ZWVuIGxhdGl0dWRlIDMwwrAtIDM1wrAgbm9ydGggYW5kIHNvdXRoIG9mIHRoZSBlcXVhdG9yLiBUaGUgcmVnaW9uIGxpZXMgaW4gYW4gYXJlYSB3aGVyZSB0aGVyZSBpcyBhIHJpZGdlIG9mIGhpZ2ggcHJlc3N1cmUgdGhhdCBjaXJjbGVzIHRoZSBlYXJ0aC4gVGhlIHJpZGdlIG9mIGhpZ2ggcHJlc3N1cmUgaXMgYWxzbyBjYWxsZWQgYSBzdWItdHJvcGljYWwgaGlnaC4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements: 1. Annual range of temperature is greater in the PacificOcean than that in the Atlantic Ocean.2. Annual range of temperature is greater in the NorthernHemisphere than that in the Southern Hemisphere.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcx",
      "description" : "VGhlIG1heGltdW0gYW5kIG1pbmltdW0gYW5udWFsIHRlbXBlcmF0dXJlcyBvZiBPY2VhbiB3YXRlciBhcmUgcmVjb3JkZWQgaW4gQXVndXN0IGFuZCBGZWJydWFyeSByZXNwZWN0aXZlbHkgaW4gdGhlIG5vcnRoZXJuIGhlbWlzcGhlcmUuIFRoZSBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUgaXMgaGlnaGVyIGluIHRoZSBlbmNsb3NlZCBzZWFzIHRoYW4gaW4gdGhlIG9wZW4gc2VhLiBUaGUgQXRsYW50aWMgT2NlYW4gcmVjb3JkcyByZWxhdGl2ZWx5IGhpZ2hlciBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUgdGhhbiB0aGUgUGFjaWZpYyBPY2Vhbi4gU2luY2UgdGhlIE5vcnRoZXJuIGhlbWlzcGhlcmUgaGFzIG1vcmUgbGFuZG1hc3MgYXMgY29tcGFyZWQgdG8gdGhlIFNvdXRoZXJuIGhlbWlzcGhlcmUsIHRoZSBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUgd2lsbCBiZSBncmVhdGVyIGluIG5vcnRoZXJuIGhlbWlzcGhlcmUu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements: l. Albedo of an object determines its visual brightnesswhen viewed with reflected light.2. Albedo of Mercury is much greater than the albedo ofthe Earth.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcy",
      "description" : "QWxiZWRvIGlzIHRoZSBmcmFjdGlvbiBvZiB0aGUgaW5jaWRlbnQgc3VubGlnaHQgdGhhdCBpcyByZWZsZWN0ZWQuIFdoZW4gYW4gb2JqZWN0IHJlZmxlY3RzIG1vc3Qgb2YgdGhlIGxpZ2h0IHRoYXQgaGl0cyBpdCBhbmQgbG9va3MgYnJpZ2h0IHRoZW4gaXQgaGFzIGhpZ2ggYWxiZWRvLiBBbGJlZG8gb2YgbWVyY3VyeSBpcyAwLjEgYW5kIHRoYXQgb2YgdGhlIGVhcnRoIGlzIDAuMzAuIDczLiAoYikgMCAxMCAyMCAzMCA0MCA1MCA2MCBKYXBhbiBJdGFseSBTaW5nYXBvcmUgQ3plY2ggUmVwIFJ1c3NpYSBHZXJtYW55IEZyYW5jZSBDaGluYSBCcml0YWluIE1leGljbyBCcmF6aWwgSW5kb25lc2lhIFVuaXRlZCBTdGF0ZXMgSW5kaWEgUGhpbGlwcGluZXMgUGFraXN0YW4gTmlnZXJpYSBNZWRpYW4gYWdlKiBvZiB0aGUgcG9wdWxhdGlvbiAyMDAwIDIwNTAgZm9yZWNhc3QgWWVhcnMgKiBBZ2UgYXQgd2hpY2ggNTAlIG9mIHRoZSBwb3B1bGF0aW9uICAgIGlzIG9sZGVyIGFuZCA1MCUgaXMgeW91bmdlciBTb3VyY2U6IFVOICBGb3IgSW5kaWEsIENoaW5hLCBVSyBhbmQgVVNBLCB0aGUgY29ycmVjdCBzZXF1ZW5jZSBvZiB0aGUgTWVkaWFuIGFnZSBvZiB0aGVpciBwb3B1bGF0aW9uIGlzIEluZGlhIENoaW5hIFVTQSBVSzwgPCA8",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 74,
      "question" : "In order of their distances from the Sun, which of thefollowing planets lie between Mars and Uranus?    ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc0",
      "description" : "SnVwaXRlciBhbmQgU2F0dXJuIGFyZSBsb2NhdGVkIGJldHdlZW4gTWFycyBhbmQgVXJhbnVzLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Earth and Jupiter ",
        "option2" : " Jupiter and Saturn",
        "option3" : " Saturn and Earth ",
        "option4" : " Saturn an Neptune"
      }
    },
    {
      "index" : 75,
      "question" : "Which one of the following planets has largest number ofnatural satellites or moons? ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc1",
      "description" : "SnVwaXRlciBoYXMgbWF4aW11bSBtb29ucyBhY2NvdW50aW5nIHRvIDYzIHdoZXJlYXMgU2F0dW4gaGFzIDYxLCBNYXJzIGhhcyAyIGFuZCBWZW51cyBoYXMgbm9uZS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Jupiter ",
        "option2" : " Mars",
        "option3" : " Saturn ",
        "option4" : " Venus"
      }
    },
    {
      "index" : 76,
      "question" : "In the structure of planet Earth, below the mantle, the core ismainly made up of which one of the following?        ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc2",
      "description" : "VGhlIGNvcmUgb2YgZWFydGggaXMgbWFkZSB1cCBvZiBuaWNrbGUgYW5kIGlyb24u",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Aluminium ",
        "option2" : " Chromium",
        "option3" : " Iron ",
        "option4" : " Silicon"
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements : 1. On the planet Earth, the fresh water available for useamounts to about less than 1% of the total water found.2. Of the total fresh water found on the planet Earth 95%is bound up in polar ice caps and glaciers.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc3",
      "description" : "T24gdGhlIGVhcnRoLCB0aGUgZnJlc2ggd2F0ZXIgYXZhaWxhYmxlIGZvciB1c2UgYW1vdW50cyB0byBhYm91dCBsZXNzIHRoYW4gMSUgb2YgdGhlIHRvdGFsIHdhdGVyIGFuZCBpdCdzIDY4LjclIGlzIGJvdW5kIHVwIGluIHBvbGFyIGljZSBhbmQgZ2xhY2llcnMuIEUgQiBEIF84IDM0IDIgUGh5c2ljYWwgR2VvZ3JhcGh5ICA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 78,
      "question" : "A geographic area with an altitude of 400 metres has followingcharacteristics. Month J  F  M A M  J  J  A S  O  N  DAverage maximum temp °C31 31 31 31 30 30 29 28 29 29 30 31Average minimum temp °C21 21 21 21 21 21 20 20 20 20 20 20Rainfall (mm)51 85 188 158 139 121 134 168 185 221 198 86If this geographic area were to have a natural forest, whichone of the following would it most likely be?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc4",
      "description" : "VHJvcGljYWwgcmFpbmZvcmVzdHMgYXJlIHdhcm0gYW5kIGh1bWlkLiBUaGUgdGVtcGVyYXR1cmUgcmFuZ2VzIGZyb20gMjEgdG8gMzAgZGVncmVlIGNlbHNpdXMgKDcwIHRvIDg1wrBGKSBUaGUgYXZlcmFnZSBhbm51YWwgdGVtcGVyYXR1cmUgb2YgdHJvcGljYWwgcmFpbmZvcmVzdHMgaXMgYWJvdmUgMjDCsEMuIFRoZSB0cm9waWNhbCByYWluZm9yZXN0cyByZWNlaXZlIGFubnVhbCBwcmVjaXBpdGF0aW9uIGFtb3VudHMgb2YgNjAgdG8gIDE2MCBpbmNoZXMuICgxNTIgdG8gNDA2IGNtKS4gU29tZSByYWluZm9yZXN0cyBpbiB0aGUgd29ybGQgZXhwZXJpZW5jZXMgYW5udWFsIHJhaW5mYWxsIGFtb3VudHMgb2YgYWxtb3N0IDQwMCBpbmNoZXMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Moist temperate coniferous forest",
        "option2" : " Montane subtropical forest",
        "option3" : " Temperate forest",
        "option4" : " Tropical rain forest"
      }
    },
    {
      "index" : 79,
      "question" : "A new type of El Nino called El Nino Modoki appeared inthe news. In this context, consider the following statements:1. Normal El Nino forms in the Central Pacific Oceanwhereas El Nino Modoki forms in Eastern Pacific Ocean2. Normal El Nino results in diminished hurricanes in theAtlantic Ocean but El Nino Modoki results in a greaternumber of hurricanes with greater frequency.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc5",
      "description" : "Tm9ybWFsIEVsIE5pbm8gZm9ybXMgaW4gc291dGgtZWFzdGVybiBQYWNpZmljIHdoZXJlYXMgYXMgRWwgTmlubyBNb2Rva2kgZm9ybXMgaW4gY2VudHJhbCBQYWNpZmljIGFuZCBjYXVzZXMgZ3JlYXRlciBudW1iZXIgb2YgaHVycmljYW5lcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 80,
      "question" : "Which one of the following reflects back more sunlight ascompared to other three? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgw",
      "description" : "VGhlIEFsYmVkbyBvZiBTbm93IGlzIGhpZ2hlc3Qu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Sand desert",
        "option2" : " Paddy crop",
        "option3" : " Land covered with fresh snow",
        "option4" : " Prairie land"
      }
    },
    {
      "index" : 81,
      "question" : "A geographic region has the following distinctcharacteristics: 1. Warm and dry climate2. Mild and wet winter3. Evergreen Oak treesThe above features are distinct characteristics of which oneof the following regions?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgx",
      "description" : "TWVkaXRlcnJpYW4gY2xpbWF0ZSBoYXZlIG1pbGQsIHJhaW55IHdpbnRlciBhbmQgaG90LCBkcnkgc3VtbWVycyBhbmQgRXZlcmdyZWVuLCBPYWsgdHJlZXMu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean",
        "option2" : " Eastern China",
        "option3" : " Central Asia",
        "option4" : " Atlantic coast of North America"
      }
    },
    {
      "index" : 82,
      "question" : "What causes wind to deflect toward left in the SouthernHemisphere? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgy",
      "description" : "Um90YXRpb24gb2YgdGhlIGVhcnRoIGNhdXNlcyB3aW5kIHRvIGRlZmxlY3QgdG93YXJkcyBsZWZ0IGluIHRoZSBTb3V0aGVybiBIZW1pc3BoZXJlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Temperature ",
        "option2" : " Magnetic field",
        "option3" : " Rotation of the earth ",
        "option4" : " Pressure"
      }
    },
    {
      "index" : 83,
      "question" : "If a tropical rain forest is removed, it does not regeneratequickly as compared to a tropical deciduous forest. This isbecause ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Mw==",
      "description" : "VGhlIHNvaWxzIG9mIHRyb3BpY2FsIHJhaW5mb3Jlc3QgYXJlIHJlbGF0aXZlbHkgcG9vciBpbiBudXRyaWVudHMuIER1ZSB0byB0b3JyZW50aWFsIHJhaW5zIG1vc3Qgb2YgdGhlIG51dHJpZW50cyB3YXNoZWQgb3V0IG9mIHRoZSBzb2lsIGFuZCB0aGUgc29pbHMgY29udGFpbiBsZXNzIG9yZ2FuaWMgbWF0dGVyIHRoYW4gdGhlIHRyb3BpY2FsIGRlY2lkdW91cyBmb3Jlc3RzLiBOdXRyaWVudHMgaW4gdGhlIHNvaWwgYXJlIG9mdGVuIGluIGZvcm1zIHRoYXQgYXJlIG5vdCBhY2Nlc3NpYmxlIGJ5IHBsYW50cywgdW5saWtlIHRyb3BpY2FsIGRlY2lkdW91cyBmb3Jlc3RzIHdoZXJlIG1ham9yIG51dHJpZW50cyByZW1haW4gaW4gdGhlIHNvaWwuIFRodXMgaWYgYSB0cm9waWNhbCByYWluIGZvcmVzdCBpcyByZW1vdmVkIGl0IGRvZXMgbm90IHJlZ2VuZXJhdGUgcXVpY2tseSBhcyBjb21wYXJlZCB0byBhIHRyb3BpY2FsIGRlY2lkdW91cyBmb3Jlc3Qu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " the soil of rain forest is deficient in nutrients",
        "option2" : " propagules of the trees in a rain forest have poor viability",
        "option3" : " the rain forest species are slow-growing",
        "option4" : " exotic species invade the fertile soil of rain forest."
      }
    },
    {
      "index" : 84,
      "question" : "A layer in the Earth's atmosphere called ionosphere facilitiesradio communication. Why ?1. The presence of ozone causes the reflection of radiowaves to earth.2. Radio waves have a very long wavelength.EBD_8342Physical Geography  Which of the statements given above is/are correct?(a) 1 only (b) 2 only ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4NA==",
      "description" : "U3RhdGVtZW50IDEgaXMgd3JvbmcsIGlvbm9zcGhlcmUgY29udGFpbnMgY2hhcmdlZCBwYXJ0aWNsZXMgZHVlIHRvIHdoaWNoIGVsZWN0cm9tYWduZXRpYyByYWRpbyB3YXZlcyBnZXRzIHJlZmxlY3RlZCBhbmQgY29tbXVuaWNhdGlvbiBiZWNvbWVzIHBvc3NpYmxlLiBPem9uZSBpcyBmb3VuZCBtYWlubHkgaW4gc3RyYXRvc3BoZXJlIGFuZCBpbiB0cmFjZXMgaW4gdHJvcG9zcGhlcmUuIEl0cyBtYWluIGZ1bmN0aW9uIGlzIGFic29ycHRpb24gb2YgVVYgcmF5cy4gV2hpbGUgdGhlIGlvbnMgZ2l2ZSB0aGUgaW9ub3NwaGVyZSBpdHMgbmFtZSwgaXQgaXMgdGhlIGZyZWUgZWxlY3Ryb25zIHRoYXQgZWZmZWN0IHRoZSByYWRpbyB3YXZlcyBhbmQgcmFkaW8gY29tbXVuaWNhdGlvbnMuIEFsc28gUmFkaW8gd2F2ZXMgaGF2ZSB0aGUgbG9uZ2VzdCB3YXZlIGxlbmd0aCBpbiB0aGUgRU0gc3BlY3RydW0uIDg1LiAoZCkgRUktTmlubyBMYS1OaW5hIC1FSSBOaW5vIGlzIHdhcm1pbmcgb2YgdGhlICBQYWNpZmljIE9jZWFuIGJldHdlZW4gIHNvdXRoIEFtZXJpY2EgYW5kIHRoZSAgRGF0YSBMaW5lLiBMYSBOaW5hIGV4aXN0cyB3aGVuIGNvb2xlciB0aGFuICB1c3VhbCBPY2VhbiB0ZW1wZXJhdHVyZXMgb2NjdXIgIG9uIHRoZSBlcXVhdG9yIGJldHdlZW4gc291dGggIEFtZXJpY2EgYW5kIHRoZSBEYXRhIExpbmUuIC1JdCBhY2NvbXBhbmllcyBoaWdoIGFpciAgc3VyZmFjZSBwcmVzc3VyZSBpbiB0aGUgIHdlc3Rlcm4gUGFjaWZpYy4gSXQgYWNjb21wYW5pZXMgbG93IGFpciBzdXJmYWNlICBwcmVzc3VyZSBpbiB0aGUgZWFzdGVybiBQYWNpZmljLiBFSSBOaW5vIG9jY3VycyB3aGVuICB0cm9waWNhbCBQYWNpZmljIG9jZWFuIHRyYWRlICB3aW5kcyBkaWUgb3V0IGFuZCBvY2VhbiAgdGVtcGVyYXR1cmVzIGJlY29tZSAgdW51c3VhbGx5IHdvcm0uIC1MYSBOaW5hLCB3aGljaCBvY2N1cnMgd2hlbiAgdGhlIHRyYWRlIHdpbmRzIGJsb3cgdW51c3VhbGx5ICBoYXJkIGFuZCB0aGUgc2VhIHRlbXBlcmF0dXJlICBiZWNvbWUgY29sZGVyIHRoYW4gbm9ybWFsLiBEaWZmZXJlbmNlIGJldHdlZW4gRUktTmlubyBhbmQgTGEtTmluYQ==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 85. La Nina is suspected to have caused recent floods in Australia. How is La Nina different from El Nino ? 1. La Nina is characterized by unusually cold ocean temperature in equatorial Indian Ocean whereas El Nino is characterized by unusually warm ocean temperature in the equatorial Pacific Ocean. 2. El Nino has adverse effect on south-west monsoon of India, but La Nina has no effect on monsoon climate. Which of the statements given above is/are correct?"
      }
    },
    {
      "index" : 86,
      "question" : "What is difference between asteroids and comets ?1. Asteroids are small rocky planetoids, while comets areformed of frozen gases held together by rocky andmetallic material.2. Asteroids are found mostly between the orbits ofJupiter and Mars, while comets are found mostlybetween Venus and Mercury.3. Comets show a perceptible glowing tail, while asteroidsdo not. Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Ng==",
      "description" : "Q29tZXRzIGZvdW5kIGJleW9uZCBOZXB0dXJlIGkuZS4gS3VwaWVyIGJlbHQuIEFzdGVyb2lkcyBhcmUgdGlueSBwbGFuZXRhcnkgYm9kaWVzIHJldm9sdmluZyBhcm91bmQgdGhlIHN1biBiZXR3ZWVuIHRoZSBvcmJpdHMgb2YgSnVwaXRlciBhbmQgTWFycy4gV2hpbGUgY29tZXRzIGFyZSBtb2RlIHVwIG9mIHNtYWxsIGljeSBwYXJ0aWNsZXMgYW5kIE5ldGVvcmljIGZyYWdtZW50cy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3"
      }
    },
    {
      "index" : 87,
      "question" : "Westerlies in southern hemisphere are stronger andpersistent than in northern hemisphere. Why?     1. Southern hemisphere has less landmass as comparedto northern hemisphere.2. Coriolis force is higher in southern hemisphere ascompared to northern hemisphere.Which of the statements given above is/are correct ?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Nw==",
      "description" : "VGhlIHNwZWVkIG9mIHRoZXNlIHdpbmRzIGFyZSBoaWdoZXIgYW5kIHBlcnNpc3RlbmNlIGluIHNvdXRoZXJuIGhlbWlzcGhlcmUuIFRoZSBsYW5kIG1hc3MgaW4gc291dGhlcm4gaGVtaXNwaGVyZSBpcyBsZXNzZXIgaW4gY29tcGFyaXNvbiB0byBub3J0aGVybiBoZW1pc3BoZXJlLiBBcyB0aGVzZSB3aW5kcyBjcm9zc2VzIHRoZSBsYW5kbWFzcyBpdHMgdmVsb2NpdHkgZGVjcmVhc2VzLiBUaHVzIHRoZSBlZmZlY3Qgb2Ygd2VzdGVybGllcyBpcyBsZXNzIG92ZXIgbm9ydGhlcm4gaGVtaXNwaGVyZSB0aGFuIGluIHNvdXRoZXJuIGhlbWlzcGhlcmUu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 88,
      "question" : "What could be the main reason/reasons for the formation ofAfrican and Eurasian desert belt ? 1. It is located in the sub-tropical high pressure cells.2. It is under the influence of warm ocean currents.Which of the statements given above is/are correct in thiscontext ?",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4OA==",
      "description" : "SXQgaXMgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBjb2xkIG9jZWFuIGN1cnJlbnQuIFNvIGdpdmVuIHNlY29uZCBzdGF0ZW1lbnQgaXMgd3Jvbmcu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 89,
      "question" : "The jet aircrafts fly very easily and smoothly in the lowerstratosphere. What could be the appropriate explanation ?1. There are no clouds or water vapour in the lowerstratosphere.2. There are no vertical winds in the lower stratosphere.Which of the statements given above is/are correct in thiscontext ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4OQ==",
      "description" : "SmV0IGZseSBpbiB0aGUgbG93ZXIgc3RyYXRvc2hwZXJlIHRvIGF2b2lkIHRoZSB0dXJidWxlbmNlLiBUaGVyZSBhcmUgbm8gY2xvdWRzIGFuZCB0aGUgYWlyIGlzIGRyeSB3aXRoIGxpdHRsZSB3YXRlciB2YXBvdXIuIFRoZXJlIGFyZSBubyB2ZXJ0aWNhbCB3aW5kcyBpbiB0aGUgbG93ZXIgc3RyYXRvLXNwaGVyZS4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 90,
      "question" : "Which of the following is/are cited by the scientists asevidence/evidences for the continued expansion of universe?1. Detection of microwaves in space                 2. Observation of redshift phenomenon in space3. Movement of asteroids in space4. Occurrence of supernova explosions in spaceSelect the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5MA==",
      "description" : "VGhlIGNvc21pYyBtaWNyb3dhdmUgYmFja2dyb3VuZCAoQ01CKSBpcyB0aGUgdGhlcm1hbCByYWRpYXRpb24gbGVmdCBvdmVyIGZyb20gdGhlICJCaWcgQmFuZyIuIFRoZSBDTUIgaXMgd2VsbCBleHBsYWluZWQgYXMgcmFkaWF0aW9uIGxlZnQgb3ZlciBmcm9tIGFuIGVhcmx5IHN0YWdlIGluIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgdW5pdmVyc2UgYW5kIGl0cyBkaXNjb3ZlcnkgaXMgY29uc2lkZXJlZCBhIGxhbmRtYXJrcyB0ZXN0IG9mIHRoZSBCaWcgQmFuZyBtb2RlbCBvZiB0aGUgdW5pdmVyc2UuIFJlZCBzaGlmdCBhbmQgQmx1ZXNoaWZ0IGRlc2NyaWJlcyBob3cgbGlnaHQgY2hhbmdlcyBhcyBvYmplY3RzIGluIHNwYWNlIChzdWNoIGFzIHN0YXJzIG9yIGdhbGF4aWVzKSBtb3ZlIGNsb3NlciBvciBmYXJ0aGVyIGF3YXkgZnJvbSB1cy4gVGhlIGNvbmNlcHQgaXMga2V5IHRvIGNoYXJ0aW5nIHRoZSB1bml2ZXJzZSdzIGV4cGFuc2lvbi4gOTEuIChiKSAxLiAgICBSb3RhdGlvbiBvZiB0aGUgRWFydGggMi4gICAgQWlyIHByZXNzdXJlIGFuZCB3aW5kIDMuICAgIERlbnNpdHkgb2Ygb2NlYW4gd2F0ZXIuIFJldm9sdXRpb24gaGFzIG5vIGltcGFjdCBvbiBvY2VhbiBjdXJyZW50cy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2",
        "option2" : " 2 only",
        "option3" : " 1, 3 and 4",
        "option4" : " None of the above can be cited as evidence"
      }
    },
    {
      "index" : 92,
      "question" : "Normally, the temperature decreases with the increase inheight from the Earth's surface, because               1. the atmosphere can be heated upwards only from theEarth's surface2. there is more moisture in the upper atmosphere3. the air is less dense in the upper atmosphereSelect the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Mg==",
      "description" : "QXRtb3NwaGVyZSBpcyBoZWF0ZWQgYnkgaW5mcmFyZWQgcmFkaWF0aW9uLCBNb2lzdHVyZSBpcyBtb3JlIGluIGxvd2VyIGF0bW9zcGhlcmUuIEluIHRoZSB1cHBlciBhdG1vc3BoZXJlIEFpciBpcyBsZXNzIGRlbnNlIHdoaWNoIGhvbGQgbGVzcyBoZWF0IHRodXMgdGVtcGVyYXR1cmUgaXMgbG93Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 93,
      "question" : "Which one of the following is the characteristic climate ofthe Tropical Savannah Region?                               ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Mw==",
      "description" : "U2F2YW5uYWggY292ZXJzIGFwcHJveGltYXRlbHkgMjAlIG9mIHRoZSBFYXJ0aCdzIGxhbmQgYXJlYS4gVGhlIGxhcmdlc3QgYXJlYSBvZiBTYXZhbm5haCBpcyBpbiBBZnJpY2EuIFRoZSB0cm9waWNhbCBTYXZhbm5haCByZWdpb24gaGFzIGEgZGVmaW5pdGUgZHJ5IGFuZCB3ZXQgc2Vhc29uLiBTYXZhbm5haCBncmFzc2xhbmRzIGFyZSBtdWNoIHJpY2hlciBpbiBodW11cyB0aGFuIHRoZSBlcXVhdG9yaWFsIGZvcmVzdHMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Rainfall throughout the year",
        "option2" : " Rainfall in winter only",
        "option3" : " An extremely short dry season",
        "option4" : " A definite dry and wet season"
      }
    },
    {
      "index" : 94,
      "question" : "Which one of the following pairs is correctly matched?Geographical Feature Region              ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5NA==",
      "description" : "QXRsYXMgbW91bnRhaW4gcmFuZ2VzIGFyZSBzaXR1YXRlZCBpbiB0aGUgbm9ydGggd2VzdGVybiBwYXJ0IG9mIEFmcmljYS4gVGhleSBleHRlbmQgYWxtb3N0IDIwMDAga20uIFRoZXkgcGFzcyB0aHJvdWdoIE1vcm9jY28sIEFsZ2VyaWEgYW5kIFR1bmlzaWEu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Abyssinian Plateau : Arabia",
        "option2" : " Atlas Mountains : North-Western Africa",
        "option3" : " Guiana Highlands : South-Western Africa",
        "option4" : " Okavango Basin : Patagonia"
      }
    },
    {
      "index" : 95,
      "question" : "Variations in the length of daytime and nighttime from seasonto season are due to ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5NQ==",
      "description" : "VmFyaWF0aW9ucyBpbiB0aGUgbGVuZ3RoIG9mIGRheXRpbWUgYW5kIG5pZ2h0dGlvbiBmcm9tIHNlYXNvbiB0byBzZWFzb24gYXJlIGR1ZSB0byB0aGUgcmV2b2x1dGlvbiBvZiB0aGUgZWFydGggb24gYSB0aWx0ZWQgYXhpcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " the earth's rotation on its axis",
        "option2" : " the earth's revolution round the sun in an elliptical manner",
        "option3" : " latitudinal position of the place",
        "option4" : " revolution of the earth on a tilted axis."
      }
    },
    {
      "index" : 96,
      "question" : "On the planet earth, most of the freshwater exists as ice capsand glaciers. Out of the remaining freshwater, the largestproportion ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Ng==",
      "description" : "T3V0IG9mIGFsbCB0aGUgd2F0ZXIgb24gRWFydGgsIFNhbGluZSB3YXRlciBpbiBvY2VhbnMsIHNlYXMgYW5kIHNhbGluZSBncm91bmR3YXRlciBtYWtlIHVwIGFib3V0IDk3JSAgb2YgaXQuIE9ubHkgMi41IC0gMi43NSUgaXMgZnJlc2ggd2F0ZXIsIGluY2x1ZGluZyAxLjc1LTIlICBmcm96ZW4gaW4gZ2xhY2llcnMsIGljZSBhbmQgc25vdywgMC41IC0gMC43NSUgIGFzIGZyZXNoIGdyb3VuZHdhdGVyIGFuZCBzb2lsIG1vaXN0dXJlIGFuZCBsZXNzIHRoYW4gMC4wMSUgIG9mIGl0IGFzIHN1cmZhY2Ugd2F0ZXIgaW4gbGFrZXMsIFN3YW1wcyBhbmQgcml2ZXJzLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " is found in atmosphere as moisture and clouds",
        "option2" : " is found in freshwater lakes and rivers",
        "option3" : " exists as groundwater",
        "option4" : " exists as soil moisture"
      }
    },
    {
      "index" : 97,
      "question" : "Consider the following pairs: 1. Electromagnetic radiation2. Geothermal energy3. Gravitational force4. Plate movements5. Rotation of the earth6. Revolution of the earthWhich of the above are responsible for bringing dynamicchanges on the surface of the earth?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Nw==",
      "description" : "RnJvbSBlbGVjdHJvbWFnbmV0aWMgcmFkaWF0aW9uIHRvIHJldm9sdXRpb24gb2YgdGhlIGVhcnRoLCBldmVyeXRoaW5nIGlzIHJlc3BvbnNpYmxlIGZvciBicmluZ2luZyBkeW5hbWljIGNoYW5nZXMgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIGVhcnRoLiBGb3IgZXhhbXBsZTogRWxlY3Ryb21hZ25ldGljIHJhZGlhdGlvbiAgYnJpbmdzICBjaGFuZ2VzIGluIHRoZSBmaWVsZCBvZiBtaWNyb3dhdmVzLCB3YXZlbGVuZ3RocyBvZiByYWRpbywgVVYgcmF5cywgaW5mcmEgcmVkIHJheXMsIFggcmF5cyAgYW5kIGdhbW1hIHJheXMuICBHZW90aGVybWFsICBlbmVyZ3kgaXMgIHRoZSAgaGVhdCByZWNlaXZlZCBmcm9tIHRoZSBlYXJ0aCdzIGNvcmUuIFRoaXMgaGVhdCBjb250aW51b3VzbHkgZmxvd3Mgb3V0d2FyZC4gSXQgdHJhbnNmZXJzIHRvIHRoZSBzdXJyb3VuZGluZyBsYXllcnMgb2Ygcm9jaywgdGhlIG1hbnRsZS4gV2hlbiB0ZW1wZXJhdHVyZSBhbmQgcHJlc3N1cmUgYmVjb21lcyB2ZXJ5IGhpZ2ggc29tZSBtYW50bGUgcm9ja3MgbWVsdCBiZWNvbWluZyBtYWdtYS4gIEl0IHRoZW4gZWl0aGVyIGNvbWVzIG91dCBhcyBsYXZhIG9yICBoZWF0IHVwIHRoZSBuZWFyYnkgcm9ja3MgYW5kIHdhdGVyIHdoaWNoIGNvbWVzIG91dCBhcyBob3Qgc3ByaW5ncyAgb3IgZ2V5c2Vycy4gR3Jhdml0YXRpb25hbCAgZm9yY2UgaXMgY29uc3RhbnRseSB3b3JraW5nIG9uIGFsbCBwaHlzaWNhbCBib2RpZXMuIEl0IGlzIGdpdmluZyB3ZWlnaHRzIHRvIG9iamVjdHMgd2l0aCBtYXNzIGFuZCBjYXVzZXMgdGhlbSB0byBmYWxsIHRvIHRoZSBncm91bmQgd2hlbiBkcm9wcGVkLiBQbGF0ZSBtb3ZlbWVudCBpcyBhIGR5bmFtaWMgY2hhbmdlIG9uIHRoZSBzdXJmYWNlIG9mIHRoZSBlYXJ0aC4gSXQgZXhwbGFpbnMgbWFueSBhc3BlY3RzIG9mIHRoZSBpbnRlcnJlbGF0aW9uc2hpcCBvZiB2b2xjYW5vZXMsIGVhcnRocXVha2VzLCBjbGltYXRlIGNoYW5nZSwgYW5kIHRoZSBldm9sdXRpb24gb2YgbGlmZSBpdHNlbGYuIEV2ZXJ5dGhpbmcgYWJvdXQgb3VyIHBsYW5ldCBpcyByZWxhdGVkIGVpdGhlciBkaXJlY3RseSBvciBpbmRpcmVjdGx5IHRvIHBsYXRlIHRlY3RvbmljLiBSb3RhdGlvbiBjYXVzZXMgZGF5IGFuZCBuaWdodC4gUmV2b2x1dGlvbiBjYXVzZXMgc2Vhc29ucywgY2hhbmdlIGluIHRoZSBsZW5ndGggb2YgZGF5IGFuZCBuaWdodC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 only ",
        "option2" : " 1, 3, 5 and 6 only",
        "option3" : " 2, 4, 5 and 6 only ",
        "option4" : " 1, 2, 3, 4, 5 an 6"
      }
    },
    {
      "index" : 98,
      "question" : "The most important fishing grounds of the world are foundin the regions where ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5OA==",
      "description" : "VGhlIG1peGluZyBvZiB3YXJtIGFuZCBjb2xkIGN1cnJlbnQgaW4gdGhlIHJlZ2lvbiB3aGVyZSBwbGFua3RvbnMgYXJlIGZvdW5kLCBpcyBmb29kIGZvciBmaXNoZXMuIFRoZSB0ZW1wZXJhdHVyZSBpcyBqdXN0IHJpZ2h0IGZvciB0aGVtIHRvIHN1cnZpdmUuIFRoZSB0ZW1wZXJhdHVyZSBpcyBqdXN0IHJpZ2h0IGZvciB0aGUgZ3Jvd3RoIG9mIGZpc2ggZm9vZCBjYWxsZWQgcGxhbmt0b25zLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " warm and cold atmospheric currents meet",
        "option2" : " rivers drain out large amounts of freshwater into the sea",
        "option3" : " warm and cold oceanic currents meet",
        "option4" : " continental shelf is undulating"
      }
    },
    {
      "index" : 99,
      "question" : "Which of the following is/are unique characteristic/characteristics of equatorial forests? 1. Presence of tall, closely set trees with crowns forminga continuous canopy2. Coexistence of a large number of species3. Presence of numerous varieties of epiphytesSelect the correct answer using the codes given below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5OQ==",
      "description" : "VGhlIGNhbm9weSAgaXMgdGhlIHByaW1hcnkgbGF5ZXIgb2YgdGhlIGZvcmVzdCBmb3JtaW5nIGEgcm9vZiBvdmVyIHRoZSB0d28gcmVtYWluaW5nIGxheWVycy4gVGhlIGRlbnNlc3Qgb2YgdGhlIGJpb2RpdmVyc2l0eSBpcyBmb3VuZCBoZXJlIGFsb25nIHdpdGggYSBsYXJnZSB2YXJpZXR5IG9mIGVwaXBoeXRlcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 100,
      "question" : "The annual range of temperature in the interior of thecontinents is high as compared to coastal areas. What is/arethe reason/reasons? 1. Thermal difference between land and water2. Variation in altitude between continents and oceans3. Presence of strong winds in the interior4. Heavy rains in the interior as compared to coastsSelect the correct answer using the codes given below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDA=",
      "description" : "VGhlIGZpcnN0IHN0YXRlbWVudCBpcyBjb3JyZWN0LiBPbmUgbWFqb3IgZmFjdG9yIGFmZmVjdGluZyB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSB0ZW1wZXJhdHVyZSBvZiBFYXJ0aCBpcyBkaXN0cmlidXRpb24gb2YgIExhbmQgIGFuZCAgT2NlYW5zLiAgU2luY2UgIHRoZXJlICBpcyAgbW9yZSAgbGFuZCAgaW4gTm9ydGhlcm4gIEhlbWlzcGhlcmUgIGFuZCAgbW9yZSAgd2F0ZXJzICBpbiAgU291dGhlcm4gaGVtaXNwaGVyZSAgYW5kICB0aGVyZSAgaXMgIGEgIGJpZyAgZGlmZmVyZW5jZSAgYmV0d2VlbiAgdGhlIHNwZWNpZmljICBoZWF0ICBvZiAgbGFuZCAgYW5kICB3YXRlcjsgIHRoZSAgbG9zcyAgb2YgIGhlYXQgIGZyb20gIHRoZSBjb250aW5lbnRzICBpcyAgYmlnZ2VyICB0aGFuICB0aGUgIG9jZWFucy4gIFRoZSAgY29udGluZW50cyAgZ2V0IGhlYXRlZCAgZmFzdGVyICBhbmQgIGdldCAgY29vbGVkICBmYXN0ZXIgIGluICBjb21wYXJpc29uICB0byAgdGhlIE9jZWFucy4gVGhpcyBpcyB0aGUgcmVhc29uIHRoYXQgdGhlIHRlbXBlcmF0dXJlcyBvZiB0aGUgT2NlYW5zIGFyZSBtb2RlcmF0ZSB3aGlsZSB0aGF0IG9mIGNvbnRpbmVudHMgaXMgZXh0cmVtZS4gVGhlIG1vZGVyYXRpbmcgZWZmZWN0IG9uIHRlbXBlcmF0dXJlIG9mIHRoZSBsYW5kIGR1ZSB0byBwcm94aW1pdHkgb2YgdGhlIHNlYXMgaXMgY2FsbGVkIE1hcml0aW1lIGluZmx1ZW5jZS4gVGhlIGluY3JlYXNpbmcgZWZmZWN0IG9uIHRlbXBlcmF0dXJlIG9mIHRoZSBsYW5kIGF0IGludGVyaW9yIG9mIHRoZSBjb250aW5lbnRzIGlzIGNhbGxlZCBDb250aW5lbnRhbCBJbmZsdWVuY2Uu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 101,
      "question" : "'Climate is extreme, rainfall is scanty and the people used tobe nomadic herders.' The above statement best describes which of the followingregions?",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDE=",
      "description" : "VGhlIGNlbnRyYWwgQXNpYW4gc3RlcHBlcyBydW4gdGhyb3VnaCBLYXpha2hzdGFuLCBUdXJrbWVuaXN0YW4sIFV6YmVraXN0YW4gYW5kIE1vbmdvbGlhLiBUaGUgY2xpbWF0ZSBoZXJlIGlzIGhhcnNoIHdpdGggZHVzdCBzdG9ybXMsIGxpdHRsZSB0byBubyByYWluZmFsbCBhbmQgdGVtcGVyYXR1cmUgcmFuZ2luZyBmcm9tIC0gNCB0byA1MCBkZWdyZWUgQ2Vsc2l1cy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " African Savannah ",
        "option2" : " Central Asian Steppe",
        "option3" : " North American Prairie ",
        "option4" : " Siberian Tunra"
      }
    },
    {
      "index" : 102,
      "question" : "Which of the following phenomena might have influencedthe evolution of organisms? 1. Continental drift       2. Glacial cyclesSelect the correct answer using the code given below.",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDI=",
      "description" : "Q29udGluZW50YWwgRHJpZnQgaGFzIGVmZmVjdGVkIHRoZSBldm9sdXRpb24gb2YgYW5pbWFscywgdGhlIHdvcmxkJ3MgZ2VvZ3JhcGhpY2FsIHBvc2l0aW9ucyBhbmQgdGhlIHdvcmxkJ3MgY2xpbWF0ZXMuIFRoZSBzcGxpdCBvZiB0aGUgb3JpZ2luYWwgc3VwZXIgbGFuZCBtYXNzIFBhbmdlYSBpbnRvIEdvbmR3YW5hbGFuZCBhbmQgdGhlIGxhdXJhc2lhIGNyZWF0ZWQgIG5ldyBnZW9ncmFwaGljYWwvIGNsaW1hdGljIHJlZ2lvbnMuIFRoZSByZWFycmFuZ2VtZW50IGFuZCBkaXNwbGFjZW1lbnQgb2YgaHVnZSBsYW5kbWFzc2VzIGhhcyBoZWxwZWQgY3JlYXRlIHRoZSBkaXZlcnNpdHkgd2hpY2ggd2Ugc2VlIGluIG1vZGVybiBkYXkgc3BlY2llcy4gVGhlIGZpbmFsIHN0YWdlcyBvZiBldm9sdXRpb24gb2YgR2VudXMgSG9tbyBvY2N1cnMgaW4gdGhlIGxhc3QgMyBnbGFjaWFsIGN5Y2xlcy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 103,
      "question" : "Consider the following statements                        1. The  winds  which  blow  between  30°  N  and  60°  Slatitudes throughout the year are known as westerlies.2. The moist air masses that cause winter rains in North-Western region of India are part of westerlies.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDM=",
      "description" : "VGhlIFdlc3RlcmxpZXMgIGFyZSBwcmV2YWlsaW5nIHdpbmRzIGZyb20gdGhlIHdlc3QgdG93YXJkIHRoZSBlYXN0IGluIHRoZSBtaWRkbGUgbGF0aXR1ZGVzIGJldHdlZW4gMzAgYW5kIDYwIGRlZ3JlZXMgbGF0aXR1ZGUuIFRoZXkgb3JpZ2luYXRlIGZyb20gdGhlIGhpZ2gtcHJlc3N1cmUgYXJlYXMgaW4gdGhlIGhvcnNlIGxhdGl0dWRlcyBhbmQgdGVuZCB0b3dhcmRzIHRoZSBwb2xlcyBhbmQgc3RlZXIgZXh0cmEgdHJvcGljYWwgY3ljbG9uZXMgaW4gdGhpcyBnZW5lcmFsIG1hbm5lci4gVGhlIG1vaXN0IGFpciBtYXNzZXMgdGhhdCBjYXVzZSB3aW50ZXIgcmFpbnMgaW4gTm9ydGgtV2VzdGVybiByZWdpb24gb2YgSW5kaWEgYXJlIHBhcnQgb2Ygd2VzdGVybGllcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 104,
      "question" : "Tides occur in the oceans and seas due to which among thefollowing? 1. Gravitational force of the Sun2. Gravitational force of the Moon3. Centrifugal force of the EarthSelect the correct answer using the code given below.",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDQ=",
      "description" : "VGlkZXMgYXJlIHRoZSByaXNlIGFuZCBmYWxsIG9mIHNlYSBsZXZlbHMgY2F1c2VkIGJ5IHRoZSBjb21iaW5lZCBlZmZlY3RzIG9mIGdyYXZpdGF0aW9uYWwgZm9yY2VzIGV4ZXJ0ZWQgYnkgdGhlIE1vb24sIFN1biwgYW5kIHJvdGF0aW9uIG9mIHRoZSBFYXJ0aC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 105,
      "question" : "\"Each day is more or less the same, the morning is clear andbright with a sea breeze; as the Sun climbs high in the sky, heatmounts up, dark clouds form, then rain comes with thunderand lightning. But rain is soon over.\" Which of the followingregions is described in the above passage?              ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDU=",
      "description" : "VGhlIHBhc3NhZ2UgcG9pbnRzIG91dCBlcXVhdG9yaWFsIHJlZ2lvbi4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Savannah ",
        "option2" : " Equatorial",
        "option3" : " Monsoon ",
        "option4" : " Meiterranean"
      }
    },
    {
      "index" : 106,
      "question" : "In the South Atlantic and South-Eastern Pacific regions intropical latitudes, cyclone does not originate. What is thereason? ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDY=",
      "description" : "T25lIG9mIHRoZSBtYWluIGZhY3RvcnMgdGhhdCBpcyByZXNwb25zaWJsZSBmb3Igb3JpZ2luIG9mIHRyb3BpY2FsIGN5Y2xvbmVzIGluY2x1ZGUgTGFyZ2Ugc2VhIHN1cmZhY2Ugd2l0aCB0ZW1wZXJhdHVyZSBoaWdoZXIgdGhhbiAyN8KwIEMuIEJ1dCBpbiB0aGUgU291dGggQXRsYW50aWMgYW5kIFNvdXRoLUVhc3Rlcm4gUGFjaWZpYyByZWdpb25zIHRoZSBzZWEgc3VyZmFjZSB0ZW1wZXJhdHVyZXMgYXJlIG5vdCBlbm91Z2ggdG8gZm9ybSBhIHRyb3BpY2FsIGN5Y2xvbmUgZm9ybWF0aW9uIGR1ZSB0byBpdHMgdGVuZGVuY3kgdG8gcmVtYWluIHJlbGF0aXZlbHkgY29vbGVyIGFuZCB0aGlzIGRvbWluYXRlcyBvdmVyIG90aGVyIGZhY3RvcnMgYW5kIHByZXZlbnQgYW55IGN5Y2xvbmUgb3JpZ2luYXRpb24gaW4gdGhlIHJlZ2lvbi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Sea surface temperatures are low",
        "option2" : " Inter-Tropical Convergence Zone seldom occurs",
        "option3" : " Coriolis force is too weak",
        "option4" : " Absence of land in those regions"
      }
    },
    {
      "index" : 107,
      "question" : "What explains the eastward flow of the equatorial counter-current? ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDc=",
      "description" : "VGhlIEVhcnRoJ3Mgcm90YXRpb24gb24gaXRzIGF4aXMgZXhwbGFpbnMgdGhlIGVhc3R3YXJkIGZsb3cgb2YgdGhlIGVxdWF0b3JpYWwgY291bnRlci1jdXJyZW50LiBJZiB0aGUgZWFydGggd291bGQgaGF2ZSBiZWVuIHJvdGF0aW5nIGVhc3QgdG8gd2VzdCwgdGhlIHBpbGVkIHVwIHdhdGVyIHdvdWxkIGhhdmUgY29tZSBkb3duIG9uIHRoZSB3ZXN0IHNpZGUuIFRoZXJlZm9yZSwgZXNzZW50aWFsbHkgaXQncyB0aGUgZWFydGgncyByb3RhdGlvbiB0aGF0IGV4cGxhaW5zIHRoZSBlYXN0d2FyZCBmbG93IG9mIGVxdWF0b3JpYWwgY291bnRlciBjdXJyZW50Lg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The Earth's rotation on its axis",
        "option2" : " Convergence of the two equatorial currents",
        "option3" : " Difference in salinity of water",
        "option4" : " Occurrence of the belt of calm near the equator"
      }
    },
    {
      "index" : 108,
      "question" : "Which of the following is/are tributary tributaries ofBrahmaputra? 1. Dibang2. Kameng3. LohitSelect the correct answer using the code given below.",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTA4",
      "description" : "VGhlIEJyYWhtYXB1dHJhIGVudGVycyBJbmRpYSBpbiB0aGUgc3RhdGUgb2YgQXJ1bmFjaGFsIFByYWRlc2ggZnJvbSBpdHMgb3JpZ2luYWwgc291cmNlIFRpYmV0LCBhbmQgaXMgam9pbmVkIGJ5IHRoZSBEaWJhbmcgUml2ZXIgYW5kIHRoZSBMb2hpdCBSaXZlciBhdCB0aGUgaGVhZCBvZiB0aGUgQXNzYW0gVmFsbGV5LiBJdCBpcyBqb2luZWQgaW4gU29uaXRwdXIgYnkgdGhlIEthbWVuZyBSaXZlciAob3IgSmlhIEJob3JlbGkpLiBCcmFobWFwdXRyYSdzIG1haW4gbGVmdCBiYW5rIHRyaWJ1dGFyaWVzLCB2aXouLCBEaWJhbmcgb3IgU2lrYW5nIGFuZCBMb2hpdC4gVGhlIGltcG9ydGFudCByaWdodCBiYW5rIHRyaWJ1dGFyaWVzIGFyZSB0aGUgU3ViYW5zaXJpLCBLYW1lbmcsIE1hbmFzIGFuZCBTYW5rb3NoLiBUaGVyZWZvcmUsIGFsbCAzIGNvcnJlY3QuIFJlZi4gTkNFUlQgUGh5c2ljYWwgR2VvZ3JhcGh5IENsYXNzMTEsIENoLjMgRHJhaW5hZ2Ugc3lzdGVtIFBhZ2UsIDI2IDEwOS4gKGIpICgtKVRoZSBIaW5kdTogSW5kaWFuIE9jZWFuIERpcG9sZSAoSU9EKSBpcyBhbiBldmVudCB3aGljaCB0aGUgd2VzdGVybiBJbmRpYW4gT2NlYW4gYmVjb21lcyBhbHRlcm5hdGVseSB3YXJtZXIgYW5kIHRoZW4gY29sZGVyIHRoYW4gdGhlIGVhc3Rlcm4gcGFydCBvZiB0aGUgSW5kaWFuIG9jZWFuLiBTbyBmaXJzdCBzdGF0ZW1lbnQgaXMgd3JvbmcuICgtKUEgcG9zaXRpdmUgSU9EIGxlYWRzIHRvIGdyZWF0ZXIgbW9uc29vbiByYWluZmFsbCBhbmQgbW9yZSBhY3RpdmUgKGFib3ZlIG5vcm1hbCByYWluZmFsbCkgbW9uc29vbiBkYXlzIHdoaWxlIG5lZ2F0aXZlIElPRCBsZWFkcyB0byBsZXNzIHJhaW5mYWxsIGFuZCBtb3JlIG1vbnNvb24gYnJlYWsgIGRheXMgIChubyAgcmFpbmZhbGwpLiAgU28gIHllcywgIElPRCAgY2FuICBpbmZsdWVuY2UgIEVsIE5pbm8ncyBpbXBhY3Qgb24gTW9uc29vbi4gU28gc2Vjb25kIHN0YXRlbWVudCBpcyByaWdodC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 110,
      "question" : "Consider the following statements: 1. The Barren Island volcano is an active volcano locatedin the Indian territory.2. Barren Island lies about 140 km east of Great Nicobar.3. The last time the Barren Island volcano erupted wasin 1991 and it has remained inactive since then.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEw",
      "description" : "QmFycmVuIElzbGFuZCB2b2xjYW5vIGJlY2FtZSBhY3RpdmUgYWdhaW4gaW4gTWFyY2gsIDE5OTEuIEEgc2Vjb25kIHBoYXNlIG9mIGVydXB0aW9ucyBzdGFydGVkIGluIDE5OTUuIFNvIGl0IG1lYW5zIHRoaXJkIHN0YXRlbWVudCBpcyB3cm9uZywgYnkgZWxpbWluYXRpb24sIHdlJ3ZlIHRoZSBhbnN3ZXIgKGEpIG9ubHkgMS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3",
        "option3" : " 3 only ",
        "option4" : " 1 an 3"
      }
    },
    {
      "index" : 111,
      "question" : "With reference to agricultural soils, consider the followingstatements : 1. A high content of organic matter in soil drasticallyreduces its water holding capacity.2. Soil does not play any role in the Sulphur cycle.3. Irrigation over a period of time can contribute to thesalinization of some agricultural lands.Which of the statements given above is/are correct ?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEx",
      "description" : "VGhlIHByb2Nlc3Mgb2YgZGVjYXksIGFkZGVkIGJ5IGJhY3RlcmlhbCBhY3Rpb24sIHRyYW5zZm9ybXMgb3JnYW5pYyBtYXR0ZXIgaW50byBodW11cy4gSHVtdXMgZW5oYW5jZXMgd2F0ZXIgcmV0ZW50aW9uIGNhcGFjaXR5IG9mIHRoZSBzb2lsLiBTbywgMSBpcyB3cm9uZy4gQnkgZWxpbWluYXRpb24gd2UgYXJlIGxlZnQgd2l0aCBBbnN3ZXIgKGIpOiAzIG9ubHku",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 112,
      "question" : "Which of the following is/are the possible consequence/s  of  heavy  sand  mining  in  riverbeds  ? 1. Decreased salinity in the river2. Pollution of groundwater3. Lowering of the water-tableSelect the correct answer using the code given below :",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEy",
      "description" : "U2FuZCBNaW5pbmcgd3JlY2tzIHRoZSBpbnRlcnRpZGFsIGFyZWEgYW5kIGNyZWF0ZXMgdGhlIGltbWluZW50IGRhbmdlciBvZiBzYWxpbmUgd2F0ZXIgaW5ncmVzcyBpbnRvIGZyZXNoIHdhdGVyLiIgTWVhbmluZyBzYWxpbml0eSB3aWxsIGluY3JlYXNlLCBzbyBzdGF0ZW1lbnQgMSBpcyB3cm9uZywgYnkgZWxpbWluYXRpb24gd2UndmUgYW5zd2VyIChiKSAyIGFuZCAzIG9ubHkuIEluIHRoaXMgcXVlc3Rpb24sIGZpcnN0IHN0YXRlbWVudCBpcyB3cm9uZywgYW5kIHlvdSd2ZSB0byBpZGVudGlmeSByaWdodCBzdGF0ZW1lbnRzLiBTbyBpbiByZWFsIGV4YW0gc3RyZXNzLCBzb21lIHN0dWRlbnRzIG1heSBoYXZlIG1hZGUgZXJyb3Igb2YgcmVhZGluZyAvIHRpY2tpbmcsIGFuZCB0aGV5J2QgaGF2ZSB0aWNrZWQgdGhlIHdyb25nIG9wdGlvbiBBOiBvbmx5IDEuICh5b3UncmUgcmlnaHQgdGhhdCBpdCdzIHdyb25nIHN0YXRlbWVudCwgYnV0IHlvdSdyZSBub3QgYXNrZWQgdG8gdGljayB0aGUgd3Jvbmcgb25lLikgU28sIGJlIG1pbmRmdWwgb2YgdGlja2luZyBpbiBPTVIu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1 ,2 an 3"
      }
    },
    {
      "index" : 113,
      "question" : "Which of the following statements best describes \"carbonfertilization\"? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEz",
      "description" : "U3R1ZGllcyBoYXZlIHNob3duIHRoYXQgaW5jcmVhc2VkIGNvbmNlbnRyYXRpb25zIG9mIGNhcmJvbiBkaW94aWRlIGluY3JlYXNlIHBob3Rvc3ludGhlc2lzLCBzcHVycmluZyBwbGFudCBncm93dGguLi5SZXN1bHRzIHNob3dlZCB0aGF0IGNhcmJvbiBkaW94aWRlIGZlcnRpbGl6YXRpb24gZXhwbGFpbnMgNzAgcGVyY2VudCBvZiB0aGUgZ3JlZW5pbmcgZWZmZWN0LiBbTkFTQSAyMDE2XSBFIEIgRCBfOCAzNCAyIFBoeXNpY2FsIEdlb2dyYXBoeSAg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Increased plant growth due to increased concentration of carbon dioxide in the atmosphere",
        "option2" : " Increased temperature of Earth due to increased concentration of carbon dioxide in the atmosphere",
        "option3" : " Increased acidity of oceans as a result of increased concentration of carbon dioxide in the atmosphere",
        "option4" : " Adaptation of all living beings on Earth to the climate"
      }
    },
    {
      "index" : 114,
      "question" : "Consider the following statements: 1. The Earth's magnetic field has reversed every fewhundred thousand years.2. When the Earth was created more than 4000 millionyears ago, there was 54% oxygen and no carbondioxide.3. When living organisms originated, they modified theearly atmosphere of the Earth.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE0",
      "description" : "TkNFUlQgQmlvbG9neSBDbGFzcyAxMiBwYWdlIDEyNzogJ1RoZXJlIHdhcyBubyBhdG1vc3BoZXJlIG9uIGVhcmx5IGVhcnRoLiBXYXRlciB2YXBvdXIsIG1ldGhhbmUsIGNhcmJvbmRpb3hpZGUgYW5kIGFtbW9uaWEgcmVsZWFzZWQgZnJvbSBtb2x0ZW4gbWFzcyBjb3ZlcmVkIHRoZSBzdXJmYWNlLicgU28gIzIgaXMgd3JvbmcsIENPMiB3YXMgcHJlc2VudCwgd2UgYXJlIGxlZnQgd2l0aCAoYSkgb3IgKGMpLiBJbiBib3RoIG9wdGlvbnMgZmlyc3Qgc3RhdGVtZW50IGlzIGNvcnJlY3QgYnV0IGV4cGVydHMgd2VyZSBkaXZpZGVkIG92ZXIgdGhpcmQgc3RhdGVtZW50LSBiZWNhdXNlIGVhcmx5IEVhcmx5IGF0bW9zcGhlcmUgb2YgZWFydGggaGFkIG5vIGZyZWUgb3h5Z2VuLCB0aGUgKGxpZmUpIGZvcm1zIHVudGlsIHRoZW4gY291bGQgYXQgYmVzdCBiZSBvbmx5ICdhbmFlcm9iaWMnLiBTbyB0aG9zZSBsaXZpbmcgb3JnYW5pc21zIGRpZCBub3QgaGF2ZSBjYXBhY2l0eSB0byBhbHRlciB0aGUgYXRtb3NwaGVyZSwgYXRsZWFzdCBub3QgaW4gYSBzaWduaWZpY2FudCBtYW5uZXIuIEFjY29yZGluZ2x5LCBzb21lIHRpY2tlZCAgJ2EnIHdoaWxlIG90aGVycyB0aWNrZWQgJ2MnLiBVUFNDIGhhcyBrZXB0ICdjJyBhcyB0aGUgb2ZmaWNpYWwgYW5zd2VyLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 115,
      "question" : "On 21st June the sun ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE1",
      "description" : "TkNFUlQgQ2xhc3MgNiBDaDMsIHBhZ2UgMjA6ICgtKU9uIDIxc3QgSnVuZSwgdGhlIE5vcnRoZXJuIEhlbWlzcGhlcmUgaXMgdGlsdGVkIHRvd2FyZHMgdGhlIHN1bi4gVGhlIHJheXMgb2YgdGhlIHN1biBmYWxsIGRpcmVjdGx5IG9uIHRoZSBUcm9waWMgb2YgQ2FuY2VyLiBTbywgKGMpIGFuZCAoZCkgYXJlIHdyb25nLiAoLSlQbGFjZXMgYmV5b25kIHRoZSBBcmN0aWMgQ2lyY2xlIGV4cGVyaWVuY2UgY29udGludW91cyBkYXlsaWdodCBmb3IgYWJvdXQgc2l4IG1vbnRocy4gU28gKGEpIGlzIGNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Does not set below the horizon at the Arctic circle",
        "option2" : " Does not set below the horizon at Antarctic circle",
        "option3" : " Shines vertically overhead at noon on the Equator",
        "option4" : " Shines vertically overhead at the tropic of Capricorn"
      }
    },
    {
      "index" : 116,
      "question" : "Which of the following statements are correct about thedeposits of methane hydrate? 1. Global warming might trigger the release of methanegas from these deposits.2. Large deposits of 'methane hydrate' are found inArctic Tundra and under the seafloor.3. Methane in atmosphere oxidizes to carbon dioxideafter a decade or two.Select the correct answer using the code given below:",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE2",
      "description" : "QXMgcGVyIHRoZSBOQVNBIHdlYnBhZ2U6ICgtKUxhcmdlIGFtb3VudHMgb2YgbWV0aGFuZSBhcmUgZnJvemVuIGluIEFyY3RpYyB0dW5kcmEgc29pbHMgYW5kIGluIG1hcmluZSBzZWRpbWVudHMgaW5jbHVkaW5nIGdhcyBoeWRyYXRlcy4gQXMgRWFydGgncyBjbGltYXRlIHdhcm1zLCB0aGF0IG1ldGhhbmUgaXMgdnVsbmVyYWJsZSB0byBwb3NzaWJsZSByZWxlYXNlIGludG8gdGhlIGF0bW9zcGhlcmUsIHdoZXJlIGl0IGNhbiBhZGQgdG8gZ2xvYmFsIHdhcm1pbmcuIFNvIDEgYW5kIDIgYXJlIGNvcnJlY3QuICgtKUluIE1ldGhhbmUgQ3ljbGUsIGV2ZXJ5IG1vbGVjdWxlIG9mIG1ldGhhbmUgdGhhdCBnb2VzIGludG8gdGhlIGF0bW9zcGhlcmUgcmVtYWlucyB0aGVyZSBmb3IgOCB5ZWFycyB1bnRpbCBpdCBpcyByZW1vdmVkIGJ5IG94aWRhdGlvbiBpbnRvIGNhcmJvbiBkaW94aWRlIChDTzIpIGFuZCB3YXRlciAoSDJPKS4gU28sIDMgaXMgYWxzbyBjb3JyZWN0LiBUaGlzLCBhbnN3ZXIgKGQpOiBBbGwgdGhyZWUgY29ycmVjdC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    }
  ],
  "subject" : "Geography",
  "topic" : "Physical Geography",
  "year" : "0"
}
