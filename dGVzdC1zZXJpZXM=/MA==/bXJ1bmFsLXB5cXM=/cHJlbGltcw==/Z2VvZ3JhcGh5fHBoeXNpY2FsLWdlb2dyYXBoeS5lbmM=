{
  "testId" : "geography|physical-geography",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\pyqs\\mrunal-pyqs\\prelims\\1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "A meteor is :  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE=",
      "description" : "TWV0ZW9yIGlzIGEgc21hbGwgY2VsZXN0aWFsIGJvZHkgd2hpY2ggaGFzIGVudGVyZWQgdGhlICBlYXJ0aCdzIGF0bW9zcGhlcmUgYnkgdGhlIGdyYXZpdGF0aW9uYWwgZm9yY2Ugb2YgZWFydGgsIHdoZW4gIHRoZXkgcGFzcyBjbG9zZSB0byBpdC4gTWV0ZW9ycyB0eXBpY2FsbHkgb2NjdXJzIGluIHRoZSAgbWVzb3NwaGVyZSwgYW5kIG1vc3QgcmFuZ2UgaW4gYWx0aXR1ZGUgZnJvbSA3NSBrbSB0byAgMTAwIGttLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " a rapidly moving star ",
        "option2" : " a  piece  of  mater  which  has  entered  the  earth's  atmosphere from outer space ",
        "option3" : " part of a constellation ",
        "option4" : " a comet without a tail "
      }
    },
    {
      "index" : 2,
      "question" : "Which one of the following does not belong to biosphere reserves set-up so far?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI=",
      "description" : "QXMgcGVyIHRoZSBxdWVzdGlvbiBhbnN3ZXIgaXMgKGQpLiBHdWxmIG9mIEthY2hjaGggaGFzICBiZWVuIGRlY2xhcmVkIGEgYmlvLXNwaGVyZSByZXNlcnZlIGluIDIwMDguICBUaGVyZSBhcmUgMTggbm90aWZpZWQgQmlvLXNwaGVyZSByZXNlcnZlcyBpbiBJbmRpYS4gT3V0IG9mICB0aGVtLCAxMCBCaW9zcGhlcmUgUmVzZXJ2ZXMgYXJlIGluIHRoZSBVTkVTQ08ncyBNQUIgIHdvcmxkIE5ldHdvcmsuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Great Nicobar ",
        "option2" : " Sunderans ",
        "option3" : " Nanda Devi ",
        "option4" : " Gulf of Kutch "
      }
    },
    {
      "index" : 3,
      "question" : "The graph given below shows the mean average monthly temperatures (in ºC) and mean monthly rainfall (in cms) of a place:  This graph is indicative of which one of the climatic zones of the world? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM=",
      "description" : "SW4gdGhlIGdyYXBoIHRoZSB0ZW1wZXJhdHVyZSByYW5nZXMgZnJvbSAxNcKwIHRvIDI1wrAuICBTbywgdGhlIGdyYXBoIGluZGljYXRlcyB3ZXQgYW5kIGRyeSB0cm9waWNhbCByZWdpb24sIGFuZCBpbiAgdGhpcyByZWdpb24gcmFpbiBmYWxsIGRvZXMgbm90IGV4Y2VlZCAyNSBjbS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Wet and dry tropical ",
        "option2" : " Rainy tropical ",
        "option3" : " Semi-arid tropical ",
        "option4" : " Temperate marine "
      }
    },
    {
      "index" : 4,
      "question" : "Willy Willy is:  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ=",
      "description" : "SXQgaXMgYSB0cm9waWNhbCBjeWNsb25lIG9mIG5vcnRoLXdlc3QgIEF1c3RyYWxpYS4gV2lsbHkgIFdpbGx5IG9yaWdpbmF0ZXMgaW4gdGhlIFRpbW9yIHNlYSBhbmQgY2F1c2VzIHJhaW5mYWxsIGluICBkaWZmZXJlbnQgcGFydHMgb2YgQXVzdHJhbGlhLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " a type of tree grown in temperate regions ",
        "option2" : " a wind that blows in a desert ",
        "option3" : " a tropical cyclone of the north-west Australia ",
        "option4" : " a kind of common fish found near Laccadives Islands "
      }
    },
    {
      "index" : 5,
      "question" : "Which one of the following is the continent with the highest mean elevation in the world?  ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU=",
      "description" : "QW50YXJjdGljYSBpcyB0aGUgaGlnaGVzdCBjb250aW5lbnQgb24gdGhlIHBsYW5ldCB3aXRoICBhbiBhdmVyYWdlIGVsZXZhdGlvbiBvZiA3LDU0NSBmZWV0IGFib3ZlIHNlYSBsZXZlbC4gVGhlICBlbGV2YXRpb24gb2YgQW50YXJjdGljYSBhdCB0aGUgc291dGggcG9sZSBpcyA5LDMwMCBmZWV0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Antarctica ",
        "option2" : " North America ",
        "option3" : " Asia ",
        "option4" : " South America "
      }
    },
    {
      "index" : 6,
      "question" : "Which one of the following layers of the atmosphere is responsible for the deflection of radio waves?  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY=",
      "description" : "SW9ub3NwaGVyZSBpcyB0aGUgdG9wIGxheWVyIG9mIHRoZSBhdG1vc3BoZXJlLiBSYWRpbyAgd2F2ZXMgYXJlIGRlZmxlY3RlZCBpbiB0aGUgaW9ub3NwaGVyZSBvZiB0aGUgYXRtb3NwaGVyZS4gIElvbm9zcGhlcmUgaXMgY29tcG9zZWQgb2YgRCwgRSBhbmQgRiBsYXllcnMuIEQgbGF5ZXIgKDYwIGttICBmcm9tIGVhcnRoKSBpcyBnb29kIGF0IGFic29yYmluZyBBTSByYWRpbyB3YXZlcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Troposphere ",
        "option2" : " Stratosphere ",
        "option3" : " Mesosphere ",
        "option4" : " Ionosphere "
      }
    },
    {
      "index" : 7,
      "question" : "Given below are two statements one labelled as  Assertion (A) and the other labelled as Reason (R).  Assertion (A) : Areas near the equator receive rainfall throughout the year. Reason (R) : High temperatures and high humidity cause convectional rain in most afternoons near the equator. In the context of the above two statements, which one of the following is correct? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc=",
      "description" : "VGhlIGFzc2VydGlvbiBpcyBjb3JyZWN0IGFuZCByZWFzb24gY29ycmVjdGx5IGV4cGxhaW5zICB0aGUgYXNzZXJ0aW9uIGJlY2F1c2UgZHVlIHRvIGhpZ2ggdGVtcGVyYXR1cmUgdGhlICBhdG1vc3BoZXJpYyBhaXIgZ2V0cyBoZWF0ZWQgYW5kIHJpc2VzIHVwLiBJdCBjb29scyBkb3duIGFuZCAgcHJlY2lwaXRhdGVzIHdoaWxlIHRoZSBjb29sIGFpciBkZXNjZW5kcyBkb3duIHRvIHRha2UgdGhlICBwbGFjZSBvZiB0aGUgdmFjY3VtLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 8,
      "question" : "Given below are two statements, one labelled as Assertion (A) and the other labelled as Reason (R) :  Assertion (A) : Mangroves are very specialised forest eco-systems of tropical and sub-tropical regions bordering certain sea coasts. Reason (R) : They stabilise the shoreline and act as bulwark against encroachments by the sea. In the context of the above two statements, which one of the following is correct? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDg=",
      "description" : "Qm90aCB0aGUgc3RhdGVtZW50IGFyZSBjb3JyZWN0IGFuZCByZWFzb24gaXMgY29ycmVjdGx5ICBleHBsYWluZWQuICBNYW5ncm92ZXMgYXJlIGZvdW5kIGluIHRoZSBib3JkZXJpbmcgcmVnaW9uIG9mIHRyb3BpY2FsICBhbmQgc3ViLXRyb3BpY2FsIHNlYSBjb2FzdC4gTWFuZ3JvdmVzIHN0YWJpbGlzZSB0aGUgIHNob3JlbGluZSBhbmQgYWN0IGFzIGJ1bHdhcmsgYWdhaW5zdCBzZWEgZXJvc2lvbiB3aGljaCBtYWtlICBpdCBhIHNwZWNpYWxpc2VkIGZvcmVzdCBlY29zeXN0ZW0uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and  R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is not a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 9,
      "question" : "Diamond ring is a phenomenon observed:  ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDk=",
      "description" : "RGlhbW9uZCByaW5nIGlzIG9ic2VydmVkIGR1cmluZyBzb2xhciBlY2xpcHNlLCBvbmx5ICBhbG9uZyB0aGUgcGVyaXBoZXJhbCByZWdpb25zIG9mIHRoZSB0b3RhbGl0eSB0cmFpbC4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " at the start of a total solar eclipse ",
        "option2" : " at the end of a total solar eclipse ",
        "option3" : " only along the peripheral regions of the totality trail ",
        "option4" : " only in the central regions of the totality trail "
      }
    },
    {
      "index" : 10,
      "question" : "Which one of the following factors is responsible for the change in the regular direction of the ocean currents in the Indian Ocean?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEw",
      "description" : "RHVlIHRvIHRoZSBtb25zb29uIGRyaWZ0IG9mIEluZGlhbiBvY2VhbiwgaXRzIHJlZ3VsYXIgIGRpcmVjdGlvbiBvZiB0aGUgb2NlYW4gY3VycmVudHMgY2hhbmdlcyB0d2ljZSBhbiB5ZWFyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Indian Ocean is half an ocean ",
        "option2" : " Indian Ocean has monsoon drift ",
        "option3" : " Indian Ocean is a land-locked ocean ",
        "option4" : " Indian Ocean has greater variation in salinity "
      }
    },
    {
      "index" : 11,
      "question" : "Daily weather map showing isobars is an example of:  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEx",
      "description" : "RGFpbHkgd2hlYXRoZXIgbWFwIHNob3dpbmcgaXNvYmFycyBpcyBhbiBleGFtcGxlIG9mICBpc29wbGV0aCBtYXAuIElzb3BsZXRoIG1hcCBzaG93cyBhbiBpbWFnaW5hcnkgIHN1cmZhY2UgYnkgIG1lYW5zIG9mIGxpbmVzIGpvaW5pbmcgcG9pbnRzIG9mIGVxdWFsIHZhbHVlcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Choropleth map ",
        "option2" : " Isopleth map ",
        "option3" : " Chorochromatic map ",
        "option4" : " Choroschematic map "
      }
    },
    {
      "index" : 12,
      "question" : "The group of small pieces of rock revolving round the sun between the orbits of Mars and Jupiter are called: (a) meteors (b) comets                        ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDEy",
      "description" : "VGhlIGFzdGVyb2lkcyBhcmUgZ3JvdXAgb2Ygc21hbGwgcGllY2VzIG9mIHJvY2sgIHJldm9sdmluZyByb3VuZCB0aGUgc3VuIGJldHdlZW4gdGhlIG9yYml0IG9mIE1hcnMgYW5kICBKdXBpdGVyLiBUaGV5IGFyZSBhcHByb3hpbWF0ZWx5IDQwLDAwMCBpbiBudW1iZXIuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 06.30 hrs ",
        "option2" : " 05.30 hrs ",
        "option3" : " meteorites ",
        "option4" : " asterois  13. If the earth's direction of rotation is reversed, what should  be the IST when it is noon at the International Date Line? "
      }
    },
    {
      "index" : 14,
      "question" : "Which one of the following stars is nearest to the Earth?    ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE0",
      "description" : "U3VuIGlzIHRoZSBzdGFyIG5lYXJlc3QgdG8gdGhlIGVhcnRoLiBJdCBpcyAxNTAgbWlsbGlvbiAga2lsb21ldGVyIGF3YXkgZnJvbSBlYXJ0aC4gU3VuIGhhcyB0ZW1wZXJhdHVyZXMgb2Ygb3ZlciAxNSAgbWlsbGlvbiDCukMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Polaris ",
        "option2" : " Alpha Centauri ",
        "option3" : " Sun ",
        "option4" : " Sirius "
      }
    },
    {
      "index" : 15,
      "question" : "Which one of the following conditions is most relevant for the presence of life on Mars?  ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE1",
      "description" : "TWFycyBpcyB0aGUgb25seSBwbGFuZXQgd2l0aCBzaW1pbGFyIGRheSB0aW1lICB0ZW1wZXJhdHVyZXMgYW5kIGFuIGF0bW9zcGhlcmUgc2ltaWxhciB0byBlYXJ0aC4gVGhlIG1vc3QgIHJlbGV2YW50IGNvbmRpdGlvbiBmb3IgcHJlc2VuY2Ugb2YgbGlmZSBvbiBNYXJzIGlzIG9jY3VycmVuY2UgIG9mIGljZSBjYXBzIGFuZCBmcm96ZW4gd2F0ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Atmospheric composition ",
        "option2" : " Thermal conditions ",
        "option3" : " Occurrence of ice caps and frozen water ",
        "option4" : " Occurrence of ozone "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the map given  below:  World  climate types Of the four shaded areas in the map, which is characterised by hot dry summers, mild and moist winters and seasonal reversal of winds. ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE2",
      "description" : "SW4gdGhlIGdpdmVuIHdvcmxkIG1hcCAnMScgcmVmZXJzIHRoZSBob3QsIGRyeSBzdW1tZXJzLCAgbWlsZCBhbmQgbW9pc3Qgd2ludGVyIGluIENhbGlmb3JuaWEgKFUuUy5BKS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 2 ",
        "option3" : " 3 ",
        "option4" : " 4 "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding asteroids:  1. Asteroids are rocky debris of varying size orbiting the sun 2. Most of the asteroids are small but some have diameter as large and 1000 km 3. The orbit of asteroids lies between the orbits of Jupiter and Saturn Of these statements: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE3",
      "description" : "VGhlIGFzdGVyb2lkcyBhcmUgZ3JvdXAgb2Ygc21hbGwgcGllY2VzIG9mIHJvY2t5IGRlYnJpcyAgb2YgZGlmZmVyZW50IHNpemVzLiBTb21lIGFzdGVyb2lkcyBhcmUgc21hbGwgYW5kIHNvbWUgIGFzdGVyb2lkcyBldmVuIGhhdmUgZGlhbWV0ZXIgMTAwMCBrbS4gVGhlIGFzdGVyb2lkcyByZXZvbHZlICBiZXR3ZWVuIE1hcnMgYW5kIEp1cGl0ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 are correct ",
        "option2" : " 2 and 3 are correct ",
        "option3" : " 1 and 2 are correct ",
        "option4" : " 1 an 3 are correct "
      }
    },
    {
      "index" : 18,
      "question" : "Match the rivers labelled A, B, C and D on the given map with their names given in the list and select the correct answer using the codes given below the lists:  A B C D 1. St. Lawrence 2. Orinoco  3. Mackenzie 4. Amazon 5. Yukon  List-I List-II Codes: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE4",
      "description" : "SW4gdGhlIGdpdmVuIGRpYWdyYW0gb2YgTm9ydGggQW1lcmljYSBhbmQgU291dGggIEFtZXJpY2EuICAnYScgbWFya2VkIHJpdmVyIGlzIFl1a29uICAnYicgbWFya2VkIHJpdmVyIGlzIE1hY2tlbnppZSAgJ2MnIG1hcmtlZCByaXZlciBpcyBTdC4gTGF3cmVuY2UgICdkJyBtYXJrZWQgcml2ZXIgaXMgT3Jpbm9jby4g",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-4; B-3; C-2; D-1 ",
        "option2" : " A-5; B-3; C-1; D-2 ",
        "option3" : " A-5; B-4; C-1; D-3 ",
        "option4" : " A-3; B-1; C-4; D-2 "
      }
    },
    {
      "index" : 19,
      "question" : "The correct sequence of different layers of the atmosphere from the surface of the Earth upwards is:  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDE5",
      "description" : "VGhlIGNvcnJlY3Qgc2VxdWVuY2Ugb2YgZGlmZmVyZW50IGxheWVycyBvZiBhdG1vc3BoZXJlICBmcm9tIHRoZSBzdXJmYWNlIG9mIGVhcnRoIGlzIFRyb3Bvc3BoZXJlLCBTdHJhdG9zcGhlcmUsICBNZXNvc3BoZXJlIGFuZCBJb25vc3BoZXJlLiAgVHJvcG9zcGhlcmUgZXh0ZW5kcyB1cHRvIDgga20gZnJvbSBlYXJ0aCBzdXJmYWNlLCBidXQgYXQgIGVxdWF0b3IgaXQgaXMgMTYtMTgga20uICBTdHJhdG9zcGhlcmUgZXh0ZW5kcyBhYm92ZSBUcm9wb3NwaGVyZSAxOC01MCBrbS4gIE1lc29zcGhlcmUgZXh0ZW5kcyB1cCB0byA4MCBrbSBhbmQgYWJvdmUgTWVzb3NwaGVyZSAgSW9ub3NwaGVyZSBpcyBwcmVzZW50LCB3aGljaCBleHRlbmRzIHVwIHRvIDQwMCBrbS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Troposphere, Stratosphere, Ionosphere, Mesosphere ",
        "option2" : " Stratosphere, Troposphere, Ionosphere, Mesosphere ",
        "option3" : " Troposphere, Stratosphere, Mesosphere, Ionosphere ",
        "option4" : " Stratosphere, Troposphere, Mesosphere, Ionosphere "
      }
    },
    {
      "index" : 20,
      "question" : "Estuaries possess distinct blooms of excessive growth of a pigmented dinoflagellates. These blooms are called  ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIw",
      "description" : "UmVkIHRpZGVzIGFyZSBhIHNwZWNpYWwgdHlwZSBvZiBibG9vbXMsIHdoaWNoIGFyZSBmb3VuZCAgYXQgdGhlIGVzdHVhcmllcy4gVGhlc2UgYmxvb21zIGFyZSBwaWdtZW50ZWQgZGlub2ZsYWdlbGxhdGVzLiAgVGhlc2Ugc2luZ2xlIGNlbGxlZCBvcmdhbmlzbXMgYXJlIGFibGUgdG8gc3dpbSBzaG9ydCAgZGlzdGFuY2VzLiBXaGVuIHRoZSBhbGdhZSBpcyBwcmVzZW50IGluIGhpZ2ggY29uY2VudHJhdGlvbiwgIHRoZSB3YXRlciBhcHBlYXJzIHB1cnBsZSBvciBwaW5rIGluIGNvbG91ci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " red tides ",
        "option2" : " sea tides ",
        "option3" : " black tides ",
        "option4" : " sea flowers "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following climatic conditions (northern hemisphere) :        Temp. Rainfall        °C cm.  .9 4.7  .4 5.7  .3 8.2  .4 9.2  .0 9.2  .3 17.7  .8 14.5  .8 14.0  .3 12.7  .3 7.0  .2 5.0  .7 3.5 These are most likely to be found in the natural regions of: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIx",
      "description" : "VGhlIGNsaW1hdGljIGNvbmRpdGlvbnMsIHdoaWNoIGFyZSBnaXZlbiBpbiB0aGUgdGFibGUgIGRlbm90ZXMgdGhlIGNsaW1hdGljIGNvbmRpdGlvbiBvZiBDaGluYSB0eXBlIGNsaW1hdGUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " China type ",
        "option2" : " equatorial type ",
        "option3" : " hot desert type ",
        "option4" : " monsoon type "
      }
    },
    {
      "index" : 22,
      "question" : "Match List-I with List-II and select the correct answer by using the codes given below the lists:                        List-I List-II (Special characteristic) (Name of planet) A. Smallest planet 1. Mercury of the solar system B. Largest planet of 2. Venus the solar system C. Planet second from the 3. Jupiter Sun in the solar system D. Planet nearest to the Sun 4. Pluto 5. Saturn Codes : ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIy",
      "description" : "QS4gIFRoZSBzbWFsbGVzdCBwbGFuZXQgb2YgdGhlIHNvbGFyIHN5c3RlbSBpcy1QbHV0byAgQi4gVGhlIGxhcmdlc3QgcGxhbmV0IG9mIHRoZSBzb2xhciBzeXN0ZW0gaXMtSnVwaXRlciAgQy4gVGhlIHBsYW5ldCBzZWNvbmQgZnJvbSB0aGUgU3VuIGluIHRoZSBzb2xhciBzeXN0ZW0gIGlzLVZlbnVzICBELiBQbGFuZXQgbmVhcmVzdCB0byB0aGUgU3VuIGlzIC0gTWVyY3VyeS4g",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A-2; B-3; C-5; D-1 ",
        "option2" : " A-3; B-5; C-1; D-2 ",
        "option3" : " A-4; B-1; C-2; D-3 ",
        "option4" : " A-4; B-3; C-2; D-1 "
      }
    },
    {
      "index" : 23,
      "question" : "Physical regions marked as 1, 2, 3, and 4 on the given map are respectively:  1 2 3 4 ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDIz",
      "description" : "SW4gdGhlIGdpdmVuIGZpZ3VyZSA6ICAoLSlBbmRlcyBpcyBtYXJrZWQgYXMgJzEnLCB3aGljaCBpcyBsb2NhdGVkIGF0IHRoZSB3ZXN0ZXJuICBjb2FzdCBvZiBTb3V0aCBBbWVyaWNhLiAgKC0pQnJhemlsaWFuIHNoaWVsZCBpcyBtYXJrZWQgYXMgJzInLCB0aGlzIGFyZWEgaXMgbG9jYXRlZCBhdCAgdGhlIGVhc3Rlcm4gcGFydCBvZiBTb3V0aCBBbWVyaWNhLiBUaGUgc2hpZWxkIGV4dGVuZHMgb3ZlciAgOC41IG1pbGxpb24gc3F1YXJlLiAgKC0pR3V5YW5hIGhpZ2hsYW5kIGlzIG1hcmtlZCBhcyAnMycgR3V5YW5hIGhpZ2hsYW5kIGlzIGEgIHBsYXRlYXUgYW5kIGxvdyBtb3VudGFpbiByZWdpb24gb2YgU291dGggQW1lcmljYSBsb2NhdGVkICBub3J0aCBvZiBBbWF6b24gcml2ZXIgYW5kIFNvdXRoIG9mIE9yaW5vY28gcml2ZXIuICAoLSlBbWF6b24gYmFzaW4gaXMgbWFya2VkIGFzICc0JywgaXQgaXMgdGhlIHRyb3BpY2FsIHJhaW4gIGZvcmVzdCBpbiB0aGUgd29ybGQuIEFtYXpvbiByaXZlciBkcmFpbnMgbW9yZSB0aGFuIGhhbGYgb2YgIEJyYXppbCwgcGFydCBvZiBCb2xpdmlhLCBQZXJ1IGFuZCBFY3VhZG9yLiAgSElOVFMgJiBTT0xVVElPTlMgIEUgIEIgIEQgIF84ICAzNCAgMiAgUGh5c2ljYWwgR2VvZ3JhcGh5IEIgMTEg",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Andes, Brazilian Shield, Guyana Highlands and Amazon  Basin ",
        "option2" : " Andes, Guyana Highlands, Brazilian Shield and Amazon  Basin ",
        "option3" : " Amazon Basin, Guyana Highlands, Brazilians Shield  and Andes ",
        "option4" : " Guyana Highlands, Brazilian Shield Andes and Amazon "
      }
    },
    {
      "index" : 24,
      "question" : "Which one of the following types of coal contains a higher percentage of carbon than the rest?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI0",
      "description" : "QW50aHJhY2l0ZSBpcyBhIGRlbnNlLCBzaGlueSBjb2FsIHRoYXQgaGFzIGEgaGlnaCBjYXJib24gIGNvbnRlbnQuIFZlcnkgbGl0dGxlIHZvbGF0aWxlIG1hdHRlciBpcyBwcmVzZW50IGluIGl0LiBJdCBnaXZlcyBhICBjbGVhbiBmbGFtZSB3aGlsZSBidXJuaW5nLiBBbnRocmFjaXRlIGNvbnRhaW5zIDkxJSBvZiAgY2FyYm9uOyBpcyB2ZXJ5IGxpdHRsZSB2b2xhdGlsZSBhbmQgaGFzIGFsbW9zdCBzbW9rZWxlc3MgIGJ1cm5pbmcuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Bituminous coal ",
        "option2" : " Lignite ",
        "option3" : " Peat ",
        "option4" : " Anthracite "
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following scholars suggested the earth's origin from gases and dust particles?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI1",
      "description" : "Ty4gU2NobWlkdCBpbiAxOTQzIGdhdmUgSW50ZXJzdGVsbGFyIER1c3QgSHlwb3RoZXNpcyAgZm9yIHRoZSBvcmlnaW4gb2YgdGhlIGVhcnRoIGFuZCBzb2xhciBzeXN0ZW0uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " James Jeans ",
        "option2" : " H. Alfven ",
        "option3" : " F. Hoyle ",
        "option4" : " O. Schmit "
      }
    },
    {
      "index" : 26,
      "question" : "In the given map, which one of the following pairs of ocean currents are shown?  ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI2",
      "description" : "QmVuZ3VlbGEgaXMgYSBjb2xkIGN1cnJlbnQgZmxvd3MgZnJvbSBzb3V0aCB0byBub3J0aCAgYWxvbmcgdGhlIHdlc3QgY29hc3Qgb2YgQWZyaWNhLiAgR3VpbmVhIGN1cnJlbnQgaXMgYSB3YXJtIGN1cnJlbnQgZmxvd2luZyBlYXN0IG9mIEd1aW5lYSAgYWxvbmcgdGhlIHdlc3QgY29hc3Qgb2YgQWZyaWNhLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Benguela and Falkland ",
        "option2" : " Canary and Humoldt ",
        "option3" : " Agulhas and Guinea ",
        "option4" : " Benguela an Guinea "
      }
    },
    {
      "index" : 27,
      "question" : "Which one of the areas marked as A, B, C and D in the given figure of the cyclone, witnesses heavy torrential short duration rainfall accompanied by thunderstorms?    ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI3",
      "description" : "SW4gdGhlIGdpdmVuIGZpZ3VyZSAnQicgbGllcyBiZXR3ZWVuIHR3byBjeWNsb25lIHpvbmUgICdBJyBhbmQgJ0QnLiBBdCB0aGUgJ0InIG1hcmtlZCByZWdpb24gcmFpbmZhbGwgd291bGQgYmUgIGFjY29tcGFuaWVkIGJ5IHRodW5kZXIgc3Rvcm1zLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A ",
        "option2" : " B ",
        "option3" : " C ",
        "option4" : " D "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following temperature and rainfall data:     Month Temperature (ºC) Rainfall (cm) January 6.7 14.0 February 6.7 13.2 March 7.2 11.4 April 8.9  9.4 May11.1 8.1 June 13.9  8.1 July 15.0 9.6 August 15.0  12.2 September 13.9 10.4 October 11.1 14.4 November 8.9 14.0 December 7.8 16.8 The climate to which this data pertains is : ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI4",
      "description" : "VGhlIGdpdmVuIGRhdGEgc2hvd3MgdGhlIGNsaW1hdGljIGNvbmRpdGlvbiBvZiAgTWVkaXRlcnJhbmVhbiB0eXBlLiBJbiB0aGlzIGNsaW1hdGljIHpvbmUgdGhlIHRlbXBlcmF0dXJlICB2YXJpZXMgZnJvbSA3IC0gMTXCsEMgYW5kIHJhaW5mYWxsIHZhcmllcyBmcm9tIDYgLSAxNiBjbS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " St. Lawrence type ",
        "option2" : " China type ",
        "option3" : " West European type ",
        "option4" : " Meiterranean type "
      }
    },
    {
      "index" : 29,
      "question" : "At which one of the following positions shown in the diagram will the height of the ocean tide be maximum? Sun Earth's Orbit Moon's O rbit M3 M2 M1 M4 E              ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDI5",
      "description" : "QXQgJ000JyBwb3NpdGlvbiBvZiB0aGUgZGlhZ3JhbSB0aGUgaGVpZ2h0IG9mIHRoZSB0aWRlIGlzICBhdCBtYXhpbXVtLCBiZWNhdXNlIGluIHRoaXMgcG9zaXRpb24gZWFydGgsIG1vb24gYW5kIHN1biAgbGllcyBpbiBhIHN0cmFpZ2h0IGxpbmUuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Ml ",
        "option2" : " M2 ",
        "option3" : " M3 ",
        "option4" : " M4 "
      }
    },
    {
      "index" : 30,
      "question" : "Match List-I with List-II and select the correct answer using the codes given below the lists:  List-I (Timber) List-II (Country) A. Cedar 1. Myanmar B. Douglas Fir 2. Canada C. Mahogany 3. Mexico D. Teak 4. Honduras Codes: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMw",
      "description" : "KC0pQ2VkYXItQ2FuYWRhICAoLSlEb3VnbGFzIEZpci1NZXhpY28gICgtKU1haG9nYW55LUhvbmR1cmFzICAoLSlUZWFrLU15YW5tYXIg",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " A - 3; B- 2; C- 1; D-4 ",
        "option2" : " A - 3; B- 2; C- 4; D-1 ",
        "option3" : " A - 2; B- 3; C- 4; D-1 ",
        "option4" : " A - 2; B- 3; C- 1; D-4 "
      }
    },
    {
      "index" : 31,
      "question" : "Along which one of the following meridians did India experience the first light of the sunrise of the new millennium?  ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMx",
      "description" : "VGhlIGZpcnN0IGxpZ2h0IG9mIHRoZSBzdW5yaXNlIG9mIG5ldyBtaWxsZW5pdW0gaW4gSW5kaWEgIGV4cGVyaWVuY2VkIGF0IEthdGhhbCBpc2xhbmQgb2YgQW5kYW1hbiBhbmQgTmljb2Jhciwgd2hpY2ggIGlzIGxvY2F0ZWQgYXQgOTLCsDMwIEUgbWVyaWRpYW4uIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 2°30' W ",
        "option2" : " 82°30' E ",
        "option3" : " 92°30' W ",
        "option4" : " 92°30' E "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements:  1. Tides are of great help in navigation and fishing. 2. High tide enables big ships to enter or leave the harbour safely 3. Tide prevents siltation in the harbours 4. Kandla and Diamond Harbour are tidal ports Which of these statements are correct? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMy",
      "description" : "QWxsIHRoZSBnaXZlbiBzdGF0ZW1lbnRzIGFyZSB0cnVlLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 4 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements about the 'Roaring Forties':  1. They blow uninterrupted in the northern and Southern Hemispheres 2. They blow with great strength and constancy 3. Their direction is generally from north-west to east in the Southern Hemisphere 4. Overcast skies, rain and raw weather are generally associated with them Which of these statements are correct? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDMz",
      "description" : "VGhlIHdlc3RlcmxpZXMgaW4gdGhlIHNvdXRoZXJuIGhlbWlzcGhlcmUgaXMgY2FsbGVkIGFzICByb2FyaW5nIGZvcnRpZXM7IGxpZXMgYmV0d2VlbiA0MMKwUyB0byA1MMKwUyBhbmQgaXMgYSBwZXJtYW5lbnQgIHdpbmQuIEl0IGlzIHNsb3cgb3ZlciBsYW5kbWFzcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 1, 2 an 4 "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following weather conditions is indicated by a sudden fall in barometer reading?  ",
      "questionId" : "WzIwMTFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM0",
      "description" : "SW4gc3Rvcm15IHdlYXRoZXIgY29uZGl0aW9uIHRoZSBwcmVzc3VyZSBvZiAgYXRtb3NwaGVyZSB2YXJpZXMsIHdoaWNoIGNhdXNlcyBzdWRkZW4gZmFsbCBpbiBiYXJvbWV0ZXIgIHJlYWRpbmcuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Stormy ",
        "option2" : " Calm weather ",
        "option3" : " Cold and dry weather ",
        "option4" : " Hot an sunny weather "
      }
    },
    {
      "index" : 35,
      "question" : "Who amongst the following was the first to state that the earth was spherical ?  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM1",
      "description" : "QXJpc3RvdGxlIGluIDM0MCBCLkMgZmlyc3Qgc3RhdGVkIHRoYXQgdGhlIGVhcnRoIHdhcyAgc3BoZXJpY2FsIGluIGhpcyBib29rICdPbiB0aGUgSGVhdmVuJy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Aristotle ",
        "option2" : " Copernicus ",
        "option3" : " Ptolemy ",
        "option4" : " Strabo "
      }
    },
    {
      "index" : 36,
      "question" : "If the stars are seen to rise perpendicular to the horizon by an observer, he is located on the:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM2",
      "description" : "SWYgdGhlIHN0YXJzIGFyZSBzZWVuIHRvIHJpc2UgcGVycGVuZGljdWxhciB0byB0aGUgaG9yaXpvbiAgYnkgYW4gb2JzZXJ2ZXIgdGhlbiB0aGUgb2JzZXJ2ZXIgaXMgYXQgdGhlIGVxdWF0b3IgYmVjYXVzZSAgY2VsZXN0aWNhbCBlcXVhdG9yIGlzIGFuIGltYWdpbmFyeSBjaXJjbGUgYXJvdW5kIHRoZSBza3kgIGRpcmVjdGx5IGFib3ZlIHRoZSBlYXJ0aCdzIGVxdWF0b3IuIEl0IGlzIGFsd2F5cyA5MMK6IGZyb20gdGhlICBwb2xlLiBBbGwgdGhlIHN0YXJzIHJvdGF0ZSBpbiBhIHBhdGggdGhhdCBpcyBwYXJhbGxlbCB0byB0aGUgIGNlbGVzdGljYWwgZXF1YXRvci4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Equator ",
        "option2" : " Tropic of Cancer ",
        "option3" : " South Pole ",
        "option4" : " North Pole "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements made about sedimentary rocks:  1. Sedimentary rocks are formed at earth's surface by the hydrological system 2. Formation of sedimentary rocks involves the weathering of preexisting rocks 3. Sedimentary rocks contain fossils 4. Sedimentary rocks typically occur in layers Which of these statements are correct? ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM3",
      "description" : "QWxsIHRoZSBzdGF0ZW1lbnRzIGFyZSB0cnVlIGFib3V0IHRoZSBzZWRpbWVudGFyeSByb2NrLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 4 ",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1,"
      }
    },
    {
      "index" : 38,
      "question" : "Volcanic eruptions do not occur in :  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM4",
      "description" : "VGhlIGJhc2FsdGljICByb2NrIGZvdW5kIGluIEJhbHRpYyBzZWEgaXMgdHJhbnNwb3J0ZWQgYnkgIGdsYWNpZXIuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Baltic Sea ",
        "option2" : " Black Sea ",
        "option3" : " Caribbean Sea ",
        "option4" : " Caspian Sea "
      }
    },
    {
      "index" : 39,
      "question" : "Quartzite is metamorphosed from:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDM5",
      "description" : "UXVhcnR6aXRlIGlzIGEgbWV0YW1vcnBob3NlZCBmb3JtIG9mICBzYW5kc3RvbmUuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " limestone ",
        "option2" : " osidian ",
        "option3" : " sandstone ",
        "option4" : " shale "
      }
    },
    {
      "index" : 40,
      "question" : "Identify the correct order of the process of soil-erosion from the following:  ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQw",
      "description" : "VGhlIGNvcnJlY3Qgb3JkZXIgb2Ygc29pbCBlcm9zaW9uIHByb2Nlc3MgaXMgc3BsYXNoICBlcm9zaW9uLCBzaGVldCBlcm9zaW9uLCByaWxsIGVyb3Npb24gYW5kIGd1bGx5IGVyb3Npb24uIFNwbGFzaCAgb2NjdXJzIHdoZW4gdGhlIHJhaW5kcm9wIGhpdHMgdGhlIHN1cmZhY2U7IGV4cGxvc2l2ZSBpbXBhY3QgIHNvaWwgaW50byBpbmRpdmlkdWFsIHBhcnRpY2xlcy4gU2hlZXQgZXJvc2lvbiBpcyB0aGUgZGV0YWNobWVudCAgb2Ygc29pbCBwYXJ0aWNsZXMgYnkgcmFpbiBkcm9wIGFuZCB0aGVpciByZW1vdmFsIGRvd24gc2xvcGUgIGJ5IHdhdGVyIGZsb3dpbmcgb3ZlcmxhbmQgYXMgYSBzaGVldCBpbiBkZWZpbml0ZSBjaGFubmVscy4gIFJpbGwgZXJvc2lvbiByZWZlcnMgdG8gdGhlIGRldmVsb3BtZW50IG9mIHNtYWxsIGVwaGVtZXJhbCAgY29uY2VudHJhdGVkIGZsb3cgcGF0aHMgd2hpY2ggZnVuY3Rpb24gYXMgYm90aCBzZWRpbWVudGFyeSAgc291cmNlIGFuZCBzZWRpbWVudCBkZWxpdmVyeSBzeXN0ZW1zIGZvciBlcm9zaW9uIG9uIGhpbGwgIHNsb3Blcy4gU2hlZXQgZXJvc2lvbiByZW1vdmVzIHRoZSB0aGlzIHRvcCBsYXllciBieSByYWluZHJvcCAga2lsbCBvciBvcmlvbiBvY2N1cnMgaW4gbGluZXMgd2hpY2ggYXJlIGxlc3MgdGhhbiAzMCBjbSBkZWVwICB3aGVuIHRoZXNlIHJpbGxzIGFyZSBkZWVwZXIgdGhhbiAzMCBmb3JtaW5nIGNoYW5uZWxzIGFyZSAgY2FsbGVkIGFzIGd1bGx5IGVyb3Npb24uIEd1bGx5IGVyb3Npb24gb2NjdXJzIHdoZW4gd2F0ZXIgIGZsb3dzIGluIG5hcnJvdyBjaGFubmVscyBhZnRlciBoZWF2eSByYWluIGFuZCBtZWx0aW5nIHNub3cuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Splash erosion, Sheet erosion, Rill erosion, Gully erosion ",
        "option2" : " Sheet erosion, Splash erosion, Gully erosion, Rill erosion ",
        "option3" : " Rill erosion, Gully erosion, Sheet erosion, Splash erosion ",
        "option4" : " Gully erosion, Rill erosion, Sheet erosion, Splash "
      }
    },
    {
      "index" : 41,
      "question" : "Temperature and rainfall of a meteorological station are given below:  Temperature (0°C) Rainfall (cm)  .4 12.2  .6 9.1  .7 7.9  .2 2.5  .3 1.0  .9 0.3  .9 -  .4 -  .6 0.8 15.0 2.5  .3 6.1  .6 11.7 Average temperature: 12.8°C Average rainfall: 54.9 cm per annum Identify the region having the above climatic patterns from amongst the following: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQx",
      "description" : "VGhlIHJlZ2lvbiB3aWxsIGJlIE1lZGl0ZXJyYW5lYW4gYWNjb3JkaW5nIHRvIHRoZSAgY2hhcmFjdGVyaXN0aWNzIGRlc2NyIGliZWQgYnkgdGhlIGNsaW1hdGljIHBhdHRlcm5zLiAgTWVkaXRlcnJhbmVhbiBjbGltYXRlIGlzIGNoYXJhY3RlcmlzZWQgYnkgaG90LCBkcnkgc3VtbWVycyAgYW5kIHdhcm0sIHdldCB3aW50ZXJzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean region ",
        "option2" : " Monsoon region ",
        "option3" : " Steppe region ",
        "option4" : " N.W. European region "
      }
    },
    {
      "index" : 42,
      "question" : "Assertion (A) : During the neap tides. The high tide is lower and the low tide is higher than usual. Reason (R) : The neap tide, unlike the spring tide, occurs on the new moon instead of on the full moon.                ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQy",
      "description" : "VGhlIHN1biwgdGhlIGVhcnRoIGFuZCB0aGUgbW9vbiBjb21lIGluIHRoZSBwb3NpdGlvbiAgb2YgcXVhZHJhdHVyZSAoZm9ybS1hIHJpZ2h0IGFuZ2xlKSBvbiBzZXZlbnRoIGFuZCBlaWdodGggIGRheSBvZiBldmVyeSBmb3J0bmlnaHQgb2YgYSBtb250aCBhbmQgdGh1cyB0aGUgdGlkZSBwcm9kdWNpbmcgIGZvcmNlcyBvZiB0aGUgc3VuIGFuZCB0aGUgbW9vbiB3b3JrcyBpbiBvcHBvc2l0ZSBkaXJlY3Rpb24sICBjYXVzaW5nIGxvdyB0aWRlLiBUaGlzIGlzIGxvd2VyIGluIGhlaWdodCB0aGFuIHRoZSBub3JtYWwgdGlkZSAgYW5kIGlzIGNhbGxlZCBuZWFwIHRpZGUuIEJ1dCB0aGUgc3ByaW5nIHRpZGUgb2NjdXJzIGR1cmluZyBmdWxsICBtb29uIGFuZCBhcmUgY2FsbGVkIGhpZ2ggdGlkZXMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of  A ",
        "option2" : " Both A and R are true but R is NOT a correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements:  1. In equatorial regions, the year is divided into four main seasons 2. In Mediterranean region, summer months receives more rain. 3. In China type climate; rainfall occurs throughout the year 4. Tropical highlands exhibit vertical zonation of different climates Which of these statements are correct? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ1",
      "description" : "MXN0IHN0YXRlbWVudCBpcyB3cm9uZzogRXF1YXRpb25hbCByZWdpb24gaGFzIG9ubHkgdHdvICBzZWFzb25zLiAgMm5kIHN0YXRlbWVudCA6IE1lZGl0ZXJyYW5lYW4gZ2V0cyByYWluZmFsbCBkdXJpbmcgd2ludGVyICBzZWFzb24gaXMgYWxzbyB3cm9uZy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 3 an 4 "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following ecosystems:  1. Taiga 2. Tropical Evergreen 3. Tropical Deciduous 4. Tundra The correct sequence in decreasing order of the Albedo values of these ecosystems is : ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ2",
      "description" : "QWNjb3JkaW5nIHRvIGVjb3N5c3RlbSwgdGhlIG1heGltdW0gYWxiZWRvIHdvdWxkICBiZSBvZiBUdW5kcmEsIHRoZW4gVGFpZ2EsIHRoZW4gVHJvcGljYWwgRGVjaWR1b3VzIHRoZW4gIFRyb3BpY2FsIGV2ZXIgZ3JlZW4uIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 4, 3, 2 ",
        "option2" : " 4, 1, 3, 2 ",
        "option3" : " 4, 1, 2, 3 ",
        "option4" : " 1, .4, 2, 3 "
      }
    },
    {
      "index" : 47,
      "question" : "Assertion (A) : 60° - 65º latitudes in both the hemispheres have a low pressure belt instead of high pressure. Reason (R) : The low pressure areas are permanent over oceans rather than on land.  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ3",
      "description" : "QSBpcyB0cnVlIGJ1dCBSIGlzIGZhbHNlLiAgU3ViLXBvbGFyIGxvdyBwcmVzc3VyZSBpcyBsb2NhdGVkIGJldHdlZW4gNjAtNjXCuiAgbGF0aXR1ZGUgaW4gYm90aCBoZW1pc3BoZXJlLiBMb3cgcHJlc3N1cmUgaXMgcHJvZHVjZWQgaW4gIHRoaXMgYXJlYSwgYmVjYXVzZSB0aGUgc3VyZmFjZSBhaXIgc3ByZWFkcyBvdXR3YXJkIGZyb20gdGhpcyAgem9uZSBkdWUgdG8gcm90YXRpb24gb2YgZWFydGguIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is NOT a correct  explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 48,
      "question" : "Assertion (A) : The surface winds spiral inwards upon the centre of the cyclone. Reason (R) : Air descends in the centre of the cyclone.  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ4",
      "description" : "QWlyIGJlZ2lucyB0byBzbG93bHkgZGVzY2VuZCBpbiB0aGUgY2VudHJlIG9mIHRoZSBzdG9ybSwgIGNyZWF0aW5nIGEgcmFpbi1mcmVlIGFyZWEuIFRoaXMgaXMgYSBuZXdseSBmb3JtZWQgZXllLiBPbiAgbGFuZCwgdGhlIGNlbnRyZSBvZiB0aGUgZXllIGlzLCBieSBmb3IsIHRoZSBjYWxtZXN0IHBhcnQgb2YgdGhlICBzdG9ybS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A ",
        "option2" : " Both A and R are true but R is NOT a correct  explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following climatic and geographical phenomena:  1. Condensation 2. High temperature and humidity 3. Orography 4. Vertical wind Thunder cloud development is due to which of these phenomena? ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDQ5",
      "description" : "VGhlIHRodW5kZXIgY2xvdWRzIGRldmVsb3AgYnkgdGhlIGFib3ZlIGNsaW1hdGljIGFuZCAgZ2VvZ3JhcGhpYyBwaGVub21lbmEuIEhpZ2ggdGVtcGVyYXR1cmUgYW5kIGh1bWlkaXR5ICBjYXVzZXMgdGhlIHdpbmQgdG8gcmlzZSB2ZXJ0aWNhbGx5IHVwIGFuZCBkdWUgdG8gb3JvZ3JhcGh5ICBhbmQgcHJlc3N1cmUgb2YgbW91bnRhaW5zIHRoZXNlIHdpbmRzIGdldCBjb25kZW5zZWQgYW5kICBmb3JtIGN1bXVsb25pbWJ1cyBjbG91ZHMgb3IgdGh1bmRlciBjbG91ZHMuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2, 3 and 4 ",
        "option3" : " 1, 3 and 4 ",
        "option4" : " 1, 2 , 3 an 4 "
      }
    },
    {
      "index" : 50,
      "question" : "For short-term climatic predictions, which one of the following events, detected in the last decade, is associated with occasional weak monsoon rains in the Indian sub- continent?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUw",
      "description" : "RTEgTmlubyBhbmQgTGEgTmluYSBhcmUgb3Bwb3NpdGUgcGhhc2VzIG9mIHdoYXQgaXMgIGtub3duIGFzIHRoZSBFMSBOaW5vLXNvdXRoZXJuIE9zY2lsbGF0aW9uIChFTlNPKSBjeWNsZS4gIFRoZSBFTlNPIGN5Y2xlIGlzIGEgc2NpZW50aWZpYyB0ZXJtIHRoYXQgZGVzY3JpYmVzIHRoZSAgZmx1Y3R1YXRpb25zIGluIHRlbXBlcmF0dXJlIGJldHdlZW4gdGhlIG9jZWFuIGFuZCAgYXRtb3NwaGVyZSBpbiB0aGUgZWFzdC1jZW50cmFsLiAgSW1wYWN0IG9mIEUxIC1OaW5vOiAgLSBOb3JtYWwgb3IgSGlnaCByYWluZmFsbCBpbiBFYXN0ZXJuL0NlbnRyYWwgUGFjaWZpYy4gIC0gRHJvdWdodCBvciBTY2FudCByYWluZmFsbCBpbiB3ZXN0ZXJuIFBhY2lmaWMvQXNpYS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " La Nina ",
        "option2" : " Movement of Jet Stream ",
        "option3" : " El Nino. and Southern Oscillations ",
        "option4" : " Greenhouse effect at global level "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following is not a lagoon?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUx",
      "description" : "UGVyaXlhciBMYWtlIGlzIGZhdm91cmVkIGJ5IHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlICBkYW0gYWNyb3NzIHRoZSBNdWxsb3Blcml5YXIgUml2ZXIuIEl0IGlzIGFuIGFydGlmaWNpYWwgbGFrZSBpbiAgdGhlIG1pZGRsZSBvZiB0aGUgcGVyaXlhciB3aWxkbGlmZSBzYW5jdHVhcnkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Ashtamudi lake ",
        "option2" : " Chilka lake ",
        "option3" : " Periyar lake ",
        "option4" : " Pulicat lake "
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following statements is correct with reference to our solar system?  ",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUy",
      "description" : "VGhlIGVhcnRoIGlzIHRoZSBkZW5zZXN0IG9mIGFsbCB0aGUgcGxhbmV0LiBEZW5zaXR5IG9mICBFYXJ0aCBpcyA1LjUyLCBWZW51cy01LjUwLCBNZXJjdXJ5IDUuMjcsIE1hcnMgLSAzLjk1LCBKdXBpdGVyICBhbmQgU2F0dXJuIC0gMC42OSwgVXJhbnVzIC0gMS4yNy4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The earth is the densest of all the planets in our solar system ",
        "option2" : " The predominant element in the composition of earth is silicon ",
        "option3" : " The sun contains 75 percent of the mass of the solar system ",
        "option4" : " The diameter of the sun is 190 times that of the earth "
      }
    },
    {
      "index" : 53,
      "question" : "Assertion (A) : The amount of moisture in the atmosphere is related to latitude Reason (R) : The capacity to hold moisture in the form of water vapour is related to temperature.  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDUz",
      "description" : "VGhlIGFtb3VudCBvZiBtb2lzdHVyZSBpbiBhdG1vc3BoZXJlIGlzIHJlbGF0ZWQgdG8gIGxhdGl0dWRlIGJlY2F1c2UgdGhlIHRlbXBlcmF0dXJlIGRlcGVuZHMgdXBvbiB0aGUgbGF0aXR1ZGUgIGFuZCBjYXBhY2l0eSB0byBob2xkIG1vaXN0dXJlIGlzIHJlbGF0ZWQgdG8gdGVtcGVyYXR1cmUuICAgQiAxMiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 54,
      "question" : "Assertion (A) : Unlike temperate forests, the tropical rain forests, if cleared, can yield productive farmland that can support intensive agriculture for several years even without chemical fertilizers. Reason (R) : The primary productivity of the tropical rain forest is very high when compared to that of temperate forests.  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU0",
      "description" : "RHVlIHRvIENvbnN0YW50IHJhaW4gaW4gdHJvcGljYWwgcmFpbiBmb3Jlc3RzIHRoZSAgbnV0cmllbnRzIGluIHRoZSBzb2lsIGNvbnRpbnVvdXNseSBsZWFjaGVzIG91dC4gVG8gIGNvbXBlbnNhdGUgZm9yIHRoZSBsb3NzIHRoZSBhZGRpdGlvbmFsIG1pbmVyYWxzIGFuZCAgZXNzZW50aWFsIGVsZW1lbnRzIGFyZSByZXF1aXJlZCB0aHJvdWdoIENoZW1pY2FsIGZlcnRpbGl6ZXJzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A. ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 55,
      "question" : "Assertion (A) : Areas lying within five to eight degrees latitude on either side of the equator receive rainfall throughout the year. Reason (R) : High temperatures and high humidity cause convectional rain to fall mostly in the afternoons near the equator.  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU1",
      "description" : "VGhlIGhpZ2hlc3QgcmFpbmZhbGwgdG90YWxzIG9jY3VyIG5lYXIgdGhlIGVxdWF0b3IgaW4gdGhlICB0cm9waWNzLCB3aGVyZSB0aGUgc3Ryb25nIGhlYXRpbmcgYnkgdGhlIHN1biBjcmVhdGVzICBzaWduaWZpY2FudCB2ZXJ0aWNhbCB1cGxpZnRzIG9mIGFpciBhbmQgdGhlIGZvcm1hdGlvbiBvZiAgcHJvbG9uZ2VkIGhlYXZ5IHNob3dlYXMgYW5kIGZyZXF1ZW50IHRodW5kZXJzdG9ybXMuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 56,
      "question" : "Which one among the following covers the highest percentage of forest area in the world?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU2",
      "description" : "VGVtcGVyYXR1cmUgY29uaWZlcm91cyBmb3Jlc3RzIGNvdmVycyB0aGUgaGlnaGVzdCAgcGVyY2VudGFnZSBvZiBmb3Jlc3QgYXJlYSBpbiB0aGUgd29ybGQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Temperate coniferous forests ",
        "option2" : " Temperate deciduous forests ",
        "option3" : " Tropical monsoon forests ",
        "option4" : " Tropical rain forests "
      }
    },
    {
      "index" : 57,
      "question" : "Among the following which planet takes maximum time for one revolution around the Sun?  ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU3",
      "description" : "SnVwaXRlciB0YWtlcyBtYXhpbXVtIHRpbWUgZm9yIG9uZSByZXZvbHV0aW9uIGkuZS4sIDExICB5ZWFyIDg2IGRheXMuIE1hcnMgdGFrZSA2ODcgZGF5cywgVmVudXMgdGFrZXMgMjY3IGRheXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Earth ",
        "option2" : " Jupiter ",
        "option3" : " Mars ",
        "option4" : " Venus "
      }
    },
    {
      "index" : 58,
      "question" : "Assertion (A) : Thickness of the atmosphere is maximum over the Equator. Reason (R) : High insolation and strong convection currents occur over the Equator.  ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU4",
      "description" : "VGhlIGNpcmN1bGF0aW9uIG9mIGF0bW9zcGhlcmUgYW5kIG9jZWFucyBpcyBmdW5kYS0gIG1lbnRhbGx5IGNhdXNlZCBieSB0aGUgZmFjdCB0aGF0IHRoZSBhbW91bnQgb2YgaW5jb21pbmcgIHNvbGFyIHJhZGlhdGlvbiB2YXJpZXMgZnJvbSBhIG1heGltdW0gYXQgdGhlIGVxdWF0b3IgdG8gYSAgbWluaW11bSBhdCB0aGUgcG9sZXMuIE1vcmUgcmVmbGVjdGlvbiBhbmQgYWJzb3JwdGlvbiBvZiAgaW5jb21pbmcgcmFkaWF0aW9uIHRha2VzIHBsYWNlIGluIGhpZ2ggbGF0aXR1ZGUgYmVjYXVzZSBvZiAgdGhlIGdyZWF0ZXIgdGhpY2tuZXNzIG9mIGF0bW9zcGhlcmUgdGhhdCBtdXN0IGJlIHBlbmV0cmF0ZWQuICBUaGlja25lc3Mgb2YgdGhlIGVhcnRoIGlzIG1heGltdW0gb3ZlciB0aGUgcG9sZS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct  explanation of A ",
        "option2" : " Both A and R are individually true but R is not the  correct explanation of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 59,
      "question" : "Where is the volcanic mountain, Mount St. Helens located?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDU5",
      "description" : "Vm9sY2FuaWMgbW91bnRhaW4uIFN0LiBIZWxlbiBpcyBsb2NhdGVkIGluIFVuaXRlZCBTdGF0ZXMgIG9mIEFtZXJpY2EuICA2MC4gKGMgKSBUaGUgbW9vbiByb3RhdGVzIGFib3V0IGl0cyBvd24gYXhpcyBpbiAyNy4zMjIgZGF5cy4gIFdoZW4gdGhlIE1vb24gZmlyc3QgZm9ybWVkLCBpdHMgcm90YXRpb25hbCBzcGVlZCBhbmQgb3JiaXQgIHdlcmUgdmVyeSBkaWZmZXJlbnQgdGhhbiB0aGV5IGFyZSBub3cuICBPdmVyIHRpbWUsIHRoZSBFYXJ0aCdzICBncmF2aXRhdGlvbmFsIGZpZWxkIGdyYWR1YWxseSBzbG93ZWQgdGhlIE1vb24ncyByb3RhdGlvbiAgdW50aWwgdGhlIG9yYml0YWwgcGVyaW9kIGFuZCB0aGUgcm90YXRpb25hbCBzcGVlZCBzdGFiaWxpemVkLCAgbWFraW5nIG9uZSBzaWRlIG9mIHRoZSBtb29uIGFsd2F5cyBmYWNlIHRoZSBFYXJ0aC4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Chile ",
        "option2" : " Japan ",
        "option3" : " Philippines ",
        "option4" : " Unite States of America "
      }
    },
    {
      "index" : 61,
      "question" : "Assertion (A) : Existence of human life on Venus is highly improbable. Reason (R): Venus has extremely high level of carbon dioxide in its atmosphere.  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYx",
      "description" : "VGhlIGF0bW9zcGhlcmUgb2YgVmVudXMgaXMgY29tcG9zZWQgcHJpbWFyaWx5IG9mICBjYXJib24gZGlveGlkZSBhbmQgbXVjaCBkZW5zZXIgYW5kIGhvdHRlciB0aGFuIHRoYXQgb2YgRWFydGguICBUaGUgYXRtb3NwaGVyZSBvZiBWZW51cyBzdXBwb3J0cyBvcGFxdWUgY2xvdWRzIG1hZGUgb2YgIHN1bGZ1cmljICBhY2lkLCBtYWtpbmcgb3B0aWNhbCBFYXJ0aC1iYXNlZCBhbmQgb3JiaXRhbCAgb2JzZXJ2YXRpb24gb2YgdGhlIHN1cmZhY2UgaW1wb3NzaWJsZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is NOT a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 62,
      "question" : "Assertion (A) : Wind patterns are clockwise in the Northern Hemisphere and anti-clockwise in the Southern Hemisphere. Reason (R) : The directions of wind patterns in the Northern and the Southern Hemisphere are governed by the Coriolis effect.  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYy",
      "description" : "QSBpcyB0cnVlIGFzIHRoZSBkaXJlY3Rpb24gb2Ygd2luZCBpbiB0aGUgbm9ydGhlcm4gIGhlbWlzcGhlcmUgaXMgY2xvY2sgd2lzZSBhbmQgaW4gc291dGhlcm4gaGVtaXNwaGVyZSBpdCBpcyAgYW50aSBjbG9jayB3aXNlLiBUaGUgZXhwbGFuYXRpb24gaXMgY29ycmVjdCBhcyB0aGlzIGlzIG1haW5seSAgZHVlIHRvIGNvcmlvbGlzIGVmZmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation  of A ",
        "option2" : " Both A and R are true but R is NOT a correct explanation  of A ",
        "option3" : " A is true but R is false ",
        "option4" : " A is false but R is true "
      }
    },
    {
      "index" : 63,
      "question" : "Where are the Balearic Islands located?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDYz",
      "description" : "VGhlIEJhbGVhcmljIElzbGFuZHMgYXJlIGFuIGFyY2hpcGVsYWdvIG9mIFNwYWluIGluIHRoZSAgV2VzdGVybiBNZWRpdGVycmFuZWFuIHNlYSwgbmVhciB0aGUgZWFzdGVybiBjb2FzdCBvZiB0aGUgIEliZXJpYW4gcGVuaW5zdWxhLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean Sea ",
        "option2" : " Black Sea ",
        "option3" : " Baltic Sea ",
        "option4" : " North Sea "
      }
    },
    {
      "index" : 64,
      "question" : "Which one of the following pairs is not correctly matched?  ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY0",
      "description" : "TWFuYWd1YSBpcyB0aGUgY2FwaXRhbCBvZiBOaWNhcmFndWEsIG5vdCBCYWxtb3Bhbi4gIEJhbG1vcGFuIGlzIHRoZSBjYXBpdGFsIGNpdHkgb2YgQmFsaXplLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Bahamas: Nassau ",
        "option2" : " Costa Rica: San Jose ",
        "option3" : " Nicaragua: Balmopan ",
        "option4" : " Dominican Republic: Santo Domingo "
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following statements:  1. The Axis of the earth's magnetic field is inclined at 23 and half to the geographic axis of the earth. 2. The earth's magnetic pole in the Northern Hemisphere is located on a Peninsula in Northern Canada. 3. The earth's magnetic equator passes through Thumba in South India. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY1",
      "description" : "RWFydGggbWFnbmV0aWMgZmllbGQgaXMgaW5jaGluZWQgYmV0d2VlbiAtOTDCsCB0byA5MMKwLiBJbiAgdGhlIG5vcnRoZXJuIGhlbWlzcGhlcmUgaXQgcG9pbnRzIGRvd253YXJkcyBhbmQgdXB3YXJkICBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2 and 3 ",
        "option3" : " 2 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements:  1. Total land area of earth is approximately 1475 lakh square kilometers. 2. Ratio of land area to water area of earth is approximately 1 : 4. 3. Maximum percentage of earth's water is in the Pacific Ocean. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY2",
      "description" : "VG90YWwgbGFuZCBhcmVhIGlzIDE0ODIyNjAwMCBrbTIgc3F1YXJlIGtpbG9tZXRlcnMuIFNvLCAgdGhlIHJhdGlvIG9mIGxhbmQgYXJlYSB0byB3YXRlciBhcmVhIG9mIGVhcnRoIGlzIGFwcHJveGltYXRlbHkgIDEgOiAzLiBUaGUgUGFjaWZpYyBPY2VhbiBpcyB0aGUgbGFyZ2VzdCBvY2Vhbiwgc28gbWF4aW11bSAgcGVyY2VudGFnZSBvZiBlYXJ0aCdzIHdhdGVyIGlzIHByZXNlbnQgaW4gaXQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 ",
        "option2" : " 2 and 3 ",
        "option3" : " 1 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 67,
      "question" : "In which one of the following oceans Diamantine Trench is situated?  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY3",
      "description" : "RGlhbWFudGluZSBUcmVuY2ggaXMgaXN0dWF0ZWQgaW4gc291dGgtZWFzdCBwYXJ0IG9mICBJbmRpYW4gT2NlYW4uIFRoZSBkZXB0aCBvZiBEaWFtYW50aW5lIFRyZW5jaCBpcyAgODA0NyBtLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Pacific Ocean ",
        "option2" : " Atlantic Ocean ",
        "option3" : " Indian Ocean ",
        "option4" : " Arctic Ocean "
      }
    },
    {
      "index" : 68,
      "question" : "Assertion (A): To orbit around the Sun the planet Mars takes lesser time than the time taken by the earth. Reason (R) : The diameter of the planet Mars is less than that of earth.   B 6 Codes: ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY4",
      "description" : "QSBpcyBpbmNvcnJlY3QgYXMgdGhlIG1hcnMgcmV2b2x1dGlvbiByb3VuZCB0aGUgc3VuICB0YWtlcyAxLjg4IHllYXJzIG9mIEVhcnRoJ3MgcmV2b2x1dGlvbi4gVGhlIGRpYW1ldHJlIG9mIGVhcnRoICBpcyBhbG1vc3QgZG91YmxlICB0byB0aGUgZGlhbWV0ZXIgb2YgbWFycy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Both 'A' and 'R' are individually true and 'R' is the  correct explanation of 'A' . ",
        "option2" : " Both 'A' and 'R' are individually true but 'R' is not the  correct explanation of 'A'. ",
        "option3" : " 'A' is true but 'R' is false. ",
        "option4" : " 'A' is false but 'R' is true. "
      }
    },
    {
      "index" : 69,
      "question" : "What is the average distance (approximate) between the sun and the earth?  ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDY5",
      "description" : "VGhlIGFjdHVhbCBhdmVyYWdlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHN1biBhbmQgdGhlICBlYXJ0aCBpcyAxNTIgw5cgMTA2IGttIHdoaWNoIGlzIG5lYXIgdG8gMTUwIMOXIDEwNiBrbS4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 70 × 105 km ",
        "option2" : " 100 × 105 km ",
        "option3" : " 110 × 106 km ",
        "option4" : " 150 × 106 km "
      }
    },
    {
      "index" : 70,
      "question" : "Consider the following statements:  1. Either of the two belts over the oceans at about 30° to 35° N and S Latitudes is known as Horse latitude. 2. Horse latitudes are low pressure belts. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcw",
      "description" : "VGhlIGhvcnNlIGxhdGl0dWRlcyBhcmUgbG9jYXRlZCBiZXR3ZWVuIGxhdGl0dWRlIDMwwrAtICAzNcKwIG5vcnRoIGFuZCBzb3V0aCBvZiB0aGUgZXF1YXRvci4gVGhlIHJlZ2lvbiBsaWVzIGluIGFuICBhcmVhIHdoZXJlIHRoZXJlIGlzIGEgcmlkZ2Ugb2YgaGlnaCBwcmVzc3VyZSB0aGF0IGNpcmNsZXMgdGhlICBlYXJ0aC4gVGhlIHJpZGdlIG9mIGhpZ2ggcHJlc3N1cmUgaXMgYWxzbyBjYWxsZWQgYSBzdWItdHJvcGljYWwgIGhpZ2guIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements:  1. Annual range of temperature is greater in the Pacific Ocean than that in the Atlantic Ocean. 2. Annual range of temperature is greater in the Northern Hemisphere than that in the Southern Hemisphere. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcx",
      "description" : "VGhlIG1heGltdW0gYW5kIG1pbmltdW0gYW5udWFsIHRlbXBlcmF0dXJlcyBvZiAgT2NlYW4gd2F0ZXIgYXJlIHJlY29yZGVkIGluIEF1Z3VzdCBhbmQgIEZlYnJ1YXJ5IHJlc3BlY3RpdmVseSBpbiB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZS4gIFRoZSBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUgaXMgaGlnaGVyIGluIHRoZSBlbmNsb3NlZCAgc2VhcyB0aGFuIGluIHRoZSBvcGVuIHNlYS4gIFRoZSBBdGxhbnRpYyBPY2VhbiByZWNvcmRzIHJlbGF0aXZlbHkgaGlnaGVyIGFubnVhbCByYW5nZSAgb2YgdGVtcGVyYXR1cmUgdGhhbiB0aGUgUGFjaWZpYyBPY2Vhbi4gIFNpbmNlIHRoZSBOb3J0aGVybiBoZW1pc3BoZXJlIGhhcyBtb3JlIGxhbmRtYXNzIGFzICBjb21wYXJlZCB0byB0aGUgU291dGhlcm4gaGVtaXNwaGVyZSwgdGhlIGFubnVhbCByYW5nZSBvZiAgdGVtcGVyYXR1cmUgd2lsbCBiZSBncmVhdGVyIGluIG5vcnRoZXJuIGhlbWlzcGhlcmUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements:  l. Albedo of an object determines its visual brightness when viewed with reflected light. 2. Albedo of Mercury is much greater than the albedo of the Earth. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcy",
      "description" : "QWxiZWRvIGlzIHRoZSBmcmFjdGlvbiBvZiB0aGUgaW5jaWRlbnQgc3VubGlnaHQgdGhhdCBpcyAgcmVmbGVjdGVkLiBXaGVuIGFuIG9iamVjdCByZWZsZWN0cyBtb3N0IG9mIHRoZSBsaWdodCB0aGF0IGhpdHMgIGl0IGFuZCBsb29rcyBicmlnaHQgdGhlbiBpdCBoYXMgaGlnaCBhbGJlZG8uIEFsYmVkbyBvZiBtZXJjdXJ5ICBpcyAwLjEgYW5kIHRoYXQgb2YgdGhlIGVhcnRoIGlzIDAuMzAuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 73,
      "question" : "For India, China, UK and USA, which one of the following is the correct sequence of the median age of their population?  ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDcz",
      "description" : "IDAgMTAgMjAgMzAgNDAgNTAgNjAgIEphcGFuICBJdGFseSAgU2luZ2Fwb3JlICBDemVjaCBSZXAgIFJ1c3NpYSAgR2VybWFueSAgRnJhbmNlICBDaGluYSAgQnJpdGFpbiAgTWV4aWNvICBCcmF6aWwgIEluZG9uZXNpYSAgVW5pdGVkIFN0YXRlcyAgSW5kaWEgIFBoaWxpcHBpbmVzICBQYWtpc3RhbiAgTmlnZXJpYSAgTWVkaWFuIGFnZSogb2YgdGhlIHBvcHVsYXRpb24gIDIwMDAgMjA1MCBmb3JlY2FzdCAgWWVhcnMgICogQWdlIGF0IHdoaWNoIDUwJSBvZiB0aGUgcG9wdWxhdGlvbiAgICAgaXMgb2xkZXIgYW5kIDUwJSBpcyB5b3VuZ2VyICBTb3VyY2U6IFVOICAgRm9yIEluZGlhLCBDaGluYSwgVUsgYW5kIFVTQSwgdGhlIGNvcnJlY3Qgc2VxdWVuY2Ugb2YgdGhlICBNZWRpYW4gYWdlIG9mIHRoZWlyIHBvcHVsYXRpb24gaXMgIEluZGlhIENoaW5hIFVTQSBVSzwgPCA8IA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " China < India < UK < USA ",
        "option2" : " India < China < USA< UK ",
        "option3" : " China < India < USA< UK ",
        "option4" : " India < China < UK < USA "
      }
    },
    {
      "index" : 74,
      "question" : "In order of their distances from the Sun, which of the following planets lie between Mars and Uranus?     ",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc0",
      "description" : "SnVwaXRlciBhbmQgU2F0dXJuIGFyZSBsb2NhdGVkIGJldHdlZW4gTWFycyBhbmQgIFVyYW51cy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Earth and Jupiter ",
        "option2" : " Jupiter and Saturn ",
        "option3" : " Saturn and Earth ",
        "option4" : " Saturn an Neptune "
      }
    },
    {
      "index" : 75,
      "question" : "Which one of the following planets has largest number of natural satellites or moons?  ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc1",
      "description" : "SnVwaXRlciBoYXMgbWF4aW11bSBtb29ucyBhY2NvdW50aW5nIHRvIDYzIHdoZXJlYXMgIFNhdHVuIGhhcyA2MSwgTWFycyBoYXMgMiBhbmQgVmVudXMgaGFzIG5vbmUuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Jupiter ",
        "option2" : " Mars ",
        "option3" : " Saturn ",
        "option4" : " Venus "
      }
    },
    {
      "index" : 76,
      "question" : "In the structure of planet Earth, below the mantle, the core is mainly made up of which one of the following?         ",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc2",
      "description" : "VGhlIGNvcmUgb2YgZWFydGggaXMgbWFkZSB1cCBvZiBuaWNrbGUgYW5kIGlyb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Aluminium ",
        "option2" : " Chromium ",
        "option3" : " Iron ",
        "option4" : " Silicon "
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements :  1. On the planet Earth, the fresh water available for use amounts to about less than 1% of the total water found. 2. Of the total fresh water found on the planet Earth 95% is bound up in polar ice caps and glaciers. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc3",
      "description" : "T24gdGhlIGVhcnRoLCB0aGUgZnJlc2ggd2F0ZXIgYXZhaWxhYmxlIGZvciB1c2UgYW1vdW50cyAgdG8gYWJvdXQgbGVzcyB0aGFuIDElIG9mIHRoZSB0b3RhbCB3YXRlciBhbmQgaXQncyA2OC43JSBpcyAgYm91bmQgdXAgaW4gcG9sYXIgaWNlIGFuZCBnbGFjaWVycy4gIEUgIEIgIEQgIF84ICAzNCAgMiAgUGh5c2ljYWwgR2VvZ3JhcGh5IEIgMTMg",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 78,
      "question" : "A geographic area with an altitude of 400 metres has following characteristics.  Month J  F  M A M  J  J  A S  O  N  D Average  maximum  temp °C 31 31 31 31 30 30 29 28 29 29 30 31 Average  minimum  temp °C 21 21 21 21 21 21 20 20 20 20 20 20 Rainfall  (mm) 51 85 188 158 139 121 134 168 185 221 198 86 If this geographic area were to have a natural forest, which one of the following would it most likely be? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc4",
      "description" : "VHJvcGljYWwgcmFpbmZvcmVzdHMgYXJlIHdhcm0gYW5kIGh1bWlkLiBUaGUgIHRlbXBlcmF0dXJlIHJhbmdlcyBmcm9tIDIxIHRvIDMwIGRlZ3JlZSBjZWxzaXVzICg3MCB0byA4NcKwRikgIFRoZSBhdmVyYWdlIGFubnVhbCB0ZW1wZXJhdHVyZSBvZiB0cm9waWNhbCByYWluZm9yZXN0cyBpcyAgYWJvdmUgMjDCsEMuICBUaGUgdHJvcGljYWwgcmFpbmZvcmVzdHMgcmVjZWl2ZSBhbm51YWwgcHJlY2lwaXRhdGlvbiBhbW91bnRzICBvZiA2MCB0byAgMTYwIGluY2hlcy4gKDE1MiB0byA0MDYgY20pLiBTb21lIHJhaW5mb3Jlc3RzIGluIHRoZSAgd29ybGQgZXhwZXJpZW5jZXMgYW5udWFsIHJhaW5mYWxsIGFtb3VudHMgb2YgYWxtb3N0IDQwMCAgaW5jaGVzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Moist temperate coniferous forest ",
        "option2" : " Montane subtropical forest ",
        "option3" : " Temperate forest ",
        "option4" : " Tropical rain forest "
      }
    },
    {
      "index" : 79,
      "question" : "A new type of El Nino called El Nino Modoki appeared in the news. In this context, consider the following statements:  1. Normal El Nino forms in the Central Pacific Ocean whereas El Nino Modoki forms in Eastern Pacific Ocean 2. Normal El Nino results in diminished hurricanes in the Atlantic Ocean but El Nino Modoki results in a greater number of hurricanes with greater frequency. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDc5",
      "description" : "Tm9ybWFsIEVsIE5pbm8gZm9ybXMgaW4gc291dGgtZWFzdGVybiBQYWNpZmljIHdoZXJlYXMgIGFzIEVsIE5pbm8gTW9kb2tpIGZvcm1zIGluIGNlbnRyYWwgUGFjaWZpYyBhbmQgY2F1c2VzIGdyZWF0ZXIgIG51bWJlciBvZiBodXJyaWNhbmVzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 80,
      "question" : "Which one of the following reflects back more sunlight as compared to other three?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgw",
      "description" : "VGhlIEFsYmVkbyBvZiBTbm93IGlzIGhpZ2hlc3QuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Sand desert ",
        "option2" : " Paddy crop ",
        "option3" : " Land covered with fresh snow ",
        "option4" : " Prairie land "
      }
    },
    {
      "index" : 81,
      "question" : "A geographic region has the following distinct characteristics:  1. Warm and dry climate 2. Mild and wet winter 3. Evergreen Oak trees The above features are distinct characteristics of which one of the following regions? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgx",
      "description" : "TWVkaXRlcnJpYW4gY2xpbWF0ZSBoYXZlIG1pbGQsIHJhaW55IHdpbnRlciBhbmQgaG90LCAgZHJ5IHN1bW1lcnMgYW5kIEV2ZXJncmVlbiwgT2FrIHRyZWVzLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Mediterranean ",
        "option2" : " Eastern China ",
        "option3" : " Central Asia ",
        "option4" : " Atlantic coast of North America "
      }
    },
    {
      "index" : 82,
      "question" : "What causes wind to deflect toward left in the Southern Hemisphere?  ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5fDgy",
      "description" : "Um90YXRpb24gb2YgdGhlIGVhcnRoIGNhdXNlcyB3aW5kIHRvIGRlZmxlY3QgdG93YXJkcyAgbGVmdCBpbiB0aGUgU291dGhlcm4gSGVtaXNwaGVyZS4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxHZW9ncmFwaHl8UGh5c2ljYWwgR2VvZ3JhcGh5",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Temperature ",
        "option2" : " Magnetic field ",
        "option3" : " Rotation of the earth ",
        "option4" : " Pressure "
      }
    },
    {
      "index" : 83,
      "question" : "If a tropical rain forest is removed, it does not regenerate quickly as compared to a tropical deciduous forest. This is because  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Mw==",
      "description" : "VGhlIHNvaWxzIG9mIHRyb3BpY2FsIHJhaW5mb3Jlc3QgYXJlIHJlbGF0aXZlbHkgcG9vciBpbiAgbnV0cmllbnRzLiBEdWUgdG8gdG9ycmVudGlhbCByYWlucyBtb3N0IG9mIHRoZSBudXRyaWVudHMgIHdhc2hlZCBvdXQgb2YgdGhlIHNvaWwgYW5kIHRoZSBzb2lscyBjb250YWluIGxlc3Mgb3JnYW5pYyAgbWF0dGVyIHRoYW4gdGhlIHRyb3BpY2FsIGRlY2lkdW91cyBmb3Jlc3RzLiBOdXRyaWVudHMgaW4gdGhlICBzb2lsIGFyZSBvZnRlbiBpbiBmb3JtcyB0aGF0IGFyZSBub3QgYWNjZXNzaWJsZSBieSBwbGFudHMsICB1bmxpa2UgdHJvcGljYWwgZGVjaWR1b3VzIGZvcmVzdHMgd2hlcmUgbWFqb3IgbnV0cmllbnRzICByZW1haW4gaW4gdGhlIHNvaWwuIFRodXMgaWYgYSB0cm9waWNhbCByYWluIGZvcmVzdCBpcyByZW1vdmVkIGl0ICBkb2VzIG5vdCByZWdlbmVyYXRlIHF1aWNrbHkgYXMgY29tcGFyZWQgdG8gYSB0cm9waWNhbCAgZGVjaWR1b3VzIGZvcmVzdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " the soil of rain forest is deficient in nutrients ",
        "option2" : " propagules of the trees in a rain forest have poor viability ",
        "option3" : " the rain forest species are slow-growing ",
        "option4" : " exotic species invade the fertile soil of rain forest. "
      }
    },
    {
      "index" : 84,
      "question" : "A layer in the Earth's atmosphere called ionosphere facilities radio communication. Why ? 1. The presence of ozone causes the reflection of radio waves to earth. 2. Radio waves have a very long wavelength. E B D _8 34 2 Physical Geography B 7 Which of the statements given above is/are correct? (a) 1 only (b) 2 only   ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4NA==",
      "description" : "U3RhdGVtZW50IDEgaXMgd3JvbmcsIGlvbm9zcGhlcmUgY29udGFpbnMgY2hhcmdlZCAgcGFydGljbGVzIGR1ZSB0byB3aGljaCBlbGVjdHJvbWFnbmV0aWMgcmFkaW8gd2F2ZXMgZ2V0cyAgcmVmbGVjdGVkIGFuZCBjb21tdW5pY2F0aW9uIGJlY29tZXMgcG9zc2libGUuIE96b25lIGlzICBmb3VuZCBtYWlubHkgaW4gc3RyYXRvc3BoZXJlIGFuZCBpbiB0cmFjZXMgaW4gdHJvcG9zcGhlcmUuICBJdHMgbWFpbiBmdW5jdGlvbiBpcyBhYnNvcnB0aW9uIG9mIFVWIHJheXMuIFdoaWxlIHRoZSBpb25zICBnaXZlIHRoZSBpb25vc3BoZXJlIGl0cyBuYW1lLCBpdCBpcyB0aGUgZnJlZSBlbGVjdHJvbnMgdGhhdCAgZWZmZWN0IHRoZSByYWRpbyB3YXZlcyBhbmQgcmFkaW8gY29tbXVuaWNhdGlvbnMuIEFsc28gUmFkaW8gIHdhdmVzIGhhdmUgdGhlIGxvbmdlc3Qgd2F2ZSBsZW5ndGggaW4gdGhlIEVNIHNwZWN0cnVtLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  85. La Nina is suspected to have caused recent floods in  Australia. How is La Nina different from El Nino ?  1. La Nina is characterized by unusually cold ocean  temperature in equatorial Indian Ocean whereas El Nino  is characterized by unusually warm ocean temperature  in the equatorial Pacific Ocean.  2. El Nino has adverse effect on south-west monsoon of  India, but La Nina has no effect on monsoon climate.  Which of the statements given above is/are correct? "
      }
    },
    {
      "index" : 86,
      "question" : "What is difference between asteroids and comets ? 1. Asteroids are small rocky planetoids, while comets are formed of frozen gases held together by rocky and metallic material. 2. Asteroids are found mostly between the orbits of Jupiter and Mars, while comets are found mostly between Venus and Mercury. 3. Comets show a perceptible glowing tail, while asteroids do not.  Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Ng==",
      "description" : "Q29tZXRzIGZvdW5kIGJleW9uZCBOZXB0dXJlIGkuZS4gS3VwaWVyIGJlbHQuICBBc3Rlcm9pZHMgYXJlIHRpbnkgcGxhbmV0YXJ5IGJvZGllcyByZXZvbHZpbmcgYXJvdW5kICB0aGUgc3VuIGJldHdlZW4gdGhlIG9yYml0cyBvZiBKdXBpdGVyIGFuZCBNYXJzLiBXaGlsZSAgY29tZXRzIGFyZSBtb2RlIHVwIG9mIHNtYWxsIGljeSBwYXJ0aWNsZXMgYW5kIE5ldGVvcmljICBmcmFnbWVudHMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1,2 an 3 "
      }
    },
    {
      "index" : 87,
      "question" : "Westerlies in southern hemisphere are stronger and persistent than in northern hemisphere. Why?      1. Southern hemisphere has less landmass as compared to northern hemisphere. 2. Coriolis force is higher in southern hemisphere as compared to northern hemisphere. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4Nw==",
      "description" : "VGhlIHNwZWVkIG9mIHRoZXNlIHdpbmRzIGFyZSBoaWdoZXIgYW5kIHBlcnNpc3RlbmNlICBpbiBzb3V0aGVybiBoZW1pc3BoZXJlLiBUaGUgbGFuZCBtYXNzIGluIHNvdXRoZXJuICBoZW1pc3BoZXJlIGlzIGxlc3NlciBpbiBjb21wYXJpc29uIHRvIG5vcnRoZXJuIGhlbWlzcGhlcmUuICBBcyB0aGVzZSB3aW5kcyBjcm9zc2VzIHRoZSBsYW5kbWFzcyBpdHMgdmVsb2NpdHkgZGVjcmVhc2VzLiAgVGh1cyB0aGUgZWZmZWN0IG9mIHdlc3RlcmxpZXMgaXMgbGVzcyBvdmVyIG5vcnRoZXJuIGhlbWlzcGhlcmUgIHRoYW4gaW4gc291dGhlcm4gaGVtaXNwaGVyZS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 88,
      "question" : "What could be the main reason/reasons for the formation of African and Eurasian desert belt ?  1. It is located in the sub-tropical high pressure cells. 2. It is under the influence of warm ocean currents. Which of the statements given above is/are correct in this context ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4OA==",
      "description" : "SXQgaXMgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiBjb2xkIG9jZWFuIGN1cnJlbnQuIFNvIGdpdmVuICBzZWNvbmQgc3RhdGVtZW50IGlzIHdyb25nLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 89,
      "question" : "The jet aircrafts fly very easily and smoothly in the lower stratosphere. What could be the appropriate explanation ? 1. There are no clouds or water vapour in the lower stratosphere. 2. There are no vertical winds in the lower stratosphere. Which of the statements given above is/are correct in this context ?  ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw4OQ==",
      "description" : "SmV0IGZseSBpbiB0aGUgbG93ZXIgc3RyYXRvc2hwZXJlIHRvIGF2b2lkIHRoZSB0dXJidWxlbmNlLiAgVGhlcmUgYXJlIG5vIGNsb3VkcyBhbmQgdGhlIGFpciBpcyBkcnkgd2l0aCBsaXR0bGUgd2F0ZXIgdmFwb3VyLiAgVGhlcmUgYXJlIG5vIHZlcnRpY2FsIHdpbmRzIGluIHRoZSBsb3dlciBzdHJhdG8tc3BoZXJlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 90,
      "question" : "Which of the following is/are cited by the scientists as evidence/evidences for the continued expansion of universe? 1. Detection of microwaves in space                  2. Observation of redshift phenomenon in space 3. Movement of asteroids in space 4. Occurrence of supernova explosions in space Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5MA==",
      "description" : "VGhlIGNvc21pYyBtaWNyb3dhdmUgYmFja2dyb3VuZCAoQ01CKSBpcyB0aGUgIHRoZXJtYWwgcmFkaWF0aW9uIGxlZnQgb3ZlciBmcm9tIHRoZSAiQmlnIEJhbmciLiAgVGhlIENNQiBpcyB3ZWxsIGV4cGxhaW5lZCBhcyByYWRpYXRpb24gbGVmdCBvdmVyIGZyb20gYW4gIGVhcmx5IHN0YWdlIGluIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgdW5pdmVyc2UgYW5kIGl0cyAgZGlzY292ZXJ5IGlzIGNvbnNpZGVyZWQgYSBsYW5kbWFya3MgdGVzdCBvZiB0aGUgQmlnIEJhbmcgIG1vZGVsIG9mIHRoZSB1bml2ZXJzZS4gIFJlZCBzaGlmdCBhbmQgQmx1ZXNoaWZ0IGRlc2NyaWJlcyBob3cgbGlnaHQgY2hhbmdlcyBhcyAgb2JqZWN0cyBpbiBzcGFjZSAoc3VjaCBhcyBzdGFycyBvciBnYWxheGllcykgbW92ZSBjbG9zZXIgb3IgIGZhcnRoZXIgYXdheSBmcm9tIHVzLiBUaGUgY29uY2VwdCBpcyBrZXkgdG8gY2hhcnRpbmcgdGhlICB1bml2ZXJzZSdzIGV4cGFuc2lvbi4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 2 only ",
        "option3" : " 1, 3 and 4 ",
        "option4" : " None of the above can be cited as evidence "
      }
    },
    {
      "index" : 91,
      "question" : "Consider the following factors:  1.    Rotation of the Earth 2.    Air pressure and wind 3.    Density of ocean water 4.    Revolution of the Earth Which of the above factors influence the ocean currents? ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5MQ==",
      "description" : "IDEuICAgIFJvdGF0aW9uIG9mIHRoZSBFYXJ0aCAgMi4gICAgQWlyIHByZXNzdXJlIGFuZCB3aW5kICAzLiAgICBEZW5zaXR5IG9mIG9jZWFuIHdhdGVyLiBSZXZvbHV0aW9uIGhhcyBubyBpbXBhY3Qgb24gIG9jZWFuIGN1cnJlbnRzLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "    1 and 2 only ",
        "option2" : "    1, 2 and 3 ",
        "option3" : "    1 and 4 ",
        "option4" : "    2, 3 an 4 "
      }
    },
    {
      "index" : 92,
      "question" : "Normally, the temperature decreases with the increase in height from the Earth's surface, because                1. the atmosphere can be heated upwards only from the Earth's surface 2. there is more moisture in the upper atmosphere 3. the air is less dense in the upper atmosphere Select the correct answer using the codes given below: ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Mg==",
      "description" : "QXRtb3NwaGVyZSBpcyBoZWF0ZWQgYnkgaW5mcmFyZWQgcmFkaWF0aW9uLCBNb2lzdHVyZSAgaXMgbW9yZSBpbiBsb3dlciBhdG1vc3BoZXJlLiBJbiB0aGUgdXBwZXIgYXRtb3NwaGVyZSBBaXIgaXMgIGxlc3MgZGVuc2Ugd2hpY2ggaG9sZCBsZXNzIGhlYXQgdGh1cyB0ZW1wZXJhdHVyZSBpcyBsb3cuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 93,
      "question" : "Which one of the following is the characteristic climate of the Tropical Savannah Region?                                ",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Mw==",
      "description" : "U2F2YW5uYWggY292ZXJzIGFwcHJveGltYXRlbHkgMjAlIG9mIHRoZSBFYXJ0aCdzIGxhbmQgIGFyZWEuIFRoZSBsYXJnZXN0IGFyZWEgb2YgU2F2YW5uYWggaXMgaW4gQWZyaWNhLiBUaGUgdHJvcGljYWwgIFNhdmFubmFoIHJlZ2lvbiBoYXMgYSBkZWZpbml0ZSBkcnkgYW5kIHdldCBzZWFzb24uICBTYXZhbm5haCBncmFzc2xhbmRzIGFyZSBtdWNoIHJpY2hlciBpbiBodW11cyB0aGFuIHRoZSAgZXF1YXRvcmlhbCBmb3Jlc3RzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Rainfall throughout the year ",
        "option2" : " Rainfall in winter only ",
        "option3" : " An extremely short dry season ",
        "option4" : " A definite dry and wet season "
      }
    },
    {
      "index" : 94,
      "question" : "Which one of the following pairs is correctly matched? Geographical Feature Region               ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5NA==",
      "description" : "QXRsYXMgbW91bnRhaW4gcmFuZ2VzIGFyZSBzaXR1YXRlZCBpbiB0aGUgbm9ydGggd2VzdGVybiAgcGFydCBvZiBBZnJpY2EuIFRoZXkgZXh0ZW5kIGFsbW9zdCAyMDAwIGttLiBUaGV5IHBhc3MgIHRocm91Z2ggTW9yb2NjbywgQWxnZXJpYSBhbmQgVHVuaXNpYS4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Abyssinian Plateau : Arabia ",
        "option2" : " Atlas Mountains : North-Western Africa ",
        "option3" : " Guiana Highlands : South-Western Africa ",
        "option4" : " Okavango Basin : Patagonia "
      }
    },
    {
      "index" : 95,
      "question" : "Variations in the length of daytime and nighttime from season to season are due to  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5NQ==",
      "description" : "VmFyaWF0aW9ucyBpbiB0aGUgbGVuZ3RoIG9mIGRheXRpbWUgYW5kIG5pZ2h0dGlvbiBmcm9tICBzZWFzb24gdG8gc2Vhc29uIGFyZSBkdWUgdG8gdGhlIHJldm9sdXRpb24gb2YgdGhlIGVhcnRoIG9uIGEgIHRpbHRlZCBheGlzLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " the earth's rotation on its axis ",
        "option2" : " the earth's revolution round the sun in an elliptical  manner ",
        "option3" : " latitudinal position of the place ",
        "option4" : " revolution of the earth on a tilted axis. "
      }
    },
    {
      "index" : 96,
      "question" : "On the planet earth, most of the freshwater exists as ice caps and glaciers. Out of the remaining freshwater, the largest proportion  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Ng==",
      "description" : "T3V0IG9mIGFsbCB0aGUgd2F0ZXIgb24gRWFydGgsIFNhbGluZSB3YXRlciBpbiBvY2VhbnMsICBzZWFzIGFuZCBzYWxpbmUgZ3JvdW5kd2F0ZXIgbWFrZSB1cCBhYm91dCA5NyUgIG9mIGl0LiBPbmx5ICAyLjUgLSAyLjc1JSBpcyBmcmVzaCB3YXRlciwgaW5jbHVkaW5nIDEuNzUtMiUgIGZyb3plbiBpbiAgZ2xhY2llcnMsIGljZSBhbmQgc25vdywgMC41IC0gMC43NSUgIGFzIGZyZXNoIGdyb3VuZHdhdGVyICBhbmQgc29pbCBtb2lzdHVyZSBhbmQgbGVzcyB0aGFuIDAuMDElICBvZiBpdCBhcyBzdXJmYWNlIHdhdGVyICBpbiBsYWtlcywgU3dhbXBzIGFuZCByaXZlcnMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " is found in atmosphere as moisture and clouds ",
        "option2" : " is found in freshwater lakes and rivers ",
        "option3" : " exists as groundwater ",
        "option4" : " exists as soil moisture "
      }
    },
    {
      "index" : 97,
      "question" : "Consider the following pairs:  1. Electromagnetic radiation 2. Geothermal energy 3. Gravitational force 4. Plate movements 5. Rotation of the earth 6. Revolution of the earth Which of the above are responsible for bringing dynamic changes on the surface of the earth? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5Nw==",
      "description" : "RnJvbSBlbGVjdHJvbWFnbmV0aWMgcmFkaWF0aW9uIHRvIHJldm9sdXRpb24gb2YgdGhlICBlYXJ0aCwgZXZlcnl0aGluZyBpcyByZXNwb25zaWJsZSBmb3IgYnJpbmdpbmcgZHluYW1pYyAgY2hhbmdlcyBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgZWFydGguIEZvciBleGFtcGxlOiAgRWxlY3Ryb21hZ25ldGljIHJhZGlhdGlvbiAgYnJpbmdzICBjaGFuZ2VzIGluIHRoZSBmaWVsZCBvZiAgbWljcm93YXZlcywgd2F2ZWxlbmd0aHMgb2YgcmFkaW8sIFVWIHJheXMsIGluZnJhIHJlZCByYXlzLCAgWCByYXlzICBhbmQgZ2FtbWEgcmF5cy4gIEdlb3RoZXJtYWwgIGVuZXJneSBpcyAgdGhlICBoZWF0ICByZWNlaXZlZCBmcm9tIHRoZSBlYXJ0aCdzIGNvcmUuIFRoaXMgaGVhdCBjb250aW51b3VzbHkgZmxvd3MgIG91dHdhcmQuIEl0IHRyYW5zZmVycyB0byB0aGUgc3Vycm91bmRpbmcgbGF5ZXJzIG9mIHJvY2ssIHRoZSAgbWFudGxlLiBXaGVuIHRlbXBlcmF0dXJlIGFuZCBwcmVzc3VyZSBiZWNvbWVzIHZlcnkgaGlnaCAgc29tZSBtYW50bGUgcm9ja3MgbWVsdCBiZWNvbWluZyBtYWdtYS4gIEl0IHRoZW4gZWl0aGVyICBjb21lcyBvdXQgYXMgbGF2YSBvciAgaGVhdCB1cCB0aGUgbmVhcmJ5IHJvY2tzIGFuZCB3YXRlciAgd2hpY2ggY29tZXMgb3V0IGFzIGhvdCBzcHJpbmdzICBvciBnZXlzZXJzLiBHcmF2aXRhdGlvbmFsICAgQiAxNCAgZm9yY2UgaXMgY29uc3RhbnRseSB3b3JraW5nIG9uIGFsbCBwaHlzaWNhbCBib2RpZXMuIEl0IGlzIGdpdmluZyAgd2VpZ2h0cyB0byBvYmplY3RzIHdpdGggbWFzcyBhbmQgY2F1c2VzIHRoZW0gdG8gZmFsbCB0byB0aGUgIGdyb3VuZCB3aGVuIGRyb3BwZWQuIFBsYXRlIG1vdmVtZW50IGlzIGEgZHluYW1pYyBjaGFuZ2UgIG9uIHRoZSBzdXJmYWNlIG9mIHRoZSBlYXJ0aC4gSXQgZXhwbGFpbnMgbWFueSBhc3BlY3RzIG9mIHRoZSAgaW50ZXJyZWxhdGlvbnNoaXAgb2Ygdm9sY2Fub2VzLCBlYXJ0aHF1YWtlcywgY2xpbWF0ZSBjaGFuZ2UsICBhbmQgdGhlIGV2b2x1dGlvbiBvZiBsaWZlIGl0c2VsZi4gRXZlcnl0aGluZyBhYm91dCBvdXIgcGxhbmV0ICBpcyByZWxhdGVkIGVpdGhlciBkaXJlY3RseSBvciBpbmRpcmVjdGx5IHRvIHBsYXRlIHRlY3RvbmljLiAgUm90YXRpb24gY2F1c2VzIGRheSBhbmQgbmlnaHQuIFJldm9sdXRpb24gY2F1c2VzIHNlYXNvbnMsICBjaGFuZ2UgaW4gdGhlIGxlbmd0aCBvZiBkYXkgYW5kIG5pZ2h0LiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 4 only ",
        "option2" : " 1, 3, 5 and 6 only ",
        "option3" : " 2, 4, 5 and 6 only ",
        "option4" : " 1, 2, 3, 4, 5 an 6 "
      }
    },
    {
      "index" : 98,
      "question" : "The most important fishing grounds of the world are found in the regions where  ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5OA==",
      "description" : "VGhlIG1peGluZyBvZiB3YXJtIGFuZCBjb2xkIGN1cnJlbnQgaW4gdGhlIHJlZ2lvbiB3aGVyZSAgcGxhbmt0b25zIGFyZSBmb3VuZCwgaXMgZm9vZCBmb3IgZmlzaGVzLiBUaGUgdGVtcGVyYXR1cmUgaXMgIGp1c3QgcmlnaHQgZm9yIHRoZW0gdG8gc3Vydml2ZS4gIFRoZSB0ZW1wZXJhdHVyZSBpcyBqdXN0IHJpZ2h0IGZvciB0aGUgZ3Jvd3RoIG9mIGZpc2ggZm9vZCAgY2FsbGVkIHBsYW5rdG9ucy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " warm and cold atmospheric currents meet ",
        "option2" : " rivers drain out large amounts of freshwater into the sea ",
        "option3" : " warm and cold oceanic currents meet ",
        "option4" : " continental shelf is undulating "
      }
    },
    {
      "index" : 99,
      "question" : "Which of the following is/are unique characteristic/ characteristics of equatorial forests?  1. Presence of tall, closely set trees with crowns forming a continuous canopy 2. Coexistence of a large number of species 3. Presence of numerous varieties of epiphytes Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXw5OQ==",
      "description" : "VGhlIGNhbm9weSAgaXMgdGhlIHByaW1hcnkgbGF5ZXIgb2YgdGhlIGZvcmVzdCBmb3JtaW5nIGEgIHJvb2Ygb3ZlciB0aGUgdHdvIHJlbWFpbmluZyBsYXllcnMuIFRoZSBkZW5zZXN0IG9mIHRoZSAgYmlvZGl2ZXJzaXR5IGlzIGZvdW5kIGhlcmUgYWxvbmcgd2l0aCBhIGxhcmdlIHZhcmlldHkgb2YgIGVwaXBoeXRlcy4g",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 100,
      "question" : "The annual range of temperature in the interior of the continents is high as compared to coastal areas. What is/are the reason/reasons?  1. Thermal difference between land and water 2. Variation in altitude between continents and oceans 3. Presence of strong winds in the interior 4. Heavy rains in the interior as compared to coasts Select the correct answer using the codes given below. ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDA=",
      "description" : "VGhlIGZpcnN0IHN0YXRlbWVudCBpcyBjb3JyZWN0LiBPbmUgbWFqb3IgZmFjdG9yIGFmZmVjdGluZyAgdGhlIGRpc3RyaWJ1dGlvbiBvZiB0aGUgdGVtcGVyYXR1cmUgb2YgRWFydGggaXMgZGlzdHJpYnV0aW9uICBvZiAgTGFuZCAgYW5kICBPY2VhbnMuICBTaW5jZSAgdGhlcmUgIGlzICBtb3JlICBsYW5kICBpbiAgTm9ydGhlcm4gIEhlbWlzcGhlcmUgIGFuZCAgbW9yZSAgd2F0ZXJzICBpbiAgU291dGhlcm4gIGhlbWlzcGhlcmUgIGFuZCAgdGhlcmUgIGlzICBhICBiaWcgIGRpZmZlcmVuY2UgIGJldHdlZW4gIHRoZSAgc3BlY2lmaWMgIGhlYXQgIG9mICBsYW5kICBhbmQgIHdhdGVyOyAgdGhlICBsb3NzICBvZiAgaGVhdCAgZnJvbSAgdGhlICBjb250aW5lbnRzICBpcyAgYmlnZ2VyICB0aGFuICB0aGUgIG9jZWFucy4gIFRoZSAgY29udGluZW50cyAgZ2V0ICBoZWF0ZWQgIGZhc3RlciAgYW5kICBnZXQgIGNvb2xlZCAgZmFzdGVyICBpbiAgY29tcGFyaXNvbiAgdG8gIHRoZSAgT2NlYW5zLiBUaGlzIGlzIHRoZSByZWFzb24gdGhhdCB0aGUgdGVtcGVyYXR1cmVzIG9mIHRoZSAgT2NlYW5zIGFyZSBtb2RlcmF0ZSB3aGlsZSB0aGF0IG9mIGNvbnRpbmVudHMgaXMgZXh0cmVtZS4gIFRoZSBtb2RlcmF0aW5nIGVmZmVjdCBvbiB0ZW1wZXJhdHVyZSBvZiB0aGUgbGFuZCBkdWUgdG8gIHByb3hpbWl0eSBvZiB0aGUgc2VhcyBpcyBjYWxsZWQgTWFyaXRpbWUgaW5mbHVlbmNlLiBUaGUgIGluY3JlYXNpbmcgZWZmZWN0IG9uIHRlbXBlcmF0dXJlIG9mIHRoZSBsYW5kIGF0IGludGVyaW9yIG9mIHRoZSAgY29udGluZW50cyBpcyBjYWxsZWQgQ29udGluZW50YWwgSW5mbHVlbmNlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2, 3 an 4 "
      }
    },
    {
      "index" : 101,
      "question" : "'Climate is extreme, rainfall is scanty and the people used to be nomadic herders.'  The above statement best describes which of the following regions? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDE=",
      "description" : "VGhlIGNlbnRyYWwgQXNpYW4gc3RlcHBlcyBydW4gdGhyb3VnaCBLYXpha2hzdGFuLCAgVHVya21lbmlzdGFuLCBVemJla2lzdGFuIGFuZCBNb25nb2xpYS4gVGhlIGNsaW1hdGUgaGVyZSAgaXMgaGFyc2ggd2l0aCBkdXN0IHN0b3JtcywgbGl0dGxlIHRvIG5vIHJhaW5mYWxsIGFuZCB0ZW1wZXJhdHVyZSAgcmFuZ2luZyBmcm9tIC0gNCB0byA1MCBkZWdyZWUgQ2Vsc2l1cy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " African Savannah ",
        "option2" : " Central Asian Steppe ",
        "option3" : " North American Prairie ",
        "option4" : " Siberian Tunra "
      }
    },
    {
      "index" : 102,
      "question" : "Which of the following phenomena might have influenced the evolution of organisms?  1. Continental drift       2. Glacial cycles Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDI=",
      "description" : "Q29udGluZW50YWwgRHJpZnQgaGFzIGVmZmVjdGVkIHRoZSBldm9sdXRpb24gb2YgYW5pbWFscywgIHRoZSB3b3JsZCdzIGdlb2dyYXBoaWNhbCBwb3NpdGlvbnMgYW5kIHRoZSB3b3JsZCdzIGNsaW1hdGVzLiAgVGhlIHNwbGl0IG9mIHRoZSBvcmlnaW5hbCBzdXBlciBsYW5kIG1hc3MgUGFuZ2VhIGludG8gIEdvbmR3YW5hbGFuZCBhbmQgdGhlIGxhdXJhc2lhIGNyZWF0ZWQgIG5ldyBnZW9ncmFwaGljYWwvICBjbGltYXRpYyByZWdpb25zLiAgVGhlIHJlYXJyYW5nZW1lbnQgYW5kIGRpc3BsYWNlbWVudCBvZiBodWdlIGxhbmRtYXNzZXMgIGhhcyBoZWxwZWQgY3JlYXRlIHRoZSBkaXZlcnNpdHkgd2hpY2ggd2Ugc2VlIGluIG1vZGVybiBkYXkgIHNwZWNpZXMuICBUaGUgZmluYWwgc3RhZ2VzIG9mIGV2b2x1dGlvbiBvZiBHZW51cyBIb21vIG9jY3VycyBpbiB0aGUgIGxhc3QgMyBnbGFjaWFsIGN5Y2xlcy4g",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 103,
      "question" : "Consider the following statements                         1. The  winds  which  blow  between  30°  N  and  60°  S latitudes throughout the year are known as westerlies. 2. The moist air masses that cause winter rains in North- Western region of India are part of westerlies. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDM=",
      "description" : "VGhlIFdlc3RlcmxpZXMgIGFyZSBwcmV2YWlsaW5nIHdpbmRzIGZyb20gdGhlIHdlc3QgIHRvd2FyZCB0aGUgZWFzdCBpbiB0aGUgbWlkZGxlIGxhdGl0dWRlcyBiZXR3ZWVuIDMwIGFuZCA2MCAgZGVncmVlcyBsYXRpdHVkZS4gVGhleSBvcmlnaW5hdGUgZnJvbSB0aGUgaGlnaC1wcmVzc3VyZSBhcmVhcyAgaW4gdGhlIGhvcnNlIGxhdGl0dWRlcyBhbmQgdGVuZCB0b3dhcmRzIHRoZSBwb2xlcyBhbmQgc3RlZXIgIGV4dHJhIHRyb3BpY2FsIGN5Y2xvbmVzIGluIHRoaXMgZ2VuZXJhbCBtYW5uZXIuIFRoZSBtb2lzdCBhaXIgIG1hc3NlcyB0aGF0IGNhdXNlIHdpbnRlciByYWlucyBpbiBOb3J0aC1XZXN0ZXJuIHJlZ2lvbiBvZiAgSW5kaWEgYXJlIHBhcnQgb2Ygd2VzdGVybGllcy4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 104,
      "question" : "Tides occur in the oceans and seas due to which among the following?  1. Gravitational force of the Sun 2. Gravitational force of the Moon 3. Centrifugal force of the Earth Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDQ=",
      "description" : "VGlkZXMgYXJlIHRoZSByaXNlIGFuZCBmYWxsIG9mIHNlYSBsZXZlbHMgY2F1c2VkIGJ5IHRoZSAgY29tYmluZWQgZWZmZWN0cyBvZiBncmF2aXRhdGlvbmFsIGZvcmNlcyBleGVydGVkIGJ5IHRoZSAgTW9vbiwgU3VuLCBhbmQgcm90YXRpb24gb2YgdGhlIEVhcnRoLiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 105,
      "question" : "\"Each day is more or less the same, the morning is clear and bright with a sea breeze; as the Sun climbs high in the sky, heat mounts up, dark clouds form, then rain comes with thunder and lightning. But rain is soon over.\" Which of the following regions is described in the above passage?               ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDU=",
      "description" : "VGhlIHBhc3NhZ2UgcG9pbnRzIG91dCBlcXVhdG9yaWFsIHJlZ2lvbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Savannah ",
        "option2" : " Equatorial ",
        "option3" : " Monsoon ",
        "option4" : " Meiterranean "
      }
    },
    {
      "index" : 106,
      "question" : "In the South Atlantic and South-Eastern Pacific regions in tropical latitudes, cyclone does not originate. What is the reason?  ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDY=",
      "description" : "T25lIG9mIHRoZSBtYWluIGZhY3RvcnMgdGhhdCBpcyByZXNwb25zaWJsZSBmb3Igb3JpZ2luICBvZiB0cm9waWNhbCBjeWNsb25lcyBpbmNsdWRlIExhcmdlIHNlYSBzdXJmYWNlIHdpdGggIHRlbXBlcmF0dXJlIGhpZ2hlciB0aGFuIDI3wrAgQy4gQnV0IGluIHRoZSBTb3V0aCBBdGxhbnRpYyAgYW5kIFNvdXRoLUVhc3Rlcm4gUGFjaWZpYyByZWdpb25zIHRoZSBzZWEgc3VyZmFjZSAgdGVtcGVyYXR1cmVzIGFyZSBub3QgZW5vdWdoIHRvIGZvcm0gYSB0cm9waWNhbCBjeWNsb25lICBmb3JtYXRpb24gZHVlIHRvIGl0cyB0ZW5kZW5jeSB0byByZW1haW4gcmVsYXRpdmVseSBjb29sZXIgIGFuZCB0aGlzIGRvbWluYXRlcyBvdmVyIG90aGVyIGZhY3RvcnMgYW5kIHByZXZlbnQgYW55ICBjeWNsb25lIG9yaWdpbmF0aW9uIGluIHRoZSByZWdpb24uIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Sea surface temperatures are low ",
        "option2" : " Inter-Tropical Convergence Zone seldom occurs ",
        "option3" : " Coriolis force is too weak ",
        "option4" : " Absence of land in those regions "
      }
    },
    {
      "index" : 107,
      "question" : "What explains the eastward flow of the equatorial counter- current?  ",
      "questionId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeXwxMDc=",
      "description" : "VGhlIEVhcnRoJ3Mgcm90YXRpb24gb24gaXRzIGF4aXMgZXhwbGFpbnMgdGhlIGVhc3R3YXJkICBmbG93IG9mIHRoZSBlcXVhdG9yaWFsIGNvdW50ZXItY3VycmVudC4gSWYgdGhlIGVhcnRoIHdvdWxkICBoYXZlIGJlZW4gcm90YXRpbmcgZWFzdCB0byB3ZXN0LCB0aGUgcGlsZWQgdXAgd2F0ZXIgd291bGQgIGhhdmUgY29tZSBkb3duIG9uIHRoZSB3ZXN0IHNpZGUuIFRoZXJlZm9yZSwgZXNzZW50aWFsbHkgIGl0J3MgdGhlIGVhcnRoJ3Mgcm90YXRpb24gdGhhdCBleHBsYWlucyB0aGUgZWFzdHdhcmQgZmxvdyBvZiAgZXF1YXRvcmlhbCBjb3VudGVyIGN1cnJlbnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTUgLSBJXXxQYXBlciAtIEl8R2VvZ3JhcGh5fFBoeXNpY2FsIEdlb2dyYXBoeQ==",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The Earth's rotation on its axis ",
        "option2" : " Convergence of the two equatorial currents ",
        "option3" : " Difference in salinity of water ",
        "option4" : " Occurrence of the belt of calm near the equator "
      }
    },
    {
      "index" : 108,
      "question" : "Which of the following is/are tributary tributaries of Brahmaputra?  1. Dibang 2. Kameng 3. Lohit Select the correct answer using the code given below. ",
      "questionId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTA4",
      "description" : "VGhlIEJyYWhtYXB1dHJhIGVudGVycyBJbmRpYSBpbiB0aGUgc3RhdGUgb2YgIEFydW5hY2hhbCBQcmFkZXNoIGZyb20gaXRzIG9yaWdpbmFsIHNvdXJjZSBUaWJldCwgYW5kIGlzICBqb2luZWQgYnkgdGhlIERpYmFuZyBSaXZlciBhbmQgdGhlIExvaGl0IFJpdmVyIGF0IHRoZSBoZWFkICBvZiB0aGUgQXNzYW0gVmFsbGV5LiBJdCBpcyBqb2luZWQgaW4gU29uaXRwdXIgYnkgdGhlIEthbWVuZyAgUml2ZXIgKG9yIEppYSBCaG9yZWxpKS4gIEJyYWhtYXB1dHJhJ3MgbWFpbiBsZWZ0IGJhbmsgdHJpYnV0YXJpZXMsIHZpei4sIERpYmFuZyBvciAgU2lrYW5nIGFuZCBMb2hpdC4gVGhlIGltcG9ydGFudCByaWdodCBiYW5rIHRyaWJ1dGFyaWVzIGFyZSAgdGhlIFN1YmFuc2lyaSwgS2FtZW5nLCBNYW5hcyBhbmQgU2Fua29zaC4gIFRoZXJlZm9yZSwgYWxsIDMgY29ycmVjdC4gIFJlZi4gTkNFUlQgUGh5c2ljYWwgR2VvZ3JhcGh5IENsYXNzMTEsIENoLjMgRHJhaW5hZ2UgIHN5c3RlbSBQYWdlLCAyNiA=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTYtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2016,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 109,
      "question" : "With reference to 'Indian Ocean Dipole (IOD)' sometimes mentioned in the news while forecasting Indian monsoon, which of the following statements is/are correct?   1. IOD phenomenon is characterized by a difference in sea surface temperature between tropical Western Indian Ocean and tropical Eastern Pacific Ocean. 2. An IOD phenomenon can influence an El Nino's impact on the monsoon. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTA5",
      "description" : "ICgtKVRoZSBIaW5kdTogSW5kaWFuIE9jZWFuIERpcG9sZSAoSU9EKSBpcyBhbiBldmVudCAgd2hpY2ggdGhlIHdlc3Rlcm4gSW5kaWFuIE9jZWFuIGJlY29tZXMgYWx0ZXJuYXRlbHkgIHdhcm1lciBhbmQgdGhlbiBjb2xkZXIgdGhhbiB0aGUgZWFzdGVybiBwYXJ0IG9mIHRoZSBJbmRpYW4gIG9jZWFuLiBTbyBmaXJzdCBzdGF0ZW1lbnQgaXMgd3JvbmcuICAoLSlBIHBvc2l0aXZlIElPRCBsZWFkcyB0byBncmVhdGVyIG1vbnNvb24gcmFpbmZhbGwgYW5kICBtb3JlIGFjdGl2ZSAoYWJvdmUgbm9ybWFsIHJhaW5mYWxsKSBtb25zb29uIGRheXMgd2hpbGUgIG5lZ2F0aXZlIElPRCBsZWFkcyB0byBsZXNzIHJhaW5mYWxsIGFuZCBtb3JlIG1vbnNvb24gIGJyZWFrICBkYXlzICAobm8gIHJhaW5mYWxsKS4gIFNvICB5ZXMsICBJT0QgIGNhbiAgaW5mbHVlbmNlICBFbCAgTmlubydzIGltcGFjdCBvbiBNb25zb29uLiBTbyBzZWNvbmQgc3RhdGVtZW50IGlzIHJpZ2h0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTctSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2017,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 110,
      "question" : "Consider the following statements:  1. The Barren Island volcano is an active volcano located in the Indian territory. 2. Barren Island lies about 140 km east of Great Nicobar. 3. The last time the Barren Island volcano erupted was in 1991 and it has remained inactive since then. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEw",
      "description" : "QmFycmVuIElzbGFuZCB2b2xjYW5vIGJlY2FtZSBhY3RpdmUgYWdhaW4gaW4gTWFyY2gsICAxOTkxLiBBIHNlY29uZCBwaGFzZSBvZiBlcnVwdGlvbnMgc3RhcnRlZCBpbiAxOTk1LiBTbyBpdCAgbWVhbnMgdGhpcmQgc3RhdGVtZW50IGlzIHdyb25nLCBieSBlbGltaW5hdGlvbiwgd2UndmUgdGhlICBhbnN3ZXIgKGEpIG9ubHkgMS4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 ",
        "option3" : " 3 only ",
        "option4" : " 1 an 3 "
      }
    },
    {
      "index" : 111,
      "question" : "With reference to agricultural soils, consider the following statements :  1. A high content of organic matter in soil drastically reduces its water holding capacity. 2. Soil does not play any role in the Sulphur cycle. 3. Irrigation over a period of time can contribute to the salinization of some agricultural lands. Which of the statements given above is/are correct ? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEx",
      "description" : "VGhlIHByb2Nlc3Mgb2YgZGVjYXksIGFkZGVkIGJ5IGJhY3RlcmlhbCBhY3Rpb24sICB0cmFuc2Zvcm1zIG9yZ2FuaWMgbWF0dGVyIGludG8gaHVtdXMuIEh1bXVzIGVuaGFuY2VzICB3YXRlciByZXRlbnRpb24gY2FwYWNpdHkgb2YgdGhlIHNvaWwuIFNvLCAxIGlzIHdyb25nLiBCeSAgZWxpbWluYXRpb24gd2UgYXJlIGxlZnQgd2l0aCBBbnN3ZXIgKGIpOiAzIG9ubHkuIA==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 112,
      "question" : "Which of the following is/are the possible consequence/ s  of  heavy  sand  mining  in  riverbeds  ?  1. Decreased salinity in the river 2. Pollution of groundwater 3. Lowering of the water-table Select the correct answer using the code given below : ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEy",
      "description" : "U2FuZCBNaW5pbmcgd3JlY2tzIHRoZSBpbnRlcnRpZGFsIGFyZWEgYW5kIGNyZWF0ZXMgIHRoZSBpbW1pbmVudCBkYW5nZXIgb2Ygc2FsaW5lIHdhdGVyIGluZ3Jlc3MgaW50byBmcmVzaCAgd2F0ZXIuIiBNZWFuaW5nIHNhbGluaXR5IHdpbGwgaW5jcmVhc2UsIHNvIHN0YXRlbWVudCAxIGlzICB3cm9uZywgYnkgZWxpbWluYXRpb24gd2UndmUgYW5zd2VyIChiKSAyIGFuZCAzIG9ubHkuICBJbiB0aGlzIHF1ZXN0aW9uLCBmaXJzdCBzdGF0ZW1lbnQgaXMgd3JvbmcsIGFuZCB5b3UndmUgIHRvIGlkZW50aWZ5IHJpZ2h0IHN0YXRlbWVudHMuIFNvIGluIHJlYWwgZXhhbSBzdHJlc3MsICBzb21lIHN0dWRlbnRzIG1heSBoYXZlIG1hZGUgZXJyb3Igb2YgcmVhZGluZyAvIHRpY2tpbmcsICBhbmQgdGhleSdkIGhhdmUgdGlja2VkIHRoZSB3cm9uZyBvcHRpb24gQTogb25seSAxLiAgKHlvdSdyZSByaWdodCB0aGF0IGl0J3Mgd3Jvbmcgc3RhdGVtZW50LCBidXQgeW91J3JlIG5vdCAgYXNrZWQgdG8gdGljayB0aGUgd3Jvbmcgb25lLikgU28sIGJlIG1pbmRmdWwgb2YgdGlja2luZyAgaW4gT01SLiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1 ,2 an 3 "
      }
    },
    {
      "index" : 113,
      "question" : "Which of the following statements best describes \"carbon fertilization\"?  ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTEz",
      "description" : "U3R1ZGllcyBoYXZlIHNob3duIHRoYXQgaW5jcmVhc2VkIGNvbmNlbnRyYXRpb25zIG9mICBjYXJib24gZGlveGlkZSBpbmNyZWFzZSBwaG90b3N5bnRoZXNpcywgc3B1cnJpbmcgcGxhbnQgIGdyb3d0aC4uLlJlc3VsdHMgc2hvd2VkIHRoYXQgY2FyYm9uIGRpb3hpZGUgZmVydGlsaXphdGlvbiAgZXhwbGFpbnMgNzAgcGVyY2VudCBvZiB0aGUgZ3JlZW5pbmcgZWZmZWN0LiBbTkFTQSAyMDE2XSAgRSAgQiAgRCAgXzggIDM0ICAyICBQaHlzaWNhbCBHZW9ncmFwaHkgQiAxNSA=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Increased plant growth due to increased  concentration of carbon dioxide in the atmosphere ",
        "option2" : " Increased temperature of Earth due to increased  concentration of carbon dioxide in the atmosphere ",
        "option3" : " Increased acidity of oceans as a result of increased  concentration of carbon dioxide in the atmosphere ",
        "option4" : " Adaptation of all living beings on Earth to the climate "
      }
    },
    {
      "index" : 114,
      "question" : "Consider the following statements:  1. The Earth's magnetic field has reversed every few hundred thousand years. 2. When the Earth was created more than 4000 million years ago, there was 54% oxygen and no carbon dioxide. 3. When living organisms originated, they modified the early atmosphere of the Earth. Which of the statements given above is/are correct? ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE0",
      "description" : "TkNFUlQgQmlvbG9neSBDbGFzcyAxMiBwYWdlIDEyNzogJ1RoZXJlIHdhcyBubyAgYXRtb3NwaGVyZSBvbiBlYXJseSBlYXJ0aC4gV2F0ZXIgdmFwb3VyLCBtZXRoYW5lLCAgY2FyYm9uZGlveGlkZSBhbmQgYW1tb25pYSByZWxlYXNlZCBmcm9tIG1vbHRlbiBtYXNzICBjb3ZlcmVkIHRoZSBzdXJmYWNlLicgU28gIzIgaXMgd3JvbmcsIENPMiB3YXMgcHJlc2VudCwgIHdlIGFyZSBsZWZ0IHdpdGggKGEpIG9yIChjKS4gSW4gYm90aCBvcHRpb25zIGZpcnN0IHN0YXRlbWVudCAgaXMgY29ycmVjdCBidXQgZXhwZXJ0cyB3ZXJlIGRpdmlkZWQgb3ZlciB0aGlyZCBzdGF0ZW1lbnQtICBiZWNhdXNlIGVhcmx5IEVhcmx5IGF0bW9zcGhlcmUgb2YgZWFydGggaGFkIG5vIGZyZWUgIG94eWdlbiwgdGhlIChsaWZlKSBmb3JtcyB1bnRpbCB0aGVuIGNvdWxkIGF0IGJlc3QgYmUgb25seSAgJ2FuYWVyb2JpYycuIFNvIHRob3NlIGxpdmluZyBvcmdhbmlzbXMgZGlkIG5vdCBoYXZlICBjYXBhY2l0eSB0byBhbHRlciB0aGUgYXRtb3NwaGVyZSwgYXRsZWFzdCBub3QgaW4gYSBzaWduaWZpY2FudCAgbWFubmVyLiBBY2NvcmRpbmdseSwgc29tZSB0aWNrZWQgICdhJyB3aGlsZSBvdGhlcnMgdGlja2VkICAnYycuIFVQU0MgaGFzIGtlcHQgJ2MnIGFzIHRoZSBvZmZpY2lhbCBhbnN3ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 115,
      "question" : "On 21st June the sun  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE1",
      "description" : "TkNFUlQgQ2xhc3MgNiBDaDMsIHBhZ2UgMjA6ICAoLSlPbiAyMXN0IEp1bmUsIHRoZSBOb3J0aGVybiBIZW1pc3BoZXJlIGlzIHRpbHRlZCAgdG93YXJkcyB0aGUgc3VuLiBUaGUgcmF5cyBvZiB0aGUgc3VuIGZhbGwgZGlyZWN0bHkgb24gdGhlICBUcm9waWMgb2YgQ2FuY2VyLiBTbywgKGMpIGFuZCAoZCkgYXJlIHdyb25nLiAgKC0pUGxhY2VzIGJleW9uZCB0aGUgQXJjdGljIENpcmNsZSBleHBlcmllbmNlIGNvbnRpbnVvdXMgIGRheWxpZ2h0IGZvciBhYm91dCBzaXggbW9udGhzLiBTbyAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Does not set below the horizon at the Arctic circle ",
        "option2" : " Does not set below the horizon at Antarctic circle ",
        "option3" : " Shines vertically overhead at noon on the Equator ",
        "option4" : " Shines vertically overhead at the tropic of Capricorn "
      }
    },
    {
      "index" : 116,
      "question" : "Which of the following statements are correct about the deposits of methane hydrate?  1. Global warming might trigger the release of methane gas from these deposits. 2. Large deposits of 'methane hydrate' are found in Arctic Tundra and under the seafloor. 3. Methane in atmosphere oxidizes to carbon dioxide after a decade or two. Select the correct answer using the code given below: ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE2",
      "description" : "QXMgcGVyIHRoZSBOQVNBIHdlYnBhZ2U6ICAoLSlMYXJnZSBhbW91bnRzIG9mIG1ldGhhbmUgYXJlIGZyb3plbiBpbiBBcmN0aWMgdHVuZHJhICBzb2lscyBhbmQgaW4gbWFyaW5lIHNlZGltZW50cyBpbmNsdWRpbmcgZ2FzIGh5ZHJhdGVzLiBBcyAgRWFydGgncyBjbGltYXRlIHdhcm1zLCB0aGF0IG1ldGhhbmUgaXMgdnVsbmVyYWJsZSB0byAgcG9zc2libGUgcmVsZWFzZSBpbnRvIHRoZSBhdG1vc3BoZXJlLCB3aGVyZSBpdCBjYW4gYWRkIHRvICBnbG9iYWwgd2FybWluZy4gU28gMSBhbmQgMiBhcmUgY29ycmVjdC4gICgtKUluIE1ldGhhbmUgQ3ljbGUsIGV2ZXJ5IG1vbGVjdWxlIG9mIG1ldGhhbmUgdGhhdCAgZ29lcyBpbnRvIHRoZSBhdG1vc3BoZXJlIHJlbWFpbnMgdGhlcmUgZm9yIDggeWVhcnMgdW50aWwgIGl0IGlzIHJlbW92ZWQgYnkgb3hpZGF0aW9uIGludG8gY2FyYm9uIGRpb3hpZGUgKENPMikgYW5kICB3YXRlciAoSDJPKS4gU28sIDMgaXMgYWxzbyBjb3JyZWN0LiBUaGlzLCBhbnN3ZXIgKGQpOiBBbGwgIHRocmVlIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1  and 2  only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3 "
      }
    },
    {
      "index" : 117,
      "question" : "Why are dewdrops not formed on a cloudy night?  ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE3",
      "description" : "VGhlIGZhdm9yYWJsZSB3ZWF0aGVyIGVsZW1lbnRzIGZvciBkZXcgaW5jbHVkZSBjbGVhciAgc2tpZXMsIGxpZ2h0IHdpbmQsIGRlY2VudCBzb2lsIG1vaXN0dXJlLiBDbGVhciBza2llcyBhbGxvdyAgZm9yIHRoZSBtYXhpbXVtIHJlbGVhc2Ugb2YgbG9uZ3dhdmUgcmFkaWF0aW9uIHRvIHNwYWNlLiAgQ2xvdWR5IHNraWVzIHdpbGwgcmVmbGVjdCBhbmQgYWJzb3JiIHdoaWxlIHJlLWVtaXR0aW5nICBsb25nd2F2ZSByYWRpYXRpb24gYmFjayB0byB0aGUgc3VyZmFjZSBhbmQgdGhhdCBwcmV2ZW50cyAgYXMgbXVjaCBjb29saW5nIGZyb20gb2NjdXJyaW5nLiBTbyAoYikgaXMgdGhlIG1vc3QgIGFwcHJvcHJpYXRlIHJlYXNvbi4g",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Clouds absorb the radiation released from the Earth's  surface. ",
        "option2" : " Clouds reflect back the Earth's radiation. ",
        "option3" : " The Earth's surface would have low temperature on  cloudy nights. ",
        "option4" : " Clouds deflect the blowing wind to ground level. "
      }
    },
    {
      "index" : 118,
      "question" : "With reference to Ocean Mean Temperature (OMT), which of the following statements is/are correct?  1. OMT is measured up to a depth of 26°C isotherm which is 129 meters in the south-western Indian Ocean during January - March. 2. OMT collected during January March can be used in assessing whether the amount of rainfall in monsoon will be less or more than a certain long-term mean Select the correct answer using the code given below ",
      "questionId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHl8MTE4",
      "description" : "ICgtKU9NVCBpcyBtZWFzdXJlZCB1cCB0byBhIGRlcHRoIG9mIDI2IGRlZ3JlZSBDICBpc290aGVybS4gRHVyaW5nIEphbnVhcnktTWFyY2gsIHRoZSBtZWFuIDI2IGRlZ3JlZSBDICBpc290aGVybSBkZXB0aCBpbiB0aGUgU291dGh3ZXN0ZXJuIEluZGlhbiBPY2VhbiBpcyA1OSAgbWV0cmVzLiBTbywgIzEgaXMgd3JvbmcuICAoLSlTZWEgc3VyZmFjZSB0ZW1wZXJhdHVyZSAoU1NUKSBpcyByb3V0aW5lbHkgdXNlZCBmb3IgIHByZWRpY3Rpbmcgd2hldGhlciB0aGUgdG90YWwgYW1vdW50IG9mIHJhaW5mYWxsIHRoYXQgSW5kaWEgIHJlY2VpdmVzIGR1cmluZyB0aGUgbW9uc29vbiBzZWFzb24gd2lsbCBiZSBsZXNzIG9yIG1vcmUgIHRoYW4gdGhlIGxvbmctdGVybSBtZWFuLiBIb3dldmVyLCBvY2VhbiBtZWFuICB0ZW1wZXJhdHVyZSAoT01UKSBoYXMgYmV0dGVyIGFiaWxpdHkgdG8gcHJlZGljdCB0aGlzLCB0aGFuICBTU1QuIFNvLCAjMiBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMjAtSV18UGFwZXIgLSBJfEdlb2dyYXBoeXxQaHlzaWNhbCBHZW9ncmFwaHk=",
      "year" : 2020,
      "paper" : "Paper - I",
      "topic" : "Physical Geography",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    }
  ],
  "subject" : "Geography",
  "topic" : "Physical Geography",
  "year" : "0"
}
