{
  "testId" : "economic-&-social-development|indian-demographics-&-structure",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/pyqs/mrunal-pyqs/prelims/1995-2020-idisha-solved.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "According to the 1991 Census, the highest percentage ofpopulation in India is to be found in the age group of :",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE=",
      "description" : "VGhlIGhpZ2hlc3QgcGVyY2VudGFnZSBvZiBwb3B1bGF0aW9uIGluIEluZGlhIGluIDE5OTEgaXMgaW4gdGhlIGFnZSBncm91cCBvZiA1LTE0IHllYXJzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 60 years and above ",
        "option2" : " 35 to 55 years",
        "option3" : " 25 to 34 years ",
        "option4" : " 5 to 14 years"
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following pairs are correctly matched?1. Increase in-Monetary expansion2. Low import growth rate in India-Recession in Indianindustry3. Euro-issues-Shares held by Indian companies inEuropean countries4. Portfolio investment-Foreign institutional investors.Codes:",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI=",
      "description" : "RXVybyBpc3N1ZSBpbmNsdWRlcyBpc3N1ZSBvZiBBRFIgKEFtZXJpY2FuIERlcG9zaXRhcnkgUmVjZWlwdHMpIGFuZCBHRFIgKEdsb2JhbCBEZXBvc2l0YXJ5IFJlY2VpcHRzKS4gQSBzY2hlbWUgaGFzIGJlZW4gaW5pdGlhdGVkIGR1cmluZyAxOTkyIHVuZGVyIHdoaWNoIEluZGlhbiBjb21wYW5pZXMgYXJlIHBlcm1pdHRlZCB0byByYWlzZSBmb3JlaWduIGN1cnJlbmN5IHJlc291cmNlcyB0aHJvdWdoIGlzc3VlIG9mIEZvcmVpZ24gQ3VycmVuY3kgQ29udmVydGlibGUgQm9uZHMgKEZDQ0JzKSBhbmQvb3IgaXNzdWUgb2Ygb3JkaW5hcnkgZXF1aXR5IHNoYXJlcyB0aHJvdWdoIEdsb2JhbCBEZXBvc2l0YXJ5IFJlY2VpcHRzIChHRFJzKS9BbWVyaWNhbiBEZXBvc2l0YXJ5IFJlY2VpcHRzIChBRFJzKSB0byBmb3JlaWduIGludmVzdG9ycyBpLmUuIGluc3RpdHV0aW9uYWwgaW52ZXN0b3JzIG9yIGluZGl2aWR1YWxzIChpbmNsdWRpbmcgTlJJcykgcmVzaWRpbmcgYWJyb2FkLg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 ",
        "option2" : " 3 and 4",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following is true regarding the JawaharRozgar Yojana (JRY)? ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM=",
      "description" : "VGhvdWdoIHRoZSBwZW9wbGUgYmVsb3cgdGhlIHBvdmVydHkgbGluZSB3ZXJlIHRoZSB0YXJnZXQgZ3JvdXAgZm9yIGVtcGxveW1lbnQsIHRoZSBwcmVmZXJlbmNlIHdhcyB0byBiZSBnaXZlbiB0byB0aGUgU2NoZWR1bGVkIENhc3RlcywgU2NoZWR1bGVkIFRyaWJlcyBhbmQgZnJlZWQgYm9uZGVkIGxhYm91cmVycy4gVGhpcnR5IHBlcmNlbnQgb2YgdGhlIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcyB3ZXJlIHRvIGJlIHJlc2VydmVkIGZvciB3b21lbiBpbiBydXJhbCBhcmVhcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It was launched during the Prime Ministership of Indira Gandhi",
        "option2" : " It aims at creating one million jobs annually",
        "option3" : " The target group of JRY are the urban poor living below the poverty line",
        "option4" : " Under the scheme 30% of the employment generated"
      }
    },
    {
      "index" : 4,
      "question" : "The Narasimham Committee for financial sector Reformshas suggested reduction in ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ=",
      "description" : "TmFyYXNpbWhhbSBDb21taXR0ZWUgZm9yIEZpbmFuY2lhbCBTZWN0b3IgUmVmb3JtcyAoMTk5MSkgaGFzIHN1Z2dlc3RlZCByZWR1Y3Rpb24gaW4gU0xSLCBDUlIgYW5kIHByaW9yaXR5IHNlY3RvciBmaW5hbmNpbmcgcmVkdWNpbmcgaXQgZnJvbSA0MCUgdG8gMTAlLiBNb3N0IG9mIHRoZSBzdWdnZXN0aW9uIG9mIHRoZSBjb21taXR0ZWUgd2VyZSBub3QgaW1wbGVtZW50ZWQu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " SLR and CRR",
        "option2" : " SLR, CRR and Priority Sector Financing",
        "option3" : " SLR and Financing to capital goods sector",
        "option4" : " CRR, Priority Sector Financing and Financing to capital"
      }
    },
    {
      "index" : 5,
      "question" : "Corporation tax: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU=",
      "description" : "Q29ycG9yYXRpb24gdGF4IGlzIGEgZGlyZWN0IHRheCBsZXZpZWQsIGNvbGxlY3RlZCBhbmQgYXBwcm9wcmlhdGVkIGJ5IHRoZSBVbmlvbiBvciB0aGUgY2VudHJhbCBnb3Zlcm5tZW50LiBObyBwYXJ0IG9mIHRoaXMgdGF4IGNhbiBiZSBhc3NpZ25lZCB0byB0aGUgc3RhdGVzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " is levied and appropriated by the States",
        "option2" : " is levied by the Union and collected and appropriated by the States",
        "option3" : " is levied by the Union and shared by the Union and the States",
        "option4" : " is levied by the Union and belongs to it exclusively"
      }
    },
    {
      "index" : 6,
      "question" : "One of the reasons for India's occupational structureremaining more or less the same over the years has beenthat: ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDY=",
      "description" : "T3VyIGVjb25vbWljIHBsYW5uZXJzIGFyZSBub3QgZW1waGFzaXppbmcgZGV2ZWxvcG1lbnQgb2Ygc21hbGwgc2NhbGUgaW5kdXN0cmllcyBpbiB0aGVpciBwbGFuIHN0cmF0ZWdpZXMu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " investment pattern has been directed towards capital intensive industries",
        "option2" : " productivity in agriculture has been high enough to induce people to stay with agricultural",
        "option3" : " ceiling on land holdings have enabled more people to own land and hence their preference to stay with agriculture",
        "option4" : " people are largely unaware of the significance of"
      }
    },
    {
      "index" : 7,
      "question" : "The main reason for low growth rate in India, inspite of highrate of savings and capital formation is : ",
      "questionId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDc=",
      "description" : "Q2FwaXRhbCBvdXRwdXQgcmF0aW8gaXMgdGhlIGFtb3VudCBvZiBjYXBpdGFsIG5lZWRlZCB0byBwcm9kdWNlIG9uZSB1bml0IG9mIG91dHB1dC4gSXQgZXhwbGFpbnMgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGxldmVsIG9mIGludmVzdG1lbnQgYW5kIHRoZSBjb3JyZXNwb25kaW5nIGVjb25vbWljIGdyb3d0aCBsb3dlciBjYXBpdGFsIG91dHB1dCByYXRpbyBTaG93cyBwcm9kdWN0aXZpdHkgb2YgY2FwaXRhbCBhbmQgdGVjaG5vbG9naWNhbCBwcm9ncmVzcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1995,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " high birth rate",
        "option2" : " low level of foreign and",
        "option3" : " low capital output ratio",
        "option4" : " high capital output ratio"
      }
    },
    {
      "index" : 8,
      "question" : "Which one of the following is correct regarding stabilizationand structural adjustment as two components of the neweconomic policy adopted in India? ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDg=",
      "description" : "TmV3IEVjb25vbWljIFBvbGljeSB3YXMgYWRvcHRlZCBpbiAxOTkxIGJhc2VkIG9uIFJhby1NYW5tb2hhbiBtb2RlbC4gU3RhYmlsaXphdGlvbiBjb21wb25lbnQgb2YgYW55IGVjb25vbXkgaXMgZXNzZW50aWFsbHkgYSBzaG9ydC10ZXJtIHByb2dyYW1tZSB3aGlsZSB0aGUgc3RydWN0dXJhbCByZWFkanVzdG1lbnQgY29tcG9uZW50IGlzIGEgbG9uZyB0ZXJtIHByb2Nlc3Mu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Stabilization is a gradual, multi-step process while structural adjustment is a quick adaptation process",
        "option2" : " Structural adjustment is a gradual multi-step process, while stabilization is a quick adaptation process",
        "option3" : " Stabilization and structural adjustment are very similar and complimentary policies. It is difficult to separate one from the other",
        "option4" : " Stabilization mainly deals with a set of policies which"
      }
    },
    {
      "index" : 9,
      "question" : "One of the important goals of the economic liberalisationpolicy is to achieve full convertibility of the Indian rupee.This is being advocated because: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDk=",
      "description" : "VGhlIGZ1bGwgY29udmVydGliaWxpdHkgb2YgdGhlIEluZGlhbiBjdXJyZW5jeSBtZWFucyB0aGF0IHRoZSBydXBlZSBpcyBmcmVlbHkgZXhjaGFuZ2VhYmxlIGludG8gb3RoZXIgaW50ZXJuYXRpb25hbCBjdXJyZW5jaWVzIGFuZCB2aWNlIHZlcnNhLiBBbHNvLCB0aGlzIHdvdWxkIG1lYW4gdGhhdCBpbnRlcm5hdGlvbmFsIGludmVzdG9ycyBjYW4gYnV5IGFuZCBzZWxsIEluZGlhbiBhc3NldHMgYXQgd2lsbC4gQWZ0ZXIgMTk5NCwgdGhlIHJ1cGVlIGhhcyBiZWVuIHBhcnRpYWxseSBjb252ZXJ0aWJsZSB3aGljaCBtZWFucyB0aGF0IHRoZSBjdXJyZW5jeSBpcyBjaGFuZ2VkIGZyZWVseSBpbnRvIGZvcmVpZ24gY3VycmVuY3kgZm9yIGJ1c2luZXNzIGFuZCB0cmFkZSBleHBlbnNlcy4gQnV0IGl0IGNhbm5vdCBiZSBjb252ZXJ0ZWQgZnJlZWx5IGZvciBhY3F1aXJpbmcgb3ZlcnNlYXMgYXNzZXRzLiBFeHBlcnRzIGZlZWwgZnVsbCBjb252ZXJ0aWJpbGl0eSBvZiBydXBlZSB3b3VsZCBmYWNpbGl0YXRlIGdyb3d0aCBhbmQgaGlnaGVyIGZvcmVpZ24gaW52ZXN0bWVudHMu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " convertibility of the rupee will stabilize its exchange value against major currencies of the world",
        "option2" : " it will attract more foreign capital inflow in India",
        "option3" : " it will help to promote exports",
        "option4" : " it will help India secure loans from the world financial"
      }
    },
    {
      "index" : 10,
      "question" : "Given below are two statements, one labelled as Assertion(A) and the other labelled as Reason (R): Assertion (A) : Though India's national income has goneup several fold since 1947, there has been no markedimprovement in the per capita income level.Reason (R) : Sizeable proportion of the population of Indiais still living below the poverty line.In the context of the above two statements which one of thefollowing is correct?",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDEw",
      "description" : "VGhlcmUgaXMgbm8gcmVsYXRpb24gYmV0d2VlbiB0aGUgcHJvcG9ydGlvbiBvZiBwb3B1bGF0aW9uIG9mIEluZGlhIGxpdmluZyBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lIGFuZCBJbmNyZWFzZSBpbiBJbmRpYSdzIG5hdGlvbmFsIGluY29tZS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 11,
      "question" : "A redistribution of income in a country can be best broughtabout through: ",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDEx",
      "description" : "UHJvZ3Jlc3NpdmUgVGF4IGlzIGEgcHJvY2VzcyBpbiB3aGljaCBhcyB0aGUgaW5jb21lIG9mIGEgcGVyc29uIGluY3JlYXNlcywgcmF0ZSBvZiBpbmNvbWUgdGF4IG9uIHRoZSBpbmNvbWUgYWxzbyBnb2VzIHVwLiBSZWdyZXNzaXZlIEV4cGVuZGl0dXJlIGlzIGEgcHJvY2VzcyBpbiB3aGljaCBnb3Zlcm5tZW50IHNwZW5kaW5nIGRlY3JlYXNlcyB3aXRoIHRoZSBpbmNyZWFzZSBpbiBpbmNvbWUgb2YgcGVvcGxlIGFuZCBnb3Zlcm5tZW50IHRlbmRzIHRvIHNwZW5kIG1vcmUgb24gcG9vciBpbiBjb21wYXJpc29uIHRvIHJpY2ggcGVvcGxlLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " progressive taxation combined with progressive expenditure",
        "option2" : " progressive taxation combined with regressive expenditure",
        "option3" : " regressive taxation combined with regressive, expenditure",
        "option4" : " regressive taxation combined with progressive"
      }
    },
    {
      "index" : 12,
      "question" : "As per the 1991 Census, the average size of households interms of number of persons per household in respect of thegiven states follows the sequence (highest first, lowest last)",
      "questionId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDEy",
      "description" : "VXR0YXIgUHJhZGVzaCwgV2VzdCBCZW5nYWwsIEd1amFyYXQsIEtlcmFsYQ==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1996,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Haryana, Uttar Pradesh, Kerala, Tamil Nadu",
        "option2" : " Uttar Pradesh, West Bengal, Gujarat, Kerala",
        "option3" : " Gujarat, Haryana, Uttar Pradesh, West Bengal",
        "option4" : " Uttar Pradesh, West Bengal, Tamil Nadu, Kerala"
      }
    },
    {
      "index" : 13,
      "question" : "Human Development Index comprises literacy rates, lifeexpectancy at birth and ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDEz",
      "description" : "SERJIG9yIEh1bWFuIERldmVsb3BtZW50IEluZGV4IG1lYXN1cmVzIGFjaGlldmVtZW50cyBpbiB0ZXJtcyBvZiBsaWZlIGV4cGVjdGFuY3ksIGxpdGVyYWN5IGFuZCBhZGp1c3RlZCByZWFsIGluY29tZSAoc3RhbmRhcmQgb2YgbGl2aW5nKS4gRmlyc3QgSERSIGNhbGN1bGF0aW9ucyB3ZXJlIG1hZGUgaW4gMTk5MCBieSBNZWhib29iLXVsLUh1cS4=",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Gross National Product per head in the US dollars",
        "option2" : " Gross Domestic Product per head at real purchasing power",
        "option3" : " Gross National Product in US dollars",
        "option4" : " National Income per head in US dollars"
      }
    },
    {
      "index" : 14,
      "question" : "In India, inflation is measured by the: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE0",
      "description" : "V2hvbGVzYWxlIFByaWNlIEluZGV4IChXUEkpIGlzIGFuIGluZGV4IHVzZWQgYnkgdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSB0aWxsIDIwMTQgdG8gbWVhc3VyZSBpbmZsYXRpb24uIFdQSSBpcyB0aGUgcHJpY2Ugb2YgYSByZXByZXNlbnRhdGl2ZSBiYXNrZXQgb2Ygd2hvbGVzYWxlIGdvb2RzLiBJdCB0YWtlcyBhIGJhc2tldCBvZiA2OTcgaXRlbXMgaW50byBhY2NvdW50IGFuZCBzaG93cyB0aGUgY29tYmluZWQgcHJpY2VzLiBUaGUgUkJJLCBleC1nb3Zlcm5vciBSYWdodXJhbSBSYWphbiwgU2hpZnRlZCB0byBjb25zdW1lciBQcmljZSBJbmRleCAoQ1BJKSBpcyBiZWNhdXNlIFdQSSBuZWdsZWN0cyBzZXJ2aWNlcyBhbmQgdGhlIGJvdHRsZW5lY2tzIGJldHdlZW4gYSB3aG9sZXNhbGVyIGFuZCBhIHJldGFpbGVyLiBDUEksIGJhc2VkIG9uIDI2MCBjb21tb2RpdGllcyBpbmNsdWRpbmcgY2VydGFpbiBzZXJ2aWNlcywgbWVhc3VyZXMgdGhlIGNoYW5nZSBpbiBQcmljZXMgYXQgdGhlIHJldGFpbCBsZXZlbC4gVGhlIGJhc2UgeWVhciBvZiBDUEkgaXMgMjAxMi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Wholesale Price Index number",
        "option2" : " Consumers Price Index for urban non-manual workers",
        "option3" : " Consumers Price Index for agricultural workers",
        "option4" : " National Income Deflation"
      }
    },
    {
      "index" : 15,
      "question" : "Given below are two statements, one labelled as Assertion(A) and the other labelled as Reason (R).Assertion (A) : The emergence of economic globalism doesnot imply the decline of socialist ideology.Reason (R) : The ideology of socialism believes inUniversalism and globalism. In the context of the above two statements which one of thefollowing is correct?",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE1",
      "description" : "R2xvYmFsaXNtIGlzIHRoZSBwb2xpY3kgb2YgcGxhY2luZyB0aGUgaW50ZXJlc3RzIG9mIHRoZSB3b3JsZCBhYm92ZSB0aG9zZSBvZiBpbmRpdmlkdWFsIG5hdGlvbnMuIFRoaXMgYWxzbyBtZWFucyB0aGF0IHRoZXJlIHdvdWxkIGJlIGZyZWUgbW92ZW1lbnQgb2YgZ29vZHMgYW5kIHNlcnZpY2VzIGFjcm9zcyBuYXRpb25hbCBib3VuZGFyaWVzLiBTb2NpYWxpc20gaXMgYW4gZWNvbm9taWMgc3lzdGVtIGJhc2VkIG9uIHN0YXRlIG93bmVyc2hpcCBvZiBtZWFucyBvZiBwcm9kdWN0aW9uIGluY2x1ZGluZyBjYXBpdGFsLiBVbml2ZXJzYWxpc20gbWVhbnMgYXBwbGljYXRpb24gb2YgY2VydGFpbiBiYXNpYyBwcmluY2lwbGVzIGF0IHVuaXZlcnNhbCBsZXZlbC4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 16,
      "question" : "National Income is: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE2",
      "description" : "TmF0aW9uYWwgSW5jb21lIGlzIHRoZSBtb25leSB2YWx1ZSBvZiBhbGwgZmluYWwgZ29vZHMgYW5kIHNlcnZpY2VzIHByb2R1Y2VkIGluIGFuIGVjb25vbXkgZHVyaW5nIGEgZmluYW5jaWFsIHllYXIuIEF0IHRoZSBsZXZlbCBvZiBhbiBlY29ub215LCB2YWx1ZSBvZiBmaW5hbCBnb29kcyBhbmQgc2VydmljZXMgaXMgZXF1YWwgdG8gdGhlIHRvdGFsIGluY29tZSBvZiBhbGwgZmFjdG9ycyBvZiBwcm9kdWN0aW9uIHZpeiBsYWJvdXIsIGNhcGl0YWwsIGxhbmQgYW5kIGVudHJlcHJlbmV1cnNoaXAu",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Net National Product at market price",
        "option2" : " Net National Product at factor cost",
        "option3" : " Net Domestic Product at market price",
        "option4" : " Net Domestic Product at factor cost"
      }
    },
    {
      "index" : 17,
      "question" : "The Minimum Alternative Tax (MAT) was introduced in theBudget of the Government of India for the year: ",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE3",
      "description" : "TUFUIG9yIE1pbmltdW0gQWx0ZXJuYXRpdmUgVGF4IHdhcyBpbnRyb2R1Y2VkIGluIHRoZSBidWRnZXQgb2YgMTk5Ni05Ny4gVW5kZXIgTUFUIGEgY29tcGFueSBpcyByZXF1aXJlZCB0byBwYXkgYSBtaW5pbXVtIHRheCBvZiA3JSBvZiB0aGUgYm9vayBwcm9maXQgaW4gY2FzZSB0aGUgdGF4IG9uIHRoZSB0b3RhbCBpbmNvbWUgY29tcHV0ZWQgdW5kZXIgdGhlIG5vcm1hbCBwcm92aXNpb25zIG9mIGxhdyB3b3JrcyBvdXQgdG8gbGVzcyB0aGFuIHRoaXMgYW1vdW50Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1991-92 ",
        "option2" : " 1992-93",
        "option3" : " 1995-96 ",
        "option4" : " 1996-97"
      }
    },
    {
      "index" : 18,
      "question" : "Match List-I with List-II and select the correct answer.List-I (Committee) List-II (Chaired by)A. Disinvestment 1. Rajah Chelliahof shares in PublicSector EnterprisesB. Industrial Sickness 2. Omkar GoswamiC. Tax Reforms 3. R.N. MalhotraD. Reforms in Insurance 4. C. RangarajanSectorCodes:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE4",
      "description" : "Q2hlbGxpYWggQ29tbWl0dGVlIG9uIFRheCBSZWZvcm1zIC0gMTk5MzsgT21rYXIgR29zd2FtaSBDb21taXR0ZWUgb24gSW5kdXN0cmlhbCBTaWNrbmVzcyAtIDE5OTQ7IFJhbmdhcmFqYW4gQ29tbWl0dGVlIG9uIERpc2ludmVzdG1lbnQgb2YgU2hhcmVzIGluIFBTVXMgLSBBcHJpbCAxOTkzOyBSTiBNYWxob3RyYSBDb21taXR0ZWUgb24gUmVmb3JtcyBpbiBJbnN1cmFuY2UgU2VjdG9yIC0gMTk5My4=",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A- 1, B- 4, C-2, D -3 ",
        "option2" : " A- 4, B- 2, C-1, D -3",
        "option3" : " A- 4, B- 1, C-2, D -3 ",
        "option4" : " A- 1, B- 3, C-4, D -2"
      }
    },
    {
      "index" : 19,
      "question" : "What is the correct sequence of the descending order ofthe following States in respect of female literacy rates as perthe 2001 census? 1. Mizoram 2. Kerala3. Goa 4. NagalandChoose the correct answer using the codes given below:Codes:",
      "questionId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDE5",
      "description" : "QWNjb3JkaW5nIHRvIDIwMDEgY2Vuc3VzIHRoZSBjb3JyZWN0IHNlcXVlbmNlIGluIGRlc2NlbmRpbmcgb3JkZXIgb2YgdGhlIHN0YXRlcyBmb3IgZmVtYWxlIGxpdGVyYWN5IHJhdGUgaXMgS2VyYWxhIC0gODcuNyUsIE1pem9yYW0gLSA4Ni43JSwgR29hIC0gNzYuNSUsIE5hZ2FsYW5kIC0gNjEuNSUu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1997,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 2, 1, 3, 4 ",
        "option2" : " 2, 3, 4, 1",
        "option3" : " 2, 4, 1, 3 ",
        "option4" : " 1, 2, 4, 3"
      }
    },
    {
      "index" : 20,
      "question" : "The Capital Account Convertibility of the Indian Rupeeimplies: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDIw",
      "description" : "Q2FwaXRhbCBhY2NvdW50IGNvbnZlcnRpYmlsaXR5IG1lYW5zIGZyZWUgY29udmVyc2lvbiBvZiBjcm9zcy1ib3JkZXIgY2FwaXRhbCBmbG93cy4gQW55IGVudGl0eSBjYW4gY29udmVydCBkb21lc3RpYyBjdXJyZW5jeSBpbnRvIGhhcmQgY3VycmVuY3kgYXQgdGhlIHByZXZhaWxpbmcgbWFya2V0IHJhdGUgYW5kIHRha2UgaGFyZCBjdXJyZW5jeSBvdXQgb2YgdGhlIGNvdW50cnkgd2l0aG91dCB0aGUgbmVlZCBvZiAgb2ZmZXJpbmcgYW55IGV4cGxhbmF0aW9uLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " that the Indian Rupee can be exchanged by the authorised dealers for travel",
        "option2" : " that the Indian Rupee can be exchanged for any major currency for the purpose of trade in goods and services",
        "option3" : " that the Indian Rupee can be exchanged for any major currency for the purpose of trading financial assets",
        "option4" : " None of the above"
      }
    },
    {
      "index" : 21,
      "question" : "A consumer is said to be in equilibrium, if: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDIx",
      "description" : "QSBjb25zdW1lciBpcyBzYWlkIHRvIGJlIGluIGVxdWlsaWJyaXVtIHdoZW4gaGUgZmVlbHMgdGhhdCBoZSAnY2Fubm90IGNoYW5nZSBoaXMgY29uZGl0aW9uIGVpdGhlciBieSBlYXJuaW5nIG1vcmUgb3IgYnkgc3BlbmRpbmcgbW9yZSBvciBieSBjaGFuZ2luZyB0aGUgcXVhbnRpdGllcyBvZiB0aGluZyBoZSBidXlzJy4gQSByYXRpb25hbCBjb25zdW1lciB3aWxsIHB1cmNoYXNlIGEgY29tbW9kaXR5IHVwIHRvIHRoZSBwb2ludCB3aGVyZSB0aGUgcHJpY2Ugb2YgdGhlIGNvbW1vZGl0eSBpcyBlcXVhbCB0byB0aGUgbWFyZ2luYWwgdXRpbGl0eSBvYnRhaW5lZCBmcm9tIHRoZSB0aGluZy4gSElOVFMgJiBTT0xVVElPTlMgRSBCIEQgXzggMzQgMiBTdHJ1Y3R1cmUgb2YgdGhlIEluZGlhbiBFY29ub215ICYgRGVtb2dyYXBoaWNzICA=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " he is able to fulfil his need with a given level of income",
        "option2" : " he is able to live in full comforts with a given level of income",
        "option3" : " he can fulfil his needs without consumption of certain items",
        "option4" : " he is able to locate new sources of income"
      }
    },
    {
      "index" : 22,
      "question" : "The supply-side economics lays greater emphasis on thepoint of view of : ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDIy",
      "description" : "U3VwcGx5LXNpZGUgZWNvbm9taWNzIGlzIGEgc2Nob29sIG9mIG1hY3JvZWNvbm9taWNzIHRoYXQgYXJndWVzIHRoYXQgZWNvbm9taWMgZ3Jvd3RoIGNhbiBiZSBtb3N0IGVmZmVjdGl2ZWx5IGNyZWF0ZWQgYnkgbG93ZXJpbmcgYmFycmllcnMgZm9yIHBlb3BsZSB0byBwcm9kdWNlIChzdXBwbHkpIGdvb2RzIGFuZCBzZXJ2aWNlcyBhcyB3ZWxsIGFzIGludmVzdCBpbiBjYXBpdGFsLiBUaGUgaW52ZXN0bWVudCBhbmQgZXhwYW5zaW9uIG9mIGJ1c2luZXNzZXMgd2lsbCBpbmNyZWFzZSB0aGUgZGVtYW5kIGZvciBlbXBsb3llZXMuIFR5cGljYWwgcG9saWN5IHJlY29tbWVuZGF0aW9ucyBvZiBzdXBwbHkgc2lkZSBlY29ub21pc3RzIGFyZSBsb3dlciBtYXJnaW5hbCB0YXggcmF0ZXMgYW5kIGxlc3MgcmVndWxhdGlvbi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " producer ",
        "option2" : " gloal economy",
        "option3" : " consumer ",
        "option4" : " mile-man"
      }
    },
    {
      "index" : 23,
      "question" : "Human Poverty Index was introduced in the HumanDevelopment Report of the year: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDIz",
      "description" : "VGhlICBIdW1hbiBQb3ZlcnR5IEluZGV4IChIUEkpIHdhcyBhbiBpbmRpY2F0aW9uIG9mIHRoZSBTdGFuZGFyZCBvZiBsaXZpbmcgaW4gYSBjb3VudHJ5LCBkZXZlbG9wZWQgYnkgdGhlIFVuaXRlZCBOYXRpb25zIChVTikgdG8gY29tcGxlbWVudCB0aGUgSHVtYW4gRGV2ZWxvcG1lbnQgSW5kZXggKEhESSkgYW5kIHdhcyBmaXJzdCByZXBvcnRlZCBhcyBhIHBhcnQgb2YgdGhlIEh1bWFuIERldmVsb3BtZW50IFJlcG9ydCBpbiAxOTk3LiBJbiAyMDEwLCBpdCB3YXMgc3VwcGxhbnRlZCBieSB0aGUgVU4ncyBNdWx0aWRpbWVuc2lvbmFsIFBvdmVydHkgSW5kZXgu",
      "correctOption" : "NA==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1994 ",
        "option2" : " 1995",
        "option3" : " 1996 ",
        "option4" : " 1997"
      }
    },
    {
      "index" : 24,
      "question" : "The current Price Index (base 1960) is nearly 330. This meansthat the price of: ",
      "questionId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI0",
      "description" : "QSBwcmljZSBpbmRleCBpcyBhIG5vcm1hbGl6ZWQgYXZlcmFnZSAodHlwaWNhbGx5IGEgd2VpZ2h0ZWQgYXZlcmFnZSkgb2YgcHJpY2UgcmVsYXRpdmVzIGZvciBhIGdpdmVuIGNsYXNzIG9mIGdvb2RzIG9yIHNlcnZpY2VzIGluIGEgZ2l2ZW4gcmVnaW9uLCBkdXJpbmcgYSBnaXZlbiBpbnRlcnZhbCBvZiB0aW1lLiBUaGUgY3VycmVudCBQcmljZSBJbmRleCAoYmFzZSAxOTYwKSBpcyBuZWFybHkgMzMwLiBUaGlzIG1lYW5zIHRoYXQgdGhlIHByaWNlIG9mIHRoZSB3ZWlnaHRlZCBtZWFuIG9mIHByaWNlIG9mIGNlcnRhaW4gaXRlbXMgaGFzIGluY3JlYXNlZCAgMy4zIHRpbWVzLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OThdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1998,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " all items cost 3.3 times more than what they did in 1960",
        "option2" : " the price of certain selected items have gone upto 3.3 times",
        "option3" : " weighted mean of price of certain items has increased 3.3 times",
        "option4" : " gold price has gone up 3.3 times"
      }
    },
    {
      "index" : 25,
      "question" : "Assertion (A) : Devaluation of a currency may promoteexport. Reason (R) : Price of the country's products in theinternational market may fall due to devaluation.",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI1",
      "description" : "RGV2YWx1YXRpb24gaXMgYSBkZWxpYmVyYXRlIGRvd253YXJkIGFkanVzdG1lbnQgdG8gdGhlIHZhbHVlIG9mIGEgY291bnRyeSdzIGN1cnJlbmN5IHJlbGF0aXZlIHRvIGFub3RoZXIgY3VycmVuY3ksIGdyb3VwIG9mIGN1cnJlbmNpZXMgb3Igc3RhbmRhcmQuIEl0IGlzIGEgbW9uZXRhcnkgcG9saWN5IHRvb2wgdXNlZCBieSBjb3VudHJpZXMgdGhhdCBoYXZlIGEgZml4ZWQgZXhjaGFuZ2UgcmF0ZSBvciBzZW1pLWZpeGVkIGV4Y2hhbmdlIHJhdGUuIEFmdGVyIGRldmFsdWF0aW9uIG9mIHRoZSBjdXJyZW5jeSwgY291bnRyeSdzIGdvb2RzIGJlY29tZSBjaGVhcGVyIGZvciBmb3JlaWduZXJzIGFuZCBiZWNvbWUgbW9yZSBjb21wZXRpdGl2ZSBpbiBhIGdsb2JhbCBtYXJrZXQuIFRoaXMgbGVhZHMgdG8gaW5jcmVhc2UgaW4gZXhwb3J0cy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 26,
      "question" : "Assertion (A) : Fiscal deficit is greater than budgetarydeficit.Reason (R) : Fiscal deficit is the borrowing from the ReserveBank of India plus other liabilities of the Government tomeet its expenditure. ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI2",
      "description" : "QnVkZ2V0IGRlZmljaXQgPSBUb3RhbCBSZWNlaXB0cyAtIFRvdGFsIEV4cGVuZGl0dXJlIEZpc2NhbCBkZWZpY2l0IGlzIHRoZSBzdW0gb2YgQnVkZ2V0IGRlZmljaXQgcGx1cyBCb3Jyb3dpbmdzIGFuZCBvdGhlciBsaWFiaWxpdGllcyBIZW5jZSwgZmlzY2FsIGRlZmljaXQgaXMgZ3JlYXRlciB0aGFuIGJ1ZGdldGFyeSBkZWZpY2l0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct explanation of A",
        "option2" : " Both A and R are true but R is not a correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 27,
      "question" : "Persons below the poverty line in India are classified assuch based whether: ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI3",
      "description" : "VGlsbCAyMDExLCBJbmRpYSB1c2VkIHRvIGRlZmluZSB0aGUgcG92ZXJ0eSBsaW5lIGJhc2VkIG9uIGEgbWV0aG9kIGRlZmluZWQgYnkgYSB0YXNrIGZvcmUgaW4gMTk3OS4gSXQgd2FzIGJhc2VkIG9uIGV4cGVuZGl0dXJlIGZvciBidXlpbmcgZm9vZCB3b3J0aCAyLDQwMCBjYWxvcmllcyBpbiBydXJhbCBhcmVhcywgYW5kIDIsMTAwIGNhbG9yaWVzIGluIFVyYmFuIGFyZWFzLiBJbiAyMDExLCB0aGUgU3VyZXNoIFRlbmR1bGthciBDb21taXR0ZWUgZGVmaW5lZCB0aGUgcG92ZXJ0eSBsaW5lIG9uIHRoZSBiYXNpcyBvZiBtb250aGx5IHNwZW5kaW5nIG9uIGZvb2QsIGVkdWNhdGlvbiwgaGVhbHRoLCBlbGVjdHJpY2l0eSBhbmQgdHJhbnNwb3J0LiBIb3dldmVyLCB0aGlzIGhhcyBhbHNvIGZhY2VkIGNyaXRpY2lzbS4gVGhlIE5EQSBnb3Zlcm5tZW50IGhhcyBub3cgY29uc3RpdHV0ZWQgYSAxNC1tZW1iZXIgdGFzayBmb3JjZSB1bmRlciBOSVRJIEFheW9nJ3MgdmljZS1jaGFpcm1hbiBBcnZuZCBQYW5hZ2FyaXlhIHRvIGNvbWUgb3V0IHdpdGggcmVjb21tZW5kYXRpb25zIGZvciBhIHJlYWxpc3RpYyBwb3ZlcnR5IGxpbmUu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " they are entitled to a minimum prescribed food basket",
        "option2" : " they get work for a prescribed minimum number of days in a year",
        "option3" : " they belong to agricultural labourer household and the scheduled caste ribe social group",
        "option4" : " their daily wages fall below the prescribed minimum"
      }
    },
    {
      "index" : 28,
      "question" : "Which one of the following statements regarding thelevying, collecting and distribution of Income Tax is correct?",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI4",
      "description" : "SW5jb21lIHRheCBpcyBsZXZpZWQgYW5kIGNvbGxlY3RlZCBieSBVbmlvbiBnb3Zlcm5tZW50IG9yIHRoZSBjZW50cmFsIGdvdmVybm1lbnQgYW5kIGRpc3RyaWJ1dGVkIGJldHdlZW4gaXRzZWxmIGFuZCBzdGF0ZXMu",
      "correctOption" : "MQ==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The Union levies, collects and distributes the proceeds of income tax between itself and the states",
        "option2" : " The Union levies, collects and keeps all the proceeds of income tax to itself",
        "option3" : " The Union levies and collects the tax but all the proceeds are distributed among the states",
        "option4" : " Only the surcharge levied on income tax is shared"
      }
    },
    {
      "index" : 29,
      "question" : "Among which one of the following sets of social/religiousgroups is the extent of poverty the highest, as perGovernment statistics for the nineties? ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDI5",
      "description" : "QWNjb3JkaW5nIHRvIHRoZSByZWNlbnQgZGF0YSBtYWRlIGF2YWlsYWJsZSBieSBDZW50cmFsIFN0YXRpc3RpY2FsIE9yZ2FuaXNhdGlvbiwgdGhlIGluY2lkZW5jZSBvZiBwb3ZlcnR5IGlzIGhpZ2hlc3QgaW4gdHJpYmVzIG9mIEJpaGFyLCBPcmlzc2EgYW5kIE1hZGh5YSBQcmFkZXNoLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Muslims in Kerala, Gujarat and A.P.",
        "option2" : " Tribals in Bihar, Orissa, M.P. and Maharashtra",
        "option3" : " Scheduled Caste in Punjab, Western UP, Northern Rajasthan and Tamil Nadu",
        "option4" : " Christians in Gujarat, Maharashtra and Assam"
      }
    },
    {
      "index" : 30,
      "question" : "The first Indian State to have its Human DevelopmentReport prepared and released by Amartya Kumar Sen inDelhi is : ",
      "questionId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDMw",
      "description" : "TWFkaHlhIFByYWRlc2ggd2FzIHRoZSBmaXJzdCBzdGF0ZSB0byBoYXZlIGNhbGN1bGF0ZWQgSHVtYW4gRGV2ZWxvcG1lbnQgUmVwb3J0IGluIDE5OTUsIHVuZGVyIHRoZSBndWlkYW5jZSBvZiBQcm9mLiBBbWFydHlhIFNlbi4=",
      "correctOption" : "Mw==",
      "topicId" : "WzE5OTldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 1999,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " West Bengal ",
        "option2" : " Kerala",
        "option3" : " Madhya Pradesh ",
        "option4" : " Anhra Praesh"
      }
    },
    {
      "index" : 31,
      "question" : "In an open economy, the national income (Y) of the economyis: (C, I, G, X, M stand for Consumption, Investment, Govt.Expenditure, total exports and total imports respectively.)",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDMx",
      "description" : "Q29uc3VtcHRpb24gKEMpLCBJbnZlc3RtZW50IChJKSwgR292ZXJubWVudCBwdXJjaGFzZXMgKEcpLCBYIHN0YW5kcyBmb3IgZXhwb3J0cyBhbmQgTSBmb3IgaW1wb3J0cy4gWSA9IEMgKyBJICsgRyArIFggLSBNIFRoaXMgaWRlbnRpdHkgaXMgY2FsbGVkIG5hdGlvbmFsIGluY29tZSBhY2NvdW50cyBpZGVudGl0eSBmb3IgYW4gb3BlbiBlY29ub215LiBDb25zdW1wdGlvbiByZWZlcnMgdG8gaG91c2Vob2xkIGV4cGVuZGl0dXJlIG9uIHZhcmlvdXMgZ29vZHMgYW5kIHNlcnZpY2VzLiBHb29kcyBhcmUgb2YgdGhyZWUgdHlwZXM6IG5vbi1kdXJhYmxlcyAoc3VjaCBhcyBmb29kIGFuZCBjbG90aCksIGR1cmFibGVzIChzdWNoIGFzIGNhcnMgYW5kIHJlZnJpZ2VyYXRvcnMpIGFuZCBzZXJ2aWNlcyAoc3VjaCBhcyBoYWlyY3V0LCBlZHVjYXRpb24gYW5kIG1lZGljYWwgY2FyZSku",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Y = C + I + G + X",
        "option2" : " Y = I + G -X + M",
        "option3" : " Y = C + I + G + (X - M)",
        "option4" : " Y = C - G + I + (X - M)"
      }
    },
    {
      "index" : 32,
      "question" : "Match List I with List II and select the correct answer usingthe codes given below the lists: List - I                   List-IIA. Boom 1. Business activity at high level withincreasing income, output andemployment at macro levelB. Recession 2. Gradual fall of income, output andemployment with business activityin a low gearC. Depression 3. Unprecedented level of underemployment, and unemployment,drastic fall in income output andemployment.D. Recovery 4. Steady rise in the general level ofprices, income, output andemployment.Codes:",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDMy",
      "description" : "Qm9vbSBpcyBhIHBlcmlvZCBvZiB0aW1lIGR1cmluZyB3aGljaCBzYWxlcyBvZiBhIHByb2R1Y3Qgb3IgYnVzaW5lc3MgYWN0aXZpdHkgaW5jcmVhc2VzIHZlcnkgcmFwaWRseS4gSW4gdGhlIHN0b2NrIG1hcmtldCwgYm9vbXMgYXJlIGFzc29jaWF0ZWQgd2l0aCBidWxsIG1hcmtldHMsIHdoZXJlYXMgYnVzdHMgYXJlIGFzc29jaWF0ZWQgd2l0aCBiZWFyIG1hcmtldHMuIFJlY2Vzc2lvbiBpcyBBIHNpZ25pZmljYW50IGRlY2xpbmUgaW4gYWN0aXZpdHkgYWNyb3NzIHRoZSBlY29ub215LCBsYXN0aW5nIGxvbmdlciB0aGFuIGEgZmV3IG1vbnRocy4gSXQgaXMgdmlzaWJsZSBpbiBpbmR1c3RyaWFsIHByb2R1Y3Rpb24sIGVtcGxveW1lbnQsIHJlYWwgaW5jb21lIGFuZCB3aG9sZXNhbGUtcmV0YWlsIHRyYWRlLiBEZXByZXNzaW9uIGlzIGEgc2V2ZXJlIGFuZCBwcm9sb25nZWQgZG93bnR1cm4gaW4gZWNvbm9taWMgYWN0aXZpdHkuIEluIGVjb25vbWljcywgYSBkZXByZXNzaW9uIGlzIGNvbW1vbmx5IGRlZmluZWQgYXMgYW4gZXh0cmVtZSByZWNlc3Npb24gdGhhdCBsYXN0cyB0d28gb3IgbW9yZSB5ZWFycy4gRWNvbm9taWMgUmVjb3ZlcnkgaXMgYSBwZXJpb2Qgb2YgaW5jcmVhc2luZyBidXNpbmVzcyBhY3Rpdml0eSBzaWduYWxpbmcgdGhlIGVuZCBvZiBhIHJlY2Vzc2lvbi4gTXVjaCBsaWtlIGEgcmVjZXNzaW9uLCBhbiBlY29ub21pYyByZWNvdmVyeSBpcyBub3QgYWx3YXlzIGVhc3kgdG8gcmVjb2duaXplIHVudGlsIGF0IGxlYXN0IHNldmVyYWwgbW9udGhzIGFmdGVyIGl0IGhhcyBiZWd1bi4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-1; B-2; C-3; D-4 ",
        "option2" : " A-1; B-2; C- 4; D-3",
        "option3" : " A-2; B-1; C- 4; D-3 ",
        "option4" : " A-2; B-1; C-3; D-4"
      }
    },
    {
      "index" : 33,
      "question" : "Indian Human Development Report does not give for eachsample village: ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDMz",
      "description" : "VGhlIE5hdGlvbmFsIEh1bWFuIERldmVsb3BtZW50IFJlcG9ydCAyMDAxLCBpcyBhbiBhdHRlbXB0IHRvIG1hcCB0aGUgc3RhdGUgb2YgaHVtYW4gZGV2ZWxvcG1lbnQgaW4gSW5kaWEuIFdoaWxlIGNvbnNpZGVyaW5nIHRoZSBzdGF0ZSBvZiBodW1hbiBkZXZlbG9wbWVudCwgYW5kIHRoZSByZWxhdGVkIGVjb25vbWljLCBlZHVjYXRpb25hbCBhbmQgaGVhbHRoIGF0dGFpbm1lbnRzLCB0aGUgcmVwb3J0IGFuYWx5c2VzIGdvdmVybmFuY2UgZm9yIGh1bWFuIGRldmVsb3BtZW50LiBUbyBmYWNpbGl0YXRlIG1vbml0b3JpbmcsIG1hbnkgcHJvY2VzcyBpbmRpY2F0b3JzIGhhdmUgYmVlbiBjcmVhdGVkLiBUaGUgSHVtYW4gRGV2ZWxvcG1lbnQgSW5kZXgsIEdlbmRlciBEaXNwYXJpdHkgSW5kZXggYW5kIEh1bWFuIFBvdmVydHkgSW5kZXggaGF2ZSBiZWVuIGNhbGN1bGF0ZWQgZm9yIEluZGlhIGFmdGVyIG1vZGlmeWluZyB0aGUgVU5EUCBtZXRob2RvbG9neS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Infrastructure and Amenities Index",
        "option2" : " Education Related Index",
        "option3" : " Health Related Index",
        "option4" : " Unemployment Related Index"
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements about the megacities ofIndia: 1. Population of each megacity is more than 5 million2. All the megacities are important sea ports3. Megacities are either national or state capitalsWhich of these statements are correct ?",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM0",
      "description" : "TWVnYWNpdGllcyBvZiBJbmRpYSBoYXZlIG1vcmUgdGhhbiA1IG1pbGxpb24gcG9wdWxhdGlvbi4gQnV0IG5vdCBhbGwgdGhlIG1ham9yIG1lZ2FjaXRpZXMgYXJlIGxvY2F0ZWQgb24gdGhlIHNlYSBjb2FzdCBvciBhcmUgc2VhIHBvcnRzLiBEZWxoaSwgd2hpY2ggaXMgdGhlIG5hdGlvbmFsIGNhcGl0YWwgaXMgbm90IGEgc2VhIHBvcnQu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 2",
        "option3" : " 2 and 3 ",
        "option4" : " 1 an 3"
      }
    },
    {
      "index" : 35,
      "question" : "Which one of the following ports of India handles thehighest tonnage of import cargo? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM1",
      "description" : "S2FuZGxhIFBvcnQgaGFuZGxlZCB0aGUgaGlnaGVzdCB2b2x1bWUgb2YgdHJhZmZpYyBhdCAoODEuMTIgTVQpLCBmb2xsb3dlZCBieSBwYXJhZGlwICg3NC40ME1UKSwgSk5QVCAoNDguODkgTVQpIE11bWJhaSAoNDcuNTMgTVQpIGFuZCBWaXNha2hhcGF0bmFtICg0Ni41NiBNVCkgZHVyaW5nIEFwcmlsIHRvIERlY2VtYmVyIDIwMTc=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Calcutta ",
        "option2" : " Kandla",
        "option3" : " Mumbai ",
        "option4" : " Vishakhapatnam"
      }
    },
    {
      "index" : 36,
      "question" : "Which one of the following statements is false? ",
      "questionId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM2",
      "description" : "QWNjb3JkaW5nIHRvIHRoZSB0YWJsZSBnaXZlbiBhYm92ZSwgdGhlIGxpZmUgZXhwZWN0YW5jeSBhdCBiaXJ0aCBpbiBJbmRpYSBpcyBub3Qgc2FtZSBhcyB0aGF0IG9mIEluZG9uZXNpYS4gSW5kaWEgPSA2Mi40LCBJbmRvbmVzaWEgPSA2NC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2000,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " All countries other than India have over 80% literacy",
        "option2" : " Malaysia and Korea have life expectancy higher than all other countries",
        "option3" : " Higher the adult literacy lower is the infant mortality",
        "option4" : " The life expectancy at birth in India is almost the same"
      }
    },
    {
      "index" : 37,
      "question" : "The most appropriate measure of economic growth is its:",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM3",
      "description" : "UGVyIGNhcGl0YSByZWFsIGluY29tZSBpcyBub3RoaW5nIGJ1dCBOTlAgYXQgZmFjdG9yIGNvc3QuIEl0IG1lYW5zIG5hdGlvbmFsIGluY29tZSBpcyBzdW0gdG90YWwgb2YgYWxsIGZhY3RvciBpbmNvbWVzIGFkanVzdGVkIGZvciBpbmNyZWFzZSBpbiBwcmljZXMu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Gross Domestic Product of a country's",
        "option2" : " Net Domestic Product",
        "option3" : " Net National Product",
        "option4" : " Per Capita Real Income"
      }
    },
    {
      "index" : 38,
      "question" : "Match List I with List II and select the correct answer usingthe codes given below the lists:           List-I (Term)          List-II (Explanation)A. Fiscal deficit 1. Excess of Total Expenditureover Total ReceiptsB. Budget deficit 2. Excess of Revenue Expenditureover revenue receiptsC. Revenue deficit 3. Excess of  Total Expenditure overTotal Receipts less borrowingsD. Primary deficit 4. Excess of Total ExpenditureoverTotal Receipts less borrowingsand Interest PaymentsCodes:",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM4",
      "description" : "UmV2ZW51ZSBkZWZpY2l0ID0gcmV2ZW51ZSByZWNlaXB0cyAtIFJldmVudWUgZXhwZW5kaXR1cmU7IEJ1ZGdldCBkZWZpY2l0ID0gVG90YWwgcmVjZWlwdHMgLSBUb3RhbCBleHBlbmRpdHVyZTsgRmlzY2FsIGRlZmljaXQgPSBSZXZlbnVlIHJlY2VpcHRzICsgTm9uLWRlYnQgY3JlYXRpbmcgY2FwaXRhbCByZWNlaXB0cyAtIFRvdGFsIGV4cGVuZGl0dXJlIChGLkQuICBpcyBnb3Zlcm5tZW50IGJvcnJvd2luZ3MpOyBQcmltYXJ5IGRlZmljaXQgPSBGaXNjYWwgZGVmaWNpdCAgLSBJbnRlcmVzdCBwYXltZW50cy4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " A-3; B-1; C-2; D-4 ",
        "option2" : " A-4; B-3; C-2; D-1",
        "option3" : " A-1; B-3; C-2; D-4 ",
        "option4" : " A-3; B-1; C-4; D-2"
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following taxes: 1. Corporation tax 2. Customs duty3. Wealth tax 4. Excise dutyWhich of these is/are indirect taxes?",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDM5",
      "description" : "SW5kaXJlY3QgdGF4ZXMgYXJlIHRoZSBjaGFyZ2VzIHRoYXQgYXJlIGxldmllZCBvbiBnb29kcyBhbmQgc2VydmljZXMuIFNvbWUgb2YgdGhlIHNpZ25pZmljYW50IGluZGlyZWN0IHRheGVzIGluY2x1ZGUgVmFsdWUgQWRkZWQgVGF4LCBDZW50cmFsICBTYWxlcyBUYXgsIENlbnRyYWwgRXhjaXNlIER1dHksIEN1c3RvbXMgRHV0eSwgc3RhbXAgZHV0aWVzIGFuZCBleHBlbmRpdHVyZSB0YXguIFByb3BlcnR5IHRheCwgQ29ycG9yYXRpb24gdGF4IGFuZCBXZWFsdGggdGF4IGFyZSBleGFtcGxlcyBvZiBkaXJlY3QgdGF4ZXMu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 4",
        "option3" : " 1 and 3 ",
        "option4" : " 2 an 3"
      }
    },
    {
      "index" : 40,
      "question" : "The term National Income represents: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQw",
      "description" : "VGhlIG9wdGlvbiAoYykgZ3Jvc3MgbmF0aW9uYWwgcHJvZHVjdCBhdCBtYXJrZXQgcHJpY2UgbWludXMgZGVwcmVjaWF0aW9uIG1pbnVzIGluZGlyZWN0IHRheCBwbHVzIHN1YnNpZGllcy4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " gross national product at market prices minus depreciation",
        "option2" : " gross national product at market prices minus depreciation plus net factor income from abroad",
        "option3" : " gross national product at market prices minus depreciation and indirect taxes plus subsidies",
        "option4" : " gross national product at market prices minus net factor"
      }
    },
    {
      "index" : 41,
      "question" : "Assertion (A) : Ceiling on foreign exchange for a host of currentaccount transaction heads was lowered in the year 2000.Reason (R) : There was a fall in foreign currency assetsalso. ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQx",
      "description" : "QSBpcyB0cnVlIGJ1dCBSIGlzIGZhbHNlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Both A and R are individually true and R is the correct explanation of A",
        "option2" : " Both A and R are individually true but R is not the correct explanation of A",
        "option3" : " A is true but R is false",
        "option4" : " A is false but R is true"
      }
    },
    {
      "index" : 42,
      "question" : "The prices at which the government purchases food grainsfor maintaining the public distribution system and forbuilding up buffer-stock is known as: ",
      "questionId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQy",
      "description" : "UHJvY3VyZW1lbnQgcHJpY2UgaXMgdGhlIHN1cHBvcnQgcHJpY2UgYXQgd2hpY2ggdGhlIGdvdmVybm1lbnQgd2lsbCBidXkgd2hhdGV2ZXIgcXVhbnR1bSBmYXJtZXJzIHdhbnRzIHRvIHNlbGwgdG8gdGhlIGdvdmVybm1lbnQgaW4gdGhlIGV2ZW50IG9mIHByaXZhdGUgdHJhZGVycyBub3QgYnV5aW5nIHRoZSBwcm9kdWN0LiBUaGlzIGlzIGRvbmUgdG8gZ2l2ZSBhIGZhaXIgcHJpY2UgdG8gdGhlICBmYXJtZXIgYW5kIHRvIGNyZWF0ZSBhIGJ1ZmZlciBzdG9jayBvZiBmb29kIGdyYWlucyB0byBtZWV0IHB1YmxpYyBkaXN0cmlidXRpb24gc3lzdGVtIHJlcXVpcmVtZW50cy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDFdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2001,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " minimum support prices",
        "option2" : " procurement prices",
        "option3" : " issue prices",
        "option4" : " ceiling prices"
      }
    },
    {
      "index" : 43,
      "question" : "With reference to Power Sector in India, consider thefollowing statements: 1. Rural electrification has been treated as a BasicMinimum Service under the Prime Minister 'sGramodaya Yojana2. 100 percent Foreign Direct Investment in power isallowed without upper limit3. The Union Ministry of Power has signed a Memorandaof Understanding with 14 StatesWhich of these statements is/are correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQz",
      "description" : "UHJhZGhhbiBNYW50cmkgR3JhbW9kYXlhIFlvamFuYSB3YXMgbGF1bmNoZWQgaW4gb3JkZXIgdG8gYWNoaWV2ZSB0aGUgb2JqZWN0aXZlIG9mIHN1c3RhaW5hYmxlIGh1bWFuIGRldmVsb3BtZW50IGF0IHRoZSB2aWxsYWdlIGxldmVsLiBJdCBoYXMgNiBjb21wb25lbnRzIHZpei4sIHByaW1hcnkgaGVhbHRoLCBQcmltYXJ5IGVkdWNhdGlvbiwgcnVyYWwgc2hlbHRlciwgcnVyYWwgZHJpbmtpbmcgd2F0ZXIsIG51dHJpdGlvbiBhbmQgUnVyYWwgZWxlY3RyaWZpY2F0aW9uLiBVcHRvIDEwMCUgRkRJIGlzIGFsbG93ZWQgaW4gcmVzcGVjdCBvZiBwcm9qZWN0cyByZWxhdGluZyB0byBlbGVjdHJpY2l0eSBnZW5lcmF0aW9uLCB0cmFuc21pc3Npb24gYW5kIGRpc3RyaWJ1dGlvbiwgb3RoZXIgdGhhbiBhdG9taWMgcmVhY3RvciBwb3dlciBwbGFudHMu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2",
        "option3" : " 2 and 3 ",
        "option4" : " 3 only"
      }
    },
    {
      "index" : 44,
      "question" : "With reference to the Indian Public Finance, consider thefollowing statements: 1. External liabilities reported in the Union Budget arebased on historical exchange rates2. The continued high borrowing has kept the real interestrates high in the economy3. The upward trend in the ratio of Fiscal Deficit  of GDPa recent years has an adverse effect  on privateinvestment4. Interest payments is the single largest component ofthe non-plan revenue expenditure of the UnionGovernmentWhich of these statements are correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ0",
      "description" : "UHVibGljIEZpbmFuY2UgaW4gSW5kaWEgYWxzbyBjb21lcyB1bmRlciB0aGUgcHVydmlldyBvZiBhIGJyYW5jaCBvZiBlY29ub21pY3Mgd2hpY2ggZGV0ZXJtaW5lcyBhbmQgYXNzZXNzZXMgdGhlIHBvbGljaWVzIG9mIHRoZSBJbmRpYW4gZ292ZXJubWVudCBzdGlwdWxhdGVkIGluIHRoZSBhbm51YWwgZmluYW5jZSBidWRnZXQuIEl0IGlkZW50aWZpZXMgdGhhdCB0eXBlcyBhbmQgY29uc2VxdWVuY2VzIG9mIHRheCBtZWFzdXJlcyBhbmQgZXhwZW5kaXR1cmUgb24gY2l0aXplbnMsIGluc3RpdHV0aW9ucywgYW5kIHRoZSBlbnRpcmUgZWNvbm9teS4gVGhlIHVwd2FyZCB0cmVuZCBpbiB0aGUgcmF0aW8gb2YgRmlzY2FsIERlZmljaXQgb2YgR0RQIGEgcmVjZW50IHllYXJzIGhhcyBhbiBhZHZlcnNlIGVmZmVjdCBvbiBwcml2YXRlIGludmVzdG1lbnQuIFRoZSBjb250aW51ZWQgaGlnaCBib3Jyb3dpbmcgaGFzIGtlcHQgdGhlIHJlYWwgaW50ZXJlc3QgcmF0ZXMgaGlnaCBpbiB0aGUgZWNvbm9teS4gUHVibGljIGZpbmFuY2UgaWRlbnRpZmllcyB0aGF0IHR5cGVzIGFuZCBjb25zZXF1ZW5jZXMgb2YgdGF4IG1lYXN1cmVzIGFuZCBleHBlbmRpdHVyZSBvbiBjaXRpemVucywgaW5zdGl0dXRpb25zLCBhbmQgdGhlIGVudGlyZSBlY29ub215Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 4",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: Full convertibility of the rupee may mean:1. Its free float with the international currencies2. Its direct exchange with any other internationalcurrency at any prescribed place inside and outsidethe country3. It acts just like any other international currencyWhich of these statements are correct?",
      "questionId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ1",
      "description" : "Q2FwaXRhbCBhY2NvdW50IGNvbnZlcnRpYmlsaXR5IG1lYW5zIGZyZWUgY29udmVyc2lvbiBvZiBjcm9zcy1ib3JkZXIgY2FwaXRhbCBmbG93cywgaW1wbHlpbmcgdGhhdCBhbnlib2R5IGNhbiBjb252ZXJ0IGRvbWVzdGljIGN1cnJlbmN5IGludG8gaGFyZCBjdXJyZW5jeSBhdCB0aGUgbWFya2V0IHJhdGUgYW5kIHRha2UgdGhlIGhhcmQgY3VycmVuY3kgb3V0IG9mIHRoZSBjb3VudHJ5Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDJdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2002,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 ",
        "option2" : " 1 and 3",
        "option3" : " 2 and 3 ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements: In India, stamp duties on financial transactions are:1. levied and collected by the State Government2. appropriated by the Union GovernmentWhich of these statements is/are correct?",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ2",
      "description" : "U3RhbXAgZHV0eSBpcyBhIGZvcm0gb2YgdGF4IHRoYXQgaXMgbGV2aWVkIG9uIGRvY3VtZW50cy4gSXQgaXMgbGV2aWVkIGJ5IHRoZSB1bmlvbiBvciB0aGUgY2VudHJhbCBnb3Zlcm5tZW50IGFuZCBjb2xsZWN0ZWQgYW5kIGFwcHJvcHJpYXRlZCBieSB0aGUgc3RhdGUgZ292ZXJubWVudHMuIChFbnRyeSA5MSBpbiB0aGUgdW5pb24gbGlzdDsgZW50cnkgNjMgaW4gdGhlIHN0YXRlIGxpc3Qgb2YgU2V2ZW50aCBTY2hlZHVsZSBvZiBDb25zdGl0dXRpb24gb2YgSW5kaWEp",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 47,
      "question" : "Which one among the following States has the highestfemale literacy rate as per the Census 2001? ",
      "questionId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ3",
      "description" : "QXMgcGVyIHRoZSBjZW5zdXMgb2YgMjAwMSwgQ2hoYXR0aXNnYXJoIGhhcyB0aGUgaGlnaGVzdCBmZW1hbGUgbGl0ZXJhY3kgb2YgNTEuODUsIE9yaXNzYSBoYXMgNTAuNTElLCBNYWRoeWEgUHJhZGVzaCAtIDUwLjI5IGFuZCBSYWphc3RoYW4gaGFzIDQzLjg1JS4=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDNdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2003,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Chhattisgarh ",
        "option2" : " Madhya Pradesh",
        "option3" : " Orissa ",
        "option4" : " Rajasthan"
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following is not a recommendation of the taskforce on direct taxes under the chairmanship of Dr. Vijay L.Kelkar in the year 2002? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ4",
      "description" : "SW5jcmVhc2UgaW4gZXhlbXB0aW9uIGxpbWl0IHRvIFJzIDEgbGFraCB0byBmb3IgdGhlIGdlbmVyYWwgY2F0ZWdvcmllcyBvZiB0YXhwYXllcnMuIEEgaGlnaGVyIGV4ZW1wdGlvbiBsaW1pdCBvZiBScyAxLjUwIGxha2ggZm9yIHdpZG93cyBhbmQgc2VuaW9yIGNpdGl6ZW5zIHdhcyBvbmUgb2YgdGhlIHJlY29tbWVuZGF0aW9uIG9mIHRoZSB0YXNrLCBmb3JjZSBvbiBkaXJlY3QgdGF4ZXMgdW5kZXIgdGhlIGNoYWlybWFuc2hpcCBvZiBEci4gVmlqYXkuIEtlbGthciBpbiB0aGUgeWVhciAyMDAyLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Abolition of Wealth Tax",
        "option2" : " Increase in the exemption limit of personal income to Rs. 1.20 lakh for widows",
        "option3" : " Elimination of standard deduction",
        "option4" : " Exemption from tax on dividends and capital gains from"
      }
    },
    {
      "index" : 49,
      "question" : "As per 1991 Census, which one of the following groups ofUnion Territories had the highest literacy rate? ",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDQ5",
      "description" : "QXMgcGVyIDE5OTEgY2Vuc3VzLCBQb25kaWNoZXJyeSBhbmQgRGVsaGkgaGFkIHRoZSBsaXRlcmFjeSByYXRlcyBvZiA3NS4zIGFuZCA3NC43IHJlc3BlY3RpdmVseS4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Chandigarh and Dadra & Nagar Haveli",
        "option2" : " Delhi and Andaman & Nicobar Islands",
        "option3" : " Andaman & Nicobar Islands and Pondichery",
        "option4" : " Pondicherry and Delhi"
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:As per 2001 Census 1. the two States with the lowest sex ratio are Haryanaand Punjab2. the two States with the lowest population per sq. km.of area are Meghalaya and Mizoram3. Kerala has both the highest literacy rate and sex ratioWhich of the statements given above is/are correct?",
      "questionId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDUw",
      "description" : "QXMgcGVyIGNlbnN1cyAyMDAxLCBjaGlsZCBzZXggcmF0aW8gaW4gSGFyeWFuYSB3YXMgODYxLCBpbiBQdW5qYWIgODc2IGFuZCBpbiBTaWtraW0gODc1LiBIZW5jZSwgSGFyeWFuYSBhbmQgU2lra2ltIHdlcmUgdGhlIHR3byBzdGF0ZXMgd2l0aCBsb3dlc3Qgc2V4IHJhdGlvcy4gVGhlIHBvcHVsYXRpb24gcGVyIHNxLiBrbS4gb2YgYXJlYSBpbiBBcnVuYWNoYWwgUHJhZGVzaCB3YXMgMTMsIGluIE1lZ2hhbGF5YSB3YXMgMTAzIGFuZCBpbiBNaXpvcmFtIHdhcyA0Mi4gSGVuY2UsIHRoZSB0d28gc3RhdGVzIHdpdGggdGhlIGxvd2VzdCBwb3B1bGF0aW9uIHBlciBzcS4ga20gb2YgYXJlYSBhcmUgQXJ1bmFjaGFsIFByYWRlc2ggYW5kIE1pem9yYW0uIEtlcmFsYSBoYXMgYm90aCB0aGUgaGlnaGVzdCBsaXRlcmFjeSByYXRlIGFuZCBzZXggcmF0aW8u",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDRdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2004,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 3 only ",
        "option2" : " 2 and 3",
        "option3" : " 1 and 2 ",
        "option4" : " 1 an 3"
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements:                             1. Poverty Reduction and Growth Facility (PRGF) hasbeen established by the International DevelopmentAssociation (IDA) to provide further assistance to lowincome countries facing high level of indebtedness.2. Singapore regional Training Institute (STI) is one ofthe institutes that provides training in macroeconomicanalysis  and policy  and related  subject  as  a  part  ofprogramme of the IMF institute.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDUx",
      "description" : "SW4gMTk5OSwgdGhlIElNRiBlc3RhYmxpc2hlZCB0aGUgUG92ZXJ0eSBSZWR1Y3Rpb24gYW5kIEdyb3d0aCBGYWNpbGl0eSAoUFJHRikgdG8gbWFrZSB0aGUgb2JqZWN0aXZlcyBvZiBwb3ZlcnR5IHJlZHVjdGlvbiBhbmQgZ3Jvd3RoIG1vcmUgY2VudHJhbCB0byBsZW5kaW5nIG9wZXJhdGlvbnMgaW4gaXRzIHBvb3Jlc3QgbWVtYmVyIGNvdW50cmllcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDVdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2005,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following statements is correct? FiscalResponsibility and Budget Management Act (FRBMA)concerns:  ",
      "questionId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDUy",
      "description" : "RmlzY2FsIHJlc3BvbnNpYmlsaXR5IGFuZCBidWRnZXQgbWFuYWdlbWVudCBhY3QgYWltcyB0byBicmluZyBkb3duIEZpc2NhbCBkZWZpY2l0IHRvIDMlIGJ5IDIwMDggYW5kIHRoZSByZXZlbnVlIGRlZmljaXQgdG8gemVybyBieSAyMDA4Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMDZdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2006,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Fiscal Deficit only",
        "option2" : " Revenue deficit only",
        "option3" : " Both fiscal deficit and revenue deficit",
        "option4" : " Neither fiscal deficit nor revenue deficit"
      }
    },
    {
      "index" : 53,
      "question" : "Which one of the following is the correct sequence in thedecreasing order of contribution of different sectors to theGross Domestic Product of India? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDUz",
      "description" : "Q29udHJpYnV0aW9uIG9mIGRpZmZlcmVudCBzZWN0b3JzIHRvIG5hdGlvbmFsIGluY29tZS4gU2VydmljZXMgLSA1NS4xJSwgSW5kdXN0cnkgLSAyNi40JSwgQWdyaWN1bHR1cmUgLSAxOC41JQ==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Services - Industry - Agriculture",
        "option2" : " Services - Agriculture - Industry",
        "option3" : " Industry - Services - Agriculture",
        "option4" : " Industry - Agriculture - Services"
      }
    },
    {
      "index" : 54,
      "question" : "Participatory Notes (PNs) are associated with which one ofthe following? ",
      "questionId" : "WzIwMDddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU0",
      "description" : "UGFydGljaXBhdG9yeSBOb3RlcyAoUE5zIC8gUC1Ob3RlcykgYXJlIGluc3RydW1lbnRzIHVzZWQgYnkgaW52ZXN0b3JzIG9yIGhlZGdlIGZ1bmRzIHRoYXQgYXJlIG5vdCByZWdpc3RlcmVkIHdpdGggdGhlIFNFQkkgKFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIEJvYXJkIG9mIEluZGlhKSB0byBpbnZlc3QgaW4gSW5kaWFuIHNlY3VyaXRpZXMuIFBhcnRpY2lwYXRvcnkgbm90ZXMgYXJlIGluc3RydW1lbnRzIHRoYXQgZGVyaXZlIHRoZWlyIHZhbHVlIGZyb20gYW4gdW5kZXJseWluZyBmaW5hbmNpYWwgaW5zdHJ1bWVudCBzdWNoIGFzIGFuIGVxdWl0eSBzaGFyZSBhbmQsIGhlbmNlLCB0aGUgd29yZCwgJ2Rlcml2YXRpdmUgaW5zdHJ1bWVudHMnLiBTRUJJIHBlcm1pdHRlZCBGSUlzIHRvIHJlZ2lzdGVyIGFuZCBwYXJ0aWNpcGF0ZSBpbiB0aGUgSW5kaWFuIHN0b2NrIG1hcmtldCBpbiAxOTkyLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMDddfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2007,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Consolidated Fund of India",
        "option2" : " Foreign Institutional Investors",
        "option3" : " United Nations Development Programme",
        "option4" : " Kyoto Protocol"
      }
    },
    {
      "index" : 55,
      "question" : "Which of the following pairs about India's economicindicator and agricultural production (all in rounded figures)are correctly matched? 1. GDP per capita (current prices): '  37,0002. Rice : 180 million tons3. Wheat : 75 million tonsSelect the correct answer using the code given below:Codes:",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU1",
      "description" : "UmljZSBwcm9kdWN0aW9uIHdhcyA5Ni42OSBNaWxsaW9uIHRvbm5lcyBpbiAyMDA3LTA4Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1 and 2 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1 an 3 only"
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following statements with reference to IndiraGandhi National Old Age Pension Scheme (IGNOAPS):1. All persons of 60 years or above belonging to thehouseholds below poverty line in rural areas are eligible.2. The Central Assistance under this Scheme is at the rateof ` 300 per month per beneficiary. Under the Scheme,States have been urged to give matching amounts.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMDhdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU2",
      "description" : "TWluaXN0cnkgb2YgUnVyYWwgRGV2ZWxvcG1lbnQgb2YgSW5kaWEgaGFzIGludHJvZHVjZWQgSW5kaXJhIEdhbmRoaSBOYXRpb25hbCBPbGQgQWdlIFBlbnNpb24gU2NoZW1lIChJR05PQVBTKSB1bmRlciBOYXRpb25hbCBTb2NpYWwgQXNzaXN0YW5jZSBQcm9ncmFtbWUgKE5TQVApIGluIHRoZSB5ZWFyIDIwMDcuIElHTk9BUFMgYWxzbyBjYWxsZWQgYXMgTmF0aW9uYWwgT2xkIEFnZSBQZW5zaW9uIFNjaGVtZSAoTk9BUFMpLiBUaGUgb2xkIGFnZSBwZW5zaW9uIHNjaGVtZSBhaW1zIHRvIHByb3ZpZGUgc29jaWFsIHByb3RlY3Rpb24gdG8gdGhlIGVsaWdpYmxlIGJlbmVmaWNpYXJpZXMuIEluIHRoaXMgYXJ0aWNsZSwgd2UgbG9vayBhdCB0aGUgSW5kaXJhIEdhbmRoaSBOYXRpb25hbCBPbGQgQWdlIFBlbnNpb24gU2NoZW1lIGluIGRldGFpbC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDhdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2008,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following: 1. Fringe Benefit Tax 2. Interest Tax3. Securities Transaction TaxWhich of the above is/are Direct Tax/Taxes?",
      "questionId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU3",
      "description" : "RnJpbmdlIEJlbmVmaXRzIFRheCAoRkJUKSB3YXMgdGhlIHRheCBhcHBsaWVkIHRvIG1vc3QsIGFsdGhvdWdoIG5vdCBhbGwsIGZyaW5nZSBiZW5lZml0cy4gQSBuZXcgdGF4IHdhcyBpbXBvc2VkIG9uIGVtcGxveWVycyBieSBJbmRpYSdzIEZpbmFuY2UgQWN0IDIwMDUgYW5kIHdhcyBpbnRyb2R1Y2VkIGZvciB0aGUgZmluYW5jaWFsIHllYXIgY29tbWVuY2luZyBBcHJpbCAxLCAyMDA1LiBUaGUgRnJpbmdlIEJlbmVmaXQgVGF4IHdhcyBhYm9saXNoZWQgaW4gdGhlIEZpbmFuY2UgQmlsbCBvZiAgMjAwOS4gU2VjdXJpdGllcyBUcmFuc2FjdGlvbiBUYXggKFNUVCkgaXMgdGhlIHRheCBwYXlhYmxlIG9uIHRoZSB2YWx1ZSBvZiB0YXhhYmxlIHNlY3VyaXRpZXMgdHJhbnNhY3Rpb24uIFNUVCB3YXMgaW50cm9kdWNlZCBpbiBJbmRpYSBieSB0aGUgMjAwNCBidWRnZXQgYW5kIGlzIGFwcGxpY2FibGUgd2l0aCBlZmZlY3QgZnJvbSAxc3QgT2N0b2JlciAyMDA0LiBJbnRlcmVzdCB0YXggaXMgaW1wb3NlZCBhcyBhIHNwZWNpYWwgdGF4IG9uIGludGVyZXN0IGFjY3J1ZWQgaW4gc3BlY2lmaWVkIGNhc2VzLiBUaGUgSW50ZXJlc3QgVGF4IEFjdCBvZiAxOTc0IGdvdmVybnMgdGhlIHRheCBwcm9jZXNzIGFzc29jaWF0ZWQgd2l0aCB0aGUgaW1wb3NpdGlvbiBhbmQgY29sbGVjdGlvbiBvZiBpbnRlcmVzdCB0YXguIFRoZSBBY3QgYXBwbGllcyB0byBhbGwgc2NoZWR1bGVkIEJhbmtzIHRoYXQgYXJlIHJlcXVpcmVkIHRvIHBheSB0YXggb24gdGhlIGNoYXJnZWFibGUgaW50ZXJlc3QgYW1vdW50cyB0aGV5IGhhdmUgb24gdGhlaXIgZGVwb3NpdHMuIFRoZSBhY3QgaXMgbm8gbG9uZ2VyIGFwcGxpY2FibGUgd2l0aCByZWdhcmQgdG8gY2hhcmdlYWJsZSBpbnRlcmVzdCBhY2NydWluZyBhZnRlciAzMSBNYXJjaCAyMDAwLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMDldfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2009,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 58,
      "question" : "Which one of the following statements is an appropriatedescription of deflation? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU4",
      "description" : "RGVmbGF0aW9uIGlzIGEgZGVjcmVhc2UgaW4gdGhlIHByaWNlcyBvZiBnb29kcyBhbmQgc2VydmljZXMuIEl0IG9jY3VycyB3aGVuIHRoZSBhbm51YWwgaW5mbGF0aW9uIHJhdGUgZmFsbHMgYmVsb3cgMCUgIHdoaWNoIGlzIGEgbmVnYXRpdmUgaW5mbGF0aW9uIHJhdGUuIFRoaXMgaXMgZGlmZmVyZW50IGZyb20gRGlzaW5mbGF0aW9uIHdoaWNoIGlzIGEgc2xvdy1kb3duIGluIHRoZSBpbmZsYXRpb24gcmF0ZS4gVGhpcyBpcyBhIHNpdHVhdGlvbiB3aGVuIGluZmxhdGlvbiBkZWNsaW5lcyB0byBsb3dlciBsZXZlbHMgYnV0IHByaWNlcyBjb250aW51ZSB0byByaXNlLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It is a sudden fall in the value of a currency against other currencies",
        "option2" : " It is a persistent recession in both the financial and real sectors of economy",
        "option3" : " It is a persistent fall in the general price level of goods and services",
        "option4" : " It is a fall in the rate of inflation over a period of time"
      }
    },
    {
      "index" : 59,
      "question" : "Which of the following is/are treated as artificial currency?(a) ADR (b) GDR the Cash Reserve Rate, what does it mean? ",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDU5",
      "description" : "QURSIGlzIGFuIEFtZXJpY2FuIERlcG9zaXRhcnkgUmVjZWlwdCB3aGljaCByZXByZXNlbnRzIG93bmVyc2hpcCBpbiB0aGUgc2hhcmVzIG9mIGEgbm9uLVVTIGNvbXBhbnkgdGhhdCB0cmFkZXMgaW4gVS4gUy4gZmluYW5jaWFsIG1hcmtldHMuIEdEUiBpcyBHbG9iYWwgRGVwb3NpdGFyeSBSZWNlaXB0IGlzIGEgYmFuayBjZXJ0aWZpY2F0ZSBpc3N1ZWQgaW4gbW9yZSB0aGFuIG9uZSBjb3VudHJ5IGZvciBzaGFyZXMgaW4gYSBmb3JlaWduIGNvbXBhbnkuIEEgR0RSIGlzIHZlcnkgc2ltaWxhciB0byBBRFIuIFNEUiBpcyBzcGVjaWFsIERyYXdpbmcgUmlnaHRzLiBJdCBpcyBhbiBpbnRlcm5hdGlvbmFsIHR5cGUgb2YgbW9uZXRhcnkgcmVzZXJ2ZSBjdXJyZW5jeSwgY3JlYXRlZCAgYnkgIHRoZSAgSU1GIGluICAxOTY5LiAgU0RSIGNhbiBiZSAgdGhvdWdodCAgYXMgIGFuIGFydGlmaWNpYWwgY3VycmVuY3kgdXNlZCBieSB0aGUgSU1GIGFuZCBkZWZpbmVkIGFzIGEgYmFza2V0IG9mIG5hdGlvbmFsIGN1cnJlbmNpZXMu",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The commercial banks will have less money to lend",
        "option2" : " The Reserve Bank of India will have less money to lend",
        "option3" : " SDR ",
        "option4" : " Both ADR an SDR 60. When the Reserve Bank of India announces an increase of"
      }
    },
    {
      "index" : 61,
      "question" : "With reference to India, consider the following statements:1. The Wholesale Price Index (WPI) in India is availableon a monthly basis only.2. As compared to Consumer Price Index for IndustrialWorkers (CPIIW), the WPI gives less weight to food articles.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDYx",
      "description" : "QWx0ZXIgdGhlIEFiaGlqaXQgU2VuIGNvbW1pdHRlZSdzIHByb3Bvc2FscyBpbiAyMDA0LSAwNSwgdGhlIGdvdmVybm1lbnQgaGFkIGFwcHJvdmVkIHRoZSBwcm9wb3NhbCB0byByZWxlYXNlIG9yIHdob2xlc2FsZSBwcmljZSBiYXNlZCBpbmZsYXRpb24gZGF0YSBvbiBhIG1vbnRobHkgYmFzaXMsIGluc3RlYWQgb2YgZXZlcnkgd2Vlay4gVGhlIGJhc2UgeWVhciB3YXMgY2hhbmdlZCB0byAyMDA0LSAwNSBmcm9tIDE5OTMtOTQuIEhvd2V2ZXIgZGF0YSBvbiBwcmltYXJ5IGFuZCBmdWVsIGl0ZW1zIEUgQiBEIF84IDM0IDIgU3RydWN0dXJlIG9mIHRoZSBJbmRpYW4gRWNvbm9teSAmIERlbW9ncmFwaGljcyAgIHdhcyBjb250aW51ZWQgdG8gcmVsZWFzZSBvbiBhIHdlZWtseSBiYXNpcy4gQ29uc3VtZXIgUHJpY2UgSW5kZXggZm9vZCBncm91cCBoYXMgYSB3ZWlnaHQgb2YgMzkuMSBwZXJjZW50IGFzIGNvbXBhcmVkIHRvIHRoZSBjb21iaW5lZCB3ZWlnaHQgb2YgMjQuNCBwZXJjZW50IChmb29kIGFydGljbGVzIGFuZCBNYW51ZmFjdHVyZWQgZm9vZCBwcm9kdWN0cykgaW4gd2hvbGVzYWxlIFByaWNlIEluZGV4IGZvb2QgYmFza2V0Lg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 62,
      "question" : "In the context of Indian economy, consider the followingpairs: Term Most Appropriate description1. Melt down Fall in stock prices2. Recession Fall in growth rate3. Slow down Fall in GDPWhich of the pairs given above is/are correctly matched?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDYy",
      "description" : "UmVjZXNzaW9uIGlzIGEgcGVyaW9kIG9mIHRlbXBvcmFyeSBlY29ub21pYyBkZWNsaW5lIGR1cmluZyB3aGljaCB0cmFkZSBhbmQgaW5kdXN0cmlhbCBhY3Rpdml0eSBhcmUgcmVkdWNlZCwgZ2VuZXJhbGx5IGlkZW50aWZpZWQgYnkgYSBmYWxsIGluIEdEUCBpbiB0d28gc3VjY2Vzc2l2ZSBxdWFydGVycy4gU2xvdyBkb3duIGlzIGEgcGVyaW9kIG9mIHNsb3cgZWNvbm9taWMgZ3Jvd3RoLCBlc3BlY2lhbGx5IG9uZSB0aGF0IGZvbGxvd3MgYSBwZXJpb2Qgb2Ygcm9idXN0IGdyb3d0aCBNZWx0IGRvd24gZm9sbG93cyBub3JtYWxseSBhIGJsYWNrIHN3YW4gZXZlbnQgYW5kIHF1aWNrbHkgcmVzdWx0cyBpcyBmaW5hbmNpYWwgYXNzZXRzIGxvb3NpbmcgaW4gdmxhdWUsIG9mdGVuIHJlc3VsdGluZyBpbiBsaXF1aWRpdHkgY3Jpc2lzLiBUaGUgc3RvY2sgbWFya2V0IGluIEluZGlhIHN1ZmZlcmVkIG1lbHQgZG93biBmcm9tIFNlbnNleCAyMCwwMDAgaW4gbWlkIDIwMDggdG8gMTAsMDAwIGluIG1pZCAyMDA5Lg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 63,
      "question" : "In the context of governance, consider the following: 1. Encouraging Foreign Direct Investment inflows2. Privatization of higher educational Institutions3. Down-sizing of bureaucracy4. Selling/offloading the shares of Public Sector UndertakingsWhich of the above can be used as measures to control thefiscal deficit in India?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDYz",
      "description" : "T3ZlciB0aGUgcGFzdCBmZXcgZGVjYWRlcywgaXQgaGFzIGJlZW4gdGhlIHByaXZhdGUgc2VjdG9yIHRoYXQgaGFzIHJlYWxseSBkcml2ZW4gY2FwYWNpdHktY3JlYXRpb24gaW4gSW5kaWFuIGhpZ2hlciBlZHVjYXRpb24uIFNlcmlvdXMgdGhpbmtpbmcgb24gZG93bnNpemluZyBidXJlYXVjcmFjeSBoYWQgYmVndW4gaW4gdGhlIGVhcmx5IDE5OTBzLiBBIHN1Yi1ncm91cCBzZXQgdXAgYnkgdGhlIFBsYW5uaW5nIENvbW1pc3Npb24gaGFkIHN1Z2dlc3RlZCBpbiAxOTkzIHRoYXQgdGhlIFVuaW9uIGdvdmVybm1lbnQgc2hvdWxkIHdlZWQgb3V0IGF0IGxlYXN0IDIsMDAwIHNlbmlvci0gbGV2ZWwgcG9zaXRpb25zIGluIHZhcmlvdXMgbWluaXN0cmllcy4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 2, 3 and 4",
        "option3" : " 1, 2 and 4 ",
        "option4" : " 3 an 4 only"
      }
    },
    {
      "index" : 64,
      "question" : "With reference to' Indian economy, consider the followingstatements: 1. The Gross Domestic Product (GDP) has increased byfour times in the last 10 years.2. The percentage share of Public Sector in GDP hasdeclined in the last 10 years.Which of the statements, given above is/ are correct?",
      "questionId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJlfDY0",
      "description" : "VGhlIGNvcnJlY3QgYW5zd2VyIGlzIChiKS4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTBdfFBhcGVyIC0gSXxFY29ub21pYyAmIFNvY2lhbCBEZXZlbG9wbWVudHxJbmRpYW4gRGVtb2dyYXBoaWNzICYgU3RydWN0dXJl",
      "year" : 2010,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 65,
      "question" : "India is regarded as a country with 'Demographic Dividend''.This is due to ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw2NQ==",
      "description" : "VGhlIGRlbW9ncmFwaGljIGRpdmlkZW5kIGlzIGEgcmlzZSBpbiB0aGUgcmF0ZSBvZiBlY29ub21pYyBncm93dGggZHVlIHRvIGEgcmlzaW5nIHNoYXJlIG9mIHdvcmtpbmcgYWdlIHBlb3BsZSBpbiBhIHBvcHVsYXRpb24uIFRoaXMgdXN1YWxseSBvY2N1cnMgbGF0ZSBpbiB0aGUgZGVtb2dyYXBoaWMgdHJhbnNpdGlvbiB3aGVuIHRoZSBmZXJ0aWxpdHkgcmF0ZSBmYWxscyBhbmQgdGhlIHlvdXRoIGRlcGVuZGVuY3kgcmF0ZSBkZWNsaW5lcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Its high population in the age group below 15 years.",
        "option2" : " Its high population in the age group of 15-64 years.",
        "option3" : " Its high population in the age group above 65 years.",
        "option4" : " Its high total population."
      }
    },
    {
      "index" : 66,
      "question" : "Which one of the following is not a feature of 'Value AddedTax' ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw2Ng==",
      "description" : "VkFULCBiZWluZyBhICd0YXggb24gc2FsZSBvciBwdXJjaGFzZSBvZiBnb29kcyB3aXRoaW4gYSBTdGF0ZScgaXMgYSBTdGF0ZSBTdWJqZWN0IGJ5IHZpcnR1ZSBvZiBFbnRyeSA1NCBvZiBTdGF0ZSBMaXN0IG9mIHRoZSBTZXZlbnRoIFNjaGVkdWxlIG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEuIFNpbmNlIFZBVC9TYWxlcyB0YXggaXMgYSBTdGF0ZSBzdWJqZWN0LCB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50IGhhcyBiZWVuIHBsYXlpbmcgdGhlIHJvbGUgb2YgYSBmYWNpbGl0YXRvciBmb3Igc3VjY2Vzc2Z1bCBpbXBsZW1lbnRhdGlvbiBvZiBWQVQu",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It is multi-point destination-based system of taxation.",
        "option2" : " It is a tax levied on value addition at each stage of transaction in the production distribution chain.",
        "option3" : " It is a tax on the final consumption of goods or services and must ultimately be borne by the consumer.",
        "option4" : " It is basically a subject of the central government and"
      }
    },
    {
      "index" : 67,
      "question" : "Karl Marx explained the process of class struggle with thehelp of which one of the following theories? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw2Nw==",
      "description" : "RGFyd2luJ3MgJ3N0cnVnZ2xlIGZvciBleGlzdGVuY2UnIGluIG5hdHVyYWwgaGlzdG9yeSBpcyBhbmFsb2dvdXMgdG8gdGhlIGNsYXNzIHN0cnVnZ2xlIGluICdodW1hbiBIaXN0b3J5Jy4gU28gb3B0aW9uIChjKSBzdGFuZHMgaW5jb3JyZWN0LiBUaGUgc2tldGNoIG9mIGRpYWxlY3RpY2FsIG1hdGVyaWFsaXNtIGdpdmVuIGJ5IEthcmwgTWFyeCBleHBsYWlucyB0aGF0IERpYWxlY3RpY2FsIHByaW5jaXBsZSBpcyBvZiB1bml2ZXJzYWwgYXBwbGljYXRpb24gYW5kIGFsbCB0aGUgZGV2ZWxvcG1lbnQgaXMgJ3N0cnVnZ2xlIG9mIG9wcG9zaXRlcycgb3IgJ2NvbmZsaWN0IG9mIG9wcG9zaXRlcycuIFRodXMgb3B0aW9uIGQgc3RhbmRzIGNvcnJlY3QgaW4gdGhpcyBxdWVzdGlvbi4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Empirical liberalism",
        "option2" : " Existentialism",
        "option3" : " Darwin's theory of evolution",
        "option4" : " Dialectical materialism"
      }
    },
    {
      "index" : 68,
      "question" : "All revenues received by the Union Government by way oftaxes and other receipts for the conduct of Governmentbusiness are credited to the ? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw2OA==",
      "description" : "VW5kZXIgQXJ0aWNsZSAyNjYgKDEpIG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEsIGFsbCByZXZlbnVlcyAoIGV4YW1wbGUgdGF4IHJldmVudWUgZnJvbSBwZXJzb25hbCBpbmNvbWUgdGF4LCBjb3Jwb3JhdGUgaW5jb21lIHRheCwgY3VzdG9tcyBhbmQgZXhjaXNlIGR1dGllcyBhcyB3ZWxsIGFzIG5vbi10YXggcmV2ZW51ZSBzdWNoIGFzIGxpY2VuY2UgZmVlcywgZGl2aWRlbmRzIGFuZCBwcm9maXRzIGZyb20gcHVibGljIHNlY3RvciB1bmRlcnRha2luZ3MgZXRjLikgcmVjZWl2ZWQgYnkgdGhlIFVuaW9uIGdvdmVybm1lbnQgYXMgd2VsbCBhcyBhbGwgbG9hbnMgcmFpc2VkIGJ5IGlzc3VlIG9mIHRyZWFzdXJ5IGJpbGxzLCBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgbG9hbnMgYW5kIGFsbCBtb25leXMgcmVjZWl2ZWQgYnkgdGhlIFVuaW9uIEdvdmVybm1lbnQgaW4gcmVwYXltZW50IG9mIGxvYW5zIHNoYWxsIGZvcm0gYSBjb25zb2xpZGF0ZWQgZnVuZC4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Contingency Fund of India",
        "option2" : " Public Account",
        "option3" : " Consolidated Fund of India",
        "option4" : " Deposits and Advances Fund"
      }
    },
    {
      "index" : 69,
      "question" : "A rapid increase in the rate of inflation is sometimes attributedto the 'base effect'. What is 'base effect'? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw2OQ==",
      "description" : "VGhlIEJhc2UgZWZmZWN0IHJlZmVycyB0byB0aGUgdGVuZGVuY3kgb2YgYSBzbWFsbCBjaGFuZ2UgZnJvbSBhIGxvdyBpbml0aWFsIGFtb3VudCB0byB0aGUgY3VycmVudCBhbW91bnQgd2hpY2ggaXMgdHJhbnNsYXRlZCBpbnRvIGEgbGFyZ2UgcGVyY2VudGFnZSBhbmQgYXBwZWFycyBhcyBsYXJnZS4gSXQgaXMgdXN1YWxseSB1c2VkIGluIGNvbnRleHQgb2YgaW5mbGF0aW9uLiBJdCBpbmRpY2F0ZXMgdGhlIGNoYW5nZSBpbiB0aGUgaW5mbGF0aW9uIHJhdGUgaW4gdGhlIGN1cnJlbnQgcGVyaW9kIHdpdGggcmVzcGVjdCB0byB0aGUgYmFzZSBwZXJpb2QuIDcwLiAoZCkgRGF0YSBjYXRlZ29yaWVzIGFuZCBjb21wb25lbnRzIFVuaXRzIDIwMDUtMDYgMjAwNi0wNyAyMDA3LTA4IDIwMDgtMDkgMjAwOS0xMCAyMDEwLTExIEdEUCBhbmQgUmVsYXRlZCBpbmRpY2F0b3JzIEdEUCAoQ3VycmVudCBtYXJrZXQgUHJpY2VzKSBgIGNyb3JlIDM2OTI0ODUgNDI5MzY3MiA0OTg2NDI2IDU1ODI2MjNQRSA2NTUwMjcxUUUgNzg3Nzk0N0FFIEdyb3d0aCBSYXRlICUgMTMuOSAxNi4zIDE2LjEgMTIgMTcuMyAyMC4zIEdEUCAoZmFjdG9yIGNvc3QgMjAwNC0wNSBwcmljZXMpIEdyb3d0aCBSYXRlIFNhdmluZyBSYXRlIGAgY3JvcmUgJSAlIG9mIEdEUCAzMjU0MjE2IDkuNSAzMy41IDM1NjYwMTEgOS42IDM0LjYgMzg5ODk1OCA5LjMgMzYuOSA0MTYyNTA5UEUgNi44IDMyLjIgNDQ5Mzc0M1FFIDguMCAzMy43IDQ4NzkyMzJBRSA4LjYgbmEgQ2FwaXRhbCBGb3JtYXRpb24gKFJhdGUpICUgb2YgR0RQIDM0LjcgMzYuNyAzOC4xIDM0LjUgMzYuNSBuYSBQZXIgQ2FwLiBOZXQgTmF0aW9uYWwgSW5jb21lIChGYWN0b3IgY29zdCBhdCBjdXJyZW50IHByaWNlcykgYCAyNzEyMyAzMTE5OCAzNTgyMCA0MDYwNSA0NjQ5MiA1NDUyNw==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " It is the impact of drastic deficiency in supply due to failure of crops",
        "option2" : " It is the impact of the surge in demand due to rapid economic growth",
        "option3" : " It is the impact of the price levels of previous year on the calculation of inflation rate",
        "option4" : " None of the statements (a), (b) and (c) given above is"
      }
    },
    {
      "index" : 71,
      "question" : "In India, which of the following have the highest share inthe disbursement of credit to agriculture and alliedactivities? ",
      "questionId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3MQ==",
      "description" : "Q29tbWVyY2lhbCBCYW5rcyAtIDYwJSBDby1vcGVyYXRpdmUgQmFua3MgLSAzMCUgUlJCIGFuZCBvdGhlcnMgLSAxMCU=",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTEgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2011,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Commercial Banks ",
        "option2" : " Cooperative Banks",
        "option3" : " Regional Rural Banks ",
        "option4" : " Microfinance Institutions"
      }
    },
    {
      "index" : 72,
      "question" : "Which of the following are the methods of Parliamentarycontrol over public finance in India? 1. Placing Annual Financial Statement before the Parliament2. Withdrawal of moneys from Consolidated Fund of Indiaonly after passing the Appropriation Bill3. Provisions of supplementary grants and vote-on-account4. A periodic or at least a mid-year review of programmeof the Government against macroeconomic forecastsand expenditure by a Parliamentary Budget Office5. Introducing Finance Bill in the ParliamentSelect the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3Mg==",
      "description" : "MS4gUGxhY2luZyBBbm51YWwgRmluYW5jaWFsIFN0YXRlbWVudCBiZWZvcmUgdGhlIFBhcmxpYW1lbnQgMi4gV2l0aGRyYXdhbCBvZiBtb25leXMgZnJvbSBDb25zb2xpZGF0ZWQgRnVuZCBvZiAgICBJbmRpYSBvbmx5IGFmdGVyIHBhc3NpbmcgdGhlIEFwcHJvcHJpYXRpb24gQmlsbCAzLiBQcm92aXNpb25zIG9mIHN1cHBsZW1lbnRhcnkgZ3JhbnRzIGFuZCB2b3RlLW9uLWFjY291bnQgNS4gSW50cm9kdWNpbmcgRmluYW5jZSBCaWxsIGluIHRoZSBQYXJsaWFtZW50",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2, 3 and 5 only ",
        "option2" : " 1, 2 and 4 only",
        "option3" : " 3, 4 and 5 only ",
        "option4" : " 1, 2, 3, 4 an 5"
      }
    },
    {
      "index" : 73,
      "question" : "The Reserve Bank of India (RBI) acts as a bankers' bank.This would imply which of the following? 1. Other banks retain their deposits with the RBI.2. The RBI lends  funds  to  the  commercial banks intimes of need.3. The RBI advises the commercial banks on monetary matters.Select the correct answer using the codes given below:",
      "questionId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3Mw==",
      "description" : "QWxsIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0Lg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTIgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2012,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 2 and 3 only ",
        "option2" : " 1 and 2 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 76,
      "question" : "Which one of the following groups of items is included inIndia's foreign-exchange reserves? ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3Ng==",
      "description" : "SW4gSW5kaWEncyBmb3JlaWduIGV4Y2hhbmdlIHJlc2VydmUsIGl0IGluY2x1ZGVzIGZvcmVpZ24gY3VycmVuY3kgZGVwb3NpdHMsIGJvbmRzLCBnb2xkIHJlc2VydmVzLCBTRFJzIGFuZCBJTUYgcmVzZXJ2ZSBwb3NpdGlvbi4gRm9yZWlnbiBleGNoYW5nZSByZXNlcnZlcyBhcmUgYW4gaW1wb3J0YW50IHBhcnQgb2YgdGhlIGludGVybmF0aW9uYWwgaW52ZXN0bWVudCBwb3NpdGlvbiBvZiBhIGNvdW50cnku",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Foreign-currency assets, Special Drawing Rights (SDRs) and loans from foreign countries",
        "option2" : " Foreign-currency assets, gold holdings of the RBI and SDR's",
        "option3" : " Foreign-currency assets, loans from the World Bank and SDRs",
        "option4" : " Foreign-currency assets, gold holdings of the RBI and"
      }
    },
    {
      "index" : 77,
      "question" : "The national income of a country for a given period is equalto the ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3Nw==",
      "description" : "TmF0aW9uYWwgSW5jb21lIGlzIHRoZSBtb25leSB2YWx1ZSBvZiBhbGwgdGhlIGZpbmFsIGdvb2RzIGFuZCBzZXJ2aWNlcyBwcm9kdWNlZCBieSBhIGNvdW50cnkgZHVyaW5nIGEgcGVyaW9kIG9mIG9uZSB5ZWFyLiBOYXRpb25hbCBJbmNvbWUgY29uc2lzdHMgb2YgYSBjb2xsZWN0aW9uIG9mIGRpZmZlcmVudCB0eXBlcyBvZiBnb29kcyBhbmQgc2VydmljZXMgb2YgZGlmZmVyZW50IHR5cGVzLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " total value of goods and services produced by the nationals",
        "option2" : " sum of total consumption and investment expenditure",
        "option3" : " sum of personal income of all individuals",
        "option4" : " money value of final goods and services produced"
      }
    },
    {
      "index" : 78,
      "question" : "Which of the following constitute Capital Account?1. Foreign Loans 2. Foreign Direct Investment3. Private Remittances4. Portfolio InvestmentSelect the correct answer using the codes given below.",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3OA==",
      "description" : "Q2FwaXRhbCBBY2NvdW50IGNvbXByaXNlcyBvZiBGb3JlaWduIGxvYW5zLCBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50IGFuZCBQb3J0Zm9saW8gSW52ZXN0bWVudC4gQ2FwaXRhbCBBY2NvdW50IGlzIHRoZSBuZXQgcmVzdWx0IG9mIHB1YmxpYyBhbmQgcHJpdmF0ZSBpbnRlcm5hdGlvbmFsICBpbnZlc3RtZW50cyBmbG93aW5nIGluIGFuZCBvdXQgb2YgYSBjb3VudHJ5LiBQb3J0Zm9saW8gaW52ZXN0bWVudCBpcyB0aGUgYnV5aW5nIG9mIHNoYXJlcyBhbmQgYm9uZHMuIEZESSBpcyB0aGUgaW52ZXN0bWVudHMgYnkgZm9yZWlnbmVycyBpbiBhIGNvdW50cnkgb3IgdGhlIGNpdGl6ZW5zIGludmVzdGluZyBpbiBmb3JlaWduIGNvdW50cmllcy4=",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 ",
        "option2" : " 1, 2 and 4",
        "option3" : " 2, 3 and 4 ",
        "option4" : " 1, 3 an 4"
      }
    },
    {
      "index" : 79,
      "question" : "In the context of Indian economy, 'Open Market Operations'refers to ",
      "questionId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw3OQ==",
      "description" : "SXQgaXMgYW4gYWN0aXZpdHkgYnkgYSBjZW50cmFsIGJhbmsoUkJJKSB0byBidXkgb3Igc2VsbCBnb3Zlcm5tZW50IHNlY3VyaXRpZXMuIFRoZSBhaW0gb2Ygb3BlbiBtYXJrZXQgb3BlcmF0aW9ucyBpcyB0byBtYW5pcHVsYXRlIHRoZSBzaG9ydCB0ZXJtIGludGVyZXN0IHJhdGUgYW5kIHRoZSBzdXBwbHkgb2YgYmFzZSBtb25leSBpbiBhbiBlY29ub215LCBhbmQgaW5kaXJlY3RseSBjb250cm9sIHRoZSB0b3RhbCBtb25leSAgc3VwcGx5Lg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTMgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2013,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " borrowing by scheduled banks from the RBI",
        "option2" : " lending by commercial banks to industry and trade",
        "option3" : " purchase and sale of government securities by the RBI",
        "option4" : " None of the above"
      }
    },
    {
      "index" : 80,
      "question" : "The  main  objective  of  the  12th Five-Year Plan is(a) inclusive growth and poverty reduction in relation to ",
      "questionId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw4MA==",
      "description" : "MTJ0aCBGaXZlIFllYXIgUGxhbiBvZiB0aGUgR292ZXJubWVudCBvZiBJbmRpYSAoMjAxMi0gMTcpIGFpbXMgYXQgZmFzdGVyLCBzdXN0YWluYWJsZSBhbmQgbW9yZSBpbmNsdXNpdmUgZ3Jvd3RoLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTQgLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2014,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " banking operations",
        "option2" : " inclusive and sustainable growth",
        "option3" : " sustainable and inclusive growth to reduce unemployment",
        "option4" : " faster, sustainable and more inclusive growth 81. The terms 'Marginal  Standing Facility Rate' and 'Net  Demand and Time Liabilities', sometimes appearing in news, are used"
      }
    },
    {
      "index" : 82,
      "question" : "With reference to Indian economy, consider the followingstatements: 1. The rate of growth of Real Gross Domestic Producthas steadily increased in the last decade.2. The Gross Domestic Product at  market prices (inrupees) has steadily increased in the last decade.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODI=",
      "description" : "RHVlIHRvIHJlY2Vzc2lvbiBpbiAyMDA4LCB0aGUgZ3Jvd3RoIHJhdGUgb2YgdGhlIEluZGlhbiBlY29ub215IGhhZCBkZWNsaW5lZCBmb3IgdGhlIG5leHQgZmV3IHllYXJzIGZyb20gOC05JSB0byA1LTYlLiBFdmVuIHRob3VnaCB0aGUgZ3Jvd3RoIHJhdGUgaGFkIGRlY2xpbmVkLCBpdCBuZXZlciBiZWNhbWUgbmVnYXRpdmUuIFNvLCB0aGUgR0RQIGF0IG1hcmtldCBwcmljZXMgaGFzIGFsd2F5cyBpbmNyZWFzZWQgeWVhciBvbiB5ZWFyIHNpbmNlIGxhc3Qgb25lIGRlY2FkZQ==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTUtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2015,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 83,
      "question" : "Which one of the following best describes the term \"MerchantDiscount Rate\" sometimes seen in news?       ",
      "questionId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZXw4Mw==",
      "description" : "TWVyY2hhbnQgRGlzY291bnQgUmF0ZSAoTURSKSBpcyB0aGUgZmVlIGJvcm5lIGJ5IHRoZSBtZXJjaGFudCBmb3IgdXNpbmcgY3JlZGl0IGFuZCBkZWJpdCBjYXJkIHBheW1lbnQgc3lzdGVtLiBUbyBlbmNvdXJhZ2UgZGlnaXRhbCB0cmFuc2FjdGlvbnMsIE1pbmlzdHJ5IG9mIEVsZWN0cm9uaWNzIGFuZCBpbmZvcm1hdGlvbiB0ZWNobm9sb2d5IChNRUlUWSkgaGFkIGFubm91bmNlZCB0aGF0IGZyb20gMSBKYW51YXJ5IDIwMTggZm9yIHRoZSBuZXh0IHR3byB5ZWFycywgaXQnbGwgYmVhciB0aGUgTURSIGZlZXMgb2YgbWVyY2hhbnRzLCBmb3IgcGF5bWVudHMgdXAtdG8gUnMuMiwwMDAvLSBJRiBzdWNoIHBheW1lbnQgaXMgbWFkZSB2aWEgZGViaXQgY2FyZCwgQkhJTSBvciBBYWRoYXIgZW5hYmxlZCBwYXltZW50IHN5c3RlbS4gODQuIChhKSAoLSlCSElNIEFwcCB3YXMgbGF1bmNoZWQgaW4gMjAxNiwgaXQgYWxsb3dzIG1vbmV5IHRyYW5zZmVyIHRvIFVQSS1lbmFibGVkIGJhbmsgYWNjb3VudHMgc28gIzEgaXMgcmlnaHQuICgtKVRoZSBCSElNIGFwcHMgaGFzIHRocmVlIGxldmVscyBvZiBhdXRoZW50aWNhdGlvbi4gRm9yIG9uZSwgdGhlIGFwcCBiaW5kcyB3aXRoIGEgZGV2aWNlJ3MgSUQgYW5kIG1vYmlsZSBudW1iZXIsIHNlY29uZCBhIHVzZXIgbmVlZHMgdG8gc3luYyB3aGljaGV2ZXIgYmFuayBhY2NvdW50IChVUEkgb3Igbm9uLVVQSSBlbmFibGVkKSBpbiBvcmRlciB0byB0aGUgY29uZHVjdCB0cmFuc2FjdGlvbi4gVGhpcmQsIHdoZW4gYSB1c2VyIHNldHMgdXAgdGhlIGFwcCB0aGV5IGFyZSBhc2tlZCB0byBjcmVhdGUgYSBwaW4gd2hpY2ggaXMgbmVlZGVkIHRvIGxvZyBpbnRvIHRoZSBhcHAuIEhlbmNlICMyIGlzIHdyb25nLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTggLSBJXXxQYXBlciAtIEl8RWNvbm9taWMgJiBTb2NpYWwgRGV2ZWxvcG1lbnR8SW5kaWFuIERlbW9ncmFwaGljcyAmIFN0cnVjdHVyZQ==",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " The incentive given by a bank to a merchant for accepting payments through debit cards pertaining to that bank.",
        "option2" : " The amount paid back by banks to their customers when they use debit cards for financial transactions for purchasing goods or services.",
        "option3" : " The charge to a merchant by a bank for accepting payments from his customers through the bank's debit cards.",
        "option4" : " The incentive given by the Government, to merchants"
      }
    },
    {
      "index" : 85,
      "question" : "Which one of the following links all the ATMs in India ?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODU=",
      "description" : "VGlsbCAyMDA5LCBSQkkncyBJbnN0aXR1dGUgZm9yIERldmVsb3BtZW50IGFuZCBSZXNlYXJjaCBpbiBCYW5raW5nIFRlY2hub2xvZ3kgKElEUkJUKSBwcm92aWRlZCB0aGUgbGlua2FnZXMgdG8gQVRNIG5ldHdvcmsgaW4gSW5kaWEgYnV0IGFmdGVyd2FyZHMsIGl0IHdhcyB0YWtlbiBvdmVyIGJ5IE5QQ2kncyBOYXRpb25hbCBGaW5hbmNpYWwgU3dpdGNoIChORlMpLg==",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Indian banks' Association",
        "option2" : " National Securities Depository Limited",
        "option3" : " National Payments Corporation of India",
        "option4" : " Reserve Bank of India"
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements: 1. Capital Adequacy Ratio (CAR) is the amount thatbanks have to maintain in the form of their ownEBD_8342Structure of the Indian Economy & Demographics  funds to offset any loss that banks incur if theaccount-holders fail to repay dues.2. CAR is decided by each individual bank.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODY=",
      "description" : "Q0FSIGlzIGRlY2lkZWQgYnkgdGhlIGJlbmNobWFya3Mgc2V0IGJ5IEJBU0VMLUlJSSBDb21taXR0ZWUgb24gQmFua2luZyBzdXBlcnZpc2lvbiBhbmQgaW1wbGVtZW50ZWQgYnkgdGhlIGNlbnRyYWwgYmFuayBvZiBpbmRpdmlkdWFsIGNvdW50cnkuIFNvLCAjMiBpcyByaWdodCwgd2hlcmVhcyAjMSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 87,
      "question" : "Consider the following statements 1. The Fiscal Responsibility and Budget Management( FRBM) Review Committee Report has recommendeda debt to GDP ratio of 60% for the general (combined)government by 2023, comprising 40% for the CentralGovernment and 20% for the State Governments.2. The Central Government has domestic liabilities of21% of GDP as compared to that of 49% of GDP ofthe State Governments.3. As per the Constitution of India, it is mandatory fora State to take the Central Government's consent forraising any loan if the former owes any outstandingliabilities to the latter.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODc=",
      "description" : "QXMgcGVyIEVjb25vbWljIFN1cnZleSwgZmlyc3Qgc3RhdGVtZW50IGlzIHJpZ2h0IGJ1dCBDZW50cmFsIEdvdmVybm1lbnQncyBkb21lc3RpYyBsaWFiaWxpdHkgaXMgfjQ2JSBzbyAjMiBpcyB3cm9uZy4gQnkgZWxpbWluYXRpb24sIHdlIGdldCAoQyk=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1  and 3  only ",
        "option4" : " 1, 2 an 3"
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following items: 1. Cereal grains hulted2. Chicken eggs cooked3. Fish processed and canned4. Newspaper containing advertising materialWhich of the above items is/are exempted under GST(Goods and Services Tax)?",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODg=",
      "description" : "V2hlbiBjbGllbnQgYm9va3MgYWRkIGluIG5ld3NwYXBlciwgaGUgaGFzIHRvIHBheSAxOCUgR1NUIHRvIG5ld3NwYXBlciBvd25lciB3aG8gZGVwb3NpdHMgaXQgdG8gR292ZXJubWVudC4gQnV0IHdoZW4gc3VjaCBuZXdzcGFwZXIgaXMgc29sZCB0byBwdWJsaWMsIHRoZXkgYXJlIG5vdCByZXF1aXJlZCB0byBwYXkgbmV3c3BhcGVyIHByaWNlICsgR1NULiBTbyAjNCBpcyBleGVtcHRlZCBmcm9tIEdTVC4gUHJvY2Vzc2VkIC8gQ2FubmVkIGZvb2QgKCMzKSBpcyBzdWJqZWN0IHRvIEdTVC4gU28sIGJ5IGVsaW1pbmF0aW9uLCB3ZSBnZXQgY29ycmVjdCBhbnN3ZXIgQy4gU29tZSBleHBlcnRzIHdlcmUgZGl2aWRlZCB0aGF0IGlmIGVnZ3MgYXJlIGNvb2tlZCBpbiBhIDUtIHN0YXIgaG90ZWwsIGl0J2xsIGJlIHN1YmplY3RlZCB0byBHU1QgaG93ZXZlciBVUFNDJ3Mgb2ZmaWNpYWwgQW5zd2VyIGtleSBoYXMga2VwdCBDIGlzIHRoZSBjb3JyZWN0IG9wdGlvbi4=",
      "correctOption" : "Mw==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 1, 2, 3 an 4"
      }
    },
    {
      "index" : 89,
      "question" : "With reference to India's decision to levy an equalizationtax of 6% on online advertisement services offered bynon-resident entities, which of the following statementsis/are correct? 1. It  is  introduced as  a  part  of  the  Income Tax Act.2. Non-resident entities that offer advertisement servicesin India can claim a tax credit in their home countryunder the \"Double Taxation Avoidance Agreements\".Select the correct answer using the code given below:",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8ODk=",
      "description" : "VGhpcyB3YXMgaW50cm9kdWNlZCBpbiAyMDE2LCBhcyBhIHNlcGFyYXRlIGxlZ2lzbGF0aW9uIHVuZGVyIEZpbmFuY2UgQmlsbCwgYW5kIGl0IGRvZXNuJ3QgcHJvdmlkZSB0YXggY3JlZGl0IGluIGhvbWUgY291bnRyeSBzbyBib3RoIHdyb25nLg==",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 90,
      "question" : "Despite being a high saving economy, capital formation maynot result in significant increase in output due to ",
      "questionId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8OTA=",
      "description" : "Q2FwaXRhbCBPdXRwdXQgUmF0aW8gKElDT1IpIG1lYXN1cmVzIHRoZSBwZXJjZW50YWdlIGluY3JlYXNlIGluIGNhcGl0YWwgZm9ybWF0aW9uIHJlcXVpcmVkIG9idGFpbmluZyBhIHBlcmNlbnRhZ2UgaW5jcmVhc2UgaW4gR0RQLiBFbnRyZXByZW5ldXJzLCBieSBpbnZlc3RpbmcgdGhlaXIgb3duIHNhdmluZ3MgYW5kIGluZm9ybWFsbHkgbW9iaWxpemluZyB0aGUgc2F2aW5ncyBvZiB0aGVpciBmcmllbmRzIGFuZCByZWxhdGl2ZXMgY29udHJpYnV0ZSB0byB0aGUgcHJvY2VzcyBvZiBjYXBpdGFsIGZvcm1hdGlvbi4gVGhlc2UgaW5mb3JtYWwgZnVuZGluZyBzdXBwbGVtZW50cyB0aGUgZnVuZHMgbWFkZSBhdmFpbGFibGUgYnkgdGhlIGZvcm1hbCBtZWFucyBvZiByYWlzaW5nIHJlc291cmNlcyBmcm9tIGJhbmtzLCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIGFuZCBjYXBpdGFsIG1hcmtldHMuIFNvLCAiRCIgaXMgdGhlIGZpdHRpbmcgb3B0aW9uLSBpZiBjYXBpdGFsIHRvIG91dHB1dCByYXRpbyBpcyBoaWdoIHRoZW4gY2FwaXRhbCBmb3JtYXRpb24gbWF5IG5vdCByZXN1bHQgaW4gc2lnbmlmaWNhbnQgaW5jcmVhc2UgaW4gdGhlIG91dHB1dC4=",
      "correctOption" : "NA==",
      "topicId" : "WzIwMTgtSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2018,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " weak administrative machinery",
        "option2" : " illiteracy",
        "option3" : " high population density",
        "option4" : " high capital-output ratio"
      }
    },
    {
      "index" : 91,
      "question" : "Which of the following is not included in the assets ofa commercial bank in India? ",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8OTE=",
      "description" : "TkNFUlQgTWFjcm9lY29ub21pY3MgQ2xhc3MxMiwgcGFnZSA0MDogb2JzZXJ2ZSB0aGUgdGFibGUgMy4xOiBEZXBvc2l0cyBhcmUgcGxvdHRlZCBvbiB0aGUgbGlhYmlsaXR5IHNpZGUgb2YgYSBjb21tZXJjaWFsIGJhbmsncyBiYWxhbmNlIHNoZWV0LiA5Mi4gKGIpICgtKUN1cnJlbmN5IGNyaXNpcyB1c3VhbGx5IGRlbm90ZXMgdGhhdCBJbmRpYW4gUnVwZWUgaXMgd2Vha2VuaW5nIGFuZCBkb2xsYXIgaXMgc3RyZW5ndGhlbmluZyBhdCBhIHJhcGlkIGxldmVsLiBJbiBvcmRpbmFyeSBjaXJjdW1zdGFuY2VzLCBydXBlZSBkb2xsYXIgZXhjaGFuZ2UgcmF0ZSBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBtYXJrZXQgZm9yY2VzIG9mIHN1cHBseSBhbmQgZGVtYW5kLiBUaGVyZWZvcmUgd2UgaGF2ZSB0byBlbmNvdXJhZ2UgdGhlIGluZmxvdyBvZiBkb2xsYXJzIHRvIHJlZHVjZSB0aGUgcmlzayBvZiBjdXJyZW5jeSBjcmlzaXMuICMxIGFuZCAjMyBjYW4gaGVscCBpbiB0aGlzIHJlZ2FyZCwgIzIgaXMgaXJyZWxldmFudC4gSW5mYWN0ICMyIGNhbiBiYWNrZmlyZSBpZiByYWlzaW5nIEdvdmVybm1lbnQgRXhwZW5kaXR1cmUgcmVzdWx0cyBpbiBleGNlc3NpdmUgcHJpbnRpbmcgb2YgUnVwZWUgY3VycmVuY3kuICgtKVRodXMsIGJ5IGVsaW1pbmF0aW9uIGFuc3dlciBpcyBiOiAxIGFuZCAzLg==",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Advances",
        "option2" : " Deposits",
        "option3" : " Investments",
        "option4" : " Money at call and short notice"
      }
    },
    {
      "index" : 93,
      "question" : "The Chairman of public sector banks are selected by the",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8OTM=",
      "description" : "QmFuayBCb2FyZCBCdXJlYXUgKEJCQikgd2FzIHNldHVwIGluIDIwMTYsIEJCQiBzZWxlY3RzIHRvcCBvZmZpY2lhbHMgKE1ELCBDRU8sIENoYWlybWFuIGFuZCBmdWxsLXRpbWUgRGlyZWN0b3JzKSBmb3IgUFNCcywgTElDIGFuZCBvdGhlciBwdWJsaWMgc2VjdG9yIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMu",
      "correctOption" : "MQ==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " Banks Board Bureau",
        "option2" : " Reserve Bank of India",
        "option3" : " Union Ministry of Finance",
        "option4" : " Management of concerned bank"
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements : 1. Petroleum and Natural Gas Regulatory Board(PNGRB) is the first regulatory body set up by theGovernment of India.2. One of the tasks of PNGRB is to ensure competitivemarkets for gas.3. Appeals against the decisions of PNGRB go beforethe Appellate Tribunals of Electricity.Which of the statements given above is/are correct?",
      "questionId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmV8OTQ=",
      "description" : "UE5HUkIgd2FzIGNvbnN0aXR1dGVkIHVuZGVyIFRoZSBQZXRyb2xldW0gYW5kIE5hdHVyYWwgR2FzIFJlZ3VsYXRvcnkgQm9hcmQgQWN0LCAyMDA2LiBTRUJJIHdhcyBmb3JtZWQgaW4gMTk4OCBieSBhbiBleGVjdXRpdmUgb3JkZXIsIGdpdmVuIHN0YXR1dG9yeSBzdGF0dXMgaW4gMTk5Mi4gQmVzaWRlcywgSVJEQUkgYW5kIG1hbnkgb3RoZXIgcmVndWxhdG9yeSBib2RpZXMgd2VyZSBzZXR1cCBiZWZvcmUgMjAwNi4gU28sIFBOR1JCIGlzIGNlcnRhaW5seSBub3QgdGhlIGZpcnN0IGJvZHkgdG8gYmUgc2V0dXAgYnkgR292dCBvZiBJbmRpYS4gIzEgaXMgd3JvbmcsIGJ5IGVsaW1pbmF0aW9uIHdlIGFyZSBsZWZ0IHdpdGggYW5zd2VyIGIu",
      "correctOption" : "Mg==",
      "topicId" : "WzIwMTktSV18UGFwZXIgLSBJfEVjb25vbWljICYgU29jaWFsIERldmVsb3BtZW50fEluZGlhbiBEZW1vZ3JhcGhpY3MgJiBTdHJ1Y3R1cmU=",
      "year" : 2019,
      "paper" : "Paper - I",
      "topic" : "Indian Demographics & Structure",
      "questionType" : "normal",
      "subject" : "Economic & Social Development",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 an 3"
      }
    }
  ],
  "subject" : "Economic & Social Development",
  "topic" : "Indian Demographics & Structure",
  "year" : "0"
}
