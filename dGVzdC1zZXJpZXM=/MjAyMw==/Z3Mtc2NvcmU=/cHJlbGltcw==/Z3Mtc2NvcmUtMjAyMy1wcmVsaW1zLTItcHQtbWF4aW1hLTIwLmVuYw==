{
  "testId" : "gs-score-2023-prelims-2-pt-maxima-20",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/gs-score/prelims/gs-score-2023-prelims-2-pt-maxima-20.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "There is no evidence of anything resembling the compositions of Alvars and Nayanars in north India till the 14th Century. In this context, consider the following statements:1. Emergence of Rajput states 2. Establishment of Delhi Sultanate 3. Emergence of new urban centers Which of the above statements can be the reason for absence of Bhakti Group in North India till 14th century?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwx",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QgIEJoYWt0aSBNb3ZlbWVudCBpbiBOb3J0aCBJbmRpYSBIaXN0b3JpYW5zIGhhdmUgbm90IGZvdW5kIGV2aWRlbmNlIG9mICBhbnl0aGluZyByZXNlbWJsaW5nIHRoZSBjb21wb3NpdGlvbnMgb2YgIHRoZSBBbHZhcnMgYW5kIE5heWFuYXJzIHRpbGwgdGhlIGZvdXJ0ZWVudGggIGNlbnR1cnkgaW4gTm9ydGggSW5kaWEuIEluIG5vcnRoIEluZGlhIHRoaXMgd2FzIHRoZSBwZXJpb2Qgd2hlbiAgc2V2ZXJhbCBSYWpwdXQgc3RhdGVzIGVtZXJnZWQuIEluIG1vc3Qgb2YgIHRoZXNlIHN0YXRlcyBCcmFobWFuYXMgb2NjdXBpZWQgcG9zaXRpb25zICBvZiBpbXBvcnRhbmNlLCBwZXJmb3JtaW5nIGEgcmFuZ2Ugb2Ygc2VjdWxhciAgYW5kIHJpdHVhbCBmdW5jdGlvbnMuIFRoZXJlIHNlZW1zIHRvIGhhdmUgIGJlZW4gbGl0dGxlIG9yIG5vIGF0dGVtcHQgdG8gY2hhbGxlbmdlIHRoZWlyICBwb3NpdGlvbiBkaXJlY3RseS4gQXQgdGhlIHNhbWUgdGltZSBvdGhlciByZWxpZ2lvdXMgbGVhZGVycyAgbGlrZSBOYXRocywgU2lkZGhhcyBhbmQgSm9naXMsIHdobyBkaWQgbm90ICBmdW5jdGlvbiB3aXRoaW4gdGhlIG9ydGhvZG94IEJyYWhtYW5pY2FsICBmcmFtZXdvcmssIHdlcmUgZ2FpbmluZyBncm91bmQuIE1hbnkgb2YgIHRoZW0gY2FtZSBmcm9tIGFydGlzYW5hbCBncm91cHMsIGluY2x1ZGluZyAgd2VhdmVycywgd2hvIHdlcmUgYmVjb21pbmcgaW5jcmVhc2luZ2x5ICBpbXBvcnRhbnQgd2l0aCB0aGUgZGV2ZWxvcG1lbnQgb2YgIG9yZ2FuaXplZCBjcmFmdCBwcm9kdWN0aW9uLiBbRGVtYW5kIGZvciAgc3VjaCBwcm9kdWN0aW9uIGdyZXcgd2l0aCB0aGUgZW1lcmdlbmNlIG9mICBuZXcgdXJiYW4gY2VudHJlcywgYW5kIGxvbmctZGlzdGFuY2UgdHJhZGUgIHdpdGggQ2VudHJhbCBBc2lhIGFuZCBXZXN0IEFzaWFdLiBNYW55IG9mIHRoZXNlIG5ldyByZWxpZ2lvdXMgbGVhZGVycyAgcXVlc3Rpb25lZCB0aGUgYXV0aG9yaXR5IG9mIHRoZSBWZWRhcywgYW5kICBleHByZXNzZWQgdGhlbXNlbHZlcyBpbiBsYW5ndWFnZXMgc3Bva2VuICBieSBvcmRpbmFyeSBwZW9wbGUuIEEgbmV3IGVsZW1lbnQgaW4gdGhlIHNpdHVhdGlvbiB3YXMgdGhlICBjb21pbmcgb2YgdGhlIFR1cmtzIHdoaWNoIGN1bG1pbmF0ZWQgaW4gIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSBEZWxoaSBTdWx0YW5hdGUgICh0aGlydGVlbnRoIGNlbnR1cnkpLiBUaGlzIHVuZGVybWluZWQgdGhlICBwb3dlciBvZiBtYW55IG9mIHRoZSBSYWpwdXQgc3RhdGVzIGFuZCB0aGUgIEJyYWhtYW5hcyB3aG8gd2VyZSBhc3NvY2lhdGVkIHdpdGggdGhlc2UgIGtpbmdkb21zLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBOb3J0aCBJbmRpYW4gS2luZ2RvbXM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 2,
      "question" : "Vijayanagara Empire was defeated at the Battle of Talikota (1565) by the combined armies of:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwy",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3Q6IFZpamF5YW5hZ2FyYSBmb3JjZXMgIHdlcmUgZGVmZWF0ZWQgYXQgdGhlIEJhdHRsZSBvZiBUYWxpa290YSAgKDE1NjUpIGJ5IHRoZSBjb21iaW5lZCBhcm1pZXMgb2YgQmlqYXB1ciwgIEFobWFkbmFnYXIsIGFuZCBHb2xjb25kYS4gQmF0dGxlIG9mIFRhbGlrb3RhICgxNTY1KSBBZnRlciB0aGUgZGVhdGggb2YgS3Jpc2huYWRldmEgUmF5YSBpbiAxNTI5LCAgaGlzIHN1Y2Nlc3NvcnMgd2VyZSB0cm91YmxlZCBieSByZWJlbGxpb3VzICBuYXlha2FzIG9yIG1pbGl0YXJ5IGNoaWVmcy4gQnkgMTU0MiwgdGhlICBjb250cm9sIGF0IHRoZSBjZW50cmUgaGFkIHNoaWZ0ZWQgdG8gYW5vdGhlciAgcnVsaW5nIGxpbmVhZ2UsIHRoYXQgb2YgdGhlIEFyYXZpZHUgZHluYXN0eSAgb2YgVmlqYXlhbmFnYXIgRW1waXJlLCB3aGljaCByZW1haW5lZCAgaW4gcG93ZXIgdGlsbCB0aGUgZW5kIG9mIHRoZSBzZXZlbnRlZW50aCAgY2VudHVyeS4gRHVyaW5nIHRoaXMgcGVyaW9kLCB0aGUgbWlsaXRhcnkgYW1iaXRpb25zICBvZiB0aGUgcnVsZXJzIG9mIFZpamF5YW5hZ2FyYSBhcyB3ZWxsIGFzICB0aG9zZSBvZiB0aGUgRGVjY2FuIFN1bHRhbmF0ZXMgcmVzdWx0ZWQgaW4gIHNoaWZ0aW5nIGFsaWdubWVudHMuIEV2ZW50dWFsbHksIHRoaXMgbGVkICB0byBhbiBhbGxpYW5jZSBvZiB0aGUgU3VsdGFuYXRlcyBhZ2FpbnN0ICBWaWpheWFuYWdhcmEuIEluIDE1NjUsIFJhbWEgUmF5YSwgdGhlIGNoaWVmIG1pbmlzdGVyICBvZiBWaWpheWFuYWdhcmEsIGxlZCB0aGUgYXJteSBpbnRvIGJhdHRsZSAgYXQgUmFrc2hhc2ktVGFuZ2FkaSAoYWxzbyBrbm93biBhcyAgQmF0dGxlIG9mIFRhbGlrb3RhKSwgd2hlcmUgaGlzIGZvcmNlcyB3ZXJlICByb3V0ZWQgYnkgdGhlIGNvbWJpbmVkIGFybWllcyBvZiBCaWphcHVyLCAgQWhtYWRuYWdhciwgYW5kIEdvbGNvbmRhLiBUaGUgQmF0dGxlIG9mIFRhbGlrb3RhIChvciBUZWxsaWtvdGEpIChKYW51YXJ5ICAyNiwgMTU2NSkgY29uc3RpdHV0ZWQgYSB3YXRlcnNoZWQgYmF0dGxlICBmb3VnaHQgYmV0d2VlbiB0aGUgVmlqYXlhbmFnYXJhIEVtcGlyZSAgYW5kIHRoZSBEZWNjYW4gc3VsdGFuYXRlcywgcmVzdWx0aW5nIGluIGEgIHJvdXQgb2YgVmlqYXlhbmFnYXJhLCBlbmRpbmcgdGhlIGxhc3QgZ3JlYXQgIEhpbmR1IGtpbmdkb20gaW4gU291dGggSW5kaWEuIFRhbGlrb3RhIHNpdHVhdGVzIGluIG5vcnRoZXJuIEthcm5hdGFrYSwgIGFib3V0IDgwIGttIHRvIHRoZSBzb3V0aGVhc3Qgb2YgdGhlIGNpdHkgb2YgIEJpamFwdXIuIE9uIEphbnVhcnkgMjYsIDE1NjUsIHRoZSBEZWNjYW4gU3VsdGFuYXRlcyAgb2YgQWhtZWRuYWdhciwgQmVyYXIsIEJpZGFyLCBCaWphcHVyLCBhbmQgIEdvbGNvbmRhIGZvcm1lZCBhIGdyYW5kIGFsbGlhbmNlIHRvIG1ldCB0aGUgIFZpamF5YW5hZ2FyYSBhcm15LiBUaGV5IG1ldCBhdCBUYWxpa290YSBzaXR1YXRlZCBvbiB0aGUgYWxsdXZpYWwgIGJhbmtzIG9mIHRoZSBLcmlzaG5hIFJpdmVyLCBpbiBwcmVzZW50IGRheSAgS2FybmF0YWthIHN0YXRlLCBiZXR3ZWVuIHRoZSB0d28gdmlsbGFnZXMgIFJha2thc2EgYW5kIFRhbmdhZGkuIFRoZSBiYXR0bGUgcmVwcmVzZW50ZWQgb25lIG9mIHRoZSBmZXcgdGltZXMgIGluIG1lZGlldmFsIEluZGlhbiBoaXN0b3J5IHRoYXQgZmFjdGlvbnMgIGVtcGxveWVkIGEgam9pbnQgc3RyYXRlZ3kuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IFZpamF5YW5hZ2FyYSBFbXBpcmU=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Bijapur, Bahamani, and Golconda ",
        "option2" : " Bijapur, Bahamani, and Ahmadnagar ",
        "option3" : " Bahamani, Ahmadnagar, and Golconda ",
        "option4" : " Bijapur, Ahmadnagar, and Golconda "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following artists: 1. Mir Sayyid Ali 2. Abdus Samad 3. Kesu Das 4. Kesu Khurd Which of the artist(s) given above was/were present in the court of Humayun?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwz",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIEFydGlzdHMgaW4gSHVtYXl1bidzIENvdXJ0IE11Z2hhbCBlbXBlcm9ycyBpbnRyb2R1Y2VkIHRoZWlyIG93biAgc3R5bGUgb2YgcGFpbnRpbmcgd2l0aCBQZXJzaWFuIGluc3BpcmF0aW9ucyAgYW5kIGFkZGVkIG5ldyB0aGVtZXMsIGNvbG91cnMgYW5kIGZvcm1zLiBDb3VydCBzY2VuZXMgd2VyZSBkZXBpY3RlZCBpbiBncmFuZGV1ci4gVGhlICBiYWNrZ3JvdW5kIHdhcyB1c3VhbGx5IGhpbGx5IGxhbmRzY2FwZXMuICBGbG93ZXJzIGFuZCBhbmltYWxzIHdlcmUgYWxzbyB2YXN0bHkgIGRlcGljdGVkIGFuZCBpbiB0aGVzZSB0aGUgSW5kaWFuIGFydGlzdHMgIGFwcGxpZWQgdGhlaXIgb3duIHNraWxscyB0byBkZXZlbG9wIG9uIHRoZSAgUGVyc2lhbiBpZGVhcy4gVGhlIE11Z2hhbCBwYWludGluZ3MgYXJlIGNoYXJhY3Rlcml6ZWQgYnkgIHRoZWlyIHN1YnRsZW5lc3MgYW5kIG5hdHVyYWxpc20gYW5kIG9mdGVuICBkZXBpY3QgaGlzdG9yaWNhbCBldmVudHMgb3IgY291cnQgbGlmZS4gTWlyIFNheXlpZCBBbGkgYW5kIEFiZHVzIFNhbWFkIHdlcmUgdGhlICB0d28gZ3JlYXQgYXJ0aXN0cyBpbiB0aGUgY291cnQgb2YgSHVtYXl1biAgKDE1MzAtMTU1NiBBRCkuICAgMyAgVGhlc2UgdHdvIGFydGlzdHMgYWxzbyByZW1haW5lZCBhY3RpdmUgIGR1cmluZyBBa2JhcidzIHJlaWduIGFuZCBBYnVzIFNhbWFkICBlYXJuZWQgdGhlIG5pY2tuYW1lICdTaGlyaW5xYWxhbScuIEFydGlzdHMgaW4gQWtiYXIncyBDb3VydCBBa2JhciAoMTU1Ni0xNjA1IEFEKSBjYW4gYmUgY29uc2lkZXJlZCBhcyAgdGhlIHJlYWwgZm91bmRlciBvZiB0aGUgTXVnaGFsIHBhaW50aW5nLiBBa2JhciBoYWQgZW1wbG95ZWQgbW9yZSB0aGFuIGh1bmRyZWQgIHBhaW50ZXJzIGZyb20gZGlmZmVyZW50IHBhcnRzIG9mIHRoZSBjb3VudHJ5ICBhbmQgbGF2aXNobHkgY29uZmVycmVkIGhvbm91cnMgb24gd29ya3Mgb2YgIGdyZWF0IGV4Y2VsbGVuY2UuIEhlIGhhZCBzcGVjaWFsIGFkbWlyYXRpb24gIGZvciB0aGUgd29yayBvZiBIaW5kdSBhcnRpc3RzLCBub3RhYmx5ICBEYXN3YW50aCBhbmQgQmFzYXdhbi4gU2V2ZXJhbCBub3Rld29ydGh5IHdvcmtzIHdlcmUgY29tcGxldGVkICBkdXJpbmcgQWtiYXIncyBwZXJpb2QsIHdoaWNoIGluY2x1ZGUgIHRoZSBpbGx1c3RyYXRlZCBzdG9yaWVzIG9mIEhhbXphIG5hbWE7ICBpbGx1c3RyYXRlZCBNYWhhYmhhcmF0YSBjYWxsZWQgUmF6bS1OYW1hICBhbmQgdGhlIGlsbHVzdHJhdGVkIFJhbWF5YW5hIGFuZCBUaW11ciAgbmFtYSwgQmFidXIgbmFtYSBhbmQgQWtiYXItTmFtYS4gQnkgdGhlIGVhcmx5IDE3dGggY2VudHVyeSwgdGhlIE11Z2hhbCAgcGFpbnRpbmcgaGFkIGNvbWUgdW5kZXIgdGhlIHdlc3Rlcm4gIGluZmwgdWVuY2UgaW4gc3VjaCBkZXZpY2VzIGFzIHRoZSB1c2Ugb2YgbGlnaHQgIGFuZCBzaGFkZSB0byBjYXB0dXJlIHNwYWNlIGFuZCB2b2x1bWUsICBhZXJpYWwgcGVyc3BlY3RpdmUgYW5kIHRoZSB1c2Ugb2YgYXRtb3NwaGVyaWMgIGVmZmVjdHMgdG8gaW5kaWNhdGUgc3BhdGlhbCByZWNlc3Npb24uIFRoZSBmdXNpb24gcHJvZm91bmRseSBpbmZsIHVlbmNlZCB0aGUgIE11Z2hhbCBhcnQgYW5kIGNvbnN0aXR1dGVkIG9uZSBvZiB0aGUgbW9zdCAgZmwgb3VyaXNoaW5nIG9mIGFydGlzdGljIGV4Y2hhbmdlcy4gQWtiYXIncyAgbGVhZGluZyBjb3VydCBhcnRpc3RzIC0gS2VzdSBEYXMsIE1hbm9oYXIsICBCYXNhd2FuIGFuZCBLZXN1IEtodXJkLXdlcmUgZmFzY2luYXRlZCAgYnkgdGhlIENocmlzdGlhbiBwYWludGluZ3MgYW5kIGludGVncmF0ZWQgIHRoZXNlIHRoZW1lcyBpbiB0aGVpciBvd24gY29tcG9zaXRpb25zLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBEZWxoaSBTdWx0YW5hdGU=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 3 and 4 only "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following pairs:  Author/Artists - Mughal  Emperor1. Abul Fazl - Akbar2. Abdul Hamid Lahori - Humayun3. Abdus Samad - Shah JahanWhich of the above given pairs is/are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlycyAyIGFuZCAzIGFyZSBpbmNvcnJlY3RseSBtYXRjaGVkOiAgQWJkdWwgSGFtaWQgTGFob3JpLVNoYWhqYWhhbiBhbmQgQWJkdXMgIFNhbWFkLUh1bWF5dW4gQXV0aG9yL0FydGlzdHMgaW4gdGhlIE11Z2hhbCBDb3VydCBBYmR1bCBIYW1pZCBMYWhvcmksIEFidWwgRmF6bCBhbmQgIEFiZHVzIFNhbWFkIHdlcmUgcHJlc2VudCBpbiB0aGUgY291cnRzICBvZiBTaGFoamFoYW4sIEFrYmFyIGFuZCBIdW1heXVuICByZXNwZWN0aXZlbHkuIEFidWwgRmF6bCBBYnVsIEZhemwgaXMgYmVzdCBrbm93biB0b2RheSBmb3IgaGlzICBBa2Jhcm5hbWEsIGEgdGhyZWUtdm9sdW1lIGhpc3Rvcnkgb2YgdGhlICBsaWZlIGFuZCBlbXBpcmUgb2YgaXRzIGNvbW1pc3Npb25lciwgdGhlICBlbXBlcm9yIEFrYmFyLiBJdCB3YXMgY29tcG9zZWQgaW4gUGVyc2lhbiBiZXR3ZWVuIDE1OTAgIGFuZCAxNTk2IHdoaWxlIG1vcmUgdGhhbiA0OSBkaWZmZXJlbnQgIGFydGlzdHMgd29ya2VkIG9uIHRoZSBpbGx1c3RyYXRpb25zLiBUaGUgZmkgcnN0IHZvbHVtZSBkZXRhaWxzIHRoZSBoaXN0b3J5IG9mICBBa2JhcidzIGZhbWlseSBiYWNrIHRvIFRpbXVyLCBhbmQgdGhlICBzZWNvbmQgdm9sdW1lIGRlc2NyaWJlcyBBa2JhcidzIG93biByZWlnbiAgMTYwMi4gYXMgZmFyIGFzICBUaGUgdGhpcmQgdm9sdW1lIG9mIHRoZSBBa2Jhcm5hbWEsIHRoZSAgQWluLWktQWtiYXJpLCBvciB0aGUgJ0luc3RpdHV0ZXMgb2YgQWtiYXIsJyBpcyAgdGhlIG1vc3QgZmFtb3VzLiBBYmR1bCBIYW1pZCBMYWhvcmkgSGUgd2FzIGEgdHJhdmVsbGVyIGFuZCBoaXN0b3JpYW4gZHVyaW5nICB0aGUgcGVyaW9kIG9mIE11Z2hhbCBFbXBlcm9yIFNoYWggSmFoYW4gIHdobyBsYXRlciBiZWNhbWUgYSBjb3VydCBoaXN0b3JpYW4gb2YgU2hhaCAgSmFoYW4uIEhlIHdyb3RlIHRoZSBib29rIFBhZHNoYWhuYW1hLCAgYWJvdXQgdGhlIHJlaWduIG9mIFNoYWggSmFoYW4uIEhlIGhhcyAgZGVzY3JpYmVkIFNoYWggSmFoYW4ncyBsaWZlIGFuZCBhY3Rpdml0aWVzICBkdXJpbmcgdGhlIGZpIHJzdCB0d2VudHkgeWVhcnMgb2YgaGlzIHJlaWduIGluICB0aGlzIGJvb2sgaW4gZ3JlYXQgVG9waWM6IE1lZGlldmFsIEluZGlhICBTdWItdG9waWM6IE11Z2hhbCBFbXBpcmU=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements regarding the economy of the Vijayanagara Empire:1. Trade was contributing more to the revenue of the empire than agriculture.2. The society was highly egalitarian. 3. Only gold coins were in circulation in the economy.Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw1",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFncmljdWx0dXJlICB3YXMgY29udHJpYnV0aW5nIG1vcmUgdG8gdGhlIGVjb25vbXkgdGhhbiAgSW5kdXN0cmllcyBhbmQgdHJhZGUuIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHNvY2lldHkgd2FzICB1bmVxdWFsIGFuZCBub3QgZWdhbGl0YXJpYW4uIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogR29sZCwgY29wcGVyICBhbmQgc2lsdmVyIGNvaW5zIGFsbCB3ZXJlIGluIGNpcmN1bGF0aW9uLiBWaWpheWFuYWdhcmEgRW1waXJlIFRoZSBlY29ub215IG9mIHRoZSBWaWpheWFuYWdhcmEgRW1waXJlICB3YXMgaW4gdmVyeSBzb3VuZCBhbmQgaGVhbHRoeSBjb25kaXRpb24uICBUaGUgYWdyaWN1bHR1cmUgd2FzIGluIGZsIG91cmlzaGluZyBjb25kaXRpb24gIGluIFZpamF5YW5hZ2FyIEVtcGlyZS4gQWdyaWN1bHR1cmUgd2FzICBlc3NlbnRpYWxseSB0aGUgYmlnZ2VzdCBjb250cmlidXRvciB0byB0aGUgIGVjb25vbXkgaW4gYW5jaWVudCBhbmQgbWVkaWV2YWwgdGltZXMuICBUaGUgYWdyaWN1bHR1cmFsIHdlYWx0aCB3YXMgc3VwcGxlbWVudGVkICBieSBudW1lcm91cyBpbmR1c3RyaWVzLCB0aGUgbW9zdCBpbXBvcnRhbnQgIG9mIHdoaWNoIHdlcmUgdGV4dGlsZXMsIG1pbmluZyBhbmQgIG1ldGFsbHVyZ3kuIFRoZSBzb2NpYWwgY29uZGl0aW9uIG9mIHRoZSBlbXBpcmUgd2FzICBub3QgZWdhbGl0YXJpYW4gYXMgdGhlIGhvdXNlcyBvZiB0aGUgIG9yZGluYXJ5IHBlb3BsZSB3ZXJlIG1hZGUgb2YgdGhhdGNoZWQsICBidXQgbm9uZXRoZWxlc3Mgd2VsbC1idWlsdCBhbmQgYXJyYW5nZWQgIGFjY29yZGluZyB0byBvY2N1cGF0aW9ucywgaW4gbG9uZyBzdHJlZXRzICB3aXRoIG1hbnkgb3BlbiBwbGFjZXMuIFRoZSBDYXN0ZSBzeXN0ZW0gd2FzIHByZXZhbGVudCBpbiB0aGUgIGVtcGlyZS4gVGhlIFNhdGkgc3lzdGVtIHdhcyBmcmVlbHkgIHNhbmN0aW9uZWQgYnkgQnJhaG1hbmFzIGFuZCB3YXMgdmVyeSAgY29tbW9uIGluIHRoZSBWaWpheWFuYWdhciBFbXBpcmUuIEJlY2F1c2Ugb2YgaHVnZSB3ZWFsdGgsIFZpamF5YW5hZ2FyYSAgRW1waXJlIGlzc3VlZCBsYXJnZSBxdWFudGl0aWVzIG9mIGdvbGQgY29pbnM7ICBvdGhlciBtZXRhbHMgdXNlZCBpbiB0aGVpciBjb2luYWdlIGFyZSBwdXJlICBzaWx2ZXIgYW5kIGNvcHBlci4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogVmlqYXlhbmFnYXJhIEVtcGlyZSAgIDQg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements regarding Nastaliq:1. It is a calligraphic style with long horizontal strokes.2. It is characterized by a tendency to slope downward from right to left.3. It is used mainly for Persian poetical writings and in Urdu and Malay manuscript.Which of the statement(s) given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw2",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgTmFzdGFsaXEgSXQgaXMgYSBwcmVkb21pbmFudCBzdHlsZSBvZiBQZXJzaWFuICBjYWxsaWdyYXBoeSBkdXJpbmcgdGhlIDE1dGggYW5kIDE2dGggIGNlbnR1cmllcy4gVGhlIGludmVudG9yIHdhcyBNaXIgQWxpIG9mIFRhYnJpeiwgdGhlIG1vc3QgIGZhbW91cyBjYWxsaWdyYXBoZXIgb2YgdGhlIFRpbXVyaWQgcGVyaW9kICAoMTQwMi0xNTAyKS4gSXQgd2FzIGEgY29tYmluYXRpb24gb2YgdGhlIG5hc2toaSBhbmQgIHRhJ2xpcSBzdHlsZXMsIGZlYXR1cmluZyBlbG9uZ2F0ZWQgaG9yaXpvbnRhbCAgc3Ryb2tlcyBhbmQgZXhhZ2dlcmF0ZWQgcm91bmRlZCBmb3Jtcy4gSXQgaXMgYW4gQXJhYmljIHNjcmlwdCBkZXZlbG9wZWQgYWJvdXQgdGhlICAxNXRoIGNlbnR1cnksIGNoYXJhY3Rlcml6ZWQgYnkgYSB0ZW5kZW5jeSAgdG8gc2xvcGUgZG93bndhcmQgZnJvbSByaWdodCB0byBsZWZ0LiBJdCBpcyB1c2VkIG1haW5seSBmb3IgUGVyc2lhbiBwb2V0aWNhbCB3cml0aW5ncyAgYW5kIGluIFVyZHUgYW5kIE1hbGF5IG1hbnVzY3JpcHQuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IEVhcmx5IE11c2xpbXMgSW52YXNpb25z",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements regarding the Zamindars in the Mughal India:1. They had an exclusive representation from upper and intermediate castes.2. They often received the support of the peasantry in their struggle against the states during the agrarian uprisings.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw3",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IExvd2VyIGNhc3RlcyAgYW5kIGZvcmVzdCB0cmliYWxzIGFsc28gZW50ZXJlZCBpbnRvIHRoZSByYW5rICBvZiB6YW1pbmRhcnMuIFRoZSBaYW1pbmRhcnMgWmFtaW5kYXJzIHdlcmUgcGVvcGxlIGluIHRoZSBjb3VudHJ5c2lkZSAgdGhhdCBsaXZlZCBvZmYgYWdyaWN1bHR1cmUgYnV0IGRpZCBub3QgIHBhcnRpY2lwYXRlIGRpcmVjdGx5IGluIHRoZSBwcm9jZXNzZXMgb2YgIGFncmljdWx0dXJhbCBwcm9kdWN0aW9uLiBUaGV5IHdlcmUgbGFuZGVkIHByb3ByaWV0b3JzIHdobyBlbmpveWVkICBjZXJ0YWluIHNvY2lhbCBhbmQgZWNvbm9taWMgcHJpdmlsZWdlcyBieSAgdmlydHVlIG9mIHRoZWlyIHN1cGVyaW9yIHN0YXR1cyBpbiBydXJhbCAgc29jaWV0eS4gQ2FzdGUgd2FzIG9uZSBmYWN0b3IgdGhhdCBhY2NvdW50ZWQgIGZvciB0aGUgZWxldmF0ZWQgc3RhdHVzIG9mIHphbWluZGFycy4gVGhleSBhbHNvIGRlcml2ZWQgdGhlaXIgcG93ZXIgZnJvbSB0aGUgZmFjdCAgdGhhdCB0aGV5IGNvdWxkIG9mdGVuIGNvbGxlY3QgcmV2ZW51ZSBvbiAgYmVoYWxmIG9mIHRoZSBzdGF0ZSwgYSBzZXJ2aWNlIGZvciB3aGljaCB0aGV5ICB3ZXJlIGNvbXBlbnNhdGVkIGZpIG5hbmNpYWxseS4gVGhleSBoYWQgIGNvbnRyb2wgb3ZlciB0aGUgbWlsaXRhcnkgcmVzb3VyY2VzIHdoaWNoICBhZGRlZCB0byB0aGVpciBwb3dlci4gVGhlcmUgd2FzIGEgc2xvdyBwcm9jZXNzIG9mIFphbWluZGFyaSAgY29uc29saWRhdGlvbiB3aGljaCBpbnZvbHZlZCBjb2xvbmlzYXRpb24gb2YgIG5ldyBsYW5kcywgYnkgdHJhbnNmZXIgb2YgcmlnaHRzLCBieSBvcmRlciBvZiAgdGhlIHN0YXRlIGFuZCBieSBwdXJjaGFzZS4gVGhlc2Ugd2VyZSB0aGUgIHByb2Nlc3NlcyB3aGljaCBwZXJoYXBzIHBlcm1pdHRlZCBwZW9wbGUgIGJlbG9uZ2luZyB0byB0aGUgcmVsYXRpdmVseSAnbG93ZXInIGNhc3RlcyAgYW5kIGZvcmVzdCB0cmliYWwgY2hpZWZzIHRvIGVudGVyIGludG8gdGhlICByYW5rIG9mIHphbWluZGFycyBhcyB6YW1pbmRhcmlzLiBaYW1pbmRhcnMsIGFsdGhvdWdoLCB3ZXJlIGFuIGV4cGxvaXRhdGl2ZSAgY2xhc3MsIHRoZWlyIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBwZWFzYW50cnkgIGhhZCBhbiBlbGVtZW50IG9mIHJlY2lwcm9jaXR5LCBwYXRlcm5hbGlzbSAgYW5kIHBhdHJvbmFnZSBaYW1pbmRhcnMgb2Z0ZW4gcmVjZWl2ZWQgdGhlIHN1cHBvcnQgb2YgIHRoZSBwZWFzYW50cnkgaW4gdGhlaXIgc3RydWdnbGUgYWdhaW5zdCB0aGUgIHN0YXRlcyBkdXJpbmcgdGhlIGFncmFyaWFuIHVwcmlzaW5ncy4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogRWNvbm9taWMgbGlmZSBkdXJpbmcgTXVnaGFscw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2    3 "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements regarding the Mansabdari system:1. It was a bureaucratic-cum-military system.2. Mansabdars received their salaries as revenue assignments called jagirs.3. Mansabdars used to reside in their own Jagirs for its effective administration.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw4",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IE1hbnNhYmRhcnMgIGRpZCBub3QgcmVzaWRlIGluIG9yIGFkbWluaXN0ZXIgdGhlaXIgb3duICBqYWdpcnMuIE1hbnNhYmRhcmkgU3lzdGVtIE1hbnNhYmRhciByZWZlcnMgdG8gYW4gaW5kaXZpZHVhbCB3aG8gaG9sZHMgIGEgTWFuc2FiLCBtZWFuaW5nIGEgcG9zaXRpb24gb3IgcmFuay4gIEl0IHdhcyBhIGdyYWRpbmcgc3lzdGVtIHVzZWQgYnkgdGhlICBNdWdoYWxzIHRvIGZpIHg6IHJhbmssIHNhbGFyeSBhbmQgbWlsaXRhcnkgIHJlc3BvbnNpYmlsaXRpZXMuIFJhbmsgYW5kIHNhbGFyeSB3ZXJlIGRldGVybWluZWQgYnkgYSAgbnVtZXJpY2FsIHZhbHVlIGNhbGxlZCB6YXQuIFRoZSBoaWdoZXIgdGhlICB6YXQsIHRoZSBtb3JlIHByZXN0aWdpb3VzIHdhcyB0aGUgbm9ibGUgIHBvc2l0aW9uIGluIGNvdXJ0IGFuZCB0aGUgbGFyZ2VyIGhpcyBzYWxhcnkuIFRoZSBtYW5zYWJkYXIncyBtaWxpdGFyeSByZXNwb25zaWJpbGl0aWVzICByZXF1aXJlZCBoaW0gdG8gbWFpbnRhaW4gYSBzcGVjaWZpIGVkIG51bWJlciAgb2Ygc2F3YXIgb3IgY2F2YWxyeW1lbi4gTWFuc2FiZGFycyByZWNlaXZlZCAgdGhlaXIgc2FsYXJpZXMgYXMgcmV2ZW51ZSBhc3NpZ25tZW50cyBjYWxsZWQgIGphZ2lycy4gTWFuc2FiZGFycyBkaWQgbm90IGFjdHVhbGx5IHJlc2lkZSBpbiBvciAgYWRtaW5pc3RlciB0aGVpciBqYWdpcnMuIFRoZXkgb25seSBoYWQgcmlnaHRzICB0byB0aGUgcmV2ZW51ZSBvZiB0aGVpciBhc3NpZ25tZW50cyB3aGljaCAgd2FzIGNvbGxlY3RlZCBmb3IgdGhlbSBieSB0aGVpciBzZXJ2YW50cyAgd2hpbGUgdGhlIG1hbnNhYmRhcnMgdGhlbXNlbHZlcyBzZXJ2ZWQgaW4gIHNvbWUgb3RoZXIgcGFydCBvZiB0aGUgY291bnRyeS4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogRWNvbm9taWMgbGlmZSBkdXJpbmcgTXVnaGFscw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following pairs regarding foreign traveller and Mughal ruler of that period: Foreign Traveller - Mughal  ruler 1. Peter Mundy - Akbar2. Jean Baptiste - Jahangir  Tavernier3. Giovanni Careri - AurangzebWhich of the above given pairs is/are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw5",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlycyAxIGFuZCAyIGFyZSBtYXRjaGVkIGluY29ycmVjdGx5OiAgUGV0ZXIgTXVuZHkgYW5kIEplYW4gQmFwdGlzdGUgVGF2ZXJuaWVyICB2aXNpdGVkIGR1cmluZyB0aGUgcmVpZ24gb2YgU2hhaGphaGFuLiBGb3JlaWduIFRyYXZlbGxlcnMgZHVyaW5nIE11Z2hhbCBydWxlICBQZXRlciBNdW5keSAoMTYzMC0zNCBBRCk6IEhlIHdhcyBhbiAgSXRhbGlhbiB0cmF2ZWxsZXIgdG8gdGhlIE11Z2hhbCBFbXBpcmUgIGluIHRoZSByZWlnbiBvZiBTaGFoamFoYW4sIGdpdmVzIHZhbHVhYmxlICBpbmZvcm1hdGlvbiBhYm91dCB0aGUgbGl2aW5nIHN0YW5kYXJkIG9mIHRoZSAgY29tbW9uIHBlb3BsZSBpbiB0aGUgTXVnaGFsIEVtcGlyZS4gSmVhbiBCYXB0aXN0ZSBUYXZlcm5pZXIgKDE2MzgtMTY2MyAgQUQpOiBIZSB3YXMgYSBGcmVuY2ggdHJhdmVsbGVyLCBoaXMgIGFjY291bnQgY292ZXJzIHRoZSByZWlnbiBvZiBTaGFoamFoYW4gYW5kICBBdXJhbmd6ZWIuIEdpb3Zhbm5pIENhcmVyaTogSGUgcGFzc2VkIHRocm91Z2ggSW5kaWEgIGR1cmluZyB0aGUgcmVpZ24gb2YgQXVyYW5nemViLiBIZSBhbHNvICBwcm92aWRlcyBhIGdyYXBoaWMgYWNjb3VudCBvZiB0aGUgd2F5IHNpbHZlciAgdHJhdmVsbGVkIGFjcm9zcyB0aGUgZ2xvYmUgdG8gcmVhY2ggSW5kaWEuICAgNSAgVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogRGV2ZWxvcG1lbnRzIGR1cmluZyBNdWdoYWwgIEVtcGlyZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements regarding the Ain-i-Akbari of Abul Fazl:1. It deals with secular matters such as fi scal and revenue administration of the empire but remained silent on religious traditions of the people.2. It is an extraordinary document because it hardly shows any mathematical errors in revenue collections.Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBib29rIGFsc28gIGNvdmVycyB0aGUgY3VsdHVyYWwgYW5kIHJlbGlnaW91cyB0cmFkaXRpb25zICBvZiB0aGUgZW1waXJlLiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE51bWVyb3VzICBlcnJvcnMgaW4gdG90YWxsaW5nIG9mIGZpIHNjYWwgbnVtYmVycyBoYXZlICBiZWVuIGRldGVjdGVkLiBBaW4tSS1Ba2JhcmkgSXQgd2FzIHRoZSBjdWxtaW5hdGlvbiBvZiBhIGxhcmdlIGhpc3RvcmljYWwsICBhZG1pbmlzdHJhdGl2ZSBwcm9qZWN0IG9mIGNsYXNzaWZpIGNhdGlvbiAgdW5kZXJ0YWtlbiBieSBBYnUnbCBGYXpsIGF0IHRoZSBvcmRlciBvZiAgMTU5OC4gRW1wZXJvciBBa2Jhci4gSXQgd2FzIGNvbXBsZXRlZCBpbiAgVGhlIEFpbiBnaXZlcyBkZXRhaWxlZCBhY2NvdW50cyBvZiB0aGUgIG9yZ2FuaXphdGlvbiBvZiB0aGUgY291cnQsIGFkbWluaXN0cmF0aW9uICBhbmQgYXJteSwgdGhlIHNvdXJjZSBvZiByZXZlbnVlIGFuZCB0aGUgIHBoeXNpY2FsIGxheW91dCBvZiB0aGUgcHJvdmluY2Ugb2YgQWtiYXIncyAgZW1waXJlIGFuZCB0aGUgbGl0ZXJhcnksIGN1bHR1cmFsIGFuZCAgcmVsaWdpb3VzIHRyYWRpdGlvbnMgb2YgdGhlIHBlb3BsZSBJdCBpcyBtYWRlIHVwIG9mIGZpIHZlIGJvb2tzIChkYWZ0YXJzKSwgb2YgIHdoaWNoIHRoZSBmaSByc3QgdGhyZWUgYm9va3MgZGVzY3JpYmUgdGhlICBhZG1pbmlzdHJhdGlvbi4gVGhlIGZpIHJzdCBib29rLCBjYWxsZWQgbWFuemlsLSBhYmFkaSwgY29uY2VybnMgdGhlIGltcGVyaWFsIGhvdXNlaG9sZCBhbmQgIGl0cyBtYWludGVuYW5jZS4gIFRoZSBzZWNvbmQgYm9vaywgc2lwYWgtYWJhZGksIGNvdmVycyB0aGUgIG1pbGl0YXJ5IGFuZCBjaXZpbCBhZG1pbmlzdHJhdGlvbiBhbmQgIHRoZSBlc3RhYmxpc2htZW50IG9mIHNlcnZhbnRzLiBUaGlzIGJvb2sgIGluY2x1ZGVzIG5vdGljZXMgYW5kIHNob3J0IGJpb2dyYXBoaWNhbCAgc2tldGNoZXMgb2YgaW1wZXJpYWwgb2ZmaSBjaWFscyAobWFuc2FiZGFycyksICBsZWFybmVkIG1lbiwgcG9ldHMgYW5kIGFydGlzdHMuIFRoZSB0aGlyZCBib29rLCBtdWxrLWFiYWRpLCBpcyB0aGUgb25lICB3aGljaCBkZWFscyB3aXRoIHRoZSBmaSBzY2FsIHNpZGUgb2YgdGhlICBlbXBpcmUgYW5kIHByb3ZpZGVzIHJpY2ggcXVhbnRpdGF0aXZlICBpbmZvcm1hdGlvbiBvbiByZXZlbnVlIHJhdGVzLCBmb2xsb3dlZCBieSAgdGhlICdBY2NvdW50IG9mIHRoZSBUd2VsdmUgUHJvdmluY2VzJy4gVGhpcyAgc2VjdGlvbiBoYXMgZGV0YWlsZWQgc3RhdGlzdGljYWwgaW5mb3JtYXRpb24sICB3aGljaCBpbmNsdWRlcyB0aGUgZ2VvZ3JhcGhpYywgdG9wb2dyYXBoaWMgIGFuZCBlY29ub21pYyBwcm9maSBsZSBvZiBhbGwgc3ViYXMgYW5kIHRoZWlyICBhZG1pbmlzdHJhdGl2ZSBhbmQgZmkgc2NhbCBkaXZpc2lvbnMgKHNhcmthcnMsICBwYXJnYW5hcyBhbmQgbWFoYWxzKSwgdG90YWwgbWVhc3VyZWQgYXJlYSwgIGFuZCBhc3Nlc3NlZCByZXZlbnVlICggamFtYSkuIFRoZSBmb3VydGggYW5kIGZpIGZ0aCBib29rcyAoZGFmdGFycykgZGVhbCAgd2l0aCB0aGUgcmVsaWdpb3VzLCBsaXRlcmFyeSBhbmQgY3VsdHVyYWwgIHRyYWRpdGlvbnMgb2YgdGhlIHBlb3BsZSBvZiBJbmRpYSBhbmQgYWxzbyAgY29udGFpbiBhIGNvbGxlY3Rpb24gb2YgQWtiYXIncyAnYXVzcGljaW91cyAgc2F5aW5ncyBUaGUgYm9vayB3YXMgbXVjaCBtb3JlIHRoYW4gYSByZXByb2R1Y3Rpb24gIG9mIG9mZmkgY2lhbCBwYXBlcnMuIE9yYWwgdGVzdGltb25pZXMgd2VyZSBhbHNvIGluY29ycG9yYXRlZCAgaW4gdGhlIGJvb2sgYWZ0ZXIgYmVpbmcgY3Jvc3MtY2hlY2tlZCBhbmQgIHZlcmlmaSBlZC4gSGlzdG9yaWFucyB3aG8gaGF2ZSBjYXJlZnVsbHkgc3R1ZGllZCAgdGhlIEFpbiBwb2ludCBvdXQgdGhhdCBpdCBpcyBub3Qgd2l0aG91dCBpdHMgIHByb2JsZW1zLiBOdW1lcm91cyBlcnJvcnMgaW4gdG90YWxsaW5nICBoYXZlIGJlZW4gZGV0ZWN0ZWQuIFRoZXNlIGFyZSBhc2NyaWJlZCB0byAgc2ltcGxlIGFyaXRobWV0aWMgc2xpcHMuIEJ5IHByb3ZpZGluZyBmYXNjaW5hdGluZyBnbGltcHNlcyBpbnRvICB0aGUgc3RydWN0dXJlIGFuZCBvcmdhbml6YXRpb24gb2YgdGhlICBNdWdoYWwgRW1waXJlIGFuZCBieSBnaXZpbmcgcXVhbnRpdGF0aXZlICBpbmZvcm1hdGlvbiBhYm91dCBpdHMgcHJvZHVjdHMgYW5kIHBlb3BsZSwgIEFidSdsIEZhemwgYWNoaWV2ZWQgYSBtYWpvciBicmVha3Rocm91Z2ggIGluIHRoZSB0cmFkaXRpb24gb2YgbWVkaWV2YWwgY2hyb25pY2xlcnMgIHdobyB3cm90ZSBtb3N0bHkgYWJvdXQgcmVtYXJrYWJsZSAgcG9saXRpY2FsIGV2ZW50cyAtIHdhcnMsIGNvbnF1ZXN0cywgcG9saXRpY2FsICBtYWNoaW5hdGlvbnMsIGFuZCBkeW5hc3R5IHR1cm1vaWwuICBUaGUgQWluIGNvbXBsZXRlbHkgZGVwYXJ0ZWQgZnJvbSB0aGlzICB0cmFkaXRpb24gYXMgaXQgcmVjb3JkZWQgaW5mb3JtYXRpb24gYWJvdXQgIHRoZSBlbXBpcmUgYW5kIHRoZSBwZW9wbGUgb2YgSW5kaWEsIGFuZCB0aHVzICBjb25zdGl0dXRlcyBhIGJlbmNobWFyayBmb3Igc3R1ZHlpbmcgSW5kaWEgIGF0IHRoZSB0dXJuIG9mIHRoZSBzZXZlbnRlZW50aCBjZW50dXJ5LiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBNdWdoYWwgTGl0ZXJhdHVyZQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 11,
      "question" : "The term 'Karnataka Samrajyamu' is used to describe which kingdom of Medieval India?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QgIFZpamF5YW5hZ2FyYSBFbXBpcmUgSGFyaWhhcmEgYW5kIEJ1a2thIGZvdW5kZWQgdGhlICAxMzM2LiBWaWpheWFuYWdhcmEgRW1waXJlIGluICBUaGV5IG1hZGUgSGFtcGkgYXMgdGhlIGNhcGl0YWwgY2l0eS4gIEZvdXIgZHluYXN0aWVzIC0gU2FuZ2FtYSwgU2FsdXZhLCBUdWx1dmEgIGFuZCBBcmF2aWR1IC0gcnVsZWQgVmlqYXlhbmFnYXIgZnJvbSBBLkQuICAxNjcyLiAxMzM2IHRvICBWaWpheWFuYWdhcmEgRW1waXJlIGhhcyBiZWVuIGRlc2NyaWJlZCAgYXMgdGhlICdLYXJuYXRha2EgU2FtcmFqeWFtdScgYnkgdGhlICBjb250ZW1wb3Jhcmllcy4gVG9waWM6IE1lZGlldmFsIEluZGlhICBTdWItdG9waWM6IFNvdXRoIEluZGlhbiBraW5nZG9tcyBpbiAgbWVkaWV2YWwgdGltZXM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Hoysala ",
        "option2" : " Chalukya ",
        "option3" : " Yadava ",
        "option4" : " Vijayanagara "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements about the Persian invasion:1. Absence of any strong political power in the western border of India led to invasion of Persians in India.2. Sindh, north-western frontier and some part of Punjab constituted the 20th satrapy of Persian Empire.3. Indian subjects were also enrolled in the Persian Army.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgUGVyc2lhbiBpbnZhc2lvbiBUaGUgSW5kby1JcmFuaWFuIGNvbnRhY3QgbGFzdGVkIGZvciBhYm91dCAgMjAwIHllYXJzLiBJcmFuaWFuIGluZmwgdWVuY2UgbWF5IGFsc28gYmUgIHRyYWNlZCBpbiB0aGUgcHJlYW1ibGUgdG8gQXNob2thJ3MgZWRpY3RzICBhcyB3ZWxsIGFzIGluIGNlcnRhaW4gdGVybXMgdXNlZCBpbiB0aGVtLiAgRm9yIGluc3RhbmNlLCBmb3IgdGhlIElyYW5pYW4gdGVybSBkaXBpLCAgdGhlIEFzaG9rYW4gc2NyaWJlIHVzZWQgdGhlIHRlcm0gbGlwaS4gQWxzbyAgaXQgYXBwZWFycyB0aGF0IHRocm91Z2ggdGhlIElyYW5pYW5zLCB0aGUgIEdyZWVrcyBsZWFybnQgYWJvdXQgdGhlIGdyZWF0IHdlYWx0aCBvZiAgSW5kaWEsIHdoaWNoIHdoZXR0ZWQgdGhlaXIgZ3JlZWQgYW5kIGxlZCB0byAgQWxleGFuZGVyJ3MgaW52YXNpb24gb2YgSW5kaWEuICAgNiAgVGhlIHdlc3Rlcm4gYm9yZGVybGFuZCBvZiBJbmRpYSBjb21wcmlzaW5nICB0aGUgUHVuamFiLCBTaW5kaCBhbmQgQWZnaGFuaXN0YW4gZGlkIG5vdCAgaGF2ZSBhbnkgc3Ryb25nIHBvbGl0aWNhbCBwb3dlciBkdXJpbmcgdGhpcyAgcGVyaW9kLiBPZiB0aGUgc2l4dGVlbiBNYWhhamFuYXBhZGFzIG1lbnRpb25lZCAgaW4gdGhlIGxpdGVyYXR1cmUsIG9ubHkgdHdvLCBLYW1ib2phIGFuZCAgR2FuZGhhcmEsIG1heSBiZSBwbGFjZWQgaW4gdGhpcyBvdXRseWluZyAgcmVnaW9uLiBJdCBhcHBlYXJzIHRvIGhhdmUgYmVlbiBkaXZpZGVkIGludG8gIGEgbGFyZ2UgbnVtYmVyIG9mIGluZGVwZW5kZW50IHByaW5jaXBhbGl0aWVzICB3aGljaCB3ZXJlIGZyZXF1ZW50bHkgYXQgd2FyIHdpdGggb25lICBhbm90aGVyLCBhbmQgdGh1cyBhbiBlYXN5IHByZXkgdG8gZm9yZWlnbiAgaW52YWRlcnMuICBUaGUgcG93ZXJmdWwgQWNoYWVtZW5pYW4ga2luZ3Mgb2YgUGVyc2lhICBuYXR1cmFsbHkgY2FzdCB0aGVpciBleWVzIHRvd2FyZHMgdGhpcyAgcmVnaW9uLCBhbmQgcGVyaGFwcyBDeXJ1cyAoNTU4LTUzMCBCLkMuKSAgc3VianVnYXRlZCBhIG51bWJlciBvZiBwcmluY2lwYWxpdGllcyBsaXZpbmcgIHRvIHRoZSBzb3V0aCBvZiB0aGUgSGluZHVrdXNoIG1vdW50YWlucyAgKHBhcnRzIG9mIEluZGlhKS4gSXQgd2FzIGluIHRoZSByZWlnbiBvZiAgRGFyaXVzICg1MjItNDg2IEIuQy4pIHRoYXQgd2UgaGF2ZSBwb3NpdGl2ZSAgZXZpZGVuY2Ugb2YgdGhlIGV4dGVuc2lvbiBvZiBBY2hhZW1lbmlhbiAgcnVsZSBpbiB0aGUgbm9ydGh3ZXN0ZXJuIHBhcnQgb2YgSW5kaWEuIFR3byAgaW5zY3JpcHRpb25zIG9mIHRoaXMgbW9uYXJjaCBtZW50aW9uICdIaShuKSBkdScgYXMgYSBwYXJ0IG9mIGhpcyBkb21pbmlvbi4gVGhlIGV4YWN0IGNvbm5vdGF0aW9uIG9mIHRoaXMgdGVybSBpcyBub3QgIGtub3duLCBidXQgaXQgY2VydGFpbmx5IGNvbXByaXNlZCBzb21lICB0ZXJyaXRvcnkgdG8gdGhlIGVhc3Qgb2YgdGhlIFNpbmRodSwgd2hpY2ggIERhcml1cyBtdXN0IGhhdmUgY29ucXVlcmVkIGFib3V0IDUxOCAgQi5DLiBIZXJvZG90dXMsIHRoZSBHcmVlayBoaXN0b3JpYW4sIHRlbGxzICB1cyB0aGF0IGluIDUxNyBCLkMuIERhcml1cyBzZW50IGEgbmF2YWwgIGV4cGVkaXRpb24gdG8gZXhwbG9yZSB0aGUgdmFsbGV5IG9mIHRoZSAgU2luZGh1IHJpdmVyICBUaGUgSXJhbmlhbiBydWxlciBEYXJpdXMgcGVuZXRyYXRlZCBub3J0aC0gIHdlc3QgSW5kaWEgaW4gNTE2IEJDIGFuZCBhbm5leGVkIHRoZSAgUHVuamFiIChlYXJsaWVyIEdhbmRoYXJhKSwgd2VzdCBvZiB0aGUgIEluZHVzLCBhbmQgU2luZGguIFRoaXMgYXJlYSB3YXMgY29udmVydGVkICBpbnRvIHRoZSB0d2VudGlldGggcHJvdmluY2Ugb3Igc2F0cmFweSAgb2YgSXJhbiwgd2hpY2ggaGFkIGEgdG90YWwgbnVtYmVyIG9mICB0d2VudHllaWdodCBzYXRyYXBpZXMuICBUaGUgSW5kaWFuIHNhdHJhcHkgaW5jbHVkZWQgU2luZGgsIHRoZSAgbm9ydGgtd2VzdCBmcm9udGllciwgYW5kIHRoZSBwYXJ0IG9mIFB1bmphYiAgdGhhdCBsYXkgdG8gdGhlIHdlc3Qgb2YgdGhlIEluZHVzLiBJdCB3YXMgIHRoZSBtb3N0IGZlcnRpbGUgYW5kIHBvcHVsb3VzIHBhcnQgb2YgdGhlICBlbXBpcmUuIEl0IHBhaWQgYSB0cmlidXRlIG9mIDM2MCB0YWxlbnRzIG9mICBnb2xkLCB3aGljaCBhY2NvdW50ZWQgZm9yIG9uZXRoaXJkIG9mIHRoZSAgdG90YWwgcmV2ZW51ZSBJcmFuIHJlY2VpdmVkIGZyb20gaXRzIEFzaWFuICBwcm92aW5jZXMuIFRoZSBJbmRpYW4gc3ViamVjdHMgd2VyZSBhbHNvICBlbnJvbGxlZCBpbiB0aGUgSXJhbmlhbiBhcm15LiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBFYXJseSBNdXNsaW0gaW52YXNpb25z",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following pairs: 1. Muzarian - They were residential peasants living in their own village, owning their own land and implements.2. Pahi-kasht - These peasants were outsiders but cultivated the rented land in a village either by staying in the same village or by staying in the neighbouring villages.3. Khud-kasht - They did not have land of their own for cultivation.Which of the pair(s) given above is/are matched incorrectly?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlyIDEgaXMgbWF0Y2hlZCBpbmNvcnJlY3RseTogTXV6YXJpYW4gIC0gVGhleSBkaWQgbm90IGhhdmUgbGFuZCBvZiB0aGVpciBvd24gZm9yICBjdWx0aXZhdGlvbi4gUGFpciAzIGlzIG1hdGNoZWQgaW5jb3JyZWN0bHk6IEtodWQtIGthc2h0IC0gVGhleSB3ZXJlIHJlc2lkZW50aWFsIHBlYXNhbnRzICBsaXZpbmcgaW4gdGhlaXIgb3duIHZpbGxhZ2UsIG93bmluZyB0aGVpciBvd24gIGxhbmQgYW5kIGltcGxlbWVudHMuIEN1bHRpdmF0b3JzIGFuZCBOb24tY3VsdGl2YXRpbmcgQ2xhc3NlcyBLaHVkLWthc2h0IChyaXlheWF0aSkgIFRob3NlIHJlc2lkZW50aWFsIHBlYXNhbnRzIGxpdmluZyBpbiB0aGVpciAgb3duIHZpbGxhZ2UsIG93bmluZyB0aGVpciBvd24gbGFuZCBhbmQgIGltcGxlbWVudHMsIHBheWluZyB0aGUgbGFuZC1yZXZlbnVlIGF0ICBhIGNvbmNlc3Npb25hbCByYXRlLCBmb3JtZWQgdGhlIGdvdmVybmluZyAgYm9keSBvZiB0aGUgdmlsbGFnZSBjb21tdW5pdHkuIEFsc28gY2FsbGVkIG1pcmFzZGFycyBpbiBNYWhhcmFzaHRyYSAgYW5kIGdoYXJ1LWhhbGEgaW4gUmFqYXN0aGFuLiBQYWhpLWthc2h0ICBUaGVzZSBwZWFzYW50cyB3ZXJlIGJhc2ljYWxseSBvdXRzaWRlcnMgIGJ1dCBjdWx0aXZhdGVkIHRoZSByZW50ZWQgbGFuZCBpbiBhIHZpbC0gbGFnZSBlaXRoZXIgYnkgc3RheWluZyBpbiB0aGUgc2FtZSB2aWxsYWdlICAocmVzaWRlbnRpYWwgcGFoaS1rYXNodCkgb3IgYnkgc3RheWluZyAgaW4gdGhlIG5laWdoYm91cmluZyB2aWxsYWdlcyAobm9uLSByZXNpZGVudGlhbCBwYWhpLWthc2h0KS4gTXV6YXJpYW4gKHJhaXlhdGlzKSAgVGhvc2Ugd2hvIGJlbG9uZ2VkIHRvIHRoZSBzYW1lIHZpbGxhZ2UgIGJ1dCB3aG8gZGlkIG5vdCBoYXZlIGVpdGhlciBsYW5kIG9yICBpbXBsZW1lbnRzIGFuZCBoZW5jZSB3ZXJlIGRlcGVuZGVudCAgb24gdGhlIEtodWQta2FzaHQgZm9yIHRoZWlyIHN1cHBseS4gVGhleSB3ZXJlIGRpdmlkZWQgaW50byB0d28gZ3JvdXBzOyAgdGVuYW50cy1hdC13aWxsIGFuZCB0aG9zZSB3aG8gaGFkICBoZXJlZGl0YXJ5IHRlbmFudCByaWdodHMsIGNhbGxlZCBhcyBwYWx0aXMgIGluIFJhamFzdGFuLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBEZXZlbG9wbWVudHMgYW5kIGVjb25vbWljIGxpZmU=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 1 only ",
        "option4" : " None "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to Alamgir Nama, consider the following statements:1. It gives the account of Auragzeb's reign. 2. It was compiled by Muhammad Kazim. 4 Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNA==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIEFsYW1naXIgTmFtYSBBbGFtZ2lyIE5hbWEgaXMgdGhlIHN0b3J5IG9mIEFsYW1naXIgKGEgIHRpdGxlIG9mIHRoZSBNdWdoYWwgcnVsZXIgQXVyYW5nemViKS4gSXQgaXMgYSBoaXN0b3J5IG9mIHRoZSBmaSByc3QgdGVuIHllYXJzIG9mICBBdXJhbmd6ZWIncyByZWlnbiBjb21waWxlZCBieSBNdWhhbW1tYWQgIEthemltLiBGb2xsb3dpbmcgdGhlIHRyYWRpdGlvbiBvZiB0aGUgTXVnaGFsICBlbXBlcm9ycyBmcm9tIHRoZSB0aW1lIG9mIGFrYmFyLCBBdXJhbmd6ZWIgIG9yZGVyZWQgaGlzIGNvdXJ0IGhpc3RvcmlhbiBNaXJ6YSAgTXVoYW1tYWQgS2F6aW0gdG8gcmVjb3JkIGFuZCBjb21waWxlICB0aGUgaGlzdG9yeSBvZiBoaXMgcmVpZ24uIE1pcnphIEthemltIHdyb3RlIHRoZSBoaXN0b3J5IHVwIHRvIHRoZSAgdGVudGggeWVhciBvZiB0aGUgcmVpZ24gb2YgQXVyYW5nemViICgxNjY4KSwgIGJ1dCB0aGUgZW1wZXJvciBmb3JiYWRlIGhpbSB0byBjb250aW51ZSB0aGUgIHdvcmsgYWZ0ZXIgdGhpcyBwZXJpb2QuIFRoZSBoaXN0b3J5IHdhcyBhIHZvbHVtaW5vdXMgd29yayAgY29uc2lzdGluZyBvZiAxMTA3IHByaW50ZWQgcGFnZXMgKHB1Ymxpc2hlZCAgYnkgdGhlIENhbGN1dHRhIGFzaWF0aWMgc29jaWV0eSBvZiBCZW5nYWwgaW4gIDE4NjgpLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgIFN1Yi10b3BpYzogTXVnaGFsIExpdGVyYXR1cmUgICA3IA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following statements with respect to the Chisti Order:1. It was the most infl uential of the groups of Sufi s who migrated to India.2. Both Amir Khusrau and Ziyauddin Barani were associated with Chisti order.3. Sama or performance of mystical music was integral to the Chishtis.4. Alauddin Khalji was the fi rst sultan to visit the dargah of Khwaja Muinuddin. Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IE11aGFtbWFkICBiaW4gVHVnaGxhcSAocnVsZWQsIDEzMjQtNTEpIHdhcyB0aGUgIGZpIHJzdCBTdWx0YW4gdG8gdmlzaXQgdGhlIGRhcmdhaCBvZiBLaHdhamEgIE11aW51ZGRpbi4gQ2hpc3RpIE9yZGVyIGluIHRoZSBTdWJjb250aW5lbnQgQW1vbmcgdGhlIG1hbnkgZ3JvdXBzIG9mIFN1ZmkgcyB3aG8gIG1pZ3JhdGVkIHRvIEluZGlhIGluIHRoZSBsYXRlIHR3ZWxmdGggY2VudHVyeSwgIHRoZSBDaGlzaHRpcyB3ZXJlIHRoZSBtb3N0IGluZmwgdWVudGlhbC4gVGhpcyAgd2FzIGJlY2F1c2UgdGhleSBhZGFwdGVkIHN1Y2Nlc3NmdWxseSB0byAgdGhlIGxvY2FsIGVudmlyb25tZW50IGFuZCBhZG9wdGVkIHNldmVyYWwgIGZlYXR1cmVzIG9mIEluZGlhbiBkZXZvdGlvbmFsIHRyYWRpdGlvbnMuIE1ham9yIHRlYWNoZXJzIG9mIENoaXN0aSBTaWxzaWxhIHdlcmU6ICBTdWZpIFRlYWNoZXJzIFllYXIgb2YgIERlYXRoIExvY2F0aW9uICBvZiBEYXJnYWggU2hhaWtoIE11aW51ZGRpbiBTaWp6aSAxMjM1IEFqbWVyIEtod2FqYSBRdXR1YnVkZGluICBCYWtodGl5YXIgS2FraSAxMjM1IERlbGhpIFNoYWlraCBGYXJpZHVkZGluIEdhbmotIGktU2hha2FyIDEyNjUgQWpvZGhhbiAgKFJhamFzdGhhbikgU2hhaWtoIE5pemFtdWRkaW4gIEF1bGl5YSAxMzI1IERlbGhpIFNoYWlraCBOYXNpcnVkZGluICBDaGlyYWdoLWktRGVsaGkgMTM1NiBEZWxoaSBGcm9tIG1vcm5pbmcgdGlsbCBsYXRlIG5pZ2h0IHBlb3BsZSBmcm9tICBhbGwgd2Fsa3Mgb2YgbGlmZSAtIHNvbGRpZXJzLCBzbGF2ZXMsIHNpbmdlcnMsICBtZXJjaGFudHMsIHBvZXRzLCB0cmF2ZWxlcnMsIHJpY2ggYW5kIHBvb3IsICBIaW5kdSBqb2dpcyAoeW9naSkgYW5kIHFhbGFuZGFycyAtIGNhbWUgIHNlZWtpbmcgZGlzY2lwbGVzaGlwLCBhbXVsZXRzIGZvciBoZWFsaW5nLCAgYW5kIHRoZSBpbnRlcmNlc3Npb24gb2YgdGhlIFNoYWlraCBpbiB2YXJpb3VzICBtYXR0ZXJzLiAgT3RoZXIgdmlzaXRvcnMgaW5jbHVkZWQgcG9ldHMgc3VjaCBhcyBBbWlyICBIYXNhbiBTaWp6aSBhbmQgQW1pciBLaHVzcmF1IGFuZCB0aGUgIGNvdXJ0IGhpc3RvcmlhbiBaaXlhdWRkaW4gQmFyYW5pLCBhbGwgb2YgIHdob20gd3JvdGUgYWJvdXQgdGhlIFNoYWlraC4gUGlsZ3JpbWFnZSwgY2FsbGVkIHppeWFyYXQsIHRvIHRvbWJzIG9mIFN1ZmkgIHNhaW50cyBpcyBwcmV2YWxlbnQgYWxsIG92ZXIgdGhlIE11c2xpbSB3b3JsZC4gIFRoaXMgcHJhY3RpY2UgaXMgYW4gb2NjYXNpb24gZm9yIHNlZWtpbmcgdGhlICBTdWZpICdzIHNwaXJpdHVhbCBncmFjZSAoYmFyYWthdCkuICBUaGUgbW9zdCByZXZlcmVkIHNocmluZSBpcyB0aGF0IG9mIEtod2FqYSAgTXVpbnVkZGluLCBwb3B1bGFybHkga25vd24gYXMgJ0doYXJpYiAgTmF3YXonIChjb21mb3J0ZXIgb2YgdGhlIHBvb3IpLiBJdCB3YXMgIGV2aWRlbnRseSBwb3B1bGFyIGJlY2F1c2Ugb2YgdGhlIGF1c3Rlcml0eSAgYW5kIHBpZXR5IG9mIGl0cyBTaGFpa2gsIHRoZSBncmVhdG5lc3Mgb2YgIGhpcyBzcGlyaXR1YWwgc3VjY2Vzc29ycywgYW5kIHRoZSBwYXRyb25hZ2UgIG9mIHJveWFsIHZpc2l0b3JzLiBNdWhhbW1hZCBiaW4gVHVnaGxhcSAgKHJ1bGVkLCAxMzI0LTUxKSB3YXMgdGhlIGZpIHJzdCBTdWx0YW4gdG8gdmlzaXQgIHRoZSBzaHJpbmUuIEFsc28gcGFydCBvZiB6aXlhcmF0IGlzIHRoZSB1c2Ugb2YgbXVzaWMgYW5kICBkYW5jZSBpbmNsdWRpbmcgbXlzdGljYWwgY2hhbnRzIHBlcmZvcm1lZCAgYnkgc3BlY2lhbGx5IHRyYWluZWQgbXVzaWNpYW5zIG9yIHFhd3dhbHMgIHRvIGV2b2tlIGRpdmluZSBlY3N0YXN5LiBUaGUgU3VmaSBzIHJlbWVtYmVyICBHb2QgZWl0aGVyIGJ5IHJlY2l0aW5nIHRoZSB6aWtyICh0aGUgRGl2aW5lICBOYW1lcykgb3IgZXZva2luZyBIaXMgUHJlc2VuY2UgdGhyb3VnaCAgU2FtYSAobGl0ZXJhbGx5LCAnYXVkaXRpb24nKSBvciBwZXJmb3JtYW5jZSAgb2YgbXlzdGljYWwgbXVzaWMuICBTYW1hIHdhcyBpbnRlZ3JhbCB0byB0aGUgQ2hpc2h0aXMsIGFuZCAgZXhlbXBsaWZpIGVkIGludGVyYWN0aW9uIHdpdGggaW5kaWdlbm91cyAgZGV2b3Rpb25hbCB0cmFkaXRpb25zLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgIFN1Yi10b3BpYzogQmhha3RpIGFuZCBPdGhlciBDdWx0dXJhbCAmICBSZWxpZ2lvdXMgTW92ZW1lbnRz",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1, 2 and 3 only ",
        "option4" : " 2, 3 and 4 only "
      }
    },
    {
      "index" : 16,
      "question" : "The earliest Bhakti movements were led by Alvars and Nayanars. In this context, consider the following statements: 1. Alvars were the devotees of Shiva while Nayanars were the devotees of Vishnu.2. Both Alvars and Nayanars initiated a movement of protest against the caste system.3. Women devotees were present among Alvars while they were absent in Nayanars.4. Opposition to Buddhism and Jainism is particularly marked in the compositions of Nayanars.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFsdmFycyB3ZXJlICBkZXZvdGVlcyBvZiBWaXNobnUgd2hpbGUgTmF5YW5hcnMgd2VyZSAgZGV2b3RlZXMgb2YgU2hpdmEuIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogV29tZW4gIGRldm90ZWVzIHdlcmUgcHJlc2VudCBhbW9uZyBib3RoIEFsdmFycyAgYW5kIE5heWFuYXJzLiBBbHZhcnMgYW5kIE5heWFuYXJzIFNvbWUgb2YgdGhlIGVhcmxpZXN0IGJoYWt0aSBtb3ZlbWVudHMgIChjLiBzaXh0aCBjZW50dXJ5KSB3ZXJlIGxlZCBieSB0aGUgQWx2YXJzICAobGl0ZXJhbGx5LCB0aG9zZSB3aG8gYXJlICdpbW1lcnNlZCcgaW4gIGRldm90aW9uIHRvIFZpc2hudSkgYW5kIE5heWFuYXJzIChsaXRlcmFsbHksICBsZWFkZXJzIHdobyB3ZXJlIGRldm90ZWVzIG9mIFNoaXZhKS4gIFRoZXkgdHJhdmVsbGVkIGZyb20gcGxhY2UgdG8gcGxhY2Ugc2luZ2luZyAgaHltbnMgaW4gVGFtaWwgaW4gcHJhaXNlIG9mIHRoZWlyIGdvZHMuIER1cmluZyB0aGVpciB0cmF2ZWxzIHRoZSBBbHZhcnMgYW5kICBOYXlhbmFycyBpZGVudGlmaSBlZCBjZXJ0YWluIHNocmluZXMgYXMgIGFib2RlcyBvZiB0aGVpciBjaG9zZW4gZGVpdGllcy4gVmVyeSBvZnRlbiAgbGFyZ2UgdGVtcGxlcyB3ZXJlIGxhdGVyIGJ1aWx0IGF0IHRoZXNlICBzYWNyZWQgcGxhY2VzLiBUaGVzZSBkZXZlbG9wZWQgYXMgY2VudHJlcyAgb2YgcGlsZ3JpbWFnZS4gU2luZ2luZyBjb21wb3NpdGlvbnMgb2YgdGhlc2UgIHBvZXQtc2FpbnRzIGJlY2FtZSBwYXJ0IG9mIHRlbXBsZSByaXR1YWxzIGluICB0aGVzZSBzaHJpbmVzLCBhcyBkaWQgd29yc2hpcCBvZiB0aGUgc2FpbnRzJyAgaW1hZ2VzLiBBbHZhcnMgYW5kIE5heWFuYXJzIGluaXRpYXRlZCBhIG1vdmVtZW50ICBvZiBwcm90ZXN0IGFnYWluc3QgdGhlIGNhc3RlIHN5c3RlbSBhbmQgIHRoZSBkb21pbmFuY2Ugb2YgQnJhaG1hbmFzIG9yIGF0IGxlYXN0ICBhdHRlbXB0ZWQgdG8gcmVmb3JtIHRoZSBzeXN0ZW0uIFRoaXMgaXMgIGNvcnJvYm9yYXRlZCBieSB0aGUgZmFjdCB0aGF0IGJoYWt0YXMgIGhhaWxlZCBmcm9tIGRpdmVyc2Ugc29jaWFsIGJhY2tncm91bmRzICByYW5naW5nIGZyb20gQnJhaG1hbmFzIHRvIGFydGlzYW5zIGFuZCAgY3VsdGl2YXRvcnMgYW5kIGV2ZW4gZnJvbSBjYXN0ZXMgY29uc2lkZXJlZCAgJ3VudG91Y2hhYmxlJy4gQWx2YXJzIGFuZCBOYXlhbmFycyBjbGFpbWVkIHRoYXQgdGhlaXIgIGNvbXBvc2l0aW9ucyB3ZXJlIGFzIGltcG9ydGFudCBhcyB0aGUgIFZlZGFzLiBGb3IgaW5zdGFuY2UsIG9uZSBvZiB0aGUgbWFqb3IgIGFudGhvbG9naWVzIG9mIGNvbXBvc2l0aW9ucyBieSB0aGUgQWx2YXJzLCAgdGhlIE5hbGF5aXJhIERpdnlhcHJhYmFuZGhhbSwgd2FzICBmcmVxdWVudGx5IGRlc2NyaWJlZCBhcyB0aGUgVGFtaWwgVmVkYS4gTW9zdCBzdHJpa2luZyBmZWF0dXJlIG9mIHRoZSBBbHZhciBhbmQgIE5heWFuYXIgdHJhZGl0aW9ucyB3YXMgdGhlIHByZXNlbmNlIG9mICB3b21lbi4gRm9yIGluc3RhbmNlLCB0aGUgY29tcG9zaXRpb25zIG9mICBBbmRhbCwgYSB3b21hbiBBbHZhciwgd2VyZSB3aWRlbHkgc3VuZyBhbmQgIEthcmFpa2thbCBBbW1haXlhciwgYSB3b21hbiBOYXlhbmFyLCAgYWRvcHRlZCB0aGUgcGF0aCBvZiBleHRyZW1lIGFzY2V0aWNpc20gaW4gIG9yZGVyIHRvIGF0dGFpbiBoZXIgZ29hbC4gICA4ICBPbmUgb2YgdGhlIG1ham9yIHRoZW1lcyBpbiBUYW1pbCBiaGFrdGkgIGh5bW5zIGlzIHRoZSBwb2V0cycgb3Bwb3NpdGlvbiB0byBCdWRkaGlzbSAgYW5kIEphaW5pc20uIFRoaXMgaXMgcGFydGljdWxhcmx5IG1hcmtlZCAgaW4gdGhlIGNvbXBvc2l0aW9ucyBvZiB0aGUgTmF5YW5hcnMuICBIaXN0b3JpYW5zIGV4cGxhaW4gdGhpcyBob3N0aWxpdHkgYXMgYSByZXN1bHQgIG9mIGNvbXBldGl0aW9uIGJldHdlZW4gbWVtYmVycyBvZiBvdGhlciAgcmVsaWdpb3VzIHRyYWRpdGlvbnMgZm9yIHJveWFsIHBhdHJvbmFnZS4gVG9waWM6IE1lZGlldmFsIEluZGlhICBTdWItdG9waWM6IEJoYWt0aSBhbmQgT3RoZXIgQ3VsdHVyYWwgJiAgUmVsaWdpb3VzIE1vdmVtZW50cw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 3 and 4 only "
      }
    },
    {
      "index" : 17,
      "question" : "Regarding medieval history of India, Komatis and Kling were__",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNw==",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0ICBNZXJjYW50aWxlIENsYXNzIEthcndhbmlzIG9yIE5heWFrYXMgd2VyZSBtZXJjaGFudHMsIHdobyAgc3BlY2lhbGlzZWQgaW4gY2FycnlpbmcgZ3JhaW5zIGZyb20gdGhlIHJ1cmFsICBhcmVhcy4gIEJhbmphcmFzIGhhdmUgaW5udW1lcmFibGUgcmVmZXJlbmNlcyBpbiAgdGhlIGNvbnRlbXBvcmFyeSBsaXRlcmF0dXJlIGFzIGEgdHJhZGluZyAgZ3JvdXAgd2hvIGNhcnJpZWQgb24gdHJhZGUgYmV0d2VlbiB2aWxsYWdlcyAgYW5kIGJldHdlZW4gdmlsbGFnZSBhbmQgdG93bnMuICBUaGUgTXVsdGFuaSBtZXJjaGFudHMgY29udGludWVkIHRvIHRocml2ZSAgZHVyaW5nIHRoaXMgcGVyaW9kIGFzIHdlbGwgaW4gcGxhY2VzIHN1Y2ggYXMgIERlbGhpLCBwYXJ0cyBvZiBQdW5qYWIgYW5kIFNpbmQuICBCYW5peWEgd2FzIGFub3RoZXIgaW1wb3J0YW50IG1lcmNhbnRpbGUgIGNvbW11bml0eSBpbiBub3J0aCBJbmRpYSBhbmQgRGVjY2FuLiAgVGhlaXIgY291bnRlcnBhcnRzIHdlcmUgS2hhdHJpcyBpbiBQdW5qYWIgIGFuZCBLb21hdGlzIGluIEdvbGNvbmRhLiAgVGhlIEJvaHJhcyB3ZXJlIGFub3RoZXIgcHJvbWluZW50ICBtZXJjYW50aWxlIGNvbW11bml0eSBkdXJpbmcgdGhlIE11Z2hhbCAgcGVyaW9kLiBJdCBoYWQgYSB2ZXJ5IHN0cm9uZyBwcmVzZW5jZSBpbiAgR3VqYXJhdCwgVWpqYWluIGFuZCBCdXJoYW5wdXIuICBTb21lIG9mIHRoZSBvdGhlciBwcm9taW5lbnQgbWVyY2FudGlsZSAgZ3JvdXBzIHdlcmUgQ2hldHRpcyAoU291dGggSW5kaWEpLCBLbGluZyAgKGFsb25nIENvcm9tYW5kZWwgY29hc3QgdXB0byBPcmlzc2EpLCAgS29tYXRpcyAoVGVsZWd1IHNwZWFraW5nIG1lcmNoYW50IGdyb3VwKSAgZXRjLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgIFN1Yi10b3BpYzogQ29pbnMgYW5kIEN1cnJlbmN5",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Types of currencies ",
        "option2" : " Types of nobility ",
        "option3" : " Mercantile community ",
        "option4" : " Zamindar class "
      }
    },
    {
      "index" : 18,
      "question" : "Which of the following statements is/are correct?1. Firoz Shah Tughlaq laid the largest network of canals during sultanate period.2. The Nahr Faiz was built during his reign carrying water from Yamuna to irrigate over a large area.Select the correct answer from the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxOA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IDogVGhlIE5haHIgRmFpeiAgd2FzIGJ1aWx0IGR1cmluZyBTaGFoamFoYW4ncyByZWlnbi4gSXJyaWdhdGlvbiBpbiBtZWRpZXZhbCBJbmRpYSBUaGUgSW5kaWFuIGFncmljdWx0dXJlIGhhcyBhbHdheXMgZGVwZW5kZWQgIG9uIHZhcmlvdXMgc291cmNlcyBvZiB3YXRlciBib3RoIG5hdHVyYWwgYW5kICBhcnRpZmkgY2lhbCwgZm9yIGl0cyBpcnJpZ2F0aW9uYWwgcmVxdWlyZW1lbnRzLCAgdml6IC0gcmFpbiwgd2VsbHMsIHJpdmVyLCB0YW5rcywgY2FuYWxzLCBsYWtlcywgIGV0Yy4gRGFtcywgbGFrZXMgYW5kIHdhdGVyIHJlc2Vydm9pcnMgd2VyZSAgc29tZSBvZiB0aGUgaW1wb3J0YW50IG1lYW5zIG9mIGlycmlnYXRpb24uICBJbiBzb3V0aCBJbmRpYSwgdGhlIHN0YXRlLCBsb2NhbCBjaGllZnMgYW5kICB0ZW1wbGUgbWFuYWdlbWVudHMgY29uc3RydWN0ZWQgYSBudW1iZXIgIG9mIGRhbXMgb3ZlciByaXZlcnMgZm9yIHRoaXMgcHVycG9zZS4gIFRoZSBNYWRhZyBsYWtlLCBmb3IgaW5zdGFuY2UsIHdhcyBidWlsdCBieSAgdGhlIFZpamF5bmFnYXIgcnVsZXJzIG9uIHRoZSBUdW5nYmhhZHJhICByaXZlciB0byBtZWV0IHRoZSBpcnJpZ2F0aW9uYWwgbmVlZCBvZiB0aGUgIGFkam9pbmluZyB0ZXJyaXRvcmllcy4gTGFrZXMgYW5kIHdhdGVyICByZXNlcnZvaXJzIHN1Y2ggYXMgdGhlIERoZWJhciwgVWRhaXNhZ2FyLCAgUmFqYXNhbWFuZCBhbmQgSmFpc2FtYW5kIChhbGwgaW4gTWV3YXIpOyAgQmFsc2FuIChNYXJ3YXIpIGFuZCBNYW5zYWdhciAoQW1iZXIpICBldGMuIHNlcnZlZCBhcyBpbXBvcnRhbnQgc291cmNlcyBvZiBpcnJpZ2F0aW9uICBpbiBtZWRpZXZhbCBSYWphc3RoYW4uIFdlbGxzLCBhcyBhIGNvbW1vbiBzb3VyY2Ugb2YgaXJyaWdhdGlvbiwgIHdlcmUgdW5pZm9ybWx5IHNwcmVhZCBpbiBkaWZmZXJlbnQgcGFydHMgb2YgIHRoZSBjb3VudHJ5LiBBIG51bWJlciBvZiBhcnRpZmkgY2lhbCBkZXZpY2VzICB3ZXJlIHVzZWQgdG8gbGlmdCB3YXRlciBmcm9tIHdlbGxzLiAgVGhlIERlbGhpIFN1bHRhbnMsIGluIHBhcnRpY3VsYXIsIHByb21vdGVkICBjYW5hbCBpcnJpZ2F0aW9uLiBHaGl5YXNzdWRkaW4gVHVnaGxhcSAoQS5EICAxMzIwLTEzMjUpIGJ1aWx0IGEgbnVtYmVyIG9mIGNhbmFscyBmb3IgdGhpcyAgcHVycG9zZS4gSG93ZXZlciwgRmlydXogU2hhaCBUdWdobGFxICBsYWlkIHRoZSBsYXJnZXN0IG5ldHdvcmsgb2YgY2FuYWxzLiBGb3VyICBzdWNoIGNhbmFscyBhcmUgZnJlcXVlbnRseSBtZW50aW9uZWQgaW4gIGNvbnRlbXBvcmFyeSBzb3VyY2VzLiBUaGVzZSB3ZXJlIC0gKGkpIGZyb20gIFN1dGxlaiB0byBHaGFnZ2FyLCAoaWkpIE9wZW5pbmcgZnJvbSB0aGUgIE5hbmRhdmkgYW5kIFNpbXVyIGhpbGxzIHRvIEFyYXNhbmksIChpaWkpICBmcm9tIEdoYWdnYXIsIHJlYWNoaW5nIHVwdG8gdGhlIHZpbGxhZ2UgIHRvIEhpcmFuc2kgS2hlcmEsIGFuZCAoaXYpIGV4Y2F2YXRlZCBmcm9tICBZYW11bmEgYW5kIGV4dGVuZGVkIHVwdG8gRmlydXphYmFkLiAgVGhlIHRyYWRpdGlvbiBvZiBEZWxoaSBTdWx0YW5zIHRvIGNvbnN0cnVjdCAgY2FuYWxzIHdhcyBjb250aW51ZWQgYnkgdGhlIE11Z2hhbCAgZW1wZXJvcnMgYXMgd2VsbC4gVGhlIE5haHIgRmFpeiwgZm9yICBpbnN0YW5jZSwgYnVpbHQgZHVyaW5nIFNoYWhqYWhhbidzICByZWlnbiBjYXJyaWVkIHdhdGVyIGZyb20gWWFtdW5hIGFuZCAgaXJyaWdhdGVkIGEgbGFyZ2UgYXJlYS4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogRGVsaGkgU3VsdGFuYXRl",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 19,
      "question" : "Which of the following pairs regarding the Mineral extraction/production in Medieval India is/are correctly matched?1. Saltpetre: Patna 2. Diamond: Khokhra 3. Copper: Khetri Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgcGFpcnMgYXJlIGNvcnJlY3RseSBtYXRjaGVkICBNaW5lcmFsIGV4dHJhY3Rpb24vcHJvZHVjdGlvbiBpbiAgbWVkaWV2YWwgSW5kaWEgRGlhbW9uZCBtaW5pbmcgd2FzIGNhcnJpZWQgb3V0IG1vc3QgIG5vdGFibHkgYXQgR29sY29uZGEuICBTb21lIG90aGVyIGNlbnRyZXMgb2YgZGlhbW9uZCBwcm9kdWN0aW9uICB3ZXJlIEJhaXJhZ2FyaCAoQmVyYXIpLCBQYW5uYSAoTWFkaHlhICBQcmFkZXNoKSwgS2hva2hyYSAoQ2hvdGFuYWdwdXIpIGV0Yy4gIFNhbHRwZXRyZSwgcHJpbWFyaWx5IHVzZWQgYXMgYW4gaW5ncmVkaWVudCAgZm9yIG1hbnVmYWN0dXJpbmcgZ3VuIHBvd2Rlciwgd2FzIG9uZSAgb2YgdGhlIG1vc3QgaW1wb3J0YW50IG1pbmVyYWwgcHJvZHVjdHMuICBJbml0aWFsbHksIGl0IHdhcyBleHRyYWN0ZWQgYXQgQWhtYWRhYmFkLCAgQmFyb2RhLCBhbmQgUGF0bmEgZXRjLiBIb3dldmVyLCBieSB0aGUgIHNlY29uZCBoYWxmIG9mIHRoZSBzZXZlbnRlZW50aCBjZW50dXJ5LCAgUGF0bmEgYmVjYW1lIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgIGNlbnRyZXMgZm9yIHByb2Nlc3NpbmcgdGhpcyBtaW5lcmFsLiBJcm9uIHdhcyB0aGUgbW9zdCBjb21tb25seSBmb3VuZCBtZXRhbC4gIEJlbmdhbCwgQWxsYWhhYmFkLCBBZ3JhLCBCaWhhciwgR3VqYXJhdCwgICAgOSAgRGVsaGksIEthc2htaXIsIENob3RhbmFncHVyIGFuZCBhZGpvaW5pbmcgIHJlZ2lvbnMgb2YgT3Jpc3NhIHdlcmUgbWFqb3IgaXJvbiBwcm9kdWNpbmcgIGNlbnRyZXMgb2YgdGhlIG1lZGlldmFsIHBlcmlvZC4gIEtoZXRyaSAoUmFqYXN0aGFuKSB3YXMgdGhlIG1haW4gY2VudHJlIGZvciAgY29wcGVyIHByb2R1Y3Rpb24uIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERldmVsb3BtZW50cyBhbmQgZWNvbm9taWMgbGlmZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements regarding a Sultan of Delhi:1. S/He wrote Persian verses under the name 'Gulrakhi'.2. S/He re-imposed jaziya on non-Muslims. 3. S/He believed in the superior position of the Sultan vis-a-vis the nobles.Which of the following sultans is being described above?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMA==",
      "description" : "IEV4cGxhbmF0aW9uIE9wdGlvbiAoYSkgaXMgY29ycmVjdCAgU2lrYW5kZXIgTG9kaGkgKGMuMTQ4OS0xNTE3IENFKSAgQWZ0ZXIgdGhlIGRlYWx0aCBvZiBCYWhsb2wgTG9kaSwgU2lrYW5kYXIgIExvZGkgKEFEIDE0ODktMTUxNykgYXNjZW5kZWQgdGhlIHRocm9uZS4gIFNpa2FuZGFyIExvZGkgc2hvd2VkIGxpdHRsZSB0b2xlcmFuY2UgIHRvd2FyZHMgdGhlIG5vbi1tdWxzaW1zLiBIZSByZS1pbXBvc2VkICBqYXppeWEgb24gbm9uLW11bHNpbXMuICBIZSBiZWxpZXZlZCBpbiB0aGUgc3VwZXJpb3IgcG9zaXRpb24gb2YgdGhlICBTdWx0YW4gdmlzLWEtdmlzIHRoZSBub2JsZXMuIEhlIGNvbXBlbGxlZCAgbm9ibGVzIGFuZCBhbWlycyB0byBzaG93IGZvcm1hbCByZXNwZWN0ICB0byB0aGUgU3VsdGFuIGluIGRhcmJhciBhbmQgb3V0c2lkZSBhbmQgIHRyZWF0ZWQgdGhlbSBoYXJzaGx5LiBIZSByZS1hbm5leGVkIEJpaGFyLCAgRGhvbHB1ciwgTmFyd2FyIGFuZCBzb21lIHBhcnRzIG9mIHRoZSAga2luZ2RvbSBvZiBHd2FsaW9yIGFuZCBOYWdvciB0byB0aGUgRGVsaGkgIFN1bHRhbmF0ZS4gSGUgaW50cm9kdWNlZCBhIG5ldyBtZWFzdXJlbWVudCAgeWFyZHN0aWNrLCB0aGUgR2F6ei1JIHNpa2FuZGFyaSwgYW5kIGEgIHN5c3RlbSBvZiBhdWRpdGluZyBvZiBhY2NvdW50cy4gSGUgcmUtIGltcG9zZWQgamF6aXlhIG9uIG5vbi1tdXNsaW1zLiBIZSBmb3VuZGVkICBBZ3JhIGluIGMuMTUwNCBDRSBhbmQgd3JvdGUgUGVyc2lhbiB2ZXJzZXMgIHVuZGVyIHRoZSBuYW1lICdHdWxyYWtoaScuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERlbGhpIFN1bHRhbmF0ZQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sikander Lodhi ",
        "option2" : " Balban ",
        "option3" : " Razia Sultana ",
        "option4" : " Alauddin Khilji    5 "
      }
    },
    {
      "index" : 21,
      "question" : "Large scale human settlements generally spread from west to east in the Indian sub-continent. What can be the possible reasons for this?1. Presence of various passes in north-west mountain ranges2. Easier clearance of forests in the Himalayan foothills3. Narrower width of rivers in the Himalayan foothills4. Gradual increase in rainfall from west to eastSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgR2VvZ3JhcGhpY2FsIFNldHRpbmcgTGFyZ2Utc2NhbGUgaHVtYW4gc2V0dGxlbWVudHMgZ2VuZXJhbGx5ICBzcHJlYWQgZnJvbSB3ZXN0IHRvIGVhc3QuICBSZWFzb25zIGZvciBzdWNoIG1pZ3JhdGlvbiBwYXR0ZXJuIGFyZTogIFRoZSBIaW1hbGF5YXMgYXJlIHN1ZmZpIGNpZW50bHkgaGlnaCB0byAgc2hpZWxkIEluZGlhIGFnYWluc3QgaW52YXNpb25zIGZyb20gdGhlICBub3J0aC4gVGhpcyB3YXMgZXNwZWNpYWxseSB0cnVlIGluIHByZS0gaW5kdXN0cmlhbCB0aW1lcyB3aGVuIGNvbW11bmljYXRpb25zICB3ZXJlIHZlcnkgZGlmZmkgY3VsdC4gSG93ZXZlciwgb24gdGhlICBub3J0aC13ZXN0LCB0aGUgU3VsYWltYW4gbW91bnRhaW4gIHJhbmdlcywgd2hpY2ggYXJlIGEgc291dGh3YXJkICBjb250aW51YXRpb24gb2YgdGhlIEhpbWFsYXlhcywgY291bGQgIGJlIGNyb3NzZWQgdGhyb3VnaCB0aGUgS2h5YmVyLCAgQm9sYW4sIGFuZCBHb21hbCBwYXNzZXMuIFRoZSAgU3VsYWltYW4gcmFuZ2VzIGFyZSBqb2luZWQgc291dGh3YXJkICBpbiBCYWx1Y2hpc3RhbiBieSB0aGUgS2lydGhhciByYW5nZXMgIHdoaWNoIGNvdWxkIGJlIGNyb3NzZWQgdGhyb3VnaCB0aGUgQm9sYW4gIFBhc3MuIFRocm91Z2ggdGhlc2UgcGFzc2VzLCB0d28td2F5ICB0cmFmZmkgYyBiZXR3ZWVuIEluZGlhIGFuZCBDZW50cmFsICBBc2lhIGhhcyBjb250aW51ZWQgZnJvbSBwcmVoaXN0b3JpYyAgdGltZXMgb253YXJkcy4gVGhlIGZvb3RoaWxscyBvZiB0aGUgSGltYWxheWFzIGxlbnQgIHRoZW1zZWx2ZXMgdG8gZWFzaWVyIGNsZWFyYW5jZSB0aGFuICB0aGUganVuZ2xlcyBvbiB0aGUgYWxsdXZpYWwgc29pbCBvZiB0aGUgIHBsYWlucy4gSXQgd2FzIGVhc3kgdG8gY3Jvc3Mgcml2ZXJzIGluICB0aGVzZSBhcmVhcyBiZWNhdXNlIG9mIHRoZWlyIG5hcnJvd2VyICB3aWR0aCwgYW5kIGhlbmNlIHRoZSBlYXJsaWVzdCByb3V0ZXMgIHNraXJ0ZWQgYWxvbmcgdGhlIGZvb3RoaWxscyBvZiB0aGUgIEhpbWFsYXlhcyBmcm9tIHRoZSB3ZXN0IHRvIHRoZSBlYXN0LiAgSXQgd2FzIHRoZXJlZm9yZSBuYXR1cmFsIHRoYXQgdGhlICBlYXJsaWVzdCBhZ3JpY3VsdHVyYWwgc2V0dGxlbWVudHMgIHdlcmUgZm91bmRlZCBpbiB0aGUgZm9vdGhpbGxzIGFuZCAgdXBsYW5kcywgYW5kIHRyYWRlIHJvdXRlcyBmb2xsb3dlZCB0aGUgIHRlcmFpIHJvdXRlLiBQcm9jZWVkaW5nIGZyb20gd2VzdCB0byBlYXN0IHdlICBmaSBuZCB0aGUgYW5udWFsIHJhaW5mYWxsIGdyYWR1YWxseSAgaW5jcmVhc2luZyBmcm9tIDI1IGNtIHRvIG92ZXIgMjUwICBjbS4gVGhlIEluZHVzIHZlZ2V0YXRpb24gYmFzZWQgb24gMjUgdG8gIDM3IGNtIHJhaW5mYWxsIGFuZCBwb3NzaWJseSB0aGUgd2VzdGVybiAgR2FuZ2V0aWMgdmVnZXRhdGlvbiBiYXNlZCBvbiAzNyB0byA2MCAgY20gcmFpbmZhbGwgY291bGQgYmUgY2xlYXJlZCB3aXRoIHN0b25lICBhbmQgY29wcGVyIGltcGxlbWVudHMgYW5kIG1hZGUgZmkgdCBmb3IgIGN1bHRpdmF0aW9uLCBidXQgdGhpcyB3YXMgbm90IHBvc3NpYmxlIGluICB0aGUgY2FzZSBvZiB0aGUgbWlkLUdhbmdldGljIHZlZ2V0YXRpb24gIGJhc2VkIG9uIDYwIHRvIDEyNSBjbSByYWluZmFsbCwgYW5kICBjZXJ0YWlubHkgbm90IGluIHRoZSBjYXNlIG9mIHRoZSBsb3dlciAgR2FuZ2V0aWMgYW5kIEJyYWhtYXB1dHJhIHZlZ2V0YXRpb24gIGJhc2VkIG9uIDEyNSB0byAyNTAgY20gcmFpbmZhbGwuIFRoZSAgdGhpY2tseSBmb3Jlc3RlZCBhcmVhcywgd2hpY2ggYWxzbyAgaGFkIGhhcmQgc29pbCwgY291bGQgYmUgY2xlYXJlZCBvbmx5ICB3aXRoIHRoZSBhaWQgb2YgaXJvbiBpbXBsZW1lbnRzICB3aGljaCBiZWNhbWUgYXZhaWxhYmxlIGF0IGEgbXVjaCAgbGF0ZXIgc3RhZ2UuIFRoZXJlZm9yZSwgdGhlIG5hdHVyYWwgIHJlc291cmNlcyBvZiB0aGUgbGVzcyByYWlueSB3ZXN0ZXJuICBhcmVhIHdlcmUgdXRpbGl6ZWQgZmkgcnN0LiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBJc2xhbWljIEtpbmdkb21zIGluIEluZGlh",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following statement regarding religious policy of Aurangzeb is/are correct?1. He reimposed jiziya which was abolished by Akbar.2. He curbed the power of Muhtasib who were the offi cer entrusted to enforce moral codes.3. 'Zawabit' were the secular decrees issued by Aurangzeb.Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE11aHRhc2liICBiZWNhbWUgcG93ZXJmdWwgZHVyaW5nIGhpcyByZWlnbi4gUmVsaWdpb3VzIFBvbGljeSBvZiBBdXJhbmd6ZWIgQXVyYW5nemViLCB0aGUgNiB0aCBtdWdoYWwgcnVsZXIga25vd24gYnkgIGhpcyByZWduYWwgdGl0bGUgQWxhbWdpciB3YXMgYW4gb3J0aG9kb3ggIE11c2xpbSBpbiB3aG8gYWltZWQgdG8gdHJhbnNmb3JtIEluZGlhICBpbnRvIGFuIElzbGFtaWMgc3RhdGUuICBIZSBiYW5uZWQgdGhlIGNvbnN0cnVjdGlvbiBvZiBuZXcgSGluZHUgIHRlbXBsZXMgYW5kIHRoZSByZXBhaXIgb2Ygb2xkIHRlbXBsZXMuIEhlIGVyZWN0ZWQgbW9zcXVlcyBhdCBwbGFjZSBvZiBWaXNod2FuYXRoICB0ZW1wbGUgYXQgQmFuYXJhcy4gSGUgYWxzbyByZWltcG9zZWQgaml6aXlhIHRheCBvbiBub24tICBNdXNsaW1zIGluIDE2Nzkgd2hpY2ggd2FzIGVhcmxpZXIgIDE1NzkuIGFib2xpc2hlZCBieSBBa2JhciBpbiAgICAxMCAgSGUgd2FzIGludG9sZXJhbnQgdG93YXJkcyBvdGhlciBNdXNsaW0gIHNlY3RzIGFuZCBpcyBrbm93biB0byBoYXZlIHN0b3BwZWQgaGUgIGNlbGVicmF0aW9uIG9mIE11aGFycmFtIGZlc3RpdmFsIGJvdGggIEhlIGFsc28gYWJvbGlzaGVkIE5hdXJveiBhcyBpdCB3YXMgYSAgWm9yb2FzdHJpYW4gcHJhY3RpY2UgZmF2b3VyZWQgYnkgdGhlIFNhZmF2aWQgIHJ1bGVycyBvZiBJcmFuLiBJbiAxNjc1LCBoZSBleGVjdXRlZCBuaW50aCBTaWtoIEd1cnUsICBHdXJ1IFRlZ2ggQmFoYWR1ciBqaSB3aWNoIHJlc3VsdGVkIGluIHRoZSAgcmViZWxsaW9uIG9mIHRoZSBTaWtoIGNvbW11bml0eSBhZ2FpbnN0ICBoaW0uIE11aHRhc2liLCB3aG8gd2FzIG9mZmkgY2VyIGVudHJ1c3RlZCB0byAgZW5mb3JjZSBtb3JhbCBjb2RlcyBiZWNhbWUgcG93ZXJmdWwgIGR1cmluZyBoaXMgcmVnaW4uIEF1cmFuZ3plYiBpcyBrbm93biB0byBoYXZlIGlzc3VlZCAgc2VjdWxhciBkZWNyZWVzIGtub3duIGFzIFphd2FiaXQsIGluICBzdXBwbGVtZW50IHRvIHNoYXJhLiBUaG91Z2ggaGUgd2FzIHByb2ZpIGNpZW50IGluIHBsYXlpbmcgdGhlICB2ZWVuYSwgaGUgZm9yYmFkZSBtdXNpYyBpbiB0aGUgTXVnaGFsICBjb3VydCBhbmQgZGlzY29udGludWVkIHRoZSBwcmFjdGljZSBvZiAgSmhhcm9raGEgZGFyc2hhbiBvciBzaG93aW5nIGhpbXNlbGYgdG8gIHB1YmxpYyBmcm9tIHRoZSBiYWxjb255IGFzIGhlIGNvbnNpZGVyZWQgaXQgIGEgc3VwZXJzdGl0aW91cyBwcmFjdGljZSBhbmQgYWdhaW5zdCBJc2xhbS4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogTXVnaGFsIEVtcGlyZQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 23,
      "question" : "With reference to Mughal Households, which of the followings statements are correct?1. Wives of royal family used to receive monthly allowances in cash, supplemented with gifts according to their status.2. Aghas were the wives of king who were not of noble birth.3. khwajasara were religious teachers of mughal households.Choose the correct option using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEtod2FqYXNhcmEgIHdlcmUgc2xhdmVzIHdobyBtb3ZlZCBiZXR3ZWVuIHRoZSBleHRlcm5hbCAgYW5kIGludGVybmFsIGxpZmUgb2YgdGhlIGhvdXNlaG9sZC4gTXVnaGFsIEhvdXNlaG9sZCBJbiB0aGUgTXVnaGFsIGhvdXNlaG9sZCBhIGRpc3RpbmN0aW9uIHdhcyAgbWFpbnRhaW5lZCBiZXR3ZWVuIHdpdmVzIHdobyBjYW1lIGZyb20gIHJveWFsIGZhbWlsaWVzIGtub3duIGFzIGJlZ2FtcyBhbmQgb3RoZXIgIHdpdmVzIGtub3duIGFzIGFnaGFzIHdobyB3ZXJlIG5vdCBvZiBub2JsZSAgYmlydGguICBUaGUgYmVnYW1zIHVzZWQgdG8gZ2V0IG1hcnJpZWQgIGFmdGVyIHJlY2VpdmluZyBodWdlIGFtb3VudHMgb2YgY2FzaCAgYW5kIHZhbHVhYmxlcyBhbmQgcmVjZWl2ZWQgYSBoaWdoZXIgIHN0YXR1cy4gIExlc3NlciBhZ2hhIG9jY3VwaWVkIHRoZSBsb3dlc3QgcG9zaXRpb24gaW4gIHRoZSBoaWVyYXJjaHkgb2YgZmVtYWxlcyBpbnRpbWF0ZWx5IHJlbGF0ZWQgIHRvIHJveWFsdHkuICBUaGV5IGFsbCByZWNlaXZlZCBtb250aGx5IGFsbG93YW5jZXMgaW4gIGNhc2gsIHN1cHBsZW1lbnRlZCB3aXRoIGdpZnRzIGFjY29yZGluZyB0byAgdGhlaXIgc3RhdHVzLiBIb3dldmVyIHRoaXMgbGluZWFnZS1iYXNlZCBmYW1pbHkgc3RydWN0dXJlICB3YXMgbm90IGVudGlyZWx5IHJpZ2lkLiAgVGhlIGFnaGEgYW5kIHRoZSBhZ2hhY2hhIGFsc28gdXNlZCAgdG8gcmlzZSB0byB0aGUgcG9zaXRpb24gb2YgYSBiZWdhbSAgZGVwZW5kaW5nIG9uIHRoZSBodXNiYW5kJ3Mgd2lsbC4gQXBhcnQgZnJvbSB3aXZlcywgbnVtZXJvdXMgbWFsZSBhbmQgZmVtYWxlICBzbGF2ZXMgcG9wdWxhdGVkIHRoZSBNdWdoYWwgaG91c2Vob2xkLiAgVGhlIHRhc2tzIHRoZXkgcGVyZm9ybWVkIHZhcmllZCBmcm9tIHRoZSAgbW9zdCBtdW5kYW5lIHRvIHRob3NlIHJlcXVpcmluZyBza2lsbCwgdGFjdCAgYW5kIGludGVsbGlnZW5jZS4gIGtod2FqYXNhcmEgd2VyZSBzbGF2ZXMgd2hvIG1vdmVkICBiZXR3ZWVuIHRoZSBleHRlcm5hbCBhbmQgaW50ZXJuYWwgbGlmZSAgb2YgdGhlIGhvdXNlaG9sZCBhcyBndWFyZHMsIHNlcnZhbnRzLCAgYW5kIGFsc28gYXMgYWdlbnRzIGZvciB3b21lbiBkYWJibGluZyAgaW4gY29tbWVyY2UuIEFmdGVyIE51ciBKYWhhbiwgTXVnaGFsIHF1ZWVucyBhbmQgIHByaW5jZXNzZXMgYmVnYW4gdG8gY29udHJvbCBzaWduaWZpIGNhbnQgIGZpIG5hbmNpYWwgcmVzb3VyY2VzLiAgVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogQXJ0IGFuZCBsaWZlIGR1cmluZyBNdWdoYWxz",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to Mughal Coinage, which of the following statements are correct?1. Mohur was the standard gold coin of the Mughals.2. Silver rupya of mughal period was adaptation of Sher Shah's currency.3. Ilahi coins were issued by Jahangir in the memory of his father Akbar.Choose the correct option using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IElsYWhpIGNvaW5zIHdlcmUgIGlzc3VlZCBieSBBa2JhciBoaW1zZWxmIHRvIHByb3BhZ2F0ZSBoaXMgIG5ldyByZWxpZ2lvdXMgY3JlZWQgJ0Rpbi1pLUlsbGFoaScuIE11Z2hhbCBDb2luYWdlIFRoZSBleHBhbmRpbmcgdHJhZGUgdW5kZXIgTXVnaGFscyBicm91Z2h0ICBpbiBodWdlIGFtb3VudHMgb2Ygc2lsdmVyIGJ1bGxpb24gaW50byBBc2lhICB0byBwYXkgZm9yIGdvb2RzIHByb2N1cmVkIGZyb20gSW5kaWEuIEFzIGEgcmVzdWx0LCB0aGUgcGVyaW9kIGJldHdlZW4gdGhlICBzaXh0ZWVudGggYW5kIGVpZ2h0ZWVudGggY2VudHVyaWVzIHdhcyAgYWxzbyBtYXJrZWQgYnkgYSByZW1hcmthYmxlIHN0YWJpbGl0eSAgaW4gdGhlIGF2YWlsYWJpbGl0eSBvZiBtZXRhbCBjdXJyZW5jeSwgIHBhcnRpY3VsYXJseSB0aGUgc2lsdmVyIHJ1cHlhIGluIEluZGlhLiAgSXQgd2FzIGFuIGFkb3B0aW9uIGZyb20gU2hlciBTaGFoJ3MgIGN1cnJlbmN5LiBUaGV5IGFsc28gaXNzdWVkIGEgbGFyZ2UgbnVtYmVyIG9mIGdvbGQgIGNvaW5zLiBNb2h1ciB3YXMgdGhlIHN0YW5kYXJkIGdvbGQgY29pbiBvZiAgdGhlIE11Z2hhbHMsIHdlaWdoaW5nIGFib3V0IDE3MCB0byAxNzUgIGdyYWlucy4gIEFidWwgRmF6bCBpbiBoaXMgJ0Fpbi1pLUFrYmFyaScgaW5kaWNhdGVkICB0aGF0IGEgTW9odXIgd2FzIGVxdWl2YWxlbnQgdG8gbmluZSAgcnVwZWVzLiAgVGhlIE11Z2hhbCBjb3BwZXIgY29pbiB3YXMgYWRvcHRlZCBmcm9tICBTaGVyIFNoYWgncyBkYW0gd2hpY2ggd2VpZ2hlZCAzMjAgdG8gMzMwICBncmFpbnMuIEFrYmFyIGlzc3VlZCBib3RoIHJvdW5kIGFuZCBzcXVhcmUgY29pbnMuICBJbiAxNTc5LCBBa2JhciBpc3N1ZWQgZ29sZCBjb2lucyBjYWxsZWQgIElsYWhpIGNvaW5zIHRvIHByb3BhZ2F0ZSBoaXMgbmV3ICByZWxpZ2lvdXMgY3JlZWQgJ0Rpbi1pLUlsbGFoaScuIFRoaXMgQ29pbiAgaGFkIGVudW1lcmF0aW9uOiAnR29kIGlzIGdyZWF0LCBtYXkgIGhpcyBnbG9yeSBiZSBnbG9yaWZpIGVkJy4gIFRoZSB2YWx1ZSBvZiBhbiBpbGFoaSBjb2luIHdhcyBlcXVhbCB0byAxMCAgcnVwZWVzLiAgU2FoYW5zYWggd2FzIHRoZSBsYXJnZXN0IGdvbGQgY29pbi4gVGhlc2UgIGNvaW5zIGJvcmUgdGhlIG5hbWVzIG9mIHRoZSBwZXJzaWFuIHNvbGFyICBtb250aHMuICAgMTEgIEphaGFuZ2lyIHdhcyBrbm93biB0byBpc3N1ZSBjb3VwbGV0IGluIHRoZSAgY29pbnMuIEluIG1hbnkgaGUgYWRkZWQgdGhlIG5hbWUgb2YgaGlzICBiZWxvdmVkIHdpZmUgTm9vcmphaGFuLiAgVGhlIG1vc3QgZmFtb3VzIG9mIGNvaW5zIG9mIEphaGFuZ2lyIGhhZCAgaW1hZ2VzIG9mIFpvZGlhYyBzaWducy4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogQ29pbnMgYW5kIEN1cnJlbmN5",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements regarding Malik Ambar:1. He was an Abyssinian slave who was bestowed with the title 'Malik' by Sultan of Bijapur.2. He established a city named Khirki which was renamed as Aurangabad by Emperor Shah Jahan.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEF1cmFuZ3plYiAgcmVuYW1lZCB0aGUgY2l0eSBvZiBLaGlya2kgdG8gQXVyYW5nYWJhZC4gUmVpZ24gb2YgTWFsaWsgQW1iYXIgTWFsaWsgQW1iYXIgd2FzIGFuIEFieXNzaW5pYW4gc2xhdmUsICBib3JuIGluIEV0aGlvcGlhLiBIZSByb3NlIHRvIHByb21pbmVuY2UgZnJvbSAxNjA3IHRvIDE2MjYgIHdoZW4gaGUgd2FzIHJlZ2VudCBvZiB0aGUgTmlqYW1zaGFoaSBvZiAgdGhlIEFoYW1lZG5hZ2FyIGluIHRoZSBkZWNjYW4uIEhlIHdhcyBhbW9uZ3N0IG9uZSBvZiBhIHRob3VzYW5kIG90aGVyICBzbGF2ZXMgcHVyY2hhc2VkIGJ5IENoZW5naXogS2hhbiBhIGZhcm1lciAgSGFic2hpIHNsYXZlIGFuZCB0YWtlbiB0byBkZWNjYW4gaW4gZWFybHkgIDE1NzBzLiBIZSB3YXMgc2V0IGZyZWUgYWZ0ZXIgdGhlIGRlYXRoIG9mIENoZW5naGl6ICBLaGFuIGFuZCBsYXRlciBzZXJ2ZWQgZm9yIFN1bHRhbiBvZiBCaWphcHVyICB3aGVyZSBoZSByb3NlIHRvIHBvd2VyIGFmdGVyIGdldHRpbmcgY2hhcmdlICBvZiBzbWFsbCB0cm9vcHMgYW5kIGJlc3Rvd2VkIHdpdGggdGhlIHRpdGxlICAnTWFsaWsnLiBBa2JhciBoYWQgYW5uZXhlZCBBaG1hZG5hZ2FyLiBBZnRlciAgdGhlIGRlYXRoIG9mIEFrYmFyLCBNYWxpayBBbWJhciwgd2l0aCB0aGUgIGhlbHAgb2YgTWFyYXRoYXMgYW5kIHRoZSBydWxlciBvZiBCaWphcHVyICBJYnJhaGltIEFkaWwgU2hhaCwgbWFkZSBpdCBkaWZmaSBjdWx0IGZvciB0aGUgIE11Z2hhbHMgdG8gY29uc29saWRhdGUgdGhlaXIgcG9zaXRpb24gaW4gIEJlcmFyLCBBaG1hZG5hZ2FyLCBhbmQgQmFsYWdoYXQuIEhvd2V2ZXIgaGUgd2FzIGRlZmVhdGVkIGJ5IFNoYWggSmFoYW4gIGFuZCBsb3N0IGNvbnRyb2wgb2YgQmVyYXIgYW5kIEFobWFkbmFnYXIgIHRvIHRoZSBNdWdoYWwuIEhlIGFsc28gZXN0YWJsaXNoZWQgYSBuZXcgY2FwaXRhbCwgYSBjaXR5ICBuYW1lZCBLaGlya2ksIHByZXNlbnRseSBBdXJhbmdhYmFkIGluICBNYWhhcmFzaHRyYS4gQnV0IGZvbGxvd2luZyBBbWJhcidzIGRlYXRoIGluIDE2MjYsIHRoZSAgY2l0eSB3YXMgcnVsZWQgYnkgaGlzIHNvbiwgRmF0ZWggS2hhbiwgd2hvICByZW5hbWVkIHRoZSBjaXR5IGFzICdGYXRoZXB1cicuIEhvd2V2ZXIgaGlzIHJlaWduIGNvdWxkIG5vdCBsYXN0IGxvbmdlciBhbmQgIGJ5IDE2MzYsIHRoZSBlbnRpcmUgQWhtYWRuYWdhciBTdWx0YW5hdGUgIGhhZCBiZWVuIHJlLWNvbnF1ZXJlZCBieSB0aGUgTXVnaGFscy4gV2l0aCB0aGUgZmFsbCBvZiBBaG1hZG5hZ2FyIHN1bHRhbmF0ZSwgdGhlICBjaXR5IGFsc28gZmVsbCB0byB0aGUgTXVnaGFscy4gIEVtcGVyb3IgQXVyYW5nemViIHJlbmFtZWQgdGhlIGNpdHkgIGFzIEF1cmFuZ2FiYWQuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSAgU3ViLXRvcGljOiBNdWdoYWwgRW1waXJl",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements regarding Mughal Advancement in Deccan:1. The expansionism of Akbar was accompanied by his policy of absorbing the chieftains into Mughal nobility.2. Berar was ceded to Mughals by Chand Bibi, ruler of Ahmednagar.Which of the following statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIE11Z2hhbCBhZHZhbmNlbWVudCBpbiBEZWNjYW4gQWtiYXIgY2xhaW1lZCBzdXplcmFpbnR5IG92ZXIgdGhlIGVudGlyZSAgY291bnRyeS4gSGUgd2FzIGtlZW4gdGhhdCBsaWtlIHRoZSBSYWpwdXRzLCAgdGhlIHJ1bGVycyBvZiB0aGUgRGVjY2FuaSBzdGF0ZXMgc2hvdWxkICBhY2tub3dsZWRnZSBoaXMgc3V6ZXJhaW50eS4gSW4gMTU5MSwgQWtiYXIgbGF1bmNoZWQgYSBkaXBsb21hdGljICBvZmZlbnNpdmUgYnV0IHRoZXJlIHdhcyBub3QgbXVjaCBzdWNjZXNzLiBJbiAxNTk1LCB0aGUgTXVnaGFsIGZvcmNlcyBpbnZhZGVkICBBaG1lZG5hZ2FyLiBJdHMgcnVsZXIgQ2hhbmQgQmliaSBkZWNpZGVkICB0byBmYWNlIHRoZSBNdWdoYWxzLiAgU2hlIGFwcHJvYWNoZWQgSWJyYWhpbSBBZGlsIFNoYWggb2YgIEJpamFwdXIgYW5kIFF1dHViIFNoYWggb2YgR29sa29uZGEgZm9yICBoZWxwIGJ1dCB3aXRoIG5vIHN1Y2Nlc3MuICBBZnRlciBoZWF2eSBsb3NzZXMgb24gYm90aCBzaWRlcywgYSB0cmVhdHkgIHdhcyB3b3JrZWQgb3V0IGFuZCBDaGFuZCBCaWJpIGNlZGVkIEJlcmFyICB0byBNdWdoYWxzLiBBZnRlciBzb21lIHRpbWUgQ2hhbmQgQmliaSBhdHRhY2tlZCAgQmVyYXIgdG8gdGFrZSBpdCBiYWNrLiBBdCB0aGlzIHBvaW50ICBOaXphbXNoYWhpLCBRdXRhYnNoYWhpIGFuZCBBZGlsc2hhaGkgIHRyb29wcyBkZWNpZGVkIHRvIHByZXNlbnQgYSBqb2ludCBmcm9udC4gIFRoZSBNdWdoYWxzIHN1ZmZlcmVkIGhlYXZ5IGxvc3NlcyBidXQgY291bGQgIHJldGFpbiB0aGVpciBwb3NpdGlvbi4gTWVhbndoaWxlLCBBZGlsIFNoYWggIG9mIEJpamFwdXIgYWxzbyBleHByZXNzZWQgYWxsZWdpYW5jZSBhbmQgIG9mZmVyZWQgaGlzIGRhdWdodGVyIGluIG1hcnJpYWdlIHRvIFByaW5jZSAgRGFuaXlhbCBhbmQgQ2hhbmQgQmliaSBhbHNvIGRpZWQuICBOb3cgTXVnaGFsIHRlcnJpdG9yaWVzIGluIERlY2NhbiBpbmNsdWRlZCAgQXNpcmdhcmgsIEJ1cmhhbnB1ciwgQWhtZWRhbmFnYXIgYW5kICBCZXJhci4gQWxvbmcgd2l0aCB0aGUgZXhwYW5zaW9uIG9mIHRlcnJpdG9yeSAgQWtiYXIgaW5pdGlhdGVkIHRoZSBwb2xpY3kgb2YgYWJzb3JiaW5nICB0aGUgY2hpZWZ0YWlucyBpbnRvIE11Z2hhbCBub2JpbGl0eSAgd2hpY2ggcGFpZCByaWNoIGRpdmlkZW5kcyB0byB0aGUgIGVtcGlyZS4gIFRoZSBNdWdoYWwgZW1wZXJvciBzdWNjZWVkZWQgaW4gZ2V0dGluZyAgdGhlIHN1cHBvcnQgb2YgY2hpZWZ0YWlucyBhbmQgdGhlaXIgYXJtaWVzICBmb3IgbmV3IGNvbnF1ZXN0cy4gTWFueSBSYWpwdXQgbWFuc2FiZGFycyB3ZXJlIGFzc2lnbmVkICB0aGVpciBvd24gdGVycml0b3JpZXMgYXMgV2F0YW4gSmFnaXIsIHdoaWNoICB3YXMgaGVyZWRpdGFyeSBhbmQgbm9uLXRyYW5zZmVyYWJsZS4gIFRoZSB0ZXJyaXRvcmlhbCBleHBhbnNpb24gaW4gRGVjY2FuIHVuZGVyICBBa2JhciBnYXZlIGEgZGVmaSBuaXRlIHNoYXBlIHRvIHRoZSBNdWdoYWwgIEVtcGlyZS4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzo=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2    6 "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to expansion of Delhi Sultanate under Alauddin Khalji, which of the following statements are correct?1. He reversed the Jalaluddin's policy of tolerance towards neighbouring rulers.2. He was the fi rst ruler to fi x land revenue in cash.3. Malik Kafur, who later led the Khalji dynasty invasions to South India, was acquired by him after his conquest of Bengal.Choose the correct option using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEFsYXVkZGluICBtYXJjaGVkIGFnYWluc3QgR3VqYXJhdCBydWxlciBSYWkgS2FyYW4gIHRvIGNvbnF1ZXIgdGhlIHJlZ2lvbi4gVGhlIHJ1bGVyIGZsIGVkIGF3YXkuICBBbGF1ZGRpbiBtYXJyaWVkIHRoZSBSYWphJ3Mgd2lmZSBLYW1sYSBCYWkgICAgMTIgIGFuZCBhY3F1aXJlZCBNYWxpayBLYWZ1ciB3aG8gd2FzIHNlcnZpbmcgIHVuZGVyIHRoZW0uIExhdGVyIE1hbGlrIEtBZnVyIGJlY2FtZSAgY29tbWFuZGVyIG9mIEFsYXVkZGluIGFuZCBoZWxkIG9mZmkgY2Ugb2YgIHRoZSBOYWliIHVuZGVyIGhpbS4gUmVpZ24gb2YgQWxhdWRkaW4gS2hhbGppIFRoZSBleHBhbnNpb24gb2YgRGVsaGkgU3VsdGFuYXRlIHdhcyAgbWFpbmx5IHVuZGVydGFrZW4gYnkgQWxhdWRkaW4gS2hhbGppIGFuZCAgd2FzIGNvbnRpbnVlZCB1bmRlciBoaXMgc3VjY2Vzc29ycywgdGhlICBjbGltYXggYmVpbmcgcmVhY2hlZCBkdXJpbmcgdGhlIHJlaWduIG9mICBNdWhhbW1hZCBiaW4gVHVnaGxhcS4gQWxhdWRkaW4gS2hhbGppIHdhcyBKYWxhbHVkZGluJ3MgbmVwaGV3LCAgd2hvIGxhaWQgdGhlIGZvdW5kYXRpb24gb2YgS2hhbGppIGR5bmFzdHkgIGluIEluZGlhLiBIZSBoYWQgdHdvIHZpY3RvcmlvdXMgZXhwZWRpdGlvbnMgZHVyaW5nICB0aGUgcmVpZ24gb2YgSmFsYWx1ZGRpbiB0byBCaGlsc2EgKFZpZGlzYSkgIGluIDEyOTIgYW5kIHRvIERldmFnaXJpIGluIHNvdXRoIEluZGlhIGluICAxMjk0LiAgSmFsYWx1ZGRpbidzIHBvbGljeSBvZiB0b2xlcmFuY2Ugd2FzICByZXZlcnNlZCBieSBBbGF1ZGRpbiBLaGFsamksIHdobyAgYXdhcmRlZCBkcmFzdGljIHB1bmlzaG1lbnRzIHRvIGFsbCAgdGhvc2Ugd2hvIGRhcmVkIHRvIG9wcG9zZSBoaW0uICBIZSBhbHNvIHJldml2ZWQgQmFsYmFuJ3MgcG9saWNpZXMgb2YgcnV0aGxlc3MgIGdvdmVybmFuY2UuIFRvIHN1cHByZXNzIHJlYmVscyBpbiBmdXR1cmUsIGhlIGN1cmJlZCAgdGhlIHBvd2VyIG9mIG5vYmxlcyBhbmQgY29uZmkgc2NhdGVkIHRoZWlyICBwcm9wZXJ0aWVzLiBUaGUgbWlsaXRhcnkgY29ucXVlc3RzIG9mIEFsYXVkZGluIEtoYWxqaSAgaW5jbHVkZSBoaXMgZXhwZWRpdGlvbiBhZ2FpbnN0IEd1amFyYXQsICBSYWpwdXRhbmEsIGFuZCB0aGUgRGVjY2FuLiBNYWxpayBLYWZ1ciwgd2hvIGxhdGVyIGxlZCB0aGUgS2hhbGppICBkeW5hc3R5IGludmFzaW9ucyB0byBTb3V0aCBJbmRpYSwgd2FzICBhY3F1aXJlZCBieSBoaW0gYWZ0ZXIgaGlzIGNvbnF1ZXN0IG9mICBHdWphcmF0LiBIZSB3YXMgdGhlIGZpIHJzdCBydWxlciB0byBmaSB4IGxhbmQgcmV2ZW51ZSAgaW4gY2FzaC4gSGlzIHRoZW9yeSBvZiBraW5zaGlwIHdhcyBzZWN1bGFyIGFuZCBoZSAgcHJvY2xhaW1lZCAnS2luZ3NoaXAga25vd3Mgbm8gS2luc2hpcCcuIEFsdGhvdWdoIHRoZSBTdWx0YW4gd2FzIGlsbGl0ZXJhdGUsIGhlICBwYXRyb25pc2VkIHBvZXRzIGxpa2UgQW1pciBLaHVzcmF1IGFuZCBNaXIgIEhhc2FuIERlaGx2aS4gQWxhdWRkaW4gYWRvcHRlZCB0aGUgdGl0bGUgb2YgIFNpa2FuZGVyLWktQXphbSBhbmQgZ2F2ZSBBbWlyIEtodXNyYXUgIHRoZSB0aXRsZSBvZiBUdXRpLWktSGluZCAoUGFycm90IG9mIEluZGlhKS4gIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERlbGhpIFN1bHRhbmF0ZQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to Age of confl ict (1000- 1200C.E.), which of the following statements are correct?1. Ajayaraja II was a famous Chauhan ruler who founded the city of Ajmer.2. Prithviraj Raso is a famous poem written by Jayanaka, who was court poet of Prithviraj Chauhan.3. Vishvanatha Temple at Khajuraho was commissioned by Dhanga-Deva who was a Chandella king.Choose the correct option using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyOA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFByaXRodmlyYWogUmFzbyAgaXMgd3JpdHRlbiBieSBDaGFuZGJhcmRhaSwgdGhlIGNvdXJ0IHBvZXQgb2YgIFByaXRodmlyYWogQ2hhdWhhbi4gQWdlIG9mIENvbmZsIGljdCBpbiBOb3J0aGVybiBJbmRpYSBUaGUgcGVyaW9kIGZyb20geWVhciAxMDAwIHRvIDEyMDAgaW4gIG5vcnRoZXJuIEluZGlhIGlzIHByaW1hcmlseSBrbm93biBhcyB0aGUgIGFnZSBvZiBjb25mbCBpY3QuICBJdCByZXN1bHRlZCBpbiB0aGUgYnJlYWtkb3duIG9mIHRoZSB0cmlwYXJ0aXRlICBwb3dlcnMgaS5lLiB0aGUgUmFzaHRyYWt1dGFzLCB0aGUgUGFsYXMsIGFuZCAgdGhlIFByYXRpaGFyYXMgaW50byBtYW55IHNtYWxsZXIga2luZ2RvbXMgIGFsbCBvdmVyIHRoZSBjb3VudHJ5LiAgVGhlIGRpc2ludGVncmF0aW9uIG9mIHRoZSBQcmF0aWhhcmEgZW1waXJlICBpbiBub3J0aGVybiBJbmRpYSBicm91Z2h0IHRvIHRoZSBmb3JlZnJvbnQgIHZhcmlvdXMgUmFqcHV0IGR5bmFzdGllcywgc3VjaCBhcyB0aGUgIFByYXRpaGFyYXMsIENoYXVoYW5zLCBDaGFuZGVsbGFzLCB0aGUgIFBhcmFtYXJhcyBvZiBNYWx3YS4gQWpheWFyYWphIElJIHdhcyBhIGZhbW91cyBDaGF1aGFuICBydWxlciB3aG8gZm91bmRlZCB0aGUgY2l0eSBvZiAgQWpheWFtZXJ1LCBwcmVzZW50IGRheSBBam1lci4gUHJpdGh2aXJhaiBJSUksIHBvcHVsYXJseSBrbm93biBhcyBQcml0aHZpcmFqICBDaGF1aGFuIGlzIGtub3duIHRvIGhhdmUgZGVmZWF0ZWQgIE11aGFtbWFkIEdob3JpIGluIHRoZSBGaXJzdCBCYXR0bGUgb2YgIDExOTEuIFRhcmFpbiBpbiAgVHdvIGdyZWF0IHBvZW1zLCBQcml0aHZpcmFqIFJhc28gYW5kICBQcml0aHZpcmFqIFZpamF5YSwgd2VyZSB3cml0dGVuIGJ5IGhpcyAgY291cnQgcG9ldHMgQ2hhbmRiYXJkYWkgYW5kIEpheWFuYWthICByZXNwZWN0aXZlbHkuIERoYW5nYS1EZXZhIHdhcyBDaGFuZGVsbGEga2luZyAgd2hvIGlzIGtub3duIHRvIGhhdmUgY29tbWlzc2lvbmVkICBWaXNodmFuYXRoYSBUZW1wbGUgYXQgS2hhanVyYWhvLiBCaG9qYSB3YXMgdGhlIG1vc3QgY2VsZWJyYXRlZCBydWxlciBvZiB0aGUgIFBhcmFtYXJhIGR5bmFzdHksIGFuZCB1bmRlciB3aG9tIHRoZSAgZHluYXN0eSByZWFjaGVkIGl0cyB6ZW5pdGguICBIZSBpcyBjcmVkaXRlZCBmb3IgZm91bmRpbmcgdGhlIGNpdHkgb2YgIEJob2pwdXIsIGFuZCBidWlsZGluZyBvZiBCaG9qZXNod2FyIHRlbXBsZSwgIGRlZGljYXRlZCB0byBTaGl2YSBpbiBNYWRoeWEgUHJhZGVzaC4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogTm9ydGggSW5kaWFuIEtpbmdkb21z",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 29,
      "question" : "Arrange the following administrative units in their decreasing order of hierarchy:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGMpIGlzIGNvcnJlY3QgIFBvbGl0aWNhbCBvcmdhbml6YXRpb24gaW4gTWVkaWV2YWwgSW5kaWEgVGhlIGRpcmVjdGx5IGFkbWluaXN0ZXJlZCB0ZXJyaXRvcmllcyAgaW4gdGhlIFBhbGEgYW5kIFByYXRpaGFyYSBlbXBpcmVzICB3ZXJlIGRpdmlkZWQgaW50byBSYXNodHJhLCBCaHVrdGkgIChwcm92aW5jZXMpLCBhbmQgTWFuZGFsYSBvciBWaXNheWEgIChkaXN0cmljdHMpLiAgVGhlIFJhc2h0cmEgd2FzIHVuZGVyIHRoZSBzdXBlcnZpc2lvbiAgb2YgUmFzaHRyYXBhdGkgb3IgZ292ZXJub3IuIEJodWt0aSB3YXMgdW5kZXIgdGhlIHN1cGVydmlzaW9uIG9mICBVcGFyaWthIHdobyB3YXMgZXhwZWN0ZWQgdG8gY29sbGVjdCAgbGFuZCByZXZlbnVlIGFuZCBtYWludGFpbiBsYXcgYW5kICBvcmRlciB3aXRoIHRoZSBoZWxwIG9mIHRoZSBhcm15LiBWaXNheWFwYXRpIHdhcyB0aGUgdGhlIGhlYWQgb2YgYSBkaXN0cmljdCAgYW5kIHdhcyBleHBlY3RlZCB0byBkbyB0aGUgc2FtZSB3aXRoaW4gaGlzICBqdXJpc2RpY3Rpb24uICBQYXR0YWxhIHdhcyBhIG1vcmUgc21hbGxlciB1bml0IG9mICBjbHVzdGVyIG9mIHZpbGxhZ2VzIHdoaWNoIHdlcmUgaGVhZGVkICBieSBCaG9qYXBhdGkuICAgMTMgIER1cmluZyB0aGUgcGVyaW9kLCB0aGVyZSB3YXMgYW4gaW5jcmVhc2Ugb2YgIHNtYWxsZXIgY2hpZWZ0YWlucyBvciBCaG9qYXBhdGlzIGFuZCB0aGVzZSAgdGVuZWRlZCB0byBtZXJnZSB3aXRoIHZpc2F5YXBhdGlzIGFuZCAgbGF0ZXIgb24gdGhlIHdvcmQgc2FtYW50YSBiZWdhbiB0byBiZSB1c2VkICBpbmRpc2NyaW1pbmF0ZWx5IGZvciBib3RoIG9mIHRoZW0uIEFsbCB0aGUgb2ZmaSBjaWFscyB3ZXJlIHBhaWQgYnkgZ2l2aW5nIHRoZW0gIGdyYW50cyBvZiByZW50LWZyZWUgbGFuZC4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogQWRtaW5pc3RyYXRpb24gZHVyaW5nIG1lZGlldmFsICB0aW1lcw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Rashtra - Mandala - Bhukti - Pattala ",
        "option2" : " Rashtra - Pattala - Mandala - Bhukti ",
        "option3" : " Rashtra - Bhukti - Mandala - Pattala ",
        "option4" : " Rashtra - Bhukti - Pattala - Mandala "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements regarding the Turkish Conquest of North India:1. Mahmud Ghajnavi was not the fi rst Turkish invader in India.2. The Battles of Tarain were fought between Muizzuddin Muhammad and Prithviraj Chauhan.Which of the above statements is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IE1haG11ZCAgR2hhamFudmkgd2FzIHRoZSBmaSByc3QgVHVya2lzaCBpbnZhZGVyIGluICBJbmRpYS4gVHVya2lzaCBDb25xdWVzdCBvZiBOb3J0aCBJbmRpYSBUd28gZGlzdGluY3QgcGF0dGVybnMgb2YgcmVsYXRpb25zICBiZXR3ZWVuIEhpbmR1cyBhbmQgTXVzbGltcyB3ZXJlIGF0ICB3b3JrIGFmdGVyIHRoZSBHaGF6bmF2aWQgY29ucXVlc3Qgb2YgIFB1bmphYi4gT25lIHdhcyB0aGUgbHVyZSBmb3IgcGx1bmRlciB3aGljaCAgbW90aXZhdGVkIHRoZSBzdWNjZXNzb3JzIG9mIE1haG11ZCB0byByYWlkICBpbnRvIEdhbmdldGljIHZhbGxleSBhbmQgUmFqcHV0YW5hLiBUaGUgIFJhanB1dHMgb2ZmZXJlZCBzcGlyaXRlZCByZXNpc3RhbmNlIHRvIHRoZXNlICByYWlkcyBhbmQgdGhlc2UgdmljdG9yaWVzIG1hZGUgdGhlbSBtb3JlICBjb21wbGFjZW50IGFzIHRoZSBHaGF6bmF2aWQgc3RhdGUgd2FzIG5vICBsb25nZXIgYSBwb3dlcmZ1bCBzdGF0ZS4gVHdvLCB0byBzdHJlbmd0aGVuIEluZGlhJ3MgdHJhZGUgd2l0aCAgQ2VudHJhbCBhbmQgd2VzdCBBc2lhLCBNdXNsaW0gdHJhZGVycyB3ZXJlICB3ZWxjb21lZCBpbnRvIHRoZSBjb3VudHJ5LiBUaGlzIGFsc28gbGVkIHRvICBjb21pbmcgb2YgU3VmaSBwcmVhY2hlcnMgaW4gSW5kaWEgYW5kIHRodXMgIHN0YXJ0ZWQgYSBwcm9jZXNzIG9mIGludGVyYWN0aW9uIGJldHdlZW4gIElzbGFtIGFuZCBIaW5kdWlzbS4gVG93YXJkcyBtaWQtMTIgdGggY2VudHVyeSwgYW5vdGhlciBncm91cCAgb2YgVHVya2lzaCB0cmliZXNtZW4gb3ZlcnRocmV3IHRoZSBTZWxqdWsgIFR1cmtzIGFuZCB0d28gbmV3IGVtcGlyZXMsIEtod2FyaXppbWkgIGluIElyYW4gYW5kIEdodXJpZCBpbiBBZmdoYW5pc3RhbiBjYW1lIHRvICBwcm9taW5lbmNlLiBUaGUgcmlzaW5nIHBvd2VyIG9mIEtod2FyaXppbWkgbGltaXRlZCAgdGhlIENlbnRyYWwgQXNpYW4gYW1iaXRpb25zIG9mIEdodXJpZHMgIGFuZCB0aGV5IG5vdyBsb29rZWQgZm9yIGV4cGFuc2lvbiB0b3dhcmRzICBJbmRpYS4gU2hhaGFidWRkaW4gTXVoYW1tYWQgKG9yIE11aXp6dWRkaW4gIE11aGFtbWFkIGJpbiBTYW0pIGluIDExNzMgYXNjZW5kZWQgdGhlICB0aHJvbmUgYXQgR2hhem5pLiBIZSBjcmVhdGVkIGEgc3VpdGFibGUgYmFzZSBpbiBQdW5qYWIgYW5kICBsYXVuY2hlZCBhIGNhbXBhaWduIHRvd2FyZHMgRGVsaGkgYW5kICBHYW5nZXRpYyBkb2FiLiBUaGlzIGJyb3VnaHQgaGltIGludG8gIGNvbmZsIGljdCB3aXRoIHRoZSBDaGF1aGFucywgd2hvc2UgcG93ZXIgIHdhcyBncm93aW5nIHN0ZWFkaWx5LiAgVGhlIGRlY2lzaXZlIHZpY3Rvcnkgb2YgU2hhaGFidWRkaW4gIE11aGFtbWFkIGluIHRoZSBTZWNvbmQgYmF0dGxlIG9mICBUYXJhaW4gaW4gMTE5MiBicm91Z2h0IHRoZSBEZWxoaSBhcmVhICBhbmQgZWFzdGVybiBSYWphc3RoYW4gdW5kZXIgdGhlICBUdXJraXNoIHJ1bGUuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSAgU3ViLXRvcGljOiBFYXJseSBNdXNsaW0gSW52YXNpb25z",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 31,
      "question" : "Which of the following were the reasons for the Rajput defeat to the Turks?1. Superior weaponry with the Turks 2. Feudal structure of Rajput society 3. Highly centralized control of army 4. Caste system which prevented lower castes form taking part in battlesSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFJhanB1dCBkZWZlYXQgIHRvIFR1cmtzIGNhbm5vdCBiZSBhdHRyaWJ1dGVkIHRvIHN1cGVyaW9yICB3ZWFwb25yeSB3aXRoIHRoZSBUdXJrcy4gVGhpcyBpcyBiZWNhdXNlLCAgSW5kaWFuIHN3b3JkcyB3ZXJlIGNvbnNpZGVyZWQgdGhlIGJlc3QgaW4gIGhhbmQgdG8gaGFuZCBjb21iYXQgYW5kIHRoZWlyIGFycm93cyB3ZXJlICBtb3JlIGFjY3VyYXRlIGFuZCBkZWFkbHkgYXMgdGhlIGFycm93aGVhZHMgIHdlcmUgZGlwcGVkIGluIHBvaXNvbi4gQWxzbyB0aGUgaXJvbiBzdGlycnVwLCAgd2hpY2ggY2hhbmdlZCB0aGUgbmF0dXJlIG9mIHdhcmZhcmUgaW4gIEV1cm9wZSwgaGFkIHNwcmVhZCB0byBJbmRpYSBmcm9tIHRoZSBsYXRlICA4dGggY2VudHVyeSBvbndhcmRzLiBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IFRoZSBjYXN0ZSAgc3lzdGVtIGRpZCBub3QgcHJldmVudCB0aGUgbm9uLVJhanB1dHMgb3IgIGt1dmFybmEgKGxvd2VyIGNhc3RlcykgZnJvbSB0YWtpbmcgcGFydCBpbiAgYmF0dGxlcy4gVGh1cyB0aGUgUmFqcHV0IGFybWllcyB3ZXJlIGxhcmdlciAgaW4gbnVtYmVyIHRvIHRob3NlIGZpIGVsZGVkIGJ5IHRoZSBUdXJrcy4gQ2F1c2VzIG9mIFJhanB1dCBEZWZlYXQgdG8gVHVya3MgVGhlIGRlZmVhdCBvZiBsZWFkaW5nIE5vcnRoIEluZGlhbiAgc3RhdGVzIHdpdGhpbiBhIHNwYW4gb2YgMTUgeWVhcnMgd2FzICBub3QgYmVjYXVzZSBvZiBzdXBlcmlvciB3ZWFwb25yeSB3aXRoICB0aGUgVHVya3MgYnV0IGR1ZSB0byB3ZWFrIHNvY2lhbCBhbmQgIG9yZ2FuaXphdGlvbmFsIHNldHVwLiBBZG1pbmlzdHJhdGl2ZSBzdHJ1Y3R1cmUgYW5kIG1pbGl0YXJ5ICBvcmdhbml6YXRpb24gd2FzIHdlYWtlbmVkIGR1ZSB0byBncm93dGggIG9mIGZldWRhbGlzbSBhbmQgdGhlIHN1YnNlcXVlbnQgcmlzZSBvZiAgbG9jYWwgbGFuZGVkIGNoaWVmcywgd2hvIHJhcmVseSBhY3RlZCBpbiAgY29vcmRpbmF0aW9uLiBUaGUgVHVya3Mgb24gdGhlIG90aGVyIGhhbmQgIGhhZCBhIHRyaWJhbCBzdHJ1Y3R1cmUuIFRob3VnaCB0aGUgUmFqcHV0cyB3ZXJlIG5vdCBhY2N1c3RvbWVkICB0byBtb3ZlIGFzIG9yZ2FuaXplZCBob3JzZW1lbiAobGlrZSBUdXJrcykgIG9yIGNhcnJpZWQgaGVhdmlseSBhcm1lZCBjYXZhbHJ5IGFuZCAgbW91bnRlZCBhcmNoZXJ5LCB0aGV5IGhhZCBncmVhdGVyIGh1bWFuICBhbmQgcGh5c2ljYWwgcmVzb3VyY2VzIHRoYW4gdGhlIEdoYXpuYXZpZCAgYW5kIEdodXJpZCBlbXBpcmVzIHdoaWNoIHNob3VsZCBub3QgaGF2ZSAgcmVzdWx0ZWQgaW50byB0aGVpciBkZWZlYXQuIEluIGVhY2ggb2YgdGhlIFJhanB1dCBzdGF0ZXMsIHRoZSBhcm15ICB3YXMgaGlnaGx5IGNlbnRyYWxpemVkIHdoZXJlYXMgdGhlIGlxdGEgIGFuZCBLaGFsaXNhIHN5c3RlbXMgZW5hYmxlZCB0aGUgVHVya3MgIHRvIG1haW50YWluIGxhcmdlIHN0YW5kaW5nIGFybWllcy4gVGhvdWdoIHRoZSBSYWpwdXRzIHBpdCB1cCBhIHNwaXJpdGVkIGFuZCAgcHJvbG9uZ2VkIHJlc2lzdGFuY2UgYWdhaW5zdCB0aGUgVHVya3MsICB0aGV5IGxhY2tlZCBhIHN0cmF0ZWdpYyB2aXNpb24uIEZvciBleGFtcGxlLCAgdGhleSBkaWQgbm90IGF0dGVtcHQgdG8gcmVjb3ZlciB0aGUgZmFsbGVuICB0ZXJyaXRvcmllcyBvZiBLYWJ1bCBhbmQgTGFob3JlIGZyb20gdGhlICBUdXJrcy4gVGh1cyB0aGV5IHJlbWFpbmVkIGZvY3VzZWQgb24gIEluZGlhIGFuZCBwYWlkIGxpdHRsZSBhdHRlbnRpb24gdG8gdGhlIGFmZmFpcnMgIG91dHNpZGUsIGVzcGVjaWFsbHkgdG8gY2VudHJhbCBJbmRpYS4gVG9waWM6IE1lZGlldmFsIEluZGlhICBTdWItdG9waWM6IE5vcnRoIEluZGlhbiBLaW5nZG9tcyAgIDE0IA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to Lodhis, the last dynasty of Delhi sultanate in India, which of the following statements are correct?1. Bahlol Lodhi laid the foundation of Lodhi dynasty in India..2. The city of Agra was founded by Ibrahim Lodhi, the last ruler of Delhi Sultanate in India.3. Gazz-i- Sikandari was a measurement yardstick introduced by Sikander Lodhi.Choose the correct option using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IENpdHkgb2YgQWdyYSB3YXMgIDE1MDQuIGZvdW5kZWQgYnkgU2lrYW5kZXIgTG9kaGkgaW4geWVhciAgTG9kaGkgRHluYXN0eSAgVGhlIExvZGhpcyB3ZXJlIHRoZSBsYXN0IHJ1bGluZyBmYW1pbHkgb2YgIHRoZSBTdWx0YW5hdGUgcGVyaW9kLiAgQmFobG9sIExvZGhpIGxhaWQgdGhlIGZvdW5kYXRpb24gb2YgIExvZGhpIGR5bmFzdHkuIEhlIHdhcyBhIGNhcGFibGUgZ2VuZXJhbCB3aG8gcHVibGljbHkgIGRlY2xhcmVkIHRoYXQgaGUgY29uc2lkZXJlZCBoaW1zZWxmIG9uZSBvZiAgdGhlIEFmZ2hhbiBwZWVycyBhbmQgbm90IHRoZSBraW5nLiAgSGUgZGlkIG5vdCBzaXQgb24gdGhlIHRocm9uZSwgbm9yIGRpZCBoZSBpbnNpc3QgIG9uIGhpcyBub2JsZXMgc3RhbmRpbmcgaW4gaGlzIGNvdXJ0LiBIZSBhbm5leGVkIFNoYXJxdWkgZHluYXN0eSBhbmQgaW50cm9kdWNlZCAgQmFobG9sIGNvcHBlciBjb2lucy4gSG93ZXZlciwgaGUgZmFpbGVkIHRvIHJlLSAgb2NjdXB5IEJlbmdhbCwgR3VqYXJhdCwgYW5kIHRoZSBEZWNjYW4uIFNpa2FuZGVyIExvZGhpIHdhcyB0aGUgZ3JlYXRlc3QgYW5kIG5vYmxlc3QgIG9mIHRoZSB0aHJlZSBMb2RoaSBydWxlcnMuIEhlIGludHJvZHVjZWQgYSBuZXcgbWVhc3VyZW1lbnQgIHlhcmRzdGljaywgdGhlIEdhenotaS0gU2lrYW5kYXJpLCBhbmQgYSAgc3lzdGVtIG9mIGF1ZGl0aW5nIG9mIGFjY291bnRzLiBIZSBiZWxpZXZlZCBpbiB0aGUgc3VwZXJpb3IgcG9zaXRpb24gb2YgdGhlICBTdWx0YW4gdmlzLWEtdmlzIHRoZSBub2JsZXMuIEhlIGNvbXBlbGxlZCAgbm9ibGVzIGFuZCBhbWlycyB0byBzaG93IGZvcm1hbCByZXNwZWN0ICB0byB0aGUgU3VsdGFuIGluIGRhcmJhciBhbmQgb3V0c2lkZSBhbmQgIHRyZWF0ZWQgdGhlbSBoYXJzaGx5LiBIZSBmb3VuZGVkIEFncmEgaW4geWVhciAxNTA0IGFuZCAgd3JvdGUgUGVyc2lhbiB2ZXJzZXMgdW5kZXIgdGhlIG5hbWUgICdHdWxyYWtoaScuIElicmFoaW0gTG9kaGksIHRoZSBsYXN0IG9mIERlbGhpIFN1bHRhbmF0ZSAgd2FzIGEgcmVwcmVzc2l2ZSBydWxlci4gVW5kZXIgaGltLCAgZGlzYWZmZWN0aW9uIGJldHdlZW4ga2luZyBhbmQgY291cnRpZXJzICBiZWNhbWUgdmVyeSBjb21tb24uIERhdWxhdCBLaGFuIExvZGhpLCB0aGUgZ292ZXJub3Igb2YgdGhlICBQdW5qYWIsIGdyZWF0bHkgZGlzcGxlYXNlZCBieSB0aGUgYXJyb2dhbmNlICBhbmQgaW5zdWx0IG9mIElicmFoaW0sIGludml0ZWQgQmFidXIgdG8gIGludmFkZSBJbmRpYS4gSGUgd2FzIGtpbGxlZCBieSBCYWJ1ciBpbiB0aGUgZmkgcnN0IEJhdHRsZSAgb2YgUGFuaXBhdCBpbiAxNTI2LCB0aHVzIGVuZGluZyB0aGUgcmVpZ24gIG9mIERlbGhpIFN1bHRhbmF0ZSBpbiBJbmRpYSBhbmQgbWFya2VkIHRoZSAgYmVnaW5uaW5nIG9mIE11Z2hhbCBydWxlLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgIFN1Yi10b3BpYzogRGVsaGkgU3VsdGFuYXRl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements is/are correct?1. One of the reasons for the decline of trade and commerce during early medieval period (800-1200AD) was the growth of localism.7 2. During early medieval period Tamralipti in Bengal was a chief Indian port for sailing to Java, Sumatra, etc.Select the correct option using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIFRyYWRlIGFuZCBDb21tZXJjZSAoODAwLTEyMDBBRCkgVGhlIHVuZG91YnRlZCBkZWNsaW5lIG9mIGxvbmcgZGlzdGFuY2UgdHJhZGUgIHdpdGhpbiB0aGUgY291bnRyeSBkdXJpbmcgdGhpcyBwZXJpb2QgaGFzIHRvICBiZSBzb3VnaHQgbW9yZSBpbiBpbnRlcm5hbCBjb25kaXRpb25zLiBUaGVyZSAgd2FzIHRoZSByaXNlIG9mIG1hbnkgc3RhdGVzIGFuZCB0aGUgZ3Jvd3RoICBvZiB3aGF0IGhhcyBiZWVuIGNhbGxlZCAnbG9jYWxpc20nLiBJbiB0aGVzZSBzdGF0ZXMgdGhlcmUgd2FzIGEgbWFya2VkIGdyb3d0aCAgb2YgbG9jYWwgc2VsZi1zdWZmaSBjaWVuY3kgd2hpY2ggZ3JldyBpbiAgY29uanVuY3Rpb24gd2l0aCBzbWFsbCB0b3ducyBUaGUgY2hpZWYgSW5kaWFuIHBvcnQgZm9yIHNhaWxpbmcgdG8gSmF2YSwgIFN1bWF0cmEsIGV0YyB3YXMgVGFtcmFsaXB0aSAoVGFtbHVrKSAgbm93IGluIEJlbmdhbC4gSW4gbW9zdCBvZiB0aGUgc3RvcmllcyBvZiB0aGUgIHBlcmlvZCwgbWVyY2hhbnRzIHN0YXJ0IGZvciBTdXZhcm5hZHZpcGEgIChtb2Rlcm4gSW5kb25lc2lhKSBvZiBLYXRhaGEuIChLZWRhaCBpbiAgTWFsYXlhKSBmcm9tIFRhbXJhbGlwdGkuICBBIGZvdXJ0ZWVudGgtY2VudHVyeSB3cml0ZXIgaW4gSmF2YSAgc3BlYWtzIG9mIHBlb3BsZSBmcm9tIEphbWJ1ZHZpcGEgKEluZGlhKSAgS2FybmF0YWthIChzb3V0aCBJbmRpYSkgYW5kIEdhdWQgKEJlbmdhbCkgIGNvbWluZyB1bmNlYXNpbmdseSBpbiBsYXJnZSBudW1iZXJzIGluICBsYXJnZSBzaGlwcy4gIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERlY2xpbmUgb2YgTWVkaWV2YWwgRW1waXJlcw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following is correct about science and education of the early medieval period of India?1. Kashmir grew as an important center for Saiva sect.2. Nalanda, Vikramshila and Uddandapura in Bihar was important Buddhist centres for secular education.Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNA==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIFNjaWVuY2UgYW5kIEVkdWNhdGlvbiAoODAwLTEyMDBBRCkgVGhlIHN5c3RlbSBvZiBlZHVjYXRpb24gd2hpY2ggaGFkIGJlZW4gIGdyYWR1YWxseSBkZXZlbG9wZWQgaW4gdGhlIGVhcmxpZXIgcGVyaW9kICBjb250aW51ZWQgZHVyaW5nIHRoaXMgcGVyaW9kIHdpdGhvdXQgbXVjaCAgY2hhbmdlLiBUaGVyZSB3YXMgbm8gaWRlYSBvZiBNYXJzIGVkdWNhdGlvbiAgYXQgdGhhdCB0aW1lLiBFZHVjYXRpb24gb2YgYSBtb3JlIGZvcm1hbCBraW5kLCB3aXRoICBncmVhdGVyIGVtcGhhc2lzIG9uIHNlY3VsYXIgc3ViamVjdHMgIGNvbnRpbnVlZCB0byBiZSBwcm92aWRlZCBhdCBzb21lIG9mIHRoZSAgQnVkZGhpc3QgVmloYXJhLiAgTmFsYW5kYSBpbiBCaWhhciB3YXMgdGhlIG1vc3QgZmFtb3VzIG9mICB0aGVzZS4gT3RoZXIgY2VudGVycyBvZiBsZWFybmluZyBpbmNsdWRlZCAgVmlrcmFtc2hpbGEgYW5kIFVkZGFuZGFwdXJhIHdoaWNoIGFsc28gIHdlcmUgaW4gQmloYXIuIEFsbCB0aGVzZSBuZXcgc3R1ZGVudHMgZnJvbSAgZGlzdGFudCBwbGFjZXMgaW5jbHVkaW5nIFRpYmV0LiBLYXNobWlyIHdhcyBhbm90aGVyIGltcG9ydGFudCBjZW50cmUgb2YgIGVkdWNhdGlvbi4gTWFueSBTYWl2YSBzZWN0cyBhbmQgY2VudHJlcyBvZiAgbGVhcm5pbmcgZmwgb3VyaXNoZWQgaW4gS2FzaG1pciBkdXJpbmcgdGhlICBwZXJpb2QgVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogRGV2ZWxvcG1lbnRzIGFuZCBlY29ub21pYyBsaWZl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 35,
      "question" : "Which of the following are the signifi cances of Babur's advent into India?1. Security to India from external invasions 2. Introduction of arch and dome in region's architecture3. Introduction and popularization of gunpowder and artillery in India4. Establishment of tradition of garden buildingSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFyY2hlcyBhbmQgIERvbWVzIHdlcmUgaW50cm9kdWNlZCBieSBUdXJrcyBkdXJpbmcgdGhlICBEZWxoaSBTdWx0YW5hdGUuIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogR3VucG93ZGVyICB3YXMgYWxyZWFkeSBrbm93biBpbiBJbmRpYSBiZWZvcmUgIEJhYnVyJ3MgYXJyaXZhbC4gSGlzIHZpY3RvcmllcyBsZWQgdG8gcmFwaWQgIHBvcHVsYXJpemF0aW9uIG9mIGd1bnBvd2RlciBhbmQgYXJ0aWxsZXJ5ICBpbiBJbmRpYS4gICAgMTUgIFNpZ25pZmkgY2FuY2Ugb2YgQmFidXIncyBBZHZlbnQgaW50byAgSW5kaWEgQmFidXIncyBhZHZlbnQgaW50byBJbmRpYSB3YXMgc2lnbmlmaSBjYW50ICBmcm9tIG1hbnkgcG9pbnRzIG9mIHZpZXcuIEZvciB0aGUgZmkgcnN0IHRpbWUgc2luY2UgdGhlIGRvd25mYWxsICBvZiB0aGUgS3VzaGFuYSBFbXBpcmUsIEthYnVsIGFuZCAgUWFuZGhhciBiZWNhbWUgaW50ZWdyYWwgcGFydHMgb2YgIGFuIGVtcGlyZSBjb21wcmlzaW5nIG5vcnRoIEluZGlhLiAgU2luY2UgdGhlc2UgYXJlYXMgaGFkIGFsd2F5cyBhY3RlZCBhcyAgc3RhZ2luZyBwbGFjZXMgZm9yIGFuIGludmFzaW9uIG9mIEluZGlhICBieSBkb21pbmF0aW5nIHRoZW0gQmFidXIgYW5kIGhpcyAgc3VjY2Vzc29ycyB3ZXJlIGFibGUgdG8gZ2l2ZSB0byBJbmRpYSAgc2VjdXJpdHkgZnJvbSBleHRlcm5hbCBpbnZhc2lvbnMgZm9yICBhbG1vc3QgMjAwIHllYXJzLiBFY29ub21pY2FsbHksIHRoZSBjb250cm9sIG9mIEthYnVsIGFuZCAgUWFuZGhhciBzdHJlbmd0aGVuZWQgSW5kaWEncyBmb3JlaWduIHRyYWRlICBzaW5jZSB0aGVzZSB0d28gdG93bnMgd2VyZSB0aGUgc3RhcnRpbmcgIHBvaW50cyBmb3IgY2FyYXZhbnMgbWVhbnQgZm9yIENoaW5hIGluIHRoZSAgZWFzdCwgYW5kIHRoZSBNZWRpdGVycmFuZWFuIHNlYXBvcnRzIGluIHRoZSAgd2VzdC4gVGh1cywgSW5kaWEgY291bGQgdGFrZSBhIGdyZWF0ZXIgc2hhcmUgIGluIHRoZSBncmVhdCB0cmFucy1Bc2lhbiB0cmFkZS4gQmFidXIgaW50cm9kdWNlZCBhIG5ldyBtb2RlIG9mIHdhcmZhcmUgaW4gIEluZGlhLiBBbHRob3VnaCBndW5wb3dkZXIgd2FzIGtub3duICBpbiBJbmRpYSBlYXJsaWVyLCBCYWJ1ciBzaG93ZWQgd2hhdCAgYSBza2lsbGVkIGNvbWJpbmF0aW9uIG9mIGFydGlsbGVyeSBhbmQgIGNhdmFscnkgY291bGQgYWNoaWV2ZS4gSGlzIHZpY3RvcmllcyBsZWQgIHRvIHJhcGlkIHBvcHVsYXJpemF0aW9uIG9mIGd1bnBvd2RlciAgYW5kIGFydGlsbGVyeSBpbiBJbmRpYS4gQnkgaGlzIG5ldyBtaWxpdGFyeSBtZXRob2RzIGFzIHdlbGwgYXMgYnkgIGhpcyBwZXJzb25hbCBjb25kdWN0LCBCYWJ1ciByZS1lc3RhYmxpc2hlZCAgdGhlIHByZXN0aWdlIG9mIHRoZSBDcm93biB3aGljaCBoYWQgYmVlbiAgZXJvZGVkIHNpbmNlIHRoZSBkZWF0aCBvZiBGaXJveiBTaGFoICBUdWdobGFxLiBBbHRob3VnaCBTaWthbmRyYSBMb2RpIGFuZCAgSWJyYWhpbSBMb2RpIGhhZCB0cmllZCB0byByZWVzdGFibGlzaCB0aGUgIHByZXN0aWdlIG9mIHRoZSBDcm93biwgQWZnaGFuIGlkZWFzIG9mIHRyaWJhbCAgaW5kZXBlbmRlbmNlIGFuZCBlcXVhbGl0eSBoYWQgcmVzdWx0ZWQgIG9ubHkgaW4gYSBwYXJ0aWFsIHN1Y2Nlc3MuIEJhYnVyIGhhZCB0aGUgIHByZXN0aWdlIG9mIGJlaW5nIGEgZGVzY2VuZGFudCBvZiB0d28gb2YgdGhlICBtb3N0IGZhbW91cyB3YXJyaW9ycyBvZiBBc2lhLCBDaGFuZ2V6IGFuZCAgVGltdXIuIE5vbmUgb2YgaGlzIG5vYmxlcyBjb3VsZCwgdGhlcmVmb3JlLCAgY2xhaW0gYSBzdGF0dXMgb2YgZXF1YWxpdHkgd2l0aCBoaW0uIEJhYnVyIHdhcyBkZWVwbHkgbGVhcm5lZCBpbiBQZXJzaWFuIGFuZCAgQXJhYmljLCBhbmQgaXMgcmVnYXJkZWQgYXMgb25lIG9mIHRoZSB0d28gIG1vc3QgZmFtb3VzIHdyaXRlcnMgaW4gdGhlIFR1cmtpc2ggbGFuZ3VhZ2UgIHdoaWNoIHdhcyBoaXMgbW90aGVyIHRvbmd1ZS5IaXMgZmFtb3VzICBtZW1vaXJzLCB0aGUgVHV6dWstaS1CYWJ1cmksIGlzIGNvbnNpZGVyZWQgIG9uZSBvZiB0aGUgY2xhc3NpY3Mgb2YgbGl0ZXJhdHVyZS4gSGlzIG90aGVyICB3b3JrcyBpbmNsdWRlIGEgbWFzbmF2aSBhbmQgdGhlIFR1cmtpc2ggIHRyYW5zbGF0aW9uIG9mIGEgd2VsbC1rbm93biBTdWZpIHdvcmsuIEhlICB3YXMgYSBrZWVuIG5hdHVyYWxpc3QsIGFuZCBoYXMgZGVzY3JpYmVkICB0aGUgZmwgb3JhIGFuZCBmYXVuYSBvZiBJbmRpYSBpbiBjb25zaWRlcmFibGUgIGRldGFpbC4gSGUgbGFpZCBvdXQgYSBudW1iZXIgb2YgZm9ybWFsICBnYXJkZW5zIHdpdGggcnVubmluZyB3YXRlciB0aGVyZWJ5ICBlc3RhYmxpc2hpbmcgYSB0cmFkaXRpb24gb2YgYnVpbGRpbmcgIGdhcmRlbnMuIEJhYnVyIGludHJvZHVjZWQgYSBuZXcgY29uY2VwdCBvZiB0aGUgc3RhdGUgIHdoaWNoIHdhcyB0byBiZSBiYXNlZCBvbiB0aGUgc3RyZW5ndGggYW5kICBwcmVzdGlnZSBvZiB0aGUgQ3Jvd24sIGFic2VuY2Ugb2YgcmVsaWdpb3VzICBhbmQgc2VjdGFyaWFuIGJpZ290cnksIGFuZCB0aGUgY2FyZWZ1bCAgZm9zdGVyaW5nIG9mIGN1bHR1cmUgYW5kIHRoZSBmaSBuZSBhcnRzLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBFYXJseSBNdXNsaW0gaW52YXNpb25z",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 36,
      "question" : "Qutub-ud-din Aibak was the founder of the Slave Dynasty in India. In this contex, consider the following statements:1. He was the fi rst independent muslim ruler of Northern India. 2. He is known to have issued a large number of silver coins in India.3. He started the construction of the Qutub Minar in Delhi.Which of the above statements are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFF1dHViLXVkLWRpbiAgQWliYWsgZGlkIG5vdCBpc3N1ZSBhbnkgY29pbnMgZHVyaW5nIGhpcyAgcnVsZS4gU2xhdmUgRHluYXN0eSBJbnZhc2lvbnMgYnkgTWFobXVkIG9mIEdoYXpuaSBhbmQgTW9oZC4gIEdob3JpIGludG8gSW5kaWEgdWx0aW1hdGVseSByZXN1bHRlZCBpbiB0aGUgIGVzdGFibGlzaG1lbnQgb2YgdGhlIERlbGhpIFN1bHRhbmF0ZS4gIEZpdmUgZGlmZmVyZW50IGR5bmFzdGllcy10aGUgU2xhdmUsIHRoZSAgS2hhbGppLCB0aGUgVHVnaGxhcSwgdGhlIFNheXlpZHMsIGFuZCB0aGUgIExvZGhpJ3MgYXJlIGNvbGxlY3RpdmVseSByZWZlcnJlZCB0byBhcyB0aGUgIERlbGhpIFN1bHRhbmF0ZS4gUXV0dWItdWQtZGluIEFpYmFrIGZvdW5kZWQgdGhlIFNsYXZlICBkeW5hc3R5IChhbHNvIGNhbGxlZCB0aGUgTWFtZWx1ayAgZHluYXN0eSkgaW4gSW5kaWEuIEhlIGFzc3VtZWQgdGhlIHRpdGxlIG9mICdTdWx0YW4nIGFuZCBtYWRlICBMYWhvcmUgaGlzIGNhcGl0YWwuIEhlIGRpZCBub3QgaXNzdWUgYW55IGNvaW5zIGFuZCB3YXMgIGZvcm1hbGx5IHJlY29nbml6ZWQgYWZ0ZXIgdGhyZWUgeWVhcnMuIEhlIGdhdmUgYSBsb3Qgb2YgbGliZXJhbCBkb25hdGlvbnMgYW5kIHdhcyAgZmFtb3VzbHkga25vd24gYXMgJ0xha2ggQmFrc2gnIG9yIGdpdmVyIG9mICBsYWtocyBmb3IgaGlzIE1hZ25hbmltaXR5LiAnUXV3d2F0LXVsLUlzbGFtJyBpbiBEZWxoaSB3YXMgYnVpbHQgIGJ5IGhpbS4gSGUgaXMgYWxzbyBrbm93biB0byBoYXZlIGJ1aWx0ICBBcmhhaSBkaW4ga2EgamhvbnBhcmEgaW4gQWptZXIuIFRoZSBjb25zdHJ1Y3Rpb24gb2YgUXV0dWIgTWluYXIgd2FzICBzdGFydGVkIGJ5IGhpbSAob25seSB0aGUgZmkgcnN0IHN0b3JleSkgaW4gIHRoZSBtZW1vcnkgb2YgdGhlIGZhbW91cyBTdWZpIHNhaW50LCAgS2h3YWphIFF1dGJ1ZGRpbiBCYWt0aGl5YXIgS2FraS4gSXQgIHdhcyBsYXRlciBjb21wbGV0ZWQgYnkgSWx0dXRtaXNoIGluICAxMjIwLiBhcm91bmQgIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IENvaW5zIGFuZCBDdXJyZW5jeQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 37,
      "question" : "He was a King of Sultanate of Bijapur. He was very solicitous to the poor and had the title of 'abla baba' i.e. 'Friend of Poor'. He was deeply interested in music and composed a book called 'Kitab-i-Nauras' in which songs were set to various musical modes. He also built a new capital 'Nauraspur' in which a large number of musicians were invited to settle. He accorded patronage to all, including Hindu saints and temples and due to his broad approach; he came to be called 'Jagat Guru'.Identify the personality described in the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIElicmFoaW0gQWRpbCBTaGFoIElJIFRoZSBzdWNjZXNzb3Igb2YgQWxpIEFkaWwgU2hhaCwgSWJyYWhpbSBBZGlsICBTaGFoIElJICgxNTgwLTE2MjcpLCBhc2NlbmRlZCB0aGUgdGhyb25lIG9mICBTdWx0YW5hdGUgb2YgQmlqYXB1ciBhdCB0aGUgYWdlIG9mIG5pbmUuICBIZSB3YXMgdmVyeSBzb2xpY2l0b3VzIHRvIHRoZSBwb29yLCBhbmQgIGhhZCB0aGUgdGl0bGUgb2YgJ2FibGEgYmFiYScgb3IgJ0ZyaWVuZCBvZiB0aGUgIFBvb3InLiAgSGUgd2FzIGRlZXBseSBpbnRlcmVzdGVkIGluIG11c2ljLCBhbmQgIGNvbXBvc2VkIGEgYm9vayBjYWxsZWQgS2l0YWItaS1OYXVyYXMgaW4gIHdoaWNoIHNvbmdzIHdlcmUgc2V0IHRvIHZhcmlvdXMgbXVzaWNhbCAgbW9kZXMgb3IgcmFnYXMuICAgIDE2ICBIZSBidWlsdCBhIG5ldyBjYXBpdGFsLCBOYXVyYXNwdXIsIGluIHdoaWNoICBhIGxhcmdlIG51bWJlciBvZiBtdXNpY2lhbnMgd2VyZSBpbnZpdGVkICB0byBzZXR0bGUuICBJbiBoaXMgc29uZ3MsIGhlIGZyZWVseSBpbnZva2VkIHRoZSBnb2RkZXNzICBvZiBtdXNpYyBhbmQgbGVhcm5pbmcsIFNhcmFzd2F0aS4gRHVlIHRvICBoaXMgYnJvYWQgYXBwcm9hY2ggaGUgY2FtZSB0byBiZSBjYWxsZWQgICdKYWdhdCBHdXJ1Jy4gSGUgYWNjb3JkZWQgcGF0cm9uYWdlIHRvIGFsbCwgIGluY2x1ZGluZyBIaW5kdSBzYWludHMgYW5kIHRlbXBsZXMuIFRoaXMgIGluY2x1ZGVkIGdyYW50cyB0byBQYW5kaGFycHVyLCB0aGUgY2VudHJlICBvZiB0aGUgd29yc2hpcCBvZiBWaXRob2JhLCB3aGljaCBiZWNhbWUgIHRoZSBjZW50cmUgb2YgdGhlIEJoYWt0aSBtb3ZlbWVudCBpbiAgTWFoYXJhc2h0cmEuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IEtpbmdkb21zIG9mIFNvdXRoIEluZGlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Adil Ali Shah ",
        "option2" : " Ibrahim Adil Shah II ",
        "option3" : " Muhammad Quli Qutub Shah ",
        "option4" : " Yusuf Adil Shah "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements regarding Maratha ruler Shivaji's organisation of the army and the revenue system:1. Regular soldiers were given salaries in cash though sometimes the chiefs received revenue grants2. The revenue system was patterned on the system of Malik Ambar.3. Shivaji abolished the Zamindari system. Which of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzOA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFNoaXZhamkgZGlkIG5vdCAgYWJvbGlzaCB0aGUgemFtaW5kYXJpIChkZXNobXVraGkpIHN5c3RlbSwgIGJ1dCBhd2FyZGVkIGphZ2lycyAobW9rYXNhKSB0byBoaXMgb2ZmaSBjaWFscy4gIEhvd2V2ZXIsIFNoaXZhamkgc3RyaWN0bHkgc3VwZXJ2aXNlZCB0aGUgIG1pcmFzZGFycywgdGhhdCBpcywgdGhvc2Ugd2l0aCBoZXJlZGl0YXJ5ICByaWdodHMgaW4gbGFuZC4gU2hpdmFqaSdzIE9yZ2FuaXNhdGlvbiBvZiB0aGUgQXJteSAgU2hpdmFqaSBwcmVmZXJyZWQgdG8gZ2l2ZSBjYXNoIHNhbGFyaWVzIHRvICB0aGUgcmVndWxhciBzb2xkaWVycywgdGhvdWdoIHNvbWV0aW1lcyAgdGhlIGNoaWVmcyByZWNlaXZlZCByZXZlbnVlIGdyYW50cyAgKHNhcmFuamFtKS4gVGhlIHBsdW5kZXIgdGFrZW4gYnkgZWFjaCBzb2xkaWVyIGR1cmluZyAgY2FtcGFpZ25zIHdhcyBzdHJpY3RseSBhY2NvdW50ZWQgZm9yLiAgVGhlIHJlZ3VsYXIgYXJteSAocGFnYSkgY29uc2lzdGluZyBvZiAgYWJvdXQgMzAsMDAwIHRvIDQwLDAwMCBjYXZhbHJ5LCBhcyBkaXN0aW5jdCAgZnJvbSB0aGUgbG9vc2UgYXV4aWxpYXJpZXMgKHNpbGFoZGFycyksIHdlcmUgIHN1cGVydmlzZWQgYnkgaGF2YWxkYXJzd2hvIHJlY2VpdmVkIGZpIHhlZCAgc2FsYXJpZXMuICBUaGUgZm9ydHMgd2VyZSBjYXJlZnVsbHkgc3VwZXJ2aXNlZCwgTWF2YWxpICBmb290IHNvbGRpZXJzIGFuZCBndW5uZXJzIGJlaW5nIGFwcG9pbnRlZCAgdGhlcmUuIFJldmVudWUgU3lzdGVtIFRoZSByZXZlbnVlIHN5c3RlbSBzZWVtcyB0byBoYXZlICBiZWVuIHBhdHRlcm5lZCBvbiB0aGUgc3lzdGVtIG9mIE1hbGlrICBBbWJhci4gQSBuZXcgcmV2ZW51ZSBhc3Nlc3NtZW50IHdhcyAgMTY3OS4gY29tcGxldGVkIGJ5IEFubmFqaSBEYXR0byBpbiAgSXQgaXMgbm90IGNvcnJlY3QgdG8gdGhpbmsgdGhhdCBTaGl2YWppICBhYm9saXNoZWQgdGhlIFphbWluZGFyaSAoZGVzaG10dGtobCkgIHN5c3RlbSwgb3IgdGhhdCBoZSBkaWQgbm90IGF3YXJkICBqYWdpcnMgKG1va2FzYSkgdG8gaGlzIG9mZmkgY2lhbHMuICBIb3dldmVyLCBTaGl2YWppIHN0cmljdGx5IHN1cGVydmlzZWQgIHRoZSBtaXJhc2RhcnMsIHRoYXQgaXMsIHRob3NlIHdpdGggIGhlcmVkaXRhcnkgcmlnaHRzIGluIGxhbmQuIFNoaXZhamkgc3VwcGxlbWVudGVkIGhpcyBpbmNvbWUgYnkgbGV2eWluZyAgYSBjb250cmlidXRpb24gb24gdGhlIG5laWdoYm91cmluZyBNdWdoYWwgIHRlcnJpdG9yaWVzLiBUaGlzIGNvbnRyaWJ1dGlvbiB3aGljaCBjYW1lIHRvICBvbmUgZm91bmggb2YgdGhlIGxhbmQgcmV2ZW51ZSwgYmVnYW4gdG8gYmUgIGNhbGxlZCBjaGF1dGhhaSAob25lIGZvdXJ0aCkgb3IgY2hhdXRoLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLXRvcGljOiBOb3J0aCBJbmRpYW4ga2luZ2RvbXM=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to Sher Shah Suri, the founder of Sur Empire, consider the following statements:1. He made signifi cant changes in the administration divisions as compared to Delhi Sultanate by following a decentralized system of administration.8 2. He introduced liberal policies like abolition of Jizyah.3. He paid great attention to improvement of communications in his kingdom.Which of the above statements is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFNoZXIgU2hhaCAgZGlkIG5vdCBtYWtlIG1hbnkgY2hhbmdlcyBpbiB0aGUgIGFkbWluaXN0cmF0aXZlIGRpdmlzaW9ucyBwcmV2YWlsaW5nIHNpbmNlIHRoZSAgU3VsdGFuYXRlIHBlcmlvZC4gSGUgYXBwYXJlbnRseSBjb250aW51ZWQgIHRoZSBjZW50cmFsIG1hY2hpbmVyeSBvZiBhZG1pbmlzdHJhdGlvbiAgd2hpY2ggaGFkIGRldmVsb3BlZCBkdXJpbmcgdGhlIFN1bHRhbmF0ZSAgcGVyaW9kLiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFNoZXIgU2hhaCBkaWQgIG5vdCBpbml0aWF0ZSBhbnkgbmV3IGxpYmVyYWwgcG9saWNpZXMuIEppenlhaCAgY29udGludWVkIHRvIGJlIGNvbGxlY3RlZCBmcm9tIHRoZSBIaW5kdXMuIFNoZXIgU2hhaCBhbmQgdGhlIFN1ciBFbXBpcmUgKDE1NDAtIDE1NTUpIFNoZXIgU2hhaCBhc2NlbmRlZCB0aGUgdGhyb25lIG9mIERlbGhpIGF0ICB0aGUgYWdlIG9mIDU0LiBIaXMgb3JpZ2luYWwgbmFtZSB3YXMgRmFyaWQgIGFuZCBoaXMgZmF0aGVyIHdhcyBhIHNtYWxsIGphZ2lyZGFyIGF0ICBKYXVucHVyLiBUaGUgdGl0bGUgb2YgU2hlciBLaGFuIHdhcyBnaXZlbiAgdG8gaGltIGJ5IGhpcyBwYXRyb24gZm9yIGtpbGxpbmcgYSB0aWdlciBvciBmb3IgIHNlcnZpY2VzIHJlbmRlcmVkLiBBcyBhIHJ1bGVyLCBTaGVyIFNoYWggcnVsZWQgdGhlIG1pZ2h0aWVzdCAgZW1waXJlIHdoaWNoIGhhZCBjb21lIGludG8gZXhpc3RlbmNlIGluICBub3J0aCBJbmRpYSBzaW5jZSB0aGUgdGltZSBvZiBNdWhhbW1hZCAgYmluIFR1Z2hsYXEuIEhpcyBlbXBpcmUgZXh0ZW5kZWQgZnJvbSAgQmVuZ2FsIHRvIHRoZSBJbmR1cywgZXhjbHVkaW5nIEthc2htaXIuIEluICB0aGUgd2VzdCwgaGUgY29ucXVlcmVkIE1hbHdhLCBhbmQgYWxtb3N0ICB0aGUgZW50aXJlIFJhamFzdGhhbi4gVGhlIFN1ciBFbXBpcmUgbWF5IGhlIGNvbnNpZGVyZWQgaW4gbWFueSAgd2F5cyBhcyBhIGNvbnRpbnVhdGlvbiBhbmQgY3VsbWluYXRpb24gb2YgIHRoZSBEZWxoaSBTdWx0YW5hdGUsIHRoZSBhZHZlbnQgb2YgQmFidXIgIGFuZCBIdW1heXVuIGJlaW5nIGluIHRoZSBuYXR1cmUgb2YgYW4gIGludGVycmVnbnVtLiBBbW9uZ3N0IHRoZSBmb3JlbW9zdCBjb250cmlidXRpb25zIG9mIFNoZXIgIFNoYWggd2FzIGhpcyByZS1lc3RhYmxpc2htZW50IG9mIGxhdyBhbmQgIG9yZGVyIGFjcm9zcyB0aGUgbGVuZ3RoIGFuZCBicmVhZHRoIG9mIGhpcyAgZW1waXJlLiBIZSBkZWFsdCBzdGVybmx5IHdpdGggcm9iYmVycyBhbmQgIGRhY29pdHMgYW5kIHdpdGggemFtaW5kYXJzIHdobyByZWZ1c2VkIHRvICBwYXkgbGFuZCByZXZlbnVlIG9yIGRpc29iZXllZCB0aGUgb3JkZXJzIG9mICB0aGUgZ292ZXJubWVudC4gU2hlciBTaGFoIHBhaWQgZ3JlYXQgYXR0ZW50aW9uIHRvIHRoZSAgaW1wcm92ZW1lbnQgb2YgY29tbXVuaWNhdGlvbnMgaW4gIGhpcyBraW5nZG9tLiBGb3IgZS5nLiBoZSByZXN0b3JlZCB0aGUgb2xkICBpbXBlcmlhbCByb2FkIGNhbGxlZCB0aGUgR3JhbmQgVHJ1bmsgUm9hZCwgIGZyb20gdGhlIHJpdmVyIEluZHVzIGluIHRoZSB3ZXN0IHRvIFNvbmFyZ2FvbiAgaW4gQmVuZ2FsLiBIZSBhbHNvIGJ1aWx0IGEgcm9hZCBmcm9tIEFncmEgdG8gIEpvZGhwdXIgYW5kIENoaXR0b3IsIGV2aWRlbnRseSBsaW5raW5nIHVwICB3aXRoIHRoZSByb2FkIHRvIHRoZSBHdWphcmF0IHNlYXBvcnRzLiBIZSAgYnVpbHQgYSB0aGlyZCByb2FkIGZyb20gTGFob3JlIHRvIE11bHRhbi4gIEZvciB0aGUgY29udmVuaWVuY2Ugb2YgdHJhdmVsZXJzLCBTaGVyIFNoYWggIGJ1aWx0IGEgc2FyYWkgYXQgYSBkaXN0YW5jZSBvZiBldmVyeSB0d28gS29zICAoYWJvdXQgZWlnaHQga20pIG9uIHRoZXNlIHJvYWRzLiBTaGVyIFNoYWggYWxzbyBpbnRyb2R1Y2VkIG90aGVyIHJlZm9ybXMgdG8gIHByb21vdGUgdGhlIGdyb3d0aCBvZiB0cmFkZSBhbmQgY29tbWVyY2UuICBJbiBoaXMgZW50aXJlIGVtcGlyZSwgY3VzdG9tcyBkdXR5IGZvciBnb29kcyAgICAxNyAgd2FzIHBhaWQgb25seSBhdCB0d28gcGxhY2VzLiBIaXMgYXR0ZW1wdCAgdG8gZmkgeCBzdGFuZGFyZCB3ZWlnaHRzIGFuZCBtZWFzdXJlcyBhbmQgIGEgdW5pZm9ybSBzdGFuZGFyZCBmb3IgY29pbnMgYWxsIG92ZXIgdGhlICBlbXBpcmUgd2VyZSBhbHNvIGhlbHBmdWwgZm9yIHRyYWRlIGFuZCAgY29tbWVyY2UuIFNoZXIgU2hhaCBkaWQgbm90IG1ha2UgbWFueSBjaGFuZ2VzICBpbiB0aGUgYWRtaW5pc3RyYXRpdmUgZGl2aXNpb25zICBwcmV2YWlsaW5nIHNpbmNlIHRoZSBTdWx0YW5hdGUgcGVyaW9kLiAgQSBudW1iZXIgb2YgdmlsbGFnZXMgY29tcHJpc2VkIGEgcGFyZ2FuYS4gIFRoZSBwYXJnYW5hIHdhcyB1bmRlciB0aGUgY2hhcmdlIG9mIHRoZSAgc2hpcWRhciwgd2hvIGxvb2tlZCBhZnRlciBsYXcgYW5kIG9yZGVyIGFuZCAgZ2VuZXJhbCBhZG1pbmlzdHJhdGlvbiwgYW5kIHRoZSBtdW5zaWYgb3IgIGFtaWwgd2hvIGxvb2tlZCBhZnRlciB0aGUgY29sbGVjdGlvbiBvZiBsYW5kICByZXZlbnVlLiBIZSBhcHBhcmVudGx5IGNvbnRpbnVlZCB0aGUgIGNlbnRyYWwgbWFjaGluZXJ5IG9mIGFkbWluaXN0cmF0aW9uICBhcyBoZSBkaWQgbm90IGZhdm9yIGxlYXZpbmcgdG9vIG11Y2ggIGF1dGhvcml0eSBpbiB0aGUgaGFuZHMgb2YgbWluaXN0ZXJzLiBIZSBwYWlkIHNwZWNpYWwgYXR0ZW50aW9uIHRvIHRoZSBsYW5kIHJldmVudWUgIHN5c3RlbS4gSGUgaW5zaXN0ZWQgb24gbWVhc3VyZW1lbnQgb2YgdGhlICBzb3duIGxhbmQuIEEgY3JvcCByYXRlIChjYWxsZWQgcmF5KSB3YXMgIGRyYXduIHVwLCBsYXlpbmcgZG93biB0aGUgc3RhdGUncyBzaGFyZSBvZiAgdGhlIGRpZmZlcmVudCB0eXBlcyBvZiBjcm9wcy4gU2hlciBTaGFoIGRpZCBub3QgaW5pdGlhdGUgYW55IG5ldyAgbGliZXJhbCBwb2xpY2llcy4gSml6eWFoIGNvbnRpbnVlZCB0byBiZSAgY29sbGVjdGVkIGZyb20gdGhlIEhpbmR1cy4gSGlzIG5vYmlsaXR5IHdhcyBkcmF3biBhbG1vc3QgZXhjbHVzaXZlbHkgIGZyb20gdGhlIEFmZ2hhbnMuIFRodXMsIHRoZSBzdGF0ZSB1bmRlciB0aGUgIFN1cnMgcmVtYWluZWQgYW4gQWZnaGFuIGluc3RpdHV0aW9uIGJhc2VkICBvaWwgcmFjZSBhbmQgdHJpYmUuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSAgU3ViLXRvcGljOiBUaGUgU3VyIHJ1bGU=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the cultural contributions of the Deccan States, consider the following statements:1. Ali Adil Shah invited Christian missionaries to his court even before Akbar had done so.2. Muhammad Quli Qutub Shah was a contemporary of Akbar who constructed Char Minar.3. Gol Gumbaz built by rulers of Bijapur has the single largest dome ever constructed.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0MA==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgQ3VsdHVyYWwgQ29udHJpYnV0aW9uIG9mIERlY2NhbiBTdGF0ZXMgVGhlIERlY2NhbiBzdGF0ZXMgaGFkIGEgbnVtYmVyIG9mIGN1bHR1cmFsICBjb250cmlidXRpb25zIHRvIHRoZWlyIGNyZWRpdC4gQWxpIEFkaWwgU2hhaCAgKGQuIDE1ODApIGxvdmVkIHRvIGhvbGQgZGlzY3Vzc2lvbnMgd2l0aCAgSGluZHUgYW5kIE11c2xpbSBzYWludHMgYW5kIHdhcyBjYWxsZWQgIGEgU3VmaSAuIEhlIGludml0ZWQgQ2F0aG9saWMgbWlzc2lvbmFyaWVzIHRvICBoaXMgY291cnQsIGV2ZW4gYmVmb3JlIEFrYmFyIGhhZCBkb25lIHNvLiAgSGUgaGFkIGFuIGV4Y2VsbGVudCBMaWJyYXJ5IHRvIHdoaWNoIGhlICBhcHBvaW50ZWQgdGhlIHdlbGwta25vd24gU2Fuc2tyaXQgc2Nob2xhciwgIFdhbWFuIFBhbmRpdC4gVGhlIHN1Y2Nlc3NvciBvZiBBbGkgQWRpbCBTaGFoLCBJYnJhaGltIEFkaWwgIFNoYWggSUkgKDE1ODAtMTYyNykgd2FzIGRlZXBseSBpbnRlcmVzdGVkICBpbiBtdXNpYywgYW5kIGNvbXBvc2VkIGEgYm9vayBjYWxsZWQgS2l0YWItIGktTmF1cmFzIGluIHdoaWNoIHNvbmdzIHdlcmUgc2V0IHRvIHZhcmlvdXMgIG11c2ljYWwgbW9kZXMgb3IgcmFnYXMuIEhlIGJ1aWx0IGEgbmV3ICBjYXBpdGFsLCBOYXVyYXNwdXIsIGluIHdoaWNoIGEgbGFyZ2UgbnVtYmVyICBvZiBtdXNpY2lhbnMgd2VyZSBpbnZpdGVkIHRvIHNldHRsZS4gU3VsdGFuIE11aGFtbWFkIFF1bGkgUXV0dWIgU2hhaCwgYSAgY29udGVtcG9yYXJ5IG9mIEFrYmFyLCB3YXMgdmVyeSBmb25kICBvZiBsaXRlcmF0dXJlIGFuZCBhcmNoaXRlY3R1cmUuIEhlIHdyb3RlICBpbiBEYWtoYW5pIFVyZHUsIFBlcnNpYW4gYW5kIFRlbHVndSBhbmQgIGhhcyBsZWZ0IGFuIGV4dGVuc2l2ZSBkaXdhbiBvciBjb2xsZWN0aW9uLiBIZSAgd2FzIHRoZSBmaSByc3QgdG8gaW50cm9kdWNlIGEgc2VjdWxhciBub3RlIGluICBwb2V0cnkuIEFwYXJ0IGZyb20gdGhlIHByYWlzZSBvZiBHb2QgYW5kIHRoZSAgUHJvcGhldCwgaGUgd3JvdGUgYWJvdXQgbmF0dXJlLCBsb3ZlLCBhbmQgIHRoZSBzb2NpYWwgbGlmZSBvZiBoaXMgZGF5LiBJbiB0aGUgZmkgZWxkIG9mIGFyY2hpdGVjdHVyZSwgTXVoYW1tYWQgIFF1bGkgUXV0dWIgU2hhaCBjb25zdHJ1Y3RlZCBtYW55ICBidWlsZGluZ3MsIHRoZSBtb3N0IGZhbW91cyBvZiB3aGljaCAgaXMgdGhlIENoYXIgTWluYXIuIENvbXBsZXRlZCBpbiAxNTkxLSA5MiwgaXQgc3Rvb2QgYXQgdGhlIGNlbnRyZSBvZiB0aGUgbmV3IGNpdHkgb2YgIEh5ZGVyYWJhZCBmb3VuZGVkIGJ5IE11aGFtbWFkIFF1bGkgIFF1dHViIFNoYWguIEl0IGhhcyBmb3VyIGxvZnR5IGFyY2hlcywgZmFjaW5nICB0aGUgZm91ciBkaXJlY3Rpb25zLiBJdHMgY2hpZWYgYmVhdXR5IGlzIHRoZSAgZm91ciBtaW5hcmV0cyB3aGljaCBhcmUgZm91ciBzdG9yaWVkIGFuZCBhcmUgIDQ4IG1ldHJlIGhpZ2guIFRoZSBkb3VibGUgc2NyZWVuIG9mIGFyY2hlcyAgaGFzIGZpIG5lIGNhcnZpbmdzLiBUaGUgcnVsZXJzIG9mIEJpamFwdXIgY29uc2lzdGVudGx5IG1haW50YWluZWQgIGEgaGlnaCBzdGFuZGFyZCBhbmQgYW4gaW1wZWNjYWJsZSB0YXN0ZSAgaW4gYXJjaGl0ZWN0dXJlLiBUaGUgbW9zdCBmYW1vdXMgQmlqYXB1ciAgYnVpbGRpbmdzIG9mIHRoZSBwZXJpb2QgYXJlIHRoZSBJYnJhaGltICBSYXV6YSBhbmQgdGhlIEdvbCBHdW1iYXouIFRoZSBmb3JtZXIgd2FzIGEgbWF1c29sZXVtIGZvciBJYnJhaGltICBBZGlsIFNoYWggYW5kIHNob3dzIHRoZSBzdHlsZSBhdCBpdHMgYmVzdC4gIFRoZSBHb2wgR3VtYmF6IHdoaWNoIHdhcyBidWlsdCBpbiAgMTY2MCBoYXMgdGhlIGxhcmdlc3Qgc2luZ2xlIGRvbWUgZXZlciAgY29uc3RydWN0ZWQuIEFsbCBpdHMgcHJvcG9ydGlvbnMgYXJlICBoYXJtb25pb3VzLCB0aGUgbGFyZ2UgZG9tZSBiZWluZyBiYWxhbmNlZCAgYnkgdGFsbCwgdGFwZXJpbmcgbWluYXJldHMgYXQgdGhlIGNvcm5lci4gSXQgaXMgIHNhaWQgdGhhdCBhIHdoaXNwZXIgYXQgb25lIHNpZGUgb2YgdGhlIGh1Z2UgIG1haW4gcm9vbSBjYW4gYmUgaGVhcmQgY2xlYXJseSBhdCB0aGUgb3RoZXIgIGVuZC4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi10b3BpYzogTXVnaGFscyBhbmQgT3RoZXIgS2luZ2RvbXM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 41,
      "question" : "Arrange the following battles fought by Mughals for establishing their empire in the correct chronological order?1. Battle of Khanwa 2. Battle of Sirhind 3. Battle of Chausa 4. First Battle of Panipat Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0MQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QgIEltcG9ydGFudCBCYXR0bGVzIGR1cmluZyBNdWdoYWwgQWR2ZW50ICBpbnRvIEluZGlhIEZpcnN0IEJhdHRsZSBvZiBQYW5pcGF0OiBUaGUgRmlyc3QgQmF0dGxlICBvZiBQYW5pcGF0IHdhcyBmb3VnaHQgYmV0d2VlbiB0aGUgaW52YWRpbmcgIGZvcmNlcyBvZiBCYWJ1ciBhbmQgdGhlIExvZGkgRW1waXJlLCB3aGljaCAgdG9vayBwbGFjZSBvbiAyMSBBcHJpbCAxNTI2IGluIE5vcnRoIEluZGlhLiAgSXQgbWFya2VkIHRoZSBiZWdpbm5pbmcgb2YgdGhlIE11Z2hhbCAgRW1waXJlLiBUaGlzIHdhcyBvbmUgb2YgdGhlIGVhcmxpZXN0IGJhdHRsZXMgIGludm9sdmluZyBndW4gcG93ZGVyIGZpIHJlYXJtcyBhbmQgZmkgZWxkICBhcnRpbGxlcnkuIEJhdHRsZSBvZiBLaGFud2E6IFRoZSBCYXR0bGUgb2YgS2hhbndhICB3YXMgZm91Z2h0IG5lYXIgdGhlIHZpbGxhZ2Ugb2YgS2hhbndhLCAgaW4gQmhhcmF0cHVyIERpc3RyaWN0IG9mIFJhamFzdGhhbiwgb24gIE1hcmNoIDE2LCAxNTI3LiBJdCB3YXMgZm91Z2h0IGJldHdlZW4gdGhlICBpbnZhZGluZyBmb3JjZXMgb2YgdGhlIGZpIHJzdCBNdWdoYWwgRW1wZXJvciAgQmFidXIgYW5kIHRoZSBSYWpwdXQgZm9yY2VzIGxlZCBieSBSYW5hICBTYW5nYSBvZiBNZXdhciwgYWZ0ZXIgdGhlIEJhdHRsZSBvZiBQYW5pcGF0LiAgVGhlIHZpY3RvcnkgaW4gdGhlIGJhdHRsZSBjb25zb2xpZGF0ZWQgdGhlICBuZXcgTXVnaGFsIGR5bmFzdHkgaW4gSW5kaWEuICAgMTggIEJhdHRsZSBvZiBDaGF1c2E6IFRoZSBCYXR0bGUgb2YgQ2hhdXNhICB3YXMgYSBub3RhYmxlIG1pbGl0YXJ5IGVuZ2FnZW1lbnQgYmV0d2VlbiAgdGhlIE11Z2hhbCBlbXBlcm9yLCBIdW1heXVuLCBhbmQgdGhlICBBZmdoYW4sIFNoZXIgU2hhaCBTdXJpLiBJdCB3YXMgZm91Z2h0ICBvbiAyNiBKdW5lIDE1MzkgYXQgQ2hhdXNhLCAxMCBtaWxlcyAgc291dGh3ZXN0IG9mIEJ1eGFyIGluIG1vZGVybi1kYXkgQmloYXIsICBJbmRpYS4gSHVtYXl1biBlc2NhcGVkIGZyb20gdGhlIGJhdHRsZWZpIGVsZCAgdG8gc2F2ZSBoaXMgbGlmZS4gU2hlciBTaGFoIHdhcyB2aWN0b3Jpb3VzICBhbmQgY3Jvd25lZCBoaW1zZWxmIHRoZSBlbXBlcm9yLiBCYXR0bGUgb2YgU2lyaGluZDogVGhlIEJhdHRsZSBvZiBTaXJoaW5kICB3YXMgZm91Z2h0IGJldHdlZW4gdGhlIE11Z2hhbCAgMTU1NS4gRW1waXJlIGFuZCB0aGUgU3VyaSBFbXBpcmUgaW4gIEFmdGVyIHRoZSBkZWF0aCBvZiBJc2xhbSBTaGFoIFN1cmksIHRoZSBTdXJpICBFbXBpcmUgd2FzIGluIGEgY2l2aWwgd2FyIHdoZXJlIHZhcmlvdXMgIGNvbnRlbmRlcnMgdG8gdGhlIHRocm9uZSBmb3VnaHQgZWFjaCBvdGhlciAgZm9yIHN1cHJlbWFjeS4gU2lrYW5kYXIgU2hhaCBTdXJpIHdhcyAgb2NjdXBpZWQgd2l0aCBoaXMgc3RydWdnbGUgYWdhaW5zdCBJYnJhaGltICBTaGFoIFN1cmkgd2hlbiBIdW1heXVuIG1vYmlsaXplZCAgYW4gYXJteSBmcm9tIEthYnVsLiBPbiBKdW5lIDIyLCAxNTU1LCAgSHVtYXl1biBhbmQgQmFpcmFtIEtoYW4gY2FycmllZCBvdXQgYSAgZGFyaW5nIHJhaWQsIGRlZmVhdGVkIFNpa2FuZGFyIFNoYWggYW5kICByZWVzdGFibGlzaGVkIHRoZWlyIGVtcGlyZSBpbiBJbmRpYS4gVG9waWM6IE1lZGlldmFsIEluZGlhICBTdWItdG9waWM6IE11Z2hhbHMgYW5kIE90aGVyIEtpbmdkb21z",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1-4-2-3 ",
        "option2" : " 1-4-3-2 ",
        "option3" : " 4-1-2-3 ",
        "option4" : " 4-1-3-2 "
      }
    },
    {
      "index" : 42,
      "question" : "A number of systems for land revenue assessments were followed during the reign of Akbar. In this context, consider the following statements:1. Under the Dahsala system, both the average produce and prices prevailing over the last 10 years of crops were calculated.2. Under the Nasaq system, the produce was divided between the peasants and state in fi xed proportion.3. Under the Batai system, the amount payable was calculated based on an assessment of what they have been paying in the past.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Mg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFVuZGVyIHRoZSAgTmFzYXEgc3lzdGVtLCB0aGUgYW1vdW50IHBheWFibGUgd2FzICBjYWxjdWxhdGVkIGJhc2VkIG9uIGFuIGFzc2Vzc21lbnQgb2Ygd2hhdCAgdGhleSBoYXZlIGJlZW4gcGF5aW5nIGluIHRoZSBwYXN0LiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFVuZGVyIHRoZSBCYXRhaSAgc3lzdGVtLCB0aGUgcHJvZHVjZSB3YXMgZGl2aWRlZCBiZXR3ZWVuICB0aGUgcGVhc2FudHMgYW5kIHN0YXRlIGluIGZpIHhlZCBwcm9wb3J0aW9uLiBMYW5kIFJldmVudWUgQWRtaW5pc3RyYXRpb24gdW5kZXIgIEFrYmFyIFRoZSBtb3N0IGNvbW1vbiBhbmQgdGhlIG9sZGVzdCB3YXMgIGNhbGxlZCBiYXRhaSBvciBnaGFsbGEtYmFraHNoaS4gSW4gIHRoaXMgc3lzdGVtLCB0aGUgcHJvZHVjZSB3YXMgZGl2aWRlZCAgYmV0d2VlbiB0aGUgcGVhc2FudHMgYW5kIHRoZSBzdGF0ZSBpbiAgZmkgeGVkIHByb3BvcnRpb24uIFRoZSBjcm9wIHdhcyBkaXZpZGVkICBhZnRlciBpdCBoYWQgYmVlbiB0aHJhc2hlZDsgb3Igd2hlbiBpdCBoYWQgIGJlZW4gY3V0IGFuZCB0aWVkIGluIHN0YWNrcywgb3Igd2hpbGUgaXQgd2FzICBzdGFuZGluZyBpbiB0aGUgZmkgZWxkLiBJbiAxNTgwLCBBa2JhciBpbnN0aXR1dGVkIGEgbmV3IHN5c3RlbSAgY2FsbGVkIHRoZSBkYWhzYWxhLiBVbmRlciB0aGlzIHN5c3RlbSwgIHRoZSBhdmVyYWdlIHByb2R1Y2Ugb2YgZGlmZmVyZW50ICBjcm9wcyBhcyB3ZWxsIGFzIHRoZSBhdmVyYWdlIHByaWNlcyAgcHJldmFpbGluZyBvdmVyIHRoZSBsYXN0IHRlbiAoZGFoKSB5ZWFycyAgd2VyZSBjYWxjdWxhdGVkLiBPbmUgdGhpcmQgb2YgdGhlIGF2ZXJhZ2UgIHByb2R1Y2Ugd2FzIHRoZSBzdGF0ZSBzaGFyZS4gVGhlIHN0YXRlICBkZW1hbmQgd2FzLCBob3dldmVyLCBzdGF0ZWQgaW4gY2FzaC4gVGhpcyAgd2FzIGRvbmUgYnkgY29udmVydGluZyB0aGUgc3RhdGUgc2hhcmUgaW50byAgbW9uZXkgb24gdGhlIGJhc2lzIG9mIGEgc2NoZWR1bGUgb2YgYXZlcmFnZSAgcHJpY2VzIG92ZXIgdGhlIHBhc3QgdGVuIHllYXJzLiBBIHRoaXJkIHN5c3RlbSB3aGljaCB3YXMgd2lkZWx5IHVzZWQgIGluIEFrYmFyJ3MgdGltZSB3YXMgbmFzYXEuIEl0IHdhcyAgYSByb3VnaCBjYWxjdWxhdGlvbiBvZiB0aGUgYW1vdW50ICBwYXlhYmxlIGJ5IHRoZSBwZWFzYW50IG9uIHRoZSBiYXNpcyBvZiAgd2hhdCBoZSBoYWQgYmVlbiBwYXlpbmcgaW4gdGhlIHBhc3QuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERldmVsb3BtZW50cyBhbmQgZWNvbm9taWMgbGlmZQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to Iltutmish, which of the following statements is/are incorrect?1. He shifted the capital from Lahore to Delhi.2. He was the fi rst to issue purely Arabic coinage of gold tanka.3. He disposed of Aram Shah and became the Sultan with the name of Shamsuddin.4. Turkan-i-chahalgani was organized by him for administering the sultanate.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Mw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IElsdHV0bWlzaCB3YXMgIHRoZSBmaSByc3QgdG8gaXNzdWUgcHVyZWx5IEFyYWJpYyBjb2luYWdlIG9mICBzaWx2ZXIgdGFua2EsIHdoaWNoIHJlbWFpbnMgdGhlIGJhc2lzIG9mIHRoZSAgbW9kZXJuIHJ1cGVlIGFuZCBjb3BwZXIgSml0YWwuIElsdHV0bWlzaCBJbHR1dG1pc2ggaXMga25vd24gdG8gYmUgdGhlIHJlYWwgY29uc29saWRhdG9yICBvZiBUdXJraXNoIHJ1bGUgaW4gSW5kaWEuICBIZSBiZWxvbmdlZCB0byB0aGUgSWxiYXJpIHRyaWJlIGFuZCBoZW5jZSBoaXMgIGR5bmFzdHkgYWxzbyBrbm93biBhcyB0aGUgSWxiYXJpIGR5bmFzdHkuIEhlIHdhcyB0aGUgc29uLWluLWxhdyBvZiBRdXRidWRkaW4gQWliYWsgIGFuZCBkaXNwb3NlZCBvZiBBcmFtIFNoYWggKHNvbiBvZiAgUXV0YnVkZGluIEFpYmFrKSBhbmQgYmVjYW1lIHRoZSBTdWx0YW4gIHdpdGggdGhlIG5hbWUgb2YgJ1NoYW1zdWRkaW4nLiAgQWZ0ZXIgYmVjb21pbmcgU3VsdGFuLCBoZSBzaGlmdGVkIGhpcyBjYXBpdGFsICBmcm9tIExhaG9yZSB0byBEZWxoaS4gSGUgZGl2aWRlZCBoaXMgZW1waXJlIGludG8gSXF0YXMgd2hpY2ggIGluY2x1ZGVkIHRoZSBhc3NpZ25tZW50IG9mIGxhbmQgaW4gbGlldSBvZiAgc2FsYXJ5LiBFdmVyeSBJcXRhZGFycyBoYWQgdG8gbWFpbnRhaW4gbGF3ICBhbmQgb3JkZXIgYW5kIGNvbGxlY3QgcmV2ZW51ZS4gICdUdXJrYW4taS1jaGFoYWxnYW5pJyB3YXMgb3JnYW5pemVkICBieSBoaW0gYXMgYSBuZXcgY2xhc3Mgb2YgcnVsaW5nIGVsaXRlICBvZiBmb3J0eSBwb3dlcmZ1bCBtaWxpdGFyeSBsZWFkZXJzLCB0aGUgIEZvcnR5LiAgVGhlc2Ugd2VyZSBUdXJraXNoIGFtaXJzIChub2JsZXMpICB3aG8gYWR2aXNlZCBhbmQgaGVscGVkIHRoZSBTdWx0YW4gaW4gIGFkbWluaXN0ZXJpbmcgdGhlIFN1bHRhbmF0ZS4gVGhlIGdyb3VwICB3YXMgZmkgbmFsbHkgZWxpbWluYXRlZCBieSBCYWxiYW4uIEhlIHdhcyB0aGUgZmkgcnN0IHRvIGlzc3VlIHB1cmVseSBBcmFiaWMgIGNvaW5hZ2Ugb2Ygc2lsdmVyIHRhbmthIHdlaWdoaW5nIDE3NSAgZ3JhbXMsIHdoaWNoIHJlbWFpbnMgdGhlIGJhc2lzIG9mIHRoZSAgbW9kZXJuIHJ1cGVlIGFuZCBjb3BwZXIgSml0YWwuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IERlbGhpIFN1bHRhbmF0ZQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 and 4 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements regarding Pala and Pratihara Dynasties:1. The directly administered territories in the Pala and Pratihara empires were divided into Brahmadeya and Rajuka.2. The Uparika collected land revenue and maintained law and order.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0NA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBkaXJlY3RseSAgYWRtaW5pc3RlcmVkIHRlcnJpdG9yaWVzIGluIHRoZSBQYWxhIGFuZCAgUHJhdGloYXJhIER5bmFzdGllcyB3ZXJlIGRpdmlkZWQgaW50byAgYmh1a3RpIGFuZCBtYW5kYWxhLiBQYWxhIGFuZCBQcmF0aWhhcmFzIFRoZSBkaXJlY3RseSBhZG1pbmlzdGVyZWQgdGVycml0b3JpZXMgIGluIHRoZSBQYWxhIGFuZCBQcmF0aWhhcmEgZW1waXJlcyAgd2VyZSBkaXZpZGVkIGludG8gYmh1a3RpIChwcm92aW5jZXMpLCAgYW5kIG1hbmRhbGEgb3IgdmlzYXlhIChkaXN0cmljdHMpLiAgIDE5ICBUaGUgZ292ZXJub3Igb2YgYSBwcm92aW5jZSB3YXMgY2FsbGVkIHVwYXJpa2EgIGFuZCB0aGUgaGVhZCBvZiBhIGRpc3RyaWN0LCB2aXNheWFwYXRpLiBUaGUgIHVwYXJpa2Egd2FzIGV4cGVjdGVkIHRvIGNvbGxlY3QgbGFuZCAgcmV2ZW51ZSBhbmQgbWFpbnRhaW4gbGF3IGFuZCBvcmRlciAgd2l0aCB0aGUgaGVscCBvZiB0aGUgYXJteS4gVGhlIHZpc2F5YXBhdGkgIHdhcyBhbHNvIGV4cGVjdGVkIHRvIGRvIHRoZSBzYW1lIHdpdGhpbiBoaXMgIGp1cmlzZGljdGlvbi4gRHVyaW5nIHRoZSBwZXJpb2QsIHRoZXJlLCB3YXMgIGFuIGluY3JlYXNlIG9mIHNtYWxsZXIgY2hpZWZ0YWlucywgY2FsbGVkICBzYW1hbnRhcyBvciBiaG9nYXBhdGlzLCB3aG8gZG9taW5hdGVkICBvdmVyIGEgbnVtYmVyIG9mIHZpbGxhZ2VzLiAgVGhlIHZpc2F5YXBhdGlzIGFuZCB0aGVzZSBzbWFsbGVyIGNoaWVmcyAgdGVuZGVkIHRvIG1lcmdlIHdpdGggZWFjaCBvdGhlciwgYW5kIGxhdGVyICBvbiB0aGUgd29yZCBzYW1hbnRhIGJlZ2FuIHRvIGJlIHVzZWQgIGluZGlzY3JpbWluYXRlbHkgZm9yIGJvdGggb2YgdGhlbS4gSW4gdGhlIFJhc2h0cmFrdXRhIGtpbmdkb20sIHRoZSAgZGlyZWN0bHkgYWRtaW5pc3RlcmVkIGFyZWFzIHdlcmUgIGRpdmlkZWQgaW50byByYXNodHJhIChwcm92aW5jZXMpLCB2aXNheWEgIGFuZCBiaHVrdGkuIFRoZSBoZWFkIG9mIHJhc2h0cmEgd2FzICBjYWxsZWQgcmFzaHRyYXBhdGksIGFuZCBoZSBwZXJmb3JtZWQgIHRoZSBzYW1lIGZ1bmN0aW9ucyBhcyB0aGUgVXBhcmlrYSBkaWQgIGluIHRoZSBQYWxhIGFuZCBQcmF0aWhhcmEgZW1waXJlcy4gIFRoZSB2aXNheWEgd2FzIGxpa2UgYSBtb2Rlcm4gZGlzdHJpY3QsIGFuZCAgdGhlIGJodWt0aSB3YXMgYSBzbWFsbGVyIHVuaXQgdG8gaXQuIEluIHRoZSAgUGFsYSBhbmQgUHJhdGloYXJhIGVtcGlyZXMsIHRoZSB1bml0IGJlbG93ICB0aGUgdmlzYXlhIHdhcyBjYWxsZWQgcGF0dGFsYS4gVGhlIHByZWNpc2Ugcm9sZSBvZiB0aGVzZSBzbWFsbGVyIHVuaXRzIGlzIG5vdCAga25vd24uIEl0IHNlZW1zIHRoYXQgdGhlaXIgbWFpbiBwdXJwb3NlICB3YXMgdGhlIHJlYWxpemF0aW9uIG9mIGxhbmQgcmV2ZW51ZSBhbmQgIHNvbWUgYXR0ZW50aW9uIHRvIGxhdyBhbmQgb3JkZXIuIEFwcGFyZW50bHkgIGFsbCB0aGUgb2ZmaSBjaWFscyB3ZXJlIHBhaWQgYnkgZ2l2aW5nIHRoZW0gIGdyYW50cyBvZiByZW50LWZyZWUgbGFuZC4gVGhpcyB0ZW5kZWQgdG8gYmx1ciB0aGUgZGlzdGluY3Rpb24gYmV0d2VlbiAgbG9jYWwgb2ZmaSBjaWFscyBhbmQgdGhlIGhlcmVkaXRhcnkgY2hpZWZzIGFuZCAgc21hbGxlciB2YXNzYWxzLiBTaW1pbGFybHksIHRoZSByYXNodHJhcGF0aSAgb3IgZ292ZXJub3Igc29tZXRpbWVzIGVuam95ZWQgdGhlIHN0YXR1cyAgYW5kIHRpdGxlIG9mIGEgdmFzc2FsIGtpbmcuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IE5vcnRoIEluZGlhbiBLaW5nZG9tcw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2    9 "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1. Bairam Khan, an offi cer in the court of Humayun was given the title of Khan-i-Khanan.2. The Afghan forces led by Hemu were defeated at Lahore by the Mughals.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0NQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBBZmdoYW4gIGZvcmNlcyBsZWQgYnkgSGVtdSB3ZXJlIGRlZmVhdGVkIGF0IHRoZSAybmQgIEJhdHRsZSBvZiBQYW5pcGF0IGluIDE1NTYgYnkgdGhlIE11Z2hhbHMuIEFrYmFyIEFzY2VuZGFuY2UgdG8gdGhlIFRocm9uZSBBa2JhciBzdWNjZWVkZWQgdG8gYSBkaWZmaSBjdWx0IHBvc2l0aW9uLiBUaGUgIEFmZ2hhbnMgd2VyZSBzdGlsbCBzdHJvbmcgYmV5b25kIEFncmEsICBhbmQgd2VyZSByZWdyb3VwaW5nIHRoZWlyIGZvcmNlcyB1bmRlciB0aGUgIGxlYWRlcnNoaXAgb2YgSGVtdSBmb3IgYSBmaSBuYWwgc2hvd2Rvd24uICBLYWJ1bCBoYWQgYmVlbiBhdHRhY2tlZCBhbmQgYmVzaWVnZWQuICBTaWthbmRhciBTdXIsIHRoZSBkZWZlYXRlZCBBZmdoYW4gcnVsZXIsICB3YXMgbG9pdGVyaW5nIGluIHRoZSBTaXdhbGlrIEhpbGxzLiAgSG93ZXZlciwgQmFpcmFtIEtoYW4sIHRoZSB0dXRvciBvZiAgQWtiYXIgYW5kIGEgbG95YWwgYW5kIGZhdm9yaXRlIG9mZmkgY2VyICBvZiBIdW1heXVuLCByb3NlIHRvIHRoZSBvY2Nhc2lvbi4gSGUgIGJlY2FtZSB0aGUgd2FraWwgb2YgdGhlIGtpbmdkb20sIHdpdGggIHRoZSB0aXRsZSBvZiBLaGFuLWktS2hhbmFuLCBhbmQgcmFsbGllZCAgdGhlIE11Z2hhbCBmb3JjZXMuICBUaGUgYmF0dGxlIGJldHdlZW4gdGhlIE11Z2hhbHMgYW5kIHRoZSAgQWZnaGFuIGZvcmNlcyBsZWQgYnkgSGVtdSwgdG9vayBwbGFjZSAgb25jZSBhZ2FpbiBhdCBQYW5pcGF0ICg1IE5vdmVtYmVyICAxNTU2KSBhbmQgdGhlIEFmZ2hhbnMgbGVkIGJ5IEhlbXUgIHdlcmUgZGVmZWF0ZWQgYnkgTXVnaGFscy4gVGh1cywgQWtiYXIgIGhhZCB2aXJ0dWFsbHkgdG8gcmVjb25xdWVyIGhpcyBlbXBpcmUuIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItdG9waWM6IE11Z2hhbCBFbXBpcmUgYW5kIE90aGVyICBLaW5nZG9tcw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 46,
      "question" : "Which of the following statement(s) are correct?1. Daulat Khan Lodi, governor of Punjab (chief Afghan noble) and Rana Sanga of Mewar invited Babur to displace Ibrahim Lodi in India.2. Ibrahim Lodi succeeded Sikandar Lodi in 1517. Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Ng==",
      "description" : "IEV4cGxhbmF0aW9uOiBJYnJhaGltIExvZGkgc3VjY2VlZGVkIFNpa2FuZGFyIExvZGkgaW4gIDE1MTcgRGF1bGF0IEtoYW4gTG9kaSwgZ292ZXJub3Igb2YgUHVuamFiIChjaGllZiAgQWZnaGFuIG5vYmxlKSBhbmQgUmFuYSBTYW5nYSBvZiBNZXdhciAgaW52aXRlZCBCYWJ1ciB0byBkaXNwbGFjZSBJYnJhaGltIExvZGkgaW4gIEluZGlhIEZpcnN0IEJhdHRsZSBvZiBQYW5pcGF0IGluIDE1MjYoMjB0aCBBcHJpbCkgIEd1bnBvd2RlciB3YXMgdXNlZCBpbiB0aGlzIGJhdHRsZSAgMTUyNzogQmF0dGxlIG9mIEtoYW53YSBiZXR3ZWVuIFJhbmEgIFNhbmdhIGFuZCBCYWJ1ciBIdW1heXVuIHN1Y2NlZWRlZCBCYWJ1ciBpbiAxNTMwICBIZSBidWlsdCBhIG5ldyBjaXR5LCBEaW5wYW5haCBhdCBEZWxoaS4gIEJ1aWx0IFB1cmFuYSBRaWxhICAxNTM5OiBCYXR0bGUgb2YgQ2hhdXNhIC0gU2hlciBzaGFoIGRlZmVhdGVkICBIdW1heXVuIDE1NDA6IEJhdHRsZSBvZiBLYW5hdWogLSBTaGVyIEtoYW4gZGVmZWF0ZWQgIEh1bWF5dW4gMTU1NTogSHVtYXl1biByZWNvdmVyZWQgRGVsaGkgIERpZWQgYWZ0ZXIgZmFsbGluZyBmcm9tIHRoZSBmaSByc3QgZmwgb29yIG9mIGhpcyAgbGlicmFyeSBIaXMgbGlmZSB3YXMgYSByb21hbnRpYyB0YWxlLiBIZSB3ZW50ICBmcm9tIHJpY2hlcyB0byByYWdzIGFuZCBhZ2FpbiBmcm9tIHJhZ3MgdG8gIHJpY2hlcy4gVG9waWM6IE1lZGlldmFsIEluZGlhIFN1Yi1Ub3BpYzogQmFidXIgYW5kIEJhdHRsZSBvZiBQYW5pcGF0",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 only ",
        "option3" : " 2 only ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to Mughal India, what is/are the difference/differences between Jagirdar and Zamindar?1. Jagirdars were holders of land assignments in lieu of judicial and police duties, whereas Zamindars were holders of revenue rights without obligation to perform any duty other than revenue collection.2. Land assignments to Jagirdars were hereditary and revenue rights of Zamindars were not hereditary.Select the correct answer using the code given below.",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Nw==",
      "description" : "IEV4cGxhbmF0aW9uOiBJbiB0aGUgTXVnaGxhIEVtcGlyZSwgSmFnaXJkYXJzIHdlcmUgIGhvbGRlcnMgb2YgbGFuZCBhc3NpZ25tZW50cyBpbiBsaWV1IG9mICBhc3NpZ25lZCBkdXRpZXMgdG93YXJkcyB0aGUgZW1waXJlIHN1Y2ggYXMgIHBvbGljZSwganVkaWNpYXJ5IGV0Yy4gd2hpbGUgWmFtaW5kYXJzLCBiZWluZyAgaG9sZGVycyBvZiByZXZlbnVlIHJpZ2h0cywgYWxzbyBoYWQgdG8gcmVuZGVyICBtaWxpdGFyeSBkdXRpZXMgYW5kIHByb3ZpZGUgc29sZGllcnMgZm9yIHRoZSAgcm95YWwgYXJteSwgd2hpbGUgYWxzbyBnaXZpbmcgZ2lmdHMgdG8gdGhlICByb3lhbCBjb3VydC4gICAyMCAgVGhlIEphZ2lyZGFyIHN5c3RlbSB3YXMgaW50cm9kdWNlZCBieSAgdGhlIERlbGhpIFN1bHRhbmF0ZSBhbmQgY29udGludWVkIGR1cmluZyAgdGhlIE11Z2hhbCBFbXBpcmUuIEluIHRoZSBNdWdoYWwgdGltZXMsICB0aGUgamFnaXJkYXIgY29sbGVjdGVkIHRheGVzIHdoaWNoIHBhaWQgaGlzICBzYWxhcnkgYW5kIHRoZSByZXN0IHRvIHRoZSBNdWdoYWwgdHJlYXN1cnkuIER1cmluZyB0aGUgTXVnaGFsIEVtcGlyZSwgemFtaW5kYXJzICBiZWxvbmdlZCB0byB0aGUgbm9iaWxpdHkgYW5kIGZvcm1lZCB0aGUgIHJ1bGluZyBjbGFzcy4gRW1wZXJvciBBa2JhciBncmFudGVkIHRoZW0gIG1hbnNhYnMgYW5kIHRoZWlyIGFuY2VzdHJhbCBkb21haW5zIHdlcmUgIHRyZWF0ZWQgYXMgamFnaXJzLiBVbmRlciBCcml0aXNoIGNvbG9uaWFsICBydWxlIGluIEluZGlhLCB0aGUgcGVybWFuZW50IHNldHRsZW1lbnQgIGNvbnNvbGlkYXRlZCB3aGF0IGNhbWUgdG8gYmUga25vd24gYXMgdGhlICB6YW1pbmRhcmkgc3lzdGVtLiBUb3BpYzogTWVkaWV2YWwgSW5kaWEgU3ViLVRvcGljOiBKYWdpcmRhcmkgYW5kIFphbWluZGFyaSAgc3lzdGVt",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following statement(s) is/are correct?1. Nath Panti movement that challenged the caste system was founded by Gorakhnath.2. Shaikh Shihabuddin was associated with Suharwardi movement that was largely confi ned to Punjab and Multan.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0OA==",
      "description" : "IEV4cGxhbmF0aW9uOiBOYXRoLCBhbHNvIGNhbGxlZCBOYXRoYSwgYXJlIGEgU2hhaXZhIHN1Yi0gIHRyYWRpdGlvbiB3aXRoaW4gSGluZHVpc20gaW4gSW5kaWEgYW5kICBOZXBhbC4gIEEgbWVkaWV2YWwgbW92ZW1lbnQsIGl0IGNvbWJpbmVkIGlkZWFzICBmcm9tIEJ1ZGRoaXNtLCBTaGFpdmlzbSBhbmQgWW9nYSAgdHJhZGl0aW9ucyBpbiBJbmRpYS4gIFRoZSBOYXRocyBoYXZlIGJlZW4gYSBjb25mZWRlcmF0aW9uIG9mICBkZXZvdGVlcyB3aG8gY29uc2lkZXIgU2hpdmEsIGFzIHRoZWlyIGZpIHJzdCAgbG9yZCBvciBndXJ1LCB3aXRoIHZhcnlpbmcgbGlzdHMgb2YgYWRkaXRpb25hbCAgZ3VydXMuICBHb3Jha2huYXRoIGlzIGNvbnNpZGVyZWQgdGhlIG9yaWdpbmF0b3Igb2YgIHRoZSBOYXRoIFBhbnRoLiBOYXRoIFBhbnRpIG1vdmVtZW50IGNoYWxsZW5nZWQgdGhlIGNhc3RlICBzeXN0ZW0gU3VoYXJ3YXJkaSBNb3ZlbWVudCB3YXMgbGFyZ2VseSBjb25maSBuZWQgIHRvIFB1bmphYiBhbmQgTXVsdGFuIFNoYWlraCBTaGloYWJ1ZGRpbiBTdWhhcndhcmRpIGFuZCAgSGFtaWQtdWQtRGluIE5hZ29yaSBsZWFkIHRoZSBtb3ZlbWVudCBJdCBkaWQgbm90IGJlbGlldmUgaW4gZmFraXJpLiAgQWNjZXB0ZWQgdGhlIHNlcnZpY2Ugb2YgdGhlIHN0YXRlLiAgVG9waWM6IEtleSBwZXJzb25hbGl0aWVzICBTdWItVG9waWM6IE5hdGggTW92ZW1lbnQgYW5kIFN1aGFyd2FyZGkgIG1vdmVtZW50",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 49,
      "question" : "Which of the following is correct about the Mughal art?1. Pietra dura is decorating the walls with fl oral designs made of semi-precious stones2. Aurangzeb patronized arts and cultures especially painting.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0OQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBQaWV0cmEgZHVyYSBpcyBkZWNvcmF0aW5nIHRoZSB3YWxscyB3aXRoICBmbCBvcmFsIGRlc2lnbnMgbWFkZSBvZiBzZW1pLXByZWNpb3VzIHN0b25lcyBSdW5uaW5nIHdhdGVyIGluIHRoZWlyIHBhbGFjZXMgYW5kIHBsZWFzdXJlICByZXNvcnRzIC0gc3BlY2lhbCBmZWF0dXJlIG9mIHRoZSBNdWdoYWxzIEF1cmFuZ3plYiB3YXMgYW4gZWNvbm9teSBtaW5kZWQsIGRpZCBub3QgIGJ1aWxkIG1hZ25pZmkgY2VudCBidWlsZGluZy4gSGUgYWxzbyBkaWQgbm90ICBsaXZlIG9zdGVudGlvdXMgbGlmZS4gSGUgbGlzdGVuZWQgdG8gaW5zdHJ1bWVudGFsIG11c2ljIG9ubHkgIGJ1dCBoaXMgUXVlZW5zIGFuZCBOb2JsZXMgZW50ZXJ0YWluZWQgYWxsICBmb3JtcyBvZiBtdXNpYyBMYXJnZXN0IG51bWJlciBvZiBib29rcyBvbiBjbGFzc2ljYWwgSW5kaWFuICBtdXNpYyBpbiBQZXJzaWFuIHdlcmUgd3JpdHRlbiBkdXJpbmcgIEF1cmFuZ3plYidzIHJlaWduLiAgUGFpbnRpbmcgd2FzIG5vdCBwYXRyb25pemVkIGJ5IEF1cmFuZ3plYi4gIFRvcGljOiBNZWRpZXZhbCBJbmRpYSBTdWItVG9waWM6IFNvY2lhbCBhbmQgQ3VsdHVyYWwgQXJ0IGZvcm1z",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 50,
      "question" : "With reference to medieval India, which one of the following is the correct sequence in descending order in terms of size?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw1MA==",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgTXVnaGFsIEVtcGlyZSB3YXMgZGl2aWRlZCBpbnRvIFN1YmFzICB3aGljaCB3ZXJlIGZ1cnRoZXIgc3ViZGl2aWRlZCBpbnRvIFNhcmthciwgIFBhcmdhbmEgYW5kIEdyYW0uICBTdWJhaCB3YXMgdGhlIHRlcm0gZm9yIGEgcHJvdmluY2UuICBTdWJhaHMgd2VyZSBkaXZpZGVkIGludG8gU2Fya2Fycywgb3IgIGRpc3RyaWN0cy4gIFNhcmthcnMgd2VyZSBmdXJ0aGVyIGRpdmlkZWQgaW50byBQYXJnYW5hcyAgb3IgTWFoYWxzLiAgSW5pdGlhbGx5LCB0aGVyZSB3ZXJlIDEyIHN1YmFocyB3aGljaCB3ZXJlICBleHRlbmRlZCB0byAxNSBkdXJpbmcgQWtiYXIncyByZWlnbi4gVG9waWM6IENocm9ub2xvZ3kgaW4gTWVkaWV2YWwgaW5kaWEgU3ViLVRvcGljOiBTYXJrYXIsIHBhcmdhbmEgYW5kIFN1YmEgwpnCmcKZwpnCmQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Sarkar-Paragana-Suba ",
        "option2" : " Suba-Sarkar-Paragana ",
        "option3" : " Paragana-Suba-Sarkar ",
        "option4" : " Paragana-Sarkar-Suba  \u0099\u0099\u0099\u0099\u0099"
      }
    }
  ],
  "subject" : "History",
  "topic" : "all",
  "year" : "2023"
}
