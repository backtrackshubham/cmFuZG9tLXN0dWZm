{
  "testId" : "gs-score-2023-prelims-2-pt-maxima-19",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/gs-score/prelims/gs-score-2023-prelims-2-pt-maxima-19.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements regarding the classifi cation of Bhakti and Sufi traditions made by the historians:1. Saguna is the concept of worshipping an abstract form of God.2. Nirguna traditions focused on worship of specifi c deities in their anthropomorphic forms.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwx",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgOiBTYWd1bmEgIHRyYWRpdGlvbnMgZm9jdXNlZCBvbiB3b3JzaGlwIG9mIHNwZWNpZmkgYyAgZGVpdGllcyBpbiB0aGVpciBhbnRocm9wb21vcnBoaWMgZm9ybXMuIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCA6IE5pcmd1bmEgaXMgdGhlICBjb25jZXB0IG9mIHdvcnNoaXBwaW5nIGFuIGFic3RyYWN0IGZvcm0gb2YgIEdvZC4gQmhha3RpIGFuZCBTdWZpIFRyYWRpdGlvbnMgSGlzdG9yaWFucyBvZiByZWxpZ2lvbiBvZnRlbiBjbGFzc2lmeSBiaGFrdGkgIHRyYWRpdGlvbnMgaW50byB0d28gYnJvYWQgY2F0ZWdvcmllczogU2FndW5hICAod2l0aCBhdHRyaWJ1dGVzKSBhbmQgTmlyZ3VuYSAod2l0aG91dCAgYXR0cmlidXRlcykuICBTYWd1bmEgaW5jbHVkZWQgdHJhZGl0aW9ucyB0aGF0IGZvY3VzZWQgb24gIHRoZSB3b3JzaGlwIG9mIHNwZWNpZmkgYyBkZWl0aWVzIHN1Y2ggYXMgU2hpdmEsICBWaXNobnUgYW5kIGhpcyBhdmF0YXJzIChpbmNhcm5hdGlvbnMpIGFuZCAgZm9ybXMgb2YgdGhlIGdvZGRlc3Mgb3IgRGV2aSwgYWxsIG9mdGVuICBjb25jZXB0dWFsaXplZCBpbiBhbnRocm9wb21vcnBoaWMgZm9ybXMuIEluIHRoZSBTYWd1bmEgYXNwZWN0LCBHb2QgYXBwZWFycyBpbiAgYSBodW1hbiBmb3JtIG1ha2luZyBpdCBlYXNpZXIgZm9yIHVzICB0byBjb21lIGNsb3Nlci4gVGhlcmUgaGF2ZSBiZWVuIGRpdmluZSAgaW5jYXJuYXRpb25zIGluIGV2ZXJ5IGFnZSB0byBzaG93IHBlb3BsZSAgdGhlIHBhdGggdG8gTmlyZ3VuYSBHb2QuIE5pcmd1bmEgYmhha3RpLCBvbiB0aGUgb3RoZXIgaGFuZCwgd2FzICB3b3JzaGlwIG9mIGFuIGFic3RyYWN0IGZvcm0gb2YgZ29kLiBHb2QgaW4gTmlyZ3VuYSBmb3JtIGlzIGluIGZhY3QgZXZlcnl3aGVyZSAgYW5kIGluIGV2ZXJ5dGhpbmcsIGJ1dCB0aGlzIGlzIG5vdCBlYXNpbHkgIGNvbXByZWhlbnNpYmxlIG9yICdhcHBlYWxpbmcnIHRvIG91ciAgaHVtYW4gaW50ZWxsZWN0LiBUaGUgdWx0aW1hdGUgZ29hbCBvZiBodW1hbnMgaXMgdG8gIGJlY29tZSBvbmUgaW4gY29uc2Npb3VzbmVzcyB3aXRoIHRoZSAgTmlyZ3VuYSBmb3JtIG9mIEdvZC4gQnV0IHRoZSBtZWRpdW0gIHRocm91Z2ggd2hpY2ggd2UgY2FuIHJlYWNoIHRoaXMgZ29hbCBpcyAgdGhlIGVtYm9kaWVkIGZvcm0gb2YgR29kLCBTYWd1bmEuIFRvcGljOiBBbmNpZW50IEhpc3RvcnkgU3VidG9waWM6IEJoYWt0aSBNb3ZlbWVudA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 2,
      "question" : "The term 'Pallichchhandam' mentioned in Chola inscriptions refers to:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwy",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QgIFR5cGVzIG9mIExhbmQgdW5kZXIgQ2hvbGEgS2luZ2RvbSBUaGUgQ2hvbGEgaW5zY3JpcHRpb25zIG1lbnRpb25lZCB2YXJpb3VzICB0eXBlcyBvZiBsYW5kIGFzIGZvbGxvd3M6IEJyYWhtYWRleWE6IFRoZXNlIHdlcmUgdGhlIGxhbmRzICBnaWZ0ZWQgdG8gQnJhaGFtYW5hcy4gVGhlcmVmb3JlIGEgbG90IG9mICBCcmFoYW1hbmEgc2V0dGxlbWVudHMgZW1lcmdlZCBpbiB0aGUgIEthdmVyaSB2YWxsZXkgYW5kIGluIHRoZSBvdGhlciBzb3V0aGVybiAgcGFydHMgb2YgSW5kaWEuIFZlbGxhbnZhZ2FpOiBMYW5kIG9mIG5vbi1CcmFoYW1hbmEgIHBlYXNhbnQgcHJvcHJpZXRvcnMuIFNoYWxhYmhvZ2E6IFRoaXMgcmVmZXJzIHRvIHRoZSBsYW5kIG9mICB0aGUgbWFpbnRlbmFuY2Ugb2YgYSBzY2hvb2wuIERldmFkYW5hLCB0aXJ1bmFtYXR0dWtrYW5pOiBMYW5kICBnaWZ0ZWQgdG8gdGVtcGxlcy4gUGFsbGljaGNoaGFuZGFtOiBMYW5kIGRvbmF0ZWQgdG8gIEphaW5hIGluc3RpdHV0aW9ucy4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogU2FuZ2FtIEFnZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Land gifted to Brahmanas ",
        "option2" : " Land gifted to temples ",
        "option3" : " Land of non-Brahamana peasant  proprietors",
        "option4" : " Land donated to Jain institutions "
      }
    },
    {
      "index" : 3,
      "question" : "Arrange the following Mahajanapadas that came into existence in 6th century BC from North to South:1. Avanti 2. Gandhara 3. Vatsa 4. Koshala Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwz",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3Q6IFRoZSBjb3JyZWN0IG9yZGVyICBvZiBNYWhhamFuYXBhZGFzIGZyb20gbm9ydGggdG8gc291dGggaXM6ICBHYW5kaGFyYS1Lb3NoYWxhLVZhdHNhLUF2YW50aS4gVGhlIGFnZSBvZiBNYWhhamFuYXBhZGFzIFRoZSBzaXh0aC1jZW50dXJ5IEIuQyB3YXMgYSBwZXJpb2Qgb2YgaW50ZW5zZSAgYW5kIG5ldyBwb2xpdGljYWwgZGV2ZWxvcG1lbnQgYmVzaWRlcyAgc29jaW8tcG9saXRpY2FsIGFuZCByZWxpZ2lvdXMgdXBoZWF2YWxzIHRoYXQgIGJyb3VnaHQgdHdvIHJlbGlnaW9ucyB0byB0aGUgZm9yZS1CdWRkaGlzbSAgYW5kIEphaW5pc20uIEluIHRoZSBsYXRlciBWZWRpYyBhZ2UsICBhZ3JpY3VsdHVyZSBhbmQgaXJvbiB0b29scyBoZWxwZWQgcGVvcGxlIHRvICBzZXR0bGUgZG93biBhdCBvbmUgcGFydGljdWxhciBwbGFjZS4gVGhlIHBlcm1hbmVudCBzZXR0bGVtZW50IGxlZCB0byB0aGUgIGZvdW5kYXRpb24gb2YgdGhlIGphbmFwYWRhcyBvciBzbWFsbCAgdGVycml0b3JpYWwgc3RhdGVzIHVuZGVyIHRoZSBjb250cm9sIG9mIGEga2luZy4gIFRoZSBtYWluIGFyZWEgb2YgcG9saXRpY2FsIGFjdGl2aXR5IGdyYWR1YWxseSAgc2hpZnRlZCBmcm9tIFdlc3Rlcm4gVVAgdG8gZWFzdGVybiBVUCAgYW5kIEJpaGFyLiBUaGlzIHJlZ2lvbiB3YXMgbm90IG9ubHkgZmVydGlsZSAgZHVlIHRvIHRoZSByYWluZmFsbCBhbmQgcml2ZXIgc3lzdGVtcyBidXQgIGFsc28gY2xvc2VyIHRvIGlyb24gcHJvZHVjdGlvbiBjZW50ZXJzLiBUaGUgIHVzZSBvZiBiZXR0ZXIgaXJvbiB0b29scyBhbmQgd2VhcG9ucyBhbG9uZyAgd2l0aCBzb3VuZCBlY29ub21pYyBncm93dGggcmVzdWx0ZWQgaW4gdGhlICB0cmFuc2Zvcm1hdGlvbiBvZiBzb21lIHRlcnJpdG9yaWFsIHN0YXRlcyAgaW50byBCaWdnZXIgYW5kIG1vcmUgcG93ZXJmdWwgc3RhdGVzLCB3aGljaCAgY2FtZSB0byBiZSBrbm93biBhcyBNYWhhamFuYXBhZGFzLiBUaGVyZSB3ZXJlIDE2IE1haGFqYW5hcGFkYXMgaW4gYW5jaWVudCAgSW5kaWEuIFRoZXkgd2VyZTogS2FzaSwgS29zYWxhLCBBbmdhLCAgTWFnYWRoYSwgVmFqamksIE1hbGxhLCBDaGVkaSwgVmF0c2EsIEt1cnUsICBQYW5jaGFsYSwgTWFjaGNoYSwgU3VyYXNlbmEsIEFzc2FrYSwgIEF2YW50aSwgR2FuZGhhcmEgYW5kIEthbWJvamEuICAgMyAgVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogTWFoYWphbmFwYWRhcw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1-3-2-4 ",
        "option2" : " 2-1-3-4 ",
        "option3" : " 1-2-3-4 ",
        "option4" : " 2-4-3-1 "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements: 1. Sufi sm was initiated as a result of protest against the growing mysticism and asceticism of the Caliphate.2. Sufi saints interpreted Quran based on their personal experiences.3. The Sufi s organized communities around a hospice called 'dargah'.4. Chisti order was named after its founder Khwaja Muinuddin Chisti.Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpbmNvcnJlY3Q6IFN1Zmkgc20gd2FzICBpbml0aWF0ZWQgYXMgYSByZXN1bHQgb2YgcHJvdGVzdCBhZ2FpbnN0IHRoZSAgZ3Jvd2luZyBtYXRlcmlhbGlzbSBvZiB0aGUgQ2FsaXBoYXRlLiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBTdWZpIHMgIG9yZ2FuaXplZCBjb21tdW5pdGllcyBhcm91bmQgYSBob3NwaWNlICBjYWxsZWQgJ2toYW5xYWgnLiBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IENoaXN0aSBvcmRlciAgd2FzIG5hbWVkIGFmdGVyIHRoZWlyIHBsYWNlIG9mIG9yaWdpbiAtIHRoZSAgdG93biBvZiBDaGlzdCBpbiBDZW50cmFsIEFmZ2hhbmlzdGFuLiBHcm93dGggb2YgU3VmaSBzbSBJbiB0aGUgZWFybHkgY2VudHVyaWVzIG9mIElzbGFtIGEgZ3JvdXAgb2YgIHJlbGlnaW91cyBtaW5kZWQgcGVvcGxlIGNhbGxlZCBTdWZpIHMgdHVybmVkIHRvICBhc2NldGljaXNtIGFuZCBteXN0aWNpc20gaW4gcHJvdGVzdCBhZ2FpbnN0ICB0aGUgZ3Jvd2luZyBtYXRlcmlhbGlzbSBvZiB0aGUgQ2FsaXBoYXRlIGFzICBhIHJlbGlnaW91cyBhbmQgcG9saXRpY2FsIGluc3RpdHV0aW9uLiBUaGV5IHdlcmUgY3JpdGljYWwgb2YgdGhlIGRvZ21hdGljIGRlZmkgbml0aW9ucyAgYW5kIHNjaG9sYXN0aWMgbWV0aG9kcyBvZiBpbnRlcnByZXRpbmcgIHRoZSBRdXInYW4gYW5kIFN1bm5hICh0cmFkaXRpb25zIG9mIHRoZSAgUHJvcGhldCkgYWRvcHRlZCBieSB0aGVvbG9naWFucy4gSW5zdGVhZCwgIHRoZXkgbGFpZCBlbXBoYXNpcyBvbiBzZWVraW5nIHNhbHZhdGlvbiAgdGhyb3VnaCBpbnRlbnNlIGRldm90aW9uIGFuZCBsb3ZlIGZvciBHb2QgYnkgIGZvbGxvd2luZyBIaXMgY29tbWFuZHMsIGFuZCBieSBmb2xsb3dpbmcgIHRoZSBleGFtcGxlIG9mIHRoZSBQcm9waGV0IE11aGFtbWFkICB3aG9tIHRoZXkgcmVnYXJkZWQgYXMgYSBwZXJmZWN0IGh1bWFuICBiZWluZy4gIFRoZSBTdWZpIHMgdGh1cyBzb3VnaHQgYW4gaW50ZXJwcmV0YXRpb24gb2YgIHRoZSBRdXJhbiBvbiB0aGUgYmFzaXMgb2YgdGhlaXIgcGVyc29uYWwgIGV4cGVyaWVuY2UuIEJ5IHRoZSBlbGV2ZW50aCBjZW50dXJ5IFN1Zmkgc20gZXZvbHZlZCAgaW50byBhIHdlbGwtZGV2ZWxvcGVkIG1vdmVtZW50IHdpdGggYSAgYm9keSBvZiBsaXRlcmF0dXJlIFF1cmFuaWMgc3R1ZGllcyBhbmQgU3VmaSAgcHJhY3RpY2VzLiBUaGUgU3VmaSBzIGJlZ2FuIHRvIG9yZ2FuaXplIGNvbW11bml0aWVzICBhcm91bmQgdGhlIGhvc3BpY2Ugb3Iga2hhbnFhaCAoUGVyc2lhbikgIGNvbnRyb2xsZWQgYnkgYSB0ZWFjaGluZyBtYXN0ZXIga25vd24gIGFzIHNoYWlraCAoaW4gQXJhYmljKSwgcGlyIG9yIG11cnNoaWQgKGluICBQZXJzaWFuKS4gSGUgZW5yb2xsZWQgZGlzY2lwbGVzIChtdXJpZHMpICBhbmQgYXBwb2ludGVkIGEgc3VjY2Vzc29yIChraGFsaWZhKS4gSGUgIGVzdGFibGlzaGVkIHJ1bGVzIGZvciBzcGlyaXR1YWwgY29uZHVjdCBhbmQgIGludGVyYWN0aW9uIGJldHdlZW4gaW5tYXRlcyBhcyB3ZWxsIGFzICBiZXR3ZWVuIGxheXBlcnNvbnMgYW5kIHRoZSBtYXN0ZXIuIFRoZSB3b3JkICdzaWxzaWxhJyBsaXRlcmFsbHkgbWVhbnMgYSBjaGFpbiwgIHNpZ25pZnlpbmcgYSBjb250aW51b3VzIGxpbmsgYmV0d2VlbiAgbWFzdGVyIGFuZCBkaXNjaXBsZSwgc3RyZXRjaGluZyBhcyBhbiAgdW5icm9rZW4gc3Bpcml0dWFsIGdlbmVhbG9neSB0byB0aGUgUHJvcGhldCAgTXVoYW1tYWQuIFdoZW4gdGhlIFN1ZmkgdGVhY2hlciBTaGFpa2ggZGllZCwgaGlzICB0b21iLXNocmluZSAoZGFyZ2FoLCBhIFBlcnNpYW4gdGVybSAgbWVhbmluZyBjb3VydCkgYmVjYW1lIHRoZSBjZW50cmUgb2YgIGRldm90aW9uIGZvciBoaXMgZm9sbG93ZXJzLiBUaGlzIGVuY291cmFnZWQgIHRoZSBwcmFjdGljZSBvZiBwaWxncmltYWdlIG9yIHppeWFyYXQgdG8gaGlzICBncmF2ZSwgcGFydGljdWxhcmx5IG9uIGhpcyBkZWF0aCBhbm5pdmVyc2FyeSAgb3IgdXJzIChvciBtYXJyaWFnZSwgc2lnbmlmeWluZyB0aGUgdW5pb24gb2YgIGhpcyBzb3VsIHdpdGggR29kKS4gTW9zdCBTdWZpIGxpbmVhZ2VzIHdlcmUgbmFtZWQgYWZ0ZXIgYSAgZm91bmRpbmcgZmkgZ3VyZS4gRm9yIGluc3RhbmNlLCBRYWRyaSBvcmRlciAgd2FzIG5hbWVkIGFmdGVyIFNoYWlraCBBYmR1bCBRYWRpciBKaWxhbmkuICBIb3dldmVyIHRoZSBDaGlzdGkgb3JkZXIgd2FzIG5hbWVkIGFmdGVyICB0aGVpciBwbGFjZSBvZiBvcmlnaW4gLSB0aGUgdG93biBvZiBDaGlzdCBpbiAgQ2VudHJhbCBBZmdoYW5pc3Rhbi4gVG9waWM6IE1lZGlldmFsIEhpc3RvcnkgU3VidG9waWM6IEJoYWt0aSBNb3ZlbWVudA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 3 and 4 only "
      }
    },
    {
      "index" : 5,
      "question" : "It a descriptive linguistic treatise which covered the whole of Sanskrit language's grammar (including for the Vedic part) and also word formation rules in 'sutra' format.Which among the following literary work has been discussed in above passage?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw1",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGMpIGlzIGNvcnJlY3QgIEFzdGFkaHlheWkgUGFuaW5pIHdyb3RlIGEgZGVzY3JpcHRpdmUgbGluZ3Vpc3RpYyB0cmVhdGlzZSAgY2FsbGVkICdBc3RhZGh5YXlpJy4gSXQgY292ZXJlZCB0aGUgd2hvbGUgb2YgU2Fuc2tyaXQgbGFuZ3VhZ2UncyAgZ3JhbW1hciAoaW5jbHVkaW5nIGZvciB0aGUgVmVkaWMgcGFydCkgIGFuZCBhbHNvIHdvcmQgZm9ybWF0aW9uIHJ1bGVzIGluICdzdXRyYScgIGZvcm1hdC4gSXQgc2V0cyB0aGUgbGluZ3Vpc3RpYyBzdGFuZGFyZHMgZm9yIENsYXNzaWNhbCAgU2Fuc2tyaXQuIEl0IHN1bXMgdXAgaW4gNCwwMDAgc3V0cmFzIHRoZSBzY2llbmNlIG9mICBwaG9uZXRpY3MgYW5kIGdyYW1tYXIgdGhhdCBoYWQgZXZvbHZlZCBpbiAgdGhlIFZlZGljIHJlbGlnaW9uLiBQYW5pbmkgZGl2aWRlZCBoaXMgd29yayBpbnRvIGVpZ2h0IGNoYXB0ZXJzLCAgZWFjaCBvZiB3aGljaCBpcyBmdXJ0aGVyIGRpdmlkZWQgaW50byBxdWFydGVyICBjaGFwdGVycy4gQmV5b25kIGRlZmkgbmluZyB0aGUgbW9ycGhvbG9neSBhbmQgIHN5bnRheCBvZiBTYW5za3JpdCBsYW5ndWFnZSwgQXNodGFkaHlheWkgIGRpc3Rpbmd1aXNoZXMgYmV0d2VlbiB1c2FnZSBpbiB0aGUgc3Bva2VuICBsYW5ndWFnZSBhbmQgdXNhZ2UgdGhhdCBpcyBwcm9wZXIgdG8gdGhlICBsYW5ndWFnZSBvZiB0aGUgc2FjcmVkIHRleHQuIFRvcGljOiBBbmNpZW50IEhpc3RvcnkgU3VidG9waWM6IFZlZGljIEFnZQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Nyaya Sutra ",
        "option2" : " Amarakosha ",
        "option3" : " Astadhyayi ",
        "option4" : " Rajatarangini "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements: 1. Kalinga rose to power during the reign of King Kharvela of the Chedi dynasty. 2. The Sunga dynasty was followed by the Kanva dynasty.3. The Junagadh inscription of Pushyamitra Sunga talks about the administration of Mauryan Empire.Which of the statement(s) given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw2",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBKdW5hZ2FyaCAgUm9jayBpbnNjcmlwdGlvbiBvZiBSdWRyYWRhbWFuIHRhbGtzIGFib3V0ICBDaGFuZHJhIEd1cHRhIE1hdXJ5YSdzIGFkbWluaXN0YXJ0aW9uLiBBbmNpZW50IEluZGlhbiBEeW5hc3RpZXMgQWZ0ZXIgdGhlIGRlY2xpbmUgb2YgTWF1cnlhcywgS2FsaW5nYSByb3NlICB0byBwb3dlciBhcm91bmQgMXN0IGNlbnR1cnkgQkMgaW4gdGhlIGFyZWEgIG9mIG1vZGVybiBPZGlzaGEuIFdlIGJlc3Qga25vd24gYWJvdXQgIHRoZSBUaGlyZCBydWxlciBvZiB0aGlzIGR5bmFzdHksIG5hbWVkJyAgS2hhcmF2ZWxhJy4gS2hhcmF2ZWxhIGlzIGtub3duIHRvIGhhdmUgIHJldml2ZWQgdGhlIHBhc3QgZ2xvcnkgb2YgS2FsaW5nYS4gS2luZyAgS2hhcmF2ZWxhIGJlbGdlZCB0byB0aGUgZXBpYyB0aW1lIENoZWRpICBkeW5hc3R5LiAgIDQgIFN1bmdhIER5bmFzdHkgc3Bhbm5lZCBmcm9tIDE4NSBCQyB0byA3MyAgQkMgYW5kIEthbnZhIER5bmFzdHkgc3Bhbm5lZCBmcm9tIDczICBCQyB0byAyOCBCQy4gVGhlIGNhcGl0YWwgb2YgU3VuZ2EgRHluYXN0eSAgd2FzIFZpZGlzaGEgKE1QKSBhbmQgdGhlIGNhcGl0YWwgb2YgS2FudmEgIER5bmFzdHkgd2FzIFBhdGFsaXB1dHJhLiBUaGUgSnVuYWdhcmggUm9jayBpbnNjcmlwdGlvbiBvZiAgUnVkcmFkYW1hbiBpcyBjb25zaWRlcmVkIGFzIGFuIGVhcmx5ICBleGFtcGxlIG9mIGNoYXN0ZSBTYW5za3JpdCwgd3JpdHRlbiBpbiAgbWlkIHNlY29uZCBjZW50dXJ5IEFELiBJdCBtZW50aW9ucyB0aGF0ICBvbmUgb2YgQ2hhbmRyYWd1cHRhIE1hdXJ5YSdzIGdvdmVybm9ycywgIFB1c2h5YWd1cHRhLCB3YXMgcmVzcG9uc2libGUgZm9yIGJ1aWxkaW5nICBhIGRhbSBvbiBTdWRhcnNoYW5hIExha2UgbmVhciBHaXJuYXIgIGluIEthdGhpYXdhci4gRnJvbSBhbm90aGVyIGluc2NyaXB0aW9uIG9mICBTa2FuZGd1cHRhIHdlIGNhbWUgdG8ga25vdyB0aGF0IHRoaXMgdmVyeSAgZGFtIHdhcyByZXBhaXJlZCBkdXJpbmcgaGlzIHJlaWduLCBhbG1vc3QgIDgwMCB5ZWFycyBhZnRlciBpdCB3YXMgYnVpbHQuIFJ1ZHJhZGFtYW4gSSAoci4gMTMwLTE1MCkgd2FzIGEgU2FrYSBydWxlciAgZnJvbSB0aGUgV2VzdGVybiBLc2hhdHJhcGFzIGR5bmFzdHkuIEhlICB3YXMgdGhlIGdyYW5kc29uIG9mIHRoZSBraW5nIENoYXN0YW5hLiAgUnVkcmFkYW1hbiBJIHdhcyBpbnN0cnVtZW50YWwgaW4gdGhlICBkZWNsaW5lIG9mIHRoZSBTYXRhdmFoYW5hIEVtcGlyZS4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogUG9zdC1NYXVyeWFuIFBlcmlvZA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 7,
      "question" : "With reference to Virashaiva tradition, consider the following statements:1. It emerged in 12th century in Kerala, led by a saint named Basavanna.2. The Virashaivas encouraged the remarriage of widows.3. Their ideas were incorporated within Sanskrit tradition which led into culmination of Bhagvata Purana.4. The Lingayats buried their dead as they believed in the theory of rebirth.Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw3",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFZpcmFzaGFpdmEgIGVtZXJnZWQgaW4gMTJ0aCBjZW50dXJ5IGluIEthcm5hdGFrYSwgbGVkICBieSBhIHNhaW50IG5hbWVkIEJhc2F2YW5uYS4gU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgaWRlYXMgb2YgIFRhbWlsIGJoYWt0YXMgKGVzcGVjaWFsbHkgVmFpc2huYXZhcykgIHdlcmUgaW5jb3Jwb3JhdGVkIHdpdGhpbiBTYW5za3JpdCB0cmFkaXRpb24gIHdoaWNoIGxlZCBpbnRvIGN1bG1pbmF0aW9uIG9mIEJoYWd2YXRhICBQdXJhbmEuIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogVGhleSAgY2VyZW1vbmlhbGx5IGJ1cmllZCB0aGVpciBkZWFkIGJ1dCB0aGV5ICBxdWVzdGlvbmVkIHRoZSB0aGVvcnkgb2YgcmViaXJ0aC4gVmlyYXNoYWl2YSBUcmFkaXRpb24gVGhlIDEydGggY2VudHVyeSB3aXRuZXNzZWQgdGhlIGVtZXJnZW5jZSAgb2YgYSBuZXcgbW92ZW1lbnQgaW4gS2FybmF0YWthLCBsZWQgYnkgYSAgQnJhaG1hbmEgbmFtZWQgQmFzYXZhbm5hICgxMTA2LTY4KSB3aG8gIHdhcyBhIG1pbmlzdGVyIGluIHRoZSBjb3VydCBvZiBhIEthbGFjaHVyaSAgcnVsZXIuICBIaXMgZm9sbG93ZXJzIHdlcmUga25vd24gYXMgVmlyYXNoYWl2YXMgIChoZXJvZXMgb2YgU2hpdmEpIG9yIExpbmdheWF0cyAod2VhcmVycyAgb2YgdGhlIGxpbmdhKS4gVGhleSB3b3JzaGlwIFNoaXZhIGluIGhpcyAgbWFuaWZlc3RhdGlvbiBhcyBhIGxpbmdhLCBhbmQgbWVuIHVzdWFsbHkgIHdlYXIgYSBzbWFsbCBsaW5nYSBpbiBhIHNpbHZlciBjYXNlIG9uIGEgbG9vcCAgc3RydW5nIG92ZXIgdGhlIGxlZnQgc2hvdWxkZXIuIExpbmdheWF0cyBiZWxpZXZlIHRoYXQgb24gZGVhdGggdGhlIGRldm90ZWUgIHdpbGwgYmUgdW5pdGVkIHdpdGggU2hpdmEgYW5kIHdpbGwgbm90ICByZXR1cm4gdG8gdGhpcyB3b3JsZC4gVGhlcmVmb3JlIHRoZXkgZG8gbm90ICBwcmFjdGljZSBmdW5lcmFyeSByaXRlcyBzdWNoIGFzIGNyZW1hdGlvbiwgIHByZXNjcmliZWQgaW4gdGhlIERoYXJtYXNoYXN0cmFzLiBJbnN0ZWFkLCAgdGhleSBjZXJlbW9uaWFsbHkgYnVyeSB0aGVpciBkZWFkLiBUaGUgTGluZ2F5YXRzIGNoYWxsZW5nZWQgdGhlIGlkZWEgb2YgY2FzdGUgIGFuZCB0aGUgJ3BvbGx1dGlvbicgYXR0cmlidXRlZCB0byBjZXJ0YWluICBncm91cHMgYnkgQnJhaG1hbmFzIHRodXMgd2lubmluZyAgdGhlbSBmb2xsb3dlcnMgYW1vbmdzdCB0aG9zZSB3aG8gd2VyZSAgbWFyZ2luYWxpemVkIHdpdGhpbiB0aGUgQnJhaG1hbmljYWwgc29jaWFsICBvcmRlci4gVGhleSBhbHNvIHF1ZXN0aW9uZWQgdGhlIHRoZW9yeSBvZiByZWJpcnRoLiAgVGhlIExpbmdheWF0cyBhbHNvIGVuY291cmFnZWQgIGNlcnRhaW4gcHJhY3RpY2VzIGRpc2FwcHJvdmVkIGluIHRoZSAgRGhhcm1hc2hhc3RyYXMsIHN1Y2ggYXMgcG9zdC1wdWJlcnR5ICBtYXJyaWFnZSBhbmQgdGhlIHJlbWFycmlhZ2Ugb2Ygd2lkb3dzLiBNb3N0IG9mIHRoZSB1bmRlcnN0YW5kaW5nIG9mIHRoZSBWaXJhc2hhaXZhICB0cmFkaXRpb24gaXMgZGVyaXZlZCBmcm9tIHZhY2hhbmFzIChsaXRlcmFsbHksICBzYXlpbmdzKSBjb21wb3NlZCBpbiBLYW5uYWRhIGJ5IHdvbWVuICBhbmQgbWVuIHdobyBqb2luZWQgdGhlIG1vdmVtZW50LiBUaGlzIHBlcmlvZCBhbHNvIHdpdG5lc3NlZCBhbm90aGVyICBtYWpvciBkZXZlbG9wbWVudC4gTWFueSBpZGVhcyBvZiBUYW1pbCAgYmhha3RhcyAoZXNwZWNpYWxseSB0aGUgVmFpc2huYXZhcykgd2VyZSAgaW5jb3Jwb3JhdGVkIHdpdGhpbiB0aGUgU2Fuc2tyaXQgdHJhZGl0aW9uLCAgY3VsbWluYXRpbmcgaW4gdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBvbmUtIG9mIHRoZSBiZXN0LWtub3duIFB1cmFuYXMsIHRoZSBCaGFndmF0YSAgUHVyYW5hLiBUb3BpYzogTWVkaWV2YWwgSGlzdG9yeSBTdWJ0b3BpYzogQmhha3RpIE1vdmVtZW50",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 4 only    3 ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 8,
      "question" : "Sometimes the Neolithic period is termed as the 'Neolithic Revolution' by many scholars on the basis of important changes in human's socio-economic life. What are the changes that were occurred in this period?1. The discovery of fi re was one of greatest innovations of this phase which provided a way to create more advanced hunting tools, and a method for cooking food.2. The advent of agriculture of Neolithic phase marked a signifi cant change in human civilization.3. The Neolithic people manufactured pottery as a means of storage for grains.4. The Neolithic cultures created the conditions which helped in the growth of towns in the later period.Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw4",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgOiBUaGUgZmkgcmUgd2FzICBkaXNjb3ZlcmVkL2NvbnRyb2xsZWQgYnkgdGhlIEVhcmx5IFN0b25lICBBZ2UgKG9yIExvd2VyIFBhbGVvbGl0aGljKSBwZW9wbGUuIE5lb2xpdGhpYyBSZXZvbHV0aW9uIFNvbWUgdGltZXMgdGhpcyBwZXJpb2QgaXMgdGVybWVkIGFzICB0aGUgJ05lb2xpdGhpYyBSZXZvbHV0aW9uJyBvbiB0aGUgYmFzaXMgIG9mIGltcG9ydGFudCBjaGFuZ2VzIGluIGh1bWFuJ3Mgc29jaW8tIGVjb25vbWljIGxpZmUuICBUaGUgdXNlIG9mIHRoZSBzaGFycCBhbmQgcG9saXNoZWQgTmVvbGl0aGljICB0b29scyBtYWRlIGl0IGVhc2llciB0byBjdWx0aXZhdGUgdGhlIHNvaWwuICBJdCB3YXMgYWNjb21wYW5pZWQgYnkgdGhlIHByYWN0aWNlIG9mICBkb21lc3RpY2F0aW9uIG9mIGFuaW1hbHMuIFRoZXNlIGNoYW5nZXMgIGluIHR1cm4gcmVzdWx0ZWQgaW4gdGhlIGVtZXJnZW5jZSBvZiBzZXR0bGVkICBhZ3JpY3VsdHVyYWwgY29tbXVuaXRpZXMuIFRoZSBOZW9saXRoaWMgIHBlb3BsZSBhbHNvIHByb2R1Y2VkIHBvdHRlcnkgZm9yIHRoZSBwdXJwb3NlICBvZiBzdG9yaW5nIGdyYWlucy4gVGh1cywgdGhlIE5lb2xpdGhpYyAgY3VsdHVyZXMgY3JlYXRlZCB0aGUgY29uZGl0aW9ucyB3aGljaCBoZWxwZWQgIGluIHRoZSBncm93dGggb2YgdG93bnMgaW4gdGhlIGxhdGVyIHBlcmlvZC4gIEFzIHRoZSByZWRldmVsb3BtZW50IGluIHRoZSBOZW9saXRoaWMgIHBoYXNlIGdyZWF0bHkgYWZmZWN0ZWQgdGhlIGh1bWFuIGxpZmUsIHNvbWUgIHNjaG9sYXJzIGhhdmUgdXNlZCB0aGUgdGVybSAndGhlIE5lb2xpdGhpYyAgUmV2b2x1dGlvbicgdG8gc2lnbmlmeSB0aG9zZSBjaGFuZ2VzLiAgQnV0IG1vc3Qgb2YgdGhlIHNjaG9sYXJzIGJlbGlldmUgdGhhdCB0aGVzZSAgY2hhbmdlcyB0aG91Z2ggc2lnbmlmaSBjYW50LCBzaG91bGQgYmUgIHZpZXdlZCBpbiB0aGUgY29udGV4dCBvZiBlYXJsaWVyIHByb2dyZXNzICBkdXJpbmcgUGFsZW9saXRoaWMgYW5kIE1lc29saXRoaWMgYWdlcywgYW5kICB0aHVzLCBzaG91bGQgYmUgY29uc2lkZXJlZCBhcyAnZXZvbHV0aW9uJyAgcmF0aGVyIHRoYW4gJ3Jldm9sdXRpb24nLiBUaGUgZmkgcmUgd2FzIGRpc2NvdmVyZWQvY29udHJvbGxlZCAgYnkgdGhlIEVhcmx5IFN0b25lIEFnZSAob3IgTG93ZXIgIFBhbGVvbGl0aGljKSBwZW9wbGUuICAgNSAgVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogUHJlLUhpc3RvcmljIFBlcmlvZA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 3 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 9,
      "question" : "Regarding the trading network during Harappa Civilization, which of the following pairs are correctly matched?1. Badakshan mines: A source of lapis-lazuli in Afghanistan2. Dilmun coast: A trading portal in Iran 3. Susa: A Mesopotamian city 4. Magan: A trading portal in Gujarat Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw5",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlyIDIgYW5kIDQgYXJlIGluY29ycmVjdGx5IG1hdGNoZWQ6ICBTY2hvbGFycyBoYXZlIGlkZW50aWZpIGVkIE1hZ2FuIHdpdGggdGhlICBNYWtyYW4gY29hc3QgYW5kIERpbG11biB3aXRoIEJhaHJhaW4uIFRyYWRlIG9mIEhhcmFwcGFuIHBlb3BsZSBUcmFkaW5nIG5ldHdvcmssIGJvdGggaW50ZXJuYWwgKHdpdGhpbiAgdGhlIGNvdW50cnkpIGFuZCBleHRlcm5hbCAoZm9yZWlnbiksIHdhcyBhICBzaWduaWZpIGNhbnQgZmVhdHVyZSBvZiB0aGUgdXJiYW4gZWNvbm9teSBvZiAgdGhlIEhhcmFwcGFucy4gIEFtb25nIHRoZSBwcmVjaW91cyBzdG9uZXMgdXNlZCBmb3IgbWFraW5nICBiZWFkcywgdGhlIHNvdXJjZSBvZiBsYXBpcy1sYXp1bGkgd2FzIGxvY2F0ZWQgIGluIEJhZGFrc2hhbiBtaW5lcyBpbiBub3J0aGVhc3QgIEFmZ2hhbmlzdGFuLiAgVGhlIEhhcmFwcGFucyB3ZXJlIGVuZ2FnZWQgaW4gZXh0ZXJuYWwgIHRyYWRlIHdpdGggTWVzb3BvdGFtaWEuIEl0IHdhcyBsYXJnZWx5ICB0aHJvdWdoIE9tYW4gYW5kIEJlaHJhaW4gaW4gdGhlIFBlcnNpYW4gIEd1bGYuIEl0IGlzIGNvbmZpIHJtZWQgYnkgdGhlIHByZXNlbmNlIG9mICBIYXJhcHBhbiBhcnRlZmFjdHMgc3VjaCBhcyBiZWFkcywgc2VhbHMsICBkaWNlIGV0Yy4gaW4gdGhlc2UgcmVnaW9ucy4gIE1lc29wb3RhbWlhbiBjaXRpZXMgbGlrZSBTdXNhLCBVciAsIGV0Yy4gIGhhdmUgeWllbGRlZCBhYm91dCB0d28gZG96ZW4gb2YgSGFyYXBwYW4gIHNlYWxzIGFuZCBvdGhlciBhcnRlZmFjdHMgc3VjaCBhcyBwb3R0ZXJpZXMsICBldGNoZWQgY2FybmVsaWFuIGJlYWRzIGFuZCBkaWNlcy4gVGhlIGluc2NyaXB0aW9uYWwgZXZpZGVuY2UgZnJvbSBNZXNvcG90YW1pYSAgYWxzbyBwcm92aWRlcyB1cyB3aXRoIHZhbHVhYmxlIGluZm9ybWF0aW9uICBvbiBIYXJhcHBhbiBjb250YWN0IHdpdGggTWVzb3BvdGFtaWEuICBUaGVzZSBpbnNjcmlwdGlvbnMgcmVmZXIgdG8gdHJhZGUgd2l0aCAgRGlsbXVuLCBNYWdhbiBhbmQgTWVsdWhoYS4gU2Nob2xhcnMgIGhhdmUgaWRlbnRpZmkgZWQgTWVsdWhoYSB3aXRoIEhhcmFwcGFuICByZWdpb24sIE1hZ2FuIHdpdGggdGhlIE1ha3JhbiBjb2FzdCwgIGFuZCBEaWxtdW4gd2l0aCBCYWhyYWluLiBUb3BpYzogQW5jaWVudCBIaXN0b3J5IFN1YnRvcGljOiBJbmR1cyBWYWxsZXkgQ2l2aWxpemF0aW9u",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2, 3 and 4 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 10,
      "question" : "Arrange the following events into the chronological order:1. Permanent split of the Buddhist order into Sthaviravadins and Mahasanghikas2. Compilation of Vinaya Pitaka 3. The Buddhist Council which was presided by Vasumitra4. Compilation of Abhidhamma Pitaka Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMA==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIEJ1ZGRoaXN0IENvdW5jaWxzIEFjY29yZGluZyB0byB0cmFkaXRpb24gc2hvcnRseSBhZnRlciB0aGUgZGVhdGggIG9mIEJ1ZGRoYSB0aGUgZmkgcnN0IEJ1ZGRoaXN0IENvdW5jaWwgd2FzICBoZWxkIGluIDQ4MyBCLkMuIGluIHRoZSBTYXB0YXBhcm5pIGNhdmUgbmVhciAgUmFqYWdyaWhhLiBNYWhha2Fzc2FwYSBwcmVzaWRlZCBvdmVyIHRoZSAgYXNzZW1ibHkuIEFsbCB0aGUgdGVhY2hpbmdzIG9mIEJ1ZGRoYSB3ZXJlICBkaXZpZGVkIGludG8gdHdvIFBpdGFrYXMsIG5hbWVseSBWaW5heWEgIFBpdGFrYSwgYW5kIFN1dHRhIFBpdGFrYS4gVGhlIHRleHQgb2YgIFZpbmF5YSBQaXRha2Egd2FzIGVzdGFibGlzaGVkIHVuZGVyICB0aGUgbGVhZGVyc2hpcCBvZiBVcGFsaSBhbmQgdGhhdCBvZiBTdXR0YSAgUGl0YWthIHdhcyBzZXR0bGVkIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mICBBbmFuZGEuICBUaGUgc2Vjb25kIENvdW5jaWwgd2FzIGhlbGQgYXQgVmFpc2FsaSAgaW4gMzgzIEIuQy4gVGhlIG1vbmtzIG9mIFZhaXNhbGkgYW5kICBQYXRhbGlwdXRyYSBoYWQgYWNjZXB0ZWQgY2VydGFpbiBydWxlcyAgd2hpY2ggd2VyZSBkZWNsYXJlZCBhcyBjb250cmFyeSB0byB0aGUgIHRlYWNoaW5nIG9mIEJ1ZGRoYSBieSB0aGUgbW9ua3Mgb2YgIEthdXNhbWJpIGFuZCBBdmFudGkuIFRoZSBDb3VuY2lsIGZhaWxlZCAgdG8gYnJpbmcgYWJvdXQgYSBjb21wcm9taXNlIGJldHdlZW4gIHRoZSB0d28gb3Bwb3NpbmcgZ3JvdXBzOyBIZW5jZSB0aGUgIGNvdW5jaWwgZW5kZWQgaW4gYSBwZXJtYW5lbnQgc3BsaXQgb2YgIHRoZSBCdWRkaGlzdCBvcmRlciBpbnRvIFN0aGF2aXJhdmFkaW5zICBhbmQgTWFoYXNhbmdpa2FzLiBUaGUgZm9ybWVyIHVwaGVsZCAgdGhlIG9ydGhvZG94IFZpbmF5YSBQaXRha2Egd2hpbGUgdGhlIGxhdHRlciAgZmF2b3VyZWQgdGhlIG5ldyBydWxlcyBhbmQgdGhlaXIgZnVydGhlciAgcmVsYXhhdGlvbi4gVGhlIHRoaXJkIENvdW5jaWwgd2FzIGhlbGQgYXQgIFBhdGFsaXB1dHJhIGR1cmluZyB0aGUgcmVpZ24gb2YgIEFzb2thIHVuZGVyIHRoZSBjaGFpcm1hbnNoaXAgb2YgIE1vZ2dhbGlwdXR0YSBUaXNzYS4gSW4gdGhpcyBDb3VuY2lsIHRoZSAgcGhpbG9zb3BoaWNhbCBpbnRlcnByZXRhdGlvbnMgb2YgdGhlICBkb2N0cmluZXMgb2YgQnVkZGhhIHdlcmUgY29sbGVjdGVkIGludG8gIHRoZSB0aGlyZCBQaXRha2EgY2FsbGVkIEFiaGlkaGFtbWEgIFBpdGFrYS4gVGhlIGZvdXJ0aCBDb3VuY2lsIHdhcyBoZWxkIGR1cmluZyB0aGUgIHJlaWduIG9mIEthbmlzaGthIGluIEthc2htaXIuIFRoaXMgY291bmNpbCAgd2FzIGEgZ2F0aGVyaW5nIG9mIEhpbmF5YW5pc3RzIG9mIE5vcnRoICBJbmRpYS4gSXQgY29tcGlsZWQgdGhyZWUgY29tbWVudGFyaWVzICAoVmliaGFzaGFzKSBvZiB0aGUgdGhyZWUgUGl0YWthcy4gSXQgZGVjaWRlZCAgY2VydGFpbiBjb250cm92ZXJzaWFsIHF1ZXN0aW9ucyBvZiBkaWZmZXJlbmNlcyAgdGhhdCBhcm9zZSBiZXR3ZWVuIHRoZSBTYXJ2YXN0aXZhZGEgIHRlYWNoZXJzIG9mIEthc2htaXIgYW5kIEdhbmRoYXJhLiBUaGUgIENvdW5jaWwgd2FzIHByZXNpZGVkIGJ5IFZhc3VtaXRyYSAgYW5kIGRlcHV0ZWQgYnkgQXN2YWdob3NoYS4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogQnVkZGhpc20gYW5kIEphaW5pc20=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1-2-4-3 ",
        "option2" : " 2-1-4-3 ",
        "option3" : " 2-4-3-1 ",
        "option4" : " 4-2-3-1 "
      }
    },
    {
      "index" : 11,
      "question" : "As per the Jainism, which of the following is not an 'anuvrata'?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIFR3ZWx2ZSBWb3dzIHVuZGVyIEphaW5pc20gRm9yIHRob3NlIHdobyB3YW50IHRvIHJlbWFpbiBpbiBmYW1pbHkgIGxpZmUgYW5kIGZvciB3aG9tIGNvbXBsZXRlIGF2b2lkYW5jZSBvZiAgZmkgdmUgcHJpbmNpcGxlIHNpbnMgYXJlIGRpZmZpIGN1bHQsIEphaW4gZXRoaWNzICBzcGVjaWZpIGVzIHRoZSBmb2xsb3dpbmcgdHdlbHZlIHZvd3MgdG8gYmUgIGNhcnJpZWQgb3V0IGJ5IHRoZSBob3VzZWhvbGRlci4gT2YgdGhlc2UgdHdlbHZlIHZvd3MsIHRoZSBmaSByc3QgZmkgdmUgYXJlIG1haW4gIHZvd3Mgb2YgbGltaXRlZCBuYXR1cmUgKEFudXZyYXRhcykuIFRoZXkgIGFyZSBzb21ld2hhdCBlYXNpZXIgaW4gY29tcGFyaXNvbiB3aXRoICBncmVhdCB2b3dzIChNYWhhLXZyYXRhcykuIFRoZSBncmVhdCB2b3dzICBhcmUgZm9yIHRoZSBhc2NldGljcy4gVGhlIG5leHQgdGhyZWUgdm93cyBhcmUga25vd24gYXMgbWVyaXQgIHZvd3MgKEd1bmEtdnJhdGFzKSwgc28gY2FsbGVkIGJlY2F1c2UgdGhleSAgZW5oYW5jZSBhbmQgcHVyaWZ5IHRoZSBlZmZlY3Qgb2YgdGhlIGZpIHZlICBtYWluIHZvd3MgYW5kIHJhaXNlIHRoZWlyIHZhbHVlIG1hbmlmb2xkLiAgSXQgYWxzbyBnb3Zlcm5zIHRoZSBleHRlcm5hbCBjb25kdWN0IG9mIGFuICBpbmRpdmlkdWFsLiBUaGUgbGFzdCBmb3VyIGFyZSBjYWxsZWQgZGlzY2lwbGluYXJ5IHZvd3MgIChTaGlraHNhLXZyYXRhcykuIFRoZXkgYXJlIGludGVuZGVkIHRvICBlbmNvdXJhZ2UgdGhlIHBlcnNvbiBpbiB0aGUgcGVyZm9ybWFuY2UgIG9mIHRoZWlyIHJlbGlnaW91cyBkdXRpZXMuIFRoZXkgcmVmbCBlY3QgdGhlICAgIDYgIHB1cml0eSBvZiBvbmUncyBoZWFydC4gVGhleSBnb3Zlcm4gb25lJ3MgIGludGVybmFsIGxpZmUgYW5kIGFyZSBleHByZXNzZWQgaW4gYSBsaWZlIHRoYXQgIGlzIG1hcmtlZCBieSBjaGFyaXR5LiBUaGV5IGFyZSBwcmVwYXJhdG9yeSAgdG8gdGhlIGRpc2NpcGxpbmUgb2YgYW4gYXNjZXRpYydzIGxpZmUuIFRocmVlIG1lcml0IHZvd3MgKEd1bmF2cmF0cykgYW5kIGZvdXIgIGRpc2NpcGxpbmFyeSB2b3dzIChTaGlraHNhLXZyYXRhcykgdG9nZXRoZXIgIGFyZSBrbm93biBhcyBTZXZlbiB2b3dzIG9mIHZpcnR1b3VzIGNvbmR1Y3QgIChTaGlsYXMpLiBBIHBlcnNvbiBtYXkgYWRvcHQgdGhlc2Ugdm93cywgYWNjb3JkaW5nICB0byBoaXMgaW5kaXZpZHVhbCBjYXBhY2l0eSBhbmQgY2lyY3Vtc3RhbmNlcyAgd2l0aCB0aGUgaW50ZW50IHRvIGFkb3B0IHVsdGltYXRlbHkgYXMgZ3JlYXQgIHZvd3MuIFRoZSB0d2VsdmUgdm93cyBhcmUgZGVzY3JpYmVkIGFzICBmb2xsb3dzOiBGaXZlIE1haW4gVm93cyBvZiBMaW1pdGVkIE5hdHVyZSAgKEFudXZyYXRhcyk6IEFoaW1zYSBBbnV2cmF0IC0gTm9uLXZpb2xlbmNlICBMaW1pdGVkIFZvdyBTYXR5YSBBbnV2cmF0IC0gVHJ1dGhmdWxuZXNzICBMaW1pdGVkIFZvdyBBY2hhdXJ5YSBBbnV2cmF0IC0gTm9uLXN0ZWFsaW5nICBMaW1pdGVkIFZvdyBCaHJhbWFjaGFyeWEgQW51dnJhdCAtIENoYXN0aXR5ICBMaW1pdGVkIFZvdyBBcGFyaWdyYWhhIEFudXZyYXQgLSBOb24tICBhdHRhY2htZW50IExpbWl0ZWQgVm93IFRocmVlIE1lcml0IFZvd3MgKEd1bmEtdnJhdHMpOiAgRGlrIFZyYXRhIC0gTGltaXRlZCBhcmVhIG9mIGFjdGl2aXR5IHZvdyAgQmhvZ2EtVXBiaG9nYSBWcmF0YSAtIExpbWl0ZWQgdXNlIG9mICBjb25zdW1hYmxlIGFuZCBub24tY29uc3VtYWJsZSBpdGVtcyAgdm93IEFuYXJ0aGEtZGFuZGEgVnJhdGEgLSBBdm9pZGFuY2Ugb2YgIHB1cnBvc2VsZXNzIHNpbnMgdm93IEZvdXIgRGlzY2lwbGluYXJ5IFZvd3MgKFNpa3NoYS0gIHZyYXRhcyk6IFNhbWF5aWsgVnJhdGEgLSBNZWRpdGF0aW9uIHZvdyBvZiAgbGltaXRlZCBkdXJhdGlvbiBEZXNhdmFrYXNpa2EgVnJhdGEgLSBBY3Rpdml0eSB2b3cgb2YgIGxpbWl0aW5nIHNwYWNlIFBhdXNhZGhhIFZyYXRhIC0gQXNjZXRpYydzIGxpZmUgVm93IG9mICBsaW1pdGVkIGR1cmF0aW9uIEF0aXRoaSBTYW12aWJoYWdhIFZyYXRhIC0gTGltaXRlZCAgY2hhcml0eSB2b3cgVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogQnVkZGhpc20gYW5kIEphaW5pc20=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Aparigraha Anuvrat ",
        "option2" : " Atithi Samvibhaga Anuvrata ",
        "option3" : " Ahimsa Anuvrat ",
        "option4" : " Bhramacharya Anuvrat "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following pairs regarding the chalcolithic sites in India is/are correctly matched?1. Jorwe culture: Inamgaon 2. Kayatha culture: Chirand 3. Banas culture: Gilund Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlyIDIgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZCA6IEtheWF0aGEgIGN1bHR1cmUgKDIxMDBCQy0yMDAwIEJDKSBwcm9zcGVyZWQgYXQgIEtheWF0aGEgaW4gQ2hhbWJhbCBvZiBNYWRoeWEgUHJhZGVzaC4gQ2hhbGNvbGl0aGljIENvbW11bml0aWVzIG9mIE5vbi0gSGFyYXBwYW4gSW5kaWEgVGhlIGltcG9ydGFudCBub24tSGFyYXBwYW4gY2hhbGNvbGl0aGljICBjdWx0dXJlcyBsYXkgbWFpbmx5IGluIHdlc3Rlcm4gSW5kaWEgYW5kICBEZWNjYW4uICBUaGVzZSBpbmNsdWRlIEJhbmFzIGN1bHR1cmUgKDI2MDBCQy0gMTkwMCBCQykgaW4gc291dGgtZWFzdCBSYWphc3RoYW4sIHdpdGggIEFoYXIgbmVhciBVZGFpcHVyIGFuZCBHaWx1bmQgYXMgaXRzICBrZXktc2l0ZXM7IEtheWF0aGEgY3VsdHVyZSAoMjEwMEJDLSAyMDAwIEJDKSB3aXRoIEtheWF0aGEgaW4gQ2hhbWJhbCAgYXMgaXRzIGNoaWVmIHNpdGUgaW4gTWFkaHlhIFByYWRlc2g7ICBNYWx3YSBDdWx0dXJlICgxNzAwQkMtMTQwMEJDKSB3aXRoICBOYXZkYXRvbGkgaW4gV2VzdGVybiBNYWRoeWEgUHJhZGVzaCAgYXMgYW4gaW1wb3J0YW50IHNpdGUsIGFuZCBKb3J3ZSBjdWx0dXJlICAoMTQwMEJDLSA3MDBCQykgd2l0aCBJbmFtZ2FvbiBhbmQgIENoYW5kb2xpIG5lYXIgUHVuZSBpbiBNYWhhcmFzaHRyYSBhcyAgaXRzIGNoaWVmIGNlbnRyZXMuICBUaGUgZXZpZGVuY2Ugb2YgdGhlIGNoYWxjb2xpdGhpYyBjdWx0dXJlcyAgYWxzbyBjb21lcyBmcm9tIGVhc3Rlcm4gVXR0YXIgUHJhZGVzaCwgIEJpaGFyIGFuZCBCZW5nYWwuICBUb3BpYzogQW5jaWVudCBIaXN0b3J5IFN1YnRvcGljOiBQcmUtSGlzdG9yaWMgUGVyaW9k",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to the history of South India, which of the following statements regarding the Kalabhra revolt is/are incorrect?1. It was a peasant protest directed against the landed Brahmanas.2. The revolt could be quelled only through the joint efforts of the Pandyas, the Pallavas, and the Chalukyas of Badami.Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIEthbGFiaHJhIHJldm9sdCBBbHRob3VnaCB0aGUgcGVyaW9kIGJldHdlZW4gQUQgMzAwIGFuZCAgNzUwIHdhcyBleHRyZW1lbHkgaW1wb3J0YW50IGZvciBzdGF0ZSAgZm9ybWF0aW9uIGFuZCBhZ3JhcmlhbiBleHBhbnNpb24gaW4gdGhlICBwZW5pbnN1bGEsIHZlcnkgbGl0dGxlIGlzIGtub3duIGFib3V0IHdoYXQgIGhhcHBlbmVkIGF0IHRoZSB0aXAgb2YgdGhlIHBlbmluc3VsYSBhZnRlciAgdGhlIGVjbGlwc2Ugb2YgdGhlIENob2xhcywgdGhlIENoZXJhcywgYW5kICB0aGUgUGFuZHlhcy4gVGhlIG9ubHkgaW1wb3J0YW50IGV2ZW50IGlzICBhIHJldm9sdCBsZWQgYnkgdGhlIEthbGFiaHJhcyBpbiB0aGUgc2l4dGggIGNlbnR1cnkuICBUaGUgS2FsYWJocmFzIHNlZW0gdG8gaGF2ZSBiZWVuIGEgdHJpYmFsICBwZW9wbGUgd2hvIGNhcHR1cmVkIHBvd2VyLCBwYXJ0aWN1bGFybHkgIGF0IHRoZSBjb3N0IG9mIHRoZSBDaG9sYXMsIGFuZCBydWxlZCBmb3IgIHNldmVudHkgZmkgdmUgeWVhcnMuIFRoZWlyIHJ1bGUgYWxzbyBhZmZlY3RlZCAgdGhlIFBhbGxhdmFzIGFzIHdlbGwgYXMgdGhlaXIgbmVpZ2hib3VyaW5nICBjb250ZW1wb3Jhcmllcy4gIFRoZSBLYWxhYmhyYXMgYXJlIGNhbGxlZCBldmlsIHJ1bGVycywgIHdobyBvdmVydGhyZXcgaW5udW1lcmFibGUga2luZ3MgYW5kICBlc3RhYmxpc2hlZCB0aGVpciBob2xkIG9uIHRoZSBUYW1pbCBsYW5kLiAgVGhlIEthbGFiaHJhIHJldm9sdCB3YXMgYSBwb3dlcmZ1bCAgcGVhc2FudCBwcm90ZXN0IGRpcmVjdGVkIGFnYWluc3QgdGhlICBsYW5kZWQgYnJhaG1hbmFzLiBUaGUgcmVwZWF0ZWQgdGVhY2hpbmcgIHRoYXQgdGhvc2Ugd2hvIGF0dGFjayBsYW5kIGdyYW50cyBhcmUgIGNvbmRlbW5lZCB0byBoZWxsIGZvciBzaXh0eSB0aG91c2FuZCB5ZWFycyAgZmFpbGVkIHRvIGNoYW5nZSB0aGVpciBtaW5kcy4gVGhleSBwdXQgYW4gIGVuZCB0byB0aGUgYnJhaG1hZGV5YSByaWdodHMgZ3JhbnRlZCB0byAgdGhlIGJyYWhtYW5hcyBpbiBudW1lcm91cyB2aWxsYWdlcy4gIEl0IGFwcGVhcnMgdGhhdCB0aGUgS2FsYWJocmFzIHdlcmUgb2YgIEJ1ZGRoaXN0IHBlcnN1YXNpb24gYXMgdGhleSBwYXRyb25pemVkICBCdWRkaGlzdCBtb25hc3Rlcmllcy4gVGhlIEthbGFiaHJhcycgIHJldm9sdCB3YXMgc28gd2lkZXNwcmVhZCB0aGF0IGl0IGNvdWxkICAgIDcgIGJlIHF1ZWxsZWQgb25seSB0aHJvdWdoIHRoZSBqb2ludCBlZmZvcnRzICBvZiB0aGUgUGFuZHlhcywgdGhlIFBhbGxhdmFzLCBhbmQgdGhlICBDaGFsdWt5YXMgb2YgQmFkYW1pLiAgVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogU2FuZ2FtIEFnZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 16,
      "question" : "Which of the following is/ are true with respect to the system of administration in the Gupta Age?1. Kingship was hereditary and the throne always went to the eldest son.2. The Gupta administration vehemently opposed forced labour.3. The empire was divided into Visayas, which was further divided into Bhuktis.4. The empire maintained a standing army, supplemented by forces occasionally supplied by feudatories.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRob3VnaCAga2luZ3NoaXAgd2FzIGhlcmVkaXRhcnksIHRoZSB0aHJvbmUgZGlkIG5vdCAgbmVjZXNzYXJpbHkgZ28gdG8gdGhlIGVsZGVzdCBzb24uIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSW4gdGhlIGNlbnRyYWwgIGFuZCB3ZXN0ZXJuIHJlZ2lvbiwgdGhlIHZpbGxhZ2VycyB3ZXJlICBzdWJqZWN0ZWQgdG8gZm9yY2VkIGxhYm91ciwgY2FsbGVkIHZpc2h0aSwgdG8gIHNlcnZlIHRoZSByb3lhbCBhcm15IGFuZCBvZmZpIGNpYWxzLiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBlbXBpcmUgd2FzICBkaXZpZGVkIGludG8gZGl2aXNpb25zIGNhbGxlZCBCaHVrdGlzLCB3aGljaCAgd2VyZSBmdXJ0aGVyIGRpdmlkZWQgaW50byBkaXN0cmljdHMgY2FsbGVkICBWaXNheWFzLiBBZG1pbmlzdHJhdGl2ZSBTeXN0ZW0gaW4gdGhlIEd1cHRhICBQZXJpb2QgU3VwcmVtYWN5IG9mIGtpbmcgLSBHdXB0YSBraW5ncyBoZWxkICB0aXRsZXMgbGlrZSBwYXJhbWVzaHZhcmEsIG1haGFyYWphZGhpcmFqYSwgIGFuZCBwYXJhbWEgYmhhdHRhcmFrYS4gVGhpcyBpbmRpY2F0ZXMgIHRoZWlyIHJ1bGUgb3ZlciBtYW55IGxlc3NlciBraW5ncyBpbiB0aGVpciAgZW1waXJlLiBLaW5nc2hpcCB3YXMgaGVyZWRpdGFyeSBidXQgcm95YWwgIGluaGVyaXRhbmNlIGRpZCBub3QgZGVwZW5kIHVwb24gYmVpbmcgIHRoZSBmaSByc3QgYm9ybi4gQXJteSBhbmQgY2F2YWxyeSAtIEd1cHRhcyBtYWludGFpbmVkIGEgIHN0YW5kaW5nIGFybXksIHN1cHBsZW1lbnRlZCBieSB0aGUgZm9yY2VzICAgIDggIG9jY2FzaW9uYWxseSBzdXBwbGllZCBieSBoaXMgZmV1ZGF0b3JpZXMuICBIb3JzZSBjaGFyaW90cyByZWNlZGVkIGludG8gdGhlIGJhY2tncm91bmQsICBhbmQgY2F2YWxyeSBjYW1lIHRvIHRoZSBmb3JlLiBIb3JzZSBhcmNoZXJ5ICB3YXMgYW4gaW1wb3J0YW50IGVsZW1lbnQgb2YgbWlsaXRhcnkgIHRhY3RpY3MuIFRheGF0aW9uIC0gVGF4ZXMgb24gdGhlIGxhbmQgdGF4ZXMgd2VyZSAgaW5jcmVhc2VkIGluIG51bWJlciwgYW5kIHdlcmUgZGVjcmVhc2VkICBvbiB0cmFkZSBhbmQgY29tbWVyY2UuICBUYXhlcyBjb2xsZWN0ZWQgdmFyaWVkIGZyb20gb25lLWZvdXJ0aCB0byAgb25lLXNpeHRoIG9mIHRoZSBwcm9kdWNlLiAgVGhlIFJveWFsIGFybXkgd2FzIHRvIGJlIGZlZCBieSB0aGUgIGxvY2FsIHBlb3BsZSB3aGVuIGl0IHBhc3NlZCB0aHJvdWdoIHRoZSAgY291bnRyeXNpZGUuICBQZWFzYW50cyBzdXBwbGllZCBhbmltYWxzLCBmb29kIGdyYWlucywgIGZ1cm5pdHVyZSwgZXRjLiwgZm9yIHRoZSBtYWludGVuYW5jZSBvZiAgcm95YWwgb2ZmaSBjZXJzIG9uIGR1dHkgaW4gcnVyYWwgYXJlYXMuICBGb3JjZWQgbGFib3VyIGNhbGxlZCB2aXNodGkgd2FzICBwcmFjdGljZWQgaW4gdGhlIGNlbnRyYWwgYW5kIHdlc3Rlcm4gIHBhcnRzIHRvIHNlcnZlIHRoZSByb3lhbCBvZmZpIGNpYWxzIGFuZCAgYXJteS4gSnVkaWNpYXJ5IC0gR3VwdGFzIGhhZCBhbiBlbGFib3JhdGUgYW5kICB3ZWxsLWRldmVsb3BlZCBqdWRpY2lhbCBzeXN0ZW0uICBMYXctYm9va3Mgd2VyZSBjb21waWxlZCAtIGRlbWFyY2F0aW5nICBjcmltaW5hbCBhbmQgY2l2aWwgbGF3cy4gVGhlZnQgYW5kIGFkdWx0ZXJ5IHdlcmUgdW5kZXIgY3JpbWluYWwgIGxhdywgZGlzcHV0ZXMgb2YgcHJvcGVydHkgdW5kZXIgY2l2aWwgIGxhdy4gSW5oZXJpdGFuY2UgbGF3cyB3ZXJlIGFsc28gc3BlY2lmaSBlZC4gIFZhcm5hIHN5c3RlbSB3YXMgYW4gaW50ZWdyYWwgZmFjdG9yIGluICBtYWtpbmcgbGF3cy4gS2luZyB1cGhlbGQgdGhlIGxhdyB3aXRoIHRoZSBoZWxwIG9mICBicmFobWFuYXMgYW5kIHByaWVzdHMuIFRoZSBndWlsZHMgb2YgYXJ0aXNhbnMsIG1lcmNoYW50cywgYW5kICBvdGhlcnMgd2VyZSBnb3Zlcm5lZCBieSB0aGVpciBvd24gbGF3cy4gIEJ1cmVhdWNyYWN5IC0gIEJ1cmVhdWNyYWN5IHdhcyBub3QgYXMgZWxhYm9yYXRlLiAgS3VtYXJhbWF0eWFzIHdlcmUgdGhlIG1vc3QgaW1wb3J0YW50ICBvZmZpIGNlcnMuIFBvc3RzIHdlcmUgaGVyZWRpdGFyeSwgd2hpY2ggbmF0dXJhbGx5ICB3ZWFrZW5lZCB0aGUgcm95YWwgY29udHJvbC4gUHJvdmluY2lhbCBhbmQgbG9jYWwgYWRtaW5pc3RyYXRpb24gLSAgVGhlIGVtcGlyZSB3YXMgZGl2aWRlZCBpbnRvIGRpdmlzaW9ucyAtICBiaHVrdGksIGFuZCBmdXJ0aGVyIGludG8gZGlzdHJpY3RzIGNhbGxlZCAgdmlzYXlhcy4gVGhlIGJodWt0aSB3YXMgdW5kZXIgdGhlIGNoYXJnZSAgb2YgdXBhcmlrYSBhbmQgdmlzeWF5YSB1bmRlciAgdmlzYXlhcGF0aS4gVmlzYXlhcyB3ZXJlIGZ1cnRoZXIgZGl2aWRlZCBpbnRvIHZpdGhpcywgIGluIHRoZSBlYXN0ZXJuIHBhcnQgb2YgSW5kaWEuIEFuZCB0aGVzZSAgd2VyZSBzdWJkaXZpZGVkIGludG8gdmlsbGFnZXMuIFZpbGxhZ2UgaGVhZG1hbiB3YXMgYW4gZXh0cmVtZWx5ICBpbXBvcnRhbnQgZmkgZ3VyZSwgd2hvIG1hbmFnZWQgdGhlICB2aWxsYWdlIGFmZmFpcnMgd2l0aCB0aGUgaGVscCBvZiBlbGRlcnMuIFdpdGggdGhlIGFkbWluaXN0cmF0aW9uIG9mIGEgdmlsbGFnZSBvciBhICBzbWFsbCB0b3duLCBsZWFkaW5nIGxvY2FsIGVsZW1lbnRzIHdlcmUgIGFzc29jaWF0ZWQuIE5vIGxhbmQgdHJhbnNhY3Rpb25zIGNvdWxkICBiZSBlZmZlY3RlZCB3aXRob3V0IHRoZWlyIGNvbnNlbnQuIFVyYmFuIEFkbWluaXN0cmF0aW9uIC0gIE9yZ2FuaXNlZCBwcm9mZXNzaW9uYWwgYm9kaWVzIHdlcmUgIHByb21pbmVudGx5IGltcG9ydGFudC4gIFNlcGFyYXRlIGd1aWxkcyBhbmQgYXNzb2NpYXRpb25zICBleGlzdGVkIGZvciBzZXBhcmF0ZSBkZXBhcnRtZW50cyBhbmQgIHByb2Zlc3Npb25zLiBUb3BpYzogQW5jaWVudCBIaXN0b3J5IFN1YnRvcGljOiBHdXB0YSBQZXJpb2Q=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding Indian cultural history:1. The Indo-Greeks were the fi rst rulers in India to issue coins which attributed to the kings2. The Sakas started the trend of using chaste Sanskrit in longer inscriptions.Which of the above statements is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QgIEluZG8tR3JlZWtzLCBTYWthLCBQYXJ0aGlhbnMsIEt1c2hhbnMgVGhlIEluZG8tR3JlZWtzIHdlcmUgdGhlIGZpIHJzdCBydWxlcnMgSW4gIEluZGlhIHRvIGlzc3VlIGNvaW5zIHdoaWNoIGNhbiBiZSBkZWZpIG5pdGVseSAgYXR0cmlidXRlZCB0byB0aGUga2luZ3MgIFRoaXMgaXMgbm90IHBvc3NpYmxlIGluIHRoZSBjYXNlIG9mIHRoZSBlYXJseSAgcHVuY2ggbWFya2VkIGNvaW5zIC4gd2hpY2ggY2Fubm90IGJlICBhc3NpZ25lZCB3aXRoIGNlcnRhaW50eSB0byBhbnkgZHluYXN0eSAgVGhlIEluZG8tR3JlZWtzIHdlcmUgdGhlIGZpIHJzdCB0byBpc3N1ZSBnb2xkICBjb2lucyBpbiBJbmRpYSwgd2hpY2ggaW5jcmVhc2VkIGluIG51bWJlciAgdW5kZXIgdGhlIEt1c2hhbnMgVGhlIEdyZWVrIHJ1bGUgaXMgYWxzbyBtZW1vcmFibGUgb24gIGFjY291bnQgb2YgdGhlIGludHJvZHVjdGlvbiBvZiBIZWxsZW5pc3RpYyBhcnQgIGZlYXR1cmVzIGluIHRoZSBub3J0aC13ZXN0IGZyb250aWVyIG9mIEluZGlhLCAgZ2l2aW5nIHJpc2UgdG8gdGhlIEdhbmRoYXJhIEFydC4gUnVkcmFkYW1hbiwgYSBTYWthIGR5bmFzdHkgcnVsZXIsIHdhcyBhICBncmVhdCBsb3ZlciBvZiBTYW5za3JpdC4gQWx0aG91Z2ggYSBmb3JlaWduZXIgIHNldHRsZWQgaW4gSW5kaWEsIGhlIGlzc3VlZCB0aGUgZmkgcnN0IGV2ZXIgbG9uZyAgaW5zY3JpcHRpb24gaW4gY2hhc3RlIFNhbnNrcml0LiBBbGwgdGhlIGVhcmxpZXIgbG9uZ2VyIGluc2NyaXB0aW9uIHdlcmUgIHdyaXR0ZW4gaW4gUHJha3JpdC4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogUG9zdC1NYXVyeWFuIFBlcmlvZA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements regarding the consequences of Alexander's Invasion:1. The development of a special form of writing in India, which later became known as the Kharosthi script.2. It Increased the exchange facilities for trade.3. Alexander's expedition details help Indian historians determine the date of events.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxOA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEl0IHdhcyB0aGUgcmVzdWx0ICBvZiBQZXJzaWFuIGludmFzaW9uLiBBbGV4YW5kZXIncyBJbnZhc2lvbiBUaGUgbW9zdCBpbXBvcnRhbnQgb3V0Y29tZSBvZiB0aGlzIGludmFzaW9uICB3YXMgdGhlIGVzdGFibGlzaG1lbnQgb2YgZGlyZWN0IGNvbnRhY3QgIGJldHdlZW4gSW5kaWEgYW5kIEdyZWVjZSBpbiBkaWZmZXJlbnQgIGZpIGVsZHMgIEFsZXhhbmRlcidzIGNhbXBhaWduIG9wZW5lZCB1cCBmb3VyICBkaXN0aW5jdCByb3V0ZXMgYnkgbGFuZCBhbmQgc2VhLiAgIDkgIEl0IHBhdmVkIHRoZSB3YXkgZm9yIEdyZWVrIG1lcmNoYW50cyBhbmQgIGNyYWZ0c21lbiwgYW5kIGluY3JlYXNlZCB0aGUgZXhjaGFuZ2UgIGZhY2lsaXRpZXMgZm9yIHRyYWRlLiBBbGV4YW5kZXIncyBleHBlZGl0aW9uIGRldGFpbHMgaGVscCBJbmRpYW4gIGhpc3RvcmlhbnMgZGV0ZXJtaW5lIHRoZSBkYXRlIG9mIGV2ZW50cy4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogTWF1cnlhbiBQZXJpb2Q=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements regarding pre-historic paintings:1. The pre-historic paintings were generally executed on rocks.2. The most common scene depicted in these paintings is of group hunting.3. Animals are only drawn in bold outline while human bodies are fi lled in completely.4. Bhimbetka in Madhya Pradesh is an important site for these paintings.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwxOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBhbmltYWxzIGFyZSAgZHJhd24gaW4gYm9sZCBvdXRsaW5lLCBhbmQgdGhlIGJvZGllcyBhcmUgIHNvbWV0aW1lcyBmaSBsbGVkIGluIGNvbXBsZXRlbHkgb3IgcGFydGlhbGx5ICB3aXRoIGNyb3NzaGF0Y2hpbmcuIEh1bWFuIGZpIGd1cmVzIGluIHNpbXBsZSAgb3V0bGluZSBmb3JtcyBhcyB3ZWxsIGFzIHdpdGggaGF0Y2hlZCBib2R5LiBQcmVoaXN0b3JpYyBSb2NrIEFydCBUaGUgcGVvcGxlIG9mIHRoZSBQYWxhZW9saXRoaWMgYW5kIE1lc29saXRoaWMgIGFnZXMgcHJhY3RpY2VkIHBhaW50aW5nLiBUaGUgcHJlLWhpc3RvcmljICBwYWludGluZ3Mgd2VyZSBnZW5lcmFsbHkgZXhlY3V0ZWQgb24gIHJvY2tzIGFuZCB0aGVzZSByb2NrIGVuZ3JhdmluZ3Mgd2VyZSAgY2FsbGVkIFBldHJvZ2x5cGhzLiAgQWxtb3N0IGFsbCB0aGUgcm9jay1zaGVsdGVycyBpbiBJbmRpYSAgb2NjdXBpZWQgYnkgdGhlIFVwcGVyIFBhbGFlb2xpdGhpYyBhbmQgIE1lc29saXRoaWMgcGVvcGxlLCBhbmQgbWFueSBvdGhlcnMgYXMgd2VsbCAgY29udGFpbiByb2NrLXBhaW50aW5ncyBkZXBpY3RpbmcgYSB2YXJpZXR5IG9mICBzdWJqZWN0cywgY2hpZWZsIHkgYW5pbWFscywgb3Igc2NlbmVzIGluY2x1ZGluZyAgYm90aCBwZW9wbGUgYW5kIGFuaW1hbHMuIFNvbWUgb2YgdGhlIGltcG9ydGFudCByb2NrLXBhaW50aW5nIHNpdGVzICBhcmUgTXVyaGFuYSBQYWhhciBpbiBVdHRhciBQcmFkZXNoLCAgQmhpbWJldGthLCBBZGFtZ2FyaCwgYW5kIExha2hhIEp1YXIgIGluIE1hZGh5YSBQcmFkZXNoIGFuZCBLdXBhZ2FsbHUgaW4gIEthcm5hdGFrYS4gQmhpbWJldGthIGluIE1QIGlzIGEgIHN0cmlraW5nIHNpdGUgaGF2aW5nIG92ZXIgNTAwIHBhaW50ZWQgIHJvY2sgc2hlbHRlcnMgZGlzdHJpYnV0ZWQgaW4gYW4gYXJlYSAgb2YgMTAgc3EuIGttLiBhbmQgdGhlIHJvY2sgcGFpbnRpbmdzICBleHRlbmQgZnJvbSB0aGUgVXBwZXIgUGFsYWVvbGl0aGljIHRvICB0aGUgTWVzb2xpdGhpYyBhZ2UgYW5kIGluIHNvbWUgc2VyaWVzICBldmVuIHVwIHRvIHJlY2VudCB0aW1lcy4gQW5pbWFscyBhcmUgdGhlIG1vc3QgZnJlcXVlbnRseSBkZXBpY3RlZCAgc3ViamVjdCBlaXRoZXIgYWxvbmUgb3IgaW4gbGFyZ2UgYW5kIHNtYWxsICBncm91cHMgYW5kIHNob3duIGluIHZhcmlvdXMgcG9zZXMuIFRoZSAgYW5pbWFscyBhcmUgZHJhd24gaW4gYm9sZCBvdXRsaW5lLCAgYW5kIHRoZSBib2RpZXMgYXJlIHNvbWV0aW1lcyBmaSBsbGVkICBpbiBjb21wbGV0ZWx5IG9yIHBhcnRpYWxseSB3aXRoICBjcm9zc2hhdGNoaW5nLiBEZXBpY3Rpb24gb2YgaHVtYW4gZmkgZ3VyZXMgaW4gcm9jayAgcGFpbnRpbmdzIGlzIHF1aXRlIGNvbW1vbi4gVGhlc2UgYXJlICBpbiBzaW1wbGUgb3V0bGluZSBmb3JtcyBhcyB3ZWxsIGFzIHdpdGggIGhhdGNoZWQgYm9keS4gVGhlIGh1bWFucyBhcmUgc2hvd24gaW4gIHZhcmlvdXMgYWN0aXZpdGllcywgc3VjaCBhcyBkYW5jaW5nLCBydW5uaW5nLCAgaHVudGluZywgcGxheWluZyBnYW1lcyBhbmQgZW5nYWdlZCBpbiAgYmF0dGxlLiAgT25lIG9mIHRoZSBtb3N0IGNvbW1vbiBzY2VuZXMgIGRlcGljdGVkIGluIHRoZXNlIHBhaW50aW5ncyBpcyBvZiBncm91cCAgaHVudGluZyBhbmQgc2V2ZXJhbCBwYWludGluZ3MgZGVwaWN0ICBncmF6aW5nIGFjdGl2aXR5IGFuZCByaWRpbmcgc2NlbmVzLiBUaGUgY29sb3VycyB1c2VkIGluIG1ha2luZyB0aGVzZSBkcmF3aW5ncyAgYXJlIGRlZXAgcmVkLCBncmVlbiwgd2hpdGUgYW5kLCB5ZWxsb3cgVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogUHJlLUhpc3RvcmljIFBlcmlvZA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1, 2 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following are the traits linked to Aryan culture?1. Use of horse-drawn chariots 2. Practice of cremating the dead 3. Horse sacrifi ce Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMA==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgc3RhdGVtZW50cyBhcmUgY29ycmVjdCAgQXJ5YW4gQ3VsdHVyZSBUZXh0cyBmb3IgVHJhaXRzIG9mIEFyeWFuIEN1bHR1cmU6IFRoZSAgcHJpbmNpcGFsIHRyYWl0cyBvZiBBcnlhbiBjdWx0dXJlIGFyZSBzZXQgIG91dCBieSBWZWRpYywgSXJhbmlhbiwgYW5kIEdyZWVrIGxpdGVyYXJ5ICB0ZXh0cyBhbmQgY29nbmF0ZSB0ZXJtcyBmb3VuZCBpbiB0aGUgcHJvdG8tIEluZG8tRXVyb3BlYW4gbGFuZ3VhZ2VzLiBUaGUgUmlnIFZlZGEgaXMgIGFzc2lnbmVkIHRvIHJvdWdobHkgMTUwMCBCQywgYWx0aG91Z2ggdGhlICBsYXRlciBhZGRpdGlvbnMgbWlnaHQgYmUgYXMgbGF0ZSBhcyAxMDAwIEJDLiAgVGhlIGVhcmxpZXN0IHBhcnRzIG9mIHRoZSBaZW5kLUF2ZXN0YSBhcmUgIHJvdWdobHkgYXR0cmlidXRlZCB0byAxNDAwIEJDLiBUaGUgSG9yc2UsIGl0cyBEb21lc3RpY2F0aW9uIGFuZCBEaWZmdXNpb246ICBUaGUgaG9yc2UgaXMgcmVnYXJkZWQgYXMgYW4gaW5kaXNwZW5zYWJsZSAgdHJhaXQgb2YgdGhlIEFyeWFuIGN1bHR1cmUsIGZvciBpdCBwbGF5cyBhICBjcnVjaWFsIHJvbGUgaW4gdGhlIGxpZmUgb2YgdGhlIGVhcmx5IEluZG8tIEV1cm9wZWFucy4gSW4gaXRzIHZhcmlvdXMgZm9ybXMsIHRoZSB0ZXJtICBhc3ZhIChob3JzZSkgb2NjdXJzIDIxNSB0aW1lcyBpbiB0aGUgUmlnICBWZWRhOyBubyBvdGhlciBhbmltYWwgaXMgbWVudGlvbmVkIHNvICBmcmVxdWVudGx5LiBUaGUgSW5kby1FdXJvcGVhbnMgd2lkZWx5ICB1c2VkIGhvcnNlLWRyYXduIGNoYXJpb3RzLiBBcnlhbnMgIHN1Y2NlZWRlZCBldmVyeXdoZXJlIGJlY2F1c2UgdGhleSAgcG9zc2Vzc2VkIGNoYXJpb3QgZHJpdmVuIGJ5IGhvcnNlcyAmICBwb3NzaWJseSB3aXRoIGNvYXRzIG9mIG1haWwgJiBiZXR0ZXIgYXJtb3J5LiAgVGhleSBhbHNvIGludHJvZHVjZWQgdGhlc2UgdGhpbmdzIGZvciB0aGUgIDFzdCB0aW1lIGluIHdlc3QgQXNpYSAmIEluZGlhLiBUaGUgcGl0LWR3ZWxsaW5nIGNhbiBhbHNvIGJlIGFzc29jaWF0ZWQgIHdpdGggdGhlIEFyeWFuIGN1bHR1cmUsIGFuZCBtYXkgIGhhdmUgb3JpZ2luYXRlZCBpbiBjb2xkIGNvbmRpdGlvbnMuICBUaGUgcHJhY3RpY2Ugb2YgcGl0LWR3ZWxsaW5nIHByZXZhaWxlZCBpbiAgQnVyemFob20gbmVhciBTcmluYWdhciBpbiBLYXNobWlyIGFuZCAgYWxzbyBpbiBIYXJ5YW5hLiBUaGlzIG1heSBiZSBkdWUgdG8gdGhlICBDZW50cmFsIEFzaWFuIGluZmwgdWVuY2Ugb24gdGhlIGJvcmRlcnMgb2YgIEthc2htaXIuIENyZW1hdGlvbiBkZXZlbG9wZWQgYXMgYW4gQXJ5YW4gIHRyYWl0LiBJdHMgcHJhY3RpY2UgaXMgc3VwcG9ydGVkIGJ5IHRoZSBWZWRpYywgIEF2ZXN0YW4sIGFuZCBIb21lcmljIHRleHRzLiBBbmltYWwgc2FjcmlmaSBjZSB3YXMgYW4gaW1wb3J0YW50IEFyeWFuICByaXR1YWwuIEhvd2V2ZXIsIGdpdmVuIGl0cyBhbG1vc3QgdW5pdmVyc2FsICBwcmFjdGljZSBhbW9uZyBwYXN0b3JhbCB0cmliYWwgcGVvcGxlLCBpdCAgaXMgZGlmZmkgY3VsdCB0byBtYWtlIG11Y2ggb2YgaXQuIEFuaW1hbCAgc2FjcmlmaSBjZSBtYXkgaGF2ZSBwcmV2YWlsZWQgYW1vbmcgbWFueSAgdHJpYmFsIHBlb3BsZXMsIGJ1dCB0aGUgaG9yc2Ugc2FjcmlmaSBjZSAgd2FzIHR5cGljYWwgb2YgdGhlIEluZG8tRXVyb3BlYW5zLCAgcGFydGljdWxhcmx5IG9mIHRoZSBWZWRpYyBwZW9wbGUuIFRob3VnaCB0d28gaHltbnMgYXJlIGRldm90ZWQgdG8gdGhlIGhvcnNlICBzYWNyaWZpIGNlIGluIHRoZSB0ZW50aCBib29rIG9mIHRoZSBSaWcgVmVkYSwgIHRoZSBsYXRlciBWZWRpYyB0ZXh0cyB0cmFuc2Zvcm0gdGhlIHNhY3JpZmkgY2UgIGludG8gYXN2YW1lZGhhLiBBbmltYWxzIG1heSBoYXZlICBiZWVuIHNhY3JpZmkgY2VkIGluIHByZS1WZWRpYyB0aW1lcyBpbiB0aGUgIHN1YmNvbnRpbmVudCwgYnV0IGRlc3BpdGUgY3V0IG1hcmtzIGZvdW5kICAgIDEwICBvbiB0aGUgYm9uZXMsIGl0IGNhbm5vdCBiZSBzYWlkIHRoYXQgdGhlICBob3JzZXMgd2VyZSBraWxsZWQgZm9yIHJlbGlnaW91cyBwdXJwb3Nlcy4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogVmVkaWMgUGVyaW9k",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements regarding religious practices during the Rig Vedic period:5 1. There was no idol worship during this period.2. The dominant mode of worshipping was recitation of prayers and performance of sacrifi ces accompanied by rituals.3. Female gods were less important than male gods.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBkb21pbmFudCAgbW9kZSBvZiB3b3JzaGlwcGluZyB0aGUgZ29kcyB3YXMgIHRocm91Z2ggdGhlIHJlY2l0YXRpb24gb2YgcHJheWVycyBhbmQgIHBlcmZvcm1hbmNlIG9mIHNhY3JpZmkgY2VzIGJ1dCB0aGVzZSAgd2VyZSBub3QgYWNjb21wYW5pZWQgYnkgYW55IHJpdHVhbCBvciAgc2FjcmlmaSBjaWFsIGZvcm11bGFlLiBSaWcgVmVkaWMgR29kcyBUaGUgQXJ5YW5zIGZvdW5kIGl0IGRpZmZpIGN1bHQgdG8gZXhwbGFpbiAgdGhlIGNvbWluZyBvZiB0aGUgcmFpbnMsIHRoZSBhcHBlYXJhbmNlIG9mICB0aGUgc3VuIGFuZCB0aGUgbW9vbiwgYW5kIHRoZSBleGlzdGVuY2Ugb2YgIHRoZSByaXZlcnMsIG1vdW50YWlucywgYW5kIHRoZSBsaWtlLiBUaGV5LCAgdGhlcmVmb3JlLCBwZXJzb25pZmkgZWQgdGhlc2UgbmF0dXJhbCBmb3JjZXMgIGFuZCBsb29rZWQgdXBvbiB0aGVtIGFzIGxpdmluZyBiZWluZ3MgdG8gIHdoaWNoIHRoZXkgYXR0cmlidXRlZCBodW1hbiBvciBhbmltYWwgIGF0dHJpYnV0ZXMuIFRodXMgdGhlcmUgd2FzIG5vIGlkb2wgIHdvcnNoaXAgYXQgdGhpcyB0aW1lLiBXZSBoYXZlIGEgbGFyZ2UgbnVtYmVyIG9mIHN1Y2ggZGl2aW5pdGllcyAgaW4gdGhlIFJpZyBWZWRhOiBJbmRyYSBSYWluIGdvZCBBZ25pIEZpcmUgZ29kIFZhcnVuYSBQZXJzb25pZmkgZWQgYXMgd2F0ZXIgJiAgc3VwcG9zZWQgdG8ga2VlcCBuYXR1cmFsIG9yZGVyICBpbiBsaW5lIFNvbWEgR29kIG9mIHBsYW50cywgJiBhbiBpbnRveGljYXRpbmcgIGRyaW5rIHNvbXJhcyBuYW1lZCBhZnRlciBpdCBNYXJ1dCBQZXJzb25pZmkgZWQgYXMgc3Rvcm0gQWRpdGkgR29kZGVzcyBvZiBldGVybml0eSBVc2hhIEFwcGVhcmFuY2Ugb2YgZGF3biBUaGUgd29tZW4gZGl2aW5pdGllcyBsaWtlIEFkaXRpIGFuZCBVc2hhICB3ZXJlIG5vdCB0aGF0IHByb21pbmVudCBkdXJpbmcgUmlnIFZlZGljICB0aW1lcy4gR2l2ZW4gdGhlIHBhdHJpYXJjaGFsIG5hdHVyZSBvZiAgc29jaWV0eSwgdGhlIG1hbGUgZ29kcyB3ZXJlIGZhciBtb3JlICBpbXBvcnRhbnQgdGhhbiBmZW1hbGUgZ29kcy4gIFRoZSBkb21pbmFudCBtb2RlIG9mIHdvcnNoaXBwaW5nICB0aGUgZ29kcyB3YXMgdGhyb3VnaCB0aGUgcmVjaXRhdGlvbiBvZiAgcHJheWVycyBhbmQgcGVyZm9ybWFuY2Ugb2Ygc2FjcmlmaSBjZXMuIE9mZmVyaW5ncyBvZiB2ZWdldGFibGVzLCBiYXJsZXksIGV0Yy4sIHdlcmUgIG1hZGUgdG8gZ29kcywgYnV0IGluIFJpZyBWZWRpYyB0aW1lcyB0aGlzICB3YXMgbm90IGFjY29tcGFuaWVkIGJ5IGFueSByaXR1YWwgb3IgIHNhY3JpZmkgY2lhbCBmb3JtdWxhZS4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogVmVkaWMgUGVyaW9k",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 22,
      "question" : "They were nomadic people from the steppes of North-Central Asia living in the neighbourhood of China, fi rst occupied Bactria or north Afghanistan and gradually moved to the Kabul valley and seized Gandhara by crossing the Hindu Kush. Their empire extended from the Oxus to the Ganges, from Khorasan in Central Asia to Pataliputra in Bihar.Which of the following dynasties is described in above passage?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIFRoZSBLdXNoYW5zIFRoZSBLdXNoYW5zIGFyZSBhbHNvIGNhbGxlZCBZdWVjaGlzICBvciBUb2NoYXJpYW5zLiBUaGUgVG9jaGFyaWFucyB3ZXJlICBjb25zaWRlcmVkIHRvIGJlIHRoZSBzYW1lIGFzIHRoZSBTY3l0aGlhbnMuICBUaGUgS3VzaGFucyB3ZXJlIG9uZSBvZiB0aGUgZmkgdmUgY2xhbnMgaW50byAgd2hpY2ggdGhlIFl1ZWNoaSB0cmliZSB3YXMgZGl2aWRlZC4gQSBub21hZGljIHBlb3BsZSBmcm9tIHRoZSBzdGVwcGVzICBvZiBub3J0aCBDZW50cmFsIEFzaWEgbGl2aW5nIGluIHRoZSAgbmVpZ2hib3VyaG9vZCBvZiBDaGluYSwgdGhlIEt1c2hhbnMgIGZpIHJzdCBvY2N1cGllZCBCYWN0cmlhIG9yIG5vcnRoICBBZmdoYW5pc3RhbiB3aGVyZSB0aGV5IGRpc3BsYWNlZCB0aGUgIFNoYWthcy4gR3JhZHVhbGx5IHRoZXkgbW92ZWQgdG8gdGhlICBLYWJ1bCB2YWxsZXkgYW5kIHNlaXplZCBHYW5kaGFyYSBieSAgY3Jvc3NpbmcgdGhlIEhpbmR1IEt1c2gsIHJlcGxhY2luZyB0aGUgIHJ1bGUgb2YgdGhlIEdyZWVrcyBhbmQgUGFydGhpYW5zIGluIHRoZXNlICBhcmVhcy4gVGhleSBldmVudHVhbGx5IGVzdGFibGlzaGVkIHRoZWlyICBhdXRob3JpdHkgb3ZlciB0aGUgbG93ZXIgSW5kdXMgYmFzaW4gYW5kICB0aGUgZ3JlYXRlciBwYXJ0IG9mIHRoZSBHYW5nZXRpYyBiYXNpbi4gVGhlaXIgZW1waXJlIGV4dGVuZGVkIGZyb20gdGhlIE94dXMgdG8gIHRoZSBHYW5nZXMsIGZyb20gS2hvcmFzYW4gaW4gQ2VudHJhbCAgQXNpYSB0byBQYXRhbGlwdXRyYSBpbiBCaWhhci4gQSBzdWJzdGFudGlhbCBwYXJ0IG9mIENlbnRyYWwgQXNpYSAgbm93IGluY2x1ZGVkIGluIHRoZSBDb21tb253ZWFsdGggb2YgIEluZGVwZW5kZW50IFN0YXRlcyAoaW4gdGhlIGZvcm1lciBVU1NSKSwgIGEgcG9ydGlvbiBvZiBJcmFuLCBhIHBvcnRpb24gb2YgQWZnaGFuaXN0YW4sICBhbG1vc3QgdGhlIHdob2xlIG9mIFBha2lzdGFuLCBhbmQgYWxtb3N0ICB0aGUgd2hvbGUgb2Ygbm9ydGhlcm4gSW5kaWEgd2VyZSBicm91Z2h0ICB1bmRlciBvbmUgcnVsZSBieSB0aGUgS3VzaGFucy4gIEJlY2F1c2Ugb2YgdGhpcywgdGhlIEt1c2hhbiBlbXBpcmUgaW4gSW5kaWEgIGlzIHNvbWV0aW1lcyBjYWxsZWQgYSBDZW50cmFsIEFzaWFuIGVtcGlyZS4gIEluIGFueSBjYXNlLCB0aGUgZW1waXJlIGNyZWF0ZWQgYSB1bmlxdWUgIG9wcG9ydHVuaXR5IGZvciB0aGUgaW50ZXJhY3Rpb24gb2YgcGVvcGxlcyAgYW5kIGN1bHR1cmVzLCBhbmQgdGhlIHByb2Nlc3MgZ2F2ZSByaXNlIHRvICBhIG5ldyB0eXBlIG9mIGN1bHR1cmUgd2hpY2ggZW1icmFjZWQgbmluZSAgbW9kZXJuIGNvdW50cmllcy4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSBTdWJ0b3BpYzogUG9zdC1NYXVyeWFuIFBlcmlvZA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Shakas ",
        "option2" : " Kushans ",
        "option3" : " Parthians ",
        "option4" : " Indo-Greeks "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements: 1. Mayiladumparai belonged to the Neolithic age, indicating the beginning of Iron technology in India.2. Sedentism (living in one place for a long time) use of pottery, and invention of crafts are characteristics feature of Megalithic age.3. Black-and-red ware was introduced for the fi rst time during the megalithic period in India.Which of the above given statement is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgOiBFeGNhdmF0aW9ucyAgY2FycmllZCBvdXQgYnkgdGhlIFRhbWlsIE5hZHUgRGVwYXJ0bWVudCAgICAxMiAgb2YgQXJjaGFlb2xvZ3kgYXQgTWF5aWxhZHVtcGFyYWkgaW4gIEtyaXNobmFnaXJpIGRpc3RyaWN0IGhhdmUgcGxhY2VkIHRoZSAgYmVnaW5uaW5nIG9mIHRoZSBJcm9uIEFnZSBpbiBUYW1pbCBOYWR1ICA0LDIwMCB5ZWFycyBCZWZvcmUgdGhlIFByZXNlbnQgKEJQKSBvciAyMjAwICBCQ0UgKEJlZm9yZSBDb21tb24gRXJhKS4gU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBTZWRlbnRpc20gIChsaXZpbmcgaW4gb25lIHBsYWNlIGZvciBhIGxvbmcgdGltZSkgdXNlICBvZiBwb3R0ZXJ5LCBhbmQgaW52ZW50aW9uIG9mIGNyYWZ0cyBhcmUgIGNoYXJhY3RlcmlzdGljcyBmZWF0dXJlIG9mIE5lb2xpdGhpYyBhZ2UuIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhyZWUgcm9jayAgc2hlbHRlcnMgd2l0aCByb2NrIHBhaW50aW5ncyB3ZXJlIGFsc28gIGZvdW5kLiBUaGUgcGFpbnRpbmdzIHdlcmUgZG9uZSBpbnZhcmlhYmx5ICB3aXRoIHdoaXRlIGFuZCByZWQgcGlnbWVudHMuIFRoZSBhbWFsZ2FtYXRpb24gb2YgZXZpZGVuY2UgdW5lYXJ0aGVkICBhdCBNYW5nYWR1IGFuZCBUaGVsdW5nYXVyIGluIHRoZSAgTWV0dHVyIHRhbHVrIG9mIFNhbGVtIGRpc3RyaWN0IGFuZCAgdG9kYXkncyBzY2llbnRpZmkgYyBkYXRlIG9idGFpbmVkIGZvciB0aGUgIHNhbXBsZXMgYXQgTWF5aWxhZHVtcGFyYWkgY2xlYXJseSBwbGFjZWQgIHRoZSBpbnRyb2R1Y3Rpb24gb2YgaXJvbiBpbiBUYW1pbCBOYWR1IDQsMjAwICB5ZWFycyBhZ28uIFRoZSBjdWx0dXJhbCBpdGVtcyB1bmVhcnRoZWQgZHVyaW5nIHRoZSAgZXhjYXZhdGlvbnMgcmV2ZWFsZWQgdGhhdCB0aGUgc2l0ZSBoYWQgIHN1cnZpdmVkIGZyb20gdGhlIE5lb2xpdGhpYyBwZXJpb2QgdGlsbCB0aGUgIGhpc3RvcmljYWwgcGVyaW9kLiBNaWNybyBsaXRoaWMsIE5lb2xpdGhpYywgIElyb24gQWdlLCBFYXJseSBIaXN0b3JpYywgYW5kIEhpc3RvcmljICBhcmUgdGhlIGZpIHZlIGN1bHR1cmFsIHNlcXVlbmNlcyBpZGVudGlmaSBlZCAgYmFzZWQgb24gY2VyYW1pY3MsIGlyb24gb2JqZWN0cywgcm9jayBhcnQsICBtZW1vcmlhbCBzdG9uZXMsIGFuZCBpbnNjcmlwdGlvbnMuIFRoZSBsYXRlIE5lb2xpdGhpYyBwaGFzZSB3YXMgaWRlbnRpZmkgZWQgIGJlZm9yZSAyMjAwIEJDRSBhcyB0aGVyZSBpcyBhIGN1bHR1cmFsICBkZXBvc2l0IG9mIDI1IGNtIGJlbG93IHRoZSBkYXRlZCBsZXZlbC4gVGhlIGJsYWNrLXJlZC1yZWQgd2FyZSB3YXMgaW50cm9kdWNlZCAgaW4gdGhlIGxhdGUgTmVvbGl0aGljIHBoYXNlIGl0c2VsZiwgaW4gIGNvbnRyYXN0IHRvIHRoZSB3aWRlciBiZWxpZWYgdGhhdCB0aGUgYmxhY2stIGFuZC1yZWQgd2FyZSB3YXMgaW50cm9kdWNlZCBpbiB0aGUgSXJvbiAgQWdlLiBUb3BpYzogUHJlaGlzdG9yaWMgQ3VsdHVyZXMgU3ViLVRvcGljOiBOZW9saXRoaWMgUGhhc2U=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 1, 2 and 3 ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 26,
      "question" : "With reference to the chalcolithic age, consider the following statements: 1. People were aware of the art of writing during this period and used a pictographic script. 2. The chalcolithic people cultivated rice and wheat. 3. During this age, copper (metal) was used by the people. Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBDaGFsY29saXRoaWMgIGFnZSBiZWdhbiBpbiBkaWZmZXJlbnQgcGFydHMgb2YgSW5kaWEsIGFmdGVyICB0aGUgTmVvbGl0aGljIGFnZS4gSG93ZXZlciwgcGVvcGxlIHdlcmUgbm90ICBhd2FyZSBvZiB0aGUgYXJ0IG9mIHdyaXRpbmcgZHVyaW5nIHRoaXMgcGVyaW9kICBhbmQgbm8gc3BlY2ltZW5zIG9mIHRoZSBwaWN0b2dyYXBoaWMgc2NyaXB0ICBoYXZlIGJlZW4gZm91bmQuIFRoZSBwaWN0b2dyYXBoaWMgc2NyaXB0ICBiZWxvbmdzIHRvIHRoZSBJbmR1cyBWYWxsZXkgQ2l2aWxpemF0aW9uLiBUaGUgQ2hhbGNvbGl0aGljIHBlb3BsZSBoYWQgYSBiZXR0ZXIgIGtub3dsZWRnZSBvZiBhZ3JpY3VsdHVyZSBjb21wYXJlZCB0byB0aGUgIE5lb2xpdGhpYyBjdWx0dXJlIGFuZCB0aHVzIGN1bHRpdmF0ZWQgZmFyICBtb3JlIGNyb3BzIHRoYW4gdGhlIGxhdHRlci4gSW4gcGFydGljdWxhciwgIHRoZXkgY3VsdGl2YXRlZCBiYXJsZXksIHdoZWF0LCBhbmQgbGVudGlsICBpbiB3ZXN0ZXJuIEluZGlhLCBhbmQgcmljZSBpbiBzb3V0aGVybiAgYW5kIGVhc3Rlcm4gSW5kaWEuIFRoZWlyIGNlcmVhbCBmb29kIHdhcyAgc3VwcGxlbWVudGVkIGJ5IG5vIHZlZ2V0YXJpYW4gZm9vZC4gRHVyaW5nIHRoaXMgcGVvcGxlIHVzZWQgbWV0YWwgKGNvcHBlcikgZm9yICB0aGUgZmkgcnN0IHRpbWUuIEhlbmNlIGl0IGlzIGtub3duIGFzIHRoZSAgc3RvbmUgY29wcGVyIGFnZS4gVG9waWM6IFByZWhpc3RvcmljIEN1bHR1cmVzIFN1Yi1Ub3BpYzogQ2hhbGNvbGl0aGljIFBoYXNl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3    6 "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following cities were coastal port cities of Harappan civilization?1. Sutkagendor 2. Lothal 3. Nageshwar 4. Kalibangan Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGIpIGlzIGNvcnJlY3QgIFN1dGthZ2VuZG9yLCBMb3RoYWwsIE5hZ2VzaHdhciBhcmUgb24gIEFyYWJpYW4gU2VhIGNvYXN0LiBPdGhlciBjb2FzdGFsIHBvcnQgY2l0eSBvZiBIYXJhcHBhbiAgY2l2aWxpc2F0aW9uIHdhcyBCYWxha290IChQYWtpc3RhbikuIENpdGllcyAgbGlrZSBNb2hlbmpvZGFybywgSGFyYXBwYSwgQ2hhbmh1ZGFybyB3ZXJlIG9uIHRoZSBiYW5rIG9mIHJpdmVyICBJbmR1cy4gTWFueSBvZiB0aGVpciBjaXRpZXMgd2VyZSBvbiByaXZlciAgYmFua3MgYnV0IHdlcmUgbm90IGNvYXN0YWwuIEthbGliYW5nYW4gaXMgYSB0b3duIGxvY2F0ZWQgb24gdGhlIGxlZnQgIG9mIHRoZSBzb3V0aGVybiBiYW5rcyBvZiB0aGUgR2hhZ2dhci4gSXQgIGlzIGFsc28gaWRlbnRpZmkgZWQgYXMgYmVpbmcgZXN0YWJsaXNoZWQgaW4gIHRoZSB0cmlhbmdsZSBvZiBsYW5kIGF0IHRoZSBjb25mbCB1ZW5jZSBvZiAgRHJpc2hhZHZhdGkgYW5kIFNhcmFzd2F0aSBSaXZlcnMuIFRvcGljOiBQcmVoaXN0b3JpYyBDdWx0dXJlcyBTdWItVG9waWM6IEdlb2dyYXBoaWNhbCBEaXN0cmlidXRpb24gb2YgIHRoZSBzaXRlcw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1, 2 and 3 only ",
        "option3" : " 1 and 4 only ",
        "option4" : " 1, 2, 3 and 4 "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements: 1. Moga, was the founder of Indo-Scythian rule in India.2. The coins issued by Moga contains the images of Buddha and Hindu gods.3. Moga was the one who found the two signifi cant Saka Kshatrapa dynasties in northwest India, the Bhadramukhas.Which of the given above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyOA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbiBjb3JyZWN0OiBNYXVlcywgIG90aGVyd2lzZSBjYWxsZWQgTW9nYSwgd2FzIHRoZSBmaSByc3QgIEluZG8tU2N5dGhpYW4gcnVsZXIuIEhlIGFkbWluaXN0ZXJlZCAgb3ZlciBHYW5kaGFyYSAocHJlc2VudCBQYWtpc3RhbiBhbmQgIEFmZ2hhbmlzdGFuKS4gKE5PVCBJTkRJQSkgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBDaGFzaHRhbmEgIChSZWlnbiA3OCBBRCAtIDEzMCBBRCktIEhlIHdhcyBhIFNha2EgIGxlYWRlciBvZiB0aGUgV2VzdGVybiBLc2hhdHJhcGFzIChTYXRyYXBzKSAgbGluZSB3aG8gY29udHJvbGxlZCBvdmVyIFVqamFpbi4gVGhlIFNha2EgIEVyYSBpcyBhY2NlcHRlZCB0byBoYXZlIGJlZ3VuIGF0IGhpcyBjbGltYiAgdG8gY29udHJvbCBpbiA3OCBBRC4gUHRvbGVteSByZWZlcnMgdG8gaGltIGFzICAnVGlhc3RoZW5lcycgb3IgJ1Rlc3RlbmVzJy4gTW9nYSBFbXBpcmUgSGlzIGNhcGl0YWwgd2FzIGF0IFNpcmthcCAoUHVuamFiLCAgUGFraXN0YW4pLiBOdW1lcm91cyBjb2lucyBnaXZlbiBieSAgTWF1ZXMgaGF2ZSBiZWVuIGZvdW5kLiBUaGV5IGNvbnRhaW4gIEJ1ZGRoaXN0IGFuZCBIaW5kdSBpbWFnZXMuIFRoZSAgZGlhbGVjdHMgdXRpbGl6ZWQgaW4gdGhlc2UgY29pbnMgd2VyZSBHcmVlayAgYW5kIEtoYXJvc2h0aS4gSGlzIGNoaWxkIEF6ZXMgSSBwcm9jdXJlZCB0aGUgbGVmdG92ZXIgSW5kby0gIEdyZWVrIHJlZ2lvbnMgYnkgY3J1c2hpbmcgSGlwcG9zdHJhdG9zLiBIZSB3YXMgdGhlIG9uZSB3aG8gZm91bmQgdGhlIHR3byAgc2lnbmlmaSBjYW50IFNha2EgS3NoYXRyYXBhIGR5bmFzdGllcyAgaW4gbm9ydGh3ZXN0IEluZGlhLCB0aGUgQmhhZHJhbXVraGFzLiAgVGhlIG90aGVyIGxpbmUgd2FzIGNvbnNpZGVyZWQgS3NoYWhhcmF0YXMgICAgMTMgIGFuZCBpbmNvcnBvcmF0ZWQgdGhlIHJ1bGVyIE5haGFwYW5hICAod2hvIHdhcyBjcnVzaGVkIGJ5IFNhdGF2YWhhbmEgbG9yZCAgR2F1dGFtaXB1dHJhIFNhdGFrYXJuaSkuIFRvcGljOiBQb3N0IG1hdXJ5YW4gSW5kaWEgU3ViLVRvcGljOiBUaGUgU2hha2FzL1NjeXRoaWFucywgdGhlICBTY3l0aG8tUGFydGhpYW5zL1NoYWthLVBhaGxhdmFzLCB0aGUgIFNoYWthIEtzaGF0cmFwYXMgb2YgV2VzdGVybiBJbmRpYQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1 and 3 only "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to the infl uence of Central Asian powers over India during the post-Mauryan period (200 B.C - 300 A.D), which of the following statement is not correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwyOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QuICBCZXR0ZXIgQ2F2YWxyeSA6IFRoZSBTaGFrYXMgYW5kIEt1c2hhbnMgIGFkZGVkIG5ldyBpbmdyZWRpZW50cyB0byBJbmRpYW4gY3VsdHVyZSAgYW5kIGVucmljaGVkIGl0IGltbWVuc2VseS4gVGhleSBzZXR0bGVkICBpbiBJbmRpYSBmb3IgZ29vZCBhbmQgY29tcGxldGVseSBpZGVudGlmaSBlZCAgdGhlbXNlbHZlcyB3aXRoIGl0cyBjdWx0dXJlLiBBcyB0aGV5IGRpZCBub3QgIGhhdmUgdGhlaXIgb3duIHNjcmlwdCwgd3JpdHRlbiBsYW5ndWFnZSwgIG9yIGFueSBvcmdhbml6ZWQgcmVsaWdpb24sIHRoZXkgYWRvcHRlZCAgdGhlc2UgY29tcG9uZW50cyBvZiBjdWx0dXJlIGZyb20gSW5kaWEgYW5kICBiZWNhbWUgYW4gaW50ZWdyYWwgcGFydCBvZiBJbmRpYW4gc29jaWV0eSB0byAgd2hpY2ggdGhleSBjb250cmlidXRlZCBjb25zaWRlcmFibHkuIFRoZXkgaW50cm9kdWNlZCBiZXR0ZXIgY2F2YWxyeSBhbmQgdGhlICB1c2Ugb2YgcmlkaW5nIGhvcnNlIG9uIGEgbGFyZ2Ugc2NhbGUuIFRoZXkgIHBvcHVsYXJpemVkIHRoZSB1c2Ugb2YgcmVpbnMgYW5kIHNhZGRsZXMsICB3aGljaCBhcHBlYXIgaW4gdGhlIEJ1ZGRoaXN0IHNjdWxwdHVyZSAgb2YgdGhlIHNlY29uZCBhbmQgdGhpcmQgY2VudHVyaWVzIEFELiBUaGUgIFNoYWthcyBhbmQgdGhlIEt1c2hhbnMgd2VyZSBleGNlbGxlbnQgIGhvcnNlbWVuLiBUaGUgY29taW5nIG9mIHRoZSBDZW50cmFsIEFzaWFuIHBlb3BsZSAgZXN0YWJsaXNoZWQgaW50aW1hdGUgY29udGFjdHMgYmV0d2VlbiAgQ2VudHJhbCBBc2lhIGFuZCBJbmRpYS4gSW5kaWEgcmVjZWl2ZWQgYSAgZ3JlYXQgZnVuZCBvZiBnb2xkIGZyb20gdGhlIEFsdGFpIG1vdW50YWlucyAgaW4gQ2VudHJhbCBBc2lhLiBHb2xkIG1heSBhbHNvIGhhdmUgYmVlbiAgcmVjZWl2ZWQgYnkgaXQgdGhyb3VnaCB0cmFkZSB3aXRoIHRoZSAgUm9tYW4gZW1waXJlLiAgVGhlIEt1c2hhbnMgY29udHJvbGxlZCB0aGUgU2lsayBSb3V0ZSwgIHdoaWNoIHN0YXJ0ZWQgZnJvbSBDaGluYSBhbmQgcGFzc2VkICB0aHJvdWdoIHRoZWlyIGVtcGlyZSBpbiBDZW50cmFsIEFzaWEgYW5kICBBZmdoYW5pc3RhbiB0byBJcmFuLCBhbmQgd2VzdGVybiBBc2lhICB3aGljaCBmb3JtZWQgcGFydCBvZiB0aGUgUm9tYW4gRW1waXJlIGluICB0aGUgZWFzdGVybiBNZWRpdGVycmFuZWFuIHpvbmUuIEluZGlhbiByZWxpZ2lvbnMgdW5kZXJ3ZW50IGNoYW5nZXMgaW4gcG9zdC0gIE1hdXJ5YSB0aW1lcyBwYXJ0bHkgZHVlIHRvIGEgZ3JlYXQgbGVhcCBpbiAgdHJhZGUgYW5kIGFydGlzYW5hbCBhY3Rpdml0eSBhbmQgcGFydGx5IGR1ZSAgdG8gdGhlIGxhcmdlIGluZmwgdXggb2YgcGVvcGxlIGZyb20gQ2VudHJhbCAgQXNpYS4gQnVkZGhpc20gd2FzIGVzcGVjaWFsbHkgYWZmZWN0ZWQuICBUaGUgbW9ua3MgYW5kIG51bnMgY291bGQgbm90IGFmZm9yZCB0byBsb3NlICB0aGUgY2FzaCBkb25hdGlvbnMgZnJvbSB0aGUgZ3Jvd2luZyBib2R5IG9mICB0cmFkZXJzIGFuZCBhcnRpc2FucyBjb25jZW50cmF0ZWQgaW4gdG93bnMuICBMYXJnZSBudW1iZXJzIG9mIGNvaW5zIGFyZSBmb3VuZCBpbiAgdGhlIG1vbmFzdGljIGFyZWFzIG9mIE5hZ2FyanVuYWtvbmRhICBpbiBBUC4gVGhpcyBuZXcgZm9ybSBvZiBCdWRkaGlzbSBjYW1lIHRvIGJlICBjYWxsZWQgTWFoYXlhbmEgb3IgdGhlIEdyZWF0IFZlaGljbGUuICBJbiB0aGUgb2xkIHB1cml0YW4gQnVkZGhpc20sIGNlcnRhaW4gIHRoaW5ncyBhc3NvY2lhdGVkIHdpdGggdGhlIEJ1ZGRoYSB3ZXJlICB3b3JzaGlwcGVkIGFzIGhpcyBzeW1ib2xzLiBUaGVzZSB3ZXJlICByZXBsYWNlZCB3aXRoIGhpcyBpbWFnZXMgYXQgdGhlIHRpbWUgd2hlbiAgdGhlIENocmlzdGlhbiBlcmEgYmVnYW4uIEltYWdlIHdvcnNoaXAgIHN0YXJ0ZWQgd2l0aCBCdWRkaGlzbSBidXQgd2FzIGZvbGxvd2VkICBvbiBhIGxhcmdlIHNjYWxlIGluIEJyYWhtYW5pc20uIFRoZSBLdXNoYW5zIHN0cmVuZ3RoZW5lZCB0aGUgc2F0cmFwICBzeXN0ZW0gb2YgZ292ZXJubWVudCBhZG9wdGVkIGJ5ICB0aGUgU2hha2FzLiBUaGUgZW1waXJlIHdhcyBkaXZpZGVkIGludG8gIG51bWVyb3VzIHNhdHJhcGllcywgYW5kIGVhY2ggd2FzIHBsYWNlZCAgdW5kZXIgdGhlIHJ1bGUgb2YgYSBzYXRyYXAuIFNvbWUgY3VyaW91cyAgcHJhY3RpY2VzIHN1Y2ggYXMgaGVyZWRpdGFyeSBkdWFsIHJ1bGUsIHRoYXQgIGlzLCB0d28ga2luZ3MgcnVsaW5nIGluIHRoZSBzYW1lIGtpbmdkb20gIHNpbXVsdGFuZW91c2x5LCB3ZXJlIGJlZ3VuLCB3aXRoIGluc3RhbmNlcyAgb2YgZmF0aGVyIGFuZCBzb24gcnVsaW5nIGpvaW50bHkgYXQgdGhlIHNhbWUgIHRpbWUuIFRvcGljOiBQb3N0IE1hdXJ5YW4gSW5kaWEgU3ViLVRvcGljOiBUaGUgSW1wYWN0IGFuZCBDb250cmlidXRpb24gb2YgIENvbnRhY3RzIHdpdGggQ2VudHJhbCBBc2lh",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Shakas and Kushans introduced better  cavalry than Mauryan period.",
        "option2" : " They issue gold coins on a wide scale in  the Indian subcontinent.",
        "option3" : " Emergence of Mahayana Buddhism and  idol worship of Buddha started during  this period.",
        "option4" : " The Satrap system of government was  started by Kushanas in India."
      }
    },
    {
      "index" : 30,
      "question" : "With reference to the Satavahana dynasty in the Deccan region, consider the following statements:1. Satavahana kings were the fi rst rulers to grant tax-free lands to Buddhists and Brahmanas to gain religious merit.2. Satavahana kings claimed to be Brahmanas but they rejected the fourfold Varna system and promoted social equality.3. Satavahana dynasty was founded by Gautamiputra Satakarni by defeating the Kanva dynasty in the post-Maurya era.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChhKSBpcyBjb3JyZWN0OiBUaGUgU2F0YXZhaGFuYXMgIG9yaWdpbmFsbHkgc2VlbXMgdG8gaGF2ZSBiZWVuIGEgRGVjY2FuICB0cmliZS4gVGhleSBob3dldmVyIHdlcmUgc28gYnJhaG1hbml6ZWQgIHRoYXQgdGhleSBjbGFpbWVkIHRvIGJlIEJyYWhtYW5hcy4gIFRoZWlyIG1vc3QgZmFtb3VzIGtpbmcsIEdhdXRhbWlwdXRyYSAgU2F0YWthcm5pLCBkZXNjcmliZWQgaGltc2VsZiBhcyBhIGJyYWhtYW5hICBhbmQgY2xhaW1lZCB0byBoYXZlIGVzdGFibGlzaGVkIHRoZSAgZm91cmZvbGQgdmFybmEgc3lzdGVtIHdoaWNoIGhhZCBmYWxsZW4gaW50byAgZGlzb3JkZXIuICBTYXRhdmFoYW5hcyBraW5ncyB3ZXJlIHRoZSBmaSByc3QgaW4gSW5kaWFuICBoaXN0b3J5IHRvIG1ha2UgdGF4LWZyZWUgbGFuZCBncmFudHMgIHRvIEJ1ZGRoaXN0cyBhbmQgQnJhaG1hbmFzIHRvIGdhaW4gIHJlbGlnaW91cyBtZXJpdC4gVGhpcyBwcmFjdGljZSBiZWNhbWUgbW9yZSAgcHJvbWluZW50IGluIHN1Y2NlZWRpbmcgcGVyaW9kcy4gR2F1dGFtaSBQdXRyYSBTYXRha2FybmkgYm9hc3RlZCB0aGF0IGhlICBoYWQgcHV0IGFuIGVuZCB0byB0aGUgaW50ZXJtaXh0dXJlIGJldHdlZW4gIHRoZSBwZW9wbGUgb2YgZGlmZmVyZW50IHNvY2lhbCBvcmRlcnMuIEhlICBjb25zaWRlcmVkIGl0IHRoZWlyIHByaW1hcnkgZHV0eSB0byB1cGhvbGQgIHRoZSBWYXJuYSBzeXN0ZW0gaS5lLiB0aGUgZm91cmZvbGQgZGl2aXNpb24gIG9mIHNvY2lhbCBzdHJ1Y3R1cmUuIFNhdGF2YWhhbmFzIGJlY2FtZSBwcm9taW5lbnQgaW4gdGhlICBJbmRpYW4gcG9saXRpY2FsIHNjZW5lIHNvbWV0aW1lIGluIHRoZSAgbWlkZGxlIG9mIHRoZSBmaSByc3QgY2VudHVyeSBCQy4gR2F1dGFtaXB1dHJhICBTYXRha2FybmkgKGZpIHJzdCBjZW50dXJ5IEFEKSBpcyBjb25zaWRlcmVkICB0byBiZSB0aGUgZ3JlYXRlc3Qgb2YgdGhlIFNhdGF2YWhhbmEgcnVsZXJzLiAgSGUgaXMgY3JlZGl0ZWQgd2l0aCB0aGUgZXh0ZW5zaW9uIG9mICBTYXRhdmFoYW5hIGRvbWluaW9ucyBieSBkZWZlYXRpbmcgIE5haGFwYW5hLCB0aGUgU2hha2EgcnVsZXIgb2YgV2VzdGVybiAgSW5kaWEuIFNpbXVrYSB3YXMgdGhlIGZvdW5kZXIgb2YgdGhlICBTYXRhdmFoYW5hIER5bmFzdHkuIFRvcGljOiBQb3N0IG1hdXJ5YW4gSW5kaWEgU3ViLVRvcGljOiBUaGUgU2F0YXZhaGFuYXMsIEltcG9ydGFudCAgQXNwZWN0cyBvZiB0aGUgU2F0YXZhaGFuYXM=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements about Village Assemblies:1. 'Ur' was a village assembly of Brahmin landowner, found in south India.2. 'Sabha' was a village assembly found in areas where land owners were not Brahmin.3. 'Nagaram' was an assembly of merchants.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgOiBUaGUgJ3VyJyB3YXMgYSAgdmlsbGFnZSBhc3NlbWJseSBmb3VuZCBpbiBhcmVhcyB3aGVyZSB0aGUgIGxhbmQgb3duZXJzIHdlcmUgbm90IEJyYWhtaW5zLiAgIDE0ICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgOiBUaGUgU2FiaGEsICB3aGljaCB3YXMgYW4gYXNzZW1ibHkgb2YgQnJhaG1pbiAgbGFuZCBvd25lcnMuIFRoaXMgYXNzZW1ibHkgZnVuY3Rpb25lZCAgdGhyb3VnaCBzdWJjb21taXR0ZWVzLCB3aGljaCBsb29rZWQgYWZ0ZXIgIGlycmlnYXRpb24sIGFncmljdWx0dXJhbCBvcGVyYXRpb25zLCBtYWtpbmcgIHJvYWRzLCBsb2NhbCB0ZW1wbGVzLCBldGMuIFN1cHBsZW1lbnRhcnkgTm90ZXM6ICBUaGUgTmFnYXJhbSB3YXMgYW4gb3JnYW5pemF0aW9uIG9mICBtZXJjaGFudHMuIEl0IGlzIGxpa2VseSB0aGF0IHRoZXNlIGFzc2VtYmxpZXMgIHdlcmUgY29udHJvbGxlZCBieSByaWNoIGFuZCBwb3dlcmZ1bCAgbGFuZG93bmVycyBhbmQgbWVyY2hhbnRzLiBUb3BpYzogUG9zdCBtYXVyeWFuIEluZGlhIFN1Yi1Ub3BpYzogU291dGggSW5kaWE6IEZyb20gTWVnYWxpdGhpYyAgdG8gdGhlIHN0YXRlIHBvbGl0eSBvZiBDaGVyYSwgQ2hvbGFzIGFuZCAgUGFuZHlhcw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to the Ancient India history, the terms Sreshti, Sarthavaha, Gandhika refer to: ",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBPcHRpb24gKGQpIGlzIGNvcnJlY3QuICBTdXBwbGVtZW50YXJ5IE5vdGVzOiAgQWx0aG91Z2ggYSBzdWJzdGFudGlhbCBudW1iZXIgb2Ygbm9uLSAgcHJvZHVjaW5nIHBlb3BsZSBjb25jZW50cmF0ZWQgaW4gdGhlICBjaXRpZXMsIHRoZSBhZ2Ugb2YgdGhlIFNoYWthcywgS3VzaGFucywgIFNhdGF2YWhhbmFzICgyMDAgQkMtQUQgMjUwKSwgYW5kIHRoZSAgZmkgcnN0IFRhbWlsIHN0YXRlcyB3YXMgdGhlIG1vc3QgZmwgb3VyaXNoaW5nICBwZXJpb2QgaW4gdGhlIGhpc3Rvcnkgb2YgY3JhZnRzIGFuZCBjb21tZXJjZSAgaW4gYW5jaWVudCBJbmRpYS4gIEFydHMgYW5kIGNyYWZ0cyBpbiBwYXJ0aWN1bGFyIHdpdG5lc3NlZCAgcmVtYXJrYWJsZSBncm93dGguICBXZSBkbyBub3QgaGVhciBvZiBzbyBtYW55IGtpbmRzIG9mIGFydGlzYW5zICBpbiB0aGUgZWFybGllciB0ZXh0cyBhcyBhcmUgbWVudGlvbmVkIGluICB0aGUgd3JpdGluZ3Mgb2YgdGhlIHBlcmlvZC4gVGhlIERpZ2hhICBOaWtheWEsIHdoaWNoIHJlbGF0ZXMgdG8gcHJlLU1hdXJ5YSB0aW1lcywgIG1lbnRpb25zIG5lYXJseSB0d28gZG96ZW4gb2NjdXBhdGlvbnMsICBidXQgdGhlIE1haGF2YXN0dSwgd2hpY2ggcmVsYXRlcyB0byB0aGlzICBwZXJpb2QsIGNhdGFsb2dzIHRoaXJ0eS1zaXgga2luZHMgb2Ygd29ya2VycyAgbGl2aW5nIGluIHRoZSB0b3duIG9mIFJhamdpciwgYW5kIHRoZSBsaXN0IGlzICBub3QgZXhoYXVzdGl2ZS4gIFRoZSBNaWxpbmRhIFBhbmhvIG9yIHRoZSBRdWVzdGlvbnMgb2YgIE1pbGluZGEgZW51bWVyYXRlcyBhcyBtYW55IGFzIHNldmVudHktZmkgdmUgIG9jY3VwYXRpb25zLCBzaXh0eSBvZiB3aGljaCBhcmUgY29ubmVjdGVkICB3aXRoIHZhcmlvdXMgY3JhZnRzLiBBIFRhbWlsIHRleHQga25vd24gIGluIEVuZ2xpc2ggYXMgVGhlIEdhcmxhbmQgb2YgTWFkdXJhaSAgc3VwcGxlbWVudHMgdGhlIGluZm9ybWF0aW9uIHN1cHBsaWVkICBieSB0aGUgdHdvIEJ1ZGRoaXN0IHRleHRzIG9uIGNyYWZ0cyBhbmQgIGNyYWZ0c21lbi4gVGhpcyB0ZXh0IGRvZXMgbm90IGRpc3Rpbmd1aXNoICBiZXR3ZWVuIGNyYWZ0c21lbiBhbmQgc2hvcGtlZXBlcnMuIFRoZSBCdWRkaGlzdCB0ZXh0cyBtZW50aW9uIHRoZSBzcmVzdGhpLCAgd2hvIHdhcyB0aGUgY2hpZWYgbWVyY2hhbnQgb2YgdGhlIG5pZ2FtYSwgIGFuZCB0aGUgc2FydGhhdmFoYSwgdGhlIGNhcmF2YW4gbGVhZGVyICB3aG8gd2FzIHRoZSBoZWFkIG9mIHRoZSBjb3Jwb3JhdGlvbiBvZiAgbWVyY2hhbnRzICh2YW5pamdyYW1vKS4gSXQgYWxzbyBzcGVha3Mgb2YgIG5lYXJseSBoYWxmIGEgZG96ZW4gcGV0dHkgbWVyY2hhbnRzIGNhbGxlZCAgdmFuaWphLiBUbyB0aGVtIHdlIGNhbiBhZGQgcGVyZnVtZXJzIG9yIGFsbC1wdXJwb3NlICBtZXJjaGFudHMgY2FsbGVkIGdhbmRoaWthLiBWYXJpb3VzIHR5cGVzICBvZiBvaWxtZW4sIHNvbWUgb2YgdGhlbSBkZWFsaW5nIGluIHBlcmZ1bWVkICBvaWxzLCBhcmUgY292ZXJlZCBieSB0aGUgdGVybS4gVGhlIHRlcm0gIHZ5YXZhaGFyaSwgdGhhdCBpcywgb25lIHdobyB0cmFuc2FjdHMgIGJ1c2luZXNzLCBpcyBhbHNvIHVzZWQsIGJ1dCB0aGUgdGVybSB2eWFwYXJpICBvciB0cmFkZXIgc2VlbXMgdG8gYmUgbWlzc2luZy4gIFRoZSB0ZXJtIGFncml2YW5pamEgc2VlbXMgdG8gYmUgIG9ic2N1cmUsIGJ1dCB0aGVzZSBtZXJjaGFudHMgbWF5IGhhdmUgIGJlZW4gdGhlIHByZWRlY2Vzc29ycyBvZiB0aGUgYWdyYXdhbGFzIGlmIHdlICBhbGxvdyBmb3Igc29tZSBsaW5ndWlzdGljIGNoYW5nZS4gV2hhdGV2ZXIgIG1heSBiZSB0aGUgbWVhbmluZyBvZiB0aGlzIHRlcm0sIHRoZXJlICB3ZXJlIGNlcnRhaW5seSB3aG9sZXNhbGUgbWVyY2hhbnRzIHdobyAgY29uZHVjdGVkIGJvdGggaW50ZXJuYWwgYW5kIGV4dGVybmFsIHRyYWRlLiBUb3BpYzogUG9zdCBtYXVyeWFuIEluZGlhIFN1Yi1Ub3BpYzogQ3JhZnRzLCBUcmFkZSwgYW5kIFRvd25zIGluIHRoZSAgUG9zdCBNYXVyeWFuIEFnZSBDcmFmdHMsIFRyYWRlLCBhbmQgVG93bnMgIGluIHRoZSBQb3N0IE1hdXJ5YW4gQWdl",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Taxes on lower castes during the Gupta  period.",
        "option2" : " Land tenure systems during Mauryan  Empire.",
        "option3" : " Titles given to ruling classes during  Gupta period",
        "option4" : " Types of merchants during Post-Mauryan  period."
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements regarding Asoka and Asoka's Dhamma:1. The Buddhism was propagated by Asoka as Mahayana sect.2. The XIII Rock Edict gives details about Asoka's war with Kalinga.7 3. Consideration and non-violence to animals and courtesy to relations and liberality to Brahmins is one of the main features of Asoka's Dhamma.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgOiBUaGUgQnVkZGhpc20gIHByb3BhZ2F0ZWQgYnkgQXNva2EgaXMgSGlueWFuYS4gU3VwcGxlbWVudGFyeSBOb3RlczogIFRoZSBFZGljdHMgb2YgQXNva2EgZGVhbCB3aXRoIEFzb2thJ3MgIERoYW1tYSBhbmQgYWxzbyBpbnN0cnVjdGlvbnMgZ2l2ZW4gdG8gaGlzICBvZmZpIGNpYWxzLiAgVGhlIFhJSUkgUm9jayBFZGljdCBnaXZlcyBkZXRhaWxzIGFib3V0ICBoaXMgd2FyIHdpdGggS2FsaW5nYS4gIFRoZSBQaWxsYXIgRWRpY3QgVklJIGdpdmVzIGEgc3VtbWFyeSBvZiBoaXMgIGVmZm9ydHMgdG8gcHJvbW90ZSB0aGUgRGhhbW1hIHdpdGhpbiBoaXMgIGtpbmdkb20uIFRoZSBCdWRkaGlzbSBwcmVhY2hlZCBieSB0aGUgQnVkZGhhICBhbmQgcHJvcGFnYXRlZCBieSBBc29rYSB3YXMga25vd24gIGFzIEhpbmF5YW5hLiBUaGUgbmV3IHNjaG9vbCBvZiBCdWRkaGlzbSBjYWxsZWQgIE1haGF5YW5hIEJ1ZGRoaXNtIGNhbWUgaW50byBleGlzdGVuY2UgIGR1cmluZyB0aGUgZm91cnRoIEJ1ZGRoaXN0IGNvdW5jaWwgYnkgIEthbmlzaGthLiBUaGUgbWFpbiBmZWF0dXJlcyBvZiBBc29rYSdzIERoYW1tYSBhcyAgbWVudGlvbmVkIGluIGhpcyB2YXJpb3VzIEVkaWN0cyBtYXkgYmUgIHN1bW1lZCBhcyBmb2xsb3dzOiBQcm9oaWJpdGlvbiBvZiBhbmltYWwgc2FjcmlmaSBjZXMgYW5kICBmZXN0aXZlIGdhdGhlcmluZ3MgYW5kIGF2b2lkaW5nICBleHBlbnNpdmUgYW5kIG1lYW5pbmdsZXNzIGNlcmVtb25pZXMgIGFuZCByaXR1YWxzLiBFZmZpIGNpZW50IG9yZ2FuaXphdGlvbiBvZiBhZG1pbmlzdHJhdGlvbiAgaW4gdGhlIGRpcmVjdGlvbiBvZiBzb2NpYWwgd2VsZmFyZSBhbmQgIG1haW50ZW5hbmNlIG9mIGNvbnN0YW50IGNvbnRhY3QgIHdpdGggcGVvcGxlIHRocm91Z2ggdGhlIHN5c3RlbSBvZiAgRGhhbW1heWF0cmFzLiBIdW1hbmUgdHJlYXRtZW50IG9mIHNlcnZhbnRzIGJ5ICBtYXN0ZXJzIGFuZCBwcmlzb25lcnMgYnkgZ292ZXJubWVudCAgb2ZmaSBjaWFscy4gQ29uc2lkZXJhdGlvbiBhbmQgbm9uLXZpb2xlbmNlIHRvICBhbmltYWxzIGFuZCBjb3VydGVzeSB0byByZWxhdGlvbnMgYW5kICBsaWJlcmFsaXR5IHRvIEJyYWhtaW5zLiAgIDE1ICBUb2xlcmFuY2UgYW1vbmcgYWxsIHRoZSByZWxpZ2lvdXMgc2VjdHMuICBDb25xdWVzdCB0aHJvdWdoIERoYW1tYSBpbnN0ZWFkIG9mICB0aHJvdWdoIHdhci4gVG9waWM6IEFuY2llbnQgSW5kaWEgU3ViLXRvcGljOiBNYXVyeWFuIEVtcGlyZSBhbmQgQnVkZGhpc20=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following statements regarding Mauryan administration is/are correct?1. Samhartas were the Civil Servants responsible for day-to-day administration.2. The land revenue was normally fi xed as one sixth of the produce. 3. The provincial and local administration was a centralized form of government.Select the correct option from the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZXJlIHdlcmUgY2l2aWwgIHNlcnZhbnRzIGNhbGxlZCBBbWF0eWFzIHRvIGxvb2sgYWZ0ZXIgdGhlICBkYXktdG8tZGF5IGFkbWluaXN0cmF0aW9uLiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgOiBUaGVyZSB3YXMgIGRlY2VudHJhbGl6ZWQgZm9ybSBvZiBnb3Zlcm5tZW50IGF0IHRoZSAgcHJvdmluY2lhbCBhbmQgbG9jYWwgYWRtaW5pc3RyYXRpb24gbGV2ZWwuIE1hdXJ5YW4gYWRtaW5pc3RyYXRpb24gVGhlcmUgd2VyZSBjaXZpbCBzZXJ2YW50cyBjYWxsZWQgIEFtYXR5YXMgdG8gbG9vayBhZnRlciB0aGUgZGF5LXRvLWRheSAgYWRtaW5pc3RyYXRpb24uICBUaGVzZSBvZmZpIGNlcnMgd2VyZSBzaW1pbGFyIHRvIHRoZSBJQVMgIG9mZmkgY2VycyBvZiBpbmRlcGVuZGVudCBJbmRpYS4gU2FtaGFydGEsIHRoZSBjaGllZiBvZiB0aGUgUmV2ZW51ZSAgRGVwYXJ0bWVudCwgd2FzIGluIGNoYXJnZSBvZiB0aGUgY29sbGVjdGlvbiAgb2YgYWxsIHJldmVudWVzIG9mIHRoZSBlbXBpcmUuICBUaGUgcmV2ZW51ZXMgY2FtZSBmcm9tIGxhbmQsIGlycmlnYXRpb24sICBjdXN0b21zLCBzaG9wIHRheCwgZmVycnkgdGF4LCBmb3Jlc3RzLCBtaW5lcyAgYW5kIHBhc3R1cmVzLCBsaWNlbnNlIGZlZSBmcm9tIGNyYWZ0c21lbiwgIGFuZCBmaSBuZXMgY29sbGVjdGVkIGluIHRoZSBsYXcgY291cnRzLiAgVGhlIGxhbmQgcmV2ZW51ZSB3YXMgbm9ybWFsbHkgZmkgeGVkICBhcyBvbmUgc2l4dGggb2YgdGhlIHByb2R1Y2UuIFRoZSBkaXN0cmljdCBhZG1pbmlzdHJhdGlvbiB3YXMgdW5kZXIgIHRoZSBjaGFyZ2Ugb2YgUmFqdWthcywgd2hvc2UgcG9zaXRpb24gIGFuZCBmdW5jdGlvbnMgYXJlIHNpbWlsYXIgdG8gbW9kZXJuICBjb2xsZWN0b3JzLiAgSGUgd2FzIGFzc2lzdGVkIGJ5IFl1a3RhcyBvciAgc3Vib3JkaW5hdGUgb2ZmaSBjaWFscy4gIFZpbGxhZ2UgYWRtaW5pc3RyYXRpb24gd2FzIGluIHRoZSBoYW5kcyAgb2YgR3JhbWFuaSBhbmQgaGlzIG9mZmkgY2lhbCBzdXBlcmlvciAgd2FzIGNhbGxlZCBHb3BhIHdobyB3YXMgaW4gY2hhcmdlIG9mICB0ZW4gb3IgZmkgZnRlZW4gdmlsbGFnZXMuIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogVGhlIE1hdXJ5YXM=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements regarding Mauryan Economy:1. The census in the towns was taken by municipal offi cials to track the movement of population of both foreign and indigenous. 2. There was existence of both civil and criminal courts.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiAgTWF1cnlhbiBFY29ub215OiBLIGF1dGlseWEgbWVudGlvbnMgdGhlIGV4aXN0ZW5jZSBvZiAgYm90aCBjaXZpbCBhbmQgY3JpbWluYWwgY291cnRzLiAgVGhlIGNoaWVmIGp1c3RpY2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQgYXQgIHRoZSBjYXBpdGFsIHdhcyBjYWxsZWQgRGhhcm1hdGhpa2FyaW4uIFRoZXJlIHdlcmUgYWxzbyBzdWJvcmRpbmF0ZSBjb3VydHMgYXQgdGhlICBwcm92aW5jaWFsIGNhcGl0YWxzIGFuZCBkaXN0cmljdHMgdW5kZXIgIEFtYXR5YXMuIERpZmZlcmVudCBraW5kcyBvZiBwdW5pc2htZW50ICBzdWNoIGFzIGZpIG5lcywgaW1wcmlzb25tZW50LCBtdXRpbGF0aW9uIGFuZCAgZGVhdGggd2VyZSBnaXZlbiB0byB0aGUgb2ZmZW5kZXJzLiBUaGUgdGFraW5nIG9mIENlbnN1cyB3YXMgcmVndWxhciBkdXJpbmcgIHRoZSBNYXVyeWFuIHBlcmlvZC4gVGhlIHZpbGxhZ2Ugb2ZmaSBjaWFscyB3ZXJlIHRvIG51bWJlciB0aGUgIHBlb3BsZSBhbG9uZyB3aXRoIG90aGVyIGRldGFpbHMgbGlrZSB0aGVpciAgY2FzdGUgYW5kIG9jY3VwYXRpb24uICBUaGV5IHdlcmUgYWxzbyB0byBjb3VudCB0aGUgYW5pbWFscyBpbiBlYWNoICBob3VzZS4gIFRoZSBjZW5zdXMgaW4gdGhlIHRvd25zIHdhcyB0YWtlbiAgYnkgbXVuaWNpcGFsIG9mZmkgY2lhbHMgdG8gdHJhY2sgdGhlICBtb3ZlbWVudCBvZiBwb3B1bGF0aW9uIGJvdGggZm9yZWlnbiAgYW5kIGluZGlnZW5vdXMuIFRoZSBkYXRhIGNvbGxlY3RlZCB3ZXJlICBjcm9zcyBjaGVja2VkIGJ5IHRoZSBzcGllcy4gVG9waWM6IEFuY2llbnQgSW5kaWEgU3ViLXRvcGljOiBUaGUgTWF1cnlhcw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 & 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements regarding Kautilya's Arthashastra:1. If an alliance is not possible, then surrender is the best option.2. Women were to be considered the most skilled spies.3. A girl should be free to marry anyone she chooses as long as she respects her parents' property rights.Which of the above statement/s is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNg==",
      "description" : "IEV4cGxhbmF0aW9uOiBBbGwgdGhlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuICBLYXV0aWx5YSdzIEFydGhhc2hhc3RyYTogVGhlIHNvY2lhbCBjdXN0b21zIGFkZHJlc3NlZCAgYWRoZXJlZCB0byBIaW5kdSB0cmFkaXRpb25zIGJ1dCAgdGhlIEFydGhhc2hhc3RyYSBnb2VzIHRvIHNvbWUgbGVuZ3RocyBpbiAgc3RpcHVsYXRpbmcgaG93IG1hcnJpYWdlcyBzaG91bGQgb3BlcmF0ZS4gIEFjY29yZGluZyB0byB0cmFkaXRpb25hbCBIaW5kdSBjdXN0b20sIHRoZSAgcGFyZW50cyBvZiBhIGdpcmwgd291bGQgYXJyYW5nZSBhIG1hcnJpYWdlICB3aXRoIGFuIGFjY2VwdGFibGUgYm95IG9mIHRoZSBzYW1lIGNhc3RlICB3aG8gc2hvd2VkIHByb21pc2Ugb2YgZmkgbmFuY2lhbCBzdGFiaWxpdHkgIGFuZCBhIGJyaWdodCBmdXR1cmUuICBLYXV0aWx5YSwgaW4gQm9va3MgSUksIElJSSwgYW5kIElWLCBzdGF0ZXMgIHRoYXQgYSBnaXJsIHNob3VsZCBiZSBmcmVlIHRvIG1hcnJ5ICBhbnlvbmUgc2hlIGNob29zZXMgYXMgbG9uZyBhcyBzaGUgIHJlc3BlY3RzIGhlciBwYXJlbnRzJyBwcm9wZXJ0eSByaWdodHMuICBJZiB0aGUgcGFyZW50cyBhcHByb3ZlIG9mLCBvciBhcnJhbmdlLCBhICBtYXJyaWFnZSB0aGVuIHRoZSBnaXJsIG1heSB0YWtlIGZyb20gaGVyICBwYXJlbnRzJyBob21lIGFueXRoaW5nIHNoZSBoYXMgcmVjZWl2ZWQgIGZyb20gdGhlbTsgaWYgbm90LCB0aGVuIHNoZSBtYXkgdGFrZSAgbm90aGluZy4gIFdvbWVuIHdlcmUgY29uc2lkZXJlZCBlc3BlY2lhbGx5ICBza2lsbGVkIHNwaWVzIGluIHRoYXQgS2F1dGlseWEgbm90ZXMgdGhlaXIgIGFiaWxpdHkgdG8gZXh0cmFjdCBpbmZvcm1hdGlvbiBmcm9tIGxvdmVycyAgc28gY2FzdWFsbHkgdGhhdCBubyBvbmUgd291bGQgc3VzcGVjdCBhbnkgIHVsdGVyaW9yIG1vdGl2ZSBhbmQsIGZ1cnRoZXIsIGFyZSBhYmxlIHRvIHNvdyAgZGlzY29yZCBhbW9uZyBtZW1iZXJzIG9mIGEgZm9yZWlnbiBjb3VydCAgYnkgZmVpZ25pbmcgYWZmZWN0aW9uIGZvciBmaSByc3Qgb25lIGFuZCB0aGVuICBhbm90aGVyIG9mIHRoZSBtYWxlIGNvdXJ0aWVycy4gSWYgYW4gYWxsaWFuY2UgaXMgbm90IHBvc3NpYmxlLCB0aGVuICBzdXJyZW5kZXIgaXMgdGhlIGJlc3Qgb3B0aW9uLCBzYXlzICBLYXV0aWx5YS4gIEFmdGVyIHN1cnJlbmRlciwgY2FyZSBzaG91bGQgYmUgdGFrZW4gdG8gZ2l2ZSAgdXAgYXNzZXRzIHRoYXQgYXJlIG5vdCBwYXJ0aWN1bGFybHkgdXNlZnVsIG9yICAgIDE2ICB0byB1c2Ugc2xvdy1hY3RpbmcgcG9pc29uIG9uIHVzZWZ1bCBhc3NldHMgIGxpa2UgZWxlcGhhbnRzIGFuZCBob3JzZXMuIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogVGhlIE1hdXJ5YXM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the Pallavas, consider the following statements:1. The Pallavas granted lands to the Brahmanas with the condition to pay an enormous amount of land tax.2. The Chola Empire was founded by Rajaraja, who was feudatory of the Pallavas.3. The Shore Temple at Mamallapuram and the Kailasanatha temple at Kanchipuram were built during the reign of Pallavas.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFBhbGxhdmFzICBncmFudGVkIG51bWVyb3VzIHZpbGxhZ2VzIGZyZWUgb2YgdGF4ZXMgIGxhcmdlbHkgdG8gdGhlIEJyYWhtYW5hcy4gU3VjaCBncmFudHMgZmkgbmQgbWVudGlvbiBvbiBzdG9uZXMgYXMgd2VsbCAgYXMgY29wcGVyIHBsYXRlcyBvZiB0aGUgdGltZS4gU3VjaCBCcmFobWlucyAgdmlsbGFnZXMgd2VyZSBleGVtcHRlZCBmcm9tIGFsbCBraW5kcyAgb2YgdGF4ZXMgYW5kIGdvdCBhcyBtYW55IGFzIDE4IGtpbmRzIG9mICBpbW11bml0aWVzIGZyb20gdGhlIHN0YXRlLiBUaGUgYXV0aG9yaXR5IG9mIHRoZSBQYWxsYXZhcyBleHRlbmRlZCAgb3ZlciBib3RoIHNvdXRoZXJuIEFuZGhyYSBhbmQgbm9ydGhlcm4gIFRhbWlsIE5hZHUuIFRoZXkgc2V0IHVwIHRoZWlyIGNhcGl0YWwgYXQgIEthbmNoaXB1cmFtLiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBmb3VuZGVyICBvZiB0aGUgQ2hvbGEgRW1waXJlIHdhcyBWaWpheWFsYXlhLCAobm90ICBSYWphcmFqYSkgd2hvIHdhcyBhdCBmaSByc3QgYSBmZXVkYXRvcnkgb2YgdGhlICBQYWxsYXZhcy4gQnkgdGhlIGVuZCBvZiB0aGUgbmludGggY2VudHVyeSwgdGhlIENob2xhcyAgaGFkIGRlZmVhdGVkIGJvdGggdGhlIFBhbGxhdmFzIG9mIEthbmNoaSAgKFRvbmRhaW1hbmRhbGFtKSBhbmQgd2Vha2VuZWQgdGhlICBQYW5keWFzLCBicmluZ2luZyB0aGUgc291dGhlcm4gVGFtaWwgIHJlZ2lvbiB1bmRlciB0aGVpciBjb250cm9sLiBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgU2hvcmUgIFRlbXBsZSBhdCBNYW1hbGxhcHVyYW0gYW5kIHRoZSAgS2FpbGFzYW5hdGhhIHRlbXBsZSBhdCBLYW5jaGlwdXJhbSB3ZXJlICBidWlsdCBkdXJpbmcgdGhlIHJlaWduIG9mIHRoZSBQYWxsYXZhIEtpbmcgIE5hcmFzaW1oYXZhcm1hbiBJSSAoNjk1IC03MjIgQS5ELikuIFRoZSBQYWxsYXZhcywgdGhlIEthZGFtYmFzLCB0aGUgQ2hhbHVreWFzICBvZiBCYWRhbWksIGFuZCB0aGVpciBvdGhlciBjb250ZW1wb3JhcmllcyAgd2VyZSBncmVhdCBjaGFtcGlvbnMgb2YgVmVkaWMgc2FjcmlmaSBjZXMuIFRvcGljOiBQYWxsYXZhcyBTdWItdG9waWM6IA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 38,
      "question" : "Which one of the following statements regarding the Chalukyas of Badami is not correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzOA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IChhKSBpcyBjb3JyZWN0OiBQdWxha2VzaW4gSSAgKDU0MyAtIDU2NiBDRSkgd2FzIHRoZSByZWFsIGZvdW5kZXIgb2YgdGhlICBDaGFsdWt5YW4ga2luZ2RvbS4gIFN0YXRlbWVudCAoYikgaXMgY29ycmVjdDogVGhlIEFpaG9sZSAgSW5zY3JpcHRpb24sIGFsc28ga25vd24gYXMgdGhlIEFpaG9sZSAgcHJhc2hhc3RpLCBpcyBhIFNhbnNrcml0IGluc2NyaXB0aW9uIGluICBLYW5uYWRhIHNjcmlwdCBhdCBNZWd1dGkgSmFpbiB0ZW1wbGUgaW4gIEFpaG9sZSwgS2FybmF0YWthLCBJbmRpYS4gU3VwcGxlbWVudGFyeSBOb3RlczogIFRoZSBuYW1lIFB1bGFrZXNpIHByb2JhYmx5IG1lYW5zICdUaGUgIEdyZWF0IExpb24ALiAgSGUgYnVpbHQgYSBzdHJvbmcgZm9ydHJlc3MgYXQgVmF0YXBpIChNb2Rlcm4gIEJhZGFtaSkgaW4gQmlqYXB1ciBkaXN0cmljdCBvZiBLYXJuYXRha2EgIGFuZCBkZWNsYXJlZCBpbmRlcGVuZGVuY2UgYnkgcGVyZm9ybWluZyBhICBob3JzZSBzYWNyaWZpIGNlLiAgSGUgYXNzdW1lZCB0aGUgdGl0bGVzIFNhdHlhc3JheWEgKHRoZSAgYXN5bHVtIG9mIHRydXRoKSBhbmQgUmFuYXZpa3JhbWEgKHRoZSAgdmFsb3JvdXMgaW4gd2FyKS4gSXQgd2FzIGNvbXBvc2VkIGJ5IHRoZSBKYWluIHBvZXQgUmF2aWtpcnRpICBpbiBob25vciBvZiBoaXMgcGF0cm9uIGtpbmcgUHVsYWtlc2luICBTYXR5YXNyYXlhIChQdWxha2VzaGluIElJKSBvZiB0aGUgQmFkYW1pICBDaGFsdWt5YSBkeW5hc3R5LiBSYXZpa2lydGkncyBBaWhvbGUgaW5zY3JpcHRpb24gc3BlYWtzIGluICBkZXRhaWwgb2YgdGhlIHZpY3Rvcnkgb2YgUHVsYWtlc2luIElJIG92ZXIgIEhhcnNoYS4gSGlzIGFjY2Vzc2lvbiB0byB0aGUgdGhyb25lIGluIHRoZSB5ZWFyIDYwOSAgQ0UsIG1hcmtzIHRoZSBiZWdpbm5pbmcgb2YgYW4gaW1wb3J0YW50ICBlcG9jaCBpbiB0aGUgaGlzdG9yeSBvZiBEZWNjYW4uIFB1bGFrZXNpbiBJSSBzZW50IGEgY29tcGxpbWVudGFyeSBlbWJhc3N5ICB0byB0aGUgUGVyc2lhbiBraW5nIEtodXNyYXUgSUkgaW4gNjI1LTYyNiAgQ0UuIFRoZSByZWNlcHRpb24gZ2l2ZW4gdG8gdGhlIFBlcnNpYW4gIG1pc3Npb24gaXMsIGluIGZhY3QsIGRlcGljdGVkIGluIG9uZSBvZiB0aGUgIGZhbW91cyBBamFudGEgY2F2ZSBwYWludGluZ3MuICBUaGUgQ2hpbmVzZSwgSGl1ZW4gVHNhbmcgcGFpZCBhIHZpc2l0IHRvICB0aGUgQ2hhbHVreWEga2luZ2RvbSBhbmQgd2FzIGhpZ2hseSAgaW1wcmVzc2VkIGJ5IHRoZSBwb3dlciBhbmQgZWZmaSBjaWVuY3kgb2YgdGhlICBhZG1pbmlzdHJhdGlvbiBvZiBQdWxha2VzaW4gSUkuIFJhdmlraXJ0aSdzIEFpaG9sZSBpbnNjcmlwdGlvbiBzcGVha3MgaW4gIGRldGFpbCBvZiB0aGUgdmljdG9yeSBvZiBQdWxha2VzaW4gSUkgb3ZlciAgSGFyc2hhLiAgQWZ0ZXIgdGhlIHZpY3RvcnkgUHVsYWtlc2luIElJIGFzc3VtZWQgdGhlICB0aXRsZSBvZiBQYXJhbWVzaHZhcmEgKFN1cHJlbWUgTG9yZCkuIFB1bGFrZXNpbiBJICg1NDMgLSA1NjYgQ0UpIGFzc3VtZWQgdGhlICB0aXRsZXMgU2F0eWFzcmF5YSAodGhlIGFzeWx1bSBvZiB0cnV0aCkgYW5kICBSYW5hdmlrcmFtYSAodGhlIHZhbG9yb3VzIGluIHdhcikuIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogQ2hhbHVreWFz",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " Pulakesin I built a strong fortress at  Vatapi (Modern Badami) in Bijapur  district of Karnataka.",
        "option2" : " Aihole inscription speaks in detail about  the victory of Pulakesin II over Harsha.",
        "option3" : " Pulakesin II sent an embassy to the  Persian king Khusrau II.",
        "option4" : " Pulakesin I assumed the title of  Parameshvara, after defeating  Mangalesha."
      }
    },
    {
      "index" : 39,
      "question" : "With reference to the local self-government during the Chola Empire, consider the following statements: 1. The Ur consisted of the tax-paying residents of an ordinary village.2. The Mahasabha was a gathering of adult men in the Brahman villages.8 Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHwzOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBCb3RoIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiAgVGhlIFNlbGYtR292ZXJubWVudCBlbmpveWVkIGJ5IHRoZSBDaG9sYSAgdmlsbGFnZXMgd2FzIGEgdmVyeSBmaSBuZSBzeXN0ZW0uICBUaGUgQ2hvbGEgcGF0dGVybiBvZiBjb21taXR0ZWVzIHdhcyBjYWxsZWQgIHZhcml5YW0uICBUaGVyZSB3ZXJlIHRocmVlIHR5cGVzIG9mIHZpbGxhZ2UgYXNzZW1ibGllcyAgdGhhdCBleGlzdGVkIGluIENob2xhbWFuZGFsYW06IFVyLCBTYWJoYSAgb3IgTWFoYXNhYmhhIGFuZCBOYWdhcmFtLiBUaGUgVXIgIGNvbnNpc3RlZCBvZiB0aGUgdGF4cGF5aW5nIHJlc2lkZW50cyBvZiBhbiAgb3JkaW5hcnkgdmlsbGFnZS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBNYWhhc2FiaGEgIHdhcyBhIGdhdGhlcmluZyBvZiB0aGUgYWR1bHQgbWVuIGluIHRoZSAgQnJhaG1hbiB2aWxsYWdlcyB3aGljaCB3ZXJlIGNhbGxlZCAgYWdyYWhhcmFtcy4gVGhlc2Ugd2VyZSB2aWxsYWdlcyB3aXRoIEJyYWhtYW4gIHNldHRsZW1lbnRzIGluIHdoaWNoIG1vc3Qgb2YgdGhlIGxhbmQgd2FzICByZW50LWZyZWUuICAgMTcgIFRoZXNlIHZpbGxhZ2VzIGVuam95ZWQgYSBsYXJnZSBtZWFzdXJlIG9mICBhdXRvbm9teS4gVGhlIGFmZmFpcnMgb2YgdGhlIHZpbGxhZ2Ugd2VyZSBtYW5hZ2VkIGJ5ICBhbiBleGVjdXRpdmUgY29tbWl0dGVlIHRvIHdoaWNoIGVkdWNhdGVkICBwZXJzb25zIG93bmluZyBwcm9wZXJ0eSB3ZXJlIGVsZWN0ZWQgZWl0aGVyICBieSBkcmF3aW5nIGxvdHMgb3IgYnkgcm90YXRpb24uICBUaGUgTWFoYXNhYmhhIGNvdWxkIGRpc3RyaWJ1dGUgbmV3IGxhbmRzLCAgYW5kIGV4ZXJjaXNlIG93bmVyc2hpcCByaWdodHMgb3ZlciB0aGVtLiAgSXQgY291bGQgYWxzbyByYWlzZSBsb2FucyBmb3IgdGhlIHZpbGxhZ2UgYW5kICBsZXZ5IHRheGVzLiBUb3BpYzogQW5jaWVudCBJbmRpYSBTdWItdG9waWM6IENob2xhcw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the Rashtrakutas in Deccan India consider the following statements:1. The famous rock cut temple of Shiva at Ellora was built by one of the Rashtrakuta Kings, Krishna I.2. The Rashtrakuta rulers were rigid in their religious view and patronised only Shaivism.3. Continuous raids of Rashtrakutas to the north led to rich plunder and extension of the empire to the Ganga valley.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0MA==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBSYXNodHJha3V0YSAgcnVsZSBpbiB0aGUgRGVjY2FuIGxhc3RlZCBmb3IgYWxtb3N0IDIwMCAgeWVhcnMgdW50aWwgdGhlIGVuZCBvZiB0aGUgMTB0aCBjZW50dXJ5LiBUaGUgIHJ1bGVycyB3ZXJlIHRvbGVyYW50IG9mIHRoZWlyIHJlbGlnaW91cyAgdmlld3MgYW5kIHBhdHJvbml6ZWQgbm90IG9ubHkgU2hhaXZpc20gIGFuZCBWYWlzaG5hdmlzbSBidXQgSmFpbmlzbSBhcyB3ZWxsLiBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgOiBUaGV5IGFsc28gIGVuZ2FnZWQgd2l0aCB0aGUgUHJhdGloYXJhcyBmb3IgdGhlICBvdmVybG9yZHNoaXAgb2YgR3VqYXJhdCBhbmQgTWFsd2EuICBUaGUgZmFtb3VzIHJvY2sgY3V0IHRlbXBsZSBvZiBTaGl2YSAgYXQgRWxsb3JhIHdhcyBidWlsdCBieSBvbmUgb2YgdGhlICBSYXNodHJha3V0YSBLaW5ncywgS3Jpc2huYSBJLiBLcmlzaG5hIG1haW50YWluZWQgYW5kIHN5bWJvbGlzZWQgaGlzICBoaWdoIGltcGVyaWFsIHBvc2l0aW9uIGFsc28gdGhyb3VnaCB0aGUgIGdyZWF0IHdvcmtzIG9mIGFydCwgdGhlIGNlbGVicmF0ZWQgdGVtcGxlIG9mICBLYWlsYXNoYSBhdCBFbGxvcmEgYmVpbmcgdGhlIG1vc3QgcHJvbWluZW50ICBhbW9uZyB0aGVtLiBUaGUgdGVtcGxlIG9mIEthaWxhc2hhbmF0aGEgaXMgb25lIG9mIHRoZSAgbGFyZ2VzdCByb2NrLWN1dCB0ZW1wbGVzIGNhcnZlZCBvdXQgb2YgYSAgc2luZ2xlIGh1Z2Ugcm9jay4gQWx0aG91Z2ggdGhlaXIgcmFpZHMgZGlkIG5vdCByZXN1bHQgaW4gdGhlICBleHRlbnNpb24gb2YgdGhlIFJhc2h0cmFrdXRhIEVtcGlyZSB0byB0aGUgIEdhbmdhIHZhbGxleSwgdGhleSBicm91Z2h0IHJpY2ggcGx1bmRlciwgIGFuZCBhZGRlZCB0byB0aGUgZmFtZSBvZiB0aGUgUmFzaHRyYWt1dGFzLiBUaGUgUmFzaHRyYWt1dGFzIGFsc28gZm91Z2h0IGNvbnN0YW50bHkgIGFnYWluc3QgdGhlIGVhc3Rlcm4gQ2hhbHVreWFzIG9mIFZlbmdpIChpbiAgbW9kZXJuIEFuZGhyYSBQcmFkZXNoKSBhbmQgaW4gdGhlIHNvdXRoICBhZ2FpbnN0IHRoZSBQYWxsYXZhcyBvZiBLYW5jaGkgYW5kIHRoZSAgUGFuZHlhcyBvZiBNYWR1cmFpLiBUb3BpYzogQW5jaWVudCBJbmRpYSAgU3ViLXRvcGljOiBSYXNodHJha3V0YXM=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 41,
      "question" : "With reference to the history of Vijayanagara Empire, consider the following pairs: Traveller Foreign region 1. Duarte Barbosa Italy 2. Abdur Razzaq Persia 3. Domingo paes Portugal Which of the pairs given above is/are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0MQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBQYWlyIDEgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZCA6IER1YXJ0ZSAgQmFyYm9zYSB3YXMgYSBQb3J0dWd1ZXNlIGZhY3RvciBhdCAgQ2FubmFub3JlIGFuZCBDb2NoaW4gaW4gYmV0d2VlbiAxNTAzICBhbmQgKGFib3V0KSAxNTE3IGFuZCBoYWQgbGVmdCBiZWhpbmQgYW4gIGludGVyZXN0aW5nIGFjY291bnQgb24gdHJhZGUgYW5kIHBvbGl0aWNhbCAgZXZlbnRzIG9mIHRoZSBzb3V0aGVhc3QgaW5jbHVkaW5nIEJlbmdhbC4gSGUgaGFzIGdpdmVuIGEgdml2aWQgYWNjb3VudCBvZiB0aGUgIFZpamF5YW5hZ2FyYSBnb3Zlcm5tZW50IHVuZGVyICBLcmlzaG5hZGV2YSBSYXlhIGluIGhpcyBmYW1vdXMgYm9vayAtIEFuICBBY2NvdW50IG9mIENvdW50cmllcyBib3JkZXJpbmcgdGhlIEluZGlhbiAgT2NlYW4gYW5kIHRoZWlyIEluaGFiaXRhbnRzLiBTdXBwbGVtZW50YXJ5IE5vdGVzOiAgQWJkdWwgUmF6emFxIHdhcyBhIFBlcnNpYW4gVGltdXJpZCAgY2hyb25pY2xlciBhbmQgSXNsYW1pYyBzY2hvbGFyIHdobyB3YXMgYW4gIGFtYmFzc2Fkb3Igb2YgU2hhaCBSdWtoIG9mIFNhbWFycWFuZCBhdCAgdGhlIENvdXJ0IG9mIHRoZSBaYW1vcmluIG9mIENhbGljdXQuICBIZSBnaXZlcyBhbiBhY2NvdW50IG9mIHRoZSByZWlnbiBvZiBEZXZhcmF5YSAgSUkuICBIZSBjaHJvbmljbGVkIGhpcyBtaXNzaW9uIHRvIEluZGlhbiBpbiBoaXMgIGJvb2sgZW50aXRsZWQgLSBNYXRsYXVzLVNhZGFpbiB3YSBNYWptYS0gdWwtQmFocmFpbiAoVGhlIFJpc2Ugb2YgdGhlIFR3byBhdXNwaWNpb3VzICBjb25zdGVsbGF0aW9ucyBhbmQgdGhlIENvbmZsIHVlbmNlIG9mIHRoZSAgVHdvIE9jZWFucyksIHdoaWNoIHdhcyB0cmFuc2xhdGVkIGludG8gIEZyZW5jaC1hbmQgdGhlbiwgaW4gMTg1NSwgdGhlIHRyYW5zbGF0aW9uICB3YXMgdHJhbnNsYXRlZCBpbnRvIEVuZ2xpc2ggYnkgUi5ILiBNYWpvci4gSGUgYWxzbyBsZWZ0IHZpdmlkIGFjY291bnRzIG9mIHRoZSB0aHJpdmluZyAgc2hpcHBpbmcgdHJhZGUgaW4gdGhlIEluZGlhbiBPY2VhbiBkdXJpbmcgIHRoZSAxNHRoIGFuZCAxNXRoIGNlbnR1cmllcy4gQXJvdW5kIDE1MjAsIERvbWluZ28gUGFlcywgYSAgUG9ydHVndWVzZSBhZHZlbnR1cmVyLCB2aXNpdGVkIHRoZSAgVmlqYXlhbmFnYXJhIEVtcGlyZSBpbiB0aGUgRGVjY2FuIHJlZ2lvbiAgb2Ygc291dGhlcm4gSW5kaWEuICBIZSB0cmF2ZWxsZWQgdGhlcmUgd2l0aCBhIGdyb3VwIG9mIHRyYWRlcnMgIGZyb20gR29hJ3MgY29sb255IGF0IHRoZSB0aW1lLiBQYWVzIHZpc2l0ZWQgVmlqYXlhbmFnYXJhIGR1cmluZyB0aGUgcmVpZ24gIG9mIEtpbmcgS3Jpc2huYSBEZXZhIFJheWEsIGFuZCBpbiBoaXMgICdDaHJvbmljYSBkb3MgcmVpcyBkZSBCaXNuYWdhJywgaGUgZGVzY3JpYmVkICBoaXMgb2JzZXJ2YXRpb25zIG9mIHRoZSByZWFsbSAoJ0Nocm9uaWNsZSBvZiAgdGhlIFZpamF5YW5hZ2FyIGtpbmdzJykuIEhpcyB0aG9yb3VnaCByZXBvcnQgaXMgb25lIG9mIHRoZSBmZXcgIGRvY3VtZW50ZWQgZm9yZWlnbiB2aXNpdG9yIGRlc2NyaXB0aW9ucyBvZiAgdGhlIGtpbmdkb20gYW5kIGl0cyBjYXBpdGFsLCBWaWpheWFuYWdhcmEgIChIYW1waSkuIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogRm9yZWlnbiBUcmF2ZWxsZXJzIG9mIEFuY2llbnQgIEluZGlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following statements in respect of the Gupta Empire: 1. The Lost-Wax technique emerged in the Gupta Era.2. The Guptas followed the weight system of Kushana gold coins.3. Dhamekh Stupa at Sarnath is an imposing cylindrical structure built completely of stone.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Mg==",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBCcm9uemUgY2FzdGluZyAgd2FzIHdpZGVseSBwcmFjdGlzZWQgaW4gdGhlIEhhcmFwcGFuICBjaXZpbGl6YXRpb24uICBUaGUgYnJvbnplIHNjdWxwdHVyZXMgd2VyZSBtYWRlIHVzaW5nICB0aGUgJ0xvc3QgV2F4IFRlY2huaXF1ZScuICBUaGUgbG9zdC13YXggcHJvY2VzcyBpcyBhIHRlY2huaXF1ZSB1c2VkICBmb3IgbWFraW5nIG9iamVjdHMgb2YgbWV0YWwsIGVzcGVjaWFsbHkgaW4gIEhpbWFjaGFsIFByYWRlc2gsIE9kaXNoYSwgQmloYXIsIE1hZGh5YSAgUHJhZGVzaCBhbmQgV2VzdCBCZW5nYWwuICBJbiBlYWNoIHJlZ2lvbiwgYSBzbGlnaHRseSBkaWZmZXJlbnQgdGVjaG5pcXVlICBpcyB1c2VkLiAgIDE4ICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgOiBUaGUgRGhhbWVraCAgU3R1cGEgaW4gU2FybmF0aCBpcyBhIG1hc3NpdmUgR3VwdGEtIGVyYSBjeWxpbmRyaWNhbCBidWlsZGluZyBtYWRlIHBhcnRseSBvZiAgc3RvbmUgYW5kIHBhcnRpYWxseSBvZiBicmljay4gVGhlIHN0b25lIHN1Yi1zdHJ1Y3R1cmUgZmVhdHVyZXMgZWlnaHQgIHByb2plY3RpbmcgZmFjZXMgd2l0aCBlbm9ybW91cyBuaWNoZXMgZm9yICBzY3VscHR1cmUsIGFzIHdlbGwgYXMgZmkgbmVseSBjYXJ2ZWQgZmwgb3JhbCBhbmQgIGdlb21ldHJpY2FsIGRlc2lnbnMuIFRoZSBHdXB0YXMgZm9sbG93ZWQgdGhlIHdlaWdodCBzeXN0ZW0gb2YgIEt1c2hhbmEgZ29sZCBjb2lucy4gVGhlIGVhcmx5IEt1c2hhbiBraW5ncyBpc3N1ZWQgbWFueSBnb2xkICBjb2lucyB3aXRoIG1vcmUgbWV0YWxsaWMgcHVyaXR5IHRoYW4gdGhlICBHdXB0YXMgZ29sZCBjb2lucy4gVGhlIGVtZXJnZW5jZSBvZiB0aGUgR3VwdGEgRW1waXJlIGluICB0aGUgNHRoIENlbnR1cnkgQS5ELiBpcyBvZnRlbiBoYWlsZWQgYXMgdGhlICAnR29sZGVuIHBlcmlvZCBvZiBJbmRpYW4gQXJjaGl0ZWN0dXJlJy4gIFdoaWxlIHRoZSBlYXJsaWVyIEd1cHRhIHJ1bGVycyB3ZXJlICBCdWRkaGlzdHMgYW5kIGNvbnRpbnVlZCB0aGUgdHJhZGl0aW9ucyBvZiAgQnVkZGhpc3QgYXJjaGl0ZWN0dXJlLCB0ZW1wbGUgYXJjaGl0ZWN0dXJlICBjYW1lIHRvIHRoZSBmb3JlZnJvbnQgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiAgdGhlIEhpbmR1IHJ1bGVycyBvZiB0aGUgbGF0ZXIgR3VwdGEgcGhhc2UuIFRlbXBsZSBhcmNoaXRlY3R1cmUgcmVhY2hlZCBpdHMgY2xpbWF4ICBkdXJpbmcgdGhpcyBwZXJpb2QuIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogUmlzZSBvZiB0aGUgR3VwdGFz",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements: 1. The Gupta kings maintained a regular department for the proper survey and measurement of land.2. Antyajas were the highest in the varna scheme during the Gupta period.3. The Guptas issued coins in copper, silver and lead but they were not used for purposes of commercial exchange.4. Sarthavaha in the Gupta period refers to the head of the artisan community.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Mw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IDogVGhlIEd1cHRhIGtpbmdzICBtYWludGFpbmVkIGEgcmVndWxhciBkZXBhcnRtZW50IGZvciB0aGUgIHByb3BlciBzdXJ2ZXkgYW5kIG1lYXN1cmVtZW50IG9mIGxhbmQgYXMgIHdlbGwgYXMgZm9yIHRoZSBjb2xsZWN0aW9uIG9mIGxhbmQgcmV2ZW51ZS4gQW5vdGhlciBwcm9taW5lbnQgaGlnaCBvZmZpIGNpYWwgd2FzICBQdXN0YXBhbGEgKHJlY29yZC1rZWVwZXIpLiBJdCB3YXMgaGlzIGR1dHkgIHRvIG1ha2UgZW5xdWlyaWVzIGJlZm9yZSByZWNvcmRpbmcgYW55ICB0cmFuc2FjdGlvbi4gU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IDogVGhlIEJyYWhtYW5hcyAgY2FtZSB0byBiZSByZWNvZ25pemVkIGFzIHRoZSBwdXJlc3QgYW5kICB0aGVyZWZvcmUgdGhlIGhpZ2hlc3QgVmFybmEuIFNpbmNlIHRoZXkgd2VyZSBhc3NvY2lhdGVkIHdpdGggU2Fuc2tyaXRpYyAgbGVhcm5pbmcgYW5kIHBlcmZvcm1lZCBwcmllc3RseSBmdW5jdGlvbnMuICB0aGV5IGNhbWUgdG8gYmUgY2xvc2VseSBjb25uZWN0ZWQgd2l0aCByb3lhbCAgcG93ZXIuIEFudHlhamFzIG9yIHVudG91Y2hhYmxlcyB3ZXJlIGNvbnNpZGVyZWQgIGltcHVyZSwgZXZlbiB0aGVpciB0b3VjaCB3YXMgY29uc2lkZXJlZCAgaW1wdXJlIGFuZCB0aGVpciBwaHlzaWNhbCBwcmVzZW5jZSBpbiBhcmVhcyAgd2hlcmUgaGlnaGVyIHZhcm5hcyBsaXZlZCBhbmQgbW92ZWQgd2FzICBub3QgYWxsb3dlZC4gU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0IDogQ29tbWVyY2lhbCAgYWN0aXZpdGllcyBjb250aW51ZWQgaW4gdGhlIEd1cHRhIHBlcmlvZCBhcmUgIGV2aWRlbnQuIExpa2UgdGhlaXIgS3VzaGFuYSBwcmVkZWNlc3NvcnMsIHRoZSBHdXB0YSAgcnVsZXJzIHRvbywgbWludGVkIGNvaW5zIG9mIGRpZmZlcmVudCB0eXBlcywgIGFuZCB0aGUgZ29sZCBjb2lucyBvZiB0aGUgR3VwdGEgcnVsZXJzIHNob3cgIGV4Y2VsbGVudCBxdWFsaXRpZXMgb2YgY3JhZnRzbWFuc2hpcC4gIFRoZSBHdXB0YXMgYWxzbyBpc3N1ZWQgY29pbnMgaW4gY29wcGVyLCAgc2lsdmVyIGFuZCBsZWFkLiAgVGhlc2UgY29pbnMgd2VyZSB1c2VkIGZvciBwdXJwb3NlcyBvZiAgY29tbWVyY2lhbCBleGNoYW5nZSBhbmQgaW4gc29tZSByZWdpb25zICBvZiB0aGUgR3VwdGEgRW1waXJlIGF0IGxlYXN0LCB0aGUgbWVyY2hhbnRzICBoZWxkIGEgaGlnaCBwb3NpdGlvbiBpbiBzb2NpZXR5LiBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IER1cmluZyB0aGUgIEd1cHRhIHBlcmlvZCwgdGhlIFNhcnRoYXZhaGEgd2FzIGEgIGNhcmF2YW4gdHJhZGVyLiBIZSBjYXJyaWVkIGhpcyBtZXJjaGFuZGlzZSB0byBkaWZmZXJlbnQgIHBsYWNlcyBmb3IgcHJvZmkgdGFibGUgc2FsZS4gIFNhcnRoYXZhaGFzIG9mdGVuIHNvbGQgdGhlaXIgZ29vZHMgdGhyZWUgb3IgIGZvdXIgdGltZXMgdGhlaXIgb3JpZ2luYWwgcHJpY2UuIFByYXRoYW1hLUt1bGlrYSB3YXMgaGVhZCBvZiB0aGUgYXJ0aXNhbiAgY29tbXVuaXR5LiBUb3BpYzogQW5jaWVudCBJbmRpYSBTdWItdG9waWM6IEVjb25vbXkgYW5kIHNvY2lldHkgZHVyaW5nICBHdXB0YSBwZXJpb2QgKGEpIDQ0LiBDb3JyZWN0IGFuc3dlcjogIEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgQ29ycmVjdDogSW4gSGFyc2hhJ3MgIGVtcGlyZSwgbGF3IGFuZCBvcmRlciB3YXMgbm90IHdlbGwgIG1haW50YWluZWQuIEhzdWFuIFRzYW5nIHdhcyByb2JiZWQgb2YgaGlzIGJlbG9uZ2luZ3MsICBhbHRob3VnaCBoZSByZXBvcnRzIHRoYXQgYWNjb3JkaW5nIHRvIHRoZSAgbGF3cyBvZiB0aGUgbGFuZCwgc2V2ZXJlIHB1bmlzaG1lbnRzIHdlcmUgIGluZmwgaWN0ZWQgZm9yIGNyaW1lLiBSb2JiZXJ5IHdhcyBjb25zaWRlcmVkIHRvIGJlIGEgc2Vjb25kICB0cmVhc29uIGZvciB3aGljaCB0aGUgcmlnaHQgaGFuZCBvZiB0aGUgIHJvYmJlciB3YXMgYW1wdXRhdGVkLiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEthbm5hdWogIGFzc2VtYmx5IHdhcyBjb252ZW5lZCB0byBwdWJsaWNpc2UgYW5kICBwb3B1bGFyaXNlIHRoZSBkb2N0cmluZXMgb2YgTWFoYXlhbmEgIEJ1ZGRoaXNtIChub3QgSGluYXlhbmEgQnVkZGhpc20pLiBUaGUgS2FubmF1aiBhc3NlbWJseSAoNjQzIEFEKSB3YXMgaGVsZCAgaW4gdGhlIGhvbm91ciBvZiBIaWV1biBUc2FuZyAoQ2hpbmVzZSAgcGlsZ3JpbSkuIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgOiBDaGluZXNlIHBpbGdyaW0gIEhzdWFuIFRzYW5nLCBsZWZ0IENoaW5hIGluIEFEIDYyOSBmb3IgIEluZGlhIHRvIHN0dWR5IGFuZCBjb2xsZWN0IEJ1ZGRoaXN0IHRleHRzICBpbiBOYWxhbmRhIFVuaXZlcnNpdHkgKEJpaGFyKSBkdXJpbmcgdGhlICByZWlnbiBvZiBIYXJzaGEuIFNwZW5kaW5nIG1hbnkgeWVhcnMgaW4gSGFyc2hhJ3MgY291cnQsICBoZSB3YXMgYWJsZSB0byBnZXQgZ2VuZXJhbCBlbmRvd21lbnRzICBpbiB0aGUgZmF2b3VyIG9mIEJ1ZGRoaXNtIGFuZCB1bHRpbWF0ZWx5ICBpbmZsIHVlbmNlZCBIYXJzaGEgaW50byBhIGdyZWF0IHN1cHBvcnRlciBvZiAgQnVkZGhpc20uIFRvcGljOiBBbmNpZW50IEluZGlhIFN1Yi10b3BpYzogSGFyc2hhdmFyZGFuYSwgYWRtaW5pc3RyYXRpb24sICBlY29ub215LCBIaXVlbiBUc2FuZyAgIDE5IA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 2 and 4 Only ",
        "option2" : " 1 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1. The grihapati of the Rigveda was not a house holder heading a patriarchal joint family but the head of an extended kin-group.9 2. Child marriage, purdah and sati system were common practices in Rig Vedic Aryan society.3. They followed the four varna system and Vaisyas were responsible for carrying out activities of agriculture, trade etc.Which of the statement(s) given above regarding Rig Vedic Aryan society and economy is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0NQ==",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGdyaWhhcGF0aSBvZiAgdGhlIFJpZ3ZlZGEgd2FzIG5vdCBhIGhvdXNlIGhvbGRlciBoZWFkaW5nICBhIHBhdHJpYXJjaGFsIGpvaW50IGZhbWlseSBidXQgdGhlIGhlYWQgb2YgYW4gIGV4dGVuZGVkIGtpbi1ncm91cCB3aGljaCBoYWQgcmVzaWRlbnRpYWwgIHVuaXR5IGFuZCBmb3JtZWQgb25lIHVuaXQgZm9yIHNvY2lhbCwgIGVjb25vbWljIGFuZCByaXR1YWwgcHVycG9zZXMuICwgcHJvdGVjdGlvbiAgYW5kIHByb3NwZXJpdHkgb2YgaGlzIGtpbi1ncm91cC4gcGVyc29uIG9yICBhIHdpZG93ZXIuIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCA6IFRoZXJlIHdhcyBubyAgY2hpbGQgbWFycmlhZ2UgaW4gdGhlIFJpZy1WZWRhIHNvY2lldHkuICBHaXJscyBsaXZlZCBpbiB0aGUgaG91c2Ugb2YgdGhlaXIgcGFyZW50cyAgdGlsbCB0aGV5IGF0dGFpbmVkIG1hcnJpYWdlYWJsZSBhZ2UuIFRoZXkgIGhhZCBmcmVlZG9tIHRvIHNlbGVjdCB0aGVpciBodXNiYW5kcy4gVGhlICBWZWRpYyB3b21lbiB0b29rIHBhcnQgaW4gdGhlIGhpZ2hlc3Qgc29jaW8tIHJlbGlnaW91cyBkdXRpZXMuIFRoZXJlIHdhcyBubyBwdXJkYWggYW5kICBzYXRpIHN5c3RlbSBhdCB0aGF0IHRpbWUuIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgOiBUaGUgQXJ5YW5zICBiZWxpZXZlZCBpbiB0aGUgc3lzdGVtIG9mIENoYXR1cmFzaHJhbWEgb3IgIHRoZSBmb3VyLSBmb2xkIGRpdmlzaW9uIG9mIG9uZSdzIGxpZmUuICBUb3BpYzogQW5jaWVudCBJbmRpYSBTdWItdG9waWM6IFJpZyBWZWRpYyBwZXJpb2Q=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1, 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " 1 and 2 only "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements about the Later Vedic Age:1. In this period the structure of the caste system became hereditary.2. Well planned education system evolved during this period.3. Rice became the staple food of Later Vedic Aryans and there was a decline in meat eating,4. Inland as well as overseas trade evolved but regular coinage did not start.Choose the correct option:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Ng==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IDogTW9zdCBpbXBvcnRhbnQgIGNoYW5nZSB3YXMgdGhlIGV2b2x1dGlvbiBvZiB0aGUgY2FzdGUgIHN5c3RlbS4gVmFyaW91cyBzdWIgY2FzdGVzIGV2b2x2ZWQgaW4gIGFkZGl0aW9uIHRvIHRoZSB0cmFkaXRpb25hbCBmb3VyLWNhc3Rlcy4gVGhlICBCcmFobWFuYXMgYW5kIEtzaGF0cml5YXMgZW1lcmdlZCBhcyB0aGUgIHR3byBsZWFkaW5nIGNhc3RlcyBvdXQgb2YgdGhlIGdlbmVyYWwgbWFzcyAgb2YgdGhlIHBvcHVsYXRpb24sIGtub3duIGFzIHZhaXN5YXMuIFRoZSAgdmFpc3lhcyB3ZXJlIHN1cGVyaW9yIHRvIHRoZSBzdWRyYXMgYnV0IHRoZWlyICBwb3NpdGlvbiB3YXMgc3RlYWRpbHkgZGV0ZXJpb3JhdGluZy4gVGhlICBzdHJ1Y3R1cmUgb2YgdGhlIGNhc3RlIHN5c3RlbSBiZWNhbWUgIGhlcmVkaXRhcnkuIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgOiBBIHZhc3QgbWFzcyBvZiAgdmVkaWMgbGl0ZXJhdHVyZSBhcyB3ZWxsIGFzIGEgaGlnaGx5IGRldmVsb3BlZCAgaW50ZWxsZWN0dWFsIGxpZmUgc3BlYWtzIGFidW5kYW50bHkgYWJvdXQgYSAgd2VsbC1wbGFubmVkIHN5c3RlbSBvZiBlZHVjYXRpb24gaW4gdGhlICBsYXRlciBWZWRpYyBQZXJpb2QuIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEluIHRoZSBsYXRlciAgVmVkaWMgYWdlLCByaWNlIGJlY2FtZSBhIHN0YXBsZSBmb29kIG9mICB0aGUgcGVvcGxlLiBHcmFkdWFsbHkgdGhlIHByYWN0aWNlIG9mICBlYXRpbmcgbWVhdCB3YXMgZGVjbGluZWQuIEtpbGxpbmcgb2YgY293cyAgd2FzIGxvb2tlZCBhdCB3aXRoIGRpc2Zhdm9yLiBXb29sIHdhcyB1c2VkICBpbiBhZGRpdGlvbiB0byBjb3R0b24uIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QgOiBXaXRoIHRoZSBncm93dGggIG9mIGNpdmlsaXphdGlvbiwgdGhlIHZvbHVtZSBvZiB0cmFkZSBhbmQgIGNvbW1lcmNlIGhhZCBpbmNyZWFzZWQgYnkgbGVhcHMgYW5kICBib3VuZHMuIEJvdGggaW5sYW5kIGFuZCBvdmVyc2VhcyAgdHJhZGVzIHdlcmUgZGV2ZWxvcGVkLiBJbmxhbmQgdHJhZGUgd2FzICBjYXJyaWVkIG9uIHdpdGggdGhlIEtpcmF0YXMgaW5oYWJpdGluZyB0aGUgIG1vdW50YWlucy4gVGhleSBleGNoYW5nZWQgdGhlIGhlcmJzIGZvciAgY2xvdGhlcywgbWF0dHJlc3NlcyBhbmQgc2tpbnMuIFRoZSBwZW9wbGUgIGJlY2FtZSBmYW1pbGlhciB3aXRoIHRoZSBuYXZpZ2F0aW9uIG9mIHRoZSAgc2Vhcy4gUmVndWxhciBjb2luYWdlIHdhcyBub3Qgc3RhcnRlZC4gVGhlIHdvbWVuIGxvc3QgdGhlaXIgaGlnaCBwb3NpdGlvbiB3aGljaCAgdGhleSBoYWQgaW4gdGhlIFJpZyBWZWRpYyBBZ2UuIFRoZXkgd2VyZSAgZGVwcml2ZWQgb2YgdGhlaXIgcmlnaHQgdG8gdGhlIFVwYW5heWFuYSAgY2VyZW1vbnkgYW5kIGFsbCB0aGVpciBzYWNyYW1lbnRzLCAgZXhjbHVkaW5nIG1hcnJpYWdlLCB3ZXJlIHBlcmZvcm1lZCAgd2l0aG91dCByZWNpdGF0aW9uIG9mIFZlZGljIG1hbnRyYXMuICBQb2x5Z2FteSBwcmV2YWlsZWQgaW4gdGhlIHNvY2lldHkuIE1hbnkgb2YgIHRoZSByZWxpZ2lvdXMgY2VyZW1vbmllcywgZm9ybWVybHkgcHJhY3Rpc2VkICBieSB0aGUgd2lmZSwgd2VyZSBub3cgcGVyZm9ybWVkIGJ5IHRoZSAgcHJpZXN0cy4gU2hlIHdhcyBub3QgYWxsb3dlZCB0byBhdHRlbmQgdGhlICBwb2xpdGljYWwgYXNzZW1ibGllcy4gQmlydGggb2YgYSBkYXVnaHRlciAgYmVjYW1lIHVuZGVzaXJhYmxlLWZvciBzaGUgd2FzIHJlZ2FyZGVkICBhcyBhIHNvdXJjZSBvZiBtaXNlcnkuIFRoZSBjdXN0b20gb2YgY2hpbGQgIG1hcnJpYWdlIGFuZCBkb3dyeSBjcmVwdCBpbi4gVGhlIHdvbWVuICBsb3N0IHRoZWlyIGhvbm91cmVkIHBvc2l0aW9uIGluIHNvY2lldHkuIFRvcGljOiBBbmNpZW50IEhpc3RvcnkgU3ViLXRvcGljOiBMYXRlciBWZWRpYyBBZ2U=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 2, 3 and 4 only ",
        "option4" : " All are correct "
      }
    },
    {
      "index" : 47,
      "question" : "Read the following statements about religion in the Vedic Age:1. Brahma, Vishnu, Siva were the main gods in the Rig Vedic Age.2. New Gods like Varun, Indra, Agni, Surya, Usha etc appeared in the Later Vedic Age.3. Sacrifi ces became an important thing in worship in the Later Vedic Age.Choose the correct option:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0Nw==",
      "description" : "IEV4cGxhbmF0aW9uOiAgRHVyaW5nIHRoZSBsYXRlciBWZWRpYyBwZXJpb2QgdGhlIHJlbGlnaW91cyAgc3Bpcml0IHVuZGVyd2VudCBhIGdyZWF0IGNoYW5nZS4gUmVsaWdpb24gIHdhcyBvdmVyc2hhZG93ZWQgd2l0aCByaXRlcyBhbmQgcml0dWFscy4gIE5ldyBnb2RzIGFuZCBnb2RkZXNzZXMgZW1lcmdlZCBkdXJpbmcgIHRoaXMgcGVyaW9kLiBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBSaWcgIFZlZGljIGdvZHMsIFZhcnVuLCBJbmRyYSwgQWduaSwgU3VyeWEsICBVc2hhIGV0Yy4gbG9zdCB0aGVpciBjaGFybS4gVGhlIHBlb3BsZSAgd29yc2hpcHBlZCB0aGVtIHdpdGggbGVzcyB6ZWFsLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBOZXcgZ29kcyAgbGlrZSBTaXZhLCBSdXBhLCBWaXNobnUsIEJyYWhtYSBldGMuICBhcHBlYXJlZCBpbiB0aGUgcmVsaWdpb3VzIGZpIHJtYW1lbnQgb2YgIHRoZSBMYXRlciBWZWRpYyBQZXJpb2QuIER1cmluZyB0aGlzIHBlcmlvZCB0aGUgcml0ZXMgYW5kIGNlcmVtb25pZXMgIG9mIFZlZGljIHJlbGlnaW9uIHdlcmUgZWxhYm9yYXRlZCBhbmQgYmVjYW1lICBjb21wbGV4LiBJbiB0aGUgUmlnIFZlZGljIGFnZSBZYWpuYXMgd2VyZSBhICBzaW1wbGUgYWZmYWlyIHdoaWNoIGV2ZXJ5IGhvdXNlaG9sZGVyIGNvdWxkICBkby4gU3RhdGVtZW50IDMgaXMgY29ycmVjdCA6IEJ1dCBpbiB0aGUgIGxhdGVyIFZlZGljIGFnZSwgc2FjcmlmaSBjZSBiZWNhbWUgYW4gIGltcG9ydGFudCB0aGluZyBpbiB3b3JzaGlwLiBOb3cgdGhlICBwcmllc3RseSBjbGFzcyBkZXZvdGVkIHRoZWlyIGVuZXJneSB0byBmaSBuZCAgb3V0IHRoZSBoaWRkZW4gYW5kIG15c3RpYyBtZWFuaW5nIG9mIHRoZSAgcml0ZXMgYW5kIGNlcmVtb25pZXMuIFRvcGljOiBBbmNpZW50IEhpc3RvcnkgIFN1Yi10b3BpYzogTGF0ZXIgVmVkaWMgQWdl",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 3 only "
      }
    },
    {
      "index" : 48,
      "question" : "With respect to the geography of the Vedic Age, consider the following statements: 1. Ravi, Beas and Sutlej are among the important rivers of this region.2. The major part of the area possessed by Aryans in the Rig Vedic period came to be known as Sapta Sindhu.3. The Rig Vedic period can be considered between 1500 BC and 1000 BC.Which of the above statements is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0OA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCA6IFRoZSBSaWd2ZWRhICBtZW50aW9ucyB0aGUgZm9sbG93aW5nIHJpdmVyczogS3ViaGEgIChtb2Rlcm4gS2FidWwpLCB0aGUgU3V2YXN0dSAoU3dhdCksIHRoZSAgS3J1bXUgKEt1cnJhbSksIHRoZSBHb21hdGkgKEd1bWFsKSwgIHRoZSBTaW5kaHUgKEluZHVzKSBhbmQgaXRzIGZpIHZlIHRyaWJ1dGFyaWVzICB2aXouLCBWaXRhc3RhIChKaGVsdW0pLCBBc2tpbmkgKENoZW5hYiksICBQYXJ1c2huaSAoUmF2aSksIFN1dHVkcmkgKFN1dGxlaikgYW5kICAgIDIwICBWaXBhc2EgKEJlYXMpLCB0aGUgU3VzaG9tYSAoU29oYW4pLCAgdGhlIE1hcnVkdnJpZGhhIChNYXJ1d2FyZHdhbiksIHRoZSAgU2FyYXN2YXRpLCB0aGUgRHJpc2hhZHZhdGkgKHRoZSBSYWtzaGkgb3IgIENoaXRhbmcpLCB0aGUgWWFtdW5hLCB0aGUgR2FuZ2EgYW5kIHRoZSAgU2FyYXl1LiBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IDogVGhlIG1lbnRpb24gb2YgIHRoZXNlIHJpdmVycyBpbXBsaWVzIHRoZSBwb3NzZXNzaW9uIGJ5IHRoZSAgQXJ5YW5zIG9mIGEgY29uc2lkZXJhYmxlIHBvcnRpb24gb2YgdGhlICBjb3VudHJ5IHN0cmV0Y2hpbmcgZnJvbSBlYXN0ZXJuIEFmZ2hhbmlzdGFuICB0byB0aGUgdXBwZXIgdmFsbGV5IG9mIHRoZSBHYW5nZXMuIFRoZSBtYWpvciAgcGFydCBvZiB0aGlzIGFyZWEgY2FtZSB0byBiZSBrbm93biBhcyAgU2FwdGEgU2luZGh1IG9yIHRoZSBsYW5kIG9mIHRoZSBzZXZlbiAgcml2ZXJzIGJ5IHRoZSBBcnlhbnMgKGNvbXByaXNpbmcgdGhlIGZpIHZlICB0cmlidXRhcmllcyBvZiB0aGUgcml2ZXIgSW5kdXMsIEluZHVzIGFuZCB0aGUgIFNhcmFzdmF0aSkuIFRoZSBjb3VudHJ5IG9mIHRoZSBBcnlhbnMgd2FzICBhbHNvIGRlc2lnbmF0ZWQgYXMgQXJ5YXZhcnRhIGluIHRoZSBsYXR0ZXIgIHNjcmlwdHVyZXMuIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgOiBSaWcgVmVkaWMgb3IgRWFybHkgIFZlZGljIFBlcmlvZCBpcyBjb25zaWRlcmVkIHRvIGJlIGJldHdlZW4gIDE1MDBCLkMuIEFuZCAxMDAwIEIuQy4gVG9waWM6IEFuY2llbnQgSGlzdG9yeSAgU3ViLXRvcGljOiBWZWRpYyBBZ2U=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 3 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 49,
      "question" : "With respect to the town planning in Indus Valley Civilization (IVC), consider the following statements:1. The citadel mound suggests that this area may have been used for public gatherings, religious activities or administrative activities.2. Sewage was disposed of through underground drains.3. The arrangement of the houses was such that the lower town was inhabited by common people.Which of the above statements is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw0OQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnRzIDEgYW5kIDMgYXJlIGNvcnJlY3QgOiBUb3duICB1c2VkIHRvIGhhdmUgYW4gdXBwZXIgY2l0YWRlbCBhbmQgbG93ZXIgIGNpdGFkZWwuIFVwcGVyIGNpdGFkZWwgdXNlZCB0byBob3VzZSB0aGUgIHJ1bGluZyBjbGFzcyBhbmQgdGhlIGxvd2VyIGNpdGFkZWwgd2FzICBmb3IgdGhlIGNvbW1vbiBwZW9wbGUuIFRoZSBob3VzZXMgd2VyZSAgZGVzaWduZWQgYXJvdW5kIGFuIGlubmVyIGNvdXJ0eWFyZCBhbmQgIGNvbnRhaW5lZCBwaWxsYXJlZCBoYWxscywgYmF0aCByb29tcywgcGF2ZWQgIGZsIG9vcnMsIGtpdGNoZW4sIHdlbGwgZXRjLiBCZXNpZGVzIHJlc2lkZW50aWFsICBxdWFydGVycywgZWxhYm9yYXRlIHN0cnVjdHVyZXMgaGF2ZSBhbHNvICBiZWVuIGZvdW5kLiBPbmUgb2YgdGhlc2UgYnVpbGRpbmdzIGhhcyBnb3QgIHRoZSBiaWdnZXN0IGhhbGwgbWVhc3VyaW5nIDgwIGZ0IGxvbmcgYW5kIDgwICBmdCB3aWRlLiBJdCBtaWdodCBoYXZlIGJlZW4gYSBwYWxhY2UsIG9yICB0ZW1wbGUgb3IgaGFsbCBmb3IgaG9sZGluZyBtZWV0aW5ncy4gIFRoZSBzdHJlZXRzIHdlcmUgc3RyYWlnaHQgYW5kIGN1dCBhdCByaWdodCAgYW5nbGVzLiBUaGV5IHdlcmUgMTMgdG8gMzQgZmVldCB3aWRlIGFuZCB3ZXJlICB3ZWxsIGxpbmVkLiBUaGUgc3RyZWV0cyBhbmQgcm9hZHMgZGl2aWRlZCB0aGUgIGNpdHkgaW50byByZWN0YW5ndWxhciBibG9ja3MuIEFyY2hhZW9sb2dpc3RzICBoYXZlIGRpc2NvdmVyZWQgdGhlIGxhbXAgcG9zdHMgYXQgaW50ZXJ2YWxzLiAgVGhpcyBzdWdnZXN0cyB0aGUgZXhpc3RlbmNlIG9mIHN0cmVldCBsaWdodHMuICBEdXN0YmlucyB3ZXJlIGFsc28gcHJvdmlkZWQgb24gdGhlIHN0cmVldHMuICBUaGVzZSBwcm92ZSB0aGUgcHJlc2VuY2Ugb2YgZ29vZCBtdW5pY2lwYWwgIGFkbWluaXN0cmF0aW9uLiBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IDogT25lIG9mIHRoZSBtb3N0ICByZW1hcmthYmxlIGZlYXR1cmVzIG9mIHRoZSBJbmR1cyB2YWxsZXkgIGNpdmlsaXphdGlvbiBpcyB0aGF0IHRoZSBjaXR5IHdhcyBwcm92aWRlZCAgd2l0aCBhbiBleGNlbGxlbnQgY2xvc2VkIGRyYWluYWdlIHN5c3RlbS4gIEVhY2ggaG91c2UgaGFkIGl0cyBvd24gZHJhaW5hZ2UgYW5kICBzb2FrIHBpdCB3aGljaCB3YXMgY29ubmVjdGVkIHRvIHRoZSBwdWJsaWMgIGRyYWluYWdlLiBCcmljayBsYWlkIGNoYW5uZWxzIGZsIG93ZWQgIHRocm91Z2ggZXZlcnkgc3RyZWV0LiBUaGV5IHdlcmUgY292ZXJlZCAgYW5kIGhhZCBtYW5ob2xlcyBhdCBpbnRlcnZhbHMgZm9yIGNsZWFuaW5nICBhbmQgY2xlYXJpbmcgcHVycG9zZXMuIExhcmdlIGJyaWNrIGN1bHZlcnRzICB3aXRoIGNvcmJlbGxlZCByb29mcyB3ZXJlIGNvbnN0cnVjdGVkIG9uIHRoZSAgb3V0c2tpcnRzIG9mIHRoZSBjaXR5IHRvIGNhcnJ5IGV4Y2VzcyB3YXRlci4gIFRodXMgdGhlIEluZHVzIHBlb3BsZSBoYWQgYSBwZXJmZWN0ICB1bmRlcmdyb3VuZCBkcmFpbmFnZSBzeXN0ZW0uIE5vIG90aGVyICBjb250ZW1wb3JhcnkgY2l2aWxpemF0aW9uIGdhdmUgc28gbXVjaCAgYXR0ZW50aW9uIHRvIGNsZWFubGluZXNzLiBUb3BpYzogQW5jaWVudCBoaXN0b3J5IFN1Yi10b3BpYzogSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 50,
      "question" : "Read the following: 1. The Harappa men and women decorated themselves with a variety of ornaments made of precious metals, gemstones, ivory and bones.2. They cultivated wheat, barley fi gs, and peas.3. IVC can be considered as an economy of surplus production.Choose the correct options:",
      "questionId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbHw1MA==",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgZG9tZXN0aWMgYXJ0aWNsZXMgdXNlZCBieSB0aGUgSW5kdXMgIHBlb3BsZSBhbmQgdGhlIGNvbWZvcnRhYmxlIGhvdXNlcyBpbiB3aGljaCAgdGhleSBsaXZlZCBzaG93IHRoZSBwcm9zcGVyaXR5IG9mIHRoZSBJbmR1cyAgcGVvcGxlLiBJdCB3YXMgYSByaWNoIGNpdmlsaXphdGlvbi4gUmljaCAgcGVvcGxlIHVzZWQgZ29sZCBpbnN0cnVtZW50cyBzdHVkZGVkIHdpdGggIGpld2Vscy4gVGhlIGV4Y2VsbGVuY2UgaW4gYXJ0IGFuZCBjcmFmdCBpcyAgcHJvdmVkIGJ5IGZpIG5lIG9ybmFtZW50cywgc3RvbmUgYW5kIGNvcHBlciAgaW1wbGVtZW50cyBhbmQgdGhlIHBvdHRlcnMuIFdlYXZpbmcgd2FzIGEgIHByaW5jaXBhbCBvY2N1cGF0aW9uIG9mIHRoZSBwZW9wbGUuIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgOiBUaGUgSGFyYXBwYW4gIHBlb3BsZSB3ZXJlIGZhbWlsaWFyIHdpdGggbWFueSAgcHJlY2lvdXMgc3RvbmVzIGxpa2UgYWdhdGUsIGNhcm5lbGlhbiwgIHN0ZWF0aXRlLCBsYXBpcyBsYXp1bGksIHR1cnF1b2lzZSBldGMuIEEgIG1hbnVmYWN0dXJpbmcgdW5pdCBhdCBDaGFuaHVkYXJvICBiZWFycyB0ZXN0aW1vbnkgdG8gaXQuIEJlYWRzIHJlY292ZXJlZCAgZnJvbSBDaGFuaHVkYXJvLCBNb2hlbmpvLURhcm8gYW5kICBMb3RoYWwgaW5kaWNhdGUgdGhlaXIgdXNlIGluIG5lY2tsYWNlcy4gIFRoZSB3ZWlnaHQgYW5kIG1lYXN1cmUgd2FzIGRvbmUgd2l0aCAgc3RvbmUtIHNsYWJzIG9mIHZhcnlpbmcgc2l6ZXMuIENvbWJzLCBlYXItIHJpbmdzIGFuZCBvcm5hbWVudHMgd2VyZSBhbHNvIG1hZGUgIGZyb20gaXZvcnkuIE9ybmFtZW50IG1ha2luZyB3YXMgdGhlaXIgdGVjaG5pY2FsIGZvcnRlLiAgT3JuYW1lbnRzIHdlcmUgbWFkZSBib3RoIGZvciBtZW4gYW5kICB3b21lbi4gQWxsIGxvdmVkIG9ybmFtZW50cyBpcnJlc3BlY3RpdmUgb2YgIHdoZXRoZXIgdGhleSB3ZXJlIHJpY2ggb3IgcG9vci4gQ2hhaW5zIGFuZCAgbmVja2xhY2VzLCBhcm1sZXRzLCBicmFjZWxldHMsIHJpbmdzIGFuZCBlYXItIHJpbmdzIHdlcmUgbWFkZSBmb3IgYm90aCBtZW4gYW5kIHdvbWVuLiAgQXJtbGV0cywgZWFyLXJpbmdzIGFuZCBub3NlLWJ1ZHMgZXRjLiB3ZXJlICBvbmx5IG1lYW50IGZvciB0aGUgbGFkaWVzLiBPcm5hbWVudHMgd2VyZSBhbHNvIG1hZGUgb2YgaXZvcnksICBob3JuIGFuZCBicm9uemUsIHBhcnRpY3VsYXJseSB0aGUgIGNvbWJzIGFuZCBoYWlyIHBpbi4gVGhlIG9yZGluYXJ5ICBwZW9wbGUgc3BvcnRlZCBvcm5hbWVudHMgbWFkZSBvZiAgYm9uZXMsIGNvcHBlciwgZWFydGhlbndhcmUgYW5kIGNvbmNoLSBzaGVsbHMuIFN1Y2ggYSBwaWN0dXJlIGFib3V0IHRoZWlyIG9ybmFtZW50cyAgYmVjb21lcyBjbGVhciBmcm9tIGEgc3R1ZHkgb2YgbWFueSBpbWFnZXMgIHJlY292ZXJlZCBmcm9tIHZhcmlvdXMgcGxhY2VzLiBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IDogQSB2YXJpZXR5IG9mICBjcm9wcyB3ZXJlIGdyb3duIGluIHRoaXMgYXJlYS4gSW5kdXMgIFZhbGxleSBwZW9wbGUgZ3JldyB3aGVhdCwgYmFybGV5LCAgbWVsb25zLCBvaWxzLCBkYXRlcywgZmkgZWxkIHBlYXMsIGNvdHRvbiwgIGFuZCBwb3NzaWJseSByaWNlLiBUaGUgSW5kdXMgcGVvcGxlIHdlcmUgZnVsbHkgYXdhcmUgb2YgdGhlICBwcmluY2lwbGVzIG9mIGhlYWx0aCBhbmQgc2FuaXRhdGlvbi4gVG93bnMgIHBlb3BsZSBiYXRoZWQgaW4gYSBiYXRoIGxvY2F0ZWQgaW4gdGhlICBDZW50cmUgb2YgdGhlIHF1YWRyYW5nbGUgaW4gdGhlIG1pZGRsZSBvZiAgdGhlIHZhbGxleS4gVGhlIEJhdGhzIHdlcmUgYXJvdW5kIDQ5IGZlZXQgIGxvbmcsIDI4IGZlZXQgd2lkZSBhbmQgOCBmZWV0IGRlZXAuIFdhbGxzICBvZiB0aGUgcG9vbCB3ZXJlIG1hZGUgdXAgb2YgYnVybnQgYnJpY2sgdG8gICAgMjEgIHByZXZlbnQgdGhlIGxlYWtpbmcgb2Ygd2F0ZXIuIFRoZSBwb29sIHdhcyAgcmVndWxhcmx5IGRyYWluZWQgdG8gZW5zdXJlIGNsZWFubGluZXNzOyAgdGhpcyB3YXMgZG9uZSBieSBkcmFpbmluZyBvZmYgdXNlZCB3YXRlciAgaW50byBhIGxhcmdlIHBpcGUgdGhhdCBsZWQgdG8gdGhlIG91dHNpZGUgIG9mIHRoZSB2YWxsZXkuIEluZHVzIFZhbGxleSBwZW9wbGUgaGFkIGEgIG1haW50YWluZWQgYW5kIGNvbnN0YW50bHkgaGVhbHRoeSBkaWV0LiAgTWFqb3JpdHkgcGVvcGxlIG1vc3QgbGlrZWx5IGF0ZSBtb3JlIGZydWl0ICBhbmQgdmVnZXRhYmxlcyB0aGFuIG1lYXQuIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgOiBUaGUgZGlzY292ZXJ5ICBvZiBncmFuYXJpZXMsIHBvdHRlcnksIHNlYWxzIGZvciB0cmFkZSwgIHdlaWdodHMgYW5kIG1lYXN1cmVzIGFuZCBhbiB1cmJhbiAgcGxhbm5lZCBjaXR5IGNvbmZpIHJtcyB0aGF0IElWQyB3YXMgYSAgc3VycGx1cyBlY29ub215LiBUb3BpYzogQW5jaWVudCBIaXN0b3J5IFN1Yi10b3BpYzogSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiDCmcKZwpnCmcKZ",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxIaXN0b3J5fGFsbA==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "History",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 1, 2 and 3 only "
      }
    }
  ],
  "subject" : "History",
  "topic" : "all",
  "year" : "2023"
}
