{
  "testId" : "gs-score-2023-prelims-pt-maxima-37",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\gs-score\\prelims\\gs-score-2023-prelims-pt-maxima-37.pdf",
  "question" : [
    {
      "index" : 2,
      "question" : "What is the age difference between Mamta and Piya? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wy",
      "description" : "IEV4cGxhbmF0aW9uIDogIE1hbXRhIGlzIDEgeXIgZWxkZXIgdG8gUGl5YS4gU28sIHRoZWlyIGFnZSAgZGlmZmVyZW5jZSBpcyAxIHlyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 2 yrs. ",
        "option2" : " 1 yr. ",
        "option3" : " 3 yrs. ",
        "option4" : " 4 yrs. "
      }
    },
    {
      "index" : 3,
      "question" : "Who is the youngest sister? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wz",
      "description" : "IEV4cGxhbmF0aW9uIDogIE5lZXRhIGlzIHRoZSB5b3VuZ2VzdCBvZiBhbGwgc2lzdGVycy4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Neeta ",
        "option2" : " Rita ",
        "option3" : " Gaya ",
        "option4" : " Deepa "
      }
    },
    {
      "index" : 4,
      "question" : "Select the missing number from the options given below. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0",
      "description" : "IEV4cGxhbmF0aW9uIDogIDIgw5cgMjEgw5cgMjYgPSAxMDkyICAxIMOXIDIyIMOXIDQ2ID0gMTAxMiAgU2ltaWxhcmx5LCAyIMOXID8gw5cgMjAgPSAxMDAwICAgPyA9ICAxMDAwICA0MCA9IDI1IA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1012 ",
        "option2" : " 48 ",
        "option3" : " 25 ",
        "option4" : " 36 "
      }
    },
    {
      "index" : 5,
      "question" : "How many dots are there on the face opposite to the face with two dots? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w1",
      "description" : "IEV4cGxhbmF0aW9uOiAgRnJvbSBkaWNlcyAxICYgMiAgU2lkZSBoYXZpbmcgNSBkb3RzIGlzIGNvbW1vbiAgV3JpdGluZyBhbnRpY2xvY2t3aXNlLCAgMjM1ICA1IDQgNiAgT3Bwb3NpdGUgIDIuIO+AoERpY2UgNiBpcyBvcHBvc2l0ZSB0byBEaWNlICBTb2x1dGlvbiAoNi03KSAgUSBpcyBhbiBlbmdpbmVlciBhbmQgdGhlIGZhdGhlciBvZiBULiBTby7CoCAgUSAoRW5nZy4pIChNYWxlKSAgKEZlbWFsZSkgIFQgIFMgaXMgdGhlIGdyYW5kbW90aGVyIG9mIFQsIHdoaWNoIG1lYW5zICBRIGlzIHRoZSBzb24gb2YgUy4gUyBpcyBhIGhvdXNld2lmZS4gU28uICBRICBUICAoRW5nZy4pICAoSG91c2V3aWZlKVMgVSAoTGF3eWVyKSAgKD8pICBSICBVIGlzIHRoZSBncmFuZGZhdGhlciBvZiBSIGFuZCBpcyBhIGxhd3llci4gIFRoZXJlIGFyZSB0d28gbWFycmllZCBjb3VwbGVzIGluIHRoZSAgZmFtaWx5LCBTbywgdGhlIHR3byBwb3NzaWJsZSBwYWlycyBhcmUgb2YgIGdyYW5kZmF0aGVyLWdyYW5kbW90aGVyIGFuZCBmYXRoZXItICBtb3RoZXIuIFNvLCB3ZSBjb21iaW5lIHRoZSB0d28gIGRpYWdyYW1zIGluIHRoZSBmb2xsb3dpbmcgd2F5IDogIFUoTGF3eWVyKSAoSG91c2V3aWZlKVMgIFEgIChFbmdnLikgIFAgIFQgUiAgVGhlIHByb2Zlc3Npb25zIG9mIFAsIFQgYW5kIFIgYXJlICB1bmtub3duLiBIb3dldmVyLCB3aXRoIHJlYXNvbmFibGUgIHNhdGlzZmFjdGlvbiwgd2UgbWF5IGFzc3VtZSB0aGF0IHRoZSAgbW90aGVyIChQKSBzaG91bGQgYmUgdGhlIHRlYWNoZXIgYW5kIHRoZSAgdHdvIGNoaWxkcmVuIFQgYW5kIFIgc2hvdWxkIGJlIHN0dWRlbnRzLiAgQWxzbywgdGhlIHNleGVzIG9mIFQgYW5kIFIgY2Fubm90IGJlICBkZXRlcm1pbmVkLsKgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 5 ",
        "option3" : " 4 ",
        "option4" : " 6  Directions (Q. No. 6-7) Examine the  information given below and answer the  questions that follow:  P, Q, R, S, T and U are members of a family.  There are two married couples. Q is an  engineer and the father of T. U is the  grandfather of R and is a lawyer. S is the  grandmother of T and is a housewife. There  is one engineer, one lawyer, one teacher,  one housewife and two students in the  family. "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following are two married couples? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w2",
      "description" : "IEV4cGxhbmF0aW9uIDogIFVTIGFuZCBRUCBhcmUgdHdvIG1hcnJpZWQgY291cGxlcy4gIDMg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " US and QP ",
        "option2" : " US and QT ",
        "option3" : " US and RP ",
        "option4" : " TS and RU "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following is definitely a group of male members? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w3",
      "description" : "IEV4cGxhbmF0aW9uIDogIFEgYW5kIFUgYXJlIGRlZmluaXRlbHkgbWFsZXMuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Q , U and T ",
        "option2" : " U and T ",
        "option3" : " Q, U and P ",
        "option4" : " Q and U "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following students in an examination (-) A scored more than B (-) C scored as much as D (-) E scored less than F (-) B scored more than C (-) F secored less than D ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w4",
      "description" : "IEV4cGxhbmF0aW9uIDogIEEgPiBCLCBDID0gRCwgRSA8IEYsIEIgPiBDLCBGIDwgRCAgKDEpICgzKSAoNSkgKDIpICg0KSAgQSA+IEIgPiBDID0gRCA+IEYgPiBFLiAgU28sICdFJyBnb3QgbG93ZXN0IHNjb3JlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " E ",
        "option2" : " C ",
        "option3" : " D ",
        "option4" : " F  3  Directions (Q. No. 9-10) Examine  information given below and answer the  questions that follow:  Five executives A, B, C, D & E of Indian  Corporation hold a conference in New Delhi.  (-)Mr. A converses in Hindi and Tamil.  (-)Mr. B converses in Hindi and English.  (-)Mr. C converses in English and Tamil.  (-)Mr. D converses in Bengali and Hindi.  (-)Mr. E, a native Tamil, can also converse in Bengali. "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following can act as an interpreter when Mr. C and Mr. D wish to converse? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w5",
      "description" : "IEV4cGxhbmF0aW9uIDogIFdoZW4gTXIuIEMgYW5kIE1yLiBEIGNvbnZlcnNlLCB0aGV5ICBjYW4gdXNlIEVuZ2xpc2gsIFRhbWlsLCBCZW5nYWxpIGFuZCAgSGluZGkgaW50ZXJwcmV0ZXIgYmV0d2VlbiB0aGVtLiBNci4gQSAgc3BlYWtzIEhpbmRpIGFuZCBUYW1pbCBhbmQgTXIuIEIgIHNwZWFrcyBFbmdsaXNoIGFuZCBIaW5kaS4gTXIuIEUgc3BlYWtzICBiZW5nYWxpIGFuZCBUYW1pbC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only Mr. A ",
        "option2" : " Only Mr. B ",
        "option3" : " Only Mr. E ",
        "option4" : " Any of the other three executives "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following pairs cannot converse without an interpreter? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxMA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIE1yLiBCIHVuZGVyc3RhbmRzIEVuZ2xpc2ggYW5kIEhpbmRpLCAgd2hpbGUgTXIuIEUgc3BlYWtzIHR3byBvdGhlciBsYW5ndWFnZXMsICBCZW5nYWxpIGFuZCBUYW1pbC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Mr. B and Mr. E ",
        "option2" : " Mr. A and Mr. B ",
        "option3" : " Mr. A and Mr. C ",
        "option4" : " Mr. B and Mr. D "
      }
    },
    {
      "index" : 11,
      "question" : "An Indian who is a scientist as well as a politician is represented in the following diagram by an alphabet. Find the alphabet and choose the correct response. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxMQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFNpbmNlLCB0aGUgcmVnaW9uICdhJyBpcyBjb21tb24gYmV0d2VlbiAgSW5kaWFuIHNjaWVudGlzdHMgYW5kIHBvbGl0aWNpYW5zLCAgdGhlcmVmb3JlIGl0IHJlcHJlc2VudHMgSW5kaWFuIHNjaWVudGlzdHMgIHdobyBhcmUgYWxzbyBwb2xpdGljaWFucy4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " b ",
        "option2" : " a ",
        "option3" : " c ",
        "option4" : " g  Directions (Q. No. 12) : Study the following  graph and answer the given question.  Graph shows the variation in literacy per cent  with the increase in the population of four different  districts of a newly formulated state. "
      }
    },
    {
      "index" : 12,
      "question" : "Which district shows two different behaviour of literacy per cent with the increase in population? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxMg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIERpc3RyaWN0IEEgJiBCIGFyZSBzaG93aW5nIGEgZml4ZWQgIGJlaGF2aW91ciwgd2hpbGUgQyBpcyBzaG93aW5nIDMgZGlzdGluY3QgIGJlaGF2aW91cnMgYnV0IERpc3RyaWN0IEQgc2hvd3MgdHdvICBkaWZmZXJlbnQgdHlwZXMgb2YgYmVoYXZpb3VyIGJlY2F1c2UgIGZpcnN0bHksIHRoZSBncmFwaCBpcyBpbmNyZWFzaW5nICBwcm9wb3J0aW9uYWxseSBhbmQgdGhlbiBjb25zdGFudCAgdGhyb3VnaG91dCB0aGUgaW5jcmVhc2luZyBwb3B1bGF0aW9uLiAgU29sdXRpb25zIChRLiBOby4gMTMtMTQpICBBY2NvcmRpbmcgdG8gdGhlIGdpdmVuIGluZm9ybWF0aW9uLCAgc2V2ZW4gbWVtYmVycyBjYW4gYmUgYXJyYW5nZWQgYXMgIEEgIEIgIEUgIEcgIEYgIEQgIEMg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " A ",
        "option2" : " B ",
        "option3" : " C ",
        "option4" : " D  Directions (13-14) Study the following  information carefully and answer the  questions given below:  Seven persons A, B, C, D, E, F and G are  sitting in a circle and are facing the circle.  (-)G is third to the left of A.  (-)F is third to the left of B.  (-)D is not the neighbour of G.  (-)C is the neighbour of A.  (-)B is to the immediate left of A. "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following pairs has its first member not sitting to the immediate left of the second member? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxMw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIERDIGlzIHRoZSBvbmx5IHBhaXIgaW4gd2hpY2ggZmlyc3QgbWVtYmVyICBpcyBub3Qgc2l0dGluZyB0byB0aGUgaW1tZWRpYXRlIHJpZ2h0IG9mICB0aGUgc2Vjb25kIG1lbWJlci4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " EB ",
        "option2" : " AC ",
        "option3" : " DC ",
        "option4" : " GE "
      }
    },
    {
      "index" : 14,
      "question" : "What is the correct sitting position of E? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxNA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRvIHRoZSBpbW1lZGlhdGUgcmlnaHQgb2YgRy4gIFNvbHV0aW9ucyAoUS4gMTUpIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " To the immediate right of B ",
        "option2" : " Between G and F ",
        "option3" : " Third to the right of C ",
        "option4" : " To the immediate right of G  Directions (Q. No. 15) Examine the  information given below and answer the  questions that follow:  (-)Kush, Ganesh and Hari are intelligent.  (-)Kush, Ram and Jivan are hardworking.  (-)Ram, Hari and Jivan are honest.  (-)Kush, Ganesh and Jivan are ambitious. "
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following persons is neither hardworking nor ambitious? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxNQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEhhcmkgaXMgbmVpdGhlciBoYXJkd29ya2luZyBub3IgIGFtYml0aW91cy4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Kush ",
        "option2" : " Ganesh ",
        "option3" : " Hari ",
        "option4" : " Ram  4 "
      }
    },
    {
      "index" : 16,
      "question" : "A cube of 3 cm side is divided into  smaller cubes of side 1 cm .How many times will it be cut to obtain smaller cubes? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxNg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFJlcXVpcmVkIG51bWJlciBvZiBjdXRzID0gU2lkZSBvICBiaWdnZXIgY3ViZSBTaWRlIG9mIHNtYWxsZXLCoGN1YmXCoMKgwqAnMSkgw5cgIDMgKDMxIjEpIMOXIDMgPSAoMyIxKSDDlyAzID0gNiAgNCA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 8 ",
        "option2" : " 4 ",
        "option3" : " 6 ",
        "option4" : " 9 "
      }
    },
    {
      "index" : 17,
      "question" : "Babu said to Sanjay, 'That boy playing with football is younger of the two brothers of the daughter of my father's wife.' How is the boy playing football related to Babu? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxNw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFlvdW5nZXIgb2YgdGhlIHR3byBicm90aGVycyBvZiB0aGUgIGRhdWdodGVyIG9mIG15IGZhdGhlcidzIHdpZmUgKGFzIG15ICBmYXRoZXIncyB3aWZlID0gbXkgbW90aGVyKSAgU28sIHlvdW5nZXIgb2YgdGhlIHR3byBicm90aGVycyBvZiB0aGUgIGRhdWdodGVyIG9mIG15IG1vdGhlciAoYXMgZGF1Z2h0ZXIgIG9mIG15IG1vdGhlciA9IG15IHNpc3RlcikuIFNvLCB5b3VuZ2VyICBvZiB0aGUgdHdvIGJyb3RoZXJzIG9mIG15IHNpc3RlciBtZWFucyAgJ215IHlvdW5nZXIgYnJvdGhlcicuIEhlbmNlLCB0aGF0IGJveSAgaXMgdGhlIHlvdW5nZXIgYnJvdGhlciBvZiBCYWJ1LiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Uncle ",
        "option2" : " Elder brother ",
        "option3" : " Younger brother ",
        "option4" : " Cousin "
      }
    },
    {
      "index" : 18,
      "question" : "The question below consists of a question and two statements numbered I and II given below it. You have to decide whether the data provided in the statements are sufficient to answer the question.  How far did Mohan walk from the starting point? 1. Mohan walked 20 metres towards West, took a right turn and walked 30 metres, again took a right turn and walked 20 metres. 2. Mohan walked 20 metres towards South, took a left turn and walked 30 metres, again took a left turn and walked 20 metres. Read both the statements and give answer. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxOA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEZyb20gc3RhdGVtZW50cyBJICAyMCBtICAyMCBtICBOb3J0aCAgRWFzdCAgU291dGggIFdlc3QgIDIwIG0gIE1vaGFuIGlzIDMwIG0gYXdheSBmcm9tIHRoZSBzdGFydGluZyAgcG9pbnQuICBGcm9tIHN0YXRlbWVudCBJSSAgTW9oYW4gaXMgMzAgbSBhd2F5IGZyb20gdGhlICBzdGFydGluZyBwb2ludC4gIDIwIG0gMjAgbSAgMzAgbSAgU29sdXRpb25zIChRLiBOby4gMTktMjIpICBUaGUgZ2l2ZW4gb25ld2F5IHJvdXRlcyBiZXR3ZWVuIHRoZSAgY2l0aWVzIGNhbiBiZSByZXByZXNlbnRlZCBhcyAgRSBEIEggIEIgIEYgIEMgIEcgIEEgIFRoZSBnaXZlbiB0d28gd2F5IHJvdXRlcyBiZXR3ZWVuICB0aGUgY2l0aWVzIGNhbiBiZSByZXByZXNlbnRlZCBhcyAgRyAgSCAgQSAgSUMgIEYgIE9uIGNvbWJpbmluZyB0aGUgYWJvdmUgcm91dGVzLCB3ZSBnZXQgIEIgIEQgIEYgIEMgIEUgIEcgIEggIEEgIEkg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " The data in Statement I alone are sufficient  to answer the question, while the data in  Statement II alone are not sufficient to  answer the question. ",
        "option2" : " The data in Statement II alone are sufficient  to answer the question, while the data in  Statement I alone are not sufficient to  answer the question. ",
        "option3" : " The data either in Statement I alone or in  Statement II alone are sufficient to answer  the question. ",
        "option4" : " The data given in both the Statements I  and II together are not sufficient to answer  the question.  Directions (Q. No. 19-21) Examine the  following information carefully and answer  the questions that follow:  Nine cities A, B, C, D, E, F, G, H and I are  connected with a oneway or a two way route.  (-)The oneway routes are from A to F; D to  A; D to F; H to D; D to B; D to E; E to B;  B to G; E to F; E to C.  (-)The two way routes are between G and H;  H and A; A and I; I and C; F and C.  (-)No other routes exist except the above  mentioned routes. "
      }
    },
    {
      "index" : 19,
      "question" : "In how many ways a person can travel from city G to city I without travelling through a city more than once during the journey? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wxOQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRoZSBwb3NzaWJsZSB3YXlzIGZyb20gRyB0byBJIGFyZSAgKGkpIEctSC1BLUkgIChpaSkgRy1ILUEtRi1DLUkgIChpaWkpIEctSC1ELUEtSSAgKGl2KSBHLUgtRC1BLUYtQy1JICAodikgRy1ILUQtRS1DLUkgICh2aSkgRy1ILUQtRS1GLUMtSSAgKHZpaSkgRy1ILUQtRi1DLUkgIFNvLCB0aGVyZSBhcmUgc2V2ZW4gcG9zc2libGUgd2F5cy4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 5 ",
        "option2" : " 6 ",
        "option3" : " 7 ",
        "option4" : " 8 "
      }
    },
    {
      "index" : 20,
      "question" : "Due to Bandh call given by a political party, no one is allowed to pass through city D. Then, which city can not be reached from any other city? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyMA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEFzIHRoZXJlIGlzIG9ubHkgMSBvbmV3YXkgcm91dGUgZnJvbSBEICB0byBFIHdoaWNoIGlzIHRoZSBvbmx5IHdheSB0byByZWFjaCBFLiBTbywgIGlmIG5vIG9uZSBpcyBhbGxvd2VkIHRvIHBhc3MgdGhyb3VnaCBjaXR5ICBELCB0aGVuIHRoZSBwZXJzb24gY2Fubm90IHJlYWNoIGNpdHkgRS4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " G ",
        "option2" : " B ",
        "option3" : " E ",
        "option4" : " F "
      }
    },
    {
      "index" : 21,
      "question" : "If a person wants to go to the city I from the city E, then what is the maximum possible number of cities he can go through excluding the cities from which he starts and ends his journey? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyMQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRoZSBsYXJnZXN0IHBvc3NpYmxlIHJvdXRlIGlzICBFLUItRy1ILUQtQS1GLUMtSSAgU28sIHRoZSBwZXJzb24gY2FuIGdvIHRvIDcgY2l0aWVzIChCLCBHLCBILCBELCAgQSwgRiBhbmQgQyksIGV4Y2x1ZGluZyB0aGUgY2l0aWVzIGZyb20gd2hpY2ggIGhlIHN0YXJ0cyBhbmQgYXQgd2hpY2ggaGUgZW5kcyBoaXMgam91cm5leS4gIDUg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 5 ",
        "option2" : " 6 ",
        "option3" : " 9 ",
        "option4" : " 7 "
      }
    },
    {
      "index" : 22,
      "question" : "In a certain code, FAT is written as 418 and HAIR is written as 4156. What will FAIR be written as ? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyMg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRoaXMgaXMgYSBxdWVzdGlvbiBvZiBkaXJlY3QgTGV0dGVyIHRvICBOdW1iZXIgY29kaW5nLiAgRkFUID0gNDE4LCBIQUlSID0gNDE1NiAgRkFJUiA9IDQxNTYgIDQxNTYuIFRoZSBjb2RlIGZvciBGQUlSIHdpbGwgdGhlcmVmb3JlIGJlIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 4156 ",
        "option2" : " 4180 ",
        "option3" : " 6980 ",
        "option4" : " 3214  5 "
      }
    },
    {
      "index" : 23,
      "question" : "There are three languages as represented by three circles. The numbers given represent the number of people who speak those languages. Study the following figure carefully and answer the question given below. What is the number of people who speak atmost one language? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyMw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEhpbmRpID0gMjIwIEVuZ2xpc2ggPSAxNTAgIGEgPSAxMTAgYyA9IDUwICBkID0gMzAgIGcgPSAyNSAgZiA9ICAgNDVlID0gMzUgIGIgPSAxOTUgIE5vbmUgPSA2MCBUZWx1Z3UgPSAzMDAgIE51bWJlciBvZiBwZW9wbGUsIHdobyBzcGVhayBhdG1vc3Qgb25lICBsYW5ndWFnZSAgPSBhICsgYiArIGMgKyBOb25lICA9IDExMCArIDUwICsgMTk1ICsgNjAgPSA0MTUg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 650 ",
        "option2" : " 355 ",
        "option3" : " 415 ",
        "option4" : " 625 "
      }
    },
    {
      "index" : 24,
      "question" : "What should come in place of the question mark(?) in the following series ? 19, 2, 57, 3, 228, 4, ? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyNA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIDE5LCAyLCA1NywgMywgMjI4LCA0LCA/ICBUaGUgc2VxdWVuY2UgaXMgYSBjb2JpbmF0aW9uIG9mIHR3byBzZXJpZXMuICAxOSAz74K074K+74K+74KuIDU3IDTvgrTvgr7vgr7vgq4gMjI4IDXvgrTvgr7vgr7vgq4gMTE0MCAgMiwgMywgNCwgNS4uLi4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1130 ",
        "option2" : " 912 ",
        "option3" : " 1140 ",
        "option4" : " 1368 "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following sequence: Which of the figures given below should appear as the fourth figure above? 26. Many software companies are located in buildings having 2-8 floors. If a building has more than 3 floors, it has a lift. If the above statements are true, which of the following must be true? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyNQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEluIGZpZ3VyZXMgSSBhbmQgSUksIHRoZSBmaWd1cmUgb3V0c2lkZSAgd2VudCB0byBpbnNpZGUsIHNpbWlsYXJseSBpbiBmaWd1cmVzIElJSSBhbmQgIElWLiBJbiBmaWd1cmUgSVYsIHRoZSBjaXJjbGUgbXVzdCBiZSBpbnNpZGUgIHRoZSBiaWcgY2lyY2xlIGF0IHRoZSBzYW1lIHBvc2l0aW9uLiAgKGEpIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 2nd floor and above do not have lifts ",
        "option2" : " 7th floor have lifts ",
        "option3" : " Only floors above the 3rd floor have lifts ",
        "option4" : " All floors may be reached by lifts "
      }
    },
    {
      "index" : 27,
      "question" : "Select the missing number from the given responses. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyNw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIDE4IMOXIDMgKyA2ID0gNjAgIDYwIMOXIDMgKyA2ID0gMTg2ICAgfCB8ICAgfCB8ICAgfCB8ICAgfCB8ICAxNjk4IMOXIDMgKyA2ID0gNTEwMCA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 5052 ",
        "option2" : " 5100 ",
        "option3" : " 5094 ",
        "option4" : " 4860 "
      }
    },
    {
      "index" : 28,
      "question" : "My house is to the South of market and the post office is to the East of my house, which is as far away from the market as from the post office. I first go to the market and then start walking to the post office. Just when I am half way, I meet a friend and then we decide to walk back to house. In which direction are we walking now? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyOA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIE1hcmtldCAgSG91c2UgIFBvc3QgT2ZmaWNlICBTb3V0aC1XZXN0IA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " North-West ",
        "option2" : " South-West ",
        "option3" : " North-East ",
        "option4" : " South-East "
      }
    },
    {
      "index" : 29,
      "question" : "Statements All dhabas are restaurants. No shops are restaurants. All hotels are dhabas Conclusion 1. Some hotels are shops. 2. Some hotels are not shops. 3. No dhabas are shops ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wyOQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEhvdGVscyAgRCAgaGEgIGJhICBzICBSICBlcyAgdGEgIHVyICBhbiAgdHMgIHNob3BzeCA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 and 2 follow ",
        "option2" : " 2 and 3 follow ",
        "option3" : " Only 2 follows ",
        "option4" : " Only 3 follows  6 "
      }
    },
    {
      "index" : 30,
      "question" : "What digit will come in place of question mark? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzMA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEFzLCAoNSDDlyA0KSArICgzIMOXIDIpICsgMiA9IDI4ICBTYW1lIGFzLCAoOCDDlyA0KSArICg4IMOXIDEpICsgMiA9IDQyICBIZW5jZSwgMSB3aWxsIGJlIGNvbWUgaW4gcGxhY2Ugb2YgcXVlc3Rpb24gIG1hcmsgIDYg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 3 ",
        "option2" : " 9 ",
        "option3" : " 1 ",
        "option4" : " 2 "
      }
    },
    {
      "index" : 31,
      "question" : "In the following figure, if the centres of all the circles are joined by horizontal and vertical lines, then find the number of squares that can be formed. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzMQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEQgIEUgIEYgIEEgIEogIEsgIEwgIEcgIEMgIEkgIEggIEIgIE51bWJlciBvZiBzcXVhcmVzIGZvcm1lZCAgPSBBRkxHLCBHQkhMLCBMSElLLCBGTEtFLCBLSUNKLCAgS0VKRCwgQUVJQiwgRkhDRCAgU28sIHRvdGFsIG9mIDggc3F1YXJlcyB3aWxsIGJlIGZvcm1lZC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 6 ",
        "option2" : " 7 ",
        "option3" : " 8 ",
        "option4" : " 1 "
      }
    },
    {
      "index" : 32,
      "question" : "Recently, there was a warning against consuming squid in Nasik, as they found that they contained a large amount of Domoic acid, which is toxic. Hence, warnings were put up in newspapers. However, later the officials realized that the population of octopus in the water bodies has gone down, and hence decided to remove the warning. Which of the following options could be a plausible reason as to why the warning was removed? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzMg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIE9wdGlvbiAxIGlzIHdyb25nIGFzIGlmIHRoZSBzcXVpZCB3ZXJlICBleGNyZXRpbmcgdGhlIGFjaWQsIHRoZW4gdGhleSB3b3VsZG4ndCAgY29udGFpbiB0aGUgYWNpZCB0aGVtc2VsdmVzLiBPcHRpb24gMiBoYXMgIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgb2N0b3B1c2VzLCBhbmQgIGhlbmNlLCBpcyBub3QgYSBwbGF1c2libGUgcmVhc29uLiBPcHRpb24gIDMgaXMgY29ycmVjdCwgYXMgdGhlIHJlZHVjdGlvbiBvZiBwb3B1bGF0aW9uICBpbiBvY3RvcHVzZXMgaXMgZXhwbGFpbmVkIGJ5IHRoZSBsYWNrIG9mICBwcmVzZW5jZSBvZiBhY2lkcywgd2hpY2ggYWxzbyBleHBsYWlucyBob3cgIHRoZSBhY2lkIGNvbnRlbnQgaW4gdGhlIHNxdWlkcyBoYXMgZ29uZSAgZG93bi4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Octopuses cause the excretion of Domoic  acid in squid. ",
        "option2" : " The water body is highly polluted. ",
        "option3" : " Octopuses cannot survive in water bodies  that are not saturated by acids. ",
        "option4" : " None of these. "
      }
    },
    {
      "index" : 33,
      "question" : "In a row of children, Harish is eleventh from the left and Mangesh is seventeenth from the right. When they exchange their places, Harish will be thirteenth from the left, then which of the following will be the new position of Mangesh from the right? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzMw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb25zLiAgSGFyaXNoIE1hbmdlc2ggIDExdGggMTd0aCAgTGVmdCBSaWdodCAgT24gZXhjaGFuZ2luZyB0aGVpciBwbGFjZXMsIHdlIGdldCAgSGFyaXNoIE1hbmdlc2ggIDEzdGggIExlZnQgUmlnaHQgICBUb3RhbCBudW1iZXIgb2YgY2hpbGRyZW4gPSBMICsgUiAtIDEgID0gMTMgKyAxNyAtIDEgPSAyOSAgTWFuZ2VzaCdzIHBvc2l0dGlvbiBmcm9tIHJpZ2h0ID0gKDI5IC0gMTEgICsgMSkgPSAxOXRoIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 11th ",
        "option2" : " 12th ",
        "option3" : " 19th ",
        "option4" : " 29th "
      }
    },
    {
      "index" : 34,
      "question" : "The following bar graph shows Gender Budgeting of different states. In 2013-14, the total budget of Uttar Pradesh is Rs. 55000 crore and that of Odisha is Rs. 24000 crore. By what percentage is the budget allocation in favour of females in Odisha lesser than the Budget allocation in favour of females in Uttar Pradesh? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzNA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEJ1ZGdldCBvZiBmZW1hbGVzIGluIG9kaXNoYSA9IDI0MDAwIMOXICA1MCAgMTAwID0gMTIwMDAgY3IuICBCdWRnZXQgb2YgZmVtYWxlcyBpbiB1dHRhciBQcmFkZXNoICA9IDU1MDAwIMOXICAzNSAgMTAwID0gMTkyNTAgY3IuICBSZXF1aXJlZCAlPSAgMTkyNTAtMTIwMDAgIDE5MjUwIMOXIDEwMCA9IDM3LjYlICBTb2x1dGlvbnMgKDM1LTM4KSAgQW1pdCA9IDEsIDIsIDMsIDQgIEJpbm55ID0gMSwgMicgIENoaW5reSA9IDEgIERpY2t5ID0gMiwgMywgNCAgRWRkeSA9IDMsIDQg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 15% ",
        "option2" : " 27.5% ",
        "option3" : " 37.6% ",
        "option4" : " Cannot be determined  Directions (Q. No. 35-38) Based on the  following information given below answer  the questions that follow:  In a city's revolving restaurant, the manager has  installed four small lights side by side, numbered  1 to 4 from left to right, above the kitchen door.  The chef switches on the respective lights to signal  the waiters when orders are ready. On a certain  shift, there are five waiters, Amit, Binny, Chinky,  Dicky and Eddy. Now, to signal Amit, the chef  illuminates all the four lights. To signal Binny,  he illuminates lights 1 and 2. To signal Chinky,  he illuminates only light 1. To signal Dicky, he  illuminates lights 2, 3 and 4 only. To signal Eddy, "
      }
    },
    {
      "index" : 4,
      "question" : "he illuminates lights 3 and 35. If lights 3 and 4 are illuminated the signal of which of the following waiters might be displayed? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0",
      "description" : "IEV4cGxhbmF0aW9uIDogIDIgw5cgMjEgw5cgMjYgPSAxMDkyICAxIMOXIDIyIMOXIDQ2ID0gMTAxMiAgU2ltaWxhcmx5LCAyIMOXID8gw5cgMjAgPSAxMDAwICAgPyA9ICAxMDAwICA0MCA9IDI1IA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Amit ",
        "option2" : " Eddy ",
        "option3" : " Amit and Dicky ",
        "option4" : " Amit, Dicky and Eddy  7 "
      }
    },
    {
      "index" : 36,
      "question" : "If light 4 is on and light 1 is off, then the waiter signalled is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzNg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIElmIGxpZ2h0cyA0IGlzIG9uIGFuZCBsaWdodCAxIGlzIG9mZiwgdGhlbiB0aGUgIHdhaXRlciBzaWduYWxsZWQgaXMgRGlja3kgYW5kIEVkZHkuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Binny ",
        "option2" : " Eddy ",
        "option3" : " Binny and Dicky ",
        "option4" : " Dicky and Eddy "
      }
    },
    {
      "index" : 37,
      "question" : "If lights 2 and 3 are both off, then the waiter signalled could be ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzNw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIElmIGxpZ2h0cyAyIGFuZCAzIGFyZSBib3RoIG9mZiwgdGhlIHdhaXRlciAgc2lnbmFsbGVkIGNvdWxkIGJlIENoaW5reS4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Amit ",
        "option2" : " Binny ",
        "option3" : " Chinky ",
        "option4" : " Dicky "
      }
    },
    {
      "index" : 38,
      "question" : "If light 3 is on and light 2 is off, then the waiter signalled is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzOA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIElmIGxpZ2h0cyAzIGlzIG9uIGFuZCBsaWdodCAyIGlzIG9mZiwgdGhlbiB0aGUgIHdhaXRlciBzaWduYWxsZWQgaXMgRWRkeS4gIDcg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Amit ",
        "option2" : " Binny ",
        "option3" : " Chinky ",
        "option4" : " Eddy "
      }
    },
    {
      "index" : 39,
      "question" : "A dice is numbered from 1 to 6 in different ways. If 4 is adjacent to 1, 3 and 5, then which of the following statements is necessarily true? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3wzOQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIDMgIDQgIDUxICBGb3VyIGFkamFjZW50IGRpY2UgYXJlIGNvdmVyZWQgYnkgMSwgMywgNCAgYW5kIDUuIFNvLCAgUmVtYWluaW5nIHR3byBzaWRlcyB3aWxsIGJlIGFkamFjZW50LiAgSGVuY2UsIDIgd2lsbCBiZSBkZWZpbml0ZWx5IGFkamFjZW50IHRvIDYgIChjKSA0MCBDb3JyZWN0IE9wdGlvbjogIEV4cGxhbmF0aW9uIDogIEEgQiBDIEQgRSBGIEcgIFZpb2xldCAgWWVsbG93IEJsdWUgR3JlZW4gSW5kaWdvIFJlZCBPcmFuZ2UgIEhlbmNlLCBjb2xvdXIgb2YgY2FwIHdvcm4gYnkgRiBpcyBSZWQuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 4 is adjacent to 6 ",
        "option2" : " 2 is adjacent to 5 ",
        "option3" : " 2 is adjacent to 6 ",
        "option4" : " 3 is adjacent to 5 "
      }
    },
    {
      "index" : 41,
      "question" : "A series is given, with one term missing. Choose the correct alternative from the given ones that will complete the series. 113, 127, 131, 137, 139,141,  ?, 151, 157, 173. 163, 167, ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0MQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRoZSBhYm92ZSBzZXJpZXMgaXMgc2VyaWVzIG9mIHByaW1lICBudW1iZXJzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 143 ",
        "option2" : " 156 ",
        "option3" : " 149 ",
        "option4" : " 147 "
      }
    },
    {
      "index" : 42,
      "question" : "Statements All buses are cars. Some buses are not motorcycles. No motorcycles are scooters. All scooters are tempos. Conclusions. 1. Some tempos are not cars. 2. Some tempos are not motorcycles. 3. No cars are tempos. 4. Some cars are not motorcycles. Which of the following conclusions follow(s) the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0Mg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEJ1cyBDYXJzICBNb3RvciAgY3ljbGVzICB4IFNjb290ZXIgIFRlICBtICBwbyAgeCAgKDIpIGFuZCAoNCkgZm9sbG93LiAgU29sdXRpb25zICg0My00NSkgIEYgQiAgKC0pICgrKSAgKFByb2Zlc3NvcikgKEVuZ2luZWVyKSAgRCBFICAoKykgKC0pICAoRG9jdG9yKSAoSW50ZXJpb3IgIERlY29yYXRvciApICBDIEEgKC0pICAoU2lzdGVyKSA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 4 ",
        "option2" : " Only 2 ",
        "option3" : " 2 and 4 ",
        "option4" : " 1 and 2  Directions (Q. No. 43-45) Examine the  information given below and answer the  questions that follow:  There are six members A, B, C, D, E and F  in a family having different professions.  There are two married couples in the family.  D is a doctor and his wife is an interior  decorator. A is the granddaughter of F and  sister of C, who is a teacher. B is the  grandfather of C and is married to a  professor. A's mother is an interior decorator  and is the daughter-in-law of an engineer. "
      }
    },
    {
      "index" : 43,
      "question" : "What is the profession of A? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0Mw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEZyb20gdGhlIGFib3ZlIGluZm9ybWF0aW9ucywgcHJvZmVzc2lvbiAgb2YgQSBjYW5ub3QgYmUgZGV0ZXJtaW5lZC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Professor ",
        "option2" : " Engineer ",
        "option3" : " Interior decorator ",
        "option4" : " Cannot be determined "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following is a married couple? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0NA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEZyb20gdGhlIGFib3ZlIGluZm9ybWF0aW9ucywgYW1vbmcgdGhlICBnaXZlbiBvcHRpb25zIG5vbmUgb2YgdGhlc2UgYXJlIG1hcnJpZWQgIGNvdXBsZS4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " B, E ",
        "option2" : " D, F ",
        "option3" : " B, D ",
        "option4" : " None of these  8 "
      }
    },
    {
      "index" : 45,
      "question" : "Who is the wife of D? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0NQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEUgaXMgd2lmZSBvZiBELiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " E ",
        "option2" : " F ",
        "option3" : " A ",
        "option4" : " B "
      }
    },
    {
      "index" : 47,
      "question" : "What is the cost of each book? 1. The cost of three books, two pens and three 49. pencils is Rs. 2. The cost of two books, four pens and five pencils is Rs. 49 48. What is the average speed of the car from city A to city C? 1. The car travelled from city A to city B in four hours and travelled further 70 km in 1 h 45 min to reach city C. 2. The car travelled a total distance of 230 km form city A to city C. Directions (Q. Nos. 49-50) Read the following information and answer the questions that follow: Eleven students A, B, C, D, E, F, G, H, I J and K are sitting in the first row of the class facing the blackboard. (-)D who is to the immediate left of F is second to the right of C. (-)A is the second to the right of E, who is at one of the ends. (-)J is the immediate neighbour of A and B and third to the left of G. (-)H is to the immediate left of D and third to the right of I. 49. Who is sitting in the middle of the row? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w0Nw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIE5vLiBvZiB1bmtub3duIGlzIG1vcmUgdGhhbiB0aGUgbm8uIG9mICBlcXVhdGlvbiwgc28sIHdlIGNhbid0IGRldGVybWluZS4gIDgg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " B ",
        "option2" : " C ",
        "option3" : " G ",
        "option4" : " I "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following statements is true in the context of the above sitting arrangements? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZ3w1MA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIEIgaXMgc2l0dGluZyBiZXR3ZWVuIEogYW5kIEkuICDvgbbvgbbvgbbvgbbvgbYg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfFJlYXNvbmluZw==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "Reasoning",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " There are three students sitting between D  and G ",
        "option2" : " K is between A and J ",
        "option3" : " B is sitting between J and I ",
        "option4" : " G and C are neighbours sitting to the  immediate right of H.  ********** "
      }
    }
  ],
  "subject" : "CSAT",
  "topic" : "Reasoning",
  "year" : "2023"
}