{
  "testId" : "vajiram-2023-prelims-3-power-up-prelims-6",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\vajiram\\prelims\\vajiram-2023-prelims-3-power-up-prelims-6.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to the Dhamma policy of Ashoka:  1. It codified the sermons given by Lord  Buddha on enlightenment.  2. Dhamma was considered to be anti- Brahmanical in nature.  3. Dhamma-mahamattas were mandated to  convert people to Buddhism.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSB3b3JkIERoYW1tYSBpcyB0aGUgUHJha3JpdCBmb3JtIG9mIHRoZSBTYW5za3JpdCB3b3JkIERoYXJtYS4gRGhhbW1hIGhhcyBiZWVuICAgdmFyaW91c2x5IHRyYW5zbGF0ZWQgYXMgcGlldHksIG1vcmFsIGxpZmUsIHJpZ2h0ZW91c25lc3MgYW5kIHNvIG9uLCBidXQgdGhlIGJlc3Qgd2F5IHRvICAgdW5kZXJzdGFuZCB3aGF0IEFzb2thIG1lYW5zIGJ5IERoYW1tYSBpcyB0byByZWFkIGhpcyBlZGljdHMuICAgKC0pQXNob2thJ3MgRGhhbW1hIHdhcyBiYXNlZCBvbiB0aGUgdW5pZnlpbmcgcHJpbmNpcGxlcyBvZiBhbGwgbWFqb3IgcmVsaWdpb25zIG9mIHRoZSAgIHdvcmxkLiBEaGFtbWEgd2FzIG5vdCBhbnkgcGFydGljdWxhciByZWxpZ2lvdXMgZmFpdGggb3IgcHJhY3RpY2U7IGhlbmNlIERoYW1tYSAgIHNob3VsZCBub3QgYmUgdHJhbnNsYXRlZCBhcyByZWxpZ2lvbi4gU28sIHN0YXRlbWVudCAxIGlzIG5vdCBjb3JyZWN0LiAgICgtKUFzaG9rYSdzIERoYW1tYSB3YXMgbm90IGFudGktQnJhaG1hbmljYWwgYW5kIHRoaXMgaXMgcHJvdmVkIGJ5IHRoZSBmYWN0IHRoYXQgICByZXNwZWN0IGZvciB0aGUgQnJhaG1hbmFzIGFuZCBTcmFtYW5hcyBpcyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIGhpcyBEaGFtbWEuIFNvLCAgIHN0YXRlbWVudCAyIGlzIG5vdCBjb3JyZWN0LiAgICgtKU1ham9yIFJvY2sgRWRpY3QgViByZWZlcnMgdG8gdGhlIGFwcG9pbnRtZW50IG9mIERoYW1tYS1tYWhhbWF0dGFzIGZvciB0aGUgZmlyc3QgICB0aW1lIGluIHRoZSB0d2VsZnRoIHllYXIgb2YgaGlzIHJlaWduLiAgIG8gVGhlc2Ugc3BlY2lhbCBvZmZpY2VycyB3ZXJlIGFwcG9pbnRlZCBieSB0aGUga2luZyB0byBsb29rIGFmdGVyIHRoZSBpbnRlcmVzdHMgb2YgICBhbGwgc2VjdHMgYW5kIHJlbGlnaW9ucyBhbmQgc3ByZWFkIHRoZSBtZXNzYWdlIG9mIERoYW1tYSBpbiBlYWNoIG5vb2sgYW5kICAgY29ybmVyIG9mIHRoZSBzb2NpZXR5LiBUaGUgaW1wbGVtZW50YXRpb24gb2YgdGhlIHBvbGljeSBvZiBEaGFtbWEgd2FzICAgZW50cnVzdGVkIGluIHRoZWlyIGhhbmRzLiBIb3dldmVyLCB0aGV5IHdlcmUgbm90IG1hbmRhdGVkIHRvIGNvbnZlcnQgICBwZW9wbGUgdG8gZm9sbG93IEJ1ZGRoaXNtLiBTbywgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgbyBEaGFtbWEtbWFoYW1hdHRhcyBoYWQgZ3JhZHVhbGx5IGRldmVsb3BlZCBpbnRvIGEgdHlwZSBvZiBwcmllc3Rob29kIG9mICAgRGhhbW1hIHdpdGggZ3JlYXQgcG93ZXJzIGFuZCBzb29uIGJlZ2FuIHRvIGludGVyZmVyZSBpbiBwb2xpdGljcyBhcyB3ZWxsLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgS25vd2xlZGdlIEJveCAgIERoYW1tYSBQb2xpY3kgb2YgQXNob2thICAgKC0pTWFqb3IgUm9jayBFZGljdCBJIGRlY2xhcmVzIHByb2hpYml0aW9uIG9mIGFuaW1hbCBzYWNyaWZpY2UgYW5kIGhvbGlkYXkgb2YgZmVzdGl2ZSAgIGdhdGhlcmluZ3MuICAgKC0pTWFqb3IgUm9jayBFZGljdCBJSSByZWxhdGVzIHRvIGNlcnRhaW4gbWVhc3VyZXMgb2Ygc29jaWFsIHdlbGZhcmUgd2hpY2ggYXJlIGluY2x1ZGVkICAgaW4gdGhlIHdvcmtpbmcgb2YgRGhhbW1hLiBJdCBtZW50aW9ucyBtZWRpY2FsIHRyZWF0bWVudCBmb3IgbWVuIGFuZCBhbmltYWxzLCAgIGNvbnN0cnVjdGlvbiBvZiByb2Fkcywgd2VsbHMsIHRyZWUgcGxhbnRpbmcsIGV0Yy4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pTWFqb3IgUm9jayBFZGljdCBJSUkgZGVjbGFyZXMgdGhhdCBsaWJlcmFsaXR5IHRvd2FyZHMgQnJhaG1hbmFzIGFuZCBTcmFtYW5hcyBpcyBhICAgdmlydHVlLCByZXNwZWN0IHRvIG1vdGhlciBhbmQgZmF0aGVyLCBldGMuIGFyZSBhbGwgZ29vZCBxdWFsaXRpZXMuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgSVYgY29tbWVudHMgdGhhdCBkdWUgdG8gdGhlIHBvbGljeSBvZiBEaGFtbWEsIHRoZSBsYWNrIG9mICAgbW9yYWxpdHkgYW5kIGRpc3Jlc3BlY3QgdG93YXJkcyBCcmFobWFuYXMgYW5kIFNyYW1hbmFzLCB2aW9sZW5jZSwgdW5zZWVtbHkgICBiZWhhdmlvdXIgdG8gZnJpZW5kcywgcmVsYXRpdmVzIGFuZCBvdGhlcnMgYW5kIGV2aWxzIG9mIHRoaXMga2luZCBoYXZlIGJlZW4gY2hlY2tlZC4gICBUaGUga2lsbGluZyBvZiBhbmltYWxzIHRvIGEgbGFyZ2UgZXh0ZW50IHdhcyBhbHNvIHN0b3BwZWQuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgViByZWZlcnMgdG8gdGhlIGFwcG9pbnRtZW50IG9mIERoYW1tYS1tYWhhbWF0dGFzIGZvciB0aGUgZmlyc3QgICB0aW1lIGluIHRoZSB0d2VsZnRoIHllYXIgb2YgaGlzIHJlaWduLiAgICgtKU1ham9yIFJvY2sgRWRpY3QgVkkgaXMgYW4gaW5zdHJ1Y3Rpb24gdG8gRGhhbW1hLW1haGFtYXR0YXMuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgVklJIGlzIGEgcGxlYSBmb3IgdG9sZXJhdGlvbiBhbW9uZ3N0IGFsbCB0aGUgc2VjdHMuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgVklJSSBzdGF0ZXMgdGhhdCBEaGFtbWF5YXRyYXMgKHRvdXJzKSB3b3VsZCBiZSB1bmRlcnRha2VuIGJ5ICAgdGhlIGVtcGVyb3IuIFRoZSBlYXJsaWVyIHByYWN0aWNlLCBvZiB0aGUgZW1wZXJvciwgb2YgZ29pbmcgb3V0IG9uIGh1bnRpbmcgICBleHBlZGl0aW9ucyB3YXMgZ2l2ZW4gdXAuIERoYW1tYXlhdHJhcyBlbmFibGVkIHRoZSBlbXBlcm9yIHRvIGNvbWUgaW50byAgIGNvbnRhY3Qgd2l0aCB2YXJpb3VzIHNlY3Rpb25zIG9mIHBlb3BsZSBpbiB0aGUgZW1waXJlLiAgICAoLSlNYWpvciBSb2NrIEVkaWN0IElYIGF0dGFja3MgY2VyZW1vbmllcyBwZXJmb3JtZWQgYWZ0ZXIgYmlydGgsIGlsbG5lc3MsIG1hcnJpYWdlICAgYW5kIGJlZm9yZSBzZXR0aW5nIG91dCBmb3IgYSBqb3VybmV5LiBBIGNlbnN1cmUgaXMgcGFzc2VkIGFnYWluc3QgY2VyZW1vbmllcyAgIG9ic2VydmVkIGJ5IHdpdmVzIGFuZCBtb3RoZXJzLiBBc29rYSBpbnN0ZWFkIGxheXMgc3RyZXNzIG9uIHRoZSBwcmFjdGljZSBvZiAgIERoYXJubWEgYW5kIHVzZWxlc3NuZXNzIG9mIGNlcmVtb25pZXMuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgWCBkZW5vdW5jZXMgZmFtZSBhbmQgZ2xvcnkgYW5kIHJlYXNzZXJ0cyB0aGUgbWVyaXRzIG9mIGZvbGxvd2luZyAgIHRoZSBwb2xpY3kgb2YgRGhhbW1hLiAgICAoLSlNYWpvciBSb2NrIEVkaWN0IFhJIGlzIGEgZnVydGhlciBleHBsYW5hdGlvbiBvZiB0aGUgcG9saWN5IG9mIERoYW1tYS4gRW1waGFzaXMgaXMgICBvbiByZXNwZWN0IHRvIGVsZGVycywgYWJzdGFpbmluZyBmcm9tIGtpbGxpbmcgYW5pbWFscywgYW5kIGxpYmVyYWxpdHkgdG93YXJkcyAgIGZyaWVuZHMuICAgKC0pTWFqb3IgUm9jayBFZGljdCBYSUkgaXMgYWdhaW4gYW4gYXBwZWFsIHRvd2FyZHMgdG9sZXJhdGlvbiBhbW9uZyBzZWN0cy4gVGhpcyBlZGljdCAgIHJlZmxlY3RzIHRoZSBhbnhpZXR5IHRoZSBraW5nIGZlbHQgZHVlIHRvIHRoZSBjb25mbGljdCBiZXR3ZWVuIHNlY3RzIGFuZCBjYXJyaWVzIGhpcyAgIHBsZWEgZm9yIGhhcm1vbnkuICAgICgtKU1ham9yIFJvY2sgRWRpY3QgWElJSSBpcyBvZiBwYXJhbW91bnQgaW1wb3J0YW5jZSBpbiB1bmRlcnN0YW5kaW5nIHRoZSBBc29rYW4gICBwb2xpY3kgb2YgRGhhbW1hLiBUaGUgUm9jayBFZGljdCBwbGVhZHMgZm9yIGNvbnF1ZXN0IGJ5IERoYW1tYSBpbnN0ZWFkIG9mIFdhci4gICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 3 only  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to the megalithic culture in  India, consider the following statements:   1. Megaliths were constructed as burial sites  and commemorative memorials.   2. Megaliths are found in Karnataka,  Telangana and Tamil Nadu.  3. Gonds of central India and the Khasis of  Meghalaya include megaliths in their  religious beliefs.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKU1lZ2FsaXRocyB3ZXJlIGNvbnN0cnVjdGVkIGVpdGhlciBhcyBidXJpYWwgc2l0ZXMgICBvciBjb21tZW1vcmF0aXZlIChub24tc2VwdWxjaHJhbCkgbWVtb3JpYWxzLiAgIFRoZSBmb3JtZXIgYXJlIHNpdGVzIHdpdGggYWN0dWFsIGJ1cmlhbCByZW1haW5zLCAgIHN1Y2ggYXMgZG9sbWVub2lkIGNpc3RzIChib3gtc2hhcGVkIHN0b25lIGJ1cmlhbCAgIGNoYW1iZXJzKSwgY2Fpcm4gY2lyY2xlcyAoc3RvbmUgY2lyY2xlcyB3aXRoIGRlZmluZWQgICBwZXJpcGhlcmllcykgYW5kIGNhcHN0b25lcyAoZGlzdGluY3RpdmUgICBtdXNocm9vbS1zaGFwZWQgYnVyaWFsIGNoYW1iZXJzIGZvdW5kIG1haW5seSAgIGluIEtlcmFsYSkuIFRoZSB1cm4gb3IgdGhlIHNhcmNvcGhhZ3VzIGNvbnRhaW5pbmcgICB0aGUgbW9ydGFsIHJlbWFpbnMgd2FzIHVzdWFsbHkgbWFkZSBvZiB0ZXJyYWNvdHRhLiBOb24tc2VwdWxjaHJhbCBtZWdhbGl0aHMgaW5jbHVkZSAgIG1lbW9yaWFsIHNpdGVzIHN1Y2ggYXMgbWVuaGlycy4gKFRoZSBsaW5lIHNlcGFyYXRpbmcgdGhlIHR3byBpcyBhIGJpdCBibHVycnksIHNpbmNlICAgcmVtYWlucyBoYXZlIGJlZW4gZGlzY292ZXJlZCB1bmRlcm5lYXRoIG90aGVyd2lzZSBub24tc2VwdWxjaHJhbCBzaXRlcywgYW5kIHZpY2UgICB2ZXJzYS4pIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pQXJvdW5kIDIsMjAwIG1lZ2FsaXRoaWMgc2l0ZXMgY2FuIGJlIGZvdW5kICAgaW4gcGVuaW5zdWxhciBJbmRpYSBpdHNlbGYsIG1vc3Qgb2YgdGhlbSAgIHVuZXhjYXZhdGVkLiBNZWdhbGl0aHMgYXJlIHNwcmVhZCBhY3Jvc3MgICB0aGUgSW5kaWFuIHN1YmNvbnRpbmVudCwgdGhvdWdoIHRoZSBidWxrIG9mICAgdGhlbSBhcmUgZm91bmQgaW4gcGVuaW5zdWxhciBJbmRpYSwgICBjb25jZW50cmF0ZWQgaW4gdGhlIHN0YXRlcyBvZiBNYWhhcmFzaHRyYSAgIChtYWlubHkgaW4gVmlkYXJiaGEpLCBLYXJuYXRha2EsIFRhbWlsICAgTmFkdSwgS2VyYWxhLCBBbmRocmEgUHJhZGVzaCBhbmQgICBUZWxhbmdhbmEuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICAoLSlFdmVuIHRvZGF5LCBhIGxpdmluZyBtZWdhbGl0aGljIGN1bHR1cmUgICBlbmR1cmVzIGFtb25nIHNvbWUgdHJpYmVzIHN1Y2ggYXMgdGhlICAgR29uZHMgb2YgY2VudHJhbCBJbmRpYSBhbmQgdGhlIEtoYXNpcyBvZiBNZWdoYWxheWEuIFRoZSB0cmliZXMgd2hvIHN0aWxsIGluY2x1ZGUgICBtZWdhbGl0aHMgaW4gdGhlaXIgcmVsaWdpb3VzIGJlbGllZnMgYXJlIHRoZSBHYWRhYmFzLCBHb25kcywgS3VydW1iYXMsIE1hcmlhcywgICBNdW5kYXMsIFNhdmFyYXMsIEdhcm9zLCBLaGFzaXMsIE5hZ2FzLCBLYXJiaXMsIFRpd2FzLCBhbmQgTWFyYW1zLiBUaGVzZSBncm91cHMgc3RpbGwgICBjb25zdHJ1Y3QgbWVnYWxpdGhpYyBtb251bWVudHMgZm9yIHRoZSBkZWFkLiAnTWVnYWxpdGhpc20nIG1heSBiZSBjb25zaWRlcmVkIGFzIGEgICBsaXZpbmcgdHJhZGl0aW9uLiBTbywgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEtub3dsZWRnZSBCb3ggICBNZW5oaXJzICAgICgtKVRoZXNlIGFyZSB1cHJpZ2h0IHN0b25lcyBmcm9tIHRoZSBNZWdhbGl0aGljICAgcGVyaW9kLiBUaGV5IGFyZSBlcmVjdGVkIGFib3ZlIGEgYnVyaWFsIHNpdGUgb3IgICBuZWFyIGEgYnVyaWFsIHNpdGUgYXMgYSBtZW1vcmlhbC4gICAoLSlJdCBjb3VsZCBhbHNvIGV4aXN0IGFzIHBhcnQgb2YgYSBncm91cCBvZiBzaW1pbGFyICAgc3RvbmVzLiBUaGV5IGhhdmUgZGlmZmVyZW50IHNpemVzIHdpdGggdW5ldmVuICAgYW5kIHNxdWFyZSBzaGFwZXMsIG9mdGVuIHRhcGVyaW5nIHRvd2FyZHMgdGhlICAgdG9wLiAgICAoLSlNZW5oaXJzIGFyZSB3aWRlbHkgZGlzdHJpYnV0ZWQgYWNyb3NzIGRpZmZlcmVudCAgIGNvbnRpbmVudHMgdml6LiwgRXVyb3BlLCBBZnJpY2EsIGFuZCBBc2lhLCBidXQgICBhcmUgbW9zdCBjb21tb25seSBmb3VuZCBpbiBXZXN0ZXJuIEV1cm9wZTsgaW4gcGFydGljdWxhciBpbiBJcmVsYW5kLCBHcmVhdCBCcml0YWluICAgYW5kIEJyaXR0YW55LiAgICAoLSlUaGUgR29uZHMsIEt1cnVtYmFzLCBNb3JpYXMgYW5kIFNhdmFyYXMgcGxhbnQgYW5kIHdvcnNoaXAgc3RvbmUgbWVuaGlycyBhbmQgICBzb21ldGltZXMgZXJlY3Qgd29vZGVuIHBpbGxhcnMuIFNvbWUgb2YgdGhlc2Ugd29vZGVuIHBpbGxhcnMgYXJlIGN1cnZlZCB3aXRoIGEgICByb3VuZGVkIHByb2plY3Rpb24gYXQgdGhlIHRvcCB0byByZXByZXNlbnQgdGhlIGh1bWFuIGhlYWQuIFRoZXNlIHRyaWJlcyBjb25zaWRlciAgIHRoZSBzdG9uZSBtZW5oaXJzIGFuZCB0aGUgd29vZGVuIHBvc3RzIHRvIHJlcHJlc2VudCB0aGVpciBnb2RzLCBvciBvY2Nhc2lvbmFsbHksICAgdGhlIHNwaXJpdCBvZiB0aGUgZGVhZC4gICBSZWxldmFuY2U6IFJlY2VudGx5LCBhIE1lbmhpciBvZiB0aGUgTWVnYWxpdGhpYyBwZXJpb2QgaGFzIGJlZW4gZm91bmQgaW4gRGFrc2hpbmEgS2FubmFkYSAgIGluIEthcm5hdGFrYS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements with  reference to the Satrap system of  Government:  1. It was introduced by the Sakas and  Parthians in India.  2. It was a centralised administrative setup  with no delegation of powers to the  provinces.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBTYWthcyBhbG9uZyB3aXRoIHRoZSBQYXJ0aGlhbnMgaW50cm9kdWNlZCB0aGUgU2F0cmFwIHN5c3RlbSBvZiBnb3Zlcm5tZW50ICAgd2hpY2ggd2FzIHNpbWlsYXIgdG8gdGhhdCBvZiB0aGUgQWNoYWVtZW5pZCBhbmQgU2VsZXVjaWQgc3lzdGVtcyBpbiBJcmFuLiBTbywgICBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlVbmRlciB0aGlzIHN5c3RlbSwgdGhlIGtpbmdkb20gd2FzIGRpdmlkZWQgaW50byBwcm92aW5jZXMgZWFjaCB1bmRlciBhIG1pbGl0YXJ5ICAgZ292ZXJub3IgY2FsbGVkIE1haGFrc2hhdHJhcGEgKGdyZWF0IFNhdHJhcCkuIEdvdmVybm9ycyB3aXRoIGxvd2VyIHN0YXR1cyB3ZXJlICAgY2FsbGVkIEtzaGF0cmFwYXMgKFNhdHJhcHMpLiBUaGVzZSBnb3Zlcm5vcnMgaXNzdWVkIHRoZWlyIG93biBpbnNjcmlwdGlvbnMgYW5kIGFsc28gICBtaW50ZWQgdGhlaXIgb3duIGNvaW5zLiBUaGlzIGlzIGluZGljYXRpdmUgb2YgYSBtb3JlIGluZGVwZW5kZW50IHN0YXR1cyB0aGFuIHdhcyAgIG90aGVyd2lzZSBub3JtYWwgaW4gYW4gYWRtaW5pc3RyYXRpdmUgc2V0LXVwLiBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBLbm93bGVkZ2UgQm94ICAgU0FLQVMgICAoLSlPcmlnaW46IFRoZXkgd2VyZSB0aGUgcGVvcGxlIG9mICAgQ2VudHJhbCBBc2lhbiBvcmlnaW4gd2hvIGhhZCBraW4gdGllcyAgIHdpdGggdGhlIFNjeXRoaWFucy4gICAoLSlFbWVyZ2VuY2UgaW4gSW5kaWE6IDFzdCBjZW50dXJ5IEIuQyAgICgtKUltcG9ydGFudCBSdWxlcnM6IE1hdWVzIG9yIE1vZ2EgICAoZmlyc3QgU2FrYSBraW5nIGluIEluZGlhKSwgQXplcyBJICwgQXplcyBJSSAgICAgKC0pQXJlYSBvZiBjb250cm9sOiBUaGUgbm9ydGh3ZXN0IHRvICAgTWF0aHVyYSBhbmQgaW5jbHVkZWQgdGhlIHdob2xlIHRyYWN0ICAgZnJvbSBVamphaW4gdG8gU2F1cmFzaHRyYS4gICAoLSlBZG1pbmlzdHJhdGlvbiBhbmQgUG9saXR5OiAgICBvIElzc3VlZCBjb2lucyBpbiBpbWl0YXRpb24gb2YgdGhlICAgSW5kby1HcmVlayBzdHlsZSAgICBvIFVzZWQgdGhlIElyYW5pYW4gdGl0bGUga2luZ3Mgb2YgICBraW5ncyAoc2hhaGFudSBzaGFoaSkuICAgbyBUaGUgcG9saXRpY2FsIHN5c3RlbSBhcHBlYXJzIHRvICAgYmUgYSBjb25mZWRlcmF0aW9uIG9mICAgKCd0cmliYWwnL2NsYW4pIGNoaWVmdGFpbnMgICBoZWFkZWQgYnkgdGhlIFNha2Ega2luZ3MuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFBBUlRISUFOUyAgICgtKU9yaWdpbjogUGFobGF2YXMgb3JpZ2luYWxseSBjYW1lICAgZnJvbSB0aGUgSXJhbmlhbiBwcm92aW5jZSBvZiAgIFBhcnRoaWEuICAgKC0pRW1lcmdlbmNlIGluIEluZGlhOiBJbiAxc3QgY2VudHVyeSAgIEEuRCwgdGhleSByZXBsYWNlZCB0aGUgU2FrYXMuICAgKC0pSW1wb3J0YW50IFJ1bGVyczogR29uZG9waGFyZXMtICBJLCBSdWRyYWRhbWFuIChvZiB0aGUgYnJhbmNoIG9mICAgU2FrYXMgaW4gS2F0aGlhd2FyIGFuZCBNYWx3YSBpbiAgIHdlc3QgSW5kaWEpLiAgICgtKURlY2xpbmU6IFRoZSByaXNlIG9mIHRoZSBLdXNoYW5hcyAgIHRvIHByb21pbmVuY2UgaW4gSW5kaWEgY29pbmNpZGVkICAgd2l0aCB0aGUgZGVjbGluZSBvZiB0aGUgUGFobGF2YXMuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 4,
      "question" : "Who among the following were called  'Muvendar', the three crowned kings in the  Sangam literature?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluIFNhbmdhbSBwb2VtcywgQ2hlcmFzLCBDaG9sYXMgYW5kIFBhbmR5YXMgICB3ZXJlIGtub3duIGFzIE11dmVuZGFyLCAndGhlIHRocmVlIGNyb3duZWQgICBraW5ncycuIFRoZXkgY29udHJvbGxlZCBtYWpvciBhZ3JhcmlhbiB0ZXJyaXRvcmllcywgICB0cmFkZSByb3V0ZXMgYW5kIHRvd25zLiAgICgtKVRoZSBDaG9sYXMgY29udHJvbGxlZCB0aGUgY2VudHJhbCBhbmQgbm9ydGhlcm4gICBwYXJ0cyBvZiBUYW1pbCBOYWR1LiBUaGVpciBjb3JlIGFyZWEgb2YgcnVsZSB3YXMgICB0aGUgS2F2ZXJpIGRlbHRhLCBsYXRlciBrbm93biBhcyBDaG9sYW1hbmRhbGFtLiAgIFRoYW5qYXZ1ciAoVGFuam9yZSkgd2FzIHRoZSBjYXBpdGFsIG9mIENob2xhcy4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICgtKVRoZSBDaGVyYXMgY29udHJvbGxlZCB0aGUgY2VudHJhbCBhbmQgbm9ydGhlcm4gcGFydHMgb2YgS2VyYWxhIGFuZCB0aGUgS29uZ3UgcmVnaW9uICAgb2YgVGFtaWwgTmFkdS4gVmFuamkgd2FzIHRoZWlyIGNhcGl0YWwgYW5kIHRoZSBwb3J0cyBvZiB0aGUgd2VzdCBjb2FzdCwgTXVzaXJpIGFuZCAgIFRvbmRpLCB3ZXJlIHVuZGVyIHRoZWlyIGNvbnRyb2wuICAgKC0pVGhlIFBhbmR5YXMgcnVsZWQgZnJvbSBNYWR1cmFpLiBLb3JrYWkgd2FzIHRoZWlyIG1haW4gcG9ydCwgbG9jYXRlZCBuZWFyIHRoZSAgIGNvbmZsdWVuY2Ugb2YgVGhhbXByYXBhcmFuaSB3aXRoIHRoZSBCYXkgb2YgQmVuZ2FsLiAgICBUaGVyZWZvcmUsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Cheras, Cholas and Chalukyas  ",
        "option2" : " Cheras, Cholas and Pandyas  ",
        "option3" : " Chalukyas, Kakatiyas and Rashtrakutas  ",
        "option4" : " Cheras, Cholas and Pallavas   "
      }
    },
    {
      "index" : 5,
      "question" : "With reference to the religious practices in  India, the 'Yapaniya' sect belongs to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBZYXBhbml5YSBkZXZlbG9wZWQgYXMgYSBKYWluYSBzZWN0IGFyb3VuZCB0aGUgZmlyc3QgY2VudHVyeSBBLkQuIEl0IHdhcyBwcm9iYWJseSAgIGZvdW5kZWQgYnkgS2FsYXNhLCBhIG1vbmsgb2YgU3ZldGFtYmFyYSBzZWN0IGF0IEthbGF5YW5hZ2FyYS4gICAgKC0pQSBzaWduaWZpY2FudCBmZWF0dXJlIG9mIHRoaXMgc2VjdCB3YXMgdGhhdCBpdCB0aG91Z2h0IHRoYXQgZXZlbiB3b21lbiBjb3VsZCBhdHRhaW4gICBtb2tzaGEgYW5kIHRoYXQga2V2YWxpbnMgc2hvdWxkIHRha2UgdGhlaXIgZm9vZCBpbiBtb3JzZWxzLiAgICgtKVRoZSBZYXBhbml5YXMgd29yc2hpcHBlZCBudWRlIGltYWdlcyB3aGljaCBzdGlsbCBleGlzdCBhbmQgdGhlIHBlb3BsZSB3aG8gd29yc2hpcCAgIGluIHRoZXNlIHRlbXBsZXMgbm93YWRheXMgYXJlIERpZ2FtYmFyYXMuICAgKC0pSXQgZXhpc3RlZCB1cCB0byAxNHRoIGNlbnR1cnkgQS5ELiBhbmQgdWx0aW1hdGVseSBhYnNvcmJlZCBpdHNlbGYgaW50byB0aGUgRGlnYW1iYXJhICAgY29tbXVuaXR5LiBUaGUgZWFybGllc3QgcmVmZXJlbmNlIG9mIHRoaXMgc2VjdCBpcyBtYWRlIHByb2JhYmx5IGluIHRoZSBpbnNjcmlwdGlvbiBvZiAgIEtoYXJhdmVsYSBpbiB0aGUgMm5kIENlbnR1cnkgQS5ELiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Jainism  ",
        "option2" : " Buddhism  ",
        "option3" : " Ajivikas  ",
        "option4" : " Shaivism   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to the early Vedic society,  consider the following statements:   1. Hymns of the Rigveda mention the  importance of cattle.   2. A chief of the clan was called gomat or  one who protects cows.  3. Godhuli is used as a term for a measure  of time in Rigveda.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlIeW1ucyBvZiB0aGUgUmlndmVkYSB5aWVsZCBleHRlbnNpdmUgZXZpZGVuY2Ugb2YgdGhlIGltcG9ydGFuY2Ugb2YgY2F0dGxlIGluIHRoZSBFYXJseSAgIFZlZGljIHNvY2lldHkuIE1hbnkgbGluZ3Vpc3RpYyBleHByZXNzaW9ucyBpbiBSaWd2ZWRhIGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIGNvdyAgIChnYXUpLiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAoLSlDYXR0bGUgd2FzIHRoZSBjaGllZiBtZWFzdXJlIG9mIHdlYWx0aCBhbmQgYSB3ZWFsdGh5IG1hbiB3aG8gb3duZWQgbWFueSBjYXR0bGUgICB3YXMgY2FsbGVkICdnb21hdCcuIFRoZSB0ZXJtcyB1c2VkIGZvciBjb25mbGljdHMgYW5kIGJhdHRsZXMgaW4gdGhpcyBwZXJpb2Qgd2VyZSAgIGdhdmlzaHRpLCBnYXZlc2FuYSwgZ2F2eWF0LCBldGMuIFRoZSByYWphIG9yIHRoZSBjaGllZiBpcyBjYWxsZWQgdGhlICdnb3BhdGknIG9yIG9uZSB3aG8gICBwcm90ZWN0cyBjb3dzLiBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgKC0pSW4gdGhlIFJpZ3ZlZGEsIEdvZGh1bGkgaXMgdXNlZCBhcyBhIHRlcm0gZm9yIGEgbWVhc3VyZSBvZiB0aW1lLiBEaXN0YW5jZSBpcyBjYWxsZWQgICBnYXZ5dXRpLiBTbywgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICAoLSlBIGRhdWdodGVyIGlzIGNhbGxlZCBkdWhpdHIgb3Igb25lIHdobyBtaWxrcyB0aGUgY293cy4gS2luc2hpcCB1bml0cyBhcmUgbGFiZWxsZWQgYXMgICBnb3RyYS4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlbGV2YW5jZTogUmVjZW50IG1lZGlhIHJlcG9ydHMgYWJvdXQgY293cyBhcmUgbWVudGlvbmluZyB0aGF0IHRoZSBSaWcgVmVkYSByZWZlcnMgdG8gdGhlICAgY293IGFzIGJlaW5nICdhZ2hueWEnIChub3QgdG8gYmUga2lsbGVkIG9yIGluanVyZWQpIGluIGF0IGxlYXN0IDE3IHBsYWNlcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following pairs:  Sl.  No.  Chalcolithic  Culture  State  1.  Banas culture : Rajasthan  2.  Kayatha culture : Karnataka  3. Malwa culture : Madhya  Pradesh  4. Jorwe culture : Maharashtra  How many pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIENoYWxjb2xpdGhpYyBjdWx0dXJlczogICAoLSlCeSB0aGUgc2Vjb25kIG1pbGxlbm5pdW0gQi5DLiBzZXZlcmFsIHJlZ2lvbmFsIGN1bHR1cmVzIHNwcmFuZyB1cCBpbiBkaWZmZXJlbnQgcGFydHMgICBvZiB0aGUgSW5kaWFuIHN1YmNvbnRpbmVudC4gVGhlc2Ugd2VyZSBub24tdXJiYW4sIG5vbi1IYXJhcHBhbiBhbmQgd2VyZSAgIGNoYXJhY3Rlcml6ZWQgYnkgdGhlIHVzZSBvZiBzdG9uZSBhbmQgY29wcGVyIHRvb2xzLiBIZW5jZSwgdGhlc2UgY3VsdHVyZXMgYXJlIHRlcm1lZCAgIGFzIGNoYWxjb2xpdGhpYyBjdWx0dXJlcy4gVGhleSBhcmUgaWRlbnRpZmllZCBvbiB0aGUgYmFzaXMgb2YgdGhlaXIgZ2VvZ3JhcGhpY2FsIGxvY2F0aW9uLiAgICAoLSlCYW5hcyBjdWx0dXJlIChBaGFyIGN1bHR1cmUpOiBJdCBpcyBsb2NhdGVkIGluIHRoZSBCYW5hcyBiYXNpbiBpbiBSYWphc3RoYW4uIFNvLCBwYWlyIDEgaXMgICBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgICgtKUtheWF0aGEgY3VsdHVyZTogSXQgZ2V0cyBpdHMgbmFtZSBmcm9tIHRoZSBzaXRlIG9mIEtheWF0aGEgaW4gVWpqYWluIGRpc3RyaWN0LCBNYWRoeWEgICBQcmFkZXNoLiBTbywgcGFpciAyIGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgICgtKU1hbHdhIGN1bHR1cmU6IEl0IHdhcyBhIGN1bHR1cmUgb2YgTWFsd2EgYW5kIGV4dGVuZGVkIGludG8gcGFydHMgb2YgTWFkaHlhIFByYWRlc2ggICBhbmQgTWFoYXJhc2h0cmEuIFNvLCBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pSm9yd2UgY3VsdHVyZTogSXQgaXMgdGhlIGNoYWxjb2xpdGhpYyBjdWx0dXJlIG9mIE1haGFyYXNodHJhLCBleHRlbmRpbmcgYWxtb3N0IGFsbCBvdmVyICAgdGhlIHByZXNlbnQgc3RhdGUsIGV4Y2VwdCB0aGUgY29hc3RhbCBzdHJpcCBvbiB0aGUgd2VzdCBhbmQgVmlkYXJiaGEgaW4gdGhlIG5vcnRoIGVhc3QuICAgVGhlIGN1bHR1cmUgaXMgbmFtZWQgYWZ0ZXIgdGhlIHR5cGUgc2l0ZSBvZiBKb3J3ZSBpbiBBaG1hZG5hZ2FyIGRpc3RyaWN0LCBHdWphcmF0LiBTbywgICBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgU28sIG9ubHkgdGhyZWUgcGFpcnMgYXJlIGNvcnJlY3RseSBtYXRjaGVkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3ViamVjdDogSGlzdG9yeSB8IE1pc2NlbGxhbmVvdXMoaGlzdG9yeSkgICBUYWdzOiBGYWN0dWFsICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs    ",
        "option3" : " Only three pairs   ",
        "option4" : " All four pairs   Join Telegram Channel @cse_updates For More  t.me/cse_updates     2      "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to ancient Indian history, the  disintegration of the Mauryan empire was  followed by the rise of which of the following  kingdoms?  1. Sungas  2. Nandas  3. Haryankas  4. Satavahanas  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBkaXNpbnRlZ3JhdGlvbiBvZiB0aGUgTWF1cnlhbiBlbXBpcmUgd2FzIGZvbGxvd2VkIGJ5IHRoZSByaXNlIG9mIGEgbnVtYmVyIG9mICAga2luZ2RvbXMgaW4gZGlmZmVyZW50IHBhcnRzIG9mIEluZGlhLiBJbW1lZGlhdGVseSBhZnRlciB0aGUgTWF1cnlhcywgUHVzaHlhbWl0cmEgICBlc3RhYmxpc2hlZCB0aGUgU3VuZ2EgZHluYXN0eSBhbmQgdGhlIFN1bmdhcyB3ZXJlIGFibGUgdG8gY29udHJvbCBvbmx5IGEgcGFydCBvZiB0aGUgICBlcnN0d2hpbGUgTWF1cnlhbiBlbXBpcmUuIFNvLCBwb2ludCAxIGlzIGNvcnJlY3QuICAgKC0pQWZ0ZXIgdGhlIGRlY2xpbmUgb2YgTWF1cnlhbiBydWxlIG1hbnkgbG9jYWwgcnVsZXJzIHN0YXJ0ZWQgcnVsaW5nIGluIHJlZ2lvbnMgbGlrZSAgIFZpZGFyYmhhLCBlYXN0ZXJuIERlY2NhbiwgS2FybmF0YWthIGFuZCB3ZXN0ZXJuIE1haGFyYXNodHJhLiBHcmFkdWFsbHksIHRoZSBmYW1pbHkgICBvZiB0aGUgU2F0YXZhaGFuYXMgYnVpbHQgdXAgYW4gZW1waXJlIGluIHRoZSBEZWNjYW4gYnkgYnJpbmdpbmcgdG9nZXRoZXIgbWFueSBsb2NhbCAgIGNlbnRyZXMuIFNvLCBwb2ludCA0IGlzIGNvcnJlY3QuICAgKC0pTmFuZGFzIGFuZCBIYXJ5YW5rYXMgd2VyZSBpbiBleGlzdGVuY2UgZHVyaW5nIHRoZSBwcmUtTWF1cnlhbiBwZXJpb2QuIFNvLCBwb2ludCAyICAgYW5kIHBvaW50IDMgYXJlIG5vdCBjb3JyZWN0LiAgICgtKUluIHRoZSBleHRyZW1lIFNvdXRoLCB0aGUgdGhyZWUga2luZ2RvbXMgdGhhdCBjb250aW51ZWQgdG8gYmUgcHJvbWluZW50IGZyb20gdGhlICAgTWF1cnlhbiBwZXJpb2Qgd2VyZSB0aGUgQ2hlcmFzLCBDaG9sYXMgYW5kIFBhbmR5YXMuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 4 only  ",
        "option4" : " 3 and 4 only  "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following is/are part of the  Jainism philosophy?  1. God is the creator of the world  2. Both living and non-living things have  souls  3. Each jiva is eternally associated with ajiva  because of karma  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUphaW5pc20gZG9lcyBub3QgYmVsaWV2ZSBpbiBhIHBlcnNvbmFsIEdvZCBvciBhIGNyZWF0b3IgR29kLiBBY2NvcmRpbmcgdG8gdGhlIEphaW5hICAgcGhpbG9zb3BoaWNhbCB3b3JrcywgR29kIGlzIHRoYXQgc291bCB3aG8gaGFzIGNvbXBsZXRlbHkgcmVtb3ZlZCBhbGwgdGhlIEthcm1hcy4gICBUaGUgZGVmaW5pbmcgY2hhcmFjdGVyaXN0aWMgb2YgR29kaG9vZCBpcyBpZGVudGljYWwgd2l0aCB0aGF0IG9mIGxpYmVyYXRpb24gaXRzZWxmLiBUbyAgIGF0dGFpbiBsaWJlcmF0aW9uIGlzIHRvIGF0dGFpbiBHb2Rob29kLiBUaG91Z2ggdGhlIEphaW5zIHJlamVjdCBHb2QgYXMgdGhlIGNyZWF0b3Igb2YgICB0aGUgd29ybGQsIHRoZXkgdGhpbmsgaXQgaXMgbmVjZXNzYXJ5IHRvIG1lZGl0YXRlIG9uIGFuZCB3b3JzaGlwIHRoZSBsaWJlcmF0ZWQsIHBlcmZlY3QgICBzb3Vscy4gUHJheWVycyBhcmUgb2ZmZXJlZCB0byB0aGVtIGZvciBndWlkYW5jZSBhbmQgaW5zcGlyYXRpb24uIFNvLCBwb2ludCAxIGlzIG5vdCAgIGNvcnJlY3QuICAgKC0pVGhlIEphaW5hIGhvbGRzIHRoYXQgZXZlcnkgbGl2aW5nIGFuZCBub24tbGl2aW5nIGJlaW5nIGlzIGdpZnRlZCB3aXRoIHNvdWxzLiBBbGwgc291bHMgYXJlICAgbm90IGVxdWFsbHkgY29uc2Npb3VzLCBidXQgZXZlcnkgc291bCBoYXMgdGhlIHBvdGVudGlhbCB0byBhdHRhaW4gaW5maW5pdGUgY29uc2Npb3VzbmVzcywgICBwb3dlciwgYW5kIGhhcHBpbmVzcy4gVGhlIHNvdWwgaXMgaW5oZXJlbnRseSBwZXJmZWN0LiBTbywgcG9pbnQgMiBpcyBjb3JyZWN0LiAgICgtKUVhY2ggSml2YSAoc291bCkgaXMgZXRlcm5hbGx5IGFzc29jaWF0ZWQgd2l0aCBBaml2YSAobm9uLXNlbnRpZW50IG9yIG5vbi1jb25zY2lvdXMgICBiZWluZykgYmVjYXVzZSBvZiBLYXJtYS4gVGhleSBhcmUgb2JzdHJ1Y3RlZCBieSBrYXJtYSwganVzdCBhcyB0aGUgbmF0dXJhbCBsaWdodCBvZiAgIHRoZSBzdW4gaXMgaGluZGVyZWQgYnkgY2xvdWRzLiBCeSByZW1vdmluZyB0aGUga2FybWFzLCBhIHNvdWwgY2FuIHJlbW92ZSBib25kYWdlICAgYW5kIHJlZ2FpbiBpdHMgbmF0dXJhbCBwZXJmZWN0aW9ucy4gU28sIHBvaW50IDMgaXMgY29ycmVjdC4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only   ",
        "option2" : " 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements with  reference to the Council of Ministers during  the Mauryan rule:  1. It was an advisory body and the King had  the power to overrule their  recommendations.  2. They could discuss the King's policy  during his absence and decide upon any  important matter which the King had left to  them.  3. Arthasastra mentions the criteria for the  appointment of the ministers.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBBcnRoYXNhc3RyYSBhcyB3ZWxsIGFzIHRoZSBBc29rYW4gaW5zY3JpcHRpb25zIHJlZmVyIHRvIGEgQ291bmNpbCBvZiBNaW5pc3RlcnMgICAoTWFudHJpcGFyaXNoYWQpLiBUaGUgQXJ0aGFzYXN0cmEgbWVudGlvbnMgdGhhdCB0aGUgd29yayBvZiB0aGUgc3RhdGUgY2Fubm90IGJlICAgY2FycmllZCBvdXQgd2l0aG91dCBhc3Npc3RhbmNlLiAgICgtKVJvY2sgRWRpY3QgVkkgbWVudGlvbnMgdGhhdCB0aGUgbWluaXN0ZXJzIGNhbiBkaXNjdXNzIHRoZSBLaW5nJ3MgcG9saWN5IGR1cmluZyBoaXMgICBhYnNlbmNlOyBzdWdnZXN0IGFtZW5kbWVudHM7IGFuZCBkZWNpZGUgdXBvbiBhbnkgaW1wb3J0YW50IG1hdHRlciB3aGljaCB0aGUgICBLaW5nIGhhcyBsZWZ0IHRvIHRoZW0uIFlldCB0aGUgQ291bmNpbCBoYWQgdG8gcmVwb3J0IGl0cyBvcGluaW9uIHRvIHRoZSBLaW5nICAgaW1tZWRpYXRlbHkuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKVRoZSBwb3dlciBvZiB0aGUgQ291bmNpbCBtaWdodCBoYXZlIHZhcmllZCBmcm9tIHRpbWUgdG8gdGltZSwgeWV0IGl0cyBwcmltYXJ5IHJvbGUgICByZW1haW5lZCB0aGF0IG9mIGFuIGFkdmlzb3J5IGJvZHkuIFRoaXMgd2FzIGJlY2F1c2UgdGhlIGZpbmFsIGF1dGhvcml0eSB3YXMgdmVzdGVkICAgd2l0aCB0aGUgS2luZy4gU28sIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICAgKC0pQXJ0aGFzYXN0cmEgbWVudGlvbnMgdGhlIGNyaXRlcmlhIG9yIHRoZSBxdWFsaWZpY2F0aW9ucyBmb3IgdGhlIGFwcG9pbnRtZW50IG9mICAgbWluaXN0ZXJzLiBGb3IgZXhhbXBsZSwgdGhlIHBlcnNvbiBzaG91bGQgYmUgc3VjaCBhcyBub3QgdG8gYmUgbHVyZWQgYnkgd2VhbHRoLCBub3QgICB0byBzdWNjdW1iIHRvIHByZXNzdXJlLCBldGMuIGkuZS4sIGhlIHNob3VsZCBiZSBhIFNhcnZvcGRhc2h1ZGhhIChwdXJlc3Qgb2YgYWxsKS4gU28sICAgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICAoLSlUaGUgR2lybmFyIFJvY2sgRWRpY3RzIG9mIEFzb2thIG1lbnRpb24gdGhlIGZ1bmN0aW9ucyBvZiB0aGUgQ291bmNpbC4gU2ltaWxhcmx5LCBSb2NrICAgRWRpY3QgSUlJIGltcGxpZXMgdGhhdCB0aGUgUGFyaXNoYWQgd2FzIGV4cGVjdGVkIHRvIHNlZSB0aGF0IG5ldyBhZG1pbmlzdHJhdGl2ZSAgIG1lYXN1cmVzIHdlcmUgY2FycmllZCBvdXQgYnkgZGlmZmVyZW50IGNhdGVnb3JpZXMgb2Ygb2ZmaWNpYWxzLiAgICAgKC0pVGhlcmUgYXJlIHJlZmVyZW5jZXMgYWJvdXQgZWlnaHRlZW4gZGVwYXJ0bWVudHMgKFRpcnRoYXMpIG9mIHRoZSBDZW50cmFsICAgR292ZXJubWVudCBpbiB0aGUgQXJ0aGFzYXN0cmEuIEZvciBleGFtcGxlIHRoZSBLYXJtYW50aWthIGxvb2tlZCBhZnRlciB0aGUgICBpbmR1c3RyaWVzLCB0aGUgQW50YXJ2YW1zaWthIGxvb2tlZCBhZnRlciB0aGUgS2luZydzIHNlY3VyaXR5IGFuZCB0aGUgU2FubmlkaGF0YSAgIGxvb2tlZCBhZnRlciB0aGUgdHJlYXN1cnksIGV0Yy4gICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to the Hoysala temple  architecture, consider the following  statements:  1. The temple plans were simple and  square-shaped.   2. The sculptures were intricately carved  using soapstone.  3. Hoysala temples do not have any  influence from the Dravidian or Nagara  style of temple architecture.  4. The Hoysaleswara temple is a Shiva  temple built by the Hoysalas in Halebid.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEhveXNhbGEgQXJjaGl0ZWN0dXJlOiAgICgtKU1vc3QgY2hhcmFjdGVyaXN0aWMgZmVhdHVyZSBvZiBIb3lzYWxhIHRlbXBsZXMgaXMgdGhhdCB0aGV5IGdyb3cgZXh0cmVtZWx5IGNvbXBsZXggICB3aXRoIHNvIG1hbnkgcHJvamVjdGluZyBhbmdsZXMgZW1lcmdpbmcgZnJvbSB0aGUgcHJldmlvdXNseSBzdHJhaWdodGZvcndhcmQgc3F1YXJlICAgdGVtcGxlLCB0aGF0IHRoZSBwbGFuIG9mIHRoZXNlIHRlbXBsZXMgc3RhcnRzIGxvb2tpbmcgbGlrZSBhIHN0YXIsIGFuZCBpcyB0aHVzIGtub3duIGFzICAgYSBzdGVsbGF0ZS1wbGFuLiBTbywgc3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QuICAgKC0pU2luY2UgdGhleSBhcmUgbWFkZSBvdXQgb2Ygc29hcHN0b25lIHdoaWNoIGlzIGEgcmVsYXRpdmVseSBzb2Z0IHN0b25lLCB0aGUgYXJ0aXN0cyB3ZXJlICAgYWJsZSB0byBjYXJ2ZSB0aGVpciBzY3VscHR1cmVzIGludHJpY2F0ZWx5LiBUaGlzIGNhbiBiZSBzZWVuIHBhcnRpY3VsYXJseSBpbiB0aGUgamV3ZWxsZXJ5ICAgb2YgdGhlIGdvZHMgdGhhdCBhZG9ybiB0aGVpciB0ZW1wbGUgd2FsbHMuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICAoLSlIb3lzYWxhIHRlbXBsZXMgYXJlIHNvbWV0aW1lcyBjYWxsZWQgaHlicmlkIG9yIHZlc2FyYSBhcyB0aGVpciB1bmlxdWUgc3R5bGUgc2VlbXMgICBuZWl0aGVyIGNvbXBsZXRlbHkgRHJhdmlkYSBub3IgbmFnYXJhLCBidXQgc29tZXdoZXJlIGluIGJldHdlZW4uIFZlc2FyYSBzdHlsZSAgIGNvbWJpbmVkIGZlYXR1cmVzIG9mIGJvdGggdGhlIE5hZ2FyYSBzY2hvb2wgYW5kIERyYXZpZGlhbiBzY2hvb2wgYW5kIHJlc3VsdGVkIGluIGEgICBoeWJyaWRpc2VkIHN0eWxlLiBTbywgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlIYWxlYmVlZHUgKGZvcm1lcmx5IGtub3duIGFzICAgRHdhcmFzYW11ZHJhKSB3YXMgdGhlIGFuY2llbnQgY2FwaXRhbCAgIG9mIHRoZSBIb3lzYWxhcy4gVGhlIEhveXNhbGEgZHluYXN0eSAgIHJ1bGVkIG92ZXIgbXVjaCBvZiBTb3V0aCBJbmRpYSBmb3IgICBjbG9zZSB0byAyMDAgeWVhcnMgYW5kIGR1cmluZyB0aGlzIHRpbWUgICB0aGV5IGJ1aWx0IGJvdGggSGluZHUgYXMgd2VsbCBhcyBKYWluICAgdGVtcGxlcy4gVGhlIEhveXNhbGVzd2FyYSBUZW1wbGUgb3IgICB0aGUgSGFsZWJpZCB0ZW1wbGUgcG9pc2VkIG9uIGEgc3Rhci0gIHNoYXBlZCBiYXNlIG9uIHRoZSBsYXduIGlzIGFuICAgYXJjaGl0ZWN0dXJhbCBtYXJ2ZWwuIFRoaXMgdHdpbi1zaHJpbmVkICAgdGVtcGxlIGlzIHBlcmhhcHMgdGhlIGxhcmdlc3QgU2hpdmEgdGVtcGxlIGJ1aWx0IGJ5IHRoZSBIb3lzYWxhcy4gSXRzIGJhc2UgY29uc2lzdHMgb2YgICA4IHJvd3Mgb2YgZnJpZXplcyBjYXJ2ZWQgd2l0aCBlbGVwaGFudHMsIGxpb25zLCBob3JzZXMgYW5kIGZsb3JhbCBzY3JvbGxzLiBJdHMgd2FsbHMgYXJlICAgYWRvcm5lZCB3aXRoIGludHJpY2F0ZWx5IGNhcnZlZCBIaW5kdSBkZWl0aWVzLCBzYWdlcywgc3R5bGlzZWQgYW5pbWFscywgYmlyZHMgYW5kIGZyaWV6ZXMgICBkZXBpY3RpbmcgdGhlIGxpZmUgb2YgSG95c2FsYSBraW5ncy4gU28sIHN0YXRlbWVudCA0IGlzIGNvcnJlY3QuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIFJlbGV2YW5jZTogVGhlIEhveXNhbGEgVGVtcGxlcyBvZiBCZWx1ciwgSGFsZWJpZCBhbmQgU29tbmF0aGFwdXJhIGluIEthcm5hdGFrYSBhcmUgSW5kaWEncyAgIG9mZmljaWFsIG5vbWluYXRpb25zIGZvciB0aGUgV29ybGQgSGVyaXRhZ2UgTGlzdCBmb3IgdGhlIHllYXIgMjAyMi0yMDIzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 1, 3 and 4 only  ",
        "option4" : " 2 and 4 only  "
      }
    },
    {
      "index" : 12,
      "question" : "Indus Valley Civilisation is also called  Harappan Civilisation for which one of the  following reasons?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUJlZ2lubmluZyB3aXRoIHRoZSBkaXNjb3Zlcnkgb2YgSGFyYXBwYSwgbmVhcmx5IGEgdGhvdXNhbmQgc2V0dGxlbWVudHMgaGF2aW5nIHNpbWlsYXIgICB0cmFpdHMsIGhhdmUgYmVlbiBkaXNjb3ZlcmVkLiBTY2hvbGFycyBuYW1lZCBpdCB0aGUgJ0luZHVzIFZhbGxleSBDaXZpbGl6YXRpb24nIGJlY2F1c2UgICBpbml0aWFsbHkgbW9zdCBvZiB0aGUgc2V0dGxlbWVudHMgd2VyZSBkaXNjb3ZlcmVkIGluIHRoZSBwbGFpbnMgb2YgdGhlIHJpdmVyIEluZHVzIGFuZCAgIGl0cyB0cmlidXRhcmllcy4gICAgKC0pQXJjaGFlb2xvZ2lzdHMgcHJlZmVyIHRvIGNhbGwgaXQgdGhlICdIYXJhcHBhbiBDaXZpbGl6YXRpb24nLiBUaGlzIGlzIGJlY2F1c2UgaW4gICBhcmNoYWVvbG9neSB0aGVyZSBpcyBhIGNvbnZlbnRpb24gdGhhdCB3aGVuIGFuIGFuY2llbnQgY3VsdHVyZSBpcyBkZXNjcmliZWQsIGl0IGlzICAgbmFtZWQgYWZ0ZXIgdGhlIG1vZGVybiBuYW1lIG9mIHRoZSBzaXRlIHdoaWNoIGZpcnN0IHJldmVhbGVkIHRoZSBleGlzdGVuY2Ugb2YgdGhpcyAgIGN1bHR1cmUuICAgICgtKVRoZXJlIGlzIG5vIGtub3dsZWRnZSBhYm91dCB3aGF0IHRob3NlIHBlb3BsZSBjYWxsZWQgdGhlbXNlbHZlcyBiZWNhdXNlIHdlIGhhdmUgICBub3QgYmVlbiBhYmxlIHRvIHJlYWQgdGhlaXIgd3JpdGluZy4gVGh1cywgd2UgY2FsbCB0aGVtIEhhcmFwcGFucyBhZnRlciB0aGUgbW9kZXJuICAgcGxhY2UgSGFyYXBwYSB3aGVyZSB0aGUgZXZpZGVuY2Ugb2YgdGhpcyBmb3Jnb3R0ZW4gY2l2aWxpemF0aW9uIHdhcyBmaXJzdCB1bmVhcnRoZWQgaW4gICBvdXIgdGltZXMuICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " To carry on the legacy of the early   archaeologists who called it the   'Harappan Civilization'  ",
        "option2" : " It is named after the modern name of the   site which first revealed the existence of   this culture  ",
        "option3" : " There is no Indus valley site that holds the   same significance as Harappa  ",
        "option4" : " The Archaeological Survey of India has   decided upon the nomenclature of the   civilization   "
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following statements is not  correct with reference to Samudragupta?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlTYW11ZHJhZ3VwdGEgd2FzIHRoZSBzb24gb2YgdGhlIEd1cHRhIGVtcGVyb3IgQ2hhbmRyYWd1cHRhIEkgYW5kIHRoZSBzZWNvbmQgICBlbXBlcm9yIG9mIHRoZSBHdXB0YSBFbXBpcmUgb2YgYW5jaWVudCBJbmRpYS4gSGUgaXMgcmVnYXJkZWQgYXMgYW1vbmcgdGhlIGdyZWF0ZXN0ICAgcnVsZXJzIG9mIHRoZSBkeW5hc3R5LiAgICgtKUFsbGFoYWJhZCBQaWxsYXIgSW5zY3JpcHRpb24gKFByYXlhZ3Jhai1wcmFzaGFzdGkpIHByb3ZpZGVzIGluZm9ybWF0aW9uIGFib3V0IGhpcyAgIGFjY2Vzc2lvbiwgY29ucXVlc3RzIGFuZCBoaXMgYWNoaWV2ZW1lbnRzLiBIZSBmb2xsb3dlZCB0aGUgcG9saWN5IG9mIHdhciBhbmQgICBjb25xdWVzdC4gICAgKC0pUmVnYXJkaW5nIHRoZSBraW5ncyBvZiBzb3V0aCBJbmRpYSBvciBEYWtzaGluYXBhdGhhLCBTYW11ZHJhZ3VwdGEgZmlyc3QgY2FwdHVyZWQgICB0aGVtIChncmFoYW5hKSBhbmQgdGhlbiByZWxlYXNlZCB0aGVtIChtb2tzaGEpLiBIb3dldmVyLCBoZSBmb2xsb3dlZCBhICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIGNvbXBsZXRlbHkgZGlmZmVyZW50IHBvbGljeSB3aXRoIHJlZ2FyZCB0byB0aGUga2luZ3Mgb2YgQXJ5YXZhcnRhLiBIZSBzdWJqdWdhdGVkIHRoZW0gICBhbmQgYW5uZXhlZCB0aGVpciB0ZXJyaXRvcmllcy4gICAgKC0pQmhpdGFyaSBwaWxsYXIgaW5zY3JpcHRpb24gaXMgYWJvdXQgU2thbmRhZ3VwdGEsIHdobyByZXN0b3JlZCB0aGUgR3VwdGEgcG93ZXIgYnkgICBkZWZlYXRpbmcgaGlzIGVuZW1pZXMsIHdobyBtYXkgaGF2ZSBiZWVuIHJlYmVscyBvciBmb3JlaWduIGludmFkZXJzLiAgICAoLSlBdCB0aGUgZW5kIG9mIGhpcyByZWlnbiwgbW9zdCBwYXJ0cyBvZiBub3J0aCBJbmRpYSB3ZXJlIGRpcmVjdGx5IHVuZGVyIHRoZSBjb250cm9sIG9mICAgU2FtdWRyYWd1cHRhLCBleGNlcHQgS2FzaG1pciwgd2VzdGVybiBQdW5qYWIsIFJhamFzdGhhbiwgU2luZGggYW5kIEd1amFyYXQuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Allahabad Pillar Inscription states   that he had followed the policy of   conquests.  ",
        "option2" : " He followed the policies of Grahana and   Moksha with respect to South Indian   Kings.  ",
        "option3" : " The Bhitari pillar inscription portrays his   military victories against foreign invaders.  ",
        "option4" : " The Kashmir region remained outside his   direct control at the end of his reign.    Join Telegram Channel @cse_updates For More  t.me/cse_updates     3      "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following Buddhist sites contain  the stone portrait that is considered to be the  only surviving image of the Ashoka and had  the inscription 'Raya Asoko' in Brahmi on it?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUthbmFnYW1haGFsbGkgQnVkZGhpc3Qgc2l0ZSBpcyBzaXR1YXRlZCBvbiB0aGUgYmFuayBvZiB0aGUgcml2ZXIgQmhpbWEgbmVhciAgIEthbmFnYW5haGFsbGkgaW4gS2FsYWJ1cmFnaSBkaXN0cmljdCBpbiBLYXJuYXRha2EuICAgICgtKUl0IGhhcyBhIE1haGEgU3R1cGEsIHdoaWNoIHdhcyByZWZlcnJlZCB0byBhcyBBZGhvbG9rYSBNYWhhIENoYWl0eWEgKHRoZSBHcmVhdCAgIFN0dXBhIG9mIHRoZSBuZXRoZXJ3b3JsZHMpIGluIHRoZSBBc2hva2FuIGluc2NyaXB0aW9ucy4gVGhlIEthbmFnYW1haGFsbGkgQnVkZGhpc3QgICBTdHVwYSB3YXMgY29uc3RydWN0ZWQgdXNpbmcgbG9jYWxseSBhdmFpbGFibGUgbGltZXN0b25lLiAgICAoLSlJdCBhbHNvIGNvbnRhaW5zIHRoZSBzdG9uZS1wb3J0cmFpdCBvZiBFbXBlcm9yIEFzaG9rYSwgc3Vycm91bmRlZCBieSBoaXMgcXVlZW5zIGFuZCAgIGZlbWFsZSBhdHRlbmRhbnRzLiBXaGlsZSB0aGUgU3R1cGEgaXMgYmVsaWV2ZWQgdG8gYmUgb25lIG9mIHRoZSBsYXJnZXN0IG9mIGl0cyB0aW1lLCB0aGUgICBzdG9uZS1wb3J0cmFpdCBpcyBjb25zaWRlcmVkIHRvIGJlIHRoZSBvbmx5IHN1cnZpdmluZyBpbWFnZSBvZiB0aGUgTWF1cnlhbiBFbXBlcm9yICAgd2hpY2ggaGFkIHRoZSBpbnNjcmlwdGlvbiAnUmF5YSBBc29rbycgaW4gQnJhaG1pIG9uIGl0LiAgICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Gujjara  ",
        "option2" : " Nettur  ",
        "option3" : " Kandahar  ",
        "option4" : " Kanaganahalli   "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following pairs:  Sl.  No.  Buddhist  council  Took place  during the  reign of:  1. First Buddhist  Council  : Ajatasatru  2. Second Buddhist  Council  : Kalashoka  3. Third Buddhist  Council  : Ashoka  4. Fourth Buddhist  Council  : Kanishka  How many pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUZpcnN0IEJ1ZGRoaXN0IENvdW5jaWw6IFNob3J0bHkgYWZ0ZXIgdGhlIGRlYXRoIG9mIEJ1ZGRoYSB0aGUgZmlyc3QgQnVkZGhpc3QgQ291bmNpbCAgIHdhcyBoZWxkIGluIDQ4MyBCLkMuIGluIHRoZSBTYXB0YXBtaSBjYXZlIG5lYXIgUmFqYWdyaWhhLiBNYWhha2Fzc2FwYSBwcmVzaWRlZCAgIG92ZXIgdGhlIGFzc2VtYmx5LiBBbGwgdGhlIHRlYWNoaW5ncyBvZiBCdWRkaGEgd2VyZSBkaXZpZGVkIGludG8gdHdvIFBpdGFrYXMsIG5hbWVseSAgIFZpbmF5YSBQaXRha2EgYW5kIFN1dHRhIFBpdGFrYS4gQWphdGFzYXRydSB3YXMgaW5zdHJ1bWVudGFsIGluIGNvbnZlbmluZyB0aGUgQ291bmNpbC4gICBTbywgcGFpciAxIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlTZWNvbmQgQnVkZGhpc3QgQ291bmNpbDogSXQgd2FzIGhlbGQgYXQgVmFpc2FsaSBpbiAzODMgQi5DLiBkdXJpbmcgdGhlIHJlaWduIG9mICAgS2FsYXNob2thLiBUaGUgbW9ua3Mgb2YgVmFpc2FsaSBhbmQgUGF0YWxpcHV0cmEgaGFkIGFjY2VwdGVkIGNlcnRhaW4gcnVsZXMgd2hpY2ggICB3ZXJlIGRlY2xhcmVkIGNvbnRyYXJ5IHRvIHRoZSB0ZWFjaGluZ3Mgb2YgQnVkZGhhIGJ5IHRoZSBtb25rcyBvZiBLYXVzYXJuYmkgYW5kICAgQXZhbnRpLiBUaGUgQ291bmNpbCBmYWlsZWQgdG8gYnJpbmcgYWJvdXQgYSBjb21wcm9taXNlIGJldHdlZW4gdGhlIHR3byBvcHBvc2luZyAgIGdyb3VwczsgaGVuY2UgdGhlIGNvdW5jaWwgZW5kZWQgaW4gYSBwZXJtYW5lbnQgc3BsaXQgb2YgdGhlIEJ1ZGRoaXN0IG9yZGVyIGludG8gICBTdGhhdmlyYXZhZGlucyBhbmQgTWFoYXNhbmdpa2FzLiBTbywgcGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlUaGlyZCBCdWRkaGlzdCBDb3VuY2lsOiBUaGUgdGhpcmQgQ291bmNpbCB3YXMgaGVsZCBhdCBQYXRhbGlwdXRyYSBkdXJpbmcgdGhlIHJlaWduIG9mICAgQXNob2thIHVuZGVyIHRoZSBjaGFpcm1hbnNoaXAgb2YgTW9nZ2FsaXB1dHRhIFRpc3NhLiBJbiB0aGlzLCB0aGUgcGhpbG9zb3BoaWNhbCAgIGludGVycHJldGF0aW9ucyBvZiB0aGUgZG9jdHJpbmVzIG9mIEJ1ZGRoYSB3ZXJlIGNvbGxlY3RlZCBpbnRvIHRoZSB0aGlyZCBQaXRha2EgY2FsbGVkICAgQWJoaWRoYW1tYSBQaXRha2EuIFNvLCBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgICgtKUZvdXJ0aCBCdWRkaGlzdCBDb3VuY2lsOiBUaGUgZm91cnRoIGNvdW5jaWwgd2FzIGhlbGQgZHVyaW5nIHRoZSByZWlnbiBvZiBLYW5pc2hrYSBpbiAgIEthc2htaXIuIEl0IHdhcyBhIGdhdGhlcmluZyBvZiBIaW5heWFuaXN0cyBvZiBOb3J0aCBJbmRpYS4gSXQgY29tcGlsZWQgdGhyZWUgICBjb21tZW50YXJpZXMgKFZpYmhhc2hhcykgb2YgdGhlIHRocmVlIFBpdGlrYXMuIEl0IGRlY2lkZWQgY2VydGFpbiBjb250cm92ZXJzaWFsICAgcXVlc3Rpb25zIG9mIGRpZmZlcmVuY2VzIHRoYXQgYXJvc2UgYmV0d2VlbiB0aGUgU2FydmFzdGl2YWRhIHRlYWNoZXJzIG9mIEthc2htaXIgYW5kICAgR2FuZGhhcmEuIEl0IHdhcyBkdXJpbmcgdGhlIDR0aCBCdWRkaGlzdCBjb3VuY2lsIHRoYXQgQnVkZGhpc20gd2FzIHNwbGl0IHVwIGludG8gICBIaW5heWFuYSBhbmQgTWFoYXlhbmEgc2VjdHMuIFNvLCBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgIFNvLCBhbGwgZm91ciBwYWlycyBhcmUgY29ycmVjdGx5IG1hdGNoZWQuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs    ",
        "option3" : " Only three pairs   ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements with  reference to the Harshvardhana of the  Vardhana dynasty:  1. He acquired the title of Parameshvara after  defeating Pulakeshin II.  2. Chinese pilgrim, Hiuen Tsang, visited India  during his reign.  3. Hunas invaded India for the first time during  his reign.  4. His administration was secular in nature as  he supported different faiths and religions.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUhhcnNoYSBhc2NlbmRlZCB0aGUgdGhyb25lIGluIDYwNiBDRSBhbmQgYmVsb25nZWQgdG8gdGhlIFB1c2h5YWJodXRpIGR5bmFzdHksIGFsc28gICBrbm93biBhcyBWYXJkaGFuYSBkeW5hc3R5LCBiYXNlZCBhcm91bmQgU3RoYW52aXN2YXJhIChtb2Rlcm4gVGhhbmVzYXIgaW4gdGhlICAgQW1iYWxhIGRpc3RyaWN0IG9mIFB1bmphYikuICAgKC0pUHVsYWtlc2luIElJIGRlZmVhdGVkIEhhcnNoYSBvbiB0aGUgYmFua3Mgb2YgTmFybWFkYSBpbiB0aGUgd2ludGVyIG9mIDYxOC02MTkgQ0UuICAgUHVsYWtlc2luIGFjcXVpcmVkIHRoZSB0aXRsZSBvZiBQYXJhbWVzaHZhcmEgYnkgZGVmZWF0aW5nIHNha2Fsb3R0YXJhcGF0aGVzdmFyYSAgIChIYXJzaGEpLiBTbywgc3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QuICAgKC0pWHVhbiBaYW5nIChIaXVlbiBUc2FuZyksIHRoZSBDaGluZXNlIHBpbGdyaW0gdHJhdmVsbGVkIGluIEluZGlhIGR1cmluZyB0aGUgcmVpZ24gb2YgICBIYXJzaGF2YXJkaGFuYS4gSGUgc3BlYWtzIGFib3V0IHRoZSBwcm9zcGVyaXR5IG9mIEthbmF1aiB1bmRlciBIYXJzaGEuIEhlIHNheXMgICB0aGF0IHRoZSBraW5nIHRyYXZlbGxlZCBmcmVxdWVudGx5IHRocm91Z2hvdXQgaGlzIGtpbmdkb20gdG8gdW5kZXJzdGFuZCB0aGUgY29uZGl0aW9uICAgb2YgaGlzIHN1YmplY3RzLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlJdCB3YXMgZHVyaW5nIHRoZSByZWlnbiBvZiBLdW1hcmd1cHRhLCBIdW5hcyBoYWQgaW52YWRlZCBJbmRpYSBmb3IgdGhlIGZpcnN0IHRpbWUuIFRoZSAgIEh1bmFzIGhhZCBhdHRhY2tlZCB0aGUgbm9ydGgtd2VzdGVybiBmcm9udGllciBvZiB0aGUgUHVzaHlhYmh1dGkgZHluYXN0eSB3aGVuICAgUHJhYmhha2FyYXZhcmRoYW5hIHdhcyBydWxpbmc7IHdoaWNoIHdhcyBzdWNjZXNzZnVsbHkgcmVzaXN0ZWQgYnkgSGFyc2hhdmFyZGhhbmEuICAgU28sIHN0YXRlbWVudCAzIGlzIG5vdCBjb3JyZWN0LiAgICgtKUhpdWVuIFRzYW5nIHNheXMgdGhhdCBhdCB0aGUgUHJheWFnYSBBc3NlbWJseSwgSGFyc2hhIHdvcnNoaXBwZWQgdGhlIEJ1ZGRoYSwgU2hpdmEgICBhbmQgdGhlIFN1biBhbmQgZGlzdHJpYnV0ZWQgY2hhcml0eSB0byB0aGUgZm9sbG93ZXJzIG9mIGFsbCBmYWl0aHMuIEJlc2lkZXMsIHRoZSAgIEJhbnNraGVyYSBhbmQgTWFkaHViYW4gY29wcGVyIHBsYXRlcyBvZiBIYXJzaGEgcmVjb3JkIGhpcyBncmFudCBvZiBsYW5kIHRvIFJpZ3ZlZGluICAgYW5kIFNhbWF2ZWRpbiBicmFobWFuYXMuIEhlbmNlLCBpdCBjYW4gYmUgYXR0cmlidXRlZCB0aGF0IEhhcnNoYSdzIGFkbWluaXN0cmF0aW9uICAgd2FzIHNlY3VsYXIgaW4gbmF0dXJlLCBhcyBoZSBzdXBwb3J0ZWQgYWxsIGZhaXRocyBhbmQgcmVsaWdpb25zLiBTbywgc3RhdGVtZW50IDQgaXMgICBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only  ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 3 and 4 only   ",
        "option4" : " 1, 2, 3 and 4  "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to Jainism, 'Thera' can be  defined as:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUaGVyYSByZWZlcnMgdG8gdGhlIENoaWVmIHByZWNlcHRvciBvZiB0aGUgSmFpbmEgb3JkZXIuICAgICgtKU1haGF2aXJhIGhhZCBlbGV2ZW4gZGlzY2lwbGVzIGtub3duIGFzIEdhbmFkaGFyYXMgb3IgaGVhZHMgb2Ygc2Nob29scy4gICAgKC0pQXJ5YSBTdWRoYXJtYSB3YXMgdGhlIG9ubHkgR2FuYWRoYXJhIHdobyBzdXJ2aXZlZCBNYWhhdmlyYSBhbmQgYmVjYW1lIHRoZSBmaXJzdCAgICdUaGVyYScgKGNoaWVmIHByZWNlcHRvcikgb2YgdGhlIEphaW5hIG9yZGVyLiBIZSBkaWVkIDIwIHllYXJzIGFmdGVyIE1haGF2aXJhJ3MgZGVhdGguICAgICgtKVRoZSBKYWluIG9yZGVyIGluIHRoZSBkYXlzIG9mIHRoZSBsYXRlIE5hbmRhIEtpbmcgd2FzIGFkbWluaXN0ZXJlZCBieSB0d28gVGhlcmFzLCAgIFNhbWJodXRhdmlqYXlhIGFuZCBCaGFkcmFiYWh1LiAgICAoLSlUaGUgc2l4dGggVGhlcmEgd2FzIEJoYWRyYWJhaHUsIGEgY29udGVtcG9yYXJ5IG9mIHRoZSBNYXVyeWEgS2luZyBDaGFuZHJhZ3VwdGEgICBNYXVyeWEuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " one who vows brahmacharya  ",
        "option2" : " a lay worshipper  ",
        "option3" : " chief preceptor of the Jaina order  ",
        "option4" : " one who has taken monastic life   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following pairs:  Sl.  No.  Music  genre  Characteristic  1.  Thumri : Musical grammar is  strictly adhered to  2. Tappa  : Song uttered in fast  note patterns  3. Khyal : Not accompanied  by any instrument  4. Dhrupad : Has its roots in the  devotional music  How many pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRodW1yaSBpcyBhIGxvdmUgc29uZyBhbmQgaGVuY2UgdGhlIHRleHR1YWwgYmVhdXR5IGlzIHZlcnkgaW1wb3J0YW50LiBUaGlzIGlzIGNsb3NlbHkgICBjb29yZGluYXRlZCB3aXRoIHRoZSBtdXNpY2FsIHJlbmRpdGlvbi4gQW5kIGtlZXBpbmcgaW4gbWluZCBpdHMgbW9vZCBhIHRodW1yaSBpcyAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICB1c3VhbGx5IHNldCB0byByYWdhcyBsaWtlIEtoYW1haiwgS2FwaGksIEJoYWlyYXZpIGFuZCBzbyBvbiBhbmQgdGhlIG11c2ljYWwgZ3JhbW1hciAgIGlzIG5vdCBzdHJpY3RseSBhZGhlcmVkIHRvLiBTbywgcGFpciAxIGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgKC0pVGFwcGEgY29uc2lzdHMgb2YgdGhlIHNvbmcgdXR0ZXJlZCBpbiBmYXN0IG5vdGUgcGF0dGVybnMuIEl0IGlzIGEgZGlmZmljdWx0IGNvbXBvc2l0aW9uICAgYW5kIG5lZWRzIG11Y2ggcHJhY3RpY2UuIEJvdGggdGhlIFRodW1yaSBhbmQgVGFwcGEgcmVxdWlyZSBzcGVjaWFsIHRyYWluaW5nIGFzIGRvICAgdGhlIERocnVwYWQgYW5kIEtoeWFsIGZvcm1zIG9mIHNpbmdpbmcuIFJhZ2FzIGluIHdoaWNoIFRhcHBhIGNvbXBvc2l0aW9ucyBhcmUgc2V0ICAgcmVtYWluIHNhbWUgYXMgaW4gVGh1bXJpIHN0eWxlLiBTbywgcGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlLaHlhbCBpcyBhIG11c2ljYWwgZm9ybSBiYXNlZCBvbiBhIEhpbmRpIHNvbmcgaW4gdHdvIHBhcnRzIHRoYXQgcmVjdXIgYmV0d2VlbiAgIGV4cGFuZGluZyBjeWNsZXMgb2YgbWVsb2RpYyBhbmQgcmh5dGhtaWMgaW1wcm92aXNhdGlvbi4gVGhlIGtoeWFsIGlzIHJlbGF0ZWQgdG8gICBkaHJ1cGFkIGJ1dCBoYXMgZmV3ZXIgcmVzdHJpY3Rpb25zLiBJdCBpcyB1c3VhbGx5IGFjY29tcGFuaWVkIGJ5IGEgdGFibGEgKHBhaXIgb2YgICBkcnVtcykgYW5kIGEgdGFtYnVyYSAobHV0ZSkgaW4gYSB2YXJpZXR5IG9mIHRhbGFzIChtZXRyaWMgY3ljbGVzKS4gS2hheWFsIGlzIG9yZGluYXJpbHkgICBwZXJmb3JtZWQgYnkgYSB2b2NhbGlzdC4gU28sIHBhaXIgMyBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQuICAgICgtKVRoZSB0ZXJtIERocnVwYWQgcmVmZXJzIHRvIGEgZ2VucmUgb2YgcmFnYS1iYXNlZCBtdXNpYyB3aGljaCBkb21pbmF0ZWQgSGluZHVzdGFuaSAgIG11c2ljIGJldHdlZW4gdGhlIDE1dGggYW5kIHRoZSAxOHRoIGNlbnR1cmllcy4gRHVlIHRvIHRoZSBwb2V0aWMgYmlhcyBvZiB0aGUgZ2VucmUsICAgRGhydXBhZCBoYXMgaXRzIG1vb3JpbmdzIGluIHZvY2FsIG11c2ljLiBIb3dldmVyLCBpbnN0cnVtZW50YWwgbXVzaWMsIG1haW5seSB0aGUgICBSdWRyYSBWZWVuYSAocG9wdWxhcmx5IGtub3duIGFzIHRoZSBCZWVuKSwgaGFzIGFsc28gYmVlbiBhbiBpbnRlZ3JhbCBwYXJ0IG9mIHRoZSAgIGdlbnJlLiBJdCBoYXMgaXRzIHJvb3RzIGluIHRoZSBkZXZvdGlvbmFsIG11c2ljIHRyYWRpdGlvbmFsbHkgcGVyZm9ybWVkIGluIHRoZSBWYWlzaG5hdmEgICB0ZW1wbGVzIG9mIE5vcnRoZXJuIEluZGlhLiAgU28sIHBhaXIgNCBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgU28sIG9ubHkgdHdvIHBhaXJzIGFyZSBjb3JyZWN0bHkgbWF0Y2hlZC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs    ",
        "option3" : " Only three pairs   ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 19,
      "question" : "It is a form of wall art done in bright red and  white shades and is found in the Konkan  region and in temples of Goa, Maharashtra  and Karnataka. It depicts the ancient history  of India. The artists used locally available  materials to paint this art form. This is most  likely the description of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUthYXZpIHBhaW50aW5nIGlzIGEgZm9ybSBvZiB3YWxsIGFydCBkb25lIGluIGJyaWdodCByZWQgICBhbmQgd2hpdGUgc2hhZGVzIGFuZCBmb3VuZCBpbiB0aGUgS29ua2FuIHJlZ2lvbiBvZiAgIHRoZSBjb3VudHJ5LCBlc3BlY2lhbGx5IGluIHRlbXBsZXMgb2YgR29hLCAgIE1haGFyYXNodHJhIGFuZCBLYXJuYXRha2EuIEl0IGlzIGEgZm9ybSBvZiBldGNoaW5nIG9uICAgdGhlIHdhbGxzIG9mIHRlbXBsZXMgYW5kIGhvbWVzIHRoYXQgZGVwaWN0cyB0aGUgICBhbmNpZW50IGhpc3Rvcnkgb2YgSW5kaWEuICAgICgtKVRoZSBhcnRpc3RzIHVzZWQgbG9jYWxseSBhdmFpbGFibGUgbWF0ZXJpYWxzIHRvIHBhaW50ICAgdGhpcyBhcnQgZm9ybS4gV2hpdGUgbGltZSwgb2J0YWluZWQgYWZ0ZXIgYnVybmluZyBhbmQgICBzbGFraW5nIG9mIHNlYSBzaGVsbHMsIHJpdmVyIHNhbmQgYW5kIGphZ2dlcnkgYXJlIG1peGVkICAgdG9nZXRoZXIgYW5kIGtlcHQgZm9yIGZlcm1lbnRhdGlvbiBmb3IgYWxtb3N0IHR3byAgIHdlZWtzLiAgICBvIFRoaXMgbWl4dHVyZSBpcyB0aGVuIHBvdW5kZWQgd2l0aCBwZXN0bGVzLiBBcyB0aGUgbWl4dHVyZSBoYXJkZW5zIHF1aWNrbHksIGl0ICAgaXMgc3BsYXNoZWQgd2l0aCB3YXRlciB0byBtYWtlIGl0IHNsaWdodGx5IHNvZnQgYmVmb3JlIHRoZSBldGNoaW5nLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgUmVsZXZhbmNlOiBSZWNlbnRseSwgdGhlIFByaW1lIG1pbmlzdGVyIHRhbGtlZCBhYm91dCBLYWF2aSBhcnQgaW4gTWFuIGtpIEJhYXQuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Kaavi painting   ",
        "option2" : " Manjusha painting  ",
        "option3" : " Kolam painting  ",
        "option4" : " Phad painting       Join Telegram Channel @cse_updates For More  t.me/cse_updates     4      "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements:   1. The Ajivika sect was established by  Makkali Gosala.  2. Ajivikas held that all creatures were  helpless against destiny.   3. Charvaka philosophy is mentioned in the  Vedas.   4. Charvaka School was the main  propounder of the materialistic view of  achieving salvation.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBBaml2aWthczogICAgKC0pVGhlIEFqaXZpa2FzIGFyZSBzYWlkIHRvIGJlIHN1ZHJhIHNhbnlhc2lucy4gVGhlIHNlY3Qgd2FzIHNhaWQgdG8gYmUgZXN0YWJsaXNoZWQgYnkgICBOYW5kYSBWYWNoY2hhLCB3aG8gd2FzIGZvbGxvd2VkIGJ5IEtpc2EgU2Fua2ljaGNoYS4gVGhlIHRoaXJkIHJlbGlnaW91cyBjaGllZiB3YXMgICBNYWtrYWxpIEdvc2FsYSwgd2hvIHBvcHVsYXJpc2VkIHRoaXMgc2VjdC4gU28sIHN0YXRlbWVudCAxIGlzIG5vdCBjb3JyZWN0LiAgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pTWFra2FsaSBHb3NhbGEgZGVuaWVkIHRoZSB0aGVvcnkgb2YgJ2thcm1hJyBhbmQgYXJndWVkIHRoYXQgbWFuIGlzIHN1YmplY3QgdG8gdGhlICAgbGF3cyBvZiBuYXR1cmUuIFRoZXkgZGlkIG5vdCBiZWxpZXZlIGluIGh1bWFuIGVmZm9ydCBhbmQgaGVsZCB0aGF0IGFsbCBjcmVhdHVyZXMgd2VyZSAgIGhlbHBsZXNzIGFnYWluc3QgZGVzdGlueS4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgICgtKUdvc2FsYSBtYWludGFpbmVkIHRoYXQgYWxsIGNyZWF0dXJlcyBoYWQgdG8gZmFjZSBtaXNlcnkgYW5kIGl0IHdvdWxkIGVuZCBhZnRlciB0aGUgICBjb21wbGV0aW9uIG9mIGZpeGVkIGN5Y2xlcy4gTm8gaHVtYW4gZWZmb3J0IHdvdWxkIHJlZHVjZSBvciBsZW5ndGhlbiB0aGUgcGVyaW9kLiAgICBDaGFydmFrYXM6ICAgICgtKUJyaWhhc3BhdGkgbGFpZCB0aGUgZm91bmRhdGlvbiBvZiB0aGlzIHNjaG9vbC4gVGhlIHBoaWxvc29waHkgaXMgb2xkIGVub3VnaCB0byBmaW5kICAgbWVudGlvbiBpbiB0aGUgVmVkYXMgYW5kIEJyaWhhZGFyYW5reWEgVXBhbmlzaGFkLiBTbywgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICAgKC0pVGhlIENoYXJ2YWthIFNjaG9vbCB3YXMgdGhlIG1haW4gcHJvcG91bmRlciBvZiB0aGUgbWF0ZXJpYWxpc3RpYyB2aWV3IG9mIGFjaGlldmluZyAgIHNhbHZhdGlvbi4gQXMgaXQgd2FzIGdlYXJlZCB0b3dhcmQgdGhlIGNvbW1vbiBwZW9wbGUsIHRoZSBwaGlsb3NvcGh5IHdhcyBzb29uICAgZHViYmVkIGFzIExva2F5YXRhIG9yIHNvbWV0aGluZyBkZXJpdmVkIGZyb20gdGhlIGNvbW1vbiBwZW9wbGUuIFNvLCBzdGF0ZW1lbnQgNCAgIGlzIGNvcnJlY3QuICAgICgtKVRoZSBDaGFydmFrYXMgZG8gbm90IGNvbnNpZGVyICdldGhlcicgYXMgb25lIG9mIHRoZSBmaXZlIGVzc2VudGlhbCBlbGVtZW50cyBiZWNhdXNlICAgaXQgY2Fubm90IGJlIGV4cGVyaWVuY2VkIHRocm91Z2ggcGVyY2VwdGlvbi4gSGVuY2UsIHRoZXkgc2F5IHRoYXQgdW5pdmVyc2UgY29uc2lzdHMgICBvZiBvbmx5IGZvdXIgZWxlbWVudHM6IGZpcmUsIGVhcnRoLCB3YXRlciwgYW5kIGFpci4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1, 3 and 4 only  ",
        "option3" : " 1, 2 and 4 only  ",
        "option4" : " 2, 3 and 4 only   "
      }
    },
    {
      "index" : 21,
      "question" : "It was the primary provincial capital of the Indus  Valley Civilization located in Rajasthan. Relics  dating back to the Harappan and pre-Harappan  settlements were found here. Fire altars were  also discovered in the residences in this site. An  Archaeological Museum was established here in  1983 to conserve discovered objects from an  excavation conducted during 1961-1969. This is  most likely the description of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEthbGliYW5nYW46ICAgICgtKUthbGliYW5nYW4gaXMgbG9jYXRlZCBiZXR3ZWVuIFN1cmF0Z2FyaCBhbmQgSGFudW1hbmdhcmggaW4gSGFudW1hbmdhcmggRGlzdHJpY3QgICBpbiBSYWphc3RoYW4uIFRoZSBzaXRlIGlzIGxvY2F0ZWQgdG8gdGhlIHdlc3Qgb2Ygbm93IGRyaWVkIHVwIHJpdmVyIEdoYWdnYXIuICAgKC0pSXQgaXMgcG9wdWxhciBmb3IgdGhlIGZhY3QgdGhhdCB0aGUgcmVsaWNzIGZyb20gdGhlIEluZHVzIFZhbGxleSBDaXZpbGl6YXRpb24gd2VyZSAgIGRpc2NvdmVyZWQgaGVyZS4gVGhlIHJlbGljcyBkYXRlIGJhY2sgdG8gdGhlIEhhcmFwcGFuIGFuZCBwcmUtSGFyYXBwYW4gc2V0dGxlbWVudHMgICAoMjUwMCBCLkMpLiAgICAoLSlLYWxpYmFuZ2FuIHdhcyBhIHByaW1hcnkgcHJvdmluY2lhbCBjYXBpdGFsIG9mIHRoZSBJbmR1cyBWYWxsZXkgQ2l2aWxpemF0aW9uLiAgICAgKC0pS2FsaWJhbmdhbiBleGNhdmF0aW9ucyBoYXZlIHVuZWFydGhlZCBIYXJhcHBhbiBzZWFscywgdW5rbm93biBzY3JpcHRzLCBzdGFtcHMsICAgaHVtYW4gc2tlbGV0b25zLCBjb3BwZXIgYmFuZ2xlcywgY29pbnMsIGJlYWRzLCB0b3lzLCB0ZXJyYWNvdHRhIGFuZCBzaGVsbHMuICAgICgtKUZpcmUgYWx0YXJzIHdlcmUgYWxzbyBkaXNjb3ZlcmVkIGluIHRoZSByZXNpZGVuY2VzIG9mIHRoZSBlYXN0ZXJuIGxvd2VyIG1vdW5kLiBTb21lICAgaG91c2VzIHdlcmUgcGVyaGFwcyBkb3VibGUgc3RvcmllZC4gICAoLSlLYWxpYmFuZ2FuIGFsc28gaGFzIHRoZSBBcmNoYWVvbG9naWNhbCBNdXNldW0sIHdoaWNoIHdhcyBlc3RhYmxpc2hlZCBpbiAxOTgzIHRvICAgY29uc2VydmUgZGlzY292ZXJlZCBvYmplY3RzIGZyb20gYW4gZXhjYXZhdGlvbiBjb25kdWN0ZWQgb24gdGhlIEhhcmFwcGFuIHNpdGUgICBkdXJpbmcgMTk2MS0xOTY5LiBUaGUgbXVzZXVtIGlzIGRpdmlkZWQgaW50byB0aHJlZSBnYWxsZXJpZXMtdGhlIHByZS1IYXJhcHBhbiBvbmUsICAgYW5kIHRoZSB0d28gZGV2b3RlZCB0byBIYXJhcHBhbiBhcnRpZmFjdHMuICAgICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mehrgarh   ",
        "option2" : " Bhirrana   ",
        "option3" : " Surkotada  ",
        "option4" : " Kalibangan   "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following statements are correct  with reference to Kushana rule in India?  1. Ashvaghosha was a court poet of  Kanishka.  2. They issued coins that bore names and  images of rulers.  3. Bagolango and devakulas were dynastic  sanctuaries built by the Kushana rulers.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBLdXNoYW5zIHdlcmUgb25lIG9mIHRoZSBmaXZlIGNsYW5zIGludG8gd2hpY2ggdGhlIFl1ZWNoaSB0cmliZSB3YXMgZGl2aWRlZC4gVGhleSAgIHdlcmUgYSBub21hZGljIHBlb3BsZSBmcm9tIHRoZSBzdGVwcGVzIG9mIG5vcnRoIENlbnRyYWwgQXNpYS4gVGhleSBzdWNjZWVkZWQgdGhlICAgUGFydGhpYW5zIGFuZCBydWxlZCBOb3J0aCBJbmRpYS4gICAoLSlUaGUgS3VzaGFuYSBraW5ncyBwYXRyb25pc2VkIFNhbnNrcml0IHNjaG9sYXJzLiBBc2h2YWdob3NoYSB3YXMgYSBjb3VydCBwb2V0IG9mIGtpbmcgICBLYW5pc2hrYSBvZiB0aGUgS3VzaGFuYSBkeW5hc3R5LiBBc2h2YWdob3NoYSB3cm90ZSB0aGUgQnVkZGhhY2hhcml0cmEgKEJpb2dyYXBoeSAgIG9mIHRoZSBCdWRkaGEgaW4gU2Fuc2tyaXQpLCBTYXVuZGFyYW5hbmRhIChTYW5za3JpdCBwb2V0cnkpLCBTYXJpcHV0cmFwcmFrYXJhbmEgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKGZpcnN0IFNhbnNrcml0IHBsYXkpLiBLYW5pc2hrYSB3YXMgdGhlIHBhdHJvbiBvZiBCdWRkaGlzdCBwaGlsb3NvcGhlcnMgc3VjaCBhcyAgIEFzdmFnaG9zaGEsIFBhcnN2YSBhbmQgVmFzdW1pdHJhLCBhcyB3ZWxsIGFzIHRoZSBncmVhdCBCdWRkaGlzdCB0ZWFjaGVyIE5hZ2FyanVuYS4gICBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAoLSlNaW50ZWQgaW4gdGhlIHNhbWUgc3R5bGUgYXMgR3JlZWsgY29pbnMgb2Ygc2lsdmVyLCB0aGUgY29pbnMgaXNzdWVkIGJ5IEt1c2hhbmFzIGNhcnJpZWQgICB0aGUgcG9ydHJhaXQgb2YgdGhlIHJlaWduaW5nIGtpbmcgb24gb25lIHNpZGUgd2l0aCBoaXMgbmFtZS4gVGhlIGNvaW5zIHRodXMgZ2l2ZSB1cyBhICAgdmlzdWFsIHBpY3R1cmUgb2YgdGhlIGtpbmdzLCB3aG8gYXJlIHJlcHJlc2VudGVkIGluIHZhcmlvdXMga2luZHMgb2YgaGVhZGdlYXIgYW5kIHdpdGggICBkaXN0aW5jdGl2ZSBmYWNpYWwgYW5kIHBoeXNpY2FsIGZlYXR1cmVzLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlBcGFydCBmcm9tIHVzaW5nIHRoZSBjb2lucyBhcyBhIG1vZGUgb2YgcHJvamVjdGluZyB0aGVpciBjbGFpbXMgZm9yIGRpdmluaXR5LCB0aGUgICBLdXNoYW5hIHJ1bGVycyBhbHNvIGNvbnN0cnVjdGVkIGR5bmFzdGljIHNhbmN0dWFyaWVzIEJhZ29sYW5nbyBvciBCb2dvcG91cm8gKGluICAgQmFjdHJpYW4pIG9yIGRldmFrdWxhIChpbiBTYW5za3JpdC9QcmFrcml0IGluc2NyaXB0aW9ucykgYW5kIHRoZXkgYWxzbyBiZWNhbWUgb2JqZWN0cyAgIG9mIGRpdmluZSB3b3JzaGlwLiBTbywgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only   ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 23,
      "question" : "The Gupta temple-building activity represents  evolution from the earlier tradition of rock-cut  shrines. In this context, which of the following  temples were built in the Gupta style of temple  architecture?  1. Dashavatara temple at Deogarh  2. Bhitargaon temple near Kanpur  3. Virupaksha temple in Karnataka  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBHdXB0YSBwZXJpb2QgcmVmbGVjdHMgY3JlYXRpdmUgZW50aHVzaWFzbSBhbmQgZGVlcCBzZW5zZSBhbmQgYXdhcmVuZXNzIG9mICAgYmVhdXR5LiBUaGVzZSBhcmUgZXZpZGVudCBpbiB0aGUgZm9sbG93aW5nIHN1cnZpdmluZyBzcGVjaW1lbnM6IERhc2hhdmF0YXJhIHRlbXBsZSAgIGF0IERlb2dhcmggaW4gSmhhbnNpIGRpc3RyaWN0IChVUCksIEJoaXRhcmdhb24gdGVtcGxlIG5lYXIgS2FucHVyIChVUCksIFZpc2hudSAgIHRlbXBsZSBhdCBUaWdhd2EgKEphYmFscHVyIGRpc3RyaWN0LCBNUCksIFNoaXZhIHRlbXBsZSBhdCBCaHVtYXJhIChTYXRuYSBkaXN0cmljdCwgTVApICAgYW5kIEtob2ggKEJoYXJhdHB1ciBkaXN0cmljdCwgUmFqYXN0aGFuKSwgUGFydmF0aSB0ZW1wbGUgYXQgTmFjaG5hLUt1dGhhcmEgKFBhbm5hICAgZGlzdHJpY3QsIE1QKSwgdGVtcGxlIGRlZGljYXRlZCB0byB0aGUgU3VuLWdvZCBhdCBBc2hyYW1ha2EgKFNhdG5hIGRpc3RyaWN0LCBNUCkgYW5kICAgTWFuZHNhdXIgKE1QKSwgWWFrc2hhIHRlbXBsZSBhdCBQYWRtYXZhdGkgKG1vZGVybiBQYXdheWEpIG5lYXIgR3dhbGlvciAoTVApLCAgIHRlbXBsZSBhdCBCaGl0YXJpIChHaGF6aXB1ciBkaXN0cmljdCwgVVApLiBTbywgcG9pbnQgMSBhbmQgcG9pbnQgMiBhcmUgY29ycmVjdC4gICAoLSlWaXJ1cGFrc2hhIFRlbXBsZSBpcyBsb2NhdGVkIGluIEhhbXBpIGluIHRoZSBWaWpheWFuYWdhcmEgZGlzdHJpY3Qgb2YgS2FybmF0YWthLCAgIEluZGlhLiBJdCB3YXMgYnVpbHQgYnkgTGFra2FuIERhbmRlc2hhLCBhIG5heWFrYSAoY2hpZWZ0YWluKSB1bmRlciB0aGUgcnVsZXIgRGV2YSBSYXlhICAgSUkgb2YgdGhlIFZpamF5YW5hZ2FyYSBFbXBpcmUuIFNvLCBwb2ludCAzIGlzIG5vdCBjb3JyZWN0LiAgICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBSZWxldmFuY2U6IFRoZSBBcmNoYWVvbG9naWNhbCBTdXJ2ZXkgb2YgSW5kaWEgZGlzY292ZXJlZCByZW1haW5zIG9mIGFuIGFuY2llbnQgdGVtcGxlIGRhdGluZyAgIGJhY2sgdG8gdGhlIEd1cHRhIHBlcmlvZCAoNXRoIGNlbnR1cnkpIGluIGEgdmlsbGFnZSBpbiBVdHRhciBQcmFkZXNoJ3MgRXRhaCBkaXN0cmljdC4gICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only   ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 24,
      "question" : "Reclining Buddha statue or image represents:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUEgcmVjbGluaW5nIEJ1ZGRoYSBzdGF0dWUgb3IgaW1hZ2UgcmVwcmVzZW50cyB0aGUgICBCdWRkaGEgZHVyaW5nIGhpcyBsYXN0IGlsbG5lc3MsIGFib3V0IHRvIGVudGVyICAgUGFyaW5pcnZhbmEsIHRoZSBzdGFnZSBvZiBncmVhdCBzYWx2YXRpb24gYWZ0ZXIgZGVhdGggICB0aGF0IGNhbiBvbmx5IGJlIGF0dGFpbmVkIGJ5IGVubGlnaHRlbmVkIHNvdWxzLiAgICgtKVRoaXMgYWxzbyBzaWduaWZpZXMgdGhlIEJ1ZGRoYSdzIGxhc3QgZGVla3NoYSwgZXZlbiAgIHdoaWxlIG9uIGhpcyBkZWF0aGJlZCwgaGUgdG9vayBhIGZvbGxvd2VyIGludG8gdGhlICAgZm9sZC4gICAoLSlTdGF0dWVzIGFuZCBpbWFnZXMgb2YgdGhlIFJlY2xpbmluZyBCdWRkaGEgc2hvdyAgIGhpbSBseWluZyBvbiBoaXMgcmlnaHQgc2lkZSwgaGlzIGhlYWQgcmVzdGluZyBvbiBhIGN1c2hpb24gb3Igb24gaGlzIHJpZ2h0IGVsYm93LiAgICgtKVRoZSBSZWNsaW5pbmcgQnVkZGhhIHdhcyBmaXJzdCBkZXBpY3RlZCBpbiBHYW5kaGFyYSBhcnQsIHdoaWNoIGJlZ2FuIGluIHRoZSBwZXJpb2QgICBiZXR3ZWVuIDUwIEJDIGFuZCA3NSBBRC4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBSZWxldmFuY2U6IEluZGlhJ3MgbGFyZ2VzdCByZWNsaW5pbmcgc3RhdHVlIG9mIExvcmQgQnVkZGhhIGlzIGJlaW5nIGJ1aWx0IGluIEJvZGggR2F5YS4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Buddha after entering Parinirvana  ",
        "option2" : " Buddha during his last illness  ",
        "option3" : " Bodhisattvas after attaining knowledge  ",
        "option4" : " Bodhisattvas after reaching nirvana   "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements with  reference to ancient history of Kashmir region:  1. Durlabhavardhana founded the Karkota  dynasty in the Kashmir region.  2. Rajatarangini, which mentions the history of  Kashmir region, was written by Kalhana.  3. Chandrapida successfully obtained the  support from the Chinese to counter the  Arab invasion in Kashmir.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUthcmtvdGEgb3IgTmFnYSBkeW5hc3R5IHdoaWNoIHJ1bGVkIG92ZXIgS2FzaG1pciB2YWxsZXkgd2FzIGZvdW5kZWQgYnkgICBEdXJsYWJoYXZhcmRoYW5hLiBIdWllbiBUc2FuZywgdGhlIENoaW5lc2UgcGlsZ3JpbSBnaXZlcyBhIHZlcnkgbG9uZyBhY2NvdW50IG9mICAgS2FzaG1pci4gSGUgdmlzaXRlZCBLYXNobWlyIGR1cmluZyB0aGUgcmVpZ24gb2YgRHVybGFiaGF2YXJkaGFuYS4gU28sIHN0YXRlbWVudCAxICAgaXMgY29ycmVjdC4gICAoLSlLYXNobWlyIGhhcyBpdHMgaGlzdG9yeSB3cml0dGVuIGZyb20gdGhlIGVhcmxpZXN0IHRpbWVzIGluIGEgdGV4dCBjYWxsZWQgUmFqYXRhcmFuZ2luaSAgIHdyaXR0ZW4gYnkgS2FsaGFuYSBpbiB0aGUgdHdlbGZ0aCBjZW50dXJ5IENFLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlEdXJpbmcgdGhlIHBlcmlvZCBvZiBDaGFuZHJhcGlkYSwgdGhlIEFyYWIgd2VyZSBlbmNyb2FjaGluZyB1cG9uIHRoZSBmcm9udGllcnMgb2YgICBLYXNobWlyLiBJbiA3MTMgQ0UgaGUgc2VudCBhbiBlbnZveSB0byB0aGUgQ2hpbmVzZSBlbXBlcm9yIGFza2luZyBmb3IgYWlkIGFnYWluc3QgdGhlICAgQXJhYnMuIFRob3VnaCBoZSBkaWQgbm90IHJlY2VpdmUgYW55IHN1cHBvcnQgZnJvbSB0aGUgQ2hpbmVzZSwgaGUgd2FzIGFibGUgdG8gICBwcm90ZWN0IGhpcyBraW5nZG9tIGZyb20gdGhlIEFyYWJzLiBTbywgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBSZWxldmFuY2U6IFRoZSBLYXJuYXRha2Egc2Nob29sIHRleHRib29rIHJldmlldyBjb21taXR0ZWUgaGFzIHN1Z2dlc3RlZCB0byBpbmNsdWRlICAgbGVzc29ucyBvbiB0aGUgQWhvbSBkeW5hc3R5IGFuZCB0aGUgS2Fya290YSBkeW5hc3R5LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 26,
      "question" : "With reference to music, consider the  following statements:   1. Unlike Hindustani music, Carnatic music  does not have any external influence.  2. Hindustani music follows only one  particular prescribed style of singing.  3. Unlike Hindustani music, Carnatic music  emphasizes equally on instruments and  vocals.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZXJlIGFyZSB0d28gc3lzdGVtcyBvZiBjbGFzc2ljYWwgbXVzaWMgaW4gSW5kaWE6IHRoZSBIaW5kdXN0YW5pIGFuZCB0aGUgQ2FybmF0aWMuICAgICgtKUNhcm5hdGljIG11c2ljIGlzIGNvbmZpbmVkIHRvIEthcm5hdGFrYSwgQW5kaHJhIFByYWRlc2gsIFRhbWlsIE5hZHUgYW5kIEtlcmFsYS4gVGhlICAgY2xhc3NpY2FsIG11c2ljIG9mIHRoZSByZXN0IG9mIHRoZSBjb3VudHJ5IGdvZXMgdW5kZXIgdGhlIG5hbWUsIEhpbmR1c3RhbmkgQ2xhc3NpY2FsICAgTXVzaWMuICAgICgtKUhpbmR1c3RhbmkgbXVzaWMgaGFzIHNvbWUgQXJhYiwgUGVyc2lhbiBhbmQgQWZnaGFuIEluZmx1ZW5jZSB3aGVyZWFzIENhcm5hdGljICAgbXVzaWMgZG9lcyBub3QgaGF2ZSBhbnkgZXh0ZXJuYWwgaW5mbHVlbmNlLiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAgKC0pSGluZHVzdGFuaSBtdXNpYyBoYXMgbW9yZSBzY29wZSBmb3IgYXJ0aXN0cyB0byBpbXByb3Zpc2UgY29tcGFyZWQgdG8gQ2FybmF0aWMgbXVzaWMuICAgKC0pSGluZHVzdGFuaSBtdXNpYyBoYXMgc2V2ZXJhbCBzdWItc3R5bGVzIHdoaWNoIGxlYWQgdG8gdGhlIGVtZXJnZW5jZSBvZiAnR2hhcmFuYXMnICAgd2hlcmVhcyBDYXJuYXRpYyBtdXNpYyBmb2xsb3dzIG9ubHkgb25lIHBhcnRpY3VsYXIgcHJlc2NyaWJlZCBzdHlsZSBvZiBzaW5naW5nLiBTbywgICBzdGF0ZW1lbnQgMiBpcyBub3QgY29ycmVjdC4gICAgKC0pSW4gSGluZHVzdGFuaSBtdXNpYywgaW5zdHJ1bWVudHMgYXJlIGVxdWFsbHkgaW1wb3J0YW50IGFzIHZvY2FscyB3aGVyZWFzIGluIENhcm5hdGljICAgbXVzaWMgdGhlcmUgaXMgbW9yZSBlbXBoYXNpcyBvbiB2b2NhbCBtdXNpYy4gU28sIHN0YXRlbWVudCAzIGlzIG5vdCBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 2 only  ",
        "option4" : " 2 and 3 only     Join Telegram Channel @cse_updates For More  t.me/cse_updates     5      "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements:  1. The Mauryan pillars are rock-cut pillars  while the Achaemenian pillars are  constructed in pieces.  2. The Mauryan pillar was independently  erected while the Achaemenian pillars  were attached to state buildings.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlEdXJpbmcgdGhlIHJlaWduIG9mIEFzaG9rYSwgdGhlIGluc2NyaXB0aW9uIG9uIHBpbGxhcnMgc2VydmVkICAgYXMgYSBzeW1ib2wgb2YgdGhlIFN0YXRlLCB0byBjb21tZW1vcmF0ZSBiYXR0bGUgdmljdG9yaWVzICAgYW5kIHRvIHByb3BhZ2F0ZSBpbXBlcmlhbCBzZXJtb25zIGFzIHdlbGwuIEV4YW1wbGVzOiAgIExhdXJpYSBOYW5kYW5nYXJoIFBpbGxhciBpbiBDaGFtcGFyYW4sIFNhcm5hdGggUGlsbGFyIG5lYXIgICBWYXJhbmFzaSwgZXRjLiAgICgtKVRoZSBNYXVyeWFuIHBpbGxhcnMgYXJlIHJvY2stY3V0IHBpbGxhcnMgdGh1cyBkaXNwbGF5aW5nIHRoZSAgIGNhcnZlcidzIHNraWxscywgd2hlcmVhcyB0aGUgQWNoYWVtZW5pYW4gcGlsbGFycyBhcmUgICBjb25zdHJ1Y3RlZCBpbiBwaWVjZXMgYnkgYSBtYXNvbi4gU28sIHN0YXRlbWVudCAxIGlzICAgY29ycmVjdC4gICAoLSlUaGUgc2hhZnQgb2YgdGhlIEFzaG9rYW4gcGlsbGFycyB3YXMgbW9ub2xpdGhpYywgaS5lLiB0aGV5ICAgd2VyZSBpbnNjcmliZWQgZnJvbSBhIHNpbmdsZSBwaWVjZSBvZiBzdG9uZSAobWFpbmx5IGNodW5hciAgIHNhbmRzdG9uZXMpLiBPbiB0b3Agb2YgaXQgbGF5IHRoZSBjYXBpdGFsLCB3aGljaCB3YXMgZWl0aGVyIGxvdHVzLXNoYXBlZCBvciBiZWxsLXNoYXBlZC4gICBUaGUgYmVsbC1zaGFwZWQgY2FwaXRhbHMgd2VyZSBpbmZsdWVuY2VkIGJ5IHRoZSBJcmFuaWFuIHBpbGxhcnMsIGFzIHdhcyB0aGUgaGlnaGx5ICAgcG9saXNoZWQgYW5kIGx1c3Ryb3VzIGZpbmlzaCBvZiB0aGUgcGlsbGFycy4gT24gdGhlIG90aGVyIGhhbmQsIHRoZSBzaGFmdCBvZiBBY2hhZW1lbmlhbiAgIHBpbGxhcnMgd2VyZSBtYWRlIHVwIG9mIHZhcmlvdXMgcGllY2VzIG9mIHNhbmRzdG9uZSBjZW1lbnRlZCB0b2dldGhlci4gICAgKC0pVGhlIEFzaG9rYW4gcGlsbGFyIHdlcmUgaW5kZXBlbmRlbnRseSBlcmVjdGVkIHdoaWxlIHRoZSBBY2hhZW1lbmlhbiBwaWxsYXJzIHdlcmUgICBnZW5lcmFsbHkgYXR0YWNoZWQgdG8gc3RhdGUgYnVpbGRpbmdzLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements with  reference to Junagadh or Girnar Rock  Inscription:  1. It was the first major inscription to be  written in Sanskrit.  2. It contains inscriptions of Ashoka,  Rudradaman I and Skandgupta.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVByYXNhc3RpIGFzIGEgZ2VucmUgb2YgZXBpZ3JhcGh5IG1hZGUgYSB2aXNpYmxlIHByZXNlbmNlIGluIEluZGlhIGR1cmluZyB0aGUgcG9zdC0gIE1hdXJ5YW4gcGVyaW9kLiBUaHJlZSB3ZWxsLWtub3duIHByYXNhc3RpcyBvZiB0aGUgcGVyaW9kLCB0aGUgSGF0aGlndW1waGEgICBpbnNjcmlwdGlvbiBvZiBLaGFyYXZlbGEsIHRoZSBOYXNpayBQcmFzYXN0aSBvZiBHYXV0YW1pIEJhbGFzcmkgYW5kIHRoZSBKdW5hZ2FkICAgUHJhc2FzdGkgb2YgUnVkcmFkYW1hbi4gICAoLSlKdW5hZ2FkIFByYXNhc3RpIG9mIFJ1ZHJhZGFtYW4gSSAoMTUwQS5EKTogICAgbyBUaGUgaW5zY3JpcHRpb24gaXMgY29uc2lkZXJlZCB0byBiZSB0aGUgZWFybGllc3QgZXVsb2d5IHdyaXR0ZW4gaW4gU2Fuc2tyaXQuICAgbyBUaGUgc2NyaXB0IGlzIEJyYWhtaSBhbmQgaXQgaXMgdGhlIGZpcnN0IHByYXNhc3RpIGluIENsYXNzaWNhbCBTYW5za3JpdCBpbiBwcm9zZS4gICBvIEl0IG5hcnJhdGVzIHRoZSBoaXN0b3J5IG9mIFN1ZGFyc2hhbiBsYWtlLCB0aGUgc3Rvcnkgb2YgdGhlIHJlcGFpciBvZiBkYW1hZ2VkICAgTWF1cnlhbiBkYW0gaW4gdGhlIHNlbWktYXJpZCBLYXRoaWF3YXIgYWxvbmcgd2l0aCB0aGUgY2FyZWVyIGFuZCAgIGFjaGlldmVtZW50cyBvZiBraW5nIFJ1ZHJhZGFtYW4uIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgIG8gVGhpcyBpbnNjcmlwdGlvbiBpcyBpbnNjcmliZWQgb24gdGhlIHdlc3Rlcm4gc2lkZSwgbmVhciB0aGUgdG9wIG9mIGEgcm9jayBiZWFyaW5nICAgYSBzZXQgb2YgQXNob2thbiBNYWpvciBSb2NrIGVkaWN0cyBhbmQgYW5vdGhlciBvZiB0aGUgR3VwdGEgbW9uYXJjaCwgICBTa2FuZGFndXB0YSBhdCBKdW5hZ2FkaCwgR3VqYXJhdC4gVGhlIEp1bmFnYWRoIHJvY2sgY29udGFpbnMgaW5zY3JpcHRpb25zIG9mICAgQXNob2thIChvbmUgb2YgZm91cnRlZW4gb2YgdGhlIE1ham9yIFJvY2sgRWRpY3RzIG9mIEFzaG9rYSksIFJ1ZHJhZGFtYW4gSSAgIGFuZCBTa2FuZGFndXB0YS4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements with  reference to the Mamalla style of temple  architecture:  1. It introduced pillars adorned with simha  vyala images in temples.  2. It shows the transition from rock-cut  architecture to monolithic architecture.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluIHNvdXRoIEluZGlhLCByb2NrLWN1dCBhcmNoaXRlY3R1cmUgbGFpZCB0aGUgZm91bmRhdGlvbiBmb3IgdGhlIERyYXZpZGlhbiBzdHlsZSBvZiAgIGFyY2hpdGVjdHVyZS4gVGhlIFBhbGxhdmFzIGFyZSBjcmVkaXRlZCB3aXRoIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhpcyBzdHlsZS4gVGhlICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIGV2b2x1dGlvbiBvZiB0aGUgUGFsbGF2YSBzdHlsZSBvZiBhcmNoaXRlY3R1cmUgY29ycmVzcG9uZGVkIHdpdGggdGhlIHJlaWduaW5nIHJ1bGVycywgICB2aXouIE1haGVuZHJhdmFybWFuIEksIE5hcnNpbWhhdmFybWFuIEksIFJhanNpbWhhdmFybWFuIGFuZCBBcGFyYWppdGEuICAgICgtKVBpbGxhcnMgb2YgdGhlIHRlbXBsZXMgYXJlIG9uZSBvZiB0aGUgdmVyeSBpbXBvcnRhbnQgZmVhdHVyZXMgb2YgdGhlIE1hbWFsbGEgc3R5bGUuICAgTmFyc2ltaGF2YXJtYW4gSSBvciBNYW1hbGxhIGlzIHdlbGwga25vd24gZm9yIGhpcyB0ZW1wbGUtYnVpbGRpbmcgYWN0aXZpdGllcy4gSW4gdGhlICAgTWFoZW5kcmEgc3R5bGUsIHRoZXkgYXJlIHRoaWNrLCBoZWF2eSBhbmQgY3ViaWNhbCBpbiBzaGFwZSB3aXRoIGNvcmJlbCBjYXBpdGFscy4gQXMgYSAgIGRlcGFydHVyZSwgdGhpcyBzdHlsZSBkaXNwbGF5cyB0aGVpciBiZXR0ZXIgcHJvcG9ydGlvbi4gVGhleSBhcmUgdGFsbCwgc2xlbmRlciwgbW9yZSAgIG9ybmFtZW50ZWQgYW5kIGFwcGVhciBlbGVnYW50LiBPbiB0aGVpciBiYXNlLCB3ZSBmaW5kIGxlb2dyeXBoIChsaW9uLWhlYWRlZCAgIGNyZWF0dXJlKSBvciB2eWFsYSBtb3RpZi4gVGhlc2Ugc2ltaGEgdnlhbGFzIGFyZSBzaG93biBpbiBhIHNlYXRlZCBwb3NpdGlvbiBwcm92aWRpbmcgICBzdXBwb3J0IHRvIHRoZSBwaWxsYXJzLiBIZW5jZSwgdGhpcyBzdHlsZSBpbnRyb2R1Y2VkIGEgdmVyeSB2aXRhbCBmZWF0dXJlIG9mIHRoZSBQYWxsYXZhICAgYXJjaGl0ZWN0dXJlIGkuZS4gdGhlIHBpbGxhcnMgYWRvcm5lZCB3aXRoIHNpbWhhIHZ5YWxhIGltYWdlcy4gU28sIHN0YXRlbWVudCAxIGlzICAgY29ycmVjdC4gICAoLSlBIGNydWNpYWwgZGV2ZWxvcG1lbnQgaW4gdGhlIGZpZWxkIG9mIFBhbGxhdmEgYXJjaGl0ZWN0dXJlIG9jY3VycmVkIGR1cmluZyB0aGlzIHN0eWxlLiBJdCAgIHdpdG5lc3NlZCBhIHN0ZWFkeSB0cmFuc2l0aW9uIGZyb20gdGhlIHJvY2stY3V0IHN0eWxlIHRvIHRoZSBjb25zdHJ1Y3Rpb24gb2YgICBtb25vbGl0aGljIHN0cnVjdHVyZXMuIEhlIGlzIHdlbGwta25vd24gZm9yIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGhlIHNldmVuIHBhZ29kYXMgb3IgICB0aGUgbW9ub2xpdGhpYyByYXRoYXMgYXQgTWFoYWJhbGlwdXJhbS9NYW1hbGxhcHVyYW0gKEthbmNoaXB1cmFtIGRpc3RyaWN0LCBUYW1pbCAgIE5hZHUpLiBUaGVzZSByYXRoYXMgYXJlIGJ1aWx0IG91dCBvZiBtb25vbGl0aGljIHJvY2suIFRoZXNlIGFyZSAxMCBpbiBudW1iZXIgb3V0IG9mICAgd2hpY2ggdGhlIGZpdmUgcmF0aGFzIC0gY29tbW9ubHkga25vd24gYXMgcGFuY2hhIHBhbmRhdmEgcmF0aGFzIC0gYXJlIG9mIG1vcmUgICBzaWduaWZpY2FuY2UuIFRoZXNlIHBhbmNoYSByYXRoYXMgYXJlOiB0aGUgRHJhdXBhZGkgcmF0aGEsIERoYXJtYXJhamEgcmF0aGEsIEJoaW1hICAgcmF0aGEsIEFyanVuYSByYXRoYSwgYW5kIE5ha3VsLVNhaGRldmEgcmF0aGEuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 30,
      "question" : "With reference to the Natyashastra, consider  the following statements:   1. It is one of the oldest surviving ancient  Indian works on performance arts.  2. It is believed to have been written by  Bharata Muni.  3. It is called the fifth Veda as it includes  details from each of the four Vedas.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBOYXR5YXNoYXN0cmEgaXMgdGhlIGVhcmxpZXN0IGFuZCBtb3N0IGF1dGhvcml0YXRpdmUgSW5kaWFuIHRleHQgb24gdGhlICAgcGVyZm9ybWluZyBhcnRzLiBXcml0dGVuIGluIFNhbnNrcml0LCBtYWlubHkgaW4gZXBpYyBzaGxva2FzIHdpdGggc29tZSBwcm9zZSAgIGZyYWdtZW50cywgaXQgaXMgZGF0ZWQgYnkgc2Nob2xhcnMgZnJvbSB0aGUgNXRoIGNlbnR1cnkgQkNFIHRvIHRoZSA3dGgtOHRoIGNlbnR1cnkgICBDRS4gQXBwYXJlbnRseSwgYmV0d2VlbiB0aGUgMm5kIGNlbnR1cnkgQkNFIGFuZCB0aGUgMm5kIGNlbnR1cnkgQ0UsIGl0IGFjcXVpcmVkIHRoZSAgIHByZXNlbnRseSBrbm93biBmb3JtLiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAgKC0pQmhhcmF0YSBNdW5pIGlzIHN1cHBvc2VkIHRvIGhhdmUgY29tcG9zZWQgdGhpcyB0ZXh0IG9uIHRoZWF0cmljYWwgcHJhY3RpY2UgYW5kICAgdGhlb3J5IHRoYXQgZm9ybXVsYXRlcyBJbmRpYW4gYWVzdGhldGljcy4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgICgtKUJoYXJhdGEncyBOYXR5YXNoYXN0cmEgd2FzIGNyZWF0ZWQgYnkgdGFraW5nIHNvbWUgc2lnbmlmaWNhbnQgZGV0YWlscyBmcm9tIGVhY2ggb2YgdGhlICAgZm91ciBWZWRhczogICAgbyBQYWF0aHlhIG9yIHJlY2l0YXRpdmUgdGV4dCBmcm9tIHRoZSBSaWcgVmVkYSAgIG8gU2FuZ2VldGEgb3Igc29uZyBhbmQgbWVsb2R5IGZyb20gdGhlIFNhYW1hIFZlZGEgICBvIEFiaGluYXlhIG9yIGFjdGluZyBmcm9tIHRoZSBZYWp1ciBWZWRhICAgbyBSYXNhIG9yIGh1bWFuIHNlbnRpbWVudHMgZnJvbSB0aGUgQXRoYXJ2YSBWZWRhICAgKC0pRHVlIHRvIHRoaXMgdmVyeSBkaXN0aW5jdGl2ZSBvcmlnaW4sIHRoZSBOYXR5YXNoYXN0cmEgaXMgY2FsbGVkIHRoZSBmaWZ0aCB2ZWRhIC0gdGhlICAgTmFhdHlhIFZlZGEuIFRoaXMgYWxzbyBtZWFucyB0aGF0IHBhYXRoeWEgKHJlY2l0YXRpb24pLCBnZWV0YSAoc29uZ3MpLCByYXNhIGFuZCAgIGJoYWF2YSAnKGh1bWFuIHNlbnRpbWVudHMgYW5kIGVtb3Rpb25hbCBzdGF0ZXMpIGFuZCBhYmhpbmF5YSAoaGlzdHJpb25pYyAgIHJlcHJlc2VudGF0aW9uIG9yIGFjdGluZykgYXJlIHRoZSBwcmluY2lwYWwgY29tcG9uZW50cyBvZiBuYWF0eWEuIFNvLCBzdGF0ZW1lbnQgMyBpcyAgIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to the Kuchipudi Dance,  consider the following statements:   1. It is performed in the state of Odisha by  males only.   2. Kuchipudi style of Yakshagaana was  conceived by Siddhendra Yogi, a  Vaishnava poet.   3. It is accompanied by the Carnatic music.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlLdWNoaXB1ZGkgaXMgb25lIG9mIHRoZSBjbGFzc2ljYWwgc3R5bGVzIG9mIEFuZGhyYSAgIFByYWRlc2guIEt1Y2hpcHVkaSBpcyB0aGUgbmFtZSBvZiBhIHZpbGxhZ2UgaW4gdGhlICAgS3Jpc2huYSBkaXN0cmljdCBvZiBBbmRocmEgUHJhZGVzaC4gQXQgdGhhdCBpbml0aWFsIHRpbWUsICAgYWxsIHRoZSBhY3RvcnMgd2VyZSBtYWxlIGFuZCB0aGUgZmVtYWxlIGltcGVyc29uYXRpb24gICB3YXMgb2Ygc3VwZXJiIHF1YWxpdHkuIEl0IHdhcyBMYWtzaG1pbmFyYXlhbiBTaGFzdHJ5ICAgKDE4ODYtMTk1Nikgd2hvIGludHJvZHVjZWQgbWFueSBuZXcgZWxlbWVudHMgICBpbmNsdWRpbmcgc29sbyBkYW5jaW5nIGFuZCB0cmFpbmluZyBvZiBmZW1hbGUgZGFuY2VycyAgIGluIHRoaXMgZGFuY2Ugc3R5bGUuIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICAoLSlJbiB0aGUgMTd0aCBjZW50dXJ5LCB0aGUgS3VjaGlwdWRpIHN0eWxlIG9mIFlha3NoYWdhYW5hICAgd2FzIGNvbmNlaXZlZCBieSBTaWRkaGVuZHJhIFlvZ2kgYSB0YWxlbnRlZCBWYWlzaG5hdmEgICBwb2V0IGFuZCB2aXNpb25hcnkgd2hvIGhhZCB0aGUgY2FwYWNpdHkgdG8gZ2l2ZSAgIGNvbmNyZXRlIHNoYXBlIHRvIHNvbWUgb2YgaGlzIHZpc2lvbnMuIEhlIHdhcyBzdGVlcGVkIGluIHRoZSBsaXRlcmFyeSBZYWtzaGFnYWFuYSAgIHRyYWRpdGlvbiBiZWluZyBndWlkZWQgYnkgaGlzIGd1cnUgVGVlcnRoYW5hYXJhYXlhbmEgWW9naSB3aG8gY29tcG9zZWQgdGhlICAgS3Jpc2huYS1MZWVsYXRhcmFuZ2luaSwgYSBrYWF2eWEgaW4gU2Fuc2tyaXQuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKVRoZXJlIGFyZSB0d28gZm9ybXMgb2YgS3VjaGlwdWRpOyB0aGUgdHJhZGl0aW9uYWwgbXVzaWNhbCBkYW5jZS1kcmFtYSBhbmQgdGhlIHNvbG8gICBkYW5jZS4gICAoLSlUaGUgbXVzaWMgdGhhdCBhY2NvbXBhbmllcyB0aGUgZGFuY2UgaXMgYWNjb3JkaW5nIHRvIHRoZSBjbGFzc2ljYWwgc2Nob29sIG9mIENhcm5hdGljICAgbXVzaWMgYW5kIGlzIGRlbGlnaHRmdWxseSBzeW5jb3BhdGljLiBTbywgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only   ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to the Jain Councils, consider  the following statements:   1. In the first Jain council, the sacred  teachings of Mahavira were divided into  twelve angas.  2. The second Jain Council was presided  over by Devardhi Kshemasarmana.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUb3dhcmRzIHRoZSBjbG9zZSBvZiBDaGFuZHJhZ3VwdGEgTWF1cnlhJ3MgcnVsZSwgYSB0ZXJyaWJsZSBmYW1pbmUgYnJva2Ugb3V0IGluICAgU291dGggQmloYXIuIEl0IGxhc3RlZCBmb3IgYWJvdXQgMTIgeWVhcnMuIEJoYWRyYWJhaHUgYW5kIGhpcyBkaXNjaXBsZXMgbWlncmF0ZWQgdG8gICBTcmF2YW5hYmVsZ29sYSBpbiBLYXJuYXRha2EuIE90aGVyIEphaW5zIHJlbWFpbmVkIGluIE1hZ2FkaGEgd2l0aCBTdGh1bGFiaGFkcmEgYXMgICB0aGVpciBsZWFkZXIuICAgIG8gVGhleSBzdW1tb25lZCBhIGNvdW5jaWwgYXQgUGF0YWxpcHV0cmEgYXQgYWJvdXQgMzAwIEIuQy4gSW4gdGhhdCBjb3VuY2lsLCB0aGUgICBzYWNyZWQgdGVhY2hpbmdzIG9mIE1haGF2aXJhIHdlcmUgZGl2aWRlZCBpbnRvIHR3ZWx2ZSBhbmdhcy4gU28sIHN0YXRlbWVudCAgIDEgaXMgY29ycmVjdC4gICAgKC0pVGhlIHNlY29uZCBKYWluIENvdW5jaWwgd2FzIGhlbGQgYXQgVmFsbGFiaGkgKEd1amFyYXQpIGluIDUxMiBBLkQuIGFuZCB3YXMgcHJlc2lkZWQgICBvdmVyIGJ5IERldmFyZGhpIEtzaGVtYXNhcm1hbmEuIFRoZSBwdXJwb3NlIG9mIHRoaXMgQ291bmNpbCB3YXMgdG8gY29sbGVjdCB0aGUgICBzYWNyZWQgdGV4dHMgYW5kIHdyaXRlIHRoZW0gZG93biBzeXN0ZW1hdGljYWxseS4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgICgtKUhvd2V2ZXIgdGhpcyB0aW1lIHRoZSAxMnRoIGFuZ2EgZHJhd24gYXQgdGhlIGZpcnN0IENvdW5jaWwgd2FzIGxvc3QuIEFsbCB0aGUgcmVtYWluaW5nICAgYW5nYXMgd2VyZSB3cml0dGVuIGluIEFyZGhhbWFnYWRoaS4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2    "
      }
    },
    {
      "index" : 33,
      "question" : "With reference to the Kalamkari Paintings,  consider the following statements:  1. These were developed under the  patronage of Vijaynagar rulers.  2. These depict the mythological stories of  Ramayana and the Mahabharata.  3. These are done exclusively on paper  using a stick made from copper.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBuYW1lIEthbGFta2FyaSBvcmlnaW5hdGVzIGZyb20gdGhlIFBlcnNpYW4gd29yZHMgcWFsYW0gKHBlbikgYW5kIGthcmkgICAoY3JhZnRtYW5zaGlwKS4gQW5kaHJhIFByYWRlc2ggaXMgZmFtb3VzIGFsbCBvdmVyIGZvciB0aGlzIGZvcm0gb2YgYXJ0LiBUaGUgbWFqb3IgZm9ybXMgICBhcmUgU3Jpa2FsYWhhc3RoaSBmcm9tIENoaXR0b29yIGRpc3RyaWN0LCBhbmQgTWFjaGlsaXBhdG5hbSBLYWxhbWthcmkgb2YgS3Jpc2huYSAgIGRpc3RyaWN0LiAgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pSXQgaXMgbWFpbmx5IHJlbGF0ZWQgdG8gZGVjb3JhdGluZyB0ZW1wbGUgaW50ZXJpb3JzIHdpdGggcGFpbnRlZCBjbG90aCBwYW5lbHMsIHdoaWNoIHdhcyAgIGRldmVsb3BlZCBpbiB0aGUgZmlmdGVlbnRoIGNlbnR1cnkgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBWaWpheW5hZ2FyIHJ1bGVycy4gU28sICAgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAoLSlTdWJqZWN0cyBhcmUgYWRvcHRlZCBmcm9tIHRoZSBSYW1heWFuYSwgdGhlIE1haGFiaGFyYXRhIGFuZCBIaW5kdSByZWxpZ2lvdXMgICBteXRob2xvZ3kuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKVRoaXMgYXJ0IGZvcm0gaXMgYSBjb250aW51b3VzIGxlZ2FjeSBmcm9tIGZhdGhlciB0byBzb24uIFRoaXMgYXJ0IHdhcyBzdGFydGVkIG9uICAgZ2FybWVudHMsIGJlZCBjb3ZlcnMgYW5kIGN1cnRhaW5zLiBUaGUgYXJ0aXN0cyB1c2UgYSBiYW1ib28gb3IgZGF0ZSBwYWxtIHN0aWNrICAgcG9pbnRlZCBhdCBvbmUgZW5kIHdpdGggYSBidW5kbGUgb2YgZmluZSBoYWlyIGF0dGFjaGVkIHRvIHRoZSBvdGhlciBlbmQgdG8gc2VydmUgYXMgICBicnVzaCBvciBwZW4uIFNvLCBzdGF0ZW1lbnQgMyBpcyBub3QgY29ycmVjdC4gICAoLSlUaGUga2FsYW1rYXJpIGR5ZXMgYXJlIG9idGFpbmVkIGJ5IGV4dHJhY3RpbmcgY29sb3VycyBmcm9tIHBsYW50IHJvb3RzLCBhbmQgbGVhdmVzLCAgIGFsb25nIHdpdGggc2FsdHMgb2YgaXJvbiwgdGluLCBjb3BwZXIsIGFsdW0gZXRjLiAgICBUaGVyZWZvcmUsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only   ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only   ",
        "option4" : " 1, 2 and 3    Join Telegram Channel @cse_updates For More  t.me/cse_updates     6      "
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following are examples of rock- cut caves?   1. Mawsmai caves  2. Ajanta caves  3. Pandavleni caves  4. Elephanta caves  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE1hd3NtYWkgY2F2ZXM6ICAgICgtKVRoZXNlIGNhdmVzIGFyZSBsb2NhdGVkIGluIE1lZ2hhbGF5YS4gVGhlIGNhdmUgaXMgZmFtb3VzIGZvciBpdHMgZm9zc2lscywgc29tZSBvZiB3aGljaCAgIGNhbiBiZSBzcG90dGVkIG9uIHRoZSB3YWxscyBhbmQgZm9ybWF0aW9ucyBpbnNpZGUuICAgKC0pVGhlc2Ugc3VidGVycmFuZWFuIG5ldHdvcmtzIHNwcmVhZCBsaWtlIGEgY29tcGxleCBuZXR3b3JrIG9mIHJvdXRlcyBmb3JtZWQgYnkgdGhlICAgZXJvc2lvbiBvZiBsaW1lc3RvbmUgYW5kIHVucmVsZW50aW5nIGZsb3cgb2Ygd2F0ZXIuIFNvLCBwb2ludCAxIGlzIG5vdCBjb3JyZWN0LiAgIEFqYW50YSBDYXZlczogICAgKC0pQWphbnRhIGlzIGEgc2VyaWVzIG9mIHJvY2stY3V0IGNhdmVzIGluIHRoZSBTYWh5YWRyaSByYW5nZXMgb24gdGhlIFdhZ2hvcmEgUml2ZXIgbmVhciAgIEF1cmFuZ2FiYWQgaW4gTWFoYXJhc2h0cmEuIFNvLCBwb2ludCAyIGlzIGNvcnJlY3QuICAgKC0pVGhlcmUgYXJlIGEgdG90YWwgb2YgMjkgY2F2ZXMsIG9mIHdoaWNoIDI1IHdlcmUgdXNlZCBhcyBWaWhhcmFzIG9yIHJlc2lkZW50aWFsIGNhdmVzICAgd2hpbGUgNCB3ZXJlIHVzZWQgYXMgQ2hhaXR5YSBvciBwcmF5ZXIgaGFsbHMuICAgKC0pIFRoZSBjYXZlcyB3ZXJlIHByb2JhYmx5IGRldmVsb3BlZCBpbiB0aGUgcGVyaW9kIGJldHdlZW4gMjAwIEJDIGFuZCA2NTAgQUQuICAgUGFuZGF2bGVuaSBDYXZlczogICAoLSlJdCBpcyBhIGdyb3VwIG9mIDI0IHJvY2stY3V0IGNhdmVzIGxvY2F0ZWQgb24gYSBoaWxsIG9uIHRoZSBvdXRza2lydHMgb2YgTmFzaGlrIGNpdHkuIFNvLCAgIHBvaW50IDMgaXMgY29ycmVjdC4gICAoLSlUaGVzZSBjYXZlcyBhcmUgYSBncm91cCBvZiBvbGQgQnVkZGhpc3QgY2F2ZXMgKEIuQy4yNTAgLSBBLkQuNjAwKS4gICAoLSlBbGwgdGhlIGNhdmVzIGFyZSBncmVhdCBleGFtcGxlcyBvZiBpbnRyaWNhdGUgY2FydmluZyBhbmQgY3JhZnRzbWFuc2hpcC4gICBFbGVwaGFudGEgQ2F2ZXM6ICAgKC0pVGhlIEVsZXBoYW50YSBDYXZlcyBhcmUgbG9jYXRlZCBvbiBFbGVwaGFudGEgSXNsYW5kIChvdGhlcndpc2Uga25vd24gYXMgdGhlIElzbGFuZCAgIG9mIEdoYXJhcHVyaSksIHdoaWNoIGZlYXR1cmVzIHR3byBoaWxsb2NrcyBzZXBhcmF0ZWQgYnkgYSBuYXJyb3cgdmFsbGV5LiAgICAoLSlUaGVzZSBhcmNoYWVvbG9naWNhbCByZW1haW5zIHJldmVhbCBldmlkZW5jZSBvZiBvY2N1cGF0aW9uIGZyb20gYXMgZWFybHkgYXMgdGhlIDJuZCAgIGNlbnR1cnkgQkMuICAgICgtKVRoZSByb2NrLWN1dCBFbGVwaGFudGEgQ2F2ZXMgd2VyZSBjb25zdHJ1Y3RlZCBhYm91dCB0aGUgbWlkLTV0aCB0byA2dGggY2VudHVyaWVzICAgQUQuIFNvLCBwb2ludCA0IGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1, 2 and 4 only  ",
        "option3" : " 1, 3 and 4 only  ",
        "option4" : " 2, 3 and 4 only   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements with  reference to social formations in Tamilagam:  1. Kurinji tracts were the fertile agricultural  plains where the chief occupation was  cultivation.  2. Mullai was the forested region where  shifting cultivation was practiced.  3. Neythal was the hilly slopes where people  practiced slash and burn cultivation.  4. Palai was the parched land unsuitable for  cultivation.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pQWNjb3JkaW5nIHRvIHRoZSB0aGluYWkgY29uY2VwdCwgVGFtaWxhZ2FtIHdhcyBkaXZpZGVkIGludG8gZml2ZSBsYW5kc2NhcGVzIG9yIGVjby0gIHJlZ2lvbnMgbmFtZWx5IEt1cmluamksIE1hcnV0YW0sIE11bGxhaSwgTmV5dGFsIGFuZCBQYWxhaS4gRWFjaCByZWdpb24gaGFkIGRpc3RpbmN0ICAgY2hhcmFjdGVyaXN0aWNzIC0gYSBwcmVzaWRpbmcgZGVpdHksIHBlb3BsZSBhbmQgY3VsdHVyYWwgbGlmZSBhY2NvcmRpbmcgdG8gdGhlICAgZW52aXJvbm1lbnRhbCBjb25kaXRpb25zLCBhcyBmb2xsb3dzOiAgICgtKUt1cmluamkgd2FzIHRoZSBoaWxseSByZWdpb24gd2hlcmUgaHVudGluZyBhbmQgZ2F0aGVyaW5nIHdlcmUgdGhlIG1haW4gb2NjdXBhdGlvbnMuICAgSW4gY29udHJhc3QsIE1hcnV0aGFtIHdhcyB0aGUgcml2ZXJpbmUgdHJhY3Qgd2hlcmUgYWdyaWN1bHR1cmUgdXNpbmcgcGxvdWdoIGFuZCAgIGlycmlnYXRpb24gd2FzIGNhcnJpZWQgb3V0LiBTbywgc3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QgICAoLSlNdWxsYWkgd2FzIHRoZSBmb3Jlc3RlZCByZWdpb24gd2hlcmUgcGFzdG9yYWxpc20gY29tYmluZWQgd2l0aCBzaGlmdGluZyBjdWx0aXZhdGlvbiAgIHdhcyBwcmFjdGljZWQuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKU5leXRoYWwgd2FzIHRoZSBjb2FzdGFsIGxhbmQgd2hlcmUgdGhlIGNoaWVmIG9jY3VwYXRpb25zIGluY2x1ZGVkIGZpc2hpbmcgYW5kIHNhbHQgICBtYWtpbmcuIFNvLCBzdGF0ZW1lbnQgMyBpcyBub3QgY29ycmVjdC4gICAoLSlQYWxhaSB3YXMgdGhlIHBhcmNoZWQgbGFuZCB3aGljaCB3YXMgdW5zdWl0YWJsZSBmb3IgY3VsdGl2YXRpb24gYW5kIGhlbmNlIHBlb3BsZSAgIHRvb2sgdG8gY2F0dGxlIGxpZnRpbmcgYW5kIHJvYmJlcnkuIFNvLCBzdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1 and 4 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 2 and 4 only   "
      }
    },
    {
      "index" : 36,
      "question" : "Arrange the following foreign powers/rulers in  chronological order of their invasion into  India:  1. Persians  2. Alexander  3. Sakas  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFBlcnNpYW4gaW52YXNpb246ICAgKC0pQ3lydXMgKDU1OCAtIDUzMCBCLkMpIHdhcyB0aGUgZ3JlYXRlc3QgY29ucXVlcm9yIG9mIHRoZSBBY2hhZW1lbmlhbiBFbXBpcmUuIEhlIHdhcyAgIHRoZSBmaXJzdCBjb25xdWVyb3Igd2hvIGxlZCBhbiBleHBlZGl0aW9uIGFuZCBlbnRlcmVkIEluZGlhLiBIZSBjYXB0dXJlZCB0aGUgICBHYW5kaGFyYSByZWdpb24uICAgQWxleGFuZGVyJ3MgSW52YXNpb246ICAgKC0pQWxleGFuZGVyJ3MgSW52YXNpb24gb2YgSW5kaWEgdG9vayBwbGFjZSBkdXJpbmcgMzI3LTMyNSBCLkMuIEluIDMyNyBCLkMuIEFsZXhhbmRlciAgIGNyb3NzZWQgdGhlIEhpbmR1a3VzaCBNb3VudGFpbnMgYW5kIHNwZW50IG5lYXJseSB0ZW4gbW9udGhzIGluIGZpZ2h0aW5nIHdpdGggdGhlICAgdHJpYmVzLiBIaXMgcmV0cmVhdCBiZWdhbiBpbiBPY3RvYmVyIDMyNiBCLkMuIE9uIGhpcyB3YXksIGhlIHJlYWNoZWQgQmFieWxvbiB3aGVyZSAgIGhlIGZlbGwgc2VyaW91c2x5IGlsbCBhbmQgZGllZCBpbiAzMjMgQi5DLiAgICBCYWN0cmlhbiBpbnZhc2lvbjogICAoLSlCYWN0cmlhIGFuZCBQYXJ0aGlhIGJlY2FtZSBpbmRlcGVuZGVudCBmcm9tIHRoZSBTeXJpYW4gZW1waXJlIGluIHRoZSBtaWRkbGUgb2YgdGhlICAgdGhpcmQgY2VudHVyeSBCLkMuIERlbWV0cml1cywgdGhlIEdyZWVrIHJ1bGVyIG9mIEJhY3RyaWEgaW52YWRlZCBBZmdoYW5pc3RhbiBhbmQgICBQdW5qYWIgYW5kIG9jY3VwaWVkIHRoZW0uIEZyb20gVGF4aWxhLCBoZSBzZW50IHR3byBvZiBoaXMgY29tbWFuZGVycywgQXBwb2xvZG90dXMgICBhbmQgTWVuYW5kZXIgZm9yIGZ1cnRoZXIgY29ucXVlc3RzLiAgICAgU2FrYSBpbnZhc2lvbjogICAoLSlUaGUgU2FrYXMgb3IgdGhlIFNjeXRoaWFucyBhdHRhY2tlZCBCYWN0cmlhIGFuZCBQYXJ0aGlhIGFuZCBjYXB0dXJlZCB0aGVtIGZyb20gdGhlICAgR3JlZWsgcnVsZXJzLiBGb2xsb3dpbmcgdGhlIGZvb3RzdGVwcyBvZiB0aGUgR3JlZWtzLCB0aGUgU2FrYXMgZ3JhZHVhbGx5IGV4dGVuZGVkICAgdGhlaXIgcnVsZSBvdmVyIG5vcnRoLXdlc3Rlcm4gSW5kaWEuIFRoZSBmb3VuZGVyIG9mIHRoZSBTYWthIHJ1bGUgaW4gSW5kaWEgaW4gdGhlIGZpcnN0ICAgY2VudHVyeSBCLkMuIHdhcyBNYXVlcy4gICAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2-3-1  ",
        "option2" : " 1-2-3  ",
        "option3" : " 2-1-3  ",
        "option4" : " 1-3-2   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements:  1. Alexander's invasion of India happened  during the rule of the Mauryas.  2. Chandragupta was able to defeat  Seleucus Nikator.  3. Megasthenes was sent as an  ambassador to Chandragupta by  Seleucus Nikator.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUl0IHdhcyBkdXJpbmcgdGhlIHJ1bGUgb2YgdGhlIE5hbmRhcyBpbiBNYWdhZGhhIGFuZCB0aGUgR2FuZ2EgUGxhaW5zIGFzIGEgd2hvbGUgdGhhdCAgIHRoZSBpbnZhc2lvbiBvZiBBbGV4YW5kZXIgdG9vayBwbGFjZSBpbiBub3J0aC13ZXN0IEluZGlhIGluIDMyNiBCLkMuLCBvZnRlbiBjb25zaWRlcmVkICAgdGhlIGJlZ2lubmluZyBvZiB0aGUgaGlzdG9yaWMgcGVyaW9kIGluIEluZGlhLiBXaGVyZWFzLCB0aGUgTWF1cnlhbiBFbXBpcmUgd2FzICAgZm9ybWVkIGFyb3VuZCAzMjEgQi5DLkUuIGFuZCBlbmRlZCBpbiAxODUgQi5DLkUuIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pT25lIG9mIHRoZSBmaXJzdCBtYWpvciBhY2hpZXZlbWVudHMgb2YgQ2hhbmRyYWd1cHRhIE1hdXJ5YSBvbiB0aGUgbWlsaXRhcnkgZnJvbnQgICB3YXMgaGlzIGNvbnRhY3Qgd2l0aCBTZWxldWN1cyBOaWthdG9yLCBhIGdlbmVyYWwgb2YgdGhlIEdyZWVrIEtpbmcsIEFsZXhhbmRlciwgd2hvICAgcnVsZWQgb3ZlciB0aGUgYXJlYSB3ZXN0IG9mIHRoZSBJbmR1cyBhcm91bmQgMzA1IEIuQy4gSW4gdGhlIHdhciwgQ2hhbmRyYWd1cHRhICAgTWF1cnlhIGRlZmVhdGVkIFNlbGV1Y3VzIE5pa2F0b3IgYW5kIGV2ZW50dWFsbHksIHBlYWNlIHdhcyBlc3RhYmxpc2hlZCB3aXRoIHRoaXMgICBHcmVlayB2aWNlcm95IGluIGFyb3VuZCAzMDMgQi5DLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlTZWxldWN1cyBzZW50IGFuIGFtYmFzc2Fkb3IgY2FsbGVkIE1lZ2FzdGhlbmVzIHdobyBsaXZlZCBpbiB0aGUgY291cnQgb2YgICBDaGFuZHJhZ3VwdGEgZm9yIG1hbnkgeWVhcnMuIFNvLCBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 and 3 only   ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following items were exported from  India during Post-Mauryan rule between 200  BCE to 200 CE?  1. Sapphire  2. Ivory  3. Diamond  4. Pepper  5. Pearls  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBtb3N0IHNpZ25pZmljYW50IGRldmVsb3BtZW50IG9mIHRoZSBwb3N0LU1hdXJ5YW4gcGVyaW9kIGJldHdlZW4gYy4yMDAgQkNFIHRvICAgMjAwIENFIGluIHRoZSBlY29ub21pYyBzcGhlcmUgd2FzIHRoZSBpbmNyZWFzZSBpbiB0aGUgdm9sdW1lIG9mIGludGVybmF0aW9uYWwgdHJhZGUuICAgSW5kaWEgaGFkIHRyYWRlIGxpbmtzIHdpdGggdGhlIFdlc3Rlcm4gd29ybGQgYXMgd2VsbCBhcyBTb3V0aGVhc3QgQXNpYS4gICAgKC0pSW4gdGhlIHdlc3Rlcm4gd29ybGQgbW9zdCBvZiB0aGUgdHJhZGUgd2FzIHdpdGggdGhlIFJvbWFuIGVtcGlyZS4gVHJhZGUgd2FzICAgY29uZHVjdGVkIHRocm91Z2ggYm90aCBsYW5kIGFuZCBzZWEgcm91dGVzLCBzZWEgcm91dGUgcG9zc2libHkgbW9yZSBpbXBvcnRhbnQuICAgVHJhZGUgc3RhcnRlZCBmcm9tIHRoZSBwb3J0cyBpbiBFZ3lwdCBhbmQgZW5kZWQgb24gdGhlIHBvcnRzIGxvY2F0ZWQgb24gdGhlIGVhc3Rlcm4gICBjb2FzdCBvZiBJbmRpYS4gICAgKC0pSW5kaWEgZXhwb3J0ZWQgaXRlbXMgbGlrZTogcGVwcGVyLCBzYXBwaGlyZSwgdHVycXVvaXNlLCBsYXBpcyBsYXp1bGksIGRpYW1vbmQsIG9ueXgsICAgdGV4dGlsZXMgb2YgY290dG9uLCBtdXNsaW4gYW5kIHNpbGsgYWNxdWlyZWQgdGhyb3VnaCBDaGluYSwgaXZvcnksIHBlYXJscywgdG9ydG9pc2Ugc2hlbGxzICAgZXRjLiBTb21lIG9mIHRoZXNlIGdvb2RzIGxpa2UgZ3JhaW5zLCBvaWxzLCBpcm9uIGFuZCBzdGVlbCwgdGVhaywgZWJvbnkgd2VyZSBhbHNvICAgZXhwb3J0ZWQgdG8gcG9ydHMgaW4gSXJhbiwgQXJhYmlhIGFuZCBBZnJpY2EuIEluIHJldHVybiwgSW5kaWEgYWNxdWlyZWQgaHVnZSBxdWFudGl0aWVzICAgb2YgUm9tYW4gZ29sZCAoYXVyZWkpIGFuZCBzaWx2ZXIgKGRlbmFyaXVzKSBjb2lucyBjYXVzaW5nIGEgc2lnbmlmaWNhbnQgZHJhaW4gb2Ygd2VhbHRoICAgZnJvbSBSb21lLiBTbywgcG9pbnRzIDEsIDIsIDMsIDQgYW5kIDUgYXJlIGNvcnJlY3QuICAgKC0pSW5kaWEgaW1wb3J0ZWQgdGhlIGZvbGxvd2luZyBnb29kczogdGluLCBsZWFkLCBjb3BwZXIsIGFudGltb255LCByZWFsZ2FyIChydWJ5ICAgc3VscGh1ciBvciBydWJ5IG9mIGFyc2VuaWMpLCBvcnBpbWVudCwgc3RvcmF4IChhbHNvIGtub3duIGFzIHN0eXJheCksIHNpbHZlcndhcmUsICAgZ2xhc3N3YXJlLCBjb3JhbCwgbGluZW4sIHRvcGF6LCBzbGF2ZXMsIGFuZCB3aW5lLiBXaW5lIHdhcyBjYXJyaWVkIGluIFJvbWFuIGFtcGhvcmFlICAgd2FyZSwgcm91bGV0dGVkIHdhcmUgYW5kIHRlcnJhIHNpZ2lsbGF0YSBhbmQgd2FzIHJlY292ZXJlZCBmcm9tIHNldmVyYWwgcGFydHMgb2YgSW5kaWEuICAgICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only  ",
        "option2" : " 2, 4 and 5 only  ",
        "option3" : " 3 and 5 only  ",
        "option4" : " 1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to Mauryan period, the term  'janapadanivesha' refers to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUphbmFwYWRhbml2ZXNoYSB3YXMgdGhlIHBvbGljeSBhZG9wdGVkIGluIHRoZSBNYXVyeWFuIHBlcmlvZCB0byBlbmNvdXJhZ2UgdGhlICAgZXhwYW5zaW9uIG9mIGFncmljdWx0dXJhbCBsYW5kLiBUaGUgcG9saWN5IHByb3ZpZGVkIHRheCByZWxpZWYsIHRvb2xzIGFuZCBzZWVkcyBmb3IgICBjdWx0aXZhdGlvbi4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " land grants made to temples and priests  ",
        "option2" : " form of tax on inheritable property  ",
        "option3" : " policies to promote the expansion of   agricultural land   ",
        "option4" : " officials appointed by the emperor to keep   the revenue records   "
      }
    },
    {
      "index" : 40,
      "question" : "Uttarapatha and Dakshinapatha were two major  routes through which internal trade was carried  out in ancient India. In this context, consider the  following statements:  1. Uttarapatha started from Rajasthan and  ended up at Tamralipti in Bengal.  2. Dakshinapath stretched from Patliputra in  Magadha to Pratishthana on the Godavari.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluZGlhIGluIGFuY2llbnQgdGltZXMgaGFkIGEgc2lnbmlmaWNhbnQgYW1vdW50IG9mIGludGVybmFsIHRyYWRlIGFuZCBpdCB3YXMgY29uZHVjdGVkICAgYWxvbmcgdHdvIHJvdXRlczogdGhlIGdyZWF0IG5vcnRoZXJuIHJvdXRlICh1dHRhcmFwYXRoYSkgYW5kIHRoZSBncmVhdCBzb3V0aGVybiAgIHJvdXRlIChkYWtzaGluYXBhdGhhKS4gICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgICgtKVV0dGFyYXBhdGhhIHN0YXJ0ZWQgZnJvbSBQdXNoa2FsYXZhdGkgKG1vZGVybiBQZXNoYXdhcikgaW4gdGhlIG5vcnRoLXdlc3QgYW5kICAgZW5kZWQgdXAgYXQgVGFtcmFsaXB0aSAoVGFtbHVrIGluIEJlbmdhbCksIGNvbm5lY3RpbmcgdmFyaW91cyBpbXBvcnRhbnQgY2l0aWVzIGluIHRoZSAgIHByZXNlbnQtZGF5IFB1bmphYiwgUmFqYXN0aGFuLCBIYXJ5YW5hLCBVdHRhciBQcmFkZXNoIGFuZCBCaWhhci4gU28sIHN0YXRlbWVudCAxIGlzICAgbm90IGNvcnJlY3QuICAgKC0pVGhlIFV0dGFyYXBhdGhhIGhhZCBhIG5vcnRoZXJuIGFuZCBhIHNvdXRoZXJuIHNlY3Rvci4gVGhlIG5vcnRoZXJuIHNlY3RvciByYW4gICB0aHJvdWdoIExhaG9yZSwgSmFsYW5kaGFyLCBhbmQgU2FoYXJhbnB1ciwgYWxvbmcgdGhlIEdhbmdldGljIHBsYWlucyB0byBCaWpub3IsIGFuZCAgIHRoZW4gdGhyb3VnaCBHb3Jha2hwdXIsIHRvd2FyZHMgQmloYXIgYW5kIEJlbmdhbC4gVGhlIHNvdXRoZXJuIHNlY3RvciBjb25uZWN0ZWQgICBMYWhvcmUsIFJhaXdpbmQsIEJoYXRpbmRhLCBEZWxoaSwgSGFzdGluYXB1cmEsIEthbnB1ciwgTHVja25vdywgVmFyYW5hc2ksIGFuZCAgIFByYXlhZ3JhaiwgYW5kIHRoZW4gbW92ZWQgb24gdG93YXJkcyBQYXRhbGlwdXRyYSBhbmQgUmFqYWdyaWhhLiAgICgtKURha3NoaW5hcGF0aCBzdHJldGNoZWQgZnJvbSBQYXRsaXB1dHJhIGluIE1hZ2FkaGEgdG8gUHJhdGlzaHRoYW5hIG9uIHRoZSBHb2RhdmFyaSAgIGFuZCB3YXMgYWxzbyBjb25uZWN0ZWQgdG8gcG9ydHMgb24gdGhlIHdlc3Rlcm4gY29hc3QuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKU9uZSBhcnRlcmlhbCByb3V0ZSBjb25uZWN0ZWQgS2F1c2hhbWJpIHdpdGggVWpqYWluIGFuZCBmcm9tIFVqamFpbiBhbm90aGVyIHJvdXRlICAgd2VudCB0byB0aGUgc291dGggY2FsbGVkIGRha3NoaW5hcGF0aGEuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   Join Telegram Channel @cse_updates For More  t.me/cse_updates     7      "
      }
    },
    {
      "index" : 41,
      "question" : "With reference to the Early Vedic Society,  consider the following statements:   1. The society was completely egalitarian.  2. Tribal assemblies were involved in the  selection of the ruler.  3. Indra was the god of strength, who was  invoked to destroy the enemies.  Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEVhcmx5IFZlZGljIHBvbGl0aWNhbCBzdHJ1Y3R1cmU6ICAgICgtKVRoZSB0cmliYWwgcG9saXR5IHdhcyBub3QgY29tcGxldGVseSBlZ2FsaXRhcmlhbi4gQSBkaXZpc2lvbiBpcyBmb3VuZCBpbiB0aGUgUmlndmVkYSAgIGl0c2VsZiwgd2hpY2ggaXMgc2VlbiBpbiByZWZlcmVuY2VzIHRvIHR3byBncm91cHMtdGhlIFJhamFueWFzLCBvciB0aG9zZSB3aG8gZm91Z2h0ICAgdGhlIHdhcnMgYW5kIGFyZSBjcmVkaXRlZCB0byBiZSB0aGUgc2VuaW9yIGxpbmVhZ2UsIGFuZCB0aGUgcmVzdCBvZiB0aGUgY2xhbnNtZW4gb3IgICB0aGUgdmlzLCB3aG8gZm9ybWVkIHRoZSBqdW5pb3IgbGluZWFnZS4gU28sIHN0YXRlbWVudCAxIGlzIG5vdCBjb3JyZWN0LiAgICgtKVRyaWJhbCBhc3NlbWJsaWVzIGUuZy4gdGhlIEdhbmEsIFZpZGF0aGEsIFNhYmhhIGFuZCBTYW1pdGkgYXJlIG1lbnRpb25lZCBpbiB0aGUgICBSaWd2ZWRhLiBUaGVzZSBhc3NlbWJsaWVzIHBlcmZvcm1lZCB0aGUgZnVuY3Rpb25zIG9mIHRoZSBnb3Zlcm5tZW50IGFuZCAgIGFkbWluaXN0cmF0aW9uIGFuZCB3ZXJlIGFsc28gaW52b2x2ZWQgaW4gdGhlIHNlbGVjdGlvbiBvZiB0aGUgcmFqYSBmcm9tIGFtb25nc3QgdGhlICAgY2xhbnNtZW4uIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgIEVhcmx5IFZlZGljIHJlbGlnaW9uOiAgICAoLSlJbmRyYSB3YXMgdGhlIGdvZCBvZiBzdHJlbmd0aCwgd2hvIHdhcyBpbnZva2VkIHRvIGRlc3Ryb3kgdGhlIGVuZW1pZXMuIEhlIHdhcyB0aGUgICBnb2Qgb2YgdGh1bmRlciBhbmQgd2FzIHRoZSByYWlubWFrZXIgd2hvIHdhcyBhc2tlZCBwZXJpb2RpY2FsbHkgdG8gcmVsZWFzZSB0aGUgICB3YXRlci4gU28sIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only   ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : " Consider the following pairs:  Sl.  No.  Stupas  Description  1. Sariraka  stupas  :  Contains bodily  remains of the  Buddha  2. Paribhogika  stupas  : Installed for  fulfilment of a  vow  3. Uddesika  stupas  : Contains the  buried objects  used by Buddha  Which of the pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZXJlIGFyZSB0aHJlZSBtYWpvciB0eXBlcyBvZiBCdWRkaGlzdCBzdHVwYXMsIG5hbWVseSBTYXJpcmFrYSwgUGFyaWJob2dpa2EgYW5kIFVkZGVzaWthLiAgICAoLSlTYXJpcmFrYSBzdHVwYXMgY29udGFpbiBjb3Jwb3JlYWwgcmVsaWNzIChib2RpbHkgcmVtYWlucykgb2YgdGhlIEJ1ZGRoYSBvciBlbWluZW50ICAgQmhpa2todXMgYW5kIEJoaWtraHVuaXMuIFNvLCBwYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pUGFyaWJob2dpa2Egc3R1cGFzIHJldGFpbiB0aGUgb2JqZWN0cyBvciBiZWxvbmdpbmdzIG9mIHRoZSBCdWRkaGEgb3IgZW1pbmVudCAgIEJoaWtraHVzIGFuZCBCaGlra2h1bmlzLiBTbywgcGFpciAyIGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZC4gICAoLSlVZGRlc2lrYSBzdHVwYXMgYXJlIHZvdGl2ZSBzdHVwYXMgdGhhdCB0aGUgZGV2b3V0IGluc3RhbGwgYXMgYW4gYWN0IG9mIHBpZXR5IG9yIGluICAgZnVsZmlsbWVudCBvZiBhIHZvdy4gU28sIHBhaXIgMyBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQuICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 43,
      "question" : "Arrange the following Mahajanapadas from  west to east:  1. Anga  2. Vatsa  3. Avanti  4. Kashi    5. Surasena   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBFeHBsYW5hdGlvbjogICAgICAgICgtKUF2YW50aTogQXZhbnRpIHdhcyBvbmUgb2YgdGhlICAgbW9zdCBwb3dlcmZ1bCAgIE1haGFqYW5hcGFkYXMgaW4gdGhlIDZ0aCAgIGNlbnR1cnkgQi5DLiBUaGUgY29yZSBhcmVhIG9mICAgdGhpcyBraW5nZG9tIHdvdWxkIHJvdWdobHkgICBjb3JyZXNwb25kIHRvIHRoZSBVamphaW4gICBkaXN0cmljdCBvZiBNYWRoeWEgUHJhZGVzaCwgICBleHRlbmRpbmcgdXAgdG8gdGhlIHJpdmVyICAgTmFybWFkYS4gICAgKC0pU3VyYXNlbmE6IFRoZSBTdXJhc2VuYXMgaGFkICAgdGhlaXIgY2FwaXRhbCBhdCBNYXRodXJhIG9uICAgdGhlIGJhbmsgb2YgdGhlIHJpdmVyIFlhbXVuYS4gICBJbiB0aGUgTWFoYWJoYXJhdGEgYW5kIHRoZSBQdXJhbmFzLCB0aGUgcnVsaW5nIGZhbWlseSBvZiBNYXRodXJhIGlzIHJlZmVycmVkIHRvIGFzICAgWWFkdXMuICAgKC0pVmF0c2E6IFZhdHNhIHdpdGggaXRzIGNhcGl0YWwgYXQgS2F1c2FtYmkgd2FzIG9uZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBwcmluY2lwYWxpdGllcyAgIG9mIHRoZSBzaXh0aCBjZW50dXJ5IEIuQy4gS2F1c2FtYmkgaGFzIGJlZW4gaWRlbnRpZmllZCB3aXRoIG1vZGVtIEtvc2FtIG9yIHRoZSByaXZlciAgIFlhbXVuYSBuZWFyIEFsbGFoYWJhZC4gICAoLSlLYXNoaTogT2YgdGhlIHNpeHRlZW4gTWFoYWphbmFwYWRhcywgS2FzaGkgc2VlbXMgdG8gaGF2ZSBiZWVuIHRoZSBtb3N0IHBvd2VyZnVsIGluICAgdGhlIGJlZ2lubmluZy4gSXQgd2FzIGxvY2F0ZWQgaW4gYW5kIGFyb3VuZCB0aGUgcHJlc2VudC1kYXkgVmFyYW5hc2kgZGlzdHJpY3QuICAgICgtKUFuZ2E6IEFuZ2EgY29tcHJpc2VkIHRoZSBkaXN0cmljdHMgb2YgQmhhZ2FscHVyIGFuZCBNdW5nZXIgaW4gQmloYXIuIEl0IG1heSBoYXZlICAgZXh0ZW5kZWQgbm9ydGh3YXJkcyB0byB0aGUgcml2ZXIgS29zaSBhbmQgaW5jbHVkZWQgc29tZSBwYXJ0cyBvZiB0aGUgZGlzdHJpY3Qgb2YgICBQdXJuZWEuICAgICgtKVNvLCB0aGUgY29ycmVjdCBvcmRlciBmcm9tIHdlc3QgdG8gZWFzdCBpcyBBdmFudGksIFN1cmFzZW5hLCBWYXRzYSwgS2FzaGkgYW5kIEFuZ2EuICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5-3-4-1-2  ",
        "option2" : " 3-5-2-4-1  ",
        "option3" : " 1-2-4-3-5  ",
        "option4" : " 3-2-5-1-4  "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements:  1. Buddhism doctrine of Anatta does not  accept the existence of soul and hence  adopts a materialistic worldview.  2. Buddha believed that sensations, mental  formations and consciousness cannot  constitute the self.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUFuYXR0YSBpcyBhIEJ1ZGRoaXN0IGRvY3RyaW5lIHdoaWNoIGRlbmllcyB0aGUgZXhpc3RlbmNlIG9mIGEgc291bCBvciBhdG1hbi4gSG93ZXZlciwgICBhdCB0aGUgc2FtZSB0aW1lIGl0IHJlamVjdGVkIHRoZSBtYXRlcmlhbGlzdGljIHBoaWxvc29waHkuIEl0IGZvbGxvd2VkIHRoZSBtaWRkbGUgcGF0aC4gICBJdCBiZWxpZXZlZCB0aGF0IHRoZSBpZGVhIG9mIGFuIGVnbyBvciBhIHNlbGYgaW4gYW55IHJlbGlnaW9uIGlzIHdpdGggdGhlIGFpbSBvZiBzZWxmLSAgcHJvdGVjdGlvbiBhbmQgc2VsZi1wcmVzZXJ2YXRpb24uIFNlbGYtcHJvdGVjdGlvbiBuZWNlc3NpdGF0ZXMgdGhlIGV4aXN0ZW5jZSBvZiBHb2QsICAgYW5kIHNlbGYtcHJlc2VydmF0aW9uIG5lY2Vzc2l0YXRlcyB0aGUgZXhpc3RlbmNlIG9mIHNlbGYuIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICAoLSlCdWRkaGEgYmVsaWV2ZWQgdGhhdCBzZW5zYXRpb25zLCBtZW50YWwgZm9ybWF0aW9ucywgYW5kIGNvbnNjaW91c25lc3MgY2Fubm90ICAgY29uc3RpdHV0ZSB0aGUgc2VsZiBiZWNhdXNlIGFsbCB0aGVzZSBhcmUgdHJhbnNpZW50LiBIZSBiZWxpZXZlZCBpbiB0aGVzZSB0cmFuc2llbnQgICBzZW5zYXRpb25zIGFuZCBzYWlkIHRoYXQgaXQgaXMgbm90IG5lY2Vzc2FyeSB0byBiZWxpZXZlIHRoYXQgdGhlc2Ugc2Vuc2F0aW9ucyBiZWxvbmcgdG8gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgYSBwZXJtYW5lbnQgc2VsZi4gVGhlIHBoeXNpY2FsIG1hdGVyaWFsIGlzIGltcGVybWFuZW50LCB3aGF0ZXZlciBpcyBpbXBlcm1hbmVudCBpcyAgIHRoZSBjYXVzZSBvZiBzdWZmZXJpbmcsIGFuZCB3aGF0ZXZlciBpcyBzdWZmZXJpbmcgaXMgbm9uLXNlbGYuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 45,
      "question" : "With reference to the Harappan Civilization,  consider the following statements:  1. Harappans used tools made of copper,  bronze and stone.  2. Spearheads and arrowheads were not  found at Harappan sites.   3. All of the Harappan pottery incorporates a  red slip and black painted decoration.   4. Birds, monkeys and cattle are  represented in the terracotta figurines.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEhhcmFwcGFuIFRvb2xzOiAgICAoLSlUaGUgdG9vbHMgYW5kIGltcGxlbWVudHMgdXNlZCBieSB0aGUgSGFyYXBwYW5zIGFsc28gc2hvdyBhIHN0cmlraW5nIGRlZ3JlZSBvZiAgIHVuaWZvcm1pdHkgaW4gZGVzaWducyBhbmQgaW4gdGhlIHRlY2huaXF1ZSBvZiBwcm9kdWN0aW9uLiAgICAoLSlUaGV5IHdlcmUgdXNpbmcgdG9vbHMgbWFkZSBvZiBjb3BwZXIsIGJyb256ZSBhbmQgc3RvbmUuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKVRoZSBiYXNpYyB0b29scyB0eXBlcyB3ZXJlIHRoZSBmbGF0IGF4ZSwgY2hpc2Vscywga25pdmVzLCBzcGVhcmhlYWRzIGFuZCBhcnJvd2hlYWRzICAgZm9yIHRoZSBjb3BwZXIgYW5kIGJyb256ZSBpbXBsZW1lbnRzLiBJbiB0aGUgbGF0ZXIgc3RhZ2VzIG9mIHRoZSBDaXZpbGl6YXRpb24sIHRoZXkgd2VyZSAgIGFsc28gdXNpbmcgZGFnZ2Vycywga25pdmVzIGFuZCBmbGF0IHRhbmdzLiBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgSGFyYXBwYW4gcG90dGVyeTogICAoLSlNb3N0IG9mIHRoZSBIYXJhcHBhbiBwb3R0ZXJ5IGlzIHBsYWluLCBidXQgYSBzdWJzdGFudGlhbCBwYXJ0IGlzIHRyZWF0ZWQgd2l0aCBhIHJlZCBzbGlwICAgYW5kIGJsYWNrIHBhaW50ZWQgZGVjb3JhdGlvbi4gU28sIHN0YXRlbWVudCAzIGlzIG5vdCBjb3JyZWN0LiAgICgtKVRoZSBwYWludGVkIGRlY29yYXRpb25zIGNvbnNpc3Qgb2YgaG9yaXpvbnRhbCB0aW5lcyBvZiB2YXJpZWQgdGhpY2tuZXNzLCBsZWFmIHBhdHRlcm5zLCAgIHNjYWxlcywgY2hlcXVlcnMsIHBhbG0gYW5kIHBpcGFsIHRyZWVzLiBCaXJkcywgZmlzaGVzIGFuZCBhbmltYWxzIGFyZSBhbHNvIHNob3duLiAgICBUZXJyYWNvdHRhIGZpZ3VyaW5lczogICAoLSlUZXJyYWNvdHRhIGZpZ3VyaW5lcyBoYXZlIGJlZW4gZm91bmQgaW4gbGFyZ2UgbnVtYmVycyBmcm9tIHRoZSBIYXJhcHBhbiAgIHNldHRsZW1lbnRzLiBUaGV5IHdlcmUgdXNlZCBhcyB0b3lzIG9yIGN1bHQgZmlndXJlcy4gICAgKC0pQSB2YXJpZXR5IG9mIGJpcmRzLCBtb25rZXlzLCBkb2dzLCBzaGVlcCBhbmQgY2F0dGxlIGFyZSByZXByZXNlbnRlZCBpbiB0aGVzZSBmb3JtcyAgIGFsb25nIHdpdGggaHVtcGVkIGFuZCBodW1wbGVzcyBidWxscy4gU28sIHN0YXRlbWVudCA0IGlzIGNvcnJlY3QuICAgKC0pQSBsYXJnZSBudW1iZXIgb2YgbWFsZSBhbmQgZmVtYWxlIGZpZ3VyaW5lcyBoYXZlIGFsc28gYmVlbiBmb3VuZC4gICAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1, 3 and 4 only   ",
        "option3" : " 1 and 4 only  ",
        "option4" : " 2, 3 and 4 only   "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to Satavahanas, consider the  following statements:   1. Gautamiputra Satakarni was the founder  of the Satavahana Dynasty.  2. Land donations by them to Buddhists led  to the development of land-based social  hierarchy in the society.  3. Many inscriptions of the Satavahana  rulers mention the names of their mothers  rather than their fathers.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVNhdGF2YWhhbmFzIGVzdGFibGlzaGVkIGEgcG93ZXJmdWwga2luZ2RvbSBpbiB0aGUgZmlyc3QgY2VudHVyeSBCQ0UgaW4gdGhlIERlY2NhbiAgIHJlZ2lvbi4gVGhleSBydWxlZCBvdmVyIHBhcnRzIG9mIEFuZGhyYSwgTWFoYXJhc2h0cmEsIEthcm5hdGFrYSBhbmQgTWFkaHlhICAgUHJhZGVzaC4gICAoLSlBY2NvcmRpbmcgdG8gUHVyYW5hIHRyYWRpdGlvbiwgaXQgd2FzIFNpbXVrYSBTYXRhdmFoYW5hIHdobyBlc3RhYmxpc2hlZCBTYXRhdmFoYW5hICAgcG93ZXIuIEdhdXRhbWlwdXRyYSBTYXRha2Fybmkgd2FzIHRoZSBncmVhdGVzdCBvZiB0aGUgU2F0YXZhaGFuYSBraW5ncy4gSGUgZGVmZWF0ZWQgICB0aGUgU2hha2EgcnVsZXIgTmFoYXBhbmEgYW5kIHJlaXNzdWVkIHRoZSBjb2lucyBvZiBOYWhhcGFuYSB3aXRoIGhpcyBvd24gcm95YWwgICBpbnNpZ25pYS4gVGhlIGluc2NyaXB0aW9uIG9mIGhpcyBtb3RoZXIgR2F1dGFtaSBCYWxhc2hyaSBhdCBOYXNoaWsgbWVudGlvbnMgaGltIGFzICAgdGhlIGNvbnF1ZXJvciBvZiB0aGUgU2hha2FzLCBQYWhsYXZhcywgYW5kIFlhdmFuYXMuIEhlIGlzIGFsc28gc2FpZCB0byBoYXZlIHBlcmZvcm1lZCAgIHRoZSBwcmVzdGlnaW91cyBWZWRpYyBBc2h2YW1lZGhhIHNhY3JpZmljZS4gU28sIHN0YXRlbWVudCAxIGlzIG5vdCBjb3JyZWN0LiAgICgtKU9mZmVyaW5nIGxhbmQgZ3JhbnRzIHdhcyBhbiBpbXBvcnRhbnQgZGV2ZWxvcG1lbnQgb2YgdGhlIFNhdGF2YWhhbmEgdGltZXMuIFRoZSAgIGJlbmVmaWNpYXJpZXMgb2YgdGhlc2UgZ3JhbnRzIHdlcmUgbW9zdGx5IEJ1ZGRoaXN0cyBhbmQgQnJhaG1pbnMuIFRoZSBOYW5lZ2hhdCAgIGluc2NyaXB0aW9uIHJlZmVycyB0byB0YXggZXhlbXB0aW9ucyBnaXZlbiB0byB0aGUgbGFuZHMgZ3JhbnRlZCB0byBCdWRkaGlzdCBtb25rcy4gICBUaGlzIGxlZCB0byB0aGUgYmVnaW5uaW5nIG9mIHByaWVzdGx5IGdyb3VwcyBhdHRhaW5pbmcgaGlnaGVyIHN0YXR1cy4gVGhlc2UgbGFuZCAgIGRvbmF0aW9ucyBjcmVhdGVkIGEgZ3JvdXAgb2YgcGVvcGxlIHdobyBkaWQgbm90IGN1bHRpdmF0ZSwgYnV0IG93bmVkIGxhbmQuIFRoaXMgbGVkICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIHRvIHRoZSBkZXZlbG9wbWVudCBvZiBsYW5kLWJhc2VkIHNvY2lhbCBoaWVyYXJjaHkgYW5kIGRpdmlzaW9ucyBpbiB0aGUgc29jaWV0eS4gU28sICAgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlUaGUgc29jaWFsIHN0cnVjdHVyZSBvZiB0aGUgRGVjY2FuIHVuZGVyIHRoZSBTYXRhdmFoYW5hcyBzaG93cyBtYW55IGZlYXR1cmVzIHdoaWNoICAgYXJlIGRpZmZlcmVudCBmcm9tIHRob3NlIHByZXNjcmliZWQgaW4gdGhlIFNhbnNrcml0IHRleHRzICAgc3VjaCBhcyB0aGUgTWFudXNtcml0aS4gRm9yIGV4YW1wbGUsIG1hbnkgaW5zY3JpcHRpb25zIG9mICAgdGhlIFNhdGF2YWhhbmEgcnVsZXJzIG1lbnRpb24gdGhlIG5hbWVzIG9mIHRoZWlyIG1vdGhlcnMgICByYXRoZXIgdGhhbiB0aG9zZSBvZiB0aGVpciBmYXRoZXJzLCBzdWNoIGFzIEdhdXRhbWlwdXRyYSAgIFNhdGFrYXJuaS4gVGhpcyBpcyBub3QgaW4ga2VlcGluZyB3aXRoIHRoZSBEaGFybWFzYXN0cmFzICAgd2hpY2ggc3RhdGUgdGhhdCBpbiB0aGUgYXBwcm92ZWQgZm9ybXMgb2YgbWFycmlhZ2UgdGhlICAgYnJpZGUgYWNxdWlyZXMgdGhlIGdvdHJhIG9mIGhlciBodXNiYW5kIGFuZCBsb3NlcyB0aGF0IG9mICAgdGhlIGZhdGhlci4gVGhlIG90aGVyIGludGVyZXN0aW5nIGZlYXR1cmUgb2YgdGhlIGluc2NyaXB0aW9ucyAgIGlzIHRoYXQgdGhlIFNhdGF2YWhhbmFzIHJlZmVyIHRvIHRoZW1zZWx2ZXMgYXMgdW5pcXVlICAgQnJhaG1hbmFzIHdobyBjcnVzaGVkIHRoZSBwcmlkZSBvZiB0aGUgS3NoYXRyaXlhcy4gU28sICAgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 3 only   Join Telegram Channel @cse_updates For More  t.me/cse_updates     8       "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the pre-historic cave  paintings, consider the following statements:  1. At Lakhudiyar caves, humans are  represented in stick-like forms.  2. The Bhimbetka caves include the paintings  depicting mundane events of daily life as  well as sacred images.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUZpcnN0IGRpc2NvdmVyeSBvZiByb2NrIHBhaW50aW5ncyB3YXMgbWFkZSBpbiBJbmRpYSBpbiAxODY3LTY4IGJ5IGFuIGFyY2hhZW9sb2dpc3QsICAgQXJjaGlib2xkIENhcmxsZXlsZSwgdHdlbHZlIHllYXJzIGJlZm9yZSB0aGUgZGlzY292ZXJ5IG9mIEFsdGFtaXJhIGluIFNwYWluLiAgICAoLSlUaGUgcm9jayBzaGVsdGVycyBvbiBiYW5rcyBvZiB0aGUgUml2ZXIgU3V5YWwgYXQgTGFraHVkaXlhciBiZWFyIHRoZXNlIHByZWhpc3RvcmljICAgcGFpbnRpbmdzLiBMYWtodWRpeWFyIGxpdGVyYWxseSBtZWFucyBvbmUgbGFraCBjYXZlcy4gSHVtYW5zIGFyZSByZXByZXNlbnRlZCBpbiBzdGljay0gIGxpa2UgZm9ybXMuIFRoZXJlIGlzIHNvbWUgc3VwZXJpbXBvc2l0aW9uIG9mIHBhaW50aW5ncy4gVGhlIGVhcmxpZXN0IGFyZSBpbiBibGFjazsgb3ZlciAgIHRoZXNlIGFyZSByZWQgb2NocmUgcGFpbnRpbmdzIGFuZCB0aGUgbGFzdCBncm91cCBjb21wcmlzZXMgd2hpdGUgcGFpbnRpbmdzLiBTbywgICBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICAoLSlUaGUgdGhlbWVzIG9mIHBhaW50aW5ncyBmb3VuZCBhdCBCaGltYmV0a2EgYXJlIG9mIGdyZWF0IHZhcmlldHksIHJhbmdpbmcgZnJvbSAgIG11bmRhbmUgZXZlbnRzIG9mIGRhaWx5IGxpZmUgaW4gdGhvc2UgdGltZXMgdG8gc2FjcmVkIGFuZCByb3lhbCBpbWFnZXMuIFRoZXNlIGluY2x1ZGUgICBodW50aW5nLCBkYW5jaW5nLCBtdXNpYywgaG9yc2UgYW5kIGVsZXBoYW50IHJpZGVycywgYW5pbWFsIGZpZ2h0aW5nLCBob25leSBjb2xsZWN0aW9uLCAgIGRlY29yYXRpb24gb2YgYm9kaWVzLCBhbmQgb3RoZXIgaG91c2Vob2xkIHNjZW5lcy4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following are the features of the  Nagara style of Temple Architecture?  1. Panchayatan style of temple making  2. Presence of assembly halls in front of the  principal shrine  3. Presence of water tanks or reservoirs in the  temple premises  4. Covered ambulatory passageway around  the sanctum sanctorum  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUZyb20gNXRoIGNlbnR1cnkgQUQgb253YXJkcywgYSBkaXN0aW5jdCBzdHlsZSBvZiB0ZW1wbGUgYXJjaGl0ZWN0dXJlIGRldmVsb3BlZCBpbiAgIHRoZSBOb3J0aGVybiBwYXJ0IG9mIEluZGlhLCBrbm93biBhcyB0aGUgTmFnYXJhIFN0eWxlIG9mIEFyY2hpdGVjdHVyZS4gU29tZSBvZiB0aGUgICBmZWF0dXJlcyBvZiB0aGUgTmFnYXJhIHN0eWxlIGFyZTogICAoLSlUaGUgdGVtcGxlcyBnZW5lcmFsbHkgZm9sbG93ZWQgdGhlIFBhbmNoYXlhdGFuIHN0eWxlIG9mIHRlbXBsZSBtYWtpbmcsIHdoaWNoICAgY29uc2lzdGVkIG9mIHN1YnNpZGlhcnkgc2hyaW5lcyBsYWlkIG91dCBpbiBhIGNydWNpZmllZCBncm91bmQgcGxhbiB3aXRoIHJlc3BlY3QgdG8gdGhlICAgcHJpbmNpcGFsIHNocmluZS4gU28sIHBvaW50IDEgaXMgY29ycmVjdC4gICAgKC0pUHJlc2VuY2Ugb2YgYXNzZW1ibHkgaGFsbHMgb3IgbWFuZGFwcyBpbiBmcm9udCBvZiB0aGUgcHJpbmNpcGFsIHNocmluZS4gU28sIHBvaW50IDIgaXMgICBjb3JyZWN0LiAgICAoLSlPdXRzaWRlIHRoZSBnYXJiaGFncmloYSwgaW1hZ2VzIG9mIHRoZSByaXZlciBnb2RkZXNzZXMgR2FuZ2EgYW5kIFlhbXVuYSB3ZXJlICAgcGxhY2VkLiAgICgtKUdlbmVyYWxseSwgdGhlcmUgd2VyZSBubyB3YXRlciB0YW5rcyBvciByZXNlcnZvaXJzIHByZXNlbnQgb24gdGhlIHRlbXBsZSBwcmVtaXNlcy4gICBTbywgcG9pbnQgMyBpcyBub3QgY29ycmVjdC4gICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgICgtKVRoZSB0ZW1wbGVzIHdlcmUgZ2VuZXJhbGx5IGJ1aWx0IG9uIHVwcmFpc2VkIHBsYXRmb3Jtcy4gICAgKC0pVGhlIHBvcnRpY29zIGhhZCBhIHBpbGxhcmVkIGFwcHJvYWNoLiAgICgtKVRoZSBhbWJ1bGF0b3J5IHBhc3NhZ2V3YXkgb3IgdGhlIHByYWRha3NoaW5hIHBhdGggYXJvdW5kIHRoZSBzYW5jdHVtIHNhbmN0b3J1bSAgIHdhcyBjb3ZlcmVkLiBTbywgcG9pbnQgNCBpcyBjb3JyZWN0LiAgICAoLSlHZW5lcmFsbHksIHRoZSB0ZW1wbGUgcHJlbWlzZXMgZGlkIG5vdCBoYXZlIGVsYWJvcmF0ZSBib3VuZGFyeSB3YWxscyBvciBnYXRld2F5cy4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1, 3 and 4 only  ",
        "option3" : " 1, 2 and 4 only  ",
        "option4" : " 2, 3 and 4 only   "
      }
    },
    {
      "index" : 49,
      "question" : "Who amongst the following were the chief  patrons of Gandhara school of art?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUdhbmRoYXJhIGlzIGxvY2F0ZWQgaW4gdGhlIG5vcnRoLXdlc3Rlcm4gcGFydCBvZiB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQgb24gYm90aCAgIGJhbmtzIG9mIEZpdmVyIEluZHVzLiBJdCBpbmNsdWRlZCB0aGUgdmFsbGV5IG9mIFBlc2hhd2FyLCBTdmF0YSwgQnVuZXIgYW5kIEJhampvcmEuIER1ZSAgIHRvIGl0cyBsb2NhdGlvbiwgaXQgaGFzIGJlZW4gYSBzdWJqZWN0IG9mIG11bHRpcGxlIGludmFzaW9ucy4gQXMgYSByZXN1bHQsIHRoaXMgcGxhY2UgICBwcm9kdWNlZCBhIG1peGVkIGN1bHR1cmUuICAgICgtKUdhbmRoYXJhIGFydCwgd2hpY2ggd2FzIG1haW5seSBCdWRkaGlzdCwgd2FzIHByb2ZvdW5kbHkgaW5mbHVlbmNlZCBieSBIZWxsZW5pc3RpYyAgIGFydC4gRm9yIGV4YW1wbGUgdGhlIGRlcGljdGlvbiBvZiB0cmFuc3BhcmVudCBnYXJtZW50IGRyYXBlZCBpbiBHcmFlY28gLSBSb21hbiAgIGZhc2hpb24gYW5kIHZhcnkgY3VybHkgaGFpciBpbiBCdWRkaGEgaWRvbHMuICAgKC0pVGhlIG1haW4gY2VudGVycyBmcm9tIHdoZXJlIHRoZSBhcnQgcGllY2VzIG9mIEdhbmRoYXJhIFNjaG9vbCBoYXZlIGJlZW4gZm91bmQgYXJlICAgQXJ0IGFuZCBBcmNoaXRlY3R1cmUgSmFsYWxhYmFkLCBIYWRkYSwgQmFtYXJhbiwgQmVncmFtIGFuZCBUYXhpbGEuICAgKC0pVGhlIGNoaWVmIHBhdHJvbnMgb2YgR2FuZGhhcmEgYXJ0IHdlcmUgdGhlIFNha2FzIGFuZCB0aGUgS3VzaGFuYXMuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Sakas and Kushanas  ",
        "option2" : " Guptas and Mauryas  ",
        "option3" : " Kushanas and Pallavas  ",
        "option4" : " Hunas and Mauryas   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following pairs:  Sl.  No.  Texts  Author  1.  1.   Vikramorvasiyam : Bhavabhuti  2.  2. Mahabhashya : Patanjali  3.  3. Malavikagnimitram : Kalidasa  4.   4. Harshacharita : Banabhatta  How many pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVZpa3JhbW9ydmFzaXlhbSBhbmQgTWFsYXZpa2FnbmltaXRyYW0gYXJlIFNhbnNrcml0IHBsYXlzIGJ5IGFuY2llbnQgSW5kaWFuIHBvZXQgICBLYWxpZGFzYS4gS2FsaWRhc2EncyB3b3JrcyBtYWlubHkgaW5jbHVkZSB0aHJlZSBkcmFtYXMsIG5hbWVseSAnTWFsYXZpa2FnbmltaXRyYScsICAgJ1Zpa3JhbW9ydmHFm8SreWFtJywgJ0FiaGlqw7FhbmHFm2FrdW50YWxhbSc7IHR3byBlcGljcywgbmFtZWx5ICdLdW1hcmFzYeG5g2JoYXZhbScgICBhbmQgJ1JhZ2h1dmHhuYPFm2HhuYMnOyBhbmQgdHdvIG1pbm9yIHBvZW1zIChraGHhuYfhuI1ha2F2eWEpLCBuYW1lbHkgJ01lZ2hhZMWrdGFtJyAgIGFuZCAn4bmadHVzYeG5g2hhcmFtJy4gU28sIHBhaXIgMSBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQgYW5kIHBhaXIgMyBpcyBjb3JyZWN0bHkgICBtYXRjaGVkLiAgICgtKU1haGFiaGFzaHlhLCBhdHRyaWJ1dGVkIHRvIFBhdGHDsWphbGksIGlzIGEgY29tbWVudGFyeSBvbiBzZWxlY3RlZCBydWxlcyBvZiBTYW5za3JpdCAgIGdyYW1tYXIgZnJvbSBQYeG5h2luaSdzIHRyZWF0aXNlLCB0aGUgQeG5o+G5rWFkaHlhecSrLCBhcyB3ZWxsIGFzIEthdHlheWFuYSdzIFZhcnR0aWthLXPFq3RyYSwgICBhbiBlbGFib3JhdGlvbiBvZiBQYeG5h2luaSdzIGdyYW1tYXIuIEl0IGlzIGRhdGVkIHRvIHRoZSAybmQgY2VudHVyeSBCQ0UuIFRoZSBlYXJsaWVzdCAgIEluZGlhbiB0ZXh0dWFsIHJlZmVyZW5jZSB0byB0aGUgU2FrYXMgaXMgcGVyaGFwcyB0byBiZSBmb3VuZCBpbiB0aGUgTWFoYWJoYXNoeWEuIFNvLCAgIHBhaXIgMiBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gICAoLSlUaGUgSGFyc2hhY2hhcml0YSBpcyB0aGUgYmlvZ3JhcGh5IG9mIEluZGlhbiBFbXBlcm9yIEhhcnNoYSBieSBCYW5hYmhhdHRhLCBhbHNvICAga25vd24gYXMgQmFuYS4gQmFuYSBoYXMgd3JpdHRlbiBvdGhlciBub3ZlbHMgbGlrZSBLYWRhbWJhcmksIENoYW5kaWthc2F0YWthIGFuZCAgIFBhcnZhdGlwYXJpbmF5YS4gIFNvLCBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgU28sIG9ubHkgdGhyZWUgcGFpcnMgYXJlIGNvcnJlY3RseSBtYXRjaGVkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair   ",
        "option2" : " Only two pairs  ",
        "option3" : " Only three pairs  ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements:  1. Chaityas were shrines built exclusively for  the worship of lord Buddha.  2. Viharas were primarily cut out of rocks for  the residence of monks.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlBIGNoYWl0eWEgaXMgYSBzaHJpbmUgY2VsbCB3aXRoIGEgdm90aXZlIFN0dXBhIHBsYWNlZCBpbiB0aGUgY2VudHJlLiBUaGV5IGhhdmUgYSBsb25nICAgcmVjdGFuZ3VsYXIgaGFsbCBlbmRpbmcgaW4gYSBzZW1pLWNpcmNsZSBhdCB0aGUgcmVhciBlbmQuIFRoZSBoYWxsIGhhcyBhIGJhcnJlbC12YXVsdGVkICAgY2VpbGluZy4gVGhlIGRvb3J3YXkgaXMgdXN1YWxseSBwbGFjZWQgZmFjaW5nIHRoZSB2b3RpdmUgU3R1cGEuIEJvdGggdGhlIEJ1ZGRoaXN0cyBhbmQgICB0aGUgSmFpbmFzIGJ1aWx0IENoYWl0eWFzIGFuZCBWaWhhcmFzIGFzIHBsYWNlcyBvZiB3b3JzaGlwLiBTbywgc3RhdGVtZW50IDEgbm90IGlzICAgY29ycmVjdC4gICAoLSlWaWhhcmFzIHdlcmUgcHJpbWFyaWx5IGN1dCBvdXQgb2Ygcm9ja3MgZm9yIHRoZSByZXNpZGVuY2Ugb2YgbW9ua3MuIFRoZSBjZWxscyBhbmQgaGFsbHMgICBhcmUgdXN1YWxseSBwcm92aWRlZCB3aXRoIHJhaXNlZCBiZW5jaGVzIGZvciB0aGUgdXNlIG9mIG1vbmtzLiAgU28sIHN0YXRlbWVudCAyIGlzICAgY29ycmVjdC4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 52,
      "question" : "Consider the following statements with  reference to Indus Valley art:  1. The pottery consisted of both wheel-made  and hand-made ware.  2. Seals were produced for commercial  purposes.  3. Statues made of stone, bronze and  terracotta are found in Harappan sites.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgKC0pVGhlIEluZHVzIFZhbGxleSBwb3R0ZXJ5IGNvbnNpc3RzIGNoaWVmbHkgb2YgdmVyeSBmaW5lIHdoZWVsLW1hZGUgd2FyZXMsIHZlcnkgZmV3ICAgYmVpbmcgaGFuZC1tYWRlLiBQbGFpbiBwb3R0ZXJ5IGlzIG1vcmUgY29tbW9uIHRoYW4gcGFpbnRlZCB3YXJlLiBQbGFpbiBwb3R0ZXJ5IGlzICAgZ2VuZXJhbGx5IG9mIHJlZCBjbGF5LCB3aXRoIG9yIHdpdGhvdXQgYSBmaW5lIHJlZCBvciBncmV5IHNsaXAuIEl0IGluY2x1ZGVzIGtub2JiZWQgd2FyZSwgICBvcm5hbWVudGVkIHdpdGggcm93cyBvZiBrbm9icy4gVGhlIGJsYWNrIHBhaW50ZWQgd2FyZSBoYXMgYSBmaW5lIGNvYXRpbmcgb2YgcmVkIHNsaXAgICBvbiB3aGljaCBnZW9tZXRyaWMgYW5kIGFuaW1hbCBkZXNpZ25zIGFyZSBleGVjdXRlZCBpbiBnbG9zc3kgYmxhY2sgcGFpbnQuIFNvLCAgIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICAgKC0pVGhlIHB1cnBvc2Ugb2YgcHJvZHVjaW5nIHNlYWxzIHdhcyBtYWlubHkgY29tbWVyY2lhbCBkdXJpbmcgdGhlIEluZHVzIFZhbGxleSAgIENpdmlsaXNhdGlvbi4gSXQgYXBwZWFycyB0aGF0IHRoZSBzZWFscyB3ZXJlIGFsc28gdXNlZCBhcyBhbXVsZXRzLCBjYXJyaWVkIG9uIHRoZSBwZXJzb25zICAgb2YgdGhlaXIgb3duZXJzLCBwZXJoYXBzIGFzIG1vZGVybi1kYXkgaWRlbnRpdHkgY2FyZHMuIFRoZSBzdGFuZGFyZCBIYXJhcHBhbiBzZWFsICAgd2FzIGEgc3F1YXJlIHBsYXF1ZSAyw5cyIHNxdWFyZSBpbmNoZXMsIG1hZGUgZnJvbSBzdGVhdGl0ZS4gRXZlcnkgc2VhbCBpcyBlbmdyYXZlZCBpbiAgIGEgcGljdG9ncmFwaGljIHNjcmlwdC4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgKC0pU3RhdHVlcyB3aGV0aGVyIGluIHN0b25lLCBicm9uemUgb3IgdGVycmFjb3R0YSBmb3VuZCBpbiBIYXJhcHBhbiBzaXRlcyBhcmUgbm90ICAgYWJ1bmRhbnQsIGJ1dCByZWZpbmVkLiBUaGUgc3RvbmUgc3RhdHVhcmllcyBmb3VuZCBhdCBIYXJhcHBhIGFuZCBNb2hlbmpvZGFybyBhcmUgICBleGNlbGxlbnQgZXhhbXBsZXMgb2YgaGFuZGxpbmcgdGhyZWUtZGltZW5zaW9uYWwgdm9sdW1lcy4gRXhhbXBsZTogVHdvIG1hbGUgICBmaWd1cmVzIGluIHN0b25lLW9uZSBpcyBhIHRvcnNvIGluIHJlZCBzYW5kc3RvbmUgYW5kIHRoZSBvdGhlciBpcyBhIGJ1c3Qgb2YgYSBiZWFyZGVkLiAgIFNvLCBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following statements with  reference to Mauryan art:  1. Lion capital at Sarnath was built in  commemoration of Lord Buddha's  mahaparinirvana.  2. At Dhauli in Odisha, there is a sculpture  depicting the front half of an elephant  carved in rock.  3. Lomas Rishi cave was donated by  Bindusara to the Ajivika sect.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUaGUgTWF1cnlhbiBwaWxsYXIgY2FwaXRhbCBmb3VuZCBhdCBTYXJuYXRoICAgcG9wdWxhcmx5IGtub3duIGFzIHRoZSBMaW9uIENhcGl0YWwgICBzeW1ib2xpc2VzIERoYW1tYWNoYWtyYXByYXZhcnRhbmEgKHRoZSAgIGZpcnN0IHNlcm1vbiBieSB0aGUgQnVkZGhhKS4gSXQgaXMgYWxzbyBvdXIgICBuYXRpb25hbCBlbWJsZW0uIEl0IHNob3dzIHZvbHVtaW5vdXMgICByb2FyaW5nIGxpb24gZmlndXJlcyBmaXJtbHkgc3RhbmRpbmcgb24gYSAgIGNpcmN1bGFyIGFiYWN1cyB3aGljaCBpcyBjYXJ2ZWQgd2l0aCB0aGUgICBmaWd1cmVzIG9mIGEgaG9yc2UsIGEgYnVsbCwgYSBsaW9uIGFuZCBhbiAgIGVsZXBoYW50IGluIHZpZ29yb3VzIG1vdmVtZW50LiBTbywgc3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QuICAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlNb251bWVudGFsIHJvY2stY3V0IGVsZXBoYW50IGF0IERoYXVsaSBpbiBPZGlzaGEgc2hvd3MgbW9kZWxsaW5nIGluIHJvdW5kIHdpdGggICBsaW5lYXIgcmh5dGhtLiBJdCBhbHNvIGhhcyBBc2hva2FuIHJvY2stZWRpY3QuIFRoZSBlZGljdHMgYXJlIGVuZ3JhdmVkIG9uIGEgbGFyZ2UgcGllY2UgICBvZiByb2NrLCB3cml0dGVuIGluIFBhbGkuIEl0IGlzIGxvY2F0ZWQgbmVhciB0aGUgaGlzdG9yaWNhbCBzaWdodCBvZiB0aGUgS2FsaW5nYSB3YXIuIFNvLCAgIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgKC0pVGhlIHJvY2stY3V0IGNhdmUgY2FydmVkIGF0IEJhcmFiYXIgaGlsbHMgbmVhciBHYXlhIGluIEJpaGFyIGlzIGtub3duIGFzIHRoZSBMb21hcyAgIFJpc2hpIGNhdmUuIFRoZSBmYWNhZGUgb2YgdGhlIGNhdmUgaXMgZGVjb3JhdGVkIHdpdGggdGhlIHNlbWktY2lyY3VsYXIgY2hhaXR5YSBhcmNoIGFzICAgdGhlIGVudHJhbmNlLiBUaGUgZWxlcGhhbnQgZnJpZXplIGNhcnZlZCBpbiBoaWdoIHJlbGllZiBvbiB0aGUgY2hhaXR5YSBhcmNoIHNob3dzICAgY29uc2lkZXJhYmxlIG1vdmVtZW50LiBUaGUgaW50ZXJpb3IgaGFsbCBvZiB0aGlzIGNhdmUgaXMgcmVjdGFuZ3VsYXIgd2l0aCBhIGNpcmN1bGFyICAgY2hhbWJlciBhdCB0aGUgYmFjay4gVGhlIGVudHJhbmNlIGlzIGxvY2F0ZWQgb24gdGhlIHNpZGUgd2FsbCBvZiB0aGUgaGFsbC4gVGhlIGNhdmUgd2FzICAgZG9uYXRlZCBieSBBc2hva2EgZm9yIHRoZSBBaml2aWthIHNlY3QuIFNvLCBzdGF0ZW1lbnQgMyBpcyBub3QgY29ycmVjdC4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 3 only  ",
        "option4" : " 2 and 3 only   Join Telegram Channel @cse_updates For More  t.me/cse_updates     9      "
      }
    },
    {
      "index" : 54,
      "question" : "The Rudreshwara temple was recently  inscribed in the UNESCO World Heritage List.  Which of the following statements are correct  regarding the Rudreshwara or Ramappa  temple?  1. It was built by the rulers of the Chalukya  dynasty.  2. It is located in Karnataka.   3. The lower part of the temple is red  sandstone while the white gopuram is  built with light bricks.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBSdWRyZXNod2FyYSB0ZW1wbGUgd2FzIGNvbnN0cnVjdGVkICAgaW4gMTIxMyBBRCBkdXJpbmcgdGhlIHJlaWduIG9mIHRoZSBLYWthdGl5YSAgIEVtcGlyZSBieSBSZWNoYXJsYSBSdWRyYSwgYSBnZW5lcmFsIG9mICAgS2FrYXRpeWEga2luZyBHYW5hcGF0aSBEZXZhLiBJdCBoYXMgYmVlbiAgIGluc2NyaWJlZCBvbiBVTkVTQ08ncyBXb3JsZCBIZXJpdGFnZSBsaXN0LiAgIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICAoLSlJdCBpcyBsb2NhdGVkIGF0IFBhbGFtcGV0LCBNdWx1Z3UgZGlzdHJpY3QsICAgbmVhciBXYXJhbmdhbCBpbiB0aGUgc3RhdGUgb2YgVGVsYW5nYW5hLiAgIFRoZSBwcmVzaWRpbmcgZGVpdHkgaGVyZSBpcyBSYW1hbGluZ2Vzd2FyYSBTd2FteS4gSXQgaXMgYWxzbyBrbm93biBhcyB0aGUgUmFtYXBwYSAgIHRlbXBsZSwgYWZ0ZXIgdGhlIHNjdWxwdG9yIHdobyBleGVjdXRlZCB0aGUgd29yayBpbiB0aGUgdGVtcGxlIGZvciA0MCB5ZWFycy4gU28sICAgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgKC0pVGhlIGZvdW5kYXRpb24gaXMgYnVpbHQgd2l0aCB0aGUgJ3NhbmRib3ggdGVjaG5pcXVlJywgdGhlIGZsb29yaW5nIGlzIGdyYW5pdGUgYW5kIHRoZSAgIHBpbGxhcnMgYmFzYWx0LiBUaGUgbG93ZXIgcGFydCBvZiB0aGUgdGVtcGxlIGlzIHJlZCBzYW5kc3RvbmUgd2hpbGUgdGhlIHdoaXRlIGdvcHVyYW0gICBpcyBidWlsdCB3aXRoIGxpZ2h0IGJyaWNrcyB0aGF0IHJlcG9ydGVkbHkgZmxvYXQgb24gd2F0ZXIuIFRoZSBidWlsZGluZyBmZWF0dXJlcyAgIGRlY29yYXRlZCBiZWFtcyBhbmQgcGlsbGFycyBvZiBjYXJ2ZWQgZ3Jhbml0ZSBhbmQgZG9sZXJpdGUgd2l0aCBhIGRpc3RpbmN0aXZlIGFuZCAgIHB5cmFtaWRhbCBWaW1hbmEgKGhvcml6b250YWxseSBzdGVwcGVkIHRvd2VyKSBtYWRlIG9mIGxpZ2h0d2VpZ2h0IHBvcm91cyBicmlja3MsICAgc28tY2FsbGVkICdmbG9hdGluZyBicmlja3MnLCB3aGljaCByZWR1Y2VkIHRoZSB3ZWlnaHQgb2YgdGhlIHJvb2Ygc3RydWN0dXJlcy4gU28sICAgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlbGV2YW5jZTogVGVsYW5nYW5hIGdvdCB0aGUgc2Vjb25kIFVORVNDTyByZWNvZ25pdGlvbiB0aGlzIHllYXIuIFRoZSBmaXJzdCBvbmUgd2FzICAgUmFtYXBwYSB0ZW1wbGUgdGhhdCB3YXMgaW5zY3JpYmVkIGluIHRoZSBVTkVTQ08gbGlzdCBvZiB3b3JsZCBoZXJpdGFnZSBzaXRlcyBhbmQgbGF0ZXIgICBUZWxhbmdhbmEncyBXYXJhbmdhbCBqb2luZWQgVU5FU0NPIEdsb2JhbCBOZXR3b3JrIG9mIExlYXJuaW5nIENpdGllcy4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 55,
      "question" : "With reference to the later Vedic period,  consider the following statements:   1. Mixed farming that included cultivation  and herding was practiced during this  period.  2. Tribal identity of the Early Vedic society  gradually gave way to territorial identity.   3. The sabha became more important than  the samiti during this period.   4. People practiced gotra exogamy where  marriages could not take place between  couples belonging to the same gotra.   Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBsYXRlciBWZWRpYyB0ZXh0cyBtZW50aW9uIFZyaWhpLCBUYW5kdWxhIGFuZCBTYWxpIGFsbCBkZW5vdGluZyByaWNlLiBJdCBhcHBlYXJzIHRoYXQgICBjcm9wcGluZyB3YXMgcHJhY3RpY2VkIG5vdyBhbmQgdGhlIGZpZWxkcyBncmV3IGJvdGggYmFybGV5IGFuZCByaWNlLiBNaXhlZCBmYXJtaW5nICAgd2hpY2ggaW5jbHVkZWQgY3VsdGl2YXRpb24gYW5kIGhlcmRpbmcgd2FzIHRoZSBvY2N1cGF0aW9uYWwgbm9ybSBvZiB0aGlzIHBlcmlvZC4gICBBZ3JpY3VsdHVyYWwgYWN0aXZpdGllcyBpbiB0aGlzIHBoYXNlIHdlcmUgbm90IGxhYm91ciBpbnRlbnNpdmUuIFNvLCBzdGF0ZW1lbnQgMSBpcyAgIGNvcnJlY3QuICAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAoLSlUcmliYWwgaWRlbnRpdHkgb2YgdGhlIEVhcmx5IFZlZGljIHNvY2lldHkgZ3JhZHVhbGx5IGdhdmUgd2F5IHRvIHRlcnJpdG9yaWFsIGlkZW50aXR5IGFuZCAgIGNvbnNlcXVlbnRseSB0aGUgbmF0dXJlIG9mIGNoaWVmc2hpcCBjaGFuZ2VkLiBUaGUgc29jaWFsIHN0cnVjdHVyZSB3aGljaCB3YXMgYmFzZWQgICBvbiByZWxhdGlvbnMgd2l0aGluIGEgY2xhbiBhbmQgd2FzIGxhcmdlbHkgZWdhbGl0YXJpYW4gaW4gdGhlIEVhcmx5IFZlZGljIHBlcmlvZCBiZWNhbWUgICBtdWNoIG1vcmUgY29tcGxleC4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgKC0pVGhlIHNhYmhhIGJlY2FtZSBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBzYW1pdGkgZHVyaW5nIHRoaXMgcGVyaW9kLiBSZWZlcmVuY2UgdG8gICByYWphcyBpbiB0aGUgYXNzZW1ibHkgb3IgdGhlIHNhYmhhIHN1Z2dlc3RzIHRoYXQgdGhleSBoZWxwZWQgdGhlIGtpbmcgaW4gaGlzIGR1dGllcy4gU28sICAgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICAgKC0pVGhlIGluc3RpdHV0aW9uIG9mIGdvdHJhIChsaXRlcmFsbHkgbWVhbmluZyBjb3cgcGVuKSBhcHBlYXJlZCBkdXJpbmcgdGhpcyBwZXJpb2QuIEFzICAgYWdhaW5zdCB0cmliYWwgZW5kb2dhbXkgKG1hcnJpYWdlIHdpdGhpbiB0aGUgdHJpYmUpLCBwZW9wbGUgcHJhY3RpY2VkIGdvdHJhIGV4b2dhbXkgICAobWFycnlpbmcgb3V0c2lkZSB0aGUgZ290cmEpLiBHb3RyYSBzaWduaWZpZWQgZGVzY2VudCBmcm9tIGEgY29tbW9uIGFuY2VzdG9yIGFuZCAgIG1hcnJpYWdlcyBjb3VsZCBub3QgdGFrZSBwbGFjZSBiZXR3ZWVuIGNvdXBsZXMgYmVsb25naW5nIHRvIHRoZSBzYW1lIGdvdHJhLiBTbywgICBzdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiAgICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlbGV2YW5jZTogUmVwb3J0cyBvZiBhIGZldyB3b21lbiBiZWluZyBseW5jaGVkIGZvciBmbG91dGluZyBydWxlcyBvbiBnb3RyYSBleG9nYW15IHdhcyBpbiAgIG5ld3MuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 3 and 4 only  ",
        "option3" : " 1, 2 and 4 only  ",
        "option4" : " 1, 2, 3 and 4 only   "
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following pairs:  Sl.  No.  Folk Painting  State  1. Madhubani : Bihar  2. Kalighat : Rajasthan  3. Paitkar : Jharkhand  4. Thangka  Sikkim  How many pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlNYWRodWJhbmkgYXJ0IGFuZCBwYWludGluZyBpcyBhIHN0eWxlIG9mIHBhaW50aW5nIHByYWN0aWNlZCBpbiB0aGUgTWl0aGlsYSByZWdpb24gb2YgICBJbmRpYSBhbmQgTmVwYWwuIEl0IHdhcyBuYW1lZCBhZnRlciB0aGUgTWFkaHViYW5pIERpc3RyaWN0IG9mIEJpaGFyLCBJbmRpYSwgd2hpY2ggaXMgICB3aGVyZSBpdCBvcmlnaW5hdGVkLiBTbyBwYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pS2FsaWdoYXQgcGFpbnRpbmdzIG9yaWdpbmF0ZWQgaW4gdGhlIDE5dGggY2VudHVyeSBpbiBXZXN0IEJlbmdhbCBpbiB0aGUgdmljaW5pdHkgb2YgICBLYWxpZ2hhdCBLYWxpIFRlbXBsZS4gVGhlc2UgZGVwaWN0ZWQgSGluZHUgZ29kcyBhbmQgb3RoZXIgbXl0aG9sb2dpY2FsIGNoYXJhY3RlcnMgICBhbmQgYWxzbyBpbmNsdWRlZCBkZXBpY3Rpb25zIG9mIGV2ZXJ5ZGF5IGxpZmUuIFNvLCBwYWlyIDIgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlQYWl0a2FyIHBhaW50aW5ncyBvciBzY3JvbGwgcGFpbnRpbmdzIGFyZSBwcmFjdGljZWQgYnkgdGhlIHRyaWJhbCBwZW9wbGUgb2YgSmhhcmtoYW5kICAgYW5kIGFyZSBjb25zaWRlcmVkIG9uZSBvZiB0aGUgYW5jaWVudCBzY2hvb2xzIG9mIHBhaW50aW5nIGluIHRoZSBjb3VudHJ5LiBJdCBoYXMgY3VsdHVyYWwgICBhc3NvY2lhdGlvbiB3aXRoIE1hIE1hbnNhLCBvbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBnb2RkZXNzZXMgaW4gdHJpYmFsIGhvdXNlaG9sZC4gICBUaGVzZSBhcmUgbGlua2VkIHRvIHRoZSBzb2NpYWwgYW5kIHJlbGlnaW91cyBjdXN0b21zIGluY2x1ZGluZyBnaXZpbmcgYWxtcyBhbmQgaG9sZGluZyAgIHlham5hcy4gVGhlIGNvbW1vbiB0aGVtZSBvZiBQYWl0a2FyIHBhaW50aW5ncyBpcyAnV2hhdCBoYXBwZW5zIHRvIGh1bWFuIGxpZmUgcG9zdCAgIGRlYXRoJy4gU28sIHBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gICAoLSlUaGFuZ2thIHBhaW50aW5ncyBwcmVzZW50bHkgYmVsb25nIHRvIFNpa2tpbSwgSGltYWNoYWwgUHJhZGVzaCwgTGFkYWtoIHJlZ2lvbiBhbmQgICBBcnVuYWNoYWwgUHJhZGVzaC4gSXQgd2FzIG9yaWdpbmFsbHkgdXNlZCBhcyBhIG1lZGl1bSBvZiByZXZlcmVuY2UgdGhhdCBldm9rZWQgdGhlICAgaGlnaGVzdCBpZGVhbHMgb2YgQnVkZGhpc20uIEl0IHdhcyB0cmFkaXRpb25hbGx5IG1hZGUgYnkgQnVkZGhpc3QgbW9ua3MgYW5kICAgcGFydGljdWxhciBldGhuaWMgZ3JvdXBzLiBUaGFuZ2thcyBhcmUgcGFpbnRlZCBvbiBhIGJhc2Ugb2YgY290dG9uIGNhbnZhcyAod2hpdGUgICBiYWNrZ3JvdW5kKSB3aXRoIHBhaW50cyBtYWRlIGZyb20gbmF0dXJhbCB2ZWdldGFibGUgZHllcyBvciBtaW5lcmFsIGR5ZXMuIFRoZSAgIGNvbG91cnMgdXNlZCBpbiB0aGUgcGFpbnRpbmdzIGhhdmUgdGhlaXIgb3duIHNpZ25pZmljYW5jZS4gRm9yIGV4YW1wbGUsIHJlZCBzdGFuZHMgZm9yICAgaW50ZW5zaXR5IG9mIHBhc3Npb24sIGJlIGl0IGxvdmUgb3IgaGF0cmVkLCBnb2xkZW4gaXMgZm9yIGxpZmUgb3IgYmlydGgsIHdoaXRlIGlzIGZvciBzZXJlbml0eSwgICBibGFjayBkZXBpY3RzIGFuZ2VyLCBncmVlbiByZXByZXNlbnRzIGNvbnNjaW91c25lc3MgYW5kIHllbGxvdyBzaG93cyBjb21wYXNzaW9uLiAgIFNvLCBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgIFNvLCBvbmx5IHRocmVlIHBhaXJzIGFyZSBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair    ",
        "option2" : " Only two pairs    ",
        "option3" : " Only three pairs   ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following statements:  1. The worship of Yakshas and Yakshis  started as a consequence of Buddhism.  2. The reference to Yakshis can be found in  the Tamil epic, Silappadhikaram.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pWWFrc2hhIGFuZCBZYWtzaGkgb3IgWWFrc2hpbmlzIHdlcmUgZm9yZXN0IHNwaXJpdHMga25vd24gZnJvbSB0aGUgdGltZSBvZiBSaWd2ZWRhLiAgIFRoZXkgYXJlIHNlZW4gYXMgdGhlIGN1bHQgb2YgY29tbW9uIGZvbGsuIFRoZXkgY291bGQgYmUgZ29vZCBhbmQgZXZpbC4gVGhleSB3ZXJlICAgZ2VuZXJhbGx5IGludm9rZWQgZm9yIGF0dGFpbmluZyB3ZWFsdGgsIHByb3NwZXJpdHkgYW5kIGJlYXV0eS4gWWFrc2hhIHdvcnNoaXAgd2FzICAgdmVyeSBwb3B1bGFyIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGFkdmVudCBvZiBCdWRkaGlzbSBhbmQgaXQgd2FzIGFzc2ltaWxhdGVkIGluICAgQnVkZGhpc20gYW5kIEphaW5pc20uIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICBvIFRoZSBtYWluIEluZGlhbiByZWxpZ2lvbnMgb2YgbGF0ZXIgZGF5cyBhcHByb3ByaWF0ZWQgdGhlc2UgZ29kZGVzc2VzIHRvIGF0dHJhY3QgICB0aGUgcnVyYWwgcGVvcGxlIGFuZCBtYWtlIHRoZW0gYWNjZXB0IHRoZXNlIHJlbGlnaW9ucyB3aXRob3V0IHJlc2VydmF0aW9uLiAgIG8gVGhlIGltcG9ydGFuY2UgZ2l2ZW4gdG8geWFrc2hpcyBpbiBKYWluaXNtIGNhbiBiZSBzZWVuIGZyb20gdGhlIGZhY3QgdGhhdCB0aGVyZSAgIGlzIGEgeWFrc2hpIGZvciBlYWNoIG9mIHRoZSAyNCB0aXJ0aGFua2FyYXMuIFRoZXkgYXJlIHRoZSB0aXJ0aGFua2FyYXMnIGd1YXJkaWFuICAgZGVpdGllcy4gICAoLSlFdHltb2xvZ2ljYWxseSwgdGhlIHdvcmRzIHlha3NoYSBhbmQgeWFrc2hpIGhhdmUgdGhlaXIgb3JpZ2lucyBpbiB5YXMsIHlhayBvciB2YWosICAgbWVhbmluZyBteXN0ZXJpb3VzLCBtYXJ2ZWxsb3VzLCBzcGlyaXR1YWwgYXBwYXJpdGlvbiBvciBzZW1pLWRpdmluZSBiZWluZ3MuIFRoZSAgIHdvcnNoaXAgb2YgSXNha2tpIEFtbWFuIChpc2Fra2kgb3JpZ2luYXRpbmcgZnJvbSB0aGUgd29yZCB5YWtzaGkpIGlzIHBvcHVsYXIgdG8gdGhpcyAgIGRheSBpbiB0aGUgc291dGhlcm4gZGlzdHJpY3RzIG9mIFRhbWlsIE5hZHUuIFRoZSBlYXJsaWVzdCByZWZlcmVuY2UgdG8geWFrc2hpIGluIFRhbWlsICAgaXMgZm91bmQgaW4gdGhlIEphaW5hIGVwaWMgU2lsYXBwYWRoaWthcmFtLCB3aGljaCB0YWxrcyBvZiBQb29uZ2thbm4gSXlha2tpLCB0aGF0IGlzLCAgIGEgeWFrc2hpIHdpdGggZXllcyBzb2Z0IGFzIGZsb3dlcnMuIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgIEtub3dsZWRnZSBCb3ggICAoLSlZYWtzaGkgc2N1bHB0dXJlcyBoYXZlIGJlZW4gZm91bmQgaW4gTWF0aHVyYSBpbiBVdHRhciBQcmFkZXNoOyBEaWRhcmdhbmogYW5kICAgQmFzYXJoIGluIEJpaGFyOyBCaG9wYWwsIFNhbmNoaSBhbmQgS2hhanVyYWhvIGluIE1hZGh5YSBQcmFkZXNoOyBFbGxvcmEgaW4gICBNYWhhcmFzaHRyYTsgVWRheWFnaXJpIGFuZCBLaGFuZGFnaXJpIGluIE9kaXNoYTsgVGlydXBwYW5tYWxhaSwgVmFsbGltYWxhaSwgICBBbmFpbWFsYWksIFRpcnVtYWxhaSwgU2FtYW5hbWFsYWksIFNpdGhhbXVyIGFuZCBTaXRoYXJhbCBpbiBUYW1pbCBOYWR1OyBBaWhvbGUgYW5kICAgU2hyYXZhbmFiZWxhZ29sYSBpbiBLYXJuYXRha2E7IGFuZCBOYWdhcmp1bmFrb25kYSwgS29uZGFwdXIsIFBlZGRhcHVyIGFuZCAgIEFtYXJhdmF0aGkgaW4gQW5kaHJhIFByYWRlc2guICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 58,
      "question" : "It is a folk dance popular in Tamil Nadu and  Kerala in India. The dance is performed by  women during Pongal in circular formations.  The absence of music is defining feature of  this dance. The above paragraph best  describes which one of the following dance  forms?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlLdW1taSBpcyBhIHBvcHVsYXIgZm9sayBkYW5jZSBpbiB0aGUgcmVnaW9uIG9mIFRhbWlsIE5hZHUgYW5kIEtlcmFsYS4gSXQgaXMgcGVyZm9ybWVkICAgYnkgdGhlIHdvbWVuLCBzdGFuZGluZyBpbiBhIGNpcmN1bGFyIGZvcm1hdGlvbi4gQSB1bmlxdWUgZmVhdHVyZSBvZiB0aGUgZGFuY2UgICBwZXJmb3JtYW5jZSBpcyB0aGUgYWJzZW5jZSBvZiBhbnkgYWNjb21wYW55aW5nIG11c2ljLiBUaGUgYmVhdHMgYXJlIGdlbmVyYXRlZCBieSAgIHRoZSByaHl0aG1pYyBjbGFwcGluZy4gICAgKC0pQWxrYXAgaXMgYSBydXJhbCBkYW5jZS1kcmFtYSBwZXJmb3JtYW5jZSBwcmV2YWxlbnQgaW4gdGhlIFJham1haGFsIGhpbGxzIG9mICAgSmhhcmtoYW5kIGFuZCBNdXJzaGlkYWJhZCBhbmQgTWFsZGEgcmVnaW9ucyBvZiBXZXN0IEJlbmdhbC4gSXQgaXMgcGVyZm9ybWVkIGJ5ICAgdHJvb3BzIG9mIDEwLTEyIGRhbmNlcnMsIGFjY29tcGFuaWVkIGJ5IG9uZSBvciB0d28gbGVhZCBzaW5nZXJzIGtub3duIGFzIGdheWVucy4gICBUaGUgdHJvb3BzIHBlcmZvcm0gcG9wdWxhciBmb2xrbG9yZSBhbmQgbXl0aG9sb2dpY2FsIHN0b3JpZXMsIGluIHdoaWNoIHRoZSBkYW5jZSBpcyAgIGludGVyc3BlcnNlZCB3aXRoIGNvbWljYWwgc2tldGNoZXMga25vd24gYXMga2FwLiBUaGUgZGFuY2UgaXMgZ2VuZXJhbGx5IGFzc29jaWF0ZWQgICB3aXRoIHRoZSBHYWphbiBmZXN0aXZhbCBvZiBTaGl2YS4gICAoLSlSYW5nbWEgZGFuY2UgaXMgcGVyZm9ybWVkIGJ5IHRoZSBOYWdhIHBlb3BsZS4gSXQgaXMgdXN1YWxseSBhIHBhcnQgb2YgdGhlIE5nYWRhICAgZmVzdGl2YWwuIEl0IGlzIHRoZSB3YXIgZGFuY2Ugb2YgdGhlIE5hZ2FzLiBEcmVzc2VkIGluIGNvbG91cmZ1bCBjb3N0dW1lcywgamV3ZWxsZXJ5IGFuZCAgIGNvbG91cmZ1bCBoZWFkZ2VhcnMsIHRoZSBkYW5jZXJzIGVuYWN0IG1vY2sgd2FyIGZvcm1hdGlvbnMgYW5kIHRyYWRpdGlvbnMuICAgKC0pUGFkYXlhbmkgaXMgYSBtYXJ0aWFsIGRhbmNlIHBlcmZvcm1lZCBpbiB0aGUgQmhhZ2F2YXRpIHRlbXBsZXMgb2YgU291dGhlcm4gS2VyYWxhLiAgIFBhZGF5YW5pIGxpdGVyYWxseSBtZWFucyByb3dzIG9mIGluZmFudHJ5LCBhbmQgaXQgaXMgYSB2ZXJ5IHJpY2ggYW5kIGNvbG91cmZ1bCBhZmZhaXIuIFRoZSAgIGRhbmNlcnMgd2VhciBodWdlIG1hc2tzIGtub3duIGFzIGtvbGFtcywgYW5kIHByZXNlbnQgaW50ZXJwcmV0YXRpb25zIG9mIGRpdmluZSBhbmQgICBzZW1pIGRpdmluZSBuYXJyYXRpdmVzLiBTb21lIG9mIHRoZSBwb3B1bGFyIGNoYXJhY3RlcnMgYXJlIEJoYWlyYXZpLCBLYWxhbiAoR29kIG9mICAgZGVhdGgpLCBZYWtzaGkgYW5kIFBha3NoaSwgZXRjLiBJdCBpcyBwZXJmb3JtZWQgdG8gd29yc2hpcCBHb2RkZXNzIEthbGkuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Alkap  ",
        "option2" : " Rangma  ",
        "option3" : " Padayani  ",
        "option4" : " Kummi   "
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following pairs:  Sl.  No.  Temple  Built by  1. Shore Temple at  Mahabalipuram  :  Pallavas  2. Airavatesvara  Temple  : Chalukyas  3. Brihadeshwara  Temple  : Cholas  Which of the pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUaGUgU2hvcmUgdGVtcGxlIGF0IE1haGFiYWxpcHVyYW0gd2FzIGJ1aWx0IGR1cmluZyB0aGUgcmVpZ24gb2YgUGFsbGF2YSBLaW5nICAgTmFyYXNpbWhhdmFybWFuIElJLiBTbywgcGFpciAxIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICgtKVRoZSBncmVhdCBDaG9sYSBraW5nLCBSYWphcmFqYSBJSSwgYnVpbHQgdGhlIEFpcmF2YXRlc3ZhcmEgVGVtcGxlIGluIERhcmFzdXJhbWFyYSAgIFRlbXBsZSBpbiBEYXJhc3VyYW0uIFNvLCBwYWlyIDIgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkLiAgICgtKVRoZSBtYWduaWZpY2VudCBTaGl2YSB0ZW1wbGUgb2YgVGhhbmphdnVyLCBjYWxsZWQgdGhlIFJhamFyYWplc3dhcmEgb3IgICBCcmFoYWRlc2h3YXJhIHRlbXBsZSwgd2FzIGNvbXBsZXRlZCBhcm91bmQgMTAwOSBieSBSYWphcmFqYSBDaG9sYS4gU28sIHBhaXIgMyBpcyAgIGNvcnJlY3RseSBtYXRjaGVkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 3 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 only   Join Telegram Channel @cse_updates For More  t.me/cse_updates     10       "
      }
    },
    {
      "index" : 60,
      "question" : "Which of the following dance forms is a part  of the UNESCO List of Intangible Cultural  Heritage (ICH)?  1. Kuchipudi   2. Bharatnatyam  3. Sattriya  4. Chhau  5. Kalbelia  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlDaGhhdSBkYW5jZSBpcyBhIHRyYWRpdGlvbiBmcm9tIGVhc3Rlcm4gSW5kaWEgdGhhdCBlbmFjdHMgZXBpc29kZXMgZnJvbSBlcGljcyAgIGluY2x1ZGluZyB0aGUgTWFoYWJoYXJhdGEgYW5kIFJhbWF5YW5hLCBsb2NhbCBmb2xrbG9yZSBhbmQgYWJzdHJhY3QgdGhlbWVzLiBJdCBpcyBhICAgZm9ybSBvZiBtYXNrIGRhbmNlIHRoYXQgdXNlcyBtYXJ0aWFsIG1vdmVtZW50cy4gVGhlcmUgYXJlIHRocmVlIG1haW4gc3R5bGVzIG9mICAgQ2hoYXUgZGFuY2UgLSBTYXJhaWtlbGxhIENoaGF1IGluIEpoYXJraGFuZCwgTWF5dXJiaGFuaiBDaGhhdSBpbiBPZGlzaGEgYW5kICAgUHVydWxpYSBDaGhhdSBpbiBXZXN0IEJlbmdhbC4gT2YgdGhlc2UsIE1heXVyYmhhbmogQ2hoYXUgYXJ0aXN0cyBkbyBub3Qgd2VhciBtYXNrcy4gICBJbiAyMDEwLCBVTkVTQ08gaW5zY3JpYmVkIENoaGF1IGluIHRoZSBSZXByZXNlbnRhdGl2ZSBMaXN0IG9mIEludGFuZ2libGUgQ3VsdHVyYWwgICBIZXJpdGFnZSBvZiBIdW1hbml0eSAoSUNIKS4gU28sIHBvaW50IDQgaXMgY29ycmVjdC4gICAoLSlLYWxiZWxpYSBpcyBhIHNlbnN1b3VzIGZvbGsgZGFuY2UgcGVyZm9ybWVkIGJ5IHRoZSB3b21lbiBvZiB0aGUgS2FsYmVsaWEgY29tbXVuaXR5ICAgb2YgUmFqYXN0aGFuLiBUaGUgY29zdHVtZXMgYW5kIGRhbmNlIG1vdmVtZW50cyBhcmUgc2ltaWxhciB0byB0aGF0IG9mIHRoZSBzZXJwZW50cy4gICAnQmVlbicgKHdpbmQgaW5zdHJ1bWVudCBwbGF5ZWQgYnkgc25ha2UgY2hhcm1lcnMpIGlzIHRoZSBwb3B1bGFyIG11c2ljYWwgaW5zdHJ1bWVudCAgIG9mIHRoaXMgZGFuY2UgZm9ybS4gVU5FU0NPIGhhcyBpbnNjcmliZWQgS2FsYmVsaWEgZm9sayBzb25ncyBhbmQgZGFuY2VzIGluIHRoZSAgIFJlcHJlc2VudGF0aXZlIExpc3Qgb2YgdGhlIEludGFuZ2libGUgQ3VsdHVyYWwgSGVyaXRhZ2Ugb2YgSHVtYW5pdHkgaW4gMjAxMC4gU28sIHBvaW50ICAgNSBpcyBjb3JyZWN0LiAgICgtKUt1Y2hpcHVkaSBpcyBkYW5jZSBmb3JtIG9yaWdpbmF0ZWQgZnJvbSBBbmRocmEgUHJhZGVzaC4gSXQgZ3JldyBsYXJnZWx5IGFzIGEgcHJvZHVjdCAgIG9mIEJoYWt0aSBtb3ZlbWVudC4gSXQgaXMgbm90IGEgcGFydCBvZiB0aGUgVU5FU0NPIExpc3Qgb2YgSUNILiBTbywgcG9pbnQgMSBpcyBub3QgICBjb3JyZWN0LiAgICgtKUJoYXJhdGFuYXR5YW0gb2YgVGFtaWwgTmFkdSB3YXMgZWFybGllciBrbm93biBhcyBTYWRpciBvciBEYXNpIEF0dGFtLiBJdCByZXN0cyBvbiAgIHByaW5jaXBsZXMgb2YgcGVyZm9ybWFuY2UgYW5kIGFlc3RoZXRpY3Mgc2V0IGRvd24gaW4gY2xhc3NpY3Mgc3VjaCBhcyBCaGFyYXRhJ3MgICBOYXR5YXNoYXN0cmEuIEl0IGlzIG5vdCBhIHBhcnQgb2YgdGhlIFVORVNDTyBMaXN0IG9mIElDSC4gU28sIHBvaW50IDIgaXMgbm90IGNvcnJlY3QuICAgKC0pJ1NhdHRyaXlhIGRhbmNlJyByZWZlcnMgdG8gdGhlIGJvZHkgb2YgZGFuY2UgYW5kIGRhbmNlZCBkcmFtYSBkZXZlbG9wZWQgaW4gdGhlICAgc2F0dHJhcyBvciBtb25hc3RlcmllcyBvZiBBc3NhbS4gSXQgd2FzIGludHJvZHVjZWQgYnkgdGhlIFZhaXNobmF2YSBTYWludCAgIFNhbmthcmFkZXZhLiBJdCBmaW5kcyBtZW50aW9uIGluIHRoZSBhbmNpZW50IHRleHQgJ05hdHlhIFNoYXN0cmEnIG9mIEJoYXJhdCBNdW5pLiBJdCBpcyAgIG5vdCBhIHBhcnQgb2YgdGhlIFVORVNDTyBMaXN0IG9mIElDSC4gU28sIHBvaW50IDMgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2, 3 and 4 only  ",
        "option3" : " 4 and 5 only  ",
        "option4" : " 1, 2, 3 and 4 only   "
      }
    },
    {
      "index" : 61,
      "question" : "With reference to Indian history, 'Yaudheyas,  Audumbaras, Kunindas and Trigartas' refer to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBQdW5qYWIsIHdoaWNoIHdhcyBhIHBhcnQgb2YgdGhlIFN1bmdhIHRlcnJpdG9yaWVzIGR1cmluZyB0aGUgcmVpZ24gb2YgUHVzaHlhbWl0cmEsICAgd2FzIGxvc3QgdG8gaGlzIHN1Y2Nlc3NvcnMuIFRoZSBHcmVla3Mgb2NjdXBpZWQgdGhlIGFyZWEgYXMgZmFyIGFzIFJhdmkuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgICgtKVRha2luZyBhZHZhbnRhZ2Ugb2YgdGhlIHdlYWtuZXNzIG9mIHRoZSBsYXRlciBTdW5nYXMgYW5kIG9uIHRoZSBzdHJlbmd0aCBvZiB0aGVpciAgIGVjb25vbWljIHByb3NwZXJpdHksIHNvbWUgb2YgdGhlIEtzaGF0cml5YSB0cmliZXMgbGl2aW5nIGJldHdlZW4gdGhlIFJhdmkgYW5kIHRoZSAgIFlhbXVuYSBhc3NlcnRlZCB0aGVpciBhdXRvbm9teS4gU29tZSBvZiB0aGVtIHdlcmUgdGhlICAgbyBBdWR1bWJhcmFzOiBvY2N1cGllZCB0aGUgbGFuZCBiZXR3ZWVuIHRoZSB1cHBlciBjb3Vyc2VzIG9mIFJhdmkgYW5kIHRoZSAgIEJlYXMgICBvIEt1bmluZGFzOiBydWxlZCB0aGUgdGVycml0b3J5IGJldHdlZW4gdGhlIHVwcGVyIGNvdXJzZXMgb2YgdGhlIEJlYXMgYW5kIHRoZSAgIFlhbXVuYSBhbG9uZyB0aGUgZm9vdGhpbGxzIG9mIHRoZSBTaXdhbGlrIHJhbmdlcy4gICBvIFRyaWdhcnRhczogcnVsZWQgdGhlIHBsYWluIGNvdW50cnkgYmV0d2VlbiB0aGUgcml2ZXJzIFJhdmkgYW5kIFN1dGxlai4gICBvIFlhdWRoZXlhczogd2VyZSBmYW1vdXMgYXMgd2FycmlvcnMgYW5kIHJ1bGVkIHRoZSB0ZXJyaXRvcnkgYmV0d2VlbiBTdXRsZWogICBhbmQgWWFtdW5hIGFuZCBwYXJ0cyBvZiBlYXN0ZXJuIFJhamFzdGhhbi4gICBvIEFyanVuYXlhbmFzLCBNYWxhdmFzIGFuZCBTaWJpcyBkaXN0cmlidXRlZCBpbiBkaWZmZXJlbnQgcGFydHMgb2YgUmFqYXN0aGFuLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " commentaries of the Theravada Buddhist   treatises discovered in Sri Lanka  ",
        "option2" : " kshatriya tribes who lived between the   Ravi and the Yamuna rivers  ",
        "option3" : " village administrative units that prevailed   during the Satavahana period  ",
        "option4" : " rajput clans belonging to the   Chandravanshi lineage who followed   Jainism   "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following statements with  reference to King Kharavela:  1. He ruled over Kalinga and belonged to the  Chedi dynasty.  2. The Hathigumpha inscription mentions  that he liberated Mathura from the  Yavanas.  3. He was a follower of Shaivism and  persecuted Buddhists.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluIHRoZSBlYXJseSBwYXJ0IG9mIHRoZSAxc3QgY2VudHVyeSBCLkMuIEthbGluZ2EgYmVjYW1lIGluZGVwZW5kZW50IHVuZGVyIHRoZSBDaGVkaSAgIENoaWVmIE1haGFtZWdoYXZhbmEuIEtoYXJhdmVsYSB3YXMgdGhlIHNvbiBvZiBNYWhhbWVnaGF2YWhhbmEsIG9mIHRoZSBDaGVkaSAgIGR5bmFzdHksIHdobyBydWxlZCBvdmVyIEthbGluZ2EuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKVRoZSBIYXRoaWd1bXBoYSBpbnNjcmlwdGlvbiB3aGljaCB3YXMgZW5ncmF2ZWQgb24gdGhlIFVkYXlhZ2lyaSBoaWxscyBuZWFyICAgQmh1YmFuZXN3YXIsIGlzIGF0dHJpYnV0ZWQgdG8gS2hhcmF2ZWxhLiBUaGUgaW5zY3JpcHRpb24gbWVudGlvbnMgdGhhdCBLaGFyYXZlbGEgICBsaWJlcmF0ZWQgdGhlIHNhY3JlZCBjaXR5IG9mIE1hdGh1cmEsIHdoaWNoIHdhcyBhIHN0cm9uZy1ob2xkIG9mIEphaW5pc20gZnJvbSB0aGUgICBZYXZhbmFzIGFuZCBvcGVuZWQgdGhlIGNpdHkgdG8gSmFpbmEgcGlsZ3JpbXMgY29taW5nIGZyb20gYWxsIHBhcnRzIG9mIEluZGlhLiBTbywgICBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKUtoYXJhdmVsYSB3YXMgcHJvYmFibHkgc3VjY2VlZGVkIGJ5IGhpcyBzb24gS3VkZXBhc2lyaS4gVGhlIE1haGFtZWdoYXZhaGFuYSAgIGR5bmFzdHkgY29udGludWVkIHRvIHJ1bGUgb3ZlciBLYWxpbmdhIGFuZCBNYWhpc2hha2EgdXAgdG8gdGhlIDFzdCBjZW50dXJ5IEEuRC4gVGhlICAgVmVscHVydSBpbnNjcmlwdGlvbiByZXZlYWxzIHRoZSBydWxlIG9mIG9uZSBBaXJhbWFoYXJhamEgSGFyaXRpcHV0cmEgTWFuYXNhZGEgd2hvICAgYmVsb25nZWQgdG8gdGhlIE1haGFtZWdoYXZhaGFuYSBkeW5hc3R5LiAgICgtKVRoZSBpbnZvY2F0aW9uIGZvcm11bGEgb24gdGhlIEhhdGlndW1waGEgaW5zY3JpcHRpb24sIE5hbW8gQXJpaGFudGFuYW0gTmFtbyAgIFNhcnZhLVNpZGhhbWFtLCBjbGVhcmx5IHRlc3RpZmllcyB0aGF0IEphaW5pc20gd2FzIHRoZSByZWxpZ2lvdXMgZmFpdGggdGhhdCB0aGUga2luZyAgIEtoYXJhdmVsYSwgZm9sbG93ZWQuIFNvLCBzdGF0ZW1lbnQgMyBpcyBub3QgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statements with  reference to Amaravati school of art:  1. It was patronized by Satavahanas.  2. The sculptural remains of Amaravati  Stupa were created by using red  sandstone.  3. It was inspired by Buddhism and  represented jataka tales. Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUFtYXJhdmF0aSBzY2hvb2wgb2YgYXJ0IGRldmVsb3BlZCBpbiB0aGUgZWFzdGVybiBEZWNjYW4gaW4gdGhlIGxvd2VyIHZhbGxleXMgb2YgdGhlICAgS3Jpc2huYSBhbmQgdGhlIEdvZGF2YXJpLiBUaGUgbW9zdCBwcm9kdWN0aXZlIGFuZCBwcm9zcGVyb3VzIHBoYXNlIG9mIHRoaXMgYXJ0IGhhcyAgIGJlZW4gZGF0ZWQgdG8gMTUwIDguQy4tMzUwIEEuRC4gQW1hcmF2YXRpIHNjaG9vbCB3YXMgcGF0cm9uaXNlZCBieSBTYXRhdmFoYW5hICAgcnVsZXJzIGFuZCBsYXRlciBieSBJa3NodmFrdSBydWxlcnMuIEluc3BpcmVkIGJ5IEJ1ZGRoaXN0IHRoZW1lcyB0aGUgbWFpbiBjZW50cmVzIG9mICAgdGhpcyBhcnQgd2VyZSBOYWdhcmp1bmFrb25kYSwgQW1hcmF2YXRpLCBHb2xpLCBHaGFudGFzYWxhLCBKYWdnYXl5YXBldGEgZXRjLiAgICBvIFRoZSByZWxpZWZzIHJlcHJlc2VudCB0aGUgdHJhZGl0aW9uYWwgbmFycmF0aXZlIGFydCB0YWtpbmcgdGhlbWVzIGZyb20gdGhlICAgQnVkZGhhJ3MgbGlmZSBhbmQgZnJvbSBKYXRha2Egc3Rvcmllcy4gRm9yIGV4YW1wbGUsIG9uIGEgcmVsaWVmIG1lZGFsbGlvbiBhdCAgIEFtYXJhdmF0aSBpcyBkZXBpY3RlZCB0aGUgc3Rvcnkgb2YgdGhlIHRhbWluZyBvZiBhbiBlbGVwaGFudCBieSB0aGUgQnVkZGhhICAgYW5kIHRoZSBjb21tb3Rpb24gcHJlY2VkaW5nIGl0LiBTbywgc3RhdGVtZW50cyAxIGFuZCAzIGFyZSBjb3JyZWN0LiAgICgtKVRoZSBzY3VscHR1cmVzIGJlbG9uZ2luZyB0byBBbWFyYXZhdGkgc2Nob29sIGFyZSBmb3VuZCBpbiB0aGUgdmFsbGV5IG9mIEtyaXNobmEgb24gdGhlICAgc2l0ZXMgYW5kIG11c2V1bXMgb2YgSmFnZ2F5eWFwZXR0YSwgQW1hcmF2YXRpIGFuZCBOYWdhcmp1bmFrb25kYS4gVGhlIGNvbGxlY3Rpb24gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgb2YgdGhlIHN0dXBhIHBsYXF1ZXMgYXJlIGZvdW5kIGF0IEJyaXRpc2ggTXVzZXVtLCBMb25kb24gYW5kIEdvdmVybm1lbnQgTXVzZXVtLCAgIENoZW5uYWkuIFRoZSBzY3VscHR1cmVkIHBhbmVscyBvZiBBbWFyYXZhdGkgYXJlIGNoYXJhY3RlcmlzZWQgYnkgZGVsaWNhY3kgb2YgZm9ybXMsICAgYW5kIGxpbmVhciBncmFjZS4gTnVtZXJvdXMgc2NlbmVzIG9mIGRhbmNlIGFuZCBtdXNpYyBhZG9ybiB0aGVzZSByZWxpZWZzICAgZGlzcGxheWluZ2pveSBvZiBsaWZlLiBUaGUgc2N1bHB0dXJhbCByZW1haW5zIG9mIEFtYXJhdmF0aSBTdHVwYSwga25vd24gYXMgdGhlICAgJ21hcmJsZXMnIGFyZSBjcmVhdGVkIGJ5IHVzaW5nIHdoaXRlIGxpbWVzdG9uZS4gSXQgY3JlYXRlcyB0aGUgaWxsdXNpb24gb2YgbWFyYmxlIGFuZCAgIGlzIGFzIGZyZXNoIGFzIHdoZW4gaXQgd2FzIGNhcnZlZC4gU28sIHN0YXRlbWVudCAyIGlzIG5vdCBjb3JyZWN0LiAgICgtKVRob3VnaCBuYXR1cmUgaXMgZGVwaWN0ZWQgaW4gdGhlIEFtYXJhdmF0aSBzY2hvb2wgb2YgYXJ0LCB0aGUgY2VudHJhbCBjaGFyYWN0ZXJzIGFyZSAgIGh1bWFuIGJlaW5ncy4gS2luZ3MsIHByaW5jZXMgYW5kIHBhbGFjZXMgZmlndXJlIHByb21pbmVudGx5IGluIHNjdWxwdHVyYWwgICByZXByZXNlbnRhdGlvbnMuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 64,
      "question" : "With reference to ancient Indian history, the  book 'Milinda - Panha' is best known for  which one of the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKU9uZSBvZiB0aGUgbW9zdCBmYW1vdXMgSW5kbyAtIEdyZWVrIHJ1bGVycyB3YXMgTWVuYW5kZXIgb3IgTWlsaW5kYS4gICAoLSlNZW5hbmRlciBpcyBiZXN0IHJlbWVtYmVyZWQgZm9yIGhpcyBjb252ZXJzaW9uIHRvIEJ1ZGRoaXNtIGJ5IE5hZ2FzZW5hLCBhICAgQnVkZGhpc3QgbW9uayBhbmQgcGhpbG9zb3BoZXIuIE1lbmFuZGVyIGFza2VkIE5hZ2FzZW5hIG1hbnkgcXVlc3Rpb25zIHJlbGF0aW5nICAgdG8gQnVkZGhpc20uICAgKC0pVGhlc2UgcXVlc3Rpb25zIGFuZCBOYWdhc2VuYSdzIGFuc3dlcnMgd2VyZSByZWNvcmRlZCBpbiB0aGUgZm9ybSBvZiBhIGJvb2sga25vd24gICBhcyBNaWxpbmRhIC0gUGFuaGEgb3IgVGhlIFF1ZXN0aW9ucyBvZiBNaWxpbmRhLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Territorial divisions that prevailed during   the Post-Gupta period  ",
        "option2" : " New coin lineage system introduced by   Kharavela  ",
        "option3" : " The system of branding of horses adopted   by Mauryas  ",
        "option4" : " Menander's questions about the Buddhist   religion   "
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following pairs:  Sl.  No.  Harappan site  Located in  1.  Sutkagen-Dor : Punjab  2. Alamgirpur  : Maharashtra  3. Dholavira : Gujarat  4. Banawali : Rajasthan  How many pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN1dGthZ2VuLURvcjogICAoLSlJdCBpcyBsb2NhdGVkIG5lYXIgdGhlIE1ha3JhbiBjb2FzdCBpbiBQYWtpc3RhbiB3aGljaCBpcyBjbG9zZSB0byB0aGUgUGFraXN0YW4tSXJhbiAgIGJvcmRlci4gU28sIHBhaXIgMSBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQuICAgICgtKVRoZSB0b3duIGhhZCBhIGNpdGFkZWwgc3Vycm91bmRlZCBieSBhIHN0b25lIHdhbGwgYnVpbHQgZm9yIGRlZmVuc2UuICAgICgtKUl0cyBsb2NhdGlvbiBpbiBhbiBpbmhvc3BpdGFibGUgYXJlYSBjYW4gb25seSBiZSBleHBsYWluZWQgYnkgdGhlIG5lZWQgZm9yIGEgc2VhLXBvcnQgICBmb3IgdHJhZGluZy4gICAgIEFsYW1naXJwdXI6ICAgKC0pSXQgaXMgYSBwcm9taW5lbnQgYXJjaGFlb2xvZ2ljYWwgc2l0ZSBvZiB0aGUgSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiBpbiBVdHRhciBQcmFkZXNoJ3MgICBNZWVydXQgZGlzdHJpY3QuIFNvLCBwYWlyIDIgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlBIGh1bXBlZCBidWxsIGFuZCBicm9rZW4gY29wcGVyIGJsYWRlIHdlcmUgYW1vbmcgdGhlIG90aGVyIGl0ZW1zIHRoYXQgd2VyZSAgIHVuZWFydGhlZCBhdCB0aGlzIHNpdGUuICAgIERob2xhdmlyYTogICAoLSlJdCBpcyBsb2NhdGVkIG9uIGFuIGlzbGFuZCBuYW1lZCBLaGFkaXIgQmV0IGluIHRoZSBSYW5uIG9mIEt1dGNoIGluIEd1amFyYXQuIFNvLCBwYWlyIDMgICBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gICAgKC0pQW1vbmcgcHJpbWUgZGlzY292ZXJpZXMgbWFkZSBoZXJlIHdlcmUgdmFyaW91cyByZXNlcnZvaXJzIHRoYXQgYmVhciB0ZXN0aW1vbnkgdG8gICB0aGUgYWR2YW5jZWQgd2F0ZXItbWFuYWdlbWVudCBzeXN0ZW0gYmFjayB0aGVuLiAgICAoLSlNdWNoIGxhdGVyIGluIHRoZSB5ZWFyIDIwMTQsIGFyY2hhZW9sb2dpc3RzIGRpc2NvdmVyZWQgYSBzdGVwLXdlbGwgaGVyZSwgd2hpY2ggaXMgICBhbG1vc3QgdGhyZWUgdGltZXMgYmlnZ2VyIHRoYW4gdGhlIGZhbW91cyBHcmVhdCBCYXRoIG9mIE1vaGVuam8tRGFyby4gICAgQmFuYXdhbGk6ICAgKC0pSXQgaXMgbG9jYXRlZCBuZWFyIEZhdGVoYWJhZCBjaXR5IGluIEhhcnlhbmEuIFNvLCBwYWlyIDQgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkLiAgICAoLSlUaGlzIHNpdGUgYXQgdmlsbGFnZSBCYW53YWxpIGlzIG9uIHRoZSBkcnkgYmVkIG9mIHRoZSBhbmNpZW50IHJpdmVyIFNhcmFzdmF0aS4gICAgU28sIG9ubHkgb25lIHBhaXIgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs    ",
        "option3" : " Only three pairs   ",
        "option4" : " All four pairs      Join Telegram Channel @cse_updates For More  t.me/cse_updates     11      "
      }
    },
    {
      "index" : 66,
      "question" : "With reference to the pottery in India,  consider the following statements:   1. Black and Red Ware (BRW) can be found  from chalcolithic sites in the middle and  lower Ganga valley.  2. Ochre Coloured Pottery sites are  generally located on river banks.  3. Painted Grey Ware (PGW) sites are  mainly associated with South Indian  megalithic culture.  4. The origin of Northern Black Polished  Ware lies in north-western India.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEJsYWNrIGFuZCBSZWQgV2FyZSAoQlJXKTogICAoLSlBcyBpdHMgbmFtZSBpbmRpY2F0ZXMsIEJsYWNrIGFuZCBSZWQgV2FyZSAoQlJXKSByZWZlcnMgdG8gYSBwb3R0ZXJ5IHRoYXQgaXMgYm90aCByZWQgICBhbmQgYmxhY2suIEJSVyBvY2N1cnMgYXQgbmVvbGl0aGljIHNpdGVzIChDaGlyYW5kLCBQaWtsaWhhbCwgZXRjLiksIHByZS1IYXJhcHBhbiBMb3RoYWwsICAgYW5kIG1hbnkgSGFyYXBwYW4gc2l0ZXMgaW4gR3VqYXJhdCAoZS5nLiwgTG90aGFsLCBTdXJrb3RhZGEsIFJvamRpLCBSYW5ncHVyLCBhbmQgICBEZXNhbHB1ciksIGNoYWxjb2xpdGhpYyBzaXRlcyBpbiB0aGUgbWlkZGxlIGFuZCBsb3dlciBHYW5nYSB2YWxsZXkgKENoaS1yYW5kLCBQYW5kdSAgIFJhamFyIERoaWJpLCBldGMuKSwgc2l0ZXMgb2YgdGhlIEFoYXIvQmFuYXMgY3VsdHVyZSAoQWhhciwgR2lsdW5kKSwgTWFsd2EgY3VsdHVyZSAgIChOYXZkYXRvbGksIEluYW1nYW9uKSwgZXRjLiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAgT2NocmUgQ29sb3VyZWQgUG90dGVyeSAoT0NXKTogICAoLSlUaGVzZSBzaXRlcyBhcmUgZ2VuZXJhbGx5IGxvY2F0ZWQgb24gcml2ZXIgYmFua3MuIFRoZXNlIHNpdGVzIGFyZSBzbWFsbCBpbiBzaXplIGFuZCB0aGUgICBtb3VuZHMgaGF2ZSBhIGxvdyBoZWlnaHQgYXQgbWFueSBvZiB0aGUgc2l0ZXMgKGUuZy4gQmFoYWRhcmFiYWQsIEJpc2F1bGksIFJhanB1ciAgIFBhcnN1LCBTYWlwYWkpLiBUaGlzIGluZGljYXRlcyBhIHJlbGF0aXZlbHkgc2hvcnQgZHVyYXRpb24gb2YgdGhlc2Ugc2V0dGxlbWVudHMuIE9uIHRoZSAgIGJhc2lzIG9mIFRoZXJtb2x1bWluZXNjZW5jZSBkYXRlcyBvYnRhaW5lZCBmcm9tIE9DUCBwb3R0ZXJ5LCB0aGUgY3VsdHVyZSBoYXMgYmVlbiAgIGFzY3JpYmVkIHRvIDIwMDAgQi5DLiB0byAxNTAwIEIuQy4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgUGFpbnRlZCBHcmV5IFdhcmUgKFBHVyk6ICAgKC0pVGhlIGNvbmNlbnRyYXRpb24gb2YgUEdXIHNpdGVzIGlzIGluIHRoZSBJbmRvLUdhbmdldGljIGRpdmlkZSAoSGFyeWFuYSksIFN1dGxlaiBiYXNpbiAgIGFuZCB0aGUgdXBwZXIgR2FuZ2EgcGxhaW5zLiBQb3R0ZXJ5IGlzIHdoZWFsIG1hZGUsIG91dCBvZiB3ZWxsLWxhdmlnYXRlZCBjbGF5IGFuZCBoYXMgICBhIHRoaW4gY29yZS4gSXQgaGFzIGEgc21vb3RoIHN1cmZhY2UsIGdyZXkgdG8gYXNoLWdyZXkgaW4gY29sb3VyLiBUaGUgZGF0ZXMgb2YgdGhlIFBHVyAgIGN1bHR1cmUgcmFuZ2UgZnJvbSBjLiAxMTAwIHRvIGMuIDUwMC80MDAgQkNFLCBhbmQgdGhlIHNpdGVzIGluIHRoZSBub3J0aC13ZXN0IGFyZSAgIHByb2JhYmx5IGVhcmxpZXIgdGhhbiB0aG9zZSBpbiB0aGUgR2FuZ2EgdmFsbGV5LiBTbywgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgICgtKUluIGFsbCBJcm9uIEFnZSBzaXRlcyBvZiBEZWNjYW4gSW5kaWEgJ0JsYWNrLWFuZC1SZWQgd2FyZScgaXMgc2VlbiBhcyB0aGUgY29tbW9uICAgZmVhdHVyZSBvZiBJcm9uIEFnZSBhbmQgTWVnYWxpdGhpYyBjdWx0dXJlLiBUaGUgcG90dGVyeSB0eXBlcyBpbmNsdWRlIGNhcmluYXRlZCAgIHZlc3NlbHMsIGJvd2xzIHdpdGggcGVkZXN0YWxzIGFuZCBzcG91dGVkIGRpc2hlcy4gQSBjb25pY2FsIHNoYXBlZCBsaWQgaXMgZm91bmQgb2Z0ZW4gICBwcm92aWRlZCB3aXRoIGEgbG9vcCBvbiB0aGUgdG9wLiAgIE5vcnRoZXJuIEJsYWNrIFBvbGlzaGVkIFdhcmUgKE5CUFcpOiAgICAoLSlUaGVzZSBleHBhbmQgZnJvbSBUYXhpbGEgYW5kIFVkZ3JhbSBpbiB0aGUgbm9ydGgtd2VzdCB0byBUYWxtdWsgaW4gZWFzdCBCZW5nYWwgICBhbmQgQW1yYXZhdGkgKEFuZGhyYSBQcmFkZXNoKSBpbiB0aGUgc291dGguICAgICgtKUl0cyBjb25jZW50cmF0aW9uIGluIG5vcnRoZXJuIEluZGlhIChHYW5nYSB2YWxsZXkpIGlzIHJlbWFya2FibGUsIHRoYXQgaXMgd2h5LCBpdCBpcyBjYWxsZWQgICAnTm9ydGhlcm4nIEJsYWNrIFBvbGlzaGVkIFdhcmUuIFRoZSBjb25jZW50cmF0aW9uIG9mIE5CUFcgaXMgaW4gZWFzdGVybiBVdHRhciAgIFByYWRlc2ggYW5kIEJpaGFyLCBpdCBpcyBoZWxkIHRoYXQgaXRzIG9yaWdpbiBsaWVzIHNvbWV3aGVyZSBpbiB0aGlzIHJlZ2lvbi4gU28sICAgc3RhdGVtZW50IDQgaXMgbm90IGNvcnJlY3QuICAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 and 4 only   "
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements with  reference to provincial and local  administration in Mauryan Empire:  1. All the provinces had a common capital  and were collectively governed by  Kumara, who acted as the King's  representative.  2. The role of Yukta in a district resembles  the duties of the present-day District  Collector.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBoZWFkIG9mIHRoZSBQcm92aW5jaWFsIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBNYXVyeWFuIEVtcGlyZSB3YXMgdGhlIEt1bWFyYSAgIChyb3lhbCBwcmluY2UpIHdobyB1c2VkIHRvIGdvdmVybiB0aGUgcHJvdmluY2UgYXMgdGhlIEtpbmcncyByZXByZXNlbnRhdGl2ZS4gRnJvbSAgIEFzb2thbiBlZGljdHMsIHdlIGdldCB0aGUgbmFtZXMgb2YgZm91ciBwcm92aW5jaWFsIGNhcGl0YWxzLVRvc2FsaSAoaW4gdGhlIGVhc3QpLCBVamphaW4gICAoaW4gdGhlIHdlc3QpLCBTdXZhcm5hZ2lyaSAoaW4gdGhlIHNvdXRoKSwgYW5kIFRheGlsYSAoaW4gdGhlIG5vcnRoKS4gSGVuY2UsIGVhY2ggcHJvdmluY2UgICBoYWQgc2VwYXJhdGUgY2FwaXRhbHMuIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pVGhlIENvdW5jaWwgb2YgTWluaXN0ZXJzIGF0IHRoZSBwcm92aW5jaWFsIGxldmVsIG5vdCBvbmx5IGFjdGVkIGFzIGEgY2hlY2sgb24gdGhlICAgS3VtYXJhIGJ1dCBhdCB0aW1lcyBoYWQgZGlyZWN0IHJlbGF0aW9ucyB3aXRoIHRoZSBLaW5nLiAgICAoLSlUaGUgb2ZmaWNpYWxzIGR1cmluZyB0aGlzIHBlcmlvZCB3ZXJlIFByYWRlc2h0YSwgUmFqdWthIGFuZCBZdWt0YS4gICBvIFRoZWlyIGZ1bmN0aW9ucyBpbmNsdWRlZDogc3VydmV5IGFuZCBhc3Nlc3NtZW50IG9mIGxhbmQsIHRvdXJzIGFuZCBpbnNwZWN0aW9ucywgICByZXZlbnVlIGNvbGxlY3Rpb24sIGFuZCBtYWludGFpbmluZyBsYXcgYW5kIG9yZGVyLCBldGMuIEF0IHRpbWVzLCB0aGUgS2luZyB3YXMgICBpbiBkaXJlY3QgdG91Y2ggd2l0aCB0aGVzZSBvZmZpY2Vycy4gICBvIFJhanVrYXMgaGFkICJpbmRlcGVuZGVudCBhdXRob3JpdHkiIHRvIGNhcnJ5IG91dCBzb21lIG9mIGhpcyBpbnN0cnVjdGlvbnMgaW4gICByZWxhdGlvbiB0byBwdWJsaWMgd2VsZmFyZS4gVGhlIFl1a3RhIHdhcyBhIGp1bmlvciBvZmZpY2VyIGdpdmluZyBzZWNyZXRhcmlhbCBraW5kICAgb2YgYXNzaXN0YW5jZSB0byB0aGUgb3RoZXIgdHdvLiBUaGUgUHJhZGVzaHRhIHdhcyB0aGUgb3ZlcmFsbCBpbmNoYXJnZSBvZiB0aGUgICBkaXN0cmljdCwgd2hpY2ggcmVzZW1ibGVzIHRoZSBwcmVzZW50LWRheSBEaXN0cmljdCBDb2xsZWN0b3IuIFNvLCBzdGF0ZW1lbnQgMiBpcyAgIG5vdCBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following statements:  1. Miniature paintings were done in the form  of illustrations to the Buddhist religious  texts under the Pala rulers.  2. Mughal paintings reached their zenith  during the reign of Akbar.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUaGUgZWFybGllc3QgZXhhbXBsZXMgb2YgbWluaWF0dXJlIHBhaW50aW5nIGluIEluZGlhIGV4aXN0IGluIHRoZSBmb3JtIG9mIGlsbHVzdHJhdGlvbnMgICB0byB0aGUgcmVsaWdpb3VzIHRleHRzIG9uIEJ1ZGRoaXNtIGV4ZWN1dGVkIHVuZGVyIHRoZSBQYWxhcyBvZiBlYXN0ZXJuIEluZGlhIGFuZCB0aGUgICBKYWluIHRleHRzIGV4ZWN1dGVkIGluIHdlc3Rlcm4gSW5kaWEgZHVyaW5nIHRoZSAxMXRoLTEydGggY2VudHVyaWVzIEEuRC4gU28sIHN0YXRlbWVudCAgIDEgaXMgY29ycmVjdC4gICAoLSlUaGUgTXVnaGFsIHBhaW50aW5ncyByZWFjaGVkIHRoZWlyIHplbml0aCBkdXJpbmcgdGhlIHBlcmlvZCBvZiBKYWhhbmdpci4gSGUgd2FzIGEgICBuYXR1cmFsaXN0IGJ5IG5hdHVyZSBhbmQgcHJlZmVycmVkIHRoZSBwYWludGluZ3Mgb2YgZmxvcmEgYW5kIGZhdW5hLCBpLmUuIGJpcmRzLCBhbmltYWxzLCAgIHRyZWVzIGFuZCBmbG93ZXJzLiBIZSBzaGlmdGVkIGZyb20gaWxsdXN0cmF0ZWQgbWFudXNjcmlwdHMgdG8gYWxidW0gYW5kIGVtcGhhc2lzZWQgICBvbiBicmluZ2luZyBuYXR1cmFsaXNtIHRvIHBvcnRyYWl0IChpbmRpdmlkdWFsKSBwYWludGluZy4gT25lIG9mIHRoZSB1bmlxdWUgdHJlbmRzIHRoYXQgICBkZXZlbG9wZWQgaW4gdGhpcyBwZXJpb2Qgd2FzIG9mIGRlY29yYXRlZCBtYXJnaW5zIGFyb3VuZCB0aGUgcGFpbnRpbmdzLiBPbmUgb2YgdGhlICAgbW9zdCBmYW1vdXMgYXJ0aXN0IGZyb20gaGlzIHBlcmlvZCB3YXMgVXN0YWQgTWFuc29vciB3aG8gd2FzIGFuIGV4cGVydCBpbiBkcmF3aW5nICAgdGhlIGZlYXR1cmVzIG9mIHRoZSBtb3N0IGNvbXBsZXggZmFjZXMuIEFuIGFuaW1hbCBmYWJsZSBjYWxsZWQgQXlhci1pLURhbmlzaCAgIChUb3VjaHN0b25lIG9mIEtub3dsZWRnZSkgd2FzIGlsbHVzdHJhdGVkIGR1cmluZyBoaXMgcmVpZ24uIFNvLCBzdGF0ZW1lbnQgMiBpcyBub3QgICBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only   ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 69,
      "question" : "With reference to the mahajanapadas,  consider the following statements:   1. Kosala was bounded on the west by the  river Gomati and to its east by the river  Sadanira.   2. Rajagriha was the first capital of  Magadha.   3. Vajji was a Ganasamgha or a republic.  4. Viratnagara was the capital of the  Panchala.   Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEtvc2FsYTogICAoLSlUaGUgTWFoYWphbmFwYWRhIG9mIEtvc2FsYSB3YXMgYm91bmRlZCBvbiB0aGUgd2VzdCBieSB0aGUgcml2ZXIgR29tYXRpLiBUbyBpdHMgICBlYXN0LCBmbG93ZWQgdGhlIHJpdmVyIFNhZGFuaXJhLiBUb3dhcmRzIHRoZSBub3J0aCwgaXQgc2tpcnRlZCB0aGUgTmVwYWwgaGlsbHMgd2hpbGUgdGhlICAgcml2ZXIgU3lhbmRpa2EgZGVmaW5lZCBpdHMgc291dGhlcm4gYm91bmRhcnkuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKUluIHRoZSBlYXJseSB5ZWFycyBvZiB0aGUgc2l4dGggY2VudHVyeSBCLkMuIHRoZSBhcmVhIG9mIEtvc2FsYSB3YXMgdW5kZXIgdGhlIGNvbnRyb2wgb2YgICBtYW55IHNtYWxsZXIgY2hpZWZzaGlwcyBydWxpbmcgZnJvbSBzbWFsbCB0b3ducy4gVG93YXJkcyB0aGUgZW5kIG9mIHRoZSA2dGggY2VudHVyeSAgIEIuQy4ga2luZ3MgbGlrZSBQcmFzZW5haml0YSBhbmQgVmlkdWRoYWJoYSBtYW5hZ2VkIHRvIGJyaW5nIGFsbCBvdGhlciBjaGllZnNoaXBzICAgdW5kZXIgdGhlaXIgY29udHJvbC4gICAgTWFnYWRoYTogICAgKC0pTWFnYWRoYSBjb25zaXN0ZWQgb2YgdGhlIGFyZWFzIGFyb3VuZCBQYXRuYSBhbmQgR2F5YSBpbiBzb3V0aCBCaWhhci4gSXRzIGNhcGl0YWwgd2FzICAgY2FsbGVkIEdpcml2cmFqYSBvciBSYWphZ3JpaGEuIFRoZSBjYXBpdGFsIHdhcyBzaGlmdGVkIHRvIFBhdGFsaXB1dHJhIHNvbWV3aGVyZSBpbiB0aGUgICBmaWZ0aCBjZW50dXJ5IEIuQy4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIFZhamppOiAgICgtKUNlbnRyZWQgYXJvdW5kIHRoZSBWYWlzYWxpIGRpc3RyaWN0IG9mIEJpaGFyLCB0aGUgVmFqamlzIChsaXRlcmFsIG1lYW5pbmcgcGFzdG9yYWwgICBub21hZHMpIHdhcyBsb2NhdGVkIG5vcnRoIG9mIHRoZSBHYW5nYS4gICAgKC0pVGhlIGNvbnRlbXBvcmFyeSB0ZXh0cyByZWZlciB0byBpdCBhcyBhIEdhbmFzYW1naGEsIGEgdGVybSB3aGljaCBoYXMgYmVlbiB2YXJpb3VzbHkgICB0cmFuc2xhdGVkIGFzIGEgcmVwdWJsaWMgb3IgYW4gb2xpZ2FyY2h5LiBUaGUgR2FuYXNhbWdoYXMgb2YgdGhpcyBwZXJpb2QgcmVwcmVzZW50ZWQgICBhIHJ1bGUgbm90IGJ5IGFuIGFsbC1wb3dlcmZ1bCBLaW5nIGJ1dCBhIGpvaW50IHJ1bGUgYnkgYSBncm91cCBvZiBLc2hhdHJpeWEgQ2hpZWZzLiBTbywgICBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgIFBhbmNoYWxhOiAgICgtKVRoZSBQYW5jaGFsYSBNYWhhamFuYXBhZGEgd2FzIGxvY2F0ZWQgaW4gUm9oaWtoYW5kIGFuZCBwYXJ0cyBvZiBDZW50cmFsIERvYWIuICAgVGhlIGFuY2llbnQgdGV4dHMgcmVmZXIgdG8gdGhlIHByZXNlbmNlIG9mIHR3byBsaW5lYWdlcyBvZiB0aGUgUGFuY2hhbGFzIGkuZS4gdGhlICAgbm9ydGhlcm4gUGFuY2hhbGFzIGFuZCB0aGUgc291dGhlcm4gUGFuY2hhbGFzIHdpdGggdGhlIHJpdmVyIEJoYWdpcmF0aGkgZm9ybWluZyB0aGUgICBkaXZpZGluZyBsaW5lLiAgICAoLSlUaGUgbm9ydGhlcm4gUGFuY2hhbGFzIGhhZCB0aGVpciBjYXBpdGFsIGF0IEFoaWNjaGF0cmEgbG9jYXRlZCBpbiB0aGUgQmFyZWlsbHkgZGlzdHJpY3QgICBvZiBVLlAuIFRoZSBzb3V0aGVybiBQYW5jaGFsYXMgaGFkIEthbXBpbHlhIGFzIHRoZWlyIGNhcGl0YWwuICAgICgtKVZpcmF0bmFnYXJhIHdhcyB0aGUgY2FwaXRhbCBvZiBNYXRzeWEuIFNvLCBzdGF0ZW1lbnQgNCBpcyBub3QgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlbGV2YW5jZTogUmVjZW50IElJVCBzdHVkaWVzIGFyZSBhdHRlbXB0aW5nIHRvIHByb3ZlIHRoYXQgTVNNRSBoYWQgSW5kaWFuIHJvb3RzIGJhc2VkIG9uICAgY2xhaW0gdGhhdCAxNiB0byAyMiBNYWhhamFuYXBhZGFzIGhhZCBzbWFsbCBzcGVjaWFsaXNlZCBidXNpbmVzc2VzIGFuZCB0cmFkZWQgd2l0aCBlYWNoICAgb3RoZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1 and 4 only  ",
        "option3" : " 3 and 4 only   ",
        "option4" : " 1 and 3 only   "
      }
    },
    {
      "index" : 70,
      "question" : "Consider the following texts:  1. Abhidharma samuccaya  2. Sarvartha siddhi  3. Yogacarabhumi Sastra  4. Tattvartha sutra  5. Avadanashataka  Which of the above texts are Buddhist texts?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBBYmhpZGhhcm1hLXNhbXVjY2F5YSBpcyBhIEJ1ZGRoaXN0IHRleHQgY29tcG9zZWQgYnkgQXNh4bmFZ2EuIFRoZSAgIEFiaGlkaGFybWEtc2FtdWNjYXlhIGlzIGEgc3lzdGVtYXRpYyBhY2NvdW50IG9mIEFiaGlkaGFybWEuIEFjY29yZGluZyB0byBKLiBXLiBkZSAgIEpvbmcgaXQgaXMgYWxzbyAib25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCB0ZXh0cyBvZiB0aGUgWW9nYWNhcmEgc2Nob29sLiIgU28sIHBvaW50IDEgaXMgICBjb3JyZWN0LiAgICgtKVNhcnZhcnRoYSBzaWRkaGkgaXMgYSBmYW1vdXMgSmFpbiB0ZXh0IGF1dGhvcmVkIGJ5IMSAY2FyeWEgUHVqeWFwYWRhLiBJdCBpcyB0aGUgb2xkZXN0ICAgY29tbWVudGFyeSBvbiDEgGNhcnlhIFVtYXN3YW1pJ3MgVGF0dHZhcnRoYXPFq3RyYSAoYW5vdGhlciBmYW1vdXMgSmFpbiB0ZXh0KS4gU28sICAgcG9pbnQgMiBpcyBub3QgY29ycmVjdC4gICAoLSlUaGUgWW9nYWNhcmFiaHVtaSBTYXN0cmEgYWxzbyBrbm93biBhcyB0aGUgWW9nYWNhcmFiaMWrbWksIGlzIGEgdmVyeSBpbmZsdWVudGlhbCwgICBsYXJnZSBlbmN5Y2xvcGVkaWMgY29tcGVuZGl1bSwgYXNzb2NpYXRlZCB3aXRoIG5vcnRoIEluZGlhbiBTYW5za3JpdGljIE1haGF5YW5hICAgQnVkZGhpc20uIFNvLCBwb2ludCAzIGlzIGNvcnJlY3QuICAgKC0pVGF0dHZhcnRoYSBTdXRyYSBpcyBhbiBhbmNpZW50IEphaW4gdGV4dCB3cml0dGVuIGJ5IEFjaGFyeWEgVW1hc3dhbWkgaW4gU2Fuc2tyaXQsICAgc29tZXRpbWUgYmV0d2VlbiB0aGUgMm5kLSBhbmQgNXRoLWNlbnR1cnkgQ0UuIFNvLCBwb2ludCA0IGlzIG5vdCBjb3JyZWN0LiAgICgtKVRoZSBBdmFkYW5hc2F0YWthIGlzIGEgY29tcGlsYXRpb24gb2Ygb25lIGh1bmRyZWQgc3RvcmllcyBkZWFsaW5nIHdpdGggQnVkZGhpc3QgICBsZWdlbmRzLiBTbywgcG9pbnQgNSBpcyBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only  ",
        "option2" : " 1, 3 and 5 only  ",
        "option3" : " 2, 4 and 5 only  ",
        "option4" : " 1, 4 and 5 only   "
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following pairs with reference to  important offices/officers during the Mauryan  rule:  Sl.  No.  Office/Officer  Function  2.    1. Sannidhata : Custodian of the  State treasury  3.    2. Sitadhyaksa : Superintendent  of agriculture  4.    3. Samaharta : Assessor of  land revenue  Join Telegram Channel @cse_updates For More t.me/cse_updates  12  Which of the pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVNvbWUgb2YgdGhlIGltcG9ydGFudCBvZmZpY2VzL29mZmljZXJzIGR1cmluZyB0aGUgTWF1cnlhbiBydWxlIHdlcmU6ICAgbyBHYWhhcGF0aXMgYW5kIGdyYW1iaG9qYWthcyBhcmUgc2FpZCB0byBoYXZlIGVtcGxveWVkIGhpcmVkIGxhYm91cmVycyBvbiBsYW5kICAgaW5kaWNhdGluZyB0aGVpciBjYXBhY2l0eSB0byBkbyBzbyBhcyBhIGxhbmQtb3duaW5nIGdlbnRyeS4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgbyBTYW1haGFydGEgd2FzIHRoZSBoaWdoZXN0IG9mZmljZXIgaW4gY2hhcmdlIG9mIGFzc2Vzc21lbnQgb2YgbGFuZCByZXZlbnVlLiBTbywgICBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgbyBUaGUgc2FubmlkaGF0YSB3YXMgdGhlIGNoaWVmIGN1c3RvZGlhbiBvZiB0aGUgU3RhdGUgdHJlYXN1cnkuIFNvLCBwYWlyIDEgaXMgY29ycmVjdGx5ICAgbWF0Y2hlZC4gICBvIFNpdGFkaHlha3NhIHdhcyB0aGUgU3VwZXJpbnRlbmRlbnQgb2YgQWdyaWN1bHR1cmUuIFNvLCBwYWlyIDIgaXMgY29ycmVjdGx5ICAgbWF0Y2hlZC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements with  reference to the doctrine of Asasvatavada:  1. It is a Mahayana Buddhist doctrine that  states that there are seven elements  responsible for pleasure or pain.  2. It was propounded by Nigantha  Nataputta.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKU1hbnkgbm9uLVZlZGljIGlkZWFzIHdlcmUgcHJldmFsZW50IGR1cmluZyB0aGUgNnRoIGNlbnR1cnkgQi5DLiBUaGV5IGxhdGVyIGRldmVsb3BlZCAgIGludG8gc21hbGwgc2VjdHMuIE9uZSBzdWNoIHRoaW5nIHdhcyB0aGUgZG9jdHJpbmUgb2YgQXNhc3ZhdGF2YWRhLiBJdCB3YXMgbm90IGEgICBNYWhheWFuYSBCdWRkaGlzdCBkb2N0cmluZS4gICAoLSlBY2NvcmRpbmcgdG8gaXQsIHRoZXJlIGFyZSBzZXZlbiBlbGVtZW50cywgd2hpY2ggYXJlIGltbXV0YWJsZSBhbmQgZG8gbm90IGluIGFueSB3YXkgICBjb250cmlidXRlIHRvIHBsZWFzdXJlIG9yIHBhaW4uIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICBvIFRoZXNlIGFyZTogdGhlIGJvZGllcyBvZiBlYXJ0aCwgZmlyZSwgd2F0ZXIsIGFpciwgam95LCBzb3Jyb3csIGFuZCBsaWZlLCBhbW9uZyAgIG90aGVyIHRoaW5ncy4gIFRoZSBib2R5IGlzIHVsdGltYXRlbHkgZGlzc29sdmVkIGludG8gdGhlc2Ugc2V2ZW4gZWxlbWVudHMuICAgKC0pUGFrdWRoYSBLYWNoY2hheW5hIHByZWFjaGVkIHRoZSBkb2N0cmluZSBvZiBBc2FzdmF0YXZhZGEuIFNvLCBzdGF0ZW1lbnQgMiBpcyBub3QgICBjb3JyZWN0LiAgIG8gTmlnYW50aGEgTmF0YXB1dHRhIGlzIHRoZSBuYW1lIGJ5IHdoaWNoIHRoZSBKYWluYSB0ZWFjaGVyLCBNYWhhdsSrcmEsIHdhcyAgIGtub3duIHRvIGhpcyBjb250ZW1wb3Jhcmllcy4gSGUgd2FzIGFsc28gY2FsbGVkIFZhcmRoYW1hbmEuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 73,
      "question" : "Which of the following places have major  Rock Edicts of Ashoka?  1. Rupnath  2. Shahbazgarhi  3. Sahasram  4. Girnar  5. Brahmagiri  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRocm91Z2ggdGhlIFJvY2sgRWRpY3RzIGFuZCBQaWxsYXIgRWRpY3RzLCBBc29rYSBwcmVhY2hlZCBoaXMgcG9saWN5IG9mIERoYW1tYSAgIHRocm91Z2hvdXQgdGhlIGV4dGVudCBvZiB0aGUgTWFnYWRoYSBFbXBpcmUgZHVyaW5nIGhpcyByZWlnbi4gVGhlcmUgYXJlIGZvdXJ0ZWVuICAgTWFqb3IgUm9jayBFZGljdHMsIHNldmVuIFBpbGxhciBFZGljdHMgYW5kIHNvbWUgTWlub3IgUm9jayBJbnNjcmlwdGlvbnMuICAgKC0pVGhlIE1ham9yIFJvY2sgRWRpY3RzIGFyZSBsb2NhdGVkIGF0ICAgbyBTaGFoYmF6Z2FyaGkgYW5kIE1hbmVzaHJhIG5lYXIgUGVzaGF3YXIuIFNvLCBwb2ludCAyIGlzIGNvcnJlY3QuICAgbyBLYWxzaSBuZWFyIERlaHJhZHVuICAgbyBTb3BhcmEgaW4gVGhhbmUgZGlzdHJpY3QgICBvIEdpcm5hciBuZWFyIEp1bmFnYXJoIGluIEthdGhpYXdhci4gU28sIHBvaW50IDQgaXMgY29ycmVjdC4gICBvIERoYXVsaSBpbiBCaHV2YW5lc2h3YXIgICAgbyBKYXVnYWRhIGluIEdhbmdhbSBkaXN0cmljdCBvZiBPZGlzaGEgICAoLSlJbiBLYXJuYXRha2EsIHRoZSBNaW5vciBSb2NrIEVkaWN0cyBhcHBlYXIgYW1vbmcgb3RoZXIgcGxhY2VzIGF0ICAgKC0pU2lkZGFwdXJhLCAgIG8gSmF0aW5nYS1SYXJuZXNod2FyYSAgICBvIEJyYWhtYWdpcmkuIFNvLCBwb2ludCA1IGlzIG5vdCBjb3JyZWN0LiAgICgtKSAgT3RoZXIgTWlub3IgUm9jayBFZGljdHMgYXJlIGZvdW5kIGF0ICAgbyAgIEJhaXJhdCBuZWFyIEphaXB1ciBpbiBSYWphc3RoYW4gICAgbyBNYXNraSBpbiBLYXJuYXRha2EgICBvIFJ1cG5hdGggbmVhciBKYWJhbHB1ciBpbiBNYWRoeWEgUHJhZGVzaC4gU28sIHBvaW50IDEgaXMgbm90IGNvcnJlY3QuICAgbyBTYWhhc3JhbSBpbiBCaWhhci4gU28sIHBvaW50IDMgaXMgbm90IGNvcnJlY3QuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 3 and 5 only  ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 2, 4 and 5 only  ",
        "option4" : " 1, 2, 3 and 4   "
      }
    },
    {
      "index" : 74,
      "question" : "Consider the following statements with  reference to the Pallava rule:  1. They contributed to the growth of  Brahmanical religion in their kingdom.  2. They did not perform rituals like  Ashvamedha (horse sacrifice).  3. Marco Polo visited Kanchipuram during  the reign of Narsimhavarman I.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBQYWxsYXZhcyBjb250cmlidXRlZCB0byB0aGUgZ3Jvd3RoIG9mIEJyYWhtYW5pY2FsIHJlbGlnaW9uIGluIHRoZWlyIGtpbmdkb20uIFNvLCAgIHN0YXRlbWVudHMgMSBpcyBjb3JyZWN0LiAgIG8gVGhlIEdoYXRpa2FzIGFuZCBNYXRoYXMgd2VyZSB0aGUgQnJhaG1hbmljYWwgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zICAgYXR0YWNoZWQgdG8gdGhlIFRlbXBsZXMuIFNhbnNrcml0LCB0aGUgbGFuZ3VhZ2Ugb2YgcHJpdmlsZWdlZCwgYmVjYW1lIHRoZSAgIHJlY29nbml6ZWQgbWVkaXVtIGluIHRoZSBCcmFoYW1hbmljYWwgaW5zdGl0dXRpb25zIG9mIHRoZSBwZXJpb2QuICAgbyBNb3N0IG9mIHRoZSBQYWxsYXZhIGtpbmdzIHdlcmUgdGhlIGZvbGxvd2VycyBvZiBib3RoIFZhaXNobmF2aXNtIGFuZCBTYWl2aXNtLiAgIG8gQmVzaWRlcyB0aGUgcGVyZm9ybWFuY2Ugb2YgVmVkaWMgc2FjcmlmaWNlcywgdGhlIHdvcnNoaXAgb2YgZ29kcyBCcmFobWEsICAgVmlzaG51IGFuZCBTaXZhIGJlY2FtZSBwb3B1bGFyLiAgIG8gQXMgZm9sbG93ZXJzIG9mIFZhaXNobmF2aXNtIGFuZCBTaGFpdmlzbSwgdGhlIFBhbGxhdmEgcnVsZXJzIGdhdmUgcGF0cm9uYWdlICAgbGFyZ2VseSB0byB0aGUgQnJhaG1hbmljYWwgZmFpdGguIEhvd2V2ZXIsIEJ1ZGRoaXNtIGFuZCBKYWluaXNtIGR1cmluZyB0aGlzICAgdGltZSBjb3VsZCBub3QgZmluZCByb3lhbCBwYXRyb25hZ2UuICAgKC0pVGhlaXIgaW5zY3JpcHRpb25zIGluZm9ybSB1cyB0aGF0IHRoZXkgcGVyZm9ybWVkIFZlZGljIHNhY3JpZmljZXMgbGlrZSB0aGUgQXNodmFtZWRoYSAgIChob3JzZSBzYWNyaWZpY2Ugcml0dWFsKS4gU28sIHN0YXRlbWVudCAyIGlzIG5vdCBjb3JyZWN0LiAgICgtKUl0IHdhcyBkdXJpbmcgdGhlIHJlaWduIG9mIE5hcnNpbWhhdmFybWFuIEkgdGhhdCB0aGUgZmFtb3VzIENoaW5lc2UgQnVkZGhpc3QgICB0cmF2ZWxsZXIgSGlldW4gVHNhbmcgKG5vdCBNYXJjbyBQb2xvKSB2aXNpdGVkIEthbmNoaXB1cmFtIGluIDY0MiBDRS4gU28sIHN0YXRlbWVudCAgIDMgaXMgbm90IGNvcnJlY3QuICAgbyBIaXVlbiBUc2FuZyBkdXJpbmcgaGlzIHZpc2l0IHRvIEthbmNoaXB1cmFtIG5vdGVkIHRoYXQgQnVkZGhpc20gd2FzIGluIGEgICB0aHJpdmluZyBjb25kaXRpb24uIFRoZXJlIHdlcmUgYWJvdXQgMTAwIFNhbmdoYXJhbWFzIChCdWRkaGlzdCBtb25hc3RlcmllcykgICBhbmQgMTAsMDAwIEJ1ZGRoaXN0IHByaWVzdHMgd2VyZSBlbmdhZ2VkIGluIHRoZSBzdHVkeSBvZiBNYWhheWFuYSAgIEJ1ZGRoaXNtLiAgICBUaGVyZWZvcmUsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 75,
      "question" : "Which of the following are Classical Dances  of India?   1. Manipuri  2. Odissi  3. Chhau  4. Sattriya  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKU1hbmlwdXJpOiBNYW5pcHVyaSBkYW5jZSwgYSBjbGFzc2ljYWwgZGFuY2Ugb2YgSW5kaWEsIGV2b2x2ZWQgaW4gTWFuaXB1ci4gSXQgaXMgYW5jaG9yZWQgICBpbiB0aGUgVmFpc2huYXZhIGZhaXRoIG9mIHRoZSBNZWl0ZWlzLCBvciBwZW9wbGUgb2YgdGhlIE1hbmlwdXIgdmFsbGV5LiBTbywgcG9pbnQgMSBpcyAgIGNvcnJlY3QuICAgKC0pT2Rpc3NpOiBUaGlzIGNsYXNzaWNhbCBkYW5jZSBvZiBJbmRpYSwgaGFzIGl0cyBvcmlnaW5zIGluIE9yaXNzYSwgd2hlcmUgaW4gaXRzIHJ1ZGltZW50YXJ5ICAgZm9ybSBpdCB3YXMgcGVyZm9ybWVkIGFzIHBhcnQgb2YgdGVtcGxlIHNlcnZpY2UgYnkgJ21haGFyaXMnIG9yIGZlbWFsZSB0ZW1wbGUgc2VydmFudHMuICAgU28sIHBvaW50IDIgaXMgY29ycmVjdC4gICAoLSlTYXR0cml5YTogJ1NhdHRyaXlhIGRhbmNlJyByZWZlcnMgdG8gdGhlIGJvZHkgb2YgZGFuY2UgYW5kIGRhbmNlZCBkcmFtYSBkZXZlbG9wZWQgaW4gICB0aGUgc2F0dHJhcyBvciBtb25hc3RlcmllcyBvZiBBc3NhbSBzaW5jZSB0aGUgc2l4dGVlbnRoIGNlbnR1cnksIHdoZW4gdGhlIFZhaXNobmF2YSAgIGZhaXRoIHByb3BhZ2F0ZWQgYnkgdGhlIHNhaW50IGFuZCByZWZvcm1lciBTaGFua2FyYWRldmEgKDE0NDktMTU4Nikgc3dlcHQgdGhlICAgbGFuZC4gIEl0IGlzIG9uZSBvZiB0aGUgY2xhc3NpY2FsIGRhbmNlcyBvZiBJbmRpYS4gU28sIHBvaW50IDQgaXMgY29ycmVjdC4gICAoLSlDaGhhdTogSXQgaXMgYSB0cmFkaXRpb24gZnJvbSBlYXN0ZXJuIEluZGlhICBhbmQgaXQgaXMgbm90IGEgY2xhc3NpY2FsIGRhbmNlIG9mIEluZGlhLiBTbywgICBwb2ludCAzIGlzIG5vdCBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1, 3 and 4 only  ",
        "option3" : " 1, 2 and 4 only  ",
        "option4" : " 2 and 3 only   "
      }
    },
    {
      "index" : 76,
      "question" : "Consider the following pairs:  Sl.  No.  Inscription  Description  1.    1. Ayodhya  inscription of  Dhanadeva  : Mentions that  Pushyamitra  Shunga  performed  ashvamedha  (horse sacrifice)  2.    2. Mandasor  inscription of  Kumaragupta  : Mentions about  migration of a  guild of silk- weavers of  Gujarat  3.    3. Kandahar  Bilingual Rock  Inscription  : Mentions the  Battle of the  Hydaspes  between  Alexander and  King Porus  How many pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluIHRoZSBBeW9kaHlhIGluc2NyaXB0aW9uIG9mIERoYW5hZGV2YSwgUHVzaHlhbWl0cmEgaXMgY3JlZGl0ZWQgd2l0aCB0aGUgICBwZXJmb3JtYW5jZSBvZiB0d28gYXNodmFtZWRoYSBvciBob3JzZSBzYWNyaWZpY2VzLiBUaGlzIGlzIGluZGljYXRpdmUgb2YgUHVzaHlhbWl0cmEncyAgIGhvbGQgb3ZlciBhIGxhcmdlIHRlcnJpdG9yeSBhbmQgYWxzbyBvZiBCcmFobWFuaWNhbCBvcnRob2RveHkuIFNvLCBwYWlyIDEgaXMgY29ycmVjdGx5ICAgbWF0Y2hlZC4gICAoLSlUaGUgTWFuZGFzb3IgaW5zY3JpcHRpb24gd2FzIHdyaXR0ZW4gYnkgS3VtYXJhZ3VwdGEgYW5kIHdhcyB3cml0dGVuIGJ5ICAgVmF0dGFzYmhhdHRhLiBJdCBpcyBrbm93biBhcyB0aGUgaW5zY3JpcHRpb24gb2YgdGhlIFNpbGsgV2VhdmVycy4gSXQgc3BlYWtzIG9mIHRoZSAgIG1pZ3JhdGlvbiBvZiBhIEd1aWxkIG9mIFNpbGstV2VhdmVycyBmcm9tIExhdGEgb3IgR3VqYXJhdCB0byBEYXNhcHVyYSBvciBNYW5kYXNvci4gICBTbywgcGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICgtKVRoZSBLYW5kYWhhciBCaWxpbmd1YWwgUm9jayBJbnNjcmlwdGlvbiwgYWxzbyBrbm93biBhcyB0aGUgS2FuZGFoYXIgRWRpY3Qgb2YgQXNob2thLCAgIGlzIGxvY2F0ZWQgaW4gS2FuZGFoYXIsIEFmZ2hhbmlzdGFuLiBUaGlzIGVhcmx5IGluc2NyaXB0aW9uIHdhcyB3cml0dGVuIGV4Y2x1c2l2ZWx5IGluICAgdGhlIEdyZWVrIGFuZCBBcmFtYWljIGxhbmd1YWdlcy4gSXQgaXMgb25lIG9mIHR3byBhbmNpZW50IGluc2NyaXB0aW9ucyBpbiBBZmdoYW5pc3RhbiAgIHRoYXQgY29udGFpbiBHcmVlayB3cml0aW5nLCB3aXRoIHRoZSBvdGhlciBiZWluZyB0aGUgS2FuZGFoYXIgR3JlZWsgSW5zY3JpcHRpb24sICAgd2hpY2ggaXMgd3JpdHRlbiBleGNsdXNpdmVseSBpbiB0aGUgR3JlZWsgbGFuZ3VhZ2UuIFNvLCBwYWlyIDMgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkLiAgIFNvLCBvbmx5IHR3byBwYWlycyBhcmUgY29ycmVjdGx5IG1hdGNoZWQuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " None of the pairs  ",
        "option2" : " Only one pair  ",
        "option3" : " Only two pairs  ",
        "option4" : " All the three pairs    Join Telegram Channel @cse_updates For More  t.me/cse_updates     13      "
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements with  reference to the ancient Tamilaham and  Deccan in India between 200 B.C to 300 A.D:  1. The society was characterised by  introduction of the Brahmanical varna  concept.  2. Irrigational facilities were not known in the  river valleys of Tamilaham.  3. Some women are found accepting the  titles of their husbands like Bhojiki and  Maharathini.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVNvY2lldHkgaW4gYW5jaWVudCBUYW1pbGFoYW0gd2FzIGNoYXJhY3RlcmlzZWQgYnkgdGhlIGdyYWR1YWwgYnJlYWtpbmcgdXAgb2Ygb2xkICAga2luc2hpcCB0aWVzIGFuZCB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSBCcmFobWFuaWNhbCB2YXJuYSBjb25jZXB0LiBTb2NpYWwgICBzdHJhdGlmaWNhdGlvbiBvciBpbmVxdWFsaXR5IGJldHdlZW4gZGlmZmVyZW50IHNvY2lhbCBncm91cHMgYXBwZWFyZWQgYW5kIHRoZXJlIHdhcyBhICAgYnJvYWQgZGlzdGluY3Rpb24gYmV0d2VlbiAnaGlnaCcgYW5kICdsb3cnLiBUaGUgaWRlYSBvZiB0aGUgZm91ci1mb2xkIGRpdmlzaW9uIG9mIHNvY2lldHkgICB3YXMgZmFtaWxpYXIgaW4gdGhlIERlY2Nhbi4gVGhlIHByYWN0aWNlIG9mIGNhbGxpbmcgcGVvcGxlIGFjY29yZGluZyB0byB0aGVpciBwcm9mZXNzaW9uICAgd2FzIHBvcHVsYXIuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKVRoZXJlIHdhcyBhbiBvdmVyYWxsIGluY3JlYXNlIGluIHRoZSBudW1iZXIgb2Ygc2V0dGxlbWVudHMgaW4gdGhlIERlY2NhbiBpbiB0aGUgcml2ZXIgICBiYXNpbnMsIG9uIHRoZSBjb2FzdHMgYW5kIG9uIHRoZSBwbGF0ZWF1IGR1cmluZyB0aGUgU2F0YXZhaGFuYSBwZXJpb2QgKDFzdCBDZW50dXJ5ICAgQi5DLiB0byB0aGUgM3JkIENlbnR1cnkgQS5ELikuIFRoZSBHb2RhdmFyaSB2YWxsZXkgaGFkIHRoZSBsYXJnZXN0IG51bWJlciBvZiAgIHNldHRsZW1lbnRzLiBJcnJpZ2F0aW9uIGZhY2lsaXRpZXMgd2VyZSBrbm93biBpbiB0aGUgZm9ybSBvZiB0YW5rcyBhbmQgd2VsbHMuIFRoZSAgIHdhdGVyIHdoZWVsIHdhcyB1c2VkIGZvciBsaWZ0aW5nIHdhdGVyLiBEaWdnaW5nIHRhbmtzIGFuZCB3ZWxscyB3ZXJlIGNvbnNpZGVyZWQgdG8gYmUgICBhIG1lcml0b3Jpb3VzIGFjdC4gU29tZSBydWxlcnMgYXJlIHByYWlzZWQgaW4gdGhlIGluc2NyaXB0aW9ucyBhcyB0aGUgbWFrZXJzIG9mIHRhbmtzLiAgIFJpY2ggcGVvcGxlIGFsc28gY29uc3RydWN0ZWQgdGFua3MgYW5kIHdlbGxzLiBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgKC0pSW4gRGVjY2FuLCBDYXN0ZSBydWxlcyB3ZXJlIG11Y2ggZmxleGlibGUgYW5kIHRoaXMgbWlnaHQgYmUgZHVlIHRvIG1peGluZyB1cCB3aXRoICAgZm9yZWlnbiBlbGVtZW50cy4gVGhlIGpvaW50IGZhbWlseSBzeXN0ZW0gd2FzIHRoZSBub3JtYWwgZmVhdHVyZSBvZiBzb2NpZXR5LiBNYWxlICAgZG9taW5hdGlvbiBpcyBjbGVhcmx5IGF0dGVzdGVkIHRvIGluIHNvY2lhbCBsaWZlLiBTb21ldGltZXMgc29tZSB3b21lbiBhcmUgZm91bmQgICBhY2NlcHRpbmcgdGhlIHRpdGxlcyBvZiB0aGVpciBodXNiYW5kcyBsaWtlIEJob2ppa2ksIE1haGFyYXRoaW5pLCBNYWhhc2VuYXBhdGluaSBldGMuICAgU28sIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 only  "
      }
    },
    {
      "index" : 78,
      "question" : "With reference to ancient Indian history, the  term 'Kahapana or Karsapana' was used for:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBFeHBsYW5hdGlvbjogICAoLSlJbiB0aGUgcGVyaW9kIGJldHdlZW4gdGhlIDZ0aCBjZW50dXJ5IEIuQy4gYW5kIDR0aCBjZW50dXJ5IEIuQy4gY29pbnMgY2FsbGVkICAgU2hhdGFtYW5hLCBLYWhhcGFuYSAoS2Fyc2FwYW5hKSwgZXRjLiB3ZXJlIHByZXZhbGVudC4gRXhjYXZhdGlvbiBoYXMgYWxzbyBzaG93biAgIHRoYXQgY29pbnMgaGFkIGNvbWUgaW4gdXNlIGJ5IHRoaXMgcGVyaW9kLiAgICAgKC0pVGhlIGFnZSBvZiBiYXJ0ZXIgd2FzIGFsbW9zdCBkcmF3aW5nIHRvIGEgY2xvc2UuIE5vdyB0aGUgb3JkaW5hcnkgbWVkaXVtIG9mICAgZXhjaGFuZ2Ugd2FzIGEgY29pbiBjYWxsZWQgS2FoYXBhbmEgKEthcnNhcGFuYSkuIEl0IHdhcyBvZiBjb3BwZXIgYW5kIHNpbHZlciBhbmQgICBtYXJrcyB3ZXJlIHB1bmNoZWQgb24gaXQgYnkgbWVyY2hhbnRzIG9yIHJ1bGVyJ3MgZ3VpbGRzLCBndWFyYW50ZWVpbmcgaXRzIHN0YW5kYXJkLiAgICAoLSlCYW5rcyB3ZXJlIHVua25vd24sIGFuZCBzdXJwbHVzIG1vbmV5IHdhcyBlaXRoZXIgY29udmVydGVkIGludG8gb3JuYW1lbnRzLCBvciAgIGhvYXJkZWQgaW4gamFycyBhbmQgYnVyaWVkIGluIHRoZSBncm91bmQsIG9yIHB1dCBpbiB0aGUgY3VzdG9keSBvZiBhIGZyaWVuZC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " unit of land measurement   ",
        "option2" : " punch-marked coins  ",
        "option3" : " head of a province   ",
        "option4" : " trading guilds   "
      }
    },
    {
      "index" : 79,
      "question" : "Consider the following statements with  reference to Prayagraj prashasti (Allahabad  Prashasti):  1. It mentions about the accession and  conquests of Samudragupta.  2. It was composed by Harisena in Sanskrit  language and Brahmi script.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVByYXlhZ3JhaiBQcmFzaGFzdGkgKHRpbGwgbm93IGtub3duIGFzIHRoZSBBbGxhaGFiYWQgUHJhc2hhc3RpKSBpbiBwcm9zZSBhbmQgdmVyc2UsIGlzICAgYSByZXRyb3NwZWN0aXZlIGdsb3dpbmcgYWNjb3VudCBvZiBTYW11ZHJhZ3VwdGEncyBwZXJzb25hbGl0eSwgcGVyc29uYWwgcXVhbGl0aWVzLCAgIGdyZWF0bmVzcyBhbmQgZ2xvcmlvdXMgZXhwbG9pdHMuICAgKC0pSXQgaXMgdGhlIG1vc3QgaW1wb3J0YW50IHNvdXJjZSB3aGljaCBnaXZlcyB1cyBpbmZvcm1hdGlvbiBhYm91dCB0aGUgYWNjZXNzaW9uIGFuZCAgIGNvbnF1ZXN0cyBvZiBTYW11ZHJhZ3VwdGEuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKUl0IHdhcyBjb21wb3NlZCBieSBoaXMgY291cnQgcG9ldCBIYXJpc2hlbmEgd2hvIGNvbXBvc2VkIDMzIGxpbmVzIHdoaWNoIHdlcmUgICBlbmdyYXZlZCBvbiBhIHBpbGxhci4gSXQgaXMgaW5jaXNlZCBpbiBTYW5za3JpdCBsYW5ndWFnZSBhbmQgQnJhaG1pIHNjcmlwdC4gU28sIHN0YXRlbWVudCAgIDIgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 80,
      "question" : "With reference to Indian history, Manganiyar  is:    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlNYW5nYW5peWFycyBhbG9uZyB3aXRoIHRoZSBMYW5naGEgY29tbXVuaXR5IGFyZSBrbm93biBmb3IgdGhlaXIgZm9sayBtdXNpYy4gVGhlICAgTGFuZ2FzIGFuZCBNYW5nYW5peWFycyBhcmUgaGVyZWRpdGFyeSBjb21tdW5pdGllcyBvZiBNdXNsaW0gbXVzaWNpYW5zIHJlc2lkaW5nICAgbW9zdGx5IGluIHdlc3Rlcm4gUmFqYXN0aGFuJ3MgSmFpc2FsbWVyIGFuZCBCYXJtZXIgZGlzdHJpY3RzIGFuZCBpbiBQYWtpc3RhbidzICAgVGhhcnBhcmthciBhbmQgU2FuZ2hhciBkaXN0cmljdHMgaW4gU2luZGguICAgICgtKVRoZWlyIHNvbmdzIGFyZSBwYXNzZWQgb24gZnJvbSBnZW5lcmF0aW9uIHRvIGdlbmVyYXRpb24gYXMgYSBmb3JtIG9mIG9yYWwgaGlzdG9yeSBvZiAgIHRoZSBkZXNlcnQuIFRoZWlyIGtleSBJbnN0cnVtZW50cyBhcmUgS2FtYWljaGEsIEtoYXJ0YWFsIGFuZCBEaG9sYWsuICAgKC0pVGhlIHRocmVlIHN1Yi1zZWN0cyBvZiBTdmV0YW1iYXJhIFNjaG9vbCBpbmNsdWRlOiAgIG8gU3RoYW5ha2F2YXNpOiBUaGV5IGJlbGlldmUgaW4gcHJheWluZyB0byBTYWludHMgcmF0aGVyIHRoYW4gdG8gYW4gaWRvbCBpbiBhICAgdGVtcGxlLiBUaGUgc2FpbnRzIHdlYXIgYSBtdWhhcGF0dGkgbmVhciB0aGVpciBtb3V0aCB0byBjb3ZlciBpdCB1bmxpa2UgICBNdXJ0aXB1amFrYXMuICAgbyBNdXJ0aXB1amFrYSAoRGVyYXZhc2kpOiBUaGV5IGtlZXAgaWRvbHMgb2YgdGhlIHRpcnRoYW5rYXJhcyBhdCB0aGVpciB0ZW1wbGVzICAgYW5kIHdvcnNoaXAgdGhlbSBhbmQgdGhlIHNhaW50cyBkbyBub3Qgd2VhciBhIG11aGFwYXR0aS4gICBvIFRlcmFwYW50aGk6IFRoZXkgcHJheSB0byBzYWludHMgcmF0aGVyIHRoYW4gdG8gYW4gaWRvbCBpbiBhIHRlbXBsZSwgbGlrZSAgIFN0aGFuYWthdmFzaS4gVGVyYXBhbnRoaSBzYWludHMgYWxzbyB3ZWFyIGEgbXVoYXBhdHRpIG5lYXIgdGhlaXIgbW91dGggdG8gICBjb3ZlciBpdC4gICAoLSlUaGUgVmlyc2hhaXZhcyBhcmUgYSBTaGFpdml0ZSBzZWN0IGluIEhpbmR1aXNtIHRoYXQgZW1lcmdlZCBpbiB0aGUgMTJ0aCBjZW50dXJ5IEFEICAgaW4gS2FybmF0YWthIGR1cmluZyB0aGUgcmVpZ24gb2YgS2FsYWNodXJpIGR5bmFzdHkuIFRoZXkgb3Bwb3NlZCBlbGFib3JhdGUgcml0dWFscyAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBwcmVzY3JpYmVkIGJ5IEhpbmR1IHByaWVzdHMuIFRoZSBzZWN0IHdhcyBmb3VuZGVkIGJ5IEJhc2F2YW5uYS4gVGhlIGZvbGxvd2VycyB3ZXJlICAgY2FsbGVkIFZpcnNoYWl2YSAoaGVyb2VzIG9mIFNoaXZhKSBvciB0aGUgTGluZ2F5YXRzICh3ZWFyZXJzIG9mIFNoaXZhbGluZ2EpLiAgICgtKU1hZGh5YW1hc2kgd2VyZSB0aGUgbWVkaWF0b3JzIHRvIHJlc29sdmUgZGlzcHV0ZXMgZHVyaW5nIHRoZSBWZWRpYyBwZXJpb2QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBSZWxldmFuY2U6IE1hbWUgS2hhbiwgYSB0cmFkaXRpb25hbCBNYW5nYW5peWFyIHNpbmdlciBmcm9tIFJhamFzdGhhbiwgYmVjYW1lIHRoZSBmaXJzdCBmb2xrICAgYXJ0aXN0IHRvIHdhbGsgb24gdGhlIHJlZCBjYXJwZXQgZXZlbnQgZm9yIHRoZSBJbmRpYW4gY29udGluZ2VudCBhdCB0aGUgQ2FubmVzIEZpbG0gRmVzdGl2YWwgICAyMDIyLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " a hereditary community of muslim   musicians residing mostly in western   Rajasthan  ",
        "option2" : " a sub-sect of Svetambra School of   Jainism  ",
        "option3" : " the community of folk dancers and martial   art performers from Manipur  ",
        "option4" : " a shaivite sect in Hinduism that emerged   during the reign of Kalachuri dynasty in   the 12th century AD   "
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following statements with  reference to Sangam age:  1. The Sangam literature is a compilation of  purely religious texts written in Tamil.   2. All the three Sangams were held at  Madurai, under the patronage of  Pandyas.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBFYXJseSBIaXN0b3JpYyBwZXJpb2Qgb2YgdGhlIFRhbWlsIGNvdW50cnksIHdoaWNoIGlzIGFsc28gY2FsbGVkIHRoZSBTYW5nYW0gQWdlLCBpcyAgIGdlbmVyYWxseSBwbGFjZWQgYmV0d2VlbiBmaWZ0aCBjZW50dXJ5IEIuQy4gYW5kIGZpZnRoIGNlbnR1cnkgQS5ELiAgICAoLSlUaGUgU2FuZ2FtIGxpdGVyYXR1cmUgaXMgdGhlIG9yYWwgYmFyZGljIGxpdGVyYXR1cmUgb2YgdGhlIGFuY2llbnQgVGFtaWxzLiBUaGUgbW9zdCAgIGludGVyZXN0aW5nIGZlYXR1cmUgb2YgU2FuZ2FtIExpdGVyYXR1cmUgaXMgdGhlIGZhY3QgdGhhdCB3aGlsZSBtb3N0IG9mIHRoZSBlYXJseSBsaXRlcmFyeSAgIHRyYWRpdGlvbnMgd2VyZSByZWxpZ2lvdXMgd3JpdGluZ3MgaW4gc29tZSBmb3JtIG9yIHRoZSBvdGhlciwgU2FuZ2FtIExpdGVyYXR1cmUgaXMgbm90ICAgcmVsaWdpb3VzIGluIHRoYXQgc2Vuc2UuIFRoZSBwb2VtcyBiZWxvbmdpbmcgdG8gd2hhdCBpcyBjYWxsZWQgU2FuZ2FtIExpdGVyYXR1cmUgYXJlICAgYmFzZWQgb24gdHdvIG1haW4gdGhlbWVzIC0gbG92ZSAvIGFrYW0sIGFuZCBoZXJvaXNtLyBwcmFpc2Ugb2YgS2luZ3MgYW5kIHRoZWlyICAgZGVlZHMvIHB1cmFtLiBTbywgc3RhdGVtZW50IDEgaXMgbm90IGNvcnJlY3QuICAgKC0pVGhlIHRocmVlIFNhbmdhbXMgYXJlIGNvbnNpZGVyZWQgdG8gaGF2ZSBiZWVuIGNvbnZlbmVkIHVuZGVyIHRoZSBwYXRyb25hZ2Ugb2YgdGhlICAgUGFuZHlhIGtpbmdzIG9mIE1hZHVyYWkuIFRoZSBGaXJzdCBTYW5nYW0sIGlzIGJlbGlldmVkIHRvIGJlIGhlbGQgYXQgTWFkdXJhaSwgICBhdHRlbmRlZCBieSBnb2RzIGFuZCBsZWdlbmRhcnkgc2FnZXMuIFRoZSBTZWNvbmQgU2FuZ2FtIHdhcyBoZWxkIGF0IEthcGFkYXB1cmFtICAgYW5kIG9ubHkgVG9sa2FwcGl5YW0gc3Vydml2ZXMgZnJvbSB0aGlzLiBUaGUgVGhpcmQgU2FuZ2FtIHdhcyBhbHNvIGhlbGQgYXQgTWFkdXJhaS4gICBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following pairs:  Sl.  No.  Places of  Ancient India   Present  name  1.    1. Bhagyanagar : Warangal  2.    2. Pragjyotishpura : Guwahati  3.    3. Purushapura : Peshawar  4.    4. Orugallu : Hyderabad  How many pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFNsLk5vLiBQbGFjZXMgb2YgQW5jaWVudCBJbmRpYSBUaGVpciBwcmVzZW50IG5hbWUgICAxLiAgICAxLiBCaGFneWFuYWdhciBIeWRlcmFiYWQuIFNvLCBwYWlyIDEgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkICAgMi4gICAgMi4gUHJhZ2p5b3Rpc2hwdXJhIEd1d2FoYXRpLiBTbywgcGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkICAgMy4gICAgMy4gUHVydXNoYXB1cmEgUGVzaGF3YXIuIFNvLCBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQgICA0LiAgICA0LiBPcnVnYWxsdSBXYXJhbmdhbC4gU28sIHBhaXIgNCBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQgICBTbywgb25seSB0d28gcGFpcnMgYXJlIGNvcnJlY3RseSBtYXRjaGVkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pairs  ",
        "option2" : " Only two pairs  ",
        "option3" : " Only three pairs  ",
        "option4" : " All the four pairs   "
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following statements:   1. Right action and right speech are among  the four noble truths taught by Buddha.  2. Buddhism recognizes the existence of  God and eternal soul.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgz",
      "description" : "IEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBFeHBsYW5hdGlvbjogICAgKC0pVGhlIGZvbGxvd2luZyBhcmUgRm91ciBOb2JsZSBUcnV0aHM6ICAgIG8gVGhlIHRydXRoIG9mIHN1ZmZlcmluZyAoRHVra2hhKSAgICBvIFRoZSB0cnV0aCBvZiB0aGUgb3JpZ2luIG9mIHN1ZmZlcmluZyAoU2FtdWRheWEpICAgIG8gVGhlIHRydXRoIG9mIHRoZSBjZXNzYXRpb24gb2Ygc3VmZmVyaW5nIChOaXJvZGhhKSAgICBvIFRoZSB0cnV0aCBvZiB0aGUgcGF0aCB0byB0aGUgY2Vzc2F0aW9uIG9mIHN1ZmZlcmluZyAoTWFnZ2EpICAgKC0pUmlnaHQgYWN0aW9uIGFuZCBSaWdodCBzcGVlY2ggYXJlIGFtb25nIHRoZSBlaWdodGZvbGQgcGF0aCB0YXVnaHQgYnkgQnVkZGhhLiBTbywgICBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICAgKC0pQnVkZGhhIGRpZCBub3QgaW52b2x2ZSBoaW1zZWxmIGluIHRoZSBmcnVpdGxlc3MgY29udHJvdmVyc2llcyByZWdhcmRpbmcgdGhlIHNvdWwgICAoYXRtYW4pIGFuZCB0aGUgQnJhaG1hIHdoaWNoIHJhZ2VkIHN0cm9uZ2x5IGR1cmluZyBoaXMgdGltZS4gSGUgYWRkcmVzc2VkIGhpbXNlbGYgICB0byB3b3JsZGx5IHByb2JsZW1zLiBIZSBzYWlkIHRoYXQgdGhlIHdvcmxkIGlzIGZ1bGwgb2Ygc29ycm93IGFuZCBwZW9wbGUgc3VmZmVyIG9uICAgYWNjb3VudCBvZiBkZXNpcmVzLiBJZiBkZXNpcmVzIGFyZSBjb25xdWVyZWQsIG5pcnZhbmEgd2lsbCBiZSBhdHRhaW5lZCwgdGhhdCBpcyBtYW4gd2lsbCAgIGJlIGZyZWUgZnJvbSBjeWNsZSBvZiBiaXJ0aCBhbmQgZGVhdGguIFVubGlrZSBIaW5kdWlzbSwgaXQgZG9lcyBub3QgYmVsaWV2ZSB0aGVyZSBpcyBhbiAgIGV0ZXJuYWwsIHVuY2hhbmdpbmcgJ3NvdWwnIHRoYXQgdHJhbnNtaWdyYXRlcyBmcm9tIG9uZSBsaWZlIHRvIHRoZSBuZXh0LiBCdWRkaGEgICBuZWl0aGVyIGFjY2VwdGVkIG5vciByZWplY3RlZCB0aGUgZXhpc3RlbmNlIG9mIEdvZC4gQnVkZGhpc20gZG9lcyBub3QgcmVjb2duaXplIHRoZSAgIGV4aXN0ZW5jZSBvZiBHb2QgYW5kIHNvdWwuIFNvLCBzdGF0ZW1lbnQgMiBpcyBub3QgY29ycmVjdC4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2    Join Telegram Channel @cse_updates For More  t.me/cse_updates     14       "
      }
    },
    {
      "index" : 84,
      "question" : "With reference to Ancient Indian history,  consider the following pairs:  Sl.  No.  Historical  person   Follower of  1.    1. Sariputra : Vaishnavism  2.    2. Madhvacharya : Jainism  3.    3. Utpaladeva : Shaivism  4.    4. Dignaga : Buddhism  How many pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVNhcmlwdXRyYSB3YXMgb25lIG9mIHRoZSB0b3AgZGlzY2lwbGVzIG9mIHRoZSBCdWRkaGEuIEhlIGlzIGNvbnNpZGVyZWQgdGhlIGZpcnN0IG9mIHRoZSAgIEJ1ZGRoYSdzIHR3byBjaGllZiBtYWxlIGRpc2NpcGxlcywgdG9nZXRoZXIgd2l0aCBNYXVkZ2FseWF5YW5hLiBTbywgcGFpciAxIGlzIG5vdCAgIGNvcnJlY3RseSBtYXRjaGVkLiAgICgtKVNocmkgTWFkaHZhY2hhcnlhIHdhcyBhIEluZGlhbiBwaGlsb3NvcGhlci1zYWdlIHdobyBmb3VuZGVkIHRoZSBEdmFpdGEgKGR1YWxpc3RpYykgICBzY2hvb2wgb2YgSGluZHUgcGhpbG9zb3BoeS4gU28sIHBhaXIgMiBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pVXRwYWxhZGV2YSB3YXMgYW4gSW5kaWFuIHBoaWxvc29waGVyIGFuZCB0aGVvbG9naWFuIGZyb20gS2FzaG1pci4gSGUgYmVsb25nZWQgdG8gICB0aGUgVHJpa2EgU2hhaXZhIHRyYWRpdGlvbiBhbmQgaXMgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5rZXIgb2YgdGhlIFByYXR5YWJoaWrDsWEgICBzY2hvb2wgb2YgbW9uaXN0aWMgaWRlYWxpc20uIFNvLCBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pRGlnbmFnYSB3YXMgYW4gSW5kaWFuIEJ1ZGRoaXN0IHNjaG9sYXIgYW5kIG9uZSBvZiB0aGUgQnVkZGhpc3QgZm91bmRlcnMgb2YgSW5kaWFuICAgbG9naWMuIFNvLCBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgU28sIG9ubHkgdHdvIHBhaXJzIGFyZSBjb3JyZWN0bHkgbWF0Y2hlZC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " Only three pairs  ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 85,
      "question" : "With reference to the Mauryan Empire, the  terms 'Vijita', 'Rajavishaya' and 'Pratyanta'  refer to types of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBsb2NhdGlvbiBvZiB0aGUgdmFyaW91cyBSb2NrIEVkaWN0cyBhbmQgUGlsbGFyIEVkaWN0cyB0aHJvdWdoIHdoaWNoIEFzaG9rYSAgIHByZWFjaGVkIGhpcyBwb2xpY3kgb2YgRGhhbW1hIGdpdmVzIHVzIGEgZmFpciBpZGVhIG9mIHRoZSBleHRlbnQgb2YgdGhlIE1hZ2FkaGEgICBlbXBpcmUgZHVyaW5nIGhpcyByZWlnbi4gICAoLSlBbHNvLCBpbiB0aGUgRWRpY3RzLCB0aGVyZSB3YXMgbWVudGlvbiBvZiB0aGUgdmFyaW91cyB0ZXJyaXRvcmllcywgd2hpY2ggcmVmZXIgdG8gdGhlICAgJ0NvbnF1ZXN0IHRlcnJpdG9yaWVzJyAoVmlqaXRhKSwgJ3JveWFsIHRlcnJpdG9yaWVzJyAoUmFqYXZpc2hheWEpIGFuZCB0aGUgYm9yZGVyaW5nICAgdGVycml0b3JpZXMgKFByYXR5YW50YSkuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Revenue officials  ",
        "option2" : " Council of Ministers  ",
        "option3" : " Tribal communities  ",
        "option4" : " Territories   "
      }
    },
    {
      "index" : 86,
      "question" : "With reference to Jainism, consider the  following statements:    1. Original doctrines taught by Mahavira  were contained in 14 old texts known as  purvas.  2. Mahavira believed that the world  functions according to an eternal law of  decay and development.  3. Jainism believed that the monastic life  was not always essential to attain  salvation and a householder can also  attain it.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg2",
      "description" : "IEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBFeHBsYW5hdGlvbjogICAgKC0pQWNjb3JkaW5nIHRvIEphaW4gdHJhZGl0aW9uIHRoZSBvcmlnaW5hbCBkb2N0cmluZXMgdGF1Z2h0IGJ5IE1haGF2aXJhIHdlcmUgY29udGFpbmVkICAgaW4gMTQgb2xkIHRleHRzIGtub3duIGFzICdwdXJ2YXMnLiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAgKC0pTWFoYXZpcmEgYmVsaWV2ZWQgdGhhdCB0aGUgd29ybGQgd2FzIG5vdCBjcmVhdGVkIGJ5IGFueSBzdXByZW1lIGNyZWF0b3IuIFRoZSB3b3JsZCAgIGZ1bmN0aW9ucyBhY2NvcmRpbmcgdG8gYW4gZXRlcm5hbCBsYXcgb2YgZGVjYXkgYW5kIGRldmVsb3BtZW50LiBIZSB0aG91Z2h0IHRoYXQgYWxsICAgb2JqZWN0cywgYW5pbWF0ZSBhbmQgaW5hbmltYXRlIGhhZCBhIHNvdWwuIEhlIGJlbGlldmVkIHRoYXQgdGhleSBmZWVsIHBhaW4gb3IgdGhlICAgaW5mbHVlbmNlIG9mIGluanVyeS4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgKC0pSmFpbmlzbSBiZWxpZXZlZCB0aGF0IHRoZSBtb25hc3RpYyBsaWZlIHdhcyBlc3NlbnRpYWwgdG8gYXR0YWluIHNhbHZhdGlvbiBhbmQgYSAgIGhvdXNlaG9sZGVyIGNvdWxkIG5vdCBhdHRhaW4gaXQuIEEgbW9uayBoYWQgdG8gb2JzZXJ2ZSBjZXJ0YWluIHN0cmljdCBydWxlcy4gSGUgaGFkIHRvICAgYWJhbmRvbiBhbGwgd29ybGRseSBwb3NzZXNzaW9ucy4gSGUgaGFkIHRvIHJvb3Qgb3V0IGV2ZXJ5IGhhaXIgb2YgaGlzIGhlYWQgYnkgaGlzIG93biAgIGhhbmRzLiBIZSBjb3VsZCB3YWxrIG9ubHkgZHVyaW5nIHRoZSBkYXksIHRha2luZyBjYXJlIHRoYXQgaGUgZGlkIG5vdCBraWxsIG9yIGluanVyZSBhbnkgICBiZWluZy4gSGUgaGFkIHRvIHRyYWluIGhpbXNlbGYgc28gYXMgbm90IHRvIGJlIGFmZmVjdGVkIGJ5IG9iamVjdHMgb2YgdGhlIHNlbnNlcy4gU28sICAgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgICBRODcuICAgIEV4cGxhbmF0aW9uOiAgICgtKVRoZSBpZGVhIG9mIHRoZSB2YXJuYSBkaXZpZGVkIHNvY2lhbCBvcmRlciBiZWNhbWUgdGhlIG5vcm0uIFRoZSBwb3NpdGlvbiBvZiB3b21lbiAgIG9mIGhpZ2hlciB2YXJuYSB3YXMgbG93ZXIgaW4gcG9zaXRpb24gdGhhbiB0aGUgbWVuIG9mIHRoZSBzYW1lIHZhcm5hLiBUaGUgd29tYW4gICBpbiBhIGZhbWlseSB3YXMgZXhwZWN0ZWQgdG8gZnVuY3Rpb24gYXMgYW4gaWRlYWwgd2lmZSBhbmQgbW90aGVyLiBJbiB0ZXh0cywgd29tZW4gICB3ZXJlIGV2ZW4gY29uc2lkZXJlZCB0byBiZSBvZiB0aGUgc2FtZSBjYXRlZ29yeSBhcyB0aGUgU2h1ZHJhcy4gU28sIHN0YXRlbWVudCAxIGlzICAgbm90IGNvcnJlY3QuICAgKC0pSG93ZXZlciwgdGhlIHBvc2l0aW9uIG9mIFNodWRyYXMgaW1wcm92ZWQgc2xpZ2h0bHkgZHVyaW5nIHRoaXMgcGVyaW9kLiBUaGV5IHdlcmUgbm93ICAgcGVybWl0dGVkIHRvIGxpc3RlbiB0byByZWNpdGF0aW9ucyBvZiB0aGUgUmFtYXlhbmEsIE1haGFiaGFyYXRhLCBhbmQgUHVyYW5hcyBidXQgbm90ICAgdGhlIFZlZGEsIHdoaWNoIHdhcyBzdGlsbCBjb25zaWRlcmVkIHNhY3JlZC4gU28sIHN0YXRlbWVudCAyIGlzIG5vdCBjb3JyZWN0LiAgIFRoZXJlZm9yZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 88,
      "question" : "With reference to Buddhism, consider the  following statements:  1. The Pali Cannon of Buddhism is divided  into three collections called Tripitaka.   2. Nagarjuna was one of the exponents of  Hinayana Buddhism.  3. The goal of Hinayana Buddhism was to  arrive at Nirvana in the present life.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlUaGUgUGFsaSBDYW5ub24gaXMgZGl2aWRlZCBpbnRvIHRocmVlIGNvbGxlY3Rpb25zIGNhbGxlZCBUcmlwaXRha2EuIFNvLCBzdGF0ZW1lbnQgMSBpcyAgIGNvcnJlY3QuICAgIG8gU3V0dGEgUGl0YWthIGNvbnRhaW5zIHRoZSBjb3JlIHRlYWNoaW5ncyBvZiBCdWRkaGEgaW4gdGhlIGZvcm1zIG9mIFN1dHRhcyAgIChkaXNjb3Vyc2UpLiAgICBvIFZpbmF5YSBQaXRha2EgY29uc2lzdHMgb2YgbWFpbmx5IHJ1bGVzIGdvdmVybmluZyB0aGUgZGFpbHkgbGlmZSBvZiBtb25rcyBhbmQgICBudW5zLCB0aGUgU2FuZ2hhIGFuZCBob3cgdG8ga2VlcCB0aGUgc2FuZ2hhIHdvcmtpbmcgaGFybW9uaW91c2x5LiAgICBvIEFiaGlkaGFtbWEgUGl0YWthIChBYmhpZGhhcm1hIGluIFNhbnNrcml0KSBpcyBoaWdoZXIsIHByZWNpc2UgYW5kIGFkdmFuY2VkICAgZm9ybXVsYXRpb24gb2YgQnVkZGhpc3QgdGVhY2hpbmdzLCBhdm9pZGluZyBpbmV4YWN0aXR1ZGVzIG9mIGNvbGxvcXVpYWwgICBjb252ZW50aW9uYWwgbGFuZ3VhZ2UgYXMgaXMgc29tZXRpbWVzIGZvdW5kIGluIHRoZSBTdXR0YSwgYW5kIGdpdmluZyBhIGRldGFpbGVkICAgZGVzY3JpcHRpb24gb2YgdGhlIHByaW5jaXBsZXMgYmVoaW5kIHRoZSBtZW50YWwgYW5kIHBoeXNpY2FsIHByb2Nlc3NlcyBvZiB0aGUgICBCdWRkaGEncyB0ZWFjaGluZy4gICAoLSlIb3dldmVyLCBkdWUgdG8gdGhlIG9wcG9zaXRpb24gZnJvbSBvcnRob2RveCBCdWRkaGlzbSBpdCBjb3VsZCBub3QgbWFrZSBtdWNoICAgaGVhZHdheSBpbiB0aGUgYmVnaW5uaW5nLiBJdCB3YXMgd2l0aCB0aGUgYWR2ZW50IG9mIE5hZ2FyanVuYSwgdGhlIG1vc3Qgb3V0c3RhbmRpbmcgICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgZXhwb25lbnQgb2YgTWFoYXlhbmEgdGhhdCBpdCBzdGFydGVkIGdhaW5pbmcgcG9wdWxhcml0eS4gU28sIHN0YXRlbWVudCAyIGlzIG5vdCAgIGNvcnJlY3QuICAgKC0pVGhlIGdvYWwgb2YgdGhlIEhpbmF5YW5hIHdhcyB0byBiZWNvbWUgYW4gQXJoYXQsIHRoYXQgaXMsIHRvIGFycml2ZSBhdCBOaXJ2YW5hIGluIHRoZSAgIHByZXNlbnQgbGlmZTsgYW4gaWRlYWwgb2Ygc2FsdmF0aW9uIG9mIHRoZSBzZWxmLCB3aXRoIG5vIHJlZmVyZW5jZSB0byB0aGUgd2VsZmFyZSBvZiBvdGhlcnMsICAgYW5kIHRodXMgYW4gZWdvaXN0aWMgaWRlYWwuIEFuZCB0aGF0IG9mIE1haGF5YW5hIHdhcyBvZiBhIG1vcmUgYWx0cnVpc3RpYyBzb3J0LiBJdCB3YXMgICB0byBiZWNvbWUgYSBCdWRkaGE7IGFuZCB0aGVvcmV0aWNhbGx5LCBhdCBsZWFzdCwgYW55b25lIG1pZ2h0IGFzcGlyZSB0byByZWFjaCAgIEJ1ZGRoYWhvb2QuIFNvLCBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgICgtKU9uZSB3aG8gaGFkIHRha2VuIHRoZSB2b3cgb2YgZnV0dXJlIEJ1ZGRoYWhvb2Qgd2FzIGNhbGxlZCBhIEJvZGhpc2F0dHZhLCBhbmQgaGUgICBuZWVkIG5vdCBiZSBhIG1vbmsuICAgICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 3 only   "
      }
    },
    {
      "index" : 89,
      "question" : "Consider the following statements with  reference to Tamil literature:  1. Tolkappiyam is a treatise on Tamil  grammar.  2. Tirukkural was written by Tiruvalluvar.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBUYW1pbCBTYW5nYW1zIHdlcmUgYXNzZW1ibGllcyBvZiBUYW1pbCBzY2hvbGFycyBhbmQgcG9ldHMgICAoLSlBcGFydCBmcm9tIHRoZSBoZXJvaWMgYW50aG9sb2dpZXMsIHRoZSBjbGFzc2lmaWVkIGNvcnB1cyBvZiBTYW5nYW0gbGl0ZXJhdHVyZSBpbmNsdWRlcyAgIFRvbGthcHBpeWFtLCBhIHRyZWF0aXNlIG9uIFRhbWlsIGdyYW1tYXIgYW5kIFBhdGluZW5raXprYW5ha2t1LCB0aGUgZWlnaHRlZW4gICBkaWRhY3RpYyB0ZXh0cyBhbHNvLiBUaGUgZmFtb3VzIFRpcnVra3VyYWwgYnkgVGlydXZhbGx1dmFyIGlzIG9uZSBvZiB0aGUgZWlnaHRlZW4gICBkaWRhY3RpYyB0ZXh0cy4gU28sIHN0YXRlbWVudHMgMSBhbmQgMiBhcmUgY29ycmVjdC4gICAoLSlUaGUgVGFtaWwgbGl0ZXJhcnkgdHJhZGl0aW9uIGlzIGluZGVwZW5kZW50IG9mIHRoZSBjbGFzc2ljYWwgU2Fuc2tyaXRpYyBsaXRlcmFyeSB0cmFkaXRpb24gICBvZiBJbmRpYS4gSXQgcmVwcmVzZW50cyBhIHBhcmFsbGVsIGxpbmd1aXN0aWMgdHJhZGl0aW9uIGluIHJlbGF0aW9uIHRvIFNhbnNrcml0LiAgICgtKUhvd2V2ZXIsIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgVGFtaWwgbGFuZ3VhZ2UgYW5kIGxpdGVyYXR1cmUgd2FzIG5ldmVyIGEgcHJvY2VzcyAgIGluIGlzb2xhdGlvbi4gRXZlbiB0aGUgZWFybGllc3Qgc3RyYXR1bSBvZiBUYW1pbCBsaXRlcmF0dXJlIGNvbnRhaW5zIGluZmx1ZW5jZXMgb2YgICBTYW5za3JpdC4gICAgVGhlcmVmb3JlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2       Join Telegram Channel @cse_updates For More  t.me/cse_updates     15      "
      }
    },
    {
      "index" : 90,
      "question" : "Consider the following statements with  reference to agriculture and land revenue of  Mauryan Empire:  1. Agriculture was highly centralised and  people were not permitted to practice  agriculture privately.  2. Ashoka exempted Lumbini which was the  birthplace of the Buddha from payment of all  taxes including bali and bhaga.  3. Sharecroppers were made to pay nearly  half of the total produce as taxes to the  state.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUFydGhzaGFzdHJhIGhhZCByZWNvZ25pc2VkIHRoZSBzZXR0bGVtZW50IG9mIHBlcm1hbmVudCB2aWxsYWdlcyBhcyBhIG1ldGhvZCBmb3IgdGhlICAgZXhwYW5zaW9uIG9mIGFncmFyaWFuIGVjb25vbXkuIFRoZXNlIHNldHRsZW1lbnRzIGVuc3VyZWQgYSBzb3VuZCBhbmQgc3RhYmxlICAgcmVzb3VyY2UgYmFzZSBmb3IgdGhlIFN0YXRlIHRvIGV4dHJhY3QgdGF4ZXMgYW5kIHRoZSBsYW5kIHRheCBmb3JtZWQgdGhlIGJ1bGsgb2YgaXQuIFRoaXMgICBwcm9jZXNzIG9mIHNldHRsZW1lbnQgd2FzIGNhbGxlZCBqYW5hcGFkYW5pdmVzYS4gICAoLSlTb21lIGxhbmRzIHdlcmUgc2l0YSBvciBjcm93biBsYW5kcy4gSW4gdGhlc2UgYXJlYXMsIHRoZSBLaW5nJ3MgYW5kIHRoZSBTdGF0ZSdzIHJpZ2h0cyAgIG9mIHBvc3Nlc3Npb24sIGN1bHRpdmF0aW9uLCBtb3J0Z2FnZSBhbmQgc2FsZSB3ZXJlIG5hdHVyYWxseSBzdXBlcmlvci4gQWdyaWN1bHR1cmUgaW4gICBvdGhlciBhcmVhcyBvZiB0aGUgTWF1cnlhbiBTdGF0ZSwga25vd24gYXMgamFuYXBhZGEgdGVycml0b3JpZXMsIHdhcyBpbiBhbGwgcHJvYmFiaWxpdHksICAgY2FycmllZCBvbiBwcml2YXRlbHkuIFNvLCBzdGF0ZW1lbnQgMSBpcyBub3QgY29ycmVjdC4gICAoLSlUaGUgTHVtYmluaSBFZGljdCBvZiBBc29rYSBzYXlzIHRoYXQgd2hlbiBoZSB2aXNpdGVkIEx1bWJpbmksIHRoZSBiaXJ0aHBsYWNlIG9mIHRoZSAgIEJ1ZGRoYSwgaGUgZXhlbXB0ZWQgdGhlIHZpbGxhZ2UgZnJvbSB0aGUgcGF5bWVudCBvZiBiYWxpIGFuZCByZWR1Y2VkIHRoZSBwYXltZW50ICAgb2YgYmhhZ2EgdG8gMS84dGguIEhlIGRpZCBub3QgZXhlbXB0IHRoZSB2aWxsYWdlIHRvdGFsbHkgZnJvbSB0aGUgcGF5bWVudCBvZiB0YXhlcy4gICBTbywgc3RhdGVtZW50IDIgaXMgbm90IGNvcnJlY3QuICAgKC0pU2hhcmVjcm9wcGluZyB3YXMgYW5vdGhlciB3YXkgYnkgd2hpY2ggdGhlIFN0YXRlIGNvbGxlY3RlZCBhZ3JpY3VsdHVyYWwgcmVzb3VyY2VzLiAgIFRoZSBzaGFyZWNyb3BwZXJzIHdlcmUgaW4gdGhlIGZpcnN0IHBsYWNlIHByb3ZpZGVkIHdpdGggc2VlZHMsIG94ZW4sIGV0Yy4sIGFuZCByZWNlaXZlZCAgIGFyYWJsZSBsYW5kIGZvciBjdWx0aXZhdGlvbi4gSW4gdGhpcyBraW5kIG9mIHNpdHVhdGlvbiwgdGhlIHBlYXNhbnRzIHByb2JhYmx5IGdhdmUgaGFsZiBvZiAgIHRoZSBwcm9kdWNlIHRvIHRoZSBTdGF0ZS4gU28sIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 3 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 91,
      "question" : "Consider the following pairs:   Sl.  No.  Parts of  Dance act  Characteristic  1. Nritta : Basic dance steps  devoid of any  expression or mood  2. Natya : Story that is  elaborated through  the dance recital  3. Nritya : Sentiment and the  emotions evoked  through dance  Which of the pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUFzIHBlciBBYmhpbmF5YSBEYXJwYW4gKDV0aC00dGggY2VudHVyeSBCQyksIE5hbmRpa2VzaHdhcmEncyBmYW1vdXMgdHJlYXRpc2Ugb24gICBkYW5jZSwgYW4gYWN0IGhhcyBiZWVuIGJyb2tlbiBpbnRvIHRocmVlIGJhc2ljIGVsZW1lbnRzOiAgICAoLSlOcml0dGE6IEl0IHJlZmVycyB0byB0aGUgYmFzaWMgZGFuY2Ugc3RlcHMsIHBlcmZvcm1lZCByaHl0aG1pY2FsbHkgYnV0IGRldm9pZCBvZiBhbnkgICBleHByZXNzaW9uIG9yIG1vb2QuIFNvLCBwYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pTmF0eWE6IEl0IG1lYW5zIGRyYW1hdGljIHJlcHJlc2VudGF0aW9ucyBhbmQgcmVmZXJzIHRvIHRoZSBzdG9yeSB0aGF0IGlzIGVsYWJvcmF0ZWQgICB0aHJvdWdoIHRoZSBkYW5jZSByZWNpdGFsLiBTbywgcGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgICgtKU5yaXR5YTogTnJpdHlhIHJlZmVycyB0byB0aGUgc2VudGltZW50IGFuZCB0aGUgZW1vdGlvbnMgZXZva2VkIHRocm91Z2ggZGFuY2UuIEl0ICAgaW5jbHVkZXMgdGhlIG1pbWUgYW5kIHRoZSBkaWZmZXJlbnQgbWV0aG9kcyBvZiBleHByZXNzaW9uIGluY2x1ZGluZyBtdWRyYXMgaW4gdGhlICAgZGFuY2UuIFNvLCBwYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 92,
      "question" : "Consider the following statements with  reference to Sangam age:  1. Transition from pastoralism to agriculture  was observed in the Marutam areas.  2. Nadu was considered as the foundation of  the polity.  3. The Vellalars were the customs officials  who regulated foreign trade.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDky",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRocmVlIGltcG9ydGFudCBjaGllZmRvbXMgZGV2ZWxvcGVkIGluIHRoZSBlY29sb2dpY2FsIHpvbmUgcmVmZXJyZWQgdG8gYXMgdGhlICAgbWFydXRhbSBpbiB0aGUgU2FuZ2FtIHBvZW1zLiBUaGlzIGFyZWEgY29tcHJpc2VkIHRoZSBmZXJ0aWxlIHJpdmVyIHZhbGxleXMgb24gdGhlICAgcGxhaW5zLiBUaGUgcGVhc2FudCBncm91cHMgd2hpY2ggc2V0dGxlZCBoZXJlIGJyb3VnaHQgYWJvdXQgdGhlIHRyYW5zaXRpb24gZnJvbSAgIGh1bnRpbmcgYW5kIHBhc3RvcmFsaXNtIHRvIGFncmljdWx0dXJlIGJhc2VkIGVjb25vbXkuIFNvLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgICgtKUFuIGltcG9ydGFudCBzb3VyY2UgZm9yIHN0dWR5aW5nIHRoZSBwb2xpdHkgb2YgU2FuZ2FtIHBlcmlvZCBpcyBUaXJ1a2t1cmFsIChhIHBvc3QgICBzYW5nYW0gd29yaykgYnkgVGlydXZhbGx1dmFyLiBUaXJ1dmFsbHV2YXIgcmVmZXJzIHRvIHRoZSBOYWR1IChyYXN0cmEpIGFzIHRoZSAgIGZvdW5kYXRpb24gb2YgdGhlIHBvbGl0eS4gSGUgcG9pbnRzIG91dCB0aGF0IHRoZSBraW5nJ3MgdHJlYXN1cnkgc2hvdWxkIGJlIHN0b2NrZWQgICB0aHJvdWdoIHZhcmlvdXMgc291cmNlcyBvZiBpbmNvbWUgdml6LiBsYW5kIHJldmVudWUsIHRyYW5zaXQgZHV0aWVzLCBjdXN0b20gYW5kIGFsc28gICB0aHJvdWdoIGFubmV4YXRpb24uIFNvLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgICgtKVRoZSBWZWxsYWxhciAoYWdyaWN1bHR1cmlzdHMpIHdlcmUgY2F0ZWdvcmlzZWQgaW50byB0aG9zZSB3aG8gdGhlbXNlbHZlcyBjdWx0aXZhdGVkICAgdGhlIGxhbmQgYW5kIHRob3NlIHdobyBlbXBsb3llZCBvdGhlcnMgdG8gY3VsdGl2YXRlIHRoZSBsYW5kLiBTbywgc3RhdGVtZW50IDMgaXMgbm90ICAgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 93,
      "question" : "With reference to Ancient Indian history,  consider the following pairs:  Sl.  No.  Ancient  University   Founded by  1.     Jagaddala  University  : Ramapala  2.     Odantapuri  University  : Gopala  3.     Pushpagiri  University  : Ashoka  4.     Takshashila  University  : Chandragupta  5.     Vikramshila  University  : Dharmapala  How many pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFNsLm5vLiBBbmNpZW50ICAgVW5pdmVyc2l0eSAgICBGb3VuZGVkIGJ5ICAgMS4gICAgICBKYWdhZGRhbGEgICBVbml2ZXJzaXR5ICAgOiBSYW1hcGFsYSAgIDIuICAgICAgT2RhbnRhcHVyaSAgIFVuaXZlcnNpdHkgICA6IEdvcGFsYSAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAzLiAgICAgIFB1c2hwYWdpcmkgICBVbml2ZXJzaXR5ICAgOiBBc2hva2EgICA0LiAgICAgIFRha3NoYXNoaWxhICAgVW5pdmVyc2l0eSAgIDogQmhhcmF0YSAgIDUuICAgICAgVmlrcmFtc2hpbGEgICBVbml2ZXJzaXR5ICAgOiBEaGFybWFwYWxhICAgNi4gICAgICBOYWxhbmRhICAgVW5pdmVyc2l0eSAgIDogS3VtYXJhZ3VwdGEgSSAgIFNvLCBwYWlycyAxLCAyLCAzIGFuZCA1IGFyZSBjb3JyZWN0bHkgbWF0Y2hlZC4gICBTbywgb25seSBmb3VyIHBhaXJzIGFyZSBjb3JyZWN0bHkgbWF0Y2hlZC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only two pairs  ",
        "option2" : " Only three pairs  ",
        "option3" : " Only four pairs  ",
        "option4" : " All five pairs   "
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements with  reference to the importance of  Jayaskandhavaras (camp of victory) during the  post-Gupta period:  1. The ruling dynasties issued land-grants to  religious institutions from  Jayaskandhavaras.  2. These territories, wherever they existed,  replaced capital cities or rajadhanis of the  respective regions.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKUluIHRoZSBwb3N0LUd1cHRhIHBlcmlvZCwgc29tZSByZWdpb25zIGJlY2FtZSBtb3JlIHBvd2VyZnVsIHRoYW4gb3RoZXJzLiBUaGVzZSAgIG5ldyBjZW50cmVzIHdlcmUgY2FsbGVkIEpheWFza2FuZGhhdmFyYXMgKGxpdGVyYWxseSBtZWFuaW5nICdjYW1wIG9mIHZpY3RvcnknKSBpbiAgIGVwaWdyYXBocy4gICAoLSlUaGVzZSBwbGFjZXMgYXJlIGxvY2F0ZWQgaW4gc3RyYXRlZ2ljYWxseSBzb3VuZCBhcmVhcywgbGlrZSB0aG9zZSBzaXR1YXRlZCBvbiBlbGV2YXRlZCAgIHJlZ2lvbnMgb3IgdGhvc2Ugc3Vycm91bmRlZCBieSBoaWxscyBvciByaXZlcnM7IHJlZ2lvbnMgd2hpY2ggd2VyZSB3ZWxsIGNvbm5lY3RlZCBieSAgIGxhbmQgYW5kIHdhdGVyIHJvdXRlcyBmb3IgZmFjaWxpdGF0aW5nIHRoZSBtb3ZlbWVudCBvZiB0aGUgYXJteSBvciB0aGUgZWFzeSAgIHRyYW5zcG9ydGF0aW9uIG9mIHN1cHBsaWVzIGFuZCBwcm92aXNpb25zIGZvciB0aGUgYXJteS4gICAgKC0pSXQgd2FzIGZyb20gdGhlc2UgSmF5YXNrYW5kaGF2YXJhcyB0aGF0IHRoZSBydWxpbmcgZHluYXN0aWVzIGlzc3VlZCBsYW5kLWdyYW50cyB0byAgIHJlbGlnaW91cyByZWNpcGllbnRzIGxpa2UgdGhlIGJyYWhtYW5hcyBvciB0aGUgbW9uYXN0ZXJpZXMgYW5kIHRlbXBsZXMuIFNvLCAgIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICAgKC0pRXZlbiB0aG91Z2ggdGhlIEpheWFza2FuZGhhdmFyYXMgYXNzdW1lZCBtb3JlIGltcG9ydGFuY2UgdGhhbiB0aGUgb2xkZXIgICByYWphZGhhbmlzIChjYXBpdGFscyksIHRoZXkgZGlkIG5vdCByZXBsYWNlIHRoZSByYWphZGhhbmlzLiBTbywgc3RhdGVtZW50IDIgaXMgbm90ICAgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2   Join Telegram Channel @cse_updates For More  t.me/cse_updates     16      "
      }
    },
    {
      "index" : 95,
      "question" : "Which of the following are Neolithic sites in  India?  1. Mehrgarh  2. Burzahom  3. Adichanallur  4. Chirand  5. Daojali Hading  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlJbiB0aGUgd29ybGQgY29udGV4dCwgdGhlIE5ldyBTdG9uZSBvciB0aGUgTmVvbGl0aGljIGFnZSBiZWdhbiBpbiA5MDAwIEJDLiBUaGUgICBOZW9saXRoaWMgcGVyaW9kIG1hcmtlZCB0aGUgYmVnaW5uaW5nIG9mIGFncmljdWx0dXJlIGFuZCBhbmltYWwgZG9tZXN0aWNhdGlvbi4gICBKb2luIFRlbGVncmFtIENoYW5uZWwgQGNzZV91cGRhdGVzIEZvciBNb3JlICB0Lm1lL2NzZV91cGRhdGVzICAgKC0pVGhlIHNpdGUgb2YgTWVocmdhcmggaGFzIHByb2R1Y2VkIGV2aWRlbmNlIG9mIGVhcmx5IE5lb2xpdGhpYyB0aW1lcywgZGF0aW5nIHRvIGMuIDcwMDAgICBCQ0UuIFdoZWF0IGFuZCBiYXJsZXkgd2VyZSBjdWx0aXZhdGVkIGFuZCBzaGVlcCwgZ29hdCBhbmQgY2F0dGxlIHdlcmUgICBkb21lc3RpY2F0ZWQuIFNvLCBwb2ludCAxIGlzIGNvcnJlY3QuICAgKC0pQnVyemFob20gaXMgYW4gaW1wb3J0YW50IHNpdGUgb2YgTmVvbGl0aGljIGN1bHR1cmUgaW4gS2FzaG1pci4gSXQgYWxzbyBwcm92aWRlcyAgIGV2aWRlbmNlIGZvciB0aGUgTWVnYWxpdGhpYyBhbmQgRWFybHkgSGlzdG9yaWMgUGVyaW9kcy4gTmVvbGl0aGljIGN1bHR1cmUgaW4gS2FzaG1pciAgIHJlZ2lvbiB3YXMgY29udGVtcG9yYXJ5IHRvIHRoZSBIYXJhcHBhbiBjaXZpbGlzYXRpb24uIEluIHRoaXMgcGxhY2UsIHBlb3BsZSBsaXZlZCBpbiBwaXQgICBob3VzZXMgaW4gb3JkZXIgdG8gZXNjYXBlIHRoZSBjb2xkIHdlYXRoZXIuIFNvLCBwb2ludCAyIGlzIGNvcnJlY3QuICAgKC0pQWRpY2hhbmFsbHVyLCBpcyBhIE1lZ2FsaXRoaWMgc2l0ZSBsb2NhdGVkIGluIFRob290aHVrdWRpIGRpc3RyaWN0LCBUYW1pbCBOYWR1LiAgVGhlICAgYnVyaWFsIG1vdW5kIGF0IEFkaWNoYW5hbGx1ciB5aWVsZGVkIHVybnMgYW5kIHBvdHRlcnkgb2YgdmFyaW91cyBraW5kcywgaXJvbiAgIGltcGxlbWVudHMsIGluY2x1ZGluZyBzcGFkZXMgYW5kIHdlYXBvbnMsIGJyb256ZSBvYmplY3RzIHJlcHJlc2VudGluZyB0aGUgZG9tZXN0aWMgICBhbmltYWxzIHN1Y2ggYXMgYnVmZmFsbywgZ29hdCBvciBzaGVlcCBhbmQgY29jaywgYW5kIHdpbGQgYW5pbWFscyBsaWtlIHRpZ2VyLCBhbnRlbG9wZSAgIGFuZCBlbGVwaGFudCBhbmQgdHJhY2VzIG9mIGNsb3RoIGFuZCB3b29kLiBTbywgcG9pbnQgMyBpcyBub3QgY29ycmVjdC4gICAoLSlDaGlyYW5kLCBLb2xkaWh3YSwgU2VudXdhciBhbmQgTWFoYWdhcmEgYXJlIGltcG9ydGFudCBOZW9saXRoaWMgc2l0ZXMgaW4gdGhlIEdhbmdlcyAgIHZhbGxleSBhbmQgaW4gQ2VudHJhbCBJbmRpYS4gVGhlc2Ugc2l0ZXMgYWxzbyBoYXZlIGV2aWRlbmNlIG9mIHBvdHRlcnkgYW5kIHBsYW50IGFuZCAgIGFuaW1hbCBkb21lc3RpY2F0aW9uLiBTbywgcG9pbnQgNCBpcyBjb3JyZWN0LiAgICgtKURhb2phbGkgSGFkaW5nIGFuZCBTYXJ1dGFydSBhcmUgdGhlIE5lb2xpdGhpYyBzaXRlcyBpbiB0aGUgQXNzYW0gcmVnaW9uLiBUaGlzIHJlZ2lvbiAgIGJlYXJzIGV2aWRlbmNlIGZvciBzaGlmdGluZyBjdWx0aXZhdGlvbi4gU28sIHBvaW50IDUgaXMgY29ycmVjdC4gICBUaGVyZWZvcmUsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 3 and 4 only  ",
        "option2" : " 2, 3 and 5 only  ",
        "option3" : " 1, 2, 4 and 5 only  ",
        "option4" : " 1, 2, 3, 4 and 5    "
      }
    },
    {
      "index" : 96,
      "question" : "Consider the following pairs:  Sl.  No  Tribal dance  Performed by  1.  Dhemsa  : Kandhs  2. Solakia  : Bonda  3. Dhamal  : Siddi  4. Gaur-Muria : Bodo  Which of the pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk2",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAoLSlEaGVtc2EgaXMgYW4gYWdlLW9sZCBmb2xrIGRhbmNlIGZvcm0gcG9wdWxhciBhbW9uZyB0aGUgUGFyYWphcywgR2FkYWJhcywgQmh1bWlhcywgICBCaG90cmFzIGFuZCBLYW5kaHMgc2VlbiBpbiBPZGlzaGEuIEl0IGhhcyBhIHVuaXF1ZSBjb21wb3NpdGlvbiwgc3R5bGUsIHJoeXRobSwgYm9keSAgIGxhbmd1YWdlIGFuZCBjb3N0dW1lLiBHaXJscyBkYW5jZSBieSBtYXRjaGluZyB0aGUgYmVhdCBvZiB0cmFkaXRpb25hbCBtdXNpY2FsICAgaW5zdHJ1bWVudHMuIFNvLCBwYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAgKC0pU2FybGFta2FpL1NvbGFraWEgaXMgYSBkYW5jZSBvcmlnaW5hdGluZyBmcm9tIHRoZSBQYXdpIGFuZCBNYXJhIGNvbW11bml0aWVzIGluIHRoZSAgIHNvdXRoZXJuIHBhcnQgb2YgTWl6b3JhbS4gVGhpcyBkYW5jZSBpcyBrbm93biBhcyAnU2FybGFta2FpJyB3aGVyZWFzIHRoZSBMdXNoYWlzICAgcmVmZXJyZWQgdG8gaXQgYXMgJ1JhbGx1IExhbScuIEl0IGlzIGEgd2FycmlvciBkYW5jZSBwZXJmb3JtZWQgdG8gY2VsZWJyYXRlIGEgdmljdG9yeSBpbiAgIHdhci4gU29uZ3MgYXJlIG5vdCBzdW5nOyBvbmx5IGdvbmdzIG9yIGN5bWJhbHMgb3IgZHJ1bXMgYXJlIHVzZWQgZm9yIG1ha2luZyBiZWF0cy4gICBTbywgcGFpciAyIGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZC4gICAoLSlEaGFtYWwgaXMgYSBkYW5jZSBmb3JtIHByYWN0aXNlZCBieSBTaWRkaSB0cmliZSBhbmQgcmVmbGVjdHMgdGhlaXIgcGFzc2lvbiBmb3IgaHVudGluZy4gICBEaG9sIChrbm93biBhcyBkaGFtYWwgaW4gdGhlaXIgdG9uZ3VlKSBvciBtdXNoaXJhLCBhcyB3ZWxsIGFzIHNtYWxsIGRob2xraXMgd2VyZSAgIHBsYXllZCBhcyBlc3NlbnRpYWwgaW5zdHJ1bWVudHMuIFdoZW4gaXQgY29tZXMgdG8gY29zdHVtZXMsIHRoZXkgaGFyZGx5IHdlYXIgICBhbnl0aGluZyBhYm92ZSB0aGUgd2Fpc3Qgd2hpbGUgdGhleSB3ZWFyIGVpdGhlciBhIHBpZWNlIG9mIGZhYnJpYyBvciBwZWFjb2NrIGZlYXRoZXJzICAgYmVsb3cgdGhlIHdhaXN0LiBIb3dldmVyLCBhIHdhaXN0IGJlbHQgd2l0aCBzaGVsbHMgaXMgYSBtdXN0LiBTbywgcGFpciAzIGlzIGNvcnJlY3RseSAgIG1hdGNoZWQuICAgKC0pR2F1ciBNdXJpYSAoQmlzb24gaG9ybikgaXMgYW4gaW1wb3J0YW50IHJpdHVhbGlzdGljIGRhbmNlIGZvcm0gb2YgdGhlIE11cmlhIHRyaWJlcyAgIHdobyBsaXZlIGluIHRoZSBCYXN0YXIgcmVnaW9uIG9mIENoaGF0dGlzZ2FyaC4gVGhlIGRhbmNlIGltaXRhdGVzIHRoZSBtb3ZlbWVudHMgb2YgICBhIGJpc29uIGFuZCBpcyBwZXJmb3JtZWQgaW4gZ3JvdXAgYnkgYm90aCBtZW4gYW5kIHdvbWVuLiBTbywgcGFpciA0IGlzIG5vdCBjb3JyZWN0bHkgICBtYXRjaGVkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgUmVsZXZhbmNlOiBOYXRpb25hbCBUcmliYWwgRGFuY2UgRmVzdGl2YWwgaW4gVmlzYWtoYXBhdG5hbSBzYXcgYSBnbG9yaW91cyBjb25mbHVlbmNlIG9mICAgdHJpYmFsIGNvbW11bml0aWVzIGFjcm9zcyBJbmRpYS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 3 only  ",
        "option2" : " 1, 2 and 4 only  ",
        "option3" : " 3 and 4 only  ",
        "option4" : " 2, 3 and 4 only   "
      }
    },
    {
      "index" : 97,
      "question" : "In these kinds of instruments, the pitch of the  note is determined by controlling the air  passage and the melody is played by using  the fingers to open and close the instrument.  The simplest of these instruments is the flute.  This is most likely the description of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk3",
      "description" : "IEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICBFeHBsYW5hdGlvbjogICBTdXNoaXJhIFZhZHlhOiAgICgtKUluIHRoZSBTdXNoaXJhIFZhZHlhIGdyb3VwLCBzb3VuZCBpcyBwcm9kdWNlZCBieSBibG93aW5nIGFpciBpbnRvIGEgaG9sbG93IGNvbHVtbi4gICAgKC0pVGhlIHBpdGNoIG9mIHRoZSBub3RlIGlzIGRldGVybWluZWQgYnkgY29udHJvbGxpbmcgdGhlIGFpciBwYXNzYWdlIGFuZCB0aGUgbWVsb2R5IGlzICAgcGxheWVkIGJ5IHVzaW5nIHRoZSBmaW5nZXJzIHRvIG9wZW4gYW5kIGNsb3NlIHRoZSBpbnN0cnVtZW50LiAgICgtKVRoZSBzaW1wbGVzdCBvZiB0aGVzZSBpbnN0cnVtZW50cyBpcyB0aGUgZmx1dGUuICAgKC0pT25lIG9mIHRoZSBtb3N0IGNvbW1vbiB5ZXQgZGlmZmljdWx0IHRvIHBsYXkgaW5zdHJ1bWVudCBpbiB0aGlzIGNhdGVnb3J5IGlzIHRoZSAgIFNoZWhuYWksIHdoaWNoIGlzIGEgZG91YmxlIHJlZWRlZCB3aW5kIGluc3RydW1lbnQgd2l0aCBhIHdpZGVuaW5nIHR1YmUgdG93YXJkcyB0aGUgICBlbmQuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Avanaddha Vadya  ",
        "option2" : " Ghana Vadya  ",
        "option3" : " Tata Vadya  ",
        "option4" : " Sushira Vadya     "
      }
    },
    {
      "index" : 98,
      "question" : "With reference to the Tanjore paintings,  consider the following statements:  1. These were patronised by the Maratha  rulers.  2. These are mostly created on glass and  wooden planks instead of on cloth.  3. These paintings use gemstones as well  as gold coatings.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKVRoZSBUaGFuamF2dXIgb3IgVGFuam9yZSBTY2hvb2wgaXMgZmFtb3VzIGZvciB0aGUgc3BlY2lhbCBzdHlsZSBvZiBkZWNvcmF0aXZlICAgcGFpbnRpbmdzLiBJdCB3YXMgcHJvYmFibHkgdGhlIHJlc3VsdCBvZiB0aGUgZGVmZWF0IG9mIFRoYW5qYXZ1ciBOYXlha2FzIGJ5IE1hcmF0aGFzICAgYW5kIHRoZSBmYWxsIG9mIFZpamF5YW5hZ2FyYSBlbXBpcmUuICAgICgtKVRoZSBUYW5qb3JlIHBhaW50aW5ncyB3ZXJlIGltbWVuc2VseSBwYXRyb25pc2VkIGJ5IHRoZSBNYXJhdGhhIHJ1bGVycyBkdXJpbmcgdGhlICAgMTh0aCBjZW50dXJ5LiBUaGVzZSBwYWludGluZ3MgcmVhY2hlZCB0aGVpciB6ZW5pdGggdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBNYWhhcmFqYSAgIFNlcmZvamkgSUkgb2YgTWFyYXRoYSBkeW5hc3R5LiBTbywgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAoLSlUaGUgJ2dlc3NvIHBhc3RlJywgd2hpY2ggaXMgYSBtaXh0dXJlIG9mIHdoaXRlIGxlYWQgcG93ZGVyLCBnYW1ib3NlIGFuZCBnbHVlLCBpcyAgIHVzZWQgaW4gTXlzb3JlIHBhaW50aW5ncy4gVGhpcyBnaXZlcyBhIHBhcnRpY3VsYXIgYmFzZSB0byB0aGUgcGFpbnRpbmcgdGhhdCBkZXZlbG9wcyAgIHNoZWVuIG9uIHRoZSBiYWNrZ3JvdW5kLiBUaGV5IGNvdW50ZXIgaXQgd2l0aCB0aGUgdXNlIG9mIG11dGVkIGNvbG91cnMgdGhhdCBhcmUgbm90ICAgc28gYnJpZ2h0IHNvIGFzIHRvIGNvdW50ZXJhY3QgdGhlIGJhY2tncm91bmQuICAgICgtKVRham9yZSBQYWludGluZ3MgYXJlIHVuaXF1ZSBhcyB0aGV5IGFyZSBtb3N0bHkgY3JlYXRlZCBvbiBnbGFzcyBhbmQgd29vZGVuIHBsYW5rcyAgIChQYWxhZ2FpIHBhZGFtKSBpbnN0ZWFkIG9mIGNsb3RoIGFuZCB2ZWxsdW0gYXMgcHJlZmVycmVkIGluIE5vcnRoIEluZGlhLiBUaGV5IHVzZWQgICBtYW55IHR5cGVzIG9mIGdlbXN0b25lcyBhbmQgY3V0IGdsYXNzZXMgZm9yIGVtYmVsbGlzaG1lbnRzIHRvIGNyZWF0ZSBsYXJnZXIgdGhhbiBsaWZlICAgaW1hZ2VzLiBTbywgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAoLSlUaGV5IGFyZSB1bmlxdWUgYmVjYXVzZSBvZiB0aGUgdXNlIG9mIGJyaWxsaWFudCBjb2xvdXIgcGF0dGVybnMgYW5kIHRoZSBsaWJlcmFsIHVzZSBvZiAgIGdvbGQgbGVhZi4gTW9zdCBvZiB0aGUgcGFpbnRpbmdzIGRlcGljdCBzbWlsaW5nIEtyaXNobmEgaW4gdmFyaW91cyBwb3NlcyBhbmQgdmFyaW91cyAgIG1ham9yIGV2ZW50cyBpbiBoaXMgbGlmZS4gU28sIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBSZWxldmFuY2U6IEEgMTl0aCBjZW50dXJ5IHBhaW50aW5nIG9mIFJhamEgU2VyZm9qaSBhbmQgaGlzIHNvbiBTaXZhamksIHdoaWNoIHdhcyBzdG9sZW4gZnJvbSAgIFNhcmFzd2F0aGkgTWFoYWwsIFRoYW5qYXZ1ciwgYSBmZXcgeWVhcnMgYWdvIGhhcyBiZWVuIHRyYWNlZCB0byB0aGUgUGVhYm9keSBFc3NleCBNdXNldW0sICAgTWFzc2FjaHVzZXR0cywgaW4gdGhlIFUuUy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 99,
      "question" : "Consider the following statements:  1. Dhrupad is of temple origin and finds its  mention in Natyashastra.  2. Khayal is characterised by the frequent  use of 'taans' in the composition.  3. Dhrupad reached its zenith in the court of  Jahangir.  4. Alap is given more room in the Khayal  music as compared to Dhrupad music.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk5",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKURocnVwYWQgaXMgb25lIG9mIHRoZSBvbGRlc3QgYW5kIGdyYW5kZXN0IGZvcm1zIG9mIEhpbmR1c3RhbmkgY2xhc3NpY2FsIG11c2ljIGFuZCAgIGZpbmRzIGl0cyBtZW50aW9uIGV2ZW4gaW4gTmF0eWFzaGFzdHJhICgyMDAgQkMtMjAwIEFEKS4gRGhydXBhZCBpbmNsdWRlcyB1c2Ugb2YgICBTYW5za3JpdCBzeWxsYWJsZXMgYW5kIGlzIG9mIHRlbXBsZSBvcmlnaW4uIEl0IGlzIHNhaWQgdGhhdCBkaHJ1cGFkIG93ZXMgaXRzIHJvb3RzIHRvIG9sZGVyICAgZm9ybXMgbGlrZSBQcmFiaGFuZGEgYW5kIERocnV2YXBhZGEuIFRoZSBuYW1lIGlzIGRlcml2ZWQgZnJvbSAnZGhydXZhJyBhbmQgJ3BhZGEsJyAgIHdoaWNoIG1lYW5zIHRoYXQgaXQgZGVub3RlcyBib3RoIHZlcnNlIGZvcm0gb2YgdGhlIHBvZXRyeSBhbmQgdGhlIHN0eWxlIGluIHdoaWNoIGl0IGlzICAgc3VuZy4gU28sIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAgICgtKVRoZSB3b3JkICdLaHlhbCcgaXMgZGVyaXZlZCBmcm9tIFBlcnNpYW4gYW5kIG1lYW5zICdpZGVhIG9yIGltYWdpbmF0aW9uJy4gVGhlIG9yaWdpbiAgIG9mIHRoaXMgc3R5bGUgd2FzIGF0dHJpYnV0ZWQgdG8gQW1pciBLaHVzcmF1LiBLaHlhbCBpcyBiYXNlZCBvbiB0aGUgcmVwZXJ0b2lyZSBvZiBzaG9ydCAgIHNvbmdzIHJhbmdpbmcgZnJvbSB0d28gdG8gZWlnaHQgbGluZXMuIEdlbmVyYWxseSwgYSBLaHlhbCBjb21wb3NpdGlvbiBpcyBhbHNvIHJlZmVycmVkICAgdG8gYXMgYSAnQmFuZGlzaCcuIE9uZSBvZiB0aGUgbW9zdCB1bmlxdWUgZmVhdHVyZXMgb2YgS2h5YWwgaXMgdGhlIGZyZXF1ZW50IHVzZSBvZiB0YWFucyAgIGluIHRoZSBjb21wb3NpdGlvbi4gU28sIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgKC0pQWx0aG91Z2ggRGhydXBhZCBjb25zb2xpZGF0ZWQgaXRzIHBvc2l0aW9uIGFzIGEgY2xhc3NpY2FsIGZvcm0gb2YgbXVzaWMgaW4gdGhlIDEzdGggICBjZW50dXJ5LCBpdCByZWFjaGVkIGl0cyB6ZW5pdGggaW4gdGhlIGNvdXJ0IG9mIEVtcGVyb3IgQWtiYXIuIEFrYmFyIGVtcGxveWVkIGFuZCAgIHBhdHJvbmlzZWQgbXVzaWNhbCBtYXN0ZXJzIGxpa2UgQmFiYSBHb3BhbCBEYXMsIFN3YW1pIEhhcmlkYXMgYW5kIFRhbnNlbiwgd2hvIHdhcyAgIGNvbnNpZGVyZWQgdG8gYmUgb25lIG9mIHRoZSBOYXZhcmF0bmEgb3IgbmluZSBnZW1zIG9mIHRoZSBNdWdoYWwgY291cnQuIEl0IGlzIGFsc28gICBzcGVjdWxhdGVkIHRoYXQgQmFpanUgQmF3cmEgc2FuZyBhdCB0aGUgY291cnQgb2YgQWtiYXIuIFRoZXJlIGlzIGV2aWRlbmNlIG9mIHNpbmdlcnMgICB3aG8gbWFzdGVyZWQgRGhydXBhZCBpbiB0aGUgY291cnQgb2YgUmFqYSBNYW4gU2luZ2ggVG9tYXIgaW4gR3dhbGlvci4gU28sICAgc3RhdGVtZW50IDMgaXMgbm90IGNvcnJlY3QuICAgKC0pU2luY2UgS2hheWFsIGlzIGNoYXJhY3Rlcml6ZWQgYnkgdGhlIGZyZXF1ZW50IHVzZSBvZiB0YWFucyBpbiBpdHMgY29tcG9zaXRpb24sIEFsYXAgaXMgICBnaXZlbiBtdWNoIGxlc3Mgcm9vbSBpbiB0aGUgS2h5YWwgbXVzaWMgYXMgY29tcGFyZWQgdG8gRGhydXBhZC4gRGhydXBhZCBzdGFydHMgICB3aXRoIEFsYXAgd2hpY2ggaXMgc3VuZyB3aXRob3V0IHdvcmRzLiBUaGUgdGVtcG8gcmlzZXMgZ3JhZHVhbGx5LCBhbmQgaXQgaXMgdGhlIG1ham9yICAgcGFydCBvZiB0aGUgcGVyZm9ybWFuY2UuIEFsYXAgaXMgcHVyZSBtdXNpYyB3aXRob3V0IHRoZSBkaXN0cmFjdGlvbiBvZiB3b3Jkcy4gU28sICAgc3RhdGVtZW50IDQgaXMgbm90IGNvcnJlY3QuICAgVGhlcmVmb3JlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 100,
      "question" : "'Nagbandha mudra' is an important posture  in Manipuri dance form. Which one of the  following statements best describes this  pose?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEwMA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgICgtKU5hZ2FiYW5kaGEgbXVkcmEgaXMgYW4gaW1wb3J0YW50IHBvc3R1cmUgaW4gTWFuaXB1cmkgICBkYW5jZSBmb3JtLiBJbiB0aGlzIG11ZHJhLCB0aGUgYm9keSBpcyBjb25uZWN0ZWQgdGhyb3VnaCAgIGN1cnZlcyBpbiB0aGUgc2hhcGUgb2YgJzgnLiBXaGVuIGJvdGggaGFuZHMgaGVsZCBpbiAgIHNhcnBhc2hpcnNoYSBoYXN0YSBhcmUgY3Jvc3NlZCBhdCB0aGUgd3Jpc3RzLCB3ZSBnZXQgdGhlICAgTmFhZ2FiYW5kaGEgaGFuZCBnZXN0dXJlLiBUaGlzIGdlc3R1cmUgaXMgdXNlZCB0byBzaG93ICAgaG93IHRoZSBzbmFrZXMgdHdpbmUgb3IgdGhlaXIgbmF0dXJlIG9mIGNvaWxpbmcgYW5kICAgZW5jaXJjbGluZy4gICAoLSknS2F0YWthbXVraGEgSGFzdGEnIGlzIG9uZSBvZiB0aGUgcHJpbmNpcGxlIG11ZHJhIG9mICAgQmhhcmF0bmF0eWFtLiBJbiB0aGlzLCB0aHJlZSBmaW5nZXJzIGFyZSBqb2luZWQgdG8gICBzeW1ib2xpc2UgJ09tJy4gICAoLSlUaGUgdHJpYmhhbmdhIHBvc3R1cmUgYW5kIHRoZSBDaG93ayBwb3N0dXJlIGFyZSB0d28gYmFzaWMgcG9zdHVyZXMgb2YgT2Rpc3NpIGRhbmNlICAgZm9ybS4gVGhlIHRyaWJoYW5nYSBpcyBhIHZlcnkgZmVtaW5pbmUgc3RhbmNlIHdoZXJlIHRoZSBib2R5IGlzIGRlZmxlY3RlZCBhdCB0aGUgbmVjaywgICB0b3JzbyBhbmQgdGhlIGtuZWVzLiBUaGUgY2hvd2sgaXMgYSBwb3NpdGlvbiBpbWl0YXRpbmcgYSBzcXVhcmUgLSBhIHZlcnkgbWFzY3VsaW5lICAgc3RhbmNlIHdpdGggdGhlIHdlaWdodCBvZiB0aGUgYm9keSBlcXVhbGx5IGJhbGFuY2VkLiAgIFRoZXJlZm9yZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgICAgICAgIEpvaW4gVGVsZWdyYW0gQ2hhbm5lbCBAY3NlX3VwZGF0ZXMgRm9yIE1vcmUgIHQubWUvY3NlX3VwZGF0ZXMgICAgICAgICAgSm9pbiBUZWxlZ3JhbSBDaGFubmVsIEBjc2VfdXBkYXRlcyBGb3IgTW9yZSAgdC5tZS9jc2VfdXBkYXRlcyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Three fingers are joined to symbolise Om  ",
        "option2" : " Feminine stance where the body is bent   at the neck, torso and the knees.  ",
        "option3" : " Body is connected through curves in the   shape of 8  ",
        "option4" : " A position imitating a square with the   weight of the body equally balanced.         Join Telegram Channel @cse_updates For More  t.me/cse_updates  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
