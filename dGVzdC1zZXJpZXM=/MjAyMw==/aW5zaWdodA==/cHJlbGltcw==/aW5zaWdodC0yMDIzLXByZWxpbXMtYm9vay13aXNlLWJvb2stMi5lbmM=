{
  "testId" : "insight-2023-prelims-book-wise-book-2",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/insight/prelims/insight-2023-prelims-book-wise-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements.\n\t1. Black soils are derivatives of trap lava.\n\t2. Black soil can be found in the interior regions of Gujarat, Maharashtra, Karnataka, and MadhyaPradesh that are on the Deccan plateau and the Malwa Plateau.\n\t3. Black soils develop wide cracks during dry season because of their high clay content.\n\t4. The iron-rich granular structure of Black Soil makes them highly prone to wind and watererosion.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW1vbmcgdGhlIGluIHNpdHUgc29pbHMgb2YgSW5kaWEsIHRoZSBibGFjayBzb2lscyBmb3VuZCBpbiB0aGUgbGF2YS1jb3ZlcmVkIGFyZWFzIGFyZSB0aGUgbW9zdCBjb25zcGljdW91cy4gVGhvc2Ugc29pbHMgYXJlIG9mdGVuIHJlZmVycmVkIHRvIGFzIHJlZ3VyIGJ1dCBhcmUgcG9wdWxhcmx5IGtub3duIGFzICdibGFjayBjb3R0b24gc29pbHMsJyBzaW5jZSBjb3R0b24gaGFzIGJlZW4gdGhlIG1vc3QgY29tbW9uIHRyYWRpdGlvbmFsIGNyb3AgaW4gYXJlYXMgd2hlcmUgdGhleSBhcmUgZm91bmQuIEJsYWNrIHNvaWxzIGFyZSBkZXJpdmF0aXZlcyBvZiB0cmFwIGxhdmEgYW5kIGFyZSBzcHJlYWQgbW9zdGx5IGFjcm9zcyBpbnRlcmlvciBHdWphcmF0LCBNYWhhcmFzaHRyYSwgS2FybmF0YWthLCBhbmQgTWFkaHlhIFByYWRlc2ggb24gdGhlIERlY2NhbiBsYXZhIHBsYXRlYXUgYW5kIHRoZSBNYWx3YSBQbGF0ZWF1LCB3aGVyZSB0aGVyZSBpcyBib3RoIG1vZGVyYXRlIHJhaW5mYWxsIGFuZCB1bmRlcmx5aW5nIGJhc2FsdGljIHJvY2suIEJlY2F1c2Ugb2YgdGhlaXIgaGlnaCBjbGF5IGNvbnRlbnQsIGJsYWNrIHNvaWxzIGRldmVsb3Agd2lkZSBjcmFja3MgZHVyaW5nIHRoZSBkcnkgc2Vhc29uLCBidXQgdGhlaXIgaXJvbi1yaWNoIGdyYW51bGFyIHN0cnVjdHVyZSBtYWtlcyB0aGVtIHJlc2lzdGFudCB0byB3aW5kIGFuZCB3YXRlciBlcm9zaW9uLiBUaGV5IGFyZSBwb29yIGluIGh1bXVzIHlldCBoaWdobHkgbW9pc3R1cmUtcmV0ZW50aXZlLCB0aHVzIHJlc3BvbmRpbmcgd2VsbCB0byBpcnJpZ2F0aW9uLiBUaG9zZSBzb2lscyBhcmUgYWxzbyBmb3VuZCBvbiBtYW55IHBlcmlwaGVyYWwgdHJhY3RzIHdoZXJlIHRoZSB1bmRlcmx5aW5nIGJhc2FsdCBoYXMgYmVlbiBzaGlmdGVkIGZyb20gaXRzIG9yaWdpbmFsIGxvY2F0aW9uIGJ5IGZsdXZpYWwgcHJvY2Vzc2VzLiBUaGUgc2lmdGluZyBoYXMgb25seSBsZWQgdG8gYW4gaW5jcmVhc2VkIGNvbmNlbnRyYXRpb24gb2YgY2xhc3RpYyBjb250ZW50cy4gQmxhY2sgc29pbCBvZiB0aGUgRGVjY2FuIHBsYXRlYXUgaXMga25vd24gZm9yIGdyb3dpbmcgY290dG9uLiBRIFNvdXJjZTogUmV2aXNpb246IDd0aCBOQ0VSVCBHZW9ncmFwaHk=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "2, 3 and 4",
        "option3" : "1 and 4",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following events can be considered 'black swans' based on theterminology popularised by about the author Nassim Nicholas Taleb?\n\t1. 2008 Global Financial Crisis\n\t2. Fall of the Soviet Union\n\t3. Potential massive capital outflows from India as predicted by the RBISelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogYW5kIExlYXJuaW5nOiBUaGUgYmxhY2sgc3dhbiB0aGVvcnkgd2FzIHBvcHVsYXJpc2VkIGJ5IGF1dGhvciBOYXNzaW0gTmljaG9sYXMgVGFsZWIgaW4gaGlzIDIwMDcgYm9vayAnVGhlIEJsYWNrIFN3YW4nLiAgKC0pSW4gaGlzIGJvb2ssIFRhbGViIGRvZXMgbm90IHRyeSB0byBsYXkgb3V0IGEgbWV0aG9kIHRvIHByZWRpY3Qgc3VjaCBldmVudHMsIGJ1dCBpbnN0ZWFkIHN0cmVzc2VzIG9uIGJ1aWxkaW5nICdyb2J1c3RuZXNzJyBpbiBzeXN0ZW1zIGFuZCBzdHJhdGVnaWVzIHRvIGRlYWwgd2l0aCBibGFjayBzd2FuIG9jY3VycmVuY2VzIGFuZCB3aXRoc3RhbmQgdGhlaXIgaW1wYWN0LiAoLSlUaGUgdGVybSBpdHNlbGYgaXMgbGlua2VkIHRvIHRoZSBkaXNjb3Zlcnkgb2YgYmxhY2sgc3dhbnMuICgtKVRoZSBFdXJvcGVhbnMgYmVsaWV2ZWQgYWxsIHN3YW5zIHRvIGJlIHdoaXRlIHVudGlsIDE2OTcsIHdoZW4gYSBEdXRjaCBleHBsb3JlciBzcG90dGVkIHRoZSBmaXJzdCBibGFjayBzd2FuIGluIEF1c3RyYWxpYS4gKC0pVGhlIG1ldGFwaG9yICdibGFjayBzd2FuIGV2ZW50JyBpcyBkZXJpdmVkIGZyb20gdGhpcyB1bnByZWNlZGVudGVkIHNwb3R0aW5nIGZyb20gdGhlIDE3dGggY2VudHVyeSwgYW5kIGhvdyBpdCB1cGVuZGVkIHRoZSBXZXN0J3MgdW5kZXJzdGFuZGluZyBvZiBzd2Fucy4gQSAnYmxhY2sgc3dhbicgZXZlbnQgaXMgYSByYXJlLCB1bnByZWRpY3RhYmxlIGV2ZW50IHRoYXQgY29tZXMgYXMgYSBzdXJwcmlzZSBhbmQgaGFzIGEgc2lnbmlmaWNhbnQgaW1wYWN0IG9uIHNvY2lldHkgb3IgdGhlIHdvcmxkLiBUaGVzZSBldmVudHMgYXJlIHNhaWQgdG8gaGF2ZSAzIGRpc3Rpbmd1aXNoaW5nIGNoYXJhY3RlcmlzdGljcyBUaGV5IGFyZSBleHRyZW1lbHkgcmFyZSBhbmQgb3V0c2lkZSB0aGUgcmVhbG0gb2YgcmVndWxhciBleHBlY3RhdGlvbnM7IFRoZXkgaGF2ZSBhIHNldmVyZSBpbXBhY3QgYWZ0ZXIgdGhleSBoaXQ7IGFuZCBUaGV5IHNlZW0gcHJvYmFibGUgaW4gaGluZHNpZ2h0IHdoZW4gcGxhdXNpYmxlIGV4cGxhbmF0aW9ucyBhcHBlYXIuIEJsYWNrIFN3YW4gRXZlbnRzIGluIHRoZSBwYXN0IC0gVGhlIDIwMDggZ2xvYmFsIGZpbmFuY2lhbCBjcmlzaXMgaXMgYSBibGFjayBzd2FuIGV2ZW50IHRyaWdnZXJlZCBieSBhIHN1ZGRlbiBjcmFzaCBpbiB0aGUgYm9vbWluZyBob3VzaW5nIG1hcmtldCBpbiB0aGUgVVMuIFRoZSBmYWxsIG9mIHRoZSBTb3ZpZXQgVW5pb24sIHRoZSB0ZXJyb3Jpc3QgYXR0YWNrIGluIHRoZSBVUyBpbiAyMDAxLCBhbHNvIGZhbGwgaW4gdGhlIHNhbWUgY2F0ZWdvcnkuIENvdmlkLTE5IHBhbmRlbWljIGlzIG5vdCBhIGJsYWNrIHN3YW4gZXZlbnQuIEluIGZhY3QsIGl0IGlzIGEgJ3doaXRlIHN3YW4nIGV2ZW50LCBhcyBpdCB3YXMgcHJlZGljdGFibGUuIEEgc3R1ZHkgYnkgdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSBoYXMgc3Bva2VuIGFib3V0IHRoZSBwb3NzaWJpbGl0eSBvZiBjYXBpdGFsIG91dGZsb3dzIHRvIHRoZSB0dW5lIG9mICQxMDAgYmlsbGlvbiBmcm9tIEluZGlhIGluIGNhc2Ugb2YgYSBtYWpvciBnbG9iYWwgcmlzayBzY2VuYXJpbyBvciBhICdibGFjayBzd2FuJyBldmVudC4gVGhlIFJCSSBoYXMgc2FpZCB0aGF0IGluIHRoaXMgJ2JsYWNrIHN3YW4nIGV2ZW50IGNvbXByaXNpbmcgYSBjb21iaW5hdGlvbiBvZiBzaG9ja3MsIHBvdGVudGlhbCBwb3J0Zm9saW8gb3V0Zmxvd3MgY2FuIHJpc2UgdG8gNy43JSBvZiBHRFAuIFNvLCB0aGVyZSBpcyBhIG5lZWQgZm9yIG1haW50YWluaW5nIGxpcXVpZCByZXNlcnZlcyB0byBxdWVsbCBzdWNoIHBvdGVudGlhbCBib3V0cyBvZiBpbnN0YWJpbGl0eS4gUSBTb3VyY2U6IGh0dHBzOi8vd3d3LmZpbmFuY2lhbGV4cHJlc3MuY29tL2Vjb25vbXkvYWR2ZXJzZS1nbG9iYWwtZXZlbnRzLW1heS1sZWFkLXRvLXVzZC0xMDAtYm4tcG9ydCBmb2xpby1vdXRmbG93cy1zYXlzLXJiaS1hcnRpY2xlLzI1NjcwMTIvIC4gICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 3,
      "question" : "Intercropping is used to produce a greater yield on a given piece of land by making useof resources or ecological processes that would otherwise not be utilized by a singlecrop. However, intercropping is uneconomical and undesirable for Rabi crops because\n\t1. the weather gets too cold for sustaining multiple crops\n\t2. such crops are cultivated on receding soil moistureWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW50ZXJjcm9wcGluZyBpcyBhIG11bHRpcGxlIGNyb3BwaW5nIHByYWN0aWNlIGludm9sdmluZyBncm93aW5nIHR3byBvciBtb3JlIGNyb3BzIGluIHByb3hpbWl0eS4gVGhlIG1vc3QgY29tbW9uIGdvYWwgb2YgaW50ZXJjcm9wcGluZyBpcyB0byBwcm9kdWNlIGEgZ3JlYXRlciB5aWVsZCBvbiBhIGdpdmVuIHBpZWNlIG9mIGxhbmQgYnkgbWFraW5nIHVzZSBvZiByZXNvdXJjZXMgb3IgZWNvbG9naWNhbCBwcm9jZXNzZXMgdGhhdCB3b3VsZCBvdGhlcndpc2Ugbm90IGJlIHV0aWxpemVkIGJ5IGEgc2luZ2xlIGNyb3AuIEl0IGFjdHMgYXMgYW4gaW5zdXJhbmNlIGFnYWluc3QgZmFpbHVyZSBvZiBjcm9wcyBpbiBhbiBhYm5vcm1hbCB5ZWFyLiBNb3Jlb3ZlciwgYXMgbGFuZCB1dGlsaXphdGlvbiBpbXByb3ZlcyB3aXRoIHRoZSB1c2Ugb2YgbW9yZSB0aGFuIG9uZSBjcm9wIHRoZSB5aWVsZCBhbmQgaW5jb21lIGxldmVscyBhcmUgaGlnaGVyLiAgSXQgYWxzbyBiYWxhbmNlcyBudXRyaWVudCB1cHRha2Ugc2luY2UgdGhlIHNhbWUgbnV0cmllbnQgaXMgbm90IGRlcGxldGVkIG92ZXIgYW5kIG92ZXIgYWdhaW4uIERpZmZlcmVudCBudXRyaWVudHMgYXJlIHVwdGFrZW4gZnJvbSBkaWZmZXJlbnQgbGV2ZWxzIG9mIHNvaWwgdGh1cyBoZWxwaW5nIGluIHRoZSBuYXR1cmFsIHJlY292ZXJ5IG9mIHNvaWwuIERpZmZlcmVudCBjcm9wcyBhcmUgZ3Jvd24gaW4gYWx0ZXJuYXRlIHJvd3MgYW5kIGFyZSBzb3duIGF0IGRpZmZlcmVudCB0aW1lcyB0byBwcm90ZWN0IHRoZSBzb2lsIGZyb20gcmFpbiB3YXNoIG9yIHJ1bm9mZi4gSG93ZXZlciwgSW50ZXJjcm9wcGluZyBpcyB1bmVjb25vbWljIGFuZCB1bmRlc2lyYWJsZSBkdXJpbmcgUmFiaSBzZWFzb24gYmVjYXVzZSBSYWJpIGNyb3BzIGFyZSBjdWx0aXZhdGVkIG1haW5seSBvbiByZWNlZGluZyBzb2lsIG1vaXN0dXJlIGFuZCB0aHVzLCBpdCBjcmVhdGVzIGNvbXBldGl0aW9uIGZvciBtb2lzdHVyZS4gR3JhbSBhbmQgU2FmZmxvd2VyIGNvbnN1bWUgbW9yZSBtb2lzdHVyZSBkdXJpbmcgdGhlIGVhcmx5IHBlcmlvZCB0aGVyZSB3aWxsIGJlIG1vaXN0dXJlIHN0cmVzcyBhdCBlYXIgaGVhZCBlbWVyZ2VuY2UgZm9yIFJhYmkgc29yZ2h1bSByZXN1bHRpbmcgaW4gbG93IHlpZWxkcywgU2VxdWVuY2Ugb3IgZG91YmxlIGNyb3BwaW5nLiBJbiBhIG5vcm1hbCB5ZWFyIChub3JtYWwgcmFpbmZhbGwpIHRoZXJlIGlzIHBvc3NpYmlsaXR5IG9mIHR3byBjcm9wcyBpbiBkcnkgbGFuZCBhcmVhIGdpdmluZyBpbmNyZWFzZWQgcHJvZHVjdGlvbiByYW5naW5nIGZyb20gMTAwIHRvIDMwMCBwZXJjZW50IG92ZXIgc2luZ2xlIGNyb3BwaW5nLiBTZWUgaHR0cHM6Ly9hZ3JpaW5mby5pbi9jcm9wLXJvdGF0aW9uLWFuZC1pdHMtZmFjdG9ycy1hbmQtYWR2YW50YWdlcy00NzgvIFNvbWUga2hhcmlmIGNyb3BzIHRoYXQgYXJlIG9mdGVuIGNvbnNpZGVyZWQgZm9yIGludGVyY3JvcHBpbmcgYXJlIFBlYXJsIG1pbGxldCwgUmVkIGdyYW0gb3IgSG9yc2UgZ3JhbSAvIEtpZG5leSBiZWFuIC8gY293IHBlYSBJbnRlciByb3cgb2YgcGVhcmwgbWlsbGV0LiBRIFNvdXJjZTogQVI6IFBhZ2UgMTQ6IDh0aCBOQ0VSVDogR2VvZ3JhcGh5IC4gICAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements.\n\t1. The project NIPUN is an initiative of the Ministry of Housing & Urban Affairs (MoHUA).\n\t2. NIPUN is a part of the Deendayal Antyodaya Yojana-National Urban Livelihoods Mission (DAY-NULM).\n\t3. NIPUN aims to train construction workers and aims to provide them with work opportunities inforeign countries..\n\t4. Niti Aayog is the principal nodal agency responsible for the overall execution of training,monitoring and candidate tracking under the programme.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUmVjZW50bHksIHRoZSBOYXRpb25hbCBJbml0aWF0aXZlIGZvciBQcm9tb3RpbmcgVXBza2lsbGluZyBvZiBOaXJtYW4gd29ya2VycyAoTklQVU4pIC0gYSBwcm9qZWN0IGZvciBza2lsbCB0cmFpbmluZyBvZiBjb25zdHJ1Y3Rpb24gd29ya2VycyAtIHdhcyBsYXVuY2hlZC4gIERlZW5kYXlhbCBBbnR5b2RheWEgWW9qYW5hLU5hdGlvbmFsIFVyYmFuIExpdmVsaWhvb2RzIE1pc3Npb24gKERBWS1OVUxNKSBpcyBhIENlbnRyYWxseSBTcG9uc29yZWQgU2NoZW1lIGFpbWVkIHRvIHJlZHVjZSBwb3ZlcnR5IGFuZCB2dWxuZXJhYmlsaXR5IG9mIHVyYmFuIHBvb3IgaG91c2Vob2xkcyBpbiB0aGUgY291bnRyeS4gVGhlIHByb2plY3QgTklQVU4gaXMgYW4gaW5pdGlhdGl2ZSBvZiB0aGUgTWluaXN0cnkgb2YgSG91c2luZyAmIFVyYmFuIEFmZmFpcnMgKE1vSFVBKSB1bmRlciBpdHMgZmxhZ3NoaXAgc2NoZW1lIG9mIHRoZSBEZWVuZGF5YWwgQW50eW9kYXlhIFlvamFuYS0gTmF0aW9uYWwgVXJiYW4gTGl2ZWxpaG9vZHMgTWlzc2lvbiAoREFZLU5VTE0pLiBJdCBhaW1zIHRvIHRyYWluIG92ZXIgMSBsYWtoIGNvbnN0cnVjdGlvbiB3b3JrZXJzLCB0aHJvdWdoIGZyZXNoIHNraWxsaW5nIGFuZCB1cHNraWxsaW5nIHByb2dyYW1tZXMgYW5kIHByb3ZpZGVzIHRoZW0gd2l0aCB3b3JrIG9wcG9ydHVuaXRpZXMgaW4gZm9yZWlnbiBjb3VudHJpZXMgYWxzby4gVGhpcyBpbml0aWF0aXZlIHdpbGwgZW5hYmxlIE5pcm1hbiB3b3JrZXJzIHRvIGJlIG1vcmUgcHJvZmljaWVudCBhbmQgc2tpbGxlZCB3aGlsZSBtYWtpbmcgdGhlbSBhZG9wdCBmdXR1cmUgdHJlbmRzIGluIHRoZSBjb25zdHJ1Y3Rpb24gaW5kdXN0cnkgYnkgaW5jcmVhc2luZyB0aGVpciBjYXBhYmlsaXRpZXMgYW5kIGRpdmVyc2lmeWluZyB0aGVpciBza2lsbCBzZXRzLiBUaGlzIGluaXRpYXRpdmUgaXMgZXhwZWN0ZWQgdG8gZXhwYW5kIGhvcml6b250YWxseSBhY3Jvc3MgdGhlIGluZHVzdHJ5LiBUaGUgTmF0aW9uYWwgU2tpbGwgRGV2ZWxvcG1lbnQgQ29ycG9yYXRpb24gKE5TREMpIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBTa2lsbCBEZXZlbG9wbWVudCAmIEVudHJlcHJlbmV1cnNoaXAgKE1TREUpIHdpbGwgYmUgdGhlIEltcGxlbWVudGF0aW9uIFBhcnRuZXIgZm9yIHRoZSBwcm9qZWN0IE5JUFVOLiBOU0RDIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIHRoZSBvdmVyYWxsIGV4ZWN1dGlvbiBvZiB0cmFpbmluZywgbW9uaXRvcmluZyBhbmQgY2FuZGlkYXRlIHRyYWNraW5nLiBUaGUgY291cnNlcyBhcmUgYWxpZ25lZCB3aXRoIE5hdGlvbmFsIFNraWxscyBRdWFsaWZpY2F0aW9ucyBGcmFtZXdvcmsgKE5TUUYpIGFuZCB3aWxsIGJlIGltcGFydGVkIGF0IGFjY3JlZGl0ZWQgYW5kIGFmZmlsaWF0ZWQgdHJhaW5pbmcgY2VudHJlcy4gVW5kZXIgTklQVU4sIE5TREMgd2lsbCBwcm92aWRlIHRyYWluZWVzIHdpdGggJ0thdXNoYWwgQmltYScsIHRocmVlLXllYXIgYWNjaWRlbnRhbCBpbnN1cmFuY2Ugd2l0aCBjb3ZlcmFnZSBvZiBScyAyIGxha2hzLCBkaWdpdGFsIHNraWxscyBzdWNoIGFzIGNhc2hsZXNzIHRyYW5zYWN0aW9ucyBhbmQgdGhlIEJISU0gYXBwLCBldGMuIC4gICAgICAgICBUaGUgTmF0aW9uYWwgUmVhbCBFc3RhdGUgRGV2ZWxvcG1lbnQgQ291bmNpbCAoTkFSRURDTykgYW5kIHRoZSBDb25mZWRlcmF0aW9uIG9mIFJlYWwgRXN0YXRlIERldmVsb3BlcnMnIEFzc29jaWF0aW9ucyBvZiBJbmRpYSAoQ1JFREFJKSBoYXZlIGpvaW5lZCBQcm9qZWN0IE5JUFVOIGFzIGluZHVzdHJ5IHBhcnRuZXJzLiBUaGV5IHdpbGwgaWRlbnRpZnkgdHJhaW5pbmcgam9iIHJvbGVzIG9mIGFzcGlyYXRpb25hbCB2YWx1ZSBpbiB0aGUgY29uc3RydWN0aW9uIHNlY3RvciBpbiBDLiBjb2xsYWJvcmF0aW9uIHdpdGggdGhlIFNTIFEgU291cmNlOiBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4P1BSSUQ9MTgzNTUzOQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "2 and 4",
        "option3" : "1 and 3",
        "option4" : "2, 3 and 4"
      }
    },
    {
      "index" : 5,
      "question" : "With reference to the Ijaradari system in British India, consider the followingstatements.\n\t1. Revenue assignment was directly related to the productivity of land under the Ijaradari system.\n\t2. The Ijaradari system was introduced by Clive.\n\t3. The right to collect revenue from the land was hereditary in nature under this system.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWZ0ZXIgdGhlIGJhdHRsZSBvZiBQbGFzc2V5LCB0aGUgQnJpdGlzaCBzZWN1cmVkIHRoZSBEaXdhbmkgcmlnaHRzIChyaWdodHMgdG8gY29sbGVjdCByZXZlbnVlKS4gV2hlbiBSb2JlcnQgQ2xpdmUgb2J0YWluZWQgdGhlIERpd2FuaSBvZiBCZW5nYWwsIGxhbmQgcmV2ZW51ZSB3YXMgc2V0dGxlZCBhbm51YWxseS4gVGhlIElqYXJhZGFyaSBzeXN0ZW0gd2FzIHRoZSBmaXJzdCBsYW5kIHRlbnVyZSBzeXN0ZW0gaW1wbGVtZW50ZWQgaW4gSW5kaWEgYnkgQnJpdGlzaC4gVW5kZXIgdGhpcyBzeXN0ZW0sIHJpZ2h0IG9mIGNvbGxlY3RpbmcgcmV2ZW51ZSBmcm9tIGEgcGFydGljdWxhciBhcmVhIHdhcyBhdWN0aW9uZWQgdG8gdGhlIGhpZ2hlc3QgYmlkZGVyLiBJdCB3YXMgaW50cm9kdWNlZCBpbiAxNzczIGJ5IFdhcnJlbiBIYXN0aW5ncyBpbiBCZW5nYWwgd2hlcmVieSBoZSBhc3N1bWVkIHRoYXQgYWxsIGxhbmQgYmVsb25ncyB0byBTdGF0ZS4gVGhlIGxhbmQgd2FzIGdpdmVuIHRvIGEgY29udHJhY3RvciAoZm9yIGNvbGxlY3RpbmcgcmV2ZW51ZSkgZm9yIGEgcGVyaW9kIG9mIGZpdmUgeWVhcnMuIE9uY2UgdGhleSBnb3QgdGhlIHJpZ2h0IHRvIGNvbGxlY3QgdGhlIHRheGVzLCB0aGUgYmFua2VycyBoYWQgdG8gcHJvbWlzZSB0byBwYXkgYSBmaXhlZCBzdW0gb2YgYW1vdW50IHRvIHRoZSBzdGF0ZS4gVGhpcyBzeXN0ZW0gd2FzIGEgZmFpbHVyZSBiZWNhdXNlIHRoZSBiaWRkaW5nIHdhcyBvZnRlbiBub3QgcmVsYXRlZCB0byB0aGUgYWN0dWFsIHByb2R1Y3Rpdml0eSBvZiB0aGUgbGFuZC4gVGhlIElqYXJhZGFycyB3ZXJlIG5vdCBpbnRlcmVzdGVkIGluIG1ha2luZyBpbXByb3ZlbWVudHMgaW4gbGFuZCBzaW5jZSB0aGUgbGFuZCB3YXMgYXVjdGlvbmVkIHBlcmlvZGljYWxseS4gVGhlIHBlYXNhbnRzIHdlcmUgZXhwbG9pdGVkIGJ5IHRoZSBjb250cmFjdG9ycyB0byBleHRyYWN0IG1vcmUgYW5kIG1vcmUgcmV2ZW51ZS4gUSBTb3VyY2U6IEFSOiBDaGFwdGVyIDEwOiBPdXIgUGFzdHMtSUk6IDh0aCBIaXN0b3J5IE5DRVJU",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3",
        "option2" : "2 and 3",
        "option3" : "1 only",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 6,
      "question" : "Sanjhi Art is the ancient art of hand-cutting designs on paper. It is practiced mainly inthe region of",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2FuamhpIEFydCBpcyB0aGUgYW5jaWVudCBhcnQgb2YgaGFuZC1jdXR0aW5nIGRlc2lnbnMgb24gcGFwZXIuIFRoaXMgYXJ0IG9mIHBhcGVyIHN0ZW5jaWxsaW5nIGlzIHByYWN0aXNlZCBhY3Jvc3MgTWF0aHVyYSBhbmQgVnJpbmRhdmFuIGluIFV0dGFyIFByYWRlc2guIEl0IGlzIGEgdHJhZGl0aW9uIG9mIGFydCB0aGF0IG9yaWdpbmF0ZWQgb3V0IG9mIHRoZSBjdWx0IG9mIEtyaXNobmEuIEl0IHdhcyB0cmFkaXRpb25hbGx5IHVzZWQgdG8gbWFrZSByaXR1YWxpc3RpYyBhbmQgY2VyZW1vbmlhbCByYW5nb2xpcyBpbiB0ZW1wbGVzIGRlZGljYXRlZCB0byBMb3JkIEtyaXNobmEuIFRoZSBhcnQgZ3JldyBpbiB0aGUgMTZ0aCBhbmQgMTd0aCBjZW50dXJpZXMsIHdoZW4gdGhlIHdhbGxzIGFuZCBmbG9vcnMgb2YgdGVtcGxlcyB3ZXJlIGRlY29yYXRlZCB3aXRoIFNhbmpoaSBtb3RpZnMuIFRoZSB0ZXJtIFNhbmpoaSBpcyBkZXJpdmVkIGZyb20gdGhlIEhpbmRpIHdvcmQgc2FuZGh5YSwgdGhlIHBlcmlvZCBvZiBkdXNrIHdpdGggd2hpY2ggdGhlIGFydCBmb3JtIGlzIHR5cGljYWxseSBhc3NvY2lhdGVkLiBUbyBjcmVhdGUgYSBTYW5qaGkgZGVzaWduLCBzdGVuY2lscyBhcmUgbWFkZSBvbiBwYXBlciAobW9zdGx5IGhhbmRtYWRlKSB1c2luZyBzcGVjaWFsbHkgZGVzaWduZWQgc2Npc3NvcnMuIFRoZXNlIHN0ZW5jaWxzIGFyZSBwbGFjZWQgb24gZmxhdCBzdXJmYWNlcyBvciB3YXRlciwgd2hlcmUgdGhlIHJhbmdvbGkgaGFzIHRvIGJlIGRyYXduLiBEcnkgY29sb3JzIGFyZSB0aGVuIHNpZnRlZCBvbnRvIHRoZSBzdXJmYWNlLiBGaWxsaW5nIHRoZSBjb2xvcnMgYW5kIGxpZnRpbmcgdGhlIHN0ZW5jaWxzIGFyZSBhcyBjcml0aWNhbCBhcyBjdXR0aW5nIHRoZSBkZXNpZ24uIFBlYWNvY2tzLCBidWxsb2NrIGNhcnRzLCBob3JzZXMsIGNvd3MsIGJ1dHRlcmZsaWVzLCBhbmQgdHJlZXMgYXJlIHNvbWUgb2YgdGhlIGNvbW1vbiBtb3RpZnMgdXNlZC4gVGhlIGludHJpY2F0ZSBjcmFmdHNtYW5zaGlwIHJlZmxlY3RzIHRoZSBhcnRpc3QncyBkZXZvdGlvbiBhbmQgdGhlIGludGltYXRlIGxvdmUgZm9yIHRoZSBCbHVlIEdvZC4gVG8gcHJvZHVjZSBhbiBlbGFib3JhdGUgU2FuamhpIGRlc2lnbiBjb3VsZCB0YWtlIGFueXdoZXJlIGJldHdlZW4gYW4gaG91ciBhbmQgYSBtb250aC4gLiAgICAgICAgIFEgU291cmNlOiBDdXJyZW50IGV2ZW50cw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Uttar Pradesh",
        "option2" : "Maharashtra",
        "option3" : "Chhattisgarh",
        "option4" : "Assam"
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements.\n\t1. The Extended Fund Facility (EFF) is a lending facility of the International Monetary Fund (IMF).\n\t2. EEF is given to countries for fulfilling developmental needs.\n\t3. EEF is extended on concessional terms to all countries.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRXN0YWJsaXNoZWQgaW4gMTk3NCwgdGhlIEV4dGVuZGVkIEZ1bmQgRmFjaWxpdHkgKEVGRikgaXMgbGVuZGluZyBmYWNpbGl0eSBvZiB0aGUgRnVuZCBvZiB0aGUgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIChJTUYpLiBJdCBpcyBwcmVzY3JpYmVkIGZvciBhIGNvdW50cnkgdGhhdCBpcyBzdWZmZXJpbmcgZnJvbSBtZWRpdW0tIGFuZCBsb25nZXItdGVybSBiYWxhbmNlIG9mIHBheW1lbnRzIHByb2JsZW1zLCB3aGljaCBhcmUgY2F1c2VkIGJ5IHN0cnVjdHVyYWwgd2Vha25lc3NlcyBhbmQgdGhhdCBuZWVkIGZ1bmRhbWVudGFsIGVjb25vbWljIHJlZm9ybXMuIC4gICAgICAgICBSZXBheW1lbnQgLSBBcyBzdHJ1Y3R1cmFsIHJlZm9ybXMgdG8gY29ycmVjdCBkZWVwLXJvb3RlZCB3ZWFrbmVzc2VzIG9mdGVuIHRha2UgdGltZSB0byBpbXBsZW1lbnQgYW5kIGJlYXIgZnJ1aXQsIEVGRiBlbmdhZ2VtZW50IGFuZCByZXBheW1lbnQgY292ZXIgbG9uZ2VyIHBlcmlvZHMgdGhhbiBtb3N0IEZ1bmQgYXJyYW5nZW1lbnRzLiBFeHRlbmRlZCBhcnJhbmdlbWVudHMgYXJlIHR5cGljYWxseSBhcHByb3ZlZCBmb3IgcGVyaW9kcyBvZiAzIHllYXJzLCBidXQgbWF5IGJlIGFwcHJvdmVkIGZvciBwZXJpb2RzIGFzIGxvbmcgYXMgNCB5ZWFycyB0byBpbXBsZW1lbnQgZGVlcCBhbmQgc3VzdGFpbmVkIHN0cnVjdHVyYWwgcmVmb3Jtcy4gQW1vdW50cyBkcmF3biB1bmRlciBhbiBFRkYgYXJlIHRvIGJlIHJlcGFpZCBvdmVyIDTCvS0xMCB5ZWFycyBpbiAxMiBlcXVhbCBzZW1pYW5udWFsIGluc3RhbGxtZW50cy4gSXQgaXMgZXh0ZW5kZWQgb24gbm9uLWNvbmNlc3Npb25hbCB0ZXJtcyAoaS5lLiBpbnRlcmVzdCByYXRlcyBhbmQgcGF5bWVudCBwZXJpb2RzIGFyZSBvbiBwYXIgd2l0aCB0aGUgbWFya2V0IGFuZCBubyBzcGVjaWFsIGNvbmNlc3Npb24gaXMgZ2l2ZW4pLiAgQnkgY29udHJhc3QsIGNyZWRpdHMgdW5kZXIgYSBTdGFuZC1CeSBBcnJhbmdlbWVudCAoU0JBKSBhcmUgcmVwYWlkIG92ZXIgM8K8LTUgeWVhcnMuIEJvcnJvd2luZyBMaW1pdCAtIEFzIHdpdGggb3RoZXIgSU1GIGxlbmRpbmcsIHRoZSBzaXplIG9mIGJvcnJvd2luZyB1bmRlciBhbiBFRkYgaXMgZ3VpZGVkIGJ5IGEgY291bnRyeSdzIGZpbmFuY2luZyBuZWVkcywgY2FwYWNpdHkgdG8gcmVwYXksIGFuZCB0cmFjayByZWNvcmQgd2l0aCBwYXN0IHVzZSBvZiBJTUYgcmVzb3VyY2VzLiBSZWNlbnRseSwgU3JpIExhbmthLCBpbiB0aGUgbWlkc3Qgb2YgYSBjcmlzaXMgb3ZlciBkZXRlcmlvcmF0aW9uIG9mIHRoZSBiYWxhbmNlIG9mIHBheW1lbnRzIChCT1ApIHBvc2l0aW9uLCBoYXMgcmVjZWl2ZWQgJCAxLjUgYmlsbGlvbiBmcm9tIHRoZSBJTUYgdGhyb3VnaCBhIDMteWVhci1sb25nIEV4dGVuZGVkIEZ1bmQgRmFjaWxpdHkgKEVGRikuIFRoZSBVbml0ZWQgU3RhdGVzIGhhcyBhZ3JlZWQgdG8gaGVscCBjYXNoLXN0cmFwcGVkIFBha2lzdGFuIG5lZ290aWF0ZSBhIGRlYWwgd2l0aCB0aGUgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIChJTUYpIGZvciB0aGUgcmV2aXZhbCBvZiB0aGUgY291bnRyeSdzIEV4dGVuZGVkIEZ1bmQgRmFjaWxpdHkgKGFuIGVjb25vbWljIGJhaWxvdXQgcHJvZ3JhbSkgd2l0aCB0aGUgSU1GLiBBcyB0aGUgbGFyZ2VzdCBzaGFyZWhvbGRlciwgdGhlIFVTIGhhcyBjb25zaWRlcmFibGUgaW5mbHVlbmNlIG92ZXIgdGhlIElNRidzIGRlY2lzaW9uLW1ha2luZy4gVGhlIElNRiBhbHNvIHByb3ZpZGVzIGNvbmNlc3Npb25hbCBmaW5hbmNpYWwgc3VwcG9ydCAoYXQgemVybyBpbnRlcmVzdCByYXRlcykgdGhyb3VnaCB0aGUgUG92ZXJ0eSBSZWR1Y3Rpb24gYW5kIEdyb3d0aCBUcnVzdCAoUFJHVCksIHdoaWNoIGlzIGJldHRlciB0YWlsb3JlZCB0byB0aGUgZGl2ZXJzaXR5IGFuZCBuZWVkcyBvZiBsb3ctaW5jb21lIGNvdW50cmllcy4gUSBTb3VyY2U6IGh0dHBzOi8vd3d3Lm5ld2luZGlhbmV4cHJlc3MuY29tL3dvcmxkLzIwMjIvanVuLzIwL3VzLWFncmVlZHRvLWhlbHAtcGFraXN0YW4td2l0aC1pbWYtdGFsa3MtIG9uLWVjb25vbWljLWJhaWxvdXQtcGFja2FnZS1tZWRpYS1yZXBvcnQtMjQ2Nzc3My5odG1sIGh0dHBzOi8vd3d3LmltZi5vcmcvZW4vQWJvdXQvRmFjdHNoZWV0cy9TaGVldHMvMjAxNi8wOC8wMS8yMC81Ni9FeHRlbmRlZC1GdW5kLUZhY2lsaXR5",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following about the Ayushman Bharat Digital Mission (ABDM).\n\t1. The ABDM aims to provide Unique Digital Health IDs for all Indian citizens.\n\t2. National Health Authority (NHA) under the Ministry of Health and Family Welfare will be theimplementing Agency for the mission..\n\t3. Ayushman Bharat Health Account (ABHA) Number standardizes the process of identification ofan individual across healthcare providers, both public and private health facilities.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGF1bmNoZWQgaW4gMjAyMSwgdGhlIEF5dXNobWFuIEJoYXJhdCBEaWdpdGFsIE1pc3Npb24gKEFCRE0pIGFpbXMgdG8gZGV2ZWxvcCB0aGUgYmFja2JvbmUgbmVjZXNzYXJ5IHRvIHN1cHBvcnQgdGhlIGludGVncmF0ZWQgZGlnaXRhbCBoZWFsdGggaW5mcmFzdHJ1Y3R1cmUgb2YgdGhlIGNvdW50cnkuIEl0IHdpbGwgYnJpZGdlIHRoZSBleGlzdGluZyBnYXAgYW1vbmdzdCBkaWZmZXJlbnQgc3Rha2Vob2xkZXJzIG9mIEhlYWx0aGNhcmUgZWNvc3lzdGVtIHRocm91Z2ggZGlnaXRhbCBoaWdod2F5cy4gVGhlIEFCRE0gYWltcyB0byBwcm92aWRlIFVuaXF1ZSBEaWdpdGFsIEhlYWx0aCBJRHMgKFVISUQpIGZvciBhbGwgSW5kaWFuIGNpdGl6ZW5zIHRvIGhlbHAgaG9zcGl0YWxzLCBpbnN1cmFuY2UgZmlybXMsIGFuZCBjaXRpemVucyBhY2Nlc3MgaGVhbHRoIHJlY29yZHMgZWxlY3Ryb25pY2FsbHkgd2hlbiByZXF1aXJlZC4gTmF0aW9uYWwgSGVhbHRoIEF1dGhvcml0eSAoTkhBKSB1bmRlciB0aGUgTWluaXN0cnkgb2YgSGVhbHRoIGFuZCBGYW1pbHkgV2VsZmFyZSB3aWxsIGJlIHRoZSBpbXBsZW1lbnRpbmcgQWdlbmN5LiBDb21wb25lbnRzIG9mIEFCRE0gQXl1c2htYW4gQmhhcmF0IEhlYWx0aCBBY2NvdW50IChBQkhBKSBOdW1iZXIgc3RhbmRhcmRpemVzIHRoZSBwcm9jZXNzIG9mIGlkZW50aWZpY2F0aW9uIG9mIGFuIGluZGl2aWR1YWwgYWNyb3NzIGhlYWx0aGNhcmUgcHJvdmlkZXJzLiBUaGlzIGlzIHRoZSBvbmx5IHdheSB0byBlbnN1cmUgdGhhdCB0aGUgY3JlYXRlZCBtZWRpY2FsIHJlY29yZHMgYXJlIGlzc3VlZCB0byB0aGUgY29ycmVjdCBpbmRpdmlkdWFsIG9yIGFjY2Vzc2VkIGJ5IEhlYWx0aCBJbmZvcm1hdGlvbiBVc2VyIHRocm91Z2ggYXBwcm9wcmlhdGUgY29uc2VudC4gSW4gb3JkZXIgdG8gaXNzdWUgdGhlIFVISUQsIHRoZSBzeXN0ZW0gbXVzdCBjb2xsZWN0IGNlcnRhaW4gYmFzaWMgZGV0YWlscyBpbmNsdWRpbmcgZGVtb2dyYXBoaWMgYW5kIGxvY2F0aW9uLCBmYW1pbHkvcmVsYXRpb25zaGlwLCBldGMuIFRoZSBBQkhBIE51bWJlciB3aWxsIGJlIHVzZWQgdG8gaWRlbnRpZnkgcGVyc29ucywgYXV0aGVudGljYXRlIHRoZW0sIGFuZCB0aHJlYWQgdGhlaXIgaGVhbHRoIHJlY29yZHMgKG9ubHkgd2l0aCB0aGUgaW5mb3JtZWQgY29uc2VudCBvZiB0aGUgcGF0aWVudCkgYWNyb3NzIG11bHRpcGxlIHN5c3RlbXMgYW5kIHN0YWtlaG9sZGVycy4gTGVhcm5pbmc6IEhlYWx0aGNhcmUgUHJvZmVzc2lvbmFscyBSZWdpc3RyeSAoSFBSKSBpcyBhIGNvbXByZWhlbnNpdmUgcmVwb3NpdG9yeSBvZiBhbGwgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWxzIGludm9sdmVkIGluIHRoZSBkZWxpdmVyeSBvZiBoZWFsdGhjYXJlIHNlcnZpY2VzIGFjcm9zcyBib3RoIG1vZGVybiAmIHRyYWRpdGlvbmFsIG1lZGljYWwgc3lzdGVtcy4gSGVhbHRoIEZhY2lsaXR5IFJlZ2lzdHJ5IChIRlIpIGlzIGEgY29tcHJlaGVuc2l2ZSByZXBvc2l0b3J5IG9mIGhlYWx0aCBmYWNpbGl0aWVzIG9mIHRoZSBuYXRpb24gYWNyb3NzIGRpZmZlcmVudCBzeXN0ZW1zIG9mIG1lZGljaW5lLiBJdCBpbmNsdWRlcyBib3RoIHB1YmxpYyBhbmQgcHJpdmF0ZSBoZWFsdGggZmFjaWxpdGllcyBpbmNsdWRpbmcgaG9zcGl0YWxzLCBjbGluaWNzLCBkaWFnbm9zdGljIGxhYnMgJiBpbWFnaW5nIGNlbnRlcnMsIHBoYXJtYWNpZXMsIGV0Yy4gRW5yb2xsaW5nIGluIHRoZSBIZWFsdGggRmFjaWxpdHkgUmVnaXN0cnkgd2lsbCBlbmFibGUgdGhlbSB0byBnZXQgY29ubmVjdGVkIHRvIEluZGlhJ3MgZGlnaXRhbCBoZWFsdGggZWNvc3lzdGVtLiBBQkhBIE1vYmlsZSBBcHAgKFBIUikgaXMgYW4gZWxlY3Ryb25pYyByZWNvcmQgb2YgaGVhbHRoLXJlbGF0ZWQgaW5mb3JtYXRpb24gb24gYW4gaW5kaXZpZHVhbCB0aGF0IGNvbmZvcm1zIHRvIG5hdGlvbmFsbHkgcmVjb2duaXplZCBpbnRlcm9wZXJhYmlsaXR5IHN0YW5kYXJkcy4gSXQgY2FuIGJlIGRyYXduIGZyb20gbXVsdGlwbGUgc291cmNlcyB3aGlsZSBiZWluZyBtYW5hZ2VkLCBzaGFyZWQsIGFuZCBjb250cm9sbGVkIGJ5IHRoZSBpbmRpdmlkdWFsLiBUaGUgbW9zdCBzYWxpZW50IGZlYXR1cmUgb2YgdGhlIFBIUiwgYW5kIHRoZSBvbmUgdGhhdCBkaXN0aW5ndWlzaGVzIGl0IGZyb20gdGhlIEVNUiBhbmQgRUhSLCBpcyB0aGF0IHRoZSBpbmZvcm1hdGlvbiBpdCBjb250YWlucyBpcyB1bmRlciB0aGUgY29udHJvbCBvZiB0aGUgaW5kaXZpZHVhbC4gLiAgICAgICAgIFVuaWZpZWQgSGVhbHRoIEludGVyZmFjZSAoVUhJKSBpcyBlbnZpc2lvbmVkIGFzIGFuIG9wZW4gcHJvdG9jb2wgZm9yIHZhcmlvdXMgZGlnaXRhbCBoZWFsdGggc2VydmljZXMuIFVISSBOZXR3b3JrIHdpbGwgYmUgYW4gb3BlbiBuZXR3b3JrIG9mIEVuZCBVc2VyIEFwcGxpY2F0aW9ucyAoRVVBcykgYW5kIHBhcnRpY2lwYXRpbmcgSGVhbHRoIFNlcnZpY2UgUHJvdmlkZXIgKEhTUCkgYXBwbGljYXRpb25zLiBRIFNvdXJjZTogaHR0cHM6Ly9lY29ub21pY3RpbWVzLmluZGlhdGltZXMuY29tIGVjaCBlY2gtYnl0ZXMvbW9yZS10aGFuLTgwMC1hY3RpdmUtaW50ZWdyYXRpb25zLW9uLWF5IHVzaG1hbi1iaGFyYXQtZGlnaXRhbC1taXNzaW9uLW5oYS9hcnRpY2xlc2hvdy85MjE4NDk4My5jbXM=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "1, 2 and 3",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 9,
      "question" : "The principal aim behind introducing the 'Dual administration' system by Clive was to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSXQgd2FzIGludHJvZHVjZWQgaW4gQmVuZ2FsIGZpcnN0IGJ5IFJvYmVydCBDbGl2ZS4gVGhlIHByaW5jaXBhbCBhaW0gb2YgQ2xpdmUgd2FzIHRvIG1ha2UgdGhlIE5hd2FiIGEgZmlndXJlaGVhZCBpbiB0aGUgbWF0dGVyIG9mIGFkbWluaXN0cmF0aW9uIGJ5IHRha2luZyBhd2F5IGZyb20gaGltIGFsbCB0aGUgcG93ZXJzLiBGb3IgdGhvc2UgcHVycG9zZXMgaGUgd2FzIGRldGVybWluZWQgdG8gZ2l2ZSBhIGNsZWFyIG1lYW5pbmcgd2l0aCByZWdhcmRzIHRvIHRoZSByZWxhdGlvbiBiZXR3ZWVuIHRoZSBOYXdhYiBvZiBCZW5nYWwgYW5kIEVhc3QgSW5kaWEgQ29tcGFueSBhbmQgdGhlIGNvbXBhbnkgd2l0aCB0aGUgRW1wZXJvciBvZiBEZWxoaS4gSGUgc3VjY2Vzc2Z1bGx5IHBlcnN1YWRlZCB0aGUgTmF3YWIgb2YgQmVuZ2FsIHRvIHByYWN0aWNhbGx5IGdyYW50IHRoZSBjb21wYW55IHRoZSBOaXphbWF0IG9yIG1pbGl0YXJ5IHBvd2VyIGFuZCBjcmltaW5hbCBqdXN0aWNlIGluIDE3NjUuIFd0aWhpbiBzaXggbW9udGhzLCB0aGUgRW1wZXJvciBTaGFoIEFsYW0gZ3JhbnRlZCB0aGUgY29tcGFueSB0aGUgRGl3YW5pLCBvciByaWdodCB0byBjb2xsZWN0IHJldmVudWUgZnJvbSBCZW5nYWwsIEJpaGFyLCBhbmQgT3Jpc3NhLiBUaHVzLCB0aGUgY29tcGFueSByZW1haW5lZCBpbiBjaGFyZ2Ugb2YgdGhlIGFybXkgYW5kIHJldmVudWUgd2hpY2ggYWRkZWQgdG8gaXRzIHBvd2VyIGFuZCBwb3NpdGlvbi4gVGhlIE5hd2FiIG9mIEJlbmdhbCByZW1haW5lZCBpbiBjaGFyZ2Ugb2YgY2l2aWwgYW5kIHBvbGljZSBhZG1pbmlzdHJhdGlvbiBieSByZWNlaXZpbmcgYW5udWFsbHkgYSBzdW0gb2YgcnVwZWVzIDUzIGxha2hzIGZyb20gdGhlIGNvbXBhbnkuIFRodXMsIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBCZW5nYWwgd2FzIHNoYXJwbHkgZGl2aWRlZCBiZXR3ZWVuIHRoZSBjb21wYW55IGFuZCB0aGUgTmF3YWIgYW5kIHdhcywgdGhlcmVmb3JlLCBjYWxsZWQgdGhlIER1YWwgR292ZXJubWVudC4gUSBTb3VyY2U6IEFSOiA4dGggTkNFUlQgSGlzdG9yeTogT3VyIFBhc3RzIElJSQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "make the Nawab of the territory a mere figurehead in matters of administration",
        "option2" : "annex new territories by expanding British administration",
        "option3" : "Indianize the police administration and separate the judicial stream from the police stream",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following is/are the members of the Asian and Pacific Council (ASPAC)?\n\t1. Japan\n\t2. Australia\n\t3. India\n\t4. New Zealand\n\t5. MaldivesSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIDd0aCBtaW5pc3RlcmlhbCBjb25mZXJlbmNlIG9mIHRoZSBBc2lhbiBhbmQgUGFjaWZpYyBDb3VuY2lsIChBU1BBQykgd2FzIGNvbmNsdWRlZCBlbXBoYXNpc2luZyB0aGUgcGVhY2VmdWwgYW5kIG5vbi1taWxpdGFyeSBuYXR1cmUgb2YgdGhlIENvdW5jaWwuIFRoZSBBc2lhbiAmIFBhY2lmaWMgQ291bmNpbCAoQVNQQUMpIHdhcyBmb3JtZWQgaW4gU2VvdWwgKFNvdXRoIEtvcmVhKSBpbiAxOTY2IGJ5IDkgbm9uLSBDb21tdW5pc3QgQXNpYW4gYW5kIFBhY2lmaWMgbmF0aW9ucy4gSXQgaXMgYSByZWdpb25hbCBvcmdhbml6YXRpb24gaW4gdGhlIEZhciBFYXN0IGFuZCBpbiB0aGUgd2VzdGVybiBwYXJ0IG9mIHRoZSBQYWNpZmljIE9jZWFuLiBUaGlzIENvdW5jaWwgaXMgbm90IGEgcG9saXRpY2FsIG9yIG1pbGl0YXJ5IGFycmFuZ2VtZW50IGRpcmVjdGVkIGFnYWluc3Qgb3RoZXIgbmF0aW9ucy4gQnV0IGl0IHdhcyBmb3JtZWQgdG8gcHJlc2VydmUgdGhlaXIgaW50ZWdyaXR5IGFuZCBzb3ZlcmVpZ250eSBpbiBkaWUgZmFjZSBvZiBleHRlcm5hbCB0aHJlYXRzLiBBU1BBQyBpcyBhbiBvcmdhbmlzYXRpb24gZm9yIHJlZ2lvbmFsIGNvLW9wZXJhdGlvbiBwdXJzdWluZyBwZWFjZSBhbmQgcHJvZ3Jlc3MgaW4gdGhlIEFzaWFuIGFuZCBQYWNpZmljIHJlZ2lvbi4gSXQgZGV2b3RlcyBpdHMgZWZmb3J0cyB0byBwcm9tb3RlIGNvLW9wZXJhdGlvbiBpbiBlY29ub21pYyB0ZWNobmljYWwsIHNvY2lhbCwgY3VsdHVyYWwsIGFuZCBvdGhlciBmaWVsZHMuIE1lbWJlcnMgLSBKYXBhbiwgQXVzdHJhbGlhLCBOZXcgWmVhbGFuZCwgVGhhaWxhbmQsIHRoZSBQaGlsaXBwaW5lcywgTWFsYXlzaWEsIFNvdXRoIEtvcmVhLCBTb3V0aCBWaWV0bmFtLCBhbmQgVGFpd2FuIFRoZSBDb3VuY2lsIGhhcyBhbiBvcGVuIGRvb3IgcG9saWN5LCB3aGljaCBtZWFucyB0aGF0IHRoZSBvcmdhbmlzYXRpb24gaGFzIHBlcm1pdHRlZCBvcGVuIG1lbWJlcnNoaXAgdG8gYWxsIG5vbi1tZW1iZXIgY291bnRyaWVzIG9mIHRoZSByZWdpb24sIHJlZ2FyZGxlc3Mgb2YgaWRlb2xvZ2llcy4gUSBTb3VyY2U6IGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbSBvZGF5cy1wYXBlciBwLW9waW5pb24vYXNwYWMtc2F5cy1pdC1pcy1ub3QtYS1taWxpdGFyeS1hbGxpYW5jZS9hcnRpY2wgZTY1NTM1Mjg4LmVjZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3, 4 and 5",
        "option2" : "1, 2, 4 and 5",
        "option3" : "3 only",
        "option4" : "1, 2 and 4 only"
      }
    },
    {
      "index" : 11,
      "question" : "The National Critical Information Infrastructure Protection Centre (NCIIPC) is thenodal agency for taking all measures to protect the nation's critical informationinfrastructure. The NCIIPC has identified which of the following as 'Critical Sectors'(as defined under the Information Technology Act, 2000)?\n\t1. Power and Energy\n\t2. Hospitality\n\t3. Banking and Insurance\n\t4. Telecom and transport\n\t5. Real estateSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ3JlYXRlZCBpbiAyMDE0LCB0aGUgTkNJSVBDIGlzIG1hbmRhdGVkIHRvIGd1YXJkIENJSXMgZnJvbSAndW5hdXRob3JpemVkIGFjY2VzcywgbW9kaWZpY2F0aW9uLCB1c2UsIGRpc2Nsb3N1cmUsIGRpc3J1cHRpb24sIGluY2FwYWNpdGF0aW9uIG9yIGRpc3RyYWN0aW9uJy4gVGhlIE5DSUlQQyBoYXMgaWRlbnRpZmllZCB0aGUgZm9sbG93aW5nIGFzICdDcml0aWNhbCBTZWN0b3JzJzogUG93ZXIgJiBFbmVyZ3kgQmFua2luZywgRmluYW5jaWFsIFNlcnZpY2VzICYgSW5zdXJhbmNlIFRlbGVjb20gVHJhbnNwb3J0IEdvdmVybm1lbnQgU3RyYXRlZ2ljICYgUHVibGljIEVudGVycHJpc2VzIFRoZSBNaW5pc3RyeSBvZiBFbGVjdHJvbmljcyBhbmQgSVQgKE1laXRZKSBoYXMgZGVjbGFyZWQgSVQgcmVzb3VyY2VzIG9mIElDSUNJIEJhbmssIEhERkMgQmFuayBhbmQgTmF0aW9uYWwgUGF5bWVudHMgQ29ycG9yYXRpb24gb2YgSW5kaWEgKE5QQ0kpIGFzICdjcml0aWNhbCBpbmZvcm1hdGlvbiBpbmZyYXN0cnVjdHVyZScgdW5kZXIgdGhlIElUIEFjdCBvZiAyMDAyLiBUaGUgQ2VudHJhbCBHb3Zlcm5tZW50IGRlY2xhcmVzIHRoZSBjb21wdXRlciByZXNvdXJjZXMgcmVsYXRpbmcgdG8gdGhlIENvcmUgQmFua2luZyBTb2x1dGlvbiwgUlRHUyBhbmQgTkVGVCBjb21wcmlzaW5nIFN0cnVjdHVyZWQgRmluYW5jaWFsIE1lc3NhZ2luZyBTZXJ2ZXIgb2YgdGhlIGFib3ZlIDMgaW5zdGl0dXRpb25zIGFzIENJSS4gTGVhcm5pbmc6IFRoZSBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IEFjdCwgMjAwMCBkZWZpbmVzIHRoZSAnQ3JpdGljYWwgSW5mb3JtYXRpb24gSW5mcmFzdHJ1Y3R1cmUgKENJSSknLiBBcyBwZXIgdGhlIEFjdCwgdGhlIENJSSBtZWFucyBhIGNvbXB1dGVyIHJlc291cmNlLCB0aGUgaW5jYXBhY2l0YXRpb24gb3IgZGVzdHJ1Y3Rpb24gb2Ygd2hpY2ggc2hhbGwgaGF2ZSBkZWJpbGl0YXRpbmcgaW1wYWN0IG9uIG5hdGlvbmFsIHNlY3VyaXR5LCBlY29ub215LCBwdWJsaWMgaGVhbHRoIG9yIHNhZmV0eS4gVW5kZXIgdGhlIElUIEFjdCwgdGhlIGdvdmVybm1lbnQgaGFzIHRoZSBwb3dlciB0byBkZWNsYXJlIGFueSBkYXRhLCBkYXRhYmFzZSwgSVQgbmV0d29yayBvciBjb21tdW5pY2F0aW9ucyBpbmZyYXN0cnVjdHVyZSBhcyBDSUkgdG8gcHJvdGVjdCB0aGF0IGRpZ2l0YWwgYXNzZXQuIEFueSBwZXJzb24gd2hvIHNlY3VyZXMgYWNjZXNzIG9yIGF0dGVtcHRzIHRvIHNlY3VyZSBhY2Nlc3MgdG8gYSBwcm90ZWN0ZWQgc3lzdGVtIGluIHZpb2xhdGlvbiBvZiB0aGUgbGF3IGNhbiBiZSBwdW5pc2hlZCB3aXRoIGEgamFpbCB0ZXJtIG9mIHVwIHRvIDEwIHllYXJzLiBOZWVkIGZvciBDSUkgcHJvdGVjdGlvbiAtIElUIHJlc291cmNlcyBmb3JtIHRoZSBiYWNrYm9uZSBvZiBjb3VudGxlc3MgY3JpdGljYWwgb3BlcmF0aW9ucyBpbiBhIGNvdW50cnkncyBpbmZyYXN0cnVjdHVyZS4gLiAgICAgICAgIEdpdmVuIHRoZSBpbnRlcmNvbm5lY3RlZG5lc3Mgb2YgdGhlc2UgSVQgcmVzb3VyY2VzLCBkaXNydXB0aW9ucyBjYW4gaGF2ZSBhIGNhc2NhZGluZyBlZmZlY3QgYWNyb3NzIHNlY3RvcnMuIEFuIGluZm9ybWF0aW9uIHRlY2hub2xvZ3kgZmFpbHVyZSBhdCBhIHBvd2VyIGdyaWQgY2FuIGxlYWQgdG8gcHJvbG9uZ2VkIG91dGFnZXMgY3JpcHBsaW5nIG90aGVyIHNlY3RvcnMgbGlrZSBoZWFsdGhjYXJlLCBiYW5raW5nIHNlcnZpY2VzLiBXb3JsZCBvdmVyIGdvdmVybm1lbnRzIGhhdmUgYmVlbiBtb3Zpbmcgd2l0aCBhbGFjcml0eSB0byBwcm90ZWN0IHRoZWlyIENJSS4gUSBTb3VyY2U6ICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vYnVzaW5lc3MvZ292dC10YWdzLWljaWNpLWJhbmtzLWl0LXJlc291cmNlcy1hcy1jcml0aWNhbC1pbmZvcm1hdGlvbi1pbmYgcmFzdHJ1Y3R1cmUvYXJ0aWNsZTY1NTQwMjUzLmVjZQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3 and 4 only",
        "option2" : "1 and 3 only",
        "option3" : "2, 4 and 5 only",
        "option4" : "1, 2, 3, 4 and 5 .       "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements.\n\t1. Prithvi is the first missile to have been developed by the Defence Research & DevelopmentOrganization (DRDO) under the Integrated Guided Missile Development Programme (IGMDP).\n\t2. Prithvi-II is a surface-to-air long-range ballistic missile.\n\t3. No variant of the missile Prithvi has been indigenously developed so far.\n\t4. After the first test firing of the Prithvi missile (1988), India's access to missile developmenttechnology was restricted for some time by the Missile Technology Control Regime (MTCR).Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUHJpdGh2aS1JSSBpcyBhIHN1cmZhY2UtdG8tc3VyZmFjZSBTaG9ydC1SYW5nZSBCYWxsaXN0aWMgTWlzc2lsZS4gIFRoaXMgc2luZ2xlLXN0YWdlIG1pc3NpbGUgcG93ZXJlZCBieSBsaXF1aWQgcHJvcHVsc2lvbiB0d2luIGVuZ2luZXMgaXMgY2FwYWJsZSBvZiBjYXJyeWluZyA1MDAtMSwwMDAga2cgb2Ygd2FyaGVhZHMuIEl0IHVzZXMgYW4gYWR2YW5jZWQgaW5lcnRpYWwgZ3VpZGFuY2Ugc3lzdGVtIHdpdGggbWFub2V1dmVyaW5nIHRyYWplY3RvcnkgdG8gaGl0IGl0cyB0YXJnZXQgd2l0aCBhIHZlcnkgaGlnaCBkZWdyZWUgb2YgcHJlY2lzaW9uLiBJdCB3YXMgSW5kaWEncyBmaXJzdCBpbmRpZ2Vub3VzIGJhbGxpc3RpYyBtaXNzaWxlIGRldmVsb3BlZCBpbiAxOTgzLiBJdCB3YXMgaW5kdWN0ZWQgaW50byB0aGUgYXJtb3J5IG9mIEluZGlhbiBkZWZlbmNlIGZvcmNlcyBpbiAyMDAzLiBQcml0aHZpIGlzIHRoZSBmaXJzdCBtaXNzaWxlIHRvIGhhdmUgYmVlbiBkZXZlbG9wZWQgYnkgdGhlIERlZmVuc2UgUmVzZWFyY2ggJiBEZXZlbG9wbWVudCBPcmdhbml6YXRpb24gKERSRE8pIHVuZGVyIHRoZSBJbnRlZ3JhdGVkIEd1aWRlZCBNaXNzaWxlIERldmVsb3BtZW50IFByb2dyYW1tZSAoSUdNRFApLiBJbnRlZ3JhdGVkIEd1aWRlZCBNaXNzaWxlIERldmVsb3BtZW50IFByb2dyYW1tZSBJbnRlZ3JhdGVkIEd1aWRlZCBNaXNzaWxlIERldmVsb3BtZW50IFByb2dyYW1tZSAoSUdNRFApIHdhcyBhIE1pbmlzdHJ5IG9mIERlZmVuY2UgcHJvZ3JhbW1lIHRvIHJlc2VhcmNoIGFuZCBkZXZlbG9wIG1pc3NpbGVzLiBUaGUgcHJvamVjdCB3YXMgc3RhcnRlZCBpbiAxOTgyLTE5ODMgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgRHIgQVBKIEFiZHVsIEthbGFtLiBJdCAuICAgICAgICAgYWNjb21wbGlzaGVkIGl0cyBkZXNpZ24gb2JqZWN0aXZlcyBieSAyMDEyLiBUaGUgRGVmZW5jZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgT3JnYW5pc2F0aW9uIChEUkRPKSBhbmQgZXJzdHdoaWxlIE9yZG5hbmNlIEZhY3RvcmllcyBCb2FyZCAoT0ZCKSBtYW5hZ2VkIHRoZSBwcm9ncmFtbWUgd2l0aCBvdGhlciBJbmRpYW4gZ292ZXJubWVudCBwb2xpdGljYWwgb3JnYW5pemF0aW9ucy4gQWZ0ZXIgSW5kaWEgdGVzdC1maXJlZCB0aGUgUHJpdGh2aSBtaXNzaWxlICgxOTg4KSwgdGhlIE1pc3NpbGUgVGVjaG5vbG9neSBDb250cm9sIFJlZ2ltZSAoTVRDUikgZGVjaWRlZCB0byByZXN0cmljdCBhY2Nlc3MgdG8gYW55IHRlY2hub2xvZ3kgdGhhdCB3b3VsZCBoZWxwIHRoZSBJbmRpYW4gbWlzc2lsZSBkZXZlbG9wbWVudCBwcm9ncmFtLiBbVGhlIE1UQ1IgZ3JvdXAsIHdoaWNoIHdhcyB0aGVuIGFuIGluZm9ybWFsIGdyb3VwLCB3YXMgZm9ybWVkIGluIDE5ODcgYnkgdGhlIEctNyBpbmR1c3RyaWFsaXplZCBjb3VudHJpZXMuXSBUbyBjb3VudGVyIHRoZSBNVENSLCB0aGUgSUdNRFAgZm9ybWVkIGEgY29uc29ydGl1bSBvZiBEUkRPIGxhYm9yYXRvcmllcywgaW5kdXN0cmllcyBhbmQgYWNhZGVtaWMgaW5zdGl0dXRpb25zIHRvIGJ1aWxkIHRoZSBzdWItc3lzdGVtcywgcGFydHMgYW5kIG1hdGVyaWFscyBmb3IgdGhlIG1pc3NpbGVzLiBRIFNvdXJjZTogaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD9QUklEPTE4MzQzNzY=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4",
        "option2" : "1 only",
        "option3" : "1, 2 and 3",
        "option4" : "2, 3 and 4"
      }
    },
    {
      "index" : 13,
      "question" : "In Mughal India, Malikana was a tax portion related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IEluIHRoZSBNdWdoYWwgZW1waXJlLCB6YW1pbmRhcnMgaGFkIGhlcmVkaXRhcnkgcmlnaHRzIG9mIGNvbGxlY3RpbmcgbGFuZCByZXZlbnVlcyB3aGljaCBjb3VsZCBnbyB1cCB0byAyNSBwZXJjZW50IG9mIHRoZSByZXZlbnVlLiBUaGV5IGdlbmVyYWxseSBtYWRlIGNvbGxlY3Rpb24gZnJvbSB0aGUgaW5kaXZpZHVhbCBwZWFzYW50cyBhdCByYXRlcyBmaXhlZCBieSB0cmFkaXRpb24gb3IgYnkgdGhlbXNlbHZlcyBhbmQgcGFpZCBhIGZpeGVkIHRheCB0byB0aGUgc3RhdGUuIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlaXIgY29sbGVjdGlvbnMgYW5kIHRoZSBhbW91bnQgcGFpZCB0byB0aGUgc3RhdGUgd2FzIHRoZWlyIHBlcnNvbmFsIGluY29tZS4gSWYgdGhlIHN0YXRlIGRlbWFuZCByZWFjaGVkIHRoZSBtYXhpbXVtIHRoYXQgdGhlIHBlYXNhbnQgY291bGQgcGF5LCBhIGRlZHVjdGlvbiBvZiAxMCBwZXJjZW50IHdhcyBtYWRlIGZyb20gdGhlIHRvdGFsIGFtb3VudCBvZiByZXZlbnVlIGFuZCBwYWlkIHRvIHRoZSBaYW1pbmRhcnMgYXMgbWFsaWthbmEuIFRob3VnaCBpdCB3YXMgbm90IHBlcm1pdHRlZCwgdGhlIHphbWluZGFycyBpbXBvc2VkIGFsbCBraW5kcyBvZiB0YXhlcy4gVGhlcmUgd2FzIGEgdGF4IGV2ZW4gb24gdGhlIGJ1bGxvY2tzIGFzIHdlbGwgYXMgbnVtZXJvdXMgZ29vZHMgd2l0aGluIHRoZSB0ZXJyaXRvcnkgYW5kIGJyb3VnaHQgZnJvbSBvdXRzaWRlLiBUaGVyZSB3YXMgdGhlIHRheCBvZiBSYWhhZGFyaSwgZXZlcnkga2luZCBvZiB0YXggb24gZXZlcnkga2luZCBvZiBnb29kcyBwYXNzaW5nIHRocm91Z2ggYSB6YW1pbmRhcmkuIFRoZSBNdWdoYWwgZW1wZXJvcnMgdHJpZWQgdG8gYWJvbGlzaCBzb21lIG9mIHRoZXNlIGxpa2UgQXVyYW5nemViLiBCdXQgS2FmaSBLaGFuIHRoZSBsYXRlciBoaXN0b3JpYW4gc2FpZCB0aGF0IG5vYm9keSBwYWlkIGFueSBhdHRlbnRpb24gdG8gaXQgQmVzaWRlcyB0aGVzZSwgcHJlc2VudHMgaGFkIHRvIGJlIGdpdmVuIG9uIHRoZSBtYXJyaWFnZSBvZiB0aGUgemFtaW5kYXIsIG9uIHRoZSBtYXJyaWFnZSBvZiBoaXMgLiAgICAgICAgIHNvbiwgb24gdGhlIG1hcnJpYWdlIG9mIGhpcyBkYXVnaHRlciwgYmlydGggYW5kIGRlYXRoIGluIHRoZSBmYW1pbHksIGluIGRpZmZlcmVudCBmZXN0aXZhbHMgYW5kIG90aGVyIG9jY2FzaW9ucy4gVGhlIFphbWluZGFyIGFsc28gZ2l2ZXMgc29tZXRoaW5nIGluIHJldHVybi4gVGhlIHphbWluZGFyIGhhZCBjZXJ0YWluIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyBidXQgaGlzIGF1dGhvcml0eSB3aXRoaW4gaGlzIHphbWluZGFyaSBpcyBwcmFjdGljYWxseSB1bmNoYWxsZW5nZWQuIFEgU291cmNlOiBBUjogQ2ggMjogOHRoIE5DRVJUIEhpc3Rvcnk6IE91ciBQYXN0cyBJSUkgLSBJ",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "custom duties",
        "option2" : "military expeditions",
        "option3" : "service taxes",
        "option4" : "land revenue"
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements.\n\t1. The Bharat Gaurav policy allows private players to operate trains on theme-based circuits forrunning special tourism packages.\n\t2. Trains run under the Bharat Gaurav policy can be used as ordinary transport trains between anorigin and destination.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGF1bmNoZWQgaW4gMjAyMSwgdGhlIEJoYXJhdCBHYXVyYXYgcG9saWN5IGFsbG93cyBwcml2YXRlIHBsYXllcnMgdG8gb3BlcmF0ZSB0cmFpbnMgb24gdGhlbWUtYmFzZWQgY2lyY3VpdHMgZm9yIHJ1bm5pbmcgc3BlY2lhbCB0b3VyaXNtIHBhY2thZ2VzLiBJdHMgb2JqZWN0aXZlIGlzIHRvIHNob3djYXNlIEluZGlhJ3MgcmljaCBjdWx0dXJhbCBoZXJpdGFnZSBhbmQgaGlzdG9yaWNhbCBwbGFjZXMgdG8gcGVvcGxlIG9mIEluZGlhIGFuZCB0aGUgd29ybGQsIHRocm91Z2ggQmhhcmF0IEdhdXJhdiBUcmFpbnMuIFRyYWlucyAtIEFueW9uZSBjYW4gYXBwcm9hY2ggUmFpbHdheXMgdG8gbGVhc2UgdGhlIDMsMDMzIGNvbnZlbnRpb25hbCBJbnRlZ3JhbCBDb2FjaCBGYWN0b3J5LWRlc2lnbiBjb2FjaGVzIGVhcm1hcmtlZCBmb3IgdGhpcyBzZWdtZW50LiBFYWNoIHRyYWluIHdpbGwgaGF2ZSAxNC0yMCBjb2FjaGVzLCBpbmNsdWRpbmcgdHdvIGd1YXJkIGNvYWNoZXMgb3IgU0xSLiBUaGVzZSB0cmFpbnMgY2Fubm90IGJlIHVzZWQgYXMgb3JkaW5hcnkgdHJhbnNwb3J0IHRyYWlucyBiZXR3ZWVuIGFuIG9yaWdpbiBhbmQgZGVzdGluYXRpb24uIFR3byBvcHRpb25zIC0gUmVnaXN0ZXJlZCBTZXJ2aWNlIFByb3ZpZGVycyBzaGFsbCBiZSBvZmZlcmVkIHJha2VzIGNvbnNpc3Rpbmcgb2YgSUNGIGNvYWNoZXMgdW5kZXIgJ1JpZ2h0IHRvIFVzZScgbW9kZWwgYnkgSW5kaWFuIFJhaWx3YXlzIChJUikgZm9yIG9wZXJhdGlvbnMgb2YgQmhhcmF0IEdhdXJhdiBUcmFpbnMuIFNlcnZpY2UgUHJvdmlkZXJzIHNoYWxsIGFsc28gaGF2ZSB0aGUgb3B0aW9uIG9mIHByb2N1cmVtZW50IG9mIG5ldyBjb2FjaGVzIGRpcmVjdGx5IGZyb20gcHJvZHVjdGlvbiB1bml0cyB0aHJvdWdoIHRoZSBOb24tUmFpbHdheSBDdXN0b21lciAoTlJDKSBwbGFuLiBNb2RlbCAtIFRoZSBCaGFyYXQgR2F1cmF2IG9wZXJhdG9yIHdpbGwgaGF2ZSB0byBwcm9wb3NlIGEgYnVzaW5lc3MgbW9kZWwgc2ltaWxhciB0byB0aGUgSVJDVEMncyBtb2RlbCBvZiB0aGVtZS1iYXNlZCB0b3VyaXN0IHRyYWlucy4gVGhlIG9wZXJhdG9yIGhhcyB0aGUgZmxleGliaWxpdHkgdG8gZGVjaWRlIHRoZSBidXNpbmVzcyBtb2RlbCBpbmNsdWRpbmcgcm91dGVzLCB0aGVtZXMsIGl0aW5lcmFyeSwgdGFyaWZmIGFuZCBvdGhlciBhdHRyaWJ1dGVzIGNvbm5lY3RlZCB3aXRoIHRoaXMgbW9kZWwuIEhvd2V2ZXIsIHRoZSBvcGVyYXRvciBoYXMgdG8gdGFrZSBjYXJlIG9mIGVuZC10by1lbmQgc2VydmljZSBsaWtlIGhvdGVsIHN0YXksIGxvY2FsIGFycmFuZ2VtZW50cywgZXRjLiBhbG9uZyB3aXRoIG9wZXJhdGluZyB0aGUgdHJhaW5zLiBUaGUgdGVudXJlIG9mIHRoZSBhcnJhbmdlbWVudCBpcyBhIG1pbmltdW0gb2YgdHdvIHllYXJzIGFuZCBtYXhpbXVtIG9mIHRoZSBjb2RhbCBsaWZlIG9mIHRoZSBjb2FjaC4gLiAgICAgICAgIEluZGlhbiBSYWlsd2F5cycgcm9sZSAtIEl0IHdpbGwgcHJvdmlkZSBzdGFmZiB0byBkcml2ZSB0aGUgdHJhaW5zLCBndWFyZHMgYW5kIGFsc28gbWFpbnRlbmFuY2Ugc3RhZmYgb24gYm9hcmQgZm9yIHRoZSBjb2FjaGVzLiBPdGhlciBzdGFmZiwgbGlrZSBob3VzZWtlZXBpbmcgYW5kIGNhdGVyaW5nLCBldGMsIHdpbGwgYmUgZGVwbG95ZWQgYnkgdGhlIG9wZXJhdG9yLiBJdCB3aWxsIGFsc28gZW5zdXJlIHRoYXQgaXRzIGVudGlyZSBpbmZyYXN0cnVjdHVyZSBpcyBpbiBwbGFjZSB0byBzYWZlbHkgYW5kIGVmZmljaWVudGx5IGhvc3QgdGhlIHRyYWluIGluIGl0cyBuZXR3b3JrLiBJdCB3aWxsIGFsc28gZ2l2ZSB0aGlzIHByaW9yaXR5IGluIGl0cyBwYXRocywgbGlrZSB0aGUgUmFqZGhhbmlzIGFuZCBwcmVtaXVtIHRyYWlucywgc28gdGhhdCB0aGVzZSB0cmFpbnMgYXJlIG5vdCBoZWxkIHVwIG9yIHNpZGVsaW5lZCB0byBtYWtlIHdheSBmb3IgcmVndWxhciB0cmFpbnMuIFEgU291cmNlOiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmVkL2V4cGxhaW5lZC1iaGFyYXQtZ2F1cmF2LXRyYWluLWluZGlhbi1yYWlsd2F5cy03OTczIDM3MS8=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 15,
      "question" : "With reference to the Telecom Regulatory Authority in India (TRAI), consider thefollowing statements.\n\t1. The TRAI was established by the Telecom Regulatory Authority of India Act, 1997.\n\t2. The TRAI Act was amended in 2000 establishing a Telecommunications Dispute Settlement andAppellate Tribunal (TDSAT) to take over the adjudicatory and disputes functions from TRAI.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGVudHJ5IG9mIHByaXZhdGUgc2VydmljZSBwcm92aWRlcnMgYnJvdWdodCB3aXRoIGl0IHRoZSBpbmV2aXRhYmxlIG5lZWQgZm9yIGluZGVwZW5kZW50IHJlZ3VsYXRpb24uIFRoZSBUZWxlY29tIFJlZ3VsYXRvcnkgQXV0aG9yaXR5IG9mIEluZGlhIChUUkFJKSB3YXMsIHRodXMsIGVzdGFibGlzaGVkIHdpdGggZWZmZWN0IGZyb20gMjB0aCBGZWJydWFyeSAxOTk3IGJ5IGFuIEFjdCBvZiBQYXJsaWFtZW50LCBjYWxsZWQgdGhlIFRlbGVjb20gUmVndWxhdG9yeSBBdXRob3JpdHkgb2YgSW5kaWEgQWN0LCAxOTk3LCB0byByZWd1bGF0ZSB0ZWxlY29tIHNlcnZpY2VzLCBpbmNsdWRpbmcgZml4YXRpb24vcmV2aXNpb24gb2YgdGFyaWZmcyBmb3IgdGVsZWNvbSBzZXJ2aWNlcyB3aGljaCB3ZXJlIGVhcmxpZXIgdmVzdGVkIGluIHRoZSBDZW50cmFsIEdvdmVybm1lbnQuIFRSQUkncyBtaXNzaW9uIGlzIHRvIGNyZWF0ZSBhbmQgbnVydHVyZSBjb25kaXRpb25zIGZvciB0aGUgZ3Jvd3RoIG9mIHRlbGVjb21tdW5pY2F0aW9ucyBpbiB0aGUgY291bnRyeSBpbiBhIG1hbm5lciBhbmQgYXQgYSBwYWNlIHdoaWNoIHdpbGwgZW5hYmxlIEluZGlhIHRvIHBsYXkgYSBsZWFkaW5nIHJvbGUgaW4gZW1lcmdpbmcgZ2xvYmFsIGluZm9ybWF0aW9uIHNvY2lldHkuIE9uZSBvZiB0aGUgbWFpbiBvYmplY3RpdmVzIG9mIFRSQUkgaXMgdG8gcHJvdmlkZSBhIGZhaXIgYW5kIHRyYW5zcGFyZW50IHBvbGljeSBlbnZpcm9ubWVudCB3aGljaCBwcm9tb3RlcyBhIGxldmVsIHBsYXlpbmcgZmllbGQgYW5kIGZhY2lsaXRhdGVzIGZhaXIgY29tcGV0aXRpb24uIEluIHB1cnN1YW5jZSBvZiBhYm92ZSBvYmplY3RpdmUgVFJBSSBoYXMgaXNzdWVkIGZyb20gdGltZSB0byB0aW1lIGEgbGFyZ2UgbnVtYmVyIG9mIHJlZ3VsYXRpb25zLCBvcmRlcnMgYW5kIGRpcmVjdGl2ZXMgdG8gZGVhbCB3aXRoIGlzc3VlcyBjb21pbmcgYmVmb3JlIGl0IGFuZCBwcm92aWRlZCB0aGUgcmVxdWlyZWQgZGlyZWN0aW9uIHRvIHRoZSBldm9sdXRpb24gb2YgSW5kaWFuIHRlbGVjb20gbWFya2V0IGZyb20gYSBHb3Zlcm5tZW50LW93bmVkIG1vbm9wb2x5IHRvIGEgLiAgICAgICAgIG11bHRpIG9wZXJhdG9yIG11bHRpIHNlcnZpY2Ugb3BlbiBjb21wZXRpdGl2ZSBtYXJrZXQuIFRoZSBkaXJlY3Rpb25zLCBvcmRlcnMgYW5kIHJlZ3VsYXRpb25zIGlzc3VlZCBjb3ZlciBhIHdpZGUgcmFuZ2Ugb2Ygc3ViamVjdHMgaW5jbHVkaW5nIHRhcmlmZiwgaW50ZXJjb25uZWN0aW9uIGFuZCBxdWFsaXR5IG9mIHNlcnZpY2UgYXMgd2VsbCBhcyBnb3Zlcm5hbmNlIG9mIHRoZSBBdXRob3JpdHkuIFRoZSBUUkFJIEFjdCB3YXMgYW1lbmRlZCBieSBhbiBvcmRpbmFuY2UsIGVmZmVjdGl2ZSBmcm9tIDI0IEphbnVhcnkgMjAwMCwgZXN0YWJsaXNoaW5nIGEgVGVsZWNvbW11bmljYXRpb25zIERpc3B1dGUgU2V0dGxlbWVudCBhbmQgQXBwZWxsYXRlIFRyaWJ1bmFsIChURFNBVCkgdG8gdGFrZSBvdmVyIHRoZSBhZGp1ZGljYXRvcnkgYW5kIGRpc3B1dGVzIGZ1bmN0aW9ucyBmcm9tIFRSQUkuIFREU0FUIHdhcyBzZXQgdXAgdG8gYWRqdWRpY2F0ZSBhbnkgZGlzcHV0ZSBiZXR3ZWVuIGEgbGljZW5zb3IgYW5kIGEgbGljZW5zZWUsIGJldHdlZW4gdHdvIG9yIG1vcmUgc2VydmljZSBwcm92aWRlcnMsIGJldHdlZW4gYSBzZXJ2aWNlIHByb3ZpZGVyIGFuZCBhIGdyb3VwIG9mIGNvbnN1bWVycywgYW5kIHRvIGhlYXIgYW5kIGRpc3Bvc2Ugb2YgYXBwZWFscyBhZ2FpbnN0IGFueSBkaXJlY3Rpb24sIGRlY2lzaW9uIG9yIG9yZGVyIG9mIFRSQUkuIFEgU291cmNlOiBPZnRlbiBpbiBuZXdzIGh0dHBzOi8vd3d3LnRyYWkuZ292LmluL2Fib3V0LXVzL2hpc3Rvcnk=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2 .       "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to CITES (the Convention on International Trade in EndangeredSpecies of Wild Fauna and Flora), consider the following:\n\t1. CITES was drafted as a result of a resolution adopted at a meeting of the members of the IUCN(The World Conservation Union).\n\t2. Although CITES is legally binding on the Parties, it does not take the place of national laws.\n\t3. CITES does not cover species which although are not necessarily now threatened with extinctionmay become so unless trade in specimens of such species is subject to strict regulation.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ0lURVMgKHRoZSBDb252ZW50aW9uIG9uIEludGVybmF0aW9uYWwgVHJhZGUgaW4gRW5kYW5nZXJlZCBTcGVjaWVzIG9mIFdpbGQgRmF1bmEgYW5kIEZsb3JhKSBpcyBhbiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudCBiZXR3ZWVuIGdvdmVybm1lbnRzLiBJdHMgYWltIGlzIHRvIGVuc3VyZSB0aGF0IGludGVybmF0aW9uYWwgdHJhZGUgaW4gc3BlY2ltZW5zIG9mIHdpbGQgYW5pbWFscyBhbmQgcGxhbnRzIGRvZXMgbm90IHRocmVhdGVuIHRoZSBzdXJ2aXZhbCBvZiB0aGUgc3BlY2llcy4gQ0lURVMgd2FzIGRyYWZ0ZWQgYXMgYSByZXN1bHQgb2YgYSByZXNvbHV0aW9uIGFkb3B0ZWQgaW4gMTk2MyBhdCBhIG1lZXRpbmcgb2YgbWVtYmVycyBvZiBJVUNOIChUaGUgV29ybGQgQ29uc2VydmF0aW9uIFVuaW9uKS4gVGhlIHRleHQgb2YgdGhlIENvbnZlbnRpb24gd2FzIGZpbmFsbHkgYWdyZWVkIGF0IGEgbWVldGluZyBvZiByZXByZXNlbnRhdGl2ZXMgb2YgODAgY291bnRyaWVzIGluIFdhc2hpbmd0b24sIEQuQy4sIFVuaXRlZCBTdGF0ZXMgb2YgQW1lcmljYSwgb24gMyBNYXJjaCAxOTczLCBhbmQgb24gMSBKdWx5IDE5NzUgQ0lURVMgZW50ZXJlZCBpbiBmb3JjZS4gQ0lURVMgaXMgYW4gaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnQgdG8gd2hpY2ggU3RhdGVzIGFuZCByZWdpb25hbCBlY29ub21pYyBpbnRlZ3JhdGlvbiAuICAgICAgICAgb3JnYW5pemF0aW9ucyBhZGhlcmUgdm9sdW50YXJpbHkuIFN0YXRlcyB0aGF0IGhhdmUgYWdyZWVkIHRvIGJlIGJvdW5kIGJ5IHRoZSBDb252ZW50aW9uICgnam9pbmVkJyBDSVRFUykgYXJlIGtub3duIGFzIFBhcnRpZXMuIEFsdGhvdWdoIENJVEVTIGlzIGxlZ2FsbHkgYmluZGluZyBvbiB0aGUgUGFydGllcyAtIGluIG90aGVyIHdvcmRzIHRoZXkgaGF2ZSB0byBpbXBsZW1lbnQgdGhlIENvbnZlbnRpb24gLSBpdCBkb2VzIG5vdCB0YWtlIHRoZSBwbGFjZSBvZiBuYXRpb25hbCBsYXdzLiBSYXRoZXIgaXQgcHJvdmlkZXMgYSBmcmFtZXdvcmsgdG8gYmUgcmVzcGVjdGVkIGJ5IGVhY2ggUGFydHksIHdoaWNoIGhhcyB0byBhZG9wdCBpdHMgb3duIGRvbWVzdGljIGxlZ2lzbGF0aW9uIHRvIGVuc3VyZSB0aGF0IENJVEVTIGlzIGltcGxlbWVudGVkIGF0IHRoZSBuYXRpb25hbCBsZXZlbC4gU3RhdGVtZW50IDM6ICBBcHBlbmRpeCBJIG9mIENJVEVTIHNoYWxsIGluY2x1ZGUgYWxsIHNwZWNpZXMgdGhyZWF0ZW5lZCB3aXRoIGV4dGluY3Rpb24gd2hpY2ggYXJlIG9yIG1heSBiZSBhZmZlY3RlZCBieSB0cmFkZS4gVHJhZGUgaW4gc3BlY2ltZW5zIG9mIHRoZXNlIHNwZWNpZXMgbXVzdCBiZSBzdWJqZWN0IHRvIHBhcnRpY3VsYXJseSBzdHJpY3QgcmVndWxhdGlvbiBpbiBvcmRlciBub3QgdG8gZW5kYW5nZXIgZnVydGhlciB0aGVpciBzdXJ2aXZhbCBhbmQgbXVzdCBvbmx5IGJlIGF1dGhvcml6ZWQgaW4gZXhjZXB0aW9uYWwgY2lyY3Vtc3RhbmNlcy4gQXBwZW5kaXggSUkgc2hhbGwgaW5jbHVkZTogKGEpIGFsbCBzcGVjaWVzIHdoaWNoIGFsdGhvdWdoIG5vdCBuZWNlc3NhcmlseSBub3cgdGhyZWF0ZW5lZCB3aXRoIGV4dGluY3Rpb24gbWF5IGJlY29tZSBzbyB1bmxlc3MgdHJhZGUgaW4gc3BlY2ltZW5zIG9mIHN1Y2ggc3BlY2llcyBpcyBzdWJqZWN0IHRvIHN0cmljdCByZWd1bGF0aW9uIGluIG9yZGVyIHRvIGF2b2lkIHV0aWxpemF0aW9uIGluY29tcGF0aWJsZSB3aXRoIHRoZWlyIHN1cnZpdmFsOyBhbmQgKGIpIG90aGVyIHNwZWNpZXMgd2hpY2ggbXVzdCBiZSBzdWJqZWN0IHRvIHJlZ3VsYXRpb24gaW4gb3JkZXIgdGhhdCB0cmFkZSBpbiBzcGVjaW1lbnMgb2YgY2VydGFpbiBzcGVjaWVzIHJlZmVycmVkIHRvIGluIHN1Yi1wYXJhZ3JhcGggKGEpIG9mIHRoaXMgcGFyYWdyYXBoIG1heSBiZSBicm91Z2h0IHVuZGVyIGVmZmVjdGl2ZSBjb250cm9sLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3",
        "option3" : "1 and 2",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements.\n\t1. Fungi naturally produce antibiotics to kill or inhibit the growth of bacteria.\n\t2. Penicillin can be isolated from fungi.\n\t3. Ergosterol is a hallucinogen found in the cell membranes of fungi and protozoa.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRnVuZ2kgbmF0dXJhbGx5IHByb2R1Y2UgYW50aWJpb3RpY3MgdG8ga2lsbCBvciBpbmhpYml0IHRoZSBncm93dGggb2YgYmFjdGVyaWEsIGxpbWl0aW5nIHRoZWlyIGNvbXBldGl0aW9uIGluIHRoZSBuYXR1cmFsIGVudmlyb25tZW50LiBJbXBvcnRhbnQgYW50aWJpb3RpY3MsIHN1Y2ggYXMgcGVuaWNpbGxpbiAuICAgICAgICAgYW5kIHRoZSBjZXBoYWxvc3BvcmlucywgY2FuIGJlIGlzb2xhdGVkIGZyb20gZnVuZ2kuIFZhbHVhYmxlIGRydWdzIGlzb2xhdGVkIGZyb20gZnVuZ2kgaW5jbHVkZSB0aGUgaW1tdW5vc3VwcHJlc3NhbnQgZHJ1ZyBjeWNsb3Nwb3JpbmUgKHdoaWNoIHJlZHVjZXMgdGhlIHJpc2sgb2YgcmVqZWN0aW9uIGFmdGVyIG9yZ2FuIHRyYW5zcGxhbnQpLCB0aGUgcHJlY3Vyc29ycyBvZiBzdGVyb2lkIGhvcm1vbmVzLCBhbmQgZXJnb3QgYWxrYWxvaWRzIHVzZWQgdG8gc3RvcCBibGVlZGluZy4gUHNpbG9jeWJpbiBpcyBhIGNvbXBvdW5kIGZvdW5kIGluIGZ1bmdpIHN1Y2ggYXMgUHNpbG9jeWJlIHNlbWlsYW5jZWF0YSBhbmQgR3ltbm9waWx1cyBqdW5vbml1cywgd2hpY2ggaGF2ZSBiZWVuIHVzZWQgZm9yIHRoZWlyIGhhbGx1Y2lub2dlbmljIHByb3BlcnRpZXMgYnkgdmFyaW91cyBjdWx0dXJlcyBmb3IgdGhvdXNhbmRzIG9mIHllYXJzLiBTdGF0ZW1lbnQgMzogRXJnb3N0ZXJvbCBpcyBhIHByb3ZpdGFtaW4gZm9ybSBvZiB2aXRhbWluIEQyOyBleHBvc3VyZSB0byB1bHRyYXZpb2xldCAoVVYpIGxpZ2h0IGNhdXNlcyBhIGNoZW1pY2FsIHJlYWN0aW9uIHRoYXQgcHJvZHVjZXMgdml0YW1pbiBEMi4gRXJnb3N0ZXJvbCBpcyBhIHN0ZXJvbCAoc3Rlcm9pZCBhbGNvaG9sKSBmb3VuZCBpbiBjZWxsIG1lbWJyYW5lcyBvZiBmdW5naSBhbmQgcHJvdG96b2EsIHNlcnZpbmcgbWFueSBvZiB0aGUgc2FtZSBmdW5jdGlvbnMgdGhhdCBjaG9sZXN0ZXJvbCBzZXJ2ZXMgaW4gYW5pbWFsIGNlbGxzLiBCZWNhdXNlIG1hbnkgZnVuZ2kgYW5kIHByb3Rvem9hIGNhbm5vdCBzdXJ2aXZlIHdpdGhvdXQgZXJnb3N0ZXJvbCwgdGhlIGVuenltZXMgdGhhdCBzeW50aGVzaXplIGl0IGhhdmUgYmVjb21lIGltcG9ydGFudCB0YXJnZXRzIGZvciBkcnVnIGRpc2NvdmVyeS4gIEEgbnVtYmVyIG9mIGZ1bmdpIGhhdmUgd2VsbCBkb2N1bWVudGVkIHBzeWNob3Ryb3BpYyBlZmZlY3RzLCBzb21lIG9mIHRoZW0gc2V2ZXJlIGFuZCBhc3NvY2lhdGVkIHdpdGggc29tZXRpbWVzIGFjdXRlIGFuZCBsaWZlLXRocmVhdGVuaW5nIHNpZGUtZWZmZWN0cy4gTW9yZSB3aWRlbHkgdXNlZCBpbmZvcm1hbGx5IGFyZSBhIHJhbmdlIG9mIGZ1bmdpIGNvbGxlY3RpdmVseSBrbm93biBhcyAibWFnaWMgbXVzaHJvb21zIiwgd2hpY2ggY29udGFpbiBwc2lsb2N5YmluIGFuZCBwc2lsb2Npbi4gV2VsbCBrbm93biBhbW9uZ3N0IHRoZXNlIGlzIEFtYW5pdGEgbXVzY2FyaWEsIHRoZSBmbHkgYWdhcmljLiBRIFNvdXJjZTogQVI6IFBhZ2UgNyAoQnVqaG8gdGhpbmtpbmcgY2xvdWQpOiA3dGggU2NpZW5jZSBOQ0VSVA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "2 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements.\n\t1. Mulch is a protective layer of material that is spread on top of the soil.\n\t2. As mulches slowly decompose, they provide organic matter which helps keep the soil loose.Which of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTXVsY2ggaXMgc2ltcGx5IGEgcHJvdGVjdGl2ZSBsYXllciBvZiBhIG1hdGVyaWFsIHRoYXQgaXMgc3ByZWFkIG9uIHRvcCBvZiB0aGUgc29pbC4gT3JnYW5pYyBtdWxjaGVzIGFsc28gaW1wcm92ZSB0aGUgY29uZGl0aW9uIG9mIHRoZSBzb2lsLiBBcyB0aGVzZSBtdWxjaGVzIHNsb3dseSBkZWNvbXBvc2UsIHRoZXkgcHJvdmlkZSBvcmdhbmljIG1hdHRlciB3aGljaCBoZWxwcyBrZWVwIHRoZSBzb2lsIGxvb3NlLiBUaGlzIGltcHJvdmVzIHJvb3QgZ3Jvd3RoLCBpbmNyZWFzZXMgdGhlIGluZmlsdHJhdGlvbiBvZiB3YXRlciwgYW5kIGFsc28gaW1wcm92ZXMgdGhlIHdhdGVyLSBob2xkaW5nIGNhcGFjaXR5IG9mIHRoZSBzb2lsLiBPcmdhbmljIG1hdHRlciBpcyBhIHNvdXJjZSBvZiBwbGFudCBudXRyaWVudHMgYW5kIHByb3ZpZGVzIGFuIGlkZWFsIGVudmlyb25tZW50IGZvciBlYXJ0aHdvcm1zIC4gICAgICAgICBhbmQgb3RoZXIgYmVuZWZpY2lhbCBzb2lsIG9yZ2FuaXNtcy4gQm90aCBvcmdhbmljIGFuZCBpbm9yZ2FuaWMgbXVsY2hlcyBjYW4gYmUgdXNlZC4gV2hpbGUgaW5vcmdhbmljIG11bGNoZXMgaGF2ZSB0aGVpciBwbGFjZSBpbiBjZXJ0YWluIGxhbmRzY2FwZXMsIHRoZXkgbGFjayB0aGUgc29pbCBpbXByb3ZpbmcgcHJvcGVydGllcyBvZiBvcmdhbmljIG11bGNoZXMuIElub3JnYW5pYyBtdWxjaGVzLCBiZWNhdXNlIG9mIHRoZWlyIHBlcm1hbmVuY2UsIG1heSBiZSBkaWZmaWN1bHQgdG8gcmVtb3ZlIGlmIGNyb3AgcGxhbnMgbmVlZCB0byBiZSBjaGFuZ2VkLiBXZSB3aWxsIGNvdmVyIG1vcmUgb24gdGhpcyBpbiBsYXRlciB0ZXN0cy4gUSBTb3VyY2U6IEFSOiBQYWdlIDE0OiA4dGggTkNFUlQ6IEdlb2dyYXBoeQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 19,
      "question" : "Biomethane is a near-pure source of methane produced by\n\t1. removing any CO2 and contaminants present in the biogas\n\t2. thermal gasification of solid biomass followed by methanationWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmlvbWV0aGFuZSAoYWxzbyBrbm93biBhcyAncmVuZXdhYmxlIG5hdHVyYWwgZ2FzJykgaXMgYSBuZWFyLXB1cmUgc291cmNlIG9mIG1ldGhhbmUgcHJvZHVjZWQgZWl0aGVyIGJ5ICd1cGdyYWRpbmcnIGJpb2dhcyAoYSBwcm9jZXNzIHRoYXQgcmVtb3ZlcyBhbnkgQ08yIGFuZCBvdGhlciBjb250YW1pbmFudHMgcHJlc2VudCBpbiB0aGUgYmlvZ2FzKSBvciB0aHJvdWdoIHRoZSBnYXNpZmljYXRpb24gb2Ygc29saWQgYmlvbWFzcyBmb2xsb3dlZCBieSBtZXRoYW5hdGlvbjogVXBncmFkaW5nIGJpb2dhczogVGhpcyBhY2NvdW50cyBmb3IgYXJvdW5kIDkwJSBvZiB0b3RhbCBiaW9tZXRoYW5lIHByb2R1Y2VkIHdvcmxkd2lkZSAuICAgICAgICAgdG9kYXkuIFVwZ3JhZGluZyB0ZWNobm9sb2dpZXMgbWFrZSB1c2Ugb2YgdGhlIGRpZmZlcmVudCBwcm9wZXJ0aWVzIG9mIHRoZSB2YXJpb3VzIGdhc2VzIGNvbnRhaW5lZCB3aXRoaW4gYmlvZ2FzIHRvIHNlcGFyYXRlIHRoZW0sIHdpdGggd2F0ZXIgc2NydWJiaW5nIGFuZCBtZW1icmFuZSBzZXBhcmF0aW9uIGFjY291bnRpbmcgZm9yIGFsbW9zdCA2MCUgb2YgYmlvbWV0aGFuZSBwcm9kdWN0aW9uIGdsb2JhbGx5IHRvZGF5LiBUaGVybWFsIGdhc2lmaWNhdGlvbiBvZiBzb2xpZCBiaW9tYXNzIGZvbGxvd2VkIGJ5IG1ldGhhbmF0aW9uOiBXb29keSBiaW9tYXNzIGlzIGZpcnN0IGJyb2tlbiBkb3duIGF0IGhpZ2ggdGVtcGVyYXR1cmUgKGJldHdlZW4gNzAwLTgwMMKwQykgYW5kIGhpZ2ggcHJlc3N1cmUgaW4gYSBsb3ctb3h5Z2VuIGVudmlyb25tZW50LiBVbmRlciB0aGVzZSBjb25kaXRpb25zLCB0aGUgYmlvbWFzcyBpcyBjb252ZXJ0ZWQgaW50byBhIG1peHR1cmUgb2YgZ2FzZXMsIG1haW5seSBjYXJib24gbW9ub3hpZGUsIGh5ZHJvZ2VuIGFuZCBtZXRoYW5lIChzb21ldGltZXMgY29sbGVjdGl2ZWx5IGNhbGxlZCBzeW5nYXMpLiBUbyBwcm9kdWNlIGEgcHVyZSBzdHJlYW0gb2YgYmlvbWV0aGFuZSwgdGhpcyBzeW5nYXMgaXMgY2xlYW5lZCB0byByZW1vdmUgYW55IGFjaWRpYyBhbmQgY29ycm9zaXZlIGNvbXBvbmVudHMuIFRoZSBtZXRoYW5hdGlvbiBwcm9jZXNzIHRoZW4gdXNlcyBhIGNhdGFseXN0IHRvIHByb21vdGUgYSByZWFjdGlvbiBiZXR3ZWVuIHRoZSBoeWRyb2dlbiBhbmQgY2FyYm9uIG1vbm94aWRlIG9yIENPMiB0byBwcm9kdWNlIG1ldGhhbmUuIEFueSByZW1haW5pbmcgQ08yIG9yIHdhdGVyIGlzIHJlbW92ZWQgYXQgdGhlIGVuZCBvZiB0aGlzIHByb2Nlc3MuIExlYXJuaW5nOiBUaGUgbWV0aGFuZSBjb250ZW50IG9mIGJpb2dhcyB0eXBpY2FsbHkgcmFuZ2VzIGZyb20gNDUlIHRvIDc1JSBieSB2b2x1bWUsIHdpdGggbW9zdCBvZiB0aGUgcmVtYWluZGVyIGJlaW5nIENPMi4gVGhpcyB2YXJpYXRpb24gbWVhbnMgdGhhdCB0aGUgZW5lcmd5IGNvbnRlbnQgb2YgYmlvZ2FzIGNhbiB2YXJ5OyB0aGUgbG93ZXIgaGVhdGluZyB2YWx1ZSAoTEhWKSBpcyBiZXR3ZWVuIDE2IG1lZ2Fqb3VsZXMgcGVyIGN1YmljIG1ldHJlIChNSi9tMykgYW5kIDI4IE1KL20zLiBCaW9nYXMgY2FuIGJlIHVzZWQgZGlyZWN0bHkgdG8gcHJvZHVjZSBlbGVjdHJpY2l0eSBhbmQgaGVhdCBvciBhcyBhbiBlbmVyZ3kgc291cmNlIGZvciBjb29raW5nLiBCaW9tZXRoYW5lIGhhcyBhbiBMSFYgb2YgYXJvdW5kIDM2IE1KL20zLiBJdCBpcyBpbmRpc3Rpbmd1aXNoYWJsZSBmcm9tIG5hdHVyYWwgZ2FzIGFuZCBzbyBjYW4gYmUgdXNlZCB3aXRob3V0IHRoZSBuZWVkIGZvciBhbnkgY2hhbmdlcyBpbiB0cmFuc21pc3Npb24gYW5kIGRpc3RyaWJ1dGlvbiBpbmZyYXN0cnVjdHVyZSBvciBlbmQtIHVzZXIgZXF1aXBtZW50LCBhbmQgaXMgZnVsbHkgY29tcGF0aWJsZSBmb3IgdXNlIGluIG5hdHVyYWwgZ2FzIHZlaGljbGVzLiBRIFNvdXJjZTogQVI6IENoYXB0ZXIgMzogOHRoIE5DRVJUIEdlb2dyYXBoeSBodHRwczovL3d3dy5pZWEub3JnL3JlcG9ydHMvb3V0bG9vay1mb3ItYmlvZ2FzLWFuZC1iaW9tZXRoYW5lLXByb3NwZWN0cy1mb3Itb3JnYW5pYy1ncm93dGgvYW4gLWludHJvZHVjdGlvbi10by1iaW9nYXMtYW5kLWJpb21ldGhhbmU=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2 .       "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements.\n\t1. The Darjeeling Himalayan Railway (DHR) started its operations in the pre-independence era.\n\t2. The DHR is a part of the Eastern Frontier Railway (EFR).\n\t3. The DHR is a UNESCO World Heritage Site.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIERhcmplZWxpbmcgSGltYWxheWFuIFJhaWx3YXkgKERIUikgb3IgdGhlIFRveSBUcmFpbiBpcyBhIDE0MS15ZWFyLW9sZCBtb3VudGFpbiByYWlsd2F5IHN5c3RlbSB0aGF0IHN0YXJ0ZWQgb3BlcmF0aW5nIGluIDE4ODEuIC4gICAgICAgICBMb2NhdGVkIGluIHRoZSBmb290aGlsbHMgb2YgdGhlIEhpbWFsYXlhcywgaXQgaXMgYSAyLWZ0IGdhdWdlIHJhaWx3YXkgdGhhdCBydW5zIGluIFdlc3QgQmVuZ2FsLiBUaGlzIHJhaWx3YXkgc3lzdGVtIGNvbWVzIHVuZGVyIHRoZSBHdXdhaGF0aS1oZWFkcXVhcnRlcmVkIE5vcnRoZWFzdCBGcm9udGllciBSYWlsd2F5IChORlIpLiBUaGUgTkZSIGN1cnJlbnRseSBvcGVyYXRlcyBhIGRhaWx5IHNlcnZpY2UgYmV0d2VlbiBOZXcgSmFscGFpZ3VyaSBhbmQgRGFyamVlbGluZyBhbmQgMTIgam95cmlkZSBzZXJ2aWNlcyBiZXR3ZWVuIERhcmplZWxpbmcgYW5kIEdodW0gKEluZGlhJ3MgaGlnaGVzdCByYWlsd2F5IHN0YXRpb24pLiBUaGUgREhSIGFsc28gaW50cm9kdWNlZCBzcGVjaWFsIHNlcnZpY2VzIHN1Y2ggYXMgU3RlYW0gSnVuZ2xlIFRlYSBTYWZhcmksIFJlZCBQYW5kYSBhbmQgSGltIEthbnlhLiBUaGUgREhSIGlzIGEgVU5FU0NPIFdvcmxkIEhlcml0YWdlIFNpdGUgc2luY2UgMTk5OS4gTGVhcm5pbmc6IE1vdW50YWluIFJhaWx3YXlzIERlY2xhcmVkIGFzIFVORVNDTyBXb3JsZCBIZXJpdGFnZSBTaXRlcyBEYXJqZWVsaW5nIEhpbWFsYXlhbiBSYWlsd2F5OiBXZXN0IEJlbmdhbCAoMTk5OSkgTmlsZ2lyaSBNb3VudGFpbiBSYWlsd2F5czogTmlsZ2lyaSBIaWxscyBvZiBUYW1pbCBOYWR1ICgyMDA1KSBLYWxrYSBTaGltbGEgUmFpbHdheTogSGltYWxheWFuIGZvb3RoaWxscyBvZiBIaW1hY2hhbCBQcmFkZXNoICgyMDA4KSBRIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tIG9kYXlzLXBhcGVyIHAtbWlzY2VsbGFuZW91cyBwLW90aGVycy9yZWNvcmQtZWFybmluZ3MtZm9yLWRhcmplZWxpIG5nLXRveS10cmFpbi9hcnRpY2xlNjU1NTU0MjQuZWNl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 only",
        "option3" : "1 and 3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following with reference to the background of the 'Indigo or Blue\n\t9. rebellion', 185\n\t1. Ryoti was the predominant form of indigo cultivation in Bengal under which the ryots sowedindigo under a contract system.\n\t2. At the inception of the Indigo contract, the planter made an advance payment to the ryot tomeet the expenses of cultivation.\n\t3. The Indigo Commission found that the indigo cultivation system was oppressive in natureespecially because of the system of advances.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogYW5kIExlYXJuaW5nOiBJbmRpZ28gd2FzIGJlaW5nIGN1bHRpdmF0ZWQgaW4gQmVuZ2FsIHNpbmNlIHRoZSBlbmQgb2YgdGhlIDE4dGggY2VudHVyeS4gSXQgd2FzIHByYWN0aWNlZCBtYWlubHkgaW4gdHdvIGZvcm1zLCB0aGUgTmlqLWFiYWQgYW5kIHRoZSBSeW90aS4gSW4gdGhlIE5paiBvciAnb3duJyBzeXN0ZW0sIHRoZSBwbGFudGVyIHByb2R1Y2VkIGluZGlnbyBvbiBsYW5kcyB0aGF0IGhlIGRpcmVjdGx5IGNvbnRyb2xsZWQuIEluIHRoZSBSeW90aSBjdWx0aXZhdGlvbiwgdGhlIHJ5b3RzIGN1bHRpdmF0ZWQgaW5kaWdvIG9uIHRoZWlyIG93biBsYW5kcyBhcyBwYXJ0IG9mIGEgY29udHJhY3Qgd2l0aCB0aGUgcGxhbnRlcnMuIFJ5b3RpIHdhcyB0aGUgcHJlZG9taW5hbnQgZm9ybSBvZiBpbmRpZ28gY3VsdGl2YXRpb24gaW4gQmVuZ2FsLiBUaGUgcnlvdHMgc293ZWQgLiAgICAgICAgIGluZGlnbyB1bmRlciBhIGNvbnRyYWN0IHN5c3RlbS4gSXQgZXh0ZW5kZWQgdG8gYSBwZXJpb2Qgb2YgZWl0aGVyIG9uZSwgdGhyZWUgdG8gZml2ZSBvciB0ZW4geWVhcnMuIEF0IHRoZSBpbmNlcHRpb24gb2YgdGhlIGNvbnRyYWN0LCB0aGUgcGxhbnRlciBtYWRlIGFuIGFkdmFuY2UgcGF5bWVudCB0byB0aGUgcnlvdCB0byBtZWV0IHRoZSBleHBlbnNlcyBvZiBjdWx0aXZhdGlvbi4gSW4gcmV0dXJuLCB0aGUgcnlvdCBhZ3JlZWQgdG8gY3VsdGl2YXRlIGluZGlnbyBvbiBoaXMgbGFuZC4gVGhlIGFkdmFuY2VzIHdlcmUgZ2VuZXJhbGx5IG1hZGUgaW4gT2N0b2JlciBvciBOb3ZlbWJlciBhdCB0aGUgcmF0ZSBvZiB0d28gcnVwZWVzIHBlciBiZWVnYWguIEFzIHBlciB0aGUgY29udHJhY3QsIHRoZSBsYW5kIGhhZCB0byBiZSBzb3duIHdpdGggaW5kaWdvLCB3ZWVkZWQgYW5kIGRlbGl2ZXJlZCBhdCB0aGUgaW5kaWdvIGZhY3RvcmllcyBvd25lZCBieSB0aGUgRXVyb3BlYW4gcGxhbnRlcnMgd2hlcmUgdGhlIHBsYW50IHdhcyBwcm9jZXNzZWQgaW50byBhIGR5ZS4gQXQgdGhlIGNsb3NlIG9mIHRoZSBtYW51ZmFjdHVyaW5nIHNlYXNvbiBpbiBBdWd1c3Qgb3IgU2VwdGVtYmVyLCB0aGUgYWNjb3VudHMgdXNlZCB0byBiZSBkcmF3biBvdXQuIFRoZSBkZWJpdCBpbmNsdWRlZCB0aGUgY29zdCBvZiBhZHZhbmNlIChnZW5lcmFsbHkgYXQgdHdvIHJ1cGVlcyBwZXIgYmVlZ2FoKSwgdGhlIGNvc3Qgb2YgdGhlIHN0YW1wIHBhcGVyIG9uIHdoaWNoIHRoZSBjb250cmFjdCB3YXMgc2lnbmVkICh0d28gYW5uYXMpIGFuZCB0aGUgY29zdCBvZiBmb3VyIHRvIGZpdmUgc2VlcnMgb2Ygc2VlZHMgY2hhcmdlZCBhdCBmb3VyIGFubmFzIHBlciBiZWVnYWguIFRoZSBjcmVkaXQgaW5jbHVkZWQgdGhlIHZhbHVlIG9mIGluZGlnbyBwbGFudCBidW5kbGVzIGRlbGl2ZXJlZCBieSB0aGUgcnlvdCB0byB0aGUgZmFjdG9yaWVzIGF0IDQgdG8gOCBidW5kbGVzIHBlciBydXBlZS4gVGhlIGF2ZXJhZ2UgcmV0dXJuIG9mIGEgYmVlZ2FoIHdhcyBhYm91dCAxMCB0byAxMiBidW5kbGVzLiBCZXR3ZWVuIHRoZSBkZWJpdCBhbmQgY3JlZGl0IGFtb3VudCwgYSBiYWxhbmNlIHdhcyBzdHJ1Y2sgYW5kIHBheW1lbnQgd2FzIG1hZGUgYWNjb3JkaW5nbHkuIElmIGhlIGhhZCBhICdmYXppbCcgb3IgZXhjZXNzIHRoZW4gaGUgd2FzIHBhaWQuIElmIG5vdCwgdGhlbiBhIGRlYnQgd2FzIHNldCBhZ2FpbnN0IGhpbS4gRGVzcGl0ZSB0aGUgZGVidCwgYSBmcmVzaCBhZHZhbmNlIHdhcyBnaXZlbiB0byBoaW0gZm9yIHRoZSBuZXh0IHNlYXNvbi4gSG93ZXZlciwgdGhlIGRlYnQgd2FzIGRlZHVjdGVkIGZyb20gdGhlIGZ1bGwgYWR2YW5jZSBhbW91bnQgYW5kIHRoZSByeW90IHJlY2VpdmVkIG9ubHkgdGhlIHJlbWFpbmluZyBzdW0gZm9yIHRoZSBuZXh0IGFncmljdWx0dXJhbCBzZWFzb24uIEluIHNvbWUgY2FzZXMsIGlmIHRoZSBkZWJ0IHdhcyB0b28gaGlnaCwgdGhlIHJ5b3QgZGlkIG5vdCByZWNlaXZlIGFueSBmcmVzaCBhZHZhbmNlIGFuZCB3YXMgdHJhcHBlZCBpbnRvIHNvd2luZyBpbmRpZ28gd2l0aG91dCBpdCEgSXQgd2FzIGluIGxpZ2h0IG9mIHRoZSBnZW5lcmFsIHVucmVzdCBzdXJyb3VuZGluZyBpbmRpZ28gY3VsdGl2YXRpb24gdGhhdCBhIENvbW1pc3Npb24gd2FzIHNldCB1cCBpbiBNYXJjaCAxODYwIHRvIGlucXVpcmUgaW50byB0aGUgaWxscyBvZiB0aGUgc3lzdGVtLiBUaGUgSW5kaWdvIENvbW1pc3Npb24uIFRoZSBDb21taXNzaW9uIGZvdW5kIHRoYXQgdGhlIGluZGlnbyBjdWx0aXZhdGlvbiBzeXN0ZW0gd2FzIG9wcHJlc3NpdmUgaW4gbmF0dXJlIGVzcGVjaWFsbHkgYmVjYXVzZSBvZiB0aGUgc3lzdGVtIG9mIGFkdmFuY2VzLiBTb21lIHdlcmUgd2lsbGluZ2x5IGx1cmVkIGJ5IGl0IGJlY2F1c2UgdGhleSBoYWQgdG8gcGF5IHJlbnQgYW5kIGNlbGVicmF0ZSB0aGUgYW5udWFsIGZlc3RpdmFsIG9mIER1cmdhIFB1amEgd2hpbGUgb3RoZXJzIHN1ZmZlcmVkIHVuZGVyIGl0IGJlY2F1c2UgdGhlaXIgZmF0aGVyIG9yIGdyYW5kZmF0aGVyIGhhZCB0YWtlbiB0aGUgYWR2YW5jZSBhbmQgbm93IHRoZXkgd2VyZSBjYXB0dXJlZCBpbiBhIGN5Y2xlIG9mIGRlYnQuICdUaGUgc29uIHNvd3MgYmVjYXVzZSBoZSBiZWxpZXZlcyB0aGF0IGhlIGlzIHJlc3BvbnNpYmxlIGZvciBoaXMgZmF0aGVyJ3MgZGVidC4nIFEgU291cmNlOiBBUjogUGFnZSAzMzogT3VyIHBhc3RzLUlJSSAoUGFydCBJKSBodHRwczovL2luZGlhbmN1bHR1cmUuZ292LmluL3N0b3JpZXMvaW5kaWdvLXJldm9sdC1iZW5nYWw=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3",
        "option2" : "1 and 3",
        "option3" : "1 and 2",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 22,
      "question" : "Plants generally conform to one of two root systems, a taproot system or a fibrousroot system. Consider the following about them.\n\t1. Fibrous roots grow more deeply in the soil than tap roots.\n\t2. Taproot is larger in diameter than lateral root.\n\t3. Fibrous roots can be found in monocots such as grass.\n\t4. Some plants, depending on how they are grown, can grow either fibrous or tap root.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUGxhbnRzIGdlbmVyYWxseSBjb25mb3JtIHRvIG9uZSBvZiB0d28gcm9vdCBzeXN0ZW1zLCBhIHRhcHJvb3Qgc3lzdGVtIG9yIGEgZmlicm91cyByb290IHN5c3RlbS4gUzEgYW5kIFMyOiBBIHRhcHJvb3Qgc3lzdGVtLCBnZW5lcmFsbHkgZm91bmQgaW4gZGljb3R5bGVkb25zLCBpcyBtYWRlIHVwIG9mIGEgY2VudHJhbCwgbGFyZ2Ugcm9vdCB0aGF0IGlzIGNhbGxlZCB0aGUgdGFwcm9vdC4gVGhlIHRhcHJvb3QgaXMgbGFyZ2VyIGluIGRpYW1ldGVyIHRoYW4gdGhlIGxhdGVyYWwgcm9vdHMuIExhdGVyYWwgcm9vdHMsIHdoaWNoIG9yaWdpbmF0ZSBmcm9tIHRoZSBwZXJpY3ljbGUsIGJyYW5jaCBvZmYgZnJvbSB0aGUgdGFwcm9vdCwgYW5kIHN1YnNlcXVlbnQgbGF0ZXJhbCByb290cyBjYW4gYnJhbmNoIG9mZiBvdGhlciBsYXRlcmFsIHJvb3RzLiBUYXByb290cyBnZW5lcmFsbHkgZ3JvdyBtb3JlIGRlZXBseSBpbnRvIHRoZSBzb2lsIHRoYW4gZG8gZmlicm91cyByb290cy4gUzM6ICAgVW5saWtlIHRoZSB0YXByb290IHN5c3RlbSwgdGhlIGZpYnJvdXMgcm9vdCBzeXN0ZW0gaXMgbWFkZSB1cCBvZiB0aGluLCBzdHJpbmd5IHJvb3RzIHRoYXQgYWxsIGhhdmUgYWJvdXQgdGhlIHNhbWUgZGlhbWV0ZXIuIFRoZXNlIHJvb3RzIGJyYW5jaCBzZXZlcmFsIHRpbWVzIGFuZCBmb3JtIGEgY29tcGxleCBtYXQgdW5kZXIgdGhlIHBsYW50IHRoYXQgYmluZHMgdG8gdGhlIHVwcGVyIHNvaWwgbGF5ZXJzLiBGaWJyb3VzIHJvb3RzIGNhbiBiZSBmb3VuZCBpbiBtb25vY290cyBzdWNoIGFzIGdyYXNzZXMuIFM0OiBUaGUgdG9tYXRvIHBsYW50IGNhbiBoYXZlIGEgZmlicm91cyByb290IHN5c3RlbSBvciBhIHRhcHJvb3Qgc3lzdGVtIGRlcGVuZGluZyBvbiBob3cgdGhlIHBsYW50IHdhcyBncm93bi4gSWYgdGhlIHBsYW50IGlzIGdyb3duIGZyb20gYSBzZWVkLCB0aGUgcGxhbnQgd2lsbCBleGhpYml0IHRhcHJvb3Qgb3JnYW5pemF0aW9uLCBhcyBzaG93biBpbiB0aGUgcGhvdG9ncmFwaCBhbmQgZHJhd2luZyBiZWxvdy4gV2hlbiB0aGUgcGxhbnQgaXMgZ3Jvd24gZnJvbSBjdXR0aW5ncywgYSBmaWJyb3VzIHJvb3Qgc3lzdGVtIHdpbGwgZm9ybS4gUSBTb3VyY2U6IEFSOiBQYWdlIDU5OiA2dGggU2NpZW5jZSBOQ0VSVA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 , 3 and 4 only",
        "option2" : "1 and 3 only",
        "option3" : "1, 2, 3 and 4",
        "option4" : "3 and 4 only"
      }
    },
    {
      "index" : 23,
      "question" : "Cyclone warnings are issued to state government officials by the relevant authoritiesin four stages. Consider the following about it.\n\t1. The First Stage of the warning known as \"PRE-CYCLONE WATCH\" is issued 24 hours in advance.\n\t2. The second and third stages of the warning are issued at a maximum of 6 hours differencebetween them..\n\t3. Fleet Forecasts for Indian Navy, Coastal Bulletins for Indian coastal areas are also issued.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogYW5kIExlYXJuaW5nOiBUaGUgY3ljbG9uZSB3YXJuaW5ncyBhcmUgaXNzdWVkIHRvIHN0YXRlIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGluIGZvdXIgc3RhZ2VzLiBUaGUgRmlyc3QgU3RhZ2Ugd2FybmluZyBrbm93biBhcyAiUFJFIENZQ0xPTkUgV0FUQ0giIGlzc3VlZCA3MiBob3VycyBpbiBhZHZhbmNlIGNvbnRhaW5zIGVhcmx5IHdhcm5pbmcgYWJvdXQgdGhlIGRldmVsb3BtZW50IG9mIGEgY3ljbG9uaWMgZGlzdHVyYmFuY2UgaW4gdGhlIG5vcnRoIEluZGlhbiBPY2VhbiwgaXRzIGxpa2VseSBpbnRlbnNpZmljYXRpb24gaW50byBhIHRyb3BpY2FsIGN5Y2xvbmUgYW5kIHRoZSBjb2FzdGFsIGJlbHQgbGlrZWx5IHRvIGV4cGVyaWVuY2UgYWR2ZXJzZSB3ZWF0aGVyLiBUaGlzIGVhcmx5IHdhcm5pbmcgYnVsbGV0aW4gaXMgaXNzdWVkIGJ5IHRoZSBEaXJlY3RvciBHZW5lcmFsIG9mIE1ldGVvcm9sb2d5IGhpbXNlbGYgYW5kIGlzIGFkZHJlc3NlZCB0byB0aGUgQ2FiaW5ldCBTZWNyZXRhcnkgYW5kIG90aGVyIHNlbmlvciBvZmZpY2VycyBvZiB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBpbmNsdWRpbmcgdGhlIENoaWVmIFNlY3JldGFyaWVzIG9mIGNvbmNlcm5lZCBtYXJpdGltZSBzdGF0ZXMuIFRoZSBTZWNvbmQgU3RhZ2Ugd2FybmluZyBrbm93biBhcyAiQ1lDTE9ORSBBTEVSVCIgaXMgaXNzdWVkIGF0IGxlYXN0IDQ4IGhycy4gaW4gYWR2YW5jZSBvZiB0aGUgZXhwZWN0ZWQgY29tbWVuY2VtZW50IG9mIGFkdmVyc2Ugd2VhdGhlciBvdmVyIHRoZSBjb2FzdGFsIGFyZWFzLiBJdCBjb250YWlucyBpbmZvcm1hdGlvbiBvbiB0aGUgbG9jYXRpb24gYW5kIGludGVuc2l0eSBvZiB0aGUgc3Rvcm0gbGlrZWx5IGRpcmVjdGlvbiBvZiBpdHMgbW92ZW1lbnQsIGludGVuc2lmaWNhdGlvbiwgY29hc3RhbCBkaXN0cmljdHMgbGlrZWx5IHRvIGV4cGVyaWVuY2UgYWR2ZXJzZSB3ZWF0aGVyIGFuZCBhZHZpY2UgdG8gZmlzaGVybWVuLCBnZW5lcmFsIHB1YmxpYywgbWVkaWEgYW5kIGRpc2FzdGVyIG1hbmFnZXJzLiBUaGlzIGlzIGlzc3VlZCBieSB0aGUgY29uY2VybmVkIEFDV0NzL0NXQ3MgYW5kIENXRCBhdCBIUS4gVGhlIFRoaXJkIFN0YWdlIHdhcm5pbmcga25vd24gYXMgIkNZQ0xPTkUgV0FSTklORyIgaXNzdWVkIGF0IGxlYXN0IDI0IGhvdXJzIGluIGFkdmFuY2Ugb2YgdGhlIGV4cGVjdGVkIGNvbW1lbmNlbWVudCBvZiBhZHZlcnNlIHdlYXRoZXIgb3ZlciB0aGUgY29hc3RhbCBhcmVhcy4gTGFuZGZhbGwgcG9pbnQgaXMgZm9yZWNhc3QgYXQgdGhpcyBzdGFnZS4gVGhlIEZvdXJ0aCBTdGFnZSBvZiB3YXJuaW5nIGtub3duIGFzICJQT1NUIExBTkRGQUxMIE9VVExPT0siIGlzIGlzc3VlZCBieSB0aGUgY29uY2VybmVkIEFDV0NzL0NXQ3MvYW5kIENXRCBhdCBIUSBhdCBsZWFzdCAxMiBob3VycyBpbiBhZHZhbmNlIG9mIGV4cGVjdGVkIHRpbWUgb2YgbGFuZGZhbGwuIEl0IGdpdmVzIGxpa2VseSBkaXJlY3Rpb24gb2YgbW92ZW1lbnQgb2YgdGhlIGN5Y2xvbmUgYWZ0ZXIgaXRzIGxhbmRmYWxsIGFuZCBhZHZlcnNlIHdlYXRoZXIgbGlrZWx5IHRvIGJlIGV4cGVyaWVuY2VkIGluIHRoZSBpbnRlcmlvciBhcmVhcy4gRHVyaW5nIGRpc3R1cmJlZCB3ZWF0aGVyIG92ZXIgdGhlIEJheSBvZiBCZW5nYWwgYW5kIEFyYWJpYW4gU2VhLCB0aGUgcG9ydHMgbGlrZWx5IHRvIGJlIGFmZmVjdGVkIGFyZSB3YXJuZWQgYnkgY29uY2VybmVkIEFDV0NzL0NXQ3MgYnkgYWR2aXNpbmcgdGhlIHBvcnQgYXV0aG9yaXRpZXMgdGhyb3VnaCBwb3J0IHdhcm5pbmdzIHRvIGhvaXN0IGFwcHJvcHJpYXRlIFN0b3JtIFdhcm5pbmcgU2lnbmFscy4gVGhlIERlcGFydG1lbnQgYWxzbyBpc3N1ZXMgIkZsZWV0IEZvcmVjYXN0IiBmb3IgSW5kaWFuIE5hdnksIENvYXN0YWwgQnVsbGV0aW5zIGZvciBJbmRpYW4gY29hc3RhbCBhcmVhcyBjb3ZlcmluZyB1cCB0byA3NSBrbSBmcm9tIHRoZSBjb2FzdCBsaW5lIGFuZCBzZWEgYXJlYSBidWxsZXRpbnMgZm9yIHRoZSBzZWEgYXJlYXMgYmV5b25kIDc1IGttLiBUaGUgc3BlY2lhbCB3YXJuaW5ncyBhcmUgaXNzdWVkIGZvciBmaXNoZXJtZW4gZm91ciB0aW1lcyBhIGRheSBpbiBub3JtYWwgd2VhdGhlciBhbmQgZXZlcnkgdGhyZWUgaG91cmx5IGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgZm91ciBzdGFnZSB3YXJuaW5nIGluIGNhc2Ugb2YgZGlzdHVyYmVkIHdlYXRoZXIuIC4gICAgICAgICBUaGUgZ2VuZXJhbCBwdWJsaWMsIHRoZSBjb2FzdGFsIHJlc2lkZW50cyBhbmQgZmlzaGVybWVuIGFyZSB3YXJuZWQgdGhyb3VnaCBTdGF0ZSBHb3Zlcm5tZW50IG9mZmljaWFscyBhbmQgYnJvYWRjYXN0IG9mIHdhcm5pbmdzIHRocm91Z2ggQWxsIEluZGlhIFJhZGlvIGFuZCBOYXRpb25hbCBUZWxldmlzaW9uIChEb29yZGFyc2hhbikgdGVsZWNhc3QgcHJvZ3JhbW1lcyBpbiBuYXRpb25hbCBhbmQgcmVnaW9uYWwgaG9vay11cC4gICBRIFNvdXJjZTogQmFzZWQgb24gcmVjZW50IGV2ZW50cw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3",
        "option2" : "2 only",
        "option3" : "1 and 3",
        "option4" : "3 only"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements about the Siachen glacier.\n\t1. It lies in the Zanskar Range system.\n\t2. Snow Leopard and Brown Bear can be found here.\n\t3. It is the source of Nubra river, which is a part of the Indus system.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2lhY2hlbiBHbGFjaWVyIGlzIGFtb25nIG9mIHRoZSBsYXJnZXN0IGdsYWNpZXJzIGluIHRoZSBub24tcG9sYXIgcmVnaW9uIG9mIHRoZSB3b3JsZC4gSXQgbGllcyBpbiB0aGUgS2FyYWtvcmFtIFJhbmdlIHN5c3RlbSB3aGljaCBpcyBhIHBhcnQgb2Ygd2VzdGVybiBIaW1hbGF5YXMuIEl0IGFsc28gbGllcyB0byB0aGUgc291dGggb2YgdGhlIHpvbmUgdGhhdCBzZXBhcmF0ZXMgRXVyYXNpb24gUGxhdGUgd2l0aCB0aGUgSW5kaWFuIFBsYXRlLCB3aGljaCBpcyB0aGUgcmVzdWx0IG9mIGNvbnZlcmdlbmNlIGJvdW5kYXJ5IGludGVyYWN0aW9uIGluIGdlb2dyYXBoaWNhbCB0ZXJtcy4gSXQgaXMgdGhlIGhpZ2hlc3QgYmF0dGxlIGZpZWxkIGluIHRoZSB3b3JsZCBhbmQgbGllcyBpbiB0aGUgS2FyYWtvcmFtIFJhbmdlIHN5c3RlbSB3aGljaCBpcyBhIHBhcnQgb2Ygd2VzdGVybiBIaW1hbGF5YXMuIEl0IGhhcyBiZWVuIGNvbnRpbnVvdXNseSBjb250ZXN0ZWQgYnkgUGFraXN0YW4gYXMgaXRzIG93biBwYXJ0IHdoaWNoIGhhcyBsZWQgdG8gbWlsaXRhcmlzYXRpb24gb2YgdGhlIGdsYWNpZXIuIEFmdGVyIHRoZSBJbmRvLVBha2lzdGFuIHdhciBpbiAxOTcxLCBhbiBhZ3JlZW1lbnQgd2FzIHNpZ25lZCBiZXR3ZWVuIHRoZSB0d28gY291bnRyaWVzIGluIDE5NzIsIHdoaWNoIGNhbWUgdG8gYmUga25vd24gYXMgdGhlIFNoaW1sYSBBZ3JlZW1lbnQsIGJ1dCBpdCBmYWlsZWQgdG8gY2xlYXJseSBtZW50aW9uIHdobyBjb250cm9scyB0aGUgZ2xhY2llci4gSG93ZXZlciwgaW4gMTk4NCwgdGhlIFBha2lzdGFuIGFybXkgdHJpZWQgdG8gZW50ZXIgdGhlIGdsYWNpZXIsIGZvcmNpbmcgSW5kaWEgdG8gbGF1bmNoIGEgbWlsaXRhcnkgb3BlcmF0aW9uIGtub3duIGFzICdPcGVyYXRpb24gTWVnaGRvb3QnIGFuZCBzaW5jZSB0aGVuIHdlIGhhdmUgY29udHJvbCBvdmVyIHRoZSBnbGFjaWVyLiBGcmVxdWVudCBza2lybWlzaGVzIGRpZCBvY2N1ciBiZXR3ZWVuIDE4ODQgdG8gMjAwMy4gQSBjZWFzZWZpcmUgYWdyZWVtZW50IHdhcyBzaWduZWQgYmV0d2VlbiBJbmRpYSBhbmQgUGFraXN0YW4gaW4gMjAwMy4gVGhlIHJlZ2lvbiBpcyBhbHNvIGEgaG9tZSB0byByYXJlIHNwZWNpZXMgb2Ygc25vdyBsZW9wYXJkLCBicm93biBiZWFyIGV0YyB3aGljaCBtYXkgYmUgYWZmZWN0ZWQgYnkgbWlsaXRhcnkgcHJlc2VuY2UuIFRoaXMgaGFzIGxlZCB0byB0YWxrcyBpbiBpbnRlcm5hdGlvbmFsIGZvcnVtcyBhYm91dCBjcmVhdGluZyBhICdQZWFjZSBQYXJrJyBpbiB0aGUgYXJlYSBhbmQgZGVtaWxpdGFyaXNlIGl0LiBUaGUgZ2xhY2llciBpcyB0aGUgc291cmNlIG9mIG1hbnkgcml2ZXJzIGluY2x1ZGluZyBOdWJyYSBSaXZlciwgYSB0cmlidXRhcnkgb2YgU2h5b2ssIC4gICAgICAgICB3aGljaCBpcyBhIHBhcnQgb2YgdGhlIEluZHVzIFJpdmVyIFN5c3RlbS4gU2lhY2hlbiBHbGFjaWVyIGFsc28gYm9hc3RzIG9mIHRoZSB3b3JsZCdzIGhpZ2hlc3QgaGVsaXBhZCBidWlsdCBieSBJbmRpYSBhdCBQb2ludCBTb25hbSwgdG8gc3VwcGx5IGl0cyB0cm9vcHMuIEluZGlhIGFsc28gaW5zdGFsbGVkIHRoZSB3b3JsZCdzIGhpZ2hlc3QgdGVsZXBob25lIGJvb3RoIG9uIHRoZSBnbGFjaWVyLiBRIFNvdXJjZTogT2Z0ZW4gaW4gbmV3czogTWFwLWJhc2VkIFFzIEluZGlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3",
        "option3" : "3 only",
        "option4" : "2 only"
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements.\n\t1. M.N. Roy first proposed the idea of a Constituent Assembly of India in 1934.\n\t2. C. Rajagopalachari voiced the demand for a Constituent Assembly based on adult franchise.Which of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGlkZWEgZm9yIGEgQ29uc3RpdHVlbnQgQXNzZW1ibHkgd2FzIHByb3Bvc2VkIGluIDE5MzQgYnkgTS4gTi4gUm95LCBhIHBpb25lZXIgb2YgdGhlIENvbW11bmlzdCBtb3ZlbWVudCBpbiBJbmRpYSBhbmQgYW4gYWR2b2NhdGUgb2YgcmFkaWNhbCBkZW1vY3JhY3kuIEl0IGJlY2FtZSBhbiBvZmZpY2lhbCBkZW1hbmQgb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyBpbiAxOTM1LiBUaGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIGhlbGQgaXRzIHNlc3Npb24gYXQgTHVja25vdyBpbiBBcHJpbCAxOTM2IHByZXNpZGVkIGJ5IFB0LiBKYXdhaGFyIExhbCBOZWhydS4gVGhlIG9mZmljaWFsIGRlbWFuZCBmb3IgQ29uc3RpdHVlbnQgQXNzZW1ibHkgd2FzIHJhaXNlZCBhbmQgR292ZXJubWVudCBvZiBJbmRpYSBBY3QsIDE5MzUgd2FzIHJlamVjdGVkIGFzIGl0IGltcG9zZWQgdGhlIENvbnN0aXR1dGlvbiB3aGljaCB3YXMgYWdhaW5zdCB0aGUgd2lsbCBvZiB0aGUgSW5kaWFucy4gQy4gUmFqYWdvcGFsYWNoYXJpIHZvaWNlZCB0aGUgZGVtYW5kIGZvciBhIENvbnN0aXR1ZW50IEFzc2VtYmx5IG9uIDE1IE5vdmVtYmVyIDE5MzkgYmFzZWQgb24gYWR1bHQgZnJhbmNoaXNlLCBhbmQgd2FzIGFjY2VwdGVkIGJ5IHRoZSBCcml0aXNoIGluIEF1Z3VzdCAxOTQwLiBPbiA4IEF1Z3VzdCAxOTQwLCBhIHN0YXRlbWVudCB3YXMgbWFkZSBieSBWaWNlcm95IExvcmQgTGlubGl0aGdvdyBhYm91dCB0aGUgZXhwYW5zaW9uIG9mIHRoZSBHb3Zlcm5vci1HZW5lcmFsJ3MgRXhlY3V0aXZlIENvdW5jaWwgYW5kIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgV2FyIEFkdmlzb3J5IENvdW5jaWwuIFRoaXMgb2ZmZXIsIGtub3duIGFzIHRoZSBBdWd1c3QgT2ZmZXIsIGluY2x1ZGVkIGdpdmluZyBmdWxsIHdlaWdodCB0byBtaW5vcml0eSBvcGluaW9ucyBhbmQgYWxsb3dpbmcgSW5kaWFucyB0byBkcmFmdCB0aGVpciBvd24gY29uc3RpdHV0aW9uLiBEdXJpbmcgdGhlIFNlY29uZCBXb3JsZCBXYXIsIHRoaXMgYXNzZXJ0aW9uIGZvciBhbiBpbmRlcGVuZGVudCBDb25zdGl0dWVudCBBc3NlbWJseSBmb3JtZWQgb25seSBvZiBJbmRpYW5zIGdhaW5lZCBtb21lbnR1bSBhbmQgdGhpcyB3YXMgY29udmVuZWQgaW4gRGVjZW1iZXIgMTk0Ni4gVW5kZXIgdGhlIENhYmluZXQgTWlzc2lvbiBQbGFuIG9mIDE5NDYsIGVsZWN0aW9ucyB3ZXJlIGhlbGQgZm9yIHRoZSBmaXJzdCB0aW1lIGZvciB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkuIEJldHdlZW4gRGVjZW1iZXIgMTk0NiBhbmQgTm92ZW1iZXIgMTk0OSwgdGhlIENvbnN0aXR1ZW50IEFzc2VtYmx5IGRyYWZ0ZWQgYSBjb25zdGl0dXRpb24gZm9yIGluZGVwZW5kZW50IEluZGlhLiBRIFNvdXJjZTogUGFnZSA1OiA4dGggTkNFUlQgU29jaWFsIGFuZCBQb2xpdGljYWwgTGlmZSAuICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "None"
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following about the bhakti saint Chaitanya.\n\t1. He accepted disciples from all classes and castes.\n\t2. He believed that through love and devotion, song and dance, a devotee can feel the presenceof God.\n\t3. He did not believe in renouncing the material world and preached that salvation can be reachedvia 'right efforts' in this very material world.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSGUgd2FzIGEgd2VsbC1rbm93biBzYWludCBhbmQgcmVmb3JtZXIgb2YgQmVuZ2FsIHdobyBwb3B1bGFyaXNlZCB0aGUgS3Jpc2huYSBjdWx0LiBIZSByZW5vdW5jZWQgdGhlIG1hdGVyaWFsIHdvcmxkLCBiZWNhbWUgYW4gYXNjZXRpYyBhbmQgd2FuZGVyZWQgYWxsIG92ZXIgdGhlIGNvdW50cnkgcHJlYWNoaW5nIGhpcyBpZGVhcy4gSGUgcG9wdWxhcmlzZWQgdGhlIEtyaXNobmEgY3VsdCBpbiBNZWRpZXZhbCBJbmRpYS4gSGUgcHJvY2xhaW1lZCB0aGUgdW5pdmVyc2FsIGJyb3RoZXJob29kIG9mIG1hbiBhbmQgY29uZGVtbmVkIGFsbCBkaXN0aW5jdGlvbiBiYXNlZCBvbiByZWxpZ2lvbiBhbmQgY2FzdGUuIEhlIGVtcGhhc2lzZWQgbG92ZSBhbmQgcGVhY2UgYW5kIHNob3dlZCBncmVhdCBzeW1wYXRoeSB0byB0aGUgc3VmZmVyaW5ncyBvZiBvdGhlciBwZW9wbGUsIGVzcGVjaWFsbHkgdGhhdCBvZiB0aGUgcG9vciBhbmQgdGhlIHdlYWsuIEhlIGJlbGlldmVkIHRoYXQgdGhyb3VnaCBsb3ZlIGFuZCBkZXZvdGlvbiwgc29uZyBhbmQgZGFuY2UsIGEgZGV2b3RlZSBjYW4gZmVlbCB0aGUgcHJlc2VuY2Ugb2YgR29kLiBIZSBhY2NlcHRlZCBkaXNjaXBsZXMgZnJvbSBhbGwgY2xhc3NlcyBhbmQgY2FzdGVzIGFuZCBoaXMgdGVhY2hpbmdzIGFyZSB3aWRlbHkgZm9sbG93ZWQgaW4gQmVuZ2FsIGV2ZW4gdG9kYXkuIFEgU291cmNlOiA3dGggTkNFUlQ6IE91ciBwYXN0cyAtSUk=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "1 and 2",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following about the Mahalwari system..\n\t1. Holt Mackenzie devised this system considering the village as an integral unit of the economy.\n\t2. The charge of collecting the revenue and paying it to the Company was given to the zamindar,rather than the village headman.\n\t3. The revenue demand was revised periodically and was based on the measurements of thefields.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSG9sdCBNYWNrZW56aWUsIHdobyBkZXZpc2VkIHRoaXMgc3lzdGVtLCBmZWx0IHRoYXQgdGhlIHZpbGxhZ2Ugd2FzIGFuIGltcG9ydGFudCBzb2NpYWwgaW5zdGl0dXRpb24gaW4gbm9ydGggSW5kaWFuIHNvY2lldHkgYW5kIG5lZWRlZCB0byBiZSBwcmVzZXJ2ZWQuIFVuZGVyIGhpcyBkaXJlY3Rpb25zLCBjb2xsZWN0b3JzIHdlbnQgZnJvbSB2aWxsYWdlIHRvIHZpbGxhZ2UsIGluc3BlY3RpbmcgdGhlIGxhbmQsIG1lYXN1cmluZyB0aGUgZmllbGRzLCBhbmQgcmVjb3JkaW5nIHRoZSBjdXN0b21zIGFuZCByaWdodHMgb2YgZGlmZmVyZW50IGdyb3Vwcy4gVGhlIGVzdGltYXRlZCByZXZlbnVlIG9mIGVhY2ggcGxvdCB3aXRoaW4gYSB2aWxsYWdlIHdhcyBhZGRlZCB1cCB0byBjYWxjdWxhdGUgdGhlIHJldmVudWUgdGhhdCBlYWNoIHZpbGxhZ2UgKG1haGFsKSBoYWQgdG8gcGF5LiBUaGlzIGRlbWFuZCB3YXMgdG8gYmUgcmV2aXNlZCBwZXJpb2RpY2FsbHksIG5vdCBwZXJtYW5lbnRseSBmaXhlZC4gVGhlIGNoYXJnZSBvZiBjb2xsZWN0aW5nIHRoZSByZXZlbnVlIGFuZCBwYXlpbmcgaXQgdG8gdGhlIENvbXBhbnkgd2FzIGdpdmVuIHRvIHRoZSB2aWxsYWdlIGhlYWRtYW4sIHJhdGhlciB0aGFuIHRoZSB6YW1pbmRhci4gVGhpcyBzeXN0ZW0gY2FtZSB0byBiZSBrbm93biBhcyB0aGUgbWFoYWx3YXJpIHNldHRsZW1lbnQuIFEgU291cmNlOiBQYWdlIDI5OiBPdXIgcGFzdHMtSUlJIChQYXJ0IEkp",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 28,
      "question" : "The term \"Drug\", as per statutory provisions, means\n\t1. preparations applied on human body for the purpose of repelling insects\n\t2. substances intended to affect the structure or any function of the human or animal body\n\t3. chemicals used to kill vermins or insects which cause disease in human beingsSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHRlcm0gIkRydWciIEluY2x1ZGVzIC0gKGkpIGFsbCBtZWRpY2luZXMgZm9yIGludGVybmFsIG9yIGV4dGVybmFsIHVzZSBvZiBodW1hbiBiZWluZ3Mgb3IgYW5pbWFscyBhbmQgYWxsIHN1YnN0YW5jZXMgaW50ZW5kZWQgdG8gYmUgdXNlZCBmb3IsIG9yIGluIHRoZSBkaWFnbm9zaXMgdHJlYXRtZW50LCBtaXRpZ2F0aW9uLCBvciBwcmV2ZW50aW9uIG9mIGFueSBkaXNlYXNlIG9yIGRpc29yZGVyIGluIGh1bWFuIGJlaW5ncyBvciBhbmltYWxzLCBpbmNsdWRpbmcgcHJlcGFyYXRpb25zIGFwcGxpZWQgb24gaHVtYW4gYm9keSBmb3IgdGhlIHB1cnBvc2Ugb2YgcmVwZWxsaW5nIGluc2VjdHMgbGlrZSBtb3NxdWl0b2VzOyAoaWkpIHN1Y2ggc3Vic3RhbmNlcywgaW50ZW5kZWQgdG8gYWZmZWN0IHRoZSBzdHJ1Y3R1cmUgb3IgYW55IGZ1bmN0aW9uIG9mIHRoZSBodW1hbiBvciBhbmltYWwgYm9keSBvciBpbnRlbmRlZCB0byBiZSB1c2VkIGZvciB0aGUgZGVzdHJ1Y3Rpb24gb2YgdmVybWluIG9yIGluc2VjdHMgd2hpY2ggY2F1c2UgZGlzZWFzZSBpbiBodW1hbiBiZWluZ3Mgb3IgYW5pbWFscywgYXMgbWF5IGJlIHNwZWNpZmllZCBmcm9tIHRpbWUgdG8gdGltZSBieSB0aGUgR292ZXJubWVudCBieSBub3RpZmljYXRpb24gaW4gdGhlIG9mZmljaWFsIGdhemV0dGUuIExlYXJuaW5nOiBEcnVnIFByaWNlIENvbnRyb2wgT3JkZXJzIChEUENPKSBhcmUgaXNzdWVkIGJ5IHRoZSBHb3Zlcm5tZW50LCBpbiBleGVyY2lzZSBvZiB0aGUgcG93ZXJzIGNvbmZlcnJlZCB1bmRlciBzZWN0aW9uIDMgb2YgdGhlIEVzc2VudGlhbCBDb21tb2RpdGllcyBBY3QsIDE5NTUsIGZvciBlbmFibGluZyB0aGUgR292ZXJubWVudCB0byBkZWNsYXJlIGEgY2VpbGluZyBwcmljZSBmb3IgZXNzZW50aWFsIGFuZCBsaWZlIHNhdmluZyBtZWRpY2luZXMgKGFzIHBlciBhIC4gICAgICAgICBwcmVzY3JpYmVkIGZvcm11bGEpIHNvIGFzIHRvIGVuc3VyZSB0aGF0IHRoZXNlIG1lZGljaW5lcyBhcmUgYXZhaWxhYmxlIGF0IGEgcmVhc29uYWJsZSBwcmljZSB0byB0aGUgZ2VuZXJhbCBwdWJsaWMuIFRoZSBsYXRlc3QgRHJ1ZyBQcmljZSBDb250cm9sIE9yZGVyIChEUENPLTIwMTMpIHdhcyBpc3N1ZWQgb24gMTUuMDUuMjAxMy4gUHJpY2UgY29udHJvbHMgYXJlIGFwcGxpY2FibGUgdG8gd2hhdCBpcyBnZW5lcmFsbHkga25vd24gYXMgJ1NjaGVkdWxlZCBkcnVncycgb3IgJ1NjaGVkdWxlZCBmb3JtdWxhdGlvbnMnIHRoYXQgaXMsIHRob3NlIG1lZGljaW5lcyB3aGljaCBhcmUgbGlzdGVkIG91dCBpbiB0aGUgU2NoZWR1bGUgSSBvZiBEcnVnIFByaWNlIENvbnRyb2wgT3JkZXIgKERQQ08pLCBpc3N1ZWQgYnkgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgZnJvbSB0aW1lIHRvIHRpbWUuIFByaWNlIGNvbnRyb2xzIGFyZSBhcHBsaWNhYmxlIGlycmVzcGVjdGl2ZSBvZiB3aGV0aGVyIGEgZHJ1ZyBpcyBnZW5lcmljIG9yIGJyYW5kZWQuIEdlbmVyaWMgbWVkaWNpbmVzIGFyZSB1bmJyYW5kZWQgbWVkaWNpbmVzIHdoaWNoIGFyZSBlcXVhbGx5IHNhZmUgYW5kIGhhdmluZyB0aGUgc2FtZSBlZmZpY2FjeSBhcyB0aGF0IG9mIGJyYW5kZWQgbWVkaWNpbmVzIGluIHRlcm1zIG9mIHRoZWlyIHRoZXJhcGV1dGljIHZhbHVlLiBUaGUgcHJpY2VzIG9mIGdlbmVyaWMgbWVkaWNpbmVzIGFyZSBtdWNoIGNoZWFwZXIgdGhhbiB0aGVpciBicmFuZGVkIGVxdWl2YWxlbnQuIEEgYnJhbmRlZCBnZW5lcmljIGlzIGEgZHJ1ZyB0aGF0IGlzIGJpb2VxdWl2YWxlbnQgdG8gdGhlIG9yaWdpbmFsIHByb2R1Y3QsIGJ1dCBpcyBub3cgbWFya2V0ZWQgdW5kZXIgYW5vdGhlciBjb21wYW55J3MgYnJhbmQgbmFtZS4gSU1TIEhlYWx0aCwgd2hpY2ggYmVnYW4gdHJhY2tpbmcgYW5kIHJlcG9ydGluZyBvbiBicmFuZGVkIGdlbmVyaWNzIGluIDIwMDIsIGRlZmluZXMgdGhlIGNhdGVnb3J5IGFzIGluY2x1ZGluZyBwcmVzY3JpcHRpb24gInByb2R1Y3RzIHRoYXQgYXJlIGVpdGhlciBub3ZlbCBkb3NhZ2UgZm9ybXMgb2Ygb2ZmLXBhdGVudCBwcm9kdWN0cyBwcm9kdWNlZCBieSBhIG1hbnVmYWN0dXJlciB0aGF0IGlzIG5vdCB0aGUgb3JpZ2luYXRvciBvZiB0aGUgbW9sZWN1bGUsIG9yIGEgbW9sZWN1bGUgY29weSBvZiBhbiBvZmYtcGF0ZW50IHByb2R1Y3Qgd2l0aCBhIHRyYWRlIG5hbWUuIiAgUmVhZCBtb3JlIGhlcmUgaHR0cDovL3d3dy5hcnRoYXBlZGlhLmluL2luZGV4LnBocD90aXRsZT1EcnVnX1ByaWNlX0NvbnRyb2xfT3JkZXJzXyhEUENPKSBRIFNvdXJjZTogQVI6ICB1c2VkLWRydWdzL2FydGljbGVzaG93LzkyMjE4MjY0LmNtcw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "2 only",
        "option3" : "1 and 2",
        "option4" : "1 only"
      }
    },
    {
      "index" : 29,
      "question" : "With reference to the British practice of record-keeping in India, consider thefollowing statements.\n\t1. By the early nineteenth century detailed surveys were being carried out to map the entirecountry.\n\t2. Dedicated record rooms were attached to administrative institutions.\n\t3. Specialised institutions such as archives and museums were created to preserve importantrecords.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEJyaXRpc2ggYmVsaWV2ZWQgdGhhdCB0aGUgYWN0IG9mIHdyaXRpbmcgd2FzIGltcG9ydGFudC4gVGhpcyBjb252aWN0aW9uIHByb2R1Y2VkIGFuIGFkbWluaXN0cmF0aXZlIGN1bHR1cmUgb2YgbWVtb3MsIG5vdGluZ3MgYW5kIHJlcG9ydHMsIHdoaWNoIHByb3ZpZGVzIHVzIHdpdGggYSBzb3VyY2Ugb2YgaGlzdG9yeSAuICAgICAgICAgb2YgdGhlIEJyaXRpc2ggcnVsZSBpbiBJbmRpYS4gVGhlIEJyaXRpc2ggYWxzbyBmZWx0IHRoYXQgYWxsIGltcG9ydGFudCBkb2N1bWVudHMgYW5kIGxldHRlcnMgbmVlZGVkIHRvIGJlIGNhcmVmdWxseSBwcmVzZXJ2ZWQuIFNvLCB0aGV5IHNldCB1cCByZWNvcmQgcm9vbXMgYXR0YWNoZWQgdG8gYWxsIGFkbWluaXN0cmF0aXZlIGluc3RpdHV0aW9ucy4gVGhlIHZpbGxhZ2UgdGFoc2lsZGFyJ3Mgb2ZmaWNlLCB0aGUgY29sbGVjdG9yYXRlLCB0aGUgY29tbWlzc2lvbmVyJ3Mgb2ZmaWNlLCB0aGUgcHJvdmluY2lhbCBzZWNyZXRhcmlhdHMsIHRoZSBsYXdjb3VydHMgLSBhbGwgaGFkIHRoZWlyIHJlY29yZCByb29tcy4gU3BlY2lhbGlzZWQgaW5zdGl0dXRpb25zIGxpa2UgYXJjaGl2ZXMgYW5kIG11c2V1bXMgd2VyZSBhbHNvIGVzdGFibGlzaGVkIHRvIHByZXNlcnZlIGltcG9ydGFudCByZWNvcmRzLiBCeSB0aGUgZWFybHkgbmluZXRlZW50aCBjZW50dXJ5IGRldGFpbGVkIHN1cnZleXMgd2VyZSBiZWluZyBjYXJyaWVkIG91dCB0byBtYXAgdGhlIGVudGlyZSBjb3VudHJ5LiBJbiB0aGUgdmlsbGFnZXMsIHJldmVudWUgc3VydmV5cyB3ZXJlIGNvbmR1Y3RlZC4gVGhlIGVmZm9ydCB3YXMgdG8ga25vdyB0aGUgdG9wb2dyYXBoeSwgdGhlIHNvaWwgcXVhbGl0eSwgdGhlIGZsb3JhLCB0aGUgZmF1bmEsIHRoZSBsb2NhbCBoaXN0b3JpZXMsIGFuZCB0aGUgY3JvcHBpbmcgcGF0dGVybiAtIGFsbCB0aGUgZmFjdHMgc2VlbiBhcyBuZWNlc3NhcnkgdG8ga25vdyBhYm91dCB0byBhZG1pbmlzdGVyIHRoZSByZWdpb24uIEZyb20gdGhlIGVuZCBvZiB0aGUgbmluZXRlZW50aCBjZW50dXJ5LCBDZW5zdXMgb3BlcmF0aW9ucyB3ZXJlIGhlbGQgZXZlcnkgdGVuIHllYXJzLiBUaGVzZSBwcmVwYXJlZCBkZXRhaWxlZCByZWNvcmRzIG9mIHRoZSBudW1iZXIgb2YgcGVvcGxlIGluIGFsbCB0aGUgcHJvdmluY2VzIG9mIEluZGlhLCBub3RpbmcgaW5mb3JtYXRpb24gb24gY2FzdGVzLCByZWxpZ2lvbnMgYW5kIG9jY3VwYXRpb24uIFRoZXJlIHdlcmUgbWFueSBvdGhlciBzdXJ2ZXlzIC0gYm90YW5pY2FsIHN1cnZleXMsIHpvb2xvZ2ljYWwgc3VydmV5cywgYXJjaGFlb2xvZ2ljYWwgc3VydmV5cywgYW50aHJvcG9sb2dpY2FsIHN1cnZleXMsIGZvcmVzdCBzdXJ2ZXlzLiBRIFNvdXJjZTogUGFnZSA2OiA4dGggTkNFUlQgSGlzdG9yeTogT3VyIFBhc3RzIElJSS1J",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 30,
      "question" : "Who remarked that \"James Mill's highly influential History of British India (1817) -most particularly the long essay 'Of the Hindus' comprising ten chapters - is thesingle most important source of British Indophobia and hostility to Orientalism\"?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWlsbCBwcmVmZXJyZWQgdG8gdGFrZSBhIG1vcmUgdGhlb3JldGljYWwgYXBwcm9hY2ggdG8gc29jaWFsIHN1YmplY3RzIHRoYW4gdGhlIGVtcGlyaWNhbCBvbmUgY29tbW9uIGF0IHRoZSB0aW1lLiBIaXMgYmVzdCBrbm93biBsaXRlcmFyeSB3b3JrIGlzIGhpcyBIaXN0b3J5IG9mIEJyaXRpc2ggSW5kaWEsIGluIHdoaWNoIGhlIGRlc2NyaWJlcyB0aGUgYWNxdWlzaXRpb24gb2YgdGhlIEluZGlhbiBFbXBpcmUgYnkgRW5nbGFuZCBhbmQgbGF0ZXIgdGhlIFVuaXRlZCBLaW5nZG9tLiBIZSBicmluZ3MgcG9saXRpY2FsIHRoZW9yeSB0byBiZWFyIG9uIHRoZSBkZWxpbmVhdGlvbiBvZiB0aGUgSGluZHUgY2l2aWxpemF0aW9uLCBhbmQgc3ViamVjdHMgdGhlIC4gICAgICAgICBjb25kdWN0IG9mIHRoZSBhY3RvcnMgaW4gdGhlIHN1Y2Nlc3NpdmUgc3RhZ2VzIG9mIHRoZSBjb25xdWVzdCBhbmQgYWRtaW5pc3RyYXRpb24gb2YgSW5kaWEgdG8gc2V2ZXJlIGNyaXRpY2lzbS4gVGhlIHdvcmsgaXRzZWxmLCBhbmQgdGhlIGF1dGhvcidzIG9mZmljaWFsIGNvbm5lY3Rpb24gd2l0aCBJbmRpYSBmb3IgdGhlIGxhc3Qgc2V2ZW50ZWVuIHllYXJzIG9mIGhpcyBsaWZlLCBlZmZlY3RlZCBhIGNvbXBsZXRlIGNoYW5nZSBpbiB0aGUgd2hvbGUgc3lzdGVtIG9mIGdvdmVybmFuY2UgaW4gdGhlIGNvdW50cnkuIE1pbGwgbmV2ZXIgdmlzaXRlZCB0aGUgSW5kaWFuIGNvbG9ueSwgcmVseWluZyBzb2xlbHkgb24gZG9jdW1lbnRhcnkgbWF0ZXJpYWwgYW5kIGFyY2hpdmFsIHJlY29yZHMgaW4gY29tcGlsaW5nIGhpcyB3b3JrLiBUaGlzIGZhY3QgaGFzIGxlZCB0byBzZXZlcmUgY3JpdGljaXNtIG9mIE1pbGwncyBIaXN0b3J5IG9mIEluZGlhIGJ5IG5vdGFibGUgZWNvbm9taXN0IEFtYXJ0eWEgU2VuLiAgQWNjb3JkaW5nIHRvIFRob21hcyBUcmF1dG1hbm4sICJKYW1lcyBNaWxsJ3MgaGlnaGx5IGluZmx1ZW50aWFsIEhpc3Rvcnkgb2YgQnJpdGlzaCBJbmRpYSAoMTgxNykgLSBtb3N0IHBhcnRpY3VsYXJseSB0aGUgbG9uZyBlc3NheSAnT2YgdGhlIEhpbmR1cycgY29tcHJpc2luZyB0ZW4gY2hhcHRlcnMgLSBpcyB0aGUgc2luZ2xlIG1vc3QgaW1wb3J0YW50IHNvdXJjZSBvZiBCcml0aXNoIEluZG9waG9iaWEgYW5kIGhvc3RpbGl0eSB0byBPcmllbnRhbGlzbSIuIFEgU291cmNlOiBQYWdlIDM6IDh0aCBOQ0VSVCBIaXN0b3J5OiBPdXIgUGFzdHMgSUlJLUk=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Thomas Trautmann",
        "option2" : "Harold Hargreaves",
        "option3" : "J.F. Blakiston",
        "option4" : "James Burgess .       "
      }
    },
    {
      "index" : 31,
      "question" : "Himalayas experiences a greater number of avalanches and landslides in comparisonto the Western Ghats because\n\t1. the western region of the Himalayas experiences much greater rainfall than the Western Ghats.\n\t2. the Himalayas are formed of soft, young and unconsolidated deposits unlike the Western Ghatsthat has a consolidated rock structure.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRGVwZW5kaW5nIG9uIHRoZSByb2NrIHN0cnVjdHVyZSwgZGlmZmVyZW50IHJlZ2lvbnMgaGF2ZSB2YXJ5aW5nIGluY2lkZW5jZXMgb2YgbGFuZHNsaWRlcy4gU29mdCBhbmQgdW5jb25zb2xpZGF0ZWQgZm9ybWF0aW9ucyBsaWtlIEhpbWFsYXlhcyBoYXZlIEhpZ2ggdG8gdmVyeSBoaWdoIGluY2lkZW5jZSBvZiBsYW5kc2xpZGVzLiBOb3J0aC1lYXN0ZXJuIEhpbGxzIHRvbyBoYXZlIEhpZ2ggaW5jaWRlbmNlLiBUaGUgV2VzdGVybiBIaW1hbGF5YW4gcmVnaW9uIGV4cGVyaWVuY2VzIG11Y2ggbGVzcyByYWluZmFsbCB0aGFuIHRoZSBXZXN0ZXJuIEdoYXRzLCBzbyBTMSBpcyBpbmNvcnJlY3QuIFdlc3Rlcm4gR2hhdHMgYW5kIHRoZSBOaWxnaXJpcyBoYXZlIG1vZGVyYXRlIHRvIGxvdyBhbmQgVmluZGhheWFjaGFsIGhhcyBsb3cgaW5jaWRlbmNlIGR1ZSB0byB0aGUgaGFyZCBhbmQgY29uc29saWRhdGVkIHJvY2sgc3RydWN0dXJlLiBUaGVyZSBzZWVtcyB0byBiZSBhIHJlbGF0aW9uIGJldHdlZW4gaW50ZW5zaXR5IG9mIHJhaW5mYWxsIGFuZCBzbG9wZSBmYWlsdXJlcyBpbiBXZXN0ZXJuIEdoYXRzLiBBbG1vc3QgYWxsIG1hc3MgbW92ZW1lbnRzIG9jY3VyIGR1cmluZyBtb25zb29ucyAoU1cgYW5kIE5FIG1vbnNvb24pIGluIHRoZSB3ZXN0ZXJuIGZsYW5rIG9mIHdlc3Rlcm4gR2hhdHMgYW5kIGR1cmluZyBvY2Nhc2lvbmFsIGN5Y2xvbmljIGV2ZW50cyBpbiB0aGUgZWFzdGVybiBmbGFuayBpbmRpY2F0aW5nIHRoYXQgbWFpbiAuICAgICAgICAgdHJpZ2dlcmluZyBtZWNoYW5pc20gaXMgdGhlIG92ZXItIHNhdHVyYXRpb24gb2Ygb3ZlcmJ1cmRlbiBjYXVzZWQgYnkgaGVhdnkgcmFpbnMuIFEgU291cmNlOiBQYWdlIDEyOiA4dGggTkNFUlQ6IEdlb2dyYXBoeSAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements about the role of earthworms, which areconsidered primary 'ecosystem engineers'.\n\t1. Earthworms decompose the organic layer of forest soils and deliver plant-derived carbon intodeeper soil layers.\n\t2. Earthworms release CO2 but can also destabilize soil carbon by destroying protectedaggregates of carbon.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRWFydGh3b3JtcyBhcmUgY29uc2lkZXJlZCBwcmltYXJ5ICdlY29zeXN0ZW0gZW5naW5lZXJzLCcgbW92aW5nIHBsYW50IGFuZCBtaWNyb2JpYWwgcmVzaWR1ZXMgYW5kIGNyZWF0aW5nIGJpb3BvcmVzIGluIHRoZSBzb2lsLiBUaGVpciBlZmZlY3RzIG9uIHNvaWwgY2FyYm9uIChDKSBkeW5hbWljcyBpbiBmb3Jlc3QgZWNvc3lzdGVtcyBhcmUgaW1wb3J0YW50IGZvciB1bmRlcnN0YW5kaW5nIGhvdyBmb3Jlc3Qgc29pbHMgY2FuIGFjdCBhcyBDIHNpbmtzIG9yIHNvdXJjZXMgb2YgY2FyYm9uIGRpb3hpZGUgKENPMikgZW1pc3Npb25zLiBFYXJ0aHdvcm1zIGRlY29tcG9zZSB0aGUgb3JnYW5pYyBsYXllciBvZiBmb3Jlc3Qgc29pbHMgYW5kIGRlbGl2ZXIgcGxhbnQtIGRlcml2ZWQgQyBpbnRvIGRlZXBlciBzb2lsIGxheWVycy4gVGhleSByZWxlYXNlIENPMiBidXQgY2FuIGFsc28gc3RhYmlsaXplIEMgYnkgQy4gY3JlYXRpbmcgcHJvdGVjdGVkIGFnZ3JlZ2F0ZXMgb2YgIEVhcnRod29ybXMgb2NjdXIgaW4gbW9zdCB0ZW1wZXJhdGUgc29pbHMgYW5kIG1hbnkgdHJvcGljYWwgc29pbHMuIEVhcnRod29ybXMgZW5oYW5jZSBwb3Jvc2l0eSBhcyB0aGV5IG1vdmUgdGhyb3VnaCB0aGUgc29pbC4gU29tZSBzcGVjaWVzIG1ha2UgcGVybWFuZW50IGJ1cnJvd3MgZGVlcCBpbnRvIHRoZSBzb2lsLiBUaGVzZSBidXJyb3dzIGNhbiBwZXJzaXN0IGxvbmcgYWZ0ZXIgdGhlIGluaGFiaXRhbnQgaGFzIGRpZWQsIGFuZCBjYW4gYmUgYSBtYWpvciBjb25kdWl0IGZvciBzb2lsIGRyYWluYWdlLCBwYXJ0aWN1bGFybHkgdW5kZXIgaGVhdnkgcmFpbmZhbGwuIEJ5IGZyYWdtZW50aW5nIG9yZ2FuaWMgbWF0dGVyLCBhbmQgaW5jcmVhc2luZyBzb2lsIHBvcm9zaXR5IGFuZCBhZ2dyZWdhdGlvbiwgZWFydGh3b3JtcyBjYW4gc2lnbmlmaWNhbnRseSBpbmNyZWFzZSB0aGUgd2F0ZXItaG9sZGluZyBjYXBhY2l0eSBvZiBzb2lscy4gVGhlIGNoYW5uZWxzIG1hZGUgYnkgZGVlcC1idXJyb3dpbmcgZWFydGh3b3JtcyBhcmUgbGluZWQgd2l0aCByZWFkaWx5IGF2YWlsYWJsZSBudXRyaWVudHMgYW5kIG1ha2UgaXQgZWFzaWVyIGZvciByb290cyB0byBwZW5ldHJhdGUgZGVlcCBpbnRvIHRoZSBzb2lsLiBBcyB0aGV5IGNvbnN1bWUgb3JnYW5pYyBtYXR0ZXIgYW5kIG1pbmVyYWwgcGFydGljbGVzLCBlYXJ0aHdvcm1zIGV4Y3JldGUgd2FzdGVzIGluIHRoZSBmb3JtIG9mIGNhc3RzLCBhIHR5cGUgb2Ygc29pbCBhZ2dyZWdhdGUuIENoYXJsZXMgRGFyd2luIGNhbGN1bGF0ZWQgdGhhdCBlYXJ0aHdvcm1zIGNhbiBtb3ZlIGxhcmdlIGFtb3VudHMgb2Ygc29pbCBmcm9tIHRoZSBsb3dlciBzdHJhdGEgdG8gdGhlIHN1cmZhY2UgYW5kIGFsc28gY2Fycnkgb3JnYW5pYyBtYXR0ZXIgZG93biBpbnRvIGRlZXBlciBzb2lsIGxheWVycy4gQSBsYXJnZSBwcm9wb3J0aW9uIG9mIHNvaWwgcGFzc2VzIHRocm91Z2ggdGhlIGd1dHMgb2YgZWFydGh3b3JtcywgYW5kIHRoZXkgLiAgICAgICAgIGNhbiB0dXJuIG92ZXIgdGhlIHRvcCBzaXggaW5jaGVzICgxNSBjbSkgb2Ygc29pbCBpbiB0ZW4gdG8gdHdlbnR5IHllYXJzLiBRIFNvdXJjZTogQVI6IFBhZ2UgNzM6IDZ0aCBTY2llbmNlIE5DRVJUIGh0dHBzOi8vd3d3Lm5yY3MudXNkYS5nb3Yvd3BzL3BvcnRhbC9ucmNzL2RldGFpbGZ1bGwvc29pbHMvaGVhbHRoL2Jpb2xvZ3kvP2NpZD1ucmNzMTQycDJfMDUzODYgMyBodHRwczovL3d3dy5uYXRpb25hbGdlb2dyYXBoaWMuY29tL2FuaW1hbHMvaW52ZXJ0ZWJyYXRlcy9jL2NvbW1vbi1lYXJ0aHdvcm0v",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 33,
      "question" : "Prokaryotic cells are mainly found in\n\t1. bacteria\n\t2. plants\n\t3. fungiSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIGxpdmluZyB0aGluZ3MgYXJlIG1hZGUgb2YgY2VsbHMsIGFuZCBjZWxscyBhcmUgdGhlIHNtYWxsZXN0IHVuaXRzIHRoYXQgY2FuIGJlIGFsaXZlLiBMaWZlIG9uIEVhcnRoIGlzIGNsYXNzaWZpZWQgaW50byBmaXZlIGtpbmdkb21zLCBhbmQgdGhleSBlYWNoIGhhdmUgdGhlaXIgb3duIGNoYXJhY3RlcmlzdGljIGtpbmQgb2YgY2VsbC4gSG93ZXZlciwgdGhlIGJpZ2dlc3QgZGl2aXNpb24gaXMgYmV0d2VlbiB0aGUgY2VsbHMgb2YgdGhlIFByb2thcnlvdGUga2luZ2RvbSAodGhlIGJhY3RlcmlhKSBhbmQgdGhvc2Ugb2YgdGhlIG90aGVyIGZvdXIga2luZ2RvbXMgKEFuaW1hbHMsIFBsYW50cywgRnVuZ2kgYW5kIFByb3RvY3Rpc3RhKSwgd2hpY2ggYXJlIGFsbCBldWthcnlvdGljIGNlbGxzLiBQcm9rYXJ5b3RpYyBjZWxscyBhcmUgc21hbGxlciBhbmQgc2ltcGxlciB0aGFuIGV1a2FyeW90aWMgY2VsbHMsIGFuZCBkbyBub3QgaGF2ZSBhIG51Y2xldXMuIFByb2thcnlvdGUgPSAnYmVmb3JlIGNhcnJpZXIgYmFnJyBpLmUuLCB3aXRob3V0IGEgbnVjbGV1cyBFdWthcnlvdGUgPSAnZ29vZCBjYXJyaWVyIGJhZycgaS5lLiB3aXRoIGEgbnVjbGV1cyBUaGUgdGFibGUgYmVsb3cgc2hvd3MgdGhlIGRpZmZlcmVuY2VzIGNsZWFybHk6IC4gICAgICAgICBRIFNvdXJjZTogQVI6IFBhZ2UgMjogN3RoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following factors can lead to both acclimatisation and adaptation?\n\t1. Temperature of a region\n\t2. Humidity of a region\n\t3. Total photoperiod\n\t4. Changes in pHWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWNjbGltYXRpemF0aW9uIG9yIGFjY2xpbWF0aXNhdGlvbiBpcyB0aGUgcHJvY2VzcyBpbiB3aGljaCBhbiBpbmRpdmlkdWFsIG9yZ2FuaXNtIGFkanVzdHMgdG8gYSBjaGFuZ2UgaW4gaXRzIGVudmlyb25tZW50IChzdWNoIGFzIGEgY2hhbmdlIGluIGFsdGl0dWRlLCB0ZW1wZXJhdHVyZSwgaHVtaWRpdHksIHBob3RvcGVyaW9kLCBvciBwSCksIGFsbG93aW5nIGl0IHRvIG1haW50YWluIHBlcmZvcm1hbmNlIGFjcm9zcyBhIHJhbmdlIG9mIGVudmlyb25tZW50YWwgY29uZGl0aW9ucy4gQWNjbGltYXRpemF0aW9uIG9jY3VycyBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lIChob3VycyB0byB3ZWVrcyksIGFuZCB3aXRoaW4gdGhlIG9yZ2FuaXNtJ3MgbGlmZXRpbWUgKGNvbXBhcmVkIHRvIGFkYXB0YXRpb24sIHdoaWNoIGlzIGEgZGV2ZWxvcG1lbnQgdGhhdCB0YWtlcyBwbGFjZSBvdmVyIG1hbnkgZ2VuZXJhdGlvbnMpLiAuICAgICAgICAgQ2hhbmdlIGluIHBIIG92ZXIgYSBsb25nIHRpbWUgbWF5IGxlYWQgdG8gY2VydGFpbiBhZGFwdGF0aW9uIGluIHNheSBzb21lIGFxdWF0aWMgc3BlY2llcyB3aG8gbWlnaHQgdGVuZCB0byBkZXZlbG9wIG1vcmUgcmVzaXN0YW5jZSB0byBhIGhpZ2hlciBwSCB3YXRlci4gICBBY2NsaW1hdGl6YXRpb24gaXMgbXVjaCBzaW1wbGVyLCBmb3IgZS5nLiB3aGVuIG1vdW50YWluZWVycyBhY2NsaW1hdGUgdG8gaGlnaCBhbHRpdHVkZSBvdmVyIGhvdXJzIG9yIGRheXMpIG9yIG1heSBpbnN0ZWFkIHJlcHJlc2VudCBwYXJ0IG9mIGEgcGVyaW9kaWMgY3ljbGUsIHN1Y2ggYXMgYSBtYW1tYWwgc2hlZGRpbmcgaGVhdnkgd2ludGVyIGZ1ciBpbiBmYXZvdXIgb2YgYSBsaWdodGVyIHN1bW1lciBjb2F0LiBPcmdhbmlzbXMgY2FuIGFkanVzdCB0aGVpciBtb3JwaG9sb2dpY2FsLCBiZWhhdmlvdXJhbCwgcGh5c2ljYWwsIGFuZC9vciBiaW9jaGVtaWNhbCB0cmFpdHMgaW4gcmVzcG9uc2UgdG8gY2hhbmdlcyBpbiB0aGVpciBlbnZpcm9ubWVudC4gV2hpbGUgdGhlIGNhcGFjaXR5IHRvIGFjY2xpbWF0ZSB0byBub3ZlbCBlbnZpcm9ubWVudHMgaGFzIGJlZW4gd2VsbCBkb2N1bWVudGVkIGluIHRob3VzYW5kcyBvZiBzcGVjaWVzLCByZXNlYXJjaGVycyBzdGlsbCBrbm93IHZlcnkgbGl0dGxlIGFib3V0IGhvdyBhbmQgd2h5IG9yZ2FuaXNtcyBhY2NsaW1hdGUgdGhlIHdheSB0aGF0IHRoZXkgZG8uIFEgU291cmNlOiBBUjogUGFnZSA4MjogNnRoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 .       ",
        "option2" : "2 and 3",
        "option3" : "1 and 2",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 35,
      "question" : "Needle-shaped leaves of trees growing in colder conditions provide which of thefollowing adaptive advantages?\n\t1. Rainwater and snow slide easily off the leaves.\n\t2. A thick waxy coating can grow around needle-shaped leaves retaining more water than aregular leaf.\n\t3. Such leaves don't shed in the fall season and thus capture the limited amount of sunlightavailable in such regions for nearly the entire year.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29uaWZlcnMsIGluIG1hbnkgd2F5cywgYXJlIG1vcmUgcHJpbWl0aXZlIHRoYW4gZmxvd2VyaW5nLCBicm9hZC1sZWFmZWQgdHJlZXMgdGhhdCBldm9sdmVkIG1vcmUgcmVjZW50bHkuIEJ1dCB0aGVpciBuZWVkbGVzIHN0aWxsIG9mZmVyIHNvbWUgbmlmdHkgYWR2YW50YWdlcyBvdmVyIGxlYXZlcy1lc3BlY2lhbGx5IGluIHRvdWdoIGNsaW1hdGVzIG9yIHNvaWwgY29uZGl0aW9ucy4gQ29uaWZlcnMsIG9yIGNvbmUtYmVhcmluZyB0cmVlcywgZXZvbHZlZCB0byBoYXZlIG5lZWRsZXMgdGhhdCByZXRhaW4gbW9yZSB3YXRlciBhbmQgc2VlZHMgdGhhdCBjb3VsZCBoYW5nIG91dCB1bnRpbCB0aGVyZSB3aWxsIGJlIGVub3VnaCBtb2lzdHVyZSB0byB0YWtlIHJvb3QuICAgTmVlZGxlcyBoYXZlIGEgdGhpY2ssIHdheHkgY29hdGluZyB0aGF0IHJldGFpbnMgbW9yZSB3YXRlciB0aGFuIGEgcmVndWxhciBsZWFmLiBTaW5jZSBuZWVkbGVzIGRvbid0IHNoZWQgZWFjaCBmYWxsIHRoZXkgY2FuIGNhcHR1cmUgc3VubGlnaHQgZm9yIG5lYXJseSB0aGUgZW50aXJlIHllYXIuIE5lZWRsZXMgY2FuIHN1cnZpdmUgaWNlIGFuZCBzbm93LiBOZWVkbGVzIGhhdmUgbG93ZXIgd2luZCByZXNpc3RhbmNlIHRoYW4gYmlnLCBmbGF0IGxlYXZlcywgc28gdGhleSdyZSBsZXNzIGxpa2VseSB0byAuICAgICAgICAgbWFrZSB0aGUgdHJlZSBmYWxsIG92ZXIgZHVyaW5nIGEgYmlnIHN0b3JtLiBOZWVkbGVzIGFyZSB0b3VnaCBmb3IgaW5zZWN0cyB0byBlYXQuIFEgU291cmNlOiBBUjogUGFnZSA4NDogNnRoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements.\n\t1. India is the largest commercial producer of silk.\n\t2. India is the only country which produces all the five known commercial varieties of silks -mulberry, tropical tasar, oak tasar, eri and muga.Which of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IEluZGlhIHByb2R1Y2VzIGFsbCBjb21tZXJjaWFsIHZhcmlldGllcyBvZiBzaWxrLCBvZiB3aGljaCBtdWdhIHdpdGggaXRzIGdvbGRlbiB5ZWxsb3cgZ2xpdHRlciBpcyB1bmlxdWUgYW5kIHByZXJvZ2F0aXZlIG9mIEluZGlhLiBTZWUgZGV0YWlscyBoZXJlIGh0dHBzOi8vYWlhc2Eub3JnLmluL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA5LzM1LnBkZiBJbmRpYSBpcyBvbmUgb2YgbGFyZ2VzdCBwcm9kdWNlcnMgb2Ygc2lsayAobm90IHRoZSBsYXJnZXN0KSAtIENoaW5hIGlzIHRoZSBsZWFkaW5nIHByb2R1Y2VyLiBBYm91dCA5NyUgb2YgdGhlIHJhdyBtdWxiZXJyeSBzaWxrIGNvbWVzIGZyb20gc2l4IEluZGlhbiBzdGF0ZXMsIG5hbWVseSwgQW5kaHJhIFByYWRlc2gsIEthcm5hdGFrYSwgSmFtbXUgYW5kIEthc2htaXIsIFRhbWlsIE5hZHUsIEJpaGFyLCBhbmQgV2VzdCBCZW5nYWwuIE5vcnRoIEJhbmdhbG9yZSwgdGhlIHVwY29taW5nIHNpdGUgb2YgYSAkMjAgbWlsbGlvbiAiU2lsayBDaXR5IiBSYW1hbmFnYXJhIGFuZCBNeXNvcmUsIGNvbnRyaWJ1dGUgdG8gYSBtYWpvcml0eSBvZiBzaWxrIHByb2R1Y3Rpb24gaW4gS2FybmF0YWthLiBJbiBUYW1pbCBOYWR1LCBtdWxiZXJyeSBjdWx0aXZhdGlvbiBpcyBjb25jZW50cmF0ZWQgaW4gdGhlIENvaW1iYXRvcmUsIEVyb2RlLCBCaGFnYWxwdXJpLCBUaXJ1cHB1ciwgU2FsZW0sIGFuZCBEaGFybWFwdXJpIGRpc3RyaWN0cy4gSHlkZXJhYmFkLCBBbmRocmEgUHJhZGVzaCwgYW5kIEdvYmljaGV0dGlwYWxheWFtLCBUYW1pbCBOYWR1LCB3ZXJlIHRoZSBmaXJzdCBsb2NhdGlvbnMgdG8gaGF2ZSBhdXRvbWF0ZWQgc2lsayByZWVsaW5nIHVuaXRzIGluIEluZGlhLiBJbiB0aGUgbm9ydGhlYXN0ZXJuIHN0YXRlIG9mIEFzc2FtLCB0aHJlZSBkaWZmZXJlbnQgdHlwZXMgb2YgaW5kaWdlbm91cyB2YXJpZXR5IG9mIHNpbGsgYXJlIHByb2R1Y2VkLCBjb2xsZWN0aXZlbHkgY2FsbGVkIEFzc2FtIHNpbGs6IE11Z2Egc2lsaywgRXJpIHNpbGsgYW5kIFBhdCBzaWxrLiBNdWdhLCB0aGUgZ29sZGVuIHNpbGssIGFuZCBFcmkgYXJlIHByb2R1Y2VkIGJ5IHNpbGt3b3JtcyB0aGF0IGFyZSBuYXRpdmUgb25seSB0byBBc3NhbS4gUSBTb3VyY2U6IEFSOiBQYWdlIDI5OiA3dGggU2NpZW5jZSBOQ0VSVA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 37,
      "question" : "X-rays interact with matter in which of the following ways?\n\t1. Photoabsorption\n\t2. Compton scattering\n\t3. Rayleigh scatteringSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogWC1yYXlzIGFyZSBhIGZvcm0gb2YgZWxlY3Ryb21hZ25ldGljIHJhZGlhdGlvbiwgc2ltaWxhciB0byB2aXNpYmxlIGxpZ2h0LiBVbmxpa2UgbGlnaHQsIGhvd2V2ZXIsIHgtIHJheXMgaGF2ZSBoaWdoZXIgZW5lcmd5IGFuZCBjYW4gcGFzcyB0aHJvdWdoIG1vc3Qgb2JqZWN0cywgaW5jbHVkaW5nIHRoZSBib2R5LiBNZWRpY2FsIHgtcmF5cyBhcmUgdXNlZCB0byBnZW5lcmF0ZSBpbWFnZXMgb2YgdGlzc3VlcyBhbmQgc3RydWN0dXJlcyBpbnNpZGUgdGhlIGJvZHkuIElmIHgtcmF5cyB0cmF2ZWxpbmcgdGhyb3VnaCB0aGUgYm9keSBhbHNvIHBhc3MgdGhyb3VnaCBhbiB4LXJheSBkZXRlY3RvciBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgcGF0aWVudCwgYW4gaW1hZ2Ugd2lsbCBiZSBmb3JtZWQgdGhhdCByZXByZXNlbnRzIHRoZSAnc2hhZG93cycgZm9ybWVkIGJ5IHRoZSBvYmplY3RzIGluc2lkZSBvZiB0aGUgYm9keS4gT25lIHR5cGUgb2YgeC1yYXkgZGV0ZWN0b3IgaXMgcGhvdG9ncmFwaGljIGZpbG0sIGJ1dCB0aGVyZSBhcmUgbWFueSBvdGhlciB0eXBlcyBvZiBkZXRlY3RvcnMgdGhhdCBhcmUgdXNlZCB0byBwcm9kdWNlIGRpZ2l0YWwgaW1hZ2VzLiBUaGUgeC1yYXkgaW1hZ2VzIHRoYXQgcmVzdWx0IGZyb20gdGhpcyBwcm9jZXNzIGFyZSBjYWxsZWQgcmFkaW9ncmFwaHMuIFMxOiBQaG90b2VsZWN0cmljIChQRSkgYWJzb3JwdGlvbiBvZiB4LXJheXMgb2NjdXJzIHdoZW4gdGhlIHgtcmF5IHBob3RvbiBpcyBhYnNvcmJlZCwgcmVzdWx0aW5nIGluIHRoZSBlamVjdGlvbiBvZiBlbGVjdHJvbnMgZnJvbSB0aGUgb3V0ZXIgc2hlbGwgb2YgdGhlIGF0b20sIGFuZCBoZW5jZSB0aGUgaW9uaXphdGlvbiBvZiB0aGUgYXRvbS4gU3Vic2VxdWVudGx5LCB0aGUgaW9uaXplZCBhdG9tIHJldHVybnMgdG8gdGhlIG5ldXRyYWwgc3RhdGUgd2l0aCB0aGUgZW1pc3Npb24gb2YgYW4geC1yYXkgY2hhcmFjdGVyaXN0aWMgb2YgdGhlIGF0b20uIFRoaXMgc3Vic2VxdWVudCBlbWlzc2lvbiBvZiBsb3dlciBlbmVyZ3kgcGhvdG9ucyBpcyBnZW5lcmFsbHkgYWJzb3JiZWQgYW5kIGRvZXMgbm90IGNvbnRyaWJ1dGUgdG8gKG9yIGhpbmRlcikgdGhlIGltYWdlIG1ha2luZyBwcm9jZXNzLiBQaG90b2VsZWN0cm9uIGFic29ycHRpb24gaXMgdGhlIGRvbWluYW50IHByb2Nlc3MgZm9yIHgtcmF5IGFic29ycHRpb24gdXAgdG8gZW5lcmdpZXMgb2YgYWJvdXQgNTAwIEtlVi4gUGhvdG9lbGVjdHJvbiBhYnNvcnB0aW9uIGlzIGFsc28gZG9taW5hbnQgZm9yIGF0b21zIG9mIGhpZ2ggYXRvbWljIG51bWJlcnMuIFMyOiBDb21wdG9uIHNjYXR0ZXJpbmcgKEMpIG9jY3VycyB3aGVuIHRoZSBpbmNpZGVudCB4LXJheSBwaG90b24gaXMgZGVmbGVjdGVkIGZyb20gaXRzIG9yaWdpbmFsIHBhdGggYnkgYW4gaW50ZXJhY3Rpb24gd2l0aCBhbiBlbGVjdHJvbi4gIFRoZSBlbGVjdHJvbiBnYWlucyBlbmVyZ3kgYW5kIGlzIGVqZWN0ZWQgZnJvbSBpdHMgb3JiaXRhbCBwb3NpdGlvbi4gIFRoZSB4LXJheSBwaG90b24gbG9zZXMgZW5lcmd5IGR1ZSB0byB0aGUgaW50ZXJhY3Rpb24gYnV0IGNvbnRpbnVlcyB0byB0cmF2ZWwgdGhyb3VnaCB0aGUgbWF0ZXJpYWwgYWxvbmcgYW4gYWx0ZXJlZCBwYXRoLiAgU2luY2UgdGhlIHNjYXR0ZXJlZCB4LXJheSBwaG90b24gaGFzIGxlc3MgZW5lcmd5LCBpdCwgdGhlcmVmb3JlLCBoYXMgYSBsb25nZXIgd2F2ZWxlbmd0aCB0aGFuIHRoZSBpbmNpZGVudCBwaG90b24uIFRoZSBldmVudCBpcyBhbHNvIGtub3duIGFzIGluY29oZXJlbnQgc2NhdHRlcmluZyBiZWNhdXNlIHRoZSBwaG90b24gZW5lcmd5IGNoYW5nZSByZXN1bHRpbmcgZnJvbSBhbiBpbnRlcmFjdGlvbiBpcyBub3QgYWx3YXlzIG9yZGVybHkgYW5kIGNvbnNpc3RlbnQuICBUaGUgZW5lcmd5IHNoaWZ0IGRlcGVuZHMgb24gdGhlIGFuZ2xlIG9mIHNjYXR0ZXJpbmcgYW5kIG5vdCBvbiB0aGUgbmF0dXJlIG9mIHRoZSBzY2F0dGVyaW5nIG1lZGl1bS4gUzM6IFRob21zb24gc2NhdHRlcmluZyAoUiksIGFsc28ga25vd24gYXMgUmF5bGVpZ2gsIGNvaGVyZW50LCBvciBjbGFzc2ljYWwgc2NhdHRlcmluZywgb2NjdXJzIHdoZW4gdGhlIHgtcmF5IHBob3RvbiBpbnRlcmFjdHMgd2l0aCB0aGUgd2hvbGUgYXRvbSBzbyB0aGF0IHRoZSBwaG90b24gaXMgc2NhdHRlcmVkIHdpdGggbm8gY2hhbmdlIGluIGludGVybmFsIGVuZXJneSB0byB0aGUgc2NhdHRlcmluZyBhdG9tLCBub3IgdG8gdGhlIHgtcmF5IHBob3Rvbi4gVGhvbXNvbiBzY2F0dGVyaW5nIGlzIG5ldmVyIG1vcmUgdGhhbiBhIG1pbm9yIGNvbnRyaWJ1dG9yIHRvIHRoZSBhYnNvcnB0aW9uIGNvZWZmaWNpZW50LiBUaGUgc2NhdHRlcmluZyBvY2N1cnMgd2l0aG91dCB0aGUgbG9zcyBvZiBlbmVyZ3kuIFNjYXR0ZXJpbmcgaXMgbWFpbmx5IGluIHRoZSBmb3J3YXJkIGRpcmVjdGlvbi4gUGFpciBwcm9kdWN0aW9uIChQUCkgY2FuIG9jY3VyIHdoZW4gdGhlIHgtcmF5IHBob3RvbiBlbmVyZ3kgaXMgZ3JlYXRlciB0aGFuIDEuMDIgTWVWLCBidXQgcmVhbGx5IG9ubHkgYmVjb21lcyBzaWduaWZpY2FudCBhdCBlbmVyZ2llcyBhcm91bmQgMTAgTWVWLiBQYWlyIHByb2R1Y3Rpb24gb2NjdXJzIHdoZW4gYW4gLiAgICAgICAgIGVsZWN0cm9uIGFuZCBwb3NpdHJvbiBhcmUgY3JlYXRlZCB3aXRoIHRoZSBhbm5paGlsYXRpb24gb2YgdGhlIHgtcmF5IHBob3Rvbi4gUG9zaXRyb25zIGFyZSB2ZXJ5IHNob3J0IGxpdmVkIGFuZCBkaXNhcHBlYXIgKHBvc2l0cm9uIGFubmloaWxhdGlvbikgd2l0aCB0aGUgZm9ybWF0aW9uIG9mIHR3byBwaG90b25zIG9mIDAuNTEgTWVWIGVuZXJneS4gIFBhaXIgcHJvZHVjdGlvbiBpcyBvZiBwYXJ0aWN1bGFyIGltcG9ydGFuY2Ugd2hlbiBoaWdoLWVuZXJneSBwaG90b25zIHBhc3MgdGhyb3VnaCBtYXRlcmlhbHMgb2YgYSBoaWdoIGF0b21pYyBudW1iZXIuIFJlYWQgbW9yZSBoZXJlIGh0dHBzOi8vd3d3Lm5kZS1lZC5vcmcvUGh5c2ljcy9YLVJheS9IYWxmVmFsdWVMYXllci54aHRtbCBRIFNvdXJjZTogUmV2aXNpb246IEFSOiBQYWdlIDI1IChDaGFwdGVyIG9uIEhlYWx0aCk6IFNvY2lhbCBhbmQgUG9saXRpY2FsIExpZmU6IDd0aCBOQ0VSVCAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 38,
      "question" : "Natural pH indicators include\n\t1. Turmeric\n\t2. Turmeric\n\t3. China Rose petals.\n\t4. Hydrangea flowersSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3BlY2lhbCB0eXBlIG9mIHN1YnN0YW5jZXMgYXJlIHVzZWQgdG8gdGVzdCB3aGV0aGVyIGEgc3Vic3RhbmNlIGlzIGFjaWRpYyBvciBiYXNpYy4gVGhlc2UgLiAgICAgICAgIHN1YnN0YW5jZXMgYXJlIGtub3duIGFzIGluZGljYXRvcnMuIFRoZSBpbmRpY2F0b3JzIGNoYW5nZSB0aGVpciBjb2xvdXIgd2hlbiBhZGRlZCB0byBhIHNvbHV0aW9uIGNvbnRhaW5pbmcgYW4gYWNpZGljIG9yIGEgYmFzaWMgc3Vic3RhbmNlLiBUdXJtZXJpYywgY2hpbmEgcm9zZSBwZXRhbHMgKEd1ZGhhbCksIGV0Yy4sIGFyZSBzb21lIG9mIHRoZSBuYXR1cmFsbHkgb2NjdXJyaW5nIGluZGljYXRvcnMuIFRoZSBtb3N0IGNvbW1vbmx5IHVzZWQgbmF0dXJhbCBpbmRpY2F0b3IgaXMgbGl0bXVzLiBJdCBpcyBleHRyYWN0ZWQgZnJvbSBsaWNoZW5zLiBJdCBpcyBhdmFpbGFibGUgaW4gdGhlIGZvcm0gb2YgYSBzb2x1dGlvbiwgb3IgaW4gdGhlIGZvcm0gb2Ygc3RyaXBzIG9mIHBhcGVyLCBrbm93biBhcyBsaXRtdXMgcGFwZXIuIEdlbmVyYWxseSwgaXQgaXMgYXZhaWxhYmxlIGFzIHJlZCBhbmQgYmx1ZSBsaXRtdXMgcGFwZXIuIE1hbnkgcGxhbnRzIG9yIHBsYW50IHBhcnRzIGNvbnRhaW4gY2hlbWljYWxzIGZyb20gdGhlIG5hdHVyYWxseSBjb2xvcmVkIGFudGhvY3lhbmluIGZhbWlseSBvZiBjb21wb3VuZHMuIFRoZXkgYXJlIHJlZCBpbiBhY2lkaWMgc29sdXRpb25zIGFuZCBibHVlIGluIGJhc2ljLiBBbnRob2N5YW5pbnMgY2FuIGJlIGV4dHJhY3RlZCB3aXRoIHdhdGVyIG9yIG90aGVyIHNvbHZlbnRzIGZyb20gYSBtdWx0aXR1ZGUgb2YgY29sb3VyZWQgcGxhbnRzIGFuZCBwbGFudCBwYXJ0cywgaW5jbHVkaW5nIGZyb20gbGVhdmVzIChyZWQgY2FiYmFnZSk7IGZsb3dlcnMgKGdlcmFuaXVtLCBwb3BweSwgb3Igcm9zZSBwZXRhbHMpOyBiZXJyaWVzIChibHVlYmVycmllcywgYmxhY2tjdXJyYW50KTsgYW5kIHN0ZW1zIChyaHViYXJiKS4gRXh0cmFjdGluZyBhbnRob2N5YW5pbnMgZnJvbSBob3VzZWhvbGQgcGxhbnRzLCBlc3BlY2lhbGx5IHJlZCBjYWJiYWdlLCB0byBmb3JtIGEgY3J1ZGUgcEggaW5kaWNhdG9yIGlzIGEgcG9wdWxhciBpbnRyb2R1Y3RvcnkgY2hlbWlzdHJ5IGRlbW9uc3RyYXRpb24uIFEgU291cmNlOiBBUjogUGFnZSA1MDogN3RoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4",
        "option2" : "1 and 2",
        "option3" : "2 and 4",
        "option4" : "2, 3 and 4"
      }
    },
    {
      "index" : 39,
      "question" : "Match the following acids with the substances that they are usually found in:\n\t1. Oxalic Acid: Spinach\n\t2. Formic Acid: Lemon\n\t3. Ascorbic Acid: Non-citrus fruits\n\t4. Lactic Acid: CurdSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2VlIHRoZSB0YWJsZSBiZWxvdzogLiAgICAgICAgIFEgU291cmNlOiBBUjogUGFnZSA1MDogN3RoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 4 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 4 only"
      }
    },
    {
      "index" : 40,
      "question" : "They are called 'bears of the sea' since they can swim for miles and stay submergedunder water for two minutes at a time. These polar habitants are",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHBvbGFyIGJlYXJzIGhhdmUgaG9sbG93IGd1YXJkIGhhaXJzIHRoYXQga2VlcCBmdXIgZnJvbSBtYXR0aW5nIHdoZW4gaXQgZ2V0cyB3ZXQuIEluIGZhY3QsIHBvbGFyIGJlYXJzIGFyZSBtb3JlIGNvbmNlcm5lZCBhYm91dCBvdmVyaGVhdGluZyB0aGFuIGFib3V0IGdldHRpbmcgY29sZC4gQmVjYXVzZSB0aGV5IGFyZSBzdWNoIHN0cm9uZyBzd2ltbWVycywgcG9sYXIgYmVhcnMgZWFybmVkIHRoZSBzcGVjaWVzIG5hbWUgb2YgVXJzdXMgbWFyaXRpbXVzLWJlYXJzIG9mIHRoZSBzZWEuIFRoZXkgY2FuIHN3aW0gZm9yIG1pbGVzIGFuZCBzdGF5IHN1Ym1lcmdlZCBmb3IgdHdvIG1pbnV0ZXMgYXQgYSB0aW1lLiBUaGUgcG9sZXMgYWxzbyBob3N0IG90aGVyIGdvb2Qgc3dpbW1lcnMuIFBlbmd1aW4gaGF2ZSB3ZWJiZWQgZmVldCBhbmQgdGhleSBzdHJlYW1saW5lIHRoZWlyIC4gICAgICAgICBib2R5IHdoaWxlIHN3aW1taW5nIHdoaWNoIG1ha2VzIHRoZW0gZ29vZCBzd2ltbWVycy4gUGVuZ3VpbnMgKHNvdXRoIHBvbGUpIGFuZCBwb2xhciBiZWFycyAobm9ydGggcG9sZSkgbmV2ZXIgbWVldCBmb3IgdGhleSBsaXZlIGluIG9wcG9zaXRlIHBvbGVzLiBQZW5ndWlucyBhcmUgYmlyZHMsIHNvIHRoZXkgZG8gaGF2ZSB3aW5ncy4gSG93ZXZlciwgdGhlIHdpbmcgc3RydWN0dXJlcyBvZiBwZW5ndWlucyBhcmUgZXZvbHZlZCBmb3Igc3dpbW1pbmcsIHJhdGhlciB0aGFuIGZseWluZyBpbiB0aGUgdHJhZGl0aW9uYWwgc2Vuc2UuIFBlbmd1aW5zIHN3aW0gdW5kZXJ3YXRlciBhdCBzcGVlZHMgb2YgdXAgdG8gMTUgdG8gMjUgbWlsZXMgcGVyIGhvdXIuIEFzIGFkZXB0IHN3aW1tZXJzLCBwZW5ndWlucyBzcGVuZCBhIGxvdCBvZiB0aW1lIGluIHRoZSB3YXRlci4gU29tZSBwZW5ndWlucyBzcGVuZCB1cCB0byA3NSBwZXJjZW50IG9mIHRoZWlyIGxpdmVzIGluIHRoZSB3YXRlci4gQW5vdGhlciBvbmUgaXMgV2FscnVzLiBBIHRoaWNrIGxheWVyIG9mIGJsdWJiZXIga2VlcHMgd2FscnVzZXMgd2FybSBpbiB0aGUgQXJjdGljLiBCb3RoIG1hbGUgYW5kIGZlbWFsZSB3YWxydXNlcyBoYXZlIHN0cm9uZyBsb25nIHR1c2tzIHRoYXQgdGhleSB1c2UgdG8gaGVscCBwdWxsIHRoZW1zZWx2ZXMgb3V0IG9mIHRoZSB3YXRlci4gVGhleSBjYW4gYWxzbyB1c2UgdGhlaXIgdHVza3MgdG8gYnJlYWsgdGhyb3VnaCB0aGUgaWNlIHRvIGNyZWF0ZSBicmVhdGhpbmcgaG9sZXMuIFdhbHJ1c2VzIGZvcmFnZSBvbiB0aGUgc2VhZmxvb3IsIGRpdmluZyB0byBkZXB0aHMgdXAgdG8gMTgwIG1ldGVycyAoNTkwIGZlZXQpIGZvciBjbGFtcywgY29ja2xlcywgYW5kIG11c3NlbHMuIFJlYWQgbW9yZSBoZXJlIGh0dHBzOi8vb2NlYW4uc2kuZWR1L2Vjb3N5c3RlbXMvcG9sZXMvYXJjdGljLWFuZC1hbnRhcmN0aWMgUSBTb3VyY2U6IEFSOiBQYWdlIDc0OiA2dGggU2NpZW5jZSBOQ0VSVA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Krills",
        "option2" : "Polar bears",
        "option3" : "Antarctic Skua",
        "option4" : "Giant petrels"
      }
    },
    {
      "index" : 41,
      "question" : "Wind flow is affected/caused by which of the following factors?\n\t1. Distribution of landmass on earth\n\t2. Uneven or differential heating of earthWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUmVnaW9ucyBjbG9zZSB0byB0aGUgZXF1YXRvciBnZXQgbWF4aW11bSBoZWF0IGZyb20gdGhlIFN1bi4gVGhlIGFpciBpbiB0aGVzZSByZWdpb25zIGdldHMgd2FybS4gVGhlIHdhcm0gYWlyIHJpc2VzLCBhbmQgdGhlIGNvb2xlciBhaXIgZnJvbSB0aGUgcmVnaW9ucyBpbiB0aGUgMC0zMCBkZWdyZWVzIGxhdGl0dWRlIGJlbHQgb24gZWl0aGVyIHNpZGUgb2YgdGhlIGVxdWF0b3IgbW92ZXMgaW4uIFRoZXNlIHdpbmRzIGJsb3cgZnJvbSB0aGUgbm9ydGggYW5kIHRoZSBzb3V0aCB0b3dhcmRzIHRoZSBlcXVhdG9yLiBBdCB0aGUgcG9sZXMsIHRoZSBhaXIgaXMgY29sZGVyIHRoYW4gdGhhdCBhdCBsYXRpdHVkZXMgYWJvdXQgNjAgZGVncmVlcy4gVGhlIHdhcm0gYWlyIGF0IHRoZXNlIGxhdGl0dWRlcyByaXNlcyB1cCBhbmQgdGhlIGNvbGQgd2luZCBmcm9tIHRoZSBwb2xhciByZWdpb25zIHJ1c2hlcyBpbiwgdG8gdGFrZSBpdHMgcGxhY2UuIEluIHRoaXMgd2F5LCB3aW5kIGNpcmN1bGF0aW9uIGlzIHNldCB1cCBmcm9tIHRoZSBwb2xlcyB0byB0aGUgd2FybWVyIGxhdGl0dWRlcywgUSBTb3VyY2U6IFBhZ2UgODU6IDd0aCBTY2llbmNlIE5DRVJU",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "None"
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following about tornadoes and hurricanes/cyclones.\n\t1. Hurricanes always rotate counter-clockwise in the northern hemisphere but this is notnecessarily the case with tornadoes.\n\t2. Both are characterized by extremely strong horizontal winds swirling around the centre but atdifferent scales.\n\t3. Hurricane landfalls are never accompanied by tornadoes..Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVG9ybmFkb2VzIGFuZCBodXJyaWNhbmVzIGFwcGVhciB0byBiZSBzaW1pbGFyIGluIHRoZWlyIGdlbmVyYWwgc3RydWN0dXJlLiBCb3RoIGFyZSBjaGFyYWN0ZXJpemVkIGJ5IGV4dHJlbWVseSBzdHJvbmcgaG9yaXpvbnRhbCB3aW5kcyBzd2lybGluZyBhcm91bmQgdGhlIGNlbnRyZSwgc3Ryb25nIHVwd2FyZCBtb3Rpb24gZG9taW5hdGluZyB0aGUgY2lyY3VsYXRpb24gd2l0aCBzb21lIGRvd253YXJkIG1vdGlvbiBpbiB0aGUgY2VudHJlLiBUaGUgdGFuZ2VudGlhbCB3aW5kcyBmYXIgZXhjZWVkIHRoZSByYWRpYWwgaW5mbG93IG9yIHRoZSB2ZXJ0aWNhbCBtb3Rpb24sIGFuZCBjYW4gY2F1c2UgbXVjaCBkYW1hZ2UuIEh1cnJpY2FuZXMgYWx3YXlzIHJvdGF0ZSBjb3VudGVyLWNsb2Nrd2lzZSBpbiB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZSAoY2xvY2t3aXNlIGluIHRoZSBzb3V0aGVybiksIHRoZSBkaXJlY3Rpb24gb2YgdGhlaXIgcm90YXRpb24gYmVpbmcgZGV0ZXJtaW5lZCBieSB0aGUgRWFydGgncyByb3RhdGlvbi4gVGhpcyBpcyBhbG1vc3QgYWx3YXlzIHRydWUgb2YgdG9ybmFkb2VzIHRvbywgYWx0aG91Z2ggb24gcmFyZSBvY2Nhc2lvbnMgImFudGljeWNsb25pYyIgdG9ybmFkb2VzIHNwaW5uaW5nIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24gZG8gb2NjdXIgKHRvcm5hZGljIGNpcmN1bGF0aW9uIGlzIGRldGVybWluZWQgYnkgdGhlIGxvY2FsIHdpbmRzKS4gVGhpcyBpcyB3aGVyZSB0aGUgc2ltaWxhcml0aWVzIGVuZC4gVGhlIG1vc3Qgb2J2aW91cyBkaWZmZXJlbmNlIGJldHdlZW4gdG9ybmFkb2VzIGFuZCBodXJyaWNhbmVzIGlzIHRoYXQgdGhleSBoYXZlIGRyYXN0aWNhbGx5IGRpZmZlcmVudCBzY2FsZXMuIFRoZXkgZm9ybSB1bmRlciBkaWZmZXJlbnQgY2lyY3Vtc3RhbmNlcyBhbmQgaGF2ZSBkaWZmZXJlbnQgaW1wYWN0cyBvbiB0aGUgZW52aXJvbm1lbnQuIFRvcm5hZG9lcyBhcmUgInNtYWxsLXNjYWxlIGNpcmN1bGF0aW9ucyIsIHRoZSBsYXJnZXN0IG9ic2VydmVkIGhvcml6b250YWwgZGltZW5zaW9ucyBpbiB0aGUgbW9zdCBzZXZlcmUgY2FzZXMgYmVpbmcgb24gdGhlIG9yZGVyIG9mIDEgdG8gMS41IG1pbGVzLiBUaGV5IG1vc3Qgb2Z0ZW4gZm9ybSBpbiBhc3NvY2lhdGlvbiB3aXRoIHNldmVyZSB0aHVuZGVyc3Rvcm1zLiBjaGFyYWN0ZXJpemVkIGJ5IGV4dHJlbWVseSBzdHJvbmcgaG9yaXpvbnRhbCB3aW5kcyBzd2lybGluZyBhcm91bmQgdGhlIGNlbnRyZS4gSHVycmljYW5lIGxhbmRmYWxscyBhcmUgb2Z0ZW4gYWNjb21wYW5pZWQgYnkgbXVsdGlwbGUgdG9ybmFkb2VzLiBXaGlsZSB0b3JuYWRvZXMgY2FuIGNhdXNlIG11Y2ggaGF2b2Mgb24gdGhlIGdyb3VuZCAodG9ybmFkaWMgd2luZCBzcGVlZHMgaGF2ZSBiZWVuIGVzdGltYXRlZCBhdCAxMDAgdG8gbW9yZSB0aGFuIDMwMCBtcGgpLCB0aGV5IGhhdmUgdmVyeSBzaG9ydCBsaWZldGltZXMgKG9uIHRoZSBvcmRlciBvZiBtaW51dGVzKSwgYW5kIHRyYXZlbCBzaG9ydCBkaXN0YW5jZXMuIFRoZXkgaGF2ZSB2ZXJ5IGxpdHRsZSBpbXBhY3Qgb24gdGhlIGV2b2x1dGlvbiBvZiB0aGUgc3Vycm91bmRpbmcgc3Rvcm0sIGFuZCBiYXNpY2FsbHkgZG8gbm90IGFmZmVjdCB0aGUgbGFyZ2Utc2NhbGUgZW52aXJvbm1lbnQgYXQgYWxsLiBIdXJyaWNhbmVzLCBvbiB0aGUgb3RoZXIgaGFuZCwgYXJlIGxhcmdlLXNjYWxlIGNpcmN1bGF0aW9ucyB3aXRoIGhvcml6b250YWwgZGltZW5zaW9ucyBmcm9tIDYwIHRvIHdlbGwgb3ZlciAxMDAwIG1pbGVzIGluIGRpYW1ldGVyLiBUaGV5IGZvcm0gYXQgbG93IGxhdGl0dWRlcywgZ2VuZXJhbGx5IGJldHdlZW4gNSBhbmQgMjAgZGVncmVlcy4gTWFueSBhdG1vc3BoZXJpYyBjb25kaXRpb25zIG5lZWQgdG8gY29udmVyZ2UgYXQgdGhlIHJpZ2h0IHRpbWUgZm9yIHRvcm5hZG9lcyB0byBmb3JtLiBUaGV5IG5lZWQgaG90LCBodW1pZCBhaXIgbmVhciB0aGUgZ3JvdW5kIHdpdGggYSBjb29sIGFpciBtYXNzIGFib3ZlIHRoZW0uIFRoZXkgYWxzbyBuZWVkIHN0cm9uZyAuICAgICAgICAgd2luZCB2ZWxvY2l0eSBhdCBoaWdoZXIgYWx0aXR1ZGVzLCBrbm93biBhcyB3aW5kIHNoZWFyLCB0byBnZXQgdGhlbSBzcGlubmluZy4gUSBTb3VyY2U6IEFSOiBQYWdlIDg5OiA3dGggU2NpZW5jZSBOQ0VSVCBodHRwczovL3BtbS5uYXNhLmdvdi9yZXNvdXJjZXMvZmFxL3doYXQtZGlmZmVyZW5jZS1iZXR3ZWVuLXRvcm5hZG8tYW5kLWh1cnJpY2FuZQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "1 only",
        "option3" : "2 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 43,
      "question" : "In which of the following soil types the amount of large and fine particles is nearlythe same?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHNvaWwgaXMgY2xhc3NpZmllZCBvbiB0aGUgYmFzaXMgb2YgdGhlIHByb3BvcnRpb24gb2YgcGFydGljbGVzIG9mIHZhcmlvdXMgc2l6ZXMuIElmIHNvaWwgY29udGFpbnMgZ3JlYXRlciBwcm9wb3J0aW9uIG9mIGJpZyBwYXJ0aWNsZXMgaXQgaXMgY2FsbGVkIHNhbmR5IHNvaWwuIElmIHRoZSBwcm9wb3J0aW9uIG9mIGZpbmUgcGFydGljbGVzIGlzIHJlbGF0aXZlbHkgaGlnaGVyLCB0aGVuIGl0IGlzIGNhbGxlZCBjbGF5ZXkgc29pbC4gSWYgdGhlIGFtb3VudCBvZiBsYXJnZSBhbmQgZmluZSBwYXJ0aWNsZXMgaXMgYWJvdXQgdGhlIHNhbWUsIHRoZW4gdGhlIHNvaWwgaXMgY2FsbGVkIGxvYW15LiBUaHVzLCB0aGUgc29pbCBjYW4gYmUgY2xhc3NpZmllZCBhcyBzYW5keSwgY2xheWV5IGFuZCBsb2FteS4gVGhlIHNpemVzIG9mIHRoZSBwYXJ0aWNsZXMgaW4gYSBzb2lsIGhhdmUgYSB2ZXJ5IGltcG9ydGFudCBpbmZsdWVuY2Ugb24gaXRzIHByb3BlcnRpZXMuIFNhbmQgcGFydGljbGVzIGFyZSBxdWl0ZSBsYXJnZS4gVGhleSBjYW5ub3QgZml0IGNsb3NlbHkgdG9nZXRoZXIsIHNvIHRoZXJlIGFyZSBsYXJnZSBzcGFjZXMgYmV0d2VlbiB0aGVtLiBUaGVzZSBzcGFjZXMgYXJlIGZpbGxlZCB3aXRoIGFpci4gV2Ugc2F5IHRoYXQgdGhlIHNhbmQgaXMgd2VsbCBhZXJhdGVkLiBXYXRlciBjYW4gZHJhaW4gcXVpY2tseSB0aHJvdWdoIHRoZSBzcGFjZXMgYmV0d2VlbiB0aGUgc2FuZCBwYXJ0aWNsZXMuIFNvLCBzYW5keSBzb2lscyB0ZW5kIHRvIGJlIGxpZ2h0LCB3ZWxsIGFlcmF0ZWQgYW5kIHJhdGhlciBkcnkuIENsYXkgcGFydGljbGVzLCBiZWluZyBtdWNoIHNtYWxsZXIsIHBhY2sgdGlnaHRseSB0b2dldGhlciwgbGVhdmluZyBsaXR0bGUgc3BhY2UgZm9yIGFpci4gVGhlIGJlc3QgdG9wc29pbCBmb3IgZ3Jvd2luZyBwbGFudHMgaXMgbG9hbS4gTG9hbXkgc29pbCBpcyBhIG1peHR1cmUgb2Ygc2FuZCwgY2xheSBhbmQgYW5vdGhlciB0eXBlIG9mIHNvaWwgcGFydGljbGUga25vd24gYXMgc2lsdC4gU2lsdCBvY2N1cnMgYXMgYSBkZXBvc2l0IGluIHJpdmVyIGJlZHMuIFRoZSBzaXplIG9mIHRoZSBzaWx0IHBhcnRpY2xlcyBpcyBiZXR3ZWVuIHRob3NlIG9mIHNhbmQgYW5kIGNsYXkuIFRoZSBsb2FteSBzb2lsIGFsc28gaGFzIGh1bXVzIGluIGl0LiBJdCBoYXMgdGhlIHJpZ2h0IHdhdGVyIGhvbGRpbmcgY2FwYWNpdHkgZm9yIHRoZSBncm93dGggb2YgcGxhbnRzLiAgUSBTb3VyY2U6IFBhZ2UgOTk6IDd0aCBTY2llbmNlIE5DRVJU",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Loamy soil",
        "option2" : "Rock soil",
        "option3" : "Clayey soil",
        "option4" : "Sandy soil"
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements.\n\t1. Yeast and molds are members of the fungi kingdom.\n\t2. Yeasts are single-celled organisms, and therefore they do not possess a cellular organizationsimilar to that of higher organisms such as possessing a nucleus.\n\t3. Yeast cells duplicate and divide much faster than human cells growing in culture.Which of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogWWVhc3QgYXJlIGNsYXNzaWZpZWQsIGFsb25nIHdpdGggbW9sZHMgYW5kIG11c2hyb29tcywgYXMgbWVtYmVycyBvZiB0aGUgS2luZ2RvbSBGdW5naS4gVGhlcmUgYXJlIGNlcnRhaW4gc3BlY2lmaWMgY2hhcmFjdGVyaXN0aWNzIG9mIHllYXN0IHRoYXQgbWFrZSBpdCBhICdtb2RlbCBvcmdhbmlzbScgZm9yIHN0dWR5IGFuZCBoYXMgYmVlbiB0aGUgZm9jdXMgb2Ygc28gbXVjaCByZXNlYXJjaC4gWWVhc3QgYXJlIHNpbmdsZS1jZWxsZWQgKHVuaWNlbGx1bGFyKSBvcmdhbmlzbXMsIG1ha2luZyB0aGVtIHNpbXBsZSB0byBzdHVkeSwgYnV0IHBvc3Nlc3MgYSBjZWxsdWxhciBvcmdhbml6YXRpb24gc2ltaWxhciB0byB0aGF0IGZvdW5kIGluIGhpZ2hlciwgbXVsdGktY2VsbHVsYXIgb3JnYW5pc21zIHN1Y2ggYXMgaHVtYW5zIC0gdGhhdCBpcywgdGhleSBwb3NzZXNzIGEgbnVjbGV1cyBhbmQgYXJlIHRoZXJlZm9yZSBldWthcnlvdGVzLiBNb3N0IGltcG9ydGFudGx5LCB0aGUgc2ltaWxhcml0eSBpbiBjZWxsdWxhciBvcmdhbml6YXRpb24gYmV0d2VlbiB5ZWFzdCBhbmQgaGlnaGVyIGV1a2FyeW90ZXMgdHJhbnNsYXRlcyB0byBzaW1pbGFyaXRpZXMgaW4gdGhlaXIgZnVuZGFtZW50YWwgY2VsbHVsYXIgcHJvY2Vzc2VzIHNvIGRpc2NvdmVyaWVzIGluIHllYXN0IGZyZXF1ZW50bHkgcHJvdmlkZSBkaXJlY3Qgb3IgaW5kaXJlY3QgY2x1ZXMgYXMgdG8gaG93IGJpb2xvZ2ljYWwgcHJvY2Vzc2VzIHdvcmsgaW4gaHVtYW5zLiBBbm90aGVyIGltcG9ydGFudCBjaGFyYWN0ZXJpc3RpYyBvZiB5ZWFzdCBlc3NlbnRpYWwgdG8gdGhlaXIgcm9sZSBhcyAnbW9kZWwgb3JnYW5pc21zJyBpcyB0aGUgZmFjdCB0aGV5IGFyZSByZWxhdGl2ZWx5IGVhc3kgdG8gd29yayB3aXRoLiBZZWFzdCByZXBsaWNhdGUgcXVpY2tseSBhbmQgYXJlIGVhc3kgdG8gbWFuaXB1bGF0ZSBnZW5ldGljYWxseS4gVGhlIGRvdWJsaW5nIHRpbWUgZm9yIHllYXN0ICh0aGUgdGltZSByZXF1aXJlZCBmb3IgYSBjZWxsIHRvIGR1cGxpY2F0ZSBhbmQgZGl2aWRlIGl0c2VsZikgaXMgYWJvdXQgOTAgbWludXRlcy4gSW4gY29udHJhc3QsIGh1bWFuIGNlbGxzIGdyb3dpbmcgaW4gY3VsdHVyZSBuZWVkIGFib3V0IDI0IGhvdXJzIHRvIGRvdWJsZS4gVGhlcmUgYXJlIGFsc28gd2VsbCBkZWZpbmVkIGdlbmV0aWMgbWV0aG9kcyBmb3IgeWVhc3QgdGhhdCBhbGxvdyByZXNlYXJjaGVycyB0byBlYXNpbHkgaXNvbGF0ZSBtdXRhbnRzLCBjcm9zcyB0aGVtIHdpdGggb3RoZXIgbXV0YW50cyBvciBpbnRvIG90aGVyIGdlbmV0aWMgYmFja2dyb3VuZHMsIGFuZCBtYXAgdGhlIGxvY2F0aW9ucyBvZiBnZW5lcy4gSW4gZmFjdCwgZ2VuZXRpYyBtYXBzIGNvbnN0cnVjdGVkIGJhc2VkIG9uIHRoZSBnZW5ldGljIGRpc3RhbmNlIGJldHdlZW4gZ2VuZXMgZ2F2ZSByZXNlYXJjaGVycyB0aGVpciBmaXJzdCB2aWV3IG9mIHRoZSBnZW5vbWUgYW5kIGl0cyBvcmdhbml6YXRpb24sIGFuZCB3ZXJlIHRoZSBjdWxtaW5hdGlvbiBvZiBnZW5ldGljIHN0dWRpZXMgdGhhdCBkYXRlIGJhY2sgdG8gdGhlIGZpcnN0IGhhbGYgb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5LiBRIFNvdXJjZTogQVI6IFBhZ2UgMTA5OiA3dGggU2NpZW5jZSBOQ0VSVA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 45,
      "question" : "Which of these follows if the Parliament disagrees with the Supreme Court (SC) onthe interpretation of the Constitution?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hpbGUgU0MgaXMgdGhlIGZpbmFsIGludGVycHJldGVyIG9mIHRoZSBDb25zdGl0dXRpb24sIHBhcmxpYW1lbnQgbWF5IGRpc2FncmVlIHdpdGggdGhlIFNDLCBhbmQgaXQgaXMgYWxzbyBlbXBvd2VyZWQgdG8gYW1lbmQgdGhlIGNvbnN0aXR1dGlvbiBpbiBjYXNlIG9mIHN1Y2ggZGlzYWdyZWVtZW50LiBIb3dldmVyLCB0aGUgU0MgZ2l2ZXMgdGhlIGZpbmFsIHdvcmQgb24gdGhlIHZhbGlkaXR5IG9mIHN1Y2ggYW4gYW1lbmRtZW50IGFuZCBjYW4gZXZlbiBzdHJpa2UgaXQgZG93bi4gVGhpcyB0dXNzbGUgYmV0d2VlbiB0aGUganVkaWNpYXJ5IGFuZCBQYXJsaWFtZW50IG92ZXIgY29uc3RpdHV0aW9uYWwgaW50ZXJwcmV0YXRpb24gaXMgYmVzdCBzZWVuIGluIHRoZSByZWNlbnQgTkpBQyBjYXNlIG9yIHRoZSBoaXN0b3JpY2FsIGNvbnRyb3ZlcnN5IHJlbGF0ZWQgdG8gQXJ0aWNsZSAzNjguIFdlIHdpbGwgY292ZXIgZGV0YWlscyB3aGVuIGNvdmVyaW5nIExheG1pa2FudGgncyBwb2xpdHkgYm9vay4gIFEgU291cmNlOiBQYWdlIDU1OiA4dGggTkNFUlQgU29jaWFsIGFuZCBQb2xpdGljYWwgTGlmZQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Parliament must accept the ruling of the judiciary without a right to any further recourse.",
        "option2" : "Parliament can amend the constitution to nullify the force of the ruling of the SC.",
        "option3" : "Parliament can declare the ruling of the SC as unconstitutional and void by passing a resolution to such effect.",
        "option4" : "None of the above is an appropriate course of action."
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements.\n\t1. Anthrax is an infectious disease caused by Bacillus anthracis.\n\t2. The disease-causing microbe for Anthrax occurs naturally in soil.\n\t3. Anthrax does not affect domestic or wild animals.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW50aHJheCBpcyBhIHNlcmlvdXMgaW5mZWN0aW91cyBkaXNlYXNlIGNhdXNlZCBieSBncmFtLXBvc2l0aXZlLCByb2Qtc2hhcGVkIGJhY3RlcmlhIGtub3duIGFzIEJhY2lsbHVzIGFudGhyYWNpcy4gSXQgb2NjdXJzIG5hdHVyYWxseSBpbiBzb2lsIGFuZCBjb21tb25seSBhZmZlY3RzIGRvbWVzdGljIGFuZCB3aWxkIGFuaW1hbHMgYXJvdW5kIHRoZSB3b3JsZC4gUGVvcGxlIGNhbiBnZXQgc2ljayB3aXRoIGFudGhyYXggaWYgdGhleSBjb21lIGluIGNvbnRhY3Qgd2l0aCBpbmZlY3RlZCBhbmltYWxzIG9yIGNvbnRhbWluYXRlZCBhbmltYWwgcHJvZHVjdHMuIEFudGhyYXggY2FuIGNhdXNlIHNldmVyZSBpbGxuZXNzIGluIGJvdGggaHVtYW5zIGFuZCBhbmltYWxzLiBXb29sc29ydGVyJ3MgZGlzZWFzZSB3YXMgYWxzbyBvbmNlIGtub3duIGFzIHJhZ3BpY2tlcidzIGRpc2Vhc2U7IGl0cyBtb3N0IGNvbW1vbiBmb3JtIGluIGh1bWFucyBpcyBjdXRhbmVvdXMgaW5mZWN0aW9uIHZpYSB0aGUgaW5qdXJlZCBza2luIG9yIG11Y291cyBtZW1icmFuZXMgb2YgYWdyaWN1bHR1cmFsIG9yIGluZHVzdHJpYWwgd29ya2VycyBhc3NvY2lhdGVkIHdpdGggaW5mZWN0ZWQgYW5pbWFscyBvciBhbmltYWwgcHJvZHVjdHMuIFNvcnRlcidzIGpvYiBpcyByaXNreSAtIGFudGhyYXggaXMgYSBmYXRhbCBibG9vZCBkaXNlYXNlLiBBbnRocmF4IGRvZXMgbm90IHNwcmVhZCBkaXJlY3RseSBmcm9tIG9uZSBpbmZlY3RlZCBhbmltYWwgb3IgcGVyc29uIHRvIGFub3RoZXI7IGl0IGlzIHNwcmVhZCBieSBzcG9yZXMuIFRoZXNlIHNwb3JlcyBjYW4gYmUgdHJhbnNwb3J0ZWQgYnkgY2xvdGhpbmcgb3Igc2hvZXMuIC4gICAgICAgICBRIFNvdXJjZTogUGFnZSAyODogN3RoIFNjaWVuY2UgTkNFUlQ=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only .       ",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 47,
      "question" : "He was the first Governor of the Presidency of Fort William (Bengal), the head of theSupreme Council of Bengal, and thereby the first de facto Governor-General of India",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IFdhcnJlbiBIYXN0aW5ncyAoMTczMiAtIDE4MTgpIHdhcyBhIEJyaXRpc2ggY29sb25pYWwgYWRtaW5pc3RyYXRvciwgd2hvIHNlcnZlZCBhcyB0aGUgZmlyc3QgR292ZXJub3Igb2YgdGhlIFByZXNpZGVuY3kgb2YgRm9ydCBXaWxsaWFtIChCZW5nYWwpLCB0aGUgaGVhZCBvZiB0aGUgU3VwcmVtZSBDb3VuY2lsIG9mIEJlbmdhbCwgYW5kIHNvIHRoZSBmaXJzdCBkZSBmYWN0byBHb3Zlcm5vci1HZW5lcmFsIG9mIEJlbmdhbCBpbiAxNzcyLTE3ODUuIEhlIGFuZCBSb2JlcnQgQ2xpdmUgYXJlIGNyZWRpdGVkIHdpdGggbGF5aW5nIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBCcml0aXNoIEVtcGlyZSBpbiBJbmRpYS4gSGUgd2FzIGFuIGVuZXJnZXRpYyBvcmdhbml6ZXIgYW5kIHJlZm9ybWVyLiBJbiAxNzc5LTE3ODQgaGUgbGVkIGZvcmNlcyBvZiB0aGUgRWFzdCBJbmRpYSBDb21wYW55IGFnYWluc3QgYSBjb2FsaXRpb24gb2YgbmF0aXZlIHN0YXRlcyBhbmQgdGhlIEZyZW5jaC4gRmluYWxseSwgdGhlIHdlbGwtb3JnYW5pemVkIEJyaXRpc2ggc2lkZSBoZWxkIGl0cyBvd24sIHdoaWxlIEZyYW5jZSBsb3N0IGluZmx1ZW5jZSBpbiBJbmRpYS4gSW4gMTc4NywgaGUgd2FzIGFjY3VzZWQgb2YgY29ycnVwdGlvbiBhbmQgaW1wZWFjaGVkLCBidXQgYWZ0ZXIgYSBsb25nIHRyaWFsIGFjcXVpdHRlZCBpbiAxNzk1LiBIZSB3YXMgbWFkZSBhIFByaXZ5IENvdW5jaWxsb3IgaW4gMTgxNC4gSGFzdGluZ3Mgc2hhcmVkIENsaXZlJ3MgdmlldyB0aGF0IHRoZSB0aHJlZSBtYWpvciBCcml0aXNoIFByZXNpZGVuY2llcyAoc2V0dGxlbWVudHMpLCBNYWRyYXMsIEJvbWJheSBhbmQgQ2FsY3V0dGEsIHNob3VsZCBhbGwgYmUgYnJvdWdodCB1bmRlciBhIHNpbmdsZSBydWxlIHJhdGhlciB0aGFuIGJlaW5nIGdvdmVybmVkIHNlcGFyYXRlbHkgYXMgdGhleSBjdXJyZW50bHkgd2VyZS4gVGhlIGZpcnN0IHRoaW5nIFdhcnJlbiBIYXN0aW5ncyBkaWQgd2FzIHRvIGVuZCB0aGUgRHVhbCBTeXN0ZW0gcHV0IGZvcnRoIGJ5IGhpcyBwcmVkZWNlc3NvciBDbGl2ZS4gV2hlbiBoZSBhYm9saXNoZWQgdGhlIHN5c3RlbSwgaGUgY3V0IGRvd24gdGhlIE5hd2FiIG9mIEJlbmdhbCdzIFBlbnNpb24gdG8gb25lLWhhbGYuIFEgU291cmNlOiBQYWdlIDM6IE91ciBwYXN0cy1JSUkgKFBhcnQgSSk=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Warren Hastings",
        "option2" : "William Bentick",
        "option3" : "Colin McKenzie",
        "option4" : "Cornwallis"
      }
    },
    {
      "index" : 48,
      "question" : "The system of appointing British Residents in the courts of various princely states\n\t1. was based on the Subsidiary Alliance system\n\t2. had its statutory backing in the Government of India 1858, ActSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFJlc2lkZW5jeSBzeXN0ZW0gaGFzIGl0cyBvcmlnaW5zIGluIHRoZSBzeXN0ZW0gb2Ygc3Vic2lkaWFyeSBhbGxpYW5jZXMgZGV2aXNlZCBieSB0aGUgQnJpdGlzaCBhZnRlciB0aGUgQmF0dGxlIG9mIFBsYXNzZXkgaW4gMTc1NywgdG8gc2VjdXJlIEJlbmdhbCBmcm9tIGF0dGFjayBieSBkZXBsb3lpbmcgRWFzdCBJbmRpYSBDb21wYW55IHRyb29wcyBvZiB0aGUgQmVuZ2FsIEFybXkgd2l0aGluIGZyaWVuZGx5IE5hdGl2ZSBTdGF0ZXMgKFMyIGlzIGluY29ycmVjdCBzaW5jZSB0aGVyZSB3YXMgbm8gc3VjaCBwcm92aXNpb24pLiBUaHJvdWdoIHRoaXMgc3lzdGVtLCB0aGUgSW5kaWFuIFByaW5jZXMgb2YgdGhlc2UgTmF0aXZlIFN0YXRlcyB3ZXJlIGFzc3VyZWQgb2YgcHJvdGVjdGlvbiBmcm9tIGludGVybmFsIG9yIGV4dGVybmFsIGFnZ3Jlc3Npb24sIHRocm91Z2ggZGVwbG95bWVudCBvZiBjb21wYW55IHRyb29wcy4gSW4gcmV0dXJuIHRoZXkgaGFkIHRvIHBheSBmb3IgdGhlIG1haW50ZW5hbmNlIG9mIHRob3NlIHRyb29wcyBhbmQgYWxzbyBhY2NlcHQgYSBCcml0aXNoIFJlc2lkZW50IGluIHRoZWlyIGNvdXJ0LiBUaGUgUmVzaWRlbnQgd2FzIGEgc2VuaW9yIEJyaXRpc2ggb2ZmaWNpYWwgcG9zdGVkIGluIHRoZSBjYXBpdGFsIG9mIHRoZXNlIFByaW5jZWx5IFN0YXRlcywgdGVjaG5pY2FsbHkgYSBkaXBsb21hdCBidXQgYWxzbyByZXNwb25zaWJsZSBmb3Iga2VlcGluZyB0aGUgcnVsZXIgdG8gaGlzIGFsbGlhbmNlLiBUaGlzIHdhcyBzZWVuIGFzIGEgc3lzdGVtIG9mIGluZGlyZWN0IHJ1bGUgdGhhdCB3YXMgY2FyZWZ1bGx5IGNvbnRyb2xsZWQgYnkgdGhlIEJyaXRpc2ggUmVzaWRlbnQuIEhpcyByb2xlIChhbmQgYWxsIHdlcmUgbWVuKSBpbmNsdWRlZCBhZHZpc2luZyBpbiBnb3Zlcm5hbmNlLCBpbnRlcnZlbmluZyBpbiBzdWNjZXNzaW9uIGRpc3B1dGVzLCBhbmQgZW5zdXJpbmcgdGhhdCB0aGUgU3RhdGVzIGRpZCBub3QgbWFpbnRhaW4gbWlsaXRhcnkgZm9yY2VzIG90aGVyIHRoYW4gZm9yIGludGVybmFsIHBvbGljaW5nIG9yIGVsc2UgZm9ybSBkaXBsb21hdGljIGFsbGlhbmNlcyB3aXRoIG90aGVyIFN0YXRlcy4gVGhlIFJlc2lkZW50cyBhdHRlbXB0ZWQgdG8gbW9kZXJuaXplIHRoZXNlIE5hdGl2ZSBTdGF0ZXMgdGhyb3VnaCBwcm9tb3Rpb24gb2YgRXVyb3BlYW4gbm90aW9ucyBvZiBwcm9ncmVzc2l2ZSBnb3Zlcm5tZW50LiBRIFNvdXJjZTogUGFnZSAxNTogT3VyIHBhc3RzLUlJSSAoUGFydCBJKQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements.\n\t1. A cess can be levied both on direct and indirect taxes.\n\t2. While the tax proceeds are shared with the States and Union Territories as per the guidelines ofthe Finance Commission, the cess proceeds need not be shared with them.Which of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQSBjZXNzIGlzIGxldmllZCBvbiB0aGUgdGF4IHBheWFibGUgYW5kIG5vdCBvbiB0aGUgdGF4YWJsZSBpbmNvbWUuIEluIGEgc2Vuc2UsIGZvciB0aGUgdGF4cGF5ZXIsIGl0IGlzIGVxdWl2YWxlbnQgdG8gYSBzdXJjaGFyZ2Ugb24gdGF4LiBBIGNlc3MgY2FuIGJlIGxldmllZCBvbiBib3RoIGRpcmVjdCBhbmQgaW5kaXJlY3QgdGF4ZXMuIFRoZSByZXZlbnVlIG9idGFpbmVkIGZyb20gaW5jb21lIHRheCwgY29ycG9yYXRpb24gdGF4LCBhbmQgaW5kaXJlY3QgdGF4ZXMgY2FuIGJlIGFsbG9jYXRlZCBmb3IgdmFyaW91cyBwdXJwb3Nlcy4gLiAgICAgICAgIFRoZSBwcm9jZWVkcyBvZiBhbGwgdGF4ZXMgYW5kIGNlc3NlcyBhcmUgY3JlZGl0ZWQgaW4gdGhlIENvbnNvbGlkYXRlZCBGdW5kIG9mIEluZGlhIChDRkkpLCBhbiBhY2NvdW50IG9mIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhLiBEaWZmZXJlbmNlIGJldHdlZW4gdGF4IGFuZCBjZXNzIFVubGlrZSBhIHRheCwgYSBjZXNzIGlzIGxldmllZCB0byBtZWV0IGEgc3BlY2lmaWMgcHVycG9zZTsgaXRzIHByb2NlZWRzIGNhbm5vdCBiZSBzcGVudCBvbiBhbnkga2luZCBvZiBnb3Zlcm5tZW50IGV4cGVuZGl0dXJlLiBXaGlsZSB0aGUgdGF4IHByb2NlZWRzIGFyZSBzaGFyZWQgd2l0aCB0aGUgU3RhdGVzIGFuZCBVbmlvbiBUZXJyaXRvcmllcyBhY2NvcmRpbmcgdG8gdGhlIGd1aWRlbGluZXMgYnkgdGhlIEZpbmFuY2UgQ29tbWlzc2lvbiwgdGhlIGNlc3MgcHJvY2VlZHMgbmVlZCBub3QgYmUgc2hhcmVkIHdpdGggdGhlbS4gU29tZSBleGFtcGxlcyBvZiBjZXNzIGFyZSBpbmZyYXN0cnVjdHVyZSBjZXNzIG9uIG1vdG9yIHZlaGljbGVzLCBjbGVhbiBlbnZpcm9ubWVudCBjZXNzLCBLcmlzaGkgS2FseWFuIGNlc3MgKGZvciB0aGUgaW1wcm92ZW1lbnQgb2YgYWdyaWN1bHR1cmUgYW5kIHdlbGZhcmUgb2YgZmFybWVycyksIGFuZCBlZHVjYXRpb24gY2Vzcy4gUSBTb3VyY2U6IE9mdGVuIGluIG5ld3M=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements.The Battle of Plassey\n\t1. led to the expansion of the Central Legislative Council because of an agreement between theprincely states and the British\n\t2. resulted in the victory of East India Company (EIC) leading to consolidation of its territory andacquisition of greater revenueWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEJhdHRsZSBvZiBQbGFzc2V5IHdhcyBlc3NlbnRpYWxseSBkdWUgdGhlIGNvbmZsaWN0cyBiZXR3ZWVuIHRoZSBCZW5nYWwgTmF3YWIgYW5kIHRoZSBFYXN0IEluZGlhIENvbXBhbnkuIEl0IHJlc3VsdGVkIGluIHRoZSB2aWN0b3J5IG9mIEVhc3QgSW5kaWEgQ29tcGFueSAoRUlDKSBsZWFkaW5nIGdyZWF0ZXIgcG93ZXJzIHRvIGV4dHJhY3QgcmV2ZW51ZSBhbmQgaXRzIGNvbnNvbGlkYXRpb24gb2YgaXRzIHByZXNlbmNlIGluIEJlbmdhbC4gVGhlIEJyaXRpc2ggbm93IHdpZWxkZWQgZW5vcm1vdXMgaW5mbHVlbmNlIG92ZXIgdGhlIE5hd2FiIGFuZCBjb25zZXF1ZW50bHkgYWNxdWlyZWQgc2lnbmlmaWNhbnQgY29uY2Vzc2lvbnMgZm9yIHByZXZpb3VzIGxvc3NlcyBhbmQgcmV2ZW51ZSBmcm9tIHRyYWRlLiBUaGUgQnJpdGlzaCBmdXJ0aGVyIHVzZWQgdGhpcyByZXZlbnVlIHRvIGluY3JlYXNlIHRoZWlyIG1pbGl0YXJ5IG1pZ2h0IGFuZCBwdXNoIHRoZSBvdGhlciBFdXJvcGVhbiBjb2xvbmlhbCBwb3dlcnMgc3VjaCBhcyB0aGUgRHV0Y2ggYW5kIHRoZSBGcmVuY2ggb3V0IG9mIFNvdXRoIEFzaWEsIHRodXMgZXhwYW5kaW5nIHRoZSBCcml0aXNoIEVtcGlyZS4gVGhlIEVhc3QgSW5kaWFuIENvbXBhbnkgZGlkIHVzZSB0aGUgaW5mbHVlbmNlIGVhcm50IGZyb20gdGhlIEJhdHRsZSBvZiBQbGFzc2V5IHRvIHB1c2ggYXdheSBvdGhlciBFdXJvcGVhbiBwb3dlcnMgZnJvbSBCZW5nYWwuICAgLiAgICAgICAgIFEgU291cmNlOiBQYWdlIDEyOiBPdXIgcGFzdHMtSUlJIChQYXJ0IEkp",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "None .       "
      }
    },
    {
      "index" : 51,
      "question" : "Which of the following states of India have changed their capital sinceindependence?\n\t1. Assam\n\t2. Gujarat\n\t3. Himachal Pradesh\n\t4. KarnatakaSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ2hlY2sgb3V0IHRoZSBzdGF0ZXMgd2l0aCBkaWZmZXJlbnQgZm9ybWVyIGNhcGl0YWxzIGJlbG93OiBRIFNvdXJjZTogTWFwLWJhc2VkIFFzOiBJbmRpYSAuICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 4 only",
        "option3" : "1, 2 and 4 only",
        "option4" : "1, 3 and 4 only"
      }
    },
    {
      "index" : 52,
      "question" : "Which of the following can acidify the soil considerably?\n\t1. Growing certain crops like legumes repeatedly\n\t2. Mixing sulphur in the soil\n\t3. Adding ammonium sulphate and urea to the soilSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRXhjZXNzIHNvaWwgYWNpZGlmaWNhdGlvbiBjYXVzZWQgYnkgZmVydGlsaXplcnMgaXMgYSBtYWpvciBmYWN0b3IgaW4gd29ybGTigJB3aWRlIHNvaWwgZGV0ZXJpb3JhdGlvbi4gRmVydGlsaXplcnMsIHBhcnRpY3VsYXJseSBuaXRyb2dlbiAob3IgYW1tb25pdW0gc3VscGhhdGUgYW5kIHVyZWEpLCBhY2lkaWZ5IHNvaWwgbW9zdGx5IHdoZW4gdG9vIG11Y2ggaXMgdXNlZCAoaW4gZXhjZXNzIG9mIGNyb3AgbmVlZHMpLiBBY2lkaXR5IGlzIG90aGVyd2lzZSBjYXVzZWQgYnkgZGlmZmVyZW50aWFsIGNhdGlvbuKAkGFuaW9uIHVwdGFrZSBieSBwbGFudHMgd2hpY2ggdmFyaWVzIHdpdGggc3BlY2llcy4gQSBjcm9wIGNhbiBhY2lkaWZ5IHRoZSBzb2lsIHdoZXRoZXIgb3Igbm90IGNvbW1lcmNpYWwgZmVydGlsaXplcnMgYXJlIHVzZWQsIGxpa2UgaWYgdGhlIG5pdHJvZ2VuIGNhbWUgZnJvbSB0aGUgc29pbCBvcmdhbmljIG1hdHRlciBvciBmcm9tIHN5bWJpb3RpYyBuaXRyb2dlbiBmaXhhdGlvbi4gV2hlbiB0aGUgZXhhY3QgYW1vdW50IG9mIG5pdHJvZ2VuIHRoYXQgaXMgbmVlZGVkIGlzIGFwcGxpZWQgdG8gbGFuZCwgbGl0dGxlIGFjaWRpZmljYXRpb24gcmVzdWx0cyB1bmxlc3Mgbm9udGlsbGFnZSBpcyBwcmFjdGljZWQgdG8gZ2l2ZSBzb2lsIHN1cmZhY2UgYWNpZGlmaWNhdGlvbi4gSW4gdGhhdCBjYXNlIHRoZSBhY2lkaWZpY2F0aW9uIGNhbiBlcXVhbCB0aGUgdGhlb3JldGljYWwuIEZvciBhbW1vbml1beKAkE4sIHRoZSB0aGVvcmV0aWNhbCBpcyB0d2ljZSB0aGUgdmFsdWUgZ2l2ZW4gaW4gZmVydGlsaXplciBoYW5kYm9va3MgYW5kIGlmIHRoZXJlIGFyZSBubyBwbGFudCByb290cyBpbiB0aGUgc29pbCBzdXJmYWNlLCB0aGUgZnVsbCBhY2lkaWZpY2F0aW9uIGVmZmVjdCBpcyBleHByZXNzZWQuIFRoZXJlIGFyZSBwbGFudCBzcGVjaWVzIGFuZCBjdWx0aXZhciBkaWZmZXJlbmNlcyBvbiBzb2lsIGFjaWRpZmljYXRpb24gY2F1c2VkIGJ5IGRpZmZlcmVudGlhbCBjYXRpb27igJBhbmlvbiB1cHRha2UuIExlZ3VtZXMgYWNpZGlmeSBzb2lsIGNvbnNpZGVyYWJseS4gU29tZSBvZiB0aGUgaGFybSBjaGVtaWNhbCBmZXJ0aWxpemVycyBtYXkgY2F1c2UgaW5jbHVkZSB3YXRlcndheSBwb2xsdXRpb24sIGNoZW1pY2FsIGJ1cm4gdG8gY3JvcHMsIGluY3JlYXNlZCBhaXIgcG9sbHV0aW9uLCBhY2lkaWZpY2F0aW9uIG9mIHRoZSBzb2lsIGFuZCBtaW5lcmFsIGRlcGxldGlvbiBvZiB0aGUgc29pbC4gT3Zlci1hcHBsaWNhdGlvbiBvZiBjaGVtaWNhbCBmZXJ0aWxpemVyIHRvIHBsYW50cyBtYXkgY2F1c2UgdGhlIGxlYXZlcyB0byB0dXJuIHllbGxvdyBvciBicm93biwgZGFtYWdpbmcgdGhlIHBsYW50IGFuZCByZWR1Y2luZyBjcm9wIHlpZWxkLiBUaGlzIGNvbmRpdGlvbiBpcyBrbm93biBhcyBjaGVtaWNhbCBsZWFmIHNjb3JjaC4gTGVhZiBzY29yY2ggY2FuIGNhdXNlIHRoZSBsZWF2ZXMgb2YgdGhlIHBsYW50IHRvIHdpdGhlciBhbmQgbWF5IGNhdXNlIHRoZSBwbGFudCB0byBkaWUuIFdoZW4gc29pbCBpcyB0b28gYWNpZGljLCBiYXNlcyBsaWtlIHF1aWNrIGxpbWUgKGNhbGNpdW0gb3hpZGUpIG9yIHNsYWtlZCBsaW1lIChjYWxjaXVtIGh5ZHJveGlkZSkuIElmIHRoZSBzb2lsIGlzIGJhc2ljLCBvcmdhbmljIG1hdHRlciBpcyBhZGRlZCB0byBpdC4gT3JnYW5pYyBtYXR0ZXIgcmVsZWFzZXMgYWNpZHMgd2hpY2ggbmV1dHJhbGlzZXMgdGhlIGJhc2ljIG5hdHVyZSBvZiB0aGUgc29pbC4gU29pbCBwSCBkaXJlY3RseSBhZmZlY3RzIHRoZSBudXRyaWVudCBhdmFpbGFiaWxpdHkgdG8gdGhlIHBsYW50cyBhbmQgdGh1cyBhZmZlY3RzIHRoZWlyIGhlYWx0aCBhbmQgcHJvZHVjdGl2aXR5LiBSZWFkIGh0dHBzOi8vdnJpYy51Y2RhdmlzLmVkdS9wZGYvc29pbC9DaGFuZ2luZ3BIaW5Tb2lsLnBkZiBRIFNvdXJjZTogUGFnZSA1NTogN3RoIFNjaWVuY2UgTkNFUlQgLiAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3",
        "option2" : "1, 2 and 3",
        "option3" : "1 and 2",
        "option4" : "1 and 3"
      }
    },
    {
      "index" : 53,
      "question" : "The effectiveness of contour ploughing in containing soil decreases with\n\t1. increase in slope gradient and length\n\t2. rainfall intensity\n\t3. the erodibility of the soilSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSXQgaXMgdGhlIGZhcm1pbmcgcHJhY3RpY2Ugb2YgcGxvdWdoaW5nIGFuZC9vciBwbGFudGluZyBhY3Jvc3MgYSBzbG9wZSBmb2xsb3dpbmcgaXRzIGVsZXZhdGlvbiBjb250b3VyIGxpbmVzLiBUaGVzZSBjb250b3VyIGxpbmVzIGNyZWF0ZSBhIHdhdGVyIGJyZWFrIHdoaWNoIHJlZHVjZXMgdGhlIGZvcm1hdGlvbiBvZiByaWxscyBhbmQgZ3VsbGllcyBkdXJpbmcgdGltZXMgb2YgaGVhdnkgd2F0ZXIgcnVuLW9mZjsgd2hpY2ggaXMgYSBtYWpvciBjYXVzZSBvZiBzb2lsIGVyb3Npb24uIFRoZSB3YXRlciBicmVhayBhbHNvIGFsbG93cyBtb3JlIHRpbWUgZm9yIHRoZSB3YXRlciB0byBzZXR0bGUgaW50byB0aGUgc29pbC4gU2luY2UgdG9wIHNvaWwgZXJvc2lvbiBpcyByZWR1Y2VkIGFuZCB3YXRlciByZXRlbnRpb24gaW1wcm92ZWQsIGl0IG9mdGVuIGxlYWRzIHRvIGdyZWF0ZXIgd2VlZCBncm93dGguIFNvaWwgZXJvc2lvbiBwcmV2ZW50aW9uIHByYWN0aWNlcyBzdWNoIGFzIHRoaXMgY2FuIGRyYXN0aWNhbGx5IGRlY3JlYXNlIG5lZ2F0aXZlIGVmZmVjdHMgYXNzb2NpYXRlZCB3aXRoIHNvaWwgZXJvc2lvbiBzdWNoIGFzIHJlZHVjZWQgY3JvcCBwcm9kdWN0aXZpdHksIHdvcnNlbmVkIHdhdGVyIHF1YWxpdHksIGxvd2VyIGVmZmVjdGl2ZSByZXNlcnZvaXIgd2F0ZXIgbGV2ZWxzLCBmbG9vZGluZywgYW5kIGhhYml0YXQgZGVzdHJ1Y3Rpb24uIENvbnRvdXIgZmFybWluZyBpcyBjb25zaWRlcmVkIGFuIGFjdGl2ZSBmb3JtIG9mIHN1c3RhaW5hYmxlIGFncmljdWx0dXJlLiBDb250b3VyIHBsb3VnaGluZyBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSByYWlueSBzZWFzb24gd2hlbiBiaW9sb2dpY2FsIGNvbnNlcnZhdGlvbiBlZmZlY3RzIGFyZSBwb29yLiBUaGUgZWZmZWN0aXZlbmVzcyBvZiBjb250b3VyIHBsb3VnaGluZyBkZWNyZWFzZXMgd2l0aCBpbmNyZWFzZSBpbiBzbG9wZSBncmFkaWVudCBhbmQgbGVuZ3RoLCByYWluZmFsbCBpbnRlbnNpdHkgYW5kIGVyb2RpYmlsaXR5IG9mIHRoZSBzb2lsIFEgU291cmNlOiBBUjogUGFnZSAxNDogQ2xhc3MgOHRoIE5DRVJUOiBSZXNvdXJjZSBhbmQgRGV2ZWxvcG1lbnQ=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "3 only",
        "option3" : "1 and 2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 54,
      "question" : "Consider the following about the Aravali ranges\n\t1. The highest peak is Guru Shikharat.\n\t2. Pipli Ghat, Dewair and Desuri passes are situated in these ranges.\n\t3. They begin at Delhi and end in Ajmer.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQXJhdmFsaSBSYW5nZTogVGhleSBhcmUgYWxpZ25lZCBpbiBub3J0aC1lYXN0IHRvIHNvdXRoLXdlc3QgZGlyZWN0aW9uLiBUaGV5IHJ1biBiZXR3ZWVuIERlbGhpIGFuZCBQYWxhbnB1ciBpbiBHdWphcmF0LiBUaGUgaGlnaGVzdCBwZWFrIGlzIEd1cnUgU2hpa2hhcmF0IDEsNzIyIG1ldHJlcyAoNSw2NTAgZnQpLiBUaGV5IGFyZSBvbmUgb2YgdGhlIG9sZGVzdCBmb2xkIG1vdW50YWlucyBvZiB0aGUgd29ybGQgYW5kIHRoZSBvbGRlc3QgaW4gSW5kaWEuIEFjY29yZGluZyB0byBzb21lIGdlb2dyYXBoZXJzLCBvbmUgQnJhbmNoIG9mIHRoZSBBcmF2YWxpcyBleHRlbmRzIHRvIHRoZSBMYWtzaGFkd2VlcCBBcmNoaXBlbGFnbyB0aHJvdWdoIHRoZSBHdWxmIG9mIEtoYW1iaGF0IGFuZCB0aGUgb3RoZXIgaW50byBBbmRocmEgUHJhZGVzaCBhbmQgS2FybmF0YWthLiBBdCB0aGUgc291dGgtd2VzdCBleHRyZW1pdHkgdGhlIHJhbmdlIHJpc2VzIHRvIG92ZXIgMSwwMDAgbS4gSGVyZSBNdC4gQWJ1ICgxLDE1OCBtKSwgYSBzbWFsbCBoaWxseSBibG9jaywgaXMgc2VwYXJhdGVkIGZyb20gdGhlIG1haW4gcmFuZ2UgYnkgdGhlIHZhbGxleSBvZiB0aGUgQmFuYXMuIFBpcGxpIEdoYXQsIERld2FpciBhbmQgRGVzdXJpIHBhc3NlcyBhbGxvdyBtb3ZlbWVudCBieSByb2FkcyBhbmQgcmFpbHdheXMuIFRoZSBBcmF2YWxsaSBSYW5nZSBqb2lucyB0d28gb2YgdGhlIGFuY2llbnQgZWFydGgncyBjcnVzdCBzZWdtZW50cyB0aGF0IG1ha2UgdXAgdGhlIGdyZWF0ZXIgSW5kaWFuIGNyYXRvbi0gQXJhdmFsbGkgQ3JhdG9uIGFuZCBCdW5kZWxrYW5kIENyYXRvbi4gUSBTb3VyY2U6IE1hcCBiYXNlZCBRczogSW5kaWE=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "2 only .       ",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 55,
      "question" : "Which of the following is/are the local names of shifting cultivation in India?\n\t1. Zara\n\t2. Ekra\n\t3. Podu\n\t4. KumariSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IFNvbWUgbG9jYWwgbmFtZXMgb2Ygc2hpZnRpbmcgY3VsdGl2YXRpb24gaW5jbHVkZTogSmh1bSBpbiBOb3J0aC1lYXN0ZXJuIEluZGlhOyBaYXJhIGFuZCBFa3JhIGluIFNvdXRoZXJuIHN0YXRlczsgUG9kdSBpbiBBbmRocmEgUHJhZGVzaDsgS3VtYXJpIGluIFdlc3Rlcm4gR2hhdHMuIEZvciBpbnN0YW5jZSwgQmV3YXIgaXMgdGhlIHNoaWZ0aW5nIGN1bHRpdmF0aW9uIG9mIE1hZGh5YSBQcmFkZXNoLiBJbiBCZXdhciBpbiB0aGUgTWFnaCBtb250aCwgc2hpZnRzIGFyZSBtYWRlIHRvIG5ldyBiZXdhcnMgKGZyb20gb2xkIGJld2FycykgYW5kIHRyaWJhbHMgcmVseSBvbiBodW50aW5nLWdhdGhlcmluZyBhcyB0aGUgbWFpbiBzdWJzaXN0ZW5jZSBhY3Rpdml0eS4gVGhlIHRyaWJhbHMgbGl2ZSBpbiB0aGUgYmV3YXIgZmllbGRzLiBPbmx5IGFmdGVyIGEgZmV3IHllYXJzLCB3aGVuIHRoZSBsYW5kIHByb2R1Y3Rpdml0eSBkZWNsaW5lcywgdHJpYmFscyBzdXBwbGVtZW50IHRoZWlyIGRpZXRzIHdpdGggZm9yZXN0IHByb2R1Y3RzLiBRIFNvdXJjZTogUGFnZSA2OiBDbGFzcyA4dGggTkNFUlQgSGlzdG9yeTogT3VyIFBhc3RzLUlJSSAtIFBhcnQgSQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4",
        "option2" : "2, 3 and 4",
        "option3" : "1 and 3",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 56,
      "question" : "Which of the following factors affect the distribution of minerals on earth?\n\t1. Altitude\n\t2. Terrain\n\t3. PrecipitationSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGRpc3RyaWJ1dGlvbiBvZiBuYXR1cmFsIHJlc291cmNlcyBkZXBlbmRzIHVwb24gbnVtYmVyIG9mIHBoeXNpY2FsIGZhY3RvcnMgbGlrZSB0ZXJyYWluLCBjbGltYXRlIGFuZCBhbHRpdHVkZS4gVGhlIGRpc3RyaWJ1dGlvbiBvZiByZXNvdXJjZXMgaXMgdW5lcXVhbCBiZWNhdXNlIHRoZXNlIGZhY3RvcnMgZGlmZmVyIHNvIG11Y2ggb3ZlciB0aGUgZWFydGguIEZvciBlLmcuIHByZWNpcGl0YXRpb24gY2FuIGxlYWNoIG91dCBjcml0aWNhbCBtaW5lcmFscyBmcm9tIHRvcCBzb2lsIGFuZCBkZXBvc2l0IHRoZW0gc29tZXdoZXJlIGRvd25zdHJlYW0gbGVhZGluZyB0byBhIGNvbmNlbnRyYXRpb24gb2YgbWluZXJhbHMgdGhlcmUuIC4gICAgICAgICBBbHNvLCB0aGUgdHlwZSBvZiByb2NrIGFmZmVjdHMgd2hhdCBraW5kIG9mIG1pbmVyYWxzIGl0IG1heSBob3N0LCBmb3IgZS5nLiBzZWRpbWVudGFyeSByb2NrcyBob2xkIG5vbi1tZXRhbGxpYyBtaW5lcmFscy4gVGhlIHRlcnJhaW4gd2hlcmUgdGhlIHJvY2sgaXMgZm91bmQgKHZlcnRpY2FsIGNsaWZmIHZzIGZsYXQgZ3JvdW5kIHZzIHJvbGxpbmcgaGlsbHMpIGFsc28gZGVjaWRlcyB3aGVyZSB0aGUgbWluZXJhbCB3aWxsIGdldCBjb25jZW50cmF0ZWQuIE1ham9yIGZhY3RvcnMgYWZmZWN0aW5nIGV4cGxvaXRhdGlvbiBvZiBtaW5lcmFsIHJlc291cmNlcyBpbiB0aGUgd29ybGQgYXJlIGFzIGZvbGxvd3M6IChpKSBSaWNobmVzcyBvciBHcmFkZSBvZiB0aGUgT3JlIChpaSkgU2l6ZSBvZiBEZXBvc2l0IChpaWkpIE1ldGhvZCBvZiBNaW5pbmcgKGl2KSBBY2Nlc3NpYmlsaXR5ICh2KSBUcmFuc3BvcnRhdGlvbiBGYWNpbGl0aWVzICh2aSkgU3RhZ2Ugb2YgSW5kdXN0cmlhbCBEZXZlbG9wbWVudCAodmlpKSBUZWNobm9sb2d5ICh2aWlpKSBPdGhlciBGYWN0b3JzLiBXZSB3aWxsIGNvdmVyIGRldGFpbHMgaW4gdXBjb21pbmcgdGVzdHMuIFEgU291cmNlOiBBUjogQ2xhc3MgOHRoIE5DRVJUOiBSZXNvdXJjZSBhbmQgRGV2ZWxvcG1lbnQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "1 and 2 only",
        "option3" : "1 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following statements.\n\t1. Major rivers shared between India and Bangladesh are the Brahmaputra, Ganges, and Teesta.\n\t2. The Kosi, Gandaki, and Mahakali rivers join Nepal with India.\n\t3. Pakistan and Afghanistan do not share any common river basin.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWEsIFBha2lzdGFuLCBCYW5nbGFkZXNoLCBCaHV0YW4sIE5lcGFsLCBhbmQgQWZnaGFuaXN0YW4gc2hhcmUgdHdlbnR5IG1ham9yIHJpdmVycyBhbW9uZyB0aGVtLiBUaGUgSW5kdXMgYmFzaW4gKGNvbnNpc3Rpbmcgb2YgdGhlIEluZHVzLCBSYXZpLCBCZWFzLCBTdXRsZWosIEpoZWx1bSBhbmQgQ2hlbmFiIHJpdmVycykgaW50ZXItbGlua3MgSW5kaWEsIFBha2lzdGFuIGFuZCBDaGluYSwgd2hpbGUgdGhlIEJyYWhtYXB1dHJhIGFuZCB0aGUgR2FuZ2VzIGJhc2lucyBpbnRlci1saW5rIENoaW5hIHdpdGggSW5kaWEsIE5lcGFsLCBCYW5nbGFkZXNoLCBhbmQgQmh1dGFuLiBUaGUgS29zaSwgR2FuZGFraSwgYW5kIE1haGFrYWxpIHJpdmVycyBqb2luIE5lcGFsIHdpdGggSW5kaWEuIE1ham9yIHJpdmVycyBzaGFyZWQgYmV0d2VlbiBJbmRpYSBhbmQgQmFuZ2xhZGVzaCBhcmUgdGhlIEJyYWhtYXB1dHJhLCBHYW5nZXMsIGFuZCBUZWVzdGEuIFBha2lzdGFuIGFuZCBBZmdoYW5pc3RhbiBzaGFyZSB0aGUgS2FidWwgcml2ZXIgYmFzaW4uIE1la29uZyBmbG93cyBiZXR3ZWVuIC0gQ2hpbmEsIExhb3MsIE15YW5tYXIsIFRoYWlsYW5kLCBWaWV0bmFtLCBDYW1ib2RpYS4gLiAgICAgICAgIFEgU291cmNlOiBNYXAtYmFzZWQ6IFNvdXRoIEFzaWEg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2",
        "option2" : "1, 2 and 3",
        "option3" : "1 and 3",
        "option4" : "2 only"
      }
    },
    {
      "index" : 58,
      "question" : "Which of the following is/are provisions found under Fundamental Rights under theConstitution?\n\t1. All citizen groups that reside in India having a distinct culture, language and script have theright to conserve their culture and language.\n\t2. No educational institutes maintained by the state shall deny admission to a person entirely onthe basis of race, religion, caste or language.Select the correct answer using the codes below..",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IEFydGljbGUgMjkoMSk6IFRoaXMgcHJvdmlkZXMgYWxsIGNpdGl6ZW4gZ3JvdXBzIHRoYXQgcmVzaWRlIGluIEluZGlhIGhhdmluZyBhIGRpc3RpbmN0IGN1bHR1cmUsIGxhbmd1YWdlIGFuZCBzY3JpcHQsIHRoZSByaWdodCB0byBjb25zZXJ2ZSB0aGVpciBjdWx0dXJlIGFuZCBsYW5ndWFnZS4gVGhpcyByaWdodCBpcyBhbiBhYnNvbHV0ZSByaWdodCBhbmQgdGhlcmUgYXJlIG5vICdxdWFsaWZpY2F0aW9uJyBvciAncmVhc29uYWJsZSByZXN0cmljdGlvbnMnIGluIHRoZSBpbnRlcmVzdCBvZiB0aGUgZ2VuZXJhbCBwdWJsaWMgdGhhdCBhcHBseS4gQXJ0aWNsZSAyOSgyKTogVGhlIFN0YXRlIHNoYWxsIG5vdCBkZW55IGFkbWlzc2lvbiBpbnRvIGVkdWNhdGlvbmFsIGluc3RpdHV0ZXMgbWFpbnRhaW5lZCBieSBpdCBvciB0aG9zZSB0aGF0IHJlY2VpdmUgYWlkcyBmcm9tIGl0LCB0byBhbnkgcGVyc29uIG9uIHRoZSBiYXNpcyBvZiByYWNlLCByZWxpZ2lvbiwgY2FzdGUsIGxhbmd1YWdlLCBldGMuIFRoaXMgcmlnaHQgaXMgZ2l2ZW4gdG8gaW5kaXZpZHVhbHMgYW5kIG5vdCBhbnkgY29tbXVuaXR5LiAuICAgICAgICAgUSBTb3VyY2U6IENoYXB0ZXIgMTogQ2xhc3MgOHRoIE5DRVJUOiBTb2NpYWwgYW5kIFBvbGl0aWNhbCBMaWZl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 59,
      "question" : "Under the Policy of Paramountcy\n\t1. all Indian states were made to accept the suzerainty of the British\n\t2. the British justified themselves in annexing the territory of a princely state if it protected theinterests of the BritishWhich of the above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVhcm5pbmc6IFVuZGVyIExvcmQgSGFzdGluZ3MgKEdvdmVybm9yLSBHZW5lcmFsIGZyb20gMTgxMyB0byAxODIzKSBhIG5ldyBwb2xpY3kgb2YgJ3BhcmFtb3VudGN5JyB3YXMgaW5pdGlhdGVkLiBOb3cgdGhlIENvbXBhbnkgY2xhaW1lZCB0aGF0IGl0cyBhdXRob3JpdHkgd2FzIHBhcmFtb3VudCBvciBzdXByZW1lLCBoZW5jZSBpdHMgcG93ZXIgd2FzIGdyZWF0ZXIgdGhhbiB0aGF0IG9mIEluZGlhbiBzdGF0ZXMuIEluIG9yZGVyIHRvIHByb3RlY3QgaXRzIGludGVyZXN0cyBpdCB3YXMganVzdGlmaWVkIGluIGFubmV4aW5nIG9yIHRocmVhdGVuaW5nIHRvIGFubmV4IGFueSBJbmRpYW4ga2luZ2RvbS4gVGhpcyB2aWV3IGNvbnRpbnVlZCB0byBndWlkZSBsYXRlciBCcml0aXNoIHBvbGljaWVzIGFzIHdlbGwuIFRoaXMgcHJvY2VzcywgaG93ZXZlciwgZGlkIG5vdCBnbyB1bmNoYWxsZW5nZWQuIEZvciBleGFtcGxlLCB3aGVuIHRoZSBCcml0aXNoIHRyaWVkIHRvIGFubmV4IHRoZSBzbWFsbCBzdGF0ZSBvZiBLaXRvb3IgKGluIEthcm5hdGFrYSB0b2RheSksIFJhbmkgQ2hhbm5hbW1hIHRvb2sgdG8gYXJtcyBhbmQgbGVkIGFuIGFudGktIEJyaXRpc2ggcmVzaXN0YW5jZSBtb3ZlbWVudC4gU2hlIHdhcyBhcnJlc3RlZCBpbiAxODI0IGFuZCBkaWVkIGluIHByaXNvbiBpbiAxODI5LiBCdXQgUmF5YW5uYSwgYSBwb29yIGNob3draWRhciBvZiBTYW5nb2xpIGluIEtpdG9vciwgY2FycmllZCBvbiB0aGUgcmVzaXN0YW5jZS4gV2l0aCBwb3B1bGFyIHN1cHBvcnQgaGUgZGVzdHJveWVkIG1hbnkgQnJpdGlzaCBjYW1wcyBhbmQgcmVjb3Jkcy4gSGUgd2FzIGNhdWdodCBhbmQgaGFuZ2VkIGJ5IHRoZSBCcml0aXNoIGluIDE4MzAuIFRoZSBmaW5hbCB3YXZlIG9mIGFubmV4YXRpb25zIG9jY3VycmVkIHVuZGVyIExvcmQgRGFsaG91c2llIHdobyB3YXMgdGhlIEdvdmVybm9yLUdlbmVyYWwgZnJvbSAxODQ4IHRvIDE4NTYuIEhlIGRldmlzZWQgYSBwb2xpY3kgdGhhdCBjYW1lIHRvIGJlIGtub3duIGFzIHRoZSBEb2N0cmluZSBvZiBMYXBzZS4gVGhpcyBwb2xpY3kgd2FzIGZvbGxvd2VkIGJ5IHBvbGljaWVzIG9mIHN1YnNpZGlhcnkgYWxsaWFuY2VzOyBrZWVwaW5nIEJyaXRpc2ggcmVzaWRlbnRzIGluIGNvdXJ0cyBldGMuIFEgU291cmNlOiBQYWdlIDE4OiBPdXIgcGFzdHMtSUlJIChQYXJ0IEkp",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 60,
      "question" : "The states with the greatest crude oil reserves in India include",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRG9tZXN0aWMgZ2FzIGluIHRoZSBjb3VudHJ5IGlzIGJlaW5nIHN1cHBsaWVkIGZyb20gdGhlIG9pbCAmIGdhcyBmaWVsZHMgbG9jYXRlZCBhdCB3ZXN0ZXJuIGFuZCBzb3V0aC1lYXN0ZXJuIGFyZWFzIHZpei4gSGF6aXJhIGJhc2luLCBNdW1iYWkgb2Zmc2hvcmUgJiBLRyBiYXNpbiBhcyB3ZWxsIGFzIE5vcnRoZWFzdCBSZWdpb24gKEFzc2FtICYgVHJpcHVyYSkuIFwgUSBTb3VyY2U6IFBhZ2UgMzI6IENsYXNzIDh0aCBOQ0VSVDogUmVzb3VyY2UgYW5kIERldmVsb3BtZW50IGh0dHA6Ly9wZXRyb2xldW0ubmljLmluL25hdHVyYWwtZ2FzL2Fib3V0LW5hdHVyYWwtZ2Fz",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Arunachal Pradesh, Andhra Pradesh and Assam",
        "option2" : "Assam, Gujarat and Rajasthan",
        "option3" : "Nagaland, Arunachal Pradesh and Tripura",
        "option4" : "Rajasthan, Tamil Nadu and Andhra Pradesh"
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements\n\t1. India shares longest land boundary with China\n\t2. Pakistan is the second largest populated country in South AsiaWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWEgc2hhcmVzIGxhbmQgYm9yZGVycyB3aXRoIHNldmVuIHNvdmVyZWlnbiBuYXRpb25zLiBUaGUgc3RhdGUncyBNaW5pc3RyeSBvZiBIb21lIEFmZmFpcnMgYWxzbyByZWNvZ25pemVzIGEgMTA2IGtpbG9tZXRyZXMgKDY2IG1pKSBsYW5kIGJvcmRlciB3aXRoIGFuIGVpZ2h0aCBuYXRpb24sIEFmZ2hhbmlzdGFuLCBhcyBwYXJ0IG9mIGl0cyBjbGFpbSBvZiB0aGUgS2FzaG1pciByZWdpb24u",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following statements\n\t1. Bangladesh shares boundary with only one country.\n\t2. Pakistan shares boundary with five countries.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDo=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2 .       "
      }
    },
    {
      "index" : 63,
      "question" : "Afghanistan shares border with which of the following countries?\n\t1. Turkmenistan\n\t2. Iran\n\t3. Tajikistan\n\t4. ChinaSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDo=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "1, 3 and 4 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 64,
      "question" : "Which of the following countries shares border with Arabian Sea?\n\t1. India\n\t2. Pakistan\n\t3. Oman\n\t4. Saudi ArabiaSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only",
        "option2" : "1, 2 and 3 only",
        "option3" : "2, 3 and 4 only",
        "option4" : "1, 3 and 4 only"
      }
    },
    {
      "index" : 65,
      "question" : "Which of the following tribes is/are located in South Asia?\n\t1. Giraavaru\n\t2. Lhop\n\t3. VeddasSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVmVkZGFzICdUaGUgRm9yZXN0IFBlb3BsZScgb3IgVmVkZGFzIGFyZSBpbmRpZ2Vub3VzIHRvIFNyaSBMYW5rYS4gVGhlaXIgbGFuZ3VhZ2UgVmVkZGEsIGlzIG5vdyBleHRpbmN0IGFuZCB0aGUgdHJpYmUgc3BlYWtzIFNpbmhhbGEgYW5kIFRhbWlsLiBUaGV5IHByYWN0aXNlIHRoZSByZWxpZ2lvbiBvZiBhbmltaXNtLCB3b3JzaGlwcGluZyB0aGUgc3Bpcml0IG9mIG5hdHVyZS4gVGhlIGFyZWEncyBsYXN0IGNhdmUgZHdlbGxlcnMgd29yc2hpcCBkZWFkIGFuY2VzdG9ycywgY2FsbGVkIE5hZSBZYWt1LiBUaGUgaHVudCBnYXRoZXJlcnMgYWxzbyBoYXZlIGEgcGVjdWxpYXIgZGVpdHkgdW5pcXVlIHRvIHRoZW0gbmFtZWQgS2FuZGUgWWFra2EsIHNwaXJpdCBvZiB0aGUgbW91bnRhaW4gb3Igcm9jay4gTGhvcCBBIHNtYWxsIHRyaWJlIG9mIHNvdXRod2VzdCBCaHV0YW4sIFRoZSBMaG9wIG9yIERveWEgcGVvcGxlIGFyZSBzYWlkIHRvIGJlIHRoZSBhYm9yaWdpbmFsIGluaGFiaXRhbnRzIG9mIHRoZSBjb3VudHJ5LiBUaGV5IHRyYWNlIHRoZWlyIGRlc2NlbnQgbWF0cmlsaW5lYWxseSBhbmQgLiAgICAgICAgIG1hcnJ5IHRoZWlyIGNyb3NzIGNvdXNpbnMuIEN1cnJlbnRseSAyLDUwMCBpbiBudW1iZXIsIHRoZSB0cmliZSBzcGVha3MgVGliZXRvLUJ1cm1lc2UgbGFuZ3VhZ2UuIFRoZWlyIHJlbGlnaW9uIGlzIFRpYmV0YW4gQnVkZGhpc20gbWl4ZWQgd2l0aCBhbmltaXNtIGFuZCB0aGV5IGVtYmFsbSB0aGVpciBkZWNlYXNlZCB3aG8gYXJlIHRoZW4gcGxhY2VkIGluIGEgZm9ldGFsIHBvc2l0aW9uIGluIGEgY2lyY3VsYXIgYWRvcm5lZCBjb2ZmaW4sIGFib3ZlIHRoZSBncm91bmQuIEdpcmFhdmFydSBOYXRpdmUgdG8gR2lyYWF2YXJ1IElzbGFuZCBpbiBNYWxkaXZlcywgdGhlIHNhbWUgbmFtZWQgdHJpYmUgd2VyZSBlc3NlbnRpYWxseSB0aG9zZSBjb25zaWRlcmVkIHRvIGJlIG9mIGxvd2VyIGNhc3RlIHRoYW4gdGhlIG90aGVycy4gQ29uc2VxdWVudGx5IGR1ZSB0byBpc29sYXRpb24sIHRoZXkgZGV2ZWxvcGVkIGEgc2VyaWVzIG9mIGhlcml0YWJsZSBnZW5ldGljIGRpc29yZGVycy4gVGhlIHRyaWJlIGlzIHN0cmljdGx5IG1vbm9nYW1vdXMgYW5kIHByb2hpYml0cyBkaXZvcmNlLiBJdCBpcyB1c3VhbGx5IHNlZW4gdG8gYmUgaGVhZGVkIGJ5IGEgd29tYW4gY2FsbGVkIEZvb2xodW1hLURoYWl0aGEuIFRoZXkgYWxzbyB3ZWFyIHVuaXF1ZSBuZWNrbGFjZXMgb2YgdGlueSBibHVlIGJlYWRzLCBub3Qgc2VlbiBvbiBhbnkgb3RoZXIgdHJpYmUu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements\n\t1. Indus River flows through three nations.\n\t2. Ganga River flows through two countries.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRnJvbSBpdHMgc291cmNlIGluIHRoZSBub3J0aC13ZXN0ZXJuIGZvb3RoaWxscyBvZiB0aGUgSGltYWxheWFzLCBpdCBmbG93cyB0aHJvdWdoIHRoZSBJbmRpYW4gc3RhdGUgb2YgSmFtbXUgJiBLYXNobWlyIGFuZCBhbG9uZyB0aGUgbGVuZ3RoIG9mIFBha2lzdGFuIHRvIHRoZSBBcmFiaWFuIFNlYS4gVGhlIHJpdmVyIGFuZCBpdHMgZml2ZSB0cmlidXRhcmllcyB0b2dldGhlciBtYWtlIHVwIHRoZSBJbmR1cyBCYXNpbiwgd2hpY2ggc3BhbnMgZm91ciBjb3VudHJpZXMgYW5kIHN1cHBvcnRzIDIxNW0gcGVvcGxlLiAuICAgICAgICAgVGhlIEdhbmdlcyBmbG93cyBzb3V0aCBhbmQgZWFzdCBmcm9tIHRoZSBIaW1hbGF5YXMsIGZvcm1pbmcgYSBjYW55b24gYXMgaXQgbGVhdmVzIHRoZSBtb3VudGFpbi4gSXQgd2luZHMgaXRzIHdheSB0aHJvdWdoIG5vcnRoZXJuIEluZGlhLCBldmVudHVhbGx5IGVtcHR5aW5nIGludG8gdGhlIEJheSBvZiBCZW5nYWwuIFRoZSBHYW5nZXMnIG1hbnkgdHJpYnV0YXJpZXMgb3JpZ2luYXRlIGZyb20gdGhlIG5lYXJieSBjb3VudHJpZXMgb2YgTmVwYWwsIEJhbmdsYWRlc2gsIGFuZCBDaGluYSAoaW4gYW4gYXV0b25vbW91cyByZWdpb24gY2FsbGVkIFRpYmV0KS4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2 .       "
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements regarding PM-Kisan scheme\n\t1. It is a Centrally Sponsored Scheme.\n\t2. Under the scheme, income support of Rs. 6,000 per year is provided to small and marginalfarmers.\n\t3. The state governments and Union Territory administration identify the farmers who are eligiblefor the scheme and share the list with the Centre.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWJvdXQgUE0tS2lzYW4gc2NoZW1lOiBJdCBpcyBhIGNlbnRyYWwgc2VjdG9yIHNjaGVtZSB3aXRoIDEwMCBwZXIgY2VudCBmdW5kaW5nIGZyb20gdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEuIFRoZSBzY2hlbWUgd2FzIGxhdW5jaGVkIGluIERlY2VtYmVyIDIwMTguIEhlbmNlIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVW5kZXIgdGhlIHNjaGVtZSwgaW5jb21lIHN1cHBvcnQgb2YgUnMuNiwwMDAgcGVyIHllYXIgaXMgcHJvdmlkZWQgdG8gc21hbGwgYW5kIG1hcmdpbmFsIGZhcm1lcnMuIFRoZSBzdGF0ZSBnb3Zlcm5tZW50cyBhbmQgVW5pb24gVGVycml0b3J5IGFkbWluaXN0cmF0aW9uIGlkZW50aWZ5IHRoZSBmYXJtZXJzIHdobyBhcmUgZWxpZ2libGUgZm9yIHRoZSBzY2hlbWUgYW5kIHNoYXJlIHRoZSBsaXN0IHdpdGggdGhlIENlbnRyZS4gQW1iaXQ6IFRoZSBTY2hlbWUgaW5pdGlhbGx5IHByb3ZpZGVkIGluY29tZSBzdXBwb3J0IHRvIGFsbCBTbWFsbCBhbmQgTWFyZ2luYWwgRmFybWVycycgZmFtaWxpZXMgYWNyb3NzIHRoZSBjb3VudHJ5LCBob2xkaW5nIGN1bHRpdmFibGUgbGFuZCB1cCB0byAyIGhlY3RhcmVzLiBJdHMgYW1iaXQgd2FzIGxhdGVyIGV4cGFuZGVkIHcuZS5mLiAwMS4wNi4yMDE5IHRvIGNvdmVyIGFsbCBmYXJtZXIgZmFtaWxpZXMgaW4gdGhlIGNvdW50cnkgaXJyZXNwZWN0aXZlIG9mIHRoZSBzaXplIG9mIHRoZWlyIGxhbmQgaG9sZGluZ3MuIEV4Y2VwdGlvbnM6IEFmZmx1ZW50IGZhcm1lcnMgaGF2ZSBiZWVuIGV4Y2x1ZGVkIGZyb20gdGhlIHNjaGVtZSBzdWNoIGFzIEluY29tZSBUYXggcGF5ZXJzIGluIGxhc3QgYXNzZXNzbWVudCB5ZWFyLCBwcm9mZXNzaW9uYWxzIGxpa2UgRG9jdG9ycywgRW5naW5lZXJzLCBMYXd5ZXJzLCBDaGFydGVyZWQgQWNjb3VudGFudHMgZXRjIGFuZCBwZW5zaW9uZXJzIGRyYXdpbmcgYXQgbGVhc3QgUnMuMTAsMDAwLy0gcGVyIG1vbnRoIChleGNsdWRpbmcgTVRTL0NsYXNzIElWL0dyb3VwIEQgZW1wbG95ZWVzKS4gaHR0cHM6Ly93d3cuaW5zaWdodHNvbmluZGlhLmNvbS8yMDIyLzA2LzAxL21pc3Npb24tMjAyMi1pbnNpZ2h0cy1kYWlseS1jdXJyZW50LWFmZmEgaXJzLXBpYi1zdW1tYXJ5LTAxLWp1bmUtMjAyMi8=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following statements regarding Liquid Nano Urea\n\t1. Increases crop productivity\n\t2. Reduces soil, water, and air pollution.\n\t3. Reduces the unbalanced and indiscriminate use of conventional urea.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBsaXF1aWQgbmFubyB1cmVhPyBVcmVhIGlzIGEgY2hlbWljYWwgbml0cm9nZW4gZmVydGlsaXplciwgd2hpdGUgaW4gY29sb3VyLCB3aGljaCBhcnRpZmljaWFsbHkgcHJvdmlkZXMgbml0cm9nZW4sIGEgbWFqb3IgbnV0cmllbnQgcmVxdWlyZWQgYnkgcGxhbnRzLiBMaXF1aWQgbmFubyB1cmVhIGlzIGVzc2VudGlhbGx5IHVyZWEgaW4gdGhlIGZvcm0gb2YgYSBuYW5vcGFydGljbGUuIExpcXVpZCBuYW5vIHVyZWEgdnMgaW1wb3J0ZWQvdXJlYSAtIFdoaWNoIGlzIGJldHRlcj8gQ29zdDogbGlxdWlkIG5hbm8gdXJlYSBpcyBjaGVhcGVyIChScyAyNDAgZm9yIGhhbGYgbGl0cmUgd2l0aG91dCBzdWJzaWR5OyBJbnRlcm5hdGlvbmFsIG1hcmtldCBwcmljZSBvZiBhIGJhZyBvZiB1cmVhIGlzIGJldHdlZW4gUnMgMyw1MDAgYW5kIFJzIDQsMDAwLiBBIGJvdHRsZSBvZiB0aGUgbmFubyB1cmVhIGNhbiBlZmZlY3RpdmVseSByZXBsYWNlIGF0IGxlYXN0IG9uZSBiYWcgb2YgdXJlYS4gQmVuZWZpdHMgZm9yIHRoZSBnb3Zlcm5tZW50OiBSZWR1Y2VzIGZlcnRpbGl6ZXIgc3Vic2lkeSBiaWxsIG9mIHRoZSBnb3Zlcm5tZW50LiBJbmRpYSBpcyBkZXBlbmRlbnQgb24gaW1wb3J0cyBvZiB0aGUgd2lkZWx5IHVzZWQgZmVydGlsaXplci4gVGhlIGVmZmljaWVuY3kgb2YgbGlxdWlkIG5hbm8gdXJlYSBjYW4gYmUgYXMgaGlnaCBhcyA4NS05MCBwZXIgY2VudCAoQ29udmVudGlvbmFsIHVyZWEgaGFzIGFuIGVmZmljaWVuY3kgb2YgYWJvdXQgMjUgcGVyIGNlbnQpLiBMaXF1aWQgbmFubyB1cmVhIGhhcyBhIHNoZWxmIGxpZmUgb2YgYSB5ZWFyLCBhbmQgZmFybWVycyBuZWVkIG5vdCBiZSB3b3JyaWVkIGFib3V0ICdjYWtpbmcnIHdoZW4gaXQgY29tZXMgaW4gY29udGFjdCB3aXRoIG1vaXN0dXJlLiBPdGhlciBiZW5lZml0cyBvZiBsaXF1aWQgbmFubyB1cmVhOiBGZXJ0aWxpemVycyBpbiBuYW5vIGZvcm0gcHJvdmlkZSBhIHRhcmdldGVkIHN1cHBseSBvZiBudXRyaWVudHMgdG8gY3JvcHMsIGFzIHRoZXkgYXJlIGFic29yYmVkIGJ5IHRoZSBzdG9tYXRhLCBwb3JlcyBmb3VuZCBvbiB0aGUgZXBpZGVybWlzIG9mIGxlYXZlcy4gUmVkdWNlcyB0aGUgdW5iYWxhbmNlZCBhbmQgaW5kaXNjcmltaW5hdGUgdXNlIG9mIGNvbnZlbnRpb25hbCB1cmVhLiBJbmNyZWFzZXMgY3JvcCBwcm9kdWN0aXZpdHkuIFJlZHVjZXMgc29pbCwgd2F0ZXIsIGFuZCBhaXIgcG9sbHV0aW9uLiBBbGwgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3QuIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8wMS9taXNzaW9uLTIwMjItaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gbWFyeS0wMS1qdW5lLTIwMjIvIC4gICAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1, 2 and 3",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 69,
      "question" : "Consider the following statements regarding Valley of Flowers\n\t1. It is located in Himachal Pradesh.\n\t2. It was declared a UNESCO World Heritage Site in 2005.\n\t3. It is located on a unique transition zone between the mountain ranges of the Zanskar and GreatHimalaya.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogJ1ZhbGxleSBvZiBGbG93ZXJzJzogVGhlIFZhbGxleSBvZiBGbG93ZXJzIHdhcyByZWNlbnRseSBvcGVuZWQgZm9yIHRvdXJpc3RzLiBJdCBpcyBsb2NhdGVkIGluIFV0dGFyYWtoYW5kLiBIZW5jZSBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIERlY2xhcmVkIGEgTmF0aW9uYWwgUGFyayBpbiAxOTgyLCB0aGUgVmFsbGV5IG9mIEZsb3dlcnMgc3RyZXRjaGVzIG92ZXIgYW4gZXhwYW5zZSBvZiA4Ny41MCBzcS4ga20uIEl0IHdhcyBkZWNsYXJlZCBhIFVORVNDTyBXb3JsZCBIZXJpdGFnZSBTaXRlIGluIDIwMDUuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgdmFsbGV5IHdhcyBhbiBhY2NpZGVudGFsIGRpc2NvdmVyeSBieSBhbiBhdmlkIEJyaXRpc2ggbW91bnRhaW5lZXIgYW5kIGEgYm90YW5pc3QsIEZyYW5rIFMgU215dGhlLCB3aGVuIGhlIHdhcyB0cmF2ZXJzaW5nIHRocm91Z2ggdGhlIHJlZ2lvbiBpbiAxOTMxLiBUaGUgdmFsbGV5IHRvZGF5IGlzIGhvbWUgdG8gb3ZlciA2MDAgZmxvd2VyaW5nIHNwZWNpZXMsIGluY2x1ZGluZyBzb21lIGV4b3RpYyB2YXJpZXRpZXMgbGlrZSBCcmFobWthbWFsLCB3aGljaCBpcyBhbHNvIHRoZSBzdGF0ZSBmbG93ZXIgb2YgVXR0YXJha2hhbmQuIEJsdWUgcG9wcHksIGRlc2NyaWJlZCBhcyB0aGUgUXVlZW4gb2YgRmxvd2VycywgY2FuIGFsc28gYmUgZm91bmQgaGVyZS4gVGhlIHJlZ2lvbiBhbHNvIGhhcyBhIHJpY2ggZmF1bmFsIGRpdmVyc2l0eSB3aXRoIHNwZWNpZXMgbGlrZSB0aGUgbGVvcGFyZCwgbXVzayBkZWVyLCBhbmQgYmx1ZSBzaGVlcC4gSXQgaXMgbG9jYXRlZCBvbiBhIHVuaXF1ZSB0cmFuc2l0aW9uIHpvbmUgYmV0d2VlbiB0aGUgbW91bnRhaW4gcmFuZ2VzIG9mIHRoZSBaYW5za2FyIGFuZCBHcmVhdCBIaW1hbGF5YS4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBwYXJrIGxpZXMgY29tcGxldGVseSBpbiB0aGUgdGVtcGVyYXRlIGFscGluZSB6b25lLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 70,
      "question" : "Consider the following statements regarding Aadhaar authentication\n\t1. Aadhaar authentication is necessary for availing subsidies, benefits and services that arefinanced from the Consolidated Fund of India.\n\t2. The requesting entity would have to obtain the consent of the individual before collectinghis/her identity..Which of the statements given above is/are not correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBkb2VzIHRoZSBsYXcgc2F5IG9uIHVzYWdlIG9mIEFhZGhhciBhbmQgaXRzIHNhZmV0eT8gVGhlIEFhZGhhYXIgKFRhcmdldGVkIERlbGl2ZXJ5IG9mIEZpbmFuY2lhbCBhbmQgT3RoZXIgU3Vic2lkaWVzIEJlbmVmaXRzIGFuZCBTZXJ2aWNlcykgQWN0LCAyMDE2IG1ha2VzIGl0IGNsZWFyIHRoYXQgQWFkaGFhciBhdXRoZW50aWNhdGlvbiBpcyBuZWNlc3NhcnkgZm9yIGF2YWlsaW5nIHN1YnNpZGllcywgYmVuZWZpdHMgYW5kIHNlcnZpY2VzIHRoYXQgYXJlIGZpbmFuY2VkIGZyb20gdGhlIENvbnNvbGlkYXRlZCBGdW5kIG9mIEluZGlhLiBUaGUgcmVxdWVzdGluZyBlbnRpdHkgd291bGQgaGF2ZSB0byBvYnRhaW4gdGhlIGNvbnNlbnQgb2YgdGhlIGluZGl2aWR1YWwgYmVmb3JlIGNvbGxlY3RpbmcgaGlzL2hlciBpZGVudGl0eSBhbmQgZW5zdXJlIHRoYXQgdGhlIGluZm9ybWF0aW9uIGlzIG9ubHkgdXNlZCBmb3IgYXV0aGVudGljYXRpb24gcHVycG9zZXMgb24gdGhlIENlbnRyYWwgSWRlbnRpdGllcyBEYXRhIFJlcG9zaXRvcnkgKENJRFIpLiBUaGUgQWN0IG1ha2VzIGl0IGNsZWFyIHRoYXQgY29uZmlkZW50aWFsaXR5IG5lZWRzIHRvIGJlIG1haW50YWluZWQgYW5kIHRoZSBhdXRoZW50aWNhdGVkIGluZm9ybWF0aW9uIGNhbm5vdCBiZSB1c2VkIGZvciBhbnl0aGluZyBvdGhlciB0aGFuIHRoZSBzcGVjaWZpZWQgcHVycG9zZS4gSWRlbnRpdHkgaW5mb3JtYXRpb24gb3IgYXV0aGVudGljYXRpb24gcmVjb3JkcyB3b3VsZCBvbmx5IGJlIGxpYWJsZSB0byBiZSBwcm9kdWNlZCBwdXJzdWFudCB0byBhbiBvcmRlciBvZiB0aGUgSGlnaCBDb3VydCBvciBTdXByZW1lIENvdXJ0LCBvciBieSBzb21lb25lIG9mIHRoZSBTZWNyZXRhcnkgcmFuayBvciBhYm92ZSBpbiB0aGUgaW50ZXJlc3Qgb2YgbmF0aW9uYWwgc2VjdXJpdHkuIEFib3V0IFVJREFJOiBUaGUgVUlEQUkgaXMgYSBzdGF0dXRvcnkgYXV0aG9yaXR5IGVzdGFibGlzaGVkIG9uIDEydGggSnVseSAyMDE2LiBQYXJlbnQgYm9keTogV29ya3MgdW5kZXIgdGhlIGp1cmlzZGljdGlvbiBvZiB0aGUgTWluaXN0cnkgb2YgRWxlY3Ryb25pY3MgYW5kIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kuIEluaXRpYWxseSwgdGhlIFVJREFJIHdhcyBzZXQgdXAgYnkgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgaW4gSmFudWFyeSAyMDA5LCBhcyBhbiBhdHRhY2hlZCBvZmZpY2UgdW5kZXIgdGhlIGFlZ2lzIG9mIHRoZSBQbGFubmluZyBDb21taXNzaW9uLiBNYW5kYXRlOiBUaGUgVUlEQUkgaXMgbWFuZGF0ZWQgdG8gYXNzaWduIGEgMTItZGlnaXQgdW5pcXVlIGlkZW50aWZpY2F0aW9uIChVSUQpIG51bWJlciAoQWFkaGFhcikgdG8gYWxsIHRoZSByZXNpZGVudHMgb2YgSW5kaWEuIFRvdGFsOiBBcyBvZiAzMXN0IE9jdG9iZXIgMjAyMSwgVUlEQUkgaGFkIGlzc3VlZCAxMzEuNjggY3JvcmUgQWFkaGFhciBudW1iZXJzLiBCb3RoIHRoZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiBodHRwczovL3d3dy5pbnNpZ2h0c29uaW5kaWEuY29tLzIwMjIvMDYvMDIvbWlzc2lvbi0yMDIyLWluc2lnaHRzLWRhaWx5LWN1cnJlbnQtYWZmYWlycy1waWItc3VtIG1hcnktMDItanVuZS0yMDIyLw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 71,
      "question" : "M142 HIMARS, sometime seen in the news, is developed by which of the nation-state?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBISU1BUlM/IFVuaXRlZCBTdGF0ZXMgd2lsbCBzZW5kIE0xNDIgSGlnaCBNb2JpbGl0eSBBcnRpbGxlcnkgUm9ja2V0IFN5c3RlbXMsIGFsc28ga25vd24gYXMgSElNQVJTLCB0byB3YXItdG9ybiBVa3JhaW5lLiBISU1BUlMgYXJlIG1lZGl1bS1yYW5nZSByb2NrZXQgc3lzdGVtcy4gSElNQVJTIGFyZSBhIGhpZ2gtdGVjaCwgbGlnaHR3ZWlnaHQgcm9ja2V0IGxhdW5jaGVyIHRoYXQgaXMgd2hlZWwgbW91bnRlZCwgZ2l2aW5nIGl0IG1vcmUgYWdpbGl0eSBhbmQgbWFub2V1dnJhYmlsaXR5IG9uIHRoZSBiYXR0bGVmaWVsZC4gUmFuZ2U6IGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8wMi9taXNzaW9uLTIwMjItaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gbWFyeS0wMi1qdW5lLTIwMjIv",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "United States of America",
        "option2" : "Russia",
        "option3" : "France",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements regarding Veer Savarkar\n\t1. Savarkar founded the Abhinav Bharat Society.\n\t2. He joined Tilak's Swaraj Party.\n\t3. Dr Babasaheb Ambedkar also compared his work to Lord Buddha.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hvIGlzIFZlZXIgU2F2YXJrYXI/IEJvcm4gb24gTWF5IDI4LCAxODgzIGluIEJoYWd1ciwgYSBjaXR5IGluIE1haGFyYXNodHJhJ3MgTmFzaGlrLiBOYXRpb25hbGlzbSBhbmQgc29jaWFsIHJlZm9ybXM6IEZvcm1lZCBhIHlvdXRoIG9yZ2FuaXphdGlvbi0gTWl0cmEgTWVsYSwgdGhpcyBvcmdhbml6YXRpb24gd2FzIHB1dCBpbnRvIHBsYWNlIHRvIGJyaW5nIGluIG5hdGlvbmFsIGFuZCByZXZvbHV0aW9uYXJ5IGlkZWFzLiBIZSB3YXMgYWdhaW5zdCBmb3JlaWduIGdvb2RzIGFuZCBwcm9wYWdhdGVkIHRoZSBpZGVhIG9mIFN3YWRlc2hpLiBIZSBjaGFtcGlvbmVkIGF0aGVpc20gYW5kIHJhdGlvbmFsaXR5IGFuZCBhbHNvIGRpc2FwcHJvdmVkIG9ydGhvZG94IEhpbmR1IGJlbGllZi4gSW4gZmFjdCwgaGUgZXZlbiBkaXNtaXNzZWQgY293IHdvcnNoaXAgYXMgc3VwZXJzdGl0aW91cy4gSGUgYWxzbyBXb3JrZWQgb24gYWJvbGlzaG1lbnQgb2YgdW50b3VjaGFiaWxpdHkgaW4gUmF0bmFnaXJpLiBEciBCYWJhc2FoZWIgQW1iZWRrYXIgYWxzbyBjb21wYXJlZCBoaXMgd29yayB0byBMb3JkIEJ1ZGRoYS4gVmluYXlhayBTYXZhcmthciB3YXMgYSBwcmVzaWRlbnQgb2YgSGluZHUgTWFoYXNhYmhhIGZyb20gMTkzNyB0byAxOTQzLiBXaGVuIGNvbmdyZXNzIG1pbmlzdHJpZXMgb2ZmZXJlZCByZXNpZ25hdGlvbiBvbiAyMm5kIG9jdCAxOTM5LCBIaW5kdSBtYWhhYXNhYmhhIHVuZGVyIGhpcyBsZWFkZXJzaGlwIGNvb3BlcmF0ZWQgd2l0aCBNdXNsaW0gbGVhZ3VlIHRvIGZvcm0gZ292ZXJubWVudCBpbiBwcm92aW5jZXMgbGlrZSBTaW5kaCwgQmVuZ2FsIGFuZCBOV0ZQLiBJbiBQdW5lLCBTYXZhcmthciBmb3VuZGVkIHRoZSAnQWJoaW5hdiBCaGFyYXQgU29jaWV0eScuIEhlIGpvaW5lZCBUaWxhaydzIFN3YXJhaiBQYXJ0eS4gSGUgZm91bmRlZCB0aGUgRnJlZSBJbmRpYSBTb2NpZXR5LiBUaGUgU29jaWV0eSBjZWxlYnJhdGVkIGltcG9ydGFudCBkYXRlcyBvbiB0aGUgSW5kaWFuIGNhbGVuZGFyIGluY2x1ZGluZyBmZXN0aXZhbHMsIGZyZWVkb20gbW92ZW1lbnQgbGFuZG1hcmtzLCBhbmQgd2FzIGRlZGljYXRlZCB0byBmdXJ0aGVyaW5nIGRpc2N1c3Npb24gYWJvdXQgSW5kaWFuIGZyZWVkb20uIEhlIGJlbGlldmVkIGFuZCBhZHZvY2F0ZWQgdGhlIHVzZSBvZiBhcm1zIHRvIGZyZWUgSW5kaWEgZnJvbSB0aGUgQnJpdGlzaCBhbmQgY3JlYXRlZCBhIG5ldHdvcmsgb2YgSW5kaWFucyBpbiBFbmdsYW5kLCBlcXVpcHBlZCB3aXRoIHdlYXBvbnMuIEltcG9ydGFudCB3b3JrczogQm9vay0gVGhlIEhpc3Rvcnkgb2YgdGhlIHdhciBvZiBJbmRpYW4gSW5kZXBlbmRlbmNlLjEuIEFuIGFybWVkIHJldm9sdCBhZ2FpbnN0IHRoZSBNb3JsZXktTWludG8gcmVmb3JtLjIuIFR3by1uYXRpb24gdGhlb3J5IGluIGhpcyBib29rICdIaW5kdXR2YScuMy4gQWxsIHRoZSBhYm92ZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0Lg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 73,
      "question" : "Consider the following statements regarding RFID Tag\n\t1. An RFID tag can communicate with a powered reader even when the tag is not powered.\n\t2. When printed on paper or sticky labels, barcodes are more susceptible to wear and breakage,which can affect their readability.\n\t3. Barcodes are simple and easy to copy or counterfeit, whereas RFID is more complicated anddifficult to replicate or counterfeit.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBSRklEPyBSYWRpbyBGcmVxdWVuY3kgSWRlbnRpZmljYXRpb24gaXMgYSB3aXJlbGVzcyB0cmFja2luZyBzeXN0ZW0gdGhhdCBjb25zaXN0cyBvZiB0YWdzIGFuZCByZWFkZXJzLiBSYWRpbyB3YXZlcyBhcmUgdXNlZCB0byBjb21tdW5pY2F0ZSBpbmZvcm1hdGlvbi9pZGVudGl0eSBvZiBvYmplY3RzIG9yIHBlb3BsZS4gVGhlIHRhZ3MgY2FuIGNhcnJ5IGVuY3J5cHRlZCBpbmZvcm1hdGlvbiwgc2VyaWFsIG51bWJlcnMgYW5kIHNob3J0IGRlc2NyaXB0aW9ucy4gVHlwZXMgLSBwYXNzaXZlIGFuZCBhY3RpdmUgUkZJRCB0YWdzOiBBY3RpdmUgUkZJRHMgdXNlIHRoZWlyIG93biBwb3dlciBzb3VyY2UsIG1vc3RseSBiYXR0ZXJpZXMuMS4gUGFzc2l2ZSBSRklEcyBhcmUgYWN0aXZhdGVkIHRocm91Z2ggdGhlIHJlYWRlciB1c2luZyB0aGUgZWxlY3Ryb21hZ25ldGljIGVuZXJneSBpdDIuIHRyYW5zbWl0cy4gLiAgICAgICAgIEhvdyBkbyB0aGV5IHdvcms/IFJGSUQgdGFncyB1c2UgYW4gaW50ZWdyYXRlZCBjaXJjdWl0IGFuZCBhbiBhbnRlbm5hIHRvIGNvbW11bmljYXRlIHdpdGggYSByZWFkZXIgdXNpbmcgcmFkaW8gd2F2ZXMgYXQgc2V2ZXJhbCBkaWZmZXJlbnQgZnJlcXVlbmNpZXMgLSBsb3cgZnJlcXVlbmN5IChMRiksIGhpZ2ggZnJlcXVlbmN5IChIRiksIGFuZCB1bHRyYS1oaWdoIGZyZXF1ZW5jeSAoVUhGKS4gVGhlIG1lc3NhZ2Ugc2VudCBiYWNrIGJ5IHRoZSB0YWcgaW4gZm9ybSBvciByYWRpbyB3YXZlcyBpcyB0cmFuc2xhdGVkIGludG8gZGF0YSBhbmQgYW5hbHlzZWQgYnkgdGhlIGhvc3QgY29tcHV0ZXIgc3lzdGVtLiBVbmxpa2UgQmFyY29kZXMsIFJGSURzIGRvIG5vdCByZXF1aXJlIGRpcmVjdCBsaW5lIG9mIHNpZ2h0IHRvIGlkZW50aWZ5IG9iamVjdHMuIFdoYXQgaXMgYSBiYXJjb2RlPyBBIGJhcmNvZGUgaXMgYSBwcmludGVkIHNlcmllcyBvZiBwYXJhbGxlbCBiYXJzIG9yIGxpbmVzIG9mIHZhcnlpbmcgd2lkdGggdXNlZCBmb3IgZW50ZXJpbmcgZGF0YSBpbnRvIGEgY29tcHV0ZXIgc3lzdGVtLiBUaGUgYmFycyBhcmUgYmxhY2sgb24gYSB3aGl0ZSBiYWNrZ3JvdW5kIGFuZCB2YXJ5IGluIHdpZHRoIGFuZCBxdWFudGl0eSBkZXBlbmRpbmcgb24gdGhlIGFwcGxpY2F0aW9uLiBUaGUgYmFycyByZXByZXNlbnQgdGhlIGJpbmFyeSBkaWdpdHMgemVybyBhbmQgb25lLCB3aGljaCByZXByZXNlbnQgdGhlIGRpZ2l0cyB6ZXJvIHRvIG5pbmUgcHJvY2Vzc2VkIGJ5IGEgZGlnaXRhbCBjb21wdXRlci4gVGhlc2UgYmFyY29kZXMgYXJlIHNjYW5uZWQgdXNpbmcgc3BlY2lhbCBvcHRpY2FsIHNjYW5uZXJzIGtub3duIGFzIGJhcmNvZGUgcmVhZGVycy4gVGhlIG1ham9yaXR5IG9mIHRoZXNlIGNvZGVzIHVzZSBvbmx5IHR3byBkaWZmZXJlbnQgd2lkdGhzIG9mIGJhcnMsIGhvd2V2ZXIgc29tZSB1c2UgZm91ci4gT25lIG9mIHRoZSBtb3N0IHdlbGwta25vd24gZXhhbXBsZXMgb2YgYSBiYXJjb2RlIGlzIHRoZSBRUiBjb2RlLiBEaWZmZXJlbmNlcyBiZXR3ZWVuIFJGSUQgYW5kIEJhcmNvZGU6IC4gICAgICAgICBSRklEIHVzZXMgcmFkaW8gd2F2ZXMgdG8gY29tbXVuaWNhdGUgdGhhdCBkbyBub3QgcmVxdWlyZSBsaW5lIG9mIHNpZ2h0IGluIG9yZGVyMS4gdG8gb2J0YWluIHRoZSBkYXRhOyBiYXJjb2RlcyB1c2UgbGlnaHQgdG8gcmVhZCB0aGUgYmxhY2stYW5kLXdoaXRlIHBhdHRlcm4gcHJpbnRlZCBvbiB0aGUgc3RpY2t5IHRhZy4gQW4gUkZJRCB0YWcgY2FuIGNvbW11bmljYXRlIHdpdGggYSBwb3dlcmVkIHJlYWRlciBldmVuIHdoZW4gdGhlIHRhZyBpcyBub3QyLiBwb3dlcmVkLiBXaGVuIHByaW50ZWQgb24gcGFwZXIgb3Igc3RpY2t5IGxhYmVscywgYmFyY29kZXMgYXJlIG1vcmUgc3VzY2VwdGlibGUgdG8gd2VhciBhbmQzLiBicmVha2FnZSwgd2hpY2ggY2FuIGFmZmVjdCB0aGVpciByZWFkYWJpbGl0eS4gUkZJRCB0YWdzIGFyZSBtb3JlIGR1cmFibGUgdGhhbiBiYXJjb2Rlcy4gSW4gY29udHJhc3QgdG8gYmFyY29kZSBzY2FubmVycywgUkZJRCBzY2FubmVycyBjYW4gcHJvY2VzcyBkb3plbnMgb2YgdGFncyBpbiBhIHNpbmdsZTQuIHNlY29uZC4gQmFyY29kZXMgYXJlIHNpbXBsZSBhbmQgZWFzeSB0byBjb3B5IG9yIGNvdW50ZXJmZWl0LCB3aGVyZWFzIFJGSUQgaXMgbW9yZTUuIGNvbXBsaWNhdGVkIGFuZCBkaWZmaWN1bHQgdG8gcmVwbGljYXRlIG9yIGNvdW50ZXJmZWl0LiBSRklEIHRhZ3MgYXJlIGV4cGVuc2l2ZSBjb21wYXJlZCB0byBiYXJjb2Rlcy42LiBBbGwgdGhlIGFib3ZlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8wNC9taXNzaW9uLTIwMjItaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gbWFyeS0wNC1qdW5lLTIwMjItMi8=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 74,
      "question" : "Turkey is surrounded by\n\t1. Black Sea\n\t2. Mediterranean Sea\n\t3. Syria\n\t4. Russia.Select the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAgIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8wNC9taXNzaW9uLTIwMjItaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gbWFyeS0wNC1qdW5lLTIwMjItMi8=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2, 3 and 4 only",
        "option3" : "1 and 2 only",
        "option4" : "1, 2 and 3 only"
      }
    },
    {
      "index" : 75,
      "question" : "Ribbon Weed, sometime seen in the news, is found in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUmliYm9uIHdlZWQ6IFNjaWVudGlmaWMgTmFtZTogUG9zaWRvbmlhIGF1c3RyYWxpcy4gSXQgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBwbGFudC4gSXQgaXMgYSBzZWFncmFzcyAxODAga20gaW4gbGVuZ3RoLiBJdCBoYXMgcmVjZW50bHkgYmVlbiBkaXNjb3ZlcmVkIG9mZiB0aGUgV2VzdCBDb2FzdCBvZiBBdXN0cmFsaWEgaW4gU2hhcmsgQmF5LiBUaGUgcGxhbnQgaXMgNCw1MDAgeWVhcnMgb2xkIGFuZCBoYXMgZG91YmxlIHRoZSBudW1iZXIgb2YgY2hyb21vc29tZXMgdGhhbiBvdGhlciBzaW1pbGFyIHBsYW50cy4gLiAgICAgICAgIEl0IGNhbiB1c3VhbGx5IGdyb3cgdG8gYXJvdW5kIDM1Y20gcGVyIHllYXIuIEl0IGNvdmVycyBhbiBhcmVhIG9mIDIwLDAwMCBoZWN0YXJlcy4gVGhlIG5leHQgb24gdGhlIHBvZGl1bSwgdGhlIHNlY29uZCBsYXJnZXN0IHBsYW50LCBpcyB0aGUgY2xvbmFsIGNvbG9ueSBvZiBhIHF1YWtpbmcgQXNwZW4gdHJlZSBpbiBVdGFoLCB3aGljaCBjb3ZlcnMgNDMuNiBoZWN0YXJlcy4gVGhlIGxhcmdlc3QgdHJlZSBpbiBJbmRpYSwgdGhlIEdyZWF0IEJhbnlhbiBpbiBIb3dyYWgncyBCb3RhbmljYWwgR2FyZGVuLCBjb3ZlcnMgMS40MSBoZWN0YXJlcy4gLiAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "West Coast of Australia",
        "option2" : "East Coast of Australia",
        "option3" : "West Coast of Africa",
        "option4" : "East Coast of Africa"
      }
    },
    {
      "index" : 76,
      "question" : "Consider the following statements regarding Interpol\n\t1. Interpol was conceived during the first International Criminal Police Congress in 1914.\n\t2. It is a law enforcement agency.\n\t3. National Central Bureau is the designated contact point for the Interpol.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBJbnRlcnBvbD8gVGhlIEludGVybmF0aW9uYWwgQ3JpbWluYWwgUG9saWNlIE9yZ2FuaXphdGlvbiwgY29tbW9ubHkga25vd24gYXMgSW50ZXJwb2wgaXMgYW4gaW50ZXJuYXRpb25hbCBvcmdhbml6YXRpb24gdGhhdCBmYWNpbGl0YXRlcyB3b3JsZHdpZGUgcG9saWNlIGNvb3BlcmF0aW9uIGFuZCBjcmltZSBjb250cm9sLiAuICAgICAgICAgSGVhZHF1YXJ0ZXJlZCBpbiBMeW9uLCBGcmFuY2UsIGl0IGlzIHRoZSB3b3JsZCdzIGxhcmdlc3QgaW50ZXJuYXRpb25hbCBwb2xpY2Ugb3JnYW5pemF0aW9uLCB3aXRoIHNldmVuIHJlZ2lvbmFsIGJ1cmVhdXMgd29ybGR3aWRlIGFuZCBhIE5hdGlvbmFsIENlbnRyYWwgQnVyZWF1IGluIGFsbCAxOTUgbWVtYmVyIHN0YXRlcy4gSW50ZXJwb2wgd2FzIGNvbmNlaXZlZCBkdXJpbmcgdGhlIGZpcnN0IEludGVybmF0aW9uYWwgQ3JpbWluYWwgUG9saWNlIENvbmdyZXNzIGluIDE5MTQsIHdoaWNoIGJyb3VnaHQgb2ZmaWNpYWxzIGZyb20gMjQgY291bnRyaWVzIHRvIGRpc2N1c3MgY29vcGVyYXRpb24gaW4gbGF3IGVuZm9yY2VtZW50LiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gSW50ZXJwb2wgcHJvdmlkZXMgaW52ZXN0aWdhdGl2ZSBzdXBwb3J0LCBleHBlcnRpc2UsIGFuZCB0cmFpbmluZyB0byBsYXcgZW5mb3JjZW1lbnQgd29ybGR3aWRlLCBmb2N1c2luZyBvbiB0aHJlZSBtYWpvciBhcmVhcyBvZiB0cmFuc25hdGlvbmFsIGNyaW1lOiB0ZXJyb3Jpc20sIGN5YmVyY3JpbWUsIGFuZCBvcmdhbml6ZWQgY3JpbWUuIEl0cyBicm9hZCBtYW5kYXRlIGNvdmVycyB2aXJ0dWFsbHkgZXZlcnkga2luZCBvZiBjcmltZSwgaW5jbHVkaW5nIGNyaW1lcyBhZ2FpbnN0IGh1bWFuaXR5LCBjaGlsZCBwb3Jub2dyYXBoeSwgZHJ1ZyB0cmFmZmlja2luZyBhbmQgcHJvZHVjdGlvbiwgcG9saXRpY2FsIGNvcnJ1cHRpb24sIGludGVsbGVjdHVhbCBwcm9wZXJ0eSBpbmZyaW5nZW1lbnQsIGFuZCB3aGl0ZS1jb2xsYXIgY3JpbWUuIFRoZSBhZ2VuY3kgYWxzbyBmYWNpbGl0YXRlcyBjb29wZXJhdGlvbiBhbW9uZyBuYXRpb25hbCBsYXcgZW5mb3JjZW1lbnQgaW5zdGl0dXRpb25zIHRocm91Z2ggY3JpbWluYWwgZGF0YWJhc2VzIGFuZCBjb21tdW5pY2F0aW9ucyBuZXR3b3Jrcy4gSG93ZXZlciwgSW50ZXJwb2wgaXMgaXRzZWxmIG5vdCBhIGxhdyBlbmZvcmNlbWVudCBhZ2VuY3kuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFdoYXQgaXMgdGhlIEludGVycG9sIEdlbmVyYWwgQXNzZW1ibHk/IEl0IGlzIEludGVycG9sJ3Mgc3VwcmVtZSBnb3Zlcm5pbmcgYm9keSwgYW5kIGNvbXByaXNlcyByZXByZXNlbnRhdGl2ZXMgZnJvbSBhbGwgaXRzIG1lbWJlciBjb3VudHJpZXMuIEl0IG1lZXRzIGFubnVhbGx5IGZvciBhIHNlc3Npb24gbGFzdGluZyBhcHByb3hpbWF0ZWx5IGZvdXIgZGF5cywgdG8gdm90ZSBvbiBhY3Rpdml0aWVzIGFuZCBwb2xpY3kuIEVhY2ggY291bnRyeSBpcyByZXByZXNlbnRlZCBieSBvbmUgb3IgbW9yZSBkZWxlZ2F0ZXMgYXQgdGhlIEFzc2VtYmx5LCB3aG8gYXJlIHR5cGljYWxseSBjaGllZnMgb2YgbGF3IGVuZm9yY2VtZW50IGFnZW5jaWVzLiBUaGUgQXNzZW1ibHkgYWxzbyBlbGVjdHMgdGhlIG1lbWJlcnMgb2YgdGhlIEludGVycG9sIEV4ZWN1dGl2ZSBDb21taXR0ZWUsIHRoZSBnb3Zlcm5pbmcgYm9keSB3aGljaCAncHJvdmlkZXMgZ3VpZGFuY2UgYW5kIGRpcmVjdGlvbiBpbiBiZXR3ZWVuIHNlc3Npb25zIG9mIHRoZSBBc3NlbWJseScuIEludGVycG9sIGFuZCBJbmRpYSAuICAgICAgICAgVGhlIENCSSBpcyB0aGUgZGVzaWduYXRlZCBub2RhbCBib2R5IGZvciB0aGUgSW50ZXJwb2wgaW4gSW5kaWEuIEl0IHdvcmtzIGluIGNsb3NlIGNvb3JkaW5hdGlvbiB3aXRoIHRoZSBJbnRlcnBvbCBhbmQgb3RoZXIgbWVtYmVyIGNvdW50cmllcyBmb3IgdGhlIHNoYXJpbmcgb2YgaW5wdXRzIHJlbGF0ZWQgdG8gdHJhbnMtbmF0aW9uYWwgY3JpbWVzIGFuZCBwZXJzb25zIHdhbnRlZCBieSBlbmZvcmNlbWVudCBhZ2VuY2llcyBhY3Jvc3MgdGhlIHdvcmxkLiBJbmRpYSBoYXMgYmVlbiBhIG1lbWJlciBzaW5jZSAxOTU2LiBMaWtlIGFueSBtZW1iZXIgbmF0aW9uLCBJbmRpYSBtYWludGFpbnMgYSBOYXRpb25hbCBDZW50cmFsIEJ1cmVhdSwgd2hpY2ggc2VydmVzIGFzIHRoZSBuYXRpb25hbCBwbGF0Zm9ybSBmb3IgY29vcGVyYXRpb24gYmV0d2VlbiBkb21lc3RpYyBsYXcgZW5mb3JjZW1lbnQgdW5pdHMgYW5kIHRoZSBpbnRlcm5hdGlvbmFsIHBvbGljZSBjb21tdW5pdHkuIFRoZSBDZW50cmFsIEJ1cmVhdSBvZiBJbnZlc3RpZ2F0aW9uIChDQkkpIGlzIGRlc2lnbmF0ZWQgYXMgdGhlIE5hdGlvbmFsIENlbnRyYWwgQnVyZWF1IG9mIEluZGlhLiBUaGUgTkNCIGlzIHRoZSBkZXNpZ25hdGVkIGNvbnRhY3QgcG9pbnQgZm9yIHRoZSBJbnRlcnBvbC4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluZGlhIGhhcyBjb2xsYWJvcmF0ZWQgd2l0aCB0aGUgSW50ZXJwb2wsIGluIHRhY2tsaW5nIGEgbXlyaWFkIG9mIG9yZ2FuaXNlZCBjcmltZXMgc3VjaCBhcyBwb2FjaGluZywgd2lsZGxpZmUgdHJhZmZpY2tpbmcsIHNwdXJpb3VzIGRydWdzLCBhbmQgZmFrZSBtZWRpY2luZSByYWNrZXRzLCBhbW9uZyBvdGhlcnMuIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8wNi9taXNzaW9uLTIwMjItaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gbWFyeS0wNC1qdW5lLTIwMjItMy8=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements regarding Hydrogen Fuel\n\t1. It is a zero-emission fuel which can be burned with oxygen.\n\t2. It can be used in fuel cells or internal combustion engines.\n\t3. Hydrogen is the most abundant element in the universe.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSHlkcm9nZW4gZnVlbCBpcyBhIHplcm8tZW1pc3Npb24gZnVlbCBidXJuZWQgd2l0aCBveHlnZW4uIEl0IGNhbiBiZSB1c2VkIGluIGZ1ZWwgY2VsbHMgb3IgaW50ZXJuYWwgY29tYnVzdGlvbiBlbmdpbmVzLiBJdCBpcyBhbHNvIHVzZWQgYXMgYSBmdWVsIGZvciBzcGFjZWNyYWZ0IHByb3B1bHNpb24uIEh5ZHJvZ2VuIGlzIHRoZSBtb3N0IGFidW5kYW50IGVsZW1lbnQgaW4gdGhlIHVuaXZlcnNlLiBUaGUgc3VuIGFuZCBvdGhlciBzdGFycyBhcmUgY29tcG9zZWQgbGFyZ2VseSBvZiBoeWRyb2dlbi4gQmVuZWZpdHMgb2YgaHlkcm9nZW4gZnVlbCBJdCBpcyByZWFkaWx5IGF2YWlsYWJsZS4gSXQgZG9lc24ndCBwcm9kdWNlIGhhcm1mdWwgZW1pc3Npb25zLiBJdCBpcyBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgYW5kIGlzIGEgbm9uLXRveGljIHN1YnN0YW5jZS4gSXQgY2FuIGJlIHVzZWQgYXMgZnVlbCBpbiByb2NrZXRzLiBIeWRyb2dlbiBpcyB0aHJlZSB0aW1lcyBhcyBwb3dlcmZ1bCBhcyBnYXNvbGluZSBhbmQgb3RoZXIgZm9zc2lsIGZ1ZWxzLiBJdCBpcyByZW5ld2FibGUgYW5kIC4gICAgICAgICBjYW4gYmUgcHJvZHVjZWQgYWdhaW4gYW5kIGFnYWluLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "3 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 78,
      "question" : "Consider the following statements regarding Ethanol\n\t1. In India, ethanol is produced from sugarcane only\n\t2. It allows the engine to more completely combust the fuel.\n\t3. Ethanol Blended Petrol (EBP) Programme has been implemented by Ministry of New andRenewable Energy.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRXRoYW5vbDogRXRoYW5vbCBpcyBiYXNpY2FsbHkgYWxjb2hvbCBvZiA5OSUtcGx1cyBwdXJpdHksIHdoaWNoIGNhbiBiZSB1c2VkIGZvciBibGVuZGluZyB3aXRoIHBldHJvbC4gRXRoYW5vbCwgYW4gYW5oeWRyb3VzIGV0aHlsIGFsY29ob2wgaGF2aW5nIGNoZW1pY2FsIGZvcm11bGEgb2YgQzJINU9ILCBjYW4gYmUgcHJvZHVjZWQgZnJvbSBzdWdhcmNhbmUsIG1haXplLCB3aGVhdCwgZXRjIHdoaWNoIGFyZSBoYXZpbmcgaGlnaCBzdGFyY2ggY29udGVudC4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gSW5kaWEsIGV0aGFub2wgaXMgbWFpbmx5IHByb2R1Y2VkIGZyb20gc3VnYXJjYW5lIG1vbGFzc2VzIGJ5IGZlcm1lbnRhdGlvbiBwcm9jZXNzLiBJdCBhbGxvd3MgdGhlIGVuZ2luZSB0byBtb3JlIGNvbXBsZXRlbHkgY29tYnVzdCB0aGUgZnVlbCwgcmVzdWx0aW5nIGluIGZld2VyIGVtaXNzaW9ucyBhbmQgdGhlcmVieSByZWR1Y2luZyB0aGUgb2NjdXJyZW5jZSBvZiBlbnZpcm9ubWVudGFsIHBvbGx1dGlvbi4gRXRoYW5vbCBCbGVuZGVkIFBldHJvbCAoRUJQKSBQcm9ncmFtbWUgSW1wbGVtZW50ZWQgYnkgdGhlIE1pbmlzdHJ5IG9mIHBldHJvbGV1bSBhbmQgbmF0dXJhbCBnYXMsIGV4Y2VwdCBpbiBBJk4gSXNsYW5kIHdoZXJlIE9pbCBNYXJrZXRpbmcgQ29tcGFuaWVzIChPTUNzKSBpcyBpbXBsZW1lbnRpbmcgaXQuIEhlbmNlLCBzdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEJlbmVmaXRzIG9mIGV0aGFub2wgYmxlbmRpbmc6IFJlZHVjdGlvbiBpbiBpbXBvcnQgZGVwZW5kZW5jeS4gU3VwcG9ydCB0byBhZ3JpY3VsdHVyYWwgc2VjdG9yLiBFbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgZnVlbC4gQWRkaXRpb25hbCBpbmNvbWUgdG8gZmFybWVycy4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only .       ",
        "option2" : "2 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 79,
      "question" : "Consider the following statements\n\t1. Bituminous is the best quality of coal with the highest calorific value.\n\t2. China and United States are the leading producers of coal in the World.\n\t3. Coal gasification is a process in which coal is completely oxidized with air, oxygen, steam, orcarbon dioxide to form a fuel gas.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29hbDogSXQgb3JpZ2luYXRlcyBmcm9tIG9yZ2FuaWMgbWF0dGVyIHdvb2QsIHdoZW4gbGFyZ2UgdHJhY3RzIG9mIGZvcmVzdHMgYXJlIGJ1cmllZCB1bmRlciBzZWRpbWVudHMsIHdvb2QgaXMgYnVybnQgYW5kIGRlY29tcG9zZWQgZHVlIHRvIGhlYXQgZnJvbSBiZWxvdyBhbmQgcHJlc3N1cmUgZnJvbSBhYm92ZS4gVGhpcyBwaGVub21lbm9uIG1ha2VzIGNvYWwgYnV0IHRha2VzIGNlbnR1cmllcyB0byBjb21wbGV0ZS4gQ2xhc3NpZmljYXRpb24gb2YgQ29hbCAob24gdGhlIGJhc2lzIG9mIGNhcmJvbiBjb250ZW50IGFuZCB0aW1lIHBlcmlvZCk6IEFudGhyYWNpdGU6IEl0IGlzIHRoZSBiZXN0IHF1YWxpdHkgb2YgY29hbCB3aXRoIHRoZSBoaWdoZXN0IGNhbG9yaWZpYyB2YWx1ZSBhbmQgY2FycmllcyA4MCB0byA5NSUgY2FyYm9uIGNvbnRlbnQuIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEl0IGlnbml0ZXMgc2xvd2x5IHdpdGggYSBibHVlIGZsYW1lIGFuZCBpcyBmb3VuZCBpbiBzbWFsbCBxdWFudGl0aWVzIGluIEphbW11IGFuZDEuIEthc2htaXIuIEJpdHVtaW5vdXM6IEl0IGhhcyBhIGxvdyBsZXZlbCBvZiBtb2lzdHVyZSBjb250ZW50IHdpdGggNjAgdG8gODAlIG9mIGNhcmJvbiBjb250ZW50IGFuZCBoYXMxLiBhIGhpZ2ggY2Fsb3JpZmljIHZhbHVlLiBKaGFya2hhbmQsIFdlc3QgQmVuZ2FsLCBPZGlzaGEsIENoaGF0dGlzZ2FyaCwgYW5kIE1hZGh5YSBQcmFkZXNoIGhhdmUyLiBkZXBvc2l0cyBvZiBCaXR1bWlub3VzLiBMaWduaXRlOiBJdCBjYXJyaWVzIDQwIHRvIDU1JSBjYXJib24gY29udGVudCBhbmQgaXMgb2Z0ZW4gYnJvd24gaW4gY29sb3VyIHdpdGggaGlnaCBtb2lzdHVyZTEuIGNvbnRlbnQgdGh1cywgZ2l2ZXMgc21va2Ugd2hlbiBidXJudC4gUmFqYXN0aGFuLCBMYWtoaW1wdXIgKEFzc2FtKSwgYW5kIFRhbWlsIE5hZHUgaGF2ZSBkZXBvc2l0cyBvZiBMaWduaXRlLjIuIFBlYXQ6IEl0IGlzIHRoZSBmaXJzdCBzdGFnZSBvZiB0cmFuc2Zvcm1hdGlvbiBmcm9tIHdvb2QgdG8gY29hbCB3aXRoIGxvdyBjYWxvcmlmaWMgdmFsdWUgYW5kIGxlc3MgdGhhbiA0MCUgY2FyYm9uIGNvbnRlbnQuIC4gICAgICAgICBUaGUgdG9wIDUgU3RhdGVzIGluIHRlcm1zIG9mIHRvdGFsIGNvYWwgcmVzZXJ2ZXMgaW4gSW5kaWEgYXJlOiBKaGFya2hhbmQgPiBPZGlzaGEgPiBDaGhhdHRpc2dhcmggPiBXZXN0IEJlbmdhbCA+IE1hZGh5YSBQcmFkZXNoLiBUaGUgbGVhZGluZyBjb2FsIHByb2R1Y2VycyBvZiB0aGUgd29ybGQgaW5jbHVkZSBDaGluYSwgVVMsIEF1c3RyYWxpYSwgSW5kb25lc2lhLCBJbmRpYS4gSGVuY2Ugb3B0aW9uIDIgaXMgY29ycmVjdCBDb2FsIEJsZW5kaW5nOiBDb2FsIGJsZW5kaW5nIGlzIGEgcHJhY3RpY2UgdGhhdCBoYXMgYmVlbiB1bmRlcnRha2VuIGJ5IG1hbnkgcG93ZXIgc3RhdGlvbnMgdG8gcHJvdmlkZSBhIGNvbnNpc3RlbnQgZmVlZHN0b2NrIG9mIGZ1ZWwgZm9yIHBvd2VyIGdlbmVyYXRpb24gb3IgdG8gbWVldCBkaWZmZXJlbnQgcmVxdWlyZW1lbnRzIHN1Y2ggYXMgc29sdmluZyB0cmFuc3BvcnRhdGlvbiBwcm9ibGVtcywgZnVlbCBjb3N0LCByZWR1Y2luZyBzbGFnZ2luZywgYW5kIFNPeCBlbWlzc2lvbi4gTG93LWdyYWRlIChoaWdoIGFzaCkgY29hbCBjYW4gYmUgbWl4ZWQgd2l0aCBoaWdoZXItZ3JhZGUgKGltcG9ydGVkKSBjb2FsIHdpdGhvdXQgZGV0ZXJpb3JhdGlvbiBpbiB0aGVybWFsIHBlcmZvcm1hbmNlIG9mIHRoZSBib2lsZXIsIHRodXMgcmVkdWNpbmcgdGhlIGNvc3Qgb2YgZ2VuZXJhdGlvbi4gQ29hbCBHYXNpZmljYXRpb246IENvYWwgZ2FzaWZpY2F0aW9uIGlzIGEgcHJvY2VzcyBpbiB3aGljaCBjb2FsIGlzIHBhcnRpYWxseSBveGlkaXplZCB3aXRoIGFpciwgb3h5Z2VuLCAuICAgICAgICAgc3RlYW0sIG9yIGNhcmJvbiBkaW94aWRlIHRvIGZvcm0gYSBmdWVsIGdhcy4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhpcyBnYXMgaXMgdGhlbiB1c2VkIGluc3RlYWQgb2YgcGlwZWQgbmF0dXJhbCBnYXMsIG1ldGhhbmUsIGFuZCBvdGhlcnMgZm9yIGRlcml2aW5nIGVuZXJneS4gSW4tc2l0dSBnYXNpZmljYXRpb24gb2YgY29hbCAtIG9yIFVuZGVyZ3JvdW5kIENvYWwgR2FzaWZpY2F0aW9uIChVQ0cpIC0gaXMgdGhlIHRlY2huaXF1ZSBvZiBjb252ZXJ0aW5nIGNvYWwgaW50byBnYXMgd2hpbGUgaXQgaXMgc3RpbGwgaW4gdGhlIHNlYW0gYW5kIHRoZW4gZXh0cmFjdGluZyBpdCB0aHJvdWdoIHdlbGxzLiBJdCBwcm9kdWNlcyBTeW5nYXMgd2hpY2ggaXMgYSBtaXh0dXJlIGNvbnNpc3RpbmcgcHJpbWFyaWx5IG9mIG1ldGhhbmUgKENINCksIGNhcmJvbiBtb25veGlkZSAoQ08pLCBoeWRyb2dlbiAoSDIpLCBjYXJib24gZGlveGlkZSAoQ08yKSwgYW5kIHdhdGVyIHZhcG91ciAoSDJPKS4gU3luZ2FzIGNhbiBiZSB1c2VkIHRvIHByb2R1Y2UgYSB3aWRlIHJhbmdlIG9mIGZlcnRpbGl6ZXJzLCBmdWVscywgc29sdmVudCwgYW5kIHN5bnRoZXRpYyBtYXRlcmlhbHMuICBodHRwczovL3d3dy5pbnNpZ2h0c29uaW5kaWEuY29tLzIwMjIvMDYvMDYvbWlzc2lvbi0yMDIyLWluc2lnaHRzLWRhaWx5LWN1cnJlbnQtYWZmIGFpcnMtcGliLXN1bW1hcnktMDQtanVuZS0yMDIyLTMv",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "1 and 2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 80,
      "question" : "Sennaspectabilis, Mikaniamicrantha and Lantana camera, sometimes seen in thenews, is",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2VubmFzcGVjdGFiaWxpcywgTWlrYW5pYW1pY3JhbnRoYSBhbmQgTGFudGFuYSBjYW1lcmEgYXJlIGludmFzaXZlIHNwZWNpZXMgdGhyZWF0aW5nIGJpb2RpdmVyc2l0eSBpbiBJbmRpYS4gTWFqb3IgYWxpZW4gcGxhbnQgc3BlY2llcyBsaWtlIFNlbm5hc3BlY3RhYmlsaXMsIEh5cG9lc3Rlc3BoeWxsb3N0YWNoeWEsIE1hZXNvcHNpc2VtaW5paSwgTWlrYW5pYW1pY3JhbnRoYSwgTGFudGFuYSBjYW1hcmEsIEV1cGF0b3JpdW0gY2FubmFiaW51bSBhbmQgb3RoZXJzIGludmFkZSBmb3Jlc3QgcmVnaW9ucyBpbmNsdWRpbmcgd2lsZGxpZmUgc2FuY3R1YXJpZXMuIEludmFzaW9uIGJ5IGFsaWVuIHBsYW50cyBkaXJlY3RseSBhZmZlY3QgdGhlIGdlcm1pbmF0aW9uIGFuZCBzdXJ2aXZhbCBvZiBsb2NhbCBzcGVjaWVzLCBkYW1hZ2UgdGhlIHF1YWxpdHkgb2Ygc29pbCBhbmQgYWZmZWN0IHVuZGVyZ3JvdW5kIHdhdGVyIGF2YWlsYWJpbGl0eS4gVGhleSBjaGFuZ2UgdGhlIGVjb3N5c3RlbSBhbmQgaW50cnVkZSBpbnRvIHRoZSBmb29kIGNoYWluLCB3aXRoIGhhcm1mdWwgZWZmZWN0IG9uIGFuaW1hbHMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Species introduced by government in desert areas of Rajasthan",
        "option2" : "Plant species that arrest ground water depletion in drought prone areas",
        "option3" : "Invasive species that are threating local species in India.",
        "option4" : "None of the statements given (a), (b) and (c) are correct"
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following statements\n\t1. Mughals were descendants of Genghis Khan.\n\t2. The Mughals did not like to be called Mughal or Mongol.\n\t3. They celebrated their genealogy pictorially, each ruler getting a picture made of Timur andhimself.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hvIHdlcmUgdGhlIE11Z2hhbHM/IFRoZSBNdWdoYWxzIHdlcmUgZGVzY2VuZGFudHMgb2YgdHdvIGdyZWF0IGxpbmVhZ2VzIG9mIHJ1bGVycy4gRnJvbSB0aGVpciBtb3RoZXIncyBzaWRlIHRoZXkgd2VyZSBkZXNjZW5kYW50cyBvZiBHZW5naGlzIEtoYW4gKGRpZWQgMTIyNyksIHRoZSBNb25nb2wgcnVsZXIgd2hvIHJ1bGVkIG92ZXIgcGFydHMgb2YgQ2hpbmEgYW5kIENlbnRyYWwgQXNpYS4gRnJvbSB0aGVpciBmYXRoZXIncyBzaWRlIHRoZXkgd2VyZSB0aGUgc3VjY2Vzc29ycyBvZiBUaW11ciAoZGllZCAxNDA0KSwgdGhlIHJ1bGVyIG9mIElyYW4sIElyYXEgYW5kIG1vZGVybi1kYXkgVHVya2V5LiBIb3dldmVyLCB0aGUgTXVnaGFscyBkaWQgbm90IGxpa2UgdG8gYmUgY2FsbGVkIE11Z2hhbCBvciBNb25nb2wuIFRoaXMgd2FzIGJlY2F1c2UgR2VuZ2hpcyBLaGFuJ3MgbWVtb3J5IHdhcyBhc3NvY2lhdGVkIHdpdGggdGhlIG1hc3NhY3JlIG9mIGlubnVtZXJhYmxlIHBlb3BsZS4gSXQgd2FzIGFsc28gbGlua2VkIHdpdGggdGhlIFV6YmVncywgdGhlaXIgTW9uZ29sIGNvbXBldGl0b3JzLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIE11Z2hhbHMgd2VyZSAgcHJvdWQgb2YgdGhlaXIgVGltdXJpZCBhbmNlc3RyeSwgbm90IGxlYXN0IG9mIGFsbCBiZWNhdXNlIHRoZWlyIGdyZWF0IGFuY2VzdG9yIGhhZCBjYXB0dXJlZCBEZWxoaSBpbiAxMzk4LiBUaGV5IGNlbGVicmF0ZWQgdGhlaXIgZ2VuZWFsb2d5IHBpY3RvcmlhbGx5LCBlYWNoIHJ1bGVyIGdldHRpbmcgYSBwaWN0dXJlIG1hZGUgb2YgVGltdXIgYW5kIGhpbXNlbGYuIEFsbCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmV0LiBTb3VyY2U6IE5DRVJUIEJvb2sgZm9yIENsYXNzIDcgSGlzdG9yeQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements regarding Babur\n\t1. Babur, the first Mughal emperor succeeded to the throne of Ferghana in 1494 when he was only12 years old.\n\t2. He was forced to leave his ancestral throne due to the invasion of another Mongol group, theUzbegs.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gQmFidXIsIHRoZSBmaXJzdCBNdWdoYWwgZW1wZXJvciAoMTUyNi0gMTUzMCksIHN1Y2NlZWRlZCB0byB0aGUgdGhyb25lIG9mIEZlcmdoYW5hIGluIDE0OTQgd2hlbiBoZSB3YXMgb25seSAxMiB5ZWFycyBvbGQuIEhlIHdhcyBmb3JjZWQgdG8gbGVhdmUgaGlzIGFuY2VzdHJhbCB0aHJvbmUgZHVlIHRvIHRoZSBpbnZhc2lvbiBvZiBhbm90aGVyIE1vbmdvbCBncm91cCwgdGhlIFV6YmVncy4gQWZ0ZXIgeWVhcnMgb2Ygd2FuZGVyaW5nIGhlIHNlaXplZCBLYWJ1bCBpbiAxNTA0LiBJbiAxNTI2IGhlIGRlZmVhdGVkIHRoZSBTdWx0YW4gb2YgRGVsaGksIElicmFoaW0gTG9kaSwgYXQgUGFuaXBhdCBhbmQgY2FwdHVyZWQgRGVsaGkgYW5kIEFncmEu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only .       ",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following statements\n\t1. Gun powder technology was brought to India for warfare in the 14th century.\n\t2. Fire arms were used for the first time in regions such as Gujarat, Malwa and Deccan, and wasused by Babur in early 16th century.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following statements\n\t1. The ambitions of his brother Mirza Kamran weakened Humayun's cause against Afghancompetitors.\n\t2. In Iran Humayun received help from the Safavid Shah.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 85,
      "question" : "Consider the following statements\n\t1. The mansabdar's military responsibilities required him to maintain a specified number of sawaror cavalrymen.\n\t2. Most mansabdars did reside in or administer their jagirs.\n\t3. There was also a huge increase in the number of mansabdars during AurangzebWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWFuc2FiZGFycyBhbmQgSmFnaXJkYXJzIEFzIHRoZSBlbXBpcmUgZXhwYW5kZWQgdG8gZW5jb21wYXNzIGRpZmZlcmVudCByZWdpb25zIHRoZSBNdWdoYWxzIHJlY3J1aXRlZCBkaXZlcnNlIGJvZGllcyBvZiBwZW9wbGUuIEZyb20gYSBzbWFsbCBudWNsZXVzIG9mIFR1cmtpc2ggbm9ibGVzIC4gICAgICAgICAoVHVyYW5pcykgdGhleSBleHBhbmRlZCB0byBpbmNsdWRlIElyYW5pYW5zLCBJbmRpYW4gTXVzbGltcywgQWZnaGFucywgUmFqcHV0cywgTWFyYXRoYXMgYW5kIG90aGVyIGdyb3Vwcy4gVGhvc2Ugd2hvIGpvaW5lZCBNdWdoYWwgc2VydmljZSB3ZXJlIGVucm9sbGVkIGFzIG1hbnNhYmRhcnMuIFRoZSB0ZXJtIG1hbnNhYmRhciByZWZlcnMgdG8gYW4gaW5kaXZpZHVhbCB3aG8gaG9sZHMgYSBtYW5zYWIsIG1lYW5pbmcgYSBwb3NpdGlvbiBvciByYW5rLiBJdCB3YXMgYSBncmFkaW5nIHN5c3RlbSB1c2VkIGJ5IHRoZSBNdWdoYWxzIHRvIGZpeCAoMSkgcmFuaywgKDIpIHNhbGFyeSBhbmQgKDMpIG1pbGl0YXJ5IHJlc3BvbnNpYmlsaXRpZXMuIFJhbmsgYW5kIHNhbGFyeSB3ZXJlIGRldGVybWluZWQgYnkgYSBudW1lcmljYWwgdmFsdWUgY2FsbGVkIHphdC4gVGhlIGhpZ2hlciB0aGUgemF0LCB0aGUgbW9yZSBwcmVzdGlnaW91cyB3YXMgdGhlIG5vYmxlJ3MgcG9zaXRpb24gaW4gY291cnQgYW5kIHRoZSBsYXJnZXIgaGlzIHNhbGFyeS4gVGhlIG1hbnNhYmRhcidzIG1pbGl0YXJ5IHJlc3BvbnNpYmlsaXRpZXMgcmVxdWlyZWQgaGltIHRvIG1haW50YWluIGEgc3BlY2lmaWVkIG51bWJlciBvZiBzYXdhciBvciBjYXZhbHJ5bWVuLiBUaGUgbWFuc2FiZGFyIGJyb3VnaHQgaGlzIGNhdmFscnltZW4gZm9yIHJldmlldywgZ290IHRoZW0gcmVnaXN0ZXJlZCwgdGhlaXIgaG9yc2VzIGJyYW5kZWQgYW5kIHRoZW4gcmVjZWl2ZWQgbW9uZXkgdG8gcGF5IHRoZW0gYXMgc2FsYXJ5LiBNYW5zYWJkYXJzIHJlY2VpdmVkIHRoZWlyIHNhbGFyaWVzIGFzIHJldmVudWUgYXNzaWdubWVudHMgY2FsbGVkIGphZ2lycyB3aGljaCB3ZXJlIHNvbWV3aGF0IGxpa2UgaXF0YXMuIEJ1dCB1bmxpa2UgbXVxdGlzLCBtb3N0IG1hbnNhYmRhcnMgZGlkIG5vdCBhY3R1YWxseSByZXNpZGUgaW4gb3IgYWRtaW5pc3RlciB0aGVpciBqYWdpcnMuIFRoZXkgb25seSBoYWQgcmlnaHRzIHRvIHRoZSByZXZlbnVlIG9mIHRoZWlyIGFzc2lnbm1lbnRzIHdoaWNoIHdhcyBjb2xsZWN0ZWQgZm9yIHRoZW0gYnkgdGhlaXIgc2VydmFudHMgd2hpbGUgdGhlIG1hbnNhYmRhcnMgdGhlbXNlbHZlcyBzZXJ2ZWQgaW4gc29tZSBvdGhlciBwYXJ0IG9mIHRoZSBjb3VudHJ5LiBIZW5jZSBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEluIEFrYmFyJ3MgcmVpZ24gdGhlc2UgamFnaXJzIHdlcmUgY2FyZWZ1bGx5IGFzc2Vzc2VkIHNvIHRoYXQgdGhlaXIgcmV2ZW51ZXMgd2VyZSByb3VnaGx5IGVxdWFsIHRvIHRoZSBzYWxhcnkgb2YgdGhlIG1hbnNhYmRhci4gQnkgQXVyYW5nemViJ3MgcmVpZ24gdGhpcyB3YXMgbm8gbG9uZ2VyIHRoZSBjYXNlIGFuZCB0aGUgYWN0dWFsIHJldmVudWUgY29sbGVjdGVkIHdhcyBvZnRlbiBsZXNzIHRoYW4gdGhlIGdyYW50ZWQgc3VtLiBUaGVyZSB3YXMgYWxzbyBhIGh1Z2UgaW5jcmVhc2UgaW4gdGhlIG51bWJlciBvZiBtYW5zYWJkYXJzLCB3aGljaCBtZWFudCBhIGxvbmcgd2FpdCBiZWZvcmUgdGhleSByZWNlaXZlZCBhIGphZ2lyLiBIZW5jZSBvcHRpb24gMyBpcyBjb3JyZWN0LiBUaGVzZSBhbmQgb3RoZXIgZmFjdG9ycyBjcmVhdGVkIGEgc2hvcnRhZ2UgaW4gdGhlIG51bWJlciBvZiBqYWdpcnMuIEFzIGEgcmVzdWx0LCBtYW55IGphZ2lyZGFycyB0cmllZCB0byBleHRyYWN0IGFzIG11Y2ggcmV2ZW51ZSBhcyBwb3NzaWJsZSB3aGlsZSB0aGV5IGhhZCBhIGphZ2lyLiBBdXJhbmd6ZWIgd2FzIHVuYWJsZSB0byBjb250cm9sIHRoZXNlIGRldmVsb3BtZW50cyBpbiB0aGUgbGFzdCB5ZWFycyBvZiBoaXMgcmVpZ24gYW5kIHRoZSBwZWFzYW50cnkgdGhlcmVmb3JlIHN1ZmZlcmVkIHRyZW1lbmRvdXNseS4gU291cmNlOiBDbGFzcyA3dGggSGlzdG9yeSBOQ0VSVA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements\n\t1. The administrative and military efficiency of the Mughal Empire led to great economic andcommercial prosperity.\n\t2. The Mughal emperors and their mansabdars spent a great deal of their income on salaries andgoods..\n\t3. The scale of revenue collection left very little for investment in the hands of the primaryproducers - the peasant and the artisan.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBUaGUgTXVnaGFsIEVtcGlyZSBpbiB0aGUgU2V2ZW50ZWVudGggQ2VudHVyeSBhbmQgQWZ0ZXIgVGhlIGFkbWluaXN0cmF0aXZlIGFuZCBtaWxpdGFyeSBlZmZpY2llbmN5IG9mIHRoZSBNdWdoYWwgRW1waXJlIGxlZCB0byBncmVhdCBlY29ub21pYyBhbmQgY29tbWVyY2lhbCBwcm9zcGVyaXR5LiBJbnRlcm5hdGlvbmFsIHRyYXZlbGxlcnMgZGVzY3JpYmVkIGl0IGFzIHRoZSBmYWJsZWQgbGFuZCBvZiB3ZWFsdGguIEJ1dCB0aGVzZSBzYW1lIHZpc2l0b3JzIHdlcmUgYWxzbyBhcHBhbGxlZCBhdCB0aGUgc3RhdGUgb2YgcG92ZXJ0eSB0aGF0IGV4aXN0ZWQgc2lkZSBieSBzaWRlIHdpdGggdGhlIGdyZWF0ZXN0IG9wdWxlbmNlLiBUaGUgaW5lcXVhbGl0aWVzIHdlcmUgZ2xhcmluZy4gRG9jdW1lbnRzIGZyb20gdGhlIHR3ZW50aWV0aCB5ZWFyIG9mIFNoYWggSmFoYW4ncyByZWlnbiBpbmZvcm0gdXMgdGhhdCB0aGUgaGlnaGVzdC1yYW5raW5nIG1hbnNhYmRhcnMgd2VyZSBvbmx5IDQ0NSBpbiBudW1iZXIgb3V0IG9mIGEgdG90YWwgb2YgOCwwMDAuIFRoaXMgc21hbGwgbnVtYmVyIC0gYSBtZXJlIDUuNiBwZXIgY2VudCBvZiB0aGUgdG90YWwgbnVtYmVyIG9mIG1hbnNhYmRhcnMgLSByZWNlaXZlZCA2MS41IHBlciBjZW50IG9mIHRoZSB0b3RhbCBlc3RpbWF0ZWQgcmV2ZW51ZSBvZiB0aGUgZW1waXJlIGFzIHNhbGFyaWVzIGZvciB0aGVtc2VsdmVzIGFuZCB0aGVpciB0cm9vcGVycy4gVGhlIE11Z2hhbCBlbXBlcm9ycyBhbmQgdGhlaXIgbWFuc2FiZGFycyBzcGVudCBhIGdyZWF0IGRlYWwgb2YgdGhlaXIgaW5jb21lIG9uIHNhbGFyaWVzIGFuZCBnb29kcy4gVGhpcyBleHBlbmRpdHVyZSBiZW5lZml0ZWQgdGhlIGFydGlzYW5zIGFuZCBwZWFzYW50cnkgd2hvIHN1cHBsaWVkIHRoZW0gd2l0aCBnb29kcyBhbmQgcHJvZHVjZS4gQnV0IHRoZSBzY2FsZSBvZiByZXZlbnVlIGNvbGxlY3Rpb24gbGVmdCB2ZXJ5IGxpdHRsZSBmb3IgaW52ZXN0bWVudCBpbiB0aGUgaGFuZHMgb2YgdGhlIHByaW1hcnkgcHJvZHVjZXJzIC0gdGhlIHBlYXNhbnQgYW5kIHRoZSBhcnRpc2FuLiBUaGUgcG9vcmVzdCBhbW9uZ3N0IHRoZW0gbGl2ZWQgZnJvbSBoYW5kIHRvIG1vdXRoIGFuZCB0aGV5IGNvdWxkIGhhcmRseSBjb25zaWRlciBpbnZlc3RpbmcgaW4gYWRkaXRpb25hbCByZXNvdXJjZXMgLSB0b29scyBhbmQgc3VwcGxpZXMgLSB0byBpbmNyZWFzZSBwcm9kdWN0aXZpdHkuIFRoZSB3ZWFsdGhpZXIgcGVhc2FudHJ5IGFuZCBhcnRpc2FuYWwgZ3JvdXBzLCB0aGUgbWVyY2hhbnRzIGFuZCBiYW5rZXJzIHByb2ZpdGVkIGluIHRoaXMgZWNvbm9taWMgd29ybGQuIFRoZSBlbm9ybW91cyB3ZWFsdGggYW5kIHJlc291cmNlcyBjb21tYW5kZWQgYnkgdGhlIE11Z2hhbCBlbGl0ZSBtYWRlIHRoZW0gYW4gZXh0cmVtZWx5IHBvd2VyZnVsIGdyb3VwIG9mIHBlb3BsZSBpbiB0aGUgbGF0ZSBzZXZlbnRlZW50aCBjZW50dXJ5LiBBcyB0aGUgYXV0aG9yaXR5IG9mIHRoZSBNdWdoYWwgZW1wZXJvciBzbG93bHkgZGVjbGluZWQsIGhpcyBzZXJ2YW50cyBlbWVyZ2VkIGFzIHBvd2VyZnVsIGNlbnRyZXMgb2YgcG93ZXIgaW4gdGhlIHJlZ2lvbnMuIFRoZXkgY29uc3RpdHV0ZWQgbmV3IGR5bmFzdGllcyBhbmQgaGVsZCBjb21tYW5kIG9mIHByb3ZpbmNlcyBsaWtlIEh5ZGVyYWJhZCBhbmQgQXdhZGguIEFsdGhvdWdoIHRoZXkgY29udGludWVkIHRvIHJlY29nbmlzZSB0aGUgTXVnaGFsIGVtcGVyb3IgaW4gRGVsaGkgYXMgdGhlaXIgbWFzdGVyLCBieSB0aGUgZWlnaHRlZW50aCBjZW50dXJ5IHRoZSBwcm92aW5jZXMgb2YgdGhlIGVtcGlyZSBoYWQgY29uc29saWRhdGVkIHRoZWlyIGluZGVwZW5kZW50IHBvbGl0aWNhbCBpZGVudGl0aWVzLiBTb3VyY2U6IENsYXNzIDd0aCBIaXN0b3J5IE5DRVJU",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 87,
      "question" : "Which of the following dynasty king has performed Hiranya-garbha?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQnkgdGhlIHNldmVudGggY2VudHVyeSB0aGVyZSB3ZXJlIGJpZyBsYW5kbG9yZHMgb3Igd2FycmlvciBjaGllZnMgaW4gZGlmZmVyZW50IHJlZ2lvbnMgb2YgdGhlIHN1YmNvbnRpbmVudC4gRXhpc3Rpbmcga2luZ3Mgb2Z0ZW4gYWNrbm93bGVkZ2VkIHRoZW0gYXMgdGhlaXIgc3Vib3JkaW5hdGVzIG9yIHNhbWFudGFzLiBUaGV5IHdlcmUgZXhwZWN0ZWQgdG8gYnJpbmcgZ2lmdHMgZm9yIHRoZWlyIGtpbmdzIG9yIG92ZXJsb3JkcywgYmUgcHJlc2VudCBhdCB0aGVpciBjb3VydHMgYW5kIHByb3ZpZGUgdGhlbSB3aXRoIG1pbGl0YXJ5IHN1cHBvcnQuIEFzIHNhbWFudGFzIGdhaW5lZCBwb3dlciBhbmQgd2VhbHRoLCB0aGV5IGRlY2xhcmVkIHRoZW1zZWx2ZXMgdG8gYmUgbWFoYS1zYW1hbnRhLCBtYWhhLSBtYW5kYWxlc2h2YXJhICh0aGUgZ3JlYXQgbG9yZCBvZiBhICdjaXJjbGUnIG9yIHJlZ2lvbikgYW5kIHNvIG9uLiBTb21ldGltZXMgdGhleSBhc3NlcnRlZCB0aGVpciBpbmRlcGVuZGVuY2UgZnJvbSB0aGVpciBvdmVybG9yZHMuIE9uZSBzdWNoIGluc3RhbmNlIHdhcyB0aGF0IG9mIHRoZSBSYXNodHJha3V0YXMgaW4gdGhlIERlY2Nhbi4gSW5pdGlhbGx5IHRoZXkgd2VyZSBzdWJvcmRpbmF0ZSB0byB0aGUgQ2hhbHVreWFzIG9mIEthcm5hdGFrYS4gSW4gdGhlIG1pZC1laWdodGggY2VudHVyeSwgRGFudGlkdXJnYSwgYSBSYXNodHJha3V0YSBjaGllZiwgb3ZlcnRocmV3IGhpcyBDaGFsdWt5YSBvdmVybG9yZCBhbmQgcGVyZm9ybWVkIGEgcml0dWFsIGNhbGxlZCBoaXJhbnlhLWdhcmJoYSAobGl0ZXJhbGx5LCB0aGUgZ29sZGVuIHdvbWIpLiBXaGVuIHRoaXMgcml0dWFsIHdhcyBwZXJmb3JtZWQgd2l0aCB0aGUgaGVscCBvZiBCcmFobWFuYXMsIGl0IHdhcyB0aG91Z2h0IHRvIGxlYWQgdG8gdGhlICdyZWJpcnRoJyBvZiB0aGUgc2FjcmlmaWNlciBhcyBhIEtzaGF0cml5YSwgZXZlbiBpZiBoZSB3YXMgbm90IG9uZSBieSBiaXJ0aC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Chalukyas",
        "option2" : "Rashtrakutas",
        "option3" : "Cholas",
        "option4" : "Pandyas"
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following statements\n\t1. Saindhava region is present day Sind region.\n\t2. Vanga region is a part of present-day Bengal regionWhich of the statements given above is/are not correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 89,
      "question" : "Which of the following dynasty was largely known for Bronze Sculptures?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAgIC4gICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Chalukyas",
        "option2" : "Rashtrakutas",
        "option3" : "Cholas",
        "option4" : "Pandyas"
      }
    },
    {
      "index" : 90,
      "question" : "Arrange the rulers of Delhi in chronological order\n\t1. Bahlul Lodi\n\t2. Raziyya\n\t3. Muhammad Tughluq\n\t4. Alauddin KhaljiSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkw",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 4 3 1",
        "option2" : "2 3 4 1",
        "option3" : "3 4 1 2 .       ",
        "option4" : "4 3 2 1"
      }
    },
    {
      "index" : 91,
      "question" : "Unani system of medicine was introduced to India during the rule of",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkx",
      "description" : "IC4gICAgICAgICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6IFRoZSB0ZXJtIFnFq25hbsSrIG1lYW5zLCBhcyB0aGUgUGVyc28tQXJhYmljIHN5c3RlbSBvZiBtZWRpY2luZSB3YXMgYmFzZWQgb24gdGhlIHRlYWNoaW5ncyBvZiB0aGUgR3JlZWsgcGh5c2ljaWFucyBIaXBwb2NyYXRlcyBhbmQgR2FsZW4uIFRoZSB0ZXJtIFVuYW5pIChHcmVlaykgbWVhbnMgUGVyc28tQXJhYmljIHN5c3RlbSBvZiBtZWRpY2luZS4gSXQgd2FzIGludHJvZHVjZWQgdG8gSW5kaWEgaW4gMTN0aCBjZW50dXJ5IHdpdGggdGhlIGVzdGFibGlzaG1lbnQgb2YgRGVsaGkgU3VsdGFuYXRlLiBVbmFuaSBzeXN0ZW0gb2YgbWVkaWNpbmUgaXMgdGhlIHRlcm0gZm9yIFBlcnNvLUFyYWJpYyB0cmFkaXRpb25hbCBtZWRpY2luZSBhcyBwcmFjdGljZWQgaW4gTXVnaGFsIEluZGlhIGFuZCBpbiBNdXNsaW0gY3VsdHVyZSBpbiBTb3V0aCBBc2lhIGFuZCBtb2Rlcm4gZGF5IENlbnRyYWwgQXNpYS4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Delhi Sultanate",
        "option2" : "Mughals",
        "option3" : "Mauryan Kingdom",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 92,
      "question" : "Which of the following countries shares border with Baltic Sea?\n\t1. Russia\n\t2. Sweden\n\t3. Belarus\n\t4. NorwaySelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDky",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 4 only",
        "option2" : "1 and 2 only",
        "option3" : "2, 3 and 4 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements regarding Qutbuddin Aibak\n\t1. Qutbuddin Aibak was a slave of Muhammad Ghori.\n\t2. He completed the construction of Qutb Minar and named it after a famous Sufi Saint KhwajaQutbuddin Bakthiyar.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUXV0YnVkZGluIEFpYmFrICgxMjA2LTEyMTApIFF1dGJ1ZGRpbiBBaWJhayB3YXMgYSBzbGF2ZSBvZiBNdWhhbW1hZCBHaG9yaSwgd2hvIG1hZGUgaGltIHRoZSBHb3Zlcm5vciBvZiBoaXMgSW5kaWFuIHBvc3Nlc3Npb25zLiBIZSBzZXQgdXAgaGlzIG1pbGl0YXJ5IGhlYWRxdWFydGVycyBhdCBJbmRyYXByYXN0YSwgbmVhciBEZWxoaS4gSGUgcmFpc2VkIGEgc3RhbmRpbmcgYXJteSBhbmQgZXN0YWJsaXNoZWQgaGlzIGhvbGQgb3ZlciBub3J0aCBJbmRpYSBldmVuIGR1cmluZyB0aGUgbGlmZSB0aW1lIG9mIEdob3JpLiBBZnRlciB0aGUgZGVhdGggb2YgR2hvcmkgaW4gMTIwNiwgQWliYWsgZGVjbGFyZWQgaGlzIGluZGVwZW5kZW5jZS4gSGUgc2V2ZXJlZCBhbGwgY29ubmVjdGlvbnMgd2l0aCB0aGUga2luZ2RvbSBvZiBHaG9yaSBhbmQgdGh1cyBmb3VuZGVkIHRoZSBTbGF2ZSBkeW5hc3R5IGFzIHdlbGwgYXMgdGhlIERlbGhpIFN1bHRhbmF0ZS4gSGUgYXNzdW1lZCB0aGUgdGl0bGUgU3VsdGFuIGFuZCBtYWRlIExhaG9yZSBoaXMgY2FwaXRhbC4gSGlzIHJ1bGUgbGFzdGVkIGZvciBhIHNob3J0IHBlcmlvZCBvZiBmb3VyIHllYXJzLiBNdXNsaW0gd3JpdGVycyBjYWxsIEFpYmFrIExha2ggQmFrc2ggb3IgZ2l2ZXIgb2YgbGFraHMgYmVjYXVzZSBoZSBnYXZlIGxpYmVyYWwgLiAgICAgICAgIGRvbmF0aW9ucyB0byB0aGVtLiBBaWJhayBwYXRyb25pemVkIHRoZSBncmVhdCBzY2hvbGFyIEhhc2FuIE5pemFtaS4gSGUgYWxzbyBzdGFydGVkIHRoZSBjb25zdHJ1Y3Rpb24gb2YgUXV0YiBNaW5hciBhZnRlciB0aGUgbmFtZSBvZiBhIGZhbW91cyBTdWZpIHNhaW50IEtod2FqYSBRdXRidWRkaW4gQmFrdGhpeWFyLiBJdCB3YXMgbGF0ZXIgY29tcGxldGVkIGJ5IElsdHV0bWlzaC4gQWliYWsgZGllZCBzdWRkZW5seSB3aGlsZSBwbGF5aW5nIGNoYXVnYW4gKGhvcnNlIHBvbG8pIGluIDEyMTAuIEhlIHdhcyBzdWNjZWVkZWQgYnkgaGlzIHNvbiBBcmFtIEJha3NoLCB3aG8gd2FzIHJlcGxhY2VkIGJ5IElsdHV0bWlzaCBhZnRlciBlaWdodCBtb250aHMu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 94,
      "question" : "The system of dagh and huliya was introduced by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxhdWRkaW4gS2hhbGppIG1haW50YWluZWQgYSBsYXJnZSBwZXJtYW5lbnQgc3RhbmRpbmcgYXJteSBhbmQgcGFpZCB0aGVtIGluIGNhc2ggZnJvbSB0aGUgcm95YWwgdHJlYXN1cnkuIEFjY29yZGluZyB0aGUgRmVyaXNodGEsIGhlIHJlY3J1aXRlZCA0LDc1LDAwMCBjYXZhbHJ5bWVuLiBIZSBpbnRyb2R1Y2VkIHRoZSBzeXN0ZW0gb2YgZGFnaCAoYnJhbmRpbmcgb2YgaG9yc2VzKSBhbmQgcHJlcGFyZWQgaHVsaXlhIChkZXNjcmlwdGl2ZSBsaXN0IG9mIHNvbGRpZXJzKS4gSW4gb3JkZXIgdG8gZW5zdXJlIG1heGltdW0gZWZmaWNpZW5jeSwgYSBzdHJpY3QgcmV2aWV3IG9mIGFybXkgZnJvbSB0aW1lIHRvIHRpbWUgd2FzIGNhcnJpZWQgb3V0LiBUaGUgaW50cm9kdWN0aW9uIG9mIHBheWluZyBzYWxhcmllcyBpbiBjYXNoIHRvIHRoZSBzb2xkaWVycyBsZWQgdG8gcHJpY2UgcmVndWxhdGlvbnMgcG9wdWxhcmx5IGNhbGxlZCBhcyBNYXJrZXQgUmVmb3Jtcy4gQWxhdWRkaW4gS2hhbGppIGVzdGFibGlzaGVkIGZvdXIgc2VwYXJhdGUgbWFya2V0cyBpbiBEZWxoaSwgb25lIGZvciBncmFpbjsgYW5vdGhlciBmb3IgY2xvdGgsIHN1Z2FyLCBkcmllZCBmcnVpdHMsIGJ1dHRlciBhbmQgb2lsOyBhIHRoaXJkIGZvciBob3JzZXMsIHNsYXZlcyBhbmQgY2F0dGxlOyBhbmQgYSBmb3VydGggZm9yIG1pc2NlbGxhbmVvdXMgY29tbW9kaXRpZXMuIEVhY2ggbWFya2V0IHdhcyB1bmRlciB0aGUgY29udHJvbCBvZiBhIGhpZ2ggb2ZmaWNlciBjYWxsZWQgU2hhaG5hLWktTWFuZGku",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sikandar Lodi",
        "option2" : "Muhammad-bin-Tughlaq",
        "option3" : "Sher Shah Sur",
        "option4" : "Alauddin Khalji"
      }
    },
    {
      "index" : 95,
      "question" : "Consider the following statements regarding Basavanna, 12th century philosopher\n\t1. He spread social awareness through his poetry, popularly known as Vachanaas\n\t2. He rejected gender discrimination, superstitions and rituals.\n\t3. He believed in idol worship of the god..Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk1",
      "description" : "IC4gICAgICAgICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6IEJhc2F2YW5uYSB3YXMgYW4gSW5kaWFuIDEydGgtY2VudHVyeSBTdGF0ZXNtYW4sIHBoaWxvc29waGVyLCBwb2V0LCBMaW5nYXlhdCBzYWludCBpbiB0aGUgU2hpdmEtZm9jdXNzZWQgQmhha3RpIG1vdmVtZW50LCBhbmQgc29jaWFsIHJlZm9ybWVyIGR1cmluZyB0aGUgcmVpZ24gb2YgdGhlIEthbHlhbmkgQ2hhbHVreWEvS2FsYWNodXJpIGR5bmFzdHkuIEJhc2F2YW5uYSB3YXMgYWN0aXZlIGR1cmluZyB0aGUgcnVsZSBvZiBib3RoIGR5bmFzdGllcyBidXQgcmVhY2hlZCBoaXMgcGVhayBvZiBpbmZsdWVuY2UgZHVyaW5nIHRoZSBydWxlIG9mIEtpbmcgQmlqamFsYSBJSSBpbiBLYXJuYXRha2EsIEluZGlhLiBCYXNhdmFubmEgc3ByZWFkIHNvY2lhbCBhd2FyZW5lc3MgdGhyb3VnaCBoaXMgcG9ldHJ5LCBwb3B1bGFybHkga25vd24gYXMgVmFjaGFuYWFzLiBCYXNhdmFubmEgcmVqZWN0ZWQgZ2VuZGVyIG9yIHNvY2lhbCBkaXNjcmltaW5hdGlvbiwgc3VwZXJzdGl0aW9ucyBhbmQgcml0dWFsc2J1dCBpbnRyb2R1Y2VkIElzaHRhbGluZ2EgbmVja2xhY2UsIHdpdGggYW4gaW1hZ2Ugb2YgdGhlIFNoaXZhIExp4bmFZ2EsIHRvIGV2ZXJ5IHBlcnNvbiByZWdhcmRsZXNzIG9mIGhpcyBvciBoZXIgYmlydGgsIHRvIGJlIGEgY29uc3RhbnQgcmVtaW5kZXIgb2Ygb25lJ3MgYmhha3RpIChkZXZvdGlvbikgdG8gU2hpdmEuIEJhc2F2YW5uYSB3YXMgYWdhaW5zdCBpZG9sIHdvcnNoaXAgYW5kIGZpcmUgd29yc2hpcC4gQXMgdGhlIGNoaWVmIG1pbmlzdGVyIG9mIGhpcyBraW5nZG9tLCBoZSBpbnRyb2R1Y2VkIG5ldyBwdWJsaWMgaW5zdGl0dXRpb25zIHN1Y2ggYXMgdGhlIEFudWJoYXZhIE1hbnRhcGEgKG9yLCB0aGUgImhhbGwgb2Ygc3Bpcml0dWFsIGV4cGVyaWVuY2UiKSwgd2hpY2ggd2VsY29tZWQgbWVuIGFuZCB3b21lbiBmcm9tIGFsbCBzb2Npby1lY29ub21pYyBiYWNrZ3JvdW5kcyB0byBkaXNjdXNzIHNwaXJpdHVhbCBhbmQgbXVuZGFuZSBxdWVzdGlvbnMgb2YgbGlmZSwgaW4gb3Blbg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2only",
        "option3" : "1 and 2 only",
        "option4" : "1 only"
      }
    },
    {
      "index" : 96,
      "question" : "Consider the following statements regarding Sea Weed\n\t1. It is the common name for countless species of marine plants and algae.\n\t2. It is found in marine waters only\n\t3. Sea weeds are detrimental to human health and consumption of the same should be avoidedWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIlNlYXdlZWQiIGlzIHRoZSBjb21tb24gbmFtZSBmb3IgY291bnRsZXNzIHNwZWNpZXMgb2YgbWFyaW5lIHBsYW50cyBhbmQgYWxnYWUgdGhhdCBncm93IGluIHRoZSBvY2VhbiBhcyB3ZWxsIGFzIGluIHJpdmVycywgbGFrZXMsIGFuZCBvdGhlciB3YXRlciBib2RpZXMuIFNvbWUgc2Vhd2VlZHMgYXJlIG1pY3Jvc2NvcGljLCBzdWNoIGFzIHRoZSBwaHl0b3BsYW5rdG9uIHRoYXQgbGl2ZSBzdXNwZW5kZWQgaW4gdGhlIHdhdGVyIGNvbHVtbiBhbmQgcHJvdmlkZSB0aGUgYmFzZSBmb3IgbW9zdCBtYXJpbmUgZm9vZCBjaGFpbnMuIFNvbWUgYXJlIGVub3Jtb3VzLCBsaWtlIHRoZSBnaWFudCBrZWxwIHRoYXQgZ3JvdyBpbiBhYnVuZGFudCAnZm9yZXN0cycgYW5kIHRvd2VyIGxpa2UgdW5kZXJ3YXRlciByZWR3b29kcyBmcm9tIHRoZWlyIHJvb3RzIGF0IHRoZSBib3R0b20gb2YgdGhlIHNlYS4gTW9zdCBhcmUgbWVkaXVtLXNpemVkLCBjb21lIGluIGNvbG9ycyBvZiByZWQsIGdyZWVuLCBicm93biwgYW5kIGJsYWNrLCBhbmQgcmFuZG9tbHkgd2FzaCB1cCBvbiBiZWFjaGVzIGFuZCBzaG9yZWxpbmVzIGp1c3QgYWJvdXQgZXZlcnl3aGVyZS4gU2Vhd2VlZCBpcyBjaG9jay1mdWxsIG9mIHZpdGFtaW5zLCBtaW5lcmFscywgYW5kIGZpYmVyLCBhbmQgY2FuIGJlIHRhc3R5LiBGb3IgYXQgbGVhc3QgLiAgICAgICAgIDEsNTAwIHllYXJzLCB0aGUgSmFwYW5lc2UgaGF2ZSBlbnJvYmVkIGEgbWl4dHVyZSBvZiByYXcgZmlzaCwgc3RpY2t5IHJpY2UsIGFuZCBvdGhlciBpbmdyZWRpZW50cyBpbiBhIHNlYXdlZWQgY2FsbGVkIG5vcmkuIFRoZSBkZWxlY3RhYmxlIHJlc3VsdCBpcyBhIHN1c2hpIHJvbGwuIGh0dHBzOi8vb2NlYW5zZXJ2aWNlLm5vYWEuZ292L2ZhY3RzL3NlYXdlZWQuaHRtbA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "1 only"
      }
    },
    {
      "index" : 97,
      "question" : "Spaghetti bowl effect, sometime seen in the news, is related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHNwYWdoZXR0aSBib3dsIGVmZmVjdCBpcyB0aGUgbXVsdGlwbGljYXRpb24gb2YgZnJlZSB0cmFkZSBhZ3JlZW1lbnRzIChGVEFzKSwgc3VwcGxhbnRpbmcgbXVsdGlsYXRlcmFsIFdvcmxkIFRyYWRlIE9yZ2FuaXphdGlvbiBuZWdvdGlhdGlvbnMgYXMgYW4gYWx0ZXJuYXRpdmUgcGF0aCB0b3dhcmQgZ2xvYmFsaXphdGlvbi4gVGhlIHRlcm0gd2FzIGZpcnN0IHVzZWQgYnkgSmFnZGlzaEJoYWd3YXRpIGluIDE5OTUgaW4gdGhlIHBhcGVyOiAnVVMgVHJhZGUgcG9saWN5OiBUaGUgaW5mYXR1YXRpb24gd2l0aCBmcmVlIHRyYWRlIGFncmVlbWVudHMnLCB3aGVyZSBoZSBvcGVubHkgY3JpdGljaXplZCBGVEFzIGFzIGJlaW5nIHBhcmFkb3hpY2FsbHkgY291bnRlci1wcm9kdWN0aXZlIGluIHByb21vdGluZyBmcmVlciBhbmQgbW9yZSBvcGVuZWQgZ2xvYmFsIHRyYWRlcy4gQWNjb3JkaW5nIHRvIEJoYWd3YXRpLCB0b28gbWFueSBjcmlzc2Nyb3NzaW5nIEZUQXMgd291bGQgYWxsb3cgY291bnRyaWVzIHRvIGFkb3B0IGRpc2NyaW1pbmF0b3J5IHRyYWRlIHBvbGljaWVzIGFuZCByZWR1Y2UgdGhlIGVjb25vbWljIGJlbmVmaXRzIG9mIHRyYWRlLiAuICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Threat to biodiversity due to climate change",
        "option2" : "Influx of migrants and effect on domestic economy of a nation",
        "option3" : "Multiplication of free trade agreements threatening WTO position.",
        "option4" : "China's policy towards south-east Asian countries"
      }
    },
    {
      "index" : 98,
      "question" : "Which of the following diseases is/are considered as Occupational Diseases?\n\t1. Byssinosis\n\t2. Silicosis\n\t3. AsbestosisSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmF0aW9uYWwgSW5zdGl0dXRlIG9mIE9jY3VwYXRpb25hbCBTYWZldHkgJiBIZWFsdGggKE5JT1NIKSBoYXMgZGV2ZWxvcGVkIGEgcHJpb3JpdHkgbGlzdCBvZiAxMCBsZWFkaW5nIHdvcmstcmVsYXRlZCBpbGxuZXNzZXMgYW5kIGluanVyaWVzLiBUaHJlZSBjcml0ZXJpYSB3ZXJlIHVzZWQgdG8gZGV2ZWxvcCB0aGUgbGlzdDogYSkgdGhlIGZyZXF1ZW5jeSBvZiBvY2N1cnJlbmNlIG9mIHRoZSBpbGxuZXNzIG9yIGluanVyeSwgYikgaXRzIHNldmVyaXR5IGluIGluZGl2aWR1YWwgY2FzZXMsIGFuZCBjKSBpdHMgcG90ZW50aWFsIGZvciBwcmV2ZW50aW9uLiBPY2N1cGF0aW9uYWwgbHVuZyBkaXNlYXNlIGlzIGZpcnN0IG9uIHRoZSBsaXN0LiBTaWxpY29zaXMsIGFzYmVzdG9zaXMgYW5kIGJ5c3Npbm9zaXMgYXJlIHN0aWxsIHByZXZhbGVudCBpbiBtYW55IHBhcnRzIG9mIHRoZSB3b3JsZC4gVGhlIHByZXZhbGVuY2Ugb2YgT2NjdXBhdGlvbmFsIEFzdGhtYSB2YXJpZXMgZnJvbSAxMCUgdG8gbmVhcmx5IGFsbCBvZiB0aGUgd29ya2VycyBpbiBjZXJ0YWluIGhpZ2gtcmlzayBvY2N1cGF0aW9ucy4gTklTT0ggY29uc2lkZXJzIG9jY3VwYXRpb25hbCBjYW5jZXIgdG8gYmUgdGhlIHNlY29uZCBsZWFkaW5nIHdvcmstcmVsYXRlZCBkaXNlYXNlLCBmb2xsb3dlZCBieSBjYXJkaW8tdmFzY3VsYXIgZGlzZWFzZXM7IGRpc29yZGVyIG9mIHJlcHJvZHVjdGlvbiwgbmV1cm90b3hpY2l0eSwgbm9pc2UgaW5kdWNlZCBoZWFyaW5nIGxvc3MsIGRlcm1hdG9sb2dpY2FsIGNvbmRpdGlvbnMsIGFuZCBwc3ljaG9sb2dpY2FsIGRpc29yZGVycy4gSW4gSW5kaWEsIHByZXZhbGVuY2Ugb2Ygc2lsaWNvc2lzIHdhcyA2LjIgLSAzNCAlIGluIG1pY2EgbWluZXJzLCA0LjEgJSBpbiBtYW5nYW5lc2UgbWluZXJzLCAzMC40JSBpbiBsZWFkIGFuZCB6aW5jIG1pbmVycywgOS4zJSBpbiBkZWVwIGFuZCBzdXJmYWNlIGNvYWwgbWluZXJzLCAyNy4yJSBpbiBpcm9uIGZvdW5kcnkgd29ya2VycywgYW5kIDU0LjYlIGluIHNsYXRlLXBlbmNpbCB3b3JrZXJzLiBQcmV2YWxlbmNlIG9mIEFzYmVzdG9zaXMgd2FzIGV4dGVuZGVkIGZyb20gMyUgaW4gQXNiZXN0b3MgbWluZXJzIHRvIDIxJSBpbiBtaWxsIHdvcmtlcnMuIEluIHRleHRpbGUgd29ya2VycyB0aGUgQnlzaW5vc2lzIHdhcyBhcyBjb21tb24gYXMgMjgtNDclLiBOdXRyaXRpb25hbCBzdGF0dXMgaW4gdGVybXMgb2YgYm9keSBtYXNzIGluZGljZXMgKEJNSSkgb2YgdGhlIHdvcmtlcnMgaXMgYWxzbyBzaWduaWZpY2FudGx5IGxvdy4gaHR0cHM6Ly92aWthc3BlZGlhLmluL2hlYWx0aC9ucmhtL25hdGlvbmFsLWhlYWx0aC1wcm9ncmFtbWVzLTEvbmF0aW9uYWwtcHJvZ3JhbW1lLWZvci1jb250cm8gbC1hbmQtdHJlYXRtZW50LW9mLW9jY3VwYXRpb25hbC1kaXNlYXNlcw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 99,
      "question" : "Pegasus spyware, sometime seen in the news, steals",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk5",
      "description" : "IC4gICAgICAgICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6IFRoZSBwb3B1bGFyIG1lc3NhZ2luZyBwbGF0Zm9ybSBXaGF0c0FwcCB3YXMgdXNlZCB0byBzcHkgb24gam91cm5hbGlzdHMgYW5kIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdHMgaW4gSW5kaWEgZWFybGllciB0aGlzIHllYXIuIFRoZSBzdXJ2ZWlsbGFuY2Ugd2FzIGNhcnJpZWQgb3V0IHVzaW5nIGEgc3B5d2FyZSB0b29sIGNhbGxlZCBQZWdhc3VzLCB3aGljaCBoYXMgYmVlbiBkZXZlbG9wZWQgYnkgYW4gSXNyYWVsaSBmaXJtLCB0aGUgTlNPIEdyb3VwLiBXaGF0c0FwcCBzdWVkIHRoZSBOU08gR3JvdXAgaW4gYSBmZWRlcmFsIGNvdXJ0IGluIFNhbiBGcmFuY2lzY28gb24gVHVlc2RheSwgYWNjdXNpbmcgaXQgb2YgdXNpbmcgV2hhdHNBcHAgc2VydmVycyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgZWxzZXdoZXJlICd0byBzZW5kIG1hbHdhcmUgdG8gYXBwcm94aW1hdGVseSAxLDQwMCBtb2JpbGUgcGhvbmVzIGFuZCBkZXZpY2VzICgnVGFyZ2V0IERldmljZXMnKS4uLiBmb3IgdGhlIHB1cnBvc2Ugb2YgY29uZHVjdGluZyBzdXJ2ZWlsbGFuY2Ugb2Ygc3BlY2lmaWMgV2hhdHNBcHAgdXNlcnMgKCdUYXJnZXQgVXNlcnMnKScuIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvd2hhdHNhcHAtc3B5d2FyZS1wZWdhc3VzLWluZGlhLXN1cnZlaWxsYW5jZS1uc28taXMgcmFlbC02MDk2OTEwLw==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The financial credentials of the individual through malware",
        "option2" : "The private photos and videos and locks the personal information in a phone",
        "option3" : "The target's contacts, calls and messages through WhatsApp call",
        "option4" : "None of the statements (a), (b) and (c) are correct"
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements regarding Irrawaddy Dolphins.\n\t1. They are endemic to Indian Ocean\n\t2. The protection of these dolphins is crucial to Ganga river system\n\t3. It is an endangered speciesWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEwMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIElycmF3YWRkeSBkb2xwaGluIChPcmNhZWxsYSBicmV2aXJvc3RyaXMpIGlzIGEgZXVyeWhhbGluZSBzcGVjaWVzIG9mIG9jZWFuaWMgZG9scGhpbiBmb3VuZCBpbiBkaXNjb250aW51b3VzIHN1YnBvcHVsYXRpb25zIG5lYXIgc2VhIGNvYXN0cyBhbmQgaW4gZXN0dWFyaWVzIGFuZCByaXZlcnMgaW4gcGFydHMgb2YgdGhlIEJheSBvZiBCZW5nYWwgYW5kIFNvdXRoZWFzdCBBc2lhLiBUaGUgcHJvdGVjdGlvbiBvZiB0aGUgSXJyYXdhZGR5IGRvbHBoaW4gaXMgY3J1Y2lhbCBmb3IgdGhlIG92ZXJhbGwgaGVhbHRoIG9mIHRoZSBNZWtvbmcgUml2ZXItaG9tZSB0byBhbiBlc3RpbWF0ZWQgMSwxMDAgc3BlY2llcyBvZiBmaXNoLiAuICAgICAgICAgaHR0cHM6Ly93d3cud29ybGR3aWxkbGlmZS5vcmcvc3BlY2llcy9pcnJhd2FkZHktZG9scGhpbiAuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "1 only . "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
