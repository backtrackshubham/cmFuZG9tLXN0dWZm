{
  "testId" : "insight-2023-prelims-1-subject-wise-4",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/insight/prelims/insight-2023-prelims-1-subject-wise-4.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements regarding the Modern history of India\n\t1. First session of the Indian National Congress was presided by Womesh Chandra Bonnerjee.\n\t2. Complete independence was the main aim of the Indian National Congress in the initial stage.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZpcnN0IHNlc3Npb24gb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgYXR0ZW5kZWQgYnkgNzIgZGVsZWdhdGVzIGFuZCBwcmVzaWRlZCBvdmVyIGJ5IFdvbWVzaCBDaGFuZHJhIChvciBDaHVuZGVyKSBCb25uZXJqZWUuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBIZXJlYWZ0ZXIsIHRoZSBDb25ncmVzcyBtZXQgZXZlcnkgeWVhciBpbiBEZWNlbWJlciwgaW4gYSBkaWZmZXJlbnQgcGFydCBvZiB0aGUgY291bnRyeSBlYWNoIHRpbWUuIEFpbXMgYW5kIE9iamVjdGl2ZXMgb2YgdGhlIENvbmdyZXNzOi0gIEluaXRpYWxseSBjb21wbGV0ZSBpbmRlcGVuZGVuY2Ugd2FzIG5vdCB0aGUgbWFpbiBvZiBJTkMgLiBJdCBiZWNhbWUgdGhlIG1haW4gYWltIG9ubHkgYWZ0ZXIgTGFob3JlIHNlc3Npb24gMTkyOSAuICAgICAgICAgICAgIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIG1haW4gYWltcyBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIGluIHRoZSBpbml0aWFsIHN0YWdlIHdlcmUgdG86IChpKSBmb3VuZCBhIGRlbW9jcmF0aWMsIG5hdGlvbmFsaXN0IG1vdmVtZW50OyAoaWkpIHBvbGl0aWNpc2UgYW5kIHBvbGl0aWNhbGx5IGVkdWNhdGUgcGVvcGxlOyAoaWlpKSBlc3RhYmxpc2ggdGhlIGhlYWRxdWFydGVycyBmb3IgYSBtb3ZlbWVudDsgKGl2KSBwcm9tb3RlIGZyaWVuZGx5IHJlbGF0aW9ucyBhbW9uZyBuYXRpb25hbGlzdCBwb2xpdGljYWwgd29ya2VycyBmcm9tIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgY291bnRyeTsgKHYpIGRldmVsb3AgYW5kIHByb3BhZ2F0ZSBhbiBhbnRpLWNvbG9uaWFsIG5hdGlvbmFsaXN0IGlkZW9sb2d5OyAodmkpIGZvcm11bGF0ZSBhbmQgcHJlc2VudCBwb3B1bGFyIGRlbWFuZHMgYmVmb3JlIHRoZSBnb3Zlcm5tZW50IHdpdGggYSB2aWV3IHRvIHVuaWZ5aW5nIHRoZSBwZW9wbGUgb3ZlciBhIGNvbW1vbiBlY29ub21pYyBhbmQgcG9saXRpY2FsIHByb2dyYW1tZTsgKHZpaSkgZGV2ZWxvcCBhbmQgY29uc29saWRhdGUgYSBmZWVsaW5nIG9mIG5hdGlvbmFsIHVuaXR5IGFtb25nIHBlb3BsZSBpcnJlc3BlY3RpdmUgb2YgcmVsaWdpb24sIGNhc3RlLCBvciBwcm92aW5jZS4gKHZpaWkpIGNhcmVmdWxseSBwcm9tb3RlIGFuZCBudXJ0dXJlIEluZGlhbiBuYXRpb25ob29kLiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 2,
      "question" : "In the context of modern history , 'The  Lightening conductor and conspiracy' theorywas related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlICBMaWdodGVuaW5nIGNvbmR1Y3RvciBhbmQgY29uc3BpcmFjeSB0aGVvcnkgOi0gYm90aCB0aGUgdGhlb3JpZXMgd2VyZSByZWxhdGVkIHRvIGVzdGFibGlzaG1lbnQgb2YgY29uZ3Jlc3MuIFRoZSBjb25zcGlyYWN5IHRoZW9yeSA6LTEuIFIuUC4gRHV0dCBvcGluZWQgdGhhdCB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIHdhcyBib3JuIG91dCBvZiBhIGNvbnNwaXJhY3kgdG8gYWJvcnQgYSBwb3B1bGFyIHVwcmlzaW5nIGluIEluZGlhIGFuZCB0aGUgYm91cmdlb2lzIGxlYWRlcnMgd2VyZSBhIHBhcnR5IHRvIGl0LiAyLlRoZSAgTGlnaHRlbmluZyBjb25kdWN0b3IgOi0gQmlwYW4gQ2hhbmRyYSBvYnNlcnZlcywgdGhlIGVhcmx5IENvbmdyZXNzIGxlYWRlcnMgdXNlZCBIdW1lIGFzIGEgJ2xpZ2h0bmluZyBjb25kdWN0b3InLCBpLmUuLCBhcyBhIGNhdGFseXN0IHRvIGJyaW5nIHRvZ2V0aGVyIHRoZSBuYXRpb25hbGlzdGljIGZvcmNlcyBldmVuIGlmIHVuZGVyIHRoZSBndWlzZSBvZiBhICdzYWZldHkgdmFsdmUnLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Revolutionary movements of Western India during 1920s",
        "option2" : "Komagatu Maru incident",
        "option3" : "Establishment of INC",
        "option4" : "INA revolt"
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements regarding modern history of India.\n\t1. Dadabhai Naoroji played the main role in establishing a British committee of the Indian Nationalcongress in London .\n\t2. He was the president of INC only for three times.\n\t3. The British India association organised by Dadabhai Naoroji in London .Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQSBCcml0aXNoIGNvbW1pdHRlZSBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIHdhcyBlc3RhYmxpc2hlZCBpbiBMb25kb24gaW4gMTg4OTEuIHdoaWNoIGhhZCBJbmRpYSBhcyBpdHMgb3JnYW4uIERhZGFiaGFpIE5hb3Jvamkgc3BlbnQgYSBzdWJzdGFudGlhbCBwb3J0aW9uIG9mIGhpcyBsaWZlIGFuZCBpbmNvbWUgY2FtcGFpZ25pbmcgZm9yMi4gSW5kaWEncyBjYXNlIGFicm9hZC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgSGUgd2FzIHRoZSBwcmVzaWRlbnQgb2YgSU5DIGZvciAzIHRpbWVzIC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdDMuIFRoZSBFYXN0IEluZGlhIEFzc29jaWF0aW9uIHdhcyBvcmdhbmlzZWQgYnkgRGFkYWJoYWkgTmFvcm9qaSBpbiAxODY2IGluIExvbmRvbiB0bzQuIGRpc2N1c3MgdGhlIEluZGlhbiBxdWVzdGlvbiBhbmQgaW5mbHVlbmNlIHB1YmxpYyBtZW4gaW4gRW5nbGFuZCB0byBwcm9tb3RlIEluZGlhbiB3ZWxmYXJlLiBXaGVyZWFzIFRoZSBCcml0aXNoIEluZGlhIGFzc29jaWF0aW9uIHdhcyBmb3JtZWQgYWZ0ZXIgbWVyZ2luZyBMYW5kaG9sZGVycycgU29jaWV0eSBhbmQ1LiB0aGUgQmVuZ2FsIEJyaXRpc2ggSW5kaWEgU29jaWV0eS4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0Lg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements regarding Colonial rule in India.\n\t1. Colonial rule contributed in many ways for the growth of modern nationalism in India .\n\t2. The period from 1858 to 1905 was the seed time of Indian nationalism.Which of the above statement is/are incorrect ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWFuIG5hdGlvbmFsaXNtIGlzIGEgcHJvZHVjdCBvZiBhIG1peCBvZiB2YXJpb3VzIGZhY3RvcnM6IChpKSBXb3JsZHdpZGUgdXBzdXJnZSBvZiB0aGUgY29uY2VwdHMgb2YgbmF0aW9uYWxpc20gYW5kIHRoZSByaWdodCBvZiBzZWxmLWRldGVybWluYXRpb24gaW5pdGlhdGVkIGJ5IHRoZSBGcmVuY2ggUmV2b2x1dGlvbiAoaWkpIEluZGlhbiBSZW5haXNzYW5jZSAoaWlpKSBPZmZzaG9vdCBvZiBtb2Rlcm5pc2F0aW9uIGluaXRpYXRlZCBieSB0aGUgQnJpdGlzaCBpbiBJbmRpYSAoaXYpIFN0cm9uZyByZWFjdGlvbiB0byBCcml0aXNoIGltcGVyaWFsaXN0IHBvbGljaWVzIGluIEluZGlhIFRoZXJlZm9yZSwgSW5kaWFuIG5hdGlvbmFsaXNtIGdyZXcgcGFydGx5IGFzIGEgcmVzdWx0IG9mIGNvbG9uaWFsIHBvbGljaWVzIGFuZCBwYXJ0bHkgYXMgYSByZWFjdGlvbiB0byBjb2xvbmlhbCBwb2xpY2llcy4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIHBlcmlvZCBmcm9tIDE4NTggdG8gMTkwNSB3YXMgdGhlIHNlZWQgdGltZSBvZiBJbmRpYW4gbmF0aW9uYWxpc207IGFuZCB0aGUgZWFybHkgbmF0aW9uYWxpc3RzIHNvd2VkIHRoZSBzZWVkcyB3ZWxsIGFuZCBkZWVwLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following leaders were associated with the Bombay presidencyassociation.\n\t1. Badruddin Tyabji. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t2. Dadabhai Naoroji\n\t3. Pherozeshah Mehta\n\t4. K.T . Telang\n\t5. M.G. RanadeSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEJvbWJheSBQcmVzaWRlbmN5IEFzc29jaWF0aW9uIHdhcyBzdGFydGVkIGJ5IEJhZHJ1ZGRpbiBUeWFiamksIFBoZXJvemVzaGFoIE1laHRhLCBhbmQgSy5ULiBUZWxhbmcgaW4gMTg4NS4gSXQgd2FzIGZvdW5kZWQgaW4gcmVzcG9uc2UgdG8gTHl0dG9uJ3MgcmVhY3Rpb25hcnkgcG9saWNpZXMgYW5kIHRoZSBJbGJlcnQgQmlsbCBjb250cm92ZXJzeS4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "1, 3 and 4 only",
        "option3" : "1, 2 and 5 only",
        "option4" : "2, 4 and 5 only"
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements regarding the early nationalists of India .\n\t1. They campaigned for indianisation of government services.\n\t2. Mass participation of people was a unique feature of the early nationalists movement.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUm9sZSBvZiBtYXNzZXM6LTEuIFRoZSBtb2RlcmF0ZSBwaGFzZSBvZiB0aGUgbmF0aW9uYWwgbW92ZW1lbnQgaGFkIGEgbmFycm93IHNvY2lhbCBiYXNlIGFuZCB0aGUgbWFzc2VzIHBsYXllZCBhIHBhc3NpdmUgcm9sZS5UaGlzIHdhcyBiZWNhdXNlIHRoZSBlYXJseSBuYXRpb25hbGlzdHMgbGFja2VkIHBvbGl0aWNhbCBmYWl0aCBpbiB0aGUgbWFzc2VzLiBCZWNhdXNlIG9mIHRoZSBsYWNrIG9mIG1hc3MgcGFydGljaXBhdGlvbiwgdGhlIE1vZGVyYXRlcyBjb3VsZCBub3QgdGFrZSBtaWxpdGFudCBwb2xpdGljYWwgcG9zaXRpb25zIGFnYWluc3QgdGhlIGF1dGhvcml0aWVzLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 9,
      "question" : "7. Consider the following reasons for growing militant nationalism during 1905-1909 .\n\t1. Japan's victory over Russia in 1905.\n\t2. Political mendicancy of moderates.\n\t3. Increasing westernisation.\n\t4. Failure to realize the true nature of the British .Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gU2FyYWxhIERldmkgR2hvc2hhbCAoQ2hhdWRhcmFuaSkgU2FybGEgRGV2aSBmb3VuZGVkIHRoZSBCaGFyYXQgU3RyZWUgTWFoYW1hbmRhbCwgdGhlIEFsbCBJbmRpYSBXb21lbidzIE9yZ2FuaXNhdGlvbiwgU2hlIHdhcyBhc3NvY2lhdGVkIHdpdGggdGhlIG5ld3NwYXBlciBIaW5kdXN0aGFuIGFzIGVkaXRvciBhbmQgcHVibGlzaGVyLiBUb3dhcmRzIHRoZSBlbmQgb2YgaGVyIGxpZmUsIHNoZSB3YXMgaW52b2x2ZWQgaW4gd3JpdGluZyBoZXIgYmlvZ3JhcGh5LCBKaWJvbmVyIEpob3JhIFBhdGEgKHRoZSAnU2NhdHRlcmVkIExlYXZlcyBvZiBNeSBMaWZlJyku",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 ,2 and 4 only",
        "option2" : "3 and 4 only",
        "option3" : "2 ,3 and 4 only",
        "option4" : "1,2 and 3 only"
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements regarding the administrative measures of LordCurzon :-\n\t1. Appointment of Fraser commission\n\t2. Official secrets act\n\t3. Establishment of public work department\n\t4. Ancient monuments preservation actWhich of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTG9yZCBDdXJ6b24gMTg5OS0xOTA1IEFkbWluaXN0cmF0aXZlIG1lYXN1cmVzIGFkb3B0ZWQgZHVyaW5nIGhpcyBydWxlLSB0aGUgT2ZmaWNpYWwgU2VjcmV0cyBBY3QsIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuMS4gdGhlIEluZGlhbiBVbml2ZXJzaXRpZXMgQWN0LDIuIHRoZSBDYWxjdXR0YSBDb3Jwb3JhdGlvbiBBY3QsMy4gdGhlIHBhcnRpdGlvbiBvZiBCZW5nYWwuNC4gQXBwb2ludG1lbnQgb2YgUG9saWNlIENvbW1pc3Npb24gKDE5MDIpIHVuZGVyIFNpciBBbmRyZXcgRnJhemVyIHRvIHJldmlldyBwb2xpY2U1LiBhZG1pbmlzdHJhdGlvbi4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdCBFc3RhYmxpc2htZW50IG9mIERlcGFydG1lbnQgb2YgQ29tbWVyY2UgYW5kIEluZHVzdHJ5LiBBbmQgbm90IHB1YmxpYyB3b3JrIGRlcGFydG1lbnQ2LiB3aGljaCB3YXMgZXN0YWJsaXNoZWQgYnkgbG9yZCBEYWxob3VzaWUuSGVuY2Ugc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBDYWxjdXR0YSBDb3Jwb3JhdGlvbiBBY3QgKDE4OTkpLjcuIEFuY2llbnQgTW9udW1lbnRzIFByZXNlcnZhdGlvbiBBY3QgKDE5MDQpLiBIZW5jZSBzdGF0ZW1lbnQgNCBpcyBjb3JyZWN0Ljgu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "3 only",
        "option3" : "1 and 3 only .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option4" : "3 and 4 only"
      }
    },
    {
      "index" : 9,
      "question" : "In the context of modern history of India , Jiboner Jhora Pata (the 'Scattered Leaves ofMy Life') book was associated with",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gU2FyYWxhIERldmkgR2hvc2hhbCAoQ2hhdWRhcmFuaSkgU2FybGEgRGV2aSBmb3VuZGVkIHRoZSBCaGFyYXQgU3RyZWUgTWFoYW1hbmRhbCwgdGhlIEFsbCBJbmRpYSBXb21lbidzIE9yZ2FuaXNhdGlvbiwgU2hlIHdhcyBhc3NvY2lhdGVkIHdpdGggdGhlIG5ld3NwYXBlciBIaW5kdXN0aGFuIGFzIGVkaXRvciBhbmQgcHVibGlzaGVyLiBUb3dhcmRzIHRoZSBlbmQgb2YgaGVyIGxpZmUsIHNoZSB3YXMgaW52b2x2ZWQgaW4gd3JpdGluZyBoZXIgYmlvZ3JhcGh5LCBKaWJvbmVyIEpob3JhIFBhdGEgKHRoZSAnU2NhdHRlcmVkIExlYXZlcyBvZiBNeSBMaWZlJyku",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Kamala Devi Chattopadhyay",
        "option2" : "Sarla Devi Chaudharani",
        "option3" : "Bankim Chandra Chatterjee",
        "option4" : "Anand Mohan Bose"
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following leaders were associated with the swadeshi movement\n\t1. Shyamsundar Chakrabarti\n\t2. Chidambaram Pillai\n\t3. Brahmabandhab Upadhyay\n\t4. Syed Haider RazaSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2h5YW1zdW5kYXIgQ2hha3JhYmFydGksIGEgc3dhZGVzaGkgcG9saXRpY2FsIGxlYWRlciwgaGVscGVkIGluIG9yZ2FuaXNpbmcgc3RyaWtlcy4gSGUxLiB3YXMgb25lIG9mIHRoZSAnUGFibmEgR3JvdXAnIG9mIEJlbmdhbGkgcmV2b2x1dGlvbmFyaWVzLiBIZSB3YXMgYSBuYXRpb25hbGlzdCBqb3VybmFsaXN0IHdobyB3YXMgdGhlIHN1Yi1lZGl0b3Igb2YgdGhlIHJldm9sdXRpb25hcnkgam91cm5hbCBTYW5kaHlhLCBsYXRlciBqb2luaW5nIHRoZSBCZW5nYWxpIG5hdGlvbmFsaXN0IG5ld3NwYXBlciBCYW5kZSBNYXRhcmFtIGFzIGFuIGFzc2lzdGFudCB0byBpdHMgZWRpdG9yIEF1cm9iaW5kbyBHaG9zaCBDaGlkYW1iYXJhbSBQaWxsYWksIHdobyBqb2luZWQgcG9saXRpY3MgZm9sbG93aW5nIHRoZSBwYXJ0aXRpb24gb2YgQmVuZ2FsLCBzcHJlYWQgdGhlMi4gU3dhZGVzaGkgTW92ZW1lbnQgdG8gTWFkcmFzIC4gSGUgZm91bmRlZCB0aGUgU3dhZGVzaGkgU3RlYW0gTmF2aWdhdGlvbiBDb21wYW55IGluIFR1dGljb3JpbiBvbiB0aGUgZWFzdCBjb2FzdCBvZiB0aGUgTWFkcmFzIFByb3ZpbmNlIHRvIGJyZWFrIHRoZSB0cmFkZSBtb25vcG9seSBvZiB0aGUgQnJpdGlzaCBJbmRpYSBTdGVhbSBOYXZpZ2F0aW9uIENvbXBhbnkuIEJyYWhtYWJhbmRoYWIgVXBhZGh5YXkgdGhyb3VnaCBoaXMgU2FuZGh5YSBhbmQgWXVnYW50YXIgKGJyb3VnaHQgb3V0IGJ5IGEgZ3JvdXAzLiBhc3NvY2lhdGVkIHdpdGggQmFyaW5kcmFrdW1hciBHaG9zaCkgcG9wdWxhcmlzZWQgc3dhcmFqIGFuZCB0aGUgU3dhZGVzaGkgTW92ZW1lbnQuIFN5ZWQgSGFpZGVyIFJhemEgcG9wdWxhcmlzZWQgdGhlIFN3YWRlc2hpIE1vdmVtZW50IGluIERlbGhpLjQu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 4 only",
        "option2" : "1 and 2 only",
        "option3" : "1,3 and 4 only",
        "option4" : "All of the above"
      }
    },
    {
      "index" : 11,
      "question" : "In the context of the modern history of India , Hitabadi, Sanjibani, and Bengalee wereassociated with",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSGl0YWJhZGksIFNhbmppYmFuaSwgYW5kIEJlbmdhbGVlIFRoaXMgd2VyZSB0aGUgbmV3c3BhcGVyIGFzc29jaWF0ZWQgd2l0aCBzd2FkZXNoaSBtb3ZlbWVudC4gTW9kZXJhdGVzIHVzZWQgdGhpcyBuZXdzcGFwZXIgdG8gcHJvcGFnYXRlIGlkZWFzICwgaW5mb3JtYXRpb24gYW1vbmcgdGhlIHBlb3BsZSBvZiBCZW5nYWwgZHVyaW5nIHRoZSBhbnRpLSBwYXJ0aXRpb24gbW92ZW1lbnQuIE5ld3NwYXBlcnMgSGl0YWJhZGkgd2FzIGZvdW5kZWQgYnkgRHdpamVuZHJhbmF0aCBUYWdvcmUgYW5kIEJlbmdhbGVlIGJ5IFN1cmVuZHJhbmF0aCBCYW5lZXJqZWUgIC4gVGhlaXIgb2JqZWN0aXZlIHdhcyB0byBleGVydCBzdWZmaWNpZW50IHByZXNzdXJlIG9uIHRoZSBnb3Zlcm5tZW50IHRocm91Z2ggYW4gZWR1Y2F0ZWQgcHVibGljIG9waW5pb24gaW4gSW5kaWEgYW5kIEVuZ2xhbmQgdG8gcHJldmVudCB0aGUgdW5qdXN0IHBhcnRpdGlvbiBvZiBCZW5nYWwgZnJvbSBiZWluZyBpbXBsZW1lbnRlZC4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHk=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Swadeshi movement",
        "option2" : "Temple entry movement",
        "option3" : "Quit India movement",
        "option4" : "Dandi march"
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following leaders associated with the Berlin Committee for Indianindependence.\n\t1. Lala Hardayal\n\t2. Bhupendranath Dutta\n\t3. Virendranath ChattopadhyaySelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEJlcmxpbiBDb21taXR0ZWUgZm9yIEluZGlhbiBpbmRlcGVuZGVuY2U6IFJldm9sdXRpb25hcmllcyBpbiBFdXJvcGUgVGhlIEJlcmxpbiBDb21taXR0ZWUgZm9yIEluZGlhbiBJbmRlcGVuZGVuY2Ugd2FzIGVzdGFibGlzaGVkIGluIDE5MTUgYnkgVmlyZW5kcmFuYXRoIENoYXR0b3BhZGh5YXksIEJodXBlbmRyYW5hdGggRHV0dGEsIExhbGEgSGFyZGF5YWwsIGFuZCBvdGhlcnMuIFJldm9sdXRpb25hcmllcyBhaW1lZCB0byBtb2JpbGlzZSB0aGUgSW5kaWFuIHNldHRsZXJzIGFicm9hZCB0byBzZW5kIHZvbHVudGVlcnMgYW5kIGFybXMgdG8gSW5kaWEgdG8gaW5jaXRlIHJlYmVsbGlvbiBhbW9uZyBJbmRpYW4gdHJvb3BzIHRoZXJlIGFuZCB0byBldmVuIG9yZ2FuaXNlIGFuIGFybWVkIGludmFzaW9uIG9mIEJyaXRpc2ggSW5kaWEgdG8gbGliZXJhdGUgdGhlIGNvdW50cnku",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "All of the above"
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statement. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t1. Indian Home rule society was established by Annie Basant in London.\n\t2. Revolutionaries like Savarkar and Hardayal were members of the India house.Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWFuIEhvbWUgUnVsZSBTb2NpZXR5IFNoeWFtamkgS3Jpc2huYXZhcm1hIHN0YXJ0ZWQgaW4gTG9uZG9uLCAxOTA1IGFuIEluZGlhbiBIb21lIFJ1bGUgU29jaWV0eS0nSW5kaWEgSG91c2UnLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEl0IHdhcyBhIGNlbnRyZSBmb3IgSW5kaWFuIHN0dWRlbnRzLCBhIHNjaG9sYXJzaGlwIHNjaGVtZSB0byBicmluZyByYWRpY2FsIHlvdXRoIGZyb20gSW5kaWEsIGFuZCBhIGpvdXJuYWwgVGhlIEluZGlhbiBTb2Npb2xvZ2lzdC4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgUmV2b2x1dGlvbmFyaWVzIHN1Y2ggYXMgU2F2YXJrYXIgYW5kIEhhcmRheWFsIGJlY2FtZSB0aGUgbWVtYmVycyBvZiBJbmRpYSBIb3VzZS4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following were considered as leading factors for the Home Rulemovement?\n\t1. Wartime miseries .\n\t2. Moderates Disillusioned with Montague Chelmsford reforms .\n\t3. Leadership by the Irish theosophist.Select the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEhvbWUgUnVsZSBNb3ZlbWVudCB3YXMgdGhlIEluZGlhbiByZXNwb25zZSB0byB0aGUgRmlyc3QgV29ybGQgV2FyLiBQcm9taW5lbnQgbGVhZGVycy1CYWwgR2FuZ2FkaGFyIFRpbGFrLCBBbm5pZSBCZXNhbnQsIEcuUy4gS2hhcGFyZGUsIFNpciBTLiBTdWJyYW1hbmlhIEl5ZXIsIEpvc2VwaCBCYXB0aXN0YSwgYW5kIE11aGFtbWFkIEFsaSBKaW5uYWggYW1vbmcgb3RoZXJzLiBGYWN0b3JzIExlYWRpbmcgdG8gdGhlIE1vdmVtZW50IFNvbWUgb2YgdGhlIGZhY3RvcnMgbGVhZGluZyB0byB0aGUgZm9ybWF0aW9uIG9mIHRoZSBIb21lIFJ1bGUgTW92ZW1lbnQgd2VyZSBhcyBmb2xsb3dzOiBUaGUgTW9kZXJhdGVzIHdlcmUgZGlzaWxsdXNpb25lZCB3aXRoIHRoZSBNb3JsZXktTWludG8gcmVmb3JtcyAoMTkwOSkgYW5kIG5vdCB3aXRoIE1vbnRhZ3VlIENoZWxtc2ZvcmQgcmVmb3JtcyBhcyBpdCB3YXMgZW5hY3RlZCBhZnRlciB0aGUgaG9tZSBydWxlIG1vdmVtZW50IGluIDE5MTkuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gUGVvcGxlIHdlcmUgZmVlbGluZyB0aGUgYnVyZGVuIG9mIHdhcnRpbWUgbWlzZXJpZXMgY2F1c2VkIGJ5IGhpZ2ggdGF4YXRpb24gYW5kIGEgcmlzZSBpbiBwcmljZXMuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgQW5uaWUgQmVzYW50LCB0aGUgSXJpc2ggdGhlb3NvcGhpc3QgYmFzZWQgaW4gSW5kaWEgc2luY2UgMTg5NiwgaGFkIGRlY2lkZWQgdG8gZW5sYXJnZSB0aGUgc3BoZXJlIG9mIGhlciBhY3Rpdml0aWVzIHRvIGluY2x1ZGUgdGhlIGJ1aWxkaW5nIG9mIGEgbW92ZW1lbnQgZm9yIGhvbWUgcnVsZSBvbiB0aGUgbGluZXMgb2YgdGhlIElyaXNoIEhvbWUgUnVsZSBMZWFndWVzLiBIZW5jZSBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 15,
      "question" : "In the context of modern history, consider the following statements\n\t1. Annulment of partition of Bengal\n\t2. Lucknow Pact\n\t3. Komagata Maru incident\n\t4. August DeclarationArrange the above events as per chronological order .",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29ycmVjdCBjaHJvbm9sb2dpY2FsIG9yZGVyIGlzIGFzIGZvbGxvd3M6LSAxOTExIDotIEFubnVsbWVudCBvZiBwYXJ0aXRpb24gb2YgQmVuZ2FsIFNlcHRlbWJlciAxOTE0IDotIHRoZSBLb21hZ2F0YSBNYXJ1IGluY2lkZW50IC4gMTkxNiA6LSBMdWNrbm93IFBhY3QgQXVndXN0IDE5MTc6LSBBdWd1c3QgZGVjbGFyYXRpb24gYnkgTW9udGFndWU=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3-4",
        "option2" : "1-3-2-4",
        "option3" : "1-4 -3-2",
        "option4" : "3-1-4-2"
      }
    },
    {
      "index" : 16,
      "question" : "Who among the following leaders was associated with the Swarajya Sabhaorganization?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3dhcmFqeWEgU2FiaGEgSW4gMTkyMCwgR2FuZGhpIGFjY2VwdGVkIHRoZSBwcmVzaWRlbnRzaGlwIG9mIHRoZSBBbGwgSW5kaWEgSG9tZSBSdWxlIExlYWd1ZSBhbmQgY2hhbmdlZCB0aGUgb3JnYW5pc2F0aW9uJ3MgbmFtZSB0byBTd2FyYWp5YSBTYWJoYS4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Madam Cama",
        "option2" : "Lala Hardayal",
        "option3" : "Chidambaram Pillai",
        "option4" : "Mahatma Gandhi"
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements\n\t1. Annie Besant presided over the Lucknow Session of INC.\n\t2. It led to the readmission of extremists led by tilak in INC .. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t3. Death of moderates like Pherozeshah Mehta facilitates reunion .Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTHVja25vdyBTZXNzaW9uICgxOTE2KSBSZWFkbWlzc2lvbiBvZiBFeHRyZW1pc3RzIHRvIENvbmdyZXNzIFRoZSBMdWNrbm93IHNlc3Npb24gb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcywgcHJlc2lkZWQgb3ZlciBieSBhIE1vZGVyYXRlLCBBbWJpa2EgQ2hhcmFuIE1hanVtZGFyIGFuZCBub3QgQW5uaWUgQmVzYW50IC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBmaW5hbGx5IHJlYWRtaXR0ZWQgdGhlIEV4dHJlbWlzdHMgbGVkIGJ5IFRpbGFrIHRvIHRoZSBDb25ncmVzcyBmb2xkLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBDb3JyZWN0LiBUaGUgZGVhdGggb2YgUGhlcm96ZXNoYWggTWVodGEsIHdobyBoYWQgbGVkIHRoZSBNb2RlcmF0ZSBvcHBvc2l0aW9uIHRvIHRoZSBFeHRyZW1pc3RzLCBmYWNpbGl0YXRlZCB0aGUgcmV1bmlvbi4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "(a) 1 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements regarding the Lucknow pact\n\t1. Muslim league was dominated by young militant nationalists\n\t2. British refusal to help turkey during First World War\n\t3. Refusal of the British government to set up Aligarh University.Which of the above statement is/are considered as reasons for agreement between the MuslimLeague and Congress?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTHVja25vdyBQYWN0IGJldHdlZW4gQ29uZ3Jlc3MgYW5kIE11c2xpbSBMZWFndWUgMTkxNiBTaWduaWZpY2FudCBkZXZlbG9wbWVudCB0byB0YWtlIHBsYWNlIGF0IEx1Y2tub3cgd2FzIHRoZSBjb21pbmcgdG9nZXRoZXIgb2YgdGhlIE11c2xpbSBMZWFndWUgYW5kIHRoZSBDb25ncmVzcyBhbmQgdGhlIHByZXNlbnRhdGlvbiBvZiBjb21tb24gZGVtYW5kcyBieSB0aGVtIHRvIHRoZSBnb3Zlcm5tZW50LiBXaHkgdGhlIENoYW5nZSBpbiB0aGUgTGVhZ3VlJ3MgQXR0aXR1ZGUgVGhlcmUgd2VyZSBtYW55IHJlYXNvbnMgZm9yIHRoZSBzaGlmdCBpbiB0aGUgTGVhZ3VlJ3MgcG9zaXRpb246ICBUaGlzIGhhcHBlbmVkIGF0IGEgdGltZSB3aGVuIHRoZSBNdXNsaW0gTGVhZ3VlLCBub3cgZG9taW5hdGVkIGJ5IHRoZSB5b3VuZ2VyIG1pbGl0YW50IG5hdGlvbmFsaXN0cyBsaWtlIEFsaSBicm90aGVycyAsTWF1bGFuYSBBemFkICxldGMuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgQnJpdGFpbidzIHJlZnVzYWwgdG8gaGVscCBUdXJrZXkgKHJ1bGVkIGJ5IHRoZSBLaGFsaWZhIHdobyBjbGFpbWVkIHJlbGlnaW8tcG9saXRpY2FsIGxlYWRlcnNoaXAgb2YgYWxsIE11c2xpbXMpIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QgVGhlIHJlZnVzYWwgb2YgdGhlIEJyaXRpc2ggZ292ZXJubWVudCBpbiBJbmRpYSB0byBzZXQgdXAgYSB1bml2ZXJzaXR5IGF0IEFsaWdhcmggd2l0aCBwb3dlcnMgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgdG8gYWZmaWxpYXRlIGNvbGxlZ2VzIGFsbCBvdmVyIEluZGlhIGFsc28gYWxpZW5hdGVkIHNvbWUgTXVzbGltcy4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 19,
      "question" : "In the context of Lucknow Pact, consider the following statements\n\t1. Congress refused Muslim league's position on separate electorates.\n\t2. Jointly presented demand for complete independence.\n\t3. Fixed proportion of seats for Muslims in the central and provincial legislature.Which of the above statements is/are provisions of the Lucknow pact?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gTHVja25vdyBwYWN0IDE5MTYgLiBBcyBwZXIgdGhlIEx1Y2tub3cgcGFjdCwgTXVzbGltIExlYWd1ZSBhbmQgdGhlIENvbmdyZXNzIGNhbWUgdG9nZXRoZXIgYW5kIHRoZXkgcHJlc2VudGVkIHNvbWUgY29tbW9uIGRlbWFuZHMgdG8gQnJpdGlzaCBnb3Zlcm5tZW50LiBOYXR1cmUgb2YgTHVja25vdyBwYWN0IDE5MTY6LSBUaGUgQ29uZ3Jlc3MgYWNjZXB0ZWQgdGhlIE11c2xpbSBMZWFndWUncyBwb3NpdGlvbiBvbiBzZXBhcmF0ZSBlbGVjdG9yYXRlcyB3aGljaCB3b3VsZCBjb250aW51ZSB0aWxsIGFueSBvbmUgY29tbXVuaXR5IGRlbWFuZGVkIGpvaW50IGVsZWN0b3JhdGVzLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBqb2ludCBkZW1hbmRzIHdlcmUgR292ZXJubWVudCBzaG91bGQgZGVjbGFyZSB0aGF0IGl0IHdvdWxkIGNvbmZlciBzZWxmIGdvdmVybm1lbnQgdG8gSW5kaWFucyBhdCBhbiBlYXJseSBkYXRlLiBDb21wbGV0ZSBJbmRlcGVuZGVuY2Ugd2FzIG5vdCBhIGRlbWFuZCBvZiBJTkMgdGlsbCBMYWhvcmUgc2Vzc2lvbiBpbiAxOTI5LiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBNdXNsaW1zIHdlcmUgYWxzbyBncmFudGVkIGEgZml4ZWQgcHJvcG9ydGlvbiBvZiBzZWF0cyBpbiB0aGUgbGVnaXNsYXR1cmVzIGF0IGFsbC1JbmRpYSBhbmQgcHJvdmluY2lhbCBsZXZlbHMuIEhlbmNlIHN0YXRlbWVudCAzIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements regarding the Indian council act ,1909\n\t1. First time established separate electorate for Muslims only\n\t2. Half of the members in the viceroy's executive council were to be Indian\n\t3. Sachidanand Sinha was the first Indian to be appointed to the viceroy's executive council.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIE1pbnRvIC0gTW9ybGV5IFJlZm9ybXMxOTA5IEFib3V0ICByZWZvcm1zIDotIFRoZSB2aWNlcm95LCBMb3JkIE1pbnRvLCBhbmQgdGhlIFNlY3JldGFyeSBvZiBTdGF0ZSBmb3IgSW5kaWEsIEpvaG4gTW9ybGV5LCBhZ3JlZWQgdGhhdCBzb21lIHJlZm9ybXMgd2VyZSBkdWUgc28gYXMgdG8gcGxhY2F0ZSB0aGUgTW9kZXJhdGVzIGFzIHdlbGwgYXMgdGhlIE11c2xpbXMuIE1vcmxleU1pbnRvIChvciBNaW50by1Nb3JsZXkpIFJlZm9ybXMgIGFsc28ga25vd24gYXMgdGhlIEluZGlhbiBDb3VuY2lscyBBY3Qgb2YgMTkwOS4gUHJvdmlzaW9uczotIEZvciB0aGUgZmlyc3QgdGltZSwgc2VwYXJhdGUgZWxlY3RvcmF0ZXMgZm9yIE11c2xpbXMgZm9yIGVsZWN0aW9uIHRvIHRoZSBjZW50cmFsIGNvdW5jaWwgd2FzIGVzdGFibGlzaGVkLWEgbW9zdCBkZXRyaW1lbnRhbCBzdGVwIGZvciBJbmRpYS5IZW5jZSBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBPbmx5IE9uZSBJbmRpYW4gd2FzIHRvIGJlIGFwcG9pbnRlZCB0byB0aGUgdmljZXJveSdzIGV4ZWN1dGl2ZSBjb3VuY2lsIC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBTYXR5ZW5kcmEgU2luaGEgd2FzIHRoZSBmaXJzdCBJbmRpYW4gdG8gYmUgYXBwb2ludGVkIGluIHZpY2Vyb3kncyBleGVjdXRpdmUgY291bmNpbCBpbiAxOTA5IGFuZCBub3QgU2FjaGlkYW5hbmQgU2luaGEuIEhlbmNlIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gU2FjaGlkYW5hbmQgU2luaGEgd2FzIHRoZSB0ZW1wb3JhcnkgcHJlc2lkZW50IG9mIGNvbnN0aXR1ZW50IGFzc2VtYmx5LiBIZSAgd2FzIHNlbGVjdGVkIGFzIHBlciBGcmVuY2ggcHJhY3RpY2UgYmVjYXVzZSBoZSB3YXMgZWxkZXN0IG1lbWJlciBpbiBjb25zdGl0dWVudCBhc3NlbWJseSAubGF0ZXIgUmFqZW5kcmEgUHJhc2FkIHdhcyBlbGVjdGVkIGFzIGl0cyBwcmVzaWRlbnQgLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements regarding Montagu-Chelmsford Reforms. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t1. Dyarchy system was introduced at the provincial government .\n\t2. Bicameral system was established at the provincial legislature.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTW9udGFndS1DaGVsbXNmb3JkIFJlZm9ybXMgMTkxOSBBZnRlciBNb250YWd1J3Mgc3RhdGVtZW50IG9mIEF1Z3VzdCAxOTE3LCB0aGUgZ292ZXJubWVudCBhbm5vdW5jZWQgZnVydGhlciBjb25zdGl0dXRpb25hbCByZWZvcm1zIGluIEp1bHkgMTkxOCwga25vd24gYXMgTW9udGFndS1DaGVsbXNmb3JkIG9yIE1vbnRmb3JkIFJlZm9ybXMuIEJhc2VkIG9uIHRoZXNlLCB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBBY3QsIDE5MTkgd2FzIGVuYWN0ZWQuIFByb3Zpc2lvbnMgb2YgTW9udC1Gb3JkIHJlZm9ybXM6LSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBQcm92aW5jaWFsIEdvdmVybm1lbnQtSW50cm9kdWN0aW9uIG9mIER5YXJjaHkgVGhlIEFjdCBpbnRyb2R1Y2VkIGR5YXJjaHkgZm9yIHRoZSBleGVjdXRpdmUgYXQgdGhlIGxldmVsIG9mIHRoZSBwcm92aW5jaWFsIGdvdmVybm1lbnQuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEV4ZWN1dGl2ZSBEeWFyY2h5LCBpLmUuLCBydWxlIG9mIHR3by1leGVjdXRpdmUgY291bmNpbGxvcnMgYW5kIHBvcHVsYXIgbWluaXN0ZXJzLXdhcyBpbnRyb2R1Y2VkLiBUaGUgZ292ZXJub3Igd2FzIHRvIGJlIHRoZSBleGVjdXRpdmUgaGVhZCBpbiB0aGUgcHJvdmluY2UuIFN1YmplY3RzIHdlcmUgZGl2aWRlZCBpbnRvIHR3byBsaXN0czogJ3Jlc2VydmVkJyB3aGljaCBpbmNsdWRlZCBzdWJqZWN0cyBzdWNoIGFzIGxhdyBhbmQgb3JkZXIsIGZpbmFuY2UsIGxhbmQgcmV2ZW51ZSwgaXJyaWdhdGlvbiwgZXRjLiwgYW5kICd0cmFuc2ZlcnJlZCcgc3ViamVjdHMgc3VjaCBhcyBlZHVjYXRpb24sIGhlYWx0aCwgbG9jYWwgZ292ZXJubWVudCwgaW5kdXN0cnksIGFncmljdWx0dXJlLCBleGNpc2UsIGV0Yy4gQ2VudHJhbCBHb3Zlcm5tZW50LVN0aWxsIHdpdGhvdXQgUmVzcG9uc2libGUgR292ZXJubWVudCBObyByZXNwb25zaWJsZSBnb3Zlcm5tZW50IHdhcyBlbnZpc2FnZWQgaW4gdGhlIGFjdCBmb3IgdGhlIGdvdmVybm1lbnQgYXQgdGhlIGFsbC1JbmRpYSBsZXZlbC4gQSBiaWNhbWVyYWwgYXJyYW5nZW1lbnQgd2FzIGludHJvZHVjZWQgYXQgdGhlIGNlbnRyYWwgbGVnaXNsYXR1cmUgLkl0IGluY2x1ZGVzIHRoZSBsb3dlciBob3VzZSBvciBDZW50cmFsIExlZ2lzbGF0aXZlIEFzc2VtYmx5IGFuZCB0aGUgdXBwZXIgaG91c2Ugb3IgQ291bmNpbCBvZiBTdGF0ZS4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following reforms were considered as 'The Sunless Dawn' by BalGangadhar Tilak",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWZ0ZXIgTW9udGFndSdzIHN0YXRlbWVudCBvZiBBdWd1c3QgMTkxNywgdGhlIGdvdmVybm1lbnQgYW5ub3VuY2VkIGZ1cnRoZXIgY29uc3RpdHV0aW9uYWwgcmVmb3JtcyBpbiBKdWx5IDE5MTgsIGtub3duIGFzIE1vbnRhZ3UtQ2hlbG1zZm9yZCBvciBNb250Zm9yZCBSZWZvcm1zLiBCYXNlZCBvbiB0aGVzZSwgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgQWN0LCAxOTE5IHdhcyBlbmFjdGVkLiBDb25ncmVzcyByZXNwb25zZSB0byBNb250YWd1LUNoZWxtc2ZvcmQgUmVmb3JtczE5MTkuIFRoZSBDb25ncmVzcyBpbiBhIHNwZWNpYWwgc2Vzc2lvbiBpbiBBdWd1c3QgMTkxOCBhdCBCb21iYXkgZGVjbGFyZWQgdGhlIHJlZm9ybXMgdG8gYmUgJ2Rpc2FwcG9pbnRpbmcnIGFuZCAndW5zYXRpc2ZhY3RvcnknIGFuZCBkZW1hbmRlZCBlZmZlY3RpdmUgc2VsZi1nb3Zlcm5tZW50IGluc3RlYWQuIFRoZSBNb250Zm9yZCByZWZvcm1zIHdlcmUgdGVybWVkICd1bndvcnRoeSBhbmQgZGlzYXBwb2ludGluZy1hIHN1bmxlc3MgZGF3bicgYnkgVGlsYWssIEFubmllIEJlc2FudCBmb3VuZCB0aGVtICd1bndvcnRoeSBvZiBFbmdsYW5kIHRvIG9mZmVyIGFuZCBJbmRpYSB0byBhY2NlcHQnLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Morley - Minto reforms",
        "option2" : "Woods dispatch",
        "option3" : "Indian council act 1892",
        "option4" : "Montagu-Chelmsford Reforms"
      }
    },
    {
      "index" : 23,
      "question" : "In the context of the modern history of India, the Disorder inquiry committee wasappointed for",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWZ0ZXIgdGhlIEphbGxpYW53YWxhIGJhZ2ggbWFzc2FjcmUgKEFwcmlsIDEzLCAxOTE5KSAsIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGFubm91bmNlZCB0aGUgZm9ybWF0aW9uIG9mIHRoZSBEaXNvcmRlcnMgSW5xdWlyeSBDb21taXR0ZWUgLiB3aGljaCBjYW1lIHRvIGJlIG1vcmUgd2lkZWx5IGFuZCB2YXJpb3VzbHkga25vd24gYXMgdGhlIEh1bnRlciBDb21taXR0ZWUvQ29tbWlzc2lvbiBhZnRlciB0aGUgbmFtZSBvZiBpdHMgY2hhaXJtYW4sIExvcmQgV2lsbGlhbSBIdW50ZXIuIFRoZSBwdXJwb3NlIG9mIHRoZSBjb21taXNzaW9uIHdhcyB0byAnaW52ZXN0aWdhdGUgdGhlIHJlY2VudCBkaXN0dXJiYW5jZXMgaW4gQm9tYmF5LCBEZWxoaSBhbmQgUHVuamFiLCBhZnRlciBKYWxsaWFud2FsYSBiYWdoIG1hc3NhY3JlLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Anti partition movement in Bengal",
        "option2" : "Jallianwala Bagh Massacre",
        "option3" : "Alipore conspiracy",
        "option4" : "Lahore conspiracy"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following pairs            Gandhian Movements                                       Unique feature    1. Champaran Satyagraha                            A.  First Civil Disobedience    2. Ahmedabad Mill Strike.                             B.  First Non-Cooperation    3. Kheda Satyagraha                                    C.  First Hunger strike    4. Rowlatt Satyagraha                                   D.  First mass - strikeHow many of the above pairs is/are correctly matched ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogR2FuZGhpJ3MgRWFybHkgQWN0aXZpc20gaW4gSW5kaWEgQ2hhbXBhcmFuIFNhdHlhZ3JhaGEgKDE5MTcpLUZpcnN0IENpdmlsIERpc29iZWRpZW5jZSAgQWhtZWRhYmFkIE1pbGwgU3RyaWtlICgxOTE4KSAtIEZpcnN0IEh1bmdlciBTdHJpa2UgS2hlZGEgU2F0eWFncmFoYSAoMTkxOCkuICAgICAgIC0gRmlyc3QgTm9uLUNvb3BlcmF0aW9uIFJvd2xhdHQgU2F0eWFncmFoYSAoMTkxOCkuICAgICAtICBGaXJzdCBtYXNzLXN0cmlrZQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one pair",
        "option2" : "Only two pairs",
        "option3" : "Only three pairs",
        "option4" : "All four pairs"
      }
    },
    {
      "index" : 1,
      "question" : "Attainment of Swaraj through extra constitutional mass struggle.\n\t2. Provincial congress committee were organised on linguistic basis.\n\t3. Nagpur Session of INC presided by C. Vijayaraghavachariar.. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liabilityWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZpcnN0IHNlc3Npb24gb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgYXR0ZW5kZWQgYnkgNzIgZGVsZWdhdGVzIGFuZCBwcmVzaWRlZCBvdmVyIGJ5IFdvbWVzaCBDaGFuZHJhIChvciBDaHVuZGVyKSBCb25uZXJqZWUuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBIZXJlYWZ0ZXIsIHRoZSBDb25ncmVzcyBtZXQgZXZlcnkgeWVhciBpbiBEZWNlbWJlciwgaW4gYSBkaWZmZXJlbnQgcGFydCBvZiB0aGUgY291bnRyeSBlYWNoIHRpbWUuIEFpbXMgYW5kIE9iamVjdGl2ZXMgb2YgdGhlIENvbmdyZXNzOi0gIEluaXRpYWxseSBjb21wbGV0ZSBpbmRlcGVuZGVuY2Ugd2FzIG5vdCB0aGUgbWFpbiBvZiBJTkMgLiBJdCBiZWNhbWUgdGhlIG1haW4gYWltIG9ubHkgYWZ0ZXIgTGFob3JlIHNlc3Npb24gMTkyOSAuICAgICAgICAgICAgIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIG1haW4gYWltcyBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIGluIHRoZSBpbml0aWFsIHN0YWdlIHdlcmUgdG86IChpKSBmb3VuZCBhIGRlbW9jcmF0aWMsIG5hdGlvbmFsaXN0IG1vdmVtZW50OyAoaWkpIHBvbGl0aWNpc2UgYW5kIHBvbGl0aWNhbGx5IGVkdWNhdGUgcGVvcGxlOyAoaWlpKSBlc3RhYmxpc2ggdGhlIGhlYWRxdWFydGVycyBmb3IgYSBtb3ZlbWVudDsgKGl2KSBwcm9tb3RlIGZyaWVuZGx5IHJlbGF0aW9ucyBhbW9uZyBuYXRpb25hbGlzdCBwb2xpdGljYWwgd29ya2VycyBmcm9tIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgY291bnRyeTsgKHYpIGRldmVsb3AgYW5kIHByb3BhZ2F0ZSBhbiBhbnRpLWNvbG9uaWFsIG5hdGlvbmFsaXN0IGlkZW9sb2d5OyAodmkpIGZvcm11bGF0ZSBhbmQgcHJlc2VudCBwb3B1bGFyIGRlbWFuZHMgYmVmb3JlIHRoZSBnb3Zlcm5tZW50IHdpdGggYSB2aWV3IHRvIHVuaWZ5aW5nIHRoZSBwZW9wbGUgb3ZlciBhIGNvbW1vbiBlY29ub21pYyBhbmQgcG9saXRpY2FsIHByb2dyYW1tZTsgKHZpaSkgZGV2ZWxvcCBhbmQgY29uc29saWRhdGUgYSBmZWVsaW5nIG9mIG5hdGlvbmFsIHVuaXR5IGFtb25nIHBlb3BsZSBpcnJlc3BlY3RpdmUgb2YgcmVsaWdpb24sIGNhc3RlLCBvciBwcm92aW5jZS4gKHZpaWkpIGNhcmVmdWxseSBwcm9tb3RlIGFuZCBudXJ0dXJlIEluZGlhbiBuYXRpb25ob29kLiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 26,
      "question" : "Which of the following leaders associated with the Non-cooperation movement\n\t1. Alluri Sitaram Raju\n\t2. Duggirala Gopalkrishnayya\n\t3. Basanti Debi\n\t4. Nabin Chandra BardoloiSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRm9sbG93aW5nIGxlYWRlcnMgd2VyZSBhc3NvY2lhdGVkIHdpdGggTkNNIDotIEFsbHVyaSBTaXRhcmFtIFJhanUgbGVkIHRoZSB0cmliYWxzIGluIEFuZGhyYSBhbmQgY29tYmluZWQgdGhlaXIgZGVtYW5kcyB3aXRoIHRob3NlIG9mIHRoZSBOb24tQ29vcGVyYXRpb24gTW92ZW1lbnQuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IER1Z2dpcmFsYSBHb3BhbGFrcmlzaG5heXlhIGluc3BpcmVkIHRoZSBpbmhhYml0YW50cyBvZiB0aGUgc21hbGwgdG93biBvZiBDaGlyYWxhLVBhcmFsYSBpbiBHdW50dXIgZGlzdHJpY3QgdG8gcmVzaXN0IHRoZSBnb3Zlcm5tZW50J3MgcGxhbiB0byBtYWtlIHRoZSB0b3duIGEgbXVuaWNpcGFsaXR5IGFuZCB0aGUgaGlrZSBpbiBsb2NhbCB0YXhlcy4gQmFzYW50aSBEZWJpLCB3aWZlIG9mIEMuUi4gRGFzLCB3YXMgb25lIG9mIHRoZSBmaXJzdCB3b21lbiB2b2x1bnRlZXJzIHRvIGNvdXJ0IGFycmVzdCBpbiAxOTIxIE5hYmluIENoYW5kcmEgQmFyZG9sb2ksIGZyZWVkb20gZmlnaHRlciBhbmQgcG9saXRpY2FsIGxlYWRlciBmcm9tIEFzc2FtLCBmYXZvdXJlZCBub24tIGNvb3BlcmF0aW9uLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1, 2 and 3 only",
        "option3" : "3 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following leaders were associated with the Anti Non-CooperationAssociation.\n\t1. Purushottam Thakurdas\n\t2. Cowasji Jehangar\n\t3. Jamnadas Dwarakadas\n\t4. Motilal TejawatSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW50aS1Ob24tQ29vcGVyYXRpb24gQXNzb2NpYXRpb24gaW4gMTkyMDogUHVydXNob3R0YW1kYXMgVGhha3VyZGFzLCBKYW1uYWRhcyBEd2Fya2FkYXMsIENvd2FzamkgSmVoYW5naXIsIFBocm96ZSBTZXRobmEsIGFuZCBTZXRhbHZhZCwgYWxsIG9mIHdob20gYmVsb25nZWQgdG8gdGhlIGluZHVzdHJpYWxpc3Qgc2VjdGlvbiwgbGF1bmNoZWQgYW4gQW50aS1Ob24tQ29vcGVyYXRpb24gQXNzb2NpYXRpb24gaW4gMTkyMC4gSGVuY2UgZmlyc3QgdGhyZWUgb3B0aW9ucyBhcmUgY29ycmVjdC4gTW90aWxhbCBUZWphd2F0IG9yZ2FuaXNlZCB0aGUgQmhpbHMsIGFuZCB0aGUgQmhpbCBtb3ZlbWVudCBzdHJlbmd0aGVuZWQgdGhlIG5vbi1jb29wZXJhdGlvbiBhY3Rpdml0aWVzLiBIZW5jZSBvcHRpb24gNCBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only",
        "option2" : "2 and 3 only",
        "option3" : "1 ,2 and 3 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 28,
      "question" : "Indian National Liberal Federation was founded by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOA==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWFuIE5hdGlvbmFsIExpYmVyYWwgRmVkZXJhdGlvbiAxOTIwOiBXaGVuIEdhbmRoaSBhc3N1bWVkIGxlYWRlcnNoaXAgb2YgSU5DIGFuZCBsYXVuY2hlZCBOb24gY29vcGVyYXRpb24gbW92ZW1lbnQuIFNldmVyYWwgbGVhZGVyIGxlZnQgY29uZ3Jlc3MgbGlrZSBNdWhhbW1hZCBBbGkgSmlubmFoLCBBbm5pZSBCZXNhbnQsIEcuUy4gS2hhcnBhZGUsIGFuZCBCLkMuIFBhbC4gQXQgdGhpcyBzdGFnZSBTdXJlbmRyYW5hdGggQmFuZXJqZWEgZm91bmRlZCB0aGUgSW5kaWFuIE5hdGlvbmFsIExpYmVyYWwgRmVkZXJhdGlvbiBhbmQgcGxheWVkIGEgbWlub3Igcm9sZSBpbiBuYXRpb25hbCBwb2xpdGljcyBoZW5jZWZvcndhcmQu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Maulana Azad",
        "option2" : "Surendranath Banerjee",
        "option3" : "Mahatma Gandhi",
        "option4" : "Virendranath Chattopadhyay"
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements\n\t1. Swarajists adopted policy of consistent obstruction within legislative council.\n\t2. The Responsivists among Swarajists wanted to protect Hindu interests.\n\t3. Motilal Nehru was one of the leader from the Responsivists group.Which of the statements given above is/are correct?. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQy5SLiBEYXMgYW5kIE1vdGlsYWwgTmVocnUgZm9ybWVkIHRoZSBjb25ncmVzcy1LaGlsYWZhdCBTd2FyYWp5YSBQYXJ0eSBvciBzaW1wbHkgU3dhcmFqaXN0IFBhcnR5LCB3aXRoIEMuUi4gRGFzIGFzIHRoZSBwcmVzaWRlbnQgYW5kIE1vdGlsYWwgTmVocnUgYXMgb25lIG9mIHRoZSBzZWNyZXRhcmllcy4gUG9saWNpZXM6LSBUaGUgU3dhcmFqaXN0cyB3b3VsZCBwcmVzZW50IHRoZSBuYXRpb25hbGlzdCBkZW1hbmQgb2Ygc2VsZi1nb3Zlcm5tZW50IGluIGNvdW5jaWxzLiBJZiB0aGlzIGRlbWFuZCB3YXMgcmVqZWN0ZWQsIHRoZXkgd291bGQgYWRvcHQgYSBwb2xpY3kgb2YgdW5pZm9ybSwgY29udGludW91cywgYW5kIGNvbnNpc3RlbnQgb2JzdHJ1Y3Rpb24gd2l0aGluIHRoZSBjb3VuY2lscyB0byBtYWtlIGdvdmVybmFuY2UgdGhyb3VnaCBjb3VuY2lscyBpbXBvc3NpYmxlLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBDLiBUaGUgUmVzcG9uc2l2aXN0cyBhbW9uZyBTd2FyYWppc3RzLUxhbGEgTGFqcGF0IFJhaSwgTWFkYW4gTW9oYW4gTWFsYXZpeWEsIGFuZCBOLiBLZWxrYXItYWR2b2NhdGVkIGNvb3BlcmF0aW9uIHdpdGggdGhlIGdvdmVybm1lbnQgLiBCZXNpZGVzLCB0aGV5IGFsc28gd2FudGVkIHRvIHByb3RlY3QgdGhlIHNvLWNhbGxlZCBIaW5kdSBpbnRlcmVzdHMuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFJlc3BvbnNpdmlzdHMgbGVhZGVycyBhY2N1c2VkIE1vdGlsYWwgTmVocnUsIHdobyBkaWQgbm90IGZhdm91ciBqb2luaW5nIHRoZSBjb3VuY2lsLCBvZiBiZWluZyBhbnRpLUhpbmR1IGV2ZW4gYXMgTXVzbGltIGNvbW11bmFsaXN0cyBjYWxsZWQgdGhlIFN3YXJhamlzdHMgYW50aS1NdXNsaW0uIEhlbmNlIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 only",
        "option3" : "1 and 2 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements\n\t1. The communist party was formed in India by M.N.Roy .\n\t2. Communist leaders like S.A.Dange ,Muzaffar Ahmed were associated with Kanpur BolshevikConspiracy Case .Which of the statements given above is/are incorrect?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIENvbW11bmlzdCBQYXJ0eSBvZiBJbmRpYSAoQ1BJKTogQ1BJIHdhcyBmb3JtZWQgaW4gMTkyMCBpbiBUYXNoa2VudCAobm93LCB0aGUgY2FwaXRhbCBvZiBVemJla2lzdGFuKSBieSBNLk4uIFJveSwgQWJhbmkgTXVraGVyamksIGFuZCBvdGhlcnMgYWZ0ZXIgdGhlIHNlY29uZCBDb25ncmVzcyBvZiBDb21taW50ZXJuLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIE0uTi4gUm95IHdhcyBhbHNvIHRoZSBmaXJzdCB0byBiZSBlbGVjdGVkIHRvIHRoZSBsZWFkZXJzaGlwIG9mIENvbW1pbnRlcm4uIEluIDE5MjQsIG1hbnkgY29tbXVuaXN0cy1TLkEuIERhbmdlLCBNdXphZmZhciBBaG1lZCwgU2hhdWthdCBVc21hbmksIE5hbGluaSBHdXB0YS13ZXJlIGphaWxlZCBpbiB0aGUgS2FucHVyIEJvbHNoZXZpayBDb25zcGlyYWN5IENhc2UuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements\n\t1. Left wing within congress was represented by Jawahar Nehru and Subhash Bose .\n\t2. Alipore conspiracy case was associated with the communist movement in India .Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGVmdCBtb3ZlbWVudHMgaW4gSW5kaWEgSWRlYXMgb2YgTWFyeCBhbmQgU29jaWFsaXN0IHRoaW5rZXJzIGluc3BpcmVkIG1hbnkgZ3JvdXBzIHRvIGNvbWUgaW50byBleGlzdGVuY2UgYXMgc29jaWFsaXN0cyBhbmQgY29tbXVuaXN0cy4gVGhlc2UgaWRlYXMgYWxzbyByZXN1bHRlZCBpbiB0aGUgcmlzZSBvZiBhIGxlZnQtd2luZyB3aXRoaW4gdGhlIENvbmdyZXNzLCByZXByZXNlbnRlZCBieSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBKYXdhaGFybGFsIE5laHJ1IGFuZCBTdWJoYXNoIENoYW5kcmEgQm9zZS4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlc2UgeW91bmcgbmF0aW9uYWxpc3RzLCBpbnNwaXJlZCBieSB0aGUgU292aWV0IFJldm9sdXRpb24gYW5kIGRpc3NhdGlzZmllZCB3aXRoIEdhbmRoaWFuIGlkZWFzIGFuZCBwb2xpdGljYWwgcHJvZ3JhbW1lLCBiZWdhbiBhZHZvY2F0aW5nIHJhZGljYWwgc29sdXRpb25zIGZvciBlY29ub21pYywgcG9saXRpY2FsLCBhbmQgc29jaWFsIGlsbHMgb2YgdGhlIGNvdW50cnkuIEFsaXBvcmUgY29uc3BpcmFjeSAxOTA4IFRoZSB3aG9sZSBBbnVzaGlsYW4gZ3JvdXAgd2FzIGFycmVzdGVkLCBpbmNsdWRpbmcgdGhlIEdob3NoIGJyb3RoZXJzLCBBdXJvYmluZG8gYW5kIEJhcmluZHJhLCB3aG8gd2VyZSB0cmllZCBpbiB0aGUgQWxpcG9yZSBjb25zcGlyYWN5IGNhc2UuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIEdob3NoIGJyb3RoZXJzIHdlcmUgY2hhcmdlZCB3aXRoICdjb25zcGlyYWN5JyBvciAnd2FnaW5nIHdhciBhZ2FpbnN0IHRoZSBLaW5nJyAtIHRoZSBlcXVpdmFsZW50IG9mIGhpZ2ggdHJlYXNvbiBhbmQgcHVuaXNoYWJsZSB3aXRoIGRlYXRoIGJ5IGhhbmdpbmcuICBNZWVydXQgQ29uc3BpcmFjeSBjYXNlIDotIEluIDE5MjksIHRoZSBnb3Zlcm5tZW50IGNyYWNrZG93biBvbiBjb21tdW5pc3RzIHJlc3VsdGVkIGluIHRoZSBhcnJlc3QgYW5kIHRyaWFsIG9mIDMxIGxlYWRpbmcgY29tbXVuaXN0cywgdHJhZGUgdW5pb25pc3RzLCBhbmQgbGVmdC13aW5nIGxlYWRlcnM7IHRoZXkgd2VyZSB0cmllZCBhdCBNZWVydXQgaW4gdGhlIGZhbW91cyBNZWVydXQgY29uc3BpcmFjeSBjYXNlLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 32,
      "question" : "Which of the following leaders were associated with Surya Sens Chittagong armedgroup?\n\t1. Pritilata Waddedar\n\t2. Kalpana Dutt\n\t3. Santi Ghosh\n\t4. Bina Das\n\t5. Suniti ChandheriSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ2hpdHRhZ29uZyBBcm1vdXJ5IFJhaWQgKEFwcmlsIDE5MzApIFN1cnlhIFNlbiBoYWQgcGFydGljaXBhdGVkIGluIHRoZSBOb24tQ29vcGVyYXRpb24gTW92ZW1lbnQgYW5kIGhhZCBiZWNvbWUgYSB0ZWFjaGVyIGluIHRoZSBuYXRpb25hbCBzY2hvb2wgaW4gQ2hpdHRhZ29uZy4gU3VyeWEgU2VuIGRlY2lkZWQgdG8gb3JnYW5pc2UgYW4gYXJtZWQgcmViZWxsaW9uIGFsb25nIHdpdGggaGlzIGFzc29jaWF0ZXMuVGhlIHJhaWQgd2FzIGNvbmR1Y3RlZCBpbiBBcHJpbCAxOTMwIGFuZCBpbnZvbHZlZCA2NSBhY3RpdmlzdHMgdW5kZXIgdGhlIGJhbm5lciBvZiBJbmRpYW4gUmVwdWJsaWNhbiBBcm15LUNoaXR0YWdvbmcgQnJhbmNoIFRoZXJlIHdhcyBhIGxhcmdlLXNjYWxlIHBhcnRpY2lwYXRpb24gb2YgeW91bmcgd29tZW4uIFByb21pbmVudCB3b21lbiByZXZvbHV0aW9uYXJpZXMgaW5jbHVkZWQgUHJpdGlsYXRhIFdhZGRlZGFyLCBLYWxwYW5hIER1dHQsU2FudGkgR2hvc2gsIFN1bml0aSBDaGFuZGhlcmksIGFuZCBCaW5hIERhcyAuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEhlbmNlIGFsbCBvZiBhYm92ZSBvcHRpb25zIGFyZSBjb3JyZWN0Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, and 4 only",
        "option2" : "2, 3 and 5 only",
        "option3" : "1, 3 and 5 only",
        "option4" : "1, 2, 3, 4 and 5"
      }
    },
    {
      "index" : 33,
      "question" : "'The Philosophy of the Bomb' book was written by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZhbW91cyBzdGF0ZW1lbnQgb2YgdGhlIHJldm9sdXRpb25hcnkgcG9zaXRpb24gaXMgY29udGFpbmVkIGluIHRoZSBib29rIFRoZSBQaGlsb3NvcGh5IG9mIHRoZSBCb21iIHdyaXR0ZW4gYnkgQmhhZ3dhdGkgQ2hhcmFuIFZvaHJhLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Batukeshwer Dutt",
        "option2" : "Bhagwati Charan Vohra .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option3" : "Sachin Sanyal",
        "option4" : "Bhagat Singh"
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following pairs         Committee                                          Purpose    1. Lee commission                  A. Civil services reform    2. Muddiman committee.         B. Indian agriculture and rural economy    3. Linlithgow commission       C. Working of the constitutionHow many of the above pairs is/are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIExlZSBDb21taXNzaW9uOi0gUm95YWwgQ29tbWlzc2lvbiBvbiB0aGUgU3VwZXJpb3IgQ2l2aWwgU2VydmljZXMgaW4gSW5kaWEuIEl0ICB3YXMgYXBwb2ludGVkIGluIDE5MjMgdG8gbG9vayBpbnRvIHRoZSBvcmdhbmlzYXRpb24gYW5kIGdlbmVyYWwgY29uZGl0aW9ucyBvZiBzZXJ2aWNlIGFzIHdlbGwgYXMgdGhlIG1ldGhvZHMgb2YgcmVjcnVpdG1lbnQgZm9yIEV1cm9wZWFucyBhbmQgSW5kaWFucyBpbiB0aGUgY2l2aWwgc2VydmljZXMuIFRoZSBNdWRkaW1hbiBDb21taXR0ZWU6LSBvZmZpY2lhbGx5IGtub3duIGFzIHRoZSBSZXBvcnQgb2YgdGhlIFJlZm9ybXMgRW5xdWlyeSBDb21taXR0ZWUsIHdhcyBzZXQgdXAgaW4gMTkyNCwgbWFpbmx5IHRvIGxvb2sgaW50byB0aGUgd29ya2luZyBvZiB0aGUgQ29uc3RpdHV0aW9uIGFzIHNldCB1cCBpbiAxOTIxIHVuZGVyIHRoZSBBY3Qgb2YgMTkxOS4gdGhlIExpbmxpdGhnb3cgQ29tbWlzc2lvbiA6LSBzZXQgdXAgaW4gMTkyNyAsIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IG9mZmljaWFsbHkgdGhlIFJveWFsIENvbW1pc3Npb24gb2YgQWdyaWN1bHR1cmUgd2FzIHNldCB1cCB0byBleGFtaW5lIGFuZCByZXBvcnQgdGhlIGNvbmRpdGlvbiBvZiBJbmRpYSdzIGFncmljdWx0dXJhbCBhbmQgcnVyYWwgZWNvbm9teS4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one pair",
        "option2" : "Only two pairs",
        "option3" : "All three pairs",
        "option4" : "None of the pairs"
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements regarding Simon Commission\n\t1. Commission recommended establishing the Consultative Council of Greater India.\n\t2. Congress along with the Unionists in Punjab and Justice party in the south boycotted Simoncommission.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2ltb24gQ29tbWlzc2lvbjogQW4gYWxsLXdoaXRlLCBzZXZlbi1tZW1iZXIgSW5kaWFuIFN0YXR1dG9yeSBDb21taXNzaW9uLCBwb3B1bGFybHkga25vd24gYXMgdGhlIFNpbW9uMS4gQ29tbWlzc2lvbiAoYWZ0ZXIgdGhlIG5hbWUgb2YgaXRzIGNoYWlybWFuLCBTaXIgSm9obiBTaW1vbiksIHdhcyBzZXQgdXAgYnkgdGhlIEJyaXRpc2ggZ292ZXJubWVudCB1bmRlciBTdGFubGV5IEJhbGR3aW4ncyBwcmltZSBtaW5pc3RlcnNoaXAgb24gTm92ZW1iZXIgOCwgMTkyNyBpdCBzdWdnZXN0ZWQgdGhhdCBhIENvbnN1bHRhdGl2ZSBDb3VuY2lsIG9mIEdyZWF0ZXIgSW5kaWEgc2hvdWxkIGJlIGVzdGFibGlzaGVkLCB3aGljaDIuIHNob3VsZCBpbmNsdWRlIHJlcHJlc2VudGF0aXZlcyBvZiBib3RoIHRoZSBCcml0aXNoIHByb3ZpbmNlcyBhcyB3ZWxsIGFzIHByaW5jZWx5IHN0YXRlcy4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdCBDb25ncmVzcyBhbmQgTXVzbGltcyBsZWFndWUgYm95Y290dGVkIGNvbW1pc3Npb24uIEJ1dCBTb21lIG90aGVycywgc3VjaCBhcyB0aGUzLiBVbmlvbmlzdHMgaW4gUHVuamFiIGFuZCB0aGUgSnVzdGljZSBQYXJ0eSBpbiB0aGUgc291dGgsIGRlY2lkZWQgbm90IHRvIGJveWNvdHQgdGhlIGNvbW1pc3Npb24uIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 36,
      "question" : "Nehru report prepared by a subcommittee under chairmanship of Motilal Nehru,which of the following were members of committee?\n\t1. G.R. Pradhan\n\t2. Subhash Bose\n\t3. B. R. Ambedkar\n\t4. Tej Bahadur Sapru\n\t5. Mangal Singh\n\t6. Rajendra PrasadSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmVocnUgcmVwb3J0IDE5Mjg6IEl0IHdhcyBhbiBhdHRlbXB0IHRvIGFuc3dlciB0aGUgTG9yZCBCaXJrZW5oZWFkJ3MgY2hhbGxlbmdlIGZvciBtYWtpbmcgb3VyIG93biBjb25zdGl0dXRpb24uIEFzIHJlc3BvbnNlIHRvIGhpcyBjaGFsbGVuZ2UsIEFsbCBQYXJ0aWVzIENvbmZlcmVuY2UgbWV0IGluIEZlYnJ1YXJ5IDE5MjggYW5kIGFwcG9pbnRlZCBhIHN1YmNvbW1pdHRlZSB1bmRlciB0aGUgY2hhaXJtYW5zaGlwIG9mIE1vdGlsYWwgTmVocnUgdG8gZHJhZnQgYSBjb25zdGl0dXRpb24uIFRoaXMgd2FzIHRoZSBmaXJzdCBtYWpvciBhdHRlbXB0IGJ5IHRoZSBJbmRpYW5zIHRvIGRyYWZ0IGEgY29uc3RpdHV0aW9uYWwgZnJhbWV3b3JrIGZvciB0aGUgY291bnRyeS4gVGhlIGNvbW1pdHRlZSBpbmNsdWRlZCBUZWogQmFoYWR1ciBTYXBydSwgU3ViaGFzIENoYW5kcmEgQm9zZSwgTS5TLiBBbmV5LCBNYW5nYWwgU2luZ2gsIEFsaSBJbWFtLCBTaHVhaWIgUXVyZXNoaSwgYW5kIEcuUi4gUHJhZGhhbiBhcyBpdHMgbWVtYmVycy4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-3-4-5",
        "option2" : "1-2-4-5",
        "option3" : "2-3-5-6",
        "option4" : "3-4-5-6"
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements\n\t1. Nehru report recommended fundamental rights and complete independence\n\t2. Separate electorate was one of the main point in Jinah's 14 points.. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t3. Delhi proposal was response of Muslim league to Nehru report which was accepted by Congressin Madras session.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmVocnUgcmVwb3J0IDE5Mjg6IEZpcnN0IEluZGlhbiBlZmZvcnQgdG8gZHJhZnQgY29uc3RpdHV0aW9uYWwgc2NoZW1lLiBSZWNvbW1lbmRlZCBkb21pbmlvbiBzdGF0dXMgYW5kIG5vdCBjb21wbGV0ZSBpbmRlcGVuZGVuY2UuIEpvaW50IGVsZWN0b3JhdGUgbGluZ3Vpc3RpYyBwcm92aW5jZXMgMTkgZnVuZGFtZW50YWwgcmlnaHRzICAgSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBKaW5haCdzIDE0IHBvaW50cyA6LSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBKaW5uYWggaW4gTWFyY2ggMTkyOSBnYXZlIDE0IHBvaW50cyB3aGljaCB3ZXJlIHRvIGJlY29tZSB0aGUgYmFzaXMgb2YgYWxsIGZ1dHVyZSBwcm9wYWdhbmRhIG9mIHRoZSBNdXNsaW0gTGVhZ3VlLiBzb21lIG9mIHRoZSBwb2ludHMgd2VyZSBhcyBmb2xsb3dzLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 1,
      "question" : "Complete independence became aim of congress\n\t2. It was presided by Jawahar Nehru\n\t3. INC supported Round table conferences\n\t4. Swarajya Day celebrated on 15th august 1930Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZpcnN0IHNlc3Npb24gb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgYXR0ZW5kZWQgYnkgNzIgZGVsZWdhdGVzIGFuZCBwcmVzaWRlZCBvdmVyIGJ5IFdvbWVzaCBDaGFuZHJhIChvciBDaHVuZGVyKSBCb25uZXJqZWUuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBIZXJlYWZ0ZXIsIHRoZSBDb25ncmVzcyBtZXQgZXZlcnkgeWVhciBpbiBEZWNlbWJlciwgaW4gYSBkaWZmZXJlbnQgcGFydCBvZiB0aGUgY291bnRyeSBlYWNoIHRpbWUuIEFpbXMgYW5kIE9iamVjdGl2ZXMgb2YgdGhlIENvbmdyZXNzOi0gIEluaXRpYWxseSBjb21wbGV0ZSBpbmRlcGVuZGVuY2Ugd2FzIG5vdCB0aGUgbWFpbiBvZiBJTkMgLiBJdCBiZWNhbWUgdGhlIG1haW4gYWltIG9ubHkgYWZ0ZXIgTGFob3JlIHNlc3Npb24gMTkyOSAuICAgICAgICAgICAgIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIG1haW4gYWltcyBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIGluIHRoZSBpbml0aWFsIHN0YWdlIHdlcmUgdG86IChpKSBmb3VuZCBhIGRlbW9jcmF0aWMsIG5hdGlvbmFsaXN0IG1vdmVtZW50OyAoaWkpIHBvbGl0aWNpc2UgYW5kIHBvbGl0aWNhbGx5IGVkdWNhdGUgcGVvcGxlOyAoaWlpKSBlc3RhYmxpc2ggdGhlIGhlYWRxdWFydGVycyBmb3IgYSBtb3ZlbWVudDsgKGl2KSBwcm9tb3RlIGZyaWVuZGx5IHJlbGF0aW9ucyBhbW9uZyBuYXRpb25hbGlzdCBwb2xpdGljYWwgd29ya2VycyBmcm9tIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgY291bnRyeTsgKHYpIGRldmVsb3AgYW5kIHByb3BhZ2F0ZSBhbiBhbnRpLWNvbG9uaWFsIG5hdGlvbmFsaXN0IGlkZW9sb2d5OyAodmkpIGZvcm11bGF0ZSBhbmQgcHJlc2VudCBwb3B1bGFyIGRlbWFuZHMgYmVmb3JlIHRoZSBnb3Zlcm5tZW50IHdpdGggYSB2aWV3IHRvIHVuaWZ5aW5nIHRoZSBwZW9wbGUgb3ZlciBhIGNvbW1vbiBlY29ub21pYyBhbmQgcG9saXRpY2FsIHByb2dyYW1tZTsgKHZpaSkgZGV2ZWxvcCBhbmQgY29uc29saWRhdGUgYSBmZWVsaW5nIG9mIG5hdGlvbmFsIHVuaXR5IGFtb25nIHBlb3BsZSBpcnJlc3BlY3RpdmUgb2YgcmVsaWdpb24sIGNhc3RlLCBvciBwcm92aW5jZS4gKHZpaWkpIGNhcmVmdWxseSBwcm9tb3RlIGFuZCBudXJ0dXJlIEluZGlhbiBuYXRpb25ob29kLiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 4 only",
        "option2" : "1 and 2 only",
        "option3" : "3 and 4 only",
        "option4" : "1 and 4 only"
      }
    },
    {
      "index" : 40,
      "question" : "Rise of new radical ideas like socialism in India is reflected through emergence ofwhich of the following groups\n\t1. Punjab Naujawan Bharat Sabha\n\t2. Workers and Peasants parties\n\t3. Hindustani Sewa DalSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWZ0ZXIgbm9uLWNvb3BlcmF0aW9uIG1vdmVtZW50cyBuZXcgdHJlbmRzIG9mIGlkZWFzIGxpa2Ugc29jaWFsaXNtLCBjb21tdW5pc20gYW5kIG5ldyBncm91cHMgbGlrZSB5b3V0aCB3aW5ncyAsIGxhYm91ciB1bmlvbiAsIHRyYWRlIHVuaW9uICwgcGVhc2FudHMgZ3JvdXBzIGV0YyBlbWVyZ2VkLiAgSXQgcHJvdmlkZWQgYSBmZXJ0aWxlIGdyb3VuZCBmb3IgdGhlIGdlcm1pbmF0aW9uIGFuZCBzcHJlYWQgb2YgbmV3IHJhZGljYWwgaWRlYXMgb2Ygc29jaWFsaXNtIGluIEluZGlhIC4gU29jaWFsaXNtIHJlZmxlY3RlZCBpbiB0aGUgZW1lcmdlbmNlIG9mIGdyb3VwcyBzdWNoIGFzIHRoZSBQdW5qYWIgTmF1amF3YW4gQmhhcmF0IFNhYmhhLCBXb3JrZXJzJyBhbmQgUGVhc2FudHMnIFBhcnRpZXMgYW5kIEhpbmR1c3RhbmkgU2V3YSBEYWwgKEthcm5hdGFrYSkuIEhlbmNlIG9wdGlvbiBDIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 3 only .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability"
      }
    },
    {
      "index" : 41,
      "question" : "The Vandemataram Movement in the Andhra region, was mainly associated with:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHN0cnVnZ2xlIHRoYXQgdW5mb2xkZWQgY2FtZSB0byBiZSBrbm93biBhcyB0aGUgU3dhZGVzaGkgbW92ZW1lbnQsIHN0cm9uZ2VzdCBpbiBCZW5nYWwgYnV0IHdpdGggZWNob2VzIGVsc2V3aGVyZSB0b28gLSBpbiBkZWx0YWljIEFuZGhyYSBmb3IgaW5zdGFuY2UsIGl0IHdhcyBrbm93biBhcyB0aGUgVmFuZGVtYXRhcmFtIE1vdmVtZW50LiBNZWV0aW5ncyB3ZXJlIGJlaW5nIGhlbGQgaW4gc3ltcGF0aHkgd2l0aCBCZW5nYWwgaW4gQW5kaHJhIGRlbHRhIHRvd25zIGxpa2UgUmFqYW11bmRocnksIEtha2luYWRhLCBhbmQgTWFzdWxpcGF0YW0gZnJvbSAxOTA2IG9ud2FyZHMsIGFuZCB3aGF0IGhhZCBjb21lIHRvIGJlIGNhbGxlZCB0aGUgVmFuZGVtYXRhcmFtIG1vdmVtZW50IHJlY2VpdmVkIGEgbWFqb3IgZmlsbGlwIGZyb20gQmlwaW4gUGFsJ3MgdG91ciBpbiBBcHJpbCAxOTA3IGF0IHRoZSBpbnZpdGF0aW9uIG9mIE0uIEtyaXNobmEgUmFvLiBSZXByZXNzaXZlIG1lYXN1cmVzIGFnYWluc3QgUmFqYW11bmRocnkgc3R1ZGVudHMgZm9yIHdlYXJpbmcgVmFuZGVtYXRhcmFtIGJhZGdlcyBhbmQgYXR0ZW5kaW5nIFBhbCdzIG1lZXRpbmdzIGxlZCB0byBhIHN0dWRlbnQgc3RyaWtlIGZvbGxvd2VkIGJ5IGEgbW92ZW1lbnQgJ3RvIHN0YXJ0IG5hdGlvbmFsIHNjaG9vbHMgaW4gQW5kaHJhLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Swadeshi Movement, 1905",
        "option2" : "Non-Cooperation Movement, 1921",
        "option3" : "Civil Disobedience Movement, 1932",
        "option4" : "Quit India Movement, 1942"
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following statements regarding Madame Cama:\n\t1. She started the journal 'Bande Mataram'.\n\t2. unfurled the flag of free India at the Stuttgart Congress of the Second International in August\n\t7. 190Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gTWFkYW1lIENhbWEgaXMga25vd24gYXMgdGhlICdNb3RoZXIgb2YgSW5kaWFuIFJldm9sdXRpb24nLiBTaGUgd2FzIG1hcnJpZWQgdG8gUnVzdG9tIENhbWEsIGEgd2VhbHRoeSBsYXd5ZXIgYmFzZWQgaW4gQm9tYmF5LiBIYXZpbmcgd29ya2VkIGFzIGEgc29jaWFsIHdvcmtlciBkdXJpbmcgdGhlIEJvbWJheSBQbGFndWUgZXBpZGVtaWMgaW4gMTg5Nywgc2hlIGJlY2FtZSBpbGwgaGVyc2VsZiBhbmQgd2FzIHNlbnQgdG8gQnJpdGFpbiBpbiAxOTAxLzIgZm9yIHRyZWF0bWVudC4gSW4gMTkwNywgc2hlIGF0dGVuZGVkIHRoZSBJbnRlcm5hdGlvbmFsIFNvY2lhbGlzdCBDb25ncmVzcyBhdCBTdHV0dGdhcnQuIENhbWEgYWRkcmVzc2VkIHRoZSBkZWxlZ2F0ZXMgYXQgU3R1dHRnYXJ0IGFuZCB1bmZvbGRlZCB0aGUgSW5kaWFuIFRyaWNvbG91ciBGbGFnIChncmVlbiwgeWVsbG93IGFuZCByZWQpIHdpdGggQmFuZGUgTWF0YXJhbSB3cml0dGVuIG9uIHRoZSBtaWRkbGUuIFRoaXMgd2FzIHRoZSBmaXJzdCB0aW1lIGFuIEluZGlhbiBmbGFnIHdhcyBkaXNwbGF5ZWQgaW4gYSBmb3JlaWduIGNvdW50cnkgYW5kIHdhcyBwYXJ0IG9mIHRoZSB0ZW1wbGF0ZSBmb3IgdGhlIHRyaWNvbG91ciBhZG9wdGVkIGJ5IHRoZSBJbmRpYW4gbmF0aW9uLiBJbiAxOTA5LCBDYW1hIHNldHRsZWQgaW4gUGFyaXMgYW5kIGJlZ2FuIHB1Ymxpc2hpbmcgYSBtb250aGx5IGpvdXJuYWwgY2FsbGVkIEJhbmRlIE1hdGFyYW0gYWZ0ZXIgdGhlIGFzc2Fzc2luYXRpb24gb2YgQ3Vyem9uLVd5bGxpZS4gSGVyIGhvdXNlIGJlY2FtZSBhIG1lZXRpbmcgcG9pbnQgZm9yIHZhcmlvdXMgcmV2b2x1dGlvbmFyaWVzIGFuZCBleGlsZXMgKFZpcmVuZHJhbmF0aCBDaGF0dG9wYWRoeWF5YSwgVi4gRC4gU2F2YXJrYXIsIG1lbWJlcnMgb2YgdGhlIEdoYWRyIFBhcnR5KS4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements about Baji Mohammad:\n\t1. He was a close associate of Veer Laxman Nayak.\n\t2. He was an active participant in the Sarvodaya movement.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTW9oYW1tZWQgQmFqaSA6IEhlIHdhcyBhbiBlbWluZW50IGZyZWVkb20gZmlnaHRlci4gQSBjbG9zZSBhc3NvY2lhdGUgb2YgdHJpYmFsIGNpdmlsIHJpZ2h0cyBhY3RpdmlzdCBMYXhtYW4gTmF5YWsuIEhlIGhhZCBqb2luZWQgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyBpbiAxOTM2LCB0aGUgeWVhciBPZGlzaGEgYmVjYW1lIGEgc2VwYXJhdGUgcHJvdmluY2Ugb24gdGhlIGJhc2lzIG9mIGxhbmd1YWdlLiBIZSBhbHNvIGpvaW5lZCB0aGUgUXVpdCBJbmRpYSBNb3ZlbWVudCBhbmQgd2FzIGhlbGQgb24gQXVndXN0IDE5LCAxOTQyLiBIZSBzcGVudCBuZWFybHkgZml2ZSB5ZWFycyBpbiBqYWlsIGJlZm9yZSBoZSB3YXMgcmVsZWFzZWQgb24gSnVuZSAyNSwgMTk0Ny4gQWZ0ZXIgdGhlIGZyZWVkb20gc3RydWdnbGUsIEJhamkgd2FzIGFjdGl2ZSBpbiB0aGUgU2Fydm9kYXlhIG1vdmVtZW50LiBIZSB3YXMgdGhlIGNoYWlybWFuIG9mIFV0a2FsIEdhbmRoaSBTbWFyYWsgTmlkaGkgYW5kIGEgY2xvc2UgYXNzb2NpYXRlIG9mIFV0a2FsIFNhcnZvZGF5YSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBNYW5kYWwuIGh0dHBzOi8vd3d3LmJ1c2luZXNzLXN0YW5kYXJkLmNvbS9hcnRpY2xlL3B0aS1zdG9yaWVzL2ZyZWVkb20tZmlnaHRlci1tb2hhbW1lZC1iYWppLWRlYWQtMTEgOTA2MjcwMDcwNl8xLmh0bWw=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements regarding Abdul Ghaffar Khan:\n\t1. He started the first Pushto political monthly Pakhtun\n\t2. He strongly opposed the Partition of India\n\t3. He organized a volunteer brigade called Khudai Khidmatgar,Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBBYmR1bCBHaGFmZmFyIEtoYW4sIHNvbiBvZiBhIHByb3NwZXJvdXMgdmlsbGFnZSBjaGllZiBvZiBVdG1hbnphaSBuZWFyIFBlc2hhd2FyLCBoYWQgc3RhcnRlZCBlZHVjYXRpb25hbCBhbmQgc29jaWFsIHJlZm9ybSB3b3JrIGFtb25nIGhpcyBQYXRoYW4gY291bnRyeW1lbiBmcm9tIDE5MTIsIGRlcml2aW5nIGluc3BpcmF0aW9uIHN1Y2Nlc3NpdmVseSBmcm9tIHRoZSBEZW9iYW5kIE11c2xpbSBuYXRpb25hbGlzdCBncm91cCwgdGhlIEtoaWxhZmF0IG1vdmVtZW50LCBhbmQgdGhlIG1vZGVybmlzdGljIHJlZm9ybXMgb2YgQW1pciBBbWFudWxsYWggKHRoZSBBZmdoYW4ga2luZyB3aG9zZSBwcm9ncmVzc2l2ZSBhbmQgcHJvLVNvdmlldCBwb2xpY2llcyBsZWQgdG8gaGlzIG92ZXJ0aHJvdyBpbiAxOTI4KS4gJ0JhZHNoYWggS2hhbicsIGFzIGhlIHdhcyBjb21pbmcgdG8gYmUga25vd24gYnkgdGhlIG1pZC0xOTIwcywgc3RhcnRlZCB0aGUgZmlyc3QgUHVzaHRvIHBvbGl0aWNhbCBtb250aGx5IFBha2h0dW4gaW4gTWF5IDE5MjgsIGFuZCBvcmdhbml6ZWQgaW4gdGhlIG5leHQgeWVhciBhIHZvbHVudGVlciBicmlnYWRlLCBLaHVkYWkgS2hpZG1hdGdhciwgd2hpY2ggd29yZSByZWQgc2hpcnRzIGJlY2F1c2UgdGhlc2UgZ290IGxlc3Mgc29pbGVkIG9uIHZpbGxhZ2UgdG91cnMuIEJhZHNoYWggS2hhbiB3YXMgc3Ryb25nbHkgb3Bwb3NlZCB0byB0aGUgUGFydGl0aW9uIG9mIEluZGlhLiBIZSBjcml0aWNpc2VkIGhpcyBDb25ncmVzcyBjb2xsZWFndWVzIGZvciBhZ3JlZWluZyB0byB0aGUgMTk0NyBkaXZpc2lvbi4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 45,
      "question" : "Sitaram Das, Vijay Singh Pathik and Manik Lal Verma, were associated with:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NQ==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQXQgQmlqb2xpYSwgYSBiaWcgTWV3YXIgamFnaXIgaGVsZCBieSBhIFBhcm1hciBSYWpwdXQsIHRoZXJlIHdlcmUgODYgZGlmZmVyZW50IHR5cGVzIG9mIGNlc3NlcyBvbiBraXNhbnMsIGFuZCBpbiAxOTA1IGFuZCBhZ2FpbiBpbiAxOTEzIHRoZSBsYXR0ZXIgY29sbGVjdGl2ZWx5IHJlZnVzZWQgdG8gY3VsdGl2YXRlIGxhbmRzIGFuZCB0cmllZCB0byBlbWlncmF0ZSB0byBuZWlnaGJvdXJpbmcgYXJlYXMuIFRoZSAxOTEzIHByb3Rlc3Qgd2FzIGxlZCBieSBhIHNhZGh1LCBTaXRhcmFtIERhcywgd2hpbGUgaW4gMTkxNSBhIG5ldyBlbGVtZW50IHdhcyBpbnRyb2R1Y2VkIGJ5IGV4LXJldm9sdXRpb25hcnkgY29ubmVjdGVkIHdpdGggU2FjaGluIFNhbnlhbCdzIGdyb3VwIG5hbWVkIEJob29wIFNpbmdoLCBhbGlhcyBWaWpheSBTaW5naCBQYXRoaWsuIFBhdGhpayBpbiBleGlsZSBkZXZlbG9wZWQgaW50byBhIHBlYXNhbnQgbGVhZGVyLCBhbmQgcGVyc3VhZGVkIGEgc3RhdGUgb2ZmaWNpYWwsIE1hbmlrIExhSSBWZXJtYSwgdG8gam9pbnRseSBsZWFkIGEgbm8tdGF4IG1vdmVtZW50IGFnYWluc3QgdGhlIFVkYWlwdXIgTWFoYXJhbmEgaW4gMTkxNi4gUGVhc2FudCByZWZ1c2FsIHRvIGNvbnRyaWJ1dGUgdG8gd2FyLUlvYW5zIHdhcyBhbm90aGVyIGVsZW1lbnQgaW4gdGhlIEJpam9saWEgbW92ZW1lbnQsIHdoaWNoIGxhdGVyIGRldmVsb3BlZCBHYW5kaGlhbiBjb250YWN0cyBhbmQgY29udGludWVkIGludG8gdGhlIDE5MjBzLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Champaran satyagraha",
        "option2" : "Bijolia movement .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option3" : "Bardoli Satyagraha",
        "option4" : "Kheda Satyagraha"
      }
    },
    {
      "index" : 46,
      "question" : "Who among the following social reformers published the journal called 'Kudi Arasu'?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogJ1Blcml5YXInIEUuVi4gUmFtYXN3YW1pIE5haWNrZXIsIHdobyBoYWQgYmVlbiBhY3RpdmUgaW4gTm9uLWNvb3BlcmF0aW9uLCBicm9rZSB3aXRoIHRoZSBDb25ncmVzcyBpbiB0aGUgbWlkLTIwcyB0byBkZXZlbG9wIGEgcG9wdWxpc3QgYW5kIHJhZGljYWwgYWx0ZXJuYXRpdmUgdG8gSnVzdGljZSBlbGl0aXNtLiBIaXMgam91cm5hbCBLdWRpIEFyYXN1ICgxOTI0KSwgd3JpdHRlbiBpbiByYWN5IFRhbWlsLCBhbmQgdGhlICdTZWxmLVJlc3BlY3QgTW92ZW1lbnQnIHdoaWNoIGhlIGZvdW5kZWQgbmV4dCB5ZWFyLCBwcm9ncmVzc2VkIGZyb20gYWR2b2NhdGluZyB3ZWRkaW5ncyB3aXRob3V0IEJyYWhtYW4gcHJpZXN0cyB0byBmb3JjaWJsZSB0ZW1wbGUtZW50cnksIHRoZSBidXJuaW5nIG9mIHRoZSBNYW51c21yaXRpLCBhbmQgb3V0cmlnaHQgYXRoZWlzbSBhdCB0aW1lcy4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "E.V. Ramaswamy Naicker",
        "option2" : "K. Aiyappan",
        "option3" : "Singaravelu",
        "option4" : "C. Kesavan"
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements regarding Dr. B.R. Ambedkar.:\n\t1. He wrote the book called 'Sarvajanik Satyadharma Pustak'.\n\t2. He established the Depressed Class Welfare Institute (Bahishkrit Hitakarini Sabha)Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Nw==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSnlvdGliYSBQaHVsZSB3YXMgYW4gSW5kaWFuIHNvY2lhbCBhY3RpdmlzdCwgdGhpbmtlciwgYW50aS1jYXN0ZSBzb2NpYWwgcmVmb3JtZXIgYW5kIHdyaXRlciBmcm9tIE1haGFyYXNodHJhLiBIZSB3cm90ZSAnR3VsYW1naXJpJyBhbmQgJ1NhcnZhamFuaWsgU2F0eWFkaGFybWEgUHVzdGFrJy4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRGVwcmVzc2VkIENsYXNzIFdlbGZhcmUgSW5zdGl0dXRlIChCYWhpc2hrcml0IEhpdGFrYXJpbmkgU2FiaGEpIGlzIGEgY2VudHJhbCBpbnN0aXR1dGlvbiBmb3JtZWQgYnkgRHIuIEJhYmFzYWhlYiBBbWJlZGthciBmb3IgcmVtb3ZpbmcgZGlmZmljdWx0aWVzIG9mIHRoZSB1bnRvdWNoYWJsZXMgYW5kIHBsYWNpbmcgdGhlaXIgZ3JpZXZhbmNlcyBiZWZvcmUgZ292ZXJubWVudC4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following is/are part of Gandhi's eleven points demand ?\n\t1. Abolish the Postal Reservation Bill.\n\t2. Carry out reforms in Criminal Investigation Department (CID)\n\t3. Abolish the land revenue.\n\t4. Reserve coastal shipping for Indians.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogR2FuZGhpJ3MgRWxldmVuIERlbWFuZHMgVG8gY2FycnkgZm9yd2FyZCB0aGUgbWFuZGF0ZSBnaXZlbiBieSB0aGUgTGFob3JlIENvbmdyZXNzLCBHYW5kaGkgcHJlc2VudGVkIGVsZXZlbiBkZW1hbmRzIHRvIHRoZSBnb3Zlcm5tZW50IGFuZCBnYXZlIGFuIHVsdGltYXR1bSBvZiBKYW51YXJ5IDMxLCAxOTMwIHRvIGFjY2VwdCBvciByZWplY3QgdGhlc2UgZGVtYW5kcy4gVGhlIGRlbWFuZHMgd2VyZSBhcyBmb2xsb3dzLiBJc3N1ZXMgb2YgR2VuZXJhbCBJbnRlcmVzdA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "2 and 4 only",
        "option3" : "1 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 49,
      "question" : "Arrange the following historical events in chronological order from the earliest to thelatest:\n\t1. Rowlatt Satyagraha\n\t2. Peasant movement in Bardoli\n\t3. Non-cooperation and Khilafat MovementsSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHk=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3",
        "option2" : "1-3-2",
        "option3" : "2-3-1",
        "option4" : "2-1-3 .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability"
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements regarding the Government of India, Act, 1935:\n\t1. Abolition of Dyarchy at the Centre.\n\t2. Establishment of a Federal Court at Calcutta\n\t3. Extension of the principle of Separate Electorates to Sikhs, Europeans, Indian Christians andAnglo Indians.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgQWN0IG9mIDE5MzUgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgVGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgQWN0IG9mIDE5MzUgd2FzIHBhc3NlZCBvbiB0aGUgYmFzaXMgb2YgdGhlIHJlcG9ydCBvZiB0aGUgU2ltb24gQ29tbWlzc2lvbiwgdGhlIG91dGNvbWUgb2YgdGhlIFJvdW5kIFRhYmxlIENvbmZlcmVuY2VzIGFuZCB0aGUgV2hpdGUgUGFwZXIgaXNzdWVkIGJ5IHRoZSBCcml0aXNoIEdvdmVybm1lbnQgaW4gMTkzMy4gVGhpcyBBY3QgY29udGFpbmVkIG1hbnkgaW1wb3J0YW50IGNoYW5nZXMgb3ZlciB0aGUgcHJldmlvdXMgQWN0IG9mIDE5MTkuIEZvbGxvd2luZyB3ZXJlIHRoZSBzYWxpZW50IGZlYXR1cmVzIG9mIHRoaXMgQWN0Lg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements regarding Madan Mohan Malaviya:\n\t1. He started a Hindi weekly 'Abhyudaya'.\n\t2. He was a participant in the Second Round Table Conference in 1931.\n\t3. He was against the INC's participation in the Khilafat Movement.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBQYW5kaXQgTWFkYW4gTW9oYW4gTWFsYXZpeWEgd2FzIGFuIEluZGlhbiBlZHVjYXRpb25pc3QgYW5kIHBvbGl0aWNpYW4gbm90YWJsZSBmb3IgaGlzIHJvbGUgaW4gdGhlIEluZGlhbiBpbmRlcGVuZGVuY2UgbW92ZW1lbnQgYW5kIGFzIHRoZSBmb3VyIHRpbWVzIHByZXNpZGVudCBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzLiAgSGUgd2FzIHRoZSBlZGl0b3Igb2YgYSBIaW5kaSBtYWdhemluZSwgJ0hpbmRvc3RoYW4nLiBIZSBiZWNhbWUgdGhlIGVkaXRvciBvZiB0aGUgJ0luZGlhbiBPcGluaW9uJyBpbiAxODg5LiBIZSBhbHNvIHN0YXJ0ZWQgYSBIaW5kaSB3ZWVrbHkgJ0FiaHl1ZGF5YScsIGFuIEVuZ2xpc2ggZGFpbHkgJ0xlYWRlcicsIGEgSGluZGkgbmV3c3BhcGVyICdNYXJ5YWRhJy4gSGUgd2FzIG9wcG9zZWQgdG8gc2VwYXJhdGUgZWxlY3RvcmF0ZXMgZm9yIE11c2xpbXMgYW5kIHRoZSBMdWNrbm93IFBhY3QuIEhlIHdhcyBhbHNvIGFnYWluc3QgdGhlIElOQydzIHBhcnRpY2lwYXRpb24gaW4gdGhlIEtoaWxhZmF0IE1vdmVtZW50LiBIZSB3YXMgYSBwYXJ0aWNpcGFudCBpbiB0aGUgU2Vjb25kIFJvdW5kIFRhYmxlIENvbmZlcmVuY2UgaW4gMTkzMS4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 52,
      "question" : "Individual Satyagraha was launched against the:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaXZpZHVhbCBTYXR5YWdyYWhhIER1cmluZyB0aGUgY291cnNlIG9mIHRoZSBTZWNvbmQgV29ybGQgV2FyIGluIG9yZGVyIHRvIHNlY3VyZSB0aGUgY29vcGVyYXRpb24gb2YgdGhlIEluZGlhbnMsIHRoZSBCcml0aXNoIEdvdmVybm1lbnQgbWFkZSBhbiBhbm5vdW5jZW1lbnQgb24gOCBBdWd1c3QgMTk0MCwgd2hpY2ggY2FtZSB0byBiZSBrbm93biBhcyB0aGUgJ0F1Z3VzdCBPZmZlcicuIFRoZSBBdWd1c3QgT2ZmZXIgZW52aXNhZ2VkIHRoYXQgYWZ0ZXIgdGhlIFdhciBhIHJlcHJlc2VudGF0aXZlIGJvZHkgb2YgSW5kaWFucyB3b3VsZCBiZSBzZXQgdXAgdG8gZnJhbWUgdGhlIG5ldyBDb25zdGl0dXRpb24uIEdhbmRoaSB3YXMgbm90IHNhdGlzZmllZCB3aXRoIGlzIG9mZmVyIGFuZCBkZWNpZGVkIHRvIGxhdW5jaCBJbmRpdmlkdWFsIFNhdHlhZ3JhaGEuIEluZGl2aWR1YWwgU2F0eWFncmFoYSB3YXMgbGltaXRlZCwgc3ltYm9saWMgYW5kIG5vbi12aW9sZW50IGluIG5hdHVyZSBhbmQgaXQgd2FzIGxlZnQgdG8gTWFoYXRtYSBHYW5kaGkgdG8gY2hvb3NlIHRoZSBTYXR5YWdyYWhpcy4gQWNoYXJ5YSBWaW5vYmEgQmhhdmUgd2FzIHRoZSBmaXJzdCB0byBvZmZlciBTYXR5YWdyYWhhIGFuZCBoZSB3YXMgc2VudGVuY2VkIHRvIHRocmVlIG1vbnRocyBpbXByaXNvbm1lbnQuIEphd2FoYXJsYWwgTmVocnUgd2FzIHRoZSBzZWNvbmQgU2F0eWFncmFoaSBhbmQgaW1wcmlzb25lZCBmb3IgZm91ciBtb250aHMuIFRoZSBpbmRpdmlkdWFsIFNhdHlhZ3JhaGEgY29udGludWVkIGZvciBuZWFybHkgMTUgbW9udGhzLiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Gandhi-Irwin Pact",
        "option2" : "The August Offer",
        "option3" : "The Cripps Proposals",
        "option4" : "The Cabinet Mission"
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following statements regarding the proposals under the August Offer,1940:\n\t1. Dominion status as the objective for India.\n\t2. Setting up of a constituent assembly after the second world war.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdCBIaXRsZXIncyBodWdlIHN1Y2Nlc3MgYW5kIHRoZSBmYWxsIG9mIEJlbGdpdW0sIEhvbGxhbmQgYW5kIEZyYW5jZSBwdXQgRW5nbGFuZCBpbiBhIGNvbmNpbGlhdG9yeSBtb29kLiBUbyBnZXQgSW5kaWFuIGNvb3BlcmF0aW9uIGluIHRoZSB3YXIgZWZmb3J0LCB0aGUgdmljZXJveSBhbm5vdW5jZWQgdGhlIEF1Z3VzdCBPZmZlciAoQXVndXN0IDE5NDApIHdoaWNoIHByb3Bvc2VkOiAoLSlEb21pbmlvbiBzdGF0dXMgYXMgdGhlIG9iamVjdGl2ZSBmb3IgSW5kaWEuICgtKVNldHRpbmcgdXAgb2YgYSBjb25zdGl0dWVudCBhc3NlbWJseSBhZnRlciB0aGUgd2FyLiBJbmRpYW5zIHdvdWxkIGRlY2lkZSB0aGUgY29uc3RpdHV0aW9uIGFjY29yZGluZyB0byB0aGVpciBzb2NpYWwsIGVjb25vbWljIGFuZCBwb2xpdGljYWwgY29uY2VwdGlvbnMsIHN1YmplY3QgdG8gZnVsZmlsbWVudCBvZiB0aGUgb2JsaWdhdGlvbiBvZiB0aGUgR292ZXJubWVudCByZWdhcmRpbmcgZGVmZW5jZSwgbWlub3JpdHkgcmlnaHRzLCB0cmVhdGllcyB3aXRoIHN0YXRlcywgYWxsIEluZGlhIHNlcnZpY2VzLiAoLSlObyBmdXR1cmUgY29uc3RpdHV0aW9uIHRvIGJlIGFkb3B0ZWQgd2l0aG91dCB0aGUgY29uc2VudCBvZiBtaW5vcml0aWVzLiBUaGUgQ29uZ3Jlc3MgcmVqZWN0ZWQgdGhlIEF1Z3VzdCBPZmZlci4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 54,
      "question" : "Arrange the following events in the chronological order from the earliest to thelatest:. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t1. Ratification of India's membership to the Commonwealth\n\t2. Adoption of the national flag by the Constituent Assembly\n\t3. Adoption of the national song by the Constituent AssemblySelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NA==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW4gYWRkaXRpb24gdG8gdGhlIG1ha2luZyBvZiB0aGUgQ29uc3RpdHV0aW9uIGFuZCBlbmFjdGluZyBvZiBvcmRpbmFyeSBsYXdzLCB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgYWxzbyBwZXJmb3JtZWQgdGhlIGZvbGxvd2luZyBmdW5jdGlvbnM6",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3",
        "option2" : "2-1-3",
        "option3" : "3-2-1",
        "option4" : "3-1-2"
      }
    },
    {
      "index" : 55,
      "question" : "Consider the following pairs                   Committee                                              Headed by    1. Union Constitution Committee                   Jawaharlal Nehru    2. Committee for Negotiating with States         Sardar Patel    3. Rules of Procedure Committee                     Dr. Rajendra PrasadHow many of the pairs given above is/are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIENvbnN0aXR1ZW50IEFzc2VtYmx5IGFwcG9pbnRlZCBhIG51bWJlciBvZiBjb21taXR0ZWVzIHRvIGRlYWwgd2l0aCBkaWZmZXJlbnQgdGFza3Mgb2YgY29uc3RpdHV0aW9uLW1ha2luZyBNYWpvciBDb21taXR0ZWVz",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one pair",
        "option2" : "Only two pairs",
        "option3" : "All three pairs",
        "option4" : "None of the pairs"
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following statements regarding the Cripps mission\n\t1. It offered Indian Union with a dominion status.\n\t2. After the end of the Second World war, a constituent assembly to frame a new constitution wasproposed.\n\t3. Option was available to any province to have a separate constitution.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBDcmlwcHMgTWlzc2lvbjogSW4gdGhlIG1pZHN0IG9mIHdvcnNlbmluZyB3YXJ0aW1lIGludGVybmF0aW9uYWwgc2l0dWF0aW9uLCB0aGUgQnJpdGlzaCBHb3Zlcm5tZW50IGluIGl0cyBjb250aW51ZWQgZWZmb3J0IHRvIHNlY3VyZSBJbmRpYW4gY29vcGVyYXRpb24gc2VudCBTaXIgU3RhZmZvcmQgQ3JpcHBzIHRvIEluZGlhIG9uIDIzIE1hcmNo",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 57,
      "question" : "Arrange the following historical events in chronological order from the earliest tolatest:\n\t1. Formation of Indian National Army\n\t2. Royal Indian Navy mutiny\n\t3. Simla ConferenceSelect the correct answer using the codes given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIE1hcnF1ZXNzIG9mIExpbmxpdGhnb3cgICAgICAgICAgKC0tLSlJbmRpYW4gcHJvdmluY2lhbCBlbGVjdGlvbnMgKDE5MzcpICAgICAgICAgKC0tLSlJbmRpYW4gZW50cnkgaW50byBXb3JsZCBXYXIgSUkgKDE5MzkpICAgICAgICAgKC0tLSlMYWhvcmUgUmVzb2x1dGlvbiAoMTk0MCkgICAgICAgICAoLS0tKUF1Z3VzdCBPZmZlciAoMTk0MCkgICAgICAgICAoLS0tKUNyaXBwcyBNaXNzaW9uICgxOTQyKSAgICAgICAgICgtLS0pUXVpdCBJbmRpYSBtb3ZlbWVudCAoMTk0MikgICAgICAgICAoLS0tKUZvcm1hdGlvbiBvZiBJbmRpYW4gTmF0aW9uYWwgQXJteSAoMTk0MikgICAgICAgICAoLS0tKUJlbmdhbCBmYW1pbmUgKDE5NDMpIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IFRoZSBWaXNjb3VudCBXYXZlbGwgKC0tLSlDLiBSLiBmb3JtdWxhICgxOTQ0KSAoLS0tKVNpbWxhIENvbmZlcmVuY2UgKDE5NDUpICgtLS0pQ2FiaW5ldCBNaXNzaW9uICgxOTQ2KSAoLS0tKUludGVyaW0gR292ZXJubWVudCB3YXMgZm9ybWVkIGluIDE5NDYgKC0tLSlSb3lhbCBJbmRpYW4gTmF2eSBtdXRpbnkgKDE5NDYp",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3",
        "option2" : "1-3-2",
        "option3" : "2-1-3",
        "option4" : "3-2-1 .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability"
      }
    },
    {
      "index" : 58,
      "question" : "Which of the following historical events is associated with the infamous 'CunninghamCircular' ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRHVyaW5nIENpdmlsIERpc29iZWRpZW5jZSBNb3ZlbWVudCwgYSBwb3dlcmZ1bCBhZ2l0YXRpb24gd2FzIG9yZ2FuaXplZCBpbiBBc3NhbSBhZ2FpbnN0IHRoZSBpbmZhbW91cyAnQ3VubmluZ2hhbSBjaXJjdWxhcicgd2hpY2ggZm9yY2VkIHBhcmVudHMsIGd1YXJkaWFucyBhbmQgc3R1ZGVudHMgdG8gZnVybmlzaCBhc3N1cmFuY2VzIG9mIGdvb2QgYmVoYXZpb3Iu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Revolt of 1857",
        "option2" : "Civil Disobedience Movement",
        "option3" : "Rowlatt Satyagraha",
        "option4" : "Swadeshi and Boycott movement."
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following statements:\n\t1. In 1948, the first Linguistic Provinces Commission headed by Jawaharlal Nehru was appointedby the Constituent Assembly .\n\t2. In 1953, Prime Minister Jawaharlal Nehru appointed the States Reorganization Commission withJustice Fazal Ali as its chairmanWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIExpbmd1aXN0aWMgUmVvcmdhbml6YXRpb24gb2YgdGhlIFN0YXRlcyBJbiAxOTQ4LCB0aGUgZmlyc3QgTGluZ3Vpc3RpYyBQcm92aW5jZXMgQ29tbWlzc2lvbiBoZWFkZWQgYnkgUy5LLiBEYXIgd2FzIGFwcG9pbnRlZCBieSB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgdG8gZW5xdWlyZSBpbnRvIHRoZSBwb3NzaWJpbGl0eSBvZiBsaW5ndWlzdGljIHByb3ZpbmNlcy4gVGhpcyBjb21taXNzaW9uIGFkdmlzZWQgYWdhaW5zdCBzdWNoIGEgc3RlcC4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgSGVuY2UsIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gdGhlIHNhbWUgeWVhciBhbm90aGVyIGNvbW1pdHRlZSBrbm93biBhcyBKVlAgY29tbWl0dGVlIGNvbnNpc3Rpbmcgb2YgSmF3YWhhcmxhbCBOZWhydSwgVmFsbGFiaGFpIFBhdGVsIGFuZCBQYXR0YWJoaSBTaXRhcmFtYWloIHdhcyBhcHBvaW50ZWQgYnkgdGhlIENvbmdyZXNzIFBhcnR5LiBUaGlzIGNvbW1pdHRlZSBhbHNvIGRpZCBub3QgZmF2b3VyIGZvciBsaW5ndWlzdGljIHByb3ZpbmNlcy4gQnV0IHRoZXJlIHdlcmUgcG9wdWxhciBtb3ZlbWVudHMgZm9yIHN0YXRlcyByZW9yZ2FuaXphdGlvbiBhbGwgb3ZlciB0aGUgY291bnRyeSBhbmQgaXQgd2FzIGludGVuc2l2ZSBpbiBBbmRocmEuIFRoZXJlZm9yZSwgaW4gMTk1MyBBbmRocmEgd2FzIGNyZWF0ZWQgYXMgYSBzZXBhcmF0ZSBzdGF0ZS4gVGhlIHN1Y2Nlc3Mgb2YgQW5kaHJhIHN0cnVnZ2xlIGVuY291cmFnZWQgb3RoZXIgbGluZ3Vpc3RpYyBncm91cHMgdG8gYWdpdGF0ZSBmb3IgdGhlaXIgb3duIHN0YXRlLiBJbiAxOTUzLCBQcmltZSBNaW5pc3RlciBKYXdhaGFybGFsIE5laHJ1IGFwcG9pbnRlZCB0aGUgU3RhdGVzIFJlb3JnYW5pemF0aW9uIENvbW1pc3Npb24gd2l0aCBKdXN0aWNlIEZhemFsIEFsaSBhcyBpdHMgY2hhaXJtYW4gYW5kIFBhbmRpdCBIcmlkYXlhbmF0aCBLdW56cnUgYW5kIFNhcmRhciBLLk0uIFBhbmlra2FyIGFzIGl0cyBtZW1iZXJzLiBUaGUgY29tbWlzc2lvbiBzdWJtaXR0ZWQgaXRzIHJlcG9ydCBvbiAzMCBTZXB0ZW1iZXIgMTk1NS4gQmFzZWQgb24gdGhpcyByZXBvcnQsIHRoZSBTdGF0ZXMgUmVvcmdhbml6YXRpb24gQWN0IHdhcyBwYXNzZWQgYnkgdGhlIFBhcmxpYW1lbnQgaW4gMTk1Ni4gSXQgcHJvdmlkZWQgZm9yIDE2IHN0YXRlcyBhbmQgc2l4IHVuaW9uIHRlcnJpdG9yaWVzLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 61,
      "question" : "The Tashkent Agreement was signed during the prime ministership of:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGFsIEJhaGFkdXIgU2hhc3RyaSBzdWNjZWVkZWQgTmVocnUgYXMgdGhlIG5leHQgUHJpbWUgTWluaXN0ZXIgb2YgSW5kaWEuIEhlIHJlbWFpbmVkIGEgcm9sZSBtb2RlbCBmb3IgaG9uZXN0eSBpbiBwdWJsaWMgbGlmZS4gSGUgZW5kZWQgdGhlIEluZG8tUGFrIHdhciBvZiAxOTY1IGJ5IGNvbmNsdWRpbmcgdGhlIFRhc2hrZW50IEFncmVlbWVudCBpbiBKYW51YXJ5IDE5NjYuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Jawaharlal Nehru",
        "option2" : "Indira Gandhi",
        "option3" : "Morarji Desai",
        "option4" : "Lal Bahadur Shastri"
      }
    },
    {
      "index" : 62,
      "question" : "Who among the following donated land to Gandhi to set up his Tolstoy ashram inSouth Africa?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgSGVybWFubiBLYWxsZW5iYWNoIHdhcyBhIExpdGh1YW5pYW4gYm9ybiBKZXdpc2ggU291dGggQWZyaWNhbiBkb2N0b3Igd2hvIHdhcyBvbmUgb2YgdGhlIGZvcmVtb3N0IGZyaWVuZHMgYW5kIGFzc29jaWF0ZXMgb2YgTWFoYXRtYSBHYW5kaGkuIEluIDE5MTAgS2FsbGVuYmFjaCwgdGhlbiBhIHJpY2ggbWFuLCBkb25hdGVkIHRvIEdhbmRoaSBhIHRob3VzYW5kLWFjcmUgZmFybSBiZWxvbmdpbmcgdG8gaGltIG5lYXIgSm9oYW5uZXNidXJnLiBUaGUgZmFybSB3YXMgdXNlZCB0byBydW4gR2FuZGhpJ3MgZmFtb3VzICJUb2xzdG95IEZhcm0iIHRoYXQgaG91c2VkIHRoZSBmYW1pbGllcyBvZiBzYXR5YWdyYWhpcy4gRklHOiBHQU5ESEkgKExFRlQpIEFORCBLQUxMRU5CQUNIIChSSUdIVCk=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "G.M. Naicker .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option2" : "Herman Kallenbach",
        "option3" : "Henry Polak",
        "option4" : "Hebert Kitchin"
      }
    },
    {
      "index" : 63,
      "question" : "Who among the following personalities was/were associated with the Azad HindGovernment?\n\t1. Lakshmi Sahgal\n\t2. Rash Behari Bose\n\t3. Subbier Appadurai AyerSelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWJvdXQgQXphZCBIaW5kIEdvdmVybm1lbnQ6IE5ldGFqaSBTdWJoYXNoIENoYW5kcmEgQm9zZSBoYWQgYW5ub3VuY2VkIHRoZSBlc3RhYmxpc2htZW50IG9mIHRoZSBwcm92aXNpb25hbCBnb3Zlcm5tZW50IG9mIEF6YWQgSGluZCBpbiBvY2N1cGllZCBTaW5nYXBvcmUgaW4gS25vd24gYXMgQXJ6aSBIdWt1bWF0LWUtQXphZCBIaW5kLCBpdCB3YXMgc3VwcG9ydGVkIGJ5IHRoZSBBeGlzIHBvd2VycyBvZiBJbXBlcmlhbCBKYXBhbiwgTmF6aSBHZXJtYW55LCB0aGUgSXRhbGlhbiBTb2NpYWwgUmVwdWJsaWMsIGFuZCB0aGVpciBhbGxpZXMuIEhlIGhhZCBsYXVuY2hlZCBhIHN0cnVnZ2xlIHRvIGZyZWUgSW5kaWEgZnJvbSBCcml0aXNoIHJ1bGUgdW5kZXIgdGhlIGJhbm5lciBvZiB0aGUgcHJvdmlzaW9uYWwgZ292ZXJubWVudC1pbi1leGlsZSBkdXJpbmcgdGhlIGxhdHRlciBwYXJ0IG9mIHRoZSBTZWNvbmQgV29ybGQgV2FyLiBXaG8gd2FzIHBhcnQgb2YgdGhpcz8gVW5kZXIgaGlzIHByb3Zpc2lvbmFsIGdvdmVybm1lbnQsIHRoZSBJbmRpYW5zIGxpdmluZyBhYnJvYWQgaGFkIGJlZW4gdW5pdGVkLiBUaGUgSW5kaWFuIE5hdGlvbmFsIEFybXkgZHJldyBleC0gcHJpc29uZXJzIGFuZCB0aG91c2FuZHMgb2YgY2l2aWxpYW4gdm9sdW50ZWVycyBmcm9tIHRoZSBJbmRpYW4gZXhwYXRyaWF0ZSBwb3B1bGF0aW9uIGluIE1hbGF5YSAocHJlc2VudC1kYXkgTWFsYXlzaWEpIGFuZCBCdXJtYSAobm93IE15YW5tYXIpLiBVbmRlciB0aGUgcHJvdmlzaW9uYWwgZ292ZXJubWVudCwgQm9zZSB3YXMgdGhlIGhlYWQgb2YgdGhlIHN0YXRlLCB0aGUgcHJpbWUgbWluaXN0ZXIgYW5kIHRoZSBtaW5pc3RlciBmb3Igd2FyIGFuZCBmb3JlaWduIGFmZmFpcnMuIENhcHRhaW4gTGFrc2htaSBoZWFkZWQgdGhlIHdvbWVuJ3Mgb3JnYW5pc2F0aW9uIHdoaWxlIFMgQSBBeWVyIGhlYWRlZCB0aGUgcHVibGljaXR5IGFuZCBwcm9wYWdhbmRhIHdpbmcuIFJldm9sdXRpb25hcnkgbGVhZGVyIFJhc2ggQmVoYXJpIEJvc2Ugd2FzIGRlc2lnbmF0ZWQgYXMgdGhlIHN1cHJlbWUgYWR2aXNvci4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHk=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements regarding C. Rajagopalachari Formula:\n\t1. It proposed that Muslim League shall endorse Congress's demand for independence\n\t2. After the end of the Second World war, the entire population of Muslim majority areas in North-West and North-East India decided by a plebiscite, whether or not to form a separate sovereignstateWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmFja2dyb3VuZCBSYWphZ29wYWxhY2hhcmkncyBmb3JtdWxhKG9yIEMuIFIuIGZvcm11bGEgb3IgUmFqYWppIGZvcm11bGEpIHdhcyBhIHByb3Bvc2FsIGZvcm11bGF0ZWQgYnkgQy5SYWphZ29wYWxhY2hhcmkgdG8gc29sdmUgdGhlIHBvbGl0aWNhbCBkZWFkbG9jayBiZXR3ZWVuIHRoZSBBbGwgSW5kaWEgTXVzbGltIExlYWd1ZSBhbmQgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyBvbiB0aGUgaW5kZXBlbmRlbmNlIG9mIEJyaXRpc2ggSW5kaWEuIFRoZSBMZWFndWUncyBwb3NpdGlvbiB3YXMgdGhhdCB0aGUgTXVzbGltcyBhbmQgSGluZHVzIG9mIEJyaXRpc2ggSW5kaWEgd2VyZSB0d28gc2VwYXJhdGUgbmF0aW9ucyBhbmQgaGVuY2Vmb3J0aCB0aGUgTXVzbGltcyBoYWQgdGhlIHJpZ2h0IHRvIHRoZWlyIG93biBuYXRpb24uIFRoZSBDb25ncmVzcywgd2hpY2ggaW5jbHVkZWQgYm90aCBIaW5kdSBhbmQgTXVzbGltIG1lbWJlcnMsIGFzIG9wcG9zZWQgdG8gdGhlIGlkZWEgb2YgcGFydGl0aW9uaW5nIEluZGlhLiBUbyBhZGQgdG8gdGhlIHNpdHVhdGlvbiwgd2l0aCB0aGUgYWR2ZW50IG9mIHRoZSBTZWNvbmQgV29ybGQgV2FyIHRoZSBCcml0aXNoIGFkbWluaXN0cmF0aW9uIHNvdWdodCB0byBkaXZpZGUgdGhlIEluZGlhbiBwb2xpdGljYWwgZWxpdGUgaW50byB0d28gZmFjdGlvbnMgc28gYXMgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIEluZGlhbiBpbmRlcGVuZGVuY2UgbW92ZW1lbnQgZG9lcyBub3QgbWFrZSBsYXJnZSBwcm9ncmVzcywgdGFraW5nIGFkdmFudGFnZSBvZiB0aGUgd2FyLiBJdCB3YXMgYXQgc3VjaCBhIGp1bmN0dXJlLCB0aGF0IFJhamFnb3BhbGFjaGFyaSBkZXZpc2VkIGEgcHJvcG9zYWwgZm9yIHRoZSBDb25ncmVzcyB0byBvZmZlciB0aGUgTGVhZ3VlLiAgVGhlIFJhamFnb3BhbGFjaGFyaSBGb3JtdWxhIFRoZSBtYWluIHBvaW50cyBpbiB0aGUgQ1IgUGxhbiB3ZXJlOiBNdXNsaW0gTGVhZ3VlIHRvIGVuZG9yc2UgQ29uZ3Jlc3MgZGVtYW5kIGZvciBpbmRlcGVuZGVuY2UuIExlYWd1ZSB0byBjb29wZXJhdGUgd2l0aCBDb25ncmVzcyBpbiBmb3JtaW5nIGEgcHJvdmlzaW9uYWwgZ292ZXJubWVudCBhdCBjZW50cmUuIEFmdGVyIHRoZSBlbmQgb2YgdGhlIHdhciwgdGhlIGVudGlyZSBwb3B1bGF0aW9uIG9mIE11c2xpbSBtYWpvcml0eSBhcmVhcyBpbiB0aGUgTm9ydGgtV2VzdCBhbmQgTm9ydGgtRWFzdCBJbmRpYSB0byBkZWNpZGUgYnkgYSBwbGViaXNjaXRlLCB3aGV0aGVyIG9yIG5vdCB0byBmb3JtIGEgc2VwYXJhdGUgc292ZXJlaWduIHN0YXRlLiBJbiBjYXNlIG9mIGFjY2VwdGFuY2Ugb2YgcGFydGl0aW9uLCBhZ3JlZW1lbnQgdG8gYmUgbWFkZSBqb2ludGx5IGZvciBzYWZlZ3VhcmRpbmcgZGVmZW5jZSwgY29tbWVyY2UsIGNvbW11bmljYXRpb25zLCBldGMuIFRoZSBhYm92ZSB0ZXJtcyBhcmUgdG8gYmUgb3BlcmF0aXZlIG9ubHkgaWYgRW5nbGFuZCB0cmFuc2ZlcnJlZCBmdWxsIHBvd2VycyB0byBJbmRpYS4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgIFJlYWN0aW9ucyB0byB0aGUgZm9ybXVsYSBUaGUgZm9ybXVsYSB3YXMgYSB0YWNpdCBhY2NlcHRhbmNlIG9mIHRoZSBMZWFndWUncyBkZW1hbmQgZm9yIFBha2lzdGFuLiBBbmQgR2FuZGhpamkgc3VwcG9ydGVkIHRoZSBmb3JtdWxhLiBKaW5uYWggd2FudGVkIHRoZSBDb25ncmVzcyB0byBhY2NlcHQgdGhlIHR3by1uYXRpb24gdGhlb3J5LiBIZSB3YW50ZWQgb25seSB0aGUgTXVzbGltcyBvZiBOb3J0aC1XZXN0IGFuZCBOb3J0aC1FYXN0IHRvIHZvdGUgaW4gdGhlIHBsZWJpc2NpdGUgYW5kIG5vdCB0aGUgZW50aXJlIHBvcHVsYXRpb24uIEhlIGFsc28gb3Bwb3NlZCB0aGUgaWRlYSBvZiBhIGNvbW1vbiBjZW50cmUuIFdoaWxlIHRoZSBDb25ncmVzcyB3YXMgcmVhZHkgdG8gY29vcGVyYXRlIHdpdGggdGhlIExlYWd1ZSBmb3IgdGhlIGluZGVwZW5kZW5jZSBvZiB0aGUgSW5kaWFuIFVuaW9uLCB0aGUgTGVhZ3VlIGRpZCBub3QgY2FyZSBmb3IgaW5kZXBlbmRlbmNlIG9mIHRoZSBVbmlvbi4gSXQgd2FzIG9ubHkgaW50ZXJlc3RlZCBpbiBhIHNlcGFyYXRlIG5hdGlvbi4gRnVydGhlciwgSGluZHUgbGVhZGVycyBsZWQgYnkgVmlyIFNhdmFya2FyIGNvbmRlbW5lZCB0aGUgQ1IgcGxhbiAgQ2F1c2VzIG9mIGZhaWx1cmUgb2YgdGhlIHByb3Bvc2FsIEFsdGhvdWdoIHRoZSBmb3JtdWxhdGlvbiBzdXBwb3J0ZWQgdGhlIHByaW5jaXBsZSBvZiBQYWtpc3RhbiwgaXQgYWltZWQgdG8gc2hvdyB0aGF0IHRoZSBwcm92aW5jZXMgdGhhdCBKaW5uYWggY2xhaW1lZCBhcyBQYWtpc3RhbiBjb250YWluZWQgbGFyZ2UgbnVtYmVycyBvZiBub24tTXVzbGltcy4gSmlubmFoIGhhZCBjbGFpbWVkIHByb3ZpbmNlcyB0aGVuIHJlZ2FyZGVkIGFzIE11c2xpbSBtYWpvcml0eSByZWdpb25zLiBUaHVzLCBJZiBhIHBsZWJpc2NpdGUgd2FzIHBsYWNlZCwgSmlubmFoIHJhbiBhIHJpc2sgb2YgcGFydGl0aW9uaW5nIFB1bmphYiBhbmQgQmVuZ2FsIEZ1cnRoZXJtb3JlLCB0aGUgZGVjaXNpb24gb2YgTXVzbGltcyB0byBzZWNlZGUgZnJvbSBJbmRpYSwgYWNjb3JkaW5nIHRvIHRoZSBDUiBmb3JtdWxhLCB3b3VsZCBiZSB0YWtlbiBub3QganVzdCBieSBNdXNsaW1zIGFsb25lLCBidXQgYnkgYSBwbGViaXNjaXRlIG9mIHRoZSBlbnRpcmUgcG9wdWxhdGlvbiBldmVuIGluIHRoZSBNdXNsaW0gbWFqb3JpdHkgZGlzdHJpY3RzLiBUaGlzIG1pZ2h0IHdlbGwgaGF2ZSBkaWx1dGVkIHRoZSBlbnRodXNpYXNtIG9mIHRoZSBwZW9wbGUgb2YgdGhlc2UgcHJvdmluY2VzIGFib3V0IGdvaW5nIHBhcnRpdGlvbi4gSGVuY2UgSmlubmFoIHJlamVjdGVkIHRoZSBpbml0aWF0aXZlLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following statements regarding Dr. B.R. Ambedkar:\n\t1. He had served as member of the Viceroy's Executive Council.\n\t2. He had served as the member of the Bombay Legislative Assembly\n\t3. He opposed the Khoti system of land tenure in Konkan.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBEci5CIFIgQW1iZWRrYXI6IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEhpcyBjb250cmlidXRpb24gdG93YXJkcyBDb25zdGl0dXRpb25hbCBSZWZvcm1zOiBBcyBjaGFpcm1hbiBvZiB0aGUgQ29uc3RpdHV0aW9uJ3MgZHJhZnRpbmcgY29tbWl0dGVlLCBoZSB0b29rIG1ldGljdWxvdXMgbWVhc3VyZXMgdG8gYnVpbGQgYSBqdXN0IHNvY2lldHkgdGhyb3VnaCBsaWJlcnR5LCBlcXVhbGl0eSBhbmQgZnJhdGVybml0eS4gSGlzIGFkdm9jYWN5IGZvciB1bml2ZXJzYWwgYWR1bHQgZnJhbmNoaXNlIGVuc3VyZWQgdGhhdCB3b21lbiBoYWQgdGhlIHJpZ2h0IHRvIHZvdGUgaW1tZWRpYXRlbHkgYWZ0ZXIgSW5kZXBlbmRlbmNlLiBIaXMgYWR2b2NhY3kgb2YgdGhlIEhpbmR1IENvZGUgQmlsbCB3YXMgYSByZXZvbHV0aW9uYXJ5IG1lYXN1cmUgdG93YXJkcyBhbWVsaW9yYXRpbmcgd29tZW4ncyBwbGlnaHQgYnkgY29uZmVycmluZyBvbiB0aGVtIHRoZSByaWdodCB0byBhZG9wdCBhbmQgaW5oZXJpdC4gSGUgY29udHJpYnV0ZWQgdG8gZGV2ZWxvcGluZyBmZWRlcmFsIGZpbmFuY2UuIEFtYmVka2FyIGFzIGEgcGlvbmVlciBpbiBlc3RhYmxpc2hpbmcgbWFueSBuYXRpb25hbCBpbnN0aXR1dGlvbnM6IFRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgd2FzIGNvbmNlcHR1YWxpc2VkIGZyb20gdGhlIEhpbHRvbiBZb3VuZyBDb21taXNzaW9uJ3MgcmVjb21tZW5kYXRpb24sIHdoaWNoIGNvbnNpZGVyZWQgQW1iZWRrYXIncyBndWlkZWxpbmVzIGxhaWQgb3V0IGluIFRoZSBQcm9ibGVtIG9mIHRoZSBSdXBlZTogSXRzIE9yaWdpbiBhbmQgSXRzIFNvbHV0aW9uLiBBcyBhIGxhYm91ciBtZW1iZXIgaW4gVmljZXJveSdzIEV4ZWN1dGl2ZSBDb3VuY2lsIGZyb20gMTk0MiB0byAxOTQ2LCBoZSBldm9sdmVkIG51bWVyb3VzIHBvbGljaWVzIGluIHRoZSB3YXRlciwgcG93ZXIgYW5kIGxhYm91ciB3ZWxmYXJlIHNlY3RvcnMuIEhpcyBmYXJzaWdodGVkbmVzcyBoZWxwZWQgaW4gZXN0YWJsaXNoaW5nIHRoZSBDZW50cmFsIFdhdGVyIENvbW1pc3Npb24gaW4gdGhlIGZvcm0gb2YgdGhlIENlbnRyYWwgV2F0ZXJ3YXlzLCBJcnJpZ2F0aW9uIGFuZCBOYXZpZ2F0aW9uIENvbW1pc3Npb24gKENXSU5DKSwgQ2VudHJhbCBUZWNobmljYWwgUG93ZXIgQm9hcmQuIEhlIGhlbHBlZCBpbiBlc3RhYmxpc2hpbmcgdGhlIGludGVncmF0ZWQgd2F0ZXIgcmVzb3VyY2VzIG1hbmFnZW1lbnQgdGhyb3VnaCB0aGUgZXN0YWJsaXNobWVudCBvZiB0aGUgcml2ZXIgdmFsbGV5IGF1dGhvcml0eSwgd2hpY2ggYWN0aXZlbHkgY29uc2lkZXJlZCBwcm9qZWN0cyBsaWtlIHRoZSBEYW1vZGFyIFJpdmVyIFZhbGxleSBQcm9qZWN0LCB0aGUgU29uZSBSaXZlciBWYWxsZXkgUHJvamVjdCB0aGUgTWFoYW5hZGkgKEhpcmFrdWQgUHJvamVjdCksIHRoZSBLb3NpIGFuZCBvdGhlcnMgb24gdGhlIENoYW1iYWwgYW5kIHRoZSByaXZlcnMgb2YgdGhlIERlY2NhbiByZWdpb24uIFRoZSBJbnRlci1TdGF0ZSBXYXRlciBEaXNwdXRlIEFjdCwgMTk1NiwgYW5kIHRoZSBSaXZlciBCb2FyZCBBY3QsIDE5NTYgZW1hbmF0ZSBmcm9tIGhpcyB2aXNpb24uICBDb250cmlidXRpb24gZm9yIHRoZSB3ZWxmYXJlIG9mIGxhYm91cmVycyBhbmQgSW5kdXN0cmlhbCBXb3JrZXJzOiBBcyBhIG1lbWJlciBvZiB0aGUgQm9tYmF5IEFzc2VtYmx5LCBBbWJlZGthciBvcHBvc2VkIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlIEluZHVzdHJpYWwgRGlzcHV0ZXMgQmlsbCwgMTkzNywgYXMgaXQgcmVtb3ZlZCB3b3JrZXJzJyByaWdodCB0byBzdHJpa2UuIEhlIGNvbnRyaWJ1dGVkIHRvIHRoZSByZWR1Y3Rpb24gb2Ygd29ya2luZyBob3VycyB0byA0OCBob3VycyBwZXIgd2VlaywgbGlmdGluZyB0aGUgYmFuIG9uIHRoZSBlbXBsb3ltZW50IG9mIHdvbWVuIGZvciB1bmRlcmdyb3VuZCB3b3JrIGluIGNvYWwgbWluZXMsIGludHJvZHVjaW5nIHRoZSBwcm92aXNpb25zIG9mIG92ZXJ0aW1lLCBwYWlkIGxlYXZlIGFuZCBtaW5pbXVtIHdhZ2UuIEhlIGFsc28gaGVscGVkIHRvIGVzdGFibGlzaCB0aGUgcHJpbmNpcGxlIG9mICdlcXVhbCBwYXkgZm9yIGVxdWFsIHdvcmsnIGlycmVzcGVjdGl2ZSBvZiBzZXggYW5kIG1hdGVybml0eSBiZW5lZml0cy4gQW1iZWRrYXIgb3V0cmlnaHRseSBvcHBvc2VkIHRoZSBjb21tdW5pc3QgbGFib3VyIG1vdmVtZW50cywgdGhlaXIgZXh0cmF0ZXJyaXRvcmlhbCBsb3lhbHRpZXMgYW5kIHRoZWlyIE1hcnhpYW4gYXBwcm9hY2ggb2YgY29udHJvbGxpbmcgYWxsIG1lYW5zIG9mIHByb2R1Y3Rpb24uIEFtYmVka2FyOiBWb2ljZSBvZiB0aGUgZGVwcmVzc2VkIGNsYXNzZXM6IEFtYmVka2FyIHdhcyB0aGUgdm9pY2Ugb2YgdGhlIERlcHJlc3NlZCBDbGFzc2VzIG9uIGV2ZXJ5IHBsYXRmb3JtLiBBcyB0aGVpciByZXByZXNlbnRhdGl2ZSBhdCB0aGUgUm91bmQgVGFibGUgQ29uZmVyZW5jZSwgaGUgY2hhbXBpb25lZCB0aGUgY2F1c2Ugb2YgbGFib3VyIGFuZCBpbXByb3ZpbmcgdGhlIGNvbmRpdGlvbiBvZiBwZWFzYW50cy4gRHVyaW5nIHRoZSBCb21iYXkgQXNzZW1ibHkncyBQb29uYSBzZXNzaW9uIGluIDE5MzcsIGhlIGludHJvZHVjZWQgYSBCaWxsIHRvIGFib2xpc2ggdGhlIEtob3RpIHN5c3RlbSBvZiBsYW5kIHRlbnVyZSBpbiBLb25rYW4uIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEluIEJvbWJheSwgdGhlIGhpc3RvcmljIHBlYXNhbnQgbWFyY2ggdG8gdGhlIENvdW5jaWwgSGFsbCBpbiAxOTM4IG1hZGUgaGltIGEgcG9wdWxhciBsZWFkZXIgb2YgdGhlIHBlYXNhbnRzLCB3b3JrZXJzLCBhbmQgdGhlIGxhbmRsZXNzLiBIZSB3YXMgdGhlIGZpcnN0IGxlZ2lzbGF0b3IgaW4gdGhlIGNvdW50cnkgdG8gaW50cm9kdWNlIGEgQmlsbCBmb3IgYWJvbGlzaGluZyB0aGUgc2VyZmRvbSBvZiBhZ3JpY3VsdHVyYWwgdGVuYW50cy4gSGlzIGVzc2F5IHRpdGxlZCAnU21hbGwgSG9sZGluZ3MgaW4gSW5kaWEgYW5kIHRoZWlyIFJlbWVkaWVzJyAoMTkxOCkgcHJvcG9zZWQgaW5kdXN0cmlhbGlzYXRpb24gYXMgdGhlIGFuc3dlciB0byBJbmRpYSdzIGFncmljdWx0dXJhbCBwcm9ibGVtIGFuZCBpcyBzdGlsbCByZWxldmFudCB0byBjb250ZW1wb3JhcnkgZGViYXRlcy4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 66,
      "question" : "With reference to Desai-Liaqat pact, consider the following statements:\n\t1. It recommended that the two-third number of persons to be nominated by the Congress and theremaining one-third to be nominated by League in the central legislature.\n\t2. It did not propose any reservation for minorities.. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liabilityWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTm9uZSBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gQmh1bGFiaGFpIERlc2FpLCBsZWFkZXIgb2YgdGhlIENvbmdyZXNzIFBhcnR5IGluIHRoZSBDZW50cmFsIExlZ2lzbGF0aXZlIEFzc2VtYmx5LCBtZXQgTGlhcWF0IEFsaSBLaGFuLCBkZXB1dHkgbGVhZGVyIG9mIHRoZSBNdXNsaW0gTGVhZ3VlIGluIHRoYXQgQXNzZW1ibHksIGFuZCBib3RoIG9mIHRoZW0gY2FtZSB1cCB3aXRoIHRoZSBkcmFmdCBwcm9wb3NhbCBmb3IgdGhlIGZvcm1hdGlvbiBvZiBhbiBpbnRlcmltIGdvdmVybm1lbnQgYXQgdGhlIGNlbnRyZSwgY29uc2lzdGluZyBvZjog4pePIEFuIGVxdWFsIG51bWJlciBvZiBwZXJzb25zIG5vbWluYXRlZCBieSB0aGUgQ29uZ3Jlc3MgYW5kIHRoZSBMZWFndWUgaW4gdGhlIGNlbnRyYWwgbGVnaXNsYXR1cmUuIOKXjyAyMCUgcmVzZXJ2ZWQgc2VhdHMgZm9yIG1pbm9yaXRpZXMuIE5vIHNldHRsZW1lbnQgY291bGQgYmUgcmVhY2hlZCBiZXR3ZWVuIHRoZSBDb25ncmVzcyBhbmQgdGhlIExlYWd1ZSBvbiB0aGVzZSBsaW5lcy4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 67,
      "question" : "Which of the following decisions was/were taken at INC Lahore session, 1929?\n\t1. Attending the Round Table Conference.\n\t2. January 26, 1930 was fixed as the first Independence (Swarajya) Day, to be celebratedeverywhere.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCB3YXMgTGFob3JlIFNlc3Npb24gMTkyOT8gVGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcywgb24gMTkgRGVjZW1iZXIgMTkyOSwgcGFzc2VkIHRoZSBoaXN0b3JpYyAnUHVybmEgU3dhcmFqJyAtICh0b3RhbCBpbmRlcGVuZGVuY2UpIHJlc29sdXRpb24gLSBhdCBpdHMgTGFob3JlIHNlc3Npb24uIEEgcHVibGljIGRlY2xhcmF0aW9uIHdhcyBtYWRlIG9uIDI2IEphbnVhcnkgMTkzMCAtIGEgZGF5IHdoaWNoIHRoZSBDb25ncmVzcyBQYXJ0eSB1cmdlZCBJbmRpYW5zIHRvIGNlbGVicmF0ZSBhcyAnSW5kZXBlbmRlbmNlIERheScuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgZm9sbG93aW5nIG1ham9yIGRlY2lzaW9ucyB3ZXJlIHRha2VuIGF0IHRoZSBJTkMgTGFob3JlIHNlc3Npb24sIDE5Mjk6IOKXjyBUaGUgUm91bmQgVGFibGUgQ29uZmVyZW5jZSB3YXMgdG8gYmUgYm95Y290dGVkLiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiDil48gQ29tcGxldGUgaW5kZXBlbmRlbmNlIHdhcyBkZWNsYXJlZCBhcyB0aGUgYWltIG9mIHRoZSBDb25ncmVzcy4g4pePIENvbmdyZXNzIFdvcmtpbmcgQ29tbWl0dGVlIHdhcyBhdXRob3Jpc2VkIHRvIGxhdW5jaCBhIHByb2dyYW1tZSBvZiBjaXZpbCBkaXNvYmVkaWVuY2UgaW5jbHVkaW5nIG5vbi1wYXltZW50IG9mIHRheGVzIGFuZCBhbGwgbWVtYmVycyBvZiBsZWdpc2xhdHVyZXMgd2VyZSBhc2tlZCB0byByZXNpZ24gdGhlaXIgc2VhdHMuIOKXjyBKYW51YXJ5IDI2LCAxOTMwIHdhcyBmaXhlZCBhcyB0aGUgZmlyc3QgSW5kZXBlbmRlbmNlIChTd2FyYWp5YSkgRGF5LCB0byBiZSBjZWxlYnJhdGVkIGV2ZXJ5d2hlcmUu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 68,
      "question" : "Consider the following statements regarding Rabindranath Tagore\n\t1. He was the first Indian to receive a Nobel Prize in Literature\n\t2. He released his first collection of poems under the pen name 'Bhanusimha'.\n\t3. He was the founder of Visva-Bharati instituteWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBBYm91dCBSYWJpbmRyYW5hdGggVGFnb3JlOiBFYXJseSBsaWZlOiBQb3B1bGFybHkga25vd24gYXMgJ0d1cnVkZXYnLCBoZSB3YXMgYm9ybiBpbiBhbiBhZmZsdWVudCBGYW1pbHkuIFRhZ29yZSB3YXMgcHJpbWFyaWx5IGtub3duIGFzIGEgd3JpdGVyLCBwb2V0LCBwbGF5d3JpZ2h0LCBwaGlsb3NvcGhlciBhbmQgYWVzdGhldGljaWFuLCBtdXNpYyBjb21wb3NlciBhbmQgY2hvcmVvZ3JhcGhlciwgZm91bmRlciBvZiBhIHVuaXF1ZSBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbiAtIFZpc3ZhLSBCaGFyYXRpIGFuZCBhIHBhaW50ZXIuIFRhZ29yZSBiZWdhbiB3cml0aW5nIHBvZXRyeSBhdCB0aGUgdGVuZGVyIGFnZSBvZiBlaWdodCB5ZWFycyBvbGQgYW5kIGF0IDE2IHllYXJzIG9mIGFnZSwgVGFnb3JlIHJlbGVhc2VkIGhpcyBmaXJzdCBjb2xsZWN0aW9uIG9mIHBvZW1zIHVuZGVyIHRoZSBwZW4gbmFtZSAnQmhhbnVzaW1oYScuIEhlIGhhZCBzcG9rZW4gYXQgdGhlIFdvcmxkIFBhcmxpYW1lbnQgZm9yIFJlbGlnaW9ucyBpbiB0aGUgeWVhcnMgMTkyOSBhbmQgMTkzNy4gQ29udHJpYnV0aW9uczogSGUgd3JvdGUgdGhlIE5hdGlvbmFsIEFudGhlbXMgb2YgSW5kaWEgYW5kIEJhbmdsYWRlc2guIEhlIGxlZnQgaGlzIGltcHJpbnQgb24gYXJ0IGFuZCBwbGF5ZWQgYSByb2xlIGluIHRyYW5zZm9ybWluZyBpdHMgcHJhY3RpY2VzIGFuZCB1c2hlcmluZyBpbnRvIG1vZGVybmlzbS4gQmV0d2VlbiAxOTI4IGFuZCAxOTQwLCBSYWJpbmRyYW5hdGggcGFpbnRlZCBtb3JlIHRoYW4gMjAwMCBpbWFnZXMuIEhlIG5ldmVyIGdhdmUgYW55IHRpdGxlIHRvIGhpcyBwYWludGluZ3MuIEV4cHJlc3Npb25pc20gaW4gRXVyb3BlYW4gYXJ0IGFuZCB0aGUgcHJpbWl0aXZlIGFydCBvZiBhbmNpZW50IGN1bHR1cmVzIGluc3BpcmVkIGhpbS4gQXdhcmRzOiBJbiAxOTEzLCBoZSBiZWNhbWUgdGhlIGZpcnN0IEluZGlhbiB0byByZWNlaXZlIGEgTm9iZWwgUHJpemUgaW4gTGl0ZXJhdHVyZSBmb3IgaGlzIG5vdmVsICdHZWV0YW5qYWxpJy4gUm9sZSBpbiB0aGUgZnJlZWRvbSBzdHJ1Z2dsZTogSGUgZGVub3VuY2VkIEJyaXRpc2ggaW1wZXJpYWxpc20sIHlldCBoZSBkaWQgbm90IGZ1bGx5IHN1cHBvcnQgb3IgYWdyZWUgd2l0aCBHYW5kaGkgYW5kIGhpcyBOb24tY29vcGVyYXRpb24gTW92ZW1lbnQuIEhlIHZpZXdlZCBCcml0aXNoIHJ1bGUgYXMgYSBzeW1wdG9tIG9mIHRoZSBvdmVyYWxsICdzaWNrbmVzcycgb2YgdGhlIHNvY2lhbCAnZGlzZWFzZScgb2YgdGhlIHB1YmxpYy4gSW4gaGlzIHdyaXRpbmdzLCBoZSBhbHNvIHZvaWNlZCBoaXMgc3VwcG9ydCBvZiBJbmRpYW4gbmF0aW9uYWxpc3RzLiBSYWJpbmRyYW5hdGggVGFnb3JlIHdyb3RlIHRoZSBzb25nIEJhbmdsYXIgTWF0aSBCYW5nbGFyIEpvbCAoU29pbCBvZiBCZW5nYWwsIFdhdGVyIG9mIEJlbmdhbCkgdG8gdW5pdGUgdGhlIEJlbmdhbGkgcG9wdWxhdGlvbiBhZnRlciBCZW5nYWwgcGFydGl0aW9uIGluIDE5MDUuIEhlIGFsc28gd3JvdGUgdGhlIGZhbWVkICdBbWFyIFNvbmFyIEJhbmdsYScgd2hpY2ggaGVscGVkIGlnbml0ZSBhIGZlZWxpbmcgb2YgbmF0aW9uYWxpc20gYW1vbmdzdCBwZW9wbGUuIEhlIHN0YXJ0ZWQgdGhlIFJha2hpIFV0c2F2d2hlcmUgcGVvcGxlIGZyb20gSGluZHUgYW5kIE11c2xpbSBjb21tdW5pdGllcyB0aWVkIGNvbG91cmZ1bCB0aHJlYWRzIG9uIGVhY2ggb3RoZXIncyB3cmlzdHMuIFRhZ29yZSByZWplY3RlZCB2aW9sZW5jZSBmcm9tIHRoZSBCcml0aXNoIGFzIHdlbGwgYW5kIHJlbm91bmNlZCB0aGUga25pZ2h0aG9vZCB0aGF0IGhhZCBiZWVuIGdpdmVuIHRvIGhpbSBieSBMb3JkIEhhcmRpbmdlIGluIDE5MTUgaW4gcHJvdGVzdCBvZiB0aGUgdmlvbGVudCBBbXJpdHNhciBtYXNzYWNyZSBpbiB3aGljaCB0aGUgQnJpdGlzaCBraWxsZWQgYXQgbGVhc3QgMTUyNiB1bmFybWVkIEluZGlhbiBjaXRpemVucy4gVGhlIGNvcm5lcnN0b25lIG9mIFRhZ29yZSdzIGJlbGllZnMgYW5kIHdvcmsgaXMgdGhlIGlkZWEgdGhhdCBhbnRpLWNvbG9uaWFsaXNtIGNhbm5vdCBzaW1wbHkgYmUgYWNoaWV2ZWQgYnkgcmVqZWN0aW5nIGFsbCB0aGluZ3MgQnJpdGlzaCwgYnV0IHNob3VsZCBjb25zaXN0IG9mIGluY29ycG9yYXRpbmcgYWxsIHRoZSBiZXN0IGFzcGVjdHMgb2Ygd2VzdGVybiBjdWx0dXJlIGludG8gdGhlIGJlc3Qgb2YgSW5kaWFuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IGN1bHR1cmUuIFdoYXQgZnJlZWRvbSBtZWFudCBmb3IgVGFnb3JlPyAnRnJlZWRvbScgZG9lcyBub3Qgc2ltcGx5IG1lYW4gcG9saXRpY2FsIGZyZWVkb20gZnJvbSB0aGUgQnJpdGlzaDsgVHJ1ZSBmcmVlZG9tIG1lYW5zIHRoZSBhYmlsaXR5IHRvIGJlIHRydXRoZnVsIGFuZCBob25lc3Qgd2l0aCBvbmVzZWxmIG90aGVyd2lzZSBhdXRvbm9teSBsb3NlcyBhbGwgb2YgaXRzIHdvcnRoLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 69,
      "question" : "Who among the following leaders established the Bombay Mill and MillhandsAssociation?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmFyYXlhbiBNZWdoYWppIExva2hhbmRlIHdhcyB0aGUgZmF0aGVyIG9mIHRyYWRlIHVuaW9uIG1vdmVtZW50IGluIEluZGlhLiAgSGUgc3RhcnRlZCB0aGUgbmV3c3BhcGVyIERlZW5iYW5kaHUgYW5kIHNldCB1cCB0aGUgQm9tYmF5IE1pbGwgYW5kIE1pbGxoYW5kcyBBc3NvY2lhdGlvbg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "S. Dange",
        "option2" : "N.M. Lokhanday",
        "option3" : "Chidambaram Pillai",
        "option4" : "Muzaffar Ahmed"
      }
    },
    {
      "index" : 70,
      "question" : "Which of the following leaders was/were the early critics of British Economic policies?\n\t1. Justice Mahadeo Govind Ranade\n\t2. Romesh Chandra Dutt\n\t3. G. Subramaniya IyerSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBhYm92ZSBwZXJzb25hbGl0aWVzIHdlcmUgdGhlIGVjb25vbWljIGNyaXRpY3MuIERhZGFiaGFpIE5hb3JvamksIHRoZSAnR3JhbmQgT2xkIE1hbiBvZiBJbmRpYScsIHdobyBhZnRlciBhIGJyaWxsaWFudCBhbmFseXNpcyBvZiB0aGUgY29sb25pYWwgZWNvbm9teSBwdXQgZm9yd2FyZCB0aGUgdGhlb3J5IG9mIGVjb25vbWljIGRyYWluIGluIFBvdmVydHkgYW5kIFVuQnJpdGlzaCBSdWxlIGluIEluZGlhLiBPdGhlciBlY29ub21pYyBhbmFseXN0cyBpbmNsdWRlZCBKdXN0aWNlIE1haGFkZW8gR292aW5kIFJhbmFkZSwgUm9tZXNoIENoYW5kcmEgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgRHV0dCAoVGhlIEVjb25vbWljIEhpc3Rvcnkgb2YgSW5kaWEpLCBHb3BhbCBLcmlzaG5hIEdva2hhbGUsIEcuIFN1YnJhbWFuaXlhIEl5ZXIgYW5kIFByaXRod2lzaGNoYW5kcmEgUmF5Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3 only .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option3" : "1 and 2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements regarding Iron Dome\n\t1. It is a long-range missile ranges up to 70 km.\n\t2. It can be operated in all weather conditions including fog, dust storm, low clouds and rain.\n\t3. It is a multi-mission mobile air defence.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBJcm9uIERvbWUgaXMgYW4gZWZmZWN0aXZlLCB0cnVjay10b3dlZCwgbXVsdGktbWlzc2lvbiBtb2JpbGUgYWlyIGRlZmVuY2Ugc3lzdGVtIGRldmVsb3BlZCBieSBSYWZhZWwgQWR2YW5jZWQgRGVmZW5jZSBTeXN0ZW1zLiBUaGUgc3lzdGVtIGhhcyBiZWVuIGRldmVsb3BlZCB0byBjb3VudGVyIHZlcnkgc2hvcnQtcmFuZ2Ugcm9ja2V0cyBhbmQgMTU1bW0gYXJ0aWxsZXJ5IHNoZWxsIHRocmVhdHMgd2l0aCByYW5nZXMgb2YgdXAgdG8gNzBrbS4gSXQgY2FuIGJlIG9wZXJhdGVkIGluIGFsbCB3ZWF0aGVyIGNvbmRpdGlvbnMgaW5jbHVkaW5nIGZvZywgZHVzdCBzdG9ybSwgbG93IGNsb3VkcyBhbmQgcmFpbi4gVGhlIGFsbC13ZWF0aGVyIGFpciBkZWZlbmNlIHN5c3RlbSBwcm90ZWN0cyB0aGUgcG9wdWxhdGlvbiBhbmQgY3JpdGljYWwgYXNzZXRzIGFuZCBjYW4gYmUgc3RyYXRlZ2ljYWxseSBwbGFjZWQgdG8gcmVkdWNlIGNvbGxhdGVyYWwgZGFtYWdlLiBJcm9uIERvbWUgZGV0ZWN0cywgYW5hbHlzZXMgYW5kIGludGVyY2VwdHMgYSByYW5nZSBvZiBpbmNvbWluZyB0aHJlYXRzLCBpbmNsdWRpbmcgQy1SQU0sIHByZWNpc2UgZ3VpZGVkIG1pc3NpbGVzLCBjcnVpc2UgbWlzc2lsZXMsIHVubWFubmVkIGFlcmlhbCB2ZWhpY2xlcyBhbmQgYWlyLWJyZWF0aGluZyB0aHJlYXRzLiBUaGUgc3lzdGVtIGhhcyBzbyBmYXIgaW50ZXJjZXB0ZWQgbW9yZSB0aGFuIDIsNTAwIGluY29taW5nIHRhcmdldHMgd2l0aCBhIHN1Y2Nlc3MgcmF0ZSBvZiBvdmVyIDkwJS4gaHR0cHM6Ly93d3cuYnVzaW5lc3Mtc3RhbmRhcmQuY29tL2FydGljbGUvaW50ZXJuYXRpb25hbC91a3JhaW5lLXByZXNzZXMtdG8tYnV5LWlzcmFlbC1zLWlyb24tZG8gbWUtdG8tZGVmZW5kLWFnYWluc3QtcnVzc2lhbi1hdHRhY2tzLTEyMjA2MDgwMDA3M18xLmh0bWwgaHR0cHM6Ly93d3cuYXJteS10ZWNobm9sb2d5LmNvbS9wcm9qZWN0cy9pcm9uLWRvbWUv",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements regarding S-400 Triumf\n\t1. It is a short-range air defence system consists of a surface to air missile that can attack UAVs,drones, cruise missiles.\n\t2. It can engage the targets within the range of 400 km at an altitude of up to 100 km.\n\t3. It is capable of firing three types of missiles to create a layered defence.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUnVzc2lhJ3MgUy00MDAgVHJpdW1waCBhaXIgZGVmZW5jZSBzeXN0ZW0gaW50ZWdyYXRlcyBhIG11bHRpZnVuY3Rpb24gcmFkYXIsIGF1dG9ub21vdXMgZGV0ZWN0aW9uIGFuZCB0YXJnZXRpbmcgc3lzdGVtcywgYW50aS1haXJjcmFmdCBtaXNzaWxlIHN5c3RlbXMsIGxhdW5jaGVycywgYW5kIGNvbW1hbmQgYW5kIGNvbnRyb2wgY2VudHJlLiBJdCBpcyBjYXBhYmxlIG9mIGZpcmluZyB0aHJlZSB0eXBlcyBvZiBtaXNzaWxlcyB0byBjcmVhdGUgYSBsYXllcmVkIGRlZmVuY2UuIEl0IGlzIGEgbG9uZy1yYW5nZSBhaXIgZGVmZW5jZSBzeXN0ZW0gY29uc2lzdHMgb2YgYSBzdXJmYWNlIHRvIGFpciBtaXNzaWxlIHRoYXQgY2FuIGF0dGFjayBVQVZzLCBkcm9uZXMsIGNydWlzZSBtaXNzaWxlcy4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHN5c3RlbSBjYW4gZW5nYWdlIGFsbCB0eXBlcyBvZiBhZXJpYWwgdGFyZ2V0cywgaW5jbHVkaW5nIGFpcmNyYWZ0LCB1bm1hbm5lZCBhZXJpYWwgdmVoaWNsZXMgKFVBViksIGFuZCBiYWxsaXN0aWMgYW5kIGNydWlzZSBtaXNzaWxlcywgd2l0aGluIHRoZSByYW5nZSBvZiA0MDBrbSBhdCBhbiBhbHRpdHVkZSBvZiB1cCB0byAzMGttLiBUaGUgc3lzdGVtIGNhbiBzaW11bHRhbmVvdXNseSBlbmdhZ2UgMzYgdGFyZ2V0cy4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIFMtNDAwIGlzIHR3aWNlIGFzIGVmZmVjdGl2ZSBhcyB0aGUgcHJldmlvdXMgUnVzc2lhbiBhaXIgZGVmZW5jZSBzeXN0ZW1zIGFuZCBjYW4gYmUgZGVwbG95ZWQgd2l0aGluIGZpdmUgbWludXRlcy4gSXQgY2FuIGFsc28gYmUgaW50ZWdyYXRlZCBpbnRvIHRoZSBleGlzdGluZyBhbmQgZnV0dXJlIGFpciBkZWZlbmNlIHVuaXRzIG9mIHRoZSBhaXJmb3JjZSwgYXJteSBhbmQgbmF2eS4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IGh0dHBzOi8vd3d3LnRyaWJ1bmVpbmRpYS5jb20vbmV3cy9uYXRpb24vdXMtaG91c2UtYXBwcm92ZXMtY2FhdHNhLXdhaXZlci1mb3ItaW5kaWEtb3Zlci1zLTQwIDAtZGVhbC13aXRoLXJ1c3NpYS00MTI3NzQgaHR0cHM6Ly93d3cuYXJteS10ZWNobm9sb2d5LmNvbS9wcm9qZWN0cy9zLTQwMC10cml1bXBoLWFpci1kZWZlbmNlLW1pc3NpbGUtc3lzdGVtLw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3 only"
      }
    },
    {
      "index" : 73,
      "question" : "Which of the following agreements is/are signed by India?#87933\n\t1. Basic Exchange and Cooperation Agreement\n\t2. Logistics Exchange Memorandum of Agreement\n\t3. Communications Compatibility and Security AgreementSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBhYm92ZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiBJbmRpYSBhbmQgdGhlIFVuaXRlZCBTdGF0ZXMgaGF2ZSBzaWduZWQgdGhlIEJhc2ljIEV4Y2hhbmdlIGFuZCBDb29wZXJhdGlvbiBBZ3JlZW1lbnQgKEJFQ0EpLCB0aGUgTG9naXN0aWNzIEV4Y2hhbmdlIE1lbW9yYW5kdW0gb2YgQWdyZWVtZW50IChMRU1PQSkgYW5kIHRoZSBDb21tdW5pY2F0aW9ucyBDb21wYXRpYmlsaXR5IGFuZCBTZWN1cml0eSBBZ3JlZW1lbnQgKENPTUNBU0EpIC0gY29tcGxldGVzIGEgdHJvaWthIG9mICdmb3VuZGF0aW9uYWwgcGFjdHMnIGZvciBkZWVwIG1pbGl0YXJ5IGNvb3BlcmF0aW9uIGJldHdlZW4gdGhlIHR3byBjb3VudHJpZXMuIFdoYXQgaXMgdGhlIEJhc2ljIEV4Y2hhbmdlIGFuZCBDb29wZXJhdGlvbiBBZ3JlZW1lbnQgKEJFQ0EpPyBCRUNBIHdpbGwgaGVscCBJbmRpYSBnZXQgcmVhbC10aW1lIGFjY2VzcyB0byBBbWVyaWNhbiBnZW9zcGF0aWFsIGludGVsbGlnZW5jZSB0aGF0IHdpbGwgZW5oYW5jZSB0aGUgYWNjdXJhY3kgb2YgYXV0b21hdGVkIHN5c3RlbXMgYW5kIHdlYXBvbnMgbGlrZSBtaXNzaWxlcyBhbmQgYXJtZWQgZHJvbmVzLiBUaHJvdWdoIHRoZSBzaGFyaW5nIG9mIGluZm9ybWF0aW9uIG9uIG1hcHMgYW5kIHNhdGVsbGl0ZSBpbWFnZXMsIGl0IHdpbGwgaGVscCBJbmRpYSBhY2Nlc3MgdG9wb2dyYXBoaWNhbCBhbmQgYWVyb25hdXRpY2FsIGRhdGEsIGFuZCBhZHZhbmNlZCBwcm9kdWN0cyB0aGF0IHdpbGwgYWlkIGluIG5hdmlnYXRpb24gYW5kIHRhcmdldGluZy4gVGhpcyBjb3VsZCBiZSBrZXkgdG8gQWlyIEZvcmNlLXRvLUFpciBGb3JjZSBjb29wZXJhdGlvbiBiZXR3ZWVuIEluZGlhIGFuZCB0aGUgVVMuIEp1c3QgYXMgeW91ciByYWRpbyBjYWIgKG9yIHRoZSBHUFMgaW4geW91ciBzbWFydHBob25lKSBoZWxwcyB5b3UgemVybyBpbiBvbiB0aGUgcGF0aCB0byB5b3VyIGRlc3RpbmF0aW9uIGFuZCBoZWxwcyB5b3UgcmVhY2ggaXQgcXVpY2tseSBhbmQgZWZmaWNpZW50bHksIEJFQ0Egd2lsbCBwcm92aWRlIEluZGlhbiBtaWxpdGFyeSBzeXN0ZW1zIHdpdGggYSBoaWdoLSBxdWFsaXR5IEdQUyB0byBuYXZpZ2F0ZSBtaXNzaWxlcyB3aXRoIHJlYWwtdGltZSBpbnRlbGxpZ2VuY2UgdG8gcHJlY2lzZWx5IHRhcmdldCB0aGUgYWR2ZXJzYXJ5LiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmVkL2JlY2EtaW5kaWEtdXMtdHJhZGUtYWdyZWVtZW50cy1yYWpuYXRoLXNpbmdoLW1pa2UtIHBvbXBlby02OTA2NjM3Lw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 74,
      "question" : "Which of the following is/are the right tributaries of Brahmaputra?\n\t1. Jiabharali\n\t2. Kopili\n\t3. DikhowSelect the correct answer using the code given below. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEJyYWhtYXB1dHJhIGJhc2luIHNwcmVhZHMgb3ZlciBjb3VudHJpZXMgb2YgVGliZXQgKENoaW5hKSwgQmh1dGFuLCBJbmRpYSBhbmQgQmFuZ2xhZGVzaCBoYXZpbmcgYSB0b3RhbCBhcmVhIG9mIDUsODAsMDAwIFNxLmttLiBJbiBJbmRpYSwgaXQgc3ByZWFkcyBvdmVyIHN0YXRlcyBvZiBBcnVuYWNoYWwgUHJhZGVzaCwgQXNzYW0sIFdlc3QgQmVuZ2FsLCBNZWdoYWxheWEsIE5hZ2FsYW5kIGFuZCBTaWtraW0uIEl0IGlzIGJvdW5kZWQgYnkgdGhlIEhpbWFsYXlhcyBvbiB0aGUgbm9ydGgsIGJ5IHRoZSBQYXRrYXJpIHJhbmdlIG9mIGhpbGxzIG9uIHRoZSBlYXN0IHJ1bm5pbmcgYWxvbmcgdGhlIEluZGlhLU15YW5tYXIgYm9yZGVyLCBieSB0aGUgQXNzYW0gcmFuZ2Ugb2YgaGlsbHMgb24gdGhlIHNvdXRoIGFuZCBieSB0aGUgSGltYWxheWFzIGFuZCB0aGUgcmlkZ2Ugc2VwYXJhdGluZyBpdCBmcm9tIEdhbmdhIGJhc2luIG9uIHRoZSB3ZXN0LiBUaGUgQnJhaG1hcHV0cmEgUml2ZXIgb3JpZ2luYXRlcyBpbiB0aGUgbm9ydGggZnJvbSBLYWlsYXNoIHJhbmdlcyBvZiBIaW1hbGF5YXMgYXQgYW4gZWxldmF0aW9uIG9mIDUsMTUwIG0ganVzdCBzb3V0aCBvZiB0aGUgbGFrZSBjYWxsZWQgS29uZ2d5dSBUc2hvIGFuZCBmbG93cyBmb3IgYWJvdXQgYSB0b3RhbCBsZW5ndGggb2YgMiw5MDAga20uIEluIEluZGlhLCBpdCBmbG93cyBmb3IgOTE2IGttLiBUaGUgcHJpbmNpcGFsIHRyaWJ1dGFyaWVzIG9mIHRoZSByaXZlciBqb2luaW5nIGZyb20gcmlnaHQgYXJlIHRoZSBMb2hpdCwgdGhlIERpYmFuZywgdGhlIFN1YmFuc2lyaSwgdGhlIEppYWJoYXJhbGksIHRoZSBEaGFuc2lyaSwgdGhlIE1hbmFzLCB0aGUgVG9yc2EsIHRoZSBTYW5rb3NoIGFuZCB0aGUgVGVlc3RhIHdoZXJlYXMgdGhlIEJ1cmhpZGloaW5nLCB0aGUgRGVzYW5nLCB0aGUgRGlraG93LCB0aGUgRGhhbnNpcmkgYW5kIHRoZSBLb3BpbGkgam9pbnMgaXQgZnJvbSBsZWZ0LiAgaHR0cHM6Ly93d3cubGl2ZW1pbnQuY29tL25ld3MvaW5kaWEvYXNzYW0tZmxvb2RzLWRlY2xhcmVkLXNldmVyZS1uYXR1cmFsLWNhbGFtaXR5LWJ5LWNlbnRyZS0gY2hlY2stbGF0ZXN0LXVwZGF0ZXMtaGVyZS0xMTY1Nzk4Mzk5MjgwMi5odG1sIGh0dHBzOi8vaW5kaWF3cmlzLmdvdi5pbi93aWtpL2Rva3UucGhwP2lkPWJyYWhtYXB1dHJh",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements regarding World Economic Forum\n\t1. It was established by United Nations.\n\t2. It was funded by multinational companies.\n\t3. The WEF is known for its annual meeting at the end of January in Davos.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFdvcmxkIEVjb25vbWljIEZvcnVtIChXRUYpIGlzIGFuIGludGVybmF0aW9uYWwgbm9uLWdvdmVybm1lbnRhbCBhbmQgbG9iYnlpbmcgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgb3JnYW5pc2F0aW9uIGJhc2VkIGluIENvbG9nbnksIGNhbnRvbiBvZiBHZW5ldmEsIFN3aXR6ZXJsYW5kLiBJdCB3YXMgZm91bmRlZCBvbiAyNCBKYW51YXJ5IDE5NzEgYnkgR2VybWFuIGVuZ2luZWVyIGFuZCBlY29ub21pc3QgS2xhdXMgU2Nod2FiLiBIZW5jZSBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBmb3VuZGF0aW9uLCB3aGljaCBpcyBtb3N0bHkgZnVuZGVkIGJ5IGl0cyAxLDAwMCBtZW1iZXIgY29tcGFuaWVzIC0gdHlwaWNhbGx5IGdsb2JhbCBlbnRlcnByaXNlcyB3aXRoIG1vcmUgdGhhbiBmaXZlIGJpbGxpb24gVVMgZG9sbGFycyBpbiB0dXJub3ZlciAtIGFzIHdlbGwgYXMgcHVibGljIHN1YnNpZGllcywgdmlld3MgaXRzIG93biBtaXNzaW9uIGFzICJpbXByb3ZpbmcgdGhlIHN0YXRlIG9mIHRoZSB3b3JsZCBieSBlbmdhZ2luZyBidXNpbmVzcywgcG9saXRpY2FsLCBhY2FkZW1pYywgYW5kIG90aGVyIGxlYWRlcnMgb2Ygc29jaWV0eSB0byBzaGFwZSBnbG9iYWwsIHJlZ2lvbmFsLCBhbmQgaW5kdXN0cnkgYWdlbmRhcyIuIFRoZSBXRUYgaXMgbW9zdGx5IGtub3duIGZvciBpdHMgYW5udWFsIG1lZXRpbmcgYXQgdGhlIGVuZCBvZiBKYW51YXJ5IGluIERhdm9zLCBhIG1vdW50YWluIHJlc29ydCBpbiB0aGUgZWFzdGVybiBBbHBzIHJlZ2lvbiBvZiBTd2l0emVybGFuZC4gVGhlIG1lZXRpbmcgYnJpbmdzIHRvZ2V0aGVyIHNvbWUgMywwMDAgcGF5aW5nIG1lbWJlcnMgYW5kIHNlbGVjdGVkIHBhcnRpY2lwYW50cyAtIGFtb25nIHdob20gYXJlIGludmVzdG9ycywgYnVzaW5lc3MgbGVhZGVycywgcG9saXRpY2FsIGxlYWRlcnMsIGVjb25vbWlzdHMsIGNlbGVicml0aWVzIGFuZCBqb3VybmFsaXN0cyAtIGZvciB1cCB0byBmaXZlIGRheXMgdG8gZGlzY3VzcyBnbG9iYWwgaXNzdWVzIGFjcm9zcyA1MDAgc2Vzc2lvbnMuIFNvbWUgbWFqb3IgcmVwb3J0cyBwdWJsaXNoZWQgYnkgV0VGIGFyZTog4pePICAgICAgRW5lcmd5IFRyYW5zaXRpb24gSW5kZXguIOKXjyAgICAgIEdsb2JhbCBDb21wZXRpdGl2ZW5lc3MgUmVwb3J0LiDil48gICAgICBHbG9iYWwgSVQgUmVwb3J0IChXRUYgYWxvbmcgd2l0aCBJTlNFQUQsIGFuZCBDb3JuZWxsIFVuaXZlcnNpdHkgcHVibGlzaGVzIHRoaXMgcmVwb3J0LiDil48gICAgICBHbG9iYWwgR2VuZGVyIEdhcCBSZXBvcnQuIOKXjyAgICAgIEdsb2JhbCBSaXNrIFJlcG9ydC4g4pePICAgICAgR2xvYmFsIFRyYXZlbCBhbmQgVG91cmlzbSBSZXBvcnQuIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbmFsL2luZGlhZGF2b3MtbW9yZS1pbnZlc3RtZW50cy1sZXNzLWNvbmZsaWN0cy1wYW5kZW1pYy0gcmVhZHktaW5mcmEtb24tbGVhZGVycy1taW5kcy9hcnRpY2xlNjU0NDczOTguZWNl",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 76,
      "question" : "Consider the following statements regarding Colistin\n\t1. Colistin is an antibiotic used for therapeutic purpose in pulmonary diseases.\n\t2. It is largely misused in poultry industry as a growth promoter.\n\t3. The drug is banned under the provisions of the Drugs and Cosmetics Act, 1940.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Ng==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29saXN0aW4gaXMgYW4gYW50aWJpb3RpYyBmb3IgdGhlcmFwZXV0aWMgcHVycG9zZSBpbiB2ZXRlcmluYXJ5LiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBCdXQgdGhlIGRydWcgaXMgaGlnaGx5IG1pc3VzZWQgaW4gcG91bHRyeSBpbmR1c3RyeSBhcyBhIGdyb3d0aCBwcm9tb3RlciBmb3IgcHJvcGh5bGFjdGljIHB1cnBvc2UuIENvbGlzdGluIGlzIGEgdmFsdWFibGUsIGxhc3QtcmVzb3J0IGFudGliaW90aWMgdGhhdCBzYXZlcyBsaXZlcyBpbiBjcml0aWNhbCBjYXJlIHVuaXRzIGJ1dCBpbiByZWNlbnQgeWVhcnMsIHRoZXJlIGhhdmUgYmVlbiBwYXRpZW50cyB3aG8gaGF2ZSBleGhpYml0ZWQgcmVzaXN0YW5jZSB0byB0aGUgZHJ1Zy4gUmVjZW50bHksIHRoZSBNaW5pc3RyeSBvZiBIZWFsdGggYW5kIEZhbWlseSBXZWxmYXJlIGhhcyBpc3N1ZWQgYW4gb3JkZXIgcHJvaGliaXRpbmcgdGhlIG1hbnVmYWN0dXJlLCBzYWxlIGFuZCBkaXN0cmlidXRpb24gb2YgQ29saXN0aW4gYW5kIGl0cyBmb3JtdWxhdGlvbnMgZm9yIGZvb2QtcHJvZHVjaW5nIGFuaW1hbHMsIHBvdWx0cnksIGFxdWEgZmFybWluZyBhbmQgYW5pbWFsIGZlZWQgc3VwcGxlbWVudHMuIFRoZSBiYW4gaGFzIGJlZW4gaW1wb3NlZCB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgRHJ1Z3MgYW5kIENvc21ldGljcyBBY3Qs",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 3 only",
        "option3" : "2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 77,
      "question" : "Which of the following is/are the reasons for antimicrobial resistance?\n\t1. Over prescribing of antibiotics\n\t2. Unnecessary antibiotics usage in animals.\n\t3. Poor hygiene and sanitation practicesSelect the correct answer using the code given below Which of the statements given above arecorrect?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBhcmUgYW50aW1pY3JvYmlhbHM/IEFudGltaWNyb2JpYWxzIC0gaW5jbHVkaW5nIGFudGliaW90aWNzLCBhbnRpdmlyYWxzLCBhbnRpZnVuZ2FscyBhbmQgYW50aXBhcmFzaXRpY3MgLSBhcmUgbWVkaWNpbmVzIHVzZWQgdG8gcHJldmVudCBhbmQgdHJlYXQgaW5mZWN0aW9ucyBpbiBodW1hbnMsIGFuaW1hbHMgYW5kIHBsYW50cy4gV2hhdCBpcyBhbnRpbWljcm9iaWFsIHJlc2lzdGFuY2U/IEFudGltaWNyb2JpYWwgUmVzaXN0YW5jZSAoQU1SKSBvY2N1cnMgd2hlbiBiYWN0ZXJpYSwgdmlydXNlcywgZnVuZ2kgYW5kIHBhcmFzaXRlcyBjaGFuZ2Ugb3ZlciB0aW1lIGFuZCBubyBsb25nZXIgcmVzcG9uZCB0byBtZWRpY2luZXMgbWFraW5nIGluZmVjdGlvbnMgaGFyZGVyIHRvIHRyZWF0IGFuZCBpbmNyZWFzaW5nIHRoZSByaXNrIG9mIGRpc2Vhc2Ugc3ByZWFkLCBzZXZlcmUgaWxsbmVzcyBhbmQgZGVhdGguIEFzIGEgcmVzdWx0IG9mIGRydWcgcmVzaXN0YW5jZSwgYW50aWJpb3RpY3MgYW5kIG90aGVyIGFudGltaWNyb2JpYWwgbWVkaWNpbmVzIGJlY29tZSBpbmVmZmVjdGl2ZSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBhbmQgaW5mZWN0aW9ucyBiZWNvbWUgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCBvciBpbXBvc3NpYmxlIHRvIHRyZWF0LiBDYXVzZXMgb2YgQW50aWJpb3RpYyBSZXNpc3RhbmNlOg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 78,
      "question" : "Consider the following statements regarding Gravitational Waves\n\t1. Any object with mass that accelerates produces gravitational waves excluding humans, carsand airplanes.\n\t2. Gravitational waves interact very strongly with the matter. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t3. Isaac Newton predicted the existence of gravitational wavesSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBpbmNvcnJlY3QuIEdyYXZpdGF0aW9uYWwgd2F2ZXMgYXJlICdyaXBwbGVzJyBpbiB0aGUgZmFicmljIG9mIHNwYWNlLXRpbWUgY2F1c2VkIGJ5IHNvbWUgb2YgdGhlIG1vc3QgdmlvbGVudCBhbmQgZW5lcmdldGljIHByb2Nlc3NlcyBpbiB0aGUgVW5pdmVyc2UgbGlrZSBjb2xsaWRpbmcgYmxhY2sgaG9sZXMsIHRoZSBjb2xsYXBzZSBvZiBzdGVsbGFyIGNvcmVzIChzdXBlcm5vdmFlKSwgY29hbGVzY2luZyBuZXV0cm9uIHN0YXJzIG9yIHdoaXRlIGR3YXJmIHN0YXJzLCByZW1uYW50cyBvZiBncmF2aXRhdGlvbmFsIHJhZGlhdGlvbiBjcmVhdGVkIGJ5IHRoZSBiaXJ0aCBvZiB0aGUgVW5pdmVyc2UgaXRzZWxmLiBTb3VyY2VzIG9mIEcgd2F2ZXMgQW55IG9iamVjdCB3aXRoIG1hc3MgdGhhdCBhY2NlbGVyYXRlcyAod2hpY2ggaW4gc2NpZW5jZSBtZWFucyBjaGFuZ2VzIHBvc2l0aW9uIGF0IGEgdmFyaWFibGUgcmF0ZSwgYW5kIGluY2x1ZGVzIHNwaW5uaW5nIGFuZCBvcmJpdGluZyBvYmplY3RzKSBwcm9kdWNlcyBncmF2aXRhdGlvbmFsIHdhdmVzLCBpbmNsdWRpbmcgaHVtYW5zIGFuZCBjYXJzIGFuZCBhaXJwbGFuZXMgZXRjLiBCdXQgdGhlIGdyYXZpdGF0aW9uYWwgd2F2ZXMgbWFkZSBieSB1cyBoZXJlIG9uIEVhcnRoIGFyZSBtdWNoIHRvbyBzbWFsbCB0byBkZXRlY3QuIEluIGZhY3QsIGl0IGlzbid0IGV2ZW4gcmVtb3RlbHkgcG9zc2libGUgdG8gYnVpbGQgYSBtYWNoaW5lIHRoYXQgY2FuIHNwaW4gYW4gb2JqZWN0IGZhc3QgZW5vdWdoIHRvIHByb2R1Y2UgYSBkZXRlY3RpYmxlIGdyYXZpdGF0aW9uYWwgd2F2ZSAtIGV2ZW4gdGhlIHdvcmxkJ3Mgc3Ryb25nZXN0IG1hdGVyaWFscyB3b3VsZCBmbHkgYXBhcnQgYXQgdGhlIHJvdGF0aW9uIHNwZWVkcyBzdWNoIGEgbWFjaGluZSB3b3VsZCByZXF1aXJlLiBTaW5jZSB3ZSBjYW4ndCBnZW5lcmF0ZSBkZXRlY3RhYmxlIGdyYXZpdGF0aW9uYWwgd2F2ZXMgb24gRWFydGgsIHRoZSBvbmx5IHdheSB0byBzdHVkeSB0aGVtIGlzIHRvIGxvb2sgdG8gdGhlIHBsYWNlcyBpbiB0aGUgVW5pdmVyc2Ugd2hlcmUgdGhleSBhcmUgZ2VuZXJhdGVkIGJ5IG5hdHVyZS4gR3Jhdml0YXRpb25hbCB3YXZlcyBpbnRlcmFjdCB2ZXJ5IHdlYWtseSB3aXRoIG1hdHRlciAodW5saWtlIGVsZWN0cm9tYWduZXRpYyByYWRpYXRpb24pLCB0aGV5IHRyYXZlbCB0aHJvdWdoIHRoZSBVbml2ZXJzZSB2aXJ0dWFsbHkgdW5pbXBlZGVkIGdpdmluZyB1cyBhIGNsZWFyIHZpZXcgb2YgdGhlIGdyYXZpdGF0aW9uYWwtd2F2ZSBVbml2ZXJzZS4gQWxiZXJ0IEVpbnN0ZWluIHByZWRpY3RlZCB0aGUgZXhpc3RlbmNlIG9mIGdyYXZpdGF0aW9uYWwgd2F2ZXMgaW4gMTkxNiBpbiBoaXMgZ2VuZXJhbCB0aGVvcnkgb2YgcmVsYXRpdml0eS4gaHR0cHM6Ly93d3cubGlnby5jYWx0ZWNoLmVkdS9wYWdlL3doYXQtYXJlLWd3",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "3 only",
        "option3" : "2 only",
        "option4" : "None"
      }
    },
    {
      "index" : 79,
      "question" : "Consider the following statements\n\t1. Dark matter doesn't carry any charge.\n\t2. Dark matter causes rapid expansion of Universe\n\t3. Dark matter doesn't emit any lightWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBkYXJrIG1hdHRlciBhbmQgd2h5IGlzIGl0IHNvIGVsdXNpdmU/IEFsbCBpbnRlcmFjdGlvbnMgaW4gdGhlIHVuaXZlcnNlIGFyZSBhIHJlc3VsdCBvZiBmb3VyIGZ1bmRhbWVudGFsIGZvcmNlcyBhY3Rpbmcgb24gcGFydGljbGVzIC0gc3Ryb25nIG51Y2xlYXIgZm9yY2UsIHdlYWsgbnVjbGVhciBmb3JjZSwgZWxlY3Ryb21hZ25ldGljIGZvcmNlIGFuZCBncmF2aXRhdGlvbi4gRGFyayBtYXR0ZXIgaXMgcGFydGljbGVzIHRoYXQgZG8gbm90IGhhdmUgYSBjaGFyZ2UgLSB3aGljaCBtZWFucyB0aGV5IGRvIG5vdCBpbnRlcmFjdCB0aHJvdWdoIGVsZWN0cm9tYWduZXRpYyBpbnRlcmFjdGlvbnMuICdkYXJrJzogYmVjYXVzZSB0aGV5IGRvIG5vdCBlbWl0IGxpZ2h0LiAnbWF0dGVyJzogYmVjYXVzZSB0aGV5IHBvc3Nlc3MgbWFzcyBsaWtlIG5vcm1hbCBtYXR0ZXIgYW5kIGhlbmNlIGludGVyYWN0IHRocm91Z2ggZ3Jhdml0eS4gRGFyayBtYXR0ZXIgaXMgZWx1c2l2ZSBiZWNhdXNlOiBHcmF2aXRhdGlvbmFsIGZvcmNlIGlzIGV4dHJlbWVseSB3ZWFrLiBBIHBhcnRpY2xlIHRoYXQgaW50ZXJhY3RzIHNvIHdlYWtseSBiZWNvbWVzIHJhdGhlciBlbHVzaXZlIHRvIGRldGVjdC4gRGFyayBlbmVyZ3k6IEl0IGlzIGEgaHlwb3RoZXRpY2FsIGZvcm0gb2YgZW5lcmd5IHRoYXQgZXhlcnRzIGEgbmVnYXRpdmUsIHJlcHVsc2l2ZSBwcmVzc3VyZSwgYmVoYXZpbmcgbGlrZSB0aGUgb3Bwb3NpdGUgb2YgZ3Jhdml0eS4gSXQgaXMgY2F1c2luZyB0aGUgcmF0ZSBvZiBleHBhbnNpb24gb2Ygb3VyIHVuaXZlcnNlIHRvIGFjY2VsZXJhdGUgb3ZlciB0aW1lLCByYXRoZXIgdGhhbiB0byBzbG93IGRvd24uIFRoYXQncyBjb250cmFyeSB0byB3aGF0IG9uZSBtaWdodCBleHBlY3QgZnJvbSBhIHVuaXZlcnNlIHRoYXQgYmVnYW4gaW4gdGhlIEJpZyBCYW5nLiAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBodHRwczovL3d3dy5pbnNpZ2h0c29uaW5kaWEuY29tLzIwMjIvMDcvMTIvbWlzc2lvbi0yMDIzLWluc2lnaHRzLWRhaWx5LWN1cnJlbnQtYWZmYWlycy1waWItc3VtIG1hcnktMTItanVseS0yMDIyLw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 80,
      "question" : "Consider the following statements regarding Indian Ocean Commission (IOC)\n\t1. It is an intergovernmental organization.\n\t2. Malta and Mauritius are members of the organization.\n\t3. India and Madagascar are observer members of the organizationWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEluZGlhbiBPY2VhbiBDb21taXNzaW9uIChJT0MpIGlzIGFuIGludGVyZ292ZXJubWVudGFsIG9yZ2FuaXphdGlvbiB3aGljaCBicmluZ3MgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgdG9nZXRoZXIgZml2ZSBtZW1iZXIgc3RhdGVzIDogdGhlIFVuaW9uIG9mIHRoZSBDb21vcm9zLCBGcmFuY2UgaW4gcmVzcGVjdCBvZiBMYSBSw6l1bmlvbiwgTWFkYWdhc2NhciwgTWF1cml0aXVzIGFuZCB0aGUgU2V5Y2hlbGxlcy4gIENyZWF0ZWQgYnkgdGhlIFBvcnQtTG91aXMgRGVjbGFyYXRpb24gaW4gMTk4MiwgdGhlIElPQyB3YXMgaW5zdGl0dXRpb25hbGl6ZWQgaW4gU2V5Y2hlbGxlcyBpbiAxOTg0IGJ5IHRoZSBHZW5lcmFsIEFncmVlbWVudCBmb3IgQ29vcGVyYXRpb24sIGJldHRlciBrbm93biBhcyB0aGUgJ1ZpY3RvcmlhIEFncmVlbWVudCAnLiBUaGUgb25seSByZWdpb25hbCBvcmdhbml6YXRpb24gaW4gQWZyaWNhIGNvbXBvc2VkIGV4Y2x1c2l2ZWx5IG9mIGlzbGFuZHMsIGl0IGRlZmVuZHMgdGhlIHNwZWNpZmljaXRpZXMgb2YgaXRzIG1lbWJlciBzdGF0ZXMgb24gdGhlIGNvbnRpbmVudGFsIGFuZCBpbnRlcm5hdGlvbmFsIHNjZW5lcy4gIEJlbmVmaXRpbmcgZnJvbSB0aGUgYWN0aXZlIHN1cHBvcnQgb2YgYSBkb3plbiBpbnRlcm5hdGlvbmFsIHBhcnRuZXJzICwgdGhlIElPQyBlbWJvZGllcyByZWdpb25hbCBzb2xpZGFyaXR5IHRocm91Z2ggY29vcGVyYXRpb24gcHJvamVjdHMgY292ZXJpbmcgYSB3aWRlIHJhbmdlIG9mIHNlY3RvcnM6IHByZXNlcnZhdGlvbiBvZiBlY29zeXN0ZW1zLCBzdXN0YWluYWJsZSBtYW5hZ2VtZW50IG9mIG5hdHVyYWwgcmVzb3VyY2VzLCBtYXJpdGltZSBzZWN1cml0eSwgZW50cmVwcmVuZXVyc2hpcCwgcHVibGljIGhlYWx0aCAsIHJlbmV3YWJsZSBlbmVyZ2llcyBvciBjdWx0dXJlLiAgSW4gMjAxNiwgYW4gb2JzZXJ2ZXIgbWVtYmVyIHN0YXR1cyB3aXRoIHRoZSBJT0Mgd2FzIGNyZWF0ZWQuIElPQyBvYnNlcnZlciBtZW1iZXJzIGFyZSBpbnZpdGVkIHRvIG1ham9yIG9yZ2FuaXphdGlvbmFsIG1lZXRpbmdzIGFuZCBtYWludGFpbiBhIHN1c3RhaW5lZCBkaWFsb2d1ZSBvbiBzdWJqZWN0cyBvZiBjb21tb24gaW50ZXJlc3QuIElPQyBoYXMgc2V2ZW4gb2JzZXJ2ZXJzIC0gSW5kaWEsIENoaW5hLCBNYWx0YSwgRXVyb3BlYW4gVW5pb24sIEludGVybmF0aW9uYWwgT3JnYW5pemF0aW9uIG9mIExhIEZyYW5jb3Bob25pZSAoT0lGKSwgSmFwYW4gYW5kIFVuaXRlZCBOYXRpb25zIGh0dHBzOi8vd3d3LmNvbW1pc3Npb25vY2VhbmluZGllbi5vcmcvcHJlc2VudGF0aW9uLWNvaS8=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "2 only"
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following statements regarding Sustainable Development Goals (SDGs)\n\t1. The SDGs were set up in 2015 by the United Nations General Assembly.\n\t2. No poverty, zero hunger are some of the goals in SDGs.\n\t3. SDG's commitments are binding on developed countries.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzIChTREdzKSBvciBHbG9iYWwgR29hbHMgYXJlIGEgY29sbGVjdGlvbiBvZiAxNyBpbnRlcmxpbmtlZCBnbG9iYWwgZ29hbHMgZGVzaWduZWQgdG8gYmUgYSAiYmx1ZXByaW50IHRvIGFjaGlldmUgYSBiZXR0ZXIgYW5kIG1vcmUgc3VzdGFpbmFibGUgZnV0dXJlIGZvciBhbGwiLiBUaGUgU0RHcyB3ZXJlIHNldCB1cCBpbiAyMDE1IGJ5IHRoZSBVbml0ZWQgTmF0aW9ucyBHZW5lcmFsIEFzc2VtYmx5IChVTi1HQSkgYW5kIGFyZSBpbnRlbmRlZCB0byBiZSBhY2hpZXZlZCBieSAyMDMwLiBUaGV5IGFyZSBpbmNsdWRlZCBpbiBhbiBVTi1HQSBSZXNvbHV0aW9uIGNhbGxlZCB0aGUgMjAzMCBBZ2VuZGEgb3Igd2hhdCBpcyBjb2xsb3F1aWFsbHkga25vd24gYXMgQWdlbmRhIDIwMzAuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IFRoZSBTREdzIHdlcmUgZGV2ZWxvcGVkIGluIHRoZSBQb3N0LTIwMTUgRGV2ZWxvcG1lbnQgQWdlbmRhIGFzIHRoZSBmdXR1cmUgZ2xvYmFsIGRldmVsb3BtZW50IGZyYW1ld29yayB0byBzdWNjZWVkIHRoZSBNaWxsZW5uaXVtIERldmVsb3BtZW50IEdvYWxzIHdoaWNoIHdlcmUgZW5kZWQgaW4gMjAxNS4gVGhlIDE3IFNER3MgYXJlOiBObyBwb3ZlcnR5LCB6ZXJvIGh1bmdlciwgZ29vZCBoZWFsdGggYW5kIHdlbGwtYmVpbmcsIHF1YWxpdHkgZWR1Y2F0aW9uLCBnZW5kZXIgZXF1YWxpdHksIGNsZWFuIHdhdGVyIGFuZCBzYW5pdGF0aW9uLCBhZmZvcmRhYmxlIGFuZCBjbGVhbiBlbmVyZ3ksIGRlY2VudCB3b3JrIGFuZCBlY29ub21pYyBncm93dGgsIGluZHVzdHJ5LCBpbm5vdmF0aW9uIGFuZCBpbmZyYXN0cnVjdHVyZSwgUmVkdWNlZCBJbmVxdWFsaXR5LCBTdXN0YWluYWJsZSBDaXRpZXMgYW5kIENvbW11bml0aWVzLCBSZXNwb25zaWJsZSBDb25zdW1wdGlvbiBhbmQgUHJvZHVjdGlvbiwgQ2xpbWF0ZSBBY3Rpb24sIExpZmUgQmVsb3cgV2F0ZXIsIExpZmUgT24gTGFuZCwgUGVhY2UsIEp1c3RpY2UsIGFuZCBTdHJvbmcgSW5zdGl0dXRpb25zLCBQYXJ0bmVyc2hpcHMgZm9yIHRoZSBHb2Fscy4gVGhlcmUgaXMgbm8gYmluZGluZyBjb21taXRtZW50cy4gSGVuY2UgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vb3Bpbmlvbi9vcC1lZC9hbi1leWUtb24tYWNoaWV2aW5nLXNkZ3MvYXJ0aWNsZTY1NDE5Njc1LmVjZSBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9TdXN0YWluYWJsZV9EZXZlbG9wbWVudF9Hb2Fscw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "None"
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements regarding MonkeyPox\n\t1. Birds are the natural host of MonkeyPox Virus. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t2. It is fatal in nature.\n\t3. Human-to-human transmission is possibleWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWJvdXQgTW9ua2V5UG94OiBJdCBpcyBhIHZpcmFsIHpvb25vdGljIGRpc2Vhc2UgKHRyYW5zbWlzc2lvbiBmcm9tIGFuaW1hbHMgdG8gaHVtYW5zKSBhbmQgaXMgaWRlbnRpZmllZCBhcyBhIHBveC1saWtlIGRpc2Vhc2UgYW1vbmcgbW9ua2V5cyBoZW5jZSBpdCBpcyBuYW1lZCBNb25rZXlwb3guIEl0IGlzIGVuZGVtaWMgdG8gTmlnZXJpYS4gSXQgaXMgY2F1c2VkIGJ5IG1vbmtleXBveCB2aXJ1cywgYSBtZW1iZXIgb2YgdGhlIE9ydGhvcG94dmlydXMgZ2VudXMgaW4gdGhlIGZhbWlseSBQb3h2aXJpZGFlLiBUaGUgbmF0dXJhbCBob3N0IG9mIHRoZSB2aXJ1cyByZW1haW5zIHVuZGVmaW5lZC4gQnV0IHRoZSBkaXNlYXNlIGhhcyBiZWVuIHJlcG9ydGVkIGluIG1hbnkgYW5pbWFscy4gQW5pbWFscyBrbm93biB0byBiZSBzb3VyY2VzIG9mIE1vbmtleXBveCB2aXJ1cyBpbmNsdWRlIG1vbmtleXMgYW5kIGFwZXMsIGEgdmFyaWV0eSBvZiByb2RlbnRzIChpbmNsdWRpbmcgcmF0cywgbWljZSwgc3F1aXJyZWxzIGFuZCBwcmFpcmllIGRvZ3MpIGFuZCByYWJiaXRzLiBIZW5jZSBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9uZXdzL2luZGlhL3NlY29uZC1zdXNwZWN0ZWQtbW9ua2V5cG94LWNhc2UtZGV0ZWN0ZWQtaW4tdmlqYXlhd2FkIGEtMTE2NTgwNTY0MTAxMDYuaHRtbA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 83,
      "question" : "Which of the following protected habitats present along Brahmaputra River\n\t1. Dibru-Saikhowa National Park\n\t2. Nameri National Park\n\t3. Mouling National ParkSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmF0aW9uYWwgUGFya3Mgb24gdGhlIGJhbmsgb2YgQnJhaG1hcHV0cmEgUml2ZXIgSW4gQXNzYW0sIHRocmVlIG5hdGlvbmFsIHBhcmtzIGFyZSBsb2NhdGVkIG9uIHRoZSBiYW5rIG9mIHRoZSBCcmFobWFwdXRyYSByaXZlci4gT24gdGhlIGhlYWQgb2YgQXNzYW0gcGxhaW5zIHRoZSBEaWJydS1TYWlraG93YSBOYXRpb25hbCBQYXJrIGxvY2F0ZWQgb24gdGhlIHNvdXRoIGJhbmsgb2YgdGhlIEJyYWhtYXB1dHJhIHJpdmVyLiBJbiB0aGUgbWlkIG9mIEFzc2FtIHZhbGxleSwgdGhlIEthemlyYW5nYSBOYXRpb25hbCBQYXJrIGlzIGxvY2F0ZWQgb24gdGhlIHNvdXRoIGJhbmsgYW5kIE9yYW5nIE5hdGlvbmFsIFBhcmsgb24gdGhlIG5vcnRoIGJhbmsgb2YgdGhlIEJyYWhtYXB1dHJhIHJpdmVyLiBUaGVzZSB0aHJlZSBuYXRpb25hbCBwYXJrcyBhcmUgdGhlIHdpbGRsaWZlIGhvdHNwb3RzIG9mIHRoZSB3b3JsZC4gVGhlIEJyYWhtYXB1dHJhIHN1c3RhaW5zIHRoZXNlIHVuaXF1ZSBlY29zeXN0ZW1zLiBEaWJydS1TYWlraG93YSBOYXRpb25hbCBQYXJrIGlzIGxvY2F0ZWQgaW4gVGluc3VraWEgYW5kIERpYnJ1Z2FyaCBkaXN0cmljdCBvZiBBc3NhbS4gSXQgaXMgYWxzbyBkZWNsYXJlZCBhcyBhIEJpb3NwaGVyZSBSZXNlcnZlIGluY2x1ZGluZyBEaWJydS1TYWlraG93YSBOYXRpb25hbCBQYXJrIGFuZCBEaWJydS0gU2Fpa2hvd2EgV2lsZGxpZmUgU2FuY3R1YXJ5IGluIHRoZSB5ZWFyIDE5OTcuIERpYnJ1LVNhaWtob3dhIE5hdGlvbmFsIFBhcmsgd2FzIG5vdGlmaWVkIGluIHRoZSB5ZWFyIDE5OTkgb3ZlciBhbiBhcmVhIG9mIDM0MCBzcSBrbS4gVGhlIEthemlyYW5nYSBOYXRpb25hbCBQYXJrIGlzIGxvY2F0ZWQgaW4gR29sYWdoYXQsIEthcmJpIEFuZ2xvbmcgaW4gTmFnYW9uIGRpc3RyaWN0cyBvZiBBc3NhbS4gTmF0aW9uYWwgUGFyayBpcyBhIFdvcmxkIEhlcml0YWdlIHNpdGUgaGF2aW5nIHR3by10aGlyZCBvZiBXb3JsZCdzIGdyZWF0IG9uZS1ob3JuZWQgcmhpbm9jZXJvcyBwb3B1bGF0aW9uLiBUaGlzIE5hdGlvbmFsIFBhcmsgd2FzIG5vdGlmaWVkIGluIHRoZSB5ZWFyIDE5Njggb3ZlciBhbiBhcmVhIG9mIDQyOSBzcSBrbS4gT3JhbmcgTmF0aW9uYWwgUGFyayBpcyBsb2NhdGVkIGluIERhcnJhbmcgYW5kIFNvbml0cHVyIGRpc3RyaWN0cyBvZiBBc3NhbS4gVGhpcyBpcyB0aGUgb25seSBtYWpvciB3aWxkbGlmZSBob3RzcG90IG9uIHRoZSBub3J0aGVybiBiYW5rIG9mIEJyYWhtYXB1dHJhIHJpdmVyIGRvbWluYXRlZCBieSBncmVhdCBJbmRpYW4gcmhpbm8uIFRoaXMgTmF0aW9uYWwgUGFyayB3YXMgbm90aWZpZWQgaW4gdGhlIHllYXIgMTk5OSBvdmVyIGFuIGFyZWEgb2YgNzguODEgc3Ega20uIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only",
        "option2" : "1 only",
        "option3" : "3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following statements regarding Red Panda:\n\t1. They are mainly found in the forests of India, Nepal, Bhutan and Myanmar and China.\n\t2. It has been listed as near threatened in IUCN's Red list.\n\t3. It is the state animal of Sikkim.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHJlZCBwYW5kYSBpcyBhIHNtYWxsIGFyYm9yZWFsIG1hbW1hbCBmb3VuZCBpbiB0aGUgZm9yZXN0cyBvZiBJbmRpYSwgTmVwYWwsIEJodXRhbiBhbmQgdGhlIG5vcnRoZXJuIG1vdW50YWlucyBvZiBNeWFubWFyIGFuZCBzb3V0aGVybiBDaGluYS4gVGhlIHJlZCBwYW5kYSBpcyBzbGlnaHRseSBsYXJnZXIgdGhhbiBhIGRvbWVzdGljIGNhdCB3aXRoIGEgYmVhci1saWtlIGJvZHkgYW5kIHRoaWNrIHJ1c3NldCBmdXIuIFRoZSBiZWxseSBhbmQgbGltYnMgYXJlIGJsYWNrLCBhbmQgdGhlcmUgYXJlIHdoaXRlIG1hcmtpbmdzIG9uIHRoZSBzaWRlIG9mIHRoZSBoZWFkIGFuZCBhYm92ZSBpdHMgc21hbGwgZXllcy4gUmVkIHBhbmRhcyBhcmUgdmVyeSBza2lsbGZ1bCBhbmQgYWNyb2JhdGljIGFuaW1hbHMgdGhhdCBwcmVkb21pbmFudGx5IHN0YXkgaW4gdHJlZXMuIEFsbW9zdCA1MCUgb2YgdGhlIHJlZCBwYW5kYSdzIGhhYml0YXQgaXMgaW4gdGhlIEVhc3Rlcm4gSGltYWxheWFzLiBJdCBpcyB0aGUgc3RhdGUgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgYW5pbWFsIG9mIFNpa2tpbS4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "3 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 85,
      "question" : "Consider the following statements regarding Sri Lanka's Polity\n\t1. Sri Lanka is a semi-presidential representative democratic republic.\n\t2. The President is directly elected for a five-year term, is head of state, head of government.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NQ==",
      "description" : "IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gU3JpIExhbmthIGlzIGEgc2VtaS1wcmVzaWRlbnRpYWwgcmVwcmVzZW50YXRpdmUgZGVtb2NyYXRpYyByZXB1YmxpYywgd2hlcmVieSB0aGUgUHJlc2lkZW50IG9mIFNyaSBMYW5rYSBpcyBib3RoIGhlYWQgb2Ygc3RhdGUgYW5kIGhlYWQgb2YgZ292ZXJubWVudCwgYW5kIGl0IHJlbGllcyBvbiBhIG11bHRpLXBhcnR5IHN5c3RlbS4gRXhlY3V0aXZlIHBvd2VyIGlzIGV4ZXJjaXNlZCBieSB0aGUgUHJlc2lkZW50IG9uIHRoZSBhZHZpY2Ugb2YgdGhlIFByaW1lIE1pbmlzdGVyIGFuZCB0aGUgQ2FiaW5ldCBvZiBNaW5pc3RlcnMuIExlZ2lzbGF0aXZlIHBvd2VyIGlzIHZlc3RlZCBpbiB0aGUgUGFybGlhbWVudC4gRm9yIGRlY2FkZXMsIHRoZSBwYXJ0eSBzeXN0ZW0gd2FzIGRvbWluYXRlZCBieSB0aGUgc29jaWFsaXN0IFNyaSBMYW5rYSBGcmVlZG9tIFBhcnR5IGFuZCB0aGUgY29uc2VydmF0aXZlIFVuaXRlZCBOYXRpb25hbCBQYXJ0eS4gVGhlIEp1ZGljaWFyeSBpcyBpbmRlcGVuZGVudCBvZiB0aGUgZXhlY3V0aXZlIGFuZCB0aGUgbGVnaXNsYXR1cmUuIFNyaSBMYW5rYSdzIHBvbGl0aWNzIHJlZmxlY3QgdGhlIGhpc3RvcmljYWwgYW5kIHBvbGl0aWNhbCBkaWZmZXJlbmNlcyBiZXR3ZWVuIHRoZSB0aHJlZSBtYWluIGV0aG5pYyBncm91cHMsIHRoZSBTaW5oYWxhIG1ham9yaXR5IGFuZCB0aGUgVGFtaWwgYW5kIE11c2xpbSBtaW5vcml0aWVzLCB3aG8gYXJlIGNvbmNlbnRyYXRlZCBpbiB0aGUgbm9ydGggYW5kIGVhc3Qgb2YgdGhlIGlzbGFuZC4gVGhlIFByZXNpZGVudCwgZGlyZWN0bHkgZWxlY3RlZCBmb3IgYSBmaXZlLXllYXIgdGVybSwgaXMgaGVhZCBvZiBzdGF0ZSwgaGVhZCBvZiBnb3Zlcm5tZW50LCBhbmQgY29tbWFuZGVyIGluIGNoaWVmIG9mIHRoZSBhcm1lZCBmb3JjZXMuIFRoZSBlbGVjdGlvbiBvY2N1cnMgdW5kZXIgdGhlIFNyaSBMYW5rYW4gZm9ybSBvZiB0aGUgY29udGluZ2VudCB2b3RlLiBSZXNwb25zaWJsZSB0byBQYXJsaWFtZW50IGZvciB0aGUgZXhlcmNpc2Ugb2YgZHV0aWVzIHVuZGVyIHRoZSBjb25zdGl0dXRpb24gYW5kIGxhd3MsIHRoZSBwcmVzaWRlbnQgbWF5IGJlIHJlbW92ZWQgZnJvbSBvZmZpY2UgYnkgYSB0d28tdGhpcmRzIHZvdGUgb2YgUGFybGlhbWVudCB3aXRoIHRoZSBjb25jdXJyZW5jZSBvZiB0aGUgU3VwcmVtZSBDb3VydC4gIHQvYXJ0aWNsZXNob3cvOTI5MTY3MDEuY21zIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1BvbGl0aWNzX29mX1NyaV9MYW5rYQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements regarding United Nations Educational, Scientificand Cultural Organization (UNESCO)\n\t1. UNESCO is a specialized agency of the United Nations (UN) based in Paris.. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t2. It is also a member of the United Nations Development Group.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gVU5FU0NPIGlzIGEgc3BlY2lhbGl6ZWQgYWdlbmN5IG9mIHRoZSBVbml0ZWQgTmF0aW9ucyAoVU4pIGJhc2VkIGluIFBhcmlzLiBJdHMgZGVjbGFyZWQgcHVycG9zZSBpcyB0byBjb250cmlidXRlIHRvIHBlYWNlIGFuZCBzZWN1cml0eSBieSBwcm9tb3RpbmcgaW50ZXJuYXRpb25hbCBjb2xsYWJvcmF0aW9uIHRocm91Z2ggZWR1Y2F0aW9uYWwsIHNjaWVudGlmaWMsIGFuZCBjdWx0dXJhbCByZWZvcm1zIGluIG9yZGVyIHRvIGluY3JlYXNlIHVuaXZlcnNhbCByZXNwZWN0IGZvciBqdXN0aWNlLCB0aGUgLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgcnVsZSBvZiBsYXcsIGFuZCBodW1hbiByaWdodHMgYWxvbmcgd2l0aCBmdW5kYW1lbnRhbCBmcmVlZG9tIHByb2NsYWltZWQgaW4gdGhlIFVuaXRlZCBOYXRpb25zIENoYXJ0ZXIuIEl0IGlzIHRoZSBzdWNjZXNzb3Igb2YgdGhlIExlYWd1ZSBvZiBOYXRpb25zJyBJbnRlcm5hdGlvbmFsIENvbW1pdHRlZSBvbiBJbnRlbGxlY3R1YWwgQ29vcGVyYXRpb24uIFVORVNDTyBoYXMgMTk1IG1lbWJlciBzdGF0ZXMgYW5kIHRlbiBhc3NvY2lhdGUgbWVtYmVycy4gSXQgaXMgYWxzbyBhIG1lbWJlciBvZiB0aGUgVW5pdGVkIE5hdGlvbnMgRGV2ZWxvcG1lbnQgR3JvdXAuIFVORVNDTyBwdXJzdWVzIGl0cyBvYmplY3RpdmVzIHRocm91Z2ggZml2ZSBtYWpvciBwcm9ncmFtczogZWR1Y2F0aW9uLCBuYXR1cmFsIHNjaWVuY2VzLCBzb2NpYWwvaHVtYW4gc2NpZW5jZXMsIGN1bHR1cmUgYW5kIGNvbW11bmljYXRpb24vaW5mb3JtYXRpb24uIFRoZSBVbml0ZWQgU3RhdGVzIGFuZCBJc3JhZWwgb2ZmaWNpYWxseSBxdWl0IHRoZSBVLk4uJ3MgZWR1Y2F0aW9uYWwsIHNjaWVudGlmaWMgYW5kIGN1bHR1cmFsIGFnZW5jeSAoVU5FU0NPKSBhdCB0aGUgc3Ryb2tlIG9mIG1pZG5pZ2h0LCB0aGUgY3VsbWluYXRpb24gb2YgYSBwcm9jZXNzIHRyaWdnZXJlZCBtb3JlIHRoYW4gYSB5ZWFyIGFnbyBhbWlkIGNvbmNlcm5zIHRoYXQgdGhlIG9yZ2FuaXphdGlvbiBmb3N0ZXJzIGFudGktSXNyYWVsIGJpYXMuIFRoZSBJbnRlcmdvdmVybm1lbnRhbCBDb21taXR0ZWUgb2YgdGhlIDIwMDMgQ29udmVudGlvbiBjb25zaXN0cyBvZiAyNCBtZW1iZXJzIGFuZCBpcyBlbGVjdGVkIGluIHRoZSBHZW5lcmFsIEFzc2VtYmx5IG9mIHRoZSBDb252ZW50aW9uIGFjY29yZGluZyB0byB0aGUgcHJpbmNpcGxlcyBvZiBlcXVpdGFibGUgZ2VvZ3JhcGhpY2FsIHJlcHJlc2VudGF0aW9uIGFuZCByb3RhdGlvbi4gU3RhdGVzIE1lbWJlcnMgdG8gdGhlIENvbW1pdHRlZSBhcmUgZWxlY3RlZCBmb3IgYSB0ZXJtIG9mIGZvdXIgeWVhcnMu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 87,
      "question" : "Kimberly process, sometime seen in the news, is related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEtpbWJlcmxleSBQcm9jZXNzIGlzIGFuIGludGVybmF0aW9uYWwgY2VydGlmaWNhdGlvbiBzY2hlbWUgdGhhdCByZWd1bGF0ZXMgdHJhZGUgaW4gcm91Z2ggZGlhbW9uZHMuIEl0IGFpbXMgdG8gcHJldmVudCB0aGUgZmxvdyBvZiBjb25mbGljdCBkaWFtb25kcywgd2hpbGUgaGVscGluZyB0byBwcm90ZWN0IGxlZ2l0aW1hdGUgdHJhZGUgaW4gcm91Z2ggZGlhbW9uZHMuIFRoZSBLaW1iZXJsZXkgUHJvY2VzcyBDZXJ0aWZpY2F0aW9uIFNjaGVtZSAoS1BDUykgb3V0bGluZXMgdGhlIHJ1bGVzIHRoYXQgZ292ZXJuIHRoZSB0cmFkZSBpbiByb3VnaCBkaWFtb25kcyBUaGUgS1AgaXMgbm90LCBzdHJpY3RseSBzcGVha2luZywgYW4gaW50ZXJuYXRpb25hbCBvcmdhbml6YXRpb246IGl0IGhhcyBubyBwZXJtYW5lbnQgb2ZmaWNlcyBvciBwZXJtYW5lbnQgc3RhZmYuIEl0IHJlbGllcyBvbiB0aGUgY29udHJpYnV0aW9ucyAtIHVuZGVyIHRoZSBwcmluY2lwbGUgb2YgJ2J1cmRlbi1zaGFyaW5nJyAtIG9mIHBhcnRpY2lwYW50cywgc3VwcG9ydGVkIGJ5IGluZHVzdHJ5IGFuZCBjaXZpbCBzb2NpZXR5IG9ic2VydmVycy4gTmVpdGhlciBjYW4gdGhlIEtQIGJlIGNvbnNpZGVyZWQgYXMgYW4gaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnQgZnJvbSBhIGxlZ2FsIHBlcnNwZWN0aXZlLCBhcyBpdCBpcyBpbXBsZW1lbnRlZCB0aHJvdWdoIHRoZSBuYXRpb25hbCBsZWdpc2xhdGlvbnMgb2YgaXRzIHBhcnRpY2lwYW50cy4gQ29uZmxpY3RpbmcgRGlhbW9uZHMgYXJlICdyb3VnaCBkaWFtb25kcyB1c2VkIHRvIGZpbmFuY2Ugd2FycyBhZ2FpbnN0IGdvdmVybm1lbnRzJyAtIGFyb3VuZCB0aGUgd29ybGQuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Climate Change",
        "option2" : "Trade of Diamonds",
        "option3" : "Sustainable Development Goals",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following statements\n\t1. Nohkalikai Falls is located in this state\n\t2. Mysterious Soccer loving insect lives in this state\n\t3. Mawphlang sacred forest is located in this stateAbove statements describe about which of the below state?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTm9oa2FsaWthaSBGYWxscyBpcyB0aGUgdGFsbGVzdCBwbHVuZ2Ugd2F0ZXJmYWxsIGluIEluZGlhLiBJdHMgaGVpZ2h0IGlzIDM0MCBtZXRyZXMuIFRoZSB3YXRlcmZhbGwgaXMgbG9jYXRlZCBpbiB0aGUgSW5kaWFuIHN0YXRlIG9mIE1lZ2hhbGF5YSwgbmVhciBDaGVycmFwdW5qaSwgb25lIG9mIHRoZSB3ZXR0ZXN0IHBsYWNlcyBvbiBFYXJ0aC4gTWF3cGhsYW5nIGlzIGEgdmlsbGFnZSBpbiB0aGUgRWFzdCBLaGFzaSBIaWxscyBkaXN0cmljdCBvZiBNZWdoYWxheWEgc3RhdGUgaW4gbm9ydGgtZWFzdGVybiBJbmRpYSwgMjUga2lsb21ldGVycyBmcm9tIFNoaWxsb25nLiBUaGUgd29yZCBtYXcgbWVhbnMgInN0b25lIiwgbWF3IHBobGFuZyBtZWFucyAiZ3Jhc3N5IHN0b25lLCIgYW5kIGlzIG9uZSBvZiBtYW55IHNldHRsZW1lbnRzIGluIHRoZSBLaGFzaSBoaWxscyBuYW1lZCBhZnRlciBtb25vbGl0aHMuIGh0dHBzOi8vd3d3LnNjcm9sbGRyb2xsLmNvbS9mYWN0cy1hYm91dC1tZWdoYWxheWEv",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Assam",
        "option2" : "Meghalaya",
        "option3" : "Nagaland",
        "option4" : "Mizoram"
      }
    },
    {
      "index" : 89,
      "question" : "The Sanskrit speaking village namely Mattur is located in which of the followingstate?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWF0dHVyIGlzIGtub3duIGFzIEluZGlhJ3MgJ1NhbnNrcml0IHZpbGxhZ2UnLiBJdCBpcyBhIHF1YWludCwgc2xlZXB5IGhhbWxldCB3aGljaCBsaWVzIGFsb25nIHRoZSBiYW5rIG9mIFR1bmdhIHJpdmVyIGluIEthcm5hdGFrYSBhbmQgbGllcyAzMDAga20ncyBmcm9tIEJhbmdhbG9yZS4gUGVvcGxlIGNhbiBiZSBmb3VuZCB1c2luZyBTYW5za3JpdCBpbiB0aGVpciBkYXktdG8tZGF5IGNvbW11bmljYXRpb24gYW5kIGFyZSB2ZXJ5IGZsdWVudCBpbiBpdCAuIFRoZSB2aWxsYWdlcnMsIHdobyBsZWFkIFZlZGljIGxpZmVzdHlsZSwgY2hhbnQgdGhlIGFuY2llbnQgdGV4dHMgYW5kIGNvbnZlcnNlIGluIHRoZSBsYW5ndWFnZS4gVGhpcyBwcmFjdGljZSBoYXMgbWFkZSBzdXJlIHRvIHByZXNlcnZlIFNhbnNrcml0IGFuZCBtYWtlIGl0IGZsb3VyaXNoLiBFdmVuIGNoaWxkcmVuIHNwZWFrIHRoZSBsYW5ndWFnZSBmbHVlbnRseSBhbmQgYXJlIGVkdWNhdGVkIGluIGl0LiBEZXNwaXRlIHRoZSBmYWN0IHRoYXQgdGhlIG9mZmljaWFsIGxhbmd1YWdlIG9mIHRoZSBzdGF0ZSAuICAgICBUZXN0LTQgKCBJUE0gVGVzdCBTZXJpZXMgMjAyMygxLjApICkgIE1hcmsgU2NvcmVkIDogMCAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSBpcyBLYW5uYWRhLCB0aGlzIHZpbGxhZ2UgaGFzIGJlZW4gc3VjY2Vzc2Z1bCBpbiBwcmVzZXJ2aW5nIFNhbnNrcml0IGFzIGEgcmVnaW9uYWwgbGFuZ3VhZ2UuIEl0IGlzIGEgdW5pcXVlIGFjY29tcGxpc2htZW50IGZvciB0aGUgcmVzaWRlbnRzLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Karnataka",
        "option2" : "Tamil Nadu",
        "option3" : "Uttar Pradesh",
        "option4" : "Andhra Pradesh"
      }
    },
    {
      "index" : 90,
      "question" : "Open Acreage Licensing Programme, sometime seen in the news, is related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEh5ZHJvY2FyYm9uIEV4cGxvcmF0aW9uIGFuZCBMaWNlbnNpbmcgUG9saWN5IChIRUxQKSByZXBsYWNpbmcgdGhlIGVyc3R3aGlsZSBOZXcgRXhwbG9yYXRpb24gTGljZW5zaW5nIFBvbGljeSAoTkVMUCkgd2FzIGFwcHJvdmVkIGluIE1hcmNoIDIwMTYgYW5kIHRoZSBPcGVuIEFjcmVhZ2UgTGljZW5zaW5nIFBvbGljeSAoT0FMUCkgYWxvbmcgd2l0aCB0aGUgTmF0aW9uYWwgRGF0YSBSZXBvc2l0b3J5IChORFIpIHdlcmUgbGF1bmNoZWQgaW4gSnVuZSAyMDE3IGFzIHRoZSBrZXkgZHJpdmVycyB0byBhY2NlbGVyYXRlIHRoZSBFeHBsb3JhdGlvbiBhbmQgUHJvZHVjdGlvbiAoRSZQKSBhY3Rpdml0aWVzIGluIEluZGlhLiBIRUxQIHByb3ZpZGVzIGZvciBhIHVuaWZvcm0gbGljZW5zaW5nIHN5c3RlbSB0aGF0IHdpbGwgY292ZXIgYWxsIGh5ZHJvY2FyYm9ucyBzdWNoIGFzIG9pbCwgZ2FzLCBhbmQgY29hbCBiZWQgbWV0aGFuZS4gSXQgcHJvdmlkZXMgZm9yIG1hcmtldGluZyBmcmVlZG9tIGZvciBjcnVkZSBvaWwgYW5kIG5hdHVyYWwgZ2FzIHByb2R1Y2VkIGZyb20gdGhlc2UgYmxvY2tzLiBUaGlzIGlzIGluIHR1bmUgd2l0aCB0aGUgR292ZXJubWVudCdzIHBvbGljeSBvZiAnTWluaW11bSBHb3Zlcm5tZW50IC1NYXhpbXVtIEdvdmVybmFuY2UnLiBVbmRlciBORUxQLCBpdCBiZWNhbWUgbmVjZXNzYXJ5IGZvciB0aGUgR292ZXJubWVudCB0byBzY3J1dGluaXplIGNvc3QgZGV0YWlscyBvZiBwcml2YXRlIHBhcnRpY2lwYW50cyBhbmQgdGhpcyBsZWQgdG8gbWFueSBkZWxheXMgYW5kIGRpc3B1dGVzLiBIRUxQIGlzIGluIHR1bmUgd2l0aCB0aGUgR292ZXJubWVudCdzIGVmZm9ydHMgdG8gcHJvbW90ZSAnRWFzZSBvZiBEb2luZyBCdXNpbmVzcycuIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMC8wMS8xNy9vcGVuLWFjcmVhZ2UtbGljZW5zaW5nLXBvbGljeS00Lw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Manganese",
        "option2" : "Coal Bed Methane",
        "option3" : "Iron Ore",
        "option4" : "Bauxite Ore"
      }
    },
    {
      "index" : 91,
      "question" : "Consider the following statements regarding functions of National Human RightsCommission of India (NHRC). Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability\n\t1. To visit jails and study the condition of inmates\n\t2. Undertake and promote research in the field of human rights\n\t3. Engage in human rights education among various sections of societyWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRnVuY3Rpb25zIG9mIE5IUkMgVGhlIFByb3RlY3Rpb24gb2YgSHVtYW4gUmlnaHRzIEFjdCBtYW5kYXRlcyB0aGUgTkhSQyB0byBwZXJmb3JtIHRoZSBmb2xsb3dpbmc6IFByb2FjdGl2ZWx5IG9yIHJlYWN0aXZlbHkgaW5xdWlyZSBpbnRvIHZpb2xhdGlvbnMgb2YgaHVtYW4gcmlnaHRzIGJ5IGdvdmVybm1lbnQgb2YgSW5kaWEgb3IgbmVnbGlnZW5jZSBvZiBzdWNoIHZpb2xhdGlvbiBieSBhIHB1YmxpYyBzZXJ2YW50IFRoZSBwcm90ZWN0aW9uIG9mIGh1bWFuIHJpZ2h0cyBhbmQgcmVjb21tZW5kIG1lYXN1cmVzIGZvciB0aGVpciBlZmZlY3RpdmUgaW1wbGVtZW50YXRpb24uIFJldmlldyB0aGUgZmFjdG9ycywgaW5jbHVkaW5nIGFjdHMgb2YgdGVycm9yaXNtIHRoYXQgaW5oaWJpdCB0aGUgZW5qb3ltZW50IG9mIGh1bWFuIHJpZ2h0cyBhbmQgcmVjb21tZW5kIGFwcHJvcHJpYXRlIHJlbWVkaWFsIG1lYXN1cmVzIFRvIHN0dWR5IHRyZWF0aWVzIGFuZCBvdGhlciBpbnRlcm5hdGlvbmFsIGluc3RydW1lbnRzIG9uIGh1bWFuIHJpZ2h0cyBhbmQgbWFrZSByZWNvbW1lbmRhdGlvbnMgZm9yIHRoZWlyIGVmZmVjdGl2ZSBpbXBsZW1lbnRhdGlvbiBVbmRlcnRha2UgYW5kIHByb21vdGUgcmVzZWFyY2ggaW4gdGhlIGZpZWxkIG9mIGh1bWFuIHJpZ2h0cyBUbyB2aXNpdCBqYWlscyBhbmQgc3R1ZHkgdGhlIGNvbmRpdGlvbiBvZiBpbm1hdGVzIEVuZ2FnZSBpbiBodW1hbiByaWdodHMgZWR1Y2F0aW9uIGFtb25nIHZhcmlvdXMgc2VjdGlvbnMgb2Ygc29jaWV0eSBhbmQgcHJvbW90ZSBhd2FyZW5lc3Mgb2YgdGhlIHNhZmVndWFyZHMgYXZhaWxhYmxlIGZvciB0aGUgcHJvdGVjdGlvbiBvZiB0aGVzZSByaWdodHMgdGhyb3VnaCBwdWJsaWNhdGlvbnMsIHRoZSBtZWRpYSwgc2VtaW5hcnMgYW5kIG90aGVyIGF2YWlsYWJsZSBtZWFucyBFbmNvdXJhZ2UgdGhlIGVmZm9ydHMgb2YgTkdPcyBhbmQgaW5zdGl0dXRpb25zIHRoYXQgd29ya3MgaW4gdGhlIGZpZWxkIG9mIGh1bWFuIHJpZ2h0cyB2b2x1bnRhcmlseS4gQ29uc2lkZXJpbmcgdGhlIG5lY2Vzc2l0eSBmb3IgdGhlIHByb3RlY3Rpb24gb2YgaHVtYW4gcmlnaHRzLiBSZXF1aXNpdGlvbmluZyBhbnkgcHVibGljIHJlY29yZCBvciBjb3B5IHRoZXJlb2YgZnJvbSBhbnkgY291cnQgb3Igb2ZmaWNlLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1, 2 and 3",
        "option3" : "3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 92,
      "question" : "Lantau, Cheung, Lamma Islands are located in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHk=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "East China Sea",
        "option2" : "South China Sea",
        "option3" : "Indian Ocean",
        "option4" : "Atlantic Ocean"
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements regarding Uranium in India\n\t1. India has significant reserves of Uranium\n\t2. India has high grade Uranium\n\t3. Seshachalam forest is known for Uranium reservesWhich of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWJvdXQgVXJhbml1bSBpbiBJbmRpYSBJbmRpYSBoYXMgbm8gc2lnbmlmaWNhbnQgcmVzZXJ2ZXMgb2YgVXJhbml1bS4gQWxsIG5lZWRzIGFyZSBtZXQgdGhyb3VnaCBpbXBvcnRzLiBIZW5jZSBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEluZGlhIGltcG9ydHMgdGhvdXNhbmRzIG9mIHRvbm5lcyBvZiB1cmFuaXVtIGZyb20gUnVzc2lhLCBLYXpha2hzdGFuLCBGcmFuY2UsIGFuZCBJbmRpYSBpcyB0cnlpbmcgaGFyZCB0byBpbXBvcnQgdXJhbml1bSBmcm9tIEF1c3RyYWxpYSBhbmQgQ2FuYWRhLiBUaGVyZSBhcmUgc29tZSBjb25jZXJucyByZWdhcmRpbmcgbnVjbGVhciBwcm9saWZlcmF0aW9uIGFuZCBvdGhlciByZWxhdGVkIGlzc3VlcyB3aGljaCBJbmRpYSBpcyB0cnlpbmcgdG8gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgc29ydCBvdXQuIFNvbWUgcmVzZXJ2ZXMgd2VyZSByZWNlbnRseSBkaXNjb3ZlcmVkIGluIHBhcnRzIG9mIEFuZGhyYSBQcmFkZXNoIGFuZCBUZWxhbmdhbmEgYmV0d2VlbiBTZXNoYWNoYWxhbSBmb3Jlc3QgYW5kIFNyZXNhaWxhbSBbU291dGhlcm4gZWRnZSBvZiBBbmRocmEgdG8gU291dGhlcm4gZWRnZSBvZiBUZWxhbmdhbmFdLiBJbmRpYSBoYXMgbG93IGdyYWRlIHVyYW5pdW0uIEhlbmNlIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only",
        "option2" : "2 and 3 only",
        "option3" : "2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements regarding Government E-Marketplace\n\t1. Central and State Public Sector Units and local bodies etc. are authorized to make procurementthrough GeM portal.\n\t2. Authorized officers of the rank of Deputy Secretary can register as Primary User on GeM.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gLiAgICAgVGVzdC00ICggSVBNIFRlc3QgU2VyaWVzIDIwMjMoMS4wKSApICBNYXJrIFNjb3JlZCA6IDAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgR292ZXJubWVudCBlLU1hcmtldHBsYWNlIChHZU0pIGlzIGEgb25lIHN0b3AgcG9ydGFsIHRvIGZhY2lsaXRhdGUgb25saW5lIHByb2N1cmVtZW50IG9mIGNvbW1vbiB1c2UgR29vZHMgJiBTZXJ2aWNlcyByZXF1aXJlZCBieSB2YXJpb3VzIEdvdmVybm1lbnQgRGVwYXJ0bWVudHMgLyBPcmdhbml6YXRpb25zIC8gUFNVcy4gR2VNIGFpbXMgdG8gZW5oYW5jZSB0cmFuc3BhcmVuY3ksIGVmZmljaWVuY3kgYW5kIHNwZWVkIGluIHB1YmxpYyBwcm9jdXJlbWVudC4gSXQgcHJvdmlkZXMgdGhlIHRvb2xzIG9mIGUtYmlkZGluZywgcmV2ZXJzZSBlLWF1Y3Rpb24gYW5kIGRlbWFuZCBhZ2dyZWdhdGlvbiB0byBmYWNpbGl0YXRlIHRoZSBnb3Zlcm5tZW50IHVzZXJzIGFjaGlldmUgdGhlIGJlc3QgdmFsdWUgZm9yIHRoZWlyIG1vbmV5LiBUaGUgcHVyY2hhc2VzIHRocm91Z2ggR2VNIGJ5IEdvdmVybm1lbnQgdXNlcnMgaGF2ZSBiZWVuIGF1dGhvcml6ZWQgYW5kIG1hZGUgbWFuZGF0b3J5IGJ5IE1pbmlzdHJ5IG9mIEZpbmFuY2UgYnkgYWRkaW5nIGEgbmV3IFJ1bGUgTm8uIDE0OSBpbiB0aGUgR2VuZXJhbCBGaW5hbmNpYWwgUnVsZXMsIDIwMTcuIEZvciBCdXllcnMgV2hvIGNhbiBidXkvcHVyY2hhc2UgdGhyb3VnaCBHZU0/MS4gQWxsIENlbnRyYWwgZ292ZXJubWVudCBhbmQgU3RhdGUgR292ZXJubWVudCBNaW5pc3RyaWVzL0RlcGFydG1lbnRzIGluY2x1ZGluZyBpdHMgYXR0YWNoZWQvc3Vib3JkaW5hdGUgb2ZmaWNlcywgQ2VudHJhbCBhbmQgU3RhdGUgYXV0b25vbW91cyBib2RpZXMsIENlbnRyYWwgYW5kIFN0YXRlIFB1YmxpYyBTZWN0b3IgVW5pdHMgYW5kIGxvY2FsIGJvZGllcyBldGMuIGFyZSBhdXRob3JpemVkIHRvIG1ha2UgcHJvY3VyZW1lbnQgdGhyb3VnaCBHZU0gcG9ydGFsLiBXaG8gaXMgYXV0aG9yaXplZCB0byByZWdpc3RlciBhcyBQcmltYXJ5IFVzZXIgb24gR2VNPzIuIEF1dGhvcml6ZWQgb2ZmaWNlcnMgb2YgdGhlIHJhbmsgb2YgRGVwdXR5IFNlY3JldGFyeS9FcXVpdmFsZW50IG9yIEhlYWQgb2YgdGhlIE9mZmljZSBhdCBTdWIgQ2VudGVyIC8gVW5pdCAvIEJyYW5jaCBvZiBHb3Zlcm5tZW50IE9yZ2FuaXNhdGlvbiAvIFBTVSAvIEF1dG9ub21vdXMgQm9kaWVzIC8gTG9jYWwgQm9kaWVzIC8gQ29uc3RpdHV0aW9uIEJvZGllcyAvIFN0YXR1YXJ5IEJvZGllcyBjYW4gcmVnaXN0ZXIgYXMgUHJpbWFyeSBVc2VyIG9uIEdlTS4gaHR0cHM6Ly92aWthc3BlZGlhLmluL2UtZ292ZXJuYW5jZS9vbmxpbmUtY2l0aXplbi1zZXJ2aWNlcy9nb3Zlcm5tZW50LXRvLWJ1c2luZXNzLXNlcnZpY2VzLWcyYi8gZ292ZXJubWVudC1lbWFya2V0cGxhY2U=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 95,
      "question" : "Which of the following country is the largest contributor  to United NationsPeacekeeping operations for 2020-2021",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZpcnN0IFVOIHBlYWNla2VlcGluZyBtaXNzaW9uIHdhcyBlc3RhYmxpc2hlZCBvbiAxOTQ4LCBNYXkgMjkgd2hlbiB0aGUgU2VjdXJpdHkgQ291bmNpbCBkZXBsb3llZCBhIHNtYWxsIG51bWJlciBvZiBVTiBtaWxpdGFyeSBvYnNlcnZlcnMgdG8gdGhlIE1pZGRsZSBFYXN0IHRvIGZvcm0gdGhlIFVuaXRlZCBOYXRpb25zIFRydWNlIFN1cGVydmlzaW9uIE9yZ2FuaXphdGlvbiAoVU5UU08pIHdpdGggdGhlIG9iamVjdGl2ZSB0byBtb25pdG9yIHRoZSBBcm1pc3RpY2UgQWdyZWVtZW50IGJldHdlZW4gSXNyYWVsIGFuZCBpdHMgQXJhYiBuZWlnaGJvdXJzLiBUaGUgdG9wIDUgcHJvdmlkZXJzIG9mIGFzc2Vzc2VkIGNvbnRyaWJ1dGlvbnMgdG8gVW5pdGVkIE5hdGlvbnMgUGVhY2VrZWVwaW5nIG9wZXJhdGlvbnMgZm9yIDIwMjAtMjAyMSBhcmU6IC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "US .     Test-4 ( IPM Test Series 2023(1.0) )    © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability",
        "option2" : "China",
        "option3" : "Japan",
        "option4" : "Germany"
      }
    },
    {
      "index" : 97,
      "question" : "Consider the following statements\n\t1. Indus Water Treaty was brokered by the World Bank\n\t2. As per the treaty, control over three eastern rivers Ravi, Beas and Sutlej was given to Pakistan.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEluZHVzIFdhdGVycyBUcmVhdHkgaXMgYSB3YXRlci1kaXN0cmlidXRpb24gdHJlYXR5IGJldHdlZW4gSW5kaWEgYW5kIFBha2lzdGFuLCBicm9rZXJlZCBieSB0aGUgV29ybGQgQmFuayB0byB1c2UgdGhlIHdhdGVyIGF2YWlsYWJsZSBpbiB0aGUgSW5kdXMgU3lzdGVtIG9mIFJpdmVycyBsb2NhdGVkIGluIEluZGlhLiAgVGhlIEluZHVzIFdhdGVycyBUcmVhdHkgKElXVCkgd2FzIHNpZ25lZCBpbiBLYXJhY2hpIG9uIFNlcHRlbWJlciAxOSwgMTk2MCBieSB0aGUgZmlyc3QgUHJpbWUgTWluaXN0ZXIgb2YgSW5kaWEgUGFuZGl0IEphd2FoYXJsYWwgTmVocnUgYW5kIHRoZW4gUHJlc2lkZW50IG9mIFBha2lzdGFuIEF5dWIgS2hhbi4gQWNjb3JkaW5nIHRvIHRoaXMgYWdyZWVtZW50LCBjb250cm9sIG92ZXIgdGhlIHdhdGVyIGZsb3dpbmcgaW4gdGhyZWUgImVhc3Rlcm4gcml2ZXJzIiBvZiBJbmRpYSAtIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IHRoZSBCZWFzLCB0aGUgUmF2aSBhbmQgdGhlIFN1dGxlaiB3aXRoIHRoZSBtZWFuIGFubnVhbCBmbG93IG9mIDMzIG1pbGxpb24gYWNyZS1mZWV0IChNQUYpIC0gd2FzIGdpdmVuIHRvIEluZGlhLCB3aGlsZSBjb250cm9sIG92ZXIgdGhlIHdhdGVyIGZsb3dpbmcgaW4gdGhyZWUgIndlc3Rlcm4gcml2ZXJzIiBvZiBJbmRpYSAtIHRoZSBJbmR1cywgdGhlIENoZW5hYiBhbmQgdGhlIEpoZWx1bSB3aXRoIHRoZSBtZWFuIGFubnVhbCBmbG93IG9mIDgwIE1BRiAtIHdhcyBnaXZlbiB0byBQYWtpc3Rhbi4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 99,
      "question" : "Consider the following statements\n\t1. Defence Acquisition Council is chaired by Prime Minister.\n\t2. Nirbhay is India's first indigenously produced cruise missile.\n\t3. Bold Kurukshetra is a joint military exercise between India and France.. Test-4( IPM Test Series 2023(1.0) )  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liabilityWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIERlZmVuY2UgQWNxdWlzaXRpb24gQ291bmNpbCBpcyB0aGUgaGlnaGVzdCBkZWNpc2lvbi1tYWtpbmcgYm9keSBpbiB0aGUgRGVmZW5jZSBNaW5pc3RyeSBmb3IgZGVjaWRpbmcgb24gbmV3IHBvbGljaWVzIGFuZCBjYXBpdGFsIGFjcXVpc2l0aW9ucyBmb3IgdGhlIHRocmVlIHNlcnZpY2VzIChBcm15LCBOYXZ5IGFuZCBBaXIgRm9yY2UpIGFuZCB0aGUgSW5kaWFuIENvYXN0IEd1YXJkLiBUaGUgTWluaXN0ZXIgb2YgRGVmZW5jZSBpcyB0aGUgQ2hhaXJtYW4gb2YgdGhlIENvdW5jaWwuIEl0IHdhcyBmb3JtZWQsIGFmdGVyIHRoZSBHcm91cCBvZiBNaW5pc3RlcnMgcmVjb21tZW5kYXRpb25zIG9uICdSZWZvcm1pbmcgdGhlIE5hdGlvbmFsIFNlY3VyaXR5IFN5c3RlbScsIGluIDIwMDEsIHBvc3QgS2FyZ2lsIFdhciAoMTk5OSkuIE5pcmJoYXkgaXMgYSBsb25nIHJhbmdlLCBhbGwtd2VhdGhlciwgc3Vic29uaWMgY3J1aXNlIG1pc3NpbGUgZGVzaWduZWQgYW5kIGRldmVsb3BlZCBpbiBJbmRpYSBieSB0aGUgQWVyb25hdXRpY2FsIERldmVsb3BtZW50IEVzdGFibGlzaG1lbnQgKEFERSkgd2hpY2ggaXMgdW5kZXIgRGVmZW5jZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgT3JnYW5pc2F0aW9uIChEUkRPKS4gTmlyYmhheSBpcyBJbmRpYSdzIGZpcnN0IGluZGlnZW5vdXNseSBwcm9kdWNlZCBjcnVpc2UgbWlzc2lsZS4gVGhlIG1pc3NpbGUgY2FuIGJlIGxhdW5jaGVkIGZyb20gbXVsdGlwbGUgcGxhdGZvcm1zIGFuZCBpcyBjYXBhYmxlIG9mIGNhcnJ5aW5nIGNvbnZlbnRpb25hbCBhbmQgbnVjbGVhciB3YXJoZWFkcy4gSXQgaXMgY3VycmVudGx5IHVuZGVyIGRldmVsb3BtZW50IGFuZCB1bmRlcmdvaW5nIGZsaWdodCB0cmlhbHMuIEEuIEpvaW50IG1pbGl0YXJ5IGV4ZXJjaXNlIGJldHdlZW4gSW5kaWEgYW5kIFNpbmdhcG9yZSAtIEJPTEQgS1VSVUtTSEVUUg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 only",
        "option4" : "None"
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements\n\t1. Lake Superior is the world's largest freshwater lake in terms of volume.\n\t2. Lake Baikal is the world's deepest lake.\n\t3. The Dead Sea is the saltiest body of water on Earth.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMDA=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTGFrZSBCYWlrYWwgaXMgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBmcmVzaHdhdGVyIGxha2UgaW4gdGVybXMgb2Ygdm9sdW1lLiBMYWtlIEJhaWthbCBpcyB0aGUgbGFyZ2VzdCBmcmVzaHdhdGVyIGxha2UgaW4gdGhlIHdvcmxkIChieSB2b2x1bWUpIGFuZCB0aGUgd29ybGQncyBkZWVwZXN0IGxha2UuIC4gICAgIFRlc3QtNCAoIElQTSBUZXN0IFNlcmllcyAyMDIzKDEuMCkgKSAgTWFyayBTY29yZWQgOiAwICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5IFRoZSBzYWx0eSBDYXNwaWFuIFNlYSBoYXMgdGhlIGdyZWF0ZXN0IHN1cmZhY2UgYXJlYSBvZiBhbnkgbGFrZSBhdCAxNDMsMjAwIHNxdWFyZSBtaWxlcyAoMzcwLDg4NiBzcXVhcmUga2lsb21ldGVycykuIFRoZSBEZWFkIFNlYSwgbmVzdGxlZCBvbiB0aGUgYm9yZGVycyBvZiBKb3JkYW4gYW5kIElzcmFlbC4gVGhlIHdhdGVyIGhlcmUgaXMgYXJvdW5kIDEwIHRpbWVzIHNhbHRpZXIgdGhhbiBzZWEgd2F0ZXIuIEhvd2V2ZXIsIGl0IGlzIG9ubHkgdGhlIGZpZnRoIHNhbHRpZXN0IGJvZHkgb2Ygd2F0ZXIgb24gRWFydGguIC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3 . "
      }
    }
  ],
  "subject" : "all",
  "topic" : "History",
  "year" : "2023"
}
