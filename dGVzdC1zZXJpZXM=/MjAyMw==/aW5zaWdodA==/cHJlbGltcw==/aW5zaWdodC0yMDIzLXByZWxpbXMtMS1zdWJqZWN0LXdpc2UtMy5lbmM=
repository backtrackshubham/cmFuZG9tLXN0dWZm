{
  "testId" : "insight-2023-prelims-1-subject-wise-3",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/insight/prelims/insight-2023-prelims-1-subject-wise-3.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Arrange the following historical events as per chronology\n\t1. EIC established factory at Surat\n\t2. Farrukhsiyar Farman\n\t3. Portuguese captures Goa\n\t4. Battle of bidara",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29ycmVjdCBjaHJvbm9sb2dpY2FsIG9yZGVyIG9mIGhpc3RvcmljYWwgZXZlbnRzIGlzIGFzIGZvbGxvd3M6LSAxNTEwIDotIEFsZm9uc28gQWxidXF1ZXJxdWUsIHRoZSBQb3J0dWd1ZXNlIGdvdmVybm9yLCBjYXB0dXJlcyBHb2EgZnJvbSBCaWphcHVyIDE2MTMgOiBBIHBlcm1hbmVudCBmYWN0b3J5IG9mIEVhc3QgSW5kaWEgQ29tcGFueSBpcyBlc3RhYmxpc2hlZCBhdCBTdXJhdCAxNzE3IDogVGhlIE11Z2hhbCBlbXBlcm9yIEZhcnJ1a2hzaXlhciBpc3N1ZXMgYSBGYXJtYW4sIGNhbGxlZCB0aGUgTWFnbmEgQ2FydGEgb2YgdGhlIENvbXBhbnksIGdpdmluZyB0aGUgQ29tcGFueSBhIGxhcmdlIG51bWJlciBvZiB0cmFkZSBjb25jZXNzaW9ucy4gMTc1OSA6QmF0dGxlIG9mIEJpZGFyYSA6LVRoZSBFbmdsaXNoIGRlZmVhdGVkIHRoZSBEdXRjaC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 -1-2-4",
        "option2" : "3-2-1-4",
        "option3" : "2-1-3-4",
        "option4" : "3-4 -1-2"
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following is / are reasons for the decline of Portuguese power in India .\n\t1. Diversion of Portuguese colonising ambitions towards south east Asia.\n\t2. Emergence of powerful dynasties in north India.\n\t3. Missionary activities.Which of the statement mentioned above is /are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUG9ydHVndWVzZSBSdWxlIGluIEluZGlhIDotIFBvcnR1Z3Vlc2Ugd2VyZSAxc3QgY29sb25pYWwgcG93ZXIgdG8gZXN0YWJsaXNoIHRyYWRlIHJlbGF0aW9ucyB3aXRoIEluZGlhIC4gVmFzY28gRGEgR2FtYSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGFycml2ZWQgaW4gSW5kaWEgaW4gMTQ5OC4gTGF0ZXIgdGhleSBlc3RhYmxpc2hlZCBmYWN0b3JpZXMgYXQgQ2FsaWN1dCAsIENvY2hpbiAsIENhbm5hbm9yZSAsZXRjLiBGYWN0b3JzIGZvciBEZWNsaW5lIG9mIHRoZSBQb3J0dWd1ZXNlIGluIEluZGlhIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIE1hcmF0aGFzIGFzIG5laWdoYm91cnM7IEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLiAoYikgcG9saXRpY2FsIGZlYXJzIGFyb3VzZWQgYnkgdGhlIGFjdGl2aXRpZXMgb2YgSmVzdWl0IG1pc3Npb25hcmllcywgYW5kIGhhdHJlZCBvZiBwZXJzZWN1dGlvbiAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdCAuIChjKSByaXNlIG9mIHRoZSBFbmdsaXNoIGFuZCBEdXRjaCBjb21tZXJjaWFsIGFtYml0aW9ucyBjaGFsbGVuZ2luZyB0aGUgUG9ydHVndWVzZSBzdXByZW1hY3k7IChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlIHByYWN0aWNlcyBvZiB0aGUgUG9ydHVndWVzZSBhZG1pbmlzdHJhdGlvbiBpbiBJbmRpYTsgKGUpIGRpdmVyc2lvbiBvZiBQb3J0dWd1ZXNlIGNvbG9uaXNpbmcgYW1iaXRpb25zIHRvd2FyZHMgdGhlIFdlc3QgZHVlIHRvIHRoZSBkaXNjb3Zlcnkgb2YgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following colonial power established their principal settlement atSerampore near Calcutta.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXM6LSBUaGUgRGFuZXMgVGhlIERhbmlzaCBFYXN0IEluZGlhIENvbXBhbnkgd2FzIGVzdGFibGlzaGVkIGluIDE2MTYsIGFuZCBpbiAxNjIwLCB0aGV5IGZvdW5kZWQgYSBmYWN0b3J5IGF0IFRyYW5xdWViYXIgbmVhciBUYW5qb3JlLCBvbiB0aGUgZWFzdGVybiBjb2FzdCBvZiBJbmRpYS4gVGhlaXIgcHJpbmNpcGFsIHNldHRsZW1lbnQgd2FzIGF0IFNlcmFtcG9yZSBuZWFyIENhbGN1dHRhLiBUaGUgRGFuZXMgYXJlIGJldHRlciBrbm93biBmb3IgdGhlaXIgbWlzc2lvbmFyeSBhY3Rpdml0aWVzIHRoYW4gZm9yIGNvbW1lcmNlLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "British",
        "option2" : "French",
        "option3" : "Dutch",
        "option4" : "Danish"
      }
    },
    {
      "index" : 4,
      "question" : "He was the first European to interfere in the internal politics of India . He was in fact,the originator of the practice of subsidiary alliance in India.He was appointed asGovernor General of Pondicherry. Later, he was recalled in 1754 due to the initialdefeat of the French army in the Second Carnatic War .Above description is related to which of the following important personality regardingthe colonial history of India ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXM6LSBKb3NlcGggRnJhbmNpcyBEdXBsZWl4IEpvc2VwaCBGcmFuY2lzIER1cGxlaXgsIGJvcm4gaW4gMTY5Nywgd2FzIHRoZSBzb24gb2YgYSB3ZWFsdGh5IEZhcm1lci1HZW5lcmFsIG9mMS4gVGF4ZXMgYW5kIERpcmVjdG9yLUdlbmVyYWwgb2YgdGhlIENvbXBhbnkgb2YgdGhlIEluZGllcy4gSW4gMTc0MSwgaGUgd2FzIGFwcG9pbnRlZCBhcyB0aGUgRGlyZWN0b3ItR2VuZXJhbCBvZiBGcmVuY2ggY29sb25pZXMgaW4gSW5kaWEuIEFjY29yZGluZyB0byBoaXN0b3JpYW5zLCBEdXBsZWl4IHBvc3Nlc3NlZCBxdWFsaXRpZXMgb2YgYW4gYWRtaW5pc3RyYXRvciwgYSBkaXBsb21hdCwgYW5kIGEyLiBsZWFkZXIgYmVzaWRlcyBoYXZpbmcgcG9saXRpY2FsIGluc2lnaHQgd2l0aCBhIGJyb2FkIHZpc2lvbi4gRHVwbGVpeCBpbiB0aGUgUm9sZSBvZiBBZG1pbmlzdHJhdG9yIEluIDE3NDEsIER1cGxlaXggYmVjYW1lIHRoZSBHb3Zlcm5vciwgR2VuZXJhbCBvZjMuIFBvbmRpY2hlcnJ5LiBEdXBsZWl4IHdhcyByZWNhbGxlZCBpbiAxNzU0IGR1ZSB0byB0aGUgaW5pdGlhbCBkZWZlYXQgb2YgdGhlIEZyZW5jaCBhcm15IGluIHRoZSBTZWNvbmQ0LiBDYXJuYXRpYyBXYXIgYW5kIHRoZSBoZWF2eSBjb3N0IGluY3VycmVkIGJ5IHRoZSBjb21wYW55IGR1ZSB0byBEdXBsZWl4J3MgcG9saXRpY2FsIGRlY2lzaW9ucy4gRHVwbGVpeCB3YXMgdGhlIGZpcnN0IEV1cm9wZWFuIHRvIGludGVyZmVyZSBpbiB0aGUgaW50ZXJuYWwgcG9saXRpY3Mgb2YgdGhlIEluZGlhbiBydWxlcnMuIEhlNS4gc3VwcG9ydGVkIE11enphZmZhciBKYW5nIGZvciBIeWRlcmFiYWQgYW5kIENoYW5kYSBTYWhpYiBmb3IgQ2FybmF0aWMsIGFuZCBoaXMgY2FuZGlkYXRlcyBlbWVyZ2VkIHN1Y2Nlc3NmdWwgYW5kLCBpbiByZXR1cm4sIGdhdmUgZ3JlYXQgY29uY2Vzc2lvbnMgdG8gRHVwbGVpeC4gRHVwbGVpeCB3YXMsIGluIGZhY3QsIHRoZSBvcmlnaW5hdG9yIG9mIHRoZSBwcmFjdGljZSBvZiBzdWJzaWRpYXJ5IGFsbGlhbmNlIGluIEluZGlhLiBIZSBwbGFjZWQ2LiBhIEZyZW5jaCBhcm15IGF0IEh5ZGVyYWJhZCBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgc3ViYWhkYXIu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Joseph Francis Dupleix",
        "option2" : "Alfonso de Albuquerque",
        "option3" : "Robert Clive",
        "option4" : "Lord Cornwallis."
      }
    },
    {
      "index" : 5,
      "question" : "Nadir shah invaded India during the reign of which of the following Mughal ruler :-Test-3: GS Subject",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gTXVoYW1tYWQgU2hhaCBNdWhhbW1hZCBTaGFoIHJ1bGVkIGR1cmluZyBwZXJpb2QgMTcxOS00OCAgLiBOYWRpciBTaGFoLCB0aGUgUGVyc2lhbiBlbXBlcm9yLCBhdHRhY2tlZCBJbmRpYSBpbiAxNzM4LTM5LCBjb25xdWVyZWQgTGFob3JlLCBhbmQgZGVmZWF0ZWQgdGhlIE11Z2hhbCBhcm15IGF0IEthcm5hbCBvbiBGZWJydWFyeSAxMywgMTczOSBhbmQgbGF0ZXIgaW1wcmlzb25lZCBNdWhhbW1hZCBTaGFoIGFuZCBhbm5leGVkIGFyZWFzIHdlc3Qgb2YgdGhlIEluZHVzIGludG8gdGhlIFBlcnNpYW4gZW1waXJlLiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Jahandar shah",
        "option2" : "Alamgir ll",
        "option3" : "Muhammad Shah",
        "option4" : "Shah Alam ll"
      }
    },
    {
      "index" : 6,
      "question" : "In the context of the modern history of India , the Black Hole tragedy is related towhich of the following rulers",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gJ0JsYWNrIEhvbGUgVHJhZ2VkeScgU2lyYWotdWQtRGF1bGFoIHN1Y2NlZWRlZCBhcyBOYXdhYiBvZiBCZW5nYWwgaW4gMTc1NiBhZnRlciB0aGUgZGVhdGggb2YgQWxpdmFyZGkga2hhbi4gU2lyYWotdWQtRGF1bGFoIGlzIGJlbGlldmVkIHRvIGhhdmUgaW1wcmlzb25lZCAxNDYgRW5nbGlzaCBwZXJzb25zLCB3aG8gd2VyZSBsb2RnZWQgaW4gYSB2ZXJ5IHRpbnkgcm9vbSBkdWUgdG8gd2hpY2ggMTIzIG9mIHRoZW0gZGllZCBvZiBzdWZmb2NhdGlvbi4gVGhpcyBldmVudCBpcyByZWNvZ25pc2VkIGJ5IGhpc3RvcmlhbnMgYXMgYSBibGFjayBob2xlIHRyYWdlZHku",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Murshid Kuki khan",
        "option2" : "Sarfaraz khan",
        "option3" : "Siraj-ud-Daulah",
        "option4" : "Shujauddin"
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements regarding the result of Battle of Plassey.\n\t1. Mir Kasim became the Nawab of Bengal.\n\t2. The sovereignty of the English over Calcutta was recognised.\n\t3. British acquired zamindari of 24 Parganas to the English.\n\t4. Mir Jafar shifted the capital from Murshidabad to Munger .Which of the above statements is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gQmF0dGxlIG9mIFBsYXNzZXkgMTc1NyBJdCB3YXMgYSBiYXR0bGUgZm91Z2h0IGJldHdlZW4gU2lyYWotdWQtIERhdWxhaCBhbmQgUm9iZXJ0IENsaXZlLiBUaGUgQmF0dGxlIG9mIFBsYXNzZXkgaGFkIHBvbGl0aWNhbCBzaWduaWZpY2FuY2UsIGZvciBpdCBsYWlkIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBCcml0aXNoIGVtcGlyZSBpbiBJbmRpYTsgaXQgaGFzIGJlZW4gcmlnaHRseSByZWdhcmRlZCBhcyB0aGUgc3RhcnRpbmcgcG9pbnQgb2YgQnJpdGlzaCBydWxlIGluIEluZGlhLiBTaWduaWZpY2FuY2Ugb2YgQmF0dGxlIG9mIFBsYXNzZXkgOi0gQXMgYSByZXN1bHQgb2YgdGhpcyB2aWN0b3J5LCBNaXIgSmFmYXIgYmVjYW1lIHRoZSBOYXdhYiBvZiBCZW5nYWwuIEhlbmNlIHN0YXRlbWVudCAxIGlzMS4gIFRlc3QtMzogR1MgU3ViamVjdCAgICBpbmNvcnJlY3QuIEhlIGdhdmUgbGFyZ2Ugc3VtcyBvZiBtb25leSBwbHVzIHRoZSB6YW1pbmRhcmkgb2YgMjQgUGFyZ2FuYXMgdG8gdGhlIEVuZ2xpc2guIEhlbmNlMi4gc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHNvdmVyZWlnbnR5IG9mIHRoZSBFbmdsaXNoIG92ZXIgQ2FsY3V0dGEgd2FzIHJlY29nbmlzZWQsIGFuZCB0aGUgRW5nbGlzaCBwb3N0ZWQgYTMuIHJlc2lkZW50IGF0IHRoZSBuYXdhYidzIGNvdXJ0IC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gTWlyIEthc2ltIHdhcyB0aGUgYWJsZXN0IG5hd2FiIGFtb25nIHRoZSBzdWNjZXNzb3JzIG9mIEFsaXZhcmRpIEtoYW4uIEFmdGVyIGFzc3VtaW5nNC4gcG93ZXIsIE1pciBLYXNpbSBzaGlmdGVkIHRoZSBjYXBpdGFsIGZyb20gTXVyc2hpZGFiYWQgdG8gTXVuZ2VyIGluIEJpaGFyLiBIZW5jZSBzdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 4 only",
        "option4" : "2 and 4 only"
      }
    },
    {
      "index" : 5,
      "question" : "8. Consider the following statements regarding the treaty of Allahabad 176\n\t1. Treaty was concluded between Robert Clive and Mughal ruler Shah Alam ll .\n\t2. Nawab of Awadh surrendered Allahabad and Kara to Emperor Shah Alam ll .\n\t3. Robert Clive annexed Awadh .\n\t4. Mughal ruler granted diwani of only Bengal and Bihar region to the East India company.Which of the above statements is /are true ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gTXVoYW1tYWQgU2hhaCBNdWhhbW1hZCBTaGFoIHJ1bGVkIGR1cmluZyBwZXJpb2QgMTcxOS00OCAgLiBOYWRpciBTaGFoLCB0aGUgUGVyc2lhbiBlbXBlcm9yLCBhdHRhY2tlZCBJbmRpYSBpbiAxNzM4LTM5LCBjb25xdWVyZWQgTGFob3JlLCBhbmQgZGVmZWF0ZWQgdGhlIE11Z2hhbCBhcm15IGF0IEthcm5hbCBvbiBGZWJydWFyeSAxMywgMTczOSBhbmQgbGF0ZXIgaW1wcmlzb25lZCBNdWhhbW1hZCBTaGFoIGFuZCBhbm5leGVkIGFyZWFzIHdlc3Qgb2YgdGhlIEluZHVzIGludG8gdGhlIFBlcnNpYW4gZW1waXJlLiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 4 only",
        "option4" : "3 and 4 only"
      }
    },
    {
      "index" : 9,
      "question" : "He was the commander of the British forces during the American War of Independenceand the Governor General of Bengal when the Permanent Settlement was introducedthere .Above description is related to which of the following personality regarding modernhistory of India ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ2hhcmxlcyBDb3Jud2FsbGlzICgxNzM4LTE4MDUpLCBIZSB3YXMgdGhlIGNvbW1hbmRlciBvZiB0aGUgQnJpdGlzaCBmb3JjZXMgZHVyaW5nIHRoZSBBbWVyaWNhbiBXYXIgb2YgSW5kZXBlbmRlbmNlIGFuZCB0aGUgR292ZXJub3IgR2VuZXJhbCBvZiBCZW5nYWwgd2hlbiB0aGUgUGVybWFuZW50IFNldHRsZW1lbnQgd2FzIGludHJvZHVjZWQgdGhlcmUgaW4gMTc5My4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "John shore  Test-3: GS Subject  ",
        "option2" : "Lord Wellesley",
        "option3" : "Charles Cornwallis",
        "option4" : "Warren Hasting"
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements regarding the Dual government of Bengal\n\t1. It is introduced by Warren Hasting .\n\t2. The Company exercised Diwani rights as the diwan and the nizamat rights through its right tonominate the deputy subahdar.\n\t3. Lord Cornwallis did away with the dual system of Bengal.Which of the above statement is / are not correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi1EdWFsIGdvdmVybm1lbnQgb2YgQmVuZ2FsIFJvYmVydCBDbGl2ZSBpbnRyb2R1Y2VkIHRoZSBkdWFsIHN5c3RlbSBvZiBnb3Zlcm5tZW50LCBpLmUuLCB0aGUgcnVsZSBvZiB0aGUgdHdvLXRoZSBDb21wYW55IGFuZCB0aGUgTmF3YWItaW4gQmVuZ2FsIGluIHdoaWNoIGJvdGggdGhlIGRpd2FuaSwgaS5lLiwgY29sbGVjdGluZyByZXZlbnVlcywgYW5kIG5pemFtYXQsIGkuZS4sIHBvbGljZSBhbmQganVkaWNpYWwgZnVuY3Rpb25zLCBjYW1lIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBDb21wYW55LiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBDb21wYW55IGV4ZXJjaXNlZCBkaXdhbmkgcmlnaHRzIGFzIHRoZSBkaXdhbiBhbmQgdGhlIG5pemFtYXQgcmlnaHRzIHRocm91Z2ggaXRzICBUZXN0LTM6IEdTIFN1YmplY3QgICAgcmlnaHQgdG8gbm9taW5hdGUgdGhlIGRlcHV0eSBzdWJhaGRhci4gIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBkdWFsIHN5c3RlbSBsZWQgdG8gYW4gYWRtaW5pc3RyYXRpdmUgYnJlYWtkb3duIGFuZCBwcm92ZWQgZGlzYXN0cm91cyBmb3IgdGhlIHBlb3BsZSBvZiBCZW5nYWwuIE5laXRoZXIgdGhlIENvbXBhbnkgbm9yIHRoZSBOYXdhYiBjYXJlZCBmb3IgYWRtaW5pc3RyYXRpb24gYW5kIHB1YmxpYyB3ZWxmYXJlLiAgICAgICAgICAgVGhlcmVmb3JlIFdhcnJlbiBIYXN0aW5ncyBkaWQgYXdheSB3aXRoIHRoZSBkdWFsIHN5c3RlbSBpbiAxNzcyLiBIZW5jZSBzdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 2,
      "question" : "D. Neither 1 nor 2 .\n\t12. Consider the following statements regarding colonial history of India.\n\t1. Lord Wellesley imposed subsidiary alliance on Mysore .\n\t2. William Bentick took control of Mysore on grounds of misgovernance .\n\t3. Lord Ripon restored the kingdom to Mysore ruler .Which of the above statements is / are incorrect ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUG9ydHVndWVzZSBSdWxlIGluIEluZGlhIDotIFBvcnR1Z3Vlc2Ugd2VyZSAxc3QgY29sb25pYWwgcG93ZXIgdG8gZXN0YWJsaXNoIHRyYWRlIHJlbGF0aW9ucyB3aXRoIEluZGlhIC4gVmFzY28gRGEgR2FtYSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGFycml2ZWQgaW4gSW5kaWEgaW4gMTQ5OC4gTGF0ZXIgdGhleSBlc3RhYmxpc2hlZCBmYWN0b3JpZXMgYXQgQ2FsaWN1dCAsIENvY2hpbiAsIENhbm5hbm9yZSAsZXRjLiBGYWN0b3JzIGZvciBEZWNsaW5lIG9mIHRoZSBQb3J0dWd1ZXNlIGluIEluZGlhIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIE1hcmF0aGFzIGFzIG5laWdoYm91cnM7IEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLiAoYikgcG9saXRpY2FsIGZlYXJzIGFyb3VzZWQgYnkgdGhlIGFjdGl2aXRpZXMgb2YgSmVzdWl0IG1pc3Npb25hcmllcywgYW5kIGhhdHJlZCBvZiBwZXJzZWN1dGlvbiAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdCAuIChjKSByaXNlIG9mIHRoZSBFbmdsaXNoIGFuZCBEdXRjaCBjb21tZXJjaWFsIGFtYml0aW9ucyBjaGFsbGVuZ2luZyB0aGUgUG9ydHVndWVzZSBzdXByZW1hY3k7IChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlIHByYWN0aWNlcyBvZiB0aGUgUG9ydHVndWVzZSBhZG1pbmlzdHJhdGlvbiBpbiBJbmRpYTsgKGUpIGRpdmVyc2lvbiBvZiBQb3J0dWd1ZXNlIGNvbG9uaXNpbmcgYW1iaXRpb25zIHRvd2FyZHMgdGhlIFdlc3QgZHVlIHRvIHRoZSBkaXNjb3Zlcnkgb2YgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "3 only",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 13,
      "question" : "Policy of Ring Fence followed by which of the following personality during colonialhistory of India .",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gVGhlIFBvbGljeSBvZiBSaW5nLUZlbmNlIFdhcnJlbiBIYXN0aW5ncyB0b29rIGNoYXJnZSBhcyB0aGUgZ292ZXJub3ItZ2VuZXJhbCBhdCBhIGNyaXRpY2FsIHBlcmlvZCBvZiBCcml0aXNoIHJ1bGUgd2hlbiB0aGUgQnJpdGlzaCB3ZXJlIHRvIGVuY291bnRlciB0aGUgcG93ZXJmdWwgY29tYmluYXRpb24gb2YgdGhlIE1hcmF0aGFzLE15c29yZSwgYW5kIEh5ZGVyYWJhZC4gSGUgZm9sbG93ZWQgYSBwb2xpY3kgb2YgcmluZy1mZW5jZSB3aGljaCBhaW1lZCBhdCBjcmVhdGluZyBidWZmZXIgem9uZXMgdG8gZGVmZW5kIHRoZSBDb21wYW55J3MgZnJvbnRpZXJzLiBCcm9hZGx5IHNwZWFraW5nLCBpdCB3YXMgdGhlIHBvbGljeSBvZiBkZWZlbmNlIG9mIHRoZWlyIG5laWdoYm91cnMnIGZyb250aWVycyBmb3Igc2FmZWd1YXJkaW5nIHRoZWlyIG93biB0ZXJyaXRvcmllcy4gIFRlc3QtMzogR1MgU3ViamVjdCAgICBUaGlzIHBvbGljeSBvZiBXYXJyZW4gSGFzdGluZ3Mgd2FzIHJlZmxlY3RlZCBpbiBoaXMgd2FyIGFnYWluc3QgdGhlIE1hcmF0aGFzIGFuZCBNeXNvcmUu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Warren Hastings",
        "option2" : "Lord Wellesley",
        "option3" : "Joseph Francis Dupleix",
        "option4" : "Alfonso de Albuquerque     Test-3: GS Subject  "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following features regarding the system of subsidiary alliance in India .\n\t1. British resident in court of Indian ruler\n\t2. Prior consultation with the company before appointing any foreign employee.\n\t3. Permanent stationing of British force within the territory of Indian ruler\n\t4. British to pay maintenance cost for it's force ,Which of the above statement is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gc3Vic2lkaWFyeSBhbGxpYW5jZSBpbiBJbmRpYSBJdCB3YXMgaW50cm9kdWNlZCBieSBMb3JkIFdlbGxlc2xleSAuIEZvbGxvd2luZyB3ZXJlIHRoZSBrZXkgZmVhdHVyZXMgb2Ygc3Vic2lkaWFyeSBhbGxpYW5jZSBzeXN0ZW0gSW5kaWFuIHN0YXRlJ3MgcnVsZXIgd2FzIGNvbXBlbGxlZCB0byBhY2NlcHQgdGhlIHBlcm1hbmVudCBzdGF0aW9uaW5nIG9mIGEgQnJpdGlzaCBmb3JjZTEuIHdpdGhpbiBoaXMgdGVycml0b3J5IC4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdCBJbmRpYW4gcnVsZXIgYXNrZWQgdG8gcGF5IGEgc3Vic2lkeSBmb3IgaXRzIG1haW50ZW5hbmNlLiBIZW5jZSBzdGF0ZW1lbnQgNCBpczIuIGluY29ycmVjdCBUaGUgSW5kaWFuIHJ1bGVyIGhhZCB0byBhZ3JlZSB0byB0aGUgcG9zdGluZyBvZiBhIEJyaXRpc2ggcmVzaWRlbnQgaW4gaGlzIGNvdXJ0LiBIZW5jZTMuIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgVGhlIEluZGlhbiBydWxlciBjb3VsZCBub3QgZW1wbG95IGFueSBFdXJvcGVhbiBpbiBoaXMgc2VydmljZSB3aXRob3V0IHRoZSBwcmlvcjQuIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBDb21wYW55LiBOb3IgY291bGQgaGUgZ28gdG8gd2FyIG9yIG5lZ290aWF0ZSB3aXRoIGFueSBvdGhlciBJbmRpYW4gcnVsZXIgd2l0aG91dCBjb25zdWx0aW5nIHRoZSBnb3Zlcm5vciBnZW5lcmFsLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJbiByZXR1cm4gZm9yIGFsbCB0aGlzLCB0aGUgQnJpdGlzaCB3b3VsZCBkZWZlbmQgdGhlIHJ1bGVyIGZyb20gaGlzIGVuZW1pZXMgYW5kIGFkb3B0IGE1LiBwb2xpY3kgb2Ygbm9uaW50ZXJmZXJlbmNlIGluIHRoZSBpbnRlcm5hbCBtYXR0ZXJzIG9mIHRoZSBhbGxpZWQgc3RhdGUu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only",
        "option2" : "1 , 2 and 3 only",
        "option3" : "3 and 4 only",
        "option4" : "2 and 4 only"
      }
    },
    {
      "index" : 15,
      "question" : "Doctrine of lapse was used during the colonial history of India . Consider thefollowing statements regarding that\n\t1. Adopted son could be the heir of state but not the private property of his foster father .\n\t2. By using the doctrine of lapse Dalhousie annexed only eight states during his tenure .\n\t3. Dalhousie annexed Awadh by applying the doctrine of lapse .Which of the above statement is / are true ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi1Eb2N0cmluZSBvZiBMYXBzZSBJbiBzaW1wbGUgdGVybXMsIHRoZSBkb2N0cmluZSBzdGF0ZWQgdGhhdCB0aGUgYWRvcHRlZCBzb24gY291bGQgYmUgdGhlIGhlaXIgdG8gaGlzIGZvc3RlciBmYXRoZXIncyBwcml2YXRlIHByb3BlcnR5LCBidXQgbm90IHRoZSBzdGF0ZTsgaXQgd2FzIGZvciB0aGUgcGFyYW1vdW50IHBvd2VyICh0aGUgQnJpdGlzaCkgdG8gZGVjaWRlIHdoZXRoZXIgdG8gYmVzdG93IHRoZSBzdGF0ZSBvbiB0aGUgYWRvcHRlZCBzb24gb3IgdG8gYW5uZXggaXQuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBEYWxob3VzaWUgYW5uZXhlZCBlaWdodCBzdGF0ZXMgZHVyaW5nIGhpcyBlaWdodCB5ZWFyIHRlbnVyZSAoMTg0OC01NikgYXMgZ292ZXJub3IgZ2VuZXJhbC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW4gdGhlc2UgZWlnaHQgeWVhcnMsIGhlIGFubmV4ZWQgc29tZSBxdWFydGVyIG1pbGxpb24gc3F1YXJlIG1pbGVzIG9mIHRoZSB0ZXJyaXRvcnkgb2YgSW5kaWEuIEhpcyByZWlnbiBhbG1vc3QgY29tcGxldGVkIHRoZSBwcm9jZXNzIG9mIGV4cGFuc2lvbiBvZiBCcml0aXNoIHBvd2VyIGluIEluZGlhLCB3aGljaCBiZWdhbiB3aXRoIHRoZSB2aWN0b3J5IG92ZXIgU2lyYWotdWQtRGF1bGFoIGF0IFBsYXNzZXkgaW4gMTc1Ny4gTG9yZCBEYWxob3VzaWUgYW5uZXhlZCBBd2FkaCBpbiAxODU2IGFmdGVyIGRlcG9zaW5nIE5hd2FiIFdhamlkIEFsaSBTaGFoIG9uIGdyb3VuZHMgb2YgbWlzZ292ZXJubWVudC4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements regarding Anglo - Nepalese relations\n\t1. William Bentick concluded the Treaty of Sagauli with the Gorkhas .\n\t2. With this agreement British got better facilities for trade with Central Asia .Which of the above statement is/ are incorrect ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gQW5nbG8tTmVwYWxlc2UgUmVsYXRpb25zIEJhY2tncm91bmQgOi0gVGhlIEdvcmtoYXMgd3Jlc3RlZCBjb250cm9sIG9mIE5lcGFsIGZyb20gdGhlIHN1Y2Nlc3NvcnMgb2YgUmFuaml0IE1hbGxhIG9mIEJoYXRnYW9uIGluIDE3NjAuIFRoZXkgYmVnYW4gdG8gZXhwYW5kIHRoZWlyIGRvbWluaW9uIGJleW9uZCB0aGUgbW91bnRhaW5zLiBUaGV5IGZvdW5kIGl0IGVhc2llciB0byBleHBhbmQgaW4gdGhlIHNvdXRoZXJuIGRpcmVjdGlvbiwgYXMgdGhlIG5vcnRoIHdhcyB3ZWxsIGRlZmVuZGVkIGJ5IHRoZSBDaGluZXNlLiAgSW4gMTgwMSwgdGhlIEVuZ2xpc2ggYW5uZXhlZCBHb3Jha2hwdXIsIHdoaWNoIGJyb3VnaHQgdGhlIEdvcmtoYXMnIGJvdW5kYXJ5IGFuZCB0aGUgIFRlc3QtMzogR1MgU3ViamVjdCAgICBDb21wYW55J3MgYm91bmRhcnkgdG9nZXRoZXIuIFRoZSBjb25mbGljdCBzdGFydGVkIGR1ZSB0byB0aGUgR29ya2hhcycgY2FwdHVyZSBvZiBCdXR3YWwgYW5kIFNoZW9yYWogaW4gdGhlIHBlcmlvZCBvZiBMb3JkIEhhc3RpbmdzICgxODEzLTIzKS4gVGhlIHdhciBlbmRlZCBpbiB0aGUgVHJlYXR5IG9mIFNhZ2F1bGkgaW4gMTgxNiwgd2hpY2ggd2FzIGluIGZhdm91ciBvZiB0aGUgQnJpdGlzaC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IFRoaXMgYWdyZWVtZW50IGJyb3VnaHQgbWFueSBhZHZhbnRhZ2VzIHRvIHRoZSBCcml0aXNoOiB0aGUgQnJpdGlzaCBlbXBpcmUgbm93IHJlYWNoZWQgdGhlIEhpbWFsYXlhczsxLiBpdCBnb3QgYmV0dGVyIGZhY2lsaXRpZXMgZm9yIHRyYWRlIHdpdGggQ2VudHJhbCBBc2lhOyBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LjIu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding foreign relations of British rule in India .\n\t1. Commercial need was the main reason for the second Burma war .\n\t2. It was concluded with the Treaty of Yandabo by Lord Dalhousie.Which of the above statement is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gU2Vjb25kIEJ1cm1hIFdhciAoMTg1MikgMSAuVGhlIHNlY29uZCB3YXIgd2FzIHRoZSByZXN1bHQgb2YgdGhlIEJyaXRpc2ggY29tbWVyY2lhbCBuZWVkIGFuZCB0aGUgaW1wZXJpYWxpc3QgcG9saWN5IG9mIExvcmQgRGFsaG91c2llLiBIZW5jZSBzdGF0ZW1lbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBpcyBjb3JyZWN0LiAgVGhlIEJyaXRpc2ggbWVyY2hhbnRzIHdlcmUga2VlbiB0byBnZXQgaG9sZCBvZiB0aW1iZXIgcmVzb3VyY2VzIG9mIHVwcGVyICAgICAgQnVybWEgYW5kIGFsc28gc291Z2h0IGZ1cnRoZXIgaW5yb2FkcyBpbnRvIHRoZSBCdXJtZXNlIG1hcmtldC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2  Test-3: GS Subject  "
      }
    },
    {
      "index" : 2,
      "question" : "D. Neither 1 nor \n\t20. In the context of Modern history of India 'Kundara Proclamation' is related toWhich of the above option is correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUG9ydHVndWVzZSBSdWxlIGluIEluZGlhIDotIFBvcnR1Z3Vlc2Ugd2VyZSAxc3QgY29sb25pYWwgcG93ZXIgdG8gZXN0YWJsaXNoIHRyYWRlIHJlbGF0aW9ucyB3aXRoIEluZGlhIC4gVmFzY28gRGEgR2FtYSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGFycml2ZWQgaW4gSW5kaWEgaW4gMTQ5OC4gTGF0ZXIgdGhleSBlc3RhYmxpc2hlZCBmYWN0b3JpZXMgYXQgQ2FsaWN1dCAsIENvY2hpbiAsIENhbm5hbm9yZSAsZXRjLiBGYWN0b3JzIGZvciBEZWNsaW5lIG9mIHRoZSBQb3J0dWd1ZXNlIGluIEluZGlhIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgdGhlIE1hcmF0aGFzIGFzIG5laWdoYm91cnM7IEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLiAoYikgcG9saXRpY2FsIGZlYXJzIGFyb3VzZWQgYnkgdGhlIGFjdGl2aXRpZXMgb2YgSmVzdWl0IG1pc3Npb25hcmllcywgYW5kIGhhdHJlZCBvZiBwZXJzZWN1dGlvbiAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdCAuIChjKSByaXNlIG9mIHRoZSBFbmdsaXNoIGFuZCBEdXRjaCBjb21tZXJjaWFsIGFtYml0aW9ucyBjaGFsbGVuZ2luZyB0aGUgUG9ydHVndWVzZSBzdXByZW1hY3k7IChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlIHByYWN0aWNlcyBvZiB0aGUgUG9ydHVndWVzZSBhZG1pbmlzdHJhdGlvbiBpbiBJbmRpYTsgKGUpIGRpdmVyc2lvbiBvZiBQb3J0dWd1ZXNlIGNvbG9uaXNpbmcgYW1iaXRpb25zIHRvd2FyZHMgdGhlIFdlc3QgZHVlIHRvIHRoZSBkaXNjb3Zlcnkgb2YgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1857 revolt",
        "option2" : "Diwan Velu Thampi's revolt",
        "option3" : "Poligars revolt",
        "option4" : "Swadeshi movement"
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements regarding the Economic history of India .\n\t1. Extortion by company servants\n\t2. Home charges\n\t3. Duty free trade provided to British\n\t4. Purchasing goods out of revenues and exporting to England\n\t5. Remittances and other incomes by officials send to England .Which of the above features was / were constituents drain of wealth ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gIERyYWluIG9mIHdlYWx0aCB0aGVvcnkgcmVmZXJzIHRvIGEgcG9ydGlvbiBvZiBuYXRpb25hbCBwcm9kdWN0IG9mIEluZGlhIHdoaWNoIHdhcyBub3QgYXZhaWxhYmxlIGZvciBjb25zdW1wdGlvbiBvZiBpdHMgb3duIHBlb3BsZSAuIENvbnN0aXR1ZW50cyBvZiBkcmFpbiBvZiB3ZWFsdGggOiBFeHRvcnRpb24gYnkgY29tcGFueSBzZXJ2YW50cyBIb21lIGNoYXJnZXMgRHV0eSBmcmVlIHRyYWRlIHByb3ZpZGVkIHRvIEJyaXRpc2ggUHVyY2hhc2luZyBnb29kcyBvdXQgb2YgcmV2ZW51ZXMgYW5kIGV4cG9ydGluZyB0byBFbmdsYW5kIFJlbWl0dGFuY2VzIGFuZCBvdGhlciBpbmNvbWVzIGJ5IG9mZmljaWFscyBzZW5kIHRvIEVuZ2xhbmQgLiBIZWZ0eSBpbnRlcmVzdCB3ZXJlIHBhaWQgdG8gQnJpdGlzaCBpbnZlc3RvcnMu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 5 only",
        "option2" : "1 , 2 and 3 only",
        "option3" : "3 and 4 only",
        "option4" : "All of the above     Test-3: GS Subject  "
      }
    },
    {
      "index" : 3,
      "question" : "22. Consider the following statements regarding regulating Act of 177\n\t1. Governor General and a council consisting of 15 members were to be carried out administrationin Bengal.\n\t2. Company director were required to submit all correspondence regarding revenue affairs andcivil and military administration to the governmentWhich of the above statement is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXM6LSBUaGUgRGFuZXMgVGhlIERhbmlzaCBFYXN0IEluZGlhIENvbXBhbnkgd2FzIGVzdGFibGlzaGVkIGluIDE2MTYsIGFuZCBpbiAxNjIwLCB0aGV5IGZvdW5kZWQgYSBmYWN0b3J5IGF0IFRyYW5xdWViYXIgbmVhciBUYW5qb3JlLCBvbiB0aGUgZWFzdGVybiBjb2FzdCBvZiBJbmRpYS4gVGhlaXIgcHJpbmNpcGFsIHNldHRsZW1lbnQgd2FzIGF0IFNlcmFtcG9yZSBuZWFyIENhbGN1dHRhLiBUaGUgRGFuZXMgYXJlIGJldHRlciBrbm93biBmb3IgdGhlaXIgbWlzc2lvbmFyeSBhY3Rpdml0aWVzIHRoYW4gZm9yIGNvbW1lcmNlLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements regarding Pitt's India Act 1784\n\t1. Company became a subordinate department of the state .\n\t2. The company's territories in India were termed British possessions .Which of the above statement is / are correct.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gUGl0dCdzIEluZGlhIEFjdCBvZiAxNzg0IFRoZSBQaXR0J3MgSW5kaWEgQWN0IGdhdmUgdGhlIEJyaXRpc2ggZ292ZXJubWVudCBhIGxhcmdlIG1lYXN1cmUgb2YgY29udHJvbCBvdmVyIHRoZSBDb21wYW55J3MgYWZmYWlycy4gSW4gZmFjdCwgdGhlIENvbXBhbnkgYmVjYW1lIGEgc3Vib3JkaW5hdGUgZGVwYXJ0bWVudCBvZiB0aGUgU3RhdGUuICBUaGUgQ29tcGFueSdzIHRlcnJpdG9yaWVzIGluIEluZGlhIHdlcmUgdGVybWVkICdCcml0aXNoIHBvc3Nlc3Npb25zJy4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statement regarding the Colonial history of India\n\t1. The charter Act of 1793 led to the disappearing of the Maal Adalats .\n\t2. Maal adalat were revenue court presided by collectors.Which of the above statement is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gTWFhbCBBZGFsYXRzIE1hYWwgQWRhbGF0cyB3ZXJlIHJldmVudWUgY291cnRzIGluIGVhY2ggZGlzdHJpY3Qgd2hpY2ggZXhjbHVzaXZlbHkgZGVhbHQgd2l0aCByZXZlbnVlIG1hdHRlcnMuIFRoaXMgY291cnQgd2FzIHByZXNpZGVkIGJ5IHRoZSBDb2xsZWN0b3Igd2hvIGRlY2lkZWQgY2FzZXMgcmVsYXRlZCB0byByZXZlbnVlIGFzIGhlIHdhcyBpbiBjaGFyZ2Ugb2YgcmV2ZW51ZSBtYXR0ZXJzLiBUaGUgQ2hhcnRlciBBY3Qgb2YgMTc5MyDil48gVGhlIGFjdCByZW5ld2VkIHRoZSBDb21wYW55J3MgY29tbWVyY2lhbCBwcml2aWxlZ2VzIGZvciB0aGUgbmV4dCAyMCB5ZWFycy4g4pePIFRoZSByZXZlbnVlIGFkbWluaXN0cmF0aW9uIHdhcyBzZXBhcmF0ZWQgZnJvbSB0aGUganVkaWNpYXJ5IGZ1bmN0aW9ucywgYW5kIHRoaXMgbGVkIHRvIGRpc2FwcGVhcmluZyBvZiB0aGUgTWFhbCBBZGFsYXRzLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements regarding Charter Act 1813\n\t1. The Company's monopoly over trade in India ended .\n\t2. Christian missionaries were permitted in India .\n\t3. A fund was created for promoting literature and science among natives of India.Which of the above statement is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gQ2hhcnRlciBBY3QgMTgxMyAuIFByb3Zpc2lvbnMgb2YgY2hhcnRlciBhY3QgMTgxMyA6LSDil48gVGhlIENvbXBhbnkncyBtb25vcG9seSBvdmVyIHRyYWRlIGluIEluZGlhIGVuZGVkLCBidXQgdGhlIENvbXBhbnkgcmV0YWluZWQgdGhlIHRyYWRlIHdpdGggQ2hpbmEgYW5kIHRoZSB0cmFkZSBpbiB0ZWEuIOKXjyBBIHN1bSBvZiBvbmUgbGFraCBydXBlZXMgd2FzIHRvIGJlIHNldCBhc2lkZSBmb3IgdGhlIHJldml2YWwsIHByb21vdGlvbiwgYW5kIGVuY291cmFnZW1lbnQgb2YgbGl0ZXJhdHVyZSwgbGVhcm5pbmcsIGFuZCBzY2llbmNlIGFtb25nIHRoZSBuYXRpdmVzIG9mIEluZGlhLCBldmVyeSB5ZWFyLiAoVGhpcyB3YXMgYW4gaW1wb3J0YW50IHN0YXRlbWVudCBmcm9tIHRoZSBwb2ludCBvZiBTdGF0ZSdzIHJlc3BvbnNpYmlsaXR5IGZvciBlZHVjYXRpb24uKSAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIOKXjyBDaHJpc3RpYW4gbWlzc2lvbmFyaWVzIHdlcmUgYWxzbyBwZXJtaXR0ZWQgdG8gY29tZSB0byBJbmRpYSBhbmQgcHJlYWNoIHRoZWlyIHJlbGlnaW9uLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "All of the above",
        "option4" : "2 and 3 only  Test-3: GS Subject  "
      }
    },
    {
      "index" : 26,
      "question" : "In the context of colonial history of India ,Woodhead commission was appointed as",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gVGhlIEZhbWluZSBJbnF1aXJ5IENvbW1pc3Npb24sIGFsc28ga25vd24gYXMgdGhlIFdvb2RoZWFkIENvbW1pc3Npb24sIHdhcyBhcHBvaW50ZWQgYnkgdGhlIEdvdmVybm1lbnQgb2YgQnJpdGlzaCBJbmRpYSBpbiAxOTQ0IHRvIGludmVzdGlnYXRlIHRoZSAxOTQzIEJlbmdhbCBmYW1pbmUu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Irrigation commission",
        "option2" : "Famine inspection commission",
        "option3" : "Education commission",
        "option4" : "Police commission"
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements regarding Economic policies of British rule in India.\n\t1. Mahalwari system was introduced in the Madras region by William Bentick and Holt Mackenzie .\n\t2. The land revenue settlement was made permanent in the mahalwari region.Which of the above statement is/ are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWFoYWx3YXJpIFN5c3RlbSBNYWhhbCwgYSBIaW5kaSB3b3JkIGRlbm90aW5nIGEgaG91c2Ugb3IgYnkgZXh0ZW5zaW9uIGFuIGVzdGF0ZSwgd2FzIHRoZSBiYXNpcyBvZiByZXZlbnVlIGFzc2Vzc21lbnQgaW4gdGhpcyBzeXN0ZW07IGluIHRoZSBtYWhhbHdhcmkgc3lzdGVtLCBhIG1haGFsIGNvdWxkIGJlIGEgdmlsbGFnZSBvciBhIGdyb3VwIG9mIHZpbGxhZ2VzIGFuZCB3YXMgY29uc2lkZXJlZCBhcyB0aGUgdW5pdCBmb3IgYXNzZXNzbWVudCBvZiB0YXguIFRoZSBhZG9wdGlvbiBvZiBtYWhhbHdhcmkgc3lzdGVtIGluIHBhcnRzIG9mIE5vcnRoZXJuIEluZGlhIGFuZCBub3J0aCB3ZXN0IHByb3ZpbmNlcyBvZiBJbmRpYSBiZWdhbiB0byBiZSBjb25zaWRlcmVkIGluIDE4MTkgLiBJdCAgd2FzIGludHJvZHVjZWQgYnkgV2lsbGlhbSBCZW50aWNrIGFuZCBIb2x0IHdoZW4gSG9sdCBNYWNrZW56aWUsIHRoZSBzZWNyZXRhcnkgdG8gdGhlIGJvYXJkIG9mIGNvbW1pc3Npb25lcnMsIHJlY29tbWVuZGVkIHRoaXMgZm9ybSBvZiB0aGUgc2V0dGxlbWVudCBvZiBsYW5kIHJldmVudWUuIEluIHRoZSBtYWhhbHdhcmkgcmVnaW9ucywgdGhlIGxhbmQgcmV2ZW51ZSB3YXMgcmV2aXNlZCBwZXJpb2RpY2FsbHkuICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 28,
      "question" : "In the context of the colonial history of India, which of the following was / wereNationalist critique of colonial economy .\n\t1. Dadabhai Naoroji\n\t2. Romesh Chandra Dutt\n\t3. Gopal Ganesh Agarkar\n\t4. G. Subramania Iyer\n\t5. Surendranath Banerjee\n\t6. Mahadev Govind RanadeWhich of the above option is / are correct.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gIE5hdGlvbmFsaXN0IGNyaXRpcXVlIG9mIGNvbG9uaWFsIGVjb25vbXkgLiBUaGUgZm9yZW1vc3QgYW1vbmcgZWNvbm9taWMgYW5hbHlzdHMgd2FzICBEYWRhYmhhaSBOYW9yb2ppLCB0aGUgJ0dyYW5kIE9sZCBNYW4gb2YgSW5kaWEnLCB3aG8gYWZ0ZXIgYSBicmlsbGlhbnQgYW5hbHlzaXMgb2YgdGhlIGNvbG9uaWFsIGVjb25vbXkgcHV0IGZvcndhcmQgdGhlIHRoZW9yeSBvZiBlY29ub21pYyBkcmFpbiBpbiBQb3ZlcnR5IGFuZCBVbkJyaXRpc2ggUnVsZSBpbiBJbmRpYS4gT3RoZXIgZWNvbm9taWMgYW5hbHlzdHMgaW5jbHVkZWQgSnVzdGljZSBNYWhhZGV2IEdvdmluZCBSYW5hZGUsMS4gUm9tZXNoIENoYW5kcmEgRHV0dCAoVGhlIEVjb25vbWljIEhpc3Rvcnkgb2YgSW5kaWEpLDIuIEdvcGFsIEtyaXNobmEgR29raGFsZSwzLiBHLiBTdWJyYW1hbmlhIEl5ZXIsIGFuZDQuIFByaXRod2lzaGNoYW5kcmEgUmF5LjUu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 , 2 and 5 only",
        "option2" : "1, 2 ,4 and 6 only",
        "option3" : "3 ,5 and 6 only",
        "option4" : "2 , 4 and 6 only"
      }
    },
    {
      "index" : 29,
      "question" : "In the context of colonial history of India, Lottery committee was related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRlc3QtMzogR1MgU3ViamVjdCAgICBBbmFseXNpcyA6LSBMb3R0ZXJ5IENvbW1pdHRlZSAoMTgxNykgRWFybGllciBpbiBjb2xvbmlhbCBJbmRpYSAsdGhlIHdvcmsgb2YgdG93biBwbGFubmluZyB3YXMgY2FycmllZCBvbiBieSB0aGUgTG90dGVyeSBDb21taXR0ZWUgKDE4MTcpIHdpdGggdGhlIGhlbHAgb2YgdGhlIGdvdmVybm1lbnQuIFRoZSBMb3R0ZXJ5IENvbW1pdHRlZSB3YXMgc28gbmFtZWQgYmVjYXVzZSBmdW5kcyBmb3IgdG93biBpbXByb3ZlbWVudCB3ZXJlIHJhaXNlZCB0aHJvdWdoIHB1YmxpYyBsb3R0ZXJpZXMuICBJbiBvdGhlciB3b3JkcywgaW4gdGhlIGVhcmx5IGRlY2FkZXMgb2YgdGhlIG5pbmV0ZWVudGggY2VudHVyeSByYWlzaW5nIGZ1bmRzIGZvciB0aGUgY2l0eSB3YXMgc3RpbGwgdGhvdWdodCB0byBiZSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgcHVibGljLSBtaW5kZWQgY2l0aXplbnMgYW5kIG5vdCBleGNsdXNpdmVseSB0aGF0IG9mIHRoZSBnb3Zlcm5tZW50Lg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Land revenue",
        "option2" : "Labour reforms",
        "option3" : "Town planning",
        "option4" : "Local government"
      }
    },
    {
      "index" : 30,
      "question" : "British government established several hill station due to which of following reasons\n\t1. To protect army from epidemics .\n\t2. Guarding frontiers\n\t3. Development of sanitariums.Test-3: GS SubjectWhich of the above statement is/ are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gSGlsbCBzdGF0aW9ucyBIaWxsIHN0YXRpb25zIHdlcmUgYSBkaXN0aW5jdGl2ZSBmZWF0dXJlIG9mIGNvbG9uaWFsIHVyYmFuIGRldmVsb3BtZW50LiBUaGUgZm91bmRpbmcgYW5kIHNldHRsaW5nIG9mIGhpbGwgc3RhdGlvbnMgd2FzIGluaXRpYWxseSBjb25uZWN0ZWQgd2l0aCB0aGUgbmVlZHMgb2YgdGhlIEJyaXRpc2ggYXJteS4gSGlsbCBzdGF0aW9ucyBiZWNhbWUgc3RyYXRlZ2ljIHBsYWNlcyBmb3IgYmlsbGV0aW5nIHRyb29wcywgZ3VhcmRpbmcgZnJvbnRpZXJzIGFuZCBsYXVuY2hpbmcgY2FtcGFpZ25zIGFnYWluc3QgZW5lbXkgcnVsZXJzLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgdGVtcGVyYXRlIGFuZCBjb29sIGNsaW1hdGUgb2YgdGhlIEluZGlhbiBoaWxscyB3YXMgc2VlbiBhcyBhbiBhZHZhbnRhZ2UsIHBhcnRpY3VsYXJseSBzaW5jZSB0aGUgQnJpdGlzaCBhc3NvY2lhdGVkIGhvdCB3ZWF0aGVyIHdpdGggZXBpZGVtaWNzLiBDaG9sZXJhIGFuZCBtYWxhcmlhIHdlcmUgcGFydGljdWxhcmx5IGZlYXJlZCBhbmQgYXR0ZW1wdHMgd2VyZSBtYWRlIHRvIHByb3RlY3QgdGhlIGFybXkgZnJvbSB0aGVzZSBkaXNlYXNlcy4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlc2UgaGlsbCBzdGF0aW9ucyB3ZXJlIGFsc28gZGV2ZWxvcGVkIGFzIHNhbml0YXJpdW1zLCBpLmUuLCBwbGFjZXMgd2hlcmUgc29sZGllcnMgY291bGQgYmUgc2VudCBmb3IgcmVzdCBhbmQgcmVjb3ZlcnkgZnJvbSBpbGxuZXNzZXMuIEhlbmNlIHN0YXRlbWVudCAzIGlzIGNvcnJlY3Qu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2only",
        "option4" : "All of the above"
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statement regarding the effects of colonial economic policies.\n\t1. India's share of world manufacturing exports fell to less than 3 % under British rule.\n\t2. Promoted indigenous industries.\n\t3. Commercialisation of Indian agriculture.Which of the above statement is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gRWNvbm9taWMgSW1wYWN0IG9mIEJyaXRpc2ggUnVsZSBpbiBJbmRpYSAxLlJlZHVjdGlvbiBvZiB0cmFkZSBzaGFyZSA6LSBBY2NvcmRpbmcgdG8gaGlzdG9yaWFucywgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgMTh0aCBjZW50dXJ5LCBJbmRpYSBoYWQgc29tZSAyMyBwZXIgY2VudCBvZiB0aGUgd29ybGQgZWNvbm9teS4gVGhpcyBzaGFyZSBjYW1lIGRvd24gdG8gc29tZSAzIHBlciBjZW50IHdoZW4gSW5kaWEgZ290IGluZGVwZW5kZW5jZS4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdCBbSW5kaWEncyBzaGFyZSBvZiB3b3JsZCBtYW51ZmFjdHVyaW5nIGV4cG9ydHMgZmVsbCBmcm9tIDI3IHBlciBjZW50IHRvIDIgcGVyIGNlbnQgdW5kZXIgQnJpdGlzaCBydWxlLiAtU2hhc2hpIFRoYXJvb3IgaW4gQW4gRXJhIG9mIERhcmtuZXNzXSAyLkNvbW1lcmNpYWxpc2F0aW9uIG9mIEluZGlhbiBBZ3JpY3VsdHVyZTotIFNvIGZhciwgYWdyaWN1bHR1cmUgaGFkIGJlZW4gYSB3YXkgb2YgbGlmZSByYXRoZXIgdGhhbiBhIGJ1c2luZXNzIGVudGVycHJpc2UuIE5vdyBDb21tZXJjaWFsIGNyb3BzIGxpa2UgY290dG9uLCBqdXRlLCBncm91bmRudXQsIG9pbHNlZWRzLHN1Z2FyY2FuZSBldGMgd2VyZSBncm93biBvbiBsYXJnZSBzY2FsZSAuIEhlbmNlIHN0YXRlbWVudCAzIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements regarding colonial history of India\n\t1. Battle of St. Thome was fought during second Carnatic war\n\t2. It revealed importance of naval forces to colonial powers in India.Which of the following statements is/ are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gQmF0dGxlIG9mIFN0LiBUaG9tZSBUaGUgRmlyc3QgQ2FybmF0aWMgV2FyICggMTc0MC00OCkgIGlzIHJlbWVtYmVyZWQgZm9yIHRoZSBCYXR0bGUgb2YgU3QuIFRob21lIChpbiBNYWRyYXMpIC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBJdCB3YXMgIGZvdWdodCBiZXR3ZWVuIHRoZSBGcmVuY2ggZm9yY2VzIGFuZCB0aGUgZm9yY2VzIG9mIEFud2FydWRkaW4sIHRoZSBOYXdhYiBvZiBDYXJuYXRpYywgdG8gd2hvbSB0aGUgRW5nbGlzaCBhcHBlYWxlZCBmb3IgaGVscC4gQSBzbWFsbCBGcmVuY2ggYXJteSB1bmRlciBDYXB0YWluIFBhcmFkaXNlIGRlZmVhdGVkIHRoZSBzdHJvbmcgSW5kaWFuIGFybXkgdW5kZXIgTWFoZnV6IEtoYW4gYXQgU3QuIFRob21lIG9uIHRoZSBiYW5rcyBvZiB0aGUgUml2ZXIgQWR5YXIuIFRoaXMgd2FzIGFuIGV5ZS1vcGVuZXIgZm9yIHRoZSBFdXJvcGVhbnMgaW4gSW5kaWE6IGl0IHJldmVhbGVkIHRoYXQgZXZlbiBhIHNtYWxsIGRpc2NpcGxpbmVkIGFybXkgY291bGQgZWFzaWx5IGRlZmVhdCBhIG11Y2ggbGFyZ2VyIEluZGlhbiBhcm15LiBGdXJ0aGVyLCB0aGlzIHdhciBhZGVxdWF0ZWx5IGJyb3VnaHQgb3V0IHRoZSBpbXBvcnRhbmNlIG9mIG5hdmFsIGZvcmNlIGluIHRoZSBBbmdsby0gRnJlbmNoIGNvbmZsaWN0IGluIHRoZSBEZWNjYW4uIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 33,
      "question" : "In the context of colonial history of India, which of the following considered asreasons for the English success over other colonial powers in India\n\t1. Use of debt market by French , Portuguese and other colonial powers\n\t2. The English East India Company was largely owned by the state and shareholders had littleinterest in issues of company .Which of the above statement is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gRW5nbGFuZCBlbWVyZ2VkIGFzIHRoZSBtb3N0IHBvd2VyZnVsIGFuZCBzdWNjZXNzZnVsIGJ5IHRoZSBlbmQgb2YgdGhlIDE4dGggY2VudHVyeS4gVGhlIG1ham9yIGZhY3RvcnMgd2hpY2ggY2FuIGJlIGF0dHJpYnV0ZWQgZm9yIHRoZSBzdWNjZXNzOi0gU3RydWN0dXJlIGFuZCBOYXR1cmUgb2YgdGhlIFRyYWRpbmcgQ29tcGFuaWVzOi0gVGhlIEVuZ2xpc2ggRWFzdCBJbmRpYSBjb21wYW55IHdhcyBjb250cm9sbGVkIGJ5IGEgYm9hcmQgb2YgZGlyZWN0b3JzIHdob3NlIG1lbWJlcnMxLiB3ZXJlIGVsZWN0ZWQgYW5udWFsbHkuIFRoZSBzaGFyZWhvbGRlcnMgb2YgdGhlIGNvbXBhbnkgZXhlcmNpc2VkIGNvbnNpZGVyYWJsZSBpbmZsdWVuY2UsIGFzIHRoZSB2b3RlcyBjb3VsZCBiZSBib3VnaHQgYW5kIHNvbGQgdGhyb3VnaCB0aGUgcHVyY2hhc2Ugb2Ygc2hhcmVzLiBUaGUgdHJhZGluZyBjb21wYW5pZXMgb2YgRnJhbmNlIGFuZCBQb3J0dWdhbCB3ZXJlIGxhcmdlbHkgb3duZWQgYnkgdGhlIFN0YXRlLCBhbmQgdGhlaXIyLiBuYXR1cmUgd2FzIGluIG1hbnkgd2F5cyBmZXVkYWxpc3RpYy4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBJbiB0aGUgRnJlbmNoIGNvbXBhbnksVGhlIHNoYXJlaG9sZGVycyB0b29rIHZlcnkgbGl0dGxlIGludGVyZXN0IGluIHByb21vdGluZyB0aGUzLiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIHByb3NwZXJpdHkgb2YgdGhlIGNvbXBhbnksIGJlY2F1c2UgdGhlIFN0YXRlIGd1YXJhbnRlZWQgYSBkaXZpZGVuZCB0byB0aGUgc2hhcmVob2xkZXJzLiBVc2Ugb2YgRGVidCBNYXJrZXQ6LSBPbmUgb2YgdGhlIG1ham9yIGFuZCBpbm5vdmF0aXZlIHJlYXNvbnMgd2h5IEJyaXRhaW4gc3VjY2VlZGVkIGJldHdlZW4gdGhlIG1pZC0xOHRoIGNlbnR1cnkgYW5kIHRoZSBtaWQtMTl0aCBjZW50dXJ5LCB3aGlsZSBvdGhlciBFdXJvcGVhbiBuYXRpb25zIGZlbGwsIHdhcyB0aGF0IGl0IHVzZWQgdGhlIGRlYnQgbWFya2V0cyB0byBmdW5kIGl0cyB3YXJzLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following events from colonial history of India .\n\t1. British defeated Dutch in battle of bedara.\n\t2. Nadir shah invaded India\n\t3. At Lucknow, Asaf-ud-Daula built the Bara Imambara\n\t4. Death of AurangzebTest-3: GS SubjectArrange the above events as per chronology.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gQ29ycmVjdCBjaHJvbm9sb2d5IG9mIGhpc3RvcmljYWwgZXZlbnQgaXMgYXMgZm9sbG93cyA7LSAxNzA3IDotIERlYXRoIG9mIEF1cmFuZ3plYiAxNzM4LTM5Oi0gTmFkaXIgU2hhaCwgdGhlIFBlcnNpYW4gZW1wZXJvciwgYXR0YWNrZWQgSW5kaWEgMTc1OSA6LSBCYXR0bGUgb2YgQmlkYXJhIFRoZSBFbmdsaXNoIGRlZmVhdGVkIHRoZSBEdXRjaCAxNzg0IDotQXNhZi11ZC1EYXVsYSBidWlsdCB0aGUgQmFyYSBJbWFtYmFyYSBhdCBsdWNrbm93IC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2-1-3-4",
        "option2" : "4-2-1-3",
        "option3" : "4-1-2-3",
        "option4" : "3-2-1-4"
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements regarding famine's during colonial period.\n\t1. Uneven rainfall was the only reason for famines during the colonial period\n\t2. Diversion of food resources for the military was one of the reasons for the Bengal famine .\n\t3. Strachey commission was appointed by Lord Ripon for developing famine strategy.Which of the above statement is/ are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gRmFtaW5lcyBkdXJpbmcgdGhlIGNvbG9uaWFsIGVyYTogSW5kaWEgd2FzIGhpdCBieSByZWN1cnJlbnQgZmFtaW5lIGZyb20gMTc2MCBBRCB0byB0aWxsIDE5NDMgQUQuIEFzIHBlciBCcml0aXNoIHNvdXJjZXMsIHRoZXJlIHdlcmUgbW9yZSB0aGFuIDg1IG1pbGxpb24gSW5kaWFucyBkaWVkIGluIHRoZXNlIGZhbWluZXMgd2hpY2ggd2VyZSBpbiByZWFsaXR5IGdlbm9jaWRlcyBkb25lIGJ5IHRoZSBCcml0aXNoIFJhai4gVGhlIGZhbWluZXMgd2VyZSBhIHByb2R1Y3QgYm90aCBvZiB1bmV2ZW4gcmFpbmZhbGwgYW5kIEJyaXRpc2ggZWNvbm9taWMgYW5kIGFkbWluaXN0cmF0aXZlIHBvbGljaWVzLkNvbG9uaWFsIHBvbGljaWVzIGltcGxpY2F0ZWQgaW5jbHVkZSByYWNrLXJlbnRpbmcsIGxldmllcyBmb3Igd2FyLCBmcmVlIHRyYWRlIHBvbGljaWVzLCB0aGUgZXhwYW5zaW9uIG9mIGV4cG9ydCBhZ3JpY3VsdHVyZSwgYW5kIG5lZ2xlY3Qgb2YgYWdyaWN1bHR1cmFsIGludmVzdG1lbnQuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBEdXJpbmcgdGhlIEJlbmdhbCBmYW1pbmUgMTk0MyA6LSBUaGUgZ292ZXJubWVudCBwcmlvcml0aXNlZCBtaWxpdGFyeSBhbmQgZGVmZW5zZSBuZWVkcyBvdmVyIHRob3NlIG9mIHRoZSBydXJhbCBwb29yLCBhbGxvY2F0aW5nIG1lZGljYWwgY2FyZSBhbmQgZm9vZCBpbW1lbnNlbHkgaW4gdGhlIGZhdm91ciBvZiB0aGUgbWlsaXRhcnksIGxhYm91cmVycyBpbiBtaWxpdGFyeSBpbmR1c3RyaWVzLCBhbmQgY2l2aWwgc2VydmFudHMuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QgUmljaGFyZCBTdHJhY2hleSBDb21taXNzaW9uIG9mIDE4ODAgd2FzIGNyZWF0ZWQgdG8gZGV2ZWxvcCBhIGdlbmVyYWwgc3RyYXRlZ3kgYW5kIHByaW5jaXBsZXMgdG8gZGVhbCB3aXRoIHRoZSBmYW1pbmVzLiBJdCB3YXMgdGhlIGZpcnN0IEZhbWluZSBjb21taXNzaW9uIGFuZCB3YXMgY29uc3RpdHV0ZWQgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgTG9yZCBMeXR0b24uIEhlbmNlIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "2 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements regarding foreign policies of colonial governmentin India .\n\t1. Durand commission was set up by lord Lansdowne to define the borderline between India andAfghanistan.\n\t2. Lord Curzon send Younghusband mission to Nepal.Which of the above statement is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgTG9yZCBMYW5zZG93bmUgMTg4OC05NCA6LSBTZXQgdXAgb2YgRHVyYW5kIENvbW1pc3Npb24gKDE4OTMpIHRvIGRlZmluZSB0aGUgRHVyYW5kIExpbmUgYmV0d2VlbiBJbmRpYSBhbmQgQWZnaGFuaXN0YW4gKG5vdyBiZXR3ZWVuIFBha2lzdGFuIGFuZCBBZmdoYW5pc3RhbjsgYSBzbWFsbCBwb3J0aW9uIG9mIHRoZSBsaW5lIHRvdWNoZXMgSW5kaWEgaW4gUGFraXN0YW4tb2NjdXBpZWQgS2FzaG1pcikuIExvcmQgQ3Vyem9uIDE4OTktMTkwNSA6LSBTZW5kIFlvdW5naHVzYmFuZCdzIE1pc3Npb24gdG8gVGliZXQgKDE5MDQpLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements regarding the modern history of India.\n\t1. Boundary between Tibet and British India was named after Henry McMahon .\n\t2. North west frontier province was created by Lord Curzon .Test-3: GS SubjectWhich of the above statement is/ are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gVGhlIEJyaXRpc2ggaW5zdGVhZCBvZiByZWNvZ25pc2luZyBUaWJldCBhcyBhbiBpbmRlcGVuZGVudCBzdGF0ZSwgaW52aXRlZCByZXByZXNlbnRhdGl2ZXMgb2YgQ2hpbmEgYW5kIFRpYmV0IHRvIGEgdHJpcGFydGl0ZSBjb25mZXJlbmNlIGluIFNoaW1sYSBpbiAxOTEzLCBhbmQgZGVjaWRlZCB0byBkcmF3IGEgYm91bmRhcnkgYmV0d2VlbiBUaWJldCBhbmQgQnJpdGlzaCBJbmRpYSB3aGljaCBpcyBuYW1lZCBhZnRlciBIZW5yeSBNY01haG9uLiBMb3JkIEN1cnpvbiwgdGhlIEdvdmVybm9yLUdlbmVyYWwgKDE4OTktMTkwNSkgY2FydmVkIG91dCBhIG5ldyBwcm92aW5jZSBrbm93biBhcyBOb3J0aC1XZXN0ZXJuIEZyb250aWVyIFByb3ZpbmNlIGZvciBhZG1pbmlzdHJhdGl2ZSBlZmZpY2llbmN5IGFuZCBlZmZlY3RpdmUgY29udHJvbCAu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements regarding permanent settlement\n\t1. System was introduced by Lord Cornwallis\n\t2. It led to improvement of land productivity\n\t3. It was introduced in western India.Which of the above statement is / are correct ?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gUEVSTUFORU5UIFNFVFRMRU1FTlQ6IFBlcm1hbmVudCBzZXR0bGVtZW50IHN5c3RlbSB3YXMgaW50cm9kdWNlZCBieSBMb3JkIENvcm53YWxsaXMgLkhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgLiBPYmplY3RpdmVzOiAxLmVuc3VyZSBwcmVkaWN0YWJsZSBhbmQgc3RlYWR5IGZsb3cgb2YgcmV2ZW51ZSBhbmQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "1 and 2 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 40,
      "question" : "In the context of the colonial history of India , Non- Regulation system was related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgOi0gTm9uLSBSZWd1bGF0aW9uIHN5c3RlbSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIEl0IHdhcyBpbnRyb2R1Y2VkIGJ5IExvcmQgRGFsaG91c2llLiBJdCB3YXMgdGhlIHN5c3RlbSBvZiBjZW50cmFsaXNlZCBjb250cm9sIGluIHRoZSBuZXdseTEuIGFjcXVpcmVkIHRlcnJpdG9yaWVzLiB1bmRlciAgdGhpcyBzeXN0ZW0gY29tbWlzc2lvbmVycyB3ZXJlIGFwcG9pbnRlZCBmb3IgYWRtaW5pc3RyYXRpb24gLjIuIFRoZXkgd2VyZSBtYWRlIHJlc3BvbnNpYmxlIHRvIHRoZSBHb3Zlcm5vci1HZW5lcmFsIGluIHRoZSBDb3VuY2lsLiBIZSBoYW5kZWQgb3ZlciBhbGwzLiBvdGhlciBwb3dlcnMgcmVsYXRpbmcgdG8ganVzdGljZSwgcG9saWNlLCBhbmQgbGFuZCByZXZlbnVlIHRvIHRoZSBEaXN0cmljdCBNYWdpc3RyYXRlcy4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Land revenue management",
        "option2" : "Administration of newly acquired territories",
        "option3" : "Military administration",
        "option4" : "Border management"
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements regarding Murshid Quli Khan:\n\t1. Aurangzeb had appointed him as the diwan (collector of revenue) of Bengal.\n\t2. In 1710, Bahadur Shah appointed him as Nizam of Bengal.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHByb3ZpbmNlIG9yIHRoZSBzdWJhaCBvZiBCZW5nYWwgZ3JhZHVhbGx5IGJlY2FtZSBpbmRlcGVuZGVudCBvZiBNdWdoYWwgY29udHJvbCBhZnRlciBNdXJzaGlkIFF1bGkgS2hhbiBiZWNhbWUgdGhlIGdvdmVybm9yIGluIDE3MTcuIEluaXRpYWxseSwgQXVyYW5nemViIGhhZCBhcHBvaW50ZWQgaGltIHRoZSBkaXdhbiAoY29sbGVjdG9yIG9mIHJldmVudWUpIG9mIEJlbmdhbCB0byBzdHJlYW1saW5lIHRoZSByZXZlbnVlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBwcm92aW5jZS4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZW4gaW4gMTcxMCBCYWhhZHVyIFNoYWggcmVhcHBvaW50ZWQgaGltIGluIHRoaXMgcG9zaXRpb24gYWZ0ZXIgYSBzaG9ydCBicmVhayBvZiB0d28geWVhcnMgV2hlbiBGYXJydWtzaXlhciBiZWNhbWUgdGhlIGVtcGVyb3IsIGhlIGNvbmZpcm1lZCBNdXJzaGlkIFF1bGkgaW4gaGlzIHBvc2l0aW9uIGFuZCBhbHNvIGFwcG9pbnRlZCBoaW0gdGhlIGRlcHV0eSBnb3Zlcm5vciBvZiBCZW5nYWwgYW5kIGdvdmVybm9yIG9mIE9yaXNzYS4gTGF0ZXIgaW4gMTcxNyB3aGVuIGhlIHdhcyBhcHBvaW50ZWQgdGhlIGdvdmVybm9yIG9yIE5pemFtIG9mIEJlbmdhbCwgaGUgd2FzIGdpdmVuIHRoZSB1bnByZWNlZGVudGVkIHByaXZpbGVnZSBvZiBob2xkaW5nIHRoZSB0d28gb2ZmaWNlcyBvZiBOaXphbSBhbmQgZGl3YW4gc2ltdWx0YW5lb3VzbHkuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 42,
      "question" : "The Battle of Colachel was fought between:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWFuIGtpbmdkb20gb2YgVHJhdmFuY29yZSBhbmQgdGhlIER1dGNoIEVhc3QgSW5kaWEgQ29tcGFueS4gRHVyaW5nIHRoZSBUcmF2YW5jb3JlLUR1dGNoIFdhciwgS2luZyBNYXJ0aGFuZGEgVmFybWEncyBmb3JjZXMgZGVmZWF0ZWQgdGhlIER1dGNoIEVhc3QgSW5kaWEgQ29tcGFueSdzIGZvcmNlcyBsZWQgYnkgQWRtaXJhbCBFdXN0YWNoaXVzIERlIExhbm5veSBvbiAxMCBBdWd1c3QgMTc0MS4gIEhlbmNlLCBvcHRpb24oYykgaXMgY29ycmVjdC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The British East India Company and Tipu Sultan",
        "option2" : "The British East India Company and Haider Ali",
        "option3" : "The Dutch East India Company and Martanda Varma",
        "option4" : "The Dutch East India Company any Haider Ali"
      }
    },
    {
      "index" : 43,
      "question" : "With reference to the military administration of Chhatrapati Shivaji, which one of thefollowing is the correct sequence in ascending order in terms of rank?Test-3: GS Subject",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2hpdmFqaSBvcmdhbml6ZWQgYSBzdGFuZGluZyBhcm15LiBUaGUgYXJteSBjb25zaXN0ZWQgb2YgZm91ciBkaXZpc2lvbnM6IGluZmFudHJ5LCBjYXZhbHJ5LCBlbGVwaGFudCBjb3JwcyBhbmQgYXJ0aWxsZXJ5LiBUaGUgaW5mYW50cnkgd2FzIGRpdmlkZWQgaW50byByZWdpbWVudHMsIGJyaWdhZGVzIGFuZCBkaXZpc2lvbnMuIFRoZSBzbWFsbGVzdCB1bml0IHdpdGggbmluZSBzb2xkaWVycyB3YXMgaGVhZGVkIGJ5IGEgTmFpayAoY29ycG9yYWwpLiBFYWNoIHVuaXQgd2l0aCAyNSBob3JzZW1lbiB3YXMgcGxhY2VkIHVuZGVyIG9uZSBoYXZpbGRhciAoZXF1aXZhbGVudCB0byB0aGUgcmFuayBvZiBhIHNlcmdlYW50KS4gT3ZlciBmaXZlIGhhdmlsZGFycyB3ZXJlIHBsYWNlZCB1bmRlciBvbmUgamFtYWxhZGFyIGFuZCBvdmVyIHRlbiBqYW1hbGFkYXJzIHVuZGVyIG9uZSBoYXphcmkuIFNhcmkgTmF1YmF0IHdhcyB0aGUgc3VwcmVtZSBjb21tYW5kZXIgb2YgdGhlIGNhdmFscnkuIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Havildar- Hazari- Jamaladar",
        "option2" : "Jamaladar- Havildar- Hazari",
        "option3" : "Havildar- Jamaladar- Hazari",
        "option4" : "Hazari- Jamaladar-Havildar"
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements regarding King Serfoji II:\n\t1. He established the Saraswati Mahal Library.\n\t2. He established Dhanvantari Mahal, a research institution that produced herbal medicine forhumans and animals.\n\t3. He introduced western musical instruments like clarinet, and violin in Carnatic music.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2VyZm9qaSBJSSBCaG9uc2xlIHdhcyB0aGUgbGFzdCBydWxlciBvZiB0aGUgQmhvbnNsZSBkeW5hc3R5IG9mIHRoZSBNYXJhdGhhIHByaW5jaXBhbGl0eSBvZiBUYW5qb3JlIHRvIGV4ZXJjaXNlIGFic29sdXRlIHNvdmVyZWlnbnR5IG92ZXIgaGlzIGRvbWluaW9ucy4gU2VyZm9qaSdzIG1vZGVybmlzaW5nIHByb2plY3RzIGluY2x1ZGVkIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgcHJpbnRpbmcgcHJlc3MgKHRoZSBmaXJzdCBwcmVzcyBmb3IgTWFyYXRoaSBhbmQgU2Fuc2tyaXQpIGFuZCBlbnJpY2htZW50IG9mIHRoZSBTYXJhc3dhdGkgTWFoYWwgTGlicmFyeS4gVGhlIFNhcmFzd2F0aSBNYWhhbCBsaWJyYXJ5LCBidWlsdCBieSB0aGUgTmF5YWsgcnVsZXJzIGFuZCBlbnJpY2hlZCBieSBTZXJmb2ppIElJIGNvbnRhaW5zIGEgcmVjb3JkIG9mIHRoZSBkYXktdG8tZGF5IHByb2NlZWRpbmdzIG9mIHRoZSBNYXJhdGhhIGNvdXJ0IC0gYXMgTW9kaSBkb2N1bWVudHMsIEZyZW5jaC1NYXJhdGhhIGNvcnJlc3BvbmRlbmNlIG9mIHRoZSAxOHRoIGNlbnR1cnkuIE1vZGkgd2FzIHRoZSBzY3JpcHQgdXNlZCB0byB3cml0ZSB0aGUgTWFyYXRoaSBsYW5ndWFnZS4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gU2VyZm9qaSdzIG1vc3Qgc3RyaWtpbmcgaW5pdGlhdGl2ZSB3YXMgdGhlIGZvdW5kaW5nIGFuZCBtYW5hZ2VtZW50IG9mIGZyZWUgZWxlbWVudGFyeSBhbmQgc2Vjb25kYXJ5IHNjaG9vbHMgZm9yIG9ycGhhbnMgYW5kIHRoZSBwb29yIGluIFRoYW5qYXZ1ciBjaXR5IGFuZCBvdGhlciBhZGphY2VudCBwbGFjZXMuIFNlcmZvamkgSUkgZXN0YWJsaXNoZWQgRGhhbnZhbnRhcmkgTWFoYWwsIGEgcmVzZWFyY2ggaW5zdGl0dXRpb24gdGhhdCBwcm9kdWNlZCBoZXJiYWwgbWVkaWNpbmUgZm9yIGh1bWFucyBhbmQgYW5pbWFscy4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFNlcmZvamkgSUkgd2FzIGEgcGF0cm9uIG9mIHRyYWRpdGlvbmFsIEluZGlhbiBhcnRzIGxpa2UgZGFuY2UgYW5kIG11c2ljLiBIZSBhdXRob3JlZCBLdW1hcmFzYW1iaGF2YSBDaGFtcHUsIERldmVuZHJhIEt1cmF2YW5qaSwgYW5kIE11ZHJhIHJha3NoYXNjaGF5YS4gSGUgaW50cm9kdWNlZCB3ZXN0ZXJuIG11c2ljYWwgaW5zdHJ1bWVudHMgbGlrZSBjbGFyaW5ldCwgYW5kIHZpb2xpbiBpbiBDYXJuYXRpYyBtdXNpYy4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEhlIGlzIGFsc28gY3JlZGl0ZWQgd2l0aCBwb3B1bGFyaXNpbmcgdGhlIHVuaXF1ZSBUaGFuamF2dXIgc3R5bGUgb2YgcGFpbnRpbmcu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 45,
      "question" : "Arrange the following events in chronological order from earliest to latest:\n\t1. Vellore Mutiny\n\t2. Barrackpore mutiny\n\t3. Sepoy mutinySelect the correct answer using the codes given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFZlbGxvcmUgbXV0aW55LCBvciBWZWxsb3JlIFJldm9sdXRpb24sIG9jY3VycmVkIG9uIDEwIEp1bHkgMTgwNiBhbmQgd2FzIHRoZSBmaXJzdCBpbnN0YW5jZSBvZiBhIGxhcmdlLXNjYWxlIGFuZCB2aW9sZW50IG11dGlueSBieSBJbmRpYW4gc2Vwb3lzIGFnYWluc3QgdGhlIEVhc3QgSW5kaWEgQ29tcGFueS4gVGhlIEJhcnJhY2twb3JlIG11dGlueSB3YXMgYSByaXNpbmcgb2YgbmF0aXZlIEluZGlhbiBzZXBveXMgYWdhaW5zdCB0aGVpciBCcml0aXNoIG9mZmljZXJzIGluIEJhcnJhY2twb3JlIGluIE5vdmVtYmVyIDE4MjQuIFRoZSBJbmRpYW4gUmViZWxsaW9uIG9mIDE4NTcgb3IgU2Vwb3kgbXV0aW55IHdhcyBhIG1ham9yIHVwcmlzaW5nIGluIEluZGlhIGluIDE4NTctNTggYWdhaW5zdCB0aGUgcnVsZSBvZiB0aGUgQnJpdGlzaCBFYXN0IEluZGlhIENvbXBhbnksIHdoaWNoIGZ1bmN0aW9uZWQgYXMgYSBzb3ZlcmVpZ24gcG93ZXIgb24gYmVoYWxmIG9mIHRoZSBCcml0aXNoIENyb3duLiBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3",
        "option2" : "2-1-3",
        "option3" : "3-2-1",
        "option4" : "3-1-2"
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements:\n\t1. William Carey was instrumental in establishing the Serampore Mission\n\t2. Joshua Marshman supported Raja Rammohun Roy's idea of Unitarianism.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW4gMTc5MyB0d28gRW5nbGlzaCBtaXNzaW9uYXJpZXMsIFdpbGxpYW0gQ2FyZXkgYW5kIEpvaG4gVGhvbWFzLCBib3RoIEJhcHRpc3RzLCBzZXQgb3V0IHRvIEluZGlhIHdpdGggdGhlIGludGVudGlvbiBvZiBzdGFydGluZyBhIG1pc3Npb24uIEluIHZpZXcgb2YgdGhlIGJhbiBvbiBtaXNzaW9uYXJ5IGFjdGl2aXR5LCB0aGV5IHNldHRsZWQgZG93biBpbiB0aGUgRGFuaXNoIENvbG9ueSBvZiBTZXJhbXBvcmUsIG5vcnRoIG9mIENhbGN1dHRhLiBDYXJleSwgYWxvbmcgd2l0aCB0d28gb3RoZXIgbWlzc2lvbmFyaWVzLCBKb3NodWEgTWFyc2htYW4gYW5kIFdpbGxpYW0gV2FyZCBlc3RhYmxpc2hlZCB0aGUgU2VyYW1wb3JlIE1pc3Npb24gaW4gMTc5OS4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEpvc2h1YSBNYXJzaG1hbiB3YXMgYW4gYWNjb21wbGlzaGVkIHNjaG9sYXIsIGxpbmd1aXN0LCBhbmQgdGhlb2xvZ2lhbiBhbmQgd2FzIGEgcHJvbGlmaWMgYXV0aG9yIGFuZCBwb2xlbWljaXN0LiAgQWZ0ZXIgbGVhcm5pbmcgQmVuZ2FsaSBhbmQgU2Fuc2tyaXQsIENhcmV5IGFuZCBNYXJzaG1hbiBwdWJsaXNoZWQtdGhyb3VnaCB0aGUgU2VyYW1wb3JlIFByZXNzLXRoZSBCZW5nYWxpIGZvcm0gb2YgVGhlIFJhbWF5YW5hIG9mIFZhbG1lZWtpLCB3aGljaCBXYXJkIHdvdWxkIGhhdmUgc2VlbiB0byBjb21wbGV0aW9uLiAgTWFyc2htYW4gYWxzbyBoYXMgdGhlIGhvbm9yIG9mIGJlaW5nIHRoZSBmaXJzdCB0byBoYXZlIHRyYW5zbGF0ZWQgdGhlIEJpYmxlIGludG8gQ2hpbmVzZS4gIEluIDE4MjEsIHRoZSBTZXJhbXBvcmUgUHJlc3MgcHVibGlzaGVkIHRoZSBmaXJzdCB0cmFuc2xhdGlvbiBvZiB0aGUgQmlibGUgaW50byBDaGluZXNlLCB0aGUgd29yayBvbiB3aGljaCBNYXJzaG1hbiBoYWQgc3BlbnQgZmlmdGVlbiB5ZWFycy4gSW4gdGhlIGVhcmx5IDE4MjBzLCBNYXJzaG1hbiBlbmdhZ2VkIGluIGEgcG9sZW1pY2FsIGRlYmF0ZSB3aXRoIFJhbW1vaHVtIFJveSBjb25jZXJuaW5nIHRoZSBkZWl0eSBvZiBKZXN1cyBhbmQgdGhlIENocmlzdGlhbiBkb2N0cmluZXMgb2YgdGhlIGF0b25lbWVudCBhbmQgdGhlIFRyaW5pdHkuICBUaGUgZGViYXRlIGZvY3VzZWQgb24gUm95J3MgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICBVbml0YXJpYW5pc20sIHdoaWNoIE1hcnNobWFuIGFuZCB0aGUgb3RoZXIgU2VyYW1wb3JlIG1pc3Npb25hcmllcyBzdHJvbmdseSBkaXNhZ3JlZWQuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIENhcmV5LCBNYXJzaG1hbiwgYW5kIFdhcmQgd29ya2VkIGNvb3BlcmF0aXZlbHksIGFuZCBjYW1lIHRvIGhhdmUgdGhlIG5hbWUgInRoZSBTZXJhbXBvcmUgVHJpby4i",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements regarding the contribution of James Thomason:\n\t1. He established an Engineering college at Roorkee.\n\t2. He vehemently opposed the vernacular system of education at the elementary level.Which of the statements given above is/are correct?Test-3: GS Subject",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSmFtZXMgVGhvbWFzb24gd2FzIGEgQnJpdGlzaCBhZG1pbmlzdHJhdG9yIG9mIHRoZSBFYXN0IEluZGlhIENvbXBhbnkgYW5kIExpZXV0ZW5hbnQtR292ZXJub3Igb2YgdGhlIE5vcnRoLVdlc3Rlcm4gUHJvdmluY2VzIGJldHdlZW4gMTg0MyBhbmQgMTg1My4gQnkgMTg1MyBoZSBoYWQgYWxzbyBlc3RhYmxpc2hlZCBhIHN5c3RlbSBvZiA4OTcgbG9jYWxseSBzdXBwb3J0ZWQgZWxlbWVudGFyeSBzY2hvb2xzIGluIGNlbnRyYWxseSBsb2NhdGVkIHZpbGxhZ2VzIHRoYXQgcHJvdmlkZWQgYSB2ZXJuYWN1bGFyIGVkdWNhdGlvbiBmb3IgY2hpbGRyZW4gdGhyb3VnaG91dCB0aGUgcmVnaW9uLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgVGhlIFJvb3JrZWUgQ29sbGVnZSB3YXMgZXN0YWJsaXNoZWQgaW4gMTg0NyBBRCBhcyB0aGUgRmlyc3QgRW5naW5lZXJpbmcgQ29sbGVnZSBpbiB0aGUgQnJpdGlzaCBFbXBpcmUuIFRoZSBDb2xsZWdlIHdhcyByZW5hbWVkIFRoZSBUaG9tYXNvbiBDb2xsZWdlIG9mIENpdmlsIEVuZ2luZWVyaW5nIGluIDE4NTQuIEl0IHdhcyBlc3RhYmxpc2hlZCBieSB0aGUgdGhlbiBsaWV1dGVuYW50IGdvdmVybm9yLCBTaXIgSmFtZXMgVGhvbWFzb24sIGFuZCB3YXMgZ2l2ZW4gdW5pdmVyc2l0eSBzdGF0dXMgaW4gMTk0OS4gSGVuY2UsIHN0YXRlbWVudCAxIGlzIGNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements regarding Wood's despatch\n\t1. It recommended English as the medium of instruction from school level to higher studies.\n\t2. It recommended a system of grants-in-aid to encourage private schools\n\t3. It asked the government of India to assume responsibility for the education of the massesWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OA==",
      "description" : "ICBUZXN0LTM6IEdTIFN1YmplY3QgICAgQW5zd2VyIEp1c3RpZmljYXRpb24gOiBJbiAxODU0LCBDaGFybGVzIFdvb2QgcHJlcGFyZWQgYSBkZXNwYXRjaCBvbiBhbiBlZHVjYXRpb25hbCBzeXN0ZW0gZm9yIEluZGlhLiBDb25zaWRlcmVkIHRoZSAnTWFnbmEgQ2FydGEgb2YgRW5nbGlzaCBFZHVjYXRpb24gaW4gSW5kaWEnLCB0aGlzIGRvY3VtZW50IHdhcyB0aGUgZmlyc3QgY29tcHJlaGVuc2l2ZSBwbGFuIGZvciB0aGUgc3ByZWFkIG9mIGVkdWNhdGlvbiBpbiBJbmRpYS4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements regarding the Hunter Education Commission(1882-83):\n\t1. It recommended the transfer of control of primary education to district and municipal boards.\n\t2. It recommended to have vocational training at the high school level.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gSHVudGVyIEVkdWNhdGlvbiBDb21taXNzaW9uICgxODgyLTgzKSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIEVhcmxpZXIgc2NoZW1lcyBoYWQgbmVnbGVjdGVkIHByaW1hcnkgYW5kIHNlY29uZGFyeSBlZHVjYXRpb24uIFdoZW4gZWR1Y2F0aW9uIHdhcyBzaGlmdGVkIHRvIHByb3ZpbmNlcyBpbiAxODcwLCBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgZWR1Y2F0aW9uIGZ1cnRoZXIgc3VmZmVyZWQgYmVjYXVzZSB0aGUgcHJvdmluY2VzIGFscmVhZHkgaGFkIGxpbWl0ZWQgcmVzb3VyY2VzIGF0IHRoZWlyIGRpc3Bvc2FsLiBJbiAxODgyLCB0aGUgR292ZXJubWVudCBhcHBvaW50ZWQgYSBjb21taXNzaW9uIHVuZGVyIHRoZSBjaGFpcm1hbnNoaXAgb2YgVy5XLiBIdW50ZXIgdG8gcmV2aWV3IHRoZSBwcm9ncmVzcyBvZiBlZHVjYXRpb24gaW4gdGhlIGNvdW50cnkgc2luY2UgdGhlIERlc3BhdGNoIG9mIDE4NTQuIFRoZSBIdW50ZXIgQ29tbWlzc2lvbiBtb3N0bHkgY29uZmluZWQgaXRzIHJlY29tbWVuZGF0aW9ucyB0byBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgZWR1Y2F0aW9uLiBUaGUgY29tbWlzc2lvbi0gKGkpIGVtcGhhc2lzZWQgdGhhdCBzdGF0ZSdzIHNwZWNpYWwgY2FyZSBpcyByZXF1aXJlZCBmb3IgZXh0ZW5zaW9uIGFuZCBpbXByb3ZlbWVudCBvZiBwcmltYXJ5IGVkdWNhdGlvbiwgYW5kIHRoYXQgcHJpbWFyeSBlZHVjYXRpb24gc2hvdWxkIGJlIGltcGFydGVkIHRocm91Z2ggdmVybmFjdWxhci4gKGlpKSByZWNvbW1lbmRlZCB0aGUgdHJhbnNmZXIgb2YgY29udHJvbCBvZiBwcmltYXJ5IGVkdWNhdGlvbiB0byBuZXdseSBzZXQgdXAgZGlzdHJpY3QgYW5kIG11bmljaXBhbCBib2FyZHMuIChpaWkpIHJlY29tbWVuZGVkIHRoYXQgc2Vjb25kYXJ5IChIaWdoIFNjaG9vbCkgZWR1Y2F0aW9uIHNob3VsZCBoYXZlIHR3byBkaXZpc2lvbnMtIOKXjyBsaXRlcmFyeS1sZWFkaW5nIHVwIHRvIHVuaXZlcnNpdHkuIOKXjyB2b2NhdGlvbmFsLWZvciBjb21tZXJjaWFsIGNhcmVlcnMuIChpdikgZHJldyBhdHRlbnRpb24gdG8gaW5hZGVxdWF0ZSBmYWNpbGl0aWVzIGZvciBmZW1hbGUgZWR1Y2F0aW9uLCBlc3BlY2lhbGx5IG91dHNpZGUgcHJlc2lkZW5jeSB0b3ducyBhbmQgbWFkZSByZWNvbW1lbmRhdGlvbnMgZm9yIGl0cyBzcHJlYWQuIFRoZSBuZXh0IHR3byBkZWNhZGVzIHNhdyByYXBpZCBncm93dGggYW5kIGV4cGFuc2lvbiBvZiBzZWNvbmRhcnkgYW5kIGNvbGxlZ2lhdGUgZWR1Y2F0aW9uIHdpdGggdGhlIHBhcnRpY2lwYXRpb24gb2YgSW5kaWFucy4gQWxzbywgbW9yZSB0ZWFjaGluZy1jdW0tZXhhbWluaW5nIHVuaXZlcnNpdGllcyB3ZXJlIHNldCB1cCBsaWtlIHRoZSBQdW5qYWIgVW5pdmVyc2l0eSAoMTg4MikgYW5kIHRoZSBBbGxhaGFiYWQgVW5pdmVyc2l0eSAoMTg4Nyku",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:\n\t1. Keshub Sen founded the Indian Association for the Cultivation of Science\n\t2. William Ward established the 'Society for the Acquisition of General Knowledge'Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTm9uZSBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBpcyBjb3JyZWN0LiBNYWhlbmRyYWxhbCBTYXJrYXIgQ0lFIHdhcyBhIEJlbmdhbGkgbWVkaWNhbCBkb2N0b3IsIHRoZSBzZWNvbmQgTUQgZ3JhZHVhdGVkICBUZXN0LTM6IEdTIFN1YmplY3QgICAgZnJvbSB0aGUgQ2FsY3V0dGEgTWVkaWNhbCBDb2xsZWdlLCBzb2NpYWwgcmVmb3JtZXIsIGFuZCBwcm9wYWdhdG9yIG9mIHNjaWVudGlmaWMgc3R1ZGllcyBpbiBuaW5ldGVlbnRoLWNlbnR1cnkgSW5kaWEuIEhlIHdhcyB0aGUgZm91bmRlciBvZiB0aGUgSW5kaWFuIEFzc29jaWF0aW9uIGZvciB0aGUgQ3VsdGl2YXRpb24gb2YgU2NpZW5jZS4gSW4gMTgyOCBEZXJvemlvIGZvdW5kZWQgd2l0aCBoaXMgc3R1ZGVudHMgdGhlICdBY2FkZW1pYyBBc3NvY2lhdGlvbicsIHdoaWNoIG9yZ2FuaXNlZCBkZWJhdGVzIG9uIHZhcmlvdXMgc3ViamVjdHMuIERlcm96aW8ncyBzdHVkZW50cyByZWFkIHRoZSB3cml0aW5ncyBvZiBWb2x0YWlyZSwgSHVtZSwgTG9ja2UsIFRvbSBQYWluZSBhbmQgb3RoZXJzIGFuZCBxdW90ZWQgdGhlbSBmcmVlbHkgaW4gdGhlaXIgZGViYXRlcy4gQW5vdGhlciBvcmdhbmlzYXRpb24gb2YgdGhlIFlvdW5nIEJlbmdhbCB3YXMgdGhlICdTb2NpZXR5IGZvciB0aGUgQWNxdWlzaXRpb24gb2YgR2VuZXJhbCBLbm93bGVkZ2UnIGZvdW5kZWQgaW4gMTgzOC4gVGFyYWNoYW5kIENoYWtyYXZhcnR5IHdhcyB0aGUgcHJlc2lkZW50IG9mIHRoZSBzb2NpZXR5IGFuZCBzZWNyZXRhcmllcyB3ZXJlIFBlYXJ5IENoYW5kIE1pdHJhIGFuZCBSYW10YW51IExhaGlyaS4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 51,
      "question" : "Alluri Sitarama Raju was associated with:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFJhbXBhIFJlYmVsbGlvbiBvZiAxOTIyLCBhbHNvIGtub3duIGFzIHRoZSBNYW55YW0gUmViZWxsaW9uLCB3YXMgYSB0cmliYWwgdXByaXNpbmcgbGVkIGJ5IEFsbHVyaSBTaXRhcmFtYSBSYWp1IGluIEdvZGF2YXJpIEFnZW5jeSBvZiBNYWRyYXMgUHJlc2lkZW5jeSwgQnJpdGlzaCBJbmRpYS4gSXQgYmVnYW4gaW4gQXVndXN0IDE5MjIgYW5kIGxhc3RlZCB1bnRpbCB0aGUgY2FwdHVyZSBhbmQga2lsbGluZyBvZiBSYWp1IGluIE1heSAxOTI0LiBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Manyam Rebellion",
        "option2" : "Munda Rebellion",
        "option3" : "Sanyasi Rebellion",
        "option4" : "Indigo Revolt  Test-3: GS Subject  "
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following personalities.\n\t1. William Bentick\n\t2. Henry Lawrence\n\t3. Maulvi Ahmadullah ShahWho among the above personalities is/are associated with the Battle of Chinhat?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWF1bHZpIEFobWFkdWxsYWggU2hhaCB3YXMgb25lIG9mIHRoZSBtYW55IG1hdWx2aXMgd2hvIHBsYXllZCBhbiBpbXBvcnRhbnQgcGFydCBpbiB0aGUgcmV2b2x0IG9mIDE4NTcuIEVkdWNhdGVkIGluIEh5ZGVyYWJhZCwgaGUgYmVjYW1lIGEgcHJlYWNoZXIgd2hlbiB5b3VuZy4gSW4gMTg1NywgaGUgd2FzIGphaWxlZCBpbiBGYWl6YWJhZC4gV2hlbiByZWxlYXNlZCwgaGUgd2FzIGVsZWN0ZWQgYnkgdGhlIG11dGlub3VzIDIybmQgTmF0aXZlIEluZmFudHJ5IGFzIHRoZWlyIGxlYWRlci4gSGUgZm91Z2h0IGluIHRoZSBmYW1vdXMgQmF0dGxlIG9mIENoaW5oYXQgaW4gd2hpY2ggdGhlIEJyaXRpc2ggZm9yY2VzIHVuZGVyIEhlbnJ5IExhd3JlbmNlIHdlcmUgZGVmZWF0ZWQu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1 only"
      }
    },
    {
      "index" : 54,
      "question" : "In the context of the freedom struggle, the Azamgarh proclamation was associatedwith?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEF6YW1nYXJoIHByb2NsYW1hdGlvbiB3YXMgcHVibGlzaGVkIGluIHRoZSBEZWxoaSBHYXpldHRlIGluIHRoZSBtaWRzdCBvZiB0aGUgJ0dyZWF0IE11dGlueScgb2YgMTg1Ny4gVGhlIGF1dGhvciB3YXMgbW9zdCBwcm9iYWJseSBGaXJveiBTaGFoLCBhIGdyYW5kc29uIG9mIHRoZSBNdWdoYWwgZW1wZXJvciBCYWhhZHVyIFNoYWggWmFmYXIsIHdob3NlIHJlc3RvcmF0aW9uIHRvIGZ1bGwgcG93ZXIgd2FzIGEgbWFpbiBhaW0gb2YgdGhlIHJlYmVscy4gSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Battle of Buxar",
        "option2" : "Revolt of 1857",
        "option3" : "Battle of Plassey",
        "option4" : "Vellore Mutiny"
      }
    },
    {
      "index" : 55,
      "question" : "Who among the following leaders founded the Madras Hindu Social ReformsAssociation?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIE1hZHJhcyBIaW5kdSBTb2NpYWwgUmVmb3JtcyBBc3NvY2lhdGlvbiB3YXMgZm91bmRlZCBieSBLYW5kdWt1cmkgVmVyZXNhbGluZ2FtIFBhbnR1bHUgaW4gMTg5MiBhdCBNYWRyYXMuIEFjY29yZGluZyB0byBoaW0sIHdpdGhvdXQgdGhlIGxpYmVyYXRpb24gb2Ygd29tZW4sIHRoZXJlIHdvdWxkIGJlIG5vIHJlYWwgZnJlZWRvbSBhbmQgbm8gcHJvZ3Jlc3Mgb2YgdGhlIGNvdW50cnkgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gQWJvdXQgS2FuZHVrdXJpIFZlZXJlc2FsaW5nYW0gOiBLYW5kdWt1cmkgVmVlcmVzYWxpbmdhbSAoMTYgQXByaWwgMTg0OCAtIDI3IE1heSAxOTE5KSB3YXMgYSBzb2NpYWwgcmVmb3JtZXIgYW5kIHdyaXRlciBmcm9tIHRoZSBNYWRyYXMgUHJlc2lkZW5jeSwgQnJpdGlzaCBJbmRpYS4gSGUgaXMgY29uc2lkZXJlZCBhcyB0aGUgZmF0aGVyIG9mIHRoZSBUZWx1Z3UgUmVuYWlzc2FuY2UgbW92ZW1lbnQuIEhlIHdhcyBvbmUgb2YgdGhlIGVhcmx5IHNvY2lhbCByZWZvcm1lcnMgd2hvIGVuY291cmFnZWQgdGhlIGVkdWNhdGlvbiBvZiB3b21lbiBhbmQgdGhlIHJlbWFycmlhZ2Ugb2Ygd2lkb3dzICh3aGljaCB3YXMgbm90IHN1cHBvcnRlZCBieSBzb2NpZXR5IGR1cmluZyBoaXMgdGltZSkuIEhlIGFsc28gZm91Z2h0IGFnYWluc3QgY2hpbGQgbWFycmlhZ2UgYW5kIHRoZSBkb3dyeSBzeXN0ZW0uIEhlIHN0YXJ0ZWQgYSBzY2hvb2wgaW4gRG93bGFpc3dhcmFtIGluIDE4NzQsIGNvbnN0cnVjdGVkIHRoZSAnQnJhaG1vIE1hbmRpcicgaW4gMTg4NyBhbmQgYnVpbHQgdGhlICdIaXRoYWthcmluaSBTY2hvb2wnIGluIDE5MDggaW4gQW5kaHJhIFByYWRlc2guIEhpcyBub3ZlbCBSYWphc2VraGFyYSBDaGFyaXRyYW11IGlzIGNvbnNpZGVyZWQgdG8gYmUgdGhlIGZpcnN0IG5vdmVsIGluIFRlbHVndSBsaXRlcmF0dXJlLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "G. Subramania Iyer",
        "option2" : "Kandukuri Veresalingam Pantulu",
        "option3" : "E.V. Ramasamy Naicker",
        "option4" : "Anandacharlu"
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following statements regarding the William Adam Report on Education:\n\t1. He found that there were over 1 lakh pathshalas in Bengal and Bihar\n\t2. In many cases, the school fee was depended on the income of the parents\n\t3. In many instances, classes were not held during harvest time.Test-3: GS SubjectWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBJbiB0aGUgMTgzMHMsIFdpbGxpYW0gQWRhbSwgYSBTY290dGlzaCBtaXNzaW9uYXJ5LCB0b3VyZWQgdGhlIGRpc3RyaWN0cyBvZiBCZW5nYWwgYW5kIEJpaGFyLiBIZSBoYWQgYmVlbiBhc2tlZCBieSB0aGUgQ29tcGFueSB0byByZXBvcnQgb24gdGhlIHByb2dyZXNzIG9mIGVkdWNhdGlvbiBpbiB2ZXJuYWN1bGFyIHNjaG9vbHMuIFRoZSByZXBvcnQgQWRhbSBwcm9kdWNlZCBpcyBpbnRlcmVzdGluZy4gQWRhbSBmb3VuZCB0aGF0IHRoZXJlIHdlcmUgb3ZlciAxIGxha2ggcGF0aHNoYWxhcyBpbiBCZW5nYWwgYW5kIEJpaGFyLiBUaGVzZSB3ZXJlIHNtYWxsIGluc3RpdHV0aW9ucyB3aXRoIG5vIG1vcmUgdGhhbiAyMCBzdHVkZW50cyBlYWNoLiBCdXQgdGhlIHRvdGFsIG51bWJlciBvZiBjaGlsZHJlbiBiZWluZyB0YXVnaHQgaW4gdGhlc2UgcGF0aHNoYWxhcyB3YXMgY29uc2lkZXJhYmxlIC0gb3ZlciAyMCBsYWtoLiBUaGVzZSBpbnN0aXR1dGlvbnMgd2VyZSBzZXQgdXAgYnkgd2VhbHRoeSBwZW9wbGUsIG9yIHRoZSBsb2NhbCBjb21tdW5pdHkuIEF0IHRpbWVzIHRoZXkgd2VyZSBzdGFydGVkIGJ5IGEgdGVhY2hlciAoZ3VydSkuIFRoZSBzeXN0ZW0gb2YgZWR1Y2F0aW9uIHdhcyBmbGV4aWJsZS4gRmV3IHRoaW5ncyB0aGF0IHlvdSBhc3NvY2lhdGUgd2l0aCBzY2hvb2xzIHRvZGF5IHdlcmUgcHJlc2VudCBpbiB0aGUgcGF0aHNoYWxhcyBhdCB0aGUgdGltZS4gVGhlcmUgd2VyZSBubyBmaXhlZCBmZWUsIG5vIHByaW50ZWQgYm9va3MsIG5vIHNlcGFyYXRlIHNjaG9vbCBidWlsZGluZywgbm8gYmVuY2hlcyBvciBjaGFpcnMsIG5vIGJsYWNrYm9hcmRzLCBubyBzeXN0ZW0gb2Ygc2VwYXJhdGUgY2xhc3Nlcywgbm8gcm9sbGNhbGwgcmVnaXN0ZXJzLCBubyBhbm51YWwgZXhhbWluYXRpb25zLCBhbmQgbm8gcmVndWxhciB0aW1lLXRhYmxlLiBJbiBzb21lIHBsYWNlcyBjbGFzc2VzIHdlcmUgaGVsZCB1bmRlciBhIGJhbnlhbiB0cmVlLCBpbiBvdGhlciBwbGFjZXMgaW4gdGhlIGNvcm5lciBvZiBhIHZpbGxhZ2Ugc2hvcCBvciB0ZW1wbGUsIG9yIGF0IHRoZSBndXJ1J3MgaG9tZS4gRmVlIGRlcGVuZGVkIG9uIHRoZSBpbmNvbWUgb2YgcGFyZW50czogdGhlIHJpY2ggaGFkIHRvIHBheSBtb3JlIHRoYW4gdGhlIHBvb3IuIFRlYWNoaW5nIHdhcyBvcmFsLCBhbmQgdGhlIGd1cnUgZGVjaWRlZCB3aGF0IHRvIHRlYWNoLCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIG5lZWRzIG9mIHRoZSBzdHVkZW50cy4gU3R1ZGVudHMgd2VyZSBub3Qgc2VwYXJhdGVkIG91dCBpbnRvIGRpZmZlcmVudCBjbGFzc2VzOiBhbGwgb2YgdGhlbSBzYXQgdG9nZXRoZXIgaW4gb25lIHBsYWNlLiBUaGUgZ3VydSBpbnRlcmFjdGVkIHNlcGFyYXRlbHkgd2l0aCBncm91cHMgb2YgY2hpbGRyZW4gd2l0aCBkaWZmZXJlbnQgbGV2ZWxzIG9mIGxlYXJuaW5nLiBBZGFtIGRpc2NvdmVyZWQgdGhhdCB0aGlzIGZsZXhpYmxlIHN5c3RlbSB3YXMgc3VpdGVkIHRvIGxvY2FsIG5lZWRzLiBGb3IgaW5zdGFuY2UsIGNsYXNzZXMgd2VyZSBub3QgaGVsZCBkdXJpbmcgaGFydmVzdCB0aW1lIHdoZW4gcnVyYWwgY2hpbGRyZW4gb2Z0ZW4gd29ya2VkIGluIHRoZSBmaWVsZHMuIFRoZSBwYXRoc2hhbGEgc3RhcnRlZCBvbmNlIGFnYWluIHdoZW4gdGhlIGNyb3BzIGhhZCBiZWVuIGN1dCBhbmQgc3RvcmVkLiBUaGlzIG1lYW50IHRoYXQgZXZlbiBjaGlsZHJlbiBvZiBwZWFzYW50IGZhbWlsaWVzIGNvdWxkIHN0dWR5Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following statements:\n\t1. Prarthana samaj encouraged the education of women.\n\t2. The Veda Samaj was established by Dayanand Saraswati.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFByYXJ0aGFuYSBTYW1haiB3YXMgZXN0YWJsaXNoZWQgaW4gMTg2NyBhdCBCb21iYXksIHdoaWNoIHNvdWdodCB0byByZW1vdmUgY2FzdGUgcmVzdHJpY3Rpb25zLCBhYm9saXNoIGNoaWxkIG1hcnJpYWdlLCBlbmNvdXJhZ2UgdGhlIGVkdWNhdGlvbiBvZiB3b21lbiwgYW5kIGVuZCB0aGUgYmFuIG9uIHdpZG93IHJlbWFycmlhZ2UuIEl0cyByZWxpZ2lvdXMgbWVldGluZ3MgZHJldyB1cG9uIEhpbmR1LCBCdWRkaGlzdCBhbmQgQ2hyaXN0aWFuIHRleHRzLiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gRXN0YWJsaXNoZWQgaW4gTWFkcmFzIChDaGVubmFpKSBpbiAxODY0LCB0aGUgVmVkYSBTYW1haiB3YXMgaW5zcGlyZWQgYnkgdGhlIEJyYWhtbyBTYW1hai4gSXQgd29ya2VkIHRvIGFib2xpc2ggY2FzdGUgZGlzdGluY3Rpb25zIGFuZCBwcm9tb3RlIHdpZG93IHJlbWFycmlhZ2UgYW5kIHdvbWVuJ3MgZWR1Y2F0aW9uLiBJdHMgbWVtYmVycyBiZWxpZXZlZCBpbiBvbmUgR29kLiBUaGV5IGNvbmRlbW5lZCB0aGUgc3VwZXJzdGl0aW9ucyBhbmQgcml0dWFscyBvZiBvcnRob2RveCBIaW5kdWlzbS4gVmVkYSBTYW1haiB3YXMgZXN0YWJsaXNoZWQgYnkgS2VzaGFiIENoYW5kcmEgU2VuIGFuZCBLLiBTcmlkaGFyYWx1IE5haWR1IHdoZW4gdGhlIGZvcm1lciB2aXNpdGVkIE1hZHJhcyBpbiAxODY0LiBLLiBTcmlkaGFyYWx1IE5haWR1IGxhdGVyIHZpc2l0ZWQgQ2FsY3V0dGEgdG8gc3R1ZHkgdGhlIEJyYWhtbyBTYW1haiBtb3ZlbWVudCBhbmQgd2hlbiBoZSByZXR1cm5lZCwgaGUgcmVuYW1lZCB0aGUgVmVkYSBTYW1haiBhcyBCcmFobW8gU2FtYWogb2YgU291dGhlcm4gSW5kaWEgaW4gMTg3MS4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 58,
      "question" : "Consider the following statements:\n\t1. Bharat Stree Mahamandal was established by Sarojini Naidu\n\t2. B.M. Malabari founded the Nishkam Karma Math (Social Service Society)Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTm9uZSBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcyBjb3JyZWN0LiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIEJoYXJhdCBTdHJlZSBNYWhhbWFuZGFsIHdhcyBhIHdvbWVuJ3Mgb3JnYW5pc2F0aW9uIGluIEluZGlhIGZvdW5kZWQgYnkgU2FyYWxhIERldmkgQ2hhdWRodXJhbmkgaW4gQWxsYWhhYmFkIGluIDE5MTAuIE9uZSBvZiB0aGUgcHJpbWFyeSBnb2FscyBvZiB0aGUgb3JnYW5pc2F0aW9uIHdhcyB0byBwcm9tb3RlIGZlbWFsZSBlZHVjYXRpb24sIHdoaWNoIGF0IHRoYXQgdGltZSB3YXMgbm90IHdlbGwgZGV2ZWxvcGVkLiBEaG9uZG8gS2VzaGF2IEthcnZlOiBEaG9uZG8gS2VzaGF2IEthcnZlLCBwb3B1bGFybHkga25vd24gYXMgTWFoYXJzaGkgS2FydmUsIHdhcyBhIHNvY2lhbCByZWZvcm1lciBpbiBJbmRpYSBpbiB0aGUgZmllbGQgb2Ygd29tZW4ncyB3ZWxmYXJlLiBIZSBhZHZvY2F0ZWQgd2lkb3cgcmVtYXJyaWFnZSBhbmQgaGUgaGltc2VsZiBtYXJyaWVkIGEgd2lkb3cuIEthcnZlIHdhcyBhIHBpb25lZXIgaW4gcHJvbW90aW5nIHdpZG93cycgZWR1Y2F0aW9uLiBIZSBmb3VuZGVkIHRoZSBmaXJzdCB3b21lbidzIHVuaXZlcnNpdHkgaW4gSW5kaWEgLSBTTkRUIFdvbWVuJ3MgVW5pdmVyc2l0eS4gSW4gMTkwNywgaGUgZm91bmRlZCB0aGUgTWFoaWxhIFZpZHlhbGF5YSAoTWFoaWxhIFZpZHlhbGF5YSkgKFNjaG9vbCBmb3IgV29tZW4pLiAgSGUgZm91bmRlZCB0aGUgTmlzaGthbSBLYXJtYSBNYXRoIChTb2NpYWwgU2VydmljZSBTb2NpZXR5KSBpbiAxOTA4IHRvIHRyYWluIHdvcmtlcnMgZm9yIHRoZSB3aWRvd3MnIGhvbWUgYW5kIE1haGlsYSBWaWR5YWxheWEu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following statements regarding Ishwar Chandra Vidyasagar:\n\t1. He was the author of the book called 'Sanskrit-Vyakaran Upakramonika'.\n\t2. To support women education, he organized a fund called Nari Shiksha Bhandar\n\t3. He supported Drinkwater Bethune to establish the first permanent girls' school in India, theBethune School.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0LiBSZXZlcmVkIGFzIGEgQmVuZ2FsaSBpY29uLCBJc2h3YXIgQ2hhbmRyYSBWaWR5YXNhZ2FyIHdhcyBhIEJlbmdhbGkgU2Fuc2tyaXQgcHVuZGl0LCBlZHVjYXRvciwgc29jaWFsIHJlZm9ybWVyLCB3cml0ZXIgYW5kIHBoaWxhbnRocm9waXN0LiBJc2h3YXIgQ2hhbmRyYSBWaWR5YXNhZ2FyICgxODIwLTE4OTEpIHdhcyBvbmUgb2YgdGhlIHBpbGxhcnMgb2YgdGhlIEJlbmdhbCByZW5haXNzYW5jZSB3aG8gbWFuYWdlZCB0byBjb250aW51ZSB0aGUgc29jaWFsIHJlZm9ybXMgbW92ZW1lbnQgdGhhdCB3YXMgc3RhcnRlZCBieSBSYWphIFJhbW1vaGFuIFJveSBpbiB0aGUgZWFybHkgMTgwMHMuIFdpZG93IFJlbWFycmlhZ2U6IFRoZSBmb2N1cyBvZiBoaXMgc29jaWFsIHJlZm9ybSB3YXMgd29tZW4gLSBhbmQgaGUgc3BlbnQgaGlzIGxpZmUncyBlbmVyZ2llcyB0cnlpbmcgdG8gIFRlc3QtMzogR1MgU3ViamVjdCAgICBlbnN1cmUgYW4gZW5kIHRvIHRoZSBwcmFjdGljZSBvZiBjaGlsZCBtYXJyaWFnZSBhbmQgaW5pdGlhdGUgd2lkb3cgcmVtYXJyaWFnZS4gSGUgZm9sbG93ZWQgaW4gdGhlIGdyZWF0IHJlZm9ybWlzdCB0cmFkaXRpb24gb2YgUmFqYSBSYW0gTW9odW4gUm95ICgxNzcyLTE4MzMpLCBhbmQgYXJndWVkLCBvbiB0aGUgYmFzaXMgb2Ygc2NyaXB0dXJlcyBhbmQgb2xkIGNvbW1lbnRhcmllcywgaW4gZmF2b3VyIG9mIHRoZSByZW1hcnJpYWdlIG9mIHdpZG93cyBpbiB0aGUgc2FtZSB3YXkgYXMgUm95IGRpZCBmb3IgdGhlIGFib2xpdGlvbiBvZiBTYXRpLiBWaWR5YXNhZ2FyIHdyb3RlIHR3byB2b2x1bWVzIG9uIHRoZSBtaXN0cmVhdG1lbnQgb2Ygd2lkb3dzLCB3aGljaCBzZXQgdGhlIHRvbmUgZm9yIG1ham9yIHNvY2lhbCByZWZvcm0gaW4gdGhlIHN0YXRlLiBIaXMgZWFybGllc3QgZWZmb3J0IGF0IHNvY2lhbCByZWZvcm0sIGhvd2V2ZXIsIGNhbWUgaW4gdGhlIHNlY29uZCBoYWxmIG9mIDE4NTAgd2hlbiwgaW4gYSBwYXBlciBvbiB0aGUgZXZpbHMgb2YgY2hpbGQgbWFycmlhZ2UuIEhlIGxhdW5jaGVkIGEgcG93ZXJmdWwgYXR0YWNrIG9uIHRoZSBwcmFjdGljZSBvZiBtYXJyeWluZyBvZmYgZ2lybHMgYWdlZCAxMCBvciBldmVuIHlvdW5nZXIsIHBvaW50aW5nIHRvIHNvY2lhbCwgZXRoaWNhbCwgYW5kIGh5Z2llbmUgaXNzdWVzLCBhbmQgcmVqZWN0aW5nIHRoZSB2YWxpZGl0eSBvZiB0aGUgRGhhcm1hIFNoYXN0cmFzIHRoYXQgYWR2b2NhdGVkIGl0LiBIZSBzaG93ZWQgdGhhdCB0aGVyZSB3YXMgbm8gcHJvaGliaXRpb24gb24gd2lkb3dzIHJlbWFycnlpbmcgaW4gdGhlIGVudGlyZSBib2R5IG9mICdTbXJpdGknIGxpdGVyYXR1cmUgKHRoZSBTdXRyYXMgYW5kIHRoZSBTaGFzdHJhcykuIEVkdWNhdGlvbmFsIFJlZm9ybXM6IFZpZHlhc2FnYXIgaXMgY3JlZGl0ZWQgd2l0aCB0aGUgcm9sZSBvZiB0aG9yb3VnaGx5IHJlbW9kZWxsaW5nIG1lZGlldmFsIHNjaG9sYXN0aWMgc3lzdGVtIHByZXZhaWxpbmcgaW4gU2Fuc2tyaXQgQ29sbGVnZSBhbmQgYnJpbmcgYWJvdXQgbW9kZXJuIGluc2lnaHRzIGludG8gdGhlIGVkdWNhdGlvbiBzeXN0ZW0uIFRoZSBmaXJzdCBjaGFuZ2UgdGhhdCBWaWR5YXNhZ2FyIG1hZGUgd2hlbiBoZSBjYW1lIGJhY2sgdG8gdGhlIFNhbnNrcml0IENvbGxlZ2UgYXMgYSBQcm9mZXNzb3Igd2FzIHRvIGluY2x1ZGUgRW5nbGlzaCBhbmQgQmVuZ2FsaSBhcyB0aGUgbWVkaXVtIG9mIGxlYXJuaW5nLCBiZXNpZGVzIFNhbnNrcml0LiBIZSBpbnRyb2R1Y2VkIGNvdXJzZXMgb2YgRXVyb3BlYW4gSGlzdG9yeSwgUGhpbG9zb3BoeSBhbmQgU2NpZW5jZSBhbG9uZ3NpZGUgVmVkaWMgc2NyaXB0dXJlcy4gSGUgZW5jb3VyYWdlZCBzdHVkZW50cyB0byBwdXJzdWUgdGhlc2Ugc3ViamVjdHMgYW5kIHRha2UgYXdheSB0aGUgYmVzdCBmcm9tIGJvdGggd29ybGRzLiBIZSBhbHNvIGNoYW5nZWQgdGhlIHJ1bGVzIG9mIGFkbWlzc2lvbiBmb3Igc3R1ZGVudHMgaW4gU2Fuc2tyaXQgQ29sbGVnZSBhbGxvd2luZyBub24tIEJyYWhtaW4gc3R1ZGVudHMgdG8gZW5yb2xsIGluIHRoZSBwcmVzdGlnaW91cyBpbnN0aXR1dGlvbi4gSGUgd3JvdGUgdHdvIGJvb2tzICdTYW5za3JpdC1WeWFrYXJhbiBVcGFrcmFtb25pa2EnICBhbmQgJ0J5YWthcmFuIEtvdW11ZGknLCBpbnRlcnByZXRpbmcgY29tcGxleCBub3Rpb25zIG9mIFNhbnNrcml0IGdyYW1tYXIgaW4gZWFzeSBsZWdpYmxlIEJlbmdhbGkgbGFuZ3VhZ2UuIEhlIGludHJvZHVjZWQgdGhlIGNvbmNlcHRzIG9mIEFkbWlzc2lvbiBmZWUgYW5kIHR1aXRpb24gZmVlIGZvciB0aGUgZmlyc3QgdGltZSBpbiBDYWxjdXR0YS4gSGUgc2V0IHVwIHRoZSBOb3JtYWwgU2Nob29sIGZvciB0cmFpbmluZyB0ZWFjaGVycyBlbmFibGluZyB1bmlmb3JtaXR5IGluIHRlYWNoaW5nIG1ldGhvZHMuIFRocm91Z2ggaGlzIGNvbnRhY3RzIGF0IHRoZSBkZXB1dHkgbWFnaXN0cmF0ZSdzIG9mZmljZSBoZSB3b3VsZCBoZWxwIGhpcyBzdHVkZW50cyBnZXQgam9icyBpbiBnb3Zlcm5tZW50IG9mZmljZXMuIENhbXBhaWduIGFnYWluc3QgcG9seWdhbXk6IEFsb25nc2lkZSB0aGUgY2FtcGFpZ24gZm9yIHdpZG93IHJlbWFycmlhZ2UsIGhlIGNhbXBhaWduZWQgYWdhaW5zdCBwb2x5Z2FteS4gSW4gMTg1NywgYSBwZXRpdGlvbiBmb3IgdGhlIHByb2hpYml0aW9uIG9mIHBvbHlnYW15IGFtb25nIEt1bGluIEJyYWhtaW5zIHdhcyBwcmVzZW50ZWQgdG8gdGhlIGdvdmVybm1lbnQgd2l0aCAyNSwwMDAgc2lnbmF0dXJlcywgbGVkIGJ5IHRoZSBNYWhhcmFqYSBvZiBCdXJkd2FuLiBUaGUgbXV0aW55IG9mIHRoZSBzZXBveXMgcmVzdWx0ZWQgaW4gdGhlIHBvc3Rwb25lbWVudCBvZiBhY3Rpb24gb24gdGhpcyBwZXRpdGlvbiwgYnV0IGluIDE4NjYsIFZpZHlhc2FnYXIgaW5zcGlyZWQgYW5vdGhlciBwZXRpdGlvbiwgdGhpcyB0aW1lIHdpdGggMjEsMDAwIHNpZ25hdHVyZXMuIEluIHRoZSAxODcwcywgdGhlIGdyZWF0IHJhdGlvbmFsaXN0LCB3cm90ZSB0d28gYnJpbGxpYW50IGNyaXRpcXVlcyBvZiBwb2x5Z2FteSwgYXJndWluZyB0byB0aGUgZ292ZXJubWVudCB0aGF0IHNpbmNlIHBvbHlnYW15IHdhcyBub3Qgc2FuY3Rpb25lZCBieSB0aGUgc2FjcmVkIHRleHRzLCB0aGVyZSBjb3VsZCBiZSBubyBvYmplY3Rpb24gdG8gc3VwcHJlc3NpbmcgaXQgYnkgbGVnaXNsYXRpb24uIFdvbWVuJ3MgZWR1Y2F0aW9uOiBIZSB3YXMgYSBrZWVuIGFkdm9jYXRlIG9mIGVkdWNhdGlvbiBmb3Igd29tZW4uIEhlIHJpZ2h0bHkgdmlld2VkIGVkdWNhdGlvbiBhcyB0aGUgcHJpbWFyeSB3YXkgZm9yIHdvbWVuIHRvIGVtYW5jaXBhdGUgdGhlbXNlbHZlcyBmcm9tIGFsbCB0aGUgc29jaWFsIG9wcHJlc3Npb24gdGhleSBoYWQgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICB0byBmYWNlIGF0IHRoZSB0aW1lLiBIZSB3ZW50IGRvb3IgdG8gZG9vciwgYXNraW5nIGZhbWlseSBoZWFkcyB0byBhbGxvdyB0aGVpciBkYXVnaHRlcnMgdG8gYmUgZW5yb2xsZWQgaW4gc2Nob29scy4gQWNyb3NzIEJlbmdhbCwgaGUgb3BlbmVkIDM1IHdvbWVuJ3Mgc2Nob29scyBhbmQgc3VjY2VlZGVkIGluIGVucm9sbGluZyAxMzAwIHN0dWRlbnRzLiBUbyBzdXBwb3J0IHdvbWVuIGVkdWNhdGlvbiwgaGUgb3JnYW5pemVkIGEgZnVuZCBjYWxsZWQgTmFyaSBTaGlrc2hhIEJoYW5kYXIuIEhlIHN1cHBvcnRlZCBEcmlua3dhdGVyIEJldGh1bmUgdG8gZXN0YWJsaXNoIHRoZSBmaXJzdCBwZXJtYW5lbnQgZ2lybHMnIHNjaG9vbCBpbiBJbmRpYSwgdGhlIEJldGh1bmUgU2Nob29sLiBWaWR5YXNhZ2FyIHNwZW50IHRoZSBsYXN0IDE4IHllYXJzIG9mIGhpcyBsaWZlIGxpdmluZyBhbW9uZyBTYW50aGFsIHRyaWJhbHMgaW4gcHJlc2VudCBkYXkgSmhhcmtoYW5kLCB3aGVyZSBoZSBzdGFydGVkIHdoYXQgaXMgcG9zc2libHkgSW5kaWEncyBmaXJzdCBzY2hvb2wgZm9yIFNhbnRoYWwgZ2lybHMuIEhlIGV4cHJlc3NlZCBoaXMgaWRlYXMgdGhyb3VnaCByZWd1bGFyIGFydGljbGVzIGhlIHdyb3RlIGZvciBwZXJpb2RpY2FscyBhbmQgbmV3c3BhcGVycy4gSGUgd2FzIGFzc29jaWF0ZWQgd2l0aCBwcmVzdGlnaW91cyBqb3VybmFsaXN0aWMgcHVibGljYXRpb25zIGxpa2UgJ1RhdHR3YWJvZGhpbmkgUGF0cmlrYScsICdTb21wcmFrYXNoJywgJ1NhcmJhc2h1YmhhbmthcmkgUGF0cmlrYScgYW5kICdIaW5kdSBQYXRyaW90Jy4gT3RoZXIgbGl0ZXJhcnkgd29ya3M6IFZpZHlhc2FnYXIncyBCYXJuYSBQYXJpY2hheSAoYW4gaW50cm9kdWN0aW9uIHRvIHRoZSBCZW5nYWxpIGFscGhhYmV0KSBpcyBzdGlsbCB0aGUgZmlyc3QgYm9vayBhIEJlbmdhbGkgY2hpbGQgaXMgaGFuZGVkIG1vcmUgdGhhbiAxNjAgeWVhcnMgYWZ0ZXIgaXQgd2FzIHdyaXR0ZW4uIEhpcyBjb250cmlidXRpb24gdG8gdGhlIGFscGhhYmV0LCB0cmFuc2xhdGlvbiBvZiBzZXZlcmFsIFNhbnNrcml0IGJvb2tzLCBpbmNsdWRpbmcgS2FsaWRhcydzIFNoYW5rdW50YWxhLCBoYXMgaGVscGVkIEJlbmdhbGkgbGl0ZXJhdHVyZS4gSGUgd3JvdGUgdHdvIGJvb2tzIHdoaWNoIGludGVycHJldGVkIGNvbXBsZXggbm90aW9ucyBvZiBTYW5za3JpdCBHcmFtbWFyIGluIEJlbmdhbGkgbGFuZ3VhZ2Ugdml6LiBVcGFrYXJhbW9uaWthIGFuZCBCeWFrYXJhbiBLb3VtdWRpLiBIZSBlc3RhYmxpc2hlZCB0aGUgU2Fuc2tyaXQgUHJlc3Mgd2l0aCBhbiBhaW0gdG8gcHJvZHVjZSBwcmludGVkIGJvb2tzIGF0IGFmZm9yZGFibGUgcHJpY2VzIHNvIHRoYXQgY29tbW9uIHBlb3BsZSBjb3VsZCBidXkgdGhlbSBodHRwczovL3d3dy5pbnNpZ2h0c29uaW5kaWEuY29tLzIwMjAvMDUvMDYvcnN0di1pbi1kZXB0aC1pc2h3YXItY2hhbmRyYS12aWR5YXNhZ2FyLw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 60,
      "question" : "Consider the following statements:\n\t1. Tarabai Shinde set up 'Balhatya Pratibandhak Griha' to prevent female infanticide.\n\t2. Savitribai Phule authored the book called ' Stri Purush Tulana'\n\t3. Ramabai Ranade established Seva Sadan for the rehabilitation of distressed womenTest-3: GS SubjectWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2F2aXRyaWJhaSBQaHVsZSAoMTgzMS0xODk3KSBTaGUgd2FzIHRoZSBjb3VudHJ5J3MgZmlyc3QgZmVtYWxlIHRlYWNoZXIgd2hvIHdlbnQgb24gdG8gZXN0YWJsaXNoIHNldmVyYWwgc2Nob29scyBmb3Igd29tZW4gb2YgYWxsIGNhc3Rlcy4gIFRlc3QtMzogR1MgU3ViamVjdCAgICBBbG9uZyB3aXRoIGhlciBodXNiYW5kIEp5b3RpIFJhbyBQaHVsZSwgU2F2aXRpYmFpIGNhbXBhaWduZWQgdG8gYWJvbGlzaCBjYXN0ZSBhbmQgZ2VuZGVyIGRpc2NyaW1pbmF0aW9uIGFuZCBzZXQgdXAgJ0JhbGhhdHlhIFByYXRpYmFuZGhhayBHcmloYScgdG8gcHJldmVudCBmZW1hbGUgaW5mYW50aWNpZGUuIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFNoZSB3b3JrZWQgd2l0aCBvdGhlciB3b21lbiB0byB1cGxpZnQgdGhlIHZpY3RpbXMgb2YgcmFwZSBhbmQgcHJldmVudCBraWxsaW5ncyBvZiB3aWRvd3MuIFRhcmFiYWkgU2hpbmRlICgxODUwLTE5MTApIEEgZmVtaW5pc3QgYWN0aXZpc3QgYW5kIGFuIGFzc29jaWF0ZSBvZiBTYXZpdHJpYmFpLCBUYXJhYmFpIFNoaW5kZSdzIHRob3VnaHRzIGFuZCBvcGluaW9ucyByZW1haW4gY29udHJvdmVyc2lhbCB0byBkYXRlIGJlY2F1c2Ugb2YgdGhlaXIgcHJvZ3Jlc3NpdmUgYW5kIG5vbi1jb25mb3JtaXN0IG5hdHVyZS4gV2hpbGUgc2hlIHNoYXJlZCB0aGUgc2FtZSB2aWV3cyBvbiBnZW5kZXIgYW5kIGNhc3RlLWJhc2VkIGRpc2NyaW1pbmF0aW9uIGFzIFNhdml0cmliYWkncywgc2hlIGFsc28gYmVsaWV2ZWQgdGhhdCB3b21lbiBhbGwgYXJvdW5kIHRoZSB3b3JsZCBhcmUgc2ltaWxhcmx5IG9wcHJlc3NlZC4gSGVyIGZpcnN0IHB1Ymxpc2hlZCB3b3JrIHdhcyBoZXIgTWFyYXRoaSBib29rIG5hbWVkICdTdHJpIFB1cnVzaCBUdWxhbmEnIChDb21wYXJpc29uIG9mIG1lbiBhbmQgd29tZW4pIHdoaWNoIGlzIGZyZXF1ZW50bHkgY2l0ZWQgYW1vbmcgdGhlIEluZGlhbiBmZW1pbmlzdCBjaXJjdWl0IHRvIGRhdGUgYXMgaXQgaXMgZGVlbWVkIGFzIG9uZSBvZiB0aGUgZmlyc3QgbW9kZXJuIGZlbWluaXNtIHRleHRzIGluIEluZGlhLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBSYW1hYmFpIFJhbmFkZSAoMTg2My0xOTI0KSBTb2NpYWwgcmVmb3JtZXIgUmFtYWJhaSBSYW5hZGUgaXMgY29uc2lkZXJlZCBhIHBpb25lZXIgb2YgdGhlIHdvbWVuYHMgbW92ZW1lbnQgaW4gSW5kaWEuIFNoZSBzdGFydGVkICdIaW5kdSBMYWRpZXMgU29jaWFsIENsdWInIGFsc28gZXN0YWJsaXNoZWQgU2V2YSBTYWRhbiBmb3IgdGhlIHJlaGFiaWxpdGF0aW9uIG9mIGRpc3RyZXNzZWQgd29tZW4uIFRoaXMgcGlvbmVlcmluZyBlZmZvcnQgYWxsb3dlZCB3b21lbiB0byBiZWNvbWUgc2VsZi1yZWxpYW50LiBIZW5jZSwgc3RhdGVtZW50IDMgaXMgY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "3 only",
        "option3" : "1 and 3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements:\n\t1. Kumbalathuparambu Ayyappan gave the famous slogan 'one caste, one religion, one god forhumankind'\n\t2. Jyotirao Phule dedicated his book 'Gulamgiri' to all those Americans who had fought to freeslaves.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2hyaSBOYXJheWFuYSBHdXJ1IEluIHdoYXQgaXMgcHJlc2VudC1kYXkgS2VyYWxhLCBhIGd1cnUgZnJvbSBFemhhdmEgY2FzdGUsIFNocmkgTmFyYXlhbmEgR3VydSwgcHJvY2xhaW1lZCB0aGUgaWRlYWxzIG9mIHVuaXR5IGZvciBoaXMgcGVvcGxlLiBIZSBhcmd1ZWQgYWdhaW5zdCB0cmVhdGluZyBwZW9wbGUgdW5lcXVhbGx5IG9uIHRoZSBiYXNpcyBvZiBjYXN0ZSBkaWZmZXJlbmNlcy4gQWNjb3JkaW5nIHRvIGhpbSwgYWxsIGh1bWFua2luZCBiZWxvbmdlZCB0byB0aGUgc2FtZSBjYXN0ZS4gT25lIG9mIGhpcyBmYW1vdXMgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICBzdGF0ZW1lbnRzIHdhczogJ29ydSBqYXRpLCBvcnUgbWF0YW0sIG9ydSBkYWl2YW0gbWFudXNoeWFudScgKG9uZSBjYXN0ZSwgb25lIHJlbGlnaW9uLCBvbmUgZ29kIGZvciBodW1hbmtpbmQpLiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBLLiBBeXlhcHBhbiBnYXZlIHRoZSBmYW1vdXMgc2xvZ2FuOiAnTm8gQ2FzdGUsIE5vIFJlbGlnaW9uLCBObyBHb2QgZm9yIE1hbmtpbmQnIEp5b3RpcmFvIFBodWxlIE9uZSBvZiB0aGUgbW9zdCB2b2NhbCBhbW9uZ3N0IHRoZSAnbG93LWNhc3RlJyBsZWFkZXJzIHdhcyBKeW90aXJhbyBQaHVsZS4gQm9ybiBpbiAxODI3LCBoZSBzdHVkaWVkIGluIHNjaG9vbHMgc2V0IHVwIGJ5IENocmlzdGlhbiBtaXNzaW9uYXJpZXMuIE9uIGdyb3dpbmcgdXAgaGUgZGV2ZWxvcGVkIGhpcyBvd24gaWRlYXMgYWJvdXQgdGhlIGluanVzdGljZXMgb2YgY2FzdGUgc29jaWV0eS4gVGhlIFNhdHlhc2hvZGhhayBTYW1haiwgYW4gYXNzb2NpYXRpb24gUGh1bGUgZm91bmRlZCwgcHJvcGFnYXRlZCBjYXN0ZSBlcXVhbGl0eS4gSW4gMTg3MywgUGh1bGUgd3JvdGUgYSBib29rIG5hbWVkIEd1bGFtZ2lyaSwgbWVhbmluZyBzbGF2ZXJ5LiBTb21lIHRlbiB5ZWFycyBiZWZvcmUgdGhpcywgdGhlIEFtZXJpY2FuIENpdmlsIFdhciBoYWQgYmVlbiBmb3VnaHQsIGxlYWRpbmcgdG8gdGhlIGVuZCBvZiBzbGF2ZXJ5IGluIEFtZXJpY2EuIFBodWxlIGRlZGljYXRlZCBoaXMgYm9vayB0byBhbGwgdGhvc2UgQW1lcmljYW5zIHdobyBoYWQgZm91Z2h0IHRvIGZyZWUgc2xhdmVzLCB0aHVzIGVzdGFibGlzaGluZyBhIGxpbmsgYmV0d2VlbiB0aGUgY29uZGl0aW9ucyBvZiB0aGUgJ2xvd2VyJyBjYXN0ZXMgaW4gSW5kaWEgYW5kIHRoZSBibGFjayBzbGF2ZXMgaW4gQW1lcmljYS4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 62,
      "question" : "The Satnami movement was founded by:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFNhdG5hbWkgbW92ZW1lbnQgaW4gQ2VudHJhbCBJbmRpYSB3YXMgZm91bmRlZCBieSBHaGFzaWRhcyB3aG8gd29ya2VkIGFtb25nIHRoZSBsZWF0aGVyd29ya2VycyBhbmQgb3JnYW5pc2VkIGEgbW92ZW1lbnQgdG8gaW1wcm92ZSB0aGVpciBzb2NpYWwgc3RhdHVzLiBJbiBlYXN0ZXJuIEJlbmdhbCwgSGFyaWRhcyBUaGFrdXIncyBNYXR1YSBzZWN0IHdvcmtlZCBhbW9uZyBDaGFuZGFsYSBjdWx0aXZhdG9ycy4gSGFyaWRhcyBxdWVzdGlvbmVkIEJyYWhtYW5pY2FsIHRleHRzIHRoYXQgc3VwcG9ydGVkIHRoZSBjYXN0ZSBzeXN0ZW0u",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ghasidas",
        "option2" : "Ravidas",
        "option3" : "Narayan Deo",
        "option4" : "Bhawani Pathak"
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statements regarding Balshastri Jambhekar:\n\t1. He founded the Bombay Native General Library\n\t2. He started Digdarshan which published articles on scientific subjects as well as historyWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gQmFsc2hhc3RyaSBKYW1iaGVrYXI6IEJhbHNoYXN0cmkgSmFtYmhla2FyICgxODEyLTE4NDYpIHdhcyBhIHBpb25lZXIgb2Ygc29jaWFsIHJlZm9ybSB0aHJvdWdoIGpvdXJuYWxpc20gaW4gQm9tYmF5OyBoZSBhdHRhY2tlZCBCcmFobWluaWNhbCBvcnRob2RveHkgYW5kIHRyaWVkIHRvIHJlZm9ybSBwb3B1bGFyIEhpbmR1aXNtLiBIZSBzdGFydGVkIHRoZSBuZXdzcGFwZXIgRGFycGFuIGluIDE4MzIuIEtub3duIGFzIHRoZSBmYXRoZXIgb2YgTWFyYXRoaSBqb3VybmFsaXNtLCBKYW1iaGVrYXIgdXNlZCB0aGUgRGFycGFuIHRvIGF3YWtlbiB0aGUgcGVvcGxlIHRvIGF3YXJlbmVzcyBvZiBzb2NpYWwgcmVmb3Jtcywgc3VjaCBhcyB3aWRvdyByZW1hcnJpYWdlLCBhbmQgdG8gaW5zdGlsbCBpbiB0aGUgbWFzc2VzIGEgc2NpZW50aWZpYyBhcHByb2FjaCB0byBsaWZlLiBJbiAxODQwLCBoZSBzdGFydGVkIERpZ2RhcnNoYW4gd2hpY2ggcHVibGlzaGVkIGFydGljbGVzIG9uIHNjaWVudGlmaWMgc3ViamVjdHMgYXMgd2VsbCBhcyBoaXN0b3J5LiBKYW1iaGVrYXIgZm91bmRlZCB0aGUgQm9tYmF5IE5hdGl2ZSBHZW5lcmFsIExpYnJhcnkgYW5kIHN0YXJ0ZWQgdGhlIE5hdGl2ZSBJbXByb3ZlbWVudCBTb2NpZXR5IG9mIHdoaWNoIGFuIG9mZnNob290IHdhcyB0aGUgU3R1ZGVudHMgTGl0ZXJhcnkgYW5kIFNjaWVudGlmaWMgTGlicmFyeS4gSGUgd2FzIHRoZSBmaXJzdCBwcm9mZXNzb3Igb2YgSGluZGkgYXQgdGhlIEVscGhpbnN0b24gQ29sbGVnZSwgYmVzaWRlcyBiZWluZyBhIGRpcmVjdG9yIG9mIHRoZSBDb2xhYmEgT2JzZXJ2YXRvcnku",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements regarding the Indian Councils Act, 1892\n\t1. The members of the legislatures were now entitled to express their views upon financialstatements.\n\t2. The universities, district boards, municipalities, zamindars, trade bodies and chambers ofcommerce were empowered to recommend members to the provincial councilsWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gSW5kaWFuIENvdW5jaWxzIEFjdCwgMTg5MiDil48gSW4gMTg4NSwgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgZm91bmRlZC4gVGhlIENvbmdyZXNzIHNhdyByZWZvcm0gb2YgdGhlIGNvdW5jaWxzICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgYXMgdGhlICdyb290IG9mIGFsbCBvdGhlciByZWZvcm1zJy4gSXQgd2FzIGluIHJlc3BvbnNlIHRvIHRoZSBDb25ncmVzcyBkZW1hbmQgdGhhdCB0aGUgbGVnaXNsYXRpdmUgY291bmNpbHMgYmUgZXhwYW5kZWQgdGhhdCB0aGUgbnVtYmVyIG9mIG5vbi1vZmZpY2lhbCBtZW1iZXJzIHdhcyBpbmNyZWFzZWQgYm90aCBpbiB0aGUgY2VudHJhbCAoSW1wZXJpYWwpIGFuZCBwcm92aW5jaWFsIGxlZ2lzbGF0aXZlIGNvdW5jaWxzIGJ5IHRoZSBJbmRpYW4gQ291bmNpbHMgQWN0LCAxODkyLiDil48gVGhlIExlZ2lzbGF0aXZlIENvdW5jaWwgb2YgdGhlIEdvdmVybm9yLUdlbmVyYWwgKG9yIHRoZSBJbmRpYW4gTGVnaXNsYXRpdmUgQ291bmNpbCwgYXMgaXQgY2FtZSB0byBiZSBrbm93bikgd2FzIGVubGFyZ2VkLiDil48gVGhlIHVuaXZlcnNpdGllcywgZGlzdHJpY3QgYm9hcmRzLCBtdW5pY2lwYWxpdGllcywgemFtaW5kYXJzLCB0cmFkZSBib2RpZXMgYW5kIGNoYW1iZXJzIG9mIGNvbW1lcmNlIHdlcmUgZW1wb3dlcmVkIHRvIHJlY29tbWVuZCBtZW1iZXJzIHRvIHRoZSBwcm92aW5jaWFsIGNvdW5jaWxzLiBUaHVzIHdhcyBpbnRyb2R1Y2VkIHRoZSBwcmluY2lwbGUgb2YgcmVwcmVzZW50YXRpb24uIOKXjyBUaG91Z2ggdGhlIHRlcm0gJ2VsZWN0aW9uJyB3YXMgZmlybWx5IGF2b2lkZWQgaW4gdGhlIEFjdCwgYW4gZWxlbWVudCBvZiBpbmRpcmVjdCBlbGVjdGlvbiB3YXMgYWNjZXB0ZWQgaW4gdGhlIHNlbGVjdGlvbiBvZiBzb21lIG9mIHRoZSBub24tb2ZmaWNpYWwgbWVtYmVycy4g4pePIFRoZSBtZW1iZXJzIG9mIHRoZSBsZWdpc2xhdHVyZXMgd2VyZSBub3cgZW50aXRsZWQgdG8gZXhwcmVzcyB0aGVpciB2aWV3cyB1cG9uIGZpbmFuY2lhbCBzdGF0ZW1lbnRzIHdoaWNoIHdlcmUgaGVuY2Vmb3J0aCB0byBiZSBtYWRlIG9uIHRoZSBmbG9vciBvZiB0aGUgbGVnaXNsYXR1cmVzLiDil48gVGhleSBjb3VsZCBhbHNvIHB1dCBxdWVzdGlvbnMgd2l0aGluIGNlcnRhaW4gbGltaXRzIHRvIHRoZSBleGVjdXRpdmUgb24gbWF0dGVycyBvZiBwdWJsaWMgaW50ZXJlc3QgYWZ0ZXIgZ2l2aW5nIHNpeCBkYXlzJyBub3RpY2Uu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     Test-3: GS Subject  ",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following statements regarding Pandita Ramabai:\n\t1. She started the Sharada Sadan (shelter for the homeless) for the destitute widows\n\t2. She started the Arya Mahila SamajWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gUGFuZGl0YSBSYW1hYmFpOiBQYW5kaXRhIFJhbWFiYWkgd2FzIGZvcmVtb3N0IGFtb25nIHRoZSBJbmRpYW4gbGVhZGVycyB3aG8gd29ya2VkIGZvciB0aGUgZW1hbmNpcGF0aW9uIG9mIHdvbWVuLiBTaGUgY2FtZSBmcm9tIGEgbGVhcm5lZCBmYW1pbHkgYW5kIHdhcyBhIGdyZWF0IHNjaG9sYXIgb2YgU2Fuc2tyaXQgYW5kIGFkZHJlc3NlZCBtYW55IGxlYXJuZWQgZ3JvdXBzIGluIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgY291bnRyeS4gU2hlIHdhcyBnaXZlbiB0aGUgdGl0bGUgb2YgJ1BhbmRpdGEnIGFuZCAnU2FyYXN3YXRpJyBmb3IgaGVyIGRlZXAga25vd2xlZGdlIG9mIFNhbnNrcml0LiBJbiAxODgwIHNoZSBtYXJyaWVkIGEgQmVuZ2FsaSBiZWxvbmdpbmcgdG8gYSBmYW1pbHkgb2YgbG93ZXIgc29jaWFsIHN0YXR1cy4gVGh1cywgZXZlbiBhdCB0aGF0IHRpbWUgc2hlIHdhcyBib2xkIGVub3VnaCB0byBtYXJyeSBhIG1hbiBvZiBhIGRpZmZlcmVudCBjYXN0ZSBhbmQgZGlmZmVyZW50ICBUZXN0LTM6IEdTIFN1YmplY3QgICAgbGFuZ3VhZ2UuIEFmdGVyIHRoZSBkZWF0aCBvZiBoZXIgaHVzYmFuZCB0d28geWVhcnMgbGF0ZXIgc2hlIHJldHVybmVkIHRvIFBvb25hIGFuZCBzdGFydGVkIHRoZSBBcnlhIE1haGlsYSBTYW1haiB3aXRoIHRoZSBoZWxwIG9mIGxlYWRlcnMgbGlrZSBSYW5hZGUgYW5kIEJoYW5kYXJrYXIuIFJhbWFiYWkgc3RhcnRlZCB0aGUgU2hhcmFkYSBTYWRhbiAoc2hlbHRlciBmb3IgaG9tZWxlc3MpIGZvciB0aGUgZGVzdGl0dXRlIHdpZG93cyB3aXRoIHRoZSBoZWxwIG9mIFJhbmFkZSBhbmQgQmhhbmRhcmthci4gQnV0IHNvb24gc2hlIHdhcyBhY2N1c2VkIG9mIGNvbnZlcnRpbmcgSGluZHUgd29tZW4gdG8gQ2hyaXN0aWFuaXR5IGFuZCBoZW5jZSBoYWQgdG8gc2hpZnQgaGVyIGFjdGl2aXRpZXMgdG8gS2hlZGdvYW4gbmVhciBQb29uYS4gU2hlIGVzdGFibGlzaGVkIGEgTXVrdGkgU2FkYW4gKGZyZWVkb20gaG91c2UpIHRoZXJlLiBTb29uIHRoZXJlIHdlcmUgMjAwMCBjaGlsZHJlbiBhbmQgd29tZW4gaW4gdGhlIGhvdXNlLiBWb2NhdGlvbmFsIHRyYWluaW5nIHdhcyBnaXZlbiBtYWtlIHRoZW0gc2VsZi1yZWxpYW50Lg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements regarding the Indian Councils Act, 1861\n\t1. It provided for portfolio system\n\t2. It took away the legislative powers to the provinces of Madras and BombayWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWFuIENvdW5jaWxzIEFjdCwgMTg2MSDil48gVGhlIDE4NjEgQWN0IG1hcmtlZCBhbiBhZHZhbmNlIGluIHRoYXQgdGhlIHByaW5jaXBsZSBvZiByZXByZXNlbnRhdGl2ZXMgb2Ygbm9uLW9mZmljaWFscyBpbiBsZWdpc2xhdGl2ZSBib2RpZXMgYmVjYW1lIGFjY2VwdGVkOyBsYXdzIHdlcmUgdG8gYmUgbWFkZSBhZnRlciBkdWUgZGVsaWJlcmF0aW9uLCBhbmQgYXMgcGllY2VzIG9mIGxlZ2lzbGF0aW9uIHRoZXkgY291bGQgYmUgY2hhbmdlZCBvbmx5IGJ5IHRoZSBzYW1lIGRlbGliZXJhdGl2ZSBwcm9jZXNzLiBMYXctbWFraW5nIHdhcyB0aHVzIG5vIGxvbmdlciBzZWVuIGFzIHRoZSBleGNsdXNpdmUgYnVzaW5lc3Mgb2YgdGhlIGV4ZWN1dGl2ZS4g4pePIFRoZSBwb3J0Zm9saW8gc3lzdGVtIGludHJvZHVjZWQgYnkgTG9yZCBDYW5uaW5nIGxhaWQgdGhlIGZvdW5kYXRpb25zIG9mIGNhYmluZXQgZ292ZXJubWVudCBpbiBJbmRpYSwgZWFjaCBicmFuY2ggb2YgdGhlIGFkbWluaXN0cmF0aW9uIGhhdmluZyBpdHMgb2ZmaWNpYWwgaGVhZCBhbmQgc3Bva2VzbWFuIGluIHRoZSBnb3Zlcm5tZW50LCB3aG8gd2FzIHJlc3BvbnNpYmxlIGZvciBpdHMgYWRtaW5pc3RyYXRpb24uIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiDil48gVGhlIEFjdCwgcmV0dXJuZWQgdGhlIGxlZ2lzbGF0aXZlIHBvd2VycyB0byBwcm92aW5jZXMgb2YgTWFkcmFzIGFuZCBCb21iYXkgd2hpY2ggaGFkIGJlZW4gdGFrZW4gYXdheSBpbiAxODMzLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBIb3dldmVyLCB0aGUgbGVnaXNsYXRpdmUgY291bmNpbHMgZXN0YWJsaXNoZWQgYnkgdGhlIEFjdCBvZiAxODYxIHBvc3Nlc3NlZCBubyByZWFsIHBvd2VycyBhbmQgaGFkIG1hbnkgd2Vha25lc3Nlcy4gVGhlIGNvdW5jaWxzIGNvdWxkIG5vdCBkaXNjdXNzIGltcG9ydGFudCBtYXR0ZXJzIGFuZCBubyBmaW5hbmNpYWwgbWF0dGVycyBhdCBhbGwgd2l0aG91dCBwcmV2aW91cyBhcHByb3ZhbCBvZiBnb3Zlcm5tZW50LiBUaGV5IGhhZCBubyBjb250cm9sIG92ZXIgYnVkZ2V0LiBUaGV5IGNvdWxkIG5vdCAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGRpc2N1c3MgZXhlY3V0aXZlIGFjdGlvbi4gRmluYWwgcGFzc2luZyBvZiB0aGUgYmlsbCBuZWVkZWQgdmljZXJveSdzIGFwcHJvdmFsLiBFdmVuIGlmIGFwcHJvdmVkIGJ5IHRoZSB2aWNlcm95LCB0aGUgc2VjcmV0YXJ5IG9mIHN0YXRlIGNvdWxkIGRpc2FsbG93IGEgbGVnaXNsYXRpb24uIEluZGlhbnMgYXNzb2NpYXRlZCBhcyBub24tb2ZmaWNpYWxzIHdlcmUgbWVtYmVycyBvZiBlbGl0ZSBzZWN0aW9ucyBvbmx5Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 67,
      "question" : "Which of the following was/were the provisions of the Indian Factory Act, 1881\n\t1. It prohibited employment of children under ten years.\n\t2. It provided weekly holiday for all.Select the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTm9uZSBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcyBjb3JyZWN0LiBUaGUgSW5kaWFuIEZhY3RvcnkgQWN0LCAxODgxIGRlYWx0IHByaW1hcmlseSB3aXRoIHRoZSBwcm9ibGVtIG9mIGNoaWxkIGxhYm91ciAoYmV0d2VlbiA3IGFuZCAxMiB5ZWFycyBvZiBhZ2UpLiBJdHMgc2lnbmlmaWNhbnQgcHJvdmlzaW9ucyB3ZXJlOiDil48gZW1wbG95bWVudCBvZiBjaGlsZHJlbiB1bmRlciA3IHllYXJzIG9mIGFnZSBwcm9oaWJpdGVkLCDil48gd29ya2luZyBob3VycyByZXN0cmljdGVkIHRvIDkgaG91cnMgcGVyIGRheSBmb3IgY2hpbGRyZW4sIOKXjyBjaGlsZHJlbiB0byBnZXQgZm91ciBob2xpZGF5cyBpbiBhIG1vbnRoLCDil48gaGF6YXJkb3VzIG1hY2hpbmVyeSB0byBiZSBwcm9wZXJseSBmZW5jZWQgb2ZmLiBUaGUgSW5kaWFuIEZhY3RvcnkgQWN0LCAxODkxIOKXjyBpbmNyZWFzZWQgdGhlIG1pbmltdW0gYWdlIChmcm9tIDcgdG8gOSB5ZWFycykgYW5kIHRoZSBtYXhpbXVtIChmcm9tIDEyIHRvIDE0IHllYXJzKSBmb3IgY2hpbGRyZW4sIOKXjyByZWR1Y2VkIG1heGltdW0gd29ya2luZyBob3VycyBmb3IgY2hpbGRyZW4gdG8gNyBob3VycyBhIGRheSwg4pePIGZpeGVkIG1heGltdW0gd29ya2luZyBob3VycyBmb3Igd29tZW4gYXQgMTEgaG91cnMgcGVyIGRheSB3aXRoIGFuIG9uZS1hbmQtYS0gaGFsZiBob3VyIGludGVydmFsICh3b3JraW5nIGhvdXJzIGZvciBtZW4gd2VyZSBsZWZ0IHVucmVndWxhdGVkKSwg4pePIHByb3ZpZGVkIHdlZWtseSBob2xpZGF5IGZvciBhbGwuICBUZXN0LTM6IEdTIFN1YmplY3QgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 69,
      "question" : "Who among the following freedom fighters was arrested for writing about theSaligram idol case?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3VyZW5kcmFuYXRoIEJhbmVyamVhLCBvbmUgb2YgdGhlIGZvdW5kaW5nIGZhdGhlcnMgb2YgdGhlIEluZGlhbiBuYXRpb25hbCBtb3ZlbWVudCwgd2FzIHRoZSBmaXJzdCBJbmRpYW4gdG8gZ28gdG8gamFpbCBpbiBwZXJmb3JtYW5jZSBvZiBoaXMgZHV0eSBhcyBhIGpvdXJuYWxpc3QuIEEgZGlzcHV0ZSBjb25jZXJuaW5nIGEgZmFtaWx5IGlkb2wsIGEgc2FsaWdyYW0sIGhhZCBjb21lIHVwIGJlZm9yZSBKdXN0aWNlIE5vcnJpcyBvZiB0aGUgQ2FsY3V0dGEgSGlnaCBDb3VydC4gVG8gZGVjaWRlIHRoZSBhZ2Ugb2YgdGhlIGlkb2wsIE5vcnJpcyBvcmRlcmVkIGl0IHRvIGJlIGJyb3VnaHQgdG8gdGhlIENvdXJ0IGFuZCBwcm9ub3VuY2VkIHRoYXQgaXQgY291bGQgbm90IGJlIGEgaHVuZHJlZCB5ZWFycyBvbGQuIFRoaXMgYWN0aW9uIGRlZXBseSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGh1cnQgdGhlIHNlbnRpbWVudHMgb2YgdGhlIEJlbmdhbGkgSGluZHVzLiBCYW5lcmplYSB3cm90ZSBhbiBhbmdyeSBlZGl0b3JpYWwgaW4gdGhlIEJlbmdhbGVlIG9mIDIgQXByaWwgMTg4My4gQ29tcGFyaW5nIE5vcnJpcyB3aXRoIHRoZSBub3RvcmlvdXMgSmVmZnJleXMgYW5kIFNlcm9nZ3MgKEJyaXRpc2gganVkZ2VzIGluIHRoZSAxN3RoIGNlbnR1cnksIG5vdG9yaW91cyBmb3IgaW5mYW1vdXMgY29uZHVjdCBhcyBqdWRnZXMpLCBoZSBzYWlkIHRoYXQgTm9ycmlzIGhhZCBkb25lIGVub3VnaCAndG8gc2hvdyBob3cgdW53b3J0aHkgaGUgaXMgb2YgaGlzIGhpZ2ggb2ZmaWNlLicgSW1tZWRpYXRlbHksIHRoZSBIaWdoIENvdXJ0IGhhdWxlZCBoaW0gdXAgZm9yIGNvbnRlbXB0IG9mIGNvdXJ0IGJlZm9yZSBhIGJlbmNoIG9mIGZpdmUganVkZ2VzLCBmb3VyIG9mIHRoZW0gRXVyb3BlYW5zLiBXaXRoIHRoZSBJbmRpYW4ganVkZ2UsIFJvbWVzaCBDaGFuZHJhIE1pdHJhLCBkaXNzZW50aW5nLCB0aGUgYmVuY2ggY29udmljdGVkIGFuZCBzZW50ZW5jZWQgaGltIHRvIHR3byBtb250aHMgaW1wcmlzb25tZW50Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Mahatma Gandhi",
        "option2" : "M.G. Ranade",
        "option3" : "Bal Gangadhar Tilak",
        "option4" : "Surendranth Banerjea."
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements\n\t1. China shares border with Afghanistan\n\t2. Thailand shares border with Malaysia\n\t3. Russia shares border with North KoreaWhich of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements regarding MGNREGA\n\t1. Gram Sabha and the Gram Panchayat which approves the shelf of works under MGNREGA.\n\t2. It provides both skilled and unskilled labour.\n\t3. It provides employment in rural areas only.\n\t4. Both citizen and non-citizen of India can apply for the job under this schemeWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWJvdXQgTUdOUkVHQTogVGhlIHNjaGVtZSB3YXMgaW50cm9kdWNlZCBhcyBhIHNvY2lhbCBtZWFzdXJlIHRoYXQgZ3VhcmFudGVlcyAndGhlIHJpZ2h0IHRvIHdvcmsnLiBUaGUga2V5IHRlbmV0IG9mIHRoaXMgc29jaWFsIG1lYXN1cmUgYW5kIGxhYm91ciBsYXcgaXMgdGhhdCB0aGUgbG9jYWwgZ292ZXJubWVudCB3aWxsIGhhdmUgdG8gbGVnYWxseSBwcm92aWRlIGF0IGxlYXN0IDEwMCBkYXlzIG9mIHdhZ2UgZW1wbG95bWVudCBpbiBydXJhbCBJbmRpYSB0byBlbmhhbmNlIHRoZWlyIHF1YWxpdHkgb2YgbGlmZS4gS2V5IG9iamVjdGl2ZXM6IEdlbmVyYXRpb24gb2YgcGFpZCBydXJhbCBlbXBsb3ltZW50IG9mIG5vdCBsZXNzIHRoYW4gMTAwIGRheXMgZm9yIGVhY2ggd29ya2VyIHdobzEuIHZvbHVudGVlcnMgZm9yIHVuc2tpbGxlZCBsYWJvdXIuIFByb2FjdGl2ZWx5IGVuc3VyaW5nIHNvY2lhbCBpbmNsdXNpb24gYnkgc3RyZW5ndGhlbmluZyBsaXZlbGlob29kIGJhc2Ugb2YgcnVyYWwgcG9vci4yLiBDcmVhdGlvbiBvZiBkdXJhYmxlIGFzc2V0cyBpbiBydXJhbCBhcmVhcyBzdWNoIGFzIHdlbGxzLCBwb25kcywgcm9hZHMgYW5kIGNhbmFscy4zLiBSZWR1Y2UgdXJiYW4gbWlncmF0aW9uIGZyb20gcnVyYWwgYXJlYXMuNC4gQ3JlYXRlIHJ1cmFsIGluZnJhc3RydWN0dXJlIGJ5IHVzaW5nIHVudGFwcGVkIHJ1cmFsIGxhYm91ci41LiBUaGUgZm9sbG93aW5nIGFyZSB0aGUgZWxpZ2liaWxpdHkgY3JpdGVyaWEgZm9yIHJlY2VpdmluZyB0aGUgYmVuZWZpdHMgdW5kZXIgTUdOUkVHQSBzY2hlbWU6IE11c3QgYmUgQ2l0aXplbiBvZiBJbmRpYSB0byBzZWVrIE5SRUdBIGJlbmVmaXRzLiBIZW5jZSwgc3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LjEuIEpvYiBzZWVrZXIgaGFzIGNvbXBsZXRlZCAxOCB5ZWFycyBvZiBhZ2UgYXQgdGhlIHRpbWUgb2YgYXBwbGljYXRpb24uMi4gVGhlIGFwcGxpY2FudCBtdXN0IGJlIHBhcnQgb2YgYSBsb2NhbCBob3VzZWhvbGQgKGkuZS4sIGFwcGxpY2F0aW9uIG11c3QgYmUgbWFkZSB3aXRoMS4gbG9jYWwgR3JhbSBQYW5jaGF5YXQpLiBBcHBsaWNhbnQgbXVzdCB2b2x1bnRlZXIgZm9yIHVuc2tpbGxlZCBsYWJvdXIuIEhlbmNlIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4yLiBLZXkgZmFjdHMgcmVsYXRlZCB0byB0aGUgc2NoZW1lOiBUaGUgTWluaXN0cnkgb2YgUnVyYWwgRGV2ZWxvcG1lbnQgKE1SRCksIEdvdnQgb2YgSW5kaWEgaXMgbW9uaXRvcmluZyB0aGUgZW50aXJlMS4gaW1wbGVtZW50YXRpb24gb2YgdGhpcyBzY2hlbWUgaW4gYXNzb2NpYXRpb24gd2l0aCBzdGF0ZSBnb3Zlcm5tZW50cy4gSW5kaXZpZHVhbCBiZW5lZmljaWFyeS1vcmllbnRlZCB3b3JrcyBjYW4gYmUgdGFrZW4gdXAgb24gdGhlIGNhcmRzIG9mIFNjaGVkdWxlZDIuIENhc3RlcyBhbmQgU2NoZWR1bGVkIFRyaWJlcywgc21hbGwgb3IgbWFyZ2luYWwgZmFybWVycyBvciBiZW5lZmljaWFyaWVzIG9mIGxhbmQgcmVmb3JtcyBvciAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGJlbmVmaWNpYXJpZXMgdW5kZXIgdGhlIEluZGlyYSBBd2FhcyBZb2phbmEgb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEuIFdpdGhpbiAxNSBkYXlzIG9mIHN1Ym1pdHRpbmcgdGhlIGFwcGxpY2F0aW9uIG9yIGZyb20gdGhlIGRheSB3b3JrIGlzIGRlbWFuZGVkLCB3YWdlMy4gZW1wbG95bWVudCB3aWxsIGJlIHByb3ZpZGVkIHRvIHRoZSBhcHBsaWNhbnQuIFJpZ2h0IHRvIGdldCB1bmVtcGxveW1lbnQgYWxsb3dhbmNlIGluIGNhc2UgZW1wbG95bWVudCBpcyBub3QgcHJvdmlkZWQgd2l0aGluNC4gZmlmdGVlbiBkYXlzIG9mIHN1Ym1pdHRpbmcgdGhlIGFwcGxpY2F0aW9uIG9yIGZyb20gdGhlIGRhdGUgd2hlbiB3b3JrIGlzIHNvdWdodC4gU29jaWFsIEF1ZGl0IG9mIE1HTlJFR0Egd29ya3MgaXMgbWFuZGF0b3J5LCB3aGljaCBsZW5kcyB0byBhY2NvdW50YWJpbGl0eSBhbmQ1LiB0cmFuc3BhcmVuY3kuIFRoZSBHcmFtIFNhYmhhIGlzIHRoZSBwcmluY2lwYWwgZm9ydW0gZm9yIHdhZ2Ugc2Vla2VycyB0byByYWlzZSB0aGVpciB2b2ljZXMgYW5kIG1ha2U2LiBkZW1hbmRzLiBJdCBpcyB0aGUgR3JhbSBTYWJoYSBhbmQgdGhlIEdyYW0gUGFuY2hheWF0IHdoaWNoIGFwcHJvdmVzIHRoZSBzaGVsZiBvZiB3b3JrcyB1bmRlcjcuIE1HTlJFR0EgYW5kIGZpeCB0aGVpciBwcmlvcml0eS4gaHR0cHM6Ly93d3cuaW5zaWdodHNvbmluZGlhLmNvbS8yMDIyLzAzLzE4L21haGF0bWEtZ2FuZGhpLW5hdGlvbmFsLXJ1cmFsLWVtcGxveW1lbnQtZ3VhcmEgbnRlZS1hY3QtbWducmVnYS0zLyBodHRwOi8vd3d3LmFydGhhcGVkaWEuaW4vaW5kZXgucGhwL01haGF0bWFfR2FuZGhpX05hdGlvbmFsX1J1cmFsX0VtcGxveW1lbnRfR3VhcmFudGVlXyBBY3RfKE1HTlJFR0EpX29mXzIwMDU=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "1, 2 and 3 only",
        "option3" : "2, 3 and 4 only     Test-3: GS Subject  ",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 73,
      "question" : "Consider the following statements regarding Global Depository receipt/ Depositoryreceipt (DRs)\n\t1. In India any company - whether private limited or public limited or listed or unlisted - can issueDRs.\n\t2. ADR /GDR issues based on shares of a company are considered as part of Foreign DirectInvestment (FDI) in India.\n\t3. Listed DRs enjoy some tax benefits in India.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBhYm92ZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiBBcyBwZXIgdGhlIENvbXBhbmllcyBBY3QsIDIwMTMgIkdsb2JhbCBEZXBvc2l0b3J5IHJlY2VpcHQiIG1lYW5zIGFueSBpbnN0cnVtZW50IGluIHRoZSBmb3JtIG9mIGEgZGVwb3NpdG9yeSByZWNlaXB0IGNyZWF0ZWQgYnkgYSBmb3JlaWduIGRlcG9zaXRvcnkgb3V0c2lkZSBJbmRpYSBhbmQgYXV0aG9yaXNlZCBieSBhIGNvbXBhbnkgbWFraW5nIGFuIGlzc3VlIG9mIHN1Y2ggZGVwb3NpdG9yeSByZWNlaXB0cyB3aGlsZSB0aGUgIkluZGlhbiBEZXBvc2l0b3J5IFJlY2VpcHQnIG1lYW5zIGFueSBpbnN0cnVtZW50IGluIHRoZSBmb3JtIG9mIGEgZGVwb3NpdG9yeSByZWNlaXB0IGNyZWF0ZWQgYnkgYSBkb21lc3RpYyBkZXBvc2l0b3J5IGluIEluZGlhIGFuZCBhdXRob3Jpc2VkIGJ5IGEgY29tcGFueSBpbmNvcnBvcmF0ZWQgb3V0c2lkZSBJbmRpYTsgIFRlc3QtMzogR1MgU3ViamVjdCAgICBJbiBJbmRpYSBhbnkgY29tcGFueSAtIHdoZXRoZXIgcHJpdmF0ZSBsaW1pdGVkIG9yIHB1YmxpYyBsaW1pdGVkIG9yIGxpc3RlZCBvciB1bmxpc3RlZCAtIGNhbiBpc3N1ZSBEUnMuIEhvd2V2ZXIgbGlzdGVkIERScyBlbmpveSBzb21lIHRheCBiZW5lZml0cy4gQURSIC9HRFIgaXNzdWVzIGJhc2VkIG9uIHNoYXJlcyBvZiBhIGNvbXBhbnkgYXJlIGNvbnNpZGVyZWQgYXMgcGFydCBvZiBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50IChGREkpIGluIEluZGlhLCB0aG91Z2ggaXQgaXMgYW4gaW5kaXJlY3Qgd2F5IG9mIGhvbGRpbmcgc2hhcmVzLiBBcyBwZXIgYSBDYWJpbmV0IGRlY2lzaW9uIGRhdGVkIDE2IEp1bHkgMjAxNSwgRFJzIGhhdmluZyB1bmRlcmx5aW5nIG9mIGluc3RydW1lbnRzIHdoaWNoIGNhbiBiZSBpc3N1ZWQgdW5kZXIgU2NoZWR1bGUgNSBvZiBGRU1BIFJlZ3VsYXRpb25zLCBiZWluZyBpbiB0aGUgbmF0dXJlIG9mIGRlYnQsIHdpbGwgbm90IGJlIHRyZWF0ZWQgYXMgZm9yZWlnbiBpbnZlc3RtZW50LiBIb3dldmVyLCBhbnkgZXF1aXR5IGhvbGRpbmcgYnkgYSBwZXJzb24gcmVzaWRlbnQgb3V0c2lkZSBJbmRpYSByZXN1bHRpbmcgZnJvbSBjb252ZXJzaW9uIG9mIGFueSBkZWJ0IGluc3RydW1lbnQgdW5kZXIgYW55IGFycmFuZ2VtZW50IHdpbGwgYmUgcmVja29uZWQgYXMgZm9yZWlnbiBpbnZlc3RtZW50LiBodHRwczovL2FydGhhcGVkaWEuaW4vaW5kZXgucGhwL0RlcG9zaXRvcnlfUmVjZWlwdHM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 74,
      "question" : "Snake Island, sometime seen in the news, is located in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU25ha2UgSXNsYW5kLCBhbHNvIGtub3duIGFzIFNlcnBlbnQgSXNsYW5kIG9yIFptaWlueWkgSXNsYW5kLCBpcyBhbiBpc2xhbmQgYmVsb25naW5nIHRvIFVrcmFpbmUgbG9jYXRlZCBpbiB0aGUgQmxhY2sgU2VhLCBuZWFyIHRoZSBEYW51YmUgRGVsdGEsIHdpdGggYW4gaW1wb3J0YW50IHJvbGUgaW4gZGVsaW1pdGluZyBVa3JhaW5pYW4gdGVycml0b3JpYWwgd2F0ZXJzLiBUaGUgaXNsYW5kIGhhcyBiZWVuIGtub3duIHNpbmNlIGNsYXNzaWNhbCBhbnRpcXVpdHksIGFuZCBkdXJpbmcgdGhhdCBlcmEgaG9zdGVkIGEgR3JlZWsgdGVtcGxlIHRvIEFjaGlsbGVzICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvaW50ZXJuYXRpb25hbC9ydXNzaWEtc2F5cy1taXNzaWxlLXN0cmlrZS1oaXQtYW5kLWtpbGxlZC11a3JhaW5pYW4tIHRyb29wcy1vbi1zbmFrZS1pc2xhbmQvYXJ0aWNsZTY1NjEzMjQ5LmVjZQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sea of Azov",
        "option2" : "Black Sea",
        "option3" : "Sea of Marmara",
        "option4" : "Mediterranean Sea"
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements\n\t1. Moldova is a landlocked country.\n\t2. Romania shares border with Mediterranean Sea\n\t3. Belarus shares border with Poland and Russia.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRlc3QtMzogR1MgU3ViamVjdCAgICBodHRwczovL3d3dy53YXNoaW5ndG9ucG9zdC5jb20vd29ybGQvMjAyMi8wMi8xNy91a3JhaW5lLXJ1c3NpYS1tYXAv",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 76,
      "question" : "Juvenile Justice Board is constituted by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSnV2ZW5pbGUgSnVzdGljZSBCb2FyZCAtIENvbnN0aXR1dGlvbiBhbmQgTWVtYmVycyAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICgxKSBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgY29udGFpbmVkIGluIHRoZSBDb2RlIG9mIENyaW1pbmFsIFByb2NlZHVyZSwgMTk3MyAoMiBvZiAxOTc0KSwgdGhlIFN0YXRlIEdvdmVybm1lbnQgc2hhbGwsIGNvbnN0aXR1dGUgZm9yIGV2ZXJ5IGRpc3RyaWN0LCBvbmUgb3IgbW9yZSBKdXZlbmlsZSBKdXN0aWNlIEJvYXJkcyBmb3IgZXhlcmNpc2luZyB0aGUgcG93ZXJzIGFuZCBkaXNjaGFyZ2luZyBpdHMgZnVuY3Rpb25zIHJlbGF0aW5nIHRvIGNoaWxkcmVuIGluIGNvbmZsaWN0IHdpdGggbGF3IHVuZGVyIHRoaXMgQWN0LiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gKDIpIEEgQm9hcmQgc2hhbGwgY29uc2lzdCBvZiBhIE1ldHJvcG9saXRhbiBNYWdpc3RyYXRlIG9yIGEgSnVkaWNpYWwgTWFnaXN0cmF0ZSBvZiBGaXJzdCBDbGFzcyBub3QgYmVpbmcgQ2hpZWYgTWV0cm9wb2xpdGFuIE1hZ2lzdHJhdGUgb3IgQ2hpZWYgSnVkaWNpYWwgTWFnaXN0cmF0ZSAoaGVyZWluYWZ0ZXIgcmVmZXJyZWQgdG8gYXMgUHJpbmNpcGFsIE1hZ2lzdHJhdGUpIHdpdGggYXQgbGVhc3QgdGhyZWUgeWVhcnMgZXhwZXJpZW5jZSBhbmQgdHdvIHNvY2lhbCB3b3JrZXJzIHNlbGVjdGVkIGluIHN1Y2ggbWFubmVyIGFzIG1heSBiZSBwcmVzY3JpYmVkLCBvZiB3aG9tIGF0IGxlYXN0IG9uZSBzaGFsbCBiZSBhIHdvbWFuLCBmb3JtaW5nIGEgQmVuY2ggYW5kIGV2ZXJ5IHN1Y2ggQmVuY2ggc2hhbGwgaGF2ZSB0aGUgcG93ZXJzIGNvbmZlcnJlZCBieSB0aGUgQ29kZSBvZiBDcmltaW5hbCBQcm9jZWR1cmUsIDE5NzMgKDIgb2YgMTk3NCkgb24gYSBNZXRyb3BvbGl0YW4gTWFnaXN0cmF0ZSBvciwgYXMgdGhlIGNhc2UgbWF5IGJlLCBhIEp1ZGljaWFsIE1hZ2lzdHJhdGUgb2YgRmlyc3QgQ2xhc3MuICgzKSBObyBzb2NpYWwgd29ya2VyIHNoYWxsIGJlIGFwcG9pbnRlZCBhcyBhIG1lbWJlciBvZiB0aGUgQm9hcmQgdW5sZXNzIHN1Y2ggcGVyc29uIGhhcyBiZWVuIGFjdGl2ZWx5IGludm9sdmVkIGluIGhlYWx0aCwgZWR1Y2F0aW9uLCBvciB3ZWxmYXJlIGFjdGl2aXRpZXMgcGVydGFpbmluZyB0byBjaGlsZHJlbiBmb3IgYXRsZWFzdCBzZXZlbiB5ZWFycyBvciBhIHByYWN0aWNpbmcgcHJvZmVzc2lvbmFsIHdpdGggYSBkZWdyZWUgaW4gY2hpbGQgcHN5Y2hvbG9neSwgcHN5Y2hpYXRyeSwgc29jaW9sb2d5IG9yIGxhdy4gaHR0cHM6Ly93d3cuaW5kaWFjb2RlLm5pYy5pbi9zaG93LWRhdGE/YWN0aWQ9QUNfQ0VOXzEzXzE0XzAwMDAxMF8yMDE2MDJfMTUxNzgwNzMyODE2OCAmb3JkZXJubz00",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "District Magistrate",
        "option2" : "State Government",
        "option3" : "Central Government",
        "option4" : "Local Government  Test-3: GS Subject  "
      }
    },
    {
      "index" : 77,
      "question" : "Bonab, Arak, Bushehr, Fordo, Parchin are the locations sometime seen in the newsrelated to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEpvaW50IENvbXByZWhlbnNpdmUgUGxhbiBvZiBBY3Rpb24gKEpDUE9BKSBpcyBhIGRldGFpbGVkLCAxNTktcGFnZSBhZ3JlZW1lbnQgd2l0aCBmaXZlIGFubmV4ZXMgcmVhY2hlZCBieSBJcmFuIGFuZCB0aGUgUDUrMSAoQ2hpbmEsIEZyYW5jZSwgR2VybWFueSwgUnVzc2lhLCB0aGUgVW5pdGVkIEtpbmdkb20sIGFuZCB0aGUgVW5pdGVkIFN0YXRlcykgb24gSnVseSAxNCwgMjAxNS4gVGhlIG51Y2xlYXIgZGVhbCB3YXMgZW5kb3JzZWQgYnkgVU4gU2VjdXJpdHkgQ291bmNpbCBSZXNvbHV0aW9uIDIyMzEsIGFkb3B0ZWQgb24gSnVseSAyMCwgMjAxNS4gSXJhbidzIGNvbXBsaWFuY2Ugd2l0aCB0aGUgbnVjbGVhci1yZWxhdGVkIHByb3Zpc2lvbnMgb2YgdGhlIEpDUE9BIGlzIHZlcmlmaWVkIGJ5IHRoZSBJbnRlcm5hdGlvbmFsIEF0b21pYyBFbmVyZ3kgQWdlbmN5IChJQUVBKSBhY2NvcmRpbmcgdG8gY2VydGFpbiByZXF1aXJlbWVudHMgc2V0IGZvcnRoIGluIHRoZSBhZ3JlZW1lbnQuICBUZXN0LTM6IEdTIFN1YmplY3QgICAgaHR0cHM6Ly93d3cuYXJtc2NvbnRyb2wub3JnL2ZhY3RzaGVldHMvSkNQT0EtYXQtYS1nbGFuY2UgaHR0cHM6Ly93d3cudGhlZ3VhcmRpYW4uY29tL3dvcmxkLzIwMjIvanVuLzA5L3JlbW92YWwtb2YtY2FtZXJhcy1hdC1pcmFuLW51Y2xlYXItc2l0ZXMtbWF5LSBiZS1mYXRhbC1ibG93LXdhcm5zLXVuLXdhdGNoZG9n",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Nuclear Installations of Iran",
        "option2" : "Drought hit areas of Northern Africa",
        "option3" : "Terrorist infected areas of Afghanistan",
        "option4" : "Hot Springs located in Central Asia"
      }
    },
    {
      "index" : 78,
      "question" : "Which of the following states are major producers of Millets in India?\n\t1. Rajasthan\n\t2. Uttar Pradesh\n\t3. Haryana\n\t4. Tamil NaduSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWlsbGV0cyBpbiBJbmRpYTogam93YXIgKHNvcmdodW0pLCBiYWpyYSAocGVhcmwgbWlsbGV0KSBhbmQgcmFnaSAoZmluZ2VyIG1pbGxldCkgYW5kIHZhcmlldGllcyBvZiBzbWFsbCBtaWxsZXRzIGxpa2Uga29kbywga3V0a2ksIGNoZW5uYSBhbmQgc2Fud2EuIE1ham9yIHByb2R1Y2VyczogUmFqYXN0aGFuLCBBbmRocmEgUHJhZGVzaCwgVGVsYW5nYW5hLCBLYXJuYXRha2EsIFRhbWlsIE5hZHUsIE1haGFyYXNodHJhLCBHdWphcmF0IGFuZCBIYXJ5YW5hLiBTdXBlcmZvb2Q6IE1pbGxldHMgYXJlIGxvdyBjb3N0IGFuZCBhcmUgcmljaCBpbiBpcm9uLCBjYWxjaXVtLCBtYWduZXNpdW0sIGFuZCBhbnRpb3hpZGFudHMgKCBlLmcuIFJhZ2kgaXMga25vd24gdG8gaGF2ZSB0aGUgaGlnaGVzdCBjYWxjaXVtIGNvbnRlbnQpIGFtb25nIGFsbCB0aGUgZm9vZCAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGdyYWlucy4gQ2xpbWF0ZSBSZXNpbGllbnQ6IFRoZXkgYXJlIGFsc28gaGFyZGVyIGFuZCBkcm91Z2h0LXJlc2lzdGFudCBjcm9wcyB3aXRoIGEgc2hvcnQgZ3Jvd2luZyBzZWFzb24gYW5kIGxvd2VyIHdhdGVyIHJlcXVpcmVtZW50LiBodHRwczovL3d3dy5pbnNpZ2h0c29uaW5kaWEuY29tLzIwMjIvMDYvMjQvbWlzc2lvbi0yMDIzLWluc2lnaHRzLWRhaWx5LWN1cnJlbnQtYWZmYWlycy1waWItc3VtIG1hcnktMjQtanVuZS0yMDIyLw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "2, 3 and 4 only",
        "option3" : "1 and 4 only",
        "option4" : "1, 3 and 4 only"
      }
    },
    {
      "index" : 79,
      "question" : "Which of the following country is a member of the European Union but not a memberof the NATO alliance?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRXVyb3BlYW4gVW5pb24gIFRlc3QtMzogR1MgU3ViamVjdCAgICBOQVRPIE1lbWJlcnM=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Austria",
        "option2" : "Poland",
        "option3" : "Turkey",
        "option4" : "Romania"
      }
    },
    {
      "index" : 81,
      "question" : "Electoral College of Vice President consists of\n\t1. Elected members of Rajya Sabha.\n\t2. Nominated members of Lok Sabha\n\t3. Nominated members of Rajya SabhaTest-3: GS SubjectWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFZpY2UtUHJlc2lkZW50IGlzIGVsZWN0ZWQgYnkgYW4gZWxlY3RvcmFsIGNvbGxlZ2UgY29uc2lzdGluZyBvZiBtZW1iZXJzIG9mIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQsIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgc3lzdGVtIG9mIHByb3BvcnRpb25hbCByZXByZXNlbnRhdGlvbiBieSBtZWFucyBvZiB0aGUgc2luZ2xlIHRyYW5zZmVyYWJsZSB2b3RlIGFuZCB0aGUgdm90aW5nIGluIHN1Y2ggZWxlY3Rpb24gaXMgYnkgc2VjcmV0IGJhbGxvdC4gVGhlIEVsZWN0b3JhbCBDb2xsZWdlIHRvIGVsZWN0IGEgcGVyc29uIHRvIHRoZSBvZmZpY2Ugb2YgdGhlIFZpY2UtUHJlc2lkZW50IGNvbnNpc3RzIG9mIGFsbCBtZW1iZXJzIG9mIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQuIEFydGljbGUgMzI0IG9mIHRoZSBDb25zdGl0dXRpb24gcmVhZCB3aXRoIHRoZSBQcmVzaWRlbnRpYWwgYW5kIFZpY2UtUHJlc2lkZW50aWFsIEVsZWN0aW9ucyBBY3QsIDE5NTIgYW5kIHRoZSBQcmVzaWRlbnRpYWwgYW5kIFZpY2UtUHJlc2lkZW50aWFsIEVsZWN0aW9ucyBSdWxlcywgMTk3NCwgdmVzdHMgdGhlIHN1cGVyaW50ZW5kZW5jZSwgZGlyZWN0aW9uIGFuZCBjb250cm9sIG9mIHRoZSBjb25kdWN0IG9mIGVsZWN0aW9uIHRvIHRoZSBvZmZpY2Ugb2YgdGhlIFZpY2UtUHJlc2lkZW50IG9mIEluZGlhIGluIHRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhLiBUaGUgbm90aWZpY2F0aW9uIGZvciBlbGVjdGlvbiBzaGFsbCBiZSBpc3N1ZWQgb24gb3IgYWZ0ZXIgdGhlIHNpeHRpZXRoIGRheSBiZWZvcmUgdGhlIGV4cGlyYXRpb24gb2YgdGhlIHRlcm0gb2Ygb2ZmaWNlIG9mIHRoZSBvdXRnb2luZyBWaWNlLVByZXNpZGVudC4gQXMgcGVyIEFydGljbGUgNjYgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgdGhlIFZpY2UtUHJlc2lkZW50IGlzIGVsZWN0ZWQgYnkgdGhlIG1lbWJlcnMgb2YgdGhlIEVsZWN0b3JhbCBDb2xsZWdlLiBFbGVjdG9yYWwgQ29sbGVnZSBjb25zaXN0cyBvZjogRWxlY3RlZCBtZW1iZXJzIG9mIFJhanlhIFNhYmhhLjEuIE5vbWluYXRlZCBtZW1iZXJzIG9mIGJvdGggUmFqeWEgU2FiaGEgJiBMb2sgU2FiaGEuMi4gRWxlY3RlZCBtZW1iZXJzIG9mIExvayBTYWJoYS4zLiBTaW5jZSBhbGwgdGhlIGVsZWN0b3JzIGFyZSBtZW1iZXJzIG9mIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQsIHRoZSB2YWx1ZSBvZiB0aGUgdm90ZSBvZiBlYWNoIE1lbWJlciBvZiBQYXJsaWFtZW50IHdvdWxkIGJlIHRoZSBzYW1lLiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGh0dHA6Ly8xNjQuMTAwLjQ3LjUvQ2hhaXJtYW4tUmFqeWFzYWJoYS9WUEVsZWN0aW9uLmh0bQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements\n\t1. The election of the next Vice-President is to be held within 90 days of the expiry of the term ofoffice of the outgoing Vice-President.\n\t2. A candidate seeking election as Vice-President is required to make a security deposit ofRs.50,000\n\t3. All doubts and disputes arising in connection with the election of the Election Commission areenquired into and decided by the Supreme Court of India whose decision is final.Which of the statements given above are not correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRWxlY3Rpb24gb2YgdGhlIFZpY2UtUHJlc2lkZW50IFRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhIGNvbmR1Y3RzIHRoZSBlbGVjdGlvbiB0byB0aGUgb2ZmaWNlIG9mIHRoZSBWaWNlLVByZXNpZGVudC4gSW1wb3J0YW50IFByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdGhlIEVsZWN0aW9uIG9mIHRoZSBWaWNlLVByZXNpZGVudDo=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following statements regarding Chairman of Rajya Sabha\n\t1. The Chairman nominates members of the Rajya Sabha on various bodies such as the Courts ofBanaras Hindu University, and Jawaharlal Nehru University.\n\t2. Under the Press Council Act, 1978, the Chairman is one of the members of the Committee whichnominates the Chairman of the Press Council.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gRHV0aWVzIGNvbmZlcnJlZCBvbiB0aGUgQ2hhaXJtYW4gU29tZSBzdGF0dXRlcyBhbHNvIGNvbmZlciBkdXRpZXMgb24gdGhlIENoYWlybWFuLiBGb3IgaW5zdGFuY2UsIHJ1bGVzIG1hZGUgdW5kZXIgdGhlIFNhbGFyeSwgQWxsb3dhbmNlcyBhbmQgUGVuc2lvbiBvZiBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgQWN0LCAxOTU0LCBkbyBub3QgdGFrZSBlZmZlY3QgdW50aWwgdGhleSBhcmUgYXBwcm92ZWQgYW5kIGNvbmZpcm1lZCBieSB0aGUgQ2hhaXJtYW4gYW5kIHRoZSBTcGVha2VyLiBVbmRlciB0aGUgSnVkZ2VzIChpbnF1aXJ5KSBBY3QsIDE5NjgsIHRoZSBDaGFpcm1hbiBoYXMgdG8gY29uc3RpdHV0ZSBhIENvbW1pdHRlZSwgdXBvbiByZWNlaXB0IG9mIGEgbW90aW9uIGZvciB0aGUgcmVtb3ZhbCBvZiBhIEp1ZGdlIG9mIHRoZSBTdXByZW1lIENvdXJ0IG9yIG9mIGEgSGlnaCBDb3VydCwgZm9yIGFuIGludmVzdGlnYXRpb24gaW50byB0aGUgZ3JvdW5kcyBvbiB3aGljaCB0aGUgcmVtb3ZhbCBvZiBhIEp1ZGdlIGlzIHByYXllZCBmb3IuIFRoZSBydWxlcyBtYWRlIHVuZGVyIHRoYXQgQWN0IGFyZSBhbHNvIHJlcXVpcmVkIHRvIGJlIGFwcHJvdmVkIGFuZCBjb25maXJtZWQgYnkgdGhlIENoYWlybWFuIGFuZCB0aGUgU3BlYWtlci4gVW5kZXIgdGhlIFByZXNzIENvdW5jaWwgQWN0LCAxOTc4LCB0aGUgQ2hhaXJtYW4gaXMgb25lIG9mIHRoZSBtZW1iZXJzIG9mIHRoZSBDb21taXR0ZWUgd2hpY2ggbm9taW5hdGVzIHRoZSBDaGFpcm1hbiBvZiB0aGUgUHJlc3MgQ291bmNpbC4gVGhlIENoYWlybWFuIG5vbWluYXRlcyBtZW1iZXJzIG9mIHRoZSBSYWp5YSBTYWJoYSBvbiB2YXJpb3VzIGJvZGllcyBzdWNoIGFzIENvdXJ0cyBvZiBCYW5hcmFzIEhpbmR1IFVuaXZlcnNpdHksIEphd2FoYXJsYWwgTmVocnUgVW5pdmVyc2l0eSwgTm9ydGgtRWFzdGVybiBIaWxsIFVuaXZlcnNpdHksIFBvbmRpY2hlcnJ5IFVuaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgSHlkZXJhYmFkLCBBbmp1bWFuIChDb3VydCkgb2YgSmFtaWEgTWlsbGlhIElzbGFtaWEgVW5pdmVyc2l0eSwgSGFqIENvbW1pdHRlZSwgUHJlc3MgQ291bmNpbCBvZiBJbmRpYSwgU2Ftc2FkIChDb3VydCkgb2YgVmlzdmEgQmhhcmF0aSwgTmF0aW9uYWwgQ291bmNpbCBmb3IgVGVhY2hlcnMgRWR1Y2F0aW9uLCBldGMuIHNldCB1cCB1bmRlciB0aGUgcmVsZXZhbnQgc3RhdHV0ZXMuIFRoZSBDaGFpcm1hbiBhbHNvIG5vbWluYXRlcyBtZW1iZXJzIG9mIHRoZSBSYWp5YSBTYWJoYSBvbiBvdGhlciBib2RpZXMgbGlrZSB0aGUgR2VuZXJhbCBBc3NlbWJseSBvZiB0aGUgSW5kaWFuIENvdW5jaWwgZm9yIEN1bHR1cmFsIFJlbGF0aW9ucywgR2VuZXJhbCBCb2R5IG9mIHRoZSBDZW50cmFsIFNvY2lhbCBXZWxmYXJlIEJvYXJkLCBHZW5lcmFsIENvdW5jaWwgb2YgdGhlIFNjaG9vbCBvZiBQbGFubmluZyBhbmQgQXJjaGl0ZWN0dXJlLCBIaW5kaSBTaGlrc2hhIFNhbWl0aSwgSW5zdGl0dXRlIG9mIENvbnN0aXR1dGlvbmFsIGFuZCBQYXJsaWFtZW50YXJ5IFN0dWRpZXMsIGV0Yy4gVGhlIENoYWlybWFuIG1heSBhbHNvLCBpZiB0aGVyZSBpcyBhIGdlbmVyYWwgY29uc2Vuc3VzIGluIHRoZSBIb3VzZSwgbWFrZSBhbiBpbnF1aXJ5IGludG8gYSBtYXR0ZXIgd2hpY2ggd2FzIHJhaXNlZCBvbiB0aGUgZmxvb3Igb2YgdGhlIEhvdXNlIG9yIGFwcG9pbnQgYSBDb21taXR0ZWUgb2YgdGhlIEhvdXNlIGluIHJlc3BlY3QgdGhlcmVvZi4gaHR0cHM6Ly9jbXMucmFqeWFzYWJoYS5uaWMuaW4vL2NhcmVlcnNfZG9jdW1lbnRzLzE2MTExNDgwMDk1MTAuNzhfUG93ZXItRnVuY3Rpb25zLUNSLnBkZg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following statements regarding Green Hydrogen\n\t1. Hydrogen is the most abundant chemical element in nature.\n\t2. Green hydrogen is a clean energy source that only emits water vapour and leaves no residue inthe air\n\t3. Hydrogen can undergo a fusion reaction.\n\t4. Green hydrogen can be transformed into electricity or synthetic gas.\n\t5. Extensive safety measures are not largely required to operate hydrogen-based industries.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSFlEUk9HRU4gQVMgQ0xFQU4gRU5FUkdZIEh5ZHJvZ2VuIGlzIHRoZSBtb3N0IGFidW5kYW50IGNoZW1pY2FsIGVsZW1lbnQgaW4gbmF0dXJlLiBBcyBub3RlZCBieSB0aGUgSUVBLCB0aGUgZ2xvYmFsIGRlbWFuZCBmb3IgaHlkcm9nZW4gZm9yIHVzZSBhcyBhIGZ1ZWwgaGFzIHRyaXBsZWQgc2luY2UgMTk3NSBhbmQgcmVhY2hlZCA3MCBtaWxsaW9uIHRvbm5lcyBhIHllYXIgaW4gMjAxOC4gSW4gYWRkaXRpb24sIGdyZWVuIGh5ZHJvZ2VuIGlzIGEgY2xlYW4gZW5lcmd5IHNvdXJjZSB0aGF0IG9ubHkgZW1pdHMgd2F0ZXIgdmFwb3VyIGFuZCBsZWF2ZXMgbm8gcmVzaWR1ZSBpbiB0aGUgYWlyLCB1bmxpa2UgY29hbCBhbmQgb2lsLiBBRFZBTlRBR0VTIEFORCBESVNBRFZBTlRBR0VTIE9GIEdSRUVOIEhZRFJPR0VOIFRoaXMgZW5lcmd5IHNvdXJjZSBoYXMgcHJvcyBhbmQgY29ucyB0aGF0IHdlIG11c3QgYmUgYXdhcmUgb2YuIExldCdzIGdvIG92ZXIgc29tZSBvZiBpdHMgbW9zdCBpbXBvcnRhbnQgZ29vZCBwb2ludHM6IDEwMCAlIHN1c3RhaW5hYmxlOiBncmVlbiBoeWRyb2dlbiBkb2VzIG5vdCBlbWl0IHBvbGx1dGluZyBnYXNlcyBlaXRoZXIgZHVyaW5nIGNvbWJ1c3Rpb24gb3IgZHVyaW5nIHByb2R1Y3Rpb24uIFN0b3JhYmxlOiBoeWRyb2dlbiBpcyBlYXN5IHRvIHN0b3JlLCB3aGljaCBhbGxvd3MgaXQgdG8gYmUgdXNlZCBzdWJzZXF1ZW50bHkgZm9yIG90aGVyIHB1cnBvc2VzIGFuZCBhdCB0aW1lcyBvdGhlciB0aGFuIGltbWVkaWF0ZWx5IGFmdGVyIGl0cyBwcm9kdWN0aW9uLiBWZXJzYXRpbGU6IGdyZWVuIGh5ZHJvZ2VuIGNhbiBiZSB0cmFuc2Zvcm1lZCBpbnRvIGVsZWN0cmljaXR5IG9yIHN5bnRoZXRpYyBnYXMgYW5kIHVzZWQgZm9yIGNvbW1lcmNpYWwsIGluZHVzdHJpYWwgb3IgbW9iaWxpdHkgcHVycG9zZXMuIEhvd2V2ZXIsIGdyZWVuIGh5ZHJvZ2VuIGFsc28gaGFzIG5lZ2F0aXZlIGFzcGVjdHMgdGhhdCBzaG91bGQgYmUgYm9ybmUgaW4gbWluZDogSGlnaCBjb3N0OiBlbmVyZ3kgZnJvbSByZW5ld2FibGUgc291cmNlcywgd2hpY2ggYXJlIGtleSB0byBnZW5lcmF0aW5nIGdyZWVuIGh5ZHJvZ2VuIHRocm91Z2ggZWxlY3Ryb2x5c2lzLCBpcyBtb3JlIGV4cGVuc2l2ZSB0byBnZW5lcmF0ZSwgd2hpY2ggaW4gdHVybiBtYWtlcyBoeWRyb2dlbiBtb3JlIGV4cGVuc2l2ZSB0byBvYnRhaW4uIEhpZ2ggZW5lcmd5IGNvbnN1bXB0aW9uOiB0aGUgcHJvZHVjdGlvbiBvZiBoeWRyb2dlbiBpbiBnZW5lcmFsIGFuZCBncmVlbiBoeWRyb2dlbiBpbiBwYXJ0aWN1bGFyIHJlcXVpcmVzIG1vcmUgZW5lcmd5IHRoYW4gb3RoZXIgZnVlbHMuIFNhZmV0eSBpc3N1ZXM6IGh5ZHJvZ2VuIGlzIGEgaGlnaGx5IHZvbGF0aWxlIGFuZCBmbGFtbWFibGUgZWxlbWVudCBhbmQgZXh0ZW5zaXZlIHNhZmV0eSBtZWFzdXJlcyBhcmUgdGhlcmVmb3JlIHJlcXVpcmVkIHRvIHByZXZlbnQgbGVha2FnZSBhbmQgZXhwbG9zaW9ucy4gSGVuY2UgU3RhdGVtZW50IDUgaXMgaW5jb3JyZWN0LiAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGh0dHBzOi8vd3d3LmliZXJkcm9sYS5jb20vc3VzdGFpbmFiaWxpdHkvZ3JlZW4taHlkcm9nZW4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only",
        "option2" : "2, 3 and 4 only",
        "option3" : "2, 3 and 5 only  Test-3: GS Subject  ",
        "option4" : "1, 2, 3 and 4 only"
      }
    },
    {
      "index" : 85,
      "question" : "The Global Initiative on Reducing Land Degradation and Enhancing Conservation ofTerrestrial Habitats, sometimes seen in the news, is an initiative of",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIEcyMCBpcyBhIG11bHRpbGF0ZXJhbCBwbGF0Zm9ybSB0aGF0IGNvbm5lY3RzIHRoZSB3b3JsZCdzIG1ham9yIGRldmVsb3BlZCBhbmQgZW1lcmdpbmcgZWNvbm9taWVzLiBUb2dldGhlciB0aGUgRzIwIGNvdW50cmllcyByZXByZXNlbnQgbW9yZSB0aGFuIDgwIHBlciBjZW50IG9mIHdvcmxkIEdEUCwgNzUgcGVyIGNlbnQgb2YgaW50ZXJuYXRpb25hbCB0cmFkZSBhbmQgNjAgcGVyIGNlbnQgb2YgdGhlIHdvcmxkJ3MgcG9wdWxhdGlvbi4gICBJbiBOb3ZlbWJlciAyMDIwLCB0aGUgRzIwIGxhdW5jaGVkIFRoZSBHbG9iYWwgSW5pdGlhdGl2ZSBvbiBSZWR1Y2luZyBMYW5kIERlZ3JhZGF0aW9uIGFuZCBFbmhhbmNpbmcgQ29uc2VydmF0aW9uIG9mIFRlcnJlc3RyaWFsIEhhYml0YXRzLiBUaGUgZ29hbCBvZiB0aGlzIGluaXRpYXRpdmUgaXMgdG8gcHJldmVudCwgaGFsdCBhbmQgcmV2ZXJzZSBsYW5kIGRlZ3JhZGF0aW9uIGFuZCByZWR1Y2UgZGVncmFkZWQgbGFuZCBieSA1MCBwZXIgY2VudCBieSAyMDQwLiAgVGhpcyBpbml0aWF0aXZlIHNob3dzIGFuIHVucHJlY2VkZW50ZWQgcmVzb2x2ZSBieSB0aGUgd29ybGQncyBsYXJnZXN0IGVjb25vbWllcyB0byBjb25zZXJ2ZSB0aGUgdGVycmVzdHJpYWwgZW52aXJvbm1lbnQuIEl0IGFsc28gZm9jdXNlcyBvbiBjYXBhY2l0eSBidWlsZGluZyBhcyB3ZWxsIGFzIGVuZ2FnaW5nIHRoZSBwcml2YXRlIHNlY3RvciBhbmQgY2l2aWwgc29jaWV0eS4gICBUaGUgaW5pdGlhdGl2ZSBoYXMgdGhyZWUgaW50ZXJyZWxhdGVkIG9iamVjdGl2ZXM6ICBDb25zZXJ2aW5nIGxhbmQgYW5kIGhhbHRpbmcgaGFiaXRhdCBsb3NzLCBmcmFnbWVudGF0aW9uIGFuZCBsYW5kIGRlZ3JhZGF0aW9uIHRocm91Z2g6ICAgc2hhcmluZyBrbm93bGVkZ2UgYW5kIGJlc3QgcHJhY3RpY2VzIG9uIGNvbnNlcnZhdGlvbiBpbmNlbnRpdmVzICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGVuaGFuY2luZyBsYW5kIGNvbnNlcnZhdGlvbiAgcHJvbW90aW5nIHN1c3RhaW5hYmxlIGxhbmQgbWFuYWdlbWVudCBwcmFjdGljZXMgIHByb21vdGluZyBhY3RpdmUgZmlyZSBtYW5hZ2VtZW50ICBQcm9tb3RpbmcgaW50ZWdyYXRlZCwgc3VzdGFpbmFibGUsIGFuZCByZXNpbGllbnQgbGFuZCBhbmQgbGFuZHNjYXBlIG1hbmFnZW1lbnQgdGhyb3VnaDogICBuYXR1cmUtYmFzZWQgc29sdXRpb25zIG9yIGVjb3N5c3RlbS1iYXNlZCBhcHByb2FjaGVzICBmaW5hbmNpbmcgbWVjaGFuaXNtcyAgdXJiYW4gYW5kIGxhbmQgdXNlIHBsYW5uaW5nIHByb2Nlc3NlcyBhdCBkaWZmZXJlbnQgbGV2ZWxzIGFuZCBzY2FsZXMgIHN0cm9uZ2VyIGltcGxlbWVudGF0aW9uIG9mIGludGVybmF0aW9uYWwgYWdyZWVtZW50cyBhbmQgbG9jYWwgZW52aXJvbm1lbnRhbCBnb3Zlcm5hbmNlIGFuZCBsYXdzICB0aGUgZW1wb3dlcm1lbnQgb2YgSW5kaWdlbm91cyBQZW9wbGVzIGFuZCBMb2NhbCBDb21tdW5pdGllcyAoaW5jbHVkaW5nIHdvbWVuLCB5b3V0aCwgYW5kIHNtYWxsaG9sZGVycykgaW4gbGFuZCBtYW5hZ2VtZW50ICBzZWN1cmUgbGFuZCB0ZW51cmUsIHByb3BlcnR5IGFuZCBsYW5kLXVzZSByaWdodHMgaW4gYWNjb3JkYW5jZSB3aXRoIG5hdGlvbmFsIGxlZ2lzbGF0aW9uLCBhcyB3ZWxsIGFzIHN1cHBvcnQgc3VzdGFpbmFibGUgbGFuZCBhbmQgd2F0ZXIgbWFuYWdlbWVudCBwb2xpY2llcyBhbmQgc3VzdGFpbmFibGUgYWdyaWN1bHR1cmFsIHByYWN0aWNlcywgaW5jbHVkaW5nIHRyYWRpdGlvbmFsIHByYWN0aWNlcywgaW4gb3JkZXIgdG8gbWFpbnRhaW4gYW5kIGVuaGFuY2UgZWNvc3lzdGVtIGZ1bmN0aW9uYWxpdHkgIFJlc3RvcmluZyBkZWdyYWRlZCBsYW5kIHRocm91Z2g6ICAgc3VzdGFpbmFibGUgYW5kIGxvY2FsbHkgb3IgcmVnaW9uYWxseSBhcHByb3ByaWF0ZSByZWZvcmVzdGF0aW9uLCBhZmZvcmVzdGF0aW9uICBuYXR1cmFsIHJlZ2VuZXJhdGlvbi9yZXZlZ2V0YXRpb24sIHJlc3RvcmF0aW9uIG9mIGVjb3N5c3RlbSBzZXJ2aWNlcywgc3VzdGFpbmFibGUgYWdyaWN1bHR1cmFsIHByYWN0aWNlcywgYW5kIGRlcGxveW1lbnQgb2YgbmF0dXJlLWJhc2VkIHNvbHV0aW9ucyBvciBlY29zeXN0ZW0tYmFzZWQgYXBwcm9hY2hlcyBmb3IgYmlvZGl2ZXJzaXR5IGNvbnNlcnZhdGlvbiAgaHR0cHM6Ly93d3cudW5jY2QuaW50L291ci13b3JrL0cyMC1Jbml0aWF0aXZl",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "World Bank",
        "option2" : "G-20",
        "option3" : "UNEP",
        "option4" : "World Economic Forum"
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements regarding Fiber Optics\n\t1. Optical fiber carries more information than conventional copper wire.\n\t2. Optical fibers are less susceptible to interference.\n\t3. Copper wire is costlier than fiber optics.\n\t4. Fiber optic cables are stronger than copper wire cables but heavier than copper wires.\n\t5. Copper wires can be submerged in water to transmit data.Select the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRmliZXIgb3B0aWNzIHZzLiBjb3BwZXIgY2FibGVzIENvcHBlciB3aXJlIGNhYmxlcyB3ZXJlIHRoZSB0cmFkaXRpb25hbCBjaG9pY2UgZm9yIHRlbGVjb21tdW5pY2F0aW9uLCBuZXR3b3JraW5nIGFuZCBjYWJsZSBjb25uZWN0aW9ucyBmb3IgeWVhcnMuIE92ZXIgdGltZSwgaG93ZXZlciwgZmliZXIgb3B0aWNzIGJlY2FtZSBhIGNvbW1vbiBhbHRlcm5hdGl2ZS4gTW9zdCB0ZWxlcGhvbmUgY29tcGFueSBsb25nLWRpc3RhbmNlIGxpbmVzIGFyZSBub3cgbWFkZSBvZiBmaWJlciBvcHRpYyBjYWJsZXMuIE9wdGljYWwgZmliZXIgY2FycmllcyBtb3JlIGluZm9ybWF0aW9uIHRoYW4gY29udmVudGlvbmFsIGNvcHBlciB3aXJlLCBkdWUgdG8gaXRzIGhpZ2hlciBiYW5kd2lkdGggYW5kIGZhc3RlciBzcGVlZHMuIEJlY2F1c2UgZ2xhc3MgZG9lcyBub3QgY29uZHVjdCBlbGVjdHJpY2l0eSwgZmliZXIgb3B0aWNzIGlzIG5vdCBzdWJqZWN0IHRvIGVsZWN0cm9tYWduZXRpYyBpbnRlcmZlcmVuY2UsIGFuZCBzaWduYWwgbG9zc2VzIGFyZSBtaW5pbWl6ZWQuIEFkdmFudGFnZXMgYW5kIGRpc2FkdmFudGFnZXMgb2YgZmliZXIgb3B0aWNzIEZpYmVyIG9wdGljIGNhYmxlcyBhcmUgdXNlZCBtYWlubHkgZm9yIHRoZWlyIGFkdmFudGFnZXMgb3ZlciBjb3BwZXIgY2FibGVzLiBBZHZhbnRhZ2VzIGluY2x1ZGUgdGhlIGZvbGxvd2luZzogVGhleSBzdXBwb3J0IGhpZ2hlciBiYW5kd2lkdGggY2FwYWNpdGllcy4gTGlnaHQgY2FuIHRyYXZlbCBmdXJ0aGVyIHdpdGhvdXQgbmVlZGluZyBhcyBtdWNoIG9mIGEgc2lnbmFsIGJvb3N0LiBUaGV5IGFyZSBsZXNzIHN1c2NlcHRpYmxlIHRvIGludGVyZmVyZW5jZSwgc3VjaCBhcyBlbGVjdHJvbWFnbmV0aWMgaW50ZXJmZXJlbmNlLiBUaGV5IGNhbiBiZSBzdWJtZXJnZWQgaW4gd2F0ZXIuIEZpYmVyIG9wdGljIGNhYmxlcyBhcmUgc3Ryb25nZXIsIHRoaW5uZXIgYW5kIGxpZ2h0ZXIgdGhhbiBjb3BwZXIgd2lyZSBjYWJsZXMuIFRoZXkgZG8gbm90IG5lZWQgdG8gYmUgbWFpbnRhaW5lZCBvciByZXBsYWNlZCBhcyBmcmVxdWVudGx5LiBIb3dldmVyLCBpdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IGZpYmVyIG9wdGljcyBkbyBoYXZlIGRpc2FkdmFudGFnZXMgdXNlcnMgc2hvdWxkIGtub3cgYWJvdXQuIFRoZXNlIGRpc2FkdmFudGFnZXMgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiBDb3BwZXIgd2lyZSBpcyBvZnRlbiBjaGVhcGVyIHRoYW4gZmliZXIgb3B0aWNzLiBHbGFzcyBmaWJlciByZXF1aXJlcyBtb3JlIHByb3RlY3Rpb24gd2l0aGluIGFuIG91dGVyIGNhYmxlIHRoYW4gY29wcGVyLiBJbnN0YWxsaW5nIG5ldyBjYWJsaW5nIGlzIGxhYm9yLWludGVuc2l2ZS4gRmliZXIgb3B0aWMgY2FibGVzIGFyZSBvZnRlbiBtb3JlIGZyYWdpbGUuIEZvciBleGFtcGxlLCB0aGUgZmliZXJzIGNhbiBiZSBicm9rZW4gb3IgYSBzaWduYWwgY2FuIGJlIGxvc3QgaWYgdGhlIGNhYmxlIGlzIGJlbnQgb3IgY3VydmVkIGFyb3VuZCBhIHJhZGl1cyBvZiBhIGZldyBjZW50aW1ldGVycyAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGh0dHBzOi8vd3d3LnRlY2h0YXJnZXQuY29tL3NlYXJjaG5ldHdvcmtpbmcvZGVmaW5pdGlvbi9maWJlci1vcHRpY3Mtb3B0aWNhbC1maWJlcg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1, 3 and 4 only",
        "option3" : "2, 3, 4 and 5 only",
        "option4" : "1, 2, 3, 4 and 5"
      }
    },
    {
      "index" : 87,
      "question" : "Which of the following forest types is naturally found in Tamil Nadu?\n\t1. Tropical wet evergreen\n\t2. Montane wet temperate\n\t3. Littoral and swamp\n\t4. Tropical thornSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW4gVGFtaWwgTmFkdSwgRm9yZXN0IHZlZ2V0YXRpb24gaXMgZGl2aWRlZCBpbnRvIDMgbWFqb3IgZ3JvdXBzIGFjY29yZGluZyB0byB0ZW1wZXJhdHVyZSB6b25lcyBuYW1lbHkgVHJvcGljYWwgRm9yZXN0cywgTW9udGFuZSBTdWJ0cm9waWNhbCBGb3Jlc3RzIGFuZCBNb250YW5lIFRlbXBlcmF0ZSBGb3Jlc3RzLCB3aGljaCBhcmUgc3ViIGRpdmlkZWQgaW50byBuaW5lIHR5cGUgZ3JvdXBzIGJhc2VkIG9uIG1vaXN0dXJlIGFuZCBwaHlzaW9nbm9taWMgdmFyaWF0aW9uLiBUaGV5IGFyZSBTLk5vIE1ham9yIEZvcmVzdCBUeXBlIGdyb3VwIDEgVHJvcGljYWwgd2V0IGV2ZXJncmVlbiAyIFRyb3BpY2FsIHNlbWkgZXZlcmdyZWVuIDMgVHJvcGljYWwgbW9pc3QgZGVjaWR1b3VzIDQgTGl0dG9yYWwgYW5kIHN3YW1wIDUgVHJvcGljYWwgZHJ5IGRlY2lkdW91cyA2IFRyb3BpY2FsIHRob3JuIDcgVHJvcGljYWwgZHJ5IGV2ZXJncmVlbiA4IFN1Yi1Ucm9waWNhbCBCcm9hZC1sZWF2ZWQgaGlsbCA5IE1vbnRhbmUgd2V0IHRlbXBlcmF0ZSBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vdmlkZW8vZW52aXJvbm1lbnQgaGlzLXRhbWlsLW5hZHUtbWFuLXR1cm5lZC0xMDAtYWNyZXMtb2YtYmEgcnJlbi1sYW5kLXRvLWFuLWluZGlnZW5vdXMtZm9yZXN0LTgzMTYwIGh0dHBzOi8vd3d3LmZvcmVzdHMudG4uZ292LmluL3BhZ2VzL3ZpZXcgbi1mb3Jlc3QtdHlwZXM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "2, 3 and 4 only",
        "option3" : "1, 2 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 88,
      "question" : "India's largest floating 100-MW solar power project is recently operationalised in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW5kaWEncyBsYXJnZXN0IGZsb2F0aW5nIDEwMC1NVyBzb2xhciBwb3dlciBwcm9qZWN0IGlzIG5vdyBmdWxseSBvcGVyYXRpb25hbCBpbiBUZWxhbmdhbmEgSXQgaXMgcG93ZXJlZCB3aXRoIGFkdmFuY2VkIHRlY2hub2xvZ3kgYW5kIGVudmlyb25tZW50LWZyaWVuZGx5IGZlYXR1cmVzLiBUaGUgcHJvamVjdCBzcHJlYWRzIG92ZXIgNTAwIGFjcmVzIG9mIGl0cyByZXNlcnZvaXIsIHdpdGggdGhlIHByZXNlbmNlIG9mIGZsb2F0aW5nIHNvbGFyIHBhbmVscywgdGhlIGV2YXBvcmF0aW9uIHJhdGUgZnJvbSB3YXRlciBib2RpZXMgaXMgcmVkdWNlZCwgdGh1cyBoZWxwaW5nIGluIHdhdGVyIGNvbnNlcnZhdGlvbi4gV2hhdCBhcmUgZmxvYXRpbmcgc29sYXIgcGxhbnRzPyBTb2xhciBwbGFudHMgb3Igc29sYXIgZmFybXMgY2FuIGJlIGVpdGhlciBncm91bmQtbW91bnRlZCBvciBzZXQgdXAgb24gdGhlIHN1cmZhY2Ugb2Ygd2F0ZXJib2RpZXMuIFRob3VnaCB0aGVzZSBmbG9hdGluZyBmYXJtcyBhcmUgYSBiaXQgbW9yZSBleHBlbnNpdmUgdGhhbiB0aGUgdHJhZGl0aW9uYWwgb25lcyBtb3VudGVkIG9uIGxhbmQgc3VyZmFjZXMsIHRoZXJlIGFyZSBhZHZhbnRhZ2VzIGFzIHdlbGwuIEF0IGEgdGltZSB3aGVuIGxhcmdlIHRyYWN0cyBvZiBsYW5kIGFyZSB1bmF2YWlsYWJsZSwgZmxvYXRpbmcgZmFybXMgZG8gbm90IHJlcXVpcmUgbGFuZCB0byBiZSBhY3F1aXJlZCBmb3IgdGhlIGluc3RhbGxhdGlvbiBvZiBwaG90b3ZvbHRhaWMgcGFuZWxzLiBUaGV5IGFyZSBtb3JlIGVmZmljaWVudCBhcyB0aGUgcHJlc2VuY2Ugb2Ygd2F0ZXIgdW5kZXJuZWF0aCBoZWxwcyB0aGVtIGtlZXAgY29vbC4gVGhleSBhbHNvIHJlZHVjZSB3YXRlciBldmFwb3JhdGlvbiwgdGhlcmVieSBzYXZpbmcgbW9yZSB3YXRlciBmb3IgaHlkcm9wb3dlciBnZW5lcmF0aW9uLiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmVkIGVsYW5nYW5hLWZsb2F0aW5nLXNvbGFyLXBsYW50LWVudmlyb25tZW50LW50cGMtZXhwIGxhaW5lZC04MDA1NTg1Lw==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Madhya Pradesh",
        "option2" : "Ladakh",
        "option3" : "Gujarat",
        "option4" : "Telangana"
      }
    },
    {
      "index" : 89,
      "question" : "Leading producing state of Wind Energy in India isTest-3: GS Subject",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2luZCBwb3dlciBnZW5lcmF0aW9uIGNhcGFjaXR5IGluIEluZGlhIGhhcyBzaWduaWZpY2FudGx5IGluY3JlYXNlZCBpbiByZWNlbnQgeWVhcnMuIEFzIG9mIDMxIE1heSAyMDIyLCB0aGUgdG90YWwgaW5zdGFsbGVkIHdpbmQgcG93ZXIgY2FwYWNpdHkgd2FzIDQwLjcxIEdXLCB0aGUgZm91cnRoIGxhcmdlc3QgaW5zdGFsbGVkIHdpbmQgcG93ZXIgY2FwYWNpdHkgaW4gdGhlIHdvcmxkLiBXaW5kIHBvd2VyIGNhcGFjaXR5IGlzIG1haW5seSBzcHJlYWQgYWNyb3NzIHRoZSBTb3V0aGVybiwgV2VzdGVybiBhbmQgTm9ydGhlcm4gV2VzdGVybiByZWdpb25zLiBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9XaW5kX3Bvd2VyX2luX0luZGlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Gujarat",
        "option2" : "Tamil Nadu",
        "option3" : "Rajasthan",
        "option4" : "Karnataka"
      }
    },
    {
      "index" : 90,
      "question" : "Micro-RNA: miR444, sometime seen in the news, is related to",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIG1pY3JvLVJOQS1zd2l0Y2ggY29udHJvbHMgYSBnZW5lIHRoYXQgcmVndWxhdGVzIG5pdHJhdGUgYWJzb3JwdGlvbiwgcm9vdCBkZXZlbG9wbWVudCwgc3RyZXNzIHRvbGVyYW5jZSBSZXNlYXJjaGVycyBsZWQgYnkgdGhvc2UgZnJvbSB0aGUgTmF0aW9uYWwgQ2VudHJlIG9mIEJpb2xvZ2ljYWwgU2NpZW5jZXMsIFRhdGEgSW5zdGl0dXRlIG9mIEZ1bmRhbWVudGFsIFJlc2VhcmNoLCBCZW5nYWx1cnUgKE5DQlMtVElGUiksIGhhdmUgZm91bmQgYSBuZXcgcGF0aHdheSB0aGF0IHJlZ3VsYXRlcyBuaXRyYXRlIGFic29ycHRpb24gaW4gcGxhbnRzLiBUaGUgZ2VuZSBNQURTMjcsIHdoaWNoIHJlZ3VsYXRlcyBuaXRyYXRlIGFic29ycHRpb24sIHJvb3QgZGV2ZWxvcG1lbnQgYW5kIHN0cmVzcyB0b2xlcmFuY2UsIGlzIGFjdGl2YXRlZCBieSB0aGUgbWljcm8tUk5BLCBtaVI0NDQsIHRoZXJlZm9yZSBvZmZlcnMgYSB3YXkgdG8gY29udHJvbCB0aGVzZSBwcm9wZXJ0aWVzIG9mIHRoZSBwbGFudC4gVGhlIHJlc2VhcmNoZXJzIHN0dWRpZWQgdGhpcyBtZWNoYW5pc20gaW4gYm90aCByaWNlIChtb25vY290KSBhbmQgdG9iYWNjbyAoZGljb3QpIHBsYW50cy4gVGhlIHJlc2VhcmNoIGlzIHB1Ymxpc2hlZCBpbiBKb3VybmFsIG9mIEV4cGVyaW1lbnRhbCBCb3RhbnkuIE5pdHJvZ2VuIGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgbWFjcm9udXRyaWVudHMgbmVlZGVkIGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgYSBwbGFudC4gSXQgaXMgYSBwYXJ0IG9mIGNobG9yb3BoeWxsLCBhbWlubyBhY2lkcyBhbmQgbnVjbGVpYyBhY2lkcywgYW1vbmcgb3RoZXJzLiBJdCBpcyBtb3N0bHkgc291cmNlZCBmcm9tIHRoZSBzb2lsIHdoZXJlIGl0IGlzIG1haW5seSBhYnNvcmJlZCBpbiB0aGUgZm9ybSBvZiBuaXRyYXRlcyBhbmQgYW1tb25pdW0gYnkgdGhlIHJvb3RzLiBOaXRyYXRlcyBhbHNvIHBsYXkgYSByb2xlIGluIGNvbnRyb2xsaW5nIGdlbm9tZS13aWRlIGdlbmUgZXhwcmVzc2lvbiB0aGF0IGluIHR1cm4gcmVndWxhdGVzIHJvb3Qgc3lzdGVtIGFyY2hpdGVjdHVyZSwgZmxvd2VyaW5nIHRpbWUsIGxlYWYgZGV2ZWxvcG1lbnQsIGV0Yy4gaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS10ZWNoL3NjaWVuY2UvbmV3LXBhdGh3YXktdG8tcmVndWxhdGUtbml0cmF0ZS1hYnNvcnB0aW9uLWluLXBsYW50IHMvYXJ0aWNsZTY1NTkwOTA4LmVjZSAgVGVzdC0zOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Plant Nutrient Absorption",
        "option2" : "Assimilation in Intestine",
        "option3" : "Reproduction in Bacteria",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 91,
      "question" : "Which of the following particles is/are Elementary Particles?\n\t1. Protons\n\t2. Neutrons\n\t3. ElectronsWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRWxlbWVudGFyeSBwYXJ0aWNsZXMgYXJlIHRoZSBtb3N0IGZ1bmRhbWVudGFsIGNvbXBvbmVudHMgb2YgbWF0dGVyIGFuZCBjYW5ub3QgYmUgZnVydGhlciBzdWJkaXZpZGVkIGludG8gc21hbGxlciBjb25zdGl0dWVudHMuICgtKUVsZW1lbnRhcnkgcGFydGljbGVzIGluY2x1ZGUgcXVhcmtzICh0aGUgY29uc3RpdHVlbnRzIG9mIHByb3RvbnMgYW5kIG5ldXRyb25zKSwgbGVwdG9ucyAoZWxlY3Ryb25zLCBtdW9ucywgdGF1cywgYW5kIG5ldXRyaW5vcyksIGdhdWdlIGJvc29ucyAocGhvdG9ucywgZ2x1b25zLCBhbmQgVyBhbmQgWiBib3NvbnMpIGFuZCB0aGUgSGlnZ3MgYm9zb24uICgtKVRoZSBmdW5kYW1lbnRhbCBmb3JjZXMgdGhhdCBhY3Qgb24gZWxlbWVudGFyeSBwYXJ0aWNsZXMgYXJlIHRoZSBlbGVjdHJvbWFnbmV0aWMgZm9yY2UsIHRoZSBzdHJvbmcgZm9yY2UsIHRoZSB3ZWFrIGZvcmNlLCBhbmQgZ3Jhdml0eS4gKC0pQ2hhcmFjdGVyaXN0aWNzIG9mIGVsZW1lbnRhcnkgcGFydGljbGVzIGluY2x1ZGUgbWFzcywgc3BpbiwgYW5kIGNoYXJnZS4gKC0pVG8gZWFjaCBraW5kIG9mIGVsZW1lbnRhcnkgcGFydGljbGUgdGhlcmUgY29ycmVzcG9uZHMgYW4gYW50aXBhcnRpY2xlLCBvciBjb25qdWdhdGUgcGFydGljbGUsIHdoaWNoIGhhcyB0aGUgc2FtZSBtYXNzIGFuZCBzcGluLCBidXQgaGFzIHRoZSBvcHBvc2l0ZSB2YWx1ZSBvZiBjaGFyZ2UgYW5k4oiVb3IgZmxhdm9yIHF1YW50dW0gbnVtYmVyLiAoLSlUaGUgc3RhbmRhcmQgbW9kZWwgb2YgcGFydGljbGUgcGh5c2ljcyBjbGFzc2lmaWVzIGFuZCBkZXNjcmliZXMgdGhlIGJlaGF2aW9yIG9mIGFsbCBrbm93biBlbGVtZW50YXJ5IHBhcnRpY2xlcy4gaHR0cHM6Ly93d3cuYWNjZXNzc2NpZW5jZS5jb20vbWVkaWEvRVNUL21lZGlhLzIyNzcwMFBWMDAwMi5wZGYgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS10ZWNoL3NjaWVuY2UvMTAteWVhcnMtb2YtaGlnZ3MtYm9zb24taG93LXRoZS1wYXJ0aWNsZS1jb3VsZC11bmxvIGNrLW5ldy1waHlzaWNzLWJleW9uZC10aGUtc3RhbmRhcmQtbW9kZWwvYXJ0aWNsZTY1NTkyMDY2LmVjZSAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 92,
      "question" : "Consider the following statements regarding Magnetic Resonance Imaging (MRI)\n\t1. MRI uses a strong magnetic field and X-rays to create detailed images of the organs and tissueswithin the body.\n\t2. MRI scans require minimum four hours to analyze any part of the body.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTVJJIHVzZXMgYSBzdHJvbmcgbWFnbmV0aWMgZmllbGQgYW5kIHJhZGlvIHdhdmVzIHRvIGNyZWF0ZSBkZXRhaWxlZCBpbWFnZXMgb2YgdGhlIG9yZ2FucyBhbmQgdGlzc3VlcyB3aXRoaW4gdGhlIGJvZHkuIEFuIE1SSSBzY2FubmVyIGlzIGEgbGFyZ2UgdHViZSB0aGF0IGNvbnRhaW5zIHBvd2VyZnVsIG1hZ25ldHMuIEFuIE1SSSBzY2FuIGNhbiBiZSB1c2VkIHRvIGV4YW1pbmUgYWxtb3N0IGFueSBwYXJ0IG9mIHRoZSBib2R5LCBpbmNsdWRpbmcgdGhlOiBicmFpbiBhbmQgc3BpbmFsIGNvcmQgYm9uZXMgYW5kIGpvaW50cyAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIGJyZWFzdHMgaGVhcnQgYW5kIGJsb29kIHZlc3NlbHMgaW50ZXJuYWwgb3JnYW5zLCBzdWNoIGFzIHRoZSBsaXZlciwgd29tYiBvciBwcm9zdGF0ZSBnbGFuZCBIb3cgZG9lcyBhbiBNUkkgc2NhbiB3b3JrPyBNb3N0IG9mIHRoZSBodW1hbiBib2R5IGlzIG1hZGUgdXAgb2Ygd2F0ZXIgbW9sZWN1bGVzLCB3aGljaCBjb25zaXN0IG9mIGh5ZHJvZ2VuIGFuZCBveHlnZW4gYXRvbXMuIEF0IHRoZSBjZW50cmUgb2YgZWFjaCBoeWRyb2dlbiBhdG9tIGlzIGFuIGV2ZW4gc21hbGxlciBwYXJ0aWNsZSBjYWxsZWQgYSBwcm90b24uIFByb3RvbnMgYXJlIGxpa2UgdGlueSBtYWduZXRzIGFuZCBhcmUgdmVyeSBzZW5zaXRpdmUgdG8gbWFnbmV0aWMgZmllbGRzLiBXaGVuIHlvdSBsaWUgdW5kZXIgdGhlIHBvd2VyZnVsIHNjYW5uZXIgbWFnbmV0cywgdGhlIHByb3RvbnMgaW4geW91ciBib2R5IGxpbmUgdXAgaW4gdGhlIHNhbWUgZGlyZWN0aW9uLCBpbiB0aGUgc2FtZSB3YXkgdGhhdCBhIG1hZ25ldCBjYW4gcHVsbCB0aGUgbmVlZGxlIG9mIGEgY29tcGFzcy4gU2hvcnQgYnVyc3RzIG9mIHJhZGlvIHdhdmVzIGFyZSB0aGVuIHNlbnQgdG8gY2VydGFpbiBhcmVhcyBvZiB0aGUgYm9keSwga25vY2tpbmcgdGhlIHByb3RvbnMgb3V0IG9mIGFsaWdubWVudC4gV2hlbiB0aGUgcmFkaW8gd2F2ZXMgYXJlIHR1cm5lZCBvZmYsIHRoZSBwcm90b25zIHJlYWxpZ24uIFRoaXMgc2VuZHMgb3V0IHJhZGlvIHNpZ25hbHMsIHdoaWNoIGFyZSBwaWNrZWQgdXAgYnkgcmVjZWl2ZXJzLiBUaGVzZSBzaWduYWxzIHByb3ZpZGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGV4YWN0IGxvY2F0aW9uIG9mIHRoZSBwcm90b25zIGluIHRoZSBib2R5LiBUaGV5IGFsc28gaGVscCB0byBkaXN0aW5ndWlzaCBiZXR3ZWVuIHRoZSB2YXJpb3VzIHR5cGVzIG9mIHRpc3N1ZSBpbiB0aGUgYm9keSwgYmVjYXVzZSB0aGUgcHJvdG9ucyBpbiBkaWZmZXJlbnQgdHlwZXMgb2YgdGlzc3VlIHJlYWxpZ24gYXQgZGlmZmVyZW50IHNwZWVkcyBhbmQgcHJvZHVjZSBkaXN0aW5jdCBzaWduYWxzLiBNUkkgc2NhbnMgcmVxdWlyZSAyMCBtaW51dGVzIHRvIG9uZSBob3VyIHRvIGFuYWx5emUgYW55IHBhcnQgb2YgdGhlIGJvZHkuIEluIHRoZSBzYW1lIHdheSB0aGF0IG1pbGxpb25zIG9mIHBpeGVscyBvbiBhIGNvbXB1dGVyIHNjcmVlbiBjYW4gY3JlYXRlIGNvbXBsZXggcGljdHVyZXMsIHRoZSBzaWduYWxzIGZyb20gdGhlIG1pbGxpb25zIG9mIHByb3RvbnMgaW4gdGhlIGJvZHkgYXJlIGNvbWJpbmVkIHRvIGNyZWF0ZSBhIGRldGFpbGVkIGltYWdlIG9mIHRoZSBpbnNpZGUgb2YgdGhlIGJvZHkuIEhlbmNlLCBib3RoIHN0YXRlbWVudCAxIGFuZCAyIGFyZSBpbmNvcnJlY3QuIGh0dHBzOi8vd3d3Lm5ocy51ay9jb25kaXRpb25zL21yaS1zY2FuLyBodHRwczovL3d3dy5tZWRpY2FsbmV3c3RvZGF5LmNvbS9hcnRpY2xlcy8xNDYzMDkjcHJlcGFyYXRpb24gaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvY2l0aWVzL0h5ZGVyYWJhZC9sb25nLXdhaXQtZm9yLW1yaS1zY2FuLWF0LXRlbGFuZ2FuYXMtZ2FuZGhpLWggb3NwaXRhbC1lbmRzL2FydGljbGU2NTQ0NzI5Ny5lY2U=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements regarding Corals in India\n\t1. There are about 500 species of hard corals found in India\n\t2. Almost 90% of them are found in the waters surrounding Andaman and Nicobar Islands.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gU2NpZW50aXN0cyBoYXZlIHJlY29yZGVkIGZvdXIgc3BlY2llcyBvZiBhem9veGFudGhlbGxhdGUgY29yYWxzIGZvciB0aGUgZmlyc3QgdGltZSBmcm9tIEluZGlhbiB3YXRlcnMuIFRoZXNlIG5ldyBjb3JhbHMgd2VyZSBmb3VuZCBmcm9tIHRoZSB3YXRlcnMgb2YgdGhlIEFuZGFtYW4gYW5kIE5pY29iYXIgSXNsYW5kcy4gQXpvb3hhbnRoZWxsYXRlIGNvcmFscyBhcmUgYSBncm91cCBvZiBjb3JhbHMgdGhhdCBkbyBub3QgY29udGFpbiB6b294YW50aGVsbGFlIGFuZCBkZXJpdmUgbm91cmlzaG1lbnQgbm90IGZyb20gdGhlIHN1biBidXQgZnJvbSBjYXB0dXJpbmcgZGlmZmVyZW50IGZvcm1zIG9mIHBsYW5rdG9uLiBUaGVzZSBncm91cHMgb2YgY29yYWxzIGFyZSBkZWVwLXNlYSByZXByZXNlbnRhdGl2ZXMsIHdpdGggdGhlIG1ham9yaXR5IG9mIHNwZWNpZXMgcmVwb3J0aW5nIGZyb20gYmV0d2VlbiAyMDAgbSB0byAxMDAwIG0uIFRoZWlyIG9jY3VycmVuY2VzIGFyZSBhbHNvIHJlcG9ydGVkIGZyb20gc2hhbGxvdyBjb2FzdGFsIHdhdGVycy4gVGhlcmUgYXJlIGFib3V0IDU3MCBzcGVjaWVzIG9mIGhhcmQgY29yYWxzIGZvdW5kIGluIEluZGlhIGFuZCBhbG1vc3QgOTAlIG9mIHRoZW0gYXJlIGZvdW5kIGluIHRoZSB3YXRlcnMgc3Vycm91bmRpbmcgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzLiBUaGUgcHJpc3RpbmUgYW5kIG9sZGVzdCBlY29zeXN0ZW0gb2YgY29yYWxzIHNoYXJlIGxlc3MgdGhhbiAxJSBvZiB0aGUgZWFydGgncyBzdXJmYWNlIGJ1dCB0aGV5IHByb3ZpZGUgYSBob21lIHRvIG5lYXJseSAyNSUgb2YgbWFyaW5lIGxpZmUuIEZvdXIgc3BlY2llcyBvZiBhem9veGFudGhlbGxhdGUgY29yYWxzIHdlcmUgcmVjb3JkZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGZyb20gdGhlIHdhdGVycyBvZiB0aGUgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzLiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLXRlY2gvc2NpZW5jZS9mb3VyLW5ldy1jb3JhbHMtcmVjb3JkZWQtZnJvbS1pbmRpYW4td2F0ZXJzL2FydGljbGUgNjU1NTM1MzAuZWNl",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2  Test-3: GS Subject  "
      }
    },
    {
      "index" : 94,
      "question" : "The world's largest recorded freshwater fish, a giant stingray, has been caught in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHdvcmxkJ3MgbGFyZ2VzdCByZWNvcmRlZCBmcmVzaHdhdGVyIGZpc2gsIGEgZ2lhbnQgc3RpbmdyYXksIGhhcyBiZWVuIGNhdWdodCBpbiB0aGUgTWVrb25nIFJpdmVyIGluIENhbWJvZGlhLCBhY2NvcmRpbmcgdG8gc2NpZW50aXN0cyBmcm9tIHRoZSBTb3V0aGVhc3QgQXNpYW4gbmF0aW9uIGFuZCB0aGUgVW5pdGVkIFN0YXRlcy4gSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gVGhlIHN0aW5ncmF5LCBjYXB0dXJlZCBvbiBKdW5lIDEzLCBtZWFzdXJlZCBhbG1vc3QgZm91ciBtZXRlcnMgKDEzIGZlZXQpIGZyb20gc25vdXQgdG8gdGFpbCBhbmQgd2VpZ2hlZCBzbGlnaHRseSB1bmRlciAzMDAga2lsb2dyYW1zICg2NjAgcG91bmRzKSwgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IG9uIE1vbmRheSBieSBXb25kZXJzIG9mIHRoZSBNZWtvbmcsIGEgam9pbnQgQ2FtYm9kaWFuLVUuUy4gcmVzZWFyY2ggcHJvamVjdC4gVGhlIHByZXZpb3VzIHJlY29yZCBmb3IgYSBmcmVzaHdhdGVyIGZpc2ggd2FzIGEgMjkzLWtpbG9ncmFtICg2NDYtcG91bmQpIE1la29uZyBnaWFudCBjYXRmaXNoLCBkaXNjb3ZlcmVkIGluIFRoYWlsYW5kIGluIDIwMDUsIHRoZSBncm91cCBzYWlkLiAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIFRoZSBzdGluZ3JheSB3YXMgc25hZ2dlZCBieSBhIGxvY2FsIGZpc2hlcm1hbiBzb3V0aCBvZiBTdHVuZyBUcmVuZyBpbiBub3J0aGVhc3Rlcm4gQ2FtYm9kaWEuIFRoZSBmaXNoZXJtYW4gYWxlcnRlZCBhIG5lYXJieSB0ZWFtIG9mIHNjaWVudGlzdHMgZnJvbSB0aGUgV29uZGVycyBvZiB0aGUgTWVrb25nIHByb2plY3QsIHdoaWNoIGhhcyBwdWJsaWNpc2VkIGl0cyBjb25zZXJ2YXRpb24gd29yayBpbiBjb21tdW5pdGllcyBhbG9uZyB0aGUgcml2ZXIuIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktdGVjaC9zY2llbmNlL3dvcmxkcy1sYXJnZXN0LWZyZXNod2F0ZXItZmlzaC1mb3VuZC1pbi1jYW1ib2RpYS9hcnQgaWNsZTY1NTQ2OTY0LmVjZQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Amazon River",
        "option2" : "Mekong River",
        "option3" : "Yangtze River",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 95,
      "question" : "Consider the following statements regarding Belle-II Experiment\n\t1. Belle-II experiment is designed to study violations of the Standard Model and dark matter.\n\t2. Belle-II will indirectly probe new physics using intense electron-positron beams and a sensitivedetector.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQm90aCB0aGUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICBCZWxsZSBJSSBpcyBhbiB1cGdyYWRlZCBkZXRlY3RvciB0byBhbGxvdyB0aGUgZXhwZXJpbWVudCB0byByZWNvcmQgdGhlIGVub3Jtb3VzIG51bWJlcnMgb2YgcGFydGljbGUgcHJvY2Vzc2VzIHRoYXQgYXJlIHByb2R1Y2VkIGJ5IHRoZSBTdXBlciBLRUtCIGFjY2VsZXJhdG9yLiBUaGlzIGV4cGVyaW1lbnQgaXMgZGVzaWduZWQgdG8gc3R1ZHkgdmlvbGF0aW9ucyBvZiB0aGUgU3RhbmRhcmQgTW9kZWwgYW5kIGRhcmsgbWF0dGVyLiBUaGUgQmVsbGUgSUkgZXhwZXJpbWVudCB3aWxsIGFjY3VtdWxhdGUgNTAgdGltZXMgbW9yZSBkYXRhIHRoYW4gdGhlIHByZXZpb3VzIGV4cGVyaW1lbnQsIEJlbGxlLCBhbmQgcHVyc3VlIHZpb2xhdGlvbnMgb2YgdGhlIHN5bW1ldHJ5IGJldHdlZW4gcGFydGljbGVzIGFuZCBhbnRpLSBwYXJ0aWNsZXMgYXMgd2VsbCBhcyBuZXcgbGF3cyBvZiBwaHlzaWNzLiBJdCBpcyBhIGdyYW5kIGNvbGxhYm9yYXRpb24gb2YgNzAwIHNjaWVudGlzdHMgZnJvbSAyMyBjb3VudHJpZXMuIENvbXBsZW1lbnRhcnkgdG8gdGhlIGRpcmVjdCBzZWFyY2ggZXhwZXJpbWVudHMgYmVpbmcgY2FycmllZCBvdXQgYXQgdGhlIExhcmdlIEhhZHJvbiBDb2xsaWRlciBpbiBDRVJOLCBCZWxsZS1JSSB3aWxsIGluZGlyZWN0bHkgcHJvYmUgbmV3IHBoeXNpY3MgdXNpbmcgaW50ZW5zZSBlbGVjdHJvbi0gcG9zaXRyb24gYmVhbXMgYW5kIGEgc2Vuc2l0aXZlIGRldGVjdG9yLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 96,
      "question" : "Kurinji, Mullai, Marutham, Neithal and Paalai, sometime seen in the news, is relatedto",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHJpY2ggY3VsdHVyYWwgaGlzdG9yeSBvZiB0aGUgVGFtaWxzIHdpbGwgYmUgZmVhdHVyZWQgaW4gYSBwcm9qZWN0IHJlbGF0aW5nIHRvIHRoZSBuZXcgUGFybGlhbWVudCBiZWluZyBjb25zdHJ1Y3RlZCBieSB0aGUgVW5pb24gZ292ZXJubWVudCBpbiBOZXcgRGVsaGkuIFNvaWwgc2FtcGxlcyBmcm9tIGZpdmUgZWNvbG9naWNhbCByZWdpb25zIG1lbnRpb25lZCBpbiBhbmNpZW50IFRhbWlsIFNhbmdhbSBsaXRlcmF0dXJlIC0gS3VyaW5qaSwgTXVsbGFpLCBNYXJ1dGhhbSwgTmVpdGhhbCBhbmQgUGFhbGFpIC0gaGF2ZSBiZWVuIGNvbGxlY3RlZCBhbmQgc2VudCB0byB0aGUgY2FwaXRhbCByZWNlbnRseS4gIFRlc3QtMzogR1MgU3ViamVjdCAgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbCBhbWlsLW5hZHUgbi1zZW5kcy1zb2lsLXNhbXBsZXMtZm9yLXByb2plY3QtcmVsYXRpbmctdCBvLW5ldy1wYXJsaWFtZW50LWJ1aWxkaW5nL2FydGljbGU2NTU5OTkzMC5lY2U=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ancient ports of Coromandel Coast",
        "option2" : "Ayurvedic herbs found in Western Ghats",
        "option3" : "Mountain ranges located in Western Ghats",
        "option4" : "None of the above"
      }
    },
    {
      "index" : 97,
      "question" : "Madhya Pradesh is bounded by which of the following states?\n\t1. Bihar\n\t2. Jharkhand\n\t3. Haryana\n\t4. Rajasthan\n\t5. GujaratSelect the correct answer using the code given below:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgIFRlc3QtMzogR1MgU3ViamVjdCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only",
        "option2" : "2, 4 and 5 only",
        "option3" : "4 and 5 only",
        "option4" : "2, 3, 4 and 5 only     Test-3: GS Subject  "
      }
    },
    {
      "index" : 99,
      "question" : "Which of the following are east flowing rivers of India?\n\t1. Penner\n\t2. Palar\n\t3. Periyar\n\t4. KalinadiSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICBodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9MaXN0X29mX3JpdmVyc19vZl9LZXJhbGE=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "2, 3 and 4 only",
        "option4" : "1, 2 and 4 only"
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements regarding Industrial Revolutions\n\t1. The First Industrial Revolution: The revolution was about emergence of railways and Steelindustry.\n\t2. The Third Industrial Revolution: Electric engine, Heavy chemicals, automobiles and consumerdurables made their presence felt during this period.\n\t3. The Fourth Industrial Revolution: The digital revolution.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMDA=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIG1haW4gRmVhdHVyZXMgb2YgdGhlc2UgaW5kdXN0cmlhbCByZXZvbHV0aW9ucyBhcmUgYXMgZm9sbG93czogVGhlIEZpcnN0IEluZHVzdHJpYWwgUmV2b2x1dGlvbjogMTc2MCAtIDE4NDAuIEl0IHdhcyBhIHBlcmlvZCB3aGljaCB3aXRuZXNzZWQxLiAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIHRoZSBlbWVyZ2VuY2Ugb2Ygc3RlYW0gZW5naW5lLCB0ZXh0aWxlIGluZHVzdHJ5IGFuZCBtZWNoYW5pY2FsIGVuZ2luZWVyaW5nLiBIZW5jZSBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBTZWNvbmQgSW5kdXN0cmlhbCBSZXZvbHV0aW9uOiAxODcwIC0gMTkxNC4gVGhlIHJldm9sdXRpb24gd2FzIGFib3V0IGVtZXJnZW5jZSBvZjIuIHJhaWx3YXlzIGFuZCBTdGVlbCBpbmR1c3RyeS4gVGhlIFRoaXJkIEluZHVzdHJpYWwgUmV2b2x1dGlvbjogMTk2OSAtIDIwMDAuIEVsZWN0cmljIGVuZ2luZSwgSGVhdnkgY2hlbWljYWxzLDMuIGF1dG9tb2JpbGVzIGFuZCBjb25zdW1lciBkdXJhYmxlcyBtYWRlIHRoZWlyIHByZXNlbmNlIGZlbHQgZHVyaW5nIHRoaXMgcGVyaW9kLiBUaGUgRm91cnRoIEluZHVzdHJpYWwgUmV2b2x1dGlvbjogVGhlIGRpZ2l0YWwgcmV2b2x1dGlvbiwgc2luY2UgMjAwMCBvciBhIGZldyBkZWNhZGVzIHByaW9yLjQuIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL2NpdGllcy9IeWRlcmFiYWQvaW5kaWEtd2lsbC1wbGF5LWxlYWQtcm9sZS1pbi1mb3VydGgtaW5kdXN0cmlhbC1yZSB2b2x1dGlvbi9hcnRpY2xlNjU1OTI3NzguZWNlICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1, 2 and 3",
        "option3" : "1 and 3 only",
        "option4" : "2 and 3 only "
      }
    }
  ],
  "subject" : "all",
  "topic" : "History",
  "year" : "2023"
}
