{
  "testId" : "insight-2023-prelims-1-subject-wise-3",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\insight\\prelims\\insight-2023-prelims-1-subject-wise-3.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Arrange the following historical events as per chronology \n\t1. EIC established factory at Surat \n\t2. Farrukhsiyar Farman \n\t3. Portuguese captures Goa \n\t4. Battle of bidara ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIENvcnJlY3QgY2hyb25vbG9naWNhbCBvcmRlciBvZiBoaXN0b3JpY2FsIGV2ZW50cyBpcyBhcyBmb2xsb3dzOi0gIDE1MTAgOi0gQWxmb25zbyBBbGJ1cXVlcnF1ZSwgdGhlIFBvcnR1Z3Vlc2UgZ292ZXJub3IsIGNhcHR1cmVzIEdvYSBmcm9tIEJpamFwdXIgIDE2MTMgOiBBIHBlcm1hbmVudCBmYWN0b3J5IG9mIEVhc3QgSW5kaWEgQ29tcGFueSBpcyBlc3RhYmxpc2hlZCBhdCBTdXJhdCAgMTcxNyA6IFRoZSBNdWdoYWwgZW1wZXJvciBGYXJydWtoc2l5YXIgaXNzdWVzIGEgRmFybWFuLCBjYWxsZWQgdGhlIE1hZ25hIENhcnRhIG9mIHRoZSAgQ29tcGFueSwgZ2l2aW5nIHRoZSBDb21wYW55IGEgbGFyZ2UgbnVtYmVyIG9mIHRyYWRlIGNvbmNlc3Npb25zLiAgMTc1OSA6QmF0dGxlIG9mIEJpZGFyYSA6LVRoZSBFbmdsaXNoIGRlZmVhdGVkIHRoZSBEdXRjaC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 -1-2-4 ",
        "option2" : "3-2-1-4 ",
        "option3" : "2-1-3-4 ",
        "option4" : "3-4 -1-2 "
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following is / are reasons for the decline of Portuguese power in India . \n\t1. Diversion of Portuguese colonising ambitions towards south east Asia. \n\t2. Emergence of powerful dynasties in north India. \n\t3. Missionary activities. Which of the statement mentioned above is /are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFBvcnR1Z3Vlc2UgUnVsZSBpbiBJbmRpYSA6LSAgUG9ydHVndWVzZSB3ZXJlIDFzdCBjb2xvbmlhbCBwb3dlciB0byBlc3RhYmxpc2ggdHJhZGUgcmVsYXRpb25zIHdpdGggSW5kaWEgLiBWYXNjbyBEYSBHYW1hICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBhcnJpdmVkIGluIEluZGlhIGluIDE0OTguIExhdGVyIHRoZXkgZXN0YWJsaXNoZWQgZmFjdG9yaWVzIGF0IENhbGljdXQgLCBDb2NoaW4gLCBDYW5uYW5vcmUgLGV0Yy4gIEZhY3RvcnMgZm9yIERlY2xpbmUgb2YgdGhlIFBvcnR1Z3Vlc2UgaW4gSW5kaWEgIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgIHRoZSBNYXJhdGhhcyBhcyBuZWlnaGJvdXJzOyBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IC4gIChiKSBwb2xpdGljYWwgZmVhcnMgYXJvdXNlZCBieSB0aGUgYWN0aXZpdGllcyBvZiBKZXN1aXQgbWlzc2lvbmFyaWVzLCBhbmQgaGF0cmVkIG9mIHBlcnNlY3V0aW9uICAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2UgIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QgLiAgKGMpIHJpc2Ugb2YgdGhlIEVuZ2xpc2ggYW5kIER1dGNoIGNvbW1lcmNpYWwgYW1iaXRpb25zIGNoYWxsZW5naW5nIHRoZSBQb3J0dWd1ZXNlIHN1cHJlbWFjeTsgIChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlICBwcmFjdGljZXMgb2YgdGhlIFBvcnR1Z3Vlc2UgYWRtaW5pc3RyYXRpb24gaW4gSW5kaWE7ICAoZSkgZGl2ZXJzaW9uIG9mIFBvcnR1Z3Vlc2UgY29sb25pc2luZyBhbWJpdGlvbnMgdG93YXJkcyB0aGUgV2VzdCBkdWUgdG8gdGhlIGRpc2NvdmVyeSBvZiAgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1 and 3 only "
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following colonial power established their principal settlement at Serampore near Calcutta. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzOi0gVGhlIERhbmVzICBUaGUgRGFuaXNoIEVhc3QgSW5kaWEgQ29tcGFueSB3YXMgZXN0YWJsaXNoZWQgaW4gMTYxNiwgYW5kIGluIDE2MjAsIHRoZXkgZm91bmRlZCBhIGZhY3RvcnkgYXQgIFRyYW5xdWViYXIgbmVhciBUYW5qb3JlLCBvbiB0aGUgZWFzdGVybiBjb2FzdCBvZiBJbmRpYS4gVGhlaXIgcHJpbmNpcGFsIHNldHRsZW1lbnQgd2FzIGF0ICBTZXJhbXBvcmUgbmVhciBDYWxjdXR0YS4gVGhlIERhbmVzIGFyZSBiZXR0ZXIga25vd24gZm9yIHRoZWlyIG1pc3Npb25hcnkgYWN0aXZpdGllcyB0aGFuIGZvciAgY29tbWVyY2UuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "British ",
        "option2" : "French ",
        "option3" : "Dutch ",
        "option4" : "Danish "
      }
    },
    {
      "index" : 4,
      "question" : "He was the first European to interfere in the internal politics of India . He was in fact, the originator of the practice of subsidiary alliance in India.He was appointed as Governor General of Pondicherry. Later, he was recalled in 1754 due to the initial defeat of the French army in the Second Carnatic War . Above description is related to which of the following important personality regarding the colonial history of India ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzOi0gSm9zZXBoIEZyYW5jaXMgRHVwbGVpeCAgSm9zZXBoIEZyYW5jaXMgRHVwbGVpeCwgYm9ybiBpbiAxNjk3LCB3YXMgdGhlIHNvbiBvZiBhIHdlYWx0aHkgRmFybWVyLUdlbmVyYWwgb2YxLiAgVGF4ZXMgYW5kIERpcmVjdG9yLUdlbmVyYWwgb2YgdGhlIENvbXBhbnkgb2YgdGhlIEluZGllcy4gSW4gMTc0MSwgaGUgd2FzIGFwcG9pbnRlZCBhcyAgdGhlIERpcmVjdG9yLUdlbmVyYWwgb2YgRnJlbmNoIGNvbG9uaWVzIGluIEluZGlhLiAgQWNjb3JkaW5nIHRvIGhpc3RvcmlhbnMsIER1cGxlaXggcG9zc2Vzc2VkIHF1YWxpdGllcyBvZiBhbiBhZG1pbmlzdHJhdG9yLCBhIGRpcGxvbWF0LCBhbmQgYTIuICBsZWFkZXIgYmVzaWRlcyBoYXZpbmcgcG9saXRpY2FsIGluc2lnaHQgd2l0aCBhIGJyb2FkIHZpc2lvbi4gIER1cGxlaXggaW4gdGhlIFJvbGUgb2YgQWRtaW5pc3RyYXRvciBJbiAxNzQxLCBEdXBsZWl4IGJlY2FtZSB0aGUgR292ZXJub3IsIEdlbmVyYWwgb2YzLiAgUG9uZGljaGVycnkuICBEdXBsZWl4IHdhcyByZWNhbGxlZCBpbiAxNzU0IGR1ZSB0byB0aGUgaW5pdGlhbCBkZWZlYXQgb2YgdGhlIEZyZW5jaCBhcm15IGluIHRoZSBTZWNvbmQ0LiAgQ2FybmF0aWMgV2FyIGFuZCB0aGUgaGVhdnkgY29zdCBpbmN1cnJlZCBieSB0aGUgY29tcGFueSBkdWUgdG8gRHVwbGVpeCdzIHBvbGl0aWNhbCAgZGVjaXNpb25zLiAgRHVwbGVpeCB3YXMgdGhlIGZpcnN0IEV1cm9wZWFuIHRvIGludGVyZmVyZSBpbiB0aGUgaW50ZXJuYWwgcG9saXRpY3Mgb2YgdGhlIEluZGlhbiBydWxlcnMuIEhlNS4gIHN1cHBvcnRlZCBNdXp6YWZmYXIgSmFuZyBmb3IgSHlkZXJhYmFkIGFuZCBDaGFuZGEgU2FoaWIgZm9yIENhcm5hdGljLCBhbmQgaGlzICBjYW5kaWRhdGVzIGVtZXJnZWQgc3VjY2Vzc2Z1bCBhbmQsIGluIHJldHVybiwgZ2F2ZSBncmVhdCBjb25jZXNzaW9ucyB0byBEdXBsZWl4LiAgRHVwbGVpeCB3YXMsIGluIGZhY3QsIHRoZSBvcmlnaW5hdG9yIG9mIHRoZSBwcmFjdGljZSBvZiBzdWJzaWRpYXJ5IGFsbGlhbmNlIGluIEluZGlhLiBIZSBwbGFjZWQ2LiAgYSBGcmVuY2ggYXJteSBhdCBIeWRlcmFiYWQgYXQgdGhlIGV4cGVuc2Ugb2YgdGhlIHN1YmFoZGFyLiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Joseph Francis Dupleix ",
        "option2" : "Alfonso de Albuquerque ",
        "option3" : "Robert Clive ",
        "option4" : "Lord Cornwallis. "
      }
    },
    {
      "index" : 5,
      "question" : "Nadir shah invaded India during the reign of which of the following Mughal ruler :- Test-3: GS Subject ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIE11aGFtbWFkIFNoYWggIE11aGFtbWFkIFNoYWggcnVsZWQgZHVyaW5nIHBlcmlvZCAxNzE5LTQ4ICAuICBOYWRpciBTaGFoLCB0aGUgUGVyc2lhbiBlbXBlcm9yLCBhdHRhY2tlZCBJbmRpYSBpbiAxNzM4LTM5LCBjb25xdWVyZWQgTGFob3JlLCAgYW5kIGRlZmVhdGVkIHRoZSBNdWdoYWwgYXJteSBhdCBLYXJuYWwgb24gRmVicnVhcnkgMTMsIDE3MzkgYW5kICBsYXRlciBpbXByaXNvbmVkIE11aGFtbWFkIFNoYWggYW5kIGFubmV4ZWQgYXJlYXMgd2VzdCBvZiB0aGUgSW5kdXMgaW50byB0aGUgIFBlcnNpYW4gZW1waXJlLiAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Jahandar shah ",
        "option2" : "Alamgir ll ",
        "option3" : "Muhammad Shah ",
        "option4" : "Shah Alam ll "
      }
    },
    {
      "index" : 6,
      "question" : "In the context of the modern history of India , the Black Hole tragedy is related to which of the following rulers ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICdCbGFjayBIb2xlIFRyYWdlZHknICBTaXJhai11ZC1EYXVsYWggc3VjY2VlZGVkIGFzIE5hd2FiIG9mIEJlbmdhbCBpbiAxNzU2IGFmdGVyIHRoZSBkZWF0aCBvZiBBbGl2YXJkaSBraGFuLiAgU2lyYWotdWQtRGF1bGFoIGlzIGJlbGlldmVkIHRvIGhhdmUgaW1wcmlzb25lZCAxNDYgRW5nbGlzaCBwZXJzb25zLCB3aG8gd2VyZSBsb2RnZWQgaW4gYSAgdmVyeSB0aW55IHJvb20gZHVlIHRvIHdoaWNoIDEyMyBvZiB0aGVtIGRpZWQgb2Ygc3VmZm9jYXRpb24uICBUaGlzIGV2ZW50IGlzIHJlY29nbmlzZWQgYnkgaGlzdG9yaWFucyBhcyBhIGJsYWNrIGhvbGUgdHJhZ2VkeS4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Murshid Kuki khan ",
        "option2" : "Sarfaraz khan ",
        "option3" : "Siraj-ud-Daulah ",
        "option4" : "Shujauddin "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements regarding the result of Battle of Plassey. \n\t1. Mir Kasim became the Nawab of Bengal. \n\t2. The sovereignty of the English over Calcutta was recognised. \n\t3. British acquired zamindari of 24 Parganas to the English. \n\t4. Mir Jafar shifted the capital from Murshidabad to Munger . Which of the above statements is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEJhdHRsZSBvZiBQbGFzc2V5IDE3NTcgIEl0IHdhcyBhIGJhdHRsZSBmb3VnaHQgYmV0d2VlbiBTaXJhai11ZC0gRGF1bGFoIGFuZCBSb2JlcnQgQ2xpdmUuIFRoZSBCYXR0bGUgb2YgUGxhc3NleSBoYWQgIHBvbGl0aWNhbCBzaWduaWZpY2FuY2UsIGZvciBpdCBsYWlkIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBCcml0aXNoIGVtcGlyZSBpbiBJbmRpYTsgaXQgaGFzIGJlZW4gcmlnaHRseSAgcmVnYXJkZWQgYXMgdGhlIHN0YXJ0aW5nIHBvaW50IG9mIEJyaXRpc2ggcnVsZSBpbiBJbmRpYS4gIFNpZ25pZmljYW5jZSBvZiBCYXR0bGUgb2YgUGxhc3NleSA6LSAgQXMgYSByZXN1bHQgb2YgdGhpcyB2aWN0b3J5LCBNaXIgSmFmYXIgYmVjYW1lIHRoZSBOYXdhYiBvZiBCZW5nYWwuIEhlbmNlIHN0YXRlbWVudCAxIGlzMS4gICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGluY29ycmVjdC4gIEhlIGdhdmUgbGFyZ2Ugc3VtcyBvZiBtb25leSBwbHVzIHRoZSB6YW1pbmRhcmkgb2YgMjQgUGFyZ2FuYXMgdG8gdGhlIEVuZ2xpc2guIEhlbmNlMi4gIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICBUaGUgc292ZXJlaWdudHkgb2YgdGhlIEVuZ2xpc2ggb3ZlciBDYWxjdXR0YSB3YXMgcmVjb2duaXNlZCwgYW5kIHRoZSBFbmdsaXNoIHBvc3RlZCBhMy4gIHJlc2lkZW50IGF0IHRoZSBuYXdhYidzIGNvdXJ0IC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gIE1pciBLYXNpbSB3YXMgdGhlIGFibGVzdCBuYXdhYiBhbW9uZyB0aGUgc3VjY2Vzc29ycyBvZiBBbGl2YXJkaSBLaGFuLiBBZnRlciBhc3N1bWluZzQuICBwb3dlciwgTWlyIEthc2ltIHNoaWZ0ZWQgdGhlIGNhcGl0YWwgZnJvbSBNdXJzaGlkYWJhZCB0byBNdW5nZXIgaW4gQmloYXIuIEhlbmNlICBzdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 4 only ",
        "option4" : "2 and 4 only "
      }
    },
    {
      "index" : 5,
      "question" : "8. Consider the following statements regarding the treaty of Allahabad 176 \n\t1. Treaty was concluded between Robert Clive and Mughal ruler Shah Alam ll . \n\t2. Nawab of Awadh surrendered Allahabad and Kara to Emperor Shah Alam ll . \n\t3. Robert Clive annexed Awadh . \n\t4. Mughal ruler granted diwani of only Bengal and Bihar region to the East India company. Which of the above statements is /are true ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIE11aGFtbWFkIFNoYWggIE11aGFtbWFkIFNoYWggcnVsZWQgZHVyaW5nIHBlcmlvZCAxNzE5LTQ4ICAuICBOYWRpciBTaGFoLCB0aGUgUGVyc2lhbiBlbXBlcm9yLCBhdHRhY2tlZCBJbmRpYSBpbiAxNzM4LTM5LCBjb25xdWVyZWQgTGFob3JlLCAgYW5kIGRlZmVhdGVkIHRoZSBNdWdoYWwgYXJteSBhdCBLYXJuYWwgb24gRmVicnVhcnkgMTMsIDE3MzkgYW5kICBsYXRlciBpbXByaXNvbmVkIE11aGFtbWFkIFNoYWggYW5kIGFubmV4ZWQgYXJlYXMgd2VzdCBvZiB0aGUgSW5kdXMgaW50byB0aGUgIFBlcnNpYW4gZW1waXJlLiAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "1 and 2 only ",
        "option3" : "2 and 4 only ",
        "option4" : "3 and 4 only "
      }
    },
    {
      "index" : 9,
      "question" : "He was the commander of the British forces during the American War of Independence and the Governor General of Bengal when the Permanent Settlement was introduced there . Above description is related to which of the following personality regarding modern history of India ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIENoYXJsZXMgQ29ybndhbGxpcyAoMTczOC0xODA1KSwgIEhlIHdhcyB0aGUgY29tbWFuZGVyIG9mIHRoZSBCcml0aXNoIGZvcmNlcyBkdXJpbmcgdGhlIEFtZXJpY2FuIFdhciBvZiAgSW5kZXBlbmRlbmNlIGFuZCB0aGUgR292ZXJub3IgR2VuZXJhbCBvZiBCZW5nYWwgd2hlbiB0aGUgUGVybWFuZW50IFNldHRsZW1lbnQgIHdhcyBpbnRyb2R1Y2VkIHRoZXJlIGluIDE3OTMuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "John shore   Test-3: GS Subject   ",
        "option2" : "Lord Wellesley ",
        "option3" : "Charles Cornwallis ",
        "option4" : "Warren Hasting "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements regarding the Dual government of Bengal \n\t1. It is introduced by Warren Hasting . \n\t2. The Company exercised Diwani rights as the diwan and the nizamat rights through its right to nominate the deputy subahdar. \n\t3. Lord Cornwallis did away with the dual system of Bengal. Which of the above statement is / are not correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotRHVhbCBnb3Zlcm5tZW50IG9mIEJlbmdhbCAgUm9iZXJ0IENsaXZlIGludHJvZHVjZWQgdGhlIGR1YWwgc3lzdGVtIG9mIGdvdmVybm1lbnQsIGkuZS4sIHRoZSBydWxlIG9mIHRoZSB0d28tdGhlICBDb21wYW55IGFuZCB0aGUgTmF3YWItaW4gQmVuZ2FsIGluIHdoaWNoIGJvdGggdGhlIGRpd2FuaSwgaS5lLiwgY29sbGVjdGluZyByZXZlbnVlcywgIGFuZCBuaXphbWF0LCBpLmUuLCBwb2xpY2UgYW5kIGp1ZGljaWFsIGZ1bmN0aW9ucywgY2FtZSB1bmRlciB0aGUgY29udHJvbCBvZiB0aGUgQ29tcGFueS4gIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gIFRoZSBDb21wYW55IGV4ZXJjaXNlZCBkaXdhbmkgcmlnaHRzIGFzIHRoZSBkaXdhbiBhbmQgdGhlIG5pemFtYXQgcmlnaHRzIHRocm91Z2ggaXRzICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICByaWdodCB0byBub21pbmF0ZSB0aGUgZGVwdXR5IHN1YmFoZGFyLiAgSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gIFRoZSBkdWFsIHN5c3RlbSBsZWQgdG8gYW4gYWRtaW5pc3RyYXRpdmUgYnJlYWtkb3duIGFuZCBwcm92ZWQgZGlzYXN0cm91cyBmb3IgdGhlIHBlb3BsZSAgb2YgQmVuZ2FsLiBOZWl0aGVyIHRoZSBDb21wYW55IG5vciB0aGUgTmF3YWIgY2FyZWQgZm9yIGFkbWluaXN0cmF0aW9uIGFuZCBwdWJsaWMgIHdlbGZhcmUuICAgICAgICAgICAgVGhlcmVmb3JlIFdhcnJlbiBIYXN0aW5ncyBkaWQgYXdheSB3aXRoIHRoZSBkdWFsIHN5c3RlbSBpbiAxNzcyLiBIZW5jZSBzdGF0ZW1lbnQgMyAgaXMgaW5jb3JyZWN0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 3 only ",
        "option3" : "3 only ",
        "option4" : "2 and 3 only "
      }
    },
    {
      "index" : 2,
      "question" : "D. Neither 1 nor 2 . \n\t12. Consider the following statements regarding colonial history of India. \n\t1. Lord Wellesley imposed subsidiary alliance on Mysore . \n\t2. William Bentick took control of Mysore on grounds of misgovernance . \n\t3. Lord Ripon restored the kingdom to Mysore ruler . Which of the above statements is / are incorrect ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFBvcnR1Z3Vlc2UgUnVsZSBpbiBJbmRpYSA6LSAgUG9ydHVndWVzZSB3ZXJlIDFzdCBjb2xvbmlhbCBwb3dlciB0byBlc3RhYmxpc2ggdHJhZGUgcmVsYXRpb25zIHdpdGggSW5kaWEgLiBWYXNjbyBEYSBHYW1hICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBhcnJpdmVkIGluIEluZGlhIGluIDE0OTguIExhdGVyIHRoZXkgZXN0YWJsaXNoZWQgZmFjdG9yaWVzIGF0IENhbGljdXQgLCBDb2NoaW4gLCBDYW5uYW5vcmUgLGV0Yy4gIEZhY3RvcnMgZm9yIERlY2xpbmUgb2YgdGhlIFBvcnR1Z3Vlc2UgaW4gSW5kaWEgIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgIHRoZSBNYXJhdGhhcyBhcyBuZWlnaGJvdXJzOyBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IC4gIChiKSBwb2xpdGljYWwgZmVhcnMgYXJvdXNlZCBieSB0aGUgYWN0aXZpdGllcyBvZiBKZXN1aXQgbWlzc2lvbmFyaWVzLCBhbmQgaGF0cmVkIG9mIHBlcnNlY3V0aW9uICAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2UgIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QgLiAgKGMpIHJpc2Ugb2YgdGhlIEVuZ2xpc2ggYW5kIER1dGNoIGNvbW1lcmNpYWwgYW1iaXRpb25zIGNoYWxsZW5naW5nIHRoZSBQb3J0dWd1ZXNlIHN1cHJlbWFjeTsgIChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlICBwcmFjdGljZXMgb2YgdGhlIFBvcnR1Z3Vlc2UgYWRtaW5pc3RyYXRpb24gaW4gSW5kaWE7ICAoZSkgZGl2ZXJzaW9uIG9mIFBvcnR1Z3Vlc2UgY29sb25pc2luZyBhbWJpdGlvbnMgdG93YXJkcyB0aGUgV2VzdCBkdWUgdG8gdGhlIGRpc2NvdmVyeSBvZiAgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "3 only ",
        "option4" : "None of the above "
      }
    },
    {
      "index" : 13,
      "question" : "Policy of Ring Fence followed by which of the following personality during colonial history of India . ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIFRoZSBQb2xpY3kgb2YgUmluZy1GZW5jZSAgV2FycmVuIEhhc3RpbmdzIHRvb2sgY2hhcmdlIGFzIHRoZSBnb3Zlcm5vci1nZW5lcmFsIGF0IGEgY3JpdGljYWwgcGVyaW9kIG9mIEJyaXRpc2ggcnVsZSB3aGVuIHRoZSAgQnJpdGlzaCB3ZXJlIHRvIGVuY291bnRlciB0aGUgcG93ZXJmdWwgY29tYmluYXRpb24gb2YgdGhlIE1hcmF0aGFzLE15c29yZSwgYW5kIEh5ZGVyYWJhZC4gIEhlIGZvbGxvd2VkIGEgcG9saWN5IG9mIHJpbmctZmVuY2Ugd2hpY2ggYWltZWQgYXQgY3JlYXRpbmcgYnVmZmVyIHpvbmVzIHRvIGRlZmVuZCB0aGUgIENvbXBhbnkncyBmcm9udGllcnMuIEJyb2FkbHkgc3BlYWtpbmcsIGl0IHdhcyB0aGUgcG9saWN5IG9mIGRlZmVuY2Ugb2YgdGhlaXIgbmVpZ2hib3VycycgIGZyb250aWVycyBmb3Igc2FmZWd1YXJkaW5nIHRoZWlyIG93biB0ZXJyaXRvcmllcy4gICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIFRoaXMgcG9saWN5IG9mIFdhcnJlbiBIYXN0aW5ncyB3YXMgcmVmbGVjdGVkIGluIGhpcyB3YXIgYWdhaW5zdCB0aGUgTWFyYXRoYXMgYW5kIE15c29yZS4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Warren Hastings ",
        "option2" : "Lord Wellesley ",
        "option3" : "Joseph Francis Dupleix ",
        "option4" : "Alfonso de Albuquerque      Test-3: GS Subject   "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following features regarding the system of subsidiary alliance in India . \n\t1. British resident in court of Indian ruler \n\t2. Prior consultation with the company before appointing any foreign employee. \n\t3. Permanent stationing of British force within the territory of Indian ruler \n\t4. British to pay maintenance cost for it's force , Which of the above statement is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIHN1YnNpZGlhcnkgYWxsaWFuY2UgaW4gSW5kaWEgIEl0IHdhcyBpbnRyb2R1Y2VkIGJ5IExvcmQgV2VsbGVzbGV5IC4gIEZvbGxvd2luZyB3ZXJlIHRoZSBrZXkgZmVhdHVyZXMgb2Ygc3Vic2lkaWFyeSBhbGxpYW5jZSBzeXN0ZW0gIEluZGlhbiBzdGF0ZSdzIHJ1bGVyIHdhcyBjb21wZWxsZWQgdG8gYWNjZXB0IHRoZSBwZXJtYW5lbnQgc3RhdGlvbmluZyBvZiBhIEJyaXRpc2ggZm9yY2UxLiAgd2l0aGluIGhpcyB0ZXJyaXRvcnkgLiBIZW5jZSBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0ICBJbmRpYW4gcnVsZXIgYXNrZWQgdG8gcGF5IGEgc3Vic2lkeSBmb3IgaXRzIG1haW50ZW5hbmNlLiBIZW5jZSBzdGF0ZW1lbnQgNCBpczIuICBpbmNvcnJlY3QgIFRoZSBJbmRpYW4gcnVsZXIgaGFkIHRvIGFncmVlIHRvIHRoZSBwb3N0aW5nIG9mIGEgQnJpdGlzaCByZXNpZGVudCBpbiBoaXMgY291cnQuIEhlbmNlMy4gIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgIFRoZSBJbmRpYW4gcnVsZXIgY291bGQgbm90IGVtcGxveSBhbnkgRXVyb3BlYW4gaW4gaGlzIHNlcnZpY2Ugd2l0aG91dCB0aGUgcHJpb3I0LiAgY29uc3VsdGF0aW9uIHdpdGggdGhlIENvbXBhbnkuIE5vciBjb3VsZCBoZSBnbyB0byB3YXIgb3IgbmVnb3RpYXRlIHdpdGggYW55IG90aGVyIEluZGlhbiAgcnVsZXIgd2l0aG91dCBjb25zdWx0aW5nIHRoZSBnb3Zlcm5vciBnZW5lcmFsLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgSW4gcmV0dXJuIGZvciBhbGwgdGhpcywgdGhlIEJyaXRpc2ggd291bGQgZGVmZW5kIHRoZSBydWxlciBmcm9tIGhpcyBlbmVtaWVzIGFuZCBhZG9wdCBhNS4gIHBvbGljeSBvZiBub25pbnRlcmZlcmVuY2UgaW4gdGhlIGludGVybmFsIG1hdHRlcnMgb2YgdGhlIGFsbGllZCBzdGF0ZS4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only ",
        "option2" : "1 , 2 and 3 only ",
        "option3" : "3 and 4 only ",
        "option4" : "2 and 4 only "
      }
    },
    {
      "index" : 15,
      "question" : "Doctrine of lapse was used during the colonial history of India . Consider the following statements regarding that \n\t1. Adopted son could be the heir of state but not the private property of his foster father . \n\t2. By using the doctrine of lapse Dalhousie annexed only eight states during his tenure . \n\t3. Dalhousie annexed Awadh by applying the doctrine of lapse . Which of the above statement is / are true ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotRG9jdHJpbmUgb2YgTGFwc2UgIEluIHNpbXBsZSB0ZXJtcywgdGhlIGRvY3RyaW5lIHN0YXRlZCB0aGF0IHRoZSBhZG9wdGVkIHNvbiBjb3VsZCBiZSB0aGUgaGVpciB0byBoaXMgZm9zdGVyICBmYXRoZXIncyBwcml2YXRlIHByb3BlcnR5LCBidXQgbm90IHRoZSBzdGF0ZTsgaXQgd2FzIGZvciB0aGUgcGFyYW1vdW50IHBvd2VyICh0aGUgQnJpdGlzaCkgdG8gIGRlY2lkZSB3aGV0aGVyIHRvIGJlc3RvdyB0aGUgc3RhdGUgb24gdGhlIGFkb3B0ZWQgc29uIG9yIHRvIGFubmV4IGl0LiBIZW5jZSBzdGF0ZW1lbnQgIDEgaXMgaW5jb3JyZWN0ICBEYWxob3VzaWUgYW5uZXhlZCBlaWdodCBzdGF0ZXMgZHVyaW5nIGhpcyBlaWdodCB5ZWFyIHRlbnVyZSAoMTg0OC01NikgYXMgZ292ZXJub3IgIGdlbmVyYWwuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBJbiB0aGVzZSBlaWdodCB5ZWFycywgaGUgYW5uZXhlZCBzb21lIHF1YXJ0ZXIgbWlsbGlvbiBzcXVhcmUgbWlsZXMgb2YgdGhlIHRlcnJpdG9yeSBvZiAgSW5kaWEuIEhpcyByZWlnbiBhbG1vc3QgY29tcGxldGVkIHRoZSBwcm9jZXNzIG9mIGV4cGFuc2lvbiBvZiBCcml0aXNoIHBvd2VyIGluIEluZGlhLCB3aGljaCAgYmVnYW4gd2l0aCB0aGUgdmljdG9yeSBvdmVyIFNpcmFqLXVkLURhdWxhaCBhdCBQbGFzc2V5IGluIDE3NTcuICBMb3JkIERhbGhvdXNpZSBhbm5leGVkIEF3YWRoIGluIDE4NTYgYWZ0ZXIgZGVwb3NpbmcgTmF3YWIgV2FqaWQgQWxpIFNoYWggb24gZ3JvdW5kcyAgb2YgbWlzZ292ZXJubWVudC4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only ",
        "option2" : "1 and 3 only ",
        "option3" : "2 and 3 only ",
        "option4" : "3 only "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements regarding Anglo - Nepalese relations \n\t1. William Bentick concluded the Treaty of Sagauli with the Gorkhas . \n\t2. With this agreement British got better facilities for trade with Central Asia . Which of the above statement is/ are incorrect ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEFuZ2xvLU5lcGFsZXNlIFJlbGF0aW9ucyAgQmFja2dyb3VuZCA6LSAgVGhlIEdvcmtoYXMgd3Jlc3RlZCBjb250cm9sIG9mIE5lcGFsIGZyb20gdGhlIHN1Y2Nlc3NvcnMgb2YgUmFuaml0IE1hbGxhIG9mIEJoYXRnYW9uIGluIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding foreign relations of British rule in India . \n\t1. Commercial need was the main reason for the second Burma war . \n\t2. It was concluded with the Treaty of Yandabo by Lord Dalhousie. Which of the above statement is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIFNlY29uZCBCdXJtYSBXYXIgKDE4NTIpICAxIC5UaGUgc2Vjb25kIHdhciB3YXMgdGhlIHJlc3VsdCBvZiB0aGUgQnJpdGlzaCBjb21tZXJjaWFsIG5lZWQgYW5kIHRoZSBpbXBlcmlhbGlzdCBwb2xpY3kgb2YgIExvcmQgRGFsaG91c2llLiBIZW5jZSBzdGF0ZW1lbnQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMSBpcyBjb3JyZWN0LiAgIFRoZSBCcml0aXNoIG1lcmNoYW50cyB3ZXJlIGtlZW4gdG8gZ2V0IGhvbGQgb2YgdGltYmVyIHJlc291cmNlcyBvZiB1cHBlciAgICAgIEJ1cm1hIGFuZCBhbHNvICBzb3VnaHQgZnVydGhlciBpbnJvYWRzIGludG8gdGhlIEJ1cm1lc2UgbWFya2V0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2   Test-3: GS Subject   "
      }
    },
    {
      "index" : 2,
      "question" : "D. Neither 1 nor  \n\t20. In the context of Modern history of India 'Kundara Proclamation' is related to Which of the above option is correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFBvcnR1Z3Vlc2UgUnVsZSBpbiBJbmRpYSA6LSAgUG9ydHVndWVzZSB3ZXJlIDFzdCBjb2xvbmlhbCBwb3dlciB0byBlc3RhYmxpc2ggdHJhZGUgcmVsYXRpb25zIHdpdGggSW5kaWEgLiBWYXNjbyBEYSBHYW1hICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBhcnJpdmVkIGluIEluZGlhIGluIDE0OTguIExhdGVyIHRoZXkgZXN0YWJsaXNoZWQgZmFjdG9yaWVzIGF0IENhbGljdXQgLCBDb2NoaW4gLCBDYW5uYW5vcmUgLGV0Yy4gIEZhY3RvcnMgZm9yIERlY2xpbmUgb2YgdGhlIFBvcnR1Z3Vlc2UgaW4gSW5kaWEgIChhKSBFbWVyZ2VuY2Ugb2YgcG93ZXJmdWwgZHluYXN0aWVzIGluIEVneXB0LCBQZXJzaWEsIGFuZCBub3J0aCBJbmRpYSBhbmQgdGhlIGFwcGVhcmFuY2Ugb2YgIHRoZSBNYXJhdGhhcyBhcyBuZWlnaGJvdXJzOyBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IC4gIChiKSBwb2xpdGljYWwgZmVhcnMgYXJvdXNlZCBieSB0aGUgYWN0aXZpdGllcyBvZiBKZXN1aXQgbWlzc2lvbmFyaWVzLCBhbmQgaGF0cmVkIG9mIHBlcnNlY3V0aW9uICAoc3VjaCBhcyBpbnF1aXNpdGlvbikgdGhhdCBjYXVzZWQgcmVhY3Rpb24gYWdhaW5zdCBQb3J0dWd1ZXNlIHNwaXJpdHVhbCBwcmVzc3VyZTsgSGVuY2UgIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QgLiAgKGMpIHJpc2Ugb2YgdGhlIEVuZ2xpc2ggYW5kIER1dGNoIGNvbW1lcmNpYWwgYW1iaXRpb25zIGNoYWxsZW5naW5nIHRoZSBQb3J0dWd1ZXNlIHN1cHJlbWFjeTsgIChkKSByYW1wYW50IGNvcnJ1cHRpb24sIGdyZWVkLCBhbmQgc2VsZmlzaG5lc3MgYWxvbmcgd2l0aCBwaXJhY3kgYW5kIGNsYW5kZXN0aW5lIHRyYWRlICBwcmFjdGljZXMgb2YgdGhlIFBvcnR1Z3Vlc2UgYWRtaW5pc3RyYXRpb24gaW4gSW5kaWE7ICAoZSkgZGl2ZXJzaW9uIG9mIFBvcnR1Z3Vlc2UgY29sb25pc2luZyBhbWJpdGlvbnMgdG93YXJkcyB0aGUgV2VzdCBkdWUgdG8gdGhlIGRpc2NvdmVyeSBvZiAgQnJhemlsLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1857 revolt ",
        "option2" : "Diwan Velu Thampi's revolt ",
        "option3" : "Poligars revolt ",
        "option4" : "Swadeshi movement "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements regarding the Economic history of India . \n\t1. Extortion by company servants \n\t2. Home charges \n\t3. Duty free trade provided to British \n\t4. Purchasing goods out of revenues and exporting to England \n\t5. Remittances and other incomes by officials send to England . Which of the above features was / were constituents drain of wealth ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICBEcmFpbiBvZiB3ZWFsdGggdGhlb3J5IHJlZmVycyB0byBhIHBvcnRpb24gb2YgbmF0aW9uYWwgcHJvZHVjdCBvZiBJbmRpYSB3aGljaCB3YXMgbm90ICBhdmFpbGFibGUgZm9yIGNvbnN1bXB0aW9uIG9mIGl0cyBvd24gcGVvcGxlIC4gIENvbnN0aXR1ZW50cyBvZiBkcmFpbiBvZiB3ZWFsdGggOiAgRXh0b3J0aW9uIGJ5IGNvbXBhbnkgc2VydmFudHMgIEhvbWUgY2hhcmdlcyAgRHV0eSBmcmVlIHRyYWRlIHByb3ZpZGVkIHRvIEJyaXRpc2ggIFB1cmNoYXNpbmcgZ29vZHMgb3V0IG9mIHJldmVudWVzIGFuZCBleHBvcnRpbmcgdG8gRW5nbGFuZCAgUmVtaXR0YW5jZXMgYW5kIG90aGVyIGluY29tZXMgYnkgb2ZmaWNpYWxzIHNlbmQgdG8gRW5nbGFuZCAuICBIZWZ0eSBpbnRlcmVzdCB3ZXJlIHBhaWQgdG8gQnJpdGlzaCBpbnZlc3RvcnMuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 5 only ",
        "option2" : "1 , 2 and 3 only ",
        "option3" : "3 and 4 only ",
        "option4" : "All of the above      Test-3: GS Subject   "
      }
    },
    {
      "index" : 3,
      "question" : "22. Consider the following statements regarding regulating Act of 177 \n\t1. Governor General and a council consisting of 15 members were to be carried out administration in Bengal. \n\t2. Company director were required to submit all correspondence regarding revenue affairs and civil and military administration to the government Which of the above statement is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzOi0gVGhlIERhbmVzICBUaGUgRGFuaXNoIEVhc3QgSW5kaWEgQ29tcGFueSB3YXMgZXN0YWJsaXNoZWQgaW4gMTYxNiwgYW5kIGluIDE2MjAsIHRoZXkgZm91bmRlZCBhIGZhY3RvcnkgYXQgIFRyYW5xdWViYXIgbmVhciBUYW5qb3JlLCBvbiB0aGUgZWFzdGVybiBjb2FzdCBvZiBJbmRpYS4gVGhlaXIgcHJpbmNpcGFsIHNldHRsZW1lbnQgd2FzIGF0ICBTZXJhbXBvcmUgbmVhciBDYWxjdXR0YS4gVGhlIERhbmVzIGFyZSBiZXR0ZXIga25vd24gZm9yIHRoZWlyIG1pc3Npb25hcnkgYWN0aXZpdGllcyB0aGFuIGZvciAgY29tbWVyY2UuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements regarding Pitt's India Act 1784 \n\t1. Company became a subordinate department of the state . \n\t2. The company's territories in India were termed British possessions . Which of the above statement is / are correct. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIFBpdHQncyBJbmRpYSBBY3Qgb2YgMTc4NCAgVGhlIFBpdHQncyBJbmRpYSBBY3QgZ2F2ZSB0aGUgQnJpdGlzaCBnb3Zlcm5tZW50IGEgbGFyZ2UgbWVhc3VyZSBvZiBjb250cm9sIG92ZXIgdGhlICBDb21wYW55J3MgYWZmYWlycy4gIEluIGZhY3QsIHRoZSBDb21wYW55IGJlY2FtZSBhIHN1Ym9yZGluYXRlIGRlcGFydG1lbnQgb2YgdGhlIFN0YXRlLiAgIFRoZSBDb21wYW55J3MgdGVycml0b3JpZXMgaW4gSW5kaWEgd2VyZSB0ZXJtZWQgJ0JyaXRpc2ggcG9zc2Vzc2lvbnMnLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statement regarding the Colonial history of India \n\t1. The charter Act of 1793 led to the disappearing of the Maal Adalats . \n\t2. Maal adalat were revenue court presided by collectors. Which of the above statement is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIE1hYWwgQWRhbGF0cyAgTWFhbCBBZGFsYXRzIHdlcmUgcmV2ZW51ZSBjb3VydHMgaW4gZWFjaCBkaXN0cmljdCB3aGljaCBleGNsdXNpdmVseSBkZWFsdCB3aXRoIHJldmVudWUgIG1hdHRlcnMuICBUaGlzIGNvdXJ0IHdhcyBwcmVzaWRlZCBieSB0aGUgQ29sbGVjdG9yIHdobyBkZWNpZGVkIGNhc2VzIHJlbGF0ZWQgdG8gcmV2ZW51ZSBhcyBoZSB3YXMgIGluIGNoYXJnZSBvZiByZXZlbnVlIG1hdHRlcnMuICBUaGUgQ2hhcnRlciBBY3Qgb2YgMTc5MyAg4pePIFRoZSBhY3QgcmVuZXdlZCB0aGUgQ29tcGFueSdzIGNvbW1lcmNpYWwgcHJpdmlsZWdlcyBmb3IgdGhlIG5leHQgMjAgeWVhcnMuICDil48gVGhlIHJldmVudWUgYWRtaW5pc3RyYXRpb24gd2FzIHNlcGFyYXRlZCBmcm9tIHRoZSBqdWRpY2lhcnkgZnVuY3Rpb25zLCBhbmQgdGhpcyBsZWQgdG8gIGRpc2FwcGVhcmluZyBvZiB0aGUgTWFhbCBBZGFsYXRzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements regarding Charter Act 1813 \n\t1. The Company's monopoly over trade in India ended . \n\t2. Christian missionaries were permitted in India . \n\t3. A fund was created for promoting literature and science among natives of India. Which of the above statement is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIENoYXJ0ZXIgQWN0IDE4MTMgLiAgUHJvdmlzaW9ucyBvZiBjaGFydGVyIGFjdCAxODEzIDotICDil48gVGhlIENvbXBhbnkncyBtb25vcG9seSBvdmVyIHRyYWRlIGluIEluZGlhIGVuZGVkLCBidXQgdGhlIENvbXBhbnkgcmV0YWluZWQgdGhlIHRyYWRlIHdpdGggIENoaW5hIGFuZCB0aGUgdHJhZGUgaW4gdGVhLiAg4pePIEEgc3VtIG9mIG9uZSBsYWtoIHJ1cGVlcyB3YXMgdG8gYmUgc2V0IGFzaWRlIGZvciB0aGUgcmV2aXZhbCwgcHJvbW90aW9uLCBhbmQgZW5jb3VyYWdlbWVudCAgb2YgbGl0ZXJhdHVyZSwgbGVhcm5pbmcsIGFuZCBzY2llbmNlIGFtb25nIHRoZSBuYXRpdmVzIG9mIEluZGlhLCBldmVyeSB5ZWFyLiAoVGhpcyB3YXMgYW4gIGltcG9ydGFudCBzdGF0ZW1lbnQgZnJvbSB0aGUgcG9pbnQgb2YgU3RhdGUncyByZXNwb25zaWJpbGl0eSBmb3IgZWR1Y2F0aW9uLikgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIOKXjyBDaHJpc3RpYW4gbWlzc2lvbmFyaWVzIHdlcmUgYWxzbyBwZXJtaXR0ZWQgdG8gY29tZSB0byBJbmRpYSBhbmQgcHJlYWNoIHRoZWlyIHJlbGlnaW9uLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 2 only ",
        "option3" : "All of the above ",
        "option4" : "2 and 3 only   Test-3: GS Subject   "
      }
    },
    {
      "index" : 26,
      "question" : "In the context of colonial history of India ,Woodhead commission was appointed as ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICBUaGUgRmFtaW5lIElucXVpcnkgQ29tbWlzc2lvbiwgYWxzbyBrbm93biBhcyB0aGUgV29vZGhlYWQgQ29tbWlzc2lvbiwgd2FzIGFwcG9pbnRlZCBieSAgdGhlIEdvdmVybm1lbnQgb2YgQnJpdGlzaCBJbmRpYSBpbiAxOTQ0IHRvIGludmVzdGlnYXRlIHRoZSAxOTQzIEJlbmdhbCBmYW1pbmUuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Irrigation commission ",
        "option2" : "Famine inspection commission ",
        "option3" : "Education commission ",
        "option4" : "Police commission "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements regarding Economic policies of British rule in India. \n\t1. Mahalwari system was introduced in the Madras region by William Bentick and Holt Mackenzie . \n\t2. The land revenue settlement was made permanent in the mahalwari region. Which of the above statement is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE1haGFsd2FyaSBTeXN0ZW0gIE1haGFsLCBhIEhpbmRpIHdvcmQgZGVub3RpbmcgYSBob3VzZSBvciBieSBleHRlbnNpb24gYW4gZXN0YXRlLCB3YXMgdGhlIGJhc2lzIG9mIHJldmVudWUgIGFzc2Vzc21lbnQgaW4gdGhpcyBzeXN0ZW07IGluIHRoZSBtYWhhbHdhcmkgc3lzdGVtLCBhIG1haGFsIGNvdWxkIGJlIGEgdmlsbGFnZSBvciBhICBncm91cCBvZiB2aWxsYWdlcyBhbmQgd2FzIGNvbnNpZGVyZWQgYXMgdGhlIHVuaXQgZm9yIGFzc2Vzc21lbnQgb2YgdGF4LiAgVGhlIGFkb3B0aW9uIG9mIG1haGFsd2FyaSBzeXN0ZW0gaW4gcGFydHMgb2YgTm9ydGhlcm4gSW5kaWEgYW5kIG5vcnRoIHdlc3QgcHJvdmluY2VzIG9mICBJbmRpYSBiZWdhbiB0byBiZSBjb25zaWRlcmVkIGluIDE4MTkgLiAgSXQgIHdhcyBpbnRyb2R1Y2VkIGJ5IFdpbGxpYW0gQmVudGljayBhbmQgSG9sdCB3aGVuIEhvbHQgTWFja2VuemllLCB0aGUgc2VjcmV0YXJ5IHRvIHRoZSAgYm9hcmQgb2YgY29tbWlzc2lvbmVycywgcmVjb21tZW5kZWQgdGhpcyBmb3JtIG9mIHRoZSBzZXR0bGVtZW50IG9mIGxhbmQgcmV2ZW51ZS4gIEluIHRoZSBtYWhhbHdhcmkgcmVnaW9ucywgdGhlIGxhbmQgcmV2ZW51ZSB3YXMgcmV2aXNlZCBwZXJpb2RpY2FsbHkuICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 28,
      "question" : "In the context of the colonial history of India, which of the following was / were Nationalist critique of colonial economy . \n\t1. Dadabhai Naoroji \n\t2. Romesh Chandra Dutt \n\t3. Gopal Ganesh Agarkar \n\t4. G. Subramania Iyer \n\t5. Surendranath Banerjee \n\t6. Mahadev Govind Ranade Which of the above option is / are correct. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICBOYXRpb25hbGlzdCBjcml0aXF1ZSBvZiBjb2xvbmlhbCBlY29ub215IC4gIFRoZSBmb3JlbW9zdCBhbW9uZyBlY29ub21pYyBhbmFseXN0cyB3YXMgICBEYWRhYmhhaSBOYW9yb2ppLCB0aGUgJ0dyYW5kIE9sZCBNYW4gb2YgSW5kaWEnLCB3aG8gYWZ0ZXIgYSBicmlsbGlhbnQgYW5hbHlzaXMgb2YgdGhlICBjb2xvbmlhbCBlY29ub215IHB1dCBmb3J3YXJkIHRoZSB0aGVvcnkgb2YgZWNvbm9taWMgZHJhaW4gaW4gUG92ZXJ0eSBhbmQgVW5Ccml0aXNoIFJ1bGUgIGluIEluZGlhLiAgT3RoZXIgZWNvbm9taWMgYW5hbHlzdHMgaW5jbHVkZWQgIEp1c3RpY2UgTWFoYWRldiBHb3ZpbmQgUmFuYWRlLDEuICBSb21lc2ggQ2hhbmRyYSBEdXR0IChUaGUgRWNvbm9taWMgSGlzdG9yeSBvZiBJbmRpYSksMi4gIEdvcGFsIEtyaXNobmEgR29raGFsZSwzLiAgRy4gU3VicmFtYW5pYSBJeWVyLCBhbmQ0LiAgUHJpdGh3aXNoY2hhbmRyYSBSYXkuNS4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 , 2 and 5 only ",
        "option2" : "1, 2 ,4 and 6 only ",
        "option3" : "3 ,5 and 6 only ",
        "option4" : "2 , 4 and 6 only "
      }
    },
    {
      "index" : 29,
      "question" : "In the context of colonial history of India, Lottery committee was related to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEFuYWx5c2lzIDotIExvdHRlcnkgQ29tbWl0dGVlICgxODE3KSAgRWFybGllciBpbiBjb2xvbmlhbCBJbmRpYSAsdGhlIHdvcmsgb2YgdG93biBwbGFubmluZyB3YXMgY2FycmllZCBvbiBieSB0aGUgTG90dGVyeSAgQ29tbWl0dGVlICgxODE3KSB3aXRoIHRoZSBoZWxwIG9mIHRoZSBnb3Zlcm5tZW50LiAgVGhlIExvdHRlcnkgQ29tbWl0dGVlIHdhcyBzbyBuYW1lZCBiZWNhdXNlIGZ1bmRzIGZvciB0b3duIGltcHJvdmVtZW50IHdlcmUgcmFpc2VkICB0aHJvdWdoIHB1YmxpYyBsb3R0ZXJpZXMuICAgSW4gb3RoZXIgd29yZHMsIGluIHRoZSBlYXJseSBkZWNhZGVzIG9mIHRoZSBuaW5ldGVlbnRoIGNlbnR1cnkgcmFpc2luZyBmdW5kcyBmb3IgdGhlIGNpdHkgIHdhcyBzdGlsbCB0aG91Z2h0IHRvIGJlIHRoZSByZXNwb25zaWJpbGl0eSBvZiBwdWJsaWMtIG1pbmRlZCBjaXRpemVucyBhbmQgbm90IGV4Y2x1c2l2ZWx5ICB0aGF0IG9mIHRoZSBnb3Zlcm5tZW50LiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Land revenue ",
        "option2" : "Labour reforms ",
        "option3" : "Town planning ",
        "option4" : "Local government "
      }
    },
    {
      "index" : 30,
      "question" : "British government established several hill station due to which of following reasons \n\t1. To protect army from epidemics . \n\t2. Guarding frontiers \n\t3. Development of sanitariums. Test-3: GS Subject Which of the above statement is/ are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEhpbGwgc3RhdGlvbnMgIEhpbGwgc3RhdGlvbnMgd2VyZSBhIGRpc3RpbmN0aXZlIGZlYXR1cmUgb2YgY29sb25pYWwgdXJiYW4gZGV2ZWxvcG1lbnQuIFRoZSBmb3VuZGluZyBhbmQgIHNldHRsaW5nIG9mIGhpbGwgc3RhdGlvbnMgd2FzIGluaXRpYWxseSBjb25uZWN0ZWQgd2l0aCB0aGUgbmVlZHMgb2YgdGhlIEJyaXRpc2ggYXJteS4gIEhpbGwgc3RhdGlvbnMgYmVjYW1lIHN0cmF0ZWdpYyBwbGFjZXMgZm9yIGJpbGxldGluZyB0cm9vcHMsIGd1YXJkaW5nIGZyb250aWVycyBhbmQgbGF1bmNoaW5nICBjYW1wYWlnbnMgYWdhaW5zdCBlbmVteSBydWxlcnMuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBUaGUgdGVtcGVyYXRlIGFuZCBjb29sIGNsaW1hdGUgb2YgdGhlIEluZGlhbiBoaWxscyB3YXMgc2VlbiBhcyBhbiBhZHZhbnRhZ2UsIHBhcnRpY3VsYXJseSAgc2luY2UgdGhlIEJyaXRpc2ggYXNzb2NpYXRlZCBob3Qgd2VhdGhlciB3aXRoIGVwaWRlbWljcy4gQ2hvbGVyYSBhbmQgbWFsYXJpYSB3ZXJlICBwYXJ0aWN1bGFybHkgZmVhcmVkIGFuZCBhdHRlbXB0cyB3ZXJlIG1hZGUgdG8gcHJvdGVjdCB0aGUgYXJteSBmcm9tIHRoZXNlIGRpc2Vhc2VzLiAgSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gIFRoZXNlIGhpbGwgc3RhdGlvbnMgd2VyZSBhbHNvIGRldmVsb3BlZCBhcyBzYW5pdGFyaXVtcywgaS5lLiwgcGxhY2VzIHdoZXJlIHNvbGRpZXJzIGNvdWxkICBiZSBzZW50IGZvciByZXN0IGFuZCByZWNvdmVyeSBmcm9tIGlsbG5lc3Nlcy4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 3 only ",
        "option3" : "2only ",
        "option4" : "All of the above "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statement regarding the effects of colonial economic policies. \n\t1. India's share of world manufacturing exports fell to less than 3 % under British rule. \n\t2. Promoted indigenous industries. \n\t3. Commercialisation of Indian agriculture. Which of the above statement is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEVjb25vbWljIEltcGFjdCBvZiBCcml0aXNoIFJ1bGUgaW4gSW5kaWEgIDEuUmVkdWN0aW9uIG9mIHRyYWRlIHNoYXJlIDotIEFjY29yZGluZyB0byBoaXN0b3JpYW5zLCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSAxOHRoIGNlbnR1cnksIEluZGlhICBoYWQgc29tZSAyMyBwZXIgY2VudCBvZiB0aGUgd29ybGQgZWNvbm9teS4gVGhpcyBzaGFyZSBjYW1lIGRvd24gdG8gc29tZSAzIHBlciBjZW50IHdoZW4gIEluZGlhIGdvdCBpbmRlcGVuZGVuY2UuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgIFtJbmRpYSdzIHNoYXJlIG9mIHdvcmxkIG1hbnVmYWN0dXJpbmcgZXhwb3J0cyBmZWxsIGZyb20gMjcgcGVyIGNlbnQgdG8gMiBwZXIgY2VudCB1bmRlciBCcml0aXNoICBydWxlLiAgLVNoYXNoaSBUaGFyb29yIGluIEFuIEVyYSBvZiBEYXJrbmVzc10gIDIuQ29tbWVyY2lhbGlzYXRpb24gb2YgSW5kaWFuIEFncmljdWx0dXJlOi0gIFNvIGZhciwgYWdyaWN1bHR1cmUgaGFkIGJlZW4gYSB3YXkgb2YgbGlmZSByYXRoZXIgdGhhbiBhIGJ1c2luZXNzIGVudGVycHJpc2UuICBOb3cgQ29tbWVyY2lhbCBjcm9wcyBsaWtlIGNvdHRvbiwganV0ZSwgZ3JvdW5kbnV0LCBvaWxzZWVkcyxzdWdhcmNhbmUgZXRjIHdlcmUgZ3Jvd24gb24gbGFyZ2UgIHNjYWxlIC4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 3 only ",
        "option3" : "2 and 3 only ",
        "option4" : "3 only "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements regarding colonial history of India \n\t1. Battle of St. Thome was fought during second Carnatic war \n\t2. It revealed importance of naval forces to colonial powers in India. Which of the following statements is/ are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEJhdHRsZSBvZiBTdC4gVGhvbWUgIFRoZSBGaXJzdCBDYXJuYXRpYyBXYXIgKCAxNzQwLTQ4KSAgaXMgcmVtZW1iZXJlZCBmb3IgdGhlIEJhdHRsZSBvZiBTdC4gVGhvbWUgKGluIE1hZHJhcykgIC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiAgSXQgd2FzICBmb3VnaHQgYmV0d2VlbiB0aGUgRnJlbmNoIGZvcmNlcyBhbmQgdGhlIGZvcmNlcyBvZiBBbndhcnVkZGluLCB0aGUgTmF3YWIgb2YgIENhcm5hdGljLCB0byB3aG9tIHRoZSBFbmdsaXNoIGFwcGVhbGVkIGZvciBoZWxwLiAgQSBzbWFsbCBGcmVuY2ggYXJteSB1bmRlciBDYXB0YWluIFBhcmFkaXNlIGRlZmVhdGVkIHRoZSBzdHJvbmcgSW5kaWFuIGFybXkgdW5kZXIgIE1haGZ1eiBLaGFuIGF0IFN0LiBUaG9tZSBvbiB0aGUgYmFua3Mgb2YgdGhlIFJpdmVyIEFkeWFyLiAgVGhpcyB3YXMgYW4gZXllLW9wZW5lciBmb3IgdGhlIEV1cm9wZWFucyBpbiBJbmRpYTogaXQgcmV2ZWFsZWQgdGhhdCBldmVuIGEgc21hbGwgIGRpc2NpcGxpbmVkIGFybXkgY291bGQgZWFzaWx5IGRlZmVhdCBhIG11Y2ggbGFyZ2VyIEluZGlhbiBhcm15LiAgRnVydGhlciwgdGhpcyB3YXIgYWRlcXVhdGVseSBicm91Z2h0IG91dCB0aGUgaW1wb3J0YW5jZSBvZiBuYXZhbCBmb3JjZSBpbiB0aGUgQW5nbG8tICBGcmVuY2ggY29uZmxpY3QgaW4gdGhlIERlY2Nhbi4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 33,
      "question" : "In the context of colonial history of India, which of the following considered as reasons for the English success over other colonial powers in India \n\t1. Use of debt market by French , Portuguese and other colonial powers \n\t2. The English East India Company was largely owned by the state and shareholders had little interest in issues of company . Which of the above statement is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEVuZ2xhbmQgZW1lcmdlZCBhcyB0aGUgbW9zdCBwb3dlcmZ1bCBhbmQgc3VjY2Vzc2Z1bCBieSB0aGUgZW5kIG9mIHRoZSAxOHRoICBjZW50dXJ5LiAgVGhlIG1ham9yIGZhY3RvcnMgd2hpY2ggY2FuIGJlIGF0dHJpYnV0ZWQgZm9yIHRoZSBzdWNjZXNzOi0gIFN0cnVjdHVyZSBhbmQgTmF0dXJlIG9mIHRoZSBUcmFkaW5nIENvbXBhbmllczotICBUaGUgRW5nbGlzaCBFYXN0IEluZGlhIGNvbXBhbnkgd2FzIGNvbnRyb2xsZWQgYnkgYSBib2FyZCBvZiBkaXJlY3RvcnMgd2hvc2UgbWVtYmVyczEuICB3ZXJlIGVsZWN0ZWQgYW5udWFsbHkuIFRoZSBzaGFyZWhvbGRlcnMgb2YgdGhlIGNvbXBhbnkgZXhlcmNpc2VkIGNvbnNpZGVyYWJsZSAgaW5mbHVlbmNlLCBhcyB0aGUgdm90ZXMgY291bGQgYmUgYm91Z2h0IGFuZCBzb2xkIHRocm91Z2ggdGhlIHB1cmNoYXNlIG9mIHNoYXJlcy4gIFRoZSB0cmFkaW5nIGNvbXBhbmllcyBvZiBGcmFuY2UgYW5kIFBvcnR1Z2FsIHdlcmUgbGFyZ2VseSBvd25lZCBieSB0aGUgU3RhdGUsIGFuZCB0aGVpcjIuICBuYXR1cmUgd2FzIGluIG1hbnkgd2F5cyBmZXVkYWxpc3RpYy4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgSW4gdGhlIEZyZW5jaCBjb21wYW55LFRoZSBzaGFyZWhvbGRlcnMgdG9vayB2ZXJ5IGxpdHRsZSBpbnRlcmVzdCBpbiBwcm9tb3RpbmcgdGhlMy4gICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIHByb3NwZXJpdHkgb2YgdGhlIGNvbXBhbnksIGJlY2F1c2UgdGhlIFN0YXRlIGd1YXJhbnRlZWQgYSBkaXZpZGVuZCB0byB0aGUgc2hhcmVob2xkZXJzLiAgVXNlIG9mIERlYnQgTWFya2V0Oi0gT25lIG9mIHRoZSBtYWpvciBhbmQgaW5ub3ZhdGl2ZSByZWFzb25zIHdoeSBCcml0YWluIHN1Y2NlZWRlZCAgYmV0d2VlbiB0aGUgbWlkLTE4dGggY2VudHVyeSBhbmQgdGhlIG1pZC0xOXRoIGNlbnR1cnksIHdoaWxlIG90aGVyIEV1cm9wZWFuIG5hdGlvbnMgIGZlbGwsIHdhcyB0aGF0IGl0IHVzZWQgdGhlIGRlYnQgbWFya2V0cyB0byBmdW5kIGl0cyB3YXJzLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyAgaW5jb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following events from colonial history of India . \n\t1. British defeated Dutch in battle of bedara. \n\t2. Nadir shah invaded India \n\t3. At Lucknow, Asaf-ud-Daula built the Bara Imambara \n\t4. Death of Aurangzeb Test-3: GS Subject Arrange the above events as per chronology. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICBDb3JyZWN0IGNocm9ub2xvZ3kgb2YgaGlzdG9yaWNhbCBldmVudCBpcyBhcyBmb2xsb3dzIDstICAxNzA3IDotIERlYXRoIG9mIEF1cmFuZ3plYiAgMTczOC0zOTotIE5hZGlyIFNoYWgsIHRoZSBQZXJzaWFuIGVtcGVyb3IsIGF0dGFja2VkIEluZGlhICAxNzU5IDotIEJhdHRsZSBvZiBCaWRhcmEgVGhlIEVuZ2xpc2ggZGVmZWF0ZWQgdGhlIER1dGNoICAxNzg0IDotQXNhZi11ZC1EYXVsYSBidWlsdCB0aGUgQmFyYSBJbWFtYmFyYSBhdCBsdWNrbm93IC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2-1-3-4 ",
        "option2" : "4-2-1-3 ",
        "option3" : "4-1-2-3 ",
        "option4" : "3-2-1-4 "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements regarding famine's during colonial period. \n\t1. Uneven rainfall was the only reason for famines during the colonial period \n\t2. Diversion of food resources for the military was one of the reasons for the Bengal famine . \n\t3. Strachey commission was appointed by Lord Ripon for developing famine strategy. Which of the above statement is/ are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIEZhbWluZXMgZHVyaW5nIHRoZSBjb2xvbmlhbCBlcmE6ICBJbmRpYSB3YXMgaGl0IGJ5IHJlY3VycmVudCBmYW1pbmUgZnJvbSAxNzYwIEFEIHRvIHRpbGwgMTk0MyBBRC4gQXMgcGVyIEJyaXRpc2ggc291cmNlcywgIHRoZXJlIHdlcmUgbW9yZSB0aGFuIDg1IG1pbGxpb24gSW5kaWFucyBkaWVkIGluIHRoZXNlIGZhbWluZXMgd2hpY2ggd2VyZSBpbiByZWFsaXR5ICBnZW5vY2lkZXMgZG9uZSBieSB0aGUgQnJpdGlzaCBSYWouICBUaGUgZmFtaW5lcyB3ZXJlIGEgcHJvZHVjdCBib3RoIG9mIHVuZXZlbiByYWluZmFsbCBhbmQgQnJpdGlzaCBlY29ub21pYyBhbmQgIGFkbWluaXN0cmF0aXZlIHBvbGljaWVzLkNvbG9uaWFsIHBvbGljaWVzIGltcGxpY2F0ZWQgaW5jbHVkZSByYWNrLXJlbnRpbmcsIGxldmllcyBmb3Igd2FyLCAgZnJlZSB0cmFkZSBwb2xpY2llcywgdGhlIGV4cGFuc2lvbiBvZiBleHBvcnQgYWdyaWN1bHR1cmUsIGFuZCBuZWdsZWN0IG9mIGFncmljdWx0dXJhbCAgaW52ZXN0bWVudC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0ICBEdXJpbmcgdGhlIEJlbmdhbCBmYW1pbmUgMTk0MyA6LSBUaGUgZ292ZXJubWVudCBwcmlvcml0aXNlZCBtaWxpdGFyeSBhbmQgZGVmZW5zZSBuZWVkcyAgb3ZlciB0aG9zZSBvZiB0aGUgcnVyYWwgcG9vciwgYWxsb2NhdGluZyBtZWRpY2FsIGNhcmUgYW5kIGZvb2QgaW1tZW5zZWx5IGluIHRoZSBmYXZvdXIgb2YgIHRoZSBtaWxpdGFyeSwgbGFib3VyZXJzIGluIG1pbGl0YXJ5IGluZHVzdHJpZXMsIGFuZCBjaXZpbCBzZXJ2YW50cy4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgIGNvcnJlY3QgIFJpY2hhcmQgU3RyYWNoZXkgQ29tbWlzc2lvbiBvZiAxODgwIHdhcyBjcmVhdGVkIHRvIGRldmVsb3AgYSBnZW5lcmFsIHN0cmF0ZWd5IGFuZCAgcHJpbmNpcGxlcyB0byBkZWFsIHdpdGggdGhlIGZhbWluZXMuIEl0IHdhcyB0aGUgZmlyc3QgRmFtaW5lIGNvbW1pc3Npb24gYW5kIHdhcyAgY29uc3RpdHV0ZWQgZHVyaW5nIHRoZSBwZXJpb2Qgb2YgTG9yZCBMeXR0b24uIEhlbmNlIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "2 only ",
        "option4" : "1 and 3 only "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements regarding foreign policies of colonial government in India . \n\t1. Durand commission was set up by lord Lansdowne to define the borderline between India and Afghanistan. \n\t2. Lord Curzon send Younghusband mission to Nepal. Which of the above statement is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzICBMb3JkIExhbnNkb3duZSAxODg4LTk0IDotIFNldCB1cCBvZiBEdXJhbmQgQ29tbWlzc2lvbiAoMTg5MykgdG8gZGVmaW5lIHRoZSBEdXJhbmQgIExpbmUgYmV0d2VlbiBJbmRpYSBhbmQgQWZnaGFuaXN0YW4gKG5vdyBiZXR3ZWVuIFBha2lzdGFuIGFuZCBBZmdoYW5pc3RhbjsgYSBzbWFsbCAgcG9ydGlvbiBvZiB0aGUgbGluZSB0b3VjaGVzIEluZGlhIGluIFBha2lzdGFuLW9jY3VwaWVkIEthc2htaXIpLiAgTG9yZCBDdXJ6b24gMTg5OS0xOTA1IDotIFNlbmQgWW91bmdodXNiYW5kJ3MgTWlzc2lvbiB0byBUaWJldCAoMTkwNCkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements regarding the modern history of India. \n\t1. Boundary between Tibet and British India was named after Henry McMahon . \n\t2. North west frontier province was created by Lord Curzon . Test-3: GS Subject Which of the above statement is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotICBUaGUgQnJpdGlzaCBpbnN0ZWFkIG9mIHJlY29nbmlzaW5nIFRpYmV0IGFzIGFuIGluZGVwZW5kZW50IHN0YXRlLCBpbnZpdGVkIHJlcHJlc2VudGF0aXZlcyAgb2YgQ2hpbmEgYW5kIFRpYmV0IHRvIGEgdHJpcGFydGl0ZSBjb25mZXJlbmNlIGluIFNoaW1sYSBpbiAxOTEzLCBhbmQgZGVjaWRlZCB0byBkcmF3IGEgIGJvdW5kYXJ5IGJldHdlZW4gVGliZXQgYW5kIEJyaXRpc2ggSW5kaWEgd2hpY2ggaXMgbmFtZWQgYWZ0ZXIgSGVucnkgTWNNYWhvbi4gIExvcmQgQ3Vyem9uLCB0aGUgR292ZXJub3ItR2VuZXJhbCAoMTg5OS0xOTA1KSBjYXJ2ZWQgb3V0IGEgbmV3IHByb3ZpbmNlIGtub3duIGFzICBOb3J0aC1XZXN0ZXJuIEZyb250aWVyIFByb3ZpbmNlIGZvciBhZG1pbmlzdHJhdGl2ZSBlZmZpY2llbmN5IGFuZCBlZmZlY3RpdmUgY29udHJvbCAuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements regarding permanent settlement \n\t1. System was introduced by Lord Cornwallis \n\t2. It led to improvement of land productivity \n\t3. It was introduced in western India. Which of the above statement is / are correct ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIFBFUk1BTkVOVCBTRVRUTEVNRU5UOiAgUGVybWFuZW50IHNldHRsZW1lbnQgc3lzdGVtIHdhcyBpbnRyb2R1Y2VkIGJ5IExvcmQgQ29ybndhbGxpcyAuSGVuY2Ugc3RhdGVtZW50IDEgaXMgIGNvcnJlY3QgLiAgT2JqZWN0aXZlczogIDEuZW5zdXJlIHByZWRpY3RhYmxlIGFuZCBzdGVhZHkgZmxvdyBvZiByZXZlbnVlIGFuZCA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "1 and 2 only ",
        "option4" : "2 and 3 only "
      }
    },
    {
      "index" : 40,
      "question" : "In the context of the colonial history of India , Non- Regulation system was related to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFuYWx5c2lzIDotIE5vbi0gUmVndWxhdGlvbiBzeXN0ZW0gICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEl0IHdhcyBpbnRyb2R1Y2VkIGJ5IExvcmQgRGFsaG91c2llLiBJdCB3YXMgdGhlIHN5c3RlbSBvZiBjZW50cmFsaXNlZCBjb250cm9sIGluIHRoZSBuZXdseTEuICBhY3F1aXJlZCB0ZXJyaXRvcmllcy4gIHVuZGVyICB0aGlzIHN5c3RlbSBjb21taXNzaW9uZXJzIHdlcmUgYXBwb2ludGVkIGZvciBhZG1pbmlzdHJhdGlvbiAuMi4gIFRoZXkgd2VyZSBtYWRlIHJlc3BvbnNpYmxlIHRvIHRoZSBHb3Zlcm5vci1HZW5lcmFsIGluIHRoZSBDb3VuY2lsLiBIZSBoYW5kZWQgb3ZlciBhbGwzLiAgb3RoZXIgcG93ZXJzIHJlbGF0aW5nIHRvIGp1c3RpY2UsIHBvbGljZSwgYW5kIGxhbmQgcmV2ZW51ZSB0byB0aGUgRGlzdHJpY3QgTWFnaXN0cmF0ZXMuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Land revenue management ",
        "option2" : "Administration of newly acquired territories ",
        "option3" : "Military administration ",
        "option4" : "Border management "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements regarding Murshid Quli Khan: \n\t1. Aurangzeb had appointed him as the diwan (collector of revenue) of Bengal. \n\t2. In 1710, Bahadur Shah appointed him as Nizam of Bengal. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBwcm92aW5jZSBvciB0aGUgc3ViYWggb2YgQmVuZ2FsIGdyYWR1YWxseSBiZWNhbWUgaW5kZXBlbmRlbnQgb2YgTXVnaGFsIGNvbnRyb2wgIGFmdGVyIE11cnNoaWQgUXVsaSBLaGFuIGJlY2FtZSB0aGUgZ292ZXJub3IgaW4gMTcxNy4gIEluaXRpYWxseSwgQXVyYW5nemViIGhhZCBhcHBvaW50ZWQgaGltIHRoZSBkaXdhbiAoY29sbGVjdG9yIG9mIHJldmVudWUpIG9mICBCZW5nYWwgdG8gc3RyZWFtbGluZSB0aGUgcmV2ZW51ZSBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgcHJvdmluY2UuICBIZW5jZSwgc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gIFRoZW4gaW4gMTcxMCBCYWhhZHVyIFNoYWggcmVhcHBvaW50ZWQgaGltIGluIHRoaXMgcG9zaXRpb24gYWZ0ZXIgYSBzaG9ydCBicmVhayAgb2YgdHdvIHllYXJzICBXaGVuIEZhcnJ1a3NpeWFyIGJlY2FtZSB0aGUgZW1wZXJvciwgaGUgY29uZmlybWVkIE11cnNoaWQgUXVsaSBpbiBoaXMgIHBvc2l0aW9uIGFuZCBhbHNvIGFwcG9pbnRlZCBoaW0gdGhlIGRlcHV0eSBnb3Zlcm5vciBvZiBCZW5nYWwgYW5kIGdvdmVybm9yIG9mICBPcmlzc2EuICBMYXRlciBpbiAxNzE3IHdoZW4gaGUgd2FzIGFwcG9pbnRlZCB0aGUgZ292ZXJub3Igb3IgTml6YW0gb2YgQmVuZ2FsLCBoZSB3YXMgIGdpdmVuIHRoZSB1bnByZWNlZGVudGVkIHByaXZpbGVnZSBvZiBob2xkaW5nIHRoZSB0d28gb2ZmaWNlcyBvZiBOaXphbSBhbmQgIGRpd2FuIHNpbXVsdGFuZW91c2x5LiAgSGVuY2UsIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 42,
      "question" : "The Battle of Colachel was fought between: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluZGlhbiBraW5nZG9tIG9mIFRyYXZhbmNvcmUgYW5kIHRoZSBEdXRjaCBFYXN0IEluZGlhIENvbXBhbnkuIER1cmluZyB0aGUgIFRyYXZhbmNvcmUtRHV0Y2ggV2FyLCBLaW5nIE1hcnRoYW5kYSBWYXJtYSdzIGZvcmNlcyBkZWZlYXRlZCB0aGUgRHV0Y2ggRWFzdCBJbmRpYSAgQ29tcGFueSdzIGZvcmNlcyBsZWQgYnkgQWRtaXJhbCBFdXN0YWNoaXVzIERlIExhbm5veSBvbiAxMCBBdWd1c3QgMTc0MS4gICBIZW5jZSwgb3B0aW9uKGMpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The British East India Company and Tipu Sultan ",
        "option2" : "The British East India Company and Haider Ali ",
        "option3" : "The Dutch East India Company and Martanda Varma ",
        "option4" : "The Dutch East India Company any Haider Ali "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to the military administration of Chhatrapati Shivaji, which one of the following is the correct sequence in ascending order in terms of rank? Test-3: GS Subject ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFNoaXZhamkgb3JnYW5pemVkIGEgc3RhbmRpbmcgYXJteS4gVGhlIGFybXkgY29uc2lzdGVkIG9mIGZvdXIgZGl2aXNpb25zOiAgaW5mYW50cnksIGNhdmFscnksIGVsZXBoYW50IGNvcnBzIGFuZCBhcnRpbGxlcnkuICBUaGUgaW5mYW50cnkgd2FzIGRpdmlkZWQgaW50byByZWdpbWVudHMsIGJyaWdhZGVzIGFuZCBkaXZpc2lvbnMuIFRoZSBzbWFsbGVzdCAgdW5pdCB3aXRoIG5pbmUgc29sZGllcnMgd2FzIGhlYWRlZCBieSBhIE5haWsgKGNvcnBvcmFsKS4gIEVhY2ggdW5pdCB3aXRoIDI1IGhvcnNlbWVuIHdhcyBwbGFjZWQgdW5kZXIgb25lIGhhdmlsZGFyIChlcXVpdmFsZW50IHRvIHRoZSAgcmFuayBvZiBhIHNlcmdlYW50KS4gIE92ZXIgZml2ZSBoYXZpbGRhcnMgd2VyZSBwbGFjZWQgdW5kZXIgb25lIGphbWFsYWRhciBhbmQgb3ZlciB0ZW4gamFtYWxhZGFycyAgdW5kZXIgb25lIGhhemFyaS4gIFNhcmkgTmF1YmF0IHdhcyB0aGUgc3VwcmVtZSBjb21tYW5kZXIgb2YgdGhlIGNhdmFscnkuICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Havildar- Hazari- Jamaladar ",
        "option2" : "Jamaladar- Havildar- Hazari ",
        "option3" : "Havildar- Jamaladar- Hazari ",
        "option4" : "Hazari- Jamaladar-Havildar "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements regarding King Serfoji II: \n\t1. He established the Saraswati Mahal Library. \n\t2. He established Dhanvantari Mahal, a research institution that produced herbal medicine for humans and animals. \n\t3. He introduced western musical instruments like clarinet, and violin in Carnatic music. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFNlcmZvamkgSUkgQmhvbnNsZSB3YXMgdGhlIGxhc3QgcnVsZXIgb2YgdGhlIEJob25zbGUgZHluYXN0eSBvZiB0aGUgTWFyYXRoYSBwcmluY2lwYWxpdHkgb2YgIFRhbmpvcmUgdG8gZXhlcmNpc2UgYWJzb2x1dGUgc292ZXJlaWdudHkgb3ZlciBoaXMgZG9taW5pb25zLiAgU2VyZm9qaSdzIG1vZGVybmlzaW5nIHByb2plY3RzIGluY2x1ZGVkIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgcHJpbnRpbmcgcHJlc3MgICh0aGUgZmlyc3QgcHJlc3MgZm9yIE1hcmF0aGkgYW5kIFNhbnNrcml0KSBhbmQgZW5yaWNobWVudCBvZiB0aGUgU2FyYXN3YXRpICBNYWhhbCBMaWJyYXJ5LiAgVGhlIFNhcmFzd2F0aSBNYWhhbCBsaWJyYXJ5LCBidWlsdCBieSB0aGUgTmF5YWsgcnVsZXJzIGFuZCBlbnJpY2hlZCBieSBTZXJmb2ppIElJICBjb250YWlucyBhIHJlY29yZCBvZiB0aGUgZGF5LXRvLWRheSBwcm9jZWVkaW5ncyBvZiB0aGUgTWFyYXRoYSBjb3VydCAtIGFzIE1vZGkgIGRvY3VtZW50cywgRnJlbmNoLU1hcmF0aGEgY29ycmVzcG9uZGVuY2Ugb2YgdGhlIDE4dGggY2VudHVyeS4gTW9kaSB3YXMgdGhlIHNjcmlwdCB1c2VkICB0byB3cml0ZSB0aGUgTWFyYXRoaSBsYW5ndWFnZS4gIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuICBTZXJmb2ppJ3MgbW9zdCBzdHJpa2luZyBpbml0aWF0aXZlIHdhcyB0aGUgZm91bmRpbmcgYW5kIG1hbmFnZW1lbnQgb2YgZnJlZSBlbGVtZW50YXJ5ICBhbmQgc2Vjb25kYXJ5IHNjaG9vbHMgZm9yIG9ycGhhbnMgYW5kIHRoZSBwb29yIGluIFRoYW5qYXZ1ciBjaXR5IGFuZCBvdGhlciBhZGphY2VudCAgcGxhY2VzLiAgU2VyZm9qaSBJSSBlc3RhYmxpc2hlZCBEaGFudmFudGFyaSBNYWhhbCwgYSByZXNlYXJjaCBpbnN0aXR1dGlvbiB0aGF0IHByb2R1Y2VkIGhlcmJhbCAgbWVkaWNpbmUgZm9yIGh1bWFucyBhbmQgYW5pbWFscy4gSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBTZXJmb2ppIElJIHdhcyBhIHBhdHJvbiBvZiB0cmFkaXRpb25hbCBJbmRpYW4gYXJ0cyBsaWtlIGRhbmNlIGFuZCBtdXNpYy4gSGUgYXV0aG9yZWQgIEt1bWFyYXNhbWJoYXZhIENoYW1wdSwgRGV2ZW5kcmEgS3VyYXZhbmppLCBhbmQgTXVkcmEgcmFrc2hhc2NoYXlhLiAgSGUgaW50cm9kdWNlZCB3ZXN0ZXJuIG11c2ljYWwgaW5zdHJ1bWVudHMgbGlrZSBjbGFyaW5ldCwgYW5kIHZpb2xpbiBpbiBDYXJuYXRpYyAgbXVzaWMuIEhlbmNlLCBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgSGUgaXMgYWxzbyBjcmVkaXRlZCB3aXRoIHBvcHVsYXJpc2luZyB0aGUgdW5pcXVlIFRoYW5qYXZ1ciBzdHlsZSBvZiBwYWludGluZy4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 45,
      "question" : "Arrange the following events in chronological order from earliest to latest: \n\t1. Vellore Mutiny \n\t2. Barrackpore mutiny \n\t3. Sepoy mutiny Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBWZWxsb3JlIG11dGlueSwgb3IgVmVsbG9yZSBSZXZvbHV0aW9uLCBvY2N1cnJlZCBvbiAxMCBKdWx5IDE4MDYgYW5kIHdhcyB0aGUgIGZpcnN0IGluc3RhbmNlIG9mIGEgbGFyZ2Utc2NhbGUgYW5kIHZpb2xlbnQgbXV0aW55IGJ5IEluZGlhbiBzZXBveXMgYWdhaW5zdCB0aGUgIEVhc3QgSW5kaWEgQ29tcGFueS4gIFRoZSBCYXJyYWNrcG9yZSBtdXRpbnkgd2FzIGEgcmlzaW5nIG9mIG5hdGl2ZSBJbmRpYW4gc2Vwb3lzIGFnYWluc3QgdGhlaXIgIEJyaXRpc2ggb2ZmaWNlcnMgaW4gQmFycmFja3BvcmUgaW4gTm92ZW1iZXIgMTgyNC4gIFRoZSBJbmRpYW4gUmViZWxsaW9uIG9mIDE4NTcgb3IgU2Vwb3kgbXV0aW55IHdhcyBhIG1ham9yIHVwcmlzaW5nIGluIEluZGlhIGluICAxODU3LTU4IGFnYWluc3QgdGhlIHJ1bGUgb2YgdGhlIEJyaXRpc2ggRWFzdCBJbmRpYSBDb21wYW55LCB3aGljaCBmdW5jdGlvbmVkIGFzICBhIHNvdmVyZWlnbiBwb3dlciBvbiBiZWhhbGYgb2YgdGhlIEJyaXRpc2ggQ3Jvd24uICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3 ",
        "option2" : "2-1-3 ",
        "option3" : "3-2-1 ",
        "option4" : "3-1-2 "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements: \n\t1. William Carey was instrumental in establishing the Serampore Mission \n\t2. Joshua Marshman supported Raja Rammohun Roy's idea of Unitarianism. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluIDE3OTMgdHdvIEVuZ2xpc2ggbWlzc2lvbmFyaWVzLCBXaWxsaWFtIENhcmV5IGFuZCBKb2huIFRob21hcywgYm90aCAgQmFwdGlzdHMsIHNldCBvdXQgdG8gSW5kaWEgd2l0aCB0aGUgaW50ZW50aW9uIG9mIHN0YXJ0aW5nIGEgbWlzc2lvbi4gSW4gdmlldyBvZiB0aGUgIGJhbiBvbiBtaXNzaW9uYXJ5IGFjdGl2aXR5LCB0aGV5IHNldHRsZWQgZG93biBpbiB0aGUgRGFuaXNoIENvbG9ueSBvZiBTZXJhbXBvcmUsIG5vcnRoIG9mICBDYWxjdXR0YS4gQ2FyZXksIGFsb25nIHdpdGggdHdvIG90aGVyIG1pc3Npb25hcmllcywgSm9zaHVhIE1hcnNobWFuIGFuZCBXaWxsaWFtICBXYXJkIGVzdGFibGlzaGVkIHRoZSBTZXJhbXBvcmUgTWlzc2lvbiBpbiAxNzk5LiAgSGVuY2UsIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBKb3NodWEgTWFyc2htYW4gd2FzIGFuIGFjY29tcGxpc2hlZCBzY2hvbGFyLCBsaW5ndWlzdCwgYW5kIHRoZW9sb2dpYW4gYW5kIHdhcyBhIHByb2xpZmljICBhdXRob3IgYW5kIHBvbGVtaWNpc3QuICBBZnRlciBsZWFybmluZyBCZW5nYWxpIGFuZCBTYW5za3JpdCwgQ2FyZXkgYW5kIE1hcnNobWFuICBwdWJsaXNoZWQtdGhyb3VnaCB0aGUgU2VyYW1wb3JlIFByZXNzLXRoZSBCZW5nYWxpIGZvcm0gb2YgVGhlIFJhbWF5YW5hIG9mICBWYWxtZWVraSwgd2hpY2ggV2FyZCB3b3VsZCBoYXZlIHNlZW4gdG8gY29tcGxldGlvbi4gIE1hcnNobWFuIGFsc28gaGFzIHRoZSBob25vciAgb2YgYmVpbmcgdGhlIGZpcnN0IHRvIGhhdmUgdHJhbnNsYXRlZCB0aGUgQmlibGUgaW50byBDaGluZXNlLiAgSW4gMTgyMSwgdGhlICBTZXJhbXBvcmUgUHJlc3MgcHVibGlzaGVkIHRoZSBmaXJzdCB0cmFuc2xhdGlvbiBvZiB0aGUgQmlibGUgaW50byBDaGluZXNlLCB0aGUgIHdvcmsgb24gd2hpY2ggTWFyc2htYW4gaGFkIHNwZW50IGZpZnRlZW4geWVhcnMuIEluIHRoZSBlYXJseSAxODIwcywgTWFyc2htYW4gZW5nYWdlZCAgaW4gYSBwb2xlbWljYWwgZGViYXRlIHdpdGggUmFtbW9odW0gUm95IGNvbmNlcm5pbmcgdGhlIGRlaXR5IG9mIEplc3VzIGFuZCB0aGUgIENocmlzdGlhbiBkb2N0cmluZXMgb2YgdGhlIGF0b25lbWVudCBhbmQgdGhlIFRyaW5pdHkuICBUaGUgZGViYXRlIGZvY3VzZWQgb24gUm95J3MgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIFVuaXRhcmlhbmlzbSwgd2hpY2ggTWFyc2htYW4gYW5kIHRoZSBvdGhlciBTZXJhbXBvcmUgbWlzc2lvbmFyaWVzIHN0cm9uZ2x5ICBkaXNhZ3JlZWQuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuICBDYXJleSwgTWFyc2htYW4sIGFuZCBXYXJkIHdvcmtlZCBjb29wZXJhdGl2ZWx5LCBhbmQgY2FtZSB0byBoYXZlIHRoZSBuYW1lICAidGhlIFNlcmFtcG9yZSBUcmlvLiIg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements regarding the contribution of James Thomason: \n\t1. He established an Engineering college at Roorkee. \n\t2. He vehemently opposed the vernacular system of education at the elementary level. Which of the statements given above is/are correct? Test-3: GS Subject ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEphbWVzIFRob21hc29uIHdhcyBhIEJyaXRpc2ggYWRtaW5pc3RyYXRvciBvZiB0aGUgRWFzdCBJbmRpYSAgQ29tcGFueSBhbmQgTGlldXRlbmFudC1Hb3Zlcm5vciBvZiB0aGUgTm9ydGgtV2VzdGVybiBQcm92aW5jZXMgYmV0d2VlbiAxODQzICBhbmQgMTg1My4gIEJ5IDE4NTMgaGUgaGFkIGFsc28gZXN0YWJsaXNoZWQgYSBzeXN0ZW0gb2YgODk3IGxvY2FsbHkgc3VwcG9ydGVkIGVsZW1lbnRhcnkgIHNjaG9vbHMgaW4gY2VudHJhbGx5IGxvY2F0ZWQgdmlsbGFnZXMgdGhhdCBwcm92aWRlZCBhIHZlcm5hY3VsYXIgZWR1Y2F0aW9uIGZvciAgY2hpbGRyZW4gdGhyb3VnaG91dCB0aGUgcmVnaW9uLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgIFRoZSBSb29ya2VlIENvbGxlZ2Ugd2FzIGVzdGFibGlzaGVkIGluIDE4NDcgQUQgYXMgdGhlIEZpcnN0IEVuZ2luZWVyaW5nICBDb2xsZWdlIGluIHRoZSBCcml0aXNoIEVtcGlyZS4gVGhlIENvbGxlZ2Ugd2FzIHJlbmFtZWQgVGhlIFRob21hc29uIENvbGxlZ2UgIG9mIENpdmlsIEVuZ2luZWVyaW5nIGluIDE4NTQuIEl0IHdhcyBlc3RhYmxpc2hlZCBieSB0aGUgdGhlbiBsaWV1dGVuYW50IGdvdmVybm9yLCBTaXIgIEphbWVzIFRob21hc29uLCBhbmQgd2FzIGdpdmVuIHVuaXZlcnNpdHkgc3RhdHVzIGluIDE5NDkuIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyAgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements regarding Wood's despatch \n\t1. It recommended English as the medium of instruction from school level to higher studies. \n\t2. It recommended a system of grants-in-aid to encourage private schools \n\t3. It asked the government of India to assume responsibility for the education of the masses Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OA==",
      "description" : "ICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluIDE4NTQsIENoYXJsZXMgV29vZCBwcmVwYXJlZCBhIGRlc3BhdGNoIG9uIGFuIGVkdWNhdGlvbmFsIHN5c3RlbSBmb3IgSW5kaWEuIENvbnNpZGVyZWQgdGhlICAnTWFnbmEgQ2FydGEgb2YgRW5nbGlzaCBFZHVjYXRpb24gaW4gSW5kaWEnLCB0aGlzIGRvY3VtZW50IHdhcyB0aGUgZmlyc3QgY29tcHJlaGVuc2l2ZSBwbGFuIGZvciAgdGhlIHNwcmVhZCBvZiBlZHVjYXRpb24gaW4gSW5kaWEuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "1 and 2 only "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements regarding the Hunter Education Commission (1882-83): \n\t1. It recommended the transfer of control of primary education to district and municipal boards. \n\t2. It recommended to have vocational training at the high school level. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3QuICBIdW50ZXIgRWR1Y2F0aW9uIENvbW1pc3Npb24gKDE4ODItODMpICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBFYXJsaWVyIHNjaGVtZXMgaGFkIG5lZ2xlY3RlZCBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgZWR1Y2F0aW9uLiBXaGVuIGVkdWNhdGlvbiB3YXMgc2hpZnRlZCAgdG8gcHJvdmluY2VzIGluIDE4NzAsIHByaW1hcnkgYW5kIHNlY29uZGFyeSBlZHVjYXRpb24gZnVydGhlciBzdWZmZXJlZCBiZWNhdXNlIHRoZSBwcm92aW5jZXMgIGFscmVhZHkgaGFkIGxpbWl0ZWQgcmVzb3VyY2VzIGF0IHRoZWlyIGRpc3Bvc2FsLiBJbiAxODgyLCB0aGUgR292ZXJubWVudCBhcHBvaW50ZWQgYSAgY29tbWlzc2lvbiB1bmRlciB0aGUgY2hhaXJtYW5zaGlwIG9mIFcuVy4gSHVudGVyIHRvIHJldmlldyB0aGUgcHJvZ3Jlc3Mgb2YgIGVkdWNhdGlvbiBpbiB0aGUgY291bnRyeSBzaW5jZSB0aGUgRGVzcGF0Y2ggb2YgMTg1NC4gVGhlIEh1bnRlciBDb21taXNzaW9uIG1vc3RseSBjb25maW5lZCAgaXRzIHJlY29tbWVuZGF0aW9ucyB0byBwcmltYXJ5IGFuZCBzZWNvbmRhcnkgZWR1Y2F0aW9uLiBUaGUgY29tbWlzc2lvbi0gIChpKSBlbXBoYXNpc2VkIHRoYXQgc3RhdGUncyBzcGVjaWFsIGNhcmUgaXMgcmVxdWlyZWQgZm9yIGV4dGVuc2lvbiBhbmQgaW1wcm92ZW1lbnQgb2YgcHJpbWFyeSAgZWR1Y2F0aW9uLCBhbmQgdGhhdCBwcmltYXJ5IGVkdWNhdGlvbiBzaG91bGQgYmUgaW1wYXJ0ZWQgdGhyb3VnaCB2ZXJuYWN1bGFyLiAgKGlpKSByZWNvbW1lbmRlZCB0aGUgdHJhbnNmZXIgb2YgY29udHJvbCBvZiBwcmltYXJ5IGVkdWNhdGlvbiB0byBuZXdseSBzZXQgdXAgZGlzdHJpY3QgIGFuZCBtdW5pY2lwYWwgYm9hcmRzLiAgKGlpaSkgcmVjb21tZW5kZWQgdGhhdCBzZWNvbmRhcnkgKEhpZ2ggU2Nob29sKSBlZHVjYXRpb24gc2hvdWxkIGhhdmUgdHdvICBkaXZpc2lvbnMtICDil48gbGl0ZXJhcnktbGVhZGluZyB1cCB0byB1bml2ZXJzaXR5LiAg4pePIHZvY2F0aW9uYWwtZm9yIGNvbW1lcmNpYWwgY2FyZWVycy4gIChpdikgZHJldyBhdHRlbnRpb24gdG8gaW5hZGVxdWF0ZSBmYWNpbGl0aWVzIGZvciBmZW1hbGUgZWR1Y2F0aW9uLCBlc3BlY2lhbGx5IG91dHNpZGUgcHJlc2lkZW5jeSAgdG93bnMgYW5kIG1hZGUgcmVjb21tZW5kYXRpb25zIGZvciBpdHMgc3ByZWFkLiAgVGhlIG5leHQgdHdvIGRlY2FkZXMgc2F3IHJhcGlkIGdyb3d0aCBhbmQgZXhwYW5zaW9uIG9mIHNlY29uZGFyeSBhbmQgY29sbGVnaWF0ZSBlZHVjYXRpb24gIHdpdGggdGhlIHBhcnRpY2lwYXRpb24gb2YgSW5kaWFucy4gQWxzbywgbW9yZSB0ZWFjaGluZy1jdW0tZXhhbWluaW5nIHVuaXZlcnNpdGllcyAgd2VyZSBzZXQgdXAgbGlrZSB0aGUgUHVuamFiIFVuaXZlcnNpdHkgKDE4ODIpIGFuZCB0aGUgQWxsYWhhYmFkIFVuaXZlcnNpdHkgKDE4ODcpLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements: \n\t1. Keshub Sen founded the Indian Association for the Cultivation of Science \n\t2. William Ward established the 'Society for the Acquisition of General Knowledge' Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE5vbmUgb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gaXMgY29ycmVjdC4gIE1haGVuZHJhbGFsIFNhcmthciBDSUUgd2FzIGEgQmVuZ2FsaSBtZWRpY2FsIGRvY3RvciwgdGhlIHNlY29uZCBNRCBncmFkdWF0ZWQgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGZyb20gdGhlIENhbGN1dHRhIE1lZGljYWwgQ29sbGVnZSwgc29jaWFsIHJlZm9ybWVyLCBhbmQgcHJvcGFnYXRvciBvZiBzY2llbnRpZmljICBzdHVkaWVzIGluIG5pbmV0ZWVudGgtY2VudHVyeSBJbmRpYS4gSGUgd2FzIHRoZSBmb3VuZGVyIG9mIHRoZSBJbmRpYW4gIEFzc29jaWF0aW9uIGZvciB0aGUgQ3VsdGl2YXRpb24gb2YgU2NpZW5jZS4gIEluIDE4MjggRGVyb3ppbyBmb3VuZGVkIHdpdGggaGlzIHN0dWRlbnRzIHRoZSAnQWNhZGVtaWMgQXNzb2NpYXRpb24nLCB3aGljaCAgb3JnYW5pc2VkIGRlYmF0ZXMgb24gdmFyaW91cyBzdWJqZWN0cy4gRGVyb3ppbydzIHN0dWRlbnRzIHJlYWQgdGhlIHdyaXRpbmdzIG9mICBWb2x0YWlyZSwgSHVtZSwgTG9ja2UsIFRvbSBQYWluZSBhbmQgb3RoZXJzIGFuZCBxdW90ZWQgdGhlbSBmcmVlbHkgaW4gdGhlaXIgIGRlYmF0ZXMuIEFub3RoZXIgb3JnYW5pc2F0aW9uIG9mIHRoZSBZb3VuZyBCZW5nYWwgd2FzIHRoZSAnU29jaWV0eSBmb3IgdGhlICBBY3F1aXNpdGlvbiBvZiBHZW5lcmFsIEtub3dsZWRnZScgZm91bmRlZCBpbiAxODM4LiBUYXJhY2hhbmQgQ2hha3JhdmFydHkgd2FzICB0aGUgcHJlc2lkZW50IG9mIHRoZSBzb2NpZXR5IGFuZCBzZWNyZXRhcmllcyB3ZXJlIFBlYXJ5IENoYW5kIE1pdHJhIGFuZCBSYW10YW51IExhaGlyaS4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 51,
      "question" : "Alluri Sitarama Raju was associated with: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBSYW1wYSBSZWJlbGxpb24gb2YgMTkyMiwgYWxzbyBrbm93biBhcyB0aGUgTWFueWFtIFJlYmVsbGlvbiwgd2FzIGEgdHJpYmFsICB1cHJpc2luZyBsZWQgYnkgQWxsdXJpIFNpdGFyYW1hIFJhanUgaW4gR29kYXZhcmkgQWdlbmN5IG9mIE1hZHJhcyBQcmVzaWRlbmN5LCBCcml0aXNoICBJbmRpYS4gSXQgYmVnYW4gaW4gQXVndXN0IDE5MjIgYW5kIGxhc3RlZCB1bnRpbCB0aGUgY2FwdHVyZSBhbmQga2lsbGluZyBvZiBSYWp1IGluIE1heSA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Manyam Rebellion ",
        "option2" : "Munda Rebellion ",
        "option3" : "Sanyasi Rebellion ",
        "option4" : "Indigo Revolt   Test-3: GS Subject   "
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following personalities. \n\t1. William Bentick \n\t2. Henry Lawrence \n\t3. Maulvi Ahmadullah Shah Who among the above personalities is/are associated with the Battle of Chinhat? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE1hdWx2aSBBaG1hZHVsbGFoIFNoYWggd2FzIG9uZSBvZiB0aGUgbWFueSBtYXVsdmlzIHdobyBwbGF5ZWQgYW4gaW1wb3J0YW50IHBhcnQgIGluIHRoZSByZXZvbHQgb2YgMTg1Ny4gRWR1Y2F0ZWQgaW4gSHlkZXJhYmFkLCBoZSBiZWNhbWUgYSBwcmVhY2hlciB3aGVuIHlvdW5nLiBJbiAxODU3LCAgaGUgd2FzIGphaWxlZCBpbiBGYWl6YWJhZC4gV2hlbiByZWxlYXNlZCwgaGUgd2FzIGVsZWN0ZWQgYnkgdGhlIG11dGlub3VzIDIybmQgTmF0aXZlIEluZmFudHJ5ICBhcyB0aGVpciBsZWFkZXIuIEhlIGZvdWdodCBpbiB0aGUgZmFtb3VzIEJhdHRsZSBvZiBDaGluaGF0IGluIHdoaWNoIHRoZSBCcml0aXNoIGZvcmNlcyAgdW5kZXIgSGVucnkgTGF3cmVuY2Ugd2VyZSBkZWZlYXRlZC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only ",
        "option2" : "1 and 3 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1 only "
      }
    },
    {
      "index" : 54,
      "question" : "In the context of the freedom struggle, the Azamgarh proclamation was associated with? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBBemFtZ2FyaCBwcm9jbGFtYXRpb24gd2FzIHB1Ymxpc2hlZCBpbiB0aGUgRGVsaGkgR2F6ZXR0ZSBpbiB0aGUgbWlkc3Qgb2YgdGhlICAnR3JlYXQgTXV0aW55JyBvZiAxODU3LiBUaGUgYXV0aG9yIHdhcyBtb3N0IHByb2JhYmx5IEZpcm96IFNoYWgsIGEgZ3JhbmRzb24gb2YgdGhlICBNdWdoYWwgZW1wZXJvciBCYWhhZHVyIFNoYWggWmFmYXIsIHdob3NlIHJlc3RvcmF0aW9uIHRvIGZ1bGwgcG93ZXIgd2FzIGEgbWFpbiBhaW0gb2YgIHRoZSByZWJlbHMuICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Battle of Buxar ",
        "option2" : "Revolt of 1857 ",
        "option3" : "Battle of Plassey ",
        "option4" : "Vellore Mutiny "
      }
    },
    {
      "index" : 55,
      "question" : "Who among the following leaders founded the Madras Hindu Social Reforms Association? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBNYWRyYXMgSGluZHUgU29jaWFsIFJlZm9ybXMgQXNzb2NpYXRpb24gd2FzIGZvdW5kZWQgYnkgS2FuZHVrdXJpICBWZXJlc2FsaW5nYW0gUGFudHVsdSBpbiAxODkyIGF0IE1hZHJhcy4gQWNjb3JkaW5nIHRvIGhpbSwgd2l0aG91dCB0aGUgbGliZXJhdGlvbiBvZiAgd29tZW4sIHRoZXJlIHdvdWxkIGJlIG5vIHJlYWwgZnJlZWRvbSBhbmQgbm8gcHJvZ3Jlc3Mgb2YgdGhlIGNvdW50cnkgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICBBYm91dCBLYW5kdWt1cmkgVmVlcmVzYWxpbmdhbSA6ICBLYW5kdWt1cmkgVmVlcmVzYWxpbmdhbSAoMTYgQXByaWwgMTg0OCAtIDI3IE1heSAxOTE5KSB3YXMgYSBzb2NpYWwgcmVmb3JtZXIgYW5kICB3cml0ZXIgZnJvbSB0aGUgTWFkcmFzIFByZXNpZGVuY3ksIEJyaXRpc2ggSW5kaWEuICBIZSBpcyBjb25zaWRlcmVkIGFzIHRoZSBmYXRoZXIgb2YgdGhlIFRlbHVndSBSZW5haXNzYW5jZSBtb3ZlbWVudC4gIEhlIHdhcyBvbmUgb2YgdGhlIGVhcmx5IHNvY2lhbCByZWZvcm1lcnMgd2hvIGVuY291cmFnZWQgdGhlIGVkdWNhdGlvbiBvZiB3b21lbiBhbmQgIHRoZSByZW1hcnJpYWdlIG9mIHdpZG93cyAod2hpY2ggd2FzIG5vdCBzdXBwb3J0ZWQgYnkgc29jaWV0eSBkdXJpbmcgaGlzIHRpbWUpLiAgSGUgYWxzbyBmb3VnaHQgYWdhaW5zdCBjaGlsZCBtYXJyaWFnZSBhbmQgdGhlIGRvd3J5IHN5c3RlbS4gIEhlIHN0YXJ0ZWQgYSBzY2hvb2wgaW4gRG93bGFpc3dhcmFtIGluIDE4NzQsIGNvbnN0cnVjdGVkIHRoZSAnQnJhaG1vIE1hbmRpcicgaW4gIDE4ODcgYW5kIGJ1aWx0IHRoZSAnSGl0aGFrYXJpbmkgU2Nob29sJyBpbiAxOTA4IGluIEFuZGhyYSBQcmFkZXNoLiAgSGlzIG5vdmVsIFJhamFzZWtoYXJhIENoYXJpdHJhbXUgaXMgY29uc2lkZXJlZCB0byBiZSB0aGUgZmlyc3Qgbm92ZWwgaW4gVGVsdWd1ICBsaXRlcmF0dXJlLiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "G. Subramania Iyer ",
        "option2" : "Kandukuri Veresalingam Pantulu ",
        "option3" : "E.V. Ramasamy Naicker ",
        "option4" : "Anandacharlu "
      }
    },
    {
      "index" : 56,
      "question" : "Consider the following statements regarding the William Adam Report on Education: \n\t1. He found that there were over 1 lakh pathshalas in Bengal and Bihar \n\t2. In many cases, the school fee was depended on the income of the parents \n\t3. In many instances, classes were not held during harvest time. Test-3: GS Subject Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFsbCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gIEluIHRoZSAxODMwcywgV2lsbGlhbSBBZGFtLCBhIFNjb3R0aXNoIG1pc3Npb25hcnksIHRvdXJlZCB0aGUgZGlzdHJpY3RzIG9mIEJlbmdhbCBhbmQgQmloYXIuIEhlICBoYWQgYmVlbiBhc2tlZCBieSB0aGUgQ29tcGFueSB0byByZXBvcnQgb24gdGhlIHByb2dyZXNzIG9mIGVkdWNhdGlvbiBpbiB2ZXJuYWN1bGFyICBzY2hvb2xzLiBUaGUgcmVwb3J0IEFkYW0gcHJvZHVjZWQgaXMgaW50ZXJlc3RpbmcuICBBZGFtIGZvdW5kIHRoYXQgdGhlcmUgd2VyZSBvdmVyIDEgbGFraCBwYXRoc2hhbGFzIGluIEJlbmdhbCBhbmQgQmloYXIuIFRoZXNlICB3ZXJlIHNtYWxsIGluc3RpdHV0aW9ucyB3aXRoIG5vIG1vcmUgdGhhbiAyMCBzdHVkZW50cyBlYWNoLiBCdXQgdGhlIHRvdGFsIG51bWJlciBvZiAgY2hpbGRyZW4gYmVpbmcgdGF1Z2h0IGluIHRoZXNlIHBhdGhzaGFsYXMgd2FzIGNvbnNpZGVyYWJsZSAtIG92ZXIgMjAgbGFraC4gVGhlc2UgIGluc3RpdHV0aW9ucyB3ZXJlIHNldCB1cCBieSB3ZWFsdGh5IHBlb3BsZSwgb3IgdGhlIGxvY2FsIGNvbW11bml0eS4gQXQgdGltZXMgIHRoZXkgd2VyZSBzdGFydGVkIGJ5IGEgdGVhY2hlciAoZ3VydSkuICBUaGUgc3lzdGVtIG9mIGVkdWNhdGlvbiB3YXMgZmxleGlibGUuIEZldyB0aGluZ3MgdGhhdCB5b3UgYXNzb2NpYXRlIHdpdGggIHNjaG9vbHMgdG9kYXkgd2VyZSBwcmVzZW50IGluIHRoZSBwYXRoc2hhbGFzIGF0IHRoZSB0aW1lLiBUaGVyZSB3ZXJlIG5vIGZpeGVkICBmZWUsIG5vIHByaW50ZWQgYm9va3MsIG5vIHNlcGFyYXRlIHNjaG9vbCBidWlsZGluZywgbm8gYmVuY2hlcyBvciBjaGFpcnMsIG5vICBibGFja2JvYXJkcywgbm8gc3lzdGVtIG9mIHNlcGFyYXRlIGNsYXNzZXMsIG5vIHJvbGxjYWxsIHJlZ2lzdGVycywgbm8gYW5udWFsIGV4YW1pbmF0aW9ucywgIGFuZCBubyByZWd1bGFyIHRpbWUtdGFibGUuIEluIHNvbWUgcGxhY2VzIGNsYXNzZXMgd2VyZSBoZWxkIHVuZGVyIGEgYmFueWFuIHRyZWUsIGluIG90aGVyICBwbGFjZXMgaW4gdGhlIGNvcm5lciBvZiBhIHZpbGxhZ2Ugc2hvcCBvciB0ZW1wbGUsIG9yIGF0IHRoZSBndXJ1J3MgaG9tZS4gRmVlIGRlcGVuZGVkICBvbiB0aGUgaW5jb21lIG9mIHBhcmVudHM6IHRoZSByaWNoIGhhZCB0byBwYXkgbW9yZSB0aGFuIHRoZSBwb29yLiBUZWFjaGluZyB3YXMgIG9yYWwsIGFuZCB0aGUgZ3VydSBkZWNpZGVkIHdoYXQgdG8gdGVhY2gsIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgbmVlZHMgb2YgdGhlICBzdHVkZW50cy4gU3R1ZGVudHMgd2VyZSBub3Qgc2VwYXJhdGVkIG91dCBpbnRvIGRpZmZlcmVudCBjbGFzc2VzOiBhbGwgb2YgdGhlbSAgc2F0IHRvZ2V0aGVyIGluIG9uZSBwbGFjZS4gVGhlIGd1cnUgaW50ZXJhY3RlZCBzZXBhcmF0ZWx5IHdpdGggZ3JvdXBzIG9mICBjaGlsZHJlbiB3aXRoIGRpZmZlcmVudCBsZXZlbHMgb2YgbGVhcm5pbmcuICBBZGFtIGRpc2NvdmVyZWQgdGhhdCB0aGlzIGZsZXhpYmxlIHN5c3RlbSB3YXMgc3VpdGVkIHRvIGxvY2FsIG5lZWRzLiBGb3IgIGluc3RhbmNlLCBjbGFzc2VzIHdlcmUgbm90IGhlbGQgZHVyaW5nIGhhcnZlc3QgdGltZSB3aGVuIHJ1cmFsIGNoaWxkcmVuIG9mdGVuICB3b3JrZWQgaW4gdGhlIGZpZWxkcy4gVGhlIHBhdGhzaGFsYSBzdGFydGVkIG9uY2UgYWdhaW4gd2hlbiB0aGUgY3JvcHMgaGFkIGJlZW4gIGN1dCBhbmQgc3RvcmVkLiBUaGlzIG1lYW50IHRoYXQgZXZlbiBjaGlsZHJlbiBvZiBwZWFzYW50IGZhbWlsaWVzIGNvdWxkIHN0dWR5LiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 57,
      "question" : "Consider the following statements: \n\t1. Prarthana samaj encouraged the education of women. \n\t2. The Veda Samaj was established by Dayanand Saraswati. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBQcmFydGhhbmEgU2FtYWogd2FzIGVzdGFibGlzaGVkIGluIDE4NjcgYXQgQm9tYmF5LCB3aGljaCBzb3VnaHQgdG8gIHJlbW92ZSBjYXN0ZSByZXN0cmljdGlvbnMsIGFib2xpc2ggY2hpbGQgbWFycmlhZ2UsIGVuY291cmFnZSB0aGUgZWR1Y2F0aW9uIG9mICB3b21lbiwgYW5kIGVuZCB0aGUgYmFuIG9uIHdpZG93IHJlbWFycmlhZ2UuIEl0cyByZWxpZ2lvdXMgbWVldGluZ3MgZHJldyB1cG9uIEhpbmR1LCAgQnVkZGhpc3QgYW5kIENocmlzdGlhbiB0ZXh0cy4gIEhlbmNlLCBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgRXN0YWJsaXNoZWQgaW4gTWFkcmFzIChDaGVubmFpKSBpbiAxODY0LCB0aGUgVmVkYSBTYW1haiB3YXMgaW5zcGlyZWQgYnkgdGhlICBCcmFobW8gU2FtYWouIEl0IHdvcmtlZCB0byBhYm9saXNoIGNhc3RlIGRpc3RpbmN0aW9ucyBhbmQgcHJvbW90ZSB3aWRvdyAgcmVtYXJyaWFnZSBhbmQgd29tZW4ncyBlZHVjYXRpb24uIEl0cyBtZW1iZXJzIGJlbGlldmVkIGluIG9uZSBHb2QuIFRoZXkgIGNvbmRlbW5lZCB0aGUgc3VwZXJzdGl0aW9ucyBhbmQgcml0dWFscyBvZiBvcnRob2RveCBIaW5kdWlzbS4gIFZlZGEgU2FtYWogd2FzIGVzdGFibGlzaGVkIGJ5IEtlc2hhYiBDaGFuZHJhIFNlbiBhbmQgSy4gU3JpZGhhcmFsdSBOYWlkdSB3aGVuIHRoZSAgZm9ybWVyIHZpc2l0ZWQgTWFkcmFzIGluIDE4NjQuIEsuIFNyaWRoYXJhbHUgTmFpZHUgbGF0ZXIgdmlzaXRlZCBDYWxjdXR0YSB0byBzdHVkeSB0aGUgIEJyYWhtbyBTYW1haiBtb3ZlbWVudCBhbmQgd2hlbiBoZSByZXR1cm5lZCwgaGUgcmVuYW1lZCB0aGUgVmVkYSBTYW1haiBhcyBCcmFobW8gIFNhbWFqIG9mIFNvdXRoZXJuIEluZGlhIGluIDE4NzEuICBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 58,
      "question" : "Consider the following statements: \n\t1. Bharat Stree Mahamandal was established by Sarojini Naidu \n\t2. B.M. Malabari founded the Nishkam Karma Math (Social Service Society) Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE5vbmUgb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMgY29ycmVjdC4gICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEJoYXJhdCBTdHJlZSBNYWhhbWFuZGFsIHdhcyBhIHdvbWVuJ3Mgb3JnYW5pc2F0aW9uIGluIEluZGlhIGZvdW5kZWQgYnkgIFNhcmFsYSBEZXZpIENoYXVkaHVyYW5pIGluIEFsbGFoYWJhZCBpbiAxOTEwLiBPbmUgb2YgdGhlIHByaW1hcnkgZ29hbHMgb2YgdGhlICBvcmdhbmlzYXRpb24gd2FzIHRvIHByb21vdGUgZmVtYWxlIGVkdWNhdGlvbiwgd2hpY2ggYXQgdGhhdCB0aW1lIHdhcyBub3Qgd2VsbCAgZGV2ZWxvcGVkLiAgRGhvbmRvIEtlc2hhdiBLYXJ2ZTogIERob25kbyBLZXNoYXYgS2FydmUsIHBvcHVsYXJseSBrbm93biBhcyBNYWhhcnNoaSBLYXJ2ZSwgd2FzIGEgc29jaWFsICByZWZvcm1lciBpbiBJbmRpYSBpbiB0aGUgZmllbGQgb2Ygd29tZW4ncyB3ZWxmYXJlLiAgSGUgYWR2b2NhdGVkIHdpZG93IHJlbWFycmlhZ2UgYW5kIGhlIGhpbXNlbGYgbWFycmllZCBhIHdpZG93LiAgS2FydmUgd2FzIGEgcGlvbmVlciBpbiBwcm9tb3Rpbmcgd2lkb3dzJyBlZHVjYXRpb24uICBIZSBmb3VuZGVkIHRoZSBmaXJzdCB3b21lbidzIHVuaXZlcnNpdHkgaW4gSW5kaWEgLSBTTkRUIFdvbWVuJ3MgVW5pdmVyc2l0eS4gIEluIDE5MDcsIGhlIGZvdW5kZWQgdGhlIE1haGlsYSBWaWR5YWxheWEgKE1haGlsYSBWaWR5YWxheWEpIChTY2hvb2wgZm9yIFdvbWVuKS4gICBIZSBmb3VuZGVkIHRoZSBOaXNoa2FtIEthcm1hIE1hdGggKFNvY2lhbCBTZXJ2aWNlIFNvY2lldHkpIGluIDE5MDggdG8gdHJhaW4gIHdvcmtlcnMgZm9yIHRoZSB3aWRvd3MnIGhvbWUgYW5kIE1haGlsYSBWaWR5YWxheWEuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following statements regarding Ishwar Chandra Vidyasagar: \n\t1. He was the author of the book called 'Sanskrit-Vyakaran Upakramonika'. \n\t2. To support women education, he organized a fund called Nari Shiksha Bhandar \n\t3. He supported Drinkwater Bethune to establish the first permanent girls' school in India, the Bethune School. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFsbCB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdC4gIFJldmVyZWQgYXMgYSBCZW5nYWxpIGljb24sIElzaHdhciBDaGFuZHJhIFZpZHlhc2FnYXIgd2FzIGEgQmVuZ2FsaSBTYW5za3JpdCBwdW5kaXQsIGVkdWNhdG9yLCAgc29jaWFsIHJlZm9ybWVyLCB3cml0ZXIgYW5kIHBoaWxhbnRocm9waXN0LiAgSXNod2FyIENoYW5kcmEgVmlkeWFzYWdhciAoMTgyMC0xODkxKSB3YXMgb25lIG9mIHRoZSBwaWxsYXJzIG9mIHRoZSBCZW5nYWwgcmVuYWlzc2FuY2Ugd2hvICBtYW5hZ2VkIHRvIGNvbnRpbnVlIHRoZSBzb2NpYWwgcmVmb3JtcyBtb3ZlbWVudCB0aGF0IHdhcyBzdGFydGVkIGJ5IFJhamEgUmFtbW9oYW4gUm95IGluICB0aGUgZWFybHkgMTgwMHMuICBXaWRvdyBSZW1hcnJpYWdlOiAgVGhlIGZvY3VzIG9mIGhpcyBzb2NpYWwgcmVmb3JtIHdhcyB3b21lbiAtIGFuZCBoZSBzcGVudCBoaXMgbGlmZSdzIGVuZXJnaWVzIHRyeWluZyB0byAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgZW5zdXJlIGFuIGVuZCB0byB0aGUgcHJhY3RpY2Ugb2YgY2hpbGQgbWFycmlhZ2UgYW5kIGluaXRpYXRlIHdpZG93IHJlbWFycmlhZ2UuICBIZSBmb2xsb3dlZCBpbiB0aGUgZ3JlYXQgcmVmb3JtaXN0IHRyYWRpdGlvbiBvZiBSYWphIFJhbSBNb2h1biBSb3kgKDE3NzItMTgzMyksIGFuZCAgYXJndWVkLCBvbiB0aGUgYmFzaXMgb2Ygc2NyaXB0dXJlcyBhbmQgb2xkIGNvbW1lbnRhcmllcywgaW4gZmF2b3VyIG9mIHRoZSByZW1hcnJpYWdlIG9mICB3aWRvd3MgaW4gdGhlIHNhbWUgd2F5IGFzIFJveSBkaWQgZm9yIHRoZSBhYm9saXRpb24gb2YgU2F0aS4gIFZpZHlhc2FnYXIgd3JvdGUgdHdvIHZvbHVtZXMgb24gdGhlIG1pc3RyZWF0bWVudCBvZiB3aWRvd3MsIHdoaWNoIHNldCB0aGUgdG9uZSBmb3IgIG1ham9yIHNvY2lhbCByZWZvcm0gaW4gdGhlIHN0YXRlLiAgSGlzIGVhcmxpZXN0IGVmZm9ydCBhdCBzb2NpYWwgcmVmb3JtLCBob3dldmVyLCBjYW1lIGluIHRoZSBzZWNvbmQgaGFsZiBvZiAxODUwIHdoZW4sIGluIGEgIHBhcGVyIG9uIHRoZSBldmlscyBvZiBjaGlsZCBtYXJyaWFnZS4gIEhlIGxhdW5jaGVkIGEgcG93ZXJmdWwgYXR0YWNrIG9uIHRoZSBwcmFjdGljZSBvZiBtYXJyeWluZyBvZmYgZ2lybHMgYWdlZCAxMCBvciBldmVuICB5b3VuZ2VyLCBwb2ludGluZyB0byBzb2NpYWwsIGV0aGljYWwsIGFuZCBoeWdpZW5lIGlzc3VlcywgYW5kIHJlamVjdGluZyB0aGUgdmFsaWRpdHkgb2YgdGhlICBEaGFybWEgU2hhc3RyYXMgdGhhdCBhZHZvY2F0ZWQgaXQuICBIZSBzaG93ZWQgdGhhdCB0aGVyZSB3YXMgbm8gcHJvaGliaXRpb24gb24gd2lkb3dzIHJlbWFycnlpbmcgaW4gdGhlIGVudGlyZSBib2R5IG9mICAnU21yaXRpJyBsaXRlcmF0dXJlICh0aGUgU3V0cmFzIGFuZCB0aGUgU2hhc3RyYXMpLiAgRWR1Y2F0aW9uYWwgUmVmb3JtczogIFZpZHlhc2FnYXIgaXMgY3JlZGl0ZWQgd2l0aCB0aGUgcm9sZSBvZiB0aG9yb3VnaGx5IHJlbW9kZWxsaW5nIG1lZGlldmFsIHNjaG9sYXN0aWMgc3lzdGVtICBwcmV2YWlsaW5nIGluIFNhbnNrcml0IENvbGxlZ2UgYW5kIGJyaW5nIGFib3V0IG1vZGVybiBpbnNpZ2h0cyBpbnRvIHRoZSBlZHVjYXRpb24gc3lzdGVtLiAgVGhlIGZpcnN0IGNoYW5nZSB0aGF0IFZpZHlhc2FnYXIgbWFkZSB3aGVuIGhlIGNhbWUgYmFjayB0byB0aGUgU2Fuc2tyaXQgQ29sbGVnZSBhcyBhICBQcm9mZXNzb3Igd2FzIHRvIGluY2x1ZGUgRW5nbGlzaCBhbmQgQmVuZ2FsaSBhcyB0aGUgbWVkaXVtIG9mIGxlYXJuaW5nLCBiZXNpZGVzIFNhbnNrcml0LiAgSGUgaW50cm9kdWNlZCBjb3Vyc2VzIG9mIEV1cm9wZWFuIEhpc3RvcnksIFBoaWxvc29waHkgYW5kIFNjaWVuY2UgYWxvbmdzaWRlIFZlZGljICBzY3JpcHR1cmVzLiBIZSBlbmNvdXJhZ2VkIHN0dWRlbnRzIHRvIHB1cnN1ZSB0aGVzZSBzdWJqZWN0cyBhbmQgdGFrZSBhd2F5IHRoZSBiZXN0IGZyb20gIGJvdGggd29ybGRzLiAgSGUgYWxzbyBjaGFuZ2VkIHRoZSBydWxlcyBvZiBhZG1pc3Npb24gZm9yIHN0dWRlbnRzIGluIFNhbnNrcml0IENvbGxlZ2UgYWxsb3dpbmcgbm9uLSAgQnJhaG1pbiBzdHVkZW50cyB0byBlbnJvbGwgaW4gdGhlIHByZXN0aWdpb3VzIGluc3RpdHV0aW9uLiAgSGUgd3JvdGUgdHdvIGJvb2tzICdTYW5za3JpdC1WeWFrYXJhbiBVcGFrcmFtb25pa2EnICBhbmQgJ0J5YWthcmFuICBLb3VtdWRpJywgaW50ZXJwcmV0aW5nIGNvbXBsZXggbm90aW9ucyBvZiBTYW5za3JpdCBncmFtbWFyIGluIGVhc3kgbGVnaWJsZSBCZW5nYWxpICBsYW5ndWFnZS4gIEhlIGludHJvZHVjZWQgdGhlIGNvbmNlcHRzIG9mIEFkbWlzc2lvbiBmZWUgYW5kIHR1aXRpb24gZmVlIGZvciB0aGUgZmlyc3QgdGltZSBpbiBDYWxjdXR0YS4gIEhlIHNldCB1cCB0aGUgTm9ybWFsIFNjaG9vbCBmb3IgdHJhaW5pbmcgdGVhY2hlcnMgZW5hYmxpbmcgdW5pZm9ybWl0eSBpbiB0ZWFjaGluZyAgbWV0aG9kcy4gVGhyb3VnaCBoaXMgY29udGFjdHMgYXQgdGhlIGRlcHV0eSBtYWdpc3RyYXRlJ3Mgb2ZmaWNlIGhlIHdvdWxkIGhlbHAgaGlzICBzdHVkZW50cyBnZXQgam9icyBpbiBnb3Zlcm5tZW50IG9mZmljZXMuICBDYW1wYWlnbiBhZ2FpbnN0IHBvbHlnYW15OiAgQWxvbmdzaWRlIHRoZSBjYW1wYWlnbiBmb3Igd2lkb3cgcmVtYXJyaWFnZSwgaGUgY2FtcGFpZ25lZCBhZ2FpbnN0IHBvbHlnYW15LiAgSW4gMTg1NywgYSBwZXRpdGlvbiBmb3IgdGhlIHByb2hpYml0aW9uIG9mIHBvbHlnYW15IGFtb25nIEt1bGluIEJyYWhtaW5zIHdhcyBwcmVzZW50ZWQgIHRvIHRoZSBnb3Zlcm5tZW50IHdpdGggMjUsMDAwIHNpZ25hdHVyZXMsIGxlZCBieSB0aGUgTWFoYXJhamEgb2YgQnVyZHdhbi4gIFRoZSBtdXRpbnkgb2YgdGhlIHNlcG95cyByZXN1bHRlZCBpbiB0aGUgcG9zdHBvbmVtZW50IG9mIGFjdGlvbiBvbiB0aGlzIHBldGl0aW9uLCBidXQgaW4gIDE4NjYsIFZpZHlhc2FnYXIgaW5zcGlyZWQgYW5vdGhlciBwZXRpdGlvbiwgdGhpcyB0aW1lIHdpdGggMjEsMDAwIHNpZ25hdHVyZXMuICBJbiB0aGUgMTg3MHMsIHRoZSBncmVhdCByYXRpb25hbGlzdCwgd3JvdGUgdHdvIGJyaWxsaWFudCBjcml0aXF1ZXMgb2YgcG9seWdhbXksIGFyZ3VpbmcgdG8gIHRoZSBnb3Zlcm5tZW50IHRoYXQgc2luY2UgcG9seWdhbXkgd2FzIG5vdCBzYW5jdGlvbmVkIGJ5IHRoZSBzYWNyZWQgdGV4dHMsIHRoZXJlIGNvdWxkICBiZSBubyBvYmplY3Rpb24gdG8gc3VwcHJlc3NpbmcgaXQgYnkgbGVnaXNsYXRpb24uICBXb21lbidzIGVkdWNhdGlvbjogIEhlIHdhcyBhIGtlZW4gYWR2b2NhdGUgb2YgZWR1Y2F0aW9uIGZvciB3b21lbi4gSGUgcmlnaHRseSB2aWV3ZWQgZWR1Y2F0aW9uIGFzIHRoZSAgcHJpbWFyeSB3YXkgZm9yIHdvbWVuIHRvIGVtYW5jaXBhdGUgdGhlbXNlbHZlcyBmcm9tIGFsbCB0aGUgc29jaWFsIG9wcHJlc3Npb24gdGhleSBoYWQgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIHRvIGZhY2UgYXQgdGhlIHRpbWUuICBIZSB3ZW50IGRvb3IgdG8gZG9vciwgYXNraW5nIGZhbWlseSBoZWFkcyB0byBhbGxvdyB0aGVpciBkYXVnaHRlcnMgdG8gYmUgZW5yb2xsZWQgaW4gIHNjaG9vbHMuIEFjcm9zcyBCZW5nYWwsIGhlIG9wZW5lZCAzNSB3b21lbidzIHNjaG9vbHMgYW5kIHN1Y2NlZWRlZCBpbiBlbnJvbGxpbmcgMTMwMCAgc3R1ZGVudHMuICBUbyBzdXBwb3J0IHdvbWVuIGVkdWNhdGlvbiwgaGUgb3JnYW5pemVkIGEgZnVuZCBjYWxsZWQgTmFyaSBTaGlrc2hhIEJoYW5kYXIuICBIZSBzdXBwb3J0ZWQgRHJpbmt3YXRlciBCZXRodW5lIHRvIGVzdGFibGlzaCB0aGUgZmlyc3QgcGVybWFuZW50IGdpcmxzJyBzY2hvb2wgIGluIEluZGlhLCB0aGUgQmV0aHVuZSBTY2hvb2wuICBWaWR5YXNhZ2FyIHNwZW50IHRoZSBsYXN0IDE4IHllYXJzIG9mIGhpcyBsaWZlIGxpdmluZyBhbW9uZyBTYW50aGFsIHRyaWJhbHMgaW4gcHJlc2VudCBkYXkgIEpoYXJraGFuZCwgd2hlcmUgaGUgc3RhcnRlZCB3aGF0IGlzIHBvc3NpYmx5IEluZGlhJ3MgZmlyc3Qgc2Nob29sIGZvciBTYW50aGFsIGdpcmxzLiAgSGUgZXhwcmVzc2VkIGhpcyBpZGVhcyB0aHJvdWdoIHJlZ3VsYXIgYXJ0aWNsZXMgaGUgd3JvdGUgZm9yIHBlcmlvZGljYWxzIGFuZCBuZXdzcGFwZXJzLiAgSGUgd2FzIGFzc29jaWF0ZWQgd2l0aCBwcmVzdGlnaW91cyBqb3VybmFsaXN0aWMgcHVibGljYXRpb25zIGxpa2UgJ1RhdHR3YWJvZGhpbmkgUGF0cmlrYScsICAnU29tcHJha2FzaCcsICdTYXJiYXNodWJoYW5rYXJpIFBhdHJpa2EnIGFuZCAnSGluZHUgUGF0cmlvdCcuICBPdGhlciBsaXRlcmFyeSB3b3JrczogIFZpZHlhc2FnYXIncyBCYXJuYSBQYXJpY2hheSAoYW4gaW50cm9kdWN0aW9uIHRvIHRoZSBCZW5nYWxpIGFscGhhYmV0KSBpcyBzdGlsbCB0aGUgZmlyc3QgIGJvb2sgYSBCZW5nYWxpIGNoaWxkIGlzIGhhbmRlZCBtb3JlIHRoYW4gMTYwIHllYXJzIGFmdGVyIGl0IHdhcyB3cml0dGVuLiAgSGlzIGNvbnRyaWJ1dGlvbiB0byB0aGUgYWxwaGFiZXQsIHRyYW5zbGF0aW9uIG9mIHNldmVyYWwgU2Fuc2tyaXQgYm9va3MsIGluY2x1ZGluZyBLYWxpZGFzJ3MgIFNoYW5rdW50YWxhLCBoYXMgaGVscGVkIEJlbmdhbGkgbGl0ZXJhdHVyZS4gIEhlIHdyb3RlIHR3byBib29rcyB3aGljaCBpbnRlcnByZXRlZCBjb21wbGV4IG5vdGlvbnMgb2YgU2Fuc2tyaXQgR3JhbW1hciBpbiBCZW5nYWxpICBsYW5ndWFnZSB2aXouIFVwYWthcmFtb25pa2EgYW5kIEJ5YWthcmFuIEtvdW11ZGkuICBIZSBlc3RhYmxpc2hlZCB0aGUgU2Fuc2tyaXQgUHJlc3Mgd2l0aCBhbiBhaW0gdG8gcHJvZHVjZSBwcmludGVkIGJvb2tzIGF0IGFmZm9yZGFibGUgIHByaWNlcyBzbyB0aGF0IGNvbW1vbiBwZW9wbGUgY291bGQgYnV5IHRoZW0gIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMC8wNS8wNi9yc3R2LWluLWRlcHRoLWlzaHdhci1jaGFuZHJhLXZpZHlhc2FnYXIvIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 60,
      "question" : "Consider the following statements: \n\t1. Tarabai Shinde set up 'Balhatya Pratibandhak Griha' to prevent female infanticide. \n\t2. Savitribai Phule authored the book called ' Stri Purush Tulana' \n\t3. Ramabai Ranade established Seva Sadan for the rehabilitation of distressed women Test-3: GS Subject Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFNhdml0cmliYWkgUGh1bGUgKDE4MzEtMTg5NykgIFNoZSB3YXMgdGhlIGNvdW50cnkncyBmaXJzdCBmZW1hbGUgdGVhY2hlciB3aG8gd2VudCBvbiB0byBlc3RhYmxpc2ggc2V2ZXJhbCBzY2hvb2xzIGZvciAgd29tZW4gb2YgYWxsIGNhc3Rlcy4gICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEFsb25nIHdpdGggaGVyIGh1c2JhbmQgSnlvdGkgUmFvIFBodWxlLCBTYXZpdGliYWkgY2FtcGFpZ25lZCB0byBhYm9saXNoIGNhc3RlIGFuZCAgZ2VuZGVyIGRpc2NyaW1pbmF0aW9uIGFuZCBzZXQgdXAgJ0JhbGhhdHlhIFByYXRpYmFuZGhhayBHcmloYScgdG8gcHJldmVudCAgZmVtYWxlIGluZmFudGljaWRlLiBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiAgU2hlIHdvcmtlZCB3aXRoIG90aGVyIHdvbWVuIHRvIHVwbGlmdCB0aGUgdmljdGltcyBvZiByYXBlIGFuZCBwcmV2ZW50IGtpbGxpbmdzIG9mIHdpZG93cy4gIFRhcmFiYWkgU2hpbmRlICgxODUwLTE5MTApICBBIGZlbWluaXN0IGFjdGl2aXN0IGFuZCBhbiBhc3NvY2lhdGUgb2YgU2F2aXRyaWJhaSwgVGFyYWJhaSBTaGluZGUncyB0aG91Z2h0cyBhbmQgb3BpbmlvbnMgIHJlbWFpbiBjb250cm92ZXJzaWFsIHRvIGRhdGUgYmVjYXVzZSBvZiB0aGVpciBwcm9ncmVzc2l2ZSBhbmQgbm9uLWNvbmZvcm1pc3QgbmF0dXJlLiAgV2hpbGUgc2hlIHNoYXJlZCB0aGUgc2FtZSB2aWV3cyBvbiBnZW5kZXIgYW5kIGNhc3RlLWJhc2VkIGRpc2NyaW1pbmF0aW9uIGFzICBTYXZpdHJpYmFpJ3MsIHNoZSBhbHNvIGJlbGlldmVkIHRoYXQgd29tZW4gYWxsIGFyb3VuZCB0aGUgd29ybGQgYXJlIHNpbWlsYXJseSBvcHByZXNzZWQuICBIZXIgZmlyc3QgcHVibGlzaGVkIHdvcmsgd2FzIGhlciBNYXJhdGhpIGJvb2sgbmFtZWQgJ1N0cmkgUHVydXNoIFR1bGFuYScgIChDb21wYXJpc29uIG9mIG1lbiBhbmQgd29tZW4pIHdoaWNoIGlzIGZyZXF1ZW50bHkgY2l0ZWQgYW1vbmcgdGhlIEluZGlhbiBmZW1pbmlzdCAgY2lyY3VpdCB0byBkYXRlIGFzIGl0IGlzIGRlZW1lZCBhcyBvbmUgb2YgdGhlIGZpcnN0IG1vZGVybiBmZW1pbmlzbSB0ZXh0cyBpbiBJbmRpYS4gSGVuY2UsICBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuICBSYW1hYmFpIFJhbmFkZSAoMTg2My0xOTI0KSAgU29jaWFsIHJlZm9ybWVyIFJhbWFiYWkgUmFuYWRlIGlzIGNvbnNpZGVyZWQgYSBwaW9uZWVyIG9mIHRoZSB3b21lbmBzIG1vdmVtZW50IGluICBJbmRpYS4gIFNoZSBzdGFydGVkICdIaW5kdSBMYWRpZXMgU29jaWFsIENsdWInIGFsc28gZXN0YWJsaXNoZWQgU2V2YSBTYWRhbiBmb3IgdGhlICByZWhhYmlsaXRhdGlvbiBvZiBkaXN0cmVzc2VkIHdvbWVuLiBUaGlzIHBpb25lZXJpbmcgZWZmb3J0IGFsbG93ZWQgd29tZW4gdG8gYmVjb21lICBzZWxmLXJlbGlhbnQuIEhlbmNlLCBzdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "2 and 3 only "
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements: \n\t1. Kumbalathuparambu Ayyappan gave the famous slogan 'one caste, one religion, one god for humankind' \n\t2. Jyotirao Phule dedicated his book 'Gulamgiri' to all those Americans who had fought to free slaves. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFNocmkgTmFyYXlhbmEgR3VydSAgSW4gd2hhdCBpcyBwcmVzZW50LWRheSBLZXJhbGEsIGEgZ3VydSBmcm9tIEV6aGF2YSBjYXN0ZSwgU2hyaSBOYXJheWFuYSBHdXJ1LCBwcm9jbGFpbWVkICB0aGUgaWRlYWxzIG9mIHVuaXR5IGZvciBoaXMgcGVvcGxlLiBIZSBhcmd1ZWQgYWdhaW5zdCB0cmVhdGluZyBwZW9wbGUgdW5lcXVhbGx5IG9uIHRoZSAgYmFzaXMgb2YgY2FzdGUgZGlmZmVyZW5jZXMuICBBY2NvcmRpbmcgdG8gaGltLCBhbGwgaHVtYW5raW5kIGJlbG9uZ2VkIHRvIHRoZSBzYW1lIGNhc3RlLiBPbmUgb2YgaGlzIGZhbW91cyAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgc3RhdGVtZW50cyB3YXM6ICdvcnUgamF0aSwgb3J1IG1hdGFtLCBvcnUgZGFpdmFtIG1hbnVzaHlhbnUnIChvbmUgY2FzdGUsICBvbmUgcmVsaWdpb24sIG9uZSBnb2QgZm9yIGh1bWFua2luZCkuICBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiAgSy4gQXl5YXBwYW4gZ2F2ZSB0aGUgZmFtb3VzIHNsb2dhbjogJ05vIENhc3RlLCBObyBSZWxpZ2lvbiwgTm8gR29kIGZvciBNYW5raW5kJyAgSnlvdGlyYW8gUGh1bGUgIE9uZSBvZiB0aGUgbW9zdCB2b2NhbCBhbW9uZ3N0IHRoZSAnbG93LWNhc3RlJyBsZWFkZXJzIHdhcyBKeW90aXJhbyBQaHVsZS4gQm9ybiBpbiAxODI3LCAgaGUgc3R1ZGllZCBpbiBzY2hvb2xzIHNldCB1cCBieSBDaHJpc3RpYW4gbWlzc2lvbmFyaWVzLiAgT24gZ3Jvd2luZyB1cCBoZSBkZXZlbG9wZWQgaGlzIG93biBpZGVhcyBhYm91dCB0aGUgaW5qdXN0aWNlcyBvZiBjYXN0ZSBzb2NpZXR5LiAgVGhlIFNhdHlhc2hvZGhhayBTYW1haiwgYW4gYXNzb2NpYXRpb24gUGh1bGUgZm91bmRlZCwgcHJvcGFnYXRlZCBjYXN0ZSBlcXVhbGl0eS4gIEluIDE4NzMsIFBodWxlIHdyb3RlIGEgYm9vayBuYW1lZCBHdWxhbWdpcmksIG1lYW5pbmcgc2xhdmVyeS4gIFNvbWUgdGVuIHllYXJzIGJlZm9yZSB0aGlzLCB0aGUgQW1lcmljYW4gQ2l2aWwgV2FyIGhhZCBiZWVuIGZvdWdodCwgbGVhZGluZyB0byB0aGUgZW5kIG9mICBzbGF2ZXJ5IGluIEFtZXJpY2EuIFBodWxlIGRlZGljYXRlZCBoaXMgYm9vayB0byBhbGwgdGhvc2UgQW1lcmljYW5zIHdobyBoYWQgIGZvdWdodCB0byBmcmVlIHNsYXZlcywgdGh1cyBlc3RhYmxpc2hpbmcgYSBsaW5rIGJldHdlZW4gdGhlIGNvbmRpdGlvbnMgb2YgdGhlICAnbG93ZXInIGNhc3RlcyBpbiBJbmRpYSBhbmQgdGhlIGJsYWNrIHNsYXZlcyBpbiBBbWVyaWNhLiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgIGNvcnJlY3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 62,
      "question" : "The Satnami movement was founded by: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBTYXRuYW1pIG1vdmVtZW50IGluIENlbnRyYWwgSW5kaWEgd2FzIGZvdW5kZWQgYnkgR2hhc2lkYXMgd2hvIHdvcmtlZCBhbW9uZyB0aGUgIGxlYXRoZXJ3b3JrZXJzIGFuZCBvcmdhbmlzZWQgYSBtb3ZlbWVudCB0byBpbXByb3ZlIHRoZWlyIHNvY2lhbCBzdGF0dXMuICBJbiBlYXN0ZXJuIEJlbmdhbCwgSGFyaWRhcyBUaGFrdXIncyBNYXR1YSBzZWN0IHdvcmtlZCBhbW9uZyBDaGFuZGFsYSBjdWx0aXZhdG9ycy4gIEhhcmlkYXMgcXVlc3Rpb25lZCBCcmFobWFuaWNhbCB0ZXh0cyB0aGF0IHN1cHBvcnRlZCB0aGUgY2FzdGUgc3lzdGVtLiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ghasidas ",
        "option2" : "Ravidas ",
        "option3" : "Narayan Deo ",
        "option4" : "Bhawani Pathak "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statements regarding Balshastri Jambhekar: \n\t1. He founded the Bombay Native General Library \n\t2. He started Digdarshan which published articles on scientific subjects as well as history Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3QuICBCYWxzaGFzdHJpIEphbWJoZWthcjogIEJhbHNoYXN0cmkgSmFtYmhla2FyICgxODEyLTE4NDYpIHdhcyBhIHBpb25lZXIgb2Ygc29jaWFsIHJlZm9ybSB0aHJvdWdoIGpvdXJuYWxpc20gaW4gIEJvbWJheTsgaGUgYXR0YWNrZWQgQnJhaG1pbmljYWwgb3J0aG9kb3h5IGFuZCB0cmllZCB0byByZWZvcm0gcG9wdWxhciBIaW5kdWlzbS4gIEhlIHN0YXJ0ZWQgdGhlIG5ld3NwYXBlciBEYXJwYW4gaW4gMTgzMi4gIEtub3duIGFzIHRoZSBmYXRoZXIgb2YgTWFyYXRoaSBqb3VybmFsaXNtLCBKYW1iaGVrYXIgdXNlZCB0aGUgRGFycGFuIHRvIGF3YWtlbiB0aGUgIHBlb3BsZSB0byBhd2FyZW5lc3Mgb2Ygc29jaWFsIHJlZm9ybXMsIHN1Y2ggYXMgd2lkb3cgcmVtYXJyaWFnZSwgYW5kIHRvIGluc3RpbGwgaW4gdGhlICBtYXNzZXMgYSBzY2llbnRpZmljIGFwcHJvYWNoIHRvIGxpZmUuICBJbiAxODQwLCBoZSBzdGFydGVkIERpZ2RhcnNoYW4gd2hpY2ggcHVibGlzaGVkIGFydGljbGVzIG9uIHNjaWVudGlmaWMgc3ViamVjdHMgIGFzIHdlbGwgYXMgaGlzdG9yeS4gIEphbWJoZWthciBmb3VuZGVkIHRoZSBCb21iYXkgTmF0aXZlIEdlbmVyYWwgTGlicmFyeSBhbmQgc3RhcnRlZCB0aGUgTmF0aXZlICBJbXByb3ZlbWVudCBTb2NpZXR5IG9mIHdoaWNoIGFuIG9mZnNob290IHdhcyB0aGUgU3R1ZGVudHMgTGl0ZXJhcnkgYW5kICBTY2llbnRpZmljIExpYnJhcnkuICBIZSB3YXMgdGhlIGZpcnN0IHByb2Zlc3NvciBvZiBIaW5kaSBhdCB0aGUgRWxwaGluc3RvbiBDb2xsZWdlLCBiZXNpZGVzIGJlaW5nIGEgZGlyZWN0b3Igb2YgIHRoZSBDb2xhYmEgT2JzZXJ2YXRvcnkuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statements regarding the Indian Councils Act, 1892 \n\t1. The members of the legislatures were now entitled to express their views upon financial statements. \n\t2. The universities, district boards, municipalities, zamindars, trade bodies and chambers of commerce were empowered to recommend members to the provincial councils Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3QuICBJbmRpYW4gQ291bmNpbHMgQWN0LCAxODkyICDil48gSW4gMTg4NSwgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgZm91bmRlZC4gVGhlIENvbmdyZXNzIHNhdyByZWZvcm0gb2YgdGhlIGNvdW5jaWxzICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBhcyB0aGUgJ3Jvb3Qgb2YgYWxsIG90aGVyIHJlZm9ybXMnLiBJdCB3YXMgaW4gcmVzcG9uc2UgdG8gdGhlIENvbmdyZXNzIGRlbWFuZCB0aGF0IHRoZSAgbGVnaXNsYXRpdmUgY291bmNpbHMgYmUgZXhwYW5kZWQgdGhhdCB0aGUgbnVtYmVyIG9mIG5vbi1vZmZpY2lhbCBtZW1iZXJzIHdhcyBpbmNyZWFzZWQgYm90aCBpbiAgdGhlIGNlbnRyYWwgKEltcGVyaWFsKSBhbmQgcHJvdmluY2lhbCBsZWdpc2xhdGl2ZSBjb3VuY2lscyBieSB0aGUgSW5kaWFuIENvdW5jaWxzIEFjdCwgMTg5Mi4gIOKXjyBUaGUgTGVnaXNsYXRpdmUgQ291bmNpbCBvZiB0aGUgR292ZXJub3ItR2VuZXJhbCAob3IgdGhlIEluZGlhbiBMZWdpc2xhdGl2ZSBDb3VuY2lsLCBhcyBpdCBjYW1lICB0byBiZSBrbm93bikgd2FzIGVubGFyZ2VkLiAg4pePIFRoZSB1bml2ZXJzaXRpZXMsIGRpc3RyaWN0IGJvYXJkcywgbXVuaWNpcGFsaXRpZXMsIHphbWluZGFycywgdHJhZGUgYm9kaWVzIGFuZCAgY2hhbWJlcnMgb2YgY29tbWVyY2Ugd2VyZSBlbXBvd2VyZWQgdG8gcmVjb21tZW5kIG1lbWJlcnMgdG8gdGhlIHByb3ZpbmNpYWwgIGNvdW5jaWxzLiBUaHVzIHdhcyBpbnRyb2R1Y2VkIHRoZSBwcmluY2lwbGUgb2YgcmVwcmVzZW50YXRpb24uICDil48gVGhvdWdoIHRoZSB0ZXJtICdlbGVjdGlvbicgd2FzIGZpcm1seSBhdm9pZGVkIGluIHRoZSBBY3QsIGFuIGVsZW1lbnQgb2YgaW5kaXJlY3QgZWxlY3Rpb24gd2FzICBhY2NlcHRlZCBpbiB0aGUgc2VsZWN0aW9uIG9mIHNvbWUgb2YgdGhlIG5vbi1vZmZpY2lhbCBtZW1iZXJzLiAg4pePIFRoZSBtZW1iZXJzIG9mIHRoZSBsZWdpc2xhdHVyZXMgd2VyZSBub3cgZW50aXRsZWQgdG8gZXhwcmVzcyB0aGVpciB2aWV3cyB1cG9uICBmaW5hbmNpYWwgc3RhdGVtZW50cyB3aGljaCB3ZXJlIGhlbmNlZm9ydGggdG8gYmUgbWFkZSBvbiB0aGUgZmxvb3Igb2YgdGhlICBsZWdpc2xhdHVyZXMuICDil48gVGhleSBjb3VsZCBhbHNvIHB1dCBxdWVzdGlvbnMgd2l0aGluIGNlcnRhaW4gbGltaXRzIHRvIHRoZSBleGVjdXRpdmUgb24gbWF0dGVycyBvZiBwdWJsaWMgIGludGVyZXN0IGFmdGVyIGdpdmluZyBzaXggZGF5cycgbm90aWNlLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only      Test-3: GS Subject   ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 65,
      "question" : "Consider the following statements regarding Pandita Ramabai: \n\t1. She started the Sharada Sadan (shelter for the homeless) for the destitute widows \n\t2. She started the Arya Mahila Samaj Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3QuICBQYW5kaXRhIFJhbWFiYWk6ICBQYW5kaXRhIFJhbWFiYWkgd2FzIGZvcmVtb3N0IGFtb25nIHRoZSBJbmRpYW4gbGVhZGVycyB3aG8gd29ya2VkIGZvciB0aGUgIGVtYW5jaXBhdGlvbiBvZiB3b21lbi4gU2hlIGNhbWUgZnJvbSBhIGxlYXJuZWQgZmFtaWx5IGFuZCB3YXMgYSBncmVhdCAgc2Nob2xhciBvZiBTYW5za3JpdCBhbmQgYWRkcmVzc2VkIG1hbnkgbGVhcm5lZCBncm91cHMgaW4gZGlmZmVyZW50IHBhcnRzIG9mIHRoZSAgY291bnRyeS4gIFNoZSB3YXMgZ2l2ZW4gdGhlIHRpdGxlIG9mICdQYW5kaXRhJyBhbmQgJ1NhcmFzd2F0aScgZm9yIGhlciBkZWVwIGtub3dsZWRnZSBvZiBTYW5za3JpdC4gIEluIDE4ODAgc2hlIG1hcnJpZWQgYSBCZW5nYWxpIGJlbG9uZ2luZyB0byBhIGZhbWlseSBvZiBsb3dlciBzb2NpYWwgc3RhdHVzLiBUaHVzLCBldmVuIGF0ICB0aGF0IHRpbWUgc2hlIHdhcyBib2xkIGVub3VnaCB0byBtYXJyeSBhIG1hbiBvZiBhIGRpZmZlcmVudCBjYXN0ZSBhbmQgZGlmZmVyZW50ICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBsYW5ndWFnZS4gIEFmdGVyIHRoZSBkZWF0aCBvZiBoZXIgaHVzYmFuZCB0d28geWVhcnMgbGF0ZXIgc2hlIHJldHVybmVkIHRvIFBvb25hIGFuZCBzdGFydGVkIHRoZSBBcnlhICBNYWhpbGEgU2FtYWogd2l0aCB0aGUgaGVscCBvZiBsZWFkZXJzIGxpa2UgUmFuYWRlIGFuZCBCaGFuZGFya2FyLiAgUmFtYWJhaSBzdGFydGVkIHRoZSBTaGFyYWRhIFNhZGFuIChzaGVsdGVyIGZvciBob21lbGVzcykgZm9yIHRoZSBkZXN0aXR1dGUgIHdpZG93cyB3aXRoIHRoZSBoZWxwIG9mIFJhbmFkZSBhbmQgQmhhbmRhcmthci4gQnV0IHNvb24gc2hlIHdhcyBhY2N1c2VkIG9mICBjb252ZXJ0aW5nIEhpbmR1IHdvbWVuIHRvIENocmlzdGlhbml0eSBhbmQgaGVuY2UgaGFkIHRvIHNoaWZ0IGhlciBhY3Rpdml0aWVzIHRvICBLaGVkZ29hbiBuZWFyIFBvb25hLiAgU2hlIGVzdGFibGlzaGVkIGEgTXVrdGkgU2FkYW4gKGZyZWVkb20gaG91c2UpIHRoZXJlLiBTb29uIHRoZXJlIHdlcmUgMjAwMCBjaGlsZHJlbiBhbmQgIHdvbWVuIGluIHRoZSBob3VzZS4gVm9jYXRpb25hbCB0cmFpbmluZyB3YXMgZ2l2ZW4gbWFrZSB0aGVtIHNlbGYtcmVsaWFudC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 66,
      "question" : "Consider the following statements regarding the Indian Councils Act, 1861 \n\t1. It provided for portfolio system \n\t2. It took away the legislative powers to the provinces of Madras and Bombay Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluZGlhbiBDb3VuY2lscyBBY3QsIDE4NjEgIOKXjyBUaGUgMTg2MSBBY3QgbWFya2VkIGFuIGFkdmFuY2UgaW4gdGhhdCB0aGUgcHJpbmNpcGxlIG9mIHJlcHJlc2VudGF0aXZlcyBvZiBub24tb2ZmaWNpYWxzIGluICBsZWdpc2xhdGl2ZSBib2RpZXMgYmVjYW1lIGFjY2VwdGVkOyBsYXdzIHdlcmUgdG8gYmUgbWFkZSBhZnRlciBkdWUgZGVsaWJlcmF0aW9uLCBhbmQgYXMgcGllY2VzICBvZiBsZWdpc2xhdGlvbiB0aGV5IGNvdWxkIGJlIGNoYW5nZWQgb25seSBieSB0aGUgc2FtZSBkZWxpYmVyYXRpdmUgcHJvY2Vzcy4gTGF3LW1ha2luZyB3YXMgIHRodXMgbm8gbG9uZ2VyIHNlZW4gYXMgdGhlIGV4Y2x1c2l2ZSBidXNpbmVzcyBvZiB0aGUgZXhlY3V0aXZlLiAg4pePIFRoZSBwb3J0Zm9saW8gc3lzdGVtIGludHJvZHVjZWQgYnkgTG9yZCBDYW5uaW5nIGxhaWQgdGhlIGZvdW5kYXRpb25zIG9mIGNhYmluZXQgIGdvdmVybm1lbnQgaW4gSW5kaWEsIGVhY2ggYnJhbmNoIG9mIHRoZSBhZG1pbmlzdHJhdGlvbiBoYXZpbmcgaXRzIG9mZmljaWFsIGhlYWQgYW5kICBzcG9rZXNtYW4gaW4gdGhlIGdvdmVybm1lbnQsIHdobyB3YXMgcmVzcG9uc2libGUgZm9yIGl0cyBhZG1pbmlzdHJhdGlvbi4gSGVuY2UsICBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAg4pePIFRoZSBBY3QsIHJldHVybmVkIHRoZSBsZWdpc2xhdGl2ZSBwb3dlcnMgdG8gcHJvdmluY2VzIG9mIE1hZHJhcyBhbmQgQm9tYmF5IHdoaWNoICBoYWQgYmVlbiB0YWtlbiBhd2F5IGluIDE4MzMuICBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgSG93ZXZlciwgdGhlIGxlZ2lzbGF0aXZlIGNvdW5jaWxzIGVzdGFibGlzaGVkIGJ5IHRoZSBBY3Qgb2YgMTg2MSBwb3NzZXNzZWQgbm8gcmVhbCBwb3dlcnMgIGFuZCBoYWQgbWFueSB3ZWFrbmVzc2VzLiAgVGhlIGNvdW5jaWxzIGNvdWxkIG5vdCBkaXNjdXNzIGltcG9ydGFudCBtYXR0ZXJzIGFuZCBubyBmaW5hbmNpYWwgbWF0dGVycyBhdCBhbGwgd2l0aG91dCAgcHJldmlvdXMgYXBwcm92YWwgb2YgZ292ZXJubWVudC4gVGhleSBoYWQgbm8gY29udHJvbCBvdmVyIGJ1ZGdldC4gVGhleSBjb3VsZCBub3QgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGRpc2N1c3MgZXhlY3V0aXZlIGFjdGlvbi4gRmluYWwgcGFzc2luZyBvZiB0aGUgYmlsbCBuZWVkZWQgdmljZXJveSdzIGFwcHJvdmFsLiBFdmVuIGlmICBhcHByb3ZlZCBieSB0aGUgdmljZXJveSwgdGhlIHNlY3JldGFyeSBvZiBzdGF0ZSBjb3VsZCBkaXNhbGxvdyBhIGxlZ2lzbGF0aW9uLiAgSW5kaWFucyBhc3NvY2lhdGVkIGFzIG5vbi1vZmZpY2lhbHMgd2VyZSBtZW1iZXJzIG9mIGVsaXRlIHNlY3Rpb25zIG9ubHkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 67,
      "question" : "Which of the following was/were the provisions of the Indian Factory Act, 1881 \n\t1. It prohibited employment of children under ten years. \n\t2. It provided weekly holiday for all. Select the correct answer using the code given below ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE5vbmUgb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMgY29ycmVjdC4gIFRoZSBJbmRpYW4gRmFjdG9yeSBBY3QsIDE4ODEgZGVhbHQgcHJpbWFyaWx5IHdpdGggdGhlIHByb2JsZW0gb2YgY2hpbGQgbGFib3VyIChiZXR3ZWVuIDcgYW5kICAxMiB5ZWFycyBvZiBhZ2UpLiAgSXRzIHNpZ25pZmljYW50IHByb3Zpc2lvbnMgd2VyZTogIOKXjyBlbXBsb3ltZW50IG9mIGNoaWxkcmVuIHVuZGVyIDcgeWVhcnMgb2YgYWdlIHByb2hpYml0ZWQsICDil48gd29ya2luZyBob3VycyByZXN0cmljdGVkIHRvIDkgaG91cnMgcGVyIGRheSBmb3IgY2hpbGRyZW4sICDil48gY2hpbGRyZW4gdG8gZ2V0IGZvdXIgaG9saWRheXMgaW4gYSBtb250aCwgIOKXjyBoYXphcmRvdXMgbWFjaGluZXJ5IHRvIGJlIHByb3Blcmx5IGZlbmNlZCBvZmYuICBUaGUgSW5kaWFuIEZhY3RvcnkgQWN0LCAxODkxICDil48gaW5jcmVhc2VkIHRoZSBtaW5pbXVtIGFnZSAoZnJvbSA3IHRvIDkgeWVhcnMpIGFuZCB0aGUgbWF4aW11bSAoZnJvbSAxMiB0byAxNCAgeWVhcnMpIGZvciBjaGlsZHJlbiwgIOKXjyByZWR1Y2VkIG1heGltdW0gd29ya2luZyBob3VycyBmb3IgY2hpbGRyZW4gdG8gNyBob3VycyBhIGRheSwgIOKXjyBmaXhlZCBtYXhpbXVtIHdvcmtpbmcgaG91cnMgZm9yIHdvbWVuIGF0IDExIGhvdXJzIHBlciBkYXkgd2l0aCBhbiBvbmUtYW5kLWEtICBoYWxmIGhvdXIgaW50ZXJ2YWwgKHdvcmtpbmcgaG91cnMgZm9yIG1lbiB3ZXJlIGxlZnQgdW5yZWd1bGF0ZWQpLCAg4pePIHByb3ZpZGVkIHdlZWtseSBob2xpZGF5IGZvciBhbGwuICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 69,
      "question" : "Who among the following freedom fighters was arrested for writing about the Saligram idol case? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFN1cmVuZHJhbmF0aCBCYW5lcmplYSwgb25lIG9mIHRoZSBmb3VuZGluZyBmYXRoZXJzIG9mIHRoZSBJbmRpYW4gbmF0aW9uYWwgIG1vdmVtZW50LCB3YXMgdGhlIGZpcnN0IEluZGlhbiB0byBnbyB0byBqYWlsIGluIHBlcmZvcm1hbmNlIG9mIGhpcyBkdXR5IGFzIGEgIGpvdXJuYWxpc3QuICBBIGRpc3B1dGUgY29uY2VybmluZyBhIGZhbWlseSBpZG9sLCBhIHNhbGlncmFtLCBoYWQgY29tZSB1cCBiZWZvcmUgSnVzdGljZSBOb3JyaXMgb2YgIHRoZSBDYWxjdXR0YSBIaWdoIENvdXJ0LiBUbyBkZWNpZGUgdGhlIGFnZSBvZiB0aGUgaWRvbCwgTm9ycmlzIG9yZGVyZWQgaXQgdG8gYmUgYnJvdWdodCB0byAgdGhlIENvdXJ0IGFuZCBwcm9ub3VuY2VkIHRoYXQgaXQgY291bGQgbm90IGJlIGEgaHVuZHJlZCB5ZWFycyBvbGQuIFRoaXMgYWN0aW9uIGRlZXBseSAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgaHVydCB0aGUgc2VudGltZW50cyBvZiB0aGUgQmVuZ2FsaSBIaW5kdXMuICBCYW5lcmplYSB3cm90ZSBhbiBhbmdyeSBlZGl0b3JpYWwgaW4gdGhlIEJlbmdhbGVlIG9mIDIgQXByaWwgMTg4My4gQ29tcGFyaW5nIE5vcnJpcyB3aXRoICB0aGUgbm90b3Jpb3VzIEplZmZyZXlzIGFuZCBTZXJvZ2dzIChCcml0aXNoIGp1ZGdlcyBpbiB0aGUgMTd0aCBjZW50dXJ5LCAgbm90b3Jpb3VzIGZvciBpbmZhbW91cyBjb25kdWN0IGFzIGp1ZGdlcyksIGhlIHNhaWQgdGhhdCBOb3JyaXMgaGFkIGRvbmUgZW5vdWdoICd0byBzaG93IGhvdyAgdW53b3J0aHkgaGUgaXMgb2YgaGlzIGhpZ2ggb2ZmaWNlLicgIEltbWVkaWF0ZWx5LCB0aGUgSGlnaCBDb3VydCBoYXVsZWQgaGltIHVwIGZvciBjb250ZW1wdCBvZiBjb3VydCBiZWZvcmUgYSAgYmVuY2ggb2YgZml2ZSBqdWRnZXMsIGZvdXIgb2YgdGhlbSBFdXJvcGVhbnMuIFdpdGggdGhlIEluZGlhbiBqdWRnZSwgUm9tZXNoICBDaGFuZHJhIE1pdHJhLCBkaXNzZW50aW5nLCB0aGUgYmVuY2ggY29udmljdGVkIGFuZCBzZW50ZW5jZWQgaGltIHRvIHR3byAgbW9udGhzIGltcHJpc29ubWVudC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Mahatma Gandhi ",
        "option2" : "M.G. Ranade ",
        "option3" : "Bal Gangadhar Tilak ",
        "option4" : "Surendranth Banerjea. "
      }
    },
    {
      "index" : 71,
      "question" : "Consider the following statements \n\t1. China shares border with Afghanistan \n\t2. Thailand shares border with Malaysia \n\t3. Russia shares border with North Korea Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements regarding MGNREGA \n\t1. Gram Sabha and the Gram Panchayat which approves the shelf of works under MGNREGA. \n\t2. It provides both skilled and unskilled labour. \n\t3. It provides employment in rural areas only. \n\t4. Both citizen and non-citizen of India can apply for the job under this scheme Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFib3V0IE1HTlJFR0E6ICBUaGUgc2NoZW1lIHdhcyBpbnRyb2R1Y2VkIGFzIGEgc29jaWFsIG1lYXN1cmUgdGhhdCBndWFyYW50ZWVzICd0aGUgcmlnaHQgdG8gd29yaycuIFRoZSAga2V5IHRlbmV0IG9mIHRoaXMgc29jaWFsIG1lYXN1cmUgYW5kIGxhYm91ciBsYXcgaXMgdGhhdCB0aGUgbG9jYWwgZ292ZXJubWVudCB3aWxsIGhhdmUgdG8gbGVnYWxseSAgcHJvdmlkZSBhdCBsZWFzdCAxMDAgZGF5cyBvZiB3YWdlIGVtcGxveW1lbnQgaW4gcnVyYWwgSW5kaWEgdG8gZW5oYW5jZSB0aGVpciBxdWFsaXR5ICBvZiBsaWZlLiAgS2V5IG9iamVjdGl2ZXM6ICBHZW5lcmF0aW9uIG9mIHBhaWQgcnVyYWwgZW1wbG95bWVudCBvZiBub3QgbGVzcyB0aGFuIDEwMCBkYXlzIGZvciBlYWNoIHdvcmtlciB3aG8xLiAgdm9sdW50ZWVycyBmb3IgdW5za2lsbGVkIGxhYm91ci4gIFByb2FjdGl2ZWx5IGVuc3VyaW5nIHNvY2lhbCBpbmNsdXNpb24gYnkgc3RyZW5ndGhlbmluZyBsaXZlbGlob29kIGJhc2Ugb2YgcnVyYWwgcG9vci4yLiAgQ3JlYXRpb24gb2YgZHVyYWJsZSBhc3NldHMgaW4gcnVyYWwgYXJlYXMgc3VjaCBhcyB3ZWxscywgcG9uZHMsIHJvYWRzIGFuZCBjYW5hbHMuMy4gIFJlZHVjZSB1cmJhbiBtaWdyYXRpb24gZnJvbSBydXJhbCBhcmVhcy40LiAgQ3JlYXRlIHJ1cmFsIGluZnJhc3RydWN0dXJlIGJ5IHVzaW5nIHVudGFwcGVkIHJ1cmFsIGxhYm91ci41LiAgVGhlIGZvbGxvd2luZyBhcmUgdGhlIGVsaWdpYmlsaXR5IGNyaXRlcmlhIGZvciByZWNlaXZpbmcgdGhlIGJlbmVmaXRzIHVuZGVyIE1HTlJFR0EgIHNjaGVtZTogIE11c3QgYmUgQ2l0aXplbiBvZiBJbmRpYSB0byBzZWVrIE5SRUdBIGJlbmVmaXRzLiBIZW5jZSwgc3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LjEuICBKb2Igc2Vla2VyIGhhcyBjb21wbGV0ZWQgMTggeWVhcnMgb2YgYWdlIGF0IHRoZSB0aW1lIG9mIGFwcGxpY2F0aW9uLjIuICBUaGUgYXBwbGljYW50IG11c3QgYmUgcGFydCBvZiBhIGxvY2FsIGhvdXNlaG9sZCAoaS5lLiwgYXBwbGljYXRpb24gbXVzdCBiZSBtYWRlIHdpdGgxLiAgbG9jYWwgR3JhbSBQYW5jaGF5YXQpLiAgQXBwbGljYW50IG11c3Qgdm9sdW50ZWVyIGZvciB1bnNraWxsZWQgbGFib3VyLiBIZW5jZSBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuMi4gIEtleSBmYWN0cyByZWxhdGVkIHRvIHRoZSBzY2hlbWU6ICBUaGUgTWluaXN0cnkgb2YgUnVyYWwgRGV2ZWxvcG1lbnQgKE1SRCksIEdvdnQgb2YgSW5kaWEgaXMgbW9uaXRvcmluZyB0aGUgZW50aXJlMS4gIGltcGxlbWVudGF0aW9uIG9mIHRoaXMgc2NoZW1lIGluIGFzc29jaWF0aW9uIHdpdGggc3RhdGUgZ292ZXJubWVudHMuICBJbmRpdmlkdWFsIGJlbmVmaWNpYXJ5LW9yaWVudGVkIHdvcmtzIGNhbiBiZSB0YWtlbiB1cCBvbiB0aGUgY2FyZHMgb2YgU2NoZWR1bGVkMi4gIENhc3RlcyBhbmQgU2NoZWR1bGVkIFRyaWJlcywgc21hbGwgb3IgbWFyZ2luYWwgZmFybWVycyBvciBiZW5lZmljaWFyaWVzIG9mIGxhbmQgcmVmb3JtcyBvciAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgYmVuZWZpY2lhcmllcyB1bmRlciB0aGUgSW5kaXJhIEF3YWFzIFlvamFuYSBvZiB0aGUgR292ZXJubWVudCBvZiBJbmRpYS4gIFdpdGhpbiAxNSBkYXlzIG9mIHN1Ym1pdHRpbmcgdGhlIGFwcGxpY2F0aW9uIG9yIGZyb20gdGhlIGRheSB3b3JrIGlzIGRlbWFuZGVkLCB3YWdlMy4gIGVtcGxveW1lbnQgd2lsbCBiZSBwcm92aWRlZCB0byB0aGUgYXBwbGljYW50LiAgUmlnaHQgdG8gZ2V0IHVuZW1wbG95bWVudCBhbGxvd2FuY2UgaW4gY2FzZSBlbXBsb3ltZW50IGlzIG5vdCBwcm92aWRlZCB3aXRoaW40LiAgZmlmdGVlbiBkYXlzIG9mIHN1Ym1pdHRpbmcgdGhlIGFwcGxpY2F0aW9uIG9yIGZyb20gdGhlIGRhdGUgd2hlbiB3b3JrIGlzIHNvdWdodC4gIFNvY2lhbCBBdWRpdCBvZiBNR05SRUdBIHdvcmtzIGlzIG1hbmRhdG9yeSwgd2hpY2ggbGVuZHMgdG8gYWNjb3VudGFiaWxpdHkgYW5kNS4gIHRyYW5zcGFyZW5jeS4gIFRoZSBHcmFtIFNhYmhhIGlzIHRoZSBwcmluY2lwYWwgZm9ydW0gZm9yIHdhZ2Ugc2Vla2VycyB0byByYWlzZSB0aGVpciB2b2ljZXMgYW5kIG1ha2U2LiAgZGVtYW5kcy4gIEl0IGlzIHRoZSBHcmFtIFNhYmhhIGFuZCB0aGUgR3JhbSBQYW5jaGF5YXQgd2hpY2ggYXBwcm92ZXMgdGhlIHNoZWxmIG9mIHdvcmtzIHVuZGVyNy4gIE1HTlJFR0EgYW5kIGZpeCB0aGVpciBwcmlvcml0eS4gIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wMy8xOC9tYWhhdG1hLWdhbmRoaS1uYXRpb25hbC1ydXJhbC1lbXBsb3ltZW50LWd1YXJhICBudGVlLWFjdC1tZ25yZWdhLTMvICBodHRwOi8vd3d3LmFydGhhcGVkaWEuaW4vaW5kZXgucGhwL01haGF0bWFfR2FuZGhpX05hdGlvbmFsX1J1cmFsX0VtcGxveW1lbnRfR3VhcmFudGVlXyAgQWN0XyhNR05SRUdBKV9vZl8yMDA1IA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "1, 2 and 3 only ",
        "option3" : "2, 3 and 4 only      Test-3: GS Subject   ",
        "option4" : "1, 2, 3 and 4 "
      }
    },
    {
      "index" : 73,
      "question" : "Consider the following statements regarding Global Depository receipt/ Depository receipt (DRs) \n\t1. In India any company - whether private limited or public limited or listed or unlisted - can issue DRs. \n\t2. ADR /GDR issues based on shares of a company are considered as part of Foreign Direct Investment (FDI) in India. \n\t3. Listed DRs enjoy some tax benefits in India. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEFsbCB0aGUgYWJvdmUgc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gIEFzIHBlciB0aGUgQ29tcGFuaWVzIEFjdCwgMjAxMyAiR2xvYmFsIERlcG9zaXRvcnkgcmVjZWlwdCIgbWVhbnMgYW55IGluc3RydW1lbnQgaW4gdGhlIGZvcm0gIG9mIGEgZGVwb3NpdG9yeSByZWNlaXB0IGNyZWF0ZWQgYnkgYSBmb3JlaWduIGRlcG9zaXRvcnkgb3V0c2lkZSBJbmRpYSBhbmQgYXV0aG9yaXNlZCBieSBhICBjb21wYW55IG1ha2luZyBhbiBpc3N1ZSBvZiBzdWNoIGRlcG9zaXRvcnkgcmVjZWlwdHMgd2hpbGUgdGhlICJJbmRpYW4gRGVwb3NpdG9yeSBSZWNlaXB0JyAgbWVhbnMgYW55IGluc3RydW1lbnQgaW4gdGhlIGZvcm0gb2YgYSBkZXBvc2l0b3J5IHJlY2VpcHQgY3JlYXRlZCBieSBhIGRvbWVzdGljIGRlcG9zaXRvcnkgaW4gIEluZGlhIGFuZCBhdXRob3Jpc2VkIGJ5IGEgY29tcGFueSBpbmNvcnBvcmF0ZWQgb3V0c2lkZSBJbmRpYTsgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIEluIEluZGlhIGFueSBjb21wYW55IC0gd2hldGhlciBwcml2YXRlIGxpbWl0ZWQgb3IgcHVibGljIGxpbWl0ZWQgb3IgbGlzdGVkIG9yIHVubGlzdGVkIC0gIGNhbiBpc3N1ZSBEUnMuIEhvd2V2ZXIgbGlzdGVkIERScyBlbmpveSBzb21lIHRheCBiZW5lZml0cy4gIEFEUiAvR0RSIGlzc3VlcyBiYXNlZCBvbiBzaGFyZXMgb2YgYSBjb21wYW55IGFyZSBjb25zaWRlcmVkIGFzIHBhcnQgb2YgRm9yZWlnbiAgRGlyZWN0IEludmVzdG1lbnQgKEZESSkgaW4gSW5kaWEsIHRob3VnaCBpdCBpcyBhbiBpbmRpcmVjdCB3YXkgb2YgaG9sZGluZyBzaGFyZXMuIEFzIHBlciAgYSBDYWJpbmV0IGRlY2lzaW9uIGRhdGVkIDE2IEp1bHkgMjAxNSwgRFJzIGhhdmluZyB1bmRlcmx5aW5nIG9mIGluc3RydW1lbnRzIHdoaWNoIGNhbiBiZSAgaXNzdWVkIHVuZGVyIFNjaGVkdWxlIDUgb2YgRkVNQSBSZWd1bGF0aW9ucywgYmVpbmcgaW4gdGhlIG5hdHVyZSBvZiBkZWJ0LCB3aWxsIG5vdCBiZSB0cmVhdGVkIGFzICBmb3JlaWduIGludmVzdG1lbnQuIEhvd2V2ZXIsIGFueSBlcXVpdHkgaG9sZGluZyBieSBhIHBlcnNvbiByZXNpZGVudCBvdXRzaWRlIEluZGlhIHJlc3VsdGluZyAgZnJvbSBjb252ZXJzaW9uIG9mIGFueSBkZWJ0IGluc3RydW1lbnQgdW5kZXIgYW55IGFycmFuZ2VtZW50IHdpbGwgYmUgcmVja29uZWQgYXMgZm9yZWlnbiAgaW52ZXN0bWVudC4gIGh0dHBzOi8vYXJ0aGFwZWRpYS5pbi9pbmRleC5waHAvRGVwb3NpdG9yeV9SZWNlaXB0cyA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 74,
      "question" : "Snake Island, sometime seen in the news, is located in ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFNuYWtlIElzbGFuZCwgYWxzbyBrbm93biBhcyBTZXJwZW50IElzbGFuZCBvciBabWlpbnlpIElzbGFuZCwgaXMgYW4gaXNsYW5kIGJlbG9uZ2luZyAgdG8gVWtyYWluZSBsb2NhdGVkIGluIHRoZSBCbGFjayBTZWEsIG5lYXIgdGhlIERhbnViZSBEZWx0YSwgd2l0aCBhbiBpbXBvcnRhbnQgcm9sZSBpbiAgZGVsaW1pdGluZyBVa3JhaW5pYW4gdGVycml0b3JpYWwgd2F0ZXJzLiBUaGUgaXNsYW5kIGhhcyBiZWVuIGtub3duIHNpbmNlIGNsYXNzaWNhbCBhbnRpcXVpdHksIGFuZCAgZHVyaW5nIHRoYXQgZXJhIGhvc3RlZCBhIEdyZWVrIHRlbXBsZSB0byBBY2hpbGxlcyAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvaW50ZXJuYXRpb25hbC9ydXNzaWEtc2F5cy1taXNzaWxlLXN0cmlrZS1oaXQtYW5kLWtpbGxlZC11a3JhaW5pYW4tICB0cm9vcHMtb24tc25ha2UtaXNsYW5kL2FydGljbGU2NTYxMzI0OS5lY2Ug",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sea of Azov ",
        "option2" : "Black Sea ",
        "option3" : "Sea of Marmara ",
        "option4" : "Mediterranean Sea "
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements \n\t1. Moldova is a landlocked country. \n\t2. Romania shares border with Mediterranean Sea \n\t3. Belarus shares border with Poland and Russia. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGh0dHBzOi8vd3d3Lndhc2hpbmd0b25wb3N0LmNvbS93b3JsZC8yMDIyLzAyLzE3L3VrcmFpbmUtcnVzc2lhLW1hcC8g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only ",
        "option2" : "1 and 2 only ",
        "option3" : "1 and 3 only ",
        "option4" : "2 and 3 only "
      }
    },
    {
      "index" : 76,
      "question" : "Juvenile Justice Board is constituted by ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEp1dmVuaWxlIEp1c3RpY2UgQm9hcmQgLSBDb25zdGl0dXRpb24gYW5kIE1lbWJlcnMgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgICgxKSBOb3R3aXRoc3RhbmRpbmcgYW55dGhpbmcgY29udGFpbmVkIGluIHRoZSBDb2RlIG9mIENyaW1pbmFsIFByb2NlZHVyZSwgMTk3MyAoMiBvZiAxOTc0KSwgIHRoZSBTdGF0ZSBHb3Zlcm5tZW50IHNoYWxsLCBjb25zdGl0dXRlIGZvciBldmVyeSBkaXN0cmljdCwgb25lIG9yIG1vcmUgSnV2ZW5pbGUgSnVzdGljZSAgQm9hcmRzIGZvciBleGVyY2lzaW5nIHRoZSBwb3dlcnMgYW5kIGRpc2NoYXJnaW5nIGl0cyBmdW5jdGlvbnMgcmVsYXRpbmcgdG8gY2hpbGRyZW4gaW4gIGNvbmZsaWN0IHdpdGggbGF3IHVuZGVyIHRoaXMgQWN0LiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICgyKSBBIEJvYXJkIHNoYWxsIGNvbnNpc3Qgb2YgYSBNZXRyb3BvbGl0YW4gTWFnaXN0cmF0ZSBvciBhIEp1ZGljaWFsIE1hZ2lzdHJhdGUgb2YgRmlyc3QgQ2xhc3Mgbm90ICBiZWluZyBDaGllZiBNZXRyb3BvbGl0YW4gTWFnaXN0cmF0ZSBvciBDaGllZiBKdWRpY2lhbCBNYWdpc3RyYXRlIChoZXJlaW5hZnRlciByZWZlcnJlZCB0byBhcyAgUHJpbmNpcGFsIE1hZ2lzdHJhdGUpIHdpdGggYXQgbGVhc3QgdGhyZWUgeWVhcnMgZXhwZXJpZW5jZSBhbmQgdHdvIHNvY2lhbCB3b3JrZXJzIHNlbGVjdGVkIGluICBzdWNoIG1hbm5lciBhcyBtYXkgYmUgcHJlc2NyaWJlZCwgb2Ygd2hvbSBhdCBsZWFzdCBvbmUgc2hhbGwgYmUgYSB3b21hbiwgZm9ybWluZyBhIEJlbmNoICBhbmQgZXZlcnkgc3VjaCBCZW5jaCBzaGFsbCBoYXZlIHRoZSBwb3dlcnMgY29uZmVycmVkIGJ5IHRoZSBDb2RlIG9mIENyaW1pbmFsIFByb2NlZHVyZSwgMTk3MyAgKDIgb2YgMTk3NCkgb24gYSBNZXRyb3BvbGl0YW4gTWFnaXN0cmF0ZSBvciwgYXMgdGhlIGNhc2UgbWF5IGJlLCBhIEp1ZGljaWFsIE1hZ2lzdHJhdGUgb2YgRmlyc3QgIENsYXNzLiAgKDMpIE5vIHNvY2lhbCB3b3JrZXIgc2hhbGwgYmUgYXBwb2ludGVkIGFzIGEgbWVtYmVyIG9mIHRoZSBCb2FyZCB1bmxlc3Mgc3VjaCBwZXJzb24gaGFzIGJlZW4gIGFjdGl2ZWx5IGludm9sdmVkIGluIGhlYWx0aCwgZWR1Y2F0aW9uLCBvciB3ZWxmYXJlIGFjdGl2aXRpZXMgcGVydGFpbmluZyB0byBjaGlsZHJlbiBmb3IgYXRsZWFzdCAgc2V2ZW4geWVhcnMgb3IgYSBwcmFjdGljaW5nIHByb2Zlc3Npb25hbCB3aXRoIGEgZGVncmVlIGluIGNoaWxkIHBzeWNob2xvZ3ksIHBzeWNoaWF0cnksIHNvY2lvbG9neSAgb3IgbGF3LiAgaHR0cHM6Ly93d3cuaW5kaWFjb2RlLm5pYy5pbi9zaG93LWRhdGE/YWN0aWQ9QUNfQ0VOXzEzXzE0XzAwMDAxMF8yMDE2MDJfMTUxNzgwNzMyODE2OCAgJm9yZGVybm89NCA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "District Magistrate ",
        "option2" : "State Government ",
        "option3" : "Central Government ",
        "option4" : "Local Government   Test-3: GS Subject   "
      }
    },
    {
      "index" : 77,
      "question" : "Bonab, Arak, Bushehr, Fordo, Parchin are the locations sometime seen in the news related to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBKb2ludCBDb21wcmVoZW5zaXZlIFBsYW4gb2YgQWN0aW9uIChKQ1BPQSkgaXMgYSBkZXRhaWxlZCwgMTU5LXBhZ2UgYWdyZWVtZW50IHdpdGggZml2ZSAgYW5uZXhlcyByZWFjaGVkIGJ5IElyYW4gYW5kIHRoZSBQNSsxIChDaGluYSwgRnJhbmNlLCBHZXJtYW55LCBSdXNzaWEsIHRoZSBVbml0ZWQgS2luZ2RvbSwgIGFuZCB0aGUgVW5pdGVkIFN0YXRlcykgb24gSnVseSAxNCwgMjAxNS4gVGhlIG51Y2xlYXIgZGVhbCB3YXMgZW5kb3JzZWQgYnkgVU4gU2VjdXJpdHkgQ291bmNpbCAgUmVzb2x1dGlvbiAyMjMxLCBhZG9wdGVkIG9uIEp1bHkgMjAsIDIwMTUuICBJcmFuJ3MgY29tcGxpYW5jZSB3aXRoIHRoZSBudWNsZWFyLXJlbGF0ZWQgcHJvdmlzaW9ucyBvZiB0aGUgSkNQT0EgaXMgdmVyaWZpZWQgYnkgdGhlICBJbnRlcm5hdGlvbmFsIEF0b21pYyBFbmVyZ3kgQWdlbmN5IChJQUVBKSBhY2NvcmRpbmcgdG8gY2VydGFpbiByZXF1aXJlbWVudHMgc2V0IGZvcnRoIGluIHRoZSAgYWdyZWVtZW50LiAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgaHR0cHM6Ly93d3cuYXJtc2NvbnRyb2wub3JnL2ZhY3RzaGVldHMvSkNQT0EtYXQtYS1nbGFuY2UgIGh0dHBzOi8vd3d3LnRoZWd1YXJkaWFuLmNvbS93b3JsZC8yMDIyL2p1bi8wOS9yZW1vdmFsLW9mLWNhbWVyYXMtYXQtaXJhbi1udWNsZWFyLXNpdGVzLW1heS0gIGJlLWZhdGFsLWJsb3ctd2FybnMtdW4td2F0Y2hkb2cg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Nuclear Installations of Iran ",
        "option2" : "Drought hit areas of Northern Africa ",
        "option3" : "Terrorist infected areas of Afghanistan ",
        "option4" : "Hot Springs located in Central Asia "
      }
    },
    {
      "index" : 78,
      "question" : "Which of the following states are major producers of Millets in India? \n\t1. Rajasthan \n\t2. Uttar Pradesh \n\t3. Haryana \n\t4. Tamil Nadu Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE1pbGxldHMgaW4gSW5kaWE6IGpvd2FyIChzb3JnaHVtKSwgYmFqcmEgKHBlYXJsIG1pbGxldCkgYW5kIHJhZ2kgKGZpbmdlciBtaWxsZXQpIGFuZCAgdmFyaWV0aWVzIG9mIHNtYWxsIG1pbGxldHMgbGlrZSBrb2RvLCBrdXRraSwgY2hlbm5hIGFuZCBzYW53YS4gIE1ham9yIHByb2R1Y2VyczogUmFqYXN0aGFuLCBBbmRocmEgUHJhZGVzaCwgVGVsYW5nYW5hLCBLYXJuYXRha2EsIFRhbWlsICBOYWR1LCBNYWhhcmFzaHRyYSwgR3VqYXJhdCBhbmQgSGFyeWFuYS4gIFN1cGVyZm9vZDogTWlsbGV0cyBhcmUgbG93IGNvc3QgYW5kIGFyZSByaWNoIGluIGlyb24sIGNhbGNpdW0sIG1hZ25lc2l1bSwgYW5kICBhbnRpb3hpZGFudHMgKCBlLmcuIFJhZ2kgaXMga25vd24gdG8gaGF2ZSB0aGUgaGlnaGVzdCBjYWxjaXVtIGNvbnRlbnQpIGFtb25nIGFsbCB0aGUgZm9vZCAgICAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgZ3JhaW5zLiAgQ2xpbWF0ZSBSZXNpbGllbnQ6IFRoZXkgYXJlIGFsc28gaGFyZGVyIGFuZCBkcm91Z2h0LXJlc2lzdGFudCBjcm9wcyB3aXRoIGEgc2hvcnQgZ3Jvd2luZyAgc2Vhc29uIGFuZCBsb3dlciB3YXRlciByZXF1aXJlbWVudC4gIGh0dHBzOi8vd3d3Lmluc2lnaHRzb25pbmRpYS5jb20vMjAyMi8wNi8yNC9taXNzaW9uLTIwMjMtaW5zaWdodHMtZGFpbHktY3VycmVudC1hZmZhaXJzLXBpYi1zdW0gIG1hcnktMjQtanVuZS0yMDIyLyA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "1 and 4 only ",
        "option4" : "1, 3 and 4 only "
      }
    },
    {
      "index" : 79,
      "question" : "Which of the following country is a member of the European Union but not a member of the NATO alliance? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEV1cm9wZWFuIFVuaW9uICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBOQVRPIE1lbWJlcnMg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Austria ",
        "option2" : "Poland ",
        "option3" : "Turkey ",
        "option4" : "Romania "
      }
    },
    {
      "index" : 81,
      "question" : "Electoral College of Vice President consists of \n\t1. Elected members of Rajya Sabha. \n\t2. Nominated members of Lok Sabha \n\t3. Nominated members of Rajya Sabha Test-3: GS Subject Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBWaWNlLVByZXNpZGVudCBpcyBlbGVjdGVkIGJ5IGFuIGVsZWN0b3JhbCBjb2xsZWdlIGNvbnNpc3Rpbmcgb2YgbWVtYmVycyBvZiBib3RoIEhvdXNlcyBvZiAgUGFybGlhbWVudCwgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBzeXN0ZW0gb2YgcHJvcG9ydGlvbmFsIHJlcHJlc2VudGF0aW9uIGJ5IG1lYW5zIG9mIHRoZSAgc2luZ2xlIHRyYW5zZmVyYWJsZSB2b3RlIGFuZCB0aGUgdm90aW5nIGluIHN1Y2ggZWxlY3Rpb24gaXMgYnkgc2VjcmV0IGJhbGxvdC4gIFRoZSBFbGVjdG9yYWwgQ29sbGVnZSB0byBlbGVjdCBhIHBlcnNvbiB0byB0aGUgb2ZmaWNlIG9mIHRoZSBWaWNlLVByZXNpZGVudCBjb25zaXN0cyBvZiAgYWxsIG1lbWJlcnMgb2YgYm90aCBIb3VzZXMgb2YgUGFybGlhbWVudC4gIEFydGljbGUgMzI0IG9mIHRoZSBDb25zdGl0dXRpb24gcmVhZCB3aXRoIHRoZSBQcmVzaWRlbnRpYWwgYW5kIFZpY2UtUHJlc2lkZW50aWFsICBFbGVjdGlvbnMgQWN0LCAxOTUyIGFuZCB0aGUgUHJlc2lkZW50aWFsIGFuZCBWaWNlLVByZXNpZGVudGlhbCBFbGVjdGlvbnMgUnVsZXMsICAxOTc0LCB2ZXN0cyB0aGUgc3VwZXJpbnRlbmRlbmNlLCBkaXJlY3Rpb24gYW5kIGNvbnRyb2wgb2YgdGhlIGNvbmR1Y3Qgb2YgZWxlY3Rpb24gdG8gdGhlICBvZmZpY2Ugb2YgdGhlIFZpY2UtUHJlc2lkZW50IG9mIEluZGlhIGluIHRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhLiAgVGhlIG5vdGlmaWNhdGlvbiBmb3IgZWxlY3Rpb24gc2hhbGwgYmUgaXNzdWVkIG9uIG9yIGFmdGVyIHRoZSBzaXh0aWV0aCBkYXkgYmVmb3JlIHRoZSAgZXhwaXJhdGlvbiBvZiB0aGUgdGVybSBvZiBvZmZpY2Ugb2YgdGhlIG91dGdvaW5nIFZpY2UtUHJlc2lkZW50LiAgQXMgcGVyIEFydGljbGUgNjYgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgdGhlIFZpY2UtUHJlc2lkZW50IGlzIGVsZWN0ZWQgYnkgdGhlICBtZW1iZXJzIG9mIHRoZSBFbGVjdG9yYWwgQ29sbGVnZS4gIEVsZWN0b3JhbCBDb2xsZWdlIGNvbnNpc3RzIG9mOiAgRWxlY3RlZCBtZW1iZXJzIG9mIFJhanlhIFNhYmhhLjEuICBOb21pbmF0ZWQgbWVtYmVycyBvZiBib3RoIFJhanlhIFNhYmhhICYgTG9rIFNhYmhhLjIuICBFbGVjdGVkIG1lbWJlcnMgb2YgTG9rIFNhYmhhLjMuICBTaW5jZSBhbGwgdGhlIGVsZWN0b3JzIGFyZSBtZW1iZXJzIG9mIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQsIHRoZSB2YWx1ZSBvZiB0aGUgdm90ZSBvZiAgZWFjaCBNZW1iZXIgb2YgUGFybGlhbWVudCB3b3VsZCBiZSB0aGUgc2FtZS4gICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGh0dHA6Ly8xNjQuMTAwLjQ3LjUvQ2hhaXJtYW4tUmFqeWFzYWJoYS9WUEVsZWN0aW9uLmh0bSA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements \n\t1. The election of the next Vice-President is to be held within 90 days of the expiry of the term of office of the outgoing Vice-President. \n\t2. A candidate seeking election as Vice-President is required to make a security deposit of Rs.50,000 \n\t3. All doubts and disputes arising in connection with the election of the Election Commission are enquired into and decided by the Supreme Court of India whose decision is final. Which of the statements given above are not correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEVsZWN0aW9uIG9mIHRoZSBWaWNlLVByZXNpZGVudCAgVGhlIEVsZWN0aW9uIENvbW1pc3Npb24gb2YgSW5kaWEgY29uZHVjdHMgdGhlIGVsZWN0aW9uIHRvIHRoZSBvZmZpY2Ugb2YgdGhlIFZpY2UtUHJlc2lkZW50LiAgSW1wb3J0YW50IFByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdGhlIEVsZWN0aW9uIG9mIHRoZSBWaWNlLVByZXNpZGVudDog",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following statements regarding Chairman of Rajya Sabha \n\t1. The Chairman nominates members of the Rajya Sabha on various bodies such as the Courts of Banaras Hindu University, and Jawaharlal Nehru University. \n\t2. Under the Press Council Act, 1978, the Chairman is one of the members of the Committee which nominates the Chairman of the Press Council. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuICBEdXRpZXMgY29uZmVycmVkIG9uIHRoZSBDaGFpcm1hbiBTb21lIHN0YXR1dGVzIGFsc28gY29uZmVyIGR1dGllcyBvbiB0aGUgQ2hhaXJtYW4uIEZvciAgaW5zdGFuY2UsIHJ1bGVzIG1hZGUgdW5kZXIgdGhlIFNhbGFyeSwgQWxsb3dhbmNlcyBhbmQgUGVuc2lvbiBvZiBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgQWN0LCAgMTk1NCwgZG8gbm90IHRha2UgZWZmZWN0IHVudGlsIHRoZXkgYXJlIGFwcHJvdmVkIGFuZCBjb25maXJtZWQgYnkgdGhlIENoYWlybWFuIGFuZCB0aGUgIFNwZWFrZXIuICBVbmRlciB0aGUgSnVkZ2VzIChpbnF1aXJ5KSBBY3QsIDE5NjgsIHRoZSBDaGFpcm1hbiBoYXMgdG8gY29uc3RpdHV0ZSBhIENvbW1pdHRlZSwgdXBvbiByZWNlaXB0ICBvZiBhIG1vdGlvbiBmb3IgdGhlIHJlbW92YWwgb2YgYSBKdWRnZSBvZiB0aGUgU3VwcmVtZSBDb3VydCBvciBvZiBhIEhpZ2ggQ291cnQsIGZvciBhbiAgaW52ZXN0aWdhdGlvbiBpbnRvIHRoZSBncm91bmRzIG9uIHdoaWNoIHRoZSByZW1vdmFsIG9mIGEgSnVkZ2UgaXMgcHJheWVkIGZvci4gIFRoZSBydWxlcyBtYWRlIHVuZGVyIHRoYXQgQWN0IGFyZSBhbHNvIHJlcXVpcmVkIHRvIGJlIGFwcHJvdmVkIGFuZCBjb25maXJtZWQgYnkgdGhlIENoYWlybWFuICBhbmQgdGhlIFNwZWFrZXIuICBVbmRlciB0aGUgUHJlc3MgQ291bmNpbCBBY3QsIDE5NzgsIHRoZSBDaGFpcm1hbiBpcyBvbmUgb2YgdGhlIG1lbWJlcnMgb2YgdGhlICBDb21taXR0ZWUgd2hpY2ggbm9taW5hdGVzIHRoZSBDaGFpcm1hbiBvZiB0aGUgUHJlc3MgQ291bmNpbC4gIFRoZSBDaGFpcm1hbiBub21pbmF0ZXMgbWVtYmVycyBvZiB0aGUgUmFqeWEgU2FiaGEgb24gdmFyaW91cyBib2RpZXMgc3VjaCBhcyAgQ291cnRzIG9mIEJhbmFyYXMgSGluZHUgVW5pdmVyc2l0eSwgSmF3YWhhcmxhbCBOZWhydSBVbml2ZXJzaXR5LCBOb3J0aC1FYXN0ZXJuIEhpbGwgIFVuaXZlcnNpdHksIFBvbmRpY2hlcnJ5IFVuaXZlcnNpdHksIFVuaXZlcnNpdHkgb2YgSHlkZXJhYmFkLCBBbmp1bWFuIChDb3VydCkgb2YgIEphbWlhIE1pbGxpYSBJc2xhbWlhIFVuaXZlcnNpdHksIEhhaiBDb21taXR0ZWUsIFByZXNzIENvdW5jaWwgb2YgSW5kaWEsIFNhbXNhZCAoQ291cnQpICBvZiBWaXN2YSBCaGFyYXRpLCBOYXRpb25hbCBDb3VuY2lsIGZvciBUZWFjaGVycyBFZHVjYXRpb24sIGV0Yy4gc2V0IHVwIHVuZGVyIHRoZSAgcmVsZXZhbnQgc3RhdHV0ZXMuICBUaGUgQ2hhaXJtYW4gYWxzbyBub21pbmF0ZXMgbWVtYmVycyBvZiB0aGUgUmFqeWEgU2FiaGEgb24gb3RoZXIgYm9kaWVzIGxpa2UgdGhlIEdlbmVyYWwgIEFzc2VtYmx5IG9mIHRoZSBJbmRpYW4gQ291bmNpbCBmb3IgQ3VsdHVyYWwgUmVsYXRpb25zLCBHZW5lcmFsIEJvZHkgb2YgdGhlIENlbnRyYWwgU29jaWFsIFdlbGZhcmUgIEJvYXJkLCBHZW5lcmFsIENvdW5jaWwgb2YgdGhlIFNjaG9vbCBvZiBQbGFubmluZyBhbmQgQXJjaGl0ZWN0dXJlLCBIaW5kaSBTaGlrc2hhIFNhbWl0aSwgIEluc3RpdHV0ZSBvZiBDb25zdGl0dXRpb25hbCBhbmQgUGFybGlhbWVudGFyeSBTdHVkaWVzLCBldGMuICBUaGUgQ2hhaXJtYW4gbWF5IGFsc28sIGlmIHRoZXJlIGlzIGEgZ2VuZXJhbCBjb25zZW5zdXMgaW4gdGhlIEhvdXNlLCBtYWtlIGFuIGlucXVpcnkgaW50byBhICBtYXR0ZXIgd2hpY2ggd2FzIHJhaXNlZCBvbiB0aGUgZmxvb3Igb2YgdGhlIEhvdXNlIG9yIGFwcG9pbnQgYSBDb21taXR0ZWUgb2YgdGhlIEhvdXNlIGluICByZXNwZWN0IHRoZXJlb2YuICBodHRwczovL2Ntcy5yYWp5YXNhYmhhLm5pYy5pbi8vY2FyZWVyc19kb2N1bWVudHMvMTYxMTE0ODAwOTUxMC43OF9Qb3dlci1GdW5jdGlvbnMtQ1IucGRmIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following statements regarding Green Hydrogen \n\t1. Hydrogen is the most abundant chemical element in nature. \n\t2. Green hydrogen is a clean energy source that only emits water vapour and leaves no residue in the air \n\t3. Hydrogen can undergo a fusion reaction. \n\t4. Green hydrogen can be transformed into electricity or synthetic gas. \n\t5. Extensive safety measures are not largely required to operate hydrogen-based industries. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEhZRFJPR0VOIEFTIENMRUFOIEVORVJHWSAgSHlkcm9nZW4gaXMgdGhlIG1vc3QgYWJ1bmRhbnQgY2hlbWljYWwgZWxlbWVudCBpbiBuYXR1cmUuIEFzIG5vdGVkIGJ5IHRoZSBJRUEsIHRoZSAgZ2xvYmFsIGRlbWFuZCBmb3IgaHlkcm9nZW4gZm9yIHVzZSBhcyBhIGZ1ZWwgaGFzIHRyaXBsZWQgc2luY2UgMTk3NSBhbmQgcmVhY2hlZCA3MCBtaWxsaW9uICB0b25uZXMgYSB5ZWFyIGluIDIwMTguIEluIGFkZGl0aW9uLCBncmVlbiBoeWRyb2dlbiBpcyBhIGNsZWFuIGVuZXJneSBzb3VyY2UgdGhhdCBvbmx5IGVtaXRzICB3YXRlciB2YXBvdXIgYW5kIGxlYXZlcyBubyByZXNpZHVlIGluIHRoZSBhaXIsIHVubGlrZSBjb2FsIGFuZCBvaWwuICBBRFZBTlRBR0VTIEFORCBESVNBRFZBTlRBR0VTIE9GIEdSRUVOIEhZRFJPR0VOICBUaGlzIGVuZXJneSBzb3VyY2UgaGFzIHByb3MgYW5kIGNvbnMgdGhhdCB3ZSBtdXN0IGJlIGF3YXJlIG9mLiBMZXQncyBnbyBvdmVyIHNvbWUgb2YgaXRzIG1vc3QgIGltcG9ydGFudCBnb29kIHBvaW50czogIDEwMCAlIHN1c3RhaW5hYmxlOiBncmVlbiBoeWRyb2dlbiBkb2VzIG5vdCBlbWl0IHBvbGx1dGluZyBnYXNlcyBlaXRoZXIgZHVyaW5nICBjb21idXN0aW9uIG9yIGR1cmluZyBwcm9kdWN0aW9uLiAgU3RvcmFibGU6IGh5ZHJvZ2VuIGlzIGVhc3kgdG8gc3RvcmUsIHdoaWNoIGFsbG93cyBpdCB0byBiZSB1c2VkIHN1YnNlcXVlbnRseSBmb3Igb3RoZXIgIHB1cnBvc2VzIGFuZCBhdCB0aW1lcyBvdGhlciB0aGFuIGltbWVkaWF0ZWx5IGFmdGVyIGl0cyBwcm9kdWN0aW9uLiAgVmVyc2F0aWxlOiBncmVlbiBoeWRyb2dlbiBjYW4gYmUgdHJhbnNmb3JtZWQgaW50byBlbGVjdHJpY2l0eSBvciBzeW50aGV0aWMgZ2FzIGFuZCB1c2VkICBmb3IgY29tbWVyY2lhbCwgaW5kdXN0cmlhbCBvciBtb2JpbGl0eSBwdXJwb3Nlcy4gIEhvd2V2ZXIsIGdyZWVuIGh5ZHJvZ2VuIGFsc28gaGFzIG5lZ2F0aXZlIGFzcGVjdHMgdGhhdCBzaG91bGQgYmUgYm9ybmUgaW4gbWluZDogIEhpZ2ggY29zdDogZW5lcmd5IGZyb20gcmVuZXdhYmxlIHNvdXJjZXMsIHdoaWNoIGFyZSBrZXkgdG8gZ2VuZXJhdGluZyBncmVlbiBoeWRyb2dlbiAgdGhyb3VnaCBlbGVjdHJvbHlzaXMsIGlzIG1vcmUgZXhwZW5zaXZlIHRvIGdlbmVyYXRlLCB3aGljaCBpbiB0dXJuIG1ha2VzIGh5ZHJvZ2VuIG1vcmUgIGV4cGVuc2l2ZSB0byBvYnRhaW4uICBIaWdoIGVuZXJneSBjb25zdW1wdGlvbjogdGhlIHByb2R1Y3Rpb24gb2YgaHlkcm9nZW4gaW4gZ2VuZXJhbCBhbmQgZ3JlZW4gaHlkcm9nZW4gIGluIHBhcnRpY3VsYXIgcmVxdWlyZXMgbW9yZSBlbmVyZ3kgdGhhbiBvdGhlciBmdWVscy4gIFNhZmV0eSBpc3N1ZXM6IGh5ZHJvZ2VuIGlzIGEgaGlnaGx5IHZvbGF0aWxlIGFuZCBmbGFtbWFibGUgZWxlbWVudCBhbmQgIGV4dGVuc2l2ZSBzYWZldHkgbWVhc3VyZXMgYXJlIHRoZXJlZm9yZSByZXF1aXJlZCB0byBwcmV2ZW50IGxlYWthZ2UgYW5kICBleHBsb3Npb25zLiBIZW5jZSBTdGF0ZW1lbnQgNSBpcyBpbmNvcnJlY3QuICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBodHRwczovL3d3dy5pYmVyZHJvbGEuY29tL3N1c3RhaW5hYmlsaXR5L2dyZWVuLWh5ZHJvZ2VuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "2, 3 and 5 only   Test-3: GS Subject   ",
        "option4" : "1, 2, 3 and 4 only "
      }
    },
    {
      "index" : 85,
      "question" : "The Global Initiative on Reducing Land Degradation and Enhancing Conservation of Terrestrial Habitats, sometimes seen in the news, is an initiative of ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBHMjAgaXMgYSBtdWx0aWxhdGVyYWwgcGxhdGZvcm0gdGhhdCBjb25uZWN0cyB0aGUgd29ybGQncyBtYWpvciBkZXZlbG9wZWQgYW5kIGVtZXJnaW5nICBlY29ub21pZXMuIFRvZ2V0aGVyIHRoZSBHMjAgY291bnRyaWVzIHJlcHJlc2VudCBtb3JlIHRoYW4gODAgcGVyIGNlbnQgb2Ygd29ybGQgR0RQLCA3NSBwZXIgIGNlbnQgb2YgaW50ZXJuYXRpb25hbCB0cmFkZSBhbmQgNjAgcGVyIGNlbnQgb2YgdGhlIHdvcmxkJ3MgcG9wdWxhdGlvbi4gICAgSW4gTm92ZW1iZXIgMjAyMCwgdGhlIEcyMCBsYXVuY2hlZCBUaGUgR2xvYmFsIEluaXRpYXRpdmUgb24gUmVkdWNpbmcgTGFuZCAgRGVncmFkYXRpb24gYW5kIEVuaGFuY2luZyBDb25zZXJ2YXRpb24gb2YgVGVycmVzdHJpYWwgSGFiaXRhdHMuIFRoZSBnb2FsIG9mIHRoaXMgIGluaXRpYXRpdmUgaXMgdG8gcHJldmVudCwgaGFsdCBhbmQgcmV2ZXJzZSBsYW5kIGRlZ3JhZGF0aW9uIGFuZCByZWR1Y2UgZGVncmFkZWQgbGFuZCAgYnkgNTAgcGVyIGNlbnQgYnkgMjA0MC4gICBUaGlzIGluaXRpYXRpdmUgc2hvd3MgYW4gdW5wcmVjZWRlbnRlZCByZXNvbHZlIGJ5IHRoZSB3b3JsZCdzIGxhcmdlc3QgZWNvbm9taWVzIHRvIGNvbnNlcnZlICB0aGUgdGVycmVzdHJpYWwgZW52aXJvbm1lbnQuIEl0IGFsc28gZm9jdXNlcyBvbiBjYXBhY2l0eSBidWlsZGluZyBhcyB3ZWxsIGFzIGVuZ2FnaW5nIHRoZSBwcml2YXRlICBzZWN0b3IgYW5kIGNpdmlsIHNvY2lldHkuICAgIFRoZSBpbml0aWF0aXZlIGhhcyB0aHJlZSBpbnRlcnJlbGF0ZWQgb2JqZWN0aXZlczogICBDb25zZXJ2aW5nIGxhbmQgYW5kIGhhbHRpbmcgaGFiaXRhdCBsb3NzLCBmcmFnbWVudGF0aW9uIGFuZCBsYW5kIGRlZ3JhZGF0aW9uICB0aHJvdWdoOiAgICBzaGFyaW5nIGtub3dsZWRnZSBhbmQgYmVzdCBwcmFjdGljZXMgb24gY29uc2VydmF0aW9uIGluY2VudGl2ZXMgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBlbmhhbmNpbmcgbGFuZCBjb25zZXJ2YXRpb24gICBwcm9tb3Rpbmcgc3VzdGFpbmFibGUgbGFuZCBtYW5hZ2VtZW50IHByYWN0aWNlcyAgIHByb21vdGluZyBhY3RpdmUgZmlyZSBtYW5hZ2VtZW50ICAgUHJvbW90aW5nIGludGVncmF0ZWQsIHN1c3RhaW5hYmxlLCBhbmQgcmVzaWxpZW50IGxhbmQgYW5kIGxhbmRzY2FwZSBtYW5hZ2VtZW50ICB0aHJvdWdoOiAgICBuYXR1cmUtYmFzZWQgc29sdXRpb25zIG9yIGVjb3N5c3RlbS1iYXNlZCBhcHByb2FjaGVzICAgZmluYW5jaW5nIG1lY2hhbmlzbXMgICB1cmJhbiBhbmQgbGFuZCB1c2UgcGxhbm5pbmcgcHJvY2Vzc2VzIGF0IGRpZmZlcmVudCBsZXZlbHMgYW5kIHNjYWxlcyAgIHN0cm9uZ2VyIGltcGxlbWVudGF0aW9uIG9mIGludGVybmF0aW9uYWwgYWdyZWVtZW50cyBhbmQgbG9jYWwgZW52aXJvbm1lbnRhbCBnb3Zlcm5hbmNlICBhbmQgbGF3cyAgIHRoZSBlbXBvd2VybWVudCBvZiBJbmRpZ2Vub3VzIFBlb3BsZXMgYW5kIExvY2FsIENvbW11bml0aWVzIChpbmNsdWRpbmcgd29tZW4sICB5b3V0aCwgYW5kIHNtYWxsaG9sZGVycykgaW4gbGFuZCBtYW5hZ2VtZW50ICAgc2VjdXJlIGxhbmQgdGVudXJlLCBwcm9wZXJ0eSBhbmQgbGFuZC11c2UgcmlnaHRzIGluIGFjY29yZGFuY2Ugd2l0aCBuYXRpb25hbCBsZWdpc2xhdGlvbiwgIGFzIHdlbGwgYXMgc3VwcG9ydCBzdXN0YWluYWJsZSBsYW5kIGFuZCB3YXRlciBtYW5hZ2VtZW50IHBvbGljaWVzIGFuZCBzdXN0YWluYWJsZSAgYWdyaWN1bHR1cmFsIHByYWN0aWNlcywgaW5jbHVkaW5nIHRyYWRpdGlvbmFsIHByYWN0aWNlcywgaW4gb3JkZXIgdG8gbWFpbnRhaW4gYW5kIGVuaGFuY2UgIGVjb3N5c3RlbSBmdW5jdGlvbmFsaXR5ICAgUmVzdG9yaW5nIGRlZ3JhZGVkIGxhbmQgdGhyb3VnaDogICAgc3VzdGFpbmFibGUgYW5kIGxvY2FsbHkgb3IgcmVnaW9uYWxseSBhcHByb3ByaWF0ZSByZWZvcmVzdGF0aW9uLCBhZmZvcmVzdGF0aW9uICAgbmF0dXJhbCByZWdlbmVyYXRpb24vcmV2ZWdldGF0aW9uLCByZXN0b3JhdGlvbiBvZiBlY29zeXN0ZW0gc2VydmljZXMsIHN1c3RhaW5hYmxlICBhZ3JpY3VsdHVyYWwgcHJhY3RpY2VzLCBhbmQgZGVwbG95bWVudCBvZiBuYXR1cmUtYmFzZWQgc29sdXRpb25zIG9yIGVjb3N5c3RlbS1iYXNlZCAgYXBwcm9hY2hlcyBmb3IgYmlvZGl2ZXJzaXR5IGNvbnNlcnZhdGlvbiAgIGh0dHBzOi8vd3d3LnVuY2NkLmludC9vdXItd29yay9HMjAtSW5pdGlhdGl2ZSA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "World Bank ",
        "option2" : "G-20 ",
        "option3" : "UNEP ",
        "option4" : "World Economic Forum "
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements regarding Fiber Optics \n\t1. Optical fiber carries more information than conventional copper wire. \n\t2. Optical fibers are less susceptible to interference. \n\t3. Copper wire is costlier than fiber optics. \n\t4. Fiber optic cables are stronger than copper wire cables but heavier than copper wires. \n\t5. Copper wires can be submerged in water to transmit data. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEZpYmVyIG9wdGljcyB2cy4gY29wcGVyIGNhYmxlcyAgQ29wcGVyIHdpcmUgY2FibGVzIHdlcmUgdGhlIHRyYWRpdGlvbmFsIGNob2ljZSBmb3IgdGVsZWNvbW11bmljYXRpb24sIG5ldHdvcmtpbmcgYW5kIGNhYmxlICBjb25uZWN0aW9ucyBmb3IgeWVhcnMuIE92ZXIgdGltZSwgaG93ZXZlciwgZmliZXIgb3B0aWNzIGJlY2FtZSBhIGNvbW1vbiBhbHRlcm5hdGl2ZS4gTW9zdCAgdGVsZXBob25lIGNvbXBhbnkgbG9uZy1kaXN0YW5jZSBsaW5lcyBhcmUgbm93IG1hZGUgb2YgZmliZXIgb3B0aWMgY2FibGVzLiAgT3B0aWNhbCBmaWJlciBjYXJyaWVzIG1vcmUgaW5mb3JtYXRpb24gdGhhbiBjb252ZW50aW9uYWwgY29wcGVyIHdpcmUsIGR1ZSB0byBpdHMgIGhpZ2hlciBiYW5kd2lkdGggYW5kIGZhc3RlciBzcGVlZHMuIEJlY2F1c2UgZ2xhc3MgZG9lcyBub3QgY29uZHVjdCBlbGVjdHJpY2l0eSwgZmliZXIgIG9wdGljcyBpcyBub3Qgc3ViamVjdCB0byBlbGVjdHJvbWFnbmV0aWMgaW50ZXJmZXJlbmNlLCBhbmQgc2lnbmFsIGxvc3NlcyBhcmUgbWluaW1pemVkLiAgQWR2YW50YWdlcyBhbmQgZGlzYWR2YW50YWdlcyBvZiBmaWJlciBvcHRpY3MgIEZpYmVyIG9wdGljIGNhYmxlcyBhcmUgdXNlZCBtYWlubHkgZm9yIHRoZWlyIGFkdmFudGFnZXMgb3ZlciBjb3BwZXIgY2FibGVzLiBBZHZhbnRhZ2VzIGluY2x1ZGUgIHRoZSBmb2xsb3dpbmc6ICBUaGV5IHN1cHBvcnQgaGlnaGVyIGJhbmR3aWR0aCBjYXBhY2l0aWVzLiAgTGlnaHQgY2FuIHRyYXZlbCBmdXJ0aGVyIHdpdGhvdXQgbmVlZGluZyBhcyBtdWNoIG9mIGEgc2lnbmFsIGJvb3N0LiAgVGhleSBhcmUgbGVzcyBzdXNjZXB0aWJsZSB0byBpbnRlcmZlcmVuY2UsIHN1Y2ggYXMgZWxlY3Ryb21hZ25ldGljIGludGVyZmVyZW5jZS4gIFRoZXkgY2FuIGJlIHN1Ym1lcmdlZCBpbiB3YXRlci4gIEZpYmVyIG9wdGljIGNhYmxlcyBhcmUgc3Ryb25nZXIsIHRoaW5uZXIgYW5kIGxpZ2h0ZXIgdGhhbiBjb3BwZXIgd2lyZSBjYWJsZXMuICBUaGV5IGRvIG5vdCBuZWVkIHRvIGJlIG1haW50YWluZWQgb3IgcmVwbGFjZWQgYXMgZnJlcXVlbnRseS4gIEhvd2V2ZXIsIGl0IGlzIGltcG9ydGFudCB0byBub3RlIHRoYXQgZmliZXIgb3B0aWNzIGRvIGhhdmUgZGlzYWR2YW50YWdlcyB1c2VycyBzaG91bGQga25vdyAgYWJvdXQuIFRoZXNlIGRpc2FkdmFudGFnZXMgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiAgQ29wcGVyIHdpcmUgaXMgb2Z0ZW4gY2hlYXBlciB0aGFuIGZpYmVyIG9wdGljcy4gIEdsYXNzIGZpYmVyIHJlcXVpcmVzIG1vcmUgcHJvdGVjdGlvbiB3aXRoaW4gYW4gb3V0ZXIgY2FibGUgdGhhbiBjb3BwZXIuICBJbnN0YWxsaW5nIG5ldyBjYWJsaW5nIGlzIGxhYm9yLWludGVuc2l2ZS4gIEZpYmVyIG9wdGljIGNhYmxlcyBhcmUgb2Z0ZW4gbW9yZSBmcmFnaWxlLiBGb3IgZXhhbXBsZSwgdGhlIGZpYmVycyBjYW4gYmUgYnJva2VuIG9yIGEgc2lnbmFsICBjYW4gYmUgbG9zdCBpZiB0aGUgY2FibGUgaXMgYmVudCBvciBjdXJ2ZWQgYXJvdW5kIGEgcmFkaXVzIG9mIGEgZmV3IGNlbnRpbWV0ZXJzICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBodHRwczovL3d3dy50ZWNodGFyZ2V0LmNvbS9zZWFyY2huZXR3b3JraW5nL2RlZmluaXRpb24vZmliZXItb3B0aWNzLW9wdGljYWwtZmliZXIg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1, 3 and 4 only ",
        "option3" : "2, 3, 4 and 5 only ",
        "option4" : "1, 2, 3, 4 and 5 "
      }
    },
    {
      "index" : 87,
      "question" : "Which of the following forest types is naturally found in Tamil Nadu? \n\t1. Tropical wet evergreen \n\t2. Montane wet temperate \n\t3. Littoral and swamp \n\t4. Tropical thorn Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluIFRhbWlsIE5hZHUsIEZvcmVzdCB2ZWdldGF0aW9uIGlzIGRpdmlkZWQgaW50byAzIG1ham9yIGdyb3VwcyBhY2NvcmRpbmcgdG8gdGVtcGVyYXR1cmUgem9uZXMgIG5hbWVseSBUcm9waWNhbCBGb3Jlc3RzLCBNb250YW5lIFN1YnRyb3BpY2FsIEZvcmVzdHMgYW5kIE1vbnRhbmUgVGVtcGVyYXRlIEZvcmVzdHMsIHdoaWNoICBhcmUgc3ViIGRpdmlkZWQgaW50byBuaW5lIHR5cGUgZ3JvdXBzIGJhc2VkIG9uIG1vaXN0dXJlIGFuZCBwaHlzaW9nbm9taWMgdmFyaWF0aW9uLiBUaGV5IGFyZSAgUy5ObyBNYWpvciBGb3Jlc3QgVHlwZSBncm91cCAgMSBUcm9waWNhbCB3ZXQgZXZlcmdyZWVuICAyIFRyb3BpY2FsIHNlbWkgZXZlcmdyZWVuICAzIFRyb3BpY2FsIG1vaXN0IGRlY2lkdW91cyAgNCBMaXR0b3JhbCBhbmQgc3dhbXAgIDUgVHJvcGljYWwgZHJ5IGRlY2lkdW91cyAgNiBUcm9waWNhbCB0aG9ybiAgNyBUcm9waWNhbCBkcnkgZXZlcmdyZWVuICA4IFN1Yi1Ucm9waWNhbCBCcm9hZC1sZWF2ZWQgaGlsbCAgOSBNb250YW5lIHdldCB0ZW1wZXJhdGUgIGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi92aWRlby9lbnZpcm9ubWVudCBoaXMtdGFtaWwtbmFkdS1tYW4tdHVybmVkLTEwMC1hY3Jlcy1vZi1iYSAgcnJlbi1sYW5kLXRvLWFuLWluZGlnZW5vdXMtZm9yZXN0LTgzMTYwICBodHRwczovL3d3dy5mb3Jlc3RzLnRuLmdvdi5pbi9wYWdlcy92aWV3IG4tZm9yZXN0LXR5cGVzIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "1, 2 and 4 only ",
        "option4" : "1, 2, 3 and 4 "
      }
    },
    {
      "index" : 88,
      "question" : "India's largest floating 100-MW solar power project is recently operationalised in ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEluZGlhJ3MgbGFyZ2VzdCBmbG9hdGluZyAxMDAtTVcgc29sYXIgcG93ZXIgcHJvamVjdCBpcyBub3cgZnVsbHkgb3BlcmF0aW9uYWwgaW4gIFRlbGFuZ2FuYSAgSXQgaXMgcG93ZXJlZCB3aXRoIGFkdmFuY2VkIHRlY2hub2xvZ3kgYW5kIGVudmlyb25tZW50LWZyaWVuZGx5IGZlYXR1cmVzLiBUaGUgcHJvamVjdCBzcHJlYWRzICBvdmVyIDUwMCBhY3JlcyBvZiBpdHMgcmVzZXJ2b2lyLCB3aXRoIHRoZSBwcmVzZW5jZSBvZiBmbG9hdGluZyBzb2xhciBwYW5lbHMsIHRoZSBldmFwb3JhdGlvbiByYXRlICBmcm9tIHdhdGVyIGJvZGllcyBpcyByZWR1Y2VkLCB0aHVzIGhlbHBpbmcgaW4gd2F0ZXIgY29uc2VydmF0aW9uLiAgV2hhdCBhcmUgZmxvYXRpbmcgc29sYXIgcGxhbnRzPyAgU29sYXIgcGxhbnRzIG9yIHNvbGFyIGZhcm1zIGNhbiBiZSBlaXRoZXIgZ3JvdW5kLW1vdW50ZWQgb3Igc2V0IHVwIG9uIHRoZSBzdXJmYWNlIG9mICB3YXRlcmJvZGllcy4gVGhvdWdoIHRoZXNlIGZsb2F0aW5nIGZhcm1zIGFyZSBhIGJpdCBtb3JlIGV4cGVuc2l2ZSB0aGFuIHRoZSB0cmFkaXRpb25hbCBvbmVzICBtb3VudGVkIG9uIGxhbmQgc3VyZmFjZXMsIHRoZXJlIGFyZSBhZHZhbnRhZ2VzIGFzIHdlbGwuICBBdCBhIHRpbWUgd2hlbiBsYXJnZSB0cmFjdHMgb2YgbGFuZCBhcmUgdW5hdmFpbGFibGUsIGZsb2F0aW5nIGZhcm1zIGRvIG5vdCByZXF1aXJlIGxhbmQgdG8gYmUgIGFjcXVpcmVkIGZvciB0aGUgaW5zdGFsbGF0aW9uIG9mIHBob3Rvdm9sdGFpYyBwYW5lbHMuIFRoZXkgYXJlIG1vcmUgZWZmaWNpZW50IGFzIHRoZSBwcmVzZW5jZSBvZiAgd2F0ZXIgdW5kZXJuZWF0aCBoZWxwcyB0aGVtIGtlZXAgY29vbC4gVGhleSBhbHNvIHJlZHVjZSB3YXRlciBldmFwb3JhdGlvbiwgdGhlcmVieSBzYXZpbmcgIG1vcmUgd2F0ZXIgZm9yIGh5ZHJvcG93ZXIgZ2VuZXJhdGlvbi4gIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQgZWxhbmdhbmEtZmxvYXRpbmctc29sYXItcGxhbnQtZW52aXJvbm1lbnQtbnRwYy1leHAgIGxhaW5lZC04MDA1NTg1LyA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Madhya Pradesh ",
        "option2" : "Ladakh ",
        "option3" : "Gujarat ",
        "option4" : "Telangana "
      }
    },
    {
      "index" : 89,
      "question" : "Leading producing state of Wind Energy in India is Test-3: GS Subject ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFdpbmQgcG93ZXIgZ2VuZXJhdGlvbiBjYXBhY2l0eSBpbiBJbmRpYSBoYXMgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgaW4gcmVjZW50IHllYXJzLiBBcyBvZiAzMSAgTWF5IDIwMjIsIHRoZSB0b3RhbCBpbnN0YWxsZWQgd2luZCBwb3dlciBjYXBhY2l0eSB3YXMgNDAuNzEgR1csIHRoZSBmb3VydGggbGFyZ2VzdCBpbnN0YWxsZWQgIHdpbmQgcG93ZXIgY2FwYWNpdHkgaW4gdGhlIHdvcmxkLiBXaW5kIHBvd2VyIGNhcGFjaXR5IGlzIG1haW5seSBzcHJlYWQgYWNyb3NzIHRoZSBTb3V0aGVybiwgIFdlc3Rlcm4gYW5kIE5vcnRoZXJuIFdlc3Rlcm4gcmVnaW9ucy4gIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1dpbmRfcG93ZXJfaW5fSW5kaWEg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Gujarat ",
        "option2" : "Tamil Nadu ",
        "option3" : "Rajasthan ",
        "option4" : "Karnataka "
      }
    },
    {
      "index" : 90,
      "question" : "Micro-RNA: miR444, sometime seen in the news, is related to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBtaWNyby1STkEtc3dpdGNoIGNvbnRyb2xzIGEgZ2VuZSB0aGF0IHJlZ3VsYXRlcyBuaXRyYXRlIGFic29ycHRpb24sIHJvb3QgIGRldmVsb3BtZW50LCBzdHJlc3MgdG9sZXJhbmNlICBSZXNlYXJjaGVycyBsZWQgYnkgdGhvc2UgZnJvbSB0aGUgTmF0aW9uYWwgQ2VudHJlIG9mIEJpb2xvZ2ljYWwgU2NpZW5jZXMsIFRhdGEgSW5zdGl0dXRlIG9mICBGdW5kYW1lbnRhbCBSZXNlYXJjaCwgQmVuZ2FsdXJ1IChOQ0JTLVRJRlIpLCBoYXZlIGZvdW5kIGEgbmV3IHBhdGh3YXkgdGhhdCByZWd1bGF0ZXMgIG5pdHJhdGUgYWJzb3JwdGlvbiBpbiBwbGFudHMuICBUaGUgZ2VuZSBNQURTMjcsIHdoaWNoIHJlZ3VsYXRlcyBuaXRyYXRlIGFic29ycHRpb24sIHJvb3QgZGV2ZWxvcG1lbnQgYW5kIHN0cmVzcyAgdG9sZXJhbmNlLCBpcyBhY3RpdmF0ZWQgYnkgdGhlIG1pY3JvLVJOQSwgbWlSNDQ0LCB0aGVyZWZvcmUgb2ZmZXJzIGEgd2F5IHRvIGNvbnRyb2wgIHRoZXNlIHByb3BlcnRpZXMgb2YgdGhlIHBsYW50LiAgVGhlIHJlc2VhcmNoZXJzIHN0dWRpZWQgdGhpcyBtZWNoYW5pc20gaW4gYm90aCByaWNlIChtb25vY290KSBhbmQgdG9iYWNjbyAoZGljb3QpIHBsYW50cy4gVGhlICByZXNlYXJjaCBpcyBwdWJsaXNoZWQgaW4gSm91cm5hbCBvZiBFeHBlcmltZW50YWwgQm90YW55LiAgTml0cm9nZW4gaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBtYWNyb251dHJpZW50cyBuZWVkZWQgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhIHBsYW50LiBJdCAgaXMgYSBwYXJ0IG9mIGNobG9yb3BoeWxsLCBhbWlubyBhY2lkcyBhbmQgbnVjbGVpYyBhY2lkcywgYW1vbmcgb3RoZXJzLiBJdCBpcyBtb3N0bHkgc291cmNlZCBmcm9tICB0aGUgc29pbCB3aGVyZSBpdCBpcyBtYWlubHkgYWJzb3JiZWQgaW4gdGhlIGZvcm0gb2Ygbml0cmF0ZXMgYW5kIGFtbW9uaXVtIGJ5IHRoZSByb290cy4gTml0cmF0ZXMgIGFsc28gcGxheSBhIHJvbGUgaW4gY29udHJvbGxpbmcgZ2Vub21lLXdpZGUgZ2VuZSBleHByZXNzaW9uIHRoYXQgaW4gdHVybiByZWd1bGF0ZXMgcm9vdCBzeXN0ZW0gIGFyY2hpdGVjdHVyZSwgZmxvd2VyaW5nIHRpbWUsIGxlYWYgZGV2ZWxvcG1lbnQsIGV0Yy4gIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktdGVjaC9zY2llbmNlL25ldy1wYXRod2F5LXRvLXJlZ3VsYXRlLW5pdHJhdGUtYWJzb3JwdGlvbi1pbi1wbGFudCAgcy9hcnRpY2xlNjU1OTA5MDguZWNlICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Plant Nutrient Absorption ",
        "option2" : "Assimilation in Intestine ",
        "option3" : "Reproduction in Bacteria ",
        "option4" : "None of the above "
      }
    },
    {
      "index" : 91,
      "question" : "Which of the following particles is/are Elementary Particles? \n\t1. Protons \n\t2. Neutrons \n\t3. Electrons Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEVsZW1lbnRhcnkgcGFydGljbGVzIGFyZSB0aGUgbW9zdCBmdW5kYW1lbnRhbCBjb21wb25lbnRzIG9mIG1hdHRlciBhbmQgY2Fubm90IGJlIGZ1cnRoZXIgIHN1YmRpdmlkZWQgaW50byBzbWFsbGVyIGNvbnN0aXR1ZW50cy4gICgtKUVsZW1lbnRhcnkgcGFydGljbGVzIGluY2x1ZGUgcXVhcmtzICh0aGUgY29uc3RpdHVlbnRzIG9mIHByb3RvbnMgYW5kIG5ldXRyb25zKSwgIGxlcHRvbnMgKGVsZWN0cm9ucywgbXVvbnMsIHRhdXMsIGFuZCBuZXV0cmlub3MpLCBnYXVnZSBib3NvbnMgKHBob3RvbnMsIGdsdW9ucywgYW5kICBXIGFuZCBaIGJvc29ucykgYW5kIHRoZSBIaWdncyBib3Nvbi4gICgtKVRoZSBmdW5kYW1lbnRhbCBmb3JjZXMgdGhhdCBhY3Qgb24gZWxlbWVudGFyeSBwYXJ0aWNsZXMgYXJlIHRoZSBlbGVjdHJvbWFnbmV0aWMgZm9yY2UsIHRoZSAgc3Ryb25nIGZvcmNlLCB0aGUgd2VhayBmb3JjZSwgYW5kIGdyYXZpdHkuICAoLSlDaGFyYWN0ZXJpc3RpY3Mgb2YgZWxlbWVudGFyeSBwYXJ0aWNsZXMgaW5jbHVkZSBtYXNzLCBzcGluLCBhbmQgY2hhcmdlLiAgKC0pVG8gZWFjaCBraW5kIG9mIGVsZW1lbnRhcnkgcGFydGljbGUgdGhlcmUgY29ycmVzcG9uZHMgYW4gYW50aXBhcnRpY2xlLCBvciBjb25qdWdhdGUgcGFydGljbGUsICB3aGljaCBoYXMgdGhlIHNhbWUgbWFzcyBhbmQgc3BpbiwgYnV0IGhhcyB0aGUgb3Bwb3NpdGUgdmFsdWUgb2YgY2hhcmdlIGFuZOKIlW9yIGZsYXZvciBxdWFudHVtICBudW1iZXIuICAoLSlUaGUgc3RhbmRhcmQgbW9kZWwgb2YgcGFydGljbGUgcGh5c2ljcyBjbGFzc2lmaWVzIGFuZCBkZXNjcmliZXMgdGhlIGJlaGF2aW9yIG9mIGFsbCBrbm93biAgZWxlbWVudGFyeSBwYXJ0aWNsZXMuICBodHRwczovL3d3dy5hY2Nlc3NzY2llbmNlLmNvbS9tZWRpYS9FU1QvbWVkaWEvMjI3NzAwUFYwMDAyLnBkZiAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS10ZWNoL3NjaWVuY2UvMTAteWVhcnMtb2YtaGlnZ3MtYm9zb24taG93LXRoZS1wYXJ0aWNsZS1jb3VsZC11bmxvICBjay1uZXctcGh5c2ljcy1iZXlvbmQtdGhlLXN0YW5kYXJkLW1vZGVsL2FydGljbGU2NTU5MjA2Ni5lY2UgICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 92,
      "question" : "Consider the following statements regarding Magnetic Resonance Imaging (MRI) \n\t1. MRI uses a strong magnetic field and X-rays to create detailed images of the organs and tissues within the body. \n\t2. MRI scans require minimum four hours to analyze any part of the body. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIE1SSSB1c2VzIGEgc3Ryb25nIG1hZ25ldGljIGZpZWxkIGFuZCByYWRpbyB3YXZlcyB0byBjcmVhdGUgZGV0YWlsZWQgaW1hZ2VzIG9mIHRoZSAgb3JnYW5zIGFuZCB0aXNzdWVzIHdpdGhpbiB0aGUgYm9keS4gIEFuIE1SSSBzY2FubmVyIGlzIGEgbGFyZ2UgdHViZSB0aGF0IGNvbnRhaW5zIHBvd2VyZnVsIG1hZ25ldHMuICBBbiBNUkkgc2NhbiBjYW4gYmUgdXNlZCB0byBleGFtaW5lIGFsbW9zdCBhbnkgcGFydCBvZiB0aGUgYm9keSwgaW5jbHVkaW5nIHRoZTogIGJyYWluIGFuZCBzcGluYWwgY29yZCAgYm9uZXMgYW5kIGpvaW50cyAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgYnJlYXN0cyAgaGVhcnQgYW5kIGJsb29kIHZlc3NlbHMgIGludGVybmFsIG9yZ2Fucywgc3VjaCBhcyB0aGUgbGl2ZXIsIHdvbWIgb3IgcHJvc3RhdGUgZ2xhbmQgIEhvdyBkb2VzIGFuIE1SSSBzY2FuIHdvcms/ICBNb3N0IG9mIHRoZSBodW1hbiBib2R5IGlzIG1hZGUgdXAgb2Ygd2F0ZXIgbW9sZWN1bGVzLCB3aGljaCBjb25zaXN0IG9mIGh5ZHJvZ2VuIGFuZCAgb3h5Z2VuIGF0b21zLiAgQXQgdGhlIGNlbnRyZSBvZiBlYWNoIGh5ZHJvZ2VuIGF0b20gaXMgYW4gZXZlbiBzbWFsbGVyIHBhcnRpY2xlIGNhbGxlZCBhIHByb3Rvbi4gUHJvdG9ucyAgYXJlIGxpa2UgdGlueSBtYWduZXRzIGFuZCBhcmUgdmVyeSBzZW5zaXRpdmUgdG8gbWFnbmV0aWMgZmllbGRzLiAgV2hlbiB5b3UgbGllIHVuZGVyIHRoZSBwb3dlcmZ1bCBzY2FubmVyIG1hZ25ldHMsIHRoZSBwcm90b25zIGluIHlvdXIgYm9keSBsaW5lIHVwIGluIHRoZSAgc2FtZSBkaXJlY3Rpb24sIGluIHRoZSBzYW1lIHdheSB0aGF0IGEgbWFnbmV0IGNhbiBwdWxsIHRoZSBuZWVkbGUgb2YgYSBjb21wYXNzLiAgU2hvcnQgYnVyc3RzIG9mIHJhZGlvIHdhdmVzIGFyZSB0aGVuIHNlbnQgdG8gY2VydGFpbiBhcmVhcyBvZiB0aGUgYm9keSwga25vY2tpbmcgdGhlICBwcm90b25zIG91dCBvZiBhbGlnbm1lbnQuICBXaGVuIHRoZSByYWRpbyB3YXZlcyBhcmUgdHVybmVkIG9mZiwgdGhlIHByb3RvbnMgcmVhbGlnbi4gVGhpcyBzZW5kcyBvdXQgcmFkaW8gc2lnbmFscywgIHdoaWNoIGFyZSBwaWNrZWQgdXAgYnkgcmVjZWl2ZXJzLiAgVGhlc2Ugc2lnbmFscyBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBleGFjdCBsb2NhdGlvbiBvZiB0aGUgcHJvdG9ucyBpbiB0aGUgYm9keS4gIFRoZXkgYWxzbyBoZWxwIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gdGhlIHZhcmlvdXMgdHlwZXMgb2YgdGlzc3VlIGluIHRoZSBib2R5LCBiZWNhdXNlIHRoZSAgcHJvdG9ucyBpbiBkaWZmZXJlbnQgdHlwZXMgb2YgdGlzc3VlIHJlYWxpZ24gYXQgZGlmZmVyZW50IHNwZWVkcyBhbmQgcHJvZHVjZSBkaXN0aW5jdCBzaWduYWxzLiAgTVJJIHNjYW5zIHJlcXVpcmUgMjAgbWludXRlcyB0byBvbmUgaG91ciB0byBhbmFseXplIGFueSBwYXJ0IG9mIHRoZSBib2R5LiAgSW4gdGhlIHNhbWUgd2F5IHRoYXQgbWlsbGlvbnMgb2YgcGl4ZWxzIG9uIGEgY29tcHV0ZXIgc2NyZWVuIGNhbiBjcmVhdGUgY29tcGxleCBwaWN0dXJlcywgdGhlICBzaWduYWxzIGZyb20gdGhlIG1pbGxpb25zIG9mIHByb3RvbnMgaW4gdGhlIGJvZHkgYXJlIGNvbWJpbmVkIHRvIGNyZWF0ZSBhIGRldGFpbGVkIGltYWdlIG9mIHRoZSAgaW5zaWRlIG9mIHRoZSBib2R5LiAgSGVuY2UsIGJvdGggc3RhdGVtZW50IDEgYW5kIDIgYXJlIGluY29ycmVjdC4gIGh0dHBzOi8vd3d3Lm5ocy51ay9jb25kaXRpb25zL21yaS1zY2FuLyAgaHR0cHM6Ly93d3cubWVkaWNhbG5ld3N0b2RheS5jb20vYXJ0aWNsZXMvMTQ2MzA5I3ByZXBhcmF0aW9uICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9jaXRpZXMvSHlkZXJhYmFkL2xvbmctd2FpdC1mb3ItbXJpLXNjYW4tYXQtdGVsYW5nYW5hcy1nYW5kaGktaCAgb3NwaXRhbC1lbmRzL2FydGljbGU2NTQ0NzI5Ny5lY2Ug",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements regarding Corals in India \n\t1. There are about 500 species of hard corals found in India \n\t2. Almost 90% of them are found in the waters surrounding Andaman and Nicobar Islands. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuICBTY2llbnRpc3RzIGhhdmUgcmVjb3JkZWQgZm91ciBzcGVjaWVzIG9mIGF6b294YW50aGVsbGF0ZSBjb3JhbHMgZm9yIHRoZSBmaXJzdCB0aW1lIGZyb20gSW5kaWFuICB3YXRlcnMuIFRoZXNlIG5ldyBjb3JhbHMgd2VyZSBmb3VuZCBmcm9tIHRoZSB3YXRlcnMgb2YgdGhlIEFuZGFtYW4gYW5kIE5pY29iYXIgSXNsYW5kcy4gIEF6b294YW50aGVsbGF0ZSBjb3JhbHMgYXJlIGEgZ3JvdXAgb2YgY29yYWxzIHRoYXQgZG8gbm90IGNvbnRhaW4gem9veGFudGhlbGxhZSBhbmQgZGVyaXZlICBub3VyaXNobWVudCBub3QgZnJvbSB0aGUgc3VuIGJ1dCBmcm9tIGNhcHR1cmluZyBkaWZmZXJlbnQgZm9ybXMgb2YgcGxhbmt0b24uIFRoZXNlIGdyb3VwcyBvZiAgY29yYWxzIGFyZSBkZWVwLXNlYSByZXByZXNlbnRhdGl2ZXMsIHdpdGggdGhlIG1ham9yaXR5IG9mIHNwZWNpZXMgcmVwb3J0aW5nIGZyb20gYmV0d2VlbiAyMDAgbSAgdG8gMTAwMCBtLiBUaGVpciBvY2N1cnJlbmNlcyBhcmUgYWxzbyByZXBvcnRlZCBmcm9tIHNoYWxsb3cgY29hc3RhbCB3YXRlcnMuICBUaGVyZSBhcmUgYWJvdXQgNTcwIHNwZWNpZXMgb2YgaGFyZCBjb3JhbHMgZm91bmQgaW4gSW5kaWEgYW5kIGFsbW9zdCA5MCUgb2YgdGhlbSAgYXJlIGZvdW5kIGluIHRoZSB3YXRlcnMgc3Vycm91bmRpbmcgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzLiBUaGUgcHJpc3RpbmUgYW5kICBvbGRlc3QgZWNvc3lzdGVtIG9mIGNvcmFscyBzaGFyZSBsZXNzIHRoYW4gMSUgb2YgdGhlIGVhcnRoJ3Mgc3VyZmFjZSBidXQgdGhleSBwcm92aWRlICBhIGhvbWUgdG8gbmVhcmx5IDI1JSBvZiBtYXJpbmUgbGlmZS4gIEZvdXIgc3BlY2llcyBvZiBhem9veGFudGhlbGxhdGUgY29yYWxzIHdlcmUgcmVjb3JkZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGZyb20gdGhlIHdhdGVycyBvZiB0aGUgIEFuZGFtYW4gYW5kIE5pY29iYXIgSXNsYW5kcy4gIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktdGVjaC9zY2llbmNlL2ZvdXItbmV3LWNvcmFscy1yZWNvcmRlZC1mcm9tLWluZGlhbi13YXRlcnMvYXJ0aWNsZSAgNjU1NTM1MzAuZWNlIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2   Test-3: GS Subject   "
      }
    },
    {
      "index" : 94,
      "question" : "The world's largest recorded freshwater fish, a giant stingray, has been caught in ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSB3b3JsZCdzIGxhcmdlc3QgcmVjb3JkZWQgZnJlc2h3YXRlciBmaXNoLCBhIGdpYW50IHN0aW5ncmF5LCBoYXMgYmVlbiBjYXVnaHQgaW4gIHRoZSBNZWtvbmcgUml2ZXIgaW4gQ2FtYm9kaWEsIGFjY29yZGluZyB0byBzY2llbnRpc3RzIGZyb20gdGhlIFNvdXRoZWFzdCBBc2lhbiAgbmF0aW9uIGFuZCB0aGUgVW5pdGVkIFN0YXRlcy4gSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIFRoZSBzdGluZ3JheSwgY2FwdHVyZWQgb24gSnVuZSAxMywgbWVhc3VyZWQgYWxtb3N0IGZvdXIgbWV0ZXJzICgxMyBmZWV0KSBmcm9tIHNub3V0IHRvIHRhaWwgYW5kICB3ZWlnaGVkIHNsaWdodGx5IHVuZGVyIDMwMCBraWxvZ3JhbXMgKDY2MCBwb3VuZHMpLCBhY2NvcmRpbmcgdG8gYSBzdGF0ZW1lbnQgb24gTW9uZGF5IGJ5ICBXb25kZXJzIG9mIHRoZSBNZWtvbmcsIGEgam9pbnQgQ2FtYm9kaWFuLVUuUy4gcmVzZWFyY2ggcHJvamVjdC4gIFRoZSBwcmV2aW91cyByZWNvcmQgZm9yIGEgZnJlc2h3YXRlciBmaXNoIHdhcyBhIDI5My1raWxvZ3JhbSAoNjQ2LXBvdW5kKSBNZWtvbmcgZ2lhbnQgY2F0ZmlzaCwgIGRpc2NvdmVyZWQgaW4gVGhhaWxhbmQgaW4gMjAwNSwgdGhlIGdyb3VwIHNhaWQuICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBUaGUgc3RpbmdyYXkgd2FzIHNuYWdnZWQgYnkgYSBsb2NhbCBmaXNoZXJtYW4gc291dGggb2YgU3R1bmcgVHJlbmcgaW4gbm9ydGhlYXN0ZXJuIENhbWJvZGlhLiAgVGhlIGZpc2hlcm1hbiBhbGVydGVkIGEgbmVhcmJ5IHRlYW0gb2Ygc2NpZW50aXN0cyBmcm9tIHRoZSBXb25kZXJzIG9mIHRoZSBNZWtvbmcgcHJvamVjdCwgIHdoaWNoIGhhcyBwdWJsaWNpc2VkIGl0cyBjb25zZXJ2YXRpb24gd29yayBpbiBjb21tdW5pdGllcyBhbG9uZyB0aGUgcml2ZXIuICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLXRlY2gvc2NpZW5jZS93b3JsZHMtbGFyZ2VzdC1mcmVzaHdhdGVyLWZpc2gtZm91bmQtaW4tY2FtYm9kaWEvYXJ0ICBpY2xlNjU1NDY5NjQuZWNlIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Amazon River ",
        "option2" : "Mekong River ",
        "option3" : "Yangtze River ",
        "option4" : "None of the above "
      }
    },
    {
      "index" : 95,
      "question" : "Consider the following statements regarding Belle-II Experiment \n\t1. Belle-II experiment is designed to study violations of the Standard Model and dark matter. \n\t2. Belle-II will indirectly probe new physics using intense electron-positron beams and a sensitive detector. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIEJvdGggdGhlIHN0YXRlbWVudHMgYXJlIGNvcnJlY3QuICAgICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICBCZWxsZSBJSSBpcyBhbiB1cGdyYWRlZCBkZXRlY3RvciB0byBhbGxvdyB0aGUgZXhwZXJpbWVudCB0byByZWNvcmQgdGhlIGVub3Jtb3VzIG51bWJlcnMgb2YgIHBhcnRpY2xlIHByb2Nlc3NlcyB0aGF0IGFyZSBwcm9kdWNlZCBieSB0aGUgU3VwZXIgS0VLQiBhY2NlbGVyYXRvci4gIFRoaXMgZXhwZXJpbWVudCBpcyBkZXNpZ25lZCB0byBzdHVkeSB2aW9sYXRpb25zIG9mIHRoZSBTdGFuZGFyZCBNb2RlbCBhbmQgZGFyayAgbWF0dGVyLiAgVGhlIEJlbGxlIElJIGV4cGVyaW1lbnQgd2lsbCBhY2N1bXVsYXRlIDUwIHRpbWVzIG1vcmUgZGF0YSB0aGFuIHRoZSBwcmV2aW91cyAgZXhwZXJpbWVudCwgQmVsbGUsIGFuZCBwdXJzdWUgdmlvbGF0aW9ucyBvZiB0aGUgc3ltbWV0cnkgYmV0d2VlbiBwYXJ0aWNsZXMgYW5kIGFudGktICBwYXJ0aWNsZXMgYXMgd2VsbCBhcyBuZXcgbGF3cyBvZiBwaHlzaWNzLiBJdCBpcyBhIGdyYW5kIGNvbGxhYm9yYXRpb24gb2YgNzAwIHNjaWVudGlzdHMgZnJvbSAgMjMgY291bnRyaWVzLiAgQ29tcGxlbWVudGFyeSB0byB0aGUgZGlyZWN0IHNlYXJjaCBleHBlcmltZW50cyBiZWluZyBjYXJyaWVkIG91dCBhdCB0aGUgTGFyZ2UgSGFkcm9uICBDb2xsaWRlciBpbiBDRVJOLCBCZWxsZS1JSSB3aWxsIGluZGlyZWN0bHkgcHJvYmUgbmV3IHBoeXNpY3MgdXNpbmcgaW50ZW5zZSBlbGVjdHJvbi0gIHBvc2l0cm9uIGJlYW1zIGFuZCBhIHNlbnNpdGl2ZSBkZXRlY3Rvci4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2 "
      }
    },
    {
      "index" : 96,
      "question" : "Kurinji, Mullai, Marutham, Neithal and Paalai, sometime seen in the news, is related to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSByaWNoIGN1bHR1cmFsIGhpc3Rvcnkgb2YgdGhlIFRhbWlscyB3aWxsIGJlIGZlYXR1cmVkIGluIGEgcHJvamVjdCByZWxhdGluZyB0byB0aGUgbmV3IFBhcmxpYW1lbnQgIGJlaW5nIGNvbnN0cnVjdGVkIGJ5IHRoZSBVbmlvbiBnb3Zlcm5tZW50IGluIE5ldyBEZWxoaS4gIFNvaWwgc2FtcGxlcyBmcm9tIGZpdmUgZWNvbG9naWNhbCByZWdpb25zIG1lbnRpb25lZCBpbiBhbmNpZW50IFRhbWlsIFNhbmdhbSAgbGl0ZXJhdHVyZSAtIEt1cmluamksIE11bGxhaSwgTWFydXRoYW0sIE5laXRoYWwgYW5kIFBhYWxhaSAtIGhhdmUgYmVlbiBjb2xsZWN0ZWQgYW5kICBzZW50IHRvIHRoZSBjYXBpdGFsIHJlY2VudGx5LiAgIFRlc3QtMzogR1MgU3ViamVjdCAgICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwgYW1pbC1uYWR1IG4tc2VuZHMtc29pbC1zYW1wbGVzLWZvci1wcm9qZWN0LXJlbGF0aW5nLXQgIG8tbmV3LXBhcmxpYW1lbnQtYnVpbGRpbmcvYXJ0aWNsZTY1NTk5OTMwLmVjZSA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ancient ports of Coromandel Coast ",
        "option2" : "Ayurvedic herbs found in Western Ghats ",
        "option3" : "Mountain ranges located in Western Ghats ",
        "option4" : "None of the above "
      }
    },
    {
      "index" : 97,
      "question" : "Madhya Pradesh is bounded by which of the following states? \n\t1. Bihar \n\t2. Jharkhand \n\t3. Haryana \n\t4. Rajasthan \n\t5. Gujarat Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only ",
        "option2" : "2, 4 and 5 only ",
        "option3" : "4 and 5 only ",
        "option4" : "2, 3, 4 and 5 only      Test-3: GS Subject   "
      }
    },
    {
      "index" : 99,
      "question" : "Which of the following are east flowing rivers of India? \n\t1. Penner \n\t2. Palar \n\t3. Periyar \n\t4. Kalinadi Select the correct answer using the code given below ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgICBUZXN0LTM6IEdTIFN1YmplY3QgICAgIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xpc3Rfb2Zfcml2ZXJzX29mX0tlcmFsYSA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "1, 2 and 4 only "
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements regarding Industrial Revolutions \n\t1. The First Industrial Revolution: The revolution was about emergence of railways and Steel industry. \n\t2. The Third Industrial Revolution: Electric engine, Heavy chemicals, automobiles and consumer durables made their presence felt during this period. \n\t3. The Fourth Industrial Revolution: The digital revolution. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMDA=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogIFRoZSBtYWluIEZlYXR1cmVzIG9mIHRoZXNlIGluZHVzdHJpYWwgcmV2b2x1dGlvbnMgYXJlIGFzIGZvbGxvd3M6ICBUaGUgRmlyc3QgSW5kdXN0cmlhbCBSZXZvbHV0aW9uOiAxNzYwIC0gMTg0MC4gSXQgd2FzIGEgcGVyaW9kIHdoaWNoIHdpdG5lc3NlZDEuICAgVGVzdC0zOiBHUyBTdWJqZWN0ICAgICB0aGUgZW1lcmdlbmNlIG9mIHN0ZWFtIGVuZ2luZSwgdGV4dGlsZSBpbmR1c3RyeSBhbmQgbWVjaGFuaWNhbCBlbmdpbmVlcmluZy4gIEhlbmNlIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gIFRoZSBTZWNvbmQgSW5kdXN0cmlhbCBSZXZvbHV0aW9uOiAxODcwIC0gMTkxNC4gVGhlIHJldm9sdXRpb24gd2FzIGFib3V0IGVtZXJnZW5jZSBvZjIuICByYWlsd2F5cyBhbmQgU3RlZWwgaW5kdXN0cnkuICBUaGUgVGhpcmQgSW5kdXN0cmlhbCBSZXZvbHV0aW9uOiAxOTY5IC0gMjAwMC4gRWxlY3RyaWMgZW5naW5lLCBIZWF2eSBjaGVtaWNhbHMsMy4gIGF1dG9tb2JpbGVzIGFuZCBjb25zdW1lciBkdXJhYmxlcyBtYWRlIHRoZWlyIHByZXNlbmNlIGZlbHQgZHVyaW5nIHRoaXMgcGVyaW9kLiAgVGhlIEZvdXJ0aCBJbmR1c3RyaWFsIFJldm9sdXRpb246IFRoZSBkaWdpdGFsIHJldm9sdXRpb24sIHNpbmNlIDIwMDAgb3IgYSBmZXcgZGVjYWRlcyBwcmlvci40LiAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvY2l0aWVzL0h5ZGVyYWJhZC9pbmRpYS13aWxsLXBsYXktbGVhZC1yb2xlLWluLWZvdXJ0aC1pbmR1c3RyaWFsLXJlICB2b2x1dGlvbi9hcnRpY2xlNjU1OTI3NzguZWNlICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1, 2 and 3 ",
        "option3" : "1 and 3 only ",
        "option4" : "2 and 3 only  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "History",
  "year" : "2023"
}
