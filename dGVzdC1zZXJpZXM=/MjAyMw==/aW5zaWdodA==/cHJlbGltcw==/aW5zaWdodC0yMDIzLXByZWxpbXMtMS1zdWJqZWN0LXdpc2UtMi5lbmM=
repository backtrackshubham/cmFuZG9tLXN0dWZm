{
  "testId" : "insight-2023-prelims-1-subject-wise-2",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/insight/prelims/insight-2023-prelims-1-subject-wise-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements concerning the use of clay pottery throughout theages.\n\t1. Clay figurines of domesticated animals could be found in the Harappan ruins.\n\t2. Kosambi and Gaya host several clay pottery ruins of the Mauryan empire.\n\t3. Greco-Buddhist stupas often decorated with stucco designs and motifs could be found in thenorth-western region of the Indian subcontinent, belonging to the Kushana period.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwx",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdGVtZW50IDE6IDMwMDAgLSAxNTAwIEJDRSBIYXJhcHBhbiBDaXZpbGlzYXRpb24gU21hbGwgZmlndXJlcyBvZiBhbmltYWxzLCBkb21lc3RpY2F0ZWQgYW5pbWFscyBsaWtlIHRoZSBidWxsIGFuZCB0aGUgcmFtLCB0aW55IGltYWdlcyBvZiBob3VzZSBhbmltYWxzIGxpa2UgYSBiaXJkIGluIGEgY2FnZSwgY2F0cywgbGl2ZWx5IEluZGlhbiBzcXVpcnJlbHMgbXVuY2hpbmcgb24gYSBqdWljeSBudXQuIFRveXMgZm9yIGNoaWxkcmVuIHNpbWlsYXIgdG8gdGhlIGNsYXkgdG95cyBtYWRlIGZvciBjaGlsZHJlbiB0b2RheSBieSB0aGUgdmlsbGFnZSBwb3R0ZXIgYW5kIHNvbGQgYXQgdGhlIGhhYXRzIG9yIHZpbGxhZ2UgYmF6YWFyIGxpa2UgdGhlIGJ1bGwgd2l0aCBhIG1vdmFibGUgbm9kZGluZyBoZWFkIFN0YXRlbWVudCAyOiAgMzAwIC0gMTAwIEJDRSBNYXVyeWEgYW5kIFN1bmdhIFBlcmlvZHMgQ2xheSBmaWd1cmluZXMgZnJvbSBleGNhdmF0aW9ucyBhdCBQYXRhbGlwdXRyYSwgdGhlIGFuY2llbnQgTWF1cnlhbiBjYXBpdGFsLCBLb3NhbWJpLCBHYXlhIGFuZCBvdGhlciBpbXBvcnRhbnQgc2l0ZXMgb2YgdGhlIE1hdXJ5YW4gYW5kIEd1cHRhIFBlcmlvZHMuICBTdGF0ZW1lbnQgMzogIDEwMCBCQ0UgLSAzMDAgQ0UgS3VzaGFuIFBlcmlvZCBJbiB0aGUgbm9ydGgtd2VzdGVybiByZWdpb24gb2YgSW5kaWEgdGhlIEdyZWNvLUJ1ZGRoaXN0IHN0dXBhcyB3ZXJlIG9mdGVuIGRlY29yYXRlZCB3aXRoIHN0dWNjbyBkZXNpZ25zIGFuZCBtb3RpZnMuIFRoZXJlIGFyZSBzZXZlcmFsIEdhbmRoYXJhbiBoZWFkcyB3aXRoIGV2aWRlbmNlIG9mIHBhaW50LiBTdHJvbmcgcmVkIG1pbmVyYWwgY29sb3VycyB3ZXJlIHVzZWQgZm9yIHRoZSBsaXBzIGFuZCBibGFjayBjaGFyY29hbCBodWVzIGZvciBtYXR0ZWQgbG9ja3MgYW5kIGN1cmx5IGhhaXIuIFEgU291cmNlOiBQZyAyMDogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQ=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following about Dravidian literature.\n\t1. Silappadhikaram and Manimekalai, written around 10th CE, provide details of Tamil societyduring that period.\n\t2. Manimekalai discusses Buddhist doctrines.\n\t3. Tolkappiyam is a work on Tamil grammar that helps understand Tamil poetry.\n\t4. Nannaya was the first Malayalam poet.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwy",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmFja2dyb3VuZDogRHJhdmlkaWFuIGxpdGVyYXR1cmUgbWFpbmx5IGNvbnNpc3RzIG9mIHRoZSBmb3VyIGxhbmd1YWdlcywgVGFtaWwsIFRlbHVndSwgS2FubmFkYSBhbmQgTWFsYXlhbGFtLiBPdXQgb2YgdGhlc2UsIFRhbWlsIGlzIHRoZSBvbGRlc3QgbGFuZ3VhZ2Ugd2hpY2ggcHJlc2VydmVkIGl0cyBEcmF2aWRpYW4gY2hhcmFjdGVyIHRoZSBtb3N0LiBLYW5uYWRhLCBhcyBhIGN1bHR1cmVkIGxhbmd1YWdlLCBpcyBhbG1vc3QgYXMgb2xkIGFzIFRhbWlsLiBBbGwgdGhlc2UgbGFuZ3VhZ2VzIGhhdmUgYm9ycm93ZWQgbWFueSB3b3JkcyBmcm9tIFNhbnNrcml0IGFuZCB2aWNlIHZlcnNhLiBUYW1pbCBpcyB0aGUgb25seSBtb2Rlcm4gSW5kaWFuIGxhbmd1YWdlIHdoaWNoIGlzIHJlY29nbml6YWJseSBjb250aW51b3VzIHdpdGggYSBjbGFzc2ljYWwgcGFzdC4gRWFybHkgY2xhc3NpY2FsIFRhbWlsIGxpdGVyYXR1cmUgaXMga25vd24gYXMgU2FuZ2FtIGxpdGVyYXR1cmUgbWVhbmluZyAnZnJhdGVybml0eScsIGluZGljYXRpbmcgbWFpbmx5IHR3byBzY2hvb2xzIG9mIHBvZXRzLCBhaGFtIChzdWJqZWN0aXZlIGxvdmUgcG9lbXMpLCBhbmQgcHVyYW0gKG9iamVjdGl2ZSwgcHVibGljIHBvZXRyeSBhbmQgaGVyb2ljKS4gQWhhbSBkZWFscyBwdXJlbHkgd2l0aCB0aGUgc3ViamVjdGl2ZSBlbW90aW9ucyBvZiB0aGUgbG92ZXIsIGFuZCBwdXJhbSB3aXRoIGFsbCBraW5kcyBvZiBlbW90aW9ucywgbWFpbmx5IHRoZSB2YWxvdXIgYW5kIGdsb3J5IG9mIGtpbmdzLCBhbmQgYWJvdXQgZ29vZCBhbmQgZXZpbC4gVGhlIFNhbmdhbSBjbGFzc2ljcywgY29uc2lzdGluZyBvZiAxOCB3b3JrcyAoZWlnaHQgYW50aG9sb2dpZXMgb2YgbHlyaWNzIGFuZCB0ZW4gbG9uZyBwb2VtcyksIGFyZSB3ZWxsIGtub3duIGZvciB0aGVpciBkaXJlY3RuZXNzIG9mIGV4cHJlc3Npb24uIFRoZXNlIHdlcmUgd3JpdHRlbiBieSA0NzMgcG9ldHMsIGFtb25nIHdob20gMzAgd2VyZSB3b21lbiwgdGhlIGZhbW91cyBwb2V0ZXNzIEF2dmFpeWFyIGJlaW5nIG9uZSBvZiB0aGVtLiBJbiB0aGUgY2FzZSBvZiAxMDIgcG9lbXMsIHRoZSBhdXRob3JzIGFyZSB1bmtub3duLiBNb3N0IEMuIG9mIHRoZXNlIGFudGhvbG9naWVzIGFyZSBvZiB0aGUgM3JkIGNlbnR1cnkgQi4gIEp1c3RpZmljYXRpb246ICBEdXJpbmcgdGhpcyB0aW1lLCBhIFRhbWlsIGdyYW1tYXIgVG9sa2FwcGl5YW0sIHdhcyB3cml0dGVuLCB0byB1bmRlcnN0YW5kIGVhcmx5IFRhbWlsIHBvZXRyeS4gVG9sa2FwcGl5YW0gaW5kaWNhdGVzIGZpdmUgbGFuZHNjYXBlcyBvciB0eXBlcyBvZiBsb3ZlLCBhbmQgb3V0bGluZXMgdGhlaXIgc3ltYm9saWMgY29udmVudGlvbnMuIENyaXRpY3Mgc2F5IHRoYXQgU2FuZ2FtIGxpdGVyYXR1cmUgaXMgbm90IGp1c3QgdGhlIGVhcmxpZXN0IGV2aWRlbmNlIG9mIHRoZSBUYW1pbCBnZW5pdXMuIFRoZSBUYW1pbHMsIGluIGFsbCB0aGVpciAyMDAwIHllYXJzIG9mIGxpdGVyYXJ5IGVmZm9ydCwgd3JvdGUgbm90aGluZyBiZXR0ZXIuIFRoZSBmYW1vdXMgVGhpcnVra3VyYWwgYnkgVGhpcnV2YWxsdXZhciwgaW4gdGhlIDZ0aCBjZW50dXJ5IEEuRC4sIHNlcnZlcyBhcyBhIG1hbnVhbCBvZiBwcmVjZXB0cyB0byBndWlkZSBvbmUgdG8gbm9ibGUgbGl2aW5nLiBJdCBleHBvdW5kcyBhIHNlY3VsYXIsIG1vcmFsIGFuZCBwcmFjdGljYWwgYXR0aXR1ZGUgdG93YXJkcyBsaWZlLiBUaGUgdHdpbiBlcGljcywgU2lsYXBwYWRoaWthcmFtICh0aGUgc3Rvcnkgb2YgdGhlIGFua2xldCksIHdyaXR0ZW4gYnkgSWxhbmdvLUFkaWdhbCwgYW5kIE1hbmltZWthbGFpICh0aGUgc3Rvcnkgb2YgTWFuaW1la2FsYWkpIGJ5IENoYXR0YW5hciwgd2VyZSB3cml0dGVuIHNvbWV0aW1lcyBpbiBBLkQuIDIwMC0zMDAgYW5kIGdpdmUgdml2aWQgYWNjb3VudHMgb2YgVGFtaWwgc29jaWV0eSBkdXJpbmcgdGhhdCBwZXJpb2QuIFRoZXNlIGFyZSB2YWx1YWJsZSBzdG9yZWhvdXNlcyBhbmQgZXBpY3Mgb2YgZGlnbml0eSBhbmQgc3VibGltaXR5LCBsYXlpbmcgc3RyZXNzIG9uIHRoZSBjYXJkaW5hbCB2aXJ0dWVzIG9mIGxpZmUuIEluIE1hbmltZWthbGFpIHRoZXJlIGlzIGFuIGVsYWJvcmF0ZSBleHBvc2l0aW9uIG9mIHRoZSBkb2N0cmluZXMgb2YgQnVkZGhpc20uIElmIFRhbWlsIHJldmVhbHMgYSB0cml1bXBoIG9mIEJyYWhtYW5pYyBhbmQgQnVkZGhpc3Qga25vd2xlZGdlLCBLYW5uYWRhIHNob3dzIEphaW4gYXNjZW5kZW5jeSBpbiBpdHMgYW5jaWVudCBwaGFzZS4gTWFsYXlhbGFtIGFic29yYmVkIGEgcmljaCB0cmVhc3VyZSBjb250YWluZWQgaW4gdGhlIFNhbnNrcml0IGxhbmd1YWdlLiBOYW5uYXlhIChBLkQuMTEwMCkgd2FzIHRoZSBmaXJzdCBUZWx1Z3UgcG9ldC4gSW4gYW5jaWVudCB0aW1lcywgVGFtaWwgYW5kIFRlbHVndSBzcHJlYWQgdG8gZGlzdGFudCBwbGFjZXMuIFEgU291cmNlOiAgaHR0cDovL2NjcnRpbmRpYS5nb3YuaW4vbGl0ZXJhcnlhcnRzLnBocA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only",
        "option2" : "1, 2 and 4 only",
        "option3" : "1 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 3,
      "question" : "Nachiarkoil in Thanjavur District of Tamil Nadu is an important bell-metal centreprimarily because",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwz",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogT3B0aW9uIEI6IFF1YXJ0eiBhbmQgRmVsZHNwYXIgbWluZXJhbHMgb2NjdXIgaW4gU2FsZW0sIEthcnVyLCBEaW5kaWd1bCwgTmFtYWtrYWwsIFRpcnVwcHVyLCBUaXJ1Y2hpcmFwYWxsaSBhbmQgRGhhcm1hcHVyaSBkaXN0cmljdHMuIFF1YXJ0eiBpcyB1c2VkIGluIGVsZWN0cm9uaWNzIGFuZCBvcHRpY2FsIGluZHVzdHJpZXMuIEZlbGRzcGFyIGlzIHVzZWQgaW4gY2VyYW1pYyBpbmR1c3RyaWVzLiAgICBOYWNoaWFya29pbCBpbiBUaGFuamF2dXIgRGlzdHJpY3Qgb2YgVGFtaWwgTmFkdSBpcyBhbiBpbXBvcnRhbnQgYmVsbC1tZXRhbCBjZW50cmUuIFRoaXMgaXMgZHVlIHRvIHRoZSBwcmVzZW5jZSBvZiBsaWdodCBicm93biBzYW5kIGNhbGxlZCB2YW5kYWwgb24gdGhlIGJhbmtzIG9mIHRoZSBDYXV2ZXJ5LCBpZGVhbGx5IHN1aXRlZCBmb3IgbWFraW5nIG1vdWxkcy4gU29tZSBvZiB0aGUgYXJ0aWNsZXMgbWFkZSBieSBjYXN0aW5nIGFyZSB2YXNlcyBpbiBkaWZmZXJlbnQgc2hhcGVzLCB0dW1ibGVycywgd2F0ZXItY29udGFpbmVycywgcGxhaW4gYW5kIGRlY29yYXRlZCBvcm5hbWVudGFsIHNwaXR0b29ucyB3aGljaCBhcmUgYSBzcGVjaWFsaXR5IG9mIHRoaXMgcGxhY2UsIGZvb2RjYXNlcywgYmVsbHMsIGNhbmRsZS1zdGFuZHMsIGtlcm9zZW5lIGxhbXBzLCBwaWNuaWMgY2FycmllcnMsIGFuZCBhIGxhcmdlIHZhcmlldHkgb2Ygb2lsIGxhbXBzLiBRIFNvdXJjZTogQ2ggNDogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQ=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "there are many large Chola temples in this region.",
        "option2" : "the region is rich in Feldspar.",
        "option3" : "the district hosts light brown sand (vandal) on the banks of the nearby Cauvery river.",
        "option4" : "the district has received special government patronage for metal works."
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements.\n\t1. There is evidence for the use of hollow masks in the Indus Valley civilisation.\n\t2. Terracotta masks dating back to the fourth century have been excavated in eastern India.\n\t3. The Natya Shastra speaks of masks and their use in theatre.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTWFzayB1c2UgaGFzIGEgbG9uZyBoaXN0b3J5IGluIEluZGlhLiBFeGNhdmF0aW9ucyBoYXZlIHJldmVhbGVkIHNtYWxsIGhvbGxvdyBtYXNrcyBkYXRpbmcgYmFjayB0byB0aGUgSW5kdXMgVmFsbGV5IENpdmlsaXNhdGlvbi4gSW4gZmFjdCBpbiBCaWhhciwgYSB0ZXJyYWNvdHRhIG1hc2sgb2YgdGhlIGZvdXJ0aCBjZW50dXJ5IGhhcyBhbHNvIGJlZW4gZXhjYXZhdGVkLiAgVGhlIE5hdHlhIFNoYXN0cmEgc3BlYWtzIG9mIG1hc2tzIGFuZCB0aGVpciB1c2UgaW4gdGhlYXRyZS4gSGVyZSBpdCBpcyBtZW50aW9uZWQgdGhhdCBtYXNrcyBjYW4gYmUgbWFkZSBvZiBncm91bmQgcGFkZHkgaHVza3MgYXBwbGllZCB0byBjbG90aC4gU3BlY2lmaWMgcmVnaW9ucyBoYXZlIHRoZWlyIG93biBoaXN0b3J5IGFzc29jaWF0ZWQgd2l0aCB0aGUgdXNlIG9mIG1hc2tzIGFuZCBtYXNrIG1ha2luZy4gTWFzayBtYWtpbmcgaW4gQXNzYW0gd2FzIGluaXRpYXRlZCBieSBNYWhhcHVydXNoIFNhbmthcmFkZXZhLCB0aGUgMTV0aCBDZW50dXJ5IHNhaW50LCB3aG8gICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBpbnRyb2R1Y2VkIHRoZW0gaW4gQW5raWEgQmhhb25hLCBhIHRyYWRpdGlvbmFsIGZvcm0gb2YgZHJhbWEuIFNpbmNlIHRoZW4gU2F0dHJhcyBvZiBBc3NhbSBzZXQgdXAgYnkgU2Fua2FyYWRldmEgYW5kIGhpcyBkaXNjaXBsZXMsIFNhbWFndXJpIFNhdHRyYSBhbmQgS2hhdHBhciBTYXR0cmEsIGlzIHRha2luZyBpdCBmb3J3YXJkLiBSZWFkIG1vcmUgaGVyZSBodHRwczovL3d3dy50aGVoaW5kdS5jb20vZmVhdHVyZXMvbWV0cm9wbHVzL1N0b3JpZXMtYmVoaW5kLXRoZS1tYXNrL2FydGljbGUxNDUxNTIwMi5lY2UgIFEgU291cmNlOiBQZyAxMTU6IExpdmluZyBDcmFmdCBUcmFkaXRpb25zIG9mIEluZGlhOiAxMXRoIE5DRVJU",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 2 only  Test-2: GS Subject  "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following about the differences between Buddhist and Jain literature.\n\t1. While Buddhist tales and literature are didactic in character, Jain tales are not.\n\t2. While ancient/medieval Buddhist literature is available in Sanskrit, apart from Pali and Prakrit,ancient/medieval Jain literature was not composed in Sanskrit.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBCdWRkaGlzdCBjYW5vbmljYWwgbGl0ZXJhdHVyZSBpcyBpbiBQYWxpIHdoaWNoIGluY2x1ZGVzIFRpcGl0YWthICh0aHJlZWZvbGQgYmFza2V0KS4gVGhlIGZpcnN0IGJhc2tldCwgVmluYXlhIFBpdGFrYSwgY29udGFpbnMgdGhlIG1vbmFzdGljIHJ1bGVzIG9mIHRoZSBPcmRlciBvZiBCdWRkaGlzdCBtb25rcy4gVGhlIHNlY29uZCBiYXNrZXQsIFN1dHRhIFBpdGFrYSwgaXMgdGhlIGNvbGxlY3Rpb24gb2YgdGhlIHNwZWVjaGVzIGFuZCBkaWFsb2d1ZXMgb2YgdGhlIEJ1ZGRoYS4gVGhlIHRoaXJkIGJhc2tldCwgdGhlIEFiaGlkaGFtbWEgUGl0YWthLCBlbHVjaWRhdGVzIHRoZSB2YXJpb3VzIHRvcGljcyBkZWFsaW5nIHdpdGggZXRoaWNzLCBwc3ljaG9sb2d5IG9yIHRoZW9yeSBvZiBrbm93bGVkZ2UuIFRoZSBqYXRha2EgS2F0aGFzIGFyZSBub24tY2Fub25pY2FsIEJ1ZGRoaXN0IGxpdGVyYXR1cmUgaW4gd2hpY2ggc3RvcmllcyByZWxhdGluZyB0byB0aGUgZm9ybWVyIGJpcnRocyBvZiB0aGUgQnVkZGhhIChCb2RoaS1zYXR0dmEgb3IgdGhlIHdvdWxkLWJlIEJ1ZGRoYSkgYXJlIG5hcnJhdGVkLiBUaGVzZSBzdG9yaWVzIHByb3BhZ2F0ZSBCdWRkaGlzdCByZWxpZ2lvdXMgZG9jdHJpbmVzIGFuZCBhcmUgYXZhaWxhYmxlIGluIGJvdGggU2Fuc2tyaXQgYW5kIFBhbGkuIEFzIHRoZSBqYXRha2EgdGFsZXMgZ3JldyBpbiBidWxrLCB0aGV5IGFzc2ltaWxhdGVkIHBvcHVsYXIgdGFsZXMsIGFuY2llbnQgbXl0aG9sb2d5LCBzdG9yaWVzIGZyb20gb2xkZXIgcmVsaWdpb3VzIHRyYWRpdGlvbnMsIGV0Yy4gSmF0YWthcyBhcmUsIGluIGZhY3QsIGJhc2VkIG9uIHRoZSBjb21tb24gaGVyaXRhZ2Ugb2YgdGhlIEluZGlhbiBtYXNzZXMuIEJ1ZGRoaXN0IGxpdGVyYXR1cmUgaXMgYWxzbyBhYnVuZGFudGx5IGF2YWlsYWJsZSBpbiBTYW5za3JpdCwgd2hpY2ggaW5jbHVkZXMgdGhlIGdyZWF0IGVwaWMgQnVkZGhhY2hhcml0YSBieSBBc3dhZ2hvc2hhICg3OCBBLkQuKS4gTGlrZSB0aGUgQnVkZGhpc3Qgc3RvcmllcywgdGhlIEphaW4gdGFsZXMgaW4gZ2VuZXJhbCBhcmUgZGlkYWN0aWMgaW4gY2hhcmFjdGVyLiBUaGV5IGFyZSB3cml0dGVuIGluIHNvbWUgZm9ybXMgb2YgUHJha3JpdC4gVGhlIHdvcmQgSmFpbiBpcyBkZXJpdmVkIGZyb20gdGhlIHJvb3QgamkgKHRvIGNvbnF1ZXIpIGFuZCBzaWduaWZpZXMgdGhlIHJlbGlnaW9uIG9mIHRob3NlIHdobyBoYXZlIGNvbnF1ZXJlZCB0aGUgbHVzdCBmb3IgbGlmZS4gSmFpbiBjYW5vbmljYWwgbGl0ZXJhdHVyZSBieSBKYWluIHNhaW50cywgYXMgd2VsbCBhcyBhIGxhcmdlIG51bWJlciBvZiB3b3JrcyBvbiBsZXhpY29ncmFwaHkgYW5kIGdyYW1tYXIgYnkgSGVtYWNoYW5kcmEgKDEwODggQS5ELi0/KSwgaXMgd2VsbCBrbm93bi4gTXVjaCBhbHNvIGluIHRoZSB3YXkgb2YgbW9yYWwgdGFsZSBhbmQgcG9ldHJ5IGFyZSB0byBiZSBmb3VuZC4gSG93ZXZlciwgUHJha3JpdCBpcyB3ZWxsIGtub3duIGZvciBHYXRoYXNhcHRhc2hhdGkgKDcwMCB2ZXJzZXMpIGJ5IEhhbGEgKDMwMCBBLkQuKSwgdGhlIGJlc3QgZXhhbXBsZSBvZiBlcm90aWMgbGl0ZXJhdHVyZS4gSXQgaXMgYSBjb21waWxhdGlvbiBvZiA3MDAgdmVyc2VzIGFsb25nIHdpdGggaGlzIG93biBjb250cmlidXRpb24gb2YgNDQgcG9lbXMuIEl0IGlzIGludGVyZXN0aW5nIHRvIG5vdGUgdGhhdCBxdWl0ZSBhIGZldyBwb2V0ZXNzZXMgbGlrZSBQYWhhaSwgTWFoYXZpLCBSZXZhLCBSb2hhIGFuZCBTYXNpcHBhaGEgYXJlIGluY2x1ZGVkIGluIHRoZSBhbnRob2xvZ3kuIFRoZSB2YXN0IEthdGhhIChzdG9yeSkgbGl0ZXJhdHVyZSBvZiBQcmFrcml0LCB3cml0dGVuIHdpdGggYSBjb25zcGljdW91cyByZWxpZ2lvdXMgb3ZlcnRvbmUsIGV2ZW4gYnkgSmFpbiBzYWludHMsIGlzIGZ1bGwgb2YgZXJvdGljIGVsZW1lbnRzLiBUaGUgYXV0aG9yIG9mIHRoZSAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFZhc3VkZXZhaGluZGkgYXNjcmliZXMgdGhpcyBjaGFuZ2VkIGFwcHJvYWNoIG9mIHRoZSBKYWluIGF1dGhvcnMgdG8gdGhlIGZhY3QgdGhhdCBpdCBpcyBlYXN5IHRvIHRlYWNoIHJlbGlnaW9uIGNsb2FrZWQgYnkgZXJvdGljIGVwaXNvZGVzLCBsaWtlIHN1Z2FyLWNvYXRlZCBtZWRpY2luZS4gVGhlIGNoYXJhY3RlcmlzdGljIG9mIFByYWtyaXQgcG9ldHJ5IGlzIGl0cyBzdWJ0bGV0eTsgdGhlIGlubmVyIG1lYW5pbmcgKEhpeWFhbGkpIGlzIGl0cyBzb3VsLiBKYWluIGxpdGVyYXR1cmUgaXMgYXZhaWxhYmxlIGluIFNhbnNrcml0IHRvbywgbGlrZSB0aGUgVXBhbWl0aWJoYXZhIFByYXBhbmNoYSBLYXRoYSBvZiBTaWRkaGFyYXNpICg5MDYgQS5ELikuIFEgU291cmNlOiBodHRwOi8vY2NydGluZGlhLmdvdi5pbi9saXRlcmFyeWFydHMucGhw",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 6,
      "question" : "Traditional mats called mettha pai are made from",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogT3B0aW9uIEE6IFRoZSBzY3JldyBwaW5lIGlzIGEgdHJvcGljYWwgcGxhbnQga25vd24gZm9yIGl0cyBzb2lsIGNvbnNlcnZhdGlvbiBwcm9wZXJ0aWVzLiBJdCBpcyBncm93biBhcyBhIGhlZGdlIG9yIGFzIGEgYm91bmRhcnkgd2FsbCBpbiBLZXJhbGEuIEl0IGlzIGF2YWlsYWJsZSBpbiBhYnVuZGFuY2UgYW5kIHByb3ZpZGVzIGEgc291cmNlIG9mIGluY29tZSB0byBydXJhbCB3b21lbiB3aG8gbWFrZSBzdHJpcHMgZnJvbSB0aGUgbGVhdmVzIHRvIHdlYXZlIG1hdHMuIFRoZSBsZWF2ZXMgYXJlIGFsc28gdXNlZCBhcyByb29mIHRoYXRjaGVzLiBTdHJpcHMgYXJlIGludGVybGFjZWQgZGlhZ29uYWxseSB0byB3ZWF2ZSBtYXRzIGFuZCBsYXJnZSBzdXJmYWNlcyB0aGF0IGFyZSB0aGVuIGN1dCBhbmQgc2V3biB0byBtYWtlIGNvbnRhaW5lcnMsIGJhZ3MgYW5kIGhhdHMuIFRoZXJlIGFyZSBtYWxlIGFuZCBmZW1hbGUgc3BlY2llcyBvZiB0aGUgc2NyZXcgcGluZS4gIFRoZSBmZW1hbGUgc2NyZXcgcGluZSBwcm9kdWNlcyBhIGZpbmVyIHF1YWxpdHkgb2YgZmlicmUgdXNlZCBpbiB3ZWF2aW5nIHRyYWRpdGlvbmFsIG1hdHMgY2FsbGVkIG1ldHRoYSBwYWkgd2hpY2ggYXJlIHNvZnQgYW5kIGNvb2wgdG8gc2xlZXAgb24uIFRoZSBtYWxlIHNjcmV3IHBpbmUgcHJvZHVjZXMgY29hcnNlciBmaWJyZS4gSW4gVGhhemF2YSBpbiBLb2xsYW0gZGlzdHJpY3Qgb2YgS2VyYWxhLCBkb3VibGUgbGF5ZXIgbWF0cyBhcmUgbWFkZSB3aGljaCBhcmUgZWRnZWQgd2l0aCBhIHZpdmlkIGNvbG91cmVkIHN0cmlwIHVzZWQgdG8gc3RpdGNoIHRoZSBsYXllcnMgdG9nZXRoZXIuIFRoZSB3aGl0ZSBtYXQgaXMgYnVybmlzaGVkIHdpdGggYSBzdG9uZSB0aGF0IGdpdmVzIGl0IGEgcG9saXNoLiAgT3B0aW9uIEQ6ICBVbmxpa2UgdGhlIHdvdmVuIG1hdHMsIHNoaXRhbCBwYXRpIG9yICdjb29sIG1hdHMnIG1hZGUgYnkgdGhlIHBsYWl0aW5nIHRlY2huaXF1ZSBhcmUgbWFkZSBpbiBBc3NhbSBhbmQgVHJpcHVyYS4gVGhlIG1hdCBoYXMgYSBzbW9vdGggYW5kIGx1c3Ryb3VzIHN1cmZhY2UuIFRoZSBtdXJ0YSBwbGFudCBvciAoTWFyYW50YSBkaWNob3RvbWEpIGlzIGhhcnZlc3RlZCB3aGVuIGdyZWVuLCB3YXNoZWQgaW4gc29kYSB3YXRlciBhbmQgZHJpZWQuIEl0IGlzIHRoZW4gYm9pbGVkIGFuZCBzbGljZWQgaW50byBzdHJpcHMgZm9yIHBsYWl0aW5nIHRoZSBtYXQuIFEgU291cmNlOiBDaCA2OiBMaXZpbmcgQ3JhZnQgVHJhZGl0aW9ucyBvZiBJbmRpYTogMTF0aCBOQ0VSVA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "screw pine",
        "option2" : "coir fibre",
        "option3" : "whole cane",
        "option4" : "murta plant fibre"
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements.\n\t1. Paper came to India with Muslim traders, only in the fifteenth century C.E.\n\t2. There is no Sanskrit word for paper.\n\t3. The Persian word for paper, kaghaz, became kagaj in Hindustani.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQXMgcGVyIEEuIEYuIFIuIEhvZXJubGUsICdQYWxtLWxlYWYsIFBhcGVyIGFuZCBCaXJjaC1iYXJrJywgSm91cm5hbCBvZiBBc2lhdGljIFNvY2lldHksIFZvbC4gTFhJWCwgMTkwMTogJ1BhcGVyIGNhbWUgdG8gSW5kaWEgd2l0aCBNdXNsaW0gdHJhZGVycywgaW4gdGhlIGVsZXZlbnRoIGNlbnR1cnkgQy5FLiBJdCBvbmx5IHNsb3dseSBhbmQgZ3JhZHVhbGx5IGRpc3BsYWNlZCB0aGUgQ29yeXBoYSBwYWxtIGxlYWYsIHRoZSB1c2Ugb2Ygd2hpY2ggaGFkIHRoZSBzYW5jdGlvbiBvZiBhZ2UgYW5kIHJlbGlnaW9uIGFtb25nIHRoZSBjb25zZXJ2YXRpdmUgSW5kaWFuIGxpdGVyYXRlcyB3aG8gbG9va2VkIHdpdGggZGlzdHJ1c3QgdXBvbiB0aGlzIG5ldyBwcm9kdWN0Li4uIFRoZXJlIGlzIG5vIFNhbnNrcml0IHdvcmQgZm9yIHBhcGVyLiBUaGUgQ2hpbmVzZSB3b3JkIGlzIGtvZy1keiwgdGhlICdwYXBlciBtYWRlIG9mIHRoZSBiYXJrIG9mIHRoZSBwYXBlci1tdWxiZXJyeSB0cmVlJy4gV2hlbiB0aGUgQXJhYnMsIGluIHRoZSBlaWdodGggY2VudHVyeSwgbGVhcm5lZCBwYXBlci1tYWtpbmcgZnJvbSB0aGUgQ2hpbmVzZSwgdGhleSBhZG9wdGVkIHRoZSBDaGluZXNlIG5hbWUgZm9yIHRoZWlyIG93biBwYXBlciBtYWRlIG9mIGxpbmVuIHJhZ3MuIFRoZSBQZXJzaWFuIHdvcmQgZm9yIHBhcGVyLCBrYWdoYXosIGJlY2FtZSBrYWdhaiBpbiBIaW5kdXN0YW5pLiBCeSB0aGUgZm91cnRlZW50aCBjZW50dXJ5LCBwYXBlciBiZWNhbWUgcG9wdWxhciBpbiBJbmRpYS4gQnkgdGhlIGJlZ2lubmluZyBvZiB0aGUgc2V2ZW50ZWVudGggY2VudHVyeSBwYXBlciBoYWQgZGlzcGxhY2VkIENvcnlwaGEgbGVhdmVzIHRocm91Z2hvdXQgbm9ydGhlcm4gSW5kaWEuJyBRIFNvdXJjZTogQ2ggNzogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQ=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements.\n\t1. The epic Mahabharata mentions puppet traditions.\n\t2. Tholu bommalata is a shadow puppet theatre tradition practised in Andhra Pradesh.\n\t3. Leather puppets are not used in India for religious reasons.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGJlc3Qga25vd24gbGVhdGhlciBwdXBwZXRzIGluIG91ciBjb3VudHJ5IGFyZSB0aG9zZSB1c2VkIGluIHRoZSBUaG9sdSBCb21hbGF0dGEgb2YgQW5kaHJhIFByYWRlc2guIEl0cyBwZXJmb3JtZXJzIGFyZSBwYXJ0IG9mIGEgZ3JvdXAgb2Ygd2FuZGVyaW5nIGVudGVydGFpbmVycyBhbmQgcGVkZGxlcnMgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICB3aG8gcGFzcyB0aHJvdWdoIHZpbGxhZ2VzIGR1cmluZyB0aGUgY291cnNlIG9mIGEgeWVhciBhbmQgb2ZmZXIgdG8gc2luZyBiYWxsYWRzLCB0ZWxsIGZvcnR1bmVzLCBzZWxsIGFtdWxldHMsIHBlcmZvcm0gYWNyb2JhdGljcywgY2hhcm0gc25ha2VzLCB3ZWF2ZSBmaXNobmV0cywgdGF0dG9vIGxvY2FsIHBlb3BsZSBhbmQgbWVuZCBwb3RzLiBUaGlzIGFuY2llbnQgY3VzdG9tLCB3aGljaCBmb3IgY2VudHVyaWVzIGJlZm9yZSByYWRpbywgZmlsbSwgYW5kIHRlbGV2aXNpb24gcHJvdmlkZWQga25vd2xlZGdlIG9mIEhpbmR1IGVwaWNzIGFuZCBsb2NhbCBmb2xrIHRhbGVzLCBub3QgdG8gbWVudGlvbiBuZXdzLCBzcHJlYWQgdG8gdGhlIG1vc3QgcmVtb3RlIGNvcm5lcnMgb2YgdGhlIEluZGlhbiBzdWJjb250aW5lbnQuIFRob2x1IGJvbW1hbGF0YSBsaXRlcmFsbHkgbWVhbnMgInRoZSBkYW5jZSBvZiBsZWF0aGVyIHB1cHBldHMiICh0aG9sdSAtICJsZWF0aGVyIiBhbmQgYm9tbWFsYXRhIC0gInB1cHBldCBkYW5jZSIpLiBMZWF0aGVyIHB1cHBldHMgYXJlIG1hZGUgb3V0IG9mIHRoZSBoaWRlcyBvZiBnb2F0LCBkZWVyIGFuZCBidWZmYWxvLiBUaGUgcHVwcGV0ZWVycyBjb21wcmlzZSBzb21lIG9mIHRoZSB2YXJpb3VzIGVudGVydGFpbmVycyB3aG8gcGVyZm9ybSBhbGwgbmlnaHQgYW5kIHVzdWFsbHkgcmVlbmFjdCB2YXJpb3VzIHN0b3JpZXMgZnJvbSBIaW5kdSBlcGljcyBzdWNoIGFzIHRoZSBSYW1heWFuYSBhbmQgTWFoYWJoYXJhdGEuIFRoZSBvcmlnaW5zIG9mIHRoZXNlIHB1cHBldHMgY2FuIGJlIHRyYWNlZCBiYWNrIHRvIGFib3V0IDIwMDAgQkNFLCBhcyB0aGV5IGFyZSBtZW50aW9uZWQgaW4gdGhlIE1haGFiaGFyYXRhLiBJbWFnZSBjcmVkaXQ6IFdpa2ltZWRpYSBRIFNvdXJjZTogUGcgMTE2OiBMaXZpbmcgQ3JhZnQgVHJhZGl0aW9ucyBvZiBJbmRpYTogMTF0aCBOQ0VSVA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following statements.\n\t1. Shawl weaving in Kashmir was introduced by Zain-ul-Abidin.\n\t2. Jamawar is a special type of shawl made in Kashmir.Test-2: GS Subject\n\t3. Kashmiri shahtoosh 'ring shawl' was made from the fleece of the wild Himalayan ibex.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGZhbWUgb2YgdGhlIEthc2htaXJpIEphbWF3YXIgc2hhd2wgY2FuIGJlIGdhdWdlZCBmcm9tIHRoZSBmYWN0IHRoYXQgdGhlIEVuZ2xpc2ggd29yZCAnc2hhd2wnIGlzIGRlcml2ZWQgZnJvbSB0aGUgUGVyc2lhbiAnc2hhbCctYSBsZW5ndGggb2Ygd292ZW4gd29vbGxlbiBmYWJyaWMuIFNoYXdsIHdlYXZpbmcgaW4gS2FzaG1pciB3YXMgaW50cm9kdWNlZCBieSB0aGUgcnVsZXIgWmFpbi11bC1BYmlkaW4gaW4gdGhlIGZpZnRlZW50aCBjZW50dXJ5IGJyaW5naW5nIGluIFR1cmtpc3RhbiB3ZWF2ZXJzIHRvIHRlYWNoIHRoZSB0d2lsbCB0YXBlc3RyeSB0ZWNobmlxdWUgdG8gbG9jYWwgd2VhdmVycy4gQXMgbWFueSBhcyBmaWZ0eSBjb2xvdXJzIHdlcmUgdXNlZCBvbiBvbmUgc2hhd2wuIFRoZSBjZWxlYnJhdGVkIEthc2htaXJpIHNoYWh0b29zaCAncmluZyBzaGF3bCcgbWFkZSBmcm9tIHRoZSBmbGVlY2Ugb2YgdGhlIHdpbGQgSGltYWxheWFuIGliZXggaXMgc28gZmluZSB0aGF0IGEgbWV0cmUgb2YgdGhpcyB3b29sbGVuIHNoYXdsIGNhbiBwYXNzIHRocm91Z2ggYSBtYW4ncyBzaWduZXQgcmluZy4gUHJvZHVjdGlvbiBhbmQgc2FsZSBpcyBiYW5uZWQgdG9kYXkgZm9yIGVjb2xvZ2ljYWwgcmVhc29ucyBhbmQgdG8gcHJldmVudCB0aGUgZXh0aW5jdGlvbiBvZiB0aGUgaWJleC4gV2VhdmluZyBpdCB3YXMgYSBmaW5lIGFydCwgd2VhcmluZyBpdCBub3cgYSBmb3JiaWRkZW4gbHV4dXJ5LiBJbWFnZTogSmFtYXdhciBTaGF3bCBRIFNvdXJjZTogQ2ggODogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements.\n\t1. Sujni is a form of quilted embroidery from Bihar.\n\t2. Punjab is famed for its traditional embroidery called Phulkari.\n\t3. Do-rukha embroidery is practiced in the Kutch region.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdGVtZW50IDE6ICBTdWpuaSwgZnJvbSBCaWhhciwgaXMgYSBmb3JtIG9mIHF1aWx0ZWQgZW1icm9pZGVyeSB3aXRoIG1haW5seSBuYXJyYXRpdmUgdGhlbWVzLiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFN0YXRlbWVudCAyOiAgUHVuamFiIGlzIGZhbWVkIGZvciBpdHMgdHJhZGl0aW9uYWwgZW1icm9pZGVyeSBjYWxsZWQgcGh1bGthcmktIGZsb3dlcmluZyB3b3JrLiBVc2luZyB0aHJlYWRzIGluIGJyaWxsaWFudCBjb2xvdXJzIGxpa2UgZmxhbWluZyBwaW5rcywgb3JhbmdlcywgbXVzdGFyZCB5ZWxsb3dzIGFuZCBjcmVhbXMsIHRoZSByZXZlcnNlIHNhdGluIHN0aXRjaCBpcyBkb25lIG9uIGEgYnJpY2stcmVkIGtoYWRpIGNsb3RoLiBBbiBhbGxvdmVyIGVtYnJvaWRlcmVkIHNoYXdsIChkdXBhdHRhKSBpcyBjYWxsZWQgYSBiYWdoLCBsaXRlcmFsbHkgcmVzZW1ibGluZyBhIGdhcmRlbiBvZiBmbG93ZXJzLiBTdGF0ZW1lbnQgMzogIFRoZXJlIGFyZSBzaGF3bHMgZnJvbSBLYXNobWlyIHRoYXQgYXJlIG1hZ2ljYWxseSB0d28tc2lkZWQgd2l0aCB0aGUgc2FtZSBkZXNpZ24gZW1icm9pZGVyZWQgaW4gZGlmZmVyZW50IGNvbG91cnMgb24gZWFjaCBzaWRlLiBUaGlzIGlzIGtub3duIGFzIGRvLXJ1a2hhLiBBIHNpbmdsZSBzaGF3bCBtYXkgdGFrZSBvdmVyIHR3byB5ZWFycyB0byBjb21wbGV0ZS4gUGlwbGkgaW4gT3Jpc3NhIGhhcyBpdHMgb3duIHVuaXF1ZSBmb3JtIG9mIGFwcGxpcXXDqS1ib2xkIHJlZCwgeWVsbG93IGFuZCBncmVlbiBkYW5jaW5nIGVsZXBoYW50cyBhbmQgcGFycm90cywgb3V0bGluZWQgd2l0aCB3aGl0ZSBvciBibGFjayBjaGFpbi1zdGl0Y2ggb24gZXF1YWxseSBjb2xvdXJmdWwgYmFzZSBmYWJyaWMuIEl0IHdhcyBkZXZlbG9wZWQgaW5pdGlhbGx5IHRvIG1ha2UgdGhlIHJhdGggcHJvY2Vzc2lvbiBoYW5naW5ncyBmb3IgdGhlIFB1cmkgVGVtcGxlLCBidXQgaXMgbm93IHVzZWQgZm9yIGdhcmRlbiB1bWJyZWxsYXMsIGN1c2hpb25zIGFuZCBmb3Igb3RoZXIgdXJiYW4gbmVlZHMuIFEgU291cmNlOiBDaCA4OiBMaXZpbmcgQ3JhZnQgVHJhZGl0aW9ucyBvZiBJbmRpYTogMTF0aCBOQ0VSVA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 13,
      "question" : "Dhamsa, dhol and chamak are associated with which of the following dance forms ofIndia?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWNjb21wYW5pZWQgYnkgdGhlIGh1Z2UgZGhhbXNhIGRydW1zIGFuZCB0d28gZW5lcmdldGljIGRob2wgcGxheWVycyB3aG8gcHJvdm9rZSBhbmQgZW5jb3VyYWdlIHRoZSBkYW5jZXJzLCB0aGUgQ2hoYXUgZGFuY2VyIG1ha2VzIGxpZ2h0bmluZyBib2R5IG1vdmVtZW50cyBrbm93biBhcyBjaGFtYWsuIENoaGF1IGRhbmNlIGlzIGEgdHJhZGl0aW9uIGZyb20gZWFzdGVybiBJbmRpYSB0aGF0IGVuYWN0cyBlcGlzb2RlcyBmcm9tIGVwaWNzIGluY2x1ZGluZyB0aGUgTWFoYWJoYXJhdGEgYW5kIFJhbWF5YW5hLCBsb2NhbCBmb2xrbG9yZSBhbmQgYWJzdHJhY3QgdGhlbWVzLiBJdHMgdGhyZWUgZGlzdGluY3Qgc3R5bGVzIGhhaWwgZnJvbSB0aGUgcmVnaW9ucyBvZiBTZXJhaWtlbGxhLCBQdXJ1bGlhIGFuZCBNYXl1cmJoYW5qLCB0aGUgZmlyc3QgdHdvIHVzaW5nIG1hc2tzLiBDaGhhdSBkYW5jZSBpcyBpbnRpbWF0ZWx5IGNvbm5lY3RlZCB0byByZWdpb25hbCBmZXN0aXZhbHMsIG5vdGFibHkgdGhlIHNwcmluZyBmZXN0aXZhbCBDaGFpdHJhIFBhcnZhLiBJdHMgb3JpZ2luIGlzIHRyYWNlYWJsZSB0byBpbmRpZ2Vub3VzIGZvcm1zIG9mIGRhbmNlIGFuZCBtYXJ0aWFsIHByYWN0aWNlcy4gSXRzIHZvY2FidWxhcnkgb2YgbW92ZW1lbnQgaW5jbHVkZXMgbW9jayBjb21iYXQgdGVjaG5pcXVlcywgc3R5bGl6ZWQgZ2FpdHMgb2YgYmlyZHMgYW5kIGFuaW1hbHMgYW5kIG1vdmVtZW50cyBtb2RlbGxlZCBvbiB0aGUgY2hvcmVzIG9mIHZpbGxhZ2UgaG91c2V3aXZlcy4gQ2hoYXUgaXMgdGF1Z2h0IHRvIG1hbGUgZGFuY2VycyBmcm9tIGZhbWlsaWVzIG9mIHRyYWRpdGlvbmFsIGFydGlzdHMgb3IgZnJvbSBsb2NhbCBjb21tdW5pdGllcy4gVGhlIGRhbmNlIGlzIHBlcmZvcm1lZCBhdCBuaWdodCBpbiBhbiBvcGVuIHNwYWNlIHRvIHRyYWRpdGlvbmFsIGFuZCBmb2xrIG1lbG9kaWVzLCBwbGF5ZWQgb24gdGhlIHJlZWQgcGlwZXMgbW9odXJpIGFuZCBzaGVobmFpLiBDaGhhdSBpcyBhIHN0eWxlIHBlcmZvcm1lZCBleGNsdXNpdmVseSBieSBtZW4gZnJvbSB0aGUgdHJpYmFsIGJlbHRzIG9mIEluZGlhIC0gaG9tZSB0byB0aGUgdHJpYmFsIGdyb3VwcyBvZiBCaHVseWEsIFNhbnRoYWxzLCBNdW5kYXMsIEhvcyBhbmQgT3Jhb25zLiBUaGUgbWFza3MgdGhleSB1c2UgdmFyeSBkZXBlbmRpbmcgb24gdGhlIHN0eWxlIG9mIENoaGF1IHByYWN0aXNlZCAtIFNlcmFpa2VsbGEgQ2hoYXUgb3IgUHVydWxpYSBDaGhhdS4gSW4gdGhlIHRoaXJkIGZvcm0gb2YgQ2hoYXUsIE1heXVyYmhhbmogQ2hoYXUsIG1hc2tzIGFyZSBub3Qgd29ybi4gUSBTb3VyY2U6IENoIDEwOiBMaXZpbmcgQ3JhZnQgVHJhZGl0aW9ucyBvZiBJbmRpYTogMTF0aCBOQ0VSVA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Rasleela",
        "option2" : "Dumhal",
        "option3" : "Bideshiya",
        "option4" : "Chhau"
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements.\n\t1. Uruli is a wide-mouthed cooking vessel made in Kerala, in which the lost wax process is used.\n\t2. Bidriware is a metal handicraft from Andhra Pradesh that was first developed during the BidarSultanate and Birar Sultanate.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdGVtZW50IDE6IEluIEtlcmFsYSB0byBtYWtlIHRoZSB1cnVsaSAod2lkZS1tb3V0aGVkIGNvb2tpbmcgdmVzc2VsLCB3aXRoIGZsYXQgb3IgY3VydmVkIHJpbXMpIHRoZSBsb3N0IHdheCBwcm9jZXNzIGlzIHVzZWQuIEEgZ2lhbnQgY2F1bGRyb24gY2FsbGVkIHZhcnB1LCB3aGljaCBpcyBtYWduaWZpY2VudCBpbiBmb3JtLCBpcyB1c2VkIGluIHRlbXBsZXMgZm9yIG1ha2luZyBwcmFzYWQgdG8gZmVlZCB0aG91c2FuZHMgb2YgZGV2b3RlZXMuIEtlcmFsYSBhbHNvIGhhcyBhIGdyZWF0IHRyYWRpdGlvbiBpbiBtYWtpbmcgbWV0YWwgdHVtYmxlcnMgZm9yIGRyaW5raW5nLCB3aGljaCByYW5nZSBpbiBzaXplIGFuZCBhcmUgdmVyeSBlbGVnYW50bHkgc2hhcGVkLiBTdGF0ZW1lbnQgMjogIEJpZHJpLCBhIHRlY2huaXF1ZSBuYW1lZCBhZnRlciBpdHMgcGxhY2Ugb2Ygb3JpZ2luLCBCaWRhciwgQW5kaHJhIFByYWRlc2gsIGlzIHRoZSBhcHBsaWNhdGlvbiBvZiBpbmxheSAobWFpbmx5IHNpbHZlcikgdG8gb2JqZWN0cyBjYXN0IGluIGEgcmVsYXRpdmVseSBzb2Z0IGFsbG95IG9mIHppbmMsIGNvcHBlciBhbmQgbGVhZC4gQWZ0ZXIgdGhlIGlubGF5IHdvcmsgaXMgY29tcGxldGVkLCB0aGUgZ3JvdW5kIGlzIHN0YWluZWQgYmxhY2sgdXNpbmcgY2hlbWljYWxzLCB0aHVzIGNyZWF0aW5nIGEgc3BsZW5kaWQgY29udHJhc3QgdG8gdGhlIHNpbHZlciBkZWNvcmF0aW9uLiBJdCB3YXMgZGV2ZWxvcGVkIGluIHRoZSAxNHRoIGNlbnR1cnkgQy5FLiBkdXJpbmcgdGhlIHJ1bGUgb2YgdGhlIEJhaG1hbmkgU3VsdGFucy4gVGhlIHRlcm0gImJpZHJpd2FyZSIgb3JpZ2luYXRlcyBmcm9tIHRoZSB0b3duc2hpcCBvZiBCaWRhciwgd2hpY2ggaXMgc3RpbGwgdGhlIGNoaWVmIGNlbnRlciBvZiBwcm9kdWN0aW9uLiBUaGUgbWV0YWwgdXNlZCBpcyB3aGl0ZSBicmFzcyB0aGF0IGlzIGJsYWNrZW5lZCBhbmQgaW5sYWlkIHdpdGggc2lsdmVyLiBUaGlzIG5hdGl2ZSBhcnQgZm9ybSBoYXMgb2J0YWluZWQgR2VvZ3JhcGhpY2FsIEluZGljYXRpb25zIChHSSkgcmVnaXN0cnkuICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgUSBTb3VyY2U6IENoIDQ6IExpdmluZyBDcmFmdCBUcmFkaXRpb25zIG9mIEluZGlhOiAxMXRoIE5DRVJU",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 15,
      "question" : "Papier-mâché art is practiced in which of the following states of India?\n\t1. Telangana\n\t2. Assam\n\t3. Jharkhand\n\t4. RajasthanSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUGFwaWVyLW3DomNow6kgaXMgdXNlZCB0byBjcmVhdGUgbW91bGRlZCBmb3JtcyBvZiBhIHZhcmlldHkgb2Ygb2JqZWN0cy4gSXQgaW52b2x2ZXMgdGhlIG9ybmFtZW50YXRpb24gb2Ygc21vb3RoZW5lZCBzdXJmYWNlcyBidWlsdCB1cCBvZiBwYXBlciBwdWxwIG9yIGxheWVycyBvZiBwYXBlci4gVGhlIG1vc3Qgc29waGlzdGljYXRlZCBmb3JtIG9mIHBhcGVyIGNyYWZ0IGFwcGVhcnMgdG8gYmUgcGFwaWVyLW3DomNow6kuIFRoZSB0cmFkaXRpb24gb2YgcGFwaWVyLW3DomNow6kgaW4gS2FzaG1pciBiZWdhbiBpbiB0aGUgZmlmdGVlbnRoIGNlbnR1cnkuIFdoaWxlIGluIHByaXNvbiwgaW4gdGhlIG1hZ25pZmljZW50IENlbnRyYWwgQXNpYW4gY2l0eSBvZiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFNhbWFya2FuZCwgYSB5b3VuZyBLYXNobWlyaSBwcmluY2Ugb2JzZXJ2ZWQgdGhlIGNyYWZ0IG9mIHVzaW5nIHBhcGVyIHB1bHAgYXMgdGhlIGJhc2UgZm9yIHBhaW50ZWQgb2JqZWN0cy4gVGhpcyBwcmluY2Ugc29vbiBiZWNhbWUgS2luZyBaYWluLXVsLSBBYmlkaW4gYW5kIGludml0ZWQgYWNjb21wbGlzaGVkIGFydGlzdHMgYW5kIGNyYWZ0c21lbiBmcm9tIENlbnRyYWwgQXNpYSB0byBoaXMgY291cnQgdG8gbWFrZSBwYXBpZXItbcOiY2jDqSBvYmplY3RzLiBUaGUgY3JhZnQgaXMgcHJhY3Rpc2VkIGluIGEgbnVtYmVyIG9mIFN0YXRlcywgbmFtZWx5LCBBbmRocmEgUHJhZGVzaCwgQmloYXIsIERlbGhpLCBKYW1tdSBhbmQgS2FzaG1pciwgS2VyYWxhLCBNYWRoeWEgUHJhZGVzaCwgT3Jpc3NhLCBSYWphc3RoYW4sIFRhbWlsIE5hZHUgYW5kIFdlc3QgQmVuZ2FsLiBWaXN1YWwgZGVwaWN0aW9uIGlzIGdpdmVuIGluIGFuIG9sZCBtYXAgb2YgSW5kaWEgZnJvbSB0aGUgTkNFUlQgYm9vazogUSBTb3VyY2U6IENoIDc6IExpdmluZyBDcmFmdCBUcmFkaXRpb25zIG9mIEluZGlhOiAxMXRoIE5DRVJU",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only",
        "option2" : "2, 3 and 4 only",
        "option3" : "1 and 2 only",
        "option4" : "4 only"
      }
    },
    {
      "index" : 16,
      "question" : "The Mahapuranas do NOT primarily deal with which of the following subjects?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIE1haGFwdXJhbmFzIGhhdmUgZml2ZSBzdWJqZWN0cy4gVGhlc2UgYXJlIDogKDEpIFNhcmdhLCB0aGUgb3JpZ2luYWwgY3JlYXRpb24gb2YgdGhlIHVuaXZlcnNlLCAoMikgUHJhdGlzYXJnYSwgdGhlIHBlcmlvZGljYWwgcHJvY2VzcyBvZiBkZXN0cnVjdGlvbiBhbmQgcmUtY3JlYXRpb24sICgzKSBNYW52YW50YXJhLCB0aGUgZGlmZmVyZW50IGVyYXMgb3IgY29zbWljIGN5Y2xlcywgKDQpIFN1cnlhIFZhbXNoYSBhbmQgQ2hhbmRyYSBWYW1zYSwgdGhlIGhpc3RvcmllcyBvZiB0aGUgc29sYXIgYW5kIGx1bmFyIGR5bmFzdGllcyBvZiBHb2RzIGFuZCBzYWdlcywgKDUpIFZhbXNoYW51Y2hhcml0YSwgdGhlIGdlbmVhbG9naWVzIG9mIGtpbmdzLiBBcm91bmQgdGhpcyBjb3JlIHNrZWxldG9uIG9mIHRoZSBmaXZlIHN1YmplY3RzIGFueSBQdXJhbmEgYWRkcyBvdGhlciBkaXZlcnNlIG1hdGVyaWFscyBsaWtlIG1hdHRlcnMgb2YgcmVsaWdpb3VzIGNvbmNlcm4sIGN1c3RvbXMsIGNlcmVtb25pZXMsIHNhY3JpZmljZXMsIGZlc3RpdmFscywgdGhlIGR1dGllcyBvZiB2YXJpb3VzIGNhc3RlcywgZGlmZmVyZW50IHR5cGVzIG9mIGRvbmF0aW9ucywgZGV0YWlscyBvZiB0aGUgY29uc3RydWN0aW9uIG9mIHRlbXBsZXMgYW5kIGltYWdlcywgYW5kIGRlc2NyaXB0aW9ucyBvZiBwbGFjZXMgb2YgcGlsZ3JpbWFnZS4gVGhlIFB1cmFuYXMgYXJlIHRoZSBtZWV0aW5nIHBvaW50IG9mIGRpdmVyc2UgcmVsaWdpb3VzIGFuZCBzb2NpYWwgYmVsaWVmcywgYXJlIGxpbmtlZCB3aXRoIHRoZSB2aXRhbCBzcGlyaXR1YWwgYW5kIHNvY2lhbCBuZWVkcyBhbmQgdXJnZXMgb2YgdGhlIHBlb3BsZSwgYW5kIGFyZSBhIHVuaXF1ZSBvdXRjb21lIG9mIHRoZSBldmVyLWNvbnRpbnVpbmcgc3ludGhlc2lzIGJhc2VkIG9uIGFuIHVuZGVyc3RhbmRpbmcgYmV0d2VlbiB2YXJpb3VzIGdyb3VwcyBvZiB2ZWRpYyBBcnlhbnMgYW5kIG5vbi1BcnlhbnMuIFEgU291cmNlOiBodHRwOi8vY2NydGluZGlhLmdvdi5pbi9saXRlcmFyeWFydHMucGhw",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Creation of the universe",
        "option2" : "Cosmic cycles",
        "option3" : "Histories of the solar and lunar dynasties of Gods and sages",
        "option4" : "Political ideals"
      }
    },
    {
      "index" : 18,
      "question" : "Khus grass, used by many communities traditionally, is beneficial in which of thefollowing ways?\n\t1. It has a thick root system which helps in checking soil erosion.\n\t2. Because of its cooling properties, it is used for making pads for desert coolers.\n\t3. Its dried stems can be used for thatching.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogS2h1cyBvciByYW1hY2hhbSBpbiBNYWxheWFsYW0gKFZldGl2ZXJpYSB6aXphbmlvZGVzKSBpcyB0aGUgYXJvbWF0aWMgcm9vdCBvZiBhIGRlbnNlbHkgdHVmdGVkIGdyYXNzLiBUaGUgZ3Jhc3MgaGFzIGEgdGhpY2sgcm9vdCBzeXN0ZW0gd2hpY2ggaGVscHMgaW4gY2hlY2tpbmcgc29pbCBlcm9zaW9uLiBJdCBpcyB0aHVzIGFuIGV4Y2VsbGVudCBzdGFiaWxpc2luZyBoZWRnZSBmb3Igc3RyZWFtIGJhbmtzLCB0ZXJyYWNlcyBhbmQgcmljZSBwYWRkaWVzLiBLaHVzIGdyYXNzIGdyb3dzIHdpbGQgaW4gbWFueSBzdGF0ZXMgYnV0IGlzIGN1bHRpdmF0ZWQgaW4gUmFqYXN0aGFuLCBVdHRhciBQcmFkZXNoLCBQdW5qYWIsIEtlcmFsYSwgS2FybmF0YWthLCBUYW1pbCBOYWR1IGFuZCBBbmRocmEgUHJhZGVzaC4gS2h1cyBpcyBrbm93biBmb3IgaXRzIGZyYWdyYW5jZSBhbmQgY29vbGluZyBwcm9wZXJ0aWVzLiBUaGUgcm9vdHMgYXJlIHVzZWQgZm9yIG1ha2luZyBtYXRzLCBiZWRzLCBhbmQgcGFkcyBmb3IgZGVzZXJ0IGNvb2xlcnMuIFRoZSBkcmllZCBzdGVtcyBhcmUgdXNlZCBmb3IgbWFraW5nIGJyb29tcywgZmFucywgaGF0cyBhbmQgZm9vdHdlYXIsIGFuZCBmb3IgdGhhdGNoaW5nLiBRIFNvdXJjZTogQ2ggNjogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQ=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements.\n\t1. Koftgari is the term for a type of silver and gold damascene work.\n\t2. Koftgari is produced exclusively in Rajasthan and Maharashtra.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogS29mdGdhcmkgaXMgdGhlIHRlcm0gZm9yIGEgdHlwZSBvZiBzaWx2ZXIgYW5kIGdvbGQgZGFtYXNjZW5lIHdvcmsgcHJvZHVjZWQgaW4gVGhpcnV2YW5hbnRoYXB1cmFtLCBLZXJhbGEsIEphaXB1ciwgUmFqYXN0aGFuLCBIeWRlcmFiYWQsIEFuZGhyYSBQcmFkZXNoIGFuZCBQdW5qYWIuIEluIG9yZGluYXJ5IGRhbWFzY2VuZSAodGFyaS0gbmlzaGFuKSwgYSB0ZWNobmlxdWUgdXNlZCBmcmVxdWVudGx5IHRvIGFkb3JuIHRoZSBibGFkZXMgb2Ygc3dvcmRzLCBhIGNoaXNlbGxlZCBncm9vdmUgaXMgZmlyc3QgbWFkZSBpbnRvIHdoaWNoIHByZWNpb3VzIG1ldGFsIHdpcmUgaXMgaGFtbWVyZWQuIFRoZSBrb2Z0Z2FyaSBwcm9jZXNzIGlzIHNpbXBsZXIgYW5kIGxlc3MgdGltZSBjb25zdW1pbmcsIGFuZCBhbGxvd3MgZm9yIG11Y2ggZnJlZXIgZGVjb3JhdGlvbi4gVGhlIGVudGlyZSBzdXJmYWNlIG9mIHRoZSBvYmplY3QgaXMgZmlyc3QgY2hpc2VsbGVkIGluIGF0IGxlYXN0IHR3byBkaWZmZXJlbnQgZGlyZWN0aW9ucyBzbyBhcyB0byByb3VnaGVuIGl0IGFuZCB0aGVuIHRoZSB3aXJlIChlaXRoZXIgc2lsdmVyIG9yIGdvbGQgb3IgYm90aCkgaXMgaGFtbWVyZWQgb250byBpdCBpbiBpbnRyaWNhdGUgcGF0dGVybnMuICdUcnVlJyBkYW1hc2NlbmVycyBsb29rZWQgZG93biBvbiB0aGlzIG1ldGhvZCwgYnV0IGl0IGlzIHNpbXBseSBhbiBhbHRlcm5hdGl2ZSBwcm9jZXNzLiBPbmNlIHRoZSBtYW51ZmFjdHVyZSBvZiBhcm1zIGFuZCBhcm1vdXIgaGFkIGNlYXNlZCwgY3JhZnRzbWVuIGJlZ2FuIHRvIGFwcGx5IHRoaXMgZGVjb3JhdGl2ZSB0ZWNobmlxdWUgdG8gdHJheXMsIGJveGVzIGFuZCBvdGhlciBvYmplY3RzLiBRIFNvdXJjZTogQ2ggNDogTGl2aW5nIENyYWZ0IFRyYWRpdGlvbnMgb2YgSW5kaWE6IDExdGggTkNFUlQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements about Bhakti literature.\n\t1. Allama Prabhu wrote secular poetry.\n\t2. Gyaneswar was a Marathi bhakti poet.\n\t3. Eknath wrote poetic narratives and devotional abhangas.\n\t4. Tukarram was a contemporary of Gyaneshwar who wrote bhakti prose in Gujarati.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIHBvd2VyIG9mIGFuY2llbnQgYmhha3RpIHBvZXRyeSBpbiBUYW1pbCBzZXQgaW4gbW90aW9uIHdoYXQgbWlnaHQgd2VsbCBiZSBjb25zaWRlcmVkIGEgcGFuLSBJbmRpYW4gZWZmbG9yZXNjZW5jZS4gQWZ0ZXIgVGFtaWwsIFBhbXBhJ3MgZ3JlYXQgY291cnQgZXBpY3Mgd2VyZSBjb21wb3NlZCBpbiBLYW5uYWRhIGluIHRoZSAxMHRoIGNlbnR1cnkuIERldm90aW9uYWwgbGl0ZXJhdHVyZSBpbiBLYW5uYWRhLCB0aGUgVmFjaGFuYXMgKHNheWluZ3MpIG9mIHRoZSB2YXJpb3VzIHNhaW50cyBvZiB0aGUgS3Jpc2huYSwgUmFtYSBhbmQgU2hpdmEgY3VsdHMsIGlzIHdlbGwga25vd24uIEJhc2F2YW5uYSB3YXMgYSBmYW1vdXMgS2FubmFkYSBwb2V0LCBhIFNoaXZhIGRldm90ZWUgYW5kIGEgZ3JlYXQgc29jaWFsIHJlZm9ybWVyLiBBbGxhbWEgUHJhYmh1IChLYW5uYWRhKSB3cm90ZSBncmVhdCBwb2V0cnkgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICB1bmRlciB0aGUgZ2FyYiBvZiByZWxpZ2lvbi4gQ2hyb25vbG9naWNhbGx5LCBNYXJhdGhpLCB0aGUgY2xvc2Ugc3VjY2Vzc29yIG9mIEthbm5hZGEsIGJlY2FtZSB0aGUgbmV4dCB2ZW51ZSBmb3IgYmhha3RpLiBHeWFuZXN3YXIgKDEyNzUgQS5ELikgaXMgdGhlIGZpcnN0IGFuZCBmb3JlbW9zdCBiaGFrdGkgcG9ldCBpbiBNYXJhdGhpLiBJbiBoaXMgdGVlbnMgKGhlIGRpZWQgYXQgdGhlIGFnZSBvZiAyMSkgaGUgYmVjYW1lIGZhbW91cyBmb3IgaGlzIHBvZXRpYyBjb250cmlidXRpb24gdG8gYmhha3RpIGZvciBWaXRoYWwgKFZpc2hudSkuIEVrbmF0aCB3cm90ZSBoaXMgc2hvcnQgcG9ldGljIG5hcnJhdGl2ZXMgYW5kIGRldm90aW9uYWwgYWJoYW5nYXMgKGEgbGl0ZXJhcnkgZm9ybSksIGFuZCBhZnRlciBoaW0gaXQgd2FzIFR1a2FycmFtICgxNjA4LTE2NDkgQS5ELikgd2hvc2Ugc29uZ3MgY2FzdCBhIHNwZWxsIGFsbCBvdmVyIE1haGFyYXN0aHJhLiBBbmQgdGhlbiBpdCBpcyBHdWphcmF0aSBpbiB0aGUgMTJ0aCBjZW50dXJ5LiBHdWphcmF0aSBwb2V0cyBsaWtlIE5hcnNpIE1laHRhIGFuZCBQcmVtYW5hbmRhIG9jY3VweSBhIHByb21pbmVudCBwbGFjZSBpbiB0aGUgZ2FsYXh5IG9mIHRoZSBWYWlzaG5hdmEgcG9ldHMuIEFmdGVyd2FyZHMsIHRoZSBzZXF1ZW50aWFsIG9yZGVyIGlzIGFzIGZvbGxvd3M6IEthc2htaXJpLCBCZW5nYWxpLCBBc3NhbWVzZSwgTWFuaXB1cmksIE9yaXlhLCBNYWl0aGlsaSwgQnJhaiwgQXZhZGhpICh0aGUgbGFzdCB0aHJlZSBsYW5ndWFnZXMgY29tZSB1bmRlciB0aGUgdW1icmVsbGEgbGFuZ3VhZ2UsIEhpbmRpKSBhbmQgb3RoZXIgbGFuZ3VhZ2VzIG9mIEluZGlhLiBDaGFuZGlkYXMsIGEgQmVuZ2FsaSBwb2V0LCBpcyBhY2NsYWltZWQgYXMgYSBncmVhdCBnZW5pdXMgZm9yIHRoZSBsdWNpZGl0eSBhbmQgc3dlZXRuZXNzIG9mIGhpcyBwb2Vtcy4gUSBTb3VyY2U6IGh0dHA6Ly9jY3J0aW5kaWEuZ292LmluL2xpdGVyYXJ5YXJ0cy5waHAjZWFybHlfZHJhdmlkaWFuX2xpdGVyYXR1cmU=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4",
        "option2" : "2, 3 and 4",
        "option3" : "1 only",
        "option4" : "2 and 3"
      }
    },
    {
      "index" : 21,
      "question" : "According to the Samkhya school of philosophy, which of the following is/are validmeans of knowledge?\n\t1. Pratyaksha\n\t2. AnumanaUPSCMATERIAL.ONLINETest-2: GS Subject\n\t3. Shabda\n\t4. Smriti\n\t5. UpamanaSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUzQgaXMgbm90IHJlY29nbml6ZWQgYnkgYW55IHNjaG9vbCBvZiBwaGlsb3NvcGh5IGFzIGEgdmFsaWQgbWVhbnMgb2Yga25vd2xlZGdlLiBTNSAodXBhbWFuYSBvciByZWFzb25pbmcgdmlhIGFuYWxvZ3kpIGlzIHJlY29nbml6ZWQgYnkgdGhlIE55YXlhIHNjaG9vbCBhcyBhIHZhbGlkIG1lYW5zIG9mIGtub3dsZWRnZS4gU2Fta2h5YSdzIGVwaXN0ZW1vbG9neSBhY2NlcHRzIHRocmVlIG9mIHNpeCBwcmFtYW5hcyAoJ3Byb29mcycpIGFzIHRoZSBvbmx5IHJlbGlhYmxlIG1lYW5zIG9mIGdhaW5pbmcga25vd2xlZGdlLCBhcyBkb2VzIHRoZSBZb2dhIHNjaG9vbC4gVGhlc2UgYXJlIHByYXR5YWvhuaNhICgncGVyY2VwdGlvbicpLCBhbnVtYeG5h2EgKCdpbmZlcmVuY2UnKSBhbmQgxZthYmRhIChhcHRhdmFjYW5hLCBtZWFuaW5nLCAnd29yZCBlc3RpbW9ueSBvZiByZWxpYWJsZSBzb3VyY2VzJykuIFRoaXMgc2Nob29sIGhhcyBiZWVuIGZhbW91cyBmb3IgdGhlaXIgc2NpZW50aWZpYyBzeXN0ZW0gb2YgaW5xdWlyeS4gVGhlIGZpbmFsIHBoaWxvc29waHkgYXJndWVkIHRoYXQgUHJha3JpdGkgYW5kIFB1cnVzaGEgYXJlIHRoZSBiYXNpcyBvZiByZWFsaXR5IGFuZCB0aGV5IGFyZSBhYnNvbHV0ZSBhbmQgaW5kZXBlbmRlbnQuIEFzICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgUHVydXNoYSBpcyBjbG9zZXIgdG8gdGhlIGF0dHJpYnV0ZXMgb2YgYSBtYWxlLCBpdCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbnNjaW91c25lc3MgYW5kIGNhbm5vdCBiZSBjaGFuZ2VkIG9yIGFsdGVyZWQuIENvbnZlcnNlbHksIHRoZSBQcmFrcml0aSBjb25zaXN0cyBvZiB0aHJlZSBtYWpvciBhdHRyaWJ1dGVzOiB0aG91Z2h0LCBtb3ZlbWVudCBhbmQgdHJhbnNmb3JtYXRpb24uIFRoZXNlIGF0dHJpYnV0ZXMgbWFrZSBpdCBjbG9zZXIgdG8gdGhlIHBoeXNpb2dub215IG9mIGEgd29tYW4uIFEgU291cmNlOiBDaCAxNDogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only",
        "option2" : "4 and 5 only",
        "option3" : "1, 2, 3 and 5 only",
        "option4" : "1, 2, 3, 4 and 5 only"
      }
    },
    {
      "index" : 22,
      "question" : "The philosophy of Direct Realism is aligned with which of the following schools ofIndian philosophy?\n\t1. Nyaya\n\t2. Madhyamaka\n\t3. Samkhya\n\t4. CarvakaSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW4gdGhlIHBoaWxvc29waHkgb2YgcGVyY2VwdGlvbiBhbmQgcGhpbG9zb3BoeSBvZiBtaW5kLCB0aGUgcXVlc3Rpb24gb2YgZGlyZWN0IG9yIG5hw692ZSByZWFsaXNtLCBhcyBvcHBvc2VkIHRvIGluZGlyZWN0IG9yIHJlcHJlc2VudGF0aW9uYWwgcmVhbGlzbSwgaXMgdGhlIGRlYmF0ZSBvdmVyIHRoZSBuYXR1cmUgb2YgY29uc2Npb3VzIGV4cGVyaWVuY2U7IG91dCBvZiB0aGUgbWV0YXBoeXNpY2FsIHF1ZXN0aW9uIG9mIHdoZXRoZXIgdGhlIHdvcmxkIHdlIHNlZSBhcm91bmQgdXMgaXMgdGhlIHJlYWwgd29ybGQgaXRzZWxmIG9yIG1lcmVseSBhbiBpbnRlcm5hbCBwZXJjZXB0dWFsIGNvcHkgb2YgdGhhdCB3b3JsZCBnZW5lcmF0ZWQgYnkgb3VyIGNvbnNjaW91cyBleHBlcmllbmNlLiBJbmRpcmVjdCByZWFsaXNtIGlzIGJyb2FkbHkgZXF1aXZhbGVudCB0byB0aGUgbWF0ZXJpYWxpc3QgdmlldyBvZiBwZXJjZXB0aW9uIHRoYXQgcG9zdHVsYXRlcyB3ZSBkbyBub3QgcGVyY2VpdmUgdGhlIGV4dGVybmFsIHdvcmxkIGFzIGl0IHJlYWxseSBpcywgYnV0IGtub3cgb25seSBvdXIgaWRlYXMgYW5kIGludGVycHJldGF0aW9ucyBvZiB0aGUgd2F5IHRoZSB3b3JsZCBpcy4gUmVwcmVzZW50YXRpb25hbGlzbSBpcyBvbmUgb2YgdGhlIGtleSBhc3N1bXB0aW9ucyBvZiBjb2duaXRpdmlzbSBpbiBwc3ljaG9sb2d5LiBUaGUgcmVwcmVzZW50YXRpb25hbCByZWFsaXN0IHdvdWxkIGRlbnkgdGhhdCAiZmlyc3QtaGFuZCBrbm93bGVkZ2UiIGlzIGEgY29oZXJlbnQgY29uY2VwdCwgc2luY2Uga25vd2xlZGdlIGlzIGFsd2F5cyB2aWEgc29tZSBtZWFucywgYW5kIGFyZ3VlIGluc3RlYWQgdGhhdCBvdXIgaWRlYXMgb2YgdGhlIHdvcmxkIGFyZSBpbnRlcnByZXRhdGlvbnMgb2Ygc2Vuc29yeSBpbnB1dCBkZXJpdmVkIGZyb20gYW4gZXh0ZXJuYWwgd29ybGQgdGhhdCBpcyByZWFsICh1bmxpa2UgdGhlIHN0YW5kcG9pbnQgb2YgaWRlYWxpc20sIHdoaWNoIGhvbGRzIHRoYXQgb25seSBpZGVhcyBhcmUgcmVhbCwgYnV0IHRoZXJlIGFyZSBubyBtaW5kLWluZGVwZW5kZW50IG9iamVjdHMpLiBOYWl5eWF5aWthIHNjaG9sYXJzIGFwcHJvYWNoZWQgcGhpbG9zb3BoeSBhcyBhIGZvcm0gb2YgZGlyZWN0IHJlYWxpc20sIHN0YXRpbmcgdGhhdCBhbnl0aGluZyB0aGF0IHJlYWxseSBleGlzdHMgaXMgaW4gcHJpbmNpcGxlIGh1bWFubHkga25vd2FibGUuIFNpbWlsYXJseSwgQ2FydmFrYSBzY2hvb2wgb2YgcGhpbG9zb3BoeSBvbmx5IGJlbGlldmVzIGluIGRpcmVjdCBwZXJjZXB0aW9uIGFzIHRydWUgbWVhbnMgb2Yga25vd2xlZGdlIGFuZCB0aGVyZWZvcmUgaXMgY2xvc2UgdG8gZGlyZWN0IHJlYWxpc20uIEFzIGFnYWluc3QgdGhlc2UgdHdvIHNjaG9vbHMsIFNhbWtoeWEgYW5kIE1hZGh5YW1ha2Egb3Bwb3NlIGRpcmVjdCByZWFsaXNtIGFuZCBnaXZlICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgc29waGlzdGljYXRlZCBtZXRhcGh5c2ljYWwgYW5zd2VycyBhcyB0byB0aGUgdHJ1ZSBuYXR1cmUgb2YgcmVhbGl0eSB0aGF0IGxpZXMgYmV5b25kIG91ciBkaXJlY3QgcGVyY2VwdGlvbiBvciBleHBlcmllbmNlLiBNYWRoeWFtYWthIHNheXMgdGhhdCB3ZSBjYW5ub3Qga25vdyB1bHRpbWF0ZSByZWFsaXR5IGJ5IGNvbnZlbnRpb25hbCBtZXRob2RzIHN1Y2ggYXMgcmVhc29uaW5nIG9yIHBlcmNlcHRpb24uIFEgU291cmNlOiBBUjogQ2ggMTQ6IEluZGlhbiBBcnQgYW5kIEN1bHR1cmU6IE5pdGluIFNpbmdoYW5pYQ==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2, 3 and 4 only",
        "option2" : "1 and 4 only",
        "option3" : "1 and 2 only",
        "option4" : "1 only"
      }
    },
    {
      "index" : 23,
      "question" : "According to the Vaisheshika school of philosophy\n\t1. atoms and molecules combined to make matter, which is the basis for everything that can bephysically touched or seen.\n\t2. the law of Karma does not exist.\n\t3. knowledge and liberation were achievable by a complete understanding of the world ofexperience.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIFZhaXNoZXNoaWthIHNjaG9vbCBpcyBrbm93biBmb3IgaXRzIGluc2lnaHRzIGluIG5hdHVyYWxpc20uIEl0IGlzIGEgZm9ybSBvZiBhdG9taXNtIGluIG5hdHVyYWwgcGhpbG9zb3BoeS4gSXQgcG9zdHVsYXRlZCB0aGF0IGFsbCBvYmplY3RzIGluIHRoZSBwaHlzaWNhbCB1bml2ZXJzZSBhcmUgcmVkdWNpYmxlIHRvIHBhcmFtYeG5h3UgKGF0b21zKSwgYW5kIG9uZSdzIGV4cGVyaWVuY2VzIGFyZSBkZXJpdmVkIGZyb20gdGhlIGludGVycGxheSBvZiBzdWJzdGFuY2UgKGEgZnVuY3Rpb24gb2YgYXRvbXMsIHRoZWlyIG51bWJlciBhbmQgdGhlaXIgc3BhdGlhbCBhcnJhbmdlbWVudHMpLCBxdWFsaXR5LCBhY3Rpdml0eSwgY29tbW9ubmVzcywgcGFydGljdWxhcml0eSBhbmQgaW5oZXJlbmNlLiBFdmVyeXRoaW5nIHdhcyBjb21wb3NlZCBvZiBhdG9tcywgcXVhbGl0aWVzIGVtZXJnZWQgZnJvbSBhZ2dyZWdhdGVzIG9mIGF0b21zLCBidXQgdGhlIGFnZ3JlZ2F0aW9uIGFuZCBuYXR1cmUgb2YgdGhlc2UgYXRvbXMgd2FzIHByZWRldGVybWluZWQgYnkgY29zbWljIGZvcmNlcy4gQWppdmlrYSBtZXRhcGh5c2ljcyBpbmNsdWRlZCBhIHRoZW9yeSBvZiBhdG9tcyB3aGljaCB3YXMgbGF0ZXIgYWRhcHRlZCBpbiB0aGUgVmFpxZtl4bmjaWthIHNjaG9vbC4gQWNjb3JkaW5nIHRvIHRoZSBWYWnFm2XhuaNpa2Egc2Nob29sLCBrbm93bGVkZ2UgYW5kIGxpYmVyYXRpb24gd2VyZSBhY2hpZXZhYmxlIGJ5IGEgY29tcGxldGUgdW5kZXJzdGFuZGluZyBvZiB0aGUgd29ybGQgb2YgZXhwZXJpZW5jZS4gSXQgYWxzbyBiZWxpZXZlcyBpbiB0aGUgbGF3cyBvZiBrYXJtYSBndWlkaW5nIHRoaXMgdW5pdmVyc2UsIGkuZS4gd2UgYXJlIHJld2FyZGVkIG9yIHB1bmlzaGVkIGFjY29yZGluZyB0byBvdXIgYWN0aW9ucy4gQy4gVmFpxZtl4bmjaWthIGRhcnNoYW5hIHdhcyBmb3VuZGVkIGJ5IEth4bmHYWRhIEthc2h5YXBhIGFyb3VuZCB0aGUgNnRoIHRvIDJuZCBjZW50dXJ5IEIgUSBTb3VyY2U6IEFSOiBDaCAxNDogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements.\n\t1. The first cinema house in India was setup in Bombay.\n\t2. The first indigenous Indian silent film was Raja Harishchandra.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRGFkYXNhaGViIFBoYWxrZSB3aG8gcHJvZHVjZWQgdGhlIGZpbG0gdGl0bGVkIFJhamEgSGFyaXNoY2hhbmRyYSBpbiAxOTEzIG1hZGUgdGhlIGZpcnN0IGluZGlnZW5vdXMgSW5kaWFuIHNpbGVudCBmaWxtLiBIZSBpcyBrbm93biBhcyB0aGUgZmF0aGVyIG9mIEluZGlhbiBjaW5lbWEgYW5kIGlzIGNyZWRpdGVkIHdpdGggZmlsbXMgbGlrZSBNb2hpbmkgQmhhc21hc3VyIGFuZCBTYXR5YXZhbiBTYXZpdHJpLiBIZSBpcyBhbHNvIGNyZWRpdGVkIGZvciBtYWtpbmcgdGhlIGZpcnN0IGJveCBvZmZpY2UgaGl0IHRpdGxlZCBMYW5rYSBEYWhhbiBpbiAxOTE3LiBUaGUgbmVlZCBmb3IgY2luZW1hIGhvdXNlIGluIGEgc2xvd2x5IGdyb3dpbmcgbWFya2V0IHdhcyBmdWxmaWxsZWQgYnkgTWFqb3IgV2Fyd2ljaywgd2hvIGVzdGFibGlzaGVkIHRoZSBmaXJzdCBjaW5lbWEgaG91c2UgaW4gTWFkcmFzIChub3cgQ2hlbm5haSkgaW4gMTkwMC4gTGF0ZXIgYSB3ZWFsdGh5IEluZGlhbiBidXNpbmVzc21hbiwgSmFtc2hlZGplZSBNYWRhbiBlc3RhYmxpc2hlZCB0aGUgRWxwaGluc3RvbmUgUGljdHVyZSBIb3VzZSBpbiBDYWxjdXR0YSAobm93IEtvbGthdGEpIGluIDE5MDcuIExvb2tpbmcgYXQgdGhlIHByb2ZpdHMgaW4gdGhlIGJ1ZGRpbmcgSW5kaWFuIG1hcmtldCwgVW5pdmVyc2FsIFN0dWRpb3MgZXN0YWJsaXNoZWQgdGhlIGZpcnN0IEhvbGx5d29vZCBiYXNlZCBhZ2VuY3kgaW4gSW5kaWEgaW4gMTkxNi4gUmVhZCBtb3JlIGRldGFpbHMgYXQgUSBTb3VyY2UuIFEgU291cmNlOiBDaCAxNTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 25,
      "question" : "In the classical Sanskrit tradition, plays were categorised into ten types. Which of thefollowing is NOT one of them?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTXVyY2hhbmEgaXMgYSBtZWxvZGljIG1vZGUgcmVsYXRlZCB0byBtdXNpYyBpbiB0aGUgSW5kaWFuIHRyYWRpdGlvbiwgc28gRCBpcyB0aGUgYW5zd2VyLiBUaGVhdHJlIGluIEluZGlhIGJlZ2FuIGFzIGEgbmFycmF0aXZlIGFydCBmb3JtLCB3aGljaCBlbmNvbXBhc3NlZCBhIGNvbmNvY3Rpb24gb2YgbXVzaWMsIGRhbmNlIGFuZCBhY3RpbmcuIFJlY2l0YXRpb24sIGRhbmNlIGFuZCBtdXNpYyB3ZXJlIGludGVncmFsIHBhcnRzIG9mIHRoZWF0cmUuIFRoZSBTYW5za3JpdCB3b3JkICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgJ25hdGFrYScgd2FzIGRlcml2ZWQgZnJvbSB0aGUgcm9vdCB3b3JkICduYXRhJyB3aGljaCBhY3R1YWxseSBtZWFudCBhIGRhbmNlci4gUnVwYWthLCBEcmlzaHlha3Z5YSBhbmQgUHJla3Nha2F2eWEgd2VyZSBvdGhlcnMgYWxzbyB1c2VkIHRvIGRlc2NyaWJlIGRyYW1hLiBJbiB0aGUgY2xhc3NpY2FsIFNhbnNrcml0IHRyYWRpdGlvbiwgcGxheXMgd2VyZSBjYXRlZ29yaXNlZCBpbnRvIHRlbiB0eXBlcyAtIG5hbWVseSBBbmthLCBCaGFuYSwgRGltYSwgSXRoYW1ncmEsIE5hdGFrYSwgUHJhaGFzYW5hLCBQcmFrYXJuYSwgU3Zha2FybmEsIFZpdGhpIGFuZCBWeWF5b2cuIE5hdHlhIFNoYXN0cmEgZGVzY3JpYmVzIG9ubHkgdHdvIG9mIHRoZXNlIC0gTmF0YWthIGFuZCBQcmFrYXJuYS4gVGhlIFNhbnNrcml0IHdvcmQgJ25hdGFrYScgd2FzIGRlcml2ZWQgZnJvbSB0aGUgcm9vdCB3b3JkICduYXRhJyB3aGljaCBhY3R1YWxseSBtZWFudCBhIGRhbmNlci4gU2FyaXB1dHJhcHJha2FyYW5hIGJ5IEFzaHZhZ2hvc2gsIGFuIGVtaW5lbnQgcGhpbG9zb3BoZXIsIGlzIGNvbnNpZGVyZWQgdGhlIGZpcnN0IGV4YW1wbGUgb2YgY2xhc3NpY2FsIFNhbnNrcml0IGRyYW1hLiBSdXBha2EsIERyaXNoeWFrdnlhIGFuZCBQcmVrc2FrYXZ5YSB3ZXJlIG90aGVycyBhbHNvIHVzZWQgdG8gZGVzY3JpYmUgZHJhbWEuIEluIGFuY2llbnQgSW5kaWEsIHBsYXlzIHdlcmUgZ2VuZXJhbGx5IG9mIHR3byB0eXBlczogTG9rYWRoYXJtaTogVGhlc2Ugd2VyZSByZWFsaXN0aWMgZGVwaWN0aW9ucyBvZiBkYWlseSBsaWZlLiBOYXR5YWRoYXJtaTogVGhlc2Ugd2VyZSBjb252ZW50aW9uYWwgcGxheXMgd2l0aCBhIG1vcmUgc3R5bGlzZWQgbmFycmF0aW9uIGFuZCBvdmVydCBzeW1ib2xpc20uIFEgU291cmNlOiBDaCBvbiBEYW5jZTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ithamgra",
        "option2" : "Vithi",
        "option3" : "Prakarna",
        "option4" : "Murchana"
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements.\n\t1. The Geneva Convention (1949) contains certain provisions that specifically forbid intentional orgratuitous damage to undefended cultural heritage by invading or occupying forces.\n\t2. Hague Convention for the Protection of Cultural Property in the Event of Armed Conflict andInternational Law was adopted under the auspices of UNESCO and helps in the protection ofUNESCO World Heritage Sites.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdGVtZW50IDE6ICBUaGUgR2VuZXZhIENvbnZlbnRpb24gKDE5NDkpIGNvbnRhaW5zIGNlcnRhaW4gcHJvdmlzaW9ucyB0aGF0IHNwZWNpZmljYWxseSBmb3JiaWQgaW50ZW50aW9uYWwgb3IgZ3JhdHVpdG91cyBkYW1hZ2UgdG8gdW5kZWZlbmRlZCBjdWx0dXJhbCBoZXJpdGFnZSBieSBpbnZhZGluZyBvciBvY2N1cHlpbmcgZm9yY2VzLiBJdCBwcm9oaWJpdHMgUGlsbGFnZTogU3RhdGUgUGFydGllcyBtdXN0IGFjdCB0byBwcmV2ZW50IG9yLCBpZiBpdCBoYXMgY29tbWVuY2VkLCB0byBzdG9wIGluZGl2aWR1YWwgcGlsbGFnZSwgYW5kIG1heSBub3QgY29uZHVjdCBvciBhdXRob3JpemUgb3JnYW5pc2VkIHBpbGxhZ2UuIEFydGljbGUgNTMgY2xlYXJseSBmb3JiaWRzIHRoZSBkZXN0cnVjdGlvbiBvZiBhbGwgcHJvcGVydHkgKHJlYWwgb3IgcGVyc29uYWwpLCB3aGV0aGVyIHByaXZhdGUgb3IgU3RhdGUsIHJlbGlnaW91cyBvciBvdGhlci4gSXQgaXMgc3VwcGxlbWVudGVkIGJ5IHR3byBmdXJ0aGVyIFByb3RvY29scyAoMTk3Nykgd2hpY2ggY29udGFpbiBpbXBvcnRhbnQgcHJvdmlzaW9ucyByZWxhdGluZyBzcGVjaWZpY2FsbHkgdG8gcHJvdGVjdGlvbiBvZiBjdWx0dXJhbCBwcm9wZXJ0eS4gVGhleTogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBwcm9oaWJpdCBhdHRhY2tzIGFnYWluc3QgY3VsdHVyYWwgcHJvcGVydHkuIHByb2hpYml0IHRoZSB1c2Ugb2YgY3VsdHVyYWwgcHJvcGVydHkgaW4gc3VwcG9ydCBvZiB0aGUgbWlsaXRhcnkgZWZmb3J0LiBwcm9oaWJpdCB0byBtYWtlIGN1bHR1cmFsIHByb3BlcnR5IHRoZSBvYmplY3Qgb2YgcmVwcmlzYWwgd2l0aG91dCBleGNlcHRpb24gZm9yIG1pbGl0YXJ5IG5lY2Vzc2l0eS4gU3RhdGVtZW50IDI6IEl0IHdhcyBhZG9wdGVkIGluIDE5NTQgdW5kZXIgdGhlIGF1c3BpY2VzIG9mIFVORVNDTy4gTm93IHdpZGVseSByZWZlcnJlZCBhcyB0aGUgMTk1NCBIYWd1ZSBDb252ZW50aW9uLCBpcyB0aGUgZmlyc3QgYW5kIHRoZSBtb3N0IGNvbXByZWhlbnNpdmUgbXVsdGlsYXRlcmFsIHRyZWF0eSBkZWRpY2F0ZWQgZXhjbHVzaXZlbHkgdG8gdGhlIHByb3RlY3Rpb24gb2YgY3VsdHVyYWwgaGVyaXRhZ2UgaW4gdGltZXMgb2YgcGVhY2UgYXMgd2VsbCBhcyBkdXJpbmcgYW4gYXJtZWQgY29uZmxpY3QuIFRoZSAxOTU0IEhhZ3VlIENvbnZlbnRpb24gYWltcyB0byBwcm90ZWN0IGN1bHR1cmFsIHByb3BlcnR5LCBzdWNoIGFzIG1vbnVtZW50cyBvZiBhcmNoaXRlY3R1cmUsIGFydCBvciBoaXN0b3J5LCBhcmNoYWVvbG9naWNhbCBzaXRlcywgd29ya3Mgb2YgYXJ0LCBtYW51c2NyaXB0cywgYm9va3MgYW5kIG90aGVyIG9iamVjdHMgb2YgYXJ0aXN0aWMsIGhpc3RvcmljYWwgb3IgYXJjaGFlb2xvZ2ljYWwgaW50ZXJlc3QsIGFzIHdlbGwgYXMgc2NpZW50aWZpYyBjb2xsZWN0aW9ucyBvZiBhbnkga2luZCByZWdhcmRsZXNzIG9mIHRoZWlyIG9yaWdpbiBvciBvd25lcnNoaXAuIEl0IGFsc28gYWltcyBhdDogUmVnaXN0ZXJpbmcgY3VsdHVyYWwgcHJvcGVydHkgb2YgdmVyeSBoaWdoIGltcG9ydGFuY2Ugb24gdGhlIEludGVybmF0aW9uYWwgUmVnaXN0ZXIgb2YgQ3VsdHVyYWwgUHJvcGVydHkgdW5kZXIgU3BlY2lhbCBQcm90ZWN0aW9uIGluIG9yZGVyIHRvIG9idGFpbiBzcGVjaWFsIHByb3RlY3Rpb24gZm9yIHN1Y2ggcHJvcGVydHk7IE1hcmtpbmcgY2VydGFpbiBpbXBvcnRhbnQgYnVpbGRpbmdzIGFuZCBtb251bWVudHMgd2l0aCBhIGRpc3RpbmN0aXZlIGVtYmxlbSBvZiB0aGUgQ29udmVudGlvbjsgUHJvdmlkaW5nIGEgcGxhY2UgZm9yIGV2ZW50dWFsIHJlZnVnZSB0byBzaGVsdGVyIG1vdmFibGUgY3VsdHVyYWwgcHJvcGVydHk7IEVzdGFibGlzaGluZyBzcGVjaWFsIHVuaXRzIHdpdGhpbiB0aGUgbWlsaXRhcnkgZm9yY2VzIHJlc3BvbnNpYmxlIGZvciB0aGUgcHJvdGVjdGlvbiBvZiBjdWx0dXJhbCBwcm9wZXJ0eTsgUSBTb3VyY2U6IEFSOiBDaCA0OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWEgaHR0cHM6Ly93d3cuaGVyaXRhZ2Vmb3JwZWFjZS5vcmcvaGVyaXRhZ2UtZm9yLXBlYWNlL2xlZ2FsLWZyYW1ld29yay9nZW5ldmEtY29udmVudGlvbi1hZGRpdGkgb25hbC1wcm90b2NvbHMtaS1hbmQtaWkvIGh0dHBzOi8vZW4udW5lc2NvLm9yZy9wcm90ZWN0aW5nLWhlcml0YWdlL2NvbnZlbnRpb24tYW5kLXByb3RvY29scy8xOTU0LWNvbnZlbnRpb24=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 27,
      "question" : "Under the Group of Monuments at Mahabalipuram, which of the following structuresare recognized as UNESCO World Heritage?\n\t1. Pancha Ratha\n\t2. Shore Temple\n\t3. Arjuna's Penance stone reliefSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogR3JvdXAgb2YgTW9udW1lbnRzIGF0IE1haGFiYWxpcHVyYW0gKFBhbmNoYSBSYXRoYSwgU2hvcmUgVGVtcGxlLCBBcmp1bmEncyBQZW5hbmNlIG9yIERlc2NlbnQgb2YgdGhlIEdhbmdlcywgQ2F2ZXMgVGVtcGxlcywgZXRjKSAoVGFtaWwgTmFkdSkgd2FzIHJlY29nbml6ZWQgYXMgYSBXb3JsZCBIZXJpdGFnZSBTaXRlIGluIDE5ODQuIERlc2NlbnQgb2YgdGhlIEdhbmdlcyBpcyBhIG1vbnVtZW50IGF0IE1hbWFsbGFwdXJhbSwgb24gdGhlIENvcm9tYW5kZWwgQ29hc3Qgb2YgdGhlIEJheSBvZiBCZW5nYWwsIGluIHRoZSBDaGVuZ2FscGF0dHUgZGlzdHJpY3Qgb2YgdGhlIHN0YXRlIG9mIFRhbWlsIE5hZHUsIEluZGlhLiBNZWFzdXJpbmcgOTYgYnkgNDMgZmVldCwgaXQgaXMgYSBnaWFudCBvcGVuLWFpciByb2NrIHJlbGllZiBjYXJ2ZWQgb24gdHdvIG1vbm9saXRoaWMgcm9jayBib3VsZGVycy4gVGhlIGxlZ2VuZCBkZXBpY3RlZCBpbiB0aGUgcmVsaWVmIGlzIHRoZSBzdG9yeSBvZiB0aGUgZGVzY2VudCBvZiB0aGUgc2FjcmVkIHJpdmVyIEdhbmdlcyB0byBlYXJ0aCBmcm9tIHRoZSBoZWF2ZW5zIGxlZCBieSBCaGFnaXJhdGhhLiBUaGUgd2F0ZXJzIG9mIHRoZSBHYW5nZXMgYXJlIGJlbGlldmVkIHRvIHBvc3Nlc3Mgc3VwZXJuYXR1cmFsIHBvd2Vycy4gVGhlIGRlc2NlbnQgb2YgdGhlIEdhbmdlcyBhbmQgQXJqdW5hJ3MgUGVuYW5jZSBhcmUgcG9ydHJheWVkIGluIHN0b25lIGF0IHRoZSBQYWxsYXZhIGhlcml0YWdlIHNpdGUuIFRoZSByZWxpZWYgaXMgbW9yZSBvZiBhIGNhbnZhcyBvZiBJbmRpYW4gcm9jayBjdXQgc2N1bHB0dXJlIGF0IGl0cyBiZXN0IG5vdCBzZWVuIGFueXdoZXJlIGluIEluZGlhLiBJdCBpcyBvbmUgb2YgdGhlIEdyb3VwIG9mIE1vbnVtZW50cyBhdCBNYW1hbGxhcHVyYW0gdGhhdCB3ZXJlIGRlc2lnbmF0ZWQgYXMgYSBVTkVTQ08gV29ybGQgSGVyaXRhZ2UgU2l0ZSBzaW5jZSAxOTg0LiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFEgU291cmNlOiBDaCA0OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only",
        "option2" : "1 and 2 only",
        "option3" : "1, 2 and 3",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following natural sites form part of the heritage site of Western Ghats?\n\t1. Talakaveri\n\t2. Kudremukh\n\t3. Sahyadri\n\t4. PeriyarSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2VzdGVybiBHaGF0cyB3YXMgcmVjb2duaXplZCBhcyBhIFdvcmxkIEhlcml0YWdlIFNpdGUgaW4gMjAxMjogc3ViLWNsdXN0ZXJzIGluY2x1ZGUgQWdhc3RoeWFtYWxhaSwgUGVyaXlhciwgQW5hbWFsYWksIE5pbGdpcmksIFRhbGFrYXZlcmksIEt1ZHJlbXVraCBhbmQgU2FoeWFkcmkuIE90aGVyIG5hdHVyYWwvbWl4ZWQgc2l0ZXMgYXJlOiBNYW5hcyBXaWxkbGlmZSBTYW5jdHVhcnkgKEFzc2FtKSwgMTk4NSBLYXppcmFuZ2EgTmF0aW9uYWwgUGFyayAoQXNzYW0pLCAxOTg1IEtlb2xhZGVvIE5hdGlvbmFsIFBhcmssIEJoYXJhdHB1ciAoUmFqYXN0aGFuKSwgMTk4NSBTdW5kYXJiYW4gTmF0aW9uYWwgUGFyayAoV2VzdCBCZW5nYWwpLCAxOTg3IE5hbmRhIERldmkgTmF0aW9uYWwgUGFyayAoMTk4OCkgYW5kIFZhbGxleSBvZiBGbG93ZXJzIChVdHRhcmFraGFuZCksIDIwMDUgR3JlYXQgSGltYWxheWFuIE5hdGlvbmFsIFBhcmsgKEhpbWFjaGFsIFByYWRlc2gpLCAyMDE0IEtoYW5nY2hlbmR6b25nYSBOYXRpb25hbCBQYXJrIChTaWtraW0pICgyMDE2KSBRIFNvdXJjZTogQ2ggNDogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "4 only",
        "option2" : "2 and 4 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option3" : "1 and 3 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements about the history of music in the Indiansubcontinent.\n\t1. All the seven notes of the raga Kharaharapriya can be found in the descending order in theSama Veda.\n\t2. Gandharva Veda, related with music, is an upaveda of the Sama Veda.\n\t3. Aitareya Aranyaka discusses musical instruments.\n\t4. The Jaimini Brahmana discusses both dance and music.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwyOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2UgZmluZCB0aGUgbGl0ZXJhcnkgdHJhY2VzIG9mIG11c2ljIGZvciB0aGUgZmlyc3QgdGltZSB0d28gdGhvdXNhbmQgeWVhcnMgYWdvIGluIHRoZSBWZWRpYyB0aW1lcy4gQWxsIHRoZSBzZXZlbiBub3RlcyBvZiB0aGUgcmFnYSBLaGFyYWhhcmFwcml5YSBjYW4gYmUgZm91bmQgaW4gdGhlIGRlc2NlbmRpbmcgb3JkZXIgaW4gdGhlIFNhbWEgVmVkYS4gVGhlIHNjaWVuY2Ugb2YgbXVzaWMgY2FsbGVkIHRoZSBHYW5kaGFydmEgVmVkYSBpcyBhbiBVcGF2ZWRhIG9mIHRoZSBTYW1hIFZlZGEuIFRoZSBwYXJ0cyBvZiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIHRoZSBpbnN0cnVtZW50IFZlZW5hIGFyZSBtZW50aW9uZWQgaW4gQWl0YXJleWEgQXJhbnlha2EuIFRoZSBKYWltaW5pIEJyYWhtYW5hIHNwZWFrcyBjb2xsZWN0aXZlbHkgb2YgZGFuY2UgYW5kIG11c2ljLiBUaGUgS2F1c2l0YWtpIEJyYWhtYW5hIHB1dHMgZGFuY2UsIHZvY2FsIGFuZCBpbnN0cnVtZW50YWwgbXVzaWMgdG9nZXRoZXIgYXMgYW4gYXJ0LiBNdXNpY29sb2dpc3RzIHB1cnBvcnQgdGhlb3JpZXMgYWJvdXQgdGhlIHdvcmQgT20gYmVpbmcgdGhlIHNvdXJjZSBvZiBhbGwgcmFnYXMgYW5kIG5vdGVzLiBQYW5pbmkgaW4gNTAwIEJDRSBtYWRlIHRoZSBmaXJzdCBwcm9wZXIgcmVmZXJlbmNlIHRvIHRoZSBhcnQgb2YgbWFraW5nIG11c2ljIGJ1dCB0aGUgZmlyc3QgcmVmZXJlbmNlIHRvIG11c2ljYWwgdGhlb3J5IHdhcyBkaXNjdXNzZWQgaW4gQmhhcmF0YSdzIE5hdHlhc2hhc3RyYSB3cml0dGVuIGFuZCBjb21waWxlZCBELiBiZXR3ZWVuIDIwMCBCQyBhbmQgMjAwIEEgUSBTb3VyY2U6IENoIDU6IEluZGlhbiBBcnQgYW5kIEN1bHR1cmU6IE5pdGluIFNpbmdoYW5pYQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 and 4 only",
        "option3" : "1, 2 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following about Sangeet Ratnakara, a seminal text on music.\n\t1. It was written by Matanga.\n\t2. It discusses both North Indian and Dravidian styles of music.\n\t3. It claimed that there is only one fundamental raga.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2FyYW5nYWRldmEsIGEgMTN0aCBjZW50dXJ5IG11c2ljb2xvZ2lzdCB3aG8gd3JvdGUgdGhlIGNsYXNzaWMgdGV4dCBvbiBtdXNpYywgdGhlIFNhbmdlZXQgUmF0bmFrYXJhLCBzZWNvbmRlZCB0aGlzIHZpZXcuIFRoZSBTYW5nZWV0IFJhdG5ha2FyYSBkZWZpbmVkIGFib3V0IDI2NCByYWdhcyBpbmNsdWRpbmcgc29tZSBmcm9tIHRoZSBOb3J0aCBJbmRpYW4gYW5kIHRoZSBEcmF2aWRpYW4gcmVwZXJ0b2lyZXMuIEl0cyBncmVhdGVzdCBjb250cmlidXRpb24gd2FzIHRvIGlkZW50aWZ5IGFuZCBkZXNjcmliZSB0aGUgdmFyaW91cyAnbWljcm90b25lcycgYW5kIGNsYXNzaWZ5IHRoZW0gaW50byBkaWZmZXJlbnQgY2F0ZWdvcmllcy4gTGF0ZXIsIHNvbWUgbWVkaWV2YWwgdGV4dHMgb24gbXVzaWNvbG9neSBmb2N1c2VkIG9uIHBhcnRpY3VsYXIgdGhlbWVzLCBmb3IgZXhhbXBsZSwgQnJpaGFkZGVzaGkgd3JpdHRlbiBpbiB0aGUgOXRoIGNlbnR1cnkgYnkgTWF0YW5nYSBmb2N1c2VkIG9uIHRoZSBkZWZpbml0aW9uIG9mIHRoZSB3b3JkICdyYWdhJy4gU2ltaWxhcmx5LCB0aGUgMTF0aCBjZW50dXJ5IHRleHQsIFNhbmdlZXRhIE1ha2FyYW5kYSB3YXMgY29tcG9zZWQgYnkgTmFuZGEgd2hvIGVudW1lcmF0ZWQgOTMgcmFnYXMgYW5kIGNsYXNzaWZpZWQgdGhlbSBpbnRvIGZlbWluaW5lIGFuZCBtYXNjdWxpbmUgZm9ybXMuIE90aGVyIGltcG9ydGFudCB0ZXh0cyBvZiB0aGlzIHBlcmlvZCB3ZXJlIFN3YXJhbWVsYS1LYWxhbmlkaGkgd3JpdHRlbiBieSBSYW1hbWF0eWEgaW4gdGhlIDE2dGggY2VudHVyeSB3aGljaCBhZ2FpbiBkZWFscyBwcmltYXJpbHkgd2l0aCByYWdhcy4gQ2hhdHVyZGFuZGktcHJha2FzaWthIHdyaXR0ZW4gYnkgVmVua2F0YW1ha2hpbiBpbiB0aGUgMTd0aCBjZW50dXJ5IGlzIGFsc28gZmFtb3VzIGZvciB0aGUgaW1wb3J0YW50IGluZm9ybWF0aW9uIG9uIG11c2ljb2xvZ3kuIER1cmluZyB0aGUgYW5jaWVudCBhbmQgZWFybHkgbWVkaWV2YWwgcGVyaW9kLCB3ZSBmaW5kIGV2aWRlbmNlcyBvZiB0aGUgZXhpc3RlbmNlIG9mIEd1cnVrdWxzIHdoZXJlIHN0dWRlbnRzIGxpdmVkIHdpdGggdGhlIHRlYWNoZXIgaW4gb3JkZXIgdG8gYmVjb21lIGEgbWFzdGVyIGluIHRoZSBhcnQgb2YgbXVzaWMuIFEgU291cmNlOiBDaCA1OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWEgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 31,
      "question" : "The ragas in Indian music are time and season specific. Which of the following ismeant to be sung at midnight?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWx0aG91Z2ggdGhlcmUgYXJlIDcyIG1lbGFzIG9yIHBhcmVudCBzY2FsZXMgb24gd2hpY2ggcmFnYXMgYXJlIGJhc2VkLCB0aGVzZSBhbGwgbGVhZCB0byB0aGUgc2l4IG1haW4gcmFnYXMgaW4gdGhlIEhpbmR1c3RhbmkgbXVzaWMgcmVwZXJ0b2lyZSBhbmQgYWxsIG9mIHRoZXNlIGFyZSB0aW1lIGFuZCBzZWFzb24gc3BlY2lmaWMgYW5kIGV2b2tlIGEgcGFydGljdWxhciB0eXBlIG9mIGVtb3Rpb246IFEgU291cmNlOiBDaCA1OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Shree",
        "option2" : "Megh",
        "option3" : "Hindol",
        "option4" : "Malkaush"
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements.\n\t1. Dhrupad starts with Alap, which is sung without words.\n\t2. Dhrupad includes the use of Sanskrit syllables.\n\t3. The tempo of music in Dhrupad remains constant.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRGhydXBhZCBpcyBlc3NlbnRpYWxseSBhIHBvZXRpYyBmb3JtIHRoYXQgaXMgaW5jb3Jwb3JhdGVkIGludG8gYW4gZXh0ZW5kZWQgcHJlc2VudGF0aW9uIHN0eWxlIHRoYXQgaXMgbWFya2VkIGJ5IHByZWNpc2UgYW5kIG92ZXJ0IGVsYWJvcmF0aW9uIG9mIGEgcmFnYS4gRGhydXZhIGxpdGVyYWxseSBtZWFucyAndW5tb3ZpbmcnLiBJdCBpbXBsaWVzIHRoZSByZXR1cm4gb2YgdGhlIFN3YXJhICh0b25hbCksIEthbGEgKHRpbWUpIGFuZCBTaGFiZGEgKHRleHR1YWwpIHRyYWplY3RvcmllcyB0byBhIGZpeGVkIHBvaW50LiBEaHJ1cGFkIHN0YXJ0cyB3aXRoIEFsYXAgd2hpY2ggaXMgc3VuZyB3aXRob3V0IHdvcmRzLiBUaGUgdGVtcG8gcmlzZXMgZ3JhZHVhbGx5LCBhbmQgaXQgaXMgdGhlIG1ham9yIHBhcnQgb2YgdGhlIHBlcmZvcm1hbmNlLiBUaGUgYWxhcCBldm9rZXMgYSBtb29kIGluIHRoZSBhdWRpZW5jZSB0aGF0IGNvaW5jaWRlcyB3aXRoIHRoZSBtb29kIG9mIHRoZSByYWdhIHRoYXQgaXMgY2hvc2VuLiBJdCBpcyBwdXJlIG11c2ljIHdpdGhvdXQgZGlzdHJhY3Rpb24gb2Ygd29yZHMuIFRoZW4gYWZ0ZXIgc29tZSB0aW1lIERocnVwYWQgYmVnaW5zIGFuZCBQYWtoYXdhaiBpcyBwbGF5ZWQuIERocnVwYWQgaW5jbHVkZXMgdXNlIG9mIHNhbnNrcml0IHN5bGxhYmxlcyBhbmQgaXMgb2YgdGVtcGxlIG9yaWdpbi4gRGhydXBhZCBjb21wb3NpdGlvbnMgdXN1YWxseSBoYXZlIDQgdG8gNSBzdGFuemFzIGFuZCBhcmUgcGVyZm9ybWVkIGJ5IGEgZHVvLiBHZW5lcmFsbHkgdHdvIG1hbGUgdm9jYWxpc3RzIHBlcmZvcm0gRGhydXBhZCBzdHlsZSBvZiBwZXJmb3JtYW5jZXMuIFRhbnB1cmEgYW5kIFBhbmtoYXdhaiB1c3VhbGx5IGFjY29tcGFueSB0aGVtLiBRIFNvdXJjZTogQ2ggNTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option3" : "2 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 33,
      "question" : "Which of the following portray similarities between Hindustani and Carnatic music?\n\t1. Both have the same number of ragas.\n\t2. Both use Flute and Violin.\n\t3. Both were influenced by Arab, Persian and Afghan styles of music.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzMw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlc2UgYXJlIHRhYnVsYXRlZCBhcyBmb2xsb3dzOiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFEgU291cmNlOiBDaCA1OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "2 only",
        "option3" : "1 and 2 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following about Kuchipudi dance form.\n\t1. It derives its name from a village in south India.\n\t2. It was historically performed only by female brahmins.\n\t3. The dance form gained prominence under the patronage of the Vijayanagar and Golcondarulers.\n\t4. Siddhendra Yogi is associated with the formalization of the system.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBPcmlnaW5hbGx5IHBlcmZvcm1lZCBieSBncm91cCBvZiBhY3RvcnMgZ29pbmcgZnJvbSB2aWxsYWdlIHRvIHZpbGxhZ2UsIGtub3duIGFzIEt1c3NlbGF2YXMsIEt1Y2hpcHVkaSBkZXJpdmVzIGl0cyBuYW1lIGZyb20gdGhlIEFuZGhyYSB2aWxsYWdlIG9mIEt1c3NlbGF2YXB1cmkgb3IgS3VjaGVsYXB1cmFtLiBJbiAxN3RoIGNlbnR1cnksIFNpZGRoZW5kcmEgWW9naSBmb3JtYWxpemVkIGFuZCBzeXN0ZW1hdGl6ZWQgdGhlIHRyYWRpdGlvbi4gSGUgYXV0aG9yZWQgJ0JoYW1hIEthbGFwYW0nIGFuZCBtYW55IG90aGVyIHBsYXlzLiBXaXRoIHRoZSBhZHZlbnQgb2YgVmFpc2huYXZpc20sIHRoZSBkYW5jZSBmb3JtIGJlY2FtZSBhIG1vbm9wb2x5IG9mIHRoZSBtYWxlIEJyYWhtaW5zIGFuZCBiZWdhbiB0byBiZSBwZXJmb3JtZWQgYXQgdGVtcGxlcy4gU3RvcmllcyBvZiBCaGFnYXZhdCBwdXJhbmEgYmVjYW1lIGEgY2VudHJhbCB0aGVtZSBvZiB0aGUgcmVjaXRhbHMsIGFuZCB0aGUgZGFuY2VycyBjYW1lIHRvIGJlIGtub3duIGFzIEJoYWdhdmF0aGFsdXMuIFRoZSBkYW5jZSBmb3JtIGdhaW5lZCBwcm9taW5lbmNlIHVuZGVyIHRoZSBwYXRyb25hZ2Ugb2YgdGhlIFZpamF5YW5hZ2FyIGFuZCBHb2xjb25kYSBydWxlcnMuIEhvd2V2ZXIsIGl0IHJlbWFpbmVkIGNvbmZpbmVkIHRvIHZpbGxhZ2VzIGFuZCByZW1haW5lZCBvYnNjdXJlIHRpbGwgdGhlIGFkdmVudCBvZiB0aGUgdHdlbnRpZXRoIGNlbnR1cnksIHdoZW4gQmFsYXNhcmFzd2F0aSBhbmQgUmFnaW5pIERldmkgcmV2aXZlZCB0aGlzIGRhbmNlIGZvcm0uIExha3NobWluYXJheWFuIFNoYXN0cnksIGluIHRoZSBlYXJseSAyMHRoIGNlbnR1cnksIGJyb3VnaHQgaW4gbmV3IHByYWN0aWNlcyBzdWNoIGFzIHNvbG8gcmVjaXRhbHMgYW5kIGZlbWFsZSBwYXJ0aWNpcGF0aW9uLiBRIFNvdXJjZTogQ2ggNjogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2, 3 and 4 only",
        "option2" : "1, 3 and 4 only",
        "option3" : "2 and 4 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 35,
      "question" : "Who among the following figures is/are associated with the revival/promotion of theBharatnatyam dance form?\n\t1. E. Krishna Iyer\n\t2. Balasaraswati\n\t3. Rukmini Devi Arundale\n\t4. Ragini DeviSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdGVtZW50IDE6ICBXaXRoIHRoZSBkZWNsaW5lIG9mIHRoZSBEZXZhZGFzaSBzeXN0ZW0sIHRoZSBhcnQgdG9vIGJlY2FtZSBuZWFybHkgZXh0aW5jdC4gSG93ZXZlciwgdGhlIGVmZm9ydHMgb2YgRS4gS3Jpc2huYSBJeWVyLCBhIHByb21pbmVudCBmcmVlZG9tIGZpZ2h0ZXIsIHJldml2ZWQgdGhpcyBkYW5jZSBmb3JtLiBQcmV2aW91c2x5LCB0aGlzIGRhbmNlIGZvcm0gd2FzIHBlcmZvcm1lZCBieSBzb2xvIGZlbWFsZSBkYW5jZXJzOyBpdCBoYXMgc2luY2UgYmVjb21lIGluY3JlYXNpbmdseSBwb3B1bGFyIGFtb25nIG1hbGUgYW5kIGdyb3VwIGFydGlzdHMgYXMgd2VsbC4gUnVrbWluaSBEZXZpIEFydW5kYWxlLCBhbm90aGVyIGZhbW91cyBwcm9wb25lbnQgb2YgQmhhcmF0bmF0eWFtLCBpcyByZW1lbWJlcmVkIGZvciBnaXZpbmcgZ2xvYmFsIHJlY29nbml0aW9uIHRvIHRoZSBkYW5jZS4gRmFtb3VzIHByb3BvbmVudHM6IFlhbWluaSBLcmlzaG5hbXVydGh5LCBMYWtzaG1pIFZpc3dhbmF0aGFuLCBQYWRtYSBTdWJyYW1hbmlhbSwgTXJpbmFsaW5pIFNhcmFiaGFpLCBNYWxsaWthIFNhcmFiaGFpLCBldGMuIEZvciBkZXRhaWxzIG9mIHRoZSBkYW5jZSBmb3JtLCBzZWUgdGhlIFEgc291cmNlLiBTdGF0ZW1lbnQgMiBhbmQgNDogVGhleSBhcmUgYXNzb2NpYXRlZCB3aXRoIHRoZSByZXZpdmFsIG9mIEt1Y2hpcHVkaSBkYW5jZSBmb3JtLiAgICAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFEgU291cmNlOiBDaCA2OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4",
        "option2" : "1 and 2 only",
        "option3" : "1 and 3 only",
        "option4" : "2, 3 and 4 only"
      }
    },
    {
      "index" : 36,
      "question" : "Which of the following is/are some of the features of the Kathakali dance form?\n\t1. It is essentially an all-male troupe performance.\n\t2. It involves only dance and no drama.\n\t3. Kathakali recitals are generally a representation of the conflict between good and evil.UPSCMATERIAL.ONLINETest-2: GS Subject\n\t4. The language used for Kathakali songs is Manipravalam, which is a mixture of Malayalam andSanskrit.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU29tZSBvZiB0aGUgZmVhdHVyZXMgb2YgS2F0aGFrYWxpIGRhbmNlIGFyZTogS2F0aGFrYWxpIGlzIGVzc2VudGlhbGx5IGFuIGFsbC1tYWxlIHRyb3VwZSBwZXJmb3JtYW5jZS4gVGhlcmUgaXMgbWluaW1hbCB1c2Ugb2YgcHJvcHMgaW4gdGhlIEthdGhha2FsaSByZWNpdGFsLiBIb3dldmVyLCB2ZXJ5IGVsYWJvcmF0ZSBmYWNpYWwgbWFrZSB1cCBhbG9uZyB3aXRoIGEgaGVhZCBnZWFyIGlzIHVzZWQgZm9yIGRpZmZlcmVudCBjaGFyYWN0ZXJzLiBJdCBpbnZvbHZlcyBib3RoIGRhbmNlIGFuZCBkcmFtYSBhbmQgdGhlIHR3byBjYW5ub3QgYmUgY2xlYXJseSBzZXBhcmF0ZWQuIE1vc3QgS2F0aGFrYWxpIHJlY2l0YWxzIGFyZSBhIGdyYW5kIHJlcHJlc2VudGF0aW9uIG9mIHRoZSBldGVybmFsIGNvbmZsaWN0IGJldHdlZW4gZ29vZCBhbmQgZXZpbC4gSXQgZHJhd3MgaXRzIHRoZW1lcyBmcm9tIHRoZSBzdG9yaWVzIG5hcnJhdGVkIGluIHRoZSBlcGljcyBhbmQgdGhlIHB1cmFuYXMuIEl0IGlzIGFsc28gY2FsbGVkIGFzIHRoZSAnYmFsbGFkIG9mIHRoZSBlYXN0Jy4gVGhlIGxhbmd1YWdlIHVzZWQgZm9yIEthdGhha2FsaSBzb25ncyBpcyBNYW5pcHJhdmFsYW0sIGkuZS4sIGEgbWl4dHVyZSBvZiBNYWxheWFsYW0gYW5kIFNhbnNrcml0LiBNdXNpYyBpcyBpbXBvcnRhbnQgdG8gcmlnaHRmdWxseSBjb252ZXkgdGhlIGVudGlyZSBkcmFtYSB0byB0aGUgdmlld2Vycy4gRGlmZmVyZW50IGNvbXBvc2l0aW9ucyBvZiBtdXNpYyBhcmUgdXNlZCBkdXJpbmcgcGVyZm9ybWFuY2UgdG8gZ2l2ZSBkZXB0aCB0byB0aGUgZHJhbWEuIEdlc3R1cmVzIGFyZSBwZXJoYXBzIHRoZSBjcm93biBqZXdlbCBvZiB0aGUgZW50aXJlIGRhbmNlLWRyYW1hLiBLYXRoYWthbGkgaXMgcmVtYXJrYWJsZSBpbiB0aGUgcmVwcmVzZW50YXRpb24gb2YgdGhlIHJhc2FzIHRocm91Z2ggbW92ZW1lbnRzIG9mIGV5ZSBhbmQgZXllIGJyb3dzLCB0aHJvdWdoIHdoaWNoIHRoZSBzdG9yeSBpcyBjb252ZXllZC4gTmluZSBpbXBvcnRhbnQgZmFjaWFsIGV4cHJlc3Npb25zIGNhbGxlZCAnTmF2YXJhc2FzJyBhcmUgdGF1Z2h0IHRvIGNvbnZleSB0aGUgZGlmZmVyZW50IGVtb3Rpb25zLiBFeHRlbnNpdmUgaGFuZCBnZXN0dXJlcyBhcmUgYWxzbyB1c2VkLiBUaGVyZWZvcmUsIHRoaXMgZGFuY2UgZm9ybSBjYWxscyBmb3Igc3RyZW51b3VzIHRyYWluaW5nLiBRIFNvdXJjZTogQ2ggNjogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "1, 3 and 4 only",
        "option3" : "2 and 4 only",
        "option4" : "1, 2, 3 and 4"
      }
    },
    {
      "index" : 37,
      "question" : "The caves of Udayagiri-Khandagiri provide some of the earliest examples of which ofthe following forms of Indian classical dance?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzNw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGhlIGNhdmVzIG9mIFVkYXlhZ2lyaS1LaGFuZGFnaXJpIHByb3ZpZGUgc29tZSBvZiB0aGUgZWFybGllc3QgZXhhbXBsZXMgb2YgT2Rpc3NpIGRhbmNlLiBUaGUgZGFuY2UgZm9ybSBkZXJpdmVzIGl0cyBuYW1lIGZyb20gdGhlICdPZHJhIG5yaXR5YScgbWVudGlvbmVkIGluIE5hdHlhIFNoYXN0cmEuIEl0IHdhcyBwcmltYXJpbHkgcHJhY3Rpc2VkIGJ5IHRoZSAnbWFoYXJpcycgYW5kIHBhdHJvbmlzZWQgYnkgdGhlIEphaW4ga2luZyBLaGVyYXZlbGEuIFdpdGggdGhlIGFkdmVudCBvZiBWYWlzaG5hdmlzbSBpbiB0aGUgcmVnaW9uLCB0aGUgTWFoYXJpIHN5c3RlbSBiZWNhbWUgZGVmdW5jdC4gSW5zdGVhZCwgeW91bmcgYm95cyB3ZXJlIHJlY3J1aXRlZCBhbmQgZHJlc3NlZCBhcyBmZW1hbGVzIHRvIGNvbnRpbnVlIHRoZSBhcnQgZm9ybS4gVGhleSBjYW1lIHRvIGJlIGtub3duIGFzICdHb3RpcHVhcycuIEFub3RoZXIgdmFyaWFudCBvZiB0aGlzIGFydCwgJ05hcnRhbGEnIGNvbnRpbnVlZCB0byBiZSBwcmFjdGlzZWQgYXQgdGhlIHJveWFsIGNvdXJ0cy4gSW4gdGhlIG1pZC10d2VudGlldGggY2VudHVyeSwgT2Rpc3NpIGdhaW5lZCBpbnRlcm5hdGlvbmFsIGFjY2xhaW0gZHVlIHRvIHRoZSBlZmZvcnRzIG9mIENoYXJsZXMgRmFicmkgYW5kIEluZHJhbmkgUmVobWFuLiBTb21lIG9mIHRoZSBmZWF0dXJlcyBvZiBPZGlzc2kgYXJlOiBJdCBpcyBzaW1pbGFyIHRvIEJoYXJhdG5hdHlhbSBpbiB0aGUgdXNlIG9mIE11ZHJhcyBhbmQgcG9zdHVyZXMgdG8gZXhwcmVzcyBlbW90aW9ucy4gVGhlIHRyaWJoYW5nYSBwb3N0dXJlLCBpLmUuIHRoZSB0aHJlZS1iZW5kZWQgZm9ybSBvZiB0aGUgYm9keSBpcyBpbm5hdGUgdG8gT2Rpc3NpIGRhbmNlIGZvcm0uIEFsc28gdGhlICdDaG93aycgcG9zdHVyZSB3aXRoIGhhbmRzIHNwcmVhZCBvdXQgZGVwaWN0cyBtYXNjdWxpbml0eS4gRm9yIG1vcmUsIHNlZSBRIHNvdXJjZS4gUSBTb3VyY2U6IENoIDY6IEluZGlhbiBBcnQgYW5kIEN1bHR1cmU6IE5pdGluIFNpbmdoYW5pYQ==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Odissi",
        "option2" : "Sattriya",
        "option3" : "Manipuri",
        "option4" : "Kathak"
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following figures is/are associated with the establishment andconsolidation of Indian circus?\n\t1. Keeleri Kunhikannan\n\t2. Vishnupant Chatre\n\t3. M. K. RamanSelect the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBTdGF0ZW1lbnQgMTogIFRoZSBHcmVhdCBJbmRpYW4gY2lyY3VzIHdhcyB0aGUgZmlyc3QgbW9kZXJuIEluZGlhbiBjaXJjdXMsIGZvdW5kZWQgYnkgVmlzaG51cGFudCBDaGF0cmUsIGFuIGFjY29tcGxpc2hlZCBlcXVlc3RyaWFuIGFuZCBzaW5nZXIuIEl0IGZsb3VyaXNoZWQgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiB0aGUgUmFqYSBvZiBLdXJkdXdhZGksIHVuZGVyIHdob20gQ2hhdHJlIHdvcmtlZCBhcyBhIHN0YWJsZSBtYXN0ZXIuIFRoZSBmaXJzdCBwZXJmb3JtYW5jZSBvZiBUaGUgR3JlYXQgSW5kaWFuIENpcmN1cyB3YXMgaGVsZCBvbiBNYXJjaCAyMCwgMTg4MCwgZm9sbG93aW5nIHdoaWNoIGl0IHRvdXJlZCBleHRlbnNpdmVseSB0aHJvdWdob3V0IHRoZSBjb3VudHJ5IGFzIHdlbGwgYXMgaW4gZm9yZWlnbiBzaG9yZXMgc3VjaCBhcyBDZXlsb24gYW5kIFNvdXRoIEVhc3QgQXNpYS4gU3RhdGVtZW50IDI6ICBCYWNrIGluIEluZGlhLCBDaGF0cmUgbWV0IEtlZWxlcmkgS3VuaGlrYW5uYW4gZHVyaW5nIGhpcyB0b3VyIGluIHRoZSBjaXR5IG9mIFRlbGxpY2hlcnJ5IG9uIHRoZSBNYWxhYmFyIENvYXN0LiBLZWVsZXJpIEt1bmhpa2FubmFuIHdvcmtlZCBhcyBhIG1hcnRpYWwgYXJ0IGFuZCBneW1uYXN0aWNzIHRlYWNoZXIuIE9uIENoYXRyZSdzIGluc2lzdGVuY2UsIEtlZWxlcmkgc3RhcnRlZCB0cmFpbmluZyBhY3JvYmF0cyBhdCBoaXMgYWNhZGVteS4gSW4gMTkwMSwgaGUgb3BlbmVkIGEgY2lyY3VzIHNjaG9vbCBhdCBDaGlyYWtrYXJhIG5lYXIgVGVsbGljaGVycnkgKEtlcmFsYSksIHdoaWNoIGJlY2FtZSB0aGUgZXBpY2VudHJlIG9mIHRoZSBjaXJjdXMgcmV2b2x1dGlvbiBpbiBJbmRpYSBTdGF0ZW1lbnQgMzogIEFmdGVyIEt1bmhpa2FubmFuJ3MgZGVhdGggaW4gMTkzOSwgaGlzIHN0dWRlbnQgTS4gSy4gUmFtYW4gY29udGludWVkIGhpcyBsZWdhY3kuIEluIDIwMTAsIHRoZSBHb3Zlcm5tZW50IG9mIEtlcmFsYSBzdGFydGVkIGEgQ2lyY3VzIEFjYWRlbXkgaW4gVGhhbGFzc2VyeSBpbiB0aGUgaG9ub3VyIG9mIEtlZWxlcmkgS3VuaGlrYW5uYW4uIEhlIGhhcyByaWdodGx5IGJlZW4gY29uZmVycmVkIHRoZSBlcGl0aGV0IG9mICdUaGUgZmF0aGVyIG9mIEluZGlhbiBDaXJjdXMnLiBRIFNvdXJjZTogQ2ggOTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZTogTml0aW4gU2luZ2hhbmlh",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only",
        "option2" : "1 and 3 only",
        "option3" : "2 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements about the history of Indian mathematics.\n\t1. Sulvasutra was written by Baudhayana.\n\t2. Apastamba introduced the concepts of practical geometry.\n\t3. Aryabhatta formulated the area of a triangle and discovered algebra.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwzOQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQy4gVGhlIGVhcmxpZXN0IGJvb2sgb24gbWF0aGVtYXRpY3Mgd2FzIFN1bHZhc3V0cmEgd3JpdHRlbiBieSBCYXVkaGF5YW5hIGluIHRoZSA2dGggY2VudHVyeSBCIFRoZXJlIGlzIGEgbWVudGlvbiBvZiAnUGknIGFuZCBldmVuIHNvbWUgY29uY2VwdHMgdmVyeSBzaW1pbGFyIHRvIFB5dGhhZ29yYXMgdGhlb3JlbSBpbiB0aGUgU3VsdmFzdXRyYS4gUGkgaXMgcHJlc2VudGx5IHVzZWQgdG8gY2FsY3VsYXRlIHRoZSBhcmVhIGFuZCBjaXJjdW1mZXJlbmNlIG9mIHRoZSBjaXJjbGUuIEFwYXN0YW1iYSwgaW4gdGhlIHNlY29uZCBjZW50dXJ5IEJDLCBpbnRyb2R1Y2VkIHRoZSBjb25jZXB0cyBvZiBwcmFjdGljYWwgZ2VvbWV0cnkgaW52b2x2aW5nIGFjdXRlIGFuZ2xlcywgb2J0dXNlIGFuZ2xlcyBhbmQgcmlnaHQgYW5nbGVzLiBUaGlzIGtub3dsZWRnZSBvZiBhbmdsZXMgaGVscGVkIGluIHRoZSBjb25zdHJ1Y3Rpb25zIG9mIGZpcmUgYWx0YXJzIGluIHRob3NlIHRpbWVzLiBBcnlhYmhhdHRhIGluIGhpcyBib29rIEFyeWFiaGF0aXlhIHN0YXRlZCB0aGF0IHRoZSBlYXJ0aCBpcyByb3VuZCBhbmQgcm90YXRlcyBvbiBpdHMgb3duIGF4aXMuIEhlIGZvcm11bGF0ZWQgdGhlIGFyZWEgb2YgYSB0cmlhbmdsZSBhbmQgZGlzY292ZXJlZCBhbGdlYnJhLiBUaGUgdmFsdWUgb2YgUGkgZ2l2ZW4gYnkgQXJ5YWJoYXR0YSBpcyBtdWNoIG1vcmUgYWNjdXJhdGUgdGhhbiB0aGF0IGdpdmVuIGJ5IHRoZSBHcmVla3MuICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSBRIHNvdXJjZS4gUSBTb3VyY2U6IENoIDE2OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements with reference to the development of Indianmedicine.\n\t1. Sarangdhara Samhita emphasised the use of opium in medicines.\n\t2. The Rasachikitsa system dealt with treatment of diseases without using any mineral medicines.UPSCMATERIAL.ONLINETest-2: GS Subject\n\t3. The Unani system of medicine came to India from Greece.Select the correct answer using the codes below.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSW4gdGhlIG1lZGlldmFsIHBlcmlvZCwgU2FyYW5nZGhhcmEgU2FtaGl0YSB3cml0dGVuIGluIDEzdGggY2VudHVyeSBlbXBoYXNpc2VkIG9uIHRoZSB1c2Ugb2Ygb3BpdW0gaW4gbWVkaWNpbmVzIGFuZCBmb3IgdXJpbmUgZXhhbWluYXRpb24gaW4gbGFib3JhdG9yaWVzLiBUaGUgUmFzYWNoaWtpdHNhIHN5c3RlbSBkZWFsdCB3aXRoIHRyZWF0bWVudCBvZiBkaXNlYXNlcyB1c2luZyBtaW5lcmFsIG1lZGljaW5lcy4gVGhlIFVuYW5pIHN5c3RlbSBvZiBtZWRpY2luZSBjYW1lIHRvIEluZGlhIGZyb20gR3JlZWNlIHdpdGggdGhlIGJvb2sgRmlyZGF1c3UgaGlrbWF0IHdyaXR0ZW4gYnkgQWxpLWJpbi1SYWJiYW4uIFN1cmdlcnkgd2FzIHRlcm1lZCBhcyBTYXN0cmFrYXJtYSBkdXJpbmcgdGhvc2UgdGltZXMuIFRoZSBib29rIFN1c2hydXRhIFNhbWhpdGEgcmVjb3JkcyBpbiBkZXRhaWwgdGhlIHN0ZXBzIHRvIGJlIHRha2VuIGZvciB0aGUgcGVyZm9ybWFuY2Ugb2YgYSBzdXJnZXJ5LiBJbiBDaGFyYWsgU2FtaGl0YSwgZXh0ZW5zaXZlIG5vdGUgb24gZGlnZXN0aW9uLCBtZXRhYm9saXNtIGFuZCBpbW11bmUgc3lzdGVtIGlzIHdyaXR0ZW4uIEF0aGFydmEgVmVkYSB3YXMgdGhlIGZpcnN0IGJvb2sgd2hlcmUgd2UgZmluZCBtZW50aW9uIGFib3V0IHRoZSBkaXNlYXNlcywgaXRzIGN1cmUgYW5kIG1lZGljaW5lcy4gUSBTb3VyY2U6IENoIDE2OiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWE=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3",
        "option2" : "2 only",
        "option3" : "1 and 3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following sentences\n\t1. 1st discovery of rock paintings was made in India by archeologist, V.S. Wakankar.\n\t2. Lakhudiyar cave painting site is located on the bank of Sutlej river.Which of the above statement is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUHJlaGlzdG9yaWMgUm9jayBQYWludGluZyAxLkl0IGlzIGludGVyZXN0aW5nIHRvIGtub3cgdGhhdCB0aGUgZmlyc3QgZGlzY292ZXJ5IG9mIHJvY2sgcGFpbnRpbmdzIHdhcyBtYWRlIGluIEluZGlhIGluIDE4NjctNjggYnkgYW4gYXJjaGFlb2xvZ2lzdCwgQXJjaGlib2xkIENhcmxsZXlsZSwgdHdlbHZlIHllYXJzIGJlZm9yZSB0aGUgZGlzY292ZXJ5IG9mIEFsdGFtaXJhIGluIFNwYWluLiBDb2NrYnVybiwgQW5kZXJzb24sIE1pdHJhIGFuZCBHaG9zaCB3ZXJlIHRoZSBlYXJseSBhcmNoYWVvbG9naXN0cyB3aG8gZGlzY292ZXJlZCBhIGxhcmdlIG51bWJlciBvZiBzaXRlcyBpbiB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 and 2"
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following sites\n\t1. Kupgallu\n\t2. Piklihal\n\t3. TekkalkotaAbove mentioned sites are",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmVvbGl0aGljIHBhaW50aW5ncyBzaXRlcyBmcm9tIHNvdXRoIEluZGlhIFByZWhpc3RvcmljIFJvY2sgUGFpbnRpbmcgMS5UaGUgZ3Jhbml0ZSByb2NrcyBvZiBLYXJuYXRha2EgYW5kIEFuZGhyYSBQcmFkZXNoIHByb3ZpZGVkIHN1aXRhYmxlIGNhbnZhc2VzIHRvIHRoZSBOZW9saXRoaWMgbWFuIGZvciBoaXMgcGFpbnRpbmdzLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Chalcolithic sites from north India",
        "option2" : "Harappan sites from western India",
        "option3" : "Jain pilgrimage sites from south India",
        "option4" : "Neolithic paintings sites from south India"
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements\n\t1. Bhimbetka rock cave painting located in Satapuda hills of Madhya Pradesh.\n\t2. Only paintings from Mesolithic period have been found at Bhimbetaka\n\t3. Hunting scenes predominates in Mesolithic paintings.Which of the above statement is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmhpbWJldGthIHJvY2sgY2F2ZSBwYWludGluZyAxLlRoZSBsYXJnZXN0IGFuZCBtb3N0IHNwZWN0YWN1bGFyIHJvY2stc2hlbHRlciBpcyBsb2NhdGVkIGluIHRoZSBWaW5kaHlhIGhpbGxzIGF0IEJoaW1iZXRrYSBpbiBNYWRoeWEgUHJhZGVzaC4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IDIuVGhlIGNhdmVzIG9mIEJoaW1iZXRrYSB3ZXJlIGRpc2NvdmVyZWQgaW4gMTk1Ny01OCBieSBlbWluZW50IGFyY2hhZW9sb2dpc3QgVi5TLiBXYWthbmthciBhbmQgbGF0ZXIgb24gbWFueSBtb3JlIHdlcmUgZGlzY292ZXJlZC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "3 only",
        "option3" : "1 and 3 only",
        "option4" : "2 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following pairs regarding the Harappan Civilization   Figures Materials1.Male torso A. Steatite2.Bearded man. B. red sandstone3.Dancing girl C. Bronze4.Mother goddess                                 D. TerracottaWhich of the pairs given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogT25seSB0d28gcGFpcnMgYXJlIGNvcnJlY3Q=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one pair is correct",
        "option2" : "Only two pairs are correct",
        "option3" : "Only three pairs are correct",
        "option4" : "All of the above are correct"
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements regarding Shraman Tradition\n\t1. It was a religious and social movement emerged during the 6th century B.C\n\t2. Ashoka patronised the shraman tradition.\n\t3. Yaksha worship was popular even before the advent of Buddhism.\n\t4. Large statues of Yakshas and yakshinis are found only at VidishaWhich of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5TSVhUSCBjZW50dXJ5IEJDRSBtYXJrcyB0aGUgYmVnaW5uaW5nIG9mIG5ldyByZWxpZ2lvdXMgYW5kIHNvY2lhbCBtb3ZlbWVudHMgaW4gdGhlIEdhbmdldGljIHZhbGxleSBpbiB0aGUgZm9ybSBvZiBCdWRkaGlzbSBhbmQgSmFpbmlzbSB3aGljaCB3ZXJlIHBhcnQgb2YgdGhlIHNocmFtYW4gdHJhZGl0aW9uLiBCb3RoIHJlbGlnaW9ucyBiZWNhbWUgcG9wdWxhciBhcyB0aGV5IG9wcG9zZWQgdGhlIHZhcm5hIGFuZCBqYXRpIHN5c3RlbXMgb2YgdGhlIEhpbmR1IHJlbGlnaW9uLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 ,2 and 3 only",
        "option3" : "2 and 4 only",
        "option4" : "3 and 4 only"
      }
    },
    {
      "index" : 47,
      "question" : "Consider following terms related to ancient history of India - Allakappa, Ramagrama ,VethapidaWhich of the statements given above is correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5EdWUgdG8gdGhlIHBvcHVsYXJpdHkgb2YgQnVkZGhpc20gYW5kIEphaW5pc20sIHN0dXBhcyBhbmQgdmloYXJhcyB3ZXJlIGNvbnN0cnVjdGVkIG9uIGEgbGFyZ2Ugc2NhbGUgLiBJdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHRoZSBzdHVwYXMgd2VyZSBjb25zdHJ1Y3RlZCBvdmVyIHRoZSByZWxpY3Mgb2YgdGhlIEJ1ZGRoYSBhdCBSYWphZ3JhaGEsIFZhaXNoYWxpLCBWZXRoYWRpcGEgYW5kIFBhdmEgaW4gQmloYXIsIEthcGlsYXZhc3R1LCBBbGxha2FwcGEgYW5kIFJhbWFncmFtYSBpbiBOZXBhbCwgS3VzaGluYWdhciBhbmQgUGlwcGFsdmluYSBpbiBVdHRhciBQcmFkZXNoLiBIZW5jZSBvcHRpb24gQiBpcyBjb3JyZWN0LiAyLlRoZSB0ZXh0dWFsIHRyYWRpdGlvbiBhbHNvIG1lbnRpb25zIGNvbnN0cnVjdGlvbiBvZiB2YXJpb3VzIG90aGVyIHN0dXBhcyBvbiB0aGUgcmVsaWNzIG9mIHRoZSBCdWRkaGEgYXQgc2V2ZXJhbCBwbGFjZXMgaW5jbHVkaW5nIEF2YW50aSBhbmQgR2FuZGhhcmEgd2hpY2ggYXJlIG91dHNpZGUgdGhlIEdhbmdldGljIHZhbGxleS4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ancient painting site's",
        "option2" : "Buddhist stupa site's    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option3" : "Jain pilgrimage sites",
        "option4" : "Ajivika sect pilgrimage site's"
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements\n\t1. Stupa, vihara and Chaitya are part of only Buddhist religion\n\t2. Yaksha worship is characteristic of all three main religions that is Buddhism, Hinduism andJainism.\n\t3. Buddhism and Jainism are part of Shraman tradition.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5TdHVwYSwgdmloYXJhIGFuZCBjaGFpdHlhIGFyZSBwYXJ0IG9mIEJ1ZGRoaXN0IGFuZCBKYWluYSBtb25hc3RpYyBjb21wbGV4ZXMgYnV0IHRoZSBsYXJnZXN0IG51bWJlciBiZWxvbmdzIHRvIHRoZSBCdWRkaGlzdCByZWxpZ2lvbi4gSGVuY2Ugc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIDIgLlRoZSB5YWtzaGFzIGFyZSBhIGJyb2FkIGNsYXNzIG9mIG5hdHVyZS1zcGlyaXRzLCB1c3VhbGx5IGJlbmV2b2xlbnQsIGJ1dCBzb21ldGltZXMgbWlzY2hpZXZvdXMgb3IgY2FwcmljaW91cywgY29ubmVjdGVkIHdpdGggd2F0ZXIsIGZlcnRpbGl0eSwgdHJlZXMsIHRoZSBmb3Jlc3QsIHRyZWFzdXJlIGFuZCB3aWxkZXJuZXNzLiBUaGV5IGFwcGVhciBpbiBIaW5kdSwgSmFpbiBhbmQgQnVkZGhpc3QgdGV4dHMsIGFzIHdlbGwgYXMgYW5jaWVudCBhbmQgbWVkaWV2YWwgZXJhIHRlbXBsZXMgb2YgU291dGggQXNpYSBhbmQgU291dGhlYXN0IEFzaWEgYXMgZ3VhcmRpYW4gZGVpdGllcy4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 49,
      "question" : "Consider the terms related to ancient history of India - Yashti, Medhi, Anda.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw0OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5zdHVwYXMgd2VyZSBlbGFib3JhdGVseSBidWlsdCB3aXRoIGNlcnRhaW4gYWRkaXRpb25zIGxpa2UgdGhlIGVuY2xvc2luZyBvZiB0aGUgY2lyY3VtYW1idWxhdG9yeSBwYXRoIHdpdGggcmFpbGluZ3MgYW5kIHNjdWxwdHVyYWwgZGVjb3JhdGlvbi4gVGhlcmUgd2VyZSBudW1lcm91cyBzdHVwYXMgY29uc3RydWN0ZWQgZWFybGllciBidXQgZXhwYW5zaW9ucyBvciBuZXcgYWRkaXRpb25zIHdlcmUgbWFkZSBpbiB0aGUgc2Vjb25kIGNlbnR1cnkgQkNFLiAyLlRoZSBzdHVwYSBjb25zaXN0cyBvZiBhIGN5bGluZHJpY2FsIGRydW0gYW5kIGEgY2lyY3VsYXIgYW5kYSB3aXRoIGEgaGFybWlrYSBhbmQgY2hoYXRyYSBvbiB0aGUgdG9wIHdoaWNoIHJlbWFpbiBjb25zaXN0ZW50IHRocm91Z2hvdXQgd2l0aCBtaW5vciB2YXJpYXRpb25zIGFuZCBjaGFuZ2VzIGluIHNoYXBlIGFuZCBzaXplLiBBcGFydCBmcm9tIHRoZSBjaXJjdW1hbWJ1bGF0b3J5IHBhdGgsIGdhdGV3YXlzIHdlcmUgYWRkZWQuIDMuVGh1cywgd2l0aCB0aGUgZWxhYm9yYXRpb25zIGluIHN0dXBhIGFyY2hpdGVjdHVyZSwgdGhlcmUgd2FzIGFtcGxlIHNwYWNlIGZvciB0aGUgYXJjaGl0ZWN0cyBhbmQgc2N1bHB0b3JzIHRvIHBsYW4gZWxhYm9yYXRpb25zIGFuZCB0byBjYXJ2ZSBvdXQgaW1hZ2VzLiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Merchant's guild",
        "option2" : "Instruments used during Ashokan period",
        "option3" : "Jain sculpture's",
        "option4" : "Architectural features of Buddhist stupa."
      }
    },
    {
      "index" : 50,
      "question" : "Consider following statements\n\t1. Buddha images at mathura is modelled on the lines of earlier Yaksha images.\n\t2. Folded drapery is a feature of Buddha images from mathura whereas transparent drapery is afeature of Saranatha Buddha images.\n\t3. Vengi was important centre of art production from Gandhara school of sculpture.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5UaGUgZmlyc3QgY2VudHVyeSBDRSBvbndhcmRzLCBHYW5kaGFyYSAobm93IGluIFBha2lzdGFuKSwgTWF0aHVyYSBpbiBub3J0aGVybiBJbmRpYSBhbmQgVmVuZ2kgaW4gQW5kaHJhIFByYWRlc2ggZW1lcmdlZCBhcyBpbXBvcnRhbnQgY2VudHJlcyBvZiBhcnQgcHJvZHVjdGlvbiAyLlRoZSBCdWRkaGEgaW1hZ2UgYXQgTWF0aHVyYSBpcyBtb2RlbGxlZCBvbiB0aGUgbGluZXMgb2YgZWFybGllciBZYWtzaGEgaW1hZ2VzICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgd2hlcmVhcyBpbiBHYW5kaGFyYSBpdCBoYXMgSGVsbGVuaXN0aWMgZmVhdHVyZXMuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgMy5UaGUgdHJhZGl0aW9uYWwgY2VudHJlLCBNYXRodXJhLCByZW1haW5lZCB0aGUgbWFpbiBhcnQgcHJvZHVjdGlvbiBzaXRlIHdoZXJlYXMgU2FybmF0aCBhbmQgS29zYW1iaSBhbHNvIGVtZXJnZWQgYXMgaW1wb3J0YW50IGNlbnRyZXMgb2YgYXJ0IHByb2R1Y3Rpb24uIDQuTWFueSBCdWRkaGEgaW1hZ2VzIGluIFNhcm5hdGggaGF2ZSBwbGFpbiB0cmFuc3BhcmVudCBkcmFwZXJ5IGNvdmVyaW5nIGJvdGggc2hvdWxkZXJzLCBhbmQgdGhlIGhhbG8gYXJvdW5kIHRoZSBoZWFkIGhhcyB2ZXJ5IGxpdHRsZSBvcm5hbWVudGF0aW9uLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 and 3 only",
        "option3" : "3 only",
        "option4" : "4. 2 and 3 only"
      }
    },
    {
      "index" : 51,
      "question" : "Consider the terms related to ancient India -  Sandhara, Nirandhara, Sarvatobhadra .",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogRWFybHkgdGVtcGxlJ3MgVGhlIHNocmluZSdzIG9mIHRoZSB0ZW1wbGVzIHdlcmUgb2YgdGhyZWUga2luZHMgMS5TYW5kaGFyYSB0eXBlICggd2l0aG91dCBwcmFkYWtzaGluYXBhdGhhKQ==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Types of stupa architecture",
        "option2" : "Weapons used during mahajanapada period",
        "option3" : "Title's used by Gupta ruler's",
        "option4" : "Types of earlier temples ."
      }
    },
    {
      "index" : 52,
      "question" : "Consider following statements regarding Buddhism.\n\t1. Bhattiprolu, goli , jagayyapetta are stupa site's from Vengi style .UPSCMATERIAL.ONLINETest-2: GS Subject\n\t2. Stupa sites outside the Ganga valley is Devnimori.\n\t3. Sculpture from Mathura style is characterised by intense emotions and movements.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5WZW5naSBpbiBBbmRocmEgUHJhZGVzaCBoYXMgbWFueSBzdHVwYSBzaXRlcyBsaWtlIEphZ2F5eWFwZXR0YSwgQW1hcmF2YXRpLCBCaGF0dGlwcm9sdSwgTmFnYXJqdW5rb25kYSwgR29saSwgZXRjLiAgSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gMi5BbW9uZyB0aGUgaW1wb3J0YW50IHN0dXBhIHNpdGUncyBvdXRzaWRlIHRoZSBHYW5nZXRpYyB2YWxsZXkgaXMgZGV2bmltb3JpIGluIEd1amFyYXQgLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAzLlNjdWxwdHVyYWwgZm9ybSBWZW5naSBzdHlsZSBpcyBjaGFyYWN0ZXJpc2VkIGJ5IGludGVuc2UgZW1vdGlvbnMuIEZpZ3VyZXMgYXJlIHNsZW5kZXIsIGhhdmUgYSBsb3Qgb2YgbW92ZW1lbnQsIGJvZGllcyBhcmUgc2hvd24gd2l0aCB0aHJlZSBiZW50cyAoaS5lLiB0cmliaGFuZ2EpLCBhbmQgdGhlIHNjdWxwdHVyYWwgY29tcG9zaXRpb24gaXMgbW9yZSBjb21wbGV4IHRoYW4gYXQgU2FuY2hpLiBMaW5lYXJpdHkgYmVjb21lcyBmbGV4aWJsZSwgZHluYW1pYyBtb3ZlbWVudCBicmVha3MgdGhlIFN0YXRpYyBtZXNzIG9mIGZvcm0uICBIZW5jZSBzdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "2 only"
      }
    },
    {
      "index" : 53,
      "question" : "The following sites of ancient India are - Guntapalle, Anakapalle, Sannati",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQnVkZGhpc3Qgcm9jayBjdXQgc3R1cGEgc2l0ZXMgMS5JbmRlcGVuZGVudCBCdWRkaGEgaW1hZ2VzIGFyZSBhbHNvIGZvdW5kIGF0IEFtYXJhdmF0aSwgTmFnYXJqdW5rb25kYSBhbmQgR3VudGFwYWxsZSBpbiBBbmRocmEgUHJhZGVzaC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ajanta style painting sites",
        "option2" : "Buddhist rock cut stupa sites",
        "option3" : "Ancient port sites",
        "option4" : "Jaina pilgrimage sites"
      }
    },
    {
      "index" : 54,
      "question" : "Consider following statements regarding Ajanta cave site.\n\t1. Ajanta painting is influenced by Vengi and vidarbha sculptural tradition\n\t2. Maurya Rulers were important patrons at Ajanta.\n\t3. It is located on the bank Godavari River.\n\t4. It is only related to Buddhist religion.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWphbnRhIGNhdmUgc2l0ZS4gMS5UaGUgbW9zdCBmYW1vdXMgY2F2ZSBzaXRlIGlzIEFqYW50YS4gSXQgaXMgbG9jYXRlZCBpbiBBdXJhbmdhYmFkIERpc3RyaWN0IG9mIE1haGFyYXNodHJhIFN0YXRlLiBBamFudGEgaGFzIHR3ZW50eS1uaW5lIGNhdmVzLiBJdCBoYXMgZm91ciBjaGFpdHlhIGNhdmVzIGRhdGFibGUgdG8gdGhlIGVhcmxpZXIgcGhhc2UsIGkuZS4sIHRoZSBzZWNvbmQgYW5kIHRoZSBmaXJzdCBjZW50dXJ5IEJDRS4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1 and 4 only",
        "option3" : "1, 3 and 4 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 56,
      "question" : "Consider following statements regarding Badami cave painting\n\t1. Painting represents extension of the tradition of Ajanta mural painting.\n\t2. It is patronised by Pallava King Mahendravarma I.UPSCMATERIAL.ONLINETest-2: GS Subject\n\t3. Cave is popularly known as Vishnu cave.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmFkYW1pIGNhdmUgcGFpbnRpbmcgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICAxLkJhZGFtaSB3YXMgdGhlIGNhcGl0YWwgb2YgdGhlIGVhcmx5IENoYWx1a3lhbiBkeW5hc3R5IHdoaWNoIHJ1bGVkIHRoZSByZWdpb24gZnJvbSA1NDMgdG8gNTk4IENFLiBXaXRoIHRoZSBkZWNsaW5lIG9mIHRoZSBWYWthdGFrYSBydWxlLCB0aGUgQ2hhbHVreWFzIGVzdGFibGlzaGVkIHRoZWlyIHBvd2VyIGluIHRoZSBEZWNjYW4uIFRoZSBDaGFsdWt5YSBraW5nLCBNYW5nYWxlc2hhLCBwYXRyb25pc2VkIHRoZSBleGNhdmF0aW9uIG9mIHRoZSBCYWRhbWkgY2F2ZXMuIEhlIHdhcyB0aGUgeW91bmdlciBzb24gb2YgdGhlIENoYWx1a3lhIGtpbmcsIFB1bGFrZXNpIEksIGFuZCB0aGUgYnJvdGhlciBvZiBLaXJ0aXZhcm1hbiBJLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIDIuU3R5bGlzdGljYWxseSBzcGVha2luZywgdGhlIHBhaW50aW5nIHJlcHJlc2VudHMgZXh0ZW5zaW9uIG9mIHRoZSB0cmFkaXRpb24gb2YgbXVyYWwgcGFpbnRpbmcgZnJvbSBBamFudGEgdG8gQmFkYW1pIGluIFNvdXRoIEluZGlhLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAzLlRoZSBpbnNjcmlwdGlvbiBpbiBDYXZlIE5vLjQgbWVudGlvbnMgdGhlIGRhdGUgNTc4LTU3OSBDRSwgZGVzY3JpYmVzIHRoZSBiZWF1dHkgb2YgdGhlIGNhdmUgYW5kIGluY2x1ZGVzIHRoZSBkZWRpY2F0aW9uIG9mIHRoZSBpbWFnZSBvZiBWaXNobnUuIFRodXMgaXQgbWF5IGJlIHByZXN1bWVkIHRoYXQgdGhlIGNhdmUgd2FzIGV4Y2F2YXRlZCBpbiB0aGUgc2FtZSBlcmEgYW5kIHRoZSBwYXRyb24gcmVjb3JkcyBoaXMgVmFpc2huYXZhIGFmZmlsaWF0aW9uLlRoZXJlZm9yZSwgdGhlIGNhdmUgaXMgcG9wdWxhcmx5IGtub3duIGFzIHRoZSBWaXNobnUgQ2F2ZS4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 3 only",
        "option3" : "2 and 3 only",
        "option4" : "3 only"
      }
    },
    {
      "index" : 57,
      "question" : "Vichitrachitta , Chitrakarapuli, Chaityakari were titles assumed by which of thefollowing ruler :-",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5UaGUgUGFsbGF2YSBraW5ncyB3aG8gc3VjY2VlZGVkIHRoZSBDaGFsdWt5YSBraW5ncyBpbiBwYXJ0cyBvZiBTb3V0aCBJbmRpYSwgd2VyZSBhbHNvIHBhdHJvbnMgb2YgYXJ0cy4gTWFoZW5kcmF2YXJtYSBJIHdobyBydWxlZCBpbiB0aGUgc2V2ZW50aCBjZW50dXJ5IHdhcyByZXNwb25zaWJsZSBmb3IgYnVpbGRpbmcgdGVtcGxlcyBhdCBQYW5hbWFsYWksIE1hbmRhZ2FwYXR0dSBhbmQgS2FuY2hpcHVyYW0u",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Chalukya king Mangalesha",
        "option2" : "Pallava king Mahendravarman",
        "option3" : "Pallava king Rajasimha",
        "option4" : "Krishna Devaraya from Vijaynagara"
      }
    },
    {
      "index" : 58,
      "question" : "Which of the following statements is / are correct regarding Kerala Murals\n\t1. Use of vibrant and luminous colour\n\t2. It is influenced by contemporary tradition of Kathakali and Kalam ezhuthu.Options",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw1OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogS2VyYWxhIE11cmFscyAxLktlcmFsYSBwYWludGVycyAoZHVyaW5nIHRoZSBwZXJpb2QgZnJvbSB0aGUgc2l4dGVlbnRoIHRvIHRoZSBlaWdodGVlbnRoIGNlbnR1cnkpIGV2b2x2ZWQgYSBwaWN0b3JpYWwgbGFuZ3VhZ2UgYW5kIHRlY2huaXF1ZSBvZiB0aGVpciBvd24gd2hpbGUgZGlzY3JpbWluYXRlbHkgYWRvcHRpbmcgY2VydGFpbiBzdHlsaXN0aWMgZWxlbWVudHMgZnJvbSBOYXlha2EgYW5kIFZpamF5YW5hZ2FyYSBzY2hvb2xzLiAyLlRoZSBwYWludGVycyBldm9sdmVkIGEgbGFuZ3VhZ2UgdGFraW5nIGN1ZXMgZnJvbSBjb250ZW1wb3JhcnkgdHJhZGl0aW9ucywgbGlrZSBLYXRoYWthbGkgYW5kIGthbGFtIGV6aHV0aHUuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "1 and 2 only",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 60,
      "question" : "Consider the terms related to ancient history of India - Gavaksha, Vyala, Kalpa Lata .Which of the following statements are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogVGVtcGxlIGFyY2hpdGVjdHVyZSAxLlZhcmlvdXMgZm9ybXMgb3IgYXNwZWN0cyBvZiB0aGUgbWFpbiBkaXZpbml0eSBhcmUgdG8gYmUgZm91bmQgb24gdGhlIG91dGVyIHdhbGxzIG9mIHRoZSBzYW5jdHVtLiBUaGUgZGVpdGllcyBvZiBkaXJlY3Rpb25zLCBpLmUuLCB0aGUgYXNodGFkaWtwYWxhcyBmYWNlIHRoZSBlaWdodCBrZXkgZGlyZWN0aW9ucyBvbiB0aGUgb3V0ZXIgd2FsbHMgb2YgdGhlIHNhbmN0dW0gYW5kL29yIG9uIHRoZSBvdXRlciB3YWxscyBvZiBhIHRlbXBsZS4gMi5TdWJzaWRpYXJ5IHNocmluZXMgYXJvdW5kIHRoZSBtYWluIHRlbXBsZSBhcmUgZGVkaWNhdGVkIHRvIHRoZSBmYW1pbHkgb3IgaW5jYXJuYXRpb25zIG9mIHRoZSBtYWluIGRlaXR5LiAzLkZpbmFsbHksIHZhcmlvdXMgZWxlbWVudHMgb2Ygb3JuYW1lbnRhdGlvbiBzdWNoIGFzIGdhdmFrc2hhLCB2eWFsYS95YWxpLCBrYWxwYS1sYXRhLCBhbWFsYWthLCBrYWxhc2hhLCBldGMuIGFyZSB1c2VkIGluIGRpc3RpbmN0IHdheXMgYW5kIHBsYWNlcyBpbiBhIHRlbXBsZS4gSGVuY2Ugb3B0aW9uIEEgaXMgY29ycmVjdC4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Elements of ornamentation in temples",
        "option2" : "Merchant guilds",
        "option3" : "Features of Nayaka painting    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option4" : "Elements of Stupa architecture"
      }
    },
    {
      "index" : 61,
      "question" : "Which of the following features belong to Nagara style of temples?\n\t1. Dvarapalas\n\t2. Gopuram\n\t3. River goddess\n\t4. Kalasha\n\t5. Compound walls\n\t6. Temple tankSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBOYWdhcmEgc3R5bGUgb2YgdGVtcGxlcyAxLlRoZSBzdHlsZSBvZiB0ZW1wbGUgYXJjaGl0ZWN0dXJlIHRoYXQgYmVjYW1lIHBvcHVsYXIgaW4gbm9ydGhlcm4gSW5kaWEgaXMga25vd24gYXMgbmFnYXJhLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 ,2, and 4 only",
        "option2" : "3 and 4 only",
        "option3" : "4,5, and 6 only",
        "option4" : "1 ,5 and 6 only"
      }
    },
    {
      "index" : 62,
      "question" : "Consider following terms related to ancient India - Kuta, Shala, Vritta, Ashtasra .Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5KdXN0IGFzIHRoZXJlIGFyZSBtYW55IHN1YmRpdmlzaW9ucyBvZiB0aGUgbWFpbiB0eXBlcyBvZiBuYWdhcmEgdGVtcGxlcywgdGhlcmUgYXJlIHN1YmRpdmlzaW9ucyBhbHNvIG9mIGRyYXZpZGEgdGVtcGxlcy4gMi5UaGVzZSBhcmUgYmFzaWNhbGx5IG9mIGZpdmUgZGlmZmVyZW50IHNoYXBlczogQS5zcXVhcmUsIHVzdWFsbHkgY2FsbGVkIGt1dGEsIGFuZCBhbHNvIGNhdHVyYXNyYTsgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBCLiByZWN0YW5ndWxhciBvciBzaGFsYSBvciBheWF0YXNyYTsgQy5lbGxpcHRpY2FsLCBjYWxsZWQgZ2FqYS1wcmlzaHRhIG9yIGVsZXBoYW50YmFja2VkLCBvciBhbHNvIGNhbGxlZCB2cml0dGF5YXRhLCBkZXJpdmluZyBmcm9tIHdhZ29udmF1bHRlZCBzaGFwZXMgb2YgYXBzaWRhbCBjaGFpdHlhcyB3aXRoIGEgaG9yc2Utc2hvZSBzaGFwZWQgZW50cmFuY2UgZmFjYWRlIHVzdWFsbHkgY2FsbGVkIGEgbmFzaTsgRC4gY2lyY3VsYXIgb3IgdnJpdHRhOyBhbmQgRS4gb2N0YWdvbmFsIG9yIGFzaHRhc3JhLiBIZW5jZSBvcHRpb24gQSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Types of Dravida temples",
        "option2" : "Instruments used during sangam period",
        "option3" : "types of cotton cloths during Gupta period",
        "option4" : "Types of coins during satvahana period"
      }
    },
    {
      "index" : 63,
      "question" : "Consider following statements regarding Pallava rulers of south India..\n\t1. Although They were mostly shaivite , several Vaishnava shrines also found from their reign.\n\t2. Their early buildings were structural while the later ones were rock cut.\n\t3. Shore temples are only dedicated to shiva.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogMS5UaGUgUGFsbGF2YXMgd2VyZSBvbmUgb2YgdGhlIGFuY2llbnQgU291dGggSW5kaWFuIGR5bmFzdGllcyB0aGF0IHdlcmUgYWN0aXZlIGluIHRoZSBBbmRocmEgcmVnaW9uIGZyb20gdGhlIHNlY29uZCBjZW50dXJ5IENFIG9ud2FyZHMgYW5kIG1vdmVkIHNvdXRoIHRvIHNldHRsZSBpbiBUYW1pbCBOYWR1Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2only",
        "option3" : "1 and 3 only",
        "option4" : "1 and 2 only"
      }
    },
    {
      "index" : 65,
      "question" : "Which off following statements regarding monastic university of Nalanda is /are true?\n\t1. Foreign traveller Hsuan tsang visited Nalanda university\n\t2. Foundation of monastery laid by Skandagupta.\n\t3. Only Mahayana doctrine of Buddhism taught here.Select the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2NQ==",
      "description" : "ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgQW5zd2VyIEp1c3RpZmljYXRpb24gOg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 66,
      "question" : "Jain bronze sculpture was found at which of following locations.\n\t1. Chausa\n\t2. Aihole\n\t3. Akota\n\t4. Hansi\n\t5. Maski\n\t6. Mount AbuSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogR3VqYXJhdCBhbmQgUmFqYXN0aGFuIGhhdmUgYmVlbiBzdHJvbmdob2xkcyBvZiBKYWluaXNtIHNpbmNlIGVhcmx5IHRpbWVzLiBBIGZhbW91cyBob2FyZCBvZiBKYWluIGJyb256ZXMgd2FzIGZvdW5kIGF0IEFrb3RhICAuIE1hbnkgZmFtb3VzIEphaW4gYnJvbnplcyBmcm9tIGNoYXVzYSBpbiAgYmloYXIgYXJlIG5vdyBrZXB0IGluIFBhdG5hIG11c2V1bS4gIE1hbnkgSmFpbiBicm9uemVzIGZyb20gSGFuc2kgaW4gSGFyeWFuYSB3ZXJlIGFsc28ga2VwdCBpbiBtdXNldW1zLiBIZW5jZSBvcHRpb24gQSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1,3 and 4 only",
        "option2" : "1, 2 and 3 only",
        "option3" : "3,5 and 6 only",
        "option4" : "1, 5 and 6 only"
      }
    },
    {
      "index" : 68,
      "question" : "Consider following statements regarding Ashoka rulers.\n\t1. Shaft of Ashokan pillars were made up of various pieces of sandstone cemented together.\n\t2. The Ashokan pillars were independently erected by royal diction.UPSCMATERIAL.ONLINETest-2: GS SubjectWhich of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXMgRGlmZmVyZW5jZSBiZXR3ZWVuIEFzaG9rYW4gUGlsbGFycyBhbmQgQWNoYWVtZW5pYW4gUGlsbGFycyBCYXNpcyBBc2hva2FuIHBpbGxhcnMuIEFjaGFlbWVuaWFuIHBpbGxhcnMgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBUaGUgc2hhZnQgb2YgdGhlIEFzaG9rYW4gcGlsbGFycyB3ZXJlIG1vbm9saXRoaWMsICAgICAgICAgICAgICAgU2hhZnQgb2YgYWNoYWVtZW5pYW4gcGlsbGFycyB3ZXJlIG1hZGUgaS5lLiB0aGV5IHdlcmUgaW5zY3JpYmVkIGZyb20gYSBzaW5nbGUgcGllY2UgTWFkZSB1cCBvZiB2YXJpb3VzIHBpZWNlcyBvZiBzYW5kc3RvbmUgb2Ygc3RvbmUsIG1haW5seSBjaHVuYXIgc2FuZHN0b25lcy4gQ2VtZW50ZWQgdG9nZXRoZXIuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIEFzaG9rYW4gcGlsbGFycyB3ZXJlIGluZGVwZW5kZW50bHkgVGhlIEFjaGFlbWVuaWFuIHBpbGxhcnMgd2VyZSBnZW5lcmFsbHkgRXJlY3RlZCBieSByb3lhbCBkaWN0aW9uLiBBdHRhY2hlZCB0byBzdGF0ZSBidWlsZGluZyAuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 69,
      "question" : "Consider following statements\n\t1. Only mathura school and Amaravati school of sculpture is indigenously developed\n\t2. The sculptures of Amaravati School were made using white marbles\n\t3. All three schools Gandhara, mathura and Amaravati , patronised by Kushana rulers.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw2OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQmFzaXMgR2FuZGhhcmEgU2Nob29sLiAgICAgICAgICAgICBNYXRodXJhIFNjaG9vbC4gICAgICAgICAgICAgICAgICAgICAgQW1hcmF2YXRpIFNjaG9vbCBFeHRlcm5hbCBpbmZsdWVuY2UuIGRldmVsb3BlZCBpbmRpZ2Vub3VzbHkuICAgICAgICBkZXZlbG9wZWQgaW5kaWdlbm91c2x5IEhlYXZ5IGluZmx1ZW5jZSBvZiBHcmVlayBvciBIZWxsZW5pc3RpYyBzY3VscHR1cmUsc28gaXQgaXMgYWxzbyAga25vd24gYXMgSW5kby1HcmVlayBhcnQuIFVzZSBvZiBibHVlIGdyZXkgc2FuZHN0b25lLiAgICAgICAgVXNlIG9mIHJlZCBzYW5kc3RvbmUuICAgICAgICAgVXNlIG9mIG1hcmJsZXMgICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBQYXRyb25pc2VkIGJ5IGt1c2hhbmEgICAgICAgICAgICAgICBQYXRyb25pc2VkIGJ5IGt1c2hhbmEuICAgICBQYXRyb25pc2VkIGJ5IHNhdHZhaGFuYSAu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "2 and 3 only",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 70,
      "question" : "Uparkot is unique feature of which of the following caves .",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW5hbHlzaXM6LSBKdW5hZ2FkaCBDYXZlczogVGhlc2UgYXJlIEJ1ZGRoaXN0IGNhdmVzIGxvY2F0ZWQgaW4gSnVuYWdhZGggZGlzdHJpY3Qgb2YgR3VqYXJhdC4gVGhlcmUgYXJlIG5vdCBhY3R1YWxseSBjYXZlcyBoZXJlLCBidXQgdGhyZWUgZGlmZmVyZW50IHNpdGVzIGNhbiBiZSBmb3VuZC4gKDEpIEtoYXByYSBLb2RpeWEsICgyKSBCYWJhIFB5YXJlLCAoMykgVXBhcmtvdC4gQSB1bmlxdWUgZmVhdHVyZSBvZiB0aGUgSnVuYWdhZGggY2F2ZXMgaXMgdGhlIHByZXNlbmNlIG9mIGEgMzAtNTAgZnQgaGlnaCBjaXRhZGVsIGtub3duIGFzICdVcGFyIEtvdCcgaW4gZnJvbnQgb2YgdGhlIHByYXllciBoYWxsLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ajanta cave",
        "option2" : "Kanheri cave",
        "option3" : "Bagh cave",
        "option4" : "Junagadh cave"
      }
    },
    {
      "index" : 71,
      "question" : "Standing Buddha of sultanganj belongs to which of following school of sculpture",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2FybmF0aCBzY2hvb2wgOi0gRHVyaW5nIHRoZSBHdXB0YSBwZXJpb2QsIGEgbmV3IHNjaG9vbCBvZiBzY3VscHR1cmUgZGV2ZWxvcGVkIGFyb3VuZCBTYXJuYXRoLiBJdCB3YXMgY2hhcmFjdGVyaXNlZCBieSB0aGUgdXNlIG9mIGNyZWFtIGNvbG91cmVkIHNhbmRzdG9uZSBhbmQgdGhlIHVzZSBvZiBtZXRhbC4gVGhlIHNjdWxwdHVyZXMgb2YgdGhpcyBzY2hvb2wgd2VyZSBpbW1hY3VsYXRlbHkgZHJlc3NlZCBhbmQgbGFja2VkIGFueSBmb3JtIG9mIG5ha2VkbmVzcy4gVGhlIGhhbG8gYXJvdW5kIHRoZSBoZWFkIG9mIEJ1ZGRoYSB3YXMgaW50cmljYXRlbHkgZGVjb3JhdGVkLiBFeGFtcGxlOiBTdWx0YW5nYW5qIEJ1ZGRoYSAoNy41IGZ0IGhpZ2gpICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Mathura school",
        "option2" : "Gandhara school",
        "option3" : "Amaravati school",
        "option4" : "Sarnath school"
      }
    },
    {
      "index" : 72,
      "question" : "Which of following inscription found at Prayag prashasti.\n\t1. Ashokan inscription\n\t2. Samudragupta inscription\n\t3. Harsha's inscription\n\t4. Jahangir's inscriptionSelect the correct answer using the code given below",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUHJheWFnLVByYXNoYXN0aSBQcmF5YWctUHJhc2hhc3RpIGlzIHRoZSBuYW1lIGdpdmVuIHRvIHRoZSBBbGxhaGFiYWQgUGlsbGFyLiAnUHJheWFnJyBtZWFucyBhIG1lZXRpbmcgcGxhY2UgZm9yIHNvbWV0aGluZyBvciBzb21lb25lLiBQcmF5YWcgaXMgYW4gYW5jaWVudCBuYW1lIG9mIEFsbGFoYWJhZCBhcyBpdCBpcyB0aGUgbWVldGluZyBwbGFjZSBvciAnU2FuZ2FtJyBvZiByaXZlcnMgR2FuZ2EsIFlhbXVuYSBhbmQgdGhlIG15dGhpY2FsIFNhcmFzd2F0aS4gUHJhc2hhc3RpIG1lYW5zICdpbiBwcmFpc2Ugb2Ygc29tZW9uZScgYW5kIGlzIGEgZXVsb2d5LiBUaGUgQWxsYWhhYmFkIFByYXNhc3RpIHdhcyBvcmlnaW5hbGx5IGVuZ3JhdmVkIG9uIHRoZSBBc2hva2FuIFBpbGxhciBpbiBLYXVzYW1iaGkgbmVhciBBbGxhaGFiYWQuIExhdGVyIGl0IHdhcyByZW1vdmVkIHRvIHRoZSBBbGxhaGFiYWQgZm9ydC4gLiBJdCBpcyBhbiBBc2hva2FuIFN0YW1iaCBidXQgaGFzIDQgZGlmZmVyZW50IGluc2NyaXB0aW9ucyBpLmUuIGEpIFRoZSB1c3VhbCBBc2hva2FuIGluc2NyaXB0aW9ucyBpbiBCcmFobWkgc2NyaXB0IGFzIGluIGFsbCBwaWxsYXJzLiBiKSBUaGUgUXVlZW4ncyBlZGljdCByZWdhbGluZyB0aGUgY2hhcml0YWJsZSBkZWVkcyBvZiBBc2hva2EncyB3aWZlIEthdXJ3YWtpLiBjKSBTYW11ZHJhZ3VwdGEncyAoMzM1QUQgLSAzNzUgQUQpIGluc2NyaXB0aW9ucyB3cml0dGVuIGJ5IEhhcmlzZW5hIGluIFNhbnNrcml0IGxhbmd1YWdlIGFuZCBCcmFobWkgc2NyaXB0LiBJdCBtZW50aW9ucyBhYm91dCB0aGUgY29ucXVlc3RzIG9mIFNhbXVkcmFndXB0YSBhbmQgYm91bmRhcmllcyBvZiB0aGUgR3VwdGEgRW1waXJlLiBkKSBKYWhhbmdpcidzIGluc2NyaXB0aW9ucyBpbiBQZXJzaWFuLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only",
        "option2" : "1, 2 and 4 only",
        "option3" : "2 and 4 only",
        "option4" : "1 and 4 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  "
      }
    },
    {
      "index" : 73,
      "question" : "Consider following statements regarding Nayaka school of art\n\t1. It is influenced by Islamic architecture.\n\t2. Prakarms is unique feature of Nayaka templesWhich of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Mw==",
      "description" : "ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgQW5zd2VyIEp1c3RpZmljYXRpb24gOiBOYXlha2EgU2Nob29sOiBUaGUgTmF5YWthIHNjaG9vbCBvZiBhcmNoaXRlY3R1cmUgZmxvdXJpc2hlZCB1bmRlciB0aGUgTmF5YWthIHJ1bGVycyBpbiB0aGUgcGVyaW9kIGJldHdlZW4gMTYgdGggY2VudHVyaWVzIGFuZCAxOCB0aCBjZW50dXJpZXMgQS5ELiBJdCB3YXMgYWxzbyBrbm93cyBhcyBNYWR1cmFpIHNjaG9vbC4gSXQgd2FzIGFyY2hpdGVjdHVyYWxseSBzaW1pbGFyIHRvIHRoZSBEcmF2aWRpYW4gc3R5bGUsIGJ1dCBtdWNoIGxhcmdlciBpbiBzY29wZS4gSXQgYWxzbyBoYXMgSXNsYW1pYyBpbmZsdWVuY2UuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QgU29tZSBvZiB0aGUgdW5pcXVlIGZlYXR1cmVzIGFyZTogKC0pQXJvdW5kIFByZXNlbmNlIHRoZSBvZiBnYXJiaGFncmloYSBhcmUgUHJha2FybXMgKG9yIGFsb25nIGh1Z2UgY29ycmlkb3JzIHdpdGggcm9vZmVkIGluIHRoZSBhbWJ1bGF0b3J5IHBvcnRpY28sIHBhc3NhZ2V3YXlzKS4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gaW1nIEZpZzogUHJha3JhbSAoLSlUaGUgZ29wdXJhbXMgYnVpbHQgdW5kZXIgdGhlIE5heWFrYSBydWxlcnMgd2VyZSBzb21lIG9mIHRoZSBsYXJnZXN0IGdvcHVyYW1zLiBUaGUgTWVlbmFrc2hpIHRlbXBsZSBpbiBNYWR1cmFpIGhhcyB0aGUgdGFsbGVzdCBnb3B1cmFtIGluIHRoZSB3b3JsZC4gVGhlIGFydCBvZiBnb3B1cmFtIHJlYWNoZWQgaXRzIGNsaW1heCBpbiB0aGUgTmF5YWthIHN0eWxlLiAoLSljYXJ2aW5ncy4gVGhlIHRlbXBsZSBzdHJ1Y3R1cmUgd2FzIGZpbGxlZCB3aXRoIGludHJpY2F0ZSBFeGFtcGxlOiBNZWVuYWtzaGkgdGVtcGxlLCBNYWR1cmFpLCBldGMu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 and 2"
      }
    },
    {
      "index" : 76,
      "question" : "Which of following are reasons for decline of Sanskrit theatre in India\n\t1. Rigid orthodox section restricted creative space.\n\t2. Dominance of Brahmins\n\t3. Advent of Muslim rule.Which of the statements given above is / are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUmVhc29ucyBmb3IgZGVjbGluZSBvZiBTYW5za3JpdCBUaGVhdHJlIFRoZSByZWFzb25zIGZvciBkZWNsaW5lIG9mIFNhbnNrcml0IHRoZWF0cmUgaW5jbHVkZTogKC0pQXMgU2Fuc2tyaXQgZHJhbWF0aXN0cyBiZWdhbiB0byBkaXZlcmdlIHRvd2FyZHMgcG9ldHJ5LCB0aGUgbHlyaWNhbCB3cml0aW5ncyBzdGFydGVkIGdhaW5pbmcgcG9wdWxhcml0eSBvdmVyIHRoZSBkcmFtYXRpY3dvcmtzLiAoLSlUaGUgcmlnaWQgb3J0aG9kb3h5IG9mIHRoZSBTYW5za3JpdCB0aGVhdHJlIHJlc3RyaWN0ZWQgdGhlIGNyZWF0aXZlIHNwYWNlIG9mIG5ldyBwbGF5d3JpZ2h0cyB3aG8gdHVybmVkIHRvIG90aGVyIGZvcm1zLiBIZW5jZSBzdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAoLSlBcyBTYW5za3JpdCBiZWNhbWUgbW9yZSBhbmQgbW9yZSBlbWJlbGxpc2hlZCwgaXQgbG9zdCBwb3B1bGFyaXR5IGFtb25nIHRoZSBtYXNzZXMuIEl0IHdhcyBpbmNyZWFzaW5nbHkgY29uZmluZWQgdG8gdGhlIHJlbGlnaW91cyBzcGhlcmUgYW5kIGFtb25nIHRoZSBCcmFobWlucywgd2hpbGUgb3RoZXIgbGFuZ3VhZ2VzIHN1Y2ggYXMgUGFsaSBhbmQgUHJha3JpdCB0b29rIGl0cyBwbGFjZS4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gKC0pV2l0aCB0aGUgYWR2ZW50IG9mIE11c2xpbSBydWxlcnMsIFNhbnNrcml0IHRoZWF0cmUgdG9vayBhIGRlZmluaXRlIGJhY2tzZWF0LCBhcyBkYW5jZSBhbmQgbXVzaWMgZ2FpbmVkIHBhdHJvbmFnZS4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgY29ycmVjdC4gS29vdGhpeWF0dGFtIChLb29kaXlhdHRhbSkgaXMgSW5kaWEncyBvbGRlc3QgY29udGludWluZyBmb3JtIG9mIHRoZWF0cmUgdGhhdCBoYXMgc3Vydml2ZWQgc2luY2UuIDEwIHRoIGNlbnR1cnkgQS5ELiBpbiBLZXJhbGEuSXQgY29tcGxldGVseSBhZGhlcmVzIHRvIHRoZSBydWxlcyBsYWlkIGRvd24gaW4gTmF0eWEgU2hhc3RyYSBhbmQgaXMgdGhlIHRyYWRpdGlvbmFsIHByaXZpbGVnZSBvZiB0aGUgQ2hha3lhciBhbmQgTmFtYmlhciBjYXN0ZXMgb2YgS2VyYWxhLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option3" : "1, 2 and 3",
        "option4" : "1 and 3 only"
      }
    },
    {
      "index" : 77,
      "question" : "Which of following is / are forms of glove puppetry?\n\t1. Kathputali\n\t2. Yampuri\n\t3. Pavakoothu\n\t4. RavanchayaWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3Nw==",
      "description" : "ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgQW5zd2VyIEp1c3RpZmljYXRpb24gOiBIZW5jZSBvcHRpb24gQiBpcyBjb3JyZWN0IC4gICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only",
        "option2" : "3 only",
        "option3" : "3 and 4 only",
        "option4" : "2 only"
      }
    },
    {
      "index" : 78,
      "question" : "Mula sangh sect belongs to which of the following major religion of India",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw3OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSmFpbmlzbSBoYXMgdHdvIG1ham9yIGFuY2llbnQgc3ViIHRyYWRpdGlvbnM6ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Hinduism",
        "option2" : "Mahayana Buddhism",
        "option3" : "Digambaras",
        "option4" : "Shvetambaras"
      }
    },
    {
      "index" : 81,
      "question" : "Which of the following countries are all members of G7 countries?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogR3JvdXAgb2YgU2V2ZW4gKEc3KTogSXQgaXMgYW4gaW50ZXJnb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9uIHRoYXQgd2FzIGZvcm1lZCBpbiAxOTc1LiBUaGUgYmxvYyBtZWV0cyBhbm51YWxseSB0byBkaXNjdXNzIGlzc3VlcyBvZiBjb21tb24gaW50ZXJlc3QgbGlrZSBnbG9iYWwgZWNvbm9taWMgZ292ZXJuYW5jZSwgaW50ZXJuYXRpb25hbCBzZWN1cml0eSBhbmQgZW5lcmd5IHBvbGljeS4gVGhlIEc3IGNvdW50cmllcyBhcmUgdGhlIFVLLCBDYW5hZGEsIEZyYW5jZSwgR2VybWFueSwgSXRhbHksIEphcGFuIGFuZCB0aGUgVVMuIEFsbCB0aGUgRzcgY291bnRyaWVzIGFuZCBJbmRpYSBhcmUgYSBwYXJ0IG9mIEcyMC4gVGhlIEc3IGRvZXMgbm90IGhhdmUgYSBmb3JtYWwgY29uc3RpdHV0aW9uIG9yIGEgZml4ZWQgaGVhZHF1YXJ0ZXJzLiBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbC9wbS1tb2RpLW1lZXRzLWpvZS1iaWRlbi1lbW1hbnVlbC1tYWNyb24tYW5kLWp1c3RpIG4tdHJ1ZGVhdS1hdC1nNy1zdW1taXQvYXJ0aWNsZTY1NTcwNTU4LmVjZSAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "UK, Italy, USA and Spain",
        "option2" : "Canada, France, Germany and Japan",
        "option3" : "UK, USA, Australia and South Korea",
        "option4" : "France, Germany, Italy and Spain"
      }
    },
    {
      "index" : 82,
      "question" : "Consider the following statements regarding Juvenile Justice Act 2015\n\t1. The Act replaced the Juvenile Delinquency Law and the Juvenile Justice (Care and Protection of\n\t0. Children Act) 200\n\t2. It allowed the trial of juveniles in conflict with law in the age group of 16-21 years as adults.\n\t3. Under this act, Central Adoption Resource Authority (CARA) has been given the status of astatutory body.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSnV2ZW5pbGUgSnVzdGljZSBBY3QgMjAxNSBXaGF0IGlzIHRoZSBKdXZlbmlsZSBKdXN0aWNlIChDYXJlIGFuZCBQcm90ZWN0aW9uIG9mIENoaWxkcmVuKSBBY3QsIDIwMTU/IFRoZSBBY3Qgd2FzIGludHJvZHVjZWQgYW5kIHBhc3NlZCBpbiBQYXJsaWFtZW50IGluIDIwMTUgdG8gcmVwbGFjZSB0aGUgSnV2ZW5pbGUgRGVsaW5xdWVuY3kgTGF3IGFuZCB0aGUgSnV2ZW5pbGUgSnVzdGljZSAoQ2FyZSBhbmQgUHJvdGVjdGlvbiBvZiBDaGlsZHJlbiBBY3QpIDIwMDAuIEl0IGFsbG93ZWQgdGhlIHRyaWFsIG9mIGp1dmVuaWxlcyBpbiBjb25mbGljdCB3aXRoIGxhdyBpbiB0aGUgYWdlIGdyb3VwIG9mIDE2LTE4IHllYXJzIGFzIGFkdWx0cywgaW4gY2FzZXMgd2hlcmUgdGhlIGNyaW1lcyB3ZXJlIHRvIGJlIGRldGVybWluZWQuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBuYXR1cmUgb2YgdGhlIGNyaW1lLCBhbmQgd2hldGhlciB0aGUganV2ZW5pbGUgc2hvdWxkIGJlIHRyaWVkIGFzIGEgbWlub3Igb3IgYSBjaGlsZCwgd2FzIHRvIGJlIGRldGVybWluZWQgYnkgYSBKdXZlbmlsZSBKdXN0aWNlIEJvYXJkLiBJdCByZWNlaXZlZCBpbXBldHVzIGFmdGVyIHRoZSAyMDEyIERlbGhpIGdhbmdyYXBlIGluIHdoaWNoIG9uZSBvZiB0aGUgYWNjdXNlZCB3YXMganVzdCBzaG9ydCBvZiAxOCB5ZWFycywgYW5kIHdhcyB0aGVyZWZvcmUgdHJpZWQgYXMgYSBqdXZlbmlsZS4gVGhlIEFjdCBzdHJlYW1saW5lZCBhZG9wdGlvbiBwcm9jZWR1cmVzIGZvciBvcnBoYW5zLCBhYmFuZG9uZWQgYW5kIHN1cnJlbmRlcmVkIGNoaWxkcmVuIGFuZCB0aGUgZXhpc3RpbmcgQ2VudHJhbCBBZG9wdGlvbiBSZXNvdXJjZSBBdXRob3JpdHkgKENBUkEpIGhhcyBiZWVuIGdpdmVuIHRoZSBzdGF0dXMgb2YgYSBzdGF0dXRvcnkgYm9keSB0byBlbmFibGUgaXQgdG8gcGVyZm9ybSBpdHMgZnVuY3Rpb24gbW9yZSBlZmZlY3RpdmVseS4gaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwvamotYWN0LWFtZW5kbWVudC1jb3VsZC1tYWtlLWl0LWhhcmRlci10by1yZXBvcnQtYWJ1cyBlLWF0LWNoaWxkLWNhcmUtaW5zdGl0dXRpb25zL2FydGljbGU2NTU2NDc2MS5lY2U=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 83,
      "question" : "Match the following places with the country they belong to?\n\t1. Bonab: Iran\n\t2. Hamah: Afghanistan\n\t3. Zakhu: IraqHow many pairs given above are correctly matched?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Mw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBQYWlyIDIgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "None of the pairs",
        "option2" : "Only one pair",
        "option3" : "Only two pairs",
        "option4" : "All three pairs"
      }
    },
    {
      "index" : 84,
      "question" : "Consider the following statements regarding Jyotirgamaya\n\t1. It is a festival to showcase the talent of rare musical instruments from across the country.\n\t2. It is organized by Lalit Kala Academy.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogSnlvdGlyZ2FtYXlhICBBcyBwYXJ0IG9mIEF6YWRpIEthIEFtcml0IE1haG90c2F2LCBvbiB0aGUgb2NjYXNpb24gb2YgV29ybGQgTXVzaWMgRGF5ICgyMXN0IEp1bmUpLCBTYW5nZWV0IE5hdGFrIEFrYWRlbWkgaXMgcHJlc2VudGluZyBKeW90aXJnYW1heWEtIGEgZmVzdGl2YWwgdG8gc2hvd2Nhc2UgdGhlIHRhbGVudCBvZiByYXJlIG11c2ljYWwgaW5zdHJ1bWVudHMgZnJvbSBhY3Jvc3MgdGhlIGNvdW50cnksIGluY2x1ZGluZyBzdHJlZXQgcGVyZm9ybWVycywgdHJhaW4gZW50ZXJ0YWluZXJzLCBwZXJmb3JtZXJzIGF0dGFjaGVkIHRvIHRlbXBsZXMsIGV0Yy4sIEF6YWRpIEthIEFtcml0IE1haG90c2F2IGlzIGFuIGluaXRpYXRpdmUgb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgdG8gY2VsZWJyYXRlIGFuZCBjb21tZW1vcmF0ZSA3NSB5ZWFycyBvZiBpbmRlcGVuZGVuY2UgYW5kIHRoZSBnbG9yaW91cyBoaXN0b3J5IG9mIGl0J3MgcGVvcGxlLCBjdWx0dXJlIGFuZCBhY2hpZXZlbWVudHMuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  ",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 85,
      "question" : "Consider the following statements regarding National Green Corps\n\t1. It aims at building cadres of young children working towards environmental conservation andsustainable development.\n\t2. It is a national school programme of Ministry of Youth Affairs and Sports.\n\t3. An annual financial assistance of Rs. 5,00,000 is given to every eco-club to implement theprogramme.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmF0aW9uYWwgR3JlZW4gQ29ycHMgaXMgYSBtYWpvciBpbml0aWF0aXZlIG9mIHRoZSBNaW5pc3RyeSBvZiBFbnZpcm9ubWVudCBGb3Jlc3QgYW5kIENsaW1hdGUgQ2hhbmdlIChNb0VGQ0MpIGZvciBjcmVhdGluZyBlbnZpcm9ubWVudGFsIGF3YXJlbmVzcyBsYXVuY2hlZCBpbiAyMDAxLTAyIHdoaWNoIGFpbXMgYXQgYnVpbGRpbmcgY2FkcmVzIG9mIHlvdW5nIGNoaWxkcmVuIHdvcmtpbmcgdG93YXJkcyBlbnZpcm9ubWVudGFsIGNvbnNlcnZhdGlvbiBhbmQgc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE5hdGlvbmFsIEdyZWVuIENvcnBzIChOR0MpIGlzIGEgbmF0aW9uYWwgc2Nob29sIHByb2dyYW1tZSBvZiBNb0VGICYgQ0MsIEdvdmVybm1lbnQgb2YgSW5kaWEgKEdvSSksIHdoZXJlaW4gaXQgaXMgZW52aXNhZ2VkIHRvIGZvcm0gYSBOYXRpb25hbCBHcmVlbiBBcm15ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgYnkgZXN0YWJsaXNoaW5nIEVjby1DbHVicyBpbiBhYm91dCA1MDAgc2Nob29scyBpbiBlYWNoIGRpc3RyaWN0LCBhY3Jvc3MgdGhlIGNvdW50cnkuIEFuIOKAi2FubnVhbCBmaW5hbmNpYWwgYXNzaXN0YW5jZSBvZiBScy4gNSwwMDAvLSBpcyBnaXZlbiB0byBldmVyeSBlY28tY2x1YiB0byBpbXBsZW1lbnQgdGhlIHByb2dyYW1tZS4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gaHR0cHM6Ly9uZ2Mua2FybmF0YWthLmdvdi5pbi9pbmZvLTEvQWJvdXQrVXMvZW4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 86,
      "question" : "Consider the following statements regarding National Air Quality ResourceFramework of India (NARFI)\n\t1. NARFI has been developed by Central Pollution Control Board.\n\t2. It is an information mechanism to help decision-makers in government, municipalities, start-upsand in the private sectors to address air pollution.\n\t3. It also provides for short-term basic training modules.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTmF0aW9uYWwgQWlyIFF1YWxpdHkgUmVzb3VyY2UgRnJhbWV3b3JrIG9mIEluZGlhIChOQVJGSSkgQWJvdXQgTkFSRkk/IE5BUkZJIGhhcyBiZWVuIGRldmVsb3BlZCBieSB0aGUgTmF0aW9uYWwgSW5zdGl0dXRlIG9mIEFkdmFuY2VkIFN0dWRpZXMgKE5JQVMpLCBCZW5nYWx1cnUuICBIZW5jZSwgc3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgTkFSRkkgaXMgYW4gaW5mb3JtYXRpb24gbWVjaGFuaXNtIHRvIGhlbHAgZGVjaXNpb24tbWFrZXJzIGluIGdvdmVybm1lbnQsIG11bmljaXBhbGl0aWVzLCBzdGFydC11cHMgYW5kIGluIHRoZSBwcml2YXRlIHNlY3RvcnMgdG8gYWRkcmVzcyBhaXIgcG9sbHV0aW9uIGlzc3VlcyBpbiBkaWZmZXJlbnQgY2xpbWF0aWMgem9uZXMgb2YgSW5kaWEuIFJlc2VhcmNoLWJhc2VkIGF1ZGl0ZWQgSW5mb3JtYXRpb24gYW5kIGluZHVzdHJ5LW9yaWVudGVkIHNvbHV0aW9ucyB3aWxsIGJlIHNoYXJlZCBpbiBhbiBlYXN5LXRvLXVuZGVyc3RhbmQgZm9ybWF0LiBUaGUgc2hvcnQtdGVybSBiYXNpYyB0cmFpbmluZyBtb2R1bGVzIHRhaWxvcmVkIGZvciBkaWZmZXJlbnQgZ3JvdXBzIHN1Y2ggYXMgYWN0aXZlIGdyb3VuZCBsZXZlbCBzdGFmZiBpbiBnb3Zlcm5tZW50IGVzdGFibGlzaG1lbnRzLCBpbXBsZW1lbnRlcnMsIG1lZGlhIGFuZCBwb2xpY3ltYWtlcnMsIHdvdWxkIGJlIGFuIGludGVncmFsIHBhcnQgb2YgdGhlIGZyYW1ld29yay4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only"
      }
    },
    {
      "index" : 87,
      "question" : "Ambubachi Mela is held in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQW1idWJhY2hpIE1lbGEgVGhlIEFtYnViYWNoaSBNZWxhIGlzIGFuIGFubnVhbCBIaW5kdSBtZWxhIGhlbGQgYXQgS2FtYWtoeWEgVGVtcGxlIGluIEd1d2FoYXRpLCBBc3NhbS4gVGhpcyB5ZWFybHkgTWVsYSBpcyBjZWxlYnJhdGVkIGR1cmluZyB0aGUgbW9uc29vbiBzZWFzb24gdGhhdCBoYXBwZW5zIHRvIGZhbGwgZHVyaW5nIHRoZSBBc3NhbWVzZSBtb250aCBBaGFhciwgYXJvdW5kIHRoZSBtaWRkbGUgb2YgSnVuZSB3aGVuIHRoZSBzdW4gdHJhbnNpdCB0byB0aGUgem9kaWFjIG9mIE1pdGh1bmEsIHdoZW4gdGhlIEJyYWhtYXB1dHJhIHJpdmVyIGlzIGluIHNwYXRlLiBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiBUaGUgZmVzdGl2YWwgbWFya3MgdGhlIGFubnVhbCBtZW5zdHJ1YXRpb24gb2YgdGhlIHByZXNpZGluZyBHb2RkZXNzLiBUaGUgdGVtcGxlIChvbiB0aGUgTmlsYWNoYWwgSGlsbHMpIGhvdXNlcyB0aGUgeW9uaSAoZmVtYWxlIGdlbml0YWwpIHN5bWJvbGlzZWQgYnkgYSByb2NrLiBLYW1ha2h5YSBpcyBvbmUgb2YgNTEgc2hha3RpIHBlZXRoYXMgb3IgaG9seSBzaXRlcyBmb3IgdGhlIGZvbGxvd2VycyBvZiB0aGUgU2hha3RpIGN1bHQ=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Kamakhya Temple",
        "option2" : "Kashi Vishwanatha Temple",
        "option3" : "Jagannath Temple",
        "option4" : "Somnath temple"
      }
    },
    {
      "index" : 88,
      "question" : "Consumer Expenditure Survey is conducted by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ29uc3VtZXIgRXhwZW5kaXR1cmUgU3VydmV5IFRpbWUgSW50ZXJ2YWw6IFRyYWRpdGlvbmFsbHksIGEgcXVpbnF1ZW5uaWFsIChyZWN1cnJpbmcgZXZlcnkgZml2ZSB5ZWFycykgc3VydmV5IGNvbmR1Y3RlZCBieSB0aGUgTmF0aW9uYWwgU2FtcGxlIFN1cnZleSBPZmZpY2UgLSBOU1NPIChjb21lcyB1bmRlciB0aGUgTmF0aW9uYWwgU3RhdGlzdGljYWwgT2ZmaWNlKSwgTWluaXN0cnkgb2YgU3RhdGlzdGljcyBhbmQgUHJvZ3JhbW1lIEltcGxlbWVudGF0aW9uLiBTY29wZTogQ29sbGVjdHMgaW5mb3JtYXRpb24gb24gdGhlIGNvbnN1bXB0aW9uIHNwZW5kaW5nIHBhdHRlcm5zIG9mIGhvdXNlaG9sZHMgYWNyb3NzIHRoZSBjb3VudHJ5LCBib3RoIHVyYmFuIGFuZCBydXJhbC4gSW5mb3JtYXRpb24gR2VuZXJhdGVkIFJldmVhbHMgdGhlIGF2ZXJhZ2UgZXhwZW5kaXR1cmUgb24gZ29vZHMgKGZvb2QgYW5kIG5vbi1mb29kKSBhbmQgc2VydmljZXMuIEhlbHBzIGdlbmVyYXRlIGVzdGltYXRlcyBvZiBob3VzZWhvbGQgTW9udGhseSBQZXIgQ2FwaXRhIENvbnN1bWVyIEV4cGVuZGl0dXJlIChNUENFKSBhcyB3ZWxsIGFzIHRoZSBkaXN0cmlidXRpb24gb2YgaG91c2Vob2xkcyBhbmQgcGVyc29ucyBvdmVyIHRoZSBNUENFIGNsYXNzZXMuIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9idXNpbmVzcy9FY29ub215L2hvdXNlaG9sZC1jb25zdW1lci1leHBlbmRpdHVyZS1zdXJ2ZXktdG8tYmVnaW4gICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICAtaW4tanVseS9hcnRpY2xlNjUzNTEzMDAuZWNl",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Central Statistics Office",
        "option2" : "NITI Aayog",
        "option3" : "Labour Bureau",
        "option4" : "National Sample Survey Office    UPSCMATERIAL.ONLINE   Test-2: GS Subject  "
      }
    },
    {
      "index" : 89,
      "question" : "Consider the following statements regarding VL-SRSAM missile system\n\t1. It is designed to strike at the range of 40km to 50km and at an altitude of around 15km.\n\t2. It is an indigenously developed ship-borne weapon system.\n\t3. Its design is based on the Astra missile.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw4OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQWxsIHRoZSBhYm92ZSBzdGF0ZW1lbnRzIGFyZSBjb3JyZWN0LiBWTC1TUlNBTSBtaXNzaWxlIHN5c3RlbSBUSEUgSU5ESUdFTk9VU0xZIGRldmVsb3BlZCBzaGlwYm9ybmUgd2VhcG9uIHN5c3RlbSwgVmVydGljYWwgTGF1bmNoIFNob3J0IFJhbmdlIFN1cmZhY2UgdG8gQWlyIE1pc3NpbGUgKFZMLVNSU0FNKSwgd2FzIHN1Y2Nlc3NmdWxseSBmbGlnaHQgdGVzdGVkIGJ5ICBEUkRPIGFuZCB0aGUgSW5kaWFuIE5hdnkuIEl0IGlzIGRlc2lnbmVkIHRvIHN0cmlrZSBhdCB0aGUgaGlnaC1zcGVlZCBhaXJib3JuZSB0YXJnZXRzIGF0IHRoZSByYW5nZSBvZiA0MGttIHRvIDUwa20gYW5kIGF0IGFuIGFsdGl0dWRlIG9mIGFyb3VuZCAxNWttLiBUaGUgVmVydGljYWwgTGF1bmNoIFNob3J0IFJhbmdlIFN1cmZhY2UgdG8gQWlyIE1pc3NpbGUgKFZMLVNSU0FNKSBpcyBhbiBpbmRpZ2Vub3VzbHkgZGV2ZWxvcGVkIHNoaXAtYm9ybmUgd2VhcG9uIHN5c3RlbS4gVGhlIFZMLVNSU0FNIGlzIGFuIGluZGlnZW5vdXMgdXBncmFkZSB0byB0aGUgMi1kZWNhZGUtb2xkIElzcmFlbGkgQmFyYWsgMSBzdXJmYWNlLXRvLWFpciBtaXNzaWxlIHN5c3RlbSBvbiBib2FyZCBJbmRpYW4gd2Fyc2hpcHMuIEl0cyBkZXNpZ24gaXMgYmFzZWQgb24gQXN0cmEgbWlzc2lsZSB3aGljaCBpcyBhIEJleW9uZCBWaXN1YWwgUmFuZ2UgQWlyLXRvLUFpciBtaXNzaWxlLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 90,
      "question" : "Global Liveability Index was released by",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBHbG9iYWwgTGl2ZWFiaWxpdHkgSW5kZXggQWNjb3JkaW5nIHRvIEdsb2JhbCBMaXZlYWJpbGl0eSBJbmRleCByZWxlYXNlZCBieSBUaGUgRWNvbm9taXN0IGFubnVhbGx5LCB0aGUgY2l0aWVzIGluIEluZGlhIGhhdmUgZmFyZWQgcG9vcmx5IGluIHRoZSBsaXN0IG9mIHRoZSB3b3JsZCdzIG1vc3QgbGl2ZWFibGUgY2l0aWVzLiBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiBOZXcgRGVsaGkgaGFzIGJlZW4gcmFua2VkIDExMnRoLCAgd2hpbGUgTXVtYmFpIGlzIHJhbmtlZCBhdCAxMTd0aCBwb3NpdGlvbi4gQXVzdHJpYW4gY2FwaXRhbCBWaWVubmEgaGFzIG9uY2UgYWdhaW4gdG9wcGVkIHRoZSBsaXN0IG9mIG1vc3QgbGl2ZWFibGUgY2l0aWVzIGluIHRoZSB3b3JsZCBpbiB0aGUgbGlzdCBvZiAxNDAgY2l0aWVzLiBUaGUgUGFraXN0YW5pIGNpdHkgb2YgS2FyYWNoaSBhbmQgQmFuZ2xhZGVzaCdzIGNhcGl0YWwgRGhha2EgYXJlIGFtb25nIHRoZSBsZWFzdCBsaXZlYWJsZSBjaXRpZXMgaW4gdGhlIHdvcmxkLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "World Economic Forum",
        "option2" : "UNDP",
        "option3" : "The Economist",
        "option4" : "UN-Habitat"
      }
    },
    {
      "index" : 91,
      "question" : "Consider the following statements regarding Primary Agricultural Credit Societies(PACS)\n\t1. PACS is a village-level institution that works directly with rural residents.\n\t2. PACS are the highest unit in a three-tier structure under co-operative credit society.\n\t3. PACS encourages agriculturists to save, accepts deposits from them, makes loans to deservingborrowers, and collects repayments.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5MQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUHJpbWFyeSBBZ3JpY3VsdHVyYWwgQ3JlZGl0IFNvY2lldGllcyAoUEFDUykgdG8gYmUgYnJvdWdodCB1bmRlciBDb21tb24gQmFua2luZyBTb2Z0d2FyZSAoQ0JTKS4gUEFDUzogSXQgaXMgYSB2aWxsYWdlLWxldmVsIGluc3RpdHV0aW9uIHRoYXQgd29ya3MgZGlyZWN0bHkgd2l0aCBydXJhbCByZXNpZGVudHMuIEl0IGVuY291cmFnZXMgYWdyaWN1bHR1cmlzdHMgdG8gc2F2ZSwgYWNjZXB0cyBkZXBvc2l0cyBmcm9tIHRoZW0sIG1ha2VzIGxvYW5zIHRvIGRlc2VydmluZyBib3Jyb3dlcnMsIGFuZCBjb2xsZWN0cyByZXBheW1lbnRzLiBQQUNTIGFyZSB0aGUgbG93ZXN0IHVuaXQgaW4gYSB0aHJlZS10aWVyIHN0cnVjdHVyZTogVGhlIG90aGVyIHR3byB0aWVycyAtIFN0YXRlIENvb3BlcmF0aXZlIEJhbmtzIChTdENCKSBhbmQgRGlzdHJpY3QgQ2VudHJhbCBDb29wZXJhdGl2ZSBCYW5rcyAoRENDQikgLSBoYXZlIGFscmVhZHkgYmVlbiBhdXRvbWF0ZWQgYnkgdGhlIE5BQkFSRCBhbmQgYnJvdWdodCBvbiB0aGUgQ29tbW9uIEJhbmtpbmcgU29mdHdhcmUgKENCUykuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEJlbmVmaXRzOiBDb21wdXRlcmlzYXRpb24gd2lsbCBicmluZyB0cmFuc3BhcmVuY3kgYW5kIGxpbmsgYWxsIGNyZWRpdCBzb2NpZXRpZXMgdG8gYSBjb21tb24gYWNjb3VudGluZyBzeXN0ZW0gRWFjaCBQQUNTIHdpbGwgZ2V0IGFyb3VuZCBScy40IGxha2ggdG8gdXBncmFkZSBpdHMgY2FwYWNpdHkgYW5kIGV2ZW4gb2xkIGFjY291bnRpbmcgcmVjb3JkcyB3aWxsIGJlIGRpZ2l0aXNlZCBhbmQgbGlua2VkIHRvIGNsb3VkLWJhc2VkIHNvZnR3YXJlLiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIFNlcnZpY2UgZGVsaXZlcnk6IERpcmVjdCBCZW5lZml0IFRyYW5zZmVyIChEQlQpLCBJbnRlcmVzdCBTdWJ2ZW50aW9uIFNjaGVtZSAoSVNTKSwgQ3JvcCBJbnN1cmFuY2UgU2NoZW1lIChQTUZCWSksIGFuZCBpbnB1dHMgbGlrZSBmZXJ0aWxpemVycyBhbmQgc2VlZHMgQSBnb3Zlcm5tZW50IHN0YXRlbWVudCBzYWlkIHRoYXQgUEFDUyBhY2NvdW50IGZvciA0MSUgKDMuMDEgY3JvcmUgZmFybWVycykgb2YgdGhlIEtpc2FuIENyZWRpdCBDYXJkIChLQ0MpIGxvYW5zIGdpdmVuIGJ5IGFsbCBlbnRpdGllcyBpbiB0aGUgY291bnRyeQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 and 3 only",
        "option3" : "1 and 3 only",
        "option4" : "1, 2 and 3"
      }
    },
    {
      "index" : 92,
      "question" : "Consider the following statements regarding CAPSTONE Mission\n\t1. It is a microwave oven-sized CubeSat weighing just 125 kg.\n\t2. It is designed to test a unique, elliptical solar orbit known as a near-rectilinear halo orbit(NRHO).\n\t3. It has been developed by NASA.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mg==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogTkFTQSdzIENBUFNUT05FIE1pc3Npb24gTkFTQSBsYXVuY2hlZCBDQVBTVE9ORSwgYSBtaWNyb3dhdmUgb3Zlbi1zaXplZCBDdWJlU2F0IHdlaWdoaW5nIGp1c3QgNTUgcG91bmRzICgyNSBrZykuIENBUFNUT05FIC0gQ2lzbHVuYXIgQXV0b25vbW91cyBQb3NpdGlvbmluZyBTeXN0ZW0gVGVjaG5vbG9neSBPcGVyYXRpb25zIGFuZCBOYXZpZ2F0aW9uIEV4cGVyaW1lbnQsIGlzIGRlc2lnbmVkIHRvIHRlc3QgYSB1bmlxdWUsIGVsbGlwdGljYWwgbHVuYXIgb3JiaXQga25vd24gYXMgYSBuZWFyLXJlY3RpbGluZWFyIGhhbG8gb3JiaXQgKE5SSE8pIHdoaWNoIGlzIHNpZ25pZmljYW50bHkgZWxvbmdhdGVkLCBhbmQgaXMgbG9jYXRlZCBhdCBhIHByZWNpc2UgYmFsYW5jZSBwb2ludCBpbiB0aGUgZ3Jhdml0aWVzIG9mIEVhcnRoIGFuZCB0aGUgTW9vbi4gVGhpcyBvZmZlcnMgc3RhYmlsaXR5IGZvciBsb25nLXRlcm0gbWlzc2lvbnMgbGlrZSBHYXRld2F5LiBIZW5jZSwgYm90aCBzdGF0ZW1lbnQgMSBhbmQgMiBhcmUgaW5jb3JyZWN0LiBDQVBTIChDaXNsdW5hciBBdXRvbm9tb3VzIFBvc2l0aW9uaW5nIFN5c3RlbSkgaXMgQ0FQU1RPTkUncyBhdXRvbm9tb3VzIG5hdmlnYXRpb24gc29mdHdhcmUgSWYgdGVzdGVkIHN1Y2Nlc3NmdWxseSwgdGhlIHNvZnR3YXJlIHdpbGwgYWxsb3cgZnV0dXJlIHNwYWNlY3JhZnQgdG8gZGV0ZXJtaW5lIHRoZWlyIGxvY2F0aW9uIHdpdGhvdXQgaGF2aW5nIHRvIHJlbHkgZXhjbHVzaXZlbHkgb24gRWFydGgtYmFzZWQgdHJhY2tpbmcu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only    UPSCMATERIAL.ONLINE   Test-2: GS Subject  "
      }
    },
    {
      "index" : 93,
      "question" : "Project 17A programme is associated with",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Mw==",
      "description" : "ICAgIFVQU0NNQVRFUklBTC5PTkxJTkUgICBUZXN0LTI6IEdTIFN1YmplY3QgICAgQW5zd2VyIEp1c3RpZmljYXRpb24gOiBQcm9qZWN0IDE3QSBwcm9ncmFtbWUgVGhlIFByb2plY3QgMTdBIHByb2dyYW1tZSB3YXMgYXBwcm92ZWQgYnkgdGhlIEluZGlhbiBHb3Zlcm5tZW50IGluIDIwMTUgdG8gZW5oYW5jZSB0aGUgY29tYmF0IGNhcGFiaWxpdGllcyBvZiB0aGUgSW5kaWFuIE5hdnkuIFRoZSBQcm9qZWN0IDE3QSBpcyBhIGZvbGxvdy1vbiBvZiB0aGUgUHJvamVjdCAxNyBTaGl2YWxpay1jbGFzcyBmcmlnYXRlcy4gVGhlIFByb2plY3QgMTdBIGZyaWdhdGVzIGFyZSBhbHNvIGtub3duIGFzIE5pbGdpcmktY2xhc3Mgc3RlYWx0aCBmcmlnYXRlcy4gSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gUDE3QSBzaGlwcyBoYXZlIGJlZW4gaW5kaWdlbm91c2x5IGRlc2lnbmVkIGJ5IHRoZSBEaXJlY3RvcmF0ZSBvZiBOYXZhbCBEZXNpZ24gKFN1cmZhY2UgU2hpcCBEZXNpZ24gR3JvdXApLiBUaGUgUHJvamVjdCAxN0EgZnJpZ2F0ZSB3aWxsIGJlIHBvd2VyZWQgYnkgY29tYmluZWQgZGllc2VsIGFuZCBnYXMgKENPREFHKSB0eXBlIHByb3B1bHNpb24gc3lzdGVtLiBUaGVzZSBzaGlwcyBoYXZlIHN0ZWFsdGggZmVhdHVyZXMuIFNoaXBzIC0gVGhlIHNoaXBzIHdpbGwgYmUgbmFtZWQgYWZ0ZXIgdGhlIG5hbWVzIG9mIGhpbGwgcmFuZ2VzIGluIEluZGlhIC0gSU5TIE5pbGdpcmksIElOUyBIaW1naXJpLCBJTlMgVWRheWdpcmksIElOUyBEdW5hZ2lyaSwgSU5TIFRhcmFnaXJpLCBJTlMgVmluZGh5YWdpcmkgYW5kIElOUyBNYWhlbmRyYWdpcmku",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Nilgiri-class stealth frigates",
        "option2" : "Arihant-class_nuclear submarine",
        "option3" : "Kalvari class Scorpène submarines",
        "option4" : "Visakhapatnam class Stealth guided missile destroyer"
      }
    },
    {
      "index" : 94,
      "question" : "Consider the following statements regarding CoWIN app\n\t1. CoWIN app is an extension of the Electronic Vaccine Intelligence Network (eVIN).\n\t2. Co-WIN platform is owned by the Ministry of Electronics and Information Technology andhandled by National Informatics Centre.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQ28tV0lOOiBDb1dJTiBhcHAgaXMgYW4gZXh0ZW5zaW9uIG9mIHRoZSBFbGVjdHJvbmljIFZhY2NpbmUgSW50ZWxsaWdlbmNlIE5ldHdvcmsgKGVWSU4pIHRoYXQgcHJvdmlkZXMgcmVhbC10aW1lIGluZm9ybWF0aW9uIG9uIHZhY2NpbmUgc3RvY2tzIGFuZCBzdG9yYWdlIHRlbXBlcmF0dXJlcyBhY3Jvc3MgYWxsIGNvbGQgY2hhaW4gcG9pbnRzIGluIHRoZSBjb3VudHJ5IEl0IGlzIGEgY2xvdWQtYmFzZWQgSVQgcGxhdGZvcm0gYW5kIGl0IGhhbmRsZXMgbWludXRlIGRldGFpbHMgZm9yIEluZGlhJ3MgQ292aWQtMTkgaW1tdW5pemF0aW9uIHByb2dyYW1tZSDvgrcgVGhlIENvLVdJTiBwbGF0Zm9ybSBpcyBvd25lZCBieSB0aGUgTWluaXN0cnkgb2YgSGVhbHRoIGFuZCBGYW1pbHkgV2VsZmFyZSBhbmQgd2FzIGVhcmxpZXIgdGhlIHBsYXRmb3JtIHVzZWQgZm9yIGNvbmR1Y3RpbmcgUHVsc2UgUG9saW8gYW5kIG90aGVyIGNydWNpYWwgaW1tdW5pemF0aW9uIHByb2dyYW1tZXMgYWNyb3NzIHRoZSBjb3VudHJ5LiBIZW5jZSwgc3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiDvgrcgVGhlIE1pbmlzdHJ5IG9mIEVsZWN0cm9uaWNzIGFuZCBJVCBhbG9uZyB3aXRoIHRoZSBOYXRpb25hbCBJbmZvcm1hdGljcyBDZW50cmUgYXJlIGhhbmRsaW5nIHRoZSBiYWNrZW5kIGFuZCB0aGUgdGVjaCBpbmZyYXN0cnVjdHVyZSBmb3IgaXQu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "2 only",
        "option3" : "Both 1 and 2",
        "option4" : "Neither 1 nor 2"
      }
    },
    {
      "index" : 95,
      "question" : "which of the following states is/are Salt being produced?\n\t1. Tamil Nadu\n\t2. Rajasthan\n\t3. Andhra Pradesh\n\t4. Himachal PradeshWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5NQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU3RhdHVzIG9mIFNhbHQgc2VjdG9yIGluIEluZGlhOiBDZW50cmFsIGNvbnRyb2w6IFNhbHQgaXMgdW5kZXIgdGhlIFVuaW9uIExpc3Qgb2YgdGhlIDd0aCBzY2hlZHVsZSBJbmRpYSBpcyB0aGUgd29ybGQncyB0aGlyZC1sYXJnZXN0IHByb2R1Y2VyIG9mIHNhbHQsIGFmdGVyIFVTIGFuZCBDaGluYS4gU2FsdCBpcyBtYWlubHkgcHJvZHVjZWQgdGhyb3VnaCBhIHNvbGFyLWV2YXBvcmF0aW9uIHByb2Nlc3Mgb2Ygc2Vhd2F0ZXIuIE5vZGFsIEFnZW5jeTogU2FsdCBDb21taXNzaW9uZXIncyBPcmdhbmlzYXRpb24gKGFuIGF0dGFjaGVkIE9mZmljZSB1bmRlciB0aGUgTWluaXN0cnkgb2YgQ29tbWVyY2UgJiBJbmR1c3RyeSkgT2NjdXBhdGlvbmFsIEhlYWx0aCBoYXphcmRzIHJlbGF0ZWQgdG8gc2FsdDogQ2hyb25pYyBkZXJtYXRpdGlzIChza2luIHVsY2VycyksIHZpc2lvbiBsb3NzIFN0YXRlczogR3VqYXJhdCBhY2NvdW50cyBmb3IgYWxtb3N0IDgwJSBvZiB0aGUgY291bnRyeSdzIHByb2R1Y3Rpb24sIGZvbGxvd2VkIGJ5IFRhbWlsIE5hZHUsIFJhamFzdGhhbiAodGhyb3VnaCBtaW5pbmcpLCBBbmRocmEgUHJhZGVzaCwgTWFoYXJhc2h0cmEsIE9kaXNoYSBhbmQgSGltYWNoYWwgUHJhZGVzaCAodGhyb3VnaCBtaW5pbmcpLiBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one state is correct",
        "option2" : "Only two states are correct",
        "option3" : "Only three states are correct",
        "option4" : "All four states are correct"
      }
    },
    {
      "index" : 96,
      "question" : "Sao Joao Festival is celebrated in",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Ng==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogU2FvIEpvYW8gRmVzdGl2YWwgICBTYW8gSm9hbyBGZXN0aXZhbCBpcyBjZWxlYnJhdGVkIGluIEdvYSBldmVyeSBtb25zb29uIG9uIEp1bmUgMjR0aC4gICAgVVBTQ01BVEVSSUFMLk9OTElORSAgIFRlc3QtMjogR1MgU3ViamVjdCAgICBTaW9saW0gVmlsbGFnZSBpbiBOb3J0aCBHb2EgaXMgdGhlIGVwaWNlbnRlciBvZiB0aGUgU2FvIEpvYW8gRmVzdGl2YWwuIFRoZSBTYW8gSm9hbyBGZXN0aXZhbCBpcyBkZWRpY2F0ZWQgdG8gU3QuIEpvaG4gdGhlIEJhcHRpc3QuIFRoZSBtYWpvciBkcmF3IG9mIHRoZSBmZWFzdCBpcyB0aGUgd2F0ZXIgYm9kaWVzIC0gd2VsbHMsIHBvbmRzLCBmb3VudGFpbnMsIHJpdmVycywgcml2dWxldHMgLSBpbiB3aGljaCB0aGUgcmV2ZWxsZXJzIHRha2UgdGhlIGxlYXAgb2Ygam95LiBKdW1waW5nIGludG8gdGhlIHdhdGVyIGJvZGllcyBjb21tZW1vcmF0ZXMgdGhlIGxlYXAgb2Ygam95IHRvb2sgYnkgU3QgSm9obiBpbiB0aGUgd29tYiBvZiBoaXMgbW90aGVyIFN0IEVsaXphYmV0aCwgd2hlbiBWaXJnaW4gTWFyeSB0b2xkIEVsaXphYmV0aCBhYm91dCB0aGUgYmlydGggb2YgQ2hyaXN0LiBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Kerala",
        "option2" : "Goa",
        "option3" : "Pondicherry",
        "option4" : "Nagaland"
      }
    },
    {
      "index" : 97,
      "question" : "Consider the following statements regarding the UN peacekeeping mission\n\t1. United Nations Peacekeeping is a joint effort between the Department of Peace Operations andthe Department of Operational Support.\n\t2. Every peacekeeping mission is authorized by the UN General Assembly.\n\t3. The first UN peacekeeping mission was deployed during the Korean war.UPSCMATERIAL.ONLINETest-2: GS SubjectWhich of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5Nw==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogV2hhdCBpcyBwZWFjZWtlZXBpbmc/IFVuaXRlZCBOYXRpb25zIFBlYWNla2VlcGluZyBpcyBhIGpvaW50IGVmZm9ydCBiZXR3ZWVuIHRoZSBEZXBhcnRtZW50IG9mIFBlYWNlIE9wZXJhdGlvbnMgYW5kIHRoZSBEZXBhcnRtZW50IG9mIE9wZXJhdGlvbmFsIFN1cHBvcnQuIEV2ZXJ5IHBlYWNla2VlcGluZyBtaXNzaW9uIGlzIGF1dGhvcml6ZWQgYnkgdGhlIFNlY3VyaXR5IENvdW5jaWwuIEhlbmNlLCBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBmaXJzdCBVTiBwZWFjZWtlZXBpbmcgbWlzc2lvbiB3YXMgZXN0YWJsaXNoZWQgb24gMTk0OCwgTWF5IDI5IHdoZW4gdGhlIFNlY3VyaXR5IENvdW5jaWwgZGVwbG95ZWQgYSBzbWFsbCBudW1iZXIgb2YgVU4gbWlsaXRhcnkgb2JzZXJ2ZXJzIHRvIHRoZSBNaWRkbGUgRWFzdCB0byBmb3JtIHRoZSBVbml0ZWQgTmF0aW9ucyBUcnVjZSBTdXBlcnZpc2lvbiBPcmdhbml6YXRpb24gKFVOVFNPKSB3aXRoIHRoZSBvYmplY3RpdmUgdG8gbW9uaXRvciB0aGUgQXJtaXN0aWNlIEFncmVlbWVudCBiZXR3ZWVuIElzcmFlbCBhbmQgaXRzIEFyYWIgbmVpZ2hib3Vycy4gSGVuY2UsIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "None of the statements are correct",
        "option2" : "Only one statement is correct",
        "option3" : "Only two statements are correct",
        "option4" : "All three statements are correct"
      }
    },
    {
      "index" : 98,
      "question" : "Which of the following statement regarding Raja Ram Mohan Roy is correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5OA==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUmFqYSBSYW0gTW9oYW4gUm95OiBIZSBpcyBwb3B1bGFybHkgcmVtZW1iZXJlZCBhcyB0aGUgZmF0aGVyIG9mIEluZGlhbiByZW5haXNzYW5jZS4gSGUgd2FzIGJvcm4gb24gMjIgTWF5LCAxNzcyIGluIFJhZGhhbmFnYXIgKEJlbmdhbCBQcmVzaWRlbmN5KS4gSGUgcmVwcmVzZW50ZWQgQWtiYXIgSUkgaW4gRW5nbGFuZCB3aGVyZSBoZSBwbGVhZGVkIGZvciBoaXMgcGVuc2lvbiBhbmQgYWxsb3dhbmNlcy4gQWtiYXIgSUkgYXdhcmRlZCBoaW0gdGhlIHRpdGxlICdSYWphJy4gU29jaWFsIENvbnRyaWJ1dGlvbnM6IFJhamEgUmFtIE1vaGFuIFJveSB3YXMgYSBjcnVzYWRlciBvZiB3b21lbiByaWdodHMuIEhlIHN0b29kIGFnYWluc3QgdGhlIHByYWN0aWNlIG9mIHNhdGkgYW5kIFRoZSBBYm9saXRpb24gb2YgU2F0aXMgQWN0LCAxODI5LCB3YXMgYSByZXN1bHQgb2YgUi5SIE1vaGFuIFJveSdzIGVmZm9ydHMuICBPcmdhbmlzYXRpb25zIGhlIGlzIGFzc29jaWF0ZWQgd2l0aDogU3RhcnRlZCBBdG1peWEgU2FiaGEgaW4gMTgxNCBpbiBvcmRlciB0byBjcnVzYWRlIGFnYWluc3QgaWRvbCB3b3JzaGlwLCBtZWFuaW5nbGVzcyByaXR1YWxzIGFuZCBzdXBlcnN0aXRpb3VzIGJlbGllZnMuIEhlIHNwcmVhZGVkIHRoZSBtb25vdGhlaXN0aWMgaWRlYWxzLiBJbiAxODE3LCBhbG9uZyB3aXRoIERhdmlkIEhhcmUsIGhlIGZvdW5kZWQgdGhlIEhpbmR1IENvbGxlZ2UgYXQgQ2FsY3V0dGEuIFRoZSBDYWxjdXR0YSBVbml0YXJpYW4gQ29tbWl0dGVlLCBqb2ludGx5IGZvdW5kZWQgYnkgV2lsbGlhbSBBZGFtIGFuZCBSYW1tb2h1biBSb3kgaW4gU2VwdGVtYmVyIDE4MjEsIHNvdWdodCB0byBicmluZyB0b2dldGhlciBwcm9taW5lbnQgQnJhaG1pbnMgd2hvIHdlcmUgZnJpZW5kcyBvZiBSb3kncyBhbmQgc3VwcG9ydGVycyBvZiBoaXMgYWdlbmRhIGZvciB0aGUgcHJvbW90aW9uIG9mIHJlbGlnaW91cyBtb25vdGhlaXNtIGFuZCBzb2NpYWwgcmVmb3JtLiBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiBIZSBjcmVhdGVkIHRoZSAnQnJhaG1hIFNhYmhhJyBpbiAxODI4IChzZXQgdXAgd2l0aCBEZWJlbmRyYW5hdGggVGFnb3JlKS4gSW4gMTgyMiwgaGUgc2V0IHVwIHRoZSBBbmdsby1IaW5kdSBzY2hvb2wgd2hpY2ggdGF1Z2h0IG1lY2hhbmljcyBhbmQgVm9sdGFpcmUncyBwaGlsb3NvcGh5LiBJbiAxODI1LCBoZSBzdGFydGVkIHRoZSBWZWRhbnRhIGNvbGxlZ2Ugd2hlcmUgSW5kaWFuIGxlYXJuaW5nLCBhcyB3ZWxsIGFzIHRoZSBXZXN0ZXJuIHNvY2lhbCBhbmQgcGh5c2ljYWwgc2NpZW5jZXMsIHdlcmUgdGF1Z2h0LiBJbiAxODMwLCBoZSBhc3Npc3RlZCBBbGV4YW5kZXIgRHVmZiB0byBzZXQgdXAgdGhlIEdlbmVyYWwgQXNzZW1ibHkncyBJbnN0aXR1dGlvbiwgd2hpY2ggbGF0ZXIgYmVjYW1lIHRoZSBTY290dGlzaCBDaHVyY2ggQ29sbGVnZS4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Bahadur Shah awarded him the title 'Raja'.",
        "option2" : "Raja Ram Mohan Roy founded the Sanskrit College at Calcutta.",
        "option3" : "Raja Ram Mohan Roy was one of the founders of Calcutta Unitarian Committee.",
        "option4" : "He assisted David Hare to set up the General Assembly's Institution, which later became the Scottish Church College."
      }
    },
    {
      "index" : 99,
      "question" : "ADIGRAMS portal is",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXw5OQ==",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogQURJR1JBTVM6IFRoZSBNaW5pc3RyeSBvZiBUcmliYWwgQWZmYWlycyAoTW9UQSkgaGFkIHJlY2VudGx5IG9yZ2FuaXNlZCBhIHdvcmtzaG9wIGluIEpoYXJraGFuZCBvbiBBRElHUkFNUyAoQWRpdmFzaSBHcmFudHMgTWFuYWdlbWVudCBTeXN0ZW0pLiBBRElHUkFNUyBQb3J0YWwgd2lsbCBwcm92aWRlIGEgY2VudHJhbCBkYXRhYmFzZSBmb3IgdGhlIE1pbmlzdHJ5IG9mIFRyaWJhbCBBZmZhaXJzIGFuZCB0aGUgU3RhdGUgVHJpYmFsIERldmVsb3BtZW50LyBXZWxmYXJlIERlcGFydG1lbnQgdG8gYWNjZXNzLCBpbnRlcmFjdCBhbmQgYW5hbHlzZSB1cC10by1kYXRlIHNjaGVtZSB3aXNlIFBoeXNpY2FsIGFuZCBmaW5hbmNpYWwgaW5mb3JtYXRpb24gYW5kIHByb2dyZXNzLiBUaGUgcG9ydGFsIHdpbGwgZW5hYmxlIHRoZSBvZmZpY2lhbHMvc3Rha2Vob2xkZXJzIGF0IHRoZSBDZW50cmFsLCBTdGF0ZSwgRGlzdHJpY3QsIEJsb2NrIGFuZCB2aWxsYWdlIGxldmVsIHRvIGFjY2VzcywgbW9uaXRvciBhbmQgbWVhc3VyZSBwZXJmb3JtYW5jZSBpbiBhIHJlYWwtdGltZSBiYXNpcyBhbmQgdGFrZSBkZWNpc2lvbnMgYWNjb3JkaW5nbHkuIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3Qu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Adivasi Grants Management System",
        "option2" : "Tribal Grievance redressal mechanism",
        "option3" : "Integrated portal to provide one stop access to social programmes for Scheduled Tribes.",
        "option4" : "None of the Above"
      }
    },
    {
      "index" : 100,
      "question" : "Consider the following statements regarding Pradhan Mantri Vaya Vandana Yojana(PMVVY)\n\t1. It is a Pension Scheme exclusively for the senior citizens aged 60 years and above.\n\t2. The scheme allows for premature exit for the treatment of any critical/ terminal illness of self orspouse.\n\t3. General Insurance Corporation of India is the nodal agency to operate this scheme.Which of the statements given above are correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeXwxMDA=",
      "description" : "IEFuc3dlciBKdXN0aWZpY2F0aW9uIDogUHJhZGhhbiBNYW50cmkgVmF5YSBWYW5kYW5hIFlvamFuYSAoUE1WVlkpIGlzIGEgUGVuc2lvbiBTY2hlbWUgYW5ub3VuY2VkIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGV4Y2x1c2l2ZWx5IGZvciB0aGUgc2VuaW9yIGNpdGl6ZW5zIGFnZWQgNjAgeWVhcnMgYW5kIGFib3ZlLiBGb2xsb3dpbmcgYXJlIHRoZSBtYWpvciBiZW5lZml0cyB1bmRlciB0aGUgUHJhZGhhbiBNYW50cmkgVmF5YSBWYW5kYW5hIFlvamFuYSAoUE1WVlkpOiBQZW5zaW9uIGlzIHBheWFibGUgYXQgdGhlIGVuZCBvZiBlYWNoIHBlcmlvZCwgZHVyaW5nIHRoZSBwb2xpY3kgdGVybSBvZiAxMCB5ZWFycywgYXMgcGVyIHRoZSBmcmVxdWVuY3kgb2YgbW9udGhseS8gcXVhcnRlcmx5LyBoYWxmLXllYXJseS8geWVhcmx5IGFzIGNob3NlbiBieSB0aGUgcGVuc2lvbmVyIGF0IHRoZSB0aW1lIG9mIHB1cmNoYXNlLiBUaGUgc2NoZW1lIGlzIGV4ZW1wdGVkIGZyb20gR1NULiAgICBVUFNDTUFURVJJQUwuT05MSU5FICAgVGVzdC0yOiBHUyBTdWJqZWN0ICAgIE9uIHN1cnZpdmFsIG9mIHRoZSBwZW5zaW9uZXIgdG8gdGhlIGVuZCBvZiB0aGUgcG9saWN5IHRlcm0gb2YgMTAgeWVhcnMsIFB1cmNoYXNlIHByaWNlIGFsb25nIHdpdGggZmluYWwgcGVuc2lvbiBpbnN0YWxsbWVudCBzaGFsbCBiZSBwYXlhYmxlLiBUaGUgc2NoZW1lIGFsc28gYWxsb3dzIGZvciBwcmVtYXR1cmUgZXhpdCBmb3IgdGhlIHRyZWF0bWVudCBvZiBhbnkgY3JpdGljYWwvIHRlcm1pbmFsIGlsbG5lc3Mgb2Ygc2VsZiBvciBzcG91c2UuIE9uIHN1Y2ggcHJlbWF0dXJlIGV4aXQsIDk4JSBvZiB0aGUgUHVyY2hhc2UgUHJpY2Ugc2hhbGwgYmUgcmVmdW5kZWQuIE9uIGRlYXRoIG9mIHRoZSBwZW5zaW9uZXIgZHVyaW5nIHRoZSBwb2xpY3kgdGVybSBvZiAxMCB5ZWFycywgdGhlIFB1cmNoYXNlIFByaWNlIHNoYWxsIGJlIHBhaWQgdG8gdGhlIGJlbmVmaWNpYXJ5LiBUaGUgY2VpbGluZyBvZiBtYXhpbXVtIHBlbnNpb24gaXMgZm9yIGEgZmFtaWx5IGFzIGEgd2hvbGUsIHRoZSBmYW1pbHkgd2lsbCBjb21wcmlzZSBvZiBwZW5zaW9uZXIsIGhpcy9oZXIgc3BvdXNlIGFuZCBkZXBlbmRhbnRzLiBUaGUgU2NoZW1lIGNhbiBiZSBwdXJjaGFzZWQgb2ZmbGluZSBhcyB3ZWxsIGFzIG9ubGluZSB0aHJvdWdoIExpZmUgSW5zdXJhbmNlIENvcnBvcmF0aW9uIChMSUMpIG9mIEluZGlhIHdoaWNoIGhhcyBiZWVuIGdpdmVuIHRoZSBzb2xlIHByaXZpbGVnZSB0byBvcGVyYXRlIHRoaXMgU2NoZW1lLiBIZW5jZSwgc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiAgICBVUFNDTUFURVJJQUwuT05MSU5FICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8SGlzdG9yeQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "History",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only",
        "option2" : "1 and 2 only",
        "option3" : "3 only",
        "option4" : "2 and 3 only    UPSCMATERIAL.ONLINE  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "History",
  "year" : "2023"
}
