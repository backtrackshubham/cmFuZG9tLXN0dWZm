{
  "testId" : "raus-2023-prelims-prelims-14",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\raus\\prelims\\raus-2023-prelims-prelims-14.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements about  the Northern Plains:  1. Bhabar is a narrow belt at the end of  the slope of the Shiwalik foothills.  2. Rivers disappear in the Terai zone.  3. Bhangar is composed of old alluvium.  4. Bhur denotes an elevated piece of land  formed accumulation of wind-blown  sands.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwx",
      "description" : "ICBFeHBsYW5hdGlvbjogICBCaGFiYXIgaXMgYSBuYXJyb3cgYmVsdCwgcmFuZ2luZyBiZXR3ZWVuICAgOC0xMCBrbSwgcGFyYWxsZWwgdG8gdGhlIFNoaXdhbGlrIGZvb3RoaWxscyAgIGF0IHRoZSBicmVhay11cCBvZiB0aGUgc2xvcGUuIEFzIGEgcmVzdWx0IG9mICAgdGhpcywgdGhlIHN0cmVhbXMgYW5kIHJpdmVycyBjb21pbmcgZnJvbSAgIHRoZSBtb3VudGFpbnMgZGVwb3NpdCBoZWF2eSBtYXRlcmlhbHMgb2YgICByb2NrcyBhbmQgYm91bGRlcnMsIGFuZCBhdCB0aW1lcywgICBkaXNhcHBlYXIgaW4gdGhpcyB6b25lLiAgICBTb3V0aCBvZiB0aGUgQmhhYmFyIGlzIHRoZSBUZXJhaSBiZWx0LCB3aXRoICAgYW4gYXBwcm94aW1hdGUgd2lkdGggb2YgMTAtMjAga20sIHdoZXJlICAgbW9zdCBvZiB0aGUgc3RyZWFtcyBhbmQgcml2ZXJzIHJlLWVtZXJnZSAgIHdpdGhvdXQgaGF2aW5nIGFueSBwcm9wZXJseSBkZW1hcmNhdGVkICAgY2hhbm5lbCwgdGhlcmVieSwgY3JlYXRpbmcgbWFyc2h5IGFuZCAgIHN3YW1weSBjb25kaXRpb25zLCBrbm93biBhcyB0aGUgVGVyYWkuICAgVGhpcyBoYXMgYSBsdXh1cmlvdXMgZ3Jvd3RoIG9mIG5hdHVyYWwgICB2ZWdldGF0aW9uIGFuZCBob3VzZXMgYSB2YXJpZWQgd2lsZGxpZmUuICAgQmhhbmdhciAob3IgQmFuZ2FyKSBpcyBjb21wb3NlZCBvZiBvbGQgICBhbGx1dml1bSBvZiB0aGUgTWlkZGxlIFBsZWlzdG9jZW5lIEFnZSBhbmQgICBmb3JtcyB0aGUgYWxsdXZpdW0gdGVycmFjZSBhYm92ZSB0aGUgbGV2ZWwgICBvZiB0aGUgZmxvb2QgcGxhaW5zLiBJdCBpcyBvZnRlbiBpbXByZWduYXRlZCAgIHdpdGggY2FsY2FyZW91cyBjb25jcmV0aW9ucywga25vd24gYXMgICBLYW5rYXIuIFJlbW5hbnRzIG9mIHRoZSBCaGFuZ2FyIGFyZSAgIGVyb2RlZCBieSBldmVyeSBjaGFuZ2UgaW4gdGhlIGRpcmVjdGlvbiBvZiAgIHRoZSByaXZlciBjaGFubmVscyBhbmQgYXJlIGJlaW5nIGxldmVsbGVkICAgZG93biBieSB0aGVpciBtZWFuZGVyaW5nIHRlbmRlbmNpZXMuIEl0ICAgbW9zdGx5IG9jY3VwaWVzIHRoZSBQbGVpc3RvY2VuZSB0ZXJyYWNlLCAgIGRhdGluZyBiYWNrIHRvIHRoZSBNaWRkbGUgYW5kIHRoZSBVcHBlciAgIFBsZWlzdG9jZW5lIHBlcmlvZHMuIEl0IGFsc28gY29udGFpbnMgdGhlICAgcmVtYWlucyBvZiBhbmltYWxzLCBsaWtlIHJoaW5vY2Vyb3MsICAgaGlwcG9wb3RhbXVzLCBlbGVwaGFudHMgZXRjLiAgIEtoYWRhciBpcyBjb21wb3NlZCBvZiBuZXdlciBhbGx1dml1bSBhbmQgICBmb3JtcyB0aGUgZmxvb2QgcGxhaW5zIGFsb25nIHRoZSByaXZlciAgIGJhbmtzLiBBIG5ldyBsYXllciBvZiBhbGx1dml1bSBpcyBkZXBvc2l0ZWQgICBieSByaXZlciBmbG9vZCBhbG1vc3QgZXZlcnkgeWVhci4gVGhlc2UgICBkZXBvc2l0cyBhcmUgbm9ybWFsbHkgY29uZmluZWQgdG8gdGhlICAgdmljaW5pdHkgb2YgdGhlIHByZXNlbnQgcml2ZXIgY2hhbm5lbHMuIFRoZSAgIGNsYXlzIGhhdmUgbGVzcyBLYW5rYXIgYW5kIHRoZSBvcmdhbmljICAgcmVtYWlucyBlbnRvbWJlZCBpbiB0aGVtIGJlbG9uZyB0byB0aGUgICBzdGlsbCBsaXZpbmcgc3BlY2llcy4gS2hhZGFyIGltcGVyY2VwdGlibHkgICBtZXJnZXMgaW50byB0aGUgZGVsdGFpYyBhbmQgb3RoZXIgICBhY2N1bXVsYXRpb25zIG9mIHRoZSBwcmUtaGlzdG9yaWMgdGltZXMuICAgUmVoIG9yIEthbGxhciBjb21wcmlzZXMgYmFycmVuIHNhbGluZSAgIGVmZmxvcmVzY2VuY2Ugb2YgZHJpZXIgYXJlYXMgaW4gVXR0YXIgUHJhZGVzaCAgIGFuZCBIYXJ5YW5hLiAgICBCaHVyIGRlbm90ZXMgYW4gZWxldmF0ZWQgcGllY2Ugb2YgbGFuZCAgIHNpdHVhdGVkIGFsb25nIHRoZSBiYW5rcyBvZiB0aGUgR2FuZ2EgICByaXZlciwgZXNwZWNpYWxseSBpbiB0aGUgdXBwZXIgR2FuZ2EtICBZYW11bmEgZG9hYi4gVGhpcyBoYXMgYmVlbiBmb3JtZWQgZHVlIHRvICAgdGhlIGFjY3VtdWxhdGlvbiBvZiB3aW5kLWJsb3duIHNhbmRzICAgZHVyaW5nIHRoZSBob3QgZHJ5IG1vbnRocyBvZiB0aGUgeWVhci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1, 3 and 4 only  ",
        "option4" : " 1 and 4 only   "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following pairs:  1. Aakal Wood fossils  park  2. Brahmsar Marine  deposits  3. Manipur Molasse  Basin  4. Glacial deposits  embedded with  moraines  Karewas  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwy",
      "description" : "ICBFeHBsYW5hdGlvbjogICBJdCBpcyBiZWxpZXZlZCB0aGF0IGR1cmluZyB0aGUgTWVzb3pvaWMgRXJhLCAgIHRoZSBkZXNlcnQgcmVnaW9uIHdhcyB1bmRlciB0aGUgc2VhLiBUaGlzICAgY2FuIGJlIGNvcnJvYm9yYXRlZCBieSB0aGUgZXZpZGVuY2UgICBhdmFpbGFibGUgYXQgdGhlIHdvb2QgZm9zc2lscyBwYXJrcyBhdCBBYWthbCAgIGFuZCBtYXJpbmUgZGVwb3NpdHMgYXJvdW5kIEJyYWhtYXNhciwgICBuZWFyIEphaXNhbG1lci4gICAgTWl6b3JhbSwgd2hpY2ggaXMgYWxzbyBrbm93biBhcyB0aGUgICAnTW9sYXNzZSBCYXNpbicsIGlzIG1hZGUgdXAgb2Ygc29mdCAgIHVuY29uc29saWRhdGVkIGRlcG9zaXRzLiAgIEthcmV3YXMgYXJlIHRoZSB0aGljayBkZXBvc2l0cyBvZiBnbGFjaWFsICAgY2xheSBhbmQgb3RoZXIgbWF0ZXJpYWxzIGVtYmVkZGVkIHdpdGggICBtb3JhaW5lcy4gVGhlIEthc2htaXIgSGltYWxheWFzIGFyZSBhbHNvICAgZmFtb3VzIGZvciB0aGUgS2FyZXdhIGZvcm1hdGlvbnMsIHdoaWNoICAgYXJlIHVzZWZ1bCBmb3IgdGhlIGN1bHRpdmF0aW9uIG9mIFphZnJhbiwgYSAgIGxvY2FsIHZhcmlldHkgb2Ygc2FmZnJvbi4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " Only three pairs  ",
        "option4" : " All Four Pairs   "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements:   1. Dhrian refers to the rocky part of the  desert.  2. Barchans are crescent-shaped dunes  formed by wind action.  3. Rohi refers to fertile tracts in the areas  lying to the east of the Aravalli in  Rajasthan.  4. Underlying rock structure of the desert  is an extension of the Peninsular  Plateau.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwz",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUbyB0aGUgbm9ydGgtd2VzdCBvZiB0aGUgQXJhdmFsbGkgaGlsbHMgbGllcyAgIHRoZSBHcmVhdCBJbmRpYW4gRGVzZXJ0LiBJdCBpcyBhIGxhbmQgb2YgICB1bmR1bGF0aW5nIHRvcG9ncmFwaHksIGRvdHRlZCB3aXRoICAgbG9uZ2l0dWRpbmFsIGR1bmVzIGFuZCBiYXJjaGFucy4gVGhlICAgZGVzZXJ0IHByb3BlciBpcyBjYWxsZWQgTWFydXN0aGFsaSBhbmQgICAgYWNjb3VudHMgZm9yIGdyZWF0ZXIgcGFydCBvZiB0aGUgTWFyd2FyICAgcGxhaW4uICAgIFRob3VnaCB0aGUgdW5kZXJseWluZyByb2NrIHN0cnVjdHVyZSBvZiAgIHRoZSBkZXNlcnQgaXMgYW4gZXh0ZW5zaW9uIG9mIHRoZSBQZW5pbnN1bGFyICAgUGxhdGVhdSwgeWV0LCBkdWUgdG8gZXh0cmVtZSBhcmlkICAgY29uZGl0aW9ucywgaXRzIHN1cmZhY2UgZmVhdHVyZXMgaGF2ZSBiZWVuICAgY2FydmVkIGJ5IHBoeXNpY2FsIHdlYXRoZXJpbmcgYW5kIHdpbmQgICBhY3Rpb25zLiBTb21lIG9mIHRoZSB3ZWxsIHByb25vdW5jZWQgICBkZXNlcnQgbGFuZCBmZWF0dXJlcyBwcmVzZW50IGhlcmUgYXJlICAgbXVzaHJvb20gcm9ja3MsIHNoaWZ0aW5nIGR1bmVzIGFuZCBvYXNpcyAgIChtb3N0bHkgaW4gaXRzIHNvdXRoZXJuIHBhcnQpLiAgIEluIGdlbmVyYWwsIHRoZSBlYXN0ZXJuIHBhcnQgb2YgdGhlICAgTWFydXN0aGFsaSBpcyByb2NreSwgd2hpbGUgaXRzIHdlc3Rlcm4gICBwYXJ0IGlzIGNvdmVyZWQgYnkgc2hpZnRpbmcgc2FuZCBkdW5lcywgICBsb2NhbGx5IGtub3duIGFzIHRoZSBEaHJpYW4uIFRoZSBlYXN0ZXJuICAgcGFydCBvZiB0aGUgVGhhciBEZXNlcnQsIHVwdG8gdGhlIEFyYXZhbGxpICAgUmFuZ2UsIGlzIGEgc2VtaS1hcmlkIHBsYWluLCB3aGljaCBpcyBrbm93biAgIGFzIFJhamFzdGhhbiBCYWdhci4gSXQgcnVucyBpbiBhIG5vcnRoLWVhc3QgICB0byBzb3V0aC13ZXN0IGRpcmVjdGlvbiBmcm9tIHRoZSBlZGdlIG9mIHRoZSAgIEFyYXZhbGxpIGluIHRoZSBlYXN0IHRvIHRoZSB3ZXN0LiBJdCBpcyAgIGRyYWluZWQgYnkgYSBudW1iZXIgb2Ygc2hvcnQgc2Vhc29uYWwgICBzdHJlYW1zIG9yaWdpbmF0aW5nIGZyb20gdGhlIEFyYXZhbGxpICAgYW5kIHN1cHBvcnRzIGFncmljdWx0dXJlIGluIHNvbWUgICBwYXRjaGVzIG9mIGZlcnRpbGUgdHJhY3RzLCBjYWxsZWQgUm9oaS4gICBFdmVuIEx1bmksIHdoaWNoIGlzIGEgc2Vhc29uYWwgc3RyZWFtLCAgIHdoaWNoIGZsb3dzIHRvd2FyZHMgdGhlIHNvdXRoLXdlc3QgdG8gdGhlICAgUmFubiBvZiBLdXRjaC4gVGhlIHRyYWN0IG5vcnRoIG9mIHRoZSBMdW5pICAgaXMga25vd24gYXMgVGhhbGkgb3Igc2FuZHkgcGxhaW4uICAgIEJhcmNoYW5zIGR1bmVzIGFyZSBjcmVzY2VudC1zaGFwZWQgICBkdW5lcy4gQmFyY2hhbnMgZmFjZSB0aGUgd2luZCwgYXBwZWFyaW5nICAgY29udmV4IGFuZCBhcmUgcHJvZHVjZWQgYnkgd2luZCBhY3Rpb24gICBwcmVkb21pbmFudGx5IGZyb20gb25lIGRpcmVjdGlvbi4gVGhleSBhcmUgICB2ZXJ5IGNvbW1vbiBsYW5kZm9ybXMgaW4gdGhlIHNhbmR5ICAgZGVzZXJ0cyBhbGwgb3ZlciB0aGUgd29ybGQgYW5kIGFyZSBhcmMtICBzaGFwZWQsIG1hcmtlZGx5IGFzeW1tZXRyaWNhbCBpbiBjcm9zcy0gIHNlY3Rpb24sIHdpdGggYSBnZW50bGUgc2xvcGUgZmFjaW5nIHRvd2FyZCAgIHRoZSB3aW5kIHNhbmQgcmlkZ2UsIGNvbXByaXNpbmcgd2VsbC1zb3J0ZWQgICBzYW5kLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 2 and 3 only   "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements about  the Lakshadweep Islands:  1. The Nine-Degree Channel separates the  Minicoy Island from Maldives.  2. These islands have been built by coral  deposits.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTGFrc2hhZHdlZXAgSXNsYW5kczogVGhlIGlzbGFuZHMgb2YgICB0aGUgQXJhYmlhbiBTZWEgaW5jbHVkZSB0aGUgTGFrc2hhZHdlZXAgICBhbmQgdGhlIE1pbmljb3kuIFRoZXNlIGlzbGFuZHMgYXJlIGxvY2F0ZWQgICBhdCBhIGRpc3RhbmNlIG9mIDI4MCBrbS00ODAga20gb2ZmIHRoZSAgIEtlcmFsYSBjb2FzdC4gVGhlIGVudGlyZSBpc2xhbmQgZ3JvdXAgaXMgICBidWlsdCBvZiBjb3JhbCBkZXBvc2l0cy4gVGhlcmUgYXJlICAgYXBwcm94aW1hdGVseSAzNiBpc2xhbmRzLCBvZiB3aGljaCAxMSBhcmUgICBpbmhhYml0ZWQuICAgVGhlIGlzbGFuZHMgb2YgdGhpcyBhcmNoaXBlbGFnbyBoYXZlIHN0b3JtICAgYmVhY2hlcyBjb25zaXN0aW5nIG9mIHVuY29uc29saWRhdGVkICAgcGViYmxlcywgc2hpbmdsZXMsIGNvYmJsZXMgYW5kIGJvdWxkZXJzIG9uICAgdGhlIGVhc3Rlcm4gc2VhYm9hcmQuICAgVGhlIHNvdXRoZXJuLW1vc3QgaXNsYW5kIG9mIHRoZSAgIExha3NoYWR3ZWVwIGdyb3VwIG9mIGlzbGFuZHMgaXMgdGhlICAgTWluaWNveSBJc2xhbmQsIHdoaWNoIGlzIHNlcGFyYXRlZCBmcm9tIHRoZSAgIHJlc3Qgb2YgdGhlIGlzbGFuZHMgYnkgdGhlIDktRGVncmVlICAgQ2hhbm5lbC4gICBUaGUgRWlnaHQtRGVncmVlIENoYW5uZWwgc2VwYXJhdGVzIHRoZSAgIE1pbmljb3kgSXNsYW5kIChUaGUgTGFrc2hkd2VlcCBJc2xhbmRzKSAgIGZyb20gdGhlIE1hbGRpdmVzIElzbGFuZHMuICAgVGhlIENoYWdvcy1MYWNjYWRpdmUgUmlkZ2UgaW4gdGhlIHdlc3Qgb2YgICBJbmRpYSBpbiB0aGUgSW5kaWFuIE9jZWFuIGZvcm1zIHRoZSBiYXNlIG9mICAgTGFjY2FkaXZlLCBNYWxkaXZlcyBhbmQgdGhlIENoYWdvcyAgIEFyY2hpcGVsYWdvLiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements about  the Andaman and Nicobar Islands:  1. All islands, part of the Andaman and  Nicobar Islands group, are the elevated  portion of the submarine mountains.   2. The Coco Channel separates the  Andaman and Nicobar Islands from  Indonesia.  3. The Great Channel separates the  Andaman and Nicobar Islands from  Myanmar.  Which of the statements given above are  incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw1",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaG91Z2ggbW9zdCBpc2xhbmRzLCB3aGljaCBmb3JtIHRoZSBwYXJ0IG9mIHRoZSBBbmRhbWFuIGFuZCBOaWNvYmFyIElzbGFuZHMsIGFyZSBhbiAgIGVsZXZhdGVkIHBvcnRpb24gb2YgdGhlIHN1Ym1hcmluZSBtb3VudGFpbnMuIEhvd2V2ZXIsIHNvbWUgc21hbGxlciBpc2xhbmRzIGFyZSB2b2xjYW5pYyBpbiAgIG9yaWdpbi4gVGhlIEJhcnJlbiBJc2xhbmQsIHRoZSBvbmx5IGFjdGl2ZSB2b2xjYW5vIGluIEluZGlhLCBpcyBhbHNvIHNpdHVhdGVkIGluIHRoZSBBbmRhbWFuICAgSXNsYW5kcy4gICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements about  the Coastal Plains:  1. The Eastern Coastal Plain is narrower  and has more natural ports as  compared to the Western Coastal  Plains.   2. Kayals refer to the backwater channel  found all along the Western Coastal  Plains.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw2",
      "description" : "ICBFeHBsYW5hdGlvbjogICBPbiB0aGUgYmFzaXMgb2YgdGhlIGxvY2F0aW9uIGFuZCBhY3RpdmUgICBnZW9tb3JwaG9sb2dpY2FsIHByb2Nlc3NlcywgdGhlIENvYXN0YWwgICBQbGFpbnMgY2FuIGJlIGJyb2FkbHkgZGl2aWRlZCBpbnRvIHR3bzogKGkpICAgVGhlIFdlc3Rlcm4gQ29hc3RhbCBQbGFpbnM7IGFuZCAoaWkpIFRoZSAgIEVhc3Rlcm4gQ29hc3RhbCBQbGFpbnMuICAgICBUaGUgV2VzdGVybiBDb2FzdGFsIFBsYWlucyBhcmUgYW4gZXhhbXBsZSAgIG9mIHN1Ym1lcmdlZCBjb2FzdGFsIHBsYWlucy4gSXQgaXMgYmVsaWV2ZWQgICB0aGF0IHRoZSBjaXR5IG9mIER3YXJha2EsIHdoaWNoIHdhcyBvbmNlIGEgICBwYXJ0IG9mIHRoZSBJbmRpYW4gbWFpbmxhbmQsIHNpdHVhdGVkIGFsb25nICAgdGhlIHdlc3QgY29hc3QsIGlzIHN1Ym1lcmdlZCB1bmRlciB3YXRlci4gICBCZWNhdXNlIG9mIHRoaXMgc3VibWVyZ2VuY2UsIGl0IGlzIGEgbmFycm93ICAgYmVsdCBhbmQgcHJvdmlkZXMgbmF0dXJhbCBjb25kaXRpb25zIGZvciB0aGUgICBkZXZlbG9wbWVudCBvZiB0aGUgcG9ydHMgYW5kIGhhcmJvdXJzLiAgIEthbmRsYSwgTWF6YWdhb24sIEpMTiBQb3J0IE5hdmhhIFNoZXZhLCAgIE1hcm1hZ2FvLCBNYW5nYWxvcmUsIENvY2hpbiwgZXRjLiwgYXJlICAgc29tZSBvZiB0aGUgaW1wb3J0YW50IG5hdHVyYWwgcG9ydHMgbG9jYXRlZCAgIGFsb25nIHRoZSB3ZXN0IGNvYXN0LiAgICBFeHRlbmRpbmcgZnJvbSB0aGUgR3VqYXJhdCBjb2FzdCBpbiB0aGUgICBub3J0aCB0byB0aGUgS2VyYWxhIGNvYXN0IGluIHRoZSBzb3V0aCwgdGhlICAgd2VzdGVybiBjb2FzdCBtYXkgYmUgZGl2aWRlZCBpbnRvIHRoZSAgIGZvbGxvd2luZyBkaXZpc2lvbnM6IFRoZSBLYWNoY2hoIGFuZCB0aGUgICBLYXRoaWF3YXIgY29hc3RzIGluIEd1amFyYXQ7IHRoZSBLb25rYW4gICBjb2FzdCBpbiBNYWhhcmFzaHRyYTsgYW5kIHRoZSBHb2FuIGNvYXN0ICAgYW5kIHRoZSBNYWxhYmFyIGNvYXN0IGluIEthcm5hdGFrYSBhbmQgICBLZXJhbGEsIHJlc3BlY3RpdmVseS4gVGhlIFdlc3Rlcm4gQ29hc3RhbCAgIFBsYWlucyBhcmUgbmFycm93IGluIHRoZSBtaWRkbGUgYW5kIGdldCAgIGJyb2FkZXIgdG93YXJkcyBub3J0aCBhbmQgc291dGguIFRoZSAgIHJpdmVycyBmbG93aW5nIHRocm91Z2ggdGhpcyBjb2FzdGFsIHBsYWluIGRvICAgbm90IGZvcm0gYW55IGRlbHRhLiBUaGUgTWFsYWJhciBjb2FzdCBoYXMgICBnb3QgY2VydGFpbiBkaXN0aW5ndWlzaGluZyBmZWF0dXJlcyBpbiB0aGUgICBmb3JtIG9mICdLYXlhbHMnIChiYWNrd2F0ZXJzKSwgd2hpY2ggYXJlICAgdXNlZCBmb3IgZmlzaGluZywgaW5sYW5kIG5hdmlnYXRpb24gYW5kICAgYWxzbyBkdWUgdG8gaXRzIHNwZWNpYWwgYXR0cmFjdGlvbiBmb3IgdGhlICAgdG91cmlzdHMuIEV2ZXJ5IHllYXIgdGhlIGZhbW91cyBOZWhydSAgIFRyb3BoeSBWYWxsYW1rYWxpIChCb2F0IHJhY2UpIGlzIGhlbGQgaW4gdGhlICAgUHVubmFtYWRhIEtheWFsIGluIEtlcmFsYS4gICAgQXMgY29tcGFyZWQgdG8gdGhlIFdlc3Rlcm4gQ29hc3RhbCBQbGFpbiwgICB0aGUgRWFzdGVybiBDb2FzdGFsIFBsYWluIGlzIGJyb2FkZXIgYW5kIGlzICAgYW4gZXhhbXBsZSBvZiBhbiBlbWVyZ2VudCBjb2FzdC4gVGhlcmUgYXJlICAgd2VsbC1kZXZlbG9wZWQgZGVsdGFzIGhlcmUsIGZvcm1lZCBieSB0aGUgICByaXZlcnMgZmxvd2luZyBlYXN0d2FyZHMgaW50byB0aGUgQmF5IG9mICAgQmVuZ2FsLiBUaGVzZSBpbmNsdWRlIHRoZSBkZWx0YXMgb2YgdGhlICAgTWFoYW5hZGksIHRoZSBHb2RhdmFyaSwgdGhlIEtyaXNobmEgYW5kICAgdGhlIEthdmVyaS4gQmVjYXVzZSBvZiBpdHMgZW1lcmdlbnQgbmF0dXJlLCAgIGl0IGhhcyBsZXNzIG51bWJlciBvZiBwb3J0cyBhbmQgaGFyYm91cnMuICAgVGhlIGNvbnRpbmVudGFsIHNoZWxmIGV4dGVuZHMgdXAgdG8gNTAwIGttICAgaW50byB0aGUgc2VhLCB3aGljaCBtYWtlcyBpdCBkaWZmaWN1bHQgZm9yIHRoZSAgIGRldmVsb3BtZW50IG9mIGdvb2QgcG9ydHMgYW5kIGhhcmJvdXJzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements about  the Indian Peninsula:  1. The North-Eastern Plateau is an  extension of the main Peninsular  Plateau.  2. The Aravalli Range is an escarpment  passing ending near Ahmedabad in  Gujarat.  3. The Satpura Range forms a continuous  range running south of the Narmada  River.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw3",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQXJhdmFsbGkgUmFuZ2UgaXMgYSBtb3VudGFpbiByYW5nZSAgIGluIHRoZSBOb3J0aGVybi1XZXN0ZXJuIEluZGlhLCBydW5uaW5nICAgYXBwcm94aW1hdGVseSA2NzAga20gKDQzMCBtaSkgaW4gYSBzb3V0aC0gIHdlc3QgZGlyZWN0aW9uLCBzdGFydGluZyBuZWFyIERlbGhpLCBwYXNzaW5nICAgdGhyb3VnaCBzb3V0aGVybiBIYXJ5YW5hLCBSYWphc3RoYW4sIGFuZCAgIGVuZGluZyBpbiBBaG1lZGFiYWQgKEd1amFyYXQpLiBUaGUgICBoaWdoZXN0IHBlYWsgaXMgR3VydSBTaGlraGFyIG9uIE1vdW50ICAgQWJ1IGF0IDEsNzIyIG1ldHJlcyAoNSw2NTAgZnQpLiBUaGUgQXJhdmFsbGkgICBSYW5nZSBpcyBhcmd1YWJseSB0aGUgb2xkZXN0IGdlb2xvZ2ljYWwgICBmZWF0dXJlIG9uIHRoZSBFYXJ0aCwgaGF2aW5nIGl0cyBvcmlnaW4gaW4gICB0aGUgUHJvdGVyb3pvaWMgRXJhLiAgIFRoZSBTYXRwdXJhIFJhbmdlIGlzIGZvcm1lZCBieSBhIHNlcmllcyBvZiAgIHNjYXJwZWQgcGxhdGVhdXMgb24gdGhlIHNvdXRoLCBnZW5lcmFsbHkgYXQgICBhbiBlbGV2YXRpb24gdmFyeWluZyBiZXR3ZWVuIDYwMC05MDAgbSAgIGFib3ZlIHRoZSBtZWFuIHNlYSBsZXZlbC4gVGhpcyBmb3JtcyB0aGUgICBub3J0aGVybi1tb3N0IGJvdW5kYXJ5IG9mIHRoZSBEZWNjYW4gICBQbGF0ZWF1LiBJdCBpcyBhIGNsYXNzaWMgZXhhbXBsZSBvZiB0aGUgICByZWxpY3QgbW91bnRhaW5zLCB3aGljaCBhcmUgaGlnaGx5ICAgZGVudWRlZCBhbmQgZm9ybSBkaXNjb250aW51b3VzIHJhbmdlcy4gICBUaGUgTm9ydGgtZWFzdGVybiBQbGF0ZWF1IGlzIGFuIGV4dGVuc2lvbiAgIG9mIHRoZSBtYWluIFBlbmluc3VsYXIgUGxhdGVhdS4gSXQgaXMgICBiZWxpZXZlZCB0aGF0IGR1ZSB0byB0aGUgZm9yY2UgZXhlcnRlZCBieSB0aGUgICBub3J0aC1lYXN0d2FyZCBtb3ZlbWVudCBvZiB0aGUgSW5kaWFuICAgUGxhdGUgYXQgdGhlIHRpbWUgb2YgdGhlIEhpbWFsYXlhbiBvcmlnaW4sIGEgICBodWdlIGZhdWx0IHdhcyBjcmVhdGVkIGJldHdlZW4gdGhlICAgUmFqbWFoYWwgSGlsbHMgYW5kIHRoZSBNZWdoYWxheWEgUGxhdGVhdS4gICBMYXRlciwgdGhpcyBkZXByZXNzaW9uIGdvdCBmaWxsZWQgdXAgYnkgdGhlICAgZGVwb3NpdGlvbiBhY3Rpdml0eSBvZiBudW1lcm91cyByaXZlcnMuICAgVG9kYXksIHRoZSBNZWdoYWxheWEgUGxhdGVhdSBhbmQgdGhlICAgS2FyYmkgQW5nbG9uZyBQbGF0ZWF1IHN0YW5kIGRldGFjaGVkIGZyb20gICB0aGUgbWFpbiBQZW5pbnN1bGFyIEJsb2NrLiBUaGUgTWVnaGFsYXlhICAgUGxhdGVhdSBpcyBmdXJ0aGVyIHN1Yi1kaXZpZGVkIGludG8gdGhyZWU6IChpKSAgIFRoZSBHYXJvIEhpbGxzOyAoaWkpIFRoZSBLaGFzaSBIaWxsczsgYW5kIChpaWkpICAgVGhlIEphaW50aWEgSGlsbHMsIG5hbWVkIGFmdGVyIHRoZSB0cmliYWwgICBncm91cHMgaW5oYWJpdGluZyB0aGlzIHJlZ2lvbi4gQW4gZXh0ZW5zaW9uICAgb2YgdGhpcyBpcyBhbHNvIHNlZW4gaW4gdGhlIEthcmJpIEFuZ2xvbmcgICBIaWxscyBvZiBBc3NhbS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements about  the Western Ghats:  1. The Western Ghats pass through the  states of Gujarat, Maharashtra, Goa,  Karnataka and Kerala only.  2. The Western Ghats have sharp slopes  on both the eastern and the western  sides, and appear like a tableland.  3. Kudremukh is the highest peak in the  Western Ghats, north of Kerala.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw4",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgV2VzdGVybiBHaGF0czogVGhlIFdlc3Rlcm4gR2hhdHMgICBwYXNzIHRocm91Z2ggdGhlIHN0YXRlcyBvZiBHdWphcmF0LCAgIE1haGFyYXNodHJhLCBHb2EsIEthcm5hdGFrYSwgS2VyYWxhIGFuZCAgIFRhbWlsIE5hZHUgKDYgc3RhdGVzKS4gICBUaGUgV2VzdGVybiBHaGF0cyBhYnJ1cHRseSByaXNlIGFzIGEgc2hlZXIgICB3YWxsIHRvIGFuIGF2ZXJhZ2UgZWxldmF0aW9uIG9mIDEsMDAwIG0gICBmcm9tIHRoZSBXZXN0ZXJuIENvYXN0YWwgUGxhaW4gYW5kIGFwcGVhciAgIHRvIGJlIGFuIGltcG9zaW5nIG1vdW50YWluLiBCdXQsIHRoZXkgICBzbG9wZSBnZW50bHkgb24gdGhlaXIgZWFzdGVybiBmbGFuayBhbmQgICAgaGFyZGx5IGFwcGVhciB0byBiZSBhIG1vdW50YWluIHdoZW4gICB2aWV3ZWQgZnJvbSB0aGUgRGVjY2FuIHRhYmxlbGFuZC4gICBNb3N0IG9mIHRoZSBoaWdoZXN0IHBlYWtzIG9mIHRoZSBXZXN0ZXJuICAgR2hhdHMgYXJlIGxvY2F0ZWQgaW4gdGhlIE5pbGdpcmkgYW5kIHRoZSAgIENhcmRhbW9uIEhpbGxzLiBBbmFtdWRpIHBhcnQgb2YgdGhlICAgQ2FyZGFtb20gSGlsbHMuIEhvd2V2ZXIsIG5vcnRoIG9mIEtlcmFsYSwgICB0aGUgaGlnaGVzdCBwZWFrIG9mIHRoZSBXZXN0ZXJuIEdoYXRzIGlzICAgS3VkcmVtdWtoIGluIEthcm5hdGFrYS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 3 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following statements:  1. Duns are the plains in the Shiwalik  Hills, formed by siltation and deposition  of lakes.  2. The southern slopes of the Shiwalik are  covered with thick forests from  Himachal Pradesh to Nepal.  3. The Shiwalik Hills run unbroken in the  entire range of the Himalayas.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw5",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgU2hpd2FsaWsgaXMgYW4gYWxtb3N0IHVuYnJva2VuICAgc3VjY2Vzc2lvbiBvZiBsb3cgaGlsbHMsIGV4Y2VwdCBmb3IgYSBnYXAgICBvZiA4MC05MCBrbSwgd2hpY2ggaXMgb2NjdXBpZWQgYnkgdGhlICAgdmFsbGV5IG9mIHRoZSBUaXN0YSBSaXZlci4gVGhlIGdvcmdlcyBvZiAgIHRoZSBUaXN0YSBhbmQgdGhlIFJhaWRhayByaXZlcnMgaGF2ZSBqb2ludGx5ICAgZm9ybWVkIGEgZ2FwIG9mIDgwLTkwIGttIHdpZGUgaW4gdGhlICAgU2hpd2FsaWsgSGlsbHMuICAgQXMgdGhlIFNoaXdhbGlrIEhpbGxzIHdlcmUgZm9ybWVkIGFmdGVyIHRoZSAgIGZvcm1hdGlvbiBvZiB0aGUgSGltYWxheWFzLCB0aGV5ICAgb2JzdHJ1Y3RlZCB0aGUgY291cnNlcyBvZiB0aGUgcml2ZXJzICAgZHJhaW5pbmcgZnJvbSB0aGUgaGlnaGVyIHJlYWNoZXMgb2YgdGhlICAgSGltYWxheWFzIGFuZCBmb3JtZWQgdGVtcG9yYXJ5IGxha2VzLiAgIFRoZSBkZWJyaXMgYnJvdWdoIGJ5IHRob3NlIHJpdmVycyB3ZXJlICAgZGVwb3NpdGVkIGluIHRoZXNlIGxha2VzLiBBZnRlciB0aGUgcml2ZXJzICAgaGFkIGN1dCB0aGVpciBjb3Vyc2UgdGhyb3VnaCB0aGUgU2hpd2FsaWsgICBSYW5nZSwgdGhlIGxha2VzIHdlcmUgZHJhaW5lZCBhd2F5IGxlYXZpbmcgICBiZWhpbmQgcGxhaW5zLCBjYWxsZWQgZHVucyBvciBkb29ucyAgIChFeGFtcGxlOiBEZWhyYWR1bikuICAgVGhlIGVhc3Rlcm4gcGFydCBvZiB0aGUgU2hpd2FsaWsgUmFuZ2UsICAgdXB0byBOZXBhbCwgaXMgY292ZXJlZCB3aXRoIHRoaWNrICAgZm9yZXN0cywgYnV0IHRoZSBmb3Jlc3QgY292ZXIgYmVjb21lcyAgIHRoaW4gaW4gdGhlIHdlc3QuIFRoZSBzb3V0aGVybiBzbG9wZXMgb2YgICB0aGlzIHJhbmdlIGFyZSBhbG1vc3QgY29tcGxldGVseSBkZXZvaWQgb2YgICBmb3Jlc3QgY292ZXIgaW4gUHVuamFiIGFuZCBIaW1hY2hhbCAgIFByYWRlc2gsIGFuZCBhcmUgaGlnaGx5IGRpc3NlY3RlZCBieSAgIHNldmVyYWwgc2Vhc29uYWwgc3RyZWFtcywgbG9jYWxseSBjYWxsZWQgICBDaG9zLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements about  the Himalayan Range:  1. Namcha Barwa and Nanga Parbat mark  the two syntaxial bends of the  Himalayas in the Eastern and the  Western Himalayas, respectively.  2. The Himalayan ranges have steep  gradient towards the south, but they  present a much gentler slope towards  the north.  3. The Eastern Himalayas rise gradually  from the plains, while the Western  Himalayas rise abruptly.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxMA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgZ2VuZXJhbCBlYXN0LXdlc3QgdHJlbmQgb2YgdGhlICAgSGltYWxheWFzIHRlcm1pbmF0ZXMgc3VkZGVubHkgYXQgaXRzICAgd2VzdGVybiBhbmQgZWFzdGVybiBleHRyZW1pdGllcywgYW5kIHRoZSAgIHJhbmdlcyBhcmUgc2hhcnBseSBiZW50IHNvdXRod2FyZHMgaW4gICBkZWVwIGtuZWUtYmVuZCBmbGV4dXJlcywgd2hpY2ggYXJlIGNhbGxlZCAgIHRoZSBTeW50YXhpYWwgQmVuZHMuIFRoZSBXZXN0ZXJuIFN5bnRheGlhbCAgIEJlbmQgaXMgbmVhciB0aGUgTmFuZ2EgUGFyYmF0LCB3aGVyZSB0aGUgICBJbmR1cyBoYXMgY3V0IGEgZGVlcCBnb3JnZS4gVGhlIGdlb2xvZ2ljYWwgICBmb3JtYXRpb25zIGhlcmUgdGFrZSBhIHNoYXJwIGhhaXItcGluICAgYmVuZCwgYXMgaWYgdGhleSB3ZXJlIGJlbnQgYXJvdW5kIHBpdm90YWwgICBwb2ludCBvYnN0cnVjdGluZyB0aGVtLiBUaGVyZSBpcyBhIHNpbWlsYXIgICBoYWlyLXBpbiBiZW5kIGNsb3NlIG9mIHRoZSBOYW1jaGEgQmFyd2EgICBwZWFrIGluIEFydW5hY2hhbCBQcmFkZXNoLCBmcm9tIHdoZXJlIHRoZSAgIEhpbWFsYXlhcyB0YWtlIGEgc291dGh3YXJkIGJlbmQuICAgVGhlIGluZGl2aWR1YWwgcmFuZ2VzIG9mIHRoZSBIaW1hbGF5YXMgICBoYXZlIHZlcnkgc3RlZXAgZ3JhZGllbnQgdG93YXJkcyB0aGUgc291dGgsICAgYnV0IHRoZXkgcHJlc2VudCBhIG11Y2ggZ2VudGxlciBzbG9wZSAgIHRvd2FyZHMgdGhlIG5vcnRoLiAgICBJbiB0aGUgZWFzdGVybiBzZWN0aW9uLCB0aGUgSGltYWxheWFzICAgcmlzZSBhYnJ1cHRseSBmcm9tIHRoZSBwbGFpbnMgb2YgQmVuZ2FsICAgYW5kIEF3YWRoLCBhbmQgc3VkZGVubHkgYXR0YWluIGdyZWF0ICAgZWxldmF0aW9ucyB3aXRoaW4gYSBzaG9ydCBkaXN0YW5jZSBmcm9tICAgdGhlIGZvb3Qgb2YgdGhlIG1vdW50YWlucy4gVGh1cywgdGhlICAgcGVha3Mgb2YgS2FuY2hlbmp1bmdhIGFuZCBFdmVyZXN0IGFyZSAgIG9ubHkgYSBmZXcga2lsb21ldHJlcyBmcm9tIHRoZSBwbGFpbnMgICBhbmQgYXJlIGNsZWFybHkgdmlzaWJsZSBmcm9tIHRoZXJlLiBJbiAgIGNvbnRyYXN0LCB0aGUgd2VzdGVybiBIaW1hbGF5YXMgcmlzZSAgIGdyYWR1YWxseSBmcm9tIHRoZSBwbGFpbnMgdGhyb3VnaCBhICAgc2VyaWVzIG9mIHJhbmdlcy4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 11,
      "question" : "With respect to the 'Exclusive Economic  Zone', consider the following statements:   1. It is an area beyond and adjacent to the  territorial waters.  2. The limit of the zone is three hundred  nautical miles from the baseline of a  country.   3. The Union has sovereign rights for the  purpose of exploration, exploitation,  conservation and management of the  natural resources.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxMQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgRXhjbHVzaXZlIEVjb25vbWljIFpvbmUgb2YgSW5kaWEgaXMgYW4gICBhcmVhIGJleW9uZCBhbmQgYWRqYWNlbnQgdG8gdGhlIHRlcnJpdG9yaWFsICAgd2F0ZXJzLiBUaGUgbGltaXQgb2Ygc3VjaCB6b25lIGlzIHR3byAgIGh1bmRyZWQgbmF1dGljYWwgbWlsZXMgZnJvbSB0aGUgICBiYXNlbGluZS4gICBJbiB0aGUgRXhjbHVzaXZlIEVjb25vbWljIFpvbmUsIHRoZSBVbmlvbiAgIGhhcyAgIChhKSBzb3ZlcmVpZ24gcmlnaHRzIGZvciB0aGUgcHVycG9zZSBvZiAgIGV4cGxvcmF0aW9uLCBleHBsb2l0YXRpb24sIGNvbnNlcnZhdGlvbiAgIGFuZCBtYW5hZ2VtZW50IG9mIHRoZSBuYXR1cmFsICAgcmVzb3VyY2VzLCBib3RoIGxpdmluZyBhbmQgbm9uLWxpdmluZywgYXMgICB3ZWxsIGFzIGZvciBwcm9kdWNpbmcgZW5lcmd5IGZyb20gdGlkZXMsICAgd2luZHMgYW5kIGN1cnJlbnRzOyAgIChiKSBleGNsdXNpdmUgcmlnaHRzIGFuZCBqdXJpc2RpY3Rpb24gZm9yIHRoZSAgIGNvbnN0cnVjdGlvbiwgbWFpbnRlbmFuY2Ugb3Igb3BlcmF0aW9uICAgb2YgYXJ0aWZpY2lhbCBpc2xhbmRzLCBvZmYtc2hvcmUgdGVybWluYWxzLCAgIGluc3RhbGxhdGlvbnMgYW5kIG90aGVyIHN0cnVjdHVyZXMgYW5kICAgZGV2aWNlcyBuZWNlc3NhcnkgZm9yIHRoZSBleHBsb3JhdGlvbiAgIGFuZCBleHBsb2l0YXRpb24gb2YgdGhlIHJlc291cmNlcyBvZiB0aGUgICB6b25lLCBvciBmb3IgdGhlIGNvbnZlbmllbmNlIG9mIHNoaXBwaW5nICAgb3IgZm9yIGFueSBvdGhlciBwdXJwb3NlOyBhbmQgICAgKGMpIGV4Y2x1c2l2ZSBqdXJpc2RpY3Rpb24gdG8gYXV0aG9yaXNlLCAgIHJlZ3VsYXRlIGFuZCBjb250cm9sIHNjaWVudGlmaWMgcmVzZWFyY2guICAgTm90ZTogQSBiYXNlbGluZSwgYXMgZGVmaW5lZCBieSB0aGUgVW5pdGVkICAgTmF0aW9ucyBDb252ZW50aW9uIG9uIHRoZSBMYXcgb2YgdGhlIFNlYSwgICBpcyB0aGUgbGluZSBhbG9uZyB0aGUgY29hc3QgZnJvbSB3aGljaCB0aGUgICBzZWF3YXJkIGxpbWl0cyBvZiBhIHN0YXRlJ3MgdGVycml0b3JpYWwgc2VhICAgYW5kIGNlcnRhaW4gb3RoZXIgbWFyaXRpbWUgem9uZXMgb2YgICBqdXJpc2RpY3Rpb24gYXJlIG1lYXN1cmVkLCBzdWNoIGFzIGEgc3RhdGUncyAgIEV4Y2x1c2l2ZSBFY29ub21pYyBab25lLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 12,
      "question" : "With respect to the 'Tropic of Cancer',  consider the following statements:  1. In India, it passes through Jharkhand,  Tripura and Manipur.  2. The Mahi River is the only river in India  that cuts the Tropic of Cancer twice.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxMg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgVHJvcGljIG9mIENhbmNlciBwYXNzZXMgdGhyb3VnaCAgIGVpZ2h0IHN0YXRlcyBpbiBJbmRpYTogR3VqYXJhdCAoSmFzZGFuKSwgICBSYWphc3RoYW4gKEthbGluamFyaCksIE1hZGh5YSBQcmFkZXNoICAgKFNoYWphcHVyKSwgQ2hoYXR0aXNnYXJoIChTb25oYXQpLCAgIEpoYXJraGFuZCAoTG9oYXJkYWdhKSwgV2VzdCBCZW5nYWwgICAoS3Jpc2huYW5hZ2FyKSwgVHJpcHVyYSAoVWRhaXB1cikgYW5kICAgTWl6b3JhbSAoQ2hhbXBoYWkpLiAgIFRoZSBNYWhpIHJpdmVyIGlzIHRoZSBvbmx5IHJpdmVyIGluIEluZGlhIHRoYXQgICBjdXRzIHRoZSBUcm9waWMgb2YgQ2FuY2VyIHR3aWNlLCBmaXJzdCBpbiAgIE1hZGh5YSBQcmFkZXNoLCBmcm9tIHdoZXJlIGl0IGZsb3dzICAgdG93YXJkcyBSYWphc3RoYW4gYW5kIGVudGVycyBHdWphcmF0LCAgIHdoZXJlIGl0IGN1dHMgZm9yIHRoZSBzZWNvbmQgdGltZS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2    "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following is the correct  ascending order of the following states in  terms of area?   1. Maharashtra  2. Rajasthan  3. Madhya Pradesh  4. Uttar Pradesh  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxMw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBSYWphc3RoYW4gaXMgdGhlIGxhcmdlc3Qgc3RhdGUgaW4gSW5kaWEsIGluICAgdGVybXMgb2YgYXJlYS4gUmFqYXN0aGFuIGlzIGZvbGxvd2VkIGJ5ICAgTWFkaHlhIFByYWRlc2ggYW5kIE1haGFyYXNodHJhLiAgIE1hZGh5YSBQcmFkZXNoIGlzIGxhcmdlciB0aGFuICAgTWFoYXJhc2h0cmEgYnkgYSBuYXJyb3cgbWFyZ2luLiAgIE1haGFyYXNodHJhIGlzIGZvbGxvd2VkIGJ5IFV0dGFyIFByYWRlc2guICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1-4-3-2  ",
        "option2" : " 4-3-1-2  ",
        "option3" : " 4-1-3-2  ",
        "option4" : " 1-4-2-3   "
      }
    },
    {
      "index" : 14,
      "question" : "With respect to the 'Malwa Plateau',  consider the following statements:  1. It is of volcanic origin.  2. It is bounded by the  Bundelkhand Upland to the north and  the Vindhya Range to the east.  3. The western part of the region is  drained by the Chambal River.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxNA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTWFsd2EgUGxhdGVhdSBpcyBhIHBsYXRlYXUgcmVnaW9uIGluICAgbm9ydGgtY2VudHJhbCBJbmRpYS4gSXQgaXMgYm91bmRlZCBieSB0aGUgICBNYWRoeWEgQmhhcmF0IFBsYXRlYXUgYW5kIHRoZSAgIEJ1bmRlbGtoYW5kIFVwbGFuZCB0byB0aGUgbm9ydGgsIHRoZSAgIFZpbmRoeWEgUmFuZ2UgdG8gdGhlIGVhc3QgYW5kIHNvdXRoLCBhbmQgICB0aGUgR3VqYXJhdCBQbGFpbnMgdG8gdGhlIHdlc3QuIE9mIHZvbGNhbmljICAgb3JpZ2luLCB0aGUgUGxhdGVhdSBjb21wcmlzZXMgY2VudHJhbCAgIE1hZGh5YSBQcmFkZXNoIHN0YXRlIGFuZCBzb3V0aC1lYXN0ZXJuICAgUmFqYXN0aGFuIHN0YXRlLiAgIFRoZSB3ZXN0ZXJuIHBhcnQgb2YgdGhlIHJlZ2lvbiBpcyBkcmFpbmVkICAgYnkgdGhlIE1haGkgcml2ZXIsIHRoZSBtaWRkbGUgc2VjdGlvbiBieSAgIHRoZSBDaGFtYmFsIFJpdmVyIGFuZCB0aGUgZWFzdGVybiBwYXJ0ICAgYnkgdGhlIEJldHdhIFJpdmVyLCBhbmQgdGhlIGhlYWR3YXRlcnMgICBvZiB0aGUgRGhhc2FuIGFuZCB0aGUgS2VuIHJpdmVycy4gICAgT3RoZXIgcml2ZXJzIGluY2x1ZGUgdGhlIFBhcmJhdGksIHRoZSBTaXByYSwgICB0aGUgR2FtYmhpciBhbmQgdGhlIENob3RpIEthbGkgU2luZGgsICAgdGhlaXIgdmFsbGV5cyBmbGFua2VkIGJ5IHRlcnJhY2VkIHNsb3Blcy4gICBWZWdldGF0aW9uIGlzIG9mIHRoZSBzYXZhbm5hIHR5cGUgd2l0aCAgIHNjYXR0ZXJlZCB0ZWFrIGFuZCBzYWwgKFNob3JlYSBSb2J1c3RhKSAgIGZvcmVzdHMuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 15,
      "question" : "With respect to the 'Aravalli Range',  consider the following statements:  1. It passes through Delhi, Haryana,  Rajasthan, Gujarat and Maharashtra.  2. It gives rise to several rivers, including  the Banas, the Luni, the Sakhi and the  Sabarmati.   3. The highest peak is Guru Shikhar on  Mount Abu.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxNQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQXJhdmFsbGkgUmFuZ2UgKGFsc28gc3BlbGxlZCBBcmF2YWxpKSAgIGlzIGEgbW91bnRhaW4gcmFuZ2UgaW4gbm9ydGhlcm4td2VzdGVybiAgIEluZGlhLCBydW5uaW5nIGFwcHJveGltYXRlbHkgNjcwIGttIGluICAgYSBzb3V0aC13ZXN0IGRpcmVjdGlvbiwgc3RhcnRpbmcgICBuZWFyIERlbGhpLCBwYXNzaW5nIHRocm91Z2ggICBzb3V0aGVybiBIYXJ5YW5hLCBSYWphc3RoYW4gYW5kIGVuZGluZyAgIGluIEFobWVkYWJhZCAoR3VqYXJhdCkuICAgSXQgaXMgZGl2aWRlZCBpbnRvIHR3byBzZWN0aW9uczogVGhlICAgU2FtYmhhci1TaXJvaGkgcmFuZ2VzLCB0YWxsZXIgYW5kICAgaW5jbHVkaW5nIHRoZSBHdXJ1IFBlYWsgb24gTW91bnQgQWJ1LCAgIHRoZSBoaWdoZXN0IHBlYWsgaW4gdGhlIEFyYXZhbGxpIFJhbmdlOyBhbmQgICB0aGUgU2FtYmhhci1LaGV0cmkgcmFuZ2VzLCBjb25zaXN0aW5nIG9mICAgdGhyZWUgcmlkZ2VzIHRoYXQgYXJlIGRpc2NvbnRpbnVvdXMuIFRoZSAgIEFyYXZhbGxpIFJhbmdlIGlzIHJpY2ggaW4gbmF0dXJhbCByZXNvdXJjZXMgICAoaW5jbHVkaW5nIG1pbmVyYWxzKSBhbmQgc2VydmVzIGFzIGEgY2hlY2sgICB0byB0aGUgZ3Jvd3RoIG9mIHRoZSB3ZXN0ZXJuIGRlc2VydC4gSXQgZ2l2ZXMgICByaXNlIHRvIHNldmVyYWwgcml2ZXJzLCBpbmNsdWRpbmcgdGhlICAgQmFuYXMsIHRoZSBMdW5pLCB0aGUgU2FraGkgYW5kIHRoZSAgIFNhYmFybWF0aS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 16,
      "question" : "With respect to the 'Lonar Crater Lake',  consider the following statements:  1. It is located in the world's only high  velocity impact formed in basaltic rock.  2. The water in the lake is highly acidic.  3. It is the only Ramsar site in  Maharashtra.  Which of the statements given above are  is/correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxNg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTG9uYXIgQ3JhdGVyIExha2UgaXMgbG9jYXRlZCBpbiB0aGUgICB3b3JsZCdzIG9ubHkgaGlnaCB2ZWxvY2l0eSBpbXBhY3QgZm9ybWVkIGluICAgYmFzYWx0aWMgcm9jay4gVGhlIHdhdGVyIGluIHRoZSBsYWtlIGlzICAgaGlnaGx5IHNhbGluZSBhbmQgYWxrYWxpbmUuIEFub3RoZXIgICBmZWF0dXJlIG9mIHRoaXMgbGFrZSBpcyB0aGUgbm9uLXN5bWJpb3RpYyAgIG5pdHJvZ2VuIGZpeGluZyBtaWNyb2Jlcy4gQXMgcGVyIHN0dWRpZXMsIGl0ICAgaGFzIGJlZW4gcmV2ZWFsZWQgdGhhdCBhbGwgdGhlc2UgbWljcm9iZXMgICBhcmUgYWJsZSB0byBsaXZlIG9ubHkgaW4gYWxrYWxpbmUgY29uZGl0aW9ucyAgIGFuZCB0aGF0IHRvbyB3aXRoIGEgcEggbGV2ZWwgb2YgMTEuICAgTWFoYXJhc2h0cmEgaGFzIHRocmVlIFJhbXNhciBzaXRlczogVGhlICAgVGhhbmUgQ3JlZWs7IE5hbmR1ciBNYWRobWVzaHdhcjsgYW5kICAgdGhlIExvbmFyIExha2UuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1 and 3 only    "
      }
    },
    {
      "index" : 17,
      "question" : "With respect to 'Puducherry', consider the  following statements:  1. It spans in four states.  2. It includes Puducherry, Yanam,  Karaikal and Mahe.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxNw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBQdWR1Y2hlcnJ5IGlzIHRoZSBvbmx5IFVuaW9uIFRlcnJpdG9yeSB0aGF0ICAgc3BhbnMgaW4gZm91ciBzdGF0ZXMuIEl0IGluY2x1ZGVzICAgUHVkdWNoZXJyeSAoVGFtaWwgTmFkdSksIFlhbmFtIChBbmRocmEgICBQcmFkZXNoKSwgS2FyYWlrYWwgKFRhbWlsIE5hZHUpIGFuZCBNYWhlICAgKEtlcmFsYSkuIEFsbCB0aGUgZm91ciB0ZXJyaXRvcmllcywgY29taW5nICAgdW5kZXIgdGhlIFB1ZHVjaGVycnkgVW5pb24gVGVycml0b3J5LCAgIHdlcmUgRnJlbmNoIGV4Y2xhdmVzIGJlZm9yZSBpbmRlcGVuZGVuY2UuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements:  1. Port Blair is located in the North  Andaman.  2. The Duncan Passage lies between the  North and the South Andaman.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxOA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBQb3J0IEJsYWlyLCB0aGUgY2FwaXRhbCBvZiBBbmRhbWFuIGFuZCAgIE5pY29iYXIgSXNsYW5kcywgaXMgc2l0dWF0ZWQgaW4gdGhlIFNvdXRoICAgQW5kYW1hbi4gVGhlIG1haW4gaXNsYW5kcyB0aGF0IGNvbWUgICB1bmRlciB0aGUgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzICAgYXJlOiBUaGUgTm9ydGggQW5kYW1hbiwgdGhlIE1pZGRsZSAgIEFuZGFtYW4sIHRoZSBTb3V0aCBBbmRhbWFuLCB0aGUgTGl0dGxlICAgQW5kYW1hbiwgQ2FyIE5pY29iYXIsIHRoZSBMaXR0bGUgTmljb2JhciAgIGFuZCB0aGUgR3JlYXQgTmljb2Jhci4gICBUaGUgRHVuY2FuIFBhc3NhZ2UgaXMgYmV0d2VlbiB0aGUgICBTb3V0aCBBbmRhbWFuIGFuZCB0aGUgTGl0dGxlIEFuZGFtYW4uICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements:  1. Thal Ghat links Nasik to Mumbai.  2. Pal Ghat connects Kochi and Chennai.  3. The Senkota Pass is located between  the Nilgiris and the Annamalai  mountains.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwxOQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgbWFqb3IgUGFzc2VzIHRoYXQgaGF2ZSBkZXZlbG9wZWQgaW4gICB0aGUgV2VzdGVybiBHaGF0cyBhcmU6ICAgMS4gVGhhbCBHaGF0OiBJdCBsaW5rcyBOYXNpayB0byBNdW1iYWkuIEl0ICAgY29ubmVjdHMgS29sa2F0YSB0byBNdW1iYWksIGJlY2F1c2UgICB0aGUgcm91dGUgbGVhZGluZyBmcm9tIEtvbGthdGEgdG8gICBNdW1iYWkgcGFzc2VzIHRocm91Z2ggTmFzaWsuICAgMi4gQmhvciBHaGF0OiBJdCBsaW5rcyBNdW1iYWkgdG8gUHVuZS4gICAzLiBQYWwgR2hhdDogVGhpcyBwYXNzIGlzIGxvY2F0ZWQgYmV0d2VlbiAgIHRoZSBOaWxnaXJpcyBhbmQgdGhlIEFubmFtYWxhaSAgIE1vdW50YWluLiBJdCBpcyBpbiBLZXJhbGEsIGFuZCBjb25uZWN0cyAgIEtvY2hpIGFuZCBDaGVubmFpLCB0aGUgdHdvIG1haW4gY2l0aWVzICAgb2YgU291dGggSW5kaWEuICAgNC4gVGhlIFNlbmtvdGEgUGFzczogVGhpcyBQYXNzLCBsb2NhdGVkICAgYmV0d2VlbiB0aGUgTmFnZXJjb2lsIGFuZCB0aGUgICBDYXJkYW1vbSBoaWxscywgbGlua3MgICBUaGlydXZhbmFudGhhcHVyYW0gYW5kIE1hZHVyYWkuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following are not parts of the  Himalayas?  1. Patkai Bum   2. The Dafla Hills   3. Karbi Anglong  4. The Garo Hills   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyMA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgUGVuaW5zdWxhIGlzIGZvcm1lZCBlc3NlbnRpYWxseSBieSBhIGdyZWF0IGNvbXBsZXggb2YgdmVyeSBhbmNpZW50IGduZWlzc2VzIGFuZCBncmFuaXRlcywgICB3aGljaCBjb25zdGl0dXRlcyBhIG1ham9yIHBhcnQgb2YgaXQuICAgIFNpbmNlIHRoZSBDYW1icmlhbiBwZXJpb2QsIHRoZSBQZW5pbnN1bGEgaGFzIGJlZW4gc3RhbmRpbmcgbGlrZSBhIHJpZ2lkIGJsb2NrIHdpdGggdGhlICAgZXhjZXB0aW9uIG9mIHNvbWUgb2YgaXRzIHdlc3Rlcm4gY29hc3QsIHdoaWNoIGlzIHN1Ym1lcmdlZCBiZW5lYXRoIHRoZSBzZWEgYW5kIHNvbWUgb3RoZXIgICBwYXJ0cyBjaGFuZ2VkIGR1ZSB0byB0aGUgdGVjdG9uaWMgYWN0aXZpdHksIHdpdGhvdXQgYWZmZWN0aW5nIHRoZSBvcmlnaW5hbCBiYXNlbWVudC4gICBUaGUgS2FyYmkgQW5nbG9uZyBhbmQgdGhlIE1lZ2hhbGF5YSBQbGF0ZWF1IChHYXJvLCBLaGFzaSBhbmQgSmFpbnRpYSkgaW4gdGhlIG5vcnRoLWVhc3QgICBhbmQgUmFqYXN0aGFuIGluIHRoZSB3ZXN0IGFyZSB0aGUgZXh0ZW5zaW9ucyBvZiB0aGUgUGVuaW5zdWxhciBibG9jay4gICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only   ",
        "option2" : " 2 and 3 only   ",
        "option3" : " 3 and 4 only   ",
        "option4" : " 2 and 4 only    "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following:  1. The Garhjat Hills   2. The Nallamala Hills  3. The Mahendragiri Peak  4. The Kaimur Hills   Which of the following is the correct  sequence of these geographical features if  one travels from North to South?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyMQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgS2FpbXVyIEhpbGxzID4gVGhlIEdhcmhqYXQgSGlsbHMgPiBUaGUgTWFoZW5kcmFnaXJpIFBlYWsgPiBUaGUgTmFsbGFtYWxhIEhpbGxzICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1-4-3-2  ",
        "option2" : " 1-4-2-3  ",
        "option3" : " 4-1-3-2  ",
        "option4" : " 4-3-1-2   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following pairs:  S.N. Pass Located on  1. Zoji La  Pir Panjal   2. Banihal  The Great  Himalayas  3. Photu La  Zaskar   4. Khardung La  Ladakh   How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyMg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBJbXBvcnRhbnQgcGFzc2VzIG9mIHRoZSBLYXNobWlyIEhpbWFsYXlhcyBhcmU6IFpvamkgTGEgb24gdGhlIEdyZWF0IEhpbWFsYXlhczsgQmFuaWhhbCBvbiAgIHRoZSBQaXIgUGFuamFsOyBQaG90dSBMYSBvbiB0aGUgWmFza2FyOyBhbmQgS2hhcmR1bmcgTGEgb24gdGhlIExhZGFraCByYW5nZS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair   ",
        "option2" : " Only two pairs   ",
        "option3" : " Only three pairs  ",
        "option4" : " All four pairs   "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following rivers:  1. Chenab   2. Jhelum   3. Sutlej   4. Ravi   Which of the following is the correct order  of the above rivers from North to South?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyMw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1-2-3-4   ",
        "option2" : " 2-1-4-3  ",
        "option3" : " 2-3-1-4  ",
        "option4" : " 4-1-2-3   "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following ranges:  1. The Tibet Plateau   2. The Ladakh Range   3. Shivalik   4. The Kailash Range   Which of the following is the correct order  of the above ranges from South to North?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyNA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1-2-4-3  ",
        "option2" : " 1-4-2-3  ",
        "option3" : " 3-2-4-1  ",
        "option4" : " 3-4-2-1   "
      }
    },
    {
      "index" : 25,
      "question" : "The Lepcha tribe lives in which of the  following parts of the Himalayas?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyNQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgU2lra2ltIEhpbWFsYXlhcyBhcmUgZmxhbmtlZCBieSB0aGUgICBOZXBhbCBIaW1hbGF5YXMgaW4gdGhlIHdlc3QgYW5kIHRoZSAgIEJodXRhbiBIaW1hbGF5YXMgaW4gdGhlIGVhc3QuIEl0IGlzICAgcmVsYXRpdmVseSBzbWFsbCwgYnV0IGlzIHRoZSBtb3N0IHNpZ25pZmljYW50ICAgcGFydCBvZiB0aGUgSGltYWxheWFzLiBLbm93biBmb3IgaXRzIGZhc3QtICBmbG93aW5nIHJpdmVycywgc3VjaCBhcyB0aGUgVGlzYSwgaXQgaXMgYSAgIHJlZ2lvbiBvZiBoaWdoIG1vdW50YWluIHBlYWtzLCBsaWtlICAgS2FuY2hlbmp1bmdhIChLYW5jaGVuZ2lyaSksIGFuZCBkZWVwICAgdmFsbGV5cy4gVGhlIGhpZ2hlciByZWFjaGVzIG9mIHRoaXMgcmVnaW9uICAgYXJlIGluaGFiaXRlZCBieSB0aGUgTGVwY2hhIHRyaWJlLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Ladakh   ",
        "option2" : " Uttarakhand   ",
        "option3" : " Sikkim   ",
        "option4" : " Arunachal    "
      }
    },
    {
      "index" : 26,
      "question" : "The Kangtu Peak is located in which of the  following?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyNg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBTb21lIG9mIHRoZSBpbXBvcnRhbnQgbW91bnRhaW4gcGVha3MgICBvZiB0aGUgQXJ1bmFjaGFsIEhpbWFsYXlhcyBhcmUgS2FuZ3R1ICAgYW5kIE5hbWNoYSBCYXJ3YS4gICAgVGhlc2UgcmFuZ2VzIGFyZSBkaXNzZWN0ZWQgYnkgZmFzdC1mbG93aW5nICAgcml2ZXJzLCBmcm9tIHRoZSBub3J0aCB0byB0aGUgc291dGgsIGZvcm1pbmcgICBkZWVwIGdvcmdlcy4gICAgVGhlIEJocmFtYXB1dHJhIGZsb3dzIHRocm91Z2ggYSBkZWVwICAgZ29yZ2UsIGFmdGVyIGNyb3NzaW5nIE5hbWNoYSBCYXJ3YS4gU29tZSAgIG9mIHRoZSBpbXBvcnRhbnQgcml2ZXJzIGFyZSB0aGUgS2FtZW5nLCB0aGUgICBTdWJhbnNpcmksIHRoZSBEaWhhbmcsIHRoZSBEaWJhbmcgYW5kIHRoZSAgIExvaGl0LiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " The Himachal Himalayas  ",
        "option2" : " The Kashmir Himalayas  ",
        "option3" : " The Sikkim Himalayas   ",
        "option4" : " The Arunachal Himalayas    "
      }
    },
    {
      "index" : 27,
      "question" : "The Syntaxial Bend Himalayas in the  western part are located at which of the  following?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyNw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBTeW50YXhpYWwgYmVuZHMgYXJlIGRlZXAga25lZS1iZW5kIGZsZXh1cmVzLCB3aGljaCBvY2N1cnJlZCBhdCB0aGUgZXh0cmVtZSBlbmRzIG9mIHdlc3QgYW5kICAgZWFzdCBvZiB0aGUgSGltYWxheWFzLCBkdWUgdG8gc291dGh3YXJkIHR1cm4gb2YgdGhlIG1vdW50YWluIGNoYWluLiAgICBUaGUgV2VzdGVybiBTeW50YXhpYWwgQmVuZCBvZiB0aGUgSGltYWxheWFzIGxpZXMgY2xvc2UgdG8gdGhlIE5hbmdhIFBhcmJhdCByYW5nZS4gVGhlICAgTmFuZ2EgUGFyYmF0IGlzIHRoZSBuaW50aCBoaWdoZXN0IHBlYWsgaW4gdGhlIHdvcmxkLiAgICBUaGUgRWFzdGVybiBTeW50YXhpYWwgQmVuZCBsaWVzIGNsb3NlIHRvIHRoZSBOYW1jaGEgQmFyd2EsIHdoZXJlIHRoZSBCcmFobWFwdXRyYSBmbG93cyAgIHRocm91Z2ggYSBkZWVwIGdvcmdlLCBhZnRlciBjcm9zc2luZyBOYW1jaGEgQmFyd2EuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " K2   ",
        "option2" : " The Nanga Parbat   ",
        "option3" : " Makalu   ",
        "option4" : " Namcha Barwa    "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following pairs:  S.N. Geographical  feature  Location  1. Jelep La  Sikkim   2. Bomdi La  Nagaland   3. Namcha Barwa  Arunachal  Pradesh   How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyOA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " None of the above   ",
        "option2" : " Only one pair  ",
        "option3" : " Only two pairs  ",
        "option4" : " All the three pairs   "
      }
    },
    {
      "index" : 29,
      "question" : "The Barak River flows through which of the  following states?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwyOQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQmFyYWsgaXMgYW4gaW1wb3J0YW50IHJpdmVyIGluICAgTWFuaXB1ciBhbmQgTWl6b3JhbS4gICBUaGUgcGh5c2lvZ3JhcGh5IG9mIE1hbmlwdXIgaXMgdW5pcXVlIGJ5ICAgdGhlIHByZXNlbmNlIG9mIGEgbGFyZ2UgbGFrZSwga25vd24gYXMgdGhlICAgJ0xva3RhaycgbGFrZSBhdCB0aGUgY2VudHJlLCBzdXJyb3VuZGVkIGJ5ICAgbW91bnRhaW5zIGZyb20gYWxsIHNpZGVzLiBNaXpvcmFtLCB3aGljaCAgIGlzIGFsc28ga25vd24gYXMgdGhlICdNb2xhc3NpcyBCYXNpbicsICAgd2hpY2ggaXMgbWFkZSB1cCBvZiBzb2Z0IHVuY29uc29saWRhdGVkICAgZGVwb3NpdHMuIE1vc3Qgb2YgdGhlIHJpdmVycyBpbiBOYWdhbGFuZCAgIGZvcm0gdGhlIHRyaWJ1dGFyaWVzIG9mIHRoZSBCcmFobWFwdXRyYS4gICBXaGlsZSB0d28gcml2ZXJzIG9mIE1pem9yYW0gYW5kIE1hbmlwdXIgICBhcmUgdGhlIHRyaWJ1dGFyaWVzIG9mIHRoZSBCYXJhayBSaXZlciwgICB3aGljaCwgaW4gdHVybiwgaXMgdGhlIHRyaWJ1dGFyeSBvZiB0aGUgICBNZWdobmE7IHRoZSByaXZlcnMgaW4gdGhlIGVhc3Rlcm4gcGFydCBvZiAgIE1hbmlwdXIgYXJlIHRoZSB0cmlidXRhcmllcyBvZiB0aGUgICBDaGluZHdpbiwgd2hpY2gsIGluIHR1cm4sIGlzIGEgdHJpYnV0YXJ5IG9mICAgdGhlIElycmF3YWR5IG9mIE15YW5tYXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Arunachal Pradesh   ",
        "option2" : " Nagaland   ",
        "option3" : " Manipur   ",
        "option4" : " Meghalaya    "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements:   1. The Brahmaputra has its origin in the  Chemayungdung Glacier.   2. The Subansiri is an antecedent river.  3. The Brahmaputra enters into  Bangladesh near Sadiya.   Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzMA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQnJhaG1hcHV0cmEsIG9uZSBvZiB0aGUgbGFyZ2VzdCByaXZlcnMgICBvZiB0aGUgd29ybGQsIGhhcyBpdHMgb3JpZ2luIGluIHRoZSAgIENoZW1heXVuZ2R1bmcgR2xhY2llciBvZiB0aGUgS2FpbGFzaCAgIHJhbmdlIG5lYXIgdGhlIE1hbnNhcm92YXIgTGFrZS4gRnJvbSAgIGhlcmUsIGl0IHRyYXZlcnNlcyBlYXN0d2FyZHMgbG9uZ2l0dWRpbmFsbHkgICBmb3IgYSBkaXN0YW5jZSBvZiBuZWFybHkgMSwyMDAga20gaW4gYSBkcnkgICBhbmQgZmxhdCByZWdpb24gb2Ygc291dGhlcm4gVGliZXQsIHdoZXJlIGl0ICAgaXMga25vd24gYXMgdGhlIFRzYW5ncG8sIHdoaWNoIG1lYW5zICd0aGUgICBwdXJpZmllci4nIFRoZSBSYW5nbyBUc2FuZ3BvIGlzIHRoZSBtYWpvciAgIHJpZ2h0IGJhbmsgdHJpYnV0YXJ5IG9mIHRoaXMgcml2ZXIgaW4gVGliZXQuIEl0ICAgIGVtZXJnZXMgYXMgYSB0dXJidWxlbnQgYW5kIGR5bmFtaWMgcml2ZXIgICBhZnRlciBjYXJ2aW5nIG91dCBhIGRlZXAgZ29yZ2UgaW4gdGhlICAgQ2VudHJhbCBIaW1hbGF5YXMgbmVhciBOYW1jaGEgQmFyd2EuICAgVGhlIHJpdmVyIGVtZXJnZXMgZnJvbSB0aGUgZm9vdGhpbGxzIHVuZGVyICAgdGhlIG5hbWUgb2YgU2lhbmcgb3IgRGloYW5nLiBJdCBlbnRlcnMgICBJbmRpYSB3ZXN0IG9mIFNhZGl5YSB0b3duIGluIEFydW5hY2hhbCAgIFByYWRlc2guIEZsb3dpbmcgc291dGgtd2VzdCwgaXQgcmVjZWl2ZXMgaXRzICAgbWFpbiBsZWZ0IGJhbmsgdHJpYnV0YXJpZXMsIHZpei4sIHRoZSBEaWJhbmcgICBvciBTaWthbmcgYW5kIHRoZSBMb2hpdC4gVGhlcmVhZnRlciwgaXQgaXMgICBrbm93biBhcyB0aGUgQnJhaG1hcHV0cmEuICAgVGhlIFN1YmFuc2lyaSwgd2hpY2ggaGFzIGl0cyBvcmlnaW4gaW4gICBUaWJldCwgaXMgYW4gYW50ZWNlZGVudCByaXZlci4gVGhlICAgQnJhaG1hcHV0cmEgZW50ZXJzIGludG8gQmFuZ2xhZGVzaCAgIG5lYXIgRGh1YnJpIGFuZCBmbG93cyBzb3V0aHdhcmRzLiBJbiAgIEJhbmdsYWRlc2gsIHRoZSBUaXN0YSBqb2lucyBpdCBvbiBpdHMgcmlnaHQgICBiYW5rIGZyb20gd2hlcmUgdGhlIHJpdmVyIGlzIGtub3duIGFzIHRoZSAgIEphbXVuYS4gSXQgZmluYWxseSBtZXJnZXMgd2l0aCByaXZlciBQYWRtYSwgICB3aGljaCBmYWxscyBpbiB0aGUgQmF5IG9mIEJlbmdhbC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 31,
      "question" : "Which of the following rivers are the  tributaries of the Brahmaputra River?  1. Sikang  2. Lohit  3. Kameng  4. Dhansari  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzMQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQnJhaG1hcHV0cmEgZW50ZXJzIEluZGlhIHdlc3Qgb2YgICBTYWRpeWEgdG93biBpbiBBcnVuYWNoYWwgUHJhZGVzaC4gRmxvd2luZyAgIHNvdXRoLXdlc3QsIGl0IHJlY2VpdmVzIGl0cyBtYWluIGxlZnQgYmFuayAgIHRyaWJ1dGFyaWVzLCB2aXouLCB0aGUgRGliYW5nIG9yIFNpa2FuZyBhbmQgICB0aGUgTG9oaXQuIFRoZXJlYWZ0ZXIsIGl0IGlzIGtub3duIGFzIHRoZSAgIEJyYWhtYXB1dHJhLiBUaGUgQnJhaG1hcHV0cmEgcmVjZWl2ZXMgICBudW1lcm91cyB0cmlidXRhcmllcyBpbiBpdHMgNzUwIGttIGxvbmcgICBqb3VybmV5IHRocm91Z2ggdGhlIEFzc2FtIHZhbGxleS4gSXRzIG1ham9yICAgbGVmdCBiYW5rIHRyaWJ1dGFyaWVzIGFyZSB0aGUgQnVyaGkgRGloaW5nICAgYW5kIHRoZSBEaGFuc2FyaSAoU291dGgpLCB3aGVyZWFzIHRoZSAgIGltcG9ydGFudCByaWdodCBiYW5rIHRyaWJ1dGFyaWVzIGFyZSB0aGUgICBTdWJhbnNpcmksIHRoZSBLYW1lbmcsIHRoZSBNYW5hcyBhbmQgdGhlICAgU2Fua29zaC4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 1, 2 and 3 only  ",
        "option4" : " 1, 2, 3 and 4   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements:  1. The Himalayan drainage system is older  than the peninsular drainage system.  2. The Peninsular Rivers are characterised  by fixed course and absence of  meanders.  3. The Western Ghats, running close to  the western coast, act as the water  divide between the major Peninsular  Rivers.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzMg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgUGVuaW5zdWxhciBkcmFpbmFnZSBzeXN0ZW0gaXMgb2xkZXIgICB0aGFuIHRoZSBIaW1hbGF5YW4gb25lLiBUaGlzIGlzIGV2aWRlbnQgICBmcm9tIHRoZSBicm9hZCwgbGFyZ2VseS1ncmFkZWQgc2hhbGxvdyAgIHZhbGxleXMgYW5kIHRoZSBtYXR1cml0eSBvZiB0aGUgcml2ZXJzLiBUaGUgICBXZXN0ZXJuIEdoYXRzLCBydW5uaW5nIGNsb3NlIHRvIHRoZSAgIHdlc3Rlcm4gY29hc3QsIGFjdCBhcyB0aGUgd2F0ZXIgZGl2aWRlICAgYmV0d2VlbiB0aGUgbWFqb3IgUGVuaW5zdWxhciBSaXZlcnMsICAgZGlzY2hhcmdpbmcgdGhlaXIgd2F0ZXIgaW4gdGhlIEJheSBvZiAgIEJlbmdhbCBhbmQgYXMgc21hbGwgcml2dWxldHMgam9pbmluZyB0aGUgICBBcmFiaWFuIFNlYS4gTW9zdCBvZiB0aGUgbWFqb3IgUGVuaW5zdWxhciAgIFJpdmVycywgZXhjZXB0IHRoZSBOYXJtYWRhIGFuZCB0aGUgVGFwaSwgICBmbG93IGZyb20gd2VzdCB0byBlYXN0LiBUaGUgQ2hhbWJhbCwgdGhlICAgU2luZCwgdGhlIEJldHdhLCB0aGUgS2VuIGFuZCB0aGUgU29uLCAgIG9yaWdpbmF0aW5nIGluIHRoZSBub3J0aGVybiBwYXJ0IG9mIHRoZSAgIFBlbmluc3VsYSwgYmVsb25nIHRvIHRoZSBHYW5nYSByaXZlciAgIHN5c3RlbS4gVGhlIG90aGVyIG1ham9yIHJpdmVyIHN5c3RlbXMgb2YgICB0aGUgcGVuaW5zdWxhciBkcmFpbmFnZSBhcmUgLSB0aGUgICBNYWhhbmFkaSwgdGhlIEdvZGF2YXJpLCB0aGUgS3Jpc2huYSBhbmQgICB0aGUgS2F2ZXJpLiBUaGUgUGVuaW5zdWxhciBSaXZlcnMgYXJlICAgY2hhcmFjdGVyaXNlZCBieSBmaXhlZCBjb3Vyc2UsIGFic2VuY2Ugb2YgICBtZWFuZGVycyBhbmQgbm9uLXBlcmVubmlhbCBmbG93IG9mIHdhdGVyLiAgIFRoZSBOYXJtYWRhIGFuZCB0aGUgVGFwaSwgd2hpY2ggZmxvdyAgIHRocm91Z2ggdGhlIHJpZnQgdmFsbGV5LCBhcmUsIGhvd2V2ZXIsICAgZXhjZXB0aW9ucy4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements:   1. The Mahanadi River rises in Madhya  Pradesh.  2. The Mahanadi River runs through  Odisha to discharge its water into the  Bay of Bengal.   3. The Luni River originates in the  Pushkar valley of the Aravalli Range.   Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzMw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTWFoYW5hZGkgcmlzZXMgbmVhciBTaWhhd2EgaW4gICBSYWlwdXIgZGlzdHJpY3Qgb2YgQ2hoYXR0aXNnYXJoIGFuZCBydW5zICAgdGhyb3VnaCBPZGlzaGEgdG8gZGlzY2hhcmdlIGl0cyB3YXRlciBpbnRvICAgdGhlIEJheSBvZiBCZW5nYWwuIFNvbWUgbmF2aWdhdGlvbiBpcyAgIGNhcnJpZWQgb24gaW4gdGhlIGxvd2VyIGNvdXJzZSBvZiB0aGlzIHJpdmVyLiAgIEZpZnR5LXRocmVlIHBlciBjZW50IG9mIHRoZSBkcmFpbmFnZSBiYXNpbiBvZiAgIHRoaXMgcml2ZXIgbGllcyBpbiBNYWRoeWEgUHJhZGVzaCBhbmQgICBDaGhhdHRpc2dhcmgsIHdoaWxlIDQ3JSBsaWVzIGluIE9kaXNoYS4gICBUaGUgTHVuaSBpcyB0aGUgbGFyZ2VzdCByaXZlciBpbiB0aGUgVGhhciAgIERlc2VydCBvZiBub3J0aC13ZXN0IEluZGlhLiBJdCBvcmlnaW5hdGVzIGluICAgdGhlIFB1c2hrYXIgdmFsbGV5IG9mIHRoZSBBcmF2YWxsaSBSYW5nZSwgICBuZWFyIEFqbWVyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements about  the Godavari River:  1. The Godavari is the largest peninsular  river system.  2. The Indravati, the Pranhita and the  Koyna are its main tributaries.  3. It rises in Nasik district of Maharashtra.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzNA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgR29kYXZhcmkgaXMgdGhlIGxhcmdlc3QgcGVuaW5zdWxhciByaXZlciAgIHN5c3RlbS4gSXQgaXMgYWxzbyBrbm93biBhcyB0aGUgRGFrc2hpbiAgIEdhbmdhLiBJdCByaXNlcyBpbiBOYXNpayBkaXN0cmljdCBvZiAgIE1haGFyYXNodHJhIGFuZCBkaXNjaGFyZ2VzIGl0cyB3YXRlciBpbnRvICAgdGhlIEJheSBvZiBCZW5nYWwuIEl0cyB0cmlidXRhcmllcyBydW4gICB0aHJvdWdoIHRoZSBzdGF0ZXMgb2YgTWFoYXJhc2h0cmEsIE1hZGh5YSAgIFByYWRlc2gsIENoaGF0dGlzZ2FyaCwgT2Rpc2hhIGFuZCBBbmRocmEgICBQcmFkZXNoLiBJdCBpcyAxLDQ2NSBrbSBsb25nLCB3aXRoIGEgICBjYXRjaG1lbnQgYXJlYSBzcHJlYWRpbmcgb3ZlciAzLjEzIGxha2ggICBzcS4ga20sIDQ5JSBvZiB0aGlzIGxpZXMgaW4gTWFoYXJhc2h0cmEsICAgMjAlIGluIE1hZGh5YSBQcmFkZXNoIGFuZCBDaGhhdHRpc2dhcmgsICAgYW5kIHRoZSByZXN0IGluIEFuZGhyYSBQcmFkZXNoLiAgICBUaGUgUGVuZ2FuZ2EsIHRoZSBJbmRyYXZhdGksIHRoZSAgIFByYW5oaXRhIGFuZCB0aGUgTWFuanJhIGFyZSBpdHMgcHJpbmNpcGFsICAgdHJpYnV0YXJpZXMuIFRoZSBHb2RhdmFyaSBpcyBzdWJqZWN0ZWQgdG8gICBoZWF2eSBmbG9vZHMgaW4gaXRzIGxvd2VyIHJlYWNoZXMgdG8gdGhlICAgIHNvdXRoIG9mIFBvbGF2YXJhbSwgd2hlcmUgaXQgZm9ybXMgYSAgIHBpY3R1cmVzcXVlIGdvcmdlLiBJdCBpcyBuYXZpZ2FibGUgb25seSBpbiAgIHRoZSBkZWx0YWljIHN0cmV0Y2guIFRoZSByaXZlciBhZnRlciAgIFJhamFtdW5kcmkgc3BsaXRzIGludG8gc2V2ZXJhbCBicmFuY2hlcywgICBmb3JtaW5nIGEgbGFyZ2UgZGVsdGEuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 3 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 35,
      "question" : "This river is the second largest east-flowing  Peninsular River, which rises in Sahyadri.  Its total length is 1,401 km. The  Tungbhadra and the Bhima are its major  tributaries. Of the total catchment area of  the river, 27% lies in Maharashtra, 44% in  Karnataka and 29% in Andhra Pradesh and  Telangana. The river is-  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzNQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgS3Jpc2huYSBpcyB0aGUgc2Vjb25kIGxhcmdlc3QgZWFzdC0gIGZsb3dpbmcgUGVuaW5zdWxhciBSaXZlciwgd2hpY2ggcmlzZXMgICBuZWFyIE1haGFiYWxlc2h3YXIgaW4gU2FoeWFkcmkuIEl0cyB0b3RhbCAgIGxlbmd0aCBpcyAxLDQwMSBrbS4gVGhlIEtveW5hLCB0aGUgICBUdW5nYmhhZHJhIGFuZCB0aGUgQmhpbWEgYXJlIGl0cyBtYWpvciAgIHRyaWJ1dGFyaWVzLiBPZiB0aGUgdG90YWwgY2F0Y2htZW50IGFyZWEgb2YgICB0aGUgS3Jpc2huYSwgMjclIGxpZXMgaW4gTWFoYXJhc2h0cmEsIDQ0JSAgIGluIEthcm5hdGFrYSBhbmQgMjklIGluIEFuZGhyYSBQcmFkZXNoICAgYW5kIFRlbGFuZ2FuYS4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Indravati   ",
        "option2" : " Kaveri  ",
        "option3" : " Tapi   ",
        "option4" : " Krishna    "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements:  1. The Kabini, the Bhavani and the  Amravati rivers are the tributaries of  the Kaveri River.  2. The largest basin of the Kaveri River  falls in Karnataka.   3. The Kaveri rises in the Brahmagiri hills  of Kogadu district in Karnataka.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzNg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgS2F2ZXJpIHJpc2VzIGluIHRoZSBCcmFobWFnaXJpIGhpbGxzICAgKDEsMzQxIG0pIG9mIEtvZ2FkdSBkaXN0cmljdCBpbiBLYXJuYXRha2EuICAgSXRzIGxlbmd0aCBpcyA4MDAga20gYW5kIGl0IGRyYWlucyBhbiBhcmVhICAgb2YgODEsMTU1IHNxLiBrbS4gU2luY2UgdGhlIHVwcGVyICAgY2F0Y2htZW50IGFyZWEgcmVjZWl2ZXMgcmFpbmZhbGwgZHVyaW5nIHRoZSAgIHNvdXRoLXdlc3QgbW9uc29vbiBzZWFzb24gKHN1bW1lcikgYW5kICAgdGhlIGxvd2VyIHBhcnQgZHVyaW5nIHRoZSBub3J0aC1lYXN0ICAgbW9uc29vbiBzZWFzb24gKHdpbnRlciksIHRoZSByaXZlciBjYXJyaWVzICAgd2F0ZXIgdGhyb3VnaG91dCB0aGUgeWVhciwgd2l0aCAgIGNvbXBhcmF0aXZlbHkgbGVzcyBmbHVjdHVhdGlvbiB0aGFuIHRoZSAgIG90aGVyIFBlbmluc3VsYXIgUml2ZXJzLiAgICBBYm91dCAzJSBvZiB0aGUgS2F2ZXJpIGJhc2luIGZhbGxzIGluICAgS2VyYWxhLCA0MSUgaW4gS2FybmF0YWthIGFuZCA1NiUgaW4gICBUYW1pbCBOYWR1LiAgICBJdHMgaW1wb3J0YW50IHRyaWJ1dGFyaWVzIGFyZSB0aGUgS2FiaW5pLCB0aGUgICBCaGF2YW5pIGFuZCB0aGUgQW1yYXZhdGkuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 and 3 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 2 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements:  1. The Narmada River flows in a rift valley  between the Satpura range and the  Vindhyan range.  2. The Tapi River originates from Multai in  Betul district of Madhya Pradesh.  3. The Vaitarna rises from the  Amarkantak plateau.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzNw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTmFybWFkYSBvcmlnaW5hdGVzIG9uIHRoZSB3ZXN0ZXJuICAgZmxhbmsgb2YgdGhlIEFtYXJrYW50YWsgcGxhdGVhdS4gRmxvd2luZyAgIGluIGEgcmlmdCB2YWxsZXkgYmV0d2VlbiB0aGUgU2F0cHVyYSByYW5nZSAgIGluIHRoZSBzb3V0aCBhbmQgdGhlIFZpbmRoeWFuIHJhbmdlIGluIHRoZSAgIG5vcnRoLCBpdCBmb3JtcyBhIHBpY3R1cmVzcXVlIGdvcmdlIGluICAgbWFyYmxlIHJvY2tzIGFuZCBEaHVhbmRoYXIgd2F0ZXJmYWxsICAgbmVhciBKYWJhbHB1ci4gICAgQWZ0ZXIgZmxvd2luZyBhIGRpc3RhbmNlIG9mIGFib3V0IDEsMzEyIGttLCAgIGl0IG1lZXRzIHRoZSBBcmFiaWFuIFNlYSBzb3V0aCBvZiBCaGFydWNoLCAgIGZvcm1pbmcgYSBicm9hZCAyNyBrbSBsb25nIGVzdHVhcnkuIEl0cyAgIGNhdGNobWVudCBhcmVhIGlzIGFib3V0IDk4LDc5NiBzcS4ga20uICAgVGhlIFNhcmRhciBTYXJvdmFyIFByb2plY3QgaGFzIGJlZW4gICBjb25zdHJ1Y3RlZCBvbiB0aGlzIHJpdmVyLiAgIFRoZSBUYXBpIGlzIHRoZSBvdGhlciBpbXBvcnRhbnQgd2VzdHdhcmQgICBmbG93aW5nIHJpdmVyLiBJdCBvcmlnaW5hdGVzIGZyb20gTXVsdGFpIGluICAgdGhlIEJldHVsIGRpc3RyaWN0IG9mIE1hZGh5YSBQcmFkZXNoLiBJdCBpcyAgIDcyNCBrbSBsb25nIGFuZCBkcmFpbnMgYW4gYXJlYSBvZiA2NSwxNDUgICBzcS4ga20uIE5lYXJseSA3OSUgb2YgaXRzIGJhc2luIGxpZXMgaW4gICBNYWhhcmFzaHRyYSwgMTUlIGluIE1hZGh5YSBQcmFkZXNoIGFuZCAgIHRoZSByZW1haW5pbmcgNiUgaW4gR3VqYXJhdC4gICAgVGhlIFZhaXRhcm5hIHJpc2VzIGZyb20gdGhlIFRyaW1iYWsgICBoaWxscyBpbiBOYXNpayBkaXN0cmljdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following pairs:   S.N. River Originated from  1. Kalinadi river Hubli Dharwar   2. Bedti river Belgaum district   3. Sharavati river Shimoga district  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzOA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgcml2ZXJzIGZsb3dpbmcgdG93YXJkcyB0aGUgQXJhYmlhbiBTZWEgICBoYXZlIHNob3J0IGNvdXJzZXMuIFRoZSBTaGV0cnVuaWppIGlzIG9uZSAgIHN1Y2ggcml2ZXIgd2hpY2ggcmlzZXMgbmVhciBEYWxrYWh3YSBpbiAgIEFtcmVsaSBkaXN0cmljdC4gVGhlIEJoYWRyYSBvcmlnaW5hdGVzIG5lYXIgICBBbmlhbGkgdmlsbGFnZSBpbiBSYWprb3QgZGlzdHJpY3QuIFRoZSAgIERoYWRoYXIgcmlzZXMgbmVhciBHaGFudGFyIHZpbGxhZ2UgaW4gICBQYW5jaG1haGFsIGRpc3RyaWN0LiBUaGUgU2FiYXJtYXRpIGFuZCAgIHRoZSBNYWhpIGFyZSB0aGUgdHdvIGZhbW91cyByaXZlcnMgb2YgICBHdWphcmF0LiAgIFRoZSBWYWl0YXJuYSByaXNlcyBmcm9tIHRoZSBUcmltYmFrIGhpbGxzICAgaW4gTmFzaWsgZGlzdHJpY3QgYXQgYW4gZWxldmF0aW9uIG9mIDY3MCBtLiAgIFRoZSBLYWxpbmFkaSByaXNlcyBmcm9tIEJlbGdhdW0gZGlzdHJpY3QgICBhbmQgZmFsbHMgaW4gdGhlIEthcndhciBCYXkuIFRoZSBzb3VyY2UgICBvZiBCZWR0aSByaXZlciBsaWVzIGluIEh1YmxpIERoYXJ3YXIgYW5kICAgdHJhdmVyc2VzIGEgY291cnNlIG9mIDE2MSBrbS4gICAgVGhlIFNoYXJhdmF0aSBpcyBhbm90aGVyIGltcG9ydGFudCByaXZlciAgIGluIEthcm5hdGFrYSBmbG93aW5nIHRvd2FyZHMgdGhlIHdlc3QuICAgVGhlIFNoYXJhdmF0aSBvcmlnaW5hdGVzIGluIFNoaW1vZ2EgICBkaXN0cmljdCBvZiBLYXJuYXRha2EuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " All three pairs  ",
        "option4" : " None of the above    "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following is/are the tributaries  of the Indus River?  1. Shigar   2. Viboa   3. Sangar   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXwzOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBJbmR1cyByZWNlaXZlcyBhIG51bWJlciBvZiBIaW1hbGF5YW4gICB0cmlidXRhcmllcyBzdWNoIGFzIHRoZSBTaHlvaywgdGhlIEdpbGdpdCwgICB0aGUgWmFza2FyLCB0aGUgSHVuemEsIHRoZSBOdWJyYSwgdGhlICAgU2hpZ2FyLCB0aGUgR2FzdGluZyBhbmQgdGhlIERyYXMuIEl0ICAgZmluYWxseSBlbWVyZ2VzIG91dCBvZiB0aGUgaGlsbHMgbmVhciBBdHRvY2sgICB3aGVyZSBpdCByZWNlaXZlcyB0aGUgS2FidWwgUml2ZXIgb24gaXRzICAgcmlnaHQgYmFuay4gVGhlIG90aGVyIGltcG9ydGFudCB0cmlidXRhcmllcyAgICBqb2luaW5nIHRoZSByaWdodCBiYW5rIG9mIHRoZSBJbmR1cyBhcmUgdGhlICAgS2h1cnJhbSwgdGhlIFRvY2hpLCB0aGUgR29tYWwsIHRoZSAgIFZpYm9hIGFuZCB0aGUgU2FuZ2FyLiBUaGV5IGFsbCBvcmlnaW5hdGUgaW4gICB0aGUgU3VsYWltYW4gcmFuZ2VzLiBUaGUgcml2ZXIgZmxvd3MgICBzb3V0aHdhcmQgYW5kIHJlY2VpdmVzICdQYW5qbmFkJyBhIGxpdHRsZSAgIGFib3ZlIE1pdGhhbmtvdC4gVGhlIFBhbmpuYWQgaXMgdGhlIG5hbWUgICBnaXZlbiB0byB0aGUgZml2ZSByaXZlcnMgb2YgUHVuamFiLCBuYW1lbHkgICB0aGUgU2F0bHVqLCB0aGUgQmVhcywgdGhlIFJhdmksIHRoZSBDaGVuYWIgICBhbmQgdGhlIEpoZWx1bS4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 1 and 2 only   ",
        "option3" : " 2 and 3 only   ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs:  S.N. River Originate from  1. Jhelum  Baltoro  2. Indus  Zemu   3. Ravi  Rohtang pass  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0MA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgSmhlbHVtIG9yaWdpbmF0ZXMgZnJvbSBWZXJpbmFnIHNpdHVhdGVkIGF0ICAgdGhlIGZvb3Qgb2YgdGhlIFBpciBQYW5qYWwgaW4gdGhlIHNvdXRoLSAgZWFzdGVybiBwYXJ0IG9mIHRoZSB2YWxsZXkgb2YgS2FzaG1pci4gICAgIEluZHVzIG9yaWdpbmF0ZXMgZnJvbSBhIGdsYWNpZXIgbmVhciBCb2toYXIgICBDaHUgaW4gdGhlIFRpYmV0YW4gcmVnaW9uIGF0IGFuIGFsdGl0dWRlIG9mICAgNCwxNjQgbSBpbiB0aGUgS2FpbGFzaCBNb3VudGFpbiByYW5nZS4gICAgUmF2aSByaXNlcyB3ZXN0IG9mIHRoZSBSb2h0YW5nIHBhc3MgaW4gdGhlICAgS3VsbHUgaGlsbHMgb2YgSGltYWNoYWwgUHJhZGVzaCBhbmQgZmxvd3MgICB0aHJvdWdoIHRoZSBDaGFtYmEgdmFsbGV5LiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " All three pairs  ",
        "option4" : " None of the above   "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements:  1. Indus River forms a gorge at Nanga  Parbat.   2. Beas forms gorges in the Dhaoladhar  range.   Which of the following statements is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0MQ==",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgVGhlIEluZHVzIEdvcmdlIGlzIGZvcm1lZCBieSB0aGUgSW5kdXMgICBSaXZlciBhcyBpdCBza2lydHMgdGhlIE5hbmdhIFBhcmJhdCBtYXNzaWYsICAgdGhlIHdlc3Rlcm4gYW5jaG9yIG9mIHRoZSBHcmVhdGVyICAgSGltYWxheWFzLCBhbmQgYmVmb3JlIGl0IGRlYm91Y2hlcyBpbnRvICAgdGhlIHBsYWlucyBvZiBQdW5qYWIgaW4gUGFraXN0YW4uICAgIFRoZSBCZWFzIGlzIGltcG9ydGFudCB0cmlidXRhcnkgb2YgdGhlICAgSW5kdXMsIG9yaWdpbmF0aW5nIGZyb20gdGhlIEJlYXMgS3VuZCBuZWFyICAgdGhlIFJvaHRhbmcgUGFzcyBhdCBhbiBlbGV2YXRpb24gb2YgNCwwMDAgICBtIGFib3ZlIHRoZSBtZWFuIHNlYSBsZXZlbC4gVGhlIHJpdmVyIGZsb3dzICAgdGhyb3VnaCB0aGUgS3VsbHUgdmFsbGV5IGFuZCBmb3JtcyBnb3JnZXMgICBhdCBLYXRpIGFuZCBMYXJnaSBpbiB0aGUgRGhhb2xhZGhhciByYW5nZS4gICBJdCBlbnRlcnMgdGhlIFB1bmphYiBwbGFpbnMgd2hlcmUgaXQgbWVldHMgICB0aGUgU2F0bHVqIG5lYXIgSGFyaWtlLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only   ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following pairs:  S.N. Rivers Meets at  1. Alaknanda and  Bhagirathi   Devprayag   2. Dhauli and Vishnu  Ganga    Rudra  Prayag   3. Alaknanda and  Pindar   Karna  Prayag   How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0Mg==",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgQXQgRGV2cHJheWFnLCB0aGUgQmhhZ2lyYXRoaSBtZWV0cyB0aGUgICBBbGFrbmFuZGE7IGhlcmVhZnRlciwgaXQgaXMga25vd24gYXMgdGhlICAgR2FuZ2EuIFRoZSBBbGFrbmFuZGEgaGFzIGl0cyBzb3VyY2UgaW4gICB0aGUgU2F0b3BhbnRoIGdsYWNpZXIgYWJvdmUgQmFkcmluYXRoLiAgICBUaGUgQWxha25hbmRhIGNvbnNpc3RzIG9mIHRoZSBEaGF1bGkgYW5kICAgdGhlIFZpc2hudSBHYW5nYSB3aGljaCBtZWV0IGF0ICAgSm9zaGltYXRoIG9yIFZpc2hudSBQcmF5YWcuICAgIFRoZSBvdGhlciB0cmlidXRhcmllcyBvZiBBbGFrbmFuZGEgc3VjaCBhcyAgIHRoZSBQaW5kYXIgam9pbiBpdCBhdCBLYXJuYSBQcmF5YWcgd2hpbGUgICBNYW5kYWtpbmkgb3IgS2FsaSBHYW5nYSBtZWV0cyBpdCBhdCBSdWRyYSAgIFByYXlhZy4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " All three pairs  ",
        "option4" : " None of the above    "
      }
    },
    {
      "index" : 43,
      "question" : "Which of the following is/are the right  Bank tributaries of Ganga?  1. Ghaghra   2. Son   3. Yamuna   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0Mw==",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgVGhlIFNvbiBhbmQgWWFtdW5hIGFyZSBtYWpvciByaWdodCBiYW5rICAgdHJpYnV0YXJ5LiBUaGUgaW1wb3J0YW50IGxlZnQgYmFuayAgIHRyaWJ1dGFyaWVzIGFyZSB0aGUgUmFtZ2FuZ2EsIHRoZSBHb21hdGksICAgdGhlIEdoYWdoYXJhLCB0aGUgR2FuZGFrLCB0aGUgS29zaSBhbmQgICB0aGUgTWFoYW5hbmRhICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 1 and 2 only   ",
        "option3" : " 2 and 3 only   ",
        "option4" : " 1, 2 and 3     "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following pairs:  S.N. River Originates from  1. Kosi   Near Mt Everest   2. Ramganga  Garhwal hills   3. Saryu  Mapchachungo  Glacier   How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0NA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBLb3NpIGlzIGFuIGFudGVjZWRlbnQgcml2ZXIgd2l0aCBpdHMgICBzb3VyY2UgdG8gdGhlIG5vcnRoIG9mIE1vdW50IEV2ZXJlc3QgaW4gICBUaWJldCwgd2hlcmUgaXRzIG1haW4gc3RyZWFtIEFydW4gcmlzZXMuICAgVGhlIFJhbWdhbmdhIGlzIGNvbXBhcmF0aXZlbHkgYSBzbWFsbCAgIHJpdmVyIHJpc2luZyBpbiB0aGUgR2FyaHdhbCBoaWxscyBuZWFyICAgR2FpcnNhaW4uICAgVGhlIFNhcmRhIG9yIFNhcnl1IFJpdmVyIHJpc2VzIGluIHRoZSAgIE1pbGFtIGdsYWNpZXIgaW4gdGhlIE5lcGFsIEhpbWFsYXlhcyAgIHdoZXJlIGl0IGlzIGtub3duIGFzIHRoZSBHb3JpZ2FuZ2EuICAgVGhlIEdoYWdoYXJhIG9yaWdpbmF0ZXMgaW4gdGhlIGdsYWNpZXJzIG9mICAgTWFwY2hhY2h1bmdvLiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " Only one pair  ",
        "option2" : " Only two pairs  ",
        "option3" : " All three pairs  ",
        "option4" : " None of the above    "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements:  1.  Indira Gandhi Canal is the country's  longest canal which terminates in  irrigation facilities in Thar Desert.  2.  The canal begins at the Harike Barrage  at the confluence of the Sutlej and  Beas.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0NQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgSW5kaXJhIEdhbmRoaSBDYW5hbCBpcnJpZ2F0ZXMgYSB2YXN0ICAgYW1vdW50IG9mIGxhbmQgaW4gdGhlIEluZGlhbiBwb3J0aW9uIG9mIHRoZSAgIFRoYXIuIFRoZSBjYW5hbCBiZWdpbnMgYXQgdGhlIEhhcmlrZSAgIEJhcnJhZ2UtYXQgdGhlIGNvbmZsdWVuY2Ugb2YgdGhlIFN1dGxlaiAgIGFuZCBCZWFzIHJpdmVycy4gICBJbmRpcmEgR2FuZGhpIENhbmFsIGlzIHRoZSBjb3VudHJ5J3MgICBsb25nZXN0IGNhbmFsLiAgIFRoZSBjYW5hbCBjb25zaXN0cyBvZiB0aGUgUmFqYXN0aGFuIGZlZWRlciAgIGNhbmFsIHdpdGggdGhlIGZpcnN0IDE2NyBraWxvbWV0cmVzICgxMDQgbWkpICAgaW4gUHVuamFiIGFuZCBIYXJ5YW5hIHN0YXRlIGFuZCBhIGZ1cnRoZXIgICAzNyBraWxvbWV0cmVzICgyMyBtaSkgaW4gUmFqYXN0aGFuLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 46,
      "question" : "Which of the following statements is/are  correct?  1.  The drainage pattern resembling the  branches of a tree is known as  centripetal.  2.  When the rivers discharge their waters  from all directions in a lake or  depression, the pattern is known as  'dendritic'.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0Ng==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEltcG9ydGFudCBEcmFpbmFnZSBQYXR0ZXJuczogICAoaSkgIFRoZSBkcmFpbmFnZSBwYXR0ZXJuIHJlc2VtYmxpbmcgdGhlICAgYnJhbmNoZXMgb2YgYSB0cmVlIGlzIGtub3duIGFzICAgICdkZW5kcml0aWMnIHRoZSBleGFtcGxlcyBvZiB3aGljaCBhcmUgICB0aGUgcml2ZXJzIG9mIG5vcnRoZXJuIHBsYWluLiAgICAoaWkpICBXaGVuIHRoZSByaXZlcnMgb3JpZ2luYXRlIGZyb20gYSBoaWxsICAgYW5kIGZsb3cgaW4gYWxsIGRpcmVjdGlvbnMsIHRoZSBkcmFpbmFnZSAgIHBhdHRlcm4gaXMga25vd24gYXMgJ3JhZGlhbCcuIFRoZSByaXZlcnMgICBvcmlnaW5hdGluZyBmcm9tIHRoZSBBbWFya2FudGFrIHJhbmdlICAgcHJlc2VudCBhIGdvb2QgZXhhbXBsZSBvZiBpdC4gICAgKGlpaSkgIFdoZW4gdGhlIHByaW1hcnkgdHJpYnV0YXJpZXMgb2Ygcml2ZXJzICAgZmxvdyBwYXJhbGxlbCB0byBlYWNoIG90aGVyIGFuZCAgIHNlY29uZGFyeSB0cmlidXRhcmllcyBqb2luIHRoZW0gYXQgcmlnaHQgICBhbmdsZXMsIHRoZSBwYXR0ZXJuIGlzIGtub3duIGFzICd0cmVsbGlzJy4gICAgKGl2KSAgV2hlbiB0aGUgcml2ZXJzIGRpc2NoYXJnZSB0aGVpciB3YXRlcnMgICBmcm9tIGFsbCBkaXJlY3Rpb25zIGluIGEgbGFrZSBvciAgIGRlcHJlc3Npb24sIHRoZSBwYXR0ZXJuIGlzIGtub3duIGFzICAgJ2NlbnRyaXBldGFsJy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 47,
      "question" : " Which of the following rivers has the  highest catchment area?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0Nw==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFMuTi4gUml2ZXIgQ2F0Y2htZW50IGFyZWEgICAxLiBTdWJhcm5hcmVraGEgMTksMjk2ICAgMi4gQmFpdGFybmkgMTIsNzg5ICAgMy4gQnJhaG1hbmkgMzksMDMzICAgNC4gUGVubmVyIDU1LDIxMyAgIDUuIFBhbGFyIDE3LDg3MCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "  Subarnarekha  ",
        "option2" : "  Brahmani  ",
        "option3" : "  Penner  ",
        "option4" : "  Palar   "
      }
    },
    {
      "index" : 48,
      "question" : "Gersoppa fall is located on which of the  following rivers?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0OA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEpvZyBGYWxscywgYWxzbyBjYWxsZWQgR2Vyc29wcGEgRmFsbHMsIGlzICAgbG9jYXRlZCBvbiB0aGUgU2hhcmF2YXRpIFJpdmVyLCBLYXJuYXRha2EuICAgVGhlIEpvZyBGYWxscyBhcmUgbG9jYXRlZCBuZWFyIHVwc3RyZWFtICAgZnJvbSBIb25hdmFyIGF0IHRoZSByaXZlcidzIG1vdXRoIG9uIHRoZSAgIEFyYWJpYW4gU2VhLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "  Sharavati  ",
        "option2" : "  Mandovi  ",
        "option3" : "  Bharathapuzha  ",
        "option4" : "  Periyar   "
      }
    },
    {
      "index" : 49,
      "question" : "The Srisailam Dam is constructed across  which of the following rivers?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw0OQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgU3Jpc2FpbGFtIERhbSBpcyBjb25zdHJ1Y3RlZCBhY3Jvc3MgICB0aGUgS3Jpc2huYSBSaXZlciBvbiB0aGUgYm9yZGVyIG9mICAgTWFoYWJ1Ym5hZ2FyIERpc3RyaWN0LCBUZWxhbmdhbmEgYW5kICAgS3Vybm9vbCBkaXN0cmljdCwgQW5kaHJhIFByYWRlc2ggbmVhciAgIFNyaXNhaWxhbSB0ZW1wbGUgdG93bi4gICBUaGUgZGFtIHdhcyBjb25zdHJ1Y3RlZCBpbiBhIGRlZXAgZ29yZ2UgICBpbiB0aGUgTmFsbGFtYWxhIEhpbGxzIGluIGJldHdlZW4gICBNYWhhYnVibmFnYXIgYW5kIEt1cm5vb2wgZGlzdHJpY3RzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "  Krishna River  ",
        "option2" : "  Kaveri River  ",
        "option3" : "  Tapi River  ",
        "option4" : " Gandak River   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following pairs:  S.N. Hills/Range State  1. Shevaroy hills Andhra  Pradesh  2. Harischandra  Range  Maharashtra  3. Balaghat range Madhya  Pradesh  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWXw1MA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBTLk4uIEhpbGxzL1JhbmdlIFN0YXRlICAgMS4gU2hldmFyb3kgaGlsbHMgVGFtaWwgTmFkdSAgIDIuIEhhcmlzY2hhbmRyYSAgIFJhbmdlICAgTWFoYXJhc2h0cmEgICAzLiBCYWxhZ2hhdCByYW5nZSBNYWhhcmFzaHRyYSAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8SU5ESUFOIEdFT0dSQVBIWQ==",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "INDIAN GEOGRAPHY",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "  Only one pair  ",
        "option2" : "  Only two pairs  ",
        "option3" : "  All three pairs  ",
        "option4" : "  None of the above  "
      }
    }
  ],
  "subject" : "Geography",
  "topic" : "INDIAN GEOGRAPHY",
  "year" : "2023"
}
