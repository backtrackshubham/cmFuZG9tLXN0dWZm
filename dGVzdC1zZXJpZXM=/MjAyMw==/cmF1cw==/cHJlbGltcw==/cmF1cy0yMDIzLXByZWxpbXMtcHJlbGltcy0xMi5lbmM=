{
  "testId" : "raus-2023-prelims-prelims-12",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\raus\\prelims\\raus-2023-prelims-prelims-12.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which of the following components are  included in the Broad Money (M3)?  1. Currency with the public.  2.  Currency with the banks.  3. Demand and time deposits with the  banks.  4.  Demand and time deposits with the  post offices.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgdG90YWwgc3RvY2sgb2YgbW9uZXkgaW4gY2lyY3VsYXRpb24gYW1vbmcgdGhlIHB1YmxpYyBhdCBhIHBhcnRpY3VsYXIgcG9pbnQgb2YgdGltZSBpcyBjYWxsZWQgICAnbW9uZXkgc3VwcGx5Jy4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  1 and 3 only  ",
        "option3" : "  1, 2 and 3 only  ",
        "option4" : "  1, 2, 3 and 4   "
      }
    },
    {
      "index" : 2,
      "question" : " Which of the following factors can directly  lead to increase in High Powered Money?  1.  Increase in currency with the public.  2.  Increase in demand deposits with the  banks.  3.  Increase in CRR deposits with the RBI.  4.  Increase in time deposits with the  banks.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mg==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgdG90YWwgbGlhYmlsaXR5IG9mIHRoZSBSQkkgaXMgY2FsbGVkIHRoZSAgIG1vbmV0YXJ5IGJhc2Ugb3IgSGlnaCBQb3dlcmVkIE1vbmV5LiAgIEFsc28ga25vd24gYXMgUmVzZXJ2ZSBNb25leSBvciBNMC4gTTAgaXMgICBjYWxjdWxhdGVkIGFzOiBDdXJyZW5jeSB3aXRoIHRoZSBwdWJsaWMgKyAgIEN1cnJlbmN5IHdpdGggdGhlIGJhbmtzICsgQmFua2VyJ3MgICBkZXBvc2l0cyB3aXRoIHRoZSBSQkkgKENSUiBkZXBvc2l0cykgKyAgICdPdGhlcicgZGVwb3NpdHMgd2l0aCB0aGUgUkJJLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  1 and 3 only  ",
        "option3" : "  2 and 4 only  ",
        "option4" : "  2 and 3 only   "
      }
    },
    {
      "index" : 3,
      "question" : "An increase in Broad Money (M3),  accompanied by a decrease in Reserve  Money (M0), is likely to  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBBZnRlciBrZWVwaW5nIGFzaWRlIHRoZSByZXNlcnZlICAgcmVxdWlyZW1lbnRzLCB0aGUgYmFua3MgbGVuZCB0aGUgbW9uZXkgICByZWNlaXZlZCBvdXQgb2YgZGVwb3NpdHMuIEEgcGFydCBvZiB0aGlzICAgbW9uZXkgaXMgZnVydGhlciBkZXBvc2l0ZWQgaW4gdGhlIGJhbmtpbmcgICBzeXN0ZW0sIGFmdGVyIGNoYW5naW5nIG11bHRpcGxlIGhhbmRzIGluICAgdGhlIGVjb25vbXkuIEEgcGFydCBvZiB0aGlzIGRlcG9zaXQgaXMgICBmdXJ0aGVyIHVzZWQgZm9yIGxlbmRpbmcuIFRoaXMgY3ljbGUgb2YgICBsZW5kaW5nIGFuZCBkZXBvc2l0aW5nIGNyZWF0ZXMgYWRkaXRpb25hbCAgIG1vbmV5IGluIHRoZSBlY29ub215LiBUaGUgYWRkaXRpb25hbCAgIG1vbmV5IGNyZWF0ZWQgaXMgY2FsY3VsYXRlZCBieSBhIHRlcm0gICBjYWxsZWQgTW9uZXkgTXVsdGlwbGllci4gICAgVGh1cywgdGhlIE1vbmV5IE11bHRpcGxpZXIgdGVsbHMgdXMgYnkgaG93ICAgbWFueSB0aW1lcyBhbiBpbml0aWFsIGxvYW4gd2lsbCBiZSAgICdtdWx0aXBsaWVkJywgYXMgaXQgaXMgc3BlbnQgaW4gdGhlIGVjb25vbXkgICBhbmQgdGhlbiByZS1kZXBvc2l0ZWQgaW4gb3RoZXIgYmFua3MuICAgTW9uZXkgTXVsdGlwbGllciA9IDEvciAod2hlcmUgciA9IFJlc2VydmUgICBSYXRpbykuIEFsc28gY2FsY3VsYXRlZCBhcyAoTTMvTTApICAgTm90ZTogVGhlIE1vbmV5IE11bHRpcGxpZXIgaXMgYWxzbyAgIGNhbGN1bGF0ZWQgYXMgKE0zL00wKS4gRm9yIGV4YW1wbGUsIHRoZSAgIHRvdGFsIFJlc2VydmUgTW9uZXkgKE0wKSBhcyBvZiBBcHJpbCwgMjAyMSwgICBpcyBScy4gMzUgbGFraCBjcm9yZXMuIFRoZSB0b3RhbCBCcm9hZCAgIE1vbmV5IChNMykgaXMgYXJvdW5kIFJzLiAxODcgbGFraCBjcm9yZXMuICAgSGVuY2UsIHByZXNlbnRseSwgdGhlIE1vbmV5IE11bHRpcGxpZXIgaXMgICBhcHByb3hpbWF0ZWx5IGFyb3VuZCA1LjM0LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  increase the Money Multiplier.  ",
        "option2" : "  reduce the Money Multiplier.  ",
        "option3" : "  not impact the Money Multiplier.  ",
        "option4" : " either increase or decrease the Money   Multiplier, depending upon the extent of   changes in Broad Money and Reserve   Money.   "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements related  to Seigniorage:  1. Seigniorage refers to the cost incurred  by the Central Bank for the printing of  the currency notes.  2.  The adoption of cashless economy is  likely to increase Seigniorage of the  Central Bank.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICAnU2VpZ25pb3JhZ2UnIHJlZmVycyB0byB0aGUgcHJvZml0IHdoaWNoICAgYWNjcnVlcyB0byB0aGUgQ2VudHJhbCBCYW5rIGR1ZSB0byB0aGUgICBwcmludGluZyBvZiB0aGUgY3VycmVuY3kgbm90ZXMuIFRoaXMgaXMgICBtYWlubHkgb24gYWNjb3VudCBvZiB0aGUgZmFjdCB0aGF0IHRoZSAgICBpbnRyaW5zaWMgdmFsdWUgb2YgdGhlIHBhcGVyIGN1cnJlbmN5IGlzICAgbXVjaCBsb3dlciB0aGFuIGl0cyBmYWNlIHZhbHVlLiBGb3IgICBleGFtcGxlLCB0aGUgY29zdCBvZiBwcmludGluZyBhIFJzLiA1MDAtbm90ZSAgIG1heSBiZSBScy4gMy4gSGVuY2UsIHByaW50aW5nIG9uZSBzdWNoICAgbm90ZSBhbmQgcHV0dGluZyBpdCBpbnRvIGNpcmN1bGF0aW9uIGZldGNoZXMgICBhIHByb2ZpdCBvZiBScy4gNDk3LlVzdWFsbHksIHRoZSBDZW50cmFsICAgQmFua3MgJ2Vhcm4nIHRoaXMgcHJvZml0IGFuZCB0cmFuc2ZlciBpdCB0byAgIHRoZSBnb3Zlcm5tZW50LiAgIFRoZSBhZG9wdGlvbiBvZiBjYXNobGVzcyBlY29ub215IHJlZHVjZXMgICB0aGUgY29zdCBpbmN1cnJlZCBieSB0aGUgQ2VudHJhbCBCYW5rIG9uICAgcHJpbnRpbmcgbm90ZXMuIFRoZSBkZWNyZWFzZSBpbiBleHBlbmRpdHVyZSAgIHdvdWxkIGxlYWQgdG8gYW4gaW5jcmVhc2UgaW4gdGhlIG92ZXJhbGwgICBwcm9maXRzIG9mIHRoZSBDZW50cmFsIEJhbmsuIEhlbmNlLCB0aGUgICBhZG9wdGlvbiBvZiB0aGUgY2FzaGxlc3MgZWNvbm9teSBpcyBsaWtlbHkgICB0byBpbmNyZWFzZSBTZWlnbmlvcmFnZSBvZiB0aGUgQ2VudHJhbCAgIEJhbmsuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following is/are likely to have  impact on the Money Multiplier in an  economy?  1. Reserve Ratio  2. Currency Deposit Ratio  3. Reverse Repo  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgTW9uZXkgTXVsdGlwbGllciBpbiBhbiBlY29ub215ICAgd291bGQgYmUgYWZmZWN0ZWQgYnkgLSAgIFJlc2VydmUgUmF0aW86IFRoZSBNb25leSBNdWx0aXBsaWVyIGlzICAgY2FsY3VsYXRlZCBhcyAxL3IgKHdoZXJlIHIgPSBSZXNlcnZlIFJhdGlvKS4gICBIZW5jZSwgdGhlIE1vbmV5IE11bHRpcGxpZXIgaXMgaW52ZXJzZWx5ICAgcmVsYXRlZCB0byB0aGUgUmVzZXJ2ZSBSYXRpby4gTG93ZXIgdGhlICAgUmVzZXJ2ZSBSYXRpbywgaGlnaGVyIHdvdWxkIGJlIHRoZSBNb25leSAgIE11bHRpcGxpZXIuICAgQ3VycmVuY3kgRGVwb3NpdCBSYXRpbyAoQ0RSKTogVGhlIHJhdGlvICAgb2YgbW9uZXkgaGVsZCBieSB0aGUgcHVibGljIGluIGN1cnJlbmN5IHRvICAgdGhhdCB0aGV5IGhvbGQgaW4gYmFuayBkZXBvc2l0cy4gSXQgcmVmbGVjdHMgICB0aGUgcGVvcGxlJ3MgcHJlZmVyZW5jZSBmb3IgbGlxdWlkaXR5LiBGb3IgICBleGFtcGxlLCB0aGUgQ0RSIGluY3JlYXNlcyBkdXJpbmcgdGhlICAgZmVzdGl2ZSBzZWFzb24sIGFzIHRoZSBwZW9wbGUgY29udmVydCAgIGRlcG9zaXRzIHRvIGNhc2ggYmFsYW5jZSBmb3IgbWVldGluZyBleHRyYSAgIGV4cGVuZGl0dXJlIGR1cmluZyBzdWNoIHBlcmlvZHMuIElmIHRoZSAgIGN1cnJlbmN5IGRlcG9zaXQgcmF0aW8gaW5jcmVhc2VzLCB0aGF0ICAgbWVhbnMgdGhlIHB1YmxpYyBpcyBob2xkaW5nIG1vcmUgb2YgaXRzICAgbW9uZXkgb3V0IG9mIGJhbmtzLCByYXRoZXIgdGhhbiBkZXBvc2l0aW5nICAgaXQuIEhlbmNlLCB0aGUgTW9uZXkgTXVsdGlwbGllciB3aWxsIGdvICAgZG93bi4gICBSZXZlcnNlIFJlcG86ICAgIO+CtyBJZiB0aGUgUmV2ZXJzZSBSZXBvIHJlZHVjZXMsIG1vcmUgICBtb25leSB3b3VsZCBiZSBhdmFpbGFibGUgd2l0aCB0aGUgICBiYW5rcyBmb3IgZ2l2aW5nIGxvYW5zLiBIZW5jZSwgdGhlICAgTW9uZXkgTXVsdGlwbGllciBpcyBleHBlY3RlZCB0byAgIGluY3JlYXNlLiAgIO+CtyBJZiB0aGUgUmV2ZXJzZSBSZXBvIGluY3JlYXNlcywgbGVzcyAgIG1vbmV5IHdvdWxkIGJlIGF2YWlsYWJsZSB3aXRoIHRoZSAgIGJhbmtzIGZvciBnaXZpbmcgbG9hbnMuIEhlbmNlLCB0aGUgICBNb25leSBNdWx0aXBsaWVyIGlzIGV4cGVjdGVkIHRvIHJlZHVjZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following best describes the  objective of the RBI?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Ng==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBBY2NvcmRpbmcgdG8gdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSBBY3QsICAgMTkzNCAoYXMgYW1lbmRlZCBpbiAyMDE2KSwgdGhlIFJCSSBpcyAgIGVudHJ1c3RlZCB3aXRoIHRoZSByZXNwb25zaWJpbGl0eSBvZiAgIGNvbmR1Y3RpbmcgbW9uZXRhcnkgcG9saWN5IGluIEluZGlhLCB3aXRoICAgdGhlIHByaW1hcnkgb2JqZWN0aXZlIG9mIG1haW50YWluaW5nICAgcHJpY2Ugc3RhYmlsaXR5LCB3aGlsZSBrZWVwaW5nIGluIG1pbmQgICB0aGUgb2JqZWN0aXZlIG9mIGdyb3d0aC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  The RBI must solely focus on the   maintenance of price stability.  ",
        "option2" : "  The RBI must focus on the promotion of   growth, while keeping in mind price   stability.  ",
        "option3" : "  The RBI must focus on price stability,   while keeping in mind the promotion of   growth.  ",
        "option4" : "  The RBI must give equal emphasis on   the promotion of growth and price   stability.    "
      }
    },
    {
      "index" : 7,
      "question" : "With respect to the RBI's role as 'the  Banker to the Government', consider the  following statements:  1. The RBI has both the obligation and the  right to act as the Banker to the Central  Government.  2.  The RBI directly accepts and makes  payments on behalf of the Government.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Nw==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIEFjdCwgMTkzNCwgICByZXF1aXJlcyB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50IHRvIGVudHJ1c3QgICB0aGUgUkJJIHdpdGggYWxsIGl0cyBtb25leSwgcmVtaXR0YW5jZSwgICBleGNoYW5nZSBhbmQgYmFua2luZyB0cmFuc2FjdGlvbnMgaW4gICBJbmRpYSwgYW5kIHRoZSBtYW5hZ2VtZW50IG9mIGl0cyBwdWJsaWMgICBkZWJ0LiBUaHVzLCB0aGUgbGVnYWwgcHJvdmlzaW9ucyB2ZXN0IHRoZSAgIFJlc2VydmUgQmFuayBvZiBJbmRpYSB3aXRoIGJvdGggdGhlIHJpZ2h0ICAgYW5kIHRoZSBvYmxpZ2F0aW9uIHRvIGZ1bmN0aW9uIGFzIHRoZSAgIEJhbmtlciB0byB0aGUgR292ZXJubWVudC4gICBUaGUgUkJJIGFwcG9pbnRzIHRoZSBTY2hlZHVsZWQgQmFua3MgICAoYm90aCBQcml2YXRlIGFuZCBQdWJsaWMgU2VjdG9yIEJhbmtzKSB0byAgIGFjY2VwdCBhbmQgbWFrZSBwYXltZW50cyBvbiBiZWhhbGYgb2YgICB0aGUgR292ZXJubWVudC4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 8,
      "question" : "With respect to the minting and  distribution of the coins, consider the  following statements:  1. The RBI does not enjoy the authority to  mint coins.  2. All the coins minted by the Government  are issued for circulation only through  the RBI.  3. The minting of coins takes place under  the RBI Act, 1934.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8OA==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgR292ZXJubWVudCBvZiBJbmRpYSBoYXMgdGhlIHNvbGUgcmlnaHQgICB0byBtaW50IGNvaW5zLiBUaGUgcmVzcG9uc2liaWxpdHkgZm9yICAgY29pbmFnZSB2ZXN0cyB3aXRoIHRoZSBHb3Zlcm5tZW50IG9mICAgSW5kaWEgaW4gdGVybXMgb2YgdGhlIENvaW5hZ2UgQWN0LCAyMDExLCAgIGFzIGFtZW5kZWQgZnJvbSB0aW1lIHRvIHRpbWUuIEluIHJlc3BlY3QgICBvZiBjb2lucywgdGhlIHJvbGUgb2YgdGhlIFJCSSBpcyBsaW1pdGVkIHRvIHRoZSAgIGRpc3RyaWJ1dGlvbiBvZiB0aGUgY29pbnMgdGhhdCBhcmUgc3VwcGxpZWQgICBieSB0aGUgR292ZXJubWVudCBvZiBJbmRpYS4gSGVuY2UsIGFsbCB0aGUgICBjb2lucyBtaW50ZWQgYnkgdGhlIEdvdmVybm1lbnQgYXJlIGlzc3VlZCAgIGZvciBjaXJjdWxhdGlvbiBvbmx5IHRocm91Z2ggdGhlIFJCSS4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 2 only   ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following indices is/are  published by the Reserve Bank of India?  1.  The Housing Price Index (HPI)  2.  The Digital Payments Index  3.  The Banking Services Price Index (BSPI)  4.  RESIDEX  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8OQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgZm9sbG93aW5nIGluZGljZXMgYXJlIHB1Ymxpc2hlZCBieSAgIHRoZSBSQkk6ICAg74K3IFRoZSBIb3VzaW5nIFByaWNlIEluZGV4IChIUEkpICAgbWVhc3VyZXMgdGhlIGNoYW5nZXMgaW4gaG91c2luZyAgIHByaWNlcy4gICDvgrcgVGhlIEJhbmtpbmcgU2VydmljZXMgUHJpY2UgSW5kZXggICAoQlNQSSkgbWVhc3VyZXMgdGhlIGNoYW5nZXMgaW4gdGhlICAgcHJpY2VzIGNoYXJnZWQgYnkgdGhlIGJhbmtzIGZvciB0aGVpciAgIHNlcnZpY2VzLiAgICDvgrcgVGhlIERpZ2l0YWwgUGF5bWVudHMgSW5kZXggbWVhc3VyZXMgICB0aGUgcGVuZXRyYXRpb24gb2YgZGlnaXRhbCBwYXltZW50cy4gICBOb3RlOiBSRVNJREVYIG1lYXN1cmVzIHRoZSBwcmljZSAgIGNoYW5nZXMgaW4gcmVzaWRlbnRpYWwgcmVhbCBlc3RhdGUuIEl0IGlzICAgZGV2ZWxvcGVkIGJ5IHRoZSBOYXRpb25hbCBIb3VzaW5nIEJhbmsgICAoTkhCKS4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  1, 2 and 3 only  ",
        "option4" : "  1, 2, 3 and 4   "
      }
    },
    {
      "index" : 10,
      "question" : "With respect to the Double Coincidence of  Wants, consider the following statements:  1. It refers to the situation in which two  individuals are in possession of goods  which they can exchange with each  other to satisfy their wants.  2. It is one of the core features of the  barter system.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTA=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgIkRvdWJsZSBDb2luY2lkZW5jZSBvZiBXYW50cyIgb2NjdXJzICAgd2hlbiB0d28gcGVvcGxlIGhhdmUgZ29vZHMgdGhleSBhcmUgYm90aCAgIGhhcHB5IHRvIHN3YXAgaW4gZXhjaGFuZ2UsIGkuZS4sIGEgcGVyZmVjdCAgIGJhcnRlciBleGNoYW5nZS4gRm9yIGV4YW1wbGUsIGlmIGEgZmFybWVyICAgaGFzIHN1cnBsdXMgcHJvZHVjdGlvbiBvZiByaWNlIGFuZCB3YW50cyAgIGNsb3RoLCB0aGVuIGhlIG5lZWRzIHRvIHNlYXJjaCBmb3IgYSBwZXJzb24gICB3aG8gaGFzIHN1cnBsdXMgY2xvdGggYW5kIG5lZWRzIHJpY2UuICAgIFRoZSBlbWVyZ2VuY2Ugb2YgbW9uZXksIGFzIGEgbWVkaXVtIG9mICAgZXhjaGFuZ2UsIGhhcyByZWR1Y2VkIHRoZSBwcm9ibGVtICAgYXNzb2NpYXRlZCB3aXRoIHRoZSBEb3VibGUgQ29pbmNpZGVuY2Ugb2YgICBXYW50cy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements:  1.  The adoption of expansionary monetary  policy leads to increase in assets with  the RBI.  2.  The currency notes in circulation are  considered as liabilities of the RBI.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBVcG9uIHRoZSBhZG9wdGlvbiBvZiBleHBhbnNpb25hcnkgICBtb25ldGFyeSBwb2xpY3ksIHRoZSBDZW50cmFsIEJhbmsgbmVlZHMgdG8gICBpbmplY3QgbW9yZSBtb25leSBpbnRvIHRoZSBlY29ub215LiBUbyBkbyAgIHNvLCB0aGUgUkJJIHdvdWxkIGhhdmUgdG8gYnV5IGFzc2V0cyBzdWNoICAgYXMgRy1TZWNzIGFuZCBHb2xkLiAgIEhlbmNlLCB1c3VhbGx5IHRoZSBhZG9wdGlvbiBvZiAgIGV4cGFuc2lvbmFyeSBtb25ldGFyeSBwb2xpY3kgbGVhZHMgdG8gICBpbmNyZWFzZSBpbiBhc3NldHMgd2l0aCB0aGUgUkJJLiAgIFRoZSBjdXJyZW5jeSBub3RlcyBpbiBjaXJjdWxhdGlvbiBhcmUgICBjb25zaWRlcmVkIGFzIGxpYWJpbGl0aWVzIG9mIHRoZSBSQkkuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 12,
      "question" : "Which among the following would  necessarily result in increase in money  supply in the economy?  1.  Decrease in Reverse Repo  2.  Open Market Operations (OMOs)  3.  Increase in Currency Deposit Ratio  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBSZXZlcnNlIFJlcG86IFJldmVyc2UgcmVwbyByYXRlIGlzIHRoZSByYXRlICAgYXQgd2hpY2ggdGhlIFJCSSBib3Jyb3dzIG1vbmV5IGZyb20gICBjb21tZXJjaWFsIGJhbmtzIGFnYWluc3QgY29sbGF0ZXJhbCBvZiAgIGVsaWdpYmxlIGdvdmVybm1lbnQgc2VjdXJpdGllcy4gQW4gaW5jcmVhc2UgICBpbiByZXZlcnNlIHJlcG8gcmF0ZSBtZWFucyB0aGF0IGNvbW1lcmNpYWwgICBiYW5rcyB3aWxsIGdldCBtb3JlIGluY2VudGl2ZXMgdG8gcGFyayB0aGVpciAgIGZ1bmRzIHdpdGggdGhlIFJCSSwgdGhlcmVieSBkZWNyZWFzaW5nIHRoZSAgIHN1cHBseSBvZiBtb25leSBpbiB0aGUgbWFya2V0LiBBIGRlY3JlYXNlICAgaW4gcmV2ZXJzZSByZXBvIHJhdGUgbWVhbnMgdGhhdCBjb21tZXJjaWFsICAgYmFua3Mgd2lsbCBnZXQgbGVzcyBpbmNlbnRpdmUgdG8gcGFyayB0aGVpciAgIGZ1bmRzIHdpdGggUkJJIGFuZCB0aHVzIG1vcmUgbW9uZXkgaXMgICBhdmFpbGFibGUgaW4gdGhlIG1hcmtldCBpbmNyZWFzaW5nIHRoZSAgIG1vbmV5IHN1cHBseS4gICBPcGVuIE1hcmtldCBPcGVyYXRpb25zIChPTU9zKTogT01PICAgcmVmZXJzIHRvIHNhbGUgYW5kIHB1cmNoYXNlIG9mIGdvdmVybm1lbnQgICBzZWN1cml0aWVzIGJ5IHRoZSBSQkkgaW4gdGhlIG9wZW4gbWFya2V0ICAgd2l0aCB0aGUgYWltIG9mIGluZmx1ZW5jaW5nIGxpcXVpZGl0eSBpbiB0aGUgICBlY29ub215IGluIHRoZSBtZWRpdW0gdGVybS4gICAg74K3IFNhbGUgb2YgRy1TZWNzIGJ5IFJCSSAtPiBSQkkgc3Vja3Mgb3V0ICAgbGlxdWlkaXR5IC0+IG1vbmV5IHN1cHBseSByZWR1Y2VzICAg74K3IFB1cmNoYXNlIG9mIEctU2VjcyBieSBSQkkgLT4gUkJJICAgaW5qZWN0cyBsaXF1aWRpdHkgLT4gbW9uZXkgc3VwcGx5ICAgaW5jcmVhc2VzLiAgIEhlbmNlLCBPTU9zIGNvdWxkIGVpdGhlciBsZWFkIHRvIGluY3JlYXNlICAgb3IgZGVjcmVhc2UgaW4gbW9uZXkgc3VwcGx5IGRlcGVuZGluZyAgIHVwb24gdGhlIG5hdHVyZSBvZiBvcGVyYXRpb25zIGNhcnJpZWQgb3V0ICAgYnkgUkJJLiAgIEN1cnJlbmN5IERlcG9zaXQgUmF0aW8gKENEUik6IFJhdGlvIG9mICAgbW9uZXkgaGVsZCBieSB0aGUgcHVibGljIGluIGN1cnJlbmN5IHNvICAgdGhhdCB0aGV5IGhvbGQgaW4gYmFuayBkZXBvc2l0cy4gSWYgdGhlICAgY3VycmVuY3ktZGVwb3NpdCByYXRpbyBpbmNyZWFzZXMsIHRoYXQgICBtZWFucyB0aGUgcHVibGljIGlzIGhvbGRpbmcgbW9yZSBvZiBpdHMgICBtb25leSBvdXQgb2YgQmFua3MgcmF0aGVyIHRoYW4gZGVwb3NpdGluZyAgIGl0LiBIZW5jZSwgbW9uZXkgc3VwcGx5IGluY3JlYXNlcy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 2 only  ",
        "option4" : "  1 and 3 only    "
      }
    },
    {
      "index" : 13,
      "question" : "If the Reserve Bank of India (RBI) adopts  Calibrated Tightening policy, which among  the following would it not do?  1.  Increase Standing Deposit Facility (SDF)  rates.  2.  Purchase G-Secs from the Banks  3.  Lower Margin requirements on loans  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTM=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBUaGUgQ2FsaWJyYXRlZCBUaWdodGVuaW5nIHBvbGljeSBpcyBhZG9wdGVkICAgZHVyaW5nIEluZmxhdGlvbiB0byByZWR1Y2UgdGhlIG1vbmV5ICAgc3VwcGx5IGluIHRoZSBlY29ub215LiBUbyByZWR1Y2UgdGhlICAgbW9uZXkgc3VwcGx5LCB0aGUgUkJJIHdvdWxkIGluY3JlYXNlICAgcG9saWN5IHJhdGVzIHN1Y2ggYXMgUmVwbywgUmV2ZXJzZSBSZXBvLCAgIE1TRiwgU0xSLCBDUlIsIFN0YW5kaW5nIERlcG9zaXQgRmFjaWxpdHkgICAoU0RGKSBldGMuICAgIElmIHRoZSBSQkkgcHVyY2hhc2VzIEctU2VjcyBmcm9tIEJhbmtzLCBpdCAgIHdvdWxkIGxlYWQgdG8gaW5jcmVhc2UgaW4gbW9uZXkgc3VwcGx5LiAgIEhlbmNlLCBSQkkgaXMgdW5saWtlbHkgdG8gcHVyY2hhc2UgRy1TZWNzICAgZnJvbSB0aGUgQmFua3MgZHVyaW5nIHRoZSBDYWxpYnJhdGVkICAgVGlnaHRlbmluZyBwb2xpY3kuICAgTWFyZ2luIHJlcXVpcmVtZW50cyBhcmUgb25lIG9mIHRoZSAgIHF1YWxpdGF0aXZlIHRvb2xzIHVzZWQgYnkgdGhlIFJCSSB0byBjb250cm9sICAgbW9uZXkgc3VwcGx5LiBUaGUgbWFyZ2luIHJlcXVpcmVtZW50IGlzICAgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgTG9hbiBhbmQgICBDb2xsYXRlcmFsIHZhbHVlLiBUaGUgUkJJIG1heSBsYXkgZG93biAgIGRpZmZlcmVudCBtYXJnaW4gcmVxdWlyZW1lbnRzIGZvciBkaWZmZXJlbnQgICBjYXRlZ29yaWVzIG9mIGxvYW5zIChWZWhpY2xlLCBIb21lLCBhbmQgICBCdXNpbmVzcyBldGMpIHRvIGNvbnRyb2wgY3JlZGl0IHRvIGRpZmZlcmVudCAgIHNlY3RvcnMuICAgIExvd2VyIE1hcmdpbiByZXF1aXJlbWVudHMgLT4gTG93ZXIgICBkaWZmZXJlbmNlIGJldHdlZW4gbG9hbiBhbmQgY29sbGF0ZXJhbCB2YWx1ZSAgIC0+IEhpZ2hlciBsb2FuIHZhbHVlIC0+IEluY3JlYXNlIGluIG1vbmV5ICAgc3VwcGx5ICAgSGlnaGVyIE1hcmdpbiByZXF1aXJlbWVudHMgLT4gSGlnaGVyICAgZGlmZmVyZW5jZSBiZXR3ZWVuIGxvYW4gYW5kIGNvbGxhdGVyYWwgdmFsdWUgICAtPiBMb3dlciBsb2FuIHZhbHVlIC0+IERlY3JlYXNlIGluIG1vbmV5ICAgc3VwcGx5LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 2 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 14,
      "question" : "Which among the following statements is  incorrect with respect to Monetary Policy  Committee (MPC)?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBNb25ldGFyeSBQb2xpY3kgQ29tbWl0dGVlIHdhcyBjb25zdGl0dXRlZCAgIGJhc2VkIHVwb24gcmVjb21tZW5kYXRpb25zIG9mIFVyaml0IFBhdGVsICAgQ29tbWl0dGVlLkl0IHdhcyBzZXQgdXAgYXMgYSBzdGF0dXRvcnkgICBib2R5IHVuZGVyIHRoZSBSQkkgQWN0LCAxOTM0LiAgIENvbXBvc2l0aW9uICg2IE1lbWJlcnMpIC0gICBUaGUgbWVtYmVycyBpbmNsdWRlOiAgIO+CtyBSQkkgR292ZXJub3IgLSBleC1vZmZpY2lvIGNoYWlycGVyc29uICAg74K3IFJCSSBEZXB1dHkgR292ZXJub3IgICAg74K3IE9uZSBtb3JlIG1lbWJlciBmcm9tIFJCSSB0byBiZSAgIG5vbWluYXRlZCBieSB0aGUgQ2VudHJhbCBCb2FyZCBvZiAgIERpcmVjdG9ycy4gICDvgrcgMyBvdGhlciBtZW1iZXJzIGFyZSB0byBiZSBhcHBvaW50ZWQgYnkgICB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50LiAgIFRlcm06IE1lbWJlcnMgb2YgTVBDIGhvbGQgb2ZmaWNlIGZvciBhICAgcGVyaW9kIG9mIGZvdXIgeWVhcnMgYW5kIGFyZSBub3QgZWxpZ2libGUgZm9yICAgcmUtYXBwb2ludG1lbnQuICAgIE1lZXRpbmdzOiBUaGUgTVBDIGlzIHJlcXVpcmVkIHRvIG1lZXQgYXQgICBsZWFzdCBmb3VyIHRpbWVzIGluIGEgeWVhci4gICBRdW9ydW06IDQgbWVtYmVycy4gICBEZWNpc2lvbjogVGhlIE1QQyB0YWtlcyBkZWNpc2lvbiBiYXNlZCAgIG9uIG1ham9yaXR5IHZvdGUgKGJ5IHRob3NlIHdobyBhcmUgcHJlc2VudCAgIGFuZCB2b3RpbmcuIEluIGNhc2Ugb2YgYSB0aWUsIHRoZSBSQkkgICBnb3Zlcm5vciB3aWxsIGhhdmUgdGhlIHNlY29uZCBvciBjYXN0aW5nICAgdm90ZS4gVGhlIGRlY2lzaW9uIG9mIHRoZSBjb21taXR0ZWUgd291bGQgICBiZSBiaW5kaW5nIG9uIHRoZSBSQkkuICAgTm90ZTogVW5kZXIgdGhlIFJCSSBBY3QsIDE5MzQsIHRoZSBNUEMgICBoYXMgYmVlbiBtYW5kYXRlZCB0byBmaXggcG9saWN5IHJhdGUgd2hpY2ggICBpcyBpbiB0dXJuIGRlZmluZWQgYXMgUmVwbyByYXRlLiBIZW5jZSwgdGhlICAgTVBDIGhhcyBiZWVuIGVtcG93ZXJlZCB0byBmaXggb25seSB0aGUgICBSZXBvIHJhdGUgYW5kIG5vdCBvdGhlciBwb2xpY3kgcmF0ZXMuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : " The MPC has been set up as a statutory   body based upon recommendations of   Urjit Patel Committee.  ",
        "option2" : " The MPC has been empowered to fix   only the Repo rate and no other policy   rates.  ",
        "option3" : " The decisions of the MPC are binding on   the RBI.  ",
        "option4" : " The members of MPC are appointed for   a period of 5 years.   "
      }
    },
    {
      "index" : 15,
      "question" : "Which among the best describes the  concept of Net Demand and Time Liabilities  (NDTL) of Banks?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBUaGUgTmV0IERlbWFuZCBhbmQgVGltZSBMaWFiaWxpdGllcyAgIChORFRMKSBvZiBCYW5rcyBhcmUgY2FsY3VsYXRlZCBhcyAgIChMaWFiaWxpdGllcyB0b3dhcmRzIEJhbmtzIC0gQXNzZXRzIHdpdGggICBCYW5rcykgKyBEZW1hbmQgYW5kIFRpbWUgbGlhYmlsaXRpZXMgICB0b3dhcmRzIHBlb3BsZS4gICBMaWFiaWxpdGllcyB0b3dhcmRzIEJhbmtzIGluY2x1ZGUgRGVwb3NpdHMgICBhY2NlcHRlZCBieSBhIEJhbmsgZnJvbSBhbm90aGVyIEJhbmsuIEZvciAgIGV4YW1wbGUsIElDSUNJIEJhbmsgbWF5IGhhdmUgYWNjZXB0ZWQgICBkZXBvc2l0cyBmcm9tIEhERkMgQmFuay4gSW4gdGhpcyBjYXNlLCB0aGUgICBkZXBvc2l0cyB3b3VsZCBiZSB0aGUgbGlhYmlsaXRpZXMgb2YgSUNJQ0kgICBCYW5rLiAgIEFzc2V0cyB3aXRoIEJhbmtzIGluY2x1ZGUgZGVwb3NpdHMgbWFkZSAgIGJ5IGEgQmFuayB3aXRoIGFub3RoZXIgQmFuay4gRm9yIGV4YW1wbGUsICAgSUNJQ0kgQmFuayBtYXkgaGF2ZSBkZXBvc2l0ZWQgbW9uZXkgd2l0aCAgIHRoZSBBeGlzIEJhbmsuIEluIHRoaXMgY2FzZSwgdGhlIGRlcG9zaXRzICAgd291bGQgYmUgdGhlIGFzc2V0cyBvZiB0aGUgSUNJQ0kgQmFuay4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  Total Deposits with the Banks.  ",
        "option2" : "  Net Demand and Time Liabilities of the   Banks towards Banking System.  ",
        "option3" : "  Net Demand and Time Liabilities of the   Banks towards people.  ",
        "option4" : " Sum of Net Liabilities towards Banking   System and Demand and Time   Liabilities towards people.   "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements:  1. The Adoption of Quantitative Easing by  the US Fed Bank would increase the  yield rates on G-Secs in India.  2.  The increase in policy rates by the RBI  would reduce the yield rates on the G- Secs in India.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBBZG9wdGlvbiBvZiBRdWFudGl0YXRpdmUgRWFzaW5nIGJ5IFVTIEZlZCAgIEJhbmsgLT4gSGlnaGVyIGRvbGxhciBpbmZsb3dzIGludG8gSW5kaWEgLT4gICBIaWdoZXIgZGVtYW5kIGZvciBHLVNlY3MgLT4gSGlnaGVyIEJvbmQgICBQcmljZXMgLT4gRGVjcmVhc2UgaW4gWWllbGRzLiBIZW5jZSwgZmlyc3QgICBzdGF0ZW1lbnQgaXMgaW5jb3JyZWN0LiAgIEluY3JlYXNlIGluIHBvbGljeSByYXRlcyBieSB0aGUgUkJJIC0+ICAgRGVjcmVhc2UgaW4gbW9uZXkgc3VwcGx5IC0+IExvd2VyICAgZGVtYW5kIGZvciBHLVNlY3MgLT4gTG93ZXIgQm9uZCBQcmljZXMgLT4gICBJbmNyZWFzZSBpbiBZaWVsZHMuIEhlbmNlLCBmaXJzdCBzdGF0ZW1lbnQgaXMgICBpbmNvcnJlY3QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 17,
      "question" : "Taper Tantrums, often, seen in news refers  to   ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTc=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBUYXBlciBUYW50cnVtcyByZWZlcnMgdG8gYWR2ZXJzZSBpbXBhY3QgICBvbiB0aGUgZGV2ZWxvcGluZyBlY29ub21pZXMgZHVlIHRvIHRoZSAgICBhbm5vdW5jZW1lbnQgb2YgaW5jcmVhc2UgaW4gaW50ZXJlc3QgcmF0ZXMgICBieSBVUyBGZWQgQmFuayBpLmUuIEZlZCBUYXBlcmluZy4gICBUaGUgVGFwZXIgVGFudHJ1bSB3b3VsZCBsZWFkIHRvIGhpZ2hlciAgIG91dGZsb3cgb2YgZG9sbGFycyBmcm9tIHRoZSBJbmRpYW4gZWNvbm9teSAgIGR1ZSB0byBwb3NzaWJsZSBoaWtlIGluIHRoZSBpbnRlcmVzdCByYXRlcyBpbiAgIGZ1dHVyZSBpbiBVU0EuIFRoaXMgd291bGQgbGVhZCB0byB0aGUgICBmb2xsb3dpbmcgaW1wYWN0IG9uIEluZGlhOiAgIDEuICBTYWxlIG9mIEctU2VjcyAtPiBIaWdoZXIgU3VwcGx5IC0+ICAgTG93ZXIgUHJpY2VzIC0+IEhpZ2hlciBZaWVsZHMgICAyLiBIaWdoZXIgRG9sbGFyIG91dGZsb3dzIC0+IFJ1cGVlICAgRGVwcmVjaWF0aW9uIC0+IENvc3RseSBJbXBvcnRzIC0+ICAgSGlnaGVyIEN1cnJlbnQgQWNjb3VudCBEZWZpY2l0IChDQUQpIC0+ICAgRGVjcmVhc2UgaW4gRm9yZXggUmVzZXJ2ZXMuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  Large scale volatility in capital market   due to decrease in interest rates by the   US Fed Bank.  ",
        "option2" : "  Adverse impact on the developing   economies due to the announcement of   increase in interest rates by US Fed   Bank.  ",
        "option3" : "  Adverse impact on the developing   economies due to the announcement of   decrease in interest rates by US Fed   Bank.  ",
        "option4" : "  Large scale appreciation in the   currencies of the developing economies.   "
      }
    },
    {
      "index" : 18,
      "question" : "With respect to Primary Agriculture Credit  Societies (PACS), consider the following  statements:  1.  The PACS come under the purview of  Banking Regulation Act, 1949.  2.  Only the members of PACS are entitled  to borrow from it.  3.  The PACS can provide loans for non- agricultural purposes such as housing  loans, Education loans etc.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTg=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBEZXRhaWxzIGFib3V0IFByaW1hcnkgQWdyaWN1bHR1cmUgQ3JlZGl0ICAgU29jaWV0aWVzIChQQUNTKTogQmFzaWMgdW5pdCBhbmQgc21hbGxlc3QgICBjby1vcGVyYXRpdmUgY3JlZGl0IGluc3RpdHV0aW9ucyB0aGF0IHdvcmtzICAgb24gdGhlIGdyYXNzcm9vdHMgbGV2ZWwuIFRoZXNlIHNvY2lldGllcyBhcmUgICBnZW5lcmFsbHkgc3RhcnRlZCBieSAxMCBvciBtb3JlIHBlcnNvbnMgICB3aG8gY29udHJpYnV0ZSBhIG5vbWluYWwgYW1vdW50LiBJbiAgIGdlbmVyYWwsIG9ubHkgdGhlIG1lbWJlcnMgb2YgYSBQQUNTIGFyZSAgIGVudGl0bGVkIHRvIGJvcnJvdyBmcm9tIGl0LiAgICBNYWluIEZ1bmN0aW9ucyBvZiBQQUNTOiAgICgtKSBQcm92aWRlIHNob3J0LXRlcm0gYW5kIG1lZGl1bS10ZXJtICAgY3JlZGl0IGZvciBhZ3JpY3VsdHVyZSBhbmQgYWxsaWVkICAgYWN0aXZpdGllcy4gICAoLSkgRGlzdHJpYnV0ZSBpbnB1dHMgc3VjaCBhcyBzZWVkcyBhbmQgICBmZXJ0aWxpc2Vycy4gICAoLSkgUHJvdmlkZSB2YXJpb3VzIGFncmljdWx0dXJhbCBpbXBsZW1lbnRzICAgb24gcmVudCB0byB0aGUgZmFybWVycy4gICAoLSkgUHJvdmlkZSBtYXJrZXRpbmcgZmFjaWxpdGllcyBmb3IgdGhlIHNhbGUgICBvZiBhZ3JpY3VsdHVyYWwgcHJvZHVjZS4gICAoLSkgUHJvdmlkZSBsb2FucyBmb3Igbm9uLWFncmljdWx0dXJhbCAgIHB1cnBvc2VzIHN1Y2ggYXMgcHVyY2hhc2Ugb2YgICBjb25zdW1lciBkdXJhYmxlcywgaG91c2luZyBsb2FucywgICBlZHVjYXRpb24gbG9hbnMgYW5kIHByb2Zlc3Npb25hbCBsb2Fucy4gICBOb3RlOiBUaGUgUHJpbWFyeSBBZ3JpY3VsdHVyZSBDcmVkaXQgICBTb2NpZXRpZXMgKFBBQ1MpIGFyZSBvdXRzaWRlIHRoZSBwdXJ2aWV3IG9mICAgQmFua2luZyBSZWd1bGF0aW9uIEFjdCwgMTk0OSBhbmQgaGVuY2UgICBub3QgcmVndWxhdGVkIGJ5IHRoZSBSQkkuIFRoZSBQQUNTIGFyZSAgIHJlZ3VsYXRlZCBieSB0aGUgcmVzcGVjdGl2ZSBzdGF0ZSAgIGdvdmVybm1lbnRzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  2 only  ",
        "option4" : "  1, 2 and 3    "
      }
    },
    {
      "index" : 19,
      "question" : "Which among the following is/are covered  under the Priority sectors as defined by the  RBI?  1. Education  2. Export Credit  3. Loans to the start ups  4. Overdrafts availed on PMJDY (Pradhan  Mantri Jan Dhan Yojana) Accounts   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MTk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBBcyBwZXIgdGhlIFJCSSdzIEd1aWRlbGluZXMsIFByaW9yaXR5IHNlY3RvciAgIGluY2x1ZGVzIEFncmljdWx0dXJlLCBNU01FcywgRXhwb3J0ICAgQ3JlZGl0LCBFZHVjYXRpb24sIEhvdXNpbmcsIFNvY2lhbCAgIEluZnJhc3RydWN0dXJlLCBSZW5ld2FibGUgRW5lcmd5LCBTdGFydCAgIFVwcywgTG9hbnMgdG8gd2Vha2VyIHNlY3Rpb25zIGluY2x1ZGluZyAgIG92ZXJkcmFmdCBhdmFpbGVkIGJ5IHN1Y2ggUE1KRFkgYWNjb3VudCAgIGhvbGRlcnMuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  1, 2 and 3 only  ",
        "option4" : "  1, 2, 3 and 4   "
      }
    },
    {
      "index" : 20,
      "question" : "With respect to Masala Bonds, consider the  following statements:  1. The money raised through the Masala  Bonds is considered to be part of  External Commercial Borrowings  (ECBs).  2.  The Masala Bonds can be issued only  by Banks.   3.  The Masala Bonds protect the issuers  from currency risk at the time of  redemption.  Which among the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjA=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBUaGUgTWFzYWxhIEJvbmRzIGFyZSBSdXBlZS1kZW5vbWluYXRlZCAgIGJvbmRzIGlzc3VlZCBieSBJbmRpYW4gZW50aXRpZXMgKGJvdGggICBwdWJsaWMgYW5kIHByaXZhdGUpIGluIG92ZXJzZWFzIG1hcmtldC4gQXMgICB0aGVzZSBCb25kcyBhcmUgZGVub21pbmF0ZWQgaW4gUnVwZWVzLCAgIHRoZXkgcHJvdGVjdCB0aGUgaXNzdWVycyBmcm9tIHRoZSBjdXJyZW5jeSAgIHJpc2suICAgRWxpZ2libGUgYm9ycm93ZXJzOiBCYW5rcywgQ29ycG9yYXRlcywgICBSRUlUcyAocmVhbCBlc3RhdGUgaW52ZXN0bWVudCB0cnVzdHMgICAoUkVJVCkpLCBJblZJVHMgKEluZnJhc3RydWN0dXJlIEludmVzdG1lbnQgICBUcnVzdHMpICAgTWluaW11bSBNYXR1cml0eSBQZXJpb2Q6IDMgeWVhcnMgICBFbmQgVXNlIFJlc3RyaWN0aW9uczogQ2Fubm90IGJlIHVzZWQgZm9yICAgZm9sbG93aW5nIHB1cnBvc2VzICAg74K3IFJlYWwgZXN0YXRlIGFjdGl2aXRpZXMgb3RoZXIgdGhhbiAgIGRldmVsb3BtZW50IG9mIGludGVncmF0ZWQgdG93bnNoaXAgLyAgIGFmZm9yZGFibGUgaG91c2luZyBwcm9qZWN0czsgICDvgrcgSW52ZXN0aW5nIGluIGNhcGl0YWwgbWFya2V0IGFuZCB1c2luZyAgIHRoZSBwcm9jZWVkcyBmb3IgZXF1aXR5IGludmVzdG1lbnQgICBkb21lc3RpY2FsbHk7ICAg74K3IEFjdGl2aXRpZXMgcHJvaGliaXRlZCBhcyBwZXIgdGhlIGZvcmVpZ24gICBkaXJlY3QgaW52ZXN0bWVudCBndWlkZWxpbmVzOyAgIO+CtyBPbi1sZW5kaW5nIHRvIG90aGVyIGVudGl0aWVzIGZvciBhbnkgb2YgICB0aGUgYWJvdmUgcHVycG9zZXM7IGFuZCAgIO+CtyBQdXJjaGFzZSBvZiBMYW5kICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  3 only  ",
        "option4" : "  1 and 3 only   "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to Sovereign Green Bonds  proposed in the Union Budget 2022-23,  consider the following statements:  1. The Sovereign Green Bonds would be  issued by the Government and private  sector for financing green  infrastructure.  2. The money raised by the Government  through these Bonds would be part of  Government's borrowing programme.  Which among the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBJbiB0aGUgVW5pb24gQnVkZ2V0IDIwMjItMjMsIHRoZSBGaW5hbmNlICAgTWluaXN0ZXIgaGFzIGFubm91bmNlZCB0aGF0IEdvdmVybm1lbnQgICB3b3VsZCBpc3N1ZSBTb3ZlcmVpZ24gR3JlZW4gQm9uZHMgZm9yICAgZmluYW5jaW5nIGdyZWVuIGluZnJhc3RydWN0dXJlLiBUaGUgbW9uZXkgICByYWlzZWQgYnkgdGhlIEdvdmVybm1lbnQgdGhyb3VnaCB0aGVzZSAgIEJvbmRzIHdvdWxkIGJlIHBhcnQgb2YgaXRzIEZpc2NhbCBkZWZpY2l0LiAgICAgVGhlIFNvdmVyZWlnbiBHcmVlbiBCb25kcyB3b3VsZCBiZSAgIGlzc3VlZCBieSB0aGUgcHJpdmF0ZSBzZWN0b3IuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 22,
      "question" : " Recently, the IRDAI has issued the  guidelines for Surety Bonds. In this regard,  consider the following statements:  1. The Surety Bonds would be issued by  the infrastructure companies and  bought by the insurance companies.  2.  The Surety Bonds act as a form of  guarantee on the completion of  infrastructure projects as per the  specifications.  3. The Surety Bonds can substitute Bank  Guarantees in the Government  procurement mechanism.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBJbiBTZXAgMjAyMSwgdGhlIElSREFJIGhhZCBpc3N1ZWQgZHJhZnQgICBndWlkZWxpbmVzIGZvciB0aGUgaXNzdWFuY2Ugb2YgU3VyZXR5ICAgQm9uZHMuICAgIO+CtyBUaGUgU3VyZXR5IEJvbmQgaXMgZm9ybSBvZiBjb250cmFjdHVhbCAgIGFncmVlbWVudCBiZXR3ZWVuIDMgcGFydGllcy0gUHJpbmNpcGFsICAgKENvbnRyYWN0b3IpLCBPYmxpZ2VlIChHb3Zlcm5tZW50KSBhbmQgICB0aGUgU3VyZXR5IGNvbXBhbnkuIEFzIHBhcnQgb2Ygc3VjaCBhbiAgIGFncmVlbWVudCwgdGhlIHN1cmV0eSBjb21wYW55IGdpdmVzIGFuICAgdW5kZXJ0YWtpbmcgdGhhdCB0aGUgUHJpbmNpcGFsICAgKGNvbnRyYWN0b3IpIHdvdWxkIGNvbXBsZXRlIHRoZSBwcm9qZWN0ICAgYXMgcGVyIHRoZSB0aW1lbGluZSBrZWVwaW5nIGluIG1pbmQgYWxsICAgdGhlIHNwZWNpZmljYXRpb25zIGxhaWQgZG93biBieSB0aGUgICBHb3Zlcm5tZW50LiAgIO+CtyBJZiB0aGUgQ29udHJhY3RvciBmYWlscyB0byBjb21wbGV0ZSB0aGUgICBwcm9qZWN0IG9uIHRpbWUgb3IgaWYgdGhlIGNvbnRyYWN0b3IgZG9lcyAgIG5vdCBmdWxmaWwgYW55IHJlcXVpcmVtZW50IGxhaWQgZG93biBieSAgIHRoZSBHb3Zlcm5tZW50LCB0aGVuIFN1cmV0eSBjb21wYW55ICAgY29tZXMgaW50byBwaWN0dXJlIGFuZCBpcyByZXF1aXJlZCB0byAgIGNvbXBlbnNhdGUgdGhlIE9ibGlnZWUgKEdvdmVybm1lbnQpICAgZm9yIHRoZSBsb3NzLiAgIO+CtyBQcmVzZW50bHksIHRoZXNlIHN1cmV0eSBCb25kcyBhcmUgICBjb21tb25seSB1c2VkIGluIGNvdW50cmllcyBzdWNoIGFzICAgVVMsIFVLLCBBdXN0cmFsaWEgZXRjLiBOb3csIHdlIGFyZSAgIHRyeWluZyB0byBjcmVhdGUgYW4gZW5hYmxpbmcgZnJhbWV3b3JrICAgd2hpY2ggd291bGQgZW5hYmxlIHRoZSBJbnN1cmFuY2UgICBjb21wYW5pZXMgdG8gYWN0IGFzIHN1cmV0eSBjb21wYW5pZXMuICAgIFdvcmtpbmcgTWVjaGFuaXNtIG9mIFN1cmV0eSBCb25kczogICDvgrcgRm9yIGV4YW1wbGUsIGxldCdzIHNheSBOSEFJIHdhbnRzIHRvICAgYXdhcmQgdGhlIGNvbnN0cnVjdGlvbiBvZiBOYXRpb25hbCAgIEhpZ2h3YXkgcHJvamVjdCB0byBhIHBhcnRpY3VsYXIgcHJpdmF0ZSAgIGNvbXBhbnkgQUJDLiBUaGUgTkhBSSB3b3VsZCBsYXkgICBkb3duIGFsbCB0aGUgc3BlY2lmaWNhdGlvbnMgYW5kIHRpbWVsaW5lICAgZm9yIHRoZSBjb21wbGV0aW9uIG9mIHRoZSBwcm9qZWN0LiBUaGUgICBOSEFJIHdvdWxkIHdhbnQgdGhlIHBhcnRpY3VsYXIgcHJpdmF0ZSAgIGNvbXBhbnkgQUJDIHRvIGFkaGVyZSB0byB0aGVzZSAgIHRpbWVsaW5lcyBhbmQgc3BlY2lmaWNhdGlvbnMuIEhlbmNlLCAgIE5IQUkgbWF5IGluc2lzdCB0aGUgcHJpdmF0ZSBjb21wYW55ICAgQUJDIHRvIHByb3ZpZGUgU3VyZXR5IEJvbmQgd29ydGggUnMgICAxMDAgY3JvcmVzLiAgIO+CtyBOb3csIHRoZSBwcml2YXRlIHNlY3RvciBjb21wYW55IG1heSAgIGJ1eSB0aGlzIEJvbmQgZnJvbSB0aGUgSW5zdXJhbmNlICAgQ29tcGFueS4gVXN1YWxseSwgc3VjaCBib25kcyBhcmUgbm90ICAgYm91Z2h0IGF0IHRoZSBmYWNlIHZhbHVlLiBSYXRoZXIsIHRoZXkgICBhcmUgYm91Z2h0IGEgcHJlbWl1bSBvZiBhcm91bmQgMS0xMCUgICBkZXBlbmRpbmcgdXBvbiB0aGUgQ29udHJhY3RvcidzICAgZmluYW5jaWFsIHN0cmVuZ3RoLCBjcmVkaXQgaGlzdG9yeSwgICBleHBlcmllbmNlIGluIGV4ZWN1dGlvbiBvZiBwcm9qZWN0cyBldGMuICAgTGV0J3Mgc2F5LCBoZXJlIHByaXZhdGUgc2VjdG9yIGNvbXBhbnkgICBBQkMgYnV5cyB0aGUgYm9uZCBhdCB0aGUgcHJlbWl1bSBvZiAgIDIlLiBUaGlzIG1lYW5zIHRoYXQgdGhlIGNvbXBhbnkgaGFzICAgcGFpZCBScyAyIGNyb3JlcyB0byBnZXQgdGhlIHN1cmV0eSBmcm9tICAgdGhlIEluc3VyYW5jZSBDb21wYW55LiAgIO+CtyBUaGlzIHN1cmV0eSBib25kIHdvdWxkIHRoZW4gYmUgICBwcmVzZW50ZWQgYmVmb3JlIHRoZSBOSEFJIGxlYWRpbmcgdG8gICB0aGUgYXdhcmQgb2YgdGhlIGhpZ2h3YXkgcHJvamVjdC4gSW4gICBmdXR1cmUsIGlmIHRoZSBwcml2YXRlIHNlY3RvciBjb21wYW55ICAgQUJDIGZhaWxzIHRvIGFkaGVyZSB0byB0aGUgdGltZWxpbmVzIG9yICAgdGhlIHNwZWNpZmljYXRpb25zLCB0aGUgSW5zdXJhbmNlICAgQ29tcGFueSB3b3VsZCBiZSByZXF1aXJlZCB0byBwYXkgUnMgICAxMDAgY3JvcmVzIHRvIHRoZSBOSEFJLiAgIE5vdGU6IEluIFVuaW9uIEJ1ZGdldCAyMDIyLTIzLCB0aGUgICBGaW5hbmNlIE1pbmlzdGVyIGhhcyBkZWNsYXJlZCB0aGF0IFN1cmV0eSAgIEJvbmRzIGNhbiBzdWJzdGl0dXRlIEJhbmsgR3VhcmFudGVlcyBpbiAgIHRoZSBHb3Zlcm5tZW50IHByb2N1cmVtZW50IG1lY2hhbmlzbS4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements about  the Panchamrit Strategy for low carbon  sustainable development:  1.  India will get its non-fossil energy  capacity to 500 gigawatts by 2030.  2.  India will achieve net zero by 2050.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjM=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFBhbmNoYW1yaXQgU3RyYXRlZ3kgZm9yIGxvdyBjYXJib24gICBzdXN0YWluYWJsZSBkZXZlbG9wbWVudDogICDvgrcgSW5kaWEgd2lsbCBnZXQgaXRzIG5vbi1mb3NzaWwgZW5lcmd5ICAgY2FwYWNpdHkgdG8gNTAwIGdpZ2F3YXR0cyBieSAyMDMwLiAgIO+CtyBJbmRpYSB3aWxsIG1lZXQgNTAgcGVyIGNlbnQgb2YgaXRzIGVuZXJneSAgIHJlcXVpcmVtZW50cyB0aWxsIDIwMzAgd2l0aCByZW5ld2FibGUgICBlbmVyZ3kuICAg74K3IEluZGlhIHdpbGwgcmVkdWNlIGl0cyBwcm9qZWN0ZWQgY2FyYm9uICAgZW1pc3Npb24gYnkgb25lIGJpbGxpb24gdG9ubmVzIGJ5IDIwMzAuICAg74K3IEluZGlhIHdpbGwgcmVkdWNlIHRoZSBjYXJib24gaW50ZW5zaXR5IG9mICAgaXRzIGVjb25vbXkgYnkgNDUgcGVyIGNlbnQgYnkgMjAzMC4gICDvgrcgSW5kaWEgd2lsbCBhY2hpZXZlIG5ldCB6ZXJvIGJ5IDIwNzAuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:  1. The Central bank digital currency  (CBDC) is a legal tender and accepted  for the payment of various transactions  within a country.   2. The CBDC can be programmed for  certain selected users or within specific  region of a country.  3.  The Subhash Chandra Garg Committee  has recommended a ban on private  cryptocurrencies.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFVuZGVyc3RhbmRpbmcgQ2VudHJhbCBCYW5rIERpZ2l0YWwgICBDdXJyZW5jeSAoQ0JEQyk6IERpZ2l0YWwgY3VycmVuY3kgaXMgICBiYWNrZWQgYnkgdGhlIENlbnRyYWwgYmFuayBvZiBhIGNvdW50cnkuICAgSnVzdCBsaWtlIGN1cnJlbmN5IG5vdGVzIGlzc3VlZCBieSB0aGUgICBDZW50cmFsIEJhbmssIHRoZSBDREJDIGlzIGEgbGVnYWwgdGVuZGVyICAgYW5kIGFjY2VwdGVkIGZvciB0aGUgcGF5bWVudCBvZiB2YXJpb3VzICAgdHJhbnNhY3Rpb25zIHdpdGhpbiBhIGNvdW50cnkuICAgICBBbHNvIGNhbGxlZCBhcyAiUHJvZ3JhbW1hYmxlIG1vbmV5IiBhcyBpdCAgIGNhbiBiZSBwcm9ncmFtbWVkIGZvciBjZXJ0YWluIHNlbGVjdGVkICAgdXNlcnMgb3Igd2l0aGluIHNwZWNpZmljIHJlZ2lvbiBvZiBhIGNvdW50cnkuICAgRXhwZXJpbWVudHMgb2YgQ0JEQyBpbiBvdGhlciBDb3VudHJpZXMgICAtICAgVHVuaXNpYTogZURpbmFyOyBFY3VhZG9yOiBTSVNURU1BOyAgIFZlbmV6dWVsYTogUGV0cm87IFN3ZWRlbjogZS1Lcm9uYTsgQ2hpbmE6ICAgRGlnaXRhbCBZdWFuICAgTGVnYWwgRnJhbWV3b3JrIGZvciBJc3N1YW5jZSBvZiBDQkRDOiAgIFByZXNlbnRseSwgdGhlIFJCSSBBY3QgMTkzNCBlbXBvd2VycyB0aGUgICBSQkkgdG8gYmUgdGhlIHNvbGUgYXV0aG9yaXR5IHRvIGlzc3VlICAgY3VycmVuY3kgbm90ZXMuIFRoZSBGaW5hbmNlIEJpbGwgMjAyMCBoYXMgICBpbnRyb2R1Y2VkIGFtZW5kbWVudHMgdG8gdGhlIHNlY3Rpb24gMjIgICBvZiB0aGUgUkJJIEFjdCwgMTkzNC4gVW5kZXIgdGhlIG5ldyAgIGFtZW5kbWVudHMsIGN1cnJlbmN5IHdvdWxkIGluY2x1ZGUgYm90aCAgIHBoeXNpY2FsIGFuZCBkaWdpdGFsIGN1cnJlbmN5IGlzc3VlZCBieSB0aGUgICBSQkkuICAgVGhlIFN1Ymhhc2ggQ2hhbmRyYSBHYXJnIENvbW1pdHRlZSBoYXMgICByZWNvbW1lbmRlZCBhIGJhbiBvbiBwcml2YXRlICAgY3J5cHRvY3VycmVuY2llcyBvbiBhY2NvdW50IG9mIGNvbmNlcm5zICAgc3VjaCBhcyB2b2xhdGlsaXR5LCBpbnN0YWJpbGl0eSwgc2VjdXJpdHkgcmlzayAgIGFuZCByaXNrIG9mIGZ1bmRpbmcgaWxsZWdhbCBhY3Rpdml0aWVzLiAgIEhvd2V2ZXIsIHRoZSBjb21taXR0ZWUgaGFzIGhpZ2hsaWdodGVkICAgdGhhdCBhbiBvZmZpY2lhbCBkaWdpdGFsIGN1cnJlbmN5IGNhbiBoYXZlICAgbnVtYmVyIG9mIGFkdmFudGFnZXMgc3VjaCBhcyAgIO+CtyBQcm9tb3RlIGNhc2hsZXNzIGVjb25vbXkgYnkgcmVkdWNpbmcgICBDYXNoLXRvLUdEUCByYXRpby4gICAg74K3IEluY3JlYXNlIGluIEZpbmFuY2lhbCBJbmNsdXNpb24gICDvgrcgU3RhYmlsaXR5IGFuZCBSZXNpbGllbmNlIG9mIHBheW1lbnQgICBzeXN0ZW0gc2luY2UgQ0JEQyB3b3VsZCBwcm9tb3RlICAgY29tcGV0aXRpb24gaW4gdGhlIHBheW1lbnQgc3lzdGVtIGFuZCAgIGVuc3VyZXMgdGhhdCBubyBzaW5nbGUgY29tcGFueSAgIGRvbWluYXRlcyB0aGUgcGF5bWVudCBlY29zeXN0ZW0gICDvgrcgQ291bnRlciB0aGUgU3RhYmxlIGNvaW5zIHN1Y2ggYXMgRGllbSAgIHdoaWNoIGNvdWxkIGJlIHVzZWQgZm9yIG1ha2luZyAgIHBheW1lbnRzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  3 only  ",
        "option4" : "  1, 2 and 3    "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements:  1. State governments can only borrow  from within the territory of India upon  the security of Consolidated Fund of the  State.  2. State governments which have  outstanding loans from the central  government cannot raise any loan.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEJvcnJvd2luZyBQb3dlciBvZiBTdGF0ZXMgLSAgIEFjY29yZGluZyB0byBBcnRpY2xlIDI5MyBvZiBDb25zdGl0dXRpb246ICAgMS4gU3RhdGUgZ292ZXJubWVudHMgY2FuIG9ubHkgYm9ycm93ICAgZnJvbSB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYSB1cG9uICAgdGhlIHNlY3VyaXR5IG9mIENvbnNvbGlkYXRlZCBGdW5kIG9mIHRoZSAgIFN0YXRlLCB3aXRoaW4gc3VjaCBsaW1pdHMgYXMgbWF5IGJlICAgZml4ZWQgYnkgdGhlIGxlZ2lzbGF0dXJlIG9mIHRoZSBzdGF0ZS4gICAyLiBHb3Zlcm5tZW50IG9mIEluZGlhIGNhbiBtYWtlIGxvYW5zIHRvICAgU3RhdGUgZ292ZXJubWVudHMgd2hpY2ggYXJlIGNoYXJnZWQgICBvbiBDb25zb2xpZGF0ZWQgRnVuZCBvZiBJbmRpYS4gICAzLiBTdGF0ZSBnb3Zlcm5tZW50cyB3aGljaCBoYXZlICAgb3V0c3RhbmRpbmcgbG9hbnMgZnJvbSB0aGUgY2VudHJhbCAgIGdvdmVybm1lbnQgY2Fubm90IHJhaXNlIGFueSBsb2FuLiAgICA0LiAgV2hpbGUgZ2l2aW5nIGNvbnNlbnQgZm9yIGJvcnJvd2luZyB0byAgIFN0YXRlcywgQ2VudHJlIGdvdmVybm1lbnQgY2FuIGltcG9zZSAgIGNlcnRhaW4gY29uZGl0aW9ucy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements about  Virtual digital assets (VDA) in the newly- inserted clause (47A) under Section 2 of the  Income Tax Act, 1961:  1. VDA has been defined to mean any  information or code or number or token  generated through cryptographic means  or otherwise.   2. VDA does not include non-fungible  token.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MjY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBnb3Zlcm5tZW50IGluIHRoZSBVbmlvbiBCdWRnZXQgZm9yICAgMjAyMi0yMyBpbnRyb2R1Y2VkIG5ldyBwcm92aXNpb25zIGFpbWVkICAgYXQgdGF4aW5nIGFuZCB0cmFja2luZyBWaXJ0dWFsIERpZ2l0YWwgICBBc3NldHMgKFZEQSkuIEFsb25nIHdpdGggdGhlIGZyYW1ld29yayBmb3IgICB0YXhhdGlvbiwgdGhlIEJ1ZGdldCBmb3IgdGhlIGZpcnN0IHRpbWUgICBkZWZpbmVkIHZpcnR1YWwgZGlnaXRhbCBhc3NldHMuICAgVGhlIEZpbmFuY2UgQmlsbCBoYXMgZGVmaW5lZCB2aXJ0dWFsIGRpZ2l0YWwgICBhc3NldHMgaW4gdGhlIG5ld2x5LWluc2VydGVkIGNsYXVzZSAoNDdBKSAgIHVuZGVyIFNlY3Rpb24gMiBvZiB0aGUgSW5jb21lIFRheCBBY3QsICAgMTk2MS4gICBWREEgaGFzIGJlZW4gZGVmaW5lZCB0byBtZWFuIGFueSAgIGluZm9ybWF0aW9uIG9yIGNvZGUgb3IgbnVtYmVyIG9yIHRva2VuICAgZ2VuZXJhdGVkIHRocm91Z2ggY3J5cHRvZ3JhcGhpYyBtZWFucyBvciAgIG90aGVyd2lzZS4gQW5kIHdoaWNoIGNhbiBiZSB0cmFuc2ZlcnJlZCwgICBzdG9yZWQgb3IgdHJhZGVkIGVsZWN0cm9uaWNhbGx5LiAgIEFwYXJ0IGZyb20gdGhlIGFib3ZlIHRocmVlIGNyaXRlcmlhLCBvbmUgb2YgICB0aGUgZm9sbG93aW5nIHR3byBjb25kaXRpb25zIG5lZWRzIHRvIGJlICAgZnVsZmlsbGVkIHRvIHF1YWxpZnkgYXMgYSBWREEuICAgVGhlIGRlZmluaXRpb24gb2YgVkRBIGFsc28gc3BlY2lmaWNhbGx5ICAgaW5jbHVkZXMgbm9uLWZ1bmdpYmxlIHRva2VuLCBpLmUuIE5GVCwgb3IgICBhbnkgb3RoZXIgdG9rZW4gb2Ygc2ltaWxhciBuYXR1cmUsIGJ5ICAgd2hhdGV2ZXIgbmFtZSBpcyBjYWxsZWQuICAgVGhlIGRlZmluaXRpb24gb2YgTkZUIHdpbGwgYmUgc3BlY2lmaWVkIGJ5ICAgbm90aWZpY2F0aW9uIGJ5IHRoZSBDZW50cmFsIEdvdmVybm1lbnQuICAgQW4gTkZUIGlzIGEgZGlnaXRhbCBhc3NldCB0aGF0IGV4aXN0cyBvbiBhICAgYmxvY2stY2hhaW4sIGFsbG93aW5nIGFueW9uZSB0byB2ZXJpZnkgaXRzICAgYXV0aGVudGljaXR5IGFuZCB3aG8gb3ducyBpdC4gRGlnaXRhbCBhcnQsICAgaW1hZ2VzLCB2aWRlb3MsIHRleHQsIG11c2ljIGFuZCBldmVuIHZpcnR1YWwgICByZWFsIGVzdGF0ZSBhbmQgaW4tZ2FtZSBpdGVtcyBjYW4gYmUgICBib3VnaHQgYW5kIHNvbGQgYXMgTkZUcy4gICBUaGUgRmluYW5jZSBCaWxsIGFsc28gYXV0aG9yaXNlcyB0aGUgICBnb3Zlcm5tZW50IHRvIHNwZWNpZnkgYW55IG90aGVyIGRpZ2l0YWwgICBhc3NldCBhcyBhIFZEQSBvciBleGNsdWRlIGFueSBkaWdpdGFsIGFzc2V0ICAgZnJvbSB0aGUgZGVmaW5pdGlvbiBvZiBWREEuICAgIE5vdGFibHksIEluZGlhbiBjdXJyZW5jeSBhbmQgZm9yZWlnbiAgIGN1cnJlbmN5IGFzIGRlZmluZWQgdW5kZXIgdGhlIEZvcmVpZ24gICBFeGNoYW5nZSBNYW5hZ2VtZW50IEFjdCwgMTk5OSwgaGF2ZSAgIGJlZW4gZXhjbHVkZWQgZnJvbSB0aGUgYW1iaXQgb2YgVkRBcy4gICBXaGlsZSBWREEgaW5jbHVkZXMgY3J5cHRvY3VycmVuY2llcywgdGhlICAgZGVmaW5pdGlvbiBjYW4gY292ZXIgYSB3aWRlIHZhcmlldHkgb2YgZGlnaXRhbCAgIGFzc2V0cyB3aGljaCBpcyBpbXBsaWVkIGJ5IHRoZSB3b3JkaW5nICdvciAgIG90aGVyd2lzZScgaW4gdGhlIHBocmFzZSAnZ2VuZXJhdGVkIHRocm91Z2ggICBjcnlwdG9ncmFwaGljIG1lYW5zIG9yIG90aGVyd2lzZScuIFRoZSAgIGRlZmluaXRpb24gaXMgYWxzbyBtYWRlIGV4aGF1c3RpdmUgd2l0aCB0aGUgICB3b3JkcyAnaW5mb3JtYXRpb24nLCAnY29kZScsICdudW1iZXInLiAgIEJlY2F1c2Ugb2YgdGhlIGJyb2FkIGRlZmluaXRpb24sIFZEQXMgY2FuICAgcG90ZW50aWFsbHkgaW5jbHVkZSB2b3VjaGVycywgcmV3YXJkIHBvaW50cyAgIGlzc3VlZCBieSBzaG9wcGluZyBzaXRlcyBvciBjcmVkaXQgY2FyZCAgIGNvbXBhbmllcywgYWlybGluZSBtaWxlcyBldGMuIEV4cGVydHMgaGF2ZSAgIHNvdWdodCBjbGFyaWZpY2F0aW9ucyBmcm9tIHRoZSBnb3Zlcm5tZW50LiAgIFRoZXkgZmVhciB0aGUgc2NvcGUgb2YgVkRBIG1heSBpbXBhY3QgICBkaWdpdGFsIGFzc2V0cyBjcmVhdGVkIGJ5IGNvbXBhbmllcy4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements about  the recommendations of 15th Finance  Commission:  1. The share of states in the central taxes  for the 2021-26 period is recommended  to be 51%.  2. A dedicated non-lapsable fund called  the Modernisation Fund for Defence  and Internal Security (MFDIS) should  be constituted.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mjc=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSAxNXRoIEZpbmFuY2UgQ29tbWlzc2lvbiBoZWFkZWQgYnkgICBNci4gTi5LLiBTaW5naCBoYXMgc3VibWl0dGVkIGl0cyAgIHJlY29tbWVuZGF0aW9ucy4gVXN1YWxseSwgdGhlIEZpbmFuY2UgICBDb21taXNzaW9uIHJlY29tbWVuZGF0aW9ucyBhcmUgdmFsaWQgZm9yICAgYSBwZXJpb2Qgb2YgNSB5ZWFycy4gSG93ZXZlciwgdGhpcyB0aW1lLCB0aGUgICAxNXRoIEZpbmFuY2UgQ29tbWlzc2lvbiAgIHJlY29tbWVuZGF0aW9ucyB3b3VsZCBiZSB2YWxpZCBmb3IgYSAgIHBlcmlvZCBvZiA2IHllYXJzLiAgIFZlcnRpY2FsIERldm9sdXRpb24gb2YgVGF4ZXM6IFRoZSBzaGFyZSBvZiAgIHN0YXRlcyBpbiB0aGUgY2VudHJhbCB0YXhlcyBmb3IgdGhlIDIwMjEtMjYgICBwZXJpb2QgaXMgcmVjb21tZW5kZWQgdG8gYmUgNDElLCBzYW1lIGFzICAgdGhhdCBmb3IgMjAyMC0yMS4gVGhpcyBpcyBsZXNzIHRoYW4gdGhlIDQyJSAgIHNoYXJlIHJlY29tbWVuZGVkIGJ5IHRoZSAxNHRoIEZpbmFuY2UgICBDb21taXNzaW9uIGZvciAyMDE1LTIwIHBlcmlvZC4gICAgRnVuZGluZyBvZiBkZWZlbmNlIGFuZCBpbnRlcm5hbCAgIHNlY3VyaXR5OiBQcmVzZW50IFN0YXR1czogRGVmZW5jZSAgIGV4cGVuZGl0dXJlIGhhcywgb3ZlciB0aW1lLCBiZWVuICAgY2hhcmFjdGVyaXNlZCBieSBhIGhpZ2hlciBzaGFyZSBvZiByZXZlbnVlICAgZXhwZW5kaXR1cmUsIGh1Z2UgcGVuc2lvbiBiaWxscyBhbmQgbG93ZXIgICBjYXBpdGFsIGV4cGVuZGl0dXJlIHdpdGggaGlnaCBkZXBlbmRlbmNlICAgb24gaW1wb3J0IG9mIGRlZmVuY2UgZXF1aXBtZW50LiAgIFJlY29tbWVuZGF0aW9uczogQSBkZWRpY2F0ZWQgbm9uLSAgbGFwc2FibGUgZnVuZCBjYWxsZWQgdGhlIE1vZGVybmlzYXRpb24gICBGdW5kIGZvciBEZWZlbmNlIGFuZCBJbnRlcm5hbCBTZWN1cml0eSAgIChNRkRJUykgc2hvdWxkIGJlIGNvbnN0aXR1dGVkIHVuZGVyIHRoZSAgIFB1YmxpYyBBY2NvdW50IGZvciBjYXBpdGFsIGV4cGVuZGl0dXJlIGluICAgZGVmZW5jZSBhbmQgaW50ZXJuYWwgc2VjdXJpdHkuIFRoZSBmdW5kIHdpbGwgICBiZSBmdW5kZWQgdGhyb3VnaCAoYSkgVHJhbnNmZXJzIGZyb20gdGhlICAgQ29uc29saWRhdGVkIEZ1bmQgb2YgSW5kaWEgKGIpICAgRGlzaW52ZXN0bWVudCBvZiBkZWZlbmNlIFBTVXMgKGMpICAgTW9uZXRpc2F0aW9uIG9mIGRlZmVuY2UgbGFuZHMgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements:  1. Asset Monetisation is the transfer of  core assets owned by the Government  to the private sector for a limited period.  2.  National Monetisation Pipeline (NMP)  does not include monetization of non- core assets.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mjg=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEFzc2V0IE1vbmV0aXNhdGlvbiBpcyBkZWZpbmVkIGFzIHRyYW5zZmVyIG9mICAgY29yZSBhc3NldHMgb3duZWQgYnkgdGhlIEdvdmVybm1lbnQgdG8gICB0aGUgcHJpdmF0ZSBzZWN0b3IgZm9yIGEgbGltaXRlZCBwZXJpb2QuIFRoZSAgIGNvcmUgaW5mcmFzdHJ1Y3R1cmUgYXNzZXRzIGluY2x1ZGUgcm9hZHMsICAgcG9ydHMsIGFpcnBvcnRzLCB0ZWxlY29tLCByYWlsd2F5cywgICB3YXJlaG91c2luZywgZW5lcmd5IHBpcGVsaW5lcywgcG93ZXIgICBnZW5lcmF0aW9uLCBwb3dlciB0cmFuc21pc3Npb24sIGhvc3BpdGFsaXR5ICAgYW5kIHNwb3J0cyBzdGFkaXVtcy4gTk1QIGRvZXMgbm90IGluY2x1ZGUgICBtb25ldGl6YXRpb24gb2Ygbm9uLWNvcmUgYXNzZXRzIChzdWNoIGFzICAgbGFuZCwgYnVpbGRpbmdzIGV0Yy4pLiAgIE5NUCBpcyBub3QgcHJpdmF0aXNhdGlvbiBzaW5jZSB0aGUgICBvd25lcnNoaXAgb2YgdGhlIGFzc2V0cyB3b3VsZCBjb250aW51ZSB0byAgIHJlbWFpbiB3aXRoIHRoZSBHb3Zlcm5tZW50LiBUaGUgYXNzZXRzICAgd291bGQgYmUgb25seSB0cmFuc2ZlcnJlZCB0byB0aGUgcHJpdmF0ZSAgIHNlY3RvciBmb3IgbGltaXRlZCBkdXJhdGlvbiBvZiB0aW1lIGJhc2VkICAgdXBvbiB0aGUgY29udHJhY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements about  the RBI's Retail Direct Scheme:   1.  Individual Retail investors can open Gilt  Securities Account with the RBI.  2.  Non-Resident investors are not eligible.  3.  The RBI has imposed minimum and  maximum investment limits for the  retail investors.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mjk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFJCSSdzIFJldGFpbCBEaXJlY3QgU2NoZW1lOiBQbGF0Zm9ybSB0byAgIGVuYWJsZSByZXRhaWwgaW52ZXN0b3JzIHRvIGJ1eSBHLVNlY3MgICBkaXJlY3RseSBmcm9tIFJCSS4gSW5kaXZpZHVhbCBSZXRhaWwgICBpbnZlc3RvcnMgY2FuIG9wZW4gR2lsdCBTZWN1cml0aWVzIEFjY291bnQgICAtICdSZXRhaWwgRGlyZWN0IEdpbHQgKFJERyknIGFjY291bnQgd2l0aCAgIHRoZSBSQkkuICAgRy1TZWNzIHdoaWNoIGNhbiBiZSBib3VnaHQgVC1CaWxscywgRGF0ZWQgICBTZWNzLCBTRExzIGFuZCBTb3ZlcmVpZ24gR29sZCBCb25kcy4gICBPcGluaW5nIG9mIFJERyBBY2NvdW50OiBSZXRhaWwgaW52ZXN0b3JzICAgaGF2aW5nIEJhbmsgYWNjb3VudCwgUEFOIENhcmQgZXRjLiAgIGZ1bGZpbGxpbmcgS1lDIG5vcm1zLiBOb24tUmVzaWRlbnQgICBpbnZlc3RvcnMgYXJlIGFsc28gZWxpZ2libGUuICAgTGltaXRzIG9uIEludmVzdG1lbnQ6IFJCSSBoYXMgaW1wb3NlZCAgIG1pbmltdW0gYW5kIG1heGltdW0gaW52ZXN0bWVudCBsaW1pdHMgICBmb3IgdGhlIHJldGFpbCBpbnZlc3RvcnMuIEZvciBleGFtcGxlLCAgIG1pbmltdW0gaW52ZXN0bWVudCBpbiB0aGUgRy1TZWNzIHNob3VsZCAgIGJlIFJzIDEwLDAwMC4gVGhlIGV4YWN0IGxpbWl0cyBvbiBtaW5pbXVtICAgYW5kIG1heGltdW0gaW52ZXN0bWVudHMgYXJlIG5vdCAgIGltcG9ydGFudCBmcm9tIHRoZSBwZXJzcGVjdGl2ZSBvZiBVUFNDICAgZXhhbS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 3 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only   ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements about  the Consumer Price Index (CPI):  1. The Consumer Price Index is published  by the National Statistical Office, under  the Ministry of Statistics and  Programme Implementation.  2. The base year for the CPI is 2015.  3. Food and beverages have more than  45% weight in the CPI.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzA=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQ29uc3VtZXIgUHJpY2UgSW5kZXg6IFRoZSBOYXRpb25hbCAgIFN0YXRpc3RpY2FsIE9mZmljZSAoTlNPKSwgdW5kZXIgdGhlIE1pbmlzdHJ5ICAgb2YgU3RhdGlzdGljcyBhbmQgUHJvZ3JhbW1lICAgSW1wbGVtZW50YXRpb24gKE1vU1BJKSwgaXMgcmVsZWFzaW5nIHRoZSBBbGwgICBJbmRpYSBDb25zdW1lciBQcmljZSBJbmRleCAoQ1BJKSBvbiAgIGJhc2UgMjAxMj0xMDAuICAgR3JvdXBzIFdlaWdodCAgIEZvb2QgYW5kIGJldmVyYWdlcyAgNDUuOSUgICBQYW4sIHRvYmFjY28gYW5kICAgaW50b3hpY2FudHMgICAgMi40JSAgIENsb3RoaW5nIGFuZCBmb290d2VhciAgNi41JSAgIEhvdXNpbmcgIDEwJSAgIEZ1ZWwgYW5kIGxpZ2h0ICA2LjglICAgTWlzY2VsbGFuZW91cyBzZXJ2aWNlcyAgMjguMyUgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements about  the CPI-Rural and the CPI-Urban:  1. The weight of food and beverages is the  highest in both, the CPI-Rural and the  CPI-Urban.  2.  The CPI-Rural gives zero weight to  inflation in housing, while the CPI- Urban gives more than 20% weight to  housing.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzE=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBDUEktUnVyYWwgKFdlaWdodCkgQ1BJLVVyYmFuIChXZWlnaHQpICAgRm9vZCBhbmQgYmV2ZXJhZ2VzICAgKDU0LjE4JSB3ZWlnaHQpICAgRm9vZCBhbmQgYmV2ZXJhZ2VzICAgKDM2LjMlIHdlaWdodCkgICBQYW4sIHRvYmFjY28gYW5kICAgaW50b3hpY2FudHMgKDMuMyUgICB3ZWlnaHQpICAgUGFuLCB0b2JhY2NvIGFuZCAgIGludG94aWNhbnRzICgxLjM2JSAgIHdlaWdodCkgICBDbG90aGluZyBhbmQgICBmb290d2VhciAoNy4zNiUgICB3ZWlnaHQpICAgQ2xvdGhpbmcgYW5kICAgZm9vdHdlYXIgKDUuNTclICAgd2VpZ2h0KSAgIEhvdXNpbmcgKDAlICAgd2VpZ2h0KSAgIEhvdXNpbmcgKDIxLjY3JSAgIHdlaWdodCkgICBGdWVsIGFuZCBsaWdodCAgICg3Ljk0JSB3ZWlnaHQpICAgRnVlbCBhbmQgbGlnaHQgICAoNS41OCUgd2VpZ2h0KSAgIE1pc2NlbGxhbmVvdXMgICBTZXJ2aWNlcyAoMjcuMjYlICAgd2VpZ2h0KSAgIE1pc2NlbGxhbmVvdXMgICBTZXJ2aWNlcyAoMjkuNSUgICB3ZWlnaHQpICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements about  the Wholesale Price Index (WPI):  1. The WPI is published by the National  Statistical Office, under the Ministry of  Statistics and Programme  Implementation.  2. Manufactured products have the  highest weight among major groups of  the WPI.  3. There is no representation of services in  the WPI.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzI=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBXaG9sZXNhbGUgUHJpY2UgSW5kZXggKFdQSSk6IFRoZSBXUEkgaXMgICBwdWJsaXNoZWQgYnkgdGhlIE9mZmljZSBvZiB0aGUgRWNvbm9taWMgICBBZHZpc2VyLCB1bmRlciB0aGUgRGVwYXJ0bWVudCBmb3IgICBQcm9tb3Rpb24gb2YgSW5kdXN0cnkgYW5kIEludGVybmFsIFRyYWRlLiAgICBUaGUgYmFzZSB5ZWFyIGZvciB0aGUgY3VycmVudCBzZXJpZXMgb2YgdGhlICAgV1BJIGlzIDIwMTEtMTIuICAgVGhlcmUgYXJlIHRocmVlIG1ham9yIGNvbW1vZGl0eSBncm91cHMgICBpbiB0aGUgV1BJOiAgIDEuIFByaW1hcnkgYXJ0aWNsZXMgKFdlaWdodCAyMi42JSkgICAyLiBGdWVsIGFuZCBwb3dlciAoV2VpZ2h0IDEzLjIlKSAgIDMuIE1hbnVmYWN0dXJlZCBwcm9kdWN0cyAoV2VpZ2h0IDY0LjIlKSAgIFRodXMsIG1hbnVmYWN0dXJlZCBwcm9kdWN0cyBoYXZlIHRoZSAgIGhpZ2hlc3Qgd2VpZ2h0IGluIHRoZSBXUEkuICAgSXQgaXMgYWxzbyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IHRoZXJlIGlzIG5vICAgcmVwcmVzZW50YXRpb24gb2Ygc2VydmljZXMgaW4gdGhlIFdQSS4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  2 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only  ",
        "option4" : "  1 and 3 only   "
      }
    },
    {
      "index" : 33,
      "question" : " Which of the following will necessarily be  the impacts of rise of inflation in the Indian  economy?  1. Increased fiscal deficit.  2. Falling real wages.  3. Increase of the Current Account Deficit.  4. Higher divergence between the real GDP  and the nominal GDP.  5. Erosion of savings of the elderly.  6. Increase in the real interest rates.   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzM=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBSaXNpbmcgaW5mbGF0aW9uIHdpbGwgcmVzdWx0IGluIHRoZSByZWR1Y3Rpb24gICBvZiBidXlpbmcgcG93ZXIgb2YgdGhlIHBlb3BsZSwgYXMgdGhlIHNhbWUgICBhbW91bnQgb2YgbW9uZXkgd2lsbCBidXkgcmVkdWNlZCBhbW91bnQgICBvZiBnb29kcyBhbmQgc2VydmljZXMgaW4gdGhlIGVjb25vbXkuICAgMS4gSW5jcmVhc2VkIGluZmxhdGlvbiB3aWxsIGxlYWQgdG8gaW5jcmVhc2UgICBpbiBGaXNjYWwgRGVmaWNpdCwgYXMgdGhlIGdvdmVybm1lbnQgICBvdXRnbyBvbiBzdWJzaWRpZXMgd2lsbCBpbmNyZWFzZSBpbiBhbiAgIGluZmxhdGlvbmFyeSBzY2VuYXJpby4gRm9yIGV4YW1wbGUsIHRvICAgc3VwcGx5IHJpY2UgZm9yIHRoZSBQRFMsIHRoZSBnb3Zlcm5tZW50ICAgd2lsbCBoYXZlIHRvIGJ1eSByaWNlIGF0IGluY3JlYXNlZCBwcmljZXMsICAgaW5jcmVhc2luZyB0aGUgZGVmaWNpdC4gICAyLiBSZWFsIHdhZ2VzIHdpbGwgZmFsbCwgYXMgdGhlIHNhbWUgICBhbW91bnQgb2YgbW9uZXkgd2lsbCBub3QgYmUgYWJsZSB0byBidXkgICBzYW1lIGdvb2RzIGFuZCBzZXJ2aWNlcy4gICAzLiBTaW5jZSBJbmRpYSBpcyBhIG5ldCBpbXBvcnRlciBvZiBnb29kICAgYW5kIHNlcnZpY2VzLCBwcmltYXJpbHkgb2lsIGFuZCBnYXMsICAgaW5jcmVhc2VkIGluZmxhdGlvbiBsZWFkcyB0byBpbmNyZWFzZWQgICBDdXJyZW50IEFjY291bnQgRGVmaWNpdC4gVGhpcyBpcyAgIGJlY2F1c2Ugd2hlbiB0aGUgcHJpY2VzIG9mIGltcG9ydGVkICAgY29tbW9kaXRpZXMgcmlzZSwgZXhwb3J0cyBkbyBub3QgICBpbmNyZWFzZSBzdWRkZW5seSwgd2hpbGUgaW1wb3J0cyBmb3IgICBJbmRpYSBhcmUgcmVsYXRpdmVseSBpbmVsYXN0aWMuICAgIDQuIFNpbmNlLCB0aGUgc2F2aW5ncyBvZiB0aGUgZWxkZXJseSBhcmUgICBvZnRlbiBmaXhlZCBpbiB0aGUgYmFua3Mgb3IgaW4gdGhlIGZvcm0gICBvZiBjYXNoLCBoaWdoZXIgaW5mbGF0aW9uIGxlYWRzIHRvIGVyb3Npb24gICBvZiB0aGVpciBzYXZpbmdzLiAgIDUuIEhpZ2hlciBpbmZsYXRpb24gbGVhZHMgdG8gdGhlICAgcmVkdWN0aW9uIG9mIHJlYWwgaW50ZXJlc3QgcmF0ZXMsIGFzICAgdGhlIHJlYWwgaW50ZXJlc3QgcmF0ZTogQ3VycmVudCAgIGluZmxhdGlvbiByYXRlIC0gSW5mbGF0aW9uLiAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1, 3, 4, 5 and 6 only  ",
        "option2" : "  1, 2, 3, 4 and 5 only  ",
        "option3" : "  1, 2, 3, 4 and 6 only  ",
        "option4" : "  2, 3, 4, 5 and 6 only   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements:   1. The Headline Inflation Rate is the  principal measure of inflation in an  economy.  2. Core Inflation is the rate of inflation  which excludes transitory prices  changes of the volatile items, like food  and energy.  3.  For India, the WPI is the Headline  Inflation Rate.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzQ=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBDb3JlIEluZmxhdGlvbiByZXByZXNlbnRzIHRoZSBsb25nLXJ1biAgIHRyZW5kIGluIHByaWNlIGxldmVsLiBJbiBtZWFzdXJpbmcgdGhlIENvcmUgICBJbmZsYXRpb24sIHByaWNlIGNoYW5nZXMsIHdoaWNoIGFyZSAgIHRyYW5zaXRvcnksIGFyZSByZW1vdmVkIGJ5IHJlbW92aW5nIHRoZSAgIHZvbGF0aWxlIGl0ZW1zLCBsaWtlIGVuZXJneSBhbmQgZm9vZCAgIHByb2R1Y3RzLiAgIEhlYWRsaW5lIEluZmxhdGlvbiBpcyBhIG1lYXN1cmUgb2YgdG90YWwgICBpbmZsYXRpb24gaW4gYW4gZWNvbm9teSwgaW5jbHVkaW5nIHRoZSAgIHZvbGF0aWxlIGNvbW1vZGl0aWVzLCBsaWtlIGZvb2QgYW5kIGVuZXJneS4gICBGb3IgSW5kaWEsIHRoZSBDUEkgaXMgdGhlIEhlYWRsaW5lICAgSW5mbGF0aW9uLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  2 only  ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 2 only  ",
        "option4" : "  1, 2 and 3    "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements  regarding the Revenue Budget:  1.  It takes care of the recurring part of the  budget, which is incurred for the  purposes, other than the creation of  assets.   2.  It includes interest payments,  subsidies, salaries & pensions, defence,  grants to the states for the creation of  assets etc.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzU=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBSZXZlbnVlIEJ1ZGdldCB2cyBDYXBpdGFsIEJ1ZGdldDogICBDcml0ZXJpYSBSZXZlbnVlIEJ1ZGdldCBDYXBpdGFsIEJ1ZGdldCAgIFJlY2VpcHRzIE5vbi1yZWRlZW1hYmxlIHJlY2VpcHRzLiBSZWNlaXB0cyB3aGljaCBjcmVhdGUgbGlhYmlsaXR5IG9yICAgcmVkdWNlIGZpbmFuY2lhbCBhc3NldHMuICAgRXhhbXBsZXMgb2YgUmVjZWlwdHMgVGF4IFJldmVudWUgKERpcmVjdCBhbmQgSW5kaXJlY3QgICBUYXhlcyk6IEdTVCwgSW5jb21lIFRheCwgICBDb3Jwb3JhdGUgVGF4LCBFeGNpc2UgRHV0eSwgICBDdXN0b21zIER1dHkgKEluIGRlY2xpbmluZyAgIG9yZGVyKS4gICBOb24tVGF4IFJldmVudWU6IEludGVyZXN0ICAgUmVjZWlwdHMsIERpdmlkZW5kcyBhbmQgUHJvZml0cyBvZiAgIHRoZSBQU1VzLCBVc2VyIENoYXJnZXMsIEV4dGVybmFsICAgR3JhbnRzIGV0Yy4gICBEZWJ0IFJlY2VpcHRzOiBNYXJrZXQgQm9ycm93aW5ncy4gICBOb24tRGVidCBSZWNlaXB0czogICBEaXNpbnZlc3RtZW50LCBSZWNvdmVyeSBvZiBMb2Fucy4gICAgRXhwZW5kaXR1cmUgUmVjdXJyaW5nOiBJbmN1cnJlZCBmb3IgdGhlICAgcHVycG9zZXMgb3RoZXIgdGhhbiB0aGUgY3JlYXRpb24gICBvZiBhc3NldHMuICAgTm9uLVJlY3VycmluZzogSW5jdXJyZWQgZm9yIGFzc2V0ICAgY3JlYXRpb24uICAgRXhhbXBsZXMgb2YgICBFeHBlbmRpdHVyZSAgIEludGVyZXN0IFBheW1lbnRzLCBTdWJzaWRpZXMsICAgU2FsYXJpZXMgYW5kIFBlbnNpb25zLCBEZWZlbmNlLCAgIEdyYW50cyB0byB0aGUgc3RhdGVzIGZvciB0aGUgICBjcmVhdGlvbiBvZiBhc3NldHMgZXRjLiAgIENyZWF0aW9uIG9mIHJvYWRzLCByYWlsd2F5cyBldGMuLCAgIGFuZCBsb2FucyB0byB0aGUgc3RhdGVzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements  regarding the Capital Budget:  1.  It includes receipts which create liability  or reduce financial assets.  2.  Disinvestment and recovery of loans  form a part of the Capital Budget.  3.  Interest receipts, dividends and profits  of the PSUs are shown as a part of the  Capital Budget.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8MzY=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBSZXZlbnVlIEJ1ZGdldCB2cyBDYXBpdGFsIEJ1ZGdldDogICBDcml0ZXJpYSBSZXZlbnVlIEJ1ZGdldCBDYXBpdGFsIEJ1ZGdldCAgIFJlY2VpcHRzIE5vbi1yZWRlZW1hYmxlIHJlY2VpcHRzLiBSZWNlaXB0cyB3aGljaCBjcmVhdGUgbGlhYmlsaXR5IG9yICAgcmVkdWNlIGZpbmFuY2lhbCBhc3NldHMuICAgRXhhbXBsZXMgb2YgICBSZWNlaXB0cyAgIFRheCBSZXZlbnVlIChEaXJlY3QgYW5kIEluZGlyZWN0ICAgVGF4ZXMpOiBHU1QsIEluY29tZSBUYXgsIENvcnBvcmF0ZSAgIFRheCwgRXhjaXNlIER1dHksIEN1c3RvbXMgRHV0eSAoSW4gICBkZWNsaW5pbmcgb3JkZXIpLiAgIE5vbi1UYXggUmV2ZW51ZTogSW50ZXJlc3QgUmVjZWlwdHMsICAgRGl2aWRlbmRzIGFuZCBQcm9maXRzIG9mIHRoZSBQU1VzLCAgIFVzZXIgQ2hhcmdlcywgRXh0ZXJuYWwgR3JhbnRzIGV0Yy4gICBEZWJ0IFJlY2VpcHRzOiBNYXJrZXQgQm9ycm93aW5ncy4gICBOb24tRGVidCBSZWNlaXB0czogRGlzaW52ZXN0bWVudCwgICBSZWNvdmVyeSBvZiBMb2Fucy4gICAgIEV4cGVuZGl0dXJlIFJlY3VycmluZzogSW5jdXJyZWQgZm9yIHRoZSBwdXJwb3NlcyAgIG90aGVyIHRoYW4gdGhlIGNyZWF0aW9uIG9mIGFzc2V0cy4gICBOb24tUmVjdXJyaW5nOiBJbmN1cnJlZCBmb3IgYXNzZXQgICBjcmVhdGlvbi4gICBFeGFtcGxlcyBvZiAgIEV4cGVuZGl0dXJlICAgSW50ZXJlc3QgUGF5bWVudHMsIFN1YnNpZGllcywgU2FsYXJpZXMgICBhbmQgUGVuc2lvbnMsIERlZmVuY2UsIEdyYW50cyB0byB0aGUgICBzdGF0ZXMgZm9yIHRoZSBjcmVhdGlvbiBvZiBhc3NldHMgZXRjLiAgIENyZWF0aW9uIG9mIHJvYWRzLCByYWlsd2F5cyBldGMuLCBhbmQgICBsb2FucyB0byB0aGUgc3RhdGVzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the Fiscal Responsibility  and Budget Management Act, 2003,  consider the following statements:  1.  A major objective of the Act was to  ensure inter-generational equity in  fiscal management.   2. The Macro-economic Framework  Statement sets three-year rolling targets  for the prescribed fiscal indicators.  3. The Central Government's target to limit  fiscal deficit is less than 3% of the GDP  and it cannot be altered in any  circumstances.   Which of the statements given above is/are  incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mzc=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgRmlzY2FsIFJlc3BvbnNpYmlsaXR5IGFuZCBCdWRnZXQgICBNYW5hZ2VtZW50IChGUkJNKSBBQ1QsIDIwMDMgLSAgIE9iamVjdGl2ZXMgb2YgdGhlIEZSQk0gQWN0OiAgIDEuIEVuc3VyaW5nIGludGVyLWdlbmVyYXRpb25hbCBlcXVpdHkgaW4gICBmaXNjYWwgbWFuYWdlbWVudC4gICAyLiBMb25nLXRlcm0gbWFjcm8tZWNvbm9taWMgc3RhYmlsaXR5IGJ5ICAgcmVtb3ZpbmcgZmlzY2FsIGltcGVkaW1lbnRzIGluIHRoZSAgIGVmZmVjdGl2ZSBjb25kdWN0IG9mIHRoZSBtb25ldGFyeSBwb2xpY3kuICAgMy4gUHJ1ZGVudGlhbCBkZWJ0IG1hbmFnZW1lbnQsICAgY29uc2lzdGVudCB3aXRoIGZpc2NhbCBzdXN0YWluYWJpbGl0eSAgIHRocm91Z2ggbGltaXQgb24gdGhlIENlbnRyYWwgICBHb3Zlcm5tZW50J3MgYm9ycm93aW5ncywgZGVidCBhbmQgICBkZWZpY2l0cy4gICA0LiBHcmVhdGVyIHRyYW5zcGFyZW5jeSBpbiBmaXNjYWwgICBvcGVyYXRpb25zIG9mIHRoZSBDZW50cmFsIEdvdmVybm1lbnQuICAgNS4gQ29uZHVjdGluZyBmaXNjYWwgcG9saWN5IGluIGEgbWVkaXVtLSAgdGVybSBmcmFtZXdvcmsuICAgRG9jdW1lbnRzIHRvIGJlIGxhaWQgZG93biBieSBUSEUgICBDZW50cmFsIEdvdmVybm1lbnQgdW5kZXIgdGhlIEFjdDogICAxLiBNZWRpdW0tdGVybSBGaXNjYWwgUG9saWN5ICAgU3RhdGVtZW50OiBMYWlkIGFsb25nIHdpdGggdGhlIGJ1ZGdldC4gICBJdCBzZXRzIHRocmVlLXllYXIgcm9sbGluZyB0YXJnZXRzIGZvciB0aGUgICBwcmVzY3JpYmVkIGZpc2NhbCBpbmRpY2F0b3JzLiAgIDIuIEZpc2NhbCBQb2xpY3kgU3RyYXRlZ3kgU3RhdGVtZW50OiAgIExhaWQgYWxvbmcgd2l0aCB0aGUgYnVkZ2V0LiBDb250YWlucyAgIHBvbGljaWVzIG9mIHRoZSBDZW50cmFsIEdvdmVybm1lbnQgb24gICB0YXhhdGlvbiwgYm9ycm93aW5nLCBleHBlbmRpdHVyZSwgICBwcmljaW5nIG9mIGFkbWluaXN0ZXJlZCBnb29kcyBldGMuLCAgIHN0cmF0ZWdpYyBwcmlvcml0aWVzIG9mIHRoZSBDZW50cmFsICAgR292ZXJubWVudCBmb3IgdGhlIGVuc3VpbmcgZmluYW5jaWFsICAgeWVhciwga2V5IGZpc2NhbCBtZWFzdXJlcyBhbmQgcmF0aW9uYWxlICAgZm9yIGFueSBtYWpvciBkZXZpYXRpb24gaW4gZmlzY2FsICAgbWVhc3VyZXMgYW5kIGFuIGV2YWx1YXRpb24gb2YgY3VycmVudCAgIHBvbGljaWVzIG9mIHRoZSBDZW50cmFsIEdvdmVybm1lbnQsIGluICAgbGluZSB3aXRoIHRoZSBmaXNjYWwgbWFuYWdlbWVudCAgIHByaW5jaXBsZXMuICAgIDMuIE1hY3JvLWVjb25vbWljIEZyYW1ld29yayAgIFN0YXRlbWVudDogTGFpZCBhbG9uZyB3aXRoIHRoZSBidWRnZXQuICAgQ29udGFpbnMgYXNzZXNzbWVudCBvZiBncm93dGggICBwcm9zcGVjdHMsIGZpc2NhbCBiYWxhbmNlIGFuZCBleHRlcm5hbCAgIHNlY3RvciBiYWxhbmNlIG9mIHRoZSBlY29ub215IHdpdGggICB1bmRlcmx5aW5nIGFzc3VtcHRpb25zLiAgICA0LiBNZWRpdW0tdGVybSBFeHBlbmRpdHVyZSAgIEZyYW1ld29yayBTdGF0ZW1lbnQ6IExhaWQgaW4gdGhlICAgbmV4dCBzZXNzaW9uIG9mIHRoZSBzZXNzaW9uIGluIHdoaWNoIHRoZSAgIGJ1ZGdldCBpcyBwcmVzZW50ZWQuIEl0IHNldHMgZm9ydGggYSAgIHRocmVlLXllYXIgcm9sbGluZyB0YXJnZXQgZm9yIHRoZSAgIHByZXNjcmliZWQgZXhwZW5kaXR1cmUgaW5kaWNhdG9ycy4gSXQgICBzaGFsbCBhbHNvIGhpZ2hsaWdodCBleHBlbmRpdHVyZSAgIGNvbW1pdG1lbnQgb2YgbWFqb3IgcG9saWN5IGNoYW5nZXMgaW4gICBuZXcgc2NoZW1lcyBhbmQgcHJvZ3JhbW1lcywgYW5kICAgZXhwbGljaXQgY29udGluZ2VudCBsaWFiaWxpdGllcy4gICAgRmlzY2FsIE1hbmFnZW1lbnQgUHJpbmNpcGxlcyBmb3IgVEhFICAgQ2VudHJhbCBHb3Zlcm5tZW50OiAgIDEuIEZpc2NhbCBEZWZpY2l0IEJhc2VkIFRhcmdldDogVGhlICAgQ2VudHJhbCBHb3Zlcm5tZW50J3MgbGltaXQgZmlzY2FsIGRlZmljaXQgICB0byBiZSBsZXNzIHRoYW4gMyUgb2YgdGhlIEdEUC4gICAyLiBEZWJ0IEJhc2VkIFRhcmdldDogVGhlIENlbnRyYWwgICBHb3Zlcm5tZW50IHdpbGwgZW5zdXJlIHRoYXQ6ICAgKGEpIEdlbmVyYWwgZ292ZXJubWVudCBkZWJ0IGRvZXMgbm90ICAgZXhjZWVkIDYwJSBvZiB0aGUgR0RQIGJ5IDIwMjQtMjUuICAgKEdlbmVyYWwgZ292ZXJubWVudCBkZWJ0IHJlZmVycyB0byAgIGNvbGxlY3RpdmUgZGVidCBvZiBhbGwgc3RhdGVzLCBhbG9uZyAgIHdpdGggdGhlIENlbnRyYWwgR292ZXJubWVudCkuICAgKGIpIFRoZSBDZW50cmFsIEdvdmVybm1lbnQgZGVidCBkb2VzICAgbm90IGV4Y2VlZCA0MCUgb2YgdGhlIEdEUCBieSAyMDI0LSAgMjUuICAgMy4gVGhlIENlbnRyYWwgR292ZXJubWVudCBub3QgdG8gZ2l2ZSAgIGFkZGl0aW9uYWwgZ3VhcmFudGVlcyB0byBhbnkgbG9hbiBvZiB0aGUgICBDb25zb2xpZGF0ZWQgRnVuZCBvZiBJbmRpYSwgaW4gZXhjZXNzIG9mICAgMC41JSBvZiB0aGUgR0RQLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following statements is/are  correct with respect to the 'Escape Clause'  of the Fiscal Responsibility and Budget  Management Act, 2003?  1. Under the conditions specified, grounds  of national security and collapse of  agriculture severely affecting farm  output and incomes have been explicitly  mentioned.    2. No deviation is allowed from the target  cast on the Central Government, except  without the approval of the Parliament.  3. Conditions during which the fiscal deficit  targets can be breached, i.e., the fiscal  deficit higher than targeted, have been  specified in the Act itself.    Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mzg=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBFc2NhcGUgQ2xhdXNlOiBUaGUgTi4gSy4gU2luZ2ggICBDb21taXR0ZWUsIGluIGl0cyByZXZpZXcgb2YgdGhlIEZpc2NhbCAgICBSZXNwb25zaWJpbGl0eSBhbmQgQnVkZ2V0IE1hbmFnZW1lbnQgICAoRlJCTSkgQWN0LCAyMDAzLCBzdWdnZXN0ZWQgY2hhbmdlcyBpbiAgIHRoZSBBY3QgdG8gbWFrZSBpdCBhbiBlZmZlY3RpdmUgdG9vbCBmb3IgdGhlICAgY291bnRlci1jeWNsaWNhbCBlY29ub21pYyBwb2xpY3ksIHdoaWNoICAgbWVhbnMgdGhhdCB3aGVuIHRoZSBlY29ub21pYyBncm93dGggaXMgICBzdHJvbmcsIHRoZSBkZWZpY2l0cyBvZiB0aGUgZ292ZXJubWVudHMgICBzaG91bGQgYmUgcmVkdWNlZCBvciBldmVuIHN1cnBsdXMgY2FuIGJlICAgZ2VuZXJhdGVkLiBIb3dldmVyLCBpbiBjYXNlIG9mIGFuIGVjb25vbWljICAgZG93bnR1cm4sIHRoZSBnb3Zlcm5tZW50IHNob3VsZCB0YWtlICAgbGVhZGVyc2hpcCBhbmQgc3BlbmQgdG8gbGlmdCBhbGwgYm9hdHMuICAgVW5kZXIgdGhlIEZSQk0gQWN0LCB0aGUgQ2VudHJhbCAgIEdvdmVybm1lbnQgc2hhbGwgcHJlc2NyaWJlIHRoZSBhbm51YWwgICB0YXJnZXRzIGZvciB0aGUgcmVkdWN0aW9uIG9mIGZpc2NhbCBkZWZpY2l0IGZvciAgIHRoZSBwZXJpb2QuICAgIENvbmRpdGlvbnMgZHVyaW5nIHdoaWNoIHRoZSBmaXNjYWwgZGVmaWNpdCAgIHRhcmdldHMgY2FuIGJlIGJyZWFjaGVkLCBpLmUuLCBmaXNjYWwgZGVmaWNpdCAgIGhpZ2hlciB0aGFuIHRhcmdldGVkLiAgIDEuIEdyb3VuZHMgb2YgbmF0aW9uYWwgc2VjdXJpdHkuICAgMi4gQWN0IG9mIHdhci4gICAzLiBOYXRpb25hbCBjYWxhbWl0eS4gICA0LiBDb2xsYXBzZSBvZiBhZ3JpY3VsdHVyZSwgc2V2ZXJlbHkgICBhZmZlY3RpbmcgZmFybSBvdXRwdXQgYW5kIGluY29tZXMuICAgNS4gU3RydWN0dXJhbCByZWZvcm1zIGluIHRoZSBlY29ub215IHdpdGggICB1bmFudGljaXBhdGVkIGZpc2NhbCBpbXBsaWNhdGlvbnMuICAgNi4gRGVjbGluZSBpbiB0aGUgcmVhbCBvdXRwdXQgZ3Jvd3RoIG9mIGEgICBxdWFydGVyIGJ5IGF0IGxlYXN0IHRocmVlIHBlcmNlbnQgcG9pbnQgICBiZWxvdyBpdHMgYXZlcmFnZSBvZiB0aGUgcHJldmlvdXMgZm91ciAgIHF1YXJ0ZXJzLiAgIEluIHRoZXNlIHNpdHVhdGlvbnMsIHRoZSBmaXNjYWwgZGVmaWNpdCBjYW4gICBleGNlZWQgYnkgMC41JSBvZiB0aGUgR0RQIG9mIHRoZSB0YXJnZXQgICBwcmVzY3JpYmVkLiAgIENvbmRpdGlvbnMgd2hlbiBmaXNjYWwgZGVmaWNpdCBjYW4gYmUgICByZWR1Y2VkIHRoYW4gdGFyZ2V0ZWQ6IEluY3JlYXNlIGluIHRoZSAgIHJlYWwgb3V0cHV0IGdyb3d0aCBieSBhdCBsZWFzdCAzJSBwb2ludCAgIGFib3ZlIGl0cyBhdmVyYWdlIG9mIHRoZSBwcmV2aW91cyA0ICAgcXVhcnRlcnMuIEluIHRoaXMgc2l0dWF0aW9uLCB0aGUgZmlzY2FsIGRlZmljaXQgICBjYW4gYmUgcmVkdWNlZCBieSAwLjUlIG92ZXIgd2hhdCBpcyAgIHRhcmdldGVkLiAgICBCb3Jyb3dpbmcgZnJvbSBUSEUgUmVzZXJ2ZSBCYW5rIE9GICAgSU5ESUEgKFJCSSk6ICAgMS4gVGhlIENlbnRyYWwgR292ZXJubWVudCBub3QgdG8gYm9ycm93ICAgZnJvbSB0aGUgUkJJLiAgIDIuIFRoZSBDZW50cmFsIEdvdmVybm1lbnQgY2FuIGJvcnJvdyAgIGZyb20gdGhlIFJCSSBmb3IgdGVtcG9yYXJ5IG1pc21hdGNoZXMgICBpbiBjYXNoIGJhbGFuY2UuIChXYXlzIGFuZCBNZWFucyAgIE1lY2hhbmlzbSkgICAzLiBBbiBBbWVuZG1lbnQgd2FzIGRvbmUgaW4gdGhlIEZSQk0gICBBY3QsIHdoaWNoIGFsbG93ZWQgdGhlIFJCSSB0byBzdWJzY3JpYmUgICB0byB0aGUgcHJpbWFyeSBpc3N1ZSBvZiB0aGUgQ2VudHJhbCAgIEdvdmVybm1lbnQgc2VjdXJpdGllcywgd2hlbiBvbmUgb2YgdGhlICAgY29uZGl0aW9ucyBmb3IgaW52b2tpbmcgZXNjYXBlIGNsYXVzZSAgIGZvciBpbmNyZWFzaW5nIGZpc2NhbCBkZWZpY2l0IGlzIHByZXNlbnQsICAgaS5lLiwgdGhlIENlbnRyZSBjYW4gYm9ycm93IGZyb20gdGhlIFJCSSAgIGluIHRoZSBmb2xsb3dpbmcgY2FzZXM6ICAg74K3IEdyb3VuZHMgb2YgbmF0aW9uYWwgc2VjdXJpdHkuICAg74K3IEFjdCBvZiB3YXIuICAg74K3IE5hdGlvbmFsIGNhbGFtaXR5LiAgIO+CtyBDb2xsYXBzZSBvZiBhZ3JpY3VsdHVyZSwgc2V2ZXJlbHkgICBhZmZlY3RpbmcgZmFybSBvdXRwdXQgYW5kIGluY29tZXMuICAg74K3IFN0cnVjdHVyYWwgcmVmb3JtcyBpbiB0aGUgZWNvbm9teSAgIHdpdGggdW5hbnRpY2lwYXRlZCBmaXNjYWwgICBpbXBsaWNhdGlvbnMuICAg74K3IERlY2xpbmUgaW4gdGhlIHJlYWwgb3V0cHV0IGdyb3d0aCBvZiAgIGEgcXVhcnRlciBieSBhdCBsZWFzdCB0aHJlZSBwZXJjZW50ICAgcG9pbnQgYmVsb3cgaXRzIGF2ZXJhZ2Ugb2YgdGhlICAgcHJldmlvdXMgZm91ciBxdWFydGVycy4gICA0LiBUaGUgUkJJIGNhbiBidXkgYW5kIHNlbGwgdGhlIENlbnRyYWwgICBHb3Zlcm5tZW50IHNlY3VyaXRpZXMgZnJvbSB0aGUgICBzZWNvbmRhcnkgbWFya2V0IG9yIGNvbnZlcnQgdGhlICAgQ2VudHJhbCBHb3Zlcm5tZW50IHNlY3VyaXRpZXMgaGVsZCBieSAgIGl0IHdpdGggb3RoZXIgc2VjdXJpdGllcyBvZiB0aGUgQ2VudHJhbCAgIEdvdmVybm1lbnQsIGFzIG11dHVhbGx5IGFncmVlZCAgIGJldHdlZW4gdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSBhbmQgICB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50LiAgIE1lYXN1cmVzIGZvciBFbmZvcmNlbWVudDogICDvgrcgVGhlIENlbnRyYWwgR292ZXJubWVudCB0byBlbnN1cmUgICBncmVhdGVyIHRyYW5zcGFyZW5jeSBpbiBpdHMgZmlzY2FsICAgb3BlcmF0aW9ucyBhbmQgbWluaW1pc2Ugc2VjcmVjeSBpbiB0aGUgICBwcmVwYXJhdGlvbiBvZiB0aGUgYW5udWFsIGZpbmFuY2lhbCAgIHN0YXRlbWVudHMgYW5kIGRlbWFuZHMgZm9yIGdyYW50cy4gICAg74K3IFRoZSBVbmlvbiBNaW5pc3RlciBvZiBGaW5hbmNlIHRvIHJldmlldyAgIHRhcmdldHMgYW5kIHRyZW5kcyBpbiByZWNlaXB0cyBhbmQgICBleHBlbmRpdHVyZSBpbiByZWxhdGlvbiB0byB0aGUgdGFyZ2V0cyBpbiAgIGJ1ZGdldCBvbiBoYWxmLXllYXJseSBiYXNpcy4gICAg74K3IFRoZSBDZW50cmFsIEdvdmVybm1lbnQgdG8gcHJlcGFyZSAgIG1vbnRobHkgc3RhdGVtZW50cyBvZiBpdHMgYWNjb3VudHMuICAg74K3IEluIGNhc2Ugb2Ygc2hvcnRhZ2UgaW4gcmV2ZW51ZSBvciBleGNlc3MgICBvZiBleHBlbmRpdHVyZSwgdGhlIENlbnRyYWwgR292ZXJubWVudCAgIHRvIHRha2Ugc3RlcHMgdG8gaW5jcmVhc2UgcmV2ZW51ZSBvciAgIHJlZHVjZSBleHBlbmRpdHVyZS4gKE5vdGhpbmcgaW4gdGhpcyAgIHNoYWxsIGVmZmVjdCB0aGUgcmV2ZW51ZSBjaGFyZ2VkIG9uIHRoZSAgIENvbnNvbGlkYXRlZCBGdW5kKS4gICAg74K3IE5vIGRldmlhdGlvbiBpcyBhbGxvd2VkIGZyb20gdGhlIHRhcmdldCAgIGNhc3Qgb24gdGhlIENlbnRyYWwgR292ZXJubWVudCwgZXhjZXB0ICAgd2l0aG91dCB0aGUgYXBwcm92YWwgb2YgdGhlIFBhcmxpYW1lbnQuICAgSG93ZXZlciwgaWYgZHVlIHRvIGFueSB1bmZvcmVzZWVuICAgZXZlbnQsIGEgZGV2aWF0aW9uIG9jY3VycywgdGhlIFVuaW9uICAgTWluaXN0ZXIgb2YgRmluYW5jZSB3aWxsIG1ha2UgYSAgIHN0YXRlbWVudCBpbiBib3RoIHRoZSBIb3VzZXMgb2YgdGhlICAgUGFybGlhbWVudCBoaWdobGlnaHRpbmcgdGhlIHJlYXNvbnMsICAgb3V0Y29tZXMgYW5kIHJlbWVkaWFsIG1lYXN1cmVzLiAgICBUaGUgQ0FHIHRvIHBlcmlvZGljYWxseSByZXZpZXcgY29tcGxpYW5jZSAgIG9mIHRoaXMgQWN0IGJ5IHRoZSBDZW50cmFsIEdvdmVybm1lbnQgYW5kICAgdGFibGUgcmVwb3J0IGluIHRoZSBQYXJsaWFtZW50LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 1 and 2 only  ",
        "option3" : "  3 only  ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements  regarding the Capacity Building  Commission:  1. It is a body created by an executive  order, under the Department of  Personnel and Training (DoPT), under  the Ministry of Personnel, Public  Grievances and Pensions.  2.  It is the nodal agency for the  implementation of Mission Karmayogi.  3.  It will provide information to the DoPT,  for the purpose of Parliamentary  oversight and CAG compliance.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8Mzk=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBUaGUgQ2FwYWNpdHkgQnVpbGRpbmcgQ29tbWlzc2lvbjogICDvgrcgSXQgaXMgYSBib2R5IGNyZWF0ZWQgYnkgYW4gZXhlY3V0aXZlICAgb3JkZXIsIHVuZGVyIHRoZSBEZXBhcnRtZW50IG9mICAgUGVyc29ubmVsIGFuZCBUcmFpbmluZyAoRG9QVCksIHVuZGVyICAgdGhlIE1pbmlzdHJ5IG9mIFBlcnNvbm5lbCwgUHVibGljICAgR3JpZXZhbmNlcyBhbmQgUGVuc2lvbnMuICAg74K3IFRoZSBDZW50cmFsIEdvdmVybm1lbnQgaGFzIGFwcHJvdmVkICAgdGhlIE5hdGlvbmFsIFByb2dyYW1tZSBmb3IgQ2l2aWwgICBTZXJ2aWNlcyBDYXBhY2l0eSBCdWlsZGluZyAtIE1pc3Npb24gICBLYXJtYXlvZ2ksIHRvIGVuaGFuY2UgZ292ZXJuYW5jZSBpbiAgIHRoZSBjb3VudHJ5IHRocm91Z2ggdHJhbnNmb3JtYXRpb25hbCAgIGNoYW5nZSBpbiB0aGUgQ2l2aWwgU2VydmljZSBDYXBhY2l0eSAgIEJ1aWxkaW5nLiBUaGUgQ2FwYWNpdHkgQnVpbGRpbmcgICBDb21taXNzaW9uIChDQkMpIGlzIHRoZSBub2RhbCBhZ2VuY3kgICBmb3IgdGhlIGltcGxlbWVudGF0aW9uIG9mIE1pc3Npb24gICBLYXJtYXlvZ2kuICAg74K3IFRoZSBDQkMgd2lsbCBiZSBoZWFkZWQgYnkgYSAgIENoYWlycGVyc29uIGFuZCB0d28gbWVtYmVycy4gVGhlICAgU2VjcmV0YXJpYXQgb2YgdGhlIENCQyB3aWxsIGJlIGhlYWRlZCBieSAgIGFuIG9mZmljZXIgaW4gdGhlIGdyYWRlIG9mIEpvaW50IFNlY3JldGFyeSAgIHRvIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhLiAgICBGdW5jdGlvbnMgb2YgVEhFIENCQzogICDvgrcgRXZvbHZpbmcgYSBoYXJtb25pb3VzIGRlLXNpbG9lZCAgIGFwcHJvYWNoIHRvIGltcHJvdmUgY2FwYWNpdHkgYW5kIGJ1aWxkICAgc2hhcmVkIHJlc291cmNlcy4gICDvgrcgRmFjaWxpdGF0ZSB0aGUgcHJlcGFyYXRpb24gb2YgdGhlIEFubnVhbCAgIENhcGFjaXR5IEJ1aWxkaW5nIFBsYW5zIG9mIGRpZmZlcmVudCAgIGFnZW5jaWVzLiBTdWJtaXQgdGhlIGNvbGxhdGVkIHBsYW5zIGZvciAgIGFwcHJvdmFsIHRvIHRoZSBQTSdzIFB1YmxpYyBIdW1hbiAgIFJlc291cmNlIENvdW5jaWwgKFBNSFJDKS4gTW9uaXRvciAgIGFuZCByZXBvcnQgdGhlIHBlcmlvZGljYWwgcHJvZ3Jlc3Mgb2YgICBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgcGxhbi4gICDvgrcgUHJlcGFyZSBBbm51YWwgSFIgUmVwb3J0IG9uIHRoZSAgIGhlYWx0aCBvZiBDaXZpbCBTZXJ2aWNlcyBhbmQgbWFraW5nIGl0ICAgcHVibGljIHdpdGggdGhlIGFwcHJvdmFsIG9mIHRoZSBEb1BULiAgIO+CtyBVbmRlcnRha2UgdGhlIGF1ZGl0IG9mIHRoZSBodW1hbiAgIHJlc291cmNlcyBhdmFpbGFibGUgaW4gdGhlIEdvdmVybm1lbnQgICBhbmQgYXNzZXNzIHRoZSBvdXRjb21lcyBvZiBjYXBhY2l0eSAgIGJ1aWxkaW5nIGVmZm9ydHMuIFByZXNlbnQgYW4gZXZhbHVhdGlvbiAgIG9mIHRoaXMgYXVkaXQgZm9yIHRoZSBhcHByb3ZhbCBhbmQgICBndWlkYW5jZSB0byB0aGUgQ2FiaW5ldCBTZWNyZXRhcmlhdCAgIENvb3JkaW5hdGlvbiBVbml0LiAgIO+CtyBSZWNvbW1lbmQgb24gc3RhbmRhcmRpc2F0aW9uIG9mICAgdHJhaW5pbmcgYW5kIGNhcGFjaXR5IGJ1aWxkaW5nLCAgIHBlZGFnb2d5IGFuZCBtZXRob2RvbG9neS4gQ2Fycnkgb3V0ICAgcmVzZWFyY2ggb24gcGVkYWdvZ3ksIGNvbXBldGVuY3kgICBmcmFtZXdvcmssIGNvbXBldGVuY3kgZ2FwIGFzc2Vzc21lbnQgICBldGMuICAg74K3IFJlY29tbWVuZCBvbiBwb2xpY3kgaW50ZXJ2ZW50aW9ucyBpbiAgIHRoZSBhcmVhcyBvZiBwZXJzb25uZWwvSFIgYW5kIENhcGFjaXR5ICAgQnVpbGRpbmcgdG8gdGhlIERvUFQuICAg74K3IEFuYWx5c2UgZGF0YSBlbWl0IGZyb20gdGhlIGlHT1QtICBLYXJtYXlvZ2ksIHBlcnRhaW5pbmcgdG8gZGlmZmVyZW50ICAgYXNwZWN0cyBvZiBjYXBhY2l0eSBidWlsZGluZywgc3VjaCBhcyAgIGNvbnRlbnQgY3JlYXRpb24sIGNvbXBldGVuY3kgbWFwcGluZywgICBmZWVkYmFjayBldGMuICAg74K3IEhvbGRpbmcgQW5udWFsIEdsb2JhbCBQdWJsaWMgSFIgICBTdW1taXQgdW5kZXIgdGhlIG92ZXJhbGwgZ3VpZGFuY2Ugb2YgICB0aGUgUE0ncyBQdWJsaWMgSHVtYW4gUmVzb3VyY2UgICBDb3VuY2lsIChQTUhSQykgYW5kIHRoZSBDYWJpbmV0ICAgU2VjcmV0YXJpYXQgQ29vcmRpbmF0aW9uIFVuaXQsIGFuZCAgIHByZXBhcmluZyBvdXRjb21lIHJlcG9ydCBvZiB0aGUgICBTdW1taXQuICAg74K3IFByb3ZpZGluZyBpbmZvcm1hdGlvbiB0byB0aGUgRG9QVCBmb3IgICB0aGUgcHVycG9zZSBvZiBQYXJsaWFtZW50YXJ5IG92ZXJzaWdodCAgIGFuZCBDQUcgY29tcGxpYW5jZS4gICDvgrcgRXhlcmNpc2UgZnVuY3Rpb25hbCBzdXBlcnZpc2lvbiBvdmVyIHRoZSAgIGluc3RpdHV0aW9ucyBlbmdhZ2VkIGluIHRyYWluaW5nIHRoZSBDaXZpbCAgIFNlcnZhbnRzIChGb3IgdGhlIHB1cnBvc2VzIG9mIGFkaGVyZW5jZSAgIHRvIGFuZCBhY2hpZXZlbWVudHMgb2YgdGhlIGFubnVhbCAgIGNhcGFjaXR5IGJ1aWxkaW5nIHBsYW5zLCBjcmVhdGlvbiBvZiBhbiAgIGVjby1zeXN0ZW0gb2Ygc2hhcmVkIGxlYXJuaW5nIHJlc291cmNlcyAgIGludGVybmFsIGFuZCBleHRlcm5hbCBmYWN1bHR5KS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to millets, consider the  following statements:  1.  There is a decline in the area under  cultivation during the last decade.  2.  More than 90% of coarse cereals are  grown in the states of Andhra Pradesh,  Telangana and Gujarat.  3.  The inclusion of millets in the Public  Distribution System (PDS) has not been  extended at an all-India level.   Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDA=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBNaWxsZXRzOiAgIO+CtyBNaWxsZXRzIGFyZSBhIGdyb3VwIG9mIHNtYWxsLCBncmFpbmVkICAgY2VyZWFsIGZvb2QgY3JvcHMgd2hpY2ggYXJlIGhpZ2hseSAgICB0b2xlcmFudCB0byBkcm91Z2h0IGFuZCBvdGhlciBleHRyZW1lICAgd2VhdGhlciBjb25kaXRpb25zLCBhbmQgYXJlIGdyb3duIHdpdGggICBsb3cgY2hlbWljYWwgaW5wdXRzLCBzdWNoIGFzIGZlcnRpbGl6ZXJzICAgYW5kIHBlc3RpY2lkZXMuICAgIO+CtyBNb3N0IG1pbGxldCBjcm9wcyBhcmUgbmF0aXZlIHRvIEluZGlhICAgYW5kIGFyZSBwb3B1bGFybHkga25vd24gYXMgJ251dHJpLSAgY2VyZWFscycsIGFzIHRoZXkgcHJvdmlkZSBtb3N0IG9mIHRoZSAgIG51dHJpZW50cyByZXF1aXJlZCBmb3IgdGhlIG5vcm1hbCAgIGZ1bmN0aW9uaW5nIG9mIHRoZSBodW1hbiBib2R5LiAgICDvgrcgTWlsbGV0cyBhcmUgY2xhc3NpZmllZCBpbnRvOiBNYWpvciAgIE1pbGxldHMgKEpvd2FyLCBiYWpyYSBhbmQgcmFnaSk7IGFuZCAgIE1pbm9yIE1pbGxldHMgKEZveHRhaWwsIHByb3NvIG1pbGxldCBhbmQgICBrb2RvIG1pbGxldCksIGJhc2VkIG9uIHRoZWlyIGdyYWluIHNpemUuICAgIERvbWVzdGljIFByb2R1Y3Rpb246ICAg74K3IEFic29sdXRlIGFyZWEgdW5kZXIgbnV0cmktY2VyZWFsczogICBEZWNsaW5lIGluIHRoZSBhcmVhIHVuZGVyIGN1bHRpdmF0aW9uICAgZnJvbSAyOCBtIGhhIGluIDIwMDctMDggdG8gMjUgbSBoYSBpbiAgIDIwMTctMTguICAg74K3IFBlcmNlbnRhZ2Ugb2YgYXJlYSB1bmRlciBudXRyaS0gIGNlcmVhbHM6IERlY2xpbmUgaW4gdGhlIHBlcmNlbnRhZ2Ugb2YgICBhcmVhIHVuZGVyIG51dHJpLWNlcmVhbHMgZnJvbSAxNSUgaW4gICAyMDA3LTA4IHRvIDEyJSBpbiAyMDE5LTIwLiAgIO+CtyBQcm9kdWN0aW9uIG9mIG51dHJpLWNlcmVhbHM6IEluY3JlYXNlICAgaW4gdGhlIHRvdGFsIHByb2R1Y3Rpb24gZnJvbSA0MCBtaWxsaW9uICAgdG9ubmVzIGluIDIwMDctMDggdG8gYWxtb3N0IGFyb3VuZCA0NSAgIG1pbGxpb24gdG9ubmVzIGluIDIwMTctMTgsIG1haW5seSBvbiAgIGFjY291bnQgb2YgaW5jcmVhc2UgaW4gcHJvZHVjdGl2aXR5LiAgICDvgrcgTGFyZ2VzdCBwcm9kdWNlcnM6IE1vcmUgdGhhbiA5MCUgb2YgICBjb2Fyc2UgY2VyZWFscyBhcmUgZ3Jvd24gaW4gdGhlIHN0YXRlcyAgIG9mIFJhamFzdGhhbiwgS2FybmF0YWthLCAgIE1haGFyYXNodHJhLCBNYWRoeWEgUHJhZGVzaCBldGMuICAg74K3IE1ham9yIG1pbGxldHM6IFRoZSB0aHJlZSBtYWpvciBtaWxsZXQgICBjcm9wcyBjdXJyZW50bHkgZ3Jvd2luZyBpbiBJbmRpYSBhcmU6ICAgam93YXIgKHNvcmdodW0pLCBiYWpyYSAocGVhcmwgbWlsbGV0KSBhbmQgICByYWdpIChmaW5nZXIgbWlsbGV0KS4gICBJbml0aWF0aXZlcyBmb3IgYm9vc3RpbmcgcHJvZHVjdGlvbiBvZiAgIFRIRSBOdXRyaS1DZXJlYWxzIC0gICBUaGUgTmF0aW9uYWwgRm9vZCBTZWN1cml0eSBNaXNzaW9uICAgKE5GU00pOiBUYXJnZXRzIHRvIGFjaGlldmUgdGhpcnRlZW4gbWlsbGlvbiAgIHRvbm5lcyBvZiBhZGRpdGlvbmFsIGZvb2QgZ3JhaW5zIHByb2R1Y3Rpb24sICAgY29tcHJpc2luZyByaWNlLTUgTVQsIHdoZWF0LSAzIE1ULCBwdWxzZXMtICAgMyBNVCBhbmQgbnV0cmktY3VtLWNvYXJzZSBjZXJlYWxzLTIgTVQsICAgYnkgMjAxOS0gMjAsIHdpdGggYW4gYWRkaXRpb25hbCBvYmplY3RpdmUgdG8gICBlbmhhbmNlIHBvc3QtaGFydmVzdCB2YWx1ZSBhZGRpdGlvbiBmb3IgICBiZXR0ZXIgcHJpY2UgcmVhbGl6YXRpb24gdG8gdGhlIGZhcm1lcnMuICAgU3BlY2lhbCBhY3Rpb24gcGxhbiBmb3IgYmV0dGVyIHByb2R1Y3Rpb24gICBvZiBudXRyaSBjZXJlYWxzIChNaWxsZXRzKTogRm9jdXMgb24gICBpbmNyZWFzaW5nIHByb2R1Y3Rpb24gYW5kIHByb2R1Y3Rpdml0eSBvZiAgIG51dHJpIGNlcmVhbHMgaW4gY2VydGFpbiBzdGF0ZXMuICAgRGVjbGFyYXRpb24gb2YgaGlnaGVyIE1TUCBmb3IgdGhlIG1pbGxldHMsICAgc3VjaCBhcyBqb3dhciwgYmFqcmEgYW5kIHJhZ2kuICAgSW5jbHVzaW9uIG9mIG1pbGxldHMgaW4gdGhlIFB1YmxpYyAgIERpc3RyaWJ1dGlvbiBTeXN0ZW0gKFBEUykuIChJdCBpcyBvbiBhIHBpbG90ICAgYmFzaXMpLiAgIERlY2xhcmF0aW9uIG9mIDIwMjMgYXMgdGhlIEludGVybmF0aW9uYWwgICBZZWFyIG9mIE1pbGxldHMuICAgU3RyYXRlZ2llcyB0byBwcm9tb3RlIE51dHJpLUNlcmVhbHM6ICAgMS4gU3BlY2lhbCBBZ3JpYnVzaW5lc3MgWm9uZXMgKFNBQlopIGZvciAgIG1pbGxldHM6IEZvY3VzIG9uIHRoZSBkZXZlbG9wbWVudCBvZiAgIG1pbGxldHMgd2hpY2ggYXJlIHBvcHVsYXJseSBjdWx0aXZhdGVkIGluICAgdGhlIGxvY2FsIGFyZWFzLiBFeGFtcGxlczogU29yZ2h1bSBpbiAgIFRlbGFuZ2FuYSwgZmluZ2VyIG1pbGxldCBpbiBLYXJuYXRha2EsICAgcGVhcmwgbWlsbGV0IGluIEd1amFyYXQgYW5kIHNtYWxsIG1pbGxldHMgICBpbiBNYWRoeWEgUHJhZGVzaC4gVGhlc2UgU0FCWnMgY2FuICAgZGV2ZWxvcCBhcm91bmQgdGhlIEZQT3MsIGZhcm0gZ2F0ZSAgIGxldmVsIHByaW1hcnkgcHJvY2Vzc2luZyBmYWNpbGl0aWVzLCB3YXJlICAgaG91c2luZyB1bml0cyBhbmQgdmFsdWUtYWRkZWQgZm9vZCAgIHByb2R1Y3RzLiAgICAyLiBQcm9tb3RpbmcgT3JnYW5pYyBNaWxsZXRzIHRvIGNhdGVyIHRvICAgaW5jcmVhc2VkIGRlbWFuZCBvZiB0aGUgY29uc3VtZXJzLiAgIDMuIEV4cGxvcmUgdHJhZGUgb3Bwb3J0dW5pdGllczogVGhlICAgZXhwb3J0IG9mIEluZGlhbiBtaWxsZXRzIGhhcyBub3QgYmVlbiAgIHVwdG8gdGhlIG1hcmssIGFzIGNvbXBhcmVkIHRvIG90aGVyICAgY2VyZWFsIGdyYWlucyBkdWUgdG8gcG9vciBxdWFsaXR5LiBUaGUgICBmYXJtZXJzIG5lZWQgdG8gYmUgZWR1Y2F0ZWQgYWJvdXQgICBxdWFsaXR5IGNvbmNlcm5zIGF0IGFsbCBzdGFnZXMgb2YgICBwcm9kdWN0aW9uIGFuZCBoYXJ2ZXN0aW5nLiAgIDQuIEZlZGVyYXRpbmcgbWlsbGV0cyBmYXJtZXJzIGFzIHRoZSAgIEZhcm1lciBQcm9kdWNlciBPcmdhbml6YXRpb25zIChGUE9zKS4gICA1LiBFeHBhbmRpbmcgdGhlIGNvdmVyYWdlIG9mIHNtYWxsICAgbWlsbGV0cyB1bmRlciB0aGUgTVNQLiAgIDYuIEVmZmljaWVudCBpbXBsZW1lbnRhdGlvbiBvZiBQTS0gIEFBU0hBIHRvIHVuZGVydGFrZSBoaWdoZXIgICBwcm9jdXJlbWVudCBvZiBtaWxsZXRzLiAgIDcuIFByb21vdGlvbiBvZiBjb250cmFjdCBmYXJtaW5nIGZvciAgIG1pbGxldHMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following statements is/are  correct in reference to the Udyam Portal?  1.  It is a portal created by the Ministry of  Labour and Employment.   2.  Registration on the portal is absolutely  free, paperless and based on self- declaration.   3.  It can be used for availing finance  under Priority Sector Lending; Credit  Guarantee Fund; and Public  Procurement Policy.   Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDE=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBVZHlhbSBQb3J0YWw6ICAg74K3IEl0IGlzIGEgcG9ydGFsIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiAgIE1TTUUsIHdoaWNoIHByb3ZpZGVzIGEgc2luZ2xlICAgIHdpbmRvdyBmYWNpbGl0eSBmb3IgcmVnaXN0cmF0aW9uIG9mIHRoZSAgIE1TTUVzLiAgIO+CtyBUaGUgcmVnaXN0cmF0aW9uIG9mIE1TTUVzIGlzIGRvbmUgICBhY2NvcmRpbmcgdG8gdGhlIG5ldyBhbmQgZXhwYW5kZWQgICBkZWZpbml0aW9uIG9mIHRoZSBNU01Fcy4gICDvgrcgVGhlIE1TTUVzIGFyZSBnaXZlbiB1bmlxdWUgVWR5YW0gICBSZWdpc3RyYXRpb24gTnVtYmVyLiAgIO+CtyBSZWdpc3RyYXRpb24gb24gdGhlIHBvcnRhbCBpcyBmcmVlLCAgIHBhcGVybGVzcyBhbmQgYmFzZWQgb24gc2VsZi1kZWNsYXJhdGlvbi4gICDvgrcgUmVnaXN0cmF0aW9uIG9uIHRoZSBVZHlhbSBwb3J0YWwgICBmYWNpbGl0YXRlcyBxdWljayByZWdpc3RyYXRpb24gb2YgdGhlIEdlTSAgIChHb3Zlcm5tZW50IGUgTWFya2V0cGxhY2UpIHBvcnRhbCAoRm9yICAgZ292ZXJubWVudCBwcm9jdXJlbWVudCkgYW5kIHRoZSAgIFRSZURTIHBsYXRmb3JtIChGb3IgdHJhZGUgcmVjZWl2YWJsZXMpLiAgIO+CtyBUaGUgTVNNRXMsIHVzaW5nIHRoZWlyIFVkeWFtICAgcmVnaXN0cmF0aW9uLCBjYW4gYXZhaWwgZmluYW5jZSB1bmRlciB0aGUgICBQcmlvcml0eSBTZWN0b3IgTGVuZGluZywgYmVuZWZpdHMgb2YgICBzY2hlbWVzIG9mIHRoZSBnb3Zlcm5tZW50LCBzdWNoIGFzICAgQ3JlZGl0IEd1YXJhbnRlZSBGdW5kLCBQdWJsaWMgICBQcm9jdXJlbWVudCBQb2xpY3ksIGFkZGl0aW9uYWwgZWRnZSBpbiAgIGdvdmVybm1lbnQgdGVuZGVycyBhbmQgcHJvdGVjdGlvbiAgIGFnYWluc3QgZGVsYXllZCBwYXltZW50cyBldGMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following statements  regarding the Unique Land Parcel  Identification Number (ULPIN):  1.  It is a 12-digit Unique ID for each land  parcel, which will be numeric in nature.  2.  The identification will be based on the  longitude and latitude coordinates (Geo- coordinates) of the land parcel and it is  solely dependent on geo-referenced  cadastral maps.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDI=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBVbmlxdWUgTGFuZCBQYXJjZWwgSWRlbnRpZmljYXRpb24gICBOdW1iZXIgKFVMUElOKTogSXQgaXMgYSAxNC1kaWdpdCBBbHBoYS0gIG51bWVyaWMgVW5pcXVlIElEIGZvciBlYWNoIGxhbmQgcGFyY2VsLiAgIFRoaXMgaXMgdGhlIG5leHQgc3RlcCBpbiB0aGUgRGlnaXRhbCBJbmRpYSAgIExhbmQgUmVjb3JkcyBNb2Rlcm5pc2F0aW9uIFByb2dyYW1tZS4gICAgVGhlIFVMUElOIG51bWJlciBjYW4gYmUgc2VlbiBhcyBhbiAgICdBYWRoYWFyIG51bWJlcicgZm9yIGxhbmQgcmVjb3Jkcy4gICBUaGUgaWRlbnRpZmljYXRpb24gd2lsbCBiZSBiYXNlZCBvbiB0aGUgICBsb25naXR1ZGUgYW5kIGxhdGl0dWRlIGNvb3JkaW5hdGVzIChHZW8tICBjb29yZGluYXRlcykgb2YgdGhlIGxhbmQgcGFyY2VsIGFuZCBpcyAgIGRlcGVuZGVudCBvbiBkZXRhaWxlZCBzdXJ2ZXlzIGFuZCBnZW8tICByZWZlcmVuY2VkIGNhZGFzdHJhbCBtYXBzLiAgICBBbGwgbGFuZCBwYXJjZWxzIGluIEluZGlhIHdpbGwgYmUgYXNzaWduZWQgICB0aGVzZSBVTFBJTiBJRHMuIEN1cnJlbnRseSwgdGhpcyBoYXMgYmVlbiAgIGltcGxlbWVudGVkIGluIDEzIHN0YXRlcyBhbmQgcGlsb3QgdGVzdGluZyAgIGlzIGNvbnRpbnVpbmcgaW4gb3RoZXIgNiBzdGF0ZXMuICAgIFRoZSBEZXBhcnRtZW50IG9mIExhbmQgUmVzb3VyY2VzLCB1bmRlciAgIHRoZSBNaW5pc3RyeSBvZiBSdXJhbCBEZXZlbG9wbWVudCwgaXMgICBpbXBsZW1lbnRpbmcgdGhpcyBwcm9qZWN0LiAgICBOYXRpb25hbCBHZW5lcmljIERvY3VtZW50IFJlZ2lzdHJhdGlvbiAgIFN5c3RlbSAoTkdEUlMpOiBJdCBmYWNpbGl0YXRlcyB0aGUgY2l0aXplbnMgICB0byByZWdpc3RlciB0aGVpciBkb2N1bWVudHMgd2l0aCBhICAgUmVnaXN0ZXJpbmcgT2ZmaWNlciBmb3IgdGhlIHB1cnBvc2Ugb2YgICBjb25zZXJ2YXRpb24gb2YgZXZpZGVuY2UsIGFzc3VyYW5jZSBvZiB0aXRsZSwgICBwdWJsaWNpdHkgb2YgZG9jdW1lbnRzIGFuZCBwcmV2ZW50aW9uIG9mICAgZnJhdWQuIFRoZSBzeXN0ZW0gaXMgd2ViIGVuYWJsZWQsIGdlbmVyaWMgICBhbmQgY29uZmlndXJhYmxlLCBhbmQgZGVwbG95ZWQgYXMgICBjb25maWd1cmFibGUgYWNjb3JkaW5nIHRvIHRoZSBTdGF0ZSBTcGVjaWZpYyAgIFByb3BlcnR5IFJlZ2lzdHJhdGlvbiBBY3QuIFRoZSBwcm9qZWN0IGhhcyAgIGJlZW4gaW5pdGlhdGVkIGJ5IHRoZSBEZXBhcnRtZW50IG9mIExhbmQgICBSZXNvdXJjZXMsIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBSdXJhbCAgIERldmVsb3BtZW50LCBhbmQgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEuICAgQmVuZWZpdHM6ICAgMS4gUmVkdWNlcyBhZG1pbmlzdHJhdGl2ZSBvdmVyaGVhZCBvZiB0aGUgICBnb3Zlcm5tZW50IGRlcGFydG1lbnRzIGJ5IG1pbmltaXNpbmcgICB0aGUgdXNlIG9mIHBhcGVyLCByZWdpc3RyYXRpb24gdGltZSBhbmQgICBhcHBvaW50bWVudHMgcHJpb3IgcHJvY2VlZGluZ3MgdG8gdGhlICAgU3ViIFJlZ2lzdHJhciBPZmZpY2UuICAgMi4gQWxsIHJlZ2lzdHJhdGlvbiBzdGFrZWhvbGRlcnMgb24gYSBzaW5nbGUgICBwbGF0Zm9ybS4gICAzLiBDaXRpemVuIGVtcG93ZXJtZW50IGJ5IGVuYWJsaW5nICAgcHJvcGVydHkgdmFsdWF0aW9uIG9uIGEgY2xpY2ssIGFjaGlldmluZyAgIGVhc2Ugb2YgZG9pbmcgYnVzaW5lc3MuICAgIEludGVncmF0ZWQgTGFuZCBNYW5hZ2VtZW50IEluZm9ybWF0aW9uICAgU3lzdGVtIChJTE1JUykgUHJvamVjdDogICBUaGlzIGluZm9ybWF0aW9uIHN5c3RlbSBhaW1zIHRvIGludGVncmF0ZSAgIGFuZCBjb25zb2xpZGF0ZSBhbGwgdGhlIHByb2Nlc3NlcyBhbmQgbGFuZCAgIHJlY29yZHMgZGF0YWJhc2VzLiAgIFRoaXMgd2lsbCBlbmFibGUgbGFuZC1yZWxhdGVkIGluZm9ybWF0aW9uIHRvICAgYmUgYXZhaWxhYmxlIGluIGEgc2luZ2xlIHdpbmRvdy4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements about  Payment Systems in India:  1. The RBI is the regulator of the  payments system in India as per  provisions of the RBI Act, 1934.  2. NEFT, UPI, and RTGS payment systems  are operated and managed by the RBI.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDM=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBQYXltZW50IGFuZCBTZXR0bGVtZW50IFN5c3RlbXMgQWN0LCAgIDIwMDcgZGVzaWduYXRlcyB0aGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhICAgZm9yIHRoZSByZWd1bGF0aW9uIGFuZCBzdXBlcnZpc2lvbiBvZiAgIHBheW1lbnRzIGluIEluZGlhLiAgIE5hdGlvbmFsIEVsZWN0cm9uaWMgRnVuZHMgVHJhbnNmZXIgKE5FRlQpICAgJiBSZWFsIFRpbWUgR3Jvc3MgU2V0dGxlbWVudCAoUlRHUykgYXJlICAgbmF0aW9ud2lkZSBjZW50cmFsaXNlZCBwYXltZW50IHN5c3RlbXMgICBvd25lZCBhbmQgb3BlcmF0ZWQgYnkgdGhlIFJlc2VydmUgQmFuayBvZiAgIEluZGlhIChSQkkpLiAgICBIb3dldmVyLCBVUEkgaGFzIGJlZW4gZGV2ZWxvcGVkLCAgIG1hbmFnZWQsIGFuZCBvcGVyYXRlZCBieSB0aGUgTmF0aW9uYWwgICBQYXltZW50cyBDb3Jwb3JhdGlvbiBvZiBJbmRpYSAoTlBDSSkuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements about  the Clearing Corporation of India Limited  (CCIL):   1. The Clearing Corporation plays the  crucial role of a Central Counter Party  (CCP) in the government securities and  USD-INR forex exchange.  2.  CCIL is granted the status of a Qualified  Central Counterparty (QCCP).  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIENDSUwgd2FzIHNldCB1cCBpbiAyMDAxIGJ5IGJhbmtzLCAgIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgYW5kIHByaW1hcnkgZGVhbGVycywgICB0byBmdW5jdGlvbiBhcyBhbiBpbmR1c3RyeSBzZXJ2aWNlICAgb3JnYW5pc2F0aW9uIGZvciBjbGVhcmluZyBhbmQgc2V0dGxlbWVudCBvZiAgIHRyYWRlcyBpbiBtb25leSBtYXJrZXQsIGdvdmVybm1lbnQgICBzZWN1cml0aWVzIGFuZCBmb3JlaWduIGV4Y2hhbmdlIG1hcmtldHMuICAgVGhlIENsZWFyaW5nIENvcnBvcmF0aW9uIHBsYXlzIHRoZSBjcnVjaWFsICAgcm9sZSBvZiBhIENlbnRyYWwgQ291bnRlciBQYXJ0eSAoQ0NQKSBpbiB0aGUgICBnb3Zlcm5tZW50IHNlY3VyaXRpZXMsIFVTRC1JTlIgZm9yZXggICBleGNoYW5nZSAoYm90aCBzcG90IGFuZCBmb3J3YXJkIHNlZ21lbnRzKSAgIGFuZCBUcmlwYXJ0eSBSZXBvIG1hcmtldHMuIENDSUwgcGxheXMgdGhlICAgcm9sZSBvZiBhIGNlbnRyYWwgY291bnRlcnBhcnR5IHdoZXJlYnksIHRoZSAgIGNvbnRyYWN0IGJldHdlZW4gYnV5ZXIgYW5kIHNlbGxlciBnZXRzICAgcmVwbGFjZWQgYnkgdHdvIG5ldyBjb250cmFjdHMgLSBiZXR3ZWVuICAgQ0NJTCBhbmQgZWFjaCBvZiB0aGUgdHdvIHBhcnRpZXMuIFRoaXMgICBwcm9jZXNzIGlzIGtub3duIGFzICdOb3ZhdGlvbicuICAgIEJvdGggQ0NJTCBhbmQgQ0NJTC1UUiBhcmUgcmVjb2duaXNlZCBhcyAgIGZpbmFuY2lhbCBtYXJrZXQgaW5mcmFzdHJ1Y3R1cmVzLiBDQ0lMIGlzICAgZ3JhbnRlZCB0aGUgc3RhdHVzIG9mIGEgUXVhbGlmaWVkIENlbnRyYWwgICBDb3VudGVycGFydHkgKFFDQ1ApIGFuZCBpcyBzdWJqZWN0ZWQsIG9uICAgYW4gb24tZ29pbmcgYmFzaXMsIHRvIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyAgIHRoYXQgYXJlIGNvbnNpc3RlbnQgd2l0aCB0aGUgUHJpbmNpcGxlcyBmb3IgICBGaW5hbmNpYWwgTWFya2V0IEluZnJhc3RydWN0dXJlcyAoUEZNSXMpICAgaXNzdWVkIGJ5IHRoZSBDb21taXR0ZWUgb24gUGF5bWVudCBhbmQgICBTZXR0bGVtZW50IFN5c3RlbXMgKENQU1MpIGFuZCAgIEludGVybmF0aW9uYWwgT3JnYW5pc2F0aW9uIG9mIFNlY3VyaXRpZXMgICBDb21taXNzaW9ucyAoSU9TQ08pLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements about  National Bank for Agriculture and Rural  Development (NABARD):   1. NABARD came into existence by  transferring the agricultural credit  functions of RBI and refinance  functions of the then Agricultural  Refinance and Development  Corporation (ARDC).   2.  It was dedicated to the service of the  nation by the late Prime Minister Rajiv  Gandhi.  3.  Producers Organisation Development  Fund (PODF) has been set up by  (NABARD).  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE5hdGlvbmFsIEJhbmsgZm9yIEFncmljdWx0dXJlIGFuZCBSdXJhbCAgIERldmVsb3BtZW50IChOQUJBUkQpIGNhbWUgaW50byAgIGV4aXN0ZW5jZSBpbiAxOTgyIGJ5IHRyYW5zZmVycmluZyB0aGUgICBhZ3JpY3VsdHVyYWwgY3JlZGl0IGZ1bmN0aW9ucyBvZiBSQkkgYW5kICAgcmVmaW5hbmNlIGZ1bmN0aW9ucyBvZiB0aGUgdGhlbiBBZ3JpY3VsdHVyYWwgICBSZWZpbmFuY2UgYW5kIERldmVsb3BtZW50IENvcnBvcmF0aW9uICAgKEFSREMpLiBJdCB3YXMgZGVkaWNhdGVkIHRvIHRoZSBzZXJ2aWNlIG9mICAgdGhlIG5hdGlvbiBieSB0aGUgbGF0ZSBQcmltZSBNaW5pc3RlciBTbXQuICAgSW5kaXJhIEdhbmRoaSBpbiAxOTgyLiAgIE5BQkFSRCBoYXMgdGFrZW4gYW4gaW5pdGlhdGl2ZSBmb3IgICBzdXBwb3J0aW5nIHByb2R1Y2VyIG9yZ2FuaXphdGlvbnMgKFBPcyksICAgYWRvcHRpbmcgYSBmbGV4aWJsZSBhcHByb2FjaCB0byBtZWV0IHRoZSAgIG5lZWRzIG9mIHByb2R1Y2Vycy4gSW4gb3JkZXIgdG8gZ2l2ZSBhICAgc3BlY2lhbCBmb2N1cywgJ1Byb2R1Y2VycyBPcmdhbml6YXRpb24gICBEZXZlbG9wbWVudCBGdW5kJyAoUE9ERikgaGFzIGJlZW4gc2V0ICAgdXAgYnkgaXQuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements:   1.  Stagflation refers to high inflation along  with recession in an economy.  2.  Skewflation refers to very high  sustained inflation in some sectors of  the economy, while other sectors  experience low inflation or even  deflation.  3.  Shrinkflation refers to slow and  sustained inflation in an economy.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDY=",
      "description" : "ICBFeHBsYW5hdGlvbjogICAxLiBJbiBlY29ub21pY3MsIHN0YWdmbGF0aW9uIG9yIHJlY2Vzc2lvbi0gIGluZmxhdGlvbiBpcyBhIHNpdHVhdGlvbiBpbiB3aGljaCAgIHRoZSBpbmZsYXRpb24gcmF0ZSBpcyBoaWdoIG9yIGluY3JlYXNpbmcsICAgdGhlIGVjb25vbWljIGdyb3d0aCByYXRlIHNsb3dzICAgYW5kIHVuZW1wbG95bWVudCByZW1haW5zIHN0ZWFkaWx5ICAgaGlnaC4gSXQgcHJlc2VudHMgYSBkaWxlbW1hICAgZm9yIGVjb25vbWljIHBvbGljeSwgc2luY2UgYWN0aW9ucyAgIGludGVuZGVkIHRvIGxvd2VyIGluZmxhdGlvbiBtYXkgICBleGFjZXJiYXRlIHVuZW1wbG95bWVudC4gICAyLiBTa2V3ZmxhdGlvbiBtZWFucyB0aGUgc2tld25lc3Mgb2YgICBpbmZsYXRpb24gYW1vbmcgZGlmZmVyZW50IHNlY3RvcnMgb2YgdGhlICAgZWNvbm9teSAtIHNvbWUgc2VjdG9ycyBhcmUgZmFjaW5nICAgaHVnZSBpbmZsYXRpb24sIHNvbWUgbm9uZSBhbmQgc29tZSAgIGRlZmxhdGlvbi4gICAzLiBTaHJpbmtmbGF0aW9uIHJlZmVycyB0byBhIHBoZW5vbWVub24gICBvZiByZWR1Y3Rpb24gb2Ygc2l6ZSBvZiB0aGUgRk1DRyAgIGdvb2RzIG9yIGdyb2NlcnkgaXRlbXMsIHdoZXJlaW4sIHRvICAgY292ZXIgdGhlIGluY3JlYXNlZCBpbnB1dCBwcmljZXMsICAgdGhlIGNvbXBhbmllcyByZWR1Y2UgdGhlIHNpemUgb2YgdGhlICAgcGFja2V0cywgd2hpbGUga2VlcGluZyB0aGUgcHJpY2VzICAgdW5jaGFuZ2VkLiBUaHVzLCB0aGUgY29uc3VtZXJzIGRvICAgbm90IGZlZWwgaW5mbGF0aW9uLiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3  "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following will be the measures  to address inflation in an economy?  1. Reducing the repo rate.  2. Increasing the reverse repo rate.  3. Reduction in government expenditure.  4. Increasing indirect taxes.  5. Increasing production of goods and  services.  6. Relaxing imports.  Select the correct answer using the code  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDc=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBSaXNpbmcgaW5mbGF0aW9uIGlzIGR1ZSB0byBpbmNyZWFzZWQgZGVtYW5kICAgZm9yIGdvb2RzIGFuZCBzZXJ2aWNlcyBpbiBhbiBlY29ub215IG9yICAgY29uc3RyYWludHMgaW4gdGhlIHN1cHBseSBzaWRlLiBUaHVzLCB3aGVuICAgYW4gZWNvbm9teSBpcyBleHBlcmllbmNpbmcgaGVpZ2h0ZW5lZCAgIGluZmxhdGlvbiwgdGhlIHJlc3BvbnNlIHNob3VsZCBpZGVhbGx5ICAgYWRkcmVzcyBib3RoIHRoZXNlIHNpZGVzOiAgIDEuIERlY3JlYXNlIGluIHRoZSBSZXBvIFJhdGUgLT4gICBCb3Jyb3dpbmcgZnJvbSB0aGUgUkJJIGlzIGNoZWFwZXIgLT4gICBCYW5rcyB3aWxsIGJvcnJvdyBtb3JlIC0+IE1vcmUgICBjcmVkaXQgaXMgYXZhaWxhYmxlIC0+IE1vbmV5IHN1cHBseSAgIHdpbGwgaW5jcmVhc2UuIChJbmNyZWFzaW5nIGluZmxhdGlvbikuICAgMi4gQW4gaW5jcmVhc2UgaW4gdGhlIFJldmVyc2UgUmVwbyBSYXRlICAgbWVhbnMgdGhhdCB0aGUgY29tbWVyY2lhbCBiYW5rcyB3aWxsICAgZ2V0IG1vcmUgaW5jZW50aXZlcyB0byBwYXJrIHRoZWlyIGZ1bmRzICAgd2l0aCB0aGUgUkJJLCB0aGVyZWJ5IGRlY3JlYXNpbmcgdGhlICAgc3VwcGx5IG9mIG1vbmV5IGluIHRoZSBtYXJrZXQuICAgKERlY3JlYXNpbmcgaW5mbGF0aW9uKS4gICAzLiBSZWR1Y2VkIGdvdmVybm1lbnQgZXhwZW5kaXR1cmUgd2lsbCAgIHJlZHVjZSB0aGUgc3VwcGx5IG9mIG1vbmV5IGluIHRoZSAgIGVjb25vbXkuIFRodXMsIHJlZHVjaW5nIGluZmxhdGlvbi4gICAgNC4gSW5jcmVhc2luZyBpbmRpcmVjdCB0YXhlcyB3aWxsIHJlZHVjZSB0aGUgICBwcmljZSBvZiBnb29kcyBhbmQgc2VydmljZXMgaW4gdGhlICAgZWNvbm9teS4gVGh1cywgcmVkdWNpbmcgaW5mbGF0aW9uLiAgIDUuIEluY3JlYXNpbmcgcHJvZHVjdGlvbiBvZiBnb29kcyBhbmQgICBzZXJ2aWNlcyB3aWxsIGluY3JlYXNlIHN1cHBseSBhbmQgdGh1cywgICByZWR1Y2UgaW5mbGF0aW9uLiAgIDYuIFJlbGF4aW5nIGltcG9ydHM6IEVhc2Ugb2YgaW1wb3J0cyB3aWxsICAgbGVhZCB0byBtb3JlIHN1cHBseSBpbiB0aGUgZWNvbm9teSwgICB0aHVzIHJlZHVjaW5nIGluZmxhdGlvbi4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : " 1, 3, 4 and 5 only  ",
        "option2" : " 2, 3, 5 and 6 only  ",
        "option3" : " 1, 3, 4 and 6 only  ",
        "option4" : " 2, 3, 4 and 6 only   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements about  the Flexible Inflation Targeting Framework:  1.  The RBI determines and notifies the  inflation target based on the CPI every  five years.  2.  The RBI will be seen to have failed to  meet the inflation target if inflation  stands for more than 6% or less than  2% for a quarter.  3.  The RBI has never failed to meet the  inflation target until now.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDg=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBBY2NvcmRpbmcgdG8gdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSAgIEFjdCAoMTkzNCksIHRoZSBDZW50cmFsIEdvdmVybm1lbnQgICBzaGFsbCwgaW4gY29uc3VsdGF0aW9uIHdpdGggdGhlIFJCSSwgICBkZXRlcm1pbmUgdGhlIGluZmxhdGlvbiB0YXJnZXQgaW4gdGVybXMgICBvZiB0aGUgQ29uc3VtZXIgUHJpY2UgSW5kZXgsIG9uY2UgaW4gICBldmVyeSA1IHllYXJzLiBUaGUgQ2VudHJhbCBHb3Zlcm5tZW50ICAgd2lsbCBub3RpZnkgdGhlIGluZmxhdGlvbiB0YXJnZXQgaW4gdGhlIG9mZmljaWFsICAgZ2F6ZXR0ZS4gVG8gaW1wbGVtZW50IHRoZSBpbmZsYXRpb24gdGFyZ2V0LCAgIHRoZSBDZW50cmFsIEdvdmVybm1lbnQgd2lsbCBub3RpZnkgdGhlICAgTW9uZXRhcnkgUG9saWN5IENvbW1pdHRlZSBvZiB0aGUgUkJJLCAgIHdoaWNoIHdpbGwgYmUgaGVhZGVkIGJ5IHRoZSBSQkkgR292ZXJub3IgICBhbmQgdHdvIG90aGVyIG1lbWJlcnMgZnJvbSB0aGUgUkJJLCBhbmQgICB0aHJlZSBtZW1iZXJzIHRvIGJlIGFwcG9pbnRlZCBieSB0aGUgICBDZW50cmFsIEdvdmVybm1lbnQuIFRoZSBNb25ldGFyeSBQb2xpY3kgICBDb21taXR0ZWUgc2hhbGwgZGV0ZXJtaW5lIHRoZSBQb2xpY3kgUmF0ZSAgIHJlcXVpcmVkIHRvIGFjaGlldmUgdGhlIGluZmxhdGlvbiB0YXJnZXQuICAgSW4gdGhpcyByZXNwZWN0LCB0aGUgR292ZXJubWVudCwgYWZ0ZXIgICBjb25zdWx0YXRpb24gd2l0aCB0aGUgUkJJLCBoYXMgZGV0ZXJtaW5lZCAgIGEgJ2ZsZXhpYmxlIGluZmxhdGlvbiB0YXJnZXQgb2YgaW5mbGF0aW9uJyBmb3IgNCwgICB3aXRoIGEgYmFuZCBvZiAyJSAobWF4aW11bSA2JSBhbmQgICBtaW5pbXVtIDIlKSBmb3IgaW5mbGF0aW9uIHRhcmdldGluZy4gICAgRmFpbHVyZSB0byBtZWV0IHRoZSBpbmZsYXRpb24gdGFyZ2V0OiAgIEFjY29yZGluZyB0byB0aGUgUkJJIEFjdCwgdGhlIGZhY3RvcnMgdGhhdCAgIGNvbnN0aXR1dGUgdGhlIGZhaWx1cmUgb2YgdGhlIGluZmxhdGlvbiB0YXJnZXQgICBzaGFsbCBiZSBub3RpZmllZCBieSB0aGUgQ2VudHJhbCAgIEdvdmVybm1lbnQuICAgSW4gdGhpcyByZXNwZWN0LCB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50ICAgaGFzIG5vdGlmaWVkIHRoYXQgdGhlIFJCSSBzaGFsbCBiZSBzZWVuIHRvICAgaGF2ZSBmYWlsZWQgdG8gbWVldCB0aGUgdGFyZ2V0LCBpZiBpbmZsYXRpb24gaXMgICBtb3JlIHRoYW4gNiUgb3IgbGVzcyB0aGFuIDIlIGZvciB0aHJlZSAgIGNvbnNlY3V0aXZlIHF1YXJ0ZXJzLiAgIEFjY29yZGluZyB0byB0aGUgUkJJIEFjdCwgd2hlcmUgdGhlIGJhbmsgICBmYWlscyB0byBtZWV0IHRoZSBpbmZsYXRpb24gdGFyZ2V0LCBpdCBzaGFsbCBzZXQgICBvdXQgaW4gYSByZXBvcnQgdG8gdGhlIENlbnRyYWwgR292ZXJubWVudC0gICAgKGEpICB0aGUgcmVhc29ucyBmb3IgZmFpbHVyZSB0byBhY2hpZXZlIHRoZSAgIGluZmxhdGlvbiB0YXJnZXQuICAgIChiKSAgcmVtZWRpYWwgYWN0aW9ucyBwcm9wb3NlZCB0byBiZSB0YWtlbiAgIGJ5IHRoZSBiYW5rOyBhbmQgICAgKGMpICBhbiBlc3RpbWF0ZSBvZiB0aGUgdGltZS1wZXJpb2Qgd2l0aGluICAgd2hpY2ggdGhlIGluZmxhdGlvbiB0YXJnZXQgc2hhbGwgYmUgICBhY2hpZXZlZCwgcHVyc3VhbnQgdG8gdGltZWx5ICAgaW1wbGVtZW50YXRpb24gb2YgdGhlIHByb3Bvc2VkICAgcmVtZWRpYWwgYWN0aW9ucy4gICAgVGhlIENQSSBpbmZsYXRpb24gaGFzIHJlbWFpbmVkIG92ZXIgNiUgICBmb3IgZm91ciBxdWFydGVycyBub3csIHRodXMgaXQgY2FuIGJlIHNhaWQgICB0aGF0IHRoZSBSQkkgaGFzIG1pc3NlZCB0aGUgaW5mbGF0aW9uICAgdGFyZ2V0LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  2 only  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3    "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements about  the Phillips Curve:  1.  It gives the relationship between the  unemployment rate and inflation in an  economy.  2. According to the Curve, as wage  inflation increases, unemployment in  the economy decreases.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NDk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFBoaWxsaXBzIEN1cnZlOiBUaGUgUGhpbGxpcHMgQ3VydmUgaXMgYW4gICBlY29ub21pYyBjb25jZXB0IGRldmVsb3BlZCBieSBBLiBXLiAgIFBoaWxsaXBzLCBzdGF0aW5nIHRoYXQgaW5mbGF0aW9uIGFuZCAgIHVuZW1wbG95bWVudCBoYXZlIGEgc3RhYmxlIGFuZCBpbnZlcnNlICAgcmVsYXRpb25zaGlwLiBUaGUgdGhlb3J5IGNsYWltcyB0aGF0IHdpdGggICBlY29ub21pYyBncm93dGggY29tZXMgaW5mbGF0aW9uLCB3aGljaCwgaW4gICB0dXJuLCBzaG91bGQgbGVhZCB0byBtb3JlIGpvYnMgYW5kIGxlc3MgICB1bmVtcGxveW1lbnQuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 50,
      "question" : " Consider the following statements about  MGNREGA:  1.  Wages under MGNREGA are the same  for all states and revised on an annual  basis.   2.  Wages for MGNREGA should be  necessarily more than that for the  agricultural labourers.  3.  Wages for the labourers in MGNREGA  are indexed to the CPI-Rural.   Which of the statements given above is/are  incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlR8NTA=",
      "description" : "ICBFeHBsYW5hdGlvbjogICBDdXJyZW50bHksIHRoZSBDZW50cmUgR292ZXJubWVudCAgIG5vdGlmaWVzIHdhZ2VzIHVuZGVyIHRoZSBNR05SRUdBICAgKE1haGF0bWEgR2FuZGhpIE5hdGlvbmFsIFJ1cmFsICAgRW1wbG95bWVudCBHdWFyYW50ZWUgQWN0KSwgd2hpY2ggYXJlICAgZGlmZmVyZW50IGZvciBkaWZmZXJlbnQgc3RhdGVzLiBUaGUgd2FnZXMgICBhcmUgcmV2aXNlZCBvbiBhbiBhbm51YWwgYmFzaXMsIGJhc2VkICAgYW5kIGFyZSBpbmRleGVkIHdpdGggdGhlIENQSS0gIEFncmljdWx0dXJhbCBMYWJvdXIsIHJlbGVhc2VkIGJ5IHRoZSAgIExhYm91ciBCdXJlYXUsIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiAgIExhYm91ciBhbmQgRW1wbG95bWVudC4gICBXYWdlcyB1bmRlciB0aGUgTUdOUkVHQSBhcmUgb2Z0ZW4gICBsZXNzIHRoYW4gdGhvc2UgcGFpZCBhcyBtaW5pbXVtIHdhZ2VzICAgdG8gdGhlIGFncmljdWx0dXJhbCBsYWJvdXJlcnMuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxFY29ub21pY3N8RUNPTk9NSUMgJiBTT0NJQUwgREVWRUxPUE1FTlQ=",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
      "questionType" : "normal",
      "subject" : "Economics",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3  "
      }
    }
  ],
  "subject" : "Economics",
  "topic" : "ECONOMIC & SOCIAL DEVELOPMENT",
  "year" : "2023"
}
