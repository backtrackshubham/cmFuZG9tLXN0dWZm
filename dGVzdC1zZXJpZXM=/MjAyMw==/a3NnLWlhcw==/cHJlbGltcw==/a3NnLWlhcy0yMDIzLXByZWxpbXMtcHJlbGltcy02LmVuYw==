{
  "testId" : "ksg-ias-2023-prelims-prelims-6",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/ksg-ias/prelims/ksg-ias-2023-prelims-prelims-6.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : " With reference to Employees' State Insurance (ESI) Scheme, which of the following statements is/are correct? 1.  It generally applies to non-seasonal factories / establishments with 10 or more employees. 2.  The ESI Scheme is financed by contributions from both employers and employees. 3.  Employees with salary more than a threshold level will be eligible for benefits under the scheme. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBFbXBsb3llZXMnIFN0YXRlIEluc3VyYW5jZSBTY2hlbWUgaXMgIGFuIGludGVncmF0ZWQgbWVhc3VyZSBvZiBTb2NpYWwgSW5zdXJhbmNlICBlbWJvZGllZCBpbiB0aGUgRW1wbG95ZWVzJyBTdGF0ZSBJbnN1cmFuY2UgIEFjdCBhbmQgaXQgaXMgZGVzaWduZWQgdG8gYWNjb21wbGlzaCB0aGUgdGFzayAgb2YgcHJvdGVjdGluZyAnZW1wbG95ZWVzJyBhcyBkZWZpbmVkIGluICB0aGUgRW1wbG95ZWVzJyBTdGF0ZSBJbnN1cmFuY2UgQWN0LCAgMTk0OCBhZ2FpbnN0IHRoZSBpbXBhY3Qgb2YgaW5jaWRlbmNlcyBvZiAgc2lja25lc3MsIG1hdGVybml0eSwgZGlzYWJsZW1lbnQgYW5kIGRlYXRoICBkdWUgdG8gZW1wbG95bWVudCBpbmp1cnkgYW5kIHRvIHByb3ZpZGUgIG1lZGljYWwgY2FyZSB0byBpbnN1cmVkIHBlcnNvbnMgYW5kIHRoZWlyICBmYW1pbGllcy4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICAgIFRoZSBFU0kgU2NoZW1lIGFwcGxpZXMgdG8gbm9uLXNlYXNvbmFsICBmYWN0b3JpZXMgYW5kIG90aGVyIGVzdGFibGlzaG1lbnQncyB2aXouICBSb2FkIFRyYW5zcG9ydCwgSG90ZWxzLCBSZXN0YXVyYW50cywgIENpbmVtYXMsIE5ld3NwYXBlciwgU2hvcHMsIGFuZCAgRWR1Y2F0aW9uYWwvTWVkaWNhbCBJbnN0aXR1dGlvbnMgIHdoZXJlaW4gMTAgb3IgbW9yZSBwZXJzb25zIGFyZSAgZW1wbG95ZWQuIEhvd2V2ZXIsIGluIHNvbWUgU3RhdGVzICB0aHJlc2hvbGQgbGltaXQgZm9yIGNvdmVyYWdlIG9mICBlc3RhYmxpc2htZW50cyBpcyBzdGlsbCAyMC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgIFRoZSBFU0kgU2NoZW1lIGlzIGZpbmFuY2VkIGJ5ICBjb250cmlidXRpb25zIGZyb20gZW1wbG95ZXJzIGFuZCAgZW1wbG95ZWVzLiBUaGUgcmF0ZSBvZiBjb250cmlidXRpb24gYnkgIGVtcGxveWVyIGlzIDQuNzUlIG9mIHRoZSB3YWdlcyBwYXlhYmxlIHRvICBlbXBsb3llZXMuIFRoZSBlbXBsb3llZXMnIGNvbnRyaWJ1dGlvbiBpcyBhdCAgdGhlIHJhdGUgb2YgMS43NSUgb2YgdGhlIHdhZ2VzIHBheWFibGUgdG8gYW4gIGVtcGxveWVlLiBFbXBsb3llZXMsIGVhcm5pbmcgbGVzcyB0aGFuICBScy4gMTM3Ly0gYSBkYXkgYXMgZGFpbHkgd2FnZXMsIGFyZSAgZXhlbXB0ZWQgZnJvbSBwYXltZW50IG9mIHRoZWlyIHNoYXJlIG9mICBjb250cmlidXRpb24uICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6ICAgVGhlIGV4aXN0aW5nIHdhZ2UgbGltaXQgZm9yIGNvdmVyYWdlIHVuZGVyICB0aGUgQWN0IGVmZmVjdGl2ZSBmcm9tIDAxLjAxLiAyMDE3ICBpcyBScy4gMjEsMDAwLy0gcGVyIG1vbnRoIChScy4gMjUsMDAwLy0gcGVyICBtb250aCBpbiB0aGUgY2FzZSBvZiBQZXJzb25zIHdpdGggIERpc2FiaWxpdHkpLiBTbywgZW1wbG95ZWVzIHdpdGggc2FsYXJ5ICBiZWxvdyAobm90IGFib3ZlKSB0aGlzIHRocmVzaG9sZCBsZXZlbCB3aWxsICBiZSBlbGlnaWJsZSBmb3IgYmVuZWZpdHMuICAgU291cmNlOiBFbXBsb3llZXMnIFN0YXRlIEluc3VyYW5jZSAgU2NoZW1lfCBOYXRpb25hbCBQb3J0YWwgb2YgSW5kaWEgIGh0dHBzOi8vd3d3LmZpbmFuY2lhbGV4cHJlc3MuY29tL21vbmV5LyBnb3Z0LXBsYW5zLXRvLWV4dGVuZC1lc2ktc2NoZW1lLWFjcm9zcy0gY291bnRyeS1ieS1lbmQtb2YtMjAyMi8yNTY1NzczLyAgIGVzcy9pbmRpYS1idXNpbmVzcy9lc2ljLXRvLWNvdmVyLWVudGlyZS0gaW5kaWEtdW5kZXItZXNpLXNjaGVtZS1ieS15ZWFyLSBlbmQvYXJ0aWNsZXNob3cvOTIzMjQ1NDAuY21zICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 2,
      "question" : " Recently, Securities and Exchange Board of India (SEBI) has set up an advisory committee on hybrid securities. In this context, consider the following statements:  1.  Hybrid securities may be bought and sold on an exchange. 2.  Convertible bond is a type of hybrid security. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFNlY3VyaXRpZXMgYW5kIEV4Y2hhbmdlIEJvYXJkIG9mIEluZGlhICAoU0VCSSkgaGFzIHNldCB1cCBhbiBhZHZpc29yeSBjb21taXR0ZWUgb24gIGh5YnJpZCBzZWN1cml0aWVzLCB3aGljaCB3aWxsIG1ha2UgIHJlY29tbWVuZGF0aW9ucyBmb3IgZ2l2aW5nIGEgZmlsbGlwIHRvIHRoZSAgZ3Jvd3RoIG9mIHN1Y2ggaW5zdHJ1bWVudHMsIGluY2x1ZGluZyAgbWVhc3VyZXMgZm9jdXNpbmcgb24gZWFzZSBvZiBpc3N1YW5jZSBhbmQgIGF0dHJhY3RpbmcgZG9tZXN0aWMgYW5kIGdsb2JhbCBjYXBpdGFsLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBhbmQgc3RhdGVtZW50IDIgaXMgIGNvcnJlY3Q6ICBIeWJyaWQgc2VjdXJpdGllcywgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgICJoeWJyaWRzLCIgZ2VuZXJhbGx5IGNvbWJpbmUgYm90aCBkZWJ0ICBhbmQgZXF1aXR5IGNoYXJhY3RlcmlzdGljcy4gVGhlIG1vc3QgIGNvbW1vbiB0eXBlIG9mIGh5YnJpZCBzZWN1cml0eSBpcyBhICBjb252ZXJ0aWJsZSBib25kIHRoYXQgaGFzIGZlYXR1cmVzIG9mIGFuICBvcmRpbmFyeSBib25kIGJ1dCBpcyBoZWF2aWx5IGluZmx1ZW5jZWQgYnkgIHRoZSBwcmljZSBtb3ZlbWVudHMgb2YgdGhlIHN0b2NrIGludG8gd2hpY2ggIGl0IGlzIGNvbnZlcnRpYmxlLiAgSHlicmlkIHNlY3VyaXRpZXMgYXJlIGJvdWdodCBhbmQgc29sZCBvbiAgYW4gZXhjaGFuZ2Ugb3IgdGhyb3VnaCBhIGJyb2tlcmFnZS4gIEh5YnJpZHMgbWF5IGdpdmUgaW52ZXN0b3JzIGEgZml4ZWQgb3IgZmxvYXRpbmcgIHJhdGUgb2YgcmV0dXJuIGFuZCBtYXkgcGF5IHJldHVybnMgYXMgIGludGVyZXN0IG9yIGFzIGRpdmlkZW5kcy4gU29tZSBoeWJyaWRzICByZXR1cm4gdGhlaXIgZmFjZSB2YWx1ZSB0byB0aGUgaG9sZGVyIHdoZW4gIHRoZXkgbWF0dXJlIGFuZCBzb21lIGhhdmUgdGF4IGFkdmFudGFnZXMuICBTb3VyY2U6ICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvYnVzaW5lcyBzL21hcmtldC9zZWJpLWFkdmlzb3J5LWNvbW1pdHRlZS1rdi0ga2FtYXRoLWZpbmFuY2UtbWluaXN0cnktcmVpdHMtaW52aXRzLSBoeWJyaWQtc2VjdXJpdGllcy03OTgwMTI0LyAgSHlicmlkIFNlY3VyaXR5IERlZmluaXRpb24gIChpbnZlc3RvcGVkaWEuY29tKSAgaHR0cHM6Ly93d3cuc2ViaS5nb3YuaW4vc2ViaXdlYi9hYm91dC9BIGJvdXRBY3Rpb24uZG8/ZG9NZW1iZXI9eWVzJmNvbW1pdHRlZXNJIGQ9NjkgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 3,
      "question" : " Which of the following are calculated as a part of Gross National Product (GNP) of India? 1.  Salary sent back home by South Korean Badminton coach in India. 2.  Income earned by TCS in USA  3.  Transfer payments to India made by foreigner living abroad. 4.  Goods produced by Indian company on territory of India. Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogIEdyb3NzIERvbWVzdGljIFByb2R1Y3QgKEdEUCkgbWVhc3VyZXMgdGhlICBhZ2dyZWdhdGUgb3RhbCBwcm9kdWN0aW9uIG9mIGZpbmFsIGdvb2RzICBhbmQgc2VydmljZXMgdGFraW5nIHBsYWNlIHdpdGhpbiB0aGUgIGRvbWVzdGljIHRlcnJpdG9yeSBvZiB0aGUgY291bnRyeSBkdXJpbmcgYSAgeWVhci4gQnV0IGl0IG1heSBiZSBwb3NzaWJsZSB0aGF0IHRoZSBmb3JlaWduICB3dyB3LiB1cCBzYyBtYSB0ZXIgaWFsIC4gbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAxIDkgIG5hdGlvbmFscyB3b3JraW5nIHdpdGhpbiBJbmRpYSBoYXZlICBjb250cmlidXRlZCBpbiB0aGF0IEdEUCBwcm9kdWN0aW9uLiAgIFNvLCBub3cgd2UgYXJlIGludGVyZXN0ZWQgaW4gbWVhc3VyaW5nIHRoZSAgb3V0cHV0L2Vhcm5pbmdzIG1hZGUgYnkgSW5kaWFuIHJlc2lkZW50cyAgb25seSB3aGV0aGVyIGluIEluZGlhIG9yIGFicm9hZCB3aGljaCBpcyAgdGVybWVkIGFzIEdyb3NzIE5hdGlvbmFsIFByb2R1Y3QgKEdOUCkuICBHTlAgaXMgdGhhdCBpbmNvbWUgb3IgcHJvZHVjdCB3aGljaCAgYWNjcnVlcyB0byB0aGUgZWNvbm9taWMgYWdlbnRzIHdobyBhcmUgIHJlc2lkZW50cyBvZiB0aGUgY291bnRyeS4gKGkuZS4gaW5jb21lICBlYXJuZWQgYnkgdGhlIE5vbi1SZXNpZGVudCBJbmRpYW5zICAoTlJJcykgd2lsbCBub3QgYmUgcGFydCBvZiBJbmRpYSdzIEdOUCkuICBUbyBjYWxjdWxhdGUgR05QLCB3ZSBhZGQgdGhlIGZhY3RvciBpbmNvbWUgIG9mIEluZGlhbnMgZnJvbSBhYnJvYWQgaW4gR0RQIGFuZCBzdWJ0cmFjdCAgdGhlIGNvbnRyaWJ1dGlvbiBvZiBmb3JlaWduZXJzIGluIEluZGlhJ3MgR0RQLiAgIEdOUCA9IEdEUCArIE5ldCBmYWN0b3IgaW5jb21lIGZyb20gYWJyb2FkICAoTkZJQSkgIFNvdXJjZTogSW5kaWFuIEVjb25vbXkgYnkgVml2ZWsgU2luZ2g+ICBDaGFwdGVyLSAxPiBQYWdlIE5vLi0gMTQgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 and 4 only ",
        "option2" : "  3 and 4 only ",
        "option3" : "  1, 2 and 3 only  ",
        "option4" : "  1, 3 and 4 only  "
      }
    },
    {
      "index" : 4,
      "question" : " Consider the following committees: 1.  Alagh Committee  2.  Lakdawala Committee 3.  Tendulkar Committee 4.  Rangrajan Committee 5.  P.J Nayak Committee Which of the above committees are related with the poverty estimation? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgU29tZSBvZiB0aGUgY29tbWl0dGVlcyBmb3JtZWQgYnkgdGhlICBnb3Zlcm5tZW50cyBmb3IgUG92ZXJ0eSBlc3RpbWF0aW9uIGluICBJbmRpYTogIEFsYWdoIENvbW1pdHRlZSAoMTk3OSk6IEluIDE5NzksIGEgdGFzayAgZm9yY2UgY29uc3RpdHV0ZWQgYnkgdGhlIFBsYW5uaW5nICBDb21taXNzaW9uIGZvciB0aGUgcHVycG9zZSBvZiBwb3ZlcnR5ICBlc3RpbWF0aW9uLCBjaGFpcmVkIGJ5IFlLIEFsYWdoLCAgY29uc3RydWN0ZWQgYSBwb3ZlcnR5IGxpbmUgZm9yIHJ1cmFsIGFuZCAgdXJiYW4gYXJlYXMgb24gdGhlIGJhc2lzIG9mIG51dHJpdGlvbmFsICByZXF1aXJlbWVudHMuICAgTGFrZGF3YWxhIENvbW1pdHRlZSAoMTk5Myk6IEluIDE5OTMsICBhbiBleHBlcnQgZ3JvdXAgY29uc3RpdHV0ZWQgdG8gcmV2aWV3ICBtZXRob2RvbG9neSBmb3IgcG92ZXJ0eSBlc3RpbWF0aW9uLCBjaGFpcmVkICBieSBEVCBMYWtkYXdhbGEgIFRlbmR1bGthciBDb21taXR0ZWUgKDIwMDkpOiBJbiAyMDA1LCAgYW5vdGhlciBleHBlcnQgZ3JvdXAgdG8gcmV2aWV3IG1ldGhvZG9sb2d5ICBmb3IgcG92ZXJ0eSBlc3RpbWF0aW9uLCBjaGFpcmVkIGJ5IFN1cmVzaCAgVGVuZHVsa2FyLCB3YXMgY29uc3RpdHV0ZWQgYnkgdGhlIFBsYW5uaW5nICBDb21taXNzaW9uICAgUmFuZ2FyYWphbiBDb21taXR0ZWU6IEluIDIwMTIsIHRoZSAgUGxhbm5pbmcgQ29tbWlzc2lvbiBjb25zdGl0dXRlZCBhICBuZXcgZXhwZXJ0IHBhbmVsIG9uIHBvdmVydHkgZXN0aW1hdGlvbiwgIGNoYWlyZWQgYnkgQyBSYW5nYXJhamFuICAgVGhlIFAgSiBOYXlhayBDb21taXR0ZWUgb3Igb2ZmaWNpYWxseSAgdGhlIENvbW1pdHRlZSB0byBSZXZpZXcgR292ZXJuYW5jZSBvZiAgQm9hcmRzIG9mIEJhbmtzIGluIEluZGlhIHdhcyBzZXQgdXAgYnkgdGhlICBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkgdG8gcmV2aWV3IHRoZSAgZ292ZXJuYW5jZSBvZiB0aGUgYm9hcmQgb2YgYmFua3MgaW4gSW5kaWEuICBUaGUgQ29tbWl0dGVlIHdhcyBzZXQgdXAgaW4gSmFudWFyeSAyMDE0LiAgU291cmNlOiAgaHR0cHM6Ly9wcnNpbmRpYS5vcmcgaGVwcnNibG9nL21vcmUtIHByaXZhdGlzYXRpb24tb24tdGhlLWNhcmRzICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 4 and 5 only ",
        "option2" : "  2, 3 and 5 only ",
        "option3" : "  1, 2, 3 and 4 only  ",
        "option4" : "  1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 5,
      "question" : " Consider the following statements with reference to Kodavas: 1.  They are a unique race of people living in Odisha. 2.  They celebrate harvest festival known as 'Puttari'. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6ICAgS29kYXZhcyBhcmUgYSB1bmlxdWUgcmFjZSBvZiBwZW9wbGUgd2hvICBsaXZlIGluIEtvZGFndSAoQ29vcmcsIGFzIHRoZSBCcml0aXNoIGNhbGxlZCAgaXQpLCB0aGUgc21hbGxlc3QgZGlzdHJpY3QgaW4gS2FybmF0YWthLiBWZXJ5ICBsaXR0bGUgaXMga25vd24gYWJvdXQgdGhlIG9yaWdpbiBvZiB0aGlzICBjb21tdW5pdHkgb2Ygd2FycmlvcnMgd2hvIGhhdmUgbGl2ZWQgb24gdGhlICBzbG9wZXMgb2YgdGhlIFdlc3Rlcm4gR2hhdHMuICAgS29kYXZhIHdvbWVuIGFyZSBoaWdobHkgZWR1Y2F0ZWQuIFRoZXJlIGlzICBubyBkb3dyeSBzeXN0ZW0sIGFuZCB3b21lbiBkcmFwZSB0aGVpciAgc2FyaXMgb3Bwb3NpdGUgdG8gdGhlIHN0eWxlIGFkb3B0ZWQgYnkgdGhlIHJlc3QgIG9mIEluZGlhLiBUaGUgY3VzdG9tcyBhcmUgdW5pcXVlLiBLb2RhdmFzICBhcmUgSGluZHVzLCBidXQgcHJpZXN0cyBoYXZlIG5vIHJvbGUgaW4gdGhlaXIgIG1hcnJpYWdlcy4gIEtvZGF2YXMgcmV2ZXJlIHRoZSBDYXV2ZXJ5ICBSaXZlciwgdGhleSB3b3JzaGlwIG5hdHVyZSBhbmQgZ3Vucy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgIFRoZSBLZWlsIE11cnRoYSBmZXN0aXZhbCBpcyBkZWRpY2F0ZWQgdG8gZ3Vucy4gIFRoZSBoYXJ2ZXN0IGZlc3RpdmFsLCBQdXR0YXJpLCBpcyB1c2hlcmVkIGluICB3aXRoIGEgZ3Vuc2hvdC4gIFNvdXJjZTogV2hvIGFyZSB0aGUgS29kYXZhcz8gQSByaWRkbGUgdGhhdCAgZXRobm9sb2dpc3RzIGFyZSB5ZXQgdG8gY3JhY2ssIHNheXMgUC5ULiAgQm9wYW5uYSAtIFRoZSBIaW5kdSAgQXJlIEtvZGF2YXMsIHdobyBiZWxvbmcgdG8gYSB1bmlxdWUgcmFjZSwgIEhpbmR1cz8gfCBEZWNjYW4gSGVyYWxkICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 6,
      "question" : " Providing which of the following services is among the objectives of financial inclusion? 1.  A basic no-frills banking account for making and receiving payments 2.  Pension system 3.  Access to formal source of financing 4.  Remittance, or money transfer facilities 5.  Life Insurance Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIFRoZSBvYmplY3RpdmVzIG9mIGZpbmFuY2lhbCBpbmNsdXNpb24gYXJlIHRvICBwcm92aWRlIHRoZSBmb2xsb3dpbmc6ICDil48gQSBiYXNpYyBuby1mcmlsbHMgYmFua2luZyBhY2NvdW50IGZvciAgbWFraW5nIGFuZCByZWNlaXZpbmcgcGF5bWVudHMgIOKXjyBTYXZpbmcgcHJvZHVjdHMgKGluY2x1ZGluZyBpbnZlc3RtZW50ICBhbmQgcGVuc2lvbikgIOKXjyBTaW1wbGUgY3JlZGl0IHByb2R1Y3RzIGFuZCBvdmVyZHJhZnRzICBsaW5rZWQgd2l0aCBuby1mcmlsbHMgYWNjb3VudHMgIOKXjyBSZW1pdHRhbmNlLCBvciBtb25leSB0cmFuc2ZlciBmYWNpbGl0aWVzICDil48gTWljcm8gaW5zdXJhbmNlIChsaWZlKSBhbmQgbm9uLW1pY3JvICBpbnN1cmFuY2UgKGxpZmUgYW5kIG5vbi1saWZlKSAg4pePIE1pY3JvIHBlbnNpb24gIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3MtIHN0YW5kYXJkLmNvbS9hYm91dC93aGF0LWlzLWZpbmFuY2lhbC0gaW5jbHVzaW9uICAgIHd3IHcuIHVwIHNjIG1hIHRlciBpYWwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDIgMCAgNy4gICAgKGEpICAgIEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIGJhbGFuY2Ugb2YgIHBheW1lbnRzIChCb1ApIHJlY29yZHMgdGhlIHRyYW5zYWN0aW9ucyBpbiAgZ29vZHMsIHNlcnZpY2VzIGFuZCBhc3NldHMgYmV0d2VlbiAgcmVzaWRlbnRzIG9mIGEgY291bnRyeSAobm90IHRoZSBjaXRpemVucykgIHdpdGggdGhlIHJlc3Qgb2YgdGhlIHdvcmxkIGZvciBhIHNwZWNpZmllZCB0aW1lICBwZXJpb2QgdHlwaWNhbGx5IGEgeWVhci4gIFRoZXJlIGlzIGEgbmV3IGNsYXNzaWZpY2F0aW9uIGluIHdoaWNoIHRoZSAgYmFsYW5jZSBvZiBwYXltZW50cyBoYXZlIGJlZW4gZGl2aWRlZCBpbnRvICB0aHJlZSBhY2NvdW50cyAtIHRoZSBjdXJyZW50IGFjY291bnQsIHRoZSAgZmluYW5jaWFsIGFjY291bnQgYW5kIHRoZSBjYXBpdGFsIGFjY291bnQuICAgVGhpcyBpcyBhcyBwZXIgdGhlIG5ldyBhY2NvdW50aW5nIHN0YW5kYXJkcyAgc3BlY2lmaWVkIGJ5IHRoZSBJbnRlcm5hdGlvbmFsIE1vbmV0YXJ5ICBGdW5kIChJTUYpIGluIHRoZSBzaXh0aCBlZGl0aW9uIG9mIHRoZSAgQmFsYW5jZSBvZiBQYXltZW50cyBhbmQgSW50ZXJuYXRpb25hbCAgSW52ZXN0bWVudCBQb3NpdGlvbiBNYW51YWwgKEJQTTYpLiBJbmRpYSAgaGFzIGFsc28gbWFkZSB0aGUgY2hhbmdlIGJ1dCB0aGUgUmVzZXJ2ZSAgQmFuayBvZiBJbmRpYSBjb250aW51ZXMgdG8gcHVibGlzaCBkYXRhICBhY2NvdW50aW5nIHRvIHRoZSBvbGQgY2xhc3NpZmljYXRpb24uICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBIGZpbmFuY2lhbCAgYWNjb3VudCBtZWFzdXJlcyB0aGUgaW5jcmVhc2Ugb3IgIGRlY3JlYXNlIGluIGEgY291bnRyeSdzIG93bmVyc2hpcCBvZiAgaW50ZXJuYXRpb25hbCBhc3NldHMuICAgVGhlIGNhcGl0YWwgYWNjb3VudCBtZWFzdXJlcyB0aGUgY2FwaXRhbCAgdHJhbnNmZXJzIGJldHdlZW4gVS5TLiByZXNpZGVudHMgYW5kIGZvcmVpZ24gIHJlc2lkZW50cy4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIGN1cnJlbnQgIGFjY291bnQgYmFsYW5jZSByZWNvcmRlZCBhIGRlZmljaXQgb2YgMS4yIHBlciAgY2VudCBvZiBHRFAgaW4gMjAyMS0yMiBhcyBhZ2FpbnN0IGEgc3VycGx1cyAgb2YgMC45IHBlciBjZW50IGluIDIwMjAtMjEgYXMgdGhlIHRyYWRlICBkZWZpY2l0IHdpZGVuZWQgdG8gVVMkIDE4OS41IGJpbGxpb24gZnJvbSAgVVMkIDEwMi4yIGJpbGxpb24gYSB5ZWFyIGFnby4gSW4gMjAxOS0yMCAgSW5kaWEgaGFkIGRlZmljaXQgb2YgMC45IHBlcmNlbnQuICBTb3VyY2U6IE5DRVJULCBjbGFzcyBYSUksIEludHJvZHVjdGlvbiB0byAgbWFjcm9lY29ub21pY3MsIGNoYXB0ZXIgMDYsIHBhZ2Ugbm8uIDg2LiAgaHR0cHM6Ly93d3cucmJpLm9yZy5pbi9TY3JpcHRzL0JTX1ByZXNzUiBlbGVhc2VEaXNwbGF5LmFzcHg/cHJpZD01MjMyNCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 and 4 only ",
        "option2" : "  4 and 5 only ",
        "option3" : "  1, 2, 3 and 5 only ",
        "option4" : "  1, 2, 3, 4 and 5    KSG: MEMBER'S COPY    "
      }
    },
    {
      "index" : 8,
      "question" : " Consider the following pairs:   Term Description 1.  Labour Force Participation Rate (LFPR) It is the percentage of employed persons in the population. 2.  Worker Population Ratio (WPR) It is the percentage of persons in labour force (i.e. working or seeking or available for work) in the population. 3.  Unemployment Rate (UR) It is the percentage of persons unemployed among the persons in the labour force. How many pairs given above are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "ICBFeHBsYW5hdGlvbjogIE9wdGlvbiAoYikgaXMgY29ycmVjdDogIExhYm91ciBGb3JjZSBQYXJ0aWNpcGF0aW9uIFJhdGUgIChMRlBSKTogTEZQUiBpcyBkZWZpbmVkIGFzIHRoZSBwZXJjZW50YWdlIG9mICBwZXJzb25zIGluIGxhYm91ciBmb3JjZSAoaS5lLiB3b3JraW5nIG9yICBzZWVraW5nIG9yIGF2YWlsYWJsZSBmb3Igd29yaykgaW4gdGhlICBwb3B1bGF0aW9uLiAgV29ya2VyIFBvcHVsYXRpb24gUmF0aW8gKFdQUik6IFdQUiBpcyAgZGVmaW5lZCBhcyB0aGUgcGVyY2VudGFnZSBvZiBlbXBsb3llZCAgcGVyc29ucyBpbiB0aGUgcG9wdWxhdGlvbi4gIFVuZW1wbG95bWVudCBSYXRlIChVUik6IFVSIGlzIGRlZmluZWQgYXMgIHRoZSBwZXJjZW50YWdlIG9mIHBlcnNvbnMgdW5lbXBsb3llZCAgYW1vbmcgdGhlIHBlcnNvbnMgaW4gdGhlIGxhYm91ciBmb3JjZS4gIEFjdGl2aXR5IFN0YXR1cy0gVXN1YWwgU3RhdHVzOiBUaGUgYWN0aXZpdHkgIHN0YXR1cyBvZiBhIHBlcnNvbiBpcyBkZXRlcm1pbmVkIG9uIHRoZSBiYXNpcyAgb2YgdGhlIGFjdGl2aXRpZXMgcHVyc3VlZCBieSB0aGUgcGVyc29uICBkdXJpbmcgdGhlIHNwZWNpZmllZCByZWZlcmVuY2UgcGVyaW9kLiBXaGVuICB0aGUgYWN0aXZpdHkgc3RhdHVzIGlzIGRldGVybWluZWQgb24gdGhlIGJhc2lzICBvZiB0aGUgcmVmZXJlbmNlIHBlcmlvZCBvZiBsYXN0IDM2NSBkYXlzICBwcmVjZWRpbmcgdGhlIGRhdGUgb2Ygc3VydmV5LCBpdCBpcyBrbm93biBhcyAgdGhlIHVzdWFsIGFjdGl2aXR5IHN0YXR1cyBvZiB0aGUgcGVyc29uLiAgIEFjdGl2aXR5IFN0YXR1cy0gQ3VycmVudCBXZWVrbHkgU3RhdHVzICAoQ1dTKTogVGhlIGFjdGl2aXR5IHN0YXR1cyBkZXRlcm1pbmVkIG9uIHRoZSAgYmFzaXMgb2YgYSByZWZlcmVuY2UgcGVyaW9kIG9mIGxhc3QgNyBkYXlzICBwcmVjZWRpbmcgdGhlIGRhdGUgb2Ygc3VydmV5IGlzIGtub3duIGFzIHRoZSAgY3VycmVudCB3ZWVrbHkgc3RhdHVzIChDV1MpIG9mIHRoZSBwZXJzb24uICBQcmluY2lwYWwgYWN0aXZpdHkgc3RhdHVzLSBUaGUgYWN0aXZpdHkgIHN0YXR1cyBvbiB3aGljaCBhIHBlcnNvbiBzcGVudCByZWxhdGl2ZWx5ICBsb25nIHRpbWUgKG1ham9yIHRpbWUgY3JpdGVyaW9uKSBkdXJpbmcgMzY1ICBkYXlzIHByZWNlZGluZyB0aGUgZGF0ZSBvZiBzdXJ2ZXksIHdhcyAgY29uc2lkZXJlZCB0aGUgdXN1YWwgcHJpbmNpcGFsIGFjdGl2aXR5ICBzdGF0dXMgb2YgdGhlIHBlcnNvbi4gICBTdWJzaWRpYXJ5IGVjb25vbWljIGFjdGl2aXR5IHN0YXR1cy0gVGhlICBhY3Rpdml0eSBzdGF0dXMgaW4gd2hpY2ggYSBwZXJzb24gaW4gYWRkaXRpb24gIHRvIGhpcy9oZXIgdXN1YWwgcHJpbmNpcGFsIHN0YXR1cywgcGVyZm9ybXMgIHNvbWUgZWNvbm9taWMgYWN0aXZpdHkgZm9yIDMwIGRheXMgb3IgbW9yZSAgZm9yIHRoZSByZWZlcmVuY2UgcGVyaW9kIG9mIDM2NSBkYXlzICBwcmVjZWRpbmcgdGhlIGRhdGUgb2Ygc3VydmV5LCB3YXMgY29uc2lkZXJlZCAgdGhlIHN1YnNpZGlhcnkgZWNvbm9taWMgc3RhdHVzIG9mIHRoZSAgcGVyc29uLiAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZUlmcmFtZVBhZ2UuIGFzcHg/UFJJRD0xODMzODU1ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  None of the pairs  ",
        "option2" : "  Only one pair ",
        "option3" : "  Only two pairs ",
        "option4" : "  All three pairs  "
      }
    },
    {
      "index" : 9,
      "question" : " Consider the following statements with reference to the financial intelligence Unit-India (FIU-IND): 1.  It is responsible for coordinating the global efforts against money laundering on behalf of India. 2.  It reports to the Economic Intelligence Council (EIC) headed by the Prime Minister. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgRmluYW5jaWFsIEludGVsbGlnZW5jZSBVbml0IC0gSW5kaWEgKEZJVS0gSU5EKTogRmluYW5jaWFsIEludGVsbGlnZW5jZSBVbml0IC0gSW5kaWEgd2FzICBzZXQgYnkgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgdmlkZSBPLk0uICBkYXRlZCAxOHRoIE5vdmVtYmVyIDIwMDQgYXMgdGhlIGNlbnRyYWwgIG5hdGlvbmFsIGFnZW5jeSByZXNwb25zaWJsZSBmb3IgcmVjZWl2aW5nLCAgcHJvY2Vzc2luZywgYW5hbHl6aW5nIGFuZCBkaXNzZW1pbmF0aW5nICBpbmZvcm1hdGlvbiByZWxhdGluZyB0byBzdXNwZWN0IGZpbmFuY2lhbCAgdHJhbnNhY3Rpb25zLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEZJVS1JTkQgaXMgYWxzbyAgcmVzcG9uc2libGUgZm9yIGNvb3JkaW5hdGluZyBhbmQgIHN0cmVuZ3RoZW5pbmcgZWZmb3J0cyBvZiBuYXRpb25hbCBhbmQgIGludGVybmF0aW9uYWwgaW50ZWxsaWdlbmNlLCBpbnZlc3RpZ2F0aW9uIGFuZCAgZW5mb3JjZW1lbnQgYWdlbmNpZXMgaW4gcHVyc3VpbmcgdGhlIGdsb2JhbCAgZWZmb3J0cyBhZ2FpbnN0IG1vbmV5IGxhdW5kZXJpbmcgYW5kIHJlbGF0ZWQgIGNyaW1lcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEZJVS1JTkQgaXMgYW4gIGluZGVwZW5kZW50IGJvZHkgcmVwb3J0aW5nIGRpcmVjdGx5IHRvIHRoZSAgd3cgdy4gdXAgc2MgbSB0ZXIgaWFsIC5vbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAyIDEgIEVjb25vbWljIEludGVsbGlnZW5jZSBDb3VuY2lsIChFSUMpIGhlYWRlZCAgYnkgdGhlIGZpbmFuY2UgbWluaXN0ZXIuICBTb3VyY2U6ICBodHRwczovL2Rvci5nb3YuaW4vcHJldmVudGlvbm9mbW9uZXlsYXVuIGRlcmluZy9maW5hbmNpYWwtaW50ZWxsaWdlbmNlLXVuaXQtaW5kaWEtZml1LSBpbmQgIGh0dHBzOi8vZml1aW5kaWEuZ292LmluL2ZpbGVzL0Fib3V0X0ZJVS0gSU5EL0Fib3V0X0ZJVUlORC5odG1sICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 10,
      "question" : " With reference to Human Capital and Human Development, consider the following statements: 1.  Human capital is a tangible wealth. 2.  Human capital includes assets like education, health, and other things employers' value such as loyalty and punctuality. 3.  Seventh Five Year Plan specially focused on Human Development.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBIdW1hbiBjYXBpdGFsIGlzICBhbiBpbnRhbmdpYmxlIGFzc2V0IG9yIHF1YWxpdHkgbm90IGxpc3RlZCBvbiAgYSBjb21wYW55J3MgYmFsYW5jZSBzaGVldC4gSXQgY2FuIGJlICBjbGFzc2lmaWVkIGFzIHRoZSBlY29ub21pYyB2YWx1ZSBvZiBhIHdvcmtlcidzICBleHBlcmllbmNlIGFuZCBza2lsbHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhpcyBpbmNsdWRlcyAgYXNzZXRzIGxpa2UgZWR1Y2F0aW9uLCB0cmFpbmluZywgaW50ZWxsaWdlbmNlLCAgc2tpbGxzLCBoZWFsdGgsIGFuZCBvdGhlciB0aGluZ3MgZW1wbG95ZXJzICB2YWx1ZSBzdWNoIGFzIGxveWFsdHkgYW5kIHB1bmN0dWFsaXR5LiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogV2hlcmVhcyBodW1hbiAgZGV2ZWxvcG1lbnQgY29uc2lkZXJzIGh1bWFuIGJlaW5ncyBhcyAgZW5kcyBpbiB0aGVtc2VsdmVzIGFuZCB0aHVzIGVkdWNhdGlvbiwgIGhlYWx0aCBldGMuIGFzIHRoZWlyIHJpZ2h0cy4gSXQgaXMgZnJvbSB0aGUgN3RoICBGaXZlIFllYXIgUGxhbiBvbndhcmQgdGhhdCB3ZSBiZWdhbiB0byAgZm9jdXMgb24gSHVtYW4gRGV2ZWxvcG1lbnQuIFRvIHF1b3RlIHRoZSAgUGxhbiBkb2N1bWVudCwgJ0h1bWFuIHJlc291cmNlcyAgZGV2ZWxvcG1lbnQgaGFzIG5lY2Vzc2FyaWx5IHRvIGJlIGFzc2lnbmVkICBhIGtleSByb2xlIGluIGFueSBkZXZlbG9wbWVudCBzdHJhdGVneSwgIHBhcnRpY3VsYXJseSBpbiBhIGNvdW50cnkgd2l0aCBhIGxhcmdlICBwb3B1bGF0aW9uLiBUcmFpbmVkIGFuZCBlZHVjYXRlZCBvbiBzb3VuZCAgbGluZXMsIGEgbGFyZ2UgcG9wdWxhdGlvbiBjYW4gaXRzZWxmIGJlY29tZSBhbiAgYXNzZXQgaW4gYWNjZWxlcmF0aW5nIGVjb25vbWljICBncm93dGggYW5kIGVuc3VyaW5nIGEgc29jaWFsIGNoYW5nZSBpbiAgZGVzaXJlZCBkaXJlY3Rpb25zJyAgU291cmNlOiBOQ0VSVCwgQ2xhc3MgWEksIEluZGlhbiBFY29ub21pYyAgRGV2ZWxvcG1lbnQsIENoYXB0ZXIgMDUsIFBhZ2UgOTAuICBIdW1hbiBDYXBpdGFsIERlZmluaXRpb24gIChpbnZlc3RvcGVkaWEuY29tKSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 and 3 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 11,
      "question" : " Consider the following statements regarding the Livestock Census:  1.  It is conducted in the country quinquennially. 2. It aims to count all animals in India.  3.  It is conducted by the Union Ministry of Statistics and Program Implementation. 4.  The 20th Livestock Census captured Breed-wise number of animals and poultry bird. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogTGl2ZXN0b2NrIENlbnN1cyAgc3RhcnRlZCBpbiAxOTE5LiBJdCBpcyBiZWluZyBjb25kdWN0ZWQgb25jZSAgaW4gNSB5ZWFycyAocXVpbnF1ZW5uaWFsbHkpLiBTbyBmYXIsIDIwICBsaXZlc3RvY2sgY2Vuc3VzZXMgaGF2ZSBiZWVuIGNvbmR1Y3RlZC4gICBMaXZlc3RvY2sgQ2Vuc3VzIGlzIGEgY29tcGxldGUgY291bnQgb2YgIHRoZSBsaXZlc3RvY2sgYW5kIHBvdWx0cnkgYXQgYSBwcmUtZGVmaW5lZCAgcmVmZXJlbmNlIHBvaW50IG9mIHRpbWUuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgY2Vuc3VzICB1c3VhbGx5IGNvdmVycyBhbGwgZG9tZXN0aWNhdGVkIGFuaW1hbHMgIChub3Qgd2lsZCBhbmltYWxzKSBhbmQgaGVhZGNvdW50cyBvZiAgdGhlc2UgYW5pbWFscyBhcmUgdGFrZW4uICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBJdCBpcyBjb25kdWN0ZWQgIGJ5IHRoZSBNaW5pc3RyeSBvZiBGaXNoZXJpZXMsIEFuaW1hbCAgSHVzYmFuZHJ5ICYgRGFpcnlpbmcgaW4gcGFydGljaXBhdGlvbiB3aXRoICBhbGwgU3RhdGUgR292ZXJubWVudHMgYW5kIFVUICBBZG1pbmlzdHJhdGlvbnMuICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgMjB0aCBMaXZlc3RvY2sgIENlbnN1cyB3YXMgbGF1bmNoZWQgaW4gMjAxOCBhbmQgIGltcG9ydGFudCBmZWF0dXJlIG9mIHRoZSAyMHRoIExpdmVzdG9jayAgQ2Vuc3VzIGlzIGl0IGhhcyBiZWVuIGRlc2lnbmVkIHRvIGNhcHR1cmUgIGEgQnJlZWQgd2lzZSBudW1iZXIgb2YgYW5pbWFscyBhbmQgIHBvdWx0cnkgYmlyZC4gIFNvdXJjZTogIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLiBhc3B4P1BSSUQ9MTgxMzgwMiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 4 only  ",
        "option3" : "  3 and 4 only  ",
        "option4" : "  1, 2, 3 an 4   "
      }
    },
    {
      "index" : 12,
      "question" : " Which of the following taxes are subsumed under GST in India? 1.  Purchase Tax 2.  Luxury Tax 3.  Excise duty on alcoholic liquor for human consumption KSG: MEMBER'S COPY  4.  Entertainment Tax and Amusement Tax levied by the local bodies 5.  Taxes on advertisements 6.  Taxes on lotteries, betting and gambling Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0LiAgU3RhdGUgdGF4ZXMgdGhhdCB3b3VsZCBiZSBzdWJzdW1lZCB3aXRoaW4gIEdTVCBhcmUgYXMgZm9sbG93czogICAxLiBTdGF0ZSBWQVQgIDIuIENlbnRyYWwgU2F0ZXMgVGF4ICAzLiBQdXJjaGFzZSBUYXggIDQuIEx1eHVyeSBUYXggIDUuIEVudHJ5IFRheCAoQWxsIGZvcm1zKSAgNi4gRW50ZXJ0YWlubWVudCBUYXggYW5kIEFtdXNlbWVudCBUYXggIChleGNlcHQgdGhvc2UgbGV2aWVkIGJ5IHRoZSBsb2NhbCBib2RpZXMpICA3LiBUYXhlcyBvbiBhZHZlcnRpc2VtZW50cyAgOC4gVGF4ZXMgb24gbG90dGVyaWVzLCBiZXR0aW5nIGFuZCBnYW1ibGluZyAgOS4gU3RhdGUgY2Vzc2VzIGFuZCBzdXJjaGFyZ2VzIGluIHNvIGZhciBhcyAgdGhleSByZWxhdGUgdG8gc3VwcGx5IG9mIGdvb2RzIGFuZCBzZXJ2aWNlcy4gIEdTVCB3b3VsZCBub3QgYXBwbHkgb24gQWxjb2hvbCBmb3IgaHVtYW4gIGNvbnN1bXB0aW9uLiAgR1NUIGlzIGFsc28gbm90IGFwcGxpY2FibGUgb24gRW50ZXJ0YWlubWVudCAgVGF4IGFuZCBBbXVzZW1lbnQgVGF4IGxldmllZCBieSB0aGUgbG9jYWwgIGJvZGllcy4gIFNvdXJjZTogaHR0cHM6Ly9nc3Rjb3VuY2lsLmdvdi5pbi9icmllZi0gaGlzdG9yeS1nc3QgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 2, 3 and 4 only ",
        "option2" : "  2, 3, 4 and 5 only ",
        "option3" : "  1, 2, 5 and 6 only ",
        "option4" : "  1, 3, 4, 5 and 6 only  "
      }
    },
    {
      "index" : 13,
      "question" : " Which of the following statement is correct with reference to disguised unemployment? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogIERpc2d1aXNlZCB1bmVtcGxveW1lbnQsIGFsc28ga25vd24gYXMgIGhpZGRlbiB1bmVtcGxveW1lbnQsIHJlZmVycyB0byBhIHNpdHVhdGlvbiAgd2hlcmUgbGFib3VyIHRoYXQgaXMgZW1wbG95ZWQgaW4gYSBqb2IgaXMgbm90ICBhY3R1YWxseSB1dGlsaXNlZCBmb3IgdGhlIHByb2R1Y3Rpb24gb2YgZ29vZHMgIGFuZCBzZXJ2aWNlcy4gSW4gb3RoZXIgd29yZHMsIHN1Y2ggIGVtcGxveW1lbnQgZG9lcyBub3QgY29udHJpYnV0ZSB0byB0aGUgIHd3IHcuIHVwIHNjIG1hIHRlciBpYWwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDIgMiAgb3V0cHV0IG9mIGFuIGVjb25vbXkgYW5kIGlzIHRodXMgYWtpbiB0byBhICBmb3JtIG9mIHVuZW1wbG95bWVudC4gICBUaGUgbWFyZ2luYWwgcHJvZHVjdGl2aXR5IG9mIGxhYm91ciBpbiAgY2FzZSBvZiBkaXNndWlzZWQgdW5lbXBsb3ltZW50IGlzIHplcm8uICBBIHdvcmtlciB3aG8gaGFzIHJlY2VudGx5IHF1aXQgY3VycmVudCBqb2IgIGFuZCBpcyBsb29raW5nIGZvciBhIG5ldyBqb2IgaXMgYW4gZXhhbXBsZSBvZiAgZnJpY3Rpb25hbCB1bmVtcGxveW1lbnQuICBVbmVtcGxveW1lbnQgY2F1c2VkIHdoZW4gd29ya2VycyBhcmUgIGF2YWlsYWJsZSBidXQgYXJlIHVuYWJsZSB0byByZWFjaCB0aGUgIGdlb2dyYXBoaWNhbCBsb2NhdGlvbiBvZiB0aGUgam9icyBpcyAgc3RydWN0dXJhbCB1bmVtcGxveW1lbnQuICBWb2x1bnRhcnkgdW5lbXBsb3ltZW50IGhhcHBlbnMgd2hlbiBhICB3b3JrZXIgZGVjaWRlcyB0byBsZWF2ZSBhIGpvYiBiZWNhdXNlIGl0IGlzIG5vICBsb25nZXIgZmluYW5jaWFsbHkgY29tcGVsbGluZy4gICBTb3VyY2U6ICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vb3Bpbmlvbi9vcC0gZWQvd2hhdC1pcy1kaXNndWlzZWQtdW5lbXBsb3ltZW50LWluLSBlY29ub21pY3MvYXJ0aWNsZTI1NDc4MzQxLmVjZSAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Its example includes a worker who  has recently quit current job and  is looking for a new job. ",
        "option2" : "  The marginal productivity of  labour in case of disguised  unemployment is zero. ",
        "option3" : "  Unemployment caused when  workers are available but are  unable to reach the geographical  location of the jobs. ",
        "option4" : "  It happens when a worker decides  to leave a job because it is no  longer financially compelling.   "
      }
    },
    {
      "index" : 14,
      "question" : " Which of the following programs are part of the poverty alleviation programme in India? 1.  Integrated Rural Development Programme 2.  Pradhan Mantri Awas Yojna 3.  Annapurna Scheme 4.  Pradhan Mantri Kaushal Vikas Yojna 5.  National Urban Livelihood Mission Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiAgU29tZSBvZiB0aGUgUG92ZXJ0eSBBbGxldmlhdGlvbiBQcm9ncmFtcyBvZiAgSW5kaWEgYXJlOiAg4pePIEludGVncmF0ZWQgUnVyYWwgRGV2ZWxvcG1lbnQgIFByb2dyYW1tZSAoSVJEUCkgIOKXjyBQcmFkaGFuIE1hbnRyaSBBd2FhcyBZb2phbmEgIOKXjyBOYXRpb25hbCBPbGQgQWdlIFBlbnNpb24gU2NoZW1lICDil48gQW5uYXB1cm5hIFNjaGVtZSAg4pePIE1haGF0bWEgR2FuZGhpIE5hdGlvbmFsIFJ1cmFsICBFbXBsb3ltZW50IEd1YXJhbnRlZSBBY3QgKE1HTlJFR0EpICAyMDA1ICDil48gRGVlbmRheWFsIEFudHlvZGF5YSBZb2phbmEgLSBOYXRpb25hbCAgUnVyYWwgTGl2ZWxpaG9vZCBNaXNzaW9uIChEQVktTlJMTSkgIOKXjyBOYXRpb25hbCBVcmJhbiBMaXZlbGlob29kIE1pc3Npb24gIOKXjyBQcmFkaGFuIE1hbnRyaSBLYXVzaGFsIFZpa2FzIFlvamFuYSAg4pePIFByYWRoYW4gTWFudHJpIEphbiBEaGFuIFlvamFuYSAgRXh0cmVtZSBwb3ZlcnR5IGluIEluZGlhIGhhcyBkZWNsaW5lZCBieSAgb3ZlciAxMiBwZXJjZW50YWdlIHBvaW50cyBkdXJpbmcgMjAxMS0gMjAxOSwgYSBXb3JsZCBCYW5rIHdvcmtpbmcgcGFwZXIgaGFzICBzYWlkLiBUaGlzIGlzIHRoZSBzZWNvbmQgd29ya2luZyBwYXBlciBhZnRlciAgYSByZWNlbnQgSW50ZXJuYXRpb25hbCBNb25ldGFyeSBGdW5kIHBhcGVyICB0aGF0IHRhbGtlZCBhYm91dCBwb3ZlcnR5IHJlZHVjdGlvbi4gIEhvd2V2ZXIsIHdoaWxlIHRoZSBmb3JtZXIgZGVhbHQgd2l0aCB0aGUgIHBlcmlvZCBiZWZvcmUgQ292aWQsIHRoZSBsYXR0ZXIgZm9jdXNlcyBvbiB0aGUgIHBlcmlvZCBkdXJpbmcgdGhlIHBhbmRlbWljLiAgU291cmNlOiAgaHR0cHM6Ly93d3cudGhlaGluZHVidXNpbmVzc2xpbmUuY29tL2VjIG9ub215L2V4dHJlbWUtcG92ZXJ0eS1pbi1pbmRpYS1kb3duLWJ5LSAxMjMtd29ybGQtYmFuay1wYXBlci9hcnRpY2xlNjUzMjg5MTAuZWNlICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 2 and 5 only   ",
        "option2" : "  1, 2 and 4 only ",
        "option3" : "  3, 4 and 5 only ",
        "option4" : "  1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 15,
      "question" : " Consider the following statements:  1.  Deficit budget enables the government to spend on public welfare. 2.  Balanced budget limits the scope of economic growth. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIEEgZ292ZXJubWVudCBidWRnZXQgaXMgc2FpZCB0byBiZSBhIGRlZmljaXQgIGJ1ZGdldCBpZiB0aGUgZXN0aW1hdGVkIGdvdmVybm1lbnQgIGV4cGVuZGl0dXJlIGV4Y2VlZHMgdGhlIGV4cGVjdGVkICBnb3Zlcm5tZW50IHJldmVudWUgaW4gYSBwYXJ0aWN1bGFyIGZpbmFuY2lhbCAgeWVhci4gVGhpcyB0eXBlIG9mIGJ1ZGdldCBpcyBiZXN0IHN1aXRlZCBmb3IgIGRldmVsb3BpbmcgZWNvbm9taWVzLCBzdWNoIGFzIEluZGlhLiAgTWVyaXRzIG9mIGEgZGVmaWNpdCBidWRnZXQ6ICDvgrcgSGVscHMgaW4gYWRkcmVzc2luZyBwdWJsaWMgY29uY2VybnMgIHN1Y2ggYXMgdW5lbXBsb3ltZW50IGF0IHRpbWVzIG9mICBlY29ub21pYyByZWNlc3Npb24uICDvgrcgRW5hYmxlcyB0aGUgZ292ZXJubWVudCB0byBzcGVuZCBvbiAgcHVibGljIHdlbGZhcmUuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgQSBnb3Zlcm5tZW50IGJ1ZGdldCBpcyBzYWlkIHRvIGJlIGEgIGJhbGFuY2VkIGJ1ZGdldCBpZiB0aGUgZXN0aW1hdGVkICBnb3Zlcm5tZW50IGV4cGVuZGl0dXJlIGlzIGVxdWFsIHRvIGV4cGVjdGVkICBnb3Zlcm5tZW50IHJlY2VpcHRzIGluIGEgcGFydGljdWxhciBmaW5hbmNpYWwgIHllYXIuICBEZW1lcml0cyBvZiBhIGJhbGFuY2VkIGJ1ZGdldDogIOKXjyBVbnZpYWJsZSBhdCB0aW1lcyBvZiByZWNlc3Npb24gYW5kIGRvZXMgIG5vdCBvZmZlciBhbnkgc29sdXRpb24gdG8gcHJvYmxlbXMgc3VjaCBhcyAgdW5lbXBsb3ltZW50LiAg4pePIEluYXBwbGljYWJsZSBpbiBsZXNzIGRldmVsb3BlZCBjb3VudHJpZXMgIGFzIGl0IGxpbWl0cyB0aGUgc2NvcGUgb2YgZWNvbm9taWMgIGdyb3d0aC4gIOKXjyBSZXN0cmljdHMgdGhlIGdvdmVybm1lbnQgZnJvbSBzcGVuZGluZyAgb24gcHVibGljIHdlbGZhcmUuICBTb3VyY2U6IFR5cGVzIG9mIGdvdmVybm1lbnQgYnVkZ2V0OiBXaGF0ICBhcmUgdGhlIHRocmVlIHR5cGVzIG9mIGdvdmVybm1lbnQgYnVkZ2V0cz8gIChpbmRpYXRpbWVzLmNvbSkgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 16,
      "question" : " Which of the following are examples of Capital Goods? 1.  Iron ore 2.  Electric arc Furnaces 3.  Truck Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChiKSBpcyBjb3JyZWN0OiAgQ2FwaXRhbCBnb29kcyBhcmUgb2YgZHVyYWJsZSBjaGFyYWN0ZXIgIHdoaWNoIGFyZSB1c2VkIGluIHRoZSBwcm9kdWN0aW9uIHByb2Nlc3MuICBXaGlsZSB0aGV5IG1ha2UgcHJvZHVjdGlvbiBvZiBvdGhlciAgY29tbW9kaXRpZXMgZmVhc2libGUsIHRoZXkgdGhlbXNlbHZlcyAgZG9uJ3QgZ2V0IHRyYW5zZm9ybWVkIGluIHRoZSBwcm9kdWN0aW9uICBwcm9jZXNzLiAgQ2FwaXRhbCBnb29kcyBpbmNsdWRlIGJ1aWxkaW5ncywgbWFjaGluZXJ5LCAgZXF1aXBtZW50IChsaWtlIEVsZWN0cmljIEFyYyBGdXJuYWNlcyksICB2ZWhpY2xlcyAobGlrZSB0cnVjayksIGFuZCB0b29scy4gQ2FwaXRhbCBnb29kcyAgYXJlIG5vdCBmaW5pc2hlZCBnb29kcywgaW5zdGVhZCwgdGhleSBhcmUgIHVzZWQgdG8gbWFrZSBmaW5pc2hlZCBnb29kcy4gIElyb24gb3JlIGl0c2VsZiBnZXQgdHJhbnNmb3JtZWQgaW4gdGhlIHByb2Nlc3MuICBJdCBpcyBub3QgYSBDYXBpdGFsIEdvb2QuICB3dyB3LiB1cCBzYyBtIHRlciBpYWwgLm9uIGwgbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDIgMyAgU291cmNlOmh0dHBzOi8vd3d3LmludmVzdG9wZWRpYS5jb20gZXIgbXMvYy9jYXBpdGFsZ29vZHMuYXNwICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 17,
      "question" : " Consider the following statements regarding Stock and Flow variables:                 1.  A flow variable shows change during a period of time whereas a stock indicates the quantity of a variable at a point of time. 2.  Wealth is a stock, but income is a flow. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cGxhbmF0aW9uOiAgQSBmbG93IGlzIGEgcXVhbnRpdHkgd2hpY2ggaXMgbWVhc3VyZWQgd2l0aCAgcmVmZXJlbmNlIHRvIGEgcGVyaW9kIG9mIHRpbWUuIFRodXMsIGZsb3dzIGFyZSAgZGVmaW5lZCB3aXRoIHJlZmVyZW5jZSB0byBhIHNwZWNpZmljIHBlcmlvZCAgKGxlbmd0aCBvZiB0aW1lKSwgZS5nLiwgaG91cnMsIGRheXMsIHdlZWtzLCAgbW9udGhzIG9yIHllYXJzLiBJdCBoYXMgdGltZSBkaW1lbnNpb24uICAg74K3IE5hdGlvbmFsIGluY29tZSBpcyBhIGZsb3cuICBBIHN0b2NrIGlzIGEgcXVhbnRpdHkgd2hpY2ggaXMgbWVhc3VyYWJsZSBhdCAgYSBwYXJ0aWN1bGFyIHBvaW50IG9mIHRpbWUsIGUuZy4sIDQgcC5tLiwgMXN0ICBKYW51YXJ5LCBNb25kYXksIDIwMTAsIGV0Yy4gICDvgrcgQ2FwaXRhbCBpcyBhIHN0b2NrIHZhcmlhYmxlLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBhbmQgc3RhdGVtZW50IDIgaXMgIGNvcnJlY3Q6ICBBIGZsb3cgc2hvd3MgY2hhbmdlIGR1cmluZyBhIHBlcmlvZCBvZiAgdGltZSB3aGVyZWFzIGEgc3RvY2sgaW5kaWNhdGVzIHRoZSBxdWFudGl0eSAgb2YgYSB2YXJpYWJsZSBhdCBhIHBvaW50IG9mIHRpbWUuIFRodXMsICB3ZWFsdGggaXMgYSBzdG9jayBzaW5jZSBpdCBjYW4gYmUgbWVhc3VyZWQgIGF0IGEgcG9pbnQgb2YgdGltZSwgYnV0IGluY29tZSBpcyBhIGZsb3cgIGJlY2F1c2UgaXQgY2FuIGJlIG1lYXN1cmVkIG92ZXIgYSBwZXJpb2Qgb2YgIHRpbWUuICBTb3VyY2U6IE5DRVJULCBJbnRyb2R1Y3RvcnkgIG1hY3JvZWNvbm9taWNzLCBjbGFzcyBYSUksIGNoYXB0ZXIgMDIsIFBhZ2UgIDExLTEyLiAgRGlmZmVyZW5jZSBiZXR3ZWVuIEZsb3cgVmFyaWFibGVzIGFuZCBTdG9jayAgVmFyaWFibGVzIChlY29ub21pY3NkaXNjdXNzaW9uLm5ldCkgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 18,
      "question" : " Consider the following statements: 1.  GDP is the market value of all final goods and services produced within a domestic territory of a country measured in a year. 2.  In times of high inflation, nominal GDP will be lower than the Real GDP. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIEdyb3NzIERvbWVzdGljIFByb2R1Y3QgKEdEUCkgaXMgdGhlIGZpbmFsICBtb25ldGFyeSB2YWx1ZSBvZiB0aGUgZ29vZHMgYW5kIHNlcnZpY2VzICBwcm9kdWNlZCB3aXRoaW4gdGhlIGNvdW50cnkgZHVyaW5nIGEgIHNwZWNpZmllZCBwZXJpb2Qgb2YgdGltZSwgbm9ybWFsbHkgYSB5ZWFyLiBJbiAgc2ltcGxlIHRlcm1zLCBHRFAgaXMgdGhlIG1lYXN1cmUgb2YgdGhlICBjb3VudHJ5J3MgZWNvbm9taWMgb3V0cHV0IGluIGEgeWVhci4gSW4gIEluZGlhLCBjb250cmlidXRpb25zIHRvIEdEUCBhcmUgbWFpbmx5ICBkaXZpZGVkIGludG8gdGhyZWUgYnJvYWQgc2VjdG9ycyAtICBhZ3JpY3VsdHVyZSwgaW5kdXN0cnksIGFuZCBzZXJ2aWNlcy4gR0RQIGlzICBtZWFzdXJlZCBvdmVyIG1hcmtldCBwcmljZXMgYW5kIHRoZXJlIGlzIGEgIGJhc2UgeWVhciBmb3IgdGhlIGNvbXB1dGF0aW9uLiBUaGUgR0RQICBncm93dGggcmF0ZSBtZWFzdXJlcyBob3cgZmFzdCB0aGUgZWNvbm9teSAgaXMgZ3Jvd2luZy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogIE5vbWluYWwgR0RQIGRpZmZlcnMgZnJvbSByZWFsIEdEUCBhcyB0aGUgIGZvcm1lciBkb2Vzbid0IGluY2x1ZGUgaW5mbGF0aW9uLCB3aGlsZSB0aGUgIGxhdHRlciBkb2VzLiBBcyBhIHJlc3VsdCwgbm9taW5hbCBHRFAgd2lsbCAgbW9zdCBvZnRlbiBiZSBoaWdoZXIgdGhhbiByZWFsIEdEUCBpbiBhbiAgZXhwYW5kaW5nIGVjb25vbXkgd2l0aCBoaWdoIGluZmxhdGlvbi4gIFNvdXJjZTogTkNFUlQsIEludHJvZHVjdG9yeSAgbWFjcm9lY29ub21pY3MsIGNsYXNzIFhJSSwgY2hhcHRlciAwMiwgUGFnZSAgMjctMjguICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vZGVmaSBuaXRpb24vZ3Jvc3MtZG9tZXN0aWMtcHJvZHVjdCAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL2J1c2luZXNzL0Vjb24gb215L3doYXQtaXMtdGhlLWdkcC0gZGVmbGF0b3IvYXJ0aWNsZTI0NDg5Mjc5LmVjZSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 19,
      "question" : " Consider the following statements with reference to Consumer Price Index (CPI): KSG: MEMBER'S COPY  1.  It measures changes over time in the general level of prices of goods and services consumed by households. 2.  It is seen as a more comprehensive measure of inflation than the GDP deflator. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIEEgY29uc3VtZXIgcHJpY2UgaW5kZXggKENQSSkgbWVhc3VyZXMgIGNoYW5nZXMgb3ZlciB0aW1lIGluIHRoZSBnZW5lcmFsIGxldmVsIG9mICBwcmljZXMgb2YgZ29vZHMgYW5kIHNlcnZpY2VzIHRoYXQgaG91c2Vob2xkcyAgYWNxdWlyZSBmb3IgdGhlIHB1cnBvc2Ugb2YgY29uc3VtcHRpb24uICBIb3dldmVyLCBzaW5jZSBDUEkgaXMgYmFzZWQgb25seSBhIGJhc2tldCBvZiAgc2VsZWN0IGdvb2RzIGFuZCBpcyBjYWxjdWxhdGVkIG9uIHByaWNlcyAgaW5jbHVkZWQgaW4gaXQsIGl0IGRvZXMgbm90IGNhcHR1cmUgaW5mbGF0aW9uICBhY3Jvc3MgdGhlIGVjb25vbXkgYXMgYSB3aG9sZS4gIFRoZSB3aG9sZXNhbGUgcHJpY2UgaW5kZXggYmFza2V0IGhhcyBubyAgcmVwcmVzZW50YXRpb24gb2YgdGhlIHNlcnZpY2VzIHNlY3RvciBhbmQgYWxsICB0aGUgY29uc3RpdHVlbnRzIGFyZSBvbmx5IGdvb2RzIHdob3NlIHByaWNlcyAgYXJlIGNhcHR1cmVkIGF0IHRoZSB3aG9sZXNhbGUvcHJvZHVjZXIgIGxldmVsLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiAgR0RQIGRlZmxhdG9yIGNvdmVycyB0aGUgZW50aXJlIHJhbmdlIG9mIGdvb2RzICBhbmQgc2VydmljZXMgcHJvZHVjZWQgaW4gdGhlIGVjb25vbXkgLSBhcyAgYWdhaW5zdCB0aGUgbGltaXRlZCBjb21tb2RpdHkgYmFza2V0cyBmb3IgIHRoZSB3aG9sZXNhbGUgb3IgY29uc3VtZXIgcHJpY2UgaW5kaWNlcyAtIGl0ICBpcyBzZWVuIGFzIGEgbW9yZSBjb21wcmVoZW5zaXZlIG1lYXN1cmUgb2YgIGluZmxhdGlvbi4gIEdEUCBkZWZsYXRvciBpcyBhdmFpbGFibGUgb25seSBvbiBhIHF1YXJ0ZXJseSAgYmFzaXMgYWxvbmcgd2l0aCBHRFAgZXN0aW1hdGVzLCB3aGVyZWFzICBDUEkgYW5kIFdQSSBkYXRhIGFyZSByZWxlYXNlZCBldmVyeSBtb250aC4gIFNvdXJjZTogTkNFUlQsIEludHJvZHVjdG9yeSAgbWFjcm9lY29ub21pY3MsIGNsYXNzIFhJSSwgY2hhcHRlciAwMiwgUGFnZSAgMjktMzAuICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vYnVzaW5lc3MvRWNvbiBvbXkvd2hhdC1pcy10aGUtZ2RwLSBkZWZsYXRvci9hcnRpY2xlMjQ0ODkyNzkuZWNlICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 20,
      "question" : " Consider the following statements regarding Fast Radio Bursts (FRB): 1.  FRB is being used as astrophysical clock for studying the nature of intergalactic space. 2.  They generate as much energy in a thousandth of a second as the Sun does in an entire year.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cGxhbmF0aW9uOiAgRmFzdCByYWRpbyBidXJzdHMgYXJlIGJyaWdodCBmbGFzaGVzIG9mIGxpZ2h0ICB0aGF0IGFwcGVhciBmb3IgYSBmZXcgbWlsbGlzZWNvbmRzIGFuZCB0aGVuICB2YW5pc2guIFRoZSBmaXJzdCBGUkIgd2FzIGRpc2NvdmVyZWQgIGluIDIwMDcuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgdGVhbSBob3BlcyAgdG8gZGV0ZWN0IG1vcmUgcGVyaW9kaWMgc2lnbmFscyBmcm9tIHRoaXMgIHNvdXJjZSwgd2hpY2ggY291bGQgdGhlbiBiZSB1c2VkIGFzIGFuICB3dyB3LiB1cCBzYyBtYSB0ZXIgaWFsIC5vbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAyIDQgIGFzdHJvcGh5c2ljYWwgY2xvY2suIEZvciBpbnN0YW5jZSwgdGhlICBmcmVxdWVuY3kgb2YgdGhlIGJ1cnN0cywgYW5kIGhvdyB0aGV5ICBjaGFuZ2UgYXMgdGhlIHNvdXJjZSBtb3ZlcyBhd2F5IGZyb20gIEVhcnRoLCBjb3VsZCBiZSB1c2VkIHRvIG1lYXN1cmUgdGhlIHJhdGUgYXQgIHdoaWNoIHRoZSB1bml2ZXJzZSBpcyBleHBhbmRpbmcuICBUaGUgbmV3IHN0dWR5IGluIE5hdHVyZSBkZXNjcmliZXMgRlJCICAyMDE5MDUyMEIsIGZpcnN0IGRpc2NvdmVyZWQgaW4gMjAxOS4gV2hhdCAgbWFrZXMgaXQgZGlmZmVyZW50IGlzIHRoYXQgdW5saWtlIG1hbnkgb3RoZXIgIEZSQnMsIGl0IGVtaXRzIGZyZXF1ZW50LCByZXBlYXRpbmcgYnVyc3RzIG9mICByYWRpbyB3YXZlcy4gQW5kIGJldHdlZW4gYnVyc3RzLCBpdCAgY29uc3RhbnRseSBlbWl0cyB3ZWFrZXIgcmFkaW8gd2F2ZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRmFzdCByYWRpbyBidXJzdHMsICBvciBGUkJzLCBhcmUgZXh0cmFvcmRpbmFyeSBldmVudHMgdGhhdCAgZ2VuZXJhdGUgYXMgbXVjaCBlbmVyZ3kgaW4gYSB0aG91c2FuZHRoICBvZiBhIHNlY29uZCBhcyB0aGUgU3VuIGRvZXMgaW4gYW4gZW50aXJlICB5ZWFyISBBc3Ryb25vbWVycyB1c2luZyBOQVNBJ3MgSHViYmxlICBTcGFjZSBUZWxlc2NvcGUgaGF2ZSB0cmFjZWQgdGhlIGxvY2F0aW9ucyBvZiAgZml2ZSBicmllZiwgcG93ZXJmdWwgRlJCcywgd2hpY2ggYXJlIG5lYXIgb3IgIG9uIHRoZWlyIGhvc3QgZ2FsYXhpZXMnIHNwaXJhbCBhcm1zLiBUaGUgIHJlc2VhcmNoIGhlbHBlZCBydWxlIG91dCBzb21lIG9mIHRoZSAgcG9zc2libGUgc3RlbGxhciBvYmplY3RzIG9yaWdpbmFsbHkgdGhvdWdodCB0byAgY2F1c2UgdGhlc2UgYnJpbGxpYW50IGZsYXJlcy4gIFNvdXJjZTogSHViYmxlIFRyYWNrcyBEb3duIEZhc3QgUmFkaW8gIEJ1cnN0cyB0byBHYWxheGllcycgU3BpcmFsIEFybXMgfCBOQVNBICBXaGF0IGlzIGZhc3QgcmFkaW8gYnVyc3Q/ICAoaW5kaWFuZXhwcmVzcy5jb20pICBodHRwczovL25ld3MubWl0LmVkdS8yMDIyL2FzdHJvbm9tZXJzLSBkZXRlY3QtcmFkaW8taGVhcnRiZWF0LWJpbGxpb25zLWxpZ2h0LXllYXJzLSBlYXJ0aC0wNzEzICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 21,
      "question" : " Consider the following statements regarding Accredited Social Health Activist Workers (ASHA): 1.  They function as a bridge between the community and the public health system. 2.  Both National Urban and Rural Health Missions have provision for ASHA. 3.  They have recently won the WHO's 2022 Global Leaders Award. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQWNjcmVkaXRlZCBTb2NpYWwgIEhlYWx0aCBBY3RpdmlzdCBXb3JrZXJzLCBvciBBU0hBIHdvcmtlcnMsICBhcmUgZmVtYWxlIGNvbW11bml0eSBoZWFsdGggd29ya2VycyAgdHJhaW5lZCB0byBmdW5jdGlvbiBhcyBhIGJyaWRnZSBiZXR3ZWVuICB0aGUgY29tbXVuaXR5IGFuZCB0aGUgcHVibGljIGhlYWx0aCAgc3lzdGVtLiBBU0hBIHdvcmtlcnMgYXJlIGNob3NlbiB0aHJvdWdoICBhIHByb2Nlc3MgdGhhdCBpbnZvbHZlcyBjb21tdW5pdHkgZ3JvdXBzLCAgc2VsZi1oZWxwIGdyb3VwcywgQW5nYW53YWRpIEluc3RpdHV0aW9ucywgIGJsb2NrIG5vZGFsIG9mZmljZXIsIGRpc3RyaWN0IG5vZGFsIG9mZmljZXIsIHRoZSAgdmlsbGFnZSBoZWFsdGggY29tbWl0dGVlIGFuZCB0aGUgZ2VuZXJhbCAgYm9keSBvZiB0aGUgdmlsbGFnZS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFTSEEgd29ya2VycyB3ZXJlICBpbnN0aXR1dGVkIGFzIGNvbW11bml0eS1iYXNlZCBoZWFsdGggIGZ1bmN0aW9uYXJpZXMgdW5kZXIgdGhlIE5hdGlvbmFsIFJ1cmFsICBIZWFsdGggTWlzc2lvbiAoTlJITSkgbGF1bmNoZWQgaW4gMjAwNS4gIFRoZSB1cmJhbiBBU0hBIHdpbGwgd29yayBvbiB0aGUgcGF0dGVybiBvZiAgcnVyYWwgQVNIQSBhbmQgc2VydmUgYXMgdGhlIGxpbmsgYmV0d2VlbiAgdXJiYW4gcG9vciBhbmQgaGVhbHRoIHNlcnZpY2VzLiAgV29tZW4gc2VsZWN0ZWQgdG8gYmUgQVNIQSB3b3JrZXJzICB1bmRlcmdvIGEgc2VyaWVzIG9mIHRyYWluaW5nIHByb2dyYW1tZXMgIHRoYXQgZW5hYmxlcyB0aGVtIHRvIGZ1bGZpbCB0aGVpciByb2xlcyBhcyB0aGUgIGxlYWRlciBvZiBjb21tdW5pdHkgcGFydGljaXBhdGlvbiBpbiAgY29tbXVuaXR5IGhlYWx0aCBwcm9ncmFtbWVzIGF0IHZpbGxhZ2UgIGxldmVsLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhleSBoYXZlICByZWNlbnRseSB3b24gdGhlIFdITydzIDIwMjIgR2xvYmFsICBMZWFkZXJzIEF3YXJkLiBUaGUgaG9ub3VyIHJlY29nbmlzZXMgIGNvbnRyaWJ1dGlvbnMgdG8gYWR2YW5jaW5nIGdsb2JhbCBoZWFsdGgsICBsZWFkZXJzaGlwLCBhbmQgY29tbWl0bWVudCB0byByZWdpb25hbCAgaGVhbHRoIGlzc3Vlcy4gIFNvdXJjZTogV2F0Y2ggfCBXaG8gYXJlIEluZGlhJ3MgQVNIQSAgd29ya2Vycz8gLSBUaGUgSGluZHUgIEV4cGxhaW5lZCB8IEFsbCBhYm91dCBJbmRpYSdzIEFTSEEgd29ya2VycywgIHJlY2lwaWVudHMgb2YgV0hPJ3MgR2xvYmFsIExlYWRlcnMgQXdhcmQgLSAgVGhlIEhpbmR1ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 22,
      "question" : " Consider the following statements:  1.  Employment elasticity is a measure of change in employment associated with change in economic growth. 2. Higher is the employment elasticity of the growth, more will be the job creation in India. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEVtcGxveW1lbnQgIGVsYXN0aWNpdHkgaXMgYSBtZWFzdXJlIG9mIHRoZSBwZXJjZW50YWdlICBjaGFuZ2UgaW4gZW1wbG95bWVudCBhc3NvY2lhdGVkIHdpdGggYSAgMSBwZXJjZW50YWdlIHBvaW50IGNoYW5nZSBpbiBlY29ub21pYyAgZ3Jvd3RoLiBUaGUgZW1wbG95bWVudCBlbGFzdGljaXR5IGluZGljYXRlcyAgdGhlIGFiaWxpdHkgb2YgYW4gZWNvbm9teSB0byBnZW5lcmF0ZSAgZW1wbG95bWVudCBvcHBvcnR1bml0aWVzIGZvciBpdHMgcG9wdWxhdGlvbiAgYXMgcGVyIGNlbnQgb2YgaXRzIGdyb3d0aCAoZGV2ZWxvcG1lbnQpICBwcm9jZXNzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEhpZ2hlciAgRW1wbG95bWVudCBlbGFzdGljaXR5IG1lYW5zIGEgZ3JlYXRlciAgbnVtYmVyIG9mIGVtcGxveW1lbnQgZ2VuZXJhdGlvbiBieSBzYW1lICBwZXJjZW50YWdlIGluY3JlYXNlIGluIEdEUC4gUmVjZW50bHkgSW5kaWEgIGhhcyBzZWVuIGRlY2xpbmUgaW4gZW1wbG95bWVudCBlbGFzdGljaXR5IG9mICBncm93dGguICBTb3VyY2U6ICBodHRwczovL3d3dy5yYmkub3JnLmluL1NDUklQVFMvUHVibGljYXRpIG9uc1ZpZXcuYXNweD9pZD0xNTc2MyM6fjp0ZXh0PUVtcGxveW1lIG50JTIwZWxhc3RpY2l0eSUyMGlzJTIwYSUyMG1lYXN1cmUsaXRzICUyMGdyb3d0aCUyMChkZXZlbG9wbWVudCklMjBwcm9jZXNzLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 23,
      "question" : " Which among the following indicators are used in measuring National Multidimensional Poverty Index? 1.  Access to Internet  2.  Housing 3.  Child mortality 4.  Bank accounts and assets 5.  Drinking water Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgTmF0aW9uYWwgTXVsdGlkaW1lbnNpb25hbCBQb3ZlcnR5IEluZGV4OiAgQmFzZWxpbmUgUmVwb3J0IGJhc2VkIG9uIE5GSFMtNCAoMjAxNS0xNikgIGhhcyBiZWVuIGRldmVsb3BlZCBieSBOSVRJIEFheW9nIGluICBjb25zdWx0YXRpb24gd2l0aCAxMiBMaW5lIE1pbmlzdHJpZXMgYW5kIGluICBwYXJ0bmVyc2hpcCB3aXRoIFN0YXRlIGdvdmVybm1lbnRzIGFuZCB0aGUgIGluZGV4IHB1Ymxpc2hpbmcgYWdlbmNpZXMgLU94Zm9yZCAgVW5pdmVyc2l0eSdzIE94Zm9yZCBQb3ZlcnR5IGFuZCBIdW1hbiAgRGV2ZWxvcG1lbnQgSW5pdGlhdGl2ZSAoT1BISSkgYW5kIFVuaXRlZCAgTmF0aW9ucyBEZXZlbG9wbWVudCBQcm9ncmFtbWUgKFVORFApLiAgSXQgaXMgYSBjb250cmlidXRpb24gdG93YXJkcyBtZWFzdXJpbmcgIHByb2dyZXNzIHRvd2FyZHMgdGFyZ2V0IDEuMiBvZiB0aGUgIHd3IHcuIHVwIHNjIG0gdGVyIGlhbCAubyBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAyIDUgIFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzIChTREdzKSAgd2hpY2ggYWltcyBhdCByZWR1Y2luZyAnYXQgbGVhc3QgYnkgaGFsZiB0aGUgIHByb3BvcnRpb24gb2YgbWVuLCB3b21lbiBhbmQgY2hpbGRyZW4gb2YgYWxsICBhZ2VzIGxpdmluZyBpbiBwb3ZlcnR5IGluIGFsbCBpdHMgZGltZW5zaW9ucycuICBBY3Jvc3MgdGhyZWUgZGltZW5zaW9ucyBvZiBoZWFsdGgsICBlZHVjYXRpb24gYW5kIHN0YW5kYXJkIG9mIGxpdmluZywgaXQgIGluY2x1ZGVzIGluZGljYXRvcnMgb24gbnV0cml0aW9uLCBjaGlsZCAgYW5kIGFkb2xlc2NlbnQgbW9ydGFsaXR5LCBtYXRlcm5hbCBjYXJlLCAgeWVhcnMgb2Ygc2Nob29saW5nLCBzY2hvb2wgYXR0ZW5kYW5jZSwgIGNvb2tpbmcgZnVlbCwgc2FuaXRhdGlvbiwgZHJpbmtpbmcgd2F0ZXIsICBlbGVjdHJpY2l0eSwgaG91c2luZywgYmFuayBhY2NvdW50cyBhbmQgIGFzc2V0cy4gIEFjY2VzcyB0byBpbnRlcm5ldCBpcyBub3QgaW5jbHVkZWQgYXMgb25lICBvZiB0aGUgcGFyYW1ldGVycy4gIFNvdXJjZTogIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmFzcHg/IFBSSUQ9MTc3NTQ4OSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 and 5 only ",
        "option2" : "  1, 2 and 4 only ",
        "option3" : "  2, 3, 4 and 5 only ",
        "option4" : "  1, 2, 3, 4 and 5  "
      }
    },
    {
      "index" : 24,
      "question" : " Consider the following statements with reference to the Government Borrowings from the people: 1.  It transfers the burden of reduced consumption on future generations. 2.  It increases the savings available to the private sector. 3.  It does not have any effect on capital formation. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICBCeSBib3Jyb3dpbmcsIHRoZSBnb3Zlcm5tZW50IHRyYW5zZmVycyB0aGUgIGJ1cmRlbiBvZiByZWR1Y2VkIGNvbnN1bXB0aW9uIG9uIGZ1dHVyZSAgZ2VuZXJhdGlvbnMuIFRoaXMgaXMgYmVjYXVzZSBpdCBib3Jyb3dzIGJ5ICBpc3N1aW5nIGJvbmRzIHRvIHRoZSBwZW9wbGUgbGl2aW5nIGF0IHByZXNlbnQgIGJ1dCBtYXkgZGVjaWRlIHRvIHBheSBvZmYgdGhlIGJvbmRzIHNvbWUgIHR3ZW50eSB5ZWFycyBsYXRlciBieSByYWlzaW5nIHRheGVzLiBUaGVzZSAgbWF5IGJlIGxldmllZCBvbiB0aGUgeW91bmcgcG9wdWxhdGlvbiB0aGF0ICBoYXMganVzdCBlbnRlcmVkIHRoZSB3b3JrIGZvcmNlLCB3aG9zZSAgZGlzcG9zYWJsZSBpbmNvbWUgd2lsbCBnbyBkb3duIGFuZCBoZW5jZSAgY29uc3VtcHRpb24uICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgYW5kIDMgaXMgIGluY29ycmVjdDogICBHb3Zlcm5tZW50IGJvcnJvd2luZyBmcm9tIHRoZSBwZW9wbGUgIHJlZHVjZXMgdGhlIHNhdmluZ3MgYXZhaWxhYmxlIHRvIHRoZSBwcml2YXRlICBzZWN0b3IuIFRvIHRoZSBleHRlbnQgdGhhdCB0aGlzIHJlZHVjZXMgIGNhcGl0YWwgZm9ybWF0aW9uIGFuZCBncm93dGgsIGRlYnQgYWN0cyBhcyAgYSAnYnVyZGVuJyBvbiBmdXR1cmUgZ2VuZXJhdGlvbnMuICBTb3VyY2U6IE5DRVJUOiBJbnRyb2R1Y3Rpb24gdG8gTWFjcm8gIEVjb25vbWljcywgQ2xhc3MgWElJLCBDaGFwdGVyIDIsIFBhZ2UgTm8uICA3MiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  3 only ",
        "option4" : "  1 an 2 only  "
      }
    },
    {
      "index" : 25,
      "question" : " With reference to Eco-sensitive zone (ESZ), consider the following statements: 1.  ESZ are notified under the Biological Diversity Act, 2002.  2.  It is an eco-fragile zone acting as a 'shock absorber' for the protected areas. 3.  No agricultural or horticultural practices are permitted within this zone. www.upscmateri l.onlineKSG: MEMBER'S COPY  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cGxhbmF0aW9uOiAgQXMgcGVyIHRoZSBOYXRpb25hbCBXaWxkbGlmZSBBY3Rpb24gUGxhbiAgKDIwMDItMjAxNiksIGlzc3VlZCBieSB0aGUgVW5pb24gTWluaXN0cnkgb2YgIEVudmlyb25tZW50LCBGb3Jlc3QgYW5kIENsaW1hdGUgQ2hhbmdlLCAgbGFuZCB3aXRoaW4gMTAga20gb2YgdGhlIGJvdW5kYXJpZXMgb2YgIG5hdGlvbmFsIHBhcmtzIGFuZCB3aWxkbGlmZSBzYW5jdHVhcmllcyBpcyAgdG8gYmUgbm90aWZpZWQgYXMgZWNvLWZyYWdpbGUgem9uZXMgb3IgRWNvLSBTZW5zaXRpdmUgWm9uZXMgKEVTWikuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgIFRoZSBNaW5pc3RyeSBvZiBFbnZpcm9ubWVudCwgRm9yZXN0cyBhbmQgIENsaW1hdGUgQ2hhbmdlIG5vdGlmaWVzIEVjby0gc2Vuc2l0aXZlIFpvbmVzICB1bmRlciBTZWN0aW9uIDMgb2YgdGhlIEVudmlyb25tZW50ICAoUHJvdGVjdGlvbikgQWN0LCAxOTg2LiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogICBFU1pzIGFyZSBjcmVhdGVkIGFzICdzaG9jayBhYnNvcmJlcnMnIGZvciAgdGhlIHByb3RlY3RlZCBhcmVhcywgdG8gbWluaW1pemUgdGhlICBuZWdhdGl2ZSBpbXBhY3Qgb24gdGhlICdmcmFnaWxlIGVjb3N5c3RlbXMnICBieSBjZXJ0YWluIGh1bWFuIGFjdGl2aXRpZXMgdGFraW5nIHBsYWNlICBuZWFyYnkuIFRvIGRvIHNvLCB0aGUgZ3VpZGVsaW5lcyBsaXN0IHRoZSAgYWN0aXZpdGllcyBwcm9oaWJpdGVkIGluIGFuIEVTWiwgc3VjaCBhcyAgY29tbWVyY2lhbCBtaW5pbmcsIHNhdyBtaWxscywgY29tbWVyY2lhbCAgdXNlIG9mIHdvb2QsIGV0Yy4sIGFwYXJ0IGZyb20gcmVndWxhdGVkICBhY3Rpdml0aWVzIGxpa2UgZmVsbGluZyBvZiB0cmVlcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6ICAgTGFzdGx5LCB0aGVyZSBhcmUgcGVybWl0dGVkIGFjdGl2aXRpZXMgbGlrZSAgb25nb2luZyBhZ3JpY3VsdHVyYWwgb3IgaG9ydGljdWx0dXJhbCAgcHJhY3RpY2VzLCByYWlud2F0ZXIgaGFydmVzdGluZywgb3JnYW5pYyAgZmFybWluZywgYW1vbmcgb3RoZXJzLiAgU291cmNlOiBFeHBsYWluZWQ6IFdoYXQgYXJlIEVjby1TZW5zaXRpdmUgIFpvbmVzIGFuZCB3aHkgYXJlIHRoZXJlIHByb3Rlc3RzIGluIEtlcmFsYSAgYWdhaW5zdCB0aGVtPyB8IEV4cGxhaW5lZCBOZXdzLFRoZSBJbmRpYW4gIEV4cHJlc3MgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZSBkL2V2ZXJ5ZGF5LWV4cGxhaW5lcnMvZWNvLXNlbnNpdGl2ZS16b25lcy0gc3VwcmVtZS1jb3VydC12ZXJkaWN0LWtlcmFsYS1wcm90ZXN0cy0gNzk4ODA4MS8g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 26,
      "question" : " Which of the following is/are associated with 'Liquidity Trap'? 1.  Monetary policy becomes ineffective due to already very high interest rates. 2.  People prefers to invest in bonds rather than to hold cash with themselves. 3.  High consumer savings levels. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBMaXF1aWRpdHkgdHJhcCBpcyAgYSBzaXR1YXRpb24gY3JlYXRlZCB3aGVuIHRoZSBtYXJrZXQgcmF0ZSAgb2YgaW50ZXJlc3QgaXMgYWxyZWFkeSB2ZXJ5IGxvdy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSXQgaXMgbG93IGVub3VnaCAgZm9yIHBlb3BsZSB0byBleHBlY3RzIGl0IHRvIHJpc2UgaW4gZnV0dXJlLCAgY2F1c2luZyBjYXBpdGFsIGxvc3NlcywgYW5kIG5vYm9keSB3aWxsICB3aXNoIHRvIGhvbGQgYm9uZHMuIEV2ZXJ5b25lIGluIHRoZSAgZWNvbm9teSB3aWxsIGhvbGQgdGhlaXIgd2VhbHRoIGluIG1vbmV5ICBiYWxhbmNlIGFuZCBpZiBhZGRpdGlvbmFsIG1vbmV5IGlzIGluamVjdGVkICB3aXRoaW4gdGhlIGVjb25vbXksIGl0IHdpbGwgYmUgdXNlZCB1cCB0byAgc2F0aWF0ZSBwZW9wbGUncyBjcmF2aW5nIGZvciBtb25leSBiYWxhbmNlcyAgd2l0aG91dCBpbmNyZWFzaW5nIHRoZSBkZW1hbmQgZm9yIGJvbmRzICBhbmQgd2l0aG91dCBmdXJ0aGVyIGxvd2VyaW5nIHRoZSByYXRlIG9mICBpbnRlcmVzdCBiZWxvdyB0aGUgZmxvb3IgbWluLiBTdWNoIGEgc2l0dWF0aW9uICBpcyBjYWxsZWQgYSBsaXF1aWRpdHkgdHJhcC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBBIGxpcXVpZGl0eSB0cmFwIGlzIGEgIGNvbnRyYWRpY3RvcnkgZWNvbm9taWMgc2l0dWF0aW9uIGluIHdoaWNoICBpbnRlcmVzdCByYXRlcyBhcmUgdmVyeSBsb3cgYW5kIHNhdmluZ3MgIHJhdGVzIGFyZSBoaWdoLCByZW5kZXJpbmcgbW9uZXRhcnkgcG9saWN5ICBpbmVmZmVjdGl2ZS4gVGhlIHNwZWN1bGF0aXZlIG1vbmV5IGRlbWFuZCAgZnVuY3Rpb24gaXMgaW5maW5pdGVseSBlbGFzdGljIGhlcmUuIEhpZ2ggIGNvbnN1bWVyIHNhdmluZ3MgbGV2ZWxzLCBvZnRlbiBzcHVycmVkIGJ5ICB0aGUgYmVsaWVmIG9mIGEgbmVnYXRpdmUgZWNvbm9taWMgZXZlbnQgb24gdGhlICB3dyB3LiB1cCBzYyBtYSB0ZXIgaWFsIC5vbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAyIDYgIGhvcml6b24sIGNhdXNlcyBtb25ldGFyeSBwb2xpY3kgdG8gYmUgIGdlbmVyYWxseSBpbmVmZmVjdGl2ZS4gIFNvdXJjZTogQ2xhc3MgMTF0aCBOQ0VSVC0gIE1hcmNyb2Vjb25vbWljcywgQ2hhcHRlci0zLCBQYWdlIG5vLiA0NyAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbSBlcm1zL2wvbGlxIHVpZGl0eXRyYXAuYXNwICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 27,
      "question" : " With reference to the Monetary Policy Committee (MPC), consider the following statements: 1.  The Governor of the Reserve Bank of India is the chairperson of the committee. 2.  Finance Minister of one of the states is nominated as a member on rotational basis.  3.  It determines the policy repo rate required to achieve the inflation target. 4.  Chairperson can caste a second vote in the event of an equality of votes.  Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cGxhbmF0aW9uOiAgUkJJIEFjdCwgMTkzNCBwcm92aWRlcyBmb3IgYW4gZW1wb3dlcmVkICBzaXgtbWVtYmVyIG1vbmV0YXJ5IHBvbGljeSBjb21taXR0ZWUgIChNUEMpIHRvIGJlIGNvbnN0aXR1dGVkIGJ5IHRoZSBDZW50cmFsICBHb3Zlcm5tZW50IGJ5IG5vdGlmaWNhdGlvbiBpbiB0aGUgT2ZmaWNpYWwgIEdhemV0dGUuIFRoZSBmaXJzdCBzdWNoIE1QQyB3YXMgY29uc3RpdHV0ZWQgIG9uIFNlcHRlbWJlciAyOSwgMjAxNi4gVGhlIHByZXNlbnQgTVBDICBtZW1iZXJzLCBhcyBub3RpZmllZCBieSB0aGUgQ2VudHJhbCAgR292ZXJubWVudCBpbiB0aGUgT2ZmaWNpYWwgR2F6ZXR0ZSBvZiAgT2N0b2JlciA1LCAyMDIwLCBhcmUgYXMgdW5kZXI6ICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBHb3Zlcm5vciBvZiB0aGUgIFJlc2VydmUgQmFuayBvZiBJbmRpYSBpcyB0aGUgZXgtb2ZmaWNpbyAgQ2hhaXJwZXJzb24uICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE90aGVyIG1lbWJlcnMgIGluY2x1ZGUgRGVwdXR5IEdvdmVybm9yIG9mIHRoZSBSZXNlcnZlICBCYW5rIG9mIEluZGlhLCBpbiBjaGFyZ2Ugb2YgTW9uZXRhcnkgUG9saWN5LSBNZW1iZXIsIGV4IG9mZmljaW87IE9uZSBvZmZpY2VyIG9mIHRoZSBSZXNlcnZlICBCYW5rIG9mIEluZGlhIHRvIGJlIG5vbWluYXRlZCBieSB0aGUgQ2VudHJhbCAgQm9hcmQtTWVtYmVyLCBleCBvZmZpY2lvOyB0aHJlZSBtZW1iZXJzICBub21pbmF0ZWQgYnkgdGhlIGNlbnRyYWwgZ292ZXJubWVudC4gIFRoZXJlIGlzIG5vIHByb3Zpc2lvbiBvZiBub21pbmF0aW9uIG9mICBGaW5hbmNlIE1pbmlzdGVyIG9mIGEgc3RhdGUgYXMgbWVtYmVyLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIE1QQyAgZGV0ZXJtaW5lcyB0aGUgcG9saWN5IHJlcG8gcmF0ZSByZXF1aXJlZCB0byAgYWNoaWV2ZSB0aGUgaW5mbGF0aW9uIHRhcmdldC4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IFRoZSBNUEMgaXMgIHJlcXVpcmVkIHRvIG1lZXQgYXQgbGVhc3QgZm91ciB0aW1lcyBpbiBhIHllYXIuICBUaGUgcXVvcnVtIGZvciB0aGUgbWVldGluZyBvZiB0aGUgTVBDIGlzICBmb3VyIG1lbWJlcnMuIEVhY2ggbWVtYmVyIG9mIHRoZSBNUEMgaGFzICBvbmUgdm90ZSwgYW5kIGluIHRoZSBldmVudCBvZiBhbiBlcXVhbGl0eSBvZiAgdm90ZXMsIHRoZSBHb3Zlcm5vciBoYXMgYSBzZWNvbmQgb3IgIGNhc3Rpbmcgdm90ZS4gRWFjaCBNZW1iZXIgb2YgdGhlIE1vbmV0YXJ5ICBQb2xpY3kgQ29tbWl0dGVlIHdyaXRlcyBhIHN0YXRlbWVudCAgc3BlY2lmeWluZyB0aGUgcmVhc29ucyBmb3Igdm90aW5nIGluIGZhdm91ciBvZiwgIG9yIGFnYWluc3QgdGhlIHByb3Bvc2VkIHJlc29sdXRpb24uICBTb3VyY2U6ICBodHRwczovL3d3dy5yYmkub3JnLmluL3NjcmlwdHMvRlNfT3ZlcnZpZSB3LmFzcHg/Zm49Mjc1MiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only  ",
        "option2" : "  2 and 4 only ",
        "option3" : "  1, 3 and 4 only  ",
        "option4" : "  1, 2, 3 and 4  "
      }
    },
    {
      "index" : 28,
      "question" : " With reference to the Non-Resident External Account (NRE Account), consider the following statements: 1.  NRIs can deposit their income generated in India or abroad in NRE accounts. 2.  Interest earned in NRE account is taxable in India. 3.  Funds in NRE accounts are freely repatriable to the country of residence of the NRI.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cGxhbmF0aW9uOiAgQW4gTlJFIC8gTlJPIGFjY291bnQgaXMgdXNlZCBieSBOUklzIHRvICBkZXBvc2l0IHRoZWlyIGZvcmVpZ24gZWFybmluZ3MgdG8gYmUgdXNlZCBmb3IgIHRyYW5zYWN0aW5nIGluIEluZGlhLiBOUkUgLyBOUk8gYWNjb3VudCAgbWF5IGJlIGluIGZvcm0gb2Ygc2F2aW5ncyBhY2NvdW50LCBjdXJyZW50ICBhY2NvdW50IG9yIGRlcG9zaXRzLiBOUklzIG1heSB1c2UgTlJFIC8gIE5STyBhY2NvdW50cyBmb3IgbWFraW5nIGludmVzdG1lbnRzIGluICBJbmRpYSBzdWNoIGFzIG11dHVhbCBmdW5kcy4gIO+CtyBUaGUgcmVzaWRlbnRpYWwgc3RhdHVzIG9mIGEgcGVyc29uIGlzIHRvIGJlICBkZXRlcm1pbmVkIGZvciBldmVyeSBmaW5hbmNpYWwgeWVhciAgc2VwYXJhdGVseS4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIGRlcG9zaXRzICBtYWRlIGludG8gTlJFIGFjY291bnRzIHNob3VsZCBiZSBlYXJuaW5ncyAgb3V0c2lkZSBJbmRpYS4gTlJJcyBjYW5ub3QgZGVwb3NpdCB0aGVpciAgaW5jb21lIGdlbmVyYXRlZCBpbiBJbmRpYSBpbiBOUkUgIGFjY291bnRzLiBIb3dldmVyLCBpdCBpcyBwb3NzaWJsZSBmb3IgYW4gIGluZGl2aWR1YWwgdG8gaG9sZCBib3RoIE5SRSBhbmQgTlJPICBhY2NvdW50cy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEludGVyZXN0IGVhcm5lZCAgaW4gTlJFIGFjY291bnQgaXMgdGF4IGZyZWUgaW4gSW5kaWEuICBXaGVyZWFzLCBpbnRlcmVzdCBlYXJuZWQgaW4gTlJPIGFjY291bnQgaXMgIHRheGFibGUgaW4gSW5kaWEgYW5kIHN1YmplY3QgdG8gVERTICh0YXggIGRlZHVjdGVkIGF0IHNvdXJjZSkuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBGdW5kcyBpbiBOUkUgIGFjY291bnRzIGFyZSBmcmVlbHkgcmVwYXRyaWFibGUgdG8gdGhlICBjb3VudHJ5IG9mIHJlc2lkZW5jZSBvZiB0aGUgTlJJLiBXaGVyZWFzICBmb3IgTlJPIGFjY291bnRzLCBpbnRlcmVzdCBhbW91bnQgaXMgZnJlZWx5ICByZXBhdHJpYWJsZSBhbmQgcHJpbmNpcGFsIGZ1bmRzIGluIE5STyAgYWNjb3VudHMgY2FuIGJlIHRyYW5zZmVycmVkIHVwIHRvIHRoZSBSQkkgIGxpbWl0IGZvciBzdWNoIHJlcGF0cmlhdGlvbiBpLmUuICQxIG1pbGxpb24gcGVyICBhbm51bS4gSG93ZXZlciwgdGhlIGZ1bmRzIHRyYW5zZmVycmVkIGZyb20gIE5STyBhY2NvdW50IGFyZSBzdWJqZWN0IHRvIHJlcGF0cmlhdGlvbiAgY2hhcmdlcyBhbmQgY2VydGFpbiBSQkkgcmVndWxhdGlvbnMsICBpbmNsdWRpbmcgZmlsaW5nIG9mIGNlcnRhaW4gZm9ybXMuICBTb3VyY2U6ICBodHRwczovL3d3dy5saXZlbWludC5jb20vbW9uZXkvcGVyc29uYSBsLWZpbmFuY2UvYWxsLWFib3V0LW5vbi1yZXNpZGVudC1leHRlcm5hbC0gYW5kLW5vbi1yZXNpZGVudC1vcmRpbmFyeS1hY2NvdW50cy0gMTE2NDIwOTI4MDMxNTQuaHRtbCAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 29,
      "question" : " Consider the following statements regarding 'AKRUTI' programme: 1.  It aims to provide easy access to modern technologies exclusively to village areas. 2.  It is an initiative of Bhabha Atomic Research Centre (BARC). 3.  It provides funding support to MSMEs for deployment of technology. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogJ0FLUlVUSScgaXMgYW4gIGFjcm9ueW0gZm9yICdBZHZhbmNlIEtub3dsZWRnZSBhbmQgUlVyYWwgIFRlY2hub2xvZ3kgSW1wbGVtZW50YXRpb24nIHByb2dyYW1tZS4gIEFLUlVUSSBpcyBhbiBpbml0aWF0aXZlIG9mIEJoYWJoYSBBdG9taWMgIFJlc2VhcmNoIENlbnRlciAoQkFSQykuIFVuZGVyIHRoZSBEQUUgIHNvY2lldGFsIGluaXRpYXRpdmUgZm9yIHVzaW5nIE5vbi1Qb3dlciAgQXBwbGljYXRpb25zIChOUEFzKSBhbmQgU3Bpbm9mZiB0ZWNobm9sb2dpZXMgIGluIHdhdGVyLCBhZ3JpY3VsdHVyZSwgZm9vZCBwcm9jZXNzaW5nIGFuZCAgd2FzdGUgbWFuYWdlbWVudCwgYSBwcm9ncmFtbWUgQWR2YW5jZWQgIEtub3dsZWRnZSBhbmQgUnVyYWwgVGVjaG5vbG9neSAgSW1wbGVtZW50YXRpb24gKEFLUlVUSSkgd2FzIGxhdW5jaGVkLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBwcm9ncmFtbWUgIGFpbXMgdG8gY3JlYXRlIHN0cnVjdHVyZWQgYW5kIHNjYWxhYmxlICBuZXR3b3JrIG9mIHRlY2hub2xvZ3kgbm9kZXMgaW4gcnVyYWwgIGFyZWFzIHByb3ZpZGluZyBlYXN5IGFjY2VzcyB0byBtb2Rlcm4gIHd3IHcuIHVwIHNjIG1hIGVyaSBhbC4gbmxpIG5lICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDIgNyAgdGVjaG5vbG9naWVzIHRvIGFsbCB2aWxsYWdlcnMgaW4gdGhlaXIgb3duICB2aWxsYWdlcy4gVGhlIGFwcGxpY2F0aW9ucyBhcmUgaW52aXRlZCBmcm9tICB0ZWNobmljYWxseSBvcmllbnRlZCBJbmRpdmlkdWFscywgIEVkdWNhdGlvbmFsIEluc3RpdHV0aW9ucywgR3JhbSBQYW5jaGF5YXRzLCAgUnVyYWwgRW50cmVwcmVuZXVycyBhbmQgU3RhcnQgVXBzIGZvciAgZXhjbHVzaXZlIGRlcGxveW1lbnQgaW4gcnVyYWwgYXJlYXMuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoaXMgcHJvZ3JhbW1lICBpcyBub3QgYSBmdW5kaW5nIHNjaGVtZSBmb3IgZGVwbG95bWVudCBvZiAgdGVjaG5vbG9neS4gT25seSB0ZWNobm9sb2d5IHJlbGF0ZWQgZGVzaWduLCAgdHJhaW5pbmcgYW5kIGltcGxlbWVudGF0aW9uIGRvY3VtZW50cyAgc2hhbGwgYmUgc2hhcmVkIHdpdGggdGhlIGxpY2Vuc2VlLCBubyBnb29kcyAgb3IgbWF0ZXJpYWwgc2hhbGwgYmUgaGFuZGVkIG92ZXIgdG8gdGhlICBsaWNlbnNlZS4gSW5kdXN0cnkgYW5kIE1TTUUgYXJlIG5vdCAgY292ZXJlZCB1bmRlciBBS1JVVEkuICBUaHJvdWdoIHRoaXMgcHJvZ3JhbW1lLCB0aGUgdGVjaG5vbG9neSAgY2VudHJlIGNhbGxlZCBBS1JVVEkgbm9kZSBpcyBhbHNvIHNldCB1cCBpbiAgYSB2aWxsYWdlLiBUaGVzZSB0ZWNobm9sb2dpZXMgYXJlICBkZW1vbnN0cmF0ZWQgYW5kIHRha2VuIHRvIGRpZmZlcmVudCB2aWxsYWdlcyAgYXJvdW5kIHRoZSBBS1JVVEkgbm9kZSB2aWEgd29ya2luZyAgY2VudHJlcyBlc3RhYmxpc2hlZCBpbiBkaWZmZXJlbnQgdmlsbGFnZXMgIGFyb3VuZCBBS1JVVEkuIFRoZXNlIHdvcmtpbmcgY2VudHJlcyBhcmUgIGNhbGxlZCBLUlVUSSBLZW5kcmEgdml6LiBLUlVUSUsuICBTb3VyY2U6IGh0dHBzOi8vd3d3LmJhcmMuZ292LmluL2FrcnV0aS0gdHAvYWtmb3JjZS5odG1sICBodHRwczovL3d3dy5iYXJjLmdvdi5pbi9ha3J1dGktdHAvICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 30,
      "question" : " Consider the following statements with reference to CiSS application: 1. It is launched by the National Commission for the Protection of Child Rights under the Baal Swaraj portal. 2.  Its main aim is to protect cultural rights of tribal children. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIE5hdGlvbmFsICBDb21taXNzaW9uIGZvciB0aGUgUHJvdGVjdGlvbiBvZiBDaGlsZCAgUmlnaHRzIChOQ1BDUikgaGFzIGxhdW5jaGVkIGEgJ0NpU1MgIGFwcGxpY2F0aW9uJyB1bmRlciB0aGUgQmFhbCBTd2FyYWogcG9ydGFsICB0byBoZWxwIGluIHRoZSByZWhhYmlsaXRhdGlvbiBwcm9jZXNzICBvZiBDaGlsZHJlbiBpbiBTdHJlZXQgU2l0dWF0aW9ucy4gKENpU1MpICBCYWFsIFN3YXJhaiBpcyBhIHBvcnRhbCBsYXVuY2hlZCBieSBOQ1BDUiAgZm9yIG9ubGluZSB0cmFja2luZyBhbmQgZGlnaXRhbCByZWFsLXRpbWUgIG1vbml0b3JpbmcgbWVjaGFuaXNtIG9mIGNoaWxkcmVuIGluIG5lZWQgb2YgIGNhcmUgYW5kIHByb3RlY3Rpb24uIFRoZSBwb3J0YWwgaGFzIHR3byAgZnVuY3Rpb25zLSBDT1ZJRCBjYXJlIGFuZCBDaVNTLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGlzIHBvcnRhbCwgIGRldmVsb3BlZCBieSwgTkNQQ1IgaXMgYSBmaXJzdC1vZi1pdHMta2luZCAgaW5pdGlhdGl2ZSBpbiBJbmRpYSB0byBoZWxwIGNoaWxkcmVuIGluIHN0cmVldCAgc2l0dWF0aW9ucy4gVGhlIENpU1MgYXBwbGljYXRpb24gaXMgdXNlZCAgZm9yIHJlY2VpdmluZyBkYXRhIG9mIGNoaWxkcmVuIGluIHN0cmVldCAgc2l0dWF0aW9ucyBmcm9tIGFsbCB0aGUgc3RhdGVzIGFuZCB1bmlvbiAgdGVycml0b3JpZXMsIHRyYWNraW5nIHRoZWlyIHJlc2N1ZSBhbmQgIHJlaGFiaWxpdGF0aW9uIHByb2Nlc3MuIFRoZSBpbml0aWF0aXZlIGlzICB0YWtlbiB1bmRlciB0aGUgZGlyZWN0aW9uIG9mIHRoZSBTdXByZW1lICBDb3VydCBvZiBJbmRpYS4gSXQgaXMgbm90IG1haW5seSBhaW1lZCBhdCAgcmlnaHRzIG9mIFRyaWJhbCBjaGlsZHJlbiBpbiBwYXJ0aWN1bGFyLiAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZUlmcmFtZVBhZ2UuIGFzcHg/UFJJRD0xODMyMjEwICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 31,
      "question" : " Consider the following statements regarding Forex Reserve: 1.  It contains treasury bills and corporate bonds denominated in domestic currency. 2.  These reserves are usually used for backing the exchange rate of domestic currency. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBGb3JlaWduICBleGNoYW5nZSByZXNlcnZlcyBhcmUgYXNzZXRzIGRlbm9taW5hdGVkICBpbiBhIGZvcmVpZ24gY3VycmVuY3kgdGhhdCBhcmUgaGVsZCBieSBhICBuYXRpb24ncyBjZW50cmFsIGJhbmsuICBGb3JlaWduIEN1cnJlbmN5ICBBc3NldHMgaW5jbHVkZXMgR29sZCByZXNlcnZlcywgU3BlY2lhbCAgRHJhd2luZyBSaWdodHMsIFJlc2VydmUgcG9zaXRpb24gd2l0aCAgdGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCAoSU1GKS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZXkgYXJlICB1c3VhbGx5IHVzZWQgZm9yIGJhY2tpbmcgdGhlIGV4Y2hhbmdlIHJhdGUgIGFuZCBpbmZsdWVuY2luZyBtb25ldGFyeSBwb2xpY3kuICAgU291cmNlOiAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbSBlcm1zL2YvZm9yIGVpZ24tZXhjaGFuZ2UtIHJlc2VydmVzLmFzcCM6fjp0ZXh0PUZvcmVpZ24lMjBleGNoYW5nZSUgMjByZXNlcnZlcyUyMGFyZSUyMGFzc2V0cyx0aGUlMjBVLlMuJSAyMEZlZGVyYWwlMjBSZXNlcnZlJTIwQmFuayAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2   ",
        "option4" : "  Neither 1 nor 2  ww w. up sc ma ter ial . n lin e  KSG: MEMBER'S COPY    "
      }
    },
    {
      "index" : 32,
      "question" : " With reference to the NIPUN initiative, consider the following statements: 1.  The project is an initiative of the Ministry of Housing & Urban Affairs. 2.  The National Skill Development Corporation (NSDC) is the nodal agency for the implementation. 3.  It will provide trainees with a three-year accidental insurance. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIHByb2plY3QgTklQVU4gIGlzIGFuIGluaXRpYXRpdmUgb2YgdGhlIE1pbmlzdHJ5IG9mIEhvdXNpbmcgJiAgVXJiYW4gQWZmYWlycyAoTW9IVUEpIHVuZGVyIGl0cyBmbGFnc2hpcCAgc2NoZW1lIG9mIHRoZSBEZWVuZGF5YWwgQW50eW9kYXlhIFlvamFuYS0gTmF0aW9uYWwgVXJiYW4gTGl2ZWxpaG9vZHMgTWlzc2lvbiAoREFZLSBOVUxNKSB0byB0cmFpbiBvdmVyIDEgbGFraCBjb25zdHJ1Y3Rpb24gIHdvcmtlcnMsIHRocm91Z2ggZnJlc2ggc2tpbGxpbmcgYW5kICB1cHNraWxsaW5nIHByb2dyYW1tZXMgYW5kIHByb3ZpZGVzIHRoZW0gIHdpdGggd29yayBvcHBvcnR1bml0aWVzIGluIGZvcmVpZ24gY291bnRyaWVzICBhbHNvLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIE5hdGlvbmFsIFNraWxsICBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiAoTlNEQyksIHRoZSAgbm9kYWwgYWdlbmN5IHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBTa2lsbCAgRGV2ZWxvcG1lbnQgJiBFbnRyZXByZW5ldXJzaGlwIChNU0RFKSwgIEdvdmVybm1lbnQgb2YgSW5kaWEgd2lsbCBpbXBsZW1lbnQgdGhlICBOSVBVTiBwcm9qZWN0LiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogUHJvamVjdCBOSVBVTiB3aWxsICBhbHNvIGZhY2lsaXRhdGUgYW5kIHN1cHBvcnQgY29udmVyZ2VuY2Ugd2l0aCAgcmVsYXRlZCBsaW5lIG1pbmlzdHJpZXMuIE1lYW53aGlsZSwgTlNEQyAgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIG92ZXJhbGwgZXhlY3V0aW9uICBvZiB0cmFpbmluZywgbW9uaXRvcmluZyBhbmQgY2FuZGlkYXRlICB0cmFja2luZy4gSXQgd2lsbCBwcm92aWRlIHRyYWluZWVzIHdpdGggICdLYXVzaGFsIEJpbWEnLCBhIHRocmVlLXllYXIgYWNjaWRlbnRhbCAgaW5zdXJhbmNlIHdpdGggY292ZXJhZ2Ugb2YgSU5SIDIgbGFraHMsICBkaWdpdGFsIHNraWxscyBzdWNoIGFzIGNhc2hsZXNzIHRyYW5zYWN0aW9ucyAgYW5kIHRoZSBCSElNIGFwcCwgb3JpZW50YXRpb24gYWJvdXQgIGVudHJlcHJlbmV1cnNoaXAsIGFuZCBFUEYgYW5kIEJPQ1cgIGZhY2lsaXRpZXMuICBTb3VyY2U6ICBodHRwczovL3d3dy5yZXB1YmxpY3dvcmxkLmNvbS9pbmRpYS0gbmV3cy9nZW5lcmFsLW5ld3MvbW9odWEtbGF1bmNoZXMtIHd3IHcuIHVwIGNtIGEgZSByaSBsLm8gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMiA4ICBuaXB1bi1wcm9qZWN0LWZvci1wcm9tb3Rpb24tb2YtdXBza2lsbGluZy0gb2YtMS1sYWtoLW5pcm1hbi13b3JrZXJzLSBhcnRpY2xlc2hvdy5odG1sIzp+OnRleHQ9SW1hZ2UlM0ElMjBBTkkgLSAsVW5pb24lMjBNaW5pc3RlciUyMG9mJTIwSG91c2luZyUyMGEgbmQlMjBVcmJhbiUyMEFmZmFpcnMlMjBIYXJkZWVwJTIwU2kgbmdoJTIwUHVyaSx0cmFpbmluZyUyMG9mJTIwMTAwJTJDMDAwICUyMGNvbnN0cnVjdGlvbiUyMHdvcmtlcnMuICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4PyBQUklEPTE4MzU1MzkgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 33,
      "question" : " Which among the following committees is not associated with Banking Sector Reforms? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogIFRhcmFwb3JlIENvbW1pdHRlZSAoZm9ybWVkIHRvIGFuYWx5emUgIHRoZSBjYXNlIG9mIENhcGl0YWwgQWNjb3VudCAgQ29udmVydGliaWxpdHksIENBQykgaGFzIHJlY29tbWVuZGVkICB0aGF0IHRoZSB0aW1lIGlzIG5vdyBhcHByb3ByaWF0ZSB0byAgaW5pdGlhdGUgYSBtb3ZlIHRvd2FyZHMgQ0FDIGluIEluZGlhLiAgUEsgTW9oYW50eSBDb21taXR0ZWU6IHJlY29tbWVuZGVkICB0aGUgZ3VhcmRlZCBlbnRyeSBvZiBjb3Jwb3JhdGVzIGludG8gdGhlICBiYW5raW5nIHNwYWNlLCBjb252ZXJzaW9uIG9mIGJpZyBOQkZDcyBpbnRvICBiYW5rcyBhbmQgaGlrZSBpbiBwcm9tb3RlcnMnIHN0YWtlIHRvIDI2IHBlciAgY2VudCBmcm9tIDE1IHBlciBjZW50LiBUaGUgZ3JvdXAgYWxzbyAgcHJvcG9zZWQgYSBoaWtlIGluIG1pbmltdW0gY2FwaXRhbCBmb3IgbmV3ICBiYW5rcyBmcm9tIFJzIDUwMCBjcm9yZSB0byBScyAxLDAwMCBjcm9yZS4gIEtlbGthciBDb21taXR0ZWUgaW4gMTk4NCByZWNvbW1lbmRlZCAgdGhhdCBzbWFsbCBhbmQgdW5lY29ub21pYyBSUkJzIHNob3VsZCBiZSAgbWVyZ2VkIGluIHRoZSBpbnRlcmVzdCBvZiBlY29ub21pYyB2aWFiaWxpdHkuICBUaGUgQ29tbWl0dGVlIG9uIFJlc3RydWN0dXJpbmcgb2YgUlJCcywgIDE5OTQgKEJoYW5kYXJpIENvbW1pdHRlZSkgaWRlbnRpZmllZCA0OSAgUlJCcyBmb3IgY29tcHJlaGVuc2l2ZSByZXN0cnVjdHVyaW5nLiBJdCAgcmVjb21tZW5kZWQgZ3JlYXRlciBkZXZvbHV0aW9uIG9mICBkZWNpc2lvbi1tYWtpbmcgcG93ZXJzIHRvIHRoZSBCb2FyZHMgb2YgIFJSQnMgaW4gdGhlIG1hdHRlcnMgb2YgYnVzaW5lc3MgIGRldmVsb3BtZW50IGFuZCBzdGFmZiBtYXR0ZXJzLiBUaGUgb3B0aW9uIG9mICBsaXF1aWRhdGlvbiBhZ2FpbiB3YXMgbW9vdGVkIGJ5IHRoZSAgQ29tbWl0dGVlIG9uIFJldmFtcGluZyBvZiBSUkJzLCAxOTk2ICAoQmFzdSBDb21taXR0ZWUpLiAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnJiaS5vcmcuaW4vU2NyaXB0cy9QdWJsaWNhdGlvbiBzVmlldy5hc3B4P2lkPTg4MzMgIGh0dHBzOi8vd3d3LnJiaS5vcmcuaW4vc2NyaXB0cy9CU19QcmVzc1JlIGxlYXNlRGlzcGxheS5hc3B4P3ByaWQ9MTg1MzMgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9idXNpbmVzIHMvYmFua2luZy1hbmQtZmluYW5jZS9yYmktY29tbWl0dGVlLWZvci0gY29udmVyc2lvbi1vZi1sYXJnZS1uYmZjcy1pbnRvLWJhbmtzLWVudHJ5LSBvZi1jb3Jwb3JhdGVzLTcwNTk1NjAvICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Kelkar Committee ",
        "option2" : "  Tarapore Committee ",
        "option3" : "  Bhandari Committee ",
        "option4" : "  PK Mohanty Committee   "
      }
    },
    {
      "index" : 34,
      "question" : " Which of the following statements is/are correct about Operation Barga? 1.  It was a land reform movement throughout rural Uttar Pradesh for recording the names of bargadars. 2.  It bestowed on the bargadars, the legal protection against eviction by the landlords, and entitled them to the due share of the produce. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgT3BlcmF0aW9uIEJhcmdhIHdhcyBhIGxhbmQgcmVmb3JtICBtb3ZlbWVudCB0aHJvdWdob3V0IHJ1cmFsIFdlc3QgQmVuZ2FsICBmb3IgcmVjb3JkaW5nIHRoZSBuYW1lcyBvZiBzaGFyZWNyb3BwZXJzICAoYmFyZ2FkYXJzKSB3aGlsZSBhdm9pZGluZyB0aGUgdGltZS0gY29uc3VtaW5nIG1ldGhvZCBvZiByZWNvcmRpbmcgdGhyb3VnaCB0aGUgIHNldHRsZW1lbnQgbWFjaGluZXJ5LiBUaGUgdWx0aW1hdGUgYWltIG9mICB0aGVzZSBsYW5kIHJlZm9ybXMgd2FzIHRvIGZhY2lsaXRhdGUgdGhlICBjb252ZXJzaW9uIG9mIHRoZSBzdGF0ZSdzIGJhcmdhZGFycyBpbnRvICBsYW5kb3duZXJzLCBpbiBsaW5lIHdpdGggdGhlIERpcmVjdGl2ZSAgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgb2YgdGhlIEluZGlhbiAgQ29uc3RpdHV0aW9uLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6ICBPcGVyYXRpb24gQmFyZ2EsIHRoZSBsYW5kIHJlZm9ybSBtb3ZlbWVudCAgaW50cm9kdWNlZCBieSB0aGUgZXJzdHdoaWxlIExlZnQgRnJvbnQgIGdvdmVybm1lbnQgaW4gMTk3OCwgaGFkIHJlY29yZGVkIHRoZSAgbmFtZXMgb2Ygc2hhcmVjcm9wcGVycyAoYmFyZ2FkYXJzKSwgZ2l2aW5nICB0aGVtIGxlZ2FsIHByb3RlY3Rpb24gYWdhaW5zdCBldmljdGlvbiBieSAgdGhlIGxhbmRsb3JkcyBhbmQgZW50aXRsaW5nIHRoZW0gdG8gYSAgc2hhcmUgb2YgdGhlIHByb2R1Y2UuIEl0IHdhcyBhbHNvIG1hZGUgYW4gIGluaGVyaXRhYmxlIHJpZ2h0LiBTaW11bHRhbmVvdXNseSwgc3VycGx1cyAgbGFuZCB3YXMgcmVkaXN0cmlidXRlZC4gSW4gdGhlIHByb2Nlc3MsICBhZ3JpY3VsdHVyYWwgcHJvZHVjdGlvbiBncmV3LCBhbmQgdGhlIGxpdmVzICBvZiB0aG9zZSBsaXZpbmcgb24gdGhlIG1hcmdpbnMgaW1wcm92ZWQgIHN1YnN0YW50aWFsbHkuICBTb3VyY2U6ICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vZWxlY3Rpb25zL3dlc3QgYmVuZ2FsMjAxNi93ZXN0LWJlbmdhbC1hc3NlbWJseS1wb2xscy0gZm9yLWJhcmdhZGFycy1sYW5kLWlzLW5vdy1sYWJvdXItIGxvc3QvYXJ0aWNsZTg1MDU0OTUuZWNlICBodHRwczovL2RicGVkaWEub3JnL3BhZ2UvT3BlcmF0aW9uX0JhcmdhICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only         ",
        "option2" : "  2 only    ",
        "option3" : " Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 35,
      "question" : " With reference to the Scheduled Bank Status in India, consider the following statements: 1.  It makes a bank eligible to partner in government-run financial inclusion schemes.  2.  The bank no longer remains eligible for refinancing facility from the Reserve Bank of India. 3.  Recently, Airtel Payments Bank has been upgraded to a scheduled bank. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBhbmQgc3RhdGVtZW50IDIgaXMgIGluY29ycmVjdDogIFNjaGVkdWxlZCBiYW5rcyByZWZlciB0byB0aG9zZSBiYW5rcyB3aGljaCAgaGF2ZSBiZWVuIGluY2x1ZGVkIGluIHRoZSBTZWNvbmQgU2NoZWR1bGUgIG9mIFJlc2VydmUgQmFuayBvZiBJbmRpYSBBY3QsIDE5MzQuICBTY2hlZHVsZWQgQmFuayBzdGF0dXMgaGVscHMgYSBiYW5rIGV4cGFuZCAgaXRzIGZpbmFuY2lhbCBzZXJ2aWNlcyBvcGVyYXRpb25zIGFzIHRoaXMgIG1ha2VzIGl0IGVsaWdpYmxlIHRvIHBhcnRuZXIgaW4gIGdvdmVybm1lbnQtcnVuIGZpbmFuY2lhbCBpbmNsdXNpb24gIHNjaGVtZXMuIEl0IG5vdyBiZWNvbWVzIGVsaWdpYmxlIGZvciAgcmVmaW5hbmNpbmcgZmFjaWxpdHkgZnJvbSB0aGUgUkJJIGF0IHRoZSAgYmFuayByYXRlLCBhY3F1aXJlcyBtZW1iZXJzaGlwIHRvIHRoZSAgY2xlYXJpbmcgaG91c2UsIGFuZCBnZXRzIGFjY2VzcyB0byBjdXJyZW5jeSAgc3RvcmFnZSBmYWNpbGl0eS4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJlY2VudGx5LCB0aGUgIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSBpbmNsdWRlZCBBaXJ0ZWwgIFBheW1lbnRzIEJhbmsgaW4gdGhlIHNlY29uZCBzY2hlZHVsZSBvZiAgdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSBBY3QsIDE5MzQuICBTb3VyY2U6IGh0dHBzOi8vd3d3LmJ1c2luZXNzLSBzdGFuZGFyZC5jb20vcG9kY2FzdC9maW5hbmNlL3doYXQtZG9lcy0gd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAubyBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAyIDkgIGEtc2NoZWR1bGVkLWJhbmstc3RhdHVzLW1lYW4tZm9yLXBheXRtLSBwYXltZW50cy1iYW5rLTEyMTEyMTMwMDA4M18xLmh0bWwgIGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9pbmR1c3RyeS9iYW5raSBuZy9haXJ0ZWwtcGF5bWVudHMtYmFuay1nZXRzLXNjaGVkdWxlZC0gYmFuay1zdGF0dXMtZnJvbS1yYmktIDExNjQxMjk2ODc3Nzk0Lmh0bWwgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 3 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 36,
      "question" : " With reference to Mutual Funds, consider the following statements: 1. Mutual Funds can operate only in capital market and not money market. 2. They are under dual regulation of SEBI and RBI. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFuZCBzdGF0ZW1lbnQgMiAgaXMgY29ycmVjdDogIE11dHVhbCBmdW5kcywgZmlyc3Qgb2YgYWxsIGNhbWUgaW4gdGhlIG1vbmV5ICBtYXJrZXQgKHJlZ3VsYXRlZCBieSB0aGUgUkJJKSwgYnV0IHRoZXkgaGF2ZSAgdGhlIGZyZWVkb20gdG8gb3BlcmF0ZSBpbiB0aGUgY2FwaXRhbCBtYXJrZXQsICB0b28uIFRoaXMgaXMgd2h5IHRoZXkgaGF2ZSBwcm92aXNpb24gb2YgZHVhbCAgcmVndWxhdG9yLXRoZSBSQkkgYW5kIFNFQkkuIE11dHVhbCBmdW5kcyAgYXJlIGNvbXB1bHNvcmlseSByZWdpc3RlcmVkIHdpdGggdGhlICBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBCb2FyZCBvZiBJbmRpYSAgKFNFQkkpLCB3aGljaCBhbHNvIGFjdHMgYXMgdGhlIGZpcnN0IHdhbGwgb2YgIGRlZmVuY2UgZm9yIGFsbCBpbnZlc3RvcnMgaW4gdGhlc2UgZnVuZHMuIEZvciAgdGhvc2Ugd2hvIGRvIG5vdCB1bmRlcnN0YW5kIGhvdyBtdXR1YWwgIGZ1bmRzIG9wZXJhdGUgYnV0IGFyZSB3aWxsaW5nIHRvIGludmVzdCwgdGhlICBtb3ZlIGJ5IFNFQkkgaXMgc2VlbiBhcyBhIGJpZyByZWxpZWYuICBTb3VyY2UtSW5kaWFuIEVjb25vbXksIFJhbWVzaCBTaW5naCwgIENoYXB0ZXIgMTEsIFBhZ2UtMTEuNiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 37,
      "question" : " Which among the following institutions publishes the Global financial stability report? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogIFRoZSBHbG9iYWwgRmluYW5jaWFsIFN0YWJpbGl0eSBSZXBvcnQsICBwdWJsaXNoZWQgYnkgSW50ZXJuYXRpb25hbCBNb25ldGFyeSAgRnVuZCAoSU1GKSBwcm92aWRlcyBhbiBhc3Nlc3NtZW50IG9mIHRoZSAgZ2xvYmFsIGZpbmFuY2lhbCBzeXN0ZW0gYW5kIG1hcmtldHMsIGFuZCAgYWRkcmVzc2VzIGVtZXJnaW5nIG1hcmtldCBmaW5hbmNpbmcgaW4gYSAgZ2xvYmFsIGNvbnRleHQuIEl0IGZvY3VzZXMgb24gY3VycmVudCBtYXJrZXQgIGNvbmRpdGlvbnMsIGhpZ2hsaWdodGluZyBzeXN0ZW1pYyBpc3N1ZXMgdGhhdCAgY291bGQgcG9zZSBhIHJpc2sgdG8gZmluYW5jaWFsIHN0YWJpbGl0eSBhbmQgIHN1c3RhaW5lZCBtYXJrZXQgYWNjZXNzIGJ5IGVtZXJnaW5nICBtYXJrZXQgYm9ycm93ZXJzLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LmltZi5vcmcvZW4vUHVibGljYXRpb25zL0dGUyBSICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  World Bank ",
        "option2" : "  World Economic Forum ",
        "option3" : "  Asian Development Bank  ",
        "option4" : "  International Monetary Fund  "
      }
    },
    {
      "index" : 38,
      "question" : " Consider the following statements regarding Deposit Insurance and Credit Guarantee Corporation (DICGC). 1.  It is a wholly-owned subsidiary of the Reserve Bank of India. 2.  It provides insurance cover to all eligible bank depositors. 3.  Deposits of central and state governments, and inter-bank deposits are also provided insurance cover by DICGC. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYW5kIHN0YXRlbWVudCAyIGlzICBjb3JyZWN0OiAgIFJCSSBoYXMgc2V0IHVwICgxMDAlIHN1YnNpZGlhcnkpIERlcG9zaXQgIEluc3VyYW5jZSBhbmQgQ3JlZGl0IEd1YXJhbnRlZSAgQ29ycG9yYXRpb24gKERJQ0dDKSB0byBwcm90ZWN0IHRoZSAgaW50ZXJlc3Qgb2Ygc21hbGwgZGVwb3NpdG9ycyBpbiBjYXNlIG9mIGJhbmsgIGZhaWx1cmVzLyBiYW5rcnVwdGN5LiBUaGUgRElDR0MgcHJvdmlkZXMgIGluc3VyYW5jZSBjb3ZlciB0byBhbGwgZWxpZ2libGUgYmFuayAgZGVwb3NpdG9ycyB1cCB0byBScy4gNSBsYWtocyAocHJpbmNpcGFsIGFuZCAgaW50ZXJlc3QgY29tYmluZWQpIHBlciBkZXBvc2l0b3IgcGVyICBiYW5rLiBESUNHQyBjaGFyZ2VzIHByZW1pdW0gZnJvbSBiYW5rcyAgdG8gcHJvdmlkZSBpbnN1cmFuY2UuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBJZiBvbmUgcGVyc29uIGhhcyAgZGlmZmVyZW50IGFjY291bnRzIGluIGEgYmFuayBsaWtlIHNhdmluZ3MsICBmaXhlZCwgcmVjdXJyaW5nIGFuZCBjdXJyZW50LCBkb2VzIG5vdCAgbWF0dGVyLCBoaXMgdG90YWwgaW5zdXJhbmNlIGNvdmVyIGlzIG1heCBmaXZlICBsYWtocyBydXBlZXMuIEJ1dCBpZiBvbmUgcGVyc29uIGhhcyBhY2NvdW50ICBpbiBkaWZmZXJlbnQgYmFua3MsIHRoZW4gaGUgaXMgc2VwYXJhdGVseSAgY292ZXJlZCBmaXZlIGxha2hzIHJ1cGVlcyBpbiBlYWNoIGJhbmsuIEFsbCAgY29tbWVyY2lhbCBiYW5rcyBpbmNsdWRpbmcgYnJhbmNoZXMgb2YgIGZvcmVpZ24gYmFua3MgYW5kIFVyYmFuIENvLW9wZXJhdGl2ZSAgYmFua3MgKFVDQnMpL1N0YXRlIENvb3BlcmF0aXZlIEJhbmtzICAoU3RDQnMpLyBEaXN0cmljdCBDZW50cmFsIENvb3BlcmF0aXZlIEJhbmtzICAoRENDQnMpIGFyZSBjb3ZlcmVkIGV4Y2VwdCBkZXBvc2l0cyBvZiAgZm9yZWlnbiBnb3Zlcm5tZW50cywgZGVwb3NpdHMgb2YgY2VudHJhbCAgYW5kIHN0YXRlIGdvdmVybm1lbnRzLCBhbmQgaW50ZXItYmFuayAgZGVwb3NpdHMuICAgU291cmNlOiBJbmRpYW4gRWNvbm9teSBieSBWaXZlayBTaW5naD4gIENoYXB0ZXItMj4gUGFnZSBOby01NyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 only ",
        "option3" : "  3 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 39,
      "question" : " Consider the following statements regarding Real exchange rate (RER): 1.  It is considered as barometer of the competitiveness of an economy for international trade. 2.  If RER is less than one, it implies that goods abroad have become www.upcmaterial.onlineKSG: MEMBER'S COPY  more expensive than goods at home. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUmVhbCBleGNoYW5nZSByYXRlICAoUkVSKSBpcyBjb25zaWRlcmVkIGFzIGJhcm9tZXRlciBvZiB0aGUgIGNvbXBldGl0aXZlbmVzcyBvZiBhbiBlY29ub215IGZvciAgaW50ZXJuYXRpb25hbCB0cmFkZS4gIFRoZSByZWFsIGV4Y2hhbmdlIHJhdGUgLSB0aGUgcmF0aW8gb2YgZm9yZWlnbiAgdG8gZG9tZXN0aWMgcHJpY2VzLCBtZWFzdXJlZCBpbiB0aGUgc2FtZSAgY3VycmVuY3kuICBJdCBpcyBkZWZpbmVkIGFzIFJlYWwgZXhjaGFuZ2UgcmF0ZSA9IGVQZi8gUCAgIHdoZXJlIFAgYW5kIFBmIGFyZSB0aGUgcHJpY2UgbGV2ZWxzIGhlcmUgYW5kICBhYnJvYWQsIHJlc3BlY3RpdmVseSwgYW5kIGUgaXMgdGhlIHJ1cGVlIHByaWNlICBvZiBmb3JlaWduIGV4Y2hhbmdlICh0aGUgbm9taW5hbCBleGNoYW5nZSAgcmF0ZSkuIFRoZSBudW1lcmF0b3IgZXhwcmVzc2VzIHByaWNlcyAgYWJyb2FkIG1lYXN1cmVkIGluIHJ1cGVlcywgdGhlICBkZW5vbWluYXRvciBnaXZlcyB0aGUgZG9tZXN0aWMgcHJpY2UgbGV2ZWwgIG1lYXN1cmVkIGluIHJ1cGVlcywgc28gdGhlIHJlYWwgZXhjaGFuZ2UgIHJhdGUgbWVhc3VyZXMgcHJpY2VzIGFicm9hZCByZWxhdGl2ZSB0byB0aG9zZSAgYXQgaG9tZS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSWYgdGhlIHJlYWwgIGV4Y2hhbmdlIHJhdGUgaXMgZXF1YWwgdG8gb25lLCBjdXJyZW5jaWVzICBhcmUgYXQgcHVyY2hhc2luZyBwb3dlciBwYXJpdHkuIFRoaXMgIG1lYW5zIHRoYXQgZ29vZHMgY29zdCB0aGUgc2FtZSBpbiB0d28gIGNvdW50cmllcyB3aGVuIG1lYXN1cmVkIGluIHRoZSBzYW1lICBjdXJyZW5jeS4gSWYgdGhlIHJlYWwgZXhjaGFuZ2UgcmlzZXMgYWJvdmUgIG9uZSwgdGhpcyBtZWFucyB0aGF0IGdvb2RzIGFicm9hZCBoYXZlICBiZWNvbWUgbW9yZSBleHBlbnNpdmUgdGhhbiBnb29kcyBhdCAgaG9tZS4gVGhlIHJlYWwgZXhjaGFuZ2UgcmF0ZSBpcyBvZnRlbiB0YWtlbiAgYXMgYSBtZWFzdXJlIG9mIGEgY291bnRyeSdzIGludGVybmF0aW9uYWwgIGNvbXBldGl0aXZlbmVzcyAgd3cgdy4gY20gcmkgbC5vIG5saSBuZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAzIDAgIFNvdXJjZTogTkNFUlQgWElJLCBNYWNyb2Vjb25vbWljcywgIENoYXB0ZXIgNiBQYWdlIE5vLjc5ICBodHRwczovL3d3dy5yYmkub3JnLmluL3NjcmlwdHMvYnNfdmlld2NvbiB0ZW50LmFzcHg/SWQ9MjI0NyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 40,
      "question" : " Which of the following is/are the major pillars of Partnership for Global Infrastructure and Investment (PGII)? 1. Promoting gender equity and equality 2.  Bolstering digital information and ICT networks 3.  Building and upgrading the global health infrastructure 4.  Tackling the climate crisis and ensuring global energy security Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgVVMgYWxvbmcgd2l0aCBoaXMgRzcgYWxsaWVzIHVudmVpbGVkIHRoZSAgUGFydG5lcnNoaXAgZm9yIEdsb2JhbCBJbmZyYXN0cnVjdHVyZSBhbmQgIEludmVzdG1lbnQgKFBHSUkpLCBsYXJnZWx5IHNlZW4gYXMgYSBjb3VudGVyICB0byBDaGluYSdzIG11bHRpLXRyaWxsaW9uLWRvbGxhciBCZWx0IGFuZCBSb2FkICBJbml0aWF0aXZlIGFubm91bmNpbmcgdGhlIGNvbGxlY3RpdmUgIG1vYmlsaXNhdGlvbiBvZiAkNjAwIGJpbGxpb24gYnkgMjAyNyB0byAgZGVsaXZlciAnZ2FtZS1jaGFuZ2luZycgYW5kICd0cmFuc3BhcmVudCcgIGluZnJhc3RydWN0dXJlIHByb2plY3RzIHRvIGRldmVsb3BpbmcgYW5kICBtaWRkbGUtaW5jb21lIGNvdW50cmllcy4gIFRoZSBQR0lJIGlzIGJlaW5nIHNlZW4gYXMgdGhlIEc3J3MgY291bnRlciB0byAgQ2hpbmEncyBtdWx0aS10cmlsbGlvbi1kb2xsYXIgQmVsdCBhbmQgUm9hZCAgSW5pdGlhdGl2ZSAoQlJJKSB0byBidWlsZCBjb25uZWN0aXZpdHksICBpbmZyYXN0cnVjdHVyZSwgYW5kIHRyYWRlIHByb2plY3RzIGluIEFzaWEsICBFdXJvcGUsIEFmcmljYSwgYW5kIExhdGluIEFtZXJpY2EuICBUaGUgVS5TLiwgYWxvbmcgd2l0aCBHNyBwYXJ0bmVycyB0aGUgVS5LLiwgIEphcGFuLCBGcmFuY2UsIENhbmFkYSwgR2VybWFueSwgSXRhbHksIGFuZCAgdGhlIEV1cm9wZWFuIFVuaW9uIChFVSksIGhhZCBpbiAyMDIxICBhbm5vdW5jZWQgdGhlIGxhdW5jaCBvZiB0aGUgQnVpbGQgQmFjayAgQmV0dGVyIFdvcmxkIChCM1cpIHdpdGggdGhlIGFpbSBvZiAgbmFycm93aW5nIHRoZSAkNDAgdHJpbGxpb24gaW5mcmFzdHJ1Y3R1cmUgZ2FwICBpbiB0aGUgZGV2ZWxvcGluZyB3b3JsZC4gUEdJSSBpcyB0aGVyZWZvcmUsIGEgIHJlbGF1bmNoIG9mIE1yLiBCaWRlbidzIEIzVyBwbGFuLiAgQWxsIFBHSUkgcHJvamVjdHMgd2lsbCBiZSBkcml2ZW4gYnkgJ2ZvdXIgIHByaW9yaXR5IHBpbGxhcnMgdGhhdCB3aWxsIGRlZmluZSB0aGUgc2Vjb25kICBoYWxmIG9mIHRoZSAyMXN0IGNlbnR1cnknLiBUYWNrbGluZyB0aGUgIGNsaW1hdGUgY3Jpc2lzIGFuZCBlbnN1cmluZyBnbG9iYWwgZW5lcmd5ICBzZWN1cml0eSwgYm9sc3RlcmluZyBkaWdpdGFsIGluZm9ybWF0aW9uICBhbmQgSUNUIG5ldHdvcmtzLCBwcm9tb3RpbmcgZ2VuZGVyICBlcXVhbGl0eSBhbmQgZXF1aXR5LCBhbmQgbGFzdGx5LCBidWlsZGluZyAgYW5kIHVwZ3JhZGluZyB0aGUgZ2xvYmFsIGhlYWx0aCAgaW5mcmFzdHJ1Y3R1cmUgIEEgUEdJSSBwcm9qZWN0IGhhcyBiZWVuIGFubm91bmNlZCBpbiBJbmRpYS4gIE9uIHRoZSBvdGhlciBoYW5kLCBJbmRpYSBoYXMgc3RheWVkIGF3YXkgIGZyb20gQ2hpbmEncyBCUkksIGJlaW5nIHdhcnkgb2YgQmVpamluZydzIGFpbSAgdG8gaW5jcmVhc2UgaXRzIGluZmx1ZW5jZSBpbiB0aGUgSW5kaWFuIE9jZWFuICBSZWdpb24gIFNvdXJjZTogIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL2ludGVybmF0aSBvbmFsL2V4cGxhaW5lZC1nNy1jb3VudGVyLXRvLWNoaW5hLWJlbHQtIGFuZC1yb2FkL2FydGljbGU2NTU3NjU5NC5lY2UgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZSBkL2c3LWluZnJhc3RydWN0dXJlLWludmVzdG1lbnQtcGxhbi1jaGluYS0gYmVsdC1hbmQtcm9hZC1pbml0aWF0aXZlLWV4cGxhaW5lZC0gNzk5NjM3NC8gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "   2 only ",
        "option2" : "  1, 3 and 4 only ",
        "option3" : "  1, 2 and 4 only  ",
        "option4" : "  1, 2, 3 and 4  "
      }
    },
    {
      "index" : 41,
      "question" : " The term 'FASTER' Platform sometimes seen in the news is:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChiKSBpcyBjb3JyZWN0OiAgIENoaWVmIEp1c3RpY2Ugb2YgSW5kaWEgbGF1bmNoZWQgRkFTVEVSICAoRmFzdCBhbmQgU2VjdXJlZCBUcmFuc21pc3Npb24gb2YgIEVsZWN0cm9uaWMgUmVjb3JkcykgLSBhIGRpZ2l0YWwgcGxhdGZvcm0gIHRvIGNvbW11bmljYXRlIGludGVyaW0gb3JkZXJzLCBzdGF5ICBvcmRlcnMsIGJhaWwgb3JkZXJzIGV0Yy4sIG9mIHRoZSBTdXByZW1lICBDb3VydCB0byBhdXRob3JpdGllcyBjb25jZXJuZWQgdGhyb3VnaCBhICBzZWN1cmVkIGVsZWN0cm9uaWMgY29tbXVuaWNhdGlvbiAgY2hhbm5lbC4gIFRoZSBjb3VydCBoYWQgaGl0IHVwb24gdGhlIGNvbmNlcHQgYWZ0ZXIgIGNvbWluZyBhY3Jvc3MgYSBuZXdzcGFwZXIgcmVwb3J0IGFib3V0ICBkZWxheSBpbiByZWxlYXNlIG9mIHByaXNvbmVycyBvd2luZyB0byB0aGUgIGRlbGF5IGluIHBoeXNpY2FsIG9yZGVycyByZWFjaGluZyB0aGUgcHJpc29uICBhdXRob3JpdGllcy4gIFNvdXJjZTogQ0pJIE4gViBSYW1hbmEgbGF1bmNoZXMgc29mdHdhcmUgIHRvIHRyYW5zbWl0IGNvdXJ0IG9yZGVycyBzd2lmdGx5IHwgSW5kaWEgIE5ld3MsVGhlIEluZGlhbiBFeHByZXNzICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  A web portal for fast delivery of  land ownership certificates.  ",
        "option2" : " A digital platform to communicate  order of judiciary to officers. ",
        "option3" : " An e-Governance initiative to  regularise the railway departures  and arrivals. ",
        "option4" : " An indigenously built satellite- based portal to communicate  weather reports in real time to  farmers.   "
      }
    },
    {
      "index" : 42,
      "question" : " With reference to the Urban Co-operative Banks (UCBs), which of the statements given below is/are correct? 1.  UCBs are regulated by the same institution which regulates Primary Agricultural Credit Societies (PACS). 2.  N S Vishwanathan Committee was constituted for strengthening the UCBs. 3.  They cannot conduct business in rural areas. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgc2hvcnQtdGVybSAgY28tb3BlcmF0aXZlIGNyZWRpdCBzdHJ1Y3R1cmUgb3BlcmF0ZXMgd2l0aCBhICB0aHJlZS10aWVyIHN5c3RlbSAtIFByaW1hcnkgQWdyaWN1bHR1cmFsICBDcmVkaXQgU29jaWV0aWVzIChQQUNTKSBhdCB0aGUgdmlsbGFnZSBsZXZlbCwgIENlbnRyYWwgQ29vcGVyYXRpdmUgQmFua3MgKENDQnMpIGF0IHRoZSAgZGlzdHJpY3QgbGV2ZWwgYW5kIFN0YXRlIENvb3BlcmF0aXZlIEJhbmtzICAoU3RDQnMpIGF0IHRoZSBTdGF0ZSBsZXZlbC4gUEFDUyBhcmUgb3V0c2lkZSAgdGhlIHB1cnZpZXcgb2YgdGhlIEJhbmtpbmcgUmVndWxhdGlvbiAgQWN0LCAxOTQ5IGFuZCBoZW5jZSBub3QgcmVndWxhdGVkIGJ5IHRoZSAgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhLiAgIFByaW1hcnkgQ29vcGVyYXRpdmUgQmFua3MsIHBvcHVsYXJseSAga25vd24gYXMgVXJiYW4gQ29vcGVyYXRpdmUgQmFua3MgKFVDQnMpICBhcmUgY29vcGVyYXRpdmUgc29jaWV0aWVzIHJlZ2lzdGVyZWQgdW5kZXIgIHByb3Zpc2lvbnMgb2YgdGhlIHJlc3BlY3RpdmUgU3RhdGUgIENvb3BlcmF0aXZlIFNvY2lldGllcyBBY3Qgb3IgTXVsdGktc3RhdGUgIENvb3BlcmF0aXZlIFNvY2lldGllcyBBY3QsIDIwMDIuIFVDQnMgYXJlICBzdXBlcnZpc2VkIHVuZGVyIHRoZSBSZWdpc3RyYXIgb2YgIENvb3BlcmF0aXZlIFNvY2lldGllcy4gSG93ZXZlciwgdGhlIHBvd2VyICB0byBpc3N1ZSBiYW5raW5nIGxpY2Vuc2VzIGFuZCByZWd1bGF0ZSwgIHN1cGVydmlzZSBhbmQgZGV2ZWxvcCBiYW5raW5nIGZ1bmN0aW9ucyBvZiAgVUNCcyBhcmUgdmVzdGVkIHdpdGggdGhlIFJCSSBieSB2aXJ0dWUgb2YgdGhlICBCYW5raW5nIFJlZ3VsYXRpb24gKEJSKSBBY3QsIDE5NDkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQW4gZXhwZXJ0ICBjb21taXR0ZWUsIGhlYWRlZCBieSBmb3JtZXIgUkJJIGRlcHV0eSAgZ292ZXJub3IgTiBTIFZpc2h3YW5hdGhhbiwgaGFkIG1hZGUgYSAgaG9zdCBvZiByZWNvbW1lbmRhdGlvbnMgZm9yIHN0cmVuZ3RoZW5pbmcgIHRoZSBVQ0JzLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUcmFkaXRpb25hbGx5LCB0aGUgIGFyZWEgb2Ygb3BlcmF0aW9uIG9mIHRoZSBVQ0JzIGlzIGNvbmZpbmVkIHRvICB3dyB3LiB1IHNjIG0gdGVyIGlhbCAub24gaW5lICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDMgMSAgbWV0cm9wb2xpdGFuLCB1cmJhbiBvciBzZW1pdXJiYW4gY2VudHJlcyAgYW5kIGNhdGVycyB0byB0aGUgbmVlZHMgb2Ygc21hbGwgYm9ycm93ZXJzICBpbmNsdWRpbmcgTVNNRXMsIHJldGFpbCB0cmFkZXJzLCBzbWFsbCAgZW50cmVwcmVuZXVycywgcHJvZmVzc2lvbmFscyBhbmQgdGhlICBzYWxhcmllZCBjbGFzcy4gSG93ZXZlciwgdGhlcmUgaXMgbm8gZm9ybWFsICByZXN0cmljdGlvbiBhcyBzdWNoIGFuZCB0b2RheSBVQ0JzIGNhbiAgY29uZHVjdCBidXNpbmVzcyBpbiB0aGUgZW50aXJlIGRpc3RyaWN0IGluICB3aGljaCB0aGV5IGFyZSByZWdpc3RlcmVkLCBpbmNsdWRpbmcgcnVyYWwgIGFyZWFzLiBXZWxsIG1hbmFnZWQgcHJpbWFyeSBVQ0JzIHdpdGggIGRlcG9zaXRzIG9mIG92ZXIgUnMuIDUwIGNyb3JlIGFyZSBhbHNvIGFsbG93ZWQgIHRvIG9wZXJhdGUgaW4gbW9yZSB0aGFuIG9uZSBzdGF0ZSBzdWJqZWN0IHRvICBjZXJ0YWluIG5vcm1zLiAgU291cmNlOiBJbmRpYW4gRWNvbm9teSBieSBSYW1lc2ggU2luZ2g+ICBDaGFwdGVyLTEyID4gUGFnZSBuby0gMzYzICBodHRwczovL3d3dy5yYmkub3JnLmluL1NjcmlwdHMvQlNfUHJlc3NSIGVsZWFzZURpc3BsYXkuYXNweD9wcmlkPTUyMDk0ICBodHRwczovL3d3dy5maW5hbmNpYWxleHByZXNzLmNvbS9pbmR1c3RyIHkvYmFua2luZy1maW5hbmNlL25ldy1yYmktZ3VpZGVsaW5lcy1vbi0gdXJiYW4tY29vcGVyYXRpdmUtYmFua3MtIGV4cGxhaW5lZC8yNDY1NDIzLyAgaHR0cHM6Ly93d3cucmJpLm9yZy5pbi9TQ1JJUFRzL2Z1bl91cmJhIG4uYXNweCAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 43,
      "question" : " Consider the following statements in the context of International Bullion Exchange (IIBX): 1. It is India's first International Bullion Exchange setup in the GIFT city, Gandhinagar. 2.  All contracts traded on IIBX are in US Dollars. 3.  The platform is regulated by the Securities and Exchange Board of India. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSUlCWCBpcyBJbmRpYSdzIGZpcnN0ICBJbnRlcm5hdGlvbmFsIEJ1bGxpb24gRXhjaGFuZ2Ugc2V0IHVwIGF0IHRoZSAgR0lGVCBDaXR5LCBHYW5kaGluYWdhci4gSUlCWCBvZmZlcnMgYSAgZGl2ZXJzaWZpZWQgcG9ydGZvbGlvIG9mIHByb2R1Y3RzIGFuZCAgdGVjaG5vbG9neSBzZXJ2aWNlcyBhdCBhIGNvc3Qgd2hpY2ggaXMgZmFyICBtb3JlIGNvbXBldGl0aXZlIHRoYW4gdGhlIEluZGlhbiBleGNoYW5nZXMgIGFzIHdlbGwgYXMgb3RoZXIgZ2xvYmFsIGV4Y2hhbmdlcyBpbiBIb25nICBLb25nIFNpbmdhcG9yZSwgRHViYWksIExvbmRvbiBhbmQgTmV3ICBZb3JrLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEdvbGQgMSBrZyA5OTUgIHB1cml0eSBhbmQgZ29sZCAxMDAgZ20gOTk5IHB1cml0eSB3aXRoIGEgIFQrMCBzZXR0bGVtZW50ICgxMDAlIHVwZnJvbnQgbWFyZ2luKSBhcmUgIGV4cGVjdGVkIHRvIHRyYWRlIGF0IElJQlggaW5pdGlhbGx5LiBBbGwgIGNvbnRyYWN0cyBhcmUgbGlzdGVkLCB0cmFkZWQgJiBzZXR0bGVkIG9uIElJQlggIGFyZSBpbiBVUyBEb2xsYXJzLiAgSUlCWCB3aWxsIGZhY2lsaXRhdGUgZWZmaWNpZW50IHByaWNlIGRpc2NvdmVyeSAgd2l0aCB0aGUgYXNzdXJhbmNlIG9mIHJlc3BvbnNpYmxlIHNvdXJjaW5nICBhbmQgcXVhbGl0eSwgYXBhcnQgZnJvbSBnaXZpbmcgaW1wZXR1cyB0byB0aGUgIGZpbmFuY2lhbGlzYXRpb24gb2YgZ29sZCBpbiBJbmRpYS4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogSW50ZXJuYXRpb25hbCAgRmluYW5jaWFsIFNlcnZpY2VzIENlbnRyZXMgQXV0aG9yaXR5IChJRlNDQSkgIGlzIHRoZSByZWd1bGF0b3Igb2YgSUlCWC4gRmluYW5jZSBNaW5pc3RlciBpbiAgVW5pb24gQnVkZ2V0IDIwMjAtMjEgaGFkIGFubm91bmNlZCB0aGUgIHNldHRpbmcgdXAgb2YgSUlCWCBhdCBJRlNDQS4gIFNvdXJjZTogIGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9uZXdzL2luZGlhL2luZCBpYXMtZmlyc3QtaW50ZXJuYXRpb25hbC1idWxsaW9uLWV4Y2hhbmdlLSBpaWJ4LXdoYXQtaXQtaXMtaG93LWl0LXdvcmtzLWV4cGxhaW5lZC0gMTE2NTg5ODIzMTMyOTUuaHRtbCAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 44,
      "question" : " Consider the following statements in the context of call money market: 1. It facilitates the overnight borrowing or lending of unsecured funds. 2.  Interest rate in call money market is equal to repo rate fixed by the RBI. 3.  This market is regulated by RBI. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGNhbGwgbW9uZXkgIG1hcmtldCBpcyBhbiBpbXBvcnRhbnQgc2VnbWVudCBvZiB0aGUgIG1vbmV5IG1hcmtldCB3aGVyZSBib3Jyb3dpbmcgYW5kIGxlbmRpbmcgIG9mIGZ1bmRzIHRha2UgcGxhY2Ugb24gb3Zlcm5pZ2h0IGJhc2lzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFBhcnRpY2lwYW50cyBpbiAgY2FsbC9ub3RpY2UgbW9uZXkgbWFya2V0IGN1cnJlbnRseSBpbmNsdWRlICBiYW5rcywgUHJpbWFyeSBEZWFsZXJzIChQRHMpLCBkZXZlbG9wbWVudCAgZmluYW5jZSBpbnN0aXR1dGlvbnMsIGluc3VyYW5jZSBjb21wYW5pZXMgIGFuZCBzZWxlY3QgbXV0dWFsIGZ1bmRzLiBPZiB0aGVzZSwgYmFua3MgIGFuZCBQRHMgY2FuIG9wZXJhdGUgYm90aCBhcyBib3Jyb3dlcnMgYW5kICBsZW5kZXJzIGluIHRoZSBtYXJrZXQuIENhbGwgTW9uZXkgbWFya2V0ICBpcyByZWd1bGF0ZWQgYnkgUkJJLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJdCBjYXRlcnMgdG8gdGhlICBkYXktdG8tZGF5IGNhc2ggbmVlZHMgb2YgYmFua3MgYW5kIHRoZSByYXRlICBhdCB3aGljaCB0aGVzZSB0cmFuc2FjdGlvbnMgdGFrZSBwbGFjZSBpcyB0aGUgIGNhbGwgcmF0ZS4gSW4gb3JkZXIgdG8gbWVldCBjYXNoIHJlc2VydmUgcmF0aW8gIGFuZCBzdGF0dXRvcnkgbGlxdWlkaXR5IHJhdGlvIHJlcXVpcmVtZW50cyAgYW5kIHRvIGZ1bGZpbCBzdWRkZW4gZGVtYW5kcyBmb3IgZnVuZHMsICBiYW5rcyBib3Jyb3cgaW4gdGhlIGNhbGwgbW9uZXkgbWFya2V0LiAgUHJldmFpbGluZyBsaXF1aWRpdHkgY29uZGl0aW9ucyBpbmZsdWVuY2UgdGhlICBjYWxsIG1vbmV5IHJhdGUgaS5lLiwgdGlnaHRlbmluZyBsaXF1aWRpdHkgIGNvbmRpdGlvbnMgbGVhZCB0byBhIHJpc2UgaW4gY2FsbCBtb25leSByYXRlcyAgYW5kIHZpY2UgdmVyc2EuIEVsaWdpYmxlIHBhcnRpY2lwYW50cyBhcmUgIGZyZWUgdG8gZGVjaWRlIG9uIGludGVyZXN0IHJhdGVzIGluIHRoZSBDYWxsLCAgTm90aWNlIGFuZCBUZXJtIE1vbmV5IE1hcmtldHMuICBTb3VyY2U6ICBodHRwczovL3JiaS5vcmcuaW4vc2NyaXB0cy9Ob3RpZmljYXRpb25Vc2VyLiBhc3B4P0lkPTE3NTImTW9kZT0wI1BhcnRpY2lwYW50cyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 45,
      "question" : " Which of the following statements is/are correct about Treasury Bills? 1.  These are long term financial market instrument with a minimum maturity period of one year. 2.  They can be issued by the Reserve Bank of India (RBI) only on behalf of the Central government. www.upscmaterial. nlineKSG: MEMBER'S COPY  3.  They are not tradable in secondary market. 4. Individuals can also directly purchase treasury bills from primary market. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IGFuZCBzdGF0ZW1lbnQgMiAgaXMgY29ycmVjdDogVHJlYXN1cnkgYmlsbHMgYXJlIGlzc3VlZCB3aGVuICB0aGUgZ292ZXJubWVudCBuZWVkcyBtb25leSBmb3IgYSBzaG9ydCAgcGVyaW9kLiBUaGVzZSBiaWxscyBhcmUgaXNzdWVkIG9ubHkgYnkgdGhlICBjZW50cmFsIGdvdmVybm1lbnQsIGFuZCB0aGUgaW50ZXJlc3Qgb24gIHRoZW0gaXMgZGV0ZXJtaW5lZCBieSBtYXJrZXQgZm9yY2VzLiAgVHJlYXN1cnkgYmlsbHMsIG9yIFQtYmlsbHMsIGhhdmUgYSBtYXhpbXVtICBtYXR1cml0eSBwZXJpb2Qgb2YgMzY0IGRheXMuIFNvLCB0aGV5IGFyZSAgY2F0ZWdvcml6ZWQgYXMgbW9uZXkgbWFya2V0IGluc3RydW1lbnRzICAobW9uZXkgbWFya2V0IGRlYWxzIHdpdGggZnVuZHMgd2l0aCBhICBtYXR1cml0eSBvZiBsZXNzIHRoYW4gb25lIHllYXIpLiBBdCBwcmVzZW50LCAgdHJlYXN1cnkgYmlsbHMgYXJlIGlzc3VlZCBpbiB0aHJlZSAgbWF0dXJpdGllcyAtIDkxLWRheSwgMTgyLWRheSBhbmQgMzY0LSBkYXkuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRyZWFzdXJ5IGJpbGxzICBoYXZlIGFuIGFkdmFudGFnZSBvdmVyIG90aGVyIG1hcmtldCAgaW5zdHJ1bWVudHMgYmVjYXVzZSBvZiB0aGUgemVyby1yaXNrICB3dyB3LiB1cCBzYyB0ZXIgaWFsIC5vbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyAzIDIgIHdlaWdodGFnZSBhc3NvY2lhdGVkIHdpdGggdGhlbS4gVGhlICBzZWNvbmRhcnkgbWFya2V0IG9mIFQtQmlsbHMgaXMgdmVyeSBhY3RpdmUgIGFuZCB0aGV5IGhhdmUgYSBoaWdoZXIgZGVncmVlIG9mIHRyYWRhYmlsaXR5LiAgSW5kaXZpZHVhbHMsIHRydXN0cywgaW5zdGl0dXRpb25zIGFuZCBiYW5rcyAgY2FuIHB1cmNoYXNlIFQtQmlsbHMuIEJ1dCB0aGV5IGFyZSB1c3VhbGx5ICBoZWxkIGJ5IGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMuIFRoZXkgaGF2ZSBhICB2ZXJ5IGltcG9ydGFudCByb2xlIGluIHRoZSBmaW5hbmNpYWwgbWFya2V0ICBiZXlvbmQgaW52ZXN0bWVudCBpbnN0cnVtZW50cy4gQmFua3MgZ2l2ZSAgdHJlYXN1cnkgYmlsbHMgdG8gdGhlIFJCSSB0byBnZXQgbW9uZXkgdW5kZXIgIHJlcG8uIFNpbWlsYXJseSwgdGhleSBjYW4gYWxzbyBrZWVwIGl0IHRvIGZ1bGZpbCAgdGhlaXIgU3RhdHV0b3J5IExpcXVpZCBSYXRpbyAoU0xSKSAgcmVxdWlyZW1lbnRzLiAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogSW5kaXZpZHVhbHMgY2FuIG5vdyAgZGlyZWN0bHkgcHVyY2hhc2UgdHJlYXN1cnkgYmlsbHMsIGRhdGVkICBzZWN1cml0aWVzLCBzb3ZlcmVpZ24gZ29sZCBib25kcyAoU0dCKSBhbmQgIHN0YXRlIGRldmVsb3BtZW50IGxvYW5zIChTRExzKSBmcm9tICBwcmltYXJ5IGFzIHdlbGwgYXMgc2Vjb25kYXJ5IG1hcmtldHMsICB0aGFua3MgdG8gdGhlIFJCSSBSZXRhaWwgRGlyZWN0IFNjaGVtZS4gIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3MtIHN0YW5kYXJkLmNvbS9hYm91dC93aGF0LWlzLXRyZWFzdXJ5LWJpbGxzICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 and 4 only ",
        "option2" : "  3 and 4 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 46,
      "question" : " Which among the following categories are included under Priority Sector Lending (PSL)? 1.  Agriculture  2.  Education  3.  Social Infrastructure 4.  Housing 5. Micro, Small and Medium Enterprises  6.  Export Credit  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgUHJpb3JpdHkgU2VjdG9yIG1lYW5zIHRob3NlIHNlY3RvcnMgd2hpY2ggIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGFuZCBSZXNlcnZlIEJhbmsgIG9mIEluZGlhIGNvbnNpZGVyIGFzIGltcG9ydGFudCBmb3IgdGhlICBkZXZlbG9wbWVudCBvZiB0aGUgYmFzaWMgbmVlZHMgb2YgdGhlICBjb3VudHJ5IGFuZCBhcmUgdG8gYmUgZ2l2ZW4gcHJpb3JpdHkgb3ZlciAgb3RoZXIgc2VjdG9ycy4gVGhlIGJhbmtzIGFyZSBtYW5kYXRlZCB0byAgZW5jb3VyYWdlIHRoZSBncm93dGggb2Ygc3VjaCBzZWN0b3JzIHdpdGggIGFkZXF1YXRlIGFuZCB0aW1lbHkgY3JlZGl0LiAgVGhlIGNhdGVnb3JpZXMgb2YgcHJpb3JpdHkgc2VjdG9yIGFyZSBhcyAgZm9sbG93czogIDEuIEFncmljdWx0dXJlICAyLiBNaWNybywgU21hbGwgYW5kIE1lZGl1bSBFbnRlcnByaXNlcyAgMy4gRXhwb3J0IENyZWRpdCAgNC4gRWR1Y2F0aW9uICA1LiBIb3VzaW5nICA2LiBTb2NpYWwgSW5mcmFzdHJ1Y3R1cmUgIDcuIFJlbmV3YWJsZSBFbmVyZ3kgIDguIE90aGVycyAgU291cmNlOiAgaHR0cHM6Ly92aWthc3BlZGlhLmluL2FncmljdWx0dXJlL2FncmktIGNyZWRpdC9jcmVkaXQtaW5zdGl0dXRpb25zL3ByaW9yaXR5LXNlY3Rvci0gbGVuZGluZyAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 3 and 6 only ",
        "option2" : "  2, 5 and 6 only ",
        "option3" : "  1, 3, 4 and 5 only ",
        "option4" : "  1, 2, 3, 4, 5 and 6   "
      }
    },
    {
      "index" : 47,
      "question" : " Which of the following factors are taken into account by Commission for Agricultural Costs and Prices (CACP) while calculating Minimum Support Price (MSP)? 1.  Inter-crop price parity 2.  Cost of production 3.  Domestic and international prices 4. The terms of trade between agriculture and non-agriculture. 5.  Upcoming Elections in some states Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgVGhlIE1TUHMgYXJlIGFubm91bmNlZCBieSB0aGUgVW5pb24gIGdvdmVybm1lbnQgYW5kIGFzIHN1Y2gsIGl0IGlzIHRoZSAgZ292ZXJubWVudCdzIGRlY2lzaW9uLiBCdXQgdGhlIGdvdmVybm1lbnQgIGxhcmdlbHkgYmFzZXMgaXRzIGRlY2lzaW9uIG9uIHRoZSAgcmVjb21tZW5kYXRpb25zIG9mIHRoZSBDb21taXNzaW9uIGZvciAgQWdyaWN1bHR1cmFsIENvc3RzIGFuZCBQcmljZXMgKENBQ1ApLiAgV2hpbGUgcmVjb21tZW5kaW5nIE1TUHMsIHRoZSBDQUNQIGxvb2tzICBhdCB0aGUgZm9sbG93aW5nIGZhY3RvcnM6ICDvgrcgSW50ZXItY3JvcCBwcmljZSBwYXJpdHkgICDvgrcgVGhlIHRlcm1zIG9mIHRyYWRlIGJldHdlZW4gIGFncmljdWx0dXJlIGFuZCBub24tYWdyaWN1bHR1cmUuICDvgrcgVGhlIG1pbmltdW0gb2YgNTAgcGVyIGNlbnQgYXMgdGhlICBtYXJnaW4gb3ZlciB0aGUgY29zdCBvZiBwcm9kdWN0aW9uLiAg74K3IFRoZSBkZW1hbmQgYW5kIHN1cHBseSBvZiBhIGNvbW1vZGl0eS4gIO+CtyBDb3N0IG9mIHByb2R1Y3Rpb24gIO+CtyBUaGUgbWFya2V0IHByaWNlIHRyZW5kcyAoYm90aCAgZG9tZXN0aWMgYW5kIGludGVybmF0aW9uYWwpICDvgrcgVGhlIGxpa2VseSBpbXBsaWNhdGlvbnMgb2YgYW4gTVNQIG9uICBjb25zdW1lcnMgb2YgdGhhdCBwcm9kdWN0LiAgU291cmNlOiAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lIGQvd2lsbC1hLWxlZ2FsLWd1YXJhbnRlZS1vbi1tc3Atc29sdmUtIGluZGlhcy1mYXJtLWRpc3RyZXNzLTc2MzQ3NTMvICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1, 2 and 3 only ",
        "option3" : "  1, 2, 3 and 4 only  ",
        "option4" : "  1, 2, 3, 4 and 5  "
      }
    },
    {
      "index" : 48,
      "question" : " Which of the following major policy measures and reforms are taken by the government to support food processing sector? 1.  Inclusion of food & agro-based processing units and cold chain as agricultural activity under Priority Sector Lending (PSL) norms. 2. The FSSAI has shifted from product-by-product approval to an ingredient and additive based approval process. 3.  Allowing 100% FDI under the government approval route for e-commerce in respect of food products manufactured/ produced in India. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgVGhlIEdvdmVybm1lbnQgaGFzIHRha2VuIHZhcmlvdXMgcG9saWN5ICBtZWFzdXJlcyBhbmQgcmVmb3JtcyB0byBzdXBwb3J0IGZvb2QgIHByb2Nlc3Npbmcgc2VjdG9yIGFzIGluZGljYXRlZCBiZWxvdzogIO+CtyBJbmNsdXNpb24gb2YgZm9vZCAmIGFncm8tYmFzZWQgIHByb2Nlc3NpbmcgdW5pdHMgYW5kIGNvbGQgY2hhaW4gYXMgIGFncmljdWx0dXJhbCBhY3Rpdml0eSB1bmRlciBQcmlvcml0eSAgU2VjdG9yIExlbmRpbmcgKFBTTCkgbm9ybXMgaW4gQXByaWwgIDIwMTUuICDvgrcgQXMgYSBtZWFzdXJlIHRvd2FyZHMgb2YgZWFzZSBvZiBkb2luZyAgYnVzaW5lc3MsIHRoZSBGb29kIFNhZmV0eSBhbmQgIFN0YW5kYXJkcyBBdXRob3JpdHkgb2YgSW5kaWEgKEZTU0FJKSAgdGhyb3VnaCBub3RpZmljYXRpb25zIGluIDIwMTYgaGFzICBzaGlmdGVkIGZyb20gcHJvZHVjdC1ieS1wcm9kdWN0ICBhcHByb3ZhbCB0byBhbiBpbmdyZWRpZW50IGFuZCBhZGRpdGl2ZSAgYmFzZWQgYXBwcm92YWwgcHJvY2Vzcy4gIO+CtyBBIFNwZWNpYWwgRm9vZCBQcm9jZXNzaW5nIEZ1bmQgb2YgUnMuICAyMDAwIGNyb3JlIHdhcyBzZXQgdXAgd2l0aCBOYXRpb25hbCAgQmFuayBmb3IgQWdyaWN1bHR1cmUgYW5kIFJ1cmFsICBEZXZlbG9wbWVudCAoTkFCQVJEKSB0byBwcm92aWRlICBhZmZvcmRhYmxlIGNyZWRpdCBmb3IgaW52ZXN0bWVudHMgaW4gIHNldHRpbmcgdXAgTWVnYSBGb29kIFBhcmtzIChNRlApIGFzIHdlbGwgIGFzIHByb2Nlc3NpbmcgdW5pdHMgaW4gdGhlIE1GUHMuIEluICAyMDE5LCB0aGUgY292ZXJhZ2Ugb2YgdGhlIGZ1bmQgd2FzICBleHRlbmRlZCB0byBzZXR0aW5nIHVwIG9mIEFncm8gUHJvY2Vzc2luZyAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyAzICBDbHVzdGVycyBhbmQgaW5kaXZpZHVhbCBtYW51ZmFjdHVyaW5nICB1bml0cyB3aXRoaW4gdGhlbS4gIO+CtyAxMDAlIEZESSBpcyBwZXJtaXR0ZWQgdW5kZXIgdGhlICBhdXRvbWF0aWMgcm91dGUgaW4gdGhlIGZvb2QgcHJvY2Vzc2luZyAgc2VjdG9yIGFuZCAxMDAlIEZESSB1bmRlciAgR292ZXJubWVudCBhcHByb3ZhbCByb3V0ZSBpcyBhbGxvd2VkICBmb3IgcmV0YWlsIHRyYWRpbmcsIGluY2x1ZGluZyB0aHJvdWdoIGUtIGNvbW1lcmNlLCBpbiByZXNwZWN0IG9mIGZvb2QgcHJvZHVjdHMgIG1hbnVmYWN0dXJlZCBhbmQvb3IgcHJvZHVjZWQgaW4gIEluZGlhLiBBbGxvd2luZyAxMDAlIEZESSB0aHJvdWdoICBhdXRvbWF0aWMgcm91dGUgaGVscHMgdG8gYXR0cmFjdCBtb3JlICBGREkgYXMgdW5kZXIgdGhlIGF1dG9tYXRpYyByb3V0ZSwgdGhlICBpbnZlc3RtZW50IGRvZXMgbm90IHJlcXVpcmUgdGhlIHByaW9yICBhcHByb3ZhbC4gIFNvdXJjZTogIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLiBhc3B4P1BSSUQ9MTg0ODg0NSAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD8gUFJJRD0xNzgxMjU1ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 49,
      "question" : " Which of the following are possible applications of the 'Kisan Drone' in agriculture sector? 1.  Digitization of Land records  2.  Spraying insecticides and nutrients 3.  Survey of Land 4.  Crop Assessment  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgVW5pb24gRmluYW5jZSBNaW5pc3RlciBzYWlkIHRoZSBDZW50cmUgd2lsbCAgcHJvbW90ZSAnS2lzYW4gRHJvbmVzJyB0byBoZWxwIGZhcm1lcnMgIGFzc2VzcyBjcm9wcywgZGlnaXRpc2UgbGFuZCByZWNvcmRzIGFzIHdlbGwgIGFzIHNwcmF5IGluc2VjdGljaWRlcyBhbmQgbnV0cmllbnRzLiAgVGhlIGlkZWEgYmVoaW5kIHVzaW5nIGRyb25lcyBjb3VsZCBiZSB0byAgcmVkdWNlIGh1bWFuIGV4cG9zdXJlIHRvIHBvaXNvbm91cyAgY2hlbWljYWxzLCBUaGUgQ2VudHJlIGhhZCBlYXJsaWVyIGVudmlzaW9uZWQgIHVzaW5nIGRyb25lcyB0byBkaWdpdGlzZSBsYW5kIHJlY29yZHMuIFRoZXNlICBmbHlpbmcgb2JqZWN0cyB3aWxsIHN1cnZleSB0aGUgbGFuZCwgdGhlICBnb3Zlcm5tZW50IHByb3Bvc2VkLCBhbmQgb2ZmaWNpYWxzIGNhbiB1c2UgIHRoZSBkYXRhIHRvIG1hdGNoIHdpdGggcmVjb3JkZWQgaW5mb3JtYXRpb24sICBhY2NvcmRpbmcgdG8gdGhlIHBsYW4uIFRoZSBkaWdpdGlzZWQgZGF0YSAgY291bGQgYmUgdXNlZCB0byBidWlsZCBBZ3Jpc3RhaywgYSBjb2xsZWN0aW9uICBvZiB0ZWNobm9sb2d5LWJhc2VkIGludGVydmVudGlvbnMgaW4gIGFncmljdWx0dXJlICBUaGUgZmluYW5jZSBtaW5pc3RlciBhbHNvIHNhaWQgdGhlICBnb3Zlcm5tZW50IHdvdWxkIHByb21vdGUgc3RhcnQtdXBzICB0aHJvdWdoIGl0cyAnRHJvbmUgU2hha3RpJyBpbml0aWF0aXZlLiBJdCAgd2lsbCBmYWNpbGl0YXRlIHRoZSB1c2Ugb2YgZHJvbmVzIGFzIGEgc2VydmljZS4gIERyb25lIHNlcnZpY2VzIGFyZSBhbiBlbWVyZ2luZyBtYXJrZXQgdGhhdCAgZmluZHMgYXBwbGljYXRpb24gaW4gYWdyaWN1bHR1cmUsICBjb25zdHJ1Y3Rpb24sIHNlYXJjaCBhbmQgcmVzY3VlLCAgcGFja2FnZSBkZWxpdmVyeSwgaW5kdXN0cmlhbCBpbnNwZWN0aW9uLCAgaW5zdXJhbmNlIGFuZCB2aWRlb2dyYXBoeS4gICBTb3VyY2U6ICBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vbmV3cy9hZ3JpIGN1bHR1cmUvdW5pb24tYnVkZ2V0LTIwMjItMjMtaG93LXdpbGwtIGtpc2FuLWRyb25lcy1iZW5lZml0LWZhcm1lcnMtZXhwZXJ0cy1hc2stIDgxMzcxICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 4 only ",
        "option2" : "  2, 3 and 4 only ",
        "option3" : "  1, 2 and 3 only ",
        "option4" : "  1, 2, 3 and 4  "
      }
    },
    {
      "index" : 50,
      "question" : " Consider the following statements regarding the Foreign Investment Facilitation Portal (FIFP): 1.  It is a single point interface of the Government of India for investors to facilitate Foreign Portfolio Investment. 2.  It is being administered by the Department of Investment and Public Asset Management, Ministry of Commerce & Industry. 3. It does not require physical submission of the copy if the online filing of application is with digital signature by authorised signatory. www.upscmat rial.onlineKSG: MEMBER'S COPY  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgRm9yZWlnbiAgSW52ZXN0bWVudCBGYWNpbGl0YXRpb24gUG9ydGFsIChGSUZQKSBpcyB0aGUgIG5ldyBvbmxpbmUgc2luZ2xlIHBvaW50IGludGVyZmFjZSBvZiB0aGUgIEdvdmVybm1lbnQgb2YgSW5kaWEgZm9yIGludmVzdG9ycyB0byAgZmFjaWxpdGF0ZSBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhpcyBwb3J0YWwgaXMgIGJlaW5nIGFkbWluaXN0ZXJlZCBieSB0aGUgRGVwYXJ0bWVudCBmb3IgIFByb21vdGlvbiBvZiBJbmR1c3RyeSBhbmQgSW50ZXJuYWwgVHJhZGUgIChEUElJVCksIE1pbmlzdHJ5IG9mIENvbW1lcmNlICYgIEluZHVzdHJ5LiBUaGlzIHBvcnRhbCB3aWxsIGNvbnRpbnVlIHRvICBmYWNpbGl0YXRlIHRoZSBzaW5nbGUgd2luZG93IGNsZWFyYW5jZSBvZiAgYXBwbGljYXRpb25zIHdoaWNoIGFyZSB0aHJvdWdoIGFwcHJvdmFsICByb3V0ZS4gVXBvbiByZWNlaXB0IG9mIHRoZSBGREkgYXBwbGljYXRpb24sICB0aGUgY29uY2VybmVkIEFkbWluaXN0cmF0aXZlICBNaW5pc3RyeS9EZXBhcnRtZW50IHNoYWxsIHByb2Nlc3MgdGhlICBhcHBsaWNhdGlvbiBhcyBwZXIgdGhlIFN0YW5kYXJkIE9wZXJhdGlvbiAgUHJvY2VkdXJlIChTT1ApLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IElmIHRoZSBvbmxpbmUgZmlsaW5nICBvZiBhcHBsaWNhdGlvbiBpcyB3aXRoIGRpZ2l0YWwgc2lnbmF0dXJlIGJ5ICBhdXRob3Jpc2VkIHNpZ25hdG9yeSwgcGh5c2ljYWwgIHN1Ym1pc3Npb24gb2YgdGhlIGNvcHkgaXMgbm90IHJlcXVpcmVkLiAgRm9yIGFwcGxpY2F0aW9ucyB3aXRob3V0IGRpZ2l0YWwgc2lnbmF0dXJlLCAgb25jZSB0aGUgZS1maWxpbmcgb2YgdGhlIGFwcGxpY2F0aW9uIGlzICBjb21wbGV0ZWQsIHRoZSBhcHBsaWNhbnQgaXMgcmVxdWlyZWQgdG8gIGZpbGUvY291cmllciBvbmx5IFNJTkdMRSBzaWduZWQgY29weSBvZiB0aGUgIHByaW50ZWQgdmVyc2lvbiBvZiB0aGUgb25saW5lIGFwcGxpY2F0aW9uLCAgYWxvbmcgd2l0aCB0aGUgZHVseSBhdXRoZW50aWNhdGVkIGNvcHkgb2YgdGhlICBkb2N1bWVudHMgYXR0YWNoZWQgd2l0aCB0aGUgYXBwbGljYXRpb24sIHRvICB0aGUgTm9kYWwgT2ZmaWNlcnMgb2YgdGhlIGNvbmNlcm5lZCAgQWRtaW5pc3RyYXRpdmUgTWluaXN0cnkvRGVwYXJ0bWVudCBhcyBwZXIgIHRoZSBTT1AuICAgU291cmNlOiBGb3JlaWduIEludmVzdG1lbnQgRmFjaWxpdGF0aW9uICBQb3J0YWwsIElORElBIChmaWZwLmdvdi5pbikgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  3 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 51,
      "question" : " Which of the following statements is/are correct? 1.  Inflation redistributes wealth from creditors to debtors. 2.  An increase in inflation increases the real value of income of people. 3.  Inflation may make our consumption levels of goods and services fall. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICBJbmZsYXRpb24gcmVkaXN0cmlidXRlcyB3ZWFsdGggZnJvbSAgY3JlZGl0b3JzIHRvIGRlYnRvcnMsIGkuZS4sIGxlbmRlcnMgc3VmZmVyIGFuZCAgYm9ycm93ZXJzIGJlbmVmaXQgb3V0IG9mIGluZmxhdGlvbi4gVGhlICBvcHBvc2l0ZSBlZmZlY3QgdGFrZXMgcGxhY2Ugd2hlbiBpbmZsYXRpb24gIGZhbGxzIChpLmUuLCBkZWZsYXRpb24pLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiAgIEluZmxhdGlvbiBhZmZlY3RzIHRoZSBpbmNvbWUgb2YgaW5kaXZpZHVhbCBhbmQgIGZpcm1zIGFsaWtlLiBBbiBpbmNyZWFzZSBpbiBpbmZsYXRpb24sICBpbmNyZWFzZXMgdGhlICdub21pbmFsJyB2YWx1ZSBvZiBpbmNvbWUsICB3aGlsZSB0aGUgJ3JlYWwnIHZhbHVlIG9mIGluY29tZSByZW1haW5zICB0aGUgc2FtZS4gSW5jcmVhc2VkIHByaWNlIGxldmVscyBlcm9kZSB0aGUgIHB1cmNoYXNpbmcgcG93ZXIgb2YgdGhlIG1vbmV5IGluIHRoZSBzaG9ydC0gcnVuLCBidXQgaW4gdGhlIGxvbmcgcnVuIHRoZSBpbmNvbWUgbGV2ZWxzICBhbHNvIGluY3JlYXNlIChtYWtpbmcgdGhlIG5vbWluYWwgdmFsdWUgb2YgIHd3IHcuIHVwIHNjIG1hIGVyaSBhbC4gb24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyA0ICBpbmNvbWUgZ29pbmcgdXB3YXJkKS4gSXQgbWVhbnMsIGluIGEgZ2l2ZW4gIHBlcmlvZCBvZiB0aW1lIGluY29tZSBtYXkgZ28gdXAgZHVlIHRvIHR3byAgcmVhc29ucywgdml6LiwgaW5mbGF0aW9uYXJ5IHNpdHVhdGlvbiBhbmQgIGluY3JlYXNlZCBlYXJuaW5nLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogICBJbmZsYXRpb24gYWZmZWN0cyBib3RoIHRoZSBmb3JtcyBvZiAgZXhwZW5kaXR1cmVzIC1jb25zdW1wdGlvbiBhcyB3ZWxsIGFzICBpbnZlc3RtZW50LiBJbmNyZWFzZWQgcHJpY2VzIG1ha2Ugb3VyICBjb25zdW1wdGlvbiBsZXZlbHMgZmFsbCBhcyBnb29kcyBhbmQgIHNlcnZpY2VzIHdlIGJ1eSBnZXQgY29zdGxpZXIuIFdlIHNlZSBhICB0ZW5kZW5jeSBhbW9uZyB0aGUgcGVvcGxlIHRvIGN1dCB0aGVpciAgY29uc3VtcHRpb24gbGV2ZWxzIGFpbWVkIGF0IG5ldXRyYWxpc2luZyAgdGhlIGltcGFjdCBvZiBwcmljZSByaXNlLSBtYWtpbmcgIGNvbnN1bXB0aW9uIGV4cGVuZGl0dXJlIGZhbGwuIEV4YWN0ICBvcHBvc2l0ZSBoYXBwZW5zIG9uY2UgcHJpY2VzIGhlYWQgIGRvd253YXJkLiBPbiB0aGUgb3RoZXIgaGFuZCBpbmZsYXRpb25zICBtYWtlcyAnaW52ZXN0bWVudCcgZXhwZW5kaXR1cmUgaW5jcmVhc2UgYXMgIGEgcmVzdWx0IG9mIGRlY3JlYXNlZCBjb3N0IG9mIG1vbmV5L2ZpbmFuY2UgIChpbmZsYXRpb24gYnJpbmdzIGJlbmVmaXQgdG8gYm9ycm93ZXIta25vd24gIGFzICdpbmZsYXRpb24gcHJlbWl1bScpLiBJbiB0aW1lcyBvZiBwcmljZSBmYWxsICBqdXN0IG9wcG9zaXRlIGhhcHBlbnMuICBTb3VyY2U6IEluZGlhbiBFY29ub215IGJ5IFJhbWVzaCBTaW5naD4gIENoYXB0ZXItIDcgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 52,
      "question" : " With reference to infrastructural development in the colonial period, consider the following statements:  1. The railways fostered commercialisation of Indian agriculture. 2.  The social benefits of the railways outweighed its economic impact. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICAgVGhlIHJhaWx3YXlzIGFmZmVjdGVkIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlICBJbmRpYW4gZWNvbm9teSBpbiB0d28gaW1wb3J0YW50IHdheXMuIE9uICB0aGUgb25lIGhhbmQgaXQgZW5hYmxlZCBwZW9wbGUgdG8gdW5kZXJ0YWtlICBsb25nIGRpc3RhbmNlIHRyYXZlbCBhbmQgdGhlcmVieSBicmVhayAgZ2VvZ3JhcGhpY2FsIGFuZCBjdWx0dXJhbCBiYXJyaWVycyB3aGlsZSwgb24gIHRoZSBvdGhlciBoYW5kLCBpdCBmb3N0ZXJlZCAgY29tbWVyY2lhbGlzYXRpb24gb2YgSW5kaWFuIGFncmljdWx0dXJlICB3aGljaCBhZHZlcnNlbHkgYWZmZWN0ZWQgdGhlIHNlbGYtc3VmZmljaWVuY3kgIG9mIHRoZSB2aWxsYWdlIGVjb25vbWllcyBpbiBJbmRpYS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogICBUaGUgc29jaWFsIGJlbmVmaXRzLCB3aGljaCB0aGUgSW5kaWFuIHBlb3BsZSAgZ2FpbmVkIG93aW5nIHRvIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlICByYWlsd2F5cywgd2VyZSBvdXR3ZWlnaGVkIGJ5IHRoZSAgY291bnRyeSdzIGh1Z2UgZWNvbm9taWMgbG9zcy4gIFNvdXJjZTogSW5kaWFuIEVjb25vbWljIERldmVsb3BtZW50LCAgTkNFUlQgWEksIENoYXB0ZXIgMSwgUGFnZS0xMS0xMiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 53,
      "question" : " Which of the following will come under the category of secondary sector of economy? 1.  Production of bread and biscuits 2.  Fishing activity in coastal areas 3.  Health insurance facility for covid-19 patients Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChhKSBpcyBjb3JyZWN0OiAgIFNlY29uZGFyeSBTZWN0b3IgaXMgcmlnaHRseSBjYWxsZWQgdGhlICBtYW51ZmFjdHVyaW5nIHNlY3Rvciwgd2hpY2ggdXNlcyB0aGUgIHByb2R1Y2Ugb2YgdGhlIHByaW1hcnkgc2VjdG9yIGFzIGl0cyByYXcgIG1hdGVyaWFscy4gU2luY2UgbWFudWZhY3R1cmluZyBpcyBkb25lIGJ5ICB0aGUgaW5kdXN0cmllcywgdGhpcyBzZWN0b3IgaXMgYWxzbyBjYWxsZWQgdGhlICBpbmR1c3RyaWFsIHNlY3Rvci1leGFtcGxlcyBhcmUgcHJvZHVjdGlvbiAgb2YgYnJlYWQgYW5kIGJpc2N1aXRzLCBjYWtlcywgYXV0b21vYmlsZXMsICB0ZXh0aWxlcywgZXRjLiAgUHJpbWFyeSBzZWN0b3IgaW5jbHVkZXMgYWxsIHRob3NlIGVjb25vbWljICBhY3Rpdml0aWVzIHdoZXJlIHRoZXJlIGlzIHRoZSBkaXJlY3QgdXNlIG9mICBuYXR1cmFsIHJlc291cmNlcyBhcyBhZ3JpY3VsdHVyZSwgZm9yZXN0cnksICBmaXNoaW5nLCBmdWVscywgbWV0YWxzLCBtaW5lcmFscywgZXRjLiAgVGVydGlhcnkgU2VjdG9yIGluY2x1ZGVzIGFsbCBlY29ub21pYyAgYWN0aXZpdGllcyB3aGVyZSBkaWZmZXJlbnQgJ3NlcnZpY2VzJyBhcmUgIHByb2R1Y2VkIHN1Y2ggYXMgZWR1Y2F0aW9uLCBiYW5raW5nLCAgaW5zdXJhbmNlLCB0cmFuc3BvcnRhdGlvbiwgdG91cmlzbSwgZXRjLiAgVGhpcyBzZWN0b3IgaXMgYWxzbyBrbm93biBhcyB0aGUgc2VydmljZXMgIHNlY3Rvci4gIFNvdXJjZTogSW5kaWFuIEVjb25vbXktUmFtZXNoIFNpbmdoLSBwYWdlLTgxICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 54,
      "question" : " With reference to the Central Information Commission (CIC), consider the following statements:  1.  It has been constituted under the Right to Information Act, 2005. 2.  Its jurisdiction extends over all Central Public Authorities. 3.  No court can hear an appeal against decision of CIC.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIENlbnRyYWwgIEluZm9ybWF0aW9uIENvbW1pc3Npb24gaGFzIGJlZW4gIGNvbnN0aXR1dGVkIHdpdGggZWZmZWN0IGZyb20gMTItMTAtMjAwNSAgdW5kZXIgdGhlIFJpZ2h0IHRvIEluZm9ybWF0aW9uIEFjdCwgMjAwNS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUganVyaXNkaWN0aW9uIG9mICB0aGUgQ29tbWlzc2lvbiBleHRlbmRzIG92ZXIgYWxsIENlbnRyYWwgIFB1YmxpYyBBdXRob3JpdGllcy4gIFRoZSBDb21taXNzaW9uIGhhcyBjZXJ0YWluIHBvd2VycyBhbmQgIGZ1bmN0aW9ucyBtZW50aW9uZWQgaW4gc2VjdGlvbnMgMTgsIDE5LCAyMCAgYW5kIDI1IG9mIHRoZSBSVEkgQWN0LCAyMDA1LiBUaGVzZSBicm9hZGx5ICByZWxhdGUgdG8gYWRqdWRpY2F0aW9uIGluIHNlY29uZCBhcHBlYWwgZm9yICBnaXZpbmcgaW5mb3JtYXRpb247IGRpcmVjdGlvbiBmb3IgcmVjb3JkICBrZWVwaW5nLCBzdW8gbW90dSBkaXNjbG9zdXJlcyByZWNlaXZpbmcgYW5kICBlbnF1aXJpbmcgaW50byBhIGNvbXBsYWludCBvbiBpbmFiaWxpdHkgdG8gZmlsZSAgUlRJIGV0Yy4gSW1wb3NpdGlvbiBvZiBwZW5hbHRpZXMgYW5kICBNb25pdG9yaW5nIGFuZCBSZXBvcnRpbmcgaW5jbHVkaW5nICBwcmVwYXJhdGlvbiBvZiBhbiBBbm51YWwgUmVwb3J0LiAgIElmIENJQyBpcyBzYXRpc2ZpZWQgdGhhdCB0aGVyZSBhcmUgcmVhc29uYWJsZSAgZ3JvdW5kcyB0byBpbnF1aXJlIGludG8gdGhlIG1hdHRlciwgaXQgbWF5ICBpbml0aWF0ZSBhbiBpbnF1aXJ5IGluIHJlc3BlY3QgdGhlcmVvZi4gV2hpbGUgIGlucXVpcmluZyBpbnRvIGFueSBtYXR0ZXIgdW5kZXIgdGhpcyBzZWN0aW9uLCAgdGhlIEluZm9ybWF0aW9uIENvbW1pc3Npb24gd2lsbCBoYXZlIHNhbWUgIHBvd2VycyBhcyBhcmUgdmVzdGVkIGluIGEgY2l2aWwgY291cnQuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgZGVjaXNpb25zIG9mIHRoZSAgQ29tbWlzc2lvbiBhcmUgZmluYWwgYW5kIGJpbmRpbmcuICBTb3VyY2U6IEFib3V0IFVTIHwgQ2VudHJhbCBJbmZvcm1hdGlvbiAgQ29tbWlzc2lvbiAoY2ljLmdvdi5pbikgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 55,
      "question" : " Consider the following statements regarding Neo-banks: 1.  These are online-only fintech companies that operate solely digitally. 2.  They offer a large range of products and services as compared to traditional banks. 3.  More than 90% of smartphone penetration rate in India makes it a thriving market for Neo-banks. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE5lby1iYW5rcyBhcmUgIG9ubGluZS1vbmx5IGZpbmFuY2lhbCB0ZWNobm9sb2d5IChmaW50ZWNoKSAgY29tcGFuaWVzIHRoYXQgb3BlcmF0ZSBzb2xlbHkgZGlnaXRhbGx5IG9yICB2aWEgbW9iaWxlIGFwcHMuIFNpbXBseSBwdXQsIG5lby1iYW5rcyBhcmUgIHd3IHcuIHVwIHNjIG1hIHRlciBpIGwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDMgNSAgZGlnaXRhbCBiYW5rcyB3aXRob3V0IGFueSBwaHlzaWNhbCAgYnJhbmNoZXMuICBOZW8tYmFua3MgZGlzcnVwdCB0aGUgYmFua2luZyBzeXN0ZW0gYnkgIGxldmVyYWdpbmcgdGVjaCB3aGlsZSB0aGUgdHJhZGl0aW9uYWwgYmFua3MgIGZvbGxvdyBhbiBvbW5pLWNoYW5uZWwgYXBwcm9hY2ggIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogTmVvLWJhbmtzIG9mZmVyICBvbmx5IGEgc21hbGwgcmFuZ2Ugb2YgcHJvZHVjdHMgYW5kICBzZXJ2aWNlcyBhcyBjb21wYXJlZCB0byBhIHdob2xlIGdhbXV0IG9mICBzZXJ2aWNlcyB0aGF0IHRyYWRpdGlvbmFsIGJhbmtzIG9mZmVyLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQmVzaWRlcywgc2luY2UgIG5lby1iYW5rcyBhcmUgaGlnaGx5IGRpZ2l0YWwgZm9jdXNlZCwgdGhleSAgbWF5IG5vdCBiZSBhYmxlIHRvIGNhdGVyIHRvIHRoZSBiYW5raW5nICBuZWVkcyBvZiBub24tdGVjaCBzYXZ2eSBjb25zdW1lcnMgb3IgIHBlb3BsZSBmcm9tIHRoZSBydXJhbCBwYXJ0cyBvZiB0aGUgY291bnRyeSwgIHdobyBiZWxpZXZlIGluIGZhY2UtdG8tZmFjZSBpbnRlcmFjdGlvbiB3aXRoICB0aGVpciBmaW5hbmNpYWwgY3VzdG9kaWFucy4gQXMgb2YgMjAyMCwgSW5kaWEgIGhhZCBhIHNtYXJ0cGhvbmUgcGVuZXRyYXRpb24gcmF0ZSBvZiBqdXN0ICBhYm91dCA1NCBwZXIgY2VudC4gIFNvdXJjZTogRXhwbGFpbmVyOiBOZW8tYmFua3MgVnMgdHJhZGl0aW9uYWwgIGJhbmtpbmcgLSBUaGUgSGluZHUgQnVzaW5lc3NMaW5lICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 56,
      "question" : " With reference to Sagarmala Young Professional Scheme, consider the following statements:  1.  It will fund selected professionals to carry on research in government approved research institutions on areas of public importance. 2.  Professionals under this scheme will not be required to have prior experience.  3.  Professionals solely having qualification in engineering will be eligible for this scheme.  Which of the statements given above is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGlzIHNjaGVtZSAgZm9jdXNlcyBvbiBhY3RpdmUgb24tdGhlLWdyb3VuZCBsZWFybmluZyBmb3IgIHlvdW5nIHByb2Zlc3Npb25hbHMuIFRoZSBwcm9mZXNzaW9uYWxzIHdpbGwgIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIGxlYXJuIGFib3V0IHRoZSAgZnVuY3Rpb25pbmcgb2YgdGhlIGdvdmVybm1lbnQgYXMgd2VsbCBhcyAgZGV2ZWxvcG1lbnRhbCBwb2xpY3kgY29uY2VybnMuICBQcm9mZXNzaW9uYWxzIHdpbGwgYmUgcmVxdWlyZWQgdG8gZGVsaXZlciAgaGlnaC1xdWFsaXR5IGlucHV0cyBpbiBhcmVhcyBzdWNoIGFzICBpbmZyYXN0cnVjdHVyZSwgZGF0YSBhbmFseXNpcywgcHJvamVjdCAgbWFuYWdlbWVudCwgc3RhcnQtdXAsIGlubm92YXRpb24sIHNraWxsICBkZXZlbG9wbWVudCwgZGlnaXRhbCB0cmFuc2Zvcm1hdGlvbiBhbmQgIHRoZSBlbnZpcm9ubWVudCwgYW1vbmcgb3RoZXJzLCBpbiBvcmRlciAgdG8gbWVldCBNaW5pc3RyeSdzIG5lZWRzLiAg74K3IFRoZSBzY2hlbWUgd2lsbCBmb3N0ZXIgYWN0aXZlIGludm9sdmVtZW50ICBvZiB5b3VuZyBwZW9wbGUgaW4gZGVjaXNpb24tbWFraW5nLiAgIO+CtyBNaW5pc3RyeSBvZiBQb3J0cywgU2hpcHBpbmcgYW5kICBXYXRlcndheXMgaGFzIGZvcm11bGF0ZWQgc2NoZW1lIHRvICBlbmdhZ2UgdGFsZW50ZWQsIGZvcndhcmQtdGhpbmtpbmcgYW5kICBkeW5hbWljIHlvdW5nIHByb2Zlc3Npb25hbHMgaW4gdmFyaW91cyAgZGl2aXNpb25zIG9mIHRoZSBNaW5pc3RyeS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhbmQgc3RhdGVtZW50IDMgIGlzIGluY29ycmVjdDogICBJbml0aWFsbHksIG1vcmUgdGhhbiAyNSB5b3VuZyAgcHJvZmVzc2lvbmFscyB3aWxsIGJlIGhpcmVkIHVuZGVyIHRoaXMgIHNjaGVtZS4gUHJvZmVzc2lvbmFscyB3aWxsIGJlIHJlcXVpcmVkIHRvICBoYXZlIHF1YWxpZmljYXRpb24gaW4gQi5FLyBCLlRlY2gsIEIuICBQbGFubmluZyBhbmQvb3IgTUJBIG9yIGVxdWl2YWxlbnQgIGRlZ3JlZSBpbiByZWxldmFudCBzdWJqZWN0LyBmaWVsZCBhbmQgIG1pbmltdW0gdGhyZWUgeWVhciBvZiByZWxldmFudCB3b3JrICBleHBlcmllbmNlLiBQcm9mZXNzaW9uYWxzIGluIEFjY291bnRhbmN5LCAgRmluYW5jZSwgTGVnYWwsIFN0YXRpc3RpY3MsICBFY29ub21pY3MvQ29tbWVyY2UsIERhdGEgQW5hbHl0aWNzIHdpbGwgIGFsc28gYmUgZW5nYWdlZCBiYXNlZCBvbiByZXF1aXJlbWVudCBvZiB0aGUgIE1pbmlzdHJ5LiBUaGUgaW5pdGlhbCBwZXJpb2Qgb2YgZW5nYWdlbWVudCAgc2hhbGwgYmUgMiB5ZWFycyB3aGljaCBjYW4gYmUgZXh0ZW5kZWQgdG8gIGFkZGl0aW9uYWwgMiB5ZWFycyBvbiB0aGUgYmFzaXMgb2YgIHBlcmZvcm1hbmNlLiAgU291cmNlOiBQcmVzcyBJbmZvcm1hdGlvbiBCdXJlYXUgIChwaWIuZ292LmluKSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 57,
      "question" : " Consider the following statements regarding Azooxanthellate corals: 1.  These groups of corals are found only in deep-sea.  2.  These are a group of corals that do not contain zooxanthellae. www.pscmatrial.onlineKSG: MEMBER'S COPY  3.  They derive nourishment by capturing different forms of plankton. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IEV4cGxhbmF0aW9uOiAgU2NpZW50aXN0cyBoYXZlIHJlY29yZGVkIGZvdXIgc3BlY2llcyBvZiAgYXpvb3hhbnRoZWxsYXRlIGNvcmFscyBmb3IgdGhlIGZpcnN0IHRpbWUgZnJvbSAgSW5kaWFuIHdhdGVycy4gVGhlc2UgbmV3IGNvcmFscyB3ZXJlIGZvdW5kICBmcm9tIHRoZSB3YXRlcnMgb2YgQW5kYW1hbiBhbmQgTmljb2JhciAgSXNsYW5kcy4gICBUaGVzZSBub24tcmVlZiBidWlsZGluZywgc29saXRhcnkgY29yYWxzIHdlcmUgIGZvdW5kIGluIHRoZSB3YXRlcnMgb2YgQW5kYW1hbiBhbmQgTmljb2JhciAgSXNsYW5kcy4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlc2UgZ3JvdXBzIG9mICBjb3JhbHMgYXJlIGRlZXAtc2VhIHJlcHJlc2VudGF0aXZlcywgd2l0aCAgdGhlIG1ham9yaXR5IG9mIHNwZWNpZXMgcmVwb3J0aW5nIGZyb20gIGJldHdlZW4gMjAwIG0gdG8gMTAwMCBtLiBUaGVpciBvY2N1cnJlbmNlcyAgYXJlIGFsc28gcmVwb3J0ZWQgZnJvbSBzaGFsbG93IGNvYXN0YWwgIHdhdGVycy4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgYW5kIHN0YXRlbWVudCAzIGlzICBjb3JyZWN0OiAgQXpvb3hhbnRoZWxsYXRlIGNvcmFscyBhcmUgYSBncm91cCBvZiBjb3JhbHMgIHRoYXQgZG8gbm90IGNvbnRhaW4gem9veGFudGhlbGxhZSBhbmQgIGRlcml2ZSBub3VyaXNobWVudCBub3QgZnJvbSB0aGUgc3VuIGJ1dCAgZnJvbSBjYXB0dXJpbmcgZGlmZmVyZW50IGZvcm1zIG9mIHBsYW5rdG9uLiAgIFNvdXJjZTogRm91ciBuZXcgY29yYWxzIHJlY29yZGVkIGZyb20gIEluZGlhbiB3YXRlcnMgLSBUaGUgSGluZHUgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 58,
      "question" : " Consider the following statements with reference to Goods and Services Tax (GST): 1.  It is applicable on 'supply' of goods as against the earlier concept on the manufacture of goods. 2.  GST is based on the principle of origin-based consumption taxation. 3.  Import of goods or services would be treated as inter-state supplies. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEZvbGxvd2luZyBhcmUgdGhlIGZlYXR1cmVzIG9mIEdvb2RzIGFuZCAgU2VydmljZXMgVGF4IChHU1QpOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogR1NUIGlzIGFwcGxpY2FibGUgIG9uICdzdXBwbHknIG9mIGdvb2RzIG9yIHNlcnZpY2VzIGFzIGFnYWluc3QgIHRoZSBlYXJsaWVyIGNvbmNlcHQgb24gdGhlIG1hbnVmYWN0dXJlIG9mICBnb29kcyBvciBvbiBzYWxlIG9mIGdvb2RzIG9yIG9uIHByb3Zpc2lvbiBvZiAgc2VydmljZXMuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEdTVCBpcyBiYXNlZCBvbiAgdGhlIHByaW5jaXBsZSBvZiBkZXN0aW5hdGlvbi1iYXNlZCAgY29uc3VtcHRpb24gdGF4YXRpb24gYXMgYWdhaW5zdCB0aGUgcHJlc2VudCAgcHJpbmNpcGxlIG9mIG9yaWdpbi1iYXNlZCB0YXhhdGlvbi4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEltcG9ydCBvZiBnb29kcyBvciAgc2VydmljZXMgd291bGQgYmUgdHJlYXRlZCBhcyBpbnRlci1zdGF0ZSAgc3VwcGxpZXMgYW5kIHdvdWxkIGJlIHN1YmplY3QgdG8gSUdTVCBpbiAgYWRkaXRpb24gdG8gdGhlIGFwcGxpY2FibGUgY3VzdG9tcyBkdXRpZXMuICB3dyB3LiB1cCBjbSBhdGUgcmlhIGwubyBubGkgbmUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyA2ICBTb3VyY2U6IGh0dHBzOi8vZ3N0Y291bmNpbC5nb3YuaW4vYnJpZWYtIGhpc3RvcnktZ3N0ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 59,
      "question" : " Which of the following are examples of Direct Taxes? 1.  Income tax 2.  Capital gain tax 3.  Corporate tax 4.  Value-added tax Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgRGlyZWN0IHRheCBpcyBhIHR5cGUgb2YgdGF4IHdoZXJlIHRoZSBpbmNpZGVuY2UgIGFuZCBpbXBhY3Qgb2YgdGF4YXRpb24gZmFsbCBvbiB0aGUgc2FtZSAgZW50aXR5LiAgSW4gdGhlIGNhc2Ugb2YgZGlyZWN0IHRheCwgdGhlIGJ1cmRlbiBjYW4ndCBiZSAgc2hpZnRlZCBieSB0aGUgdGF4cGF5ZXIgdG8gc29tZW9uZSBlbHNlLiAgVGhlc2UgYXJlIGxhcmdlbHkgdGF4ZXMgb24gaW5jb21lIG9yIHdlYWx0aC4gIEluY29tZSB0YXgsIGNvcnBvcmF0aW9uIHRheCwgcHJvcGVydHkgIHRheCwgaW5oZXJpdGFuY2UgdGF4IGFuZCBnaWZ0IHRheCwgQ2FwaXRhbCAgZ2FpbiBUYXggYXJlIGV4YW1wbGVzIG9mIGRpcmVjdCB0YXguICBWYWx1ZS1hZGRlZCB0YXggKFZBVCkgaXMgYSB0eXBlIG9mIGluZGlyZWN0ICB0YXggbGV2aWVkIG9uIGdvb2RzIGFuZCBzZXJ2aWNlcyBmb3IgdmFsdWUgIGFkZGVkIGF0IGV2ZXJ5IHBvaW50IG9mIHByb2R1Y3Rpb24gb3IgIGRpc3RyaWJ1dGlvbiBjeWNsZS4gSXQgaXMgYW4gZXhhbXBsZSBvZiBpbmRpcmVjdCAgdGF4LiAgU291cmNlOiAgaHR0cHM6Ly93d3cuY2FuYXJhaHNiY2xpZmUuY29tIGF4LSB1bml2ZXJzaXR5L2FydGljbGVzL2FsbC1hYm91dC10YXgtc3RydWN0dXJlLSBpbi0gaW5kaWEuaHRtbCM6fjp0ZXh0PVdoZW4lMjBpdCUyMGNvbWVzJSAyMHRvJTIwdGF4ZXMsdGF4bSUyQyUyMGN1c3RvbXMlMjBkIHV0eSUyQyUyMGV0YyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  2, 3 and 4 only ",
        "option3" : "  1, 2 and 3 only ",
        "option4" : "  3 and 4 only  "
      }
    },
    {
      "index" : 60,
      "question" : " National Strategy for Financial Inclusion was prepared by which of the following institutions? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChhKSBpcyBjb3JyZWN0OiAgVGhlIE5hdGlvbmFsIFN0cmF0ZWd5IGZvciBGaW5hbmNpYWwgSW5jbHVzaW9uICBmb3IgSW5kaWEgMjAxOS0yMDI0IGhhcyBiZWVuIHByZXBhcmVkIGJ5ICBSQkkgdW5kZXIgdGhlIGFlZ2lzIG9mIHRoZSBGaW5hbmNpYWwgIEluY2x1c2lvbiBBZHZpc29yeSBDb21taXR0ZWUgYW5kIGlzIGJhc2VkICBvbiB0aGUgaW5wdXRzIGFuZCBzdWdnZXN0aW9ucyBmcm9tICBHb3Zlcm5tZW50IG9mIEluZGlhLCBvdGhlciBGaW5hbmNpYWwgU2VjdG9yICBSZWd1bGF0b3JzIHZpei4sIFNlY3VyaXRpZXMgRXhjaGFuZ2UgQm9hcmQgIG9mIEluZGlhIChTRUJJKSwgSW5zdXJhbmNlIFJlZ3VsYXRvcnkgYW5kICBEZXZlbG9wbWVudCBBdXRob3JpdHkgb2YgSW5kaWEgKElSREFJKSBhbmQgIFBlbnNpb24gRnVuZCBSZWd1bGF0b3J5IGFuZCBEZXZlbG9wbWVudCAgQXV0aG9yaXR5IG9mIEluZGlhIChQRlJEQSkuICBTb3VyY2U6aHR0cHM6Ly9wcnNpbmRpYS5vcmcvcG9saWN5L3JlcG9ydC0gc3VtbWFyaWVzL25hdGlvbmFsLXN0cmF0ZWd5LWZpbmFuY2lhbC0gaW5jbHVzaW9uIzp+OnRleHQ9VGhlJTIwUmVzZXJ2ZSUyMEJhbmsgJTIwb2YlMjBJbmRpYSxmaW5hbmNpYWwlMjBpbmNsdXNpb24lMjAgcG9saWNpZXMlMjBpbiUyMEluZGlhLiAgaHR0cHM6Ly9yYmlkb2NzLnJiaS5vcmcuaW4vcmRvY3MvY29udGVudC9wIGRmcy9OU0ZJUkVQT1JUMTAwMTE5LnBkZiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Reserve Bank of India ",
        "option2" : "  Ministry of Finance ",
        "option3" : "  NITI Aayog ",
        "option4" : "  National Bank For Agriculture  And Rural Development  (NABARD)  "
      }
    },
    {
      "index" : 61,
      "question" : " Which of the following statements is/are correct about the Competition Commission of India? 1.  It has been provided for by the Constitution of India to ensure level playing field in market. 2.  The Commission can take suo-motu cognizance of a case based on an anonymous complaint. 3.  CCI consists of the chairman and six members appointed by the Central Government. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgQ29tcGV0aXRpb24gIEFjdCwgMjAwMiBmb2xsb3dzIHRoZSBwaGlsb3NvcGh5IG9mIG1vZGVybiAgY29tcGV0aXRpb24gbGF3cy4gSXQgaXMgYSBzdGF0dXRvcnkgYm9keSwgIG5vdCBhIGNvbnN0aXR1dGlvbmFsIGJvZHkuIFRoZSBBY3QgIHByb2hpYml0cyBhbnRpLWNvbXBldGl0aXZlIGFncmVlbWVudHMsICBhYnVzZSBvZiBkb21pbmFudCBwb3NpdGlvbiBieSBlbnRlcnByaXNlcyAgYW5kIHJlZ3VsYXRlcyBjb21iaW5hdGlvbnMgKGFjcXVpc2l0aW9uLCAgYWNxdWlyaW5nIG9mIGNvbnRyb2wgYW5kIE0mQSksIHdoaWNoIGNhdXNlcyAgb3IgbGlrZWx5IHRvIGNhdXNlIGFuIGFwcHJlY2lhYmxlIGFkdmVyc2UgIGVmZmVjdCBvbiBjb21wZXRpdGlvbiB3aXRoaW4gSW5kaWEuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgQ29tbWlzc2lvbiAgY2FuIHRha2Ugc3VvLW1vdHUgY29nbml6YW5jZSBvZiBhIGNhc2UgIGJhc2VkIGV2ZW4gb24gYW4gYW5vbnltb3VzIGNvbXBsYWludC4gIFRoZSBvbmx5IGxpbWl0YXRpb24gb24gdGhlIGV4ZXJjaXNlIG9mIHRoYXQgIHBvd2VyIGlzIHRoYXQgdGhlIENvbW1pc3Npb24gc2hvdWxkIGZlZWwgIHByaW1hIGZhY2llIHNhdGlzZmllZCB0aGF0IHRoZXJlIGV4aXN0cyBhICBwcmltYSBmYWNpZSBjYXNlIGZvciBvcmRlcmluZyBpbnRvIHRoZSAgYWxsZWdhdGlvbiBvZiB2aW9sYXRpb24gb2YgU2VjdGlvbiAzKDEpIG9yIDQoMSkgIG9mIHRoZSBBY3QuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgb2JqZWN0aXZlcyBvZiAgdGhlIEFjdCBhcmUgc291Z2h0IHRvIGJlIGFjaGlldmVkIHRocm91Z2ggIHRoZSBDb21wZXRpdGlvbiBDb21taXNzaW9uIG9mIEluZGlhLCB3aGljaCAgaGFzIGJlZW4gZXN0YWJsaXNoZWQgYnkgdGhlIENlbnRyYWwgIEdvdmVybm1lbnQgd2l0aCBlZmZlY3QgZnJvbSAxNHRoIE9jdG9iZXIgIDIwMDMuIENDSSBjb25zaXN0cyBvZiBhIENoYWlycGVyc29uIGFuZCA2ICBNZW1iZXJzIGFwcG9pbnRlZCBieSB0aGUgQ2VudHJhbCAgR292ZXJubWVudC4gIEl0IGlzIHRoZSBkdXR5IG9mIHRoZSBDb21taXNzaW9uIHRvIGVsaW1pbmF0ZSAgcHJhY3RpY2VzIGhhdmluZyBhZHZlcnNlIGVmZmVjdCBvbiAgY29tcGV0aXRpb24sIHByb21vdGUgYW5kIHN1c3RhaW4gIGNvbXBldGl0aW9uLCBwcm90ZWN0IHRoZSBpbnRlcmVzdHMgb2YgIGNvbnN1bWVycyBhbmQgZW5zdXJlIGZyZWVkb20gb2YgdHJhZGUgaW4gIHRoZSBtYXJrZXRzIG9mIEluZGlhLiAgU291cmNlOiBodHRwczovL3d3dy5jY2kuZ292LmluL2Fib3V0LXVzICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  2 only ",
        "option3" : "  2 and 3 onl ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 62,
      "question" : " With reference to the situation of agriculture sector during colonial period, which of the following statements is/are correct? 1.  Despite low agricultural productivity, in absolute terms, the sector experienced some growth. 2.  Under Zamindari system, the profit accruing out of the agriculture sector went to the Zamindars instead of the cultivators. 3.  Increased production of food crop at the cost of cash crop was a feature of colonial agriculture. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICBEZXNwaXRlIGJlaW5nIHRoZSBvY2N1cGF0aW9uIG9mIHN1Y2ggYSBsYXJnZSAgcG9wdWxhdGlvbiwgdGhlIGFncmljdWx0dXJhbCBzZWN0b3IgIGNvbnRpbnVlZCB0byBleHBlcmllbmNlIHN0YWduYXRpb24gYW5kLCBub3QgIGluZnJlcXVlbnRseSwgdW51c3VhbCBkZXRlcmlvcmF0aW9uLiAgQWdyaWN1bHR1cmFsIHByby1kdWN0aXZpdHkgYmVjYW1lIGxvdyAgdGhvdWdoLCBpbiBhYnNvbHV0ZSB0ZXJtcywgdGhlIHNlY3RvciAgZXhwZXJpZW5jZWQgc29tZSBncm93dGggZHVlIHRvIHRoZSAgZXhwYW5zaW9uIG9mIHRoZSBhZ2dyZWdhdGUgYXJlYSB1bmRlciAgY3VsdGl2YXRpb24uICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgIFRoaXMgc3RhZ25hdGlvbiBpbiB0aGUgYWdyaWN1bHR1cmFsIHNlY3RvciAgd2FzIGNhdXNlZCBtYWlubHkgYmVjYXVzZSBvZiB0aGUgdmFyaW91cyAgc3lzdGVtcyBvZiBsYW5kIHNldHRsZW1lbnQgdGhhdCB3ZXJlICBpbnRyb2R1Y2VkIGJ5IHRoZSBjb2xvbmlhbCBnb3Zlcm5tZW50LiAgUGFydGljdWxhcmx5LCB1bmRlciB0aGUgemFtaW5kYXJpIHN5c3RlbSAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAuIG4gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyA3ICB3aGljaCB3YXMgaW1wbGVtZW50ZWQgaW4gdGhlIHRoZW4gQmVuZ2FsICBQcmVzaWRlbmN5IGNvbXByaXNpbmcgcGFydHMgb2YgSW5kaWEncyAgcHJlc2VudC1kYXkgZWFzdGVybiBzdGF0ZXMsIHRoZSBwcm9maXQgIGFjY3J1aW5nIG91dCBvZiB0aGUgYWdyaWN1bHR1cmUgc2VjdG9yICB3ZW50IHRvIHRoZSB6YW1pbmRhcnMgaW5zdGVhZCBvZiB0aGUgIGN1bHRpdmF0b3JzLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiAgIFRoZXJlIHdhcywgb2YgY291cnNlLCBzb21lIGV2aWRlbmNlIG9mIGEgIHJlbGF0aXZlbHkgaGlnaGVyIHlpZWxkIG9mIGNhc2ggY3JvcHMgaW4gIGNlcnRhaW4gYXJlYXMgb2YgdGhlIGNvdW50cnkgZHVlIHRvICBjb21tZXJjaWFsaXphdGlvbiBvZiBhZ3JpY3VsdHVyZS4gIEJ1dCB0aGlzICBjb3VsZCBoYXJkbHkgaGVscCBmYXJtZXJzIGluIGltcHJvdmluZyB0aGVpciAgZWNvbm9taWMgY29uZGl0aW9uIGFzLCBpbnN0ZWFkIG9mICBwcm9kdWNpbmcgZm9vZCBjcm9wcywgbm93IHRoZXkgd2VyZSAgcHJvZHVjaW5nIGNhc2ggY3JvcHMgd2hpY2ggd2VyZSB0byBiZSAgdWx0aW1hdGVseSB1c2VkIGJ5IEJyaXRpc2ggaW5kdXN0cmllcyBiYWNrICBob21lICBTb3VyY2U6IENsYXNzIDExdGggTkNFUlQ+IEluZGlhbiAgRWNvbm9taWMgRGV2ZWxvcG1lbnQ+IENoYXB0ZXItMSAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 63,
      "question" : " Which among the following is not a feature of Socialist society? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "ICBFeHBsYW5hdGlvbjogIE9wdGlvbiAoYykgaXMgY29ycmVjdDogIEEgc29jaWFsaXN0IHNvY2lldHkgYW5zd2VycyB0aGUgdGhyZWUgIHF1ZXN0aW9ucyBpbiBhIHRvdGFsbHkgZGlmZmVyZW50IG1hbm5lci4gSW4gYSAgc29jaWFsaXN0IHNvY2lldHkgdGhlIGdvdmVybm1lbnQgZGVjaWRlcyAgd2hhdCBnb29kcyBhcmUgdG8gYmUgcHJvZHVjZWQgaW4gIGFjY29yZGFuY2Ugd2l0aCB0aGUgbmVlZHMgb2Ygc29jaWV0eS4gSXQgaXMgIGFzc3VtZWQgdGhhdCB0aGUgZ292ZXJubWVudCBrbm93cyB3aGF0IGlzICBnb29kIGZvciB0aGUgcGVvcGxlIG9mIHRoZSBjb3VudHJ5IGFuZCBzbyB0aGUgIGRlc2lyZXMgb2YgaW5kaXZpZHVhbCBjb25zdW1lcnMgYXJlIG5vdCAgZ2l2ZW4gbXVjaCBpbXBvcnRhbmNlLiBUaGUgZ292ZXJubWVudCAgZGVjaWRlcyBob3cgZ29vZHMgYXJlIHRvIGJlIHByb2R1Y2VkIGFuZCAgaG93IHRoZXkgc2hvdWxkIGJlIGRpc3RyaWJ1dGVkLiBJbiBwcmluY2lwbGUsICBkaXN0cmlidXRpb24gdW5kZXIgc29jaWFsaXNtIGlzIHN1cHBvc2VkIHRvICBiZSBiYXNlZCBvbiB3aGF0IHBlb3BsZSBuZWVkIGFuZCBub3Qgb24gIHdoYXQgdGhleSBjYW4gYWZmb3JkIHRvIHB1cmNoYXNlLiBVbmxpa2UgIHVuZGVyIGNhcGl0YWxpc20sIGZvciBleGFtcGxlLCBhIHNvY2lhbGlzdCAgbmF0aW9uIHByb3ZpZGVzIGZyZWUgaGVhbHRoIGNhcmUgdG8gYWxsIGl0cyAgY2l0aXplbnMuIFN0cmljdGx5LCBhIHNvY2lhbGlzdCBzb2NpZXR5IGhhcyBubyAgcHJpdmF0ZSBwcm9wZXJ0eSBzaW5jZSBldmVyeXRoaW5nIGlzICBvd25lZCBieSB0aGUgc3RhdGUuIEluIEN1YmEgYW5kIENoaW5hLCBmb3IgIGV4YW1wbGUsIG1vc3Qgb2YgdGhlIGVjb25vbWljIGFjdGl2aXRpZXMgYXJlICBnb3Zlcm5lZCBieSB0aGUgc29jaWFsaXN0aWMgcHJpbmNpcGxlcy4gIFNvdXJjZTogQ2xhc3MgMTF0aCBOQ0VSVD4gSW5kaWFuICBFY29ub21pYyBEZXZlbG9wbWVudD4gQ2hhcHRlci0yICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Private Property is almost absent  in a socialist society since  everything is owned by the state. ",
        "option2" : "  Goods produced are distributed  among people on the basis of what  people need. ",
        "option3" : "  The market fully depends on the  forces of supply and demand. ",
        "option4" : "  Government decides what goods  are to be produced in accordance  with the needs of society.  "
      }
    },
    {
      "index" : 64,
      "question" : " Consider the following statements:  www.upscmat rial.onlineKSG: MEMBER'S COPY  1.  The first five-year plan laid emphasis on rapid industrialization with a focus on heavy industries and capital goods. 2.  The third five-year plan incorporated the development of agriculture as one of the objectives of planning in India. 3.  The fourth five-year plan was based on the Gadgil strategy with special focus to the ideas of growth with stability and progress towards self-reliance. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgRmlyc3QgUGxhbiBUaGUgcGVyaW9kIGZvciB0aGlzIHBsYW4gd2FzICAxOTUxLTU2LiBBcyB0aGUgZWNvbm9teSB3YXMgZmFjaW5nIHRoZSAgcHJvYmxlbSBvZiBsYXJnZXNjYWxlIGZvb2RncmFpbnMgaW1wb3J0ICAoMTk1MSkgYW5kIHRoZSBwcmVzc3VyZSBvZiBwcmljZSByaXNlLCB0aGUgIHBsYW4gYWNjb3JkZWQgdGhlIGhpZ2hlc3QgcHJpb3JpdHkgdG8gIGFncmljdWx0dXJlIGluY2x1ZGluZyBpcnJpZ2F0aW9uIGFuZCBwb3dlciAgcHJvamVjdHMuIEFib3V0IDQ0LjYgcGVyIGNlbnQgb2YgdGhlIHBsYW4gIG91dGxheSB3ZW50IGluIGZhdm91ciBvZiB0aGUgcHVibGljIHNlY3RvciAgdW5kZXJ0YWtpbmdzIChQU1VzKS4gIFNlY29uZCBQbGFuIFRoZSBwbGFuIHBlcmlvZCB3YXMgMTk1Ni02MS4gIFRoZSBzdHJhdGVneSBvZiBncm93dGggbGFpZCBlbXBoYXNpcyBvbiAgcmFwaWQgaW5kdXN0cmlhbGlzYXRpb24gd2l0aCBhIGZvY3VzIG9uICBoZWF2eSBpbmR1c3RyaWVzIGFuZCBjYXBpdGFsIGdvb2RzLiBUaGUgIHBsYW4gd2FzIGRldmVsb3BlZCBieSBQcm9mZXNzb3IgIE1haGFsYW5vYmlzLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogIFRoaXJkIFBsYW4gVGhlIFBsYW4gcGVyaW9kIHdhcyAxOTYxLTY1LiAgVGhlIFBsYW4gc3BlY2lmaWNhbGx5IGluY29ycG9yYXRlZCB0aGUgIGRldmVsb3BtZW50IG9mIGFncmljdWx0dXJlIGFzIG9uZSBvZiB0aGUgIG9iamVjdGl2ZXMgb2YgcGxhbm5pbmcgaW4gSW5kaWEgYmVzaWRlcywgZm9yICB0aGUgZmlyc3QgdGltZXMsIGNvbnNpZGVyaW5nIHRoZSBhaW0gb2YgIGJhbGFuY2VkLCByZWdpb25hbCBkZXZlbG9wbWVudC4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6ICBGb3VydGggUGxhbiBUaGUgUGxhbiBwZXJpb2Qgd2FzIDE5NjktNzQuICBUaGUgUGxhbiB3YXMgYmFzZWQgb24gdGhlIEdhZGdpbCBzdHJhdGVneSAgd2l0aCBzcGVjaWFsIGZvY3VzIHRvIHRoZSBpZGVhcyBvZiBncm93dGggIHdpdGggc3RhYmlsaXR5IGFuZCBwcm9ncmVzcyB0b3dhcmRzIHNlbGYtIHJlbGlhbmNlLiBEcm91Z2h0cyBhbmQgdGhlIEluZG8tUGFrIFdhciBvZiAgMTk3MS03MiBsZWQgdGhlIGVjb25vbXkgdG8gY2FwaXRhbCAgZGl2ZXJzaW9ucyBjcmVhdGluZyBmaW5hbmNpYWwgY3J1bmNoIGZvciB0aGUgIFBsYW4uICBTb3VyY2U6IEluZGlhbiBFY29ub215IGJ5IFJhbWVzaCBTaW5naD4gIENoYXB0ZXItNSA+IFBhZ2Ugbm8uLTExNyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 65,
      "question" : " Consider the following statements with reference to Financial Stability and Development Council (FSDC): 1.  The Council is chaired by Governor of the Reserve Bank of India. 2.  No funds are exclusively allocated to the Council for undertaking its activities. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgIFRoZSBGaW5hbmNpYWwgU3RhYmlsaXR5IGFuZCBEZXZlbG9wbWVudCAgQ291bmNpbCAoRlNEQykgaGFzIGJlZW4gY29uc3RpdHV0ZWQgYnkgR09JICBub3RpZmljYXRpb24gZGF0ZWQgMzB0aCBEZWNlbWJlciwgMjAxMC4gIFRoZSBDb3VuY2lsIGlzIGNoYWlyZWQgYnkgdGhlIFVuaW9uICBGaW5hbmNlIE1pbmlzdGVyIGFuZCBpdHMgbWVtYmVycyBhcmUgIEdvdmVybm9yLCBSZXNlcnZlIEJhbmsgb2YgSW5kaWE7IEZpbmFuY2UgIFNlY3JldGFyeSBhbmQvb3IgU2VjcmV0YXJ5LCBEZXBhcnRtZW50IG9mICBFY29ub21pYyBBZmZhaXJzOyBTZWNyZXRhcnksIERlcGFydG1lbnQgb2YgIEZpbmFuY2lhbCBTZXJ2aWNlczsgQ2hpZWYgRWNvbm9taWMgQWR2aXNlciwgIE1pbmlzdHJ5IG9mIEZpbmFuY2U7IENoYWlybWFuLCBTZWN1cml0aWVzICBhbmQgRXhjaGFuZ2UgQm9hcmQgb2YgSW5kaWE7IENoYWlybWFuLCAgSW5zdXJhbmNlIFJlZ3VsYXRvcnkgYW5kIERldmVsb3BtZW50ICBBdXRob3JpdHkgYW5kIENoYWlybWFuLCBQZW5zaW9uIEZ1bmQgIFJlZ3VsYXRvcnkgYW5kIERldmVsb3BtZW50IEF1dGhvcml0eS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6ICAgTm8gZnVuZHMgYXJlIHNlcGFyYXRlbHkgYWxsb2NhdGVkIHRvIHRoZSAgQ291bmNpbCBmb3IgdW5kZXJ0YWtpbmcgaXRzIGFjdGl2aXRpZXMuIFRoZSAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyA4ICBDb3VuY2lsIGRlYWxzLCBpbnRlci1hbGlhLCB3aXRoIGlzc3VlcyByZWxhdGluZyAgdG8gZmluYW5jaWFsIHN0YWJpbGl0eSwgZmluYW5jaWFsIHNlY3RvciAgZGV2ZWxvcG1lbnQsIGludGVyLXJlZ3VsYXRvcnkgY29vcmRpbmF0aW9uLCAgZmluYW5jaWFsIGxpdGVyYWN5LCBmaW5hbmNpYWwgaW5jbHVzaW9uIGFuZCAgbWFjcm8gcHJ1ZGVudGlhbCBzdXBlcnZpc2lvbiBvZiB0aGUgIGVjb25vbXkgaW5jbHVkaW5nIHRoZSBmdW5jdGlvbmluZyBvZiBsYXJnZSAgZmluYW5jaWFsIGNvbmdsb21lcmF0ZXMuICAgU291cmNlOiAgaHR0cHM6Ly9kZWEuZ292LmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvU3RydSBjRlNEQy5wZGYgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmFzcHg/IFBSSUQ9MTgwMDI2MiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 66,
      "question" : " Which among the following objectives government attempts to obtain by Budget? 1.  Economic Stability 2.  Reducing regional disparities 3.  Reducing inequalities in income  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgVGhlIHZhcmlvdXMgb2JqZWN0aXZlcyBvZiBnb3Zlcm5tZW50IGJ1ZGdldCAgYXJlOiAg74K3IFJlYWxsb2NhdGlvbiBvZiBSZXNvdXJjZXM6IEl0IGhlbHBzIHRvICBkaXN0cmlidXRlIHJlc291cmNlcyBrZWVwaW5nIGluIHZpZXcgdGhlICBlY29ub21pYyBhbmQgc29jaWFsIGNvbmRpdGlvbnMgb2YgdGhlICBjb3VudHJ5LiAg74K3IFJlZHVjaW5nIGluZXF1YWxpdGllcyBpbiBpbmNvbWUgYW5kICB3ZWFsdGg6IEdvdmVybm1lbnQgYWltcyB0byBpbmZsdWVuY2UgIGRpc3RyaWJ1dGlvbiBvZiBpbmNvbWUgYnkgaW1wb3NpbmcgdGF4ZXMgIG9uIHRoZSByaWNoIGFuZCBzcGVuZGluZyBtb3JlIG9uIHRoZSAgd2VsZmFyZSBvZiB0aGUgcG9vci4gIO+CtyBFY29ub21pYyBTdGFiaWxpdHk6IEdvdmVybm1lbnQgIGJ1ZGdldCBpcyB1c2VkIHRvIHByZXZlbnQgYnVzaW5lc3MgIGZsdWN0dWF0aW9ucyBvZiBpbmZsYXRpb24gb3IgZGVmbGF0aW9uIHRvICBhY2hpZXZlIHRoZSBvYmplY3RpdmUgb2YgZWNvbm9taWMgIHN0YWJpbGl0eS4gUG9saWNpZXMgc3VjaCBhcyBzdXJwbHVzIGJ1ZGdldCAgZHVyaW5nIGluZmxhdGlvbiBhbmQgZGVmaWNpdCBidWRnZXQgIGR1cmluZyBkZWZsYXRpb24gYXNzaXN0IGluIGJhbGFuY2luZyB0aGUgIHByaWNlcyBpbiB0aGUgZWNvbm9teS4gIO+CtyBNYW5hZ2VtZW50IG9mIFB1YmxpYyBFbnRlcnByaXNlczogIFRoZXJlIGFyZSBsYXJnZSBudW1iZXJzIG9mIHB1YmxpYyBzZWN0b3IgIGluZHVzdHJpZXMsIHdoaWNoIGFyZSBlc3RhYmxpc2hlZCBhbmQgIG1hbmFnZWQgZm9yIHNvY2lhbCB3ZWxmYXJlIG9mIHRoZSBwdWJsaWMuICBCdWRnZXQgaXMgcHJlcGFyZWQgd2l0aCB0aGUgb2JqZWN0aXZlIG9mICBtYWtpbmcgdmFyaW91cyBwcm92aXNpb25zIGZvciBtYW5hZ2luZyAgc3VjaCBlbnRlcnByaXNlcyBhbmQgcHJvdmlkaW5nIHRob3NlICBmaW5hbmNpYWwgaGVscC4gIO+CtyBFY29ub21pYyBHcm93dGg6IFRoZSBncm93dGggcmF0ZSBvZiBhICBjb3VudHJ5IGRlcGVuZHMgb24gcmF0ZSBvZiBzYXZpbmcgYW5kICBpbnZlc3RtZW50LiBUaGVyZWZvcmUsIHRoZSBnb3Zlcm5tZW50ICBtYWtlcyB2YXJpb3VzIHByb3Zpc2lvbnMgaW4gdGhlIGJ1ZGdldCAgdG8gcmFpc2Ugb3ZlcmFsbCByYXRlIG9mIHNhdmluZ3MgYW5kICBpbnZlc3RtZW50cyBpbiB0aGUgZWNvbm9teS4gIO+CtyBSZWR1Y2luZyByZWdpb25hbCBkaXNwYXJpdGllczogVGhlICBnb3Zlcm5tZW50IGJ1ZGdldCBhaW1zIHRvIHJlZHVjZSAgcmVnaW9uYWwgZGlzcGFyaXRpZXMgdGhyb3VnaCBpdHMgdGF4YXRpb24gIGFuZCBleHBlbmRpdHVyZSBwb2xpY3kgZm9yIGVuY291cmFnaW5nICBzZXR0aW5nIHVwIG9mIHByb2R1Y3Rpb24gdW5pdHMgaW4gdGhlICB1bmRlcmRldmVsb3BlZCByZWdpb25zLiAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVlYzEwNS4gcGRmICBodHRwczovL3d3dy55b3VyYXJ0aWNsZWxpYnJhcnkuY29tL2Vjb25vIG1pY3MvYnVkZ2V0aW5nLzYtaW1wb3J0YW50LW9iamVjdGl2ZXMtb2YtIGdvdmVybm1lbnQtYnVkZ2V0LzMwNDEwICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 67,
      "question" : " Consider the following statements with reference to the service sector in India:  1.  During the last two decades, services have contributed more than manufacturing to India's output growth and poverty reduction.  2.  The sector contributes more than fifty percent of the Gross State Value Added in all the states.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICBEdXJpbmcgdGhlIGxhc3QgdHdvIGRlY2FkZXMsIHNlcnZpY2VzICBoYXZlIGNvbnRyaWJ1dGVkIG1vcmUgdGhhbiAgbWFudWZhY3R1cmluZyB0byBJbmRpYSdzIG91dHB1dCBncm93dGgsICBwcm9kdWN0aXZpdHkgZ3Jvd3RoLCBqb2IgZ3Jvd3RoLCBhbmQgIHBvdmVydHkgcmVkdWN0aW9uLiBBIG1ham9yaXR5IG9mIEZESSAgaW5mbG93cyBpbnRvIEluZGlhIGFyZSBjb25jZW50cmF0ZWQgaW4gdGhlICBzZXJ2aWNlIHNlY3Rvci4gSW5kaWEgaGFzIG91dHBlcmZvcm1lZCAgQ2hpbmEgb24gcHJvZHVjdGl2aXR5IGdyb3d0aCByYXRlIGluICBzZXJ2aWNlcy4gSW5kZWVkLCBncm93dGggaW4gc2VydmljZXMgYXJlICBtdWNoIGZhc3RlciBpbiBJbmRpYSB0aGFuIGluIHRoZSBVUy4gIFNoYXJlIG9mIHRoZSBzZXJ2aWNlcyBzZWN0b3IgYWNjb3VudGVkIGZvciAgNTQlIG9mIHRoZSB0b3RhbCBHVkEgaW4gRlkyMS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogICBUaGUgc2VydmljZXMgc2VjdG9yIGFjY291bnRzIGZvciBtb3JlICB0aGFuIDUwIHBlciBjZW50IG9mIHRoZSBHcm9zcyBTdGF0ZSBWYWx1ZSAgQWRkZWQgKEdTVkEpIGluIDEyIG91dCBvZiB0aGUgMzMgc3RhdGVzICBhbmQgVVRzLiBDaGFuZGlnYXJoIHN0YW5kcyBvdXQgd2l0aCBhICBwYXJ0aWN1bGFybHkgaGlnaCBzaGFyZSBvZiBzZXJ2aWNlcyBpbiBHU1ZBICBhdCA3NCBwZXIgY2VudCB3aGlsZSBTaWtraW0ncyBzaGFyZSByZW1haW5zICB0aGUgbG93ZXN0IGF0IDI0LjI1IHBlciBjZW50LiBOb3RhYmx5LCAgU2VydmljZXMgc2hhcmUgaW4gU2lra2ltJ3MgR1NWQSBoYXMgIGluY3JlYXNlZCBmcm9tIG92ZXIgMTggcGVyIGNlbnQgaW4gMjAxOC0xOSAgdG8gb3ZlciAyNCBwZXIgY2VudCBpbiAyMDIwLTIxLiAgU291cmNlOiAgaHR0cHM6Ly93d3cuaW5kaWFidWRnZXQuZ292LmluL2Vjb25vbWkgY3N1cnZleS9kb2MvZXNjaGFwdGVyL2VjaGFwMDkucGRmICBodHRwczovL3d3dy5pYmVmLm9yZy9hcmNoaXZlcy9pbmR1c3RyeS8gc2VydmljZXMtcmVwb3J0cy9zZXJ2aWNlcy0gcHJlc2VudGF0aW9uLSBqdWx5LTIwMjEgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 68,
      "question" : " Consider the following statements regarding the Small Farmers Agribusiness Consortium (SFAC): 1.  It was registered under the Societies Registration Act, 1860.  2.  President of SFAC is Secretary for Ministry of Agriculture and Farmers Welfare.  3.  It implements National Agriculture Market Electronic Trading (e-Nam) platform.  4.  SFAC has been identified as central procurement agency by GOI for price stabilization of onion and pulses under Price Stabilization Fund. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBhbmQgc3RhdGVtZW50IDIgaXMgIGluY29ycmVjdDogIFNtYWxsIEZhcm1lcnMgQWdyaWJ1c2luZXNzIENvbnNvcnRpdW0gIChTRkFDKSBpcyBhbiBBdXRvbm9tb3VzIFNvY2lldHkgIHByb21vdGVkIGJ5IE1pbmlzdHJ5IG9mIEFncmljdWx0dXJlLCAgQ29vcGVyYXRpb24gYW5kIEZhcm1lcnMnIFdlbGZhcmUsICBHb3Zlcm5tZW50IG9mIEluZGlhLiBJdCB3YXMgcmVnaXN0ZXJlZCB1bmRlciAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgMyA5ICBTb2NpZXRpZXMgUmVnaXN0cmF0aW9uIEFjdCBYWEkgb2YgMTg2MCBpbiAgMTk5NC4gIEl0IGlzIGdvdmVybmVkIGJ5IEJvYXJkIG9mIE1hbmFnZW1lbnQgIHdoaWNoIGlzIGNoYWlyZWQsIGV4LW9mZmljaW8sIGJ5IEhvbidibGUgIFVuaW9uIE1pbmlzdGVyIGZvciBBZ3JpY3VsdHVyZSBhbmQgIEZhcm1lcnMgV2VsZmFyZSBhcyB0aGUgUHJlc2lkZW50IGFuZCB0aGUgIFNlY3JldGFyeSwgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSwgIENvb3BlcmF0aW9uIGFuZCBGYXJtZXJzIFdlbGZhcmUsICBHb3Zlcm5tZW50IG9mIEluZGlhLCBpcyB0aGUgZXgtb2ZmaWNpbyBWaWNlLSBQcmVzaWRlbnQuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0IGFuZCBzdGF0ZW1lbnQgNCBpcyAgY29ycmVjdDogIEl0IGlzIHBpb25lZXIgaW4gb3JnYW5pc2luZyBzbWFsbCBhbmQgIG1hcmdpbmFsIGZhcm1lcnMgYXMgRmFybWVycyBJbnRlcmVzdCAgR3JvdXBzLCBGYXJtZXJzIFByb2R1Y2VycyBPcmdhbmlzYXRpb24gIGFuZCBGYXJtZXJzIFByb2R1Y2VycyBDb21wYW55IGZvciAgZW5kb3dpbmcgdGhlbSB3aXRoIGJhcmdhaW5pbmcgcG93ZXIgYW5kICBlY29ub21pZXMgb2Ygc2NhbGUuIFNGQUMgaXMgYWxzbyAgaW1wbGVtZW50aW5nIHRoZSBOYXRpb25hbCBBZ3JpY3VsdHVyZSAgTWFya2V0IEVsZWN0cm9uaWMgVHJhZGluZyAoZS1OYW0pICBwbGF0Zm9ybS4gIFNGQUMgaGFzIGJlZW4gaWRlbnRpZmllZCBhcyBjZW50cmFsICBwcm9jdXJlbWVudCBhZ2VuY3kgYnkgR29JIGZvciBwcmljZSAgc3RhYmlsaXphdGlvbiBvZiBvbmlvbiBhbmQgcHVsc2VzIHVuZGVyICBQcmljZSBTdGFiaWxpemF0aW9uIEZ1bmQgIFNvdXJjZTogIGh0dHA6Ly9zZmFjaW5kaWEuY29tL0Fib3V0dXMuYXNweCAgaHR0cDovL3NmYWNpbmRpYS5jb20vT2JqZWN0aXZlc19hbmRfV29yIGtfU2NvcGUuYXNweCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 and 4 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 3 an 4 only  "
      }
    },
    {
      "index" : 69,
      "question" : " Consider the following statements about Self-Help Groups (SHGs): 1.  The SHGs promote thrift in small proportions by a minimum contribution from each member. 2.  Self-Employed Women's Association (SEWA) is one of the pioneers of the SHG movement in India. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIFNlbGYtSGVscCBHcm91cHMgKGhlbmNlZm9ydGggU0hHcykgaGF2ZSAgZW1lcmdlZCB0byBmaWxsIHRoZSBnYXAgaW4gdGhlIGZvcm1hbCBjcmVkaXQgIHN5c3RlbSBiZWNhdXNlIHRoZSBmb3JtYWwgY3JlZGl0IGRlbGl2ZXJ5ICBtZWNoYW5pc20gaGFzIG5vdCBvbmx5IHByb3ZlbiBpbmFkZXF1YXRlICBidXQgaGFzIGFsc28gbm90IGJlZW4gZnVsbHkgaW50ZWdyYXRlZCBpbnRvICB0aGUgb3ZlcmFsbCBydXJhbCBzb2NpYWwgYW5kIGNvbW11bml0eSAgZGV2ZWxvcG1lbnQuIFNpbmNlIHNvbWUga2luZCBvZiBjb2xsYXRlcmFsIGlzICByZXF1aXJlZCwgdmFzdCBwcm9wb3J0aW9uIG9mIHBvb3IgcnVyYWwgIGhvdXNlaG9sZHMgd2VyZSBhdXRvbWF0aWNhbGx5IG91dCBvZiB0aGUgIGNyZWRpdCBuZXR3b3JrLiBUaGUgU0hHcyBwcm9tb3RlIHRocmlmdCBpbiAgc21hbGwgcHJvcG9ydGlvbnMgYnkgYSBtaW5pbXVtICBjb250cmlidXRpb24gZnJvbSBlYWNoIG1lbWJlci4gRnJvbSB0aGUgIHBvb2xlZCBtb25leSwgY3JlZGl0IGlzIGdpdmVuIHRvIHRoZSBuZWVkeSAgbWVtYmVycyB0byBiZSByZXBheWFibGUgaW4gc21hbGwgIGluc3RhbG1lbnRzIGF0IHJlYXNvbmFibGUgaW50ZXJlc3QgcmF0ZXMuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgIFRoZSBTZWxmLUVtcGxveWVkIFdvbWVuJ3MgQXNzb2NpYXRpb24gIChTRVdBKSBpcyBhIG1lbWJlcnNoaXAtYmFzZWQgb3JnYW5pemF0aW9uICBjcmVhdGVkIGluIDE5NzIgZnJvbSBhIGNvbWJpbmF0aW9uIG9mIHRoZSAgbGFib3VyLCB3b21lbiwgYW5kIGNvb3BlcmF0aXZlIG1vdmVtZW50cywgIHRvIG9yZ2FuaXplIHNlbGYtZW1wbG95ZWQgd29tZW4gaW4gdGhlICBpbmZvcm1hbCBlY29ub215IGFuZCBhc3Npc3QgdGhlaXIgY29sbGVjdGl2ZSAgc3RydWdnbGUgZm9yIHNvY2lhbCBqdXN0aWNlLCBlcXVhbGl0eSwgYW5kIGZhaXIgIHRyZWF0bWVudC4gIFNlbGYtRW1wbG95ZWQgV29tZW4ncyBBc3NvY2lhdGlvbiAgKFNFV0EpLCAxOTcwIGhhcyBwaW9uZWVyZWQgZ3Jhc3Nyb290cyAgc2VsZi1lbXBsb3llZCB3b21lbidzIGdyb3Vwcywgc3VjaCBhcyAgdGhlIFNIR3MsIHdoaWNoIGFyZSB0aGUgZm91bmRhdGlvbiBvZiAgU0VXQSdzIG9wZXJhdGlvbnMgaW4gZGlzdHJpY3RzIGFuZCB2aWxsYWdlcy4gICBTb3VyY2U6ICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9rZWVjMT02IC0xMCAgaHR0cDovL3d3dy5pbG8ub3JnL3djbXNwNS9ncm91cHMvcHVibGljIC9AZWRfZW1wL0BlbXBfcG9saWN5L2RvY3VtZW50cy9wdWJsaSBjYXRpb24vd2Ntc18yMzQ4OTAucGRmICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 70,
      "question" : " Consider the following statement with reference to the National Investment & Manufacturing Zones (NIMZs):  www.upscmaterial.onleKSG: MEMBER'S COPY  1.  National Manufacturing Policy, 2011 introduced concept of NIMZ in India. 2.  All buildings in the NIMZs will be green buildings.  3.  Environmental audit is not mandatory for industrial and institutional units in NIMZs. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogTmF0aW9uYWwgIEludmVzdG1lbnQgJiBNYW51ZmFjdHVyaW5nIFpvbmVzIChOSU1acykgIGFyZSBvbmUgb2YgdGhlIGltcG9ydGFudCBpbnN0cnVtZW50cyBvZiAgTmF0aW9uYWwgTWFudWZhY3R1cmluZyBQb2xpY3ksIDIwMTEuICBOSU1acyBhcmUgZW52aXNhZ2VkIGFzIGxhcmdlIGFyZWFzIG9mICBkZXZlbG9wZWQgbGFuZCB3aXRoIHRoZSByZXF1aXNpdGUgZWNvLXN5c3RlbSAgZm9yIHByb21vdGluZyB3b3JsZCBjbGFzcyBtYW51ZmFjdHVyaW5nICBhY3Rpdml0eS4gICBOSU1acyBhcmUgZGlmZmVyZW50IGZyb20gU0VacyBpbiB0ZXJtcyBvZiAgc2l6ZSwgbGV2ZWwgb2YgaW5mcmFzdHJ1Y3R1cmUgcGxhbm5pbmcsICBnb3Zlcm5hbmNlIHN0cnVjdHVyZXMgcmVsYXRlZCB0byByZWd1bGF0b3J5ICBwcm9jZWR1cmVzLCBhbmQgZXhpdCBwb2xpY2llcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFsbCBidWlsZGluZ3MgIChtb3JlIHRoYW4gMiwwMDAgc3FtIGJ1aWx0IHVwIGFyZWEpIGluIHRoZSAgTklNWiBpbmNsdWRpbmcgaW5kdXN0cmlhbC8gIGluc3RpdHV0aW9uYWwvY29tbWVyY2lhbC9yZXNpZGVudGlhbCB3aGljaCAgb2J0YWluIGdyZWVuIHJhdGluZyB1bmRlciB0aGUgSW5kaWFuIEdyZWVuICBCdWlsZGluZyBDb3VuY2lsIChJR0JDL0xFRUQpIG9yIEdSSUhBICBzeXN0ZW1zIHdpbGwgYmUgZWxpZ2libGUgZm9yIGFuIGluY2VudGl2ZSBvZiAgUnMuMiBsYWtocy4gICAgc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBFbnZpcm9ubWVudGFsICBhdWRpdCB3aWxsIGJlIG1hbmRhdG9yeSBmb3IgaW5kdXN0cmlhbCBhbmQgIGluc3RpdHV0aW9uYWwgdW5pdHMgaW4gTklNWnMuICAgV2F0ZXIgQXVkaXQgd2lsbCBiZSBtYW5kYXRvcnkgZm9yIGluZHVzdHJpYWwgIGFuZCBpbnN0aXR1dGlvbmFsIHVuaXRzIGluIE5JTVpzLiAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweCA/UFJJRD0xNTU3NDI0ICBodHRwczovL2RwaWl0Lmdvdi5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL3BvIC1hbm40LnBkZiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  2 and 3 only  ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 71,
      "question" : " Consider the following statements with reference to the Horticulture Sector in India:  1.  It contributes more than fifty percent to the value of agriculture output.  2. India is the largest producer of fruits and vegetables in the world. 3.  Productivity of horticulture crops is higher compared to productivity of food grains. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEV4cGxhbmF0aW9uOiAgd3cgdy4gdXAgc2MgbWEgdGVyIGkgbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgNCAwICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEhvcnRpY3VsdHVyZSAgc2VjdG9yIGNvbnRyaWJ1dGVzIG5lYXJseSBvbmUtdGhpcmQgb2YgdGhlICB2YWx1ZSBvZiBhZ3JpY3VsdHVyZSBvdXRwdXQgYW5kIHNpeCBwZXJjZW50ICBvZiB0aGUgR3Jvc3MgRG9tZXN0aWMgUHJvZHVjdCBvZiBJbmRpYSAoYXMgIHBlciBkYXRhIG9mIGFncmljdWx0dXJhbCBtaW5pc3RyeSkuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJbmRpYSBoYXMgIGVtZXJnZWQgYXMgYSB3b3JsZCBsZWFkZXIgaW4gcHJvZHVjaW5nIGEgIHZhcmlldHkgb2YgZnJ1aXRzIGxpa2UgbWFuZ29lcywgYmFuYW5hcywgIGNvY29udXRzLCBjYXNoZXcgbnV0cywgYW5kIGEgbnVtYmVyIG9mICBzcGljZXMgYW5kIGlzIHRoZSBzZWNvbmQtbGFyZ2VzdCBwcm9kdWNlciAgb2YgZnJ1aXRzIGFuZCB2ZWdldGFibGVzLiBCZXNpZGVzLCBJbmRpYSBoYXMgIG1haW50YWluZWQgaXRzIGRvbWluYW5jZSBpbiB0aGUgcHJvZHVjdGlvbiAgb2Ygc3BpY2VzLCBjb2NvbnV0IGFuZCBjYXNoZXdudXQuICBBcGFydCBmcm9tIGVuc3VyaW5nIG51dHJpdGlvbmFsIHNlY3VyaXR5IG9mICB0aGUgbmF0aW9uLCBpdCBwcm92aWRlcyBhbHRlcm5hdGUgcnVyYWwgIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcywgZGl2ZXJzaWZpY2F0aW9uIGluICBmYXJtIGFjdGl2aXRpZXMsIGFuZCBlbmhhbmNlZCBpbmNvbWUgdG8gIGZhcm1lcnMuICBJbmRpYSBpcyBjdXJyZW50bHkgcHJvZHVjaW5nIGFib3V0IDMyMC40OCAgbWlsbGlvbiB0b25zIG9mIGhvcnRpY3VsdHVyZSBwcm9kdWNlIHdoaWNoICBoYXMgc3VycGFzc2VkIHRoZSBmb29kIGdyYWluIHByb2R1Y3Rpb24sICB0aGF0IHRvbyBmcm9tIG11Y2ggbGVzcyBhcmVhICgyNS42NiBtaWxsaW9uICBIYS4gZm9yIGhvcnRpY3VsdHVyZSBhZ2FpbnN0IDEyNy42IE0uIGhhLiBmb3IgIGZvb2QgZ3JhaW5zKS4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6ICBQcm9kdWN0aXZpdHkgb2YgaG9ydGljdWx0dXJlIGNyb3BzIGlzIG11Y2ggIGhpZ2hlciBjb21wYXJlZCB0byBwcm9kdWN0aXZpdHkgb2YgZm9vZCAgZ3JhaW5zICgxMi40OSB0b25lcy9oYSBhZ2FpbnN0IDIuMjMgIHRvbmVzL2hhLikuICBMYXVuY2ggb2YgTmF0aW9uYWwgSG9ydGljdWx0dXJlIE1pc3Npb24gaGFzICBzcHVycmVkIHRoZSBwcm9kdWN0aW9uIGFuZCBwcm9kdWN0aXZpdHkgb2YgIGhvcnRpY3VsdHVyYWwgY3JvcHMuICBTb3VyY2U6IE5DRVJULCBJbmRpYW4gRWNvbm9taWMgIERldmVsb3BtZW50LCBDaC0wNi1SdXJhbCBkZXZlbG9wbWVudCAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2tlZWMxMCA2LnBkZiAgaHR0cHM6Ly9hZ3JpY29vcC5uaWMuaW4vZW4vZGl2aXNpb250eXBlL2ggb3J0aWN1bHR1cmUvb3ZlcnZpZXcgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  1 and 3 only  ",
        "option3" : "  3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 72,
      "question" : " Cislunar Autonomous Positioning System Technology Operations and Navigation   Experiment '(CAPSTONE)'   mission is associated with:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChhKSBpcyBjb3JyZWN0OiAgIENpc2x1bmFyIEF1dG9ub21vdXMgUG9zaXRpb25pbmcgU3lzdGVtICBUZWNobm9sb2d5IE9wZXJhdGlvbnMgYW5kIE5hdmlnYXRpb24gIEV4cGVyaW1lbnQgKENBUFNUT05FKS4gICBOQVNBIGhhcyBwYXJ0bmVyZWQgd2l0aCBvcmdhbml6YXRpb24gIGNhbGxlZCAnQWR2YW5jZWQgU3BhY2UnIHRvIGRldmVsb3AgYW5kICBidWlsZCB0aGUgQ2lzbHVuYXIgQXV0b25vbW91cyAgUG9zaXRpb25pbmcgU3lzdGVtIFRlY2hub2xvZ3kgIE9wZXJhdGlvbnMgYW5kIE5hdmlnYXRpb24gRXhwZXJpbWVudCAgKENBUFNUT05FKSBtaXNzaW9uIHdoaWNoIHdpbGwgc2VydmUgYXMgYSAgcGF0aGZpbmRlciBmb3IgTmVhciBSZWN0aWxpbmVhciBIYWxvIE9yYml0ICAoTkhSTykgb3BlcmF0aW9ucyBhcm91bmQgdGhlIE1vb24uIFRoZSAgTkhSTywgKFBlcmlsdW5lID0gMywyMDAga207IEFwb2x1bmUgPSAgNzAsMDAwIGttKSB3aWxsIGJlIHRoZSBpbnRlbmRlZCBvcmJpdCBmb3IgdGhlICBOQVNBJ3MgQXJ0ZW1pcyBHYXRld2F5IGx1bmFyIG9yYml0YWwgIHBsYXRmb3JtLiBUaGUgQ0FQU1RPTkUgbWlzc2lvbiB3aWxsICB2YWxpZGF0ZSBzaW11bGF0aW9ucyBhbmQgY29uZmlybSBvcGVyYXRpb25hbCAgcGxhbm5pbmcgZm9yIEdhdGV3YXkgd2hpbGUgYWxzbyB2YWxpZGF0aW5nICBwZXJmb3JtYW5jZSBvZiBuYXZpZ2F0aW9uIGFuZCBzdGF0aW9uLSBrZWVwaW5nIHJlcXVpcmVtZW50cyBmb3IgdGhlIFBvd2VyIGFuZCAgUHJvcHVsc2lvbiBFbGVtZW50LiBUaHVzLCB0aGlzIG1pc3Npb24gd2lsbCAgcHJvdmlkZSBvcGVyYXRpb25hbCBleHBlcmllbmNlIHRvIE5BU0EsICBjb21tZXJjaWFsLCBhbmQgaW50ZXJuYXRpb25hbCBtaXNzaW9ucyBmb3IgIG9wZXJhdGlvbnMgaW4gYSBkZW1hbmRpbmcgb3JiaXRhbCByZWdpbWUuICBTb3VyY2U6IENpc2x1bmFyIEF1dG9ub21vdXMgUG9zaXRpb25pbmcgIFN5c3RlbSBUZWNobm9sb2d5IE9wZXJhdGlvbnMgYW5kICBOYXZpZ2F0aW9uIEV4cGVyaW1lbnQgKENBUFNUT05FKSAtIE5BU0EgIFRlY2huaWNhbCBSZXBvcnRzIFNlcnZlciAoTlRSUykgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  The National Aeronautics and  Space Administration ",
        "option2" : "  Japan Aerospace Exploration  Agency ",
        "option3" : "  Indian Space Research  Organisation ",
        "option4" : "  European Space Agency  "
      }
    },
    {
      "index" : 73,
      "question" : " Which of the following is/are the health impacts of Heat Waves? 1.  Syncope 2.  Ederna 3.  Delirium Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgIEEgSGVhdCBXYXZlIGlzIGEgcGVyaW9kIG9mIGFibm9ybWFsbHkgaGlnaCAgdGVtcGVyYXR1cmVzLCBtb3JlIHRoYW4gdGhlIG5vcm1hbCAgbWF4aW11bSB0ZW1wZXJhdHVyZSB0aGF0IG9jY3VycyBkdXJpbmcgIHRoZSBzdW1tZXIgc2Vhc29uIGluIHRoZSBOb3J0aC1XZXN0ZXJuICBwYXJ0cyBvZiBJbmRpYS4gSGVhdCBXYXZlcyB0eXBpY2FsbHkgb2NjdXIgIGJldHdlZW4gTWFyY2ggYW5kIEp1bmUsIGFuZCBpbiBzb21lIHJhcmUgIGNhc2VzIGV2ZW4gZXh0ZW5kIHRpbGwgSnVseS4gVGhlIGV4dHJlbWUgIHRlbXBlcmF0dXJlcyBhbmQgcmVzdWx0YW50IGF0bW9zcGhlcmljICBjb25kaXRpb25zIGFkdmVyc2VseSBhZmZlY3QgcGVvcGxlIGxpdmluZyBpbiAgdGhlc2UgcmVnaW9ucyBhcyB0aGV5IGNhdXNlIHBoeXNpb2xvZ2ljYWwgIHN0cmVzcywgc29tZXRpbWVzIHJlc3VsdGluZyBpbiBkZWF0aC4gIEhlYWx0aCBJbXBhY3RzIG9mIEhlYXQgV2F2ZXMgIFRoZSBoZWFsdGggaW1wYWN0cyBvZiBIZWF0IFdhdmVzIHR5cGljYWxseSAgaW52b2x2ZSBkZWh5ZHJhdGlvbiwgaGVhdCBjcmFtcHMsIGhlYXQgIGV4aGF1c3Rpb24gYW5kL29yIGhlYXQgc3Ryb2tlLiBUaGUgc2lnbnMgIGFuZCBzeW1wdG9tcyBhcmUgYXMgZm9sbG93czogIO+CpyBIZWF0IENyYW1wczogRWRlcm5hIChzd2VsbGluZykgYW5kICBTeW5jb3BlIChGYWludGluZykgZ2VuZXJhbGx5ICBhY2NvbXBhbmllZCBieSBmZXZlciBiZWxvdyAzOcKwQyAgaS5lLjEwMsKwRi4gIO+CpyBIZWF0IEV4aGF1c3Rpb246IEZhdGlndWUsIHdlYWtuZXNzLCAgZGl6emluZXNzLCBoZWFkYWNoZSwgbmF1c2VhLCB2b21pdGluZywgIG11c2NsZSBjcmFtcHMgYW5kIHN3ZWF0aW5nLiAg74KnIEhlYXQgU3Ryb2tlOiBCb2R5IHRlbXBlcmF0dXJlcyBvZiA0MMKwQyAgaS5lLiAxMDTCsEYgb3IgbW9yZSBhbG9uZyB3aXRoIGRlbGlyaXVtLCAgc2VpenVyZXMgb3IgY29tYS4gVGhpcyBpcyBhIHBvdGVudGlhbCBmYXRhbCAgY29uZGl0aW9uICBTb3VyY2U6IGh0dHBzOi8vbmRtYS5nb3YuaW4vTmF0dXJhbC0gSGF6YXJkcy9IZWF0LVdhdmUgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 74,
      "question" : " The newly discovered species called 'Glischropus meghalayanus' is a:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IHd3IHcuIHVwIHNjIG1hIHRlIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgNCAxICBFeHBsYW5hdGlvbjogIE9wdGlvbiAoYikgaXMgY29ycmVjdDogICBTY2llbnRpc3RzIGhhdmUgZGlzY292ZXJlZCBhIG5ldyBzcGVjaWVzICBvZiBiYW1ib28tZHdlbGxpbmcgYmF0IGluIFJpIEJob2kgZGlzdHJpY3QgIG9mIE1lZ2hhbGF5YS4gVGhlIHNwZWNpZXMsIGZvdW5kIG5lYXIgdGhlICBmb3Jlc3RlZCBwYXRjaCBvZiBOb25na2h5bGxlbSBXaWxkbGlmZSAgU2FuY3R1YXJ5LCBoYXMgYmVlbiBuYW1lZCBHbGlzY2hyb3B1cyAgbWVnaGFsYXlhbnVzLiAgIFRoZSBwcmVzZW50IGRpc2NvdmVyeSBpcyB0aGUgZmlyc3QgcmVwb3J0IG9mIGEgIHRoaWNrLXRodW1iZWQgYmF0IG5vdCBvbmx5IGZyb20gSW5kaWEgYnV0ICBhbHNvIGZyb20gU291dGggQXNpYS4gIFR3byByZWNlbnRseSAgY29sbGVjdGVkIEdsaXNjaHJvcHVzIHNwZWNpbWVucyBmcm9tICBNZWdoYWxheWEgU3RhdGUgaW4gbm9ydGhlYXN0ZXJuIEluZGlhICBleHRlbmQgdGhlIGtub3duIGRpc3RyaWJ1dGlvbiByYW5nZSBvZiB0aGUgIGdlbnVzIHdlc3R3YXJkIGludG8gU291dGggQXNpYSBieSBjYS4gIChhcHByb3hpbWF0ZWx5KSAxLDAwMCBrbS4gVGhpY2stdGh1bWJlZCAgYmF0cyBvZiB0aGUgZ2VudXMgR2xpc2Nocm9wdXMgYXJlIGN1cnJlbnRseSAgY29tcG9zZWQgb2YgZm91ciByZWNvZ25pc2VkIHNwZWNpZXMgZnJvbSAgU291dGhlYXN0IEFzaWEuIFRoZSBuZXdseSBkaXNjb3ZlcmVkICBzcGVjaWVzIGlzIHNtYWxsIGluIHNpemUgYW5kIGhhcyBhIGRhcmsgYnJvd24gIGNvbG91ciB3aXRoIHN1bHBodXIgeWVsbG93IGJlbGx5LiAgU291cmNlOiBOZXcgc3BlY2llcyBvZiBiYW1ib28tZHdlbGxpbmcgYmF0ICBmb3VuZCBpbiBNZWdoYWxheWEgLSBUaGUgSGluZHUgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Butterfly ",
        "option2" : "  Bamboo-dwelling bat ",
        "option3" : "  Algal Bloom ",
        "option4" : "  Carnivorous Lizard  "
      }
    },
    {
      "index" : 75,
      "question" : " With reference to depreciation, consider the following statements: 1.  Net domestic product is always lesser than gross domestic product. 2.  Depreciation does not take into account unexpected destruction of capital.     Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogTmV0IGRvbWVzdGljICBwcm9kdWN0IChORFApIGlzIGFuIGFubnVhbCBtZWFzdXJlIG9mIHRoZSAgZWNvbm9taWMgb3V0cHV0IG9mIGEgbmF0aW9uIHRoYXQgaXMgIGNhbGN1bGF0ZWQgYnkgc3VidHJhY3RpbmcgZGVwcmVjaWF0aW9uICBmcm9tIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QuICAgVGhlIG1vbmV0YXJ5IHZhbHVlIG9mIGFuIGFzc2V0IGRlY3JlYXNlcyAgb3ZlciB0aW1lIGR1ZSB0byB1c2UsIHdlYXIgYW5kIHRlYXIgb3IgIG9ic29sZXNjZW5jZS4gVGhpcyBkZWNyZWFzZSBpcyBtZWFzdXJlZCBhcyAgZGVwcmVjaWF0aW9uLiAgRGVwcmVjaWF0aW9uLCBpLmUuIGEgZGVjcmVhc2UgaW4gYW4gYXNzZXQncyAgdmFsdWUsIG1heSBiZSBjYXVzZWQgYnkgYSBudW1iZXIgb2Ygb3RoZXIgIGZhY3RvcnMgYXMgd2VsbCBzdWNoIGFzIHVuZmF2b3JhYmxlIG1hcmtldCAgY29uZGl0aW9ucywgZXRjLiBNYWNoaW5lcnksIGVxdWlwbWVudCwgIGN1cnJlbmN5IGFyZSBzb21lIGV4YW1wbGVzIG9mIGFzc2V0cyB0aGF0ICBhcmUgbGlrZWx5IHRvIGRlcHJlY2lhdGUgb3ZlciBhIHNwZWNpZmljIHBlcmlvZCAgb2YgdGltZS4gT3Bwb3NpdGUgb2YgZGVwcmVjaWF0aW9uIGlzICBhcHByZWNpYXRpb24gd2hpY2ggaXMgaW5jcmVhc2UgaW4gdGhlIHZhbHVlICBvZiBhbiBhc3NldCBvdmVyIGEgcGVyaW9kIG9mIHRpbWUuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBEZXByZWNpYXRpb24gZG9lcyAgbm90IHRha2UgaW50byBhY2NvdW50IHVuZXhwZWN0ZWQgb3Igc3VkZGVuICBkZXN0cnVjdGlvbiBvciBkaXN1c2Ugb2YgY2FwaXRhbCBhcyBjYW4gIGhhcHBlbiB3aXRoIGFjY2lkZW50cywgbmF0dXJhbCBjYWxhbWl0aWVzIG9yICBvdGhlciBzdWNoIGV4dHJhbmVvdXMgY2lyY3Vtc3RhbmNlcy4gIFNvdXJjZTogTkNFUlQsIEludHJvZHVjdG9yeSAgbWFjcm9lY29ub21pY3MsIGNsYXNzIFhJSSwgY2hhcHRlciAwMiwgUGFnZSAgMTItMTMgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9kZWZpIG5pdGlvbi9kZXByZWNpYXRpb24gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 76,
      "question" : " With reference to the hallmarking of gold jewellery and artefacts in India, consider the following statements: 1.  Gold hallmarking is a voluntary process of purity certification of the precious metal. 2.  Bureau of Indian Standards (BIS) is the nodal agency for implementing the gold hallmarking. 3.  A common consumer can get the purity of their unhallmarked gold jewellery tested at any of the Assaying and Hallmarking Centres of the nodal agency. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgR29sZCBoYWxsbWFya2luZyBpcyBhIHB1cml0eSBjZXJ0aWZpY2F0aW9uIG9mICB0aGUgcHJlY2lvdXMgbWV0YWwgYW5kIHdhcyB2b2x1bnRhcnkgaW4gIG5hdHVyZSB0aWxsIEp1bmUgMTYsIDIwMjEsIHdoZW4gdGhlICBnb3Zlcm5tZW50IGRlY2lkZWQgdG8gaW1wbGVtZW50ICBtYW5kYXRvcnkgZ29sZCBoYWxsbWFya2luZyBpbiBhIHBoYXNlZCAgbWFubmVyLiBJbiB0aGUgZmlyc3QgcGhhc2UsIDI1NiBkaXN0cmljdHMgb2YgIHRoZSBjb3VudHJ5IHdlcmUgY292ZXJlZC4gIFRoZSBzZWNvbmQgcGhhc2Ugb2YgdGhlIG1hbmRhdG9yeSAgaGFsbG1hcmtpbmcsIHRoZSBjb25zdW1lciBBZmZhaXJzIE1pbmlzdHJ5ICBzYWlkLCB3aWxsIGNvdmVyIGFkZGl0aW9uYWwgdGhyZWUgY2FyYXRhZ2VzIG9mICBnb2xkIGpld2VsbGVyeS9hcnRlZmFjdHMgKGllIDIwLCAyMyBhbmQgMjQgIGNhcmF0cykgYW5kIDMyIG5ldyBkaXN0cmljdHMsIHdoZXJlaW4gYW4gIEFzc2F5aW5nIGFuZCBIYWxsbWFya2luZyBDZW50cmUgaGFzIGJlZW4gIHNldCB1cCBwb3N0LWltcGxlbWVudGF0aW9uIG9mIHRoZSBmaXJzdCAgcGhhc2UuICBUaGUgQ2VudHJlIGhhcyBub3RpZmllZCB0aGUgb3JkZXIgaW4gdGhpcyAgcmVnYXJkIGFuZCB3aWxsIGNvbWUgaW50byBmb3JjZSBmcm9tIEp1bmUgMSwgIDIwMjIsIHRoZSBtaW5pc3RyeSBzYWlkIGluIGEgc3RhdGVtZW50LiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogTm9kYWwgYWdlbmN5ICBCdXJlYXUgb2YgSW5kaWFuIFN0YW5kYXJkcyAoQklTKSBoYXMgIHN1Y2Nlc3NmdWxseSBpbXBsZW1lbnRlZCB0aGUgIG1hbmRhdG9yeSBnb2xkIGhhbGxtYXJraW5nIGluIDI1NiAgZGlzdHJpY3RzIG9mIHRoZSBjb3VudHJ5IHdpdGggZWZmZWN0IGZyb20gMjMgIEp1bmUgMjAyMS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBCSVMgaGFzIG1hZGUgYSAgcHJvdmlzaW9uIHRvIGFsbG93IGEgY29tbW9uIGNvbnN1bWVyIHRvICBnZXQgdGhlIHB1cml0eSBvZiB0aGVpciB1bmhhbGxtYXJrZWQgZ29sZCAgamV3ZWxsZXJ5IHRlc3RlZCBhdCBhbnkgb2YgdGhlIEJJUyAgcmVjb2duaXplZCBBSENzLiAgU291cmNlOiBodHRwczovL3d3dy5idXNpbmVzcy0gc3RhbmRhcmQuY29tL2FydGljbGUvZWNvbm9teS0gcG9saWN5L3NlY29uZC1waGFzZS1vZi1tYW5kYXRvcnktZ29sZC0gaGFsbG1hcmtpbmctdG8tYmUtYmVnaW4tZnJvbS1qdW5lLTEtZ292dC0gMTIyMDQzMDAwODI2XzEuaHRtbCAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 77,
      "question" : " With reference to Indian Gas Exchange (IGX), consider the following statements: 1. It is India's first automated national level Gas Exchange to foster gas trading in the country.  2.  The contracts traded at Exchange are transferable in nature. 3.  Oil and Natural Gas Corporation Ltd. (ONGC) has become the first Exploration and Production www.upscmaterial.olineKSG: MEMBER'S COPY  company in India to trade domestic gas on Indian Gas Exchange Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSW5kaWFuIEdhcyAgRXhjaGFuZ2UgTHRkLiAoSUdYKSBpcyBJbmRpYSdzIGZpcnN0ICBhdXRvbWF0ZWQgbmF0aW9uYWwgbGV2ZWwgR2FzIEV4Y2hhbmdlIHRvICBwcm9tb3RlIGFuZCBzdXN0YWluIGFuIGVmZmljaWVudCBhbmQgcm9idXN0ICBHYXMgbWFya2V0IGFuZCB0byBmb3N0ZXIgZ2FzIHRyYWRpbmcgaW4gdGhlICBjb3VudHJ5LiBUaGUgZXhjaGFuZ2UgZmVhdHVyZXMgbXVsdGlwbGUgIHd3IHcuIHVwIHNjIG1hIHRlciBpYWwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDQgMiAgYnV5ZXJzIGFuZCBzZWxsZXJzIHRvIHRyYWRlIGluIHNwb3QgYW5kICBmb3J3YXJkIGNvbnRyYWN0cyBhdCBkZXNpZ25hdGVkIHBoeXNpY2FsICBodWJzLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlICBJR1ggd2Vic2l0ZSwgaXQgaXMgYSBuZXV0cmFsIGFuZCB0cmFuc3BhcmVudCAgbWFya2V0IHBsYWNlIHdoZXJlIGJvdGggYnV5ZXJzIGFuZCBzZWxsZXJzICB0cmFkZSBHYXMgYXMgdGhlIHVuZGVybHlpbmcgY29tbW9kaXR5LiBUaGUgIGNvbnRyYWN0cyB0cmFkZWQgYXQgRXhjaGFuZ2UgYXJlIGZvciAgY29tcHVsc29yeSBzcGVjaWZpYyBwaHlzaWNhbCBkZWxpdmVyeSBhbmQgIHNldHRsZW1lbnQgb2YgdGhlIHRyYWRlIGFyZSBzdWJqZWN0IHRvIHRoZSAgY29uZGl0aW9uIHRoYXQgc3VjaCBjb250cmFjdHMgYXJlIG5vbi0gdHJhbnNmZXJhYmxlIGluIG5hdHVyZSBhbmQgd2l0aG91dCBhbnkgIG5ldHRpbmctb2ZmIHRoZXJlYnkuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBTdGF0ZS1vd25lZCBPaWwgIGFuZCBOYXR1cmFsIEdhcyBDb3Jwb3JhdGlvbiBMdGQuIChPTkdDKSAgYmVjYW1lIHRoZSBmaXJzdCBFeHBsb3JhdGlvbiBhbmQgIFByb2R1Y3Rpb24gKEUmUCkgY29tcGFueSBpbiB0aGUgY291bnRyeSAgdG8gdHJhZGUgZG9tZXN0aWMgZ2FzIG9uIEluZGlhbiBHYXMgIEV4Y2hhbmdlLiBUaGUgZ2FzIHRyYWRlZCBpcyBmcm9tIE9OR0MgIEtyaXNobmEgR29kYXZhcmkgOTgvMiBibG9jay4gIFNvdXJjZTogIGh0dHBzOi8vd3d3LnRpbWVzbm93bmV3cy5jb20vYnVzaW5lc3MtIGVjb25vbXkvY29tcGFuaWVzL29uZ2MtY291bnRyeXMtMXN0LSBleHBsb3JhdGlvbi1wcm9kdWN0aW9uLWNvbXBhbnktdG8tdHJhZGUtIGRvbWVzdGljLWdhcy1vbi1pZ3gtYXJ0aWNsZS05MTc0ODYwNiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3  "
      }
    },
    {
      "index" : 78,
      "question" : " Which of the following are the main functions of International Monetary Fund (IMF)? 1.  To assist in the establishment of a multilateral system of payments 2.  The elimination of foreign exchange restrictions 3.  To facilitate international monetary cooperation 4.  To ensure the implementation of development projects Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgVGhlIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCAoSU1GKSAgY2FtZSB1cCBpbiAxOTQ0IHdob3NlIEFydGljbGVzIGNhbWUgaW50byAgZm9yY2Ugb24gdGhlIDI3IERlY2VtYmVyLCAxOTQ1IHdpdGggdGhlICBtYWluIGZ1bmN0aW9ucyBhcyBleGNoYW5nZSByYXRlIHJlZ3VsYXRpb24sICBwdXJjaGFzaW5nIHNob3J0LXRlcm0gZm9yZWlnbiBjdXJyZW5jeSAgbGlhYmlsaXRpZXMgb2YgdGhlIG1lbWJlciBuYXRpb25zIGZyb20gIGFyb3VuZCB0aGUgd29ybGQsIGFsbG90dGluZyBzcGVjaWFsIGRyYXdpbmcgIHJpZ2h0cyAoU0RScykgdG8gdGhlIG1lbWJlciBuYXRpb25zIGFuZCB0aGUgIG1vc3QgaW1wb3J0YW50IG9uZSBhcyB0aGUgYmFpbG9yIHRvIHRoZSAgbWVtYmVyIGVjb25vbWllcyBpbiB0aGUgc2l0dWF0aW9uIG9mIGFueSAgQm9QIGNyaXNpcy4gIFRoZSBtYWluIGZ1bmN0aW9ucyBvZiB0aGUgSU1GIGFyZSBhcyBnaXZlbiAgYmVsb3c6ICAxLiB0byBmYWNpbGl0YXRlIGludGVybmF0aW9uYWwgbW9uZXRhcnkgIGNvb3BlcmF0aW9uOyAgMi4gdG8gcHJvbW90ZSBleGNoYW5nZSByYXRlIHN0YWJpbGl0eSBhbmQgIG9yZGVybHkgZXhjaGFuZ2UgYXJyYW5nZW1lbnRzOyAgMy4gdG8gYXNzaXN0IGluIHRoZSBlc3RhYmxpc2htZW50IG9mIGEgIG11bHRpbGF0ZXJhbCBzeXN0ZW0gb2YgcGF5bWVudHMgYW5kIHRoZSAgZWxpbWluYXRpb24gb2YgZm9yZWlnbiBleGNoYW5nZSAgcmVzdHJpY3Rpb25zOyBhbmQgIDQuIHRvIGFzc2lzdCBtZW1iZXIgY291bnRyaWVzIGJ5ICB0ZW1wb3JhcmlseSBwcm92aWRpbmcgZmluYW5jaWFsICByZXNvdXJjZXMgdG8gY29ycmVjdCBtYWxhZGp1c3RtZW50IGluICB0aGVpciBiYWxhbmNlIG9mIHBheW1lbnRzIChCb1BzKS4gIFRoZSBJbnRlcm5hdGlvbmFsIEJhbmsgZm9yIFJlY29uc3RydWN0aW9uICBhbmQgRGV2ZWxvcG1lbnQgaXMgdGhlIG9sZGVzdCBvZiB0aGUgV0IgIGluc3RpdHV0aW9ucyB3aGljaCBzdGFydGVkIGZ1bmN0aW9uaW5nICAoMTk0NSkgaW4gdGhlIGFyZWEgb2YgcmVjb25zdHJ1Y3Rpb24gb2YgdGhlICB3YXItcmF2YWdlZCByZWdpb25zIChXb3JsZCBXYXIgSUkpIGFuZCBsYXRlciAgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgbWlkZGxlLWluY29tZSAgYW5kIGNyZWRpdC13b3J0aHkgcG9vcmVyIGVjb25vbWllcyBvZiB0aGUgIHdvcmxkLiBUbyBlbnN1cmUgdGhlIGltcGxlbWVudGF0aW9uIG9mICBkZXZlbG9wbWVudCBwcm9qZWN0cyBpcyBvbmUgb2YgdGhlICBvYmplY3RpdmVzIG9mIFdvcmxkIEJhbmsuICBTb3VyY2U6IEluZGlhbiBFY29ub215IGJ5IFJhbWVzaCBTaW5naD4gIENoYXB0ZXItMTYgPiBQYWdlIG5vLTQ3NCAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  2, 3 and 4 only ",
        "option3" : "  1, 2 and 3 only ",
        "option4" : "  1, 2 and 4 only  "
      }
    },
    {
      "index" : 79,
      "question" : " Consider the following statements: 1. Bond Price have an inverse relationship to interest rates. 2.  Speculative demand for money is inversely related to the rate of interest. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQm9uZHMgaGF2ZSBhbiAgaW52ZXJzZSByZWxhdGlvbnNoaXAgdG8gaW50ZXJlc3QgcmF0ZXMuICBXaGVuIHRoZSBjb3N0IG9mIGJvcnJvd2luZyBtb25leSByaXNlcyAgKHdoZW4gaW50ZXJlc3QgcmF0ZXMgcmlzZSksIGJvbmQgcHJpY2VzICB1c3VhbGx5IGZhbGwsIGFuZCB2aWNlLXZlcnNhLiAgRGlmZmVyZW50IHBlb3BsZSBoYXZlIGRpZmZlcmVudCBleHBlY3RhdGlvbnMgIHJlZ2FyZGluZyB0aGUgZnV0dXJlIG1vdmVtZW50cyBpbiB0aGUgIG1hcmtldCByYXRlIG9mIGludGVyZXN0IGJhc2VkIG9uIHRoZWlyIHByaXZhdGUgIGluZm9ybWF0aW9uIHJlZ2FyZGluZyB0aGUgZWNvbm9teS4gSWYgeW91ICB0aGluayB0aGF0IHRoZSBtYXJrZXQgcmF0ZSBvZiBpbnRlcmVzdCBzaG91bGQgIGV2ZW50dWFsbHkgc2V0dGxlIGRvd24gdG8gOCBwZXIgY2VudCBwZXIgIGFubnVtLCB0aGVuIHlvdSBtYXkgY29uc2lkZXIgdGhlIGN1cnJlbnQgIHJhdGUgb2YgNSBwZXIgY2VudCB0b28gbG93IHRvIGJlIHN1c3RhaW5hYmxlICBvdmVyIHRpbWUuIFlvdSBleHBlY3QgaW50ZXJlc3QgcmF0ZSB0byByaXNlICBhbmQgY29uc2VxdWVudGx5IGJvbmQgcHJpY2VzIHRvIGZhbGwuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogV2hlbiB0aGUgaW50ZXJlc3QgIHJhdGUgaXMgdmVyeSBoaWdoIGV2ZXJ5b25lIGV4cGVjdHMgaXQgdG8gZmFsbCBpbiAgZnV0dXJlIGFuZCBoZW5jZSBhbnRpY2lwYXRlcyBjYXBpdGFsIGdhaW5zICBmcm9tIGJvbmQtaG9sZGluZy4gSGVuY2UgcGVvcGxlIGNvbnZlcnQgIHRoZWlyIG1vbmV5IGludG8gYm9uZHMuIFRodXMsIHNwZWN1bGF0aXZlICBkZW1hbmQgZm9yIG1vbmV5IGlzIGxvdy4gV2hlbiBpbnRlcmVzdCByYXRlICBjb21lcyBkb3duLCBtb3JlIGFuZCBtb3JlIHBlb3BsZSBleHBlY3QgaXQgIHRvIHJpc2UgaW4gdGhlIGZ1dHVyZSBhbmQgYW50aWNpcGF0ZSBjYXBpdGFsICBsb3NzLiBUaHVzLCB0aGV5IGNvbnZlcnQgdGhlaXIgYm9uZHMgaW50byAgbW9uZXkgZ2l2aW5nIHJpc2UgdG8gYSBoaWdoIHNwZWN1bGF0aXZlICBkZW1hbmQgZm9yIG1vbmV5LiBIZW5jZSBzcGVjdWxhdGl2ZSAgZGVtYW5kIGZvciBtb25leSBpcyBpbnZlcnNlbHkgcmVsYXRlZCB0byAgdGhlIHJhdGUgb2YgaW50ZXJlc3QuIGkuZS4gaGlnaGVyIHRoZSByYXRlIG9mICBpbnRlcmVzdCBzbWFsbGVyIHdpbGwgYmUgc3BlY3VsYXRpdmUgIGRlbWFuZCBmb3IgbW9uZXkgYW5kIHZpY2UgdmVyc2EuICBTb3VyY2U6IENsYXNzLSAxMnRoICwgTWFjcm9lY29ub21pY3M+ICBjaGFwdGVyLSAzPiBQYWdlLSA0NiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 80,
      "question" : " Which of the following statements is/are correct regarding open network for digital commerce (ONDC)? 1.  ONDC is being setup as a subsidiary of National Payments Corporation of India (NPCI). 2.  It aims to pave the way for democratising digital commerce in the country.  3.  It doesn't require buyers and sellers to use the same platform to complete a transaction. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEV4cGxhbmF0aW9uOiAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgNCAzICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IE9OREMsIHNldCB1cCBhcyAgYSBub24tcHJvZml0IGNvbXBhbnkgKGxpa2UgdGhlIE5hdGlvbmFsICBQYXltZW50cyBDb3Jwb3JhdGlvbiBvZiBJbmRpYSksIGlzIGEgIG5ldHdvcmsgdGhhdCBsZXRzIHNlbGxlcnMgdm9sdW50YXJpbHkgZGlzcGxheSAgdGhlaXIgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIGFjcm9zcyBhbGwgIHBhcnRpY2lwYXRpbmcgYXBwcyBhbmQgcGxhdGZvcm1zLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHBpbG90IHBoYXNlIG9mICBPcGVuIE5ldHdvcmsgZm9yIERpZ2l0YWwgQ29tbWVyY2UgKE9OREMpLCAgYSBmaXJzdC1vZi1pdHMta2luZCBpbml0aWF0aXZlIGdsb2JhbGx5IHRvICBwYXZlIHdheSBmb3IgZGVtb2NyYXRpc2luZyBkaWdpdGFsICBjb21tZXJjZSB0byBlbmhhbmNlIHRoZSBwZW5ldHJhdGlvbiBvZiAgZGlnaXRhbCBjb21tZXJjZSBpbiB0aGUgY291bnRyeS4gIERlc2NyaWJlZCBhcyAnZ2FtZSBjaGFuZ2luZyBpZGVhIHRvICBkZW1vY3JhdGlzZSBjb21tZXJjZScgdGhlIGluaXRpYXRpdmUgYWltcyB0byAgcHJvbW90ZSBhbiBvcGVuIHBsYXRmb3JtIGZvciBhbGwgYXNwZWN0cyBvZiAgdGhlIGV4Y2hhbmdlIG9mIGdvb2RzIGFuZCBzZXJ2aWNlcyB0aHJvdWdoICBlbGVjdHJvbmljIG5ldHdvcmtzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogU2luY2UgdGhpcyBuZXR3b3JrICB1c2VzIG9wZW4gc3BlY2lmaWNhdGlvbnMgYW5kIHByb3RvY29scywgYW5kICBpc24ndCB0aWVkIGRvd24gdG8gYW55IHBsYXRmb3JtIC0gaXQgZG9lc24ndCAgcmVxdWlyZSBidXllcnMgYW5kIHNlbGxlcnMgdXNlIHRoZSBzYW1lICBwbGF0Zm9ybSB0byBjb21wbGV0ZSBhIHRyYW5zYWN0aW9uLiAgU28gbG9uZyBhcyB0aGUgcGxhdGZvcm1zIGFyZSBjb25uZWN0ZWQgdG8gIHRoaXMgb3BlbiBuZXR3b3JrLCBidXllcnMgYW5kIHNlbGxlcnMgY2FuICB0cmFuc2FjdCBpcnJlc3BlY3RpdmUgb2YgdGhlIGFwcGxpY2F0aW9ucyB0aGV5ICB1c2UuICBTb3VyY2U6ICBodHRwczovL3d3dy50aGVxdWludC5jb20vZXhwbGFpbmVycyBoZS0gbmV4dC11cGktd2hhdC1pcy1vbmRjLWluZGlhcy1vcGVuLSBuZXR3b3JrLWZvci1kaWdpdGFsLWNvbW1lcmNlICAgcGlsb3QtcGhhc2Utb2Ytb3Blbi1uZXR3b3JrLWZvci1kaWdpdGFsLSBjb21tZXJjZS1vbmRjLWFpbXMtdG8tZGVtb2NyYXRpc2UtZS0gY29tbWVyY2UvOTM2NzQyLyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  3 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 81,
      "question" : " With reference to Marginal Standing Facility (MSF), consider the following statements: 1.  Bank will have to provide collateral in order to borrow under MSF. 2.  The MSF rate remains higher than the prevailing repo rate. 3.  The RBI is obligated to lend money under MSF. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgx",
      "description" : "IEV4cGxhbmF0aW9uOiAgTWFyZ2luYWwgU3RhbmRpbmcgRmFjaWxpdHkgKE1TRikgIE1TRiBpcyBhIG5ldyBzY2hlbWUgYW5ub3VuY2VkIGJ5IHRoZSBSQkkgIGluIGl0cyBNb25ldGFyeSBQb2xpY3ksIDIwMTEtMTIgd2hpY2ggY2FtZSAgaW50byBlZmZlY3QgZnJvbSBNYXksIDIwMTEuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVW5kZXIgdGhpcyBzY2hlbWUsICBiYW5rcyBjYW4gYm9ycm93IG92ZXJuaWdodCB1cCB0byBhIGNlcnRhaW4gIHBlciBjZW50IG9mIHRoZWlyIG5ldCBkZW1hbmQgYW5kIHRpbWUgIGxpYWJpbGl0aWVzIChORFRMKSBmcm9tIHRoZSBSQkkuIExvYW5zIGdpdmVuICBhdCBNU0YgcmF0ZXMgaW52b2x2ZSBwcm92aWRpbmcgIGdvdmVybm1lbnQgc2VjdXJpdGllcyBhcyBjb2xsYXRlcmFsLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIE1TRiByYXRlIGhhcyAgYmVlbiBmbG9hdGVkIGFzIGEgcGVuYWwgcmF0ZS4gSGVuY2UgaXQgaXMgIGFsd2F5cyBoaWdoZXIgdGhhbiByZXBvIHJhdGUuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IERvIG5vdGUgdGhhdCB0aGUgIGNlbnRyYWwgYmFuayBpcyBub3Qgb2JsaWdhdGVkIHRvIGxlbmQgbW9uZXkgIHVuZGVyIE1TRi4gSXQgaGFzIGFsbCB0aGUgcmlnaHRzIG9uIGl0cyAgZXhlY3V0aW9uLiAgU291cmNlOiBJbmRpYW4gRWNvbm9teSBieSBSYW1lc2ggU2luZ2g+ICBDaGFwdGVyLTEyID4gUGFnZSBuby0gMzU2ICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vaW5kIHVzdHJ5L21pc2NlbGxhbmVvdXMvd2hhdC1pcy1tYXJnaW5hbC0gc3RhbmRpbmctZmFjaWxpdHktIG1zZi9hcnRpY2xlc2hvdy85MjA3Nzk0Mi5jbXM/ZnJvbT1tZHIgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 82,
      "question" : " Consider the following statements with reference to data protection ecosystem: 1.  Data Empowerment and Protection Architecture (DEPA) has been formed under the personal data protection Act 2021 to promote good data governance. 2.  DEPA allows people to access their data and share it with third party institutions. 3. 'Data principal' is the first organization who gets access to private data of some individual and decides its use. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgy",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBERVBBIGlzIGEgam9pbnQgIHB1YmxpYy1wcml2YXRlIGVmZm9ydCBmb3IgYW4gaW1wcm92ZWQgZGF0YSAgZ292ZXJuYW5jZSBhcHByb2FjaC4gSXQgY3JlYXRlcyBhIGRpZ2l0YWwgIGZyYW1ld29yayB0aGF0IGFsbG93cyB1c2VycyB0byBzaGFyZSB0aGVpciAgZGF0YSBvbiB0aGVpciBvd24gdGVybXMgdGhyb3VnaCBhIHRoaXJkLSBwYXJ0eSBlbnRpdHksIENvbnNlbnQgTWFuZ2Vycy4gIFRoZSBwZXJzb25hbCBkYXRhIHByb3RlY3Rpb24gYmlsbCBoYXMgYmVlbiAgd2l0aGRyYXduIGJ5IHRoZSBHb3Zlcm5tZW50LiBTbywgaXQgY2FuIG5vdCAgYmUgZm9ybWVkIHVuZGVyIHRoZSBiaWxsISAgREVQQSB3aWxsIG5vdCBiZSBhIHN0YXRpYyBwb2xpY3kgb3IgcHJvZHVjdDsgIGluc3RlYWQsIERFUEEgaXMgZGVzaWduZWQgYXMgYW4gZXZvbHZhYmxlICBhbmQgYWdpbGUgZnJhbWV3b3JrIGZvciBnb29kIGRhdGEgIGdvdmVybmFuY2UsIGdpdmVuIHRoZSByYXBpZCBwYWNlIG9mIGNoYW5nZSAgaW4gdGhpcyBhcmVuYS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEluIGEgbnV0c2hlbGwsICBERVBBIGVtcG93ZXJzIHBlb3BsZSB0byBzZWFtbGVzc2x5IGFuZCAgc2VjdXJlbHkgYWNjZXNzIHRoZWlyIGRhdGEgYW5kIHNoYXJlIGl0ICB3aXRoIHRoaXJkIHBhcnR5IGluc3RpdHV0aW9ucy4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogJ0RhdGEgcHJpbmNpcGFsJyAgaXMgdGhlIGluZGl2aWR1YWwgd2hvc2UgcGVyc29uYWwgZGF0YSBpcyAgYmVpbmcgcHJvY2Vzc2VkLCB3aGlsZSAnZGF0YSBmaWR1Y2lhcnknIGlzIHRoZSAgZW50aXR5IG9yIGluZGl2aWR1YWwgd2hvIGRlY2lkZXMgdGhlIG1lYW5zICBhbmQgcHVycG9zZXMgb2YgcHJvY2Vzc2luZyBkYXRhLiAgU291cmNlOiAgaHR0cHM6Ly93d3cubml0aS5nb3YuaW4vc2l0ZXMvZGVmYXVsdC9maWxlcy8gMjAyMC0wOS9ERVBBLUJvb2sucGRmICBEYXRhIEVtcG93ZXJtZW50IGFuZCBQcm90ZWN0aW9uICBBcmNoaXRlY3R1cmU6IENvbmNlcHQgYW5kIEFzc2Vzc21lbnQgfCAgT1JGIChvcmZvbmxpbmUub3JnKSAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2J1c2luZXMgcy9lY29ub215L2RyYWZ0LW9uLWFyY2hpdGVjdHVyZS1mb3ItdGhpcmQtIHBhcnR5LWFjY2Vzcy10by1kYXRhLXJlbGVhc2VkLW5pdGktc2Vla3MtIHZpZXdzLTY1ODM1ODEvICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following pairs:  Protected Areas State 1. Raimona National Park Telangana 2. Sariska Tiger reserve Rajasthan 3. Balphakram National Park Mizoram Which of the pairs given above is/are correctly matched? www.upscmaterial.onlineKSG: MEMBER'S COPY  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgz",
      "description" : "IEV4cGxhbmF0aW9uOiAgUGFpciAxIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IFJhaW1vbmEgaW4gIEtva3JhamhhciBkaXN0cmljdCBoYXMgYmVjb21lIEFzc2FtJ3MgIHNpeHRoIG5hdGlvbmFsIHBhcmsuICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBUaGUgU2FyaXNrYSAgTmF0aW9uYWwgUGFyayBzcHJlYWRzIG92ZXIgYXJvdW5kIDEyMDAgc3EuICB3dyB3LiB1cCBzYyBtYSB0ZXIgaWFsIC4gbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyA0IDQgIGttLiBpbiB0aGUgbGFwIG9mIHRoZSBiZWF1dGlmdWwgQXJhdmFsaSBIaWxscyAgaW4gUmFqYXN0aGFuLiAgUGFpciAzIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IEJhbHBoYWtyYW0gIGlzIGEgcGxhY2Ugb2YgcGVycGV0dWFsIHdpbmRzLCBjb3ZlcmluZyBhbiAgYXJlYSBvZiBhYm91dCAyMjAgc3EuIGttIHdpdGggYSB2YXJpZXR5IG9mICB3aWxkbGlmZSBpbmNsdWRpbmcgdGlnZXJzLCBlbGVwaGFudHMsIGJpc29uLCAgYmxhY2sgYmVhciwgbGVvcGFyZHMsIHNhbWJhciBkZWVyLiBJdCBpcyAgc2l0dWF0ZWQgbmVhciBCYWdobWFyYSBpbiBTb3V0aCBHYXJvICBIaWxscyBEaXN0cmljdCBvZiBNZWdoYWxheWEuIFRoZSB3ZXN0ZXJuICBwYXJ0IG9mIHRoZSBwYXJrIGFkam9pbnMgd2l0aCB0aGUgU2lqdSBiaXJkICBzYW5jdHVhcnkgYWxvbmcgdGhlIGJhbmtzIG9mIFNpbXNhbmcgUml2ZXIuICBTb3VyY2U6ICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbCAvcmFpbW9uYS1iZWNvbWVzLWFzc2Ftcy1zaXh0aC1uYXRpb25hbC0gcGFyay9hcnRpY2xlMzQ3MzY3MTkuZWNlICBTYXJpc2thIFNhZmFyaSBCb29raW5nLCBTYXJpc2thIFNhZmFyaSAgQm9va2luZyBPbmxpbmUgLSBTYXJpc2thIFRpZ2VyIFJlc2VydmUgIEluY3JlZGlibGUgSW5kaWEgfCBCYWxwYWtyYW0gTmF0aW9uYWwgUGFyayAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 84,
      "question" : " Which of the following initiatives fall under the aegis of Atal Innovation Mission (AIM)? 1.  Make in India 2.  Mentor India 3.  The Aatmanirbhar Bharat ARISE-ANIC program 4.  Vernacular Innovation Program Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg0",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgIEF0YWwgSW5ub3ZhdGlvbiBNaXNzaW9uIChBSU0pLCBOSVRJIEFheW9nIGlzICBHb3Zlcm5tZW50IG9mIEluZGlhJ3MgZmxhZ3NoaXAgaW5pdGlhdGl2ZSB0byAgcHJvbW90ZSBhIGN1bHR1cmUgb2YgaW5ub3ZhdGlvbiBhbmQgIGVudHJlcHJlbmV1cnNoaXAgaW4gdGhlIGNvdW50cnkgYW5kIHdhcyAgc2V0dXAgaW4gMjAxNi4gICBUb3dhcmRzIHRoaXMgZW5kIEFJTSBoYXMgdGFrZW4gYSBob2xpc3RpYyAgYXBwcm9hY2ggdG8gZW5zdXJlIGNyZWF0aW9uIG9mIGEgcHJvYmxlbS0gc29sdmluZyBpbm5vdmF0aXZlIG1pbmRzZXQgaW4gc2Nob29scyBhbmQgIGNyZWF0aW5nIGFuIGVjb3N5c3RlbSBvZiBlbnRyZXByZW5ldXJzaGlwICBpbiB1bml2ZXJzaXRpZXMsIHJlc2VhcmNoIGluc3RpdHV0aW9ucywgcHJpdmF0ZSAgYW5kIE1TTUUgc2VjdG9yLiBBbGwgdGhlIGluaXRpYXRpdmVzIG9mIEFJTSAgYXJlIGN1cnJlbnRseSBtb25pdG9yZWQgYW5kIG1hbmFnZWQgIHN5c3RlbWF0aWNhbGx5IHVzaW5nIHJlYWwtdGltZSBNSVMgc3lzdGVtcyAgYW5kIGR5bmFtaWMgZGFzaGJvYXJkcy4gICBBSU0gSW5pdGlhdGl2ZXM6ICAxLiBBdGFsIFRpbmtlcmluZyBMYWJzIC0gYXQgc2Nob29sIGxldmVsICAyLiBBdGFsIEluY3ViYXRpb24gQ2VudHJlcyAtICJBbiBlY29zeXN0ZW0gIG9mIFN0YXJ0dXBzIGFuZCBFbnRyZXByZW5ldXJzJyAgMy4gQXRhbCBDb21tdW5pdHkgSW5ub3ZhdGlvbiBDZW50cmVzIC0gIHNlcnZpbmcgVW5zZXJ2ZWQgYW5kIFVuZGVyLVNlcnZlZCAgcmVnaW9ucyBvZiBJbmRpYSAgNC4gQXRhbCBOZXcgSW5kaWEgQ2hhbGxlbmdlcyAtIFByb2R1Y3QgYW5kICBTZXJ2aWNlIElubm92YXRpb25zIHdpdGggTmF0aW9uYWwgSW1wYWN0ICA1LiBBUklTRSBBTklDIGNoYWxsZW5nZXMgLSB0byBzdGltdWxhdGUgIHN0YXJ0dXAvIE1TTUUgaW5kdXN0cnkgaW5ub3ZhdGlvbiAg74K3IFRoZSBBYXRtYW5pcmJoYXIgQmhhcmF0IEFSSVNFLSBBTklDIHByb2dyYW0gaXMgYSBuYXRpb25hbCBpbml0aWF0aXZlICB0byBwcm9tb3RlIHJlc2VhcmNoICYgaW5ub3ZhdGlvbiAgYW5kIGluY3JlYXNlIGNvbXBldGl0aXZlbmVzcyBvZiAgSW5kaWFuIHN0YXJ0dXBzIGFuZCBNU01Fcy4gICA2LiBNZW50b3Igb2YgQ2hhbmdlIChNZW50b3JzaGlwIGFuZCAgUGFydG5lcnNoaXBzIC0gd2l0aCBQdWJsaWMsIFByaXZhdGUgIHNlY3RvciwgTkdPcywgQWNhZGVtaWEsIEluc3RpdHV0aW9ucykgIO+CtyBNZW50b3IgSW5kaWEgaXMgYSBzdHJhdGVnaWMgbmF0aW9uICBidWlsZGluZyBpbml0aWF0aXZlIHRvIGVuZ2FnZSBsZWFkZXJzICB3aG8gY2FuIGd1aWRlIGFuZCBtZW50b3Igc3R1ZGVudHMgIGluIG92ZXIgODcwMCBBdGFsIFRpbmtlcmluZyBMYWJzIHRoYXQgIEF0YWwgSW5ub3ZhdGlvbiBNaXNzaW9uIGhhcyAgZXN0YWJsaXNoZWQgYWNyb3NzIEluZGlhLiAgNy4gVmVybmFjdWxhciBJbm5vdmF0aW9uIFByb2dyYW0gKFZJUCkgIGlzIGFuIGluaXRpYXRpdmUgb2YgdGhlIEF0YWwgSW5ub3ZhdGlvbiAgTWlzc2lvbiAoQUlNKSwgTklUSSBBYXlvZywgdGFyZ2V0ZWQgYXQgIGRlY291cGxpbmcgY3JlYXRpdmUgZXhwcmVzc2lvbiBmcm9tIHRoZSAgbGFuZ3VhZ2Ugb2YgdHJhbnNhY3Rpb24gaW4gSW5kaWEncyAgaW5ub3ZhdGlvbiBlY29zeXN0ZW0uICBUaGUgTWFrZSBpbiBJbmRpYSBpbml0aWF0aXZlIHdhcyBsYXVuY2hlZCBieSAgUHJpbWUgTWluaXN0ZXIgaW4gU2VwdGVtYmVyIDIwMTQgYXMgcGFydCBvZiAgYSB3aWRlciBzZXQgb2YgbmF0aW9uLWJ1aWxkaW5nIGluaXRpYXRpdmVzLiAgRGV2aXNlZCB0byB0cmFuc2Zvcm0gSW5kaWEgaW50byBhIGdsb2JhbCAgZGVzaWduIGFuZCBtYW51ZmFjdHVyaW5nIGh1Yi4gIFNvdXJjZTogaHR0cHM6Ly9haW0uZ292LmluL292ZXJ2aWV3LnBocCAgaHR0cHM6Ly93d3cubWFrZWluaW5kaWEuY29tL2Fib3V0ICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 and 4 only ",
        "option3" : "  2, 3 and 4 only",
        "option4" : "  1, 2, 3 an 4   "
      }
    },
    {
      "index" : 85,
      "question" : " Which of the following banks have been identified as Domestic Systemically Important Banks (D-SIBs) by the Reserve Bank of India in the 2021 list of D-SIBs? 1.  Axis Bank 2.  State Bank of India 3.  HDFC Bank 4.  ICICI Bank 5.  Punjab National Bank Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg1",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiAgVGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSBzYWlkIFN0YXRlICBCYW5rIG9mIEluZGlhIChTQkkpLCBJQ0lDSSBCYW5rIGFuZCBIREZDICBCYW5rIGNvbnRpbnVlIHRvIGJlIGlkZW50aWZpZWQgYXMgIERvbWVzdGljIFN5c3RlbWljYWxseSBJbXBvcnRhbnQgQmFua3MgIChELVNJQnMpIGluIHRoZSB5ZWFyIDIwMjEsIHVuZGVyIHRoZSBzYW1lICBidWNrZXRpbmcgc3RydWN0dXJlIGFzIGluIHRoZSAyMDIwIGxpc3Qgb2YgRC0gU0lCcy4gIEVzc2VudGlhbGx5LCBzeXN0ZW1pY2FsbHkgaW1wb3J0YW50IGJhbmtzICBhcmUgdGhlIG9uZXMgcGVyY2VpdmVkIGFzIHRvbyBiaWcgdG8gZmFpbC4gU3VjaCAgYSBwZXJjZXB0aW9uIGNyZWF0ZXMgYW4gZXhwZWN0YXRpb24gb2YgZ292dCAgc3VwcG9ydCBmb3IgdGhlc2UgYmFua3MgYXQgdGltZXMgb2YgZGlzdHJlc3MgICBSQkkgcGxhY2VzIEQtU0lCcyBpbiBhcHByb3ByaWF0ZSBidWNrZXRzICBkZXBlbmRpbmcgdXBvbiB0aGVpciBTeXN0ZW1pYyBJbXBvcnRhbmNlICBTY29yZXMgKFNJU3MpLiBUaGUgY2VudHJhbCBiYW5rJ3MgY3VycmVudCAgdXBkYXRlIG9uIEQtU0lCcyBpcyBiYXNlZCBvbiB0aGUgZGF0YSAgY29sbGVjdGVkIGZyb20gYmFua3MgYXMgb24gTWFyY2ggMzEsIDIwMjEuICBCYXNlZCBvbiB0aGUgYnVja2V0IGluIHdoaWNoIGEgRC1TSUIgaXMgIHBsYWNlZCwgYW4gYWRkaXRpb25hbCBjb21tb24gZXF1aXR5ICByZXF1aXJlbWVudCBpcyBhcHBsaWVkIHRvIGl0LiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3MtIHN0YW5kYXJkLmNvbS9hcnRpY2xlL2ZpbmFuY2UvaGRmYy1iYW5rLSBpY2ljaS1iYW5rLXNiaS1hcmUtZG9tZXN0aWMtc3lzdGVtaWNhbGx5LSBpbXBvcnRhbnQtbGVuZGVycy1yYmktIDEyMjAxMDQwMTIwOF8xLmh0bWwgIGh0dHBzOi8vd3d3LnJiaS5vcmcuaW4vU2NyaXB0cy9CU19QcmVzc1IgZWxlYXNlRGlzcGxheS5hc3B4P3ByaWQ9NTMwNDUgIHd3IHcuIHVwIHNjIG1hIHRlciBpIGwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDQgNSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 3 and 4 only ",
        "option2" : "  2, 4 and 5 only ",
        "option3" : "  1, 3 and 4 only ",
        "option4" : "  2, 3 and 4 only  "
      }
    },
    {
      "index" : 86,
      "question" : " Which of the following constitutes the asset of a bank? 1.  Deposits of people kept in savings account 2.  Deposits kept with RBI  3.  Vault cash secured in the bank 4.  Loans given to the public 5.  Government securities held by the bank Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg2",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgQXNzZXRzIGFyZSB0aGluZ3MgYSBmaXJtIG93bnMgb3Igd2hhdCBhIGZpcm0gIGNhbiBjbGFpbSBmcm9tIG90aGVycy4gSW4gY2FzZSBvZiBhIGJhbmssICBhcGFydCBmcm9tIGJ1aWxkaW5ncywgZnVybml0dXJlLCBldGMuLCBpdHMgIGFzc2V0cyBhcmUgbG9hbnMgZ2l2ZW4gdG8gcHVibGljLiBXaGVuIHRoZSAgYmFuayBnaXZlcyBvdXQgbG9hbiBvZiBScyAxMDAgdG8gYSBwZXJzb24sICB0aGlzIGlzIHRoZSBiYW5rJ3MgY2xhaW0gb24gdGhhdCBwZXJzb24gZm9yIFJzICAxMDAuIEFub3RoZXIgYXNzZXQgdGhhdCBhIGJhbmsgaGFzIGlzICByZXNlcnZlcy4gUmVzZXJ2ZXMgYXJlIGRlcG9zaXRzIHdoaWNoICBjb21tZXJjaWFsIGJhbmtzIGtlZXAgd2l0aCB0aGUgQ2VudHJhbCAgYmFuaywgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIChSQkkpIGFuZCBpdHMgIGNhc2guIFRoZXNlIHJlc2VydmVzIGFyZSBrZXB0IHBhcnRseSBhcyBjYXNoICBhbmQgcGFydGx5IGluIHRoZSBmb3JtIG9mIGZpbmFuY2lhbCAgaW5zdHJ1bWVudHMgKGJvbmRzIGFuZCB0cmVhc3VyeSBiaWxscykgIGlzc3VlZCBieSB0aGUgUkJJLiBSZXNlcnZlcyBhcmUgc2ltaWxhciB0byAgZGVwb3NpdHMgd2Uga2VlcCB3aXRoIGJhbmtzLiBXZSBrZWVwICBkZXBvc2l0cyBhbmQgdGhlc2UgZGVwb3NpdHMgYXJlIG91ciBhc3NldHMsICB0aGV5IGNhbiBiZSB3aXRoZHJhd24gYnkgdXMuIFNpbWlsYXJseSwgIGNvbW1lcmNpYWwgYmFua3MgbGlrZSBTdGF0ZSBCYW5rIG9mIEluZGlhICAoU0JJKSBrZWVwIHRoZWlyIGRlcG9zaXRzIHdpdGggUkJJIGFuZCB0aGVzZSAgYXJlIGNhbGxlZCBSZXNlcnZlcy4gVmF1bHQgY2FzaCBpcyBvbmUgb2YgdHdvICB0eXBlcyBvZiBiYW5rIGFzc2V0cyB0aGF0IGFyZSBjb25zaWRlcmVkICByZXNlcnZlcyBhbmQgdXNlZCB0byBzYXRpc2Z5IHJlc2VydmUgIHJlcXVpcmVtZW50cy4gIFRoZSBzZWNvbmQgY2F0ZWdvcnkgb2YgYmFuayBhc3NldCAgaXMgR292ZXJubWVudCBzZWN1cml0aWVzLCB3aGljaCBhcmUgYSAgY29tbW9uIG1lY2hhbmlzbSBmb3IgYm9ycm93aW5nIHVzZWQgYnkgIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQuIFRyZWFzdXJ5IHNlY3VyaXRpZXMgIGluY2x1ZGUgc2hvcnQgdGVybSBiaWxscywgaW50ZXJtZWRpYXRlIHRlcm0gIG5vdGVzIGFuZCBsb25nIHRlcm0gYm9uZHMuICAgTGlhYmlsaXRpZXMgZm9yIGFueSBmaXJtIGFyZSBpdHMgZGVidHMgb3Igd2hhdCAgaXQgb3dlcyB0byBvdGhlcnMuIEZvciBhIGJhbmssIHRoZSBtYWluICBsaWFiaWxpdHkgaXMgdGhlIGRlcG9zaXRzIHdoaWNoIHBlb3BsZSBrZWVwICB3aXRoIGl0LiAgIExpYWJpbGl0aWVzID0gRGVwb3NpdHMgIFNvdXJjZTogQ2xhc3MgMTF0aCBOQ0VSVC0gIE1hcmNyb2Vjb25vbWljcywgQ2hhcHRlci0zLCBQYWdlIG5vLiAzOSAgaHR0cHM6Ly9jb3Vyc2VzLmx1bWVubGVhcm5pbmcuY29tL3dtLSBtYWNyb2Vjb25vbWljcy9jaGFwdGVyL2JhbmtpbmctcHJvZml0cy0gYW5kLWxvc3Nlcy1uYW1lLyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2, 3 and 5 only ",
        "option2" : "  1 and 4 only ",
        "option3" : "  2, 3, 4 and 5 only ",
        "option4" : "  1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 87,
      "question" : " Consider the following statements with respect to the National Road Safety Board (NRSB): 1.  Chairperson of the board will be appointed by a collegium with members from Government, transporters and civil society. 2.  It will provide technical advice and assistance to the Central Government, State Governments and local authorities on road safety and traffic management. 3.  India is the only country across the world have such an agency to deal with matters relating to road safety. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg3",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBNaW5pc3RyeSBvZiBSb2FkICBUcmFuc3BvcnQgJiBIaWdod2F5cyBoYXMgbm90aWZpZWQgIGNvbnN0aXR1dGlvbiBvZiB0aGUgTmF0aW9uYWwgUm9hZCBTYWZldHkgIEJvYXJkLCBhbG9uZyB3aXRoIFJ1bGVzIHRoZXJlb2YsIG9uIDNyZCAgU2VwdGVtYmVyLCAyMDIxLiBUaGUgSGVhZCBPZmZpY2Ugb2YgdGhlICBCb2FyZCBzaGFsbCBiZSBpbiB0aGUgTmF0aW9uYWwgQ2FwaXRhbCBSZWdpb24gIGFuZCB0aGUgQm9hcmQgbWF5IGVzdGFibGlzaCBvZmZpY2VzIGF0IG90aGVyICBwbGFjZXMgaW4gSW5kaWEuIEl0IHNoYWxsIGNvbnNpc3Qgb2YgdGhlICBDaGFpcm1hbiBhbmQgbm90IGxlc3MgdGhhbiB0aHJlZSwgYnV0IG5vdCAgZXhjZWVkaW5nIHNldmVuIE1lbWJlcnMsIHRvIGJlIGFwcG9pbnRlZCAgYnkgdGhlIENlbnRyYWwgR292ZXJubWVudC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgVGhlIEJvYXJkIHNoYWxsIGZvcm11bGF0ZTogICDvgrcgU3BlY2lmaWMgc3RhbmRhcmRzIGZvciByb2FkIHNhZmV0eSwgdHJhZmZpYyAgbWFuYWdlbWVudCBhbmQgcm9hZCBjb25zdHJ1Y3Rpb24gZm9yICBoaWxseSByZWdpb25zLiAg74K3IEd1aWRlbGluZXMgZm9yIGNhcGFjaXR5IGJ1aWxkaW5nIGFuZCAgZGV2ZWxvcG1lbnQgb2Ygc2tpbGxzIGZvciB0cmFmZmljIHBvbGljZSwgIGhvc3BpdGFsIGF1dGhvcml0aWVzLCBoaWdod2F5ICBhdXRob3JpdGllcywgZWR1Y2F0aW9uYWwgYW5kIHJlc2VhcmNoICBvcmdhbml6YXRpb25zIGFuZCBvdGhlciAgb3JnYW5pemF0aW9ucy4gIO+CtyBHdWlkZWxpbmVzIGZvciBlc3RhYmxpc2hpbmcgYW5kICBvcGVyYXRpbmcgdHJhdW1hIGZhY2lsaXRpZXMgYW5kIHBhcmEtIG1lZGljYWwgZmFjaWxpdGllcywgZm9yIGNvbnNpZGVyYXRpb24gYnkgIHRoZSBDZW50cmFsIEdvdmVybm1lbnQuICAg74K3IEFuZCBwcm92aWRlIHRlY2huaWNhbCBhZHZpY2UgYW5kICBhc3Npc3RhbmNlIHRvIHRoZSBDZW50cmFsIEdvdmVybm1lbnQsICBTdGF0ZSBHb3Zlcm5tZW50cyBhbmQgbG9jYWwgYXV0aG9yaXRpZXMgIG9uIHJvYWQgc2FmZXR5IGFuZCB0cmFmZmljIG1hbmFnZW1lbnQuICDvgrcgQ29uZHVjdCByZXNlYXJjaCB0byBpbXByb3ZlIHJvYWQgc2FmZXR5LCAgdHJhZmZpYyBtYW5hZ2VtZW50LCBjcmFzaCBpbnZlc3RpZ2F0aW9uLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBOUlNCIGZ1bmN0aW9uICBhcyB0aGUgbGVhZCBhZ2VuY3kgYXQgbmF0aW9uYWwgbGV2ZWwgdG8gZGVhbCAgd2l0aCBtYXR0ZXJzIHJlbGF0aW5nIHRvIHJvYWQgc2FmZXR5LiAgU2V2ZXJhbCBjb3VudHJpZXMgYWNyb3NzIHRoZSB3b3JsZCBpbmNsdWRpbmcgIHRoZSBVbml0ZWQgU3RhdGVzLCBTd2VkZW4gYW5kIEF1c3RyYWxpYSAgaGF2ZSBsZWFkIGFnZW5jaWVzIGF0IG5hdGlvbmFsIGxldmVsLiAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD8gUFJJRD0xNzYxMDUxICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 only ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 88,
      "question" : " With reference to recently published Basic Road Statistics of India 2018-19 report, consider the following statements: 1.  India has the second largest road network in the world. 2.  Maharashtra has largest network of National Highways. 3.  Uttar Pradesh accounted for the largest network of Rural Roads. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg4",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQXMgcGVyIHRoZSByZWNlbnRseSAgcHVibGlzaGVkIHJlcG9ydCwgJ0Jhc2ljIFJvYWQgU3RhdGlzdGljcyBpbiAgSW5kaWEtMjAxOC0xOScsIEluZGlhIGhhcyBhIG5ldHdvcmsgb2Ygb3ZlciAgNjMsIDMxLDc1NyBraWxvbWV0cmVzIG9mIHJvYWRzIG9uICAzMS4wMy4yMDE5LCB3aGljaCBpcyB0aGUgc2Vjb25kIGxhcmdlc3QgaW4gIHRoZSB3b3JsZC4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IE1haGFyYXNodHJhIGhhcyAgdGhlIGxhcmdlc3QgbmV0d29yayBvZiBOYXRpb25hbCBIaWdod2F5cyAgd2l0aCAxNyw3NTcga20gZm9sbG93ZWQgYnkgVXR0YXIgUHJhZGVzaCAgYW5kIFJhamFzdGhhbiB3aXRoIDExLDczNyBrbSwgIGFuZCAxMCwzNDIgIGttIHJlc3BlY3RpdmVseSwgYXMgb24gMzEuMDMuMjAxOS4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogTWFoYXJhc2h0cmEgIGFjY291bnRlZCBmb3IgdGhlIGxhcmdlc3QgbmV0d29yayBvZiAgUnVyYWwgUm9hZHMgd2l0aCA0LDI2LDMyNyBrbSBmb2xsb3dlZCBieSAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgNCA2ICBBc3NhbSAzLDcyLDUxMCBrbSwgQmloYXIgMiw1OSw1MDcga20sICBVdHRhciBQcmFkZXNoIDIsNTUsNTc2IGttIGFuZCBNYWRoeWEgIFByYWRlc2ggMiwzMiwzNDQga20uICBTb3VyY2U6ICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4PyBQUklEPTE4NDMwNzIgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 89,
      "question" : " Consider the following statements with reference to land reforms in India: 1.  Subject of land reform is under the concurrent list to ensure nationwide uniformity. 2.  SVAMITVA scheme of the Ministry of Panchayati Raj aims to create accurate land records for rural planning. 3. Diversification of agricultural economy and achieving egalitarian social structure are among the objectives of land reforms in India. www.upscmat rial. nlineKSG: MEMBER'S COPY  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgc3ViamVjdCBvZiAgTGFuZCBSZWZvcm1zIGlzIHVuZGVyIHRoZSBleGNsdXNpdmUgIGxlZ2lzbGF0aXZlIGFuZCBhZG1pbmlzdHJhdGl2ZSBqdXJpc2RpY3Rpb24gb2YgIHRoZSBTdGF0ZXMgYXMgcHJvdmlkZWQgdW5kZXIgZW50cnkgTm8uMTggIExpc3QgSUkgKFN0YXRlIExpc3QpIG9mIFZJSSBzY2hlZHVsZSB0byB0aGUgIENvbnN0aXR1dGlvbiBvZiBJbmRpYS4gVGhlIENlbnRyYWwgIEdvdmVybm1lbnQgcGxheXMgYW4gYWR2aXNvcnkgYW5kICBjb29yZGluYXRpbmcgcm9sZSBpbiB0aGlzIGZpZWxkLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogU1ZBTUlUVkEgKFN1cnZleSAgb2YgdmlsbGFnZXMgYW5kIG1hcHBpbmcgd2l0aCBpbXByb3Zpc2VkICB0ZWNobm9sb2d5IGluIHZpbGxhZ2UgYXJlYXMpIHNjaGVtZSBpcyBhIG5ldyAgaW5pdGlhdGl2ZSBvZiB0aGUgTWluaXN0cnkgb2YgUGFuY2hheWF0aSBSYWouIEl0ICBhaW1zIHRvIHByb3ZpZGUgcnVyYWwgcGVvcGxlIHdpdGggdGhlIHJpZ2h0IHRvICBkb2N1bWVudCB0aGVpciByZXNpZGVudGlhbCBwcm9wZXJ0aWVzIHNvIHRoYXQgIHRoZXkgY2FuIHVzZSB0aGVpciBwcm9wZXJ0eSBmb3IgZWNvbm9taWMgIHB1cnBvc2VzLiAgU29tZSBvZiB0aGUgbWFqb3Igb2JqZWN0aXZlczogIO+CtyBUbyBjcmVhdGUgYWNjdXJhdGUgbGFuZCByZWNvcmRzIGZvciBydXJhbCAgcGxhbm5pbmcuICAg74K3IFRvIGJyaW5nIGZpbmFuY2lhbCBzdGFiaWxpdHkgdG8gdGhlIGNpdGl6ZW5zICBpbiBydXJhbCBJbmRpYSBieSBlbmFibGluZyB0aGVtIHRvIHVzZSAgdGhlaXIgcHJvcGVydHkgYXMgYSBmaW5hbmNpYWwgYXNzZXQgZm9yICB0YWtpbmcgbG9hbnMgYW5kIG90aGVyIGZpbmFuY2lhbCBiZW5lZml0cy4gIO+CtyBUbyByZWR1Y2UgcHJvcGVydHkgcmVsYXRlZCBkaXNwdXRlcyBhbmQgIGxlZ2FsIGNhc2VzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIG1ham9yICBvYmplY3RpdmVzIG9mIExhbmQgUmVmb3JtcyBjb25zaXN0IG9mICByZW9yZGVyaW5nIGFncmFyaWFuIHJlbGF0aW9ucyB0byBhY2hpZXZlICBhbiBlZ2FsaXRhcmlhbiBzb2NpYWwgc3RydWN0dXJlLCBlbGltaW5hdGlvbiAgb2YgZXhwbG9pdGF0aW9uIGluIGxhbmQgcmVsYXRpb25zLCByZWFsaXppbmcgIHRoZSBhZ2Utb2xkIGdvYWwgb2YgJ2xhbmQgdG8gYWN0dWFsIHRpbGxlcicsICBlbmxhcmdpbmcgdGhlIGxhbmQgYmFzZSBvZiBydXJhbCBwb29yLCAgaW5jcmVhc2luZyBhZ3JpY3VsdHVyYWwgcHJvZHVjdGlvbiwgIGRpdmVyc2lmaWNhdGlvbiBvZiBhZ3JpY3VsdHVyYWwgZWNvbm9teSAgZXRjLiAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL25ld3NpdGUvZXJlbGNvbnRlbnQuYXNwIHg/cmVsaWQ9NDk5MiAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1 and 3 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  3 only   "
      }
    },
    {
      "index" : 90,
      "question" : " Consider the following statements: 1.  PM SAMPADA Yojana aims at creation of modern post-harvest infrastructure and off-farm employment opportunities. 2.  PM- Formalization of Micro Food Processing Enterprises Scheme aims for setting up and upgradation of two lakh existing micro food processing enterprises across the country. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkw",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIE1pbmlzdHJ5IG9mIEZvb2QgIFByb2Nlc3NpbmcgSW5kdXN0cmllcyAoTW9GUEkpIGltcGxlbWVudHMgIHRoZSBQcmFkaGFuIE1hbnRyaSBLaXNhbiBTQU1QQURBICBZb2phbmEgKFBNS1NZKSB3aGljaCwgaW50ZXItYWxpYSwgYWltcyBhdCAgY3JlYXRpb24gb2YgbW9kZXJuIHBvc3QtaGFydmVzdCAgaW5mcmFzdHJ1Y3R1cmUsIHZhbHVlIGFkZGl0aW9uLCBwcm92aWRpbmcgIGJldHRlciByZXR1cm5zIHRvIGZhcm1lcnMsIGNyZWF0aW9uIG9mIG9mZi0gZmFybSBlbXBsb3ltZW50IG9wcG9ydHVuaXRpZXMgZXRjLiAgVW5kZXIgUE0gU0FNUEFEQSBzY2hlbWUgdGhlIE1pbmlzdHJ5IG9mICBGb29kIFByb2Nlc3NpbmcgSW5kdXN0cmllcyBpcyBpbXBsZW1lbnRpbmcgIHZhcmlvdXMgQ2VudHJhbCBTZWN0b3IgU2NoZW1lcyBpbiB0aGUgZm9vZCAgcHJvY2Vzc2luZyBzZWN0b3IuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBJbiBhZGRpdGlvbiwgdGhlICBNaW5pc3RyeSBpcyBhbHNvIGltcGxlbWVudGluZyB0aGUgUE0tICBGb3JtYWxpemF0aW9uIG9mIE1pY3JvIEZvb2QgUHJvY2Vzc2luZyAgRW50ZXJwcmlzZXMgKFBNRk1FKSBTY2hlbWUgZm9yIHByb3ZpZGluZyAgZmluYW5jaWFsLCB0ZWNobmljYWwgYW5kIGJ1c2luZXNzIHN1cHBvcnQgIGZvciBzZXR0aW5nIHVwIGFuZCB1cGdyYWRhdGlvbiBvZiB0d28gbGFraCAgZXhpc3RpbmcgbWljcm8gZm9vZCBwcm9jZXNzaW5nICBlbnRlcnByaXNlcyBhY3Jvc3MgdGhlIGNvdW50cnkgb24gT25lICBEaXN0cmljdCBPbmUgUHJvZHVjdCAoT0RPUCkgYXBwcm9hY2guICBTb3VyY2U6ICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlSWZyYW1lUGFnZS4gYXNweD9QUklEPTE4NDg4MzkgICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4PyBQUklEPTE4NDQ4NzEgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 91,
      "question" : " Which among the following are functions of the Reserve Bank of India? 1.  Formulation, implementation and monitoring of the monetary policy 2.  Issuing of all new currency notes and coins 3.  Manages Foreign exchange reserves of the country 4. Introduces efficient modes of payment systems in the country 5.  Provides short term and long-term loans to the banks Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkx",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChjKSBpcyBjb3JyZWN0OiAgQXMgcGVyIHRoZSBjaGFuZ2luZyBuZWVkcyBvZiB0aW1lLCB0aGUgUkJJICBOYXRpb25hbGlzYXRpb24gQWN0IG9mIDE5NDkgaGFzIGJlZW4gIGFtZW5kZWQgc2V2ZXJhbCB0aW1lcyBieSB0aGUgR292ZXJubWVudCAgYW5kIGl0cyBmdW5jdGlvbnMgYnJvYWRlbmVkLiBJdHMgY3VycmVudCAgZnVuY3Rpb25zIG1heSBiZSBzdW1tYXJpc2VkIG9iamVjdGl2ZWx5IGluICB0aGUgZm9sbG93aW5nIHdheS0gIChpKSAgTW9uZXRhcnkgQXV0aG9yaXR5OiBJdCBpbmNsdWRlcyAgZm9ybXVsYXRpb24sIGltcGxlbWVudGF0aW9uIGFuZCAgbW9uaXRvcmluZyBvZiB0aGUgbW9uZXRhcnkgcG9saWN5LiAgIChpaSkgIEN1cnJlbmN5IEF1dGhvcml0eTogSXQgaW5jbHVkZXMgaXNzdWluZyAgb2YgbmV3IGN1cnJlbmN5IG5vdGVzIGFuZCBjb2lucyAgKGV4Y2VwdCB0aGUgY3VycmVuY3kgYW5kIGNvaW5zIG9mICBydXBlZSBvbmUgb3IgaXRzIGRlbm9taW5hdGlvbnMsIHdoaWNoICBhcmUgaXNzdWVkIGJ5IE1pbmlzdHJ5IG9mIEZpbmFuY2UgIGl0c2VsZikgYXMgd2VsbCBhcyBleGNoYW5naW5nIG9yICBkZXN0cm95aW5nIHRob3NlIG9uZXMgd2hpY2ggYXJlIG5vdCBmaXQgIGZvciBjaXJjdWxhdGlvbiAgIChpaWkpIFJlZ3VsYXRvciBhbmQgU3VwZXJ2aXNvciBvZiB0aGUgIEZpbmFuY2lhbCBTeXN0ZW06IEl0IGluY2x1ZGVzIHByZXNjcmliaW5nICBicm9hZCBwYXJhbWV0ZXJzIG9mIGJhbmtpbmcgb3BlcmF0aW9ucyAgd2l0aGluIHdoaWNoIHRoZSBiYW5raW5nIGFuZCBmaW5hbmNpYWwgIHN5c3RlbSBvcGVyYXRlcy4gICAoaXYpIE1hbmFnZXIgb2YgRm9yZWlnbiBFeGNoYW5nZTogSW4gIGluY2x1ZGVzIGJyb2FkIGZ1bmN0aW9ucyBsaWtlLSBtYW5hZ2luZyB0aGUgRkVNQSAoRm9yZWlnbiBFeGNoYW5nZSAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUgIFRFU1QgLSA5MDA2ICggKSAgIHd3dy4gICAgdC5tZS8gIFBhIGcgNCA3ICBNYW5hZ2VtZW50IEFjdCwgMTk5OSk7IGtlZXBpbmcgdGhlICBGb3JleCAoZm9yZWlnbiBleGNoYW5nZSkgcmVzZXJ2ZXMgb2YgIHRoZSBjb3VudHJ5OyBzdGFiaWxpc2luZyB0aGUgZXhjaGFuZ2UgIHJhdGUgb2YgcnVwZWU7IGFuZCByZXByZXNlbnRpbmcgdGhlICBHb3Zlcm5tZW50IG9mIEluZGlhIGluIHRoZSBJTUYgYW5kICBXb3JsZCBCYW5rIChhbmQgb3RoZXIgaW50ZXJuYXRpb25hbCAgZmluYW5jaWFsIGFnZW5jaWVzIG9mIHdoaWNoIEluZGlhIGlzICBtZW1iZXIpLiAgICh2KSAgUmVndWxhdG9yIGFuZCBTdXBlcnZpc29yIG9mIFBheW1lbnQgIGFuZCBTZXR0bGVtZW50IFN5c3RlbXM6IEl0IGluY2x1ZGVzICBmdW5jdGlvbnMgbGlrZSBpbnRyb2R1Y2luZyBhbmQgIHVwZ3JhZGluZyBzYWZlIGFuZCBlZmZpY2llbnQgbW9kZXMgb2YgIHBheW1lbnQgc3lzdGVtcyBpbiB0aGUgY291bnRyeSB0byAgbWVldCB0aGUgcmVxdWlyZW1lbnRzIG9mIHRoZSBwdWJsaWMgYXQgIGxhcmdlLiBUaGUgb2JqZWN0aXZlIGlzIG1haW50YWluaW5nICBwdWJsaWMgY29uZmlkLWVuY2UgaW4gcGF5bWVudCBhbmQgIHNldHRsZW1lbnQgc3lzdGVtLiAgICh2aSkgIEJhbmtlciBvZiB0aGUgR292ZXJubWVudHMgYW5kIEJhbmtzICAoa25vd24gYWxzbyBhcyB0aGUgUmVsYXRlZCBGdW5jdGlvbnMpOiAgVGhlIGJyb2FkIG9iamVjdGl2ZXMgYXJlIGVuYWJsaW5nICBnb3Zlcm5tZW50cyBhbmQgdGhlIGJhbmtzIG1vYmlsaXNlICBlbm91Z2ggbGlxdWlkaXR5IGZvciB0aGVpciBmdW5jdGlvbmluZyAgdW5kZXIgd2hpY2ggaXQgbGVuZHMgb3IgbWFuYWdlcyAgYm9ycm93aW5nIHBsYW5zIG9mIHRoZSBnb3Zlcm5tZW50cyBhbmQgIHByb3ZpZGVzIHNob3J0IHRlcm0gYW5kIGxvbmctdGVybSAgbG9hbnMgdG8gdGhlIGJhbmtzIChhcyBMZW5kZXIgb2YgTGFzdCAgUmVzb3J0KS4gIFNvdXJjZTogSW5kaWFuIEVjb25vbXkgYnkgUmFtZXNoIFNpbmdoPiAgQ2hhcHRlci0xMiA+IFBhZ2Ugbm8uMzUyICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 3 and 5 only ",
        "option2" : "  2, 4 and 5 only ",
        "option3" : "  1, 3, 4 and 5 only ",
        "option4" : "  1, 2, 3 and 4 only  "
      }
    },
    {
      "index" : 92,
      "question" : " Which of the following statements is/are incorrect? 1.  Reverse Repo Rate is the rate at which the Reserve Bank of India (RBI) borrows money from banks for the short term. 2.  The banks can voluntarily park excess funds with the central bank to earn higher interest on surplus money. 3.  The Reverse Repo Rate is decided by the Government of India. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDky",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUmV2ZXJzZSBSZXBvICBSYXRlIGlzIGRlZmluZWQgYXMgdGhlIHJhdGUgYXQgd2hpY2ggdGhlICBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkgYm9ycm93cyBtb25leSAgZnJvbSBiYW5rcyBmb3IgdGhlIHNob3J0IHRlcm0uIEl0IGlzIGFuICBpbXBvcnRhbnQgbW9uZXRhcnkgcG9saWN5IHRvb2wgZW1wbG95ZWQgYnkgIHRoZSBSQkkgdG8gbWFpbnRhaW4gbGlxdWlkaXR5IGFuZCBjaGVjayAgaW5mbGF0aW9uIGluIHRoZSBlY29ub215LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBSZXZlcnNlIFJlcG8gIFJhdGUgaGVscHMgdGhlIFJCSSBnZXQgbW9uZXkgZnJvbSB0aGUgYmFua3MgIHdoZW4gaXQgbmVlZHMuIEluIHJldHVybiwgdGhlIFJCSSBvZmZlcnMgIGF0dHJhY3RpdmUgaW50ZXJlc3QgcmF0ZXMgdG8gdGhlbS4gVGhlIGJhbmtzICBhbHNvIHZvbHVudGFyaWx5IHBhcmsgZXhjZXNzIGZ1bmRzIHdpdGggIHRoZSBjZW50cmFsIGJhbmsgYXMgaXQgcHJvdmlkZXMgdGhlbSB3aXRoICBhbiBvcHBvcnR1bml0eSB0byBlYXJuIGhpZ2hlciBpbnRlcmVzdCBvbiAgc3VycGx1cyBtb25leS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBSZXZlcnNlIFJlcG8gIFJhdGUgaXMgZGVjaWRlZCBieSB0aGUgTW9uZXRhcnkgUG9saWN5ICBDb21taXR0ZWUgKE1QQyksIGhlYWRlZCBieSB0aGUgUkJJICBHb3Zlcm5vci4gVGhlIGRlY2lzaW9uIGlzIHRha2VuIGluIHRoZSBiaS0gbW9udGhseSBtZWV0aW5nIG9mIHRoZSBDb21taXR0ZWUuICBTb3VyY2U6IGh0dHBzOi8vd3d3LmJ1c2luZXNzLSBzdGFuZGFyZC5jb20vYWJvdXQvd2hhdC1pcy1yZXZlcnNlLXJlcG8tIHJhdGUjY29sbGFwc2UgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  3 only ",
        "option3" : "  1 and 2 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 93,
      "question" : " Which of the following statements is/are correct with reference to National Asset Reconstruction Company Limited (NARCL)? 1.  Private sector Banks are the major stakeholders in NARCL. 2.  It will buy bad loans from the bank in return of securities guaranteed by government. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkz",
      "description" : "IEV4cGxhbmF0aW9uOiAgVGhlIE5hdGlvbmFsIEFzc2V0IFJlY29uc3RydWN0aW9uIENvbXBhbnkgIExpbWl0ZWQgKE5BUkNMKSBoYXMgYmVlbiBpbmNvcnBvcmF0ZWQgIHVuZGVyIHRoZSBDb21wYW5pZXMgQWN0LiBJdCBpcyBiYXNpY2FsbHkgYSAgYmFkIGJhbmsgY3JlYXRlZCBieSB0aGUgZ292ZXJubWVudCBpbiB0aGUgIG1vdWxkIG9mIGFuIGFzc2V0IHJlY29uc3RydWN0aW9uIGNvbXBhbnkuICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBwcm9wb3NlZCAgYmFkIGJhbmsgd2lsbCBoYXZlIGEgcHVibGljIHNlY3RvciBjaGFyYWN0ZXIgIGFuZCBtYWpvcml0eSBvd25lcnNoaXAgaXMgbGlrZWx5IHRvIHJlc3Qgd2l0aCAgc3RhdGUtb3duZWQgYmFua3MuIFVuZGVyIHRoZSBuZXcgIGZyYW1ld29yaywgYmFua3Mgd2lsbCBhZ2dyZWdhdGUgYW5kICBjb25zb2xpZGF0ZSBzdHJlc3NlZCBhc3NldHMgd2l0aCBOQVJDTCBmb3IgIHJlc29sdXRpb24uIFB1YmxpYyBzZWN0b3IgYmFua3Mgd2lsbCBob2xkICA1MSBwZXJjZW50IG93bmVyc2hpcCBpbiBOQVJDTC4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBOQVJDTCB3aWxsICBwaWNrIHVwIGJhZCBsb2FucyBhYm92ZSBhIGNlcnRhaW4gdGhyZXNob2xkICBmcm9tIGJhbmtzIGFuZCB3b3VsZCBhaW0gdG8gc2VsbCB0aGVtIHRvICBwcm9zcGVjdGl2ZSBidXllcnMgb2YgZGlzdHJlc3NlZCBkZWJ0LiBUaGUgIGdvdmVybm1lbnQgd2lsbCBub3QgaGF2ZSBhbnkgZGlyZWN0IGVxdWl0eSAgY29udHJpYnV0aW9uIHRvIE5BUkNMLiBJdCB3aWxsIGd1YXJhbnRlZSAgc2VjdXJpdGllcyByZWNlaXB0cyBpc3N1ZWQgYnkgTkFSQ0wsIHdoaWNoICB3aWxsIGJ1eSB0aGUgYmFkIGxvYW5zIGZyb20gYmFua3MuIFRoZXNlICByZWNlaXB0cyB3aWxsIGJlIHZhbGlkIGZvciBmaXZlIHllYXJzLCBhbmQgIGNvbmRpdGlvbiBwcmVjZWRlbnQgZm9yIGludm9jYXRpb24gb2YgIGd1YXJhbnRlZSB3aWxsIGJlIHJlc29sdXRpb24gb3IgbGlxdWlkYXRpb24uICBBcyBwZXIgaW5kdXN0cnkgcHJhY3RpY2UsIGl0IHdpbGwgcGF5IHVwIHRvICAxNSUgb2YgdGhlIGFncmVlZCB2YWx1ZSBmb3IgdGhlIGxvYW5zIGluIGNhc2ggIGFuZCB0aGUgcmVtYWluaW5nIDg1JSB3b3VsZCBiZSBzZWN1cml0aWVzICByZWNlaXB0cy4gIFNvdXJjZTogIGh0dHBzOi8vYmZzaS5lY29ub21pY3RpbWVzLmluZGlhdGltZXMuY29tIC9uZXdzL2Jhbmtpbmcvd2hhdC1hcmUtbmFyY2wtYW5kLWlkcmNsLSBob3ctZG8tdGhleS13b3JrLWFuZC13aGF0LWlzLXRoZS0gcGxhbi84NjI4MjE3NSAgaHR0cHM6Ly93d3cubW9uZXljb250cm9sLmNvbS9uZXdzL2J1c2kgbmVzcy9lY29ub215L2V4cGxhaW5lZC1hbGwteW91LW5lZWQtdG8tIGtub3ctYWJvdXQtbmFyY2wtb3ItYmFkLWJhbmstIDc1NDY0OTEuaHRtbCAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 94,
      "question" : " In the context of Statutory Liquidity Ratio (SLR), consider the following statements: 1.  SLR is the percentage of deposit that the banks have to keep as liquid assets in their own vault. 2.  SLR is exclusively kept in the form of either cash or Gold.  3.  Increasing the SLR will reduce inflation in the economy. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk0",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU3RhdHV0b3J5ICBMaXF1aWRpdHkgUmF0aW8gb3IgU0xSIGlzIGEgbWluaW11bSAgcGVyY2VudGFnZSBvZiBkZXBvc2l0cyB0aGF0IGEgY29tbWVyY2lhbCAgYmFuayBoYXMgdG8gbWFpbnRhaW4gaW4gdGhlIGZvcm0gb2YgbGlxdWlkICBhc3NldHMgaS5lLiBjYXNoLCBnb2xkIG9yIG90aGVyIHNlY3VyaXRpZXMuICBJdCBpcyBiYXNpY2FsbHkgdGhlIHJlc2VydmUgcmVxdWlyZW1lbnQgdGhhdCAgYmFua3MgYXJlIGV4cGVjdGVkIHRvIGtlZXAgYmVmb3JlIG9mZmVyaW5nICB3dyB3LiB1cCBzYyBtYSB0ZXIgaWFsIC4gbiBsaW4gZSAgVEVTVCAtIDkwMDYgKCApICAgd3d3LiAgICB0Lm1lLyAgUGEgZyA0IDggIGNyZWRpdCB0byBjdXN0b21lcnMuIFRoZXNlIGFyZSBub3QgcmVzZXJ2ZWQgIHdpdGggdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSwgYnV0ICB3aXRoIGJhbmtzIHRoZW1zZWx2ZXMuIFRoZSBTTFIgaXMgZml4ZWQgYnkgIHRoZSBSQkkuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiAgU0xSIGhhcyBoZWxwZWQgIHRoZSBnb3Zlcm5tZW50IHRvIHNlbGwgaXRzIHNlY3VyaXRpZXMgb3IgZGVidCAgaW5zdHJ1bWVudHMgdG8gYmFua3MuIE1vc3Qgb2YgdGhlIGJhbmtzICB3aWxsIGJlIGtlZXBpbmcgdGhlaXIgU0xSIGluIHRoZSBmb3JtIG9mICBnb3Zlcm5tZW50IHNlY3VyaXRpZXMgYXMgaXQgd2lsbCBlYXJuICB0aGVtIGFuIGludGVyZXN0IGluY29tZS4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBnb3Zlcm5tZW50IHVzZXMgIHRoZSBTTFIgdG8gcmVndWxhdGUgaW5mbGF0aW9uIGFuZCBsaXF1aWRpdHkuICBJbmNyZWFzaW5nIHRoZSBTTFIgd2lsbCBjb250cm9sIGluZmxhdGlvbiBpbiAgdGhlIGVjb25vbXkgd2hpbGUgZGVjcmVhc2luZyBpdCB3aWxsIGNhdXNlICBncm93dGggaW4gdGhlIGVjb25vbXkuIEFsdGhvdWdoLCB0aGUgU0xSIGlzICBhIG1vbmV0YXJ5IHBvbGljeSBpbnN0cnVtZW50IG9mIFJCSSwgaXQgaXMgIGltcG9ydGFudCBmb3IgdGhlIGdvdmVybm1lbnQgdG8gbWFrZSBpdHMgIGRlYnQgbWFuYWdlbWVudCBwcm9ncmFtbWUgc3VjY2Vzc2Z1bC4gIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3MtIHN0YW5kYXJkLmNvbS9hYm91dC93aGF0LWlzLXNsciNjb2xsYXBzZSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only  "
      }
    },
    {
      "index" : 95,
      "question" : " Which of the following statements is incorrect regarding Prepaid Payment Instruments (PPIs)? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk1",
      "description" : "IEV4cGxhbmF0aW9uOiAgT3B0aW9uIChiKSBpcyBjb3JyZWN0OiAgUHJlcGFpZCBwYXltZW50IGluc3RydW1lbnRzIChQUElzKSBoZWxwICBmYWNpbGl0YXRlIHRoZSBwdXJjaGFzZSBvZiBnb29kcyBhbmQgIHNlcnZpY2VzLCBpbmNsdWRpbmcgZmluYW5jaWFsIHNlcnZpY2VzLCAgcmVtaXR0YW5jZXMgYW5kIGZ1bmQgdHJhbnNmZXJzIHRvIGZhbWlseSAgYW5kIGZyaWVuZHMgYWdhaW5zdCB0aGUgdmFsdWUgc3RvcmVkIG9uICBzdWNoIGluc3RydW1lbnRzLiBTb21lIG9mIHRoZSBleGFtcGxlcyBvZiAgUFBJcyBpbmNsdWRlIFBheXRtIGFuZCBHUGF5IChzZW1pLWNsb3NlZCAgc3lzdGVtIFBQSXMpLCBnaWZ0IGNhcmRzIChjbG9zZWQgc3lzdGVtIFBQSXMpICBhbmQgZGViaXQgb3IgY3JlZGl0IGNhcmRzIChvcGVuIHN5c3RlbSBQUElzKS4gIEhlcmUgYXJlIHRoZSB0aHJlZSB0eXBlcyBvZiBwcmVwYWlkIHBheW1lbnQgIGluc3RydW1lbnRzOiAgQ2xvc2VkIHN5c3RlbSBQUElzOiAgVGhlIGNsb3NlIHN5c3RlbSBpcyBhICBzeXN0ZW0gd2hlcmUgdGhlIFBQSSB0aGF0IGlzIGlzc3VlZCBpcyBvbmx5ICB2YWxpZCB3aGVuIHVzZWQgYWdhaW5zdCBwdXJjaGFzZXMgZnJvbSB0aGUgIGVudGl0eSB3aGljaCBpc3N1ZWQgaXQgaW4gdGhlIGZpcnN0IHBsYWNlLiAgRXhhbXBsZXMgb2YgYSBjbG9zZWQgc3lzdGVtIFBQSSBhcmUgcGFwZXIgIHZvdWNoZXJzIG9yIGdpZnQgdm91Y2hlcnMgYW5kIGNvdXBvbnMuIFlvdSAgY2Fubm90IHdpdGhkcmF3IGNhc2ggZnJvbSBzdWNoIGtpbmRzIG9mICBQUElzLiBJdHMgaXNzdWFuY2UgZG9lcyBub3QgcmVxdWlyZSBSQkkncyAgYXBwcm92YWwuICBTZW1pLWNsb3NlZCBzeXN0ZW0gUFBJczogIFVubGlrZSBQUElzICBpc3N1ZWQgdW5kZXIgdGhlIGNsb3NlZCBzeXN0ZW0sIFBQSXMgaXNzdWVkICB1bmRlciB0aGUgc2VtaS1jbG9zZWQgc3lzdGVtIGNhbiBiZSB1c2VkIGluICBtdWx0aXBsZSBlc3RhYmxpc2htZW50cyBidXQgbm90IGFsbC4gUFBJcyAgdW5kZXIgdGhpcyBzeXN0ZW0gY2FuIG9ubHkgYmUgaXNzdWVkIGJ5ICBiYW5raW5nIGluc3RpdHV0aW9ucyBhcHByb3ZlZCBieSB0aGUgUkJJIG9yICBub24tYmFua2luZyBpbnN0aXR1dGlvbnMgYXV0aG9yaXNlZCBieSB0aGUgIFJCSS4gWW91IGNhbm5vdCB3aXRoZHJhdyBjYXNoIGZyb20gc3VjaCAga2luZHMgb2YgUFBJcyAgT3BlbiBzeXN0ZW0gUFBJczogUFBJcyB1bmRlciB0aGlzIHN5c3RlbSAgY2FuIG9ubHkgYmUgaXNzdWVkIGJ5IGJhbmtpbmcgaW5zdGl0dXRpb25zICB0aGF0IGhhdmUgYmVlbiBhcHByb3ZlZCBieSB0aGUgUkJJLiBUaGVzZSAgaW5zdHJ1bWVudHMgY2FuIGJlIHVzZWQgdG8gZmFjaWxpdGF0ZSAgcHVyY2hhc2VzLCByZW1pdHRhbmNlcywgY2FzaCB3aXRoZHJhd2FscywgIGV0Yy4gRXhhbXBsZXMgb2YgUFBJcyBpc3N1ZWQgdW5kZXIgdGhpcyAgc3lzdGVtIGFyZSBkZWJpdCBjYXJkcyBhbmQgY3JlZGl0IGNhcmRzLiAgQ2FzaCB3aXRoZHJhd2FsIGF0IEFUTXMsIHBvaW50IG9mIHNhbGUgIHRlcm1pbmFscyBhbmQgYnVzaW5lc3MgY29ycmVzcG9uZGVudHMgaXMgIHBlcm1pdHRlZCB0aHJvdWdoIHRoZXNlIFBQSXMuICBTb3VyY2U6ICBodHRwczovL3d3dy5saXZlbWludC5jb20vbW9uZXkvcGVyc29uYSBsLWZpbmFuY2UgaHJlZS1tdXN0LWtub3ctcHJlcGFpZC0gcGF5bWVudC1pbnN0cnVtZW50cy0gMTE2MTc2MTEzMTc5MjYuaHRtbCAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Prepaid payment instruments (PPIs)  help facilitate the purchase of  goods and services. ",
        "option2" : " Financial services such as  remittances and fund transfers to  family and friends are not  facilitated by PPIs. ",
        "option3" : "  Banks as well as non-bank  entities can issue Semi-closed  system PPIs in the country.  ww w. up cm ate ria l.o lin e  KSG: MEMBER'S COPY    ",
        "option4" : " Cash withdrawal at ATMs is  permitted through Open system  PPIs.  "
      }
    },
    {
      "index" : 96,
      "question" : " With reference to the Sugar Sector, consider the following statements: 1.  Fair and Remunerative Price (FRP) of sugarcane is fixed by the respective state governments to ensure a guaranteed price to the grower. 2.  Minimum Selling Price (MSP) of sugar is fixed under the Essential Commodities Act, 1955. 3.  India is the largest sugar producer in the current sugar season 2021-22. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk2",
      "description" : "IEV4cGxhbmF0aW9uOiAgU2FsaWVudCBtZWFzdXJlcyB0YWtlbiBieSB0aGUgR292ZXJubWVudCAgZm9yIFN1Z2FyIFNlY3RvciBpbiByZWNlbnQgeWVhcnMgYXJlIGFzICB1bmRlcjogIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogRmFpciBhbmQgIFJlbXVuZXJhdGl2ZSBQcmljZSAoRlJQKSBvZiBzdWdhcmNhbmUgaXMgIGZpeGVkIGJ5IHRoZSBDZW50cmFsIEdvdmVybm1lbnQgdG8gIGVuc3VyZSBhIGd1YXJhbnRlZWQgcHJpY2UgdG8gc3VnYXJjYW5lICBncm93ZXJzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFByaWNlIG9mIHN1Z2FyIGFyZSAgbWFya2V0IGRyaXZlbiAmIGRlcGVuZHMgb24gZGVtYW5kICYgIHN1cHBseSBvZiBzdWdhci4gSG93ZXZlciwgd2l0aCBhIHZpZXcgdG8gIHByb3RlY3QgdGhlIGludGVyZXN0cyBvZiBmYXJtZXJzLCBjb25jZXB0ICBvZiBNaW5pbXVtIFNlbGxpbmcgUHJpY2UgKE1TUCkgb2Ygc3VnYXIgIHdhcyBpbnRyb2R1Y2VkIGluIDIwMTggc28gdGhhdCBpbmR1c3RyeSAgbWF5IGdldCBhdGxlYXN0IHRoZSBtaW5pbXVtIGNvc3Qgb2YgIHByb2R1Y3Rpb24gb2Ygc3VnYXIsIHNvIGFzIHRvIGVuYWJsZSB0aGVtIHRvICBjbGVhciBjYW5lIHByaWNlIGR1ZXMgb2YgZmFybWVycy4gSW4gZXhlcmNpc2UgIG9mIHRoZSBwb3dlcnMgY29uZmVycmVkIHVuZGVyIHRoZSBFc3NlbnRpYWwgIENvbW1vZGl0aWVzIEFjdCwgMTk1NSwgR292ZXJubWVudCBoYXMgIG5vdGlmaWVkIFN1Z2FyIFByaWNlIChDb250cm9sKSBPcmRlciwgMjAxOC4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEluZGlhIGhhcyAgc3VycGFzc2VkIEJyYXppbCBpbiB0aGUgc3VnYXIgcHJvZHVjdGlvbiAgaW4gdGhlIGN1cnJlbnQgc3VnYXIgc2Vhc29uIDIwMjEtMjIuIFdpdGggIHRoZSBpbmNyZWFzZSBpbiB0aGUgcHJvZHVjdGlvbiBvZiBzdWdhciBpbiAgcGFzdCA4IHllYXJzLCBJbmRpYSBhcGFydCBmcm9tIG1lZXRpbmcgaXRzICByZXF1aXJlbWVudCBmb3IgZG9tZXN0aWMgY29uc3VtcHRpb24gaGFzICBhbHNvIGNvbnNpc3RlbnRseSBleHBvcnRpbmcgc3VnYXIgd2hpY2ggaGFzICBoZWxwZWQgaW4gcmVkdWNpbmcgb3VyIGZpc2NhbCBkZWZpY2l0LiBBYm91dCAgMTAwIExNVCBvZiBzdWdhciBoYXMgYmVlbiBleHBvcnRlZCB0aWxsICAwMS4wOC4yMDIyIGluIHRoZSBjdXJyZW50IHN1Z2FyIHNlYXNvbiAgMjAyMS0yMiAmIGV4cG9ydHMgbGlrZWx5IHRvIHRvdWNoIDExMiBMTVQuICBTb3VyY2U6ICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4PyBQUklEPTE4NDc5OTcgIGh0dHBzOi8vZGZwZC5nb3YuaW4vZ2VuX3BvbGljeS5odG0gIHd3IHcuIHVwIHNjIG1hIHRlciBpYWwgLm9uIGxpbiBlICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDQgOSAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1 an 2 only  "
      }
    },
    {
      "index" : 97,
      "question" : " Which of the following is/are the components of High-powered money? 1.  Foreign Exchange reserves held by RBI  2. Reserves held by Commercial Banks 3.  Currency held by public 4. Special Drawing Rights (SDR) holding position of India Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogIFRoZSBjZW50cmFsIGJhbmtzIG9mIGFsbCB0aGUgY291bnRyaWVzIGFyZSAgZW1wb3dlcmVkIHRvIGlzc3VlIHRoZSBjdXJyZW5jeS4gVGhlICBjdXJyZW5jeSBpc3N1ZWQgYnkgdGhlIGNlbnRyYWwgYmFuayBpcyBjYWxsZWQgICdoaWdoIHBvd2VyIG1vbmV5JyBiZWNhdXNlIGl0IGlzIGdlbmVyYWxseSAgYmFja2VkIGJ5IHN1cHBvcnRpbmcgJ3Jlc2VydmVzIGFuZCBpdHMgdmFsdWUgIGlzIGd1YXJhbnRlZWQgYnkgdGhlIGdvdmVybm1lbnQgYW5kIGl0IGlzICB0aGUgc291cmNlIG9mIGFsbCBvdGhlciBmb3JtcyBvZiBtb25leS4gVGhlICBjdXJyZW5jeSBpc3N1ZWQgYnkgdGhlIGNlbnRyYWwgYmFuayBpcywgaW4gIGZhY3QsIGlzIGEgbGlhYmlsaXR5IG9mIHRoZSBjZW50cmFsIGJhbmsgYW5kIHRoZSAgZ292ZXJubWVudC4gICAgUmVzZXJ2ZSBtb25leSAtIGFsc28ga25vd24gYXMgY2VudHJhbCBiYW5rICBtb25leSwgYmFzZSBtb25leSBvciBoaWdoIHBvd2VyZWQgbW9uZXkgIC0gcGxheXMgYSBjcnVjaWFsIHJvbGUgaW4gdGhlIGRldGVybWluYXRpb24gb2YgIG1vbmV0YXJ5IGFnZ3JlZ2F0ZXMuIFJlc2VydmUgbW9uZXkgaGFzICB0d28gbWFqb3IgY29tcG9uZW50cyAtIGN1cnJlbmN5IGluICBjaXJjdWxhdGlvbiBhbmQgcmVzZXJ2ZXMuIEN1cnJlbmN5IGluICBjaXJjdWxhdGlvbiBjb21wcmlzZXMgY3VycmVuY3kgd2l0aCB0aGUgIHB1YmxpYyBhbmQgY2FzaCBpbiBoYW5kIHdpdGggYmFua3MuIFRoZSAgcHVibGljJ3MgZGVtYW5kIGZvciBjdXJyZW5jeSBpcyBkZXRlcm1pbmVkICBieSBhIG51bWJlciBvZiBmYWN0b3JzIHN1Y2ggYXMgcmVhbCBpbmNvbWUsICBwcmljZSBsZXZlbCwgdGhlIG9wcG9ydHVuaXR5IGNvc3Qgb2YgaG9sZGluZyAgY3VycmVuY3kgKGkuZS4sIHRoZSBpbnRlcmVzdCByYXRlIG9uIGludGVyZXN0LSBiZWFyaW5nIGFzc2V0cykgYW5kIHRoZSBhdmFpbGFiaWxpdHkgb2YgIGFsdGVybmF0aXZlIGluc3RydW1lbnRzIG9mIHRyYW5zYWN0aW9ucywgZS5nLiwgIGNyZWRpdC9kZWJpdCBjYXJkcywgQVRNcywgY2hlcXVlIHBheW1lbnRzLiAgVGhlIGRlbWFuZCBmb3IgcmVzZXJ2ZXMgYnkgYmFua3MgZGVwZW5kcyAgb24gdGhlIHJlcXVpcmVtZW50cyBmb3IgdGhlIG1haW50ZW5hbmNlIG9mICBDUlIgYW5kIHRvIG1lZXQgcGF5bWVudCBvYmxpZ2F0aW9ucy4gICBTb3VyY2U6IEluZGlhbiBFY29ub215IGJ5IFJhbWVzaCBTaW5naD4gIENoYXB0ZXItMTI+IFBhZ2UgTm8tIDM4MiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 4 only  ",
        "option2" : "  2 and 3 only ",
        "option3" : "  1, 2 and 3 only ",
        "option4" : "  1, 2, 3 and 4  "
      }
    },
    {
      "index" : 98,
      "question" : " Consider the following statements with reference to Venture capital (VC) funds: 1.  These are pooled investment funds who seek private equity stakes in enterprises. 2.  They are regulated by Reserve Bank of India. 3.  They play an active role in the management and operations of the companies in their portfolio.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk4",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVmVudHVyZSBjYXBpdGFsICBmdW5kcyBhcmUgcG9vbGVkIGludmVzdG1lbnQgZnVuZHMgdGhhdCAgbWFuYWdlIHRoZSBtb25leSBvZiBpbnZlc3RvcnMgd2hvIHNlZWsgIHByaXZhdGUgZXF1aXR5IHN0YWtlcyBpbiBzdGFydHVwcyBhbmQgc21hbGwtICB0byBtZWRpdW0tc2l6ZWQgZW50ZXJwcmlzZXMgd2l0aCBzdHJvbmcgIGdyb3d0aCBwb3RlbnRpYWwuIFRoZXNlIGludmVzdG1lbnRzIGFyZSAgZ2VuZXJhbGx5IGNoYXJhY3Rlcml6ZWQgYXMgdmVyeSBoaWdoLSByaXNrL2hpZ2gtcmV0dXJuIG9wcG9ydHVuaXRpZXMuICBzdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFZlbnR1cmUgY2FwaXRhbCAgZnVuZCAoIlZDRiIpIGlzIHJlZ3VsYXRlZCBieSBTZWN1cml0aWVzIGFuZCAgRXhjaGFuZ2UgQm9hcmQgb2YgSW5kaWEgKEFsdGVybmF0aXZlICBJbnZlc3RtZW50IEZ1bmRzKSBSZWd1bGF0aW9ucy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFZlbnR1cmUgY2FwaXRhbCAgZnVuZHMgZGlmZmVyIGZ1bmRhbWVudGFsbHkgZnJvbSBtdXR1YWwgIGZ1bmRzIGFuZCBoZWRnZSBmdW5kcyBpbiB0aGF0IHRoZXkgZm9jdXMgb24gIGEgdmVyeSBzcGVjaWZpYyB0eXBlIG9mIGVhcmx5LXN0YWdlICBpbnZlc3RtZW50LiBBbGwgZmlybXMgdGhhdCByZWNlaXZlIHZlbnR1cmUgIGNhcGl0YWwgaW52ZXN0bWVudHMgaGF2ZSBoaWdoLWdyb3d0aCAgcG90ZW50aWFsLCBhcmUgcmlza3ksIGFuZCBoYXZlIGEgbG9uZyAgaW52ZXN0bWVudCBob3Jpem9uLiBWZW50dXJlIGNhcGl0YWwgZnVuZHMgIHRha2UgYSBtb3JlIGFjdGl2ZSByb2xlIGluIHRoZWlyIGludmVzdG1lbnRzICBieSBwcm92aWRpbmcgZ3VpZGFuY2UgYW5kIG9mdGVuIGhvbGRpbmcgYSAgYm9hcmQgc2VhdC4gVkMgZnVuZHMgdGhlcmVmb3JlIHBsYXkgYW4gIGFjdGl2ZSBhbmQgaGFuZHMtb24gcm9sZSBpbiB0aGUgIG1hbmFnZW1lbnQgYW5kIG9wZXJhdGlvbnMgb2YgdGhlICBjb21wYW5pZXMgaW4gdGhlaXIgcG9ydGZvbGlvLiAgU291cmNlOiAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbSBlcm1zL3YvdmMgZnVuZC5hc3AgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only  "
      }
    },
    {
      "index" : 99,
      "question" : " With reference to National Land Monetization Corporation (NLMC), which of the following statements is/are correct? 1.  NLMC is wholly owned by the Government of India. 2.  It will manage the monetization of core and non- core assets of the government to unlock their value. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk5",
      "description" : "IEV4cGxhbmF0aW9uOiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICBUaGUgVW5pb24gQ2FiaW5ldCBoYXMgYXBwcm92ZWQgdGhlICBzZXR0aW5nIHVwIE5hdGlvbmFsIExhbmQgTW9uZXRpemF0aW9uICBDb3Jwb3JhdGlvbiAoTkxNQykgYXMgYSB3aG9sbHkgb3duZWQgIEdvdmVybm1lbnQgb2YgSW5kaWEgY29tcGFueSB3aXRoIGFuICBpbml0aWFsIGF1dGhvcml6ZWQgc2hhcmUgY2FwaXRhbCBvZiBScyA1MDAwICBjcm9yZSBhbmQgcGFpZC11cCBzaGFyZSBjYXBpdGFsIG9mIFJzIDE1MCAgY3JvcmUuICBOTE1DIHdpbGwgdW5kZXJ0YWtlIG1vbmV0aXphdGlvbiAgb2Ygc3VycGx1cyBsYW5kIGFuZCBidWlsZGluZyBhc3NldHMgb2YgIENlbnRyYWwgUHVibGljIFNlY3RvciBFbnRlcnByaXNlcyAoQ1BTRXMpICBhbmQgb3RoZXIgR292ZXJubWVudCBhZ2VuY2llcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFdpdGggIG1vbmV0aXphdGlvbiBvZiBub24tY29yZSBhc3NldHMgYnkgTkxNQywgIEdvdmVybm1lbnQgd291bGQgYmUgYWJsZSB0byBnZW5lcmF0ZSAgc3Vic3RhbnRpYWwgcmV2ZW51ZXMgYnkgbW9uZXRpemluZyAgdW51c2VkIGFuZCB1bmRlci11c2VkIGFzc2V0cy4gIE1vbmV0aXNhdGlvbiBvZiBjb3JlIGFzc2V0cyBpcyBzdGVlcmVkIGJ5ICBOSVRJIEFheW9nLiAgQXQgcHJlc2VudCwgQ1BTRXMgaG9sZCBjb25zaWRlcmFibGUgIHN1cnBsdXMsIHVudXNlZCBhbmQgdW5kZXIgdXNlZCBub24tY29yZSAgYXNzZXRzIGluIHRoZSBuYXR1cmUgb2YgbGFuZCBhbmQgIGJ1aWxkaW5ncy4gIEZvciBDUFNFcyB1bmRlcmdvaW5nIHN0cmF0ZWdpYyAgZGlzaW52ZXN0bWVudCBvciBjbG9zdXJlLCBtb25ldGl6YXRpb24gb2YgIHRoZXNlIHN1cnBsdXMgbGFuZCBhbmQgbm9uLWNvcmUgYXNzZXRzIGlzICBpbXBvcnRhbnQgdG8gdW5sb2NrIHRoZWlyIHZhbHVlLiAgTkxNQyB3aWxsICBzdXBwb3J0IGFuZCB1bmRlcnRha2UgbW9uZXRpemF0aW9uIG9mICB0aGVzZSBhc3NldHMuICBUaGlzIHdpbGwgYWxzbyBlbmFibGUgIHByb2R1Y3RpdmUgdXRpbGl6YXRpb24gb2YgdGhlc2UgdW5kZXItIHV0aWxpemVkIGFzc2V0cyB0byB0cmlnZ2VyIHByaXZhdGUgc2VjdG9yICBpbnZlc3RtZW50cywgbmV3IGVjb25vbWljIGFjdGl2aXRpZXMsICBib29zdCBsb2NhbCBlY29ub215IGFuZCBnZW5lcmF0ZSBmaW5hbmNpYWwgIHJlc291cmNlcyBmb3IgZWNvbm9taWMgYW5kIHNvY2lhbCAgaW5mcmFzdHJ1Y3R1cmUuICBTb3VyY2U6ICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvYnVzaW5lIHd3IHcuIHBzIGNtIGF0ZSByaWEgbC4gbmxpIG5lICBURVNUIC0gOTAwNiAoICkgICB3d3cuICAgIHQubWUvICBQYSBnIDUgMCAgc3MvZWNvbm9teS9nb3Z0LWxhbmQtbW9uZXRpc2F0aW9uLSBhZ2VuY3ktZmluYW5jZS1taW5pc3RyeS03ODEyNDE4LyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2  "
      }
    },
    {
      "index" : 100,
      "question" : " The RBI has implemented a number of schemes to facilitate resolution of the NPAs problem of the banks. Which among them are such initiatives? 1.  Strategic Debt Restructuring 2.  Operation Twist 3.  5/25 Refinancing 4.  Prompt Corrective Action Select the correct answer from the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEwMA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdCAgU0RSIChTdHJhdGVnaWMgRGVidCBSZXN0cnVjdHVyaW5nKTogSW4gIEp1bmUgMjAxNSwgUkJJIGNhbWUgdXAgd2l0aCB0aGUgU0RSICBzY2hlbWUgcHJvdmlkZSBhbiBvcHBvcnR1bml0eSB0byBiYW5rcyB0byAgY29udmVydCBkZWJ0IG9mIGNvbXBhbmllcyB0byA1MSBwZXIgY2VudCAgZXF1aXR5IGFuZCBzZWxsIHRoZW0gdG8gdGhlIGhpZ2hlc3QgYmlkZGVycy0gb3duZXJzaGlwIGNoYW5nZSB0YWtlcyBwbGFjZSBpbiBpdC4gIDUvMjUgUmVmaW5hbmNpbmc6IFRoaXMgc2NoZW1lIG9mZmVyZWQgYSAgbGFyZ2VyIHdpbmRvdyBmb3IgcmV2aXZhbCBvZiBzdHJlc3NlZCBhc3NldHMgIGluIHRoZSBpbmZyYXN0cnVjdHVyZSBzZWN0b3JzIGFuZCA4IGNvcmUgIGluZHVzdHJpZXMuIFVuZGVyIHRoaXMgc2NoZW1lIGxlbmRlcnMgd2VyZSAgYWxsb3dlZCB0byBleHRlbmQgdGhlIHRlbnVyZSBvZiBsb2FucyB0byAyNSAgeWVhcnMgd2l0aCBpbnRlcmVzdCByYXRlcyBhZGp1c3RlZCBldmVyeSA1ICB5ZWFycywgc28gdGVudXJlIG9mIHRoZSBsb2FucyBtYXRjaGVzIHRoZSAgbG9uZyBnZXN0YXRpb24gcGVyaW9kIGluIHRoZSBzZWN0b3JzLiAgVGhlIFJCSSBpbnRyb2R1Y2VkIHRoZSBQQ0EgYXMgYW4gZWFybHktIGludGVydmVudGlvbiBtZWFzdXJlIGZvciBiYW5rcyB0aGF0IGJlY29tZSAgdW5kZXJjYXBpdGFsaXNlZCBkdWUgdG8gcG9vciBhc3NldCBxdWFsaXR5LiBJdCAgYWltcyB0byBjaGVjayB0aGUgcHJvYmxlbSBvZiBOUEFzIGluIHRoZSAgYmFua2luZyBzZWN0b3JzLiAgT3BlcmF0aW9uIFR3aXN0IGlzIHRoZSBuYW1lIGdpdmVuIHRvIGEgVVMgIEZlZGVyYWwgUmVzZXJ2ZSBtb25ldGFyeSBwb2xpY3kgb3BlcmF0aW9uLCAgd2hpY2ggaW52b2x2ZXMgdGhlIHB1cmNoYXNlIGFuZCBzYWxlIG9mICBnb3Zlcm5tZW50IHNlY3VyaXRpZXMgdG8gYm9vc3QgdGhlIGVjb25vbXkgIGJ5IGJyaW5naW5nIGRvd24gbG9uZy10ZXJtIGludGVyZXN0IHJhdGVzLiAgU291cmNlOiBJbmRpYW4gRWNvbm9teSBieSBSYW1lc2ggU2luZ2ggIGNoYXB0ZXI6IEJhbmtpbmcgICAgd3cgdy4gdXAgc2MgbWEgdGVyIGlhbCAub24gbGluIGUg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1, 3 and 4 only ",
        "option3" : "  2 and 4 only ",
        "option4" : "  1, 2 an 3 only      ww w. up sc ma t r ial .o lin e "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}