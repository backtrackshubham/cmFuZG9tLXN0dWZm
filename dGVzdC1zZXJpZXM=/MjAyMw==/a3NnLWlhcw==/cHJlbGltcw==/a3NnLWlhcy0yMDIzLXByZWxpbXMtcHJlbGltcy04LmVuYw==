{
  "testId" : "ksg-ias-2023-prelims-prelims-8",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\ksg-ias\\prelims\\ksg-ias-2023-prelims-prelims-8.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : " Which of the following is incorrect  regarding Cubic boron arsenide,  recently seen in the news:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICBUaGUgc2lsaWNvbiBjaGlwLCBzb3VyY2VkIGZyb20gc2lsaWNhIChhbmQgICBieSBleHRlbnNpb24gc2FuZCkgaXMgdGhlIGZvdW5kYXRpb24gb2YgICB0aGUgc2VtaWNvbmR1Y3RvciBpbmR1c3RyeSBhbmQgICBjb25zdGl0dXRlIHRoZSBzaW5ld3Mgb2YgdGhlIGluZm9ybWF0aW9uICAgdGVjaG5vbG9neSBpbmZyYXN0cnVjdHVyZS4gICBXaGlsZSBzaWxpY29uJ3Mgc3RydWN0dXJlIGlzIGV4dHJlbWVseSAgIGNvbmR1Y2l2ZSB0byBlbGVjdHJvbnMsIGl0IGlzIG11Y2ggbGVzcyAgIGFjY29tbW9kYXRpbmcgdG8gJ2hvbGVzJyAtIGVsZWN0cm9ucycgICBwb3NpdGl2ZWx5IGNoYXJnZWQgY291bnRlcnBhcnRzIC0gYW5kICAgaGFybmVzc2luZyBib3RoIGlzIGltcG9ydGFudCBmb3Igc29tZSBraW5kcyAgIG9mIGNoaXBzLiBTaWxpY29uIGlzIG5vdCB2ZXJ5IGdvb2QgYXQgICBjb25kdWN0aW5nIGhlYXQsIHdoaWNoIGlzIHdoeSBvdmVyaGVhdGluZyAgIGlzc3VlcyBhbmQgZXhwZW5zaXZlIGNvb2xpbmcgc3lzdGVtcyBhcmUgICBjb21tb24gaW4gY29tcHV0ZXJzLiAgIFNpbGljb24gaGFzIGdvb2QgZWxlY3Ryb24gbW9iaWxpdHkgYnV0ICAgcG9vciBob2xlIG1vYmlsaXR5LCBhbmQgb3RoZXIgbWF0ZXJpYWxzICAgc3VjaCBhcyBnYWxsaXVtIGFyc2VuaWRlLCB3aWRlbHkgdXNlZCBmb3IgICBsYXNlcnMsIHNpbWlsYXJseSBoYXZlIGdvb2QgbW9iaWxpdHkgZm9yICAgZWxlY3Ryb25zIGJ1dCBub3QgZm9yIGhvbGVzLiAgIEVtZXJnaW5nIHJlc2VhcmNoIHNob3dzIHRoYXQgYSBtYXRlcmlhbCAgIGtub3duIGFzIGN1YmljIGJvcm9uIGFyc2VuaWRlIG92ZXJjb21lcyAgIGJvdGggb2YgdGhlc2UgbGltaXRhdGlvbnMuIEl0IHByb3ZpZGVzIGhpZ2ggICBtb2JpbGl0eSB0byBib3RoIGVsZWN0cm9ucyBhbmQgaG9sZXMsIGFuZCAgIGhhcyBleGNlbGxlbnQgdGhlcm1hbCBjb25kdWN0aXZpdHkuICAgIFgtRmFjdG9yOiAgIO+CtyBUaGUgY29tcG9zaXRpb24gb2YgZS13YXN0ZSBpcyB2ZXJ5IGRpdmVyc2UgICBhbmQgZGlmZmVycyBpbiBwcm9kdWN0cyBhY3Jvc3MgZGlmZmVyZW50ICAgY2F0ZWdvcmllcy4gSXQgY29udGFpbnMgbW9yZSB0aGFuIDEwMDAgICBkaWZmZXJlbnQgc3Vic3RhbmNlcywgd2hpY2ggZmFsbCB1bmRlciAgICdoYXphcmRvdXMnIGFuZCAnbm9uLWhhemFyZG91cycgICBjYXRlZ29yaWVzLiAgICDvgrcgQnJvYWRseSwgaXQgY29uc2lzdHMgb2YgZmVycm91cyBhbmQgbm9uLSAgZmVycm91cyBtZXRhbHMsIHBsYXN0aWNzLCBnbGFzcywgd29vZCBhbmQgICBwbHl3b29kLCBwcmludGVkIGNpcmN1aXQgYm9hcmRzIChQQ0IpLCAgIGNvbmNyZXRlIGFuZCBjZXJhbWljcywgcnViYmVyIGFuZCBvdGhlciAgIGl0ZW1zLiAgIO+CtyBJcm9uIGFuZCBzdGVlbCBjb25zdGl0dXRlIGFib3V0IDUwJSBvZiB0aGUgICBFLXdhc3RlIGZvbGxvd2VkIGJ5IHBsYXN0aWNzICgyMSUpLCBub24tICBmZXJyb3VzIG1ldGFscyAoMTMlKSBhbmQgb3RoZXIgICBjb25zdGl0dWVudHMuICAgIO+CtyBOb24tZmVycm91cyBtZXRhbHMgY29uc2lzdCBvZiBtZXRhbHMgbGlrZSAgIGNvcHBlciAoQ3UpLCBhbHVtaW5pdW0gKEFsKSBhbmQgcHJlY2lvdXMgICBtZXRhbHMsIGUuZy4sIHNpbHZlciAoQWcpLCBnb2xkIChBdSksICAgcGxhdGludW0sIHBhbGxhZGl1bSwgZXRjLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2gvc2NpZW5jZS9hcmUtdGhlcmUtYmV0dGVyLSAgc2VtaWNvbmR1Y3RvcnMtdGhhbi0gIHNpbGljb24vYXJ0aWNsZTY1Njg4NTI1LmVjZSAgICAgaHR0cHM6Ly9wdWJjaGVtLm5jYmkubmxtLm5paC5nb3YvY29tcG8gIHVuZC9IZXB0YWNobG9yICAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tL3NjaWVuY2UvcGx1dG8gIG5pdW0gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  It has potential to overcome the   limitation of Silicon and Gallium   arsenide.  ",
        "option2" : "  It provides high mobility to both   electrons and holes.  ",
        "option3" : "  It has excellent thermal   conductivity.  ",
        "option4" : "  None of these.   "
      }
    },
    {
      "index" : 2,
      "question" : " Consider the following statements with  reference to recent finding on the  planet Mars:  1.  The rocks found on the Mars are  incredibly weathered and beaten.  2.  Rocks on the Mars are easier to  analyse due to active tectonic  plates and the weathering effects.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICDvgrcgVGhlIHJvY2tzIGFuZCBsYXZhIHRoZSByb3ZlciBpcyAgIGV4YW1pbmluZyBvbiBNYXJzIGFyZSBuZWFybHkgNCBiaWxsaW9uICAgeWVhcnMgb2xkLiBSb2NrcyB0aGF0IG9sZCBleGlzdCBvbiBFYXJ0aCAgIGJ1dCBhcmUgaW5jcmVkaWJseSB3ZWF0aGVyZWQgYW5kICAgYmVhdGVuLCBkdWUgdG8gRWFydGgncyBhY3RpdmUgdGVjdG9uaWMgICBwbGF0ZXMgYXMgd2VsbCBhcyB0aGUgd2VhdGhlcmluZyBlZmZlY3RzICAgb2YgYmlsbGlvbnMgb2YgeWVhcnMgb2Ygd2luZCwgd2F0ZXIgYW5kICAgbGlmZS4gT24gTWFycywgdGhlc2Ugcm9ja3MgYXJlIHByaXN0aW5lICAgKGluIGl0cyBvcmlnaW5hbCBjb25kaXRpb24pIGFuZCBtdWNoICAgZWFzaWVyIHRvIGFuYWx5c2UgYW5kIHN0dWR5LiAgIO+CtyBVbmRlcnN0YW5kaW5nIHRoZSByb2NrcyBvbiBNYXJzLCB0aGVpciAgIGV2b2x1dGlvbiBhbmQgaGlzdG9yeSwgYW5kIHdoYXQgdGhleSAgIHJldmVhbCBhYm91dCB0aGUgaGlzdG9yeSBvZiBwbGFuZXRhcnkgICBjb25kaXRpb25zIG9uIE1hcnMgaGVscCByZXNlYXJjaGVycyAgIHVuZGVyc3RhbmQgaG93IGxpZmUgbWF5IGhhdmUgYXJpc2VuIG9uICAgTWFycyBhbmQgaG93IHRoYXQgY29tcGFyZXMgd2l0aCBlYXJseSAgIGxpZmUgYW5kIGNvbmRpdGlvbnMgb24gYW5jaWVudCBFYXJ0aC4gICBYLUZhY3RvcjogICAg74K3IFBlcnNldmVyYW5jZSBpcyBhIE5BU0EgTWFycyByb3ZlciB0aGF0ICAgbGFuZGVkIG9uIDE4IEZlYnJ1YXJ5IDIwMjEuICAg74K3IFRoZSByb3ZlciB3aWxsIHNlYXJjaCBmb3IgcGFzdCBsaWZlIG9uIE1hcnMgICBhbmQgY29sbGVjdCBzb2lsIGFuZCByb2NrIHNhbXBsZXMgZm9yICAgZnV0dXJlIHJldHVybiB0byBFYXJ0aC4gICDvgrcgR2V0dGluZyBQZXJzZXZlcmFuY2UncyBzYW1wbGVzIGJhY2sgdG8gICBFYXJ0aCB3aWxsIHJlcXVpcmUgYXQgbGVhc3QgdHdvIG1pc3Npb25zICAgdGhhdCBhcmUgY3VycmVudGx5IGJlaW5nIHBsYW5uZWQgYnkgTkFTQSAgIGFuZCB0aGUgRXVyb3BlYW4gU3BhY2UgQWdlbmN5LiAgIFNvdXJjZTogICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS10ZWNoL2hvdy0gIGRvZXMtc3R1ZHlpbmctbWFydGlhbi1yb2Nrcy1oZWxwLW91ci0gIHVuZGVyc3RhbmRpbmctb2YtZWFybHktICBlYXJ0aC9hcnRpY2xlNjU4MTQ2NjMuZWNlICAgIGh0dHBzOi8vd3d3LnBsYW5ldGFyeS5vcmcvc3BhY2UtICBtaXNzaW9ucy9wZXJzZXZlcmFuY2UjOn46dGV4dD1QZXJzZXZlcmFuYyAgZSUyMGxhdW5jaGVkJTIwb24lMjAzMCUyMEp1bHksTWFycycgICUyMHdhcm0lMkMlMjB3ZXQlMjBwYXN0ICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 3,
      "question" : " Consider the following statements with  reference to cryptojacking:  1.  It is a cyber-attack wherein a  computing device is hijacked to  illicitly demand ransom.  2.  Corporate networks are least  vulnerable to cryptojacking.  3.  Unlike ransomware, cryptojacking  can succeed without the victim  ever being aware of it.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMSAgNyAgIEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IENyeXB0b2phY2tpbmcgaXMgICBhIGN5YmVyLWF0dGFjayB3aGVyZWluIGEgY29tcHV0aW5nIGRldmljZSAgIGlzIGhpamFja2VkIGFuZCBjb250cm9sbGVkIGJ5IHRoZSBhdHRhY2tlciwgICBhbmQgaXRzIHJlc291cmNlcyBhcmUgdXNlZCB0byBpbGxpY2l0bHkgbWluZSAgIGNyeXB0b2N1cnJlbmN5LiBJbiBtb3N0IGNhc2VzLCB0aGUgICBtYWxpY2lvdXMgcHJvZ3JhbW1lIGlzIGluc3RhbGxlZCB3aGVuIHRoZSAgIHVzZXIgY2xpY2tzIG9uIGFuIHVuc2FmZSBsaW5rLCBvciB2aXNpdHMgYW4gICBpbmZlY3RlZCB3ZWJzaXRlIC0gYW5kIHVua25vd2luZ2x5ICAgcHJvdmlkZXMgYWNjZXNzIHRvIHRoZWlyIEludGVybmV0LWNvbm5lY3RlZCAgIGRldmljZS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBDb3Jwb3JhdGUgICBuZXR3b3JrcyBhcmUgYXQgZ3JlYXRlciByaXNrIHRvIGNyeXB0b2phY2tpbmcgICBzaW5jZSB0aGUgdGVybWluYWxzIGFyZSB1c3VhbGx5IGludGVybGlua2VkICAgYW5kIHBvc3Nlc3MgYWR2YW5jZWQgaGFyZHdhcmUuICAgTWFsd2FyZUJ5dGVzIGlzIGEgdG9vbCB0aGF0IGFsbG93cyB1c2VycyB0byAgIHJlbW92ZSBwYXJ0aWN1bGFyIGRvbWFpbnMgb3IgSVAgYWRkcmVzc2VzICAgZnJvbSBpdHMgYmxvY2sgbGlzdC4gICBDcnlwdG9qYWNraW5nJyBhdHRhY2tzIG9uIGNvbXB1dGVyIHN5c3RlbXMgICBoYXZlIGdvbmUgdXAgYnkgMzAlIHRvIDY2LjcgbWlsbGlvbiBpbiB0aGUgICBmaXJzdCBoYWxmIG9mIDIwMjIgY29tcGFyZWQgdG8gdGhlIGZpcnN0IGhhbGYgICBvZiBsYXN0IHllYXIsIGFjY29yZGluZyB0byBhIHJlcG9ydCBieSAgIFNvbmljV2FsbCwgYSBVUy1iYXNlZCBjeWJlcnNlY3VyaXR5IGZpcm0uICAgV2hpbGUgdm9sdW1lIGluY3JlYXNlcyB3ZXJlIHdpZGVzcHJlYWQsICAgc29tZSBidXNpbmVzcyBzZWN0b3JzIHdlcmUgaGl0IGhhcmRlciB0aGFuICAgb3RoZXJzLCBzdWNoIGFzIHRoZSBmaW5hbmNlIGluZHVzdHJ5LCB3aGljaCAgIHNhdyBhIHJpc2Ugb2YgMjY5JSAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6ICBVbmxpa2UgICByYW5zb213YXJlLCB3aGljaCBhbm5vdW5jZXMgaXRzIHByZXNlbmNlICAgYW5kIHJlbGllcyBoZWF2aWx5IG9uIGNvbW11bmljYXRpb24gd2l0aCAgIHZpY3RpbXMsIGNyeXB0b2phY2tpbmcgY2FuIHN1Y2NlZWQgd2l0aG91dCAgIHRoZSB2aWN0aW0gZXZlciBiZWluZyBhd2FyZSBvZiBpdC4gICBYLUZhY3RvcjogICDvgrcgQ3J5cHRvamFja2VycyB1c3VhbGx5IHRhcmdldCBwb3B1bGFyICAgd2Vic2l0ZXMgd2hpY2ggZHJhdyBhdWRpZW5jZXMgICBudW1iZXJpbmcgaW4gdGhlIG1pbGxpb25zIGV2ZXJ5IGRheS4gICDvgrcgT25jZSB0aGUgbWFsd2FyZSBwYXRjaCBoYXMgYmVlbiAgIGVtYmVkZGVkIG9uIGEgd2Vic2l0ZSwgaXQgaW5mZWN0cyB0aGUgd2ViICAgYnJvd3NlcnMgb2YgdmlzaXRvcnMsIHNsb3dpbmcgZG93biB0aGVpciAgIG1hY2hpbmVzLCBvZnRlbiBjYXVzaW5nIHRoZW0gdG8gICBvdmVyaGVhdC4gICDvgrcgQWxsIHVzZXJzIHdobyBicm93c2UgdGhlIGludGVybmV0IGFyZSAgIHZ1bG5lcmFibGUgdG8gdGhlaXIgc3lzdGVtcyBiZWluZyAgICdjcnlwdG9qYWNrZWQnLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2ggZWNobm9sb2d5L3doYXQtaXMtY3J5cHRvamFja2luZy0gIGFuZC1ob3ctY2FuLWl0LWluZmVjdC15b3VyLSAgY29tcHV0ZXIvYXJ0aWNsZTIyOTUxNTgyLmVjZSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 4,
      "question" : " Consider the following statements:  1.  Carbonisation refers to the  conversion of dead vegetation into  coal.  2.  Coke used in the manufacture of  steel is produced by heating coal  in presence of oxygen.  3.  Naphthalene balls used to repel  insects are obtained from coal tar.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFzIGNvYWwgY29udGFpbnMgICBtYWlubHkgY2FyYm9uLCB0aGUgc2xvdyBwcm9jZXNzIG9mICAgY29udmVyc2lvbiBvZiBkZWFkIHZlZ2V0YXRpb24gaW50byBjb2FsIGlzICAgY2FsbGVkIGNhcmJvbmlzYXRpb24uIFNpbmNlIGl0IHdhcyBmb3JtZWQgICBmcm9tIHRoZSByZW1haW5zIG9mIHZlZ2V0YXRpb24sIGNvYWwgaXMgYWxzbyAgIGNhbGxlZCBhIGZvc3NpbCBmdWVsLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQ29rZSBpcyBhIHRvdWdoLCAgIHBvcm91cyBhbmQgYmxhY2sgc3Vic3RhbmNlLiBJdCBpcyBhbiBhbG1vc3QgICBwdXJlIGZvcm0gb2YgY2FyYm9uLiBDb2tlIGlzIHVzZWQgaW4gdGhlICAgbWFudWZhY3R1cmUgb2Ygc3RlZWwgYW5kIGluIHRoZSBleHRyYWN0aW9uIG9mICAgbWFueSBtZXRhbHMuICAgQ29rZSBpcyBwcm9kdWNlZCBieSBoZWF0aW5nIGNvYWwgYXQgaGlnaCAgIHRlbXBlcmF0dXJlcywgZm9yIGxvbmcgcGVyaW9kcyBvZiB0aW1lLiBUaGlzICAgaGVhdGluZyBpcyBjYWxsZWQgJ3RoZXJtYWwgZGlzdGlsbGF0aW9uJyBvciAgICdweXJvbHlzaXMuJyBQeXJvbHlzaXMgaXMgdGhlIGhlYXRpbmcgb2YgYW4gICBvcmdhbmljIG1hdGVyaWFsLCBzdWNoIGFzIGJpb21hc3MsIGluIHRoZSAgIGFic2VuY2Ugb2Ygb3h5Z2VuLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6ICBDb2FsIFRhciBpcyBhIGJsYWNrLCAgIHRoaWNrIGxpcXVpZCB3aXRoIGFuIHVucGxlYXNhbnQgc21lbGwuIEl0IGlzIGEgICBtaXh0dXJlIG9mIGFib3V0IDIwMCBzdWJzdGFuY2VzLiBQcm9kdWN0cyAgIG9idGFpbmVkIGZyb20gY29hbCB0YXIgYXJlIHVzZWQgYXMgc3RhcnRpbmcgICBtYXRlcmlhbHMgZm9yIG1hbnVmYWN0dXJpbmcgdmFyaW91cyAgIHN1YnN0YW5jZXMgdXNlZCBpbiBldmVyeWRheSBsaWZlIGFuZCBpbiAgIGluZHVzdHJ5LCBsaWtlIHN5bnRoZXRpYyBkeWVzLCBkcnVncywgICBleHBsb3NpdmVzLCBwZXJmdW1lcywgcGxhc3RpY3MsIHBhaW50cywgICBwaG90b2dyYXBoaWMgbWF0ZXJpYWxzLCByb29maW5nIG1hdGVyaWFscywgICBldGMuIEludGVyZXN0aW5nbHksIG5hcGh0aGFsZW5lIGJhbGxzIHVzZWQgICB0byByZXBlbCBtb3RocyBhbmQgb3RoZXIgaW5zZWN0cyBhcmUgYWxzbyAgIG9idGFpbmVkIGZyb20gY29hbCB0YXIuICAgWC1GYWN0b3I6ICAg74K3IFRoZSAyMDIxIFByb2R1Y3Rpb24gR2FwIFJlcG9ydCwgYnkgVU4gICBFbnZpcm9ubWVudCBQcm9ncmFtbWUgKFVORVApLCBmaW5kcyAgIHRoYXQgZGVzcGl0ZSBpbmNyZWFzZWQgY2xpbWF0ZSBhbWJpdGlvbnMgICBhbmQgbmV0LXplcm8gY29tbWl0bWVudHMsIGdvdmVybm1lbnRzICAgc3RpbGwgcGxhbiB0byBwcm9kdWNlIG1vcmUgdGhhbiBkb3VibGUgdGhlICAgYW1vdW50IG9mIGZvc3NpbCBmdWVscyBpbiAyMDMwIHRoYW4gd2hhdCAgIHdvdWxkIGJlIGNvbnNpc3RlbnQgd2l0aCBsaW1pdGluZyBnbG9iYWwgICB3YXJtaW5nIHRvIDEuNcKwQy4gICDvgrcgR292ZXJubWVudHMnIHByb2R1Y3Rpb24gcGxhbnMgYW5kICAgcHJvamVjdGlvbnMgd291bGQgbGVhZCB0byBhYm91dCAyNDAlICAgbW9yZSBjb2FsLCA1NyUgbW9yZSBvaWwsIGFuZCA3MSUgbW9yZSAgIGdhcyBpbiAyMDMwIHRoYW4gd291bGQgYmUgY29uc2lzdGVudCAgIHdpdGggbGltaXRpbmcgZ2xvYmFsIHdhcm1pbmcgdG8gMS41wrBDLiAgIFNvdXJjZTogTkNFUlQuIFZJSUkgU0NJRU5DRS0gQ0hBUFRFUi0gIDUsIFBBR0UgTk8tNTggICAgaHR0cHM6Ly93d3cudW5lcC5vcmcvbmV3cy1hbmQtICBzdG9yaWVzL3ByZXNzLXJlbGVhc2UvZ292ZXJubWVudHMtZm9zc2lsLSAgZnVlbC1wcm9kdWN0aW9uLXBsYW5zLWRhbmdlcm91c2x5LW91dC0gIHN5bmMtcGFyaXMgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 5,
      "question" : " Consider the following statements:  1.  Plastics which gets deformed  easily on exposure to heat are  known as thermoplastics.  2.  Bakelite is an example of  thermoplastics.  3.  Melamine resists fire and tolerates  heat better than thermoplastics.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMSAgOCAgIFBsYXN0aWMgaXMgYWxzbyBhIHBvbHltZXIgbGlrZSB0aGUgc3ludGhldGljICAgZmlicmUuIEFsbCBwbGFzdGljcyBkbyBub3QgaGF2ZSB0aGUgc2FtZSB0eXBlICAgb2YgYXJyYW5nZW1lbnQgb2YgdW5pdHMuIEluIHNvbWUgaXQgaXMgbGluZWFyLCAgIHdoZXJlYXMgaW4gb3RoZXJzIGl0IGlzIGNyb3NzLWxpbmtlZC4gICBQb2x5dGhlbmUgaXMgYW4gZXhhbXBsZSBvZiBhIHBsYXN0aWMuIEl0IGlzICAgdXNlZCBmb3IgbWFraW5nIGNvbW1vbmx5IHVzZWQgcG9seXRoZW5lICAgYmFncy4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBQbGFzdGljcyB3aGljaCAgIGdldHMgZGVmb3JtZWQgZWFzaWx5IG9uIGhlYXRpbmcgYW5kIGNhbiAgIGJlIGJlbnQgZWFzaWx5IGFyZSBrbm93biBhcyAgIHRoZXJtb3BsYXN0aWNzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogUG9seXRoZW5lIGFuZCAgIFBWQyBhcmUgc29tZSBvZiB0aGUgZXhhbXBsZXMgb2YgICB0aGVybW9wbGFzdGljcy4gVGhlc2UgYXJlIHVzZWQgZm9yICAgbWFudWZhY3R1cmluZyB0b3lzLCBjb21icyBhbmQgdmFyaW91cyAgIHR5cGVzIG9mIGNvbnRhaW5lcnMuIE9uIHRoZSBvdGhlciBoYW5kLCB0aGVyZSAgIGFyZSBzb21lIHBsYXN0aWNzIHdoaWNoIHdoZW4gbW91bGRlZCBvbmNlLCAgIGNhbm5vdCBiZSBzb2Z0ZW5lZCBieSBoZWF0aW5nLiBUaGVzZSBhcmUgICBjYWxsZWQgdGhlcm1vc2V0dGluZyBwbGFzdGljcy4gVHdvICAgZXhhbXBsZXMgYXJlIGJha2VsaXRlIGFuZCBtZWxhbWluZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBNZWxhbWluZSBpcyBhICAgdmVyc2F0aWxlIG1hdGVyaWFsLiBJdCByZXNpc3RzIGZpcmUgYW5kIGNhbiAgIHRvbGVyYXRlIGhlYXQgYmV0dGVyIHRoYW4gb3RoZXIgcGxhc3RpY3MuIEl0ICAgaXMgdXNlZCBmb3IgbWFraW5nIGZsb29yIHRpbGVzLCBraXRjaGVud2FyZSAgIGFuZCBmYWJyaWNzIHdoaWNoIHJlc2lzdCBmaXJlLiBCYWtlbGl0ZSBpcyBhICAgcG9vciBjb25kdWN0b3Igb2YgaGVhdCBhbmQgZWxlY3RyaWNpdHkuIEl0IGlzICAgdXNlZCBmb3IgbWFraW5nIGVsZWN0cmljYWwgc3dpdGNoZXMsIGhhbmRsZXMgICBvZiB2YXJpb3VzIHV0ZW5zaWxzLCBldGMuIE1lbGFtaW5lIGlzIGEgICB2ZXJzYXRpbGUgbWF0ZXJpYWwuICAgIFgtRmFjdG9yOiAgIE1pY3JvcGxhc3RpY3M6ICAg74K3IFRoZSBVbml0ZWQgTmF0aW9ucyBFbnZpcm9ubWVudCAgIFByb2dyYW1tZSAoVU5FUCkgZGVmaW5lcyBtaWNyb3BsYXN0aWNzICAgYXMgcGxhc3RpYyBwYXJ0aWNsZXMgc21hbGxlciB0aGFuIDUgICBtaWxsaW1ldHJlcy4gICDvgrcgVGhleSBhcmUgdGlueSBwaWVjZXMgb2YgcG9seWV0aHlsZW5lICAgcGxhc3RpYyBhZGRlZCB0byBoZWFsdGggYW5kIGJlYXV0eSAgIHByb2R1Y3RzLCBzdWNoIGFzIHNvbWUgY2xlYW5zZXJzIGFuZCAgIHRvb3RocGFzdGVzLiAgICDvgrcgTWljcm9wbGFzdGljcyBhcmUgbm90IGJpb2RlZ3JhZGFibGUgYW5kICAgb25jZSB0aGV5IGFyZSBmb3VuZCBpbiB0aGUgZW52aXJvbm1lbnQsICAgdGhleSBiZWdpbiB0byBhY2N1bXVsYXRlLiAgIFNvdXJjZTogTkNFUlQuIFZJSUkgU0NJRU5DRS0gQ0hBUFRFUi0gIDMsIFBBR0UgTk8tMzcgICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmUgIGQvZXhwbGFpbmVkLXdoeS1pcy10aGUtZGlzY292ZXJ5LW9mLSAgbWljcm9wbGFzdGljcy1pbi1mcmVzaC1hbnRhcmN0aWMtc25vdy0gIHRyb3VibGluZy1wb2xsdXRpb24tNzk3NDQ1NS8gICBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vYmxvZy9lbnZpICByb25tZW50L21pY3JvcGxhc3RpY3MtbWljcm9iZWFkcy13aGF0LSAgeW91LWRpZC1ub3Qta25vdy1hYm91dC1zZWxmLWNhcmUtcHJvZHVjdHMtICA3MTYxOSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 6,
      "question" : " With reference to drip irrigation  system, consider the following  statements:  1.  Unlike surface and sprinkler  irrigation, drip irrigation only wets  part of the soil root zone.   2.  Forces of gravity and capillary  play important role in irrigation  using drip irrigation.  3.   It is best suited to areas where  water or labour are expensive.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IERyaXAgaXJyaWdhdGlvbiBpcyAgIHNvbWV0aW1lcyBjYWxsZWQgdHJpY2tsZSBpcnJpZ2F0aW9uIGFuZCAgIGludm9sdmVzIGRyaXBwaW5nIHdhdGVyIG9udG8gdGhlIHNvaWwgYXQgdmVyeSAgIGxvdyByYXRlcyBmcm9tIGEgc3lzdGVtIG9mIHNtYWxsIGRpYW1ldGVyICAgcGxhc3RpYyBwaXBlcyBmaXR0ZWQgd2l0aCBvdXRsZXRzIGNhbGxlZCAgIGVtaXR0ZXJzIG9yIGRyaXBwZXJzLiBVbmxpa2Ugc3VyZmFjZSBhbmQgICBzcHJpbmtsZXIgaXJyaWdhdGlvbiwgZHJpcCBpcnJpZ2F0aW9uIG9ubHkgICB3ZXRzIHBhcnQgb2YgdGhlIHNvaWwgcm9vdCB6b25lLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBEcmlwIGlycmlnYXRpb24gICBzeXN0ZW0gZGVsaXZlcnMgd2F0ZXIgdG8gdGhlIGNyb3AgdXNpbmcgYSAgIG5ldHdvcmsgb2YgbWFpbmxpbmVzLCBzdWItbWFpbnMgYW5kIGxhdGVyYWwgICBsaW5lcyB3aXRoIGVtaXNzaW9uIHBvaW50cyBzcGFjZWQgYWxvbmcgdGhlaXIgICBsZW5ndGhzLiBFYWNoIGRyaXBwZXIvZW1pdHRlciwgb3JpZmljZSAgIHN1cHBsaWVzIGEgbWVhc3VyZWQsIHByZWNpc2VseSBjb250cm9sbGVkICAgdW5pZm9ybSBhcHBsaWNhdGlvbiBvZiB3YXRlciwgbnV0cmllbnRzLCBhbmQgICBvdGhlciByZXF1aXJlZCBncm93dGggc3Vic3RhbmNlcyBkaXJlY3RseSAgIGludG8gdGhlIHJvb3Qgem9uZSBvZiB0aGUgcGxhbnQuICAgV2F0ZXIgYW5kIG51dHJpZW50cyBlbnRlciB0aGUgc29pbCBmcm9tICAgdGhlIGVtaXR0ZXJzLCBtb3ZpbmcgaW50byB0aGUgcm9vdCB6b25lICAgb2YgdGhlIHBsYW50cyB0aHJvdWdoIHRoZSBjb21iaW5lZCBmb3JjZXMgICBvZiBncmF2aXR5IGFuZCBjYXBpbGxhcnkuIEluIHRoaXMgd2F5LCB0aGUgICBwbGFudCdzIHdpdGhkcmF3YWwgb2YgbW9pc3R1cmUgYW5kIG51dHJpZW50cyAgIGFyZSByZXBsZW5pc2hlZCBhbG1vc3QgaW1tZWRpYXRlbHksICAgZW5zdXJpbmcgdGhhdCB0aGUgcGxhbnQgbmV2ZXIgc3VmZmVycyBmcm9tICAgd2F0ZXIgc3RyZXNzLCB0aHVzIGVuaGFuY2luZyBxdWFsaXR5LCBpdHMgICBhYmlsaXR5IHRvIGFjaGlldmUgb3B0aW11bSBncm93dGggYW5kIGhpZ2ggICB5aWVsZC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBEcmlwIGlycmlnYXRpb24gaXMgICBub3QgYSBzdWJzdGl0dXRlIGZvciBvdGhlciBwcm92ZW4gbWV0aG9kcyBvZiAgIGlycmlnYXRpb24uIEl0IGlzIGp1c3QgYW5vdGhlciB3YXkgb2YgYXBwbHlpbmcgICB3YXRlci4gICAgSXQgaXMgYmVzdCBzdWl0ZWQgdG8gYXJlYXMgd2hlcmUgd2F0ZXIgICBxdWFsaXR5IGlzIG1hcmdpbmFsLCBsYW5kIGlzIHN0ZWVwbHkgc2xvcGluZyAgIG9yIHVuZHVsYXRpbmcgYW5kIG9mIHBvb3IgcXVhbGl0eSwgd2hlcmUgICB3YXRlciBvciBsYWJvdXIgYXJlIGV4cGVuc2l2ZSwgb3Igd2hlcmUgICBoaWdoIHZhbHVlIGNyb3BzIHJlcXVpcmUgZnJlcXVlbnQgd2F0ZXIgICBhcHBsaWNhdGlvbnMuICAgWC1GYWN0b3I6ICAg74K3IEluY3JlYXNlIGluIHlpZWxkIHVwIHRvIDIzMCAlLiAgIO+CtyBTYXZlcyB3YXRlciB1cCB0byA3MCUgY29tcGFyZSB0byBmbG9vZCAgIGlycmlnYXRpb24uIE1vcmUgbGFuZCBjYW4gYmUgaXJyaWdhdGVkIHdpdGggICB0aGUgd2F0ZXIgdGh1cyBzYXZlZC4gICDvgrcgQ3JvcCBncm93cyBjb25zaXN0ZW50bHksIGhlYWx0aGllciBhbmQgICBtYXR1cmVzIGZhc3QuICAg74K3IEVhcmx5IG1hdHVyaXR5IHJlc3VsdHMgaW4gaGlnaGVyIGFuZCAgIGZhc3RlciByZXR1cm5zIG9uIGludmVzdG1lbnQuICAg74K3IENvc3Qgb2YgZmVydGlsaXplcnMsIGludGVyLWN1bHR1cmluZyBhbmQgICBsYWJvdXIgdXNlIGdldHMgcmVkdWNlZC4gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzEgIDkgICDvgrcgRmVydGlsaXplciBhbmQgQ2hlbWljYWwgVHJlYXRtZW50IGNhbiBiZSAgIGdpdmVuIHRocm91Z2ggTWljcm8gSXJyaWdhdGlvbiBTeXN0ZW0gICBpdHNlbGYuICAg74K3IFVuZHVsYXRpbmcgdGVycmFpbnMsIFNhbGluZSwgV2F0ZXIgICBsb2dnZWQsIFNhbmR5ICYgSGlsbHkgbGFuZHMgY2FuIGFsc28gYmUgICBicm91Z2h0IHVuZGVyIHByb2R1Y3RpdmUgY3VsdGl2YXRpb24uICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnZpa2FzcGVkaWEuaW4vYWdyaWN1bHR1cmUvYWdyICBpLWlucHV0cy9mYXJtLW1hY2hpbmFyeS9kcmlwLWlycmlnYXRpb24tICBzeXN0ZW0gICBOQ0VSVC4gVklJSSBTQ0lFTkNFLSBDSEFQVEVSLTEsIFBBR0UgICBOTy05ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 7,
      "question" : " Consider the following statements:  1.  FDI up to 100% under the  automatic route is permitted for  electronics manufacturing except  from countries sharing land  border with India.   2.  Silicon is very good at conducting  heat  3.  Currently no state in India has  any dedicated semiconductor  policy.  TEST - 9008 ( )   www. t.me/ Pa g3 Which of the statements given above  are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFzIHBlciBleHRhbnQgICBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50IChGREkpIHBvbGljeSwgRkRJICAgdXAtdG8gMTAwJSB1bmRlciB0aGUgYXV0b21hdGljIHJvdXRlIGlzICAgcGVybWl0dGVkIGZvciBlbGVjdHJvbmljcyBtYW51ZmFjdHVyaW5nICAgKGV4Y2VwdCBmcm9tIGNvdW50cmllcyBzaGFyaW5nIGxhbmQgICBib3JkZXIgd2l0aCBJbmRpYSksIHN1YmplY3QgdG8gYXBwbGljYWJsZSAgIGxhd3MgLyByZWd1bGF0aW9uczsgc2VjdXJpdHkgYW5kIG90aGVyICAgY29uZGl0aW9ucy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IHNpbGljb24gaXMgbm90ICAgdmVyeSBnb29kIGF0IGNvbmR1Y3RpbmcgaGVhdCwgd2hpY2ggaXMgICB3aHkgb3ZlcmhlYXRpbmcgaXNzdWVzIGFuZCBleHBlbnNpdmUgICBjb29saW5nIHN5c3RlbXMgYXJlIGNvbW1vbiBpbiAgIGNvbXB1dGVycy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFJlY2VudGx5LCAgIEd1amFyYXQgaGFzIGFubm91bmNlZCBTZW1pY29uZHVjdG9yICAgUG9saWN5IDIwMjItMjctIFdpdGggdGhpcywgR3VqYXJhdCBoYXMgICBiZWNvbWUgdGhlIGZpcnN0IHN0YXRlIGluIHRoZSBjb3VudHJ5IHRvIGhhdmUgICBkZWRpY2F0ZWQgc2VtaWNvbmR1Y3RvciBwb2xpY3kuICAgWC1GYWN0b3I6ICAgSW5kaWEgU2VtaWNvbmR1Y3RvciBNaXNzaW9uIChJU00pOiAgIO+CtyBJdCBpcyBzZXR1cCBhcyBhbiBJbmRlcGVuZGVudCBCdXNpbmVzcyAgIERpdmlzaW9uIHdpdGhpbiBEaWdpdGFsIEluZGlhIENvcnBvcmF0aW9uLiAgIO+CtyBJdCBpcyBoYXZpbmcgYWRtaW5pc3RyYXRpdmUgYW5kIGZpbmFuY2lhbCAgIGF1dG9ub215IHRvIGZvcm11bGF0ZSBhbmQgZHJpdmUgSW5kaWEncyAgIGxvbmctdGVybSBzdHJhdGVnaWVzIGZvciBkZXZlbG9waW5nICAgc2VtaWNvbmR1Y3RvcnMgYW5kIGRpc3BsYXkgICBtYW51ZmFjdHVyaW5nIGZhY2lsaXRpZXMuICAg74K3IElTTSB3aWxsIHNlcnZlIGFzIHRoZSBub2RhbCBhZ2VuY3kgZm9yICAgZWZmaWNpZW50LCBjb2hlcmVudCBhbmQgc21vb3RoICAgaW1wbGVtZW50YXRpb24gb2YgMDQgc2NoZW1lcyB1bmRlciBpdC4gICBvIFNjaGVtZSBmb3Igc2V0dGluZyB1cCBvZiAgIFNlbWljb25kdWN0b3IgRmFicyBpbiBJbmRpYS4gICBvIFNjaGVtZSBmb3Igc2V0dGluZyB1cCBvZiBEaXNwbGF5IEZhYnMgICBpbiBJbmRpYS4gICBvIFNjaGVtZSBmb3Igc2V0dGluZyB1cCBvZiBDb21wb3VuZCAgIFNlbWljb25kdWN0b3JzIC8gU2lsaWNvbiBQaG90b25pY3MgLyAgIFNlbnNvcnMgRmFiIGFuZCBTZW1pY29uZHVjdG9yICAgQXNzZW1ibHkuICAgbyBEZXNpZ24gTGlua2VkIEluY2VudGl2ZSAoRExJKSBTY2hlbWUuICAgSW4gYWRkaXRpb24gdG8gdGhlIGFib3ZlIHNjaGVtZXMsICAgR292ZXJubWVudCBoYXMgYWxzbyBhcHByb3ZlZCAgIG1vZGVybmlzYXRpb24gb2YgU2VtaS1Db25kdWN0b3IgICBMYWJvcmF0b3J5LCBNb2hhbGkgYXMgYSBicm93bmZpZWxkIEZhYi4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvY2l0aWVzLyAgSHlkZXJhYmFkL2VudHJpZXMtaW52aXRlZC1mcm9tLSAgc2VtaWNvbmR1Y3Rvci0gIHN0YXJ0dXBzL2FydGljbGU2NTc3NjQzOC5lY2UgICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNwICB4P1BSSUQ9MTgxMTM3MSAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktICB0ZWNoL3NjaWVuY2UvYXJlLXRoZXJlLWJldHRlci0gIHNlbWljb25kdWN0b3JzLXRoYW4tICBzaWxpY29uL2FydGljbGU2NTY4ODUyNS5lY2UgICAgIGh0dHBzOi8vd3d3LmZpbmFuY2lhbGV4cHJlc3MuY29tL2luZHVzICB0cnkvZ3VqYXJhdC1hbm5vdW5jZXMtZGVkaWNhdGVkLSAgc2VtaWNvbmR1Y3Rvci1wb2xpY3ktMjAyMi0gIDI3LzI2MDgyOTEvICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 8,
      "question" : " With reference to Gene therapy, which  of the following statements is/are  correct?  1.  This technique treats a disease by  altering the genetic makeup.  2.  It introduces molecular tools to  change the existing cellular DNA.  3.  This therapy is used to treat  spinal muscular atrophy.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBHZW5lIHRoZXJhcHkgaXMgYSBtZWRpY2FsIGFwcHJvYWNoIHRoYXQgICB0cmVhdHMgb3IgcHJldmVudHMgZGlzZWFzZSBieSBjb3JyZWN0aW5nIHRoZSAgIHVuZGVybHlpbmcgZ2VuZXRpYyBwcm9ibGVtLiBHZW5lIHRoZXJhcHkgaXMgICBkZWZpbmVkIGFzIHRoZSB0cmVhdG1lbnQgb2YgZGlzZWFzZSBieSAgIHRyYW5zZmVyIG9mIGdlbmV0aWMgbWF0ZXJpYWwgaW50byBjZWxscy4gICBIdW1hbiBnZW5lIHRoZXJhcHkgc2Vla3MgdG8gbW9kaWZ5IG9yICAgbWFuaXB1bGF0ZSB0aGUgZXhwcmVzc2lvbiBvZiBhIGdlbmUgb3IgdG8gICBhbHRlciB0aGUgYmlvbG9naWNhbCBwcm9wZXJ0aWVzIG9mIGxpdmluZyBjZWxscyAgIGZvciB0aGVyYXBldXRpYyB1c2UuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogR2VuZSB0aGVyYXB5ICAgdGVjaG5pcXVlcyBhbGxvdyBkb2N0b3JzIHRvIHRyZWF0IGEgICBkaXNvcmRlciBieSBhbHRlcmluZyBhIHBlcnNvbidzIGdlbmV0aWMgICBtYWtldXAgaW5zdGVhZCBvZiB1c2luZyBkcnVncyBvciBzdXJnZXJ5LiAgIFRoZSBlYXJsaWVzdCBtZXRob2Qgb2YgZ2VuZSB0aGVyYXB5LCBvZnRlbiAgIGNhbGxlZCBnZW5lIHRyYW5zZmVyIG9yIGdlbmUgYWRkaXRpb24sIHdhcyAgIGRldmVsb3BlZCB0bzogICBJbnRyb2R1Y2UgYSBuZXcgZ2VuZSBpbnRvIGNlbGxzIHRvIGhlbHAgZmlnaHQgICBhIGRpc2Vhc2UuICAgSW50cm9kdWNlIGEgbm9uLWZhdWx0eSBjb3B5IG9mIGEgZ2VuZSB0byAgIHN0YW5kIGluIGZvciB0aGUgYWx0ZXJlZCBjb3B5IGNhdXNpbmcgZGlzZWFzZS4gICBMYXRlciBzdHVkaWVzIGxlZCB0byBhZHZhbmNlcyBpbiBnZW5lIHRoZXJhcHkgICB0ZWNobmlxdWVzLiBBIG5ld2VyIHRlY2huaXF1ZSwgY2FsbGVkICAgZ2Vub21lIGVkaXRpbmcgKGFuIGV4YW1wbGUgb2Ygd2hpY2ggaXMgICBDUklTUFItQ2FzOSksIHVzZXMgYSBkaWZmZXJlbnQgYXBwcm9hY2ggdG8gICBjb3JyZWN0IGdlbmV0aWMgZGlmZmVyZW5jZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogIEluc3RlYWQgb2YgICBpbnRyb2R1Y2luZyBuZXcgZ2VuZXRpYyBtYXRlcmlhbCBpbnRvICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGcyICAwICAgY2VsbHMsIGdlbm9tZSBlZGl0aW5nIGludHJvZHVjZXMgICBtb2xlY3VsYXIgdG9vbHMgdG8gY2hhbmdlIHRoZSBleGlzdGluZyAgIEROQSBpbiB0aGUgY2VsbC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogR2VuZSB0aGVyYXBpZXMgICBhcmUgYmVpbmcgdXNlZCB0byB0cmVhdCBhIHNtYWxsIG51bWJlciBvZiAgIGRpc2Vhc2VzLCBpbmNsdWRpbmcgYW4gZXllIGRpc29yZGVyIGNhbGxlZCAgIExlYmVyIGNvbmdlbml0YWwgYW1hdXJvc2lzIGFuZCBhIG11c2NsZSAgIGRpc29yZGVyIGNhbGxlZCBzcGluYWwgbXVzY3VsYXIgYXRyb3BoeS4gICBYLUZhY3RvcjogICBHZW5lIHRoZXJhcHkgaXMgYSB0ZWNobmlxdWUgdGhhdCBtb2RpZmllcyBhICAgcGVyc29uJ3MgZ2VuZXMgdG8gdHJlYXQgb3IgY3VyZSBkaXNlYXNlLiAgICBHZW5lIHRoZXJhcGllcyBjYW4gd29yayBieSBzZXZlcmFsICAgbWVjaGFuaXNtczogICBvIFJlcGxhY2luZyBhIGRpc2Vhc2UtY2F1c2luZyBnZW5lIHdpdGggYSAgIGhlYWx0aHkgY29weSBvZiB0aGUgZ2VuZSAgIG8gSW5hY3RpdmF0aW5nIGEgZGlzZWFzZS1jYXVzaW5nIGdlbmUgdGhhdCAgIGlzIG5vdCBmdW5jdGlvbmluZyBwcm9wZXJseSAgIG8gSW50cm9kdWNpbmcgYSBuZXcgb3IgbW9kaWZpZWQgZ2VuZSBpbnRvICAgdGhlIGJvZHkgdG8gaGVscCB0cmVhdCBhIGRpc2Vhc2UgICBHZW5vbWUgZWRpdGluZyBpcyBiZWluZyBzdHVkaWVkIHRvOiAgIG8gRml4IGEgZ2VuZXRpYyBhbHRlcmF0aW9uIHVuZGVybHlpbmcgYSAgIGRpc29yZGVyLCBzbyB0aGUgZ2VuZSBjYW4gZnVuY3Rpb24gICBwcm9wZXJseS4gICBvIFR1cm4gb24gYSBnZW5lIHRvIGhlbHAgZmlnaHQgYSBkaXNlYXNlLiAgIG8gVHVybiBvZmYgYSBnZW5lIHRoYXQgaXMgZnVuY3Rpb25pbmcgICBpbXByb3Blcmx5LiAgIG8gUmVtb3ZlIGEgcGllY2Ugb2YgRE5BIHRoYXQgaXMgaW1wYWlyaW5nICAgZ2VuZSBmdW5jdGlvbiBhbmQgY2F1c2luZyBkaXNlYXNlLiAgIFNvdXJjZTogICBodHRwczovL21lZGxpbmVwbHVzLmdvdi9nZW5ldGljcy91bmRlcnN0YSAgbmRpbmcgaGVyYXB5L2dlbmV0aGVyYXB5LyAgIGh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcG1jL2FydGljbGUgIHMvUE1DMjkwNzEwMS8jOn46dGV4dD1BYnN0cmFjdCxvbiUyMGZ1ICB0dXJlJTIwZGV2ZWxvcG1lbnQlMjBhbmQlMjBkZXNpZ24uICAgaHR0cHM6Ly93d3cuZmRhLmdvdi92YWNjaW5lcy1ibG9vZC0gIGJpb2xvZ2ljcy9jZWxsdWxhci1nZW5lLXRoZXJhcHktICBwcm9kdWN0cy93aGF0LWdlbmUtdGhlcmFweSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 9,
      "question" : " With reference to CRISPR-CAS9,  which of the following statements  is/are correct?  1. It is a unique set of DNA  sequences present in all the  bacteria.  2.  CRISPR system can identify and  destroy the foreign DNA.  3. It has been used to modify the  genomes of a variety of species  including fruit flies and yeast.   Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBDUklTUFItQ2FzOSBpcyBhICAgZ2VuZSBlZGl0aW5nIHRlY2hub2xvZ3kgdGhhdCB1c2VzIGEgICBjb21iaW5hdGlvbiBvZiAgICAoMSkgYW4gZW56eW1lIHRoYXQgY3V0cyBETkEgKENhczksIGEgICBudWNsZWFzZSkgICAgKDIpIGEgZ3VpZGluZyBwaWVjZSBvZiBnZW5ldGljIG1hdGVyaWFsIChndWlkZSAgIFJOQSkgdG8gc3BlY2lmeSB0aGUgbG9jYXRpb24gaW4gdGhlIGdlbm9tZSAgIEl0IG9mZmVycyB0aGUgcG90ZW50aWFsIGZvciBzdWJzdGFudGlhbCAgIGltcHJvdmVtZW50IG92ZXIgb3RoZXIgZ2VuZSBlZGl0aW5nICAgdGVjaG5vbG9naWVzIGluIGVhc2Ugb2YgdXNlLCBzcGVlZCwgZWZmaWNhY3ksICAgYW5kIGNvc3QuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgYW5kIFN0YXRlbWVudCAzIGlzICAgY29ycmVjdDogIFRoZSBDUklTUFIgc3lzdGVtIGlkZW50aWZpZXMsICAgY3V0cyBhbmQgZGVzdHJveXMgZm9yZWlnbiBETkEuICAgUmVzZWFyY2hlcnMgaGF2ZSBpZGVudGlmaWVkIGZpdmUgZGlmZmVyZW50ICAgdHlwZXMgb2YgQ1JJU1BSIHN5c3RlbXMuIFRoZSBtb3N0IHN0dWRpZWQgICBDUklTUFIgc3lzdGVtIGlzIGFzc29jaWF0ZWQgd2l0aCB0aGUgQ2FzOSAgIHByb3RlaW4gYW5kIGlzIGtub3duIGFzIENSSVNQUi1DYXM5LiBTaW5jZSAgIHRoZW4sIENSSVNQUi1DYXM5IGhhcyBiZWVuIHVzZWQgdG8gICBtb2RpZnkgdGhlIGdlbm9tZXMgb2YgYSB2YXJpZXR5IG9mICAgc3BlY2llcy1yYW5naW5nIGZyb20gbWljZSBhbmQgZnJ1aXQgZmxpZXMgICB0byBjb3JuIGFuZCB5ZWFzdC4gICAgQ1JJU1BSLUNhczkgaGFzIHNoaWZ0ZWQgdGhlIHBhcmFkaWdtICAgd2l0aCBpdHMgc2ltcGxpY2l0eSBhbmQgbG93LWNvc3QgcmVsYXRpdmUgICB0byBvdGhlciBtZXRob2RzIG9mIGdlbmUgZWRpdGluZy0gIHJlbW92aW5nIGJhcnJpZXJzIHRvIHdpZGVzcHJlYWQgYWRvcHRpb24gICBhbmQgY3JlYXRpbmcgbmV3IHJlc2VhcmNoIG9wcG9ydHVuaXRpZXMuICAgWC1GYWN0b3I6ICAgIERpc2Vhc2VzIHRyZWF0YWJsZSB0aHJvdWdoIENSSVNQUiAgIFRlY2huaXF1ZXMgICBvIE1hbGFyaWE6IEEgdmFyaWV0eSBvZiBDUklTUFItZW5hYmxlZCAgIGFwcHJvYWNoZXMgY2FuIHJlZHVjZSBvciBlbGltaW5hdGUgICBtYWxhcmlhLCBvbmUgb2YgdGhlIG1vc3Qgd2lkZXNwcmVhZCBhbmQgICBsZXRoYWwgaWxsbmVzc2VzIGluIHRoZSB3b3JsZC4gICBvIFNpY2tsZSBDZWxsIERpc2Vhc2U6IFRoZSB0cmVhdG1lbnQgd291bGQgICBjb25zaXN0IG9mIHVzaW5nIENSSVNQUi1DYXM5IHRvIG1vZGlmeSAgIHN0ZW0gY2VsbHMgdGhhdCBhcmUgaXNvbGF0ZWQgZnJvbSBhICAgcGF0aWVudCdzIGJsb29kIGFuZCB0aGVuIHJlaW5mdXNlZCB0byAgIHByb2R1Y2UgaGlnaCBsZXZlbHMgb2YgZmV0YWwgaGVtb2dsb2Jpbi4gICBvIER1Y2hlbm5lIE11c2N1bGFyIER5c3Ryb3BoeTogQWJpbGl0eSB0byAgIHVzZSBDUklTUFItQ2FzOSB0byBtYWtlIGdlbmV0aWMgcmVwYWlycyAgIGluIGNlbGxzIHRoYXQgYWxsb3cgdGhlbSB0byBwcm9kdWNlICAgZHlzdHJvcGhpbi4gICAgbyBEeXN0cm9waGluIGlzIGEgcHJvdGVpbiB0aGF0IHBhdGllbnRzIHdpdGggICBEdWNoZW5uZSBNdXNjdWxhciBEeXN0cm9waHkgKERNRCksIGEgICBnZW5ldGljIGRpc29yZGVyLCBjYW5ub3QgcHJvZHVjZS4gICAgbyBUaGUgYWJzZW5jZSBvZiBkeXN0cm9waGluIGNyaXBwbGVzIHRob3NlICAgd2l0aCBETUQsIGFuZCBnZW5lcmFsbHkgbGVhZHMgdG8gaGVhcnQgICBhbmQgcmVzcGlyYXRvcnkgbXVzY2xlIHByb2JsZW1zLCBhbmQgICBkZWF0aC4gICBTb3VyY2U6ICAgaHR0cHM6Ly9jcnNyZXBvcnRzLmNvbmdyZXNzLmdvdi9wcm9kdWN0L3AgIGRmL1IvUjQ0ODI0ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 10,
      "question" : " With reference to 'designer baby',  which of the following statements  is/are correct?  1.  Embryo is selected through the  method of pre-implantation  genetic diagnosis.  2.  Molecular scissors are used to  make cuts at certain specified  locations.  3.  Indian Parliament has passed a  law to ban germline editing of  humans because of ethical  concerns.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBBIGRlc2lnbmVyIGJhYnkgaXMgYSBHTSBodW1hbiBlbWJyeW8gd2l0aCAgIGFwcHJvcHJpYXRlIHF1YWxpdGllcyB3aGljaCBoYXZlIGJlZW4gICBzaGFwZWQgYXMgcGVyIHRoZSBpbnN0cnVjdGlvbnMgcmVjZWl2ZWQgZnJvbSAgIHRoZSBwYXJlbnRzLiBTcGVjaWZpY2FsbHksIGRlc2lnbmVyIGJhYmllcyAgIHdlcmUgY29uY2VpdmVkIHNvIHRoYXQgY2hpbGRyZW4gd291bGQgYmUgICBmcmVlIGZyb20gYW55IGxpZmUtdGhyZWF0ZW5pbmcgZGlzZWFzZS4gRm9yICAgaW5zdGFuY2UsIGlmIGVpdGhlciBvZiB0aGUgcGFyZW50IGhhcyBhIGhpc3RvcnkgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzIgIDEgICBvZiBhIHRlcm1pbmFsbHkgaWxsIGRpc2Vhc2UgaW4gdGhlaXIgZmFtaWx5LCB0aGUgICBHTSBiYWJ5IHdpbGwgYmUgaW1tdW5lIHRvIHRoYXQgZGlzZWFzZS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBEZXNpZ25lciBiYWJpZXMgICBhcmUgZWl0aGVyIGNyZWF0ZWQgZnJvbSBhbiBlbWJyeW8gICBzZWxlY3RlZCBieSBwcmUtaW1wbGFudGF0aW9uIGdlbmV0aWMgICBkaWFnbm9zaXMgKFBHRCkgb3IgZ2VuZXRpY2FsbHkgbW9kaWZpZWQgaW4gICBvcmRlciB0byBpbmZsdWVuY2UgdGhlIHRyYWl0cyBvZiB0aGUgICByZXN1bHRpbmcgY2hpbGRyZW4uICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBwcm9jZXNzICAgdGhyb3VnaCB3aGljaCBkZXNpZ25lciBiYWJpZXMgYXJlIHByb2R1Y2VkICAgaXMga25vd24gYXMgZ2VuZSBlZGl0aW5nLiBUaGVzZSBjdXRzIGFyZSAgIHJlc3RvcmVkIHRocm91Z2ggbm9uLWhvbW9sb2dvdXMgZW5kICAgam9pbmluZyBvciBob21vbG9nb3VzIHJlY29tYmluYXRpb24gICB0aGF0IHJlc3VsdCBpbiB0aGUgZGVzaXJlZCBlZGl0cy4gVXNpbmcgICBtb2xlY3VsYXIgc2Npc3NvcnMsIGN1dHMgY2FuIGJlIG1hZGUgYXQgICBjZXJ0YWluIGxvY2F0aW9ucyBvZiB0aGUgZ2Vub21lLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluZGlhIGlzICAgd2l0bmVzc2luZyB0ZWNobm9sb2dpY2FsIGdyb3d0aCBvZiBsYXRlLCBidXQgICBzdGlsbCwgdGhlcmUgaXMgbm8gc3BlY2lmaWMgbGF3IHRoYXQgcmVndWxhdGVzICAgZ2VuZXRpYyBtb2RpZmljYXRpb24gb3IgZ2VybWxpbmUgZWRpdGluZy4gICBBY2NvcmRpbmcgdG8gdGhlIEd1aWRlbGluZXMgcmVsZWFzZWQgYnkgdGhlICAgSW5kaWFuIENvdW5jaWwgb2YgTWVkaWNhbCBSZXNlYXJjaCAoSUNNUiksICAgZ2VuZXRpYyBlZGl0aW5nIHRvIGNyZWF0ZSBkZXNpZ25lciBiYWJpZXMgaXMgICB1bmV0aGljYWwsIHdoaWNoIHNob3VsZCBiZSBwcm9oaWJpdGVkICAgWC1GYWN0b3I6ICAgTWl0b2Nob25kcmlhIEROQSByZXBsYWNlbWVudCB0aGVyYXB5ICAgbyBETkEgaXMgbm90IGNvbmZpbmVkIHRvIHRoZSBudWNsZXVzLiAgICBvIFRob3VzYW5kcyBvZiBjb3BpZXMgb2YgbWl0b2Nob25kcmlhbCAgIEROQSAobXRETkEpLCB3aGljaCBhcmUgaW5oZXJpdGVkIGZyb20gICB0aGUgbW90aGVyLCBhcmUgcHJlc2VudCBpbiB0aGUgY3l0b3BsYXNtICAgb2YgdGhlIGNlbGxzLiBUaGV5IGFyZSBwcm9uZSB0byBtdXRhdGlvbnMuICAgIG8gV2hlbiB0aGUgcGVyY2VudGFnZSBvZiBtdEROQSB3aXRoICAgbXV0YXRpb25zIGV4Y2VlZHMgYSBjZXJ0YWluIHRocmVzaG9sZCwgaXQgICBtYXkgbGVhZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgICBtaXRvY2hvbmRyaWFsIGRpc2Vhc2VzLiAgIG8gVGhlIGNvbXBsaWNhdGlvbnMgb2YgdXNpbmcgZW5naW5lZXJpbmcgICBudWNsZWFzZSBvciBtdEROQSByZXBsYWNlbWVudCB0aGVyYXB5ICAgaW4gY3JlYXRpbmcgZGVzaWduZXIgYmFiaWVzIGFyZSBzdGlsbCBhdCAgIG5hc2NlbnQgc3RhZ2UuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tL3NjaWVuY2UvYXJ0ICBpY2xlL2Ficy9waWkvUzE3NTE3MjE0MTUzMDAwNjMgICBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vbmV3cy9zICBjaWVuY2UtdGVjaG5vbG9neS9kZXNpZ25lci1iYWJpZXMtY2FuLSAgbGVhZC10by1ncm93dGgtb2YtaG9tb2dlbm91cy0gIGluZGl2aWR1YWxzLSAgNjIyNTcjOn46dGV4dD1JbmRpYSUyMHdpdG5lc3NlZCUyMHRoICBlJTIwZGViYXRlJTIwYXJvdW5kJTIwZGVzaWduZXIlMjAgIGJhYmkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only    ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 11,
      "question" : " Consider the following statements:  1.  Barbiturates are hypnotic or sleep  producing agents.  2.  Analgesics do not cause  impairment of consciousness.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIaXN0YW1pbmUgaXMgYSBwb3RlbnQgdmFzb2RpbGF0b3IuIEl0ICAgaGFzIHZhcmlvdXMgZnVuY3Rpb25zLiBJdCBjb250cmFjdHMgdGhlICAgc21vb3RoIG11c2NsZXMgaW4gdGhlIGJyb25jaGkgYW5kICAgZ3V0IGFuZCByZWxheGVzIG90aGVyIG11c2NsZXMsIHN1Y2ggYXMgICB0aG9zZSBpbiB0aGUgd2FsbHMgb2YgZmluZSBibG9vZCB2ZXNzZWxzLiAgIEhpc3RhbWluZSBpcyBhbHNvIHJlc3BvbnNpYmxlIGZvciB0aGUgICBuYXNhbCBjb25nZXN0aW9uIGFzc29jaWF0ZWQgd2l0aCAgIGNvbW1vbiBjb2xkIGFuZCBhbGxlcmdpYyByZXNwb25zZSAgIHRvIHBvbGxlbi4gICAgQW50aWhpc3RhbWluZXMgaW50ZXJmZXJlIHdpdGggdGhlIG5hdHVyYWwgICBhY3Rpb24gb2YgaGlzdGFtaW5lIGJ5IGNvbXBldGluZyB3aXRoICAgaGlzdGFtaW5lIGZvciBiaW5kaW5nIHNpdGVzIG9mIHJlY2VwdG9yIHdoZXJlICAgaGlzdGFtaW5lIGV4ZXJ0cyBpdHMgZWZmZWN0LiAgIFRyYW5xdWlsaXplcnMgYW5kIGFuYWxnZXNpY3MgYXJlICAgbmV1cm9sb2dpY2FsbHkgYWN0aXZlIGRydWdzLiBUaGVzZSBhZmZlY3QgdGhlICAgbWVzc2FnZSB0cmFuc2ZlciBtZWNoYW5pc20gZnJvbSBuZXJ2ZSB0byAgIHJlY2VwdG9yLiBUcmFucXVpbGl6ZXJzIGFyZSBhIGNsYXNzIG9mICAgY2hlbWljYWwgY29tcG91bmRzIHVzZWQgZm9yIHRoZSB0cmVhdG1lbnQgICBvZiBzdHJlc3MsIGFuZCBtaWxkIG9yIGV2ZW4gc2V2ZXJlIG1lbnRhbCAgIGRpc2Vhc2VzLiBUaGVzZSByZWxpZXZlIGFueGlldHksIHN0cmVzcywgICBpcnJpdGFiaWxpdHkgb3IgZXhjaXRlbWVudCBieSBpbmR1Y2luZyBhIHNlbnNlICAgb2Ygd2VsbC1iZWluZy4gRGVyaXZhdGl2ZXMgb2YgYmFyYml0dXJpYyBhY2lkICAgdml6LiwgdmVyb25hbCwgYW15dGFsLCBuZW1idXRhbCwgbHVtaW5hbCBhbmQgICBzZWNvbmFsIGNvbnN0aXR1dGUgYW4gaW1wb3J0YW50IGNsYXNzIG9mICAgdHJhbnF1aWxpemVycy4gVGhlc2UgZGVyaXZhdGl2ZXMgYXJlIGNhbGxlZCAgIGJhcmJpdHVyYXRlcy4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQmFyYml0dXJhdGVzIGFyZSAgIGh5cG5vdGljLCBpLmUuLCBzbGVlcCBwcm9kdWNpbmcgYWdlbnRzLiAgIFNvbWUgb3RoZXIgc3Vic3RhbmNlcyB1c2VkIGFzIHRyYW5xdWlsaXplcnMgICBhcmUgdmFsaXVtIGFuZCBzZXJvdG9uaW4uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQW5hbGdlc2ljcyByZWR1Y2UgICBvciBhYm9saXNoIHBhaW4gd2l0aG91dCBjYXVzaW5nICAgaW1wYWlybWVudCBvZiBjb25zY2lvdXNuZXNzLCBtZW50YWwgICBjb25mdXNpb24sIGluY29vcmRpbmF0aW9uIG9yIHBhcmFseXNpcyBvciAgIHNvbWUgb3RoZXIgZGlzdHVyYmFuY2VzIG9mIG5lcnZvdXMgc3lzdGVtICAgWC1GYWN0b3I6ICAg74K3IEFuYWxnZXNpY3MgcmVkdWNlIG9yIGFib2xpc2ggcGFpbiB3aXRob3V0ICAgaW5jb29yZGluYXRpb24gb3IgcGFyYWx5c2lzLiBUaGVzZSBhcmUgICBjbGFzc2lmaWVkIGFzIGZvbGxvd3M6ICAgIO+CtyBOb24tbmFyY290aWMgKG5vbi1hZGRpY3RpdmUpIGFuYWxnZXNpY3M6ICAgQXNwaXJpbiBhbmQgcGFyYWNldGFtb2wgYmVsb25nIHRvIHRoZSAgIGNsYXNzIG9mIG5vbi1uYXJjb3RpYyBhbmFsZ2VzaWNzLiAgICBvIEFzcGlyaW4gaW5oaWJpdHMgdGhlIHN5bnRoZXNpcyBvZiAgIHByb3N0YWdsYW5kaW5zIHdoaWNoIHN0aW11bGF0ZSAgIGluZmxhbW1hdGlvbiBpbiB0aGUgdGlzc3VlIGFuZCBjYXVzZSAgIHBhaW4uICAgIG8gVGhlc2UgZHJ1Z3MgYXJlIGVmZmVjdGl2ZSBpbiByZWxpZXZpbmcgICBza2VsZXRhbCBwYWluIHN1Y2ggYXMgdGhhdCBkdWUgdG8gICBhcnRocml0aXMuICAgIG8gQmVjYXVzZSBvZiBpdHMgYW50aS1ibG9vZCBjbG90dGluZyAgIGFjdGlvbiwgYXNwaXJpbiBmaW5kcyB1c2UgaW4gcHJldmVudGlvbiAgIG9mIGhlYXJ0IGF0dGFja3MuICAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMiAgMiAgIO+CtyBOYXJjb3RpYyBhbmFsZ2VzaWNzOiBNb3JwaGluZSByZWxpZXZlcyAgIHBhaW4gYW5kIHByb2R1Y2VzIHNsZWVwLiAgICBvIE1vcnBoaW5lIG5hcmNvdGljcyBhcmUgc29tZXRpbWVzICAgcmVmZXJyZWQgdG8gYXMgb3BpYXRlcywgc2luY2UgdGhleSBhcmUgICBvYnRhaW5lZCBmcm9tIHRoZSBvcGl1bSBwb3BweS4gICAgbyBUaGVzZSBhbmFsZ2VzaWNzIGFyZSBjaGllZmx5IHVzZWQgZm9yICAgdGhlIHJlbGllZiBvZiBwb3N0b3BlcmF0aXZlIHBhaW4sIGNhcmRpYWMgICBwYWluIGFuZCBwYWlucyBvZiB0ZXJtaW5hbCBjYW5jZXIsIGFuZCAgIGluIGNoaWxkIGJpcnRoLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9sZWNoMiAgPTctNyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 12,
      "question" : " Which of the following is/are the uses  of baking soda?  1.  Soda-acid fire extinguishers.  2.  Making drinking water free from  germs.  3.  Oxidising agent in chemical  industries.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEJha2luZyBzb2RhICAgIFRoZSBiYWtpbmcgc29kYSBpcyBjb21tb25seSB1c2VkIGluIHRoZSAgIGtpdGNoZW4gZm9yIG1ha2luZyB0YXN0eSBjcmlzcHkgcGFrb3JhcywgZXRjLiAgIFNvbWV0aW1lcyBpdCBpcyBhZGRlZCBmb3IgZmFzdGVyIGNvb2tpbmcuIFRoZSAgIGNoZW1pY2FsIG5hbWUgb2YgdGhlIGNvbXBvdW5kIGlzIHNvZGl1bSAgIGh5ZHJvZ2VuY2FyYm9uYXRlIChOYUhDTzMpLiBJdCBpcyAgIHByb2R1Y2VkIHVzaW5nIHNvZGl1bSBjaGxvcmlkZSBhcyBvbmUgb2YgICB0aGUgcmF3IG1hdGVyaWFscy4gICBTb2RpdW0gaHlkcm9nZW5jYXJib25hdGUgaXMgYWxzbyBhbiAgIGluZ3JlZGllbnQgaW4gYW50YWNpZHMuIEJlaW5nIGFsa2FsaW5lLCBpdCAgIG5ldXRyYWxpc2VzIGV4Y2VzcyBhY2lkIGluIHRoZSBzdG9tYWNoIGFuZCAgIHByb3ZpZGVzIHJlbGllZi4gICAgSXQgaXMgYWxzbyB1c2VkIGluIHNvZGEtYWNpZCBmaXJlICAgZXh0aW5ndWlzaGVycy4gICBTdGF0ZW1lbnRzIDIgYW5kIDMgYXJlIGluY29ycmVjdDogICBCbGVhY2hpbmcgcG93ZGVyIGlzIHVzZWQ6ICAgIChpKSAgZm9yIGJsZWFjaGluZyBjb3R0b24gYW5kIGxpbmVuIGluIHRoZSAgIHRleHRpbGUgaW5kdXN0cnksIGZvciBibGVhY2hpbmcgd29vZCBwdWxwICAgaW4gcGFwZXIgZmFjdG9yaWVzIGFuZCBmb3IgYmxlYWNoaW5nICAgd2FzaGVkIGNsb3RoZXMgaW4gbGF1bmRyeTsgICAgKGlpKSAgdG8gbWFrZSBkcmlua2luZyB3YXRlciBmcmVlIGZyb20gICBnZXJtcy4gICAoaWlpKSAgYXMgYW4gb3hpZGlzaW5nIGFnZW50IGluIG1hbnkgICBjaGVtaWNhbCBpbmR1c3RyaWVzICAgWC1GYWN0b3I6ICAgVXNlcyBvZiB3YXNoaW5nIHNvZGEgICAg74K3IFNvZGl1bSBjYXJib25hdGUgKHdhc2hpbmcgc29kYSkgaXMgdXNlZCAgIGluIGdsYXNzLCBzb2FwIGFuZCBwYXBlciBpbmR1c3RyaWVzLiAgICDvgrcgSXQgaXMgdXNlZCBpbiB0aGUgbWFudWZhY3R1cmUgb2Ygc29kaXVtICAgY29tcG91bmRzIHN1Y2ggYXMgYm9yYXguICAgIO+CtyBTb2RpdW0gY2FyYm9uYXRlIGNhbiBiZSB1c2VkIGFzIGEgICBjbGVhbmluZyBhZ2VudCBmb3IgZG9tZXN0aWMgcHVycG9zZXMuICAgIO+CtyBJdCBpcyB1c2VkIGZvciByZW1vdmluZyBwZXJtYW5lbnQgICBoYXJkbmVzcyBvZiB3YXRlci4gICBTb3VyY2U6ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/amVzYzEgID0yLTE2ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 13,
      "question" : " With reference to bioethanol, which of  the following statements is/are  correct?  1.  It is a fermented product of  carbohydrates.  2. It can be produced from  microalgal biomass.  3.  Pure ethanol can be used as a fuel  for vehicles.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEJpb2V0aGFub2wsIGluICAgZ2VuZXJhbCwgaXMgYSBmZXJtZW50ZWQgcHJvZHVjdCBvZiAgIGNhcmJvaHlkcmF0ZXMgZnJvbSBjcm9wcyBzdWNoIGFzICAgc3VnYXJjYW5lLCBjb3JuLCBhbmQgc28gb24uICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEl0IGNhbiBhbHNvIGJlICAgcHJvZHVjZWQgZnJvbSBtaWNyb2FsZ2FsIGJpb21hc3MuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEV0aGFub2wgYXQgaXRzICAgcHVyZXN0IGZvcm0gY2FuIGFsc28gYmUgdXNlZCBhcyBhIGZ1ZWwgZm9yICAgdmVoaWNsZXMuICAgIFByZXNlbnRseSwgaXQgaXMgc2xvd2x5IGdldHRpbmcgcmVwbGFjZWQgYnkgICBiaW9ldGhhbm9sLiBUaGUgVW5pdGVkIFN0YXRlcyBhbmQgQnJhemlsICAgbGFyZ2VseSB1c2UgYmlvZXRoYW5vbCBhcyBhIHZlaGljbGUgZnVlbC4gICBBZnRlciB0aGUgZmVybWVudGF0aW9uIHByb2Nlc3MsIHRoZSAgIGJpb2V0aGFub2wgaXMgY29uY2VudHJhdGVkIHRocm91Z2ggdGhlICAgZGlzdGlsbGF0aW9uIHByb2Nlc3MsIHdoaWNoIGlzIGZvbGxvd2VkIGJ5IHRoZSAgIGJpb2V0aGFub2wgcmVjb3ZlcnkgZnJvbSB0aGUgZmVybWVudGF0aW9uICAgYnJvdGguICAgIFgtRmFjdG9yOiAgIO+CtyBFdGhhbm9pYyBhY2lkIGlzIGNvbW1vbmx5IGNhbGxlZCBhY2V0aWMgICBhY2lkIGFuZCBiZWxvbmdzIHRvIGEgZ3JvdXAgb2YgYWNpZHMgY2FsbGVkICAgY2FyYm94eWxpYyBhY2lkcy4gICDvgrcgNS04JSBzb2x1dGlvbiBvZiBhY2V0aWMgYWNpZCBpbiB3YXRlciBpcyAgIGNhbGxlZCB2aW5lZ2FyIGFuZCBpcyB1c2VkIHdpZGVseSBhcyBhICAgcHJlc2VydmF0aXZlIGluIHBpY2tsZXMuICAgIO+CtyBUaGUgbWVsdGluZyBwb2ludCBvZiBwdXJlIGV0aGFub2ljIGFjaWQgaXMgICAyOTAgSyBhbmQgaGVuY2UgaXQgb2Z0ZW4gZnJlZXplcyBkdXJpbmcgICB3aW50ZXIgaW4gY29sZCBjbGltYXRlcy4gICAg74K3IFRoaXMgZ2F2ZSByaXNlIHRvIGl0cyBuYW1lIGdsYWNpYWwgYWNldGljICAgYWNpZC4gVGhlIGdyb3VwIG9mIG9yZ2FuaWMgY29tcG91bmRzICAgY2FsbGVkIGNhcmJveHlsaWMgYWNpZHMgYXJlIG9idmlvdXNseSAgIGNoYXJhY3RlcmlzZWQgYnkgdGhlaXIgYWNpZGljIG5hdHVyZS4gICAg74K3IEhvd2V2ZXIsIHVubGlrZSBtaW5lcmFsIGFjaWRzIGxpa2UgSENsLCAgIHdoaWNoIGFyZSBjb21wbGV0ZWx5IGlvbmlzZWQsIGNhcmJveHlsaWMgICBhY2lkcyBhcmUgd2VhayBhY2lkcy4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cuc2NpZW5jZWRpcmVjdC5jb20gb3BpY3MvZSAgbmdpbmVlcmluZy9iaW9ldGhhbm9sICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/amVzYzEgID00LTE2ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only   ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 14,
      "question" : " With reference to convex mirrors,  consider the following statements:  1.  They are curved outwards hence  give a wider view.  2.  They always give an erect and  diminished image.  3.  They are commonly used in  vehicles headlights.  Which of the statements given above  is/are correct?  TEST - 9008 ( )   www. t.me/ Pa g4 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogVXNlcyBvZiBjb252ZXggICBtaXJyb3JzICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGcyICAzICAgQ29udmV4IG1pcnJvcnMgYXJlIGNvbW1vbmx5IHVzZWQgYXMgcmVhci0gIHZpZXcgKHdpbmcpIG1pcnJvcnMgaW4gdmVoaWNsZXMuIFRoZXNlICAgbWlycm9ycyBhcmUgZml0dGVkIG9uIHRoZSBzaWRlcyBvZiB0aGUgdmVoaWNsZSwgICBlbmFibGluZyB0aGUgZHJpdmVyIHRvIHNlZSB0cmFmZmljIGJlaGluZCAgIGhpbS9oZXIgdG8gZmFjaWxpdGF0ZSBzYWZlIGRyaXZpbmcuIENvbnZleCAgIG1pcnJvcnMgYXJlIHByZWZlcnJlZCBiZWNhdXNlIHRoZXkgYWx3YXlzICAgZ2l2ZSBhbiBlcmVjdCwgdGhvdWdoIGRpbWluaXNoZWQsIGltYWdlLiAgIEFsc28sIHRoZXkgaGF2ZSBhIHdpZGVyIGZpZWxkIG9mIHZpZXcgYXMgICB0aGV5IGFyZSBjdXJ2ZWQgb3V0d2FyZHMuIFRodXMsIGNvbnZleCAgIG1pcnJvcnMgZW5hYmxlIHRoZSBkcml2ZXIgdG8gdmlldyBtdWNoIGxhcmdlciAgIGFyZWEgdGhhbiB3b3VsZCBiZSBwb3NzaWJsZSB3aXRoIGEgcGxhbmUgICBtaXJyb3IuICAgWC1GYWN0b3I6ICAgVXNlcyBvZiBjb25jYXZlIG1pcnJvcnMgICAg74K3IENvbmNhdmUgbWlycm9ycyBhcmUgY29tbW9ubHkgdXNlZCBpbiAgIHRvcmNoZXMsIHNlYXJjaC1saWdodHMgYW5kIHZlaGljbGVzICAgaGVhZGxpZ2h0cyB0byBnZXQgcG93ZXJmdWwgcGFyYWxsZWwgYmVhbXMgICBvZiBsaWdodC4gICAg74K3IFRoZXkgYXJlIG9mdGVuIHVzZWQgYXMgc2hhdmluZyBtaXJyb3JzIHRvICAgc2VlIGEgbGFyZ2VyIGltYWdlIG9mIHRoZSBmYWNlLiAgIO+CtyBUaGUgZGVudGlzdHMgdXNlIGNvbmNhdmUgbWlycm9ycyB0byBzZWUgICBsYXJnZSBpbWFnZXMgb2YgdGhlIHRlZXRoIG9mIHBhdGllbnRzLiAgICDvgrcgTGFyZ2UgY29uY2F2ZSBtaXJyb3JzIGFyZSB1c2VkIHRvICAgY29uY2VudHJhdGUgc3VubGlnaHQgdG8gcHJvZHVjZSBoZWF0IGluICAgc29sYXIgZnVybmFjZXMuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2plc2MxICA9MTAtMTYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 15,
      "question" : " With reference to agriculture, consider  the following statements regarding  fertilizers:  1.  It is a man-made inorganic salt.  2.  It provides humus to the soil.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZSBzdWJzdGFuY2VzIHdoaWNoIGFyZSBhZGRlZCB0byB0aGUgc29pbCAgIGluIHRoZSBmb3JtIG9mIG51dHJpZW50cyBmb3IgdGhlIGhlYWx0aHkgICBncm93dGggb2YgcGxhbnRzIGFyZSBjYWxsZWQgbWFudXJlIGFuZCAgIGZlcnRpbGlzZXJzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEZlcnRpbGlzZXIgaXMgYSAgIG1hbi1tYWRlIGlub3JnYW5pYyBzYWx0LiBTb2lsIHN1cHBsaWVzICAgbWluZXJhbCBudXRyaWVudHMgdG8gdGhlIGNyb3AgcGxhbnRzLiBUaGVzZSAgIG51dHJpZW50cyBhcmUgZXNzZW50aWFsIGZvciB0aGUgZ3Jvd3RoIG9mICAgcGxhbnRzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEZlcnRpbGlzZXJzIGRvICAgbm90IHByb3ZpZGUgaHVtdXMgdG8gdGhlIHNvaWwuICAgVGhleSBhcmUgZGlmZmVyZW50IGZyb20gbWFudXJlLiBGZXJ0aWxpc2VycyAgIGFyZSBwcm9kdWNlZCBpbiBmYWN0b3JpZXMuIFNvbWUgZXhhbXBsZXMgb2YgICBmZXJ0aWxpc2VycyBhcmUtIHVyZWEsIGFtbW9uaXVtIHN1bHBoYXRlLCAgIHN1cGVyIHBob3NwaGF0ZSwgcG90YXNoLCBOUEsgKE5pdHJvZ2VuLCAgIFBob3NwaG9ydXMsIGFuZCBQb3Rhc3NpdW0pLiAgICBYLUZhY3RvcjogICBNYW51cmU6ICAgQWR2YW50YWdlcyBvZiBNYW51cmU6ICAgIO+CtyBNYW51cmUgaXMgYW4gb3JnYW5pYyBzdWJzdGFuY2Ugb2J0YWluZWQgICBmcm9tIHRoZSBkZWNvbXBvc2l0aW9uIG9mIHBsYW50IG9yIGFuaW1hbCAgIHdhc3Rlcy4gRmFybWVycyBkdW1wIHBsYW50IGFuZCBhbmltYWwgICB3YXN0ZSBpbiBwaXRzIGF0IG9wZW4gcGxhY2VzIGFuZCBhbGxvdyBpdCAgIHRvIGRlY29tcG9zZS4gICDvgrcgVGhlIGRlY29tcG9zaXRpb24gaXMgY2F1c2VkIGJ5IHNvbWUgICBtaWNyb29yZ2FuaXNtcy4gVGhlIGRlY29tcG9zZWQgbWF0dGVyICAgaXMgdXNlZCBhcyBvcmdhbmljIG1hbnVyZS4gICDvgrcgVGhlIG9yZ2FuaWMgbWFudXJlIGlzIGNvbnNpZGVyZWQgYmV0dGVyICAgdGhhbiBmZXJ0aWxpc2VycyBiZWNhdXNlLSAgICBvIEl0IGVuaGFuY2VzIHRoZSB3YXRlciBob2xkaW5nIGNhcGFjaXR5ICAgb2YgdGhlIHNvaWwuICAgIG8gSXQgbWFrZXMgdGhlIHNvaWwgcG9yb3VzIGR1ZSB0byB3aGljaCAgIGV4Y2hhbmdlIG9mIGdhc2VzIGJlY29tZXMgZWFzeS4gICAgbyBJdCBpbmNyZWFzZXMgdGhlIG51bWJlciBvZiBmcmllbmRseSAgIG1pY3JvYmVzLiAgICBvIEl0IGltcHJvdmVzIHRoZSB0ZXh0dXJlIG9mIHRoZSBzb2lsLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9oZXNjMSAgPTEtMTggICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 16,
      "question" : " Consider the following statements:  1.  Bacteria increase soil fertility by  fixing the nitrogen.  2.  Lactobacillus promotes the  formation of curd.  3.  Tetracycline is an anti-viral drug.   Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE1pY3Jvb3JnYW5pc21zICAgYXJlIHVzZWQgaW4gY2xlYW5pbmcgdXAgb2YgdGhlIGVudmlyb25tZW50LiAgIEZvciBleGFtcGxlLCB0aGUgb3JnYW5pYyB3YXN0ZXMgKHZlZ2V0YWJsZSAgIHBlZWxzLCByZW1haW5zIG9mIGFuaW1hbHMsIGZhZWNlcywgZXRjLikgYXJlICAgYnJva2VuIGRvd24gaW50byBoYXJtbGVzcyBhbmQgdXNhYmxlICAgc3Vic3RhbmNlcyBieSBiYWN0ZXJpYS4gQmFjdGVyaWEgYXJlIGFsc28gICB1c2VkIGluIHRoZSBwcmVwYXJhdGlvbiBvZiBtZWRpY2luZXMuIEluICAgYWdyaWN1bHR1cmUgdGhleSBhcmUgdXNlZCB0byBpbmNyZWFzZSBzb2lsICAgZmVydGlsaXR5IGJ5IGZpeGluZyBuaXRyb2dlbi4gICBDdXJkIGNvbnRhaW5zIHNldmVyYWwgbWljcm9vcmdhbmlzbXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogIE9mIHRoZXNlLCB0aGUgICBiYWN0ZXJpdW0sIExhY3RvYmFjaWxsdXMgcHJvbW90ZXMgdGhlICAgZm9ybWF0aW9uIG9mIGN1cmQuIEl0IG11bHRpcGxpZXMgaW4gbWlsayBhbmQgICBjb252ZXJ0cyBpdCBpbnRvIGN1cmQuIEJhY3RlcmlhIGFyZSBhbHNvICAgaW52b2x2ZWQgaW4gdGhlIG1ha2luZyBvZiBjaGVlc2UsIHBpY2tsZXMgYW5kICAgbWFueSBvdGhlciBmb29kIGl0ZW1zLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIHNvdXJjZSBvZiAgIGFudGliaW90aWMgdGFibGV0cywgY2Fwc3VsZXMgb3IgaW5qZWN0aW9ucyAgIHN1Y2ggYXMgb2YgcGVuaWNpbGxpbiBpcyBtaWNyb29yZ2FuaXNtcy4gICBUaGVzZSBtZWRpY2luZXMga2lsbCBvciBzdG9wIHRoZSBncm93dGggb2YgdGhlICAgZGlzZWFzZS1jYXVzaW5nIG1pY3Jvb3JnYW5pc21zLiBTdWNoICAgbWVkaWNpbmVzIGFyZSBjYWxsZWQgYW50aWJpb3RpY3MuIFRoZXNlIGRheXMgICBhIG51bWJlciBvZiBhbnRpYmlvdGljcyBhcmUgYmVpbmcgcHJvZHVjZWQgICBmcm9tIGJhY3RlcmlhIGFuZCBmdW5naS4gU3RyZXB0b215Y2luLCAgIHRldHJhY3ljbGluZSBhbmQgZXJ5dGhyb215Y2luIGFyZSBzb21lICAgb2YgdGhlIGNvbW1vbmx5IGtub3duIGFudGliaW90aWNzIHdoaWNoICAgYXJlIG1hZGUgZnJvbSBmdW5naSBhbmQgYmFjdGVyaWEuICAgTWljcm9vcmdhbmlzbXMgYXJlIHVzZWQgZm9yIHRoZSBsYXJnZSBzY2FsZSAgIHByb2R1Y3Rpb24gb2YgYWxjb2hvbCwgd2luZSBhbmQgYWNldGljIGFjaWQgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzIgIDQgICAodmluZWdhcikuIFllYXN0IGlzIHVzZWQgZm9yIGNvbW1lcmNpYWwgICBwcm9kdWN0aW9uIG9mIGFsY29ob2wgYW5kIHdpbmUuICAgWC1GYWN0b3I6ICAgV29ya2luZyBvZiBWYWNjaW5lczogICDvgrcgV2hlbiBhIGRpc2Vhc2UtY2FycnlpbmcgbWljcm9iZSBlbnRlcnMgYSAgIGJvZHksIHRoZSBib2R5IHByb2R1Y2VzIGFudGlib2RpZXMgdG8gICBmaWdodCB0aGUgaW52YWRlci4gICAg74K3IFRoZSBib2R5IHJlbWVtYmVycyBob3cgdG8gZmlnaHQgdGhlICAgbWljcm9iZSBpZiBpdCBlbnRlcnMgYWdhaW4uIElmIGRlYWQgb3IgICB3ZWFrZW5lZCBtaWNyb2JlcyBhcmUgaW50ZW50aW9uYWxseSAgIGludHJvZHVjZWQgaW50byBhIGhlYWx0aHkgYm9keSwgdGhlIGJvZHkgICBraWxscyB0aGUgaW52YWRpbmcgYmFjdGVyaWEgYnkgcHJvZHVjaW5nICAgc3VpdGFibGUgYW50aWJvZGllcy4gICAg74K3IFRoZSBhbnRpYm9kaWVzIHJlbWFpbiBpbiB0aGUgYm9keSBhbmQgaXQgICBpcyBwcm90ZWN0ZWQgZnJvbSB0aGUgZGlzZWFzZS1jYXVzaW5nICAgbWljcm9iZXMgZm9yIGV2ZXIuIFRoaXMgaXMgaG93IGEgdmFjY2luZSAgIHdvcmtzLiAgICDvgrcgU2V2ZXJhbCBkaXNlYXNlcywgaW5jbHVkaW5nIGNob2xlcmEsICAgdHViZXJjdWxvc2lzLCBzbWFsbHBveCBhbmQgaGVwYXRpdGlzIGNhbiAgIGJlIHByZXZlbnRlZCBieSB2YWNjaW5hdGlvbi4gICAg74K3IEVkd2FyZCBKZW5uZXIgZGlzY292ZXJlZCB0aGUgdmFjY2luZSBmb3IgICBzbWFsbHBveCBpbiAxNzk4LiAgIO+CtyBMb3VpcyBQYXN0ZXVyIGRpc2NvdmVyZWQgZmVybWVudGF0aW9uIGluICAgMTg1Ny4gICDvgrcgUm9iZXJ0IEvDtmNoICgxODc2KSBkaXNjb3ZlcmVkIEJhY2lsbHVzICAgYW50aHJhY2lzIHdoaWNoIGNhdXNlcyBhbnRocmF4IGRpc2Vhc2UuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2hlc2MxICA9Mi0xOCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 17,
      "question" : " Consider the following statements:  1.  Preservatives prevent the growth  of microbes in edible commodity.  2.  Pasteurised milk can be  consumed without boiling.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFNhbHRzIGFuZCBlZGlibGUgICBvaWxzIGFyZSB0aGUgY29tbW9uIGNoZW1pY2FscyBnZW5lcmFsbHkgICB1c2VkIHRvIGNoZWNrIHRoZSBncm93dGggb2YgICBtaWNyb29yZ2FuaXNtcyBpbiBmb29kcyBpdG9tcy4gICBUaGVyZWZvcmUsIHRoZXkgYXJlIGNhbGxlZCBwcmVzZXJ2YXRpdmVzLiAgIFNhbHQgb3IgYWNpZCBwcmVzZXJ2YXRpdmVzIGFyZSBhZGRlZCB0byAgIHBpY2tsZXMgdG8gcHJldmVudCB0aGUgYXR0YWNrIG9mIG1pY3JvYmVzLiAgICBTb2RpdW0gYmVuem9hdGUgYW5kIHNvZGl1bSAgIG1ldGFiaXN1bHBoaXRlIGFyZSBjb21tb24gcHJlc2VydmF0aXZlcy4gICBUaGVzZSBhcmUgYWxzbyB1c2VkIGluIGphbXMgYW5kIHNxdWFzaGVzIHRvICAgY2hlY2sgdGhlaXIgc3BvaWxhZ2UuICAgIERpbWV0aHlsIFN1bGZveGlkZSBpcyBhIGhpZ2hseSBwb2xhciBvcmdhbmljICAgbGlxdWlkIHRoYXQgaXMgdXNlZCB3aWRlbHkgYXMgYSBjaGVtaWNhbCAgIHNvbHZlbnQgYW5kIGEgZnJlZSByYWRpY2FsIHNjYXZlbmdlci4gSXQgc2hvd3MgICBhIHJhbmdlIG9mIHBoYXJtYWNvbG9naWNhbCBhY3Rpdml0eSBpbmNsdWRpbmcgICBhbmFsZ2VzaWEgYW5kIGFudGktaW5mbGFtbWF0aW9uLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQYXN0ZXVyaXNlZCBtaWxrICAgY2FuIGJlIGNvbnN1bWVkIHdpdGhvdXQgYm9pbGluZyBhcyBpdCBpcyAgIGZyZWUgZnJvbSBoYXJtZnVsIG1pY3JvYmVzLiAgICBUaGUgbWlsayBpcyBoZWF0ZWQgdG8gYWJvdXQgNzAwQyBmb3IgMTUgdG8gICAzMCBzZWNvbmRzIGFuZCB0aGVuIHN1ZGRlbmx5IGNoaWxsZWQgYW5kICAgc3RvcmVkLiBCeSBkb2luZyBzbywgaXQgcHJldmVudHMgdGhlIGdyb3d0aCBvZiAgIG1pY3JvYmVzLiBUaGlzIHByb2Nlc3Mgd2FzIGRpc2NvdmVyZWQgYnkgICBMb3VpcyBQYXN0ZXVyLiBJdCBpcyBjYWxsZWQgcGFzdGV1cmlzYXRpb24uICAgWC1GYWN0b3I6ICAgRGltZXRoeWwgc3VsZm94aWRlIG9yIERNU086ICAg74K3IEl0IGhhcyBhbnRpLWluZmxhbW1hdG9yeSwgYW50aW94aWRhbnQgYW5kICAgYW5hbGdlc2ljIGFjdGl2aXRpZXMuICAgIO+CtyBJdCBhcHBlYXJzIGFzIGEgY2xlYXIgbGlxdWlkLCBlc3NlbnRpYWxseSAgIG9kb3JsZXNzLiAgIO+CtyBCZWNhdXNlIG9mIGl0cyBhYmlsaXR5IHRvIHBlbmV0cmF0ZSAgIGJpb2xvZ2ljYWwgbWVtYnJhbmVzLCBpdCBpcyB1c2VkIGFzIGEgICB2ZWhpY2xlIGZvciB0b3BpY2FsIGFwcGxpY2F0aW9uIG9mICAgcGhhcm1hY2V1dGljYWxzLiAgIO+CtyBJdCBpcyBhbHNvIHVzZWQgdG8gcHJvdGVjdCBjZWxscyBhbmQgdGlzc3VlICAgZHVyaW5nIGNyeW9wcmVzZXJ2YXRpb24gYW5kIGhhcyBiZWVuICAgdXNlZCB0byB0cmVhdCBleHRyYXZhc2F0aW9uIGRhbWFnZSAgIGNhdXNlZCBieSBhbnRocmFjeWNsaW5lLWJhc2VkICAgY2hlbW90aGVyYXB5LiAgIO+CtyBJdCBoYXMgYSByb2xlIGFzIGEgcG9sYXIgYXByb3RpYyBzb2x2ZW50LCBhICAgcmFkaWNhbCBzY2F2ZW5nZXIsIGEgbm9uLW5hcmNvdGljICAgYW5hbGdlc2ljLCBhbiBhbnRpZG90ZSwgYSBNUkkgY29udHJhc3QgICBhZ2VudCwgYW4gRXNjaGVyaWNoaWEgY29saSBtZXRhYm9saXRlLCBhICAgZ2Vyb3Byb3RlY3RvciBhbmQgYW4gYWxreWxhdGluZyBhZ2VudC4gICAg74K3IEl0IGlzIGEgdm9sYXRpbGUgb3JnYW5pYyBjb21wb3VuZC4gICBTb3VyY2U6ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/aGVzYzE9MiAgLTE4ICAgaHR0cHM6Ly9wdWJjaGVtLm5jYmkubmxtLm5paC5nb3YvY29tcCAgb3VuZC9EaW1ldGh5bC1zdWxmb3hpZGUgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only  ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 18,
      "question" : " Which of the following fibre is  commonly referred to as 'artificial  silk'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogU2lsa3dvcm0gd2FzICAgZGlzY292ZXJlZCBpbiBDaGluYSBhbmQgd2FzIGtlcHQgYXMgYSAgIGNsb3NlbHkgZ3VhcmRlZCBzZWNyZXQgZm9yIGEgbG9uZyB0aW1lLiBGYWJyaWMgICBvYnRhaW5lZCBmcm9tIHNpbGsgZmlicmUgd2FzIHZlcnkgY29zdGx5LiBCdXQgICBpdHMgYmVhdXRpZnVsIHRleHR1cmUgZmFzY2luYXRlZCBldmVyeWJvZHkuICAgQXR0ZW1wdHMgd2VyZSBtYWRlIHRvIG1ha2Ugc2lsayBhcnRpZmljaWFsbHkuICAgVG93YXJkcyB0aGUgZW5kIG9mIHRoZSBuaW5ldGVlbnRoIGNlbnR1cnksICAgc2NpZW50aXN0cyB3ZXJlIHN1Y2Nlc3NmdWwgaW4gb2J0YWluaW5nIGEgICBmaWJyZSBoYXZpbmcgcHJvcGVydGllcyBzaW1pbGFyIHRvIHRoYXQgb2Ygc2lsay4gICBTdWNoIGEgZmlicmUgd2FzIG9idGFpbmVkIGJ5IGNoZW1pY2FsICAgdHJlYXRtZW50IG9mIHdvb2QgcHVscC4gVGhpcyBmaWJyZSB3YXMgICBjYWxsZWQgcmF5b24gb3IgYXJ0aWZpY2lhbCBzaWxrLiBBbHRob3VnaCAgIHJheW9uIGlzIG9idGFpbmVkIGZyb20gYSBuYXR1cmFsIHNvdXJjZSwgICB3b29kIHB1bHAsIHlldCBpdCBpcyBhIG1hbi1tYWRlIGZpYnJlLiBJdCBpcyAgIGNoZWFwZXIgdGhhbiBzaWxrIGFuZCBjYW4gYmUgd292ZW4gbGlrZSBzaWxrICAgZmlicmVzLiBJdCBjYW4gYWxzbyBiZSBkeWVkIGluIGEgd2lkZSB2YXJpZXR5IG9mICAgY29sb3Vycy4gUmF5b24gaXMgbWl4ZWQgd2l0aCBjb3R0b24gdG8gbWFrZSAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMiAgNSAgIGJlZCBzaGVldHMgb3IgbWl4ZWQgd2l0aCB3b29sIHRvIG1ha2UgICBjYXJwZXRzLiAgIFgtRmFjdG9yOiAgIO+CtyBBY3J5bGljIFBvbHllc3RlciBpcyBhIHN5bnRoZXRpYyBmaWJyZS4gSXQgICBkb2VzIG5vdCBnZXQgd3JpbmtsZWQgZWFzaWx5LiAgICDvgrcgSXQgcmVtYWlucyBjcmlzcCBhbmQgaXMgZWFzeSB0byB3YXNoLiAgICDvgrcgVGVyeWxlbmUgaXMgYSBwb3B1bGFyIHBvbHllc3Rlci4gSXQgY2FuIGJlICAgZHJhd24gaW50byB2ZXJ5IGZpbmUgZmlicmVzIHRoYXQgY2FuIGJlICAgd292ZW4gbGlrZSBhbnkgb3RoZXIgeWFybi4gICDvgrcgUEVUIChwb2x5ZXRoeWxlbmUgdGVyZXBodGhhbGF0ZSkgaXMgYSB2ZXJ5ICAgZmFtaWxpYXIgZm9ybSBvZiBwb2x5ZXN0ZXIuIEl0IGlzIHVzZWQgZm9yICAgbWFraW5nIGJvdHRsZXMsIHV0ZW5zaWxzLCBmaWxtcywgd2lyZXMgYW5kICAgbWFueSBvdGhlciB1c2VmdWwgcHJvZHVjdHMuICAg74K3IFBvbHllc3RlciBpcyBhY3R1YWxseSBtYWRlIHVwIG9mIHRoZSAgIHJlcGVhdGluZyB1bml0cyBvZiBhIGNoZW1pY2FsIGNhbGxlZCBhbiAgIGVzdGVyLiBFc3RlcnMgYXJlIHRoZSBjaGVtaWNhbHMgd2hpY2ggZ2l2ZSAgIGZydWl0cyB0aGVpciBzbWVsbC4gICAg74K3IFBvbHljb3QgaXMgYSBtaXh0dXJlIG9mIHBvbHllc3RlciBhbmQgICBjb3R0b24uICAgIO+CtyBQb2x5d29vbCBpcyBhIG1peHR1cmUgb2YgcG9seWVzdGVyIGFuZCAgIHdvb2wuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2hlc2MxICA9My0xOCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Rayon ",
        "option2" : " Linen  ",
        "option3" : "  Acrylic ",
        "option4" : "  Nylon   "
      }
    },
    {
      "index" : 19,
      "question" : " With reference to vegetative  propagation, which of the following  statements is/are incorrect?  1.  This method allows plants to bear  the flowers earlier than those  produced from seeds.  2.  It cannot produce plants  genetically similar to the parent  plant.  3.  It can propagate plants that have  lost the capacity to produce seeds.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFRoZXJlIGFyZSBtYW55IHBsYW50cyBpbiB3aGljaCBwYXJ0cyBsaWtlICAgdGhlIHJvb3QsIHN0ZW0gYW5kIGxlYXZlcyBkZXZlbG9wIGludG8gbmV3ICAgcGxhbnRzIHVuZGVyIGFwcHJvcHJpYXRlIGNvbmRpdGlvbnMuIFVubGlrZSAgIGluIG1vc3QgYW5pbWFscywgcGxhbnRzIGNhbiBpbmRlZWQgdXNlIHN1Y2ggICBhIG1vZGUgZm9yIHJlcHJvZHVjdGlvbi4gICAgVGhpcyBwcm9wZXJ0eSBvZiB2ZWdldGF0aXZlIHByb3BhZ2F0aW9uIGlzICAgdXNlZCBpbiBtZXRob2RzIHN1Y2ggYXMgbGF5ZXJpbmcgb3IgZ3JhZnRpbmcgICB0byBncm93IG1hbnkgcGxhbnRzIGxpa2Ugc3VnYXJjYW5lLCByb3NlcywgICBvciBncmFwZXMgZm9yIGFncmljdWx0dXJhbCBwdXJwb3Nlcy4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUGxhbnRzIHJhaXNlZCBieSAgIHZlZ2V0YXRpdmUgcHJvcGFnYXRpb24gY2FuIGJlYXIgZmxvd2VycyAgIGFuZCBmcnVpdHMgZWFybGllciB0aGFuIHRob3NlIHByb2R1Y2VkICAgZnJvbSBzZWVkcy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBBbm90aGVyICAgYWR2YW50YWdlIG9mIHZlZ2V0YXRpdmUgcHJvcGFnYXRpb24gaXMgICB0aGF0IGFsbCBwbGFudHMgcHJvZHVjZWQgYXJlIGdlbmV0aWNhbGx5ICAgc2ltaWxhciBlbm91Z2ggdG8gdGhlIHBhcmVudCBwbGFudCB0byAgIGhhdmUgYWxsIGl0cyBjaGFyYWN0ZXJpc3RpY3MuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogIFN1Y2ggbWV0aG9kcyAgIGFsc28gbWFrZSBwb3NzaWJsZSB0aGUgcHJvcGFnYXRpb24gb2YgICBwbGFudHMgc3VjaCBhcyBzdWNoIGFzIGJhbmFuYSwgb3JhbmdlLCAgIHJvc2UgYW5kIGphc21pbmUgdGhhdCBoYXZlIGxvc3QgdGhlICAgY2FwYWNpdHkgdG8gcHJvZHVjZSBzZWVkcy4gICBYLUZhY3RvcjogICBUaXNzdWUgY3VsdHVyZTogICDvgrcgSW4gdGlzc3VlIGN1bHR1cmUsIG5ldyBwbGFudHMgYXJlIGdyb3duIGJ5ICAgcmVtb3ZpbmcgdGlzc3VlIG9yIHNlcGFyYXRpbmcgY2VsbHMgZnJvbSAgIHRoZSBncm93aW5nIHRpcCBvZiBhIHBsYW50LiAgICDvgrcgVGhlIGNlbGxzIGFyZSB0aGVuIHBsYWNlZCBpbiBhbiBhcnRpZmljaWFsICAgbWVkaXVtIHdoZXJlIHRoZXkgZGl2aWRlIHJhcGlkbHkgdG8gZm9ybSAgIGEgc21hbGwgZ3JvdXAgb2YgY2VsbHMgb3IgY2FsbHVzLiAgICDvgrcgVGhlIGNhbGx1cyBpcyB0cmFuc2ZlcnJlZCB0byBhbm90aGVyICAgbWVkaXVtIGNvbnRhaW5pbmcgaG9ybW9uZXMgZm9yIGdyb3d0aCAgIGFuZCBkaWZmZXJlbnRpYXRpb24uICAgIO+CtyBUaGUgcGxhbnRsZXRzIGFyZSB0aGVuIHBsYWNlZCBpbiB0aGUgc29pbCAgIHNvIHRoYXQgdGhleSBjYW4gZ3JvdyBpbnRvIG1hdHVyZSBwbGFudHMuICAg74K3IFVzaW5nIHRpc3N1ZSBjdWx0dXJlLCBtYW55IHBsYW50cyBjYW4gYmUgICBncm93biBmcm9tIG9uZSBwYXJlbnQgaW4gZGlzZWFzZS1mcmVlICAgY29uZGl0aW9ucy4gVGhpcyB0ZWNobmlxdWUgaXMgY29tbW9ubHkgICB1c2VkIGZvciBvcm5hbWVudGFsIHBsYW50cy4gICBTb3VyY2U6ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/amVzYzEgID04LTE2ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 20,
      "question" : " Consider the following pairs:   Petroleum  constituents  Uses  1. Petrol Solvent for  Dry cleaning  2. Parafin wax Road  surfacing  3. Bitumen Aviation fuel  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogICAgIFgtRmFjdG9yOiAgIEh5ZHJvZ2VuOiBmdWVsIG9mIHRoZSBmdXR1cmUgICDvgrcgSW5kaWEgaXMgY29tbWl0dGVkIHRvIHRoZSAyMDE1IFBhcmlzICAgY2xpbWF0ZSBhZ3JlZW1lbnQgdG8gbG93ZXIgaXRzIGVuZXJneSAgIGludGVuc2l0eSAoMzAtMzUgcGVyIGNlbnQgcmVkdWN0aW9uIGZyb20gICAyMDA1IGxldmVscykgYW5kIGdlbmVyYXRlIDQwIHBlciBjZW50ICAgZWxlY3RyaWNpdHkgZnJvbSBub24tZm9zc2lsIGZ1ZWwgc291cmNlcyBieSAgIDIwMzAuICAgIO+CtyBUaGUgZ292ZXJubWVudCBpcyBmb2N1c2VkIG9uIGluY3JlYXNpbmcgICBlbGVjdHJpY2l0eSBwcm9kdWN0aW9uIGJ5IFNvbGFyICAgZXhwb25lbnRpYWxseS4gICAg74K3IEdyZXkgSHlkcm9nZW4gaXMgcHJvZHVjZWQgZnJvbSBmb3NzaWwgICBmdWVscy4gICAg74K3IEdyZXkgaHlkcm9nZW4gaXMgcHJpbWFyaWx5IHVzZWQgaW4gICBwZXRyb2xldW0gcmVmaW5pbmcsIHRoZSBtYW51ZmFjdHVyZSBvZiAgIEFtbW9uaWEgZm9yIG1ha2luZyBGZXJ0aWxpemVycyBhbmQgICBNZXRoYW5vbCBwcm9kdWN0aW9uLiAgICDvgrcgQmx1ZSBIeWRyb2dlbiBpcyBwcm9kdWNlZCBmcm9tIGZvc3NpbCAgIGZ1ZWxzLCBleGNlcHQgdGhlIENhcmJvbiBpcyBjYXB0dXJlZCAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMiAgNiAgIHVzaW5nIENDVVMgKENhcmJvbiBjYXB0dXJlLCB1dGlsaXphdGlvbiwgICBhbmQgc3RvcmFnZSkgdGVjaG5vbG9naWVzLiAgICDvgrcgR3JlZW4gSHlkcm9nZW4gY2FuIGJlIHByb2R1Y2VkIGZyb20gICBlbGVjdHJvbHlzaXMgb2Ygd2F0ZXIgdGhhdCB1c2VzIHBvd2VyIGZyb20gICByZW5ld2FibGUgc291cmNlcyBsaWtlIHdpbmQgYW5kIFNvbGFyLiAgICDvgrcgSXQgY2FuIGFsc28gYmUgcHJvZHVjZWQgZnJvbSBiaW9tYXNzICAgdGhyb3VnaCB0aGVybW9jaGVtaWNhbCwgYmlvY2hlbWljYWwsICAgYW5kIHN1c3RhaW5hYmxlIG1vZGVscy4gICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2hlc2MxPTUgIC0xOCAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktICB0ZWNoL2VuZXJneS1hbmQtZW52aXJvbm1lbnQvZ3JlZW4tICBoeWRyb2dlbi1mdWVsLW9mLXRoZS0gIGZ1dHVyZS9hcnRpY2xlNjU0NjMwOTguZWNlICAgaHR0cHM6Ly9lbmVyZ3kuZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmMgIG9tL25ld3MvcmVuZXdhYmxlL2h5ZHJvZ2VuLXRoZS1ncmVlbi0gIGZ1ZWwtZm9yLWluZGlhcy1lY29ub21pYy1ncm93dGgvODk2Mzg2MDYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Only one pair  ",
        "option2" : "  Only two pairs  ",
        "option3" : "  All three pairs  ",
        "option4" : "  None of the pairs   "
      }
    },
    {
      "index" : 21,
      "question" : " With reference to role of Artificial  Intelligence (AI) in agriculture,  consider the following statement:  1.  It can detect weed affected areas  to precisely spray herbicides  preventing over use of herbicides.  2.  It can monitor soil defects on a  real time basis but not the soil  nutrient deficiency.  3.  Its predictive insights can help  farmers reduce impact by  weather.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogICAgUm9sZSBvZiBBSSBpbiBBZ3JpY3VsdHVyZSBpbiBJbmRpYTogICDvgrcgT3V0cHV0IHlpZWxkIGVzdGltYXRlcyBhbmQgcHJpY2UgICBmb3JlY2FzdHMgd2lsbCBoZWxwIGZhcm1lcnMgb2J0YWluICAgbWF4aW11bSBwcm9maXRzLiAgIO+CtyBBbCBzZW5zb3JzIGNhbiBkZXRlY3Qgd2VlZCBhZmZlY3RlZCAgIGFyZWFzIHRvIHByZWNpc2VseSBzcHJheSBoZXJiaWNpZGVzICAgcHJldmVudGluZyBvdmVyIG9yIHVuZGVyLXVzZSBvZiAgIGhlcmJpY2lkZXMuICAg74K3IEFsIGFuZCBNYWNoaW5lIGxlYXJuaW5nIGNhbiBoZWxwICAgbW9uaXRvciBjcm9wIGhlYWx0aCwgZGlhZ25vc2UgICBwZXN0L3NvaWwgZGVmZWN0cyBhbmQgbnV0cmllbnQgICBkZWZpY2llbmN5IG9uIGEgcmVhbCB0aW1lIGFuZCBwcmVkaWN0aXZlICAgYmFzaXMgYWlkaW5nIGZhcm1lcnMgb2J0YWluIGhpZ2hlciB5aWVsZHMuICAgIO+CtyBBSSBiYXNlZCBzb2x1dGlvbnMgdHJhaW5lZCBvbiBwcmlvciBpbmZvICYgICBjbGFzc2lmaWNhdGlvbiBvZiBwbGFudCBkaXNlYXNlcyBjYW4gaGVscCAgIGNvbnRyb2wgZGlzZWFzZXMuICAg74K3IFByZWRpY3RpdmUgaW5zaWdodHMgc3VjaCBhcyB0aW1pbmcgZm9yICAgc293aW5nIGZvciBtYXhpbXVtIHByb2R1Y3Rpdml0eSBjYW4gICBoZWxwIGZhcm1lcnMgcmVkdWNlIGltcGFjdCBieSB3ZWF0aGVyICAgdGh1cyBhaWQgZ29hbCBvZiBkb3VibGluZyBmYXJtZXIncyBpbmNvbWUuICAg74K3IEFsLWRyaXZlbiByb2JvdHMgY2FuIGJlIHVzZWQgdG8gaGFydmVzdCAgIGh1Z2Ugdm9sdW1lcyBmYXN0ZXIsIGNhbiBiZSB0cmFpbmVkIG9uICAgZGF0YSBmb3Igc3BlY2lmaWMgY3JvcCB2YXJpZXR5LCB3ZWF0aGVyICAgY29uZGl0aW9uIGFuZCBsb2NhdGlvbiBpbiBvcmRlciB0byByZWR1Y2UgICB0aGUgd2FzdGFnZS4gICBYLUZhY3RvcjogICDvgrcgU21hcnQgZmFybWluZyBtZXRob2RzIGludm9sdmVzIHRoZSB1c2UgICBvZiB0ZWNobm9sb2d5IGFuZCBpbm5vdmF0aW9uIGluIHRoZSAgIGFncmljdWx0dXJlIHNlY3RvciBpbiB0aGUgY291bnRyeS4gICDvgrcgVW5kZXIgdGhlIE5lR1BBIHByb2dyYW1tZSBmdW5kaW5nIGlzICAgZ2l2ZW4gdG8gU3RhdGUgR292ZXJubWVudHMgZm9yIERpZ2l0YWwgICBBZ3JpY3VsdHVyZSBwcm9qZWN0cyB1c2luZyBlbWVyZ2luZyAgIHRlY2hub2xvZ2llcyBsaWtlIEFydGlmaWNpYWwgSW50ZWxsaWdlbmNlICAgYW5kIE1hY2hpbmUgTGVhcm5pbmcgKEFJL01MKSwgSW50ZXJuZXQgICBvZiBUaGluZ3MgKElPVCksIEJsb2NrIGNoYWluIGV0Yy4gICDvgrcgVG8gcHJvbW90ZSBzbWFydCBmYXJtaW5nLCB0aGUgICBHb3Zlcm5tZW50IHByb21vdGVzIFN0YXJ0dXBzIGluIHRoZSAgIEFncmljdWx0dXJlIHNlY3RvciBhbmQgbnVydHVyZXMgYWdyaS0gIGVudHJlcHJlbmV1cnMuICAg74K3IFRoZSBGYXJtZXIgRklSU1QgKEZhcm0sIElubm92YXRpb25zLCAgIFJlc291cmNlcywgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSkgICBpbml0aWF0aXZlIHdhcyBsYXVuY2hlZCBkdXJpbmcgdGhpcyAgIHBlcmlvZCBieSBJQ0FSIHdpdGggZW5oYW5jZWQgZmFybWVycy0gIHNjaWVudGlzdHMgaW50ZXJmYWNlIHRvIG1vdmUgYmV5b25kICAgcHJvZHVjdGlvbiBhbmQgcHJvZHVjdGl2aXR5LiAgIFNvdXJjZTogICAgc3BlY2lhbC9zb3dpbmctdGhlLWFpLXNlZWQtZm9yLWludGVsbGlnZW50LSAgZmFybWluZy9hcnRpY2xlc2hvdy85MzI2MTgzNS5jbXMgICAgaHR0cHM6Ly93d3cucGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmEgIHNweD9QUklEPTE4NDg3MjAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  1 only  ",
        "option3" : "   2 and 3  ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 22,
      "question" : " With reference to the Nucleic acid  vaccines, consider the following  statements:  1.  They use genetic material of a  pathogenic microbe.  2.  DNA and RNA both can be used as  a genetic material for these  vaccines.  Which of the statements given above  is/are correct?  TEST - 9008 ( )   www. t.me/ Pa g5 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE51Y2xlaWMgYWNpZCAgIHZhY2NpbmVzIHVzZSBnZW5ldGljIG1hdGVyaWFsIGZyb20gYSAgIGRpc2Vhc2UtY2F1c2luZyB2aXJ1cyBvciBiYWN0ZXJpdW0gKGEgICBwYXRob2dlbikgdG8gc3RpbXVsYXRlIGFuIGltbXVuZSByZXNwb25zZSAgIGFnYWluc3QgaXQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IERlcGVuZGluZyBvbiB0aGUgICB2YWNjaW5lLCB0aGUgZ2VuZXRpYyBtYXRlcmlhbCBjb3VsZCBiZSAgIEROQSBvciBSTkE7IGluIGJvdGggY2FzZXMgaXQgcHJvdmlkZXMgdGhlICAgaW5zdHJ1Y3Rpb25zIGZvciBtYWtpbmcgYSBzcGVjaWZpYyBwcm90ZWluICAgZnJvbSB0aGUgcGF0aG9nZW4sIHdoaWNoIHRoZSBpbW11bmUgICBzeXN0ZW0gd2lsbCByZWNvZ25pc2UgYXMgZm9yZWlnbiAoYW4gYW50aWdlbikuICAgT25jZSBpbnNlcnRlZCBpbnRvIGhvc3QgY2VsbHMsIHRoaXMgZ2VuZXRpYyAgIG1hdGVyaWFsIGlzIHJlYWQgYnkgdGhlIGNlbGwncyBvd24gcHJvdGVpbi0gIG1ha2luZyBtYWNoaW5lcnkgYW5kIHVzZWQgdG8gbWFudWZhY3R1cmUgICBhbnRpZ2Vucywgd2hpY2ggdGhlbiB0cmlnZ2VyIGFuIGltbXVuZSAgIHJlc3BvbnNlLiAgIE51Y2xlaWMgYWNpZCB2YWNjaW5lcyBoYXZlIGJlZW4gc2hvd24gdG8gICBlbGljaXQgYm90aCBhbnRpYm9keSBhbmQgY3l0b3RveGljIFQtICBseW1waG9jeXRlIHJlc3BvbnNlcyB0byBkaXZlcnNlIHByb3RlaW4gICBhbnRpZ2Vucy4gICBBZHZhbnRhZ2VzIG9mIG51Y2xlaWMgYWNpZC1iYXNlZCAgIHZhY2NpbmVzIGluY2x1ZGUgdGhlIHNpbXBsaWNpdHkgb2YgdGhlICAgdmVjdG9yLCB0aGUgZWFzZSBvZiBkZWxpdmVyeSwgdGhlIGR1cmF0aW9uIG9mICAgZXhwcmVzc2lvbiwgYW5kLCB0byBkYXRlLCB0aGUgbGFjayBvZiBldmlkZW5jZSAgIG9mIGludGVncmF0aW9uLiAgIFRoaXMgaXMgYSByZWxhdGl2ZWx5IG5ldyB0ZWNobm9sb2d5LCBzbyAgIGFsdGhvdWdoIEROQSBhbmQgUk5BIHZhY2NpbmVzIGFyZSBiZWluZyAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMiAgNyAgIGRldmVsb3BlZCBhZ2FpbnN0IHZhcmlvdXMgZGlzZWFzZXMsICAgaW5jbHVkaW5nIEhJViwgWmlrYSB2aXJ1cyBhbmQgQ09WSUQtMTksIHNvICAgZmFyIG5vbmUgb2YgdGhlbSBoYXZlIHlldCBiZWVuIGFwcHJvdmVkIGZvciAgIGh1bWFuIHVzZS4gU2V2ZXJhbCBETkEgdmFjY2luZXMgYXJlICAgbGljZW5jZWQgZm9yIGFuaW1hbCB1c2UsIGluY2x1ZGluZyBhIGhvcnNlICAgdmFjY2luZSBhZ2FpbnN0IFdlc3QgTmlsZSB2aXJ1cy4gICBYLUZhY3RvcjogICAgRGlzYWR2YW50YWdlcyBvZiB0aGVzZSB2YWNjaW5lcyAgIG8gU29tZSBSTkEgdmFjY2luZXMgcmVxdWlyZSB1bHRyYS1jb2xkICAgc3RvcmFnZSAgIG8gTmV2ZXIgYmVlbiBsaWNlbnNlZCBpbiBodW1hbnMgICBvIEJvb3N0ZXIgc2hvdHMgbWF5IGJlIHJlcXVpcmVkICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcG1jL2FydGkgIGNsZXMvUE1DMTc0NjMyLyAgIGh0dHBzOi8vd3d3Lmdhdmkub3JnL3ZhY2NpbmVzd29yay93aGF0LSAgYXJlLW51Y2xlaWMtYWNpZC12YWNjaW5lcy1hbmQtaG93LWNvdWxkLSAgdGhleS1iZS11c2VkLWFnYWluc3QtY292aWQtMTkgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "   Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 23,
      "question" : " With reference to biofuels, consider the  following statements:  1.  Ethanol is used as a blending  agent with gasoline to cut down  the emission of carbon monoxide.  2.  Biomass cannot be converted  directly into liquid fuels.  3.  Biodiesel can be produced by  combining alcohol with vegetable  oil.   Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEV0aGFub2wgKENIM0NIMk9IKSBpcyBhIHJlbmV3YWJsZSBmdWVsICAgdGhhdCBjYW4gYmUgbWFkZSBmcm9tIHZhcmlvdXMgcGxhbnQgICBtYXRlcmlhbHMsIGNvbGxlY3RpdmVseSBrbm93biBhcyAnYmlvbWFzcy4nICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEV0aGFub2wgaXMgYW4gICBhbGNvaG9sIHVzZWQgYXMgYSBibGVuZGluZyBhZ2VudCB3aXRoICAgZ2Fzb2xpbmUgdG8gaW5jcmVhc2Ugb2N0YW5lIGFuZCBjdXQgZG93biAgIGNhcmJvbiBtb25veGlkZSBhbmQgb3RoZXIgc21vZy1jYXVzaW5nICAgZW1pc3Npb25zLiAgIFRoZSBtb3N0IGNvbW1vbiBibGVuZCBvZiBldGhhbm9sIGlzIEUxMCAgICgxMCUgZXRoYW5vbCwgOTAlIGdhc29saW5lKSBhbmQgaXMgYXBwcm92ZWQgICBmb3IgdXNlIGluIG1vc3QgY29udmVudGlvbmFsIGdhc29saW5lLSAgcG93ZXJlZCB2ZWhpY2xlcyB1cCB0byBFMTUgKDE1JSBldGhhbm9sLCAgIDg1JSBnYXNvbGluZSkuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVW5saWtlIG90aGVyICAgcmVuZXdhYmxlIGVuZXJneSBzb3VyY2VzLCBiaW9tYXNzIGNhbiBiZSAgIGNvbnZlcnRlZCBkaXJlY3RseSBpbnRvIGxpcXVpZCBmdWVscywgY2FsbGVkICAgImJpb2Z1ZWxzLCIgdG8gaGVscCBtZWV0IHRyYW5zcG9ydGF0aW9uIGZ1ZWwgICBuZWVkcy4gVGhlIHR3byBtb3N0IGNvbW1vbiB0eXBlcyBvZiAgIGJpb2Z1ZWxzIGluIHVzZSB0b2RheSBhcmUgZXRoYW5vbCBhbmQgICBiaW9kaWVzZWwsIGJvdGggb2Ygd2hpY2ggcmVwcmVzZW50IHRoZSBmaXJzdCAgIGdlbmVyYXRpb24gb2YgYmlvZnVlbCB0ZWNobm9sb2d5LiAgIEJpb2RpZXNlbCBpcyBhIGxpcXVpZCBmdWVsIHByb2R1Y2VkIGZyb20gICByZW5ld2FibGUgc291cmNlcywgc3VjaCBhcyBuZXcgYW5kIHVzZWQgICB2ZWdldGFibGUgb2lscyBhbmQgYW5pbWFsIGZhdHMgYW5kIGlzIGEgICBjbGVhbmVyLWJ1cm5pbmcgcmVwbGFjZW1lbnQgZm9yIHBldHJvbGV1bS0gIGJhc2VkIGRpZXNlbCBmdWVsLiBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiAgIEJpb2RpZXNlbCBpcyBub250b3hpYyBhbmQgYmlvZGVncmFkYWJsZSAgIGFuZCBpcyBwcm9kdWNlZCBieSBjb21iaW5pbmcgYWxjb2hvbCAgIHdpdGggdmVnZXRhYmxlIG9pbCwgYW5pbWFsIGZhdCwgb3IgcmVjeWNsZWQgICBjb29raW5nIGdyZWFzZS4gICBYLUZhY3RvcjogICAgIFBsdWctaW4gSHlicmlkIEVsZWN0cmljIFZlaGljbGUgKFBIRVYpOiAgICBvIFRoZSBQSEVWcyBhcmUgYWxzbyBrbm93biBhcyBzZXJpZXMgICBoeWJyaWRzLiBUaGV5IGhhdmUgYm90aCBlbmdpbmUgYW5kIGEgICBtb3Rvci4gT25lIGNhbiBjaG9vc2UgYW1vbmcgdGhlIGZ1ZWxzLCAgIGNvbnZlbnRpb25hbCBmdWVsIChzdWNoIGFzIHBldHJvbCkgb3IgICBhbHRlcm5hdGl2ZSBmdWVsIChzdWNoIGFzIGJpby1kaWVzZWwpLiAgICBvIFBIRVZzIHN0YXJ0LXVwIGluIGFsbC1lbGVjdHJpYyBtb2RlIGFuZCAgIG1ha2UgdXNlIG9mIGVsZWN0cmljaXR5IHVudGlsIHRoZWlyIGJhdHRlcnkgICBwYWNrIGlzIGRlcGxldGVkLiAgICBvIE9uY2UgdGhlIGJhdHRlcnkgZ2V0cyBkcmFpbmVkLCB0aGUgZW5naW5lICAgdGFrZXMgb3ZlciwgYW5kIHRoZSB2ZWhpY2xlIG9wZXJhdGVzIGFzIGEgICBjb252ZW50aW9uYWwsIG5vbi1wbHVnLWluIGh5YnJpZC4gICAgbyBQSEVWcyBjYW4gYmUgY2hhcmdlZCBieSBwbHVnZ2luZyBpbnRvICAgYW4gb3V0c2lkZSBlbGVjdHJpYyBwb3dlciBzb3VyY2UsIGVuZ2luZSwgICBvciByZWdlbmVyYXRpdmUgYnJha2luZy4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cuZW5lcmd5Lmdvdi9lZXJlL2Jpb2VuZXJneS9iaSAgb2Z1ZWwtYmFzaWNzICAgaHR0cHM6Ly9lLWFtcml0Lm5pdGkuZ292LmluIHlwZXMtb2YtICBlbGVjdHJpYy12ZWhpY2xlcyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 24,
      "question" : " The term 'Alpha Fold', sometimes seen  in the news in the context of which of  the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICDvgrcgQWxwaGFGb2xkIGlzIGFuIEFJLWJhc2VkIHByb3RlaW4gICBzdHJ1Y3R1cmUgcHJlZGljdGlvbiB0b29sLiAgICDvgrcgSXQgaXMgYmFzZWQgb24gYSBjb21wdXRlciBzeXN0ZW0gY2FsbGVkICAgZGVlcCBuZXVyYWwgbmV0d29yay4gSW5zcGlyZWQgYnkgdGhlICAgaHVtYW4gYnJhaW4sIG5ldXJhbCBuZXR3b3JrcyB1c2UgYSAgIGxhcmdlIGFtb3VudCBvZiBpbnB1dCBkYXRhIGFuZCBwcm92aWRlcyAgIHRoZSBkZXNpcmVkIG91dHB1dCBleGFjdGx5IGxpa2UgaG93IGEgICBodW1hbiBicmFpbiB3b3VsZC4gICAg74K3IFRoZSByZWFsIHdvcmsgaXMgZG9uZSBieSB0aGUgYmxhY2sgYm94ICAgYmV0d2VlbiB0aGUgaW5wdXQgYW5kIHRoZSBvdXRwdXQgbGF5ZXJzLCAgIGNhbGxlZCB0aGUgaGlkZGVuIG5ldHdvcmtzLiAgICDvgrcgQWxwaGFGb2xkIGlzIGZlZCB3aXRoIHByb3RlaW4gc2VxdWVuY2VzICAgYXMgaW5wdXQuIFdoZW4gcHJvdGVpbiBzZXF1ZW5jZXMgZW50ZXIgICB0aHJvdWdoIG9uZSBlbmQsIHRoZSBwcmVkaWN0ZWQgdGhyZWUtICBkaW1lbnNpb25hbCBzdHJ1Y3R1cmVzIGNvbWUgb3V0IHRocm91Z2ggICB0aGUgb3RoZXIuICAgIFgtZmFjdG9yOiAgIO+CtyBDdXJyZW50bHksIHRoZXJlIGFyZSBvdmVyIDIwMCBtaWxsaW9uICAga25vd24gcHJvdGVpbnMsIHdpdGggbWFueSBtb3JlIGZvdW5kICAgZXZlcnkgeWVhci4gRWFjaCBvbmUgaGFzIGEgdW5pcXVlIDNEICAgc2hhcGUgdGhhdCBkZXRlcm1pbmVzIGhvdyBpdCB3b3JrcyBhbmQgICB3aGF0IGl0IGRvZXMuICAgIO+CtyBUaGUgZGV2ZWxvcG1lbnQgb2YgQWxwaGFGb2xkIGlzIGEgICB3YXRlcnNoZWQgbW92ZW1lbnQgaW4gc2NpZW5jZSBhbmQgICBzdHJ1Y3R1cmFsIGJpb2xvZ3kgaW4gcGFydGljdWxhci4gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzIgIDggICDvgrcgQWxwaGFGb2xkIGhhcyBoZWxwZWQgaHVuZHJlZHMgb2YgICBzY2llbnRpc3RzIGFjY2VsZXJhdGUgdGhlaXIgZGlzY292ZXJpZXMgaW4gICB2YWNjaW5lIGFuZCBkcnVnIGRldmVsb3BtZW50LiAgIO+CtyBBbHBoYUZvbGQgY2FuIGFjY3VyYXRlbHkgcHJlZGljdCAzRCAgIG1vZGVscyBvZiBwcm90ZWluIHN0cnVjdHVyZXMgYW5kIGlzICAgYWNjZWxlcmF0aW5nIHJlc2VhcmNoIGluIG5lYXJseSBldmVyeSBmaWVsZCAgIG9mIGJpb2xvZ3kuICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLSAgdGVjaC9zY2llbmNlL2V4cGxhaW5lZC1hbHBoYWZvbGQtYS10b3VyLSAgZGUtZm9yY2UtaW4tc2NpZW5jZS9hcnRpY2xlNjU3MTA4OTAuZWNlICAgIGh0dHBzOi8vd3d3LmRlZXBtaW5kLmNvbS9yZXNlYXJjaC9oaWdoICBsaWdodGVkLXJlc2VhcmNoL2FscGhhZm9sZCAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  AI based product created by the   Google to have real time location   sharing with street view mapping.  ",
        "option2" : "  Warp created in space and time   due collision of two black holes.  ",
        "option3" : "  Dark area of Universe generating   huge fluxes of Alpha rays.  ",
        "option4" : "  AI-based protein structure   prediction tool.   "
      }
    },
    {
      "index" : 25,
      "question" : " Consider the following statements  regarding hydrogen fuel:   1.  It has zero tailpipe emissions.  2.  It provides a lower drive range to  the vehicles.  3.  Hydrogen can be produced from  water through electrolysis.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBIeWRyb2dlbiBpcyAgIGtub3duIHRvIGJlIHRoZSBjbGVhbmVzdCBmdWVsIHVzZWQgZm9yICAgcG93ZXJpbmcgdmVoaWNsZXMgYXMgaXQgaGFzIHplcm8gdGFpbHBpcGUgICBlbWlzc2lvbnMuIEh5ZHJvZ2VuIGlzIGFidW5kYW50IGluIG91ciAgIGVudmlyb25tZW50LiBJdCdzIHN0b3JlZCBpbiB3YXRlciAoSDJPKSwgICBoeWRyb2NhcmJvbnMgKHN1Y2ggYXMgbWV0aGFuZSwgQ0g0KSwgYW5kICAgb3RoZXIgb3JnYW5pYyBtYXR0ZXIuIE9uZSBjaGFsbGVuZ2Ugb2YgdXNpbmcgICBoeWRyb2dlbiBhcyBhIGZ1ZWwgaXMgZWZmaWNpZW50bHkgZXh0cmFjdGluZyBpdCAgIGZyb20gdGhlc2UgY29tcG91bmRzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSHlkcm9nZW4gY2FuICAgYmUgYSBwcmFjdGljYWwgb3B0aW9uIGZvciBsb25nLWRpc3RhbmNlICAgdmVoaWNsZXMgYmVjYXVzZSBvZiBpdHMgbGlnaHQgd2VpZ2h0IGFuZCAgIGhpZ2ggZW5lcmd5LiBIeWRyb2dlbi1wb3dlcmVkIHZlaGljbGVzICAgaGF2ZSBhIGhpZ2hlciBkcml2ZSByYW5nZS4gVGhleSBjb25zdW1lICAgNTAgcGVyY2VudCBsZXNzIGZ1ZWwgdGhhbiBjb252ZW50aW9uYWwgZnVlbHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSHlkcm9nZW4gY2FuIGJlICAgcHJvZHVjZWQgZnJvbSB3YXRlciB0aHJvdWdoICAgZWxlY3Ryb2x5c2lzLiBUaGVyZSBhcmUgb3RoZXIgd2F5cyBvZiBtYWtpbmcgICBoeWRyb2dlbiAtIGJ5IHNwbGl0dGluZyB3YXRlciAoZWxlY3Ryb2x5c2lzKSwgICByZWZvcm1pbmcgbWV0aGFub2wgYW5kIGFtbW9uaWEsIGFuZCAgIHVzaW5nIG1pY3JvYmVzIHRvIGNvbnZlcnQgYmlvbWFzcyBpbnRvIHRoZSAgIGdhcyBidXQgdGhlc2UgdGVjaG5vbG9naWVzIGFyZSBuZWl0aGVyICAgbWF0dXJlIG5vciBjaGVhcC4gICAgWC1GYWN0b3I6ICAg74K3IEdyZWVuIGh5ZHJvZ2VuIGlzIHByb2R1Y2VkIGJ5IHNwbGl0dGluZyAgIHdhdGVyIHVzaW5nIGVsZWN0cmljaXR5IGdlbmVyYXRlZCBmcm9tICAgc29sYXIgcGFuZWxzIG9yIHRocm91Z2ggd2luZCB0dXJiaW5lcy4gICBXaGVuIHByb2R1Y2VkIHVzaW5nIGZvc3NpbCBmdWVscywgaXQgaXMgbm90ICAgY2xhc3NpZmllZCBhcyBncmVlbiBoeWRyb2dlbi4gICDvgrcgR3JleSBoeWRyb2dlbiBjb21lcyBmcm9tIHRoZSBzdGVhbSAgIG1ldGhhbmUgcmVmb3JtaW5nIChTTVIpIHJvdXRlIGJ1dCBTTVIgICBhbHNvIHByb2R1Y2VzIGNhcmJvbiBkaW94aWRlLiAgICDvgrcgRWxlY3Ryb2x5c2lzIGlzIGFuIGluZWZmaWNpZW50IHJvdXRlIC0gaXQgICB0YWtlcyBtdWNoIGVuZXJneSB0byBicmVhayB0aGUgdGlnaHQgICBib25kIGJldHdlZW4gaHlkcm9nZW4gYW5kIG94eWdlbiAgIGF0b21zLiBQdWxsaW5nIGh5ZHJvZ2VuIGF0b21zIG91dCBvZiAgIGNhcmJvbi1oeWRyb2dlbiBjb21wb3VuZHMgb2YgbmF0dXJhbCAgIGdhcyBvciBiaW9nYXMgbmVlZHMgbGVzc2VyIGVuZXJneS4gICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1YnVzaW5lc3NsaW5lLmNvbS9lYyAgb25vbXkvZ3JlZW4taHlkcm9nZW4taXMtdGhlLWZ1ZWwtb2YtdGhlLSAgZnV0dXJlLXNheXMtZ2Fka2FyaS9hcnRpY2xlMzgxMTc0NDAuZWNlICAgaHR0cHM6Ly9hZmRjLmVuZXJneS5nb3YvZnVlbHMvaHlkcm9nZW5fYmEgIHNpY3MuaHRtbCAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1YnVzaW5lc3NsaW5lLmNvbS9idSAgc2luZXNzLXRlY2gvaHlkcm9nZW4tbWlzc2lvbi10aHJpY2UtYXMtICBuaWNlL2FydGljbGU2MjE4MDcwMi5lY2UgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only   ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 26,
      "question" : " Lycopene, Lutein and zeaxanthin are  the example of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogICBDYXJvdGVub2lkcyBhcmUgcGlnbWVudHMgaW4gcGxhbnRzIHRoYXQgYXJlICAgcmVzcG9uc2libGUgZm9yIHRoZSBicmlnaHQtY29sb3JlZCBodWVzIG9mICAgdmVnZXRhYmxlcyBhbmQgZnJ1aXRzLiBUaGVyZSBhcmUgbW9yZSB0aGFuICAgNjAwIGNhcm90ZW5vaWRzLCBhbmQgdGhleSBtdXN0IGJlICAgY29uc3VtZWQgdGhyb3VnaCBmb29kcyBhbmQgc291cmNlcyBvZiBmYXQuICAgU29tZSBjb21tb24gdHlwZXMgb2YgY2Fyb3Rlbm9pZHMgaW5jbHVkZTogICDvgrcgYWxwaGEtY2Fyb3RlbmUgICDvgrcgYmV0YS1jYXJvdGVuZSAgIO+CtyBiZXRhLWNyeXB0b3hhbnRoaW4gICDvgrcgbHV0ZWluICAg74K3IGx5Y29wZW5lICAg74K3IHplYXhhbnRoaW4gICBYLUZBQ1RPUiAgIO+CtyBSZXN2ZXJhdHJvbCBpcyBmb3VuZCBwcmVkb21pbmFudGx5IGluICAgZ3JhcGVzIC0gc3BlY2lmaWNhbGx5LCB0aGUgZ3JhcGUgc2tpbiAtICAgYW5kIHdpbmUuIFRoaXMgY29tcG91bmQgc3VwcG9ydHMgICBjYXJkaW92YXNjdWxhciBhbmQgY29nbml0aXZlIGhlYWx0aC4gICBSZXN2ZXJhdHJvbCBoYXMgYWxzbyBiZWVuIGFzc29jaWF0ZWQgd2l0aCAgIGluY3JlYXNlZCBjZXJlYnJhbCBibG9vZCBmbG93LiAgIO+CtyBGbGF2b25vaWRzIGFyZSBvbmUgb2YgdGhlIGxhcmdlc3QgZ3JvdXBzICAgb2YgcGh5dG9udXRyaWVudHMuIFRoaXMgY29tcG91bmQgaXMgcmljaCAgIGluIGFudGlveGlkYW50IHByb3BlcnRpZXMgYW5kIGFudGljYW5jZXIgICBhY3Rpdml0eS4gU29tZSBmb29kcyByaWNoIGluIGZsYXZvbm9pZCAgIGNvbXBvdW5kcyBhcmUgZ3JlZW4gdGVhIGFuZCBhcHBsZXMgICDvgrcgRWxsYWdpYyBhY2lkIGlzIGEgcGh5dG9jaGVtaWNhbCBrbm93biBmb3IgICByZWR1Y2luZyBjYW5jZXIgcmlzayBhbmQgbG93ZXJpbmcgICBjaG9sZXN0ZXJvbC4gRWxsYWdpYyBhY2lkIGhhcyBhbnRpb3hpZGFudCAgIGFuZCBhbnRpLWluZmxhbW1hdG9yeSBwcm9wZXJ0aWVzLiBUaGUgICBoaWdoZXN0IGxldmVscyBvZiBlbGxhZ2ljIGFjaWQgYXJlIHByZXNlbnQgICBpbiByYXNwYmVycmllcy4gT3RoZXIgZm9vZHMgcmljaCBpbiB0aGlzICAgY29tcG91bmQgaW5jbHVkZSBTdHJhd2JlcnJ5LiAgICBTb3VyY2U6ICAgICAgIGh0dHBzOi8vd3d3LmhlYWx0aGxpbmUuY29tL2hlYWx0aC9waHl0byAgbnV0cmllbnRzI3R5cGVzICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Carotenoids ",
        "option2" : "  Ellagic acid  ",
        "option3" : "  Resveratrol ",
        "option4" : "  Flavonois    "
      }
    },
    {
      "index" : 27,
      "question" : " Consider the following statements  about the term 'Astrobee' recently in  news:   1.  It is a drone built by NASA for  exploring asteroids outside solar  system.   2.  They can be remote controlled  from ground station on earth.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMiAgOSAgIEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQXN0cm9iZWUgaXMgICBOQVNBJ3MgbmV3IGZyZWUtZmx5aW5nIHJvYm90aWMgc3lzdGVtLiAgIFRoZXkgd2lsbCB3b3JrIGFzIHRlYW1tYXRlcyBhbG9uZ3NpZGUgICBhc3Ryb25hdXRzIG9uIHRoZSBJbnRlcm5hdGlvbmFsIFNwYWNlICAgU3RhdGlvbiBhbmQgd2lsbCBoZWxwIGFzdHJvbmF1dHMgcmVkdWNlICAgdGltZSB0aGV5IHNwZW5kIG9uIHJvdXRpbmUgZHV0aWVzLCBsZWF2aW5nICAgdGhlbSB0byBmb2N1cyBtb3JlIG9uIHRoZSB0aGluZ3MgdGhhdCBvbmx5ICAgaHVtYW5zIGNhbiBkby4gICAgVGhlIHJvYm90cyBhcmUgZGVzaWduZWQgdG8gY29tcGxldGUgdGFza3MgICBzdWNoIGFzIHRha2luZyBpbnZlbnRvcnksIGRvY3VtZW50aW5nICAgZXhwZXJpbWVudHMgY29uZHVjdGVkIGJ5IGFzdHJvbmF1dHMgd2l0aCAgIHRoZWlyIGJ1aWx0LWluIGNhbWVyYXMgb3Igd29ya2luZyB0b2dldGhlciB0byAgIG1vdmUgY2FyZ28gdGhyb3VnaG91dCB0aGUgc3RhdGlvbi4gSW4gICBhZGRpdGlvbiwgdGhlIHN5c3RlbSBzZXJ2ZXMgYXMgYSByZXNlYXJjaCAgIHBsYXRmb3JtIHRoYXQgY2FuIGJlIG91dGZpdHRlZCBhbmQgICBwcm9ncmFtbWVkIHRvIGNhcnJ5IG91dCBleHBlcmltZW50cyBpbiAgIG1pY3JvZ3Jhdml0eSAtIGhlbHBpbmcgdXMgdG8gbGVhcm4gbW9yZSAgIGFib3V0IGhvdyByb2JvdGljcyBjYW4gYmVuZWZpdCBhc3Ryb25hdXRzIGluICAgc3BhY2UuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhleSBjYW4gd29yayAgIGF1dG9ub21vdXNseSBvciB2aWEgcmVtb3RlIGNvbnRyb2wgYnkgICBhc3Ryb25hdXRzLCBmbGlnaHQgY29udHJvbGxlcnMgb3IgICByZXNlYXJjaGVycyBvbiB0aGUgZ3JvdW5kLiAgICBYLUZhY3RvciAgIE5BU0EgaGFzIGRldmVsb3BlZCB0aHJlZSBuZXcgcm9ib3RpYyAgIHRlYW1tYXRlcyB0byB3b3JrIGFsb25nc2lkZSBhc3Ryb25hdXRzIG9uICAgdGhlIEludGVybmF0aW9uYWwgU3BhY2UgU3RhdGlvbiBhcyB0aGV5IGhlbHAgICB0byBhZHZhbmNlIHJlc2VhcmNoLiAgIFRoZSB0aHJlZSByb2JvdHMgYXJlIG5hbWVkIEhvbmV5LCBRdWVlbiwgICBhbmQgQnVtYmxlLiBUaGUgcm9ib3RzIGFyZSBzaGFwZWQgbGlrZSAgIGN1YmVzIDEyLjUgaW5jaGVzIHdpZGUuIFdoZW4gbmVlZGVkLCB0aGUgICByb2JvdHMgY2FuIHJldHVybiB0byB0aGVpciBkb2NraW5nIHN0YXRpb24gICBhbmQgcmVjaGFyZ2UgdGhlaXIgYmF0dGVyeSBwb3dlci4gICBFYWNoIHJvYm90IGFsc28gY2FycmllcyBhIHBlcmNoaW5nIGFybSB0aGF0ICAgYWxsb3dzIGl0IHRvIGdyYXNwIHN0YXRpb24gaGFuZHJhaWxzIGluIG9yZGVyICAgdG8gY29uc2VydmUgZW5lcmd5IG9yIHRvIGFzc2lzdCBhc3Ryb25hdXRzLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cubmFzYS5nb3YvYXN0cm9iZWUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 28,
      "question" : " Which of the following statements  is/are correct with respect to  Polycyclic Aromatic Hydrocarbons  (PAHs):  1.  PAHs are a class of chemicals that  occur naturally in fossil fuels.  2. Fungus is capable of removing  toxic and carcinogenic polycyclic  aromatic hydrocarbons from the  environment.  3.  PAHs can be formed on the  exposer of high heat during  cooking food.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBSZXNlYXJjaGVycyBhdCB0aGUgICBDb3VuY2lsIG9mIFNjaWVudGlmaWMgJiBJbmR1c3RyaWFsIFJlc2VhcmNoLSAgSW5kaWFuIEluc3RpdHV0ZSBvZiBQZXRyb2xldW0gKENTSVItSUlQKSwgICBEZWhyYWR1biwgaGF2ZSBpZGVudGlmaWVkIGEgZnVuZ3VzLCB3aGl0ZS0gIHJvdCBmdW5ndXMgVHJhbWV0ZXNtYXhpbWEgSUlQTEMtMzIsICAgY2FwYWJsZSBvZiByZW1vdmluZyB0b3hpYywgcmVjYWxjaXRyYW50LCAgIGFuZCBjYXJjaW5vZ2VuaWMgcG9seWN5Y2xpYyBhcm9tYXRpYyAgIGh5ZHJvY2FyYm9ucyAoUEFIcykgZnJvbSB0aGUgICBlbnZpcm9ubWVudC4gQWNjb3JkaW5nIHRvIHJlc2VhcmNoZXJzLCAgIGdyb3dpbmcgb24gZGVhZCBwbGFudHMsIHRoaXMgZnVuZ3VzIGNhdXNlcyAgIHB5cmVuZSBkZWdyYWRhdGlvbiB1c2luZyBzcGVjaWFsIGVuenltZXMuICAgU3RhdGVtZW50IDEgYW5kIDMgYXJlIGNvcnJlY3Q6IFBvbHljeWNsaWMgICBhcm9tYXRpYyBoeWRyb2NhcmJvbnMgKFBBSHMpIGFyZSBhIGNsYXNzICAgb2YgY2hlbWljYWxzIHRoYXQgb2NjdXIgbmF0dXJhbGx5IGluIGNvYWwsICAgY3J1ZGUgb2lsLCBhbmQgZ2Fzb2xpbmUgKGZvc3NpbCBmdWVscykuIFRoZXkgICByZXN1bHQgZnJvbSBidXJuaW5nIGNvYWwsIG9pbCwgZ2FzLCB3b29kLCAgIGdhcmJhZ2UsIGFuZCB0b2JhY2NvLiBQQUhzIGNhbiBiaW5kIHRvIG9yICAgZm9ybSBzbWFsbCBwYXJ0aWNsZXMgaW4gdGhlIGFpci4gSGlnaCBoZWF0ICAgd2hlbiBjb29raW5nIG1lYXQgYW5kIG90aGVyIGZvb2RzIHdpbGwgICBmb3JtIFBBSHMuIE5hcGh0aGFsZW5lIGlzIGEgbWFubWFkZSBQQUggICB1c2VkIGluIHRoZSBVbml0ZWQgU3RhdGVzIHRvIG1ha2Ugb3RoZXIgICBjaGVtaWNhbHMgYW5kIG1vdGhiYWxscy4gQ2lnYXJldHRlIHNtb2tlICAgY29udGFpbnMgbWFueSBQQUhzLiAgIFgtRmFjdG9yOiAgIEV4cG9zdXJlIHRvIFBBSHMgY2FuIG9jY3VyIGJ5OiAgIO+CtyBCcmVhdGhpbmcgYWlyIGNvbnRhaW5pbmcgICDvgrcgTW90b3IgdmVoaWNsZSBleGhhdXN0ICAg74K3IENpZ2FyZXR0ZSBzbW9rZSAgIO+CtyBXb29kIHNtb2tlICAg74K3IEZ1bWVzIGZyb20gYXNwaGFsdCByb2FkcyAgIO+CtyBDb25zdW1pbmcgZ3JpbGxlZCBvciBjaGFycmVkIG1lYXRzIG9yICAgZm9vZHMgICDvgrcgRWF0aW5nIGZvb2RzIG9uIHdoaWNoIFBBSCBwYXJ0aWNsZXMgaGF2ZSAgIHNldHRsZWQgZnJvbSB0aGUgYWlyICAg74K3IEluIHNvbWUgY2FzZXMsIHBhc3NpbmcgdGhyb3VnaCB0aGUgc2tpbi4gICBBZnRlciBQQUhzIGVudGVyIGEgcGVyc29uLCB0aGUgYm9keSBjb252ZXJ0cyAgIFBBSHMgaW50byBicmVha2Rvd24gcHJvZHVjdHMgY2FsbGVkICAgbWV0YWJvbGl0ZXMuIFRoZSBtZXRhYm9saXRlcyBwYXNzIG91dCBvZiB0aGUgICBib2R5IGluIHRoZSB1cmluZSBhbmQgZmVjZXMuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9uZXdzL2VudiAgaXJvbm1lbnQvcmVzZWFyY2hlcnMtaWRlbnRpZnktZnVuZ3VzLWZvci0gIHB5cmVuZS1yZW1lZGlhdGlvbi0gIDg0MDkwIzp+OnRleHQ9VGhlJTIwcmVzZWFyY2hlcnMlMjBhdCUyICAwSUlQJTIwaWRlbnRpZmllZCxweXJlbmUlMjBkZWdyYWRhdGlvbiUgIDIwdXNpbmclMjBzcGVjaWFsJTIwZW56eW1lcyAgICBodHRwczovL3d3dy5jZGMuZ292L2Jpb21vbml0b3JpbmcvUEFIc18gIEZhY3RTaGVldC5odG1sIzp+OnRleHQ9UG9seWN5Y2xpYyUyMGFyb20gIGF0aWMlMjBoeWRyb2NhcmJvbnMlMjAoUEFIcyklMjBhcmUsb3RoICBlciUyMGZvb2RzJTIwd2lsbCUyMGZvcm0lMjBQQUhzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 29,
      "question" : " Consider the following statements  about Indian Regional Navigation  Satellite System (IRNSS) NavIC:  1.  It is a global navigation satellite  system developed by India.  2.  It is a part of the World-Wide  Radio Navigation System for  operation in the Indian Ocean  Region.  3.  NavIC satellites are placed at a  higher orbit than the GPS of the  United States.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEluZGlhbiBSZWdpb25hbCBOYXZpZ2F0aW9uIFNhdGVsbGl0ZSBTeXN0ZW0gICAoSVJOU1MpIGlzIGEgcmVnaW9uYWwgbmF2aWdhdGlvbmFsIHNhdGVsbGl0ZSAgIHN5c3RlbSB1c2luZyBhIGNvbWJpbmF0aW9uIG9mIEdFTyBhbmQgICBHU08gc3BhY2VjcmFmdHMgYW5kIHN0YXRlLW9mLXRoZS1hcnQgZ3JvdW5kICAgc3lzdGVtcy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIElSTlNTIGlzIGFuICAgaW5kZXBlbmRlbnQgcmVnaW9uYWwgbmF2aWdhdGlvbiBzYXRlbGxpdGUgICBzeXN0ZW0gKG5vdCBnbG9iYWwpIGJlaW5nIGRldmVsb3BlZCBieSBJbmRpYS4gICBJdCBpcyBkZXNpZ25lZCB0byBwcm92aWRlIGFjY3VyYXRlIHBvc2l0aW9uICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGczICAwICAgaW5mb3JtYXRpb24gc2VydmljZSB0byB1c2VycyBpbiBJbmRpYSBhcyB3ZWxsICAgYXMgdGhlIHJlZ2lvbiBleHRlbmRpbmcgdXAgdG8gMTUwMCBrbSBmcm9tICAgaXRzIGJvdW5kYXJ5LCB3aGljaCBpcyBpdHMgcHJpbWFyeSBzZXJ2aWNlICAgYXJlYS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIEluZGlhbiAgIFJlZ2lvbmFsIE5hdmlnYXRpb24gU2F0ZWxsaXRlIFN5c3RlbSAgIChJUk5TUykgaGFzIGJlZW4gYWNjZXB0ZWQgYXMgYSAgIGNvbXBvbmVudCBvZiB0aGUgV29ybGQtV2lkZSBSYWRpbyAgIE5hdmlnYXRpb24gU3lzdGVtIChXV1JOUykgZm9yIG9wZXJhdGlvbiAgIGluIHRoZSBJbmRpYW4gT2NlYW4gUmVnaW9uIGJ5IHRoZSAgIEludGVybmF0aW9uYWwgTWFyaXRpbWUgT3JnYW5pc2F0aW9uICAgKElNTykuIFRoaXMgd2lsbCBlbmFibGUgbWVyY2hhbnQgdmVzc2VscyB0byAgIHVzZSBJUk5TUyBmb3Igb2J0YWluaW5nIHBvc2l0aW9uIGluZm9ybWF0aW9uICAgc2ltaWxhciB0byBHUFMgYW5kIEdMT05BU1MgdG8gYXNzaXN0IGluIHRoZSAgIG5hdmlnYXRpb24gb2Ygc2hpcHMgaW4gb2NlYW4gd2F0ZXJzIHdpdGhpbiAgIHRoZSBhcmVhIGNvdmVyZWQgYnkgNTDCsE4gbGF0aXR1ZGUsIDU1wrBFICAgbG9uZ2l0dWRlLCA1wrBTIGxhdGl0dWRlIGFuZCAxMTDCsEUgbG9uZ2l0dWRlICAgKGFwcHJveGltYXRlbHkgdXAgdG8gMTUwMCBrbSBmcm9tIEluZGlhbiAgIGJvdW5kYXJ5KS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBOYXZJQyBzYXRlbGxpdGVzICAgYXJlIHBsYWNlZCBhdCBhIGhpZ2hlciBvcmJpdCB0aGFuIHRoZSBHUFMgICBvZiB0aGUgVW5pdGVkIFN0YXRlcy4gTmF2SUMgc2F0ZWxsaXRlcyBhcmUgICBwbGFjZWQgaW4gZ2Vvc3RhdGlvbmFyeSBvcmJpdCAoR0VPKSAmICAgZ2Vvc3luY2hyb25vdXMgb3JiaXQgKEdTTykgd2l0aCBhbiBhbHRpdHVkZSAgIG9mIGFib3V0IDM2LDAwMCBrbTsgR1BTIHNhdGVsbGl0ZXMgYXJlICAgcGxhY2VkIGluIG1lZGl1bSBlYXJ0aCBvcmJpdCAoTUVPKSB3aXRoIGFuICAgYWx0aXR1ZGUgb2YgYWJvdXQgMjAsMDAwIGttLiAgIFgtRmFjdG9yICAgVGhlIElSTlNTIFN5c3RlbSBwcm92aWRlcyBuYXZpZ2F0aW9uICAgc29sdXRpb25zIGFsbCB0aW1lIHdpdGggcG9zaXRpb24gYWNjdXJhY3kgICBiZXR0ZXIgdGhhbiAyMG0gZHVyaW5nIGFsbCB3ZWF0aGVyICAgY29uZGl0aW9ucywgYW55d2hlcmUgd2l0aGluIEluZGlhIGFuZCBhICAgcmVnaW9uIGV4dGVuZGluZyBhYm91dCAxNTAwIGttIGFyb3VuZCAgIEluZGlhLiBJUk5TUyBwcm92aWRlcyBTdGFuZGFyZCBQb3NpdGlvbmluZyAgIFNlcnZpY2UgKFNQUykgYW5kIFJlc3RyaWN0ZWQgU2VydmljZSAoUlMpIHRvICAgdGhlIHVzZXJzIG9uIGR1YWwgZnJlcXVlbmNpZXMgaW4gTDUgYW5kIFMgICBiYW5kLiAgIFRoZSBJUk5TUyBzcGFjZSBzZWdtZW50IGNvbnNpc3RzIG9mIDcgICBzYXRlbGxpdGVzICgzIEdFTyBhbmQgNCBHU08pLiAyIHNwYXJlICAgc2F0ZWxsaXRlcyBhcmUgYWxzbyBwbGFubmVkLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaXNyby5nb3YuaW4vaXJuc3MtICBwcm9ncmFtbWUgICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlSWZyYW1lUGFnZS4gIGFzcHg/UFJJRD0xNjc0NDgzICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD8gIFBSSUQ9MTg0ODMxMyM6fjp0ZXh0PUppdGVuZHJhJTIwU2luZ2ggICUyMHNhaWQlMkMtICAsTmF2SUMlMjBjYW4lMjBoZWxwJTIwaW4lMjBuYXZpZ2F0aW8gIG4lMjBvbiUyMGxhbmQlMkMlMjBhaXIlMkMlMjBzZWElMiAgMGFuZCx0aGUlMjBHUFMlMjBvZiUyMFVuaXRlZCUyMFN0YXQgIGVzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements  about small satellite launch vehicle  (SSLV) developed by the ISRO:  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g6 1.  It can launch satellites to  Geostationary orbit.  2.  It is configured with three solid  stages and a liquid stage.  3.  It is capable of launching satellites  weighing upto 500 kg.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogSVNSTyBkZXZlbG9wZWQgICBhIHNtYWxsIHNhdGVsbGl0ZSBsYXVuY2ggdmVoaWNsZSAoU1NMVikgdG8gICBjYXRlciB0aGUgbGF1bmNoIG9mIHVwIHRvIDUwMCBrZyBzYXRlbGxpdGVzICAgdG8gTG93IEVhcnRoIE9yYml0cyBvbiAnbGF1bmNoLW9uLWRlbWFuZCcgICBiYXNpcy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IGFuZCAzIGlzIGNvcnJlY3Q6ICAgU1NMViBpcyBjb25maWd1cmVkIHdpdGggdGhyZWUgc29saWQgICBzdGFnZXMuIFRoZSBzYXRlbGxpdGUgaW5zZXJ0aW9uIGludG8gdGhlICAgaW50ZW5kZWQgb3JiaXQgaXMgYWNoaWV2ZWQgdGhyb3VnaCBhIGxpcXVpZCAgIHByb3B1bHNpb24tYmFzZWQgdmVsb2NpdHkgdHJpbW1pbmcgbW9kdWxlLiAgIFNTTFYgaXMgY2FwYWJsZSBvZiBsYXVuY2hpbmcgTWluaSwgTWljcm8sICAgb3IgTmFub3NhdGVsbGl0ZXMgKDEwIHRvIDUwMCBrZyBtYXNzKS4gICAgU1NMViBwcm92aWRlcyBsb3ctY29zdCBhY2Nlc3MgdG8gU3BhY2Ugb24gICBkZW1hbmQgYmFzaXMuIEl0IG9mZmVycyBsb3cgdHVybi1hcm91bmQgICB0aW1lLCBmbGV4aWJpbGl0eSBpbiBhY2NvbW1vZGF0aW5nIG11bHRpcGxlICAgc2F0ZWxsaXRlcywgbGF1bmNoLW9uLWRlbWFuZCBmZWFzaWJpbGl0eSwgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzMgIDEgICBtaW5pbWFsIGxhdW5jaCBpbmZyYXN0cnVjdHVyZSAgIHJlcXVpcmVtZW50cywgZXRjLiAgIFNvdXJjZTogICBodHRwczovL3d3dy5pc3JvLmdvdi5pbi9sYXVuY2hlci9zc2x2LWQxLSAgZW9zLTAyLW1pc3Npb24gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  1 and 3 only  ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 31,
      "question" : " UDARASHAKTI, is a bilateral air  exercise between:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgVWRhcnNoYWt0aSBpcyBhbiBhaXIgZm9yY2UgZXhlcmNpc2UgICBiZXR3ZWVuIEluZGlhIGFuZCBNYWxheXNpYS4gVGhlIEluZGlhbiBBaXIgICBGb3JjZSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIGFpciBleGVyY2lzZSB3aXRoICAgU3UtMzAgTUtJIGFuZCBDLTE3IGFpcmNyYWZ0IHdoaWxlIHRoZSBSTUFGICAgcGFydGljaXBhdGVkIHdpdGggU3UgMzAgTUtNIGFpcmNyYWZ0LiBUaGUgICBleGVyY2lzZSB0b29rIHBsYWNlIGF0IHRoZSBSTUFGIGJhc2Ugb2YgICBLdWFudGFuLiAgIFRoZSBleGVyY2lzZSB3aWxsIGdpdmUgYW4gb3Bwb3J0dW5pdHkgdG8gSUFGICAgY29udGluZ2VudCBtZW1iZXJzIHRvIHNoYXJlIGFuZCBsZWFybiBiZXN0ICAgcHJhY3RpY2VzIHdpdGggc29tZSBvZiB0aGUgYmVzdCBwcm9mZXNzaW9uYWxzICAgZnJvbSBSTUFGLCB3aGlsZSBhbHNvIGRpc2N1c3NpbmcgbXV0dWFsICAgY29tYmF0IGNhcGFiaWxpdGllcy4gICAgU291cmNlOiAgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLiAgYXNweD9QUklEPTE4NTExODcgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Sri Lanka and Thailand  ",
        "option2" : "  India and Indonesia   ",
        "option3" : "  Singapore and Bangladesh  ",
        "option4" : "  India and Malaysia   "
      }
    },
    {
      "index" : 32,
      "question" : " With reference to the band gap of semi- conductors, which of the following  statements is incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogVGhlIGVuZXJneSByZXF1aXJlZCAgIGZvciBlbGVjdHJvbnMgYW5kIGhvbGVzIHRvIHRyYW5zaXRpb24gZnJvbSAgIHRoZSB2YWxlbmNlIGJhbmQgdG8gdGhlIGNvbmR1Y3Rpb24gYmFuZCAgIGlzIGNhbGxlZCBhIGJhbmQgZ2FwLiBTaSAoU2lsaWNvbikgaGFzIGEgYmFuZCAgIGdhcCBvZiAxLjEyIGVWIChlbGVjdHJvbiB2b2x0KS4gQSAgIHNlbWljb25kdWN0b3Igd2l0aCBhIGxhcmdlIHZhbHVlIGlzIGNhbGxlZCBhICAgd2lkZS1iYW5kLWdhcCBzZW1pY29uZHVjdG9yLiBTaUMgKFNpbGljb24gICBDYXJiaWRlKSBhbmQgR2FOIChHYWxsaXVtIE5pdHJpZGUpIGFyZSAgIHdpZGUtYmFuZC1nYXAgc2VtaWNvbmR1Y3RvcnMuICAgT3B0aW9uIChiKSBpcyBjb3JyZWN0IGFuZCAoYykgaXMgaW5jb3JyZWN0OiAgIFNpbmNlIHdpZGUtYmFuZC1nYXAgc2VtaWNvbmR1Y3RvcnMgaGF2ZSAgIHNtYWxsIGxhdHRpY2UgY29uc3RhbnRzLCB0aGUgYm9uZCBzdHJlbmd0aCAgIGJldHdlZW4gYXRvbXMgYmVjb21lcyBzdHJvbmcuICAgVGhpcyBtZWFucyBoaWdoIGVsZWN0cmljIGJyZWFrZG93biBmaWVsZCAgIGFuZCBoaWdoIHRoZXJtYWwgY29uZHVjdGl2aXR5LiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogVGhlIGhpZ2ggYnJlYWtkb3duICAgdm9sdGFnZSBvZiB3aWRlIGJhbmRnYXAgc2VtaWNvbmR1Y3RvcnMgICBpcyBhIHVzZWZ1bCBwcm9wZXJ0eSBpbiBoaWdoIHBvd2VyICAgYXBwbGljYXRpb25zIHRoYXQgcmVxdWlyZSBsYXJnZSBlbGVjdHJpYyAgIGZpZWxkcy4gRGV2aWNlcyBmb3IgaGlnaCBwb3dlciBhbmQgaGlnaCAgIHRlbXBlcmF0dXJlIGFwcGxpY2F0aW9ucyBoYXZlIGJlZW4gICBkZXZlbG9wZWQuIEJvdGggZ2FsbGl1bSBuaXRyaWRlIGFuZCBzaWxpY29uICAgY2FyYmlkZSBhcmUgcm9idXN0IG1hdGVyaWFscyB3ZWxsIHN1aXRlZCBmb3IgICBzdWNoIGFwcGxpY2F0aW9ucy4gICBTb3VyY2U6ICAgIHN0b3JhZ2UuY29tL2FwLSAgZW4vc2VtaWNvbmR1Y3Rvci9rbm93bGVkZ2UvZmFxL2Rpb2RlICBfc2ljLXNiZC9zaWMtc2JkMDAxLmh0bWwgICBodHRwczovL3d3dy5jaGVtZXVyb3BlLmNvbS9lbi9lbmN5YyAgbG9wZWRpYS9XaWRlX2JhbmRnYXBfc2VtaWNvbmR1Y3RvcnMuaCAgdG1sICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  It represents the energy required   for electrons to transition from the   valence band to the conduction   band.  ",
        "option2" : "  In wide-band-gap   semiconductors, the bond   strength between atoms become   strong.  ",
        "option3" : "  Wide band gap devices have low   thermal conductivity.  ",
        "option4" : "  Wide band gap semiconductors   are suitable for high power   application devices.   "
      }
    },
    {
      "index" : 33,
      "question" : " Consider the following statement  about Nano Urea developed by Indian  Farmers Fertiliser Cooperative Limited  (IFFCO).  1.  It is the only Nano fertiliser  approved by the Government and  included in the Fertiliser Control  Order.  2.  It can easily enter through  stomata and is assimilated by the  plant cells.  3.  1 kg Nano Urea can effectively  replace 1 bag of conventional  Urea.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIElGRkNPIE5hbm8gVXJlYSAgIGlzIHRoZSBvbmx5IE5hbm8gZmVydGlsaXNlciBhcHByb3ZlZCBieSB0aGUgICBHb3Zlcm5tZW50IG9mIEluZGlhIGFuZCBpbmNsdWRlZCBpbiB0aGUgICBGZXJ0aWxpc2VyIENvbnRyb2wgT3JkZXIgKEZDTykuIEl0IGlzICAgZGV2ZWxvcGVkIGFuZCBQYXRlbnRlZCBieSBJRkZDTy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBXaGVuIHNwcmF5ZWQgb24gICBsZWF2ZXMsIE5hbm8gVXJlYSBlYXNpbHkgZW50ZXJzIHRocm91Z2ggICBzdG9tYXRhIGFuZCBvdGhlciBvcGVuaW5ncyBhbmQgaXMgICBhc3NpbWlsYXRlZCBieSB0aGUgcGxhbnQgY2VsbHMuIEl0IGlzIGVhc2lseSAgIGRpc3RyaWJ1dGVkIHRocm91Z2ggdGhlIHBobG9lbSBmcm9tIHNvdXJjZSAgIHRvIHNpbmsgaW5zaWRlIHRoZSBwbGFudCBhcyBwZXIgaXRzIG5lZWQuICAgVW51dGlsaXplZCBuaXRyb2dlbiBpcyBzdG9yZWQgaW4gdGhlIHBsYW50ICAgdmFjdW9sZSBhbmQgaXMgc2xvd2x5IHJlbGVhc2VkIGZvciBwcm9wZXIgICBncm93dGggYW5kIGRldmVsb3BtZW50IG9mIHRoZSBwbGFudC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIE5hbm8gdXJlYSAgIGNvbWVzIGluIGxpcXVpZCBmb3JtIGFuZCBhcHBsaWNhdGlvbiBvZiAxICAgYm90dGxlIG9mIE5hbm8gVXJlYSBjYW4gZWZmZWN0aXZlbHkgICByZXBsYWNlIGF0IGxlYXN0IDEgYmFnIG9mIFVyZWEuICAgU291cmNlOiBodHRwczovL3d3dy5pZmZjby5pbi9lbi9uYW5vLSAgdXJlYS1saXF1aWQtZmVydGlsaXplciAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only   ",
        "option3" : "   2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 34,
      "question" : " Which among the following sources of  energy can be adopted for the  Electrolysis of water to produce Green  Hydrogen?  1.  Thermal power plants.  2.  Solar power plants  3.  Energy produced from Natural  Gas  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMyAgMiAgIEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICBHcmVlbiBoeWRyb2dlbiBpcyBkZWZpbmVkIGFzIGh5ZHJvZ2VuICAgcHJvZHVjZWQgYnkgc3BsaXR0aW5nIHdhdGVyIGludG8gaHlkcm9nZW4gICBhbmQgb3h5Z2VuIHVzaW5nIHJlbmV3YWJsZSBlbGVjdHJpY2l0eSAgIGluY2x1ZGluZyBSZW5ld2FibGUgRW5lcmd5IHdoaWNoIGhhcyAgIGJlZW4gcHJvZHVjZWQgZnJvbSBiaW9tYXNzLiAgIE51Y2xlYXIgZW5lcmd5IGlzIHVzdWFsbHkgY29uc2lkZXJlZCAgIGFub3RoZXIgbm9uLXJlbmV3YWJsZSBlbmVyZ3kgc291cmNlLiAgIEFsdGhvdWdoIG51Y2xlYXIgZW5lcmd5IGl0c2VsZiBpcyBhIHJlbmV3YWJsZSAgIGVuZXJneSBzb3VyY2UsIHRoZSBtYXRlcmlhbCB1c2VkIGluIG51Y2xlYXIgICBwb3dlciBwbGFudHMgaXMgbm90LiBOdWNsZWFyIGVuZXJneSBoYXJ2ZXN0cyAgIHRoZSBwb3dlcmZ1bCBlbmVyZ3kgaW4gdGhlIG51Y2xldXMsIG9yIGNvcmUsICAgb2YgYW4gYXRvbS4gVGhlIG1hdGVyaWFsIG1vc3Qgb2Z0ZW4gdXNlZCBpbiAgIG51Y2xlYXIgcG93ZXIgcGxhbnRzIGlzIHRoZSBlbGVtZW50IHVyYW5pdW0gICB3aGljaCBpcyBhIG5vbi1yZW5ld2FibGUgcmVzb3VyY2UuICAgIFRoZXJtYWwgcG93ZXIgcGxhbnRzIGdlbmVyYXRlcyBlbmVyZ3kgICB1c2luZyBjb2FsIG9yIG5hdHVyYWwgb2lsIChmb3NzaWwgZnVlbHMpIHdoaWNoICAgYXJlIG5vbiByZW5ld2FibGUgc291cmNlcyBvZiBlbnJneS4gICBYLUZhY3RvcjogICBUeXBlcyBvZiBIeWRyb2dlbiBGdWVsOiAgIFNvdXJjZTogICBodHRwczovL2VkdWNhdGlvbi5uYXRpb25hbGdlb2dyYXBoaWMub3JnL3IgIGVzb3VyY2Uvbm9uLXJlbmV3YWJsZS1lbmVyZ3kgICBodHRwczovL3Zpa2FzcGVkaWEuaW4vZW5lcmd5L3BvbGljeS0gIHN1cHBvcnQvcmVuZXdhYmxlLWVuZXJneS0xL2dyZWVuLSAgaHlkcm9nZW4tcG9saWN5ICAgaHR0cHM6Ly93d3cud2Vmb3J1bS5vcmcvYWdlbmRhLzIwMjEvMSAgMi93aGF0LWlzLWdyZWVuLWh5ZHJvZ2VuLWV4cGVydC1leHBsYWlucy0gIGJlbmVmaXRzLyM6fjp0ZXh0PUdyZWVuJTIwaHlkcm9nZW4lMjBpcyAgJTIwZGVmaW5lZCUyMGFzLGFuZCUyMG94eWdlbiUyMHVzaW5nICAlMjByZW5ld2FibGUlMjBlbGVjdHJpY2l0eS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  2 only ",
        "option2" : "  1 and 3 only  ",
        "option3" : " 2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 35,
      "question" : " Which of the following is/are major  components of the Deep Ocean  Mission?  1.  Development of Technologies for  Deep Sea Mining, and Manned  Submersible  2.  Development of Ocean Climate  Change Advisory Services  3.  Energy and freshwater from the  Ocean  4.  Advanced Marine Station for  Ocean Biology  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICBUaGUgQ2FiaW5ldCBDb21taXR0ZWUgb24gRWNvbm9taWMgQWZmYWlycyAgIGhhcyBhcHByb3ZlZCB0aGUgRGVlcCBPY2VhbiBNaXNzaW9uIHdpdGggICBhIHZpZXcgdG8gZXhwbG9yZSB0aGUgZGVlcCBvY2VhbiBmb3IgICByZXNvdXJjZXMgYW5kIGRldmVsb3AgZGVlcCBzZWEgdGVjaG5vbG9naWVzICAgZm9yIHN1c3RhaW5hYmxlIHVzZSBvZiBvY2VhbiByZXNvdXJjZXMuIFRoZSAgIERlZXAgT2NlYW4gTWlzc2lvbiBjb25zaXN0cyBvZiB0aGUgZm9sbG93aW5nICAgc2l4IG1ham9yIGNvbXBvbmVudHM6ICAg4pePIERldmVsb3BtZW50IG9mIFRlY2hub2xvZ2llcyBmb3IgICBEZWVwIFNlYSBNaW5pbmcsIGFuZCBNYW5uZWQgICBTdWJtZXJzaWJsZSAgIO+CtyBEZXZlbG9wbWVudCBvZiBPY2VhbiBDbGltYXRlIENoYW5nZSAgIEFkdmlzb3J5IFNlcnZpY2VzICAg74K3IFRlY2hub2xvZ2ljYWwgaW5ub3ZhdGlvbnMgZm9yIGV4cGxvcmF0aW9uICAgYW5kIGNvbnNlcnZhdGlvbiBvZiBkZWVwLXNlYSBiaW9kaXZlcnNpdHkgICDvgrcgRGVlcCBPY2VhbiBTdXJ2ZXkgYW5kIEV4cGxvcmF0aW9uICAg74K3IEVuZXJneSBhbmQgZnJlc2h3YXRlciBmcm9tIHRoZSBPY2VhbiAgIO+CtyBBZHZhbmNlZCBNYXJpbmUgU3RhdGlvbiBmb3IgT2NlYW4gICBCaW9sb2d5ICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnBpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hICBzcHg/UFJJRD0xODQ3NzQyICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD8gIFBSSUQ9MTcyNzUyNSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 2 and 3 only  ",
        "option2" : "  2 and 4 only  ",
        "option3" : "  3 and 4 only  ",
        "option4" : "  1, 2, 3 and 4   "
      }
    },
    {
      "index" : 36,
      "question" : " Which of the following statements  about Fungi is/are incorrect?  1.  They are prokaryotes having  complex cellular organization.  2.  Their cell wall is made of chitin  which provides structure.  3.  They digest their food externally.  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRnVuZ2kgYXJlICAgZXVrYXJ5b3RlcywgYW5kIGFzIHN1Y2gsIGhhdmUgYSBjb21wbGV4ICAgY2VsbHVsYXIgb3JnYW5pc2F0aW9uLiBCZWluZyBldWthcnlvdGVzLCBhICAgdHlwaWNhbCBmdW5nYWwgY2VsbCBjb250YWlucyBhIHRydWUgbnVjbGV1cywgICBtaXRvY2hvbmRyaWEsIGFuZCBhIGNvbXBsZXggc3lzdGVtIG9mICAgaW50ZXJuYWwgbWVtYnJhbmVzLCBpbmNsdWRpbmcgdGhlICAgZW5kb3BsYXNtaWMgcmV0aWN1bHVtIGFuZCBHb2xnaSBhcHBhcmF0dXMuICAgU3RhdGVtZW50cyAyIGFuZCAzIGFyZSBjb3JyZWN0LiBXaGlsZSAgIGZ1bmdpIGNhbiBiZSBtdWx0aWNlbGx1bGFyIG9yIHVuaWNlbGx1bGFyLCBhbGwgICBmdW5naSBoYXZlIHR3byB0aGluZ3MgaW4gY29tbW9uOiAxLiBjZWxsICAgd2FsbHMgbWFkZSBvZiBhIHRvdWdoIHBvbHlzYWNjaGFyaWRlLCAgIGNhbGxlZCBjaGl0aW4sIHdoaWNoIHByb3ZpZGVzIHN0cnVjdHVyZSBhbmQgICAyLiBleHRlcm5hbCBkaWdlc3Rpb24gb2YgZm9vZC4gICBYLUZhY3RvciAgICAgUHJva2FyeW90ZXMgdnMgRXVrYXJ5b3RlczogICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cucGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmEgIHNweD9QUklEPTE4NTQzNTcgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzMgIDMgICBodHRwczovL29yZ2FuaXNtYWxiaW8uYmlvc2NpLmdhdGVjaC5lZHUvYmkgIG9kaXZlcnNpdHkvZnVuZ2ktMi8gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "   2 and 3 only ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 37,
      "question" : " Which of the following properties of a  material can be changed at nanoscale?  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g7 1.  Melting point  2.  Fluorescence   3.  Electrical conductivity  4.  Magnetic permeability  5.  Chemical reactivity  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgV2hlbiBwYXJ0aWNsZXMgYXJlIGNyZWF0ZWQgd2l0aCBkaW1lbnNpb25zICAgb2YgYWJvdXQgMS0xMDAgbmFub21ldGVycywgdGhlIG1hdGVyaWFscycgICBwcm9wZXJ0aWVzIGNhbiBjaGFuZ2Ugc2lnbmlmaWNhbnRseSBmcm9tICAgdGhvc2UgYXQgbGFyZ2VyIHNjYWxlcy4gVGhpcyBpcyB0aGUgc2l6ZSBzY2FsZSAgIHdoZXJlIHF1YW50dW0gZWZmZWN0cyBjYW4gcnVsZSB0aGUgICBiZWhhdmlvdXIgYW5kIHByb3BlcnRpZXMgb2YgcGFydGljbGVzLiAgICBBdCB0aGUgbmFub3NjYWxlLCBwcm9wZXJ0aWVzIHN1Y2ggYXMgICBtZWx0aW5nIHBvaW50LCBmbHVvcmVzY2VuY2UsIGVsZWN0cmljYWwgICBjb25kdWN0aXZpdHksIG1hZ25ldGljIHBlcm1lYWJpbGl0eSwgYW5kICAgY2hlbWljYWwgcmVhY3Rpdml0eSBjYW4gY2hhbmdlIGFzIGEgICBmdW5jdGlvbiBvZiB0aGUgc2l6ZSBvZiB0aGUgcGFydGljbGUuICAgTmFub3NjYWxlIGdvbGQgaWxsdXN0cmF0ZXMgdGhlIHVuaXF1ZSAgIHByb3BlcnRpZXMgdGhhdCBvY2N1ciBhdCB0aGUgbmFub3NjYWxlLiAgIE5hbm9zY2FsZSBnb2xkIGNhbiBhcHBlYXIgcmVkIG9yIHB1cnBsZSAgIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBvZiB0aGUgcGFydGljbGUuIEdvbGQgICBuYW5vcGFydGljbGVzIGludGVyYWN0IGRpZmZlcmVudGx5IHdpdGggbGlnaHQgICBjb21wYXJlZCB0byBsYXJnZXItc2NhbGUgZ29sZCBwYXJ0aWNsZXMgZHVlICAgdG8gcXVhbnR1bSBlZmZlY3RzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 5 only  ",
        "option2" : "  1, 2, 3 and 4 only  ",
        "option3" : "   3, 4 and 5 only  ",
        "option4" : "  1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 38,
      "question" : " Consider the following statements  about the Geosynchronous Satellite  Launch Vehicle Mark II (GSLV Mk II)  rocket developed by ISRO:  1.  It has the capability to deploy  payloads upto 5 tonnes in  Geosynchronous Transfer Orbit.  2.  It uses Vikas Engine developed by  ISRO.  3.  The third stage is a cryogenic  stage using liquid Oxygen and  liquid Hydrogen as fuel.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gR2Vvc3luY2hyb25vdXMgICBTYXRlbGxpdGUgTGF1bmNoIFZlaGljbGUgTWFyayBJSSAoR1NMViBNayAgIElJKSBpcyBhIGxhdW5jaCB2ZWhpY2xlIGRldmVsb3BlZCBieSBJbmRpYSwgICB3aGljaCBpcyBjdXJyZW50bHkgaW4gb3BlcmF0aW9uLiBUaGlzIGZvdXJ0aCAgIGdlbmVyYXRpb24gbGF1bmNoIHZlaGljbGUgaXMgYSB0aHJlZS1zdGFnZSAgIHZlaGljbGUgd2l0aCBmb3VyIGxpcXVpZCBzdHJhcC1vbnMuIFRoZSAgIHZlaGljbGUgY2FuIGRlcGxveSBwYXlsb2FkcyBvZiB1cCB0byAyLDUwMCAgIEtpbG9ncmFtcyB0byBhIEdlb3N5bmNocm9ub3VzIFRyYW5zZmVyICAgT3JiaXQgYW5kIDUwMDAga2cgaW4gbG93IGVhcnRoIG9yYml0LiAgIFN0YXRlbWVudHMgMiBhbmQgMyBhcmUgY29ycmVjdC4gVGhlIGZpcnN0ICAgc3RhZ2UgaXMgYSBzb2xpZC1mdWVsZWQgc3RhZ2UgdGhhdCBpcyBhbHNvIHVzZWQgICBvbiBQU0xWLiBBcm91bmQgdGhlIGNvcmUsIGZvdXIgc3RyYXAtb24gICBsaXF1aWQtZnVlbGVkIGJvb3N0ZXJzIGFyZSBtb3VudGVkIGVhY2ggICBmZWF0dXJpbmcgYSBWaWthcyBlbmdpbmUgKGRldmVsb3BlZCBieSAgIElTUk8pIHVzaW5nIHN0b3JhYmxlIHByb3BlbGxhbnRzLiBUaGUgICBzZWNvbmQgc3RhZ2UgaXMgYWxzbyBhIHN0b3JhYmxlIHByb3BlbGxhbnQgICBzdGFnZSB1c2luZyBhIHNpbmdsZSBtb2RpZmllZCBWaWthcyBlbmdpbmUgICB3aGlsZSB0aGUgdGhpcmQgc3RhZ2UgaXMgYSBjcnlvZ2VuaWMgc3RhZ2UgICB1c2luZyBsaXF1aWQgT3h5Z2VuIGFuZCBsaXF1aWQgSHlkcm9nZW4gICB0aGF0IGlzIGNvbnN1bWVkIGJ5IGFuIElDRSBlbmdpbmUuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lmlzcm8uZ292LmluL2xhdW5jaGVycy9nc2x2ICAgaHR0cHM6Ly9zcGFjZWZsaWdodDEwMS5jb20vbWVtYmVycy93cC0gIGNvbnRlbnQvdXBsb2Fkcy9zaXRlcy81NC8yMDE3LzAyL0dTTFYtICBNa0lJLnBkZiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2, an 3   "
      }
    },
    {
      "index" : 39,
      "question" : " Consider the following statements  about Scramjet engine technology?  1.  It is an air breathing propulsion  technology.  2.  Scramjet engine utilizes stored  liquid oxygen and hydrogen as  fuel.  3.  It cannot perform efficiently at  hypersonic speed.  4.  Scramjet-powered vehicles require  an assisted take-off.  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudHMgMSBhbmQgNCBhcmUgY29ycmVjdC4gU2NyYW1qZXQsICAgYW4gaW1wcm92ZWQgdmVyc2lvbiBvZiByYW1qZXQsIGlzIGEgZm9ybSAgIG9mIGFpci1icmVhdGhpbmcgamV0IGVuZ2luZSB0aGF0IHVzZXMgdGhlICAgdmVoaWNsZSdzIGZvcndhcmQgbW90aW9uIHRvIGNvbXByZXNzICAgaW5jb21pbmcgYWlyIGZvciBjb21idXN0aW9uIHdpdGhvdXQgYSAgIHJvdGF0aW5nIGNvbXByZXNzb3IuIEZ1ZWwgaXMgaW5qZWN0ZWQgaW4gdGhlICAgY29tYnVzdGlvbiBjaGFtYmVyIHdoZXJlIGl0IG1peGVzIHdpdGggdGhlICAgaG90IGNvbXByZXNzZWQgYWlyIGFuZCBpZ25pdGVzLiBBIHNjcmFtamV0LSAgcG93ZXJlZCB2ZWhpY2xlIHJlcXVpcmVzIGFuIGFzc2lzdGVkICAgdGFrZS1vZmYgbGlrZSBhIHJvY2tldCBhc3Npc3QgdG8gYWNjZWxlcmF0ZSBpdCAgIHRvIGEgc3BlZWQgd2hlcmUgaXQgYmVnaW5zIHRvIHByb2R1Y2UgdGhydXN0LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gTGF1bmNoIHZlaGljbGVzICAgYmFzZWQgb24gc2NyYW1qZXQgdGVjaG5vbG9neSBjYW4gdXRpbGlzZSB0aGUgICBhdG1vc3BoZXJpYyBveHlnZW4gZHVyaW5nIHRoZWlyIGZsaWdodCAgIHRocm91Z2ggdGhlIGF0bW9zcGhlcmUgd2hpY2ggd2lsbCAgIGNvbnNpZGVyYWJseSByZWR1Y2UgdGhlIHRvdGFsIHByb3BlbGxhbnQgICByZXF1aXJlZCB0byBwbGFjZSBhIHNhdGVsbGl0ZSBpbiBvcmJpdC4gIFRoZSAgIFNjcmFtamV0IGVuZ2luZSBkZXNpZ25lZCBieSBJU1JPIHVzZXMgICBIeWRyb2dlbiBhcyBmdWVsIGFuZCB0aGUgT3h5Z2VuIGZyb20gdGhlICAgYXRtb3NwaGVyaWMgYWlyIGFzIHRoZSBveGlkaXNlci4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFJhbWpldHMgd29yayAgIG1vc3QgZWZmaWNpZW50bHkgYXQgc3VwZXJzb25pYyBzcGVlZHMgYXJvdW5kICAgTWFjaCAzIGFuZCBjYW4gb3BlcmF0ZSB1cCB0byBzcGVlZHMgb2YgICBNYWNoIDYuIEhvd2V2ZXIsIHRoZSByYW1qZXQgZWZmaWNpZW5jeSBzdGFydHMgICB0byBkcm9wIHdoZW4gdGhlIHZlaGljbGUgcmVhY2hlcyBoeXBlcnNvbmljICAgc3BlZWRzLiBBIHNjcmFtamV0IGVuZ2luZSBpcyBhbiAgIGltcHJvdmVtZW50IG92ZXIgdGhlIHJhbWpldCBlbmdpbmUgYXMgaXQgICBlZmZpY2llbnRseSBvcGVyYXRlcyBhdCBoeXBlcnNvbmljIHNwZWVkcyAgIGFuZCBhbGxvd3Mgc3VwZXJzb25pYyBjb21idXN0aW9uLiBUaHVzIGl0ICAgaXMga25vd24gYXMgU3VwZXJzb25pYyBDb21idXN0aW9uIFJhbWpldCwgICBvciBTY3JhbWpldC4gICBYLUZhY3RvciAgIFNvdXJjZTogICBodHRwczovL3d3dy5pc3JvLmdvdi5pbi9sYXVuY2hlcnMvaXNybyVFICAyJTgwJTk5cy1zY3JhbWpldC1lbmdpbmUtdGVjaG5vbG9neS0gIGRlbW9uc3RyYXRvci1zdWNjZXNzZnVsbHktZmxpZ2h0LXRlc3RlZCAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMyAgNCAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 2, 3 and 4   ",
        "option2" : "  1 and 4 only  ",
        "option3" : "  2, 3 and 4 only   ",
        "option4" : "  1, 2 and 3 only   "
      }
    },
    {
      "index" : 40,
      "question" : " Which of the following statements  about the Brahmos missile is/ are  correct?  1.  It is a supersonic ballistic missile  jointly developed by India and  Russia.  2.  The second stage of the missile is  based on ramjet propulsion  technology.  3.  It is the fastest missile in the world  in its class.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhbmQgMiBpcyBjb3JyZWN0OiAgIEJyYWhtb3MgaXMgYSBzdXBlcnNvbmljIGNydWlzZSBtaXNzaWxlLCAgIG5hbWVkIGFmdGVyIDIgcml2ZXJzIEJyYWhtYXB1dHJhIGFuZCAgIE1vc2t2YSBhbmQgaXMgam9pbnRseSBkZXZlbG9wZWQgYnkgSW5kaWEgYW5kICAgUnVzc2lhLiBJdCBpcyBhIHR3by1zdGFnZSBtaXNzaWxlIHdpdGggYSBzb2xpZCAgIHByb3BlbGxhbnQgYm9vc3RlciBlbmdpbmUgYXMgaXRzIGZpcnN0IHN0YWdlICAgd2hpY2ggYnJpbmdzIGl0IHRvIHN1cGVyc29uaWMgc3BlZWQgYW5kIHRoZW4gICBnZXRzIHNlcGFyYXRlZC4gVGhlIGxpcXVpZCByYW1qZXQgb3IgdGhlICAgc2Vjb25kIHN0YWdlIHRoZW4gdGFrZXMgdGhlIG1pc3NpbGUgY2xvc2VyICAgdG8gMyBNYWNoIHNwZWVkIGluIGNydWlzZSBwaGFzZS4gU3RlYWx0aCAgIHRlY2hub2xvZ3kgYW5kIGd1aWRhbmNlIHN5c3RlbSB3aXRoICAgYWR2YW5jZWQgZW1iZWRkZWQgc29mdHdhcmUgcHJvdmlkZXMgdGhlICAgbWlzc2lsZSB3aXRoIHNwZWNpYWwgZmVhdHVyZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIEJyYWhNb3MgICBtaXNzaWxlIGlzIHRoZSBmYXN0ZXN0IGNydWlzZSBtaXNzaWxlIGluIHRoZSAgIHdvcmxkIHdpdGggYSB0b3Agc3BlZWQgb2YgTWFjaCAyLjggKG5lYXJseSAgIHRocmVlIHRpbWVzIHRoZSBzcGVlZCBvZiBzb3VuZCkuICAgIFgtRmFjdG9yICAgQmFsbGlzdGljIHZzIENydWlzZSBNaXNzaWxlcyAgIFNvdXJjZTogICBodHRwczovL3d3dy5icmFobW9zLmNvbS9jb250ZW50LnBocD9pZCAgPTEwJnNpZD0xMCM6fjp0ZXh0PUJSQUhNT1MlMjBpcyUyMGEgICUyMHR3byUyRHN0YWdlLE1hY2glMjBzcGVlZCUyMGluJTIgIDBjcnVpc2UlMjBwaGFzZS4gICBodHRwczovL2JyYWhtb3MuY29tL2NvbnRlbnQucGhwP2lkPTEgICBodHRwczovL3d3dy5oaW5kdXN0YW50aW1lcy5jb20vaW5kaWEtICBuZXdzL2luZGlhLXN1Y2Nlc3NmdWxseS10ZXN0cy1uZXctICBicmFobW9zLXZlcnNpb24td2l0aC1oaWdoZXItaW5kaWdlbm91cy0gIGNvbnRlbnQtMTAxNjQyNjg0NTMwNzE5Lmh0bWwgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "   1, 2 an 3   "
      }
    },
    {
      "index" : 41,
      "question" : " Which of the following can be the  potential applications of Inflatable  Aerodynamic Decelerator (IAD),  successfully tested by ISRO recently?  1.  Recovery of spent stages of rocket  2.  For landing payloads on to Mars   3.  Making space habitat for human  space flight missions  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICBBbiBJbmZsYXRhYmxlIEFlcm9keW5hbWljIERlY2VsZXJhdG9yIChJQUQpLCAgIGRlc2lnbmVkIGFuZCBkZXZlbG9wZWQgYnkgVmlrcmFtIFNhcmFiaGFpICAgU3BhY2UgQ2VudHJlIHdhcyBzdWNjZXNzZnVsbHkgdGVzdCBmbG93biBpbiAgIGEgUm9oaW5pIHNvdW5kaW5nIHJvY2tldC4gVGhlIElBRCB3YXMgICBpbml0aWFsbHkgZm9sZGVkIGFuZCBrZXB0IGluc2lkZSB0aGUgcGF5bG9hZCAgIGJheSBvZiB0aGUgcm9ja2V0LiBBdCBhcm91bmQgODQga20gYWx0aXR1ZGUsICAgdGhlIElBRCB3YXMgaW5mbGF0ZWQgYW5kIGl0IGRlc2NlbmRlZCAgIHRocm91Z2ggdGhlIGF0bW9zcGhlcmUgd2l0aCB0aGUgcGF5bG9hZCAgIHBhcnQgb2YgYSBzb3VuZGluZyByb2NrZXQuICAgVGhlIElBRCBoYXMgaHVnZSBwb3RlbnRpYWwgaW4gYSB2YXJpZXR5IG9mICAgc3BhY2UgYXBwbGljYXRpb25zIGxpa2UgcmVjb3Zlcnkgb2Ygc3BlbnQgICBzdGFnZXMgb2Ygcm9ja2V0LCBmb3IgbGFuZGluZyBwYXlsb2FkcyBvbiAgIHRvIE1hcnMgb3IgVmVudXMgYW5kIGluIG1ha2luZyBzcGFjZSAgIGhhYml0YXQgZm9yIGh1bWFuIHNwYWNlIGZsaWdodCBtaXNzaW9ucy4gICBYLUZhY3RvciAgIO+CtyBWaWtyYW0gU2FyYWJoYWkgU3BhY2UgQ2VudHJlIChWU1NDKSwgICBUaGlydXZhbmFudGhhcHVyYW0sIGlzIHRoZSBsZWFkIGNlbnRyZSAgIG9mIElTUk8gcmVzcG9uc2libGUgZm9yIHRoZSBkZXNpZ24gYW5kICAgZGV2ZWxvcG1lbnQgb2YgbGF1bmNoIHZlaGljbGUgICB0ZWNobm9sb2d5LiAgICDvgrcgVGhlIG1ham9yIHByb2dyYW1tZXMgYXQgVlNTQyBpbmNsdWRlICAgUG9sYXIgU2F0ZWxsaXRlIExhdW5jaCBWZWhpY2xlIChQU0xWKSwgICBHZW9zeW5jaHJvbm91cyBTYXRlbGxpdGUgTGF1bmNoIFZlaGljbGUgICAoR1NMVikgYW5kIFJvaGluaSBTb3VuZGluZyBSb2NrZXRzIGFzICAgd2VsbCBhcyB0aGUgZGV2ZWxvcG1lbnQgb2YgICBHZW9zeW5jaHJvbm91cyBTYXRlbGxpdGUgTGF1bmNoIFZlaGljbGUgICAoR1NMVikgTWsgSWxsLCBSZXVzYWJsZSBMYXVuY2ggVmVoaWNsZXMsICAgYWR2YW5jZWQgdGVjaG5vbG9neSB2ZWhpY2xlcywgYWlyLSAgYnJlYXRoaW5nIHByb3B1bHNpb24gYW5kIGNyaXRpY2FsICAgdGVjaG5vbG9naWVzIHRvd2FyZHMgaHVtYW4gc3BhY2VmbGlnaHQuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnZzc2MuZ292LmluL2RlbW9uc3RyYXRlX25ldyAgX3RlY2hub2xvZ3kuaHRtbCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1, 2 and 3 ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1 only   "
      }
    },
    {
      "index" : 42,
      "question" : " Consider the following statements with  respect to National AYUSH Mission:   1.  It is a centrally sponsored scheme.  2.  AYUSH educational institutions  come under the purview of  Ministry of AYUSH.  Which of the statements given above  is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IERlcGFydG1lbnQgb2YgICBBWVVTSCwgTWluaXN0cnkgb2YgSGVhbHRoIGFuZCBGYW1pbHkgICBXZWxmYXJlLCBHb3Zlcm5tZW50IG9mIEluZGlhIGhhcyBsYXVuY2hlZCAgIE5hdGlvbmFsIEFZVVNIIE1pc3Npb24gKE5BTSkgYXMgYSAgIENlbnRyYWxseSBTcG9uc29yZWQgU2NoZW1lIGR1cmluZyAxMnRoICAgUGxhbiBmb3IgaW1wbGVtZW50aW5nIHRocm91Z2ggU3RhdGVzL1VUcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFB1YmxpYyBIZWFsdGggICBiZWluZyBhIFN0YXRlIHN1YmplY3QsIEFZVVNIIGVkdWNhdGlvbmFsICAgaW5zdGl0dXRpb25zIGNvbWUgdW5kZXIgdGhlIHB1cnZpZXcgb2YgICByZXNwZWN0aXZlIFN0YXRlL1VUIEdvdmVybm1lbnRzLiAgIFgtZmFjdG9yOiAgIO+CtyBBIGRlY2lzaW9uIHdhcyB0YWtlbiBvbiAzMHRoIEphbiwgMjAxOSAgIHRoYXQgYXQgbGVhc3QgMTIsNTAwIEhlYWx0aCBhbmQgV2VsbG5lc3MgICBDZW50cmVzIChIV0NzKSB1bmRlciBBeXVzaG1hbiBCaGFyYXQgICB3aWxsIGJlIHVwZ3JhZGVkIGJ5IHRoZSBNaW5pc3RyeSBvZiAgIEFZVVNILiAgICDvgrcgVGhlIFVuaW9uIENhYmluZXQgZHVyaW5nIGl0cyBtZWV0aW5nIG9uICAgMjB0aCBNYXJjaCwgMjAyMCBoYXMgYXBwcm92ZWQgdGhlICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGczICA1ICAgcHJvcG9zYWwgdG8gb3BlcmF0aW9uYWxpc2UgdGhlc2UgMTIsNTAwICAgQVlVU0ggSFdDcyB0aHJvdWdoIFN0YXRlcy9VVHMgaW4gICBDZW50cmFsbHkgU3BvbnNvcmVkIFNjaGVtZSBtb2RlIGFuZCAgIHVuZGVyIHRoZSBicm9hZCB1bWJyZWxsYSBvZiBOYXRpb25hbCAgIEFZVVNIIE1pc3Npb24gKE5BTSkgaW4gYSBwaGFzZWQgICBtYW5uZXIgYnkgMjAyMy0yNC4gICBTb3VyY2U6ICAgaHR0cHM6Ly9waWIuZ292LmluL25ld3NpdGUvUHJpbnRSZWxlYXNlLmFzICBweD9yZWxpZD0xMTM5NDEjOn46dGV4dD1JbnRyb2R1Y3Rpb24lM0EsZiAgb3IlMjBpbXBsZW1lbnRpbmclMjB0aHJvdWdoJTIwU3RhdGVzICAlMkZVVHMgICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlSWZyYW1lUGFnZS4gIGFzcHg/UFJJRD0xODQ3NDQ3ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : " Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2     43. Consider the following statements   about Virtual Private Network (VPN):  "
      }
    },
    {
      "index" : 1,
      "question" : " It provides a decrypted connection  over the Internet from a device to  a network.  2.  The unautorised third party can  get access to sensitive data  transmitted through VPN.  3.  Smartphones and tablets cannot  connect through a VPN.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICBUaGUgc2lsaWNvbiBjaGlwLCBzb3VyY2VkIGZyb20gc2lsaWNhIChhbmQgICBieSBleHRlbnNpb24gc2FuZCkgaXMgdGhlIGZvdW5kYXRpb24gb2YgICB0aGUgc2VtaWNvbmR1Y3RvciBpbmR1c3RyeSBhbmQgICBjb25zdGl0dXRlIHRoZSBzaW5ld3Mgb2YgdGhlIGluZm9ybWF0aW9uICAgdGVjaG5vbG9neSBpbmZyYXN0cnVjdHVyZS4gICBXaGlsZSBzaWxpY29uJ3Mgc3RydWN0dXJlIGlzIGV4dHJlbWVseSAgIGNvbmR1Y2l2ZSB0byBlbGVjdHJvbnMsIGl0IGlzIG11Y2ggbGVzcyAgIGFjY29tbW9kYXRpbmcgdG8gJ2hvbGVzJyAtIGVsZWN0cm9ucycgICBwb3NpdGl2ZWx5IGNoYXJnZWQgY291bnRlcnBhcnRzIC0gYW5kICAgaGFybmVzc2luZyBib3RoIGlzIGltcG9ydGFudCBmb3Igc29tZSBraW5kcyAgIG9mIGNoaXBzLiBTaWxpY29uIGlzIG5vdCB2ZXJ5IGdvb2QgYXQgICBjb25kdWN0aW5nIGhlYXQsIHdoaWNoIGlzIHdoeSBvdmVyaGVhdGluZyAgIGlzc3VlcyBhbmQgZXhwZW5zaXZlIGNvb2xpbmcgc3lzdGVtcyBhcmUgICBjb21tb24gaW4gY29tcHV0ZXJzLiAgIFNpbGljb24gaGFzIGdvb2QgZWxlY3Ryb24gbW9iaWxpdHkgYnV0ICAgcG9vciBob2xlIG1vYmlsaXR5LCBhbmQgb3RoZXIgbWF0ZXJpYWxzICAgc3VjaCBhcyBnYWxsaXVtIGFyc2VuaWRlLCB3aWRlbHkgdXNlZCBmb3IgICBsYXNlcnMsIHNpbWlsYXJseSBoYXZlIGdvb2QgbW9iaWxpdHkgZm9yICAgZWxlY3Ryb25zIGJ1dCBub3QgZm9yIGhvbGVzLiAgIEVtZXJnaW5nIHJlc2VhcmNoIHNob3dzIHRoYXQgYSBtYXRlcmlhbCAgIGtub3duIGFzIGN1YmljIGJvcm9uIGFyc2VuaWRlIG92ZXJjb21lcyAgIGJvdGggb2YgdGhlc2UgbGltaXRhdGlvbnMuIEl0IHByb3ZpZGVzIGhpZ2ggICBtb2JpbGl0eSB0byBib3RoIGVsZWN0cm9ucyBhbmQgaG9sZXMsIGFuZCAgIGhhcyBleGNlbGxlbnQgdGhlcm1hbCBjb25kdWN0aXZpdHkuICAgIFgtRmFjdG9yOiAgIO+CtyBUaGUgY29tcG9zaXRpb24gb2YgZS13YXN0ZSBpcyB2ZXJ5IGRpdmVyc2UgICBhbmQgZGlmZmVycyBpbiBwcm9kdWN0cyBhY3Jvc3MgZGlmZmVyZW50ICAgY2F0ZWdvcmllcy4gSXQgY29udGFpbnMgbW9yZSB0aGFuIDEwMDAgICBkaWZmZXJlbnQgc3Vic3RhbmNlcywgd2hpY2ggZmFsbCB1bmRlciAgICdoYXphcmRvdXMnIGFuZCAnbm9uLWhhemFyZG91cycgICBjYXRlZ29yaWVzLiAgICDvgrcgQnJvYWRseSwgaXQgY29uc2lzdHMgb2YgZmVycm91cyBhbmQgbm9uLSAgZmVycm91cyBtZXRhbHMsIHBsYXN0aWNzLCBnbGFzcywgd29vZCBhbmQgICBwbHl3b29kLCBwcmludGVkIGNpcmN1aXQgYm9hcmRzIChQQ0IpLCAgIGNvbmNyZXRlIGFuZCBjZXJhbWljcywgcnViYmVyIGFuZCBvdGhlciAgIGl0ZW1zLiAgIO+CtyBJcm9uIGFuZCBzdGVlbCBjb25zdGl0dXRlIGFib3V0IDUwJSBvZiB0aGUgICBFLXdhc3RlIGZvbGxvd2VkIGJ5IHBsYXN0aWNzICgyMSUpLCBub24tICBmZXJyb3VzIG1ldGFscyAoMTMlKSBhbmQgb3RoZXIgICBjb25zdGl0dWVudHMuICAgIO+CtyBOb24tZmVycm91cyBtZXRhbHMgY29uc2lzdCBvZiBtZXRhbHMgbGlrZSAgIGNvcHBlciAoQ3UpLCBhbHVtaW5pdW0gKEFsKSBhbmQgcHJlY2lvdXMgICBtZXRhbHMsIGUuZy4sIHNpbHZlciAoQWcpLCBnb2xkIChBdSksICAgcGxhdGludW0sIHBhbGxhZGl1bSwgZXRjLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2gvc2NpZW5jZS9hcmUtdGhlcmUtYmV0dGVyLSAgc2VtaWNvbmR1Y3RvcnMtdGhhbi0gIHNpbGljb24vYXJ0aWNsZTY1Njg4NTI1LmVjZSAgICAgaHR0cHM6Ly9wdWJjaGVtLm5jYmkubmxtLm5paC5nb3YvY29tcG8gIHVuZC9IZXB0YWNobG9yICAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tL3NjaWVuY2UvcGx1dG8gIG5pdW0gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only   \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b   TEST - 9008 ( )    www.    t.me/  Pa  g8  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1, 2, and 3  ",
        "option4" : "  None of the above   "
      }
    },
    {
      "index" : 44,
      "question" : " Consider the following statements  about the Aditya mission of ISRO.  1.  It is a mission to study the Sun's  corona.  2.  The Aditya satellite will be located  in the low earth orbit (LEO).  3. The onboard magnetometer  payload will work best outside the  influence of earths' magnetic field.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYW5kIDIgaXMgaW5jb3JyZWN0LiAgIEFkaXR5YS1MMSBpcyBJbmRpYSdzIGZpcnN0IGRlZGljYXRlZCAgIHNjaWVudGlmaWMgbWlzc2lvbiB0byBzdHVkeSB0aGUgU3VuLiAgIEVhcmxpZXIsIHRoaXMgbWlzc2lvbiB3YXMgY29uY2VpdmVkIGFzICAgQWRpdHlhLTEgd2l0aCBhIDQwMCBrZyBjbGFzcyBzYXRlbGxpdGUgICBjYXJyeWluZyBvbmUgcGF5bG9hZCBvbmx5LCB0aGUgVmlzaWJsZSAgIEVtaXNzaW9uIExpbmUgQ29yb25hZ3JhcGggKFZFTEMpIGFuZCB3YXMgICBwbGFubmVkIHRvIGJlIGxhdW5jaGVkIGluIGEgODAwIGttIGxvdyAgIGVhcnRoIG9yYml0LiBCdXQgbm93IHdpdGggYWRkaXRpb25hbCAgIHBheWxvYWRzIHRoZSBzYXRlbGxpdGUgd2lsbCBiZSBwbGFjZWQgaW4gdGhlICAgaGFsbyBvcmJpdCBhcm91bmQgdGhlIGZpcnN0IExhZ3JhbmdpYW4gICBwb2ludCAoTDEpIG9mIHRoZSBTdW4tRWFydGggc3lzdGVtIHdoaWNoICAgaXMgMS41IG1pbGxpb24ga20gZnJvbSB0aGUgRWFydGggdG93YXJkcyB0aGUgICBTdW4uICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQWRpdHlhLUwxIHdpdGggICBhZGRpdGlvbmFsIHBheWxvYWRzIHdpbGwgcHJvdmlkZSBvYnNlcnZhdGlvbnMgICBvZiB0aGUgU3VuJ3MgQ29yb25hLCBDaHJvbW9zcGhlcmUgYW5kICAgcGhvdG9zcGhlcmUuIEluIGFkZGl0aW9uLCBwYXJ0aWNsZSAgIHBheWxvYWRzIHdpbGwgc3R1ZHkgdGhlIHBhcnRpY2xlIGZsdXggICBlbWFuYXRpbmcgZnJvbSB0aGUgU3VuIGFuZCByZWFjaGluZyB0aGUgICBMMSBvcmJpdCwgYW5kIHRoZSBtYWduZXRvbWV0ZXIgcGF5bG9hZCB3aWxsICAgbWVhc3VyZSB0aGUgdmFyaWF0aW9uIGluIG1hZ25ldGljIGZpZWxkICAgc3RyZW5ndGggYXQgdGhlIGhhbG8gb3JiaXQgYXJvdW5kIEwxLiBUaGVzZSAgIHBheWxvYWRzIGhhdmUgdG8gYmUgcGxhY2VkIG91dHNpZGUgdGhlICAgaW50ZXJmZXJlbmNlIGZyb20gdGhlIEVhcnRoJ3MgbWFnbmV0aWMgICBmaWVsZCBhbmQgY291bGQgbm90IGhhdmUgYmVlbiB1c2VmdWwgaW4gICBsb3cgZWFydGggb3JiaXQuICAgWC1GYWN0b3IgICBUaGUgc29sYXIgY3ljbGUgaXMgdGhlIGN5Y2xlIHRoYXQgdGhlIFN1bidzICAgbWFnbmV0aWMgZmllbGQgZ29lcyB0aHJvdWdoIGFwcHJveGltYXRlbHkgICBldmVyeSAxMSB5ZWFycy4gICBFdmVyeSAxMSB5ZWFycyBvciBzbywgdGhlIFN1bidzIG1hZ25ldGljICAgZmllbGQgY29tcGxldGVseSBmbGlwcy4gVGhpcyBtZWFucyB0aGF0IHRoZSAgIFN1bidzIG5vcnRoIGFuZCBzb3V0aCBwb2xlcyBzd2l0Y2ggcGxhY2VzLiAgIFRoZW4gaXQgdGFrZXMgYWJvdXQgYW5vdGhlciAxMSB5ZWFycyBmb3IgdGhlICAgU3VuJ3Mgbm9ydGggYW5kIHNvdXRoIHBvbGVzIHRvIGZsaXAgYmFjayAgIGFnYWluLiAgIFRoZSBzb2xhciBjeWNsZSBhZmZlY3RzIGFjdGl2aXR5IG9uIHRoZSBzdXJmYWNlICAgb2YgdGhlIFN1biwgc3VjaCBhcyBzdW5zcG90cyB3aGljaCBhcmUgICBjYXVzZWQgYnkgdGhlIFN1bidzIG1hZ25ldGljIGZpZWxkcy4gQXMgdGhlICAgbWFnbmV0aWMgZmllbGRzIGNoYW5nZSwgc28gZG9lcyB0aGUgYW1vdW50ICAgb2YgYWN0aXZpdHkgb24gdGhlIFN1bidzIHN1cmZhY2UuICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGczICA2ICAgU291cmNlOiBodHRwczovL3d3dy5pc3JvLmdvdi5pbi9hZGl0eWEtbDEtICBmaXJzdC1pbmRpYW4tbWlzc2lvbi10by1zdHVkeS0gICBzdW4jOn46dGV4dD1UaGUlMjBBZGl0eWElMkQxJTIwbWlzc2lvICBuJTIwd2FzLDgwMCUyMGttJTIwbG93JTIwZWFydGglMjAgIG9yYml0ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1, 2, and 3 ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 45,
      "question" : "The term ARHGAP11B is often  mentioned in the news is related to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBPcHRpb24gKGIpIGlzIGNvcnJlY3QuICAgQVJIR0FQMTFCIC0tIHRoaXMgY29tcGxleCBuYW1lIGlzIGdpdmVuICAgdG8gYSBnZW5lIHRoYXQgaXMgdW5pcXVlIHRvIGh1bWFucyBhbmQgICBwbGF5cyBhbiBlc3NlbnRpYWwgcm9sZSBpbiB0aGUgZGV2ZWxvcG1lbnQgICBvZiB0aGUgbmVvY29ydGV4LiBUaGUgbmVvY29ydGV4IGlzIHRoZSAgIHBhcnQgb2YgdGhlIGJyYWluIHRvIHdoaWNoIHdlIG93ZSBvdXIgaGlnaCAgIG1lbnRhbCBhYmlsaXRpZXMuICAgIEEgdGVhbSBvZiByZXNlYXJjaGVycyBmcm9tIHRoZSBHZXJtYW4gICBQcmltYXRlIENlbnRlciAoRFBaKSAtLSBMZWlibml6IEluc3RpdHV0ZSBmb3IgICBQcmltYXRlIFJlc2VhcmNoIGluIEfDtnR0aW5nZW4sIHRoZSBNYXggICBQbGFuY2sgSW5zdGl0dXRlIGZvciBNb2xlY3VsYXIgQ2VsbCBCaW9sb2d5ICAgYW5kIEdlbmV0aWNzIChNUEktQ0JHKSBpbiBEcmVzZGVuLCBhbmQgdGhlICAgSGVjdG9yIEluc3RpdHV0ZSBmb3IgVHJhbnNsYXRpb25hbCBCcmFpbiAgIFJlc2VhcmNoIChISVRCUikgaW4gTWFubmhlaW0gaGFzICAgaW52ZXN0aWdhdGVkIHRoZSBpbXBvcnRhbmNlIG9mIEFSSEdBUDExQiAgIGluIG5lb2NvcnRleCBkZXZlbG9wbWVudCBkdXJpbmcgaHVtYW4gICBldm9sdXRpb24uICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnNjaWVuY2VkYWlseS5jb20vcmVsZWFzZXMvMjAgIDIyLzA5LzIyMDkxMzExMDMzNy5odG0gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  A supermassive black hole.  ",
        "option2" : "  A human's gene.  ",
        "option3" : "  New missile developed by Russia  ",
        "option4" : "  India's new Supercomputer   "
      }
    },
    {
      "index" : 46,
      "question" : " Consider the following statements with  respect to Indian Antarctic program.:  1.  It is entirely managed by the  National Centre for Polar and  Ocean Research.   2.  No woman scientist has ever been  the part of Indian Antarctica  expedition.  3.  Himadri was the first permanent  research station located at  Antarctica.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBOYXRpb25hbCAgIENlbnRyZSBmb3IgUG9sYXIgYW5kIE9jZWFuIFJlc2VhcmNoICAgKE5DUE9SKSwgR29hLCBtYW5hZ2VzIHRoZSBlbnRpcmUgSW5kaWFuICAgQW50YXJjdGljIHByb2dyYW0uICAgIFRoZSA0MXN0IEluZGlhbiBTY2llbnRpZmljIEV4cGVkaXRpb24gdG8gICBBbnRhcmN0aWNhIGxhdW5jaGVkIGZyb20gTmF0aW9uYWwgQ2VudHJlICAgZm9yIFBvbGFyIGFuZCBPY2VhbiBSZXNlYXJjaCAoTkNQT1IpLCBHb2EgICBvbiBOb3ZlbWJlciAxNSwgMjAyMS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEEgc3RydWN0dXJhbCAgIGdlb2xvZ2lzdCwgU3VkaXB0YSBTZW5ndXB0YSwgd2hvIHdhcyBvbmUgb2YgICB0aGUgZmlyc3QgSW5kaWFuIHdvbWFuIHRvIGRvIHJlc2VhcmNoIGluICAgQW50YXJjdGljYSBhbmQgaGVscGVkIGVzdGFibGlzaCBJbmRpYSdzICAgcGVybWFuZW50IHJlc2VhcmNoIHN0YXRpb24uICAgVGhlIEluZGlhbiBBbnRhcmN0aWMgcHJvZ3JhbW1lIGhhcyBub3cgICBjcmVkaXRlZCB0byBoYXZlIGJ1aWx0IHRocmVlIHBlcm1hbmVudCAgIHJlc2VhcmNoIGJhc2UgW05vdCBzdXBwbHkgYmFzZV0gc3RhdGlvbnMgaW4gICBBbnRhcmN0aWNhLW5hbWVkIERha3NoaW4gR2FuZ290cmksICAgTWFpdHJpLCBhbmQgQmhhcmF0aS4gQXMgb2YgdG9kYXksIEluZGlhIGhhcyAgIHR3byBvcGVyYXRpb25hbCByZXNlYXJjaCBzdGF0aW9ucyBpbiAgIEFudGFyY3RpY2EgbmFtZWQgTWFpdHJpIGFuZCBCaGFyYXRpLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogSGltYWRyaSBpcyAgIEluZGlhJ3MgZmlyc3QgcGVybWFuZW50IEFyY3RpYyByZXNlYXJjaCAgIHN0YXRpb24gbG9jYXRlZCBhdCBTcGl0c2JlcmdlbiwgU3ZhbGJhcmQsICAgTm9yd2F5LiAgIFNvdXJjZTogICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NyZWxlYXNlc2hhcmUuYXNweD8gIFBSSUQ9MTY4NTk3OCAgICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZXNlRGV0YWlsLmFzcHg/ICBQUklEPTE3ODYwNTIgICAgaHR0cHM6Ly9tZWRpdW0uY29tL3NjaS1pbGx1c3RyYXRlLSAgc3Rvcmllcy9zdWRpcHRhLXNlbmd1cHRhLTQ2ZjRhN2VkNDQxYyAgICBodHRwczovL3d3dy50aGViZXR0ZXJpbmRpYS5jb20vMjgwMzM4LyAgbW91bnRhaW5lZXItZ2VvbG9naXN0LXN1ZGlwdGEtc2VuZ3VwdGEtICBsYWxhbmEtYW5hcmN0aWNhLWZpcnN0LWluZGlhbi13b21hbi0gIGluc3BpcmluZy8gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  1 only  ",
        "option3" : "  2 and 3  ",
        "option4" : "  1, 2 an 3   "
      }
    },
    {
      "index" : 47,
      "question" : " Consider the following statements  about stem cells.  1.  Embryonic stem cells made from  in vitro fertilization are  pluripotent.  2.  Recently scientists have developed  an induced pluripotent stem cell  that can be transformed into every  kind of cell and tissue.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBlbWJyeW9uaWMgICBzdGVtIGNlbGxzIHVzZWQgaW4gcmVzZWFyY2ggdG9kYXkgY29tZSBmcm9tICAgdW51c2VkIGVtYnJ5b3MuIFRoZXNlIHJlc3VsdCBmcm9tIGFuIGluICAgdml0cm8gZmVydGlsaXNhdGlvbiBwcm9jZWR1cmUuIFRoZXNlICAgZW1icnlvbmljIHN0ZW0gY2VsbHMgYXJlIHBsdXJpcG90ZW50LiAgIFRoaXMgbWVhbnMgdGhhdCB0aGV5IGNhbiB0dXJuIGludG8gbW9yZSAgIHRoYW4gb25lIHR5cGUgb2YgY2VsbC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZXJlIGFyZSAyIHR5cGVzICAgb2YgYWR1bHQgc3RlbSBjZWxscy4gT25lIHR5cGUgY29tZXMgZnJvbSAgIGZ1bGx5IGRldmVsb3BlZCB0aXNzdWVzIHN1Y2ggYXMgdGhlIGJyYWluLCAgIHNraW4sIGFuZCBib25lIG1hcnJvdy4gVGhlcmUgYXJlIG9ubHkgc21hbGwgICBudW1iZXJzIG9mIHN0ZW0gY2VsbHMgaW4gdGhlc2UgdGlzc3Vlcy4gVGhleSAgIGFyZSBtb3JlIGxpa2VseSB0byBnZW5lcmF0ZSBvbmx5IGNlcnRhaW4gdHlwZXMgICBvZiBjZWxscy4gRm9yIGV4YW1wbGUsIGEgc3RlbSBjZWxsIHRoYXQgY29tZXMgICBmcm9tIHRoZSBsaXZlciB3aWxsIG9ubHkgbWFrZSBtb3JlIGxpdmVyIGNlbGxzLiAgIFRoZSBzZWNvbmQgdHlwZSBpcyBpbmR1Y2VkIHBsdXJpcG90ZW50ICAgc3RlbSBjZWxscy4gVGhlc2UgYXJlIGFkdWx0IHN0ZW0gY2VsbHMgdGhhdCAgIGhhdmUgYmVlbiBjaGFuZ2VkIGluIGEgbGFiIHRvIGJlIG1vcmUgbGlrZSAgIGVtYnJ5b25pYyBzdGVtIGNlbGxzLiBJbmR1Y2VkIHBsdXJpcG90ZW50ICAgc3RlbSBjZWxscyBkb24ndCBzZWVtIHRvIGJlIGRpZmZlcmVudCBmcm9tICAgZW1icnlvbmljIHN0ZW0gY2VsbHMsIGJ1dCBzY2llbnRpc3RzIGhhdmUgICBub3QgeWV0IGZvdW5kIG9uZSB0aGF0IGNhbiBkZXZlbG9wIGV2ZXJ5ICAga2luZCBvZiBjZWxsIGFuZCB0aXNzdWUuICAgWC1GYWN0b3IgICBYZW5vdHJhbnNwbGFudGF0aW9uIGlzIGFueSBwcm9jZWR1cmUgdGhhdCAgIGludm9sdmVzIHRoZSB0cmFuc3BsYW50YXRpb24sIGltcGxhbnRhdGlvbiBvciAgIGluZnVzaW9uIGludG8gYSBodW1hbiByZWNpcGllbnQgb2YgZWl0aGVyIChhKSAgIGxpdmUgY2VsbHMsIHRpc3N1ZXMsIG9yIG9yZ2FucyBmcm9tIGEgICBub25odW1hbiBhbmltYWwgc291cmNlLCBvciAoYikgaHVtYW4gICBib2R5IGZsdWlkcywgY2VsbHMsIHRpc3N1ZXMgb3Igb3JnYW5zIHRoYXQgaGF2ZSAgIGhhZCBleCB2aXZvIGNvbnRhY3Qgd2l0aCBsaXZlIG5vbmh1bWFuICAgYW5pbWFsIGNlbGxzLCB0aXNzdWVzIG9yIG9yZ2Fucy4gVGhlICAgZGV2ZWxvcG1lbnQgb2YgeGVub3RyYW5zcGxhbnRhdGlvbiBpcywgaW4gICBwYXJ0LCBkcml2ZW4gYnkgdGhlIGZhY3QgdGhhdCB0aGUgZGVtYW5kIGZvciAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMyAgNyAgIGh1bWFuIG9yZ2FucyBmb3IgY2xpbmljYWwgdHJhbnNwbGFudGF0aW9uICAgZmFyIGV4Y2VlZHMgdGhlIHN1cHBseS4gICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnN0YW5mb3JkY2hpbGRyZW5zLm9yZy9lbiBvcGkgIGMvZGVmYXVsdD9pZD13aGF0LWFyZS1zdGVtLWNlbGxzLTE2MC0zOCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "   Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 48,
      "question" : " The Nobel prize 2021 for Medicine or  Physiology was awarded for which of  the following ground breaking  research?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYykgaXMgY29ycmVjdC4gICBUaGUgTm9iZWwgUHJpemUgaW4gUGh5c2lvbG9neSBvciBNZWRpY2luZSAgIDIwMjEgd2FzIGpvaW50bHkgYXdhcmRlZCB0byBEYXZpZCBKdWxpdXMgICBhbmQgQXJkZW0gUGF0YXBvdXRpYW4gJ2ZvciB0aGVpciBkaXNjb3ZlcmllcyAgIG9mIHJlY2VwdG9ycyBmb3IgdGVtcGVyYXR1cmUgYW5kIHRvdWNoJy4gICBUaGV5IGRpc2NvdmVyZWQgdGhlIG1vbGVjdWxhciBiYXNlcyBvZiBob3cgICBuZXJ2ZXMgY29udmVydCBzdGltdWxpLXRoZSBidXJuIG9mIGEgY2hpbGkgICBwZXBwZXIsIG9yIHRoZSBzb2Z0IHByZXNzdXJlIG9mIGEgaHVnLWludG8gICBzaWduYWxzIHRoYXQgY2FuIGJlIHNlbnNlZCBieSB0aGUgYnJhaW4uICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lm5vYmVscHJpemUub3JnL3ByaXplcy9saXN0cy9hbGwgIC1ub2JlbC1sYXVyZWF0ZXMtaW4tcGh5c2lvbG9neS1vci0gIG1lZGljaW5lLyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  For their discoveries of how cells   sense and adapt to oxygen   availability  ",
        "option2" : "  For the discovery of Hepatitis C   virus  ",
        "option3" : "  For their discoveries of receptors   for temperature and touch.  ",
        "option4" : "  For their discoveries of molecular   mechanisms controlling the   circadian rhythm   "
      }
    },
    {
      "index" : 49,
      "question" : " The term 'fiberisation' recently seen in  the news refers to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogICBJbmRpYSBpcyBwcmVwYXJpbmcgdG8gYXVjdGlvbiBvZmYgb2YgYWlyd2F2ZXMgICB0byByb2xsb3V0IDVHIHNlcnZpY2VzIGluIHRoZSBjb3VudHJ5LiAgIEhvd2V2ZXIsIHRoZSBpbmZyYXN0cnVjdHVyZSBuZWVkZWQgZm9yIHN1Y2ggICBhIHJvbGxvdXQgcmVxdWlyZXMgZXhpc3RpbmcgcmFkaW8gdG93ZXJzIHRvIGJlICAgY29ubmVjdGVkIHZpYSBvcHRpY2FsLWZpYnJlIGNhYmxlcy4gVGhlICAgcHJvY2VzcyBvZiBjb25uZWN0aW5nIHJhZGlvIHRvd2VycyB3aXRoICAgZWFjaCBvdGhlciB2aWEgb3B0aWNhbCBmaWJyZSBjYWJsZXMgaXMgICBjYWxsZWQgZmliZXJpc2F0aW9uLiBJdCBoZWxwcyBwcm92aWRlIGZ1bGwgICB1dGlsaXNhdGlvbiBvZiBuZXR3b3JrIGNhcGFjaXR5LCBhbmQgY2FycnkgICBsYXJnZSBhbW91bnRzIG9mIGRhdGEgb25jZSA1RyBzZXJ2aWNlcyBhcmUgICByb2xsZWQgb3V0LiBJdCB3aWxsIGFsc28gYWlkIGluIHByb3ZpZGluZyAgIGFkZGl0aW9uYWwgYmFuZHdpZHRoIGFuZCBzdHJvbmdlciBiYWNraGF1bCAgIHN1cHBvcnQuIFRoZSBiYWNraGF1bCBpcyBhIGNvbXBvbmVudCBvZiB0aGUgICBsYXJnZXIgdHJhbnNwb3J0IHRoYXQgaXMgcmVzcG9uc2libGUgZm9yICAgY2FycnlpbmcgZGF0YSBhY3Jvc3MgdGhlIG5ldHdvcmsuIEl0ICAgcmVwcmVzZW50cyB0aGUgcGFydCBvZiB0aGUgbmV0d29yayB0aGF0ICAgY29ubmVjdHMgdGhlIGNvcmUgb2YgdGhlIG5ldHdvcmsgdG8gdGhlIGVkZ2UuICAgWC1GYWN0b3I6ICAg74K3IEZpYnJlLWJhc2VkIG1lZGlhLCBjb21tb25seSBjYWxsZWQgICBvcHRpY2FsIG1lZGlhLCBwcm92aWRlcyBhbG1vc3QgaW5maW5pdGUgICBiYW5kd2lkdGggYW5kIGNvdmVyYWdlLCBsb3cgbGF0ZW5jeSBhbmQgICBoaWdoIGluc3VsYXRpb24gZnJvbSBpbnRlcmZlcmVuY2UuICAgIO+CtyBXaXRoIDVHLCBpdCB3aWxsIGFsc28gYmUgbmVjZXNzYXJ5IHRvICAgaW5jcmVhc2UgdGhlIGRlbnNpdHkgb2YgbW9iaWxlIHRvd2VycyB0byAgIHByb3ZpZGUgYmV0dGVyIGNvdmVyYWdlIHRvIGNvbnN1bWVycyBhbmQgICBidXNpbmVzc2VzLiAgIO+CtyBHb3Zlcm5tZW50IHByb2dyYW1tZXMgbGlrZSBCaGFyYXROZXQgICBhbmQgU21hcnQgQ2l0aWVzIHdpbGwgZnVydGhlciBhZGQgdG8gdGhlICAgZGVtYW5kIG9mIGZpYnJlIGRlcGxveW1lbnQsICAgbmVjZXNzaXRhdGluZyBhIGNvbXBsZXRlIHRvd2VyICAgZmliZXJpc2F0aW9uLiAgIFNvdXJjZTpodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLSAgdGVjaCBlY2hub2xvZ3kvZmliZXJpc2F0aW9uLWZvci01Zy0gIGRlcGxveW1lbnQvYXJ0aWNsZTY1Njc3OTE0LmVjZSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  The process of connecting radio   towers through optical fibre   cables.  ",
        "option2" : "  The production of acrylic fibre   fabrics from acrylonitrile polymer.  ",
        "option3" : "  The practice of deliberately   increasing micronutrients in   condiments.  ",
        "option4" : " The reduction of diet-related non-  communicable diseases.   "
      }
    },
    {
      "index" : 50,
      "question" : " Consider the following statements:  1.  Natural gas cannot be stored  under high pressure due to its  corrosive nature.  2. Butane is the largest component  of Natural gas.  3.  Petrochemicals are used in the  manufacture of detergents,  polyester and nylon.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBOYXR1cmFsIGdhcyBpcyBhIHZlcnkgaW1wb3J0YW50IGZvc3NpbCBmdWVsICAgYmVjYXVzZSBpdCBpcyBlYXN5IHRvIHRyYW5zcG9ydCB0aHJvdWdoICAgcGlwZXMuIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogTmF0dXJhbCAgIGdhcyBpcyBzdG9yZWQgdW5kZXIgaGlnaCBwcmVzc3VyZSBhcyAgIGNvbXByZXNzZWQgbmF0dXJhbCBnYXMgKENORykuIENORyBpcyAgIHVzZWQgZm9yIHBvd2VyIGdlbmVyYXRpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OlRoZSBsYXJnZXN0ICAgY29tcG9uZW50IG9mIG5hdHVyYWwgZ2FzIGlzIG1ldGhhbmUsIGEgICBjb21wb3VuZCB3aXRoIG9uZSBjYXJib24gYXRvbSBhbmQgZm91ciAgIGh5ZHJvZ2VuIGF0b21zIChDSDQpLiBOYXR1cmFsIGdhcyBhbHNvICAgY29udGFpbnMgc21hbGxlciBhbW91bnRzIG9mIG5hdHVyYWwgZ2FzICAgbGlxdWlkcyAoTkdMcywgd2hpY2ggYXJlIGFsc28gaHlkcm9jYXJib24gICBnYXMgbGlxdWlkcyksIGFuZCBub25oeWRyb2NhcmJvbiBnYXNlcywgICBzdWNoIGFzIGNhcmJvbiBkaW94aWRlIGFuZCB3YXRlciB2YXBvciAgIFN0YXRlbWVudHMgMyBpcyBjb3JyZWN0OiBNYW55IHVzZWZ1bCAgIHN1YnN0YW5jZXMgYXJlIG9idGFpbmVkIGZyb20gcGV0cm9sZXVtIGFuZCAgIG5hdHVyYWwgZ2FzLiBUaGVzZSBhcmUgdGVybWVkIGFzICAgJ1BldHJvY2hlbWljYWxzJy4gVGhlc2UgYXJlIHVzZWQgaW4gdGhlICAgbWFudWZhY3R1cmUgb2YgZGV0ZXJnZW50cywgZmlicmVzICAgKHBvbHllc3Rlciwgbnlsb24sIGFjcnlsaWMgZXRjLiksIHBvbHl0aGVuZSAgIGFuZCBvdGhlciBtYW4tbWFkZSBwbGFzdGljcy4gICAgSHlkcm9nZW4gZ2FzIG9idGFpbmVkIGZyb20gbmF0dXJhbCBnYXMsIGlzICAgdXNlZCBpbiB0aGUgcHJvZHVjdGlvbiBvZiBmZXJ0aWxpc2VycyAodXJlYSkuICAgRHVlIHRvIGl0cyBncmVhdCBjb21tZXJjaWFsIGltcG9ydGFuY2UsICAgcGV0cm9sZXVtIGlzIGFsc28gY2FsbGVkICdibGFjayBnb2xkJy4gICBYLUZhY3RvcjogICAgUG9seWVzdGVyIG9yIHBvbHlldGh5bGVuZSB0ZXJlcGh0aGFsYXRlICAgb3IgUEVUOiAoQUxTTyBpbiBVUFNDIDIwMjItUHQpICAg74K3IEl0IGlzIHRoZSBtb3N0IHVzZWQgdGhlcm1vcGxhc3RpYyBwb2x5bWVyICAgaW4gdGhlIHdvcmxkLiAgICDvgrcgSXQgaXMgdXNlZCB0byBtYWtlIGNsb3RoaW5nIGZpYmVycyBhbmQgICBwYWNrYWdpbmcgb2YgdGhlIHRleHRpbGUgcHJvZHVjdHMuICAg74K3IFRoZSBvdGhlciBwb3B1bGFyIHVzZSBvZiBQb2x5ZXN0ZXIgaXMgaW4gICBtYWtpbmcgcGxhc3RpYyBQRVQgYm90dGxlcy4gICAg74K3IEl0IGlzIGEgdHJhbnNwYXJlbnQgc2VtaS1jcnlzdGFsbGluZSAgIG1hdGVyaWFsIGhhdmluZyBhIGhpZ2ggYmFycmllciB0byAgIG1vaXN0dXJlLiAgICBBZHZhbnRhZ2VzOiBQRVQgaGFzIGdvb2QgY2hlbWljYWwgICByZXNpc3RhbmNlIGFuZCBkb2VzIG5vdCByZWFjdCB3aXRoIGZvb2RzIGFuZCAgIGxpcXVpZHMuICAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnMyAgOCAgIO+CtyBJdCBpcyBhbHNvIGEgc2hhdHRlci1wcm9vZiBtYXRlcmlhbCBhbmQgICBoZW5jZSBjYW4gcmVwbGFjZSBnbGFzcyB3aGVuIHVzZWQgdG8gICBtYWtlIGNvbnRhaW5lcnMuICAg74K3IFBvbHllc3RlciBpcyBhbHNvIGF2YWlsYWJsZSBpbiBhIGZpbGFtZW50ICAgZm9ybSB3aGljaCBjYW4gYmUgdXNlZCB3aXRoIDNEICAgcHJpbnRlcnMgdG8gY3JlYXRlIHByb3RvdHlwZXMgdXNpbmcgICBjb21wdXRlci1haWRlZCBkZXNpZ24gZmlsZXMuICAgIERpc2FkdmFudGFnZXM6IFBvbHllc3RlciBtaWdodCBiZSAgIHJlY3ljbGFibGUsIGJ1dCBpdCBpcyBub3QgYmlvLWRlZ3JhZGFibGUuICAgIO+CtyBQRVQgaXMgYXQgdGltZXMgc3VzY2VwdGlibGUgdG8gdGhlICAgcHJvY2VzcyBvZiBveGlkYXRpb24uIElmIGEgZm9vZCBpdGVtIHN1Y2ggICBhcyB3aW5lIG9yIGJlZXIgaXMgc3RvcmVkIGluIGEgUEVUICAgY29udGFpbmVyL2JvdHRsZSwgdGhlbiB0aGUgb3hpZGF0aW9uICAgbWlnaHQgYWN0dWFsbHkgZGVncmFkZSB0aGUgdGFzdGUgb2YgdGhlICAgYmV2ZXJhZ2UuICAgU291cmNlOiBOQ0VSVC4gVklJSSBTQ0lFTkNFLSBDSEFQVEVSLSAgNSwgUEFHRSBOTy02MCAgIGh0dHBzOi8vM2RpbnNpZGVyLmNvbS9wb2x5ZXN0ZXIvICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 51,
      "question" : " Consider the following statements:  1.  Polysaccharides are long chains of  proteins.  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g9 2.  Plant cell walls are essentially  made of monosaccharides.  3.  Paper made from plant pulp  comprises of cellulose.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFBvbHlzYWNjaGFyaWRlcyAgIGFyZSBsb25nIGNoYWlucyBvZiBzdWdhcnMuIFRoZXkgYXJlIHRocmVhZHMgICAobGl0ZXJhbGx5IGEgY290dG9uIHRocmVhZCkgY29udGFpbmluZyBkaWZmZXJlbnQgICBtb25vc2FjY2hhcmlkZXMgYXMgYnVpbGRpbmcgYmxvY2tzLiBGb3IgICBleGFtcGxlLCBjZWxsdWxvc2UgaXMgYSBwb2x5bWVyaWMgICBwb2x5c2FjY2hhcmlkZSBjb25zaXN0aW5nIG9mIG9ubHkgb25lIHR5cGUgICBvZiBtb25vc2FjY2hhcmlkZSBpLmUuLCBnbHVjb3NlLiBDZWxsdWxvc2UgaXMgICBhIGhvbW9wb2x5bWVyLiBTdGFyY2ggaXMgYSB2YXJpYW50IG9mIHRoaXMgICBidXQgcHJlc2VudCBhcyBhIHN0b3JlIGhvdXNlIG9mIGVuZXJneSBpbiAgIHBsYW50IHRpc3N1ZXMgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFBsYW50IGNlbGwgd2FsbHMgICBhcmUgbWFkZSBvZiBjZWxsdWxvc2Ugd2hpY2ggaXMgYSAgIHBvbHlzYWNjaGFyaWRlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFBhcGVyIG1hZGUgZnJvbSAgIHBsYW50IHB1bHAgYW5kIGNvdHRvbiBmaWJyZSBpcyBjZWxsdWxvc2ljLiAgIFRoZXJlIGFyZSBtb3JlIGNvbXBsZXggcG9seXNhY2NoYXJpZGVzICAgaW4gbmF0dXJlLiBUaGV5IGhhdmUgYXMgYnVpbGRpbmcgYmxvY2tzLCAgIGFtaW5vLXN1Z2FycyBhbmQgY2hlbWljYWxseSBtb2RpZmllZCAgIHN1Z2FycyAoZS5nLiwgZ2x1Y29zYW1pbmUsIE4tYWNldHlsICAgZ2FsYWN0b3NhbWluZSwgZXRjLikuIEV4b3NrZWxldG9ucyBvZiAgIGFydGhyb3BvZHMsIGZvciBleGFtcGxlLCBoYXZlIGEgY29tcGxleCAgIHBvbHlzYWNjaGFyaWRlIGNhbGxlZCBjaGl0aW4uIFRoZXNlIGNvbXBsZXggICBwb2x5c2FjY2hhcmlkZXMgYXJlIG1vc3RseSBob21vcG9seW1lcnMuICAgWC1GYWN0b3I6ICAgIO+CtyBQcm90ZWlucyBhcmUgcG9seXBlcHRpZGVzLiAgICDvgrcgVGhleSBhcmUgbGluZWFyIGNoYWlucyBvZiBhbWlubyBhY2lkcyAgIGxpbmtlZCBieSBwZXB0aWRlIGJvbmRzLiAgICDvgrcgRWFjaCBwcm90ZWluIGlzIGEgcG9seW1lciBvZiBhbWlubyAgIGFjaWRzLiAgIO+CtyBEaWV0YXJ5IHByb3RlaW5zIGFyZSB0aGUgc291cmNlIG9mICAgZXNzZW50aWFsIGFtaW5vIGFjaWRzLiAgIO+CtyAgVGhlcmVmb3JlLCBhbWlubyBhY2lkcyBjYW4gYmUgICBlc3NlbnRpYWwgb3Igbm9uLWVzc2VudGlhbC4gICDvgrcgUHJvdGVpbnMgY2Fycnkgb3V0IG1hbnkgZnVuY3Rpb25zIGluICAgbGl2aW5nIG9yZ2FuaXNtcywgc29tZSB0cmFuc3BvcnQgICBudXRyaWVudHMgYWNyb3NzIGNlbGwgbWVtYnJhbmUsICAgc29tZSBmaWdodCBpbmZlY3Rpb3VzIG9yZ2FuaXNtcywgICBzb21lIGFyZSBob3Jtb25lcyBldGMuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2tlYm8xPTkgIC0yMiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 2 only ",
        "option4" : "  1 an 3 only   "
      }
    },
    {
      "index" : 52,
      "question" : "With reference to bioplastics, consider  the following statements:  1.  These are made mainly from fossil  fuels.  2.  Bioplastics made from renewable  resources can be naturally  recycled by biological processes.  3.  Polyhydroxyalkanoates are eco- efficient bioplastics.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVW5saWtlICAgY29udmVudGlvbmFsIHBsYXN0aWNzIG1hZGUgZnJvbSBwZXRyb2xldW0sICAgYmlvcGxhc3RpY3MgYXJlIGRlcml2ZWQgZnJvbSByZW5ld2FibGUgICBiaW9tYXNzIHNvdXJjZXMgc3VjaCBhcyB2ZWdldGFibGUgZmF0cyBhbmQgICBvaWxzLCBjb3JuIHN0YXJjaCwgc3RyYXcsIHdvb2RjaGlwcywgICBzYXdkdXN0LCByZWN5Y2xlZCBmb29kIHdhc3RlIG9yIGZyb20gICBtaWNyb2JlIHN1Y2ggYXMgeWVhc3QuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFNvbWUgYmlvcGxhc3RpY3MgICBhcmUgYmlvZGVncmFkYWJsZSBvciBldmVuIGNvbXBvc3RhYmxlLCAgIHVuZGVyIHRoZSByaWdodCBjb25kaXRpb25zLiBCaW9wbGFzdGljcyBtYWRlICAgZnJvbSByZW5ld2FibGUgcmVzb3VyY2VzIGNhbiBiZSBuYXR1cmFsbHkgICByZWN5Y2xlZCBieSBiaW9sb2dpY2FsIHByb2Nlc3NlcywgdGh1cyAgIGxpbWl0aW5nIHRoZSB1c2Ugb2YgZm9zc2lsIGZ1ZWxzIGFuZCBwcm90ZWN0aW5nICAgdGhlIGVudmlyb25tZW50LiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiAgIFBvbHloeWRyb3h5YWxrYW5vYXRlcyAoUEhBcykgYXJlIGEgICBncm91cCBvZiBiaW9sb2dpY2FsbHkgc3ludGhlc2l6ZWQgICBwb2x5ZXN0ZXJzIHRoYXQgYXJlIGNvbnNpZGVyZWQgcHJvbWlzaW5nICAgZWNvLWVmZmljaWVudCBiaW9wbGFzdGljcyBiZWNhdXNlIHRoZXkgYXJlICAgYm90aCBiaW9iYXNlZCBhbmQgYmlvZGVncmFkYWJsZSwgdGh1cyAgIG1lZXRpbmcgdGhlIGNyaXRlcmlhIG9mIGEgY2xvc2VkIGxvb3AgbGlmZSAgIGN5Y2xlLiAgICBYLUZhY3RvcjogICAg74K3IFBvbHloeWRyb3h5YWxrYW5vYXRlcyAoUEhBcykgYXJlIGhpZ2hseSAgIHZlcnNhdGlsZSBiaW8tYmFzZWQgYW5kIGJpb2RlZ3JhZGFibGUgICBwb2x5bWVycy4gICDvgrcgUEhBIGNhbiBiZSB1c2VkIGluIHBhY2thZ2luZyBmaWxtcywgc3VjaCAgIGFzIGJhZ3MsIGNvbnRhaW5lcnMsIGFuZCBwYXBlciBjb2F0aW5ncy4gICAg74K3IFNwZWNpZmljYWxseSwgUEhBIGNhbiBiZSB1c2VkIGluIGZvb2QgICBwYWNrYWdpbmcgYXBwbGljYXRpb25zIGFzIGl0IHByZXNlbnRzIGFuICAgYXBwcm9wcmlhdGUgZ2FzIGFuZCB3YXRlciB2YXBvciBiYXJyaWVycyAgIHByb3BlcnRpZXMsIG1lY2hhbmljYWwgcHJvcGVydGllcywgYW5kICAgaGVhdCByZXNpc3RhbmNlLiAgIO+CtyBQSEEgcHJlc2VudHMgaGlnaCBveHlnZW4gYmFycmllciwgd2hpY2ggICBhbGxvd3MgdG8gaW5oaWJpdCB0aGUgZ3Jvd3RoIG9mIGFlcm9iaWMgICBiYWN0ZXJpYSBhbmQgdGhlIG94aWRhdGl2ZSBkZXRlcmlvcmF0aW9uIG9mICAgdW5zYXR1cmF0ZWQgZmF0dHkgYWNpZHMuICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGczICA5ICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tIG9waWNzL2UgIG5naW5lZXJpbmcvcG9seWh5ZHJveHlhbGthbm9hdGVzICAgaHR0cHM6Ly9ncmVlbmJ1c2luZXNzYnVyZWF1LmNvbS9ncmVlbi0gIHByYWN0aWNlcy9wcm9kdWN0cy81LXR5cGVzLW9mLSAgYmlvcGxhc3RpY3Mtc3RhcmNoLWNlbGx1bG9zZS1wcm90ZWluLSAgb3JnYW5pYy1hbGlwaGF0aWMtcG9seWVzdGVycy8gICBodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbSBvcGljcy9lICBuZ2luZWVyaW5nL2Jpb3BsYXN0aWNzICAgaHR0cHM6Ly93d3cucGxhc3RpY3NvdXBmb3VuZGF0aW9uLm9yZy8gIGVuL3BsYXN0aWMtcHJvYmxlbS93aGF0LWlzLSAgcGxhc3RpYy9iaW9wbGFzdGljcy8gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  3 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 53,
      "question" : " Consider the following statements:  1.  Antioxidants protect the body  against free radicals.  2.  Smoking and air pollution  generates free radicals in our  body.  3.  Human body needs external  source of antioxidants because it  can not be produced within  human body.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFudGlveGlkYW50cyBhcmUgICBjaGVtaWNhbCBjb21wb3VuZHMgdGhhdCBoZWxwIHRvIHByb3RlY3QgICBvdXIgYm9keSBhZ2FpbnN0IGFueSBkYW1hZ2UgY2F1c2VkIGJ5ICAgZnJlZSByYWRpY2Fscy4gICAgQW50aW94aWRhbnRzIG5ldXRyYWxpc2UgdGhlIGZyZWUgcmFkaWNhbHMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBmcmVlIHJhZGljYWxzICAgYXJlIGdlbmVyYXRlZCBpbiBvdXIgYm9keSBkdWUgdG8gc2V2ZXJhbCAgIGZhY3RvcnMgc3VjaCBhcyBzbW9raW5nLCBhaXIgcG9sbHV0aW9uIGFuZCAgIGludGVybmFsIGZhY3RvcnMgb2YgdGhlIGJvZHkuIFRoZSBmcmVlICAgcmFkaWNhbHMgYXJlIHBvdGVudGlhbCBhdHRhY2tlcnMgdGhhdCBtYXkgICBoYXJtIHRoZSBoZWFsdGh5IGNlbGxzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFlvdXIgYm9keSdzICAgY2VsbHMgbmF0dXJhbGx5IHByb2R1Y2Ugc29tZSBwb3dlcmZ1bCAgIGFudGlveGlkYW50cywgc3VjaCBhcyBhbHBoYSBsaXBvaWMgYWNpZCAgIGFuZCBnbHV0YXRoaW9uZS4gQW50aW94aWRhbnRzIGNhbiBhbHNvIGJlICAgcmVjZWl2ZWQgZnJvbSBzZXZlcmFsIHZlZ2V0YWJsZXMgYW5kIGZydWl0cyAgIGhpZ2ggaW4gYW50aW94aWRhbnRzLiAgICBIb3dldmVyLCB0aGVyZSBpcyBubyBtZWRpY2FsIHJlc2VhcmNoIHRvICAgZGVtb25zdHJhdGUgdGhhdCBhbnRpb3hpZGFudCBzdXBwbGVtZW50cyAgIGFyZSBoZWxwZnVsIGluIHByZXZlbnRpb24gb2YgcGFydGljdWxhciAgIGRpc2Vhc2VzLiBUaGUgVml0YW1pbiBDICYgRSwgQ2Fyb3Rlbm9pZHMgICAoc3VjaCBhcyBiZXRhLWNhcm90ZW5lLCBseWNvcGVuZSwgbHV0ZWluIGFuZCAgIHplYXhhbnRoaW4pLCBldGMuIGFyZSBhIGZldyBleGFtcGxlcyBvZiAgIGFudGlveGlkYW50cy4gICBYLUZhY3RvcjogICBDaHJvbm8tbnV0cml0aW9uICAg74K3IEl0IGlzIGFuIGVtZXJnaW5nIGZpZWxkIG9mIG51dHJpdGlvbiAgIHJlc2VhcmNoIHRoYXQgYXR0ZW1wdHMgdG8gdW5kZXJzdGFuZCB0aGUgICBpbXBhY3Qgb2YgbWVhbCB0aW1pbmdzIG9uIGh1bWFuIGhlYWx0aC4gICAg74K3IFRoZSB0aW1pbmcgb2YgdGhlIG1lYWxzIGlzIGFsc28gYSBmYWN0b3IgICB0aGF0IGltcGFjdHMgd2VpZ2h0IGdhaW4uICAgIO+CtyBUaGUgcm9vdHMgb2YgY2hyb25vLW51dHJpdGlvbiBhcmUgICBjb25zaWRlcmVkIHRvIGJlIGluIHRyYWRpdGlvbmFsIEluZGlhbiBhbmQgICBDaGluZXNlIGtub3dsZWRnZSAgIFNvdXJjZTpodHRwOi8vbm9wci5uaXNjYWlyLnJlcy5pbi9qaW5mby9zci8gIDIwMjEvVGVybWlub2xvZ2llcyUyMEluJTIwVGhlJTIwTmV3ICBzJTIwT2N0LTIwMjEucGRmICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 54,
      "question" : " Consider the following statements:   1.  Transfats are saturated fatty acids  coming through industrial  sources only.  2.  Partially hydrogenated oils (PHO)  prolong the shelf life of products.  3.  REPLACE programme developed  by WHO is associated with  transfats.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRyYW5zZmF0LCBvciAgIHRyYW5zLWZhdHR5IGFjaWRzLCBhcmUgdW5zYXR1cmF0ZWQgZmF0dHkgICBhY2lkcyB0aGF0IGNvbWUgZnJvbSBlaXRoZXIgbmF0dXJhbCBvciAgIGluZHVzdHJpYWwgc291cmNlcy4gTmF0dXJhbGx5LW9jY3VycmluZyAgIHRyYW5zZmF0IGNvbWUgZnJvbSBydW1pbmFudHMgKGNvd3MgYW5kICAgc2hlZXApLiBJbmR1c3RyaWFsbHktcHJvZHVjZWQgdHJhbnNmYXQgYXJlICAgZm9ybWVkIGluIGFuIGluZHVzdHJpYWwgcHJvY2VzcyB0aGF0IGFkZHMgICBoeWRyb2dlbiB0byB2ZWdldGFibGUgb2lsIGNvbnZlcnRpbmcgdGhlICAgbGlxdWlkIGludG8gYSBzb2xpZCwgcmVzdWx0aW5nIGluICdwYXJ0aWFsbHkgICBoeWRyb2dlbmF0ZWQnIG9pbCAoUEhPKS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQYXJ0aWFsbHkgICBoeWRyb2dlbmF0ZWQgb2lscyAoUEhPKSBhcmUgc29saWQgYXQgcm9vbSAgIHRlbXBlcmF0dXJlIGFuZCBwcm9sb25nIHRoZSBzaGVsZiBsaWZlIG9mICAgcHJvZHVjdHMuIFRoZXkgYXJlIHByaW1hcmlseSB1c2VkIGZvciBkZWVwICAgZnJ5aW5nIGFuZCBhcyBhbiBpbmdyZWRpZW50IGluIGJha2VkIGdvb2RzLiAgIFBIT3Mgd2VyZSBmaXJzdCBpbnRyb2R1Y2VkIGludG8gdGhlIGZvb2QgICBzdXBwbHkgaW4gdGhlIGVhcmx5IDIwdGggY2VudHVyeSBhcyBhICAgcmVwbGFjZW1lbnQgZm9yIGJ1dHRlciBhbmQgbGFyZDsgdGhleSBhcmUgbm90ICAgYSBuYXR1cmFsIHBhcnQgb2YgdGhlIGh1bWFuIGRpZXQgYW5kIGFyZSAgIGZ1bGx5IHJlcGxhY2VhYmxlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJFUExBQ0UgaXMgYW4gICBhY3Rpb24gcGFja2FnZSBkZXZlbG9wZWQgYnkgdGhlIFdvcmxkICAgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKSB0aGF0IHN1cHBvcnRzICAgZ292ZXJubWVudHMgdG8gZW5zdXJlIHRoZSBwcm9tcHQsICAgY29tcGxldGUsIGFuZCBzdXN0YWluZWQgZWxpbWluYXRpb24gb2YgICBpbmR1c3RyaWFsbHktcHJvZHVjZWQgdHJhbnNmYXQgZnJvbSB0aGUgZm9vZCAgIHN1cHBseS4gVGhlIHByYWN0aWNhbCwgNi1zdGVwIHBhY2thZ2UgY2FsbHMgICBmb3IgdGhlIHByb21vdGlvbiBvZiB1c2UgYW5kIGNvbnN1bXB0aW9uIG9mICAgaGVhbHRoaWVyIGZhdHMgYW5kIG9pbHMsIHRoZSBlbGltaW5hdGlvbiBvZiAgIGluZHVzdHJpYWxseS1wcm9kdWNlZCB0cmFucyBmYXRzLCB0byBiZSAgIGFjaGlldmVkIHRocm91Z2ggcmVndWxhdG9yeSBhY3Rpb25zLCB3aGlsZSAgIGVzdGFibGlzaGluZyBzb2xpZCBtb25pdG9yaW5nIHN5c3RlbXMgYW5kICAgY3JlYXRpbmcgYXdhcmVuZXNzIGFtb25nIHBvbGljeS1tYWtlcnMsICAgcHJvZHVjZXJzLCBzdXBwbGllcnMsIGFuZCB0aGUgcHVibGljLiAgIFgtRmFjdG9yOiAgIO+CtyBUaGUgRm9vZCBTYWZldHkgYW5kIFN0YW5kYXJkcyBBdXRob3JpdHkgICBvZiBJbmRpYSAoRlNTQUkpIHJlZHVjZWQgdGhlIHBlcm1pc3NpYmxlICAgbGltaXQgb2YgdHJhbnMgZmF0dHkgYWNpZHMgKFRGQSkgaW4gb2lscyBhbmQgICBmYXRzIHRvIDMlIGZvciAyMDIxIGFuZCAyJSBieSAyMDIyLCAgIGFnYWluc3QgdGhlIGVhcmxpZXIgY2FwIG9mIDUlLiAgIO+CtyBUaGUgbmV3IHJ1bGVzIGFwcGx5IHRvIGVkaWJsZSByZWZpbmVkIG9pbHMsICAgdmFuYXNwYXRpIChwYXJ0aWFsbHkgaHlkcm9nZW5hdGVkIG9pbHMpLCAgIG1hcmdhcmluZSwgYmFrZXJ5IHNob3J0ZW5pbmdzLCBhbmQgb3RoZXIgICBjb29raW5nIG1lZGlhIGxpa2UgdmVnZXRhYmxlIGZhdCBzcHJlYWRzICAgYW5kIG1peGVkIGZhdCBzcHJlYWRzLiAgIO+CtyBJbiAyMDE4LCB0aGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAgIChXSE8pIGhhZCBjYWxsZWQgZm9yIGEgZ2xvYmFsIGVsaW1pbmF0aW9uICAgb2YgaW5kdXN0cmlhbGx5IHByb2R1Y2VkIFRGQXMgYnkgMjAyMy4gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzQgIDAgICBTb3VyY2U6IGh0dHBzOi8vd3d3Lndoby5pbnQvbmV3cy0gIHJvb20vcXVlc3Rpb25zLWFuZC0gIGFuc3dlcnMvaXRlbS9udXRyaXRpb24tdHJhbnMtZmF0ICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2gvaGVhbHRoIGhlLWhpbmR1LWV4cGxhaW5zLXdoYXQtICBhcmUtdHJhbnMtZmF0cy1hbmQtd2h5LWFyZS10aGV5LSAgaGFybWZ1bC9hcnRpY2xlNjE3NTEyOTYuZWNlICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 2 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 55,
      "question" : " Consider the following statements  regarding mycormycosis:  1.  It is a rare fungal infection.  2.  It is caused by Rhizobium  leguminosarum.  3.  It affects the lungs.  4.  A vaccine for this has recently  been approved by the WHO.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYW5kIHN0YXRlbWVudCAyIGlzICAgaW5jb3JyZWN0OiAgICBNdWNvcm15Y29zaXMgaXMgYSBzZXJpb3VzIGJ1dCByYXJlIGZ1bmdhbCAgIGluZmVjdGlvbiBjYXVzZWQgYnkgYSBncm91cCBvZiBtb2xkcyAgIGNhbGxlZCBtdWNvcm15Y2V0ZXMuIFRoZXNlIG1vbGRzIGxpdmUgICB0aHJvdWdob3V0IHRoZSBlbnZpcm9ubWVudC4gICAgTXVjb3JteWNvc2lzIG1haW5seSBhZmZlY3RzIHBlb3BsZSB3aG8gICBoYXZlIGhlYWx0aCBwcm9ibGVtcyBvciB0YWtlIG1lZGljaW5lcyB0aGF0ICAgbG93ZXIgdGhlIGJvZHkncyBhYmlsaXR5IHRvIGZpZ2h0IGdlcm1zIGFuZCAgIHNpY2tuZXNzLiAgICBSaGl6b2JpdW0gbGVndW1pbm9zYXJ1bSBpcyBhIGJhY3Rlcml1bSAgIHdoaWNoIGxpdmVzIGluIGEgbXV0dWFsaXN0aWMgc3ltYmlvdGljICAgcmVsYXRpb25zaGlwIHdpdGggbGVndW1lcywgYW5kIGhhcyB0aGUgICBhYmlsaXR5IHRvIGZpeCBmcmVlIG5pdHJvZ2VuIGZyb20gdGhlIGFpci4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBJdCBtb3N0IGNvbW1vbmx5ICAgYWZmZWN0cyB0aGUgc2ludXNlcyBvciB0aGUgbHVuZ3MgYWZ0ZXIgICBpbmhhbGluZyBmdW5nYWwgc3BvcmVzIGZyb20gdGhlIGFpci4gSXQgY2FuICAgYWxzbyBvY2N1ciBvbiB0aGUgc2tpbiBhZnRlciBhIGN1dCwgYnVybiwgb3IgICBvdGhlciB0eXBlIG9mIHNraW4gaW5qdXJ5LiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogVGhlcmUgaXMgbm8gICB2YWNjaW5lIGZvciBNdWNvcm15Y29zaXMuICAgIFRob3NlIGF0IGhpZ2hlciByaXNrIGNvdWxkIHJlZHVjZSB0aGVpciByaXNrICAgYnkgcHJvdGVjdGluZyB0aGVtc2VsdmVzIGZyb20gdGhlIGZ1bmdpIGluICAgdGhlIGVudmlyb25tZW50LiAgIFgtRmFjdG9yOiAgICDvgrcgTXVjb3JteWNldGVzLCB0aGUgZ3JvdXAgb2YgZnVuZ2kgdGhhdCAgIGNhdXNlIG11Y29ybXljb3NpcywgYXJlIHByZXNlbnQgICB0aHJvdWdob3V0IHRoZSBlbnZpcm9ubWVudCwgcGFydGljdWxhcmx5ICAgaW4gc29pbC4gICDvgrcgVGhleSBhcmUgbW9yZSBjb21tb24gaW4gc29pbCB0aGFuIGluIGFpciwgICBhbmQgaW4gc3VtbWVyIGFuZCBmYWxsIHRoYW4gaW4gd2ludGVyIG9yICAgc3ByaW5nLiAgICDvgrcgTW9zdCBwZW9wbGUgY29tZSBpbiBjb250YWN0IHdpdGggICBtaWNyb3Njb3BpYyBmdW5nYWwgc3BvcmVzIGV2ZXJ5IGRheSwgc28gICBpdCdzIHByb2JhYmx5IGltcG9zc2libGUgdG8gY29tcGxldGVseSAgIGF2b2lkIGNvbWluZyBpbiBjb250YWN0IHdpdGggICBtdWNvcm15Y2V0ZXMuICAgIO+CtyBUaGUgbW9zdCBjb21tb24gdHlwZXMgdGhhdCBjYXVzZSAgIG11Y29ybXljb3NpcyBhcmUgUmhpem9wdXMgc3BlY2llcyBhbmQgICBNdWNvciBzcGVjaWVzLiBPdGhlciBleGFtcGxlcyBpbmNsdWRlICAgUmhpem9tdWNvciBzcGVjaWVzLCBTeW5jZXBoYWxhc3RydW0gICBzcGVjaWVzLCBDdW5uaW5naGFtZWxsYSBiZXJ0aG9sbGV0aWFlLCAgIEFwb3BoeXNvbXljZXMsIExpY2h0aGVpbWlhIChmb3JtZXJseSAgIEFic2lkaWEpLCBTYWtzZW5hZWEsIGFuZCBSaGl6b211Y29yLiAgIFNvdXJjZTogICBodHRwczovL3d3dy5jZGMuZ292L2Z1bmdhbC9kaXNlYXNlcy9tICB1Y29ybXljb3Npcy9jYXVzZXMuaHRtbCAgIGh0dHBzOi8vd3d3LmNkYy5nb3YvZnVuZ2FsL2Rpc2Vhc2VzL20gIHVjb3JteWNvc2lzL2luZGV4Lmh0bWwgICBodHRwczovL3d3dy53aG8uaW50L3NvdXRoZWFzdGFzaWEvb3V0ICBicmVha3MtYW5kLWVtZXJnZW5jaWVzL2NvdmlkLTE5L1doYXQtICBjYW4td2UtZG8tdG8ta2VlcC1zYWZlL211Y29ybXljb3NpcyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 4 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 4 only   "
      }
    },
    {
      "index" : 56,
      "question" : " The term 'Pitch Black' sometimes seen  in the news is in a context of:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYykgaXMgY29ycmVjdDogICDvgrcgSW5kaWFuIEFpciBGb3JjZSBwYXJ0aWNpcGF0ZXMgaW4gICBFeGVyY2lzZSBQaXRjaCBCbGFjayAyMDIyIGluIEF1c3RyYWxpYS4gICBUaGUgZXhlcmNpc2UgaXMgYSBiaWVubmlhbCB0aHJlZS13ZWVrICAgbXVsdGktbmF0aW9uYWwgbGFyZ2UgZm9yY2UgZW1wbG95bWVudCAgIGV4ZXJjaXNlIGNvbmR1Y3RlZCBwcmltYXJpbHkgZnJvbSBSQUFGICAgQmFzZSBEYXJ3aW4gYW5kIFJBQUYgQmFzZSBUaW5kYWwgICBYLUZhY3RvcjogICDvgrcgUEJLMjIgaXMgQWlyIEZvcmNlJ3MgYmllbm5pYWwgY2Fwc3RvbmUgICBpbnRlcm5hdGlvbmFsIGVuZ2FnZW1lbnQgYWN0aXZpdHkgd2l0aCAgIGtleSBzdHJhdGVnaWMgcGFydG5lcnMuICAg74K3IFNpZ25pZmljYW50bHksIEdlcm1hbnksIEphcGFuLCBhbmQgdGhlICAgUmVwdWJsaWMgb2YgS29yZWEgd2lsbCBiZSBwYXJ0aWNpcGF0aW5nICAgZnVsbHkgZm9yIHRoZSBmaXJzdCB0aW1lLiAgIO+CtyBUaGlzIHllYXIncyBwYXJ0aWNpcGFudHMgaW5jbHVkZSBBdXN0cmFsaWEsICAgQ2FuYWRhLCBGcmFuY2UsIEdlcm1hbnksIEluZG9uZXNpYSwgICBJbmRpYSwgSmFwYW4sIE1hbGF5c2lhLCBOZXRoZXJsYW5kcywgTmV3ICAgWmVhbGFuZCwgdGhlIFBoaWxpcHBpbmVzLCBSZXB1YmxpYyBvZiAgIEtvcmVhLCBTaW5nYXBvcmUsIFRoYWlsYW5kLCBVQUUsIHRoZSBVSyAgIGFuZCB0aGUgVVMuICAgU291cmNlOiAgICBhaXItZm9yY2UtcGFydGljaXBhdGVzLWluLWV4ZXJjaXNlLXBpdGNoLSAgYmxhY2stMjAyMi1pbi1hdXN0cmFsaWEvMTEwMDMxNy8gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Black hole   ",
        "option2" : "  Solar eclipse   ",
        "option3" : "  Aircombat exercise   ",
        "option4" : "  Wild animal   "
      }
    },
    {
      "index" : 57,
      "question" : " Consider the following statements  regarding xenotransplantation:  1. It is the process of grafting tissues  between members of different  species.  2.  It includes CRISPR/CAS9  technique to remove specific  genes.   3.  It is widely used in genetic  modification of exotic plant  species.  Which of the statements given above  is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICAgWGVub3RyYW5zcGxhbnRhdGlvbiBpcyB0aGUgcHJvY2VzcyBvZiAgIGdyYWZ0aW5nIG9yIHRyYW5zcGxhbnRpbmcgb3JnYW5zIG9yIHRpc3N1ZXMgICBiZXR3ZWVuIG1lbWJlcnMgb2YgZGlmZmVyZW50IHNwZWNpZXMuICAgVHJhbnNwbGFudGF0aW9uIG9mIGEgcGlnIGhlYXJ0IGludG8gYSBodW1hbiwgICBjYWxsZWQgeGVub3RyYW5zcGxhbnRhdGlvbiwgaXMgYW4gICBleHBlcmltZW50YWwgcHJvY2VkdXJhbCBzdGFnZSBwcmVzZW50bHkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVW5saWtlIHRoZSAgIHRyYWRpdGlvbmFsIGJyZWVkaW5nIHRlY2huaXF1ZXMgdG8ga25vdyAgIGJvdGggY29waWVzIG9mIGEgZ2VuZSwgdGhlIGFkdmVudCBvZiAgIGdlbm9tZS1lZGl0aW5nIHRvb2xzIHN1Y2ggYXMgICBDUklTUFIvQ2FzOSwgd2hpY2ggYWxsb3dzIHByZWNpc2UgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzQgIDEgICByZW1vdmFsIG9mIHNwZWNpZmljIGdlbmVzIGhhcyBtYWRlIGdlbmUgICBtb2RpZmljYXRpb24gc2ltcGxlciwgZmFzdCBhbmQgICBhY2N1cmF0ZS4gIFNpbmNlIDIwMTMsIHRoZSByYXBpZCBncm93dGggaW4gICBpbnRlcmVzdCBpbiB4ZW5vdHJhbnNwbGFudGF0aW9uIGhhcyBiZWVuICAgcmVsYXRlZCB0byB0aGUgQ1JJU1BSL0NhcyB0ZWNobm9sb2d5ICAgYXBwZWFyYW5jZSBpbiBnZW5ldGljIGVuZ2luZWVyaW5nIEEgICBnZW5ldGljYWxseSBtb2RpZmllZCBwaWcgY2VsbCBpcyBmdXNlZCB3aXRoIGEgICBwaWcgb3Z1bSB0aGF0IGhhcyBpdHMgRE5BIHJlbW92ZWQuIFRoZSBvdmEgICB0aGF0IGNvbnRhaW4gb25seSB0aGUgZ2VuZXRpY2FsbHkgZW5naW5lZXJlZCAgIGdlbm9tZSBzdGFydCBkaXZpZGluZyB0byBiZWNvbWUgcGlnICAgZm9ldHVzZXMuIFRoaXMgaXMgdGhlIHNhbWUgdGVjaG5pcXVlIHRoYXQgICB3YXMgdXNlZCB0byBjbG9uZSBEb2xseSwgdGhlIHNoZWVwLiAgIEhhcnZlc3Rpbmcgb3JnYW5zIGZyb20gZ2VuZXRpY2FsbHkgICBlbmdpbmVlcmVkIHBpZ3MgaXMgc2VlbiBhcyBhIHZpYWJsZSAgIGFsdGVybmF0aXZlIHRvIG1lZXQgb3JnYW5zIHNob3J0YWdlLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogICBYZW5vdHJhbnNwbGFudGF0aW9uIGhhcyBubyByb2xlIGluIHBsYW50ICAgcGh5c2lvbG9neSBhcyBvZiBub3cuIFRoZXJlIGFyZSBvdGhlciAgIHRlY2huaXF1ZXMgbGlrZSBncmFmdGluZywgdGlzc3VlIGN1bHR1cmUgICBhbmQgdmVnZXRhdGl2ZSBwcm9wb2dhdGlvbiBldGMuICAgWC1GYWN0b3I6ICAgIEROQSBGcmFnbWVudGF0aW9uICAg74K3IFVubGlrZSBhIHByb3RlaW4sIGEgZ2VuZSBkb2VzIG5vdCBleGlzdCBhcyAgIGEgZGlzY3JldGUgZW50aXR5IGluIGNlbGxzLCBidXQgcmF0aGVyIGFzIGEgICBzbWFsbCByZWdpb24gb2YgYSBtdWNoIGxvbmdlciBETkEgICBtb2xlY3VsZS4gICAg74K3IEJlY2F1c2UgYWxsIEROQSBtb2xlY3VsZXMgY29uc2lzdCBvZiAgIGVxdWFsIG1peHR1cmUgb2YgdGhlIHNhbWUgbnVjbGVvdGlkZXMsICAgdGhleSBjYW5ub3QgYmUgcmVhZGlseSBzZXBhcmF0ZWQsIGFzICAgcHJvdGVpbnMgY2FuLCBvbiB0aGUgYmFzaXMgb2YgdGhlaXIgICBkaWZmZXJlbnQgY2hhcmdlcyBhbmQgYmluZGluZyBwcm9wZXJ0aWVzLiAgIO+CtyBUaGUgc29sdXRpb24gdG8gYWxsIG9mIHRoZXNlIHByb2JsZW1zICAgYmVnYW4gdG8gZW1lcmdlIHdpdGggdGhlIGRpc2NvdmVyeSBvZiAgIHJlc3RyaWN0aW9uIG51Y2xlYXNlcy4gICAg74K3IFRoZXNlIGVuenltZXMsIHdoaWNoIGNhbiBiZSBwdXJpZmllZCAgIGZyb20gYmFjdGVyaWEsIGN1dCB0aGUgRE5BIGRvdWJsZSBoZWxpeCAgIGF0IHNwZWNpZmljIHNpdGVzIGRlZmluZWQgYnkgdGhlIGxvY2FsICAgbnVjbGVvdGlkZSBzZXF1ZW5jZSwgdGhlcmVieSBjbGVhdmluZyBhICAgbG9uZyBkb3VibGUtc3RyYW5kZWQgRE5BIG1vbGVjdWxlIGludG8gICBmcmFnbWVudHMgb2Ygc3RyaWN0bHkgZGVmaW5lZCBzaXplcy4gICAg74K3IERpZmZlcmVudCByZXN0cmljdGlvbiBudWNsZWFzZXMgaGF2ZSAgIGRpZmZlcmVudCBzZXF1ZW5jZSBzcGVjaWZpY2l0aWVzLCBhbmQgaXQgaXMgICByZWxhdGl2ZWx5IHNpbXBsZSB0byBmaW5kIGFuIGVuenltZSB0aGF0ICAgY2FuIGNyZWF0ZSBhIEROQSBmcmFnbWVudCB0aGF0IGluY2x1ZGVzICAgYSBwYXJ0aWN1bGFyIGdlbmUuICAgIO+CtyBUaGUgc2l6ZSBvZiB0aGUgRE5BIGZyYWdtZW50IGNhbiB0aGVuIGJlICAgdXNlZCBhcyBhIGJhc2lzIGZvciBwYXJ0aWFsIHB1cmlmaWNhdGlvbiBvZiAgIHRoZSBnZW5lIGZyb20gYSBtaXh0dXJlLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2gvaGVhbHRoL2V4cGxhaW5lZC13aWxsLXRoZS1waWctdG8tICBodW1hbi1oZWFydC1vcGVyYXRpb24tbGVhZC10by1hLW5ldy0gIGFwcHJvYWNoLXRvLW9yZ2FuLSAgdHJhbnNwbGFudGF0aW9uL2FydGljbGUzODI3NTczMC5lY2UgICBodHRwczovL3d3dy5uY2JpLm5sbS5uaWguZ292L2Jvb2tzL05CICBLMjY4MzcvICAgIGh0dHBzOi8vd3d3Lm5jYmkubmxtLm5paC5nb3YvcG1jL2FydGkgIGNsZXMvUE1DODAwNDE4Ny8gICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLSAgdGVjaC9zY2llbmNlL2Fzc2FtLXBpb25lZXItb2YtcGlnLSAgaGVhcnQtdHJhbnNwbGFudC1ub3ctd29ya2luZy1vbi0gIGJpb21vbGVjdWxhci0gIHRyZWF0bWVudC9hcnRpY2xlMzgyNjYzMzQuZWNlICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  3 only ",
        "option4" : "  1 an 2 only   "
      }
    },
    {
      "index" : 58,
      "question" : " Consider the following statements:  1.  Food fortification refers to the  addition of micronutrients to  staple foods.  2.  The process of Food fortification  does not change any food  characteristics such as aroma and  taste.  3.  Global Hunger index is released  by Food and Agricultural  Organization (FAO).  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g1 0  Which of the statements give above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBGb29kIFNhZmV0eSAgIGFuZCBTdGFuZGFyZHMgQXV0aG9yaXR5IG9mIEluZGlhIChGU1NBSSkgICBkZWZpbmVzIGZvcnRpZmljYXRpb24gYXMgJ3RoZSBhZGRpdGlvbiBvZiBrZXkgICB2aXRhbWlucyBhbmQgbWluZXJhbHMgc3VjaCBhcyBpcm9uLCAgIGlvZGluZSwgemluYywgVml0YW1pbnMgQSBhbmQgRCB0byBzdGFwbGUgICBmb29kcyBzdWNoIGFzIHJpY2UsIHdoZWF0LCBvaWwsIG1pbGsgYW5kIHNhbHQgICB0byBpbXByb3ZlIG51dHJpdGlvbmFsIHZhbHVlIGFuZCBwcm92aWRlIGEgICBwdWJsaWMgaGVhbHRoIGJlbmVmaXQgd2l0aCBtaW5pbWFsIHJpc2sgdG8gICBoZWFsdGguJyAgICdUaGUgcXVhbnRpdHkgYWRkZWQgaXMgc21hbGwgYW5kIHdlbGwgdW5kZXIgICB0aGUgUmVjb21tZW5kZWQgRGFpbHkgQWxsb3dhbmNlcyAoUkRBKSAgIGFuZCBpcyB3ZWxsIHJlZ3VsYXRlZCBhcyBwZXIgdGhlIHByZXNjcmliZWQgICBzdGFuZGFyZHMgZm9yIHNhZmUgY29uc3VtcHRpb24sJyB0aGUgZm9vZCAgIHNhZmV0eSBhdXRob3JpdHkgc3RhdGVzIG9uIGl0cyB3ZWJzaXRlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEZvcnRpZmljYXRpb24gZG9lcyAgIG5vdCByZXF1aXJlIGFueSBjaGFuZ2VzIGluIHRoZSBlYXRpbmcgICBwYXR0ZXJucyBvciBmb29kIGhhYml0cyBvZiBwZW9wbGUuIFRoZSAgIHByb2Nlc3MgYWxzbyBkb2VzIG5vdCBjaGFuZ2UgYW55IGZvb2QgICBjaGFyYWN0ZXJpc3RpY3MtIGFyb21hLCB0ZXh0dXJlIG9yIHRhc3RlLiAgIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogSW5kaWEncyByYW5raW5nIGluICAgR2xvYmFsIEh1bmdlciBJbmRleCAyMDIxIGlzIDEwMSAoc2xpcHBlZCAgIGZyb20gdGhlIDIwMjAgaW5kZXggb2YgOTQpIG91dCBvZiAxMTYgICBjb3VudHJpZXMuIFRoZSBpbmRleCBpcyBqb2ludGx5IHJlbGVhc2VkICAgYnkgQ29uY2VybiBXb3JsZHdpZGUgYW5kICAgV2VsdGh1bmdlcmhpbGZlIGV2ZXJ5IE9jdG9iZXIuICAgWC1GYWN0b3I6ICAg74K3IFRoZSByZWNlbnRseSByZWxlYXNlZCBOYXRpb25hbCBGYW1pbHkgICBIZWFsdGggU3VydmV5IDIwMTktMjAyMSAoTkZIUy01KSBoYXMgICByZXZlYWxlZCB0aGF0IGFyb3VuZCA5MCBwZXIgY2VudCBvZiAgIGNoaWxkcmVuIGluIHRoZSBjb3VudHJ5IGFnZWQgYmV0d2VlbiA2ICAgYW5kIDIzIG1vbnRocyBkaWQgbm90IGdldCBhbiBhZGVxdWF0ZWx5ICAgbnV0cml0aW91cyBkaWV0LiAgICDvgrcgT3ZlciA2NyBwZXIgY2VudCBvZiBjaGlsZHJlbiBhYm92ZSBzaXggICBtb250aHMgYnV0IGJlbG93IGZpdmUgeWVhcnMgb2YgYWdlIHdlcmUgICBmb3VuZCB0byBiZSBhbmFlbWljLiAgIO+CtyBNb3JlIHRoYW4gMzUgcGVyIGNlbnQgb2YgY2hpbGRyZW4gYmVsb3cgICBmaXZlIHllYXJzIG9mIGFnZSBzaG93ZWQgc3R1bnRlZCBncm93dGgsICAgd2hpY2ggaXMgYSBtZWFzdXJlIG9mIGNocm9uaWMgICBtYWxudXRyaXRpb24gYW1vbmcga2lkcy4gICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc0ICAyICAg74K3IFRoaXMgZGVmaWNpZW5jeSBvZiBtaWNyb251dHJpZW50cywgYWxzbyAgIGtub3duIGFzIGhpZGRlbiBodW5nZXIsIHRodXMgcG9zZXMgYSAgIHNlcmlvdXMgaGVhbHRoIHJpc2suICAgIFNvdXJjZTogICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb24gIGFsL2luZGlhLXJpY2UtZm9ydGlmaWNhdGlvbi1zY2hlbWUtICBleHBlcnRzLWNvbmNlcm4tZXhwbGFpbmVkLSAgZm9vZC9hcnRpY2xlNjU0NTM3NjIuZWNlICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 59,
      "question" : " The term 'Blue Bob' recently seen in  news is:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogVGhlIEJsdWUgQmxvYiBpcyAgIGEgY29sZCBwYXRjaCBsb2NhdGVkIHNvdXRoIG9mIEljZWxhbmQgYW5kICAgR3JlZW5sYW5kIGFuZCBsaXR0bGUgaXMga25vd24gYWJvdXQgaXQuICAgICBUaGUgY29sZCBwYXRjaCB3YXMgbW9zdCBwcm9taW5lbnQgZHVyaW5nICAgdGhlIHdpbnRlciBvZiAyMDE0LTIwMTUgd2hlbiB0aGUgc2VhICAgc3VyZmFjZSB0ZW1wZXJhdHVyZSB3YXMgYWJvdXQgMS40IGRlZ3JlZXMgICBDZWxzaXVzIGNvbGRlciB0aGFuIG5vcm1hbC4gICBUaGUgQXJjdGljIHJlZ2lvbiBpcyByZXBvcnRlZGx5IHdhcm1pbmcgZm91ciAgIHRpbWVzIGZhc3RlciB0aGFuIHRoZSBnbG9iYWwgYXZlcmFnZS4gICBUaGUgcmVzZWFyY2hlcnMgZm91bmQgdGhhdCBjb29sZXIgd2F0ZXJzICAgbmVhciB0aGUgQmx1ZSBCbG9iIHdlcmUgbGlua2VkIHRvICAgb2JzZXJ2YXRpb25zIG9mIGxvd2VyIGFpciB0ZW1wZXJhdHVyZXMgb3ZlciAgIEljZWxhbmQncyBnbGFjaWVycyBhbmQgY29pbmNpZGVkIHdpdGggYSAgIHNsb3dpbmcgb2YgZ2xhY2lhbCBtZWx0aW5nIHNpbmNlIDIwMTEuICAgT3RoZXIgc2NpZW50aXN0cyBoYXZlIHByb3Bvc2VkIHRoYXQgdGhlIEJsdWUgICBCbG9iIGlzIHBhcnQgb2YgdGhlIG5vcm1hbCBzZWEgc3VyZmFjZSAgIHRlbXBlcmF0dXJlIHZhcmlhYmlsaXR5IGluIHRoZSBBcmN0aWMuICAgWC1GYWN0b3I6ICAg74K3IEJlZm9yZSB0aGUgQmx1ZSBCbG9iLCBhIGxvbmctdGVybSBjb29saW5nICAgdHJlbmQgaW4gdGhlIHNhbWUgcmVnaW9uLCBjYWxsZWQgdGhlICAgQXRsYW50aWMgV2FybWluZyBIb2xlLCByZWR1Y2VkIHNlYSAgIHN1cmZhY2UgdGVtcGVyYXR1cmVzIGJ5IGFib3V0IDAuNCB0byAwLjggICBkZWdyZWVzIENlbHNpdXMgZHVyaW5nIHRoZSBsYXN0IGNlbnR1cnkgICBhbmQgbWF5IGNvbnRpbnVlIHRvIGNvb2wgdGhlIHJlZ2lvbiBpbiB0aGUgICBmdXR1cmUuICAgIO+CtyBBIHBvc3NpYmxlIGV4cGxhbmF0aW9uIGZvciB0aGUgV2FybWluZyAgIEhvbGUgaXMgdGhhdCBjbGltYXRlIGNoYW5nZSBoYXMgc2xvd2VkICAgdGhlIEF0bGFudGljIE1lcmlkaW9uYWwgT3ZlcnR1cm5pbmcgICBDaXJjdWxhdGlvbiwgYW4gb2NlYW4gY3VycmVudCB0aGF0IGJyaW5ncyAgIHdhcm0gd2F0ZXIgdXAgZnJvbSB0aGUgdHJvcGljcyB0byB0aGUgICBBcmN0aWMsIHRodXMgcmVkdWNpbmcgdGhlIGFtb3VudCBvZiBoZWF0ICAgZGVsaXZlcmVkIHRvIHRoZSByZWdpb24uICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vc2NpLSAgdGVjaC9zY2llbmNlL3doYXQtaXMtdGhlLWJsdWUtYmxvYi0gIHNjaWVuY2UtZm9yLWFsbC0gIG5ld3NsZXR0ZXIvYXJ0aWNsZTY1MDU1NjYxLmVjZSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  A rare disorder caused due to   exposure of radioactive uranium.  ",
        "option2" : "  A new endemic reptilian species   found the Western Ghats.  ",
        "option3" : "  An exoplanet orbiting in the   constellation Phoenix.  ",
        "option4" : "  A cold patch located in south of   Iceland and Greenland.   "
      }
    },
    {
      "index" : 60,
      "question" : " Consider the following pairs regarding  the Indian defence exercises and  participating countries:   Exercise Country  1. Ex-Dharma  Guardian  Nepal  2. Ex-Sampriti   Thailand  3. Mitra Shakti Sri Lanka  4. Maitree Japan  How many of the pairs given about  is/are correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFBhaXIgb25lIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IEV4ICAgREhBUk1BIEdVQVJESUFOLTIwMjIsIGFuIGFubnVhbCAgIGV4ZXJjaXNlIGJldHdlZW4gSW5kaWFuIEFybXkgYW5kICAgSmFwYW5lc2UgR3JvdW5kIFNlbGYgRGVmZW5jZSBGb3JjZSAgIGN1bG1pbmF0ZWQgYWZ0ZXIgaW50ZW5zZSBqb2ludCBtaWxpdGFyeSAgIHRyYWluaW5nLCBwcm92aWRpbmcgYSB1bmlxdWUgb3Bwb3J0dW5pdHkgb2YgICBhY2hpZXZpbmcgc3luZXJneSBiZXR3ZWVuIEFybWVkIEZvcmNlcyBvZiAgIGJvdGggdGhlIE5hdGlvbnMuICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IEV4ZXJjaXNlICAgU0FNUFJJVEkgaXMgYW4gaW1wb3J0YW50IGJpbGF0ZXJhbCBkZWZlbmNlICAgY29vcGVyYXRpb24gZW5kZWF2b3VyIGNvbmR1Y3RlZCAgIGFsdGVybmF0ZWx5IGJ5IEluZGlhIGFuZCBCYW5nbGFkZXNoLiAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogVGhlICAgOHRoIEVkaXRpb24gb2YgSW5kaWEgU3JpIExhbmthIGJpbGF0ZXJhbCAgIGpvaW50IEV4ZXJjaXNlIE1pdHJhIFNoYWt0aSB3YXMgICBjb25kdWN0ZWQgaW4gU3JpIExhbmthLiBJbmRpYW4gQXJteSBoYXMgICBwYXJ0aWNpcGF0ZWQgaW4gdGhlIGV4ZXJjaXNlIGFsb25nIHdpdGggYSAgIGJhdHRhbGlvbiBvZiB0aGUgU3JpIExhbmthbiBBcm15LiAgICBQYWlyIDQgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZDogRXhlcmNpc2UgICBNQUlUUkVFIGlzIGFuIGFubnVhbCB0cmFpbmluZyBldmVudCB3aGljaCAgIGlzIGJlaW5nIGNvbmR1Y3RlZCBhbHRlcm5hdGl2ZWx5IGluIFRoYWlsYW5kICAgYW5kIEluZGlhIHNpbmNlIDIwMDYuICAgICAgWC1GYWN0b3I6ICAg74K3IEEgTWFyaXRpbWUgUGFydG5lcnNoaXAgRXhlcmNpc2UgKE1QWCkgICB3YXMgY29uZHVjdGVkIGJldHdlZW4gSmFwYW4gTWFyaXRpbWUgICBTZWxmIERlZmVuc2UgRm9yY2UgYW5kIEluZGlhbiBOYXZ5IGluICAgQW5kYW1hbiBTZWEuICAgIFNvdXJjZTogICBodHRwczovL3d3dy5waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZyAgZS5hc3B4P1BSSUQ9MTg0NDI3OCAgIGh0dHBzOi8vcGliLmdvdi5pbi9wcmVzc3JlbGVhc2VwYWdlLmFzcHggID9wcmlkPTE3NjAyMzggICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlc2VEZXRhaWxtLmEgIHNweD9QUklEPTE1ODQ4NzEgICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlSWZyYW1lUGEgIGdlLmFzcHg/UFJJRD0xODMxMzQ2ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Only one pair  ",
        "option2" : "  Only two pairs  ",
        "option3" : "  Only three pairs  ",
        "option4" : "  All four pairs   "
      }
    },
    {
      "index" : 61,
      "question" : " With reference to hypersonic weapons,  consider the following statements:  1.  They can fly at speeds of at least 5  times the speed of sound.  2.  Weapons working on hypersonic  technology can never be  intercepted by the radars.  Which of the statements given above  is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEh5cGVyc29uaWMgICB3ZWFwb25zIGFyZSBtYW5vZXV2cmFibGUgd2VhcG9ucyB0aGF0ICAgY2FuIGZseSBhdCBzcGVlZHMgb2YgYXQgbGVhc3QgTWFjaCA1LCBmaXZlICAgdGltZXMgdGhlIHNwZWVkIG9mIHNvdW5kLiBUaGUgc3BlZWQgb2YgICBzb3VuZCBpcyBNYWNoIDEsIGFuZCBzcGVlZHMgYWJvdmUgTWFjaCAgIEkgYXJlIHN1cGVyc29uaWMgYW5kIHNwZWVkcyBhYm92ZSBNYWNoIDUgICBhcmUgaHlwZXJzb25pYy4gVGhleSBhcmUgZGlmZmVyZW50IGZyb20gICBCYWxsaXN0aWMgbWlzc2lsZXMgd2hpY2ggZXZlbiB0aG91Z2ggdHJhdmVsICAgbXVjaCBmYXN0ZXIsIGZvbGxvdyBhIGZpeGVkIHRyYWplY3RvcnkgYW5kICAgdHJhdmVsIG91dHNpZGUgdGhlIGF0bW9zcGhlcmUgdG8gcmUtZW50ZXIgICBvbmx5IG5lYXIgaW1wYWN0LiAgIE9uIHRoZSBvdGhlciBoYW5kLCBoeXBlcnNvbmljIHdlYXBvbnMgICB0cmF2ZWwgd2l0aGluIHRoZSBhdG1vc3BoZXJlIGFuZCBjYW4gICBtYW5vZXV2cmUgbWlkd2F5IHdoaWNoIGNvbWJpbmVkIHdpdGggICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzQgIDMgICB0aGVpciBoaWdoIHNwZWVkcyBtYWtlIHRoZWlyIGRldGVjdGlvbiBhbmQgICBpbnRlcmNlcHRpb24gZXh0cmVtZWx5IGRpZmZpY3VsdC4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGlzIG1lYW5zIHRoYXQgICByYWRhcnMgYW5kIGFpciBkZWZlbmNlcyBjYW5ub3QgZGV0ZWN0ICAgdGhlbSB0aWxsIHRoZXkgYXJlIHZlcnkgY2xvc2UgYW5kIGhhdmUgICBvbmx5IGxpdHRsZSB0aW1lIHRvIHJlYWN0LiAgIFgtRmFjdG9yOiAgIO+CtyBJbmRpYSBvcGVyYXRlcyBhcHByb3hpbWF0ZWx5IDEyICAgaHlwZXJzb25pYyB3aW5kIHR1bm5lbHMgYW5kIGlzIGNhcGFibGUgb2YgICB0ZXN0aW5nIHNwZWVkcyBvZiB1cCB0byBNYWNoIDEzLiAgIO+CtyBJbmRpYSBpcyBkZXZlbG9waW5nIGFuIGluZGlnZW5vdXMsIGR1YWwtICBjYXBhYmxlIGh5cGVyc29uaWMgY3J1aXNlIG1pc3NpbGUgYXMgcGFydCAgIG9mIGl0cyBIeXBlcnNvbmljIFRlY2hub2xvZ3kgICBEZW1vbnN0cmF0b3IgVmVoaWNsZSAoSFNURFYpICAgcHJvZ3JhbW1lIGFuZCBoYXMgZGVtb25zdHJhdGVkIHRoZSAgIHNjcmFtamV0IGVuZ2luZSB0ZWNobm9sb2d5LiAgICAg74K3IEluIGEgc2NyYW1qZXQgZW5naW5lLCBhaXIgZ29lcyBpbnNpZGUgdGhlICAgZW5naW5lIGF0IHN1cGVyc29uaWMgc3BlZWQgYW5kIGNvbWVzICAgb3V0IGF0IGh5cGVyc29uaWMgc3BlZWRzLiAgIO+CtyBBIGh5cGVyc29uaWMgdmVyc2lvbiBvZiB0aGUgQnJhaE1vcyAgIHN1cGVyc29uaWMgY3J1aXNlIG1pc3NpbGUsIGEgam9pbnQgICBkZXZlbG9wbWVudCBvZiBJbmRpYSBhbmQgUnVzc2lhLCBpcyBhbHNvICAgdW5kZXIgZGV2ZWxvcG1lbnQuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbiAgYWwvdW5kZXJzdGFuZGluZy1oeXBlcnNvbmljLSAgd2VhcG9ucy9hcnRpY2xlNjUyNDk0NDIuZWNlICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only   ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 62,
      "question" : " With reference to Vertical Launch  Short Range Surface to Air Missile (VL- SRSAM), consider the following  statements:  1.  It is designed to strike at the high- speed airborne targets at the  range of 1000 to 1500 km.  2.  It is designed and developed by  the National Aerospace  Laboratories for Indian Navy.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVkwtU1JTQU0gaGFzICAgYmVlbiBkZXNpZ25lZCBhbmQgZGV2ZWxvcGVkIGpvaW50bHkgYnkgdGhyZWUgICBmYWNpbGl0aWVzIG9mIHRoZSBEZWZlbmNlIFJlc2VhcmNoIGFuZCAgIERldmVsb3BtZW50IE9yZ2FuaXNhdGlvbiBmb3IgZGVwbG95bWVudCAgIG9mIEluZGlhbiBOYXZhbCB3YXJzaGlwcy4gICBUaGUgbWlzc2lsZSBoYXMgdGhlIGNhcGFiaWxpdHkgb2YgbmV1dHJhbGlzaW5nICAgdmFyaW91cyBhZXJpYWwgdGhyZWF0cyBhdCBjbG9zZSByYW5nZXMgICBpbmNsdWRpbmcgc2VhLXNraW1taW5nIHRhcmdldHMuIFRoZSB0YWN0aWMgICBvZiBzZWEgc2tpbW1pbmcgaXMgdXNlZCBieSB2YXJpb3VzIGFudGktc2hpcCAgIG1pc3NpbGVzIGFuZCBzb21lIGZpZ2h0ZXIgamV0cyB0byBhdm9pZCBiZWluZyAgIGRldGVjdGVkIGJ5IHRoZSByYWRhcidzIG9uYm9hcmQgd2Fyc2hpcHMuICAgRm9yIHRoaXMsIHRoZXNlIGFzc2V0cyBmbHkgYXMgY2xvc2UgYXMgcG9zc2libGUgICB0byBzZWEgc3VyZmFjZSBhbmQgdGh1cyBhcmUgZGlmZmljdWx0IHRvIGRldGVjdCAgIGFuZCBuZXV0cmFsaXNlLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogIFRoZSBkZXNpZ24gb2YgICBWTC1TUlNBTTogVGhlIG1pc3NpbGUgaGFzIGJlZW4gZGVzaWduZWQgICB0byBzdHJpa2UgYXQgdGhlIGhpZ2gtc3BlZWQgYWlyYm9ybmUgICB0YXJnZXRzIGF0IHRoZSByYW5nZSBvZiA0MCB0byA1MCBrbSBhbmQgYXQgICBhbiBhbHRpdHVkZSBvZiBhcm91bmQgMTUga20uIEl0cyBkZXNpZ24gaXMgICBiYXNlZCBvbiBBc3RyYSBtaXNzaWxlIHdoaWNoIGlzIGEgQmV5b25kICAgVmlzdWFsIFJhbmdlIEFpciB0byBBaXIgbWlzc2lsZS4gICBYLUZhY3RvcjogICDvgrcgVHdvIGtleSBmZWF0dXJlcyBvZiB0aGUgVkwtU1JTQU0gYXJlICAgY3J1Y2lmb3JtIHdpbmdzIGFuZCB0aHJ1c3QgdmVjdG9yaW5nLiAgICDvgrcgVGhlIGNydWNpZm9ybSB3aW5ncyBhcmUgZm91ciBzbWFsbCB3aW5ncyAgIGFycmFuZ2VkIGxpa2UgYSBjcm9zcyBvbiBmb3VyIHNpZGVzIGFuZCAgIGdpdmUgdGhlIHByb2plY3RpdmUgYSBzdGFibGUgYWVyb2R5bmFtaWMgICBwb3N0dXJlLiAgICDvgrcgVGhlIHRocnVzdCB2ZWN0b3JpbmcgaXMgYW4gYWJpbGl0eSB0byAgIGNoYW5nZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSB0aHJ1c3QgZnJvbSBpdHMgICBlbmdpbmUgY29udHJvbCB0aGUgYW5ndWxhciB2ZWxvY2l0eSBhbmQgICB0aGUgYXR0aXR1ZGUgb2YgdGhlIG1pc3NpbGUuICAg74K3IFZMLVNSU0FNIGlzIGEgY2FuaXN0ZXJpc2VkIHN5c3RlbSwgICB3aGljaCBtZWFucyBpdCBpcyBzdG9yZWQgYW5kIG9wZXJhdGVkICAgZnJvbSBzcGVjaWFsbHkgZGVzaWduZWQgY29tcGFydG1lbnRzLiAgICDvgrcgSW4gdGhlIGNhbmlzdGVyLCB0aGUgaW5zaWRlIGVudmlyb25tZW50IGlzICAgY29udHJvbGxlZCwgdGh1cyBtYWtpbmcgaXRzIHRyYW5zcG9ydCBhbmQgICBzdG9yYWdlIGVhc2llciBhbmQgaW1wcm92aW5nIHRoZSBzaGVsZiBsaWZlICAgb2Ygd2VhcG9ucyAgIFNvdXJjZTogICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGEgIGluZWQvd2hhdC1pcy12ZXJ0aWNhbC1sYXVuY2gtc2hvcnQtcmFuZ2UtICBzdXJmYWNlLXRvLWFpci1taXNzaWxlLTc2NjczNDQvICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 63,
      "question" : " With reference to Artemis Accords,  which of the following statements  is/are correct?  1.  They create binding obligations  under international law for all UN  members.  2.  They allow the mining of the rocks  and soil of the Moon for oxygen  and hydrogen to sustain human  life on moon.  3.  They aim at establishing a  permanent human presence on  the Moon and a lunar orbiting  station.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiAgTmFtZWQgYWZ0ZXIgdGhlICAgdHdpbiBzaXN0ZXIgb2YgQXBvbGxvLCB0aGUgQXJ0ZW1pcyBwbGFuICAgYWltcyBhdCBlc3RhYmxpc2hpbmcgYSBwZXJtYW5lbnQgaHVtYW4gICBwcmVzZW5jZSBvbiB0aGUgTW9vbiBhbmQgYSBsdW5hciBvcmJpdGluZyAgIHN0YXRpb24gY2FsbGVkIHRoZSBHYXRld2F5LiAgIFRoZSBBcnRlbWlzIHBsYW4gY2xhcmlmaWVzIHRoZSBsZWdhbCBiYXNpcyBmb3IgICB1c2luZyBzcGFjZSByZXNvdXJjZXMgaW4gc3VwcG9ydCBvZiB0aGUgICBBcnRlbWlzIG1pc3Npb25zIGluIGFuIGFncmVlbWVudCBjYWxsZWQgdGhlICAgQXJ0ZW1pcyBBY2NvcmRzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgVGhlIEFydGVtaXMgICBtaXNzaW9ucyBvbiB0aGUgTW9vbiB3aWxsIHNlcnZlIGFzIGEgdGVzdGluZyAgIGdyb3VuZCBmb3IgdGhlIGZpcnN0IGh1bWFuIG1pc3Npb25zIHRvIE1hcnMgICBhbmQgYmV5b25kLCBlZmZlY3RpdmVseSBtYXJraW5nIGEgbmV3IGVyYSBpbiAgIGh1bWFuIHNwYWNlZmxpZ2h0LiBUbyBlbnN1cmUgdGhlICAgc3VzdGFpbmFiaWxpdHkgb2YgbG9uZy10ZXJtIGh1bWFuICAgbWlzc2lvbnMsIHRoZSBBcnRlbWlzIHBsYW4gZW52aXNpb25zIHRoZSAgIHVzZSBvZiBzcGFjZSByZXNvdXJjZXMuIEZvciBleGFtcGxlLCAgIG1pbmluZyB0aGUgcm9ja3MgYW5kIHNvaWwgb2YgdGhlIE1vb24gZm9yICAgb3h5Z2VuIGFuZCBoeWRyb2dlbi4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6ICBMZWdhbGx5ICAgc3BlYWtpbmcsIHRoZSBBY2NvcmRzIGFyZSBub3QgYSB0cmVhdHk6ICAgdGhleSBkbyBub3QgY3JlYXRlIGJpbmRpbmcgb2JsaWdhdGlvbnMgICB1bmRlciBpbnRlcm5hdGlvbmFsIGxhdy4gVGhleSBvbmx5IGFwcGx5ICAgdG8gdGhlIFVTIGFuZCB0aGUgb3RoZXIgY291bnRyaWVzIHRoYXQgICBpbnRlbmQgdG8gdGFrZSBwYXJ0IGluIHRoZSBBcnRlbWlzICAgbWlzc2lvbnMuIFJpY2hlciBuYXRpb25zIHN0YW5kIHRvIGdhaW4gdGhlICAgbW9zdCBmcm9tIGFjY2VzcyB0byBzcGFjZSwgd2l0aCBhIHJlY2VudCAgIGludGVybmF0aW9uYWwgYWdyZWVtZW50IGFsbG93aW5nIHRoZW0gdG8gICBsYXdmdWxseSBtaW5lIHRoZSBNb29uIGFuZCBvdGhlciBvYmplY3RzIGluICAgc3BhY2UgaW4gc3VwcG9ydCBvZiBzY2llbnRpZmljIG1pc3Npb25zLiBUaGUgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzQgIDQgICBVUyBhbm5vdW5jZWQgYSBwbGFuIHRvIHJldHVybiBodW1hbnMgdG8gICB0aGUgTW9vbiBpbiAyMDIwLCBoYWxmIGEgY2VudHVyeSBhZnRlciB0aGUgICBBcG9sbG8gbWlzc2lvbnMuICAgWC1GYWN0b3I6ICAg74K3IEFub3RoZXIgcHJvdmlzaW9uIG9mIHRoZSBBcnRlbWlzIEFjY29yZHMsICAgSXQgcmVxdWlyZXMgbmF0aW9ucyBjb25kdWN0aW5nIGFjdGl2aXRpZXMgICBvbiB0aGUgTW9vbiB0byBjcmVhdGUgYSAnc2FmZXR5IHpvbmUnIHRvICAgYXZvaWQgaGFybWZ1bCBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgICBhY3Rpdml0aWVzIG9mIG90aGVyIG5hdGlvbnMuIEEgc2FmZXR5IHpvbmUgaXMgICBhIHRlbXBvcmFyeSBleGNsdXNpb24gem9uZSBvZiBsaW1pdGVkICAgc2l6ZS4gICDvgrcgVGhlIE91dGVyIFNwYWNlIFRyZWF0eSBkb2VzIG5vdCBtZW50aW9uICAgc2FmZXR5IHpvbmVzLiBJdCBvbmx5IHJlcXVpcmVzIG5hdGlvbnMgdG8gICBjb25kdWN0IHRoZWlyIGFjdGl2aXRpZXMgaW4gb3V0ZXIgc3BhY2UgICAnd2l0aCBkdWUgcmVnYXJkJyB0byBvdGhlcnMgb3BlcmF0aW5nIGluICAgc3BhY2UuIEJ1dCB0aGUgQXJ0ZW1pcyBBY2NvcmRzIGFsc28gICBpbnRyb2R1Y2UgbmV3IGNvbmNlcHRzLiAgIO+CtyBJZiB0aGUgbnVtYmVyIG9mIG5hdGlvbnMgc3VwcG9ydGluZyB0aGUgICBBcnRlbWlzIEFjY29yZHMga2VlcHMgaW5jcmVhc2luZywgaXQgd2lsbCAgIGNyZWF0ZSBhIHdpZGVseSBzaGFyZWQgc3RhbmRhcmQgb2YgICBjb25kdWN0LiAgIO+CtyBUaGUgQXJ0ZW1pcyBBY2NvcmRzIGFyZSBub3QgaW50ZXJuYXRpb25hbCAgIGxhdywgYnV0IHRoZXkgaGF2ZSB0aGUgcG90ZW50aWFsIHRvIGJlY29tZSAgIHRoZSBuZXh0IGN1c3RvbWFyeSBwcmFjdGljZSBpbiAgIGludGVybmF0aW9uYWwgbGF3LiAgIFNvdXJjZTogICBodHRwczovL3d3dy50aGVoaW5kdWJ1c2luZXNzbGluZS5jb20vICBuZXdzL3NjaWVuY2UgaGUtYXJ0ZW1pcy1hY2NvcmRzLWFuZC0gIG1pbmluZy1ydWxlcy1vbi1tb29uLSAgZXhwbGFpbmVkL2FydGljbGU2NTg4MTY0Mi5lY2UgICBodHRwczovL3d3dy5uYXNhLmdvdi9zcGVjaWFscy9hcnRlbWlzLSAgYWNjb3Jkcy9pbWcvQXJ0ZW1pcy1BY2NvcmRzLXNpZ25lZC0gIDEzT2N0MjAyMC5wZGYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 64,
      "question" : " Consider the following statements  regarding Double Asteroid Redirection  Test (DART):  1.  It is planetary defence test  mission.  2.  It is dedicated to demonstrate  asteroid deflection through kinetic  impact.  3.  Mission is being planned by the  China National Space  Administration.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IGFuZCAzIGlzIGluY29ycmVjdDogICBOQVNBIHdpbGwgbGF1bmNoIHRoZSBhZ2VuY3kncyBmaXJzdCAgIHBsYW5ldGFyeSBkZWZlbmNlIHRlc3QgbWlzc2lvbiBuYW1lZCB0aGUgICBEb3VibGUgQXN0ZXJvaWQgUmVkaXJlY3Rpb24gVGVzdCAoREFSVCkuICAgVGhlIG1haW4gYWltIG9mIHRoZSBtaXNzaW9uIGlzIHRvIHRlc3QgdGhlICAgbmV3bHkgZGV2ZWxvcGVkIHRlY2hub2xvZ3kgdGhhdCB3b3VsZCBhbGxvdyAgIGEgc3BhY2VjcmFmdCB0byBjcmFzaCBpbnRvIGFuIGFzdGVyb2lkIGFuZCAgIGNoYW5nZSBpdHMgY291cnNlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IERBUlQgaXMgdGhlIGZpcnN0LSAgZXZlciBtaXNzaW9uIGRlZGljYXRlZCB0byBpbnZlc3RpZ2F0aW5nIGFuZCAgIGRlbW9uc3RyYXRpbmcgb25lIG1ldGhvZCBvZiBhc3Rlcm9pZCAgIGRlZmxlY3Rpb24gYnkgY2hhbmdpbmcgYW4gYXN0ZXJvaWQncyAgIG1vdGlvbiBpbiBzcGFjZSB0aHJvdWdoIGtpbmV0aWMgaW1wYWN0LiAgICBUaGlzIG1ldGhvZCB3aWxsIGhhdmUgREFSVCBkZWxpYmVyYXRlbHkgICBjb2xsaWRlIHdpdGggYSB0YXJnZXQgYXN0ZXJvaWQtd2hpY2ggcG9zZXMgICBubyB0aHJlYXQgdG8gRWFydGgtIGluIG9yZGVyIHRvIGNoYW5nZSBpdHMgICBzcGVlZCBhbmQgcGF0aC4gICAgREFSVCdzIHRhcmdldCBpcyB0aGUgYmluYXJ5LCBuZWFyLUVhcnRoICAgYXN0ZXJvaWQgc3lzdGVtIERpZHltb3MsIGNvbXBvc2VkIG9mIHRoZSAgIHJvdWdobHkgNzgwLW1ldGVyICgyLDU2MC1mb290KSAtZGlhbWV0ZXIgICAnRGlkeW1vcycgYW5kIHRoZSBzbWFsbGVyLCBhcHByb3hpbWF0ZWx5ICAgMTYwLW1ldGVyICg1MzAtZm9vdCktc2l6ZSAnRGltb3JwaG9zLCcgICB3aGljaCBvcmJpdHMgRGlkeW1vcy4gICAgWC1GYWN0b3I6ICAgIERBUlQncyBNaXNzaW9uIE9iamVjdGl2ZXM6ICAg74K3IERlbW9uc3RyYXRlIGEga2luZXRpYyBpbXBhY3Qgd2l0aCAgIERpbW9ycGhvcy4gICDvgrcgQ2hhbmdlIHRoZSBiaW5hcnkgb3JiaXRhbCBwZXJpb2Qgb2YgICBEaW1vcnBob3MuICAg74K3IFVzZSBncm91bmQtYmFzZWQgdGVsZXNjb3BlIG9ic2VydmF0aW9ucyAgIHRvIG1lYXN1cmUgRGltb3JwaG9zJyBwZXJpb2QgY2hhbmdlICAgYmVmb3JlIGFuZCBhZnRlciBpbXBhY3QuICAg74K3IE1lYXN1cmUgdGhlIGVmZmVjdHMgb2YgdGhlIGltcGFjdCBhbmQgICByZXN1bHRpbmcgZWplY3RhIG9uIERpbW9ycGhvcy4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cubmFzYS5nb3Yvc3BlY2lhbHMvcGRjby9pbmQgIGV4Lmh0bWwgICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGEgIGluZWQvbmFzYS1kYXJ0LW1pc3Npb24tYXN0ZXJvaWQtICBleHBsYWluZWQtNzYxNzY5Mi8gICBodHRwczovL3d3dy5hZ3JvZWNvbG9neWZ1bmQub3JnL3doYXQtaXMtICBhZ3JvZWNvbG9neSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 65,
      "question" : " With reference to hydroponics,  consider the following statements:  1.  It is a soilless method of  cultivating plants.   \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g1 1  2.  It utilises an inert medium for  mechanical support to plants  called perlite.  3.  It is a labour-intensive method of  agriculture.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYW5kIHN0YXRlbWVudCAyIGlzICAgY29ycmVjdDogSHlkcm9wb25pY3MsIGFsc28gY2FsbGVkICAgYXF1YWN1bHR1cmUsIHRyaWN1bHR1cmUsIHNvaWxsZXNzIGN1bHR1cmUsIG9yICAgdGFuayBmYXJtaW5nLCB0aGUgY3VsdGl2YXRpb24gb2YgcGxhbnRzIGluICAgbnV0cmllbnQtZW5yaWNoZWQgd2F0ZXIsIHdpdGggb3Igd2l0aG91dCAgIHRoZSBtZWNoYW5pY2FsIHN1cHBvcnQgb2YgYW4gaW5lcnQgICBtZWRpdW0gc3VjaCBhcyBzYW5kLCBncmF2ZWwsIG9yIHBlcmxpdGUuICAgUGxhbnRzIGhhdmUgbG9uZyBiZWVuIGdyb3duIHdpdGggdGhlaXIgcm9vdHMgICBpbW1lcnNlZCBpbiBzb2x1dGlvbnMgb2Ygd2F0ZXIgYW5kIGZlcnRpbGl6ZXIgICBmb3Igc2NpZW50aWZpYyBzdHVkaWVzIG9mIHRoZWlyIG51dHJpdGlvbi4gVGhlICAgZmVydGlsaXplciBzb2x1dGlvbiBpcyBjb21wb3NlZCBvZiBkaWZmZXJlbnQgICBhZ3JpY3VsdHVyYWwgb3IgaG9ydGljdWx0dXJhbCBmZXJ0aWxpemVyLWdyYWRlICAgY2hlbWljYWwgY29tcG91bmRzIGNvbnRhaW5pbmcgdmFyeWluZyAgIGFtb3VudHMgb2Ygbml0cm9nZW4sIHBob3NwaG9ydXMsIGFuZCAgIHBvdGFzc2l1bS10aGUgbWFqb3IgZWxlbWVudHMgbmVjZXNzYXJ5ICAgZm9yIHBsYW50IGdyb3d0aC1hbmQgdmFyaW91cyB0cmFjZSwgb3IgICBtaW5vciwgZWxlbWVudHMsIHN1Y2ggYXMgc3VscGh1ciwgICBtYWduZXNpdW0sIGFuZCBjYWxjaXVtLiAgICBIeWRyb3BvbmljIHN5c3RlbXMgaGF2ZSBhIG51bWJlciBvZiAgIGFkdmFudGFnZXMgYXMgY29tcGFyZWQgd2l0aCBjdWx0aXZhdGlvbiBpbiAgIHNvaWwuICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc0ICA1ICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiAgVGhlIHByaW5jaXBhbCAgIGFkdmFudGFnZSBpcyB0aGUgc2F2aW5nIG9mIGxhYm91ciBieSAgIGF1dG9tYXRpYyB3YXRlcmluZyBhbmQgZmVydGlsaXppbmcuICAgSHlkcm9wb25pYyBzeXN0ZW1zIGNhbiBiZSBzZXQgdXAgaW5kb29ycyBpbiAgIHBsYWNlcyB0aGF0IHdvdWxkIG5vdCBub3JtYWxseSBiZSBhdmFpbGFibGUgICBmb3IgdGhlIGdyb3dpbmcgb2YgcGxhbnRzLCBzdWNoIGFzIGluIGRlbnNlbHkgICBwb3B1bGF0ZWQgYXJlYXMsICAgWC1GYWN0b3I6ICAg74K3IFNvbWUgc3lzdGVtcywga25vd24gYXMgYXF1YXBvbmljcywgdXNlICAgbnV0cmllbnQtcmljaCB3YXN0ZXdhdGVyIGZyb20gICBhcXVhY3VsdHVyZSB0byBmZXJ0aWxpemUgaHlkcm9wb25pYyAgIHBsYW50cy4gICAg74K3IEZyZXNod2F0ZXIgZmlzaCwgc3VjaCBhcyB0aWxhcGlhLCBhbmQgICBjcmF5ZmlzaCBhcmUgY29tbW9uIGFxdWF0aWMgYW5pbWFscyAgIHV0aWxpemVkIGZvciB0aGVzZSBoeWJyaWQgc3lzdGVtcy4gICDvgrcgSHlkcm9wb25pYyBjcm9wcyBhcmUgYWxsb3dlZCB0byBiZSAgIGNlcnRpZmllZCBhcyBvcmdhbmljIGluIG1hbnkgcGxhY2VzLiAgIO+CtyBUaGUgaW50ZWdyYXRlZCBzeXN0ZW0gb2YgYXF1YXBvbmljcyAgIGNvbWJpbmVzIHRoZSBhcXVhY3VsdHVyZSBlbGVtZW50IG9mICAgcmFpc2luZyBmaXNoIHdpdGggdGhlIGh5ZHJvcG9uaWNzIGVsZW1lbnQgICBvZiBncm93aW5nIHBsYW50cyBpbiB3YXRlciBpbnN0ZWFkIG9mIHNvaWwuICAgIO+CtyBMaWtlIGh5ZHJvcG9uaWNzLCBncm93IG1lZGlhIGFuZCBwdW1wcyAgIGFyZSB1c2VkLiBCdXQgaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSAgIG1hbi1tYWRlIG51dHJpZW50cyB1c2VkIGluICAgaHlkcm9wb25pY3MsIGFxdWFwb25pY3MgdXNlcyBvcmdhbmljICAgZmlzaCB3YXN0ZSB0byBzdXBwbHkgdGhlIG51dHJpZW50cyBmb3IgICBncm93aW5nIHBsYW50cy4gICBTb3VyY2U6IGh0dHBzOi8vdXBvbmljcy5jb20vYWJvdXQtICBoeWRyb3Bvbmljcy1hbmQtYXF1YXBvbmljcy8gICBodHRwczovL3d3dy5icml0YW5uaWNhLmNvbSBvcGljL2h5ZHJvcCAgb25pY3MgICBodHRwczovL2hhcnBlcnNudXJzZXJpZXMuY29tL2h5ZHJvcG9uaWNzICAtdnMtYXF1YXBvbmljcy8gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  3 only  ",
        "option3" : "  1 and 2 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 66,
      "question" : " With reference to agroforestry,  consider the following statements:  1.  India is the first country to adopt  agroforestry Policy.  2.  It can reduce the agricultural  footprint on the environment.  3.  It includes both traditional and  modern land-use systems.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEluZGlhIGhhcyBiZWNvbWUgICB0aGUgZmlyc3QgbmF0aW9uIGluIHRoZSB3b3JsZCB0byBhZG9wdCBhbiAgIGFncm9mb3Jlc3RyeSBwb2xpY3kuIFRoZSBOYXRpb25hbCAgIEFncm9mb3Jlc3RyeSBQb2xpY3ksIHdoaWNoIGRlYWxzIHdpdGggdGhlICAgcHJhY3RpY2Ugb2YgaW50ZWdyYXRpbmcgdHJlZXMsIGNyb3BzIGFuZCAgIGxpdmVzdG9jayBvbiB0aGUgc2FtZSBwbG90IG9mIGxhbmQsICAgQWdyb2ZvcmVzdHJ5IGlzIGEgY29sbGVjdGl2ZSBuYW1lIGZvciBsYW5kLXVzZSAgIHN5c3RlbXMgYW5kIHRlY2hub2xvZ2llcyB3aGVyZSB3b29keSAgIHBlcmVubmlhbHMgKHRyZWVzLCBzaHJ1YnMsIHBhbG1zLCAgIGJhbWJvb3MsIGV0Yy4pIGFyZSBkZWxpYmVyYXRlbHkgdXNlZCBvbiAgIHRoZSBzYW1lIGxhbmQtbWFuYWdlbWVudCB1bml0cyBhcyAgIGFncmljdWx0dXJhbCBjcm9wcyBhbmQvb3IgYW5pbWFscywgaW4gICBzb21lIGZvcm0gb2Ygc3BhdGlhbCBhcnJhbmdlbWVudCBvciAgIHRlbXBvcmFsIHNlcXVlbmNlLiBJbiBhZ3JvZm9yZXN0cnkgc3lzdGVtcyAgIHRoZXJlIGFyZSBib3RoIGVjb2xvZ2ljYWwgYW5kIGVjb25vbWljYWwgICBpbnRlcmFjdGlvbnMgYmV0d2VlbiB0aGUgZGlmZmVyZW50ICAgY29tcG9uZW50cy4gQWdyb2ZvcmVzdHJ5IGNhbiBhbHNvIGJlICAgZGVmaW5lZCBhcyBhIGR5bmFtaWMsIGVjb2xvZ2ljYWxseSBiYXNlZCwgICBuYXR1cmFsIHJlc291cmNlIG1hbmFnZW1lbnQgc3lzdGVtIHRoYXQsICAgdGhyb3VnaCB0aGUgaW50ZWdyYXRpb24gb2YgdHJlZXMgb24gZmFybXMgICBhbmQgaW4gdGhlIGFncmljdWx0dXJhbCBsYW5kc2NhcGUsICAgZGl2ZXJzaWZpZXMgYW5kIHN1c3RhaW5zIHByb2R1Y3Rpb24gZm9yICAgaW5jcmVhc2VkIHNvY2lhbCwgZWNvbm9taWMgYW5kICAgZW52aXJvbm1lbnRhbCBiZW5lZml0cyBmb3IgbGFuZCB1c2VycyBhdCBhbGwgICBsZXZlbHMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFkb3B0aW5nIGEgbG9uZy0gIHRlcm0gdmlzaW9uIGZvciB0YWNrbGluZyBmb29kIGluc2VjdXJpdHkgICBpc3N1ZXMgbmVjZXNzYXJpbHkgbWVhbnMgYWRvcHRpbmcgbW9yZSAgIHN1c3RhaW5hYmxlIGZhcm1pbmcgcHJhY3RpY2VzLiBUaGlzIGlzIHdoZXJlICAgYWdyb2ZvcmVzdHJ5IGNvbWVzIGluLiBVc2luZyB0aGUgZWNvbG9naWNhbCAgIGZ1bmN0aW9ucyBvZiB0cmVlcywgYW5pbWFscyBhbmQgY3JvcHMgaGFzICAgdGhlIHBvdGVudGlhbCBvZiBpbmNyZWFzaW5nIGZvb2QgICBwcm9kdWN0aW9uIHdoaWxlIHNpbXVsdGFuZW91c2x5ICAgcmVkdWNpbmcgYWdyaWN1bHR1cmUncyBmb290cHJpbnQgb24gdGhlICAgZW52aXJvbm1lbnQuICBQZXJoYXBzIGV2ZW4gbW9yZSAgIGltcG9ydGFudCBpcyB0byBtYWtlIHRoZXNlIHNvbHV0aW9ucyB3b3JrICAgZm9yIHRoZSBwb29yLCB3aG9zZSBsaXZlcyBhcmUgdGhlIG1vc3QgICBhZmZlY3RlZCBieSBlbnZpcm9ubWVudGFsIGRlZ3JhZGF0aW9uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEFncm9mb3Jlc3RyeSAgIHN5c3RlbXMgaW5jbHVkZSBib3RoIHRyYWRpdGlvbmFsIGFuZCAgIG1vZGVybiBsYW5kLXVzZSBzeXN0ZW1zIHdoZXJlIHRyZWVzIGFyZSAgIG1hbmFnZWQgdG9nZXRoZXIgd2l0aCBjcm9wcyBhbmQvb3IgICBhbmltYWwgcHJvZHVjdGlvbiBzeXN0ZW1zIGluIGFncmljdWx0dXJhbCAgIHNldHRpbmdzLiBUaGV5IGFyZSBkeW5hbWljLCBlY29sb2dpY2FsbHkgICBiYXNlZCwgbmF0dXJhbCByZXNvdXJjZSBtYW5hZ2VtZW50ICAgc3lzdGVtcyB0aGF0IGRpdmVyc2lmeSBhbmQgc3VzdGFpbiAgIHByb2R1Y3Rpb24gaW4gb3JkZXIgdG8gaW5jcmVhc2Ugc29jaWFsLCAgIGVjb25vbWljIGFuZCBlbnZpcm9ubWVudGFsIGJlbmVmaXRzIGZvciAgIGxhbmQgdXNlcnMgYXQgYWxsIHNjYWxlcy4gICBYLUZhY3RvcjogICAgQWdyb2ZvcmVzdHJ5IGNvbnRyaWJ1dGVzIHRvIGNsaW1hdGUgY2hhbmdlICAgbWl0aWdhdGlvbiBhbmQgYWRhcHRhdGlvbiAgIEludGVncmF0aW5nIHRyZWVzIGluIGFncmljdWx0dXJhbCBzeXN0ZW1zIGNhbiAgIGhlbHAgdG8gcmVkdWNlIGltcGFjdCBvZiBjbGltYXRlIGNoYW5nZSBvbiAgIGFncmljdWx0dXJlIGFuZCwgaW52ZXJzZWx5LCBkZWNyZWFzZSAgIGFncmljdWx0dXJlJ3MgY29udHJpYnV0aW9uIHRvIHRoZSAgIHBoZW5vbWVub246ICAg74K3IFNvdXJjaW5nIHdvb2QgcHJvZHVjdHMgZnJvbSBvbiBmYXJtICAgcHJvZHVjdGlvbiBkZWNyZWFzZXMgdGhlIG5lZWQgdG8gY3V0ICAgZm9yZXN0IHRyZWVzLCB0aHVzIHJlZHVjaW5nIHRoZSByYXRlIG9mICAgZGVmb3Jlc3RhdGlvbiwgd2hpY2ggaXMgb25lIG9mIHRoZSBtYWluICAgZmFjdG9ycyBjb250cmlidXRpbmcgdG8gY2xpbWF0ZSBjaGFuZ2UuICAg74K3IEJldHRlciBtYW5hZ2VtZW50IG9mIHNvaWwgbnV0cmllbnRzICAgcmVkdWNlcyB0aGUgbmVlZCB0byByZXNvcnQgdG8gZmVydGlsaXplcnMsICAgYW5vdGhlciBzaWduaWZpY2FudCBzb3VyY2Ugb2YgR0hHICAgZW1pc3Npb25zLiAgIO+CtyBUcmVlcyBwbGFudGVkIGluIGFncm9mb3Jlc3RyeSBzeXN0ZW1zICAgY29udHJpYnV0ZSB0byBjbGltYXRlIGNoYW5nZSBtaXRpZ2F0aW9uICAgdGhyb3VnaCBjYXJib24gc2VxdWVzdHJhdGlvbi4gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzQgIDYgICDvgrcgQnkgdXNpbmcgd29vZGZ1ZWwgZnJvbSBhZ3JvZm9yZXN0cnkgICBzeXN0ZW1zLCBwZW9wbGUgY2FuIG1lZXQgdGhlaXIgZW5lcmd5ICAgbmVlZHMgaW4gYSBjYXJib24gbmV1dHJhbCB3YXkuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LmZhby5vcmcvZm9yZXN0cnkvYWdyb2ZvcmVzdCAgcnkvODk5OTkvZW4vICAgaHR0cHM6Ly93d3cuZG93bnRvZWFydGgub3JnLmluL25ld3MvaSAgbmRpYS1iZWNvbWVzLWZpcnN0LWNvdW50cnktdG8tYWRvcHQtYW4tICBhZ3JvZm9yZXN0cnktcG9saWN5LTQzNTE4ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 67,
      "question" : " The tern 'Jezero', often seen in the  news related to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogICBUaGUgYWNjZXB0ZWQgdmlldyBvZiBNYXJzIGlzIHJlZCByb2NrcyBhbmQgICBjcmF0ZXJzIGFzIGZhciBhcyB0aGUgZXllIGNhbiBzZWUuIFRoYXQncyAgIG11Y2ggd2hhdCBzY2llbnRpc3RzIGV4cGVjdGVkIHdoZW4gdGhlICAgcm92ZXIgUGVyc2V2ZXJhbmNlIGxhbmRlZCBpbiB0aGUgSmV6ZXJvICAgQ3JhdGVyLCBhIHNwb3QgY2hvc2VuIHBhcnRseSBmb3IgdGhlICAgY3JhdGVyJ3MgaGlzdG9yeSBhcyBhIGxha2UgYW5kIGFzIHBhcnQgb2YgYSAgIHJpY2ggcml2ZXIgc3lzdGVtLiAgIFVuZGVyc3RhbmRpbmcgdGhlIHJvY2tzIG9uIE1hcnMsIHRoZWlyICAgZXZvbHV0aW9uIGFuZCBoaXN0b3J5LCBhbmQgd2hhdCB0aGV5IHJldmVhbCAgIGFib3V0IHRoZSBoaXN0b3J5IG9mIHBsYW5ldGFyeSBjb25kaXRpb25zIG9uICAgTWFycyBoZWxwIHJlc2VhcmNoZXJzIHVuZGVyc3RhbmQgaG93IGxpZmUgICBtYXkgaGF2ZSBhcmlzZW4gb24gTWFycyBhbmQgaG93IHRoYXQgICBjb21wYXJlcyB3aXRoIGVhcmx5IGxpZmUgYW5kIGNvbmRpdGlvbnMgb24gICBhbmNpZW50IEVhcnRoLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zY2ktICB0ZWNoL2hvdy1kb2VzLXN0dWR5aW5nLW1hcnRpYW4tcm9ja3MtICBoZWxwLW91ci11bmRlcnN0YW5kaW5nLW9mLWVhcmx5LSAgZWFydGgvYXJ0aWNsZTY1ODE0NjYzLmVjZSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Lunar crater having history as a   lake.  ",
        "option2" : "  Martian crater having history of   River system.  ",
        "option3" : "  Chinese Navigation satellite.  ",
        "option4" : "  Newly discovered dwarf planet.   "
      }
    },
    {
      "index" : 68,
      "question" : " With reference to the components of  agroforestry, which of the following are  included under Agri silvicultural  systems?  1.  Taungya  2.  Protein banks  3.  Aquaforestry  4.  Alley intercropping  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICAgQWdyb2ZvcmVzdHJ5IGlzIGEgY29sbGVjdGl2ZSBuYW1lIGZvciBsYW5kLXVzZSAgIHN5c3RlbXMgYW5kIHRlY2hub2xvZ2llcyB3aGVyZSB3b29keSAgIHBlcmVubmlhbHMgKHRyZWVzLCBzaHJ1YnMsIHBhbG1zLCBiYW1ib29zLCAgIGV0Yy4pIGFyZSBkZWxpYmVyYXRlbHkgdXNlZCBvbiB0aGUgc2FtZSBsYW5kLSAgbWFuYWdlbWVudCB1bml0cy4gICBBZ3Jpc2lsdmljdWx0dXJhbCBzeXN0ZW1zIGFyZSBvbmUgb2YgdGhlICAgY29tYmluYXRpb25zIG9mIGNyb3BzIGFuZCB0cmVlcywgc3VjaCBhcyAgIGFsbGV5IGNyb3BwaW5nIG9yIGhvbWUgZ2FyZGVucy4gICAgU2lsdm9wYXN0b3JhbCBzeXN0ZW1zIGNvbWJpbmUgZm9yZXN0cnkgICBhbmQgZ3JhemluZyBvZiBkb21lc3RpY2F0ZWQgYW5pbWFscyBvbiAgIHBhc3R1cmVzLCByYW5nZWxhbmRzIG9yIG9uLWZhcm0uICAgVGhlIHRocmVlIGVsZW1lbnRzLCBuYW1lbHkgdHJlZXMsIGFuaW1hbHMgICBhbmQgY3JvcHMsIGNhbiBiZSBpbnRlZ3JhdGVkIGluICAgYWdyb3N5bHZvcGFzdG9yYWwgc3lzdGVtcyBhbmQgYXJlICAgaWxsdXN0cmF0ZWQgYnkgaG9tZWdhcmRlbnMgaW52b2x2aW5nICAgYW5pbWFscyBhcyB3ZWxsIGFzIHNjYXR0ZXJlZCB0cmVlcyBvbiAgIGNyb3BsYW5kcyB1c2VkIGZvciBncmF6aW5nIGFmdGVyIGhhcnZlc3RzLiAgIEFncmlzaWx2aWN1bHR1cmFsIHN5c3RlbXMgKHRyZWVzIGNvbWJpbmVkICAgd2l0aCBjcm9wcykgaW5jbHVkZTogICAgSW1wcm92ZWQgICBmYWxsb3dzOiAgIHdvb2R5IHNwZWNpZXMgcGxhbnRlZCBhbmQgICBsZWZ0IHRvIGdyb3cgZHVyaW5nIGZhbGxvdy4gICBUYXVuZ3lhOiAgY29tYmluZWQgc3RhbmQgb2Ygd29vZHkgICBhbmQgYWdyaWN1bHR1cmFsIHNwZWNpZXMgICBkdXJpbmcgZWFybHkgc3RhZ2VzIG9mICAgZXN0YWJsaXNobWVudCBvZiAgIHBsYW50YXRpb25zLiAgICBBbGxleSBjcm9wcGluZyAgIChoZWRnZXJvdyAgIGludGVyY3JvcHBpbmcpOiAgIHdvb2R5IHNwZWNpZXMgaW4gaGVkZ2VzOyAgIGFncmljdWx0dXJhbCBzcGVjaWVzIGluICAgYWxsZXlzIGluIGJldHdlZW4gaGVkZ2VzOyAgICBNdWx0aWxheWVyIHRyZWUgICBnYXJkZW5zOiAgIG11bHRpc3BlY2llcywgbXVsdGlsYXllciAgIGRlbnNlIHBsYW50IGFzc29jaWF0aW9ucyAgIHdpdGggbm8gb3JnYW5pemVkIHBsYW50aW5nICAgYXJyYW5nZW1lbnRzLiAgICBQbGFudGF0aW9uIGNyb3AgICBjb21iaW5hdGlvbnM6ICAgIHN1Y2ggYXMgaW50ZWdyYXRlZCAgIG11bHRpc3RvcmV5IG1peHR1cmVzIG9mICAgcGxhbnRhdGlvbiBjcm9wczsgb2YgICBwbGFudGF0aW9uIGNyb3BzIGluICAgYWx0ZXJuYXRlOyBzaGFkZSB0cmVlcyBmb3IgICBwbGFudGF0aW9uIGNyb3BzOyBzaGFkZSAgIHRyZWVzIHNjYXR0ZXJlZDsgICBpbnRlcmNyb3BwaW5nLiAgIFByb3RlaW4gQmFua3MgYW5kIGFxdWFmb3Jlc3RyeSBiZWxvbmcgdG8gICBzaWx2b3Bhc3RvcmFsIGFuZCBBZ3Jvc2lsdm9wYXN0b3JhbCAgIHN5c3RlbXMgcmVzcGVjdGl2ZWx5LiAgIFgtRmFjdG9yOiAgICBXaW5kIEJyZWFrczogQWxzbyBjYWxsZWQgc2hlbHRlcmJlbHRzLiAgICDvgrcgVGhlc2UgYXJlIGxpbmVhciBwbGFudGluZ3Mgb2YgdHJlZXMgYW5kICAgc2hydWJzIGRlc2lnbmVkIHRvIHByb3ZpZGUgZWNvbm9taWMsICAgZW52aXJvbm1lbnRhbCBhbmQgY29tbXVuaXR5IGJlbmVmaXRzLiAgICDvgrcgVGhlIHByaW1hcnkgcHVycG9zZSBvZiBtb3N0IHdpbmRicmVha3MgICBpcyB0byBzbG93IHRoZSB3aW5kIHdoaWNoIGNyZWF0ZXMgYSBtb3JlICAgYmVuZWZpY2lhbCBjb25kaXRpb24gZm9yIHNvaWxzLCBjcm9wcywgICBsaXZlc3RvY2ssIHdpbGRsaWZlIGFuZCBwZW9wbGUuICAgIO+CtyBOb24td2luZCByZWxhdGVkIHB1cnBvc2VzIGluY2x1ZGUgc2hhZGUgICBmb3IgbGl2ZXN0b2NrLCB2aXN1YWwgc2NyZWVuaW5nLCBhZXN0aGV0aWNzLCAgIHJlY3JlYXRpb25hbCBvcHBvcnR1bml0aWVzLCBhbmQgd29vZCBhbmQgICBub250aW1iZXIgZm9yZXN0IHByb2R1Y3RzLiAgICDvgrcgQmVuZWZpdHMgaW5jbHVkZSBlbmhhbmNlbWVudCBvZiAgIGJpb2RpdmVyc2l0eSwgd2lsZGxpZmUgaGFiaXRhdCwgY2FyYm9uICAgc3RvcmFnZSwgcG9sbGluYXRvciBoYWJpdGF0LCBhbmQgc29pbCBhbmQgICB3YXRlciBxdWFsaXR5IHByb3RlY3Rpb24uICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LmZhby5vcmcvZm9yZXN0cnkvYWdyb2ZvcmVzdCAgcnkvOTAwMjkvZW4vICAgaHR0cHM6Ly93d3cuZnMudXNkYS5nb3YvbmFjL3ByYWN0aWNlcy8gIHdpbmRicmVha3MucGhwICAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnNCAgNyAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  3 and 4 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1 an 4 only   "
      }
    },
    {
      "index" : 69,
      "question" : " Consider the following statements  regarding National Mission for  Sustainable Agriculture (NMSA):  1.  It derives its mandate from United  Nations Environment Programme.  2.  It aims at promoting location  specific improved agronomic  practices.  3.  It has been formulated for  enhancing agricultural  productivity only in rainfed areas.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogU3VzdGFpbmluZyAgIGFncmljdWx0dXJhbCBwcm9kdWN0aXZpdHkgZGVwZW5kcyBvbiBxdWFsaXR5ICAgYW5kIGF2YWlsYWJpbGl0eSBvZiBuYXR1cmFsIHJlc291cmNlcyBsaWtlIHNvaWwgICBhbmQgd2F0ZXIuIEFncmljdWx0dXJhbCBncm93dGggY2FuIGJlICAgc3VzdGFpbmVkIGJ5IHByb21vdGluZyBjb25zZXJ2YXRpb24gYW5kICAgc3VzdGFpbmFibGUgdXNlIG9mIHRoZXNlIHNjYXJjZSBuYXR1cmFsICAgcmVzb3VyY2VzIHRocm91Z2ggYXBwcm9wcmlhdGUgbG9jYXRpb24gICBzcGVjaWZpYyBtZWFzdXJlcy4gICAgSW5kaWFuIGFncmljdWx0dXJlIHJlbWFpbnMgcHJlZG9taW5hbnRseSAgIHJhaW5mZWQgY292ZXJpbmcgYWJvdXQgNjAlIG9mIHRoZSBjb3VudHJ5J3MgICBuZXQgc293biBhcmVhIGFuZCBhY2NvdW50cyBmb3IgNDAlIG9mIHRoZSAgIHRvdGFsIGZvb2QgcHJvZHVjdGlvbi4gVGh1cywgY29uc2VydmF0aW9uIG9mICAgbmF0dXJhbCByZXNvdXJjZXMgaW4gY29uanVuY3Rpb24gd2l0aCAgIGRldmVsb3BtZW50IG9mIHJhaW5mZWQgYWdyaWN1bHR1cmUgaG9sZHMgdGhlICAga2V5IHRvIG1lZXQgYnVyZ2VvbmluZyBkZW1hbmRzIGZvciBmb29kICAgZ3JhaW4gaW4gdGhlIGNvdW50cnkuICAgIE5hdGlvbmFsIE1pc3Npb24gZm9yIFN1c3RhaW5hYmxlICAgQWdyaWN1bHR1cmUvTk1TQSBkZXJpdmVzIGl0cyBtYW5kYXRlICAgZnJvbSBTdXN0YWluYWJsZSBBZ3JpY3VsdHVyZSBNaXNzaW9uICAgd2hpY2ggaXMgb25lIG9mIHRoZSBlaWdodCBNaXNzaW9ucyAgIG91dGxpbmVkIHVuZGVyIE5hdGlvbmFsIEFjdGlvbiBQbGFuIG9uICAgQ2xpbWF0ZSBDaGFuZ2UgKE5BUENDKS4gICBOTVNBIHdpbGwgY2F0ZXIgdG8ga2V5IGRpbWVuc2lvbnMgb2YgJ1dhdGVyICAgdXNlIGVmZmljaWVuY3knLCAnTnV0cmllbnQgTWFuYWdlbWVudCcgYW5kICAgJ0xpdmVsaWhvb2QgZGl2ZXJzaWZpY2F0aW9uJyB0aHJvdWdoIGFkb3B0aW9uICAgb2Ygc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQgcGF0aHdheSBieSAgIHByb2dyZXNzaXZlbHkgc2hpZnRpbmcgdG8gZW52aXJvbm1lbnRhbGx5ICAgZnJpZW5kbHkgdGVjaG5vbG9naWVzLCBhZG9wdGlvbiBvZiBlbmVyZ3kgICBlZmZpY2llbnQgZXF1aXBtZW50LCBjb25zZXJ2YXRpb24gb2YgbmF0dXJhbCAgIHJlc291cmNlcywgaW50ZWdyYXRlZCBmYXJtaW5nLCBldGMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogIEJlc2lkZXMsIE5NU0EgICBhaW1zIGF0IHByb21vdGluZyBsb2NhdGlvbiBzcGVjaWZpYyAgIGltcHJvdmVkIGFncm9ub21pYyBwcmFjdGljZXMgdGhyb3VnaCAgIHNvaWwgaGVhbHRoIG1hbmFnZW1lbnQsIGVuaGFuY2VkIHdhdGVyICAgdXNlIGVmZmljaWVuY3kgYW5kIGp1ZGljaW91cyB1c2Ugb2YgICBjaGVtaWNhbHMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBOYXRpb25hbCAgIE1pc3Npb24gZm9yIFN1c3RhaW5hYmxlIEFncmljdWx0dXJlICAgKE5NU0EpIGhhcyBiZWVuIGZvcm11bGF0ZWQgZm9yICAgZW5oYW5jaW5nIGFncmljdWx0dXJhbCBwcm9kdWN0aXZpdHkgICBlc3BlY2lhbGx5IGluIHJhaW5mZWQgYXJlYXMgZm9jdXNpbmcgb24gICBpbnRlZ3JhdGVkIGZhcm1pbmcsIHdhdGVyIHVzZSBlZmZpY2llbmN5LCAgIHNvaWwgaGVhbHRoIG1hbmFnZW1lbnQgYW5kIHN5bmVyZ2l6aW5nICAgcmVzb3VyY2UgY29uc2VydmF0aW9uLiAgIFgtRmFjdG9yOiAgICBOYXRpb25hbCBCYW1ib28gTWlzc2lvbiAgIO+CtyBCYW1ib28gaXMgYSB2ZXJzYXRpbGUgZ3JvdXAgb2YgcGxhbnRzICAgd2hpY2ggaXMgY2FwYWJsZSBvZiBwcm92aWRpbmcgZWNvbG9naWNhbCwgICBlY29ub21pYyBhbmQgbGl2ZWxpaG9vZCBzZWN1cml0eSB0byB0aGUgICBwZW9wbGUuICAgIO+CtyBJbmRpYSBoYXMgdGhlIGhpZ2hlc3QgYXJlYSB1bmRlciBiYW1ib28gICBhbmQgaXMgdGhlIHNlY29uZCByaWNoZXN0IGNvdW50cnksIGFmdGVyICAgQ2hpbmEsIGluIHRlcm1zIG9mIGJhbWJvbyBkaXZlcnNpdHkgd2l0aCAgIDEzNiBzcGVjaWVzICgxMjUgaW5kaWdlbm91cyBhbmQgMTEgICBleG90aWMpLiAgICDvgrcgS2VlcGluZyBpbiB2aWV3IHRoZSB2YXN0IHVudGFwcGVkICAgcG90ZW50aWFsIG9mIHRoZSBiYW1ib28gc2VjdG9yLCBib29zdCAgIGRvbWVzdGljIGN1bHRpdmF0aW9uIG9mIHF1YWxpdHkgYW5kICAgYXBwcm9wcmlhdGUgc3BlY2llcyBmb3Igc3VwcGx5IHRvIG91ciAgIGluZHVzdHJ5LCB0aGUgcmVzdHJ1Y3R1cmVkIE5hdGlvbmFsICAgQmFtYm9vIE1pc3Npb24gKE5CTSkgaGFzIGJlZW4gICBhcHByb3ZlZCBmb3IgaW1wbGVtZW50YXRpb24gYWNyb3NzIHRoZSAgIGNvdW50cnkuICAg74K3IFRoZSBOYXRpb25hbCBCYW1ib28gTWlzc2lvbiAoTkJNKSB3YXMgICBsYXVuY2hlZCBhcyBhIENlbnRyYWxseSBTcG9uc29yZWQgICBTY2hlbWUgYW5kIHdhcyBzdWJzdW1lZCB1bmRlciAgIE1pc3Npb24gZm9yIEludGVncmF0ZWQgRGV2ZWxvcG1lbnQgb2YgICBIb3J0aWN1bHR1cmUuICAgU291cmNlOiAgIGh0dHBzOi8vbmJtLm5pYy5pbi9Eb2N1bWVudHMvcGRmL05CICBNX0d1aWRlbGluZXNfTmV3LnBkZiAgIGh0dHBzOi8vbm1zYS5kYWMuZ292LmluLyAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 70,
      "question" : " With reference to mulching, consider  the following statements:  1.  It refers to the placement of  inorganic materials over the top of  soil surface in order to protect it.  2.  Grass clippings are an excellent  form of mulch.  3.  Mulches can not insulate the soils  during winters.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE11bGNoaW5nIGlzIHRoZSAgIHBsYWNlbWVudCBvZiBhbnkgb3JnYW5pYyBvciBpbm9yZ2FuaWMgICBtYXRlcmlhbCBvdmVyIHRoZSB0b3Agb2YgYSBzb2lsIHN1cmZhY2UgdG8gICBwcm90ZWN0IGl0LiAgU29tZSBvZiB0aGUgYmVuZWZpdHMgaW5jbHVkZTogICByZWR1Y2VkIHNvaWwgZXJvc2lvbiwgbGVzcyBjb21wYWN0aW9uLCAgIG1vaXN0dXJlIGNvbnNlcnZhdGlvbiwgaW5jcmVhc2VkIGNvbnRyb2wgb2YgICBzb2lsIHRlbXBlcmF0dXJlLCBhbmQgYSByZWR1Y3Rpb24gaW4gd2VlZCAgIGdyb3d0aC4gICBUaGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2YgbXVsY2hpbmcgICBtYXRlcmlhbHMuICBTb21lIG9mIHRoZXNlIG1hdGVyaWFscyBhcmUgICByZWFkaWx5IGF2YWlsYWJsZSwgd2hpbGUgb3RoZXJzIGNhbiBiZSAgIHB1cmNoYXNlZCBmcm9tIHZhcmlvdXMgc3VwcGxpZXJzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRm9yIGV4YW1wbGUsIGdyYXNzICAgY2xpcHBpbmdzIGFyZSBhIG1hdGVyaWFsIHRoYXQgZXZlcnlvbmUgaGFzICAgYW5kIGFyZSBhbiBleGNlbGxlbnQgZm9ybSBvZiBtdWxjaC4gICAgIElub3JnYW5pYyBtdWxjaGVzLCBzdWNoIGFzIHZhcmlvdXMgZm9ybXMgb2YgICBncmF2ZWwgb3IgZ3JvdW5kLXVwIHJvYWQgdGlyZXMsIGNhbiBhbHNvIGJlICAgdXNlZCBidXQgbGFjayB0aGUgc29pbCBpbXByb3ZpbmcgcHJvcGVydGllcyAgIHRoYXQgYXJlIG9mdGVuIGRlc2lyZWQgYW5kIG9idGFpbmVkIHdoZW4gdGhlICAgb3JnYW5pYyBtdWxjaGVzIGJyZWFrIGRvd24uICAgQXBwbHlpbmcgbXVsY2ggZGVwZW5kcyBvbiB0aGUgcmVzdWx0ICAgZGVzaXJlZC4gIE11bGNoZXMgcGxhY2VkIG92ZXIgdGhlIHN1cmZhY2UgICBwcmlvciB0byBzdW1tZXIgd2lsbCBrZWVwIHRoZSBhcmVhIGNvb2xlciAgIHRoYW4gbm9uLW11bGNoZWQgc29pbHMuICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluIHdpbnRlciwgdGhlICAgYXJlYSBjb250YWluaW5nIG11bGNoIHdpbGwgaW5zdWxhdGUgdGhlICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc0ICA4ICAgc29pbCB0byB0aGUgcG9pbnQgdGhhdCBmcm9zdCBwZW5ldHJhdGlvbiAgIHdpbGwgbm90IGdvIGFzIGRlZXAuICAgWC1GYWN0b3I6ICAg74K3IFRoZSBsb25nLXRlcm0gYmVuZWZpdHMgb2YgbXVsY2hpbmcgYXJlIGEgICBwb3NpdGl2ZSBwcmFjdGljZSB0aGF0IHByb3RlY3RzIHRoZSBzb2lsICAgcmVzb3VyY2UgYW5kIGltcHJvdmVzIHRoZSBsYW5kc2NhcGUuICAg74K3IE9yZ2FuaWMgbXVsY2hlcyB3aWxsIGRlY29tcG9zZSBvdmVyICAgdGltZSBhbmQgbmVlZCB0byBiZSByZWFwcGxpZWQgd2hlbiB0aGUgICByZXN1bHRzIG9mIHRoZSBtdWxjaCBhcmUgbW9zdCBkZXNpcmVkLiAgICDvgrcgQmFyayBtdWxjaCB0eXBpY2FsbHkgaXMgbW9yZSBkdXJhYmxlLCAgIGxhc3RzIGxvbmdlciwgYW5kIGlzIG1vcmUgYXR0cmFjdGl2ZSBpbiB0aGUgICBsYW5kc2NhcGUuICAgIG8gTXVsY2hlcyBjb25zZXJ2ZSB0aGUgc29pbCBtb2lzdHVyZSAgIG8gZW5oYW5jZSB0aGUgbnV0cmllbnRzIHN0YXR1cyBvZiBzb2lsICAgbyBjb250cm9sIHRoZSBlcm9zaW9uIGxvc3NlcyAgIG8gc3VwcHJlc3MgdGhlIHdlZWRzIGluIGNyb3AgcGxhbnRzICAgbyBSZW1vdmUgdGhlIHJlc2lkdWFsIGVmZmVjdHMgb2YgICBmZXJ0aWxpemVycyBhbmQgaGVhdnkgbWV0YWwuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lm5yY3MudXNkYS5nb3Yvd3BzL3BvcnRhbC8gIG5yY3MvZGV0YWlsL2tzL25ld3Nyb29tL2ZlYXR1cmVzLz9jaWQgID1ucmNzZXByZDQ3MDIwNiAgIGh0dHBzOi8vYm5yYy5zcHJpbmdlcm9wZW4uY29tL2FydGljbGVzLzEwICAuMTE4Ni9zNDIyNjktMDIwLTAwMjkwLTMgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3 only   "
      }
    },
    {
      "index" : 71,
      "question" : " Consider the following statements  regarding alley cropping:  1.  It refers to growing different crops  in close proximity.  2.  It improves crop production and  provides microclimate benefits.  3.  It is called intercropping in  tropical areas.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogIEFsbGV5IGNyb3BwaW5nIGlzICAgZGVmaW5lZCBhcyB0aGUgcGxhbnRpbmcgb2Ygcm93cyBvZiB0cmVlcyAgIGFuZC9vciBzaHJ1YnMgdG8gY3JlYXRlIGFsbGV5cyB3aXRoaW4gd2hpY2ggICBhZ3JpY3VsdHVyYWwgb3IgaG9ydGljdWx0dXJhbCBjcm9wcyBhcmUgICBwcm9kdWNlZC4gVGhlIHRyZWVzIG1heSBpbmNsdWRlIHZhbHVhYmxlICAgaGFyZHdvb2QgdmVuZWVyIG9yIGx1bWJlciBzcGVjaWVzOyBmcnVpdCwgICBudXQgb3Igb3RoZXIgc3BlY2lhbHR5IGNyb3AgdHJlZXMvc2hydWJzOyBvciAgIGRlc2lyYWJsZSBzb2Z0d29vZCBzcGVjaWVzIGZvciB3b29kIGZpYmVyICAgcHJvZHVjdGlvbi4gICBBbGxleSBjcm9wcGluZyBjYW4gdmFyeSBmcm9tIHNpbXBsZSBzeXN0ZW1zICAgc3VjaCBhcyBhbiBhbm51YWwgZ3JhaW4gcm90YXRpb24gYmV0d2VlbiAgIHRpbWJlciB0cmVlIHNwZWNpZXMgdG8gY29tcGxleCwgbXVsdGlsYXllcmVkICAgc3lzdGVtcyB0aGF0IGNhbiBwcm9kdWNlIGEgZGl2ZXJzZSByYW5nZSBvZiAgIGFncmljdWx0dXJhbCBwcm9kdWN0cy4gQWxsZXkgY3JvcHBpbmcgICBzeXN0ZW1zIGFyZSBzb21ldGltZXMgY2FsbGVkICAgaW50ZXJjcm9wcGluZywgZXNwZWNpYWxseSBpbiB0cm9waWNhbCAgIGFyZWFzLiBJdCBpcyBlc3BlY2lhbGx5IGF0dHJhY3RpdmUgdG8gcHJvZHVjZXJzICAgaW50ZXJlc3RlZCBpbiBncm93aW5nIG11bHRpcGxlIGNyb3BzIG9uIHRoZSAgIHNhbWUgYWNyZWFnZSB0byBpbXByb3ZlIHdob2xlLWZhcm0geWllbGQuICAgR3Jvd2luZyBhIHZhcmlldHkgb2YgY3JvcHMgaW4gY2xvc2UgICBwcm94aW1pdHkgdG8gZWFjaCBvdGhlciBjYW4gY3JlYXRlICAgc2lnbmlmaWNhbnQgYmVuZWZpdHMgdG8gcHJvZHVjZXJzLCBzdWNoIGFzICAgaW1wcm92ZWQgY3JvcCBwcm9kdWN0aW9uIGFuZCAgIG1pY3JvY2xpbWF0ZSBiZW5lZml0cyBhbmQgaGVscCB0aGVtICAgbWFuYWdlIHJpc2suICAgWC1GYWN0b3I6ICAgIFNpbHZvcGFzdHVyZSAgIO+CtyBJdCBpcyB0aGUgZGVsaWJlcmF0ZSBpbnRlZ3JhdGlvbiBvZiB0cmVlcyBhbmQgICBncmF6aW5nIGxpdmVzdG9jayBvcGVyYXRpb25zIG9uIHRoZSBzYW1lICAgbGFuZC4gICAg74K3IFRoZXNlIHN5c3RlbXMgYXJlIGludGVuc2l2ZWx5IG1hbmFnZWQgICBmb3IgYm90aCBmb3Jlc3QgcHJvZHVjdHMgYW5kIGZvcmFnZSwgICBwcm92aWRpbmcgYm90aCBzaG9ydC0gYW5kIGxvbmctdGVybSAgIGluY29tZSBzb3VyY2VzLiAgIO+CtyBUaGV5IGFyZSBjcmVhdGVkIGJ5IGludHJvZHVjaW5nIGZvcmFnZSAgIGludG8gYSB3b29kbGFuZCBvciB0cmVlIHBsYW50YXRpb24gb3IgYnkgICBpbnRyb2R1Y2luZyB0cmVlcyBpbnRvIGEgcGFzdHVyZS4gICAg74K3IFJvdGF0aW9uYWwgZ3JhemluZyBpcyBhIGtleSBtYW5hZ2VtZW50ICAgYWN0aXZpdHkgd2hlbiB1c2luZyBzaWx2b3Bhc3R1cmUgaW4gb3JkZXIgICB0byBtaW5pbWl6ZSBkYW1hZ2UgdG8gdHJlZXMuICAgIO+CtyBTcGVjaWFsIGNvbnNpZGVyYXRpb25zIGFuZCBwbGFubmluZyAgIG11c3QgYWxzbyBiZSB0YWtlbiBpbnRvIGFjY291bnQgZm9yIGxvbmctICB0ZXJtIHRyZWUgcmVnZW5lcmF0aW9uLiAgIFNvdXJjZTogICBodHRwczovL3d3dy5mcy51c2RhLmdvdi9uYWMvcHJhY3RpY2VzLyAgYWxsZXktY3JvcHBpbmcucGhwICAgaHR0cHM6Ly93d3cuZnMudXNkYS5nb3YvbmFjL3ByYWN0aWNlcy8gIHNpbHZvcGFzdHVyZS5waHAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : " 2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 72,
      "question" : " Which of the following are not the  principles of Zero Budget Natural  Farming?  1.  Use of exotic seeds  2.  No bio stimulants  3.  Minimal disturbance of Soil  4.  No external inputs   5.  Segregation of animals   Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogWmVybyBCdWRnZXQgTmF0dXJhbCAgIEZhcm1pbmcgbWVhbnMgcmFpc2luZyBjcm9wcyB3aXRob3V0IHVzaW5nICAgYW55IGZlcnRpbGl6ZXJzIGFuZCBwZXN0aWNpZGVzIG9yIGFueSBvdGhlciAgIGV4dGVybmFsIG1hdGVyaWFscy4gICBaZXJvIGJ1ZGdldCBmYXJtaW5nIG1vZGVsIGJyaW5ncyBkb3duICAgZmFybSBleHBlbmRpdHVyZSB0byBhIGdyZWF0IGV4dGVudCBhbmQgZW5kcyAgIGRlcGVuZGVuY2Ugb24gZmFybSBsb2Fucy4gSXQgYWxzbyByZWR1Y2VzICAgZGVwZW5kZW5jZSBvbiBwdXJjaGFzZWQgaW5wdXRzIGFzIGl0ICAgZW5jb3VyYWdlcyB1c2Ugb2Ygb3duIHNlZWRzIGFuZCBsb2NhbGx5ICAgYXZhaWxhYmxlIG5hdHVyYWwgZmVydGlsaXplcnMgYW5kIGZhcm1pbmcgaXMgICBkb25lIGluIHN5bmNocm9uaXphdGlvbiB3aXRoIG5hdHVyZS4gICBQcmluY2lwbGVzIG9mIFplcm8gQnVkZ2V0IE5hdHVyYWwgRmFybWluZyAgIE5vIGV4dGVybmFsIGlucHV0cyAgIFNvaWwgdG8gYmUgY292ZXJlZCB3aXRoIGNyb3BzIDM2NSBkYXlzICAgKExpdmluZyBSb290KSAgIE1pbmltYWwgZGlzdHVyYmFuY2Ugb2YgU29pbCAgIEJpbyBzdGltdWxhbnRzIGFzIG5lY2Vzc2FyeSBjYXRhbHlzdHMgICBVc2UgaW5kaWdlbm91cyBzZWVkLiAgIE1peGVkIGNyb3BwaW5nICAgSW50ZWdyYXRpb24gb2YgdHJlZXMgaW50byB0aGUgZmFybSAgIFdhdGVyIGFuZCBtb2lzdHVyZSBjb25zZXJ2YXRpb24gICBJbnRlZ3JhdGUgYW5pbWFscyBpbiB0byBmYXJtaW5nICAgSW5jcmVhc2Ugb3JnYW5pYyByZXNpZHVlcyBvbiB0aGUgc29pbCAgIFBlc3QtbWFuYWdlbWVudCB0aHJvdWdoIGJvdGFuaWNhbCAgIGV4dHJhY3RzICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc0ICA5ICAgTm8gc3ludGhldGljIGZlcnRpbGl6ZXJzLCBwZXN0aWNpZGVzLCAgIGhlcmJpY2lkZXMgICBYLUZhY3RvcjogICDvgrcgR292ZXJubWVudCBvZiBJbmRpYSBoYXMgYmVlbiBwcm9tb3RpbmcgICBvcmdhbmljIGZhcm1pbmcgdW5kZXIgb2YgICBQYXJhbXBhcmFnYXRLcmlzaGlWaWthcyBZb2phbmEgKFBLVlkpICAgd2hpY2ggZW5jb3VyYWdlcyBhbGwga2luZHMgb2YgY2hlbWljYWwtICBmcmVlIGZhcm1pbmcgc3lzdGVtcyBpbmNsdWRpbmcgWmVybyAgIEJ1ZGdldCBOYXR1cmFsIEZhcm1pbmcuICAg74K3IE5hdGlvbmFsIFNhbXBsZSBTdXJ2ZXkgT2ZmaWNlIGRhdGEgICBpbmRpY2F0ZXMgbW9yZSB0aGFuIDUwIHBlciBjZW50IG9mIGFsbCAgIGZhcm1lcnMgYXJlIGluIGRlYnQgZHVlIHRvIGluY3JlYXNlZCBjb3N0ICAgb2YgZmFybSBpbnB1dHMgbGlrZSBmZXJ0aWxpemVycyBhbmQgICBjaGVtaWNhbCBwZXN0aWNpZGVzLiAgIO+CtyBUbyBkb3VibGUgZmFybWVycycgaW5jb21lLCB0aGUgZmFybSAgIGV4cGVuZGl0dXJlIG5lZWRzIHRvIGJlIGJyb3VnaHQgZG93biAgIGFuZCBuYXR1cmFsIGZhcm1pbmcgcHJhY3RpY2VzIGxpa2UgWkJORiAgIGhhdmUgdG8gYmUgZW5jb3VyYWdlZCB0byByZWR1Y2UgdGhlICAgZGVwZW5kZW5jZSBvZiB0aGUgZmFybWVycyBvbiBleHRlcm5hbCAgIGlucHV0cyBsaWtlIGNoZW1pY2FsIGZlcnRpbGl6ZXJzLCBwZXN0aWNpZGVzICAgZXRjLiAgIO+CtyBOSVRJIEFheW9nIGlzIG9uZSBvZiB0aGUgZm9yZW1vc3QgICBwcm9tb3RlcnMgb2YgWkJORiBtZXRob2QuICAgU291cmNlOiAgIGh0dHBzOi8vcGliLmdvdi5pbi9GYWN0c2hlZXREZXRhaWxzLmFzcHggID9JZD0xNDg1OTggICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  3, 4 and 5 only   \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b   TEST - 9008 ( )    www.    t.me/  Pa  g1  2  ",
        "option3" : "  1, 3 and 4 only  ",
        "option4" : "  1, 2 and 5 only   "
      }
    },
    {
      "index" : 73,
      "question" : " With reference to shifting cultivation,  consider the following statements:  1.  It is a system where relatively long  periods of cultivation are followed  by relatively short periods of  fallow.  2.  Extremely high crop diversity is a  characteristic of traditional  shifting cultivation systems.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogU2hpZnRpbmcgICBjdWx0aXZhdGlvbiBpcyBkZWZpbmVkIGFzICdhIGZhcm1pbmcgc3lzdGVtIGluICAgd2hpY2ggcmVsYXRpdmVseSBzaG9ydCBwZXJpb2RzIG9mICAgY3VsdGl2YXRpb24gYXJlIGZvbGxvd2VkIGJ5IHJlbGF0aXZlbHkgbG9uZyAgIHBlcmlvZHMgb2YgZmFsbG93LiAgIFNoaWZ0aW5nIGN1bHRpdmF0aW9uLCBvciAnc2xhc2gtYW5kLWJ1cm4nICAgY3VsdGl2YXRpb24gb3IgJ3N3aWRkZW5zLCcgaW52b2x2ZXMgdGhlICAgY2xlYXJpbmcgb2YgYSBwbG90IG9mIGxhbmQsIHVzdWFsbHkgYSBmb3Jlc3QgICBhcmVhLCBhbmQgaXRzIHVzZSBmb3IgYSBmZXcgeWVhcnMsIGFuZCwgYXMgc29pbCAgIGZlcnRpbGl0eSBkZWNsaW5lcywgaXRzIGFiYW5kb25tZW50IGluIGZhdm9yIG9mICAgYW5vdGhlciBwbG90IG9mIGxhbmQgdG8gYmUgY2xlYXJlZCBpbiB0aGUgc2FtZSAgIGZhc2hpb24uIEl0IGlzIG9uZSBvZiB0aGUgb2xkZXN0IGZvcm1zIG9mICAgYWdyaWN1bHR1cmUgYW5kIG1vc3QgcHJlc2VudC1kYXkgICBhZ3JpY3VsdHVyYWwgc3lzdGVtcyBoYXZlIGV2b2x2ZWQgZnJvbSBpdC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBFeHRyZW1lbHkgaGlnaCAgIGNyb3AgZGl2ZXJzaXR5IGlzIGEgY2hhcmFjdGVyaXN0aWMgb2YgbWFueSAgIHRyYWRpdGlvbmFsIHNoaWZ0aW5nIGN1bHRpdmF0aW9uIHN5c3RlbXMuICAgU2hpZnRpbmcgY3VsdGl2YXRpb24gaXMgY29tbW9uIGluIGFsbCB0cm9waWNhbCAgIGFyZWFzIGFuZCB3YXMgb25jZSBjb21tb24gaW4gdGVtcGVyYXRlICAgcmVnaW9ucyBhcyB3ZWxsLiBJdCBoYXMgcmVjZWl2ZWQgbXVjaCAgIGF0dGVudGlvbiBhcyBvbmUgb2YgdGhlIG1ham9yIGRlZ3JhZGluZyAgIHByb2Nlc3NlcyBpbiB0cm9waWNhbCBmb3Jlc3QgYXJlYXMgZHVlIHRvICAgaHVtYW4gcG9wdWxhdGlvbiBpbmNyZWFzZSB0aGF0IGdyZWF0bHkgaGFzICAgbGVkIHRvIHNob3J0YWdlcyBpbiBmYWxsb3cgcGVyaW9kcyB3aXRoICAgc3Vic2VxdWVudCBsb3NzIG9mIHNvaWwgZmVydGlsaXR5LiBHZW5lcmFsbHksIGlmICAgZmFsbG93IGlzIGxlc3MgdGhhbiA1LTcgeWVhcnMsIGxhbmQgICBkZWdyYWRhdGlvbiBvY2N1cnMgYW5kIHNwZWNpZXMgZGl2ZXJzaXR5ICAgbWF5IGJlIGdyZWF0bHkgcmVkdWNlZC4gSG93ZXZlciwgaWYgICBhZGVxdWF0ZSBsb25nIGZhbGxvdyBpcyBhbGxvd2VkIGZvciwgc2hpZnRpbmcgICBjdWx0aXZhdGlvbiBtYXkgYmUgaGlnaGx5IHN1c3RhaW5hYmxlLiAgIFgtRmFjdG9yOiAgICDvgrcgS25vd24gYXMgU2hpZnRpbmcgY3VsdGl2YXRpb24sIG9yICdzbGFzaC0gIGFuZC1idXJuJyBjdWx0aXZhdGlvbiBvciAnc3dpZGRlbnMsJyAgICDvgrcgSXQgaXMgb25lIG9mIHRoZSBvbGRlc3QgZm9ybXMgb2YgYWdyaWN1bHR1cmUgICBhbmQgbW9zdCBwcmVzZW50LWRheSBhZ3JpY3VsdHVyYWwgICBzeXN0ZW1zIGhhdmUgZXZvbHZlZCBmcm9tIGl0LiAgICDvgrcgSW4gc2hpZnRpbmcgY3VsdGl2YXRpb24sIGFncmljdWx0dXJlICAgYmVjb21lcyBhIHNlcXVlbnRpYWwgY3JvcHBpbmcgb2YgY3JvcHMgICBhbmQgbm9uLWNyb3BzLiAgIO+CtyBEaWZmZXJlbnQgZm9ybXMgb2Ygc3dpZGRlbnMgYW5kIHJlbGF0ZWQgICBmYWxsb3cgc3lzdGVtcyBleGlzdCBpbiB0aGUgd29ybGQuICAgIO+CtyBJbiB0cm9waWNhbCBNZXhpY28sIG1pbHBhIChtYWl6ZSBmaWVsZHMpIGlzICAgd2lkZWx5IHByYWN0aWNlZC4gICAg74K3IE1pbHBhIGludm9sdmVzIHRoZSBjbGVhcmluZyBvZiBuZXcgZmllbGRzIGluICAgaGlnaCBmb3Jlc3RzLCBvciBzZWNvbmRhcnkgcmVncm93dGggICBmb3Jlc3RzLCBmb3IgbWFpemUgY3VsdGl2YXRpb24uICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnNjaWVuY2VkaXJlY3QuY29tIG9waWNzL2EgIGdyaWN1bHR1cmFsLWFuZC1iaW9sb2dpY2FsLSAgc2NpZW5jZXMvcG9seWN1bHR1cmUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 74,
      "question" : " Consider the following statements  regarding genetically modified (GM)  crops:  1.  Genes of one crop are edited to  incorporate traits from another  crop.  2.  GM crops provide the solution for  antimicrobial resistance.  3.  The exchange of gene can take  place between two organisms of  same species only.  Which of the statements given above  is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIEdNIGZvb2QgaW52b2x2ZXMgdGhlIGVkaXRpbmcgb2YgZ2VuZXMgb2YgYSAgIGNyb3AgaW4gc3VjaCBhIHdheSB0aGF0IGl0IGluY29ycG9yYXRlcyAgIGJlbmVmaWNpYWwgdHJhaXRzIGZyb20gYW5vdGhlciBjcm9wIG9yICAgb3JnYW5pc20uIFRoaXMgY291bGQgbWVhbiBjaGFuZ2luZyB0aGUgICB3YXkgdGhlIHBsYW50IGdyb3dzLCBvciBtYWtpbmcgaXQgcmVzaXN0YW50ICAgdG8gYSBwYXJ0aWN1bGFyIGRpc2Vhc2UuIEZvb2QgcHJvZHVjZWQgdXNpbmcgICB0aGUgZWRpdGVkIGNyb3AgaXMgY2FsbGVkIEdNIGZvb2QuIFRoaXMgaXMgICBkb25lIHVzaW5nIHRoZSB0b29scyBvZiBnZW5ldGljIGVuZ2luZWVyaW5nLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEdNIGZvb2QgaW52b2x2ZXMgICB0aGUgZWRpdGluZyBvZiBnZW5lcyBvZiBhIGNyb3AgaW4gc3VjaCBhICAgd2F5IHRoYXQgaXQgaW5jb3Jwb3JhdGVzIGJlbmVmaWNpYWwgdHJhaXRzICAgZnJvbSBhbm90aGVyIGNyb3Agb3Igb3JnYW5pc20uIFRoaXMgY291bGQgICBtZWFuIGNoYW5naW5nIHRoZSB3YXkgdGhlIHBsYW50IGdyb3dzLCBvciAgIG1ha2luZyBpdCByZXNpc3RhbnQgdG8gYSBwYXJ0aWN1bGFyIGRpc2Vhc2UuICAgRm9vZCBwcm9kdWNlZCB1c2luZyB0aGUgZWRpdGVkIGNyb3AgaXMgICBjYWxsZWQgR00gZm9vZC4gVGhpcyBpcyBkb25lIHVzaW5nIHRoZSB0b29scyAgIG9mIGdlbmV0aWMgZW5naW5lZXJpbmcuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBHTSBjcm9wcyBhcmUgICBtb2RpZmllZCB0byBpbmNsdWRlIGFudGliaW90aWNzIHRvIGtpbGwgZ2VybXMgICBhbmQgcGVzdHMuIEFuZCB3aGVuIHdlIGVhdCB0aGVtLCB0aGVzZSAgIGFudGliaW90aWMgbWFya2VycyB3aWxsIHBlcnNpc3QgaW4gYm9keSAgIGFuZCB3aWxsIHJlbmRlciBhY3R1YWwgYW50aWJpb3RpYyAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnNSAgMCAgIG1lZGljYXRpb25zIGxlc3MgZWZmZWN0aXZlIG92ZXIgYSBwZXJpb2Qgb2YgICB0aW1lLCBsZWFkaW5nIHRvIHN1cGVyYnVnIHRocmVhdHMuIFRoaXMgICBtZWFucyBpbGxuZXNzZXMgd2lsbCBiZWNvbWUgbW9yZSAgIGRpZmZpY3VsdCB0byBjdXJlLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEEgRE5BIG9mICAgYmx1ZWJlcnJ5IGNvdWxkIGJlIGluc2VydGVkIGludG8gdGhhdCBvZiBhICAgYmFuYW5hIHRvIGdldCBhIGJsdWUgYmFuYW5hLiBUaGUgICBleGNoYW5nZSBjb3VsZCBiZSBhZmZlY3RlZCBiZXR3ZWVuIHR3byAgIG9yIG1vcmUgb3JnYW5pc21zLiBPbmUgY2FuIGV2ZW4gICBpbnRyb2R1Y2UgYSBnZW5lIG9mIGEgZmlzaCBpbnRvIGEgcGxhbnQuICAgQ29uc2lkZXIgdGhpcyBmYWN0LiBHZW5lcyBmcm9tIGFuIEFyY3RpYyAgIGZpc2ggd2VyZSBpbnNlcnRlZCBpbnRvIHRvbWF0b2VzIHRvIG1ha2UgICBpdCB0b2xlcmFudCB0byBmcm9zdC4gVGhpcyB0b21hdG8gZ2FpbmVkICAgdGhlIG1vbmlrZXIgJ2Zpc2ggdG9tYXRvJy4gQnV0IGl0IG5ldmVyICAgcmVhY2hlZCB0aGUgbWFya2V0LiAgIENyb3BzIGNhbiBiZSBlbmdpbmVlcmVkIHRvIHdpdGhzdGFuZCAgIGV4dHJlbWUgd2VhdGhlci4gICBYLUZhY3RvcjogICAg74K3IEdlbmV0aWNhbGx5IGVuZ2luZWVyZWQgZm9vZHMgcHJlc2VudCAgIHVuaW50ZW5kZWQgc2lkZSBlZmZlY3RzLiAgICDvgrcgR2VuZXRpYyBlbmdpbmVlcmluZyBpcyBhIG5ldyBmaWVsZCwgYW5kICAgbG9uZy10ZXJtIHJlc3VsdHMgYXJlIHVuY2xlYXIuICAgIO+CtyBWZXJ5IGxpdHRsZSB0ZXN0aW5nIGhhcyBiZWVuIGRvbmUgb24gR00gICBmb29kLiAgIO+CtyBTb21lIGNyb3BzIGhhdmUgYmVlbiBlbmdpbmVlcmVkIHRvICAgY3JlYXRlIHRoZWlyIG93biB0b3hpbnMgYWdhaW5zdCBwZXN0cy4gICAg74K3IFRoaXMgbWF5IGhhcm0gbm9uLXRhcmdldHMgc3VjaCBhcyBmYXJtICAgYW5pbWFscyB0aGF0IGluZ2VzdCB0aGVtLiAgIO+CtyBUaGUgdG94aW5zIGNhbiBhbHNvIGNhdXNlIGFsbGVyZ3kgYW5kICAgYWZmZWN0IGRpZ2VzdGlvbiBpbiBodW1hbnMuICAg74K3IERlcGVuZGVuY2Ugb24gR00gc2VlZCBjb21wYW5pZXMgY291bGQgICBwcm92ZSB0byBiZSBhIGZpbmFuY2lhbCBidXJkZW4gZm9yIGZhcm1lcnMuICAg74K3IFRoZSBjb25jZXJuIGFsc28gaW5jbHVkZXMgZmluZGluZyBhICAgbWFya2V0IHRoYXQgd291bGQgYWNjZXB0IEdNIGZvb2QuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9jaGlsZHJlbiBoZS0gIHNjaWVuY2UtYmVoaW5kLWdtLSAgY3JvcHMvYXJ0aWNsZTYwNjc4NjQ5LmVjZSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 75,
      "question" : " With reference to Eutelsat Quantum  satellite, sometimes seen in the news,  consider the following statements:  1.  It is world's first commercial fully  reprogrammable  telecommunications satellite.  2.  It is launched by NASA in  collaboration with Eutelsat  Communication.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEl0IGlzIHRoZSB3b3JsZCdzICAgZmlyc3QgcmVwcm9ncmFtbWFibGUgY29tbWVyY2lhbCAgIHRlbGVjb21tdW5pY2F0aW9ucyBzYXRlbGxpdGUgdG8gb3BlcmF0ZSBpbiAgIGEgaGlnaC1mcmVxdWVuY3kgcmFkaW8gcmFuZ2UgY2FsbGVkIHRoZSBLdSAgIGJhbmQgdGhhdCBpcyB1c2VkIGZvciBkYXRhIHRyYW5zbWlzc2lvbiBhbmQgICBzZWN1cmUgY29tbXVuaWNhdGlvbnMsIG5vdGFibHkgd2l0aCBzaGlwcyAgIGF0IHNlYS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgc3VjY2Vzc2Z1bCAgIGRldmVsb3BtZW50IGFuZCBtYW51ZmFjdHVyZSBvZiB0aGUgICBzYXRlbGxpdGUgcmVzdWx0ZWQgZnJvbSB0aGUgY29udHJpYnV0aW9uIG9mIGFsbCAgIGluZHVzdHJpYWwgcGFydG5lcnMgdW5kZXIgYSBFdXJvcGVhbiAgIFNwYWNlIEFnZW5jeSBQYXJ0bmVyc2hpcCBQcm9qZWN0IHdpdGggICBVSyBTcGFjZSBBZ2VuY3kuIEV1dGVsc2F0ICAgQ29tbXVuaWNhdGlvbi4gICBYLUZhY3RvcjogICBBYm91dCBRdWFudHVtIHNhdGVsbGl0ZTogICDvgrcgVGhlc2Ugc2F0ZWxsaXRlcyB0cnkgdG8gY29tbXVuaWNhdGUgd2l0aCAgIGVhcnRoIHVzaW5nIHRoZSBwcmluY2lwbGUgb2YgcXVhbnR1bSAgIGVudGFuZ2xlbWVudCwgd2hlcmVieSBzdWJhdG9taWMgICBwYXJ0aWNsZXMgYmVjb21lIGluZXh0cmljYWJseSBsaW5rZWQgb3IgICAnZW50YW5nbGVkJyBpbiBzdWNoIGEgd2F5IHRoYXQgYW55ICAgY2hhbmdlIGluIG9uZSBkaXN0dXJicyB0aGUgb3RoZXIgZXZlbiBpZiAgIGJvdGggYXJlIGF0IG9wcG9zaXRlIGVuZHMgb2YgdGhlIHVuaXZlcnNlLiAgICDvgrcgVGhpcyBtZWFucyBhbnkgYXR0ZW1wdCBhdCBoYWNraW5nICAgZW50YW5nbGVkIHBhcnRpY2xlcyB3b3VsZCwgZXZlbiBpbiAgIHByaW5jaXBsZSwgYmUgaW1wb3NzaWJsZS4gICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LmVzYS5pbnQvQXBwbGljYXRpb25zL1RlbGVjb20gIG11bmljYXRpb25zX0ludGVncmF0ZWRfQXBwbGljYXRpb25zL1JlcHJvICBncmFtbWFibGVfc2F0ZWxsaXRlX2Z1ZWxsZWRfcHJpb3JfdG9fbGF1bmMgIGggICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NjaS0gIHRlY2gvc2NpZW5jZS9XaGF0LWlzLWEtcXVhbnR1bS0gIHNhdGVsbGl0ZS9hcnRpY2xlMTQ1ODcxMTIuZWNlICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 76,
      "question" : " Consider the following statements  regarding Bacillus thuringiensis (Bt)  Cotton:  1.  It contains foreign genes derived  from the soil-dwelling bacterium.  2.   It produces insecticidal proteins  referred to as Cry proteins.  3.   It does not affect the survival of  other caterpillar pests.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFsbCBCdCBjb3R0b24gICBwbGFudHMgY29udGFpbiBvbmUgb3IgbW9yZSBmb3JlaWduIGdlbmVzICAgZGVyaXZlZCBmcm9tIHRoZSBzb2lsLWR3ZWxsaW5nIGJhY3Rlcml1bSwgICBCYWNpbGx1cyB0aHVyaW5naWVuc2lzOyB0aHVzLCB0aGV5IGFyZSAgIHRyYW5zZ2VuaWMgcGxhbnRzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgaW5zZXJ0aW9uIG9mICAgdGhlIGdlbmVzIGZyb20gQi4gdGh1cmluZ2llbnNpcyBjYXVzZXMgICBjb3R0b24gcGxhbnQgY2VsbHMgdG8gcHJvZHVjZSBjcnlzdGFsICAgaW5zZWN0aWNpZGFsIHByb3RlaW5zLCBvZnRlbiByZWZlcnJlZCB0byBhcyAgIENyeXByb3RlaW5zLiBUaGVzZSBpbnNlY3RpY2lkYWwgcHJvdGVpbnMgYXJlICAgZWZmZWN0aXZlIGluIGtpbGxpbmcgc29tZSBvZiB0aGUgbW9zdCBpbmp1cmlvdXMgICBjYXRlcnBpbGxhciBwZXN0cyBvZiBjb3R0b24sIHN1Y2ggYXMgdGhlIGxhcnZhZSAgIG9mIHRvYmFjY28gYnVkd29ybXMgYW5kIGJvbGx3b3Jtcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEJ0IGNvdHRvbiBhbHNvICAgcmVkdWNlcyBzdXJ2aXZhbCBvZiBvdGhlciBjYXRlcnBpbGxhciBwZXN0cyAgIHN1Y2ggYXMgYmVldCBhcm15d29ybXMsIGNhYmJhZ2UgICBsb29wZXJzLCBjb3R0b24gbGVhZnBlcmZvcmF0b3JzLCBmYWxsICAgYXJteXdvcm1zLCBzb3V0aGVybiBhcm15d29ybXMsIGFuZCAgIHNveWJlYW4gbG9vcGVycy4gVGhlIHByb3RlY3Rpb24gaXQgcHJvdmlkZXMgICBhZ2FpbnN0IHRvYmFjY28gYnVkd29ybXMsIHBpbmsgYm9sbHdvcm1zLCAgIGFuZCBFdXJvcGVhbiBjb3JuIGJvcmVycyBpcyBncmVhdGVyIHRoYW4gICB0aGUgcHJvdGVjdGlvbiBwcm92aWRlZCBieSB0aGUgbW9zdCBlZmZlY3RpdmUgICBmb2xpYXIgaW5zZWN0aWNpZGVzLiAgIFRoZSBwcmVzZXJ2YXRpb24gb2YgdGhlIEJ0IHRlY2hub2xvZ3kgaXMgICBjcml0aWNhbCBiZWNhdXNlICgxKSBib2xsd29ybXMsIHRvYmFjY28gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzUgIDEgICBidWR3b3JtcywgYW5kIHBpbmsgYm9sbHdvcm1zIGNvbnRpbnVlIHRvICAgZGV2ZWxvcCByZXNpc3RhbmNlIHRvIGZvbGlhciBhcHBsaWVkICAgaW5zZWN0aWNpZGVzLCAoMikgdXNlIG9mIGluc2VjdGljaWRlcyBpcyB0aWVkIHRvICAgZWNvbG9naWNhbCBjb25jZXJucywgYW5kICgzKSBCdCBnZW5lcyBhcmUgICB2YWx1YWJsZSByZXNvdXJjZXMuICAgIFgtRmFjdG9yOiAgIENvdHRvbiBpbmRpc3BlbnNhYmxlIHNpbmNlIGFuY2llbnQgdGltZXM6ICAg74K3IFRoZSBmYWJyaWMgZnJvbSBhcm91bmQgMywwMDAgQkNFIGhhcyAgIGJlZW4gZXhjYXZhdGVkIGZyb20gdGhlIHJ1aW5zIG9mICAgTW9oZW5qby1kYXJvLCBhbmQgYXJjaGFlb2xvZ2ljYWwgICBmaW5kaW5ncyBpbiBNZWhyZ2FyaCwgUGFraXN0YW4sIHNob3cgICB0aGF0IGNvdHRvbiB3YXMgdXNlZCBpbiB0aGUgc3ViY29udGluZW50ICAgYXMgZmFyIGJhY2sgYXMgNSwwMDAgQkNFLiAgICDvgrcgSW5kaWFuIGNvdHRvbiBmYWJyaWNzIGRvbWluYXRlZCB0aGUgd29ybGQgICB0cmFkZSBhbmQgd2VyZSBleHBvcnRlZCB0byBHcmVlY2UsIFJvbWUsICAgUGVyc2lhLCBFZ3lwdCwgQXNzeXJpYSBhbmQgcGFydHMgb2YgQXNpYS4gICDvgrcgTXVjaCBvZiB0aGUgY290dG9uIGN1bHRpdmF0ZWQgdW50aWwgdGhlICAgMjB0aCBjZW50dXJ5IHdhcyBvZiB0aGUgaW5kaWdlbm91cyAgIHZhcmlldHksIEdvc3N5cGl1bSBhcmJvcmV0dW0uICAg74K3IEFjY29yZGluZyB0byB0aGUgTWluaXN0cnkgb2YgQWdyaWN1bHR1cmUsICAgZnJvbSAyMDA1LCBhZG9wdGlvbiBvZiBCdCBjb3R0b24gcm9zZSB0byAgIDgxJSBpbiAyMDA3LCBhbmQgdXAgdG8gOTMlIGluIDIwMTEuICAg74K3IEJ5IDIwMTgsIHlpZWxkcyB3ZXJlIGxvd2VyIHRoYW4gaW4gdGhlICAgeWVhcnMgb2YgcmFwaWQgQnQgYWRvcHRpb24uJyAgIFNvdXJjZTogICBodHRwczovL3d3dy5hcnMudXNkYS5nb3YvQVJTVXNlckZpbGVzL28gIGMvbnAvYnRjb3R0b24vYnRjb3R0b24ucGRmICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/bGVibzE9MSAgMi0xNiAgIFRoZSB0d2lzdGVkIHRyYWplY3Rvcnkgb2YgQnQgY290dG9uIC0gVGhlICAgSGluZHUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  1 and 2 only  ",
        "option3" : "  2 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 77,
      "question" : " Consider the following statements  regarding genetic modification:  1.  It offers solutions to abiotic  stresses like drought and floods.  2.  It allows different species of plants  to be combined to increase the  yields.  3.  India has no regulatory protocols  for field trials of GM crops.  Which of the statements given above  are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEdlbmV0aWMgICBlbmdpbmVlcmluZyB0ZWNobm9sb2d5IGhhcyBvcGVuZWQgdXAgbmV3ICAgYXZlbnVlcyBvZiBtb2xlY3VsYXIgYnJlZWRpbmcuIEhvd2V2ZXIsICAgdGhlaXIgcG90ZW50aWFsIHVuZGVzaXJhYmxlIGltcGFjdHMgd2lsbCBoYXZlICAgdG8gYmUga2VwdCBpbiB2aWV3LiBHZW5ldGljIG1vZGlmaWNhdGlvbiBpcyAgIHRoZSB0ZWNobm9sb2d5IG9mIGNob2ljZSBmb3Igc29sdmluZyAgIGFiaW90aWMgcHJvYmxlbXMgbGlrZSBkcm91Z2h0IGZsb29kLCAgIHNhbGluaXR5LCBldGMuICAgIEl0IG1heSBub3QgYmUgZXF1YWxseSBlZmZlY3RpdmUgaW4gdGhlIGNhc2Ugb2YgICBiaW90aWMgc3RyZXNzZXMgc2luY2UgbmV3IHN0cmFpbnMgb2YgcGVzdHMgYW5kICAgZGlzZWFzZXMgYXJpc2UgYWxsIHRoZSB0aW1lLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBHZW5ldGljICAgbW9kaWZpY2F0aW9uIGFsbG93cyBkaWZmZXJlbnQgcGFyZW50cyB0byAgIGJlIGNvbWJpbmVkIGVhc2lseSwgaGVscGluZyB5aWVsZHMgZ28gdXAgICBzdWJzdGFudGlhbGx5LiBUaGUgaGVyYmljaWRlIGdseXBob3NhdGUgaXMgICBvbmx5IHVzZWQgZm9yIHNlbGVjdGlvbiBvZiBoeWJyaWRzIGFuZCBpcyBub3QgICBtZWFudCBmb3IgZmFybWVyIGZpZWxkcy4gQmFuZ2xhZGVzaCBoYXMgICB1c2VkIEluZGlhJ3MgZGF0YSB0byBzdWNjZXNzZnVsbHkgY3VsdGl2YXRlIEJ0ICAgYnJpbmphbC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEdNIGNyb3BzIGhhdmUgICByZWR1Y2VkIHBlc3RpY2lkZSB1c2UsIGluY3JlYXNlZCB5aWVsZHMgYW5kICAgcHJvZml0cywgYW5kIGNhdXNlIG5vIGhlYWx0aCBoYXphcmRzLiAgIEluZGlhIGhhcyBvbmUgb2YgdGhlIHN0cm9uZ2VzdCByZWd1bGF0b3J5ICAgcHJvdG9jb2xzIGZvciBmaWVsZCB0cmlhbHMgb2YgR00gY3JvcHMuIEdNICAgdGVjaG5vbG9neSBuZWVkcyB0byBiZSBldmFsdWF0ZWQgb24gYSBjYXNlLSAgYnktY2FzZSBiYXNpcy4gVGhlcmUgaXMgZGVmaW5pdGVseSBzY29wZSBmb3IgICBpbXByb3ZlbWVudCBpbiB0ZXJtcyBvZiB0ZWNobm9sb2d5IGFuZCAgIHJlZ3VsYXRvcnkgcHJvdG9jb2xzLiBCdXQgaXQgaXMgdGltZSB0byAgIGRlcmVndWxhdGUgdGhlIEJ0IGdlbmUgYW5kIGxpZnQgdGhlIGVtYmFyZ28gICBvbiBCdCBicmluamFsLiAgIFgtRmFjdG9yOiAgIO+CtyBUaGUgR2VuZXRpYyBFbmdpbmVlcmluZyBBcHByYWlzYWwgICBDb21taXR0ZWUgKEdFQUMpIGlzIEluZGlhJ3MgcmVndWxhdG9yIGZvciAgIHRyYW5zZ2VuaWMgcHJvZHVjdHMuICAg74K3IERoYXJhIE11c3RhcmQgSHlicmlkIChETUgtMTEpIGlzIGEgICB0ZWNobm9sb2d5IHRvIGNyZWF0ZSBtdXN0YXJkIGh5YnJpZHMuICAgVGhlIHNlZWRzIGNvbnRhaW4gZ2VuZXMgZnJvbSBhIGJhY3Rlcml1bSAgIHRoYXQgZmFjaWxpdGF0ZSBoeWJyaWRpemF0aW9uLCB3aXRoIHRoZSBhaW0gICBvZiBjcmVhdGluZyBtb3JlIGhpZ2gteWllbGQgbXVzdGFyZCAgIGh5YnJpZHMuICAg74K3IEluIGVzc2VuY2UsIGl0IHVzZXMgYSBzeXN0ZW0gb2YgZ2VuZXMgZnJvbSAgIHNvaWwgYmFjdGVyaXVtIHRoYXQgbWFrZXMgbXVzdGFyZCAtICAgZ2VuZXJhbGx5IGEgc2VsZi1wb2xsaW5hdGluZyBwbGFudCAtIGJldHRlciAgIHN1aXRlZCB0byBoeWJyaWRpc2F0aW9uIHRoYW4gY3VycmVudCAgIG1ldGhvZHMuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9vcGluaW9uL29wLSAgZWQvZG9udC1iZWxpZXZlLXRoZS1hbnRpLWdtby0gIGNhbXBhaWduL2FydGljbGUyNTcxMjIzNS5lY2UgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbCAgL2dvdnQtcmVndWxhdG9yLWdpdmVzLW5vZC1mb3ItZ20tICBtdXN0YXJkL2FydGljbGUxODQzMDU5Mi5lY2UgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vb3Bpbmlvbi9vcC0gIGVkL2RvbnQtYmVsaWV2ZS10aGUtYW50aS1nbW8tICBjYW1wYWlnbi9hcnRpY2xlMjU3MTIyMzUuZWNlICAgaHR0cHM6Ly93d3cuZmRhLmdvdi9mb29kL2FncmljdWx0dXJhbC0gIGJpb3RlY2hub2xvZ3kvaG93LWdtby1jcm9wcy1pbXBhY3Qtb3VyLSAgd29ybGQgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 78,
      "question" : " Cortisol, is an essential hormone  produced by which of the following  gland:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "ICBFeHBsYW5hdGlvbjogICBPcHRpb24gKGMpIGlzIGNvcnJlY3Q6IFRoZSBhZHJlbmFsIGdsYW5kcyAgIGFyZSB0d28gc21hbGwgZ2xhbmRzIHRoYXQgc2l0IG9uIHRvcCBvZiB0aGUgICBraWRuZXlzLiBUaGV5IHByb2R1Y2UgZXNzZW50aWFsIGhvcm1vbmVzOiAgIGNvcnRpc29sLCBhbGRvc3Rlcm9uZSBhbmQgYWRyZW5hbGluZS4gICBYLUZhY3RvcjogQ29ydGlzb2wsIHRoZSBwcmltYXJ5IHN0cmVzcyAgIGhvcm1vbmUsIGluY3JlYXNlcyBzdWdhcnMgKGdsdWNvc2UpIGluICAgdGhlIGJsb29kc3RyZWFtLCBlbmhhbmNlcyB5b3VyIGJyYWluJ3MgICB1c2Ugb2YgZ2x1Y29zZSBhbmQgaW5jcmVhc2VzIHRoZSBhdmFpbGFiaWxpdHkgICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzUgIDIgICBvZiBzdWJzdGFuY2VzIHRoYXQgcmVwYWlyIHRpc3N1ZXMuIENvcnRpc29sICAgYWx0ZXJzIGltbXVuZSBzeXN0ZW0gcmVzcG9uc2VzIGFuZCAgIHN1cHByZXNzZXMgdGhlIGRpZ2VzdGl2ZSBzeXN0ZW0sIHRoZSAgIHJlcHJvZHVjdGl2ZSBzeXN0ZW0gYW5kIGdyb3d0aCAgIHByb2Nlc3Nlcy4gICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lm1heW9jbGluaWMub3JnL2hlYWx0aHktICBsaWZlc3R5bGUvc3RyZXNzLW1hbmFnZW1lbnQvaW4tICBkZXB0aC9zdHJlc3MvYXJ0LSAgMjAwNDYwMzcjOn46dGV4dD1Db3J0aXNvbCUyQyUyMHRoZSUyMCAgcHJpbWFyeSUyMHN0cmVzcyUyMGhvcm1vbmUsZmlnaHQlMkRvciAgJTJEZmxpZ2h0JTIwc2l0dWF0aW9uLiAgIGh0dHBzOi8vd3d3Lm5oc2luZm9ybS5zY290L2lsbG5lc3Nlcy1hbmQtICBjb25kaXRpb25zL2dsYW5kcy9hZGRpc29ucy1kaXNlYXNlLyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Pituitary gland   ",
        "option2" : "  Parathyroid   ",
        "option3" : "  Adrenal glands  ",
        "option4" : "  Pancreas   "
      }
    },
    {
      "index" : 79,
      "question" : " Consider the following statements  regarding the Medical Oxygen Plant  (MOP) technology developed by  Defence Research and Development  Organisation (DRDO).  1.  It generates oxygen directly from  atmospheric air.   2.  The MOP uses only Pressure  Swing Technology (PSA) to  generate oxygen.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgTWVkaWNhbCBPeHlnZW4gUGxhbnQgICAoTU9QKSB0ZWNobm9sb2d5LCBkZXZlbG9wZWQgYnkgRFJETyBmb3IgICBPbuKAkEJvYXJkIE94eWdlbiBHZW5lcmF0aW9uIGZvciBMQ0EsICAgVGVqYXMgYnkgREVCRUwsIERSRE8gd2lsbCBub3cgaGVscCBpbiAgIGZpZ2h0aW5nIHRoZSBjdXJyZW50IGNyaXNpcyBvZiBveHlnZW4gZm9yICAgQ09WSUQtMTkgcGF0aWVudHMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSXQgZ2VuZXJhdGVzIG94eWdlbiAgIGRpcmVjdGx5IGZyb20gYXRtb3NwaGVyaWMgYWlyLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6ICBJdCB1dGlsaXplcyAgIFByZXNzdXJlIFN3aW5nIEFkc29ycHRpb24gKFBTQSkgICB0ZWNobmlxdWUgYW5kIE1vbGVjdWxhciBTaWV2ZSAoWmVvbGl0ZSkgICB0ZWNobm9sb2d5IHRvIGdlbmVyYXRlIG94eWdlbiBkaXJlY3RseSBmcm9tICAgYXRtb3NwaGVyaWMgYWlyLiAgICBYLUZhY3RvcjogVGhlIE1PUCBzeXN0ZW0gY2FuIGNhdGVyIHRvIDE5MCAgIHBhdGllbnRzIGF0IGEgZmxvdyByYXRlIG9mIDUgTFBNIGFuZCBjaGFyZ2UgICAxOTUgY3lsaW5kZXJzIHBlciBkYXkuIE1PUCBoYXMgYWxyZWFkeSAgIGJlZW4gaW5zdGFsbGVkIGF0IHNvbWUgb2YgdGhlIEFybXkgc2l0ZXMgaW4gICBOb3J0aCBFYXN0IGFuZCBMZWgtTGFkYWtoIHJlZ2lvbi4gICBTb3VyY2U6ICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD8gIFBSSUQ9MTcxNDU1MiM6fjp0ZXh0PURSRE8lMjB0byUyMHNldCAgJTIwdXAlMjA1MDAsbW9udGhzJTIwdW5kZXIlMjBQTSUgIDIwQ0FSRVMlMjBGdW5kJnRleHQ9VGhlJTIwTWVkaWNhbCUgIDIwT3h5Z2VuJTIwUGxhbnQlMjAoTU9QLG94eWdlbiUyMGZvciAgJTIwQ09WSUQlMkQxOSUyMHBhdGllbnRzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 80,
      "question" : " Consider the following statements  regarding human endocrine system:  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g1 3  1.  Neurohypophysis stores and  releases oxytocin.  2.  Gonadotrophin releasing hormone  inhibits the pituitary synthesis.  3.  Excess secretion of growth  hormone in adults may cause  severe disfigurement of face.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICBUaGUgcGl0dWl0YXJ5IGdsYW5kICAgaXMgbG9jYXRlZCBpbiBhIGJvbnkgY2F2aXR5IGNhbGxlZCBzZWxsYSB0dXJzaWNhICAgYW5kIGlzIGF0dGFjaGVkIHRvIGh5cG90aGFsYW11cyBieSBhIHN0YWxrLiAgIEl0IGlzIGRpdmlkZWQgYW5hdG9taWNhbGx5IGludG8gYW4gICBhZGVub2h5cG9waHlzaXMgYW5kIGEgbmV1cm9oeXBvcGh5c2lzLiAgIE5ldXJvaHlwb3BoeXNpcyAocGFycyBuZXJ2b3NhKSBhbHNvICAga25vd24gYXMgcG9zdGVyaW9yIHBpdHVpdGFyeSwgc3RvcmVzIGFuZCAgIHJlbGVhc2VzIHR3byBob3Jtb25lcyBjYWxsZWQgb3h5dG9jaW4gICBhbmQgdmFzb3ByZXNzaW4sIHdoaWNoIGFyZSBhY3R1YWxseSAgIHN5bnRoZXNpc2VkIGJ5IHRoZSBoeXBvdGhhbGFtdXMgYW5kIGFyZSAgIHRyYW5zcG9ydGVkIGF4b25hbGx5IHRvIG5ldXJvaHlwb3BoeXNpcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6ICBBIGh5cG90aGFsYW1pYyAgIGhvcm1vbmUgY2FsbGVkIEdvbmFkb3Ryb3BoaW4gcmVsZWFzaW5nICAgaG9ybW9uZSAoR25SSCkgc3RpbXVsYXRlcyB0aGUgcGl0dWl0YXJ5ICAgc3ludGhlc2lzIGFuZCByZWxlYXNlIG9mIGdvbmFkb3Ryb3BoaW5zLiAgIE9uIHRoZSBvdGhlciBoYW5kLCBzb21hdG9zdGF0aW4gZnJvbSB0aGUgICBoeXBvdGhhbGFtdXMgaW5oaWJpdHMgdGhlIHJlbGVhc2Ugb2YgZ3Jvd3RoICAgaG9ybW9uZSBmcm9tIHRoZSBwaXR1aXRhcnkuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IE92ZXItc2VjcmV0aW9uIG9mICAgR0ggc3RpbXVsYXRlcyBhYm5vcm1hbCBncm93dGggb2YgdGhlIGJvZHkgICBsZWFkaW5nIHRvIGdpZ2FudGlzbSBhbmQgbG93IHNlY3JldGlvbiBvZiBHSCAgIHJlc3VsdHMgaW4gc3R1bnRlZCBncm93dGggcmVzdWx0aW5nIGluICAgcGl0dWl0YXJ5IGR3YXJmaXNtLiBFeGNlc3Mgc2VjcmV0aW9uIG9mICAgZ3Jvd3RoIGhvcm1vbmUgaW4gYWR1bHRzIGVzcGVjaWFsbHkgaW4gICBtaWRkbGUgYWdlIGNhbiByZXN1bHQgaW4gc2V2ZXJlICAgZGlzZmlndXJlbWVudCAoZXNwZWNpYWxseSBvZiB0aGUgZmFjZSkgICBjYWxsZWQgQWNyb21lZ2FseS4gICBYLUZhY3RvcjogICAgVGhlIHBpbmVhbCBnbGFuZCAgIO+CtyBJdCBpcyBsb2NhdGVkIG9uIHRoZSBkb3JzYWwgc2lkZSBvZiAgIGZvcmVicmFpbi4gICAg74K3IEl0IHNlY3JldGVzIGEgaG9ybW9uZSBjYWxsZWQgbWVsYXRvbmluLiAgIE1lbGF0b25pbiBwbGF5cyBhIHZlcnkgaW1wb3J0YW50IHJvbGUgaW4gICB0aGUgcmVndWxhdGlvbiBvZiBhIDI0LWhvdXIgKGRpdXJuYWwpICAgcmh5dGhtIG9mIG91ciBib2R5LiAgICDvgrcgSXQgaGVscHMgaW4gbWFpbnRhaW5pbmcgdGhlIG5vcm1hbCAgIHJoeXRobXMgb2Ygc2xlZXAtd2FrZSBjeWNsZSwgYm9keSAgIHRlbXBlcmF0dXJlLiAgICDvgrcgSXQgaW5mbHVlbmNlcyBtZXRhYm9saXNtLCBwaWdtZW50YXRpb24sICAgdGhlIG1lbnN0cnVhbCBjeWNsZSBhcyB3ZWxsIGFzIG91ciBkZWZlbmNlICAgY2FwYWJpbGl0eS4gICBTb3VyY2U6ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/a2VibzE9MiAgMi0yMiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 81,
      "question" : " Powerful space telescopes are often  called time machines because:           1. The more distant the planet or  star, the farther back in time are  the telescopes able to see.  2.  Their ability to view very far away  objects.   3.  These telescopes see the images of  the stars or galaxies as they were  millions of years ago.   Select the correct answer using the  code given below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgx",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBPcHRpb24gKGQpIGlzIGNvcnJlY3Q6ICAgTkFTQSdzIEphbWVzIFdlYmIgU3BhY2UgVGVsZXNjb3BlICAgKEpXU1QpLCB0aGUgbGFyZ2VzdCBhbmQgbW9zdCBwb3dlcmZ1bCAgIHNwYWNlIHRlbGVzY29wZSBldmVyIGJ1aWx0LCB3YXMgbGF1bmNoZWQgICBmcm9tIEZyZW5jaCBHdWlhbmEsIG9uIHRoZSBub3J0aGVhc3QgICBjb2FzdCBvZiBTb3V0aCBBbWVyaWNhLCBvbiB0aGUgRXVyb3BlYW4gICBBcmlhbmUgNSByb2NrZXQuUG93ZXJmdWwgc3BhY2UgdGVsZXNjb3BlcywgICBsaWtlIEpXU1Qgb3IgdGhlIEh1YmJsZSBUZWxlc2NvcGUsIGFyZSAgIG9mdGVuIGNhbGxlZCB0aW1lLW1hY2hpbmVzIGJlY2F1c2Ugb2YgICB0aGVpciBhYmlsaXR5IHRvIHZpZXcgdmVyeSBmYXJhd2F5IG9iamVjdHMuICAgVGhlIGxpZ2h0IGNvbWluZyAgIGZyb20gdGhvc2Ugb2JqZWN0cywgc3RhcnMgb3IgZ2FsYXhpZXMsIHdoaWNoICAgaXMgY2FwdHVyZWQgYnkgdGhlc2UgdGVsZXNjb3BlcywgYmVnYW4gaXRzICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc1ICAzICAgam91cm5leSBtaWxsaW9ucyBvZiB5ZWFycyBlYXJsaWVyLiAgIEVzc2VudGlhbGx5LCB3aGF0IHRoZXNlIHRlbGVzY29wZXMgc2VlIGFyZSAgIGltYWdlcyBvZiB0aGVzZSBzdGFycyBvciBnYWxheGllcyBhcyB0aGV5ICAgd2VyZSBtaWxsaW9ucyBvZiB5ZWFycyBhZ28uIFRoZSBtb3JlICAgZGlzdGFudCB0aGUgcGxhbmV0IG9yIHN0YXIsIHRoZSBmYXJ0aGVyICAgYmFjayBpbiB0aW1lIGFyZSB0aGUgdGVsZXNjb3BlcyBhYmxlIHRvICAgc2VlLiAgIFNvdXJjZTogICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmUgIGQvZXhwbGFpbmVkLWhvdy13ZWJiLXRlbGVzY29wZS1zZWVrcy10by0gIHVubG9jay11bml2ZXJzZS1zZWNyZXRzLTc2ODk0MDQvICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 3 only ",
        "option2" : "  1 only   ",
        "option3" : "  2 and 3 only ",
        "option4" : "   1, 2 an 3   "
      }
    },
    {
      "index" : 82,
      "question" : " Consider the following pairs:   Bioactive  molecule  Application  1. Lipase Clot buster  2. Statins Cholesterol  suppressor  3. Cyclosporin A Ethanol producer  4. Streptokinase Immunosuppressive  agent  How many pairs given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgy",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE1pY3JvYmVzIGFyZSBhbHNvIHVzZWQgZm9yIGNvbW1lcmNpYWwgYW5kICAgaW5kdXN0cmlhbCBwcm9kdWN0aW9uIG9mIGNlcnRhaW4gY2hlbWljYWxzICAgbGlrZSBvcmdhbmljIGFjaWRzLCBhbGNvaG9scyBhbmQgZW56eW1lcy4gICBZZWFzdCAoU2FjY2hhcm9teWNlcyBjZXJldmlzaWFlKSBpcyB1c2VkIGZvciAgIGNvbW1lcmNpYWwgcHJvZHVjdGlvbiBvZiBldGhhbm9sLiBNaWNyb2JlcyAgIGFyZSBhbHNvIHVzZWQgZm9yIHByb2R1Y3Rpb24gb2YgZW56eW1lcy4gICAgUGFpciAxIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IExpcGFzZXMgYXJlICAgdXNlZCBpbiBkZXRlcmdlbnQgZm9ybXVsYXRpb25zIGFuZCBhcmUgICBoZWxwZnVsIGluIHJlbW92aW5nIG9pbHkgc3RhaW5zIGZyb20gdGhlICAgbGF1bmRyeS4gICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBTdGF0aW5zICAgcHJvZHVjZWQgYnkgdGhlIHllYXN0IE1vbmFzY3VzICAgcHVycHVyZXVzIGhhdmUgYmVlbiBjb21tZXJjaWFsaXNlZCBhcyAgIGJsb29kLWNob2xlc3Rlcm9sIGxvd2VyaW5nIGFnZW50cy4gSXQgYWN0cyAgIGJ5IGNvbXBldGl0aXZlbHkgaW5oaWJpdGluZyB0aGUgZW56eW1lICAgcmVzcG9uc2libGUgZm9yIHN5bnRoZXNpcyBvZiBjaG9sZXN0ZXJvbC4gICAgUGFpciAzIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IEFub3RoZXIgICBiaW9hY3RpdmUgbW9sZWN1bGUsIGN5Y2xvc3BvcmluIEEsIHRoYXQgaXMgICB1c2VkIGFzIGFuIGltbXVub3N1cHByZXNzaXZlIGFnZW50IGluICAgb3JnYW4tdHJhbnNwbGFudCBwYXRpZW50cywgaXMgcHJvZHVjZWQgYnkgICB0aGUgZnVuZ3VzIFRyaWNob2Rlcm1hIHBvbHlzcG9ydW0uICAgUGFpciA0IGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6ICAgU3RyZXB0b2tpbmFzZSBwcm9kdWNlZCBieSB0aGUgYmFjdGVyaXVtICAgU3RyZXB0b2NvY2N1cyBhbmQgbW9kaWZpZWQgYnkgZ2VuZXRpYyAgIGVuZ2luZWVyaW5nIGlzIHVzZWQgYXMgYSAnY2xvdCBidXN0ZXInIGZvciAgIHJlbW92aW5nIGNsb3RzIGZyb20gdGhlIGJsb29kIHZlc3NlbHMgb2YgICBwYXRpZW50cyB3aG8gaGF2ZSB1bmRlcmdvbmUgbXlvY2FyZGlhbCAgIGluZmFyY3Rpb24gbGVhZGluZyB0byBoZWFydCBhdHRhY2suICAgIFgtRmFjdG9yOiAgICBCaW9sb2dpY2FsIHRyZWF0bWVudCBvZiBzZXdhZ2U6ICAgIO+CtyBUaGUgcHJpbWFyeSBlZmZsdWVudCBpcyBwYXNzZWQgaW50byBsYXJnZSAgIGFlcmF0aW9uIHRhbmtzIGFuZCBjb25zdGFudGx5IGFnaXRhdGVkICAgbWVjaGFuaWNhbGx5IGFuZCBhaXIgaXMgcHVtcGVkIGludG8gaXQuICAgIO+CtyBUaGlzIGFsbG93cyB2aWdvcm91cyBncm93dGggb2YgdXNlZnVsICAgYWVyb2JpYyBtaWNyb2JlcyBpbnRvIGZsb2NzLiBXaGlsZSAgIGdyb3dpbmcsIHRoZXNlIG1pY3JvYmVzIGNvbnN1bWUgdGhlICAgbWFqb3IgcGFydCBvZiB0aGUgb3JnYW5pYyBtYXR0ZXIgaW4gdGhlICAgZWZmbHVlbnQgICDvgrcgVGhpcyBzaWduaWZpY2FudGx5IHJlZHVjZXMgdGhlIEJPRCAgIChiaW9jaGVtaWNhbCBveHlnZW4gZGVtYW5kKSBvZiB0aGUgICBlZmZsdWVudC4gICDvgrcgQk9EIHJlZmVycyB0byB0aGUgYW1vdW50IG9mIHRoZSBveHlnZW4gICB0aGF0IHdvdWxkIGJlIGNvbnN1bWVkIGlmIGFsbCB0aGUgb3JnYW5pYyAgIG1hdHRlciBpbiBvbmUgbGl0ZXIgb2Ygd2F0ZXIgd2VyZSBveGlkaXNlZCAgIGJ5IGJhY3RlcmlhLiAgICDvgrcgVGhlIGdyZWF0ZXIgdGhlIEJPRCBvZiB3YXN0ZSB3YXRlciwgbW9yZSAgIGlzIGl0cyBwb2xsdXRpbmcgcG90ZW50aWFsLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9sZWJvMT0xICAwLTE2ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Only one pair  ",
        "option2" : "  Only two pairs  ",
        "option3" : "  Only three pairs  ",
        "option4" : "  All four pairs  "
      }
    },
    {
      "index" : 83,
      "question" : " Consider the following statements  regarding haplotypes:  1.  A haplotype is a group of genes  within of an organism, that was  inherited together from a single  parent.  2.  Haplotypes cannot be used in the  hybrid plant breeding technique.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgz",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgRGVwYXJ0bWVudCBvZiAgIEJpb3RlY2hub2xvZ3kgaGFzIHRha2VuIGEgbmV3IGluaXRpYXRpdmUgdG8gICBkZXZlbG9wIHN1cGVyaW9yIGhhcGxvdHlwZSBiYXNlZCBuZWFyICAgaXNvZ2VuaWMgbGluZXMgKEhhcGxvLU5JTHMpIGZvciBlbmhhbmNlZCAgIGdlbmV0aWMgZ2FpbiBpbiByaWNlLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEEgaGFwbG90eXBlIGlzIGEgICBncm91cCBvZiBnZW5lcyB3aXRoaW4gYW4gb3JnYW5pc20gdGhhdCAgIHdhcyBpbmhlcml0ZWQgdG9nZXRoZXIgZnJvbSBhIHNpbmdsZSAgIHBhcmVudC4gIEEgaGFwbG90eXBlIGNhbiBkZXNjcmliZSBhIHBhaXIgb2YgICBnZW5lcyBpbmhlcml0ZWQgdG9nZXRoZXIgZnJvbSBvbmUgcGFyZW50ICAgb24gb25lIGNocm9tb3NvbWUsIG9yIGl0IGNhbiBkZXNjcmliZSBhbGwgICBvZiB0aGUgZ2VuZXMgb24gYSBjaHJvbW9zb21lIHRoYXQgd2VyZSAgIGluaGVyaXRlZCB0b2dldGhlciBmcm9tIGEgc2luZ2xlIHBhcmVudC4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJc29nZW5pYyBsaW5lcyAgIGFyZSBkZWZpbmVkIGFzIGluZGl2aWR1YWxzIHRoYXQgcG9zc2VzcyAgIHRoZSBzYW1lIGdlbm90eXBlIGlycmVzcGVjdGl2ZSBvZiB0aGVpciAgIGhvbW8tIG9yIGhldGVyb3p5Z291cyBuYXR1cmUuIEluIGNsYXNzaWNhbCAgIHBsYW50IGJyZWVkaW5nIHRoaXMgbWVhbnMgdGhhdCB2ZWdldGF0aXZlbHkgICBwcm9wYWdhdGVkIGNsb25lcyBhcmUgaXNvZ2VuaWMgYW5kIGxpbmVzICAgb2YgaW5icmVlZGVycyBiZWNvbWUgaXNvZ2VuaWMgYWZ0ZXIgICByZXBlYXRlZCBzZWxmLWZlcnRpbGl6YXRpb24uIEluIG91dCAgIGJyZWVkZXJzLCBpc29nZW55IGlzIGFjaGlldmVkIGluIGh5YnJpZCAgIHZhcmlldGllcy4gICAgWC1GYWN0b3I6IEJ5IGV4YW1pbmluZyBoYXBsb3R5cGVzLCAgIHNjaWVudGlzdHMgY2FuIGlkZW50aWZ5IHBhdHRlcm5zIG9mIGdlbmV0aWMgICB2YXJpYXRpb24gdGhhdCBhcmUgYXNzb2NpYXRlZCB3aXRoIGhlYWx0aCAgIGFuZCBkaXNlYXNlIHN0YXRlcy4gICBTb3VyY2U6IGh0dHBzOi8vZGJ0aW5kaWEuZ292LmluL3NjaGVtZXMtICBwcm9ncmFtbWVzL3Jlc2VhcmNoLSAgZGV2ZWxvcG1lbnQvYWdyaWN1bHR1cmUtYW5pbWFsLWFsbGllZC0gIHNjaWVuY2VzL2FncmljdWx0dXJlLWJpb3RlY2hub2xvZ3kgICBodHRwczovL3d3dy5uYXR1cmUuY29tL3NjaXRhYmxlL2RlZmluaXRpbyAgbi9oYXBsb3R5cGUtaGFwbG90eXBlcy0gIDE0Mi8jOn46dGV4dD1BJTIwaGFwbG90eXBlJTIwaXMlMjBhJTIgIDBncm91cCxnZW5ldGljJTIwbWFrZXVwJTIwb2YlMjBhbiUyICAwb3JnYW5pc20uICAgaHR0cHM6Ly9saW5rLnNwcmluZ2VyLmNvbS9jaGFwdGVyLzEwLjEwMDcgIC85NzgtOTQtMDE3LTI2ODEtICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzUgIDQgICA4XzcjOn46dGV4dD1Jc29nZW5pYyUyMGxpbmVzJTIwYXJlJTIwZGUgIGZpbmVkJTIwYXMsaXNvZ2VuaWMlMjBhZnRlciUyMHJlcGVhdGVkJSAgMjBzZWxmJTJEZmVydGlsaXphdGlvbi4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only   ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 84,
      "question" : " The terms 'nodes of Ranvier' and  'nissl's granules' are associated with-  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg0",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogVGhlIG5ldXJhbCBzeXN0ZW0gb2YgICBhbGwgYW5pbWFscyBpcyBjb21wb3NlZCBvZiBoaWdobHkgc3BlY2lhbGlzZWQgICBjZWxscyBjYWxsZWQgbmV1cm9ucyB3aGljaCBjYW4gZGV0ZWN0LCAgIHJlY2VpdmUgYW5kIHRyYW5zbWl0IGRpZmZlcmVudCBraW5kcyBvZiAgIHN0aW11bGkuICAgIFRoZSBuZXVyYWwgb3JnYW5pc2F0aW9uIGlzIHZlcnkgc2ltcGxlIGluICAgbG93ZXIgaW52ZXJ0ZWJyYXRlcy4gVGhlIHZlcnRlYnJhdGVzIGhhdmUgYSAgIG1vcmUgZGV2ZWxvcGVkIG5ldXJhbCBzeXN0ZW0uICAgVmlzY2VyYWwgbmVydm91cyBzeXN0ZW0gY29tcHJpc2VzIHRoZSAgIHdob2xlIGNvbXBsZXggb2YgbmVydmVzLCBmaWJyZXMsIGdhbmdsaWEsICAgYW5kIHBsZXh1c2VzIGJ5IHdoaWNoIGltcHVsc2VzIHRyYXZlbCBmcm9tICAgdGhlIGNlbnRyYWwgbmVydm91cyBzeXN0ZW0gdG8gdGhlIHZpc2NlcmEgICBhbmQgZnJvbSB0aGUgdmlzY2VyYSB0byB0aGUgY2VudHJhbCBuZXJ2b3VzICAgc3lzdGVtLiAgIEEgbmV1cm9uIGlzIGEgbWljcm9zY29waWMgc3RydWN0dXJlICAgY29tcG9zZWQgb2YgdGhyZWUgbWFqb3IgcGFydHMsIG5hbWVseSwgY2VsbCAgIGJvZHksIGRlbmRyaXRlcyBhbmQgYXhvbi4gVGhlIGNlbGwgYm9keSAgIGNvbnRhaW5zIGN5dG9wbGFzbSB3aXRoIHR5cGljYWwgY2VsbCAgIG9yZ2FuZWxsZXMgYW5kIGNlcnRhaW4gZ3JhbnVsYXIgYm9kaWVzICAgY2FsbGVkIE5pc3NsJ3MgZ3JhbnVsZXMuIFNob3J0IGZpYnJlcyB3aGljaCAgIGJyYW5jaCByZXBlYXRlZGx5IGFuZCBwcm9qZWN0IG91dCBvZiB0aGUgY2VsbCAgIGJvZHkgYWxzbyBjb250YWluIE5pc3NsJ3MgZ3JhbnVsZXMgYW5kIGFyZSAgIGNhbGxlZCBkZW5kcml0ZXMuICAgVGhlIG15ZWxpbmF0ZWQgbmVydmUgZmlicmVzIGFyZSBlbnZlbG9wZWQgICB3aXRoIFNjaHdhbm4gY2VsbHMsIHdoaWNoIGZvcm0gYSBteWVsaW4gICBzaGVhdGggYXJvdW5kIHRoZSBheG9uLiBUaGUgZ2FwcyBiZXR3ZWVuICAgdHdvIGFkamFjZW50IG15ZWxpbiBzaGVhdGhzIGFyZSBjYWxsZWQgICBub2RlcyBvZiBSYW52aWVyLiAgIFgtRmFjdG9yOiAgICBUcmFuc21pc3Npb24gb2YgYW4gaW1wdWxzZSAgIO+CtyBBIG5lcnZlIGltcHVsc2UgaXMgdHJhbnNtaXR0ZWQgZnJvbSBvbmUgICBuZXVyb24gdG8gYW5vdGhlciB0aHJvdWdoIGp1bmN0aW9ucyAgIGNhbGxlZCBzeW5hcHNlcy4gICAg74K3IEEgc3luYXBzZSBpcyBmb3JtZWQgYnkgdGhlIG1lbWJyYW5lcyBvZiAgIGEgcHJlLXN5bmFwdGljIG5ldXJvbiBhbmQgYSBwb3N0LSAgc3luYXB0aWMgbmV1cm9uLCB3aGljaCBtYXkgb3IgbWF5IG5vdCAgIGJlIHNlcGFyYXRlZCBieSBhIGdhcCBjYWxsZWQgc3luYXB0aWMgICBjbGVmdC4gICAg74K3IFRoZXJlIGFyZSB0d28gdHlwZXMgb2Ygc3luYXBzZXMsIG5hbWVseSwgICBlbGVjdHJpY2FsIHN5bmFwc2VzIGFuZCBjaGVtaWNhbCAgIHN5bmFwc2VzLiAgICDvgrcgQXQgZWxlY3RyaWNhbCBzeW5hcHNlcywgdGhlIG1lbWJyYW5lcyBvZiAgIHByZS0gYW5kIHBvc3Qtc3luYXB0aWMgbmV1cm9ucyBhcmUgaW4gICB2ZXJ5IGNsb3NlIHByb3hpbWl0eS4gICAg74K3IEVsZWN0cmljYWwgY3VycmVudCBjYW4gZmxvdyBkaXJlY3RseSBmcm9tICAgb25lIG5ldXJvbiBpbnRvIHRoZSBvdGhlciBhY3Jvc3MgdGhlc2UgICBzeW5hcHNlcyAgIO+CtyBFbGVjdHJpY2FsIHN5bmFwc2UgaXMgYWx3YXlzIGZhc3RlciB0aGFuICAgdGhhdCBhY3Jvc3MgYSBjaGVtaWNhbCBzeW5hcHNlLiBFbGVjdHJpY2FsICAgc3luYXBzZXMgYXJlIHJhcmUgaW4gb3VyIHN5c3RlbS4gICBTb3VyY2U6ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/a2VibzE9MiAgMS0yMiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Meiotic cell division in eukaryotes  ",
        "option2" : "  Vegetative propogation of plants  ",
        "option3" : "  Genome editing and proof reading   ",
        "option4" : "  Human visceral nervous system  "
      }
    },
    {
      "index" : 85,
      "question" : " In the context of Indian defence the  terms Garuthmaa and Garudaa  represents:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg1",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBPcHRpb24gKGMpIGlzIGNvcnJlY3Q6ICAgR2FydXRobWFhIGFuZCBHYXJ1ZGFhIGFyZSAnc21hcnQgZ2xpZGUgICBib21icycgYXJlIGJlaW5nIGluZGlnZW5vdXNseSBkZXZlbG9wZWQgYnkgICB0aGUgRGVmZW5jZSBSZXNlYXJjaCBhbmQgRGV2ZWxvcG1lbnQgICBPcmdhbmlzYXRpb24sIEdhcnVkYWEsIGlzIG5vbi13aW5nZWQgc21hcnQgICBnbGlkZS1ib21iLCB3aGVyZWFzIEdhcnV0aG1hYSBpcyBhIHdpbmdlZCAgIHNtYXJ0IGdsaWRlIGJvbWIuICAgWC1GYWN0b3I6IFRoZSBEZWZlbmNlIFJlc2VhcmNoIGFuZCAgIERldmVsb3BtZW50IE9yZ2FuaXNhdGlvbiBpcyB0aGUgcHJlbWllciAgIGFnZW5jeSB1bmRlciB0aGUgRGVwYXJ0bWVudCBvZiBEZWZlbmNlICAgUmVzZWFyY2ggYW5kIERldmVsb3BtZW50IGluIE1pbmlzdHJ5IG9mICAgRGVmZW5jZSBvZiB0aGUgR292ZXJubWVudCBvZiBJbmRpYS4gICBTb3VyY2U6ICAgIG9kaHB1ci9kcmRvLXN1Y2Nlc3NmdWxseS10ZXN0cy1nbGlkZS0gIGJvbWJzLWluLSAgcG9raHJhbi9hcnRpY2xlc2hvdy81Mzc4MDAxNS5jbXMgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  New patrol vessels for Indian coast   guard  ",
        "option2" : "  Frigates of Indian navy  ",
        "option3" : "  Smart glide bombs  ",
        "option4" : "  New attack drones for Indian army   "
      }
    },
    {
      "index" : 86,
      "question" : " Which of the following human sense  organs contain(s) the olfactory  receptors?  1.  Nose  2.  Eyes  3.  Ears  4.  Tongue  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogICAgU2Vuc2UgT3JnYW5zICAgIEh1bWFucyBzbWVsbCB0aGluZ3MgYnkgbm9zZSwgdGFzdGUgYnkgICB0b25ndWUsIGhlYXIgYnkgZWFyIGFuZCBzZWUgb2JqZWN0cyBieSBleWVzLiAgIFRoZSBub3NlIGNvbnRhaW5zIG11Y3VzLWNvYXRlZCAgIHJlY2VwdG9ycyB3aGljaCBhcmUgc3BlY2lhbGlzZWQgZm9yICAgcmVjZWl2aW5nIHRoZSBzZW5zZSBvZiBzbWVsbCBhbmQgY2FsbGVkICAgb2xmYWN0b3J5IHJlY2VwdG9ycy4gVGhlc2UgYXJlIG1hZGUgdXAgb2YgICBvbGZhY3RvcnkgZXBpdGhlbGl1bSB0aGF0IGNvbnNpc3RzIG9mIHRocmVlICAga2luZHMgb2YgY2VsbHMuIFRoZSBuZXVyb25zIG9mIHRoZSBvbGZhY3RvcnkgICBlcGl0aGVsaXVtIGV4dGVuZCBmcm9tIHRoZSBvdXRzaWRlICAgZW52aXJvbm1lbnQgZGlyZWN0bHkgaW50byBhIHBhaXIgb2YgYnJvYWQgICBiZWFuLXNpemVkIG9yZ2FucywgY2FsbGVkIG9sZmFjdG9yeSBidWxiLCAgIHdoaWNoIGFyZSBleHRlbnNpb25zIG9mIHRoZSBicmFpbidzIGxpbWJpYyAgIHN5c3RlbS4gICAgQm90aCBub3NlIGFuZCB0b25ndWUgZGV0ZWN0IGRpc3NvbHZlZCAgIGNoZW1pY2Fscy4gVGhlIGNoZW1pY2FsIHNlbnNlcyBvZiBndXN0YXRpb24gICAodGFzdGUpIGFuZCBvbGZhY3RvcnkgKHNtZWxsKSBhcmUgZnVuY3Rpb25hbGx5ICAgc2ltaWxhciBhbmQgaW50ZXJyZWxhdGVkLiBUaGUgdG9uZ3VlICAgZGV0ZWN0cyB0YXN0ZXMgdGhyb3VnaCB0YXN0ZSBidWRzLCAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnNSAgNSAgIGNvbnRhaW5pbmcgZ3VzdGF0b3J5IHJlY2VwdG9ycy4gV2l0aCBlYWNoICAgdGFzdGUgb2YgZm9vZCBvciBzaXAgb2YgZHJpbmssIHRoZSBicmFpbiAgIGludGVncmF0ZXMgdGhlIGRpZmZlcmVudGlhbCBpbnB1dCBmcm9tIHRoZSAgIHRhc3RlIGJ1ZHMgYW5kIGEgY29tcGxleCBmbGF2b3VyIGlzICAgcGVyY2VpdmVkLiAgIFRoZSBlYXJzIHBlcmZvcm0gdHdvIHNlbnNvcnkgZnVuY3Rpb25zLCAgIGhlYXJpbmcgYW5kIG1haW50ZW5hbmNlIG9mIGJvZHkgYmFsYW5jZS4gICBYLUZhY3RvcjogICBNZWNoYW5pc20gb2YgVmlzaW9uICAg74K3IFRoZSBsaWdodCByYXlzIGluIHZpc2libGUgd2F2ZWxlbmd0aCAgIGZvY3Vzc2VkIG9uIHRoZSByZXRpbmEgdGhyb3VnaCB0aGUgY29ybmVhICAgYW5kIGxlbnMgZ2VuZXJhdGUgcG90ZW50aWFscy4gICDvgrcgVGhlIHBob3Rvc2Vuc2l0aXZlIGNvbXBvdW5kcyBpbiB0aGUgICBodW1hbiBleWVzIGlzIGNvbXBvc2VkIG9mIG9wc2luIChhICAgcHJvdGVpbikgYW5kIHJldGluYWwgKGFuIGFsZGVoeWRlIG9mICAgdml0YW1pbiBBKS4gICDvgrcgTGlnaHQgaW5kdWNlcyBkaXNzb2NpYXRpb24gb2YgdGhlIHJldGluYWwgICBmcm9tIG9wc2luIHJlc3VsdGluZyBpbiBjaGFuZ2VzIGluIHRoZSAgIHN0cnVjdHVyZSBvZiB0aGUgb3BzaW4uIFRoaXMgY2F1c2VzICAgbWVtYnJhbmUgcGVybWVhYmlsaXR5IGNoYW5nZXMuICAgIO+CtyBBcyBhIHJlc3VsdCwgcG90ZW50aWFsIGRpZmZlcmVuY2VzIGFyZSAgIGdlbmVyYXRlZCBpbiB0aGUgcGhvdG9yZWNlcHRvciBjZWxscy4gVGhpcyAgIHByb2R1Y2VzIGEgc2lnbmFsIHRoYXQgZ2VuZXJhdGVzIGFjdGlvbiAgIHBvdGVudGlhbHMuICAg74K3IFRoZXNlIGFjdGlvbiBwb3RlbnRpYWxzIGFyZSB0cmFuc21pdHRlZCAgIGJ5IHRoZSBvcHRpYyBuZXJ2ZXMgdG8gdGhlIHZpc3VhbCBjb3J0ZXggICBhcmVhIG9mIHRoZSBicmFpbiwgd2hlcmUgdGhlIG5ldXJhbCAgIGltcHVsc2VzIGFyZSBhbmFseXNlZCBhbmQgdGhlIGltYWdlICAgZm9ybWVkIG9uIHRoZSByZXRpbmEgaXMgcmVjb2duaXNlZCBiYXNlZCAgIG9uIGVhcmxpZXIgbWVtb3J5IGFuZCBleHBlcmllbmNlLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9rZWJvMT0yICAxLTIyICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 4 only ",
        "option4" : "  2, 3 an 4 only   "
      }
    },
    {
      "index" : 87,
      "question" : " Which of the following observatory is  not dedicated to detect the  Gravitational Waves?  1.  LIGO  2.  Virgo  3.  The Orbiting Astronomical  Observatory 2  4.  KAGRA  Select the correct answer using the  codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogICAgTElHTyBtYXkgYmUgdGhlIGJpZ2dlc3QgZ3Jhdml0YXRpb25hbCB3YXZlICAgb2JzZXJ2YXRvcnkgb24gRWFydGgsIGJ1dCBpdCBpcyBub3QgdGhlIG9ubHkgICBvbmUuIEF0IHByZXNlbnQsIHRocmVlIG90aGVyIGdyYXZpdGF0aW9uYWwgICB3YXZlIG9ic2VydmF0b3JpZXMgYXJlIGluIG9wZXJhdGlvbiBvciB1bmRlciAgIGNvbnN0cnVjdGlvbiBpbiBvdGhlciBwYXJ0cyBvZiB0aGUgd29ybGQuICAgVGhlc2UgYXJlIExJR08ncyBzaXN0ZXIgZmFjaWxpdGllcy4gICBWaXJnbzogSXQgaXMgbG9jYXRlZCBvdXRzaWRlIG9mIFBpc2EsIEl0YWx5LiBJdCBpcyAgIGEgZ3Jhdml0YXRpb25hbCB3YXZlIGludGVyZmVyb21ldGVyIHdpdGggICBhcm1zIDMga20gbG9uZyAoTElHTydzIGFyZSA0IGttIGxvbmcpLiBWaXJnbyAgIGlzIGZ1bmRlZCBieSB0aGUgRXVyb3BlYW4gR3Jhdml0YXRpb25hbCAgIE9ic2VydmF0b3J5IChFR08pLCBhIGNvbGxhYm9yYXRpb24gb2YgdGhlICAgSXRhbGlhbiBhbmQgRnJlbmNoIGdvdmVybm1lbnRzLiAgIEdFTzYwMDogSXQgaXMgYSAwLjYga20gKDYwMCBtKSAgIGludGVyZmVyb21ldGVyIGxvY2F0ZWQgbmVhciBIYW5ub3ZlciwgICBHZXJtYW55LCBmdW5kZWQgYnkgYm90aCB0aGUgR2VybWFuIGFuZCAgIEJyaXRpc2ggZ292ZXJubWVudHMuIFRoaXMgd29ya2luZyAgIGdyYXZpdGF0aW9uYWwgd2F2ZSBkZXRlY3RvciBhbHNvIHNlcnZlcyBhcyBhICAgdGVzdCBzaXRlIHRvIGRldmVsb3AgYWR2YW5jZWQgaW50ZXJmZXJvbWV0ZXIgICBhbmQgb3B0aWNhbCBzdXNwZW5zaW9uIHN5c3RlbXMgZm9yIHVzZSBpbiAgIGZ1dHVyZSBkZXRlY3RvcnMuICAgS0FHUkE6IEphcGFuIGlzIGN1cnJlbnRseSBidWlsZGluZyBhIDMga20gICBpbnRlcmZlcm9tZXRlciBpbnNpZGUgb2YgdGhlIEthbWlva2EgbWluZSAgIChhbHNvIGhvbWUgdG8gdGhlIFN1cGVyIEthbWlva2FuZGUgICBuZXV0cmlubyBkZXRlY3RvcikuIEJlaW5nIHVuZGVyZ3JvdW5kLCB0aGUgICBkZXRlY3RvciB3aWxsIGJlIGV4cG9zZWQgdG8gbXVjaCBsZXNzIHNlaXNtaWMgICB2aWJyYXRpb24gdGhhbiBzdXJmYWNlIGluc3RydW1lbnRzIGxpa2UgICBMSUdPLCBWaXJnbyBhbmQgR0VPNjAwLiBLQUdSQSB3aWxsIGFsc28gICB1c2UgY3J5b2dlbmljIHN5c3RlbXMsIG1lYW5pbmcgdGhhdCB0aGUgICBvcHRpY3Mgd2lsbCBiZSBjb29sZWQgdG8gc3VjaCBhIGRlZ3JlZSB0aGF0ICAgbW9sZWN1bGFyIHZpYnJhdGlvbnMgd2l0aGluIHRoZSBtYXRlcmlhbCAgIGl0c2VsZiB3aWxsIGJlIGJyb3VnaHQgYWxtb3N0IHRvIGEgc3RvcC4gICBUaGUgT3JiaXRpbmcgQXN0cm9ub21pY2FsIE9ic2VydmF0b3J5IDIgICB3YXMgdGhlIGZpcnN0IHN1Y2Nlc3NmdWwgc3BhY2UgdGVsZXNjb3BlLCAgIGxhdW5jaGVkIG9uIERlY2VtYmVyIDcsIDE5NjguIEl0IHdhcyBub3QgICBkZWRpY2F0ZWQgdG8gZGV0ZWN0IEdyYXZpdGF0aW9uYWwgd2F2ZS4gICBYLUZhY3RvciAgIEFib3V0IExJR08gLSBJbmRpYTogICBUaGUgTGFzZXIgSW50ZXJmZXJvbWV0ZXIgR3Jhdml0YXRpb25hbC1XYXZlICAgT2JzZXJ2YXRvcnkgKExJR08pIC0gSW5kaWEgaXMgYSBwbGFubmVkICAgYWR2YW5jZWQgZ3Jhdml0YXRpb25hbC13YXZlIG9ic2VydmF0b3J5IHRvICAgYmUgbG9jYXRlZCBpbiBIaW5nb2xpLCBNYWhhcmFzaHRyYSBhcyBwYXJ0IG9mICAgdGhlIHdvcmxkd2lkZSBuZXR3b3JrLiAgIFRoZSBMSUdPLUluZGlhIHByb2plY3Qgd2lsbCBiZSBidWlsdCBieSBieSB0aGUgICBEZXBhcnRtZW50IG9mIEF0b21pYyBFbmVyZ3kgKERBRSkgYW5kIHRoZSAgIERlcGFydG1lbnQgb2YgU2NpZW5jZSBhbmQgVGVjaG5vbG9neSAgIChEU1QpLCBHb3Zlcm5tZW50IG9mIEluZGlhLCB3aXRoIGEgICBNZW1vcmFuZHVtIG9mIFVuZGVyc3RhbmRpbmcgKE1vVSkgd2l0aCAgIHRoZSBOYXRpb25hbCBTY2llbmNlIEZvdW5kYXRpb24gKE5TRiksIFVTQSwgICBhbG9uZyB3aXRoIHNldmVyYWwgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgICByZXNlYXJjaCBhbmQgYWNhZGVtaWMgaW5zdGl0dXRpb25zLiAgIFNvdXJjZTogICBodHRwczovL3d3dy5saWdvLmNhbHRlY2guZWR1L3BhZ2UvbGlnby0gIHNpc3Rlci1mYWNpbGl0aWVzICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc1ICA2ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  3 and 4 only ",
        "option4" : "  3 only    "
      }
    },
    {
      "index" : 88,
      "question" : " The term Rhodamine is often  mentioned in the news is related to:  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g1 4  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg4",
      "description" : "IEV4cGxhbmF0aW9uOiAgICBPcHRpb24gKGIpIGlzIGNvcnJlY3Q6ICAgIFJob2RhbWluZSwgd2hpY2ggaXMgdml2aWRseSBjb2xvdXJlZCwgICBhbHRob3VnaCBpbGxlZ2FsIGFuZCBwb3RlbnRpYWxseSAgIGNhcmNpbm9nZW5pYywgaGFzIGJlZW4gcmVwb3J0ZWQgd2lkZWx5IGFzICAgcHJlc2VudCBpbiB2YXJpb3VzIGZvb2RzLCBpbmNsdWRpbmcgY2hpbGkgICBwb3dkZXIsIHByZXNlcnZlZCBwbHVtcywgc2F1c2FnZSBhbmQgICBzd2VldHMsIHByZXNlbnRpbmcgYSBzaWduaWZpY2FudCBoZWFsdGggICByaXNrLiAgICBGU1NBSSByZWNlbnRseSB0d2VldGVkIGEgdmlkZW8gcmVnYXJkaW5nICAgaG93IHRvIGlkZW50aWZ5IGFkdWx0ZXJhdGlvbiBvZiBSaG9kYW1pbmUgICBpbiByYWdpLiAgICBBIHRleHRpbGUgZHllLCBSaG9kYW1pbmUgQiBpcyB0b3hpYyB0byB0aGUgICBodW1hbiBib2R5LiBJdCBvZnRlbiBlbnRlcnMgdGhlIGJvZHkgd2hlbiAgIG1peGVkIHdpdGggZm9vZCwgdGhlcmVieSBjYXVzaW5nIG94aWRhdGl2ZSAgIHN0cmVzcyBvbiBjZWxscyBhbmQgdGlzc3Vlcy4gVGhlIHVzZSBvZiAgIFJob2RhbWluZSBCIGluIGZvb2QgZm9yIGEgbG9uZyB0aW1lIGxlYWRzIHRvICAgbGl2ZXIgZHlzZnVuY3Rpb24gb3IgY2FuY2VyLCBhbmQgd2hlbiAgIGV4cG9zZWQgdG8gbGFyZ2UgYW1vdW50cyBvdmVyIGEgc2hvcnQgICBwZXJpb2QsIGl0IHJlc3VsdHMgaW4gYWN1dGUgICBwb2lzb25pbmcuIEFjY29yZGluZyB0byB0aGUgV29ybGQgSGVhbHRoICAgT3JnYW5pemF0aW9uLCBmb29kYm9ybmUgZGlzZWFzZXMgYXJlICAgaW5mZWN0aW9ucyBvciBwb2lzb25pbmcgY2F1c2VkIGJ5ICAgbWljcm9iZXMgdGhhdCBlbnRlciB0aGUgYm9keSB0aHJvdWdoICAgZm9vZCBjb25zdW1lZC4gICBTb3VyY2U6ICAgaHR0cHM6Ly9wdWJtZWQubmNiaS5ubG0ubmloLmdvdi8zMjA2NjA3ICA0LyM6fjp0ZXh0PVJob2RhbWluZSUyMEIlMjAoUmhCKSUyQyAgJTIwd2hpY2gscHJlc2VudGluZyUyMGElMjBzaWduaWZpY2FudCUgIDIwaGVhbHRoJTIwcmlzay4gICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvbGlmZXN0eWxlICAvZm9vZC13aW5lL3Job2RhbWluZS1hZHVsdGVyYXRpb24tcmFnaS0gIHNpbXBsZS10ZXN0LWhvbWUtZnNzYWktNzYzMjY3MS8gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  A skin disease found in cattle.  ",
        "option2" : "  A toxic dye.  ",
        "option3" : "  Gene responsible for DNA   mutation.  ",
        "option4" : "  Diamond mine in South Africa.   "
      }
    },
    {
      "index" : 89,
      "question" : " Consider the following statements:  1.  Ammonotelism refers to the  conversion of ammonia into urea.  2.  All the mammals are essentially  ammonotelic in nature.  3.  Uric acid is the least toxic of all the  nitrogenous wastes.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIHByb2Nlc3Mgb2YgICBleGNyZXRpbmcgYW1tb25pYSBpcyBBbW1vbm90ZWxpc20uICAgTWFueSBib255IGZpc2hlcywgYXF1YXRpYyBhbXBoaWJpYW5zIGFuZCAgIGFxdWF0aWMgaW5zZWN0cyBhcmUgYW1tb25vdGVsaWMgaW4gbmF0dXJlLiAgIEFtbW9uaWEsIGFzIGl0IGlzIHJlYWRpbHkgc29sdWJsZSwgaXMgZ2VuZXJhbGx5ICAgZXhjcmV0ZWQgYnkgZGlmZnVzaW9uIGFjcm9zcyBib2R5IHN1cmZhY2VzIG9yICAgdGhyb3VnaCBnaWxsIHN1cmZhY2VzIChpbiBmaXNoKSBhcyBhbW1vbml1bSAgIGlvbnMuIEtpZG5leXMgZG8gbm90IHBsYXkgYW55IHNpZ25pZmljYW50IHJvbGUgICBpbiBpdHMgcmVtb3ZhbC4gVGVycmVzdHJpYWwgYWRhcHRhdGlvbiAgIG5lY2Vzc2l0YXRlZCB0aGUgcHJvZHVjdGlvbiBvZiBsZXNzZXIgdG94aWMgICBuaXRyb2dlbm91cyB3YXN0ZXMgbGlrZSB1cmVhIGFuZCB1cmljIGFjaWQgICBmb3IgY29uc2VydmF0aW9uIG9mIHdhdGVyLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE1hbW1hbHMsIG1hbnkgICB0ZXJyZXN0cmlhbCBhbXBoaWJpYW5zIGFuZCBtYXJpbmUgZmlzaGVzICAgKG5vdCBhbGwpIG1haW5seSBleGNyZXRlIHVyZWEgYW5kIGFyZSAgIGNhbGxlZCB1cmVvdGVsaWMgYW5pbWFscy4gQW1tb25pYSAgIHByb2R1Y2VkIGJ5IG1ldGFib2xpc20gaXMgY29udmVydGVkIGludG8gICB1cmVhIGluIHRoZSBsaXZlciBvZiB0aGVzZSBhbmltYWxzIGFuZCAgIHJlbGVhc2VkIGludG8gdGhlIGJsb29kIHdoaWNoIGlzIGZpbHRlcmVkIGFuZCAgIGV4Y3JldGVkIG91dCBieSB0aGUga2lkbmV5cy4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQW1tb25pYSwgdXJlYSAgIGFuZCB1cmljIGFjaWQgYXJlIHRoZSBtYWpvciBmb3JtcyBvZiAgIG5pdHJvZ2Vub3VzIHdhc3RlcyBleGNyZXRlZCBieSB0aGUgYW5pbWFscy4gICBBbW1vbmlhIGlzIHRoZSBtb3N0IHRveGljIGZvcm0gYW5kICAgcmVxdWlyZXMgbGFyZ2UgYW1vdW50IG9mIHdhdGVyIGZvciBpdHMgICBlbGltaW5hdGlvbiwgd2hlcmVhcyB1cmljIGFjaWQsIGJlaW5nIHRoZSAgIGxlYXN0IHRveGljLCBjYW4gYmUgcmVtb3ZlZCB3aXRoIGEgICBtaW5pbXVtIGxvc3Mgb2Ygd2F0ZXIuICAgWC1GYWN0b3I6ICAgTWljdHVyaXRpb246ICAg74K3IFRoZSBwcm9jZXNzIG9mIHJlbGVhc2Ugb2YgdXJpbmUgaXMgY2FsbGVkICAgbWljdHVyaXRpb24gYW5kIHRoZSBuZXVyYWwgbWVjaGFuaXNtcyAgIGNhdXNpbmcgaXQgaXMgY2FsbGVkIHRoZSBtaWN0dXJpdGlvbiByZWZsZXguICAg74K3IFRoZSB1cmluZSBmb3JtZWQgaXMgYSBsaWdodCB5ZWxsb3cgICBjb2xvdXJlZCB3YXRlcnkgZmx1aWQgd2hpY2ggaXMgc2xpZ2h0bHkgICBhY2lkaWMgKHBILTYuMCkgYW5kIGhhcyBhIGNoYXJhY3RlcmVzdGljICAgb2RvdXIuICAgIO+CtyBBbmFseXNpcyBvZiB1cmluZSBoZWxwcyBpbiBjbGluaWNhbCAgIGRpYWdub3NpcyBvZiBtYW55IG1ldGFib2xpYyBkaXNjb3JkZXJzICAgYXMgd2VsbCBhcyBtYWxmdW5jdGlvbmluZyBvZiB0aGUga2lkbmV5LiAgICDvgrcgRm9yIGV4YW1wbGUsIHByZXNlbmNlIG9mIGdsdWNvc2UgICAoR2x5Y29zdXJpYSkgYW5kIGtldG9uZSBib2RpZXMgICAoS2V0b251cmlhKSBpbiB1cmluZSBhcmUgaW5kaWNhdGl2ZSBvZiAgIGRpYWJldGVzIG1lbGxpdHVzLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9rZWJvMT0xICA5LTIyICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  3 only ",
        "option4" : "  1, 2 an 3    "
      }
    },
    {
      "index" : 90,
      "question" : " With reference to Biosimilars in  pharmaceutical, consider the following  statements:  1. It is biological molecule found in  blood, other body fluids, or tissues  that is a sign of a normal or  abnormal process.   2.  They are used to predict illness.  3.  Sandoz's Zarxio is an example of  Biosimilar drug to Amgen's  Neupogen.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkw",
      "description" : "IEV4cGxhbmF0aW9uOiAgQSBiaW9zaW1pbGFyIGlzIGEgYmlvbG9naWNhbCAgIHByb2R1Y3QgdGhhdCBpcyB2ZXJ5IHNpbWlsYXIgdG8gYSByZWZlcmVuY2UgICBiaW9sb2dpYyBhbmQgZm9yIHdoaWNoIHRoZXJlIGFyZSAgIG5vIGNsaW5pY2FsbHkgbWVhbmluZ2Z1bCBkaWZmZXJlbmNlcyBpbiB0ZXJtcyAgIG9mIHNhZmV0eSwgcHVyaXR5LCBhbmQgcG90ZW5jeS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEEgYmlvc2ltaWxhciAgIGRydWcgaXMgYSBiaW9sb2dpY2FsIGRydWcgdGhhdCBpcyB2ZXJ5IG11Y2ggICBsaWtlIGFub3RoZXIgYmlvbG9naWNhbCBkcnVnIChjYWxsZWQgdGhlICAgcmVmZXJlbmNlIGRydWcpLiBCaW9zaW1pbGFyIGRydWdzIGFuZCAgIHJlZmVyZW5jZSBkcnVncyBhcmUgbWFkZSBmcm9tIGxpdmluZyAgIG9yZ2FuaXNtcyBidXQgdGhleSBtYXkgYmUgbWFkZSBpbiAgIGRpZmZlcmVudCB3YXlzIGFuZCBvZiBzbGlnaHRseSBkaWZmZXJlbnQgICBzdWJzdGFuY2VzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQmlvbWFya2VycyBhcmUgICB1c2VkIHRvIHByZWRpY3Qgc2VyaW91cyBpbGxuZXNzLiBBIHdpZGUgICByYW5nZSBvZiBiaW9tYXJrZXJzIGFyZSB1c2VkIHRvZGF5LiBFdmVyeSAgIGJpb2xvZ2ljYWwgc3lzdGVtIChmb3IgZXhhbXBsZSB0aGUgICBjYXJkaW92YXNjdWxhciBzeXN0ZW0sIG1ldGFib2xpYyBzeXN0ZW0gICBvciB0aGUgaW1tdW5lIHN5c3RlbSkgaGFzIGl0cyBvd24gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzUgIDcgICBzcGVjaWZpYyBiaW9tYXJrZXJzLiBCaW9zaW1pbGFycyBhcmUganVzdCAgIGFuIGFub3RoZXIgY2F0ZWdvcnkgb2YgZHJ1Zy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBJbiBNYXJjaCwgMjAxNSB0aGUgICBVbml0ZWQgU3RhdGVzIEZEQSBhcHByb3ZlZCAgIHRoZSBmaXJzdCBiaW9zaW1pbGFyICAgU2FuZG96J3MgWmFyeGlvIChmaWxncmFzdGltLXNuZHopLCB0aGUgICBiaW9zaW1pbGFyIHRvIEFtZ2VuJ3MgTmV1cG9nZW4uICAgWC1GYWN0b3I6ICAgQmlvbWFya2VyOiBBIGJpb2xvZ2ljYWwgbW9sZWN1bGUgZm91bmQgaW4gICBibG9vZCwgb3RoZXIgYm9keSBmbHVpZHMsIG9yIHRpc3N1ZXMgdGhhdCBpcyAgIGEgc2lnbiBvZiBhIG5vcm1hbCBvciBhYm5vcm1hbCBwcm9jZXNzLCBvciBvZiAgIGEgY29uZGl0aW9uIG9yIGRpc2Vhc2UuIEEgYmlvbWFya2VyIG1heSBiZSAgIHVzZWQgdG8gc2VlIGhvdyB3ZWxsIHRoZSBib2R5IHJlc3BvbmRzIHRvICAgYSB0cmVhdG1lbnQgZm9yIGEgZGlzZWFzZSBvciBjb25kaXRpb24uICAgQWxzbyBjYWxsZWQgbW9sZWN1bGFyIG1hcmtlciBhbmQgICBzaWduYXR1cmUgbW9sZWN1bGUuIEV4YW1wbGVzIG9mICAgYmlvbWFya2VycyBpbmNsdWRlIGV2ZXJ5dGhpbmcgZnJvbSBwdWxzZSAgIGFuZCBibG9vZCBwcmVzc3VyZSB0aHJvdWdoIGJhc2ljICAgY2hlbWlzdHJpZXMgdG8gbW9yZSBjb21wbGV4IGxhYm9yYXRvcnkgICB0ZXN0cyBvZiBibG9vZCBhbmQgb3RoZXIgdGlzc3Vlcy4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cuY2FuY2VyLmdvdi9wdWJsaWNhdGlvbnMvZGljdGkgIG9uYXJpZXMvY2FuY2VyLXRlcm1zL2RlZi9iaW9tYXJrZXIgICBodHRwczovL3d3dy5kcnVncy5jb20vc2xpZGVzaG93L2Jpb3NpbWkgIGxhcnMtLTEyNjQgICBodHRwczovL3d3dy5uZXdzLSAgbWVkaWNhbC5uZXQvaGVhbHRoL1doYXQtaXMtYS0gIEJpb21hcmtlci5hc3B4ICAgaHR0cHM6Ly93d3cubmNiaS5ubG0ubmloLmdvdi9wbWMvYXJ0aWNsZSAgcy9QTUMzMDc4NjI3LyM6fjp0ZXh0PUV4YW1wbGVzJTIwb2YlICAyMGJpb21hcmtlcnMlMjBpbmNsdWRlJTIwZXZlcnl0aGluZyxvZiAgJTIwYmxvb2QlMjBhbmQlMjBvdGhlciUyMHRpc3N1ZXM2LiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only ",
        "option2" : "  2 and 3 only   ",
        "option3" : "  3 only  ",
        "option4" : "  1 an 3 only    "
      }
    },
    {
      "index" : 91,
      "question" : "Consider the following statements  regarding plasma:  1.  It constitutes more than half of the  blood.  2.  It contains fibrinogen for  coagulation of blood.  3. It is also referred to as  thrombocyte.  4.  It secretes histamine and  serotonin.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkx",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFBsYXNtYSBpcyBhIHN0cmF3ICAgY29sb3VyZWQsIHZpc2NvdXMgZmx1aWQgY29uc3RpdHV0aW5nICAgbmVhcmx5IDU1IHBlciBjZW50IG9mIHRoZSBibG9vZC4gOTAtOTIgcGVyICAgY2VudCBvZiBwbGFzbWEgaXMgd2F0ZXIgYW5kIHByb3RlaW5zICAgY29udHJpYnV0ZSA2LTggcGVyIGNlbnQgb2YgaXQuIEZpYnJpbm9nZW4sICAgZ2xvYnVsaW5zIGFuZCBhbGJ1bWlucyBhcmUgdGhlIG1ham9yICAgcHJvdGVpbnMuICAgU3RhdGVlbW50IDIgaXMgY29ycmVjdDogRmlicmlub2dlbnMgYXJlICAgbmVlZGVkIGZvciBjbG90dGluZyBvciBjb2FndWxhdGlvbiBvZiAgIGJsb29kLiBHbG9idWxpbnMgcHJpbWFybHkgYXJlIGludm9sdmVkIGluICAgZGVmZW5zZSBtZWNoYW5pc21zIG9mIHRoZSBib2R5IGFuZCB0aGUgICBhbGJ1bWlucyBoZWxwIGluIG9zbW90aWMgYmFsYW5jZS4gUGxhc21hICAgYWxzbyBjb250YWlucyBzbWFsbCBhbW91bnRzIG9mIG1pbmVyYWxzIGxpa2UgICBOYSssIENhKyssIE1nKyssIEhDTzMgLSwgQ2wtICwgZXRjLiBHbHVjb3NlLCAgIGFtaW5vIGFjaWRzLCBsaXBpZHMsIGV0Yy4sIGFyZSBhbHNvIHByZXNlbnQgaW4gICB0aGUgcGxhc21hIGFzIHRoZXkgYXJlIGFsd2F5cyBpbiB0cmFuc2l0IGluICAgdGhlIGJvZHkuIEZhY3RvcnMgZm9yIGNvYWd1bGF0aW9uIG9yIGNsb3R0aW5nICAgb2YgYmxvb2QgYXJlIGFsc28gcHJlc2VudCBpbiB0aGUgcGxhc21hIGluIGFuICAgaW5hY3RpdmUgZm9ybS4gUGxhc21hIHdpdGhvdXQgdGhlIGNsb3R0aW5nICAgZmFjdG9ycyBpcyBjYWxsZWQgc2VydW0uICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBQbGF0ZWxldHMgYWxzbyAgIGtub3duIGFzIHRocm9tYm9jeXRlcywgYXJlIGNlbGwgZnJhZ21lbnRzICAgcHJvZHVjZWQgZnJvbSBtZWdha2FyeW9jeXRlcyAoc3BlY2lhbCBjZWxscyAgIGluIHRoZSBib25lIG1hcnJvdykuIEJsb29kIG5vcm1hbGx5ICAgY29udGFpbnMgMSw1MDAsMDAtMyw1MDAsMDAgcGxhdGVsZXRzIG1tLTMuICAgUGxhdGVsZXRzIGNhbiByZWxlYXNlIGEgdmFyaWV0eSBvZiBzdWJzdGFuY2VzICAgbW9zdCBvZiB3aGljaCBhcmUgaW52b2x2ZWQgaW4gdGhlIGNvYWd1bGF0aW9uICAgb3IgY2xvdHRpbmcgb2YgYmxvb2QuIEEgcmVkdWN0aW9uIGluIHRoZWlyICAgbnVtYmVyIGNhbiBsZWFkIHRvIGNsb3R0aW5nIGRpc29yZGVycyB3aGljaCAgIHdpbGwgbGVhZCB0byBleGNlc3NpdmUgbG9zcyBvZiBibG9vZCBmcm9tIHRoZSAgIGJvZHkuICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBOZXV0cm9waGlscyBhbmQgICBtb25vY3l0ZXMgKDYtOCBwZXIgY2VudCkgYXJlIHBoYWdvY3l0aWMgY2VsbHMgICB3aGljaCBkZXN0cm95IGZvcmVpZ24gb3JnYW5pc21zIGVudGVyaW5nICAgdGhlIGJvZHkuIEJhc29waGlscyBzZWNyZXRlIGhpc3RhbWluZSwgICBzZXJvdG9uaW4sIGhlcGFyaW4sIGV0Yy4sIGFuZCBhcmUgaW52b2x2ZWQgICBpbiBpbmZsYW1tYXRvcnkgcmVhY3Rpb25zLiAgIFgtRmFjdG9yOiAgIO+CtyBCbG9vZCBleGhpYml0cyBjb2FndWxhdGlvbiBpbiByZXNwb25zZSB0byAgIGFuIGluanVyeSBvciB0cmF1bWEuICAg74K3IFRoaXMgaXMgYSBtZWNoYW5pc20gdG8gcHJldmVudCBleGNlc3NpdmUgICBsb3NzIG9mIGJsb29kIGZyb20gdGhlIGJvZHkuICAgIO+CtyBJdCBpcyBhIGNsb3Qgb3IgY29hZ3VsYW0gZm9ybWVkIG1haW5seSBvZiAgIGEgbmV0d29yayBvZiB0aHJlYWRzIGNhbGxlZCBmaWJyaW5zIGluICAgd2hpY2ggZGVhZCBhbmQgZGFtYWdlZCBmb3JtZWQgICBlbGVtZW50cyBvZiBibG9vZCBhcmUgdHJhcHBlZC4gICAg74K3IEZpYnJpbnMgYXJlIGZvcm1lZCBieSB0aGUgY29udmVyc2lvbiBvZiAgIGluYWN0aXZlIGZpYnJpbm9nZW5zIGluIHRoZSBwbGFzbWEgYnkgdGhlICAgZW56eW1lIHRocm9tYmluLiAgICDvgrcgVGhyb21iaW5zLCBpbiB0dXJuIGFyZSBmb3JtZWQgZnJvbSAgIGFub3RoZXIgaW5hY3RpdmUgc3Vic3RhbmNlIHByZXNlbnQgaW4gdGhlICAgcGxhc21hIGNhbGxlZCBwcm90aHJvbWJpbi4gICAg74K3IENhbGNpdW0gaW9ucyBwbGF5IGEgdmVyeSBpbXBvcnRhbnQgcm9sZSBpbiAgIGNsb3R0aW5nLiAgIFNvdXJjZTogICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9rZWJvMT0xICA4LTIyICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only  ",
        "option2" : "  3 and 4 only  ",
        "option3" : "  1, 2 and 3 only  ",
        "option4" : "  2, 3 and 4 only  "
      }
    },
    {
      "index" : 92,
      "question" : " With reference to Barcodes, consider  the following statements   1.  These are varied in width and  quantity depending on the  application.  2.  Barcode readers use only laser to  read a barcode.  Select the correct answer using the cod  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDky",
      "description" : "IEV4cGxhbmF0aW9uOiBBIGJhcmNvZGUgaXMgYSBwcmludGVkIHNlcmllcyBvZiAgIHBhcmFsbGVsIGJhcnMgb3IgbGluZXMgb2YgdmFyeWluZyB3aWR0aCB1c2VkICAgZm9yIGVudGVyaW5nIGRhdGEgaW50byBhIGNvbXB1dGVyIHN5c3RlbS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgVGhlIGJhcnMgYXJlIGJsYWNrICAgb24gYSB3aGl0ZSBiYWNrZ3JvdW5kIGFuZCB2YXJ5IGluIHdpZHRoICAgYW5kIHF1YW50aXR5IGRlcGVuZGluZyBvbiB0aGUgICBhcHBsaWNhdGlvbi4gVGhlIGJhcnMgcmVwcmVzZW50IHRoZSBiaW5hcnkgICBkaWdpdHMgemVybyBhbmQgb25lLCB3aGljaCByZXByZXNlbnQgdGhlICAgZGlnaXRzIHplcm8gdG8gbmluZSBwcm9jZXNzZWQgYnkgYSBkaWdpdGFsICAgY29tcHV0ZXIuIEJhcmNvZGVzIG1ham9yIGJ1c2luZXNzIGJlbmVmaXRzICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc1ICA4ICAgaW5jbHVkZSBhY2N1cmFjeSwgaW52ZW50b3J5IGNvbnRyb2wgY29zdCAgIHNhdmluZ3MsIHNwZWVkIGFuZCBlYXNlLiAgIEl0IGVuY29kZSBwcm9kdWN0IGluZm9ybWF0aW9uIGludG8gYmFycyBhbmQgICBhbHBoYW51bWVyaWMgY2hhcmFjdGVycy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJhcmNvZGUgcmVhZGVycyAgIHVzZXMgTEVEIGxpZ2h0cywgSW5mcmFyZWQgcmFkaWF0aW9uLCBsYXNlciAgIHRvIHJlYWQgYSBiYXJjb2RlLiAgIFgtZmFjdG9yOiAgIO+CtyBCYXJjb2RlcyBhcmUgc2Nhbm5lZCB1c2luZyBzcGVjaWFsICAgb3B0aWNhbCBzY2FubmVycyBrbm93biBhcyBiYXJjb2RlICAgcmVhZGVycywgd2hpY2ggY29tZSBpbiBhIHZhcmlldHkgb2YgICBzaGFwZXMgYW5kIHNpemVzLiAgICDvgrcgVGhlIG1ham9yaXR5IG9mIHRoZXNlIGNvZGVzIHVzZSBvbmx5IHR3byAgIGRpZmZlcmVudCB3aWR0aHMgb2YgYmFycywgaG93ZXZlciBzb21lICAgdXNlIGZvdXIuICAg74K3IFRoZSBudW1iZXJzIHRoYXQgbWFrZSB1cCBhIGJhcmNvZGUgYXJlICAgYWxzbyBwcmludGVkIGF0IHRoZSBib3R0b20uIE9uZSBvZiB0aGUgICBtb3N0IHdlbGwta25vd24gZXhhbXBsZXMgb2YgYSBiYXJjb2RlICAgaXMgdGhlIFFSIGNvZGUuICAgU291cmNlOiAgIGh0dHBzOi8vd3d3Lm5ldHN1aXRlLmNvbS9wb3J0YWwvcmVzb3VyY2UgIC9hcnRpY2xlcy9pbnZlbnRvcnktICBtYW5hZ2VtZW50L2JhcmNvZGUuc2h0bWwjOn46dGV4dD1CYXJjbyAgZGVzJTIwZW5jb2RlJTIwcHJvZHVjdCUyMGluZm9ybWF0aW9uICAlMjBpbnRvLGludmVudG9yeSUyMGNvbnRyb2wlMjBhbmQlMjBjICBvc3QlMjBzYXZpbmdzLiAgIGh0dHBzOi8vd3d3LmFzcC5jb20uYXUvd2hhdC1raW5kLXJheXMtICB1c2VkLWJhcmNvZGUtICByZWFkZXIvIzp+OnRleHQ9SW5mcmFyZWQlMjBSYWRpYXRpb24sZWEgIHN5JTIwYW5kJTIwY29udmVuaWVudCUyMHRvJTIwdXNlLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 93,
      "question" : " With reference to Mycorrhiza, consider  the following statements:  1.  It is a symbiotic association of a  fungus with a root system.  2.  Pinus seeds cannot germinate and  establish without its presence.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDkz",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFNvbWUgcGxhbnRzIGhhdmUgYWRkaXRpb25hbCBzdHJ1Y3R1cmVzICAgYXNzb2NpYXRlZCB3aXRoIHRoZW0gdGhhdCBoZWxwIGluIHdhdGVyIChhbmQgICBtaW5lcmFsKSBhYnNvcnB0aW9uLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBIG15Y29ycmhpemEgaXMgYSAgIHN5bWJpb3RpYyBhc3NvY2lhdGlvbiBvZiBhIGZ1bmd1cyB3aXRoIGEgICByb290IHN5c3RlbS4gVGhlIGZ1bmdhbCBmaWxhbWVudHMgZm9ybSBhICAgbmV0d29yayBhcm91bmQgdGhlIHlvdW5nIHJvb3Qgb3IgdGhleSAgIHBlbmV0cmF0ZSB0aGUgcm9vdCBjZWxscy4gVGhlIGh5cGhhZSBoYXZlIGEgICB2ZXJ5IGxhcmdlIHN1cmZhY2UgYXJlYSB0aGF0IGFic29yYiBtaW5lcmFsICAgaW9ucyBhbmQgd2F0ZXIgZnJvbSB0aGUgc29pbCBmcm9tIGEgbXVjaCAgIGxhcmdlciB2b2x1bWUgb2Ygc29pbCB0aGF0IHBlcmhhcHMgYSByb290ICAgY2Fubm90IGRvLiBUaGUgZnVuZ3VzIHByb3ZpZGVzIG1pbmVyYWxzICAgYW5kIHdhdGVyIHRvIHRoZSByb290cywgaW4gdHVybiB0aGUgcm9vdHMgICBwcm92aWRlIHN1Z2FycyBhbmQgTi1jb250YWluaW5nICAgY29tcG91bmRzIHRvIHRoZSBteWNvcnJoaXphZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogU29tZSBwbGFudHMgaGF2ZSAgIGFuIG9ibGlnYXRlIGFzc29jaWF0aW9uIHdpdGggdGhlICAgbXljb3JyaGl6YWUuIEZvciBleGFtcGxlLCBQaW51cyBzZWVkcyAgIGNhbm5vdCBnZXJtaW5hdGUgYW5kIGVzdGFibGlzaCB3aXRob3V0ICAgdGhlIHByZXNlbmNlIG9mIG15Y29ycmhpemFlLiAgIFgtRmFjdG9yOiAgIFRyYW5zcGlyYXRpb24gICAg74K3IEl0IGlzIHRoZSBldmFwb3JhdGl2ZSBsb3NzIG9mIHdhdGVyIGJ5ICAgcGxhbnRzLiAgICDvgrcgSXQgb2NjdXJzIG1haW5seSB0aHJvdWdoIHN0b21hdGEuICAgIO+CtyBCZXNpZGVzIHRoZSBsb3NzIG9mIHdhdGVyIHZhcG91ciBpbiAgIHRyYW5zcGlyYXRpb24sIGV4Y2hhbmdlIG9mIG94eWdlbiBhbmQgICBjYXJib24gZGlveGlkZSBpbiB0aGUgbGVhZiBhbHNvIG9jY3VycyAgIHRocm91Z2ggdGhlc2Ugc3RvbWF0YS4gICAg74K3IE5vcm1hbGx5IHN0b21hdGEgYXJlIG9wZW4gaW4gdGhlIGRheSAgIHRpbWUgYW5kIGNsb3NlIGR1cmluZyB0aGUgbmlnaHQuICAgIO+CtyBUaGUgdHJhbnNwaXJhdGlvbiBkcml2ZW4gYXNjZW50IG9mIHh5bGVtICAgc2FwIGRlcGVuZHMgbWFpbmx5IG9uIHRoZSBmb2xsb3dpbmcgICBwaHlzaWNhbCBwcm9wZXJ0aWVzIG9mIHdhdGVyOiAgICDvgrcgQ29oZXNpb24gLSBtdXR1YWwgYXR0cmFjdGlvbiBiZXR3ZWVuICAgd2F0ZXIgbW9sZWN1bGVzLiAgICDvgrcgQWRoZXNpb24gLSBhdHRyYWN0aW9uIG9mIHdhdGVyICAgbW9sZWN1bGVzIHRvIHBvbGFyIHN1cmZhY2VzICAg74K3IFN1cmZhY2UgVGVuc2lvbiAtIHdhdGVyIG1vbGVjdWxlcyBhcmUgICBhdHRyYWN0ZWQgdG8gZWFjaCBvdGhlciBpbiB0aGUgbGlxdWlkICAgcGhhc2UgICBtb3JlIHRoYW4gdG8gd2F0ZXIgaW4gdGhlIGdhcyAgIHBoYXNlICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2tlYm8xPTEgIDEtMjIgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 94,
      "question" : " Consider the following statements  regarding Biologic drug:  1.  It is a product that is produced  from living organisms or contain  components of living organisms.  2.  Till now only Gene based biologics  have invented.  3.  Vaccines are the examples of  biologic drugs.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk0",
      "description" : "IEV4cGxhbmF0aW9uOiBCaW9sb2dpYyBkcnVncyBpbmNsdWRlIGEgd2lkZSAgIHZhcmlldHkgb2YgcHJvZHVjdHMgZGVyaXZlZCBmcm9tIGh1bWFuLCAgIGFuaW1hbCwgb3IgbWljcm9vcmdhbmlzbXMgYnkgdXNpbmcgICBiaW90ZWNobm9sb2d5LiBCaW9sb2dpYyBkcnVncyBhcmUgc29tZXRpbWVzICAgcmVmZXJyZWQgdG8gYXMgYmlvbG9naWMgcmVzcG9uc2UgbW9kaWZpZXJzICAgYmVjYXVzZSB0aGV5IGNoYW5nZSB0aGUgbWFubmVyIG9mICAgb3BlcmF0aW9uIG9mIG5hdHVyYWwgYmlvbG9naWMgaW50cmFjZWxsdWxhciAgIGFuZCBjZWxsdWxhciBhY3Rpb25zLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEJpb2xvZ2ljcyBjYW4gYmUgICBjb21wb3NlZCBvZiBzdWdhcnMsIHByb3RlaW5zLCBvciBudWNsZWljICAgYWNpZHMgb3IgY29tcGxleCBjb21iaW5hdGlvbnMgb2YgdGhlc2UgICBzdWJzdGFuY2VzLCBvciBtYXkgYmUgbGl2aW5nIGVudGl0aWVzIHN1Y2ggICBhcyBjZWxscyBhbmQgdGlzc3Vlcy4gSXQgaXMgYSBwcm9kdWN0IHRoYXQgaXMgICBwcm9kdWNlZCBmcm9tIGxpdmluZyBvcmdhbmlzbXMgb3IgY29udGFpbiAgIGNvbXBvbmVudHMgb2YgbGl2aW5nIG9yZ2FuaXNtcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6ICBCaW9sb2dpY3MgYXJlICAgaXNvbGF0ZWQgZnJvbSBhIHZhcmlldHkgb2YgbmF0dXJhbCBzb3VyY2VzIC0gICBodW1hbiwgYW5pbWFsLCBvciBtaWNyb29yZ2FuaXNtIC0gYW5kIG1heSAgIGJlIHByb2R1Y2VkIGJ5IGJpb3RlY2hub2xvZ3kgbWV0aG9kcyAgIGFuZCBvdGhlciBjdXR0aW5nLWVkZ2UgdGVjaG5vbG9naWVzLiAgIENlbGx1bGFyIGJpb2xvZ2ljcywgZ2VuZS1iYXNlZCBiaW9sb2dpY3MgICBhcmUgaW4gZm9yZWZyb250IGluIGludmVudGlvbiBvZiBiaW9sb2dpY3MuICAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICBURVNUIC0gOTAwOCAoICkgICAgd3d3LiAgICB0Lm1lLyAgUGEgIGc1ICA5ICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQmlvbG9naWNhbCBwcm9kdWN0cyAgIGluY2x1ZGUgYSB3aWRlIHJhbmdlIG9mIHByb2R1Y3RzIHN1Y2ggYXMgICB2YWNjaW5lcywgYmxvb2QgYW5kIGJsb29kIGNvbXBvbmVudHMsICAgYWxsZXJnZW5pY3MsIHNvbWF0aWMgY2VsbHMsIGdlbmUgdGhlcmFweSwgICB0aXNzdWVzLCBhbmQgcmVjb21iaW5hbnQgdGhlcmFwZXV0aWMgICBwcm90ZWlucy4gICBYLUZhY3RvcjogTW9zdCBkcnVncyB0aGF0IGFyZSBjaGVtaWNhbGx5ICAgc3ludGhlc2l6ZWQgYW5kIHRoZWlyIHN0cnVjdHVyZSBpcyBrbm93biwgICBtb3N0IGJpb2xvZ2ljcyBhcmUgY29tcGxleCBtaXh0dXJlcyB0aGF0ICAgYXJlIG5vdCBlYXNpbHkgaWRlbnRpZmllZCBvciBjaGFyYWN0ZXJpemVkLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuZmRhLmdvdi9hYm91dC0gIGZkYS9jZW50ZXItYmlvbG9naWNzLWV2YWx1YXRpb24tYW5kLSAgcmVzZWFyY2gtY2Jlci93aGF0LWFyZS1iaW9sb2dpY3MtICBxdWVzdGlvbnMtYW5kLWFuc3dlcnMgICBodHRwczovL3d3dy5tZWRpY2luZW5ldC5jb20vYmlvbG9naWNzX2JpICBvbG9naWNfZHJ1Z19jbGFzcy9hcnRpY2xlLmh0bSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only   ",
        "option3" : "  3 only  ",
        "option4" : "  1 an 3 only    "
      }
    },
    {
      "index" : 95,
      "question" : " Consider the following statements  regarding e-SIM's  1.  e-SIM allows re-programming,  letting users switch operators  without having to replace any  physical SIM cards.  2.  e-SIM's can be installed in smart  phones only.  3.  The Ministry of Communication  has made it mandatory to have e- SIM in every smartphone from  year 2025.  \u000f\u000f \u000f\u0001 \u000e\f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b TEST - 9008 ( )   www. t.me/ Pa g1 5  Which of the statement given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk1",
      "description" : "IEV4cGxhbmF0aW9uOiBBbiBlLVNJTSBpcyBhbiBlbWJlZGRlZCBTSU0sICAgZXNzZW50aWFsbHkgdGhlIHNhbWUgaGFyZHdhcmUgb2YgYSByZWd1bGFyICAgU0lNIGNhcmQgY2hpcCwgYnV0IG5vdyBhIHBlcm1hbmVudGx5ICAgZW1iZWRkZWQgcGFydCBvZiB0aGUgbW90aGVyYm9hcmQgb2YgYSAgIHdhdGNoIG9yIHNtYXJ0cGhvbmUuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSnVzdCBsaWtlIGEgICB0cmFkaXRpb25hbCBTSU0gY2FyZCwgYW4gZS1TSU0gYWxzbyBjb25zaXN0cyAgIG9mIHNvbWUgY29tcG9uZW50cywgd2hpY2ggYXJlIG5vdyBhIHBhcnQgICBvZiBwaG9uZSdzIGludGVybmFsIG9yZ2Fucy4gSG93ZXZlciwgYmVpbmcgICBhdHRhY2hlZCB0byB0aGUgbW90aGVyYm9hcmQgYWxzbyBhbGxvd3MgICByZS1wcm9ncmFtbWluZywgbGV0dGluZyB1c2VycyBzd2l0Y2ggICBvcGVyYXRvcnMgd2l0aG91dCBoYXZpbmcgdG8gcmVwbGFjZSBhbnkgICBwaHlzaWNhbCBTSU0gY2FyZHMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogZS1TSU0ncyBjYW4gYmUgICBpbnN0YWxsZWQgaW4gc21hcnRwaG9uZXMsIHNtYXJ0d2F0Y2hlcyAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIGRlbWFuZCBvZiAgIHRlbGVjb20gb3BlcmF0b3JzIHRvIG1ha2UgZWxlY3Ryb25pYyBTSU0gICAoRS1TSU0pIG1hbmRhdG9yeSBpbiBhbGwgZGV2aWNlcyBjb3N0aW5nICAgUnMgMTAsMDAwIGFuZCBhYm92ZSBoYXMgYmVlbiByZWplY3RlZCBieSAgIHNtYXJ0cGhvbmUgbWFudWZhY3R1cmVycywgd2hvIHNheSB0aGF0ICAgc3VjaCBhIG1vdmUgd2lsbCBpbmNyZWFzZSB0aGUgY29zdCBvZiBtaWQtICByYW5nZSBoYW5kc2V0cyAoUnMgMTAsMDAwLTIwLDAwMCksIHdoaWNoICAgY29udHJpYnV0ZSBhcm91bmQgNTAlIG9mIHRoZSB2b2x1bWVzLiAgIFgtRmFjdG9yOiBpT1MgYWxsb3dzIHlvdSB0byBzdG9yZSBtb3JlICAgdGhhbiBvbmUgZS1TSU0gb24geW91ciBpUGhvbmUuIGlQaG9uZSBYUywgICBpUGhvbmUgWFMgTWF4LCBpUGhvbmUgWFIsIGFuZCBsYXRlciBmZWF0dXJlICAgRHVhbCBTSU0gd2l0aCBhIE5hbm8tU0lNIGFuZCBhbiBlLVNJTS4gICBZb3UgY2FuIHN0b3JlIG1vcmUgdGhhbiBvbmUgZS1TSU0gb24geW91ciAgIGlQaG9uZSwgYnV0IHlvdSBjYW4gdXNlIG9ubHkgb25lIGF0IGEgdGltZS4gICBTb3VyY2U6ICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlIGVjaG5vbCAgb2d5IGVjaC1uZXdzLXRlY2hub2xvZ3kgZWNoLWluZGVwdGgtICB1bmRlcnN0YW5kaW5nLWVzaW1zLXRoZWlyLWFkdmFudGFnZXMtICBhbmQtZGlzYWR2YW50YWdlcy04MTUxMTAwLyAgIGh0dHBzOi8vd3d3LmluZGlhdG9kYXkuaW4vaW5mb3JtYXRpb24vc3RvICByeS93aGF0LWlzLWFuLWVzaW0tYWxsLXlvdS1uZWVkLXRvLWtub3ctICAxNzAzMDQzLTIwMjAtMDctMjIgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vaW5kICB1c3RyeSBlbGVjb20gZWxlY29tLW5ld3MgZWxjb3MtICBoYW5kc2V0LXBsYXllcnMtc3Bhci1vdmVyLWUtc2ltLWluLSAgc21hcnRwaG9uZXMtb3Zlci1ycy0gIDEwMDAwL2FydGljbGVzaG93LzkzNDgxMzYyLmNtcz9mcm9tPW0gIGRyICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 and 3 only   ",
        "option3" : "  1 and 2 only ",
        "option4" : " All of the above   "
      }
    },
    {
      "index" : 96,
      "question" : " Consider the following statements:  1.  Co-factors are bound to the  enzyme to make it catalytically  active.  2.  The protein portion of the enzymes  is called the co-enzyme.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk2",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEVuenltZXMgYXJlICAgY29tcG9zZWQgb2Ygb25lIG9yIHNldmVyYWwgcG9seXBlcHRpZGUgICBjaGFpbnMuIEhvd2V2ZXIsIHRoZXJlIGFyZSBhIG51bWJlciBvZiAgIGNhc2VzIGluIHdoaWNoIG5vbi1wcm90ZWluIGNvbnN0aXR1ZW50cyAgIGNhbGxlZCBjb2ZhY3RvcnMgYXJlIGJvdW5kIHRvIHRoZSBlbnp5bWUgICB0byBtYWtlIHRoZSBlbnp5bWUgY2F0YWx5dGljYWxseSBhY3RpdmUuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHByb3RlaW4gICBwb3J0aW9uIG9mIHRoZSBlbnp5bWVzIGlzIGNhbGxlZCB0aGUgICBhcG9lbnp5bWUuIFRocmVlIGtpbmRzIG9mIGNvZmFjdG9ycyBtYXkgYmUgICBpZGVudGlmaWVkOiBwcm9zdGhldGljIGdyb3VwcywgY28tZW56eW1lcyAgIGFuZCBtZXRhbCBpb25zLiAgIENvLWVuenltZXMgYXJlIGFsc28gb3JnYW5pYyBjb21wb3VuZHMgYnV0ICAgdGhlaXIgYXNzb2NpYXRpb24gd2l0aCB0aGUgYXBvZW56eW1lIGlzIG9ubHkgICB0cmFuc2llbnQsIHVzdWFsbHkgb2NjdXJyaW5nIGR1cmluZyB0aGUgICBjb3Vyc2Ugb2YgY2F0YWx5c2lzLiBGdXJ0aGVybW9yZSwgY28tICBlbnp5bWVzIHNlcnZlIGFzIGNvLWZhY3RvcnMgaW4gYSBudW1iZXIgb2YgICBkaWZmZXJlbnQgZW56eW1lIGNhdGFseXplZCByZWFjdGlvbnMuICAgIFRoZSBlc3NlbnRpYWwgY2hlbWljYWwgY29tcG9uZW50cyBvZiBtYW55ICAgY29lbnp5bWVzIGFyZSB2aXRhbWlucywgZS5nLiwgY29lbnp5bWUgICBuaWNvdGluYW1pZGUgYWRlbmluZSBkaW51Y2xlb3RpZGUgKE5BRCkgICBhbmQgTkFEUCBjb250YWluIHRoZSB2aXRhbWluIG5pYWNpbi4gICBYLUZhY3RvcjogICDvgrcgUHJvc3RoZXRpYyBncm91cHMgYXJlIG9yZ2FuaWMgY29tcG91bmRzICAgYW5kIGFyZSBkaXN0aW5ndWlzaGVkIGZyb20gb3RoZXIgICBjb2ZhY3RvcnMgaW4gdGhhdCB0aGV5IGFyZSB0aWdodGx5IGJvdW5kIHRvICAgdGhlIGFwb2VuenltZS4gICDvgrcgQSBudW1iZXIgb2YgZW56eW1lcyByZXF1aXJlIG1ldGFsIGlvbnMgICBmb3IgdGhlaXIgYWN0aXZpdHkgd2hpY2ggZm9ybSBjb29yZGluYXRpb24gICBib25kcy4gICDvgrcgQ2F0YWx5dGljIGFjdGl2aXR5IGlzIGxvc3Qgd2hlbiB0aGUgY28tICBmYWN0b3IgaXMgcmVtb3ZlZCBmcm9tIHRoZSBlbnp5bWUgd2hpY2ggICB0ZXN0aWZpZXMgdGhhdCB0aGV5IHBsYXkgYSBjcnVjaWFsIHJvbGUgaW4gdGhlICAgY2F0YWx5dGljIGFjdGl2aXR5IG9mIHRoZSBlbnp5bWUuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2tlYm8xPTkgIC0yMiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2  ",
        "option4" : "  Neither 1 nor 2    "
      }
    },
    {
      "index" : 97,
      "question" : " The term 'Dobson units' (DU)  sometimes seen in news is-  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk3",
      "description" : "IEV4cGxhbmF0aW9uOiAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgVEVTVCAtIDkwMDggKCApICAgIHd3dy4gICAgdC5tZS8gIFBhICBnNiAgMCAgIE9wdGlvbiAoYSkgaXMgY29ycmVjdDogVGhlIERvYnNvbiBVbml0IGlzICAgdGhlIG1vc3QgY29tbW9uIHVuaXQgZm9yIG1lYXN1cmluZyAgIG96b25lIGNvbmNlbnRyYXRpb24uIE9uZSBEb2Jzb24gVW5pdCBpcyAgIHRoZSBudW1iZXIgb2YgbW9sZWN1bGVzIG9mIG96b25lIHRoYXQgd291bGQgICBiZSByZXF1aXJlZCB0byBjcmVhdGUgYSBsYXllciBvZiBwdXJlIG96b25lICAgMC4wMSBtaWxsaW1ldGVycyB0aGljayBhdCBhIHRlbXBlcmF0dXJlIG9mIDAgICBkZWdyZWVzIENlbHNpdXMgYW5kIGEgcHJlc3N1cmUgb2YgMSAgIGF0bW9zcGhlcmUgKHRoZSBhaXIgcHJlc3N1cmUgYXQgdGhlIHN1cmZhY2UgICBvZiB0aGUgRWFydGgpLiAgICAgT3pvbmUgaXMgZm91bmQgaW4gdGhlIHVwcGVyIHBhcnQgb2YgdGhlICAgYXRtb3NwaGVyZSBjYWxsZWQgdGhlIHN0cmF0b3NwaGVyZSwgYW5kIGl0ICAgYWN0cyBhcyBhIHNoaWVsZCBhYnNvcmJpbmcgdWx0cmF2aW9sZXQgICByYWRpYXRpb24gZnJvbSB0aGUgc3VuLiAgICBVViByYXlzIGFyZSBoaWdobHkgaW5qdXJpb3VzIHRvIGxpdmluZyAgIG9yZ2FuaXNtcyBzaW5jZSBETkEgYW5kIHByb3RlaW5zIG9mIGxpdmluZyAgIG9yZ2FuaXNtcyBwcmVmZXJlbnRpYWxseSBhYnNvcmIgVVYgcmF5cywgICBhbmQgaXRzIGhpZ2ggZW5lcmd5IGJyZWFrcyB0aGUgY2hlbWljYWwgICBib25kcyB3aXRoaW4gdGhlc2UgbW9sZWN1bGVzLiBUaGUgICB0aGlja25lc3Mgb2YgdGhlIG96b25lIGluIGEgY29sdW1uIG9mIGFpciAgIGZyb20gdGhlIGdyb3VuZCB0byB0aGUgdG9wIG9mIHRoZSAgIGF0bW9zcGhlcmUgaXMgbWVhc3VyZWQgaW4gdGVybXMgb2YgICBEb2Jzb24gdW5pdHMgKERVKS4gICBYLUZhY3RvcjogICAg74K3IFJlY29nbmlzaW5nIHRoZSBzZXJpb3VzbmVzcyBvZiBvem9uZSAgIGRlcGxldGlvbiwgYW4gaW50ZXJuYXRpb25hbCB0cmVhdHksIGtub3duICAgYXMgdGhlIE1vbnRyZWFsIFByb3RvY29sLCB3YXMgc2lnbmVkIGF0ICAgTW9udHJlYWwgKENhbmFkYSkgaW4gMTk4NyB0byBjb250cm9sIHRoZSAgIGVtaXNzaW9uIG9mIG96b25lIGRlcGxldGluZyBzdWJzdGFuY2VzLiAgICDvgrcgS2lnYWxpIGlzIGEgZ2xvYmFsIGFncmVlbWVudCB0byBwaGFzZSAgIGRvd24gcG90ZW50IGNsaW1hdGUgcG9sbHV0YW50cyBrbm93biBhcyAgIGh5ZHJvZmx1b3JvY2FyYm9ucyAoSEZDcykgYW5kIHJhdGlmeWluZyAgIGl0IGlzIGEgYmlnIHdpbiBpbiB0aGUgY2xpbWF0ZSBmaWdodC4gICAg74K3IFRoZSBjbGltYXRlIGJlbmVmaXRzIG9mIHBoYXNpbmcgZG93biAgIEhGQ3MgYXJlIGh1Z2UuIEhGQ3MgYXJlIHVzZWQgaW4gYWlyICAgY29uZGl0aW9uaW5nIHVuaXRzLCByZWZyaWdlcmF0b3JzIGFuZCAgIG90aGVyIGVxdWlwbWVudCwgYW5kIGFyZSB0aGUgZmFzdGVzdCAgIGdyb3dpbmcgY2xpbWF0ZSBwb2xsdXRhbnRzLiAgIFNvdXJjZTogICBodHRwczovL296b25ld2F0Y2guZ3NmYy5uYXNhLmdvdi9mYWN0cy9kbyAgYnNvbi5odG1sICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/bGVibzE9MSAgNi0xNiAgIGh0dHBzOi8vd3d3Lm5yZGMub3JnL2V4cGVydHMvY2hyaXN0aW5hLSAgdGhlb2RvcmlkaS91cy1qb2lucy1jcnVjaWFsLWtpZ2FsaS0gIGFncmVlbWVudC1waGFzaW5nLWRvd24taGZjcyAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  A unit to measure ozone   concentration.  ",
        "option2" : "  Sedimentation coefficient of   ribosomes.  ",
        "option3" : "  Unit of soil salinity deposited on   the Earth's surface.  ",
        "option4" : "  Radioactive decay of an unstable   atomic nucleus.   "
      }
    },
    {
      "index" : 98,
      "question" : "With reference to Biodynamic  agriculture (BDA), consider the  following statements:  1.  It works on the relationship  between plant growths and cosmic  rhythms.  2. BDA farming in India mainly  adopted to cultivate millets,  cereals and oil seeds.  Which of the statements given above  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk4",
      "description" : "IEV4cGxhbmF0aW9uOiBJbiBCaW9keW5hbWljIEFncmljdWx0dXJlICAgKEJEQSkgdGhlIGZhcm0gaXMgY29uc2lkZXJlZCBhcyAgIGF1dG9ub21vdXMgYW5kIGxpdmluZyBvcmdhbmlzbSB0aGF0ICAgaW50ZXJhY3RzIHdpdGggdGhlIGVudmlyb25tZW50IHRvIGJ1aWxkICAgaGVhbHRoeSBhbmQgbGl2aW5nIHNvaWwgYW5kIHByb2R1Y2UgaGVhbHRoeSAgIGFuZCBudXRyaXRpb3VzIGZvb2QuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQkRBIHN0cmVzc2VzICAgc3Bpcml0dWFsaXR5IGFuZCBmb2xsb3dzIGEgY2FsZW5kYXIgZm9yICAgcGxhbnRpbmcgYW5kIHNvd2luZyBjcm9wcyBkZXBlbmRlbnQgb24gdGhlICAgbW9vbnMgYW5kIHN0YXJzIHBvc2l0aW9uLiBJdCB3b3JrcyBvbiB0aGUgICByZWxhdGlvbnNoaXAgYmV0d2VlbiBwbGFudCBncm93dGhzIGFuZCAgIGNvc21pYyByaHl0aG1zLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQkRBIGZhcm1pbmcgaW4gICBJbmRpYSBtYWlubHkgYWRvcHRlZCB0byBjdWx0aXZhdGUgaGVyYnMsICAgc3BpY2VzLCB0ZWEsIGFuZCBjb2ZmZWUuICAgWC1GYWN0b3I6IFRoZSBCaW9keW5hbWljIE1vdmVtZW50ICAgc3RhcnRlZCBpbiBJbmRpYSBpbiB0aGUgZWFybHkgICAxOTkwJ3MuIFQuRy5LLiBNZW5vbiwgRGlyZWN0b3Igb2YgICB0aGUgS2FzdHVyYmFncmFtIEtyaXNoaSBLc2hldGhyYSAoYW4gICBvcmdhbmljIGZhcm0gYW5kIGFzaHJhbSBuYW1lZCBhZnRlciAgIE1haGF0bWEgR2FuZGhpJ3Mgd2lmZSkgaW52aXRlZCBQZXRlciAgIFByb2N0b3IsIGEgY29uc3VsdGFudCBvZiB0aGUgTmV3IFplYWxhbmQgICBCaW9keW5hbWljIEFzc29jaWF0aW9uLCBpbiAxOTkzLCB0byB2aXNpdCAgIEluZG9yZSBhbmQgY29uZHVjdCBhIHdvcmtzaG9wIG9uIHRoZSBiaW8tICBkeW5hbWljIG1ldGhvZC4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cuY2Vldy5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL2JpICBvZHluYW1pYy1mYXJtaW5nLnBkZiAgIGh0dHBzOi8vd3d3LmJpb2R5bmFtaWNzLmluL291ci1zdG9yeSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  Both 1 and 2 ",
        "option4" : "  Neither 1 nor 2   "
      }
    },
    {
      "index" : 99,
      "question" : " With reference to RNA Interference  (RNAi), which of the following  statements is/are correct?  1.  It refers to post-transcriptional  gene silencing (PTGS).  2.  It mediates resistance only to  exogenous pathogenic nucleic  acids.  3.  It takes place in all eukaryotic  organisms providing cellular  defence.  Select the correct answer using the  code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk5",
      "description" : "IEV4cGxhbmF0aW9uOiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFJOQSBpbnRlcmZlcmVuY2UgICAoUk5BaSkgb3IgUG9zdC1UcmFuc2NyaXB0aW9uYWwgR2VuZSAgIFNpbGVuY2luZyAoUFRHUykgaXMgYSBjb25zZXJ2ZWQgYmlvbG9naWNhbCAgIHJlc3BvbnNlIHRvIGRvdWJsZS1zdHJhbmRlZCBSTkEuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJdCBtZWRpYXRlcyAgIHJlc2lzdGFuY2UgdG8gYm90aCBlbmRvZ2Vub3VzIHBhcmFzaXRpYyAgIGFuZCBleG9nZW5vdXMgcGF0aG9nZW5pYyBudWNsZWljIGFjaWRzLCAgIGFuZCByZWd1bGF0ZXMgdGhlIGV4cHJlc3Npb24gb2YgcHJvdGVpbi0gIGNvZGluZyBnZW5lcy4gVGhpcyBuYXR1cmFsIG1lY2hhbmlzbSBmb3IgICBzZXF1ZW5jZS1zcGVjaWZpYyBnZW5lIHNpbGVuY2luZyBwcm9taXNlcyB0byAgIHJldm9sdXRpb25pemUgZXhwZXJpbWVudGFsIGJpb2xvZ3kgYW5kIG1heSAgIGhhdmUgaW1wb3J0YW50IHByYWN0aWNhbCBhcHBsaWNhdGlvbnMgaW4gICBmdW5jdGlvbmFsIGdlbm9taWNzLCB0aGVyYXBldXRpYyAgIGludGVydmVudGlvbiwgYWdyaWN1bHR1cmUgYW5kIG90aGVyIGFyZWFzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJOQWkgdGFrZXMgcGxhY2UgICBpbiBhbGwgZXVrYXJ5b3RpYyBvcmdhbmlzbXMgYXMgYSBtZXRob2QgICBvZiBjZWxsdWxhciBkZWZlbnNlLiBUaGlzIG1ldGhvZCBpbnZvbHZlcyAgIHNpbGVuY2luZyBvZiBhIHNwZWNpZmljIG1STkEgZHVlIHRvIGEgICBjb21wbGVtZW50YXJ5IGRzUk5BIG1vbGVjdWxlIHRoYXQgYmluZHMgICB0byBhbmQgcHJldmVudHMgdHJhbnNsYXRpb24gb2YgdGhlIG1STkEgICAoc2lsZW5jaW5nKS4gVGhlIHNvdXJjZSBvZiB0aGlzICAgY29tcGxlbWVudGFyeSBSTkEgY291bGQgYmUgZnJvbSBhbiAgIGluZmVjdGlvbiBieSB2aXJ1c2VzIGhhdmluZyBSTkEgZ2Vub21lcyBvciAgIG1vYmlsZSBnZW5ldGljIGVsZW1lbnRzICh0cmFuc3Bvc29ucykgdGhhdCAgIHJlcGxpY2F0ZSB2aWEgYW4gUk5BIGludGVybWVkaWF0ZS4gICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgIFRFU1QgLSA5MDA4ICggKSAgICB3d3cuICAgIHQubWUvICBQYSAgZzYgIDEgICBYLUZhY3RvcjogICAg74K3IEdlbmUgc2lsZW5jaW5nIGlzICAgYW4gZXBpZ2VuZXRpYyBtb2RpZmljYXRpb24gb2YgZ2VuZSAgIGV4cHJlc3Npb24gbGVhZGluZyB0byBpbmFjdGl2YXRpb24gb2YgICBwcmV2aW91c2x5IGFjdGl2ZSBpbmRpdmlkdWFsIGdlbmVzIG9yICAgbGFyZ2VyIGNocm9tb3NvbWUgcmVnaW9ucy4gICAg74K3IEdlbmUgc2lsZW5jaW5nIGhhcyBldm9sdmVkIGRlZmVuY2UgICBtZWNoYW5pc21zIGFnYWluc3QgaW52YXNpdmUgbnVjbGVpYyAgIGFjaWRzLiAgIO+CtyBUcmFuc2NyaXB0aW9uYWwgZ2VuZSBzaWxlbmNpbmcgKFRHUykgYWN0cyAgIHRvIHByZXZlbnQgUk5BIHN5bnRoZXNpcyBhbmQgcG9zdC0gIHRyYW5zY3JpcHRpb25hbCBnZW5lIHNpbGVuY2luZyAoUFRHUykgYWN0cyAgIHRvIGRlZ3JhZGUgZXhpc3RpbmcgUk5BLiAgIO+CtyBNZWNoYW5pc21zIGludm9sdmVkIGluIGdlbmUgc2lsZW5jaW5nICAgYXJlIGFsc28gdXNlZCB0byByZWd1bGF0ZSBjb250cm9sbGVkICAgZXhwcmVzc2lvbiBvZiBlbmRvZ2Vub3VzIGdlbmVzLiAgIFNvdXJjZTogICBodHRwczovL3d3dy5uY2JpLm5sbS5uaWguZ292L3Byb2JlL2RvY3MgICBlY2hybmFpLyAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2xlYm8xPTEgIDItMTYgICBodHRwczovL3B1Ym1lZC5uY2JpLm5sbS5uaWguZ292LzEyMjExNjMgIDEvICAgaHR0cHM6Ly93d3cuc2NpZW5jZWRpcmVjdC5jb20gb3BpY3MvYWdyaSAgY3VsdHVyYWwtYW5kLWJpb2xvZ2ljYWwtc2NpZW5jZXMvZ2VuZS0gIHNpbGVuY2luZyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 only ",
        "option2" : "  2 only  ",
        "option3" : "  1 and 3 only ",
        "option4" : "  2 an 3 only   "
      }
    },
    {
      "index" : 100,
      "question" : " The technique called 'gel  electrophoresis' is used in:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEwMA==",
      "description" : "IEV4cGxhbmF0aW9uOiAgIE9wdGlvbiAoYykgaXMgY29ycmVjdDogU2VwYXJhdGlvbiBhbmQgICBpc29sYXRpb24gb2YgRE5BIGZyYWdtZW50czogICAgVGhlIGN1dHRpbmcgb2YgRE5BIGJ5IHJlc3RyaWN0aW9uICAgZW5kb251Y2xlYXNlcyByZXN1bHRzIGluIHRoZSBmcmFnbWVudHMgb2YgICBETkEuIFRoZXNlIGZyYWdtZW50cyBjYW4gYmUgc2VwYXJhdGVkICAgYnkgYSB0ZWNobmlxdWUga25vd24gYXMgZ2VsICAgZWxlY3Ryb3Bob3Jlc2lzLiBTaW5jZSBETkEgZnJhZ21lbnRzIGFyZSAgIG5lZ2F0aXZlbHkgY2hhcmdlZCBtb2xlY3VsZXMsIHRoZXkgY2FuIGJlICAgc2VwYXJhdGVkIGJ5IGZvcmNpbmcgdGhlbSB0byBtb3ZlIHRvd2FyZHMgICB0aGUgYW5vZGUgdW5kZXIgYW4gZWxlY3RyaWMgZmllbGQgdGhyb3VnaCBhICAgbWVkaXVtL21hdHJpeC4gICAgTm93YWRheXMgdGhlIG1vc3QgY29tbW9ubHkgdXNlZCBtYXRyaXggICBpcyBhZ2Fyb3NlIHdoaWNoIGlzIGEgbmF0dXJhbCBwb2x5bWVyICAgZXh0cmFjdGVkIGZyb20gc2VhIHdlZWRzLiBUaGUgRE5BICAgZnJhZ21lbnRzIHNlcGFyYXRlIChyZXNvbHZlKSBhY2NvcmRpbmcgdG8gICB0aGVpciBzaXplIHRocm91Z2ggc2lldmluZyBlZmZlY3QgcHJvdmlkZWQgYnkgICB0aGUgYWdhcm9zZSBnZWwuIEhlbmNlLCB0aGUgc21hbGxlciB0aGUgICBmcmFnbWVudCBzaXplLCB0aGUgZmFydGhlciBpdCBtb3Zlcy4gICBYLUZhY3RvcjogICAg74K3IEluIGEgbWV0aG9kIGtub3duIGFzIG1pY3JvLWluamVjdGlvbiwgICByZWNvbWJpbmFudCBETkEgaXMgZGlyZWN0bHkgaW5qZWN0ZWQgaW50byAgIHRoZSBudWNsZXVzIG9mIGFuIGFuaW1hbCBjZWxsLiAgICDvgrcgSW4gYW5vdGhlciBtZXRob2QsIHN1aXRhYmxlIGZvciBwbGFudHMsICAgY2VsbHMgYXJlIGJvbWJhcmRlZCB3aXRoIGhpZ2ggdmVsb2NpdHkgICBtaWNyby1wYXJ0aWNsZXMgb2YgZ29sZCBvciB0dW5nc3RlbiBjb2F0ZWQgICB3aXRoIEROQSBpbiBhIG1ldGhvZCBrbm93biBhcyBiaW9saXN0aWNzICAgb3IgZ2VuZSBndW4uICAgIO+CtyBCaW9saXN0aWNzIHVzZXMgJ2Rpc2FybWVkIHBhdGhvZ2VuJyAgIHZlY3RvcnMsIHdoaWNoIHdoZW4gYWxsb3dlZCB0byBpbmZlY3QgdGhlICAgY2VsbCwgdHJhbnNmZXIgdGhlIHJlY29tYmluYW50IEROQSBpbnRvICAgdGhlIGhvc3QuICAgU291cmNlOiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2xlYm8xPTEgIDEtMTYgICAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  Electroplating   ",
        "option2" : "  Extraction of metals  ",
        "option3" : "  Isolation of DNA fragments  ",
        "option4" : "  Fermentation of sugar                   \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
