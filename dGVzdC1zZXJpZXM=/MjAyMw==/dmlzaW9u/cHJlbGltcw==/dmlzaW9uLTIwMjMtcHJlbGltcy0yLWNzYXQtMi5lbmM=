{
  "testId" : "vision-2023-prelims-2-csat-2",
  "testType" : "csat",
  "fullFilePath" : "upsc-test-series/test-series/2023/vision/prelims/vision-2023-prelims-2-csat-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : " Find the ratio between the average bonus received by officers in years 2011 and 2014 with that received by employees in years 2005 and 2008. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEF2ZXJhZ2UgYm9udXMgcmVjZWl2ZWQgYnkgb2ZmaWNlcnMgaW4geWVhcnMgMjAxMSBhbmQgMjAxNCA9ICgzNSArIDMwKS8yID0gNjUvMiAgQXZlcmFnZSBib251cyByZWNlaXZlZCBieSBlbXBsb3llZXMgaW4geWVhcnMgMjAwNSBhbmQgMjAwOCA9ICgyNSArIDMwKS8yID0gNTUvMiAgUmVxdWlyZWQgcmF0aW8gPSAoNjUvMikgOiAoNTUvMikgPSA2NSA6IDU1ID0gMTMgOiAxMSAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 11 : 13 ",
        "option2" : " 13 : 11 ",
        "option3" : " 11 : 9 ",
        "option4" : " 6 : 11  "
      }
    },
    {
      "index" : 2,
      "question" : " The bonus received by officers and employees together in 2016 is what percentage more than the difference of the bonuses received by employees in 2005 and 2008? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEJvbnVzIHJlY2VpdmVkIGJ5IG9mZmljZXJzIGFuZCBlbXBsb3llZXMgdG9nZXRoZXIgaW4gMjAxNiA9ICgzMCArIDQwKSA9IDcwICBEaWZmZXJlbmNlIG9mIHRoZSBib251c2VzIHJlY2VpdmVkIGJ5IGVtcGxveWVlcyBpbiAyMDA1IGFuZCAyMDA4ID0gKDMwIC0gMjUpID0gNSAgUmVxdWlyZWQgcGVyY2VudGFnZSA9IFsoNzAgLSA1KS81XSDDlyAxMDAgPSAxMzAwJSAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10% ",
        "option2" : " 65% ",
        "option3" : " 120% ",
        "option4" : " 1300% "
      }
    },
    {
      "index" : 3,
      "question" : " A group of 15 non-vegetarian people and 10 vegetarian people have an average weight of 38.4 kg. If non-vegetarian people have an average weight of 40 kg, then what must be the average weight of the vegetarian people? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEF2ZXJhZ2Ugd2VpZ2h0IG9mIGFsbCAodmVnICYgbm9uLXZlZykgcGVvcGxlID0gMzguNCBrZyAgQXZlcmFnZSB3ZWlnaHQgb2Ygbm9uLXZlZ2V0YXJpYW4gcGVvcGxlID0gNDAga2cgIE51bWJlciBvZiB2ZWdldGFyaWFuIHBlb3BsZSA9IDEwICBOdW1iZXIgb2Ygbm9uLXZlZ2V0YXJpYW4gcGVvcGxlID0gMTUgIFRvdGFsIG51bWJlciBvZiBwZW9wbGUgPSAxNSArIDEwID0gMjUgIFRvdGFsIHdlaWdodCBvZiAyNSBwZW9wbGUgPSAzOC40IMOXIDI1ID0gOTYwIGtnICBUb3RhbCB3ZWlnaHQgb2Ygbm9uLXZlZ2V0YXJpYW4gcGVvcGxlID0gNDAgw5cgMTUgPSA2MDAga2cgIFNvLCBUb3RhbCB3ZWlnaHQgb2YgdmVnZXRhcmlhbiBwZW9wbGUgPSA5NjAgLSA2MDAgPSAzNjAga2cgIFRoZXJlZm9yZSwgQXZlcmFnZSB3ZWlnaHQgb2YgdmVnZXRhcmlhbiBwZW9wbGUgPSBUb3RhbCB3ZWlnaHQgb2YgdmVnZXRhcmlhbiBwZW9wbGUgLyBOdW1iZXIgb2YgIHZlZ2V0YXJpYW4gcGVvcGxlID0gMzYwLzEwID0gMzYga2cgIFNvLCBhdmVyYWdlIHdlaWdodCBvZiB2ZWdldGFyaWFuIHBlb3BsZSA9IDM2IGtnICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 44 kg ",
        "option2" : " 36 kg ",
        "option3" : " 26 kg ",
        "option4" : " 24 kg  "
      }
    },
    {
      "index" : 4,
      "question" : " A person sold 64 kg of rice partially at 7% loss and the rest at 9% profit. He suffered 2% loss on the whole. What quantity of rice was sold at profit?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEFwcGx5aW5nIEFsbGlnYXRpb24gcnVsZTogICBSYXRpbyBvZiB0aGUgcXVhbnRpdHkgb2YgcmljZSBzb2xkIGF0IDklIHByb2ZpdCBhbmQgNyUgbG9zcyA9IDUgOiAxMSAgU28sIFF1YW50aXR5IG9mIHJpY2Ugc29sZCBhdCBwcm9maXQgPSA2NCDDlyBbNS8oNSArIDExKV0gPSAyMCBrZyAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 24 kg ",
        "option2" : " 11 kg ",
        "option3" : " 44 kg ",
        "option4" : " 20 kg  "
      }
    },
    {
      "index" : 5,
      "question" : " Sonali leaves Delhi at 4 pm by a train and reaches Pune at 10 pm. Priyanka leaves Pune at 6 pm by a train and reaches Delhi at 11 pm on the same day. What is the time when they crossed each other?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IExldCBkaXN0YW5jZSBiZXR3ZWVuIERlbGhpIGFuZCBQdW5lIGJlIEEga20uICBUaW1lIHRha2VuIGJ5IFNvbmFsaSB0byByZWFjaCBQdW5lID0gMTAgLSA0ID0gNiBob3VycyAgIFRpbWUgdGFrZW4gYnkgUHJpeWFua2EgdG8gcmVhY2ggRGVsaGkgPSAxMSAtIDYgPSA1IGhvdXJzICAgU3BlZWQgb2YgdHJhaW4gd2hpY2ggbGVhdmVzIERlbGhpID0gQS82IGttL2hyICBBbmQgU3BlZWQgb2YgdHJhaW4gd2hpY2ggbGVhdmVzIFB1bmUgPSBBLzUga20vaHIgIFJlbGF0aXZlIHNwZWVkID0gQS82ICsgQS81ID0gMTFBLzMwIGttL2hyICBEaXN0YW5jZSBjb3ZlcmVkIGJ5IHRyYWluIHdoaWNoIGxlYXZlcyBEZWxoaSBpbiAyIGhvdXJzID0gMiDDlyBBLzYgPSBBLzMga20gIERpc3RhbmNlIGxlZnQgdG8gYmUgY292ZXJlZCA9IEEgLSBBLzMgPSAyQS8zIGttICBUaW1lIHRha2VuIGJ5IGJvdGggdGhlIHRyYWlucyB0byBjcm9zcyBlYWNoIG90aGVyID0gRGlzdGFuY2UgbGVmdCB0byBiZSBjb3ZlcmVkLyBSZWxhdGl2ZSBzcGVlZCA9ICAoMkEvMykvKDExQS8zMCkgPSAyMC8xMSBob3VycyA9IDEgaG91ciA0OSBtaW51dGVzICBSZXF1aXJlZCB0aW1lID0gNiBwbSArIDEgaG91ciA0OSBtaW51dGVzID0gNzogNDkgcG0gIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7:49 pm ",
        "option2" : " 7:20 pm ",
        "option3" : " 6:50 pm ",
        "option4" : " 8:20 pm  "
      }
    },
    {
      "index" : 6,
      "question" : " A company X sold apple juice at cost price by mixing water in it and gained a profit of 25%. What must be the ratio of juice and water in the mixture? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFdlIGtub3cgdGhhdCwgaWYgd2UgbWl4IGFueSBsaXF1aWQgd2l0aCB3YXRlciBhbmQgc2VsbCBpdCBhdCBjb3N0IHByaWNlIHRvIGdhaW4gYSBwcm9maXQgb2YgeCUsIHRoZW4gdGhlIHJhdGlvICBvZiBsaXF1aWQgYW5kIHdhdGVyIGlzICgxMDA6eCkuICBIZXJlLCB4ID0gMjUlICDiiLQgUmVxdWlyZWQgcmF0aW8gPSAxMDA6MjUgPSA0OjEgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlciAuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1:5 ",
        "option2" : " 3:2 ",
        "option3" : " 4:1 ",
        "option4" : " 2:3           3                                                                                                                                                             "
      }
    },
    {
      "index" : 7,
      "question" : " What will be the average of 252, 262, 272,...........402 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IFdlIGhhdmUsIDI1MiwgMjYyLCAyNzIsIC4uLi4uLi4uLi4uLi4uLi4uLjQwMiAgV2UgY2FuIGFsc28gd3JpdGUgaXQgYXMsICgxMisyMiszMisuLi4uLi4uKyA0MDIpIC0gKDEyKzIyKzMyKy4uLi4uLi4rIDI0MikgIFdlIGtub3cgdGhhdCwgU3VtIG9mIHRoZSBzcXVhcmVzIG9mIGZpcnN0ICduJyBuYXR1cmFsIG51bWJlcnMgPSBuIChuKzEpICgybisxKS82ICBTbywgKDEyKzIyKzMyKy4uLi4uLi4rIDQwMikgLSAoMTIrMjIrMzIrLi4uLi4uLisgMjQyKSA9IHs0MCAoNDArMSkgKDLDlzQwKzEpLzZ9IC0gezI0ICgyNCsxKSAoMsOXMjQrMSkvNn0gID0geyg0MCDDlyA0MSDDlyA4MSkvNn0gLSB7MjQgw5cgMjUgw5cgNDkvNn0gID0gMjIxNDAgLSA0OTAwICA9IDE3MjQwICBOdW1iZXIgb2YgdGVybXMgZnJvbSAyNSB0byA0MCA9IDE2ICAg4oi0IFJlcXVpcmVkIGF2ZXJhZ2UgPSAxNzI0MC8xNiA9IDEwNzcuNSAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1077.5 ",
        "option2" : " 1090.5 ",
        "option3" : " 1067.5 ",
        "option4" : " 1125.5   Directions for the following 3 (three) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 8,
      "question" : " What does the author mean by 'call to action'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IFRoZSBwYXNzYWdlIGJlZ2lucyBieSBoaWdobGlnaHRpbmcgdGhhdCBwb3ZlcnR5IGlzIGh1bmdlci4gUG92ZXJ0eSBpcyBhIGxhY2sgb2Ygc2hlbHRlci4gUG92ZXJ0eSBpcyBiZWluZyAgc2ljayBhbmQgbm90IGJlaW5nIGFibGUgdG8gc2VlIGEgZG9jdG9yLi4uIFRoZSBhdXRob3IsIHRoZW4gbWVudGlvbnMgdGhhdCBwb3ZlcnR5IGlzIGEgY2FsbCB0byBhY3Rpb24uIFRoZXJlICBpcyBhbiBpbXBsaWNpdCBzdWdnZXN0aW9uIHRvIHRoZSBkaWZmZXJlbnQgc3Rha2Vob2xkZXJzIHRvIGFjdCwgYmVjYXVzZSB0aGUgaXNzdWUgb2YgcG92ZXJ0eSBjYW4gYmUgIG92ZXJjb21lLiBMZXQgdXMgY29uc2lkZXIgdGhlIGFuc3dlciBvcHRpb25zIG5vdy4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkaXNjdXNzZXMgdGhlIGNvbXBsZXggbmF0dXJlIG9mIHBvdmVydHkuIFRoZSBkaWZmZXJlbnQgYXNwZWN0cyBvZiAgcG92ZXJ0eSB2aXouIGh1bmdlciwgbGFjayBvZiBzaGVsdGVyLCBmZWFyIG9mIGZ1dHVyZSBldGMuIGFyZSBkaXNjdXNzZWQuIFRoZSBhdXRob3IgYWxzbyBzYXlzIHRoYXQgdGhlcmUgaXMgbm8gIHNpbmdsZSBjYXVzZSBvZiBwb3ZlcnR5LiAgSG93ZXZlciwgdGhlcmUgaXMgbm8gaW5kaWNhdGlvbiB0b3dhcmRzIHRoZSBkZWZpbml0aW9uIG9mIHBvdmVydHkgbGluZS4gVGhlcmVmb3JlLCAgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIGluY29ycmVjdC4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgcmVzdHJpY3RzIGl0c2VsZiB0byBxdWFsaXRhdGl2ZSBhc3BlY3RzIG9mIHBvdmVydHkuIEl0IGRvZXMgbm90IGV2ZW4gIGRlbHZlIGludG8gdGhlIHF1YW50aXRhdGl2ZSBhc3BlY3RzIGxpa2UgZXN0aW1hdGlvbiBvZiBwb3ZlcnR5LiBSZWZlcmVuY2UgdG8gZGVtb2NyYWN5IC0gc3Vic3RhbnRpdmUgb3IgIHByb2NlZHVyYWwgLSBpcyBub3QgZXZlbiByZW1vdGVseSBtYWRlLiBIZW5jZSwgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIGluY29ycmVjdC4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZG9lcyBtYWtlIGEgbWVudGlvbiBvZiBkaWZmZXJlbmNlcyBiZXR3ZWVuIHBvdmVydHkgaW4gZGV2ZWxvcGVkICBhbmQgbGVzcyBkZXZlbG9wZWQgbmF0aW9ucyBhbmQgd2l0aGluIHRoZSBzYW1lIGNvdW50cnkuIEhvd2V2ZXIsIHRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBhdXRob3IgaGFzICBtZW50aW9uZWQgJ2NhbGwgdG8gYWN0aW9uJyBpcyBub3QgbGltaXRlZCB0byB0aGUgaW5jb21lIGRpdmlkZSBiZXR3ZWVuIHRoZSByaWNoIGFuZCBwb29yIGNvdW50cmllcy4gIEl0IGlzICBtdWNoIG1vcmUgZW5jb21wYXNzaW5nIGdpdmVuIHRoZSBtdWx0aS1kaW1lbnNpb25hbCBuYXR1cmUgb2YgcG92ZXJ0eSBvdXRsaW5lZCBpbiB0aGUgaW5pdGlhbCBsaW5lcyBvZiB0aGUgIHBhc3NhZ2UuICAgICAgICAzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnU28gcG92ZXJ0eSBpcyBhIGNhbGwgdG8gYWN0aW9uIC0tIGZvciB0aGUgcG9vciBhbmQgdGhlICB3ZWFsdGh5IGFsaWtlIC0tIGEgY2FsbCB0byBjaGFuZ2UgdGhlIHdvcmxkIHNvIHRoYXQgbWFueSBtb3JlIG1heSBoYXZlIGVub3VnaCB0byBlYXQsIGFkZXF1YXRlIHNoZWx0ZXIsICBhY2Nlc3MgdG8gZWR1Y2F0aW9uIGFuZCBoZWFsdGgsIHByb3RlY3Rpb24gZnJvbSB2aW9sZW5jZSwgYW5kIGEgdm9pY2UgaW4gd2hhdCBoYXBwZW5zIGluIHRoZWlyICBjb21tdW5pdGllcy4nICBUaGUgc3RhdGVtZW50IGNsZWFybHkgZGVhbHMgd2l0aCBtYXRlcmlhbCBhbmQgbm9uLW1hdGVyaWFsIGRlcHJpdmF0aW9ucyBpbiBodW1hbiBsaWZlIHRoYXQgIG5lZWQgdG8gYmUgZXJhZGljYXRlZC4gTGFjayBvZiBmb29kLCBzaGVsdGVyLCBlZHVjYXRpb24gZXRjLiBjYW4gYmUgdGhlIG1hdGVyaWFsIGRpbWVuc2lvbnM7IGFuZCB0aGUgZmVhciBvZiAgZnV0dXJlLCBsYWNrIG9mIHZvaWNlIGluIGRlY2lzaW9uIG1ha2luZyBjYW4gYmUgdGhlIG5vbi1tYXRlcmlhbCBkaW1lbnNpb25zLiBUaGlzIGFuc3dlciBvcHRpb24gYmVzdCAgY2FwdHVyZXMgdGhlIGludGVudCBvZiAnY2FsbCBvZiBhY3Rpb24uJyAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Defining the poverty line in the broadest  manner. ",
        "option2" : " Bringing substantive democracy, not just  procedural democracy. ",
        "option3" : " Reduce the income divide between rich and  poor countries. ",
        "option4" : " Eradicating material and non-material  deprivations in a human life.  "
      }
    },
    {
      "index" : 9,
      "question" : " Why, according to the author, is poverty a complex issue? 1. Inter-country and Intra-country variations in dimensions of poverty  2. It requires everyone's attention. 3. Poverty is more, much more than just not having enough money. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdQb3ZlcnR5IHZhcmllcyBjb25zaWRlcmFibHkgZGVwZW5kaW5nIG9uIHRoZSBzaXR1YXRpb24uICBGZWVsaW5nIHBvb3IgaW4gQ2FuYWRhIGlzIGRpZmZlcmVudCBmcm9tIGxpdmluZyBpbiBwb3ZlcnR5IGluIFJ1c3NpYSBvciBaaW1iYWJ3ZS4gIFRoZSBkaWZmZXJlbmNlcyAgYmV0d2VlbiByaWNoIGFuZCBwb29yIHdpdGhpbiB0aGUgYm9yZGVycyBvZiBhIGNvdW50cnkgY2FuIGFsc28gYmUgZ3JlYXQuJyBUaGVzZSBzdGF0ZW1lbnRzIGNsZWFybHkgIGhpZ2hsaWdodCBpbnRlci1jb3VudHJ5IGFuZCBpbnRyYS1jb3VudHJ5IHZhcmlhdGlvbnMgaW4gZGltZW5zaW9ucyBvZiBwb3ZlcnR5LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGRvZXMgbWVudGlvbiwgJ05vIG1hdHRlciBob3cgcG92ZXJ0eSBpcyBkZWZpbmVkLCBpdCBjYW4gYmUgYWdyZWVkICB0aGF0IGl0IGlzIGFuIGlzc3VlIHRoYXQgcmVxdWlyZXMgZXZlcnlvbmUncyBhdHRlbnRpb24uJyBIb3dldmVyLCBpdCBpcyBub3QgcmVsYXRlZCB0byB0aGUgY29tcGxleGl0eSBvZiAgcG92ZXJ0eS4gVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgaW5jb3JyZWN0LiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBjbGVhcmx5IG1lbnRpb25zICdQb3ZlcnR5IGlzIGh1bmdlci4gUG92ZXJ0eSBpcyBhIGxhY2sgb2Ygc2hlbHRlci4gIFBvdmVydHkgaXMgYmVpbmcgc2ljayBhbmQgbm90IGJlaW5nIGFibGUgdG8gc2VlIGEgZG9jdG9yLiBQb3ZlcnR5IGlzIG5vdCBoYXZpbmcgYWNjZXNzIHRvIHNjaG9vbCBhbmQgbm90ICBrbm93aW5nIGhvdyB0byByZWFkLiBQb3ZlcnR5IGlzIG5vdCBoYXZpbmcgYSBqb2IsIGZlYXIgZm9yIHRoZSBmdXR1cmUsIGFuZCBsaXZpbmcgb25lIGRheSBhdCBhIHRpbWUuIFBvdmVydHkgIGhhcyBtYW55IGZhY2VzLCBjaGFuZ2luZyBmcm9tIHBsYWNlIHRvIHBsYWNlIGFuZCBhY3Jvc3MgdGltZSwgYW5kIGhhcyBiZWVuIGRlc2NyaWJlZCBpbiBtYW55IHdheXMuJyBJdCAgaW1wbGllcyB0aGF0IHBvdmVydHkgaXMgbm90IHNpbXBseSBhYm91dCBub3QgaGF2aW5nIGVub3VnaCBtb25leSwgYnV0IGhhcyBzZXZlcmFsIG90aGVyIGVsZW1lbnRzIGxpa2UgIGxhY2sgb2YgZm9vZCwgc2hlbHRlciwgc2VjdXJpdHkgZnJvbSB2aW9sZW5jZSwgZXRjLiBUaGVyZWZvcmUsIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 and 3 only ",
        "option2" : " 1, 2 and 3 ",
        "option3" : " 3 only ",
        "option4" : " 1 and 3 only "
      }
    },
    {
      "index" : 10,
      "question" : " Which of the following is the most logical and rational inference that can be made from the above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBUaGUgZmlyc3QgbGluZSBvZiB0aGUgcGFzc2FnZSBzdWdnZXN0cywgJ1dpdGhpbiB0aGUgZnJlZWRvbSB0byBjaG9vc2UgYXJlIHRob3NlICBlbmRvd21lbnRzIHRoYXQgbWFrZSB1cyB1bmlxdWVseSBodW1hbnMnLCBhbmQgYXMgcGVyIHRoZSBmaXJzdCBsaW5lIG9mIHNlY29uZCBwYXJhZ3JhcGggJ0V2ZW4gdGhlIG1vc3QgIGludGVsbGlnZW50IGFuaW1hbHMgaGF2ZSBub25lIG9mIHRoZXNlIGVuZG93bWVudHMnLiBUaGVzZSBsaW5lcyBtYWtlIGl0IGNsZWFyIHRoYXQgYW5pbWFscyBjYW4ndCBleGVyY2lzZSAgZnJlZWRvbSBvZiBjaG9pY2UuIFRob3VnaCB0aGV5IGNhbiBiZSB0cmFpbmVkIHRvIGJlIHJlc3BvbnNpYmxlLCB0aGV5IGNhbid0IGNoYW5nZSB0aGVpciBwcm9ncmFtbWluZyAgd2hpY2ggYWdhaW4gbWVhbnMgdGhhdCB0aGV5IGFyZSBpbmNhcGFibGUgb2YgZXhlcmNpc2luZyBmcmVlZG9tIG9mIGNob2ljZS4gICBPcHRpb24gKGIpIGlzIGNvcnJlY3Q6IEl0IGlzIGNsZWFyIGZyb20gdGhlIGxpbmUsICd0aGV5IGFyZSBwcm9ncmFtbWVkIGJ5IHRoZWlyIGluc3RpbmN0IGFuZC9vciB0cmFpbmluZycsICB3aGljaCBtZWFucyB0aGF0IHdoaWxlIGh1bWFucyB1c2Ugc2VsZi1hd2FyZW5lc3MsIGltYWdpbmF0aW9uLCBjb25zY2llbmNlIGFuZCBpbmRlcGVuZGVudCB3aWxsIHRvICBtYWtlIGNob2ljZXMsIGFuaW1hbHMgaGF2ZSBub25lLiBTbyB0aGV5IG1ha2UgY2hvaWNlcyBhcyBwZXIgaW5zdGluY3QgYW5kL29yIHRyYWluaW5nLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0OiBUaGUgcGFzc2FnZSBjbGVhcmx5IG1lbnRpb25zLCAnVGhleSBjYW4gYmUgdHJhaW5lZCB0byBiZSByZXNwb25zaWJsZSwgYnV0IHRoZXkgIGNhbid0IHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIHRoYXQgdHJhaW5pbmcnIGFuZCB0aGV5IGRvbid0IGhhdmUgdGhlIGZyZWVkb20gdG8gY2hvb3NlLCB3aGljaCBtYWtlcyBpdCAgY2xlYXIgdGhhdCB0aGV5IGNhbid0IHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIHRoZWlyIGlubm92YXRpdmUgYWN0aW9ucywgYWx0aG91Z2ggdGhleSBjYW4gYmUgbWFkZSByZXNwb25zaWJsZSAgZW5vdWdoIGZvciBjZXJ0YWluIGFjdGlvbnMgYnkgdHJhaW5pbmcuICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgcGFzc2FnZSwgYW5pbWFscyBjYW4gYmUgdHJhaW5lZCB0byBiZSByZXNwb25zaWJsZSwgYnV0IG5vdCB0byBiZSAgaW50ZWxsaWdlbnQgb3IgYXdhcmUuIFRoZSBkZWdyZWUgb2YgaW50ZWxsaWdlbmNlIGluIGFuaW1hbHMgaXMgaW50cmluc2ljIG9yIGRlcGVuZGVudCBvbiB0aGVpciBzcGVjaWVzLiBTZWxmLSBhd2FyZW5lc3MgaXMgc29tZXRoaW5nIHRoYXQgYW5pbWFscyBhcmUgaW5jYXBhYmxlIG9mLiBUaHVzIHRoaXMgb3B0aW9uIGlzIGluY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " If trained properly, animals can also  exercise freedom of choice.  ",
        "option2" : " Animals act as per their instincts.  ",
        "option3" : " Animals are capable of taking  responsibility for their innovative actions.  ",
        "option4" : " Training can make animals responsible,  aware and intelligent.   "
      }
    },
    {
      "index" : 11,
      "question" : " A Bullet train travels 50% faster than a Shatabdi Express train. Both start from point P at the same time and reach point Q, 125 km away from P at the same time. On the way however, the Bullet train lost about 17.5 minutes while stopping at the stations. The speed of Shatabdi Express train is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IExldCBzcGVlZCBvZiBTaGF0YWJkaSBFeHByZXNzIHRyYWluIGJlICd4JywgdGhlbiBzcGVlZCBvZiBCdWxsZXQgdHJhaW4gd2lsbCBiZSAnMS41eCcuICBUaW1lIHRha2VuIGJ5IFNoYXRhYmRpIEV4cHJlc3MgdHJhaW4gdG8gY292ZXIgMTI1IGttID0gMTI1L3ggIFRpbWUgdGFrZW4gYnkgQnVsbGV0IHRyYWluIHRvIGNvdmVyIDEyNSBrbSA9IDEyNS8xLjV4ICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgMTI1L3ggLSAxMjUvMS41eCA9IDE3LjUvNjAgIE9yIDEyNS94IC0gMTI1LzEuNXggPSAxNzUvKDEww5c2MCkgICBPciAxMjUvM3ggPSAxNzUvKDEww5c2MCkgIE9yIHggPSAxMDAwLzcgPSAxNDIuODUga20vIGhyICBTbywgc3BlZWQgb2YgU2hhdGFiZGkgRXhwcmVzcyB0cmFpbiBpcyAxNDIuODUga20vIGhyLiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 71.4 km/hr ",
        "option2" : " 102.85 km/hr ",
        "option3" : " 142.85 km/hr ",
        "option4" : " 79.12 km/hr  "
      }
    },
    {
      "index" : 12,
      "question" : " A man buys alcohol at Rs. 12.20 per litre. Then, he adds water into it and sells the mixture at Rs. 19 per litre, and manages to book a profit of 42.5%. The ratio of alcohol to water received by his customer is - ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IENvc3QgcHJpY2Ugb2YgYWxjb2hvbCA9IFJzLiAxMi4yMC9saXRyZSAgU2VsbGluZyBwcmljZSBvZiB0aGUgbWl4dHVyZSAoYWxjb2hvbCArIHdhdGVyKSA9IFJzLiAxOS9saXRyZSAgQ29zdCBwcmljZSBvZiB0aGUgbWl4dHVyZSAoYWxjb2hvbCArIHdhdGVyKSA9IDE5IMOXIFsxMDAvKDEwMCArIDQyLjUpXSA9IFJzLiAxMy4zICBBcHBseWluZyB0aGUgYWxsZWdhdGlvbiBydWxlLCB3ZSBnZXQ6ICBXYXRlciAgICBBbGNvaG9sICAwICAgIDEyLjIwICAgICAgIDEzLjMgICAgICgxMy4zMCAtIDEyLjIwID0gMS4xMCkgICAoMTMuMzAgLSAwID0gMTMuMzApICAgUmF0aW8gb2YgYWxjb2hvbCB0byB3YXRlciA9IDEzLjMwIDogMS4xMCA9IDEzMyA6IDExICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 10 ",
        "option2" : " 12 : 31 ",
        "option3" : " 133 : 11 ",
        "option4" : " 11 : 133 "
      }
    },
    {
      "index" : 13,
      "question" : " A museum has an average of 640 visitors on each Saturdays and Sundays, while 310 visitors on other days. The average number of visitors per day in a month of 30 days beginning with a Saturday is ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEluIGEgbW9udGggb2YgMzAgZGF5cyBiZWdpbm5pbmcgd2l0aCBTYXR1cmRheSwgd2Ugd2lsbCBoYXZlIDUgU2F0dXJkYXlzLCA1IFN1bmRheXMgYW5kIDIwIE90aGVyIGRheXMuICBWaXNpdG9ycyBvbiA1IFNhdHVyZGF5cyA9IDY0MCDDlyA1ID0gMzIwMCAgVmlzaXRvcnMgb24gNSBTdW5kYXlzID0gNjQwIMOXIDUgPSAzMjAwICBWaXNpdG9ycyBvbiBPdGhlciBkYXlzID0gMzEwIMOXIDIwID0gNjIwMCAgU28sIFRvdGFsIG51bWJlciBvZiB2aXNpdG9ycyBpbiAzMCBkYXlzID0gMzIwMCArIDMyMDAgKyA2MjAwID0gMTI2MDAgIEF2ZXJhZ2UgbnVtYmVyIG9mIHZpc2l0b3JzIHBlciBkYXkgPSAxMjYwMC8zMCA9IDQyMCAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 560 ",
        "option2" : " 240 ",
        "option3" : " 620 ",
        "option4" : " 420   Direction for the following 2 (two) items:   The following two items are based on graph given  below which shows the Covid-19 vaccination (in 2021)  by different cities for three consecutive months viz.  April, May, June of the same year. Study the graph and  answer the two items that follow.  "
      }
    },
    {
      "index" : 14,
      "question" : " The ratio of minimum vaccination and maximum vaccination of which city is the highest? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEZvciBBZ3JhOiAgTWluaW11bSBWYWNjaW5hdGlvbjogNDUgIE1heGltdW0gVmFjY2luYXRpb246IDEwNSAgUmVxdWlyZWQgcmF0aW8gPSA0NS8xMDUgPSAzLzcgPSAzIDogNyA9IDAuNDMgIEZvciBMdWNrbm93OiAgTWluaW11bSBWYWNjaW5hdGlvbjogNDUgIE1heGltdW0gVmFjY2luYXRpb246IDkwICBSZXF1aXJlZCByYXRpbyA9IDQ1LzkwID0gMS8yID0gMSA6IDIgPSAwLjUgIEZvciBOb2lkYTogIE1pbmltdW0gVmFjY2luYXRpb246IDQ1ICBNYXhpbXVtIFZhY2NpbmF0aW9uOiA3NSAgUmVxdWlyZWQgcmF0aW8gPSA0NS83NSA9IDMvNSA9IDMgOiA1ID0gMC42ICBGb3IgQWxsYWhhYmFkOiAgTWluaW11bSBWYWNjaW5hdGlvbjogNjAgIE1heGltdW0gVmFjY2luYXRpb246IDEyMCAgUmVxdWlyZWQgcmF0aW8gPSA2MC8xMjAgPSAxLzIgPSAxIDogMiA9IDAuNSAgVGhlcmVmb3JlLCB0aGUgcmF0aW8gb2YgbWluaW11bSB2YWNjaW5hdGlvbiBhbmQgbWF4aW11bSB2YWNjaW5hdGlvbiBvZiBOb2lkYSBpcyB0aGUgaGlnaGVzdC4gIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Agra ",
        "option2" : " Lucknow ",
        "option3" : " Noida ",
        "option4" : " Allahabad         5                                                                                                                                                             "
      }
    },
    {
      "index" : 15,
      "question" : " Average number of vaccinations done in Lucknow is approximately what percentage of the average number of vaccinations done in Jhansi? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IE51bWJlciBvZiBWYWNjaW5hdGlvbnMgZG9uZSBpbiBMdWNrbm93IGluIGFsbCB0aGUgdGhyZWUgbW9udGhzID0gODUgKyA0NSArIDkwID0gMjIwICBBdmVyYWdlIG51bWJlciBvZiBWYWNjaW5hdGlvbnMgZG9uZSBpbiBMdWNrbm93ID0gMjIwLzMgICAgICAgIDUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE51bWJlciBvZiBWYWNjaW5hdGlvbnMgZG9uZSBpbiBKaGFuc2kgaW4gYWxsIHRoZSB0aHJlZSBtb250aHMgPSAzMCArIDUwICsgNjAgPSAxNDAgIEF2ZXJhZ2UgbnVtYmVyIG9mIHZhY2NpbmF0aW9ucyBkb25lIGluIEpoYW5zaSA9IDE0MC8zICBSZXF1aXJlZCBQZXJjZW50YWdlID0geygyMjAvMykvKDE0MC8zKX0gw5cgMTAwICA9ICgyMjAvMTQwKSDDlyAxMDAgID0gMTU3LjE0JSAoYXBwcm94LikgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 523% ",
        "option2" : " 314% ",
        "option3" : " 121% ",
        "option4" : " 157%  "
      }
    },
    {
      "index" : 16,
      "question" : " Consider the two statements given below and the question that follows. Statement I: Average of x, y and z is 42 years. Statement II: Thrice the sum of the ages of x and y is 60 years. Question: What is the age of z? Which one of the following is correct in respect of the question and the statements? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IExldCdzIGNoZWNrIGJvdGggdGhlIHN0YXRlbWVudHMuICBGcm9tIFN0YXRlbWVudCBJOiAgKHggKyB5ICsgeikvMyA9IDQyICBPciB4ICsgeSArIHogPSAxMjYgIFNvLCBhZ2Ugb2YgeiBjYW4ndCBiZSBjYWxjdWxhdGVkLiAgVGh1cywgT25seSBTdGF0ZW1lbnQgSSBpcyBub3Qgc3VmZmljaWVudC4gIEZyb20gU3RhdGVtZW50IElJOiAgIDMoeCArIHkpID0gNjAgIE9yIHggKyB5ID0gMjAgIFNvLCBhZ2Ugb2YgeiBjYW4ndCBiZSBjYWxjdWxhdGVkLiAgVGh1cywgT25seSBTdGF0ZW1lbnQgSUkgaXMgbm90IHN1ZmZpY2llbnQuICBGcm9tIGJvdGggU3RhdGVtZW50cyBJIGFuZCBJSTogICB4ICsgeSArIHogPSAxMjYgLi4uLi4uLi4uLi4uIChpKSAgeCArIHkgPSAyMC4uLi4uLi4uLi4uLi4uLi4uIChpaSkgIFB1dHRpbmcgdGhlIHZhbHVlIG9mICh4ICsgeSkgZnJvbSBlcXVhdGlvbiAoaWkpIGluIGVxdWF0aW9uIChpKSwgd2UgZ2V0OiAgMjAgKyB6ID0gMTI2ICAgT3IgeiA9IDEyNiAtIDIwID0gMTA2ICBTbywgaXQgaXMgY2xlYXIgdGhhdCBib3RoIHN0YXRlbWVudHMgdG9nZXRoZXIgYXJlIHN1ZmZpY2llbnQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbi4gIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Statement I alone is sufficient to answer the  question. ",
        "option2" : " Statement II alone is sufficient to answer  the question. ",
        "option3" : " Both statements I and II are required to  answer the question. ",
        "option4" : " Even both statements I and II together are  not sufficient to answer the question.  "
      }
    },
    {
      "index" : 17,
      "question" : " Rohan works in a sanitizer factory. In a 176 ltr mixture of glycer and alcohol, there's 80% alcohol. How much alcohol should be evaporated from the mixture to reduce its percentage to 60%? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IFJhdGlvIG9mIGdseWNlciBhbmQgYWxjb2hvbCBpbiB0aGUgbWl4dHVyZSA9IDIwIDogODAgPSAxIDogNCAgU28sIFF1YW50aXR5IG9mIGdseWNlciBpbiB0aGUgc29sdXRpb24gPSAxNzYgw5cgMS8oMSArIDQpID0gMzUuMiBsdHIgIFNvLCBxdWFudGl0eSBvZiBhbGNvaG9sIGluIHRoZSBzb2x1dGlvbiA9IDE3NiAtIDM1LjIgPSAxNDAuOCBsdHIgIEluIHRoZSBmaW5hbCBtaXh0dXJlLCBhbGNvaG9sIGlzIDYwJSBhbmQgZ2x5Y29sIGlzIDQwJS4gIDQwJSBjb3JyZXNwb25kcyB0byAzNS4yIGxpdHJlcy4gIDYwJSBjb3JyZXNwb25kcyB0byAzNS4yIMOXICg2MCUvNDAlKSA9IDUyLjggbGl0cmVzLiAgU28sIFF1YW50aXR5IG9mIGFsY29ob2wgdGhhdCBzaG91bGQgYmUgZXZhcG9yYXRlZCA9IDE0MC44IGxpdHIgLSA1Mi44IGx0ciA9IDg4IGx0ciAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 78 ltr ",
        "option2" : " 88 ltr ",
        "option3" : " 72 ltr ",
        "option4" : " 76 ltr "
      }
    },
    {
      "index" : 18,
      "question" : " If triplicate ratio of the ages of Ram and his father is 8 : 125, and duplicate ratio of his father and his grandfather's age is 36 : 49, then what is the ratio of the ages of Ram and his grandfather? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IFRyaXBsaWNhdGUgcmF0aW8gb2YgdGhlIGFnZXMgb2YgUmFtIGFuZCBoaXMgZmF0aGVyID0gOCA6IDEyNSAgU28sIHJhdGlvIG9mIHRoZSBhZ2VzIG9mIFJhbSBhbmQgaGlzIGZhdGhlciA9ICg4KTEvMyA6ICgxMjUpMS8zID0gMiA6IDUgIER1cGxpY2F0ZSByYXRpbyBvZiB0aGUgYWdlcyBvZiBoaXMgZmF0aGVyIGFuZCBncmFuZGZhdGhlciA9IDM2IDogNDkgIFNvLCByYXRpbyBvZiB0aGUgYWdlcyBvZiBoaXMgZmF0aGVyIGFuZCBncmFuZGZhdGhlciA9ICgzNikxLzIgOiAoNDkpMS8yID0gNiA6IDcgIFNvLCByYXRpbyBvZiBhZ2VzIG9mIFJhbSwgaGlzIGZhdGhlciBhbmQgaGlzIGdyYW5kZmF0aGVyID0gMiDDlyA2IDogNSDDlyA2IDogNSDDlyA3ID0gMTIgOiAzMCA6IDM1ICBIZW5jZSwgdGhlIHJhdGlvIG9mIHRoZSBhZ2VzIG9mIFJhbSBhbmQgaGlzIGdyYW5kZmF0aGVyID0gMTIgOiAzNSAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  8 : 7 ",
        "option2" : " 16 : 35 ",
        "option3" : " 12 : 35 ",
        "option4" : " 16 : 14  "
      }
    },
    {
      "index" : 19,
      "question" : " Dinesh, a vegetable seller, cycled to market at a constant speed of 30 km/h. He covered first 70% of the total distance in 10 min more than the time taken in covering the remaining 30% of the total distance. How far is the market? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IExldCBEaW5lc2ggdG9vayAndCcgbWludXRlcyB0byBjb3ZlciAzMCUgb2YgdGhlIGRpc3RhbmNlLiAgVGhlbiwgdGhlIHRpbWUgdGFrZW4gdG8gY292ZXIgNzAlIG9mIHRoZSBkaXN0YW5jZSA9ICh0ICsgMTApIG1pbnV0ZXMgICAgICAgIDYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERpc3RhbmNlID0gc3BlZWQgw5cgdGltZSAgU28sIGRpc3RhbmNlIGlzIGRpcmVjdGx5IHByb3BvcnRpb25hbCB0byB0aW1lLiAgU28sICh0ICsgMTApICA9IDcwLzMwICBPciAodCArIDEwKSAgPSA3LzMgIE9yIDd0ID0gM3QgKyAzMCAgT3IgNHQgPSAzMCAgT3IgdCA9IDMwLzQgPSA3LjUgbWluICBUaW1lIHJlcXVpcmVkIGZvciBjb21wbGV0aW5nIHRoZSBqb3VybmV5ID0gdCArICh0ICsgMTApID0gMnQgKyAxMCA9IDIgw5cgKDcuNSkgKyAxMCA9IDI1IG1pbiAgVG90YWwgZGlzdGFuY2UgPSBhdmVyYWdlIHNwZWVkIMOXIHRvdGFsIHRpbWUgPSAzMCDDlyAoMjUvNjApID0gMTIuNSBrbSAgICAgICAgIHsg4oi1IDYwIG1pbiA9IDEgaG91cn0gIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 12 km ",
        "option2" : " 12.5 km ",
        "option3" : " 9 km  ",
        "option4" : " 18 km   Directions for the following 3 (three) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 20,
      "question" : " According to the passage, what conclusion/ conclusions can be drawn from the studies done by Japanese scientists?  1. Japanese macaques can learn to survive the cold winters of northern Japan.  2. Japanese macaques can learn new activities.  3. Japanese macaques, in general, are curious. Select the correct answer from the code given below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogIEFjY29yZGluZyB0byB0aGUgcGFzc2FnZSwgSmFwYW5lc2UgbWFjYXF1ZXMgd2VyZSBhbHJlYWR5IGxpdmluZyBpbiB0aGUgaGlnaCAgbW91bnRhaW5zIG9mIG5vcnRoZXJuIEphcGFuIHdoZXJlLCBpbiB3aW50ZXIsIHRoZSBzbm93IGxpZXMgdGhpY2suIFRoZSBwYXNzYWdlIHJhdGhlciBkaXNjdXNzZXMgaG93IHRoZXkgIGRpc2NvdmVyZWQgdGhlIGhvdCB2b2xjYW5pYyBzcHJpbmdzIGFuZCBsZWFybnQgdG8gdGFrZSBob3QgYmF0aHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucywgJ1RoZSBtb25rZXlzIGludmVzdGlnYXRlZCBhbmQgZm91bmQgdGhhdCB3YXJtICB3YXRlciBjb3VsZCBwcm92aWRlIGEgZGVsaWNpb3VzIGJhdGguIEEgZmV3IHRyaWVkIGl0LiBTb29uIHRoZSBoYWJpdCBzcHJlYWQuIE5vdyBhbGwgdGhlIG1vbmtleXMgdGhlcmUgdGFrZSAgaG90IGJhdGhzIGV2ZXJ5IHdpbnRlci4nIFRoZXNlIHNlbnRlbmNlcyBjbGVhcmx5IGVzdGFibGlzaCB0aGF0IEphcGFuZXNlIG1hY2FxdWVzIGhhdmUgdGhlIGFiaWxpdHkgdG8gbGVhcm4gIG5ldyBhY3Rpdml0aWVzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlIGN1cmlvc2l0eSB0aGF0IGxlZCB0byB0aGlzIGRpc2NvdmVyeSwgYW5kIHRoZSAgYWRhcHRhYmlsaXR5IHRoYXQgYWxsb3dlZCB0aGUgYW5pbWFscyB0byBpbmNvcnBvcmF0ZSB0aGUgbmV3IGFjdGl2aXR5IGludG8gdGhlaXIgcmVndWxhciBiZWhhdmlvciwgaXMgdHlwaWNhbCAgb2YgdGhlIGVudGVycHJpc2Ugb2YgdGhlIG1hY2FxdWVzJywgd2hpY2ggbWVhbnMgdGhhdCB0aGUgY29uY2x1c2lvbiBpcyB2YWxpZCBmb3Igb3RoZXIgSmFwYW5lc2UgbWFjYXF1ZXMuICBUaGUgcGFzc2FnZSBhbHNvIHRhbGtzIGFib3V0IGEgZmV3IEphcGFuZXNlIG1hY2FxdWVzICdpbnZlc3RpZ2F0aW5nJyBhbmQgJ2ZpbmRpbmcgb3V0JyB0aGF0IHdhcm0gc3ByaW5nICB3YXRlciBjb3VsZCBiZSB1c2VkIHRvIGhhdmUgYSBnb29kIGJhdGggYW5kIHRoYXQgYSBmZXcgb2YgdGhlbSB0cmllZCBpdCBvdXQuIFRoaXMgcmVmbGVjdHMgdGhlIGlucXVpc2l0aXZlICBuYXR1cmUgb2YgbWFjYXF1ZXMuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only.  ",
        "option2" : "  2 and 3 only  ",
        "option3" : "  1 and 3 only  ",
        "option4" : "  1, 2 and 3  "
      }
    },
    {
      "index" : 21,
      "question" : " With reference to the passage, suggest why climate change can be hazardous for cities. 1. They are concentrated centers of population.  2. They are centers of economic activity.  Select the correct answer using the codes below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEl0IGlzIG1lbnRpb25lZCBpbiB0aGUgZmlyc3QgbGluZSBvZiBwYXNzYWdlLCAnR2l2ZW4gdGhhdCBjaXRpZXMgYXJlIGNvbmNlbnRyYXRlZCAgY2VudGVycyBvZiBwb3B1bGF0aW9uIGFuZCBlY29ub21pYyBhY3Rpdml0aWVzLCBhbnkgaW1wYWN0IGFuZCBkaXNydXB0aW9uLCB3aGV0aGVyIG5hdHVyYWwgYW5kIGh1bWFuICBpbmR1Y2VkLCBoYXMgdGhlIHBvdGVudGlhbCB0byBhZmZlY3QgdmFzdCBudW1iZXJzIG9mIHBlb3BsZS4gVGhlIGV4cGVjdGVkIGltcGFjdCBvZiBjbGltYXRlIGNoYW5nZSBwb3NlcyBhICBtYXNzaXZlIGNoYWxsZW5nZSB0byBjaXRpZXMuJyAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFNpbWlsYXJseSwgaW4gdGhlIGZpcnN0IGxpbmUsIGl0IGlzIGFsc28gbWVudGlvbmVkIHRoYXQgY2l0aWVzIGFyZSBjZW50ZXJzIG9mIGVjb25vbWljICBhY3Rpdml0eS4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgYWxzbyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2  ",
        "option2" : " 1 only  ",
        "option3" : " 2 only  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 22,
      "question" : " Which one of the following best reflects the most practical and lasting solution(s) of the problem mentioned in the passage above?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBUaGUgcGFzc2FnZSB0YWxrcyBhYm91dCB0aGUgY2l0aWVzIHRoYXQgYXJlIGFscmVhZHkgdGhlcmUsIHdoaWNoIGFyZSBjb25jZW50cmF0ZWQgIGNlbnRlcnMgb2YgcG9wdWxhdGlvbiBhbmQgZWNvbm9taWMgYWN0aXZpdHkgYW5kIHByb25lIHRvIHRoZSBpbXBhY3RzIG9mIGNsaW1hdGUgY2hhbmdlLiBUaGUgcXVlc3Rpb24gYXNrcyAgdXMgdG8gZmluZCB0aGUgbW9zdCBwcmFjdGljYWwgYW5kIGxhc3Rpbmcgc29sdXRpb24gdG8gdGhlIHByb2JsZW0uIEF2b2lkaW5nIGNvbnN0cnVjdGlvbiBvZiBuZXcgY2l0aWVzIGluICBsb3cgbHlpbmcgYXJlYXMgb3Igb24gc3RlZXAgc2xvcGVzIGNvdWxkIGJlIGFuIGlkZWFsLCBpZiBub3QgcHJhY3RpY2FsIGZ1dHVyZSBzb2x1dGlvbi4gSG93ZXZlciwgaXQgZG9lcyBub3QgIGFkZHJlc3MgdGhlIHByb2JsZW0gb2YgY2l0aWVzIHdoaWNoIGFyZSBhbHJlYWR5IHNldHRsZWQgaW4gc3VjaCBsb2NhdGlvbnMuIFRoZSBwYXNzYWdlIHRhbGtzIGFib3V0IHRoZSAgcHJvYmxlbXMgb2YgZXhpc3RpbmcgY2l0aWVzLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0OiBUaG91Z2ggdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBidWlsZGluZyByZXNpbGllbmNlIGFuZCBhZGFwdGluZyB0byBjbGltYXRlICBjaGFuZ2Ugc2hvdWxkIGJlIGEgaGlnaCBwcmlvcml0eSBmb3IgY2l0aWVzLCB0aGlzIHNvbHV0aW9uIGlzIG5vdCBjb21wcmVoZW5zaXZlLCBhcyBpdCBkb2VzIG5vdCBkZWFsIHdpdGggdGhlICBvdGhlciBtYWluIHByb2JsZW0sIHdoaWNoIGlzIHVyYmFuIHBvdmVydHkgYW5kIHZ1bG5lcmFiaWxpdHkgb2YgdGhlIG1vc3QgdnVsbmVyYWJsZSBwZW9wbGUgdG8gY2xpbWF0ZSAgY2hhbmdlLiBUaGlzIG9wdGlvbiBvbmx5IGRlYWxzIHdpdGggdGhlIHJlaGFiaWxpdGF0aW9uIG9mIGxpZmUgYW5kIGluZnJhc3RydWN0dXJlIHBvc3QgYSBkaXNhc3Rlci4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdDogVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdCdWlsZGluZyByZXNpbGllbmNlIGFuZCBhZGFwdGluZyB0byBjbGltYXRlIGNoYW5nZSBhcmUgIHRoZXJlZm9yZSBhIGhpZ2ggcHJpb3JpdHkgZm9yIGNpdGllcy4nIEEgcm9idXN0IHB1YmxpYyB0cmFuc3BvcnQgYW5kIGluZHVzdHJpZXMgYmFzZWQgb24gY2xlYW4gdGVjaG5vbG9naWVzICBhcmUgbm8gZG91YnQsIGNsaW1hdGUgbWl0aWdhdGlvbiBtZWFzdXJlcyB0aGF0IGhhdmUgdGhlIHBvdGVudGlhbCB0byByZWR1Y2UgY2FyYm9uIGZvb3RwcmludCBhbmQgdGh1cyAgICAgICAgNyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZWZmZWN0cyBvZiBnbG9iYWwgd2FybWluZyBhbmQgY2xpbWF0ZSBjaGFuZ2UuIFlldCB0aGlzIGlzIG5vdCBhIGNvbXByZWhlbnNpdmUgc29sdXRpb24gYXMgaXQgZG9lcyBub3QgIGF1Z21lbnQgdGhlIGFkYXB0aXZlIGNhcGFjaXR5IG9mIHRoZSBwb29yZXN0IHNlY3Rpb25zLCB3aG8gYXJlIG1vc3QgYWZmZWN0ZWQgYnkgY2xpbWF0ZSBjaGFuZ2UuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0OiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZSBleHBlY3RlZCBpbXBhY3Qgb2YgY2xpbWF0ZSBjaGFuZ2UgcG9zZXMgYSBtYXNzaXZlICBjaGFsbGVuZ2UgdG8gY2l0aWVzLicgYW5kICdJbiBldmVyeSBjaXR5LCB0aGUgcG9vcmVzdCBwb3B1bGF0aW9ucyBhcmUgdGhlIG1vc3QgdnVsbmVyYWJsZSwgYmVjYXVzZSB0aGV5ICBoYXZlIHRoZSBsZWFzdCBhZGFwdGl2ZSBjYXBhY2l0eSBhbmQgb2Z0ZW4gb2NjdXB5IGFyZWFzIHRoYXQgYXJlIG1vc3QgZXhwb3NlZCB0byBoYXphcmRzLicgVGh1cyB1cmJhbiAgcG92ZXJ0eSBhbmQgdGhlIGNvbnNlcXVlbnQgbGFjayBvZiBhZGFwdGl2ZSBjYXBhY2l0eSBhbW9uZyB0aGUgcG9vciB0byBjbGltYXRlIGNoYW5nZSBhcmUgdGhlIHR3byAgY2hhbGxlbmdlcyBjb25mcm9udGluZyB1cmJhbiBwbGFubmVycyBhbmQgdGhpcyBvcHRpb24gdGFsa3MgYWJvdXQgc3VjaCBwb2xpY2llcyB3aGljaCBoYXZlIGNvLWJlbmVmaXRzIGZvciAgYm90aCwgdXJiYW4gcG92ZXJ0eSByZWR1Y3Rpb24gYXMgd2VsbCBhcyBhZGFwdGF0aW9uIHRvIGNsaW1hdGUgY2hhbmdlLiBUaHVzIE9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgKGFuZCAgYmVzdCkgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Cities should not be settled in areas prone  to hazards like low lying areas or on steep  slopes.  ",
        "option2" : " Cities should be made disaster resilient and  follow the principle of 'build back better'.  ",
        "option3" : " Cities should have robust public transport  and industries based on clean technologies.  ",
        "option4" : " Urban planners should make policies with  co-benefits to urban poverty reduction and  adaptation to climate change.    Direction for the following 2 (two) items:  The following two items are based on the graph given  below, which shows the number of male and female  students who have taken different optional subjects in  the board exam. Study the graph and answer the two  items that follow.          7                                                                                                                                                             "
      }
    },
    {
      "index" : 23,
      "question" : " The number of females that have chosen computer is how many times of the number of females that have chosen Arts? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEZyb20gdGhlIGdpdmVuIGdyYXBoIGl0IGlzIGNsZWFyIHRoYXQsICBOdW1iZXIgb2YgZmVtYWxlcyB0aGF0IGhhdmUgY2hvc2VuIGNvbXB1dGVyID0gMTEwIHRob3VzYW5kICAgTnVtYmVyIG9mIGZlbWFsZXMgdGhhdCBoYXZlIGNob3NlbiBBcnRzID0gNTAgdGhvdXNhbmQgICBTbywgcmVxdWlyZWQgYW5zd2VyID0gMTEwIHRob3VzYW5kIC81MCB0aG91c2FuZCA9IDExMC81MCA9IDIuMiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2.2 ",
        "option2" : " 2 ",
        "option3" : " 2.02 ",
        "option4" : "  2.10  "
      }
    },
    {
      "index" : 24,
      "question" : " If 50 percent males that have chosen Sanskrit and 40 percent females that have chosen computer are selected to form a group for an educational tour, then what is the ratio of males and females in this group?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IE51bWJlciBvZiBtYWxlcyB0aGF0IGhhdmUgY2hvc2VuIFNhbnNrcml0ID0gMTIwIHRob3VzYW5kICAg4oi0IE51bWJlciBvZiBtYWxlcyBpbiB0aGUgZ3JvdXAgPSA1MCUgb2YgMTIwID0gKDEvMikgw5cgMTIwID0gNjAgdGhvdXNhbmQgICBOdW1iZXIgb2YgZmVtYWxlcyB0aGF0IGhhdmUgY2hvc2VuIGNvbXB1dGVyID0gMTEwIHRob3VzYW5kICAg4oi0IE51bWJlciBvZiBmZW1hbGVzIGluIHRoZSBncm91cCA9IDQwJSBvZiAxMTAgPSAoMi81KSDDlyAxMTAgPSA0NCB0aG91c2FuZCAgUmVxdWlyZWQgcmF0aW8gPSA2MCB0aG91c2FuZC80NCB0aG91c2FuZCA9IDE1LzExID0gMTU6IDExICBIZW5jZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 12 : 11 ",
        "option2" : " 5 : 4 ",
        "option3" : " 3 : 2 ",
        "option4" : " 15 : 11  "
      }
    },
    {
      "index" : 25,
      "question" : " Average expense of a company for first 4 years is Rs. 2x. Expense in the 5th year exceed the previous average by Rs. 15. What is the average expense for 5 years? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IFRvdGFsIGV4cGVuc2UgZm9yIGZpcnN0IDQgeWVhcnMgPSA0IMOXIDJ4ID0gOHggIEV4cGVuc2UgaW4gdGhlIDV0aCB5ZWFyIGV4Y2VlZCB0aGUgcHJldmlvdXMgYXZlcmFnZSBieSBScy4gMTUuICAgU28sIGV4cGVuc2UgaW4gdGhlIDV0aCB5ZWFyID0gMnggKyAxNSAgVG90YWwgZXhwZW5zZSBpbiA1IHllYXJzID0gOHggKyAoMnggKyAxNSkgPSAxMHggKyAxNSAgQXZlcmFnZSBleHBlbnNlIGZvciA1IHllYXJzID0gKDEweCArIDE1KS81ID0gMnggKyAzICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2.5x + 5 ",
        "option2" : " 8x + 3 ",
        "option3" : " 10x + 15 ",
        "option4" : " 2x + 3  "
      }
    },
    {
      "index" : 26,
      "question" : "Two drums are filled with a mixture of milk and water, such that they have 30% and 23% water respectively. If the contents of both drums are mixed together, the water content in the resulting mixture is 26%. What is the ratio of water in the two drums? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEFwcGx5aW5nIHRoZSBhbGxlZ2F0aW9uIHJ1bGUsIHdlIGdldDogICBTbywgcmVxdWlyZWQgcmF0aW8gb2Ygd2F0ZXIgaW4gdGhlIHR3byBkcnVtcyA9IDMgOiA0ICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgICAgICA4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 3 ",
        "option2" : " 3 : 2 ",
        "option3" : " 3 : 4 ",
        "option4" : " 1 : 4  "
      }
    },
    {
      "index" : 27,
      "question" : " A dishonest shopkeeper sells mustard oil at cost price. But while doing so he mixes palm oil in mustard oil, and earns a profit of 20%. What must be the percent of palm oil in the mixture being sold? (Assuming the price of palm oil as zero) ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEEgZGlzaG9uZXN0IHNob3BrZWVwZXIgZWFybnMgMjAlIGJ5IG1peGluZyBwYWxtIG9pbCB3aXRoIG11c3RhcmQgb2lsLiAgSW4gdGhpcyBxdWVzdGlvbiwgd2UgaGF2ZSB0byBjb25zaWRlciB0aGUgcHJpY2Ugb2YgcGFsbSBvaWwgYXMgemVyby4gIFJhdGlvIG9mIG11c3RhcmQgb2lsIGFuZCBwYWxtIG9pbCA9IDEwMCA6IDIwID0gNSA6IDEgIFNvLCBQZXJjZW50YWdlIG9mIHBhbG0gb2lsIGluIHRoZSBtaXh0dXJlID0gWzEvKDEgKyA1KV0gw5cgMTAwID0gKDUwLzMpJSAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " (25/2)% ",
        "option2" : " 20%  ",
        "option3" : " 25% ",
        "option4" : " (50/3)%  "
      }
    },
    {
      "index" : 28,
      "question" : " In a community milk donation centre, four people donate equal quantity of milk, such that ratio of milk and water in the mixtures donated are 1 : 4, 2 : 3 , 3 : 7, and 9 : 1 respectively. All the donated milk is kept in a large container. What must be the ratio of milk and water in the container? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IFJhdGlvIG9mIG1pbGsgYW5kIHdhdGVyIGluIHRoZSBmb3VyIG1peHR1cmVzID0gMSA6IDQsIDIgOiAzLCAzIDogNywgOSA6IDEgIEZpbmFsIHJhdGlvIG9mIG1pbGsgYW5kIHdhdGVyIGluIHRoZSBkb25hdGVkIG1pbGsgPSAgPSBbezEvKDEgKyA0KX0gKyB7Mi8oMiArIDMpfSArIHszLygzICsgNyl9ICsgezkvKDEgKyA5KX1dIDogW3s0LygxICsgNCl9ICsgMy8oMiArIDMpfSArIHs3LygzICsgNyl9ICsgezEvKDEgICsgOSl9XSAgID0gWygxLzUpICsgKDIvNSkgKyAoMy8xMCkgKyAoOS8xMCldIDogWyg0LzUpICsgKDMvNSkgKyAoNy8xMCkgKyAoMS8xMCldICA9IFsoMiArIDQgKyAzICsgOSkvMTBdIDogWyg4ICsgNiArIDcgKyAxKS8xMF0gID0gKDE4LzEwKSA6ICgyMi8xMCkgID0gOSA6IDExICBIZW5jZSwgbmV3IHJhdGlvIG9mIG1pbGsgYW5kIHdhdGVyIGluIHRoZSBjb250YWluZXIgaXMgOSA6IDExLiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 9 : 11 ",
        "option2" : " 9 : 10  ",
        "option3" : " 18 : 11 ",
        "option4" : " 15 : 16  "
      }
    },
    {
      "index" : 29,
      "question" : " Chandrika runs an e-rickshaw from A to B, which are 20 km apart, at a speed of 4 km/hr, and from B to C, which are 30 km apart, at a speed of 6 km/hr, and then from C to D which are 10 km apart. If his average speed during the whole journey is 5 km/hr, then what must have been the speed of e-rickshaw from C to D? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IERpc3RhbmNlIGZyb20gQSB0byBCID0gMjAga20gYW5kIFNwZWVkID0gNCBrbS9oICBEaXN0YW5jZSBmcm9tIEIgdG8gQyA9IDMwIGttIGFuZCBTcGVlZCA9IDYga20vaCAgRGlzdGFuY2UgZnJvbSBDIHRvIEQgPSAxMCBrbS4gTGV0IHgga20vaCBiZSB0aGUgc3BlZWQgZnJvbSBDIHRvIEQuICAgQXZlcmFnZSBzcGVlZCBvZiBlLXJpY2tzaGF3IGR1cmluZyB0aGUgd2hvbGUgam91cm5leSA9IDUga20vaHIgIFdoZW4gYSBwZXJzb24gdHJhdmVscyBkMSBkaXN0YW5jZSBhdCBhIHNwZWVkIG9mIHgxIGttL2hyIGFuZCBkMiBkaXN0YW5jZSBhdCBhIHNwZWVkIG9mIHgyIGttL2hyIGFuZCBkMyAgZGlzdGFuY2UgYXQgYSBzcGVlZCBvZiB4MyBrbS9ociwgdGhlbiBhdmVyYWdlIHNwZWVkIG9mIHRoZSBqb3VybmV5IGlzIGdpdmVuIGJ5OiAgKGQxICsgZDIgKyBkMykgLyBbKGQxL3gxKSArIChkMi94MikgKyAoZDMveDMpXSAgIGttL2ggIEFwcGx5aW5nIHRoZSBhYm92ZSBjb25jZXB0LCB3ZSBnZXQ6ICA1ID0gKDIwICsgMzAgKyAxMCkgLyBbKDIwLzQpICsgKDMwLzYpICsgKDEwL3gpXSAg4oeSIDYwL1soMTAgKyAoMTAveCldID0gNSAg4oeSIDYweCA9IDUgw5cgKDEweCArIDEwKSAgIOKHkiA2MHggPSA1MHggKyA1MCAg4oeSIDEweCA9IDUwICDih5IgeCA9IDUga20vaHIgICBIZW5jZSwgU3BlZWQgb2YgZS1yaWNrc2hhdyBmcm9tIEMgdG8gRCBpcyA1IGttL2hyLiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5 km/hr  ",
        "option2" : " 8 km/hr  ",
        "option3" : " 7 km/hr  ",
        "option4" : " 10 km/hr           8                                                                                                                                                              Directions for the following 3 (three) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 30,
      "question" : " Which one of the following statements best reflects the crux of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBJdCBpcyBub3doZXJlIG1lbnRpb25lZCBpbiB0aGUgcGFzc2FnZSB0aGF0IFZlcnN0ZWhlbiBjYW4gYmUgdXNlZCB0byBwcmVkaWN0ICBodW1hbiBhY3Rpb25zIGluIGZ1dHVyZS4gSXQgaXMgcHJvdmlkZWQgaW4gdGhlIHBhc3NhZ2UgdGhhdCBWZXJzdGVoZW4gaXMgdXNlZCBieSBzb2Npb2xvZ2lzdHMgdG8gZ2FpbiBhbiAgdW5kZXJzdGFuZGluZyBvZiB0aGUgbWVhbmluZ3MgYmVoaW5kIGh1bWFuIGFjdGlvbnMuIFdpdGggdGhpcyBsaW1pdGVkIGluZm9ybWF0aW9uLCBpdCBjYW5ub3QgYmUgYXNzdW1lZCAgdGhhdCBWZXJzdGVoZW4gY2FuIGJlIHVzZWQgdG8gcHJlZGljdCBodW1hbiBhY3Rpb25zIGluIGZ1dHVyZSwgYW5kIHRodXMgaXQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgIHBhc3NhZ2UuICBPcHRpb24gKGIpIGlzIGNvcnJlY3Q6IFRoZSBwYXNzYWdlIG1lbnRpb25zIHRoYXQgaW4gVmVyc3RlaGVuIGFwcHJvYWNoLCBpdCBpcyBpbXBvcnRhbnQgZm9yIHRoZSAgcmVzZWFyY2hlcnMgdG8gcGxhY2UgdGhlbXNlbHZlcyBpbiB0aGUgcG9zaXRpb24gb2YgdGhlIGluZGl2aWR1YWwgdG8gY29tcHJlaGVuZCB0aGUgbWVhbmluZ3MgYmVoaW5kIHRoZSAgcGVyc29uJ3MgYWN0aW9uIGFuZCBtZWFuaW5ncyBhdHRhY2hlZCB0byB0aGUgbW90aXZhdGlvbiwgcHVycG9zZXMgb3Igb3V0Y29tZXMgb2YgdGhlaXIgYWN0aW9ucywgYmVjYXVzZSAgYWN0aW9ucyBjYW4gaGF2ZSBkaWZmZXJlbnQgbWVhbmluZ3MgaW4gZGlmZmVyZW50IGN1bHR1cmVzIGFuZCBzb2NpZXRpZXMuIFRoaXMgbWVhbnMgdGhhdCByZXN1bHRzIHByb2R1Y2VkICBieSBWZXJzdGVoZW4gYXJlIGNvbnRleHQgc3BlY2lmaWMuIFNvLCB0aGlzIGlzIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICAgICAgICA5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdDogSXQgaXMgY2xlYXJseSBtZW50aW9uZWQsICdXaXRob3V0IHByb3BlciBpbnZlc3RpZ2F0aW9uLCBvbmUgaXMgYXQgcmlzayBvZiAgbWlzaW50ZXJwcmV0aW5nIHRoZSBkYXRhIGNvbGxlY3RlZC4nICBTbywgaWYgbm90IHByb3Blcmx5IGRvbmUgYW5kIHdpdGhvdXQgdGFraW5nIHZpZXcgb2YgdGhlIGN1bHR1cmUgb3IgIGNvbnRleHQsIGl0IHdvdWxkIGxlYWQgdG8gbWlzbGVhZGluZyByZXN1bHRzLiBIb3dldmVyLCBpdCBoYXMgYW4gYW1iaWd1b3VzIG1lYW5pbmcgLSBEbyB3ZSBnZXQgIG1pc2xlYWRpbmcgcmVzdWx0cyBpZiBWZXJzdGVoZW4gcHJvY2VkdXJlIGlzIG5vdCBhcHBsaWVkLCBvciBpZiBpdCBpcyBub3QgYXBwbGllZCBwcm9wZXJseS4gQWxzbywgdGhpcyBjYW5ub3QgIGJlIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0OiBUaGUgYXV0aG9yLCBpbiB0aGUgb3BlbmluZyBsaW5lcywgZGVmaW5lcyBWZXJzdGVoZW4sIHdoZXJlIGhlIGNsZWFybHkgc3RhdGVzIHRoYXQgaXQgIGlzIGEgdGVjaG5pcXVlIHRvIHN0dWR5IHRoZSBtZWFuaW5nIGJlaGluZCBodW1hbiBhY3Rpb25zIGFuZCBtZWFuaW5nIGJlaGluZCB0aGVpciBtb3RpdmF0aW9ucywgcHVycG9zZXMgIGFuZCBhY3Rpb25zLiBUaHVzLCBjbGFpbWluZyB0aGF0IHRoZSBtb3RpdmF0aW9uIGJlaGluZCBhIGh1bWFuIGFjdGlvbiBjYW4ndCBiZSBjb21wcmVoZW5kZWQgaXMgIGNvbnRyYWRpY3RvcnkgdG8gd2hhdCBpcyBwcm92aWRlZCBpbiB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Verstehen can be used to predict human  actions in future.  ",
        "option2" : " Results provided by Verstehen are context  specific.  ",
        "option3" : " Verstehen can give misleading results if not  applied properly.  ",
        "option4" : " The motivation of a person behind his  action can't be comprehended.  "
      }
    },
    {
      "index" : 31,
      "question" : " Which one of the following statements best reflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3BlbmluZyBsaW5lcyBvZiB0aGUgcGFzc2FnZSBzdHJlc3MgdGhlIG5lZWQgdG8gcmVmb3JtIHRoZSBlZHVjYXRpb24gc3lzdGVtICBpbiBJbmRpYSB3aXRoIHJlc3BlY3QgdG8gdGhlIGJyZWFkdGggYW5kIGRlcHRoIG9mIHN1YmplY3RzIGJlaW5nIGNob3NlbiBmb3Igc3R1ZHkgYW5kIHJlc2VhcmNoIC0gZnJvbSAgc2NpZW5jZSBhbmQgdGVjaG5vbG9neSB0byBodW1hbml0aWVzIGFuZCBzb2NpYWwgc2NpZW5jZXMuIEhvd2V2ZXIsIGl0IGRvZXMgbm90IHRhbGsgYWJvdXQgZWxlbWVudGFyeSAgZWR1Y2F0aW9uIGluIHBhcnRpY3VsYXIgYW5kIGhlbmNlIHRoaXMgb3B0aW9uIGlzIGluY29ycmVjdC4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBJbmRpYW5zIGtub3cgdmVyeSBsaXR0bGUgYWJvdXQgdGhlaXIgb3duIGNvdW50cnkgb3IgIHRoZSBjb2xvbmlhbCBwb3dlciB0aGF0IHJ1bGVkIEluZGlhLiBPbiB0aGUgc2FtZSBsaW5lcywgdGhlcmUgaXMgdmVyeSBsaXR0bGUgYXdhcmVuZXNzIGFib3V0IHRoZSBvdGhlciBtYWpvciAgY291bnRyaWVzIGxpa2UgQ2hpbmEsIEJyYXppbCBvciBSdXNzaWEuIFRoZSBwYXNzYWdlIHN0cmVzc2VzIHRoZSBuZWVkIGZvciBncmVhdGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlc2UgIGNvdW50cmllcyBhbmQgcmVzdCBvZiB0aGUgd29ybGQuIEhvd2V2ZXIsIHRoZSBwYXNzYWdlIGRvZXMgbm90IHN1Z2dlc3QgdGhhdCBJbmRpYSBuZWVkcyB0byBzcGVjaWZpY2FsbHkgIGxlYXJuIGZyb20gdGhlIGVkdWNhdGlvbiBzeXN0ZW1zIG9mIHRoZXNlIGNvdW50cmllcy4gIFNvLCB0aGlzIGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGMpIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIHNheXMgdGhhdCB3ZSBJbmRpYW5zIGtub3cgdmVyeSBsaXR0bGUgYWJvdXQgbm90IG9ubHkgb3VyIG93biBjb3VudHJ5ICBidXQgYWxzbyBhYm91dCBvdXIgY29sb25pemVyLiBXZSBhcmUgaWdub3JhbnQgYWJvdXQgb3RoZXIgbWFqb3IgbmF0aW9ucyBsaWtlIFJ1c3NpYSwgQ2hpbmEgb3IgQnJhemlsLiBUaGUgIHBhc3NhZ2UgaW5kaXJlY3RseSBzdHJlc3NlcyB0aGUgbmVlZCB0byB1bmRlcnN0YW5kIHRoZSBtYWpvciBwb3dlcnMgb2YgdGhlIHdvcmxkIGNsb3NlbHkuIFRoaXMgb3B0aW9uIGJlc3QgIGNhcHR1cmVzIHRoZSBlc3NlbmNlIGJlY2F1c2UgaXQgY292ZXJzIGJvdGggYXNwZWN0cyB3aGljaCBhcmUgbmVlZGVkIHRvIHJlZm9ybSBlZHVjYXRpb24gKCdFZHVjYXRpb24gaW4gIEluZGlhIG5lZWRzIHJvb3QgYW5kIGJyYW5jaCByZWZvcm0uLi4uJykgYW5kIHRoZSBlbWVyZ2luZyB1bmNlcnRhaW50aWVzIGluIHRoZSBnbG9iZSAoJy4uLi4gdGhlcmUgaXMgbm8gIGNvbmNlcnRlZCBhdHRlbXB0IHRvIHVuZGVyc3RhbmQgdGhlIHdvcmxkIG9yIGJlY29tZSBiZXR0ZXIgZXF1aXBwZWQgdG8gZmFjZSBpdC4nKS4gU28sIHRoaXMgb3B0aW9uIGlzIHRoZSAgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBpbiB0aGUgcGFzc2FnZSBvbiB0aGUgcm9sZSBvZiB0aGUgcXVvdGFzIGFuZCBwYXRyb25hZ2UtIGxhZGVuIHByZXNlbnQgaGlnaGVyIGVkdWNhdGlvbiBzeXN0ZW0gb24gdGhlIGVtcGxveW1lbnQgcmVhZGluZXNzIGxldmVscyBvZiB0aGUgZ3JhZHVhdGVzLiBUaGlzIG9wdGlvbiAgY291bGQgYmUgYW4gaW5mZXJlbmNlIGJ1dCBub3QgdGhlIGNydXguIEhlbmNlLCB0aGlzIGlzIG5vdCB0aGUgcmlnaHQgb3B0aW9uLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " There is an urgent need to improve  elementary education in India.  ",
        "option2" : " India can learn from the education systems  of China, Russia, and Brazil.  ",
        "option3" : " India needs to reform education to tackle  the future uncertainties of the globe.  ",
        "option4" : " Quotas and patronage in higher education  had made most of our graduates  unemployable.   "
      }
    },
    {
      "index" : 32,
      "question" : " Which one of the following statements best reflects the central idea of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgbGluZXMgJ0l0IGlzIGEgbWV0aG9kIG9mIGltcHJvdmluZyByZWxhdGlvbnMgYW1vbmdzdCBuYXRpb25zIC4uLi4uLi4uLiB3aGljaCAgaW5jcmVhc2VzIHRoZSBwcm9iYWJpbGl0eSBvZiBkZXNpcmVkIHJlbGF0aW9ucyBvZiB0cmFkZSBhbmQgY29tbWVyY2UsIGFzIHdlbGwgYXMgcG9saXRpY2FsIHJlbGF0aW9ucywgZHVlIHRvICB0aGUgYXR0cmFjdGlvbiB0aGF0IHRoaXMgY29uY2VwdCBnYXJuZXJzLicgVGhlcmVmb3JlLCBpdCBtYXkgaGVscCBpbiB0aGUgY3JlYXRpb24gb2YgYSBwZWFjZWZ1bCB3b3JsZC4gIEhvd2V2ZXIsIHRoZXJlJ3Mgbm8gZGlzY3Vzc2lvbiBpbiB0aGUgcGFzc2FnZSByZWdhcmRpbmcgdW5pbGF0ZXJhbCBvciBtdWx0aWxhdGVyYWwgd29ybGQgb3JkZXIuIFRoZXJlZm9yZSwgIHRoaXMgaXMgbm90IHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZGlzY3Vzc2VzIHRoZSBwcm9jZXNzIG9mIGN1bHR1cmFsIGV4Y2hhbmdlcyBhbW9uZyBuYXRpb25zIGluICBnZW5lcmFsIHdpdGhvdXQgZ29pbmcgaW50byBzcGVjaWZpYyBhc3BlY3RzIGxpa2UgdGhlIGRldmVsb3BtZW50YWwgbGV2ZWxzIG9mIG5hdGlvbnMgLSB3aGV0aGVyIGRldmVsb3BpbmcgIG9yIGRldmVsb3BlZC4gQWxzbywgdGhlIGJlbmVmaXRzIG9mIGN1bHR1cmFsIGV4Y2hhbmdlcyBhcmUgZXF1YWxseSBhdmFpbGFibGUgdG8gYWxsIG5hdGlvbnMgaXJyZXNwZWN0aXZlIG9mICB0aGVpciBkZXZlbG9wbWVudGFsIGxldmVscy4gU28sIHRvIHNheSB0aGF0IHRoaXMgaXMgdGhlIGNlbnRyYWwgaWRlYSBpcyBub3QgY29ycmVjdC4gIE9wdGlvbiAoYykgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgY29ycmVjdCBiZWNhdXNlIHRoZSBwYXNzYWdlIG5vdCBvbmx5IG1lbnRpb25zIHRoZSBpbXBvcnRhbmNlIG9mICBjdWx0dXJhbCBleGNoYW5nZXMgY29uY2VybmluZyB0aGUgbmF0aW9uLCBidXQgYWxzbyBvZiBpdHMgaW1wYWN0IG9uIHRoZSBpbmRpdmlkdWFscy4gVGhlIGFzcGVjdCBvZiB0aGUgIGluZGl2aWR1YWwgaW4gdGhlIHBhc3NhZ2UgaXMgJ1RoZSBjb25jZXB0IGlzIGVzc2VudGlhbGx5IGEgcHJvY2VzcyB0aGF0IGludm9sdmVzIGEgdHdvLXdheSB0cmFuc2ZlciBvZiBhbiAgaW5kaXZpZHVhbCB0byBhIGRpZmZlcmVudCBjb3VudHJ5IGZyb20gdGhlaXIgaG9tZSBjb3VudHJ5IHRvIHByb21vdGUgdGhlaXIgaG9tZSBjb3VudHJ5J3MgdmFsdWVzIGFuZCAgY3VsdHVyZSBhbmQgaW1iaWJlIHRoZSB2aXNpdGluZyBjb3VudHJ5J3MgdHJhZGl0aW9ucyBhbmQgd2F5IG9mIGxpZmUnLCB0aGlzIGxpbmUgZG9lcyBkaXNjdXNzIHRoZSBpbXBhY3Qgb2YgIGN1bHR1cmFsIGV4Y2hhbmdlIG9uIHRoZSBpbmRpdmlkdWFsLCBhcyB3ZWxsIGFzIHRoZSByb2xlIG9mIHRoZSBpbmRpdmlkdWFsIGluIGN1bHR1cmFsIGV4Y2hhbmdlLiBUaGVyZWZvcmUsICB0aGlzIGlzIHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgJ1RoZSBpZGVhIG9mIGluaXRpYXRpbmcgY3VsdHVyYWwgZXhjaGFuZ2UgcHJvZ3JhbXMgd2FzIGZpcnN0ICBoYXRjaGVkIGFmdGVyIHRoZSAybmQgV29ybGQgV2FyIHdoZW4gdGhlIHBlb3BsZSBvZiBkaWZmZXJlbnQgY291bnRyaWVzIHdhbnRlZCB0byB1bmlmeSBhZ2FpbnN0IHZpb2xlbmNlICAgICAgICAxMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYW5kIGhhdGUgYW1vbmcgbmF0aW9ucy4nIGRvZXMgaW5kaWNhdGUgdGhlIHBvdGVudGlhbCBvZiBjdWx0dXJhbCBkaXBsb21hY3ksIGJ1dCB0aGUgaWRlYSBoZXJlIGlzIHRvIGRldmVsb3AgIGdvb2QgcmVsYXRpb25zIHRocm91Z2ggYSBwYXJhbGxlbCBkaXBsb21hdGljIHJvdXRlLCBhbmQgbm90IHRvIHNvbHZlIGV4aXN0aW5nIGRpc3B1dGVzIGFtb25nIG5hdGlvbnMgcGVyIHNlLiAgVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Cultural exchanges can contribute to the  development of a peaceful, unilateral  world.  ",
        "option2" : " Cultural exchange became a necessity for  developing nations due to their  developmental needs.  ",
        "option3" : " Cultural exchange programs help in the  wholesome development of an individual  and strengthen international relations  between countries.  ",
        "option4" : " In the post-second world war period,  cultural diplomacy gained significance to  solve the existing disputes between the  nations.          9                                                                                                                                                             "
      }
    },
    {
      "index" : 33,
      "question" : " Mr. Singh, a policeman, was chasing a criminal on his motorcycle at a speed of 50 km/h. The criminal was riding on a bicycle at a speed of 30 km/h ahead of him. If the policeman takes 15 min to catch the criminal, then find the extra distance travelled by Mr. Singh to catch the criminal (i.e. the difference in the distances covered by the thief and the policeman)? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IFNwZWVkIG9mIHBvbGljZW1hbiA9IDUwIGttL2ggIFNwZWVkIG9mIGNyaW1pbmFsID0gMzAga20vaCAgIFJlbGF0aXZlIHNwZWVkIG9mIE1yLiBTaW5naCBhbmQgY3JpbWluYWwgPSA1MCAtIDMwID0gMjAga20vaCAg74GcIEV4dHJhIERpc3RhbmNlIHRyYXZlbGxlZCBieSBNci4gU2luZ2ggdG8gY2F0Y2ggdGhlIGNyaW1pbmFsID0gMjAgeCAoMTUvNjApID0gNSBrbSAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10 km ",
        "option2" : " 9 km ",
        "option3" : " 12 km ",
        "option4" : " 5 km  "
      }
    },
    {
      "index" : 34,
      "question" : " In a horse race, for the first round Kalicharan makes his horse run at an average speed of 40 km/h, and in the second round he increases the speed by 50%. What is the average speed of the horse in the whole race? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IFdoZW4gYSBwZXJzb24gdHJhdmVscyBhIGRpc3RhbmNlIGF0IGEgc3BlZWQgb2YgeCBrbS9oIGFuZCBhZ2FpbiB0aGUgc2FtZSBkaXN0YW5jZSBhdCBhIHNwZWVkIG9mIHkga20vaCwgIHRoZW4gdGhlIGF2ZXJhZ2Ugc3BlZWQgb2YgdGhlIGpvdXJuZXkgaXMgZ2l2ZW4gYnkgKDJ4eSkvKHggKyB5KS4gIFNwZWVkIG9mIGhvcnNlIGluIGZpcnN0IHJvdW5kID0gNDAga20vaCAgU3BlZWQgb2YgaG9yc2UgaW4gc2Vjb25kIHJvdW5kID0gKDQwIHggMTUwKS8xMDAgPSA2MCBrbS9ociAgQW5kIHRoZSBkaXN0YW5jZSB0cmF2ZWxsZWQgaXMgc2FtZS4gIFNvLCBhdmVyYWdlIHNwZWVkID0gKDIgw5cgNDAgw5cgNjApLyg0MCArIDYwKSA9IDIgw5cgNCDDlyA2ID0gNDgga20vaHIgICAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 38 km/h ",
        "option2" : " 52 km/h ",
        "option3" : " 48 km/h ",
        "option4" : " 64 km/ hr  "
      }
    },
    {
      "index" : 35,
      "question" : " Nitin is preparing for sub-inspector running test, where he needs to run 5 km. If he runs at a speed 20 km/hr and after every kilometer he takes a rest for 3 min, then how much time will he take to finish the race?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IE5pdGluIGlzIHJ1bm5pbmcgYXQgYSBzcGVlZCAyMCBrbS9ociBhbmQgYWZ0ZXIgZXZlcnkga2lsb21ldGVyLCBoZSB0YWtlcyBhIHJlc3QgZm9yIDMgbWluLiAgIE51bWJlciBvZiB0aW1lcyBOaXRpbiB0YWtlcyBhIHJlc3QgaW4gNSBrbSA9IDQgICBSZXN0IHRpbWUgPSBudW1iZXIgb2YgdGltZXMgcmVzdCB3YXMgdGFrZW4gw5cgdGltZSBmb3IgZWFjaCByZXN0ID0gNCDDlyAzID0gMTIgbWluICDvgZwgVG90YWwgdGltZSB0byBjb3ZlciA1IGttID0gWyg1LzIwKSDDlyA2MF0gbWluICsgMTIgbWluICAgPSAxNSBtaW4gKyAxMiBtaW4gPSAyNyBtaW4gIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 29 min  ",
        "option2" : " 27 min ",
        "option3" : " 30 min ",
        "option4" : " 31 min "
      }
    },
    {
      "index" : 36,
      "question" : " Mridul is a seller of cattle feeds. In 108 kg of cattle feed, he had some quantity of Rs. 60/kg type cattle feed and some quantity of Rs. 72/kg type cattle feed. By selling the mixture at Rs. 68.25/kg he gained a profit of 5%. What quantity of Rs. 72/kg type cattle feed did he add? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IENvc3QgcHJpY2Ugb2YgdHdvIHR5cGVzIG9mIGNhdHRsZSBmZWVkcyBpcyBScy4gNjAva2cgYW5kIFJzLiA3Mi9rZy4gIEJ5IHNlbGxpbmcgdGhlIG1peHR1cmUgYXQgUnMuIDY4LjI1L2tnIGhlIGdhaW5lZCBwcm9maXQgb2YgNSUuIFNvLCBjb3N0IHByaWNlIG9mIHRoZSBtaXh0dXJlID0gNjguMjUgw5cgICgxMDAvMTA1KSA9IFJzLiA2NSAgQXBwbHlpbmcgQWxsZWdhdGlvbiBNZXRob2Q6ICAgUmF0aW8gb2YgdGhlIHF1YW50aXR5IG9mIFJzLiA2MC9rZyBhbmQgUnMuIDcyL2tnIHR5cGVzIG9mIGNhdHRsZSBmZWVkcyA9NyA6IDUgIFNvLCBRdWFudGl0eSBvZiBScy4gNzIva2cgdHlwZSBvZiBjYXR0bGUgZmVlZCA9IDEwOCDDlyA1Lyg1ICsgNykgPSA0NSBrZyAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 45 kg ",
        "option2" : " 35 kg ",
        "option3" : " 30 kg ",
        "option4" : " 58 kg  "
      }
    },
    {
      "index" : 37,
      "question" : " In two schools A and B, boys and girls are in the ratio of 4 : 5 and 3 : 1 respectively. A group of students has to be made for cleaning the beach. In what ratio should the students be selected from the two schools to get equal number of boys and girls in the group? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEZyYWN0aW9uIG9mIGJveXMgaW4gc2Nob29sIEEgPSA0Lyg0ICsgNSkgPSA0LzkgIEZyYWN0aW9uIG9mIGJveXMgaW4gc2Nob29sIEIgPSAzLygzICsgMSkgPSAzLzQgIEZyYWN0aW9uIG9mIGJveXMgaW4gZ3JvdXAgPSAxLzIgICAgICAgIDExICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcHBseWluZyBBbGxlZ2F0aW9uIE1ldGhvZCwgd2UgZ2V0OiAgIFNvLCByZXF1aXJlZCByYXRpbyA9ICgxLzQpIDogKDEvMTgpID0gOSA6IDIgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7 : 2 ",
        "option2" : " 8 : 1 ",
        "option3" : " 9 : 2 ",
        "option4" : " 10 : 1   Direction for the following 2 (two) items:   The following two items are based on the graph given  below, which shows the number of books purchased by  four friends P, Q, R and S in the years 2020 and 2021  for study. Study the graph and answer the two items  that follow.           10                                                                                                                                                             "
      }
    },
    {
      "index" : 38,
      "question" : " What is the ratio of the number of books purchased by R and S together in 2020, to the number of books purchased by P and Q together in the year 2020? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IE51bWJlciBvZiBib29rcyBwdXJjaGFzZWQgYnkgUiBhbmQgUyB0b2dldGhlciBpbiAyMDIwID0gNjAgKyA4MCA9IDE0MCAgTnVtYmVyIG9mIGJvb2tzIHB1cmNoYXNlZCBieSBQIGFuZCBRIHRvZ2V0aGVyIGluIDIwMjAgPSA0MCArIDkwID0gMTMwICBSZXF1aXJlZCByYXRpbyA9IDE0MCA6IDEzMCA9IDE0IDogMTMgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 14 : 15 ",
        "option2" : " 13 : 14 ",
        "option3" : " 14 : 13 ",
        "option4" : " 15 : 14  "
      }
    },
    {
      "index" : 39,
      "question" : " The number of books purchased by Q in the year 2020 is approximately what percent more/less than those purchased by S in the year 2021? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IE51bWJlciBvZiBib29rcyBwdXJjaGFzZWQgYnkgUSBpbiAyMDIwID0gOTAgICBOdW1iZXIgb2YgYm9va3MgcHVyY2hhc2VkIGJ5IFMgaW4gMjAyMSA9IDU1ICAgUmVxdWlyZWQgcGVyY2VudCA9IFsoOTAgLSA1NSkvNTVdIMOXIDEwMCA9ICgzNS81NSkgw5cgMTAwID0gNjMuNjMlIChhcHByb3gpICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 17% ",
        "option2" : " 40% ",
        "option3" : " 63% ",
        "option4" : " 30%  "
      }
    },
    {
      "index" : 40,
      "question" : " In a game, average score of 25 players is 80, but when double checked some mistakes were found. It was found that in actuality a player scored 65 more and one other player scored 40 less than was earlier counted. What would be the correct average? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEF2ZXJhZ2Ugc2NvcmUgb2YgMjUgcGxheWVycyA9IDgwICBUb3RhbCBzY29yZSBvZiAyNSBwbGF5ZXJzID0gODAgw5cgMjUgPSAyMDAwICBBZnRlciBjb3JyZWN0aW9uLCB0b3RhbCBzY29yZSBvZiAyNSBwbGF5ZXJzID0gMjAwMCArIDY1IC0gNDAgPSAyMDI1ICBDb3JyZWN0IGF2ZXJhZ2UgPSAyMDI1LzI1ID0gODEgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 243 ",
        "option2" : " 49 ",
        "option3" : " 121 ",
        "option4" : " 81  "
      }
    },
    {
      "index" : 41,
      "question" : " The average of 80 numbers is 68. If two numbers 36 and 74 are removed, then what would be the new average? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEF2ZXJhZ2Ugb2YgODAgbnVtYmVycyA9IDY4ICBTdW0gb2YgODAgbnVtYmVycyA9IDY4IMOXIDgwID0gNTQ0MCAgSWYgMzYgYW5kIDc0IGFyZSByZW1vdmVkLCB0aGVuIHN1bSBvZiB0aGUgcmVtYWluaW5nIDc4IG51bWJlcnMgPSA1NDQwIC0gKDM2ICsgNzQpID0gNTMzMCAgUmVzdWx0YW50IGF2ZXJhZ2Ugb2YgcmVtYWluaW5nIDc4IG51bWJlcnMgPSA1MzMwLzc4ID0gNjguMzMgICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 71.03 ",
        "option2" : " 68.33 ",
        "option3" : " 69.46 ",
        "option4" : " 72.13  Directions for the following 5 (five) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 42,
      "question" : " Based on the above passage, the following assumptions have been made: 1. Negative consequences of climate change are concentrated in West and Central Africa where a disproportionately large number of low-income countries are located.  2. Coastal degradation is a major challenge in Africa, and this is expected to worsen due to the rise in the sea level.  Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICIgQnkgdGhlIG1pZGRsZSBvZiB0aGlzIGNlbnR1cnksIG1ham9yIGNlcmVhbCBjcm9wcyAgZ3Jvd24gYWNyb3NzIEFmcmljYSB3aWxsIGJlIGFkdmVyc2VseSBpbXBhY3RlZCwgYWxiZWl0IHdpdGggcmVnaW9uYWwgdmFyaWFiaWxpdHkgYW5kIGRpZmZlcmVuY2VzIGJldHdlZW4gIGNyb3BzLi4uLi4uLi4uLiBhIHJlZHVjdGlvbiBpbiBtZWFuIHlpZWxkIG9mIDEzJSBpcyBwcm9qZWN0ZWQgaW4gV2VzdCBhbmQgQ2VudHJhbCBBZnJpY2EsIDExJSBpbiBOb3J0aCAgQWZyaWNhLCBhbmQgOCUgaW4gRWFzdCBhbmQgU291dGhlcm4gQWZyaWNhLiIgVGh1cywgaXQgaXMgdmFsaWQgdG8gYXNzdW1lIHRoYXQgV2VzdCBhbmQgQ2VudHJhbCBBZnJpY2Egd2lsbCAgYmUgdGhlIG1vc3QgYWZmZWN0ZWQgcmVnaW9ucyBpbiBBZnJpY2EsIGJ1dCB3ZSBjYW5ub3QgYXNzdW1lIHRoYXQgYSBkaXNwcm9wb3J0aW9uYXRlbHkgbGFyZ2UgbnVtYmVyIG9mICBsb3ctaW5jb21lIGNvdW50cmllcyBhcmUgbG9jYXRlZCBpbiB0aGlzIHJlZ2lvbiwgYXMgdGhlIHBhc3NhZ2UgZG9lcyBub3QgZGlzY3VzcyBhbnl0aGluZyByZWxhdGVkIHRvICBpbmNvbWUgbGV2ZWxzIG9mIHRoZSBjb3VudHJpZXMgbG9jYXRlZCBoZXJlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIHRoZSBpbXBhY3Qgb2YgdGhlIHJpc2UgaW4gc2VhIGxldmVsIG9uIGNvYXN0YWwgIGRlZ3JhZGF0aW9uLiBTbywgdGhpcyBzdGF0ZW1lbnQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICAgICAgICAxMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : "  1 and 2 only  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 43,
      "question" : " Based on the above passage, which of the following are true concerning agriculture in Africa?  1. Millet and sorghum will witness an increase in production in future due to their greater resilience to heat-stress conditions.  2. Decline in the nutritional value of the crops in the future.  3. Likely decline in profits and/or employment in the agricultural sector in the future.   4. Serious risk of decline in agricultural productivity in the future.  Select the correct answer from the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdNaWxsZXQgYW5kIHNvcmdodW0gYXJlIHRoZSBtb3N0IHByb21pc2luZyBjcm9wcywgd2l0aCAgYSB5aWVsZCBsb3NzIGJ5IDIwNTAgb2YganVzdCA1JSBhbmQgOCUuJyBCdXQgd2UgY2Fubm90IGJlIGRlZmluaXRpdmUgdGhhdCBtaWxsZXQgYW5kIHNvcmdodW0gd2lsbCB3aXRuZXNzICBhbiBpbmNyZWFzZSBpbiBwcm9kdWN0aW9uLiBBcyBwZXIgdGhlIHBhc3NhZ2UgdGhlaXIgcHJvZHVjdGlvbiB3aWxsIGRlY2xpbmUgdG9vLCB0aG91Z2ggbGVzcyBkcmFzdGljYWxseS4gU28sICB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZG9lc24ndCBtZW50aW9uIHRoYXQgdGhlcmUgd2lsbCBiZSBhIGRlY2xpbmUgaW4gdGhlIG51dHJpdGlvbmFsIHZhbHVlICBvZiB0aGUgY3JvcHMgaW4gdGhlIGZ1dHVyZS4gVGhlIHBhc3NhZ2Ugb25seSBtZW50aW9ucyB0aGF0IG1ham9yIGNlcmVhbCBjcm9wcyBncm93biBhY3Jvc3MgQWZyaWNhIHdpbGwgYmUgIGFkdmVyc2VseSBpbXBhY3RlZC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywiIEFncmljdWx0dXJlIGlzIHRoZSBiYWNrYm9uZSBvZiBBZnJpY2EncyBlY29ub215IGFuZCAgYWNjb3VudHMgZm9yIHRoZSBtYWpvcml0eSBvZiBsaXZlbGlob29kcyBhY3Jvc3MgdGhlIGNvbnRpbmVudC4uLi4uLiBLZXkgcmlza3MgdG8gYWdyaWN1bHR1cmUgaW5jbHVkZSAuLi4uLi4uLi4uICByZXN1bHRpbmcgaW4gc2VyaW91cyBhZHZlcnNlIGVmZmVjdHMgb24gZm9vZCBzZWN1cml0eSBhbmQgb24gbGl2ZWxpaG9vZHMgYXQgdGhlIHJlZ2lvbmFsLCBuYXRpb25hbCBhbmQgIGluZGl2aWR1YWwgaG91c2Vob2xkIGxldmVscy4iIFRodXMsIHRoZXJlIGlzIGEgcmlzayBvZiBmYWxsaW5nIHByb2ZpdHMgYW5kIGxpdmVsaWhvb2QgaW4gdGhlIGFncmljdWx0dXJhbCBzZWN0b3IgIGluIEFmcmljYSBpbiB0aGUgZnV0dXJlLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAiIEFmcmljYSBpcywgdGhlcmVmb3JlLCBhbiBleHBvc3VyZSBhbmQgdnVsbmVyYWJpbGl0eSAnaG90ICBzcG90JyBmb3IgY2xpbWF0ZSB2YXJpYWJpbGl0eSBhbmQgY2hhbmdlIGltcGFjdHMuIElQQ0MgcHJvamVjdGlvbnMgc3VnZ2VzdCB0aGF0IHdhcm1pbmcgc2NlbmFyaW9zIHJpc2sgIGhhdmluZyBkZXZhc3RhdGluZyBlZmZlY3RzIG9uIGNyb3AgcHJvZHVjdGlvbiBhbmQgZm9vZCBzZWN1cml0eS4iIFRodXMsIHRoZXJlIGlzIGEgc2VyaW91cyByaXNrIG9mIGEgZGVjbGluZSAgaW4gYWdyaWN1bHR1cmFsIHByb2R1Y3Rpdml0eSBpbiB0aGUgZnV0dXJlIGluIEFmcmljYS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1 and 4 only  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 3 and 4 only  "
      }
    },
    {
      "index" : 44,
      "question" : " Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. Warmer temperatures increase conditions for the survivability of agricultural pests.  2. More bio-engineered crops need to be introduced in Africa to ensure food security.    Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoaXMgaW5mZXJlbmNlIGlzIHZhbGlkIGJlY2F1c2UgdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCB0aGUga2V5IHJpc2tzIHRvICBhZ3JpY3VsdHVyZSBpbmNsdWRlIGluY3JlYXNlZCBwZXN0IGRhbWFnZSB0byBmb29kIHN5c3RlbSBpbmZyYXN0cnVjdHVyZS4gV2UgY2FuIGluZmVyIHRoYXQgcGVzdCBkYW1hZ2UgIHdpbGwgaW5jcmVhc2UgZHVlIHRvIHRoZWlyIGluY3JlYXNlIGluIG51bWJlcnMgaS5lLiwgYmV0dGVyIHN1cnZpdmFiaWxpdHkuIFRoZXJlZm9yZSwgdGhpcyBvcHRpb24gaXMgY29ycmVjdC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBkaXNjdXNzaW9uIG9mIHRoZSBwYXNzYWdlIGlzIGNlbnRyZWQgb24gdGhlIHJpc2tzIG9mIGNsaW1hdGUgY2hhbmdlIG9uICBhZ3JpY3VsdHVyZSBpbiBBZnJpY2EuIFRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gYW55IGNsaW1hdGUgY2hhbmdlIGFkYXB0YXRpb24gbWVhc3VyZXMgdGhhdCBuZWVkIHRvICBiZSBpbXBsZW1lbnRlZCBpbiBBZnJpY2EuIEl0IG9ubHkgbWVudGlvbnMgdGhlIG5hbWUgb2YgY2xpbWF0ZSByZXNpc3RhbnQgY2VyZWFscyBsaWtlIG1pbGxldCBhbmQgc29yZ2h1bSAgdGhhdCBjYW4gc3Vydml2ZSB0aGUgaGFyc2ggY2xpbWF0aWMgY2hhbmdlcyBpbiB0aGUgbG9uZyBydW4uIFRoaXMgb3B0aW9uIHN1Z2dlc3RzIGEgcG9zc2libGUgcHJhY3RpY2FsICBzb2x1dGlvbiBob3dldmVyOyBpdCBjYW5ub3QgYmUgaW5mZXJyZWQgZnJvbSB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 45,
      "question" : " What is the crucial message conveyed by the above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3B0aW9uIG1lbnRpb25zIHByb3Zpc2lvbnMgb2YgbW9yZSBmdW5kcyBieSB0aGUgc3RhdGUgZ292ZXJubWVudCBmb3IgcG9zdC0gZGlzYXN0ZXIgcmVjb3ZlcnkuIFRoZSBwYXNzYWdlLCBob3dldmVyLCBkb2VzIG5vdCBkaXNjdXNzIHRoZSBpc3N1ZSBvZiBmdW5kaW5nIGZvciByZWNvdmVyeS4gIEhlbmNlLCB0aGlzICBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gU28sIHRoaXMgaXMgbm90IHRoZSBjcnVjaWFsIG1lc3NhZ2Ugb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdFdmVuIGluIGluc3RhbmNlcyB3aGVyZSBTdGF0ZXMgaGF2ZSBtb3ZlZCBiZXlvbmQgdGhpcywgbG9uZy10ZXJtICByZWNvdmVyeSBtZWFzdXJlcyBoYXZlIGxhcmdlbHkgZm9jdXNlZCBvbiBhZGRyZXNzaW5nIHBoeXNpY2FsIHZ1bG5lcmFiaWxpdGllcyBzdWNoIGFzIHRoZSBwcm92aXNpb24gb2YgIHNoZWx0ZXInLCBzZWVtIHRvIHN1Z2dlc3QgdGhhdCB0aGlzIGlzIHRoZSBjb3JyZWN0IGFuc3dlciwgYnV0IHRoZSBsaW5lcyAnV2hpbGUgdGhlc2UgaW50ZXJ2ZW50aW9ucyBhcmUgIGNydWNpYWwsIGxvbmctdGVybSByZWNvdmVyeSBuZWVkcyBtdWNoIG1vcmUsIGJ1dCBpdCBpcyB0cmlja3kgYmVjYXVzZSBldmVyeWRheSB2dWxuZXJhYmlsaXRpZXMgc3RlbW1pbmcgIGZyb20gcG92ZXJ0eSBhcmUgYWNjZW50dWF0ZWQgYnkgcmVjdXJyaW5nIGhhemFyZHMnLCBzaG93IHRoYXQgcmVzb2x1dGlvbiBvZiBwb3ZlcnR5IGlzIG1vcmUgaW1wb3J0YW50ICB0aGFuIHByb3Zpc2lvbiBvZiBzaGVsdGVyICh3aGljaCBpcyBhIHNob3J0IHRlcm0gbWVhc3VyZSkgZm9yIGxvbmcgdGVybSByZWNvdmVyeSBmcm9tIGRpc2FzdGVycy4gVGhlcmVmb3JlLCAgdGhpcyBpcyBub3QgdGhlIGNvcnJlY3QgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZG9lcyBub3Qgc3RhdGUgdGhhdCB0aGUgY3VycmVudCB1bmRlcnN0YW5kaW5nIG9mIGxvbmctdGVybSBtZWFzdXJlcyAgaXMgaW5zdWZmaWNpZW50LCBzbyBhcyB0byByZXF1aXJlIGZ1cnRoZXIgc3R1ZGllcy4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCBjcnVjaWFsIG1lc3NhZ2Ugb2YgdGhlICBwYXNzYWdlLiAgICBPcHRpb24gKGQpIGlzIGNvcnJlY3QuIFRoaXMgb3B0aW9uIGNhcHR1cmVzIHRoZSByZWFsIGVzc2VuY2Ugb2YgdGhlIHBhc3NhZ2UuIFRoZSBsaW5lcyAnV2hpbGUgdGhlc2UgIGludGVydmVudGlvbnMgYXJlIGNydWNpYWwsIGxvbmctdGVybSByZWNvdmVyeSBuZWVkcyBtdWNoIG1vcmUsIGJ1dCBpdCBpcyB0cmlja3kgYmVjYXVzZSBldmVyeWRheSAgdnVsbmVyYWJpbGl0aWVzIHN0ZW1taW5nIGZyb20gcG92ZXJ0eSBhcmUgYWNjZW50dWF0ZWQgYnkgcmVjdXJyaW5nIGhhemFyZHMnLiBUaGVzZSBsaW5lcyByZWZsZWN0IHRoZSAgbWVzc2FnZSB0aGF0IGxvbmctdGVybSByZWNvdmVyeSB3b3VsZCBiZSBjaGFsbGVuZ2luZyB1bmxlc3MgdGhlIHZ1bG5lcmFiaWxpdGllcyBvZiBwb3ZlcnR5IGFyZSByZXNvbHZlZC4gIFRoZXJlZm9yZSwgdGhpcyBvcHRpb24gY29ycmVjdGx5IGNvbnZleXMgdGhlIGNydWNpYWwgbWVzc2FnZSBvZiB0aGUgcGFzc2FnZS4gICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " State governments need to invest more in  post-disaster recovery focusing on long- term measures. ",
        "option2" : " Loss of shelter due to disasters is the most  critical hindrance in long-term recovery. ",
        "option3" : " Further studies are required for giving  solutions to long-term recovery from  disasters.  ",
        "option4" : " Long-term recovery from disasters is  difficult without the resolution of poverty.         12                                                                                                                                                             "
      }
    },
    {
      "index" : 46,
      "question" : " Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. Practice of political philosophy has and will always be open to change because of the nature of humans to seek philosophical justification.  2. Methods of political philosophers reflect the state of political affairs of the society.  Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnUG9saXRpY2FsIHBoaWxvc29waHkgaGFzIGJlZW4gcHJhY3RpY2VkIGZvciBhcyBsb25nIGFzIGh1bWFuIGJlaW5ncyAgaGF2ZSByZWdhcmRlZCB0aGVpciBjb2xsZWN0aXZlIGFycmFuZ2VtZW50cyBub3QgYXMgaW1tdXRhYmxlIGFuZCBwYXJ0IG9mIHRoZSBuYXR1cmFsIG9yZGVyIGJ1dCBhcyAgcG90ZW50aWFsbHkgb3BlbiB0byBjaGFuZ2UsIGFuZCB0aGVyZWZvcmUgYXMgcmVxdWlyaW5nIHBoaWxvc29waGljYWwganVzdGlmaWNhdGlvbicuIFRoZSBwYXNzYWdlIGFsc28gIG1lbnRpb25zIHRoYXQgcG9saXRpY2FsIHBoaWxvc29waHkgaXMgaW5mbHVlbmNlZCBieSB0aGUgZ2VuZXJhbCBwaGlsb3NvcGhpY2FsIHRlbmRlbmNpZXMgb2YgdGhlIGVwb2NoIGFuZCAgYWxzbyBieSB0aGUgcHJlc3NpbmcgcG9saXRpY2FsIGlzc3VlcyBvZiB0aGUgZGF5LiBCb3RoIHRoZXNlIGZhY3RvcnMgYXJlIGV2ZXIgY2hhbmdpbmcgYW5kIGhlbmNlIHBvbGl0aWNhbCAgcGhpbG9zb3BoeSB3aWxsIGFsc28sIGJ5IGltcGxpY2F0aW9uLCBiZSBvcGVuIHRvIGNoYW5nZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBY2NvcmRpbmcgdG8gdGhlIHBhc3NhZ2UsIHBvbGl0aWNhbCBwaGlsb3NvcGh5IGhhcyBhIGRpdmVyc2l0eSBvZiBmb3JtcyBkdWUgdG8gdHdvICByZWFzb25zLiBPbmUgYmVpbmcgdGhhdCBtZXRob2RzIGFuZCBhcHByb2FjaGVzIHVzZWQgYnkgdGhlIHBvbGl0aWNhbCBwaGlsb3NvcGhlcnMgcmVmbGVjdCB0aGUgZ2VuZXJhbCAgICAgICAgMTMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBoaWxvc29waGljYWwgdGVuZGVuY2llcyBvZiB0aGVpciBlcG9jaDsgYW5kIHNlY29uZGx5LCB0aGUgcG9saXRpY2FsIHBoaWxvc29waGVycycgYWdlbmRhIGlzIGluZmx1ZW5jZWQgYnkgIHRoZSBwcmVzc2luZyBwb2xpdGljYWwgaXNzdWVzIG9mIHRoZSBkYXkuIFRoaXMgaW1wbGllcyB0aGF0IG1ldGhvZHMgb2YgcG9saXRpY2FsIHBoaWxvc29waGVycyBjYW4gcmVmbGVjdCB0aGUgIHN0YXRlIG9mIHBvbGl0aWNhbCBhZmZhaXJzIG9mIHNvY2lldHkuIFNvIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2  ",
        "option2" : " 2 only  ",
        "option3" : " 1 only  ",
        "option4" : " None  "
      }
    },
    {
      "index" : 47,
      "question" : " A mixture of 90 litres of milk and water has 19% of water in it. What quantity of water should be added to the mixture, so as to make the percentage of water 46% in the resulting mixture? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IFBlcmNlbnRhZ2Ugb2Ygd2F0ZXIgaW4gdGhlIG9yaWdpbmFsIG1peHR1cmUgPSAxOSUgIFBlcmNlbnRhZ2Ugb2Ygd2F0ZXIgaW4gdGhlIHJlc3VsdGluZyBtaXh0dXJlID0gNDYlICAgUmF0aW8gb2YgdGhlIHF1YW50aXR5IG9mIG9yaWdpbmFsIG1peHR1cmUgdG8gdGhlIHF1YW50aXR5IG9mIHdhdGVyIHRvIGJlIGFkZGVkID0gNTQvMjcgPSAyLzEgIFNvLCBRdWFudGl0eSBvZiB3YXRlciB0aGF0IHNob3VsZCBiZSBhZGRlZCBpbiB0aGUgb3JpZ2luYWwgbWl4dHVyZSA9IDkwIMOXIDEvMiA9IDQ1IGxpdHJlcyAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 30 litres ",
        "option2" : " 45 litres ",
        "option3" : " 60 litres ",
        "option4" : " 25 litres "
      }
    },
    {
      "index" : 48,
      "question" : " For making Sambhar bada, if we use two parts of rice and one part of urad dal, then find the percentage of rice and urad dal in that dish? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IFJhdGlvIG9mIHJpY2UgaW4gdGhlIGRpc2ggPSBRdWFudGl0eSBvZiBSaWNlL1RvdGFsIFF1YW50aXR5ID0gMi8zICAgUGVyY2VudGFnZSBvZiByaWNlIGluIHRoZSBkaXNoID0gKDIvMykgw5cgMTAwID0gKDIwMC8zKSUgPSA2Ni42NyUgIFJhdGlvIG9mIHVyYWQgZGFsIGluIHRoZSBkaXNoID0gUXVhbnRpdHkgb2YgVXJhZCBkYWwvVG90YWwgUXVhbnRpdHkgPSAxLzMgIFBlcmNlbnRhZ2Ugb2YgdXJhZCBkYWwgaW4gdGhlIGRpc2ggPSAoMS8zKSDDlyAxMDAgPSAoMTAwLzMpJSA9IDMzLjMzJSAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 166.67%, 133.33% ",
        "option2" : " 68.33%, 33.33% ",
        "option3" : " 66.67%, 33.33% ",
        "option4" : " 66.67%, 36.67%  "
      }
    },
    {
      "index" : 49,
      "question" : " In a mixture of purified water and normal water, the proportion of purified water is 60% by weight. If from 80 gm of the mixture, 20 gm is taken out and 6 gm of normal water is added to the mixture, then find the ratio of purified water and normal water in the new mixture? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEluIGEgbWl4dHVyZSBvZiBwdXJpZmllZCB3YXRlciBhbmQgbm9ybWFsIHdhdGVyLCB0aGUgcHJvcG9ydGlvbiBvZiBwdXJpZmllZCB3YXRlciBpcyA2MCUgYnkgd2VpZ2h0LiAgIFNvLCByYXRpbyBvZiBQdXJpZmllZCB3YXRlciBhbmQgTm9ybWFsIHdhdGVyID0gNjAlIDogNDAlID0gMyA6IDIgIFRvdGFsIHF1YW50aXR5IG9mIG1peHR1cmUgPSA4MCBnbSAgUXVhbnRpdHkgb2YgcHVyaWZpZWQgd2F0ZXIgPSA4MCDDlyAzLygzICsgMikgPSA0OCBnbSAgUXVhbnRpdHkgb2Ygbm9ybWFsIHdhdGVyID0gODAgw5cgMi8oMyArIDIpID0gMzIgZ20gIE5vdywgMjAgZ20gb2YgbWl4dHVyZSBpcyB0YWtlbiBvdXQgZnJvbSA4MCBnbSBvZiBtaXh0dXJlLiAgIFNvLCBxdWFudGl0eSBvZiBwdXJpZmllZCB3YXRlciBpbiAyMCBnbSBvZiBtaXh0dXJlID0gMjAgw5cgMy8oMyArIDIpID0gMTIgZ20gICBTbywgcXVhbnRpdHkgb2Ygbm9ybWFsIHdhdGVyIGluIDIwIGdtIG9mIG1peHR1cmUgPSAyMCDDlyAyLygzICsgMikgPSA4IGdtICAgTm93LCBRdWFudGl0eSBvZiBwdXJpZmllZCB3YXRlciBsZWZ0IGluIHRoZSBtaXh0dXJlID0gNDggLSAxMiA9IDM2IGdtICBRdWFudGl0eSBvZiBub3JtYWwgd2F0ZXIgbGVmdCBpbiB0aGUgbWl4dHVyZSA9IDMyIC0gOCA9IDI0IGdtICBBbmQgNiBnbSBvZiBub3JtYWwgd2F0ZXIgaXMgYWRkZWQgaW4gdGhlIG1peHR1cmUuICBTbywgUXVhbnRpdHkgb2Ygbm9ybWFsIHdhdGVyIGluIHRoZSBuZXcgbWl4dHVyZSA9IDI0ICsgNiA9IDMwIGdtICBSYXRpbyBvZiBwdXJpZmllZCB3YXRlciBhbmQgbm9ybWFsIHdhdGVyIGluIHRoZSBuZXcgbWl4dHVyZSA9IDM2IDogMzAgPSA2IDogNSAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 : 2 ",
        "option2" : " 5 : 6 ",
        "option3" : " 4 : 5 ",
        "option4" : " 6 : 5  "
      }
    },
    {
      "index" : 50,
      "question" : " Ratio of the speeds of Priyanka and Priya is 4:5. If Priya takes 44 minutes to reach a destination, then find the time taken by Priyanka to reach the same destination? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IFJhdGlvIG9mIHRoZSBzcGVlZHMgb2YgUHJpeWFua2EgYW5kIFByaXlhID0gNDo1ICAgUmF0aW8gb2YgdGhlIHRpbWUgdGFrZW4gYnkgUHJpeWFua2EgYW5kIFByaXlhID0gNTo0ICBTbywgbGV0IHRoZSB0aW1lIHRha2VuIGJ5IFByaXlhbmthIHRvIHJlYWNoIHRoZSBkZXN0aW5hdGlvbiA9IDV4ICBUaW1lIHRha2VuIGJ5IFByaXlhIHRvIHJlYWNoIHRoZSBkZXN0aW5hdGlvbiA9IDR4ICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgNHggPSA0NCAgb3IsIHggPSAxMSAgU28sIFRpbWUgdGFrZW4gYnkgUHJpeWFua2EgdG8gcmVhY2ggdGhlIGRlc3RpbmF0aW9uID0gNXggPSA1IMOXIDExID0gNTUgbWludXRlcyAgSGVuY2UsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgIDE0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 36 minutes ",
        "option2" : " 42 minutes ",
        "option3" : " 55 minutes ",
        "option4" : " 56 minutes  "
      }
    },
    {
      "index" : 51,
      "question" : " Akash and Sourabh start running simultaneously from the ends (P and Q respectively) of a straight track of length 1000 m, with their speeds being in the ratio 7 : 3 respectively. Whenever Akash reaches either of the ends, he turns around and continues running at the same speed. Whenever Sourabh meets Akash, he turns around and continues running at the same speed. When Akash comes back at P for the first time, how far (in meters) is Sourabh from point Q? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IERpc3RhbmNlIG9mIFBRID0gMTAwMCBtICBTcGVlZCByYXRpbyA9IDcgOiAzICBBa2FzaCBhbmQgU291cmFiaCBzdGFydCB0b2dldGhlciB3aXRoIHNwZWVkcyA3eCBhbmQgM3ggcmVzcGVjdGl2ZWx5LiAgICAgICAgICAgIHggICBQICAgICAgUiAgUyAgUSAgICAgIDcwMG0gICAgIDMwMG0gIFdoZW4gdGhleSBmaXJzdCBtZWV0IGF0IHBvaW50IFIsIHRoZW4sICBEaXN0YW5jZSByYXRpbyA9IFNwZWVkIHJhdGlvID0gNy8zIChTaW5jZSwgVGltZSBpcyBzYW1lKSAgU28sIFBSID0gNzAwIG0sIFJRID0gMzAwIG0gIEF0IHBvaW50IFIgQWthc2ggY29udGludWVzIHJ1bm5pbmcgdG93YXJkcyBRLCB3aGlsZSBTb3VyYWJoIHR1cm5zIGFyb3VuZCBhbmQgY29udGludWVzIHJ1bm5pbmcgd2l0aCAgdGhlIHNhbWUgc3BlZWQgdG93YXJkcyBRIGFuZCBhZ2FpbiB0aGV5IG1lZXQgYXQgcG9pbnQgUy4gIFNvdXJhYmggcnVucyBmcm9tIFIgLT4gUywgd2hpbGUgQWthc2ggcnVucyBmcm9tIFIgLT4gUyAtPiBRIC0+IFMgIExldCBRUyA9IHgga20gIERpc3RhbmNlIHRyYXZlbGxlZCBieSBTb3VyYWJoIGZyb20gUiB0byBTID0gMzAwIC0geCAgRGlzdGFuY2UgdHJhdmVsbGVkIGJ5IEFrYXNoID0gMzAwICsgeCAgRGlzdGFuY2UgcmF0aW8gPSBTcGVlZCByYXRpbyAoU2luY2UsIFRpbWUgaXMgc2FtZSkgICgzMDAgKyB4KS8oMzAwIC0geCkgPSA3LzMgIOKHkiA5MDAgKyAzeCA9IDIxMDAgLSA3eCAg4oeSIDEweCA9IDIxMDAgLSA5MDAgICDih5IgMTB4ID0gMTIwMCAg4oeSIHggPSAxMjAwLzEwID0gMTIwIG0gIE5vdywgZGlzdGFuY2UgdHJhdmVsbGVkIGJ5IEFrYXNoIHRvIHJlYWNoIHBvaW50IFAgZnJvbSBwb2ludCBTLCBEMSA9IDEwMDAgLSAxMjAgPSA4ODAgbSAgQXQgdGhpcyBwb2ludCBvZiB0aW1lLCB0aGUgZGlzdGFuY2Ugb2YgU291cmFiaCBmcm9tIHBvaW50IFEgYmUgRDIuICBEaXN0YW5jZSByYXRpbyA9IFNwZWVkIHJhdGlvIChTaW5jZSwgVGltZSBpcyBzYW1lKSAgRDIvRDEgPSAzLzcgIOKHkiBEMi84ODAgPSAzLzcgIOKHkiBEMiA9IDMgw5cgODgwLzcgPSAzNzcuMSBtICBTbywgZGlzdGFuY2Ugb2YgU291cmFiaCBmcm9tIHBvaW50IFEgd2lsbCBiZSAzNzcuMSBtLiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 377.1 m ",
        "option2" : " 1000 m ",
        "option3" : " 933.5 m ",
        "option4" : " 700.5 m         13                                                                                                                                                             "
      }
    },
    {
      "index" : 52,
      "question" : " Simran completes her journey in 10 hours. If she completes half of her journey at a speed of 11 km/hr and the other half of the journey at a speed of 14 km/hr, then find the total distance in km. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IExldCB0b3RhbCBkaXN0YW5jZSB0byBiZSBjb3ZlcmVkIGJlIDJkIGttLiAgQSAgICAgQyAgICAgQiAgICAgZCAgICAgZCAgU3BlZWQgb2YgU2ltcmFuIGluIGZpcnN0IGhhbGYgb2YgaGVyIGpvdXJuZXkgPSAxMSBrbS9ociAgU3BlZWQgb2YgU2ltcmFuIGluIHNlY29uZCBoYWxmIG9mIGhlciBqb3VybmV5ID0gMTQga20vaHIgIFRpbWUgdGFrZW4gYnkgU2ltcmFuIHRvIGNvdmVyIGZpcnN0IGhhbGYgb2YgaGVyIGpvdXJuZXkgPSBkLzExICBUaW1lIHRha2VuIGJ5IFNpbXJhbiB0byBjb3ZlciBzZWNvbmQgaGFsZiBvZiBoZXIgam91cm5leSA9IGQvMTQgIFRvdGFsIHRpbWUgdGFrZW4gdG8gY29tcGxldGUgdGhlIGpvdXJuZXkgPSAxMCBob3VycyAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgIGQvMTEgKyBkLzE0ID0gMTAgIOKHkiAyNWQvKDE0IMOXIDExKSA9IDEwICDih5IgMjVkID0gMTQgw5cgMTEgw5cgMTAgIOKHkiBkID0gMTQgw5cgMTEwLzI1ICDih5IgZCA9IDMwOC81ID0gNjEuNiBrbSAgVG90YWwgam91cm5leSA9IDJkID0gMiDDlyA2MS42ID0gMTIzLjIga20gIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 61.6 km ",
        "option2" : " 51.3 km ",
        "option3" : " 102.6 km ",
        "option4" : " 123.2 km  "
      }
    },
    {
      "index" : 53,
      "question" : " The pie-chart given below shows the total population of a village, and percent distribution of population of different communities in that village. Study the pie-chart and answer the question that follows. Total population of Hindu, Muslims and Sikhs is how much percent more than the total population of Christians and Others? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IFN1bSBvZiB0aGUgcGVyY2VudGFnZXMgb2YgdGhlIHBvcHVsYXRpb24gb2YgSGluZHUsIE11c2xpbXMgYW5kIFNpa2hzID0gMjEgKyAyNiArIDE2ID0gNjMlICAgICAgICAxNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3VtIG9mIHRoZSBwZXJjZW50YWdlcyBvZiB0aGUgcG9wdWxhdGlvbiBvZiBDaHJpc3RpYW5zIGFuZCBPdGhlcnMgPSAxOSArIDE4ID0gMzclICBSZXF1aXJlZCBwZXJjZW50ID0gWyg2MyAtIDM3KS8zN10gw5cgMTAwID0gNzAuMjclICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 21.3% ",
        "option2" : " 70.27% ",
        "option3" : " 50.65% ",
        "option4" : " 28.5% "
      }
    },
    {
      "index" : 54,
      "question" : " In a factory, ratio of male and female workers is 8 : 5. There are 750 literate females. If 20% male and 25% female workers are illiterate, then what is the number of literate males? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IE1hbGUgd29ya2VycyBsaXRlcmFjeSUgPSAoMTAwIC0gMjApJSA9IDgwJSAgRmVtYWxlIHdvcmtlcnMgbGl0ZXJhY3klID0gKDEwMCAtIDI1KSUgPSA3NSUgIFJhdGlvIG9mIG1hbGUgYW5kIGZlbWFsZSB3b3JrZXJzIGlzIDggOiA1LiAgIE51bWJlciBvZiBsaXRlcmF0ZSBtYWxlcyA9IFs4eCDDlyAoODAvMTAwKV0gPSAzMngvNSAgTnVtYmVyIG9mIGxpdGVyYXRlIGZlbWFsZXMgPSBbNXggw5cgKDc1LzEwMCldID0gMTV4LzQgIFRoZSBudW1iZXIgb2YgbGl0ZXJhdGUgZmVtYWxlcyBpbiB0aGUgZmFjdG9yeSBpcyA3NTAuICBTbywgMTV4LzQgPSA3NTAgIE9yIHggPSA3NTAgw5cgNC8xNSA9IDIwMCAgU28sIE51bWJlciBvZiBsaXRlcmF0ZSBtYWxlcyA9IDMyeC81ID0gMzIgw5cgMjAwLzUgPSAxMjgwICBIZW5jZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1250 ",
        "option2" : " 1220 ",
        "option3" : " 1240 ",
        "option4" : " 1280  "
      }
    },
    {
      "index" : 55,
      "question" : " The following graph shows the number of houses (in thousands) built under PMAY in different states. Study the graph and answer the question that follows. Number of houses made in state F is what percent of the total number houses made in all the states together?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IE51bWJlciBvZiBob3VzZXMgbWFkZSBpbiBzdGF0ZSBGID0gMyB0aG91c2FuZCAgIE51bWJlciBvZiBob3VzZXMgbWFkZSBpbiBhbGwgdGhlIHN0YXRlcyA9IDYgKyAxMCArIDQgKyAxMiArIDggKyAzICsgNyA9IDUwIHRob3VzYW5kICAg74GcUmVxdWlyZWQgcGVyY2VudGFnZSA9ICgzLzUwKSDDlyAxMDAgPSA2JSAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 6.5% ",
        "option2" : " 6% ",
        "option3" : " 8% ",
        "option4" : " 7.6%         14                                                                                                                                                             "
      }
    },
    {
      "index" : 56,
      "question" : " For flood affected rehabilitation, 9 people contributed some wheat, their average contribution being 450 kg. One other person also made a contribution, such that he contributed 450 kg more than the average of all these 10 persons. Find the total contribution made by these 10 people. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IExldCB0aGUgbmV3IGF2ZXJhZ2UgY29udHJpYnV0aW9uIG9mIDEwIHBlb3BsZSBiZSB4IGtncy4gIFRoZW4sIGFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICDih5IgWzQ1MCDDlyA5ICsgKHggKyA0NTApXS8xMCA9IHggIOKHkiBbNDA1MCArIDQ1MCArIHgpXSAvMTAgPSB4ICDih5IgKDQ1MDAvMTApICsgKHgvMTApID0geCAg4oeSIDQ1MCA9IHggLSAoeC8xMCkgIOKHkiA0NTAgPSA5eC8xMCAg4oeSIHggPSA0NTAwLzkgPSA1MDAgIFNvLCBhdmVyYWdlIGNvbnRyaWJ1dGlvbiBvZiAxMCBwZW9wbGUgaXMgNTAwIGtnLiAgSGVuY2UsIHRvdGFsIGNvbnRyaWJ1dGlvbiBvZiAxMCBwZW9wbGUgPSAxMCDDlyA1MDAgPSA1MDAwIGtnICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5000 kg ",
        "option2" : " 4500 kg ",
        "option3" : " 4050 kg ",
        "option4" : " 9000 kg  "
      }
    },
    {
      "index" : 57,
      "question" : " What will be the average of a, a + 2, a + 4, a + 6, ........., a + 12, where a ɛ N. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IGEsIGEgKyAyLCBhICsgNCwgYSArIDYsIC4uLi4uLi4uLiwgYSArIDEyLCB3aGVyZSBhIMmbIE4gICBXZSBrbm93IHRoYXQsIEF2ZXJhZ2Ugb2YgYSwgYiwgYyAuLi4uLi4uLi4uICwgbSBjb25zZWN1dGl2ZSBldmVuIG9yIG9sZCBudW1iZXJzID0gKGEgKyBtKS8yICBTbywgUmVxdWlyZWQgYXZlcmFnZSA9IChhICsgYSArIDEyKS8yID0gYSArIDYgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " a + 6 ",
        "option2" : " 2a + 12 ",
        "option3" : " a + 12 ",
        "option4" : " a + 24  "
      }
    },
    {
      "index" : 58,
      "question" : " The following graph shows the number of people (in thousand) reading three different types of newspapers in the given six years. Study the graph and answer the question that follows. Number of people reading paper H in the year 2016 is what percent of the total number of people reading all newspapers in the year 2019? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IE51bWJlciBvZiBwZW9wbGUgcmVhZGluZyBuZXdzcGFwZXIgSCBpbiAyMDE2ID0gMzAwMDAgIFRvdGFsIG51bWJlciBvZiBwZW9wbGUgcmVhZGluZyBhbGwgdGhlIG5ld3NwYXBlcnMgaW4gdGhlIHllYXIgMjAxOSA9IDEyMDAwMCAgSGVuY2UsIHJlcXVpcmVkIHBlcmNlbnQgPSAoMzAwMDAvMTIwMDAwKSDDlyAxMDAgPSAyNSUgIFNvLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50% ",
        "option2" : " 35% ",
        "option3" : " 25% ",
        "option4" : " 28% "
      }
    },
    {
      "index" : 59,
      "question" : " In a fund collection for flood affected rehabilitation, there was a total collection of Rs. 7700 in notes having denomination of Rs. 100, Rs. 50 and Rs. 20 in the ratio of 4 : 5 : 6.  Consider the following statements. 1. Total number of all notes is 120. 2. There are 40 notes of Rs. 100. 3. The sum of the number of notes of Rs. 50 and Rs. 20 is 120.  Which of the above statements is/are correct? Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IExldCB0aGUgbnVtYmVyIG9mIG5vdGVzIG9mIGRlbm9taW5hdGlvbiBScy4gMTAwLCBScy4gNTAgYW5kIFJzLiAyMCBiZSA0eCwgNXggYW5kIDZ4IHJlc3BlY3RpdmVseS4gICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgNHggw5cgMTAwICsgNXggw5cgNTAgKyA2eCDDlyAyMCA9IDc3MDAgIE9yIDc3MHggPSA3NzAwICBPciB4ID0gNzcwMC83NzAgPSAxMCAgICAgICAgMTYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNvLCBudW1iZXIgb2YgUnMuIDEwMCBub3RlcyA9IDR4ID0gNCDDlyAxMCA9IDQwICBOdW1iZXIgb2YgUnMuIDUwIG5vdGVzID0gNXggPSA1IMOXIDEwID0gNTAgIE51bWJlciBvZiBScy4gMjAgbm90ZXMgPSA2eCA9IDYgw5cgMTAgPSA2MCAgU28sIFRvdGFsIG51bWJlciBvZiBub3RlcyA9IDQwICsgNTAgKyA2MCA9IDE1MCAgU3VtIG9mIHRoZSBudW1iZXIgb2Ygbm90ZXMgb2YgUnMuIDUwIGFuZCBScy4gMjAgZGVub21pbmF0aW9uID0gNTAgKyA2MCA9IDExMCAgVGhlIG51bWJlciBvZiBScy4gMTAwIG5vdGVzIGlzIDQwLiAgSGVuY2UsIG9ubHkgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICBTbywgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only 1 and 2 ",
        "option2" : " Only 2 ",
        "option3" : " Only 2 and 3 ",
        "option4" : " All 1, 2 and 3  "
      }
    },
    {
      "index" : 60,
      "question" : " Price of 15 shirts and 21 pants is equal to the price of 18 shirts and 12 pants. What is the ratio of the prices of one shirt and one pant? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IExldCBwcmljZSBvZiBvbmUgc2hpcnQgYmUgUnMuIFMgYW5kIHByaWNlIG9mIG9uZSBwYW50IGJlIFJzLiBQLiAgIFByaWNlIG9mIDE1IHNoaXJ0cyBhbmQgMjEgcGFudHMgaXMgZXF1YWwgdG8gdGhlIHByaWNlIG9mIDE4IHNoaXJ0cyBhbmQgMTIgcGFudHMuICAgU28sIDE1UyArIDIxUCA9IDE4UyArIDEyUCAg4oeSIDIxUCAtIDEyUCA9IDE4UyAtIDE1UyAg4oeSIDlQID0gM1MgIOKHkiBTL1AgPSA5LzMgPSAzLzEgPSAzIDogMSAgIEhlbmNlLCB0aGUgcmF0aW8gb2YgdGhlIHByaWNlcyBvZiBvbmUgc2hpcnQgYW5kIG9uZSBwYW50IGlzIDMgOiAxLiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 3 ",
        "option2" : " 4 : 5 ",
        "option3" : " 3 : 1 ",
        "option4" : " 5 : 4  "
      }
    },
    {
      "index" : 61,
      "question" : " The following graph shows the quantity of the exports of Rice, Pulses and Cashew (in lakh kg) in the given four years. Study the graph and answer the question that follows. What is the ratio of the percentage increase in rice export and cashew export from the year 2013 to 2014? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IFJpY2UgZXhwb3J0IGluIHllYXIgMjAxMyA9IDUwMCAoTGFraCBrZykgIFJpY2UgZXhwb3J0IGluIDIwMTQgPSA3MDAgKExha2gga2cpICBQZXJjZW50YWdlIGluY3JlYXNlIGluIGV4cG9ydCBvZiByaWNlIGZyb20gdGhlIHllYXIgMjAxMyB0byAyMDE0ID0gWyg3MDAgLSA1MDApLzUwMF0gw5cgMTAwID0gNDAlICAgU2ltaWxhcmx5LCBDYXNoZXcgZXhwb3J0IGluIHllYXIgMjAxMyA9IDQwMCAoTGFraCBLZykgIENhc2hldyBleHBvcnQgaW4geWVhciAyMDE0ID0gNTAwIChMYWtoIEtnKSAgUGVyY2VudGFnZSBpbmNyZWFzZSBpbiBleHBvcnQgb2YgY2FzaGV3IGZyb20gdGhlIHllYXIgMjAxMyB0byAyMDE0ID0gWyg1MDAgLSA0MDApLzQwMF0gw5cgMTAwID0gMjUlICBTbywgUmVxdWlyZWQgcmF0aW8gPSA0MC8yNSA9IDgvNSA9IDggOiA1ICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 : 1 ",
        "option2" : " 3 : 2 ",
        "option3" : " 4 : 6 ",
        "option4" : " 8 : 5         15                                                                                                                                                              Directions for the following 6 (six) items:  Read the following four passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 62,
      "question" : " Based on the above passage, the following assumptions have been made: 1. There is a need for more learning in robotics regarding the interpretation of human actions. 2. There should not be any confusion that ethical outcomes should be one of the priorities of the designers of autonomous systems. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAiRmFyIGZld2VyIGxlYXJuIGZvdW5kYXRpb25hbCBjb25jZXB0cyBmcm9tIGNvZ25pdGl2ZSBzY2llbmNlIG9uICBkZWNpc2lvbiBtYWtpbmcgYnkgaHVtYW4gYWdlbnRzLCBodW1hbiBuYXZpZ2F0aW9uIGFuZCB3YXktZmluZGluZywgaHVtYW4gY29tbXVuaWNhdGlvbiwgYW5kICBodW1hbiBpbnRlcnByZXRhdGlvbiBvZiBpbnRlbnRpb25hbCBiZWhhdmlvdXIgdGhhdCBjb3VsZCBiZSB1c2VkIHRvIGhlbHAgcm9ib3RzIGludGVycHJldCBodW1hbiAgYWN0aW9ucycsIGluZGljYXRlIHRoYXQgdGhlIGN1cnJlbnQga25vd2xlZGdlIHJlZ2FyZGluZyByb2JvdGljIGludGVycHJldGF0aW9uIG9mIGh1bWFuIGFjdGlvbnMgaXMgbm90ICBhZGVxdWF0ZS4gVGhpcyBjYWxscyBmb3IgbW9yZSBsZWFybmluZyBpbiB0aGlzIGZpZWxkLiBIZW5jZSB0aGlzIGFzc3VtcHRpb24gaXMgdmFsaWQuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdBbGwgYXV0b25vbW91cyBzeXN0ZW1zIG1heSBoYXZlIGV0aGljYWwgaW1wYWN0cywgYW5kICBhbGwgc2hvdWxkIGJlIGRlc2lnbmVkIHRvIGF2b2lkIHVuZXRoaWNhbCBvdXRjb21lcyIuIFRoaXMgbGluZSBzaG93cyB0aGF0IGV0aGljYWwgaW1wYWN0cyBvZiByb2JvdHMgYXJlICBpbXBvcnRhbnQgaW4gZGVzaWduaW5nLiBIZW5jZSB0aGlzIGFzc3VtcHRpb24gaXMgdmFsaWQuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 63,
      "question" : " Which one of the following statements best reflects the crux of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3BlbmluZyBsaW5lcyBvZiB0aGUgcGFzc2FnZSBtZW50aW9ucyBzb21lIG9mIHRoZSBhcmVhcyBpbiB3aGljaCByb2JvdHMgYXJlICBvcGVyYXRpbmcgaW4gdGhlIHJlYWxtIG9mIGh1bWFuIGJlaW5ncyAtIGxpa2Ugd29ya2luZyBpbiBmYWN0b3JpZXMgYW5kIGNhcmluZyBmb3IgdGhlIHZ1bG5lcmFibGUuIEhvd2V2ZXIsICBpdCBkb2VzIG5vdCBzYXkgdGhhdCBodW1hbiBkZXBlbmRlbmNlIG9uIHJvYm90cyB3aWxsIGJlIGFuIGluZXZpdGFibGUgZmVhdHVyZSBvZiB0aGUgZnV0dXJlIHdvcmxkLiBIZW5jZSAgdGhpcyBzdGF0ZW1lbnQgZG9lcyBub3QgcmVmbGVjdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZG9lcyBub3Qgc3RhdGUgd2l0aCBjZXJ0YWludHkgdGhhdCB0aGUgaW5jb3Jwb3JhdGlvbiBvZiByb2JvdHMgd2lsbCAgaW52YXJpYWJseSBsZWFkIHRvIHVuZXRoaWNhbCBvdXRjb21lcywgYXMgc3RhdGVkIGluIHRoZSBsaW5lcyAnQWxsIGF1dG9ub21vdXMgc3lzdGVtcyBtYXkgaGF2ZSBldGhpY2FsICBpbXBhY3RzLCBhbmQgYWxsIHNob3VsZCBiZSBkZXNpZ25lZCB0byBhdm9pZCB1bmV0aGljYWwgb3V0Y29tZXMnLiBBbHNvLCB0aGUgaXNzdWUgb2YgZXRoaWNhbCBzY2llbnRpc3RzIGhhcyAgbm90IGJlZW4gZGlzY3Vzc2VkLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgbGluZXMgJ1RoZXNlIGVtZXJnaW5nIHNvY2lhbCBjb250ZXh0cyBhZGQgbmV3IHJlcXVpcmVtZW50cyB0byB0aGUgIGtub3dsZWRnZSB0aGF0IHN1Y2Nlc3NmdWwgcm9ib3RpY2lzdHMgbmVlZC4gTWFueSByb2JvdGljaXN0cyBsZWFybiBiYXNpY3Mgb2YgaHVtYW4tbWFjaGluZSBpbnRlcmFjdGlvbiAgYW5kIHVzYWJpbGl0eS4gRmFyIGZld2VyIGxlYXJuIGZvdW5kYXRpb25hbCBjb25jZXB0cyAuLi4uLi4uIGh1bWFuIGludGVycHJldGF0aW9uIG9mIGludGVudGlvbmFsIGJlaGF2aW91ciAgdGhhdCBjb3VsZCBiZSB1c2VkIHRvIGhlbHAgcm9ib3RzIGludGVycHJldCBodW1hbiBhY3Rpb25zLicsIHN0cmVzcyB0aGUgbmVlZCBmb3Igcm9ib3RpY2lzdHMgdG8gdXBkYXRlIHRoZWlyICBrbm93bGVkZ2UgcmVnYXJkaW5nIGh1bWFuLW1hY2hpbmUgaW50ZXJhY3Rpb24gc28gdGhhdCBpdCBjYW4gY2F0ZXIgdG8gdGhlIGVtZXJnaW5nIHNvY2lhbCBjb250ZXh0cy4gVGhpcyAgICAgICAgMTcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZGljYXRlcyBhIHByb2FjdGl2ZSBhcHByb2FjaCB0byB0aGUgZnV0dXJlIHJhdGhlciB0aGFuIGEgcGVzc2ltaXN0aWMgb25lIHRoYXQgaG9sZHMgdGhhdCBpcyBkaWZmaWN1bHQgdG8gIGFzY2VydGFpbiBmdXR1cmUgc29jaWFsIGNvbnRleHRzIGluIHRoZSBodW1hbi1tYWNoaW5lIGludGVyYWN0aW9uLiBUaGVyZWZvcmUsIHRoaXMgaXMgbm90IHRoZSBjb3JyZWN0IGNydXguICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIlJvYm90cyBpbmNyZWFzaW5nbHkgb3BlcmF0ZSBhbW9uZyBwZW9wbGUsIGFuZCB0aGV5IG5vdyAgd29yayBhbG9uZ3NpZGUgdXMgaW4gZmFjdG9yaWVzIGFuZCB3YXJlaG91c2VzLCBzaGFyZSBvdXIgc3RyZWV0cyBhbmQgc2lkZXdhbGtzLCBjbGVhbiBvdXIgaG9tZXMsIGFuZCAgY2FyZSBmb3IgdGhlIG1vc3QgdnVsbmVyYWJsZSBhbW9uZyB1cycgYW5kICdBbGwgYXV0b25vbW91cyBzeXN0ZW1zIG1heSBoYXZlIGV0aGljYWwgaW1wYWN0cywgYW5kIGFsbCAgc2hvdWxkIGJlIGRlc2lnbmVkIHRvIGF2b2lkIHVuZXRoaWNhbCBvdXRjb21lcy4gRGVzaWduZXJzIGJlYXIgc29tZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlaXIgZGVzaWducywgIGV2ZW4gaW4gYSB3b3JsZCB3aGVyZSB0aGUgYXV0b25vbW91cyBzeXN0ZW1zIHRoZXkgZGVzaWduIGV2ZW50dWFsbHkgZGVzaWduIG90aGVyIGF1dG9ub21vdXMgc3lzdGVtcycuICBUaGUgZ2l2ZW4gbGluZXMgc2hvdyB0aGF0IHRoZSBkZXNpZ24gb2YgdGhlIHJvYm90cyBmb3IgYXZvaWRpbmcgdW5ldGhpY2FsIG91dGNvbWVzIHNob3VsZCBiZSBnaXZlbiAgaW1wb3J0YW5jZS4gVGh1cywgdGhpcyBpcyB0aGUgY29ycmVjdCBjcnV4IG9mIHRoZSBwYXNzYWdlLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Dependence of humans on robots is going  to be the future of human society.  ",
        "option2" : " Implementation of robots in human society  shall be done by ethical scientists. ",
        "option3" : " It is difficult to ascertain the future social  contexts in the sphere of human-machine  interaction.  ",
        "option4" : " With the increased use of robots for  humans, the ethical dimension of their  design and functionality should be given  due consideration. "
      }
    },
    {
      "index" : 64,
      "question" : " Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. It is not possible to double the income of every farmer in the country.   2. Government should use the policy of subsidies to ensure minimum production costs of the farmers. 3. Most of the farmers in the country may not receive the benefits of the agricultural policy. Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgbGluZXMgJ0Zhcm0gaW5jb21lcyBjYW4sIHJlYWxpc3RpY2FsbHkgIHNwZWFraW5nLCBiZSBkb3VibGVkLCBvciB0cmlwbGVkIG9ubHkgZm9yIHRob3NlIHRydWx5IGRlcGVuZGVudCBvbiBhZ3JpY3VsdHVyZSBhbmQgaGF2aW5nIGVub3VnaCBsYW5kIHRvICBwcm9kdWN0aXZlbHkgZGVwbG95IGxhYm91ciBhbmQgY2FwaXRhbCByZXNvdXJjZXMnLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlIHBhc3NhZ2Ugbm93aGVyZSAgZGlzY3Vzc2VzIHN1YnNpZGllcyBpbiBnZW5lcmFsIG9yIGluIHRoZSBjb250ZXh0IG9mIG1pbmltaXppbmcgcHJvZHVjdGlvbiBjb3N0cy4gU28sIHRoaXMgaXMgbm90IHRoZSBjb3JyZWN0ICBpbmZlcmVuY2UuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBcyB0aGUgcGFzc2FnZSBtZW50aW9ucywgIlRoZSAzMCBtaWxsaW9uIGZhcm1lcnMgaW4gSW5kaWEgYXJlIHRoZSBvbmVzICBwb3NzZXNzaW5nIG9uZSBoZWN0YXJlIG9yIG1vcmUgbGFuZCwgd2hpY2ggaXMgdGhlIG1pbmltdW0gaG9sZGluZyByZXF1aXJlZCBmb3IgYWdyaWN1bHR1cmUgcGVyIHNlIHRvICBnZW5lcmF0ZSBhIG1ham9yIHNoYXJlIG9mIGFueSBmYW1pbHkncyBpbmNvbWUuIEl0IGFsc28gbWVhbnMgdGhhdCAnYWdyaWN1bHR1cmUgcG9saWN5JyBzaG91bGQgcHJpbWFyaWx5ICB0YXJnZXQgdGhlc2UgMzAgbWlsbGlvbiBob3VzZWhvbGRzIiAtICB0aGlzIGltcGxpZXMgdGhhdCB0aGUgcmVzdCBvZiB0aGUgZmFybWVycywgaS5lLiwgNjAtNjUgbWlsbGlvbiAgaG91c2Vob2xkcyBvZiBmYXJtZXJzIHBvc3Nlc3NpbmcgbGVzcyB0aGFuIG9uZSBoZWN0YXJlIG9mIGxhbmQgbWF5IG5vdCByZWNlaXZlIHRoZSBiZW5lZml0cyBvZiB0aGUgcG9saWN5ICBhcyB0aGUgcG9saWN5IGlzIG5vdCB0YXJnZXRpbmcgdGhlbSBhcyBwZXIgdGhlIHBhc3NhZ2UuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 65,
      "question" : " On the basis of the passage given above, the following assumptions have been made: 1. Current level of technology is not adequate for the efficient working of Metaverse. 2. To create a truly connected and attractive universe or Metaverse, quantum computing, mature block chain technology, stable cryptocurrencies and protocols around NFTs are a must. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdCbHVldG9vdGggbGFja3MgcmFuZ2UsIHJhdGUsIGFuZCByZWxpYWJpbGl0eS4gQ3VycmVudCAgZ2VuZXJhdGlvbnMgb2YgV2lGaSBvZmZlciB0aGUgcmVxdWlyZWQgc3BlZWQgYnV0IHN1ZmZlciBmcm9tIGNvbmdlc3Rpb24gYW5kIGhpZ2ggbGF0ZW5jaWVzIG9uY2UgbXVsdGlwbGUgIGRldmljZXMgYXJlIGFkZGVkLicgIGFuZCBhbHNvICdUaGUgbW9zdCBwcmVzc2luZyBtYXR0ZXIgaXMgcHJvdmlkaW5nICdtZXRhdmVyc2UgZ3JhZGUnIHViaXF1aXRvdXMgIGNvbm5lY3Rpdml0eS4nIFRoZXNlIHN0YXRlbWVudHMgaW1wbHkgdGhhdCB0aGUgY3VycmVudCBsZXZlbCBvZiB0ZWNobm9sb2d5IGlzIG5vdCBhZGVxdWF0ZSBmb3IgdGhlIGVmZmljaWVudCAgd29ya2luZyBvZiB0aGUgbWV0YXZlcnNlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gIEFsdGhvdWdoIHRoZSBwYXNzYWdlIG1lbnRpb25zIHRoZSBuZWVkIHRvIGJ1aWxkIGFuIGVmZmljaWVudCBpbmZyYXN0cnVjdHVyZSAgdGhhdCBzdXBwb3J0cyA1RyBhbmQgaGlnaC1lbmQgdGVjaG5vbG9neSBsaWtlIGEgbWV0YXZlcnNlLCBpdCBub3doZXJlIG1lbnRpb25zIHRoZSBuYW1lcyBvZiAgdGVjaG5vbG9naWVzIGxpa2UgcXVhbnR1bSBjb21wdXRpbmcsIG1hdHVyZSBibG9jayBjaGFpbiB0ZWNobm9sb2d5LCBzdGFibGUgY3J5cHRvY3VycmVuY2llcyBvciBORlRzLiAgTW9yZW92ZXIsIGl0IGRvZXMgbm90IHNheSB0aGF0IHRoZXNlIHRlY2hub2xvZ2llcyBhcmUgbWFuZGF0b3J5IHByZS1yZXF1aXNpdGVzIGZvciBtZXRhdmVyc2UuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 66,
      "question" : " Consider the following suggestions made by the author to make metaverse an integral part of people's lives? 1. Providing 'metaverse grade' ubiquitous connectivity. 2. Replacing outdated technologies like Bluetooth and WiFi with better technologies, such as LiFi Which of the above is/are the most rational and practical suggestions made by the author? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucywgJ0xvd2VyaW5nIHRoZSBiYXJyaWVycyB0byBlbnRyeSBmb3IgY29uc3VtZXJzICB3aWxsIGJlIGNyaXRpY2FsIGluIG1ha2luZyB0aGUgbWV0YXZlcnNlIGEgdGhyaXZpbmcgZWNvc3lzdGVtLiBUaGUgbW9zdCBwcmVzc2luZyBtYXR0ZXIgaXMgcHJvdmlkaW5nICAnbWV0YXZlcnNlIGdyYWRlJyB1YmlxdWl0b3VzIGNvbm5lY3Rpdml0eS4nIEhlbmNlIHN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgYXMgdGhvdWdoIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnQmx1ZXRvb3RoIGxhY2tzIHJhbmdlLCByYXRlLCBhbmQgcmVsaWFiaWxpdHkuICBDdXJyZW50IGdlbmVyYXRpb25zIG9mIFdpRmkgb2ZmZXIgdGhlIHJlcXVpcmVkIHNwZWVkIGJ1dCBzdWZmZXIgZnJvbSBjb25nZXN0aW9uIGFuZCBoaWdoIGxhdGVuY2llcyBvbmNlICBtdWx0aXBsZSBkZXZpY2VzIGFyZSBhZGRlZC4nLCBpdCBpcyBub3Qgc3VnZ2VzdGVkIHRoYXQgdGhleSBhcmUgb3V0ZGF0ZWQuIEZ1cnRoZXIsIHRoZSBwYXNzYWdlIGRvZXMgbm90ICBpbXBseSB3aGV0aGVyIHRoZXkgbmVlZCB0byBiZSByZXBsYWNlZCB3aXRoIExpRmkuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " 1 only ",
        "option3" : " 1 and 2 ",
        "option4" : " Neither 1 nor 2         17                                                                                                                                                             "
      }
    },
    {
      "index" : 67,
      "question" : " Which of the following statements best reflects the central idea of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgb2YgdGhlIHBhc3NhZ2UgdGFsayBhYm91dCB0aGUgbXVsdGlmYXJpb3VzLCBtdXR1YWxseSAgaW50ZXJzZWN0aW5nIGlzc3VlcyB0aGF0IGxpZSBpbiB0aGUgcGF0aCBvZiBhY2hpZXZpbmcgc3VzdGFpbmFibGUgZGV2ZWxvcG1lbnQgZ29hbHMuIFRoYXQgdGhlc2UgZ29hbHMgY2Fubm90ICBiZSBhY2hpZXZlZCBieSBhbnlvbmUgd29ya2luZyBhbG9uZSBpcyBvYnZpb3VzIGFuZCBsb2dpY2FsLiBIb3dldmVyLCBpdCBpcyBub3QgdGhlIGNlbnRyYWwgaWRlYSBvZiB0aGUgIHBhc3NhZ2UuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMgYXQgdGhlIGJlZ2lubmluZywgJ0FsbCAxNyBTREdzLCBzZXQgYXQgdGhlIFVOIEdlbmVyYWwgIEFzc2VtYmx5IGluIDIwMTUsIGFyZSBpbiBqZW9wYXJkeSBkdWUgdG8gdGhlIGNsaW1hdGUgY3Jpc2lzLCB0aGUgQ09WSUQtMTkgcGFuZGVtaWMgYW5kIGFuIGluY3JlYXNlIGluICB0aGUgbnVtYmVyIG9mIGNvbmZsaWN0cyB3b3JsZHdpZGUuJyBJbiB0aGUgc3Vic2VxdWVudCBzdGF0ZW1lbnRzLCB0aGUgcGFzc2FnZSBzdGF0ZXMgaG93IHRoZSBwYW5kZW1pYyAgICAgICAgMTggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhcyBjYXVzZWQgZXhjZXNzIGRlYXRocywgYW5kIGhvdyB0aGUgZWNvbm9taWMgc2hvY2sgaGFzIHB1c2hlZCBtb3JlIHBlb3BsZSBpbnRvIHBvdmVydHkuIEl0IGFsc28gc3RhdGVzICBob3cgR3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGFyZSBzZXQgdG8gcmlzZS4gUmVhZCBjb2xsZWN0aXZlbHksIGl0IGltcGxpZXMgdGhhdCB0aGUgU0RHIHRhcmdldHMgYXJlIGF0ICBkYW5nZXIgb2Ygc2xpcHBpbmcgYXdheSBmcm9tIHJlYWNoLiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0IGFzIHRob3VnaCB0aGUgcGFzc2FnZSBtZW50aW9ucyB0aGF0IHRoZSBhY2hpZXZlbWVudCBvZiBTREdzIGFyZSBpbiBqZW9wYXJkeSAgZHVlIHRvIHRoZSBjbGltYXRlIGNyaXNpcywgdGhlIENPVklELTE5IHBhbmRlbWljIGFuZCBhbiBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIGNvbmZsaWN0cyB3b3JsZHdpZGUsICBpdCBjYW5ub3QgYmUgY2F0ZWdvcmljYWxseSBzYWlkIHRoYXQgdGhlIFNERyB0YXJnZXRzIGNhbm5vdCBiZSBhY2hpZXZlZCB3aXRoaW4gdGhlIGRlYWRsaW5lLiBGdXJ0aGVyLCB0aGUgIHBhc3NhZ2UgZG9lcyBub3QgZXhwbGljaXRseSBtZW50aW9uIHRoZSBSdXNzaWEtVWtyYWluZSB3YXIuIFRoZSBhbnN3ZXIgc2hvdWxkIGJlIHNvdXJjZWQgZnJvbSB3aXRoaW4gIHRoZSBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZS4gVGhlIHllYXIgMjAzMCBoYXMgYWxzbyBub3QgYmVlbiBoaWdobGlnaHRlZCBtb3JlIHRoYW4gb3RoZXJzIGluIHRoZSAgcGFzc2FnZS4gSGVuY2Ugc3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0IGFzIHRob3VnaCB0aGUgc3RhdGVtZW50IGlzIGxvZ2ljYWwgYW5kIHJhdGlvbmFsLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIHRoZSAgaW1wYWN0IG9mIHRoZSBjYXNjYWRpbmcgYW5kIGludGVyc2VjdGluZyBpc3N1ZXMgb24gdGhlIExlYXN0IERldmVsb3BlZCBDb3VudHJpZXMuIEl0IGFsc28gZG9lcyBub3QgZGlzY3VzcyAgdGhlIG5lZWQgdG8gc3VwcG9ydCB0aGVtIGZpbmFuY2lhbGx5IGFuZCB0ZWNobm9sb2dpY2FsbHkuIFRoZSBjZW50cmFsIGlkZWEgb2YgdGhlIHBhc3NhZ2UgbWVhbnMgdGhlIGNvcmUgIG1lc3NhZ2UgaW1wbGllZCBieSB0aGUgd2hvbGUgb2YgdGhlIHBhc3NhZ2UuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The SDGs cannot be achieved by anyone  working alone. ",
        "option2" : " The SDGs are in danger of slipping away  from reach, along with their years of  progress in eradicating poverty, hunger and  ignorance. ",
        "option3" : " The SDG targets cannot be achieved by  2030, given the challenges posed by the  Covid-19 pandemic, Climate crisis and  Russia-Ukraine war. ",
        "option4" : " As the impact of cascading and intersecting  issues is more on least developed countries,  they need to be supported financially and  technologically. "
      }
    },
    {
      "index" : 68,
      "question" : " Two birds started flying towards the same direction at a speed of 20 km/hr and 25 km/hr. What will be distance between them after 4 hours 45 min? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IFR3byBiaXJkcyBzdGFydGVkIGZseWluZyB0b3dhcmRzIHRoZSBzYW1lIGRpcmVjdGlvbiBhdCBhIHNwZWVkIG9mIDIwIGttL2hyIGFuZCAyNSBrbS9oci4gIERpc3RhbmNlIGJldHdlZW4gdGhlbSBpbiAxIGhvdXIgPSAyNSAtIDIwID0gNSBrbSAgIE5vdywgNCBob3VycyA0NSBtaW4gPSA0IGhvdXJzICsgKDQ1LzYwKSBob3VycyA9IDE5LzQgaHJzICBTbywgZGlzdGFuY2UgYmV0d2VlbiB0aGVtIGFmdGVyIDE5LzQgaHJzID0gNSDDlyAxOS80ID0gMjMuNzUga20gIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 22.25 km ",
        "option2" : " 23.75 km ",
        "option3" : " 25.25 km ",
        "option4" : " 26.75 km  "
      }
    },
    {
      "index" : 69,
      "question" : " Sarita started walking around a rectangular field from point A. She walks along the breath of the rectangle, then along the length of the rectangle, and then finally along the diagonal of the rectangle to reach point A again.  If she took 7 hrs to cover the entire journey, then what was her average speed (in km/hr) in the entire journey? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IFRvdGFsIGRpc3RhbmNlIHRyYXZlbGxlZCBieSBTYXJpdGEgPSA3ICsgMjQgKyDiiJp7KDI0KTIgKyAoNykyfSAgPSA3ICsgMjQgKyDiiJooNTc2ICsgNDkpICA9IDMxICsgMjUgID0gNTYga20gIFNoZSB0YWtlcyA3IGhvdXJzIHRvIGNvbXBsZXRlIHRoZSBqb3VybmV5LiAgU28sIEF2ZXJhZ2UgU3BlZWQgPSBUb3RhbCBEaXN0YW5jZS9Ub3RhbCBUaW1lID0gNTYvNyA9IDgga20vaHIgIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 8 km/hr ",
        "option2" : " 9 km/hr  ",
        "option3" : " 7 km/hr ",
        "option4" : " 11 km/hr  "
      }
    },
    {
      "index" : 70,
      "question" : " 100 people were divided into two groups of 40 and 60 people. If the average age of 40 people and 60 people is 50 years and 55 years respectively, what must be the average age of all the persons taken together? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEF2ZXJhZ2UgYWdlIG9mIDQwIHBlb3BsZSBpcyA1MCB5ZWFycywgYW5kIGF2ZXJhZ2UgYWdlIG9mIDYwIHBlb3BsZSBpcyA1NSB5ZWFycy4gIFNvLCBzdW0gb2YgdGhlIGFnZXMgb2YgNDAgcGVvcGxlID0gNDAgw5cgNTAgPSAyMDAwIHllYXJzICBTdW0gb2YgYWdlcyBvZiA2MCBwZW9wbGUgPSA2MCDDlyA1NSA9IDMzMDAgeWVhcnMgIOKItCBSZXF1aXJlZCBhdmVyYWdlIGFnZSA9ICgyMDAwICsgMzMwMCkvKDQwICsgNjApID0gNTMwMC8xMDAgPSA1MyB5ZWFycyAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 45 years ",
        "option2" : " 95 years ",
        "option3" : " 53 years ",
        "option4" : " 65 years         18                                                                                                                                                             "
      }
    },
    {
      "index" : 71,
      "question" : " If third proportion of A and B is (x + y)/(x - y) and value of A is (x2 - y2), then find the value of B. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IElmIGEgYW5kIGIgYXJlIHR3byBudW1iZXJzLCB0aGVuIHRoZWlyIHRoaXJkIHByb3BvcnRpb24gKGMpIGlzIGdpdmVuIGFzLCAgIGMgPSBiMi9hICAgICAgICAgICAgICAuLi4uLi4oaSkgIEhlcmUsIGEgPSAoeDItIHkyKSwgYW5kIGMgPSAoeCArIHkpLyh4IC0geSkgYW5kIGIgPSBCICBQdXR0aW5nIHRoZSBhYm92ZSB2YWx1ZXMgaW4gZXF1YXRpb24gKGkpLCB3ZSBnZXQ6ICAoeCArIHkpLyh4IC0geSkgPSBCMiAvKHgyIC0geTIpICDvg54gQjIgPSAoeCArIHkpICh4MiAtIHkyKS8oeCAtIHkpICDvg54gQjIgPSAoeCAreSkgKHggK3kpICh4IC0geSkvKHggLSB5KSAg74OeIEIyID0gKHggKyB5KSAoeCAreSkgIO+DniBCID0gKHggKyB5KSAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICAgICAgICAxOSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " xy + 1 ",
        "option2" : " xy2 + x2y ",
        "option3" : " x + y ",
        "option4" : " x2 + y2  "
      }
    },
    {
      "index" : 72,
      "question" : " Rent of a room is Rs. 9600, which is shared among Kallu, Malkhan, Ramu and Shyam. If contribution ratio of Kallu & Malkhan, Malkhan & Ramu and Ramu & Shyam is 1:2, 2:3 and 5:6 respectively, then what is the contribution of Malkhan in the rent? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IENvbnRyaWJ1dGlvbiByYXRpbyBvZiBLYWxsdSBhbmQgTWFsa2hhbiA9IDE6MiAgQ29udHJpYnV0aW9uIHJhdGlvIG9mIE1hbGtoYW4gYW5kIFJhbXUgPSAyOjMgICBTbywgQ29udHJpYnV0aW9uIHJhdGlvIG9mIEthbGx1LCBNYWxraGFuIGFuZCBSYW11ID0gMToyOjMgIC4uLi4uLi4uLi4oaSkgIENvbnRyaWJ1dGlvbiByYXRpbyBvZiBSYW11IGFuZCBTaHlhbSA9IDU6NiAgLi4uLi4uLi4uLi4oaWkpICBUbyBtYWtlIENvbnRyaWJ1dGlvbiBvZiBSYW11IGVxdWFsIGluIGVxbiAoaSkgYW5kIChpaSksIHdlIHdpbGwgbXVsdGlwbHkgZXFuIChpKSBieSA1IGFuZCBlcW4gKGlpKSBieSAzLiAgQ29udHJpYnV0aW9uIHJhdGlvIG9mIEthbGx1LCBNYWxraGFuIGFuZCBSYW11ID0gWzE6MjozXSDDlyA1ID0gNToxMDoxNSAgQ29udHJpYnV0aW9uIHJhdGlvIG9mIFJhbXUgYW5kIFNoeWFtID0gWzU6Nl0gw5cgMyAgPSAxNToxOCAgU28sIENvbnRyaWJ1dGlvbiByYXRpbyBvZiBLYWxsdSwgTWFsa2hhbiwgUmFtdSBhbmQgU2h5YW0gPSA1OjEwOjE1OjE4ICDiiLQgUmVxdWlyZWQgY29udHJpYnV0aW9uIG9mIE1hbGtoYW4gPSA5NjAwIMOXIDEwLyg1KzEwKzE1KzE4KSA9IFJzLiAyMDAwICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1400 ",
        "option2" : " Rs. 2000 ",
        "option3" : " Rs. 1000 ",
        "option4" : " Rs. 1600  "
      }
    },
    {
      "index" : 73,
      "question" : " Roshan is a perfume seller. One small bottle of French perfume costs him Rs. 12. In what ratio should he mix Rs. 8.50 per bottle synthetic perfume into this to sell the mixture at Rs. 9.25 and make no profit or loss? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IENvc3QgcHJpY2Ugb2YgRnJlbmNoIHBlcmZ1bWUgYW5kIHN5bnRoZXRpYyBwZXJmdW1lIGlzIFJzLiAxMiBhbmQgUnMuIDguNTAuIENvc3QgcHJpY2Ugb2YgdGhlIG1peHR1cmUgaXMgIFJzLiA5LjI1LiAgQXBwbHlpbmcgQWxsZWdhdGlvbiBNZXRob2Q6ICAgIOKItCBSZXF1aXJlZCByYXRpbyA9IDIuNzUvMC43NSA9IDExLzMgPSAxMSA6IDMgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 8:5 ",
        "option2" : " 11:3 ",
        "option3" : " 10:3 ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 74,
      "question" : " The bar graph given below provides the data gathered in a survey conducted over 1200 people, regarding their preference for different dishes (in percentage). Study the graph and answer the question that follows. What is the ratio of the number of people that preferred Pongal and Rogan josh to those that preferred Dhokla? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IFBlcmNlbnRhZ2Ugb2YgcGVvcGxlIHRoYXQgcHJlZmVycmVkIFBvbmdhbCBhbmQgUm9nYW4gam9zaCA9IDEwICsgMTUgPSAyNSUgIE51bWJlciBvZiBwZW9wbGUgdGhhdCBwcmVmZXJyZWQgUG9uZ2FsIGFuZCBSb2dhbiBqb3NoID0gMjUlIG9mIDEyMDAgPSAoMjUgw5cgMTIwMCkvMTAwID0gMzAwICAgIFBlcmNlbnRhZ2Ugb2YgcGVvcGxlIHRoYXQgcHJlZmVycmVkIERob2tsYSA9IDIwJSAgU28sIG51bWJlciBvZiBwZW9wbGUgdGhhdCBwcmVmZXJyZWQgRGhva2xhID0gMjAlIG9mIDEyMDAgPSAoMjAgw5cgMTIwMCkvMTAwID0gMjQwICAgSGVuY2UsIHJlcXVpcmVkIHJhdGlvID0gMzAwLzI0MCA9IDUvNCA9IDUgOiA0ICBTbywgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5 : 4 ",
        "option2" : " 6 : 5 ",
        "option3" : " 3 : 2 ",
        "option4" : " 1 : 3  "
      }
    },
    {
      "index" : 75,
      "question" : " In an exam, average marks of A, B and C is 650. If marks of B are 50 more than A, and 20 less than C, then what must be the marks of C? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICDih5IgW0EgKyBCICsgQ10vMyA9IDY1MCAg4oeSIEEgKyBCICsgQyA9IDE5NTAgLS0tLS0tLS0tLS0tLS0tLS0tIChpKSAgTWFya3Mgb2YgQiBhcmUgNTAgbW9yZSB0aGFuIEEsIGFuZCAyMCBsZXNzIHRoYW4gQy4gIFNvLCBtYXJrcyBvZiBCID0gQSArIDUwICBNYXJrcyBvZiBDID0gQiArIDIwID0gQSArIDUwICsgMjAgPSBBICsgNzAgIEZyb20gZXF1YXRpb24gKGkpLCB3ZSBnZXQ6ICBBICsgKEEgKyA1MCkgKyAoQSArIDcwKSA9IDE5NTAgIOKHkiAzQSArIDEyMCA9IDE5NTAgIOKHkiAzQSA9IDE5NTAgLSAxMjAgPSAxODMwICDih5IgQSA9IDE4MzAvMyA9IDYxMCAgU28sIG1hcmtzIG9mIEMgPSBBICsgNzAgPSA2MTAgKyA3MCA9IDY4MCAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgICAgICAyMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 615 ",
        "option2" : " 720 ",
        "option3" : " 580 ",
        "option4" : " 680   Directions for the following 5 (five) items:  Read the following five passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only.         19                                                                                                                                                             "
      }
    },
    {
      "index" : 76,
      "question" : " Which of the following is the most logical and rational inference that can be made from the above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgbWVudGlvbnMgJ1RoZSBmb2N1cyBpcyBub3cgb24gZm9yZXN0IGxhbmRzY2FwZSByZXN0b3JhdGlvbi0gdGhlICBwcm9jZXNzIG9mIHJlZ2FpbmluZyBlY29sb2dpY2FsIGZ1bmN0aW9uYWxpdHkgYW5kIGltcHJvdmluZyBodW1hbiB3ZWxmYXJlIGFjcm9zcyBkZWZvcmVzdGVkIGFuZCAgZGVncmFkZWQgZm9yZXN0IGxhbmRzY2FwZXMnIHdoaWNoIG1lYW5zIHRoYXQgdGhlIGNoYW5nZSBpbiBzdHJhdGVneSBpcyB0byBmdWxmaWwgcGVvcGxlJ3MgbmVlZHMgYXMgd2VsbCBhcyAgbXVsdGlwbGUgbGFuZCB1c2VzIHRocm91Z2ggZm9yZXN0IGxhbmRzY2FwZSByZXN0b3JhdGlvbi4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdDogSXQgaXMgbm93aGVyZSBnaXZlbiBpbiB0aGUgcGFzc2FnZSB0aGF0IGZvcmVzdCBsYW5kc2NhcGUgcmVzdG9yYXRpb24gaXMgZm9yICBpbmNyZWFzaW5nIGFyZWEgdW5kZXIgZm9yZXN0IGNvdmVyLiBUaGVyZWZvcmUsIHRoaXMgZ29lcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiBBbHNvLCBJbmRpYSBoYXMgIG5vdCBiZWVuIG1lbnRpb25lZCBpbiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdDogSXQgaXMgYWxzbyBub3doZXJlIGltcGxpZWQgaW4gdGhlIHBhc3NhZ2UgdGhhdCB0aGUgZ292ZXJubWVudCBoYXMgY2hhbmdlZCBpdHMgIHN0cmF0ZWd5IHRvIG1lZXQgaXRzIGludGVybmF0aW9uYWwgY29tbWl0bWVudHMuIFRoZXJlZm9yZSwgdGhpcyBnb2VzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3Q6IFRoZSBwYXNzYWdlIG9ubHkgbWVudGlvbnMgdGhhdCBnb3Zlcm5tZW50cyBoYXZlIHJlbGllZCBvbiBhZmZvcmVzdGF0aW9uIGFuZCAgcmVmb3Jlc3RhdGlvbiBhcyBhIG1lYW5zIG9mIGVzdGFibGlzaGluZyB0cmVlcyBvbiBub24tdHJlZWQgbGFuZCBhbmQgdGhhdCB0aGUgc3RyYXRlZ3kgaGFzIG5vdyBldm9sdmVkIHRvICBpbmNsdWRlIG1vcmUgZGltZW5zaW9ucy4gSG93ZXZlciwgaXQgZG9lcyBub3QgbWVhbiB0aGF0IHRoZSBwcmV2aW91cyBzdHJhdGVneSBoYXMgZmFpbGVkLiBIZW5jZSB0aGlzICBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " With regards to deforestation, the  government changed its strategy, keeping  in mind the people's needs and multiple  land utility.  ",
        "option2" : " The government wants to increase the area  under forest cover in India.  ",
        "option3" : " The government's focus on forest landscape  restoration is due to its international  commitments.  ",
        "option4" : " The earlier strategy of establishing trees on  non-treed land had failed.  "
      }
    },
    {
      "index" : 77,
      "question" : " According to the passage, the following assumptions are made as to why environmentally friendly plastic is not currently able to emerge as a desirable solution to the problem of plastic?  1. It is costlier than conventional plastic.  2. Lack of widespread adoption by the public because the public is not familiar with it.  3. There is not enough production of such plastic.  Which of the assumptions provided above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBwYXNzYWdlIG1lbnRpb25zICdzdWNoIHNjYWxpbmcgdXAgZnJvbSB0aGUgbGFiIHRvIGNvbW1lcmNpYWwgcHJvY2VzcyB3aWxsICBiZSB2aXRhbCB0byBhY2hpZXZlIGNvc3QgcmVkdWN0aW9uIGFuZCB3aWRlc3ByZWFkIGFkb3B0aW9uJyB3aGljaCBpbXBsaWVzIHRoYXQgaXQgbXVzdCBiZSBjb3N0bGllciB0aGFuICBjb252ZW50aW9uYWwgcGxhc3RpYyBhbmQgdGh1cyBub3QgYWJsZSB0byBlbWVyZ2UgYXMgYSBkZXNpcmFibGUgc29sdXRpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaG91Z2ggdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgcGxhc3RpYyBoYXMgbm90IHNlZW4gIHdpZGVzcHJlYWQgYWRvcHRpb24sIHRoZSByZWFzb24gZm9yIHRoZSBzYW1lIGlzIG5vdCB0aGUgbGFjayBvZiBmYW1pbGlhcml0eSB3aXRoIHRoZSBwcm9kdWN0LiBBY2NvcmRpbmcgdG8gIHRoZSBvcGVuaW5nIGxpbmVzIG9mIHRoZSBwYXNzYWdlLCBpdCBoYXMgbm90IGJlZW4gd2lkZWx5IGFkb3B0ZWQgZGVzcGl0ZSBiZWluZyBhIGRlc2lyYWJsZSBhbHRlcm5hdGl2ZSAgYmVjYXVzZSBpdCBzdGlsbCBoYXMgdG8gZnVsZmlsIHJlcXVpcmVkIGZ1bmN0aW9uYWwgcGVyZm9ybWFuY2UgcGFyYW1ldGVycyBzdWNoIGFzIG1vaXN0dXJlIGJhcnJpZXJzIGFuZCBoZWF0ICBzY2FsYWJpbGl0eS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgcGFzc2FnZSBzYXlzIHRoYXQgc3VjaCBzY2FsaW5nIHVwIGZyb20gdGhlIGxhYiB0byBjb21tZXJjaWFsIHByb2Nlc3NlcyB3aWxsICBiZSB2aXRhbCB0byBhY2hpZXZlIGNvc3QgcmVkdWN0aW9uIGFuZCB3aWRlc3ByZWFkIGFkb3B0aW9uLiBUaGlzIGltcGxpZXMgdGhhdCB0aGUgY3VycmVudCByYXRlIG9mICBwcm9kdWN0aW9uIG9mIGVjby1mcmllbmRseSBwbGFzdGljcyBpcyBub3Qgc3VmZmljaWVudC4gRnVydGhlciwgdGhlIGxhc3QgbGluZSBvZiB0aGUgcGFzc2FnZSBjbGVhcmx5IHNheXMsICdUaGUgIG1hbnVmYWN0dXJlcnMgc2hvdWxkIGFsc28gYmUgZW5jb3VyYWdlZCB0aHJvdWdoIGFwcHJvcHJpYXRlIG1lYXN1cmVzIHRvIHNoaWZ0IGZyb20gY29udmVudGlvbmFsICBwbGFzdGljcyB0byBiaW9kZWdyYWRhYmxlIHBsYXN0aWNzIGFjcm9zcyBjYXRlZ29yaWVzLicgd2hpY2ggYWdhaW4gaW5kaWNhdGVzIHRoYXQsIHByZXNlbnRseSwgdGhlcmUgaXMgbm90ICBlbm91Z2ggcHJvZHVjdGlvbiBvZiBwbGFzdGljcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 78,
      "question" : " Which one of the following statements best reflects the most critical inference that can be made from the passage given above? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkZWFscyB3aXRoIHR3byBicm9hZCBhc3BlY3RzIG9mIGJpb2RpdmVyc2l0eSBhbmQgZm9vZCBwcm9kdWN0aW9uLCAgYW5kIHRoZWlyIHJlbGF0aW9uIHdpdGggbmF0dXJhbCByZXNvdXJjZXMgYW5kIHByb2R1Y3Rpb24gdGVjaG5pcXVlcy4gV2hldGhlciBzdXN0YWluYWJsZSBlbnZpcm9ubWVudGFsICByZXNvdXJjZSBnb3Zlcm5hbmNlIGlzIHRoZSAnbW9zdCcgY3J1Y2lhbCBmYWN0b3IgaW4gZm9vZCBzZWN1cml0eSBpcyBub3QgY2xlYXIgZnJvbSB0aGUgcGFzc2FnZSwgYXMgdGhlcmUgYXJlICBhZHZlcnNlIGltcGFjdHMgZHVlIHRvIHByb2R1Y3Rpb24gdGVjaG5pcXVlcyBhcyB3ZWxsLiAgVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gY2Fubm90IGJlIHRoZSBtb3N0ICBjcml0aWNhbCBpbmZlcmVuY2UuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRob3VnaCB0aGUgc3RhdGVtZW50IG1heSBiZSBpbmRpdmlkdWFsbHkgdHJ1ZSwgaXQgaXMgbm93aGVyZSBzdWdnZXN0ZWQgaW4gdGhlICBwYXNzYWdlLiBUaGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zICdBZ3JpY3VsdHVyYWwgcmlzayAnaG90c3BvdHMnIG9jY3VyIHdoZXJlIHRoZXNlIHJlc291cmNlIHByZXNzdXJlcyAgYXJlIG1vc3QgY29uY2VudHJhdGVkLicgVGhlIHBhc3NhZ2UgaXMgbm90IGZvY3VzZWQgb24gZ2l2aW5nIHJlbWVkaWFsIG1lYXN1cmVzLiBNb3Jlb3ZlciwgYWdyaWN1bHR1cmFsICBob3RzcG90IGlzIG9uZSBvZiB0aGUgc2V2ZXJhbCBpbXBvcnRhbnQgZmFjdG9ycyBkaXNjdXNzZWQgaW4gdGhlIHBhc3NhZ2UuIERlYWxpbmcgd2l0aCBpdCBjYW5ub3QgYmUgdGhlIG1vc3QgIGNyaXRpY2FsIGluZmVyZW5jZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0IGFzIGl0IHRha2VzIGEgd2hvbGVzb21lIGxvb2sgYXQgdGhlIHBhc3NhZ2UgYW5kIGNyaXNwbHkgc3VtbWFyaXNlcyBpdC4gVGhlICBwYXNzYWdlIG1lbnRpb25zICdGb29kLCBhZ3JpY3VsdHVyZSwgYW5kIGZpc2hlcmllcyBkZXBlbmQgb24gdGhlIHdvcmxkJ3MgbmF0dXJhbCByZXNvdXJjZXMsIHNvIGZ1dHVyZSAgZm9vZCBwcm9kdWN0aW9uIHdpbGwgZGVwZW5kIG9uIGhvdyB3ZWxsIHRoZXNlIHJlc291cmNlcyBhcmUgY29uc2VydmVkIGFuZCB1c2VkLicgYW5kICdUaGUgZm9vZCwgIGFncmljdWx0dXJlIGFuZCBmaXNoZXJpZXMgc3lzdGVtIGlzIG5vdCBvbmx5IGltcGFjdGVkIGJ5IHRoZSBlbnZpcm9ubWVudCwgYnV0IGFsc28gYnkgcHJvZHVjdGlvbiAgdGVjaG5pcXVlcy4gVGhlIGV4Y2Vzc2l2ZSB1c2Ugb2YgbnV0cmllbnRzIGluIGFncmljdWx0dXJlIGhhcyBiZWVuIGEgbWFqb3Igc291cmNlIG9mIHdhdGVyIHBvbGx1dGlvbiBhbmQgaXMgICAgICAgIDIxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlc3RpbWF0ZWQgdG8gaGF2ZSByZWR1Y2VkIGJpb2RpdmVyc2l0eScuIFRoZSBmaXJzdCBsaW5lIGNsZWFybHkgdGFsa3MgYWJvdXQgbmF0dXJhbCByZXNvdXJjZXMuIFRoZSBzZWNvbmQgIGxpbmUgdGFsa3MgYWJvdXQgaXNzdWVzIGxpa2Ugb3ZlcnVzZSBvZiBudXRyaWVudHMsIHRoYXQgaXMgYSBtYW4tbWFkZSAoYW50aHJvcG9nZW5pYykgZmFjdG9yLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdCBhcyB1bnN1c3RhaW5hYmxlIHByYWN0aWNlcyBpbiB0aGUgZm9vZCwgYWdyaWN1bHR1cmUgYW5kIGZpc2hlcmllcyBzeXN0ZW1zIHRocmVhdGVuICBiaW9kaXZlcnNpdHkgYXMgd2VsbCBhcyBmb29kIHNlY3VyaXR5LiBUaGVyZWZvcmUsIGl0IHdvdWxkIGJlIGluY29ycmVjdCB0byBzYXkgdGhhdCBpdCBhZmZlY3RzIE9OTFkgIGJpb2RpdmVyc2l0eS4gIFRoaXMgaXMgY2xlYXIgZnJvbSB0aGUgZXhjZXJwdHMgLSAnRm9vZCwgYWdyaWN1bHR1cmUsIGFuZCBmaXNoZXJpZXMgZGVwZW5kIG9uIHRoZSB3b3JsZCdzICBuYXR1cmFsIHJlc291cmNlcywgc28gZnV0dXJlIGZvb2QgcHJvZHVjdGlvbiB3aWxsIGRlcGVuZCBvbiBob3cgd2VsbCB0aGVzZSByZXNvdXJjZXMgYXJlIGNvbnNlcnZlZCBhbmQgIHVzZWQuIEFncmljdWx0dXJlIGlzIGltcGFjdGVkIGJ5IHVyYmFuIGxhbmQgZXhwYW5zaW9uIGFuZCBieSBoaWdoZXIgd2F0ZXIgZGVtYW5kIGZyb20gb3RoZXIgc2VjdG9ycy4nIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Sustainable environmental resource  governance is the most crucial factor for  food security in future. ",
        "option2" : " Agricultural risk hotspots need to be  identified and targeted efforts need to be  made to bring them out of danger. ",
        "option3" : " Biodiversity and food production depend  not only on natural, but also anthropogenic  factors. ",
        "option4" : " Unsustainable practices in the food,  agriculture and fisheries systems threaten  only biodiversity. "
      }
    },
    {
      "index" : 79,
      "question" : " With reference to the above passage, which of the following statements is/are correct? 1. Pre-identarian forms of politics were inclusive and non-divisive in nature. 2. Everyone has the legal right to recognition everywhere as an individual. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBoYXMgbm90IGdpdmVuIHRoZSBkZXRhaWxzIHJlZ2FyZGluZyBwcmUtaWRlbnRhcmlhbiBmb3JtcyBvZiAgcG9saXRpY3MuIFRoZSBvbmx5IGluZmVyZW5jZSB0aGF0IGNhbiBiZSBkZXJpdmVkIGZyb20gdGhlIHBhc3NhZ2UgLSAnV2hhdCBtYWtlcyBpZGVudGl0eSBwb2xpdGljcyBhICBzaWduaWZpY2FudCBkZXBhcnR1cmUgZnJvbSBlYXJsaWVyLCBwcmUtaWRlbnRhcmlhbiBmb3JtcyBvZiB0aGUgcG9saXRpY3Mgb2YgcmVjb2duaXRpb24gaXMgaXRzIGRlbWFuZCBmb3IgIHJlY29nbml0aW9uIG9uIHRoZSBiYXNpcyBvZiB0aGUgdmVyeSBncm91bmRzIG9uIHdoaWNoIHJlY29nbml0aW9uIGhhcyBwcmV2aW91c2x5IGJlZW4gZGVuaWVkJywgaXMgdGhhdCAgc29tZSBncm91cHMgd2VyZSBkZW5pZWQgcmVjb2duaXRpb24gZWFybGllci4gSXQgcmF0aGVyIGltcGxpZXMgdGhhdCBwcmUtaWRlbnRhcmlhbiBmb3JtcyBvZiBwb2xpdGljcyB3YXMgIHByb2JiYWx5IGRpdmlzaXZlLiBNYXliZSB0aGV5IHdlcmUgZ2l2ZW4gcmVjb2duaXRpb24gYmFzZWQgb24gJ3VuaXZlcnNhbCBodW1hbmtpbmQnLiBJdCdzIG5vdCBjbGVhciAgZnJvbSB0aGUgZ2l2ZW4gcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgaW5jb3JyZWN0LiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IGFzIHRob3VnaCB0aGUgc3RhdGVtZW50IG1heSBpbmRpdmlkdWFsbHkgYmUgdHJ1ZSwgdGhlICdyaWdodCcgdG8gcmVjb2duaXRpb24gaXMgIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIEZ1cnRoZXJtb3JlLCB0aGUgbGVnYWwgYXNwZWN0cyBvZiB0aGlzIHJpZ2h0IGlzIG5vdCBkZWFsdCB3aXRoIGluIHRoZSAgcGFzc2FnZS4gVGhlIHBhc3NhZ2UgY2VudHJhbGx5IGRlYWxzIHdpdGggdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBpZGVudGl0eSBwb2xpdGljcyBhbmQgcHJlLWlkZW50YXJpYW4gIHBvbGl0aWNzIGFuZCBob3cgdGhlIG5hdHVyZSBvZiBkZW1hbmQgZm9yIHJlY29nbml0aW9uIGhhcyBjaGFuZ2VkLiBUaGUgbGluZSAnUmF0aGVyLCB3aGF0IGlzIGRlbWFuZGVkICBpcyByZXNwZWN0IGZvciBvbmVzZWxmIGFzIGRpZmZlcmVudC4nIGltcGxpZXMgdGhhdCBpZGVudGl0eSBwb2xpdGljcyBkZW1hbmQgcmVjb2duaXRpb24gYmFzZWQgb24gb25lJ3Mgb3duICBpZGVudGl0eSAtYXMgYSB3b21hbiwgYXMgYmxhY2ssIG9yIGEgbGVzYmlhbi4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " Neither 1 nor 2      "
      }
    },
    {
      "index" : 80,
      "question" : " On the basis of the passage given above, the following assumptions have been made: 1. Disaster management is not a priority in India. 2. The role of Panchayati Raj Institutions (PRIs) in framing disaster management policy needs to be widened. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnRGlzYXN0ZXIgbWFuYWdlbWVudCBoYXMgc2VsZG9tIGFjcXVpcmVkIGltcG9ydGFuY2UgIGluIHRoZSBhZ2VuZGEgb2YgZ292ZXJuYW5jZSB1bmxlc3MgdGhlcmUgaXMgYSBtYWpvciBuYXR1cmFsIG9yIG1hbi1tYWRlIGRpc2FzdGVyLicgIFRoZSB1c2Ugb2YgJ3NlbGRvbScgIGNsZWFybHkgaW1wbGllcyB0aGF0IGRpc2FzdGVyIG1hbmFnZW1lbnQgaXMgbm90IGEgcHJpb3JpdHkgaW4gSW5kaWEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZW50aW9ucyAnSW4gcnVyYWwgYXJlYXMsIFBhbmNoYXlhdGkgUmFqIEluc3RpdHV0aW9ucyAoUFJJcykgYXJlICBkZW1vY3JhdGljYWxseSBkZWNlbnRyYWxpemVkIGJvZGllcyB0aGF0IGNhbiBkaXNwbGF5IHRyZW1lbmRvdXMgcG90ZW50aWFsIGluIGRpc2FzdGVyIG1hbmFnZW1lbnQgYXMgIHRoZXkgYXJlIGNsb3NlciB0byB0aGUgc2NlbmUgYW5kIGhhdmUgYSBiZXR0ZXIga25vd2xlZGdlIG9mIGxvY2FsIHJlc291cmNlcy93ZWFrbmVzc2VzLiBIb3dldmVyLCB0aGVpciAgcm9sZSBoYXMgYmVlbiBsaW1pdGVkIG1vc3RseSB0byB0aGUgcmVzcG9uc2UgcGhhc2Ugb2YgYW55IGRpc2FzdGVyLicgVGhpcyBpbXBsaWVzIHRoYXQgdGhlIHJvbGUgb2YgUFJJcyAgc2hvdWxkIG5vdCBiZSBsaW1pdGVkIHRvIGRpc2FzdGVyIHJlc3BvbnNlLiBEdWUgdG8gdGhlaXIgYmV0dGVyIGtub3dsZWRnZSBvZiBkaXNhc3RlciwgdGhlaXIgcm9sZSBpbiBvdGhlciAgY3J1Y2lhbCBhc3BlY3RzIG9mIGRpc2FzdGVyIG1hbmFnZW1lbnQgLSBzdWNoIGFzIHBvbGljeSBmcmFtaW5nIG5lZWRzIHRvIGJlIHdpZGVuZWQuICAgICAgIC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 2  ",
        "option4" : " Neither 1 nor 2      .  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
