{
  "testId" : "vision-2023-prelims-2-csat-2",
  "testType" : "csat",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\vision\\prelims\\vision-2023-prelims-2-csat-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : " Find the ratio between the average bonus  received by officers in years 2011 and 2014  with that received by employees in years 2005  and 2008.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEF2ZXJhZ2UgYm9udXMgcmVjZWl2ZWQgYnkgb2ZmaWNlcnMgaW4geWVhcnMgMjAxMSBhbmQgMjAxNCA9ICgzNSArIDMwKS8yID0gNjUvMiAgIEF2ZXJhZ2UgYm9udXMgcmVjZWl2ZWQgYnkgZW1wbG95ZWVzIGluIHllYXJzIDIwMDUgYW5kIDIwMDggPSAoMjUgKyAzMCkvMiA9IDU1LzIgICBSZXF1aXJlZCByYXRpbyA9ICg2NS8yKSA6ICg1NS8yKSA9IDY1IDogNTUgPSAxMyA6IDExICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 11 : 13  ",
        "option2" : " 13 : 11  ",
        "option3" : " 11 : 9  ",
        "option4" : " 6 : 11   "
      }
    },
    {
      "index" : 2,
      "question" : " The bonus received by officers and employees  together in 2016 is what percentage more than  the difference of the bonuses received by  employees in 2005 and 2008?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEJvbnVzIHJlY2VpdmVkIGJ5IG9mZmljZXJzIGFuZCBlbXBsb3llZXMgdG9nZXRoZXIgaW4gMjAxNiA9ICgzMCArIDQwKSA9IDcwICAgRGlmZmVyZW5jZSBvZiB0aGUgYm9udXNlcyByZWNlaXZlZCBieSBlbXBsb3llZXMgaW4gMjAwNSBhbmQgMjAwOCA9ICgzMCAtIDI1KSA9IDUgICBSZXF1aXJlZCBwZXJjZW50YWdlID0gWyg3MCAtIDUpLzVdIMOXIDEwMCA9IDEzMDAlICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10%  ",
        "option2" : " 65%  ",
        "option3" : " 120%  ",
        "option4" : " 1300%  "
      }
    },
    {
      "index" : 3,
      "question" : " A group of 15 non-vegetarian people and 10  vegetarian people have an average weight of  38.4 kg. If non-vegetarian people have an  average weight of 40 kg, then what must be the  average weight of the vegetarian people?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEF2ZXJhZ2Ugd2VpZ2h0IG9mIGFsbCAodmVnICYgbm9uLXZlZykgcGVvcGxlID0gMzguNCBrZyAgIEF2ZXJhZ2Ugd2VpZ2h0IG9mIG5vbi12ZWdldGFyaWFuIHBlb3BsZSA9IDQwIGtnICAgTnVtYmVyIG9mIHZlZ2V0YXJpYW4gcGVvcGxlID0gMTAgICBOdW1iZXIgb2Ygbm9uLXZlZ2V0YXJpYW4gcGVvcGxlID0gMTUgICBUb3RhbCBudW1iZXIgb2YgcGVvcGxlID0gMTUgKyAxMCA9IDI1ICAgVG90YWwgd2VpZ2h0IG9mIDI1IHBlb3BsZSA9IDM4LjQgw5cgMjUgPSA5NjAga2cgICBUb3RhbCB3ZWlnaHQgb2Ygbm9uLXZlZ2V0YXJpYW4gcGVvcGxlID0gNDAgw5cgMTUgPSA2MDAga2cgICBTbywgVG90YWwgd2VpZ2h0IG9mIHZlZ2V0YXJpYW4gcGVvcGxlID0gOTYwIC0gNjAwID0gMzYwIGtnICAgVGhlcmVmb3JlLCBBdmVyYWdlIHdlaWdodCBvZiB2ZWdldGFyaWFuIHBlb3BsZSA9IFRvdGFsIHdlaWdodCBvZiB2ZWdldGFyaWFuIHBlb3BsZSAvIE51bWJlciBvZiAgIHZlZ2V0YXJpYW4gcGVvcGxlID0gMzYwLzEwID0gMzYga2cgICBTbywgYXZlcmFnZSB3ZWlnaHQgb2YgdmVnZXRhcmlhbiBwZW9wbGUgPSAzNiBrZyAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 44 kg  ",
        "option2" : " 36 kg  ",
        "option3" : " 26 kg  ",
        "option4" : " 24 kg   "
      }
    },
    {
      "index" : 4,
      "question" : " A person sold 64 kg of rice partially at 7% loss  and the rest at 9% profit. He suffered 2% loss  on the whole. What quantity of rice was sold at  profit?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEFwcGx5aW5nIEFsbGlnYXRpb24gcnVsZTogICAgUmF0aW8gb2YgdGhlIHF1YW50aXR5IG9mIHJpY2Ugc29sZCBhdCA5JSBwcm9maXQgYW5kIDclIGxvc3MgPSA1IDogMTEgICBTbywgUXVhbnRpdHkgb2YgcmljZSBzb2xkIGF0IHByb2ZpdCA9IDY0IMOXIFs1Lyg1ICsgMTEpXSA9IDIwIGtnICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgIDIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 24 kg  ",
        "option2" : " 11 kg  ",
        "option3" : " 44 kg  ",
        "option4" : " 20 kg   "
      }
    },
    {
      "index" : 5,
      "question" : " Sonali leaves Delhi at 4 pm by a train and  reaches Pune at 10 pm. Priyanka leaves Pune at  6 pm by a train and reaches Delhi at 11 pm on  the same day. What is the time when they  crossed each other?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IExldCBkaXN0YW5jZSBiZXR3ZWVuIERlbGhpIGFuZCBQdW5lIGJlIEEga20uICAgVGltZSB0YWtlbiBieSBTb25hbGkgdG8gcmVhY2ggUHVuZSA9IDEwIC0gNCA9IDYgaG91cnMgICAgVGltZSB0YWtlbiBieSBQcml5YW5rYSB0byByZWFjaCBEZWxoaSA9IDExIC0gNiA9IDUgaG91cnMgICAgU3BlZWQgb2YgdHJhaW4gd2hpY2ggbGVhdmVzIERlbGhpID0gQS82IGttL2hyICAgQW5kIFNwZWVkIG9mIHRyYWluIHdoaWNoIGxlYXZlcyBQdW5lID0gQS81IGttL2hyICAgUmVsYXRpdmUgc3BlZWQgPSBBLzYgKyBBLzUgPSAxMUEvMzAga20vaHIgICBEaXN0YW5jZSBjb3ZlcmVkIGJ5IHRyYWluIHdoaWNoIGxlYXZlcyBEZWxoaSBpbiAyIGhvdXJzID0gMiDDlyBBLzYgPSBBLzMga20gICBEaXN0YW5jZSBsZWZ0IHRvIGJlIGNvdmVyZWQgPSBBIC0gQS8zID0gMkEvMyBrbSAgIFRpbWUgdGFrZW4gYnkgYm90aCB0aGUgdHJhaW5zIHRvIGNyb3NzIGVhY2ggb3RoZXIgPSBEaXN0YW5jZSBsZWZ0IHRvIGJlIGNvdmVyZWQvIFJlbGF0aXZlIHNwZWVkID0gICAoMkEvMykvKDExQS8zMCkgPSAyMC8xMSBob3VycyA9IDEgaG91ciA0OSBtaW51dGVzICAgUmVxdWlyZWQgdGltZSA9IDYgcG0gKyAxIGhvdXIgNDkgbWludXRlcyA9IDc6IDQ5IHBtICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7:49 pm  ",
        "option2" : " 7:20 pm  ",
        "option3" : " 6:50 pm  ",
        "option4" : " 8:20 pm   "
      }
    },
    {
      "index" : 6,
      "question" : " A company X sold apple juice at cost price by  mixing water in it and gained a profit of 25%.  What must be the ratio of juice and water in the  mixture?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFdlIGtub3cgdGhhdCwgaWYgd2UgbWl4IGFueSBsaXF1aWQgd2l0aCB3YXRlciBhbmQgc2VsbCBpdCBhdCBjb3N0IHByaWNlIHRvIGdhaW4gYSBwcm9maXQgb2YgeCUsIHRoZW4gdGhlIHJhdGlvICAgb2YgbGlxdWlkIGFuZCB3YXRlciBpcyAoMTAwOngpLiAgIEhlcmUsIHggPSAyNSUgICDiiLQgUmVxdWlyZWQgcmF0aW8gPSAxMDA6MjUgPSA0OjEgICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIgLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1:5  ",
        "option2" : " 3:2  ",
        "option3" : " 4:1  ",
        "option4" : " 2:3            3                                                                                                                                                              "
      }
    },
    {
      "index" : 7,
      "question" : " What will be the average of 252, 262,  272,...........402  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IFdlIGhhdmUsIDI1MiwgMjYyLCAyNzIsIC4uLi4uLi4uLi4uLi4uLi4uLjQwMiAgIFdlIGNhbiBhbHNvIHdyaXRlIGl0IGFzLCAoMTIrMjIrMzIrLi4uLi4uLisgNDAyKSAtICgxMisyMiszMisuLi4uLi4uKyAyNDIpICAgV2Uga25vdyB0aGF0LCBTdW0gb2YgdGhlIHNxdWFyZXMgb2YgZmlyc3QgJ24nIG5hdHVyYWwgbnVtYmVycyA9IG4gKG4rMSkgKDJuKzEpLzYgICBTbywgKDEyKzIyKzMyKy4uLi4uLi4rIDQwMikgLSAoMTIrMjIrMzIrLi4uLi4uLisgMjQyKSA9IHs0MCAoNDArMSkgKDLDlzQwKzEpLzZ9IC0gezI0ICgyNCsxKSAoMsOXMjQrMSkvNn0gICA9IHsoNDAgw5cgNDEgw5cgODEpLzZ9IC0gezI0IMOXIDI1IMOXIDQ5LzZ9ICAgPSAyMjE0MCAtIDQ5MDAgICA9IDE3MjQwICAgTnVtYmVyIG9mIHRlcm1zIGZyb20gMjUgdG8gNDAgPSAxNiAgICDiiLQgUmVxdWlyZWQgYXZlcmFnZSA9IDE3MjQwLzE2ID0gMTA3Ny41ICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1077.5  ",
        "option2" : " 1090.5  ",
        "option3" : " 1067.5  ",
        "option4" : " 1125.5    Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 8,
      "question" : " What does the author mean by 'call to action'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IFRoZSBwYXNzYWdlIGJlZ2lucyBieSBoaWdobGlnaHRpbmcgdGhhdCBwb3ZlcnR5IGlzIGh1bmdlci4gUG92ZXJ0eSBpcyBhIGxhY2sgb2Ygc2hlbHRlci4gUG92ZXJ0eSBpcyBiZWluZyAgIHNpY2sgYW5kIG5vdCBiZWluZyBhYmxlIHRvIHNlZSBhIGRvY3Rvci4uLiBUaGUgYXV0aG9yLCB0aGVuIG1lbnRpb25zIHRoYXQgcG92ZXJ0eSBpcyBhIGNhbGwgdG8gYWN0aW9uLiBUaGVyZSAgIGlzIGFuIGltcGxpY2l0IHN1Z2dlc3Rpb24gdG8gdGhlIGRpZmZlcmVudCBzdGFrZWhvbGRlcnMgdG8gYWN0LCBiZWNhdXNlIHRoZSBpc3N1ZSBvZiBwb3ZlcnR5IGNhbiBiZSAgIG92ZXJjb21lLiBMZXQgdXMgY29uc2lkZXIgdGhlIGFuc3dlciBvcHRpb25zIG5vdy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgZGlzY3Vzc2VzIHRoZSBjb21wbGV4IG5hdHVyZSBvZiBwb3ZlcnR5LiBUaGUgZGlmZmVyZW50IGFzcGVjdHMgb2YgICBwb3ZlcnR5IHZpei4gaHVuZ2VyLCBsYWNrIG9mIHNoZWx0ZXIsIGZlYXIgb2YgZnV0dXJlIGV0Yy4gYXJlIGRpc2N1c3NlZC4gVGhlIGF1dGhvciBhbHNvIHNheXMgdGhhdCB0aGVyZSBpcyBubyAgIHNpbmdsZSBjYXVzZSBvZiBwb3ZlcnR5LiAgSG93ZXZlciwgdGhlcmUgaXMgbm8gaW5kaWNhdGlvbiB0b3dhcmRzIHRoZSBkZWZpbml0aW9uIG9mIHBvdmVydHkgbGluZS4gVGhlcmVmb3JlLCAgIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBpbmNvcnJlY3QuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSByZXN0cmljdHMgaXRzZWxmIHRvIHF1YWxpdGF0aXZlIGFzcGVjdHMgb2YgcG92ZXJ0eS4gSXQgZG9lcyBub3QgZXZlbiAgIGRlbHZlIGludG8gdGhlIHF1YW50aXRhdGl2ZSBhc3BlY3RzIGxpa2UgZXN0aW1hdGlvbiBvZiBwb3ZlcnR5LiBSZWZlcmVuY2UgdG8gZGVtb2NyYWN5IC0gc3Vic3RhbnRpdmUgb3IgICBwcm9jZWR1cmFsIC0gaXMgbm90IGV2ZW4gcmVtb3RlbHkgbWFkZS4gSGVuY2UsIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBpbmNvcnJlY3QuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2VzIG1ha2UgYSBtZW50aW9uIG9mIGRpZmZlcmVuY2VzIGJldHdlZW4gcG92ZXJ0eSBpbiBkZXZlbG9wZWQgICBhbmQgbGVzcyBkZXZlbG9wZWQgbmF0aW9ucyBhbmQgd2l0aGluIHRoZSBzYW1lIGNvdW50cnkuIEhvd2V2ZXIsIHRoZSBjb250ZXh0IGluIHdoaWNoIHRoZSBhdXRob3IgaGFzICAgbWVudGlvbmVkICdjYWxsIHRvIGFjdGlvbicgaXMgbm90IGxpbWl0ZWQgdG8gdGhlIGluY29tZSBkaXZpZGUgYmV0d2VlbiB0aGUgcmljaCBhbmQgcG9vciBjb3VudHJpZXMuICBJdCBpcyAgIG11Y2ggbW9yZSBlbmNvbXBhc3NpbmcgZ2l2ZW4gdGhlIG11bHRpLWRpbWVuc2lvbmFsIG5hdHVyZSBvZiBwb3ZlcnR5IG91dGxpbmVkIGluIHRoZSBpbml0aWFsIGxpbmVzIG9mIHRoZSAgIHBhc3NhZ2UuICAgICAgICAgMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdTbyBwb3ZlcnR5IGlzIGEgY2FsbCB0byBhY3Rpb24gLS0gZm9yIHRoZSBwb29yIGFuZCB0aGUgICB3ZWFsdGh5IGFsaWtlIC0tIGEgY2FsbCB0byBjaGFuZ2UgdGhlIHdvcmxkIHNvIHRoYXQgbWFueSBtb3JlIG1heSBoYXZlIGVub3VnaCB0byBlYXQsIGFkZXF1YXRlIHNoZWx0ZXIsICAgYWNjZXNzIHRvIGVkdWNhdGlvbiBhbmQgaGVhbHRoLCBwcm90ZWN0aW9uIGZyb20gdmlvbGVuY2UsIGFuZCBhIHZvaWNlIGluIHdoYXQgaGFwcGVucyBpbiB0aGVpciAgIGNvbW11bml0aWVzLicgIFRoZSBzdGF0ZW1lbnQgY2xlYXJseSBkZWFscyB3aXRoIG1hdGVyaWFsIGFuZCBub24tbWF0ZXJpYWwgZGVwcml2YXRpb25zIGluIGh1bWFuIGxpZmUgdGhhdCAgIG5lZWQgdG8gYmUgZXJhZGljYXRlZC4gTGFjayBvZiBmb29kLCBzaGVsdGVyLCBlZHVjYXRpb24gZXRjLiBjYW4gYmUgdGhlIG1hdGVyaWFsIGRpbWVuc2lvbnM7IGFuZCB0aGUgZmVhciBvZiAgIGZ1dHVyZSwgbGFjayBvZiB2b2ljZSBpbiBkZWNpc2lvbiBtYWtpbmcgY2FuIGJlIHRoZSBub24tbWF0ZXJpYWwgZGltZW5zaW9ucy4gVGhpcyBhbnN3ZXIgb3B0aW9uIGJlc3QgICBjYXB0dXJlcyB0aGUgaW50ZW50IG9mICdjYWxsIG9mIGFjdGlvbi4nICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Defining the poverty line in the broadest   manner.  ",
        "option2" : " Bringing substantive democracy, not just   procedural democracy.  ",
        "option3" : " Reduce the income divide between rich and   poor countries.  ",
        "option4" : " Eradicating material and non-material   deprivations in a human life.   "
      }
    },
    {
      "index" : 9,
      "question" : " Why, according to the author, is poverty a  complex issue?  1. Inter-country and Intra-country variations  in dimensions of poverty   2. It requires everyone's attention.  3. Poverty is more, much more than just not  having enough money.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdQb3ZlcnR5IHZhcmllcyBjb25zaWRlcmFibHkgZGVwZW5kaW5nIG9uIHRoZSBzaXR1YXRpb24uICAgRmVlbGluZyBwb29yIGluIENhbmFkYSBpcyBkaWZmZXJlbnQgZnJvbSBsaXZpbmcgaW4gcG92ZXJ0eSBpbiBSdXNzaWEgb3IgWmltYmFid2UuICBUaGUgZGlmZmVyZW5jZXMgICBiZXR3ZWVuIHJpY2ggYW5kIHBvb3Igd2l0aGluIHRoZSBib3JkZXJzIG9mIGEgY291bnRyeSBjYW4gYWxzbyBiZSBncmVhdC4nIFRoZXNlIHN0YXRlbWVudHMgY2xlYXJseSAgIGhpZ2hsaWdodCBpbnRlci1jb3VudHJ5IGFuZCBpbnRyYS1jb3VudHJ5IHZhcmlhdGlvbnMgaW4gZGltZW5zaW9ucyBvZiBwb3ZlcnR5LiAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2VzIG1lbnRpb24sICdObyBtYXR0ZXIgaG93IHBvdmVydHkgaXMgZGVmaW5lZCwgaXQgY2FuIGJlIGFncmVlZCAgIHRoYXQgaXQgaXMgYW4gaXNzdWUgdGhhdCByZXF1aXJlcyBldmVyeW9uZSdzIGF0dGVudGlvbi4nIEhvd2V2ZXIsIGl0IGlzIG5vdCByZWxhdGVkIHRvIHRoZSBjb21wbGV4aXR5IG9mICAgcG92ZXJ0eS4gVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgaW5jb3JyZWN0LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucyAnUG92ZXJ0eSBpcyBodW5nZXIuIFBvdmVydHkgaXMgYSBsYWNrIG9mIHNoZWx0ZXIuICAgUG92ZXJ0eSBpcyBiZWluZyBzaWNrIGFuZCBub3QgYmVpbmcgYWJsZSB0byBzZWUgYSBkb2N0b3IuIFBvdmVydHkgaXMgbm90IGhhdmluZyBhY2Nlc3MgdG8gc2Nob29sIGFuZCBub3QgICBrbm93aW5nIGhvdyB0byByZWFkLiBQb3ZlcnR5IGlzIG5vdCBoYXZpbmcgYSBqb2IsIGZlYXIgZm9yIHRoZSBmdXR1cmUsIGFuZCBsaXZpbmcgb25lIGRheSBhdCBhIHRpbWUuIFBvdmVydHkgICBoYXMgbWFueSBmYWNlcywgY2hhbmdpbmcgZnJvbSBwbGFjZSB0byBwbGFjZSBhbmQgYWNyb3NzIHRpbWUsIGFuZCBoYXMgYmVlbiBkZXNjcmliZWQgaW4gbWFueSB3YXlzLicgSXQgICBpbXBsaWVzIHRoYXQgcG92ZXJ0eSBpcyBub3Qgc2ltcGx5IGFib3V0IG5vdCBoYXZpbmcgZW5vdWdoIG1vbmV5LCBidXQgaGFzIHNldmVyYWwgb3RoZXIgZWxlbWVudHMgbGlrZSAgIGxhY2sgb2YgZm9vZCwgc2hlbHRlciwgc2VjdXJpdHkgZnJvbSB2aW9sZW5jZSwgZXRjLiBUaGVyZWZvcmUsIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 and 3 only  ",
        "option2" : " 1, 2 and 3  ",
        "option3" : " 3 only  ",
        "option4" : " 1 and 3 only  "
      }
    },
    {
      "index" : 10,
      "question" : " Which of the following is the most logical and  rational inference that can be made from the  above passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBUaGUgZmlyc3QgbGluZSBvZiB0aGUgcGFzc2FnZSBzdWdnZXN0cywgJ1dpdGhpbiB0aGUgZnJlZWRvbSB0byBjaG9vc2UgYXJlIHRob3NlICAgZW5kb3dtZW50cyB0aGF0IG1ha2UgdXMgdW5pcXVlbHkgaHVtYW5zJywgYW5kIGFzIHBlciB0aGUgZmlyc3QgbGluZSBvZiBzZWNvbmQgcGFyYWdyYXBoICdFdmVuIHRoZSBtb3N0ICAgaW50ZWxsaWdlbnQgYW5pbWFscyBoYXZlIG5vbmUgb2YgdGhlc2UgZW5kb3dtZW50cycuIFRoZXNlIGxpbmVzIG1ha2UgaXQgY2xlYXIgdGhhdCBhbmltYWxzIGNhbid0IGV4ZXJjaXNlICAgZnJlZWRvbSBvZiBjaG9pY2UuIFRob3VnaCB0aGV5IGNhbiBiZSB0cmFpbmVkIHRvIGJlIHJlc3BvbnNpYmxlLCB0aGV5IGNhbid0IGNoYW5nZSB0aGVpciBwcm9ncmFtbWluZyAgIHdoaWNoIGFnYWluIG1lYW5zIHRoYXQgdGhleSBhcmUgaW5jYXBhYmxlIG9mIGV4ZXJjaXNpbmcgZnJlZWRvbSBvZiBjaG9pY2UuICAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogSXQgaXMgY2xlYXIgZnJvbSB0aGUgbGluZSwgJ3RoZXkgYXJlIHByb2dyYW1tZWQgYnkgdGhlaXIgaW5zdGluY3QgYW5kL29yIHRyYWluaW5nJywgICB3aGljaCBtZWFucyB0aGF0IHdoaWxlIGh1bWFucyB1c2Ugc2VsZi1hd2FyZW5lc3MsIGltYWdpbmF0aW9uLCBjb25zY2llbmNlIGFuZCBpbmRlcGVuZGVudCB3aWxsIHRvICAgbWFrZSBjaG9pY2VzLCBhbmltYWxzIGhhdmUgbm9uZS4gU28gdGhleSBtYWtlIGNob2ljZXMgYXMgcGVyIGluc3RpbmN0IGFuZC9vciB0cmFpbmluZy4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3Q6IFRoZSBwYXNzYWdlIGNsZWFybHkgbWVudGlvbnMsICdUaGV5IGNhbiBiZSB0cmFpbmVkIHRvIGJlIHJlc3BvbnNpYmxlLCBidXQgdGhleSAgIGNhbid0IHRha2UgcmVzcG9uc2liaWxpdHkgZm9yIHRoYXQgdHJhaW5pbmcnIGFuZCB0aGV5IGRvbid0IGhhdmUgdGhlIGZyZWVkb20gdG8gY2hvb3NlLCB3aGljaCBtYWtlcyBpdCAgIGNsZWFyIHRoYXQgdGhleSBjYW4ndCB0YWtlIHJlc3BvbnNpYmlsaXR5IGZvciB0aGVpciBpbm5vdmF0aXZlIGFjdGlvbnMsIGFsdGhvdWdoIHRoZXkgY2FuIGJlIG1hZGUgcmVzcG9uc2libGUgICBlbm91Z2ggZm9yIGNlcnRhaW4gYWN0aW9ucyBieSB0cmFpbmluZy4gICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgcGFzc2FnZSwgYW5pbWFscyBjYW4gYmUgdHJhaW5lZCB0byBiZSByZXNwb25zaWJsZSwgYnV0IG5vdCB0byBiZSAgIGludGVsbGlnZW50IG9yIGF3YXJlLiBUaGUgZGVncmVlIG9mIGludGVsbGlnZW5jZSBpbiBhbmltYWxzIGlzIGludHJpbnNpYyBvciBkZXBlbmRlbnQgb24gdGhlaXIgc3BlY2llcy4gU2VsZi0gIGF3YXJlbmVzcyBpcyBzb21ldGhpbmcgdGhhdCBhbmltYWxzIGFyZSBpbmNhcGFibGUgb2YuIFRodXMgdGhpcyBvcHRpb24gaXMgaW5jb3JyZWN0LiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " If trained properly, animals can also   exercise freedom of choice.   ",
        "option2" : " Animals act as per their instincts.   ",
        "option3" : " Animals are capable of taking   responsibility for their innovative actions.   ",
        "option4" : " Training can make animals responsible,   aware and intelligent.    "
      }
    },
    {
      "index" : 11,
      "question" : " A Bullet train travels 50% faster than a  Shatabdi Express train. Both start from point P  at the same time and reach point Q, 125 km  away from P at the same time. On the way  however, the Bullet train lost about 17.5  minutes while stopping at the stations. The  speed of Shatabdi Express train is:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IExldCBzcGVlZCBvZiBTaGF0YWJkaSBFeHByZXNzIHRyYWluIGJlICd4JywgdGhlbiBzcGVlZCBvZiBCdWxsZXQgdHJhaW4gd2lsbCBiZSAnMS41eCcuICAgVGltZSB0YWtlbiBieSBTaGF0YWJkaSBFeHByZXNzIHRyYWluIHRvIGNvdmVyIDEyNSBrbSA9IDEyNS94ICAgVGltZSB0YWtlbiBieSBCdWxsZXQgdHJhaW4gdG8gY292ZXIgMTI1IGttID0gMTI1LzEuNXggICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgIDEyNS94IC0gMTI1LzEuNXggPSAxNy41LzYwICAgT3IgMTI1L3ggLSAxMjUvMS41eCA9IDE3NS8oMTDDlzYwKSAgICBPciAxMjUvM3ggPSAxNzUvKDEww5c2MCkgICBPciB4ID0gMTAwMC83ID0gMTQyLjg1IGttLyBociAgIFNvLCBzcGVlZCBvZiBTaGF0YWJkaSBFeHByZXNzIHRyYWluIGlzIDE0Mi44NSBrbS8gaHIuICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgIDQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 71.4 km/hr  ",
        "option2" : " 102.85 km/hr  ",
        "option3" : " 142.85 km/hr  ",
        "option4" : " 79.12 km/hr   "
      }
    },
    {
      "index" : 12,
      "question" : " A man buys alcohol at Rs. 12.20 per litre.  Then, he adds water into it and sells the mixture  at Rs. 19 per litre, and manages to book a profit  of 42.5%. The ratio of alcohol to water received  by his customer is -  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IENvc3QgcHJpY2Ugb2YgYWxjb2hvbCA9IFJzLiAxMi4yMC9saXRyZSAgIFNlbGxpbmcgcHJpY2Ugb2YgdGhlIG1peHR1cmUgKGFsY29ob2wgKyB3YXRlcikgPSBScy4gMTkvbGl0cmUgICBDb3N0IHByaWNlIG9mIHRoZSBtaXh0dXJlIChhbGNvaG9sICsgd2F0ZXIpID0gMTkgw5cgWzEwMC8oMTAwICsgNDIuNSldID0gUnMuIDEzLjMgICBBcHBseWluZyB0aGUgYWxsZWdhdGlvbiBydWxlLCB3ZSBnZXQ6ICAgV2F0ZXIgICAgQWxjb2hvbCAgIDAgICAgMTIuMjAgICAgICAgIDEzLjMgICAgICAoMTMuMzAgLSAxMi4yMCA9IDEuMTApICAgKDEzLjMwIC0gMCA9IDEzLjMwKSAgICBSYXRpbyBvZiBhbGNvaG9sIHRvIHdhdGVyID0gMTMuMzAgOiAxLjEwID0gMTMzIDogMTEgICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 10  ",
        "option2" : " 12 : 31  ",
        "option3" : " 133 : 11  ",
        "option4" : " 11 : 133  "
      }
    },
    {
      "index" : 13,
      "question" : " A museum has an average of 640 visitors on  each Saturdays and Sundays, while 310 visitors  on other days. The average number of visitors  per day in a month of 30 days beginning with a  Saturday is  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEluIGEgbW9udGggb2YgMzAgZGF5cyBiZWdpbm5pbmcgd2l0aCBTYXR1cmRheSwgd2Ugd2lsbCBoYXZlIDUgU2F0dXJkYXlzLCA1IFN1bmRheXMgYW5kIDIwIE90aGVyIGRheXMuICAgVmlzaXRvcnMgb24gNSBTYXR1cmRheXMgPSA2NDAgw5cgNSA9IDMyMDAgICBWaXNpdG9ycyBvbiA1IFN1bmRheXMgPSA2NDAgw5cgNSA9IDMyMDAgICBWaXNpdG9ycyBvbiBPdGhlciBkYXlzID0gMzEwIMOXIDIwID0gNjIwMCAgIFNvLCBUb3RhbCBudW1iZXIgb2YgdmlzaXRvcnMgaW4gMzAgZGF5cyA9IDMyMDAgKyAzMjAwICsgNjIwMCA9IDEyNjAwICAgQXZlcmFnZSBudW1iZXIgb2YgdmlzaXRvcnMgcGVyIGRheSA9IDEyNjAwLzMwID0gNDIwICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 560  ",
        "option2" : " 240  ",
        "option3" : " 620  ",
        "option4" : " 420    Direction for the following 2 (two) items:    The following two items are based on graph given   below which shows the Covid-19 vaccination (in 2021)   by different cities for three consecutive months viz.   April, May, June of the same year. Study the graph and   answer the two items that follow.   "
      }
    },
    {
      "index" : 14,
      "question" : " The ratio of minimum vaccination and  maximum vaccination of which city is the  highest?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEZvciBBZ3JhOiAgIE1pbmltdW0gVmFjY2luYXRpb246IDQ1ICAgTWF4aW11bSBWYWNjaW5hdGlvbjogMTA1ICAgUmVxdWlyZWQgcmF0aW8gPSA0NS8xMDUgPSAzLzcgPSAzIDogNyA9IDAuNDMgICBGb3IgTHVja25vdzogICBNaW5pbXVtIFZhY2NpbmF0aW9uOiA0NSAgIE1heGltdW0gVmFjY2luYXRpb246IDkwICAgUmVxdWlyZWQgcmF0aW8gPSA0NS85MCA9IDEvMiA9IDEgOiAyID0gMC41ICAgRm9yIE5vaWRhOiAgIE1pbmltdW0gVmFjY2luYXRpb246IDQ1ICAgTWF4aW11bSBWYWNjaW5hdGlvbjogNzUgICBSZXF1aXJlZCByYXRpbyA9IDQ1Lzc1ID0gMy81ID0gMyA6IDUgPSAwLjYgICBGb3IgQWxsYWhhYmFkOiAgIE1pbmltdW0gVmFjY2luYXRpb246IDYwICAgTWF4aW11bSBWYWNjaW5hdGlvbjogMTIwICAgUmVxdWlyZWQgcmF0aW8gPSA2MC8xMjAgPSAxLzIgPSAxIDogMiA9IDAuNSAgIFRoZXJlZm9yZSwgdGhlIHJhdGlvIG9mIG1pbmltdW0gdmFjY2luYXRpb24gYW5kIG1heGltdW0gdmFjY2luYXRpb24gb2YgTm9pZGEgaXMgdGhlIGhpZ2hlc3QuICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Agra  ",
        "option2" : " Lucknow  ",
        "option3" : " Noida  ",
        "option4" : " Allahabad          5                                                                                                                                                              "
      }
    },
    {
      "index" : 15,
      "question" : " Average number of vaccinations done in  Lucknow is approximately what percentage of  the average number of vaccinations done in  Jhansi?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IE51bWJlciBvZiBWYWNjaW5hdGlvbnMgZG9uZSBpbiBMdWNrbm93IGluIGFsbCB0aGUgdGhyZWUgbW9udGhzID0gODUgKyA0NSArIDkwID0gMjIwICAgQXZlcmFnZSBudW1iZXIgb2YgVmFjY2luYXRpb25zIGRvbmUgaW4gTHVja25vdyA9IDIyMC8zICAgICAgICAgNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE51bWJlciBvZiBWYWNjaW5hdGlvbnMgZG9uZSBpbiBKaGFuc2kgaW4gYWxsIHRoZSB0aHJlZSBtb250aHMgPSAzMCArIDUwICsgNjAgPSAxNDAgICBBdmVyYWdlIG51bWJlciBvZiB2YWNjaW5hdGlvbnMgZG9uZSBpbiBKaGFuc2kgPSAxNDAvMyAgIFJlcXVpcmVkIFBlcmNlbnRhZ2UgPSB7KDIyMC8zKS8oMTQwLzMpfSDDlyAxMDAgICA9ICgyMjAvMTQwKSDDlyAxMDAgICA9IDE1Ny4xNCUgKGFwcHJveC4pICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 523%  ",
        "option2" : " 314%  ",
        "option3" : " 121%  ",
        "option4" : " 157%   "
      }
    },
    {
      "index" : 16,
      "question" : " Consider the two statements given below and  the question that follows.  Statement I: Average of x, y and z is 42 years.  Statement II: Thrice the sum of the ages of x  and y is 60 years.  Question: What is the age of z?  Which one of the following is correct in respect  of the question and the statements?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IExldCdzIGNoZWNrIGJvdGggdGhlIHN0YXRlbWVudHMuICAgRnJvbSBTdGF0ZW1lbnQgSTogICAoeCArIHkgKyB6KS8zID0gNDIgICBPciB4ICsgeSArIHogPSAxMjYgICBTbywgYWdlIG9mIHogY2FuJ3QgYmUgY2FsY3VsYXRlZC4gICBUaHVzLCBPbmx5IFN0YXRlbWVudCBJIGlzIG5vdCBzdWZmaWNpZW50LiAgIEZyb20gU3RhdGVtZW50IElJOiAgICAzKHggKyB5KSA9IDYwICAgT3IgeCArIHkgPSAyMCAgIFNvLCBhZ2Ugb2YgeiBjYW4ndCBiZSBjYWxjdWxhdGVkLiAgIFRodXMsIE9ubHkgU3RhdGVtZW50IElJIGlzIG5vdCBzdWZmaWNpZW50LiAgIEZyb20gYm90aCBTdGF0ZW1lbnRzIEkgYW5kIElJOiAgICB4ICsgeSArIHogPSAxMjYgLi4uLi4uLi4uLi4uIChpKSAgIHggKyB5ID0gMjAuLi4uLi4uLi4uLi4uLi4uLiAoaWkpICAgUHV0dGluZyB0aGUgdmFsdWUgb2YgKHggKyB5KSBmcm9tIGVxdWF0aW9uIChpaSkgaW4gZXF1YXRpb24gKGkpLCB3ZSBnZXQ6ICAgMjAgKyB6ID0gMTI2ICAgIE9yIHogPSAxMjYgLSAyMCA9IDEwNiAgIFNvLCBpdCBpcyBjbGVhciB0aGF0IGJvdGggc3RhdGVtZW50cyB0b2dldGhlciBhcmUgc3VmZmljaWVudCB0byBhbnN3ZXIgdGhlIHF1ZXN0aW9uLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Statement I alone is sufficient to answer the   question.  ",
        "option2" : " Statement II alone is sufficient to answer   the question.  ",
        "option3" : " Both statements I and II are required to   answer the question.  ",
        "option4" : " Even both statements I and II together are   not sufficient to answer the question.   "
      }
    },
    {
      "index" : 17,
      "question" : " Rohan works in a sanitizer factory. In a 176 ltr  mixture of glycer and alcohol, there's 80%  alcohol. How much alcohol should be  evaporated from the mixture to reduce its  percentage to 60%?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IFJhdGlvIG9mIGdseWNlciBhbmQgYWxjb2hvbCBpbiB0aGUgbWl4dHVyZSA9IDIwIDogODAgPSAxIDogNCAgIFNvLCBRdWFudGl0eSBvZiBnbHljZXIgaW4gdGhlIHNvbHV0aW9uID0gMTc2IMOXIDEvKDEgKyA0KSA9IDM1LjIgbHRyICAgU28sIHF1YW50aXR5IG9mIGFsY29ob2wgaW4gdGhlIHNvbHV0aW9uID0gMTc2IC0gMzUuMiA9IDE0MC44IGx0ciAgIEluIHRoZSBmaW5hbCBtaXh0dXJlLCBhbGNvaG9sIGlzIDYwJSBhbmQgZ2x5Y29sIGlzIDQwJS4gICA0MCUgY29ycmVzcG9uZHMgdG8gMzUuMiBsaXRyZXMuICAgNjAlIGNvcnJlc3BvbmRzIHRvIDM1LjIgw5cgKDYwJS80MCUpID0gNTIuOCBsaXRyZXMuICAgU28sIFF1YW50aXR5IG9mIGFsY29ob2wgdGhhdCBzaG91bGQgYmUgZXZhcG9yYXRlZCA9IDE0MC44IGxpdHIgLSA1Mi44IGx0ciA9IDg4IGx0ciAgICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 78 ltr  ",
        "option2" : " 88 ltr  ",
        "option3" : " 72 ltr  ",
        "option4" : " 76 ltr  "
      }
    },
    {
      "index" : 18,
      "question" : " If triplicate ratio of the ages of Ram and his  father is 8 : 125, and duplicate ratio of his  father and his grandfather's age is 36 : 49, then  what is the ratio of the ages of Ram and his  grandfather?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IFRyaXBsaWNhdGUgcmF0aW8gb2YgdGhlIGFnZXMgb2YgUmFtIGFuZCBoaXMgZmF0aGVyID0gOCA6IDEyNSAgIFNvLCByYXRpbyBvZiB0aGUgYWdlcyBvZiBSYW0gYW5kIGhpcyBmYXRoZXIgPSAoOCkxLzMgOiAoMTI1KTEvMyA9IDIgOiA1ICAgRHVwbGljYXRlIHJhdGlvIG9mIHRoZSBhZ2VzIG9mIGhpcyBmYXRoZXIgYW5kIGdyYW5kZmF0aGVyID0gMzYgOiA0OSAgIFNvLCByYXRpbyBvZiB0aGUgYWdlcyBvZiBoaXMgZmF0aGVyIGFuZCBncmFuZGZhdGhlciA9ICgzNikxLzIgOiAoNDkpMS8yID0gNiA6IDcgICBTbywgcmF0aW8gb2YgYWdlcyBvZiBSYW0sIGhpcyBmYXRoZXIgYW5kIGhpcyBncmFuZGZhdGhlciA9IDIgw5cgNiA6IDUgw5cgNiA6IDUgw5cgNyA9IDEyIDogMzAgOiAzNSAgIEhlbmNlLCB0aGUgcmF0aW8gb2YgdGhlIGFnZXMgb2YgUmFtIGFuZCBoaXMgZ3JhbmRmYXRoZXIgPSAxMiA6IDM1ICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  8 : 7  ",
        "option2" : " 16 : 35  ",
        "option3" : " 12 : 35  ",
        "option4" : " 16 : 14   "
      }
    },
    {
      "index" : 19,
      "question" : " Dinesh, a vegetable seller, cycled to market at a  constant speed of 30 km/h. He covered first  70% of the total distance in 10 min more than  the time taken in covering the remaining 30%  of the total distance. How far is the market?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IExldCBEaW5lc2ggdG9vayAndCcgbWludXRlcyB0byBjb3ZlciAzMCUgb2YgdGhlIGRpc3RhbmNlLiAgIFRoZW4sIHRoZSB0aW1lIHRha2VuIHRvIGNvdmVyIDcwJSBvZiB0aGUgZGlzdGFuY2UgPSAodCArIDEwKSBtaW51dGVzICAgICAgICAgNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERpc3RhbmNlID0gc3BlZWQgw5cgdGltZSAgIFNvLCBkaXN0YW5jZSBpcyBkaXJlY3RseSBwcm9wb3J0aW9uYWwgdG8gdGltZS4gICBTbywgKHQgKyAxMCkgID0gNzAvMzAgICBPciAodCArIDEwKSAgPSA3LzMgICBPciA3dCA9IDN0ICsgMzAgICBPciA0dCA9IDMwICAgT3IgdCA9IDMwLzQgPSA3LjUgbWluICAgVGltZSByZXF1aXJlZCBmb3IgY29tcGxldGluZyB0aGUgam91cm5leSA9IHQgKyAodCArIDEwKSA9IDJ0ICsgMTAgPSAyIMOXICg3LjUpICsgMTAgPSAyNSBtaW4gICBUb3RhbCBkaXN0YW5jZSA9IGF2ZXJhZ2Ugc3BlZWQgw5cgdG90YWwgdGltZSA9IDMwIMOXICgyNS82MCkgPSAxMi41IGttICAgICAgICAgeyDiiLUgNjAgbWluID0gMSBob3VyfSAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 12 km  ",
        "option2" : " 12.5 km  ",
        "option3" : " 9 km   ",
        "option4" : " 18 km    Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 20,
      "question" : " According to the passage, what conclusion/  conclusions can be drawn from the studies  done by Japanese scientists?   1. Japanese macaques can learn to survive the  cold winters of northern Japan.   2. Japanese macaques can learn new  activities.   3. Japanese macaques, in general, are curious.  Select the correct answer from the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogIEFjY29yZGluZyB0byB0aGUgcGFzc2FnZSwgSmFwYW5lc2UgbWFjYXF1ZXMgd2VyZSBhbHJlYWR5IGxpdmluZyBpbiB0aGUgaGlnaCAgIG1vdW50YWlucyBvZiBub3J0aGVybiBKYXBhbiB3aGVyZSwgaW4gd2ludGVyLCB0aGUgc25vdyBsaWVzIHRoaWNrLiBUaGUgcGFzc2FnZSByYXRoZXIgZGlzY3Vzc2VzIGhvdyB0aGV5ICAgZGlzY292ZXJlZCB0aGUgaG90IHZvbGNhbmljIHNwcmluZ3MgYW5kIGxlYXJudCB0byB0YWtlIGhvdCBiYXRocy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucywgJ1RoZSBtb25rZXlzIGludmVzdGlnYXRlZCBhbmQgZm91bmQgdGhhdCB3YXJtICAgd2F0ZXIgY291bGQgcHJvdmlkZSBhIGRlbGljaW91cyBiYXRoLiBBIGZldyB0cmllZCBpdC4gU29vbiB0aGUgaGFiaXQgc3ByZWFkLiBOb3cgYWxsIHRoZSBtb25rZXlzIHRoZXJlIHRha2UgICBob3QgYmF0aHMgZXZlcnkgd2ludGVyLicgVGhlc2Ugc2VudGVuY2VzIGNsZWFybHkgZXN0YWJsaXNoIHRoYXQgSmFwYW5lc2UgbWFjYXF1ZXMgaGF2ZSB0aGUgYWJpbGl0eSB0byBsZWFybiAgIG5ldyBhY3Rpdml0aWVzLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZSBjdXJpb3NpdHkgdGhhdCBsZWQgdG8gdGhpcyBkaXNjb3ZlcnksIGFuZCB0aGUgICBhZGFwdGFiaWxpdHkgdGhhdCBhbGxvd2VkIHRoZSBhbmltYWxzIHRvIGluY29ycG9yYXRlIHRoZSBuZXcgYWN0aXZpdHkgaW50byB0aGVpciByZWd1bGFyIGJlaGF2aW9yLCBpcyB0eXBpY2FsICAgb2YgdGhlIGVudGVycHJpc2Ugb2YgdGhlIG1hY2FxdWVzJywgd2hpY2ggbWVhbnMgdGhhdCB0aGUgY29uY2x1c2lvbiBpcyB2YWxpZCBmb3Igb3RoZXIgSmFwYW5lc2UgbWFjYXF1ZXMuICAgVGhlIHBhc3NhZ2UgYWxzbyB0YWxrcyBhYm91dCBhIGZldyBKYXBhbmVzZSBtYWNhcXVlcyAnaW52ZXN0aWdhdGluZycgYW5kICdmaW5kaW5nIG91dCcgdGhhdCB3YXJtIHNwcmluZyAgIHdhdGVyIGNvdWxkIGJlIHVzZWQgdG8gaGF2ZSBhIGdvb2QgYmF0aCBhbmQgdGhhdCBhIGZldyBvZiB0aGVtIHRyaWVkIGl0IG91dC4gVGhpcyByZWZsZWN0cyB0aGUgaW5xdWlzaXRpdmUgICBuYXR1cmUgb2YgbWFjYXF1ZXMuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  1 and 2 only.   ",
        "option2" : "  2 and 3 only   ",
        "option3" : "  1 and 3 only   ",
        "option4" : "  1, 2 and 3   "
      }
    },
    {
      "index" : 21,
      "question" : " With reference to the passage, suggest why  climate change can be hazardous for cities.  1. They are concentrated centers of population.   2. They are centers of economic activity.   Select the correct answer using the codes  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEl0IGlzIG1lbnRpb25lZCBpbiB0aGUgZmlyc3QgbGluZSBvZiBwYXNzYWdlLCAnR2l2ZW4gdGhhdCBjaXRpZXMgYXJlIGNvbmNlbnRyYXRlZCAgIGNlbnRlcnMgb2YgcG9wdWxhdGlvbiBhbmQgZWNvbm9taWMgYWN0aXZpdGllcywgYW55IGltcGFjdCBhbmQgZGlzcnVwdGlvbiwgd2hldGhlciBuYXR1cmFsIGFuZCBodW1hbiAgIGluZHVjZWQsIGhhcyB0aGUgcG90ZW50aWFsIHRvIGFmZmVjdCB2YXN0IG51bWJlcnMgb2YgcGVvcGxlLiBUaGUgZXhwZWN0ZWQgaW1wYWN0IG9mIGNsaW1hdGUgY2hhbmdlIHBvc2VzIGEgICBtYXNzaXZlIGNoYWxsZW5nZSB0byBjaXRpZXMuJyAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBTaW1pbGFybHksIGluIHRoZSBmaXJzdCBsaW5lLCBpdCBpcyBhbHNvIG1lbnRpb25lZCB0aGF0IGNpdGllcyBhcmUgY2VudGVycyBvZiBlY29ub21pYyAgIGFjdGl2aXR5LiBIZW5jZSBzdGF0ZW1lbnQgMiBpcyBhbHNvIGNvcnJlY3QuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2   ",
        "option2" : " 1 only   ",
        "option3" : " 2 only   ",
        "option4" : " None    "
      }
    },
    {
      "index" : 22,
      "question" : " Which one of the following best reflects the  most practical and lasting solution(s) of the  problem mentioned in the passage above?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBUaGUgcGFzc2FnZSB0YWxrcyBhYm91dCB0aGUgY2l0aWVzIHRoYXQgYXJlIGFscmVhZHkgdGhlcmUsIHdoaWNoIGFyZSBjb25jZW50cmF0ZWQgICBjZW50ZXJzIG9mIHBvcHVsYXRpb24gYW5kIGVjb25vbWljIGFjdGl2aXR5IGFuZCBwcm9uZSB0byB0aGUgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZS4gVGhlIHF1ZXN0aW9uIGFza3MgICB1cyB0byBmaW5kIHRoZSBtb3N0IHByYWN0aWNhbCBhbmQgbGFzdGluZyBzb2x1dGlvbiB0byB0aGUgcHJvYmxlbS4gQXZvaWRpbmcgY29uc3RydWN0aW9uIG9mIG5ldyBjaXRpZXMgaW4gICBsb3cgbHlpbmcgYXJlYXMgb3Igb24gc3RlZXAgc2xvcGVzIGNvdWxkIGJlIGFuIGlkZWFsLCBpZiBub3QgcHJhY3RpY2FsIGZ1dHVyZSBzb2x1dGlvbi4gSG93ZXZlciwgaXQgZG9lcyBub3QgICBhZGRyZXNzIHRoZSBwcm9ibGVtIG9mIGNpdGllcyB3aGljaCBhcmUgYWxyZWFkeSBzZXR0bGVkIGluIHN1Y2ggbG9jYXRpb25zLiBUaGUgcGFzc2FnZSB0YWxrcyBhYm91dCB0aGUgICBwcm9ibGVtcyBvZiBleGlzdGluZyBjaXRpZXMuICAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0OiBUaG91Z2ggdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBidWlsZGluZyByZXNpbGllbmNlIGFuZCBhZGFwdGluZyB0byBjbGltYXRlICAgY2hhbmdlIHNob3VsZCBiZSBhIGhpZ2ggcHJpb3JpdHkgZm9yIGNpdGllcywgdGhpcyBzb2x1dGlvbiBpcyBub3QgY29tcHJlaGVuc2l2ZSwgYXMgaXQgZG9lcyBub3QgZGVhbCB3aXRoIHRoZSAgIG90aGVyIG1haW4gcHJvYmxlbSwgd2hpY2ggaXMgdXJiYW4gcG92ZXJ0eSBhbmQgdnVsbmVyYWJpbGl0eSBvZiB0aGUgbW9zdCB2dWxuZXJhYmxlIHBlb3BsZSB0byBjbGltYXRlICAgY2hhbmdlLiBUaGlzIG9wdGlvbiBvbmx5IGRlYWxzIHdpdGggdGhlIHJlaGFiaWxpdGF0aW9uIG9mIGxpZmUgYW5kIGluZnJhc3RydWN0dXJlIHBvc3QgYSBkaXNhc3Rlci4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3Q6IFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnQnVpbGRpbmcgcmVzaWxpZW5jZSBhbmQgYWRhcHRpbmcgdG8gY2xpbWF0ZSBjaGFuZ2UgYXJlICAgdGhlcmVmb3JlIGEgaGlnaCBwcmlvcml0eSBmb3IgY2l0aWVzLicgQSByb2J1c3QgcHVibGljIHRyYW5zcG9ydCBhbmQgaW5kdXN0cmllcyBiYXNlZCBvbiBjbGVhbiB0ZWNobm9sb2dpZXMgICBhcmUgbm8gZG91YnQsIGNsaW1hdGUgbWl0aWdhdGlvbiBtZWFzdXJlcyB0aGF0IGhhdmUgdGhlIHBvdGVudGlhbCB0byByZWR1Y2UgY2FyYm9uIGZvb3RwcmludCBhbmQgdGh1cyAgICAgICAgIDcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlZmZlY3RzIG9mIGdsb2JhbCB3YXJtaW5nIGFuZCBjbGltYXRlIGNoYW5nZS4gWWV0IHRoaXMgaXMgbm90IGEgY29tcHJlaGVuc2l2ZSBzb2x1dGlvbiBhcyBpdCBkb2VzIG5vdCAgIGF1Z21lbnQgdGhlIGFkYXB0aXZlIGNhcGFjaXR5IG9mIHRoZSBwb29yZXN0IHNlY3Rpb25zLCB3aG8gYXJlIG1vc3QgYWZmZWN0ZWQgYnkgY2xpbWF0ZSBjaGFuZ2UuICAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGUgZXhwZWN0ZWQgaW1wYWN0IG9mIGNsaW1hdGUgY2hhbmdlIHBvc2VzIGEgbWFzc2l2ZSAgIGNoYWxsZW5nZSB0byBjaXRpZXMuJyBhbmQgJ0luIGV2ZXJ5IGNpdHksIHRoZSBwb29yZXN0IHBvcHVsYXRpb25zIGFyZSB0aGUgbW9zdCB2dWxuZXJhYmxlLCBiZWNhdXNlIHRoZXkgICBoYXZlIHRoZSBsZWFzdCBhZGFwdGl2ZSBjYXBhY2l0eSBhbmQgb2Z0ZW4gb2NjdXB5IGFyZWFzIHRoYXQgYXJlIG1vc3QgZXhwb3NlZCB0byBoYXphcmRzLicgVGh1cyB1cmJhbiAgIHBvdmVydHkgYW5kIHRoZSBjb25zZXF1ZW50IGxhY2sgb2YgYWRhcHRpdmUgY2FwYWNpdHkgYW1vbmcgdGhlIHBvb3IgdG8gY2xpbWF0ZSBjaGFuZ2UgYXJlIHRoZSB0d28gICBjaGFsbGVuZ2VzIGNvbmZyb250aW5nIHVyYmFuIHBsYW5uZXJzIGFuZCB0aGlzIG9wdGlvbiB0YWxrcyBhYm91dCBzdWNoIHBvbGljaWVzIHdoaWNoIGhhdmUgY28tYmVuZWZpdHMgZm9yICAgYm90aCwgdXJiYW4gcG92ZXJ0eSByZWR1Y3Rpb24gYXMgd2VsbCBhcyBhZGFwdGF0aW9uIHRvIGNsaW1hdGUgY2hhbmdlLiBUaHVzIE9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgKGFuZCAgIGJlc3QpIGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Cities should not be settled in areas prone   to hazards like low lying areas or on steep   slopes.   ",
        "option2" : " Cities should be made disaster resilient and   follow the principle of 'build back better'.   ",
        "option3" : " Cities should have robust public transport   and industries based on clean technologies.   ",
        "option4" : " Urban planners should make policies with   co-benefits to urban poverty reduction and   adaptation to climate change.     Direction for the following 2 (two) items:   The following two items are based on the graph given   below, which shows the number of male and female   students who have taken different optional subjects in   the board exam. Study the graph and answer the two   items that follow.           7                                                                                                                                                              "
      }
    },
    {
      "index" : 23,
      "question" : " The number of females that have chosen  computer is how many times of the number of  females that have chosen Arts?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEZyb20gdGhlIGdpdmVuIGdyYXBoIGl0IGlzIGNsZWFyIHRoYXQsICAgTnVtYmVyIG9mIGZlbWFsZXMgdGhhdCBoYXZlIGNob3NlbiBjb21wdXRlciA9IDExMCB0aG91c2FuZCAgICBOdW1iZXIgb2YgZmVtYWxlcyB0aGF0IGhhdmUgY2hvc2VuIEFydHMgPSA1MCB0aG91c2FuZCAgICBTbywgcmVxdWlyZWQgYW5zd2VyID0gMTEwIHRob3VzYW5kIC81MCB0aG91c2FuZCA9IDExMC81MCA9IDIuMiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2.2  ",
        "option2" : " 2  ",
        "option3" : " 2.02  ",
        "option4" : "  2.10   "
      }
    },
    {
      "index" : 24,
      "question" : " If 50 percent males that have chosen Sanskrit  and 40 percent females that have chosen  computer are selected to form a group for an  educational tour, then what is the ratio of males  and females in this group?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IE51bWJlciBvZiBtYWxlcyB0aGF0IGhhdmUgY2hvc2VuIFNhbnNrcml0ID0gMTIwIHRob3VzYW5kICAgIOKItCBOdW1iZXIgb2YgbWFsZXMgaW4gdGhlIGdyb3VwID0gNTAlIG9mIDEyMCA9ICgxLzIpIMOXIDEyMCA9IDYwIHRob3VzYW5kICAgIE51bWJlciBvZiBmZW1hbGVzIHRoYXQgaGF2ZSBjaG9zZW4gY29tcHV0ZXIgPSAxMTAgdGhvdXNhbmQgICAg4oi0IE51bWJlciBvZiBmZW1hbGVzIGluIHRoZSBncm91cCA9IDQwJSBvZiAxMTAgPSAoMi81KSDDlyAxMTAgPSA0NCB0aG91c2FuZCAgIFJlcXVpcmVkIHJhdGlvID0gNjAgdGhvdXNhbmQvNDQgdGhvdXNhbmQgPSAxNS8xMSA9IDE1OiAxMSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 12 : 11  ",
        "option2" : " 5 : 4  ",
        "option3" : " 3 : 2  ",
        "option4" : " 15 : 11   "
      }
    },
    {
      "index" : 25,
      "question" : " Average expense of a company for first 4 years  is Rs. 2x. Expense in the 5th year exceed the  previous average by Rs. 15. What is the  average expense for 5 years?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IFRvdGFsIGV4cGVuc2UgZm9yIGZpcnN0IDQgeWVhcnMgPSA0IMOXIDJ4ID0gOHggICBFeHBlbnNlIGluIHRoZSA1dGggeWVhciBleGNlZWQgdGhlIHByZXZpb3VzIGF2ZXJhZ2UgYnkgUnMuIDE1LiAgICBTbywgZXhwZW5zZSBpbiB0aGUgNXRoIHllYXIgPSAyeCArIDE1ICAgVG90YWwgZXhwZW5zZSBpbiA1IHllYXJzID0gOHggKyAoMnggKyAxNSkgPSAxMHggKyAxNSAgIEF2ZXJhZ2UgZXhwZW5zZSBmb3IgNSB5ZWFycyA9ICgxMHggKyAxNSkvNSA9IDJ4ICsgMyAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2.5x + 5  ",
        "option2" : " 8x + 3  ",
        "option3" : " 10x + 15  ",
        "option4" : " 2x + 3   "
      }
    },
    {
      "index" : 26,
      "question" : "Two drums are filled with a mixture of milk  and water, such that they have 30% and 23%  water respectively. If the contents of both  drums are mixed together, the water content in  the resulting mixture is 26%. What is the ratio  of water in the two drums?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEFwcGx5aW5nIHRoZSBhbGxlZ2F0aW9uIHJ1bGUsIHdlIGdldDogICAgU28sIHJlcXVpcmVkIHJhdGlvIG9mIHdhdGVyIGluIHRoZSB0d28gZHJ1bXMgPSAzIDogNCAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgICAgICA4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 3  ",
        "option2" : " 3 : 2  ",
        "option3" : " 3 : 4  ",
        "option4" : " 1 : 4   "
      }
    },
    {
      "index" : 27,
      "question" : " A dishonest shopkeeper sells mustard oil at cost  price. But while doing so he mixes palm oil in  mustard oil, and earns a profit of 20%. What  must be the percent of palm oil in the mixture  being sold? (Assuming the price of palm oil as  zero)  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEEgZGlzaG9uZXN0IHNob3BrZWVwZXIgZWFybnMgMjAlIGJ5IG1peGluZyBwYWxtIG9pbCB3aXRoIG11c3RhcmQgb2lsLiAgIEluIHRoaXMgcXVlc3Rpb24sIHdlIGhhdmUgdG8gY29uc2lkZXIgdGhlIHByaWNlIG9mIHBhbG0gb2lsIGFzIHplcm8uICAgUmF0aW8gb2YgbXVzdGFyZCBvaWwgYW5kIHBhbG0gb2lsID0gMTAwIDogMjAgPSA1IDogMSAgIFNvLCBQZXJjZW50YWdlIG9mIHBhbG0gb2lsIGluIHRoZSBtaXh0dXJlID0gWzEvKDEgKyA1KV0gw5cgMTAwID0gKDUwLzMpJSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " (25/2)%  ",
        "option2" : " 20%   ",
        "option3" : " 25%  ",
        "option4" : " (50/3)%   "
      }
    },
    {
      "index" : 28,
      "question" : " In a community milk donation centre, four  people donate equal quantity of milk, such that  ratio of milk and water in the mixtures donated  are 1 : 4, 2 : 3 , 3 : 7, and 9 : 1 respectively. All  the donated milk is kept in a large container.  What must be the ratio of milk and water in the  container?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IFJhdGlvIG9mIG1pbGsgYW5kIHdhdGVyIGluIHRoZSBmb3VyIG1peHR1cmVzID0gMSA6IDQsIDIgOiAzLCAzIDogNywgOSA6IDEgICBGaW5hbCByYXRpbyBvZiBtaWxrIGFuZCB3YXRlciBpbiB0aGUgZG9uYXRlZCBtaWxrID0gICA9IFt7MS8oMSArIDQpfSArIHsyLygyICsgMyl9ICsgezMvKDMgKyA3KX0gKyB7OS8oMSArIDkpfV0gOiBbezQvKDEgKyA0KX0gKyAzLygyICsgMyl9ICsgezcvKDMgKyA3KX0gKyB7MS8oMSAgICsgOSl9XSAgICA9IFsoMS81KSArICgyLzUpICsgKDMvMTApICsgKDkvMTApXSA6IFsoNC81KSArICgzLzUpICsgKDcvMTApICsgKDEvMTApXSAgID0gWygyICsgNCArIDMgKyA5KS8xMF0gOiBbKDggKyA2ICsgNyArIDEpLzEwXSAgID0gKDE4LzEwKSA6ICgyMi8xMCkgICA9IDkgOiAxMSAgIEhlbmNlLCBuZXcgcmF0aW8gb2YgbWlsayBhbmQgd2F0ZXIgaW4gdGhlIGNvbnRhaW5lciBpcyA5IDogMTEuICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 9 : 11  ",
        "option2" : " 9 : 10   ",
        "option3" : " 18 : 11  ",
        "option4" : " 15 : 16   "
      }
    },
    {
      "index" : 29,
      "question" : " Chandrika runs an e-rickshaw from A to B,  which are 20 km apart, at a speed of 4 km/hr,  and from B to C, which are 30 km apart, at a  speed of 6 km/hr, and then from C to D which  are 10 km apart. If his average speed during the  whole journey is 5 km/hr, then what must have  been the speed of e-rickshaw from C to D?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IERpc3RhbmNlIGZyb20gQSB0byBCID0gMjAga20gYW5kIFNwZWVkID0gNCBrbS9oICAgRGlzdGFuY2UgZnJvbSBCIHRvIEMgPSAzMCBrbSBhbmQgU3BlZWQgPSA2IGttL2ggICBEaXN0YW5jZSBmcm9tIEMgdG8gRCA9IDEwIGttLiBMZXQgeCBrbS9oIGJlIHRoZSBzcGVlZCBmcm9tIEMgdG8gRC4gICAgQXZlcmFnZSBzcGVlZCBvZiBlLXJpY2tzaGF3IGR1cmluZyB0aGUgd2hvbGUgam91cm5leSA9IDUga20vaHIgICBXaGVuIGEgcGVyc29uIHRyYXZlbHMgZDEgZGlzdGFuY2UgYXQgYSBzcGVlZCBvZiB4MSBrbS9ociBhbmQgZDIgZGlzdGFuY2UgYXQgYSBzcGVlZCBvZiB4MiBrbS9ociBhbmQgZDMgICBkaXN0YW5jZSBhdCBhIHNwZWVkIG9mIHgzIGttL2hyLCB0aGVuIGF2ZXJhZ2Ugc3BlZWQgb2YgdGhlIGpvdXJuZXkgaXMgZ2l2ZW4gYnk6ICAgKGQxICsgZDIgKyBkMykgLyBbKGQxL3gxKSArIChkMi94MikgKyAoZDMveDMpXSAgIGttL2ggICBBcHBseWluZyB0aGUgYWJvdmUgY29uY2VwdCwgd2UgZ2V0OiAgIDUgPSAoMjAgKyAzMCArIDEwKSAvIFsoMjAvNCkgKyAoMzAvNikgKyAoMTAveCldICAg4oeSIDYwL1soMTAgKyAoMTAveCldID0gNSAgIOKHkiA2MHggPSA1IMOXICgxMHggKyAxMCkgICAg4oeSIDYweCA9IDUweCArIDUwICAg4oeSIDEweCA9IDUwICAg4oeSIHggPSA1IGttL2hyICAgIEhlbmNlLCBTcGVlZCBvZiBlLXJpY2tzaGF3IGZyb20gQyB0byBEIGlzIDUga20vaHIuICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5 km/hr   ",
        "option2" : " 8 km/hr   ",
        "option3" : " 7 km/hr   ",
        "option4" : " 10 km/hr            8                                                                                                                                                               Directions for the following 3 (three) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 30,
      "question" : " Which one of the following statements best  reflects the crux of the passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0OiBJdCBpcyBub3doZXJlIG1lbnRpb25lZCBpbiB0aGUgcGFzc2FnZSB0aGF0IFZlcnN0ZWhlbiBjYW4gYmUgdXNlZCB0byBwcmVkaWN0ICAgaHVtYW4gYWN0aW9ucyBpbiBmdXR1cmUuIEl0IGlzIHByb3ZpZGVkIGluIHRoZSBwYXNzYWdlIHRoYXQgVmVyc3RlaGVuIGlzIHVzZWQgYnkgc29jaW9sb2dpc3RzIHRvIGdhaW4gYW4gICB1bmRlcnN0YW5kaW5nIG9mIHRoZSBtZWFuaW5ncyBiZWhpbmQgaHVtYW4gYWN0aW9ucy4gV2l0aCB0aGlzIGxpbWl0ZWQgaW5mb3JtYXRpb24sIGl0IGNhbm5vdCBiZSBhc3N1bWVkICAgdGhhdCBWZXJzdGVoZW4gY2FuIGJlIHVzZWQgdG8gcHJlZGljdCBodW1hbiBhY3Rpb25zIGluIGZ1dHVyZSwgYW5kIHRodXMgaXQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgICBwYXNzYWdlLiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBpbiBWZXJzdGVoZW4gYXBwcm9hY2gsIGl0IGlzIGltcG9ydGFudCBmb3IgdGhlICAgcmVzZWFyY2hlcnMgdG8gcGxhY2UgdGhlbXNlbHZlcyBpbiB0aGUgcG9zaXRpb24gb2YgdGhlIGluZGl2aWR1YWwgdG8gY29tcHJlaGVuZCB0aGUgbWVhbmluZ3MgYmVoaW5kIHRoZSAgIHBlcnNvbidzIGFjdGlvbiBhbmQgbWVhbmluZ3MgYXR0YWNoZWQgdG8gdGhlIG1vdGl2YXRpb24sIHB1cnBvc2VzIG9yIG91dGNvbWVzIG9mIHRoZWlyIGFjdGlvbnMsIGJlY2F1c2UgICBhY3Rpb25zIGNhbiBoYXZlIGRpZmZlcmVudCBtZWFuaW5ncyBpbiBkaWZmZXJlbnQgY3VsdHVyZXMgYW5kIHNvY2lldGllcy4gVGhpcyBtZWFucyB0aGF0IHJlc3VsdHMgcHJvZHVjZWQgICBieSBWZXJzdGVoZW4gYXJlIGNvbnRleHQgc3BlY2lmaWMuIFNvLCB0aGlzIGlzIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICAgICAgICAgOSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0OiBJdCBpcyBjbGVhcmx5IG1lbnRpb25lZCwgJ1dpdGhvdXQgcHJvcGVyIGludmVzdGlnYXRpb24sIG9uZSBpcyBhdCByaXNrIG9mICAgbWlzaW50ZXJwcmV0aW5nIHRoZSBkYXRhIGNvbGxlY3RlZC4nICBTbywgaWYgbm90IHByb3Blcmx5IGRvbmUgYW5kIHdpdGhvdXQgdGFraW5nIHZpZXcgb2YgdGhlIGN1bHR1cmUgb3IgICBjb250ZXh0LCBpdCB3b3VsZCBsZWFkIHRvIG1pc2xlYWRpbmcgcmVzdWx0cy4gSG93ZXZlciwgaXQgaGFzIGFuIGFtYmlndW91cyBtZWFuaW5nIC0gRG8gd2UgZ2V0ICAgbWlzbGVhZGluZyByZXN1bHRzIGlmIFZlcnN0ZWhlbiBwcm9jZWR1cmUgaXMgbm90IGFwcGxpZWQsIG9yIGlmIGl0IGlzIG5vdCBhcHBsaWVkIHByb3Blcmx5LiBBbHNvLCB0aGlzIGNhbm5vdCAgIGJlIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGQpIGlzIGluY29ycmVjdDogVGhlIGF1dGhvciwgaW4gdGhlIG9wZW5pbmcgbGluZXMsIGRlZmluZXMgVmVyc3RlaGVuLCB3aGVyZSBoZSBjbGVhcmx5IHN0YXRlcyB0aGF0IGl0ICAgaXMgYSB0ZWNobmlxdWUgdG8gc3R1ZHkgdGhlIG1lYW5pbmcgYmVoaW5kIGh1bWFuIGFjdGlvbnMgYW5kIG1lYW5pbmcgYmVoaW5kIHRoZWlyIG1vdGl2YXRpb25zLCBwdXJwb3NlcyAgIGFuZCBhY3Rpb25zLiBUaHVzLCBjbGFpbWluZyB0aGF0IHRoZSBtb3RpdmF0aW9uIGJlaGluZCBhIGh1bWFuIGFjdGlvbiBjYW4ndCBiZSBjb21wcmVoZW5kZWQgaXMgICBjb250cmFkaWN0b3J5IHRvIHdoYXQgaXMgcHJvdmlkZWQgaW4gdGhlIHBhc3NhZ2UuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Verstehen can be used to predict human   actions in future.   ",
        "option2" : " Results provided by Verstehen are context   specific.   ",
        "option3" : " Verstehen can give misleading results if not   applied properly.   ",
        "option4" : " The motivation of a person behind his   action can't be comprehended.   "
      }
    },
    {
      "index" : 31,
      "question" : " Which one of the following statements best  reflects the crux of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3BlbmluZyBsaW5lcyBvZiB0aGUgcGFzc2FnZSBzdHJlc3MgdGhlIG5lZWQgdG8gcmVmb3JtIHRoZSBlZHVjYXRpb24gc3lzdGVtICAgaW4gSW5kaWEgd2l0aCByZXNwZWN0IHRvIHRoZSBicmVhZHRoIGFuZCBkZXB0aCBvZiBzdWJqZWN0cyBiZWluZyBjaG9zZW4gZm9yIHN0dWR5IGFuZCByZXNlYXJjaCAtIGZyb20gICBzY2llbmNlIGFuZCB0ZWNobm9sb2d5IHRvIGh1bWFuaXRpZXMgYW5kIHNvY2lhbCBzY2llbmNlcy4gSG93ZXZlciwgaXQgZG9lcyBub3QgdGFsayBhYm91dCBlbGVtZW50YXJ5ICAgZWR1Y2F0aW9uIGluIHBhcnRpY3VsYXIgYW5kIGhlbmNlIHRoaXMgb3B0aW9uIGlzIGluY29ycmVjdC4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zIHRoYXQgSW5kaWFucyBrbm93IHZlcnkgbGl0dGxlIGFib3V0IHRoZWlyIG93biBjb3VudHJ5IG9yICAgdGhlIGNvbG9uaWFsIHBvd2VyIHRoYXQgcnVsZWQgSW5kaWEuIE9uIHRoZSBzYW1lIGxpbmVzLCB0aGVyZSBpcyB2ZXJ5IGxpdHRsZSBhd2FyZW5lc3MgYWJvdXQgdGhlIG90aGVyIG1ham9yICAgY291bnRyaWVzIGxpa2UgQ2hpbmEsIEJyYXppbCBvciBSdXNzaWEuIFRoZSBwYXNzYWdlIHN0cmVzc2VzIHRoZSBuZWVkIGZvciBncmVhdGVyIHVuZGVyc3RhbmRpbmcgb2YgdGhlc2UgICBjb3VudHJpZXMgYW5kIHJlc3Qgb2YgdGhlIHdvcmxkLiBIb3dldmVyLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBzdWdnZXN0IHRoYXQgSW5kaWEgbmVlZHMgdG8gc3BlY2lmaWNhbGx5ICAgbGVhcm4gZnJvbSB0aGUgZWR1Y2F0aW9uIHN5c3RlbXMgb2YgdGhlc2UgY291bnRyaWVzLiAgU28sIHRoaXMgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGMpIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIHNheXMgdGhhdCB3ZSBJbmRpYW5zIGtub3cgdmVyeSBsaXR0bGUgYWJvdXQgbm90IG9ubHkgb3VyIG93biBjb3VudHJ5ICAgYnV0IGFsc28gYWJvdXQgb3VyIGNvbG9uaXplci4gV2UgYXJlIGlnbm9yYW50IGFib3V0IG90aGVyIG1ham9yIG5hdGlvbnMgbGlrZSBSdXNzaWEsIENoaW5hIG9yIEJyYXppbC4gVGhlICAgcGFzc2FnZSBpbmRpcmVjdGx5IHN0cmVzc2VzIHRoZSBuZWVkIHRvIHVuZGVyc3RhbmQgdGhlIG1ham9yIHBvd2VycyBvZiB0aGUgd29ybGQgY2xvc2VseS4gVGhpcyBvcHRpb24gYmVzdCAgIGNhcHR1cmVzIHRoZSBlc3NlbmNlIGJlY2F1c2UgaXQgY292ZXJzIGJvdGggYXNwZWN0cyB3aGljaCBhcmUgbmVlZGVkIHRvIHJlZm9ybSBlZHVjYXRpb24gKCdFZHVjYXRpb24gaW4gICBJbmRpYSBuZWVkcyByb290IGFuZCBicmFuY2ggcmVmb3JtLi4uLicpIGFuZCB0aGUgZW1lcmdpbmcgdW5jZXJ0YWludGllcyBpbiB0aGUgZ2xvYmUgKCcuLi4uIHRoZXJlIGlzIG5vICAgY29uY2VydGVkIGF0dGVtcHQgdG8gdW5kZXJzdGFuZCB0aGUgd29ybGQgb3IgYmVjb21lIGJldHRlciBlcXVpcHBlZCB0byBmYWNlIGl0LicpLiBTbywgdGhpcyBvcHRpb24gaXMgdGhlICAgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gaW4gdGhlIHBhc3NhZ2Ugb24gdGhlIHJvbGUgb2YgdGhlIHF1b3RhcyBhbmQgcGF0cm9uYWdlLSAgbGFkZW4gcHJlc2VudCBoaWdoZXIgZWR1Y2F0aW9uIHN5c3RlbSBvbiB0aGUgZW1wbG95bWVudCByZWFkaW5lc3MgbGV2ZWxzIG9mIHRoZSBncmFkdWF0ZXMuIFRoaXMgb3B0aW9uICAgY291bGQgYmUgYW4gaW5mZXJlbmNlIGJ1dCBub3QgdGhlIGNydXguIEhlbmNlLCB0aGlzIGlzIG5vdCB0aGUgcmlnaHQgb3B0aW9uLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " There is an urgent need to improve   elementary education in India.   ",
        "option2" : " India can learn from the education systems   of China, Russia, and Brazil.   ",
        "option3" : " India needs to reform education to tackle   the future uncertainties of the globe.   ",
        "option4" : " Quotas and patronage in higher education   had made most of our graduates   unemployable.    "
      }
    },
    {
      "index" : 32,
      "question" : " Which one of the following statements best  reflects the central idea of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgbGluZXMgJ0l0IGlzIGEgbWV0aG9kIG9mIGltcHJvdmluZyByZWxhdGlvbnMgYW1vbmdzdCBuYXRpb25zIC4uLi4uLi4uLiB3aGljaCAgIGluY3JlYXNlcyB0aGUgcHJvYmFiaWxpdHkgb2YgZGVzaXJlZCByZWxhdGlvbnMgb2YgdHJhZGUgYW5kIGNvbW1lcmNlLCBhcyB3ZWxsIGFzIHBvbGl0aWNhbCByZWxhdGlvbnMsIGR1ZSB0byAgIHRoZSBhdHRyYWN0aW9uIHRoYXQgdGhpcyBjb25jZXB0IGdhcm5lcnMuJyBUaGVyZWZvcmUsIGl0IG1heSBoZWxwIGluIHRoZSBjcmVhdGlvbiBvZiBhIHBlYWNlZnVsIHdvcmxkLiAgIEhvd2V2ZXIsIHRoZXJlJ3Mgbm8gZGlzY3Vzc2lvbiBpbiB0aGUgcGFzc2FnZSByZWdhcmRpbmcgdW5pbGF0ZXJhbCBvciBtdWx0aWxhdGVyYWwgd29ybGQgb3JkZXIuIFRoZXJlZm9yZSwgICB0aGlzIGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkaXNjdXNzZXMgdGhlIHByb2Nlc3Mgb2YgY3VsdHVyYWwgZXhjaGFuZ2VzIGFtb25nIG5hdGlvbnMgaW4gICBnZW5lcmFsIHdpdGhvdXQgZ29pbmcgaW50byBzcGVjaWZpYyBhc3BlY3RzIGxpa2UgdGhlIGRldmVsb3BtZW50YWwgbGV2ZWxzIG9mIG5hdGlvbnMgLSB3aGV0aGVyIGRldmVsb3BpbmcgICBvciBkZXZlbG9wZWQuIEFsc28sIHRoZSBiZW5lZml0cyBvZiBjdWx0dXJhbCBleGNoYW5nZXMgYXJlIGVxdWFsbHkgYXZhaWxhYmxlIHRvIGFsbCBuYXRpb25zIGlycmVzcGVjdGl2ZSBvZiAgIHRoZWlyIGRldmVsb3BtZW50YWwgbGV2ZWxzLiBTbywgdG8gc2F5IHRoYXQgdGhpcyBpcyB0aGUgY2VudHJhbCBpZGVhIGlzIG5vdCBjb3JyZWN0LiAgIE9wdGlvbiAoYykgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgY29ycmVjdCBiZWNhdXNlIHRoZSBwYXNzYWdlIG5vdCBvbmx5IG1lbnRpb25zIHRoZSBpbXBvcnRhbmNlIG9mICAgY3VsdHVyYWwgZXhjaGFuZ2VzIGNvbmNlcm5pbmcgdGhlIG5hdGlvbiwgYnV0IGFsc28gb2YgaXRzIGltcGFjdCBvbiB0aGUgaW5kaXZpZHVhbHMuIFRoZSBhc3BlY3Qgb2YgdGhlICAgaW5kaXZpZHVhbCBpbiB0aGUgcGFzc2FnZSBpcyAnVGhlIGNvbmNlcHQgaXMgZXNzZW50aWFsbHkgYSBwcm9jZXNzIHRoYXQgaW52b2x2ZXMgYSB0d28td2F5IHRyYW5zZmVyIG9mIGFuICAgaW5kaXZpZHVhbCB0byBhIGRpZmZlcmVudCBjb3VudHJ5IGZyb20gdGhlaXIgaG9tZSBjb3VudHJ5IHRvIHByb21vdGUgdGhlaXIgaG9tZSBjb3VudHJ5J3MgdmFsdWVzIGFuZCAgIGN1bHR1cmUgYW5kIGltYmliZSB0aGUgdmlzaXRpbmcgY291bnRyeSdzIHRyYWRpdGlvbnMgYW5kIHdheSBvZiBsaWZlJywgdGhpcyBsaW5lIGRvZXMgZGlzY3VzcyB0aGUgaW1wYWN0IG9mICAgY3VsdHVyYWwgZXhjaGFuZ2Ugb24gdGhlIGluZGl2aWR1YWwsIGFzIHdlbGwgYXMgdGhlIHJvbGUgb2YgdGhlIGluZGl2aWR1YWwgaW4gY3VsdHVyYWwgZXhjaGFuZ2UuIFRoZXJlZm9yZSwgICB0aGlzIGlzIHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZSBvcGVuaW5nIGxpbmVzICdUaGUgaWRlYSBvZiBpbml0aWF0aW5nIGN1bHR1cmFsIGV4Y2hhbmdlIHByb2dyYW1zIHdhcyBmaXJzdCAgIGhhdGNoZWQgYWZ0ZXIgdGhlIDJuZCBXb3JsZCBXYXIgd2hlbiB0aGUgcGVvcGxlIG9mIGRpZmZlcmVudCBjb3VudHJpZXMgd2FudGVkIHRvIHVuaWZ5IGFnYWluc3QgdmlvbGVuY2UgICAgICAgICAxMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBoYXRlIGFtb25nIG5hdGlvbnMuJyBkb2VzIGluZGljYXRlIHRoZSBwb3RlbnRpYWwgb2YgY3VsdHVyYWwgZGlwbG9tYWN5LCBidXQgdGhlIGlkZWEgaGVyZSBpcyB0byBkZXZlbG9wICAgZ29vZCByZWxhdGlvbnMgdGhyb3VnaCBhIHBhcmFsbGVsIGRpcGxvbWF0aWMgcm91dGUsIGFuZCBub3QgdG8gc29sdmUgZXhpc3RpbmcgZGlzcHV0ZXMgYW1vbmcgbmF0aW9ucyBwZXIgc2UuICAgVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Cultural exchanges can contribute to the   development of a peaceful, unilateral   world.   ",
        "option2" : " Cultural exchange became a necessity for   developing nations due to their   developmental needs.   ",
        "option3" : " Cultural exchange programs help in the   wholesome development of an individual   and strengthen international relations   between countries.   ",
        "option4" : " In the post-second world war period,   cultural diplomacy gained significance to   solve the existing disputes between the   nations.           9                                                                                                                                                              "
      }
    },
    {
      "index" : 33,
      "question" : " Mr. Singh, a policeman, was chasing a criminal  on his motorcycle at a speed of 50 km/h. The  criminal was riding on a bicycle at a speed of  30 km/h ahead of him. If the policeman takes  15 min to catch the criminal, then find the extra  distance travelled by Mr. Singh to catch the  criminal (i.e. the difference in the distances  covered by the thief and the policeman)?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IFNwZWVkIG9mIHBvbGljZW1hbiA9IDUwIGttL2ggICBTcGVlZCBvZiBjcmltaW5hbCA9IDMwIGttL2ggICAgUmVsYXRpdmUgc3BlZWQgb2YgTXIuIFNpbmdoIGFuZCBjcmltaW5hbCA9IDUwIC0gMzAgPSAyMCBrbS9oICAg74GcIEV4dHJhIERpc3RhbmNlIHRyYXZlbGxlZCBieSBNci4gU2luZ2ggdG8gY2F0Y2ggdGhlIGNyaW1pbmFsID0gMjAgeCAoMTUvNjApID0gNSBrbSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10 km  ",
        "option2" : " 9 km  ",
        "option3" : " 12 km  ",
        "option4" : " 5 km   "
      }
    },
    {
      "index" : 34,
      "question" : " In a horse race, for the first round Kalicharan  makes his horse run at an average speed of 40  km/h, and in the second round he increases the  speed by 50%. What is the average speed of the  horse in the whole race?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IFdoZW4gYSBwZXJzb24gdHJhdmVscyBhIGRpc3RhbmNlIGF0IGEgc3BlZWQgb2YgeCBrbS9oIGFuZCBhZ2FpbiB0aGUgc2FtZSBkaXN0YW5jZSBhdCBhIHNwZWVkIG9mIHkga20vaCwgICB0aGVuIHRoZSBhdmVyYWdlIHNwZWVkIG9mIHRoZSBqb3VybmV5IGlzIGdpdmVuIGJ5ICgyeHkpLyh4ICsgeSkuICAgU3BlZWQgb2YgaG9yc2UgaW4gZmlyc3Qgcm91bmQgPSA0MCBrbS9oICAgU3BlZWQgb2YgaG9yc2UgaW4gc2Vjb25kIHJvdW5kID0gKDQwIHggMTUwKS8xMDAgPSA2MCBrbS9ociAgIEFuZCB0aGUgZGlzdGFuY2UgdHJhdmVsbGVkIGlzIHNhbWUuICAgU28sIGF2ZXJhZ2Ugc3BlZWQgPSAoMiDDlyA0MCDDlyA2MCkvKDQwICsgNjApID0gMiDDlyA0IMOXIDYgPSA0OCBrbS9ociAgICAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 38 km/h  ",
        "option2" : " 52 km/h  ",
        "option3" : " 48 km/h  ",
        "option4" : " 64 km/ hr   "
      }
    },
    {
      "index" : 35,
      "question" : " Nitin is preparing for sub-inspector running  test, where he needs to run 5 km. If he runs at a  speed 20 km/hr and after every kilometer he  takes a rest for 3 min, then how much time will  he take to finish the race?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IE5pdGluIGlzIHJ1bm5pbmcgYXQgYSBzcGVlZCAyMCBrbS9ociBhbmQgYWZ0ZXIgZXZlcnkga2lsb21ldGVyLCBoZSB0YWtlcyBhIHJlc3QgZm9yIDMgbWluLiAgICBOdW1iZXIgb2YgdGltZXMgTml0aW4gdGFrZXMgYSByZXN0IGluIDUga20gPSA0ICAgIFJlc3QgdGltZSA9IG51bWJlciBvZiB0aW1lcyByZXN0IHdhcyB0YWtlbiDDlyB0aW1lIGZvciBlYWNoIHJlc3QgPSA0IMOXIDMgPSAxMiBtaW4gICDvgZwgVG90YWwgdGltZSB0byBjb3ZlciA1IGttID0gWyg1LzIwKSDDlyA2MF0gbWluICsgMTIgbWluICAgID0gMTUgbWluICsgMTIgbWluID0gMjcgbWluICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 29 min   ",
        "option2" : " 27 min  ",
        "option3" : " 30 min  ",
        "option4" : " 31 min  "
      }
    },
    {
      "index" : 36,
      "question" : " Mridul is a seller of cattle feeds. In 108 kg of  cattle feed, he had some quantity of Rs. 60/kg  type cattle feed and some quantity of Rs. 72/kg  type cattle feed. By selling the mixture at Rs.  68.25/kg he gained a profit of 5%. What  quantity of Rs. 72/kg type cattle feed did he  add?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IENvc3QgcHJpY2Ugb2YgdHdvIHR5cGVzIG9mIGNhdHRsZSBmZWVkcyBpcyBScy4gNjAva2cgYW5kIFJzLiA3Mi9rZy4gICBCeSBzZWxsaW5nIHRoZSBtaXh0dXJlIGF0IFJzLiA2OC4yNS9rZyBoZSBnYWluZWQgcHJvZml0IG9mIDUlLiBTbywgY29zdCBwcmljZSBvZiB0aGUgbWl4dHVyZSA9IDY4LjI1IMOXICAgKDEwMC8xMDUpID0gUnMuIDY1ICAgQXBwbHlpbmcgQWxsZWdhdGlvbiBNZXRob2Q6ICAgIFJhdGlvIG9mIHRoZSBxdWFudGl0eSBvZiBScy4gNjAva2cgYW5kIFJzLiA3Mi9rZyB0eXBlcyBvZiBjYXR0bGUgZmVlZHMgPTcgOiA1ICAgU28sIFF1YW50aXR5IG9mIFJzLiA3Mi9rZyB0eXBlIG9mIGNhdHRsZSBmZWVkID0gMTA4IMOXIDUvKDUgKyA3KSA9IDQ1IGtnICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 45 kg  ",
        "option2" : " 35 kg  ",
        "option3" : " 30 kg  ",
        "option4" : " 58 kg   "
      }
    },
    {
      "index" : 37,
      "question" : " In two schools A and B, boys and girls are in  the ratio of 4 : 5 and 3 : 1 respectively. A group  of students has to be made for cleaning the  beach. In what ratio should the students be  selected from the two schools to get equal  number of boys and girls in the group?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEZyYWN0aW9uIG9mIGJveXMgaW4gc2Nob29sIEEgPSA0Lyg0ICsgNSkgPSA0LzkgICBGcmFjdGlvbiBvZiBib3lzIGluIHNjaG9vbCBCID0gMy8oMyArIDEpID0gMy80ICAgRnJhY3Rpb24gb2YgYm95cyBpbiBncm91cCA9IDEvMiAgICAgICAgIDExICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQXBwbHlpbmcgQWxsZWdhdGlvbiBNZXRob2QsIHdlIGdldDogICAgU28sIHJlcXVpcmVkIHJhdGlvID0gKDEvNCkgOiAoMS8xOCkgPSA5IDogMiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7 : 2  ",
        "option2" : " 8 : 1  ",
        "option3" : " 9 : 2  ",
        "option4" : " 10 : 1    Direction for the following 2 (two) items:    The following two items are based on the graph given   below, which shows the number of books purchased by   four friends P, Q, R and S in the years 2020 and 2021   for study. Study the graph and answer the two items   that follow.            10                                                                                                                                                              "
      }
    },
    {
      "index" : 38,
      "question" : " What is the ratio of the number of books  purchased by R and S together in 2020, to the  number of books purchased by P and Q  together in the year 2020?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IE51bWJlciBvZiBib29rcyBwdXJjaGFzZWQgYnkgUiBhbmQgUyB0b2dldGhlciBpbiAyMDIwID0gNjAgKyA4MCA9IDE0MCAgIE51bWJlciBvZiBib29rcyBwdXJjaGFzZWQgYnkgUCBhbmQgUSB0b2dldGhlciBpbiAyMDIwID0gNDAgKyA5MCA9IDEzMCAgIFJlcXVpcmVkIHJhdGlvID0gMTQwIDogMTMwID0gMTQgOiAxMyAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 14 : 15  ",
        "option2" : " 13 : 14  ",
        "option3" : " 14 : 13  ",
        "option4" : " 15 : 14   "
      }
    },
    {
      "index" : 39,
      "question" : " The number of books purchased by Q in the  year 2020 is approximately what percent  more/less than those purchased by S in the year  2021?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IE51bWJlciBvZiBib29rcyBwdXJjaGFzZWQgYnkgUSBpbiAyMDIwID0gOTAgICAgTnVtYmVyIG9mIGJvb2tzIHB1cmNoYXNlZCBieSBTIGluIDIwMjEgPSA1NSAgICBSZXF1aXJlZCBwZXJjZW50ID0gWyg5MCAtIDU1KS81NV0gw5cgMTAwID0gKDM1LzU1KSDDlyAxMDAgPSA2My42MyUgKGFwcHJveCkgICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 17%  ",
        "option2" : " 40%  ",
        "option3" : " 63%  ",
        "option4" : " 30%   "
      }
    },
    {
      "index" : 40,
      "question" : " In a game, average score of 25 players is 80,  but when double checked some mistakes were  found. It was found that in actuality a player  scored 65 more and one other player scored 40  less than was earlier counted. What would be  the correct average?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEF2ZXJhZ2Ugc2NvcmUgb2YgMjUgcGxheWVycyA9IDgwICAgVG90YWwgc2NvcmUgb2YgMjUgcGxheWVycyA9IDgwIMOXIDI1ID0gMjAwMCAgIEFmdGVyIGNvcnJlY3Rpb24sIHRvdGFsIHNjb3JlIG9mIDI1IHBsYXllcnMgPSAyMDAwICsgNjUgLSA0MCA9IDIwMjUgICBDb3JyZWN0IGF2ZXJhZ2UgPSAyMDI1LzI1ID0gODEgICBIZW5jZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 243  ",
        "option2" : " 49  ",
        "option3" : " 121  ",
        "option4" : " 81   "
      }
    },
    {
      "index" : 41,
      "question" : " The average of 80 numbers is 68. If two  numbers 36 and 74 are removed, then what  would be the new average?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEF2ZXJhZ2Ugb2YgODAgbnVtYmVycyA9IDY4ICAgU3VtIG9mIDgwIG51bWJlcnMgPSA2OCDDlyA4MCA9IDU0NDAgICBJZiAzNiBhbmQgNzQgYXJlIHJlbW92ZWQsIHRoZW4gc3VtIG9mIHRoZSByZW1haW5pbmcgNzggbnVtYmVycyA9IDU0NDAgLSAoMzYgKyA3NCkgPSA1MzMwICAgUmVzdWx0YW50IGF2ZXJhZ2Ugb2YgcmVtYWluaW5nIDc4IG51bWJlcnMgPSA1MzMwLzc4ID0gNjguMzMgICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 71.03  ",
        "option2" : " 68.33  ",
        "option3" : " 69.46  ",
        "option4" : " 72.13   Directions for the following 5 (five) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 42,
      "question" : " Based on the above passage, the following  assumptions have been made:  1. Negative consequences of climate change  are concentrated in West and Central  Africa where a disproportionately large  number of low-income countries are  located.   2. Coastal degradation is a major challenge in  Africa, and this is expected to worsen due  to the rise in the sea level.   Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICIgQnkgdGhlIG1pZGRsZSBvZiB0aGlzIGNlbnR1cnksIG1ham9yIGNlcmVhbCBjcm9wcyAgIGdyb3duIGFjcm9zcyBBZnJpY2Egd2lsbCBiZSBhZHZlcnNlbHkgaW1wYWN0ZWQsIGFsYmVpdCB3aXRoIHJlZ2lvbmFsIHZhcmlhYmlsaXR5IGFuZCBkaWZmZXJlbmNlcyBiZXR3ZWVuICAgY3JvcHMuLi4uLi4uLi4uIGEgcmVkdWN0aW9uIGluIG1lYW4geWllbGQgb2YgMTMlIGlzIHByb2plY3RlZCBpbiBXZXN0IGFuZCBDZW50cmFsIEFmcmljYSwgMTElIGluIE5vcnRoICAgQWZyaWNhLCBhbmQgOCUgaW4gRWFzdCBhbmQgU291dGhlcm4gQWZyaWNhLiIgVGh1cywgaXQgaXMgdmFsaWQgdG8gYXNzdW1lIHRoYXQgV2VzdCBhbmQgQ2VudHJhbCBBZnJpY2Egd2lsbCAgIGJlIHRoZSBtb3N0IGFmZmVjdGVkIHJlZ2lvbnMgaW4gQWZyaWNhLCBidXQgd2UgY2Fubm90IGFzc3VtZSB0aGF0IGEgZGlzcHJvcG9ydGlvbmF0ZWx5IGxhcmdlIG51bWJlciBvZiAgIGxvdy1pbmNvbWUgY291bnRyaWVzIGFyZSBsb2NhdGVkIGluIHRoaXMgcmVnaW9uLCBhcyB0aGUgcGFzc2FnZSBkb2VzIG5vdCBkaXNjdXNzIGFueXRoaW5nIHJlbGF0ZWQgdG8gICBpbmNvbWUgbGV2ZWxzIG9mIHRoZSBjb3VudHJpZXMgbG9jYXRlZCBoZXJlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgZG9lcyBub3QgbWVudGlvbiB0aGUgaW1wYWN0IG9mIHRoZSByaXNlIGluIHNlYSBsZXZlbCBvbiBjb2FzdGFsICAgZGVncmFkYXRpb24uIFNvLCB0aGlzIHN0YXRlbWVudCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgICAgICAgICAxMiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : "  1 and 2 only   ",
        "option4" : " None    "
      }
    },
    {
      "index" : 43,
      "question" : " Based on the above passage, which of the  following are true concerning agriculture in  Africa?   1. Millet and sorghum will witness an  increase in production in future due to their  greater resilience to heat-stress conditions.   2. Decline in the nutritional value of the crops  in the future.   3. Likely decline in profits and/or  employment in the agricultural sector in the  future.    4. Serious risk of decline in agricultural  productivity in the future.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdNaWxsZXQgYW5kIHNvcmdodW0gYXJlIHRoZSBtb3N0IHByb21pc2luZyBjcm9wcywgd2l0aCAgIGEgeWllbGQgbG9zcyBieSAyMDUwIG9mIGp1c3QgNSUgYW5kIDglLicgQnV0IHdlIGNhbm5vdCBiZSBkZWZpbml0aXZlIHRoYXQgbWlsbGV0IGFuZCBzb3JnaHVtIHdpbGwgd2l0bmVzcyAgIGFuIGluY3JlYXNlIGluIHByb2R1Y3Rpb24uIEFzIHBlciB0aGUgcGFzc2FnZSB0aGVpciBwcm9kdWN0aW9uIHdpbGwgZGVjbGluZSB0b28sIHRob3VnaCBsZXNzIGRyYXN0aWNhbGx5LiBTbywgICB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGRvZXNuJ3QgbWVudGlvbiB0aGF0IHRoZXJlIHdpbGwgYmUgYSBkZWNsaW5lIGluIHRoZSBudXRyaXRpb25hbCB2YWx1ZSAgIG9mIHRoZSBjcm9wcyBpbiB0aGUgZnV0dXJlLiBUaGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zIHRoYXQgbWFqb3IgY2VyZWFsIGNyb3BzIGdyb3duIGFjcm9zcyBBZnJpY2Egd2lsbCBiZSAgIGFkdmVyc2VseSBpbXBhY3RlZC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsIiBBZ3JpY3VsdHVyZSBpcyB0aGUgYmFja2JvbmUgb2YgQWZyaWNhJ3MgZWNvbm9teSBhbmQgICBhY2NvdW50cyBmb3IgdGhlIG1ham9yaXR5IG9mIGxpdmVsaWhvb2RzIGFjcm9zcyB0aGUgY29udGluZW50Li4uLi4uIEtleSByaXNrcyB0byBhZ3JpY3VsdHVyZSBpbmNsdWRlIC4uLi4uLi4uLi4gICByZXN1bHRpbmcgaW4gc2VyaW91cyBhZHZlcnNlIGVmZmVjdHMgb24gZm9vZCBzZWN1cml0eSBhbmQgb24gbGl2ZWxpaG9vZHMgYXQgdGhlIHJlZ2lvbmFsLCBuYXRpb25hbCBhbmQgICBpbmRpdmlkdWFsIGhvdXNlaG9sZCBsZXZlbHMuIiBUaHVzLCB0aGVyZSBpcyBhIHJpc2sgb2YgZmFsbGluZyBwcm9maXRzIGFuZCBsaXZlbGlob29kIGluIHRoZSBhZ3JpY3VsdHVyYWwgc2VjdG9yICAgaW4gQWZyaWNhIGluIHRoZSBmdXR1cmUuICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAiIEFmcmljYSBpcywgdGhlcmVmb3JlLCBhbiBleHBvc3VyZSBhbmQgdnVsbmVyYWJpbGl0eSAnaG90ICAgc3BvdCcgZm9yIGNsaW1hdGUgdmFyaWFiaWxpdHkgYW5kIGNoYW5nZSBpbXBhY3RzLiBJUENDIHByb2plY3Rpb25zIHN1Z2dlc3QgdGhhdCB3YXJtaW5nIHNjZW5hcmlvcyByaXNrICAgaGF2aW5nIGRldmFzdGF0aW5nIGVmZmVjdHMgb24gY3JvcCBwcm9kdWN0aW9uIGFuZCBmb29kIHNlY3VyaXR5LiIgVGh1cywgdGhlcmUgaXMgYSBzZXJpb3VzIHJpc2sgb2YgYSBkZWNsaW5lICAgaW4gYWdyaWN1bHR1cmFsIHByb2R1Y3Rpdml0eSBpbiB0aGUgZnV0dXJlIGluIEFmcmljYS4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only   ",
        "option2" : " 1 and 4 only   ",
        "option3" : " 2 and 3 only   ",
        "option4" : " 3 and 4 only   "
      }
    },
    {
      "index" : 44,
      "question" : " Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. Warmer temperatures increase conditions for  the survivability of agricultural pests.   2. More bio-engineered crops need to be  introduced in Africa to ensure food security.     Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoaXMgaW5mZXJlbmNlIGlzIHZhbGlkIGJlY2F1c2UgdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCB0aGUga2V5IHJpc2tzIHRvICAgYWdyaWN1bHR1cmUgaW5jbHVkZSBpbmNyZWFzZWQgcGVzdCBkYW1hZ2UgdG8gZm9vZCBzeXN0ZW0gaW5mcmFzdHJ1Y3R1cmUuIFdlIGNhbiBpbmZlciB0aGF0IHBlc3QgZGFtYWdlICAgd2lsbCBpbmNyZWFzZSBkdWUgdG8gdGhlaXIgaW5jcmVhc2UgaW4gbnVtYmVycyBpLmUuLCBiZXR0ZXIgc3Vydml2YWJpbGl0eS4gVGhlcmVmb3JlLCB0aGlzIG9wdGlvbiBpcyBjb3JyZWN0LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBkaXNjdXNzaW9uIG9mIHRoZSBwYXNzYWdlIGlzIGNlbnRyZWQgb24gdGhlIHJpc2tzIG9mIGNsaW1hdGUgY2hhbmdlIG9uICAgYWdyaWN1bHR1cmUgaW4gQWZyaWNhLiBUaGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIGFueSBjbGltYXRlIGNoYW5nZSBhZGFwdGF0aW9uIG1lYXN1cmVzIHRoYXQgbmVlZCB0byAgIGJlIGltcGxlbWVudGVkIGluIEFmcmljYS4gSXQgb25seSBtZW50aW9ucyB0aGUgbmFtZSBvZiBjbGltYXRlIHJlc2lzdGFudCBjZXJlYWxzIGxpa2UgbWlsbGV0IGFuZCBzb3JnaHVtICAgdGhhdCBjYW4gc3Vydml2ZSB0aGUgaGFyc2ggY2xpbWF0aWMgY2hhbmdlcyBpbiB0aGUgbG9uZyBydW4uIFRoaXMgb3B0aW9uIHN1Z2dlc3RzIGEgcG9zc2libGUgcHJhY3RpY2FsICAgc29sdXRpb24gaG93ZXZlcjsgaXQgY2Fubm90IGJlIGluZmVycmVkIGZyb20gdGhlIHBhc3NhZ2UuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only   ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 45,
      "question" : " What is the crucial message conveyed by the  above passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3B0aW9uIG1lbnRpb25zIHByb3Zpc2lvbnMgb2YgbW9yZSBmdW5kcyBieSB0aGUgc3RhdGUgZ292ZXJubWVudCBmb3IgcG9zdC0gIGRpc2FzdGVyIHJlY292ZXJ5LiBUaGUgcGFzc2FnZSwgaG93ZXZlciwgZG9lcyBub3QgZGlzY3VzcyB0aGUgaXNzdWUgb2YgZnVuZGluZyBmb3IgcmVjb3ZlcnkuICBIZW5jZSwgdGhpcyAgIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiBTbywgdGhpcyBpcyBub3QgdGhlIGNydWNpYWwgbWVzc2FnZSBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdFdmVuIGluIGluc3RhbmNlcyB3aGVyZSBTdGF0ZXMgaGF2ZSBtb3ZlZCBiZXlvbmQgdGhpcywgbG9uZy10ZXJtICAgcmVjb3ZlcnkgbWVhc3VyZXMgaGF2ZSBsYXJnZWx5IGZvY3VzZWQgb24gYWRkcmVzc2luZyBwaHlzaWNhbCB2dWxuZXJhYmlsaXRpZXMgc3VjaCBhcyB0aGUgcHJvdmlzaW9uIG9mICAgc2hlbHRlcicsIHNlZW0gdG8gc3VnZ2VzdCB0aGF0IHRoaXMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLCBidXQgdGhlIGxpbmVzICdXaGlsZSB0aGVzZSBpbnRlcnZlbnRpb25zIGFyZSAgIGNydWNpYWwsIGxvbmctdGVybSByZWNvdmVyeSBuZWVkcyBtdWNoIG1vcmUsIGJ1dCBpdCBpcyB0cmlja3kgYmVjYXVzZSBldmVyeWRheSB2dWxuZXJhYmlsaXRpZXMgc3RlbW1pbmcgICBmcm9tIHBvdmVydHkgYXJlIGFjY2VudHVhdGVkIGJ5IHJlY3VycmluZyBoYXphcmRzJywgc2hvdyB0aGF0IHJlc29sdXRpb24gb2YgcG92ZXJ0eSBpcyBtb3JlIGltcG9ydGFudCAgIHRoYW4gcHJvdmlzaW9uIG9mIHNoZWx0ZXIgKHdoaWNoIGlzIGEgc2hvcnQgdGVybSBtZWFzdXJlKSBmb3IgbG9uZyB0ZXJtIHJlY292ZXJ5IGZyb20gZGlzYXN0ZXJzLiBUaGVyZWZvcmUsICAgdGhpcyBpcyBub3QgdGhlIGNvcnJlY3QgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSBwYXNzYWdlLiAgICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGRvZXMgbm90IHN0YXRlIHRoYXQgdGhlIGN1cnJlbnQgdW5kZXJzdGFuZGluZyBvZiBsb25nLXRlcm0gbWVhc3VyZXMgICBpcyBpbnN1ZmZpY2llbnQsIHNvIGFzIHRvIHJlcXVpcmUgZnVydGhlciBzdHVkaWVzLiBUaGVyZWZvcmUsIHRoaXMgaXMgbm90IHRoZSBjb3JyZWN0IGNydWNpYWwgbWVzc2FnZSBvZiB0aGUgICBwYXNzYWdlLiAgICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGlzIG9wdGlvbiBjYXB0dXJlcyB0aGUgcmVhbCBlc3NlbmNlIG9mIHRoZSBwYXNzYWdlLiBUaGUgbGluZXMgJ1doaWxlIHRoZXNlICAgaW50ZXJ2ZW50aW9ucyBhcmUgY3J1Y2lhbCwgbG9uZy10ZXJtIHJlY292ZXJ5IG5lZWRzIG11Y2ggbW9yZSwgYnV0IGl0IGlzIHRyaWNreSBiZWNhdXNlIGV2ZXJ5ZGF5ICAgdnVsbmVyYWJpbGl0aWVzIHN0ZW1taW5nIGZyb20gcG92ZXJ0eSBhcmUgYWNjZW50dWF0ZWQgYnkgcmVjdXJyaW5nIGhhemFyZHMnLiBUaGVzZSBsaW5lcyByZWZsZWN0IHRoZSAgIG1lc3NhZ2UgdGhhdCBsb25nLXRlcm0gcmVjb3Zlcnkgd291bGQgYmUgY2hhbGxlbmdpbmcgdW5sZXNzIHRoZSB2dWxuZXJhYmlsaXRpZXMgb2YgcG92ZXJ0eSBhcmUgcmVzb2x2ZWQuICAgVGhlcmVmb3JlLCB0aGlzIG9wdGlvbiBjb3JyZWN0bHkgY29udmV5cyB0aGUgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSBwYXNzYWdlLiAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " State governments need to invest more in   post-disaster recovery focusing on long-  term measures.  ",
        "option2" : " Loss of shelter due to disasters is the most   critical hindrance in long-term recovery.  ",
        "option3" : " Further studies are required for giving   solutions to long-term recovery from   disasters.   ",
        "option4" : " Long-term recovery from disasters is   difficult without the resolution of poverty.          12                                                                                                                                                              "
      }
    },
    {
      "index" : 46,
      "question" : " Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. Practice of political philosophy has and  will always be open to change because of  the nature of humans to seek philosophical  justification.   2. Methods of political philosophers reflect  the state of political affairs of the society.   Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnUG9saXRpY2FsIHBoaWxvc29waHkgaGFzIGJlZW4gcHJhY3RpY2VkIGZvciBhcyBsb25nIGFzIGh1bWFuIGJlaW5ncyAgIGhhdmUgcmVnYXJkZWQgdGhlaXIgY29sbGVjdGl2ZSBhcnJhbmdlbWVudHMgbm90IGFzIGltbXV0YWJsZSBhbmQgcGFydCBvZiB0aGUgbmF0dXJhbCBvcmRlciBidXQgYXMgICBwb3RlbnRpYWxseSBvcGVuIHRvIGNoYW5nZSwgYW5kIHRoZXJlZm9yZSBhcyByZXF1aXJpbmcgcGhpbG9zb3BoaWNhbCBqdXN0aWZpY2F0aW9uJy4gVGhlIHBhc3NhZ2UgYWxzbyAgIG1lbnRpb25zIHRoYXQgcG9saXRpY2FsIHBoaWxvc29waHkgaXMgaW5mbHVlbmNlZCBieSB0aGUgZ2VuZXJhbCBwaGlsb3NvcGhpY2FsIHRlbmRlbmNpZXMgb2YgdGhlIGVwb2NoIGFuZCAgIGFsc28gYnkgdGhlIHByZXNzaW5nIHBvbGl0aWNhbCBpc3N1ZXMgb2YgdGhlIGRheS4gQm90aCB0aGVzZSBmYWN0b3JzIGFyZSBldmVyIGNoYW5naW5nIGFuZCBoZW5jZSBwb2xpdGljYWwgICBwaGlsb3NvcGh5IHdpbGwgYWxzbywgYnkgaW1wbGljYXRpb24sIGJlIG9wZW4gdG8gY2hhbmdlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBY2NvcmRpbmcgdG8gdGhlIHBhc3NhZ2UsIHBvbGl0aWNhbCBwaGlsb3NvcGh5IGhhcyBhIGRpdmVyc2l0eSBvZiBmb3JtcyBkdWUgdG8gdHdvICAgcmVhc29ucy4gT25lIGJlaW5nIHRoYXQgbWV0aG9kcyBhbmQgYXBwcm9hY2hlcyB1c2VkIGJ5IHRoZSBwb2xpdGljYWwgcGhpbG9zb3BoZXJzIHJlZmxlY3QgdGhlIGdlbmVyYWwgICAgICAgICAxMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBoaWxvc29waGljYWwgdGVuZGVuY2llcyBvZiB0aGVpciBlcG9jaDsgYW5kIHNlY29uZGx5LCB0aGUgcG9saXRpY2FsIHBoaWxvc29waGVycycgYWdlbmRhIGlzIGluZmx1ZW5jZWQgYnkgICB0aGUgcHJlc3NpbmcgcG9saXRpY2FsIGlzc3VlcyBvZiB0aGUgZGF5LiBUaGlzIGltcGxpZXMgdGhhdCBtZXRob2RzIG9mIHBvbGl0aWNhbCBwaGlsb3NvcGhlcnMgY2FuIHJlZmxlY3QgdGhlICAgc3RhdGUgb2YgcG9saXRpY2FsIGFmZmFpcnMgb2Ygc29jaWV0eS4gU28gdGhpcyBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2   ",
        "option2" : " 2 only   ",
        "option3" : " 1 only   ",
        "option4" : " None   "
      }
    },
    {
      "index" : 47,
      "question" : " A mixture of 90 litres of milk and water has  19% of water in it. What quantity of water  should be added to the mixture, so as to make  the percentage of water 46% in the resulting  mixture?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IFBlcmNlbnRhZ2Ugb2Ygd2F0ZXIgaW4gdGhlIG9yaWdpbmFsIG1peHR1cmUgPSAxOSUgICBQZXJjZW50YWdlIG9mIHdhdGVyIGluIHRoZSByZXN1bHRpbmcgbWl4dHVyZSA9IDQ2JSAgICBSYXRpbyBvZiB0aGUgcXVhbnRpdHkgb2Ygb3JpZ2luYWwgbWl4dHVyZSB0byB0aGUgcXVhbnRpdHkgb2Ygd2F0ZXIgdG8gYmUgYWRkZWQgPSA1NC8yNyA9IDIvMSAgIFNvLCBRdWFudGl0eSBvZiB3YXRlciB0aGF0IHNob3VsZCBiZSBhZGRlZCBpbiB0aGUgb3JpZ2luYWwgbWl4dHVyZSA9IDkwIMOXIDEvMiA9IDQ1IGxpdHJlcyAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 30 litres  ",
        "option2" : " 45 litres  ",
        "option3" : " 60 litres  ",
        "option4" : " 25 litres  "
      }
    },
    {
      "index" : 48,
      "question" : " For making Sambhar bada, if we use two parts  of rice and one part of urad dal, then find the  percentage of rice and urad dal in that dish?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IFJhdGlvIG9mIHJpY2UgaW4gdGhlIGRpc2ggPSBRdWFudGl0eSBvZiBSaWNlL1RvdGFsIFF1YW50aXR5ID0gMi8zICAgIFBlcmNlbnRhZ2Ugb2YgcmljZSBpbiB0aGUgZGlzaCA9ICgyLzMpIMOXIDEwMCA9ICgyMDAvMyklID0gNjYuNjclICAgUmF0aW8gb2YgdXJhZCBkYWwgaW4gdGhlIGRpc2ggPSBRdWFudGl0eSBvZiBVcmFkIGRhbC9Ub3RhbCBRdWFudGl0eSA9IDEvMyAgIFBlcmNlbnRhZ2Ugb2YgdXJhZCBkYWwgaW4gdGhlIGRpc2ggPSAoMS8zKSDDlyAxMDAgPSAoMTAwLzMpJSA9IDMzLjMzJSAgICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 166.67%, 133.33%  ",
        "option2" : " 68.33%, 33.33%  ",
        "option3" : " 66.67%, 33.33%  ",
        "option4" : " 66.67%, 36.67%   "
      }
    },
    {
      "index" : 49,
      "question" : " In a mixture of purified water and normal  water, the proportion of purified water is 60%  by weight. If from 80 gm of the mixture, 20 gm  is taken out and 6 gm of normal water is added  to the mixture, then find the ratio of purified  water and normal water in the new mixture?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEluIGEgbWl4dHVyZSBvZiBwdXJpZmllZCB3YXRlciBhbmQgbm9ybWFsIHdhdGVyLCB0aGUgcHJvcG9ydGlvbiBvZiBwdXJpZmllZCB3YXRlciBpcyA2MCUgYnkgd2VpZ2h0LiAgICBTbywgcmF0aW8gb2YgUHVyaWZpZWQgd2F0ZXIgYW5kIE5vcm1hbCB3YXRlciA9IDYwJSA6IDQwJSA9IDMgOiAyICAgVG90YWwgcXVhbnRpdHkgb2YgbWl4dHVyZSA9IDgwIGdtICAgUXVhbnRpdHkgb2YgcHVyaWZpZWQgd2F0ZXIgPSA4MCDDlyAzLygzICsgMikgPSA0OCBnbSAgIFF1YW50aXR5IG9mIG5vcm1hbCB3YXRlciA9IDgwIMOXIDIvKDMgKyAyKSA9IDMyIGdtICAgTm93LCAyMCBnbSBvZiBtaXh0dXJlIGlzIHRha2VuIG91dCBmcm9tIDgwIGdtIG9mIG1peHR1cmUuICAgIFNvLCBxdWFudGl0eSBvZiBwdXJpZmllZCB3YXRlciBpbiAyMCBnbSBvZiBtaXh0dXJlID0gMjAgw5cgMy8oMyArIDIpID0gMTIgZ20gICAgU28sIHF1YW50aXR5IG9mIG5vcm1hbCB3YXRlciBpbiAyMCBnbSBvZiBtaXh0dXJlID0gMjAgw5cgMi8oMyArIDIpID0gOCBnbSAgICBOb3csIFF1YW50aXR5IG9mIHB1cmlmaWVkIHdhdGVyIGxlZnQgaW4gdGhlIG1peHR1cmUgPSA0OCAtIDEyID0gMzYgZ20gICBRdWFudGl0eSBvZiBub3JtYWwgd2F0ZXIgbGVmdCBpbiB0aGUgbWl4dHVyZSA9IDMyIC0gOCA9IDI0IGdtICAgQW5kIDYgZ20gb2Ygbm9ybWFsIHdhdGVyIGlzIGFkZGVkIGluIHRoZSBtaXh0dXJlLiAgIFNvLCBRdWFudGl0eSBvZiBub3JtYWwgd2F0ZXIgaW4gdGhlIG5ldyBtaXh0dXJlID0gMjQgKyA2ID0gMzAgZ20gICBSYXRpbyBvZiBwdXJpZmllZCB3YXRlciBhbmQgbm9ybWFsIHdhdGVyIGluIHRoZSBuZXcgbWl4dHVyZSA9IDM2IDogMzAgPSA2IDogNSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 : 2  ",
        "option2" : " 5 : 6  ",
        "option3" : " 4 : 5  ",
        "option4" : " 6 : 5   "
      }
    },
    {
      "index" : 50,
      "question" : " Ratio of the speeds of Priyanka and Priya is  4:5. If Priya takes 44 minutes to reach a  destination, then find the time taken by  Priyanka to reach the same destination?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IFJhdGlvIG9mIHRoZSBzcGVlZHMgb2YgUHJpeWFua2EgYW5kIFByaXlhID0gNDo1ICAgIFJhdGlvIG9mIHRoZSB0aW1lIHRha2VuIGJ5IFByaXlhbmthIGFuZCBQcml5YSA9IDU6NCAgIFNvLCBsZXQgdGhlIHRpbWUgdGFrZW4gYnkgUHJpeWFua2EgdG8gcmVhY2ggdGhlIGRlc3RpbmF0aW9uID0gNXggICBUaW1lIHRha2VuIGJ5IFByaXlhIHRvIHJlYWNoIHRoZSBkZXN0aW5hdGlvbiA9IDR4ICAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgICA0eCA9IDQ0ICAgb3IsIHggPSAxMSAgIFNvLCBUaW1lIHRha2VuIGJ5IFByaXlhbmthIHRvIHJlYWNoIHRoZSBkZXN0aW5hdGlvbiA9IDV4ID0gNSDDlyAxMSA9IDU1IG1pbnV0ZXMgICBIZW5jZSwgb3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgICAgICAgIDE0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 36 minutes  ",
        "option2" : " 42 minutes  ",
        "option3" : " 55 minutes  ",
        "option4" : " 56 minutes   "
      }
    },
    {
      "index" : 51,
      "question" : " Akash and Sourabh start running  simultaneously from the ends (P and Q  respectively) of a straight track of length 1000  m, with their speeds being in the ratio 7 : 3  respectively. Whenever Akash reaches either of  the ends, he turns around and continues running  at the same speed. Whenever Sourabh meets  Akash, he turns around and continues running  at the same speed. When Akash comes back at  P for the first time, how far (in meters) is  Sourabh from point Q?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IERpc3RhbmNlIG9mIFBRID0gMTAwMCBtICAgU3BlZWQgcmF0aW8gPSA3IDogMyAgIEFrYXNoIGFuZCBTb3VyYWJoIHN0YXJ0IHRvZ2V0aGVyIHdpdGggc3BlZWRzIDd4IGFuZCAzeCByZXNwZWN0aXZlbHkuICAgICAgICAgICAgIHggICAgUCAgICAgIFIgIFMgIFEgICAgICAgNzAwbSAgICAgMzAwbSAgIFdoZW4gdGhleSBmaXJzdCBtZWV0IGF0IHBvaW50IFIsIHRoZW4sICAgRGlzdGFuY2UgcmF0aW8gPSBTcGVlZCByYXRpbyA9IDcvMyAoU2luY2UsIFRpbWUgaXMgc2FtZSkgICBTbywgUFIgPSA3MDAgbSwgUlEgPSAzMDAgbSAgIEF0IHBvaW50IFIgQWthc2ggY29udGludWVzIHJ1bm5pbmcgdG93YXJkcyBRLCB3aGlsZSBTb3VyYWJoIHR1cm5zIGFyb3VuZCBhbmQgY29udGludWVzIHJ1bm5pbmcgd2l0aCAgIHRoZSBzYW1lIHNwZWVkIHRvd2FyZHMgUSBhbmQgYWdhaW4gdGhleSBtZWV0IGF0IHBvaW50IFMuICAgU291cmFiaCBydW5zIGZyb20gUiAtPiBTLCB3aGlsZSBBa2FzaCBydW5zIGZyb20gUiAtPiBTIC0+IFEgLT4gUyAgIExldCBRUyA9IHgga20gICBEaXN0YW5jZSB0cmF2ZWxsZWQgYnkgU291cmFiaCBmcm9tIFIgdG8gUyA9IDMwMCAtIHggICBEaXN0YW5jZSB0cmF2ZWxsZWQgYnkgQWthc2ggPSAzMDAgKyB4ICAgRGlzdGFuY2UgcmF0aW8gPSBTcGVlZCByYXRpbyAoU2luY2UsIFRpbWUgaXMgc2FtZSkgICAoMzAwICsgeCkvKDMwMCAtIHgpID0gNy8zICAg4oeSIDkwMCArIDN4ID0gMjEwMCAtIDd4ICAg4oeSIDEweCA9IDIxMDAgLSA5MDAgICAg4oeSIDEweCA9IDEyMDAgICDih5IgeCA9IDEyMDAvMTAgPSAxMjAgbSAgIE5vdywgZGlzdGFuY2UgdHJhdmVsbGVkIGJ5IEFrYXNoIHRvIHJlYWNoIHBvaW50IFAgZnJvbSBwb2ludCBTLCBEMSA9IDEwMDAgLSAxMjAgPSA4ODAgbSAgIEF0IHRoaXMgcG9pbnQgb2YgdGltZSwgdGhlIGRpc3RhbmNlIG9mIFNvdXJhYmggZnJvbSBwb2ludCBRIGJlIEQyLiAgIERpc3RhbmNlIHJhdGlvID0gU3BlZWQgcmF0aW8gKFNpbmNlLCBUaW1lIGlzIHNhbWUpICAgRDIvRDEgPSAzLzcgICDih5IgRDIvODgwID0gMy83ICAg4oeSIEQyID0gMyDDlyA4ODAvNyA9IDM3Ny4xIG0gICBTbywgZGlzdGFuY2Ugb2YgU291cmFiaCBmcm9tIHBvaW50IFEgd2lsbCBiZSAzNzcuMSBtLiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 377.1 m  ",
        "option2" : " 1000 m  ",
        "option3" : " 933.5 m  ",
        "option4" : " 700.5 m          13                                                                                                                                                              "
      }
    },
    {
      "index" : 52,
      "question" : " Simran completes her journey in 10 hours. If  she completes half of her journey at a speed of  11 km/hr and the other half of the journey at a  speed of 14 km/hr, then find the total distance  in km.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IExldCB0b3RhbCBkaXN0YW5jZSB0byBiZSBjb3ZlcmVkIGJlIDJkIGttLiAgIEEgICAgIEMgICAgIEIgICAgICBkICAgICBkICAgU3BlZWQgb2YgU2ltcmFuIGluIGZpcnN0IGhhbGYgb2YgaGVyIGpvdXJuZXkgPSAxMSBrbS9ociAgIFNwZWVkIG9mIFNpbXJhbiBpbiBzZWNvbmQgaGFsZiBvZiBoZXIgam91cm5leSA9IDE0IGttL2hyICAgVGltZSB0YWtlbiBieSBTaW1yYW4gdG8gY292ZXIgZmlyc3QgaGFsZiBvZiBoZXIgam91cm5leSA9IGQvMTEgICBUaW1lIHRha2VuIGJ5IFNpbXJhbiB0byBjb3ZlciBzZWNvbmQgaGFsZiBvZiBoZXIgam91cm5leSA9IGQvMTQgICBUb3RhbCB0aW1lIHRha2VuIHRvIGNvbXBsZXRlIHRoZSBqb3VybmV5ID0gMTAgaG91cnMgICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgIGQvMTEgKyBkLzE0ID0gMTAgICDih5IgMjVkLygxNCDDlyAxMSkgPSAxMCAgIOKHkiAyNWQgPSAxNCDDlyAxMSDDlyAxMCAgIOKHkiBkID0gMTQgw5cgMTEwLzI1ICAg4oeSIGQgPSAzMDgvNSA9IDYxLjYga20gICBUb3RhbCBqb3VybmV5ID0gMmQgPSAyIMOXIDYxLjYgPSAxMjMuMiBrbSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 61.6 km  ",
        "option2" : " 51.3 km  ",
        "option3" : " 102.6 km  ",
        "option4" : " 123.2 km   "
      }
    },
    {
      "index" : 53,
      "question" : " The pie-chart given below shows the total  population of a village, and percent distribution  of population of different communities in that  village. Study the pie-chart and answer the  question that follows.  Total population of Hindu, Muslims and Sikhs  is how much percent more than the total  population of Christians and Others?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IFN1bSBvZiB0aGUgcGVyY2VudGFnZXMgb2YgdGhlIHBvcHVsYXRpb24gb2YgSGluZHUsIE11c2xpbXMgYW5kIFNpa2hzID0gMjEgKyAyNiArIDE2ID0gNjMlICAgICAgICAgMTUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdW0gb2YgdGhlIHBlcmNlbnRhZ2VzIG9mIHRoZSBwb3B1bGF0aW9uIG9mIENocmlzdGlhbnMgYW5kIE90aGVycyA9IDE5ICsgMTggPSAzNyUgICBSZXF1aXJlZCBwZXJjZW50ID0gWyg2MyAtIDM3KS8zN10gw5cgMTAwID0gNzAuMjclICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 21.3%  ",
        "option2" : " 70.27%  ",
        "option3" : " 50.65%  ",
        "option4" : " 28.5%  "
      }
    },
    {
      "index" : 54,
      "question" : " In a factory, ratio of male and female workers  is 8 : 5. There are 750 literate females. If 20%  male and 25% female workers are illiterate,  then what is the number of literate males?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IE1hbGUgd29ya2VycyBsaXRlcmFjeSUgPSAoMTAwIC0gMjApJSA9IDgwJSAgIEZlbWFsZSB3b3JrZXJzIGxpdGVyYWN5JSA9ICgxMDAgLSAyNSklID0gNzUlICAgUmF0aW8gb2YgbWFsZSBhbmQgZmVtYWxlIHdvcmtlcnMgaXMgOCA6IDUuICAgIE51bWJlciBvZiBsaXRlcmF0ZSBtYWxlcyA9IFs4eCDDlyAoODAvMTAwKV0gPSAzMngvNSAgIE51bWJlciBvZiBsaXRlcmF0ZSBmZW1hbGVzID0gWzV4IMOXICg3NS8xMDApXSA9IDE1eC80ICAgVGhlIG51bWJlciBvZiBsaXRlcmF0ZSBmZW1hbGVzIGluIHRoZSBmYWN0b3J5IGlzIDc1MC4gICBTbywgMTV4LzQgPSA3NTAgICBPciB4ID0gNzUwIMOXIDQvMTUgPSAyMDAgICBTbywgTnVtYmVyIG9mIGxpdGVyYXRlIG1hbGVzID0gMzJ4LzUgPSAzMiDDlyAyMDAvNSA9IDEyODAgICBIZW5jZSwgb3B0aW9uIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1250  ",
        "option2" : " 1220  ",
        "option3" : " 1240  ",
        "option4" : " 1280   "
      }
    },
    {
      "index" : 55,
      "question" : " The following graph shows the number of  houses (in thousands) built under PMAY in  different states. Study the graph and answer the  question that follows.  Number of houses made in state F is what  percent of the total number houses made in all  the states together?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IE51bWJlciBvZiBob3VzZXMgbWFkZSBpbiBzdGF0ZSBGID0gMyB0aG91c2FuZCAgICBOdW1iZXIgb2YgaG91c2VzIG1hZGUgaW4gYWxsIHRoZSBzdGF0ZXMgPSA2ICsgMTAgKyA0ICsgMTIgKyA4ICsgMyArIDcgPSA1MCB0aG91c2FuZCAgICDvgZxSZXF1aXJlZCBwZXJjZW50YWdlID0gKDMvNTApIMOXIDEwMCA9IDYlICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 6.5%  ",
        "option2" : " 6%  ",
        "option3" : " 8%  ",
        "option4" : " 7.6%          14                                                                                                                                                              "
      }
    },
    {
      "index" : 56,
      "question" : " For flood affected rehabilitation, 9 people  contributed some wheat, their average  contribution being 450 kg. One other person  also made a contribution, such that he  contributed 450 kg more than the average of all  these 10 persons. Find the total contribution  made by these 10 people.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IExldCB0aGUgbmV3IGF2ZXJhZ2UgY29udHJpYnV0aW9uIG9mIDEwIHBlb3BsZSBiZSB4IGtncy4gICBUaGVuLCBhY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgIOKHkiBbNDUwIMOXIDkgKyAoeCArIDQ1MCldLzEwID0geCAgIOKHkiBbNDA1MCArIDQ1MCArIHgpXSAvMTAgPSB4ICAg4oeSICg0NTAwLzEwKSArICh4LzEwKSA9IHggICDih5IgNDUwID0geCAtICh4LzEwKSAgIOKHkiA0NTAgPSA5eC8xMCAgIOKHkiB4ID0gNDUwMC85ID0gNTAwICAgU28sIGF2ZXJhZ2UgY29udHJpYnV0aW9uIG9mIDEwIHBlb3BsZSBpcyA1MDAga2cuICAgSGVuY2UsIHRvdGFsIGNvbnRyaWJ1dGlvbiBvZiAxMCBwZW9wbGUgPSAxMCDDlyA1MDAgPSA1MDAwIGtnICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5000 kg  ",
        "option2" : " 4500 kg  ",
        "option3" : " 4050 kg  ",
        "option4" : " 9000 kg   "
      }
    },
    {
      "index" : 57,
      "question" : " What will be the average of a, a + 2, a + 4, a +  6, ........., a + 12, where a ɛ N.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IGEsIGEgKyAyLCBhICsgNCwgYSArIDYsIC4uLi4uLi4uLiwgYSArIDEyLCB3aGVyZSBhIMmbIE4gICAgV2Uga25vdyB0aGF0LCBBdmVyYWdlIG9mIGEsIGIsIGMgLi4uLi4uLi4uLiAsIG0gY29uc2VjdXRpdmUgZXZlbiBvciBvbGQgbnVtYmVycyA9IChhICsgbSkvMiAgIFNvLCBSZXF1aXJlZCBhdmVyYWdlID0gKGEgKyBhICsgMTIpLzIgPSBhICsgNiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " a + 6  ",
        "option2" : " 2a + 12  ",
        "option3" : " a + 12  ",
        "option4" : " a + 24   "
      }
    },
    {
      "index" : 58,
      "question" : " The following graph shows the number of  people (in thousand) reading three different  types of newspapers in the given six years.  Study the graph and answer the question that  follows.  Number of people reading paper H in the year  2016 is what percent of the total number of  people reading all newspapers in the year  2019?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IE51bWJlciBvZiBwZW9wbGUgcmVhZGluZyBuZXdzcGFwZXIgSCBpbiAyMDE2ID0gMzAwMDAgICBUb3RhbCBudW1iZXIgb2YgcGVvcGxlIHJlYWRpbmcgYWxsIHRoZSBuZXdzcGFwZXJzIGluIHRoZSB5ZWFyIDIwMTkgPSAxMjAwMDAgICBIZW5jZSwgcmVxdWlyZWQgcGVyY2VudCA9ICgzMDAwMC8xMjAwMDApIMOXIDEwMCA9IDI1JSAgIFNvLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50%  ",
        "option2" : " 35%  ",
        "option3" : " 25%  ",
        "option4" : " 28%  "
      }
    },
    {
      "index" : 59,
      "question" : " In a fund collection for flood affected  rehabilitation, there was a total collection of Rs.  7700 in notes having denomination of Rs. 100,  Rs. 50 and Rs. 20 in the ratio of 4 : 5 : 6.   Consider the following statements.  1. Total number of all notes is 120.  2. There are 40 notes of Rs. 100.  3. The sum of the number of notes of Rs. 50  and Rs. 20 is 120.   Which of the above statements is/are correct?  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IExldCB0aGUgbnVtYmVyIG9mIG5vdGVzIG9mIGRlbm9taW5hdGlvbiBScy4gMTAwLCBScy4gNTAgYW5kIFJzLiAyMCBiZSA0eCwgNXggYW5kIDZ4IHJlc3BlY3RpdmVseS4gICAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgICA0eCDDlyAxMDAgKyA1eCDDlyA1MCArIDZ4IMOXIDIwID0gNzcwMCAgIE9yIDc3MHggPSA3NzAwICAgT3IgeCA9IDc3MDAvNzcwID0gMTAgICAgICAgICAxNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNvLCBudW1iZXIgb2YgUnMuIDEwMCBub3RlcyA9IDR4ID0gNCDDlyAxMCA9IDQwICAgTnVtYmVyIG9mIFJzLiA1MCBub3RlcyA9IDV4ID0gNSDDlyAxMCA9IDUwICAgTnVtYmVyIG9mIFJzLiAyMCBub3RlcyA9IDZ4ID0gNiDDlyAxMCA9IDYwICAgU28sIFRvdGFsIG51bWJlciBvZiBub3RlcyA9IDQwICsgNTAgKyA2MCA9IDE1MCAgIFN1bSBvZiB0aGUgbnVtYmVyIG9mIG5vdGVzIG9mIFJzLiA1MCBhbmQgUnMuIDIwIGRlbm9taW5hdGlvbiA9IDUwICsgNjAgPSAxMTAgICBUaGUgbnVtYmVyIG9mIFJzLiAxMDAgbm90ZXMgaXMgNDAuICAgSGVuY2UsIG9ubHkgc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAgU28sIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only 1 and 2  ",
        "option2" : " Only 2  ",
        "option3" : " Only 2 and 3  ",
        "option4" : " All 1, 2 and 3   "
      }
    },
    {
      "index" : 60,
      "question" : " Price of 15 shirts and 21 pants is equal to the  price of 18 shirts and 12 pants. What is the ratio  of the prices of one shirt and one pant?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IExldCBwcmljZSBvZiBvbmUgc2hpcnQgYmUgUnMuIFMgYW5kIHByaWNlIG9mIG9uZSBwYW50IGJlIFJzLiBQLiAgICBQcmljZSBvZiAxNSBzaGlydHMgYW5kIDIxIHBhbnRzIGlzIGVxdWFsIHRvIHRoZSBwcmljZSBvZiAxOCBzaGlydHMgYW5kIDEyIHBhbnRzLiAgICBTbywgMTVTICsgMjFQID0gMThTICsgMTJQICAg4oeSIDIxUCAtIDEyUCA9IDE4UyAtIDE1UyAgIOKHkiA5UCA9IDNTICAg4oeSIFMvUCA9IDkvMyA9IDMvMSA9IDMgOiAxICAgIEhlbmNlLCB0aGUgcmF0aW8gb2YgdGhlIHByaWNlcyBvZiBvbmUgc2hpcnQgYW5kIG9uZSBwYW50IGlzIDMgOiAxLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 : 3  ",
        "option2" : " 4 : 5  ",
        "option3" : " 3 : 1  ",
        "option4" : " 5 : 4   "
      }
    },
    {
      "index" : 61,
      "question" : " The following graph shows the quantity of the  exports of Rice, Pulses and Cashew (in lakh kg)  in the given four years. Study the graph and  answer the question that follows.  What is the ratio of the percentage increase in  rice export and cashew export from the year  2013 to 2014?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IFJpY2UgZXhwb3J0IGluIHllYXIgMjAxMyA9IDUwMCAoTGFraCBrZykgICBSaWNlIGV4cG9ydCBpbiAyMDE0ID0gNzAwIChMYWtoIGtnKSAgIFBlcmNlbnRhZ2UgaW5jcmVhc2UgaW4gZXhwb3J0IG9mIHJpY2UgZnJvbSB0aGUgeWVhciAyMDEzIHRvIDIwMTQgPSBbKDcwMCAtIDUwMCkvNTAwXSDDlyAxMDAgPSA0MCUgICAgU2ltaWxhcmx5LCBDYXNoZXcgZXhwb3J0IGluIHllYXIgMjAxMyA9IDQwMCAoTGFraCBLZykgICBDYXNoZXcgZXhwb3J0IGluIHllYXIgMjAxNCA9IDUwMCAoTGFraCBLZykgICBQZXJjZW50YWdlIGluY3JlYXNlIGluIGV4cG9ydCBvZiBjYXNoZXcgZnJvbSB0aGUgeWVhciAyMDEzIHRvIDIwMTQgPSBbKDUwMCAtIDQwMCkvNDAwXSDDlyAxMDAgPSAyNSUgICBTbywgUmVxdWlyZWQgcmF0aW8gPSA0MC8yNSA9IDgvNSA9IDggOiA1ICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 : 1  ",
        "option2" : " 3 : 2  ",
        "option3" : " 4 : 6  ",
        "option4" : " 8 : 5          15                                                                                                                                                               Directions for the following 6 (six) items:   Read the following four passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 62,
      "question" : " Based on the above passage, the following  assumptions have been made:  1. There is a need for more learning in  robotics regarding the interpretation of  human actions.  2. There should not be any confusion that  ethical outcomes should be one of the  priorities of the designers of autonomous  systems.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAiRmFyIGZld2VyIGxlYXJuIGZvdW5kYXRpb25hbCBjb25jZXB0cyBmcm9tIGNvZ25pdGl2ZSBzY2llbmNlIG9uICAgZGVjaXNpb24gbWFraW5nIGJ5IGh1bWFuIGFnZW50cywgaHVtYW4gbmF2aWdhdGlvbiBhbmQgd2F5LWZpbmRpbmcsIGh1bWFuIGNvbW11bmljYXRpb24sIGFuZCAgIGh1bWFuIGludGVycHJldGF0aW9uIG9mIGludGVudGlvbmFsIGJlaGF2aW91ciB0aGF0IGNvdWxkIGJlIHVzZWQgdG8gaGVscCByb2JvdHMgaW50ZXJwcmV0IGh1bWFuICAgYWN0aW9ucycsIGluZGljYXRlIHRoYXQgdGhlIGN1cnJlbnQga25vd2xlZGdlIHJlZ2FyZGluZyByb2JvdGljIGludGVycHJldGF0aW9uIG9mIGh1bWFuIGFjdGlvbnMgaXMgbm90ICAgYWRlcXVhdGUuIFRoaXMgY2FsbHMgZm9yIG1vcmUgbGVhcm5pbmcgaW4gdGhpcyBmaWVsZC4gSGVuY2UgdGhpcyBhc3N1bXB0aW9uIGlzIHZhbGlkLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0FsbCBhdXRvbm9tb3VzIHN5c3RlbXMgbWF5IGhhdmUgZXRoaWNhbCBpbXBhY3RzLCBhbmQgICBhbGwgc2hvdWxkIGJlIGRlc2lnbmVkIHRvIGF2b2lkIHVuZXRoaWNhbCBvdXRjb21lcyIuIFRoaXMgbGluZSBzaG93cyB0aGF0IGV0aGljYWwgaW1wYWN0cyBvZiByb2JvdHMgYXJlICAgaW1wb3J0YW50IGluIGRlc2lnbmluZy4gSGVuY2UgdGhpcyBhc3N1bXB0aW9uIGlzIHZhbGlkLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 63,
      "question" : " Which one of the following statements best  reflects the crux of the passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3BlbmluZyBsaW5lcyBvZiB0aGUgcGFzc2FnZSBtZW50aW9ucyBzb21lIG9mIHRoZSBhcmVhcyBpbiB3aGljaCByb2JvdHMgYXJlICAgb3BlcmF0aW5nIGluIHRoZSByZWFsbSBvZiBodW1hbiBiZWluZ3MgLSBsaWtlIHdvcmtpbmcgaW4gZmFjdG9yaWVzIGFuZCBjYXJpbmcgZm9yIHRoZSB2dWxuZXJhYmxlLiBIb3dldmVyLCAgIGl0IGRvZXMgbm90IHNheSB0aGF0IGh1bWFuIGRlcGVuZGVuY2Ugb24gcm9ib3RzIHdpbGwgYmUgYW4gaW5ldml0YWJsZSBmZWF0dXJlIG9mIHRoZSBmdXR1cmUgd29ybGQuIEhlbmNlICAgdGhpcyBzdGF0ZW1lbnQgZG9lcyBub3QgcmVmbGVjdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGRvZXMgbm90IHN0YXRlIHdpdGggY2VydGFpbnR5IHRoYXQgdGhlIGluY29ycG9yYXRpb24gb2Ygcm9ib3RzIHdpbGwgICBpbnZhcmlhYmx5IGxlYWQgdG8gdW5ldGhpY2FsIG91dGNvbWVzLCBhcyBzdGF0ZWQgaW4gdGhlIGxpbmVzICdBbGwgYXV0b25vbW91cyBzeXN0ZW1zIG1heSBoYXZlIGV0aGljYWwgICBpbXBhY3RzLCBhbmQgYWxsIHNob3VsZCBiZSBkZXNpZ25lZCB0byBhdm9pZCB1bmV0aGljYWwgb3V0Y29tZXMnLiBBbHNvLCB0aGUgaXNzdWUgb2YgZXRoaWNhbCBzY2llbnRpc3RzIGhhcyAgIG5vdCBiZWVuIGRpc2N1c3NlZC4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnVGhlc2UgZW1lcmdpbmcgc29jaWFsIGNvbnRleHRzIGFkZCBuZXcgcmVxdWlyZW1lbnRzIHRvIHRoZSAgIGtub3dsZWRnZSB0aGF0IHN1Y2Nlc3NmdWwgcm9ib3RpY2lzdHMgbmVlZC4gTWFueSByb2JvdGljaXN0cyBsZWFybiBiYXNpY3Mgb2YgaHVtYW4tbWFjaGluZSBpbnRlcmFjdGlvbiAgIGFuZCB1c2FiaWxpdHkuIEZhciBmZXdlciBsZWFybiBmb3VuZGF0aW9uYWwgY29uY2VwdHMgLi4uLi4uLiBodW1hbiBpbnRlcnByZXRhdGlvbiBvZiBpbnRlbnRpb25hbCBiZWhhdmlvdXIgICB0aGF0IGNvdWxkIGJlIHVzZWQgdG8gaGVscCByb2JvdHMgaW50ZXJwcmV0IGh1bWFuIGFjdGlvbnMuJywgc3RyZXNzIHRoZSBuZWVkIGZvciByb2JvdGljaXN0cyB0byB1cGRhdGUgdGhlaXIgICBrbm93bGVkZ2UgcmVnYXJkaW5nIGh1bWFuLW1hY2hpbmUgaW50ZXJhY3Rpb24gc28gdGhhdCBpdCBjYW4gY2F0ZXIgdG8gdGhlIGVtZXJnaW5nIHNvY2lhbCBjb250ZXh0cy4gVGhpcyAgICAgICAgIDE3ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5kaWNhdGVzIGEgcHJvYWN0aXZlIGFwcHJvYWNoIHRvIHRoZSBmdXR1cmUgcmF0aGVyIHRoYW4gYSBwZXNzaW1pc3RpYyBvbmUgdGhhdCBob2xkcyB0aGF0IGlzIGRpZmZpY3VsdCB0byAgIGFzY2VydGFpbiBmdXR1cmUgc29jaWFsIGNvbnRleHRzIGluIHRoZSBodW1hbi1tYWNoaW5lIGludGVyYWN0aW9uLiBUaGVyZWZvcmUsIHRoaXMgaXMgbm90IHRoZSBjb3JyZWN0IGNydXguICAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICJSb2JvdHMgaW5jcmVhc2luZ2x5IG9wZXJhdGUgYW1vbmcgcGVvcGxlLCBhbmQgdGhleSBub3cgICB3b3JrIGFsb25nc2lkZSB1cyBpbiBmYWN0b3JpZXMgYW5kIHdhcmVob3VzZXMsIHNoYXJlIG91ciBzdHJlZXRzIGFuZCBzaWRld2Fsa3MsIGNsZWFuIG91ciBob21lcywgYW5kICAgY2FyZSBmb3IgdGhlIG1vc3QgdnVsbmVyYWJsZSBhbW9uZyB1cycgYW5kICdBbGwgYXV0b25vbW91cyBzeXN0ZW1zIG1heSBoYXZlIGV0aGljYWwgaW1wYWN0cywgYW5kIGFsbCAgIHNob3VsZCBiZSBkZXNpZ25lZCB0byBhdm9pZCB1bmV0aGljYWwgb3V0Y29tZXMuIERlc2lnbmVycyBiZWFyIHNvbWUgcmVzcG9uc2liaWxpdHkgZm9yIHRoZWlyIGRlc2lnbnMsICAgZXZlbiBpbiBhIHdvcmxkIHdoZXJlIHRoZSBhdXRvbm9tb3VzIHN5c3RlbXMgdGhleSBkZXNpZ24gZXZlbnR1YWxseSBkZXNpZ24gb3RoZXIgYXV0b25vbW91cyBzeXN0ZW1zJy4gICBUaGUgZ2l2ZW4gbGluZXMgc2hvdyB0aGF0IHRoZSBkZXNpZ24gb2YgdGhlIHJvYm90cyBmb3IgYXZvaWRpbmcgdW5ldGhpY2FsIG91dGNvbWVzIHNob3VsZCBiZSBnaXZlbiAgIGltcG9ydGFuY2UuIFRodXMsIHRoaXMgaXMgdGhlIGNvcnJlY3QgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Dependence of humans on robots is going   to be the future of human society.   ",
        "option2" : " Implementation of robots in human society   shall be done by ethical scientists.  ",
        "option3" : " It is difficult to ascertain the future social   contexts in the sphere of human-machine   interaction.   ",
        "option4" : " With the increased use of robots for   humans, the ethical dimension of their   design and functionality should be given   due consideration.  "
      }
    },
    {
      "index" : 64,
      "question" : " Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. It is not possible to double the income of  every farmer in the country.    2. Government should use the policy of  subsidies to ensure minimum production  costs of the farmers.  3. Most of the farmers in the country may not  receive the benefits of the agricultural  policy.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgbGluZXMgJ0Zhcm0gaW5jb21lcyBjYW4sIHJlYWxpc3RpY2FsbHkgICBzcGVha2luZywgYmUgZG91YmxlZCwgb3IgdHJpcGxlZCBvbmx5IGZvciB0aG9zZSB0cnVseSBkZXBlbmRlbnQgb24gYWdyaWN1bHR1cmUgYW5kIGhhdmluZyBlbm91Z2ggbGFuZCB0byAgIHByb2R1Y3RpdmVseSBkZXBsb3kgbGFib3VyIGFuZCBjYXBpdGFsIHJlc291cmNlcycuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlIHBhc3NhZ2Ugbm93aGVyZSAgIGRpc2N1c3NlcyBzdWJzaWRpZXMgaW4gZ2VuZXJhbCBvciBpbiB0aGUgY29udGV4dCBvZiBtaW5pbWl6aW5nIHByb2R1Y3Rpb24gY29zdHMuIFNvLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCAgIGluZmVyZW5jZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBcyB0aGUgcGFzc2FnZSBtZW50aW9ucywgIlRoZSAzMCBtaWxsaW9uIGZhcm1lcnMgaW4gSW5kaWEgYXJlIHRoZSBvbmVzICAgcG9zc2Vzc2luZyBvbmUgaGVjdGFyZSBvciBtb3JlIGxhbmQsIHdoaWNoIGlzIHRoZSBtaW5pbXVtIGhvbGRpbmcgcmVxdWlyZWQgZm9yIGFncmljdWx0dXJlIHBlciBzZSB0byAgIGdlbmVyYXRlIGEgbWFqb3Igc2hhcmUgb2YgYW55IGZhbWlseSdzIGluY29tZS4gSXQgYWxzbyBtZWFucyB0aGF0ICdhZ3JpY3VsdHVyZSBwb2xpY3knIHNob3VsZCBwcmltYXJpbHkgICB0YXJnZXQgdGhlc2UgMzAgbWlsbGlvbiBob3VzZWhvbGRzIiAtICB0aGlzIGltcGxpZXMgdGhhdCB0aGUgcmVzdCBvZiB0aGUgZmFybWVycywgaS5lLiwgNjAtNjUgbWlsbGlvbiAgIGhvdXNlaG9sZHMgb2YgZmFybWVycyBwb3NzZXNzaW5nIGxlc3MgdGhhbiBvbmUgaGVjdGFyZSBvZiBsYW5kIG1heSBub3QgcmVjZWl2ZSB0aGUgYmVuZWZpdHMgb2YgdGhlIHBvbGljeSAgIGFzIHRoZSBwb2xpY3kgaXMgbm90IHRhcmdldGluZyB0aGVtIGFzIHBlciB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 3 only   ",
        "option3" : " 1 and 3 only   ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 65,
      "question" : " On the basis of the passage given above, the  following assumptions have been made:  1. Current level of technology is not adequate  for the efficient working of Metaverse.  2. To create a truly connected and attractive  universe or Metaverse, quantum  computing, mature block chain technology,  stable cryptocurrencies and protocols  around NFTs are a must.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdCbHVldG9vdGggbGFja3MgcmFuZ2UsIHJhdGUsIGFuZCByZWxpYWJpbGl0eS4gQ3VycmVudCAgIGdlbmVyYXRpb25zIG9mIFdpRmkgb2ZmZXIgdGhlIHJlcXVpcmVkIHNwZWVkIGJ1dCBzdWZmZXIgZnJvbSBjb25nZXN0aW9uIGFuZCBoaWdoIGxhdGVuY2llcyBvbmNlIG11bHRpcGxlICAgZGV2aWNlcyBhcmUgYWRkZWQuJyAgYW5kIGFsc28gJ1RoZSBtb3N0IHByZXNzaW5nIG1hdHRlciBpcyBwcm92aWRpbmcgJ21ldGF2ZXJzZSBncmFkZScgdWJpcXVpdG91cyAgIGNvbm5lY3Rpdml0eS4nIFRoZXNlIHN0YXRlbWVudHMgaW1wbHkgdGhhdCB0aGUgY3VycmVudCBsZXZlbCBvZiB0ZWNobm9sb2d5IGlzIG5vdCBhZGVxdWF0ZSBmb3IgdGhlIGVmZmljaWVudCAgIHdvcmtpbmcgb2YgdGhlIG1ldGF2ZXJzZS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgQWx0aG91Z2ggdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhlIG5lZWQgdG8gYnVpbGQgYW4gZWZmaWNpZW50IGluZnJhc3RydWN0dXJlICAgdGhhdCBzdXBwb3J0cyA1RyBhbmQgaGlnaC1lbmQgdGVjaG5vbG9neSBsaWtlIGEgbWV0YXZlcnNlLCBpdCBub3doZXJlIG1lbnRpb25zIHRoZSBuYW1lcyBvZiAgIHRlY2hub2xvZ2llcyBsaWtlIHF1YW50dW0gY29tcHV0aW5nLCBtYXR1cmUgYmxvY2sgY2hhaW4gdGVjaG5vbG9neSwgc3RhYmxlIGNyeXB0b2N1cnJlbmNpZXMgb3IgTkZUcy4gICBNb3Jlb3ZlciwgaXQgZG9lcyBub3Qgc2F5IHRoYXQgdGhlc2UgdGVjaG5vbG9naWVzIGFyZSBtYW5kYXRvcnkgcHJlLXJlcXVpc2l0ZXMgZm9yIG1ldGF2ZXJzZS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2   ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 66,
      "question" : " Consider the following suggestions made by  the author to make metaverse an integral part of  people's lives?  1. Providing 'metaverse grade' ubiquitous  connectivity.  2. Replacing outdated technologies like  Bluetooth and WiFi with better  technologies, such as LiFi  Which of the above is/are the most rational  and practical suggestions made by the author?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucywgJ0xvd2VyaW5nIHRoZSBiYXJyaWVycyB0byBlbnRyeSBmb3IgY29uc3VtZXJzICAgd2lsbCBiZSBjcml0aWNhbCBpbiBtYWtpbmcgdGhlIG1ldGF2ZXJzZSBhIHRocml2aW5nIGVjb3N5c3RlbS4gVGhlIG1vc3QgcHJlc3NpbmcgbWF0dGVyIGlzIHByb3ZpZGluZyAgICdtZXRhdmVyc2UgZ3JhZGUnIHViaXF1aXRvdXMgY29ubmVjdGl2aXR5LicgSGVuY2Ugc3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgYXMgdGhvdWdoIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnQmx1ZXRvb3RoIGxhY2tzIHJhbmdlLCByYXRlLCBhbmQgcmVsaWFiaWxpdHkuICAgQ3VycmVudCBnZW5lcmF0aW9ucyBvZiBXaUZpIG9mZmVyIHRoZSByZXF1aXJlZCBzcGVlZCBidXQgc3VmZmVyIGZyb20gY29uZ2VzdGlvbiBhbmQgaGlnaCBsYXRlbmNpZXMgb25jZSAgIG11bHRpcGxlIGRldmljZXMgYXJlIGFkZGVkLicsIGl0IGlzIG5vdCBzdWdnZXN0ZWQgdGhhdCB0aGV5IGFyZSBvdXRkYXRlZC4gRnVydGhlciwgdGhlIHBhc3NhZ2UgZG9lcyBub3QgICBpbXBseSB3aGV0aGVyIHRoZXkgbmVlZCB0byBiZSByZXBsYWNlZCB3aXRoIExpRmkuIEhlbmNlIHN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only  ",
        "option2" : " 1 only  ",
        "option3" : " 1 and 2  ",
        "option4" : " Neither 1 nor 2          17                                                                                                                                                              "
      }
    },
    {
      "index" : 67,
      "question" : " Which of the following statements best reflects  the central idea of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgb2YgdGhlIHBhc3NhZ2UgdGFsayBhYm91dCB0aGUgbXVsdGlmYXJpb3VzLCBtdXR1YWxseSAgIGludGVyc2VjdGluZyBpc3N1ZXMgdGhhdCBsaWUgaW4gdGhlIHBhdGggb2YgYWNoaWV2aW5nIHN1c3RhaW5hYmxlIGRldmVsb3BtZW50IGdvYWxzLiBUaGF0IHRoZXNlIGdvYWxzIGNhbm5vdCAgIGJlIGFjaGlldmVkIGJ5IGFueW9uZSB3b3JraW5nIGFsb25lIGlzIG9idmlvdXMgYW5kIGxvZ2ljYWwuIEhvd2V2ZXIsIGl0IGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSAgIHBhc3NhZ2UuIEhlbmNlIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zIGF0IHRoZSBiZWdpbm5pbmcsICdBbGwgMTcgU0RHcywgc2V0IGF0IHRoZSBVTiBHZW5lcmFsICAgQXNzZW1ibHkgaW4gMjAxNSwgYXJlIGluIGplb3BhcmR5IGR1ZSB0byB0aGUgY2xpbWF0ZSBjcmlzaXMsIHRoZSBDT1ZJRC0xOSBwYW5kZW1pYyBhbmQgYW4gaW5jcmVhc2UgaW4gICB0aGUgbnVtYmVyIG9mIGNvbmZsaWN0cyB3b3JsZHdpZGUuJyBJbiB0aGUgc3Vic2VxdWVudCBzdGF0ZW1lbnRzLCB0aGUgcGFzc2FnZSBzdGF0ZXMgaG93IHRoZSBwYW5kZW1pYyAgICAgICAgIDE4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFzIGNhdXNlZCBleGNlc3MgZGVhdGhzLCBhbmQgaG93IHRoZSBlY29ub21pYyBzaG9jayBoYXMgcHVzaGVkIG1vcmUgcGVvcGxlIGludG8gcG92ZXJ0eS4gSXQgYWxzbyBzdGF0ZXMgICBob3cgR3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGFyZSBzZXQgdG8gcmlzZS4gUmVhZCBjb2xsZWN0aXZlbHksIGl0IGltcGxpZXMgdGhhdCB0aGUgU0RHIHRhcmdldHMgYXJlIGF0ICAgZGFuZ2VyIG9mIHNsaXBwaW5nIGF3YXkgZnJvbSByZWFjaC4gSGVuY2Ugc3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgYXMgdGhvdWdoIHRoZSBwYXNzYWdlIG1lbnRpb25zIHRoYXQgdGhlIGFjaGlldmVtZW50IG9mIFNER3MgYXJlIGluIGplb3BhcmR5ICAgZHVlIHRvIHRoZSBjbGltYXRlIGNyaXNpcywgdGhlIENPVklELTE5IHBhbmRlbWljIGFuZCBhbiBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIGNvbmZsaWN0cyB3b3JsZHdpZGUsICAgaXQgY2Fubm90IGJlIGNhdGVnb3JpY2FsbHkgc2FpZCB0aGF0IHRoZSBTREcgdGFyZ2V0cyBjYW5ub3QgYmUgYWNoaWV2ZWQgd2l0aGluIHRoZSBkZWFkbGluZS4gRnVydGhlciwgdGhlICAgcGFzc2FnZSBkb2VzIG5vdCBleHBsaWNpdGx5IG1lbnRpb24gdGhlIFJ1c3NpYS1Va3JhaW5lIHdhci4gVGhlIGFuc3dlciBzaG91bGQgYmUgc291cmNlZCBmcm9tIHdpdGhpbiAgIHRoZSBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZS4gVGhlIHllYXIgMjAzMCBoYXMgYWxzbyBub3QgYmVlbiBoaWdobGlnaHRlZCBtb3JlIHRoYW4gb3RoZXJzIGluIHRoZSAgIHBhc3NhZ2UuIEhlbmNlIHN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3QgYXMgdGhvdWdoIHRoZSBzdGF0ZW1lbnQgaXMgbG9naWNhbCBhbmQgcmF0aW9uYWwsIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gdGhlICAgaW1wYWN0IG9mIHRoZSBjYXNjYWRpbmcgYW5kIGludGVyc2VjdGluZyBpc3N1ZXMgb24gdGhlIExlYXN0IERldmVsb3BlZCBDb3VudHJpZXMuIEl0IGFsc28gZG9lcyBub3QgZGlzY3VzcyAgIHRoZSBuZWVkIHRvIHN1cHBvcnQgdGhlbSBmaW5hbmNpYWxseSBhbmQgdGVjaG5vbG9naWNhbGx5LiBUaGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlIG1lYW5zIHRoZSBjb3JlICAgbWVzc2FnZSBpbXBsaWVkIGJ5IHRoZSB3aG9sZSBvZiB0aGUgcGFzc2FnZS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The SDGs cannot be achieved by anyone   working alone.  ",
        "option2" : " The SDGs are in danger of slipping away   from reach, along with their years of   progress in eradicating poverty, hunger and   ignorance.  ",
        "option3" : " The SDG targets cannot be achieved by   2030, given the challenges posed by the   Covid-19 pandemic, Climate crisis and   Russia-Ukraine war.  ",
        "option4" : " As the impact of cascading and intersecting   issues is more on least developed countries,   they need to be supported financially and   technologically.  "
      }
    },
    {
      "index" : 68,
      "question" : " Two birds started flying towards the same  direction at a speed of 20 km/hr and 25 km/hr.  What will be distance between them after 4  hours 45 min?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IFR3byBiaXJkcyBzdGFydGVkIGZseWluZyB0b3dhcmRzIHRoZSBzYW1lIGRpcmVjdGlvbiBhdCBhIHNwZWVkIG9mIDIwIGttL2hyIGFuZCAyNSBrbS9oci4gICBEaXN0YW5jZSBiZXR3ZWVuIHRoZW0gaW4gMSBob3VyID0gMjUgLSAyMCA9IDUga20gICAgTm93LCA0IGhvdXJzIDQ1IG1pbiA9IDQgaG91cnMgKyAoNDUvNjApIGhvdXJzID0gMTkvNCBocnMgICBTbywgZGlzdGFuY2UgYmV0d2VlbiB0aGVtIGFmdGVyIDE5LzQgaHJzID0gNSDDlyAxOS80ID0gMjMuNzUga20gICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 22.25 km  ",
        "option2" : " 23.75 km  ",
        "option3" : " 25.25 km  ",
        "option4" : " 26.75 km   "
      }
    },
    {
      "index" : 69,
      "question" : " Sarita started walking around a rectangular  field from point A. She walks along the breath  of the rectangle, then along the length of the  rectangle, and then finally along the diagonal of  the rectangle to reach point A again.   If she took 7 hrs to cover the entire journey,  then what was her average speed (in km/hr) in  the entire journey?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IFRvdGFsIGRpc3RhbmNlIHRyYXZlbGxlZCBieSBTYXJpdGEgPSA3ICsgMjQgKyDiiJp7KDI0KTIgKyAoNykyfSAgID0gNyArIDI0ICsg4oiaKDU3NiArIDQ5KSAgID0gMzEgKyAyNSAgID0gNTYga20gICBTaGUgdGFrZXMgNyBob3VycyB0byBjb21wbGV0ZSB0aGUgam91cm5leS4gICBTbywgQXZlcmFnZSBTcGVlZCA9IFRvdGFsIERpc3RhbmNlL1RvdGFsIFRpbWUgPSA1Ni83ID0gOCBrbS9ociAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 8 km/hr  ",
        "option2" : " 9 km/hr   ",
        "option3" : " 7 km/hr  ",
        "option4" : " 11 km/hr   "
      }
    },
    {
      "index" : 70,
      "question" : " 100 people were divided into two groups of 40  and 60 people. If the average age of 40 people  and 60 people is 50 years and 55 years  respectively, what must be the average age of  all the persons taken together?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEF2ZXJhZ2UgYWdlIG9mIDQwIHBlb3BsZSBpcyA1MCB5ZWFycywgYW5kIGF2ZXJhZ2UgYWdlIG9mIDYwIHBlb3BsZSBpcyA1NSB5ZWFycy4gICBTbywgc3VtIG9mIHRoZSBhZ2VzIG9mIDQwIHBlb3BsZSA9IDQwIMOXIDUwID0gMjAwMCB5ZWFycyAgIFN1bSBvZiBhZ2VzIG9mIDYwIHBlb3BsZSA9IDYwIMOXIDU1ID0gMzMwMCB5ZWFycyAgIOKItCBSZXF1aXJlZCBhdmVyYWdlIGFnZSA9ICgyMDAwICsgMzMwMCkvKDQwICsgNjApID0gNTMwMC8xMDAgPSA1MyB5ZWFycyAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 45 years  ",
        "option2" : " 95 years  ",
        "option3" : " 53 years  ",
        "option4" : " 65 years          18                                                                                                                                                              "
      }
    },
    {
      "index" : 71,
      "question" : " If third proportion of A and B is (x + y)/(x - y)  and value of A is (x2 - y2), then find the value of  B.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IElmIGEgYW5kIGIgYXJlIHR3byBudW1iZXJzLCB0aGVuIHRoZWlyIHRoaXJkIHByb3BvcnRpb24gKGMpIGlzIGdpdmVuIGFzLCAgICBjID0gYjIvYSAgICAgICAgICAgICAgLi4uLi4uKGkpICAgSGVyZSwgYSA9ICh4Mi0geTIpLCBhbmQgYyA9ICh4ICsgeSkvKHggLSB5KSBhbmQgYiA9IEIgICBQdXR0aW5nIHRoZSBhYm92ZSB2YWx1ZXMgaW4gZXF1YXRpb24gKGkpLCB3ZSBnZXQ6ICAgKHggKyB5KS8oeCAtIHkpID0gQjIgLyh4MiAtIHkyKSAgIO+DniBCMiA9ICh4ICsgeSkgKHgyIC0geTIpLyh4IC0geSkgICDvg54gQjIgPSAoeCAreSkgKHggK3kpICh4IC0geSkvKHggLSB5KSAgIO+DniBCMiA9ICh4ICsgeSkgKHggK3kpICAg74OeIEIgPSAoeCArIHkpICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICAgICAgICAgMTkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " xy + 1  ",
        "option2" : " xy2 + x2y  ",
        "option3" : " x + y  ",
        "option4" : " x2 + y2   "
      }
    },
    {
      "index" : 72,
      "question" : " Rent of a room is Rs. 9600, which is shared  among Kallu, Malkhan, Ramu and Shyam. If  contribution ratio of Kallu & Malkhan,  Malkhan & Ramu and Ramu & Shyam is 1:2,  2:3 and 5:6 respectively, then what is the  contribution of Malkhan in the rent?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IENvbnRyaWJ1dGlvbiByYXRpbyBvZiBLYWxsdSBhbmQgTWFsa2hhbiA9IDE6MiAgIENvbnRyaWJ1dGlvbiByYXRpbyBvZiBNYWxraGFuIGFuZCBSYW11ID0gMjozICAgIFNvLCBDb250cmlidXRpb24gcmF0aW8gb2YgS2FsbHUsIE1hbGtoYW4gYW5kIFJhbXUgPSAxOjI6MyAgLi4uLi4uLi4uLihpKSAgIENvbnRyaWJ1dGlvbiByYXRpbyBvZiBSYW11IGFuZCBTaHlhbSA9IDU6NiAgLi4uLi4uLi4uLi4oaWkpICAgVG8gbWFrZSBDb250cmlidXRpb24gb2YgUmFtdSBlcXVhbCBpbiBlcW4gKGkpIGFuZCAoaWkpLCB3ZSB3aWxsIG11bHRpcGx5IGVxbiAoaSkgYnkgNSBhbmQgZXFuIChpaSkgYnkgMy4gICBDb250cmlidXRpb24gcmF0aW8gb2YgS2FsbHUsIE1hbGtoYW4gYW5kIFJhbXUgPSBbMToyOjNdIMOXIDUgPSA1OjEwOjE1ICAgQ29udHJpYnV0aW9uIHJhdGlvIG9mIFJhbXUgYW5kIFNoeWFtID0gWzU6Nl0gw5cgMyAgPSAxNToxOCAgIFNvLCBDb250cmlidXRpb24gcmF0aW8gb2YgS2FsbHUsIE1hbGtoYW4sIFJhbXUgYW5kIFNoeWFtID0gNToxMDoxNToxOCAgIOKItCBSZXF1aXJlZCBjb250cmlidXRpb24gb2YgTWFsa2hhbiA9IDk2MDAgw5cgMTAvKDUrMTArMTUrMTgpID0gUnMuIDIwMDAgICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1400  ",
        "option2" : " Rs. 2000  ",
        "option3" : " Rs. 1000  ",
        "option4" : " Rs. 1600   "
      }
    },
    {
      "index" : 73,
      "question" : " Roshan is a perfume seller. One small bottle of  French perfume costs him Rs. 12. In what ratio  should he mix Rs. 8.50 per bottle synthetic  perfume into this to sell the mixture at Rs. 9.25  and make no profit or loss?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IENvc3QgcHJpY2Ugb2YgRnJlbmNoIHBlcmZ1bWUgYW5kIHN5bnRoZXRpYyBwZXJmdW1lIGlzIFJzLiAxMiBhbmQgUnMuIDguNTAuIENvc3QgcHJpY2Ugb2YgdGhlIG1peHR1cmUgaXMgICBScy4gOS4yNS4gICBBcHBseWluZyBBbGxlZ2F0aW9uIE1ldGhvZDogICAgIOKItCBSZXF1aXJlZCByYXRpbyA9IDIuNzUvMC43NSA9IDExLzMgPSAxMSA6IDMgICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 8:5  ",
        "option2" : " 11:3  ",
        "option3" : " 10:3  ",
        "option4" : " None of the above  "
      }
    },
    {
      "index" : 74,
      "question" : " The bar graph given below provides the data  gathered in a survey conducted over 1200  people, regarding their preference for different  dishes (in percentage). Study the graph and  answer the question that follows.  What is the ratio of the number of people that  preferred Pongal and Rogan josh to those that  preferred Dhokla?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IFBlcmNlbnRhZ2Ugb2YgcGVvcGxlIHRoYXQgcHJlZmVycmVkIFBvbmdhbCBhbmQgUm9nYW4gam9zaCA9IDEwICsgMTUgPSAyNSUgICBOdW1iZXIgb2YgcGVvcGxlIHRoYXQgcHJlZmVycmVkIFBvbmdhbCBhbmQgUm9nYW4gam9zaCA9IDI1JSBvZiAxMjAwID0gKDI1IMOXIDEyMDApLzEwMCA9IDMwMCAgICAgUGVyY2VudGFnZSBvZiBwZW9wbGUgdGhhdCBwcmVmZXJyZWQgRGhva2xhID0gMjAlICAgU28sIG51bWJlciBvZiBwZW9wbGUgdGhhdCBwcmVmZXJyZWQgRGhva2xhID0gMjAlIG9mIDEyMDAgPSAoMjAgw5cgMTIwMCkvMTAwID0gMjQwICAgIEhlbmNlLCByZXF1aXJlZCByYXRpbyA9IDMwMC8yNDAgPSA1LzQgPSA1IDogNCAgIFNvLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5 : 4  ",
        "option2" : " 6 : 5  ",
        "option3" : " 3 : 2  ",
        "option4" : " 1 : 3   "
      }
    },
    {
      "index" : 75,
      "question" : " In an exam, average marks of A, B and C is  650. If marks of B are 50 more than A, and 20  less than C, then what must be the marks of C?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICAg4oeSIFtBICsgQiArIENdLzMgPSA2NTAgICDih5IgQSArIEIgKyBDID0gMTk1MCAtLS0tLS0tLS0tLS0tLS0tLS0gKGkpICAgTWFya3Mgb2YgQiBhcmUgNTAgbW9yZSB0aGFuIEEsIGFuZCAyMCBsZXNzIHRoYW4gQy4gICBTbywgbWFya3Mgb2YgQiA9IEEgKyA1MCAgIE1hcmtzIG9mIEMgPSBCICsgMjAgPSBBICsgNTAgKyAyMCA9IEEgKyA3MCAgIEZyb20gZXF1YXRpb24gKGkpLCB3ZSBnZXQ6ICAgQSArIChBICsgNTApICsgKEEgKyA3MCkgPSAxOTUwICAg4oeSIDNBICsgMTIwID0gMTk1MCAgIOKHkiAzQSA9IDE5NTAgLSAxMjAgPSAxODMwICAg4oeSIEEgPSAxODMwLzMgPSA2MTAgICBTbywgbWFya3Mgb2YgQyA9IEEgKyA3MCA9IDYxMCArIDcwID0gNjgwICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgICAgICAgMjAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 615  ",
        "option2" : " 720  ",
        "option3" : " 580  ",
        "option4" : " 680    Directions for the following 5 (five) items:   Read the following five passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.          19                                                                                                                                                              "
      }
    },
    {
      "index" : 76,
      "question" : " Which of the following is the most logical and  rational inference that can be made from the  above passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdDogVGhlIHBhc3NhZ2UgbWVudGlvbnMgJ1RoZSBmb2N1cyBpcyBub3cgb24gZm9yZXN0IGxhbmRzY2FwZSByZXN0b3JhdGlvbi0gdGhlICAgcHJvY2VzcyBvZiByZWdhaW5pbmcgZWNvbG9naWNhbCBmdW5jdGlvbmFsaXR5IGFuZCBpbXByb3ZpbmcgaHVtYW4gd2VsZmFyZSBhY3Jvc3MgZGVmb3Jlc3RlZCBhbmQgICBkZWdyYWRlZCBmb3Jlc3QgbGFuZHNjYXBlcycgd2hpY2ggbWVhbnMgdGhhdCB0aGUgY2hhbmdlIGluIHN0cmF0ZWd5IGlzIHRvIGZ1bGZpbCBwZW9wbGUncyBuZWVkcyBhcyB3ZWxsIGFzICAgbXVsdGlwbGUgbGFuZCB1c2VzIHRocm91Z2ggZm9yZXN0IGxhbmRzY2FwZSByZXN0b3JhdGlvbi4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3Q6IEl0IGlzIG5vd2hlcmUgZ2l2ZW4gaW4gdGhlIHBhc3NhZ2UgdGhhdCBmb3Jlc3QgbGFuZHNjYXBlIHJlc3RvcmF0aW9uIGlzIGZvciAgIGluY3JlYXNpbmcgYXJlYSB1bmRlciBmb3Jlc3QgY292ZXIuIFRoZXJlZm9yZSwgdGhpcyBnb2VzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIEFsc28sIEluZGlhIGhhcyAgIG5vdCBiZWVuIG1lbnRpb25lZCBpbiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3Q6IEl0IGlzIGFsc28gbm93aGVyZSBpbXBsaWVkIGluIHRoZSBwYXNzYWdlIHRoYXQgdGhlIGdvdmVybm1lbnQgaGFzIGNoYW5nZWQgaXRzICAgc3RyYXRlZ3kgdG8gbWVldCBpdHMgaW50ZXJuYXRpb25hbCBjb21taXRtZW50cy4gVGhlcmVmb3JlLCB0aGlzIGdvZXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3Q6IFRoZSBwYXNzYWdlIG9ubHkgbWVudGlvbnMgdGhhdCBnb3Zlcm5tZW50cyBoYXZlIHJlbGllZCBvbiBhZmZvcmVzdGF0aW9uIGFuZCAgIHJlZm9yZXN0YXRpb24gYXMgYSBtZWFucyBvZiBlc3RhYmxpc2hpbmcgdHJlZXMgb24gbm9uLXRyZWVkIGxhbmQgYW5kIHRoYXQgdGhlIHN0cmF0ZWd5IGhhcyBub3cgZXZvbHZlZCB0byAgIGluY2x1ZGUgbW9yZSBkaW1lbnNpb25zLiBIb3dldmVyLCBpdCBkb2VzIG5vdCBtZWFuIHRoYXQgdGhlIHByZXZpb3VzIHN0cmF0ZWd5IGhhcyBmYWlsZWQuIEhlbmNlIHRoaXMgICBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " With regards to deforestation, the   government changed its strategy, keeping   in mind the people's needs and multiple   land utility.   ",
        "option2" : " The government wants to increase the area   under forest cover in India.   ",
        "option3" : " The government's focus on forest landscape   restoration is due to its international   commitments.   ",
        "option4" : " The earlier strategy of establishing trees on   non-treed land had failed.   "
      }
    },
    {
      "index" : 77,
      "question" : " According to the passage, the following  assumptions are made as to why  environmentally friendly plastic is not currently  able to emerge as a desirable solution to the  problem of plastic?   1. It is costlier than conventional plastic.   2. Lack of widespread adoption by the public  because the public is not familiar with it.   3. There is not enough production of such  plastic.   Which of the assumptions provided above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBwYXNzYWdlIG1lbnRpb25zICdzdWNoIHNjYWxpbmcgdXAgZnJvbSB0aGUgbGFiIHRvIGNvbW1lcmNpYWwgcHJvY2VzcyB3aWxsICAgYmUgdml0YWwgdG8gYWNoaWV2ZSBjb3N0IHJlZHVjdGlvbiBhbmQgd2lkZXNwcmVhZCBhZG9wdGlvbicgd2hpY2ggaW1wbGllcyB0aGF0IGl0IG11c3QgYmUgY29zdGxpZXIgdGhhbiAgIGNvbnZlbnRpb25hbCBwbGFzdGljIGFuZCB0aHVzIG5vdCBhYmxlIHRvIGVtZXJnZSBhcyBhIGRlc2lyYWJsZSBzb2x1dGlvbi4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaG91Z2ggdGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhhdCBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgcGxhc3RpYyBoYXMgbm90IHNlZW4gICB3aWRlc3ByZWFkIGFkb3B0aW9uLCB0aGUgcmVhc29uIGZvciB0aGUgc2FtZSBpcyBub3QgdGhlIGxhY2sgb2YgZmFtaWxpYXJpdHkgd2l0aCB0aGUgcHJvZHVjdC4gQWNjb3JkaW5nIHRvICAgdGhlIG9wZW5pbmcgbGluZXMgb2YgdGhlIHBhc3NhZ2UsIGl0IGhhcyBub3QgYmVlbiB3aWRlbHkgYWRvcHRlZCBkZXNwaXRlIGJlaW5nIGEgZGVzaXJhYmxlIGFsdGVybmF0aXZlICAgYmVjYXVzZSBpdCBzdGlsbCBoYXMgdG8gZnVsZmlsIHJlcXVpcmVkIGZ1bmN0aW9uYWwgcGVyZm9ybWFuY2UgcGFyYW1ldGVycyBzdWNoIGFzIG1vaXN0dXJlIGJhcnJpZXJzIGFuZCBoZWF0ICAgc2NhbGFiaWxpdHkuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBwYXNzYWdlIHNheXMgdGhhdCBzdWNoIHNjYWxpbmcgdXAgZnJvbSB0aGUgbGFiIHRvIGNvbW1lcmNpYWwgcHJvY2Vzc2VzIHdpbGwgICBiZSB2aXRhbCB0byBhY2hpZXZlIGNvc3QgcmVkdWN0aW9uIGFuZCB3aWRlc3ByZWFkIGFkb3B0aW9uLiBUaGlzIGltcGxpZXMgdGhhdCB0aGUgY3VycmVudCByYXRlIG9mICAgcHJvZHVjdGlvbiBvZiBlY28tZnJpZW5kbHkgcGxhc3RpY3MgaXMgbm90IHN1ZmZpY2llbnQuIEZ1cnRoZXIsIHRoZSBsYXN0IGxpbmUgb2YgdGhlIHBhc3NhZ2UgY2xlYXJseSBzYXlzLCAnVGhlICAgbWFudWZhY3R1cmVycyBzaG91bGQgYWxzbyBiZSBlbmNvdXJhZ2VkIHRocm91Z2ggYXBwcm9wcmlhdGUgbWVhc3VyZXMgdG8gc2hpZnQgZnJvbSBjb252ZW50aW9uYWwgICBwbGFzdGljcyB0byBiaW9kZWdyYWRhYmxlIHBsYXN0aWNzIGFjcm9zcyBjYXRlZ29yaWVzLicgd2hpY2ggYWdhaW4gaW5kaWNhdGVzIHRoYXQsIHByZXNlbnRseSwgdGhlcmUgaXMgbm90ICAgZW5vdWdoIHByb2R1Y3Rpb24gb2YgcGxhc3RpY3MuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 and 3 only   ",
        "option3" : " 1 and 3 only   ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 78,
      "question" : " Which one of the following statements best  reflects the most critical inference that can be  made from the passage given above?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkZWFscyB3aXRoIHR3byBicm9hZCBhc3BlY3RzIG9mIGJpb2RpdmVyc2l0eSBhbmQgZm9vZCBwcm9kdWN0aW9uLCAgIGFuZCB0aGVpciByZWxhdGlvbiB3aXRoIG5hdHVyYWwgcmVzb3VyY2VzIGFuZCBwcm9kdWN0aW9uIHRlY2huaXF1ZXMuIFdoZXRoZXIgc3VzdGFpbmFibGUgZW52aXJvbm1lbnRhbCAgIHJlc291cmNlIGdvdmVybmFuY2UgaXMgdGhlICdtb3N0JyBjcnVjaWFsIGZhY3RvciBpbiBmb29kIHNlY3VyaXR5IGlzIG5vdCBjbGVhciBmcm9tIHRoZSBwYXNzYWdlLCBhcyB0aGVyZSBhcmUgICBhZHZlcnNlIGltcGFjdHMgZHVlIHRvIHByb2R1Y3Rpb24gdGVjaG5pcXVlcyBhcyB3ZWxsLiAgVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gY2Fubm90IGJlIHRoZSBtb3N0ICAgY3JpdGljYWwgaW5mZXJlbmNlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhvdWdoIHRoZSBzdGF0ZW1lbnQgbWF5IGJlIGluZGl2aWR1YWxseSB0cnVlLCBpdCBpcyBub3doZXJlIHN1Z2dlc3RlZCBpbiB0aGUgICBwYXNzYWdlLiBUaGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zICdBZ3JpY3VsdHVyYWwgcmlzayAnaG90c3BvdHMnIG9jY3VyIHdoZXJlIHRoZXNlIHJlc291cmNlIHByZXNzdXJlcyAgIGFyZSBtb3N0IGNvbmNlbnRyYXRlZC4nIFRoZSBwYXNzYWdlIGlzIG5vdCBmb2N1c2VkIG9uIGdpdmluZyByZW1lZGlhbCBtZWFzdXJlcy4gTW9yZW92ZXIsIGFncmljdWx0dXJhbCAgIGhvdHNwb3QgaXMgb25lIG9mIHRoZSBzZXZlcmFsIGltcG9ydGFudCBmYWN0b3JzIGRpc2N1c3NlZCBpbiB0aGUgcGFzc2FnZS4gRGVhbGluZyB3aXRoIGl0IGNhbm5vdCBiZSB0aGUgbW9zdCAgIGNyaXRpY2FsIGluZmVyZW5jZS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdCBhcyBpdCB0YWtlcyBhIHdob2xlc29tZSBsb29rIGF0IHRoZSBwYXNzYWdlIGFuZCBjcmlzcGx5IHN1bW1hcmlzZXMgaXQuIFRoZSAgIHBhc3NhZ2UgbWVudGlvbnMgJ0Zvb2QsIGFncmljdWx0dXJlLCBhbmQgZmlzaGVyaWVzIGRlcGVuZCBvbiB0aGUgd29ybGQncyBuYXR1cmFsIHJlc291cmNlcywgc28gZnV0dXJlICAgZm9vZCBwcm9kdWN0aW9uIHdpbGwgZGVwZW5kIG9uIGhvdyB3ZWxsIHRoZXNlIHJlc291cmNlcyBhcmUgY29uc2VydmVkIGFuZCB1c2VkLicgYW5kICdUaGUgZm9vZCwgICBhZ3JpY3VsdHVyZSBhbmQgZmlzaGVyaWVzIHN5c3RlbSBpcyBub3Qgb25seSBpbXBhY3RlZCBieSB0aGUgZW52aXJvbm1lbnQsIGJ1dCBhbHNvIGJ5IHByb2R1Y3Rpb24gICB0ZWNobmlxdWVzLiBUaGUgZXhjZXNzaXZlIHVzZSBvZiBudXRyaWVudHMgaW4gYWdyaWN1bHR1cmUgaGFzIGJlZW4gYSBtYWpvciBzb3VyY2Ugb2Ygd2F0ZXIgcG9sbHV0aW9uIGFuZCBpcyAgICAgICAgIDIxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXN0aW1hdGVkIHRvIGhhdmUgcmVkdWNlZCBiaW9kaXZlcnNpdHknLiBUaGUgZmlyc3QgbGluZSBjbGVhcmx5IHRhbGtzIGFib3V0IG5hdHVyYWwgcmVzb3VyY2VzLiBUaGUgc2Vjb25kICAgbGluZSB0YWxrcyBhYm91dCBpc3N1ZXMgbGlrZSBvdmVydXNlIG9mIG51dHJpZW50cywgdGhhdCBpcyBhIG1hbi1tYWRlIChhbnRocm9wb2dlbmljKSBmYWN0b3IuICAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdCBhcyB1bnN1c3RhaW5hYmxlIHByYWN0aWNlcyBpbiB0aGUgZm9vZCwgYWdyaWN1bHR1cmUgYW5kIGZpc2hlcmllcyBzeXN0ZW1zIHRocmVhdGVuICAgYmlvZGl2ZXJzaXR5IGFzIHdlbGwgYXMgZm9vZCBzZWN1cml0eS4gVGhlcmVmb3JlLCBpdCB3b3VsZCBiZSBpbmNvcnJlY3QgdG8gc2F5IHRoYXQgaXQgYWZmZWN0cyBPTkxZICAgYmlvZGl2ZXJzaXR5LiAgVGhpcyBpcyBjbGVhciBmcm9tIHRoZSBleGNlcnB0cyAtICdGb29kLCBhZ3JpY3VsdHVyZSwgYW5kIGZpc2hlcmllcyBkZXBlbmQgb24gdGhlIHdvcmxkJ3MgICBuYXR1cmFsIHJlc291cmNlcywgc28gZnV0dXJlIGZvb2QgcHJvZHVjdGlvbiB3aWxsIGRlcGVuZCBvbiBob3cgd2VsbCB0aGVzZSByZXNvdXJjZXMgYXJlIGNvbnNlcnZlZCBhbmQgICB1c2VkLiBBZ3JpY3VsdHVyZSBpcyBpbXBhY3RlZCBieSB1cmJhbiBsYW5kIGV4cGFuc2lvbiBhbmQgYnkgaGlnaGVyIHdhdGVyIGRlbWFuZCBmcm9tIG90aGVyIHNlY3RvcnMuJyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Sustainable environmental resource   governance is the most crucial factor for   food security in future.  ",
        "option2" : " Agricultural risk hotspots need to be   identified and targeted efforts need to be   made to bring them out of danger.  ",
        "option3" : " Biodiversity and food production depend   not only on natural, but also anthropogenic   factors.  ",
        "option4" : " Unsustainable practices in the food,   agriculture and fisheries systems threaten   only biodiversity.  "
      }
    },
    {
      "index" : 79,
      "question" : " With reference to the above passage, which of  the following statements is/are correct?  1. Pre-identarian forms of politics were  inclusive and non-divisive in nature.  2. Everyone has the legal right to recognition  everywhere as an individual.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBoYXMgbm90IGdpdmVuIHRoZSBkZXRhaWxzIHJlZ2FyZGluZyBwcmUtaWRlbnRhcmlhbiBmb3JtcyBvZiAgIHBvbGl0aWNzLiBUaGUgb25seSBpbmZlcmVuY2UgdGhhdCBjYW4gYmUgZGVyaXZlZCBmcm9tIHRoZSBwYXNzYWdlIC0gJ1doYXQgbWFrZXMgaWRlbnRpdHkgcG9saXRpY3MgYSAgIHNpZ25pZmljYW50IGRlcGFydHVyZSBmcm9tIGVhcmxpZXIsIHByZS1pZGVudGFyaWFuIGZvcm1zIG9mIHRoZSBwb2xpdGljcyBvZiByZWNvZ25pdGlvbiBpcyBpdHMgZGVtYW5kIGZvciAgIHJlY29nbml0aW9uIG9uIHRoZSBiYXNpcyBvZiB0aGUgdmVyeSBncm91bmRzIG9uIHdoaWNoIHJlY29nbml0aW9uIGhhcyBwcmV2aW91c2x5IGJlZW4gZGVuaWVkJywgaXMgdGhhdCAgIHNvbWUgZ3JvdXBzIHdlcmUgZGVuaWVkIHJlY29nbml0aW9uIGVhcmxpZXIuIEl0IHJhdGhlciBpbXBsaWVzIHRoYXQgcHJlLWlkZW50YXJpYW4gZm9ybXMgb2YgcG9saXRpY3Mgd2FzICAgcHJvYmJhbHkgZGl2aXNpdmUuIE1heWJlIHRoZXkgd2VyZSBnaXZlbiByZWNvZ25pdGlvbiBiYXNlZCBvbiAndW5pdmVyc2FsIGh1bWFua2luZCcuIEl0J3Mgbm90IGNsZWFyICAgZnJvbSB0aGUgZ2l2ZW4gcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgaW5jb3JyZWN0LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyB0aG91Z2ggdGhlIHN0YXRlbWVudCBtYXkgaW5kaXZpZHVhbGx5IGJlIHRydWUsIHRoZSAncmlnaHQnIHRvIHJlY29nbml0aW9uIGlzICAgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gRnVydGhlcm1vcmUsIHRoZSBsZWdhbCBhc3BlY3RzIG9mIHRoaXMgcmlnaHQgaXMgbm90IGRlYWx0IHdpdGggaW4gdGhlICAgcGFzc2FnZS4gVGhlIHBhc3NhZ2UgY2VudHJhbGx5IGRlYWxzIHdpdGggdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBpZGVudGl0eSBwb2xpdGljcyBhbmQgcHJlLWlkZW50YXJpYW4gICBwb2xpdGljcyBhbmQgaG93IHRoZSBuYXR1cmUgb2YgZGVtYW5kIGZvciByZWNvZ25pdGlvbiBoYXMgY2hhbmdlZC4gVGhlIGxpbmUgJ1JhdGhlciwgd2hhdCBpcyBkZW1hbmRlZCAgIGlzIHJlc3BlY3QgZm9yIG9uZXNlbGYgYXMgZGlmZmVyZW50LicgaW1wbGllcyB0aGF0IGlkZW50aXR5IHBvbGl0aWNzIGRlbWFuZCByZWNvZ25pdGlvbiBiYXNlZCBvbiBvbmUncyBvd24gICBpZGVudGl0eSAtYXMgYSB3b21hbiwgYXMgYmxhY2ssIG9yIGEgbGVzYmlhbi4gICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2 only  ",
        "option4" : " Neither 1 nor 2       "
      }
    },
    {
      "index" : 80,
      "question" : " On the basis of the passage given above, the  following assumptions have been made:  1. Disaster management is not a priority in  India.  2. The role of Panchayati Raj Institutions  (PRIs) in framing disaster management  policy needs to be widened.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnRGlzYXN0ZXIgbWFuYWdlbWVudCBoYXMgc2VsZG9tIGFjcXVpcmVkIGltcG9ydGFuY2UgICBpbiB0aGUgYWdlbmRhIG9mIGdvdmVybmFuY2UgdW5sZXNzIHRoZXJlIGlzIGEgbWFqb3IgbmF0dXJhbCBvciBtYW4tbWFkZSBkaXNhc3Rlci4nICBUaGUgdXNlIG9mICdzZWxkb20nICAgY2xlYXJseSBpbXBsaWVzIHRoYXQgZGlzYXN0ZXIgbWFuYWdlbWVudCBpcyBub3QgYSBwcmlvcml0eSBpbiBJbmRpYS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZW50aW9ucyAnSW4gcnVyYWwgYXJlYXMsIFBhbmNoYXlhdGkgUmFqIEluc3RpdHV0aW9ucyAoUFJJcykgYXJlICAgZGVtb2NyYXRpY2FsbHkgZGVjZW50cmFsaXplZCBib2RpZXMgdGhhdCBjYW4gZGlzcGxheSB0cmVtZW5kb3VzIHBvdGVudGlhbCBpbiBkaXNhc3RlciBtYW5hZ2VtZW50IGFzICAgdGhleSBhcmUgY2xvc2VyIHRvIHRoZSBzY2VuZSBhbmQgaGF2ZSBhIGJldHRlciBrbm93bGVkZ2Ugb2YgbG9jYWwgcmVzb3VyY2VzL3dlYWtuZXNzZXMuIEhvd2V2ZXIsIHRoZWlyICAgcm9sZSBoYXMgYmVlbiBsaW1pdGVkIG1vc3RseSB0byB0aGUgcmVzcG9uc2UgcGhhc2Ugb2YgYW55IGRpc2FzdGVyLicgVGhpcyBpbXBsaWVzIHRoYXQgdGhlIHJvbGUgb2YgUFJJcyAgIHNob3VsZCBub3QgYmUgbGltaXRlZCB0byBkaXNhc3RlciByZXNwb25zZS4gRHVlIHRvIHRoZWlyIGJldHRlciBrbm93bGVkZ2Ugb2YgZGlzYXN0ZXIsIHRoZWlyIHJvbGUgaW4gb3RoZXIgICBjcnVjaWFsIGFzcGVjdHMgb2YgZGlzYXN0ZXIgbWFuYWdlbWVudCAtIHN1Y2ggYXMgcG9saWN5IGZyYW1pbmcgbmVlZHMgdG8gYmUgd2lkZW5lZC4gICAgICAgIC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2   ",
        "option4" : " Neither 1 nor 2       .   "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
