{
  "testId" : "vision-2023-prelims-2-csat-1",
  "testType" : "csat",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\vision\\prelims\\vision-2023-prelims-2-csat-1.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which one of the following is best reflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZW50aW9ucywgJ1N1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzIEluZGV4IGNlbGVicmF0ZXMgcmljaCAgIGNvdW50cmllcyB3aGlsZSB0dXJuaW5nIGEgYmxpbmQgZXllIHRvIHRoZSBkYW1hZ2UgdGhleSBhcmUgY2F1c2luZy4gSXQgdmlvbGF0ZXMgdGhlIHByaW5jaXBsZSBvZiAnc3Ryb25nICAgc3VzdGFpbmFiaWxpdHksJyB3aGljaCBob2xkcyB0aGF0IGdvb2QgcGVyZm9ybWFuY2Ugb24gZGV2ZWxvcG1lbnQgaW5kaWNhdG9ycyBjYW5ub3QgbGVnaXRpbWF0ZWx5ICAgc3Vic3RpdHV0ZSBmb3IgZGVzdHJ1Y3RpdmUgbGV2ZWxzIG9mIGVjb2xvZ2ljYWwgaW1wYWN0LicgVGh1cywgZXZlbiBoaWdoIHNjb3JlcyBkb24ndCBuZWNlc3NhcmlseSBlbnN1cmUgICBoaWdoIGxldmVscyBvZiBzdXN0YWluYWJpbGl0eS4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zIHRoZSAncmljaCBjb3VudHJpZXMnLiBTbywgdG8gc3BlY2lmaWNhbGx5IGFzc3VtZSB0aGVtICAgdG8gYmUgTm9yZGljIGNvdW50cmllcyB3b3VsZCBiZSBvdXQgb2YgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgb2YgdGhlIHBhc3NhZ2UsICdJbiBlZmZlY3QsIHRoZSBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCBHb2FscyAgIEluZGV4IGNlbGVicmF0ZXMgcmljaCBjb3VudHJpZXMgd2hpbGUgdHVybmluZyBhIGJsaW5kIGV5ZSB0byB0aGUgZGFtYWdlIHRoZXkgYXJlIGNhdXNpbmcnIGNsZWFybHkgICBoaWdobGlnaHRzIHRoZSBpc3N1ZSB3aXRoIFNERyBpbmRpY2F0b3JzLiBJdCBpbXBsaWVzIHRoYXQgYSBjb3VudHJ5IGNhbiBzY29yZSB3ZWxsIGluIFNERyBkZXZlbG9wbWVudCAgIGluZGljYXRvcnMgZXZlbiB3aGVuIGl0IGNhdXNlcyBlbnZpcm9ubWVudGFsIGRhbWFnZS4gSG93ZXZlciwgdGhpcyBpcyBub3QgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lcmVseSB0YWxrcyBhYm91dCB0aGUgaXNzdWVzIHdpdGggU0RHIGluZGljYXRvcnMgYW5kIHN0b3BzIHNob3J0ICAgb2Ygc3VnZ2VzdGluZyBtZWFzdXJlcyB0byBhZGRyZXNzIHRoZSBwcm9ibGVtLiBUaGlzIG9wdGlvbiBjb3VsZCBoYXZlIGJlZW4gYSBnb29kIHByYWN0aWNhbCBzdWdnZXN0aW9uLCAgIGJ1dCBpdCBpcyBub3QgdGhlIGNlbnRyYWwgbWVzc2FnZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Sustainable Development Goals Index  creates the illusion that rich countries have  high levels of sustainability even if they do  not. ",
        "option2" : " The Nordic countries even with the highest  scores on Sustainable Development Goals  Index are some of the most  environmentally unsustainable countries. ",
        "option3" : " If a country performs well on the  development indicators, its score for that  goal will look good even if it fails in terms  of sustainability. ",
        "option4" : " The United Nations needs to redesign the  Sustainable Development Goals Index to  correct the issues. "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to the above passage, the following assumptions have been made: 1. Presently every stakeholder in educational institutions is not adequately sensitized about transgender persons. 2. Before the enactment of the Transgender Persons Act, there was no any Act in the country to deal with transgender persons. 3. The said Act will empower the transgender while removing difficulties they face in every sector. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgYSBuZWVkIGZvciB0aGUgc2Vuc2l0aXphdGlvbiBvZiBzdHVkZW50cywgdGVhY2hlcnMsICAgYW5kIHN0YWZmIGluIGFsbCBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMsIGZyb20gcHJpbWFyeSBzY2hvb2xzIHRvIHVuaXZlcnNpdGllcywgb24gdW5kZXJzdGFuZGluZyBhbmQgICBhY2NlcHRpbmcgcXVlZXIgYW5kIHRyYW5zZ2VuZGVyIGZvbGtzLicgSXQgY2xlYXJseSBpbXBsaWVzIHRoYXQgZXZlcnkgc3Rha2Vob2xkZXIgaS5lLiBzdHVkZW50cywgdGVhY2hlcnMgICBhbmQgc3RhZmYgaXMgbm90IGFkZXF1YXRlbHkgc2Vuc2l0aXplZCBhYm91dCB0cmFuc2dlbmRlciBwZXJzb25zLCB3aGljaCBpcyB3aHkgdGhlIGF1dGhvciBtZW50aW9uZWQgdGhlICAgbmVlZCBmb3Igc2Vuc2l0aXphdGlvbiBvZiBhbGwgc3Rha2Vob2xkZXJzLiBTbyB0aGlzIGlzIGEgY29ycmVjdCBzdGF0ZW1lbnQuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBub3doZXJlIHRhbGtzIGFib3V0IGFueSBBY3QgYmVmb3JlIHRoZSBzYWlkIEFjdC4gU28gd2UgY2Fubm90ICAgYXNzdW1lIHdoZXRoZXIgdGhlcmUgd2FzIGFueSBsYXcgYmVmb3JlIHRoZSBzYWlkIEFjdCBvciBub3QuIFRoZSBwYXNzYWdlIGFsc28gbm93aGVyZSBjb21wYXJlcyB0aGUgICBzYWlkIEFjdCB3aXRoIGFueSBvdGhlciBBY3QgaW4gZm9yY2UuIFNvIHRoaXMgaXMgYW4gaW5jb3JyZWN0IHN0YXRlbWVudC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSW5kaWEgaGFzIHRha2VuIGEgc3RlcCBpbiB0aGUgcmlnaHQgZGlyZWN0aW9uIGJ5ICAgZW5hY3RpbmcgdGhlIFRyYW5zZ2VuZGVyIFBlcnNvbnMgQWN0LCB3aGljaCBzcGVha3Mgb2YgYSB0cmFucy1pbmNsdXNpdmUgZWR1Y2F0aW9uIHN5c3RlbSB3aGVyZWluICAgdHJhbnNnZW5kZXIgc3R1ZGVudHMgbGVhcm4gd2l0aCBvdGhlciBzdHVkZW50cyB3aXRob3V0IGZlYXIgb2YgZGlzY3JpbWluYXRpb24sIG5lZ2xlY3QsIG9yIGhhcmFzc21lbnQuJyBJdCAgIGltcGxpZXMgdGhlIHJlbW92YWwgb2YgZGlmZmljdWx0aWVzIGluIHRoZSBlZHVjYXRpb24gc2VjdG9yLiBUaGUgcGFzc2FnZSBpcyBzaWxlbnQgb24gb3RoZXIgc2VjdG9ycyBsaWtlICAgZW1wbG95bWVudCwgcmVzZXJ2YXRpb24sIG1hcnJpYWdlLCBldGMuIFNvIGhlcmUgd2UgY2Fubm90IGFzc3VtZSBhYm91dCBvdGhlciBzZWN0b3JzLiBTbywgdGhpcyBpcyBhbiAgIGluY29ycmVjdCBzdGF0ZW1lbnQuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 only ",
        "option2" : " 1 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following statements best reflects the crux of the passage given above? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1dlIGNhbm5vdCB1bmRlcnBsYXkgdGhlIGltcG9ydGFuY2Ugb2YgY2hhbmdpbmcgICBtaW5kc2V0cy4nICBJdCBoaWdobGlnaHRzIHRoZSByb2xlIG9mIG92ZXJhbGwgYXR0aXR1ZGUgYW5kIG1pbmRzZXQgaW4gZW1wb3dlcmluZyB0cmFuc2dlbmRlciBwZXJzb25zLiBUaGUgICBwYXNzYWdlIGFsc28gbWVudGlvbnMsICdJbmRpYSBoYXMgdGFrZW4gYSBzdGVwIGluIHRoZSByaWdodCBkaXJlY3Rpb24gYnkgZW5hY3RpbmcgdGhlIFRyYW5zZ2VuZGVyIFBlcnNvbnMgICBBY3QsIHdoaWNoIHNwZWFrcyBvZiBhIHRyYW5zLWluY2x1c2l2ZSBlZHVjYXRpb24gc3lzdGVtIHdoZXJlaW4gdHJhbnNnZW5kZXIgc3R1ZGVudHMgbGVhcm4gd2l0aCBvdGhlciAgIHN0dWRlbnRzIHdpdGhvdXQgZmVhciBvZiBkaXNjcmltaW5hdGlvbiwgbmVnbGVjdCwgb3IgaGFyYXNzbWVudC4nIEl0IGltcGxpZXMgd2l0aCBwcm9wZXIgaW1wbGVtZW50YXRpb24gb2YgICBzYWlkIEFjdCwgd2UgY2FuIGltcHJvdmUgdGhlIGNvbmRpdGlvbnMgb2YgdHJhbnNnZW5kZXIgcGVyc29ucy4gQnV0IHRoZSBhbnN3ZXIgb3B0aW9uIHRhbGtzIGFib3V0ICAgZW5zdXJpbmcgYSBiZXR0ZXIgd29ybGQgZm9yIHRoZSB0cmFuc2dlbmRlciBldmVuIHdpdGhvdXQgZ29vZCBpbmZyYXN0cnVjdHVyZS4gVGhlIHZlcnkgZmlyc3QgbGluZSBvZiB0aGUgICAgICAgICAyICAgICAgICAgICAgICAgICAgIHBhc3NhZ2Ugc2F5cywgJ1doaWxlIGluZnJhc3RydWN0dXJlIGlzIGVzc2VudGlhbCBmb3IgY3JlYXRpbmcgc2FmZSBhbmQgaW5jbHVzaXZlIHBsYWNlcy4uLi4nIEhlbmNlLCB0aGlzICAgYW5zd2VyIG9wdGlvbiBnb2VzIGFnYWluc3QgdGhlIGZhY3Qgc3RhdGVkIGluIHRoZSBwYXNzYWdlLiBUaGVyZWZvcmUsIHRoaXMgb3B0aW9uIGlzIGluY29ycmVjdC4gICAgT3B0aW9uIChiKSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1doaWxlIGluZnJhc3RydWN0dXJlIGlzIGVzc2VudGlhbCBmb3IgY3JlYXRpbmcgc2FmZSBhbmQgICBpbmNsdXNpdmUgcGxhY2VzLCB3ZSBjYW5ub3QgdW5kZXJwbGF5IHRoZSBpbXBvcnRhbmNlIG9mIGNoYW5naW5nIG1pbmRzZXRzLicgVGhpcyBpbXBsaWVzIHdoaWxlICAgaW5mcmFzdHJ1Y3R1cmUgaXMgbmVlZGVkLCBhdHRpdHVkaW5hbCBjaGFuZ2UgaXMgYWxzbyBhIG11c3QuIEhlcmUsIGluZnJhc3RydWN0dXJlIGNhbiBpbmNsdWRlIGxlZ2FsICAgaW5mcmFzdHJ1Y3R1cmUgYXMgd2VsbC4gIFNvIHRoaXMgb3B0aW9uIGFwdGx5IGNhcHR1cmVzIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0luZGlhIGhhcyB0YWtlbiBhIHN0ZXAgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiBieSBlbmFjdGluZyAgIHRoZSBUcmFuc2dlbmRlciBQZXJzb25zIEFjdCwgd2hpY2ggc3BlYWtzIG9mIGEgdHJhbnMtaW5jbHVzaXZlIGVkdWNhdGlvbiBzeXN0ZW0gd2hlcmVpbiB0cmFuc2dlbmRlciAgIHN0dWRlbnRzIGxlYXJuIHdpdGggb3RoZXIgc3R1ZGVudHMgd2l0aG91dCBmZWFyIG9mIGRpc2NyaW1pbmF0aW9uLCBuZWdsZWN0LCBvciBoYXJhc3NtZW50LicgSXQgaW1wbGllcyB0aGF0ICAgdGhlIEFjdCB3aWxsIGhlbHAgdHJhbnNnZW5kZXIgaW4gdGhlaXIgZW1wb3dlcm1lbnQuIFRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCB0aGlzIHBhcnQuIEJ1dCB0aGUgb3B0aW9uICAgZG9lcyBub3QgbWVudGlvbiBwZW9wbGUncyBtaW5kc2V0cywgd2hpY2ggaXMgZHVseSBlbXBoYXNpc2VkIHVwb24gYnkgdGhlIGF1dGhvci4gU28gdGhpcyBpcyBub3QgdGhlIGJlc3QgICBjcnV4LiBUaGVyZWZvcmUsIHRoaXMgaXMgYW4gaW5jb3JyZWN0IG9wdGlvbi4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGVyZSBpcyBhIG5lZWQgZm9yIHRoZSBzZW5zaXRpemF0aW9uIG9mIHN0dWRlbnRzLCAgIHRlYWNoZXJzLCBhbmQgc3RhZmYgaW4gYWxsIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucywgZnJvbSBwcmltYXJ5IHNjaG9vbHMgdG8gdW5pdmVyc2l0aWVzLCBvbiB1bmRlcnN0YW5kaW5nICAgYW5kIGFjY2VwdGluZyBxdWVlciBhbmQgdHJhbnNnZW5kZXIgZm9sa3MuJyBJdCBpbXBsaWVzIHRoYXQgdGhlIHN0YWtlaG9sZGVycyBpbiB0aGUgZWR1Y2F0aW9uIHNlY3RvciBuZWVkICAgdG8gYmUgYmV0dGVyIHNlbnNpdGl6ZWQgYWJvdXQgdHJhbnNnZW5kZXIgcGVyc29ucy4gSG93ZXZlciwgdGhlIHN0YXRlbWVudCB0YWxrcyBhYm91dCBJbmRpYSBpbiBnZW5lcmFsLiAgIFRoZXJlZm9yZSwgdGhpcyBpcyBhbiBpbmNvcnJlY3Qgb3B0aW9uLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " With better ethos and proper  implementation of the Act we can make a  better world for transgender persons, even  with poor infrastructure. ",
        "option2" : " Both infrastructure and compassion are the  keys to the betterment of transgender  persons. ",
        "option3" : " With the help of said Act, transgender folks  can make themselves empowered. ",
        "option4" : " India needs to be better sensitized about  transgender persons.        3            "
      }
    },
    {
      "index" : 4,
      "question" : "A number is multiplied by six; then its decimal point is moved to the left by three spaces. This  is the same as what percent of the number?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IExldCdzIGRvIHRoZXNlIHR3byB0aGluZ3MgdG8gMTAwLiBNdWx0aXBseWluZyAxMDAgYnkgNiB5aWVsZHMgNjAwOyBtb3ZpbmcgdGhlIGRlY2ltYWwgcG9pbnQgdGhyZWUgcGxhY2VzICAgdG8gdGhlIGxlZnQgY2hhbmdlcyA2MDAsIG9yIDYwMC4wLCB0byAwLjYwLiAgIFRoaXMgbWVhbnMgdGhhdCB0aGUgbmV3IG51bWJlciBpcyAwLjYwJSAsIG9yIDMvNSAlLCBvZiB0aGUgb3JpZ2luYWwgbnVtYmVyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3/100 % ",
        "option2" : " 3/5 % ",
        "option3" : " 3/50 % ",
        "option4" : " 6 % "
      }
    },
    {
      "index" : 5,
      "question" : "N and P are two positive real numbers. If N is 20% of P, then what must be the value of P in  terms of N?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IE4gaXMgMjAlIG9mIFAgICAgU28sIE4gPSBQIMOXICgyMC8xMDApICAgT3IsIFAgPSA1TiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5N ",
        "option2" : " N/2 ",
        "option3" : " 2N ",
        "option4" : " N/5 "
      }
    },
    {
      "index" : 6,
      "question" : "If 10% of x is 25% of the half of y, then what must be the value of y/x?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFRoaXMgaXMgc2ltcGx5IGEgbWF0dGVyIG9mIGJyZWFraW5nIGRvd24gdGhlIHByb2JsZW0uIDEwIHBlcmNlbnQgb2YgeCBpcyAwLjF4LiAgIDI1IHBlcmNlbnQgb2YgaGFsZiBvZiB5IGlzIDI1IHBlcmNlbnQgb2YgMC41eSwgd2hpY2ggaXMgMC4yNSDDlyAwLjV5ID0geS84LiAgIE5vdywgYXMgcGVyIHRoZSBxdWVzdGlvbiwgICAgeC8xMCA9IHkvOCAgIG9yIHkveCA9IDQvNSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3/4 ",
        "option2" : " 8/3 ",
        "option3" : " 4/5 ",
        "option4" : " 5/4 "
      }
    },
    {
      "index" : 7,
      "question" : "The price of an item is decreased by 10%, then by 20%, and finally by 30%. This is equivalent  to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IERlY3JlYXNpbmcgYSBwcmljZSBieSAxMCUsIHRoZW4gYnkgMjAlLCBhbmQgdGhlbiBieSAzMCUgaXMgZXF1aXZhbGVudCB0byB0YWtpbmcgOTAlIG9mIGEgcHJpY2UsIHRoZW4gICB0YWtpbmcgODAlIG9mIHRoZSByZW1haW5pbmcgcHJpY2UsIGFuZCB0aGVuIHRha2luZyA3MCUgb2YgdGhhdC4gVGhhdCwgaW4gdHVybiwgaXMgZXF1aXZhbGVudCB0byBtdWx0aXBseWluZyAgIHRoZSBwcmljZSBieSAwLjkwLCB0aGVuIGJ5IDAuODAsIGFuZCB0aGVuIGJ5IDAuNzAuICAgRm9yIHNpbXBsaWNpdHkncyBzYWtlLCBhc3N1bWUgdGhlIGluaXRpYWwgcHJpY2Ugd2FzIFJzLiAxMDAuIFRoZW4gd2UgY2FuIGNhbGN1bGF0ZSB0aGUgZmluYWwgcHJpY2UgYXMgICBmb2xsb3dzOiAgIEZpbmFsIHByaWNlID0gMTAwIMOXIDAuOSDDlyAwLjggw5cgMC43ID0gUnMuIDUwLjQwICAgU28sIHdlIGVzc2VudGlhbGx5IGRpc2NvdW50ZWQgdGhlIG9yaWdpbmFsIHByaWNlIGJ5IFJzLjQ5LjYwLCB3aGljaCBpcyA0OS42JS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Decreasing the price by 50.4% ",
        "option2" : " Decreasing the price by 60%. ",
        "option3" : " Decreasing the price by 40.5% ",
        "option4" : " Decreasing the price by 49.6% "
      }
    },
    {
      "index" : 8,
      "question" : "A number is multiplied by one-sixth, then divided by one-seventh, and then multiplied by seven-tenth. Result is what percent of the original number? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IFRoZSBiZXN0IHdheSB0byBkbyB0aGlzIGlzIHRvIHN0YXJ0IHdpdGggMTAwIGFuZCBjYWxjdWxhdGUgdGhlIHJlc3VsdC4gICBUaGUgZmluYWwgbnVtYmVyIHdpbGwgYmUgYXMgZm9sbG93czogICBbKDEwMCDDlyAxLzYpIMO3IDEvN10gw5cgNy8xMCAgICA9ICgxMDAvMSkgw5cgKDEvNikgw5cgKDcvMSkgw5cgKDcvMTApICAgPSAyNDUgLzMgPSA4MSAgIDIgIDMgICAlICAgU28sIHRoZSBmaW5hbCBudW1iZXIgd2lsbCBiZSA4MSAgIDIgIDMgICAlIG9mIHRoZSBvcmlnaW5hbCBudW1iZXIuICAgICAgICAgMyAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 49/6% ",
        "option2" : " 50/3% ",
        "option3" : " 245/3% ",
        "option4" : " 5/3% "
      }
    },
    {
      "index" : 9,
      "question" : "M is 35% of N; L is 25% of N. What percent of M is L? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IE0gaXMgMzUlIG9mIE4sIGFuZCBMIGlzIDI1JSBvZiBOICAgU28sIE0gPSAwLjM1TiwgYW5kIEwgPSAwLjI1Ti4gICBUbyBmaW5kIG91dCB3aGF0IHBlcmNlbnQgTCBpcyBvZiBNLCB3ZSBuZWVkIHRvIGV2YWx1YXRlOiAgIChML00pIMOXIDEwMCUgPSAoMC4yNU4vMC4zNU4pIMOXMTAwJSA9ICgyNS8zNSkgw5cgMTAwJSA9IDUwMC83ICUgPSA3MSAgIDMgIDcgICAlICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 40.5% ",
        "option2" : " 500/7% ",
        "option3" : " 140% ",
        "option4" : " Data insufficient. "
      }
    },
    {
      "index" : 10,
      "question" : "Two statements S1 and S2 are given below followed by a question. S1: N is a multiple of 5. S2: Y is a multiple of 4. Question: X is 40% of N, and N is 75% of Y.N and Y are positive integers. X is a positive integer or not? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IE4gaXMgNzUlIG9mIFkgICBTbywgTiA9ICgzLzQpIFkgICBYIGlzIDQwJSBvZiBOICAgU28sIFggPSAoMi81KSBOID0gKDIvNSkgKDMvNCkgWSA9ICgzLzEwKSBZICAgU3RhdGVtZW50IDE6ICAgTiBpcyBhIG11bHRpcGxlIG9mIDUsIGFuZCBYID0gKDIvNSkgTi4gSXQgbWVhbnMgdGhhdCBYIG11c3QgYmUgYW4gaW50ZWdlciwgcG9zaXRpdmUgb3IgbmVnYXRpdmUuICAgICBTdGF0ZW1lbnQgMjogICAgWSBpcyBhIG11bHRpcGxlIG9mIDQsIGFuZCBYID0gKDMvMTApIFkuIEl0IG1lYW5zIHRoYXQgWCBtYXkgb3IgbWF5IG5vdCBiZSBhbiBpbnRlZ2VyLiAgIFVzaW5nIGJvdGggc3RhdGVtZW50cyB0b2dldGhlcjogICBYIG11c3QgYmUgYW4gaW50ZWdlciwgcG9zaXRpdmUgb3IgbmVnYXRpdmUuICBTbywgd2UgY2Fubm90IHRlbGwgZm9yIHN1cmUgd2hldGhlciBYIGlzIGEgcG9zaXRpdmUgaW50ZWdlciBvciAgIG5vdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both statements together are insufficient to  answer the question. ",
        "option2" : " Either statement alone is sufficient to  answer the question. ",
        "option3" : " Statement 1 alone is sufficient to answer  the question, but Statement 2 alone is not  sufficient to answer the question. ",
        "option4" : " Both statements together are sufficient to  answer the question, but neither statement  alone is sufficient to answer the question.        4             Directions for the following 4 (four) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following is essentially implied in the above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgbXVjaCBsYXRoZXIgYWJvdXQgcG9saXRpY2FsIGVtcG93ZXJtZW50IG9mICAgd29tZW4gLSBvbmUgZmFjZXQgYmVpbmcgcmVzZXJ2YXRpb24gb2Ygc2VhdHMgaW4gUGFybGlhbWVudC4gV2hldGhlciB0aGF0IGFsb25lIHdpbGwgY2hhbmdlIHRoZSAgIHN0cmFuZ2xlaG9sZCBvZiBjaXJjdW1zdGFuY2UgaXMgYW4gb3BlbiBxdWVzdGlvbi4nIFNvLCB0aGUgYXV0aG9yIGhpbXNlbGYgaXMgbm90IHN1cmUgd2hldGhlciByZXNlcnZhdGlvbiAgIG9mIHNlYXQgd2lsbCBoZWxwIGluIGltcHJvdmluZyBlY29ub21pYyBjb25kaXRpb25zIG9mIHRoZSB3b21lbi4gSGVuY2UsIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBub3QgICBjb3JyZWN0LiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnRmVtYWxlIExhYm91ciBGb3JjZSBQYXJ0aWNpcGF0aW9uIFJhdGUgaW4gdGhlIEc3ICAgY291bnRyaWVzIHJhbmdlcyBiZXR3ZWVuIDQyIGFuZCA2MSBwZXIgY2VudC4gSW5kaWEgdHJhaWxzIGFsbCBpdHMgcGVlcnMgYW1vbmcgdGhlIEJSSUNTIG5hdGlvbnMgb24gZmVtYWxlICAgd29ya2ZvcmNlIHBhcnRpY2lwYXRpb24gcmF0ZS4nIEluZGlhIGlzIHN1cmVseSBiZWhpbmQgRzcgYW5kIG90aGVyIEJSSUNTIG5hdGlvbnMsIGJ1dCB3ZSBjYW5ub3Qgc2F5IHNvICAgZm9yIHRoZSBTb3V0aCBBc2lhbiByZWdpb24gYXMgdGhlIGRhdGEgaXMgaW5hZGVxdWF0ZS4gICBPcHRpb24gKGMpIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGUgaGlzdG9yeSBvZiBlY29ub21pYyBkZXZlbG9wbWVudCBpcyBleHBsaWNpdCBhYm91dCAgIG5lY2Vzc2FyeSBhbmQgc3VmZmljaWVudCBjb25kaXRpb25zIGZvciBwcm9zcGVyaXR5LiBObyBsYXJnZSBlY29ub215IGhhcyBhdHRhaW5lZCBpdHMgbGV2ZWwgd2l0aG91dCB0aGUgICBwYXJ0aWNpcGF0aW9uIG9mIHdvbWVuIGluIHRoZSB3b3JrZm9yY2UuJyBUaGVyZSBpcyBhIGNsZWFyIGltcGxpY2F0aW9uIHRoYXQgaW4gb3JkZXIgdG8gYmVjb21lIGEgbGFyZ2UgICBlY29ub215LCBwYXJ0aWNpcGF0aW9uIG9mIHdvbWVuIGluIHRoZSB3b3JrZm9yY2UgaXMgYSBuZWNlc3NpdHkuIFRodXMsIHRoaXMgc3RhdGVtZW50IGlzIGRpcmVjdGx5IGltcGxpZWQgICBpbiB0aGUgcGFzc2FnZS4gIEFscyxvIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgbWVyaXQgaW4gdGhlIGFyZ3VtZW50IHRoYXQgZWNvbm9taWMgZW1wb3dlcm1lbnQgICBlbmFibGVzIGFuZCBwcm9wZWxzIHBvbGl0aWNhbCBlbXBvd2VybWVudC4nIFRodXMsIGVjb25vbWljIHBhcnRpY2lwYXRpb24gYmVjb21lcyBpbXBvcnRhbnQgZm9yICAgcG9saXRpY2FsIGVtcG93ZXJtZW50IHRvby4gICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFJlZmVyIHRvIHRoZSBsaW5lOiAnWWV0IGJhcmVseSAxOSBwZXIgY2VudCBvZiBJbmRpYW4gd29tZW4gb2Ygd29ya2luZyBhZ2UgICBwYXJ0aWNpcGF0ZWQgaW4gdGhlIGxhYm91ciBmb3JjZSBpbiAyMDIxIGFzIHBlciB0aGUgV29ybGQgQmFuay4nIFRoZSBwYXNzYWdlIG1lbnRpb25zIG9ubHkgdGhlICAgcGVyY2VudGFnZSB0ZXJtcyBhYm91dCBmZW1hbGUgbGFib3VyIGZvcmNlIHBhcnRpY2lwYXRpb24uIFRoZXJlIGlzIG5vIGluZGljYXRpb24gdG93YXJkcyB3aGV0aGVyIG9yIG5vdCBpdCAgIGhhcyB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygd29tZW4gaW4gd29ya2luZy1hZ2UgcG9wdWxhdGlvbi4gQWxzbywgZXZlbiBpZiB0cnVlLCB0aGlzIHN0YXRlbWVudCBpcyBub3QgdGhlICAgYmVzdCBpbXBsaWVkIHN0YXRlbWVudCBvZiB0aGUgcGFzc2FnZSwgYXMgdGhlIHBhc3NhZ2UgaXMgY2VudGVyZWQgYXJvdW5kIHRoZSBuZWVkIG9mIGVjb25vbWljICAgZW1wb3dlcm1lbnQgb2Ygd29tZW4gYW5kIHRoZWlyIHBvb3IgbGV2ZWxzIGluIEluZGlhLCBub3QgdGhlaXIgcmVsYXRpdmUgbnVtYmVycyBpbiB3b3JraW5nIGFnZSAgIHBvcHVsYXRpb24uICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Reservation of seats in Indian Parliament  for women is needed for their economic   empowerment.  ",
        "option2" : " India has the lowest levels of female  workforce participation rate in the South   Asia.  ",
        "option3" : " Participation of women in the workforce is  a necessary condition for prosperity.  ",
        "option4" : " India is expected to continue to have the  largest number of women in working-age   population.  "
      }
    },
    {
      "index" : 12,
      "question" : "What is the most logical and rational inference that can be made from the above  passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gdGhlc2Ugc3RlcHMgKHByb3Zpc2lvbiBvZiBsb25nZXIgbWF0ZXJuaXR5IGxlYXZlLCAgIGNyw6hjaGUgZmFjaWxpdGllcyBhbmQgZXF1YWwgcmVtdW5lcmF0aW9uKSBmb3IgaW1wcm92aW5nIGZlbWFsZSBsYWJvdXIgcGFydGljaXBhdGlvbi4gSXQgaXMgY29tcGxldGVseSAgIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhpcyBwYXNzYWdlLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGlzIGNsZWFybHkgY2VudGVyZWQgb24gZmVtYWxlIGxhYm91ciBwYXJ0aWNpcGF0aW9uLiBUbyBpbmZlciBhICAgZ2VuZXJpYyBzdGF0ZW1lbnQgb24gZGVtb2dyYXBoaWMgZGl2aWRlbmQgKGluY2x1ZGVzIGJvdGggbWFsZSBhbmQgZmVtYWxlKSB3b3VsZCBiZSBvdXQgb2YgdGhlIHNjb3BlIG9mICAgdGhlIHBhc3NhZ2UuIEFsc28sIHRoZXJlJ3Mgbm8gZGlzY3Vzc2lvbiBvbiBydXJhbC11cmJhbiBwYXJhbWV0ZXJzLiAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zIHRoYXQgRzcgaGF2ZSBoaWdoZXIgZmVtYWxlIGxhYm91ciBwYXJ0aWNpcGF0aW9uOyBidXQgICBpdCBkb2VzIG5vdCByZXZlYWwgbXVjaCBhYm91dCBwb2xpdGljYWwgcmVwcmVzZW50YXRpb24gb2Ygd29tZW4uIEFsc28sIHRoZSBsaW5lIGluIHRoZSBwYXNzYWdlIC0gJ1RoZXJlIGlzICAgbWVyaXQgaW4gdGhlIGFyZ3VtZW50IHRoYXQgZWNvbm9taWMgZW1wb3dlcm1lbnQgZW5hYmxlcyBhbmQgcHJvcGVscyBwb2xpdGljYWwgZW1wb3dlcm1lbnQnLCBjb3VsZCAgICAgICAgIDQgICAgICAgICAgICAgICAgICAgbWVhbiB0aGF0IGhpZ2hlciBsZXZlbHMgb2YgcG9saXRpY2FsIHJlcHJlc2VudGF0aW9uIG9mIHdvbWVuIGlzIGR1ZSB0byBlY29ub21pYyBlbXBvd2VybWVudC4gSG93ZXZlciwgICB3ZSBjYW5ub3QgZ2VuZXJhbGlzZSBpdCB0byBBTEwgY291bnRyaWVzIGFzIG1lbnRpb25lZCBpbiB0aGlzIGFuc3dlciBvcHRpb24uIEhlbmNlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgICBpbmNvcnJlY3QuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCcgVGhlcmUgaXMgbXVjaCBsYXRoZXIgYWJvdXQgcG9saXRpY2FsIGVtcG93ZXJtZW50IG9mICAgd29tZW4gLSBvbmUgZmFjZXQgYmVpbmcgcmVzZXJ2YXRpb24gb2Ygc2VhdHMgaW4gUGFybGlhbWVudC4uLi4uIFRoZXJlIGlzIG5vIGRpc3B1dGluZyB0aGF0IHNvY2lhbCBhbmQgICBlY29ub21pYyBjb25kaXRpb25zIGFyZSBhIGNvbnRyaWJ1dG9yeSBmYWN0b3IuJyBUaHVzLCBib3RoIHNvY2lhbCBhbmQgZWNvbm9taWMgZmFjdG9ycyBhcmUgcmVzcG9uc2libGUgICBmb3IgcG9vciBsZXZlbHMgb2YgcG9saXRpY2FsIGVtcG93ZXJtZW50IG9mIHdvbWVuLiBBbHNvLCB0aGUgZGVtYW5kIG9mIHJlc2VydmF0aW9uIG9mIHNlYXRzIGluICAgUGFybGlhbWVudCBzaG93cyB0aGF0IHRoZWlyIHJlcHJlc2VudGF0aW9uIGlzIGxvdy4gIEhlbmNlLCBib3RoIGFyZ3VtZW50cyBvZiB0aGlzIGFuc3dlciBvcHRpb24gYXJlICAgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " India should make provision of longer  maternity leave, crèche facilities and equal   remuneration.  ",
        "option2" : " India cannot harness the demographic  dividend till the working-age rural   populace finds remunerative employment.  ",
        "option3" : " All countries with high levels of female  labour participation have comparatively   high levels of political representation of   women.  ",
        "option4" : " India is facing low political representation  of women due to both social and economic   factors.         5            "
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following statements best reflects the most logical, rational and practical suggestion implied by the passage given above? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0V2ZW4gYWZ0ZXIgc2hlIGhhcyBwYXNzZWQgdGhlIENsYXNzIFhJSSBleGFtaW5hdGlvbiAgIHdpdGggZGlzdGluY3Rpb24sIGEgc3R1ZGVudCBtYXkgbm90IGJlIGVxdWlwcGVkIHRvIGNyaXRpY2FsbHkgZXhhbWluZSB0aGUgY2xhaW1zIG1hZGUgYnkgYSBzY2hvbGFyLCAgIHByb3Bvc2UgYWx0ZXJuYXRpdmUgaHlwb3RoZXNlcyBhbmQgaW5pdGlhdGUgYSBuZXcgbGluZSBvZiByYXRpb25hbCBlbnF1aXJ5LicgSXQgaW1wbGllcyB3ZSBtdXN0IGFsc28gZm9jdXMgICBvbiBwcm9maWNpZW5jeSB0ZXN0cyBhbG9uZyB3aXRoIGFjaGlldmVtZW50IHRlc3RzLiBUaGVyZSBpcyBubyBtZW50aW9uIGFib3V0IHdoZXRoZXIgaXQgaXMgcG9zc2libGUgdG8gICBmb2N1cyBvbiBwcm9maWNpZW5jeSB0ZXN0cyBvciBub3QuIEZ1cnRoZXJtb3JlLCB0aGVyZSBpcyBubyBpbmRpY2F0aW9uIHRvd2FyZHMgdGhlIHN1YmplY3Rpdml0eSBpbnZvbHZlZCBpbiBhICAgcHJvZmljaWVuY3kgdGVzdC4gSGVuY2UsIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBpbmNvcnJlY3QuICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIGEgY2F0Y2ggaW4gdGhpcyBhbnN3ZXIgb3B0aW9uLiBZb3UgbWlnaHQgbWlzcyB0aGUgd29yZCAnbm90JyB3cml0dGVuICAgYmVmb3JlICdyYXRpb25hbCBlbnF1aXJ5JyBpbiB0aGlzIGFuc3dlciBzdGF0ZW1lbnQuIFRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgd2hldGhlciBjcml0aWNhbCAgIHRoaW5raW5nIGFuZC9vciByYXRpb25hbCBlbnF1aXJ5IG1ha2UgYSBzdHVkZW50IG1vcmUgaW50ZWxsaWdlbnQuIEl0IGp1c3QgZm9jdXNlcyBvbiB0aGUgaW1wb3J0YW5jZSBvZiAgIHByb2ZpY2llbmN5IHRlc3RzIChub3QganVzdCBhY2hpZXZlbWVudCB0ZXN0cykuIEZhY3R1YWxseSwgaXQgaXMgcHJvYmFibGUgdGhhdCBib3RoIGNyaXRpY2FsIHRoaW5raW5nIGFuZCAgIHJhdGlvbmFsIGVucXVpcnkgYWNjb3VudCBmb3IgaW50ZWxsaWdlbmNlLCBidXQgdGhpcyBpcyBub3QgdG91Y2hlZCB1cG9uIGluIHRoaXMgcGFzc2FnZS4gU28gdGhpcyBvcHRpb24gaXMgICBpbmNvcnJlY3QuICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgYW5zd2VyIG9wdGlvbiBpcyBjbG9zZS4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdFdmVuIGFmdGVyIHNoZSBoYXMgcGFzc2VkICAgdGhlIENsYXNzIFhJSSBleGFtaW5hdGlvbiB3aXRoIGRpc3RpbmN0aW9uLCBhIHN0dWRlbnQgbWF5IG5vdCBiZSBlcXVpcHBlZCB0byBjcml0aWNhbGx5IGV4YW1pbmUgdGhlIGNsYWltcyAgIG1hZGUgYnkgYSBzY2hvbGFyLicgSXQgaW1wbGllcyB0ZXh0Ym9vayBrbm93bGVkZ2UgZG9lcyBub3QgbWFrZSBhIHN0dWRlbnQgY2FwYWJsZSB0byBoYW5kbGUgY2xhaW1zICAgbWFkZSBieSBhIHNjaG9sYXIuIFNvIHRoZSBzdGF0ZW1lbnQgaXMgY29ycmVjdCBidXQgaXQgaXMgbm90IHRoZSBiZXN0IHN1Z2dlc3Rpb24gaW4gY29tcGFyaXNvbiB0byBvcHRpb24gKGQpLiAgIE9wdGlvbiAoZCkgYWxzbyBtZW50aW9ucyB0aGUgcmVsZXZhbmNlIG9mIHByb2ZpY2llbmN5IHRlc3RzIGluIGNvbXBhcmlzb24gdG8gYWNoaWV2ZW1lbnQgdGVzdHMuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0V2ZW4gYWZ0ZXIgc2hlIGhhcyBwYXNzZWQgdGhlIENsYXNzIFhJSSBleGFtaW5hdGlvbiB3aXRoICAgZGlzdGluY3Rpb24sIGEgc3R1ZGVudCBtYXkgbm90IGJlIGVxdWlwcGVkIHRvIGNyaXRpY2FsbHkgZXhhbWluZSB0aGUgY2xhaW1zIG1hZGUgYnkgYSBzY2hvbGFyLCBwcm9wb3NlICAgYWx0ZXJuYXRpdmUgaHlwb3RoZXNlcyBhbmQgaW5pdGlhdGUgYSBuZXcgbGluZSBvZiByYXRpb25hbCBlbnF1aXJ5LicgVGhlIG92ZXJhbGwgdGhlbWUgb3Igc3VnZ2VzdGlvbiBvZiB0aGUgICBwYXNzYWdlIGhvdmVycyBhcm91bmQgdGhlIGNydWNpYWwgcm9sZSBvZiBrbm93bGVkZ2UgYW5kIGNyaXRpY2FsIHRoaW5raW5nLCBjb21wYXJlZCB0byBhY2hpZXZpbmcgb25seSAgIGRpc3RpbmN0aW9uIGluIGV4YW1pbmF0aW9uLiBTbyB0aGlzIHN0YXRlbWVudCBiZXN0IHJlZmxlY3RzIHRoZSBzdWdnZXN0aW9uIGltcGxpZWQgYnkgdGhlIHBhc3NhZ2UuIFNvIHRoaXMgaXMgICB0aGUgY29ycmVjdCBvcHRpb24uICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is not possible to focus on proficiency  tests because of the subjectivity involved  therein. ",
        "option2" : " Critical thinking and not rational enquiry  makes a student more intelligent. ",
        "option3" : " The knowledge acquired through  prescribed textbooks is not enough to deal  with claims made by scholars. ",
        "option4" : " The criteria for academic outcome must be  knowledge and critical thinking, rather than  good grades. "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the above passage, the following assumptions have been made: 1. Social media has disturbed meaningful politics. 2. Physical organization is the best way for any meaningful discussion. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSG93ZXZlciwgdGhlIHN0cnVjdHVyZSBvZiBzb2NpYWwgbWVkaWEgaGFzIGZhY2lsaXRhdGVkIGEgICBwZXJjZXB0aW9uIG9mIGVuZ2FnZW1lbnQgd2l0aG91dCBvcmdhbml6YXRpb24sIGFjdGlvbiB3aXRob3V0IGNvbnNlcXVlbmNlLicgVGhpcyBtZWFucyB0aGF0IGFmdGVyIHRoZSAgIGFycml2YWwgb2Ygc29jaWFsIG1lZGlhLCB0aGUgbG9jYWwgb3JnYW5pemF0aW9uLCBkaXNjdXNzaW9uIGFuZCBuZWdvdGlhdGlvbiAoY29tcG9uZW50cyBvZiBtZWFuaW5nZnVsICAgcG9saXRpY3MpIGhhdmUgYmVlbiBkaXN0dXJiZWQgYXMgdGhlIGVuZ2FnZW1lbnQgdGFrZXMgcGxhY2Ugd2l0aG91dCBvcmdhbml6aW5nIHBlb3BsZSBhbmQgYWN0aW9ucyBhcmUgICBjb21taXR0ZWQgd2l0aG91dCBhbnkgY29uc2VxdWVuY2VzLiBTbyB0aGlzIHN0YXRlbWVudCBpcyBjb3JyZWN0LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgdGhlIHJvbGUgb2Ygb2ZmbGluZSBvcmdhbml6YXRpb25zIGFuZCB0aGUgc2hvcnRjb21pbmdzIG9mICAgc29jaWFsIG1lZGlhIGluIHRoZSBvcmdhbml6YXRpb24uIEJ1dCB0aGUgcGFzc2FnZSBub3doZXJlIG1lbnRpb25zIHRoYXQgcGh5c2ljYWwgb3JnYW5pemF0aW9uIGlzIGJldHRlciBpbiAgIGNvbXBhcmlzb24gdG8gYSB2aXJ0dWFsIG9yZ2FuaXphdGlvbiwgbGVhdmUgYWxvbmUgYmVzdC4gU28gdGhpcyBpcyBhbiBpbmNvcnJlY3Qgc3RhdGVtZW50LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 15,
      "question" : "If the price of petrol increases by 25% but Raj intends to spend only an additional 15% on petrol, by how much percent should he reduce the quantity of petrol purchased? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IExldCB0aGUgcHJpY2Ugb2YgMSBsaXRyZSBvZiBwZXRyb2wgYmUgUnMuIHggYW5kIHRoZSBpbml0aWFsIGFtb3VudCBib3VnaHQgYnkgUmFqIGJlICd5JyBsaXRyZXMgb2YgcGV0cm9sLiAgICBUaGVyZWZvcmUsIGhlIHdvdWxkIGhhdmUgc3BlbnQgUnMuIHh5IG9uIHBldHJvbC4gICAgV2hlbiB0aGUgcHJpY2Ugb2YgcGV0cm9sIGluY3JlYXNlcyBieSAyNSUsIHRoZSBuZXcgcHJpY2UgcGVyIGxpdHJlIG9mIHBldHJvbCB3aWxsIGJlIFJzLiAxLjI1eC4gICAgUmFqIGludGVuZHMgdG8gaW5jcmVhc2UgdGhlIGFtb3VudCBoZSBzcGVuZHMgb24gcGV0cm9sIGJ5IDE1JS4gaS5lLiwgaGUgaXMgd2lsbGluZyB0byBzcGVuZCB4eSArIDE1JSBvZiB4eSAgID0gUnMuIDEuMTV4eSAgICBMZXQgdGhlIG5ldyBxdWFudGl0eSBvZiBwZXRyb2wgdGhhdCBoZSBjYW4gZ2V0IGJlICdxJyBsaXRyZXMuICAgIFRoZW4sIDEuMjV4IMOXIHEgPSAxLjE1eHkgICBPciBxID0gMS4xNXh5LzEuMjV4ICAgT3IgcSA9ICgxLjE1LzEuMjUpeSA9IDAuOTJ5ICAgICAgICAgNSAgICAgICAgICAgICAgICAgICBBcyB0aGUgbmV3IHF1YW50aXR5IHRoYXQgaGUgY2FuIGJ1eSBpcyAwLjkyeSwgaGUgZ2V0cyAwLjA4eSBsZXNzZXIgdGhhbiB3aGF0IGhlIHVzZWQgdG8gZ2V0IGVhcmxpZXIuICAgUmVxdWlyZWQgcGVyY2VudGFnZSA9ICgwLjA4eS95KSDDlyAxMDAgPSA4JSAgIFRodXMsIFJhaiBoYXMgdG8gcmVkdWNlIHRoZSBxdWFudGl0eSBvZiBwZXRyb2wgYmVpbmcgcHVyY2hhc2VkIGJ5IDglLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10% ",
        "option2" : " 12% ",
        "option3" : " 8% ",
        "option4" : " 6.67% "
      }
    },
    {
      "index" : 16,
      "question" : "A shepherd has 1 million sheep at the beginning of the year 2000. The number of sheep grows by x% (x > 0) during the year. A famine hits his village in the next year and many of his sheep die. The sheep population decreases by y% during 2001 and at the beginning of 2002 the shepherd finds that he is left with 1 million sheep. Which of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IE51bWJlciBvZiBzaGVlcCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyIDIwMDAgYW5kIGF0IHRoZSBlbmQgb2YgMjAwMSBpcyBzYW1lLCBpLmUuIDEgbWlsbGlvbi4gICAneCcgaXMgdGhlIHBlcmNlbnRhZ2Ugb2Ygc2hlZXAgaW5jcmVhc2UgaW4gdGhlIHllYXIgMjAwMCwgYW5kICd5JyBpcyB0aGUgIHBlcmNlbnRhZ2UgZGVjcmVhc2Ugb2Ygc2hlZXAgaW4gICB0aGUgeWVhcnIgMjAwMS4gICBMZXQgdXMgYXNzdW1lIHRoZSB2YWx1ZSBvZiB4IHRvIGJlIDEwJS4gICAgVGhlcmVmb3JlLCB0aGUgbnVtYmVyIG9mIHNoZWVwIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIHllYXIgMjAwMSAoZW5kIG9mIDIwMDApIHdpbGwgYmUgMSBtaWxsaW9uICsgMTAlIG9mICAgMSBtaWxsaW9uID0gMS4xIG1pbGxpb24gICAgSW4gMjAwMSwgdGhlIG51bWJlciBvZiBzaGVlcCBkZWNyZWFzZXMgYnkgeSUgYW5kIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIHRoZSBudW1iZXIgb2Ygc2hlZXAgaW4gdGhlIGhlcmQgICBpcyAxIG1pbGxpb24uIGkuZS4gMC4xIG1pbGxpb24gc2hlZXAgaGF2ZSBkaWVkIGluIDIwMDEuICAgIFNvLCBQZXJjZW50YWdlIGRlY3JlYXNlIG9mIHNoZWVwIGluIHRoZSB5ZWFyIDIwMDEsIHkgPSAoMC4xLzEuMSkgw5cgMTAwICUgPSA5LjA5JSAgICBTbywgeCA9IDEwJSBhbmQgeSA9IDkuMDklIEZyb20gdGhlIGFib3ZlIGlsbHVzdHJhdGlvbiwgaXQgaXMgY2xlYXIgdGhhdCB4ID4geSBpcyBjb3JyZWN0LiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " x > y ",
        "option2" : " y > x ",
        "option3" : " x = y ",
        "option4" : " Cannot be determined        6            "
      }
    },
    {
      "index" : 17,
      "question" : "In an election contested by two parties, Party D secured 12% of the total votes more than Party R. If party R got 132,000 votes and there are no invalid votes, then by how many votes did it  lose the election?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IExldCB0aGUgcGVyY2VudGFnZSBvZiB0aGUgdG90YWwgdm90ZXMgc2VjdXJlZCBieSBQYXJ0eSBEIGJlIHglLCB0aGVuIHRoZSBwZXJjZW50YWdlIG9mIHRvdGFsIHZvdGVzIHNlY3VyZWQgICBieSBQYXJ0eSBSIHdpbGwgYmUgKHggLSAxMiklLiAgIEFzIHRoZXJlIGFyZSBvbmx5IHR3byBwYXJ0aWVzIGNvbnRlc3RpbmcgaW4gdGhlIGVsZWN0aW9uLCB0aGUgc3VtIHRvdGFsIG9mIHRoZSB2b3RlcyBzZWN1cmVkIGJ5IHRoZSB0d28gICBwYXJ0aWVzIHNob3VsZCBzdW0gdXAgdG8gMTAwJSBhcyB0aGVyZSBhcmUgbm8gaW52YWxpZCB2b3Rlcy4gICBTbywgeCArICh4IC0gMTIpID0gMTAwICAgIG9yIDJ4IC0gMTIgPSAxMDAgICBvciAyeCA9IDExMiAgICBvciB4ID0gNTYlICAgIFRodXMsIFBhcnR5IEQgZ290IDU2JSBvZiB0aGUgdG90YWwgdm90ZXMuICAgIFNvLCBQYXJ0eSBSIHdpbGwgZ2V0ICg1NiAtIDEyKSUsIGkuZS4gNDQlIG9mIHRoZSB0b3RhbCB2b3Rlcy4gICAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgICA0NCUgb2YgdGhlIHRvdGFsIHZvdGVzID0gMTMyLDAwMCAgIE9yICg0NC8xMDApIG9mIHRoZSB0b3RhbCB2b3RlcyA9IDEzMiwwMDAgICAgU28sIFRvdGFsIHZvdGVzID0gMTMyMDAwIMOXICgxMDAvNDQpID0gMzAwLDAwMCAgIFRoZSBtYXJnaW4gYnkgd2hpY2ggUGFydHkgUiBsb3N0IHRoZSBlbGVjdGlvbiA9IDEyJSBvZiB0aGUgdG90YWwgdm90ZXMgPSAxMiUgb2YgMzAwLDAwMCA9ICgxMi8xMDApIMOXICAgMzAwLDAwMCA9IDM2LDAwMCAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 300,000 ",
        "option2" : " 16,800 ",
        "option3" : " 36,000 ",
        "option4" : " 24,000 "
      }
    },
    {
      "index" : 18,
      "question" : "A candidate who gets 20% marks, fails by 10 marks. Another candidate who gets 42% marks, gets 12% of the maximum marks more than the passing marks. Find the maximum marks. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IExldCB0aGUgbWF4aW11bSBtYXJrcyBiZSAneCcuICAgQ2FuZGlkYXRlIHdobyBnZXRzIDQyJSBtYXJrcywgZ2V0cyAxMiUgb2YgdGhlIG1heGltdW0gbWFya3MgbW9yZSB0aGFuIHRoZSBwYXNzaW5nIG1hcmtzLiAgIFNvLCBQYXNzIHBlcmNlbnRhZ2UgPSAoNDIgLSAxMiklIG9mIHggPSAzMCUgb2YgeCAgICBDYW5kaWRhdGUgd2hvIGdldHMgMjAlIG1hcmtzLCBmYWlscyBieSAxMCBtYXJrcy4gICBTbywgUGFzcyBwZXJjZW50YWdlID0gMjAlIG9mIHggKyAxMCAgIFNvLCAzMCUgb2YgeCA9IDIwJSBvZiB4ICsgMTAgICBPciAzMCUgb2YgeCAtIDIwJSBvZiB4ID0gMTAgICBPciAxMCUgb2YgeCA9IDEwICAgT3IgeCA9ICgxMC8xMCkgw5cgMTAwID0gMTAwICAgVGhlcmVmb3JlLCBtYXhpbXVtIG1hcmtzID0gMTAwICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50 ",
        "option2" : " 100 ",
        "option3" : " 150 ",
        "option4" : " 200 "
      }
    },
    {
      "index" : 19,
      "question" : "When processing flower-nectar into honeybees' extract, a considerable amount of water gets wasted. How much flower-nectar must be processed to yield 1 kg of honey, if nectar contains 50% water, and the honey obtained from this nectar contains 15% water? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IExldCB0aGUgYW1vdW50IG9mIGZsb3dlci1uZWN0YXIgbmVlZGVkIGJlIHgga2cuICAgIEZsb3dlci1uZWN0YXIgY29udGFpbnMgNTAlIHdhdGVyLiBTbywgZmxvd2VyLW5lY3RhciBjb250YWlucyA1MCUgb2Ygbm9uLXdhdGVyeSBwYXJ0LiAgIEhvbmV5IGNvbnRhaW5zIDE1JSB3YXRlci4gU28sIGFtb3VudCBvZiBub24td2F0ZXJ5IHBhcnQgaW4gdGhlIGhvbmV5IHdpbGwgYmUgODUlLiAgICAgICAgIDYgICAgICAgICAgICAgICAgICAgV2hlbiBwcm9jZXNzaW5nIGZsb3dlci1uZWN0YXIgaW50byBob25leWJlZXMnIGV4dHJhY3QsIG9ubHkgdGhlIHdhdGVyIGlzIGxvc3QgZHVyaW5nIHByb2Nlc3NpbmcuICAgSGVuY2UsIHRoZSBub24td2F0ZXJ5IHBhcnQgaW4gZmxvd2VyLW5lY3RhciBzaG91bGQgYmUgZXF1YWwgdG8gdGhlIG5vbi13YXRlcnkgcGFydCBpbiBob25leS4gICDiiLQgNTAlIG9mIHRoZSBBbW91bnQgb2YgZmxvd2VyLW5lY3RhciBuZWVkZWQgPSA4NSUgb2YgdGhlIEFtb3VudCBvZiBob25leSAgICBPciAwLjUgw5cgeCA9IDAuODUgw5cgMSBrZyAgIE9yIHggPSAoMC44NS8wLjUpIMOXIDEga2cgPSAxLjcga2cgICBUaGVyZWZvcmUsIHRoZSBhbW91bnQgb2YgZmxvd2VyLW5lY3RhciBuZWVkZWQgaXMgMS43IGtnLiAgICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1.5 kg ",
        "option2" : " 1.7 kg ",
        "option3" : " 3.33 kg ",
        "option4" : " 2.2 kg "
      }
    },
    {
      "index" : 20,
      "question" : "30% of the men are more than 25 years old, and 80% of the men are less than or equal to 50 years old. 20% of all men play football. If 20% of the men above the age of 50 play football, what percentage of the football players are less than or equal to 50 years? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IDgwJSBvZiB0aGUgbWVuIGFyZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gNTAgeWVhcnMgb2xkLiBTbywgMjAlIG9mIHRoZSBtZW4gYXJlIGFib3ZlIHRoZSBhZ2Ugb2YgNTAgeWVhcnMuICAgMjAlIG9mIHRoZXNlIG1lbiBwbGF5IGZvb3RiYWxsLiAgICBUaGVyZWZvcmUsIDIwJSBvZiAyMCUsIGkuZS4gIDQlIG9mIHRoZSB0b3RhbCBtZW4gYXJlIGZvb3RiYWxsIHBsYXllcnMgYWJvdmUgdGhlIGFnZSBvZiA1MCB5ZWFycy4gICAgMjAlIG9mIHRoZSBtZW4gYXJlIGZvb3RiYWxsIHBsYXllcnMuICAgIFRoZXJlZm9yZSwgMTYlIG9mIHRoZSBtZW4gYXJlIGZvb3RiYWxsIHBsYXllcnMgYmVsb3cgb3IgZXF1YWwgdG8gdGhlIGFnZSBvZiA1MCB5ZWFycy4gICBUaGVyZWZvcmUsIHRoZSBwZXJjZW50YWdlIG9mIGZvb3RiYWxsIHBsYXllcnMgYmVsb3cgb3IgZXF1YWwgdG8gdGhlIGFnZSBvZiA1MCB5ZWFycyA9ICgxNi8yMCkgw5cgMTAwID0gODAlICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 15% ",
        "option2" : " 20% ",
        "option3" : " 80% ",
        "option4" : " 70%  Directions for the following 5 (five) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 21,
      "question" : "Based on the passage given above, the following assumptions have been made: 1. Use of antibiotics among cattle should be reduced for preventing harmful effects on the population. 2. Reduced use of antibiotics will lead to reduction in milk production. Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIGlzIGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgbGluZXMgJ0JhY3RlcmlhbCBpbmZlY3Rpb25zIGNhbiBiZSAgIGhhcm1mdWwgdG8gdGhlIGNvdyBhbmQgY2FuIGFsc28gaW5mZWN0IHRoZSBtaWxrIGFuZCBtZWF0IGNvbnN1bWVkIGJ5IHBlb3BsZS4gQW50aWJpb3RpY3MgYXJlIHNwbGljZWQgaW50byAgIHRoZSBETkEgb2YgZmVlZCBjb3JuIHRvIHByZXZlbnQgc3VjaCBpbmZlY3Rpb24uIEFudGliaW90aWNzIGhhdmUgYmVlbiB1c2VkIHNpbmNlIHRoZSAxOTUwcyB0byBzdGltdWxhdGUgICBjYXR0bGUgZ3Jvd3RoLiBPdmVyIHRpbWUsIHRoaXMgcHJhY3RpY2UgaGFzIGxlZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgYW50aWJpb3RpYy1yZXNpc3RhbnQgYmFjdGVyaWEgaW4gY2F0dGxlICAgYW5kIHBlb3BsZScuIFRoZXNlIGxpbmVzIHNob3cgdGhhdCB0aGUgdXNlIG9mIGFudGliaW90aWNzIGlzIGhhcm1mdWwgYW5kIHRoZXJlZm9yZSBpdHMgdXNlIHNob3VsZCBiZSAgIHJlZHVjZWQuICBTbywgdGhpcyBhc3N1bXB0aW9uIGlzIGNvcnJlY3QuICAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoaXMgZ2l2ZW4gb3B0aW9uIGlzIG5vdCBjb3JyZWN0IGFuZCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIEFsdGhvdWdoIHRoaXMgc2VlbXMgdG8gYmUgYSBjb3JyZWN0IGluZmVyZW5jZSwgaXQgaXMgbm90IGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBpbiB0aGUgcGFzc2FnZS4gVGhlcmUgaXMgbm8gICBkaXJlY3QgcmVsYXRpb25zaGlwIGVzdGFibGlzaGVkIGluIHRoZSBwYXNzYWdlIGJldHdlZW4gdGhlIHJlZHVjdGlvbiBpbiB0aGUgdXNlIG9mIGFudGliaW90aWNzIGFuZCByZWR1Y3Rpb24gICBpbiBtaWxrIHByb2R1Y3Rpb24uIFNvLCB0aGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2        7            "
      }
    },
    {
      "index" : 22,
      "question" : "Which one of the following statements best implies the suggestion given by the author of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdCYWN0ZXJpYWwgaW5mZWN0aW9ucyBjYW4gYmUgaGFybWZ1bCB0byB0aGUgY293IGFuZCBjYW4gYWxzbyBpbmZlY3QgdGhlICAgbWlsayBhbmQgbWVhdCBjb25zdW1lZCBieSBwZW9wbGUuIEFudGliaW90aWNzIGFyZSBzcGxpY2VkIGludG8gdGhlIEROQSBvZiBmZWVkIGNvcm4gdG8gcHJldmVudCBzdWNoICAgaW5mZWN0aW9uLiBBbnRpYmlvdGljcyBoYXZlIGJlZW4gdXNlZCBzaW5jZSB0aGUgMTk1MHMgdG8gc3RpbXVsYXRlIGNhdHRsZSBncm93dGguIE92ZXIgdGltZSwgdGhpcyBwcmFjdGljZSAgIGhhcyBsZWQgdG8gdGhlIGRldmVsb3BtZW50IG9mIGFudGliaW90aWMtcmVzaXN0YW50IGJhY3RlcmlhIGluIGNhdHRsZSBhbmQgcGVvcGxlJywgaW1wbHkgdGhhdCBvdmVyIHRpbWUgdGhlICAgY29udGludWVkIHVzZSBvZiBhbnRpYmlvdGljcyBjYW4gbGVhZCB0byBjcmVhdGlvbiBvZiBhbnRpYmlvdGljLXJlc2lzdGFudCBtaWNyb29yZ2FuaXNtcywgYW5kIHRoZXJlZm9yZSBpdCAgIHdvdWxkIGJlIHdpc2UgdG8gcmVkdWNlIHRoZSB1c2Ugb2YgYW50aWJpb3RpY3MuIFNvLCB0aGlzIG9wdGlvbiBpcyB0aGUgY29ycmVjdCBzdWdnZXN0aW9uIG1hZGUgYnkgdGhlICAgYXV0aG9yLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGVyZSBpcyBubyBkaXNjdXNzaW9uIGNvbmNlcm5pbmcgcmVzZWFyY2ggZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBhbnkga2luZCBvZiAgIGFsdGVybmF0aXZlIHRvIGFudGliaW90aWNzLiBUaGUgbWFpbiBzdWdnZXN0aW9uIG9mIHRoZSBhdXRob3IgaXMgcmVsYXRlZCB0byB0aGUgaW5jcmVhc2luZyB0aHJlYXQgb2YgYW50aWJpb3RpYyAgIHJlc2lzdGFuY2UgY29udmVydGluZyB0byBzdXBlcmJ1Z3MuIFRoZXJlZm9yZSwgdGhpcyBvcHRpb24gaXMgbm90IGNvcnJlY3QuICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBvcHRpb24gc3RhdGVzIHRoYXQgYmlvdGVjaG5vbG9neSBoYXMgc29tZSBuZWdhdGl2ZSBzaWRlIGVmZmVjdHMsIGJ1dCBpdCAgIGlzIG5vdCB0aGUgbWFpbiB0aGVtZSBvZiB0aGUgcGFzc2FnZS4gVGhlIGNvcmUgZGlzY3Vzc2lvbiBvZiB0aGUgcGFzc2FnZSBpcyBhYm91dCB0aGUgdXNlIG9mIGFudGliaW90aWNzIGFuZCAgIHRoZWlyIHJlc2lzdGFuY2UgYW1vbmcgY2F0dGxlIGFuZCB0aGUgcG9wdWxhdGlvbi4gVGhlIGdpdmVuIHN0YXRlbWVudCBpcyBtb3JlIGluIHRoZSBuYXR1cmUgb2YgYSAgIGZhY3Qvb3BpbmlvbiwgcmF0aGVyIHRoYW4gYSBzdWdnZXN0aW9uLiBTbywgdGhpcyBvcHRpb24gaXMgbm90IHRoZSBjb3JyZWN0IHN1Z2dlc3Rpb24uICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuICBUaGlzIG9wdGlvbiBpbiBnZW5lcmFsIGlzIGNvcnJlY3QuIEhvd2V2ZXIsIHRoaXMgaXMgbm90IHRoZSBtYWluIGRpc2N1c3Npb24gb2YgdGhlICAgcGFzc2FnZS4gSXQgY291bGQgYmUgYSBmYWlyIGFzc3VtcHRpb24gb3IgYW4gaW5mZXJlbmNlLCBidXQgdGhlIHN1Z2dlc3Rpb24gZ2l2ZW4gaGVyZSBpcyB0aGF0IGFudGliaW90aWMgICByZXNpc3RhbmNlIGlzIGluY3JlYXNpbmcgZHVlIHRvIGluY3JlYXNlZCB1c2Ugb2YgYW50aWJpb3RpY3MsIHdoaWNoIGNhbiBsZWFkIHRvIHRoZSBjcmVhdGlvbiBvZiBzdXBlcmJ1Z3MuICAgU28sIHRoaXMgY291bGQgYmUgYSBnb29kIGdlbmVyaWMgc3VnZ2VzdGlvbiBidXQgbm90IHRoZSBiZXN0IHN1Z2dlc3Rpb24gYXMgcGVyIHRoZSBwYXNzYWdlLiBBbHNvLCB0aGUgbWFpbiAgIGZvY3VzIG9mIHRoZSBwYXNzYWdlIGlzIG9uIGFuaW1hbHMsIG5vdCBwZW9wbGUuICAgICAgICAgIDcgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " To prevent the creation of antibiotic-  resistant microorganisms in cattle and  people, there is an urgent need to reduce  the use of antibiotics. ",
        "option2" : " Research should be done to evolve some  alternatives to the harmful use of  antibiotics. ",
        "option3" : " Use of biotechnology has negative side  effects. ",
        "option4" : " Biotechnology can be used to reduce  antibiotic resistance among people. "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be  made from the passage?  1. Efforts should be made to increase the knowledge of individuals about the  prevention of diseases.  2. Immunization of every person in the community is a must to prevent the spread  of disease.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoaXMgaW5mZXJlbmNlIGlzIGJhc2VkIG9uIHRoZSBkaXNjdXNzaW9uIGluIHRoZSBwYXNzYWdlIGFzIHNlZW4gaW4gdGhlIGxpbmVzICAgJ0F2b2lkaW5nIGRpc2FiaWxpdHkgYW5kIGRlYXRoIGZyb20gdGhlc2UgY2F1c2VzIGRlcGVuZHMgYSBncmVhdCBkZWFsIG1vcmUgb24gaW5kaXZpZHVhbCB1bmRlcnN0YW5kaW5nICAgYW5kIGFjdGlvbiB0aGFuIGRpZCB0aGUgcHJldmVudGlvbiBvZiB0aGUgaW5mZWN0aW91cyBkaXNlYXNlcycuIFRoaXMgcHJlbWlzZSBlc3RhYmxpc2hlcyB0aGF0IGluZGl2aWR1YWwgICB1bmRlcnN0YW5kaW5nIHBsYXlzIGEgY3JpdGljYWwgcm9sZSBpbiBwcmV2ZW50aW5nIHRoZSBzcHJlYWQgb2YgZGlzZWFzZS4gVGhlcmVmb3JlLCB0aGlzIGluZmVyZW5jZSBpcyBjb3JyZWN0LiAgIEluZmVyZW5jZSAyIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgbm90IGNvcnJlY3QgYmVjYXVzZSBhcyBwZXIgdGhlIHBhc3NhZ2UgJ1RoZSBpbW11bml6YXRpb24gb2YgZXZlbiAgIGEgZmV3IGNoaWxkcmVuIGluIGEgY29tbXVuaXR5IGFmZm9yZHMgc29tZSBwcm90ZWN0aW9uIHRvIHRoZSBvdGhlcnMsIGZvciBlYWNoIGltbXVuZSBjaGlsZCBpbiBhICAgcG9wdWxhdGlvbiByZWR1Y2VzIHRoZSBjaGFuY2Ugb2YgdHJhbnNtaXNzaW9uIG9mIHRoZSBkaXNlYXNlJywgc2hvd2luZyB0aGF0IHRoZXJlIGlzIG5vIG5lZWQgZm9yICAgaW1tdW5pemluZyBldmVyeSBwZXJzb24gYmVjYXVzZSBpbW11bml6YXRpb24gb2YgZXZlbiBhIGZldyBhbHNvIG9mZmVycyBwcm90ZWN0aW9uIHRvIG90aGVycy4gU28sIHRoaXMgICBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 24,
      "question" : "Which one of the following statements best reflects the crux of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZXJlIGlzIG5vIGRpc2N1c3Npb24gb24gdGhlIHJvbGUgb2YgdGhlICAgZ292ZXJubWVudCB0byBhY2NlbGVyYXRlIHRoZSBwYWNlIG9mIHZhY2NpbmF0aW9uIGZvciBkaWZmZXJlbnQgZGlzZWFzZXMuIFNvLCB0aGlzIHN0YXRlbWVudCBpcyBub3QgdGhlIGNydXguICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBvcHRpb24gaXMgY29udHJhcnkgdG8gdGhlIGluZm9ybWF0aW9uIGdpdmVuIGluIHRoZSBwYXNzYWdlLiBUaGUgbGluZXMgICAnTm90IGV2ZXJ5IHBlcnNvbiBuZWVkcyB0byB0YWtlIHNwZWNpZmljIHByZXZlbnRpdmUgYWN0aW9uIHRvIGJlIHByb3RlY3RlZCBmcm9tIGEgY29tbXVuaWNhYmxlIGRpc2Vhc2UnLCAgIG1lYW4gdGhhdCBub3QgZXZlcnkgcGVyc29uIG5lZWRzIHRvIHRha2UgcHJldmVudGl2ZSBzdGVwcy4gU28sIHRoaXMgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdBdm9pZGluZyBkaXNhYmlsaXR5IGFuZCBkZWF0aCBmcm9tIHRoZXNlIGNhdXNlcyBkZXBlbmRzIGEgZ3JlYXQgZGVhbCAgIG1vcmUgb24gaW5kaXZpZHVhbCB1bmRlcnN0YW5kaW5nIGFuZCBhY3Rpb24gdGhhbiBkaWQgdGhlIHByZXZlbnRpb24gb2YgdGhlIGluZmVjdGlvdXMgZGlzZWFzZXMnIGFuZCAnVGhlICAgaW1tdW5pemF0aW9uIG9mIGV2ZW4gYSBmZXcgY2hpbGRyZW4gaW4gYSBjb21tdW5pdHkgYWZmb3JkcyBzb21lIHByb3RlY3Rpb24gdG8gdGhlIG90aGVycywgZm9yIGVhY2ggICBpbW11bmUgY2hpbGQgaW4gYSBwb3B1bGF0aW9uIHJlZHVjZXMgdGhlIGNoYW5jZSBvZiB0cmFuc21pc3Npb24gb2YgdGhlIGRpc2Vhc2UnLCBlc3RhYmxpc2ggdGhhdCAgIGtub3dsZWRnZSBpcyBhIG5lY2Vzc2FyeSBidXQgbm90IHN1ZmZpY2llbnQgY29uZGl0aW9uIGZvciB0aGUgcHJvdGVjdGlvbiBvZiBjb21tdW5pdHkgZnJvbSBpbmZlY3Rpb3VzICAgZGlzZWFzZXMuIEF3YXJlbmVzcyBzaG91bGQgYmUgY29tcGxlbWVudGVkIGJ5IGltbXVuaXphdGlvbiB0byBhcnJlc3QgdGhlIHNwcmVhZCBvZiBpbmZlY3Rpb3VzIGRpc2Vhc2VzLiAgIFNvLCB0aGlzIG9wdGlvbiBiZXN0IHJlZmxlY3RzIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBjb21wYXJlcyB0aGUgaW1tdW5pemF0aW9uIG9mIGNoaWxkcmVuIHdpdGggdGhhdCBvZiBhZHVsdHMgYW5kICAgY29uY2x1ZGVzIHRoYXQgaW1tdW5pemluZyBjaGlsZHJlbiBpcyBtb3JlIGltcG9ydGFudCB0aGFuIGFkdWx0cy4gSG93ZXZlciwgc3VjaCBhIGNvbXBhcmlzb24gaXMgbm90ICAgZGlzY3Vzc2VkIGluIHRoZSBwYXNzYWdlLiBTbywgdGhpcyBpcyBub3QgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Governments should speed up vaccination  for different diseases to prevent deaths.  ",
        "option2" : " All citizens should take steps to reduce the  load of diseases from the community and   prevent the spread of diseases.  ",
        "option3" : " Individuals' knowledge about the   infectious disease is important but not   sufficient to protect the community from its   spread.  ",
        "option4" : " Immunization of children is more important  than adults as it reduces the chance of   transmission of the disease.         8            "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the passage, the following assumptions have been made: 1. The Europeans introduced plants such as potatoes, tomatoes, corn and tobacco in Asia. 2. By channeling water from streams into their fields, the farmers were able to increase the food grain production in Europe. 3. New agricultural methods have helped in increasing the soil fertility and production. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkb2VzIG5vdCBnaXZlbiBhbnkgcmVmZXJlbmNlIHRvIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbmV3IHBsYW50cyBieSAgIEV1cm9wZWFucyBpbiBBc2lhLiBTbywgaXQgaXMgZW50aXJlbHkgb3V0IG9mIHRoZSBhbWJpdCBvZiB0aGlzIHBhc3NhZ2UuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gdGhlIGlycmlnYXRpb24gYXMgYSBtZXRob2Qgb2YgaW1wcm92ZW1lbnQgaW4gICBhZ3JpY3VsdHVyZS4gVGhlIGF1dGhvciBvbmx5IHRhbGtzIGFib3V0IG1lYXN1cmVzIGxpa2UgaW1wcm92aW5nIGNyb3AgdmFyaWV0aWVzIHRocm91Z2ggZ2VuZXRpY3MsIGNyb3AgICByb3RhdGlvbiwgTm9yZm9sayBmb3VyLWZpZWxkIHN5c3RlbSwgZXRjLiBTbywgaXQgaXMgYW4gaW52YWxpZCBhc3N1bXB0aW9uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucywgJ3RoZSBOb3Jmb2xrIGZvdXItZmllbGQgc3lzdGVtLCBkZXZlbG9wZWQgaW4gICBFbmdsYW5kLCBwcm92ZWQgcXVpdGUgc3VjY2Vzc2Z1bC4gSXQgaW52b2x2ZWQgdGhlIHllYXJseSByb3RhdGlvbiBvZiBzZXZlcmFsIGNyb3BzLiBUaGlzIGFkZGVkIG51dHJpZW50cyB0byAgIHRoZSBzb2lsLicgVGh1cywgbmV3IGFncmljdWx0dXJhbCBtZXRob2RzIGxpa2UgTm9yZm9sayBmb3VyLWZpZWxkIHN5c3RlbSBoZWxwZWQgaW4gaW5jcmVhc2luZyB0aGUgc29pbCAgIGZlcnRpbGl0eSBhbmQgdGh1cyB0aGUgcHJvZHVjdGlvbiBvZiBjcm9wcy4gU28sIGl0IGlzIGEgdmFsaWQgYXNzdW1wdGlvbi4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 2 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 26,
      "question" : "Two equal sums of money were invested, one at 4% and the other at 4.5%. At the end of 7 years, the simple interest received from the latter exceeded that received from the former by Rs. 31.50. Each sum invested was ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IExldCBlYWNoIHN1bSBiZSBScy4gWCwgdGhlbiAgICBEaWZmZXJlbmNlIG9mIFMuSS4gID0gUnMuIDMxLjUwICAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgICAgWyhYIMOXIDQuNSDDlyA3KS8xMDBdIC0gWyhYIMOXIDQgw5cgNykgLzEwMF0gPSAzMS41MCAgIE9yICgzMS41WCAtIDI4WCkvMTAwID0gMzEuNTAgICBPciAzLjVYID0gMzEuNSDDlyAxMDAgICAgT3IgWCA9IDMxNTAvMy41ID0gUnMuIDkwMCAgIFRodXMsIGVhY2ggc3VtIHdhcyBScy4gOTAwLiAgIFRodXMsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1,200 ",
        "option2" : " Rs. 600 ",
        "option3" : " Rs. 750 ",
        "option4" : " Rs. 900 "
      }
    },
    {
      "index" : 27,
      "question" : "Lucknow Shatabdi Express has a capacity of 500 seats of which 10% are in the Executive class and the rest are chair cars. During one journey, the train was booked to 85% of its capacity. If the Executive class was booked to 96% of its capacity, then how many chair car seats were empty during that journey? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IFNlYXRzIGluIGV4ZWN1dGl2ZSBjbGFzcyA9IDEwJSBvZiA1MDAgPSA1MCAgIFNvLCBzZWF0cyBpbiBjaGFpciBjYXIgPSA1MDAgLSA1MCA9IDQ1MCAgIFRvdGFsIGJvb2tlZCBzZWF0cyA9IDg1JSBvZiA1MDAgPSA0MjUgICBTZWF0cyBib29rZWQgaW4gZXhlY3V0aXZlIGNsYXNzID0gOTYlIG9mIDUwID0gNDggICAgICAgICA4ICAgICAgICAgICAgICAgICAgIFRoZXJlZm9yZSwgc2VhdHMgYm9va2VkIGluIGNoYWlyIGNhciA9IDQyNSAtIDQ4ID0gMzc3ICAgRW1wdHkgc2VhdHMgaW4gY2hhaXIgY2FyID0gNDUwIC0gMzc3ID0gNzMgICBUaHVzLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 78 ",
        "option2" : " 73 ",
        "option3" : " 72 ",
        "option4" : " 76 "
      }
    },
    {
      "index" : 28,
      "question" : "If the difference between P and R is r% of R, and the sum of P and R is 210, then which of the following statements is always true? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEl0IGlzIGdpdmVuIHRoYXQsIFAgKyBSID0gMjEwICAgV2Ugd2lsbCBjaGVjayBlYWNoIG9wdGlvbiBvbmUgYnkgb25lLiAgIFN0YXJ0aW5nIHdpdGggb3B0aW9uIChhKTogICBQID0gMTEwIGFuZCBSID0gMTAwICAgU28sIFAgKyBSID0gMjEwICAgVGh1cywgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " P = 110, R = 100 ",
        "option2" : " P = 270, R = 180 ",
        "option3" : " P = 3000, R = 3200 ",
        "option4" : " All of these "
      }
    },
    {
      "index" : 29,
      "question" : "How much water must be added to a 100 cc of 80% solution of boric acid to reduce it to a 50% solution? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IFF1YW50aXR5IG9mIGJvcmljIGFjaWQgaW4gMTAwIGNjIHNvbHV0aW9uID0gODAlIG9mIDEwMCBjYyA9IDgwIGNjICAgUXVhbnRpdHkgb2Ygd2F0ZXIgaW4gMTAwIGNjIHNvbHV0aW9uID0gMTAwIGNjIC0gODAgY2MgPSAyMCBjYyAgIExldCB4IGNjIG9mIHdhdGVyIGJlIGFkZGVkIHRvIGdldCB0aGUgY29uY2VudHJhdGlvbiBvZiA1MCUuICAgIFNvLCAoODApLygxMDAgKyB4KSA9IDUwLzEwMCAgIG9yICg4MCkvKDEwMCArIHgpID0gMS8yICAgb3IgODAgw5cgMiA9ICgxMDAgKyB4KSAgIG9yIHggPSAxNjAgLSAxMDAgPSA2MCBjYyAgIFRodXMsIDYwIGNjIG9mIHdhdGVyIG11c3QgYmUgYWRkZWQuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICBBbHRlcm5hdGUgbWV0aG9kOiAgIENvbmNlbnRyYXRpb24gb2YgYm9yaWMgYWNpZCBpbiAxMDAgY2Mgc29sdXRpb24gPSA4MCUgb2YgMTAwIGNjID0gODAgY2MgICBRdWFudGl0eSBvZiB3YXRlciBpbiAxMDAgY2Mgc29sdXRpb24gPSAxMDAgY2MgLSA4MCBjYyA9IDIwIGNjICAgSGVyZSB3ZSBhcmUgYWRkaW5nIHdhdGVyLiBTbywgYW1vdW50IG9mIGJvcmljIGFjaWQgaXMgZml4ZWQuICAgV2hlbiB3YXRlciBpcyBhZGRlZCB0byB0aGUgc29sdXRpb24sIGJvcmljIGFjaWQgcmVkdWNlcyB0byA1MCUgb2YgdGhlIHNvbHV0aW9uLiAgIFRodXMsIDUwJSBvZiB0aGUgc29sdXRpb24gY29udGFpbnMgODAgY2MuICAgU28sIDEwMCUgb2YgdGhlIHNvbHV0aW9uIGNvbnRhaW5zIDE2MCBjYy4gICBBbW91bnQgb2Ygd2F0ZXIgdG8gYmUgYWRkZWQgaW4gdGhlIHNvbHV0aW9uID0gMTYwIGNjIC0gMTAwIGNjID0gNjAgY2MgICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 20 cc ",
        "option2" : " 40 cc ",
        "option3" : " 80 cc ",
        "option4" : " 60 cc        9            "
      }
    },
    {
      "index" : 30,
      "question" : "If A's salary is 25% higher than B's salary, then how much per cent is B's salary lower than A's? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IExldCBCJ3Mgc2FsYXJ5IGJlIFJzLiAxMDAuICAgVGhlbiBBJ3Mgc2FsYXJ5ID0gUnMuIDEyNSAgIFJlcXVpcmVkIHBlcmNlbnRhZ2UgPSBbKDEyNSAtIDEwMCkvMTI1XSDDlyAxMDAgPSAoMjUgLzEyNSkgw5cgMTAwID0gMjAlICAgVGh1cywgQidzIHNhbGFyeSBpcyBsb3dlciB0aGFuIEEncyBzYWxhcnkgYnkgMjAlLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 16.33% ",
        "option2" : " 20% ",
        "option3" : " 25% ",
        "option4" : " 33.33% "
      }
    },
    {
      "index" : 31,
      "question" : "The difference between the simple interest and the compound interest compounded annually at a rate of 12% per annum on Rs. 5000 for two years will be ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IFByaW5jaXBhbCAoUCkgPSBScy4gNTAwMCwgUmF0ZSAocikgPSAxMiUgcGVyIGFubnVtLCBUaW1lIChuKSA9IDIgeWVhcnMgICBDb21wb3VuZCBJbnRlcmVzdCAoQy5JLikgPSBbUCB7MSArIChyLzEwMCl9biAtIFBdICAgU2ltcGxlIEludGVyZXN0IChTLkkuKSA9IChQIMOXIHIgw5cgbikvMTAwICAgUmVxdWlyZWQgZGlmZmVyZW5jZSA9IFtQIHsxICsgKHIvMTAwKX1uIC0gUF0gLSAoUCDDlyByIMOXIG4pLzEwMCAgICA9IFs1MDAwIHsxICsgKDEyLzEwMCl9MiAtIDUwMDBdIC0gKDUwMDAgw5cgMTIgw5cgMikvMTAwICAgPSA1MDAwIFsoMjgvMjUpIMOXICgyOC8yNSkgLSAxXSAtIDEyMDAgICA9IDUwMDAgWyg3ODQgLSA2MjUpLzYyNV0gLSAxMjAwID0gMTI3MiAtIDEyMDAgPSBScy4gNzIgICBUaHVzLCBkaWZmZXJlbmNlIGJldHdlZW4gc2ltcGxlIGludGVyZXN0IGFuZCB0aGUgY29tcG91bmQgaW50ZXJlc3QgZm9yIDIgeWVhcnMgd2lsbCBiZSBScy4gNzIuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 47.50 ",
        "option2" : " Rs. 63 ",
        "option3" : " Rs. 45 ",
        "option4" : " Rs. 72 "
      }
    },
    {
      "index" : 32,
      "question" : "If a% of X is equal to b% of Y, then c% of Y is what percent of X? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEl0IGlzIGdpdmVuIHRoYXQsIGElIG9mIFggaXMgZXF1YWwgdG8gYiUgb2YgWS4gICAoYSDDlyBYKS8xMDAgPSAoYiDDlyBZKS8xMDAgICBvciBhWCA9IGJZICAgb3IgWSA9IGFYL2IgICBMZXQgYyUgb2YgWSA9IGQlIG9mIFggICAgICAgICA5ICAgICAgICAgICAgICAgICAgIE9uIHB1dHRpbmcgWSA9IGFYL2IgaW4gdGhlIGFib3ZlIGVxdWF0aW9uLCB3ZSBnZXQ6ICAgKGMvMTAwKSDDlyAoYVgvYikgPSAoZC8xMDApIFggICBUaGVyZWZvcmUsIGQgID0gYWMvYiAgIFRodXMsIFkgaXMgKGFjL2IpJSBvZiBYLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " c% ",
        "option2" : " (ac/b)% ",
        "option3" : " (bc/a)% ",
        "option4" : " abc %  Directions for the following 5 (five) items:   Read the following four passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 33,
      "question" : "What is the crucial message conveyed by the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3B0aW9uIHN0YXRlcyB0aGF0IHNlcGFyYXRpbmcgdGhlIHRyYW5zcG9ydCBhbmQgdG91cmlzbSBwb2xpY3kgaXMgbm90IHN1aXRhYmxlICAgZm9yIHRoZSBzb2NpZXR5IGFuZCB0aGUgZW52aXJvbm1lbnQuIEhvd2V2ZXIsIHRoZSBtYWluIGRpc2N1c3Npb24gaW4gdGhlIHBhc3NhZ2UgaXMgbm90IGFib3V0IHNlcGFyYXRpbmcgICB0aGVzZSB0d28gcG9saWNpZXMsIGJ1dCBhYm91dCBob3cgdG8gaW50ZWdyYXRlIHRoZW0gZm9yIHJlZHVjaW5nIHBvbGx1dGlvbi4gQWxzbywgdG8gc2F5IHRoYXQgc2VwYXJhdGluZyAgIHRoZW0gd2lsbCBiZSBkZXRyaW1lbnRhbCB3aWxsIG5vdCBiZSBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gYW55dGhpbmcgcmVsYXRlZCB0byBpdC4gU28sIHRoaXMgICBpcyBub3QgdGhlIGNydWNpYWwgbWVzc2FnZSBpbiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gdGFsa3MgYWJvdXQgdGhlIGluZGlzcGVuc2FiaWxpdHkgb2YgdGhlIHRyYW5zcG9ydCBzZWN0b3IgZm9yIHRoZSB0b3VyaXNtICAgc2VjdG9yLiBIb3dldmVyLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIGFueSBpbmZvcm1hdGlvbiBvZiB0aGlzIG5hdHVyZS4gVGhlcmUgaXMgbm8gbWFuZGF0b3J5ICAgZGVwZW5kZW5jZSBvZiB0aGUgdG91cmlzbSBpbmR1c3RyeSBvbiB0aGUgdHJhbnNwb3J0IHNlY3Rvci4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCBjcnVjaWFsICAgbWVzc2FnZSBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIG1lbnRpb25zIHRoYXQgcG9vciBwdWJsaWMgdHJhbnNwb3J0IGluZnJhc3RydWN0dXJlIGlzIHRoZSBjYXVzZSBvZiAgIHBvbGx1dGlvbiBhbmQgZWNvbm9taWMgaXNzdWVzIG9mIHJ1cmFsIGluaGFiaXRhbnRzLiBIb3dldmVyLCB0aGlzIGlzIGEgbWVyZSBpbmZlcmVuY2UvYXNzdW1wdGlvbiBub3QgICBiYXNlZCBvbiBhbnkgaW5mb3JtYXRpb24gaW4gdGhlIHBhc3NhZ2UuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gb2YgcHVibGljIHRyYW5zcG9ydCBvciBlY29ub21pYyBpc3N1ZXMgICBmYWNlZCBieSBydXJhbCBmb2xrcyBpbiB0aGUgcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCBjcnVjaWFsIG1lc3NhZ2Ugb2YgdGhlIHBhc3NhZ2UuICAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gY2FwdHVyZXMgdGhlIHJlYWwgZXNzZW5jZSBvZiB0aGUgcGFzc2FnZS4gVGhlIGxpbmVzICdUcmFuc3BvcnQgcGxhbm5pbmcgICBhbmQgdG91cmlzbSBwb2xpY3kgaGF2ZSB0byBiZSBpbnRlZ3JhdGVkIHRvIGFjaGlldmUgam9pbnQgZW52aXJvbm1lbnRhbCBhbmQgc29jaWFsIG9iamVjdGl2ZXMnLCByZWZsZWN0IHRoZSAgIGNydWNpYWwgbWVzc2FnZSBjb252ZXllZCBieSB0aGUgcGFzc2FnZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Separating the transport and tourism policy  will be detrimental to the society and  environment. ",
        "option2" : " Tourism industry cannot grow without the  growth in the transport sector. ",
        "option3" : " Pollution and economic issues of rural  inhabitants exist because of poor public  transport infrastructure. ",
        "option4" : " Socio-environmental development is   dependent on the synergy between   transport and tourism policies.  "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following statements best reflects the central idea of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBpcyB0aGUgY29ycmVjdCBvcHRpb24gYmVjYXVzZSBpdCBtZW50aW9ucyB0aGUgY29yZSBpZGVhIG9mIHRoZSBwYXNzYWdlLiBUaGUgICBsaW5lcyAnVG8gZmlnaHQgcGVzdGljaWRlIHJlc2lzdGFuY2UgLi4uLCBzZXZlcmFsIHByaW5jaXBsZXMgbXVzdCBiZSBhZGhlcmVkIHRvIGZvciBkZWxheWluZyB0aGUgZW1lcmdlbmNlICAgb2YgcmVzaXN0YW5jZSBvciBhdm9pZGluZyBpdCBlbnRpcmVseS4gVGhlc2UgcHJpbmNpcGxlcyBpbmNsdWRlIHBlc3RpY2lkZSByb3RhdGlvbiBvciBzd2l0Y2hpbmcsIGF2b2lkaW5nICAgdW5uZWNlc3NhcnkgcGVzdGljaWRlIGFwcGxpY2F0aW9ucywgdXNpbmcgbm9uLWNoZW1pY2FsIGNvbnRyb2wgdGVjaG5pcXVlcywgYW5kIGxlYXZpbmcgdW50cmVhdGVkIHJlZnVnZXMgICB3aGVyZSBzdXNjZXB0aWJsZSBwZXN0cyBjYW4gc3Vydml2ZScgcHJvcGVybHkgY2FwdHVyZXMgdGhlIGVzc2VuY2Ugb2YgdGhlIGdpdmVuIG9wdGlvbi4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBvcHRpb24gc3RhdGVzIG9uZSBvZiB0aGUgcHJvYmFibGUgY29uc2VxdWVuY2VzIG9mIGxvbmctdGVybSBwZXN0aWNpZGUgICByZXNpc3RhbmNlLCBuYW1lbHkgZm9vZCBpbnNlY3VyaXR5LiBIb3dldmVyLCB0aGlzIGlzIG5vdCB0aGUgbWFpbiB0aGVtZSBvZiB0aGUgcGFzc2FnZSBhcyBmb29kIGluc2VjdXJpdHkgICBpcyBub3QgZGlzY3Vzc2VkIGluIHRoZSBwYXNzYWdlLiBTbywgdG8gc2F5IHRoYXQgdGhpcyBpcyB0aGUgY2VudHJhbCBpZGVhIGlzIG5vdCBjb3JyZWN0LiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLCBiZWNhdXNlIHRoZSBsaW5lcyAnVG8gZmlnaHQgICBwZXN0aWNpZGUgcmVzaXN0YW5jZSBhbmQgYmFzZWQgb24gYSBrbm93bGVkZ2Ugb2YgdGhlIGdlbmV0aWNzIG9mIHRoZSBkZXZlbG9wbWVudCBvZiBwZXN0aWNpZGUgcmVzaXN0YW5jZSwgICBzZXZlcmFsIHByaW5jaXBsZXMgbXVzdCBiZSBhZGhlcmVkIHRvIGZvciBkZWxheWluZyB0aGUgZW1lcmdlbmNlIG9mIHJlc2lzdGFuY2Ugb3IgYXZvaWRpbmcgaXQgZW50aXJlbHknICAgb25seSBtZW50aW9uIGFib3V0IGtub3dsZWRnZSBvZiBnZW5ldGljcyB0byBmaWdodCBwZXN0aWNpZGUgcmVzaXN0YW5jZS4gSG93ZXZlciwgaXQgd291bGQgYmUgaW5jb3JyZWN0IHRvICAgaW5mZXIgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIHRvIGRldmVsb3AgcGVzdGljaWRlcyB3aXRob3V0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlIGdlbmV0aWNzIG9mIHBlc3RzLiBUaGVyZWZvcmUsICAgdGhpcyBpcyBub3QgdGhlIGNlbnRyYWwgaWRlYSBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSBiZWNhdXNlIHRoZXJlIGlzIG5vIGRpc2N1c3Npb24gb2YgICBiaW8tcGVzdGljaWRlcyBpbiB0aGUgcGFzc2FnZS4gVGhpcyBvcHRpb24gaXMgYSBwcmFjdGljYWwgcG9saWN5IGltcGxpY2F0aW9uLCBidXQgbm90IHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlICAgcGFzc2FnZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Pesticide resistance can be avoided by  following the principles of rotation, non-  chemical control techniques etc. ",
        "option2" : " Increasing pesticide resistance could lead to  food insecurity in the long run. ",
        "option3" : " It is not possible to develop pesticides  without the knowledge of the genetics of  the pests. ",
        "option4" : " Bio-pesticides should be promoted as an  alternative to chemical pesticides to prevent  pesticide resistance.        10            "
      }
    },
    {
      "index" : 35,
      "question" : "Which of the following is/are the most rational and logical inference/ inferences that can be  made from the passage?  1. Including nanosensors in packaging will increase the cost of packaging for  companies.  2. There is limited understanding of the use of nanotechnology in the packaging industry.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gIFRoaXMgb3B0aW9uIGlzIG5vdCBjb3JyZWN0IGJlY2F1c2UgdGhlIG9wdGlvbiBtZW50aW9ucyB0aGUgY29zdCBvZiBwYWNrYWdpbmcuICAgSG93ZXZlciwgdGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBpbiB0aGUgcGFzc2FnZSBhYm91dCB0aGUgY29zdCBpbXBsaWNhdGlvbnMgb2YgbmFubyBwYWNrYWdpbmcuIFNvLCB0aGlzICAgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UgYW5kIGhlbmNlIGlzIG5vdCBhIGNvcnJlY3QgaW5mZXJlbmNlLiAgICBJbmZlcmVuY2UgMiBpcyBjb3JyZWN0LiAgVGhpcyBhc3N1bXB0aW9uIGlzIGNvcnJlY3QgYXMgY2FuIGJlIHNlZW4gaW4gdGhlIGxpbmVzICdUaGVyZSBpcyBhIG5lZWQgdG8gICB1bmRlcnRha2UgZnVydGhlciB0b3hpY29sb2dpY2FsIGFuZCBtaWdyYXRpb24gc3R1ZGllcyB0byBlbnN1cmUgc2FmZSBkZXZlbG9wbWVudCBvZiBuYW5vdGVjaG5vbG9naWVzIGluICAgdGhlIGZvb2QgcGFja2FnaW5nIGluZHVzdHJ5Jy4gSXQgc2hvd3MgdGhhdCB0aGUgY3VycmVudCB1bmRlcnN0YW5kaW5nIG9mIHRoZSBpbXBhY3Qgb2YgbmFub3RlY2hub2xvZ3kgb24gICB0aGUgcGFja2FnaW5nIGlzIGxpbWl0ZWQuIFNvIHRoZXJlIGlzIGEgbmVlZCBmb3IgZnVydGhlciBzdHVkaWVzLiBUaGVyZWZvcmUsIHRoaXMgYXNzdW1wdGlvbiBzdGF0ZW1lbnQgaXMgICBjb3JyZWN0LiAgICAgICAgIDEwICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 36,
      "question" : "According to the passage above, what are the different uses of plants? 1. Preparation of medicines 2. Consumption of food 3. Prevention of soil erosion 4. Making perfumes 5. Controlling air pollution Select the correct answer from code below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IFN0YXRlbWVudHMgMSwgMiBhbmQgNCBhcmUgY29ycmVjdC4gVGhlIGxpbmVzICdQbGFudHMgcHJvdmlkZSB0aGUgcmF3IG1hdGVyaWFsIGZvciBpbmR1c3RyaWVzIHByb2R1Y2luZyAgIHBoYXJtYWNldXRpY2FscywgY29zbWV0aWNzLCBwZXJmdW1lcywgYW5kIGZyYWdyYW5jZSBmbGF2b3VyIGltcGFydGluZyBiaW9jaGVtaWNhbC4gVGhlcmVmb3JlLCB0aGVyZSBpcyAgIGFuIHVyZ2VudCBuZWVkIGZvciBjb25zZXJ2YXRpb24sIHN1c3RhaW5hYmxlIHV0aWxpemF0aW9uLCBhbmQgbWFuYWdlbWVudCBvZiBwbGFudCBnZW5ldGljIHJlc291cmNlcyBvZiB0aGUgICByZWdpb24gdG8gbWVldCB0aGUgZ3Jvd2luZyByZXF1aXJlbWVudHMgb2YgZm9vZCwgZm9kZGVyLCBmaWJyZSwgaGVhbHRoLCB3YXRlciwgYW5kIG90aGVyIG5lZWRzJyBzaG93IHRoYXQgICBwbGFudHMgYXJlIHVzZWQgaW4gdGhlc2UgcHJvY2Vzc2VzLiBTbywgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAgIFN0YXRlbWVudHMgMyBhbmQgNSBhcmUgaW5jb3JyZWN0LiBUaGUgb3B0aW9ucyBmb3IgdGhlIHByZXZlbnRpb24gb2Ygc29pbCBlcm9zaW9uIGFuZCBhaXIgcG9sbHV0aW9uIGFyZSAgIGNvcnJlY3QgaW4gZ2VuZXJhbC4gSG93ZXZlciwgdGhleSBhcmUgbm90IGNvdmVyZWQgaW4gdGhlIHBhc3NhZ2UgYW5kIHRoZSBhbnN3ZXIgaGFzIHRvIGJlIGJhc2VkIG9uIHRoZSAgIGluZm9ybWF0aW9uIGdpdmVuIGluIHRoZSBwYXNzYWdlLiBIZW5jZSwgdGhlc2Ugc3RhdGVtZW50cyBhcmUgbm90IGNvcnJlY3QuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 only ",
        "option2" : " 1, 2, 3 and 4 only ",
        "option3" : " 1, 2, 3, 4 and 5 ",
        "option4" : " 2, 3, 4 and 5 only "
      }
    },
    {
      "index" : 37,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Developed nations are mainly dependent on chemical-based medicines. 2. Many plant genetic resources are getting extinct because of the increasing loss of biodiversity. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKSBlc3RpbWF0ZWQgdGhhdCBhYm91dCA4MCUgb2YgICB0aGUgZGV2ZWxvcGluZyBjb3VudHJ5J3MgcG9wdWxhdGlvbiBzdGlsbCByZWxpZXMgb24gdHJhZGl0aW9uYWwgbWVkaWNpbmVzLCBtb3N0bHkgcGxhbnQgZHJ1Z3MsIHRvIGhlbHAgbWVldCAgIHRoZWlyIGhlYWx0aCBjYXJlIG5lZWRzJyBtZXJlbHkgdGFsa3MgYWJvdXQgZGV2ZWxvcGluZyBjb3VudHJpZXMuIEFzc3VtaW5nIHRoYXQgZGV2ZWxvcGVkIG5hdGlvbnMgYXJlICAgbWFpbmx5IGRlcGVuZGVudCBvbiBjaGVtaWNhbC1iYXNlZCBtZWRpY2luZXMgd291bGQgbm90IGJlIGNvcnJlY3QuIFNvLCB0aGlzIGFzc3VtcHRpb24gaXMgbm90IGNvcnJlY3QuICAgQXNzdW1wdGlvbiAyIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzLCAnVGhlcmVmb3JlLCB0aGVyZSBpcyBhbiB1cmdlbnQgbmVlZCBmb3IgY29uc2VydmF0aW9uLCBzdXN0YWluYWJsZSAgIHV0aWxpemF0aW9uLCBhbmQgbWFuYWdlbWVudCBvZiBwbGFudCBnZW5ldGljIHJlc291cmNlcyBvZiB0aGUgcmVnaW9uIHRvIG1lZXQgdGhlIGdyb3dpbmcgcmVxdWlyZW1lbnRzIG9mICAgZm9vZCwgZm9kZGVyLCBmaWJyZSwgaGVhbHRoLCB3YXRlciwgYW5kIG90aGVyIG5lZWRzJyBzaG93IHRoYXQgY29uc2VydmF0aW9uIG9mIHBsYW50IGdlbmV0aWMgcmVzb3VyY2VzIGlzICAgcmVxdWlyZWQuIEhvd2V2ZXIsIHdlIGNhbm5vdCBhc3N1bWUgZnJvbSB0aGlzIHRoYXQgbWFueSBwbGFudCBnZW5ldGljIHJlc291cmNlcyBhcmUgZ2V0dGluZyBleHRpbmN0LiBTbywgICB0aGlzIGlzIGFuIGluY29ycmVjdCBhc3N1bXB0aW9uLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2        11             Direction for the following 2 (two) items   The graph below indicates the relationship between   fertilizer consumed (in kg/acre) to output (in   quintal/acre). Study the graph given below carefully   and answer the questions that follow   "
      }
    },
    {
      "index" : 38,
      "question" : "If a farmer is having 5 acres of land and only 50 kg of fertilizer, which of the following will give the best yield? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZyb20gdGhlIGdyYXBoLCB0aGUgbWF4aW11bSBwcm9kdWN0aW9uIG9jY3VycyB3aGVuIHRoZSBmYXJtZXIgYXBwbGllcyAyMCBrZyBpbiB0d28gYWNyZXMgYW5kIHRoZSAgIHJlbWFpbmluZyBpbiB0aHJlZSBhY3Jlcy4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10 kg/acre ",
        "option2" : " 20 kg in one acre and remaining 30 kg over  four acres ",
        "option3" : " 20 kg in two acres and remaining in three  acres ",
        "option4" : " All of the above will give the same yield "
      }
    },
    {
      "index" : 39,
      "question" : "What is the minimum angle that the given graph makes with the x-axis? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFRoZSBtaW5pbXVtIGFuZ2xlIG1hZGUgaXMgMMKwIHJpZ2h0IGF0IHRoZSB0b3Agb2YgdGhlIGdyYXBoLCBqdXN0IGJlZm9yZSBpdCBzdGFydHMgZmFsbGluZy4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 30° ",
        "option2" : " 45° ",
        "option3" : " 60° ",
        "option4" : " 0° "
      }
    },
    {
      "index" : 40,
      "question" : "In a class, the average score of girls in an examination is 73 and that of boys is 71. The average score of whole class is 71.8. The percentage of girls in the class is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IExldCB0aGUgbnVtYmVyIG9mIGJveXMgYW5kIGdpcmxzIGJlIHggYW5kIHksIHJlc3BlY3RpdmVseS4gICAgVGhlbiwgdGhlIHRvdGFsIHNjb3JlIG9mIGJveXMgPSA3MXggICBBbmQgdG90YWwgc2NvcmUgb2YgZ2lybHMgPSA3M3kgICBOb3csIGF2ZXJhZ2Ugc2NvcmUgPSA3MS44ICAgVGhlcmVmb3JlLCAoNzF4ICsgNzN5KS8oeCArIHkpID0gNzEuOCAgIG9yIDcxeCArIDczeSA9IDcxLjh4ICsgNzEuOHkgICAgb3IgMC44eCA9IDEuMnkgICBvciB4L3kgPSAxLjIvMC44ID0gMy8yICAgU28sIFBlcmNlbnRhZ2Ugb2YgZ2lybHMgaW4gdGhlIGNsYXNzID0gWzIvICgyICsgMyldIMOXIDEwMCA9ICgyLzUpIMOXIDEwMCA9IDQwJSAgIFRodXMsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 60% ",
        "option2" : " 40% ",
        "option3" : " 30% ",
        "option4" : " 18%  Directions for the following 4 (four) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 41,
      "question" : "Based on the passage given above, the following assumptions have been made: 1. Chemical pest control methods work better than traditional methods. 2. Like developed countries, developing countries too should adopt chemical methods to control pests. Which of the following assumptions is/are  valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBpbmRpY2F0ZXMgdGhhdCBtb2Rlcm4gbWV0aG9kcyAoY2hlbWljYWxzKSBoYXZlIHByb3ZlbiB0byBiZSBtb3JlICAgZWZmZWN0aXZlIHRoYW4gdHJhZGl0aW9uYWwgbWV0aG9kcywgaW4gdGhlc2UgbGluZXMtICdOb3csIGFsbW9zdCBhbGwgZmFybWVycywgZXNwZWNpYWxseSBpbiBkZXZlbG9wZWQgICBjb3VudHJpZXMsIHJlbHkgb24gY2hlbWljYWxzIHRvIGNvbnRyb2wgcGVzdHMnIGFuZCAnV2l0aCB0aGUgdXNlIG9mIGNoZW1pY2FscywgY3JvcCBsb3NzZXMgYW5kIHByaWNlcyBoYXZlICAgZGVjbGluZWQgZHJhbWF0aWNhbGx5Jy4gU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBjb3JyZWN0LiAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIG1lbnRpb24gb2YgZGV2ZWxvcGluZyBjb3VudHJpZXMgaW4gdGhlIHBhc3NhZ2UuIEl0IG9ubHkgdGFsa3MgICBhYm91dCBkZXZlbG9wZWQgY291bnRyaWVzIGluIHRoZSBsaW5lcywgJ05vdywgYWxtb3N0IGFsbCBmYXJtZXJzLCBlc3BlY2lhbGx5IGluIGRldmVsb3BlZCBjb3VudHJpZXMsIHJlbHkgICBvbiBjaGVtaWNhbHMgdG8gY29udHJvbCBwZXN0cycuIFNvLCB0aGUgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIFRoZXJlZm9yZSwgdGhpcyAgIGFzc3VtcHRpb24gaXMgaW5jb3JyZWN0LiAgICAgICAgIDExICAgICAgICAgICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following statements best reflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGFzIHRoZSBvcGVuaW5nIGxpbmVzIG9mIHRoZSBwYXNzYWdlICAgdGFsa3MgYWJvdXQgcmVzdG9yaW5nIG9ubHkgJ2F0IGxlYXN0JyBvbmUtdGhpcmQgb2Ygd2hhdCBoYXMgYmVlbiBsb3N0IGluIHRoZSBwYXN0IDMwIHllYXJzLiBUaGUgd29yZCAgICdjb21wbGV0ZWx5JyBtYWtlcyB0aGUgc3RhdGVtZW50IHNvdW5kIGV4dHJlbWUsIGFuZCBoZW5jZSBkb2VzIG5vdCByZWZsZWN0IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gcHJlc2VudHMgYSBjb21wYXJpc29uIGJldHdlZW4gbWFuLW1hZGUgYW5kIG5hdHVyYWwgc29sdXRpb25zIGZvciAgIGNsaW1hdGUgZW1lcmdlbmNpZXMuIEhvd2V2ZXIsIHRoZSBwYXNzYWdlIGRvZXMgbm90IGNvbXBhcmUgdGhlc2UgdHdvLiBBbHNvLCB0aGVyZSBpcyBubyBtZW50aW9uIG9mIHRoZSAgIGJldHRlciBtZXRob2Q7IHRlY2hub2xvZ3kgb3Igd2lsZCBuYXR1cmUuIFNvLCB0aGlzIGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGMpIGlzIGNvcnJlY3QuIFRoaXMgb3B0aW9uIGJlc3QgY2FwdHVyZXMgdGhlIGVzc2VuY2UgYmVjYXVzZSBpdCBjb3ZlcnMgYm90aCBhc3BlY3RzLCBtYW4tbWFkZSBhcyAgIHdlbGwgYXMgbmF0dXJhbCwgYXMgaW5kaWNhdGVkIGluIHRoZSBsaW5lcyAnVW5saWtlIHRlY2hub2xvZ2ljYWwgYW5kIGVuZ2luZWVyZWQgc29sdXRpb25zIHRoYXQgYXJlICAgZXhwZW5zaXZlIGFuZCBtdXN0IGJlIHNjYWxlZC11cCB0byBiZSBlZmZlY3RpdmUsIHdpbGQgbmF0dXJlIGlzIGFscmVhZHkgaW4gcGxhY2UgYW5kIHdvcmtpbmcgZm9yIGZyZWUgKGFzIGl0ICAgaGFzIGRvbmUgZm9yIDUwMCBtaWxsaW9uIHllYXJzKSB0byBwcm9kdWNlIGV2ZXJ5dGhpbmcgbGlmZSBuZWVkcyBtb3N0IHRvIHN1cnZpdmUnIC0gaXQgaW1wbGllcyB0aGF0IGh1bWFucyAgIChieSBzY2FsaW5nIHVwIHRlY2hub2xvZ2llcykgc2hvdWxkIHdvcmsgaW4gdGFuZGVtIHdpdGggbmF0dXJlIGZvciBtaXRpZ2F0aW5nIGNsaW1hdGUgZW1lcmdlbmN5LiBTbywgdGhpcyAgIG9wdGlvbiBpcyB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBvbiB0aGUgYXNwZWN0IG9mIHRoZSByb2xlIG9mIGdvdmVybm1lbnRzIGluIHNjYWxpbmcgdXAgICB0ZWNobm9sb2dpZXMuIFRoaXMgb3B0aW9uIGNvdWxkIGJlIGEgZmFpciBzdWdnZXN0aW9uIGJ1dCBub3QgdGhlIGNydXguICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Humans must align their activities with  nature to completely regain the lost  biodiversity. ",
        "option2" : " Man-made solutions for climate change are  more effective than natural solutions. ",
        "option3" : " Climate emergency needs human and  nature's intervention for stabilizing it. ",
        "option4" : " Governments across the globe should  invest in scaling up technologies to handle  climate emergencies. "
      }
    },
    {
      "index" : 43,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Students should be provided with frequent physical activity breaks that are developmentally appropriate. 2. Students respond better to a variety of cognitive tasks after participating in a session of physical activity. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAiV2hlbiBwaHlzaWNhbCBhY3Rpdml0eSBpcyB1c2VkIGFzIGEgYnJlYWsgZnJvbSAgIGFjYWRlbWljIGxlYXJuaW5nIHRpbWUsIHBvc3QgZW5nYWdlbWVudCBlZmZlY3RzIGluY2x1ZGUgYmV0dGVyIGF0dGVudGlvbiwgaW5jcmVhc2VkIG9uLXRhc2sgYmVoYXZpb3VycywgICBhbmQgaW1wcm92ZWQgYWNhZGVtaWMgcGVyZm9ybWFuY2UuIiBUaGUgY2xvc2luZyBsaW5lcywgJ0Z1cnRoZXIsIGFmdGVyLXNjaG9vbCBwaHlzaWNhbCBhY3Rpdml0eSAgIHByb2dyYW1zLi4uLi4uLiBzaG93biB0byBtZWRpYXRlIGltcHJvdmVtZW50cyBpbiBhY2FkZW1pYyBwZXJmb3JtYW5jZSwgYXMgd2VsbCBhcyB0aGUgYWxsb2NhdGlvbiBvZiAgIG5ldXJhbCByZXNvdXJjZXMgdW5kZXJseWluZyBwZXJmb3JtYW5jZSBvbiBhIHdvcmtpbmcgbWVtb3J5IHRhc2snIGFsc28gcmVpbmZvcmNlIHRoZSBhdXRob3IncyBzdGFuZC4gICBUaHVzLCB0aGUgYXV0aG9yIGFzc3VtZXMgdGhhdCBmcmVxdWVudCBwaHlzaWNhbCBhY3Rpdml0eSBicmVha3MgaGVscCBpbiBhY2FkZW1pYyBwZXJmb3JtYW5jZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgY2xlYXJseSBtZW50aW9uIHRoYXQgcG9zdCBlbmdhZ2VtZW50IChlbmdhZ2VtZW50IGluIGEgICBwaHlzaWNhbCBhY3Rpdml0eSkgZWZmZWN0cyBpbmNsdWRlIGJldHRlciBhdHRlbnRpb24sIGluY3JlYXNlZCBvbi10YXNrIGJlaGF2aW91cnMsIGFuZCBpbXByb3ZlZCBhY2FkZW1pYyAgIHBlcmZvcm1hbmNlLiBIZW5jZSB0aGUgYXNzdW1wdGlvbiBnaXZlbiBpbiB0aGlzIHN0YXRlbWVudCBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 44,
      "question" : "Physical activity is important in a child's daily life because ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhlIG1vbm90b25pY2l0eSBvZiB0aGUgc3R1ZGVudCdzIGxpZmUuIEl0IGlzIGJleW9uZCAgIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGRvZXNuJ3QgbWVudGlvbiB0aGUgYmVuZWZpdHMgb2YgcGh5c2ljYWwgYWN0aXZpdHkgY29uY2VybmluZyBwaHlzaWNhbCAgIGRldmVsb3BtZW50LiBJdCBpcyBjZW50cmVkIG9uIHRoZSBjb2duaXRpdmUgYmVuZWZpdHMgb2YgcGh5c2ljYWwgYWN0aXZpdHkuICAgIE9wdGlvbiAoYykgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdXaGVuIHBoeXNpY2FsIGFjdGl2aXR5IGlzIHVzZWQgYXMgYSBicmVhayBmcm9tIGFjYWRlbWljICAgbGVhcm5pbmcgdGltZSwgcG9zdCBlbmdhZ2VtZW50IGVmZmVjdHMgaW5jbHVkZSBiZXR0ZXIgYXR0ZW50aW9uLCBpbmNyZWFzZWQgb24tdGFzayBiZWhhdmlvdXJzLCBhbmQgICBpbXByb3ZlZCBhY2FkZW1pYyBwZXJmb3JtYW5jZS4iIFRodXMsIHBoeXNpY2FsIGFjdGl2aXR5IGltcHJvdmVzIGF0dGVudGlvbiBhbmQgYXMgd2VsbCBhcyB0aGUgYWxsb2NhdGlvbiAgIG9mIG5ldXJhbCByZXNvdXJjZXMgdW5kZXJseWluZyBwZXJmb3JtYW5jZSBvbiBhIHdvcmtpbmcgbWVtb3J5IHRhc2suICAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhlIHJlbGF0aW9uIGJldHdlZW4gcGh5c2ljYWwgYWN0aXZpdHkgYW5kIHNvY2lhbCAgIHNraWxscyBhbmQgaXMgdGh1cyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It helps in breaking the monotonous pattern  of life. ",
        "option2" : " Otherwise, there will be a lack of physical  development in the child. ",
        "option3" : " It improves cognitive functions related to  attention and memory to facilitate learning. ",
        "option4" : " Consistent engagement in physical activity  can help students refine social skills. "
      }
    },
    {
      "index" : 45,
      "question" : "A report consists of 20 sheets, each having 55 lines and each such line consists of 65 characters. This report is retyped into sheets having 65 lines, such that each line consists of 70 characters. The percentage reduction in number of sheets is close to: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IE51bWJlciBvZiBjaGFyYWN0ZXJzIGluIG9uZSBsaW5lID0gNjUgICAgTnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gb25lIHNoZWV0ID0gTnVtYmVyIG9mIGxpbmVzIMOXIE51bWJlciBvZiBjaGFyYWN0ZXJzIHBlciBsaW5lID0gNTUgw5cgNjUgICBUb3RhbCBudW1iZXIgb2YgY2hhcmFjdGVycyBpbiB0aGUgcmVwb3J0ID0gTnVtYmVyIG9mIHNoZWV0cyDDlyBOdW1iZXIgb2YgY2hhcmFjdGVycyBpbiBvbmUgc2hlZXQgPSAyMCDDlyAgIDU1IMOXIDY1ID0gNzE1MDAgICAgSWYgdGhlIHJlcG9ydCBpcyByZXR5cGVkLCB0aGVuIG5ldyBzaGVldHMgaGF2ZSA2NSBsaW5lcywgd2l0aCA3MCBjaGFyYWN0ZXJzIHBlciBsaW5lLiAgICBOdW1iZXIgb2YgY2hhcmFjdGVycyBpbiBvbmUgc2hlZXQgPSA2NSDDlyA3MCAgICBOdW1iZXIgb2Ygc2hlZXRzIHJlcXVpcmVkID0gKFRvdGFsIG51bWJlciBvZiBjaGFyYWN0ZXJzKS8oTnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gb25lIHNoZWV0IGlmIHJldHlwZWQpICAgPSA3MTUwMC8oNjUgw5cgNzApID0gMTUuNzEgICBIZW5jZSwgMTYgc2hlZXRzIHdpbGwgYmUgcmVxdWlyZWQgaWYgcmVwb3J0IGlzIHJldHlwZWQuICAgUmVkdWN0aW9uIGluIG51bWJlciBvZiBzaGVldHMgPSAoMjAgLSAxNikgPSA0ICAgIFBlcmNlbnRhZ2UgcmVkdWN0aW9uID0gKDQvMjApIMOXIDEwMCA9IDIwJSAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAgICAgICAgMTIgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 20% ",
        "option2" : " 5% ",
        "option3" : " 30% ",
        "option4" : " 35%        13            "
      }
    },
    {
      "index" : 46,
      "question" : "A person who has a certain amount with him goes to a market. He can buy 50 oranges or 40 mangoes with the amount he has. However, he retains 10% of the amount for taxi fares, buys 20 mangoes, and purchases oranges with the remaining amount. Number of oranges he purchased is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFRoZSBwZXJzb24gY2FuIGJ1eSA1MCBvcmFuZ2VzIG9yIDQwIG1hbmdvZXMuICAgIExldCB0aGUgcHJpY2Ugb2Ygb25lIG9yYW5nZSBiZSBScy4geC4gICAgVG90YWwgYW1vdW50IHRoZSBwZXJzb24gaGFzID0gNTAgw5cgeCA9IFJzLiA1MHggICBDb3N0IG9mIDQwIG1hbmdvZXMgPSA1MHggICBTbywgY29zdCBvZiBvbmUgbWFuZ28gPSA1MHgvNDAgPSBScy4gMS4yNXggICBBbW91bnQgcmV0YWluZWQgZm9yIHRheGkgZmFyZSA9IDEwJSBvZiA1MHggPSBScy4gNXggICAyMCBtYW5nb2VzIGJvdWdodCBmb3IgMjAgw5cgMS4yNXggPSBScy4gMjV4ICAgIE1vbmV5IGxlZnQgd2l0aCB0aGUgcGVyc29uID0gNTAgeCAtIChUYXhpIGZhcmUpIC0gKENvc3Qgb2YgMjAgTWFuZ29lcykgPSA1MHggLSA1eCAtIDI1eCA9IFJzLiAyMHggICBPbmUgb3JhbmdlIGNvc3RzIFJzLiB4LiBUaGVyZWZvcmUsIDIwIG9yYW5nZXMgY2FuIGJlIGJvdWdodCB3aXRoIFJzLiAyMHguICAgIFRodXMsIHRoZSBwZXJzb24gcHVyY2hhc2VkIDIwIG9yYW5nZXMuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 36 ",
        "option2" : " 40 ",
        "option3" : " 15 ",
        "option4" : " 20 "
      }
    },
    {
      "index" : 47,
      "question" : "Forty per cent of the employees of a certain company are men, and 75% of the men earn more than Rs. 425,000 per year. If 45% of the company's employees earn more than Rs. 425,000 per year, what fraction of the women employed by the company earn Rs. 425,000 or less per year? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IExldCB0aGUgdG90YWwgbnVtYmVyIG9mIGVtcGxveWVlcyBpbiB0aGUgY29tcGFueSBiZSB4LiBUaGVuIHRoZSBudW1iZXIgb2YgbWVuIGFuZCB3b21lbiB3aWxsIGJlIDAuNHggICBhbmQgMC42eCByZXNwZWN0aXZlbHkuICAgIDc1JSBvZiBtZW4gZWFybiBtb3JlIHRoYW4gUnMuIDQyNSwwMDAuICAgIE51bWJlciBvZiBtZW4gZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSAwLjc1IHggMC40eCA9IDAuMzB4ICAgIFRvdGFsIG51bWJlciBvZiBlbXBsb3llZXMgZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSA0NSUgb2YgeCA9IDAuNDV4ICAgIFNvLCBOdW1iZXIgb2Ygd29tZW4gZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSBUb3RhbCBlbXBsb3llZXMgZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgICAtIFRvdGFsIG51bWJlciBvZiBtZW4gZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSAwLjQ1eCAtIDAuMzB4ID0gMC4xNXggIE51bWJlciBvZiB0aGUgd29tZW4gZWFybmluZyBScy4gNDI1LDAwMCBvciBsZXNzID0gVG90YWwgbnVtYmVyIG9mIHdvbWVuIGVtcGxveWVlcyAtIE51bWJlciBvZiAgd29tZW4gZW1wbG95ZWUgZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSAwLjYweCAtIDAuMTV4ID0gMC40NXggIEZyYWN0aW9uIG9mIHRoZSB3b21lbiBlbXBsb3llZCBieSB0aGUgY29tcGFueSB3aG8gZWFybiBScy4gNDI1LDAwMCBvciBsZXNzID0gKDAuNDV4LzAuNjB4KSA9IDQ1LzYwID0gIDMvNCAgQWx0ZXJuYXRlIE1ldGhvZDogICAgRm9ydHkgcGVyIGNlbnQgb2YgdGhlIGVtcGxveWVlcyBvZiBhIGNlcnRhaW4gY29tcGFueSBhcmUgbWVuLiAgICBMZXQgdGhlcmUgYmUgNDAgbWVuIGFuZCA2MCB3b21lbiBpbiB0aGUgY29tcGFueS4gICAgTm93IG91dCBvZiA0MCBtZW4sIDc1JSBpLmUuMzAgbWVuIGVhcm4gbW9yZSB0aGFuIFJzIDQyNSwwMDAuICAgQWxzbywgNDUlIG9mIHRoZSB0b3RhbCBlbXBsb3llZXMsIGkuZS4gNDUgZW1wbG95ZWVzIGVhcm4gbW9yZSB0aGFuIFJzLiA0MjUsMDAwLiAgIEhlbmNlLCB0aGVyZSBhcmUgNDUgLSAzMCA9IDE1IHdvbWVuIHdobyBlYXJuIG1vcmUgdGhhbiBScy4gNDI1LDAwMC4gICAgU28sIDYwIC0gMTUgPSA0NSB3b21lbiBlYXJuIGxlc3MgdGhhbiBScy4gNDI1LDAwMC4gICAgSGVuY2UsIHRoZSByZXF1aXJlZCBmcmFjdGlvbiA9IDQ1LzYwID0gMy80ICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2/11 ",
        "option2" : " 1/4 ",
        "option3" : " 1/3 ",
        "option4" : " 3/4 "
      }
    },
    {
      "index" : 48,
      "question" : "Three friends Ashwini, Bhavna and Charulata divide Rs. 1105 among them in such a way that if Rs. 10, Rs. 20, and Rs. 15 are removed from the sums that Ashwini, Bhavna, and Charulata received respectively, then the share of the sums that they got will be in the ratio 11:18:24. How much did Charulata receive originally? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IExldCB0aGUgYW1vdW50IG9mIG1vbmV5IHJlY2VpdmVkIGJ5IEFzaHdpbmksIEJoYXZuYSBhbmQgQ2hhcnVsYXRhIGJlIEEsIEIgYW5kIEMgcmVzcGVjdGl2ZWx5LiAgIFN1bSBvZiBtb25leSB3aXRoIHRoZSB0aHJlZSBvZiB0aGVtLCBBICsgQiArIEMgPSAxMTA1ICAgQWZ0ZXIgcmVtb3ZpbmcgUnMuIDEwLCBScy4gMjAgYW5kIFJzLiAxNSBmcm9tIEEsIEIgYW5kIEMgcmVzcGVjdGl2ZWx5IHRoZSBzdW0gb2YgbW9uZXkgdGhleSBoYXZlIHdpbGwgICBiZSAoQSAtIDEwKSwgKEIgLSAyMCkgYW5kIChDIC0gMTUpLiAgIEl0J3MgZ2l2ZW4gdGhhdCwgKEEgLSAxMCkgOiAoQiAtIDIwKSA6IChDIC0gMTUpID0gMTEgOiAxOCA6IDI0ICAgTGV0IEEg4oiSIDEwID0gMTFrLCBCIOKIkiAyMCA9IDE4ayBhbmQgQyDiiJIgMTUgPSAyNGsgICBBZGRpbmcgdGhlIG1vbmV5IGxlZnQgd2l0aCB0aGUgdGhyZWUgb2YgdGhlbSBhZnRlciByZW1vdmluZyBScy4gMTAsIFJzLiAyMCBhbmQgUnMuIDE1IHJlc3BlY3RpdmVseSwgd2UgICBnZXQ6ICAgQSAtIDEwICsgQiAtIDIwICsgQyAtIDE1ID0gMTFrICsgMThrICsgMjRrICAgb3IgQSArIEIgKyBDIC0gMTAgLSAyMCAtIDE1ID0gNTNrICAgb3IgQSArIEIgKyBDIC0gNDUgPSA1M2sgICBGcm9tIHRoZSBxdWVzdGlvbiwgd2Uga25vdyB0aGF0IEEgKyBCICsgQyA9IDExMDUgICBTbywgMTEwNSAtIDQ1ID0gNTNrICAgb3IgMTA2MCA9IDUzayAgIG9yIGsgPSAxMDYwLzUzID0gMjAgICAgICAgICAxMyAgICAgICAgICAgICAgICAgICBTdWJzdGl0dXRpbmcgdmFsdWUgb2YgayBpbiB0aGUgZXF1YXRpb24sIEMgLSAxNSA9IDI0aywgICBDIOKIkiAxNSA9IDI0IMOXIDIwID0gNDgwICAgb3IgQyA9IDQ4MCArIDE1ID0gUnMuIDQ5NSAgIFRodXMsIENoYXJ1bGF0YSByZWNlaXZlZCBScy4gNDk1LiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 495 ",
        "option2" : " Rs. 510 ",
        "option3" : " Rs. 480 ",
        "option4" : " Rs. 375 "
      }
    },
    {
      "index" : 49,
      "question" : "A house costs Rs. C. Later it was sold for a profit of 25%. What is the capital gains tax if it is 50% of the profit made? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IENvc3QgcHJpY2Ugb2YgdGhlIGhvdXNlID0gUnMuIEMgICBQcm9maXQgPSAyNSUgb2YgQyA9IFJzLiBDLzQgICBDYXBpdGFscyBnYWlucyB0YXggPSA1MCUgb2YgQy80ID0gUnMuIEMvOCAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. C/24 ",
        "option2" : " Rs. C/8 ",
        "option3" : " Rs. C/4 ",
        "option4" : " Rs. C/2 "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements: If a sum of money is lent at simple interest, then the I. Money gets doubled in 5 years if the rate of interest is 16.67%. II. Money gets doubled in 5 years if the rate of interest is 20%. III. An amount of money becomes four times in 10 years, if the same amount of money gets doubled in 5 years. Which of the above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEZyb20gU3RhdGVtZW50IEk6ICAgTGV0IHRoZSBzdW0gYmUgUnMuIHguICAgVGltZSA9IDUgeWVhcnMsIFJhdGUgPSAxNi42NyUgPSAoNTAvMyklICAgU2ltcGxlIEludGVyZXN0ID0gW3ggw5cgKDUwLzMpIMOXIDVdLzEwMCA9IDV4LzYgICBBbW91bnQgPSB4ICsgNXgvNiA9IDExeC82ICAgICAgVGh1cywgbW9uZXkgZG9lcyBub3QgZ2V0IGRvdWJsZWQgaW4gNSB5ZWFycyBpZiB0aGUgcmF0ZSBvZiBpbnRlcmVzdCBpcyAxNi42NyUuICAgICBIZW5jZSwgU3RhdGVtZW50IEkgaXMgbm90IGNvcnJlY3QuICAgRnJvbSBTdGF0ZW1lbnQgSUk6ICAgTGV0IHRoZSBzdW0gYmUgUnMuIHguICAgVGltZSA9IDUgeWVhcnMsIFJhdGUgPSAyMCUgICBTaW1wbGUgSW50ZXJlc3QgPSBbeCDDlyAyMMOXIDVdLzEwMCA9IHggICBBbW91bnQgPSB4ICsgeCA9IDJ4ICAgICAgVGh1cywgbW9uZXkgZ2V0cyBkb3VibGVkIGluIDUgeWVhcnMgaWYgdGhlIHJhdGUgb2YgaW50ZXJlc3QgaXMgMjAlLiAgICAgIEhlbmNlLCBTdGF0ZW1lbnQgSUkgaXMgY29ycmVjdC4gICBGcm9tIFN0YXRlbWVudCBJSUk6ICAgTW9uZXkgZ2V0cyBkb3VibGVkIGluIDUgeWVhcnMuICAgIExldCB0aGUgc3VtIGJlIFJzLiB4LiAgIEFtb3VudCA9IDJ4LCBUaW1lID0gNSB5ZWFycyAgIFNpbXBsZSBJbnRlcmVzdCA9IEFtb3VudCAtIFByaW5jaXBhbCA9IDJ4IC0geCA9IHggICBSYXRlID0gW1NpbXBsZSBJbnRlcmVzdCDDlyAxMDBdL1tQcmluY2lwYWwgw5cgVGltZV0gPSAoeCDDlyAxMDApLyh4IMOXIDUpID0gMjAlICAgTm93LCBQcmluY2lwYWwgPSB4LCBSYXRlID0gMjAlLCBUaW1lID0gMTAgeWVhcnMgICAgICAgIFNpbXBsZSBJbnRlcmVzdCA9IFt4IMOXIDIwIMOXIDEwXS8xMDAgPSAyeCAgIEFtb3VudCA9IHggKyAyeCA9IDN4ICAgICAgIFRodXMsIG1vbmV5IGRvZXMgbm90IGJlY29tZSA0IHRpbWVzLiAgICAgICAgSGVuY2UsIFN0YXRlbWVudCBJSUkgaXMgbm90IGNvcnJlY3QuICAgVGh1cywgT25seSBTdGF0ZW1lbnQgSUkgaXMgY29ycmVjdC4gICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only I and III are correct ",
        "option2" : " Only II is correct ",
        "option3" : " Only III is correct ",
        "option4" : " Only II and III are correct.  Directions for the following 4 (four) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following is the most rational inference(s) one can draw from the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdTdWljaWRlcyB3aGljaCBoYXBwZW4gZHVlIHRvIGNvZXJjaW9uIGFuZCB0aHJlYXQgb2YgICB2aW9sZW5jZSBhcmUgbm90IHRydWx5IHN1aWNpZGVzLCB0aGV5IGFyZSBtdXJkZXJzIGNvbW1pdHRlZCBieSBhbGwgb2YgdXMuJyBJdCBpbXBsaWVzIHRoYXQgaW4gbWFueSBjYXNlcyBhbGwgICBvZiB1cywgaS5lLiBzb2NpZXR5IHByb3Zva2VzIHNvbWVvbmUgdG8gc3VjaCBhbiBleHRlbnQgdGhhdCB0aGUgcGVyc29uIGNvbW1pdHMgc3VpY2lkZS4gTm90IGV2ZXJ5IHN1aWNpZGUgICBpcyBwcm92b2tlZCBieSBzb2NpZXR5LCBidXQgdGhvc2UgaW52b2x2aW5nIGNvZXJjaW9uIGFuZCB0aHJlYXQgb2YgdmlvbGVuY2UgYXJlIHByb3Zva2VkIGJ5IHNvY2lldHkuICAgVGhlcmVmb3JlLCB0aGlzIGlzIHRoZSBjb3JyZWN0IG9wdGlvbi4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGF0IHNvY2lldHkgaXMgdGhlIG9ubHkgcmVhc29uIGJlaGluZCBzdWljaWRlcy4gU28gICB0aGlzIGlzIGFuIGluY29ycmVjdCBzdGF0ZW1lbnQuICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgdGhhdCBzb2NpZXR5IHByb21vdGVzIHN1aWNpZGUgaW4gb3JkZXIgdG8gbWFpbnRhaW4gICBpdHMgc3VwcmVtYWN5IG92ZXIgaW5kaXZpZHVhbHMuIFRoaXMgaXMgZW50aXJlbHkgYmV5b25kIHRoZSBzY29wZSBvZiB0aGlzIHBhc3NhZ2UuIFNvIHRoaXMgaXMgYW4gaW5jb3JyZWN0ICAgc3RhdGVtZW50LiAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBpbmNvcnJlY3QgYmVjYXVzZSBvcHRpb25zIChiKSBhbmQgKGMpIGFyZSBhbHJlYWR5IGluY29ycmVjdCBhcyAgIGV4cGxhaW5lZCBhYm92ZS4gICAgICAgICAgMTQgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Society, in many cases, provokes one to  commit suicide. ",
        "option2" : " Society is solely responsible for suicide. ",
        "option3" : " Society promotes suicide in order to  maintain its supremacy over individuals. ",
        "option4" : " All of the above "
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following acts represents us as insensitive human beings according to the passage? 1. Raising voice at every act of injustice. 2. Loving the talk of death. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IFN0YXRlbWVudCAxIGRvZXMgbm90IGRpc3BsYXkgaW5zZW5zaXRpdml0eS4gSXQgaXMgaW4gZmFjdCBhIGRpc3BsYXkgb2Ygc2Vuc2l0aXZpdHkgd2hlbiBwZW9wbGUgcmFpc2Ugdm9pY2UgICB3aGVuZXZlciB0aGVyZSBpcyBhbiBhY3Qgb2YgaW5qdXN0aWNlLiAgIFN0YXRlbWVudCAyIGRpc3BsYXlzIGluc2Vuc2l0aXZpdHkuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnV2UgbG92ZSB0aGUgdGFsayBvZiBkZWF0aCBhcyBhIG1lYW5zIG9mICAgcmV0cmlidXRpb24uJyBJdCBpbXBsaWVzIHdlIGVuam95IHRoZSBzdWljaWRlcyBhcyBhIG1lYW5zIG9mIHJldHJpYnV0aW9uIGluc3RlYWQgb2Ygc2hvd2luZyBlbXBhdGhldGljICAgYmVoYXZpb3VyIGFuZCBzZW5zaXRpdml0eSB0byB0aGUgdmljdGltcy4gU28gdGhpcyBpcyB0aGUgbW9zdCBpbnNlbnNpdGl2ZSBhY3Qgb2YgdXMgYWNjb3JkaW5nIHRvIHRoZSBwYXNzYWdlLiAgIFNvIHRoaXMgaXMgdGhlIGNvcnJlY3Qgb3B0aW9uLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 53,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. There is a visible impact of adult behaviour on the brain of children. 2. Imparting positive values in children through socialization is not the sole responsibility of the family. Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBnaXZlbiBvcHRpb24gaXMgY29ycmVjdCBhcyBpdCBpcyBiYXNlZCBvbiB0aGUgbGluZXMgJ0J1dCBpbXBvcnRhbnRseSwgdGhpcyAgIGFzc29jaWF0aW9uIHdhcyB0cnVlIG9ubHkgd2hlbiB0aGUgYWR1bHRzIGluIHRob3NlIG5laWdoYm91cmhvb2RzIGFsc28gZGlkIG5vdCBoYXZlIHN0cm9uZyBzaGFyZWQgICBub3JtcyBhYm91dCBwcmV2ZW50aW5nIGNyaW1lIGFuZCB2aW9sZW5jZScuIFRoaXMgc2hvd3MgdGhhdCBpbmNyZWFzZSBpbiBjaGlsZHJlbidzIGJyYWluIGFjdGl2aXR5IGluICAgcmVzcG9uc2UgdG8gdmlld2luZyBlbW90aW9uYWwgZmFjZXMgb24gc2NyZWVuIG9jY3VycyBvbmx5IHdoZW4gYWR1bHRzIGluIHRoZSBuZWlnaGJvdXJob29kIGFsc28gaGFkICAgd2VhayBhdHRpdHVkZXMgdG93YXJkcyBwcmV2ZW50aW5nIHZpb2xlbmNlLiBUaGlzIHNob3dzIGEgY29ycmVsYXRpb24gYmV0d2VlbiBhZHVsdCBiZWhhdmlvciBhbmQgICBjaGlsZHJlbidzIGJyYWluIGFjdGl2aXR5LiBIZW5jZSwgdGhpcyBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gICAgSW5mZXJlbmNlIDIgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdCdXQgbmVpZ2hib3VycyBtYXkgaGVscCBwcm90ZWN0IGNoaWxkcmVuIGZyb20gdGhlc2UgZWZmZWN0cyBvbiB0aGUgICBicmFpbiB3aGVuIHRoZXkgY2FuIGJ1aWxkIHBvc2l0aXZlIHNvY2lhbCBub3JtcyBhYm91dCBsb29raW5nIG91dCBmb3Igb25lIGFub3RoZXIgYW5kIHByZXZlbnRpbmcgICB2aW9sZW5jZScsIHNob3cgdGhhdCBuZWlnaGJvdXIgYWxzbyBwbGF5cyBhIGNyaXRpY2FsIHJvbGUgaW4gdGhlIHNvY2lhbGl6YXRpb24gb2YgY2hpbGRyZW4gYmVzaWRlcyBmYW1pbHkuICAgVGhleSB0b28gY291bGQgaGVscCBpbiBidWlsZGluZyBwb3NpdGl2ZSB2YWx1ZXMgaW4gY2hpbGRyZW4uIFNvLCB0aGlzIGluZmVyZW5jZSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following statements best implies the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gYmVzdCBjYXB0dXJlcyB0aGUgZXNzZW5jZS4gVGhlIGxpbmVzICdDaGlsZHJlbiBncm93aW5nIHVwIGluIG1vcmUgICBkaXNhZHZhbnRhZ2VkIG5laWdoYm91cmhvb2RzIC0gbWVhbmluZyB0aG9zZSB3aXRoIHBvb3IgaG91c2luZyBxdWFsaXR5LCBtb3JlIHBvdmVydHkgYW5kIGxvd2VyICAgbGV2ZWxzIG9mIGVtcGxveW1lbnQgYW5kIGVkdWNhdGlvbiAtIHNob3cgb2JzZXJ2YWJsZSBpbmNyZWFzZXMgaW4gYnJhaW4gYWN0aXZpdHkgd2hlbiB2aWV3aW5nICAgZW1vdGlvbmFsIGZhY2VzIG9uIGEgc2NyZWVuLiBCdXQgaW1wb3J0YW50bHksIHRoaXMgYXNzb2NpYXRpb24gd2FzIHRydWUgb25seSB3aGVuIHRoZSBhZHVsdHMgaW4gdGhvc2UgICBuZWlnaGJvdXJob29kcyBhbHNvIGRpZCBub3QgaGF2ZSBzdHJvbmcgc2hhcmVkIG5vcm1zIGFib3V0IHByZXZlbnRpbmcgY3JpbWUgYW5kIHZpb2xlbmNlJy4gQWxsIHRoZXNlICAgbGluZXMgc2hvdyB0aGF0IG5laWdoYm91cmhvb2QgYW5kIHRoZWlyIHNlbnNlIG9mIHNoYXJlZCB2YWx1ZXMgY2FuIGltcGFjdCB0aGUgYnJhaW4gZGV2ZWxvcG1lbnQgb2YgdGhlICAgY2hpbGQuIFNvLCB0aGlzIGlzIHRoZSBiZXN0IGNydXggb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIHNlZW1zIHRvIGJlIGNvcnJlY3QuIEhvd2V2ZXIsIHRoaXMgaXMgbm90IGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBpbiAgIHRoZSBwYXNzYWdlLiBBcyBwZXIgdGhlIHBhc3NhZ2UsIHBvdmVydHkgaW4gdGhlIG5laWdoYm91cmhvb2QgbmVnYXRpdmVseSBpbXBhY3RzIGNoaWxkcmVuIG9ubHkgd2hlbiB0aGUgICBhZHVsdHMgYXJlIGFsc28gaW5jbGluZWQgdG8gY29tbWl0IGNyaW1lIGFuZCB2aW9sZW5jZS4gU28sIHRoaXMgb3B0aW9uIGlzIG5vdCB0aGUgY3J1eC4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gIFRoaXMgb3B0aW9uIGluIGdlbmVyYWwgc2VlbXMgdG8gYmUgY29ycmVjdCBidXQgdGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBpbiB0aGUgICBwYXNzYWdlIGFib3V0IGhvdyBlZHVjYXRpb24gY2FuIGJlIGEgdG9vbCBmb3IgaW1wYXJ0aW5nIHBvc2l0aXZlIHZhbHVlcyB0byBjaGlsZHJlbi4gVGhlIHBhc3NhZ2UgaXMgYWJvdXQgICB0aGUgaW1wb3J0YW5jZSBvZiBuZWlnaGJvdXJob29kIGFuZCBpdHMgaW1wYWN0IG9uIHRoZSBicmFpbiBkZXZlbG9wbWVudCBvZiB0aGUgY2hpbGQuICBTbywgdGhpcyBvcHRpb24gaXMgICBub3QgY29ycmVjdC4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSBhcyBpdCBkb2VzIG5vdCBkZWx2ZSBpbnRvICAgc3VnZ2VzdGluZyBwb2xpY3kgbWVhc3VyZXMgZm9yIGNoaWxkcmVuIGxpdmluZyBpbiBkaXNhZHZhbnRhZ2VkIG5laWdoYm91cmhvb2RzLiBTbywgdGhpcyBvcHRpb24gaXMgbm90IHRoZSAgIGNydXguICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " There's an impact of the neighbourhood  and its values on the brain development of  the child. ",
        "option2" : " Poverty in the neighbourhood results in  children committing crimes and violence. ",
        "option3" : " Education is the best tool for children for  imparting strong shared norms. ",
        "option4" : " There is a need for a child policy which  deals with the development of children in  disadvantaged neighbourhoods. "
      }
    },
    {
      "index" : 55,
      "question" : "In a class, 40% of the boys is same as half of the girls, and there are 20 girls in total. Total number of students in the class is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IDQwJSBvZiB0aGUgYm95cyBpcyBzYW1lIGFzIGhhbGYgb2YgdGhlIGdpcmxzLCBhbmQgdGhlcmUgYXJlIDIwIGdpcmxzLiAgIFNvLCA0MCUgb2YgYm95cyA9IDIwLzIgPSAxMCAgIFRoZXJlZm9yZSwgMTAwJSBvZiBib3lzID0gKDEwLzQwJSkgw5cgMTAwJSA9IDI1ICAgVGhlcmVmb3JlLCB0b3RhbCBudW1iZXIgb2YgYm95cyA9IDI1ICAgVGh1cywgdG90YWwgbnVtYmVyIG9mIHN0dWRlbnRzID0gMjUgKyAyMCA9IDQ1ICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 70 ",
        "option2" : " 45 ",
        "option3" : " 35 ",
        "option4" : " 25        15            "
      }
    },
    {
      "index" : 56,
      "question" : "A country follows a progressive taxation system under which the monthly income tax rates applicable vary for different slabs of income. Total tax is computed by calculating the tax for each slab and adding them up. The rates applicable are as follows: Monthly Income Tax Rate  0 to 50,000 0%  50001 to 60,000 10%  60001 to 1,50,000 20%  >1,50,000 30%  If my income is Rs.  70,000 per month, then  what is the tax payable by me each month  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IFRvdGFsIGluY29tZSBjYW4gYmUgZGl2aWRlZCBhczogICBScy4gMSw3MCwwMDAgPSA1MCwwMDAgKyAxMCwwMDAgKyA5MCwwMDAgKyAyMCwwMDAgICBUYXggcGF5YWJsZSA9IDUwLDAwMCDDlyAwJSArIDEwMDAwIMOXIDEwJSArIDkwLDAwMCDDlyAyMCUgKyAyMCwwMDAgw5cgMzAlICAgPSAxMDAwICsgMTgwMDAgKyA2MDAwID0gUnMuIDI1MDAwICAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICAgICAgICAgMTUgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 51000 ",
        "option2" : " Rs. 17000 ",
        "option3" : " Rs. 34000 ",
        "option4" : " Rs. 25000 "
      }
    },
    {
      "index" : 57,
      "question" : "A Business Group has 3 Companies X, Y, Z and a Trust P which is engaged in charitable activities. Each group company has to donate 5% of its own funds to the trust. X has given a loan to Y which is equivalent to 10% of the funds of Y. After receiving the loan, Y has funds which are 2 times the funds of Z. If Z gave Rs. 10000 in donation to trust P, then how much is the approximate contribution of Y to trust P? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IExldCBYLCBZIGFuZCBaIGhhdmUgdGhlaXIgb3duIGZ1bmRzIG9mIFJzIHgsIFJzLiB5IGFuZCBScy4geiByZXNwZWN0aXZlbHkuICAgVGhlbiBZIHJlY2VpdmVkIDEwJSBvZiBpdHMgZnVuZCBmcm9tIFguICAgU28sIFkncyB0b3RhbCBmdW5kID0geSArICgxMC8xMDApeSA9IDEuMXkgICBEb25hdGlvbiBnaXZlbiBieSBjb21wYW55IFogPSBScy4gMTAwMDAgICBJdCBtZWFucyB0aGF0LCB6IMOXIDUvMTAwID0gMTAwMDAgICBPciB6ID0gUnMuIDIsMDAsMDAwICAgTm93IGFzIHBlciB0aGUgcXVlc3Rpb24sIGFmdGVyIHJlY2VpdmluZyB0aGUgbG9hbiwgWSBoYXMgZnVuZHMgd2hpY2ggYXJlIDIgdGltZXMgdGhlIGZ1bmRzIG9mIFouICAgU28sIDEuMXkgPSAyeiAgIE9yIDEuMXkgPSAyIMOXIDIwMDAwMCAgIE9yIHkgPSA0MDAwMDAvMS4xID0gUnMuIDM2MzYzNi4zNiAgIERvbmF0aW9uIGdpdmVuIGJ5IFkgdG8gdHJ1c3QgUCA9IHkgw5cgNS8xMDAgPSAzNjM2MzYuMzYgw5cgNS8xMDAgPSBScy4gMTgwMDAgKGFwcHJveGltYXRlbHkpICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 17,000 ",
        "option2" : " Rs. 18,000 ",
        "option3" : " Rs. 19,000 ",
        "option4" : " Rs. 20,000 "
      }
    },
    {
      "index" : 58,
      "question" : "The pre-paid recharge of a certain telecom company X gives 21% less talktime than that given by pre-paid recharge of telecom company Y at the same price. The post-paid talktime given by X is 12% more than that given by its pre-paid recharge at the same price. Further, the post-paid talktime given by Y is 15% less than that given by its pre-paid recharge at the same price. How much percent less/more talktime can one get from the post-paid service of X as compared to the post-paid service of Y? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IFRoZSBwcmUtcGFpZCByZWNoYXJnZSBvZiBhIGNlcnRhaW4gdGVsZWNvbSBjb21wYW55IFggZ2l2ZXMgMjElIGxlc3MgdGFsa3RpbWUgdGhhbiB0aGF0IGdpdmVuIGJ5IHByZS1wYWlkICAgcmVjaGFyZ2Ugb2YgdGVsZWNvbSBjb21wYW55IFkgYXQgdGhlIHNhbWUgcHJpY2UuICAgIExldCwgVGFsa3RpbWUgZ2l2ZW4gYnkgUHJlcGFpZCByZWNoYXJnZSBvZiBjb21wYW55IFkgPSAxMDAgICBUYWxrdGltZSBnaXZlbiBieSBQcmVwYWlkIHJlY2hhcmdlIG9mIGNvbXBhbnkgWCA9IDEwMCAtIDIxID0gNzkgICBUYWxrdGltZSBnaXZlbiBieSBQb3N0cGFpZCByZWNoYXJnZSBvZiBjb21wYW55IFkgPSAxMDAgLSAxNSA9IDg1ICAgVGFsa3RpbWUgZ2l2ZW4gYnkgUG9zdHBhaWQgcmVjaGFyZ2Ugb2YgY29tcGFueSBYID0gNzkgw5cgKDEwMCArIDEyKS8xMDAgPSA4OC40OCAgIFJlcXVpcmVkIHBlcmNlbnRhZ2UgPSBbKDg4LjQ4IC0gODUpLzg1XSDDlyAxMDAgPSBbMy40OC84NV0gw5cgMTAwID0gNCUgbW9yZSAoYXBwcm94aW1hdGVseSkgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 4% more ",
        "option2" : " 5% less ",
        "option3" : " 5% more ",
        "option4" : " 8% less "
      }
    },
    {
      "index" : 59,
      "question" : "A dealer sold two bicycles for Rs. 9900 each, gaining 10% on one and losing 10% on the other. The total gain or loss percent in the whole transaction is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IElmIGFueSB0d28gdHJhbnNhY3Rpb25zIFNQIGlzIHRoZSBzYW1lLCBhbmQgYWxzbyBnYWluJSBhbmQgbG9zcyUgYXJlIHRoZSBzYW1lIHRoZW4gdGhlcmUgaXMgYWx3YXlzIGEgbG9zcy4gICBMb3NzJSA9IChjb21tb24gZ2FpbiBvciBsb3NzJSAvMTApMiA9ICgxMC8xMCkyID0gMSUgICBIZW5jZSwgaW4gdGhlIHdob2xlIHRyYW5zYWN0aW9uIHRoZXJlIGlzIGEgbG9zcyBvZiAxJS4gICBBbHRlcm5hdGUgTWV0aG9kOiAgIFMuUC4gb2YgZmlyc3QgYmljeWNsZSA9IFJzLiBScy4gOTkwMCwgR2FpbiUgPSAxMCUgICBTbywgQy5QLiBvZiBmaXJzdCBiaWN5Y2xlID0gOTkwMCDDlyAoMTAwLzExMCkgPSBScy4gOTAwMCAgIFMuUC4gb2Ygc2Vjb25kIGJpY3ljbGUgPSBScy4gUnMuIDk5MDAsIExvc3MlID0gMTAlICAgU28sIEMuUC4gb2Ygc2Vjb25kIGJpY3ljbGUgPSA5OTAwIMOXICgxMDAvOTApID0gUnMuIDExMDAwICAgVG90YWwgQy5QLiA9IDkwMDAgKyAxMTAwMCA9IFJzLiAyMDAwMCAgIFRvdGFsIFMuUC4gPSA5OTAwICsgOTkwMCA9IFJzLiAxOTgwMCAgIExvc3MgPSAyMDAwMCAtIDE5ODAwID0gUnMuIDIwMCAgIExvc3MlID0gKDIwMC8yMDAwMCkgw5cgMTAwID0gMSUgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " (1/99)% gain ",
        "option2" : " (100/99)% gain ",
        "option3" : " 1% loss ",
        "option4" : " Neither loss nor gain "
      }
    },
    {
      "index" : 60,
      "question" : "On selling a pen at 5% loss and a book at 15% gain, Karan gains Rs. 7. If he sells the pen at 5% gain, and the book at 10% gain, then he gains Rs. 13. The actual price of the book is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IExldCB0aGUgQ1Agb2YgYSBwZW4gYW5kIGEgYm9vayBiZSBScy4geCBhbmQgUnMuIHkgcmVzcGVjdGl2ZWx5LiAgIENQIG9mIGEgcGVuIGFuZCBhIGJvb2sgPSBScy4gKHggKyB5KSAgICBPbiBzZWxsaW5nIGEgcGVuIGF0IDUlIGxvc3MgYW5kIGEgYm9vayBhdCAxNSUgZ2FpbiwgS2FyYW4gZ2FpbnMgUnMuIDcuICAgU28sIDAuOTV4ICsgMS4xNXkgPSAoeCArIHkpICs3ICAgb3IgMC4xNXkgLSAwLjA1eCA9IDcgICAuLi4uLi4uLi4uLi4uLi4uLi4uLiAoaSkgICBJZiBoZSBzZWxscyB0aGUgcGVuIGF0IDUlIGdhaW4sIGFuZCBhIGJvb2sgYXQgMTAlIGdhaW4sIHRoZW4gaGUgZ2FpbnMgUnMuIDEzLiAgIFNvLCAxLjA1eCArIDEuMXkgPSAoeCArIHkpICsgMTMgICBvciAwLjA1eCArIDAuMXkgPSAxMyAgLi4uLi4uLi4uLi4uLi4uLi4uLiAoaWkpICAgU29sdmluZyBlcXVhdGlvbnMgKGkpIGFuZCAoaWkpLCB3ZSBnZXQ6ICAgeSA9IFJzLiA4MCAgIFNvLCBhY3R1YWwgcHJpY2Ugb2YgdGhlIGJvb2sgaXMgUnMuIDgwLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 100 ",
        "option2" : " Rs. 80 ",
        "option3" : " Rs. 10 ",
        "option4" : " Rs. 40        16            "
      }
    },
    {
      "index" : 61,
      "question" : "A dairyman pays Rs. 6.4 per litre for milk. He adds water and sells the mixture at Rs. 8 per liter, thereby making 37.5% profit. The ratio of water to milk received by the customer is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IExldCB0aGUgcXVhbnRpdHkgb2YgbWlsayBwdXJjaGFzZWQgYmUgeCBsaXRyZXMgYW5kIHF1YW50aXR5IG9mIHdhdGVyIGFkZGVkIHRvIGl0IGJlIHkgbGl0cmVzLiBUaGVuIHJhdGlvIG9mICAgd2F0ZXIgdG8gbWlsayB3aWxsIGJlIHk6eC4gICBOb3csIENQIG9mIHggbGl0cmVzIG1pbGsgPSBScy4gNi40eCBhbmQgICAgUy5QIG9mIHRoZSBtaXh0dXJlIHdoZW4geSBsaXRyZXMgb2Ygd2F0ZXIgaXMgYWRkZWQgdG8geCBsaXRyZXMgb2YgbWlsayA9IFJzLiA4KHggKyB5KSAgQW5kIHByb2ZpdCBwZXJjZW50ID0gMzcuNSUgIE5vdywgU1AgPSBDUCDDlyAoMTAwICsgUHJvZml0JSkgIFNvLCA4ICh4ICsgeSkgPSA2LjR4IMOXICgxMDAgKyAzNy41KS8xMDAgICAgICAgIDE2ICAgICAgICAgICAgICAgICAgIE9yIDh4ICsgOHkgPSA4Ljh4ICAgT3IgOHkgPSAwLjh4ICAgIE9yIHgveSA9IDgwLzggPSAxMC8xICAgT3IgeTp4ICA9IDE6MTAgICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1:5 ",
        "option2" : " 1:10 ",
        "option3" : " 1:20 ",
        "option4" : " 1:12 "
      }
    },
    {
      "index" : 62,
      "question" : "A person deposited Rs. 13,200 in a bank, which pays 14% simple interest. If he rather had invested in Rs. 110 stocks which pay a dividend of 15% on the face value of Rs. 100, how much would he had lost or gained? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEludGVyZXN0IGVhcm5lZCBvbiBScy4gMTMyMDAgYXQgYSByYXRlIG9mIDE0JSA9IFJzLiAxODQ4ICAgTnVtYmVyIG9mIHNoYXJlcyBwdXJjaGFzZWQgPSAxMzIwMC8xMTAgPSAxMjAgICBEaXZpZGVuZCBlYXJuZWQgYnkgaGltIG9uIDEyMCBzaGFyZXMgd2hpY2ggcGF5cyBhIGRpdmlkZW5kIG9mIDE1JSBwZXIgc2hhcmUgPSAxMjAgw5cgWygxNS8xMDApIMOXIDEwMF0gICA9IFJzLiAxODAwICAgVGhlcmVmb3JlLCBuZXQgcHJvZml0ID0gMTg0OCAtIDE4MDAgPSBScy4gNDggIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Loses Rs. 48 ",
        "option2" : " Gains Rs. 48 ",
        "option3" : " Loses Rs. 132 ",
        "option4" : " Gains Rs. 132 "
      }
    },
    {
      "index" : 63,
      "question" : "A manufacturer sells a pair of glasses to a wholesale dealer at a profit of 18%. The wholesaler sells the same to a retailer at a profit of 20%. The retailer in turn sells them to a customer at 25% profit. If the cost price for the customer is Rs. 30.09, then the cost price for the manufacturer must have been: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IExldCB0aGUgQy5QIGZvciB0aGUgbWFudWZhY3R1cmVyIGJlIFJzLiAxMDAuICAgVGhlbiBDLlAgZm9yIHRoZSB3aG9sZXNhbGVyID0gUnMuIDExOCAgIEMuUCBmb3IgdGhlIHJldGFpbGVyID0gMTE4IMOXICgxMjAvMTAwKSA9IFJzLiAxNDEuNjAgIEMuUCBmb3IgdGhlIGN1c3RvbWVyID0gMTQxLjYwIMOXICgxMjUvMTAwKSA9IFJzLiAxNzcgIElmIHRoZSBDLlAgZm9yIHRoZSBjdXN0b21lciBpcyBScy4gMTc3LCB0aGVuIHRoZSBDLlAgZm9yIHRoZSBtYW51ZmFjdHVyZXIgaXMgMTAwLiAgVGhlcmVmb3JlLCBpZiB0aGUgQy5QIGZvciB0aGUgY3VzdG9tZXIgaXMgUnMuIDMwLjA5LCB0aGVuIHRoZSBDLlAgZm9yIHRoZSBtYW51ZmFjdHVyZXIgPSAoMTAwLzE3Nykgw5cgMzAuMDkgID0gUnMuIDE3ICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 15 ",
        "option2" : " Rs. 16 ",
        "option3" : " Rs. 17 ",
        "option4" : " Rs. 18 "
      }
    },
    {
      "index" : 64,
      "question" : "A departmental store receives a shipment of 1,000 shirts, for which it pays Rs. 900000. The store sells the shirts at a price 80 per cent above the cost for one month, after which it reduces the price of the shirts to 20 per cent above the cost. The store sells 750 shirts in the first month, and 50 per cent of the remaining shirts afterwards. How much gross income did the sales of the shirts generate? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IENvc3QgcHJpY2Ugb2YgMSwwMDAgc2hpcnRzID0gUnMuIDkwMDAwMCAgIFNvLCBDb3N0IHByaWNlIG9mIG9uZSBzaGlydCA9IDkwMDAwMC8xMDAwID0gUnMuIDkwMCAgIFRoZSBzdG9yZSBzZWxscyA3NTAgc2hpcnRzIGluIHRoZSBmaXJzdCBtb250aCBhdCBhIHByaWNlIDgwIHBlciBjZW50IGFib3ZlIHRoZSBjb3N0IHByaWNlLCBhbmQgNTAgcGVyIGNlbnQgb2YgICB0aGUgcmVtYWluaW5nIHNoaXJ0cywgaS5lLiAxMjUgc2hpcnRzLCBhZnRlcndhcmRzIGF0IDIwIHBlciBjZW50IGFib3ZlIHRoZSBjb3N0IHByaWNlLiAgIEdyb3NzIGluY29tZSBnZW5lcmF0ZWQgYnkgc2VsbGluZyB0aGUgc2hpcnRzID0gNzUwIMOXICgxODAlIG9mIFJzLiA5MDApICsgMTI1IMOXICgxMjAlIG9mIFJzLiA5MDApICAgICA9IDc1MCDDlyAxNjIwICsgMTI1IMOXIDEwODAgICAgPSAxMjE1MDAwICsgMTM1MDAwID0gUnMuIDEzNTAwMDAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1000000 ",
        "option2" : " Rs. 1080000 ",
        "option3" : " Rs. 1215000 ",
        "option4" : " Rs. 1350000 "
      }
    },
    {
      "index" : 65,
      "question" : "Two friends Ajit and Lalit made investments in a business in the ratio 60:40. Lalit had borrowed his entire invested amount as personal loan at an annual interest rate of 5%. He repaid this loan after one year. After 5 years of investment, they got a profit of 30% on the total investment they had made. What is the ratio of actual profit made by Ajit and Lalit? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IExldCBBaml0J3MgYW5kIExhbGl0J3MgaW52ZXN0bWVudCBiZSAzeCBhbmQgMnggcmVzcGVjdGl2ZWx5ICjiiLUgdGhlaXIgaW52ZXN0bWVudCByYXRpbyBpcyA2MDo0MCBpLmUuIDM6MikgICBQcm9maXQgYWZ0ZXIgNSB5ZWFycyBvZiBpbnZlc3RtZW50ID0gMzAlIG9mIDV4ID0gKDMwLzEwMCkgNXggPSAxLjV4ICAgUHJvZml0IHNoYXJlIG9mIEFqaXQgaW4gcmF0aW8gKDYwOjQwKSBvZiB0aGVpciBpbnZlc3RtZW50ID0gMy81dGggb2YgMS41eCA9IDAuOXggICBQcm9maXQgc2hhcmUgb2YgTGFsaXQgPSAxLjV4IC0gMC45eCA9IDAuNnggICBJbnRlcmVzdCBwYWlkIGJ5IExhbGl0IGZvciBvbmUgeWVhciBvZiBib3Jyb3dpbmcgPSA1JSBvZiAyeCA9IDAuMXggICAgSGVuY2UsIGFjdHVhbCBwcm9maXQgb2YgTGFsaXQgPSAwLjZ4IC0gMC4xeCA9IDAuNXggICBIZW5jZSwgcmF0aW8gb2YgdGhlaXIgcHJvZml0cyA9ICgwLjl4KSA6ICggMC41eCkgPSA5IDogNSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 : 2 ",
        "option2" : " 2 : 3 ",
        "option3" : " 9 : 5 ",
        "option4" : " 11 : 18  Directions for the following 4 (four) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.         17            "
      }
    },
    {
      "index" : 66,
      "question" : "According to the passage, which of the following is/are the benefits of education? 1. Discipline, Confidence and Punctuality 2. Enhanced economic participation of  women 3. Technological literacy of the society 4. Improving the communication skills of the person Select the correct answer form the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAiRWR1Y2F0aW9uIHByb3ZpZGVzIGEgcGVyc29uIHdpdGggZW5kbGVzcyBvcHBvcnR1bml0aWVzICAgZm9yIGdyb3d0aCBhbmQgYWR2YW5jZW1lbnQuIFBlb3BsZSB3aG8gaGF2ZSBoYWQgYW4gZWR1Y2F0aW9uIHRlbmQgdG8gYmUgY2FsbWVyIGFuZCBtb3JlIHNlbGYtYXNzdXJlZC4gICBQZW9wbGUgd2hvIGhhdmUgYmVlbiBlZHVjYXRlZCBhcmUgZGlzY2lwbGluZWQgYW5kIHVuZGVyc3RhbmQgdGhlIGltcG9ydGFuY2Ugb2YgdGltZS4iIFRodXMsIGVkdWNhdGlvbiAgIGhlbHBzIGluIGVtYmVkZGluZyB0aGUgdmlydHVlcyBvZiBEaXNjaXBsaW5lLCBDb25maWRlbmNlIGFuZCBQdW5jdHVhbGl0eS4gICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugb25seSBtZW50aW9ucyB0aGF0IGVkdWNhdGlvbiBwcm92aWRlcyBvcHBvcnR1bml0aWVzIGZvciBncm93dGggICBhbmQgYWR2YW5jZW1lbnQgaW4gZ2VuZXJhbC4gQnV0IHdlIGNhbm5vdCBpbmZlciB0aGF0IGl0IGxlYWRzIHRvIGFuIGluY3JlYXNlIGluIGVjb25vbWljIHBhcnRpY2lwYXRpb24gb2YgICB3b21lbi4gRXZlbiB0aG91Z2ggdGhlIHN0YXRlbWVudCBpcyBvdGhlcndpc2UgbG9naWNhbCwgYW5zd2VycyBzaG91bGQgYmUgZm91bmQgd2l0aGluIHRoZSBhbWJpdCBvZiB0aGUgICBwYXNzYWdlLiAgICAgICAgICAxNyAgICAgICAgICAgICAgICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIkVkdWNhdGlvbiBicmluZ3Mgb25lIHVwIHRvIHNwZWVkIG9uIHRlY2hub2xvZ2ljYWwgICBhZHZhbmNlbWVudHMgYXMgd2VsbC4gQSB3ZWxsLWVkdWNhdGVkIHBlcnNvbiBjYW4gZWFzaWx5IGFkanVzdCB0byB0ZWNobm9sb2dpY2FsIGRldmVsb3BtZW50cy4iIFRodXMsICAgZWR1Y2F0aW9uIG5vdCBvbmx5IGhlbHBzIGluIHRlY2hub2xvZ2ljYWwgYWR2YW5jZW1lbnRzIGJ1dCBhbHNvIGluIGFuIGVhc3kgYWRqdXN0bWVudCB0byBpdC4gICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gYWxsb3dzIGEgcGVyc29uIHRvIGJlIG1vcmUgZXhwcmVzc2l2ZSBhbmQgICBvcGluaW9uYXRlZC4gSGUgd2FzIGFibGUgdG8gcmVhZGlseSBjb21tdW5pY2F0ZSBoaXMgdmlld3BvaW50cywgd2hpY2ggd2VyZSBzdXBwb3J0ZWQgYnkgYSBjbGVhciBhaW0gICBhbmQgcmF0aW9uYWxlLiIgVGh1cywgZWR1Y2F0aW9uIGhlbHBzIGluIGRldmVsb3BpbmcgY29tbXVuaWNhdGlvbiBza2lsbHMgYnkgZW5hYmxpbmcgYSBwZXJzb24gdG8gYmUgICBtb3JlIGV4cHJlc3NpdmUgYW5kIHJhdGlvbmFsLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1, 2 and 4 only ",
        "option4" : " 1, 3 and 4 only "
      }
    },
    {
      "index" : 67,
      "question" : "Based on the above passage, the following assumptions have been made: 1. The sole goal of education is to ensure everyone can read a book. 2. The benefits of education do not remain limited to one person alone. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gaXMgYSB2YWx1YWJsZSB0b29sIGZvciBnYWluaW5nIGxlYXJuaW5nIGFuZCAgIHdpc2RvbS4uLi4uLi4uIG5vdGlvbiBlbmNvbXBhc3NlcyBtb3JlIHRoYW4ganVzdCBib29rcyBhbmQgYm9va2lzaCBrbm93bGVkZ2UuIiBUaHVzLCBpdCBpcyB3aXNkb20gd2hpY2ggICBpcyB0aGUgdWx0aW1hdGUgZGVzaXJlZCByZXN1bHQgb2YgZWR1Y2F0aW9uLiBBbHNvLCByZWFkaW5nIGFuZCB3cml0aW5nIGhlbHAgb25lIGluIGRlY2lwaGVyaW5nIGJvb2tpc2ggICBrbm93bGVkZ2UuIFRob3VnaCBpdCBpcyBpbXBvcnRhbnQsIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAiSXQgaXNuJ3QgcmVxdWlyZWQgZm9yIGVkdWNhdGlvbiB0byBiZSBvbmx5IGJhc2VkICAgb24gYm9va3MuIiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIkVkdWNhdGlvbiBiZW5lZml0cyBub3QganVzdCB0aGUgaW5kaXZpZHVhbCBidXQgYWxzbyB0aGUgICBjb21tdW5pdHkuIFRoZSBtb3N0IGltcG9ydGFudCBhc3BlY3Qgb2YgZWR1Y2F0aW9uIGlzIHRoYXQgaXQgZ29lcyBmcm9tIG9uZSBpbmRpdmlkdWFsIHRvIGFub3RoZXIsIHRoZW4gICB0aHJvdWdob3V0IHNvY2lldHksIGFuZCBldmVudHVhbGx5IHRocm91Z2hvdXQgdGhlIGNvdW50cnkuIiBUaHVzLCBpdCBpcyB2YWxpZCB0byBhc3N1bWUgdGhhdCB0aGUgYmVuZWZpdHMgb2YgICBlZHVjYXRpb24gZG8gbm90IHJlbWFpbiBsaW1pdGVkIHRvIG9uZSBwZXJzb24gYWxvbmUuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 68,
      "question" : "Which one of the following statements best reflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucyB0aGF0IGVkdWNhdGlvbiBpcyBhbiBpbXBvcnRhbnQgdG9vbCBmb3IgbGVhcm5pbmcuIEl0IG1lYW5zICAgdGhhdCB0aGVyZSBjb3VsZCBiZSBvdGhlciB0b29scyB0b28uIEl0IGRvZXMgbm90IGFueXdoZXJlIHNheSB0aGF0IGl0IGlzIGEgbmVjZXNzYXJ5IGNvbmRpdGlvbiBmb3IgZWNvbm9taWMgICBncm93dGguIFNvLCB0aGUgc3RhdGVtZW50IHNlZW1zIGV4dHJlbWUuICAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhhdCBzdWNjZXNzIGNhbiBvbmx5IGJlIGFjcXVpcmVkIGJ5IGVkdWNhdGlvbi4gU28sICAgaXQgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiBJdCdzIHByZXR0eSBleHRyZW1lIHN0YXRlbWVudC4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAiRWR1Y2F0aW9uLCBtb3JlIHRoYW4gYW55dGhpbmcgZWxzZSwgaXMgYSBzb3VyY2Ugb2YgaG9wZS4gICBUaGUgZGVzaXJlIGZvciBhIGJldHRlciBsaWZlOyB0aGUgZGVzaXJlIGZvciBhIHdlYWx0aHkgYW5kIHBvdmVydHktZnJlZSBleGlzdGVuY2UuIiBUaGlzIHN1Z2dlc3RzIHRoYXQgICBlZHVjYXRpb24gaXMgYSB0b29sIGZvciBwb3ZlcnR5LWFsbGV2aWF0aW9uLiBIb3dldmVyLCBpdCBjYW5ub3QgYmUgaW5mZXJyZWQgdGhhdCBhbiBlZHVjYXRlZCBzb2NpZXR5IGlzIGEgICBwcmVjb25kaXRpb24gZm9yIHBvdmVydHktZnJlZSBleGlzdGVuY2UuIEFsc28sIHRoZSBmb2N1cyBvZiB0aGUgcGFzc2FnZSBzZWVtcyB0byBiZSBtb3JlIG9uIGFuIGluZGl2aWR1YWwgICAoYW5kIHRoZSBiZW5lZml0cyB0aGF0IGFuIGVkdWNhdGVkIHBlcnNvbiBtYXkgcHJvdmlkZSB0byBpdHMgc3Vycm91bmRpbmdzKSwgcmF0aGVyIHRoYW4gdGhlIHNvY2lldHkgYXQgbGFyZ2UuICAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gYmVuZWZpdHMgbm90IGp1c3QgdGhlIGluZGl2aWR1YWwgYnV0IGFsc28gdGhlICAgY29tbXVuaXR5Li4uIEVkdWNhdGlvbiBicmluZ3Mgb25lIHVwIHRvIHNwZWVkIG9uIHRlY2hub2xvZ2ljYWwgYWR2YW5jZW1lbnRzIGFzIHdlbGwuIiBUaHVzLCBhIHdlbGwtICBlZHVjYXRlZCBwZXJzb24gaXMgYSB2YWx1YWJsZSBhc3NldCB0byB0aGUgc29jaWV0eS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Education is a necessary condition for  economic growth of a person. ",
        "option2" : " A person cannot be successful in life  without education. ",
        "option3" : " An educated society is essential for  poverty-free existence. ",
        "option4" : " A well-educated individual is a valuable  asset to the society. "
      }
    },
    {
      "index" : 69,
      "question" : "Which one of the following best reflects the crux of the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gY2FwdHVyZXMgdGhlIGVzc2VuY2Ugb2YgdGhlIHBhc3NhZ2UgYXMgdGhlIGNvbXBsZXRlIHBhc3NhZ2UgaXMgYWJvdXQgICB0aGUgZWZmZWN0cyBvZiBJb1Qgb24gZGlmZmVyZW50IGFzcGVjdHMgb2YgaHVtYW4gbGlmZS4gVGhlIGxpbmVzICdPbmUgc3VjaCBkZXZlbG9wbWVudCBvZiBJb1QgaXMgdGhlICAgY29uY2VwdCBvZiBTbWFydCBIb21lIFN5c3RlbXMgKFNIUykgYW5kIGFwcGxpYW5jZXMgdGhhdCBjb25zaXN0IG9mIGludGVybmV0LWJhc2VkIGRldmljZXMsIGF1dG9tYXRpb24gICBzeXN0ZW0gZm9yIGhvbWVzIGFuZCByZWxpYWJsZSBlbmVyZ3kgbWFuYWdlbWVudCBzeXN0ZW0uIEJlc2lkZXMsIGFub3RoZXIgaW1wb3J0YW50IGFjaGlldmVtZW50IG9mIElvVCAgIGlzIHRoZSBTbWFydCBIZWFsdGggU2Vuc2luZyBzeXN0ZW0gKFNIU1MpJywgd2hpY2ggcmVmbGVjdHMgdGhhdCBJb1QgaGFzIHBvc2l0aXZlbHkgaW1wYWN0ZWQgdGhlIGxpdmVzIG9mICAgaHVtYW5zIGluIHRoZSBkb21haW4gb2YgaGVhbHRoLCBob21lLCBhbmQgZW5lcmd5IG1hbmFnZW1lbnQgc3lzdGVtcy4gU28sIHRoaXMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIHRhbGtzIGFib3V0IG9ubGluZSBzZWN1cml0eSBkdWUgdG8gdGhlIGluY3JlYXNlZCB1c2Ugb2YgSW9ULiAgIEhvd2V2ZXIsIHRoZXJlIGlzIG5vIG1lbnRpb24gb2YgdGhlIHNlY3VyaXR5IGFzcGVjdCBvZiBJb1QuIFRoZSBwYXNzYWdlIG1lcmVseSBmb2N1c2VzIG9uIGhvdyBJb1QgaGFzICAgYWZmZWN0ZWQgdGhlIGxpdmVzIG9mIHBlb3BsZS4gVGhlcmVmb3JlLCB0aGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGFuZCBpcyBub3QgY29ycmVjdC4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gYWxzbyB0YWxrcyBhYm91dCB0aGUgcG9zaXRpdmVzIGFuZCBuZWdhdGl2ZXMgb2YgSW9UIGluIHRoZSBtZWRpY2FsICAgZG9tYWluLCBidXQgdGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBvbiB0aGUgbmVnYXRpdmVzIG9mIElvVCBpbiB0aGUgbWVkaWNhbCBkb21haW4gaW4gdGhlIHBhc3NhZ2UuICAgVGhlcmVmb3JlLCB0aGlzIHN0YXRlbWVudCBpcyBhbHNvIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gaW4gdGhlIHBhc3NhZ2Ugb24gdGhlIGluY3JlYXNlZCBjb3N0IG9mIGxpdmluZyBkdWUgdG8gdGhlICAgdXNlIG9mIElvVC4gSXQgZG9lcyBub3QgcmVwcmVzZW50IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlIGFzIHRoZSBjcnV4IGlzIGFib3V0IHRoZSBzdW1tYXJ5IG9mIHRoZSBwYXNzYWdlLiAgIFNvLCB0aGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdC4gICAgICAgICAxOCAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " IoT has positively affected the lives of  humans in almost every domain. ",
        "option2" : " With the increasing use of IoT, there is a  dire need for investment in the online  security of the citizens. ",
        "option3" : " In the medical domain, IoT devices can act  as a double-edged sword. ",
        "option4" : " Application of high-end technology, and  smart systems for home, health and energy  increases the cost of living. "
      }
    },
    {
      "index" : 70,
      "question" : "A machine costs m rupees per day to maintain and n paise for each unit it produces. If the machine produces r units in a week, then which of the following is the total cost of operating the machine for a week? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IENvc3Qgb2YgMSBkYXkgdG8gbWFpbnRhaW4gdGhlIG1hY2hpbmUgPSBScy4gbSAgIFRoZXJlZm9yZSA3IGRheSdzIGNvc3QgZm9yIG1haW50ZW5hbmNlID0gUnMuIDdtICAgU2ltaWxhcmx5LCBjb3N0IG9mIDEgdW5pdCA9IG4gcGFpc2UgKGZvciAxIGRheSkgID0gUnMuIG4vMTAwICAgVGhlcmVmb3JlLCBjb3N0IG9mIHIgdW5pdHMgPSBScy4gcm4vMTAwICAgSGVuY2UsIFRvdGFsIGNvc3QgPSA3bSArKCBybi8xMDApID0gKDcwMG0gKyBucikgLzEwMCAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7m + 100nr ",
        "option2" : " (700m + nr) /100 ",
        "option3" : " m + nr ",
        "option4" : " 700mnr "
      }
    },
    {
      "index" : 71,
      "question" : "A shopkeeper purchases a packet of 50 pens at Rs. 10 per pen. He sells a part of the packet at a profit of 30%. On the remaining part, he incurs a loss of 10%. If his overall profit on the whole packet is 10%, the number of pens he sold at profit is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEEgc2hvcGtlZXBlciBzZWxscyBhIHBhcnQgb2YgdGhlIHBhY2tldCBvZiA1MCBwZW5zIGF0IGEgcHJvZml0IG9mIDMwJSBhbmQgcmVtYWluaW5nIHBhcnQgb2YgdGhlIHBlbnMgYXJlICAgc29sZCBhdCBhIGxvc3Mgb2YgMTAlLiBIaXMgb3ZlcmFsbCBwcm9maXQgb24gdGhlIHdob2xlIHBhY2tldCBpcyAxMCUuICAgQnkgQWxsZWdhdGlvbiBNZXRob2Q6ICAgIFJhdGlvIG9mIHBlbnMgc29sZCBhdCAzMCUgcHJvZml0IGFuZCAxMCUgbG9zcyA9IDE6MSAgIFNvLCBOdW1iZXIgb2YgcGVucyBzb2xkIGF0IHByb2ZpdCA9IFsxLygxKzEpXSDDlyA1MCA9ICgxLzIpIMOXIDUwID0gMjUgICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 25 ",
        "option2" : " 30 ",
        "option3" : " 20 ",
        "option4" : " 15 "
      }
    },
    {
      "index" : 72,
      "question" : "A garment company declared 15% discount for wholesale buyers. Mr. Sachdev bought garments from the company for Rs. 25000 after getting the discount. He fixed up the selling price of garments in such a way that he earned a profit of 8% on original company price. What is the approximate total selling price? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IERpc2NvdW50IHBlcmNlbnQgPSAxNSUgICBQcmljZSBvZiBnYXJtZW50cyBhZnRlciBnZXR0aW5nIGRpc2NvdW50ID0gQ29zdCBwcmljZSBvZiBnYXJtZW50cyBmb3IgTXIuIFNhY2hkZXYgPSBScy4gMjUwMDAgICBTbywgT3JpZ2luYWwgY29tcGFueSBwcmljZSA9ICgyNTAwMC84NSkgw5cgMTAwICAg4oi0IFNlbGxpbmcgcHJpY2Ugb2YgZ2FybWVudHMgPSAoMjUwMDAvODUpIMOXIDEwMCDDlyAxMDgvMTAwID0gUnMuIDMxNzY0LjcgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs.28000 ",
        "option2" : " Rs. 29000 ",
        "option3" : " Rs. 31765 ",
        "option4" : " Rs. 29500 "
      }
    },
    {
      "index" : 73,
      "question" : "A shopkeeper labelled the price on his articles in such a manner so as to earn a profit of 30% on the cost price. He, then sold the articles by offering a discount of 10% on the labelled price. What is the actual profit percentage earned by him? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IExldCB0aGUgY29zdCBwcmljZSBvZiB0aGUgYXJ0aWNsZXMgYmUgUnMuIDEwMC4gICBTaG9wa2VlcGVyIGxhYmVsZWQgdGhlIHByaWNlIDMwJSBoaWdoZXIgdGhhbiB0aGUgY29zdCBwcmljZS4gICBTbywgTWFya2VkIHByaWNlID0gMTAwICsgMzAlIG9mIDEwMCA9IDEwMCArIDMwID0gUnMuIDEzMCAgIEFmdGVyIGdpdmluZyBhIGRpc2NvdW50IG9mIDEwJSwgdGhlIHNlbGxpbmcgcHJpY2Ugb2YgdGhlIGFydGljbGVzID0gMC45IMOXIDEzMCA9IFJzLiAxMTcgICBTbywgYWN0dWFsIHByb2ZpdCBwZXJjZW50ID0gWygxMTcgLSAxMDApLzEwMF0gw5cgMTAwID0gMTclICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 18% ",
        "option2" : " 15% ",
        "option3" : " 20% ",
        "option4" : " None of these "
      }
    },
    {
      "index" : 74,
      "question" : "Rani bought more apples than oranges. She sells apples at Rs. 23 a piece and makes 15% profit. She sells orange at Rs. 10 a piece and makes 25% profit. If she gets Rs. 653 after selling all the apples and oranges, find her profit percentage. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IExldCBudW1iZXIgb2YgYXBwbGVzIGFuZCBvcmFuZ2VzIHRoYXQgUmFuaSBicm91Z2h0IGJlIEEgYW5kIE8gcmVzcGVjdGl2ZWx5LiAgIE5vdywgMjNBICsgMTBPID0gNjUzICAgU2luY2UgNjUzIGhhcyBsYXN0IGRpZ2l0IGFzIDMgd2hpY2ggY2FuIGNvbWUgYnkgbXVsdGlwbHlpbmcgMjMgd2l0aCAxLCAxMSwgMjEsIDMxIGFuZCBzbyBvbi4gSGVyZSwgbnVtYmVyICAgb2YgYXBwbGVzIGJvdWdodCBpcyBncmVhdGVyIHRoYW4gbnVtYmVyIG9mIG9yYW5nZXMuIFNvLCBBID4gTyAgICBXZSBjYW4gc2VlIHRoYXQgQSA9IDIxIGFuZCBPID0gMTcgaXMgdGhlIG9ubHkgc29sdXRpb24uICAgICAgICAgMTkgICAgICAgICAgICAgICAgICAgU28sIG51bWJlciBvZiBBcHBsZXMgYm91Z2h0ID0gMjEgYW5kIG51bWJlciBvZiBPcmFuZ2VzIGJvdWdodCA9IDE3LiAgIENvc3Qgb2YgYW4gQXBwbGUgPSAyMy8xLjE1IGFuZCAgICBDb3N0IG9mIGFuIE9yYW5nZSA9IDEwLzEuMjUgICBPdmVyYWxsIGNvc3QgPSAoMjMvMS4xNSkgw5cgMjEgKyAoMTAvMS4yNSkgw5cgMTcgPSA0ODMvMS4xNSArIDE3MC8xLjI1ID0gNDIwICsgMTM2ID0gNTU2ICAgUHJvZml0ID0gNjUzIC0gNTU2ID0gOTcgICBQcm9maXQgcGVyY2VudGFnZSA9ICg5Ny81NTYpIHggMTAwID0gMTcuNCUgICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 16.8% ",
        "option2" : " 17.4% ",
        "option3" : " 18.9% ",
        "option4" : " 183%        19            "
      }
    },
    {
      "index" : 75,
      "question" : "In a local shop as part of promotional measures, the shop owner sells three different varieties of soap, one at a loss of 13 percent, another at a profit of 23 percent and the third one at a loss of 26 percent. Assuming that the shop owner sells all three varieties of soap at the same price, the approximate percentage by which average cost price is lower or higher than the selling price is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IExldCBTUCBvZiBlYWNoIGFydGljbGUgYmUgUnMuIDEwMC4gICBUaHVzLCBDLlAgb2YgYXJ0aWNsZSBzb2xkIGF0IDEzJSBsb3NzID0gWzEwMC8oMTAwIC0gMTMpXSDDlyAxMDAgPSAoMTAwLzg3KSDDlyAxMDAgPSBScy4gMTE1IChhcHByb3gpICAgQy5QIG9mIGFydGljbGUgc29sZCBhdCAyMyUgcHJvZml0ID0gWzEwMC8oMTAwICsgMjMpXSDDlyAxMDAgPSAoMTAwLzEyMykgw5cgMTAwID0gUnMuIDgxLjMgIEMuUCBvZiBhcnRpY2xlIHNvbGQgYXQgMjYlIGxvc3MgPSBbMTAwLygxMDAgLSAyNildIMOXIDEwMCA9ICgxMDAvNzQpIMOXIDEwMCA9IFJzLiAxMzUuMSAgVG90YWwgQ1Agb2YgYXJ0aWNsZXMgPSAxMTUgKyA4MS4zICsgMTM1LjEgPSBScy4gMzMxLjQgIFJlcXVpcmVkIHBlcmNlbnRhZ2UgPSBbKDMzMS40IC0gMzAwKS8zMDBdIMOXIDEwMCA9IDEwLjUlIChBcHByb3gpICBBdmVyYWdlIGNvc3QgcHJpY2UgaXMgaGlnaGVyIHRoYW4gdGhlIGF2ZXJhZ2Ugc2VsbGluZyBwcmljZSBieSAxMC41JSBhcHByb3hpbWF0ZWx5LiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10.5% higher ",
        "option2" : " 12.5% lower ",
        "option3" : " 14.5% lower ",
        "option4" : " 8.5% higher "
      }
    },
    {
      "index" : 76,
      "question" : "The percentage of accountants at a company that has 10,000 employees dropped from 10% at the end of last year to 6% at the end of this year. If the number of employees at the end of this year is 9,500, what is the approximate change in the number of accountants over this period? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IFRoZSBudW1iZXIgb2YgYWNjb3VudGFudHMgYXQgdGhlIGVuZCBvZiBsYXN0IHllYXIgPSAxMDAwMCDDlyAwLjEgPSAxMDAwICAgVGhlIG51bWJlciBvZiBhY2NvdW50YW50cyBhdCB0aGUgZW5kIG9mIHRoaXMgeWVhciA9IDk1MDAgw5cgMC4wNiA9IDU3MCAgIFRoZSBhcHByb3hpbWF0ZSBwZXJjZW50IGNoYW5nZSBpbiB0aGUgbnVtYmVyIG9mIGFjY291bnRhbnRzIGZyb20gdGhlIGVuZCBvZiBsYXN0IHllYXIgdG8gdGhlIGVuZCBvZiB0aGlzICAgeWVhciA9IFsoNTcwIOKIkiAxMDAwKS8xMDAwXSDDlyAxMDAgPSDiiJI0MyUgICBUaGVyZSB3YXMgYSA0MyUgZGVjcmVhc2UgaW4gdGhlIG51bWJlciBvZiBhY2NvdW50YW50cyBvdmVyIHRoaXMgcGVyaW9kLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 13% increase ",
        "option2" : " 43% decrease ",
        "option3" : " 30% decrease ",
        "option4" : " 23% decrease "
      }
    },
    {
      "index" : 77,
      "question" : "X is 20% of Y, which is 40% of Z. All three are positive integers. In which range does the smallest possible value of X + Y + Z  fall? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IFkgaXMgNDAlIG9mIFouIFNvLCBZID0gMC40MFogPSAoMi81KSBaLiAgIFggaXMgMjAlIG9mIFkuIFNvLCBYID0gMC4yMFkgPSAoMS81KSBZID0gKDEvNSkgw5cgKDIvNSkgWiA9ICgyLzI1KSBaLiAgIEZvciBYIHRvIGJlIGFuIGludGVnZXIsIFogbXVzdCBiZSBhIG11bHRpcGxlIG9mIDI1LiBUaGVyZWZvcmUsIHRoZSBzbWFsbGVzdCBwb3NpdGl2ZSBpbnRlZ2VyIHZhbHVlIG9mIFogaXMgMjUgICBpdHNlbGYuICAgWSBpcyA0MCUgb2YgMjUgPSAwLjQwIMOXIDI1ID0gMTAgICBYIGlzIDIwJSBvZiAxMCA9IDAuMjAgw5cgMTAgPSAyLiAgIFNvLCBYICsgWSArIFogPSAyICsgMTAgKyAyNSA9IDM3ICAgVGhlIGNvcnJlY3QgcmVzcG9uc2UgaXMgdGh1cyAiRnJvbSAzMSB0byA0MC4iICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " From 31 to 40 ",
        "option2" : " From 51 to 60 ",
        "option3" : " From 21 to 30 ",
        "option4" : " From 41 to 50 "
      }
    },
    {
      "index" : 78,
      "question" : "The cost price of 10 candles is the same as the selling price of 'n' candles. If a loss of 40% is incurred, what is the approximate value of 'n'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IExldCB0aGUgY29zdCBwcmljZSBvZiBlYWNoIGNhbmRsZSBiZSBSZS4gMS4gVGhlbiB0aGUgY29zdCBwcmljZSBvZiBuIGNhbmRsZXMgaXMgUnMuIG4gICAgTm93LCB0aGUgc2VsbGluZyBwcmljZSBvZiBuIGNhbmRsZXMgaXMgZXF1YWwgdG8gdGhlIGNvc3QgcHJpY2Ugb2YgMTAgY2FuZGxlcyA9IFJzLiAxMC4gICBMb3NzID0gQ1AgLSBTUCA9IG4gLSAxMC4gICBMb3NzIG9mIDQwJSBtZWFucyB0aGF0OiAgIChMb3NzL0NQKSDDlyAxMDAgPSA0MCAgIFRoZXJlZm9yZSwgWyhuIC0gMTApL25dIMOXIDEwMCA9IDQwICAgIE9yIG4gPSAxNyAoYXBwcm94LikgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 15 ",
        "option2" : " 14 ",
        "option3" : " 17 ",
        "option4" : " 19 "
      }
    },
    {
      "index" : 79,
      "question" : "In a certain business deal, the profit percentage is set at 80% of the cost. If the cost further increases by 20% but the selling price remains the same, then what must be the new profit percentage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IExldCB1cyBhc3N1bWUgQ1AgPSBScy4gMTAwLiAgIFRoZW4sIFByb2ZpdCA9IFJzLiA4MCBhbmQgc2VsbGluZyBwcmljZSA9IFJzLiAxODAuICAgVGhlIGNvc3QgaW5jcmVhc2VzIGJ5IDIwJSwgdGhlcmVmb3JlIG5ldyBDUCA9IFJzLiAxMjAsIFNQID0gUnMuIDE4MC4gICBTbywgbmV3IHByb2ZpdCBwZXJjZW50YWdlID0gKDYwLzEyMCkgw5cgMTAwID0gNTAlLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50% ",
        "option2" : " 60% ",
        "option3" : " 40% ",
        "option4" : " 21% "
      }
    },
    {
      "index" : 80,
      "question" : "A company with 800 employees is planning to hire 100 additional employees at the beginning of the next fiscal year. Currently, only 10% of the company's employees have a college degree. How percentage of the additional employees to be hired should have a college degree in order to double the number of employees having college degrees? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEN1cnJlbnRseSwgMTAlIG9mIHRoZSBlbXBsb3llZXMgaGF2ZSBhIGNvbGxlZ2UgZGVncmVlOyB0aGF0IGlzIDgwIG91dCBvZiB0aGUgODAwIGVtcGxveWVlcy4gICBUbyBkb3VibGUgdGhpcyBudW1iZXIsIHdlIG5lZWQgdG8gaGlyZSA4MCBtb3JlIHN1Y2ggZW1wbG95ZWVzLCBpLmUuIDgwIG91dCBvZiAxMDAuICAgIFRoYXQgaXMgODAlLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 90% ",
        "option2" : " 60% ",
        "option3" : " 80% ",
        "option4" : " 100%      .   "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
