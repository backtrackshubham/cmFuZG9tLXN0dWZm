{
  "testId" : "vision-2023-prelims-2-csat-1",
  "testType" : "csat",
  "fullFilePath" : "upsc-test-series/test-series/2023/vision/prelims/vision-2023-prelims-2-csat-1.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which one of the following is best reflects thecrux of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZW50aW9ucywgJ1N1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzIEluZGV4IGNlbGVicmF0ZXMgcmljaCAgY291bnRyaWVzIHdoaWxlIHR1cm5pbmcgYSBibGluZCBleWUgdG8gdGhlIGRhbWFnZSB0aGV5IGFyZSBjYXVzaW5nLiBJdCB2aW9sYXRlcyB0aGUgcHJpbmNpcGxlIG9mICdzdHJvbmcgIHN1c3RhaW5hYmlsaXR5LCcgd2hpY2ggaG9sZHMgdGhhdCBnb29kIHBlcmZvcm1hbmNlIG9uIGRldmVsb3BtZW50IGluZGljYXRvcnMgY2Fubm90IGxlZ2l0aW1hdGVseSAgc3Vic3RpdHV0ZSBmb3IgZGVzdHJ1Y3RpdmUgbGV2ZWxzIG9mIGVjb2xvZ2ljYWwgaW1wYWN0LicgVGh1cywgZXZlbiBoaWdoIHNjb3JlcyBkb24ndCBuZWNlc3NhcmlseSBlbnN1cmUgIGhpZ2ggbGV2ZWxzIG9mIHN1c3RhaW5hYmlsaXR5LiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QgYXMgdGhlIHBhc3NhZ2Ugb25seSBtZW50aW9ucyB0aGUgJ3JpY2ggY291bnRyaWVzJy4gU28sIHRvIHNwZWNpZmljYWxseSBhc3N1bWUgdGhlbSAgdG8gYmUgTm9yZGljIGNvdW50cmllcyB3b3VsZCBiZSBvdXQgb2YgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgb3BlbmluZyBsaW5lcyBvZiB0aGUgcGFzc2FnZSwgJ0luIGVmZmVjdCwgdGhlIFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzICBJbmRleCBjZWxlYnJhdGVzIHJpY2ggY291bnRyaWVzIHdoaWxlIHR1cm5pbmcgYSBibGluZCBleWUgdG8gdGhlIGRhbWFnZSB0aGV5IGFyZSBjYXVzaW5nJyBjbGVhcmx5ICBoaWdobGlnaHRzIHRoZSBpc3N1ZSB3aXRoIFNERyBpbmRpY2F0b3JzLiBJdCBpbXBsaWVzIHRoYXQgYSBjb3VudHJ5IGNhbiBzY29yZSB3ZWxsIGluIFNERyBkZXZlbG9wbWVudCAgaW5kaWNhdG9ycyBldmVuIHdoZW4gaXQgY2F1c2VzIGVudmlyb25tZW50YWwgZGFtYWdlLiBIb3dldmVyLCB0aGlzIGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZXJlbHkgdGFsa3MgYWJvdXQgdGhlIGlzc3VlcyB3aXRoIFNERyBpbmRpY2F0b3JzIGFuZCBzdG9wcyBzaG9ydCAgb2Ygc3VnZ2VzdGluZyBtZWFzdXJlcyB0byBhZGRyZXNzIHRoZSBwcm9ibGVtLiBUaGlzIG9wdGlvbiBjb3VsZCBoYXZlIGJlZW4gYSBnb29kIHByYWN0aWNhbCBzdWdnZXN0aW9uLCAgYnV0IGl0IGlzIG5vdCB0aGUgY2VudHJhbCBtZXNzYWdlLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Sustainable Development Goals Index creates the illusion that rich countries have high levels of sustainability even if they do not.",
        "option2" : " The Nordic countries even with the highest scores on Sustainable Development Goals Index are some of the most environmentally unsustainable countries.",
        "option3" : " If a country performs well on the development indicators, its score for that goal will look good even if it fails in terms of sustainability.",
        "option4" : " The United Nations needs to redesign the Sustainable Development Goals Index to correct the issues."
      }
    },
    {
      "index" : 2,
      "question" : "With reference to the above passage, thefollowing assumptions have been made:1. Presently every stakeholder in educationalinstitutions is not adequately sensitizedabout transgender persons.2. Before the enactment of the TransgenderPersons Act, there was no any Act in thecountry to deal with transgender persons.3. The said Act will empower the transgenderwhile removing difficulties they face inevery sector.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgYSBuZWVkIGZvciB0aGUgc2Vuc2l0aXphdGlvbiBvZiBzdHVkZW50cywgdGVhY2hlcnMsICBhbmQgc3RhZmYgaW4gYWxsIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucywgZnJvbSBwcmltYXJ5IHNjaG9vbHMgdG8gdW5pdmVyc2l0aWVzLCBvbiB1bmRlcnN0YW5kaW5nIGFuZCAgYWNjZXB0aW5nIHF1ZWVyIGFuZCB0cmFuc2dlbmRlciBmb2xrcy4nIEl0IGNsZWFybHkgaW1wbGllcyB0aGF0IGV2ZXJ5IHN0YWtlaG9sZGVyIGkuZS4gc3R1ZGVudHMsIHRlYWNoZXJzICBhbmQgc3RhZmYgaXMgbm90IGFkZXF1YXRlbHkgc2Vuc2l0aXplZCBhYm91dCB0cmFuc2dlbmRlciBwZXJzb25zLCB3aGljaCBpcyB3aHkgdGhlIGF1dGhvciBtZW50aW9uZWQgdGhlICBuZWVkIGZvciBzZW5zaXRpemF0aW9uIG9mIGFsbCBzdGFrZWhvbGRlcnMuIFNvIHRoaXMgaXMgYSBjb3JyZWN0IHN0YXRlbWVudC4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSB0YWxrcyBhYm91dCBhbnkgQWN0IGJlZm9yZSB0aGUgc2FpZCBBY3QuIFNvIHdlIGNhbm5vdCAgYXNzdW1lIHdoZXRoZXIgdGhlcmUgd2FzIGFueSBsYXcgYmVmb3JlIHRoZSBzYWlkIEFjdCBvciBub3QuIFRoZSBwYXNzYWdlIGFsc28gbm93aGVyZSBjb21wYXJlcyB0aGUgIHNhaWQgQWN0IHdpdGggYW55IG90aGVyIEFjdCBpbiBmb3JjZS4gU28gdGhpcyBpcyBhbiBpbmNvcnJlY3Qgc3RhdGVtZW50LiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0luZGlhIGhhcyB0YWtlbiBhIHN0ZXAgaW4gdGhlIHJpZ2h0IGRpcmVjdGlvbiBieSAgZW5hY3RpbmcgdGhlIFRyYW5zZ2VuZGVyIFBlcnNvbnMgQWN0LCB3aGljaCBzcGVha3Mgb2YgYSB0cmFucy1pbmNsdXNpdmUgZWR1Y2F0aW9uIHN5c3RlbSB3aGVyZWluICB0cmFuc2dlbmRlciBzdHVkZW50cyBsZWFybiB3aXRoIG90aGVyIHN0dWRlbnRzIHdpdGhvdXQgZmVhciBvZiBkaXNjcmltaW5hdGlvbiwgbmVnbGVjdCwgb3IgaGFyYXNzbWVudC4nIEl0ICBpbXBsaWVzIHRoZSByZW1vdmFsIG9mIGRpZmZpY3VsdGllcyBpbiB0aGUgZWR1Y2F0aW9uIHNlY3Rvci4gVGhlIHBhc3NhZ2UgaXMgc2lsZW50IG9uIG90aGVyIHNlY3RvcnMgbGlrZSAgZW1wbG95bWVudCwgcmVzZXJ2YXRpb24sIG1hcnJpYWdlLCBldGMuIFNvIGhlcmUgd2UgY2Fubm90IGFzc3VtZSBhYm91dCBvdGhlciBzZWN0b3JzLiBTbywgdGhpcyBpcyBhbiAgaW5jb3JyZWN0IHN0YXRlbWVudC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 only",
        "option2" : " 1 only",
        "option3" : " 1 and 3 only",
        "option4" : " 2 and 3 only"
      }
    },
    {
      "index" : 3,
      "question" : "Which one of the following statements bestreflects the crux of the passage given above?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1dlIGNhbm5vdCB1bmRlcnBsYXkgdGhlIGltcG9ydGFuY2Ugb2YgY2hhbmdpbmcgIG1pbmRzZXRzLicgIEl0IGhpZ2hsaWdodHMgdGhlIHJvbGUgb2Ygb3ZlcmFsbCBhdHRpdHVkZSBhbmQgbWluZHNldCBpbiBlbXBvd2VyaW5nIHRyYW5zZ2VuZGVyIHBlcnNvbnMuIFRoZSAgcGFzc2FnZSBhbHNvIG1lbnRpb25zLCAnSW5kaWEgaGFzIHRha2VuIGEgc3RlcCBpbiB0aGUgcmlnaHQgZGlyZWN0aW9uIGJ5IGVuYWN0aW5nIHRoZSBUcmFuc2dlbmRlciBQZXJzb25zICBBY3QsIHdoaWNoIHNwZWFrcyBvZiBhIHRyYW5zLWluY2x1c2l2ZSBlZHVjYXRpb24gc3lzdGVtIHdoZXJlaW4gdHJhbnNnZW5kZXIgc3R1ZGVudHMgbGVhcm4gd2l0aCBvdGhlciAgc3R1ZGVudHMgd2l0aG91dCBmZWFyIG9mIGRpc2NyaW1pbmF0aW9uLCBuZWdsZWN0LCBvciBoYXJhc3NtZW50LicgSXQgaW1wbGllcyB3aXRoIHByb3BlciBpbXBsZW1lbnRhdGlvbiBvZiAgc2FpZCBBY3QsIHdlIGNhbiBpbXByb3ZlIHRoZSBjb25kaXRpb25zIG9mIHRyYW5zZ2VuZGVyIHBlcnNvbnMuIEJ1dCB0aGUgYW5zd2VyIG9wdGlvbiB0YWxrcyBhYm91dCAgZW5zdXJpbmcgYSBiZXR0ZXIgd29ybGQgZm9yIHRoZSB0cmFuc2dlbmRlciBldmVuIHdpdGhvdXQgZ29vZCBpbmZyYXN0cnVjdHVyZS4gVGhlIHZlcnkgZmlyc3QgbGluZSBvZiB0aGUgICAgICAgIDIgICAgICAgICAgICAgICAgICBwYXNzYWdlIHNheXMsICdXaGlsZSBpbmZyYXN0cnVjdHVyZSBpcyBlc3NlbnRpYWwgZm9yIGNyZWF0aW5nIHNhZmUgYW5kIGluY2x1c2l2ZSBwbGFjZXMuLi4uJyBIZW5jZSwgdGhpcyAgYW5zd2VyIG9wdGlvbiBnb2VzIGFnYWluc3QgdGhlIGZhY3Qgc3RhdGVkIGluIHRoZSBwYXNzYWdlLiBUaGVyZWZvcmUsIHRoaXMgb3B0aW9uIGlzIGluY29ycmVjdC4gICBPcHRpb24gKGIpIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnV2hpbGUgaW5mcmFzdHJ1Y3R1cmUgaXMgZXNzZW50aWFsIGZvciBjcmVhdGluZyBzYWZlIGFuZCAgaW5jbHVzaXZlIHBsYWNlcywgd2UgY2Fubm90IHVuZGVycGxheSB0aGUgaW1wb3J0YW5jZSBvZiBjaGFuZ2luZyBtaW5kc2V0cy4nIFRoaXMgaW1wbGllcyB3aGlsZSAgaW5mcmFzdHJ1Y3R1cmUgaXMgbmVlZGVkLCBhdHRpdHVkaW5hbCBjaGFuZ2UgaXMgYWxzbyBhIG11c3QuIEhlcmUsIGluZnJhc3RydWN0dXJlIGNhbiBpbmNsdWRlIGxlZ2FsICBpbmZyYXN0cnVjdHVyZSBhcyB3ZWxsLiAgU28gdGhpcyBvcHRpb24gYXB0bHkgY2FwdHVyZXMgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJbmRpYSBoYXMgdGFrZW4gYSBzdGVwIGluIHRoZSByaWdodCBkaXJlY3Rpb24gYnkgZW5hY3RpbmcgIHRoZSBUcmFuc2dlbmRlciBQZXJzb25zIEFjdCwgd2hpY2ggc3BlYWtzIG9mIGEgdHJhbnMtaW5jbHVzaXZlIGVkdWNhdGlvbiBzeXN0ZW0gd2hlcmVpbiB0cmFuc2dlbmRlciAgc3R1ZGVudHMgbGVhcm4gd2l0aCBvdGhlciBzdHVkZW50cyB3aXRob3V0IGZlYXIgb2YgZGlzY3JpbWluYXRpb24sIG5lZ2xlY3QsIG9yIGhhcmFzc21lbnQuJyBJdCBpbXBsaWVzIHRoYXQgIHRoZSBBY3Qgd2lsbCBoZWxwIHRyYW5zZ2VuZGVyIGluIHRoZWlyIGVtcG93ZXJtZW50LiBUaGVyZSBpcyBub3RoaW5nIHdyb25nIHdpdGggdGhpcyBwYXJ0LiBCdXQgdGhlIG9wdGlvbiAgZG9lcyBub3QgbWVudGlvbiBwZW9wbGUncyBtaW5kc2V0cywgd2hpY2ggaXMgZHVseSBlbXBoYXNpc2VkIHVwb24gYnkgdGhlIGF1dGhvci4gU28gdGhpcyBpcyBub3QgdGhlIGJlc3QgIGNydXguIFRoZXJlZm9yZSwgdGhpcyBpcyBhbiBpbmNvcnJlY3Qgb3B0aW9uLiAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgYSBuZWVkIGZvciB0aGUgc2Vuc2l0aXphdGlvbiBvZiBzdHVkZW50cywgIHRlYWNoZXJzLCBhbmQgc3RhZmYgaW4gYWxsIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucywgZnJvbSBwcmltYXJ5IHNjaG9vbHMgdG8gdW5pdmVyc2l0aWVzLCBvbiB1bmRlcnN0YW5kaW5nICBhbmQgYWNjZXB0aW5nIHF1ZWVyIGFuZCB0cmFuc2dlbmRlciBmb2xrcy4nIEl0IGltcGxpZXMgdGhhdCB0aGUgc3Rha2Vob2xkZXJzIGluIHRoZSBlZHVjYXRpb24gc2VjdG9yIG5lZWQgIHRvIGJlIGJldHRlciBzZW5zaXRpemVkIGFib3V0IHRyYW5zZ2VuZGVyIHBlcnNvbnMuIEhvd2V2ZXIsIHRoZSBzdGF0ZW1lbnQgdGFsa3MgYWJvdXQgSW5kaWEgaW4gZ2VuZXJhbC4gIFRoZXJlZm9yZSwgdGhpcyBpcyBhbiBpbmNvcnJlY3Qgb3B0aW9uLiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " With better ethos and proper implementation of the Act we can make a better world for transgender persons, even with poor infrastructure.",
        "option2" : " Both infrastructure and compassion are the keys to the betterment of transgender persons.",
        "option3" : " With the help of said Act, transgender folks can make themselves empowered.",
        "option4" : " India needs to be better sensitized about transgender persons.       3           "
      }
    },
    {
      "index" : 4,
      "question" : "A number is multiplied by six; then its decimalpoint is moved to the left by three spaces. This is the same as what percent of the number? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IExldCdzIGRvIHRoZXNlIHR3byB0aGluZ3MgdG8gMTAwLiBNdWx0aXBseWluZyAxMDAgYnkgNiB5aWVsZHMgNjAwOyBtb3ZpbmcgdGhlIGRlY2ltYWwgcG9pbnQgdGhyZWUgcGxhY2VzICB0byB0aGUgbGVmdCBjaGFuZ2VzIDYwMCwgb3IgNjAwLjAsIHRvIDAuNjAuICBUaGlzIG1lYW5zIHRoYXQgdGhlIG5ldyBudW1iZXIgaXMgMC42MCUgLCBvciAzLzUgJSwgb2YgdGhlIG9yaWdpbmFsIG51bWJlci4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3/100 %",
        "option2" : " 3/5 %",
        "option3" : " 3/50 %",
        "option4" : " 6 %"
      }
    },
    {
      "index" : 5,
      "question" : "N and P are two positive real numbers. If N is20% of P, then what must be the value of P in terms of N? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IE4gaXMgMjAlIG9mIFAgICBTbywgTiA9IFAgw5cgKDIwLzEwMCkgIE9yLCBQID0gNU4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 5N",
        "option2" : " N/2",
        "option3" : " 2N",
        "option4" : " N/5"
      }
    },
    {
      "index" : 6,
      "question" : "If 10% of x is 25% of the half of y, then whatmust be the value of y/x? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFRoaXMgaXMgc2ltcGx5IGEgbWF0dGVyIG9mIGJyZWFraW5nIGRvd24gdGhlIHByb2JsZW0uIDEwIHBlcmNlbnQgb2YgeCBpcyAwLjF4LiAgMjUgcGVyY2VudCBvZiBoYWxmIG9mIHkgaXMgMjUgcGVyY2VudCBvZiAwLjV5LCB3aGljaCBpcyAwLjI1IMOXIDAuNXkgPSB5LzguICBOb3csIGFzIHBlciB0aGUgcXVlc3Rpb24sICAgeC8xMCA9IHkvOCAgb3IgeS94ID0gNC81IA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3/4",
        "option2" : " 8/3",
        "option3" : " 4/5",
        "option4" : " 5/4"
      }
    },
    {
      "index" : 7,
      "question" : "The price of an item is decreased by 10%, thenby 20%, and finally by 30%. This is equivalent to: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IERlY3JlYXNpbmcgYSBwcmljZSBieSAxMCUsIHRoZW4gYnkgMjAlLCBhbmQgdGhlbiBieSAzMCUgaXMgZXF1aXZhbGVudCB0byB0YWtpbmcgOTAlIG9mIGEgcHJpY2UsIHRoZW4gIHRha2luZyA4MCUgb2YgdGhlIHJlbWFpbmluZyBwcmljZSwgYW5kIHRoZW4gdGFraW5nIDcwJSBvZiB0aGF0LiBUaGF0LCBpbiB0dXJuLCBpcyBlcXVpdmFsZW50IHRvIG11bHRpcGx5aW5nICB0aGUgcHJpY2UgYnkgMC45MCwgdGhlbiBieSAwLjgwLCBhbmQgdGhlbiBieSAwLjcwLiAgRm9yIHNpbXBsaWNpdHkncyBzYWtlLCBhc3N1bWUgdGhlIGluaXRpYWwgcHJpY2Ugd2FzIFJzLiAxMDAuIFRoZW4gd2UgY2FuIGNhbGN1bGF0ZSB0aGUgZmluYWwgcHJpY2UgYXMgIGZvbGxvd3M6ICBGaW5hbCBwcmljZSA9IDEwMCDDlyAwLjkgw5cgMC44IMOXIDAuNyA9IFJzLiA1MC40MCAgU28sIHdlIGVzc2VudGlhbGx5IGRpc2NvdW50ZWQgdGhlIG9yaWdpbmFsIHByaWNlIGJ5IFJzLjQ5LjYwLCB3aGljaCBpcyA0OS42JS4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Decreasing the price by 50.4%",
        "option2" : " Decreasing the price by 60%.",
        "option3" : " Decreasing the price by 40.5%",
        "option4" : " Decreasing the price by 49.6%"
      }
    },
    {
      "index" : 8,
      "question" : "A number is multiplied by one-sixth, thendivided by one-seventh, and then multiplied byseven-tenth. Result is what percent of theoriginal number?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IFRoZSBiZXN0IHdheSB0byBkbyB0aGlzIGlzIHRvIHN0YXJ0IHdpdGggMTAwIGFuZCBjYWxjdWxhdGUgdGhlIHJlc3VsdC4gIFRoZSBmaW5hbCBudW1iZXIgd2lsbCBiZSBhcyBmb2xsb3dzOiAgWygxMDAgw5cgMS82KSDDtyAxLzddIMOXIDcvMTAgICA9ICgxMDAvMSkgw5cgKDEvNikgw5cgKDcvMSkgw5cgKDcvMTApICA9IDI0NSAvMyA9IDgxICAyIDMgICUgIFNvLCB0aGUgZmluYWwgbnVtYmVyIHdpbGwgYmUgODEgIDIgMyAgJSBvZiB0aGUgb3JpZ2luYWwgbnVtYmVyLiAgICAgICAgMyAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 49/6%",
        "option2" : " 50/3%",
        "option3" : " 245/3%",
        "option4" : " 5/3%"
      }
    },
    {
      "index" : 9,
      "question" : "M is 35% of N; L is 25% of N. What percent ofM is L?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IE0gaXMgMzUlIG9mIE4sIGFuZCBMIGlzIDI1JSBvZiBOICBTbywgTSA9IDAuMzVOLCBhbmQgTCA9IDAuMjVOLiAgVG8gZmluZCBvdXQgd2hhdCBwZXJjZW50IEwgaXMgb2YgTSwgd2UgbmVlZCB0byBldmFsdWF0ZTogIChML00pIMOXIDEwMCUgPSAoMC4yNU4vMC4zNU4pIMOXMTAwJSA9ICgyNS8zNSkgw5cgMTAwJSA9IDUwMC83ICUgPSA3MSAgMyA3ICAlIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 40.5%",
        "option2" : " 500/7%",
        "option3" : " 140%",
        "option4" : " Data insufficient."
      }
    },
    {
      "index" : 10,
      "question" : "Two statements S1 and S2 are given belowfollowed by a question.S1: N is a multiple of 5.S2: Y is a multiple of 4.Question: X is 40% of N, and N is 75% of Y.Nand Y are positive integers. X is a positiveinteger or not?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IE4gaXMgNzUlIG9mIFkgIFNvLCBOID0gKDMvNCkgWSAgWCBpcyA0MCUgb2YgTiAgU28sIFggPSAoMi81KSBOID0gKDIvNSkgKDMvNCkgWSA9ICgzLzEwKSBZICBTdGF0ZW1lbnQgMTogIE4gaXMgYSBtdWx0aXBsZSBvZiA1LCBhbmQgWCA9ICgyLzUpIE4uIEl0IG1lYW5zIHRoYXQgWCBtdXN0IGJlIGFuIGludGVnZXIsIHBvc2l0aXZlIG9yIG5lZ2F0aXZlLiAgICBTdGF0ZW1lbnQgMjogICBZIGlzIGEgbXVsdGlwbGUgb2YgNCwgYW5kIFggPSAoMy8xMCkgWS4gSXQgbWVhbnMgdGhhdCBYIG1heSBvciBtYXkgbm90IGJlIGFuIGludGVnZXIuICBVc2luZyBib3RoIHN0YXRlbWVudHMgdG9nZXRoZXI6ICBYIG11c3QgYmUgYW4gaW50ZWdlciwgcG9zaXRpdmUgb3IgbmVnYXRpdmUuICBTbywgd2UgY2Fubm90IHRlbGwgZm9yIHN1cmUgd2hldGhlciBYIGlzIGEgcG9zaXRpdmUgaW50ZWdlciBvciAgbm90LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both statements together are insufficient to answer the question.",
        "option2" : " Either statement alone is sufficient to answer the question.",
        "option3" : " Statement 1 alone is sufficient to answer the question, but Statement 2 alone is not sufficient to answer the question.",
        "option4" : " Both statements together are sufficient to answer the question, but neither statement alone is sufficient to answer the question.       4            Directions for the following 4 (four) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following is essentially implied inthe above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlcmUgaXMgbXVjaCBsYXRoZXIgYWJvdXQgcG9saXRpY2FsIGVtcG93ZXJtZW50IG9mICB3b21lbiAtIG9uZSBmYWNldCBiZWluZyByZXNlcnZhdGlvbiBvZiBzZWF0cyBpbiBQYXJsaWFtZW50LiBXaGV0aGVyIHRoYXQgYWxvbmUgd2lsbCBjaGFuZ2UgdGhlICBzdHJhbmdsZWhvbGQgb2YgY2lyY3Vtc3RhbmNlIGlzIGFuIG9wZW4gcXVlc3Rpb24uJyBTbywgdGhlIGF1dGhvciBoaW1zZWxmIGlzIG5vdCBzdXJlIHdoZXRoZXIgcmVzZXJ2YXRpb24gIG9mIHNlYXQgd2lsbCBoZWxwIGluIGltcHJvdmluZyBlY29ub21pYyBjb25kaXRpb25zIG9mIHRoZSB3b21lbi4gSGVuY2UsIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBub3QgIGNvcnJlY3QuICBPcHRpb24gKGIpIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBtZW50aW9ucywgJ0ZlbWFsZSBMYWJvdXIgRm9yY2UgUGFydGljaXBhdGlvbiBSYXRlIGluIHRoZSBHNyAgY291bnRyaWVzIHJhbmdlcyBiZXR3ZWVuIDQyIGFuZCA2MSBwZXIgY2VudC4gSW5kaWEgdHJhaWxzIGFsbCBpdHMgcGVlcnMgYW1vbmcgdGhlIEJSSUNTIG5hdGlvbnMgb24gZmVtYWxlICB3b3JrZm9yY2UgcGFydGljaXBhdGlvbiByYXRlLicgSW5kaWEgaXMgc3VyZWx5IGJlaGluZCBHNyBhbmQgb3RoZXIgQlJJQ1MgbmF0aW9ucywgYnV0IHdlIGNhbm5vdCBzYXkgc28gIGZvciB0aGUgU291dGggQXNpYW4gcmVnaW9uIGFzIHRoZSBkYXRhIGlzIGluYWRlcXVhdGUuICBPcHRpb24gKGMpIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGUgaGlzdG9yeSBvZiBlY29ub21pYyBkZXZlbG9wbWVudCBpcyBleHBsaWNpdCBhYm91dCAgbmVjZXNzYXJ5IGFuZCBzdWZmaWNpZW50IGNvbmRpdGlvbnMgZm9yIHByb3NwZXJpdHkuIE5vIGxhcmdlIGVjb25vbXkgaGFzIGF0dGFpbmVkIGl0cyBsZXZlbCB3aXRob3V0IHRoZSAgcGFydGljaXBhdGlvbiBvZiB3b21lbiBpbiB0aGUgd29ya2ZvcmNlLicgVGhlcmUgaXMgYSBjbGVhciBpbXBsaWNhdGlvbiB0aGF0IGluIG9yZGVyIHRvIGJlY29tZSBhIGxhcmdlICBlY29ub215LCBwYXJ0aWNpcGF0aW9uIG9mIHdvbWVuIGluIHRoZSB3b3JrZm9yY2UgaXMgYSBuZWNlc3NpdHkuIFRodXMsIHRoaXMgc3RhdGVtZW50IGlzIGRpcmVjdGx5IGltcGxpZWQgIGluIHRoZSBwYXNzYWdlLiAgQWxzLG8gdGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGVyZSBpcyBtZXJpdCBpbiB0aGUgYXJndW1lbnQgdGhhdCBlY29ub21pYyBlbXBvd2VybWVudCAgZW5hYmxlcyBhbmQgcHJvcGVscyBwb2xpdGljYWwgZW1wb3dlcm1lbnQuJyBUaHVzLCBlY29ub21pYyBwYXJ0aWNpcGF0aW9uIGJlY29tZXMgaW1wb3J0YW50IGZvciAgcG9saXRpY2FsIGVtcG93ZXJtZW50IHRvby4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gUmVmZXIgdG8gdGhlIGxpbmU6ICdZZXQgYmFyZWx5IDE5IHBlciBjZW50IG9mIEluZGlhbiB3b21lbiBvZiB3b3JraW5nIGFnZSAgcGFydGljaXBhdGVkIGluIHRoZSBsYWJvdXIgZm9yY2UgaW4gMjAyMSBhcyBwZXIgdGhlIFdvcmxkIEJhbmsuJyBUaGUgcGFzc2FnZSBtZW50aW9ucyBvbmx5IHRoZSAgcGVyY2VudGFnZSB0ZXJtcyBhYm91dCBmZW1hbGUgbGFib3VyIGZvcmNlIHBhcnRpY2lwYXRpb24uIFRoZXJlIGlzIG5vIGluZGljYXRpb24gdG93YXJkcyB3aGV0aGVyIG9yIG5vdCBpdCAgaGFzIHRoZSBsYXJnZXN0IG51bWJlciBvZiB3b21lbiBpbiB3b3JraW5nLWFnZSBwb3B1bGF0aW9uLiBBbHNvLCBldmVuIGlmIHRydWUsIHRoaXMgc3RhdGVtZW50IGlzIG5vdCB0aGUgIGJlc3QgaW1wbGllZCBzdGF0ZW1lbnQgb2YgdGhlIHBhc3NhZ2UsIGFzIHRoZSBwYXNzYWdlIGlzIGNlbnRlcmVkIGFyb3VuZCB0aGUgbmVlZCBvZiBlY29ub21pYyAgZW1wb3dlcm1lbnQgb2Ygd29tZW4gYW5kIHRoZWlyIHBvb3IgbGV2ZWxzIGluIEluZGlhLCBub3QgdGhlaXIgcmVsYXRpdmUgbnVtYmVycyBpbiB3b3JraW5nIGFnZSAgcG9wdWxhdGlvbi4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Reservation of seats in Indian Parliament for women is needed for their economic  empowerment. ",
        "option2" : " India has the lowest levels of female workforce participation rate in the South  Asia. ",
        "option3" : " Participation of women in the workforce is a necessary condition for prosperity. ",
        "option4" : " India is expected to continue to have the largest number of women in working-age  population. "
      }
    },
    {
      "index" : 12,
      "question" : "What is the most logical and rationalinference that can be made from the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gdGhlc2Ugc3RlcHMgKHByb3Zpc2lvbiBvZiBsb25nZXIgbWF0ZXJuaXR5IGxlYXZlLCAgY3LDqGNoZSBmYWNpbGl0aWVzIGFuZCBlcXVhbCByZW11bmVyYXRpb24pIGZvciBpbXByb3ZpbmcgZmVtYWxlIGxhYm91ciBwYXJ0aWNpcGF0aW9uLiBJdCBpcyBjb21wbGV0ZWx5ICBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoaXMgcGFzc2FnZS4gIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGlzIGNsZWFybHkgY2VudGVyZWQgb24gZmVtYWxlIGxhYm91ciBwYXJ0aWNpcGF0aW9uLiBUbyBpbmZlciBhICBnZW5lcmljIHN0YXRlbWVudCBvbiBkZW1vZ3JhcGhpYyBkaXZpZGVuZCAoaW5jbHVkZXMgYm90aCBtYWxlIGFuZCBmZW1hbGUpIHdvdWxkIGJlIG91dCBvZiB0aGUgc2NvcGUgb2YgIHRoZSBwYXNzYWdlLiBBbHNvLCB0aGVyZSdzIG5vIGRpc2N1c3Npb24gb24gcnVyYWwtdXJiYW4gcGFyYW1ldGVycy4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zIHRoYXQgRzcgaGF2ZSBoaWdoZXIgZmVtYWxlIGxhYm91ciBwYXJ0aWNpcGF0aW9uOyBidXQgIGl0IGRvZXMgbm90IHJldmVhbCBtdWNoIGFib3V0IHBvbGl0aWNhbCByZXByZXNlbnRhdGlvbiBvZiB3b21lbi4gQWxzbywgdGhlIGxpbmUgaW4gdGhlIHBhc3NhZ2UgLSAnVGhlcmUgaXMgIG1lcml0IGluIHRoZSBhcmd1bWVudCB0aGF0IGVjb25vbWljIGVtcG93ZXJtZW50IGVuYWJsZXMgYW5kIHByb3BlbHMgcG9saXRpY2FsIGVtcG93ZXJtZW50JywgY291bGQgICAgICAgIDQgICAgICAgICAgICAgICAgICBtZWFuIHRoYXQgaGlnaGVyIGxldmVscyBvZiBwb2xpdGljYWwgcmVwcmVzZW50YXRpb24gb2Ygd29tZW4gaXMgZHVlIHRvIGVjb25vbWljIGVtcG93ZXJtZW50LiBIb3dldmVyLCAgd2UgY2Fubm90IGdlbmVyYWxpc2UgaXQgdG8gQUxMIGNvdW50cmllcyBhcyBtZW50aW9uZWQgaW4gdGhpcyBhbnN3ZXIgb3B0aW9uLiBIZW5jZSwgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzICBpbmNvcnJlY3QuICBPcHRpb24gKGQpIGlzIGNvcnJlY3QgYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsJyBUaGVyZSBpcyBtdWNoIGxhdGhlciBhYm91dCBwb2xpdGljYWwgZW1wb3dlcm1lbnQgb2YgIHdvbWVuIC0gb25lIGZhY2V0IGJlaW5nIHJlc2VydmF0aW9uIG9mIHNlYXRzIGluIFBhcmxpYW1lbnQuLi4uLiBUaGVyZSBpcyBubyBkaXNwdXRpbmcgdGhhdCBzb2NpYWwgYW5kICBlY29ub21pYyBjb25kaXRpb25zIGFyZSBhIGNvbnRyaWJ1dG9yeSBmYWN0b3IuJyBUaHVzLCBib3RoIHNvY2lhbCBhbmQgZWNvbm9taWMgZmFjdG9ycyBhcmUgcmVzcG9uc2libGUgIGZvciBwb29yIGxldmVscyBvZiBwb2xpdGljYWwgZW1wb3dlcm1lbnQgb2Ygd29tZW4uIEFsc28sIHRoZSBkZW1hbmQgb2YgcmVzZXJ2YXRpb24gb2Ygc2VhdHMgaW4gIFBhcmxpYW1lbnQgc2hvd3MgdGhhdCB0aGVpciByZXByZXNlbnRhdGlvbiBpcyBsb3cuICBIZW5jZSwgYm90aCBhcmd1bWVudHMgb2YgdGhpcyBhbnN3ZXIgb3B0aW9uIGFyZSAgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " India should make provision of longer maternity leave, crèche facilities and equal  remuneration. ",
        "option2" : " India cannot harness the demographic dividend till the working-age rural  populace finds remunerative employment. ",
        "option3" : " All countries with high levels of female labour participation have comparatively  high levels of political representation of  women. ",
        "option4" : " India is facing low political representation of women due to both social and economic  factors.        5           "
      }
    },
    {
      "index" : 13,
      "question" : "Which one of the following statements bestreflects the most logical, rational and practicalsuggestion implied by the passage givenabove?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0V2ZW4gYWZ0ZXIgc2hlIGhhcyBwYXNzZWQgdGhlIENsYXNzIFhJSSBleGFtaW5hdGlvbiAgd2l0aCBkaXN0aW5jdGlvbiwgYSBzdHVkZW50IG1heSBub3QgYmUgZXF1aXBwZWQgdG8gY3JpdGljYWxseSBleGFtaW5lIHRoZSBjbGFpbXMgbWFkZSBieSBhIHNjaG9sYXIsICBwcm9wb3NlIGFsdGVybmF0aXZlIGh5cG90aGVzZXMgYW5kIGluaXRpYXRlIGEgbmV3IGxpbmUgb2YgcmF0aW9uYWwgZW5xdWlyeS4nIEl0IGltcGxpZXMgd2UgbXVzdCBhbHNvIGZvY3VzICBvbiBwcm9maWNpZW5jeSB0ZXN0cyBhbG9uZyB3aXRoIGFjaGlldmVtZW50IHRlc3RzLiBUaGVyZSBpcyBubyBtZW50aW9uIGFib3V0IHdoZXRoZXIgaXQgaXMgcG9zc2libGUgdG8gIGZvY3VzIG9uIHByb2ZpY2llbmN5IHRlc3RzIG9yIG5vdC4gRnVydGhlcm1vcmUsIHRoZXJlIGlzIG5vIGluZGljYXRpb24gdG93YXJkcyB0aGUgc3ViamVjdGl2aXR5IGludm9sdmVkIGluIGEgIHByb2ZpY2llbmN5IHRlc3QuIEhlbmNlLCB0aGlzIGFuc3dlciBvcHRpb24gaXMgaW5jb3JyZWN0LiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIGEgY2F0Y2ggaW4gdGhpcyBhbnN3ZXIgb3B0aW9uLiBZb3UgbWlnaHQgbWlzcyB0aGUgd29yZCAnbm90JyB3cml0dGVuICBiZWZvcmUgJ3JhdGlvbmFsIGVucXVpcnknIGluIHRoaXMgYW5zd2VyIHN0YXRlbWVudC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB3aGV0aGVyIGNyaXRpY2FsICB0aGlua2luZyBhbmQvb3IgcmF0aW9uYWwgZW5xdWlyeSBtYWtlIGEgc3R1ZGVudCBtb3JlIGludGVsbGlnZW50LiBJdCBqdXN0IGZvY3VzZXMgb24gdGhlIGltcG9ydGFuY2Ugb2YgIHByb2ZpY2llbmN5IHRlc3RzIChub3QganVzdCBhY2hpZXZlbWVudCB0ZXN0cykuIEZhY3R1YWxseSwgaXQgaXMgcHJvYmFibGUgdGhhdCBib3RoIGNyaXRpY2FsIHRoaW5raW5nIGFuZCAgcmF0aW9uYWwgZW5xdWlyeSBhY2NvdW50IGZvciBpbnRlbGxpZ2VuY2UsIGJ1dCB0aGlzIGlzIG5vdCB0b3VjaGVkIHVwb24gaW4gdGhpcyBwYXNzYWdlLiBTbyB0aGlzIG9wdGlvbiBpcyAgaW5jb3JyZWN0LiAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgYW5zd2VyIG9wdGlvbiBpcyBjbG9zZS4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdFdmVuIGFmdGVyIHNoZSBoYXMgcGFzc2VkICB0aGUgQ2xhc3MgWElJIGV4YW1pbmF0aW9uIHdpdGggZGlzdGluY3Rpb24sIGEgc3R1ZGVudCBtYXkgbm90IGJlIGVxdWlwcGVkIHRvIGNyaXRpY2FsbHkgZXhhbWluZSB0aGUgY2xhaW1zICBtYWRlIGJ5IGEgc2Nob2xhci4nIEl0IGltcGxpZXMgdGV4dGJvb2sga25vd2xlZGdlIGRvZXMgbm90IG1ha2UgYSBzdHVkZW50IGNhcGFibGUgdG8gaGFuZGxlIGNsYWltcyAgbWFkZSBieSBhIHNjaG9sYXIuIFNvIHRoZSBzdGF0ZW1lbnQgaXMgY29ycmVjdCBidXQgaXQgaXMgbm90IHRoZSBiZXN0IHN1Z2dlc3Rpb24gaW4gY29tcGFyaXNvbiB0byBvcHRpb24gKGQpLiAgT3B0aW9uIChkKSBhbHNvIG1lbnRpb25zIHRoZSByZWxldmFuY2Ugb2YgcHJvZmljaWVuY3kgdGVzdHMgaW4gY29tcGFyaXNvbiB0byBhY2hpZXZlbWVudCB0ZXN0cy4gIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdFdmVuIGFmdGVyIHNoZSBoYXMgcGFzc2VkIHRoZSBDbGFzcyBYSUkgZXhhbWluYXRpb24gd2l0aCAgZGlzdGluY3Rpb24sIGEgc3R1ZGVudCBtYXkgbm90IGJlIGVxdWlwcGVkIHRvIGNyaXRpY2FsbHkgZXhhbWluZSB0aGUgY2xhaW1zIG1hZGUgYnkgYSBzY2hvbGFyLCBwcm9wb3NlICBhbHRlcm5hdGl2ZSBoeXBvdGhlc2VzIGFuZCBpbml0aWF0ZSBhIG5ldyBsaW5lIG9mIHJhdGlvbmFsIGVucXVpcnkuJyBUaGUgb3ZlcmFsbCB0aGVtZSBvciBzdWdnZXN0aW9uIG9mIHRoZSAgcGFzc2FnZSBob3ZlcnMgYXJvdW5kIHRoZSBjcnVjaWFsIHJvbGUgb2Yga25vd2xlZGdlIGFuZCBjcml0aWNhbCB0aGlua2luZywgY29tcGFyZWQgdG8gYWNoaWV2aW5nIG9ubHkgIGRpc3RpbmN0aW9uIGluIGV4YW1pbmF0aW9uLiBTbyB0aGlzIHN0YXRlbWVudCBiZXN0IHJlZmxlY3RzIHRoZSBzdWdnZXN0aW9uIGltcGxpZWQgYnkgdGhlIHBhc3NhZ2UuIFNvIHRoaXMgaXMgIHRoZSBjb3JyZWN0IG9wdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is not possible to focus on proficiency tests because of the subjectivity involved therein.",
        "option2" : " Critical thinking and not rational enquiry makes a student more intelligent.",
        "option3" : " The knowledge acquired through prescribed textbooks is not enough to deal with claims made by scholars.",
        "option4" : " The criteria for academic outcome must be knowledge and critical thinking, rather than good grades."
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the above passage, thefollowing assumptions have been made:1. Social media has disturbed meaningfulpolitics.2. Physical organization is the best way forany meaningful discussion.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSG93ZXZlciwgdGhlIHN0cnVjdHVyZSBvZiBzb2NpYWwgbWVkaWEgaGFzIGZhY2lsaXRhdGVkIGEgIHBlcmNlcHRpb24gb2YgZW5nYWdlbWVudCB3aXRob3V0IG9yZ2FuaXphdGlvbiwgYWN0aW9uIHdpdGhvdXQgY29uc2VxdWVuY2UuJyBUaGlzIG1lYW5zIHRoYXQgYWZ0ZXIgdGhlICBhcnJpdmFsIG9mIHNvY2lhbCBtZWRpYSwgdGhlIGxvY2FsIG9yZ2FuaXphdGlvbiwgZGlzY3Vzc2lvbiBhbmQgbmVnb3RpYXRpb24gKGNvbXBvbmVudHMgb2YgbWVhbmluZ2Z1bCAgcG9saXRpY3MpIGhhdmUgYmVlbiBkaXN0dXJiZWQgYXMgdGhlIGVuZ2FnZW1lbnQgdGFrZXMgcGxhY2Ugd2l0aG91dCBvcmdhbml6aW5nIHBlb3BsZSBhbmQgYWN0aW9ucyBhcmUgIGNvbW1pdHRlZCB3aXRob3V0IGFueSBjb25zZXF1ZW5jZXMuIFNvIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zIHRoZSByb2xlIG9mIG9mZmxpbmUgb3JnYW5pemF0aW9ucyBhbmQgdGhlIHNob3J0Y29taW5ncyBvZiAgc29jaWFsIG1lZGlhIGluIHRoZSBvcmdhbml6YXRpb24uIEJ1dCB0aGUgcGFzc2FnZSBub3doZXJlIG1lbnRpb25zIHRoYXQgcGh5c2ljYWwgb3JnYW5pemF0aW9uIGlzIGJldHRlciBpbiAgY29tcGFyaXNvbiB0byBhIHZpcnR1YWwgb3JnYW5pemF0aW9uLCBsZWF2ZSBhbG9uZSBiZXN0LiBTbyB0aGlzIGlzIGFuIGluY29ycmVjdCBzdGF0ZW1lbnQuIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 15,
      "question" : "If the price of petrol increases by 25% but Rajintends to spend only an additional 15% onpetrol, by how much percent should he reducethe quantity of petrol purchased?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IExldCB0aGUgcHJpY2Ugb2YgMSBsaXRyZSBvZiBwZXRyb2wgYmUgUnMuIHggYW5kIHRoZSBpbml0aWFsIGFtb3VudCBib3VnaHQgYnkgUmFqIGJlICd5JyBsaXRyZXMgb2YgcGV0cm9sLiAgIFRoZXJlZm9yZSwgaGUgd291bGQgaGF2ZSBzcGVudCBScy4geHkgb24gcGV0cm9sLiAgIFdoZW4gdGhlIHByaWNlIG9mIHBldHJvbCBpbmNyZWFzZXMgYnkgMjUlLCB0aGUgbmV3IHByaWNlIHBlciBsaXRyZSBvZiBwZXRyb2wgd2lsbCBiZSBScy4gMS4yNXguICAgUmFqIGludGVuZHMgdG8gaW5jcmVhc2UgdGhlIGFtb3VudCBoZSBzcGVuZHMgb24gcGV0cm9sIGJ5IDE1JS4gaS5lLiwgaGUgaXMgd2lsbGluZyB0byBzcGVuZCB4eSArIDE1JSBvZiB4eSAgPSBScy4gMS4xNXh5ICAgTGV0IHRoZSBuZXcgcXVhbnRpdHkgb2YgcGV0cm9sIHRoYXQgaGUgY2FuIGdldCBiZSAncScgbGl0cmVzLiAgIFRoZW4sIDEuMjV4IMOXIHEgPSAxLjE1eHkgIE9yIHEgPSAxLjE1eHkvMS4yNXggIE9yIHEgPSAoMS4xNS8xLjI1KXkgPSAwLjkyeSAgICAgICAgNSAgICAgICAgICAgICAgICAgIEFzIHRoZSBuZXcgcXVhbnRpdHkgdGhhdCBoZSBjYW4gYnV5IGlzIDAuOTJ5LCBoZSBnZXRzIDAuMDh5IGxlc3NlciB0aGFuIHdoYXQgaGUgdXNlZCB0byBnZXQgZWFybGllci4gIFJlcXVpcmVkIHBlcmNlbnRhZ2UgPSAoMC4wOHkveSkgw5cgMTAwID0gOCUgIFRodXMsIFJhaiBoYXMgdG8gcmVkdWNlIHRoZSBxdWFudGl0eSBvZiBwZXRyb2wgYmVpbmcgcHVyY2hhc2VkIGJ5IDglLiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10%",
        "option2" : " 12%",
        "option3" : " 8%",
        "option4" : " 6.67%"
      }
    },
    {
      "index" : 16,
      "question" : "A shepherd has 1 million sheep at thebeginning of the year 2000. The number ofsheep grows by x% (x > 0) during the year. Afamine hits his village in the next year andmany of his sheep die. The sheep populationdecreases by y% during 2001 and at thebeginning of 2002 the shepherd finds that he isleft with 1 million sheep. Which of thefollowing is correct?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IE51bWJlciBvZiBzaGVlcCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyIDIwMDAgYW5kIGF0IHRoZSBlbmQgb2YgMjAwMSBpcyBzYW1lLCBpLmUuIDEgbWlsbGlvbi4gICd4JyBpcyB0aGUgcGVyY2VudGFnZSBvZiBzaGVlcCBpbmNyZWFzZSBpbiB0aGUgeWVhciAyMDAwLCBhbmQgJ3knIGlzIHRoZSAgcGVyY2VudGFnZSBkZWNyZWFzZSBvZiBzaGVlcCBpbiAgdGhlIHllYXJyIDIwMDEuICBMZXQgdXMgYXNzdW1lIHRoZSB2YWx1ZSBvZiB4IHRvIGJlIDEwJS4gICBUaGVyZWZvcmUsIHRoZSBudW1iZXIgb2Ygc2hlZXAgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgeWVhciAyMDAxIChlbmQgb2YgMjAwMCkgd2lsbCBiZSAxIG1pbGxpb24gKyAxMCUgb2YgIDEgbWlsbGlvbiA9IDEuMSBtaWxsaW9uICAgSW4gMjAwMSwgdGhlIG51bWJlciBvZiBzaGVlcCBkZWNyZWFzZXMgYnkgeSUgYW5kIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIHRoZSBudW1iZXIgb2Ygc2hlZXAgaW4gdGhlIGhlcmQgIGlzIDEgbWlsbGlvbi4gaS5lLiAwLjEgbWlsbGlvbiBzaGVlcCBoYXZlIGRpZWQgaW4gMjAwMS4gICBTbywgUGVyY2VudGFnZSBkZWNyZWFzZSBvZiBzaGVlcCBpbiB0aGUgeWVhciAyMDAxLCB5ID0gKDAuMS8xLjEpIMOXIDEwMCAlID0gOS4wOSUgICBTbywgeCA9IDEwJSBhbmQgeSA9IDkuMDklIEZyb20gdGhlIGFib3ZlIGlsbHVzdHJhdGlvbiwgaXQgaXMgY2xlYXIgdGhhdCB4ID4geSBpcyBjb3JyZWN0LiAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " x > y",
        "option2" : " y > x",
        "option3" : " x = y",
        "option4" : " Cannot be determined       6           "
      }
    },
    {
      "index" : 17,
      "question" : "In an election contested by two parties, Party Dsecured 12% of the total votes more than PartyR. If party R got 132,000 votes and there are noinvalid votes, then by how many votes did it lose the election?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IExldCB0aGUgcGVyY2VudGFnZSBvZiB0aGUgdG90YWwgdm90ZXMgc2VjdXJlZCBieSBQYXJ0eSBEIGJlIHglLCB0aGVuIHRoZSBwZXJjZW50YWdlIG9mIHRvdGFsIHZvdGVzIHNlY3VyZWQgIGJ5IFBhcnR5IFIgd2lsbCBiZSAoeCAtIDEyKSUuICBBcyB0aGVyZSBhcmUgb25seSB0d28gcGFydGllcyBjb250ZXN0aW5nIGluIHRoZSBlbGVjdGlvbiwgdGhlIHN1bSB0b3RhbCBvZiB0aGUgdm90ZXMgc2VjdXJlZCBieSB0aGUgdHdvICBwYXJ0aWVzIHNob3VsZCBzdW0gdXAgdG8gMTAwJSBhcyB0aGVyZSBhcmUgbm8gaW52YWxpZCB2b3Rlcy4gIFNvLCB4ICsgKHggLSAxMikgPSAxMDAgICBvciAyeCAtIDEyID0gMTAwICBvciAyeCA9IDExMiAgIG9yIHggPSA1NiUgICBUaHVzLCBQYXJ0eSBEIGdvdCA1NiUgb2YgdGhlIHRvdGFsIHZvdGVzLiAgIFNvLCBQYXJ0eSBSIHdpbGwgZ2V0ICg1NiAtIDEyKSUsIGkuZS4gNDQlIG9mIHRoZSB0b3RhbCB2b3Rlcy4gICBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCAgNDQlIG9mIHRoZSB0b3RhbCB2b3RlcyA9IDEzMiwwMDAgIE9yICg0NC8xMDApIG9mIHRoZSB0b3RhbCB2b3RlcyA9IDEzMiwwMDAgICBTbywgVG90YWwgdm90ZXMgPSAxMzIwMDAgw5cgKDEwMC80NCkgPSAzMDAsMDAwICBUaGUgbWFyZ2luIGJ5IHdoaWNoIFBhcnR5IFIgbG9zdCB0aGUgZWxlY3Rpb24gPSAxMiUgb2YgdGhlIHRvdGFsIHZvdGVzID0gMTIlIG9mIDMwMCwwMDAgPSAoMTIvMTAwKSDDlyAgMzAwLDAwMCA9IDM2LDAwMCAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 300,000",
        "option2" : " 16,800",
        "option3" : " 36,000",
        "option4" : " 24,000"
      }
    },
    {
      "index" : 18,
      "question" : "A candidate who gets 20% marks, fails by 10marks. Another candidate who gets 42% marks,gets 12% of the maximum marks more than thepassing marks. Find the maximum marks.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IExldCB0aGUgbWF4aW11bSBtYXJrcyBiZSAneCcuICBDYW5kaWRhdGUgd2hvIGdldHMgNDIlIG1hcmtzLCBnZXRzIDEyJSBvZiB0aGUgbWF4aW11bSBtYXJrcyBtb3JlIHRoYW4gdGhlIHBhc3NpbmcgbWFya3MuICBTbywgUGFzcyBwZXJjZW50YWdlID0gKDQyIC0gMTIpJSBvZiB4ID0gMzAlIG9mIHggICBDYW5kaWRhdGUgd2hvIGdldHMgMjAlIG1hcmtzLCBmYWlscyBieSAxMCBtYXJrcy4gIFNvLCBQYXNzIHBlcmNlbnRhZ2UgPSAyMCUgb2YgeCArIDEwICBTbywgMzAlIG9mIHggPSAyMCUgb2YgeCArIDEwICBPciAzMCUgb2YgeCAtIDIwJSBvZiB4ID0gMTAgIE9yIDEwJSBvZiB4ID0gMTAgIE9yIHggPSAoMTAvMTApIMOXIDEwMCA9IDEwMCAgVGhlcmVmb3JlLCBtYXhpbXVtIG1hcmtzID0gMTAwICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50",
        "option2" : " 100",
        "option3" : " 150",
        "option4" : " 200"
      }
    },
    {
      "index" : 19,
      "question" : "When processing flower-nectar into honeybees'extract, a considerable amount of water getswasted. How much flower-nectar must beprocessed to yield 1 kg of honey, if nectarcontains 50% water, and the honey obtainedfrom this nectar contains 15% water?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IExldCB0aGUgYW1vdW50IG9mIGZsb3dlci1uZWN0YXIgbmVlZGVkIGJlIHgga2cuICAgRmxvd2VyLW5lY3RhciBjb250YWlucyA1MCUgd2F0ZXIuIFNvLCBmbG93ZXItbmVjdGFyIGNvbnRhaW5zIDUwJSBvZiBub24td2F0ZXJ5IHBhcnQuICBIb25leSBjb250YWlucyAxNSUgd2F0ZXIuIFNvLCBhbW91bnQgb2Ygbm9uLXdhdGVyeSBwYXJ0IGluIHRoZSBob25leSB3aWxsIGJlIDg1JS4gICAgICAgIDYgICAgICAgICAgICAgICAgICBXaGVuIHByb2Nlc3NpbmcgZmxvd2VyLW5lY3RhciBpbnRvIGhvbmV5YmVlcycgZXh0cmFjdCwgb25seSB0aGUgd2F0ZXIgaXMgbG9zdCBkdXJpbmcgcHJvY2Vzc2luZy4gIEhlbmNlLCB0aGUgbm9uLXdhdGVyeSBwYXJ0IGluIGZsb3dlci1uZWN0YXIgc2hvdWxkIGJlIGVxdWFsIHRvIHRoZSBub24td2F0ZXJ5IHBhcnQgaW4gaG9uZXkuICDiiLQgNTAlIG9mIHRoZSBBbW91bnQgb2YgZmxvd2VyLW5lY3RhciBuZWVkZWQgPSA4NSUgb2YgdGhlIEFtb3VudCBvZiBob25leSAgIE9yIDAuNSDDlyB4ID0gMC44NSDDlyAxIGtnICBPciB4ID0gKDAuODUvMC41KSDDlyAxIGtnID0gMS43IGtnICBUaGVyZWZvcmUsIHRoZSBhbW91bnQgb2YgZmxvd2VyLW5lY3RhciBuZWVkZWQgaXMgMS43IGtnLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1.5 kg",
        "option2" : " 1.7 kg",
        "option3" : " 3.33 kg",
        "option4" : " 2.2 kg"
      }
    },
    {
      "index" : 20,
      "question" : "30% of the men are more than 25 years old, and80% of the men are less than or equal to 50years old. 20% of all men play football. If 20%of the men above the age of 50 play football,what percentage of the football players are lessthan or equal to 50 years?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IDgwJSBvZiB0aGUgbWVuIGFyZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gNTAgeWVhcnMgb2xkLiBTbywgMjAlIG9mIHRoZSBtZW4gYXJlIGFib3ZlIHRoZSBhZ2Ugb2YgNTAgeWVhcnMuICAyMCUgb2YgdGhlc2UgbWVuIHBsYXkgZm9vdGJhbGwuICAgVGhlcmVmb3JlLCAyMCUgb2YgMjAlLCBpLmUuICA0JSBvZiB0aGUgdG90YWwgbWVuIGFyZSBmb290YmFsbCBwbGF5ZXJzIGFib3ZlIHRoZSBhZ2Ugb2YgNTAgeWVhcnMuICAgMjAlIG9mIHRoZSBtZW4gYXJlIGZvb3RiYWxsIHBsYXllcnMuICAgVGhlcmVmb3JlLCAxNiUgb2YgdGhlIG1lbiBhcmUgZm9vdGJhbGwgcGxheWVycyBiZWxvdyBvciBlcXVhbCB0byB0aGUgYWdlIG9mIDUwIHllYXJzLiAgVGhlcmVmb3JlLCB0aGUgcGVyY2VudGFnZSBvZiBmb290YmFsbCBwbGF5ZXJzIGJlbG93IG9yIGVxdWFsIHRvIHRoZSBhZ2Ugb2YgNTAgeWVhcnMgPSAoMTYvMjApIMOXIDEwMCA9IDgwJSAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 15%",
        "option2" : " 20%",
        "option3" : " 80%",
        "option4" : " 70% Directions for the following 5 (five) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 21,
      "question" : "Based on the passage given above, thefollowing assumptions have been made:1. Use of antibiotics among cattle should bereduced for preventing harmful effects onthe population.2. Reduced use of antibiotics will lead toreduction in milk production.Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIGlzIGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgbGluZXMgJ0JhY3RlcmlhbCBpbmZlY3Rpb25zIGNhbiBiZSAgaGFybWZ1bCB0byB0aGUgY293IGFuZCBjYW4gYWxzbyBpbmZlY3QgdGhlIG1pbGsgYW5kIG1lYXQgY29uc3VtZWQgYnkgcGVvcGxlLiBBbnRpYmlvdGljcyBhcmUgc3BsaWNlZCBpbnRvICB0aGUgRE5BIG9mIGZlZWQgY29ybiB0byBwcmV2ZW50IHN1Y2ggaW5mZWN0aW9uLiBBbnRpYmlvdGljcyBoYXZlIGJlZW4gdXNlZCBzaW5jZSB0aGUgMTk1MHMgdG8gc3RpbXVsYXRlICBjYXR0bGUgZ3Jvd3RoLiBPdmVyIHRpbWUsIHRoaXMgcHJhY3RpY2UgaGFzIGxlZCB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgYW50aWJpb3RpYy1yZXNpc3RhbnQgYmFjdGVyaWEgaW4gY2F0dGxlICBhbmQgcGVvcGxlJy4gVGhlc2UgbGluZXMgc2hvdyB0aGF0IHRoZSB1c2Ugb2YgYW50aWJpb3RpY3MgaXMgaGFybWZ1bCBhbmQgdGhlcmVmb3JlIGl0cyB1c2Ugc2hvdWxkIGJlICByZWR1Y2VkLiAgU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBjb3JyZWN0LiAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoaXMgZ2l2ZW4gb3B0aW9uIGlzIG5vdCBjb3JyZWN0IGFuZCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgQWx0aG91Z2ggdGhpcyBzZWVtcyB0byBiZSBhIGNvcnJlY3QgaW5mZXJlbmNlLCBpdCBpcyBub3QgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIGluIHRoZSBwYXNzYWdlLiBUaGVyZSBpcyBubyAgZGlyZWN0IHJlbGF0aW9uc2hpcCBlc3RhYmxpc2hlZCBpbiB0aGUgcGFzc2FnZSBiZXR3ZWVuIHRoZSByZWR1Y3Rpb24gaW4gdGhlIHVzZSBvZiBhbnRpYmlvdGljcyBhbmQgcmVkdWN0aW9uICBpbiBtaWxrIHByb2R1Y3Rpb24uIFNvLCB0aGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2       7           "
      }
    },
    {
      "index" : 22,
      "question" : "Which one of the following statements bestimplies the suggestion given by the author ofthe passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdCYWN0ZXJpYWwgaW5mZWN0aW9ucyBjYW4gYmUgaGFybWZ1bCB0byB0aGUgY293IGFuZCBjYW4gYWxzbyBpbmZlY3QgdGhlICBtaWxrIGFuZCBtZWF0IGNvbnN1bWVkIGJ5IHBlb3BsZS4gQW50aWJpb3RpY3MgYXJlIHNwbGljZWQgaW50byB0aGUgRE5BIG9mIGZlZWQgY29ybiB0byBwcmV2ZW50IHN1Y2ggIGluZmVjdGlvbi4gQW50aWJpb3RpY3MgaGF2ZSBiZWVuIHVzZWQgc2luY2UgdGhlIDE5NTBzIHRvIHN0aW11bGF0ZSBjYXR0bGUgZ3Jvd3RoLiBPdmVyIHRpbWUsIHRoaXMgcHJhY3RpY2UgIGhhcyBsZWQgdG8gdGhlIGRldmVsb3BtZW50IG9mIGFudGliaW90aWMtcmVzaXN0YW50IGJhY3RlcmlhIGluIGNhdHRsZSBhbmQgcGVvcGxlJywgaW1wbHkgdGhhdCBvdmVyIHRpbWUgdGhlICBjb250aW51ZWQgdXNlIG9mIGFudGliaW90aWNzIGNhbiBsZWFkIHRvIGNyZWF0aW9uIG9mIGFudGliaW90aWMtcmVzaXN0YW50IG1pY3Jvb3JnYW5pc21zLCBhbmQgdGhlcmVmb3JlIGl0ICB3b3VsZCBiZSB3aXNlIHRvIHJlZHVjZSB0aGUgdXNlIG9mIGFudGliaW90aWNzLiBTbywgdGhpcyBvcHRpb24gaXMgdGhlIGNvcnJlY3Qgc3VnZ2VzdGlvbiBtYWRlIGJ5IHRoZSAgYXV0aG9yLiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gY29uY2VybmluZyByZXNlYXJjaCBmb3IgdGhlIGRldmVsb3BtZW50IG9mIGFueSBraW5kIG9mICBhbHRlcm5hdGl2ZSB0byBhbnRpYmlvdGljcy4gVGhlIG1haW4gc3VnZ2VzdGlvbiBvZiB0aGUgYXV0aG9yIGlzIHJlbGF0ZWQgdG8gdGhlIGluY3JlYXNpbmcgdGhyZWF0IG9mIGFudGliaW90aWMgIHJlc2lzdGFuY2UgY29udmVydGluZyB0byBzdXBlcmJ1Z3MuIFRoZXJlZm9yZSwgdGhpcyBvcHRpb24gaXMgbm90IGNvcnJlY3QuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIG9wdGlvbiBzdGF0ZXMgdGhhdCBiaW90ZWNobm9sb2d5IGhhcyBzb21lIG5lZ2F0aXZlIHNpZGUgZWZmZWN0cywgYnV0IGl0ICBpcyBub3QgdGhlIG1haW4gdGhlbWUgb2YgdGhlIHBhc3NhZ2UuIFRoZSBjb3JlIGRpc2N1c3Npb24gb2YgdGhlIHBhc3NhZ2UgaXMgYWJvdXQgdGhlIHVzZSBvZiBhbnRpYmlvdGljcyBhbmQgIHRoZWlyIHJlc2lzdGFuY2UgYW1vbmcgY2F0dGxlIGFuZCB0aGUgcG9wdWxhdGlvbi4gVGhlIGdpdmVuIHN0YXRlbWVudCBpcyBtb3JlIGluIHRoZSBuYXR1cmUgb2YgYSAgZmFjdC9vcGluaW9uLCByYXRoZXIgdGhhbiBhIHN1Z2dlc3Rpb24uIFNvLCB0aGlzIG9wdGlvbiBpcyBub3QgdGhlIGNvcnJlY3Qgc3VnZ2VzdGlvbi4gIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiAgVGhpcyBvcHRpb24gaW4gZ2VuZXJhbCBpcyBjb3JyZWN0LiBIb3dldmVyLCB0aGlzIGlzIG5vdCB0aGUgbWFpbiBkaXNjdXNzaW9uIG9mIHRoZSAgcGFzc2FnZS4gSXQgY291bGQgYmUgYSBmYWlyIGFzc3VtcHRpb24gb3IgYW4gaW5mZXJlbmNlLCBidXQgdGhlIHN1Z2dlc3Rpb24gZ2l2ZW4gaGVyZSBpcyB0aGF0IGFudGliaW90aWMgIHJlc2lzdGFuY2UgaXMgaW5jcmVhc2luZyBkdWUgdG8gaW5jcmVhc2VkIHVzZSBvZiBhbnRpYmlvdGljcywgd2hpY2ggY2FuIGxlYWQgdG8gdGhlIGNyZWF0aW9uIG9mIHN1cGVyYnVncy4gIFNvLCB0aGlzIGNvdWxkIGJlIGEgZ29vZCBnZW5lcmljIHN1Z2dlc3Rpb24gYnV0IG5vdCB0aGUgYmVzdCBzdWdnZXN0aW9uIGFzIHBlciB0aGUgcGFzc2FnZS4gQWxzbywgdGhlIG1haW4gIGZvY3VzIG9mIHRoZSBwYXNzYWdlIGlzIG9uIGFuaW1hbHMsIG5vdCBwZW9wbGUuICAgICAgICAgNyAgICAgICAgICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " To prevent the creation of antibiotic- resistant microorganisms in cattle and people, there is an urgent need to reduce the use of antibiotics.",
        "option2" : " Research should be done to evolve some alternatives to the harmful use of antibiotics.",
        "option3" : " Use of biotechnology has negative side effects.",
        "option4" : " Biotechnology can be used to reduce antibiotic resistance among people."
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following is/are the most rationaland logical Inference/Inferences that can be made from the passage? 1. Efforts should be made to increase theknowledge of individuals about the prevention of diseases. 2. Immunization of every person in thecommunity is a must to prevent the spread of disease. Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoaXMgaW5mZXJlbmNlIGlzIGJhc2VkIG9uIHRoZSBkaXNjdXNzaW9uIGluIHRoZSBwYXNzYWdlIGFzIHNlZW4gaW4gdGhlIGxpbmVzICAnQXZvaWRpbmcgZGlzYWJpbGl0eSBhbmQgZGVhdGggZnJvbSB0aGVzZSBjYXVzZXMgZGVwZW5kcyBhIGdyZWF0IGRlYWwgbW9yZSBvbiBpbmRpdmlkdWFsIHVuZGVyc3RhbmRpbmcgIGFuZCBhY3Rpb24gdGhhbiBkaWQgdGhlIHByZXZlbnRpb24gb2YgdGhlIGluZmVjdGlvdXMgZGlzZWFzZXMnLiBUaGlzIHByZW1pc2UgZXN0YWJsaXNoZXMgdGhhdCBpbmRpdmlkdWFsICB1bmRlcnN0YW5kaW5nIHBsYXlzIGEgY3JpdGljYWwgcm9sZSBpbiBwcmV2ZW50aW5nIHRoZSBzcHJlYWQgb2YgZGlzZWFzZS4gVGhlcmVmb3JlLCB0aGlzIGluZmVyZW5jZSBpcyBjb3JyZWN0LiAgSW5mZXJlbmNlIDIgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIGFzIHBlciB0aGUgcGFzc2FnZSAnVGhlIGltbXVuaXphdGlvbiBvZiBldmVuICBhIGZldyBjaGlsZHJlbiBpbiBhIGNvbW11bml0eSBhZmZvcmRzIHNvbWUgcHJvdGVjdGlvbiB0byB0aGUgb3RoZXJzLCBmb3IgZWFjaCBpbW11bmUgY2hpbGQgaW4gYSAgcG9wdWxhdGlvbiByZWR1Y2VzIHRoZSBjaGFuY2Ugb2YgdHJhbnNtaXNzaW9uIG9mIHRoZSBkaXNlYXNlJywgc2hvd2luZyB0aGF0IHRoZXJlIGlzIG5vIG5lZWQgZm9yICBpbW11bml6aW5nIGV2ZXJ5IHBlcnNvbiBiZWNhdXNlIGltbXVuaXphdGlvbiBvZiBldmVuIGEgZmV3IGFsc28gb2ZmZXJzIHByb3RlY3Rpb24gdG8gb3RoZXJzLiBTbywgdGhpcyAgaW5mZXJlbmNlIGlzIG5vdCBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 24,
      "question" : "Which one of the following statements bestreflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZXJlIGlzIG5vIGRpc2N1c3Npb24gb24gdGhlIHJvbGUgb2YgdGhlICBnb3Zlcm5tZW50IHRvIGFjY2VsZXJhdGUgdGhlIHBhY2Ugb2YgdmFjY2luYXRpb24gZm9yIGRpZmZlcmVudCBkaXNlYXNlcy4gU28sIHRoaXMgc3RhdGVtZW50IGlzIG5vdCB0aGUgY3J1eC4gIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIGlzIGNvbnRyYXJ5IHRvIHRoZSBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZS4gVGhlIGxpbmVzICAnTm90IGV2ZXJ5IHBlcnNvbiBuZWVkcyB0byB0YWtlIHNwZWNpZmljIHByZXZlbnRpdmUgYWN0aW9uIHRvIGJlIHByb3RlY3RlZCBmcm9tIGEgY29tbXVuaWNhYmxlIGRpc2Vhc2UnLCAgbWVhbiB0aGF0IG5vdCBldmVyeSBwZXJzb24gbmVlZHMgdG8gdGFrZSBwcmV2ZW50aXZlIHN0ZXBzLiBTbywgdGhpcyBpcyBub3QgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnQXZvaWRpbmcgZGlzYWJpbGl0eSBhbmQgZGVhdGggZnJvbSB0aGVzZSBjYXVzZXMgZGVwZW5kcyBhIGdyZWF0IGRlYWwgIG1vcmUgb24gaW5kaXZpZHVhbCB1bmRlcnN0YW5kaW5nIGFuZCBhY3Rpb24gdGhhbiBkaWQgdGhlIHByZXZlbnRpb24gb2YgdGhlIGluZmVjdGlvdXMgZGlzZWFzZXMnIGFuZCAnVGhlICBpbW11bml6YXRpb24gb2YgZXZlbiBhIGZldyBjaGlsZHJlbiBpbiBhIGNvbW11bml0eSBhZmZvcmRzIHNvbWUgcHJvdGVjdGlvbiB0byB0aGUgb3RoZXJzLCBmb3IgZWFjaCAgaW1tdW5lIGNoaWxkIGluIGEgcG9wdWxhdGlvbiByZWR1Y2VzIHRoZSBjaGFuY2Ugb2YgdHJhbnNtaXNzaW9uIG9mIHRoZSBkaXNlYXNlJywgZXN0YWJsaXNoIHRoYXQgIGtub3dsZWRnZSBpcyBhIG5lY2Vzc2FyeSBidXQgbm90IHN1ZmZpY2llbnQgY29uZGl0aW9uIGZvciB0aGUgcHJvdGVjdGlvbiBvZiBjb21tdW5pdHkgZnJvbSBpbmZlY3Rpb3VzICBkaXNlYXNlcy4gQXdhcmVuZXNzIHNob3VsZCBiZSBjb21wbGVtZW50ZWQgYnkgaW1tdW5pemF0aW9uIHRvIGFycmVzdCB0aGUgc3ByZWFkIG9mIGluZmVjdGlvdXMgZGlzZWFzZXMuICBTbywgdGhpcyBvcHRpb24gYmVzdCByZWZsZWN0cyB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBjb21wYXJlcyB0aGUgaW1tdW5pemF0aW9uIG9mIGNoaWxkcmVuIHdpdGggdGhhdCBvZiBhZHVsdHMgYW5kICBjb25jbHVkZXMgdGhhdCBpbW11bml6aW5nIGNoaWxkcmVuIGlzIG1vcmUgaW1wb3J0YW50IHRoYW4gYWR1bHRzLiBIb3dldmVyLCBzdWNoIGEgY29tcGFyaXNvbiBpcyBub3QgIGRpc2N1c3NlZCBpbiB0aGUgcGFzc2FnZS4gU28sIHRoaXMgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Governments should speed up vaccination for different diseases to prevent deaths. ",
        "option2" : " All citizens should take steps to reduce the load of diseases from the community and  prevent the spread of diseases. ",
        "option3" : " Individuals' knowledge about the  infectious disease is important but not  sufficient to protect the community from its  spread. ",
        "option4" : " Immunization of children is more important than adults as it reduces the chance of  transmission of the disease.        8           "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the passage, the followingassumptions have been made:1. The Europeans introduced plants such aspotatoes, tomatoes, corn and tobacco inAsia.2. By channeling water from streams intotheir fields, the farmers were able toincrease the food grain production inEurope.3. New agricultural methods have helped inincreasing the soil fertility and production.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkb2VzIG5vdCBnaXZlbiBhbnkgcmVmZXJlbmNlIHRvIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbmV3IHBsYW50cyBieSAgRXVyb3BlYW5zIGluIEFzaWEuIFNvLCBpdCBpcyBlbnRpcmVseSBvdXQgb2YgdGhlIGFtYml0IG9mIHRoaXMgcGFzc2FnZS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdCBhcyB0aGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIHRoZSBpcnJpZ2F0aW9uIGFzIGEgbWV0aG9kIG9mIGltcHJvdmVtZW50IGluICBhZ3JpY3VsdHVyZS4gVGhlIGF1dGhvciBvbmx5IHRhbGtzIGFib3V0IG1lYXN1cmVzIGxpa2UgaW1wcm92aW5nIGNyb3AgdmFyaWV0aWVzIHRocm91Z2ggZ2VuZXRpY3MsIGNyb3AgIHJvdGF0aW9uLCBOb3Jmb2xrIGZvdXItZmllbGQgc3lzdGVtLCBldGMuIFNvLCBpdCBpcyBhbiBpbnZhbGlkIGFzc3VtcHRpb24uICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGNsZWFybHkgbWVudGlvbnMsICd0aGUgTm9yZm9sayBmb3VyLWZpZWxkIHN5c3RlbSwgZGV2ZWxvcGVkIGluICBFbmdsYW5kLCBwcm92ZWQgcXVpdGUgc3VjY2Vzc2Z1bC4gSXQgaW52b2x2ZWQgdGhlIHllYXJseSByb3RhdGlvbiBvZiBzZXZlcmFsIGNyb3BzLiBUaGlzIGFkZGVkIG51dHJpZW50cyB0byAgdGhlIHNvaWwuJyBUaHVzLCBuZXcgYWdyaWN1bHR1cmFsIG1ldGhvZHMgbGlrZSBOb3Jmb2xrIGZvdXItZmllbGQgc3lzdGVtIGhlbHBlZCBpbiBpbmNyZWFzaW5nIHRoZSBzb2lsICBmZXJ0aWxpdHkgYW5kIHRodXMgdGhlIHByb2R1Y3Rpb24gb2YgY3JvcHMuIFNvLCBpdCBpcyBhIHZhbGlkIGFzc3VtcHRpb24uIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 1 and 2 only",
        "option3" : " 3 only",
        "option4" : " 1, 2 and 3"
      }
    },
    {
      "index" : 26,
      "question" : "Two equal sums of money were invested, oneat 4% and the other at 4.5%. At the end of 7years, the simple interest received from thelatter exceeded that received from the formerby Rs. 31.50. Each sum invested was",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IExldCBlYWNoIHN1bSBiZSBScy4gWCwgdGhlbiAgIERpZmZlcmVuY2Ugb2YgUy5JLiAgPSBScy4gMzEuNTAgIEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICAgWyhYIMOXIDQuNSDDlyA3KS8xMDBdIC0gWyhYIMOXIDQgw5cgNykgLzEwMF0gPSAzMS41MCAgT3IgKDMxLjVYIC0gMjhYKS8xMDAgPSAzMS41MCAgT3IgMy41WCA9IDMxLjUgw5cgMTAwICAgT3IgWCA9IDMxNTAvMy41ID0gUnMuIDkwMCAgVGh1cywgZWFjaCBzdW0gd2FzIFJzLiA5MDAuICBUaHVzLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1,200",
        "option2" : " Rs. 600",
        "option3" : " Rs. 750",
        "option4" : " Rs. 900"
      }
    },
    {
      "index" : 27,
      "question" : "Lucknow Shatabdi Express has a capacity of500 seats of which 10% are in the Executiveclass and the rest are chair cars. During onejourney, the train was booked to 85% of itscapacity. If the Executive class was booked to96% of its capacity, then how many chair carseats were empty during that journey?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IFNlYXRzIGluIGV4ZWN1dGl2ZSBjbGFzcyA9IDEwJSBvZiA1MDAgPSA1MCAgU28sIHNlYXRzIGluIGNoYWlyIGNhciA9IDUwMCAtIDUwID0gNDUwICBUb3RhbCBib29rZWQgc2VhdHMgPSA4NSUgb2YgNTAwID0gNDI1ICBTZWF0cyBib29rZWQgaW4gZXhlY3V0aXZlIGNsYXNzID0gOTYlIG9mIDUwID0gNDggICAgICAgIDggICAgICAgICAgICAgICAgICBUaGVyZWZvcmUsIHNlYXRzIGJvb2tlZCBpbiBjaGFpciBjYXIgPSA0MjUgLSA0OCA9IDM3NyAgRW1wdHkgc2VhdHMgaW4gY2hhaXIgY2FyID0gNDUwIC0gMzc3ID0gNzMgIFRodXMsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 78",
        "option2" : " 73",
        "option3" : " 72",
        "option4" : " 76"
      }
    },
    {
      "index" : 28,
      "question" : "If the difference between P and R is r% of R,and the sum of P and R is 210, then which ofthe following statements is always true?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEl0IGlzIGdpdmVuIHRoYXQsIFAgKyBSID0gMjEwICBXZSB3aWxsIGNoZWNrIGVhY2ggb3B0aW9uIG9uZSBieSBvbmUuICBTdGFydGluZyB3aXRoIG9wdGlvbiAoYSk6ICBQID0gMTEwIGFuZCBSID0gMTAwICBTbywgUCArIFIgPSAyMTAgIFRodXMsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " P = 110, R = 100",
        "option2" : " P = 270, R = 180",
        "option3" : " P = 3000, R = 3200",
        "option4" : " All of these"
      }
    },
    {
      "index" : 29,
      "question" : "How much water must be added to a 100 cc of80% solution of boric acid to reduce it to a 50%solution?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IFF1YW50aXR5IG9mIGJvcmljIGFjaWQgaW4gMTAwIGNjIHNvbHV0aW9uID0gODAlIG9mIDEwMCBjYyA9IDgwIGNjICBRdWFudGl0eSBvZiB3YXRlciBpbiAxMDAgY2Mgc29sdXRpb24gPSAxMDAgY2MgLSA4MCBjYyA9IDIwIGNjICBMZXQgeCBjYyBvZiB3YXRlciBiZSBhZGRlZCB0byBnZXQgdGhlIGNvbmNlbnRyYXRpb24gb2YgNTAlLiAgIFNvLCAoODApLygxMDAgKyB4KSA9IDUwLzEwMCAgb3IgKDgwKS8oMTAwICsgeCkgPSAxLzIgIG9yIDgwIMOXIDIgPSAoMTAwICsgeCkgIG9yIHggPSAxNjAgLSAxMDAgPSA2MCBjYyAgVGh1cywgNjAgY2Mgb2Ygd2F0ZXIgbXVzdCBiZSBhZGRlZC4gIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICBBbHRlcm5hdGUgbWV0aG9kOiAgQ29uY2VudHJhdGlvbiBvZiBib3JpYyBhY2lkIGluIDEwMCBjYyBzb2x1dGlvbiA9IDgwJSBvZiAxMDAgY2MgPSA4MCBjYyAgUXVhbnRpdHkgb2Ygd2F0ZXIgaW4gMTAwIGNjIHNvbHV0aW9uID0gMTAwIGNjIC0gODAgY2MgPSAyMCBjYyAgSGVyZSB3ZSBhcmUgYWRkaW5nIHdhdGVyLiBTbywgYW1vdW50IG9mIGJvcmljIGFjaWQgaXMgZml4ZWQuICBXaGVuIHdhdGVyIGlzIGFkZGVkIHRvIHRoZSBzb2x1dGlvbiwgYm9yaWMgYWNpZCByZWR1Y2VzIHRvIDUwJSBvZiB0aGUgc29sdXRpb24uICBUaHVzLCA1MCUgb2YgdGhlIHNvbHV0aW9uIGNvbnRhaW5zIDgwIGNjLiAgU28sIDEwMCUgb2YgdGhlIHNvbHV0aW9uIGNvbnRhaW5zIDE2MCBjYy4gIEFtb3VudCBvZiB3YXRlciB0byBiZSBhZGRlZCBpbiB0aGUgc29sdXRpb24gPSAxNjAgY2MgLSAxMDAgY2MgPSA2MCBjYyAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 20 cc",
        "option2" : " 40 cc",
        "option3" : " 80 cc",
        "option4" : " 60 cc       9           "
      }
    },
    {
      "index" : 30,
      "question" : "If A's salary is 25% higher than B's salary, thenhow much per cent is B's salary lower than A's?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IExldCBCJ3Mgc2FsYXJ5IGJlIFJzLiAxMDAuICBUaGVuIEEncyBzYWxhcnkgPSBScy4gMTI1ICBSZXF1aXJlZCBwZXJjZW50YWdlID0gWygxMjUgLSAxMDApLzEyNV0gw5cgMTAwID0gKDI1IC8xMjUpIMOXIDEwMCA9IDIwJSAgVGh1cywgQidzIHNhbGFyeSBpcyBsb3dlciB0aGFuIEEncyBzYWxhcnkgYnkgMjAlLiAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 16.33%",
        "option2" : " 20%",
        "option3" : " 25%",
        "option4" : " 33.33%"
      }
    },
    {
      "index" : 31,
      "question" : "The difference between the simple interest andthe compound interest compounded annually ata rate of 12% per annum on Rs. 5000 for twoyears will be",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IFByaW5jaXBhbCAoUCkgPSBScy4gNTAwMCwgUmF0ZSAocikgPSAxMiUgcGVyIGFubnVtLCBUaW1lIChuKSA9IDIgeWVhcnMgIENvbXBvdW5kIEludGVyZXN0IChDLkkuKSA9IFtQIHsxICsgKHIvMTAwKX1uIC0gUF0gIFNpbXBsZSBJbnRlcmVzdCAoUy5JLikgPSAoUCDDlyByIMOXIG4pLzEwMCAgUmVxdWlyZWQgZGlmZmVyZW5jZSA9IFtQIHsxICsgKHIvMTAwKX1uIC0gUF0gLSAoUCDDlyByIMOXIG4pLzEwMCAgID0gWzUwMDAgezEgKyAoMTIvMTAwKX0yIC0gNTAwMF0gLSAoNTAwMCDDlyAxMiDDlyAyKS8xMDAgID0gNTAwMCBbKDI4LzI1KSDDlyAoMjgvMjUpIC0gMV0gLSAxMjAwICA9IDUwMDAgWyg3ODQgLSA2MjUpLzYyNV0gLSAxMjAwID0gMTI3MiAtIDEyMDAgPSBScy4gNzIgIFRodXMsIGRpZmZlcmVuY2UgYmV0d2VlbiBzaW1wbGUgaW50ZXJlc3QgYW5kIHRoZSBjb21wb3VuZCBpbnRlcmVzdCBmb3IgMiB5ZWFycyB3aWxsIGJlIFJzLiA3Mi4gIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 47.50",
        "option2" : " Rs. 63",
        "option3" : " Rs. 45",
        "option4" : " Rs. 72"
      }
    },
    {
      "index" : 32,
      "question" : "If a% of X is equal to b% of Y, then c% of Y iswhat percent of X?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEl0IGlzIGdpdmVuIHRoYXQsIGElIG9mIFggaXMgZXF1YWwgdG8gYiUgb2YgWS4gIChhIMOXIFgpLzEwMCA9IChiIMOXIFkpLzEwMCAgb3IgYVggPSBiWSAgb3IgWSA9IGFYL2IgIExldCBjJSBvZiBZID0gZCUgb2YgWCAgICAgICAgOSAgICAgICAgICAgICAgICAgIE9uIHB1dHRpbmcgWSA9IGFYL2IgaW4gdGhlIGFib3ZlIGVxdWF0aW9uLCB3ZSBnZXQ6ICAoYy8xMDApIMOXIChhWC9iKSA9IChkLzEwMCkgWCAgVGhlcmVmb3JlLCBkICA9IGFjL2IgIFRodXMsIFkgaXMgKGFjL2IpJSBvZiBYLiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " c%",
        "option2" : " (ac/b)%",
        "option3" : " (bc/a)%",
        "option4" : " abc % Directions for the following 5 (five) items:  Read the following four passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 33,
      "question" : "What is the crucial message conveyed by theabove passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgb3B0aW9uIHN0YXRlcyB0aGF0IHNlcGFyYXRpbmcgdGhlIHRyYW5zcG9ydCBhbmQgdG91cmlzbSBwb2xpY3kgaXMgbm90IHN1aXRhYmxlICBmb3IgdGhlIHNvY2lldHkgYW5kIHRoZSBlbnZpcm9ubWVudC4gSG93ZXZlciwgdGhlIG1haW4gZGlzY3Vzc2lvbiBpbiB0aGUgcGFzc2FnZSBpcyBub3QgYWJvdXQgc2VwYXJhdGluZyAgdGhlc2UgdHdvIHBvbGljaWVzLCBidXQgYWJvdXQgaG93IHRvIGludGVncmF0ZSB0aGVtIGZvciByZWR1Y2luZyBwb2xsdXRpb24uIEFsc28sIHRvIHNheSB0aGF0IHNlcGFyYXRpbmcgIHRoZW0gd2lsbCBiZSBkZXRyaW1lbnRhbCB3aWxsIG5vdCBiZSBjb3JyZWN0IGFzIHRoZSBwYXNzYWdlIGRvZXMgbm90IG1lbnRpb24gYW55dGhpbmcgcmVsYXRlZCB0byBpdC4gU28sIHRoaXMgIGlzIG5vdCB0aGUgY3J1Y2lhbCBtZXNzYWdlIGluIHRoZSBwYXNzYWdlLiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIHRhbGtzIGFib3V0IHRoZSBpbmRpc3BlbnNhYmlsaXR5IG9mIHRoZSB0cmFuc3BvcnQgc2VjdG9yIGZvciB0aGUgdG91cmlzbSAgc2VjdG9yLiBIb3dldmVyLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIGFueSBpbmZvcm1hdGlvbiBvZiB0aGlzIG5hdHVyZS4gVGhlcmUgaXMgbm8gbWFuZGF0b3J5ICBkZXBlbmRlbmNlIG9mIHRoZSB0b3VyaXNtIGluZHVzdHJ5IG9uIHRoZSB0cmFuc3BvcnQgc2VjdG9yLiBUaGVyZWZvcmUsIHRoaXMgaXMgbm90IHRoZSBjb3JyZWN0IGNydWNpYWwgIG1lc3NhZ2Ugb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIG1lbnRpb25zIHRoYXQgcG9vciBwdWJsaWMgdHJhbnNwb3J0IGluZnJhc3RydWN0dXJlIGlzIHRoZSBjYXVzZSBvZiAgcG9sbHV0aW9uIGFuZCBlY29ub21pYyBpc3N1ZXMgb2YgcnVyYWwgaW5oYWJpdGFudHMuIEhvd2V2ZXIsIHRoaXMgaXMgYSBtZXJlIGluZmVyZW5jZS9hc3N1bXB0aW9uIG5vdCAgYmFzZWQgb24gYW55IGluZm9ybWF0aW9uIGluIHRoZSBwYXNzYWdlLiBUaGVyZSBpcyBubyBkaXNjdXNzaW9uIG9mIHB1YmxpYyB0cmFuc3BvcnQgb3IgZWNvbm9taWMgaXNzdWVzICBmYWNlZCBieSBydXJhbCBmb2xrcyBpbiB0aGUgcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCBjcnVjaWFsIG1lc3NhZ2Ugb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGlzIG9wdGlvbiBjYXB0dXJlcyB0aGUgcmVhbCBlc3NlbmNlIG9mIHRoZSBwYXNzYWdlLiBUaGUgbGluZXMgJ1RyYW5zcG9ydCBwbGFubmluZyAgYW5kIHRvdXJpc20gcG9saWN5IGhhdmUgdG8gYmUgaW50ZWdyYXRlZCB0byBhY2hpZXZlIGpvaW50IGVudmlyb25tZW50YWwgYW5kIHNvY2lhbCBvYmplY3RpdmVzJywgcmVmbGVjdCB0aGUgIGNydWNpYWwgbWVzc2FnZSBjb252ZXllZCBieSB0aGUgcGFzc2FnZS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Separating the transport and tourism policy will be detrimental to the society and environment.",
        "option2" : " Tourism industry cannot grow without the growth in the transport sector.",
        "option3" : " Pollution and economic issues of rural inhabitants exist because of poor public transport infrastructure.",
        "option4" : " Socio-environmental development is  dependent on the synergy between  transport and tourism policies. "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following statements bestreflects the central idea of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBpcyB0aGUgY29ycmVjdCBvcHRpb24gYmVjYXVzZSBpdCBtZW50aW9ucyB0aGUgY29yZSBpZGVhIG9mIHRoZSBwYXNzYWdlLiBUaGUgIGxpbmVzICdUbyBmaWdodCBwZXN0aWNpZGUgcmVzaXN0YW5jZSAuLi4sIHNldmVyYWwgcHJpbmNpcGxlcyBtdXN0IGJlIGFkaGVyZWQgdG8gZm9yIGRlbGF5aW5nIHRoZSBlbWVyZ2VuY2UgIG9mIHJlc2lzdGFuY2Ugb3IgYXZvaWRpbmcgaXQgZW50aXJlbHkuIFRoZXNlIHByaW5jaXBsZXMgaW5jbHVkZSBwZXN0aWNpZGUgcm90YXRpb24gb3Igc3dpdGNoaW5nLCBhdm9pZGluZyAgdW5uZWNlc3NhcnkgcGVzdGljaWRlIGFwcGxpY2F0aW9ucywgdXNpbmcgbm9uLWNoZW1pY2FsIGNvbnRyb2wgdGVjaG5pcXVlcywgYW5kIGxlYXZpbmcgdW50cmVhdGVkIHJlZnVnZXMgIHdoZXJlIHN1c2NlcHRpYmxlIHBlc3RzIGNhbiBzdXJ2aXZlJyBwcm9wZXJseSBjYXB0dXJlcyB0aGUgZXNzZW5jZSBvZiB0aGUgZ2l2ZW4gb3B0aW9uLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgb3B0aW9uIHN0YXRlcyBvbmUgb2YgdGhlIHByb2JhYmxlIGNvbnNlcXVlbmNlcyBvZiBsb25nLXRlcm0gcGVzdGljaWRlICByZXNpc3RhbmNlLCBuYW1lbHkgZm9vZCBpbnNlY3VyaXR5LiBIb3dldmVyLCB0aGlzIGlzIG5vdCB0aGUgbWFpbiB0aGVtZSBvZiB0aGUgcGFzc2FnZSBhcyBmb29kIGluc2VjdXJpdHkgIGlzIG5vdCBkaXNjdXNzZWQgaW4gdGhlIHBhc3NhZ2UuIFNvLCB0byBzYXkgdGhhdCB0aGlzIGlzIHRoZSBjZW50cmFsIGlkZWEgaXMgbm90IGNvcnJlY3QuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSwgYmVjYXVzZSB0aGUgbGluZXMgJ1RvIGZpZ2h0ICBwZXN0aWNpZGUgcmVzaXN0YW5jZSBhbmQgYmFzZWQgb24gYSBrbm93bGVkZ2Ugb2YgdGhlIGdlbmV0aWNzIG9mIHRoZSBkZXZlbG9wbWVudCBvZiBwZXN0aWNpZGUgcmVzaXN0YW5jZSwgIHNldmVyYWwgcHJpbmNpcGxlcyBtdXN0IGJlIGFkaGVyZWQgdG8gZm9yIGRlbGF5aW5nIHRoZSBlbWVyZ2VuY2Ugb2YgcmVzaXN0YW5jZSBvciBhdm9pZGluZyBpdCBlbnRpcmVseScgIG9ubHkgbWVudGlvbiBhYm91dCBrbm93bGVkZ2Ugb2YgZ2VuZXRpY3MgdG8gZmlnaHQgcGVzdGljaWRlIHJlc2lzdGFuY2UuIEhvd2V2ZXIsIGl0IHdvdWxkIGJlIGluY29ycmVjdCB0byAgaW5mZXIgdGhhdCBpdCBpcyBpbXBvc3NpYmxlIHRvIGRldmVsb3AgcGVzdGljaWRlcyB3aXRob3V0IHRoZSBrbm93bGVkZ2Ugb2YgdGhlIGdlbmV0aWNzIG9mIHBlc3RzLiBUaGVyZWZvcmUsICB0aGlzIGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlLiAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UgYmVjYXVzZSB0aGVyZSBpcyBubyBkaXNjdXNzaW9uIG9mICBiaW8tcGVzdGljaWRlcyBpbiB0aGUgcGFzc2FnZS4gVGhpcyBvcHRpb24gaXMgYSBwcmFjdGljYWwgcG9saWN5IGltcGxpY2F0aW9uLCBidXQgbm90IHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlICBwYXNzYWdlLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Pesticide resistance can be avoided by following the principles of rotation, non- chemical control techniques etc.",
        "option2" : " Increasing pesticide resistance could lead to food insecurity in the long run.",
        "option3" : " It is not possible to develop pesticides without the knowledge of the genetics of the pests.",
        "option4" : " Bio-pesticides should be promoted as an alternative to chemical pesticides to prevent pesticide resistance.       10           "
      }
    },
    {
      "index" : 35,
      "question" : "Which of the following is/are the most rationaland logical inference/ inferences that can be made from the passage? 1. Including nanosensors in packaging willincrease the cost of packaging for companies. 2. There is limited understanding of the use ofnanotechnology in the packaging industry. Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gIFRoaXMgb3B0aW9uIGlzIG5vdCBjb3JyZWN0IGJlY2F1c2UgdGhlIG9wdGlvbiBtZW50aW9ucyB0aGUgY29zdCBvZiBwYWNrYWdpbmcuICBIb3dldmVyLCB0aGVyZSBpcyBubyBkaXNjdXNzaW9uIGluIHRoZSBwYXNzYWdlIGFib3V0IHRoZSBjb3N0IGltcGxpY2F0aW9ucyBvZiBuYW5vIHBhY2thZ2luZy4gU28sIHRoaXMgIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGFuZCBoZW5jZSBpcyBub3QgYSBjb3JyZWN0IGluZmVyZW5jZS4gICBJbmZlcmVuY2UgMiBpcyBjb3JyZWN0LiAgVGhpcyBhc3N1bXB0aW9uIGlzIGNvcnJlY3QgYXMgY2FuIGJlIHNlZW4gaW4gdGhlIGxpbmVzICdUaGVyZSBpcyBhIG5lZWQgdG8gIHVuZGVydGFrZSBmdXJ0aGVyIHRveGljb2xvZ2ljYWwgYW5kIG1pZ3JhdGlvbiBzdHVkaWVzIHRvIGVuc3VyZSBzYWZlIGRldmVsb3BtZW50IG9mIG5hbm90ZWNobm9sb2dpZXMgaW4gIHRoZSBmb29kIHBhY2thZ2luZyBpbmR1c3RyeScuIEl0IHNob3dzIHRoYXQgdGhlIGN1cnJlbnQgdW5kZXJzdGFuZGluZyBvZiB0aGUgaW1wYWN0IG9mIG5hbm90ZWNobm9sb2d5IG9uICB0aGUgcGFja2FnaW5nIGlzIGxpbWl0ZWQuIFNvIHRoZXJlIGlzIGEgbmVlZCBmb3IgZnVydGhlciBzdHVkaWVzLiBUaGVyZWZvcmUsIHRoaXMgYXNzdW1wdGlvbiBzdGF0ZW1lbnQgaXMgIGNvcnJlY3QuICAgICAgICAxMCAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 36,
      "question" : "According to the passage above, what are thedifferent uses of plants?1. Preparation of medicines2. Consumption of food3. Prevention of soil erosion4. Making perfumes5. Controlling air pollutionSelect the correct answer from code below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IFN0YXRlbWVudHMgMSwgMiBhbmQgNCBhcmUgY29ycmVjdC4gVGhlIGxpbmVzICdQbGFudHMgcHJvdmlkZSB0aGUgcmF3IG1hdGVyaWFsIGZvciBpbmR1c3RyaWVzIHByb2R1Y2luZyAgcGhhcm1hY2V1dGljYWxzLCBjb3NtZXRpY3MsIHBlcmZ1bWVzLCBhbmQgZnJhZ3JhbmNlIGZsYXZvdXIgaW1wYXJ0aW5nIGJpb2NoZW1pY2FsLiBUaGVyZWZvcmUsIHRoZXJlIGlzICBhbiB1cmdlbnQgbmVlZCBmb3IgY29uc2VydmF0aW9uLCBzdXN0YWluYWJsZSB1dGlsaXphdGlvbiwgYW5kIG1hbmFnZW1lbnQgb2YgcGxhbnQgZ2VuZXRpYyByZXNvdXJjZXMgb2YgdGhlICByZWdpb24gdG8gbWVldCB0aGUgZ3Jvd2luZyByZXF1aXJlbWVudHMgb2YgZm9vZCwgZm9kZGVyLCBmaWJyZSwgaGVhbHRoLCB3YXRlciwgYW5kIG90aGVyIG5lZWRzJyBzaG93IHRoYXQgIHBsYW50cyBhcmUgdXNlZCBpbiB0aGVzZSBwcm9jZXNzZXMuIFNvLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICBTdGF0ZW1lbnRzIDMgYW5kIDUgYXJlIGluY29ycmVjdC4gVGhlIG9wdGlvbnMgZm9yIHRoZSBwcmV2ZW50aW9uIG9mIHNvaWwgZXJvc2lvbiBhbmQgYWlyIHBvbGx1dGlvbiBhcmUgIGNvcnJlY3QgaW4gZ2VuZXJhbC4gSG93ZXZlciwgdGhleSBhcmUgbm90IGNvdmVyZWQgaW4gdGhlIHBhc3NhZ2UgYW5kIHRoZSBhbnN3ZXIgaGFzIHRvIGJlIGJhc2VkIG9uIHRoZSAgaW5mb3JtYXRpb24gZ2l2ZW4gaW4gdGhlIHBhc3NhZ2UuIEhlbmNlLCB0aGVzZSBzdGF0ZW1lbnRzIGFyZSBub3QgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 4 only",
        "option2" : " 1, 2, 3 and 4 only",
        "option3" : " 1, 2, 3, 4 and 5",
        "option4" : " 2, 3, 4 and 5 only"
      }
    },
    {
      "index" : 37,
      "question" : "Based on the above passage, the followingassumptions have been made:1. Developed nations are mainly dependent onchemical-based medicines.2. Many plant genetic resources are gettingextinct because of the increasing loss ofbiodiversity.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiAoV0hPKSBlc3RpbWF0ZWQgdGhhdCBhYm91dCA4MCUgb2YgIHRoZSBkZXZlbG9waW5nIGNvdW50cnkncyBwb3B1bGF0aW9uIHN0aWxsIHJlbGllcyBvbiB0cmFkaXRpb25hbCBtZWRpY2luZXMsIG1vc3RseSBwbGFudCBkcnVncywgdG8gaGVscCBtZWV0ICB0aGVpciBoZWFsdGggY2FyZSBuZWVkcycgbWVyZWx5IHRhbGtzIGFib3V0IGRldmVsb3BpbmcgY291bnRyaWVzLiBBc3N1bWluZyB0aGF0IGRldmVsb3BlZCBuYXRpb25zIGFyZSAgbWFpbmx5IGRlcGVuZGVudCBvbiBjaGVtaWNhbC1iYXNlZCBtZWRpY2luZXMgd291bGQgbm90IGJlIGNvcnJlY3QuIFNvLCB0aGlzIGFzc3VtcHRpb24gaXMgbm90IGNvcnJlY3QuICBBc3N1bXB0aW9uIDIgaXMgaW5jb3JyZWN0LiBUaGUgbGluZXMsICdUaGVyZWZvcmUsIHRoZXJlIGlzIGFuIHVyZ2VudCBuZWVkIGZvciBjb25zZXJ2YXRpb24sIHN1c3RhaW5hYmxlICB1dGlsaXphdGlvbiwgYW5kIG1hbmFnZW1lbnQgb2YgcGxhbnQgZ2VuZXRpYyByZXNvdXJjZXMgb2YgdGhlIHJlZ2lvbiB0byBtZWV0IHRoZSBncm93aW5nIHJlcXVpcmVtZW50cyBvZiAgZm9vZCwgZm9kZGVyLCBmaWJyZSwgaGVhbHRoLCB3YXRlciwgYW5kIG90aGVyIG5lZWRzJyBzaG93IHRoYXQgY29uc2VydmF0aW9uIG9mIHBsYW50IGdlbmV0aWMgcmVzb3VyY2VzIGlzICByZXF1aXJlZC4gSG93ZXZlciwgd2UgY2Fubm90IGFzc3VtZSBmcm9tIHRoaXMgdGhhdCBtYW55IHBsYW50IGdlbmV0aWMgcmVzb3VyY2VzIGFyZSBnZXR0aW5nIGV4dGluY3QuIFNvLCAgdGhpcyBpcyBhbiBpbmNvcnJlY3QgYXNzdW1wdGlvbi4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2       11            Direction for the following 2 (two) items  The graph below indicates the relationship between  fertilizer consumed (in kg/acre) to output (in  quintal/acre). Study the graph given below carefully  and answer the questions that follow  "
      }
    },
    {
      "index" : 38,
      "question" : "If a farmer is having 5 acres of land and only50 kg of fertilizer, which of the following willgive the best yield?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZyb20gdGhlIGdyYXBoLCB0aGUgbWF4aW11bSBwcm9kdWN0aW9uIG9jY3VycyB3aGVuIHRoZSBmYXJtZXIgYXBwbGllcyAyMCBrZyBpbiB0d28gYWNyZXMgYW5kIHRoZSAgcmVtYWluaW5nIGluIHRocmVlIGFjcmVzLiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10 kg/acre",
        "option2" : " 20 kg in one acre and remaining 30 kg over four acres",
        "option3" : " 20 kg in two acres and remaining in three acres",
        "option4" : " All of the above will give the same yield"
      }
    },
    {
      "index" : 39,
      "question" : "What is the minimum angle that the givengraph makes with the x-axis?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFRoZSBtaW5pbXVtIGFuZ2xlIG1hZGUgaXMgMMKwIHJpZ2h0IGF0IHRoZSB0b3Agb2YgdGhlIGdyYXBoLCBqdXN0IGJlZm9yZSBpdCBzdGFydHMgZmFsbGluZy4g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 30°",
        "option2" : " 45°",
        "option3" : " 60°",
        "option4" : " 0°"
      }
    },
    {
      "index" : 40,
      "question" : "In a class, the average score of girls in anexamination is 73 and that of boys is 71. Theaverage score of whole class is 71.8. Thepercentage of girls in the class is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IExldCB0aGUgbnVtYmVyIG9mIGJveXMgYW5kIGdpcmxzIGJlIHggYW5kIHksIHJlc3BlY3RpdmVseS4gICBUaGVuLCB0aGUgdG90YWwgc2NvcmUgb2YgYm95cyA9IDcxeCAgQW5kIHRvdGFsIHNjb3JlIG9mIGdpcmxzID0gNzN5ICBOb3csIGF2ZXJhZ2Ugc2NvcmUgPSA3MS44ICBUaGVyZWZvcmUsICg3MXggKyA3M3kpLyh4ICsgeSkgPSA3MS44ICBvciA3MXggKyA3M3kgPSA3MS44eCArIDcxLjh5ICAgb3IgMC44eCA9IDEuMnkgIG9yIHgveSA9IDEuMi8wLjggPSAzLzIgIFNvLCBQZXJjZW50YWdlIG9mIGdpcmxzIGluIHRoZSBjbGFzcyA9IFsyLyAoMiArIDMpXSDDlyAxMDAgPSAoMi81KSDDlyAxMDAgPSA0MCUgIFRodXMsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 60%",
        "option2" : " 40%",
        "option3" : " 30%",
        "option4" : " 18% Directions for the following 4 (four) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 41,
      "question" : "Based on the passage given above, thefollowing assumptions have been made:1. Chemical pest control methods work betterthan traditional methods.2. Like developed countries, developingcountries too should adopt chemicalmethods to control pests.Which of the following assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBpbmRpY2F0ZXMgdGhhdCBtb2Rlcm4gbWV0aG9kcyAoY2hlbWljYWxzKSBoYXZlIHByb3ZlbiB0byBiZSBtb3JlICBlZmZlY3RpdmUgdGhhbiB0cmFkaXRpb25hbCBtZXRob2RzLCBpbiB0aGVzZSBsaW5lcy0gJ05vdywgYWxtb3N0IGFsbCBmYXJtZXJzLCBlc3BlY2lhbGx5IGluIGRldmVsb3BlZCAgY291bnRyaWVzLCByZWx5IG9uIGNoZW1pY2FscyB0byBjb250cm9sIHBlc3RzJyBhbmQgJ1dpdGggdGhlIHVzZSBvZiBjaGVtaWNhbHMsIGNyb3AgbG9zc2VzIGFuZCBwcmljZXMgaGF2ZSAgZGVjbGluZWQgZHJhbWF0aWNhbGx5Jy4gU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBjb3JyZWN0LiAgQXNzdW1wdGlvbiAyIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gbWVudGlvbiBvZiBkZXZlbG9waW5nIGNvdW50cmllcyBpbiB0aGUgcGFzc2FnZS4gSXQgb25seSB0YWxrcyAgYWJvdXQgZGV2ZWxvcGVkIGNvdW50cmllcyBpbiB0aGUgbGluZXMsICdOb3csIGFsbW9zdCBhbGwgZmFybWVycywgZXNwZWNpYWxseSBpbiBkZXZlbG9wZWQgY291bnRyaWVzLCByZWx5ICBvbiBjaGVtaWNhbHMgdG8gY29udHJvbCBwZXN0cycuIFNvLCB0aGUgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIFRoZXJlZm9yZSwgdGhpcyAgYXNzdW1wdGlvbiBpcyBpbmNvcnJlY3QuICAgICAgICAxMSAgICAgICAgICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following statements bestreflects the crux of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGFzIHRoZSBvcGVuaW5nIGxpbmVzIG9mIHRoZSBwYXNzYWdlICB0YWxrcyBhYm91dCByZXN0b3Jpbmcgb25seSAnYXQgbGVhc3QnIG9uZS10aGlyZCBvZiB3aGF0IGhhcyBiZWVuIGxvc3QgaW4gdGhlIHBhc3QgMzAgeWVhcnMuIFRoZSB3b3JkICAnY29tcGxldGVseScgbWFrZXMgdGhlIHN0YXRlbWVudCBzb3VuZCBleHRyZW1lLCBhbmQgaGVuY2UgZG9lcyBub3QgcmVmbGVjdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gcHJlc2VudHMgYSBjb21wYXJpc29uIGJldHdlZW4gbWFuLW1hZGUgYW5kIG5hdHVyYWwgc29sdXRpb25zIGZvciAgY2xpbWF0ZSBlbWVyZ2VuY2llcy4gSG93ZXZlciwgdGhlIHBhc3NhZ2UgZG9lcyBub3QgY29tcGFyZSB0aGVzZSB0d28uIEFsc28sIHRoZXJlIGlzIG5vIG1lbnRpb24gb2YgdGhlICBiZXR0ZXIgbWV0aG9kOyB0ZWNobm9sb2d5IG9yIHdpbGQgbmF0dXJlLiBTbywgdGhpcyBpcyBub3QgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGNvcnJlY3QuIFRoaXMgb3B0aW9uIGJlc3QgY2FwdHVyZXMgdGhlIGVzc2VuY2UgYmVjYXVzZSBpdCBjb3ZlcnMgYm90aCBhc3BlY3RzLCBtYW4tbWFkZSBhcyAgd2VsbCBhcyBuYXR1cmFsLCBhcyBpbmRpY2F0ZWQgaW4gdGhlIGxpbmVzICdVbmxpa2UgdGVjaG5vbG9naWNhbCBhbmQgZW5naW5lZXJlZCBzb2x1dGlvbnMgdGhhdCBhcmUgIGV4cGVuc2l2ZSBhbmQgbXVzdCBiZSBzY2FsZWQtdXAgdG8gYmUgZWZmZWN0aXZlLCB3aWxkIG5hdHVyZSBpcyBhbHJlYWR5IGluIHBsYWNlIGFuZCB3b3JraW5nIGZvciBmcmVlIChhcyBpdCAgaGFzIGRvbmUgZm9yIDUwMCBtaWxsaW9uIHllYXJzKSB0byBwcm9kdWNlIGV2ZXJ5dGhpbmcgbGlmZSBuZWVkcyBtb3N0IHRvIHN1cnZpdmUnIC0gaXQgaW1wbGllcyB0aGF0IGh1bWFucyAgKGJ5IHNjYWxpbmcgdXAgdGVjaG5vbG9naWVzKSBzaG91bGQgd29yayBpbiB0YW5kZW0gd2l0aCBuYXR1cmUgZm9yIG1pdGlnYXRpbmcgY2xpbWF0ZSBlbWVyZ2VuY3kuIFNvLCB0aGlzICBvcHRpb24gaXMgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBvbiB0aGUgYXNwZWN0IG9mIHRoZSByb2xlIG9mIGdvdmVybm1lbnRzIGluIHNjYWxpbmcgdXAgIHRlY2hub2xvZ2llcy4gVGhpcyBvcHRpb24gY291bGQgYmUgYSBmYWlyIHN1Z2dlc3Rpb24gYnV0IG5vdCB0aGUgY3J1eC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Humans must align their activities with nature to completely regain the lost biodiversity.",
        "option2" : " Man-made solutions for climate change are more effective than natural solutions.",
        "option3" : " Climate emergency needs human and nature's intervention for stabilizing it.",
        "option4" : " Governments across the globe should invest in scaling up technologies to handle climate emergencies."
      }
    },
    {
      "index" : 43,
      "question" : "Based on the above passage, the followingassumptions have been made:1. Students should be provided with frequentphysical activity breaks that aredevelopmentally appropriate.2. Students respond better to a variety ofcognitive tasks after participating in asession of physical activity.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFzIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAiV2hlbiBwaHlzaWNhbCBhY3Rpdml0eSBpcyB1c2VkIGFzIGEgYnJlYWsgZnJvbSAgYWNhZGVtaWMgbGVhcm5pbmcgdGltZSwgcG9zdCBlbmdhZ2VtZW50IGVmZmVjdHMgaW5jbHVkZSBiZXR0ZXIgYXR0ZW50aW9uLCBpbmNyZWFzZWQgb24tdGFzayBiZWhhdmlvdXJzLCAgYW5kIGltcHJvdmVkIGFjYWRlbWljIHBlcmZvcm1hbmNlLiIgVGhlIGNsb3NpbmcgbGluZXMsICdGdXJ0aGVyLCBhZnRlci1zY2hvb2wgcGh5c2ljYWwgYWN0aXZpdHkgIHByb2dyYW1zLi4uLi4uLiBzaG93biB0byBtZWRpYXRlIGltcHJvdmVtZW50cyBpbiBhY2FkZW1pYyBwZXJmb3JtYW5jZSwgYXMgd2VsbCBhcyB0aGUgYWxsb2NhdGlvbiBvZiAgbmV1cmFsIHJlc291cmNlcyB1bmRlcmx5aW5nIHBlcmZvcm1hbmNlIG9uIGEgd29ya2luZyBtZW1vcnkgdGFzaycgYWxzbyByZWluZm9yY2UgdGhlIGF1dGhvcidzIHN0YW5kLiAgVGh1cywgdGhlIGF1dGhvciBhc3N1bWVzIHRoYXQgZnJlcXVlbnQgcGh5c2ljYWwgYWN0aXZpdHkgYnJlYWtzIGhlbHAgaW4gYWNhZGVtaWMgcGVyZm9ybWFuY2UuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG9wZW5pbmcgbGluZXMgY2xlYXJseSBtZW50aW9uIHRoYXQgcG9zdCBlbmdhZ2VtZW50IChlbmdhZ2VtZW50IGluIGEgIHBoeXNpY2FsIGFjdGl2aXR5KSBlZmZlY3RzIGluY2x1ZGUgYmV0dGVyIGF0dGVudGlvbiwgaW5jcmVhc2VkIG9uLXRhc2sgYmVoYXZpb3VycywgYW5kIGltcHJvdmVkIGFjYWRlbWljICBwZXJmb3JtYW5jZS4gSGVuY2UgdGhlIGFzc3VtcHRpb24gZ2l2ZW4gaW4gdGhpcyBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 44,
      "question" : "Physical activity is important in a child's dailylife because",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhlIG1vbm90b25pY2l0eSBvZiB0aGUgc3R1ZGVudCdzIGxpZmUuIEl0IGlzIGJleW9uZCAgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhlIGJlbmVmaXRzIG9mIHBoeXNpY2FsIGFjdGl2aXR5IGNvbmNlcm5pbmcgcGh5c2ljYWwgIGRldmVsb3BtZW50LiBJdCBpcyBjZW50cmVkIG9uIHRoZSBjb2duaXRpdmUgYmVuZWZpdHMgb2YgcGh5c2ljYWwgYWN0aXZpdHkuICAgT3B0aW9uIChjKSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1doZW4gcGh5c2ljYWwgYWN0aXZpdHkgaXMgdXNlZCBhcyBhIGJyZWFrIGZyb20gYWNhZGVtaWMgIGxlYXJuaW5nIHRpbWUsIHBvc3QgZW5nYWdlbWVudCBlZmZlY3RzIGluY2x1ZGUgYmV0dGVyIGF0dGVudGlvbiwgaW5jcmVhc2VkIG9uLXRhc2sgYmVoYXZpb3VycywgYW5kICBpbXByb3ZlZCBhY2FkZW1pYyBwZXJmb3JtYW5jZS4iIFRodXMsIHBoeXNpY2FsIGFjdGl2aXR5IGltcHJvdmVzIGF0dGVudGlvbiBhbmQgYXMgd2VsbCBhcyB0aGUgYWxsb2NhdGlvbiAgb2YgbmV1cmFsIHJlc291cmNlcyB1bmRlcmx5aW5nIHBlcmZvcm1hbmNlIG9uIGEgd29ya2luZyBtZW1vcnkgdGFzay4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZG9lc24ndCBtZW50aW9uIHRoZSByZWxhdGlvbiBiZXR3ZWVuIHBoeXNpY2FsIGFjdGl2aXR5IGFuZCBzb2NpYWwgIHNraWxscyBhbmQgaXMgdGh1cyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It helps in breaking the monotonous pattern of life.",
        "option2" : " Otherwise, there will be a lack of physical development in the child.",
        "option3" : " It improves cognitive functions related to attention and memory to facilitate learning.",
        "option4" : " Consistent engagement in physical activity can help students refine social skills."
      }
    },
    {
      "index" : 45,
      "question" : "A report consists of 20 sheets, each having 55lines and each such line consists of 65characters. This report is retyped into sheetshaving 65 lines, such that each line consists of70 characters. The percentage reduction innumber of sheets is close to:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IE51bWJlciBvZiBjaGFyYWN0ZXJzIGluIG9uZSBsaW5lID0gNjUgICBOdW1iZXIgb2YgY2hhcmFjdGVycyBpbiBvbmUgc2hlZXQgPSBOdW1iZXIgb2YgbGluZXMgw5cgTnVtYmVyIG9mIGNoYXJhY3RlcnMgcGVyIGxpbmUgPSA1NSDDlyA2NSAgVG90YWwgbnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gdGhlIHJlcG9ydCA9IE51bWJlciBvZiBzaGVldHMgw5cgTnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gb25lIHNoZWV0ID0gMjAgw5cgIDU1IMOXIDY1ID0gNzE1MDAgICBJZiB0aGUgcmVwb3J0IGlzIHJldHlwZWQsIHRoZW4gbmV3IHNoZWV0cyBoYXZlIDY1IGxpbmVzLCB3aXRoIDcwIGNoYXJhY3RlcnMgcGVyIGxpbmUuICAgTnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gb25lIHNoZWV0ID0gNjUgw5cgNzAgICBOdW1iZXIgb2Ygc2hlZXRzIHJlcXVpcmVkID0gKFRvdGFsIG51bWJlciBvZiBjaGFyYWN0ZXJzKS8oTnVtYmVyIG9mIGNoYXJhY3RlcnMgaW4gb25lIHNoZWV0IGlmIHJldHlwZWQpICA9IDcxNTAwLyg2NSDDlyA3MCkgPSAxNS43MSAgSGVuY2UsIDE2IHNoZWV0cyB3aWxsIGJlIHJlcXVpcmVkIGlmIHJlcG9ydCBpcyByZXR5cGVkLiAgUmVkdWN0aW9uIGluIG51bWJlciBvZiBzaGVldHMgPSAoMjAgLSAxNikgPSA0ICAgUGVyY2VudGFnZSByZWR1Y3Rpb24gPSAoNC8yMCkgw5cgMTAwID0gMjAlICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAgICAgICAgMTIgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 20%",
        "option2" : " 5%",
        "option3" : " 30%",
        "option4" : " 35%       13           "
      }
    },
    {
      "index" : 46,
      "question" : "A person who has a certain amount with himgoes to a market. He can buy 50 oranges or 40mangoes with the amount he has. However, heretains 10% of the amount for taxi fares, buys20 mangoes, and purchases oranges with theremaining amount. Number of oranges hepurchased is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFRoZSBwZXJzb24gY2FuIGJ1eSA1MCBvcmFuZ2VzIG9yIDQwIG1hbmdvZXMuICAgTGV0IHRoZSBwcmljZSBvZiBvbmUgb3JhbmdlIGJlIFJzLiB4LiAgIFRvdGFsIGFtb3VudCB0aGUgcGVyc29uIGhhcyA9IDUwIMOXIHggPSBScy4gNTB4ICBDb3N0IG9mIDQwIG1hbmdvZXMgPSA1MHggIFNvLCBjb3N0IG9mIG9uZSBtYW5nbyA9IDUweC80MCA9IFJzLiAxLjI1eCAgQW1vdW50IHJldGFpbmVkIGZvciB0YXhpIGZhcmUgPSAxMCUgb2YgNTB4ID0gUnMuIDV4ICAyMCBtYW5nb2VzIGJvdWdodCBmb3IgMjAgw5cgMS4yNXggPSBScy4gMjV4ICAgTW9uZXkgbGVmdCB3aXRoIHRoZSBwZXJzb24gPSA1MCB4IC0gKFRheGkgZmFyZSkgLSAoQ29zdCBvZiAyMCBNYW5nb2VzKSA9IDUweCAtIDV4IC0gMjV4ID0gUnMuIDIweCAgT25lIG9yYW5nZSBjb3N0cyBScy4geC4gVGhlcmVmb3JlLCAyMCBvcmFuZ2VzIGNhbiBiZSBib3VnaHQgd2l0aCBScy4gMjB4LiAgIFRodXMsIHRoZSBwZXJzb24gcHVyY2hhc2VkIDIwIG9yYW5nZXMuICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 36",
        "option2" : " 40",
        "option3" : " 15",
        "option4" : " 20"
      }
    },
    {
      "index" : 47,
      "question" : "Forty per cent of the employees of a certaincompany are men, and 75% of the men earnmore than Rs. 425,000 per year. If 45% of thecompany's employees earn more than Rs.425,000 per year, what fraction of the womenemployed by the company earn Rs. 425,000 orless per year?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IExldCB0aGUgdG90YWwgbnVtYmVyIG9mIGVtcGxveWVlcyBpbiB0aGUgY29tcGFueSBiZSB4LiBUaGVuIHRoZSBudW1iZXIgb2YgbWVuIGFuZCB3b21lbiB3aWxsIGJlIDAuNHggIGFuZCAwLjZ4IHJlc3BlY3RpdmVseS4gICA3NSUgb2YgbWVuIGVhcm4gbW9yZSB0aGFuIFJzLiA0MjUsMDAwLiAgIE51bWJlciBvZiBtZW4gZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSAwLjc1IHggMC40eCA9IDAuMzB4ICAgVG90YWwgbnVtYmVyIG9mIGVtcGxveWVlcyBlYXJuaW5nIG1vcmUgdGhhbiBScy4gNDI1LDAwMCA9IDQ1JSBvZiB4ID0gMC40NXggICBTbywgTnVtYmVyIG9mIHdvbWVuIGVhcm5pbmcgbW9yZSB0aGFuIFJzLiA0MjUsMDAwID0gVG90YWwgZW1wbG95ZWVzIGVhcm5pbmcgbW9yZSB0aGFuIFJzLiA0MjUsMDAwICAtIFRvdGFsIG51bWJlciBvZiBtZW4gZWFybmluZyBtb3JlIHRoYW4gUnMuIDQyNSwwMDAgPSAwLjQ1eCAtIDAuMzB4ID0gMC4xNXggTnVtYmVyIG9mIHRoZSB3b21lbiBlYXJuaW5nIFJzLiA0MjUsMDAwIG9yIGxlc3MgPSBUb3RhbCBudW1iZXIgb2Ygd29tZW4gZW1wbG95ZWVzIC0gTnVtYmVyIG9mIHdvbWVuIGVtcGxveWVlIGVhcm5pbmcgbW9yZSB0aGFuIFJzLiA0MjUsMDAwID0gMC42MHggLSAwLjE1eCA9IDAuNDV4IEZyYWN0aW9uIG9mIHRoZSB3b21lbiBlbXBsb3llZCBieSB0aGUgY29tcGFueSB3aG8gZWFybiBScy4gNDI1LDAwMCBvciBsZXNzID0gKDAuNDV4LzAuNjB4KSA9IDQ1LzYwID0gMy80IEFsdGVybmF0ZSBNZXRob2Q6ICAgRm9ydHkgcGVyIGNlbnQgb2YgdGhlIGVtcGxveWVlcyBvZiBhIGNlcnRhaW4gY29tcGFueSBhcmUgbWVuLiAgIExldCB0aGVyZSBiZSA0MCBtZW4gYW5kIDYwIHdvbWVuIGluIHRoZSBjb21wYW55LiAgIE5vdyBvdXQgb2YgNDAgbWVuLCA3NSUgaS5lLjMwIG1lbiBlYXJuIG1vcmUgdGhhbiBScyA0MjUsMDAwLiAgQWxzbywgNDUlIG9mIHRoZSB0b3RhbCBlbXBsb3llZXMsIGkuZS4gNDUgZW1wbG95ZWVzIGVhcm4gbW9yZSB0aGFuIFJzLiA0MjUsMDAwLiAgSGVuY2UsIHRoZXJlIGFyZSA0NSAtIDMwID0gMTUgd29tZW4gd2hvIGVhcm4gbW9yZSB0aGFuIFJzLiA0MjUsMDAwLiAgIFNvLCA2MCAtIDE1ID0gNDUgd29tZW4gZWFybiBsZXNzIHRoYW4gUnMuIDQyNSwwMDAuICAgSGVuY2UsIHRoZSByZXF1aXJlZCBmcmFjdGlvbiA9IDQ1LzYwID0gMy80ICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2/11",
        "option2" : " 1/4",
        "option3" : " 1/3",
        "option4" : " 3/4"
      }
    },
    {
      "index" : 48,
      "question" : "Three friends Ashwini, Bhavna and Charulatadivide Rs. 1105 among them in such a way thatif Rs. 10, Rs. 20, and Rs. 15 are removed fromthe sums that Ashwini, Bhavna, and Charulatareceived respectively, then the share of thesums that they got will be in the ratio 11:18:24.How much did Charulata receive originally?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IExldCB0aGUgYW1vdW50IG9mIG1vbmV5IHJlY2VpdmVkIGJ5IEFzaHdpbmksIEJoYXZuYSBhbmQgQ2hhcnVsYXRhIGJlIEEsIEIgYW5kIEMgcmVzcGVjdGl2ZWx5LiAgU3VtIG9mIG1vbmV5IHdpdGggdGhlIHRocmVlIG9mIHRoZW0sIEEgKyBCICsgQyA9IDExMDUgIEFmdGVyIHJlbW92aW5nIFJzLiAxMCwgUnMuIDIwIGFuZCBScy4gMTUgZnJvbSBBLCBCIGFuZCBDIHJlc3BlY3RpdmVseSB0aGUgc3VtIG9mIG1vbmV5IHRoZXkgaGF2ZSB3aWxsICBiZSAoQSAtIDEwKSwgKEIgLSAyMCkgYW5kIChDIC0gMTUpLiAgSXQncyBnaXZlbiB0aGF0LCAoQSAtIDEwKSA6IChCIC0gMjApIDogKEMgLSAxNSkgPSAxMSA6IDE4IDogMjQgIExldCBBIOKIkiAxMCA9IDExaywgQiDiiJIgMjAgPSAxOGsgYW5kIEMg4oiSIDE1ID0gMjRrICBBZGRpbmcgdGhlIG1vbmV5IGxlZnQgd2l0aCB0aGUgdGhyZWUgb2YgdGhlbSBhZnRlciByZW1vdmluZyBScy4gMTAsIFJzLiAyMCBhbmQgUnMuIDE1IHJlc3BlY3RpdmVseSwgd2UgIGdldDogIEEgLSAxMCArIEIgLSAyMCArIEMgLSAxNSA9IDExayArIDE4ayArIDI0ayAgb3IgQSArIEIgKyBDIC0gMTAgLSAyMCAtIDE1ID0gNTNrICBvciBBICsgQiArIEMgLSA0NSA9IDUzayAgRnJvbSB0aGUgcXVlc3Rpb24sIHdlIGtub3cgdGhhdCBBICsgQiArIEMgPSAxMTA1ICBTbywgMTEwNSAtIDQ1ID0gNTNrICBvciAxMDYwID0gNTNrICBvciBrID0gMTA2MC81MyA9IDIwICAgICAgICAxMyAgICAgICAgICAgICAgICAgIFN1YnN0aXR1dGluZyB2YWx1ZSBvZiBrIGluIHRoZSBlcXVhdGlvbiwgQyAtIDE1ID0gMjRrLCAgQyDiiJIgMTUgPSAyNCDDlyAyMCA9IDQ4MCAgb3IgQyA9IDQ4MCArIDE1ID0gUnMuIDQ5NSAgVGh1cywgQ2hhcnVsYXRhIHJlY2VpdmVkIFJzLiA0OTUuICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 495",
        "option2" : " Rs. 510",
        "option3" : " Rs. 480",
        "option4" : " Rs. 375"
      }
    },
    {
      "index" : 49,
      "question" : "A house costs Rs. C. Later it was sold for aprofit of 25%. What is the capital gains tax if itis 50% of the profit made?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IENvc3QgcHJpY2Ugb2YgdGhlIGhvdXNlID0gUnMuIEMgIFByb2ZpdCA9IDI1JSBvZiBDID0gUnMuIEMvNCAgQ2FwaXRhbHMgZ2FpbnMgdGF4ID0gNTAlIG9mIEMvNCA9IFJzLiBDLzggIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. C/24",
        "option2" : " Rs. C/8",
        "option3" : " Rs. C/4",
        "option4" : " Rs. C/2"
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:If a sum of money is lent at simple interest,then theI. Money gets doubled in 5 years if the rate ofinterest is 16.67%.II. Money gets doubled in 5 years if the rate ofinterest is 20%.III. An amount of money becomes four timesin 10 years, if the same amount of moneygets doubled in 5 years.Which of the above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEZyb20gU3RhdGVtZW50IEk6ICBMZXQgdGhlIHN1bSBiZSBScy4geC4gIFRpbWUgPSA1IHllYXJzLCBSYXRlID0gMTYuNjclID0gKDUwLzMpJSAgU2ltcGxlIEludGVyZXN0ID0gW3ggw5cgKDUwLzMpIMOXIDVdLzEwMCA9IDV4LzYgIEFtb3VudCA9IHggKyA1eC82ID0gMTF4LzYgICAgIFRodXMsIG1vbmV5IGRvZXMgbm90IGdldCBkb3VibGVkIGluIDUgeWVhcnMgaWYgdGhlIHJhdGUgb2YgaW50ZXJlc3QgaXMgMTYuNjclLiAgICBIZW5jZSwgU3RhdGVtZW50IEkgaXMgbm90IGNvcnJlY3QuICBGcm9tIFN0YXRlbWVudCBJSTogIExldCB0aGUgc3VtIGJlIFJzLiB4LiAgVGltZSA9IDUgeWVhcnMsIFJhdGUgPSAyMCUgIFNpbXBsZSBJbnRlcmVzdCA9IFt4IMOXIDIww5cgNV0vMTAwID0geCAgQW1vdW50ID0geCArIHggPSAyeCAgICAgVGh1cywgbW9uZXkgZ2V0cyBkb3VibGVkIGluIDUgeWVhcnMgaWYgdGhlIHJhdGUgb2YgaW50ZXJlc3QgaXMgMjAlLiAgICAgSGVuY2UsIFN0YXRlbWVudCBJSSBpcyBjb3JyZWN0LiAgRnJvbSBTdGF0ZW1lbnQgSUlJOiAgTW9uZXkgZ2V0cyBkb3VibGVkIGluIDUgeWVhcnMuICAgTGV0IHRoZSBzdW0gYmUgUnMuIHguICBBbW91bnQgPSAyeCwgVGltZSA9IDUgeWVhcnMgIFNpbXBsZSBJbnRlcmVzdCA9IEFtb3VudCAtIFByaW5jaXBhbCA9IDJ4IC0geCA9IHggIFJhdGUgPSBbU2ltcGxlIEludGVyZXN0IMOXIDEwMF0vW1ByaW5jaXBhbCDDlyBUaW1lXSA9ICh4IMOXIDEwMCkvKHggw5cgNSkgPSAyMCUgIE5vdywgUHJpbmNpcGFsID0geCwgUmF0ZSA9IDIwJSwgVGltZSA9IDEwIHllYXJzICAgICAgIFNpbXBsZSBJbnRlcmVzdCA9IFt4IMOXIDIwIMOXIDEwXS8xMDAgPSAyeCAgQW1vdW50ID0geCArIDJ4ID0gM3ggICAgICBUaHVzLCBtb25leSBkb2VzIG5vdCBiZWNvbWUgNCB0aW1lcy4gICAgICAgSGVuY2UsIFN0YXRlbWVudCBJSUkgaXMgbm90IGNvcnJlY3QuICBUaHVzLCBPbmx5IFN0YXRlbWVudCBJSSBpcyBjb3JyZWN0LiAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only I and III are correct",
        "option2" : " Only II is correct",
        "option3" : " Only III is correct",
        "option4" : " Only II and III are correct. Directions for the following 4 (four) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following is the most rationalinference(s) one can draw from the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdTdWljaWRlcyB3aGljaCBoYXBwZW4gZHVlIHRvIGNvZXJjaW9uIGFuZCB0aHJlYXQgb2YgIHZpb2xlbmNlIGFyZSBub3QgdHJ1bHkgc3VpY2lkZXMsIHRoZXkgYXJlIG11cmRlcnMgY29tbWl0dGVkIGJ5IGFsbCBvZiB1cy4nIEl0IGltcGxpZXMgdGhhdCBpbiBtYW55IGNhc2VzIGFsbCAgb2YgdXMsIGkuZS4gc29jaWV0eSBwcm92b2tlcyBzb21lb25lIHRvIHN1Y2ggYW4gZXh0ZW50IHRoYXQgdGhlIHBlcnNvbiBjb21taXRzIHN1aWNpZGUuIE5vdCBldmVyeSBzdWljaWRlICBpcyBwcm92b2tlZCBieSBzb2NpZXR5LCBidXQgdGhvc2UgaW52b2x2aW5nIGNvZXJjaW9uIGFuZCB0aHJlYXQgb2YgdmlvbGVuY2UgYXJlIHByb3Zva2VkIGJ5IHNvY2lldHkuICBUaGVyZWZvcmUsIHRoaXMgaXMgdGhlIGNvcnJlY3Qgb3B0aW9uLiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgdGhhdCBzb2NpZXR5IGlzIHRoZSBvbmx5IHJlYXNvbiBiZWhpbmQgc3VpY2lkZXMuIFNvICB0aGlzIGlzIGFuIGluY29ycmVjdCBzdGF0ZW1lbnQuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGF0IHNvY2lldHkgcHJvbW90ZXMgc3VpY2lkZSBpbiBvcmRlciB0byBtYWludGFpbiAgaXRzIHN1cHJlbWFjeSBvdmVyIGluZGl2aWR1YWxzLiBUaGlzIGlzIGVudGlyZWx5IGJleW9uZCB0aGUgc2NvcGUgb2YgdGhpcyBwYXNzYWdlLiBTbyB0aGlzIGlzIGFuIGluY29ycmVjdCAgc3RhdGVtZW50LiAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGluY29ycmVjdCBiZWNhdXNlIG9wdGlvbnMgKGIpIGFuZCAoYykgYXJlIGFscmVhZHkgaW5jb3JyZWN0IGFzICBleHBsYWluZWQgYWJvdmUuICAgICAgICAgMTQgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Society, in many cases, provokes one to commit suicide.",
        "option2" : " Society is solely responsible for suicide.",
        "option3" : " Society promotes suicide in order to maintain its supremacy over individuals.",
        "option4" : " All of the above"
      }
    },
    {
      "index" : 52,
      "question" : "Which one of the following acts represents usas insensitive human beings according to thepassage?1. Raising voice at every act of injustice.2. Loving the talk of death.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IFN0YXRlbWVudCAxIGRvZXMgbm90IGRpc3BsYXkgaW5zZW5zaXRpdml0eS4gSXQgaXMgaW4gZmFjdCBhIGRpc3BsYXkgb2Ygc2Vuc2l0aXZpdHkgd2hlbiBwZW9wbGUgcmFpc2Ugdm9pY2UgIHdoZW5ldmVyIHRoZXJlIGlzIGFuIGFjdCBvZiBpbmp1c3RpY2UuICBTdGF0ZW1lbnQgMiBkaXNwbGF5cyBpbnNlbnNpdGl2aXR5LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1dlIGxvdmUgdGhlIHRhbGsgb2YgZGVhdGggYXMgYSBtZWFucyBvZiAgcmV0cmlidXRpb24uJyBJdCBpbXBsaWVzIHdlIGVuam95IHRoZSBzdWljaWRlcyBhcyBhIG1lYW5zIG9mIHJldHJpYnV0aW9uIGluc3RlYWQgb2Ygc2hvd2luZyBlbXBhdGhldGljICBiZWhhdmlvdXIgYW5kIHNlbnNpdGl2aXR5IHRvIHRoZSB2aWN0aW1zLiBTbyB0aGlzIGlzIHRoZSBtb3N0IGluc2Vuc2l0aXZlIGFjdCBvZiB1cyBhY2NvcmRpbmcgdG8gdGhlIHBhc3NhZ2UuICBTbyB0aGlzIGlzIHRoZSBjb3JyZWN0IG9wdGlvbi4gIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 53,
      "question" : "Which of the following is/are the most rationaland logical Inference/Inferences that can bemade from the passage?1. There is a visible impact of adult behaviouron the brain of children.2. Imparting positive values in childrenthrough socialization is not the soleresponsibility of the family.Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBnaXZlbiBvcHRpb24gaXMgY29ycmVjdCBhcyBpdCBpcyBiYXNlZCBvbiB0aGUgbGluZXMgJ0J1dCBpbXBvcnRhbnRseSwgdGhpcyAgYXNzb2NpYXRpb24gd2FzIHRydWUgb25seSB3aGVuIHRoZSBhZHVsdHMgaW4gdGhvc2UgbmVpZ2hib3VyaG9vZHMgYWxzbyBkaWQgbm90IGhhdmUgc3Ryb25nIHNoYXJlZCAgbm9ybXMgYWJvdXQgcHJldmVudGluZyBjcmltZSBhbmQgdmlvbGVuY2UnLiBUaGlzIHNob3dzIHRoYXQgaW5jcmVhc2UgaW4gY2hpbGRyZW4ncyBicmFpbiBhY3Rpdml0eSBpbiAgcmVzcG9uc2UgdG8gdmlld2luZyBlbW90aW9uYWwgZmFjZXMgb24gc2NyZWVuIG9jY3VycyBvbmx5IHdoZW4gYWR1bHRzIGluIHRoZSBuZWlnaGJvdXJob29kIGFsc28gaGFkICB3ZWFrIGF0dGl0dWRlcyB0b3dhcmRzIHByZXZlbnRpbmcgdmlvbGVuY2UuIFRoaXMgc2hvd3MgYSBjb3JyZWxhdGlvbiBiZXR3ZWVuIGFkdWx0IGJlaGF2aW9yIGFuZCAgY2hpbGRyZW4ncyBicmFpbiBhY3Rpdml0eS4gSGVuY2UsIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICAgSW5mZXJlbmNlIDIgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdCdXQgbmVpZ2hib3VycyBtYXkgaGVscCBwcm90ZWN0IGNoaWxkcmVuIGZyb20gdGhlc2UgZWZmZWN0cyBvbiB0aGUgIGJyYWluIHdoZW4gdGhleSBjYW4gYnVpbGQgcG9zaXRpdmUgc29jaWFsIG5vcm1zIGFib3V0IGxvb2tpbmcgb3V0IGZvciBvbmUgYW5vdGhlciBhbmQgcHJldmVudGluZyAgdmlvbGVuY2UnLCBzaG93IHRoYXQgbmVpZ2hib3VyIGFsc28gcGxheXMgYSBjcml0aWNhbCByb2xlIGluIHRoZSBzb2NpYWxpemF0aW9uIG9mIGNoaWxkcmVuIGJlc2lkZXMgZmFtaWx5LiAgVGhleSB0b28gY291bGQgaGVscCBpbiBidWlsZGluZyBwb3NpdGl2ZSB2YWx1ZXMgaW4gY2hpbGRyZW4uIFNvLCB0aGlzIGluZmVyZW5jZSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 54,
      "question" : "Which one of the following statements bestimplies the crux of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gYmVzdCBjYXB0dXJlcyB0aGUgZXNzZW5jZS4gVGhlIGxpbmVzICdDaGlsZHJlbiBncm93aW5nIHVwIGluIG1vcmUgIGRpc2FkdmFudGFnZWQgbmVpZ2hib3VyaG9vZHMgLSBtZWFuaW5nIHRob3NlIHdpdGggcG9vciBob3VzaW5nIHF1YWxpdHksIG1vcmUgcG92ZXJ0eSBhbmQgbG93ZXIgIGxldmVscyBvZiBlbXBsb3ltZW50IGFuZCBlZHVjYXRpb24gLSBzaG93IG9ic2VydmFibGUgaW5jcmVhc2VzIGluIGJyYWluIGFjdGl2aXR5IHdoZW4gdmlld2luZyAgZW1vdGlvbmFsIGZhY2VzIG9uIGEgc2NyZWVuLiBCdXQgaW1wb3J0YW50bHksIHRoaXMgYXNzb2NpYXRpb24gd2FzIHRydWUgb25seSB3aGVuIHRoZSBhZHVsdHMgaW4gdGhvc2UgIG5laWdoYm91cmhvb2RzIGFsc28gZGlkIG5vdCBoYXZlIHN0cm9uZyBzaGFyZWQgbm9ybXMgYWJvdXQgcHJldmVudGluZyBjcmltZSBhbmQgdmlvbGVuY2UnLiBBbGwgdGhlc2UgIGxpbmVzIHNob3cgdGhhdCBuZWlnaGJvdXJob29kIGFuZCB0aGVpciBzZW5zZSBvZiBzaGFyZWQgdmFsdWVzIGNhbiBpbXBhY3QgdGhlIGJyYWluIGRldmVsb3BtZW50IG9mIHRoZSAgY2hpbGQuIFNvLCB0aGlzIGlzIHRoZSBiZXN0IGNydXggb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gc2VlbXMgdG8gYmUgY29ycmVjdC4gSG93ZXZlciwgdGhpcyBpcyBub3QgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIGluICB0aGUgcGFzc2FnZS4gQXMgcGVyIHRoZSBwYXNzYWdlLCBwb3ZlcnR5IGluIHRoZSBuZWlnaGJvdXJob29kIG5lZ2F0aXZlbHkgaW1wYWN0cyBjaGlsZHJlbiBvbmx5IHdoZW4gdGhlICBhZHVsdHMgYXJlIGFsc28gaW5jbGluZWQgdG8gY29tbWl0IGNyaW1lIGFuZCB2aW9sZW5jZS4gU28sIHRoaXMgb3B0aW9uIGlzIG5vdCB0aGUgY3J1eC4gIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiAgVGhpcyBvcHRpb24gaW4gZ2VuZXJhbCBzZWVtcyB0byBiZSBjb3JyZWN0IGJ1dCB0aGVyZSBpcyBubyBkaXNjdXNzaW9uIGluIHRoZSAgcGFzc2FnZSBhYm91dCBob3cgZWR1Y2F0aW9uIGNhbiBiZSBhIHRvb2wgZm9yIGltcGFydGluZyBwb3NpdGl2ZSB2YWx1ZXMgdG8gY2hpbGRyZW4uIFRoZSBwYXNzYWdlIGlzIGFib3V0ICB0aGUgaW1wb3J0YW5jZSBvZiBuZWlnaGJvdXJob29kIGFuZCBpdHMgaW1wYWN0IG9uIHRoZSBicmFpbiBkZXZlbG9wbWVudCBvZiB0aGUgY2hpbGQuICBTbywgdGhpcyBvcHRpb24gaXMgIG5vdCBjb3JyZWN0LiAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UgYXMgaXQgZG9lcyBub3QgZGVsdmUgaW50byAgc3VnZ2VzdGluZyBwb2xpY3kgbWVhc3VyZXMgZm9yIGNoaWxkcmVuIGxpdmluZyBpbiBkaXNhZHZhbnRhZ2VkIG5laWdoYm91cmhvb2RzLiBTbywgdGhpcyBvcHRpb24gaXMgbm90IHRoZSAgY3J1eC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " There's an impact of the neighbourhood and its values on the brain development of the child.",
        "option2" : " Poverty in the neighbourhood results in children committing crimes and violence.",
        "option3" : " Education is the best tool for children for imparting strong shared norms.",
        "option4" : " There is a need for a child policy which deals with the development of children in disadvantaged neighbourhoods."
      }
    },
    {
      "index" : 55,
      "question" : "In a class, 40% of the boys is same as half ofthe girls, and there are 20 girls in total. Totalnumber of students in the class is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IDQwJSBvZiB0aGUgYm95cyBpcyBzYW1lIGFzIGhhbGYgb2YgdGhlIGdpcmxzLCBhbmQgdGhlcmUgYXJlIDIwIGdpcmxzLiAgU28sIDQwJSBvZiBib3lzID0gMjAvMiA9IDEwICBUaGVyZWZvcmUsIDEwMCUgb2YgYm95cyA9ICgxMC80MCUpIMOXIDEwMCUgPSAyNSAgVGhlcmVmb3JlLCB0b3RhbCBudW1iZXIgb2YgYm95cyA9IDI1ICBUaHVzLCB0b3RhbCBudW1iZXIgb2Ygc3R1ZGVudHMgPSAyNSArIDIwID0gNDUgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 70",
        "option2" : " 45",
        "option3" : " 35",
        "option4" : " 25       15           "
      }
    },
    {
      "index" : 56,
      "question" : "A country follows a progressive taxationsystem under which the monthly income taxrates applicable vary for different slabs ofincome. Total tax is computed by calculatingthe tax for each slab and adding them up. Therates applicable are as follows:Monthly Income Tax Rate 0 to 50,000 0% 50001 to 60,000 10% 60001 to 1,50,000 20% >1,50,000 30% If my income is Rs.  70,000 per month, then what is the tax payable by me each month ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IFRvdGFsIGluY29tZSBjYW4gYmUgZGl2aWRlZCBhczogIFJzLiAxLDcwLDAwMCA9IDUwLDAwMCArIDEwLDAwMCArIDkwLDAwMCArIDIwLDAwMCAgVGF4IHBheWFibGUgPSA1MCwwMDAgw5cgMCUgKyAxMDAwMCDDlyAxMCUgKyA5MCwwMDAgw5cgMjAlICsgMjAsMDAwIMOXIDMwJSAgPSAxMDAwICsgMTgwMDAgKyA2MDAwID0gUnMuIDI1MDAwICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgICAgIDE1ICAgICAgICAgICAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 51000",
        "option2" : " Rs. 17000",
        "option3" : " Rs. 34000",
        "option4" : " Rs. 25000"
      }
    },
    {
      "index" : 57,
      "question" : "A Business Group has 3 Companies X, Y, Zand a Trust P which is engaged in charitableactivities. Each group company has to donate5% of its own funds to the trust. X has given aloan to Y which is equivalent to 10% of thefunds of Y. After receiving the loan, Y hasfunds which are 2 times the funds of Z. If Zgave Rs. 10000 in donation to trust P, then howmuch is the approximate contribution of Y totrust P?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IExldCBYLCBZIGFuZCBaIGhhdmUgdGhlaXIgb3duIGZ1bmRzIG9mIFJzIHgsIFJzLiB5IGFuZCBScy4geiByZXNwZWN0aXZlbHkuICBUaGVuIFkgcmVjZWl2ZWQgMTAlIG9mIGl0cyBmdW5kIGZyb20gWC4gIFNvLCBZJ3MgdG90YWwgZnVuZCA9IHkgKyAoMTAvMTAwKXkgPSAxLjF5ICBEb25hdGlvbiBnaXZlbiBieSBjb21wYW55IFogPSBScy4gMTAwMDAgIEl0IG1lYW5zIHRoYXQsIHogw5cgNS8xMDAgPSAxMDAwMCAgT3IgeiA9IFJzLiAyLDAwLDAwMCAgTm93IGFzIHBlciB0aGUgcXVlc3Rpb24sIGFmdGVyIHJlY2VpdmluZyB0aGUgbG9hbiwgWSBoYXMgZnVuZHMgd2hpY2ggYXJlIDIgdGltZXMgdGhlIGZ1bmRzIG9mIFouICBTbywgMS4xeSA9IDJ6ICBPciAxLjF5ID0gMiDDlyAyMDAwMDAgIE9yIHkgPSA0MDAwMDAvMS4xID0gUnMuIDM2MzYzNi4zNiAgRG9uYXRpb24gZ2l2ZW4gYnkgWSB0byB0cnVzdCBQID0geSDDlyA1LzEwMCA9IDM2MzYzNi4zNiDDlyA1LzEwMCA9IFJzLiAxODAwMCAoYXBwcm94aW1hdGVseSkg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 17,000",
        "option2" : " Rs. 18,000",
        "option3" : " Rs. 19,000",
        "option4" : " Rs. 20,000"
      }
    },
    {
      "index" : 58,
      "question" : "The pre-paid recharge of a certain telecomcompany X gives 21% less talktime than thatgiven by pre-paid recharge of telecom companyY at the same price. The post-paid talktimegiven by X is 12% more than that given by itspre-paid recharge at the same price. Further, thepost-paid talktime given by Y is 15% less thanthat given by its pre-paid recharge at the sameprice. How much percent less/more talktimecan one get from the post-paid service of X ascompared to the post-paid service of Y?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IFRoZSBwcmUtcGFpZCByZWNoYXJnZSBvZiBhIGNlcnRhaW4gdGVsZWNvbSBjb21wYW55IFggZ2l2ZXMgMjElIGxlc3MgdGFsa3RpbWUgdGhhbiB0aGF0IGdpdmVuIGJ5IHByZS1wYWlkICByZWNoYXJnZSBvZiB0ZWxlY29tIGNvbXBhbnkgWSBhdCB0aGUgc2FtZSBwcmljZS4gICBMZXQsIFRhbGt0aW1lIGdpdmVuIGJ5IFByZXBhaWQgcmVjaGFyZ2Ugb2YgY29tcGFueSBZID0gMTAwICBUYWxrdGltZSBnaXZlbiBieSBQcmVwYWlkIHJlY2hhcmdlIG9mIGNvbXBhbnkgWCA9IDEwMCAtIDIxID0gNzkgIFRhbGt0aW1lIGdpdmVuIGJ5IFBvc3RwYWlkIHJlY2hhcmdlIG9mIGNvbXBhbnkgWSA9IDEwMCAtIDE1ID0gODUgIFRhbGt0aW1lIGdpdmVuIGJ5IFBvc3RwYWlkIHJlY2hhcmdlIG9mIGNvbXBhbnkgWCA9IDc5IMOXICgxMDAgKyAxMikvMTAwID0gODguNDggIFJlcXVpcmVkIHBlcmNlbnRhZ2UgPSBbKDg4LjQ4IC0gODUpLzg1XSDDlyAxMDAgPSBbMy40OC84NV0gw5cgMTAwID0gNCUgbW9yZSAoYXBwcm94aW1hdGVseSkg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 4% more",
        "option2" : " 5% less",
        "option3" : " 5% more",
        "option4" : " 8% less"
      }
    },
    {
      "index" : 59,
      "question" : "A dealer sold two bicycles for Rs. 9900 each,gaining 10% on one and losing 10% on theother. The total gain or loss percent in thewhole transaction is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IElmIGFueSB0d28gdHJhbnNhY3Rpb25zIFNQIGlzIHRoZSBzYW1lLCBhbmQgYWxzbyBnYWluJSBhbmQgbG9zcyUgYXJlIHRoZSBzYW1lIHRoZW4gdGhlcmUgaXMgYWx3YXlzIGEgbG9zcy4gIExvc3MlID0gKGNvbW1vbiBnYWluIG9yIGxvc3MlIC8xMCkyID0gKDEwLzEwKTIgPSAxJSAgSGVuY2UsIGluIHRoZSB3aG9sZSB0cmFuc2FjdGlvbiB0aGVyZSBpcyBhIGxvc3Mgb2YgMSUuICBBbHRlcm5hdGUgTWV0aG9kOiAgUy5QLiBvZiBmaXJzdCBiaWN5Y2xlID0gUnMuIFJzLiA5OTAwLCBHYWluJSA9IDEwJSAgU28sIEMuUC4gb2YgZmlyc3QgYmljeWNsZSA9IDk5MDAgw5cgKDEwMC8xMTApID0gUnMuIDkwMDAgIFMuUC4gb2Ygc2Vjb25kIGJpY3ljbGUgPSBScy4gUnMuIDk5MDAsIExvc3MlID0gMTAlICBTbywgQy5QLiBvZiBzZWNvbmQgYmljeWNsZSA9IDk5MDAgw5cgKDEwMC85MCkgPSBScy4gMTEwMDAgIFRvdGFsIEMuUC4gPSA5MDAwICsgMTEwMDAgPSBScy4gMjAwMDAgIFRvdGFsIFMuUC4gPSA5OTAwICsgOTkwMCA9IFJzLiAxOTgwMCAgTG9zcyA9IDIwMDAwIC0gMTk4MDAgPSBScy4gMjAwICBMb3NzJSA9ICgyMDAvMjAwMDApIMOXIDEwMCA9IDElIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " (1/99)% gain",
        "option2" : " (100/99)% gain",
        "option3" : " 1% loss",
        "option4" : " Neither loss nor gain"
      }
    },
    {
      "index" : 60,
      "question" : "On selling a pen at 5% loss and a book at 15%gain, Karan gains Rs. 7. If he sells the pen at5% gain, and the book at 10% gain, then hegains Rs. 13. The actual price of the book is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IExldCB0aGUgQ1Agb2YgYSBwZW4gYW5kIGEgYm9vayBiZSBScy4geCBhbmQgUnMuIHkgcmVzcGVjdGl2ZWx5LiAgQ1Agb2YgYSBwZW4gYW5kIGEgYm9vayA9IFJzLiAoeCArIHkpICAgT24gc2VsbGluZyBhIHBlbiBhdCA1JSBsb3NzIGFuZCBhIGJvb2sgYXQgMTUlIGdhaW4sIEthcmFuIGdhaW5zIFJzLiA3LiAgU28sIDAuOTV4ICsgMS4xNXkgPSAoeCArIHkpICs3ICBvciAwLjE1eSAtIDAuMDV4ID0gNyAgIC4uLi4uLi4uLi4uLi4uLi4uLi4uIChpKSAgSWYgaGUgc2VsbHMgdGhlIHBlbiBhdCA1JSBnYWluLCBhbmQgYSBib29rIGF0IDEwJSBnYWluLCB0aGVuIGhlIGdhaW5zIFJzLiAxMy4gIFNvLCAxLjA1eCArIDEuMXkgPSAoeCArIHkpICsgMTMgIG9yIDAuMDV4ICsgMC4xeSA9IDEzICAuLi4uLi4uLi4uLi4uLi4uLi4uIChpaSkgIFNvbHZpbmcgZXF1YXRpb25zIChpKSBhbmQgKGlpKSwgd2UgZ2V0OiAgeSA9IFJzLiA4MCAgU28sIGFjdHVhbCBwcmljZSBvZiB0aGUgYm9vayBpcyBScy4gODAuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 100",
        "option2" : " Rs. 80",
        "option3" : " Rs. 10",
        "option4" : " Rs. 40       16           "
      }
    },
    {
      "index" : 61,
      "question" : "A dairyman pays Rs. 6.4 per litre for milk. Headds water and sells the mixture at Rs. 8 perliter, thereby making 37.5% profit. The ratio ofwater to milk received by the customer is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IExldCB0aGUgcXVhbnRpdHkgb2YgbWlsayBwdXJjaGFzZWQgYmUgeCBsaXRyZXMgYW5kIHF1YW50aXR5IG9mIHdhdGVyIGFkZGVkIHRvIGl0IGJlIHkgbGl0cmVzLiBUaGVuIHJhdGlvIG9mICB3YXRlciB0byBtaWxrIHdpbGwgYmUgeTp4LiAgTm93LCBDUCBvZiB4IGxpdHJlcyBtaWxrID0gUnMuIDYuNHggYW5kICAgUy5QIG9mIHRoZSBtaXh0dXJlIHdoZW4geSBsaXRyZXMgb2Ygd2F0ZXIgaXMgYWRkZWQgdG8geCBsaXRyZXMgb2YgbWlsayA9IFJzLiA4KHggKyB5KSBBbmQgcHJvZml0IHBlcmNlbnQgPSAzNy41JSBOb3csIFNQID0gQ1Agw5cgKDEwMCArIFByb2ZpdCUpIFNvLCA4ICh4ICsgeSkgPSA2LjR4IMOXICgxMDAgKyAzNy41KS8xMDAgICAgICAgMTYgICAgICAgICAgICAgICAgICBPciA4eCArIDh5ID0gOC44eCAgT3IgOHkgPSAwLjh4ICAgT3IgeC95ID0gODAvOCA9IDEwLzEgIE9yIHk6eCAgPSAxOjEwICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1:5",
        "option2" : " 1:10",
        "option3" : " 1:20",
        "option4" : " 1:12"
      }
    },
    {
      "index" : 62,
      "question" : "A person deposited Rs. 13,200 in a bank, whichpays 14% simple interest. If he rather hadinvested in Rs. 110 stocks which pay adividend of 15% on the face value of Rs. 100,how much would he had lost or gained?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IEludGVyZXN0IGVhcm5lZCBvbiBScy4gMTMyMDAgYXQgYSByYXRlIG9mIDE0JSA9IFJzLiAxODQ4ICBOdW1iZXIgb2Ygc2hhcmVzIHB1cmNoYXNlZCA9IDEzMjAwLzExMCA9IDEyMCAgRGl2aWRlbmQgZWFybmVkIGJ5IGhpbSBvbiAxMjAgc2hhcmVzIHdoaWNoIHBheXMgYSBkaXZpZGVuZCBvZiAxNSUgcGVyIHNoYXJlID0gMTIwIMOXIFsoMTUvMTAwKSDDlyAxMDBdICA9IFJzLiAxODAwICBUaGVyZWZvcmUsIG5ldCBwcm9maXQgPSAxODQ4IC0gMTgwMCA9IFJzLiA0OCA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Loses Rs. 48",
        "option2" : " Gains Rs. 48",
        "option3" : " Loses Rs. 132",
        "option4" : " Gains Rs. 132"
      }
    },
    {
      "index" : 63,
      "question" : "A manufacturer sells a pair of glasses to awholesale dealer at a profit of 18%. Thewholesaler sells the same to a retailer at a profitof 20%. The retailer in turn sells them to acustomer at 25% profit. If the cost price for thecustomer is Rs. 30.09, then the cost price forthe manufacturer must have been:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IExldCB0aGUgQy5QIGZvciB0aGUgbWFudWZhY3R1cmVyIGJlIFJzLiAxMDAuICBUaGVuIEMuUCBmb3IgdGhlIHdob2xlc2FsZXIgPSBScy4gMTE4ICBDLlAgZm9yIHRoZSByZXRhaWxlciA9IDExOCDDlyAoMTIwLzEwMCkgPSBScy4gMTQxLjYwIEMuUCBmb3IgdGhlIGN1c3RvbWVyID0gMTQxLjYwIMOXICgxMjUvMTAwKSA9IFJzLiAxNzcgSWYgdGhlIEMuUCBmb3IgdGhlIGN1c3RvbWVyIGlzIFJzLiAxNzcsIHRoZW4gdGhlIEMuUCBmb3IgdGhlIG1hbnVmYWN0dXJlciBpcyAxMDAuIFRoZXJlZm9yZSwgaWYgdGhlIEMuUCBmb3IgdGhlIGN1c3RvbWVyIGlzIFJzLiAzMC4wOSwgdGhlbiB0aGUgQy5QIGZvciB0aGUgbWFudWZhY3R1cmVyID0gKDEwMC8xNzcpIMOXIDMwLjA5ID0gUnMuIDE3IEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3Qu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 15",
        "option2" : " Rs. 16",
        "option3" : " Rs. 17",
        "option4" : " Rs. 18"
      }
    },
    {
      "index" : 64,
      "question" : "A departmental store receives a shipment of1,000 shirts, for which it pays Rs. 900000. Thestore sells the shirts at a price 80 per cent abovethe cost for one month, after which it reducesthe price of the shirts to 20 per cent above thecost. The store sells 750 shirts in the firstmonth, and 50 per cent of the remaining shirtsafterwards. How much gross income did thesales of the shirts generate?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IENvc3QgcHJpY2Ugb2YgMSwwMDAgc2hpcnRzID0gUnMuIDkwMDAwMCAgU28sIENvc3QgcHJpY2Ugb2Ygb25lIHNoaXJ0ID0gOTAwMDAwLzEwMDAgPSBScy4gOTAwICBUaGUgc3RvcmUgc2VsbHMgNzUwIHNoaXJ0cyBpbiB0aGUgZmlyc3QgbW9udGggYXQgYSBwcmljZSA4MCBwZXIgY2VudCBhYm92ZSB0aGUgY29zdCBwcmljZSwgYW5kIDUwIHBlciBjZW50IG9mICB0aGUgcmVtYWluaW5nIHNoaXJ0cywgaS5lLiAxMjUgc2hpcnRzLCBhZnRlcndhcmRzIGF0IDIwIHBlciBjZW50IGFib3ZlIHRoZSBjb3N0IHByaWNlLiAgR3Jvc3MgaW5jb21lIGdlbmVyYXRlZCBieSBzZWxsaW5nIHRoZSBzaGlydHMgPSA3NTAgw5cgKDE4MCUgb2YgUnMuIDkwMCkgKyAxMjUgw5cgKDEyMCUgb2YgUnMuIDkwMCkgICAgPSA3NTAgw5cgMTYyMCArIDEyNSDDlyAxMDgwICAgPSAxMjE1MDAwICsgMTM1MDAwID0gUnMuIDEzNTAwMDAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs. 1000000",
        "option2" : " Rs. 1080000",
        "option3" : " Rs. 1215000",
        "option4" : " Rs. 1350000"
      }
    },
    {
      "index" : 65,
      "question" : "Two friends Ajit and Lalit made investments ina business in the ratio 60:40. Lalit hadborrowed his entire invested amount aspersonal loan at an annual interest rate of 5%.He repaid this loan after one year. After 5 yearsof investment, they got a profit of 30% on thetotal investment they had made. What is theratio of actual profit made by Ajit and Lalit?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IExldCBBaml0J3MgYW5kIExhbGl0J3MgaW52ZXN0bWVudCBiZSAzeCBhbmQgMnggcmVzcGVjdGl2ZWx5ICjiiLUgdGhlaXIgaW52ZXN0bWVudCByYXRpbyBpcyA2MDo0MCBpLmUuIDM6MikgIFByb2ZpdCBhZnRlciA1IHllYXJzIG9mIGludmVzdG1lbnQgPSAzMCUgb2YgNXggPSAoMzAvMTAwKSA1eCA9IDEuNXggIFByb2ZpdCBzaGFyZSBvZiBBaml0IGluIHJhdGlvICg2MDo0MCkgb2YgdGhlaXIgaW52ZXN0bWVudCA9IDMvNXRoIG9mIDEuNXggPSAwLjl4ICBQcm9maXQgc2hhcmUgb2YgTGFsaXQgPSAxLjV4IC0gMC45eCA9IDAuNnggIEludGVyZXN0IHBhaWQgYnkgTGFsaXQgZm9yIG9uZSB5ZWFyIG9mIGJvcnJvd2luZyA9IDUlIG9mIDJ4ID0gMC4xeCAgIEhlbmNlLCBhY3R1YWwgcHJvZml0IG9mIExhbGl0ID0gMC42eCAtIDAuMXggPSAwLjV4ICBIZW5jZSwgcmF0aW8gb2YgdGhlaXIgcHJvZml0cyA9ICgwLjl4KSA6ICggMC41eCkgPSA5IDogNSA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3 : 2",
        "option2" : " 2 : 3",
        "option3" : " 9 : 5",
        "option4" : " 11 : 18 Directions for the following 4 (four) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only.        17           "
      }
    },
    {
      "index" : 66,
      "question" : "According to the passage, which of thefollowing is/are the benefits of education?1. Discipline, Confidence and Punctuality2. Enhanced economic participation of women3. Technological literacy of the society4. Improving the communication skills of thepersonSelect the correct answer form the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAiRWR1Y2F0aW9uIHByb3ZpZGVzIGEgcGVyc29uIHdpdGggZW5kbGVzcyBvcHBvcnR1bml0aWVzICBmb3IgZ3Jvd3RoIGFuZCBhZHZhbmNlbWVudC4gUGVvcGxlIHdobyBoYXZlIGhhZCBhbiBlZHVjYXRpb24gdGVuZCB0byBiZSBjYWxtZXIgYW5kIG1vcmUgc2VsZi1hc3N1cmVkLiAgUGVvcGxlIHdobyBoYXZlIGJlZW4gZWR1Y2F0ZWQgYXJlIGRpc2NpcGxpbmVkIGFuZCB1bmRlcnN0YW5kIHRoZSBpbXBvcnRhbmNlIG9mIHRpbWUuIiBUaHVzLCBlZHVjYXRpb24gIGhlbHBzIGluIGVtYmVkZGluZyB0aGUgdmlydHVlcyBvZiBEaXNjaXBsaW5lLCBDb25maWRlbmNlIGFuZCBQdW5jdHVhbGl0eS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBvbmx5IG1lbnRpb25zIHRoYXQgZWR1Y2F0aW9uIHByb3ZpZGVzIG9wcG9ydHVuaXRpZXMgZm9yIGdyb3d0aCAgYW5kIGFkdmFuY2VtZW50IGluIGdlbmVyYWwuIEJ1dCB3ZSBjYW5ub3QgaW5mZXIgdGhhdCBpdCBsZWFkcyB0byBhbiBpbmNyZWFzZSBpbiBlY29ub21pYyBwYXJ0aWNpcGF0aW9uIG9mICB3b21lbi4gRXZlbiB0aG91Z2ggdGhlIHN0YXRlbWVudCBpcyBvdGhlcndpc2UgbG9naWNhbCwgYW5zd2VycyBzaG91bGQgYmUgZm91bmQgd2l0aGluIHRoZSBhbWJpdCBvZiB0aGUgIHBhc3NhZ2UuICAgICAgICAgMTcgICAgICAgICAgICAgICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIkVkdWNhdGlvbiBicmluZ3Mgb25lIHVwIHRvIHNwZWVkIG9uIHRlY2hub2xvZ2ljYWwgIGFkdmFuY2VtZW50cyBhcyB3ZWxsLiBBIHdlbGwtZWR1Y2F0ZWQgcGVyc29uIGNhbiBlYXNpbHkgYWRqdXN0IHRvIHRlY2hub2xvZ2ljYWwgZGV2ZWxvcG1lbnRzLiIgVGh1cywgIGVkdWNhdGlvbiBub3Qgb25seSBoZWxwcyBpbiB0ZWNobm9sb2dpY2FsIGFkdmFuY2VtZW50cyBidXQgYWxzbyBpbiBhbiBlYXN5IGFkanVzdG1lbnQgdG8gaXQuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gYWxsb3dzIGEgcGVyc29uIHRvIGJlIG1vcmUgZXhwcmVzc2l2ZSBhbmQgIG9waW5pb25hdGVkLiBIZSB3YXMgYWJsZSB0byByZWFkaWx5IGNvbW11bmljYXRlIGhpcyB2aWV3cG9pbnRzLCB3aGljaCB3ZXJlIHN1cHBvcnRlZCBieSBhIGNsZWFyIGFpbSAgYW5kIHJhdGlvbmFsZS4iIFRodXMsIGVkdWNhdGlvbiBoZWxwcyBpbiBkZXZlbG9waW5nIGNvbW11bmljYXRpb24gc2tpbGxzIGJ5IGVuYWJsaW5nIGEgcGVyc29uIHRvIGJlICBtb3JlIGV4cHJlc3NpdmUgYW5kIHJhdGlvbmFsLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2 and 3 only",
        "option2" : " 2 and 3 only",
        "option3" : " 1, 2 and 4 only",
        "option4" : " 1, 3 and 4 only"
      }
    },
    {
      "index" : 67,
      "question" : "Based on the above passage, the followingassumptions have been made:1. The sole goal of education is to ensureeveryone can read a book.2. The benefits of education do not remainlimited to one person alone.Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gYXMgdGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gaXMgYSB2YWx1YWJsZSB0b29sIGZvciBnYWluaW5nIGxlYXJuaW5nIGFuZCAgd2lzZG9tLi4uLi4uLi4gbm90aW9uIGVuY29tcGFzc2VzIG1vcmUgdGhhbiBqdXN0IGJvb2tzIGFuZCBib29raXNoIGtub3dsZWRnZS4iIFRodXMsIGl0IGlzIHdpc2RvbSB3aGljaCAgaXMgdGhlIHVsdGltYXRlIGRlc2lyZWQgcmVzdWx0IG9mIGVkdWNhdGlvbi4gQWxzbywgcmVhZGluZyBhbmQgd3JpdGluZyBoZWxwIG9uZSBpbiBkZWNpcGhlcmluZyBib29raXNoICBrbm93bGVkZ2UuIFRob3VnaCBpdCBpcyBpbXBvcnRhbnQsIHRoZSBwYXNzYWdlIG1lbnRpb25zLCAiSXQgaXNuJ3QgcmVxdWlyZWQgZm9yIGVkdWNhdGlvbiB0byBiZSBvbmx5IGJhc2VkICBvbiBib29rcy4iICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICJFZHVjYXRpb24gYmVuZWZpdHMgbm90IGp1c3QgdGhlIGluZGl2aWR1YWwgYnV0IGFsc28gdGhlICBjb21tdW5pdHkuIFRoZSBtb3N0IGltcG9ydGFudCBhc3BlY3Qgb2YgZWR1Y2F0aW9uIGlzIHRoYXQgaXQgZ29lcyBmcm9tIG9uZSBpbmRpdmlkdWFsIHRvIGFub3RoZXIsIHRoZW4gIHRocm91Z2hvdXQgc29jaWV0eSwgYW5kIGV2ZW50dWFsbHkgdGhyb3VnaG91dCB0aGUgY291bnRyeS4iIFRodXMsIGl0IGlzIHZhbGlkIHRvIGFzc3VtZSB0aGF0IHRoZSBiZW5lZml0cyBvZiAgZWR1Y2F0aW9uIGRvIG5vdCByZW1haW4gbGltaXRlZCB0byBvbmUgcGVyc29uIGFsb25lLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 68,
      "question" : "Which one of the following statements bestreflects the crux of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucyB0aGF0IGVkdWNhdGlvbiBpcyBhbiBpbXBvcnRhbnQgdG9vbCBmb3IgbGVhcm5pbmcuIEl0IG1lYW5zICB0aGF0IHRoZXJlIGNvdWxkIGJlIG90aGVyIHRvb2xzIHRvby4gSXQgZG9lcyBub3QgYW55d2hlcmUgc2F5IHRoYXQgaXQgaXMgYSBuZWNlc3NhcnkgY29uZGl0aW9uIGZvciBlY29ub21pYyAgZ3Jvd3RoLiBTbywgdGhlIHN0YXRlbWVudCBzZWVtcyBleHRyZW1lLiAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2Vzbid0IG1lbnRpb24gdGhhdCBzdWNjZXNzIGNhbiBvbmx5IGJlIGFjcXVpcmVkIGJ5IGVkdWNhdGlvbi4gU28sICBpdCBpcyBub3QgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuIEl0J3MgcHJldHR5IGV4dHJlbWUgc3RhdGVtZW50LiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIkVkdWNhdGlvbiwgbW9yZSB0aGFuIGFueXRoaW5nIGVsc2UsIGlzIGEgc291cmNlIG9mIGhvcGUuICBUaGUgZGVzaXJlIGZvciBhIGJldHRlciBsaWZlOyB0aGUgZGVzaXJlIGZvciBhIHdlYWx0aHkgYW5kIHBvdmVydHktZnJlZSBleGlzdGVuY2UuIiBUaGlzIHN1Z2dlc3RzIHRoYXQgIGVkdWNhdGlvbiBpcyBhIHRvb2wgZm9yIHBvdmVydHktYWxsZXZpYXRpb24uIEhvd2V2ZXIsIGl0IGNhbm5vdCBiZSBpbmZlcnJlZCB0aGF0IGFuIGVkdWNhdGVkIHNvY2lldHkgaXMgYSAgcHJlY29uZGl0aW9uIGZvciBwb3ZlcnR5LWZyZWUgZXhpc3RlbmNlLiBBbHNvLCB0aGUgZm9jdXMgb2YgdGhlIHBhc3NhZ2Ugc2VlbXMgdG8gYmUgbW9yZSBvbiBhbiBpbmRpdmlkdWFsICAoYW5kIHRoZSBiZW5lZml0cyB0aGF0IGFuIGVkdWNhdGVkIHBlcnNvbiBtYXkgcHJvdmlkZSB0byBpdHMgc3Vycm91bmRpbmdzKSwgcmF0aGVyIHRoYW4gdGhlIHNvY2lldHkgYXQgbGFyZ2UuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgIkVkdWNhdGlvbiBiZW5lZml0cyBub3QganVzdCB0aGUgaW5kaXZpZHVhbCBidXQgYWxzbyB0aGUgIGNvbW11bml0eS4uLiBFZHVjYXRpb24gYnJpbmdzIG9uZSB1cCB0byBzcGVlZCBvbiB0ZWNobm9sb2dpY2FsIGFkdmFuY2VtZW50cyBhcyB3ZWxsLiIgVGh1cywgYSB3ZWxsLSBlZHVjYXRlZCBwZXJzb24gaXMgYSB2YWx1YWJsZSBhc3NldCB0byB0aGUgc29jaWV0eS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Education is a necessary condition for economic growth of a person.",
        "option2" : " A person cannot be successful in life without education.",
        "option3" : " An educated society is essential for poverty-free existence.",
        "option4" : " A well-educated individual is a valuable asset to the society."
      }
    },
    {
      "index" : 69,
      "question" : "Which one of the following best reflects thecrux of the above passage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gY2FwdHVyZXMgdGhlIGVzc2VuY2Ugb2YgdGhlIHBhc3NhZ2UgYXMgdGhlIGNvbXBsZXRlIHBhc3NhZ2UgaXMgYWJvdXQgIHRoZSBlZmZlY3RzIG9mIElvVCBvbiBkaWZmZXJlbnQgYXNwZWN0cyBvZiBodW1hbiBsaWZlLiBUaGUgbGluZXMgJ09uZSBzdWNoIGRldmVsb3BtZW50IG9mIElvVCBpcyB0aGUgIGNvbmNlcHQgb2YgU21hcnQgSG9tZSBTeXN0ZW1zIChTSFMpIGFuZCBhcHBsaWFuY2VzIHRoYXQgY29uc2lzdCBvZiBpbnRlcm5ldC1iYXNlZCBkZXZpY2VzLCBhdXRvbWF0aW9uICBzeXN0ZW0gZm9yIGhvbWVzIGFuZCByZWxpYWJsZSBlbmVyZ3kgbWFuYWdlbWVudCBzeXN0ZW0uIEJlc2lkZXMsIGFub3RoZXIgaW1wb3J0YW50IGFjaGlldmVtZW50IG9mIElvVCAgaXMgdGhlIFNtYXJ0IEhlYWx0aCBTZW5zaW5nIHN5c3RlbSAoU0hTUyknLCB3aGljaCByZWZsZWN0cyB0aGF0IElvVCBoYXMgcG9zaXRpdmVseSBpbXBhY3RlZCB0aGUgbGl2ZXMgb2YgIGh1bWFucyBpbiB0aGUgZG9tYWluIG9mIGhlYWx0aCwgaG9tZSwgYW5kIGVuZXJneSBtYW5hZ2VtZW50IHN5c3RlbXMuIFNvLCB0aGlzIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIHRhbGtzIGFib3V0IG9ubGluZSBzZWN1cml0eSBkdWUgdG8gdGhlIGluY3JlYXNlZCB1c2Ugb2YgSW9ULiAgSG93ZXZlciwgdGhlcmUgaXMgbm8gbWVudGlvbiBvZiB0aGUgc2VjdXJpdHkgYXNwZWN0IG9mIElvVC4gVGhlIHBhc3NhZ2UgbWVyZWx5IGZvY3VzZXMgb24gaG93IElvVCBoYXMgIGFmZmVjdGVkIHRoZSBsaXZlcyBvZiBwZW9wbGUuIFRoZXJlZm9yZSwgdGhpcyBvcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSBhbmQgaXMgbm90IGNvcnJlY3QuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gYWxzbyB0YWxrcyBhYm91dCB0aGUgcG9zaXRpdmVzIGFuZCBuZWdhdGl2ZXMgb2YgSW9UIGluIHRoZSBtZWRpY2FsICBkb21haW4sIGJ1dCB0aGVyZSBpcyBubyBkaXNjdXNzaW9uIG9uIHRoZSBuZWdhdGl2ZXMgb2YgSW9UIGluIHRoZSBtZWRpY2FsIGRvbWFpbiBpbiB0aGUgcGFzc2FnZS4gIFRoZXJlZm9yZSwgdGhpcyBzdGF0ZW1lbnQgaXMgYWxzbyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gaW4gdGhlIHBhc3NhZ2Ugb24gdGhlIGluY3JlYXNlZCBjb3N0IG9mIGxpdmluZyBkdWUgdG8gdGhlICB1c2Ugb2YgSW9ULiBJdCBkb2VzIG5vdCByZXByZXNlbnQgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UgYXMgdGhlIGNydXggaXMgYWJvdXQgdGhlIHN1bW1hcnkgb2YgdGhlIHBhc3NhZ2UuICBTbywgdGhpcyBvcHRpb24gaXMgbm90IGNvcnJlY3QuICAgICAgICAxOCAgICAgICAgICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " IoT has positively affected the lives of humans in almost every domain.",
        "option2" : " With the increasing use of IoT, there is a dire need for investment in the online security of the citizens.",
        "option3" : " In the medical domain, IoT devices can act as a double-edged sword.",
        "option4" : " Application of high-end technology, and smart systems for home, health and energy increases the cost of living."
      }
    },
    {
      "index" : 70,
      "question" : "A machine costs m rupees per day to maintainand n paise for each unit it produces. If themachine produces r units in a week, then whichof the following is the total cost of operatingthe machine for a week?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IENvc3Qgb2YgMSBkYXkgdG8gbWFpbnRhaW4gdGhlIG1hY2hpbmUgPSBScy4gbSAgVGhlcmVmb3JlIDcgZGF5J3MgY29zdCBmb3IgbWFpbnRlbmFuY2UgPSBScy4gN20gIFNpbWlsYXJseSwgY29zdCBvZiAxIHVuaXQgPSBuIHBhaXNlIChmb3IgMSBkYXkpICA9IFJzLiBuLzEwMCAgVGhlcmVmb3JlLCBjb3N0IG9mIHIgdW5pdHMgPSBScy4gcm4vMTAwICBIZW5jZSwgVG90YWwgY29zdCA9IDdtICsoIHJuLzEwMCkgPSAoNzAwbSArIG5yKSAvMTAwIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 7m + 100nr",
        "option2" : " (700m + nr) /100",
        "option3" : " m + nr",
        "option4" : " 700mnr"
      }
    },
    {
      "index" : 71,
      "question" : "A shopkeeper purchases a packet of 50 pens atRs. 10 per pen. He sells a part of the packet at aprofit of 30%. On the remaining part, he incursa loss of 10%. If his overall profit on the wholepacket is 10%, the number of pens he sold atprofit is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEEgc2hvcGtlZXBlciBzZWxscyBhIHBhcnQgb2YgdGhlIHBhY2tldCBvZiA1MCBwZW5zIGF0IGEgcHJvZml0IG9mIDMwJSBhbmQgcmVtYWluaW5nIHBhcnQgb2YgdGhlIHBlbnMgYXJlICBzb2xkIGF0IGEgbG9zcyBvZiAxMCUuIEhpcyBvdmVyYWxsIHByb2ZpdCBvbiB0aGUgd2hvbGUgcGFja2V0IGlzIDEwJS4gIEJ5IEFsbGVnYXRpb24gTWV0aG9kOiAgIFJhdGlvIG9mIHBlbnMgc29sZCBhdCAzMCUgcHJvZml0IGFuZCAxMCUgbG9zcyA9IDE6MSAgU28sIE51bWJlciBvZiBwZW5zIHNvbGQgYXQgcHJvZml0ID0gWzEvKDErMSldIMOXIDUwID0gKDEvMikgw5cgNTAgPSAyNSAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4g",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 25",
        "option2" : " 30",
        "option3" : " 20",
        "option4" : " 15"
      }
    },
    {
      "index" : 72,
      "question" : "A garment company declared 15% discount forwholesale buyers. Mr. Sachdev boughtgarments from the company for Rs. 25000 aftergetting the discount. He fixed up the sellingprice of garments in such a way that he earneda profit of 8% on original company price. Whatis the approximate total selling price?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IERpc2NvdW50IHBlcmNlbnQgPSAxNSUgIFByaWNlIG9mIGdhcm1lbnRzIGFmdGVyIGdldHRpbmcgZGlzY291bnQgPSBDb3N0IHByaWNlIG9mIGdhcm1lbnRzIGZvciBNci4gU2FjaGRldiA9IFJzLiAyNTAwMCAgU28sIE9yaWdpbmFsIGNvbXBhbnkgcHJpY2UgPSAoMjUwMDAvODUpIMOXIDEwMCAg4oi0IFNlbGxpbmcgcHJpY2Ugb2YgZ2FybWVudHMgPSAoMjUwMDAvODUpIMOXIDEwMCDDlyAxMDgvMTAwID0gUnMuIDMxNzY0Ljcg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rs.28000",
        "option2" : " Rs. 29000",
        "option3" : " Rs. 31765",
        "option4" : " Rs. 29500"
      }
    },
    {
      "index" : 73,
      "question" : "A shopkeeper labelled the price on his articlesin such a manner so as to earn a profit of 30%on the cost price. He, then sold the articles byoffering a discount of 10% on the labelledprice. What is the actual profit percentageearned by him?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IExldCB0aGUgY29zdCBwcmljZSBvZiB0aGUgYXJ0aWNsZXMgYmUgUnMuIDEwMC4gIFNob3BrZWVwZXIgbGFiZWxlZCB0aGUgcHJpY2UgMzAlIGhpZ2hlciB0aGFuIHRoZSBjb3N0IHByaWNlLiAgU28sIE1hcmtlZCBwcmljZSA9IDEwMCArIDMwJSBvZiAxMDAgPSAxMDAgKyAzMCA9IFJzLiAxMzAgIEFmdGVyIGdpdmluZyBhIGRpc2NvdW50IG9mIDEwJSwgdGhlIHNlbGxpbmcgcHJpY2Ugb2YgdGhlIGFydGljbGVzID0gMC45IMOXIDEzMCA9IFJzLiAxMTcgIFNvLCBhY3R1YWwgcHJvZml0IHBlcmNlbnQgPSBbKDExNyAtIDEwMCkvMTAwXSDDlyAxMDAgPSAxNyUgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 18%",
        "option2" : " 15%",
        "option3" : " 20%",
        "option4" : " None of these"
      }
    },
    {
      "index" : 74,
      "question" : "Rani bought more apples than oranges. Shesells apples at Rs. 23 a piece and makes 15%profit. She sells orange at Rs. 10 a piece andmakes 25% profit. If she gets Rs. 653 afterselling all the apples and oranges, find herprofit percentage.",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc0",
      "description" : "IExldCBudW1iZXIgb2YgYXBwbGVzIGFuZCBvcmFuZ2VzIHRoYXQgUmFuaSBicm91Z2h0IGJlIEEgYW5kIE8gcmVzcGVjdGl2ZWx5LiAgTm93LCAyM0EgKyAxME8gPSA2NTMgIFNpbmNlIDY1MyBoYXMgbGFzdCBkaWdpdCBhcyAzIHdoaWNoIGNhbiBjb21lIGJ5IG11bHRpcGx5aW5nIDIzIHdpdGggMSwgMTEsIDIxLCAzMSBhbmQgc28gb24uIEhlcmUsIG51bWJlciAgb2YgYXBwbGVzIGJvdWdodCBpcyBncmVhdGVyIHRoYW4gbnVtYmVyIG9mIG9yYW5nZXMuIFNvLCBBID4gTyAgIFdlIGNhbiBzZWUgdGhhdCBBID0gMjEgYW5kIE8gPSAxNyBpcyB0aGUgb25seSBzb2x1dGlvbi4gICAgICAgIDE5ICAgICAgICAgICAgICAgICAgU28sIG51bWJlciBvZiBBcHBsZXMgYm91Z2h0ID0gMjEgYW5kIG51bWJlciBvZiBPcmFuZ2VzIGJvdWdodCA9IDE3LiAgQ29zdCBvZiBhbiBBcHBsZSA9IDIzLzEuMTUgYW5kICAgQ29zdCBvZiBhbiBPcmFuZ2UgPSAxMC8xLjI1ICBPdmVyYWxsIGNvc3QgPSAoMjMvMS4xNSkgw5cgMjEgKyAoMTAvMS4yNSkgw5cgMTcgPSA0ODMvMS4xNSArIDE3MC8xLjI1ID0gNDIwICsgMTM2ID0gNTU2ICBQcm9maXQgPSA2NTMgLSA1NTYgPSA5NyAgUHJvZml0IHBlcmNlbnRhZ2UgPSAoOTcvNTU2KSB4IDEwMCA9IDE3LjQlICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 16.8%",
        "option2" : " 17.4%",
        "option3" : " 18.9%",
        "option4" : " 183%       19           "
      }
    },
    {
      "index" : 75,
      "question" : "In a local shop as part of promotional measures,the shop owner sells three different varieties ofsoap, one at a loss of 13 percent, another at aprofit of 23 percent and the third one at a lossof 26 percent. Assuming that the shop ownersells all three varieties of soap at the sameprice, the approximate percentage by whichaverage cost price is lower or higher than theselling price is:",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "IExldCBTUCBvZiBlYWNoIGFydGljbGUgYmUgUnMuIDEwMC4gIFRodXMsIEMuUCBvZiBhcnRpY2xlIHNvbGQgYXQgMTMlIGxvc3MgPSBbMTAwLygxMDAgLSAxMyldIMOXIDEwMCA9ICgxMDAvODcpIMOXIDEwMCA9IFJzLiAxMTUgKGFwcHJveCkgIEMuUCBvZiBhcnRpY2xlIHNvbGQgYXQgMjMlIHByb2ZpdCA9IFsxMDAvKDEwMCArIDIzKV0gw5cgMTAwID0gKDEwMC8xMjMpIMOXIDEwMCA9IFJzLiA4MS4zIEMuUCBvZiBhcnRpY2xlIHNvbGQgYXQgMjYlIGxvc3MgPSBbMTAwLygxMDAgLSAyNildIMOXIDEwMCA9ICgxMDAvNzQpIMOXIDEwMCA9IFJzLiAxMzUuMSBUb3RhbCBDUCBvZiBhcnRpY2xlcyA9IDExNSArIDgxLjMgKyAxMzUuMSA9IFJzLiAzMzEuNCBSZXF1aXJlZCBwZXJjZW50YWdlID0gWygzMzEuNCAtIDMwMCkvMzAwXSDDlyAxMDAgPSAxMC41JSAoQXBwcm94KSBBdmVyYWdlIGNvc3QgcHJpY2UgaXMgaGlnaGVyIHRoYW4gdGhlIGF2ZXJhZ2Ugc2VsbGluZyBwcmljZSBieSAxMC41JSBhcHByb3hpbWF0ZWx5LiBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0Lg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10.5% higher",
        "option2" : " 12.5% lower",
        "option3" : " 14.5% lower",
        "option4" : " 8.5% higher"
      }
    },
    {
      "index" : 76,
      "question" : "The percentage of accountants at a companythat has 10,000 employees dropped from 10%at the end of last year to 6% at the end of thisyear. If the number of employees at the end ofthis year is 9,500, what is the approximatechange in the number of accountants over thisperiod?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc2",
      "description" : "IFRoZSBudW1iZXIgb2YgYWNjb3VudGFudHMgYXQgdGhlIGVuZCBvZiBsYXN0IHllYXIgPSAxMDAwMCDDlyAwLjEgPSAxMDAwICBUaGUgbnVtYmVyIG9mIGFjY291bnRhbnRzIGF0IHRoZSBlbmQgb2YgdGhpcyB5ZWFyID0gOTUwMCDDlyAwLjA2ID0gNTcwICBUaGUgYXBwcm94aW1hdGUgcGVyY2VudCBjaGFuZ2UgaW4gdGhlIG51bWJlciBvZiBhY2NvdW50YW50cyBmcm9tIHRoZSBlbmQgb2YgbGFzdCB5ZWFyIHRvIHRoZSBlbmQgb2YgdGhpcyAgeWVhciA9IFsoNTcwIOKIkiAxMDAwKS8xMDAwXSDDlyAxMDAgPSDiiJI0MyUgIFRoZXJlIHdhcyBhIDQzJSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIGFjY291bnRhbnRzIG92ZXIgdGhpcyBwZXJpb2QuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 13% increase",
        "option2" : " 43% decrease",
        "option3" : " 30% decrease",
        "option4" : " 23% decrease"
      }
    },
    {
      "index" : 77,
      "question" : "X is 20% of Y, which is 40% of Z. All three arepositive integers. In which range does thesmallest possible value of X + Y + Z  fall?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc3",
      "description" : "IFkgaXMgNDAlIG9mIFouIFNvLCBZID0gMC40MFogPSAoMi81KSBaLiAgWCBpcyAyMCUgb2YgWS4gU28sIFggPSAwLjIwWSA9ICgxLzUpIFkgPSAoMS81KSDDlyAoMi81KSBaID0gKDIvMjUpIFouICBGb3IgWCB0byBiZSBhbiBpbnRlZ2VyLCBaIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAyNS4gVGhlcmVmb3JlLCB0aGUgc21hbGxlc3QgcG9zaXRpdmUgaW50ZWdlciB2YWx1ZSBvZiBaIGlzIDI1ICBpdHNlbGYuICBZIGlzIDQwJSBvZiAyNSA9IDAuNDAgw5cgMjUgPSAxMCAgWCBpcyAyMCUgb2YgMTAgPSAwLjIwIMOXIDEwID0gMi4gIFNvLCBYICsgWSArIFogPSAyICsgMTAgKyAyNSA9IDM3ICBUaGUgY29ycmVjdCByZXNwb25zZSBpcyB0aHVzICJGcm9tIDMxIHRvIDQwLiIg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " From 31 to 40",
        "option2" : " From 51 to 60",
        "option3" : " From 21 to 30",
        "option4" : " From 41 to 50"
      }
    },
    {
      "index" : 78,
      "question" : "The cost price of 10 candles is the same as theselling price of 'n' candles. If a loss of 40% isincurred, what is the approximate value of 'n'?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc4",
      "description" : "IExldCB0aGUgY29zdCBwcmljZSBvZiBlYWNoIGNhbmRsZSBiZSBSZS4gMS4gVGhlbiB0aGUgY29zdCBwcmljZSBvZiBuIGNhbmRsZXMgaXMgUnMuIG4gICBOb3csIHRoZSBzZWxsaW5nIHByaWNlIG9mIG4gY2FuZGxlcyBpcyBlcXVhbCB0byB0aGUgY29zdCBwcmljZSBvZiAxMCBjYW5kbGVzID0gUnMuIDEwLiAgTG9zcyA9IENQIC0gU1AgPSBuIC0gMTAuICBMb3NzIG9mIDQwJSBtZWFucyB0aGF0OiAgKExvc3MvQ1ApIMOXIDEwMCA9IDQwICBUaGVyZWZvcmUsIFsobiAtIDEwKS9uXSDDlyAxMDAgPSA0MCAgIE9yIG4gPSAxNyAoYXBwcm94Likg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 15",
        "option2" : " 14",
        "option3" : " 17",
        "option4" : " 19"
      }
    },
    {
      "index" : 79,
      "question" : "In a certain business deal, the profit percentageis set at 80% of the cost. If the cost furtherincreases by 20% but the selling price remainsthe same, then what must be the new profitpercentage?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc5",
      "description" : "IExldCB1cyBhc3N1bWUgQ1AgPSBScy4gMTAwLiAgVGhlbiwgUHJvZml0ID0gUnMuIDgwIGFuZCBzZWxsaW5nIHByaWNlID0gUnMuIDE4MC4gIFRoZSBjb3N0IGluY3JlYXNlcyBieSAyMCUsIHRoZXJlZm9yZSBuZXcgQ1AgPSBScy4gMTIwLCBTUCA9IFJzLiAxODAuICBTbywgbmV3IHByb2ZpdCBwZXJjZW50YWdlID0gKDYwLzEyMCkgw5cgMTAwID0gNTAlLiA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 50%",
        "option2" : " 60%",
        "option3" : " 40%",
        "option4" : " 21%"
      }
    },
    {
      "index" : 80,
      "question" : "A company with 800 employees is planning tohire 100 additional employees at the beginningof the next fiscal year. Currently, only 10% ofthe company's employees have a collegedegree. How percentage of the additionalemployees to be hired should have a collegedegree in order to double the number ofemployees having college degrees?",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgw",
      "description" : "IEN1cnJlbnRseSwgMTAlIG9mIHRoZSBlbXBsb3llZXMgaGF2ZSBhIGNvbGxlZ2UgZGVncmVlOyB0aGF0IGlzIDgwIG91dCBvZiB0aGUgODAwIGVtcGxveWVlcy4gIFRvIGRvdWJsZSB0aGlzIG51bWJlciwgd2UgbmVlZCB0byBoaXJlIDgwIG1vcmUgc3VjaCBlbXBsb3llZXMsIGkuZS4gODAgb3V0IG9mIDEwMC4gICBUaGF0IGlzIDgwJS4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 90%",
        "option2" : " 60%",
        "option3" : " 80%",
        "option4" : " 100%     .  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
