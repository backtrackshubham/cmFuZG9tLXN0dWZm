{
  "testId" : "vision-2023-prelims-csat-7",
  "testType" : "csat",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\vision\\prelims\\vision-2023-prelims-csat-7.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Total distance travelled by Kartikay from starting point till the last signal is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEluaXRpYWxseSBLYXJ0aWtleSB3YXMgaGVhZGluZyB0b3dhcmRzIHRoZSBub3J0aC4gSGUgdHJhdmVsbGVkIGZvciAzMCBtaW5zIGF0IGEgc3BlZWQgb2YgMiBrbS9ociwgaS5lLiBoZSAgIGNvdmVyZWQgMSBrbSB0b3dhcmRzIHRoZSBub3J0aC4gICBBdCBmaXJzdCBzaWduYWwsIDIgR3VhcmRzIHdpdGggR3JlZW4gY2FwIC0+IHNwZWVkID0gNCBrbS9ociwgdGltZSA9IDE1IG1pbnV0ZXMgICBEaXN0YW5jZSBjb3ZlcmVkID0gMSBrbSAgIEF0IHNlY29uZCBzaWduYWwsIDAgR3VhcmQgd2l0aCBHcmVlbiBjYXAgLT4gc3BlZWQgPSA0IGttL2hyIChwcmV2aW91cyBzcGVlZCksIHRpbWUgPSAzMCBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDIga20gICBBdCB0aGlyZCBzaWduYWwsIDMgR3VhcmRzIHdpdGggR3JlZW4gY2FwIC0+IHNwZWVkID0gMTAga20vaHIsIHRpbWUgPSAyNCBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDQga20gICBBdCBmb3VydGggc2lnbmFsLCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiBzcGVlZCA9IDQga20vaHIsIHRpbWUgPSAxNSBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDEga20gICBBdCBmaWZ0aCBzaWduYWwsIDAgR3VhcmQgd2l0aCBHcmVlbiBjYXAgLT4gU3RvcCAgIFRvdGFsIGRpc3RhbmNlIHRyYXZlbGxlZCBieSBLYXJ0aWtheSBmcm9tIHN0YXJ0aW5nIHBvaW50IHRpbGwgdGhlIGxhc3Qgc2lnbmFsID0gKDEgKyAxICsgMiArIDQgKyAxKSBrbSA9IDkga20gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 9 km ",
        "option2" : " 10 km ",
        "option3" : " 8 km ",
        "option4" : " 12 km "
      }
    },
    {
      "index" : 2,
      "question" : "What would have been the final position of Kartikay if one guard with red cap and two  guards with green caps were placed at the first  signal point?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEluaXRpYWxseSBLYXJ0aWtleSB3YXMgaGVhZGluZyB0b3dhcmRzIHRoZSBub3J0aC4gSGUgdHJhdmVsbGVkIGZvciAzMCBtaW5zIGF0IGEgc3BlZWQgb2YgMiBrbS9ociwgaS5lLiBoZSAgIGNvdmVyZWQgMSBrbSB0b3dhcmRzIHRoZSBub3J0aC4gICBBdCBmaXJzdCBzaWduYWwsIDEgR3VhcmQgd2l0aCBSZWQgY2FwIGFuZCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiByaWdodCB0dXJuLCBzcGVlZCA9IDQga20vaHIsIHRpbWUgPSAgIDE1IG1pbnV0ZXMgICBTbywgRGlzdGFuY2UgY292ZXJlZCA9IDEga20gICBBdCBzZWNvbmQgc2lnbmFsLCAxIEd1YXJkIHdpdGggUmVkIGNhcCAtPiByaWdodCB0dXJuLCBzcGVlZCA9IDQga20vaHIgKHByZXZpb3VzIHNwZWVkKSwgdGltZSA9IDMwIG1pbnV0ZXMgICBTbywgRGlzdGFuY2UgY292ZXJlZCA9IDIga20gICBBdCB0aGlyZCBzaWduYWwsIDEgR3VhcmQgd2l0aCBSZWQgY2FwIGFuZCAzIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiByaWdodCB0dXJuLCBzcGVlZCA9IDEwIGttL2hyLCB0aW1lID0gICAyNCBtaW51dGVzICAgU28sIERpc3RhbmNlIGNvdmVyZWQgPSA0IGttICAgQXQgZm91cnRoIHNpZ25hbCwgMiBHdWFyZHMgd2l0aCBSZWQgY2FwIGFuZCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiBsZWZ0IHR1cm4sIHNwZWVkID0gNCBrbS9ociwgdGltZSA9ICAgMTUgbWludXRlcyAgIERpc3RhbmNlIGNvdmVyZWQgPSAxIGttICAgQXQgZmlmdGggc2lnbmFsLCAzIEd1YXJkcyB3aXRoIFJlZCBjYXAgLT4gU3RvcCAgIFRoZSBwYXRoIGNhbiBiZSBkcmF3biBhcyBmb2xsb3dzOiAgICAgICAyICAgICAgICAgICAgICAgICAgIEFPID0gKDIgLSAxKSArIDEgPSAyIGttIFNvdXRoICAgQk8gPSA0IC0gMSA9IDMga20gV2VzdCAgIElmIG9uZSBndWFyZCB3aXRoIHJlZCBjYXAgYW5kIHR3byBndWFyZHMgd2l0aCBncmVlbiBjYXBzIHdlcmUgcGxhY2VkIGF0IHRoZSBmaXJzdCBzaWduYWwgcG9pbnQsIHRoZW4gS2FydGlrYXkgICB3aWxsIGJlIDMuMCBrbSB0byB0aGUgd2VzdCBhbmQgMi4wIGttIHRvIHRoZSBzb3V0aC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3.0 km to the west and 2.0 km to the south ",
        "option2" : " 3.0 km to the west and 4.0 km to the north ",
        "option3" : " 5.0 km to the east and 4.0 km to the north ",
        "option4" : " 2.0 km to the west and 4.0 km to the south "
      }
    },
    {
      "index" : 3,
      "question" : "If at the starting point Kartikay was heading towards south, what would have been his final  position?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEluaXRpYWxseSBLYXJ0aWtleSB3YXMgaGVhZGluZyB0b3dhcmRzIFNvdXRoLiBIZSB0cmF2ZWxsZWQgZm9yIDMwIG1pbnMgYXQgYSBzcGVlZCBvZiAyIGttL2hyLCBpLmUuIGhlIGNvdmVyZWQgICAxIGttIHRvd2FyZHMgdGhlIFNvdXRoLiAgIEF0IGZpcnN0IHNpZ25hbCwgMiBHdWFyZHMgd2l0aCBSZWQgY2FwIGFuZCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiBsZWZ0IHR1cm4sIHNwZWVkID0gNCBrbS9ociwgdGltZSA9ICAgMTUgbWludXRlcyAgIERpc3RhbmNlIGNvdmVyZWQgPSAxIGttICAgQXQgc2Vjb25kIHNpZ25hbCwgMSBHdWFyZCB3aXRoIFJlZCBjYXAgLT4gcmlnaHQgdHVybiwgc3BlZWQgPSA0IGttL2hyIChwcmV2aW91cyBzcGVlZCksIHRpbWUgPSAzMCBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDIga20gICBBdCB0aGlyZCBzaWduYWwsIDEgR3VhcmRzIHdpdGggUmVkIGNhcCBhbmQgMyBHdWFyZHMgd2l0aCBHcmVlbiBjYXAgLT4gcmlnaHQgdHVybiwgc3BlZWQgPSAxMCBrbS9ociwgdGltZSAgID0gMjQgbWludXRlcyAgIERpc3RhbmNlIGNvdmVyZWQgPSA0IGttICAgQXQgZm91cnRoIHNpZ25hbCwgMiBHdWFyZHMgd2l0aCBSZWQgY2FwIGFuZCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiBsZWZ0IHR1cm4sIHNwZWVkID0gNCBrbS9ociwgdGltZSA9ICAgMTUgbWludXRlcyAgIERpc3RhbmNlIGNvdmVyZWQgPSAxIGttICAgQXQgZmlmdGggc2lnbmFsLCAzIEd1YXJkcyB3aXRoIFJlZCBjYXAgLT4gU3RvcCAgIFRoZSBwYXRoIGNhbiBiZSBkcmF3biBhcyBmb2xsb3dzOiAgIEFEID0gMSArIDIgKyAxID0gNCBrbSBTb3V0aCAgIEJEID0gNCAtIDEgPSAzIGttIFdlc3QgICBBcyBLYXJ0aWtheSBzdGFydGVkIGhlYWRpbmcgc291dGgsIGhlIHdpbGwgYmUgMy4wIGttIHRvIHRoZSBXZXN0IGFuZCA0LjAga20gdG8gdGhlIFNvdXRoLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 3.0 km to the east and 4.0 km to the south ",
        "option2" : " 5.0 km to the east and 4.0 km to the south ",
        "option3" : " 3.0 km to the west and 4.0 km to the south ",
        "option4" : " 5.0 km to the west and 2.0 km to the north "
      }
    },
    {
      "index" : 4,
      "question" : "In the following question, the relationship between different elements is shown in the  statement. The statement is followed by two  conclusions. Choose the correct answer on the  basis of the information given below.  Statement: m> n greater than equal to p > r = a less than equal to b < d  Conclusions:  I. r < d II. n > b ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEdpdmVuIFN0YXRlbWVudDogbSA+IG4gZ3JlYXRlciB0aGFuIGVxdWFsIHRvIHAgPiByID0gYSBsZXNzIHRoYW4gZXF1YWwgdG8gYiA8IGQgICBDb25jbHVzaW9uIEk6ICAgIHIgPCBkIC0+IFRydWUgKEFzIHIgPSBhIGxlc3MgdGhhbiBlcXVhbCB0byBiIDwgZCkgICBUaHVzIGNvbmNsdXNpb24gSSBmb2xsb3dzLiAgIENvbmNsdXNpb24gSUk6ICAgIG4gPiBiIC0+IEZhbHNlIChBcyB3ZSBjYW4gc2VlIG9wcG9zaXRlIHNpZ25zIGJldHdlZW4gbiBhbmQgYiwgdGh1cyBubyByZWxhdGlvbiBjYW4gYmUgZXN0YWJsaXNoZWQgYmV0d2VlbiAgIHRoZW0uKSAgICBUaHVzLCBjb25jbHVzaW9uIElJIGRvZXMgbm90IGZvbGxvdy4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Either Conclusion I or II follows ",
        "option3" : " Only Conclusion II follows ",
        "option4" : " Both Conclusions I and II follow     .  3               "
      }
    },
    {
      "index" : 5,
      "question" : "Which one of the following diagrams best indicates the relationship between Inspector, Painter and Poet. Select the answer using the correct code.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IFNvbWUgSW5zcGVjdG9ycyBtYXkgYmUgUGFpbnRlcnMgYW5kIFBvZXRzLiAgIFNpbWlsYXJseSwgU29tZSBQYWludGVycyBtYXkgYmUgSW5zcGVjdG9ycyBhbmQgUG9ldHMuICAgU2ltaWxhcmx5LCBTb21lIFBvZXRzIG1heSBiZSBQYWludGVycyBhbmQgSW5zcGVjdG9ycy4gICAgICAgMyAgICAgICAgICAgICAgICAgICBWZW5uIGRpYWdyYW06ICAgU28sIHRoZSBnaXZlbiBpdGVtcyBhcmUgcGFydGx5IHJlbGF0ZWQgdG8gZWFjaCBvdGhlci4gICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " a ",
        "option2" : " c ",
        "option3" : " d ",
        "option4" : " e "
      }
    },
    {
      "index" : 6,
      "question" : "In a party 6 persons can dance on Punjabi songs, 15 can dance on English songs, and 6 persons can dance on Hindi songs. 2 persons in the party can dance on two categories of songs and one can dance on all the three categories of songs. If each person in the party dance on at least one of the three category of songs viz. Punjabi songs, English songs and Hindi songs, then how many persons must be there in the party? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IExldCB1cyBhc3N1bWUgdGhlIHR3byBwZXJzb25zIHdobyBjYW4gZGFuY2Ugb24gdHdvIGNhdGVnb3JpZXMgb2Ygc29uZ3MgZG9lcyBzbyBvbiBFbmdsaXNoIGFuZCBQdW5qYWJpICAgc29uZ3MuICAgT25lIHBlcnNvbiBkYW5jZSBvbiBhbGwgdGhlIHRocmVlIGNhdGVnb3JpZXMgb2Ygc29uZ3MuICAgTnVtYmVyIG9mIHBlcnNvbnMgd2hvIGNhbiBkYW5jZSBPbmx5IG9uIFB1bmphYmkgc29uZyA9IDYgLSAyIC0gMSA9IDMgICBOdW1iZXIgb2YgcGVyc29ucyB3aG8gY2FuIGRhbmNlIE9ubHkgb24gRW5nbGlzaCBzb25nID0gMTUgLSAyIC0gMSA9IDEyICAgTnVtYmVyIG9mIHBlcnNvbnMgd2hvIGNhbiBkYW5jZSBPbmx5IG9uIEhpbmRpIHNvbmdzID0gNiAtIDEgPSA1ICAgVGh1cywgdGhlIG51bWJlciBvZiBwZXJzb25zIHdobyBjYW4gZGFuY2Ugb24gZXhhY3RseSBvbmUgY2F0ZWdvcnkgb2Ygc29uZ3MgPSAzICsgMTIgKyA1ID0gMjAgICBOdW1iZXIgb2YgcGVyc29ucyB3aG8gY2FuIGRhbmNlIG9uIHR3byBjYXRlZ29yaWVzIG9mIHNvbmdzID0gMiAgIE51bWJlciBvZiBwZXJzb25zIHdobyBjYW4gZGFuY2Ugb24gYWxsIHRoZSB0aHJlZSBjYXRlZ29yaWVzIG9mIHNvbmdzID0gMSAgICBTbywgVG90YWwgbnVtYmVyIG9mIHBlcnNvbnMgPSAyMCArIDIgKyAxID0gMjMgICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 23 ",
        "option2" : " 22 ",
        "option3" : " 21 ",
        "option4" : " 24 "
      }
    },
    {
      "index" : 7,
      "question" : "In this question, there are four sets of statements given. Select the set that is most logical, i.e. in which the third statement can be concluded from the first two statements. Set-I. All shirts are white. All jeans are shirts. All jeans are white. Set-II. All mobiles are keyboard. No keyboard is mouse. All mobiles are not mouse. Set-III. No Dogs can bark. All cats are cowards. Dogs are cowards. Set-IV. No one is two. No two is three. No one is three. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IFNldC1JOiBBbGwgc2hpcnRzIGFyZSB3aGl0ZS4gQWxsIGplYW5zIGFyZSBzaGlydHMuIEFsbCBqZWFucyBhcmUgd2hpdGUuICAgU3RhdGVtZW50czogQWxsIHNoaXJ0cyBhcmUgd2hpdGUuIEFsbCBqZWFucyBhcmUgc2hpcnRzLiAgIENvbmNsdXNpb246IEFsbCBqZWFucyBhcmUgd2hpdGUuICAgIFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0d28gc3RhdGVtZW50czogICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0sIGl0IGlzIGNsZWFyIHRoYXQgU2V0LUkgZm9sbG93cy4gICBTZXQtSUk6IEFsbCBtb2JpbGVzIGFyZSBrZXlib2FyZC4gTm8ga2V5Ym9hcmQgaXMgbW91c2UuIEFsbCBtb2JpbGVzIGFyZSBub3QgbW91c2UuICAgU3RhdGVtZW50czogQWxsIG1vYmlsZXMgYXJlIGtleWJvYXJkLiBObyBrZXlib2FyZCBpcyBtb3VzZS4gICBDb25jbHVzaW9uOiBBbGwgbW9iaWxlcyBhcmUgbm90IG1vdXNlLiAgICBXZSBjYW4gZHJhdyB0aGUgZm9sbG93aW5nIHBvc3NpYmxlIFZlbm4gZGlhZ3JhbSBiYXNlZCBvbiB0aGUgZ2l2ZW4gdHdvIHN0YXRlbWVudHM6ICAgICAgIDQgICAgICAgICAgICAgICAgICAgRnJvbSB0aGUgYWJvdmUgVmVubiBkaWFncmFtLCBpdCBpcyBjbGVhciB0aGF0IFNldC1JSSBmb2xsb3dzLiAgIFNldC1JSUk6IE5vIERvZ3MgY2FuIGJhcmsuIEFsbCBjYXRzIGFyZSBjb3dhcmRzLiBEb2dzIGFyZSBjb3dhcmRzLiAgICBTdGF0ZW1lbnRzOiBObyBEb2dzIGNhbiBiYXJrLiBBbGwgY2F0cyBhcmUgY293YXJkcy4gICBDb25jbHVzaW9uOiBEb2dzIGFyZSBjb3dhcmRzLiAgICBJdCBpcyBjbGVhciB0aGF0IFNldC1JSUkgZG9lcyBub3QgZm9sbG93LiAgIFNldC1JVjogTm8gb25lIGlzIHR3by4gTm8gdHdvIGlzIHRocmVlLiBObyBvbmUgaXMgdGhyZWUuICAgU3RhdGVtZW50czogTm8gb25lIGlzIHR3by4gTm8gdHdvIGlzIHRocmVlLiAgIENvbmNsdXNpb246IE5vIG9uZSBpcyB0aHJlZS4gICBXZSBjYW4gZHJhdyB0aGUgZm9sbG93aW5nIHBvc3NpYmxlIFZlbm4gZGlhZ3JhbSBiYXNlZCBvbiB0aGUgZ2l2ZW4gdHdvIHN0YXRlbWVudHM6ICAgRnJvbSB0aGUgYWJvdmUgVmVubiBkaWFncmFtLCBpdCBpcyBjbGVhciB0aGF0IFNldC1JViBkb2VzIG5vdCBmb2xsb3cuICAgRnJvbSBhYm92ZSBpdCBpcyBjbGVhciB0aGF0IFNldC0gSSBhbmQgSUkgaGF2ZSBsb2dpY2FsIGNvbmNsdXNpb25zLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Set-I ",
        "option2" : " Only Set-II ",
        "option3" : " Only Set-I and II ",
        "option4" : " Only Set-IV  Directions for the following 4 (four) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 8,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Mutation combined with natural selection is beneficial for a species. 2. Mutations are always a natural phenomena. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIHN1Z2dlc3RzIHRoYXQgdGhlIG11dGF0aW9uIGJlbmVmaWNpYWwgdG8gdGhlIG9yZ2FuaXNtIHdpbGwgYmVjb21lICAgbW9yZSBwcmV2YWxlbnQgaW4gdGhlIG5leHQgZ2VuZXJhdGlvbiBhbmQgc3ByZWFkIHRocm91Z2hvdXQgdGhlIHBvcHVsYXRpb24uIEl0IGlzIHJlZmxlY3RlZCBpbiB0aGUgcGhyYXNlICAgJy4uLi4uLi4gYSBtdXRhdGlvbiBtaWdodCBwcm92ZSBiZW5lZmljaWFsIHRvIHRoZSBvcmdhbmlzbS4gSWYgc28sIGl0IHdpbGwgYmVjb21lIG1vcmUgcHJldmFsZW50IGluIHRoZSBuZXh0ICAgZ2VuZXJhdGlvbiAuLi4uLi4uIG5hdHVyYWwgc2VsZWN0aW9uIGd1aWRlcyB0aGUgZXZvbHV0aW9uYXJ5IHByb2Nlc3MgLi4uIGFkZGluZyB1cCB0aGUgYmVuZWZpY2lhbCBtdXRhdGlvbnMgICBhbmQgcmVqZWN0aW5nIHRoZSBiYWQgb25lcycuIFRoaXMgY2FuIG1lYW4gdGhhdCBhIGhhcm1mdWwgbXV0YXRpb24gbWlnaHQgZ2V0IG5hdHVyYWxseSBzZWxlY3RlZCwgYnV0IG9ubHkgICB0byBsZWFkIHRvIGEgZGVjbGluZSBvZiBzdWNoIHBvcHVsYXRpb24uICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSXQgaXMgaW5jb3JyZWN0IHRvIHNheSB0aGF0IG11dGF0aW9ucyBhcmUgYWx3YXlzIG5hdHVyYWwgcGhlbm9tZW5hLiBUaGUgcGFzc2FnZSAgIG1lbnRpb25zLCAnTXV0YXRpb25zIGNhbiBiZSBjYXVzZWQgYnkgcmFuZG9tIGVycm9ycyBpbiBETkEgcmVwbGljYXRpb24gb3IgcmVwYWlyLCBvciBieSBjaGVtaWNhbCBvciAgIHJhZGlhdGlvbiBkYW1hZ2UuJyAgVGh1cywgbXV0YXRpb25zIGNhbiBiZSBjYXVzZWQsIGVpdGhlciBkdWUgdG8gbmF0dXJhbCBmYWN0b3JzIG9yIGFudGhyb3BvZ2VuaWMgZmFjdG9ycyAtICAgY2hlbWljYWwgb3IgcmFkaWF0aW9uIGRhbWFnZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 9,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Traditional agro-ecosystem is recognized as a time-tested model of sustainable agriculture systems. 2. Traditional agricultural system is characterized by high productivity and low energy inputs. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEFzc3VtcHRpb24gMSBpcyB2YWxpZC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJbiB0aGUgY29udGV4dCBvZiBzdXN0YWluYWJsZSBmb29kIHByb2R1Y3Rpb24gaW4gY2hhbmdpbmcgICBjbGltYXRlLCBhZG9wdGlvbiBvZiBjbGltYXRlLXNtYXJ0IHRyYWRpdGlvbmFsIHByYWN0aWNlcyBpcyBhbiB1cmdlbnQgbmVlZC4uLi4uLi4uLnJlLWltcGxlbWVudCB0cmFkaXRpb25hbCAgIHByYWN0aWNlcyB0byBpbXByb3ZlIHRoZSBzb2Npby1lY29sb2dpY2FsIGludGVncml0eSBvZiBhZ3JvLWVjb3N5c3RlbXMuJyBGdXJ0aGVyLCAndGltZS10ZXN0ZWQnIGZlYXR1cmUgb2YgICB0cmFkaXRpb25hbCBhZ3JpY3VsdHVyZSBpcyB2YWxpZGF0ZWQgZnJvbSBjZXJ0YWluIGluZGljYXRpb25zLCBzdWNoIGFzLCAgJ0l0IGlzIHRoZSByaWdodCB0aW1lIHRvIHJlZGlzY292ZXIgYW5kICAgcmUtaW1wbGVtZW50JywgYW5kICdJbnRlZ3JhdGlvbiBvZiB0cmFkaXRpb25hbCBhZ3JpY3VsdHVyZSB3aXRoIG1vZGVybiBhZ3JpY3VsdHVyZSBpcyBhIG5lY2Vzc2l0eSBpbiB0aGUgICBjdXJyZW50IHNjZW5hcmlvJy4gVGhlc2UgcG9pbnRzIGltcGx5IHRoYXQgdGhlIHRyYWRpdGlvbmFsIGFncm9lY29zeXN0ZW0gaXMgYSB0aW1lLXRlc3RlZCBtb2RlbCBvZiBhICAgc3VzdGFpbmFibGUgYWdyaWN1bHR1cmUgc3lzdGVtLiAgICBBc3N1bXB0aW9uIDIgaXMgaW52YWxpZC4gVGhlIGF1dGhvciBtZW50aW9ucyB0aGF0IG1vZGVybiBhZ3JpY3VsdHVyZSBlbmhhbmNlZCBmb29kIHByb2R1Y3Rpdml0eS4gVGhpcyAgIG1lYW5zIHRoYXQgbW9kZXJuIGFncmljdWx0dXJlIGhhcyBoaWdoZXIgcHJvZHVjdGl2aXR5IHRoYW4gdHJhZGl0aW9uYWwgYWdyaWN1bHR1cmFsIHByYWN0aWNlcy4gRnVydGhlciwgdGhlcmUgICBpcyBubyBtZW50aW9uIG9mIHRoZSBlbmVyZ3kgaW5wdXRzIHJlcXVpcmVkIGluIHRoZSBkaWZmZXJlbnQgYWdyaWN1bHR1cmFsIHByYWN0aWNlcy4gU28sIHRvIGFzc3VtZSB0aGF0ICAgdHJhZGl0aW9uYWwgYWdyaWN1bHR1cmUgc3lzdGVtIGlzIGNoYXJhY3Rlcml6ZWQgYnkgaGlnaCBwcm9kdWN0aXZpdHkgYW5kIGxvdyBlbmVyZ3kgaW5wdXRzIHdvdWxkIGJlICAgaW5jb3JyZWN0LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following are the issues associated with Modern agriculture? 1. Loss of diversity of genetic resources 2. Effect on human health 3. Erosion of traditional agricultural  knowledge 4. Excessive use of agro-chemicals Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IFN0YXRlbWVudCAxIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnTW9kZXJuIGFncmljdWx0dXJlIGlzIGEgbWFqb3IgZHJpdmVyIGZvciB0aGUgbG9zcyBvZiBjcm9wICAgZ2VuZXRpYyByZXNvdXJjZXMgaW4gdGhlIFRoaXJkIFdvcmxkIGR1ZSB0byBhZG9wdGlvbiBvZiBIaWdoIFlpZWxkaW5nIFZhcmlldGllcyBhbmQgcGxhbnRpbmcgdGhlIHZhc3QgZmllbGRzICAgd2l0aCBnZW5ldGljYWxseSB1bmlmb3JtIGN1bHRpdmFycy4nIFNvLCBtb2Rlcm4gYWdyaWN1bHR1cmUgaXMgbGVhZGluZyB0byB0aGUgbG9zcyBvZiBkaXZlcnNpdHkgb2YgZ2VuZXRpYyAgIHJlc291cmNlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgbWFueSBpc3N1ZXMgYXNzb2NpYXRlZCB3aXRoIE1vZGVybiBhZ3JpY3VsdHVyZS4gSXQgbWVudGlvbnMsICAgJ01vZGVybiBhZ3JpY3VsdHVyZSAuLi4uLi4uLi4uLi4uLi4uIGFjY2VsZXJhdGlvbiBvZiBzZXZlcmFsIGVudmlyb25tZW50YWwgcHJvYmxlbXMgc3VjaCBhcyBjbGltYXRlIGNoYW5nZSwgICBmb29kIHVuc2FmZXR5LCBiaW9kaXZlcnNpdHkgbG9zcywgc29pbCBkZWdyYWRhdGlvbiBhbmQgZW52aXJvbm1lbnRhbCBwb2xsdXRpb24uJyBGb29kIHVuc2FmZXR5IGlzIHJlbGF0ZWQgdG8gICBodW1hbiBoZWFsdGguICAgICAgICAgNSAgICAgICAgICAgICAgICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RyYWRpdGlvbmFsIHZlZ2V0YWJsZSBrbm93bGVkZ2UgaXMgdW5kZXIgc2VyaW91cyB0aHJlYXQgICBkdWUgdG8gaGFiaXRhdCBsb3NzLCB0aGUgaW50cm9kdWN0aW9uIG9mIG5ldyB2YXJpZXRpZXMsIGhpc3RvcmljYWwgcG9saWNpZXMsIHN0aWdtYSBhdHRhY2hlZCB0byB0aGUgdXNlIG9mICAgdHJhZGl0aW9uYWwgdmVnZXRhYmxlcyBhbmQgYWx0ZXJlZCBsaWZlc3R5bGUuJyBTbywgdGhlIGNoYW5nZSBmcm9tIHRyYWRpdGlvbmFsIHRvIG1vZGVybiBhZ3JpY3VsdHVyYWwgcHJhY3RpY2VzICAgaXMgY3JlYXRpbmcgYW4gaXNzdWUgb2YgdGhyZWF0IG9mIGVyb3Npb24gb2YgdHJhZGl0aW9uYWwgYWdyaWN1bHR1cmFsIGtub3dsZWRnZS4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIHRoZSBpc3N1ZSBvZiAnZXhjZXNzaXZlJyB1c2Ugb2YgYWdyb2NoZW1pY2FscywgaW4gICB0aGUgY29udGV4dCBvZiBtb2Rlcm4gYWdyaWN1bHR1cmUuIFRoZSBhbnN3ZXIgc2hvdWxkIGJlIHNvdXJjZWQgZnJvbSB0aGUgcGFzc2FnZSBvbmx5LiBTbywgdGhpcyBzdGF0ZW1lbnQgICBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1, 2 and 3 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 1, 3 and 4 only "
      }
    },
    {
      "index" : 11,
      "question" : "Which among the following is the most logical and rational inference that can be drawn from the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ01vZGVybiBhZ3JpY3VsdHVyZSwgaG93ZXZlciwgZW5oYW5jZWQgZm9vZCBwcm9kdWN0aXZpdHkgICBidXQgd2l0aCB0aGUgYWNjZWxlcmF0aW9uIG9mIHNldmVyYWwgZW52aXJvbm1lbnRhbCBwcm9ibGVtcyBzdWNoIGFzIGNsaW1hdGUgY2hhbmdlLi4uLi4uLi4uLi4uLi4uIFRyYWRpdGlvbmFsICAgdmVnZXRhYmxlcyBncm93IHdlbGwgaW4gZHJvdWdodC1wcm9uZSBhcmVhcy4nIFNvLCB3ZSBjYW4gZXN0YWJsaXNoIGEgY29ycmVsYXRpb24gYmV0d2VlbiBjbGltYXRlIGNoYW5nZSAgIGFuZCB0aGUgZGlmZmVyZW50IGZhcm1pbmcgc3lzdGVtcy4gSGVuY2UsIGl0IGlzIGEgY29ycmVjdCBpbmZlcmVuY2UgYnV0IG5vdCB0aGUgbW9zdCBsb2dpY2FsIGFuZCByYXRpb25hbCAgIGluZmVyZW5jZSBiZWNhdXNlIHRoZSBhdXRob3IgaXMgdHJ5aW5nIHRvIHN0cmVzcyB0aGUgbmVlZCB0byBpbnRlZ3JhdGUgbW9kZXJuIGFncmljdWx0dXJlIGFuZCB0cmFkaXRpb25hbCAgIGFncmljdWx0dXJlIHRvIG1pdGlnYXRlIGNsaW1hdGUgY2hhbmdlIChCeSB0YWxraW5nIGFib3V0IHRoZSBwb3NpdGl2ZSBpbXBhY3Qgb2YgdHJhZGl0aW9uYWwgYWdyaWN1bHR1cmUgdGhhdCAgIGNhbiBiZSB1c2VkIHRvIG92ZXJjb21lIHRoZSBuZWdhdGl2ZSBlZmZlY3RzIG9mIHRoZSBtb2Rlcm4gYWdyaWN1bHR1cmUpLiAgICBPcHRpb24gKGIpIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSXQgaXMgdGhlIHJpZ2h0IHRpbWUgdG8gcmVkaXNjb3ZlciBhbmQgcmUtaW1wbGVtZW50IHRyYWRpdGlvbmFsICAgcHJhY3RpY2VzIHRvIGltcHJvdmUgdGhlIHNvY2lvLWVjb2xvZ2ljYWwgaW50ZWdyaXR5IG9mIGFncm8tZWNvc3lzdGVtcy4gSW50ZWdyYXRpb24gb2YgdHJhZGl0aW9uYWwgICBhZ3JpY3VsdHVyZSB3aXRoIG1vZGVybiBhZ3JpY3VsdHVyZSBpcyB0aGUgbmVjZXNzaXR5IG9mIGN1cnJlbnQgc2NlbmFyaW8uJyBUaHVzLCB0aGUgYXV0aG9yIGlzIHN1Z2dlc3RpbmcgdGhlICAgcmVxdWlyZWQgcmVvcmllbnRhdGlvbiBpbiB0aGUgYWdyaWN1bHR1cmFsIHByYWN0aWNlcyB0byBlbnN1cmUgc3VzdGFpbmFibGUgZm9vZCBwcm9kdWN0aW9uIGluIHRoZSBzY2VuYXJpbyBvZiAgIGNoYW5naW5nIGNsaW1hdGUuIFRoZXJlZm9yZSwgdGhpcyBzdGF0ZW1lbnQgaXMgdGhlIG1vc3QgbG9naWNhbCBhbmQgcmF0aW9uYWwgaW5mZXJlbmNlLiAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgZXhwbGFpbnMgdGhlIG5lZWQgdG8gaW50ZWdyYXRlIG1vZGVybiBhZ3JpY3VsdHVyZSBhbmQgdHJhZGl0aW9uYWwgICBhZ3JpY3VsdHVyZSB0byBtaXRpZ2F0ZSB0aGUgbmVnYXRpdmUgZWZmZWN0cyBvZiBjbGltYXRlIGNoYW5nZS4gVGhpcyBpcyBkb25lIGJ5IHRhbGtpbmcgYWJvdXQgdGhlIHBvc2l0aXZlICAgZWZmZWN0cyBvZiB0cmFkaXRpb25hbCBhZ3JpY3VsdHVyZSB0aGF0IGNhbiBiZSB1c2VkIHRvIG92ZXJjb21lIHRoZSBuZWdhdGl2ZSBlZmZlY3RzIG9mIG1vZGVybiBhZ3JpY3VsdHVyZS4gICBTbywgdGhpcyBzdGF0ZW1lbnQgdGhvdWdoIGNhbiBiZSBhIHZhbGlkIGFzc3VtcHRpb24sIGJ1dCBpcyBub3QgdGhlIG1vc3QgbG9naWNhbCBhbmQgcmF0aW9uYWwgaW5mZXJlbmNlLiAgICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJbnRlZ3JhdGlvbiBvZiB0cmFkaXRpb25hbCBhZ3JpY3VsdHVyZSB3aXRoIG1vZGVybiAgIGFncmljdWx0dXJlIGlzIHRoZSBuZWNlc3NpdHkgb2YgY3VycmVudCBzY2VuYXJpby4nICBTbywgdGhlIGF1dGhvciBzdWdnZXN0cyBhIGhlYWx0aHkgYmxlbmQgb2YgbW9kZXJuICAgYWdyaWN1bHR1cmUgYW5kIHRyYWRpdGlvbmFsIGFncmljdWx0dXJlIHRvIG1pdGlnYXRlIGNsaW1hdGUgY2hhbmdlIGFuZCBkb2VzIG5vdCBhZHZvY2F0ZSBhIGNvbXBsZXRlIHNoaWZ0ICAgZnJvbSBtb2Rlcm4gdGVjaG5vbG9neSB0byB0cmFkaXRpb25hbCBhZ3JpY3VsdHVyZS4gVGhlcmVmb3JlLCB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Different farming systems explain the  correlation between climate change and  agriculture. ",
        "option2" : " We need to reorient agricultural practices  to ensure sustainable food production in  changing climate. ",
        "option3" : " Farmers engaged in traditional  agroecosystems are dependent on locally  available resources and indigenous  technology. ",
        "option4" : " A complete shift from modern agriculture  to traditional agriculture is needed to  mitigate climate change.      5               "
      }
    },
    {
      "index" : 12,
      "question" : "Three Statements followed by four Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/ follow from the Statements: Statement-1: Some fishes are cats. Statement-2:  Some cats are human. Statement-3: Some humans are animals. Conclusion-I:  Some animals are fishes. Conclusion-II:  Some humans are fishes. Conclusion-III:  Some animals are cats. Conclusion-IV:  Some fishes are animals. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0aHJlZSBzdGF0ZW1lbnRzOiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbSwgaXQgaXMgdmVyeSBjbGVhciB0aGF0LCBub25lIG9mIHRoZSBnaXZlbiBjb25jbHVzaW9uIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I and Conclusion-II ",
        "option2" : " Only Conclusion-II and Conclusion-IV ",
        "option3" : " Only Conclusion-III and Conclusion-IV ",
        "option4" : " None of the Conclusion follows "
      }
    },
    {
      "index" : 13,
      "question" : "In this question, there are three sets of statements given. Select the set that is most logical, i.e. in which the third statement can be concluded from the first two statements. Set-I. Some maps are globe. Some globes are highlighter. Some maps are highlighter. Set-II. All bikes are cars. Some cars are black. Some bikes are black. Set-III. No horse is black. Only black have hairs. No horse has hairs. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IFNldC1JOiBTb21lIG1hcHMgYXJlIGdsb2JlLiBTb21lIGdsb2JlcyBhcmUgaGlnaGxpZ2h0ZXIuIFNvbWUgbWFwcyBhcmUgaGlnaGxpZ2h0ZXIuICAgU3RhdGVtZW50czogU29tZSBtYXBzIGFyZSBnbG9iZS4gU29tZSBnbG9iZXMgYXJlIGhpZ2hsaWdodGVyLiAgICBDb25jbHVzaW9uOiBTb21lIG1hcHMgYXJlIGhpZ2hsaWdodGVyLiAgIFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0d28gc3RhdGVtZW50czogICAgICAgNiAgICAgICAgICAgICAgICAgICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0sIGl0IGlzIGNsZWFyIHRoYXQgU2V0LUkgZG9lcyBub3QgZm9sbG93LiAgIFNldC1JSTogQWxsIGJpa2VzIGFyZSBjYXJzLiBTb21lIGNhcnMgYXJlIGJsYWNrLiBTb21lIGJpa2VzIGFyZSBibGFjay4gICBTdGF0ZW1lbnQ6IEFsbCBiaWtlcyBhcmUgY2Fycy4gU29tZSBjYXJzIGFyZSBibGFjay4gICAgQ29uY2x1c2lvbjogU29tZSBiaWtlcyBhcmUgYmxhY2suICAgV2UgY2FuIGRyYXcgdGhlIGZvbGxvd2luZyBwb3NzaWJsZSBWZW5uIGRpYWdyYW0gYmFzZWQgb24gdGhlIGdpdmVuIHR3byBzdGF0ZW1lbnRzOiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbSwgaXQgaXMgY2xlYXIgdGhhdCBTZXQtSUkgZG9lcyBub3QgZm9sbG93LiAgIFNldC1JSUk6IE5vIGhvcnNlIGlzIGJsYWNrLiBPbmx5IGJsYWNrIGhhdmUgaGFpcnMuIE5vIGhvcnNlIGhhcyBoYWlycy4gICBTdGF0ZW1lbnQ6IE5vIGhvcnNlIGlzIGJsYWNrLiBPbmx5IGJsYWNrIGhhdmUgaGFpcnMuICAgIENvbmNsdXNpb246IE5vIGhvcnNlIGhhcyBoYWlycy4gICBXZSBjYW4gZHJhdyB0aGUgZm9sbG93aW5nIHBvc3NpYmxlIFZlbm4gZGlhZ3JhbXMgYmFzZWQgb24gdGhlIGdpdmVuIHR3byBzdGF0ZW1lbnRzOiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbSwgaXQgaXMgY2xlYXIgdGhhdCBTZXQtSUlJIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Set I and II ",
        "option2" : " Only Set III ",
        "option3" : " Only Set II ",
        "option4" : " None of these "
      }
    },
    {
      "index" : 14,
      "question" : "x < 11 represents which of the following intervals? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEl0IGlzIGdpdmVuIHRoYXQsIHggPCAxMSAgIE9wZW4gaW50ZXJ2YWxzIGFyZSB1c2VkIHdoZW4gZW5kIHZhbHVlIGlzIG5vdCBpbmNsdWRlZC4gICBTbywgaXQgY2FuIGFsc28gYmUgcmVwcmVzZW50ZWQgYXMgKC0gaW5maW5pdHksIDExKSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " (11, infinity) ",
        "option2" : " [11, infinity] ",
        "option3" : " (- infinity, 11] ",
        "option4" : " (-infinity, 11) "
      }
    },
    {
      "index" : 15,
      "question" : "In the following question relationship between different elements is shown in the statements. The statements are followed by three conclusions. Choose the correct answer on the basis of information given below. Statements: x less than equal to y < z, z = n > y, u greater than equal to n > r, r < p = z Conclusion: I. x < z II. y = p III. r > z ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "ICBHaXZlbiBTdGF0ZW1lbnRzOiAgIHggbGVzcyB0aGFuIGVxdWFsIHRvIHkgPCB6LCB6ID0gbiA+IHksIHUgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIG4gPiByLCByIDwgcCA9IHogICAgQ29tYmluaW5nIHRoZSBnaXZlbiBzdGF0ZW1lbnRzLCB3ZSBnZXQ6ICAgeCBsZXNzIHRoYW4gZXF1YWwgdG8geSA8IHogPSBuID4geTsgIHUgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIG4gPiByIDwgcCA9IHo7ICAgIEFsc28sIHggbGVzcyB0aGFuIGVxdWFsIHRvIHkgPCB6ID0gcCA+IHIgICAgICAgNyAgICAgICAgICAgICAgICAgICBDb25jbHVzaW9uIEk6ICAgIHggPCB6IC0+IFRydWUgKEFzIHggbGVzcyB0aGFuIGVxdWFsIHRvIHkgPCB6OyBTbywgeCA8IHopICAgIFRodXMsIGNvbmNsdXNpb24gSSBmb2xsb3dzLiAgIENvbmNsdXNpb24gSUk6ICAgIHkgPSBwIC0+IEZhbHNlIChBcyB4IGxlc3MgdGhhbiBlcXVhbCB0byB5IDwgeiA9IHAgPiByOyBTbywgeSA8IHApICAgVGh1cywgY29uY2x1c2lvbiBJSSBkb2VzIG5vdCBmb2xsb3cuICAgIENvbmNsdXNpb24gSUlJOiAgICByID4geiAtPiBGYWxzZSAoQXMgciA8IHAgPSB6OyBTbywgciA8IHouKSAgICBUaHVzLCBjb25jbHVzaW9uIElJSSBkb2VzIG5vdCBmb2xsb3cuICAgIFRoZXJlZm9yZSwgb25seSBjb25jbHVzaW9uIEkgZm9sbG93cy4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Only Conclusion II and III follow ",
        "option3" : " Either Conclusion I or III follows ",
        "option4" : " All the Conclusions follow "
      }
    },
    {
      "index" : 16,
      "question" : "In the following question relationship between different elements is shown in the statements. The statement is followed by two conclusions. Choose the correct answer on the basis of information given below. Statement: A< B less than equal to C less than equal to D = E > F > G Conclusions: I. B = E II. E > B ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IFN0YXRlbWVudDogQTwgQiBsZXNzIHRoYW4gZXF1YWwgdG8gQyBsZXNzIHRoYW4gZXF1YWwgdG8gRCA9IEUgPiBGID4gRyAgIENvbmNsdXNpb24gSTogICAgQiA9IEUgLT4gRmFsc2UgKEFzIEIgbGVzcyB0aGFuIGVxdWFsIHRvIEMgbGVzcyB0aGFuIGVxdWFsIHRvIEQgPSBFOyBTbywgQiBsZXNzIHRoYW4gZXF1YWwgdG8gRS4gSGVyZSwgRSBjYW4gYmUgZ3JlYXRlciBvciBlcXVhbCB0byBCLiBTbywgQiA9IEUgd2lsbCBiZSAgIGNvbnNpZGVyZWQgYXMgZmFsc2UuKSAgIENvbmNsdXNpb24gSUk6ICAgIEUgPiBCIC0+IEZhbHNlIChBcyBCIGxlc3MgdGhhbiBlcXVhbCB0byBDIGxlc3MgdGhhbiBlcXVhbCB0byBEID0gRTsgU28sIEIgbGVzcyB0aGFuIGVxdWFsIHRvIEUsIEhlcmUsIEUgY2FuIGJlIGdyZWF0ZXIgb3IgZXF1YWwgdG8gQi4gU28sIEUgPiBCIHdpbGwgYmUgICBjb25zaWRlcmVkIGFzIGZhbHNlLikgICBIZXJlLCBib3RoIHRoZSBjb25jbHVzaW9ucyBhcmUgaW5kaXZpZHVhbGx5IGZhbHNlLiBCdXQgdGhlIGVsZW1lbnRzIGJlaW5nIGNvbXBhcmVkIGFyZSB0aGUgc2FtZS4gU28sIGF0IGxlYXN0ICAgb25lIG9mIHRoZW0gaGFzIHRvIGJlIGNvcnJlY3QuIFRoZXJlZm9yZSwgZWl0aGVyIGNvbmNsdXNpb24gSSBvciBJSSBmb2xsb3dzLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Either Conclusion I or II follows ",
        "option3" : " Only Conclusion II follows ",
        "option4" : " Neither Conclusion I nor II follows      6                Directions for the following 5 (five) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 17,
      "question" : "Why is the methodology adopted in India to estimate the Poverty Line debatable? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGUgYXV0aG9yIGRvZXMgbWVudGlvbiB0aGF0IHRoZXJlIGV4aXN0cyBhIGNoYWxsZW5nZSBpbiBpZGVudGlmeWluZyB0aGUgY29tcG9uZW50cyAgIG9mIHRoZSBwb3ZlcnR5IGxpbmUgYmFza2V0IGFuZCBzdGF0ZXMgdGhhdCB0aGUgY3VycmVudCBtZXRob2RzIGFuZCBjcml0ZXJpYSB1c2VkIGZvciBlc3RpbWF0aW5nIHBvdmVydHkgYXJlICAgbmFycm93LCBpLmUuLCBpbmFkZXF1YXRlLiBIb3dldmVyLCBoZSBkb2VzIG5vdCBzYXkgdGhhdCB0aGVyZSBpcyBhIGNvbmZ1c2lvbiByZWdhcmRpbmcgdGhlIGVzdGltYXRpb24gb2YgICBwb3ZlcnR5IGxpbmUuIEhlIHRyaWVzIHRvIGNvbnZleSB0aGF0IHRoZSBjb25jZXB0IG9mIHBvdmVydHkgZ29lcyBiZXlvbmQgaW5hZGVxdWF0ZSBpbmNvbWUgYW5kIHB1cmNoYXNpbmcgICBwb3dlci0gaXQgYWxzbyBlbmNvbXBhc3NlcyBhc3BlY3RzIGxpa2UgdGhlIGhvdXNlaG9sZCdzIGFjY2VzcyB0byBhIHdpZGUgc2V0IG9mIGRpbWVuc2lvbnMsIHdoaWNoIGNvdWxkIGJlICAgbm9uLWVjb25vbWljIGFzIHdlbGwuICAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGUgYXNzZXJ0aW9uIG1hZGUgaW4gdGhpcyBvcHRpb24gZ29lcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiBUaGUgICBwYXNzYWdlIGRvZXMgbm90IG1ha2UgYSBjb21wYXJpc29uIGJldHdlZW4gdGhlIHVyYmFuIGFuZCB0aGUgcnVyYWwgcG9vci4gICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGdvZXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gVGhlIGRpc2N1c3Npb24gb2YgdGhlIHBhc3NhZ2UgICBpcyBsaW1pdGVkIHRvIHBvdmVydHkgbGluZSBlc3RpbWF0aW9uIGluIEluZGlhIGFuZCBub3QgdGhlIHdvcmxkIGluIGdlbmVyYWwuIE5vIGxpbmUgaW4gdGhlIHBhc3NhZ2UgbGVhZHMgdG8gICB0aGUgYXNzdW1wdGlvbiB0aGF0ICdUaGVyZSBpcyBubyB1bmlmb3JtIGdsb2JhbCBzdGFuZGFyZCBmb3IgbWVhc3VyaW5nIGluY29tZSBwb3ZlcnR5LicgICBPcHRpb24gKGQpIGlzIGNvcnJlY3QuIFRoaXMgaXMgdGhlIG1haW4gbWVzc2FnZSBiZWluZyBzdHJlc3NlZCBieSB0aGUgYXV0aG9yLCB3aG8gZXhwbGFpbnMgdGhyb3VnaCB0aGUgICB2YXJpb3VzIGxpbmVzIG9mIHRoZSBwYXNzYWdlIHRoYXQgbWVhc3VyaW5nIHBvdmVydHkgdGhyb3VnaCB0aGUgbGVucyBvZiBpbmNvbWUgb3IgcHVyY2hhc2luZyBwb3dlciAoYnV5aW5nICAgY2FwYWNpdHkpIGlzIG9ubHkgYSBuYXJyb3cgd2F5IG9mIGxvb2tpbmcgYXQgcG92ZXJ0eS4gV2UgbXVzdCBsb29rIGF0IG90aGVyIGZhY3RvcnMgdGhhdCByZXN0cmljdCBjaG9pY2VzIGFuZCAgIG9wcG9ydHVuaXRpZXMgZm9yIGluZGl2aWR1YWxzIChlLmcuIGNhbG9yaWUgaW50YWtlLCBudXRyaXRpb24pLCBpbmNvbWUgYmVpbmcganVzdCBvbmUgcGFydCBvZiBpdC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " There is some confusion regarding what  should constitute the 'poverty line'. ",
        "option2" : " There are wide diversities in the condition  of the rural and urban poor. ",
        "option3" : " There is no uniform global standard for  measuring income poverty. ",
        "option4" : " It is based on the proposition of poverty as  meagre income or buying capacity. "
      }
    },
    {
      "index" : 18,
      "question" : "Why is income poverty only one measure of counting the 'poor'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gRnJvbSB0aGVzZSBsaW5lcywgJ0Egc2lnbmlmaWNhbnQgcGVyY2VudGFnZSBvZiBob3VzZWhvbGRzIGFib3ZlIHRoZSBleHBlbmRpdHVyZS0gIGJhc2VkIHBvdmVydHkgbGluZSB3ZXJlIHVuYWJsZSB0byBtZWV0IHRoZSBtaW5pbXVtIGNhbG9yaWUgcmVxdWlyZW1lbnRzLiBUaGlzIGNhbGxlZCBpbnRvIHF1ZXN0aW9uIHRoZSAgIHByYWN0aWNlIG9mIGRlZmluaW5nIGEgJ3Bvb3IgaG91c2Vob2xkJyBzb2xlbHkgYmFzZWQgb24gaXRzIHBlciBjYXBpdGEgbW9udGhseSBleHBlbmRpdHVyZSB2aXMtw6AtdmlzIGEgICBwb3ZlcnR5IGxpbmUgZXhwZW5kaXR1cmUgY3V0IG9mZiB3aXRob3V0IGNvbnNpZGVyaW5nIHRoZSBob3VzZWhvbGQncyBhY2Nlc3MgdG8gYSB3aWRlIHNldCBvZiBkaW1lbnNpb25zLicsIGl0ICAgY2FuIGJlIGluZmVycmVkIHRoYXQgYSBwb3ZlcnR5IGxpbmUgYmFzZWQgb24gaW5jb21lIHBvdmVydHkgYWxvbmUsIGlzIG5vdCBzdWZmaWNpZW50IHRvIGVzdGltYXRlIHRoZSBleHRlbnQgb2YgICB0aGUgcG9vciBpbiB0aGUgY291bnRyeSwgYXMgZGVwcml2YXRpb25zIGFsc28gc3RlbSBmcm9tIGxhY2sgb2YgYWNjZXNzIHRvIG90aGVyIGRpbWVuc2lvbnMgbGlrZSBudXRyaXRpb3VzICAgZm9vZC4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIHJhdGhlciBleHRyZW1lIGFuZCBnb2VzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIE5vdGhpbmcgICBpbiB0aGUgcGFzc2FnZSB0YWxrcyBhYm91dCB0aGUgZmFjdG9ycyBhZmZlY3RpbmcgdGhlIHB1cmNoYXNpbmcgcG93ZXIgb2YgYSBwZXJzb24uICAgICAgIDggICAgICAgICAgICAgICAgICAgT3B0aW9uIChjKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuIFRoZXJlIGlzIG5vIG1lbnRpb24gaW4gdGhlIHBhc3NhZ2UgICBvZiBpbmNvbWUgYmVpbmcgYSB0ZW1wb3Jhcnkgb3IgcGVybWFuZW50IGNvbmRpdGlvbi4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdCwgYXMgdGhlIHBhc3NhZ2UgZG9lcyBub3QgbGF5IG91dCBhIHRpbWUgY29uc2lkZXJhdGlvbiAoaS5lLiwgd2hlbiBkb2VzIGluY29tZSBwb3ZlcnR5ICAgYWZmZWN0IGh1bWFuIGNob2ljZXMgYnkgcmVzdHJpY3RpbmcgdGhlbS0gd2hldGhlciBvbmx5IGF0IGEgcG9pbnQgb2YgdGltZSBvciBhbHdheXMsIHRpbGwgc3VjaCBwb3ZlcnR5IGV4aXN0cykgICBhbnl3aGVyZSB3aGlsZSBzdWdnZXN0aW5nIGhvdyBpbmNvbWUgcG92ZXJ0eSBhZmZlY3RzIG9yIHJlc3RyaWN0cyBodW1hbiBjaG9pY2VzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It talks of only one kind of deprivation,  ignoring all others. ",
        "option2" : " Other deprivations in human life have  nothing to do with a lack of purchasing  power. ",
        "option3" : " Income poverty is not a permanent  condition; it changes from time to time. ",
        "option4" : " Income poverty restricts human choices  only at a point in time. "
      }
    },
    {
      "index" : 19,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Everything a man does on earth has implications for the environment. 2. The geography of an area directly affects the economy and environment of the region. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbnZhbGlkLiBUaGUgcGFzc2FnZSBtZW50aW9ucyBob3cgcG92ZXJ0eSBhbmQgdW5lbXBsb3ltZW50IGZvcmNlcyBtZW4gb2YgYSByZWdpb24gICBpbmRpdmlkdWFsbHkgYW5kIGNvbGxlY3RpdmVseSB0byByZXNvcnQgdG8gcHJhY3RpY2VzIHdoaWNoIGFyZSBoYXJtZnVsIHRvIHRoZSBlbnZpcm9ubWVudCwgbGlrZSBkZWZvcmVzdGF0aW9uLCAgIHdoaWNoIGluIHR1cm4gaGFybXMgaHVtYW4gbGlmZSBkdWUgdG8gdGhlIGRpZXRhcnkgZGVwcml2YXRpb24gY2F1c2VkIGJ5IGRlcGxldGlvbiBvZiBzb2lsIG1pbmVyYWxzLiBIb3dldmVyLCAgIHdpdGggdGhpcyBsaW1pdGVkIGluZm9ybWF0aW9uLCB3ZSBjYW5ub3QgbWFrZSBhIGdlbmVyaWMgYXNzdW1wdGlvbiB0aGF0IGV2ZXJ5dGhpbmcgYSBtYW4gZG9lcyBvbiBlYXJ0aCAgIGhhcyBpbXBsaWNhdGlvbnMgZm9yIHRoZSBlbnZpcm9ubWVudC4gICAgQXNzdW1wdGlvbiAyIGlzIGludmFsaWQuIEFzIHBlciB0aGUgcGFzc2FnZSwgdGhlIGVjb25vbWljIHNpdHVhdGlvbiBvZiBhIHBlcnNvbiBhZmZlY3RzIHRoZSBlbnZpcm9ubWVudCAgIChkZWdyYWRhdGlvbikgYW5kIHRoZXJlYWZ0ZXIsIHRoZSBlY29ub215LCBhcyBhIHZpY2lvdXMgY3ljbGUuIFRoZSBwYXNzYWdlIGRvZXMgbm90IHN1Z2dlc3QgdGhlIGdlb2dyYXBoeSAgIGFmZmVjdGluZyB0aGUgZWNvbm9teSBhcyBzdWNoLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2      7               "
      }
    },
    {
      "index" : 20,
      "question" : "The cycle of poverty continues due to which of the following? 1. Lack of skills to get a job 2. Environmental degradation Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIGluZGlyZWN0bHkgbWVudGlvbnMgdGhlIGFzcGVjdCBvZiBza2lsbHMuIEl0IG1lbnRpb25zLCAnLi4uLnRvIHN1c3RhaW4gdGhlICAgaW50ZWxsZWN0dWFsIHBlcmZvcm1hbmNlIG5lZWRlZCB0byBsZWFybiBuZXcgdGVjaG5vbG9naWVzLCBmb3IgZXhhbXBsZSwgaG93IHRvIG9wZXJhdGUgYSBjb21wdXRlciwgYW5kICAgdGhpcyB3aWxsIGNhdXNlIHByb2R1Y3Rpdml0eSB0byByZWR1Y2Ugb3Igc3RhZ25hdGUuIElmIHByb2R1Y3Rpdml0eSBzdGFnbmF0ZXMsIHBvb3IgcGVvcGxlIHdpbGwgcmVtYWluIHBvb3IgICBvciBwb29yZXIsIGFuZCB0aGUgY3ljbGUgY29udGludWVzLicgVGhlcmVmb3JlLCBsYWNrIG9mIHNraWxscyBpcyBhIHJlYXNvbiwgYXMgcGVyIHRoZSBhdXRob3IsIGZvciB0aGUgICBjb250aW51YXRpb24gb2YgdGhlIGN5Y2xlIG9mIHBvdmVydHkuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBhdXRob3IgZGlyZWN0bHkgc3RhdGVzLCAnLi4uLiBkZWZvcmVzdGF0aW9uIHdpbGwgY2F1c2Ugdml0YWwgbWluZXJhbHMgdG8gYmUgbG9zdCAgIGZyb20gdGhlIHNvaWwuIElmIHZpdGFsIG1pbmVyYWxzIGFyZSBsb3N0IGZyb20gdGhlIHNvaWwsIHRoZSBpbmhhYml0YW50cyB3aWxsIGJlIGRlcHJpdmVkIG9mIHRoZSBkaWV0YXJ5IG51dHJpZW50cyAgIHJlcXVpcmVkIHRvIHN1c3RhaW4gdGhlIGludGVsbGVjdHVhbCBwZXJmb3JtYW5jZSBuZWVkZWQgdG8gbGVhcm4gbmV3IHRlY2hub2xvZ2llcy4nIElmIHByb2R1Y3Rpdml0eSAgIHN0YWduYXRlcywgcG9vciBwZW9wbGUgd2lsbCByZW1haW4gcG9vciBvciBiZWNvbWUgcG9vcmVyLCBhbmQgdGhlIGN5Y2xlIGNvbnRpbnVlcy4gVGhlcmVmb3JlLCB0aGlzIHN0YXRlbWVudCAgIGlzIGNvcnJlY3QgYXMgd2VsbC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " None "
      }
    },
    {
      "index" : 21,
      "question" : "Which among the following statement represents the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIGF1dGhvciwgdGhyb3VnaG91dCB0aGUgcGFzc2FnZSwgbWFrZXMgaXQgY2xlYXIgdGhhdCB0aGUgZWNvbm9taWMsIHNvY2lhbCwgYW5kICAgZW52aXJvbm1lbnRhbCBzdWJzdHJhdGVzIG9mIHN1c3RhaW5hYmlsaXR5IGFyZSBpbnRlcmxpbmtlZCB3aXRoIGVhY2ggb3RoZXIuIFdlIGNhbiBzZWUgdGhpcyBpbiB0aGUgZm9sbG93aW5nICAgbGluZXMtIElmIGEgbWFuIGluIGEgZ2l2ZW4gZ2VvZ3JhcGhpY2FsIGFyZWEgbGFja3MgYSBqb2IgKGVjb25vbWljKSwgaGUgaXMgbGlrZWx5IHRvIGJlIHBvb3IgKHNvY2lhbCkgdGhlbiBoZSAgIGhhcyBhbiBpbmNlbnRpdmUgdG8gZW5nYWdlIGluIHByYWN0aWNlcyB0aGF0IGhhcm0gZWNvbG9neSAoZW52aXJvbm1lbnRhbCkuIElmIHByb2R1Y3Rpdml0eSBzdGFnbmF0ZXMgICAoZWNvbm9taWMpLCBwb29yIHBlb3BsZSB3aWxsIHJlbWFpbiBwb29yIChzb2NpYWwpLiBIZW5jZSwgdG8gY3JlYXRlIGEgYmFsYW5jZSBiZXR3ZWVuIGVudmlyb25tZW50YWwsICAgZWNvbm9taWMgYW5kIHNvY2lhbCBzdXN0YWluYWJpbGl0eSBpcyB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zIHRoZSBmYWN0b3JzIGJlaGluZCB0aGUgY3ljbGUgb2YgcG92ZXJ0eS4gSXQgZG9lcyBub3QgcHJvdmlkZSAgIGFueSBzb2x1dGlvbnMuIFNvbHZpbmcgdGhlIHBvdmVydHkgcHJvYmxlbSBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiBUaGVyZWZvcmUsIGl0IGlzIG5vdCB0aGUgY3J1eCAgIG9mIHRoZSBwYXNzYWdlLiAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB3aGV0aGVyIG1hbiBpcyB1c2luZyB0aGUgcmVzb3VyY2VzIGJleW9uZCB0aGUgcmUtICBnZW5lcmF0aW9uYWwgY2FwYWNpdHkgb3IgaWYgdGhlcmUgaXMgYW55IGtpbmQgb2YgbmF0dXJhbCByZXNvdXJjZSBzY2FyY2l0eS4gU28sIHRoaXMgc3RhdGVtZW50IGlzIGJleW9uZCB0aGUgICBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICAgT3B0aW9uIChkKSBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgaXQgY2xlYXJseSB0aGF0IGtub3dsZWRnZSBvZiBuZXcgdGVjaG5vbG9naWVzICAgZXNwZWNpYWxseSBjb21wdXRlcnMgaXMgZXNzZW50aWFsIHRvIGdldCBhIGdvb2Qgam9iLiBGdXJ0aGVyLCBpdCBvbmx5IG1lbnRpb25zIHRoYXQgZ29vZCBpbnRlbGxlY3R1YWwgICBwZXJmb3JtYW5jZSBpcyBuZWVkZWQgdG8gbGVhcm4gbmV3IHRlY2hub2xvZ2llcywgc3VjaCBhcyB0aGUgb3BlcmF0aW9uIG9mIGEgY29tcHV0ZXIuIFNvLCB0aGUgc3RhdGVtZW50IGluICAgaXRzZWxmIGlzIGFuIGluY29ycmVjdCBpbmZlcmVuY2UuIEFsc28sIGdldHRpbmcgYSBqb2IgaXMgb25seSBhIHN1cHBvcnRpbmcgYXJndW1lbnQuIFRoZSBwYXNzYWdlIGlzIGFib3V0ICAgYnJlYWtpbmcgdGhlIHZpY2lvdXMgY3ljbGUgb2YgcG92ZXJ0eSBhbmQgZW52aXJvbm1lbnQgZGVncmFkYXRpb24uIFRoZXJlZm9yZSwgaXQgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSAgIHBhc3NhZ2UuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is essential to create a balance between  environmental, economic, and social  sustainability. ",
        "option2" : " The cycle of poverty can be broken with a  better diet and technological know-how. ",
        "option3" : " The limited means and resources on the  earth cannot be enough for the unlimited  needs of the people. ",
        "option4" : " Knowledge of new technologies, especially  computers, is essential to get a good job. "
      }
    },
    {
      "index" : 22,
      "question" : "Examine the following statements: 1. Madhuri is more successful than Kajol. 2. Shyra is more successful than Madhuri. 3. Kajol is not more successful than Sonali. The conclusion that can be drawn from these  statements is that  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IFVzaW5nIHN0YXRlbWVudHMgMSBhbmQgMiwgd2UgZ2V0OiAgIFNoeXJhID4gTWFkaHVyaSA+IEtham9sICAgICAgLi4uLi4uLi4uLi4oMSkgICBVc2luZyBzdGF0ZW1lbnQgMzogICBTb25hbGkgIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byAgS2Fqb2wgICAuLi4uLi4uLi4uLi4uLi4oMikgICAgICAgOSAgICAgICAgICAgICAgICAgICBGcm9tIGVxdWF0aW9ucyAoMSkgYW5kICgyKSwgd2UgZ2V0OiAgIFNoeXJhID4gTWFkaHVyaSA+IEtham9sICBsZXNzIHRoYW4gZXF1YWwgdG8gU29uYWxpICAgICAgSGVuY2UsIHdlIGNhbiBjb25jbHVkZSB0aGF0IEtham9sIG1heWJlIHRoZSBsZWFzdCBzdWNjZXNzZnVsIGFtb25nIGFsbCBmb3VyLiBUaG91Z2ggdGhlcmUgaXMgb25lICAgcG9zc2liaWxpdHkgd2hlcmVpbiBLYWpvbCBhbmQgU29uYWxpIG1heSBiZSBlcXVhbDsgaW4gd2hpY2ggY2FzZSB0aGV5IHRvZ2V0aGVyIHdpbGwgYmUgdGhlIGxlYXN0IHN1Y2Nlc3NmdWwuICAgT3B0aW9uIChjKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Sonali is as successful as Madhuri. ",
        "option2" : " Sonali is as successful as Madhuri and  Shyra. ",
        "option3" : " Kajol maybe the least successful of the four  girls. ",
        "option4" : " Shyra is more successful than Sonali. "
      }
    },
    {
      "index" : 23,
      "question" : "Kamna, Dimple and Pallavi are three married women. Each of them gives two replies to any question, one of which is true and the other is false, not necessarily in the same order. Following were the replies they gave when it was asked whose husband is the richest: 1. Kamna: My husband is the richest. Pallavi's husband is second richest. 2. Dimple: My husband is the richest. Kamna's husband is second richest. 3. Pallavi: My husband is the richest. Kamna's husband is third richest. Which of the following is the correct order of  the wives with richest, second richest and third  richest husband respectively?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IElmIHdlIGFzc3VtZSBQYWxsYXZpJ3MgaHVzYmFuZCB0byBiZSB0aGUgcmljaGVzdCB0aGVuLCBmcm9tIHN0YXRlbWVudCAzLCBLYW1uYSdzIGh1c2JhbmQgY2Fubm90IGJlIHRoaXJkICAgcmljaGVzdC4gU28sIEthbW5hJ3MgaHVzYmFuZCB3aWxsIGJlIHNlY29uZCByaWNoZXN0IGFuZCBEaW1wbGUncyBodXNiYW5kIHdpbGwgYmUgdGhpcmQgcmljaGVzdC4gICAgSGVuY2UsIG9yZGVyIG9mIHRoZSB3aXZlcyB3aXRoIHJpY2hlc3QsIHNlY29uZCByaWNoZXN0IGFuZCB0aGlyZCByaWNoZXN0IGh1c2JhbmRzIHdpbGwgYmU6IFBhbGxhdmksIEthbW5hLCAgIERpbXBsZS4gICAgSG93ZXZlciwgaWYgdGhpcyBhcnJhbmdlbWVudCBob2xkcyB0aGVuIGJvdGggcmVwbGllcyBpbiBzdGF0ZW1lbnQgMSB3aWxsIGJlY29tZSBpbmNvcnJlY3QuIEhlbmNlLCBQYWxsYXZpJ3MgICBodXNiYW5kIGNhbm5vdCBiZSB0aGUgcmljaGVzdC4gVGhlcmVmb3JlLCBvcHRpb25zIChBKSBhbmQgKEQpIGFyZSBpbmNvcnJlY3QuICAgTm93LCBpZiB3ZSBjb25zaWRlciBEaW1wbGUncyBodXNiYW5kIHRvIGJlIHRoZSByaWNoZXN0LCBQYWxsYXZpJ3MgaHVzYmFuZCB3aWxsIGJlIHNlY29uZCByaWNoZXN0IGFuZCAgIEthbW5hJ3MgaHVzYmFuZCB3aWxsIGJlIHRoaXJkIHJpY2hlc3QuIFRoaXMgYXJyYW5nZW1lbnQgaG9sZHMgdW5kZXIgdGhlIHNjcnV0aW55IG9mIGFsbCB0aGUgc3RhdGVtZW50cyBtYWRlICAgYnkgdGhlIHdpdmVzLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Pallavi, Dimple and Kamna ",
        "option2" : " Dimple, Kamna and Pallavi ",
        "option3" : " Dimple, Pallavi and Kamna ",
        "option4" : " Pallavi, Kamna and Dimple  Directions for the following 2 (two) items:   Study the following information and answer the two   items that follow.   In a five - letter English word (which may or may not   be a meaningful English word), there are two letters   between M and G. Neither A nor N is at any end. A is   second to the left of G. M is to the right of O.  "
      }
    },
    {
      "index" : 24,
      "question" : "Which of the following words will be formed based on the given conditions? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEZyb20gdGhlIGdpdmVuIGluZm9ybWF0aW9uLCBBIGlzIHNlY29uZCB0byB0aGUgbGVmdCBvZiBHIGFuZCB0aGVyZSBhcmUgdHdvIGxldHRlcnMgYmV0d2VlbiBNIGFuZCBHLiBUaGVuICAgd2UgaGF2ZSB0d28gcG9zc2liaWxpdGllczogICBDYXNlIGk6ICAgICBNICAgIEEgICAtICAgICAgRyAgICAgIENhc2UgaWk6ICAgICAgQSAgICAgLSAgICBHICAgIC0gICAgIC0gICAgIE0gICAgICAgICAgICAgICAgICAgICAgKCDDlyApICAgQ2FzZSAoaWkpIGNhbiBiZSBlbGltaW5hdGVkIGJlY2F1c2UgaXQgZm9ybXMgc2l4LWxldHRlciB3b3JkLCBob3dldmVyLCBpbiB0aGUgcXVlc3Rpb24gd2UgaGF2ZSBiZWVuIGdpdmVuIGEgICBmaXZlLWxldHRlciB3b3JkLiAgIEl0IGlzIGFsc28gZ2l2ZW4gdGhhdCBNIGlzIHRvIHRoZSByaWdodCBvZiBPIGFuZCBuZWl0aGVyIEEgbm9yIE4gaXMgYXQgYW55IGVuZC4gSGVuY2UsIHRoZSBmaW5hbCBhcnJhbmdlbWVudCAgIHdpbGwgYmU6ICAgTyAgICAgIE0gICAgIEEgICAgTiAgICAgIEcgICAgICBCYXNlZCBvbiB0aGUgYWJvdmUgZGlzY3Vzc2lvbiwgdGhlIHdvcmQgT01BTkcgd2lsbCBiZSBmb3JtZWQuIEhlbmNlIG9wdGlvbiAoZCkgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " NAMGO ",
        "option2" : " GOMAN ",
        "option3" : " MANGO ",
        "option4" : " OMANG      8               "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following is true with respect to the word thus formed? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEZyb20gdGhlIGV4cGxhbmF0aW9uIGdpdmVuIGluIHF1ZXN0aW9uIG5vLiAyNSwgaXQgaXMgY2xlYXIgdGhhdDogJ00gaXMgc2Vjb25kIHRvIHRoZSBsZWZ0IG9mIE4nIGlzIGNvcnJlY3QgICBzdGF0ZW1lbnQuIEhlbmNlIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " O and G are not at any end of the word. ",
        "option2" : " A is not the middle letter of the word. ",
        "option3" : " M is second to the left of N. ",
        "option4" : " O is an immediate neighbor of N. "
      }
    },
    {
      "index" : 26,
      "question" : "In the following question relationship between ages of few friends is shown in the statement. The statement is followed by two conclusions. Choose the correct answer on the basis of information given below. Statement: Ram > Trisha < Suresh = Rakesh greater than equal to Sita Conclusions: I. Ram > Rakesh II. Suresh > Sita ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEdpdmVuIHN0YXRlbWVudDogUmFtID4gVHJpc2hhID4gU3VyZXNoID0gUmFrZXNoIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBTaXRhICAgQ29uY2x1c2lvbiAoSSk6ICAgIFJhbSA+IFJha2VzaCAtPiBGYWxzZSAoQXMgUmFtID4gVHJpc2hhIDwgU3VyZXNoID0gUmFrZXNoOyBTbywgbm8gcmVsYXRpb25zaGlwIGNhbiBiZSBlc3RhYmxpc2hlZCAgIGJldHdlZW4gUmFtIGFuZCBSYWtlc2gpLiBTbywgY29uY2x1c2lvbiBJIGRvZXMgbm90IGZvbGxvdy4gICBDb25jbHVzaW9uIChJSSk6ICAgIFN1cmVzaCA+IFNpdGEgLT4gRmFsc2UgKEFzIFN1cmVzaCA9IFJha2VzaCBncmVhdGVyIHRoYW4gZXF1YWwgdG8gU2l0YTsgU28sIFN1cmVzaCBncmVhdGVyIHRoYW4gZXF1YWwgdG8gU2l0YS4pICAgVGh1cywgY29uY2x1c2lvbiBJSSBkb2VzIG5vdCBmb2xsb3cuICAgIEhlbmNlLCBuZWl0aGVyIEkgbm9yIElJIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Both Conclusion I and II follow ",
        "option3" : " Only Conclusion II follows ",
        "option4" : " Neither Conclusion I nor II follows "
      }
    },
    {
      "index" : 27,
      "question" : "Study the figure given below and answer the question that follows. What is the sum of the numbers that fall inside  three figures only and those that fall inside all  the four figures?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEZyb20gZ2l2ZW4gVmVubiBkaWFncmFtLCAgICBTdW0gb2YgdGhlIG51bWJlcnMgdGhhdCBmYWxsIGluc2lkZSB0aHJlZSBmaWd1cmVzIG9ubHkgPSA2ICsgMiArIDExID0gMTkgICBOdW1iZXIgdGhhdCBmYWxscyBpbnNpZGUgZm91ciBmaWd1cmVzID0gOCAgIFNvLCByZXF1aXJlZCBzdW0gPSAxOSArIDggPSAyNyAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICAgICAgIDEwICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 25 ",
        "option2" : " 27 ",
        "option3" : " 29 ",
        "option4" : " 34 "
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following combination of circles best represents the relationship between a fitness fan, an army officer, and a hockey player? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IFRoZXNlIHRocmVlIG1heSBvdmVybGFwLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " ",
        "option2" : "  ",
        "option3" : "  ",
        "option4" : "  "
      }
    },
    {
      "index" : 29,
      "question" : "In this question, there are three sets of statements given. Select the set that is most logical, i.e. in which the third statement can be concluded from the first two statements. Set 1. All cars are electric vehicle. All electric vehicles are pollution free. All cars are pollution free. Set 2. All women have a makeup kit. Shikha has a makeup kit. Shikha is a woman. Set 3. All chairs are wooden. All furniture is wooden. All furniture is chairs. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IExldCdzIGNvbnNpZGVyIGVhY2ggc3RhdGVtZW50IG9uZSBieSBvbmUuICAgU2V0LTE6ICAgU3RhdGVtZW50OiBBbGwgY2FycyBhcmUgZWxlY3RyaWMgdmVoaWNsZS4gQWxsIGVsZWN0cmljIHZlaGljbGVzIGFyZSBwb2xsdXRpb24gZnJlZS4gICBDb25jbHVzaW9uOiBBbGwgY2FycyBhcmUgcG9sbHV0aW9uIGZyZWUuICAgV2UgY2FuIGRyYXcgdGhlIGZvbGxvd2luZyBwb3NzaWJsZSBWZW5uIGRpYWdyYW0gYmFzZWQgb24gdGhlIGdpdmVuIHR3byBzdGF0ZW1lbnRzOiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbSwgaXQgaXMgY2xlYXIgdGhhdCwgQWxsIGNhcnMgYXJlIHBvbGx1dGlvbiBmcmVlLiBTbywgU2V0IDEgaXMgbG9naWNhbC4gICBTZXQtMjogICBTdGF0ZW1lbnQ6IEFsbCB3b21lbiBoYXZlIGEgbWFrZXVwIGtpdC4gU2hpa2hhIGhhcyBhIG1ha2V1cCBraXQuICAgQ29uY2x1c2lvbjogU2hpa2hhIGlzIGEgd29tYW4uICAgU2hpa2hhIG1heSBvciBtYXkgYmUgYSBwYXJ0IG9mIHRoZSBzZXQgb2Ygd29tZW4uIFRodXMsIHRoZSBjb25jbHVzaW9uIGRvZXMgbm90IGZvbGxvdy4gVGhlcmVmb3JlLCBTZXQgMiBpcyAgIG5vdCBsb2dpY2FsLiAgIFNldC0zOiAgIFN0YXRlbWVudDogQWxsIGNoYWlycyBhcmUgd29vZGVuLiBBbGwgZnVybml0dXJlIGlzIHdvb2Rlbi4gICAgQ29uY2x1c2lvbjogQWxsIGZ1cm5pdHVyZSBpcyBjaGFpcnMuICAgV2UgY2FuIGRyYXcgdGhlIGZvbGxvd2luZyBwb3NzaWJsZSBWZW5uIGRpYWdyYW0gYmFzZWQgb24gdGhlIGdpdmVuIHR3byBzdGF0ZW1lbnRzOiAgIFNldCBvZiBmdXJuaXR1cmUgYW5kIGNoYWlycyBtYXkgb3IgbWF5IG5vdCBvdmVybGFwLiAgIFRodXMsIHRoZSBjb25jbHVzaW9uIGRvZXMgbm90IGZvbGxvdy4gVGhlcmVmb3JlLCBzZXQgMyBpcyBub3QgbG9naWNhbC4gICBIZW5jZSwgaXQgaXMgY2xlYXIgdGhhdCBvbmx5IFNldCBJIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICAgICAgMTEgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Set 1 follows ",
        "option2" : " Only Set 1 and 2 follow ",
        "option3" : " Only Set 2 follows ",
        "option4" : " Only Set 1 and 3 follow      9               "
      }
    },
    {
      "index" : 30,
      "question" : "Three Statements followed by four Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/ follow from the Statements: Statement-1: All managers are female. Statement-2: Some males are managers. Statement-3: All population are male. Conclusion-I:  All population are female. Conclusion-II:  Some population are manager. Conclusion-III:  Some female are managers. Conclusion-IV:  All males are females. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtcyBiYXNlZCBvbiB0aGUgZ2l2ZW4gdGhyZWUgc3RhdGVtZW50czogICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW1zIGl0IGlzIGNsZWFyIHRoYXQgb25seSBDb25jbHVzaW9uLUlJSSBpcyB0cnVlLiAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICAgRXhwbGFuYXRpb24gZm9yIFF1ZXN0aW9ucyAzMSB0byAzMzogICBBcyBwZXIgdGhlIGdpdmVuIGluZm9ybWF0aW9uIHdlIGhhdmUgZm91ciB0ZWFtcywgZm91ciBjb3VwbGVzIGFuZCA0IGRpZmZlcmVudCBwb2ludHMuICAgKGkpICJTd2VldCBDb3VwbGUiIHdvbiAyIHBvaW50cy4gIChpaSkgTXVrZXNoJ3MgdGVhbSB3b24gZm91ciBtb3JlIHBvaW50cyB0aGFuIExpbmEncyB0ZWFtLCBidXQgTGluYSdzIHRlYW0gZGlkbid0IHNjb3JlIHRoZSBsZWFzdCBudW1iZXIgIG9mIHBvaW50cy4gVGhlcmVmb3JlLCBvbmx5IHBvc3NpYmxlIG9wdGlvbiBpcyB0aGF0IExpbmEgaGFzIDQgcG9pbnRzIGFuZCBNdWtlc2ggaGFzIDggcG9pbnRzLiBJdCBhbHNvIG1lYW5zICB0aGF0IE11a2VzaCAod2l0aCA4IHBvaW50cykgaXMgbm90IHdpdGggTGluYSwgYW5kIGJvdGggb2YgdGhlbSBkbyBub3QgYmVsb25nIHRvICJTd2VldCBDb3VwbGUiICBUZWFtIE1hbGUgRmVtYWxlIFBvaW50cyAgIFN3ZWV0IENvdXBsZSAyICAgTGluYSA0ICAgNiAgIE11a2VzaCA4ICAgKGlpaSkgIkp1c3QgU2luZ2luZyIgd29uIDYgcG9pbnRzLiBIZW5jZSBNdWtlc2ggYW5kIExpbmEgZG8gbm90IGJlbG9uZyB0byAiSnVzdCBTaW5naW5nIiAgKGl2KSBTYW5qZWV2J3MgdGVhbSBzY29yZWQgNCBwb2ludHMuIFdoaWxlIGZyb20gKGlpKSB3ZSBjYW4gc2VlIHRoYXQgTGluYSBoYXMgYWxzbyA0IHBvaW50cy4gSGVuY2UsIFNhbmplZXYgIGFuZCBMaW5hIGJlbG9uZ3MgdG8gc2FtZSB0ZWFtLiAgVGVhbSBNYWxlIEZlbWFsZSBQb2ludHMgICBTd2VldCBDb3VwbGUgMiAgIFNhbmplZXYgTGluYSA0ICAgSnVzdCBTaW5naW5nIDYgICBNdWtlc2ggOCAgICh2KSBUYXBhcyBhbmQgU2FuaWEgd2VyZSBvbiB0aGUgc2FtZSB0ZWFtLCBidXQgaXQgd2Fzbid0IHRoZSB0ZWFtICdTd2VldCBDb3VwbGUnLiAgVGVhbSBNYWxlIEZlbWFsZSBQb2ludHMgICBTd2VldCBDb3VwbGUgMiAgIFNhbmplZXYgTGluYSA0ICAgSnVzdCBTaW5naW5nIFRhcGFzIFNhbmlhIDYgICBNdWtlc2ggOCAgICh2aSkgTGF4bWFuIGlzIHRoZSBvbmx5IG1hbGUgcmVtYWluaW5nLCB3aG8gbXVzdCBiZSBpbiB0aGUgdGVhbSB3aGljaCBzY29yZWQgMiBwb2ludHMsIGkuZS4gIlN3ZWV0IENvdXBsZSIuICAgICAgMTIgICAgICAgICAgICAgICAgICAgVGVhbSBNYWxlIEZlbWFsZSBQb2ludHMgICBTd2VldCBDb3VwbGUgTGF4bWFuIDIgICBTYW5qZWV2IExpbmEgNCAgIEp1c3QgU2luZ2luZyBUYXBhcyBTYW5pYSA2ICAgTXVrZXNoIDggICAodmlpKSAiQmluZGFzIFNpbmdlcnMiIHdvbiAyIG1vcmUgcG9pbnRzIHRoYW4gTGF4bWFuJ3MgdGVhbTsgaGVuY2UgaXQgaGFzIDQgcG9pbnRzLiAgVGVhbSBNYWxlIEZlbWFsZSBQb2ludHMgICBTd2VldCBDb3VwbGUgTGF4bWFuIDIgICBCaW5kYXMgU2luZ2VycyBTYW5qZWV2IExpbmEgNCAgIEp1c3QgU2luZ2luZyBUYXBhcyBTYW5pYSA2ICAgTmV3IFNpbmdlcnMgTXVrZXNoIDggICAodmlpKSBXYWhlZGEgd2FzIG5vdCBvbiAiTmV3IFNpbmdlcnMiLCBzbyBzaGUgbXVzdCBiZWxvbmcgdG8gIlN3ZWV0IENvdXBsZSIgYW5kIERpdnlhIG11c3QgYmUgaW4gdGhlICB0ZWFtICJOZXcgU2luZ2VycyIuICBUZWFtIE1hbGUgRmVtYWxlIFBvaW50cyAgIFN3ZWV0IENvdXBsZSBMYXhtYW4gV2FoZWRhIDIgICBCaW5kYXMgU2luZ2VycyBTYW5qZWV2IExpbmEgNCAgIEp1c3QgU2luZ2luZyBUYXBhcyBTYW5pYSA2ICAgTmV3IFNpbmdlcnMgTXVrZXNoIERpdnlhIDggIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I and Conclusion-II ",
        "option2" : " Only Conclusion-II ",
        "option3" : " Only Conclusion-II and Conclusion-III ",
        "option4" : " Only Conclusion-III  Directions for following 3 (three) items:   Study the following information and answer the three   items that follow.   Four married couples competed in a singing   competition. Each couple had a unique team name.   Points scored by the teams were 2, 4, 6 and 8. The   'Sweet couple' won 2 points. The 'Bindass Singers'   won two more points than Laxman's team. Mukesh's   team won four more points than Lina's team, but Lina's   team didn't score the least number of points. 'Just   singing' team won 6 points. Waheda wasn't on the   team called 'New Singers'. Sanjeev's team won 4   points. Divya wasn't on the 'Bindass Singers' team.   Tapas and Sania were on the same team, but it wasn't   the team 'Sweet Couple'.  "
      }
    },
    {
      "index" : 31,
      "question" : "Laxman's teammate  and team's name  were: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Divya and Sweet Couple ",
        "option2" : " Divya and Just Singing ",
        "option3" : " Waheda and Bindas Singers ",
        "option4" : " Waheda and Sweet Couple "
      }
    },
    {
      "index" : 32,
      "question" : "The teams arranged in the ascending order of points are: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Bindas Singers, Just Singing, New Singers,  Sweet Couple ",
        "option2" : " Sweet Couple, New Singers, Just Singing,  Bindas Singers ",
        "option3" : " New Singers, Sweet Couple, Bindas  Singers, Just Singing ",
        "option4" : " Sweet Couple, Bindas Singers, Just  Singing, New Singers "
      }
    },
    {
      "index" : 33,
      "question" : "The combination which has the couples rightly paired is: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mukesh, Lina ",
        "option2" : " Mukesh, Waheda ",
        "option3" : " Sanjeev, Divya ",
        "option4" : " Sanjeev, Lina "
      }
    },
    {
      "index" : 34,
      "question" : "If height of Anurag is greater than Mukesh; height of Mukesh is less than Kajal, and height of Kajal is equal to Shiva, then which of the following conclusion/conclusions is/are correct. Conclusions: I. Anurag > Kajal II. Shiva < Anurag III. Mukesh > Shiva ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEFzIHBlciB0aGUgcXVlc3Rpb246ICAgIEFudXJhZyA+IE11a2VzaCA8IEthamFsID0gU2hpdmEgICBDb25jbHVzaW9uIEk6ICAgIEFudXJhZyA+IEthamFsIC0+IEZhbHNlIChBcyBBbnVyYWcgPiBNdWtlc2ggPCBLYWphbCA9IFNoaXZhOyBTbywgbm8gcmVsYXRpb25zaGlwIGNhbiBiZSBlc3RhYmxpc2hlZCAgIGJldHdlZW4gQW51cmFnIGFuZCBLYWphbC4pICAgIFNvLCBjb25jbHVzaW9uIEkgZG9lcyBub3QgZm9sbG93LiAgIENvbmNsdXNpb24gSUk6ICAgIFNoaXZhIDwgQW51cmFnIC0+IEZhbHNlIChBcyBBbnVyYWcgPiBNdWtlc2ggPCBLYWphbCA9IFNoaXZhOyBTbywgbm8gcmVsYXRpb25zaGlwIGNhbiBiZSBlc3RhYmxpc2hlZCAgIGJldHdlZW4gU2hpdmEgYW5kIEFudXJhZy4pICAgU28sIGNvbmNsdXNpb24gSUkgZG9lcyBub3QgZm9sbG93LiAgIENvbmNsdXNpb24gSUlJOiAgICBNdWtlc2ggPiBTaGl2YSAtPiBGYWxzZSAoQXMgQW51cmFnID4gTXVrZXNoIDwgS2FqYWwgPSBTaGl2YTsgU28sIE11a2VzaCA8IFNoaXZhLikgICBTbywgY29uY2x1c2lvbiBJSUkgZG9lcyBub3QgZm9sbG93LiAgIFRodXMsIG5vbmUgZm9sbG93cy4gICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Either I or II follows ",
        "option2" : " Only II follows ",
        "option3" : " All I, II and III follow ",
        "option4" : " None follows      10               "
      }
    },
    {
      "index" : 35,
      "question" : "In the following question relationship between different elements is shown in the statement. The statement is followed by two conclusions. Choose the correct answer on the basis of the information given below. Statement: 6 greater than equal to 8 < 5 greater than equal to 2 = 9 greater than equal to 7 Conclusions: I. 7 > 8 II. 8 less than equal to 9 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEdpdmVuIFN0YXRlbWVudDogNiBncmVhdGVyIHRoYW4gZXF1YWwgdG8gOCA8IDUgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIDIgPSA5IGdyZWF0ZXIgdGhhbiBlcXVhbCB0byA3ICAgQ29uY2x1c2lvbiBJOiAgICA3ID4gOCAtPiBGYWxzZSAoQXMgOCA8IDUgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIDIgPSA5IGdyZWF0ZXIgdGhhbiBlcXVhbCB0byA3OyBTbywgbm8gZGlyZWN0IHJlbGF0aW9uIGlzIGdpdmVuIGJldHdlZW4gNyBhbmQgOCkgICBDb25jbHVzaW9uIElJOiAgICA4IGxlc3MgdGhhbiBlcXVhbCB0byA5LT4gRmFsc2UgKEFzIDggPCA1IGdyZWF0ZXIgdGhhbiBlcXVhbCB0byAyID0gOTsgU28sIG5vIGRpcmVjdCByZWxhdGlvbiBpcyBnaXZlbiBiZXR3ZWVuIDggYW5kIDkpICAgVGh1cywgbmVpdGhlciBjb25jbHVzaW9uIEkgbm9yIElJIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICAgICAgMTMgICAgICAgICAgICAgICAgICAgRXhwbGFuYXRpb25zIGZvciBxdWVzdGlvbnMgMzYgdG8gMzg6ICAgQWNjb3JkaW5nIHRvIHRoZSBxdWVzdGlvbiwgICBHPkEsIEE+QiAgU28sIEc+QT5CIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Only Conclusion II follows ",
        "option3" : " Both Conclusion I and II follow ",
        "option4" : " Neither Conclusion I nor II follows  Directions for the following 3 (three) items:   Study the following information and answer the three   items that follow.  "
      }
    },
    {
      "index" : 1,
      "question" : "Seven students A, B, C, D, E, F and G take a series of tests.  2. No two students get the same marks. 3. G always scores more than A 4. A always scores more than B. 5. If C scores the highest marks, then E gets the least marks, and vice-versa. If C scores the second highest  marks, D scores the highest marks, and F or B score the  least marks.  36. If C gets the most marks, G would be ranked not lower than ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEluaXRpYWxseSBLYXJ0aWtleSB3YXMgaGVhZGluZyB0b3dhcmRzIHRoZSBub3J0aC4gSGUgdHJhdmVsbGVkIGZvciAzMCBtaW5zIGF0IGEgc3BlZWQgb2YgMiBrbS9ociwgaS5lLiBoZSAgIGNvdmVyZWQgMSBrbSB0b3dhcmRzIHRoZSBub3J0aC4gICBBdCBmaXJzdCBzaWduYWwsIDIgR3VhcmRzIHdpdGggR3JlZW4gY2FwIC0+IHNwZWVkID0gNCBrbS9ociwgdGltZSA9IDE1IG1pbnV0ZXMgICBEaXN0YW5jZSBjb3ZlcmVkID0gMSBrbSAgIEF0IHNlY29uZCBzaWduYWwsIDAgR3VhcmQgd2l0aCBHcmVlbiBjYXAgLT4gc3BlZWQgPSA0IGttL2hyIChwcmV2aW91cyBzcGVlZCksIHRpbWUgPSAzMCBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDIga20gICBBdCB0aGlyZCBzaWduYWwsIDMgR3VhcmRzIHdpdGggR3JlZW4gY2FwIC0+IHNwZWVkID0gMTAga20vaHIsIHRpbWUgPSAyNCBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDQga20gICBBdCBmb3VydGggc2lnbmFsLCAyIEd1YXJkcyB3aXRoIEdyZWVuIGNhcCAtPiBzcGVlZCA9IDQga20vaHIsIHRpbWUgPSAxNSBtaW51dGVzICAgRGlzdGFuY2UgY292ZXJlZCA9IDEga20gICBBdCBmaWZ0aCBzaWduYWwsIDAgR3VhcmQgd2l0aCBHcmVlbiBjYXAgLT4gU3RvcCAgIFRvdGFsIGRpc3RhbmNlIHRyYXZlbGxlZCBieSBLYXJ0aWtheSBmcm9tIHN0YXJ0aW5nIHBvaW50IHRpbGwgdGhlIGxhc3Qgc2lnbmFsID0gKDEgKyAxICsgMiArIDQgKyAxKSBrbSA9IDkga20gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Second ",
        "option2" : " Third ",
        "option3" : " Fourth ",
        "option4" : " Fifth "
      }
    },
    {
      "index" : 37,
      "question" : "If C is ranked second and B is ranked fifth, which of these must be true? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IElmIEMgaXMgcmFua2VkIDJuZCwgRCB3aWxsIHJhbmsgMXN0LCBhbmQgQiBvciBGIHRoZSBsb3dlc3QuIEJ1dCBCIHJhbmtzIDV0aC4gU28sIEYgbXVzdCByYW5rIHRoZSBsb3dlc3QuIEFsc28sICAgdGhlIG9yZGVyIEc+QT5CIHdpbGwgYmUgZm9sbG93ZWQuICAgVGhlcmVmb3JlLCBBcnJhbmdlbWVudCBpczogRCA+IEMgPiBHID4gQSA+IEIgPiBFID4gRiAgIEhlbmNlLCA2dGggcGxhY2UgaXMgb2NjdXBpZWQgYnkgRS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " D is ranked third ",
        "option2" : " A is ranked third ",
        "option3" : " A is ranked sixth ",
        "option4" : " E is ranked sixth "
      }
    },
    {
      "index" : 38,
      "question" : "If D is ranked sixth, B is ranked fifth, and E is ranked the lowest, which of the following can be true? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IElmIEQgaXMgcmFua2VkIDZ0aCwgQiBpcyByYW5rZWQgNXRoLCBFIGlzIHJhbmtlZCA3dGgsIHdlIGhhdmUgQj5EPkUgICBBbHNvLCB0aGUgb3JkZXIgRyA+IEEgPiBCIHdpbGwgYmUgbWFpbnRhaW5lZC4gICBUaGUgcG9zc2libGUgYXJyYW5nZW1lbnRzIGFyZTogICBDPkY+Rz5BPkI+RD5FICBDPkc+Rj5BPkI+RD5FICBPciBDPkc+QT5GPkI+RD5FICBUaGlzIG9wdGlvbiAoZCksIGkuZS4gRiBpcyByYW5rZWQgdGhpcmQgb3IgZm91cnRoIGlzIHRydWUuIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " G is ranked fifth or fourth ",
        "option2" : " C is ranked second or third ",
        "option3" : " A is ranked second or fifth ",
        "option4" : " F is ranked third or fourth "
      }
    },
    {
      "index" : 39,
      "question" : "Three Statements followed by four Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/ follow from the Statements: Statement-1: Some trains are buses. Statement-2: Some buses are road. Statement-3: All fast tags are buses. Conclusion-I: All fast tags are roads. Conclusion-II: Some fast tags are trains. Conclusion-III: Some trains are roads. Conclusion-IV: Some fast tags are not trains. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtcyBiYXNlZCBvbiB0aGUgZ2l2ZW4gdGhyZWUgc3RhdGVtZW50czogICBPUiAgICAgICAxNCAgICAgICAgICAgICAgICAgICBPUiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbXMgaXQgaXMgY2xlYXIgdGhhdCBlaXRoZXIgQ29uY2x1c2lvbi1JSSBvciBJViBoYXMgdG8gYmUgdHJ1ZS4gICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I ",
        "option2" : " Either Conclusion-II or IV ",
        "option3" : " Either Conclusion-I or III ",
        "option4" : " Only Conclusion-I and IV      11               "
      }
    },
    {
      "index" : 40,
      "question" : "Two Statements followed by two Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows follow from the Statements: Statement-1: Some Caps are Red. Statement-2: Blood is Red. Conclusion-I: Some Caps are Blood. Conclusion-II: Some Red is Blood. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0d28gc3RhdGVtZW50czogICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0gaXQgaXMgY2xlYXIgdGhhdCBvbmx5IENvbmNsdXNpb24tSUkgaXMgdHJ1ZS4gSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I ",
        "option2" : " Only Conclusion-II ",
        "option3" : " Both Conclusion-I and Conclusion-II ",
        "option4" : " None of the Conclusions "
      }
    },
    {
      "index" : 41,
      "question" : "Ram's salary is more than Shyam's salary, but less than Mayank's salary. On the other hand, Vijay's salary is more than that of Ganesh. Mayank's salary, however, is less than the salary of Ganesh. Whose salary is the lowest? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEFzIHBlciB0aGUgcXVlc3Rpb24sIFJhbSdzIHNhbGFyeSBpcyBtb3JlIHRoYW4gU2h5YW0ncyBzYWxhcnksIGJ1dCBsZXNzIHRoYW4gTWF5YW5rJ3Mgc2FsYXJ5OiAgIE1heWFuayA+IFJhbSA+IFNoeWFtICAgVmlqYXkncyBzYWxhcnkgaXMgbW9yZSB0aGFuIHRoYXQgb2YgR2FuZXNoOiAgICAgVmlqYXkgPiBHYW5lc2ggICBIb3dldmVyLCBNYXlhbmsncyBzYWxhcnkgaXMgbGVzcyB0aGFuIHRoYXQgb2YgR2FuZXNoLCB0aGVyZWZvcmUgb3ZlcmFsbCBvcmRlciBpczogICAgVmlqYXkgPiBHYW5lc2ggPiBNYXlhbmsgPiBSYW0gPiBTaHlhbSAgIFRoZXJlZm9yZSwgU2h5YW0ncyBzYWxhcnkgaXMgdGhlIGxvd2VzdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Vijay ",
        "option2" : " Mayank ",
        "option3" : " Shyam ",
        "option4" : " Ram "
      }
    },
    {
      "index" : 42,
      "question" : "Examine the following statements: 1. All class 10th students are intelligent. 2. Some class 10th students may be bungler. 3. Shreyansh is a class 10th student. 4. Some class 10th students are not intelligent. Given that statement 4 is true, what can be  concluded?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IFNvbWUgc3R1ZGVudHMgb2YgY2xhc3MgMTB0aCBhcmUgbm90IGludGVsbGlnZW50LCBzbyBhbGwgc3R1ZGVudHMgY2Fubm90IGJlIGludGVsbGlnZW50LiBTbyBzdGF0ZW1lbnQgMSBpcyAgIGRlZmluaXRlbHkgZmFsc2UuICAgIFNpbmNlIHNvbWUgc3R1ZGVudHMgYXJlIG5vdCBpbnRlbGxpZ2VudCwgdGhleSBtYXkgYmUgYnVuZ2xlciBvciBhdmVyYWdlIHN0dWRlbnRzLiBTbywgd2UgY2FuIGNvbmNsdWRlIHRoYXQgICBzdGF0ZW1lbnQgMiBpcyB0cnVlIGJlY2F1c2UgaXQgaXMgYSBwb3NzaWJpbGl0eS4gICBXaXRoIHJlZmVyZW5jZSB0byBzdGF0ZW1lbnQgNCwgd2UgY2Fubm90IHNheSB0aGF0IFNocmV5YW5zaCBpcyBhIGNsYXNzIDEwdGggc3R1ZGVudC4gSGVuY2UsIHN0YXRlbWVudCAzIGlzICAgaW5jb3JyZWN0LiAgIEhlbmNlLCB3ZSBjYW4gc2F5IHRoYXQgb25seSBzdGF0ZW1lbnQgMiBpcyB0cnVlLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 are true. ",
        "option2" : " 2 is true. ",
        "option3" : " 2 and 3 are false. ",
        "option4" : " None of these  Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 43,
      "question" : "According to the passage, what constitutes a subsidy to the rich - 1. Expenditure of beautification projects 2. The very act of allocating land to industries 3. Free education and health services to the needy Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICcuLi5jb250aW51b3VzIHJpc2UgaW4gZ292ZXJubWVudCBleHBlbmRpdHVyZSBvbiBzZWxmLSAgcHJvbW90aW9uLCBhbmQgaHVnZSBzdW1zIHNwZW50IG9uIHNvLWNhbGxlZCBkZXZlbG9wbWVudCBwcm9qZWN0cyBvciBiZWF1dGlmaWNhdGlvbiBwcm9qZWN0cy4uLicgVGhlICAgZXhwZW5kaXR1cmUgb24gYmVhdXRpZmljYXRpb24gcHJvamVjdCBoYXMgYmVlbiBxdW90ZWQgdG8gaGlnaGxpZ2h0IHRoZSByaXNlIGluIGdvdmVybm1lbnQgZXhwZW5kaXR1cmUuIEl0IGlzICAgbm90IGEgY29tcG9uZW50IG9mIHRoZSBzdWJzaWR5IHRvIHRoZSByaWNoLiBUaGVyZWZvcmUsIHRoaXMgYW5zd2VyIG9wdGlvbiBpcyBpbmNvcnJlY3QuICAgICAgICAxNSAgICAgICAgICAgICAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFJlZmVyIHRvIHRoZSBsaW5lOiAnLi4uZXhwZW5kaXR1cmUgdGhhdCBpcyBlaXRoZXIgYSBzdWJzaWR5IGdvaW5nIHRvIHRoZSByaWNoIG9yIGlzICAgd2FzdGVmdWwuIEZvciBleGFtcGxlLCBnaXZpbmcgbGFuZCB0byBpbmR1c3RyaWVzIGF0IGEgaGlnaGx5IHN1YnNpZGlzZWQgcmF0ZS4uLicgVGhlIHBhc3NhZ2UgdGFsa3MgYWJvdXQgICBnaXZpbmcgbGFuZCBhdCBhIHN1YnNpZGlzZWQgcmF0ZS4gVGhlIGF1dGhvciBpcyBub3QgYWdhaW5zdCB0aGUgdmVyeSBhY3Qgb2YgYWxsb2NhdGluZyBsYW5kIHRvIHRoZSBpbmR1c3RyaWVzLiAgIFRoZXJlZm9yZSwgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIGluY29ycmVjdC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGVyZSBpcyBubyBtZW50aW9uIG9mIGZyZWUgZWR1Y2F0aW9uIGFuZCBoZWFsdGggc2VydmljZXMgdG8gdGhlIG5lZWR5LiBUaGVyZWZvcmUsICAgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIGNvbXBsZXRlbHkgYmV5b25kIHRoZSBzY29wZSBvZiB0aGlzIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyB0aGUgbW9zdCBhcHByb3ByaWF0ZSBhbnN3ZXIuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " All 1, 2 and 3 ",
        "option2" : " 2 and 3 only ",
        "option3" : " 2 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 44,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Providing any freebie to marginalized sections is the responsibility of the government. 2. Providing any freebie to the rich is not the responsibility of the district administration. Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdQcm92aWRpbmcgc2VydmljZXMgc3VjaCBhcyBlZHVjYXRpb24sIGhlYWx0aCBhbmQgICBlbGVjdHJpY2l0eSB0byB0aGUgZGVwcml2ZWQgc2VjdGlvbnMgb2Ygc29jaWV0eSBjYW5ub3QgYmUgY29uc2lkZXJlZCBmcmVlYmllcyBhcyB0aGV5IHdvdWxkIGhhdmUgZmF2b3VyYWJsZSAgIGVmZmVjdHMgb24gZWNvbm9taWMgZ3Jvd3RoIHRocm91Z2ggdGhlaXIgcG9zaXRpdmUgZXh0ZXJuYWxpdGllcy4gSW4gZmFjdCwgc3BlbmRpbmcgb24gdGhlc2Ugc2VydmljZXMgaXMgdGhlICAgcmVzcG9uc2liaWxpdHkgb2YgdGhlIGdvdmVybm1lbnQuJyBJdCBpbXBsaWVzIHRoYXQgZ292ZXJubWVudCBleHBlbmRpdHVyZSB0byBwcm92aWRlIHRoZXNlIHRocmVlIHNlcnZpY2VzICAgZm9yIGZyZWUgZm9yIHRoZSBtYXJnaW5hbGlzZWQgc2VjdGlvbnMgaXMgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBnb3Zlcm5tZW50LiBCdXQgdGhlIHN0YXRlbWVudCBtZW50aW9ucyAgICdhbnknIGZyZWViaWUgd2hpY2ggaXMgYSB3cm9uZyBhc3N1bXB0aW9uLiBTbyB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBub3doZXJlIG1lbnRpb25zIHdoZXRoZXIgdGhlIGdvdmVybm1lbnQgc2hvdWxkIHByb3ZpZGUgZnJlZWJpZXMgICB0byB0aGUgcmljaCBvciBub3QuIEl0IG9ubHkgaGlnaGxpZ2h0cyB0aGUgZmFjdCB0aGF0IHN1YnNpZGllcyBhbmQgaW5jZW50aXZlcyB0byB0aGUgcHJpdmlsZWdlZCBjbGFzc2VzIGluIHNvY2lldHkgICBnb2VzIHVucXVlc3Rpb25lZC4gTW9yZW92ZXIsIHRoZXJlJ3Mgbm8gbWVudGlvbiBvZiAnZGlzdHJpY3QgYWRtaW5pc3RyYXRpb24nLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2      12               "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: The role of a teacher is to 1. Inculcate the values of tranquility and comprehension 2. Uproot traits of aggression and bigotry 3. Create a learning environment of  indifference  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSXQgY2FuIGFsc28gaW5jdWJhdGUgdHJhaXRzIHRoYXQgbWFrZSB1cyB2aW9sZW50IG9yIHBlYWNlZnVsLCAgIHVuZGVyc3RhbmRpbmcgb3IgaW50b2xlcmFudC4gVGVhY2hlcnMgaGVscCB0byB3YXRlciB0aGUgcG9zaXRpdmUgc2VlZHMgYW5kIHdlZWQgb3V0IHRoZSBvbmVzIHRoYXQgbWFrZSB1cyAgIGlnbm9yYW50LCBjYXVzZSBmZWFyIGFuZCBzdG9rZSBoYXRyZWQuJyBJdCBpbXBsaWVzIHRoZSByb2xlIG9mIGEgdGVhY2hlciBpcyB0byBpbmN1bGNhdGUgdGhlIHZhbHVlcyBvZiB0cmFucXVpbGl0eSAgIG9yIHBlYWNlIGFuZCBjb21wcmVoZW5zaW9uIG9yIHVuZGVyc3RhbmRpbmcuIFNvIHRoaXMgc3RhdGVtZW50IGlzIGNvcnJlY3QuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJdCBjYW4gYWxzbyBpbmN1YmF0ZSB0cmFpdHMgdGhhdCBtYWtlIHVzIHZpb2xlbnQgb3IgcGVhY2VmdWwsICAgdW5kZXJzdGFuZGluZyBvciBpbnRvbGVyYW50LiBUZWFjaGVycyBoZWxwIHRvIHdhdGVyIHRoZSBwb3NpdGl2ZSBzZWVkcyBhbmQgd2VlZCBvdXQgdGhlIG9uZXMgdGhhdCBtYWtlIHVzICAgaWdub3JhbnQsIGNhdXNlIGZlYXIgYW5kIHN0b2tlIGhhdHJlZC4nIEl0IGltcGxpZXMgdGhlIHJvbGUgb2YgYSB0ZWFjaGVyIGlzIHRvIHdlZWQgb3V0IG9yIHVwcm9vdCB0cmFpdHMgb2YgICB2aW9sZW5jZSBvciBhZ2dyZXNzaW9uIGFuZCBpbnRvbGVyYW5jZSBvciBiaWdvdHJ5LiBTbyB0aGlzIHN0YXRlbWVudCBpcyBjb3JyZWN0LiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdBIHRoaW5raW5nIGVkdWNhdG9yIGNhbiBjcmVhdGUgYSBsZWFybmluZyBlbnZpcm9ubWVudCAgIGZpbGxlZCB3aXRoIGNvbXBhc3Npb24uJyBXaGlsZSB0aGUgc3RhdGVtZW50IG1lbnRpb25zIHRoYXQgdGhlIHJvbGUgb2YgYSB0ZWFjaGVyIGlzIHRvIGNyZWF0ZSBhIGxlYXJuaW5nICAgZW52aXJvbm1lbnQgb2YgaW5kaWZmZXJlbmNlLCB0aGUgbWVhbmluZyBvZiB3aGljaCBpcyBhICdsYWNrIG9mIGludGVyZXN0IG9yIGZlZWxpbmcgdG93YXJkcyAgIHNvbWVib2R5L3NvbWV0aGluZycgd2hpY2ggaXMganVzdCB0aGUgb3Bwb3NpdGUgb2YgY29tcGFzc2lvbi4gU28sIHRoaXMgc3RhdGVtZW50IGlzIGluY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 46,
      "question" : "In the following question, relationship between different elements is shown in the statement. The statement is followed by two conclusions. Choose the correct answer on the basis of the information given below. Statement: Rless than equal toTless than equal toQ = C>B>D Conclusions: I. R < B II. C less than equal to R ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEdpdmVuIFN0YXRlbWVudDogUmxlc3MgdGhhbiBlcXVhbCB0b1RsZXNzIHRoYW4gZXF1YWwgdG9RID0gQz5CPkQgICBDb25jbHVzaW9uIEk6ICAgIFIgPCBCIC0+IEZhbHNlIChBcyBSbGVzcyB0aGFuIGVxdWFsIHRvVGxlc3MgdGhhbiBlcXVhbCB0b1EgPSBDPkI+RDsgU28sIG5vIGRpcmVjdCByZWxhdGlvbiBpcyBnaXZlbiBiZXR3ZWVuIFIgYW5kIEIpICAgQ29uY2x1c2lvbiBJSTogICAgQyBsZXNzIHRoYW4gZXF1YWwgdG8gUiAtPiBGYWxzZSAoQXMgUmxlc3MgdGhhbiBlcXVhbCB0b1RsZXNzIHRoYW4gZXF1YWwgdG9RID0gQzsgU28sIFIgbGVzcyB0aGFuIGVxdWFsIHRvIEMpICAgVGhlcmVmb3JlLCBuZWl0aGVyIENvbmNsdXNpb24gSSBub3IgSUkgZm9sbG93cy4gICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Only Conclusion II follows ",
        "option3" : " Both Conclusion I and II follow ",
        "option4" : " Neither Conclusion I nor II follows "
      }
    },
    {
      "index" : 47,
      "question" : "Examine the diagram given here carefully and answer the question that follow. How many people like listening to music and  eating, but not both?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IFRoZSBudW1iZXIgb2YgcGVvcGxlIHdobyBsaWtlIGxpc3RlbmluZyB0byBtdXNpYywgYnV0IG5vdCBlYXRpbmcgPSA2ICsgMTIgPSAxOCAgIFBlb3BsZSB3aG8gbGlrZSBlYXRpbmcsIGJ1dCBub3QgbGlzdGVuaW5nIHRvIG11c2ljID0gNyArIDExICsgMiArIDE1ID0gMzUgICBIZW5jZSwgc3VtID0gMTggKyAzNSA9IDUzICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 17 ",
        "option2" : " 55 ",
        "option3" : " 49 ",
        "option4" : " None of these. "
      }
    },
    {
      "index" : 48,
      "question" : "In a certain police station, 20 officers are in ATS and 14 officers are in cyber security. 8 officers belong to both ATS and cyber security. How many officers belong to cyber security only or ATS only? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IE51bWJlciBvZiBPZmZpY2VycyBpbiBBVFMsIG4oQSkgPSAyMCAgIE51bWJlciBvZiBPZmZpY2VycyBpbiBjeWJlciBzZWN1cml0eSwgbihDKSA9IDE0ICAgTnVtYmVyIG9mIE9mZmljZXJzIGluIGJvdGggQVRTIGFuZCBjeWJlciBzZWN1cml0eSA9IG4oQSDiiKkgQykgPSA4ICAgICAgIDE2ICAgICAgICAgICAgICAgICAgIFNvLCBOdW1iZXIgb2YgT2ZmaWNlcnMgb25seSBpbiBBVFMgPSAyMCAtIDggPSAxMiAgIE51bWJlciBvZiBPZmZpY2VycyBvbmx5IGluIGN5YmVyIHNlY3VyaXR5ID0gMTQgLSA4ID0gNiAgIEhlbmNlLCBudW1iZXIgb2Ygb2ZmaWNlcnMgb25seSBpbiBBVFMgb3Igb25seSBpbiBjeWJlciBzZWN1cml0eSA9IDEyICsgNiA9IDE4ICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 14 ",
        "option2" : " 12 ",
        "option3" : " 18 ",
        "option4" : " 9 "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following three statements: 1. Some Indians speak Hindi. 2. Some Russians speak Hindi. 3. All Hindi speaking Russians also speak English. Which one of the following conclusions can be  drawn from the above statements?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEZyb20gdGhlIGdpdmVuIHN0YXRlbWVudHMsIHdlIGdldCB0aGUgZm9sbG93aW5nIFZlbm4gZGlhZ3JhbTogICAoVmVubiBkaWFncmFtcyBmb3Igb3RoZXIgcG9zc2libGUgc2NlbmFyaW9zIGNhbiBhbHNvIGJlIGRyYXduLCBob3dldmVyLCB0aGlzIGRpYWdyYW0gY292ZXJzIGFsbCBjb25kaXRpb25zICAgbWVudGlvbmVkIGluIHF1ZXN0aW9uIGNvbXByZWhlbnNpdmVseS4pICAgT2JzZXJ2aW5nIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0sIHdlIGNhbiBpbmZlciB0aGF0IGl0J3Mgbm90IG5lY2Vzc2FyeSB0aGF0IGFsbCBIaW5kaSBzcGVha2VycyBhbHNvIHNwZWFrICAgRW5nbGlzaC4gSGVuY2UsIHN0YXRlbWVudCB1bmRlciBvcHRpb24gKGEpIGlzIGluY29ycmVjdC4gICBJdCBpcyBub3QgbmVjZXNzYXJ5IHRoYXQgYWxsIEluZGlhbnMgc3BlYWsgRW5nbGlzaC4gSGVuY2UsIHN0YXRlbWVudCB1bmRlciBvcHRpb24gKGIpIGlzIGluY29ycmVjdC4gICBBZ2FpbiwgaXQgaXMgY2xlYXIgdGhhdCBhbGwgSGluZGkgc3BlYWtlcnMgYXJlIG5vdCBJbmRpYW5zLiBIZW5jZSwgc3RhdGVtZW50IHVuZGVyIG9wdGlvbiAoYykgaXMgaW5jb3JyZWN0IHRvby4gICBIZW5jZSwgbm9uZSBvZiB0aGUgZ2l2ZW4gc3RhdGVtZW50cyBhcmUgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " All Hindi speakers also speak English. ",
        "option2" : " All Indians speak English. ",
        "option3" : " All Hindi speakers are Indians. ",
        "option4" : " None of the statements (1), (2) and (3)  given above are correct.      13               "
      }
    },
    {
      "index" : 50,
      "question" : "In the following question relationship between population of different cities is shown in the statements. The statements are followed by two conclusions. Choose the correct answer on the basis of the information given below. Statements: Kota greater than equal to Patna = Prayagraj; Patna < Jaipur less than equal to Gandhinagar Conclusions: I. Gandhinagar > Prayagraj II. Jaipur > Kota ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEdpdmVuIHN0YXRlbWVudHM6ICAgS290YSBncmVhdGVyIHRoYW4gZXF1YWwgdG8gUGF0bmEgPSBQcmF5YWdyYWogOyBQYXRuYSA8IEphaXB1ciBsZXNzIHRoYW4gZXF1YWwgdG8gR2FuZGhpbmFnYXIgICAgQ29tYmluaW5nIHRoZSBnaXZlbiBzdGF0ZW1lbnRzLCB3ZSBnZXQ6ICAgS290YSBncmVhdGVyIHRoYW4gZXF1YWwgdG8gUGF0bmEgPSBQcmF5YWdyYWogPCBKYWlwdXIgbGVzcyB0aGFuIGVxdWFsIHRvIEdhbmRoaW5hZ2FyICAgIENvbmNsdXNpb24gSTogICAgR2FuZGhpbmFnYXIgPiBQcmF5YWdyYWogLT4gVHJ1ZSAoQXMgUHJheWFncmFqIDwgSmFpcHVyIGxlc3MgdGhhbiBlcXVhbCB0byBHYW5kaGluYWdhcjsgU28sIEdhbmRoaW5hZ2FyID4gUHJheWFncmFqKSAgICBDb25jbHVzaW9uIElJOiAgICBKYWlwdXIgPiBLb3RhIC0+IEZhbHNlIChBcyBLb3RhIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBQYXRuYSA9IFByYXlhZ3JhaiA8IEphaXB1cjsgU28sIG5vIGRpcmVjdCByZWxhdGlvbiBpcyBnaXZlbiBiZXR3ZWVuIEphaXB1ciAgIGFuZCBLb3RhKSAgIFRodXMsIG9ubHkgY29uY2x1c2lvbiBJIGZvbGxvd3MuICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Both Conclusion I and II follow. ",
        "option3" : " Either Conclusion I or II follows ",
        "option4" : " Neither Conclusion I nor II follows "
      }
    },
    {
      "index" : 51,
      "question" : "Vedprakash and Sain Singh are preparing for Civil Services Examinations, and read The Hindu & Indian Express newspapers respectively. In the test in which they both appear, Vedprakash gets 30% questions from the newspaper he reads, and Sain gets 20% questions from the newspaper he reads. 10% of total questions are from both newspapers. If the test has 100 questions, how many questions in total have been covered by these two newspapers together? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IFRvdGFsIG51bWJlciBvZiBxdWVzdGlvbnMgaW4gdGhlIHRlc3QgPSAxMDAgICBOdW1iZXIgb2YgcXVlc3Rpb25zIGZyb20gVGhlIEhpbmR1ID0gSCA9IDMwJSBvZiAxMDAgPSAzMCAgIE51bWJlciBvZiBxdWVzdGlvbnMgZnJvbSBJbmRpYW4gRXhwcmVzcyA9IEkgPSAyMCUgb2YgMTAwID0gMjAgICBOdW1iZXIgb2YgcXVlc3Rpb25zIGZyb20gYm90aCBUaGUgSGluZHUgYW5kIEluZGlhbiBFeHByZXNzID0gSCDqk7UgSSA9IDEwJSBvZiAxMDAgPSAxMCAgIChIZXJlIOqTtSBkZW5vdGVzIGludGVyc2VjdGlvbikgICBIZW5jZSwgdG90YWwgbnVtYmVyIG9mIHF1ZXN0aW9ucyBjb3ZlcmVkIGJ5IHRoZXNlIHR3byBuZXdzcGFwZXJzIHRvZ2V0aGVyLCBIIOqTtCBJID0gSCArIEkgLSAoSCDqk7UgSSkgPSAzMCAgICsgMjAgLSAxMCA9IDQwIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10 ",
        "option2" : " 40 ",
        "option3" : " 50 ",
        "option4" : " 55  Directions for the following 3 (three) items:    Read the following three passages and answer the   items that follow. Your answers to these items should   be based on the passages only.  "
      }
    },
    {
      "index" : 52,
      "question" : "Which of the following is the most logical corollary to the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEEgY29yb2xsYXJ5IGlzIGEgcHJvcG9zaXRpb24gdGhhdCBmb2xsb3dzIGZyb20gKGFuZCBpcyBvZnRlbiBhcHBlbmRlZCB0bykgb25lIGFscmVhZHkgcHJvdmVkIGluIHRoZSBnaXZlbiAgIHBhc3NhZ2UuICAgT3B0aW9uIChhKSBpcyBpbmNvcnJlY3QuIFRoZSBhdXRob3IgdGFsa3MgYWJvdXQgdGhlIGRlYmF0ZSBpbiAyMDA5LTEwIGFib3V0IGpvYmxlc3MgZ3Jvd3RoIGFuZCBjYXN1YWxpemF0aW9uICAgb2YgdGhlIHdvcmtmb3JjZS4gQnV0LCB0aGUgYXV0aG9yIHNheXMgaXQgd2FzIGFuIGlsbC1pbmZvcm1lZCBhbmQgcG9saXRpY2lzZWQgZGViYXRlLiBUaHVzLCB3ZSBjYW5ub3QgICBjb25jbHVkZSB3aGV0aGVyIHRoZSBwaGVub21lbm9uIG9mIGpvYmxlc3MgZ3Jvd3RoIGFuZCBjYXN1YWxpemF0aW9uIG9mIHRoZSB3b3JrZm9yY2Ugd2FzIHJlYWxseSB0cnVlIGF0ICAgdGhhdCB0aW1lIGFuZCBkZWZpbml0ZWx5IGNhbm5vdCBjb25jbHVkZSB0aGF0IGl0IGJlZ2FuIGluIEluZGlhIGFyb3VuZCAyMDA5LTEwLiAgICAgICAxNyAgICAgICAgICAgICAgICAgICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gR292ZXJubWVudCBoYXMgc2V0IHVwIGEgdGFzayBmb3JjZSB0byBnZW5lcmF0ZSB0aW1lbHkgYW5kIHJlbGlhYmxlIGVtcGxveW1lbnQgZGF0YS4gICBUaGlzIGluZGljYXRlcyB0aGF0IGpvYiBjcmVhdGlvbiBpcyBvbmUgb2YgdGhlIHByaW9yaXRpZXMgb2YgdGhlIGdvdmVybm1lbnQgaW4gaXRzIHJlbWFpbmluZyB0ZW51cmUuIEJ1dCwgd2UgICBjYW5ub3QgY2FsbCBqb2IgY3JlYXRpb24gYXMgdGhlIHRvcG1vc3QgcHJpb3JpdHkgb2YgdGhlIGdvdmVybm1lbnQuICAgIE9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgY29yb2xsYXJ5IHRoYXQgY2FuIGJlIGRyYXduIGZyb20gdGhlIHBhc3NhZ2UuIFRvZGF5IHRoZSBnb3Zlcm5tZW50IGhhcyBzZXQgdXAgYSAgIHRhc2sgZm9yY2UgdG8gZ2VuZXJhdGUgdGltZWx5IGFuZCByZWxpYWJsZSBlbXBsb3ltZW50IGRhdGEuIFRoaXMgc2hvd3MgdGhhdCBJbmRpYSBoYXMgbm8gcmVsaWFibGUgam9icyBkYXRhICAgdGlsbCB0b2RheS4gVGh1cywgaW4gYWJzZW5jZSBvZiB0aGlzIGRhdGEsIHRoZSBkZWJhdGVzIHN1cnJvdW5kaW5nIGpvYiBjcmVhdGlvbiBoYXZlIGJlZW4gcG9saXRpY2l6ZWQuIEF1dGhvciAgIGFsc28gZ2l2ZXMgb25lIHN1Y2ggZXhhbXBsZSB3aGVuIGhlIHRhbGtzIGFib3V0IHRoZSB0aW1lIHBlcmlvZCBvZiAyMDA5LTEwLiAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGUgcHVycG9zZSBiZWhpbmQgZ292ZXJubWVudCBzZXR0aW5nIHVwIHRhc2sgZm9yY2UgaXMgdG8gaGF2ZSBvYmplY3RpdmUgam9icyBkYXRhLiAgIFdlIGRvIG5vdCBoYXZlIGFueSBpbmZvcm1hdGlvbiBpbiB0aGUgcGFzc2FnZSB0byBjb25jbHVkZSB3aGV0aGVyIGdvdmVybm1lbnQgd2FzIGFibGUgdG8gY3JlYXRlIGVub3VnaCAgIGpvYnMgb3Igbm90LiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The phenomenon of jobless growth and  casualization of the workforce began in  India around 2009-10. ",
        "option2" : " The topmost priority of government in its  remaining tenure is job creation. ",
        "option3" : " In India the debates surrounding job  creation have often been politicized. ",
        "option4" : " Reason for government setting up task  force is its inability to create enough jobs in  its tenure in office. "
      }
    },
    {
      "index" : 53,
      "question" : "Which one among the following inferences cannot be rationally and logically drawn from the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IFRoZSBwYXNzYWdlIHNheXMsIFNoaW1ha28gWWFtYWd1Y2hpIHdobyBpcyA5NCB5ZWFycyBvbGQgc3RpbGwgcmVjb3VudHMgdGhlIG1lbW9yaWVzIG9mIE5hZ2FzYWtpIGJvbWIuICAgVGh1cywgd2UgY2FuIGluZmVyIHRoYXQsIHRoZSB0cmF1bWEgb2YgYSBudWNsZWFyIGJvbWIgY2Fubm90IGJlIGVyYXNlZCBpbiBzaG9ydCBzcGFuLiBUaHVzLCBvcHRpb24gKGEpIGNhbiAgIGJlIGluZmVycmVkLiAgIEluIHRoZSBvcGVuaW5nIGxpbmUgb2YgdGhlIHBhc3NhZ2UsIHRoZSBhdXRob3Igc2F5cyBtYW55IHBlb3BsZSBhcmUgc3VmZmVyaW5nIGJvdGggZnJvbSB0cmF1bWEgb2YgbnVjbGVhciAgIGJvbWIgYW5kIGRpc2NyaW1pbmF0aW9uLiBBbmQsIG9uZSByZWFzb24gZm9yIHRoaXMgZGlzY3JpbWluYXRpb24gaXMgZXhhZ2dlcmF0aW9uIG9mIHJpc2tzIGJ5IG5ld3NwYXBlcnMuICAgVGh1cywgd2UgY2FuIGluZmVyIHRoYXQgbWlzaW5mb3JtYXRpb24gYnJlZWRzIGRpc2NyaW1pbmF0aW9uIGFzIGdpdmVuIGluIG9wdGlvbiAoYikuICAgVGhlIGF1dGhvciBnaXZlcyB0aGUgZXhhbXBsZSBvZiBTaGltYWtvIFlhbWFndWNoaS4gIFNoZSdzIGJlZW4gcGxhZ3VlZCBieSBuaWdodG1hcmVzIGFib3V0IHRoZSBkeWluZyAgIHBlb3BsZSBzaGUgaGFkIHRvIGxlYXZlIGJlaGluZCBkdXJpbmcgbnVjbGVhciBib21iIGRyb3BwaW5nLiBUaHVzLCB3ZSBjYW4gaW5mZXIgdGhhdCBQc3ljaG9sb2dpY2FsICAgc3VwcG9ydCB0byBhdG9taWMgYm9tYiBzdXJ2aXZvcnMgaXMgb2YgdXRtb3N0IGltcG9ydGFuY2UuIFRodXMsIG9wdGlvbiAoYykgY2FuIGJlIGluZmVycmVkLiAgIFRoZSBhdXRob3IgdGFsa3MgYWJvdXQgdHdvIGluY2lkZW5jZXMgaW4gdGhlIHBhc3NhZ2U6IEhpcm9zaGltYSBhbmQgTmFnYXNha2kgYm9tYmluZyBhbmQgbnVjbGVhciBkaXNhc3RlciAgIGluIDIwMTEuIEhlcmUsIHRoZSBhdXRob3Igc2F5cyB0aGF0IHN1cnZpdm9ycyBvZiBib3RoIHRoZXNlIGluY2lkZW5jZXMgYXJlIGZhY2luZyB0cmF1bWEgYXMgd2VsbCBhcyAgIGRpc2NyaW1pbmF0aW9uLiBUaGVyZSBpcyBub3RoaW5nIGluIHRoZSBwYXNzYWdlIGZyb20gd2hlcmUgd2UgY2FuIGluZmVyIHRoYXQgdGhlcmUgYXJlIHBlb3BsZSB3aG8gYXJlICAgd2l0bmVzcyB0byBib3RoIGluY2lkZW50cy4gVGh1cywgb3B0aW9uIChkKSBjYW5ub3QgYmUgaW5mZXJyZWQuIEhlbmNlLCBpdCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The trauma of a nuclear bomb cannot be  erased in a short span. ",
        "option2" : " Misinformation breeds discrimination. ",
        "option3" : " Psychological support to atomic bomb  survivors is of utmost importance. ",
        "option4" : " Many people have been witness to both,  bombings in Hiroshima and Nagasaki, and  nuclear disaster in 2011. "
      }
    },
    {
      "index" : 54,
      "question" : "Which among the following is/are the most logical and rational inference(s) that can be made from the above passage? 1. Sanitary and Phyto-sanitary Regulations are costing the developing countries dearly. 2. India has been a major exporter of grapes to EU countries. 3. The pesticides, metals and other contaminants enter food at the production stage only. Choose the correct answer from the codes  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IFRoZSBwYXNzYWdlIHNheXMsIGNvbW1vZGl0aWVzIGV4cG9ydGVkIGJ5IEluZGlhIGFyZSByZWplY3RlZCBieSBFVSBhbmQgUnVzc2lhIHVuZGVyIFNhbml0YXJ5IGFuZCBQaHl0by0gIHNhbml0YXJ5IHJlZ3VsYXRpb25zLiBUaGUgcGFzc2FnZSBkb2VzIG5vdCB0YWxrIGFib3V0IGRldmVsb3BpbmcgY291bnRyaWVzIGluIGdlbmVyYWwuIEFsc28sIHdlIGNhbm5vdCBpbmZlciAgIHRoYXQgdGhleSBhcmUgY29zdGluZyB0aGUgZGV2ZWxvcGluZyBjb3VudHJpZXMgZGVhcmx5LiBUaHVzLCBzdGF0ZW1lbnQgMSBjYW5ub3QgYmUgaW5mZXJyZWQgZnJvbSB0aGUgcGFzc2FnZS4gICBUaGUgYXV0aG9yIHNheXMsIGdyYXBlcyBleHBvcnRlZCBmcm9tIEluZGlhIGhhdmUgYmVlbiByZWplY3RlZCBieSBFVSB1bmRlciBjZXJ0YWluIHJlZ3VsYXRpb25zLiBCdXQsIHRoZXJlICAgaXMgbm8gaW5kaWNhdGlvbiByZWdhcmRpbmcgd2hldGhlciBJbmRpYSBpcyBhIG1ham9yIGV4cG9ydGVyIG9mIGdyYXBlcyB0byBFVS4gVGh1cywgc3RhdGVtZW50IDIgY2Fubm90IGJlICAgaW5mZXJyZWQgZnJvbSB0aGUgcGFzc2FnZS4gICBGaW5hbGx5LCB0aGUgYXV0aG9yIGdpdmVzIGEgc3VnZ2VzdGlvbiB0aGF0IHN0cmljdCBtb25pdG9yaW5nIGZyb20gcHJvZHVjdGlvbiB0byB0cmFuc3BvcnQsIHByb2Nlc3NpbmcsICAgaGFuZGxpbmcsIHBhY2tpbmcsIGV0Yy4gaXMgYWJzb2x1dGVseSBuZWNlc3NhcnkuIFRodXMsIHdlIGNhbiBpbmZlciB0aGF0IHRoZSBmb29kIG1heSBnZXQgY29udGFtaW5hdGVkIGF0ICAgYW55IG9mIHRoZXNlIHN0YWdlcyBhbmQgbm90IGF0IHRoZSBwcm9kdWN0aW9uIHN0YWdlIGFsb25lLiBUaHVzLCBzdGF0ZW1lbnQgMyBhbHNvIGNhbm5vdCBiZSBpbmZlcnJlZCBmcm9tIHRoZSAgIHBhc3NhZ2UuICAgIFtOb3RlOiBXaGVuZXZlciB0aGVyZSBhcmUgd29yZHMgbGlrZSBvbmx5LCBhbGwsIGFsb25lIGV0Yy4gKGFzIGluIHN0YXRlbWVudCAzKSB3ZSBuZWVkIHRvIGJlIHZlcnkgY2F1dGlvdXMgICBhbmQgcmVhZCB0aGUgc3RhdGVtZW50cyByZXBlYXRlZGx5Ll0gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 55,
      "question" : "Three Statements followed by four Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/ follow from the Statements: Statement-1: All pens are eraser. Statement-2: All erasers are scale. Statement-3: All scales are clips. Conclusion-I:  All erasers are clips. Conclusion-II:  All scales are pens. Conclusion-III:  All pens are clips. Conclusion-IV:  All clips are erasers. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0aHJlZSBzdGF0ZW1lbnRzOiAgIEZyb20gdGhlIGFib3ZlIFZlbm4gZGlhZ3JhbSwgaXQgaXMgY2xlYXIgdGhhdCBvbmx5IENvbmNsdXNpb24tSSBhbmQgQ29uY2x1c2lvbi1JSUkgYXJlIHRydWUgICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiAgICAgICAxOCAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I and Conclusion-II ",
        "option2" : " Only Conclusion-II and Conclusion-III ",
        "option3" : " Only Conclusion-I and Conclusion-III ",
        "option4" : " All Conclusions follow "
      }
    },
    {
      "index" : 56,
      "question" : "Two Statements followed by two Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/follow from the Statements: Statement-1: All young population go to Gym. Statement-2: Abhishek doesn't go to Gym. Conclusion-I:  Abhishek is not young. Conclusion-II:  Going to Gym is not essential to be a young population. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtIGJhc2VkIG9uIHRoZSBnaXZlbiB0d28gc3RhdGVtZW50czogICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0sIGl0IGlzIGNsZWFyIHRoYXQgb25seSBDb25jbHVzaW9uLUkgaXMgdHJ1ZS4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I ",
        "option2" : " Only Conclusion-II ",
        "option3" : " Both Conclusion-I and Conclusion-II ",
        "option4" : " None of the Conclusion follows      15                Directions for the following 4 (four) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 57,
      "question" : "According to the passage what are the reasons for closing down of several arts and humanities degree programmes? 1. Pandemic 2. Lack of interest 3. Perceived low utility of these subjects Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlIHBhbmRlbWljIGhhcyBlbmhhbmNlZCB0aGlzIHBlcmNlcHRpb24sIGV4YWNlcmJhdGluZyAgIGEgZHJhc3RpYyBkZWNsaW5lIG9mIHJlc291cmNlcywgZW5jb3VyYWdpbmcgYWNhZGVtaWMgcmVkdW5kYW5jaWVzIGFuZCBjbG9zaW5nIGRvd24gb2Ygc2V2ZXJhbCBhcnRzIGFuZCAgIGh1bWFuaXRpZXMgZGVncmVlIHByb2dyYW1tZXMuJyBTbywgdGhlIHBhbmRlbWljIGlzIGNsZWFybHkgdGhlIG1haW4gcmVhc29uIGJlaGluZCB0aGUgY2xvc2luZyBkb3duIG9mICAgdGhlc2Ugc3ViamVjdHMuIFRoZXJlZm9yZSwgdGhpcyBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgbGFjayBvZiBpbnRlcmVzdCBhcyB0aGUgcmVhc29uIGJlaGluZCBjbG9zaW5nIGRvd24gICBvZiB0aGVzZSBjb3Vyc2VzLiBTbyB0aGlzIHN0YXRlbWVudCBpcyBjb21wbGV0ZWx5IGJleW9uZCB0aGUgc2NvcGUgb2YgdGhpcyBwYXNzYWdlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFJlZmVyIHRvIHRoZSBsaW5lOiAnQSBnZW5lcmFsIHBlcmNlcHRpb24gaXMgdGhhdCBhcnRzIGFuZCBodW1hbml0aWVzIGdyYWR1YXRlcyBhcmUgICBsZXNzIGVxdWlwcGVkIHRvIGNvbnRyaWJ1dGUgdG8gdGhlIHdvcmtmb3JjZSBjb21wYXJlZCB0byBTVEVNLicgSXQgaXMgcGVyY2VpdmVkIChtaWdodCBub3QgYWN0dWFsbHkgYmUgICB0cnVlKSB0aGF0IGFydHMgYW5kIGh1bWFuaXRpZXMgaGF2ZSByZWxhdGl2ZWx5IGxlc3MgdXRpbGl0eS4gVGhpcyBwZXJjZXB0aW9uIGhhcyBmdXJ0aGVyIHN0cmVuZ3RoZW5lZCBhZnRlciB0aGUgICBwYW5kZW1pYy4gVGhpcyBhbnN3ZXIgb3B0aW9uIGlzIGFsc28gY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 58,
      "question" : "According to the passage, solutions to real- world problems lie in: 1. Including STEM courses in arts and humanities programmes 2. Collaboration among countries excelling in arts and humanities courses 3. Incorporating arts and humanities courses in STEM degree programmes Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJZiBhbnl0aGluZywgdGhlIHBhbmRlbWljIGhhcyB0YXVnaHQgdXMgdGhhdCBzb2x1dGlvbnMgdG8gICByZWFsLXdvcmxkIHByb2JsZW1zIGxpZSBpbiBhIHN1c3RhaW5lZCBjb2xsYWJvcmF0aW9uIGFjcm9zcyBkaXNjaXBsaW5lcy4gTm90IG9ubHkgZG8gd2UgbmVlZCBtb3JlIGFydHMgYW5kICAgaHVtYW5pdGllcyBwcm9ncmFtbWVzLCBidXQgd2UgYXJndWUgdGhhdCBlbmdpbmVlcmluZyBhbmQgZ2VuZXJhbGx5IFNURU0gZGVncmVlIHByb2dyYW1tZXMgbXVzdCAgIGluY2x1ZGUgYXJ0cyBhbmQgaHVtYW5pdGllcyBjb3Vyc2VzLicgSXQgaW1wbGllcyBhcnRzIGFuZCBodW1hbml0aWVzIGNvdXJzZXMgbXVzdCBiZSBpbmNsdWRlZCBpbiBTVEVNICAgZGVncmVlIHByb2dyYW1tZXMsIG5vdCB2aWNlIHZlcnNhLiBTbyB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0lmIGFueXRoaW5nLCB0aGUgcGFuZGVtaWMgaGFzIHRhdWdodCB1cyB0aGF0IHNvbHV0aW9ucyB0byAgIHJlYWwtd29ybGQgcHJvYmxlbXMgbGllIGluIGEgc3VzdGFpbmVkIGNvbGxhYm9yYXRpb24gYWNyb3NzIGRpc2NpcGxpbmVzLicgSXQgaW1wbGllcyB3ZSBuZWVkIGNvbGxhYm9yYXRpb25zICAgYWNyb3NzIGRpc2NpcGxpbmVzLiBUaGVyZSBpcyBubyBtZW50aW9uIG9mIGNvbGxhYm9yYXRpb24gYW1vbmcgY291bnRyaWVzLiBTbyB0aGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdOb3Qgb25seSBkbyB3ZSBuZWVkIG1vcmUgYXJ0cyBhbmQgaHVtYW5pdGllcyAgIHByb2dyYW1tZXMsIGJ1dCB3ZSBhcmd1ZSB0aGF0IGVuZ2luZWVyaW5nIGFuZCBnZW5lcmFsbHkgU1RFTSBkZWdyZWUgcHJvZ3JhbW1lcyBtdXN0IGluY2x1ZGUgYXJ0cyAgIGFuZCBodW1hbml0aWVzIGNvdXJzZXMuJyBJdCBjbGVhcmx5IGltcGxpZXMgdGhhdCB3ZSBuZWVkIHRvIGluY2x1ZGUgYXJ0cyBhbmQgaHVtYW5pdGllcyBjb3Vyc2VzIGluIFNURU0gICBkZWdyZWUgcHJvZ3JhbW1lcy4gU28gdGhpcyBzdGF0ZW1lbnQgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 59,
      "question" : "With reference to the above passage, the following assumptions have been made: 1. A child's achievement and its appreciation by parents is externally influenced. 2. In our society, the ambit of achievement is not broadly defined. 3. Parents are worried most about their children's livelihood. Which of the above assumptions are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnT3VyIHNvY2lhbGlzYXRpb24gbWFrZXMgdXMgYXBwbGF1ZCBvbmx5IGNlcnRhaW4gdHlwZXMgb2YgICBhY2hpZXZlbWVudCAtIHdlIGRvbid0IGV2ZW4gbG9vayBmb3Igb3RoZXIgdGhpbmdzIG91ciBjaGlsZHJlbiBtYXkgYmUgZ29vZCBhdC4nIE1vc3RseSwgb25seSB0aG9zZSAgIGFjaGlldmVtZW50cyBvZiBjaGlsZHJlbiBhcmUgYXBwcmVjaWF0ZWQgdGhhdCBhcmUgc29jaWFsbHkgYWNjbGFpbWVkLiBUaGlzIHNvY2lldGFsIHBhcnQgaGFzIGFuIGVsZW1lbnQgb2YgICBleHRlcm5hbCBpbmZsdWVuY2UuIFRoZXJlZm9yZSwgaXQgd291bGQgYmUgY29ycmVjdCB0byBzYXkgdGhhdCBhIGNoaWxkJ3MgYWNoaWV2ZW1lbnQgYW5kIGl0cyBhcHByZWNpYXRpb24gYnkgICBwYXJlbnRzIGlzIGV4dGVybmFsbHkgaW5mbHVlbmNlZC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0J1dCB3aGVuIGEgc3lzdGVtIGRlZmluZXMgc3VjY2Vzc2VzIG5hcnJvd2x5LCBpdCBsZWF2ZXMgICBvdXQgYSBodWdlIG51bWJlciBvZiB5b3VuZ3N0ZXJzLicgSXQgaW1wbGllcyBpbiBvdXIgc29jaWV0eSBzdWNjZXNzIG9yIGFjaGlldmVtZW50IGlzIGRlZmluZWQgb3IgbWVhc3VyZWQgICBuYXJyb3dseSBvciBpbiBhIGxpbWl0ZWQgc2Vuc2UuIEl0IGNsZWFybHkgbWVhbnMgdGhhdCB0aGUgYW1iaXQgb2YgYWNoaWV2ZW1lbnQgaXMgbm90IGJyb2FkbHkgZGVmaW5lZC4gU28gdGhpcyAgIGFzc3VtcHRpb24gaXMgdmFsaWQuICAgICAgIDE5ICAgICAgICAgICAgICAgICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdQYXJlbnRzIHRlbmQgdG8gd29ycnkgYWJvdXQgdGhlIHJpc2luZyBjb3N0cyBvZiBjb2FjaGluZyAgIGR1cmluZyBhbmQgYWZ0ZXIgc2Nob29sLCB0aGUgcmlzaW5nIGNvc3RzIG9mIGNvbGxlZ2UgZmVlcywgd2hldGhlciB0aGVpciBjaGlsZHJlbiB3aWxsIGZpbmQgYSBsaXZlbGlob29kIGFuZCAgIG1vc3Qgb2YgYWxsIGhvdyB3aWxsIHRoZXkgbGl2ZSB1cCB0byB0aGVpciBvd24gYW5kIHNvY2lldGFsIGV4cGVjdGF0aW9ucy4nIEl0IHNob3dzIHRoZSB3b3JyaWVzIG9mIHBhcmVudHMuICAgQnV0IGl0IGRvZXMgbm90IG1lbnRpb24gdGhhdCBsaXZlbGlob29kIHdvcnJ5IGlzIHRoZSBtb3N0IHByb21pbmVudCBpc3N1ZS4gSXQgaXMganVzdCBwdXQgYWxvbmcgd2l0aCBvdGhlciAgIHdvcnJpZXMuIFNvLCB0aGlzIGFzc3VtcHRpb24gaXMgaW52YWxpZC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 only ",
        "option4" : " 2 only      16               "
      }
    },
    {
      "index" : 60,
      "question" : "On the basis of the passage given above, the following assumptions have been made: 1. Indian education lags behind the global standards in terms of output. 2. The world is getting benefits of medical services from the Indian healthcare system. Which of the above assumptions are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdJbmRpYW4gZWR1Y2F0aW9uIHByb2R1Y2VzIGdsb2JhbCBDRU9zLicgVGhpcyBhbnN3ZXIgICBvcHRpb24gdGFsa3MgYWJvdXQgT1VUUFVUOyBhbmQgdGhlc2UgZ2xvYmFsIENFT3MgYXJlIG5vdGhpbmcgYnV0IG91dHB1dHMgb2YgSW5kaWFuIGVkdWNhdGlvbi4gVGhlcmVmb3JlLCAgIGl0IHdvdWxkIGJlIGluY29ycmVjdCB0byBzYXkgdGhhdCAnSW5kaWFuIGVkdWNhdGlvbiBsYWdzIGJlaGluZCB0aGUgZ2xvYmFsIHN0YW5kYXJkcyBpbiB0ZXJtcyBvZiBvdXRwdXQuJyAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSW5kaWFuIHByaXZhdGUgaGVhbHRoY2FyZSBzeXN0ZW1zIGhhdmUgYmVlbiBwcm92aWRpbmcgICBzZXJ2aWNlcyB0byBtZWRpY2FsIHRvdXJpc3RzIGZyb20gbWFueSBwYXJ0cyBvZiB0aGUgd29ybGQuJyBJdCBpbXBsaWVzIHRoYXQgdGhlIHdvcmxkIGlzIGdldHRpbmcgYmVuZWZpdHMgb2YgICBtZWRpY2FsIHNlcnZpY2UgZnJvbSB0aGUgSW5kaWFuIGhlYWx0aGNhcmUgc3lzdGVtLiBTbyB0aGlzIGFzc3VtcHRpb24gaXMgdmFsaWQuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 61,
      "question" : "In the following question relationship between different elements is shown in the statements. The statements are followed by two conclusions. Choose the correct answer on the basis of the information given below. Statements: C greater than equal to M greater than equal to I < F; R > N = I greater than equal to B Conclusions: I. R > M II. F > N ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEdpdmVuIFN0YXRlbWVudHM6IEMgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIE0gZ3JlYXRlciB0aGFuIGVxdWFsIHRvIEkgPCBGOyBSID4gTiA9IEkgZ3JlYXRlciB0aGFuIGVxdWFsIHRvIEIgICBPbiBjb21iaW5pbmcgdGhlIGdpdmVuIHN0YXRlbWVudHMsIHdlIGdldDogICBDIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBNIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBJID0gTiA8IFIgYW5kIFIgPiBOID0gSSA8IEYgICBDb25jbHVzaW9uIEk6ICAgIFIgPiBNIC0+IEZhbHNlIChBcyBDIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBNIGdyZWF0ZXIgdGhhbiBlcXVhbCB0byBJID0gTiA8IFI7IFNvLCBubyBkaXJlY3QgcmVsYXRpb24gaXMgZ2l2ZW4gYmV0d2VlbiBSIGFuZCBNKSAgIENvbmNsdXNpb24gSUk6ICAgIEYgPiBOIC0+IFRydWUgKEFzIE4gPSBJIDwgRjsgU28sIEYgPiBOKSAgIFRodXMsIG9ubHkgY29uY2x1c2lvbiBJSSBmb2xsb3dzLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion I follows ",
        "option2" : " Only Conclusion II follows ",
        "option3" : " Both Conclusion I and II follow ",
        "option4" : " Neither Conclusion I nor II follows "
      }
    },
    {
      "index" : 62,
      "question" : "40 parents came for a parents-teacher meeting in a school. Some parents can understand only Hindi and some can understand only English, while there are 10 parents who can understand both languages. If the number of parents who can understand Hindi is 20, then how many parents can understand only English and only Hindi respectively? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IE51bWJlciBvZiBwYXJlbnRzIHdobyBjYW4gdW5kZXJzdGFuZCBIaW5kaSBvbmx5ID0gMjAgLSAxMCA9IDEwICAgTnVtYmVyIG9mIHBhcmVudHMgd2hvIGNhbiB1bmRlcnN0YW5kIEVuZ2xpc2ggb25seSA9IFRvdGFsIG51bWJlciBvZiBwYXJlbnRzIC0gbnVtYmVyIG9mIHBhcmVudHMgd2hvICAgY2FuIHVuZGVyc3RhbmQgSGluZGkgPSA0MCAtIDIwID0gMjAgICBIZW5jZSwgb24gdGhlIGJhc2lzIG9mIHRoZSBnaXZlbiBpbmZvcm1hdGlvbiwgd2UgY2FuIGRyYXcgdGhlIGZvbGxvd2luZyBWZW5uIGRpYWdyYW06ICAgVGh1cywgMjAgcGFyZW50cyBjYW4gdW5kZXJzdGFuZCBFbmdsaXNoIG9ubHkgYW5kIDEwIHBhcmVudHMgY2FuIHVuZGVyc3RhbmQgSGluZGkgb25seS4gSGVuY2UsIG9wdGlvbiAoYikgICBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 10, 30 ",
        "option2" : " 20, 10 ",
        "option3" : " 30, 20 ",
        "option4" : " 20, 30 "
      }
    },
    {
      "index" : 63,
      "question" : "Three Statements followed by four Conclusions are given below. You have to take the Statements to be true even if they seem to be at variance from the commonly known facts. Read all the Conclusions and then decide which of the given Conclusions logically follows/follow from the Statements: Statement-1: Some Watches are Mango. Statement-2:  Some Books are Mango. Statement-3: All Mangos are Books . Conclusion-I:  Some Watches are Books. Conclusion-II:  All Books are Mango. Conclusion-III:  All Mangos are Watches. Conclusion-IV:  All Books are Watches. Which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IFdlIGNhbiBkcmF3IHRoZSBmb2xsb3dpbmcgcG9zc2libGUgVmVubiBkaWFncmFtcyBiYXNlZCBvbiB0aGUgZ2l2ZW4gdGhyZWUgc3RhdGVtZW50czogICBGcm9tIHRoZSBhYm92ZSBWZW5uIGRpYWdyYW0sIGl0IGlzIGNsZWFyIHRoYXQgb25seSBDb25jbHVzaW9uLUkgaXMgdHJ1ZS4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyBjb3JyZWN0LiAgICAgICAyMCAgICAgICAgICAgICAgICAgICBFeHBsYW5hdGlvbnMgZm9yIFF1ZXN0aW9ucyA2NCB0byA2NjogICBFIHNpdHMgc2Vjb25kIHRvIHRoZSByaWdodCBvZiBoZXIgaHVzYmFuZCBhbmQgdGhpcmQgdG8gdGhlIGxlZnQgb2YgQy4gICBOb3csIEggaXMgbm90IGFuIGltbWVkaWF0ZSBuZWlnaGJvdXIgb2YgRSdzIGh1c2JhbmQgYW5kIEYgc2l0cyBzZWNvbmQgdG8gdGhlIHJpZ2h0IG9mIGhpcyB3aWZlIEguIEl0IG1lYW5zICAgSCBpcyBhIGZlbWFsZSBhbmQgRiBpcyBhIG1hbGUgYW5kIHRoZXJlIGlzIG9ubHkgb25lIHdheSB3ZSBjYW4gZml0IGFsbCBvZiB0aGVzZSBwZW9wbGUgb24gdG8gdGhlIHRhYmxlLCBhcyAgIHNob3duIGJlbG93OiAgIE5vdywgRyBpcyBub3QgYW4gaW1tZWRpYXRlIG5laWdoYm91ciBvZiBFIGFuZCBCIHNpdHMgc2Vjb25kIHRvIHRoZSByaWdodCBvZiBBLiAgIEhlbmNlLCB0aGVyZSB3aWxsIGJlIDIgcG9zc2liaWxpdGllczogICBJdCBpcyBhbHNvIGdpdmVuIHRoYXQgRCBpcyBhIG1hbGUgYW5kIGhlIGlzIG5vdCBFJ3MgaHVzYmFuZC4gVGhlcmUncyBvbmx5IG9uZSBwbGFjZSBoZSBjYW4gc2l0IGluIGJvdGggdGhlIGNhc2VzICAgZGVwaWN0ZWQgYWJvdmUuIEhlbmNlLCB3ZSBnZXQ6ICAgSXQncyBjbGVhciB0aGF0IGluIGJvdGggdGhlIGNhc2VzLCBHIG11c3QgYmUgRSdzIGh1c2JhbmQuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only Conclusion-I ",
        "option2" : " Only Conclusion-II ",
        "option3" : " Only Conclusion-I and Conclusion-IV ",
        "option4" : " Only Conclusion-II and Conclusion-IV      17                Direction for the following 3 (three) items:    Consider the information given below and answer the   three items that follow.   A, B, C, D, E, F, G and H are eight friends sitting   around a circular table and facing outwards. No two   women are sitting next to each other. E is sitting second   to the right of her husband and third to the left of C. F   sits second to the right of his wife H, who is not an   immediate neighbour of E's husband. D is a male and   he is not E's husband. G is not an immediate neighbour   of E. B sits second to the right of A. It is known that   there are three females and five males in the group.  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
