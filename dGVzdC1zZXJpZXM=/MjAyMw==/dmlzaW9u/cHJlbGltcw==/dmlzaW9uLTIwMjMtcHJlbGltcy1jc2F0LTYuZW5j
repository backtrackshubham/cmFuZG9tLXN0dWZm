{
  "testId" : "vision-2023-prelims-csat-6",
  "testType" : "csat",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\vision\\prelims\\vision-2023-prelims-csat-6.pdf",
  "question" : [
    {
      "index" : 3,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. Information available on social networks  must be verified for correct opinion  formation.  2. Opinions made through social media are  not reliable due to instances of fake news.  3. Social networks act as a medium for  exercising the right to freedom of speech.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAiVGhlIHVzZXJzIG9mIHNvY2lhbCBuZXR3b3JrcyBubyBsb25nZXIganVzdCB1c2UgdGhlbSB0byBrZWVwIGluIHRvdWNoICAgd2l0aCBmcmllbmRzLCBidXQgaW5jcmVhc2luZ2x5IGZhY2lsaXRhdGUgc29jaWFsIG5ldHdvcmtzIHRvIHNlYXJjaCBmb3IgaW5mb3JtYXRpb24uIFVzZXJzIGFsc28gZm9ybSBvcGluaW9ucyAgIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBhbmQgY29udHJpYnV0aW9ucyBhdmFpbGFibGUgaW4gc29jaWFsIG5ldHdvcmtzJywgc2hvd2luZyB0aGF0IHNvY2lhbCBuZXR3b3JrcyBhY3QgICBhcyBhIHNvdXJjZSBvZiBpbmZvcm1hdGlvbi4gSG93ZXZlciwgdGhlIHBhc3NhZ2UgZG9lcyBub3QgbWVudGlvbiB3aGV0aGVyIHN1Y2ggaW5mb3JtYXRpb24gaXMgdmVyaWZpZWQgb3IgICBub3QuIFNvLCB0byBzYXkgdGhhdCBzdWNoIGluZm9ybWF0aW9uIHNob3VsZCBiZSB2ZXJpZmllZCB3b3VsZCBub3QgYmUgY29ycmVjdC4gVGhlcmUgYXJlIG5vIG5lZ2F0aXZlICAgY29uc2VxdWVuY2VzIG9mIHVudmVyaWZpZWQgaW5mb3JtYXRpb24gYmVpbmcgZGlzY3Vzc2VkIGluIHRoZSBwYXNzYWdlLiAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoaXMgYXNzdW1wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlIGRpc2N1c3Npb24gICByZWxhdGVkIHRvIGZha2UgbmV3cyBhbmQgaXRzIGltcGFjdCBvbiByZWxpYWJsZSBvcGluaW9uIGZvcm1hdGlvbiBpcyBub3QgYmVpbmcgZG9uZSBpbiB0aGUgcGFzc2FnZS4gU28sIHRoaXMgICBpcyBub3QgdGhlIGNvcnJlY3QgYXNzdW1wdGlvbi4gICBBc3N1bXB0aW9uIDMgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdVc2VycyBhbHNvIGZvcm0gb3BpbmlvbnMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIGFuZCBjb250cmlidXRpb25zICAgYXZhaWxhYmxlIG9uIHNvY2lhbCBuZXR3b3Jrcy4gV2hpbGUgc2VhcmNoaW5nIGZvciBpbmZvcm1hdGlvbiBhbmQgaW50ZWdyYXRpbmcgaXQgaW50byB0aGVpciBvcGluaW9uICAgZm9ybWF0aW9uLCB1c2VycyBhcmUgbm8gbG9uZ2VyIGp1c3QgcGFzc2l2ZSByZWNpcGllbnRzIG9mIGluZm9ybWF0aW9uIGluIG9ubGluZSBzb2NpYWwgbmV0d29ya3MgYnV0IGFyZSAgIGFsc28gYWN0aXZlbHkgc3ByZWFkaW5nIHRoZWlyIG93biBvcGluaW9ucycsIHNob3cgdGhhdCB1c2VycyBhcmUgZXhlcmNpc2luZyB0aGVpciByaWdodCB0byBpbmZvcm1hdGlvbiBieSAgIG5vdCBvbmx5IHBhc3NpdmVseSByZWNlaXZpbmcgaW5mb3JtYXRpb24gYnV0IGFsc28gZXhlcmNpc2luZyB0aGVpciByaWdodCB0byBmcmVlZG9tIG9mIHNwZWVjaCBieSBhY3RpdmVseSAgIHNwcmVhZGluZyB0aGVpciBvcGluaW9ucyB1c2luZyB0aGVzZSBzb2NpYWwgbmV0d29ya3MuIFNvLCB0aGlzIGlzIHRoZSBjb3JyZWN0IGFzc3VtcHRpb24uICAgIEV4cGxhbmF0aW9uIGZvciBRdWVzdGlvbnMgNCB0byA2OiAgIDIgYm9va3MgYXJlIHBsYWNlZCBiZXR3ZWVuIGJvb2sgRiBhbmQgQywgYW5kIG9ubHkgMSBib29rIGlzIHBsYWNlZCBiZXR3ZWVuIEMgYW5kIEcuIFdoaWxlIGJvb2sgRCBpcyAgIHBsYWNlZCBqdXN0IGJlbG93IGJvb2sgRi4gTm8gdHdvIGJvb2tzIHdpdGggYWRqYWNlbnQgbGV0dGVycyBpbiBhbHBoYWJldGljYWwgb3JkZXIgYXJlIHBsYWNlZCBhZGphY2VudCB0byAgIGVhY2ggb3RoZXIuIFNvLCB0aGVyZSB3aWxsIGJlIDIgcG9zc2libGUgY2FzZXMuICAgIEluIGNhc2UgMSwgYm9vayBGIHdpbGwgYmUgYWJvdmUgYm9vayBDLCB3aGlsZSBpbiBjYXNlIDIsIGJvb2sgRiB3aWxsIGJlIGJlbG93IGJvb2sgQy4gICAgIEJvb2sgQiBpcyBwbGFjZWQgYWJvdmUgYm9vayBDIGJ1dCBub3QgYXQgdGhlIHRvcC4gU28sIHdlIGNhbid0IGFjY29tbW9kYXRlIGJvb2sgQiBpbiBjYXNlIDIuIFRodXMgICBDYXNlIDIgaXMgY2FuY2VsbGVkLiBJbiBjYXNlIDEsIGJvb2sgQiB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgMm5kIHBvc2l0aW9uIGZyb20gdGhlIHRvcC4gICBCb29rIEUgaXMgcGxhY2VkIGF0IDJuZCBwb3NpdGlvbiBlaXRoZXIgZnJvbSB0b3Agb3IgYm90dG9tLiBJdCBjYW4ndCBiZSBwbGFjZWQgYXQgMm5kIHBvc2l0aW9uIGZyb20gdGhlIHRvcCAgIGJlY2F1c2UgYm9vayBCIGlzIGFscmVhZHkgdGhlcmUuIFRodXMsIGJvb2sgRSB3aWxsIGJlIHBsYWNlZCBhdCAybmQgcG9zaXRpb24gZnJvbSB0aGUgYm90dG9tLiAgIE5vdywgYm9va3MgQSBhbmQgSCBhcmUgbGVmdC4gQm9vayBBIGNhbid0IGJlIHBsYWNlZCBhdCB0aGUgdG9wIGJlY2F1c2Ugb3RoZXJ3aXNlIGJvb2tzIEEgYW5kIEIgd2lsbCBiZSAgIGFkamFjZW50LiBTbywgYm9vayBBIHdpbGwgYmUgcGxhY2VkIGJldHdlZW4gYm9va3MgRCBhbmQgQywgYW5kIGJvb2sgSCB3aWxsIG9jY3VweSB0aGUgdG9wIHBvc2l0aW9uLiAgIEZpbmFsIGFycmFuZ2VtZW50IHdpbGwgYmU6ICAgICAgICAgIDMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 3 only  ",
        "option4" : " 1, 2 and 3         3                                                                                                                                                               Directions for the following 3 (three) items:   Read the following information and answer the three   questions that follow.   Eight books A, B, C, D, E, F, G and H are placed one   above the other, but not necessarily in the same order.   No two books with adjacent letters in alphabetical order   are placed adjacent to each other. For example, C is not   placed just above or below D.   Book E is placed at 2nd position either from top or   bottom. Only 2 books are between book F and book C.   Book B is placed above book C but not at the top.   While book D is placed just below book F. Only one   book is placed between book C and book G.  "
      }
    },
    {
      "index" : 4,
      "question" : "How many books are placed between book A  and book C?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IE5vIGJvb2sgaXMgcGxhY2VkIGJldHdlZW4gYm9vayBBIGFuZCBib29rIEMuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Two books  ",
        "option2" : " Only one book  ",
        "option3" : " More than two books  ",
        "option4" : " No book   "
      }
    },
    {
      "index" : 5,
      "question" : "Which book is placed fourth from the bottom?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEJvb2sgQSBpcyBwbGFjZWQgZm91cnRoIGZyb20gdGhlIGJvdHRvbS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Book G  ",
        "option2" : " Book F  ",
        "option3" : " Book H  ",
        "option4" : " Book A   "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following is not true with respect  to the given information?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFRoZSBzdGF0ZW1lbnQsICdCb29rIEMgaXMgcGxhY2VkIGJldHdlZW4gYm9vayBBIGFuZCBib29rIEgnIGlzIG5vdCB0cnVlLiAgICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Book G is placed just below book E.  ",
        "option2" : " Book F is in placed between book D and   book B.  ",
        "option3" : " Book H is placed at the top.  ",
        "option4" : " Book C is placed in between book A and   book H.  "
      }
    },
    {
      "index" : 7,
      "question" : "The same dice has been shown from three  vantage points.   Find the colour which is on the opposite face to  the 'Black' coloured face.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEZyb20gdGhlIGdpdmVuIGZpZ3VyZSwgaXQgaXMgY2xlYXIgdGhhdCBhZGphY2VudCBmYWNlcyBvZiBibGFjayBhcmUgUGluaywgUmVkLCBXaGl0ZSBhbmQgR3JlZW4uICAgVGhlcmVmb3JlLCB3ZSBjYW4gY29uY2x1ZGUgdGhhdCBPcmFuZ2UgY29sb3VyIG11c3QgYmUgb3Bwb3NpdGUgdG8gQmxhY2sgY29sb3VyZWQgZmFjZS4gICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Red  ",
        "option2" : " White  ",
        "option3" : " Orange  ",
        "option4" : " Green   "
      }
    },
    {
      "index" : 8,
      "question" : "Find the wrong term in the series.   32768, 4104, 1024, 517  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEdpdmVuIHNlcmllczogICAzMjc2OCwgNDEwNCwgMTAyNCwgNTE3ICAgVGhlIGFib3ZlIHNlcmllcyBmb2xsb3dzIHRoZSBmb2xsb3dpbmcgcGF0dGVybjogICAzMjc2OC84ICsgOCA9IDQwOTYgKyA4ID0gNDEwNCAgIDQxMDQvNCArIDQgPSAxMDI2ICsgNCA9IDEwMzAg4omgIDEwMjQgKGluIHNlcmllcyBpdCBpcyBnaXZlbiBhcyAxMDI0KSAgIDEwMzAvMiArIDIgPSA1MTUgKyAyID0gNTE3ICAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1024  ",
        "option2" : " 517  ",
        "option3" : " 4104  ",
        "option4" : " 32768   "
      }
    },
    {
      "index" : 9,
      "question" : "Find the missing term in the given series.  208, 2052, 928, 3172, 2448, ?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEdpdmVuIHNlcmllczogICAyMDgsIDIwNTIsIDkyOCwgMzE3MiwgMjQ0OCwgPyAgIFRoZSBhYm92ZSBzZXJpZXMgZm9sbG93cyB0aGUgZm9sbG93aW5nIHBhdHRlcm46ICAgMjA4IC0+ICg4KTIgKyAoMTIpMiAgIDIwNTIgLT4gKDE4KTIgKyAoMTIpMyAgIDkyOCAtPiAoMjgpMiArICgxMikyICAgMzE3Mi0+ICgzOCkyICsgKDEyKTMgICAyNDQ4IC0+ICg0OCkyICsgKDEyKTIgICBTbywgdGhlIG5leHQgdGVybSA9ICg1OCkyICsgKDEyKTMgPSA1MDkyICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 6048  ",
        "option2" : " 1872  ",
        "option3" : " 5092  ",
        "option4" : " 3872   "
      }
    },
    {
      "index" : 10,
      "question" : "If 'CSAT' is written as '0324190801262007' in  a code language, then how will 'WRONG' be  written?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEdpdmVuIGNvZGUgICBDU0FUIC0+IDAzMjQxOTA4MDEyNjIwMDcgICAgTGV0J3MgY2hlY2sgd2hpY2ggcGF0dGVybiBpcyBiZWluZyBmb2xsb3dlZCBoZXJlLiAgICAge0hlcmUgUiBzdGFuZHMgZm9yIHJldmVyc2Ugb3JkZXIgb2YgdGhlIGFscGhhYmV0fSAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAgICAgICA0ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 23041809151214130720  ",
        "option2" : " 23041807161214130720  ",
        "option3" : " 23041807161242723020  ",
        "option4" : " Can't be determined         4                                                                                                                                                               Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 11,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. Experience alone cannot be the barometer  for measuring self-knowledge and  performance.  2. For improving performance, one should  focus on building expertise and work on  enhancing self-knowledge.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBCYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gZ2l2ZW4gaW4gdGhlIHBhc3NhZ2UsIGl0IGlzIGNvcnJlY3QgdG8gYXNzdW1lIHRoYXQgb25seSAgIGV4cGVyaWVuY2UgZG9lcyBub3QgaGVscCBpbiBtZWFzdXJpbmcgdGhlIHBlcmZvcm1hbmNlIG9yIHNlbGYta25vd2xlZGdlIG9mIGEgcGVyc29uLiBBc3Nlc3NtZW50IG9mIGEgICBwZXJzb24ncyBjb250aW51ZWQgcGVyZm9ybWFuY2UgYW5kIGxldmVsIG9mIHNlbGYta25vd2xlZGdlIGJhc2VkIG9uIGV4cGVyaWVuY2UgYWxvbmUgY2FuIGJlIGZhbHNlIGF0ICAgdGltZXMuIFRoZSBsaW5lcyAnQW5kIGp1c3QgYXMgZXhwZXJpZW5jZSBjYW4gbGVhZCB0byBhIGZhbHNlIHNlbnNlIG9mIGNvbmZpZGVuY2UgYWJvdXQgb3VyIHBlcmZvcm1hbmNlLCBpdCAgIGNhbiBhbHNvIG1ha2UgdXMgb3ZlcmNvbmZpZGVudCBhYm91dCBvdXIgbGV2ZWwgb2Ygc2VsZi1rbm93bGVkZ2UnLCBzdGF0ZSB0aGF0IGV4cGVyaWVuY2UgY2FuIGdpdmUgYSBmYWxzZSAgIHNlbnNlIG9mIGNvbmZpZGVuY2UgYW5kIG1ha2UgdXMgb3ZlcmNvbmZpZGVudCBhYm91dCBvdXIgbGV2ZWwgb2Ygc2VsZi1rbm93bGVkZ2UuIFNvLCB0aGlzIGFzc3VtcHRpb24gaXMgICBjb3JyZWN0LiAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnQ29udHJhcnkgdG8gcG9wdWxhciBiZWxpZWYsIHN0dWRpZXMgaGF2ZSBzaG93biB0aGF0IHBlb3BsZSBkbyBub3QgICBhbHdheXMgbGVhcm4gZnJvbSBleHBlcmllbmNlLCB0aGF0IGV4cGVydGlzZSBkb2VzIG5vdCBoZWxwIHBlb3BsZSByb290IG91dCBmYWxzZSBpbmZvcm1hdGlvbiwgYW5kIHRoYXQgICBzZWVpbmcgb3Vyc2VsdmVzIGFzIGhpZ2hseSBleHBlcmllbmNlZCBjYW4ga2VlcCB1cyBmcm9tIGRvaW5nIG91ciBob21ld29yaywgc2Vla2luZyBkaXNjb25maXJtaW5nICAgZXZpZGVuY2UsIGFuZCBxdWVzdGlvbmluZyBvdXIgYXNzdW1wdGlvbnMnLCBzaG93IHRoYXQgZXZlbiBleHBlcnRpc2UgZG9lcyBub3QgYWx3YXlzIGhlbHAgaW4gcm9vdGluZyBvdXQgICBmYWxzZSBpbmZvcm1hdGlvbi4gQWxzbywgdGhlIGxpbmsgYmV0d2VlbiBlbmhhbmNlZCBzZWxmLWtub3dsZWRnZSBhbmQgYmV0dGVyIHBlcmZvcm1hbmNlIGlzIG5vdCBjb3ZlcmVkICAgaW4gdGhlIHBhc3NhZ2UuIFRoZSBpbmZvcm1hdGlvbiBub3doZXJlIHN0YXRlcyB0aGF0IHBvb3Igc2VsZi1rbm93bGVkZ2UgaXMgdGhlIGNhdXNlIG9mIHBvb3IgcGVyZm9ybWFuY2UuICAgU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBub3QgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 12,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. Children in public spaces are susceptible to  sexual crimes.  2. Sexual crimes have receded in public  spaces because of them being shifted  online.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZSBzaWdodCBvZiBjaGlsZHJlbiBwbGF5aW5nIG9uIHRoZSBzdHJlZXQgb3IgaW4gcGFyay0gIGxpa2Ugc3BhY2VzIGhhZCBhbHJlYWR5IGJlY29tZSBhIHJhcml0eSBhcyBzZXh1YWwgY3JpbWVzIGJlY2FtZSBtb3JlIGNvbW1vbi4gQXMgY2hpbGRyZW4gcmVjZWRlZCBmcm9tICAgcHVibGljIHZpZXcsIHRoZXkgYmVjYW1lIHN1YmplY3QgdG8gb3BwcmVzc2lvbiB0aHJvdWdoIHRoZSBzby1jYWxsZWQgc29jaWFsIG1lZGlhLicgSXQgaW1wbGllcyBpbiBwdWJsaWMgICB2aWV3LCBpLmUuIHB1YmxpYyBwbGFjZXMgbGlrZSBwYXJrcyBhbmQgc3RyZWV0cywgY2hpbGRyZW4gYXJlIHN1c2NlcHRpYmxlIHRvIHNleHVhbCBjcmltZXMuIFNvIHRoaXMgYXNzdW1wdGlvbiAgIGlzIGNvcnJlY3QuICAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGhlIHNpZ2h0IG9mIGNoaWxkcmVuIHBsYXlpbmcgb24gdGhlIHN0cmVldCBvciBpbiBwYXJrLSAgbGlrZSBzcGFjZXMgaGFkIGFscmVhZHkgYmVjb21lIGEgcmFyaXR5IGFzIHNleHVhbCBjcmltZXMgYmVjYW1lIG1vcmUgY29tbW9uLiBBcyBjaGlsZHJlbiByZWNlZGVkIGZyb20gICBwdWJsaWMgdmlldywgdGhleSBiZWNhbWUgc3ViamVjdCB0byBvcHByZXNzaW9uIHRocm91Z2ggdGhlIHNvLWNhbGxlZCBzb2NpYWwgbWVkaWEuJyBUaGUgcGFzc2FnZSBkb2VzIG5vdCAgIG1lbnRpb24gdGhhdCBzZXh1YWwgY3JpbWVzIGhhdmUgc2hpZnRlZCB0byBzb2NpYWwgbWVkaWEuIEFsc28sIGl0IGRvZXMgbm90IG1lbnRpb24gdGhhdCBzZXh1YWwgY3JpbWVzIGhhdmUgICBiZWVuIHJlZHVjZWQgaW4gcHVibGljIHNwYWNlcy4gU28gdGhpcyBhc3N1bXB0aW9uIGlzIGluY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 13,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. Children have easy access to sexual content  online.  2. Tech giants are responsible for the increase  in online sexual crimes.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZWlyIGV4cG9zdXJlIHRvIHZpb2xlbnQgdmlkZW9zLCBwb3Jub2dyYXBoeSBhbmQgICB0ZXJyb3JpemluZyBtZXNzYWdlcyBpcyBjb21tb24uJyBJdCBpbXBsaWVzIHRoYXQgYWNjZXNzIHRvIHN1Y2ggY29udGVudCBpcyBxdWl0ZSBlYXN5LiAgICAgQXNzdW1wdGlvbiAyIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUZWNoIGdpYW50cyByZW1vdmUgbWlsbGlvbnMgb2Ygc3VjaCBtYXRlcmlhbCBhcyBwYXJ0ICAgb2YgdGhlaXIgY29udGVudCBtb2RlcmF0aW9uIGV4ZXJjaXNlLiBJdCBpcyBhIHN0cmFuZ2Ugcml0dWFsLCBmb3IgdGhlc2UgdmVyeSBjb21wYW5pZXMgYWN0aXZlbHkgZW5jb3VyYWdlICAgY2hpbGRyZW4gdG8gcGFydGljaXBhdGUgaW4gZGlnaXRhbCBhY3Rpdml0eS4nIEl0IGltcGxpZXMgdGVjaCBnaWFudHMgYXJlIHJlc3BvbnNpYmxlIGZvciBlbmNvdXJhZ2luZyBjaGlsZHJlbiB0byAgIHRha2UgcGFydCBpbiBkaWdpdGFsIGFjdGl2aXRpZXMsIGJ1dCBpdCBkb2VzIG5vdCBtZW50aW9uIHRoYXQgdGhleSBhcmUgcmVzcG9uc2libGUgZm9yIHRoZSBpbmNyZWFzZSBpbiBvbmxpbmUgICBzZXh1YWwgY3JpbWVzLiBHb2luZyBieSB0aGUgbGltaXRlZCBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZSwgdGVjaCBnaWFudHMgY2Fubm90IGJlIGRpcmVjdGx5IGhlbGQgICByZXNwb25zaWJsZSBmb3IgdGhlIGluY3JlYXNlIGluIG9ubGluZSBzZXh1YWwgY3JpbWVzLCBhcyB0aGV5IG9ubHkgcHJvdmlkZSBhIHBsYXRmb3JtIGZvciBkaWdpdGFsICAgY29tbXVuaWNhdGlvbiwgaW4gZ2VuZXJhbC4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2          5                                                                                                                                                              "
      }
    },
    {
      "index" : 14,
      "question" : "In a code language, 'POWER' is written as  'WEMZX', then in the same language, how  would you write 'STABLE'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEdpdmVuIENvZGU6ICAgUE9XRVIgLT4gV0VNWlggICAgU2ltaWxhcmx5LCAgICAgICAgNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZW5jZSwgd29yZCAnU1RBQkxFJyB3aWxsIGJlIGNvZGVkIGFzICdCSUpUTUEnLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " BMXZMC  ",
        "option2" : " BIJTMA  ",
        "option3" : " DKRTMA  ",
        "option4" : " CKRSMA   "
      }
    },
    {
      "index" : 15,
      "question" : "Names of 6 friends are written on 6 different  faces of a cube. If 'Sita' is in between 'Ram'  and 'Aum', 'Rohit' is opposite to 'Animesh',  then which name must be on the face opposite  to 'Kavita'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEhlcmUgaXQgaXMgY2xlYXJseSBtZW50aW9uZWQgdGhhdCBSb2hpdCBpcyBvcHBvc2l0ZSB0byBBbmltZXNoLiBBbHNvLCBTaXRhIGlzIGluIGJldHdlZW4gUmFtIGFuZCBBdW0sICAgd2hpY2ggbWVhbnMgdGhhdCBSYW0gYW5kIEF1bSBtdXN0ICBiZSBvcHBvc2l0ZSB0byBlYWNoIG90aGVyLiAgIE5vdywgd2UgYXJlIGxlZnQgb25seSB3aXRoIEthdml0YSBhbmQgU2l0YS4gU28sIHRoZXkgd2lsbCBiZSBmYWNpbmcgZWFjaCBvdGhlci4gICAgUmFtIOKftyBBdW0gICBSb2hpdCDin7cgQW5pbWVzaCAgIEthdml0YSDin7cgU2l0YSAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Aum  ",
        "option2" : " Animesh  ",
        "option3" : " Ram  ",
        "option4" : " Sita   "
      }
    },
    {
      "index" : 16,
      "question" : "The given question diagram shows three  different views of the same cube when it is  rotated in a particular way.    Four such views are also given in the options.  However, out of the four options given, one of  them does not confirm to the original cube.  Which among the following options can be  marked as your answer?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEZyb20gMm5kIGFuZCAzcmQgZGljZSwgd2UgZmluZCB0aGF0IHRoZXRoYSBpcyBjb21tb24gaW4gYm90aCBkaWNlIGFuZCBpcyBhdCB0aGUgc2FtZSBwbGFjZS4gU28sIHRoZXRoYSB3aWxsIGJlIG9wcG9zaXRlICAgdG8gzqYsICogaXMgb3Bwb3NpdGUgdG8gzrEgYW5kICBpcyBvcHBvc2l0ZSB0byAjLiAgIEJ5IG9ic2VydmluZyB0aGUgZmlndXJlcyBnaXZlbiBpbiB0aGUgb3B0aW9ucywgd2UgY2FuIGNvbmNsdWRlIHRoYXQgaW4gb3B0aW9uIChjKSwgdGhldGhhIGlzIG5vdCBvcHBvc2l0ZSB0byDOpiwgYnV0ICAgaXMgcmF0aGVyIHNob3duIGFkamFjZW50IHRvIM6mLiBUaGVyZWZvcmUsIHdlIGNhbiBzYXkgdGhhdCBvcHRpb24gKGMpIGRvZXMgbm90IGNvbmZpcm0gdG8gdGhlIG9yaWdpbmFsIGN1YmUgLSAgIGl0IGNhbiBiZSBtYXJrZWQgYXMgb3VyIGFuc3dlci4gICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiAgIEV4cGxhbmF0aW9uIGZvciBRdWVzdGlvbnMgMTcgJiAxODogICBNci4gQW51cmFnIHdhcyB0aGUgSE9EIG9mIEVjb25vbWljcywgc28gaGlzIGRyZXNzIGNvZGUgbXVzdCBoYXZlIGJlZW4gY29pbnMuIE1yLiBEYXJwYW4gd2FzIGRyZXNzZWQgICBhcyBhIHRlc3QgdHViZSwgd2hpY2ggbWVhbnMgaGUgd2FzIHRoZSBIT0Qgb2YgQ2hlbWlzdHJ5LiBNcnMuIENoYW5kYW5pIFJveSB3YXMgdGhlIEhPRCBvZiBQaHlzaWNzLCAgIHdoaWNoIG1lYW5zIGhlciBkcmVzcyBjb2RlIG11c3QgaGF2ZSBiZWVuIHdpcmUuICAgIEhPRCBTdWJqZWN0IERyZXNzIGNvZGUgICBNci4gQW51cmFnIEVjb25vbWljcyBDb2lucyAgIE1yLiBEYXJwYW4gQ2hlbWlzdHJ5IFRlc3QgdHViZSAgIE1ycy4gQ2hhbmRhbmkgUm95IFBoeXNpY3MgV2lyZSAgICAgTmVpdGhlciBNcnMuIFZpbWxhIG5vciBNcnMuIENoYWRhbmkgUm95IHdhcyBkcmVzc2VkIGFzIGFiYWN1cy4gTm9uZSBvZiB0aGUgbWVuIHdhcyBIT0Qgb2YgR2VvZ3JhcGh5LiAgIFNvLCBNci4gRXNtaWxlIGRyZXNzIGNvZGUgbXVzdCBoYXZlIGJlZW4gYWJhY3VzLCBhbmQgaGUgbXVzdCBiZSB0aGUgSE9EIG9mIE1hdGhzLiBNcnMuIFZpbWxhIG11c3QgICBoYXZlIGJlZW4gdGhlIEhPRCBvZiBHZW9ncmFwaHksIGFuZCBoZXIgZHJlc3MgY29kZSBtdXN0IGhhdmUgYmVlbiBhIGdsb2JlLiAgICBIZW5jZSB0aGUgZmluYWwgYXJyYW5nZW1lbnQgd2lsbCBiZTogICBIT0QgU3ViamVjdCBEcmVzcyBjb2RlICAgTXIuIEFudXJhZyBFY29ub21pY3MgQ29pbnMgICBNci4gRGFycGFuIENoZW1pc3RyeSBUZXN0IHR1YmUgICBNcnMuIENoYW5kYW5pIFJveSBQaHlzaWNzIFdpcmUgICBNcnMuIFZpbWxhIEdlb2dyYXBoeSBHbG9iZSAgIE1yLiBFc21pbGUgTWF0aHMgQWJhY3VzICAgICAgICAgNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "   ",
        "option2" : "   ",
        "option3" : "   ",
        "option4" : "    Directions for the following 2 (two) items:   Read the following information and answer the two   questions that follow.   At a university farewell party all the HODs - Mr.   Anurag, Mrs. Vimla, Mrs. Chadani Roy, Mr. Darpan   and Mr. Esmile were asked to dress as an object viz.   test tube, wire, globe, coins and abacus, that represented   their departments viz. Chemistry, Physics, Geography,   Economics and Mathematics, not necessarily in the   same order. The dress matches the subject.   Mr. Anurag was HOD of Economics. Neither Mrs.   Vimla nor Mrs. Chadani Roy was dressed as abacus.   None of the men was HOD of Geography. Mr. Darpan   was dressed as a test tube. Mrs. Chandani Roy was   HOD of Physics.  "
      }
    },
    {
      "index" : 17,
      "question" : "Which person was dressed as a globe?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IE1ycy4gVmltbGEgd2FzIGRyZXNzZWQgYXMgYSBnbG9iZS4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mrs. Chadani  ",
        "option2" : " Mrs. Vimla  ",
        "option3" : " Mr. Darpan  ",
        "option4" : " Mr. Esmile   "
      }
    },
    {
      "index" : 18,
      "question" : "What was the department of Mr. Esmile?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IE1yLiBFc21pbGUncyBkZXBhcnRtZW50IHdhcyBtYXRocy4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mathematics  ",
        "option2" : " Chemistry  ",
        "option3" : " Physics  ",
        "option4" : " Geography   "
      }
    },
    {
      "index" : 19,
      "question" : "Find the missing term in the given series.  315, 535, 726, 890, ?, 1145  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEdpdmVuIHNlcmllczogICAzMTUsIDUzNSwgNzI2LCA4OTAsID8sIDExNDUgICBUaGUgYWJvdmUgc2VyaWVzIGZvbGxvd3MgdGhlIGZvbGxvd2luZyBwYXR0ZXJuOiAgIDMxNS0+IEZpcnN0IHRlcm0gICAzMTUgKyBbKDE1KTIgLSA1XSAtPiA1MzUgICA1MzUgKyBbKDE0KTIgLSA1XSAtPjcyNiAgIDcyNiArIFsoMTMpMiAtIDVdIC0+IDg5MCAgID8gPSA4OTAgKyBbKDEyKTIgLSA1XSAtPjEwMjkgKFJlcXVpcmVkIHRlcm0pICAgMTAyOSArIFsoMTEpMiAtIDVdIC0+MTE0NSAgIFNvLCBtaXNzaW5nIHRlcm0gaXMgMTAyOS4gICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1225  ",
        "option2" : " 1015  ",
        "option3" : " 12242  ",
        "option4" : " 1029         6                                                                                                                                                              "
      }
    },
    {
      "index" : 20,
      "question" : "Find the wrong term in the given series.  MRIC, OLNR, QNOW, SLRT  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEdpdmVuIFNlcmllczogICBNUklDLCBPTE5SLCBRTk9XLCBTTFJUICAgUGF0dGVybiBmb2xsb3dlZCBoZXJlIGlzOiAgICBTbywgT0xOUiBpcyB0aGUgd3JvbmcgdGVybS4gICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " MRIC  ",
        "option2" : " OLNR  ",
        "option3" : " QNOW  ",
        "option4" : " SLRT    Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 21,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. State funding of elections could solve the  issue of electoral corruption.  2. Regular elections do not guarantee the  existence of true democracy.  3. It is not possible to deal with political  corruption even with democracy in place.  Which of the above assumptions is/are invalid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBhc3N1bXB0aW9uIGluIHRoZSBzdGF0ZW1lbnQgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCAgIGNvdmVyIHRoZSBjb250ZXh0IG9mIHN0YXRlIGZ1bmRpbmcgb2YgZWxlY3Rpb25zIGFuZCBpdHMgcG90ZW50aWFsIHRvIHNvbHZlIHRoZSBpc3N1ZSBvZiBlbGVjdG9yYWwgY29ycnVwdGlvbi4gICBUaGVyZWZvcmUsIHRoaXMgYXNzdW1wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlLiAgIEFzc3VtcHRpb24gMiBpcyBjb3JyZWN0LiBUaGUgZ2l2ZW4gYXNzdW1wdGlvbiBpcyBjb3JyZWN0IGR1ZSB0byB0aGUgZm9sbG93aW5nIGxpbmVzIGZyb20gdGhlIHBhc3NhZ2UgICAnV2l0aG91dCBlZmZlY3RpdmUgcHJvdGVjdGlvbiwgZWxlY3Rpb25zIGNhbiBiZSBhIGNlbnRyYWwgY29tcG9uZW50IGluIGN5Y2xlcyBvZiBzeXN0ZW1pYyBjb3JydXB0aW9uLiBUaGlzICAgaXMgaW5jcmVhc2luZ2x5IHRydWUgYXMgZXZlbiBhdXRvY3JhdGljIGxlYWRlcnMgdXNlIGVsZWN0aW9ucyBmb3Igc29tZSBmb3JtIG9mIGxlZ2l0aW1hY3kgZm9yIHRoZWlyIHJ1bGUuJyAgIE1lcmVseSBob2xkaW5nIGVsZWN0aW9ucyBkb2VzIG5vdCBndWFyYW50ZWUgdGhhdCBkZW1vY3JhY3kgZXhpc3RzIGluIHRoZSB0cnVlIHNlbnNlIGJlY2F1c2UgdGhlc2UgZWxlY3Rpb25zICAgY2FuIGJlIG1hbmlwdWxhdGVkIGJ5IGF1dG9jcmF0aWMgbGVhZGVycyB1c2luZyBtb25leSBvciBieSBjb2VyY2luZyB2b3RlcnMuICAgQXNzdW1wdGlvbiAzIGlzIGluY29ycmVjdC4gVGhlIHN0YXRlbWVudCBpcyBub3QgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgbGluZXMgJ1RvIHRhY2tsZSB0aGUgcm9vdHMgICBvZiBwb2xpdGljYWwgY29ycnVwdGlvbiBhbmQgcHVzaCBiYWNrIG9uIGF1dG9jcmFjeSwgZGVtb2NyYXRpYyBhY3RvcnMgbXVzdCBjb25mcm9udCBvcGFxdWUgYW5kIGlsbGljaXQgICBwb2xpdGljYWwgZnVuZGluZyBhbmQgc3BlbmRpbmcgLSBmcm9tIGluZmx1ZW5jZSBwZWRkbGluZyB0byBzdGF0ZSBjYXB0dXJlJy4gVGhlc2UgbGluZXMgcHJlc2VudCBhIHdlbGwtbGFpZCAgIG1lY2hhbmlzbSB0byBkZWFsIHdpdGggdGhlIGlzc3VlIG9mIHBvbGl0aWNhbCBjb3JydXB0aW9uLiBUaGVyZWZvcmUsIHRoZSBnaXZlbiBhc3N1bXB0aW9uLCB3aGljaCBzYXlzIGl0IGlzICAgbm90IHBvc3NpYmxlIHRvIGRlYWwgd2l0aCBwb2xpdGljYWwgY29ycnVwdGlvbiBldmVuIHdpdGggZGVtb2NyYWN5IGluIHBsYWNlLCBpcyBub3QgY29ycmVjdC4gICAgICAgIDcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 22,
      "question" : "What does the author mean by 'original sin' in  the above passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdTb21lIGhhdmUgY2FsbGVkIGlsbGljaXQgY2FtcGFpZ24gICBmaW5hbmNlIHRoZSAnb3JpZ2luYWwgc2luJyBvZiBjb3JydXB0aW9uIGJlY2F1c2Ugb2YgdGhlIHdheSBpdCBidWlsZHMgYW5kIGJvbmRzIGNvcnJ1cHQgbGlua3MgYmV0d2VlbiB0aGUgICBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9ycycsIGlzIG5vdCByZWxhdGVkIHRvIHRoZSBpc3N1ZSBvZiBhbiBhdXRvY3JhdGljIGxlYWRlciB1c2luZyBlbGVjdGlvbnMgZm9yIGxlZ2l0aW1hY3kuICAgSGVuY2UsIHRoaXMgaXMgbm90IHRoZSBpbnRlbmRlZCBtZWFuaW5nLiBJdCB0YWxrcyBhYm91dCB0aGUgbGlua2FnZSBiZXR3ZWVuIHRoZSBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9yIHRoYXQgICBldmVudHVhbGx5IGxlYWRzIHRvIGNvcnJ1cHRpb24uICAgIE9wdGlvbiAoYikgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIGl0IGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UgYW5kIGlzICAgbm93aGVyZSBjb3ZlcmVkIGluIHRoZSBwYXNzYWdlLiBUaGUgbWVjaGFuaXNtIG9mIG1vbml0b3JpbmcgcG9saXRpY2FsIGZ1bmRpbmcgaXMgbm90IGRpc2N1c3NlZCBhbnl3aGVyZSAgIGluIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIGNvdWxkIGJlIGNvbmZ1c2luZy4gSG93ZXZlciwgdGhlIGxpbmUgJ1NvbWUgaGF2ZSBjYWxsZWQgaWxsaWNpdCAgIGNhbXBhaWduIGZpbmFuY2UgdGhlICdvcmlnaW5hbCBzaW4nIG9mIGNvcnJ1cHRpb24gYmVjYXVzZSBvZiB0aGUgd2F5IGl0IGJ1aWxkcyBhbmQgYm9uZHMgY29ycnVwdCBsaW5rcyAgIGJldHdlZW4gdGhlIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzJywgZG9lcyBub3QgaW1wbHkgdGhhdCBpbGxlZ2FsIGZ1bmRpbmcgZXhpc3RlZCBzaW5jZSB0aGUgc3RhcnQgb2YgdGhlICAgY29uY2VwdCBvZiBlbGVjdGlvbnMuIEl0IG1lcmVseSBzdGF0ZXMgdGhhdCBpbGxlZ2FsIGZ1bmRpbmcgaW4gZWxlY3Rpb25zIHJlc3VsdHMgaW4gYnVpbGRpbmcgYSBuZXh1cyBiZXR3ZWVuIHRoZSAgIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzLiAgIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gZXhwbGFpbnMgdGhlIGNvcnJlY3QgbWVhbmluZyBvZiB0aGUgdGVybSAnb3JpZ2luYWwgc2luJy4gVGhlIGxpbmVzICdTb21lICAgaGF2ZSBjYWxsZWQgaWxsaWNpdCBjYW1wYWlnbiBmaW5hbmNlIHRoZSAnb3JpZ2luYWwgc2luJyBvZiBjb3JydXB0aW9uIGJlY2F1c2Ugb2YgdGhlIHdheSBpdCBidWlsZHMgYW5kIGJvbmRzICAgY29ycnVwdCBsaW5rcyBiZXR3ZWVuIHRoZSBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9ycycsIGNvbmZvcm0gdG8gdGhlIG1lYW5pbmcgY29udmV5ZWQgaW4gdGhlIGdpdmVuIG9wdGlvbiAgIHRoYXQgaWxsZWdhbCBmdW5kaW5nIG9mIGVsZWN0aW9ucyBieSB0aGUgcHJpdmF0ZSBzZWN0b3IgaXMgdGhlIHJvb3QgY2F1c2Ugb2YgcG9saXRpY2FsIGNvcnJ1cHRpb24uICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Normally, autocratic leaders use elections   to gain legitimacy to their rule.   ",
        "option2" : " Political funding by the private sector   should be monitored by a neutral agency.  ",
        "option3" : " The issue of illegal campaign funding   originally started with the concept of   elections.  ",
        "option4" : " Illegal funding of political parties by the   private sector in elections is the root cause   of political corruption.  "
      }
    },
    {
      "index" : 23,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. Good governance and human rights are  mutually reinforcing.  2. It is not easy to realize human rights  without proper frameworks, institutions,  and processes.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGlzIGFzc3VtcHRpb24gaXMgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgbGluZXMgaW4gdGhlIHBhc3NhZ2UgJ0h1bWFuICAgcmlnaHRzIHByaW5jaXBsZXMgaW5mb3JtIHRoZSBjb250ZW50IG9mIGdvb2QgZ292ZXJuYW5jZSBlZmZvcnRzOiB0aGV5IG1heSBpbmZvcm0gdGhlIGRldmVsb3BtZW50IG9mICAgbGVnaXNsYXRpdmUgZnJhbWV3b3JrcywgcG9saWNpZXMsIHByb2dyYW1tZXMsIGJ1ZGdldGFyeSBhbGxvY2F0aW9ucywgYW5kIG90aGVyIG1lYXN1cmVzLiBPbiB0aGUgb3RoZXIgICBoYW5kLCB3aXRob3V0IGdvb2QgZ292ZXJuYW5jZSwgaHVtYW4gcmlnaHRzIGNhbm5vdCBiZSByZXNwZWN0ZWQgYW5kIHByb3RlY3RlZCBzdXN0YWluYWJseScuIFRoZXNlICAgbGluZXMgc2hvdyB0aGF0IGh1bWFuIHJpZ2h0cyBhbmQgZ29vZCBnb3Zlcm5hbmNlIGdvIGhhbmQgaW4gaGFuZC4gICBBc3N1bXB0aW9uIDIgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdUaGUgaW1wbGVtZW50YXRpb24gb2YgaHVtYW4gcmlnaHRzIHJlbGllcyBvbiBhIGNvbmR1Y2l2ZSBhbmQgICBlbmFibGluZyBlbnZpcm9ubWVudC4gVGhpcyBpbmNsdWRlcyBhcHByb3ByaWF0ZSBsZWdhbCBmcmFtZXdvcmtzIGFuZCBpbnN0aXR1dGlvbnMgYXMgd2VsbCBhcyBwb2xpdGljYWwsICAgbWFuYWdlcmlhbCwgYW5kIGFkbWluaXN0cmF0aXZlIHByb2Nlc3NlcyByZXNwb25zaWJsZSBmb3IgcmVzcG9uZGluZyB0byB0aGUgcmlnaHRzIGFuZCBuZWVkcyBvZiB0aGUgICBwb3B1bGF0aW9uJywgc3VnZ2VzdCB0aGF0IGl0IGlzIGltcG9ydGFudCB0byBoYXZlIGEgcHJvcGVyIGZyYW1ld29yaywgaW5zdGl0dXRpb25zLCBhbmQgcHJvY2Vzc2VzIChjb25kdWNpdmUgICBhbmQgZW5hYmxpbmcgZW52aXJvbm1lbnQpIGZvciBpbXBsZW1lbnRhdGlvbiBvZiBodW1hbiByaWdodHMgYW5kIG1lZXRpbmcgdGhlIG5lZWRzIG9mIHRoZSBwb3B1bGF0aW9uLiAgIFRoZXJlZm9yZSwgdGhpcyBhc3N1bXB0aW9uIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2         7                                                                                                                                                              "
      }
    },
    {
      "index" : 24,
      "question" : "Find the missing term in the given series.  247, 416, 705, 1066, 1595, ?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEdpdmVuIFNlcmllczogICAyNDcsIDQxNiwgNzA1LCAxMDY2LCAxNTk1LCA/ICAgUGF0dGVybiBiZWluZyBmb2xsb3dlZCBpbiB0aGUgZ2l2ZW4gc2VyaWVzIGlzOiA0MTYgLSAyNDcgPSAxNjkgPSAxMzIgICA3MDUgLSA0MTYgPSAyODkgPSAxNzIgICAxMDY2IC0gNzA1ID0gMzYxID0gMTkyICAgMTU5NSAtIDEwNjYgPSA1MjkgPSAyMzIgICBOZXh0IHRlcm0gPSAxNTk1ICsgMjkyID0gMTU5NSArIDg0MSA9IDI0MzYgICBUaHVzLCByZXF1aXJlZCBtaXNzaW5nIG51bWJlciBpcyAyNDM2LiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1995  ",
        "option2" : " 2096  ",
        "option3" : " 2436  ",
        "option4" : " 1795   "
      }
    },
    {
      "index" : 25,
      "question" : "If 'BEAUTIFUL' is coded as '97' in a code  language, then what will be the code for  'WONDERFUL'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEdpdmVuIGNvZGU6ICAgQkVBVVRJRlVMIC0+IDk3ICAgVGhlIGFscGhhYmV0aWNhbCBwb3NpdGlvbiBvZiBsZXR0ZXIgYXMgZm9sbG93cyAgICBTdW0gb2YgdGhlc2UgbnVtYmVycyA9IDIgKyA1ICsgMSArIDIxICsgMjAgKyA5ICsgNiArIDIxICsgMTIgPSA5NyAgIFNvLCB3b3JkICdCRUFVVElGVUwnIHdpbGwgYmUgY29kZWQgYXMgJzk3Jy4gICAgICAgIDggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcHBseWluZyB0aGUgc2ltaWxhciBjb25jZXB0IGluICdXT05ERVJGVUwnLiAgICBTbywgc3VtIG9mIHRoZXNlIG51bWJlcnMgPSAyMyArIDE1ICsgMTQgKyA0ICsgNSArIDE4ICsgNiArIDIxICsgMTIgPSAxMTggICBTbywgd29yZCAnV09OREVSRlVMJyB3aWxsIGJlIGNvZGVkIGFzICcxMTgnLiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 87  ",
        "option2" : " 99  ",
        "option3" : " 118  ",
        "option4" : " 121   "
      }
    },
    {
      "index" : 26,
      "question" : "Ravi painted a cube leaving one face unpainted.  If this cube is divided into 64 small cubes, how  many cubes will be there having at least one  face painted?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICAgbjMgPSA2NCAgIG9yIG4gPSA0ICAgTnVtYmVyIG9mIGlubmVyIGN1YmVzIHdpdGggbm8gZmFjZSBwYWludGVkID0gKG4gLSAyKTMgPSAoNCAtIDIpMyA9IDggICBCdXQsIGZvdXIgbWlkZGxlIGN1YmVzIG9uIHRoZSB1bnBhaW50ZWQgc2lkZSB3aWxsIGFsc28gaGF2ZSBubyBwYWludGVkIGZhY2UuICAgICBTbywgY3ViZXMgd2hpY2ggYXJlIG5vdCBwYWludGVkIGF0IGFsbCA9IDggKyA0ID0gMTIgICDiiLQgTnVtYmVyIG9mIGN1YmUgd2l0aCBhdCBsZWFzdCBvbmUgZmFjZSBwYWludGVkID0gVG90YWwgbnVtYmVyIG9mIGN1YmVzIC0gQ3ViZXMgd2l0aCBubyBmYWNlIHBhaW50ZWQgPSAgIDY0IC0gMTIgPSA1MiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 52  ",
        "option2" : " 48  ",
        "option3" : " 62  ",
        "option4" : " 36   "
      }
    },
    {
      "index" : 27,
      "question" : "The six faces of a cube are coloured with black  colour. This cube is now cut into 343 small but  identical cubes. If N is the number of cubes that  are not coloured on any of their faces, then  which of the following is true about the value  of N?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICAgbjMgPSAzNDMgICBvciBuID0gNyAgIFRoZSBudW1iZXIgb2Ygc21hbGxlciBjdWJlcyB3aXRoIG5vIGNvbG91cmVkIGZhY2UgPSAobiAtIDIpMyA9ICg3IC0gMikzID0gKDUpMyA9IDEyNSAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 116 < N less than equal to 130  ",
        "option2" : " 110 less than equal to N less than equal to 116  ",
        "option3" : " 106 less than equal to N less than equal to 112  ",
        "option4" : " 116 less than equal to N greater than equal to 126  "
      }
    },
    {
      "index" : 28,
      "question" : "Four different positions of a dice are given  below.   Find the alphabet on the face opposite to the  one having P.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IExldCB1cyB0YWtlIGRpY2UgKGEpIGFuZCAoYyksIHdoZXJlIFEgYW5kIFIgYXJlIGNvbW1vbi4gVGh1cywgdW5jb21tb24gZmFjZXMgb2YgdGhlIHR3byBkaWNlLCBpLmUuICBQIGFuZCAgIFMgbXVzdCBiZSBvcHBvc2l0ZSB0byBlYWNoIG90aGVyLiAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QgICBFeHBsYW5hdGlvbiBmb3IgUXVlc3Rpb25zIDI5IHRvIDMxOiAgIFAgd2VhcnMgUmVkIHNoaXJ0IGFuZCB3b3JrcyBhcyBhIFRlYWNoZXIuIFRoZSBvbmUgd2VhcmluZyBPcmFuZ2Ugc2hpcnQgd29ya3MgYXMgYSBUYWlsb3IgYW5kIHRoZSBvbmUgICB3ZWFyaW5nIFBpbmsgc2hpcnQgd29ya3MgYXMgYSBDYXJwZW50ZXIuIFQgd29ya3MgYXMgYSBXYXRjaG1lbiwgd2hpbGUgUiB3b3JrcyBhcyBhIENhcnBlbnRlci4gICBQcm9mZXNzaW9uIFBlcnNvbiBDb2xvdXIgb2Ygc2hpcnQgICBUZWFjaGVyIFAgUmVkICAgVGFpbG9yICBPcmFuZ2UgICBDYXJwZW50ZXIgUiBQaW5rICAgV2F0Y2htYW4gVCAgICBQb2xpY2UgICAgIFBsdW1iZXIgICAgIFNpbmNlLCBVIGRvZXMgbm90IHdvcmsgYXMgYSBQbHVtYmVyIG9yIGFzIFBvbGljZSwgaGUgd2lsbCB3b3JrIGFzIGEgVGFpbG9yLiAgICAgUyBkb2VzIG5vdCB3b3JrIGFzIFBvbGljZSwgc28gUyBtdXN0IGJlIHRoZSBQbHVtYmVyLiBTbywgUSB3aWxsIGJlIHRoZSBwb2xpY2VtYW4uICAgIFByb2Zlc3Npb24gUGVyc29uIENvbG91ciBvZiBzaGlydCAgIFRlYWNoZXIgUCBSZWQgICBUYWlsb3IgVSBPcmFuZ2UgICBDYXJwZW50ZXIgUiBQaW5rICAgV2F0Y2htYW4gVCAgICBQb2xpY2UgUSAgICBQbHVtYmVyIFMgICAgVGhlIG9uZSB3aG8gd29ya3MgYXMgUG9saWNlIGRvZXMgbm90IHdlYXIgQnJvd24gb3IgQmxhY2sgc2hpcnQuIFNvLCBQb2xpY2Ugd2lsbCB3ZWFyIEdyZXkgc2hpcnQuICAgUGx1bWJlciBkb2VzIG5vdCB3ZWFyIEJyb3duIHNoaXJ0LiBTbywgd2UgY2FuIGNvbmNsdWRlIHRoYXQgV2F0Y2htYW4gd2lsbCB3ZWFyIEJyb3duIHNoaXJ0IGFuZCBQbHVtYmVyICAgd2lsbCB3ZWFyIEJsYWNrIHNoaXJ0LiAgICAgICAgIDkgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZW5jZSwgdGhlIGZpbmFsIGFycmFuZ2VtZW50IGlzOiAgIFByb2Zlc3Npb24gUGVyc29uIENvbG91ciBvZiBzaGlydCAgIFRlYWNoZXIgUCBSZWQgICBUYWlsb3IgVSBPcmFuZ2UgICBDYXJwZW50ZXIgUiBQaW5rICAgV2F0Y2htYW4gVCBCcm93biAgIFBvbGljZSBRIEdyZXkgICBQbHVtYmVyIFMgQmxhY2sgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " R  ",
        "option2" : " T  ",
        "option3" : " O  ",
        "option4" : " S    Directions for the following 3 (three) items:   Read the following information and answer the three   questions that follow.   In a family of 6 persons, P, Q, R, S, T and U work as   Carpenter, Teacher, Plumber, Tailor, Police and   Watchman, though not necessarily in the same order.   Moreover, they wear shirts of different colours viz.   Orange, Pink, Red, Black, Brown and Grey, though not   necessarily in the same order.   (i) The one wearing Orange shirt works as a Tailor and   the one wearing Pink shirt works as a Carpenter.   (ii) U neither works as a Plumber nor as a Police.   (iii) P wears Red shirt and works as a Teacher.   (iv) S does not work as Police and the one who wears   brown shirt is not working as a Plumber.   (v) T works as a Watchmen. Neither S nor Q works as   a Tailor.    (vi) The one who works as Police does not wear Brown   or Black shirt. R works as a Carpenter.  "
      }
    },
    {
      "index" : 29,
      "question" : "Which pair is correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IFBsdW1iZXIgLSBCbGFjayAtIFMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Watchmen - Grey - T  ",
        "option2" : " Tailor - Orange - Q  ",
        "option3" : " Carpenter - Pink - U  ",
        "option4" : " Plumber - Black - S         8                                                                                                                                                              "
      }
    },
    {
      "index" : 30,
      "question" : "Who is wearing the Brown coloured shirt?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IFdhdGNobWFuIHdlYXJzIEJyb3duIGNvbG91cmVkIHNoaXJ0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Plumber  ",
        "option2" : " Watchman  ",
        "option3" : " Police  ",
        "option4" : " Tailor   "
      }
    },
    {
      "index" : 31,
      "question" : "Who is wearing the Grey coloured shirt?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IFBvbGljZSB3ZWFycyBHcmV5IGNvbG91cmVkIHNoaXJ0LiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Carpenter  ",
        "option2" : " Plumber  ",
        "option3" : " Police  ",
        "option4" : " Watchman    Directions for the following 2 (two) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 32,
      "question" : "According to the passage given above, the  economic objectives of both the categories may  be  1. To uplift the poor out of the poverty line  2. To allure investors to investment  3. A possibility of crony capitalism  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSW4gSW5kaWEsIHBvbGljeW1ha2VycyBoYXZlIGRyYXduIG9uIGJ1ZGdldGFyeSByZXNvdXJjZXMgICBmb3IgcHJvdmlkaW5nIHN1cHBvcnQgdG8gbG93LWluY29tZSBob3VzZWhvbGRzIGZvciBhdWdtZW50aW5nIHRoZWlyIGNvbnN1bXB0aW9uIG9mIHNlbGVjdGVkIGdvb2RzIGFuZCAgIHNlcnZpY2VzJyBhbmQgJ1RoZSBmaXJzdCBjYXRlZ29yeSB3b3VsZCBpbmNsdWRlIHRoZSBmcmVlIG9yIHN1YnNpZGl6ZWQgcHJvdmlzaW9uIG9mIGZvb2QgZ3JhaW5zIGFuZCBzZXJ2aWNlcyAgIHN1Y2ggYXMgaGVhbHRoIGFuZCBlZHVjYXRpb24uJyBJdCBpbXBsaWVzIHRoZSBvYmplY3RpdmUgb2YgZmlyc3QgY2F0ZWdvcnkgc3VwcG9ydCBpcyB0byBpbXByb3ZlIGNvbmRpdGlvbnMgb2YgICB0aGUgcG9vciwgdXBsaWZ0IHRoZSBwb29yIG91dCBvZiBwb3ZlcnR5IGFuZCBpbXByb3ZlIG92ZXJhbGwgc29jaW8tZWNvbm9taWMgZGV2ZWxvcG1lbnQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnT2ZmZXJpbmcgaW5jZW50aXZlcyB0byBzdXBwb3J0IHNlbGVjdGVkIGNhdGVnb3JpZXMgb2YgICBpbnZlc3RvcnMgYW5kIHByb2R1Y2VycycgYW5kICdFeGFtcGxlcyBvZiB0aGUgbGF0dGVyIGdyb3VwIGluY2x1ZGUgdGhlIGNlbnRyYWwgZ292ZXJubWVudCdzIHJlY2VudCAgIGluaXRpYXRpdmUgZm9yIHByb2R1Y3Rpb24tbGlua2VkIGluY2VudGl2ZXMgdG8gdmFyaW91cyBzZWN0b3JzIGFuZCB0YXggY29uY2Vzc2lvbnMuIEluIHRoZSBwYXN0LCBpbmNlbnRpdmVzIGluICAgdGhlIGZvcm0gb2YgcmVkdWN0aW9uIG9mIGNvcnBvcmF0ZSB0YXhlcyBoYXZlIGJlZW4gb2ZmZXJlZCB0byBwcm9tb3RlIGludmVzdG1lbnQgaW4gZ2VuZXJhbCwgb3IgaW4gY2VydGFpbiAgIHJlZ2lvbnMgc3VjaCBhcyBiYWNrd2FyZCBhcmVhcy4nIEl0IGltcGxpZXMgdGhhdCB0aGUgb2JqZWN0aXZlIG9mIHRoaXMgdHlwZSBvZiBzdXBwb3J0IGlzIHRvIHByb21vdGUgICBpbnZlc3RtZW50IGluIHRoZSBjb3VudHJ5IGJ5IGluY2VudGl2aXNpbmcgaW52ZXN0b3JzLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBub3doZXJlIG1lbnRpb25zIHRoZSBuZXh1cyBvZiBwb2xpdGljaWFucyBhbmQgaW5kdXN0cmlhbGlzdHMuIEl0IGNvdWxkICAgYmUgYSBsb2dpY2FsIHBvc3NpYmlsaXR5LCBidXQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSBhbmQgaGVuY2UgaXMgaW5jb3JyZWN0LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 3 only  ",
        "option2" : " 3 only  ",
        "option3" : " 1, 2 and 3   ",
        "option4" : " 1 and 2 only  "
      }
    },
    {
      "index" : 33,
      "question" : "According to the passage, what do employers  seek in their employees?  1. Zeal for competition  2. Ability to solve problems  3. Time management  4. Ingenious  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGV5IGhhdmUgc3BlbnQgeWVhcnMgbGVhcm5pbmcgdGhhdCB0aGUgc3lzdGVtICAgZW5jb3VyYWdlcyBjb21wZXRpdGlvbiBhbmQgcmV3YXJkcyBjb25mb3JtaXR5IGFuZCBjb21wbGlhbmNlLicgSXQgaW1wbGllcyB0aGF0IHRoZSB5b3VuZyBqb2Igc2Vla2VycyAgIGFzc3VtZSB0aGF0IHRoZSBzeXN0ZW0gb2Ygd29yayBlbmNvdXJhZ2VzIGNvbXBldGl0aW9uLCBidXQgdGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGF0IGVtcGxveWVycyAgIGFyZSBsb29raW5nIGZvciB6ZWFsIGZvciBjb21wZXRpdGlvbiBhbW9uZyBlbXBsb3llZXMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnRW1wbG95ZXJzIHNheSB0aGV5IG5lZWQgeW91bmcgYWR1bHRzIHdobyBjYW4gdGFrZSBvbiAgIG5ldyB0YXNrcyBhbmQgY2hhbGxlbmdlcywgYmUgaW5ub3ZhdGl2ZSBhbmQgY29sbGFib3JhdGl2ZSBhbmQgY29tZSB1cCB3aXRoIGlkZWFzIGZvciBuZXcgcHJvZHVjdHMgYW5kICAgcHJvY2Vzc2VzLicgVGhlIG5lZWQgZm9yIGlkZWFzIGZvciBuZXcgcHJvZHVjdHMgYW5kIHByb2Nlc3NlcyBhcmlzZXMgaW4gb3JkZXIgdG8gcmVjdGlmeSB0aGUgcHJvYmxlbXMgYW5kICAgbGltaXRhdGlvbnMgb2YgY3VycmVudCBwcm9kdWN0cyBhbmQgcHJvY2Vzc2VzLiBTbywgdWx0aW1hdGVseSBlbXBsb3llcnMgbG9vayBmb3IgcHJvYmxlbS1zb2x2aW5nIGFiaWxpdHkgaW4gICB0aGVpciBwb3RlbnRpYWwgZW1wbG95ZWVzLCB3aGljaCBpcyBpbmhlcmVudCBpbiBuZXcgdGFza3MgYW5kIGNoYWxsZW5nZXMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGF0IGVtcGxveWVycyBzZWVrIHRyYWl0cyBvZiB0aW1lIG1hbmFnZW1lbnQgICBmcm9tIHRoZWlyIGVtcGxveWVlcywgYW5kIGhlbmNlIGlzIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIHBhc3NhZ2UuICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnRW1wbG95ZXJzIHNheSB0aGV5IG5lZWQgeW91bmcgYWR1bHRzIHdobyBjYW4gdGFrZSBvbiAgIG5ldyB0YXNrcyBhbmQgY2hhbGxlbmdlcywgYmUgaW5ub3ZhdGl2ZSBhbmQgY29sbGFib3JhdGl2ZSBhbmQgY29tZSB1cCB3aXRoIGlkZWFzIGZvciBuZXcgcHJvZHVjdHMgYW5kICAgcHJvY2Vzc2VzLicgVGhlIG1lYW5pbmcgb2YgaW5nZW5pb3VzIGlzIGEgcGVyc29uIGZ1bGwgb2YgbmV3IGlkZWFzIGFuZCBjbGV2ZXIgYXQgZmluZGluZyBzb2x1dGlvbnMgdG8gICBwcm9ibGVtcyBvciBhdCBpbnZlbnRpbmcgdGhpbmdzLiAgICAgICAgIDEwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2, 3, and 4   ",
        "option2" : " 2 and 4 only  ",
        "option3" : " 1, 3 and 4 only  ",
        "option4" : " 1, 2 and 3 only         9                                                                                                                                                              "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following pattern of numbers:  What number should replace the question mark  in the third figure?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "ICA5MiB3aWxsIGNvbWUgYXQgdGhlIHBsYWNlIG9mICc/Jy4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 92  ",
        "option2" : " 81  ",
        "option3" : " 79  ",
        "option4" : " 45   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following series.  L F 3 # R N 8 A @ Y 4 M © W P 6 H U 9 I K  2 E  If all the numbers are dropped in the above  arrangement, which of the following will be the  fourteenth letter/symbol from the left end?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEdpdmVuIHNlcmllczogTCBGIDMgIyBSIE4gOCBBIEAgWSA0IE0gwqkgVyBQIDYgSCBVIDkgSSBLIDIgRSAgIElmIGFsbCBudW1iZXIgYXJlIGRyb3BwZWQsIHRoZSBhcnJhbmdlbWVudCB3aWxsIGxvb2sgbGlrZTogICBMIEYgIyAgUiBOIEEgIEAgWSBNIMKpIFcgUCBIIFUgSSBLIEUgICBGb3VydGVlbnRoIGxldHRlci9zeW1ib2wgZnJvbSB0aGUgbGVmdCBlbmQgaXMgJ1UnLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " I  ",
        "option2" : " P   ",
        "option3" : " W  ",
        "option4" : " U   "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the sequence given below.  5C, 14F, 29I, 50L, ?, 110R, 149U  What is the missing element in the above  pattern?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEdpdmVuIHNlcmllcyBpczogNUMsIDE0RiwgMjlJLCA1MEwsID8sIDExMFIsIDE0OVUgICBGcm9tIHRoZSBhYm92ZSBzZXJpZXMsIGl0IGlzIGNsZWFyIHRoYXQgZWFjaCBlbGVtZW50IGlzIGEgY29tYmluYXRpb24gb2YgYW4gYWxwaGFiZXQgYW5kIGEgbnVtYmVyLiAgICBQYXR0ZXJuIG9mIGxldHRlcnM6ICAgRXZlcnkgbmV4dCBsZXR0ZXIgaW4gdGhlIHNlcmllcyBpcyB0aHJlZSBwbGFjZXMgYWhlYWQgb2YgdGhlIHByZXZpb3VzIGxldHRlciBpbiB0aGUgRW5nbGlzaCBhbHBoYWJldGljIHNlcmllcy4gICAgIEMgKyAzID0gRjsgRiArIDMgPSBJOyBJICsgMyA9IEw7IEwgKyAzID0gTzsgTyArIDMgPSBSOyBSICsgMyA9IFUgICBUaGVyZWZvcmUsIHJlcXVpcmVkIGxldHRlciB3aWxsIGJlIE8uICAgUGF0dGVybiBvZiBudW1iZXJzOiAgICBUaGUgcmVxdWlyZWQgbnVtYmVyIGlzIDc3LiAgIEhlbmNlLCB0aGUgbWlzc2luZyBlbGVtZW50IGlzIDc3Ty4gICBIZW5jZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 77O  ",
        "option2" : " 62S  ",
        "option3" : " 70M  ",
        "option4" : " 80P   "
      }
    },
    {
      "index" : 37,
      "question" : "Study the following arrangement  F N $ 3 2 * W E % ! B M P ( A V  ~ 9 F + S U  # L T ^   How many such numbers are there in the above  sequence, each of which is immediately  preceded by a consonant and immediately  followed by a symbol?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "ICBFeHBsYW5hdGlvbiBmb3IgUXVlc3Rpb25zIDM4IHRvIDQxOiAgIFYgc3R1ZGllcyBQdWJsaWMgQWRtaW5pc3RyYXRpb24uIFMgbGl2ZXMgaW4gTXVtYmFpLiBSIGxpdmVzIGluIFBhdG5hIGFuZCBzdHVkaWVzIFBvbGl0aWNhbCBTY2llbmNlLiBXIGxpdmVzICAgaW4gQ2hhbmRpZ2FyaC4gVGhlIG9uZSB3aG8gc3R1ZGllcyBNYXRoZW1hdGljcyBsaXZlcyBpbiBQdW5lLiBRIHN0dWRpZXMgU29jaW9sb2d5LiAgICBOZWl0aGVyIFQgbm9yIFYgc3R1ZGllcyBBZ3JpY3VsdHVyZSwgYW5kIHRoZSBzdHVkZW50IHdobyBzdHVkaWVzIEFncmljdWx0dXJlIGxpdmVzIGluIEx1Y2tub3cuIFNvLCBpdCBpcyAgIGNsZWFyIHRoYXQgUCBsaXZlcyBpbiBMdWNrbm93IGFuZCBzdHVkaWVzIEFncmljdWx0dXJlLiAgICAgICAgMTEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHVkZW50IFN1YmplY3QgQ2l0eSAgIFYgUHVibGljIEFkbWluaXN0cmF0aW9uICAgIFMgIE11bWJhaSAgIFIgUG9saXRpY2FsIFNjaWVuY2UgUGF0bmEgICBXICBDaGFuZGlnYXJoICAgICBNYXRoZW1hdGljcyBQdW5lICAgUSBTb2Npb2xvZ3kgICAgUCBBZ3JpY3VsdHVyZSBMdWNrbm93ICAgVCAgICAgUSBsaXZlcyBuZWl0aGVyIGluIERlbGhpIG5vciBpbiBDaGVubmFpLiBTbywgd2UgY2FuIHNheSB0aGF0IGhlIGxpdmVzIGluIEthbnB1ci4gViBhbmQgVCBtdXN0IGJlIGVpdGhlciBmcm9tICAgRGVsaGkgb3IgZnJvbSBDaGVubmFpLiAgICBTdHVkZW50IFN1YmplY3QgQ2l0eSAgIFYgUHVibGljIEFkbWluaXN0cmF0aW9uIERlbGhpL0NoZW5uYWkgICBTICBNdW1iYWkgICBSIFBvbGl0aWNhbCBTY2llbmNlIFBhdG5hICAgVyAgQ2hhbmRpZ2FyaCAgICBVIE1hdGhlbWF0aWNzIFB1bmUgICBRIFNvY2lvbG9neSBLYW5wdXIgICBQIEFncmljdWx0dXJlIEx1Y2tub3cgICBUICBEZWxoaS9DaGVubmFpICAgUyBpcyBub3QgYSBzdHVkZW50IG9mIFBoeXNpY3MuIEFsc28sIHRoZSBvbmUgd2hvIHN0dWRpZXMgUGh5c2ljcyBuZWl0aGVyIGxpdmVzIGluIERlbGhpIG5vciBpbiBDaGVubmFpLiAgIFNvLCBpdCBpcyBjbGVhciB0aGF0IFcgaXMgYSBzdHVkZW50IG9mIFBoeXNpY3MuIFRoZSByZW1haW5pbmcgc3ViamVjdHMgTWVkaWNpbmUgYW5kIEhpc3Rvcnkgd2lsbCBiZSBzdHVkaWVkICAgYnkgZWl0aGVyIFMgb3IgVC4gICAgSGVuY2UsIHRoZSBmaW5hbCBhcnJhbmdlbWVudCB3aWxsIGJlOiAgIFN0dWRlbnQgU3ViamVjdCBDaXR5ICAgViBQdWJsaWMgQWRtaW5pc3RyYXRpb24gRGVsaGkvQ2hlbm5haSAgIFMgTWVkaWNpbmUvSGlzdG9yeSBNdW1iYWkgICBSIFBvbGl0aWNhbCBTY2llbmNlIFBhdG5hICAgVyBQaHlzaWNzIENoYW5kaWdhcmggICAgVSBNYXRoZW1hdGljcyBQdW5lICAgUSBTb2Npb2xvZ3kgS2FucHVyICAgUCBBZ3JpY3VsdHVyZSBMdWNrbm93ICAgVCBNZWRpY2luZS9IaXN0b3J5IERlbGhpL0NoZW5uYWkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " None  ",
        "option2" : " One  ",
        "option3" : " Two  ",
        "option4" : " Three   Directions for the following 4 (four) items:   Read the following information and answer the four   questions that follow.   Eight students P, Q, R, S, T, U, V and W completed   their Post-Graduation in different subjects -   Mathematics, Medicine, Agriculture, Physics, Political   Science, History, Sociology and Public Administration,   not necessarily in the same order. They live in eight   different cities - Delhi, Mumbai, Chandigarh, Patna,   Lucknow, Kanpur, Chennai and Pune, not necessarily   in the same order.    V studies Public Administration. S who lives in   Mumbai is not a student of Physics. R lives in Patna   and studies Political Science. W lives in Chandigarh,   and the one who studies Mathematics lives in Pune. T   does not live in Pune. Q lives neither in Delhi nor in   Chennai and studies Sociology. Neither T nor V studies   Agriculture, and the student who studies Agriculture   lives in Lucknow. The one who studies Physics neither   lives in Delhi nor in Chennai.  "
      }
    },
    {
      "index" : 38,
      "question" : "Who lives in Delhi?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZyb20gdGhlIGdpdmVuIGluZm9ybWF0aW9uLCB3ZSBjYW4ndCBmaW5kIG91dCB3aG8gbGl2ZXMgaW4gRGVsaGkuIFRodXMsIGl0IGNhbid0IGJlIGRldGVybWluZWQuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " P  ",
        "option2" : " T  ",
        "option3" : " V  ",
        "option4" : " Can't be determined.   "
      }
    },
    {
      "index" : 39,
      "question" : "If additional information is given that the one  who studies Public Administration lives in  Delhi, then which of the following is definitely  false?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFRoZSBvbmUgd2hvIHN0dWRpZXMgUHVibGljIEFkbWluaXN0cmF0aW9uIGxpdmVzIGluIERlbGhpLiBUaHVzLCBpdCBpcyBWIHdobyBzdHVkaWVzIFB1YmxpYyBBZG1pbmlzdHJhdGlvbiAgIGFuZCBsaXZlcyBpbiBEZWxoaS4gQW5kIFQgd2hvIHN0dWRpZXMgTWVkaWNpbmUvSGlzdG9yeSBsaXZlcyBpbiBDaGVubmFpLiAgIEZyb20gdGhlIGdpdmVuIGluZm9ybWF0aW9uLCB3ZSBjYW4gY2VydGFpbmx5IHNheSB0aGF0IFQgZG9lcyBub3Qgc3R1ZHkgQWdyaWN1bHR1cmUuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgZGVmaW5pdGVseSBmYWxzZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " T lives in Chennai.  ",
        "option2" : " T studies Medicine or History.  ",
        "option3" : " V lives in Delhi.  ",
        "option4" : " T studies Agriculture.         10                                                                                                                                                              "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following combination is not  possible?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IFQgLT4gSGlzdG9yeSAtPiBDaGFuZGlnYXJoIGlzIG5vdCBwb3NzaWJsZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " S -> Medicine -> Mumbai  ",
        "option2" : " V -> Public Administration -> Delhi  ",
        "option3" : " T -> Medicine -> Delhi  ",
        "option4" : " T -> History -> Chandigarh    "
      }
    },
    {
      "index" : 41,
      "question" : "Where does Q live?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IFEgbGl2ZXMgaW4gS2FucHVyLiAgICAgICAgIDEyICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Patna  ",
        "option2" : " Kanpur  ",
        "option3" : " Chandigarh  ",
        "option4" : " Mumbai    Directions for the following 3 (three) items:   Read the following three passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following statements best  reflects the crux of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgJ1RoZSBjb250aW51ZWQgaXJyaWdhdGlvbiB0aHJvdWdoIHRyYWRpdGlvbmFsIHByYWN0aWNlcyBzaW5jZSAgIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlIGdyZWVuIHJldm9sdXRpb24gaW4gdGhlIDE5NjBzLCBob3dldmVyLCBoYXMgYmVndW4gdG8gc2hvdyBpdHMgbXVsdGl0dWRpbm91cyBpbGwgZWZmZWN0cyAgIG9uIGdyb3VuZHdhdGVyIHF1YWxpdHkgYW5kIGhlaWdodCwgd2F0ZXIgbG9nZ2luZywgc29pbCBzYWxpbml0eSwgc29pbCBoZWFsdGgsIGNyb3AgcHJvZHVjdGl2aXR5LCBwYXJ0aWFsIGZhY3RvciAgIHByb2R1Y3Rpdml0eSBhbmQgY29zdCBlY29ub21pY3Mgb2YgZmFybSBwcmFjdGljZXMuIFRoaXMgaXMgd2hlcmUgbWljcm8taXJyaWdhdGlvbiBhc3N1bWVzIHNpZ25pZmljYW5jZScuICAgVGhlc2UgbGluZXMgdGFsayBhYm91dCB0aGUgaXNzdWVzIG9mIHRyYWRpdGlvbmFsIGlycmlnYXRpb24gcHJhY3RpY2VzLCBhbmQgaG93IG1pY3JvLWlycmlnYXRpb24gaXMgcHJvbWlzaW5nIGluICAgaXRzIHByb3NwZWN0cy4gU28sIHRoaXMgaXMgdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGluIGdlbmVyYWwgd291bGQgYmUgY29ycmVjdCwgYnV0IHRoaXMgc3RhdGVtZW50IGlzIG5vdCBiYXNlZCBvbiB0aGUgICBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZS4gVGhlIGxpbmVzICdUaGUgaW1wYWN0IG9mIGNsaW1hdGUgY2hhbmdlIGlzIG11Y2ggbW9yZSBldmlkZW50IGluIEluZGlhbiAgIGFncmljdWx0dXJlLCB3aGVyZSBhcm91bmQgODUgcGVyIGNlbnQgZmFybWVycyBhcmUgc21hbGwgYW5kIG1hcmdpbmFsIGFuZCA2MCBwZXIgY2VudCBhZ3JpY3VsdHVyZSBpcyAgIGRlcGVuZGVudCB1cG9uIHRoZSB2YWdhcmllcyBvZiBtb25zb29uJywganVzdCBzaG93IHRoYXQgdGhlIGltcGFjdCBvZiBjbGltYXRlIGNoYW5nZSBvbiBJbmRpYW4gYWdyaWN1bHR1cmUgICBpcyBvYnZpb3VzLiBUaGVyZSBjYW5ub3QgYmUgYW55IGNvbmNsdXNpb24gd2hpY2ggY2FuIGJlIG1hZGUgb24gdGhlIHJlZHVjZWQgcHJvZHVjdGl2aXR5IG9mIHRoZSBhZ3JpY3VsdHVyZSAgIGFzIHRoZXJlIGlzIG5vIHN1Y2ggaW5mb3JtYXRpb24gaW4gdGhlIHBhc3NhZ2UuICBIZW5jZSwgaXQgaXMgbm90IHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2Ugbm8gZGlzY3Vzc2lvbiBvbiB0aGUgYXNwZWN0ICAgb2YgdGhlIHNlY29uZCBncmVlbiByZXZvbHV0aW9uIGhhcyBiZWVuIGRvbmUgaW4gdGhlIHBhc3NhZ2UuIE9ubHkgbGltaXRlZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZ3JlZW4gICByZXZvbHV0aW9uIGlzIGluIHRoZSBsaW5lcyAnVGhlIGNvbnRpbnVlZCBpcnJpZ2F0aW9uIHRocm91Z2ggdHJhZGl0aW9uYWwgcHJhY3RpY2VzIHNpbmNlIHRoZSBpbnRyb2R1Y3Rpb24gb2YgICB0aGUgZ3JlZW4gcmV2b2x1dGlvbiBpbiB0aGUgMTk2MHMsIGhvd2V2ZXIsIGhhcyBiZWd1biB0byBzaG93IGl0cyBtdWx0aXR1ZGlub3VzIGlsbCBlZmZlY3RzIG9uIGdyb3VuZHdhdGVyICAgcXVhbGl0eSBhbmQgaGVpZ2h0LCB3YXRlciBsb2dnaW5nLCBzb2lsIHNhbGluaXR5LCBzb2lsIGhlYWx0aCwgY3JvcCBwcm9kdWN0aXZpdHksIHBhcnRpYWwgZmFjdG9yIHByb2R1Y3Rpdml0eSAgIGFuZCBjb3N0IGVjb25vbWljcyBvZiBmYXJtIHByYWN0aWNlcycuIFRoZXNlIGxpbmVzIHRhbGsgYWJvdXQgdGhlIGludHJvZHVjdG9yeSBwaGFzZSBvZiBncmVlbiByZXZvbHV0aW9uICAgKG5vdCBzZWNvbmQgZ3JlZW4gcmV2b2x1dGlvbikuIFRoZXJlZm9yZSwgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIG9wdGlvbiBpcyBhYm91dCB0aGUgYXNwZWN0IG9mIGludmVzdG1lbnQgYnkgdGhlIGdvdmVybm1lbnQgaW4gbWljcm8tICBpcnJpZ2F0aW9uLCBidXQgdGhpcyBhc3BlY3QgaXMgbm90IGRpc2N1c3NlZCBpbiB0aGUgcGFzc2FnZS4gU28sIHdlIGNhbm5vdCBpbmZlciB0aGF0IG1pY3JvLWlycmlnYXRpb24gbmVlZHMgICBmdW5kaW5nLiBJdCBzdXJlbHkgYXNzdW1lcyBzaWduaWZpY2FuY2UgYmFzZWQgb24gdGhlIGlzc3VlcyB3aXRoIHRyYWRpdGlvbmFsIHByYWN0aWNlcywgYnV0IHRvIGluZmVyIGFib3V0ICAgZnVuZGluZyB3b3VsZCBub3QgYmUgY29ycmVjdC4gSXQncyBtb3JlIG9mIGFuIGltcGxpY2F0aW9uLCB0aGFuIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Micro-irrigation has the potential to address   the ill effects of the green revolution and   reduce the dependence on monsoon.  ",
        "option2" : " Climate change has reduced the overall   productivity of Indian agriculture.  ",
        "option3" : " Second green revolution presents a viable   solution to deal with the impacts of climate   change on agriculture.  ",
        "option4" : " The government should invest more in   micro-irrigation for its large-scale adoption.  "
      }
    },
    {
      "index" : 43,
      "question" : "Which one of the following statements best  reflects the central idea of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiB0YWxrcyBhYm91dCB0aGUgY3JlZGliaWxpdHkgaXNzdWVzIHdoaWNoIGFyZSBoaWdobGlnaHRlZCBpbiB0aGUgbGluZXMgICAnSG93ZXZlciwgb25lIG11c3QgYmUgdmVyeSBjYXJlZnVsIHdoaWxlIG1ha2luZyBkb25hdGlvbnMgYXMgd2VsbCBhcyB3aGlsZSByYWlzaW5nIGZ1bmRzLiBMb29rIGZvciAgIGNyZWRpYmlsaXR5IGFuZCB0aGUgcm9vdCBjYXVzZXMgY2FyZWZ1bGx5Jy4gSG93ZXZlciwgd2UgY2Fubm90IGFzc3VtZSB0aGF0IGJ5IGFkZHJlc3Npbmcgc3VjaCBpc3N1ZXMsIGl0ICAgY2FuIGJlY29tZSB0aGUgYmVzdCBmdW5kLXJhaXNpbmcgbWVjaGFuaXNtIGJlY2F1c2UgdGhlcmUgaXMgbm8gY29tcGFyaXNvbiB3aXRoIGFueSBvdGhlciBtZWNoYW5pc20gICBiZWluZyBkb25lIGluIHRoZSBwYXNzYWdlIHRvIGNvbmNsdWRlIHRoYXQuIFNvLCBpdCBpcyBub3QgdGhlIGNlbnRyYWwgaWRlYS4gICBPcHRpb24gKGIpIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnSXQgY2FuIGJlIHNhaWQgdGhhdCB0aGlzIHBoZW5vbWVub24gaGFzIG1hZGUgZnVuZGluZyBhY2Nlc3NpYmxlIGFuZCAgIGVyYWRpY2F0ZWQgdGhlIGdhdGVrZWVwZXJzLiBOb3csIGFueW9uZSB3aXRoIGEgZ3JlYXQgaWRlYSBhbmQgdGhlIGFiaWxpdHkgdG8gZXhlY3V0ZSBpdCBjYW4gcmFpc2UgdGhlIGZ1bmRzICAgdGhleSBuZWVkIHRvIHN1Y2NlZWQnLCBzaG93IHRoYXQgY3Jvd2RmdW5kaW5nIGhhcyBtYWRlIGZ1bmRpbmcgYWNjZXNzaWJsZSB3aGljaCB3b3VsZCBtYWtlIHRoZSAgIGV4ZWN1dGlvbiBvZiBhbiBpZGVhIGVhc3kgYW5kIG1ha2UgaXQgc3VjY2Vzc2Z1bC4gU28sIHRoaXMgaXMgdGhlIGNlbnRyYWwgaWRlYSBvZiB0aGUgcGFzc2FnZS4gICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdIb3dldmVyLCBvbmUgbXVzdCBiZSB2ZXJ5IGNhcmVmdWwgd2hpbGUgbWFraW5nIGRvbmF0aW9ucyBhcyB3ZWxsIGFzICAgd2hpbGUgcmFpc2luZyBmdW5kcy4gTG9vayBmb3IgY3JlZGliaWxpdHkgYW5kIHRoZSByb290IGNhdXNlcyBjYXJlZnVsbHkuIFdpdGggdGhlIGFkdmVudCBvZiBwb3dlcmZ1bCAgIHBsYXRmb3JtcywgdGhpbmdzIGhhdmUgZ29uZSBlYXN5IGFuZCBiZXR0ZXInLCBzaG93IGZsYXdzIGluIGNyb3dkZnVuZGluZyBidXQgdGhlIHN0YXRlbWVudCB0aGF0ICd1c2luZyAgIHBvd2VyZnVsIHBsYXRmb3JtcyB3aWxsIGhlbHAgYWRkcmVzcyB0aGVzZSBmbGF3cycgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCBwcm92aWRlIGFueSAgIGluZm9ybWF0aW9uIGluIHRoaXMgY29udGV4dC4gSXNzdWVzIG9mIGNyZWRpYmlsaXR5IGFyZSB0aGVyZSBidXQgcGxhdGZvcm1zIHRoYXQgd2lsbCBoZWxwIGFkZHJlc3MgdGhlbSBjYW5ub3QgICBiZSBjb25jbHVkZWQgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIGdpdmVuIGluIHRoZSBwYXNzYWdlLiBUaGUgb25seSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGxhdGZvcm1zIGlzICAgdGhhdCBpdCBoYXMgbWFkZSBmdW5kaW5nIGVhc2llci4gICBPcHRpb24gKGQpIGlzIGluY29ycmVjdC4gVGhpcyBzdGF0ZW1lbnQgaW4gZ2VuZXJhbCBpcyBjb3JyZWN0IGJ1dCB0aGlzIGlzIG5vdCB0aGUgY2VudHJhbCBkaXNjdXNzaW9uIGluIHRoZSAgIHBhc3NhZ2UuIFRoZXJlIGlzIG5vIGRpc2N1c3Npb24gYWJvdXQgdGhlIGludGVyZXN0IHJhdGVzIGFuZCB0cmFkaXRpb25hbCBmdW5kLXJhaXNpbmcgbWVjaGFuaXNtcy4gU28sIHRoaXMgaXMgICBub3QgdGhlIGNvcnJlY3QgY2VudHJhbCBpZGVhLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " By addressing the credibility issues in   crowdfunding, it can become the best   fundraising mechanism.  ",
        "option2" : " Crowdfunding offers an easy path for   successfully turning an idea into a reality.  ",
        "option3" : " Crowdfunding mechanism has inherent   flaws which can be resolved through the   use of powerful platforms.  ",
        "option4" : " To avoid the interest on raising loans,   people should adopt crowdfunding.  "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following is/are the most rational  and logical Inference/Inferences that can be  drawn from the passage?  1. Climate impact of ozone changes is  majorly seen in the troposphere.  2. Stratospheric and tropospheric ozone losses  affect the temperature balance of the earth.  Select the correct answer from the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhpcyBzdGF0ZW1lbnQgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCBzdGF0ZSB0aGF0IG96b25lIGNoYW5nZXMgICBhcmUgbWFqb3JseSBzZWVuIGluIHRoZSB0cm9wb3NwaGVyZS4gVGhlIGxpbmUgJ1RoZXJlZm9yZSwgdGhlIGNsaW1hdGUgaW1wYWN0IG9mIGNoYW5nZXMgaW4gb3pvbmUgICBjb25jZW50cmF0aW9ucyB2YXJpZXMgd2l0aCB0aGUgYWx0aXR1ZGUgYXQgd2hpY2ggdGhlc2Ugb3pvbmUgY2hhbmdlcyBvY2N1cicsIHJlZmxlY3RzIHRoYXQgY2xpbWF0ZSBpbXBhY3QgICB2YXJpZXMgd2l0aCBhbHRpdHVkZSBhbmQgbm90IG1ham9ybHkgaW4gdGhlIHRyb3Bvc3BoZXJlLiBJdCBtZWFucyB0aGF0IHRoZSBnaXZlbiBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QuICAgICAgICAxMyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluZmVyZW5jZSAyIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zICdBdG1vc3BoZXJpYyBvem9uZSBoYXMgdHdvIGVmZmVjdHMgb24gdGhlIHRlbXBlcmF0dXJlICAgYmFsYW5jZSBvZiB0aGUgRWFydGgnIGFuZCAnVGhlIG1ham9yIG96b25lIGxvc3NlcyB0aGF0IGhhdmUgYmVlbiBvYnNlcnZlZCBpbiB0aGUgbG93ZXIgc3RyYXRvc3BoZXJlIGR1ZSAgIHRvIHRoZSBodW1hbi1wcm9kdWNlZCBjaGxvcmluZS0gYW5kIGJyb21pbmUtY29udGFpbmluZyBnYXNlcyBoYXZlIGEgY29vbGluZyBlZmZlY3Qgb24gdGhlIEVhcnRoJ3Mgc3VyZmFjZS4gICBUaGVzZSBsaW5lcyBjb25maXJtIHRoZSBpbmZlcmVuY2UgbWFkZSBpbiB0aGUgZ2l2ZW4gc3RhdGVtZW50IC0gc3RyYXRvc3BoZXJpYyBhbmQgdHJvcG9zcGhlcmljIG96b25lIGxvc3NlcyAgIGFmZmVjdCB0aGUgdGVtcGVyYXR1cmUgYmFsYW5jZSBvZiB0aGUgZWFydGguICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2   ",
        "option4" : " None   "
      }
    },
    {
      "index" : 46,
      "question" : "A large cube consists of 125 identical small  cubes. Find the total number of small inner  hidden cubes.   (a) 64   (b) 27   (c) 98   (d) 100  47. If 'MOHAN' is coded as '46815' in a code  language, then what will be the code for  'INDIAN' in that code language?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFRoZSBxdWVzdGlvbiBzYXlzIHRoYXQgYSBsYXJnZSBjdWJlIGlzIG1hZGUgdXAgb2YgMTI1IHNtYWxsZXIgY3ViZXMuICAgIFNpbmNlIDEyNSA9IDUzLCBpdCBpbXBsaWVzIHRoYXQgZWFjaCBzaWRlIG9mIHRoZSBsYXJnZSBjdWJlIGlzIGFjdHVhbGx5IG1hZGUgdXAgb2YgNSBjdWJlcy4gICAgUmVxdWlyZWQgbnVtYmVyIG9mIGlubmVyIGN1YmVzID0gKG4gLSAyKTMgPSAoNSAtIDIpMyA9IDMzID0gMjcuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 954915  ",
        "option2" : " 938716  ",
        "option3" : " 946214  ",
        "option4" : " 967215   "
      }
    },
    {
      "index" : 48,
      "question" : "In the given mixed series, find the missing  term.  A4C,   D16H, I36O, P64X, ?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEdpdmVuIHNlcmllczogICBBNEMsIEQxNkgsIEkzNk8sIFA2NFgsID8gICBQYXR0ZXJuIGJlaW5nIGZvbGxvd2VkIGhlcmUgaXM6ICAgIERpZ2l0IGluIGJldHdlZW4gdGhlIHR3byBhbHBoYWJldHMgaXMgdGhlIHNxdWFyZSBvZiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBwbGFjZSB2YWx1ZXMgb2YgdGhlIHR3byAgIGFscGhhYmV0cy4gICAgICAgICAxNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNpbWlsYXJseSwgICBGb3IgRDE2SCwgICBELT4gNCAgICAgIEgtPiA4ICAgRGlmZmVyZW5jZSA9IDggLSA0ID0gNCAgICBOdW1iZXIgPSAoNCkyID0gMTYgICBGb3IgSTM2TywgICAgSSAtPiA5ICAgTy0+IDE1ICAgRGlmZmVyZW5jZSA9IDE1IC0gOSA9IDYgICAgTnVtYmVyID0gKDYpMiA9IDM2ICAgRm9yIFA2NFgsICAgIFAtPiAxNiAgIFgtPiAyNCAgIERpZmZlcmVuY2UgPSAyNCAtIDE2ID0gOCAgICBOdW1iZXIgPSAoOCkyID0gNjQgICBGb3IgWTI1NkksICAgWS0+IDI1ICAgSS0+IDkgICBEaWZmZXJlbmNlID0gMjUgLSA5ID0gMTYgICAgUmVxdWlyZWQgbnVtYmVyID0gKDE2KTIgPSAyNTYgICBIZW5jZSwgJ1kyNTZJJyBpcyB0aGUgcmVxdWlyZWQgYW5zd2VyLiAgICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Q100X  ",
        "option2" : " Y256I  ",
        "option3" : " R324M  ",
        "option4" : " Z100N   "
      }
    },
    {
      "index" : 49,
      "question" : "Find the next term in the following series.  29, 131, 254, 419, 647, ?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEdpdmVuIHNlcmllczogICAyOSwgMTMxLCAyNTQsIDQxOSwgNjQ3LCA/ICAgVGhlIHBhdHRlcm4gb2YgdGhlIHNlcmllcyBpcyBhcyBmb2xsb3dzOiAgICA/ID0gNjQ3ICsgKDIyOCArIDg0KSA9IDY0NyArIDMxMiA9IDk1OSAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 959  ",
        "option2" : " 944  ",
        "option3" : " 1024  ",
        "option4" : " 1331   "
      }
    },
    {
      "index" : 50,
      "question" : "In a certain code language 'low nas hsi play'  means 'she is bringing coffee'; 'wis sat low play'  means 'he is bringing milk' and 'sat lim nas'  means 'milk and coffee'. What is the code for  'he' in the same language?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEZvbGxvd2luZyBjb2RlcyBhcmUgbWVudGlvbmVkIGluIHRoZSBxdWVzdGlvbjogICAoaSkgJ2xvdyBuYXMgaHNpIHBsYXknIG1lYW5zICdzaGUgaXMgYnJpbmdpbmcgY29mZmVlJyAgIChpaSkgJ3dpcyBzYXQgbG93IHBsYXknIG1lYW5zICdoZSBpcyBicmluZ2luZyBtaWxrJyAgIChpaWkpICdzYXQgbGltIG5hcycgbWVhbnMgJ21pbGsgYW5kIGNvZmZlZScgICAnbWlsaycgaXMgdGhlIG9ubHkgd29yZCBjb21tb24gaW4gc2Vjb25kIGFuZCB0aGlyZCBzdGF0ZW1lbnRzLiBIZW5jZSwgaXQgY2FuIGJlIGNvbmNsdWRlZCB0aGF0ICdtaWxrJyBpcyAgIGNvZGVkIGFzICdzYXQnLiBTaW1pbGFybHksIGZyb20gZmlyc3QgYW5kIHNlY29uZCBzdGF0ZW1lbnRzIHdlIGNhbiBvYnNlcnZlIHRoYXQgJ2lzJyBhbmQgYnJpbmdpbmcnIGFyZSBjb2RlZCAgIGFzIGVpdGhlciAnbG93JyBvciAncGxheScuIFB1dHRpbmcgdGhlc2UgY29kZXMgaW4gc2Vjb25kIHN0YXRlbWVudCwgd2UgY2FuIGNvbmNsdWRlIHRoYXQgdGhlIGNvZGUgZm9yICdoZScgaXMgICAnd2lzJy4gICBIZW5jZSwgb3B0aW9uIChiKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " sat                                ",
        "option2" : " wis  ",
        "option3" : " play                              ",
        "option4" : " low         12                                                                                                                                                               Directions for the following 2 (two) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following statements best  reflects the central idea of the passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBpbiAgIHRoZSBwYXNzYWdlIGFib3V0IHRoZSByb2xlIG9mIGdsb2JhbCBib2RpZXMgaW4gYWRkcmVzc2luZyB0aGUgc3RhdGUtc3BvbnNvcmVkIGF0dGFja3MgLiAgIE9wdGlvbiAoYikgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdUaGUgd2FycyBvZiB0aGUgMjFzdCBjZW50dXJ5IHdpbGwgYmUgdG8gY2FwdHVyZSwgbWFuaXB1bGF0ZSBvciBkZXN0cm95ICAgb3RoZXJzJyBkYXRhJyBhbmQgJ0JpbGxpb25zIG9mIGRvbGxhcnMgYXJlIGJlaW5nIHdhc3RlZCBpbiB0aGUgZGVzdHJ1Y3Rpb24sIGRvd250aW1lIGFuZCByZXBsYWNlbWVudCBjb3N0cyAgIGFyaXNpbmcgYXMgYSByZXN1bHQgb2YgY3liZXIgaW5zZWN1cml0eScsIHNob3cgdGhhdCBjeWJlciBpbnNlY3VyaXR5IGNvdWxkIGNlcnRhaW5seSBsZWFkIHRvIGxvc3NlcyBhbW91bnRpbmcgICB0byBiaWxsaW9ucyBvZiBkb2xsYXJzLiBTbywgdGhpcyBpcyB0aGUgY2VudHJhbCBpZGVhIG9mIHRoZSBwYXNzYWdlLiAgICAgICAgMTUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIHJlZ3VsYXRpb24gYW5kIG1vbml0b3Jpbmcgb2YgdGhlIGludGVybmV0IGFyZSBub3QgcGFydCBvZiB0aGUgZGlzY3Vzc2lvbiBpbiB0aGUgICBwYXNzYWdlOyBoZW5jZSwgdGhpcyBvcHRpb24gaXMgbm90IGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBpbiB0aGUgcGFzc2FnZS4gVGhlIGxpbmVzICdBcyB0aGUgaW50ZXJuZXQgYmVjb21lcyAgIGFsbCBwZXJ2YXNpdmUgYW5kIHRoZSB3b3JsZCBnZXRzIGluY3JlYXNpbmdseSBpbnRlcmNvbm5lY3RlZCwgY3liZXJhdHRhY2tzIGFyZSBib3VuZCB0byBjcmVhdGUgd2lkZXNwcmVhZCAgIGltcGFjdCcgc2hvdyB0aGUgaW5ldml0YWJsZSBhbGwtcGVydmFzaXZlIG5hdHVyZSBvZiB0aGUgaW50ZXJuZXQgd2hpY2ggbWVhbnMgdGhhdCBpdCBpcyBub3QgZWFzeSB0byByZWd1bGF0ZSAgIGFuZCBtb25pdG9yIGl0LiAgIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIGFueXRoaW5nIGFib3V0IG5hdGlvbnMgY29taW5nIHRvZ2V0aGVyIHRvIGNyZWF0ZSAgIGNvbW1vbiBnbG9iYWwgc29sdXRpb25zIHJlZ2FyZGluZyBjeWJlciBpbnNlY3VyaXR5LiBIZW5jZSwgaXQgaXMgbm90IHRoZSBjb3JyZWN0IGNlbnRyYWwgaWRlYS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Global bodies should develop   accountability mechanisms for state-  sponsored cyber-attacks.  ",
        "option2" : " Cyber insecurity in the 21st century causes   major economic losses.  ",
        "option3" : " To avoid the losses from cyber-attacks, it is   advised to regulate and monitor the   internet.  ",
        "option4" : " Cyber insecurity is a global challenge;   therefore, nations should come together to   develop solutions.   "
      }
    },
    {
      "index" : 52,
      "question" : "Which of the following is/are the most rational  and logical Inference/Inferences that can be  drawn from the passage?  1. Individualism and fraternity cannot go hand  in hand.  2. Fraternity considers people as ends while  individualism treats people as means.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zICdGcmF0ZXJuaXR5IGlzIGEgZm9yY2Ugb2Ygb3Bwb3NpdGUgY2hhcmFjdGVyJywgd2hpY2ggbWVhbnMgICB0aGF0IGl0IGlzIG5vdCBwb3NzaWJsZSB0byBmb2xsb3cgaW5kaXZpZHVhbGlzbSBhbmQgZnJhdGVybml0eSB0b2dldGhlci4gVGh1cywgdGhpcyBzdGF0ZW1lbnQgYXMgYW4gaW5mZXJlbmNlIGlzICAgY29ycmVjdC4gICBJbmZlcmVuY2UgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGhhcyBhIGxpbWl0ZWQgbWVudGlvbiBvZiBpbmRpdmlkdWFsaXNtLCB0aGF0IGl0IHRyZWF0cyB0aGUgcGVyc29uIGFzIGFuICAgZW5kIGluIGhpbXNlbGYgLSAnLi4uIGFuZCB1bmRlciB0aGUgcHJlc3N1cmUgb2YgaGlzIHBhcnRpY3VsYXIgaW50ZXJlc3RzIGFjdGluZyBhcyB0aG91Z2ggaGUgd2FzIGFuIGVuZCB0byAgIGhpbXNlbGYsIHRoZXJlYnkgZGV2ZWxvcGluZyBhIG5vbi1zb2NpYWwgYW5kIGV2ZW4gYW4gYW50aS1zb2NpYWwgc2VsZi4uLicgQnV0IHRoZXJlIGlzIG5vIGRlc2NyaXB0aW9uIGFib3V0ICAgaG93IGZyYXRlcm5pdHkgdHJlYXRzIHBlb3BsZSAtIGFzIG1lYW5zIG9yIGFzIGFuIGVuZCBpbiB0aGVtc2VsdmVzLiBTbywgdGhlIGluZmVyZW5jZSBtYWRlIGlzIGluY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only   ",
        "option3" : " 1 and 2  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 53,
      "question" : "In certain coding language 'CODE' and ''BUT'  is written as 'XLWV' and 'YFG' respectively.  Then what will be the code for 'MAN'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IENPREUgaXMgd3JpdHRlbiBhcyBYTFdWICAgQ+Kft1ggKE9wcG9zaXRlIGxldHRlciBwYWlyKSAgIE/in7dMIChPcHBvc2l0ZSBsZXR0ZXIgcGFpcikgICBE4p+3VyAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICAgReKft1YgKE9wcG9zaXRlIGxldHRlciBwYWlyKSAgIEJVVCBpcyB3cml0dGVuIGFzIFlGRy4gICBC4p+3WSAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICAgVeKft0YgKE9wcG9zaXRlIGxldHRlciBwYWlyKSAgIFTin7dHIChPcHBvc2l0ZSBsZXR0ZXIgcGFpcikgICBTaW1pbGFybHksICAgTeKft04gKE9wcG9zaXRlIGxldHRlciBwYWlyKSAgIEHin7daIChPcHBvc2l0ZSBsZXR0ZXIgcGFpcikgICBO4p+3TSAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICAgVGh1cywgTUFOIHdpbGwgYmUgY29kZWQgYXMgTlpNLiAgICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " RZQ  ",
        "option2" : " SZR  ",
        "option3" : " TZS  ",
        "option4" : " NZM         13                                                                                                                                                              "
      }
    },
    {
      "index" : 54,
      "question" : "Which of the following option should come at  the place of 'X'?  BD1F, DH5L, X, FG4R  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEdpdmVuIFNlcmllczogICBCRDFGLCBESDVMLCBYLCBGRzRSICAgTGV0J3MgdGFrZSBhIHRlcm0gYW5kIGZpbmQgb3V0IHRoZSBwYXR0ZXJuLiAgICBSZXF1aXJlZCBudW1iZXIgPSBbKDIgw5cgNCkgLSA2XSAvMiA9IDEgICBBcHBseWluZyB0aGUgc2FtZSBpbiB0aGUgc2Vjb25kIHRlcm0uICAgIFJlcXVpcmVkIG51bWJlciA9IFsoOCDDlyA0KSAtIDEyXS80ID0gNSAgICBMZXQncyBjaGVjayBlYWNoIG9wdGlvbiBvbmUgYnkgb25lLiAgICAgICAgMTYgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPcHRpb24gKGEpOiAgICBSZXF1aXJlZCBudW1iZXIgPSBbKDYgw5cgMTIpIC0gMThdLzYgPSA5IOKJoCAzICAgT3B0aW9uIChiKTogICAgUmVxdWlyZWQgbnVtYmVyID0gWyg1IMOXIDQpIC0gMjBdLzUgPSAwIOKJoCAyICAgT3B0aW9uIChjKTogSkQyVCAgICBSZXF1aXJlZCBudW1iZXIgPSBbKDEwIMOXIDQpIC0gMjBdLzEwID0gMiAgIE9wdGlvbiAoZCkgICAgUmVxdWlyZWQgbnVtYmVyID0gWygzIMOXIDEyKSAtIDE5XS8zID0gMTcvMyDiiaAgNCAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " FL3R  ",
        "option2" : " ED2T  ",
        "option3" : " JD2T  ",
        "option4" : " CL4R   "
      }
    },
    {
      "index" : 55,
      "question" : "Ram Krishna earns Rs. 0.40 per cube made by  him. If he has a cubical block of 3 m side, and  has to make smaller cubes of side 3 cm, then  how much will he earn?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IExlbmd0aCBvZiB0aGUgc2lkZSBvZiBiaWcgY3ViZSA9IDMgbSA9IDMwMCBjbSAgIExlbmd0aCBvZiB0aGUgc2lkZSBvZiBzbWFsbCBjdWJlID0gMyBjbSAgICBTbywgbiA9IExlbmd0aCBvZiB0aGUgc2lkZSBvZiBiaWcgY3ViZS8gTGVuZ3RoIG9mIHRoZSBzaWRlIG9mIHNtYWxsIGN1YmUgPSAzMDAvMyA9IDEwMCAgIOKItCBOdW1iZXIgb2YgY3ViZXMgdGhhdCBjYW4gYmUgbWFkZSA9IChuKTMgPSAxMDAgw5cgMTAwIMOXIDEwMCA9IDEwMDAwMDAgICBUb3RhbCBlYXJuaW5nIG9mIFJhbSBLcmlzaG5hID0gMC40MCDDlyAxMDAwMDAwID0gNDAwMDAwID0gNCBsYWtocyAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 40 thousand  ",
        "option2" : " 4 lakhs  ",
        "option3" : " 40 lakhs  ",
        "option4" : " 35 thousand   "
      }
    },
    {
      "index" : 56,
      "question" : "Each of the six faces of a cube is marked A to  F.  Consider the following statement:  S1. Figures (ii) and (iii) are sufficient to known  as to which face is opposite to the face marked  F.  S2. Figures (ii) and (iii) are sufficient to known  as to which face is opposite to the face marked  D.  S3. Figures (i) and (iv) are sufficient to known  as to which face is opposite to the face marked  C.  Which of the statement given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IExldCdzIGNoZWNrIGZpZ3VyZXMgKGlpKSBhbmQgKGlpaSk6ICAgIE1vdmluZyBmaWd1cmUgKGlpaSkgYnkgOTAwIGNsb2Nrd2lzZSwgRCBpcyBhdCB0aGUgc2FtZSBwb3NpdGlvbiBpbiBib3RoIGRpY2VzLiBUaHVzLCB3ZSBnZXQ6ICAgQSBpcyBvcHBvc2l0ZSB0byBGLCBCIGlzIG9wcG9zaXRlIHRvIEUgYW5kIEQgaXMgb3Bwb3NpdGUgdG8gQy4gICBGaWd1cmVzIElJIGFuZCBJSUkgYXJlIHN1ZmZpY2llbnQgdG8gZmluZCB3aGljaCBmYWNlIGlzIG9wcG9zaXRlIHRvIHRoZSBmYWNlcyBtYXJrZWQgRiBhbmQgRC4gICBMZXQncyBjaGVjayBmaWd1cmVzIChpKSBhbmQgKGl2KTogICAgICAgICAgMTcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZXJlIEYgYW5kIEIgYXJlIGNvbW1vbi4gVGh1cyB1bmNvbW1vbiBmYWNlcyBvZiBib3RoIGRpY2VzIGkuZS4gQyBhbmQgRCB3aWxsIGJlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIuICAgVGh1cywgZmlndXJlIChpKSBhbmQgKGl2KSBhcmUgc3VmZmljaWVudCB0byBmaW5kIHdoaWNoIGZhY2UgaXMgb3Bwb3NpdGUgdG8gdGhlIGZhY2UgbWFya2VkIEMuICAgVGh1cywgYWxsIHN0YXRlbWVudHMsIFMxLCBTMiBhbmQgUzMgYXJlIGNvcnJlY3QuICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gICBFeHBsYW5hdGlvbiBmb3IgUXVlc3Rpb25zIDU3IHRvIDU5OiAgIEZvb2QgdG8gSUJNIGlzIGRlbGl2ZXJlZCBvbiBUaHVyc2RheS4gVGFoaXIgZGVsaXZlcnMgZm9vZCBvbiBXZWRuZXNkYXkuIEZvb2QgdG8gSFRDIGlzIGRlbGl2ZXJlZCBvbiAgIEZyaWRheS4gUnVkcmEgd29ya3Mgb24gTW9uZGF5LiAgICAgIERheSBXb3JrZXIgQ29tcGFueSAgIE1vbmRheSBSdWRyYSAgICBUdWVzZGF5ICAgICBXZWRuZXNkYXkgVGFoaXIgICAgVGh1cnNkYXkgIElCTSAgIEZyaWRheSAgSFRDICAgVmlja3kgZG9lcyBub3QgZGVsaXZlciBmb29kIHRvIEFjZXIgYW5kIGhlIGRvZXMgbm90IHdvcmsgb24gVHVlc2RheS4gU28sIFZpY2tleSBtdXN0IGJlIGRlbGl2ZXJpbmcgZm9vZCAgIGVpdGhlciBvbiBUaHVyc2RheSBvciBGcmlkYXkuIFNvLCB0aGVyZSBhcmUgMiBwb3NzaWJpbGl0aWVzOiAgIENhc2UtMSAgIERheSBXb3JrZXIgQ29tcGFueSAgIE1vbmRheSBSdWRyYSAgICBUdWVzZGF5ICAgICBXZWRuZXNkYXkgVGFoaXIgICAgVGh1cnNkYXkgVmlja3kgSUJNICAgRnJpZGF5ICBIVEMgICAgQ2FzZS0yICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhICAgIFR1ZXNkYXkgICAgIFdlZG5lc2RheSBUYWhpciAgICBUaHVyc2RheSAgSUJNICAgRnJpZGF5IFZpY2t5IEhUQyAgIE5vdywgU2FuamVldiBkZWxpdmVycyB0byBIUCBidXQgaGUgZG9lcyBub3QgZG8gdGhpcyBvbiBNb25kYXkgb3IgRnJpZGF5IC0gdGhhdCBtZWFucyBTYW5qZWV2IHdpbGwgd29yayAgIG9uIFR1c2VkYXkuIEFuZCBvbiB0aGUgcmVtYWluaW5nIGRheSBVcGVuZHJhIHdpbGwgZGVsaXZlci4gICAgQ2FzZS0xICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhICAgIFR1ZXNkYXkgU2FuamVldiBIUCAgIFdlZG5lc2RheSBUYWhpciAgICBUaHVyc2RheSBWaWNreSBJQk0gICBGcmlkYXkgVXBlbmRyYSBIVEMgICAgICAgIDE4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FzZS0yICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhICAgIFR1ZXNkYXkgU2FuamVldiBIUCAgIFdlZG5lc2RheSBUYWhpciAgICBUaHVyc2RheSBVcGVuZHJhIElCTSAgIEZyaWRheSBWaWNreSBIVEMgICBBbHNvLCBUYWhpciBkb2VzIG5vdCBkZWxpdmVyIGZvb2QgdG8gQWNlci4gU28sIFJ1ZHJhIHdpbGwgZGVsaXZlciBmb29kIHRvIEFjZXIuICAgQ2FzZS0xICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhIEFjZXIgICBUdWVzZGF5IFNhbmplZXYgSFAgICBXZWRuZXNkYXkgVGFoaXIgQXBwbGUgICBUaHVyc2RheSBWaWNreSBJQk0gICBGcmlkYXkgVXBlbmRyYSBIVEMgICAgQ2FzZS0yICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhIEFjZXIgICBUdWVzZGF5IFNhbmplZXYgSFAgICBXZWRuZXNkYXkgVGFoaXIgQXBwbGUgICBUaHVyc2RheSBVcGVuZHJhIElCTSAgIEZyaWRheSBWaWNreSBIVEMgICBGb29kIHRvIEhUQyBpcyBkZWxpdmVyZWQgb24gRnJpZGF5IGJ1dCBub3QgYnkgVXBlbmRyYS4gU28sIENhc2UgLTEgY2FuIGJlIGVsaW1pbmF0ZWQuICAgIEhlbmNlIHRoZSBmaW5hbCBhcnJhbmdlbWVudCBpczogICAgQ2FzZS0yICAgRGF5IFdvcmtlciBDb21wYW55ICAgTW9uZGF5IFJ1ZHJhIEFjZXIgICBUdWVzZGF5IFNhbmplZXYgSFAgICBXZWRuZXNkYXkgVGFoaXIgQXBwbGUgICBUaHVyc2RheSBVcGVuZHJhIElCTSAgIEZyaWRheSBWaWNreSBIVEMgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only S1 and S3  ",
        "option2" : " Only S1 and S2  ",
        "option3" : " Only S2 and S3  ",
        "option4" : " All S1, S2 and S3   Directions for the following 3 (three) items:   Read the following information and answer the three   questions that follow.   In a food delivery company, five workers Rudra,   Sanjeev, Tahir, Upendra and Vicky deliver food to five   companies, IBM, Apple, HTC, Acer or HP - one day a   week Monday through Friday.   (i) Vicky does not deliver food to Acer and he does   not work on Tuesday.   (ii) Sanjeev delivers to HP but he does not do this on   Monday or Friday.   (iii) Food to IBM is delivered on Thursday.   (iv) Tahir delivers food on Wednesday but not to Acer.   (v) Food to HTC is delivered on Friday but not by   Upendra.   (vi) Rudra works on Monday.  "
      }
    },
    {
      "index" : 57,
      "question" : "Which among the following can be concluded?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IE9uIFdlZG5lc2RheSwgVGFoaXIgZGVsaXZlcnMgZm9vZCB0byBBcHBsZSBpcyBhIGNvcnJlY3Qgc3RhdGVtZW50LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Tahir delivers food to Apple on Friday  ",
        "option2" : " Sanjeev delivers food to HP on Wednesday  ",
        "option3" : " Food is not delivered by Vickey on Friday  ",
        "option4" : " On Wednesday Tahir delivers food to   Apple.    "
      }
    },
    {
      "index" : 58,
      "question" : "To which company does Vicky deliver?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IFZpY2t5IGRlbGl2ZXJzIGZvb2QgdG8gSFRDLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Acer  ",
        "option2" : " HP  ",
        "option3" : " IBM  ",
        "option4" : " HTC   "
      }
    },
    {
      "index" : 59,
      "question" : "On which day is food delivered to Acer?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEZvb2QgaXMgZGVsaXZlcmVkIHRvIEFjZXIgb24gTW9uZGF5LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Friday  ",
        "option2" : " Monday  ",
        "option3" : " Tuesday  ",
        "option4" : " Wednesday          14                                                                                                                                                               Directions for the following 3 (three) items:   Read the following two passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 60,
      "question" : "Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. Women of the world could be considered  as the feeder of the world population.  2. Both Indian and African women end up  losing their education opportunity due to  their responsibility of fetching water.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBnaXZlbiBpbmZlcmVuY2UgaXMgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBsaW5lICdGb3IgZXhhbXBsZSwgYXQgbGVhc3QgaGFsZiBvZiB0aGUgICB3b3JsZCBmb29kIGlzIGdyb3duIGJ5IHdvbWVuIGZhcm1lcnMsIGFuZCBpdCBhbW91bnRzIHRvIDgwJSBpbiBzb21lIEFmcmljYW4gY291bnRyaWVzIChGQU8sMjAwMCknLiBJdCAgIHNob3dzIHRoYXQgd29tZW4gYWN0IGFzIGEgbWFqb3IgY29udHJpYnV0b3IgdG8gZm9vZCBhdmFpbGFiaWxpdHkgZm9yIHRoZSB3b3JsZCBwb3B1bGF0aW9uLiBUaGVyZWZvcmUsIGl0ICAgd291bGQgYmUgY29ycmVjdCB0byBzYXkgdGhhdCB3b21lbiBhcmUgYSBmZWVkZXIgdG8gdGhlIHdvcmxkIHBvcHVsYXRpb24uICAgICAgICAxOSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEluZmVyZW5jZSAyIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIGluZmVyZW5jZSBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBzdGF0ZW1lbnQgaXMgYWJvdXQgd29tZW4gb2YgQWZyaWNhICAgYW5kIEluZGlhLiBIb3dldmVyLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBjb3ZlciBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIEluZGlhbiB3b21lbi4gT25seSB0aGUgaXNzdWVzIG9mICAgdGhlIHdvbWVuIG9mIEFmcmljYSBhcmUgY292ZXJlZCBpbiB0aGUgcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGUgaW5mZXJlbmNlIGFzIGEgd2hvbGUgaXMgbm90IGNvcnJlY3QuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only   ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 61,
      "question" : "Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. Death penalty should not have a place in  modern societies as it is an unconstitutional  act.  2. Awareness against the death penalty is a  must for reducing the existing public  support.  Select the correct answer from the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucyBhYm91dCB0aGUgZGVjbGluZSBpbiB0aGUgdXNlIG9mIGRlYXRoIHBlbmFsdHkgaW4gdGhlICAgbGluZSAnVGhlIG15cmlhZCBvZiBkaXN0dXJiaW5nIGZhY3RzIGFib3V0IHRoZSBkZWF0aCBwZW5hbHR5IGhhcyBsZWQgdG8gYSBzaGFycCBkZWNsaW5lIGluIGl0cyB1c2UuJyBIb3dldmVyLCAgIHRoZSBjb25zdGl0dXRpb25hbGl0eSBvZiB0aGUgdXNlIGhhcyBub3doZXJlIGJlZW4gZGlzY3Vzc2VkIGJ5IHRoZSBhdXRob3IuIFRoZXJlZm9yZSwgaXQgd291bGQgYmUgaW5jb3JyZWN0ICAgdG8gc2F5IHRoYXQgJ0RlYXRoIHBlbmFsdHkgc2hvdWxkIG5vdCBoYXZlIGEgcGxhY2UgaW4gbW9kZXJuIHNvY2lldGllcyBhcyBpdCBpcyBhbiB1bmNvbnN0aXR1dGlvbmFsIGFjdC4nICAgSW5mZXJlbmNlIDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucyAnVWx0aW1hdGVseSwgdGhlIGZ1dHVyZSBvZiB0aGUgZGVhdGggcGVuYWx0eSB3aWxsIGRlcGVuZCBvbiAgIHdoZXRoZXIgaXQgaXMgcmV0YWluaW5nIHB1YmxpYyBzdXBwb3J0Jy4gVGhlc2UgbGluZXMgc2hvdyB0aGF0IHRoZSBjb250aW51YW5jZSBvZiB0aGUgZGVhdGggcGVuYWx0eSBkZXBlbmRzICAgb24gcHVibGljIHN1cHBvcnQ7IGJ1dCB0byBpbmZlciB0aGF0IGF3YXJlbmVzcyBpcyBhIG11c3QgdG8gcmVkdWNlIHB1YmxpYyBzdXBwb3J0IHdvdWxkIG5vdCBiZSBjb3JyZWN0IGJlY2F1c2UgICB0aGUgcGFzc2FnZSBub3doZXJlIGRpc2N1c3NlcyB0aGF0IHB1YmxpYyBzdXBwb3J0IGlzIHRoZSBtb3N0IGltcG9ydGFudCBkZXRlcm1pbmFudCBvZiBpdHMgdXNlLiBFdmVuIGluIHRoZSAgIGZpcnN0IGxpbmUgb2YgdGhlIHBhc3NhZ2UsIHRoZSBhdXRob3IgaGFzIHVzZWQgJ3NvbWV0aW1lcycgd2hpbGUgdGFsa2luZyBhYm91dCBwdWJsaWMgc3VwcG9ydC4gSGVuY2UsIHRoaXMgICBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2         15                                                                                                                                                              "
      }
    },
    {
      "index" : 62,
      "question" : "What is the crucial message conveyed by the  above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdUaGUgQ291cnQgaGFzIGJlZW4gcmVsdWN0YW50IHRvIHJlbHkgICBvbiBvcGluaW9uIHBvbGxzIHRvIG1lYXN1cmUgdGhlc2Ugc3RhbmRhcmRzIGJlY2F1c2UgcG9sbCByZXN1bHRzIGNhbiB2YXJ5IHdpZGVseSBkZXBlbmRpbmcgb24gdGhlIHBvbGxpbmcgICBmaXJtIGFuZCB0aGUgc3BlY2lmaWMgd29yZGluZyBvZiB0aGUgcXVlc3Rpb25zIGFza2VkJywgcmVmbGVjdHMgdGhhdCBvcGluaW9uIHBvbGxzIGFyZSBub3QgcmVsaWFibGUgYW5kIHNob3VsZCAgIG5vdCBiZSBhIG1lY2hhbmlzbSBmb3IgZXZhbHVhdGluZyBwdWJsaWMgc3VwcG9ydCBmb3IgdGhlIGRlYXRoIHBlbmFsdHkuICAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoZSBtYWluIGRpc2N1c3Npb24gb2YgdGhlIHBhc3NhZ2UgaXMgbm90IGFib3V0IHdoaWNoIGNvdXJ0IHNob3VsZCBnaXZlIHRoZSBkZWF0aCAgIHBlbmFsdHkuIFNvLCB0byBzYXkgdGhhdCBvbmx5IHRoZSBhcGV4IGNvdXJ0IHNob3VsZCBhd2FyZCB0aGUgZGVhdGggcGVuYWx0eSB0byBhdm9pZCBhIG1pc2NhcnJpYWdlIG9mIGp1c3RpY2UgICBtZWFucyB0aGF0IGxvd2VyIGNvdXJ0cyBoYXZlIGRvbmUgYSBtaXNjYXJyaWFnZSBvZiBqdXN0aWNlIHdoaWNoIGlzIG5vdCBjb3ZlcmVkIGluIHRoZSBwYXNzYWdlLCBub3IgaXMgdGhlICAgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSBwYXNzYWdlLiAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgbGluZXMgJ0luc3RlYWQsIHRoZSBDb3VydCBoYXMgbG9va2VkIHRvIHRoZSBhY3Rpb25zIG9mIHN0YXRlIGxlZ2lzbGF0dXJlcyBhbmQgdGhlICAgZGVjaXNpb25zIG9mIGp1cmllcywgcHJvc2VjdXRvcnMgYW5kIGdvdmVybm9ycywgYXMgcmVmbGVjdGluZyBwdWJsaWMgd2lsbCcsIHNob3cgdGhhdCB0aGUgY291cnQgZm9yIGF3YXJkaW5nICAgdGhlIGRlYXRoIHBlbmFsdHkgaGFzIHJlZmVycmVkIHRvIHRoZSBhY3Rpb25zIG9mIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBhbmQgZ292ZXJub3JzIGZvciB1bmRlcnN0YW5kaW5nIHB1YmxpYyAgIHdpbGwuIEJ1dCwgdGhlIGdpdmVuIG9wdGlvbiBzdGF0ZXMgdGhlIGNvbnRyYWRpY3RvcnkgdmlldyB0aGF0IHN0YXRlIGxlZ2lzbGF0dXJlIGFuZCBnb3Zlcm5vcnMgc2hvdWxkIG5vdCAgIGluZmx1ZW5jZSB0aGUgZGVjaXNpb24gb2YgdGhlIGNvdXJ0LCB3aGljaCBpcyBub3QgY29ycmVjdC4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSAgIHBhc3NhZ2UuICAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGlzIG9wdGlvbiBjYXB0dXJlcyB0aGUgcmVhbCBlc3NlbmNlIG9mIHRoZSBwYXNzYWdlLiBSZWZlciB0byB0aGUgbGluZXMgJ0luc3RlYWQsIHRoZSAgIENvdXJ0IGhhcyBsb29rZWQgdG8gdGhlIGFjdGlvbnMgb2Ygc3RhdGUgbGVnaXNsYXR1cmVzIGFuZCB0aGUgZGVjaXNpb25zIG9mIGp1cmllcywgcHJvc2VjdXRvcnMgYW5kIGdvdmVybm9ycywgICBhcyByZWZsZWN0aW5nIHB1YmxpYyB3aWxsLiBUaGUgbXlyaWFkIG9mIGRpc3R1cmJpbmcgZmFjdHMgYWJvdXQgdGhlIGRlYXRoIHBlbmFsdHkgaGFzIGxlZCB0byBhIHNoYXJwIGRlY2xpbmUgICBpbiBpdHMgdXNlLiBVbHRpbWF0ZWx5LCB0aGUgZnV0dXJlIG9mIHRoZSBkZWF0aCBwZW5hbHR5IHdpbGwgZGVwZW5kIG9uIHdoZXRoZXIgaXQgaXMgcmV0YWluaW5nIHB1YmxpYyBzdXBwb3J0Jy4gICBUaGVzZSBsaW5lcyBzaG93IHRoYXQgZm9yIGRlYXRoIHBlbmFsdHkgcHVibGljIHN1cHBvcnQgaXMgaW1wb3J0YW50LCBhbmQgdGhlIG1lY2hhbmlzbSB0byB1bmRlcnN0YW5kIHB1YmxpYyAgIHdpbGwgaXMgdGhyb3VnaCBpbnN0aXR1dGlvbnMgbGlrZSB0aGUgc3RhdGUgbGVnaXNsYXR1cmUsIGdvdmVybm9ycyBldGMuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Opinion polls could be a good mechanism   for evaluating public support for the death   penalty.  ",
        "option2" : " Death penalty should be given only by the   apex court so that there is no miscarriage of   justice.  ",
        "option3" : " State legislature and governors should not   influence the Supreme Courts' judgement   related to the death penalty.  ",
        "option4" : " Continuance of the death penalty depends   on society's opinion reflected through   institutional mechanisms.   "
      }
    },
    {
      "index" : 63,
      "question" : "Find the wrong term in the given series.  4, 12, 45, 215, 1305   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IEdpdmVuIHNlcmllczogICA0LCAxMiwgNDUsIDIxNSwgMTMwNSAgIFRoZSBwYXR0ZXJuIGhlcmUgaXM6ICAgNCAtPiBGaXJzdCB0ZXJtICAgNCDDlyAzIC0gMCAtPiAxMiAgIDEyIMOXIDQgLSAzIC0+IDQ1ICAgNDUgw5cgNSAtIDYgLT4gMjE5IOKJoCAyMTUgKGluIHNlcmllcyBpdCBpcyBnaXZlbiBhcyAyMTUpICAgMjE5IMOXIDYgLSA5IC0+IDEzMDUgICBTbywgMjE1IGlzIHRoZSB3cm9uZyB0ZXJtLiAgIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAgICAgICAyMCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 215  ",
        "option2" : " 45  ",
        "option3" : " 12  ",
        "option4" : " 1305   "
      }
    },
    {
      "index" : 64,
      "question" : "If in a code language word  'CORRESPONDING' is coded as  'HJWMJNUJSYNIL' then what will be the  code for the word 'RESPONSE'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEFzLCAgICBTaW1pbGFybHksIGFwcGx5aW5nIHRoZSBzYW1lIGNvbmNlcHQgaW4gJ1JFU1BPTlNFJy4gICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " WJNUJIZ  ",
        "option2" : " WZXKTIXZ  ",
        "option3" : " WXJNTXIZ  ",
        "option4" : " WZXKTXIZ   Directions for the following 2 (two) items:   The digits from 0 to 9 are coded as shown below.    Condition I.  If a number begins and ends with zero or   an even number, then the first and last digits are to be   coded as A and lambda (lamda) respectively.   Condition II.  If a number begins with one and ends   with zero, then the first and last digits are to be coded   as gama (gamma) and E respectively.    "
      }
    },
    {
      "index" : 65,
      "question" : "What is the code for 379150?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEZvciB0aGUgZ2l2ZW4gbnVtYmVyIG5vbmUgb2YgdGhlIGFib3ZlIHR3byBjb25kaXRpb25zIGFyZSBhcHBsaWNhYmxlLiBIZW5jZSBjb2RlIGZvciAnMzc5MTUwJyBjYW4gc2ltcGx5ICAgYmUgZGVyaXZlZCBmcm9tIHRoZSBjaGFydCBnaXZlbiBpbiB0aGUgcXVlc3Rpb24uICAgMzc5MTUwIC0+IMOYRSBVKnRoZXRoYVogICBTbywgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " MEZ*thethaR  ",
        "option2" : " ØEU*thethaZ  ",
        "option3" : " lambdaØU*thethaE  ",
        "option4" : " Cannot be determined   "
      }
    },
    {
      "index" : 66,
      "question" : "What will be the code for 147689020?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEhlcmUsIHRoZSAybmQgY29uZGl0aW9uIGlzIGFwcGxpY2FibGUgYXMgdGhlIG51bWJlciBiZWdpbnMgd2l0aCAxIGFuZCBlbmRzIHdpdGggMC4gU28sIHRoZSBmaXJzdCBhbmQgbGFzdCBkaWdpdHMgICBhcmUgdG8gYmUgY29kZWQgYXMgZ2FtYSAoZ2FtbWEpIGFuZCBFIHJlc3BlY3RpdmVseS4gIFJlc3Qgb2YgdGhlIGRpZ2l0cyB3aWxsIGJlIGNvZGVkIGFzIHBlciB0aGUgY2hhcnQgZ2l2ZW4gaW4gICB0aGUgcXVlc3Rpb24uICAgMTQ3Njg5MDIwIC0+IGdhbWFNRWNSVVpYRSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " *MEcRUZXZ    ",
        "option2" : " gamaME*RUZXE  ",
        "option3" : " gamaMEØRUZXE   ",
        "option4" : " gamaMEcRUZXE   "
      }
    },
    {
      "index" : 67,
      "question" : "Anurag cuts down a large painted cube into a  number of small identical cubes. He found that  among the small cubes there were 64 cubes  which didn't have any face painted. How many  small cubes have exactly one face painted?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IE51bWJlciBvZiBjdWJlcyB3aXRoIG5vIGZhY2UgcGFpbnRlZCA9IChuIC0gMikzID0gNjQgICBvciBuIC0gMiA9IDQgICBvciBuID0gNiAgICBOdW1iZXIgb2Ygc21hbGwgY3ViZXMgdGhhdCBoYXZlIGV4YWN0bHkgb25lIGZhY2UgcGFpbnRlZCA9IDYobiAtIDIpMiA9IDYgw5cgKDYgLSAyKTIgPSA5NiAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 216  ",
        "option2" : " 100  ",
        "option3" : " 72  ",
        "option4" : " 96         16                                                                                                                                                              "
      }
    },
    {
      "index" : 68,
      "question" : "Which of the folded dice given in options is  identical to the unfolded dice shown below?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEdpdmVuIHVuZm9sZGVkIGRpY2U6ICAgIEZyb20gdW5mb2xkZWQgZGljZSwgaXQgaXMgY2xlYXIgdGhhdCAgIC0+IEYgaXMgb3Bwb3NpdGUgdG8gRSAgIC0+IEQgaXMgb3Bwb3NpdGUgdG8gQiAgICAtPiBDIGlzIG9wcG9zaXRlIHRvIEEgICBUaGVyZWZvcmUgb3B0aW9ucyAoYSksIChjKSBhbmQgKGQpIGFyZSBub3QgcG9zc2libGUsIGJlY2F1c2UgYWxwaGFiZXQgZm9ybWluZyB0aGUgb3Bwb3NpdGUgcGFpcnMgYXBwZWFyIG9uICAgdGhlIGFkamFjZW50IHN1cmZhY2VzLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "    ",
        "option2" : "    ",
        "option3" : "    ",
        "option4" : "     "
      }
    },
    {
      "index" : 69,
      "question" : "Consider the following views of a dice.  Which alphabet must be opposite to C?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IExldCB1cyB0YWtlIGRpY2UgMSBhbmQgMiwgd2hlcmUgRiBhbmQgQiBhcmUgY29tbW9uLiBUaHVzLCB1bmNvbW1vbiBmYWNlcyBvZiBib3RoIGRpY2VzLCBpLmUuIEMgYW5kIEQsICAgbXVzdCBiZSBvcHBvc2l0ZSB0byBlYWNoIG90aGVyLiAgIFNvLCBDIGlzIG9wcG9zaXRlIHRvIEQuICAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gICAgICAgIDIxICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A  ",
        "option2" : " D  ",
        "option3" : " E  ",
        "option4" : " Data is insufficient.   "
      }
    },
    {
      "index" : 70,
      "question" : "Bhola is trying to cut a big cubical block into  small and identical 729 cubical blocks using the  minimum possible cuts. His cuts may be along  the X, Y, or Z coordinates and go across the  block (i.e. from one side to another side). After  making each cut he takes a rest for 80 seconds.  In the whole cutting session, what is the total  time of rest taken by Bhola?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEZpcnN0LCB3ZSBuZWVkIHRvIGZpbmQgdGhlIHRvdGFsIG51bWJlciBvZiBjdXRzIG1hZGUgYnkgaGltLiAgIEhlcmUsIG4zID0gNzI5ICAgb3IgbiA9ICg3MjkpMS8zICAgb3IgbiA9IDkgICAgV2Uga25vdyB0aGF0IHRoZSB0b3RhbCBudW1iZXIgb2YgY3V0cyA9IDggKyA4ICsgNyA9IDIzIChhZnRlciB0aGUgbGFzdCBjdXQsIGhpcyByZXN0IHdpbGwgbm90IGNvdW50KSAgIFRvdGFsIHRpbWUgb2YgcmVzdCA9IDI0IMOXIDgwID0gMTg0MCBzID0gMzAuNjcgbWluICAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 24 min  ",
        "option2" : " 36 min  ",
        "option3" : " 30 min  ",
        "option4" : " 20 min   Directions for the following 4 (four) items:   Read the following four passages and answer the items   that follow each passage. Your answers to these items   should be based on the passages only.  "
      }
    },
    {
      "index" : 71,
      "question" : "Which of the following is/are the most rational  and logical Inference/Inferences that can be  made from the passage?  1. Only economic growth has the potential to  overcome the menace of poverty.  2. Health and education have a direct  correlation with poverty reduction.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIGluZmVyZW5jZSBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdHZW5lcmFsbHksIHBvdmVydHkgY2Fubm90IGJlICAgcmVkdWNlZCBpZiBlY29ub21pYyBncm93dGggZG9lcyBub3Qgb2NjdXInIG1lYW5zIHRoYXQgZ2VuZXJhbGx5IHRoaXMgY29ycmVsYXRpb24gaXMgY29ycmVjdCwgYnV0IHRvIGluZmVyIHRoYXQgICBvbmx5IGVjb25vbWljIGdyb3d0aCBjYW4gZW5kIHBvdmVydHkgd291bGQgbm90IGJlIGNvcnJlY3QuIFRoZSBsaW5lICdBbHNvLCB0aGUgaW5pdGlhbCBkaXN0cmlidXRpb24gb2YgICBpbmNvbWUgKGFuZCB3ZWFsdGgpIGNhbiBncmVhdGx5IGFmZmVjdCB0aGUgcHJvc3BlY3RzIGZvciBncm93dGggYW5kIGFsbGV2aWF0aW9uIG9mIG1hc3MgcG92ZXJ0eScsIG1lYW5zICAgdGhhdCBldmVuIHdpdGggZ3Jvd3RoIGFuZCBwb29yIGRpc3RyaWJ1dGlvbiwgZW5kaW5nIHBvdmVydHkgaXMgbm90IGVhc3kuICAgSW5mZXJlbmNlIDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgJ0V4cGVyaWVuY2UgaGFzIHNob3duIHRoYXQgaWYgY291bnRyaWVzIHB1dCBpbiBwbGFjZSBpbmNlbnRpdmUgICBzdHJ1Y3R1cmVzIGFuZCBjb21wbGVtZW50YXJ5IGludmVzdG1lbnRzIHRvIGVuc3VyZSBiZXR0ZXIgaGVhbHRoIGFuZCBlZHVjYXRpb24sIGl0IGNhbiBsZWFkIHRvIGhpZ2hlciAgIGluY29tZXMsIHRoZSBwb29yIHdpbGwgYmVuZWZpdCBkb3VibHkgdGhyb3VnaCBpbmNyZWFzZWQgY3VycmVudCBjb25zdW1wdGlvbiBhbmQgaGlnaGVyIGZ1dHVyZSBpbmNvbWVzJy4gICBUaGVzZSBsaW5lcyBzaG93IHRoYXQgdGhlIGludmVzdG1lbnRzIGluIGhlYWx0aCBhbmQgZWR1Y2F0aW9uIGNhbiBoYXZlIGEgZGlyZWN0IGltcGFjdCBvbiBwb29yIHBlb3BsZSBhbmQgICB0aGV5IGNhbiBnZXQgaGlnaGVyIGZ1dHVyZSBpbmNvbWVzIHdoaWNoIGNhbiBsZWFkIHRvIHBvdmVydHkgcmVkdWN0aW9uLiBIZW5jZSwgdGhpcyBpbmZlcmVuY2UgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only   ",
        "option2" : " 2 only   ",
        "option3" : " Both 1 and 2   ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 72,
      "question" : "Based on the above passage, the following   assumptions have been made:  1. Indians take good care of their smartphones  as compared to their western counterparts.  2. Changing smartphones in today's world has  become a style statement.  3. India must come up with adequate  environmental rules for handling tonnes of  e-waste generated through obsolete phones.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnSW5kaWEgaXMgdGhlIGZhc3Rlc3QtZ3Jvd2luZyBtYXJrZXQgaW4gdGhlIHdvcmxkIGZvciBzbWFydHBob25lcyAgIHdpdGggMjcgbWlsbGlvbiB1bml0cyBzaGlwcGVkIGluIHRoZSBzZWNvbmQgcXVhcnRlciBvZiAyMDE2IGFsb25lLCBhbmQgdGhvdWdoIHRoZSBsaWZlc3BhbiBvZiBhIG1vYmlsZSAgIHBob25lIGlzIGhpZ2hlciBpbiBJbmRpYSB0aGFuIGluIHRoZSBXZXN0LCBvbmUgY2FuIGltYWdpbmUgdGhlIG51bWJlciBvZiAnb2Jzb2xldGUiIHBob25lcyBjb250cmlidXRpbmcgICB0byBlbGVjdHJvbmljIHdhc3RlIChlLXdhc3RlKScuIEZyb20gdGhlIGhpZ2hsaWdodGVkIHBvcnRpb24gaXQgbWlnaHQgZmVlbCB0aGF0IHRoZSBnaXZlbiBhc3N1bXB0aW9uIGlzICAgY29ycmVjdCwgYnV0IGl0IGlzIG5vdCBiZWNhdXNlIG1lcmVseSBiYXNlZCBvbiB0aGlzIGluZm9ybWF0aW9uIHdlIGNhbm5vdCBjb25jbHVkZSB0aGF0IHRoZSByZWFzb24gZm9yIHRoZSAgIGhpZ2ggbGlmZXNwYW4gb2YgbW9iaWxlcyBpbiBJbmRpYSBpcyBiZWNhdXNlIEluZGlhbnMgdGFrZSBnb29kIGNhcmUgb2YgdGhlaXIgcGhvbmVzLCBhbmQgdGhlIHdlc3Rlcm4gcGVvcGxlICAgZG9uJ3QuIFRoZXJlZm9yZSwgaXQgaXMgbm90IGEgY29ycmVjdCBhc3N1bXB0aW9uLiAgICBBc3N1bXB0aW9uIDIgaXMgY29ycmVjdC4gVGhpcyBhc3N1bXB0aW9uIGlzIGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgbGluZXMgJ1NtYXJ0cGhvbmUgbWFrZXJzLCBmb3IgZXhhbXBsZSwgICByZWxlYXNlIGEgbmV3IG1vZGVsIGV2ZXJ5IHllYXIgd2l0aCBuZXcgZmVhdHVyZXMgYW5kIGZvciBtYW55LCBub3QgcmVwbGFjaW5nIG9uZSdzIHBlcmZlY3RseSBmdW5jdGlvbmFsICAgc21hcnRwaG9uZSB3aXRoIHRoZSBsYXRlc3QgbW9kZWwgaXMgYmVpbmcgJ291dCBvZiBmYXNoaW9uIi4gVGhlc2UgbGluZXMgY29uZmlybSB0aGUgZXNzZW5jZSBvZiB0aGUgc3RhdGVtZW50ICAgLSBjaGFuZ2luZyBzbWFydHBob25lcyBoYXMgYmVjb21lIGEgc3R5bGUgc3RhdGVtZW50LiAgICBBc3N1bXB0aW9uIDMgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gc3RhdGVtZW50IGlzIG5vdCBjb3JyZWN0IGJlY2F1c2UgdGhlcmUgaXMgbm8gY29udGV4dCBvZiBlLXdhc3RlIHJ1bGVzICAgYmVpbmcgZGlzY3Vzc2VkIGluIHRoZSBwYXNzYWdlLiBDZXJ0YWlubHksIHN1Y2ggcnVsZXMgYXJlIG5lZWRlZCBidXQgdGhhdCBhc3N1bXB0aW9uIHNob3VsZCBiZSBiYXNlZCBvbiB0aGUgICBpbmZvcm1hdGlvbiBpbiB0aGUgcGFzc2FnZS4gSWYgdGhlcmUgaXMgbm8gbWVudGlvbiBvZiBhbnkgaXNzdWVzIHdpdGggZXhpc3RpbmcgcnVsZXMsIHRoZW4gaXQgaXMgbm90IGNvcnJlY3QgdG8gICBhc3N1bWUgdGhhdCB0aGUgZ2l2ZW4gc3RhdGVtZW50IGlzIGNvcnJlY3QuIFNvLCB0aGlzIGlzIG5vdCB0aGUgY29ycmVjdCBhc3N1bXB0aW9uLiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only  ",
        "option2" : " 1 and 3 only  ",
        "option3" : " 3 only  ",
        "option4" : " 2 and 3 only  "
      }
    },
    {
      "index" : 73,
      "question" : "Based on the above passage, the following  assumptions have been made:  1. The training of civil servants to maintain  the status quo should be replaced with  innovation.  2. Indian civil services have failed to uplift  the social and economic status of the  country.  3. Customizing Indian civil services during  independence itself would have been a  better approach.  Which of the above assumptions is/are valid?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBhc3N1bXB0aW9uIGlzIG5vdCBjb3JyZWN0IGJlY2F1c2Ugd2UgY2Fubm90IGFzc3VtZSB0aGF0IGNpdmlsICAgc2VydmFudHMgYXJlIHRyYWluZWQgdG8gbWFpbnRhaW4gdGhlIHN0YXR1cyBxdW8uIFRoZSBhdXRob3IgZG9lcyBub3QgbWFrZSBhbiBpbmRpY2F0aW9uIGluIHRoaXMgZGlyZWN0aW9uLiAgIEFsc28sIHRoZXJlIGlzIG5vIGRpc2N1c3Npb24gYWJvdXQgdHJhaW5pbmcgYW5kIGl0cyBpbXBhY3Qgb24gdGhlIGF0dGl0dWRlIG9mIGNpdmlsIHNlcnZhbnRzLiAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lICdJdCBjYW4gYmUgc2FpZCB0aGF0IHRoZSBjaXZpbCBzZXJ2aWNlIGFzIGEgd2hvbGUgaGFzIG1haW50YWluZWQgaXRzICAgc3RhdHVzIHF1byBpbnN0ZWFkIG9mIHN3ZWVwaW5nIGNoYW5nZXMgaW4gc29jaWFsIGFuZCBlY29ub21pYyBzY2VuYXJpbycsIHNob3dzIHRoYXQgY2l2aWwgc2VydmljZSBoYXMgbm90ICAgYmVlbiBhYmxlIHRvIG1ha2Ugc3dlZXBpbmcgY2hhbmdlcyBpbiBpdHNlbGYgKHJhdGhlciB0aGFuIHRoZSBjb3VudHJ5KS4gQWxzbywgdG8gdGVybSBpdCBhcyBhIGZhaWx1cmUgd291bGQgICBub3QgYmUgY29ycmVjdC4gU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBub3QgY29ycmVjdC4gICBBc3N1bXB0aW9uIDMgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gc3RhdGVtZW50IGlzIGEgaHlwb3RoZXRpY2FsIG9uZSBhbmQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgICBwYXNzYWdlLiBUaGVyZWZvcmUsIHRoZSBnaXZlbiBhc3N1bXB0aW9uIGlzIG5vdCBjb3JyZWN0LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only  ",
        "option2" : " None of the above  ",
        "option3" : " 2 and 3 only  ",
        "option4" : " 1, 2 and 3         18                                                                                                                                                              "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}