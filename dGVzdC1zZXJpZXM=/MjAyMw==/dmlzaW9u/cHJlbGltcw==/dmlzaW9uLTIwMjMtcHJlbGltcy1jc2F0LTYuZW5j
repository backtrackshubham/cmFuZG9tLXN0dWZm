{
  "testId" : "vision-2023-prelims-csat-6",
  "testType" : "csat",
  "fullFilePath" : "upsc-test-series/test-series/2023/vision/prelims/vision-2023-prelims-csat-6.pdf",
  "question" : [
    {
      "index" : 3,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Information available on social networks must be verified for correct opinion formation. 2. Opinions made through social media are not reliable due to instances of fake news. 3. Social networks act as a medium for exercising the right to freedom of speech. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAiVGhlIHVzZXJzIG9mIHNvY2lhbCBuZXR3b3JrcyBubyBsb25nZXIganVzdCB1c2UgdGhlbSB0byBrZWVwIGluIHRvdWNoICB3aXRoIGZyaWVuZHMsIGJ1dCBpbmNyZWFzaW5nbHkgZmFjaWxpdGF0ZSBzb2NpYWwgbmV0d29ya3MgdG8gc2VhcmNoIGZvciBpbmZvcm1hdGlvbi4gVXNlcnMgYWxzbyBmb3JtIG9waW5pb25zICBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gYW5kIGNvbnRyaWJ1dGlvbnMgYXZhaWxhYmxlIGluIHNvY2lhbCBuZXR3b3JrcycsIHNob3dpbmcgdGhhdCBzb2NpYWwgbmV0d29ya3MgYWN0ICBhcyBhIHNvdXJjZSBvZiBpbmZvcm1hdGlvbi4gSG93ZXZlciwgdGhlIHBhc3NhZ2UgZG9lcyBub3QgbWVudGlvbiB3aGV0aGVyIHN1Y2ggaW5mb3JtYXRpb24gaXMgdmVyaWZpZWQgb3IgIG5vdC4gU28sIHRvIHNheSB0aGF0IHN1Y2ggaW5mb3JtYXRpb24gc2hvdWxkIGJlIHZlcmlmaWVkIHdvdWxkIG5vdCBiZSBjb3JyZWN0LiBUaGVyZSBhcmUgbm8gbmVnYXRpdmUgIGNvbnNlcXVlbmNlcyBvZiB1bnZlcmlmaWVkIGluZm9ybWF0aW9uIGJlaW5nIGRpc2N1c3NlZCBpbiB0aGUgcGFzc2FnZS4gIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoaXMgYXNzdW1wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlIGRpc2N1c3Npb24gIHJlbGF0ZWQgdG8gZmFrZSBuZXdzIGFuZCBpdHMgaW1wYWN0IG9uIHJlbGlhYmxlIG9waW5pb24gZm9ybWF0aW9uIGlzIG5vdCBiZWluZyBkb25lIGluIHRoZSBwYXNzYWdlLiBTbywgdGhpcyAgaXMgbm90IHRoZSBjb3JyZWN0IGFzc3VtcHRpb24uICBBc3N1bXB0aW9uIDMgaXMgY29ycmVjdC4gVGhlIGxpbmVzICdVc2VycyBhbHNvIGZvcm0gb3BpbmlvbnMgYmFzZWQgb24gdGhlIGluZm9ybWF0aW9uIGFuZCBjb250cmlidXRpb25zICBhdmFpbGFibGUgb24gc29jaWFsIG5ldHdvcmtzLiBXaGlsZSBzZWFyY2hpbmcgZm9yIGluZm9ybWF0aW9uIGFuZCBpbnRlZ3JhdGluZyBpdCBpbnRvIHRoZWlyIG9waW5pb24gIGZvcm1hdGlvbiwgdXNlcnMgYXJlIG5vIGxvbmdlciBqdXN0IHBhc3NpdmUgcmVjaXBpZW50cyBvZiBpbmZvcm1hdGlvbiBpbiBvbmxpbmUgc29jaWFsIG5ldHdvcmtzIGJ1dCBhcmUgIGFsc28gYWN0aXZlbHkgc3ByZWFkaW5nIHRoZWlyIG93biBvcGluaW9ucycsIHNob3cgdGhhdCB1c2VycyBhcmUgZXhlcmNpc2luZyB0aGVpciByaWdodCB0byBpbmZvcm1hdGlvbiBieSAgbm90IG9ubHkgcGFzc2l2ZWx5IHJlY2VpdmluZyBpbmZvcm1hdGlvbiBidXQgYWxzbyBleGVyY2lzaW5nIHRoZWlyIHJpZ2h0IHRvIGZyZWVkb20gb2Ygc3BlZWNoIGJ5IGFjdGl2ZWx5ICBzcHJlYWRpbmcgdGhlaXIgb3BpbmlvbnMgdXNpbmcgdGhlc2Ugc29jaWFsIG5ldHdvcmtzLiBTbywgdGhpcyBpcyB0aGUgY29ycmVjdCBhc3N1bXB0aW9uLiAgIEV4cGxhbmF0aW9uIGZvciBRdWVzdGlvbnMgNCB0byA2OiAgMiBib29rcyBhcmUgcGxhY2VkIGJldHdlZW4gYm9vayBGIGFuZCBDLCBhbmQgb25seSAxIGJvb2sgaXMgcGxhY2VkIGJldHdlZW4gQyBhbmQgRy4gV2hpbGUgYm9vayBEIGlzICBwbGFjZWQganVzdCBiZWxvdyBib29rIEYuIE5vIHR3byBib29rcyB3aXRoIGFkamFjZW50IGxldHRlcnMgaW4gYWxwaGFiZXRpY2FsIG9yZGVyIGFyZSBwbGFjZWQgYWRqYWNlbnQgdG8gIGVhY2ggb3RoZXIuIFNvLCB0aGVyZSB3aWxsIGJlIDIgcG9zc2libGUgY2FzZXMuICAgSW4gY2FzZSAxLCBib29rIEYgd2lsbCBiZSBhYm92ZSBib29rIEMsIHdoaWxlIGluIGNhc2UgMiwgYm9vayBGIHdpbGwgYmUgYmVsb3cgYm9vayBDLiAgICBCb29rIEIgaXMgcGxhY2VkIGFib3ZlIGJvb2sgQyBidXQgbm90IGF0IHRoZSB0b3AuIFNvLCB3ZSBjYW4ndCBhY2NvbW1vZGF0ZSBib29rIEIgaW4gY2FzZSAyLiBUaHVzICBDYXNlIDIgaXMgY2FuY2VsbGVkLiBJbiBjYXNlIDEsIGJvb2sgQiB3aWxsIGJlIHBsYWNlZCBhdCB0aGUgMm5kIHBvc2l0aW9uIGZyb20gdGhlIHRvcC4gIEJvb2sgRSBpcyBwbGFjZWQgYXQgMm5kIHBvc2l0aW9uIGVpdGhlciBmcm9tIHRvcCBvciBib3R0b20uIEl0IGNhbid0IGJlIHBsYWNlZCBhdCAybmQgcG9zaXRpb24gZnJvbSB0aGUgdG9wICBiZWNhdXNlIGJvb2sgQiBpcyBhbHJlYWR5IHRoZXJlLiBUaHVzLCBib29rIEUgd2lsbCBiZSBwbGFjZWQgYXQgMm5kIHBvc2l0aW9uIGZyb20gdGhlIGJvdHRvbS4gIE5vdywgYm9va3MgQSBhbmQgSCBhcmUgbGVmdC4gQm9vayBBIGNhbid0IGJlIHBsYWNlZCBhdCB0aGUgdG9wIGJlY2F1c2Ugb3RoZXJ3aXNlIGJvb2tzIEEgYW5kIEIgd2lsbCBiZSAgYWRqYWNlbnQuIFNvLCBib29rIEEgd2lsbCBiZSBwbGFjZWQgYmV0d2VlbiBib29rcyBEIGFuZCBDLCBhbmQgYm9vayBIIHdpbGwgb2NjdXB5IHRoZSB0b3AgcG9zaXRpb24uICBGaW5hbCBhcnJhbmdlbWVudCB3aWxsIGJlOiAgICAgICAgIDMgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 1, 2 and 3        3                                                                                                                                                              Directions for the following 3 (three) items:  Read the following information and answer the three  questions that follow.  Eight books A, B, C, D, E, F, G and H are placed one  above the other, but not necessarily in the same order.  No two books with adjacent letters in alphabetical order  are placed adjacent to each other. For example, C is not  placed just above or below D.  Book E is placed at 2nd position either from top or  bottom. Only 2 books are between book F and book C.  Book B is placed above book C but not at the top.  While book D is placed just below book F. Only one  book is placed between book C and book G. "
      }
    },
    {
      "index" : 4,
      "question" : "How many books are placed between book A and book C? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IE5vIGJvb2sgaXMgcGxhY2VkIGJldHdlZW4gYm9vayBBIGFuZCBib29rIEMuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Two books ",
        "option2" : " Only one book ",
        "option3" : " More than two books ",
        "option4" : " No book  "
      }
    },
    {
      "index" : 5,
      "question" : "Which book is placed fourth from the bottom? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEJvb2sgQSBpcyBwbGFjZWQgZm91cnRoIGZyb20gdGhlIGJvdHRvbS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Book G ",
        "option2" : " Book F ",
        "option3" : " Book H ",
        "option4" : " Book A  "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following is not true with respect to the given information? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFRoZSBzdGF0ZW1lbnQsICdCb29rIEMgaXMgcGxhY2VkIGJldHdlZW4gYm9vayBBIGFuZCBib29rIEgnIGlzIG5vdCB0cnVlLiAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Book G is placed just below book E. ",
        "option2" : " Book F is in placed between book D and  book B. ",
        "option3" : " Book H is placed at the top. ",
        "option4" : " Book C is placed in between book A and  book H. "
      }
    },
    {
      "index" : 7,
      "question" : "The same dice has been shown from three vantage points.  Find the colour which is on the opposite face to the 'Black' coloured face. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEZyb20gdGhlIGdpdmVuIGZpZ3VyZSwgaXQgaXMgY2xlYXIgdGhhdCBhZGphY2VudCBmYWNlcyBvZiBibGFjayBhcmUgUGluaywgUmVkLCBXaGl0ZSBhbmQgR3JlZW4uICBUaGVyZWZvcmUsIHdlIGNhbiBjb25jbHVkZSB0aGF0IE9yYW5nZSBjb2xvdXIgbXVzdCBiZSBvcHBvc2l0ZSB0byBCbGFjayBjb2xvdXJlZCBmYWNlLiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Red ",
        "option2" : " White ",
        "option3" : " Orange ",
        "option4" : " Green  "
      }
    },
    {
      "index" : 8,
      "question" : "Find the wrong term in the series.  32768, 4104, 1024, 517 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEdpdmVuIHNlcmllczogIDMyNzY4LCA0MTA0LCAxMDI0LCA1MTcgIFRoZSBhYm92ZSBzZXJpZXMgZm9sbG93cyB0aGUgZm9sbG93aW5nIHBhdHRlcm46ICAzMjc2OC84ICsgOCA9IDQwOTYgKyA4ID0gNDEwNCAgNDEwNC80ICsgNCA9IDEwMjYgKyA0ID0gMTAzMCDiiaAgMTAyNCAoaW4gc2VyaWVzIGl0IGlzIGdpdmVuIGFzIDEwMjQpICAxMDMwLzIgKyAyID0gNTE1ICsgMiA9IDUxNyAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1024 ",
        "option2" : " 517 ",
        "option3" : " 4104 ",
        "option4" : " 32768  "
      }
    },
    {
      "index" : 9,
      "question" : "Find the missing term in the given series. 208, 2052, 928, 3172, 2448, ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEdpdmVuIHNlcmllczogIDIwOCwgMjA1MiwgOTI4LCAzMTcyLCAyNDQ4LCA/ICBUaGUgYWJvdmUgc2VyaWVzIGZvbGxvd3MgdGhlIGZvbGxvd2luZyBwYXR0ZXJuOiAgMjA4IC0+ICg4KTIgKyAoMTIpMiAgMjA1MiAtPiAoMTgpMiArICgxMikzICA5MjggLT4gKDI4KTIgKyAoMTIpMiAgMzE3Mi0+ICgzOCkyICsgKDEyKTMgIDI0NDggLT4gKDQ4KTIgKyAoMTIpMiAgU28sIHRoZSBuZXh0IHRlcm0gPSAoNTgpMiArICgxMikzID0gNTA5MiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 6048 ",
        "option2" : " 1872 ",
        "option3" : " 5092 ",
        "option4" : " 3872  "
      }
    },
    {
      "index" : 10,
      "question" : "If 'CSAT' is written as '0324190801262007' in a code language, then how will 'WRONG' be written? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEdpdmVuIGNvZGUgIENTQVQgLT4gMDMyNDE5MDgwMTI2MjAwNyAgIExldCdzIGNoZWNrIHdoaWNoIHBhdHRlcm4gaXMgYmVpbmcgZm9sbG93ZWQgaGVyZS4gICAge0hlcmUgUiBzdGFuZHMgZm9yIHJldmVyc2Ugb3JkZXIgb2YgdGhlIGFscGhhYmV0fSAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gICAgICAgNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 23041809151214130720 ",
        "option2" : " 23041807161214130720 ",
        "option3" : " 23041807161242723020 ",
        "option4" : " Can't be determined        4                                                                                                                                                              Directions for the following 3 (three) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 11,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Experience alone cannot be the barometer for measuring self-knowledge and performance. 2. For improving performance, one should focus on building expertise and work on enhancing self-knowledge. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBCYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gZ2l2ZW4gaW4gdGhlIHBhc3NhZ2UsIGl0IGlzIGNvcnJlY3QgdG8gYXNzdW1lIHRoYXQgb25seSAgZXhwZXJpZW5jZSBkb2VzIG5vdCBoZWxwIGluIG1lYXN1cmluZyB0aGUgcGVyZm9ybWFuY2Ugb3Igc2VsZi1rbm93bGVkZ2Ugb2YgYSBwZXJzb24uIEFzc2Vzc21lbnQgb2YgYSAgcGVyc29uJ3MgY29udGludWVkIHBlcmZvcm1hbmNlIGFuZCBsZXZlbCBvZiBzZWxmLWtub3dsZWRnZSBiYXNlZCBvbiBleHBlcmllbmNlIGFsb25lIGNhbiBiZSBmYWxzZSBhdCAgdGltZXMuIFRoZSBsaW5lcyAnQW5kIGp1c3QgYXMgZXhwZXJpZW5jZSBjYW4gbGVhZCB0byBhIGZhbHNlIHNlbnNlIG9mIGNvbmZpZGVuY2UgYWJvdXQgb3VyIHBlcmZvcm1hbmNlLCBpdCAgY2FuIGFsc28gbWFrZSB1cyBvdmVyY29uZmlkZW50IGFib3V0IG91ciBsZXZlbCBvZiBzZWxmLWtub3dsZWRnZScsIHN0YXRlIHRoYXQgZXhwZXJpZW5jZSBjYW4gZ2l2ZSBhIGZhbHNlICBzZW5zZSBvZiBjb25maWRlbmNlIGFuZCBtYWtlIHVzIG92ZXJjb25maWRlbnQgYWJvdXQgb3VyIGxldmVsIG9mIHNlbGYta25vd2xlZGdlLiBTbywgdGhpcyBhc3N1bXB0aW9uIGlzICBjb3JyZWN0LiAgQXNzdW1wdGlvbiAyIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdDb250cmFyeSB0byBwb3B1bGFyIGJlbGllZiwgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgcGVvcGxlIGRvIG5vdCAgYWx3YXlzIGxlYXJuIGZyb20gZXhwZXJpZW5jZSwgdGhhdCBleHBlcnRpc2UgZG9lcyBub3QgaGVscCBwZW9wbGUgcm9vdCBvdXQgZmFsc2UgaW5mb3JtYXRpb24sIGFuZCB0aGF0ICBzZWVpbmcgb3Vyc2VsdmVzIGFzIGhpZ2hseSBleHBlcmllbmNlZCBjYW4ga2VlcCB1cyBmcm9tIGRvaW5nIG91ciBob21ld29yaywgc2Vla2luZyBkaXNjb25maXJtaW5nICBldmlkZW5jZSwgYW5kIHF1ZXN0aW9uaW5nIG91ciBhc3N1bXB0aW9ucycsIHNob3cgdGhhdCBldmVuIGV4cGVydGlzZSBkb2VzIG5vdCBhbHdheXMgaGVscCBpbiByb290aW5nIG91dCAgZmFsc2UgaW5mb3JtYXRpb24uIEFsc28sIHRoZSBsaW5rIGJldHdlZW4gZW5oYW5jZWQgc2VsZi1rbm93bGVkZ2UgYW5kIGJldHRlciBwZXJmb3JtYW5jZSBpcyBub3QgY292ZXJlZCAgaW4gdGhlIHBhc3NhZ2UuIFRoZSBpbmZvcm1hdGlvbiBub3doZXJlIHN0YXRlcyB0aGF0IHBvb3Igc2VsZi1rbm93bGVkZ2UgaXMgdGhlIGNhdXNlIG9mIHBvb3IgcGVyZm9ybWFuY2UuICBTbywgdGhpcyBhc3N1bXB0aW9uIGlzIG5vdCBjb3JyZWN0LiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 12,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Children in public spaces are susceptible to sexual crimes. 2. Sexual crimes have receded in public spaces because of them being shifted online. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZSBzaWdodCBvZiBjaGlsZHJlbiBwbGF5aW5nIG9uIHRoZSBzdHJlZXQgb3IgaW4gcGFyay0gbGlrZSBzcGFjZXMgaGFkIGFscmVhZHkgYmVjb21lIGEgcmFyaXR5IGFzIHNleHVhbCBjcmltZXMgYmVjYW1lIG1vcmUgY29tbW9uLiBBcyBjaGlsZHJlbiByZWNlZGVkIGZyb20gIHB1YmxpYyB2aWV3LCB0aGV5IGJlY2FtZSBzdWJqZWN0IHRvIG9wcHJlc3Npb24gdGhyb3VnaCB0aGUgc28tY2FsbGVkIHNvY2lhbCBtZWRpYS4nIEl0IGltcGxpZXMgaW4gcHVibGljICB2aWV3LCBpLmUuIHB1YmxpYyBwbGFjZXMgbGlrZSBwYXJrcyBhbmQgc3RyZWV0cywgY2hpbGRyZW4gYXJlIHN1c2NlcHRpYmxlIHRvIHNleHVhbCBjcmltZXMuIFNvIHRoaXMgYXNzdW1wdGlvbiAgaXMgY29ycmVjdC4gICBBc3N1bXB0aW9uIDIgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZSBzaWdodCBvZiBjaGlsZHJlbiBwbGF5aW5nIG9uIHRoZSBzdHJlZXQgb3IgaW4gcGFyay0gbGlrZSBzcGFjZXMgaGFkIGFscmVhZHkgYmVjb21lIGEgcmFyaXR5IGFzIHNleHVhbCBjcmltZXMgYmVjYW1lIG1vcmUgY29tbW9uLiBBcyBjaGlsZHJlbiByZWNlZGVkIGZyb20gIHB1YmxpYyB2aWV3LCB0aGV5IGJlY2FtZSBzdWJqZWN0IHRvIG9wcHJlc3Npb24gdGhyb3VnaCB0aGUgc28tY2FsbGVkIHNvY2lhbCBtZWRpYS4nIFRoZSBwYXNzYWdlIGRvZXMgbm90ICBtZW50aW9uIHRoYXQgc2V4dWFsIGNyaW1lcyBoYXZlIHNoaWZ0ZWQgdG8gc29jaWFsIG1lZGlhLiBBbHNvLCBpdCBkb2VzIG5vdCBtZW50aW9uIHRoYXQgc2V4dWFsIGNyaW1lcyBoYXZlICBiZWVuIHJlZHVjZWQgaW4gcHVibGljIHNwYWNlcy4gU28gdGhpcyBhc3N1bXB0aW9uIGlzIGluY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 13,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Children have easy access to sexual content online. 2. Tech giants are responsible for the increase in online sexual crimes. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ1RoZWlyIGV4cG9zdXJlIHRvIHZpb2xlbnQgdmlkZW9zLCBwb3Jub2dyYXBoeSBhbmQgIHRlcnJvcml6aW5nIG1lc3NhZ2VzIGlzIGNvbW1vbi4nIEl0IGltcGxpZXMgdGhhdCBhY2Nlc3MgdG8gc3VjaCBjb250ZW50IGlzIHF1aXRlIGVhc3kuICAgIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnVGVjaCBnaWFudHMgcmVtb3ZlIG1pbGxpb25zIG9mIHN1Y2ggbWF0ZXJpYWwgYXMgcGFydCAgb2YgdGhlaXIgY29udGVudCBtb2RlcmF0aW9uIGV4ZXJjaXNlLiBJdCBpcyBhIHN0cmFuZ2Ugcml0dWFsLCBmb3IgdGhlc2UgdmVyeSBjb21wYW5pZXMgYWN0aXZlbHkgZW5jb3VyYWdlICBjaGlsZHJlbiB0byBwYXJ0aWNpcGF0ZSBpbiBkaWdpdGFsIGFjdGl2aXR5LicgSXQgaW1wbGllcyB0ZWNoIGdpYW50cyBhcmUgcmVzcG9uc2libGUgZm9yIGVuY291cmFnaW5nIGNoaWxkcmVuIHRvICB0YWtlIHBhcnQgaW4gZGlnaXRhbCBhY3Rpdml0aWVzLCBidXQgaXQgZG9lcyBub3QgbWVudGlvbiB0aGF0IHRoZXkgYXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgaW5jcmVhc2UgaW4gb25saW5lICBzZXh1YWwgY3JpbWVzLiBHb2luZyBieSB0aGUgbGltaXRlZCBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZSwgdGVjaCBnaWFudHMgY2Fubm90IGJlIGRpcmVjdGx5IGhlbGQgIHJlc3BvbnNpYmxlIGZvciB0aGUgaW5jcmVhc2UgaW4gb25saW5lIHNleHVhbCBjcmltZXMsIGFzIHRoZXkgb25seSBwcm92aWRlIGEgcGxhdGZvcm0gZm9yIGRpZ2l0YWwgIGNvbW11bmljYXRpb24sIGluIGdlbmVyYWwuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2         5                                                                                                                                                             "
      }
    },
    {
      "index" : 14,
      "question" : "In a code language, 'POWER' is written as 'WEMZX', then in the same language, how would you write 'STABLE'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEdpdmVuIENvZGU6ICBQT1dFUiAtPiBXRU1aWCAgIFNpbWlsYXJseSwgICAgICAgNSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEhlbmNlLCB3b3JkICdTVEFCTEUnIHdpbGwgYmUgY29kZWQgYXMgJ0JJSlRNQScuICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " BMXZMC ",
        "option2" : " BIJTMA ",
        "option3" : " DKRTMA ",
        "option4" : " CKRSMA  "
      }
    },
    {
      "index" : 15,
      "question" : "Names of 6 friends are written on 6 different faces of a cube. If 'Sita' is in between 'Ram' and 'Aum', 'Rohit' is opposite to 'Animesh', then which name must be on the face opposite to 'Kavita'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEhlcmUgaXQgaXMgY2xlYXJseSBtZW50aW9uZWQgdGhhdCBSb2hpdCBpcyBvcHBvc2l0ZSB0byBBbmltZXNoLiBBbHNvLCBTaXRhIGlzIGluIGJldHdlZW4gUmFtIGFuZCBBdW0sICB3aGljaCBtZWFucyB0aGF0IFJhbSBhbmQgQXVtIG11c3QgIGJlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIuICBOb3csIHdlIGFyZSBsZWZ0IG9ubHkgd2l0aCBLYXZpdGEgYW5kIFNpdGEuIFNvLCB0aGV5IHdpbGwgYmUgZmFjaW5nIGVhY2ggb3RoZXIuICAgUmFtIOKftyBBdW0gIFJvaGl0IOKftyBBbmltZXNoICBLYXZpdGEg4p+3IFNpdGEgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Aum ",
        "option2" : " Animesh ",
        "option3" : " Ram ",
        "option4" : " Sita  "
      }
    },
    {
      "index" : 16,
      "question" : "The given question diagram shows three different views of the same cube when it is rotated in a particular way.   Four such views are also given in the options. However, out of the four options given, one of them does not confirm to the original cube. Which among the following options can be marked as your answer? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEZyb20gMm5kIGFuZCAzcmQgZGljZSwgd2UgZmluZCB0aGF0IHRoZXRoYSBpcyBjb21tb24gaW4gYm90aCBkaWNlIGFuZCBpcyBhdCB0aGUgc2FtZSBwbGFjZS4gU28sIHRoZXRoYSB3aWxsIGJlIG9wcG9zaXRlICB0byDOpiwgKiBpcyBvcHBvc2l0ZSB0byDOsSBhbmQgIGlzIG9wcG9zaXRlIHRvICMuICBCeSBvYnNlcnZpbmcgdGhlIGZpZ3VyZXMgZ2l2ZW4gaW4gdGhlIG9wdGlvbnMsIHdlIGNhbiBjb25jbHVkZSB0aGF0IGluIG9wdGlvbiAoYyksIHRoZXRoYSBpcyBub3Qgb3Bwb3NpdGUgdG8gzqYsIGJ1dCAgaXMgcmF0aGVyIHNob3duIGFkamFjZW50IHRvIM6mLiBUaGVyZWZvcmUsIHdlIGNhbiBzYXkgdGhhdCBvcHRpb24gKGMpIGRvZXMgbm90IGNvbmZpcm0gdG8gdGhlIG9yaWdpbmFsIGN1YmUgLSAgaXQgY2FuIGJlIG1hcmtlZCBhcyBvdXIgYW5zd2VyLiAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIEV4cGxhbmF0aW9uIGZvciBRdWVzdGlvbnMgMTcgJiAxODogIE1yLiBBbnVyYWcgd2FzIHRoZSBIT0Qgb2YgRWNvbm9taWNzLCBzbyBoaXMgZHJlc3MgY29kZSBtdXN0IGhhdmUgYmVlbiBjb2lucy4gTXIuIERhcnBhbiB3YXMgZHJlc3NlZCAgYXMgYSB0ZXN0IHR1YmUsIHdoaWNoIG1lYW5zIGhlIHdhcyB0aGUgSE9EIG9mIENoZW1pc3RyeS4gTXJzLiBDaGFuZGFuaSBSb3kgd2FzIHRoZSBIT0Qgb2YgUGh5c2ljcywgIHdoaWNoIG1lYW5zIGhlciBkcmVzcyBjb2RlIG11c3QgaGF2ZSBiZWVuIHdpcmUuICAgSE9EIFN1YmplY3QgRHJlc3MgY29kZSAgTXIuIEFudXJhZyBFY29ub21pY3MgQ29pbnMgIE1yLiBEYXJwYW4gQ2hlbWlzdHJ5IFRlc3QgdHViZSAgTXJzLiBDaGFuZGFuaSBSb3kgUGh5c2ljcyBXaXJlICAgIE5laXRoZXIgTXJzLiBWaW1sYSBub3IgTXJzLiBDaGFkYW5pIFJveSB3YXMgZHJlc3NlZCBhcyBhYmFjdXMuIE5vbmUgb2YgdGhlIG1lbiB3YXMgSE9EIG9mIEdlb2dyYXBoeS4gIFNvLCBNci4gRXNtaWxlIGRyZXNzIGNvZGUgbXVzdCBoYXZlIGJlZW4gYWJhY3VzLCBhbmQgaGUgbXVzdCBiZSB0aGUgSE9EIG9mIE1hdGhzLiBNcnMuIFZpbWxhIG11c3QgIGhhdmUgYmVlbiB0aGUgSE9EIG9mIEdlb2dyYXBoeSwgYW5kIGhlciBkcmVzcyBjb2RlIG11c3QgaGF2ZSBiZWVuIGEgZ2xvYmUuICAgSGVuY2UgdGhlIGZpbmFsIGFycmFuZ2VtZW50IHdpbGwgYmU6ICBIT0QgU3ViamVjdCBEcmVzcyBjb2RlICBNci4gQW51cmFnIEVjb25vbWljcyBDb2lucyAgTXIuIERhcnBhbiBDaGVtaXN0cnkgVGVzdCB0dWJlICBNcnMuIENoYW5kYW5pIFJveSBQaHlzaWNzIFdpcmUgIE1ycy4gVmltbGEgR2VvZ3JhcGh5IEdsb2JlICBNci4gRXNtaWxlIE1hdGhzIEFiYWN1cyAgICAgICAgNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  ",
        "option2" : "  ",
        "option3" : "  ",
        "option4" : "   Directions for the following 2 (two) items:  Read the following information and answer the two  questions that follow.  At a university farewell party all the HODs - Mr.  Anurag, Mrs. Vimla, Mrs. Chadani Roy, Mr. Darpan  and Mr. Esmile were asked to dress as an object viz.  test tube, wire, globe, coins and abacus, that represented  their departments viz. Chemistry, Physics, Geography,  Economics and Mathematics, not necessarily in the  same order. The dress matches the subject.  Mr. Anurag was HOD of Economics. Neither Mrs.  Vimla nor Mrs. Chadani Roy was dressed as abacus.  None of the men was HOD of Geography. Mr. Darpan  was dressed as a test tube. Mrs. Chandani Roy was  HOD of Physics. "
      }
    },
    {
      "index" : 17,
      "question" : "Which person was dressed as a globe? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IE1ycy4gVmltbGEgd2FzIGRyZXNzZWQgYXMgYSBnbG9iZS4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mrs. Chadani ",
        "option2" : " Mrs. Vimla ",
        "option3" : " Mr. Darpan ",
        "option4" : " Mr. Esmile  "
      }
    },
    {
      "index" : 18,
      "question" : "What was the department of Mr. Esmile? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IE1yLiBFc21pbGUncyBkZXBhcnRtZW50IHdhcyBtYXRocy4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Mathematics ",
        "option2" : " Chemistry ",
        "option3" : " Physics ",
        "option4" : " Geography  "
      }
    },
    {
      "index" : 19,
      "question" : "Find the missing term in the given series. 315, 535, 726, 890, ?, 1145 ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEdpdmVuIHNlcmllczogIDMxNSwgNTM1LCA3MjYsIDg5MCwgPywgMTE0NSAgVGhlIGFib3ZlIHNlcmllcyBmb2xsb3dzIHRoZSBmb2xsb3dpbmcgcGF0dGVybjogIDMxNS0+IEZpcnN0IHRlcm0gIDMxNSArIFsoMTUpMiAtIDVdIC0+IDUzNSAgNTM1ICsgWygxNCkyIC0gNV0gLT43MjYgIDcyNiArIFsoMTMpMiAtIDVdIC0+IDg5MCAgPyA9IDg5MCArIFsoMTIpMiAtIDVdIC0+MTAyOSAoUmVxdWlyZWQgdGVybSkgIDEwMjkgKyBbKDExKTIgLSA1XSAtPjExNDUgIFNvLCBtaXNzaW5nIHRlcm0gaXMgMTAyOS4gIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1225 ",
        "option2" : " 1015 ",
        "option3" : " 12242 ",
        "option4" : " 1029        6                                                                                                                                                             "
      }
    },
    {
      "index" : 20,
      "question" : "Find the wrong term in the given series. MRIC, OLNR, QNOW, SLRT ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEdpdmVuIFNlcmllczogIE1SSUMsIE9MTlIsIFFOT1csIFNMUlQgIFBhdHRlcm4gZm9sbG93ZWQgaGVyZSBpczogICBTbywgT0xOUiBpcyB0aGUgd3JvbmcgdGVybS4gICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " MRIC ",
        "option2" : " OLNR ",
        "option3" : " QNOW ",
        "option4" : " SLRT   Directions for the following 3 (three) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 21,
      "question" : "Based on the above passage, the following assumptions have been made: 1. State funding of elections could solve the issue of electoral corruption. 2. Regular elections do not guarantee the existence of true democracy. 3. It is not possible to deal with political corruption even with democracy in place. Which of the above assumptions is/are invalid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBhc3N1bXB0aW9uIGluIHRoZSBzdGF0ZW1lbnQgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCAgY292ZXIgdGhlIGNvbnRleHQgb2Ygc3RhdGUgZnVuZGluZyBvZiBlbGVjdGlvbnMgYW5kIGl0cyBwb3RlbnRpYWwgdG8gc29sdmUgdGhlIGlzc3VlIG9mIGVsZWN0b3JhbCBjb3JydXB0aW9uLiAgVGhlcmVmb3JlLCB0aGlzIGFzc3VtcHRpb24gaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gIEFzc3VtcHRpb24gMiBpcyBjb3JyZWN0LiBUaGUgZ2l2ZW4gYXNzdW1wdGlvbiBpcyBjb3JyZWN0IGR1ZSB0byB0aGUgZm9sbG93aW5nIGxpbmVzIGZyb20gdGhlIHBhc3NhZ2UgICdXaXRob3V0IGVmZmVjdGl2ZSBwcm90ZWN0aW9uLCBlbGVjdGlvbnMgY2FuIGJlIGEgY2VudHJhbCBjb21wb25lbnQgaW4gY3ljbGVzIG9mIHN5c3RlbWljIGNvcnJ1cHRpb24uIFRoaXMgIGlzIGluY3JlYXNpbmdseSB0cnVlIGFzIGV2ZW4gYXV0b2NyYXRpYyBsZWFkZXJzIHVzZSBlbGVjdGlvbnMgZm9yIHNvbWUgZm9ybSBvZiBsZWdpdGltYWN5IGZvciB0aGVpciBydWxlLicgIE1lcmVseSBob2xkaW5nIGVsZWN0aW9ucyBkb2VzIG5vdCBndWFyYW50ZWUgdGhhdCBkZW1vY3JhY3kgZXhpc3RzIGluIHRoZSB0cnVlIHNlbnNlIGJlY2F1c2UgdGhlc2UgZWxlY3Rpb25zICBjYW4gYmUgbWFuaXB1bGF0ZWQgYnkgYXV0b2NyYXRpYyBsZWFkZXJzIHVzaW5nIG1vbmV5IG9yIGJ5IGNvZXJjaW5nIHZvdGVycy4gIEFzc3VtcHRpb24gMyBpcyBpbmNvcnJlY3QuIFRoZSBzdGF0ZW1lbnQgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSBvZiB0aGUgZm9sbG93aW5nIGxpbmVzICdUbyB0YWNrbGUgdGhlIHJvb3RzICBvZiBwb2xpdGljYWwgY29ycnVwdGlvbiBhbmQgcHVzaCBiYWNrIG9uIGF1dG9jcmFjeSwgZGVtb2NyYXRpYyBhY3RvcnMgbXVzdCBjb25mcm9udCBvcGFxdWUgYW5kIGlsbGljaXQgIHBvbGl0aWNhbCBmdW5kaW5nIGFuZCBzcGVuZGluZyAtIGZyb20gaW5mbHVlbmNlIHBlZGRsaW5nIHRvIHN0YXRlIGNhcHR1cmUnLiBUaGVzZSBsaW5lcyBwcmVzZW50IGEgd2VsbC1sYWlkICBtZWNoYW5pc20gdG8gZGVhbCB3aXRoIHRoZSBpc3N1ZSBvZiBwb2xpdGljYWwgY29ycnVwdGlvbi4gVGhlcmVmb3JlLCB0aGUgZ2l2ZW4gYXNzdW1wdGlvbiwgd2hpY2ggc2F5cyBpdCBpcyAgbm90IHBvc3NpYmxlIHRvIGRlYWwgd2l0aCBwb2xpdGljYWwgY29ycnVwdGlvbiBldmVuIHdpdGggZGVtb2NyYWN5IGluIHBsYWNlLCBpcyBub3QgY29ycmVjdC4gICAgICAgNyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3 "
      }
    },
    {
      "index" : 22,
      "question" : "What does the author mean by 'original sin' in the above passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdTb21lIGhhdmUgY2FsbGVkIGlsbGljaXQgY2FtcGFpZ24gIGZpbmFuY2UgdGhlICdvcmlnaW5hbCBzaW4nIG9mIGNvcnJ1cHRpb24gYmVjYXVzZSBvZiB0aGUgd2F5IGl0IGJ1aWxkcyBhbmQgYm9uZHMgY29ycnVwdCBsaW5rcyBiZXR3ZWVuIHRoZSAgcHVibGljIGFuZCBwcml2YXRlIHNlY3RvcnMnLCBpcyBub3QgcmVsYXRlZCB0byB0aGUgaXNzdWUgb2YgYW4gYXV0b2NyYXRpYyBsZWFkZXIgdXNpbmcgZWxlY3Rpb25zIGZvciBsZWdpdGltYWN5LiAgSGVuY2UsIHRoaXMgaXMgbm90IHRoZSBpbnRlbmRlZCBtZWFuaW5nLiBJdCB0YWxrcyBhYm91dCB0aGUgbGlua2FnZSBiZXR3ZWVuIHRoZSBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9yIHRoYXQgIGV2ZW50dWFsbHkgbGVhZHMgdG8gY29ycnVwdGlvbi4gICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhpcyBvcHRpb24gaXMgbm90IGNvcnJlY3QgYmVjYXVzZSBpdCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGFuZCBpcyAgbm93aGVyZSBjb3ZlcmVkIGluIHRoZSBwYXNzYWdlLiBUaGUgbWVjaGFuaXNtIG9mIG1vbml0b3JpbmcgcG9saXRpY2FsIGZ1bmRpbmcgaXMgbm90IGRpc2N1c3NlZCBhbnl3aGVyZSAgaW4gdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIG9wdGlvbiBjb3VsZCBiZSBjb25mdXNpbmcuIEhvd2V2ZXIsIHRoZSBsaW5lICdTb21lIGhhdmUgY2FsbGVkIGlsbGljaXQgIGNhbXBhaWduIGZpbmFuY2UgdGhlICdvcmlnaW5hbCBzaW4nIG9mIGNvcnJ1cHRpb24gYmVjYXVzZSBvZiB0aGUgd2F5IGl0IGJ1aWxkcyBhbmQgYm9uZHMgY29ycnVwdCBsaW5rcyAgYmV0d2VlbiB0aGUgcHVibGljIGFuZCBwcml2YXRlIHNlY3RvcnMnLCBkb2VzIG5vdCBpbXBseSB0aGF0IGlsbGVnYWwgZnVuZGluZyBleGlzdGVkIHNpbmNlIHRoZSBzdGFydCBvZiB0aGUgIGNvbmNlcHQgb2YgZWxlY3Rpb25zLiBJdCBtZXJlbHkgc3RhdGVzIHRoYXQgaWxsZWdhbCBmdW5kaW5nIGluIGVsZWN0aW9ucyByZXN1bHRzIGluIGJ1aWxkaW5nIGEgbmV4dXMgYmV0d2VlbiB0aGUgIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzLiAgT3B0aW9uIChkKSBpcyBjb3JyZWN0LiBUaGlzIG9wdGlvbiBleHBsYWlucyB0aGUgY29ycmVjdCBtZWFuaW5nIG9mIHRoZSB0ZXJtICdvcmlnaW5hbCBzaW4nLiBUaGUgbGluZXMgJ1NvbWUgIGhhdmUgY2FsbGVkIGlsbGljaXQgY2FtcGFpZ24gZmluYW5jZSB0aGUgJ29yaWdpbmFsIHNpbicgb2YgY29ycnVwdGlvbiBiZWNhdXNlIG9mIHRoZSB3YXkgaXQgYnVpbGRzIGFuZCBib25kcyAgY29ycnVwdCBsaW5rcyBiZXR3ZWVuIHRoZSBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9ycycsIGNvbmZvcm0gdG8gdGhlIG1lYW5pbmcgY29udmV5ZWQgaW4gdGhlIGdpdmVuIG9wdGlvbiAgdGhhdCBpbGxlZ2FsIGZ1bmRpbmcgb2YgZWxlY3Rpb25zIGJ5IHRoZSBwcml2YXRlIHNlY3RvciBpcyB0aGUgcm9vdCBjYXVzZSBvZiBwb2xpdGljYWwgY29ycnVwdGlvbi4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Normally, autocratic leaders use elections  to gain legitimacy to their rule.  ",
        "option2" : " Political funding by the private sector  should be monitored by a neutral agency. ",
        "option3" : " The issue of illegal campaign funding  originally started with the concept of  elections. ",
        "option4" : " Illegal funding of political parties by the  private sector in elections is the root cause  of political corruption. "
      }
    },
    {
      "index" : 23,
      "question" : "Based on the above passage, the following assumptions have been made: 1. Good governance and human rights are mutually reinforcing. 2. It is not easy to realize human rights without proper frameworks, institutions, and processes. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBjb3JyZWN0LiBUaGlzIGFzc3VtcHRpb24gaXMgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBmb2xsb3dpbmcgbGluZXMgaW4gdGhlIHBhc3NhZ2UgJ0h1bWFuICByaWdodHMgcHJpbmNpcGxlcyBpbmZvcm0gdGhlIGNvbnRlbnQgb2YgZ29vZCBnb3Zlcm5hbmNlIGVmZm9ydHM6IHRoZXkgbWF5IGluZm9ybSB0aGUgZGV2ZWxvcG1lbnQgb2YgIGxlZ2lzbGF0aXZlIGZyYW1ld29ya3MsIHBvbGljaWVzLCBwcm9ncmFtbWVzLCBidWRnZXRhcnkgYWxsb2NhdGlvbnMsIGFuZCBvdGhlciBtZWFzdXJlcy4gT24gdGhlIG90aGVyICBoYW5kLCB3aXRob3V0IGdvb2QgZ292ZXJuYW5jZSwgaHVtYW4gcmlnaHRzIGNhbm5vdCBiZSByZXNwZWN0ZWQgYW5kIHByb3RlY3RlZCBzdXN0YWluYWJseScuIFRoZXNlICBsaW5lcyBzaG93IHRoYXQgaHVtYW4gcmlnaHRzIGFuZCBnb29kIGdvdmVybmFuY2UgZ28gaGFuZCBpbiBoYW5kLiAgQXNzdW1wdGlvbiAyIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnVGhlIGltcGxlbWVudGF0aW9uIG9mIGh1bWFuIHJpZ2h0cyByZWxpZXMgb24gYSBjb25kdWNpdmUgYW5kICBlbmFibGluZyBlbnZpcm9ubWVudC4gVGhpcyBpbmNsdWRlcyBhcHByb3ByaWF0ZSBsZWdhbCBmcmFtZXdvcmtzIGFuZCBpbnN0aXR1dGlvbnMgYXMgd2VsbCBhcyBwb2xpdGljYWwsICBtYW5hZ2VyaWFsLCBhbmQgYWRtaW5pc3RyYXRpdmUgcHJvY2Vzc2VzIHJlc3BvbnNpYmxlIGZvciByZXNwb25kaW5nIHRvIHRoZSByaWdodHMgYW5kIG5lZWRzIG9mIHRoZSAgcG9wdWxhdGlvbicsIHN1Z2dlc3QgdGhhdCBpdCBpcyBpbXBvcnRhbnQgdG8gaGF2ZSBhIHByb3BlciBmcmFtZXdvcmssIGluc3RpdHV0aW9ucywgYW5kIHByb2Nlc3NlcyAoY29uZHVjaXZlICBhbmQgZW5hYmxpbmcgZW52aXJvbm1lbnQpIGZvciBpbXBsZW1lbnRhdGlvbiBvZiBodW1hbiByaWdodHMgYW5kIG1lZXRpbmcgdGhlIG5lZWRzIG9mIHRoZSBwb3B1bGF0aW9uLiAgVGhlcmVmb3JlLCB0aGlzIGFzc3VtcHRpb24gaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2        7                                                                                                                                                             "
      }
    },
    {
      "index" : 24,
      "question" : "Find the missing term in the given series. 247, 416, 705, 1066, 1595, ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEdpdmVuIFNlcmllczogIDI0NywgNDE2LCA3MDUsIDEwNjYsIDE1OTUsID8gIFBhdHRlcm4gYmVpbmcgZm9sbG93ZWQgaW4gdGhlIGdpdmVuIHNlcmllcyBpczogNDE2IC0gMjQ3ID0gMTY5ID0gMTMyICA3MDUgLSA0MTYgPSAyODkgPSAxNzIgIDEwNjYgLSA3MDUgPSAzNjEgPSAxOTIgIDE1OTUgLSAxMDY2ID0gNTI5ID0gMjMyICBOZXh0IHRlcm0gPSAxNTk1ICsgMjkyID0gMTU5NSArIDg0MSA9IDI0MzYgIFRodXMsIHJlcXVpcmVkIG1pc3NpbmcgbnVtYmVyIGlzIDI0MzYuICBIZW5jZSwgb3B0aW9uIChjKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1995 ",
        "option2" : " 2096 ",
        "option3" : " 2436 ",
        "option4" : " 1795  "
      }
    },
    {
      "index" : 25,
      "question" : "If 'BEAUTIFUL' is coded as '97' in a code language, then what will be the code for 'WONDERFUL'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEdpdmVuIGNvZGU6ICBCRUFVVElGVUwgLT4gOTcgIFRoZSBhbHBoYWJldGljYWwgcG9zaXRpb24gb2YgbGV0dGVyIGFzIGZvbGxvd3MgICBTdW0gb2YgdGhlc2UgbnVtYmVycyA9IDIgKyA1ICsgMSArIDIxICsgMjAgKyA5ICsgNiArIDIxICsgMTIgPSA5NyAgU28sIHdvcmQgJ0JFQVVUSUZVTCcgd2lsbCBiZSBjb2RlZCBhcyAnOTcnLiAgICAgICA4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBcHBseWluZyB0aGUgc2ltaWxhciBjb25jZXB0IGluICdXT05ERVJGVUwnLiAgIFNvLCBzdW0gb2YgdGhlc2UgbnVtYmVycyA9IDIzICsgMTUgKyAxNCArIDQgKyA1ICsgMTggKyA2ICsgMjEgKyAxMiA9IDExOCAgU28sIHdvcmQgJ1dPTkRFUkZVTCcgd2lsbCBiZSBjb2RlZCBhcyAnMTE4Jy4gIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 87 ",
        "option2" : " 99 ",
        "option3" : " 118 ",
        "option4" : " 121  "
      }
    },
    {
      "index" : 26,
      "question" : "Ravi painted a cube leaving one face unpainted. If this cube is divided into 64 small cubes, how many cubes will be there having at least one face painted? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICBuMyA9IDY0ICBvciBuID0gNCAgTnVtYmVyIG9mIGlubmVyIGN1YmVzIHdpdGggbm8gZmFjZSBwYWludGVkID0gKG4gLSAyKTMgPSAoNCAtIDIpMyA9IDggIEJ1dCwgZm91ciBtaWRkbGUgY3ViZXMgb24gdGhlIHVucGFpbnRlZCBzaWRlIHdpbGwgYWxzbyBoYXZlIG5vIHBhaW50ZWQgZmFjZS4gICAgU28sIGN1YmVzIHdoaWNoIGFyZSBub3QgcGFpbnRlZCBhdCBhbGwgPSA4ICsgNCA9IDEyICDiiLQgTnVtYmVyIG9mIGN1YmUgd2l0aCBhdCBsZWFzdCBvbmUgZmFjZSBwYWludGVkID0gVG90YWwgbnVtYmVyIG9mIGN1YmVzIC0gQ3ViZXMgd2l0aCBubyBmYWNlIHBhaW50ZWQgPSAgNjQgLSAxMiA9IDUyICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 52 ",
        "option2" : " 48 ",
        "option3" : " 62 ",
        "option4" : " 36  "
      }
    },
    {
      "index" : 27,
      "question" : "The six faces of a cube are coloured with black colour. This cube is now cut into 343 small but identical cubes. If N is the number of cubes that are not coloured on any of their faces, then which of the following is true about the value of N? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEFjY29yZGluZyB0byB0aGUgcXVlc3Rpb24sICBuMyA9IDM0MyAgb3IgbiA9IDcgIFRoZSBudW1iZXIgb2Ygc21hbGxlciBjdWJlcyB3aXRoIG5vIGNvbG91cmVkIGZhY2UgPSAobiAtIDIpMyA9ICg3IC0gMikzID0gKDUpMyA9IDEyNSAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 116 < N less than equal to 130 ",
        "option2" : " 110 less than equal to N less than equal to 116 ",
        "option3" : " 106 less than equal to N less than equal to 112 ",
        "option4" : " 116 less than equal to N greater than equal to 126 "
      }
    },
    {
      "index" : 28,
      "question" : "Four different positions of a dice are given below.  Find the alphabet on the face opposite to the one having P. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IExldCB1cyB0YWtlIGRpY2UgKGEpIGFuZCAoYyksIHdoZXJlIFEgYW5kIFIgYXJlIGNvbW1vbi4gVGh1cywgdW5jb21tb24gZmFjZXMgb2YgdGhlIHR3byBkaWNlLCBpLmUuICBQIGFuZCAgUyBtdXN0IGJlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIuICBIZW5jZSwgb3B0aW9uIChkKSBpcyBjb3JyZWN0ICBFeHBsYW5hdGlvbiBmb3IgUXVlc3Rpb25zIDI5IHRvIDMxOiAgUCB3ZWFycyBSZWQgc2hpcnQgYW5kIHdvcmtzIGFzIGEgVGVhY2hlci4gVGhlIG9uZSB3ZWFyaW5nIE9yYW5nZSBzaGlydCB3b3JrcyBhcyBhIFRhaWxvciBhbmQgdGhlIG9uZSAgd2VhcmluZyBQaW5rIHNoaXJ0IHdvcmtzIGFzIGEgQ2FycGVudGVyLiBUIHdvcmtzIGFzIGEgV2F0Y2htZW4sIHdoaWxlIFIgd29ya3MgYXMgYSBDYXJwZW50ZXIuICBQcm9mZXNzaW9uIFBlcnNvbiBDb2xvdXIgb2Ygc2hpcnQgIFRlYWNoZXIgUCBSZWQgIFRhaWxvciAgT3JhbmdlICBDYXJwZW50ZXIgUiBQaW5rICBXYXRjaG1hbiBUICAgUG9saWNlICAgIFBsdW1iZXIgICAgU2luY2UsIFUgZG9lcyBub3Qgd29yayBhcyBhIFBsdW1iZXIgb3IgYXMgUG9saWNlLCBoZSB3aWxsIHdvcmsgYXMgYSBUYWlsb3IuICAgIFMgZG9lcyBub3Qgd29yayBhcyBQb2xpY2UsIHNvIFMgbXVzdCBiZSB0aGUgUGx1bWJlci4gU28sIFEgd2lsbCBiZSB0aGUgcG9saWNlbWFuLiAgIFByb2Zlc3Npb24gUGVyc29uIENvbG91ciBvZiBzaGlydCAgVGVhY2hlciBQIFJlZCAgVGFpbG9yIFUgT3JhbmdlICBDYXJwZW50ZXIgUiBQaW5rICBXYXRjaG1hbiBUICAgUG9saWNlIFEgICBQbHVtYmVyIFMgICBUaGUgb25lIHdobyB3b3JrcyBhcyBQb2xpY2UgZG9lcyBub3Qgd2VhciBCcm93biBvciBCbGFjayBzaGlydC4gU28sIFBvbGljZSB3aWxsIHdlYXIgR3JleSBzaGlydC4gIFBsdW1iZXIgZG9lcyBub3Qgd2VhciBCcm93biBzaGlydC4gU28sIHdlIGNhbiBjb25jbHVkZSB0aGF0IFdhdGNobWFuIHdpbGwgd2VhciBCcm93biBzaGlydCBhbmQgUGx1bWJlciAgd2lsbCB3ZWFyIEJsYWNrIHNoaXJ0LiAgICAgICAgOSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVuY2UsIHRoZSBmaW5hbCBhcnJhbmdlbWVudCBpczogIFByb2Zlc3Npb24gUGVyc29uIENvbG91ciBvZiBzaGlydCAgVGVhY2hlciBQIFJlZCAgVGFpbG9yIFUgT3JhbmdlICBDYXJwZW50ZXIgUiBQaW5rICBXYXRjaG1hbiBUIEJyb3duICBQb2xpY2UgUSBHcmV5ICBQbHVtYmVyIFMgQmxhY2sgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " R ",
        "option2" : " T ",
        "option3" : " O ",
        "option4" : " S   Directions for the following 3 (three) items:  Read the following information and answer the three  questions that follow.  In a family of 6 persons, P, Q, R, S, T and U work as  Carpenter, Teacher, Plumber, Tailor, Police and  Watchman, though not necessarily in the same order.  Moreover, they wear shirts of different colours viz.  Orange, Pink, Red, Black, Brown and Grey, though not  necessarily in the same order.  (i) The one wearing Orange shirt works as a Tailor and  the one wearing Pink shirt works as a Carpenter.  (ii) U neither works as a Plumber nor as a Police.  (iii) P wears Red shirt and works as a Teacher.  (iv) S does not work as Police and the one who wears  brown shirt is not working as a Plumber.  (v) T works as a Watchmen. Neither S nor Q works as  a Tailor.   (vi) The one who works as Police does not wear Brown  or Black shirt. R works as a Carpenter. "
      }
    },
    {
      "index" : 29,
      "question" : "Which pair is correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IFBsdW1iZXIgLSBCbGFjayAtIFMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Watchmen - Grey - T ",
        "option2" : " Tailor - Orange - Q ",
        "option3" : " Carpenter - Pink - U ",
        "option4" : " Plumber - Black - S        8                                                                                                                                                             "
      }
    },
    {
      "index" : 30,
      "question" : "Who is wearing the Brown coloured shirt? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IFdhdGNobWFuIHdlYXJzIEJyb3duIGNvbG91cmVkIHNoaXJ0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Plumber ",
        "option2" : " Watchman ",
        "option3" : " Police ",
        "option4" : " Tailor  "
      }
    },
    {
      "index" : 31,
      "question" : "Who is wearing the Grey coloured shirt? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IFBvbGljZSB3ZWFycyBHcmV5IGNvbG91cmVkIHNoaXJ0LiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Carpenter ",
        "option2" : " Plumber ",
        "option3" : " Police ",
        "option4" : " Watchman   Directions for the following 2 (two) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 32,
      "question" : "According to the passage given above, the economic objectives of both the categories may be 1. To uplift the poor out of the poverty line 2. To allure investors to investment 3. A possibility of crony capitalism Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zLCAnSW4gSW5kaWEsIHBvbGljeW1ha2VycyBoYXZlIGRyYXduIG9uIGJ1ZGdldGFyeSByZXNvdXJjZXMgIGZvciBwcm92aWRpbmcgc3VwcG9ydCB0byBsb3ctaW5jb21lIGhvdXNlaG9sZHMgZm9yIGF1Z21lbnRpbmcgdGhlaXIgY29uc3VtcHRpb24gb2Ygc2VsZWN0ZWQgZ29vZHMgYW5kICBzZXJ2aWNlcycgYW5kICdUaGUgZmlyc3QgY2F0ZWdvcnkgd291bGQgaW5jbHVkZSB0aGUgZnJlZSBvciBzdWJzaWRpemVkIHByb3Zpc2lvbiBvZiBmb29kIGdyYWlucyBhbmQgc2VydmljZXMgIHN1Y2ggYXMgaGVhbHRoIGFuZCBlZHVjYXRpb24uJyBJdCBpbXBsaWVzIHRoZSBvYmplY3RpdmUgb2YgZmlyc3QgY2F0ZWdvcnkgc3VwcG9ydCBpcyB0byBpbXByb3ZlIGNvbmRpdGlvbnMgb2YgIHRoZSBwb29yLCB1cGxpZnQgdGhlIHBvb3Igb3V0IG9mIHBvdmVydHkgYW5kIGltcHJvdmUgb3ZlcmFsbCBzb2Npby1lY29ub21pYyBkZXZlbG9wbWVudC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ09mZmVyaW5nIGluY2VudGl2ZXMgdG8gc3VwcG9ydCBzZWxlY3RlZCBjYXRlZ29yaWVzIG9mICBpbnZlc3RvcnMgYW5kIHByb2R1Y2VycycgYW5kICdFeGFtcGxlcyBvZiB0aGUgbGF0dGVyIGdyb3VwIGluY2x1ZGUgdGhlIGNlbnRyYWwgZ292ZXJubWVudCdzIHJlY2VudCAgaW5pdGlhdGl2ZSBmb3IgcHJvZHVjdGlvbi1saW5rZWQgaW5jZW50aXZlcyB0byB2YXJpb3VzIHNlY3RvcnMgYW5kIHRheCBjb25jZXNzaW9ucy4gSW4gdGhlIHBhc3QsIGluY2VudGl2ZXMgaW4gIHRoZSBmb3JtIG9mIHJlZHVjdGlvbiBvZiBjb3Jwb3JhdGUgdGF4ZXMgaGF2ZSBiZWVuIG9mZmVyZWQgdG8gcHJvbW90ZSBpbnZlc3RtZW50IGluIGdlbmVyYWwsIG9yIGluIGNlcnRhaW4gIHJlZ2lvbnMgc3VjaCBhcyBiYWNrd2FyZCBhcmVhcy4nIEl0IGltcGxpZXMgdGhhdCB0aGUgb2JqZWN0aXZlIG9mIHRoaXMgdHlwZSBvZiBzdXBwb3J0IGlzIHRvIHByb21vdGUgIGludmVzdG1lbnQgaW4gdGhlIGNvdW50cnkgYnkgaW5jZW50aXZpc2luZyBpbnZlc3RvcnMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGUgbmV4dXMgb2YgcG9saXRpY2lhbnMgYW5kIGluZHVzdHJpYWxpc3RzLiBJdCBjb3VsZCAgYmUgYSBsb2dpY2FsIHBvc3NpYmlsaXR5LCBidXQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZSBhbmQgaGVuY2UgaXMgaW5jb3JyZWN0LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 3 only ",
        "option3" : " 1, 2 and 3  ",
        "option4" : " 1 and 2 only "
      }
    },
    {
      "index" : 33,
      "question" : "According to the passage, what do employers seek in their employees? 1. Zeal for competition 2. Ability to solve problems 3. Time management 4. Ingenious Select the correct answer using the code given below. ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdUaGV5IGhhdmUgc3BlbnQgeWVhcnMgbGVhcm5pbmcgdGhhdCB0aGUgc3lzdGVtICBlbmNvdXJhZ2VzIGNvbXBldGl0aW9uIGFuZCByZXdhcmRzIGNvbmZvcm1pdHkgYW5kIGNvbXBsaWFuY2UuJyBJdCBpbXBsaWVzIHRoYXQgdGhlIHlvdW5nIGpvYiBzZWVrZXJzICBhc3N1bWUgdGhhdCB0aGUgc3lzdGVtIG9mIHdvcmsgZW5jb3VyYWdlcyBjb21wZXRpdGlvbiwgYnV0IHRoZSBwYXNzYWdlIG5vd2hlcmUgbWVudGlvbnMgdGhhdCBlbXBsb3llcnMgIGFyZSBsb29raW5nIGZvciB6ZWFsIGZvciBjb21wZXRpdGlvbiBhbW9uZyBlbXBsb3llZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMsICdFbXBsb3llcnMgc2F5IHRoZXkgbmVlZCB5b3VuZyBhZHVsdHMgd2hvIGNhbiB0YWtlIG9uICBuZXcgdGFza3MgYW5kIGNoYWxsZW5nZXMsIGJlIGlubm92YXRpdmUgYW5kIGNvbGxhYm9yYXRpdmUgYW5kIGNvbWUgdXAgd2l0aCBpZGVhcyBmb3IgbmV3IHByb2R1Y3RzIGFuZCAgcHJvY2Vzc2VzLicgVGhlIG5lZWQgZm9yIGlkZWFzIGZvciBuZXcgcHJvZHVjdHMgYW5kIHByb2Nlc3NlcyBhcmlzZXMgaW4gb3JkZXIgdG8gcmVjdGlmeSB0aGUgcHJvYmxlbXMgYW5kICBsaW1pdGF0aW9ucyBvZiBjdXJyZW50IHByb2R1Y3RzIGFuZCBwcm9jZXNzZXMuIFNvLCB1bHRpbWF0ZWx5IGVtcGxveWVycyBsb29rIGZvciBwcm9ibGVtLXNvbHZpbmcgYWJpbGl0eSBpbiAgdGhlaXIgcG90ZW50aWFsIGVtcGxveWVlcywgd2hpY2ggaXMgaW5oZXJlbnQgaW4gbmV3IHRhc2tzIGFuZCBjaGFsbGVuZ2VzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2Ugbm93aGVyZSBtZW50aW9ucyB0aGF0IGVtcGxveWVycyBzZWVrIHRyYWl0cyBvZiB0aW1lIG1hbmFnZW1lbnQgIGZyb20gdGhlaXIgZW1wbG95ZWVzLCBhbmQgaGVuY2UgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB0aGUgcGFzc2FnZS4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucywgJ0VtcGxveWVycyBzYXkgdGhleSBuZWVkIHlvdW5nIGFkdWx0cyB3aG8gY2FuIHRha2Ugb24gIG5ldyB0YXNrcyBhbmQgY2hhbGxlbmdlcywgYmUgaW5ub3ZhdGl2ZSBhbmQgY29sbGFib3JhdGl2ZSBhbmQgY29tZSB1cCB3aXRoIGlkZWFzIGZvciBuZXcgcHJvZHVjdHMgYW5kICBwcm9jZXNzZXMuJyBUaGUgbWVhbmluZyBvZiBpbmdlbmlvdXMgaXMgYSBwZXJzb24gZnVsbCBvZiBuZXcgaWRlYXMgYW5kIGNsZXZlciBhdCBmaW5kaW5nIHNvbHV0aW9ucyB0byAgcHJvYmxlbXMgb3IgYXQgaW52ZW50aW5nIHRoaW5ncy4gICAgICAgIDEwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1, 2, 3, and 4  ",
        "option2" : " 2 and 4 only ",
        "option3" : " 1, 3 and 4 only ",
        "option4" : " 1, 2 and 3 only        9                                                                                                                                                             "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following pattern of numbers: What number should replace the question mark in the third figure? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "ICA5MiB3aWxsIGNvbWUgYXQgdGhlIHBsYWNlIG9mICc/Jy4gIEhlbmNlLCBvcHRpb24gKGEpIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 92 ",
        "option2" : " 81 ",
        "option3" : " 79 ",
        "option4" : " 45  "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following series. L F 3 # R N 8 A @ Y 4 M © W P 6 H U 9 I K 2 E If all the numbers are dropped in the above arrangement, which of the following will be the fourteenth letter/symbol from the left end? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEdpdmVuIHNlcmllczogTCBGIDMgIyBSIE4gOCBBIEAgWSA0IE0gwqkgVyBQIDYgSCBVIDkgSSBLIDIgRSAgSWYgYWxsIG51bWJlciBhcmUgZHJvcHBlZCwgdGhlIGFycmFuZ2VtZW50IHdpbGwgbG9vayBsaWtlOiAgTCBGICMgIFIgTiBBICBAIFkgTSDCqSBXIFAgSCBVIEkgSyBFICBGb3VydGVlbnRoIGxldHRlci9zeW1ib2wgZnJvbSB0aGUgbGVmdCBlbmQgaXMgJ1UnLiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " I ",
        "option2" : " P  ",
        "option3" : " W ",
        "option4" : " U  "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the sequence given below. 5C, 14F, 29I, 50L, ?, 110R, 149U What is the missing element in the above pattern? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEdpdmVuIHNlcmllcyBpczogNUMsIDE0RiwgMjlJLCA1MEwsID8sIDExMFIsIDE0OVUgIEZyb20gdGhlIGFib3ZlIHNlcmllcywgaXQgaXMgY2xlYXIgdGhhdCBlYWNoIGVsZW1lbnQgaXMgYSBjb21iaW5hdGlvbiBvZiBhbiBhbHBoYWJldCBhbmQgYSBudW1iZXIuICAgUGF0dGVybiBvZiBsZXR0ZXJzOiAgRXZlcnkgbmV4dCBsZXR0ZXIgaW4gdGhlIHNlcmllcyBpcyB0aHJlZSBwbGFjZXMgYWhlYWQgb2YgdGhlIHByZXZpb3VzIGxldHRlciBpbiB0aGUgRW5nbGlzaCBhbHBoYWJldGljIHNlcmllcy4gICAgQyArIDMgPSBGOyBGICsgMyA9IEk7IEkgKyAzID0gTDsgTCArIDMgPSBPOyBPICsgMyA9IFI7IFIgKyAzID0gVSAgVGhlcmVmb3JlLCByZXF1aXJlZCBsZXR0ZXIgd2lsbCBiZSBPLiAgUGF0dGVybiBvZiBudW1iZXJzOiAgIFRoZSByZXF1aXJlZCBudW1iZXIgaXMgNzcuICBIZW5jZSwgdGhlIG1pc3NpbmcgZWxlbWVudCBpcyA3N08uICBIZW5jZSwgb3B0aW9uIChhKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 77O ",
        "option2" : " 62S ",
        "option3" : " 70M ",
        "option4" : " 80P  "
      }
    },
    {
      "index" : 37,
      "question" : "Study the following arrangement F N $ 3 2 * W E % ! B M P ( A V  ~ 9 F + S U # L T ^  How many such numbers are there in the above sequence, each of which is immediately preceded by a consonant and immediately followed by a symbol? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "ICBFeHBsYW5hdGlvbiBmb3IgUXVlc3Rpb25zIDM4IHRvIDQxOiAgViBzdHVkaWVzIFB1YmxpYyBBZG1pbmlzdHJhdGlvbi4gUyBsaXZlcyBpbiBNdW1iYWkuIFIgbGl2ZXMgaW4gUGF0bmEgYW5kIHN0dWRpZXMgUG9saXRpY2FsIFNjaWVuY2UuIFcgbGl2ZXMgIGluIENoYW5kaWdhcmguIFRoZSBvbmUgd2hvIHN0dWRpZXMgTWF0aGVtYXRpY3MgbGl2ZXMgaW4gUHVuZS4gUSBzdHVkaWVzIFNvY2lvbG9neS4gICBOZWl0aGVyIFQgbm9yIFYgc3R1ZGllcyBBZ3JpY3VsdHVyZSwgYW5kIHRoZSBzdHVkZW50IHdobyBzdHVkaWVzIEFncmljdWx0dXJlIGxpdmVzIGluIEx1Y2tub3cuIFNvLCBpdCBpcyAgY2xlYXIgdGhhdCBQIGxpdmVzIGluIEx1Y2tub3cgYW5kIHN0dWRpZXMgQWdyaWN1bHR1cmUuICAgICAgIDExICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBTdHVkZW50IFN1YmplY3QgQ2l0eSAgViBQdWJsaWMgQWRtaW5pc3RyYXRpb24gICBTICBNdW1iYWkgIFIgUG9saXRpY2FsIFNjaWVuY2UgUGF0bmEgIFcgIENoYW5kaWdhcmggICAgTWF0aGVtYXRpY3MgUHVuZSAgUSBTb2Npb2xvZ3kgICBQIEFncmljdWx0dXJlIEx1Y2tub3cgIFQgICAgUSBsaXZlcyBuZWl0aGVyIGluIERlbGhpIG5vciBpbiBDaGVubmFpLiBTbywgd2UgY2FuIHNheSB0aGF0IGhlIGxpdmVzIGluIEthbnB1ci4gViBhbmQgVCBtdXN0IGJlIGVpdGhlciBmcm9tICBEZWxoaSBvciBmcm9tIENoZW5uYWkuICAgU3R1ZGVudCBTdWJqZWN0IENpdHkgIFYgUHVibGljIEFkbWluaXN0cmF0aW9uIERlbGhpL0NoZW5uYWkgIFMgIE11bWJhaSAgUiBQb2xpdGljYWwgU2NpZW5jZSBQYXRuYSAgVyAgQ2hhbmRpZ2FyaCAgIFUgTWF0aGVtYXRpY3MgUHVuZSAgUSBTb2Npb2xvZ3kgS2FucHVyICBQIEFncmljdWx0dXJlIEx1Y2tub3cgIFQgIERlbGhpL0NoZW5uYWkgIFMgaXMgbm90IGEgc3R1ZGVudCBvZiBQaHlzaWNzLiBBbHNvLCB0aGUgb25lIHdobyBzdHVkaWVzIFBoeXNpY3MgbmVpdGhlciBsaXZlcyBpbiBEZWxoaSBub3IgaW4gQ2hlbm5haS4gIFNvLCBpdCBpcyBjbGVhciB0aGF0IFcgaXMgYSBzdHVkZW50IG9mIFBoeXNpY3MuIFRoZSByZW1haW5pbmcgc3ViamVjdHMgTWVkaWNpbmUgYW5kIEhpc3Rvcnkgd2lsbCBiZSBzdHVkaWVkICBieSBlaXRoZXIgUyBvciBULiAgIEhlbmNlLCB0aGUgZmluYWwgYXJyYW5nZW1lbnQgd2lsbCBiZTogIFN0dWRlbnQgU3ViamVjdCBDaXR5ICBWIFB1YmxpYyBBZG1pbmlzdHJhdGlvbiBEZWxoaS9DaGVubmFpICBTIE1lZGljaW5lL0hpc3RvcnkgTXVtYmFpICBSIFBvbGl0aWNhbCBTY2llbmNlIFBhdG5hICBXIFBoeXNpY3MgQ2hhbmRpZ2FyaCAgIFUgTWF0aGVtYXRpY3MgUHVuZSAgUSBTb2Npb2xvZ3kgS2FucHVyICBQIEFncmljdWx0dXJlIEx1Y2tub3cgIFQgTWVkaWNpbmUvSGlzdG9yeSBEZWxoaS9DaGVubmFpICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " None ",
        "option2" : " One ",
        "option3" : " Two ",
        "option4" : " Three  Directions for the following 4 (four) items:  Read the following information and answer the four  questions that follow.  Eight students P, Q, R, S, T, U, V and W completed  their Post-Graduation in different subjects -  Mathematics, Medicine, Agriculture, Physics, Political  Science, History, Sociology and Public Administration,  not necessarily in the same order. They live in eight  different cities - Delhi, Mumbai, Chandigarh, Patna,  Lucknow, Kanpur, Chennai and Pune, not necessarily  in the same order.   V studies Public Administration. S who lives in  Mumbai is not a student of Physics. R lives in Patna  and studies Political Science. W lives in Chandigarh,  and the one who studies Mathematics lives in Pune. T  does not live in Pune. Q lives neither in Delhi nor in  Chennai and studies Sociology. Neither T nor V studies  Agriculture, and the student who studies Agriculture  lives in Lucknow. The one who studies Physics neither  lives in Delhi nor in Chennai. "
      }
    },
    {
      "index" : 38,
      "question" : "Who lives in Delhi? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZyb20gdGhlIGdpdmVuIGluZm9ybWF0aW9uLCB3ZSBjYW4ndCBmaW5kIG91dCB3aG8gbGl2ZXMgaW4gRGVsaGkuIFRodXMsIGl0IGNhbid0IGJlIGRldGVybWluZWQuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " P ",
        "option2" : " T ",
        "option3" : " V ",
        "option4" : " Can't be determined.  "
      }
    },
    {
      "index" : 39,
      "question" : "If additional information is given that the one who studies Public Administration lives in Delhi, then which of the following is definitely false? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFRoZSBvbmUgd2hvIHN0dWRpZXMgUHVibGljIEFkbWluaXN0cmF0aW9uIGxpdmVzIGluIERlbGhpLiBUaHVzLCBpdCBpcyBWIHdobyBzdHVkaWVzIFB1YmxpYyBBZG1pbmlzdHJhdGlvbiAgYW5kIGxpdmVzIGluIERlbGhpLiBBbmQgVCB3aG8gc3R1ZGllcyBNZWRpY2luZS9IaXN0b3J5IGxpdmVzIGluIENoZW5uYWkuICBGcm9tIHRoZSBnaXZlbiBpbmZvcm1hdGlvbiwgd2UgY2FuIGNlcnRhaW5seSBzYXkgdGhhdCBUIGRvZXMgbm90IHN0dWR5IEFncmljdWx0dXJlLiAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgZGVmaW5pdGVseSBmYWxzZS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " T lives in Chennai. ",
        "option2" : " T studies Medicine or History. ",
        "option3" : " V lives in Delhi. ",
        "option4" : " T studies Agriculture.        10                                                                                                                                                             "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following combination is not possible? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IFQgLT4gSGlzdG9yeSAtPiBDaGFuZGlnYXJoIGlzIG5vdCBwb3NzaWJsZS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " S -> Medicine -> Mumbai ",
        "option2" : " V -> Public Administration -> Delhi ",
        "option3" : " T -> Medicine -> Delhi ",
        "option4" : " T -> History -> Chandigarh   "
      }
    },
    {
      "index" : 41,
      "question" : "Where does Q live?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IFEgbGl2ZXMgaW4gS2FucHVyLiAgICAgICAgMTIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Patna ",
        "option2" : " Kanpur ",
        "option3" : " Chandigarh ",
        "option4" : " Mumbai   Directions for the following 3 (three) items:  Read the following three passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following statements best reflects the crux of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IE9wdGlvbiAoYSkgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2UgbWVudGlvbnMgJ1RoZSBjb250aW51ZWQgaXJyaWdhdGlvbiB0aHJvdWdoIHRyYWRpdGlvbmFsIHByYWN0aWNlcyBzaW5jZSAgdGhlIGludHJvZHVjdGlvbiBvZiB0aGUgZ3JlZW4gcmV2b2x1dGlvbiBpbiB0aGUgMTk2MHMsIGhvd2V2ZXIsIGhhcyBiZWd1biB0byBzaG93IGl0cyBtdWx0aXR1ZGlub3VzIGlsbCBlZmZlY3RzICBvbiBncm91bmR3YXRlciBxdWFsaXR5IGFuZCBoZWlnaHQsIHdhdGVyIGxvZ2dpbmcsIHNvaWwgc2FsaW5pdHksIHNvaWwgaGVhbHRoLCBjcm9wIHByb2R1Y3Rpdml0eSwgcGFydGlhbCBmYWN0b3IgIHByb2R1Y3Rpdml0eSBhbmQgY29zdCBlY29ub21pY3Mgb2YgZmFybSBwcmFjdGljZXMuIFRoaXMgaXMgd2hlcmUgbWljcm8taXJyaWdhdGlvbiBhc3N1bWVzIHNpZ25pZmljYW5jZScuICBUaGVzZSBsaW5lcyB0YWxrIGFib3V0IHRoZSBpc3N1ZXMgb2YgdHJhZGl0aW9uYWwgaXJyaWdhdGlvbiBwcmFjdGljZXMsIGFuZCBob3cgbWljcm8taXJyaWdhdGlvbiBpcyBwcm9taXNpbmcgaW4gIGl0cyBwcm9zcGVjdHMuIFNvLCB0aGlzIGlzIHRoZSBjcnV4IG9mIHRoZSBwYXNzYWdlLiAgT3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIFRoaXMgb3B0aW9uIGluIGdlbmVyYWwgd291bGQgYmUgY29ycmVjdCwgYnV0IHRoaXMgc3RhdGVtZW50IGlzIG5vdCBiYXNlZCBvbiB0aGUgIGluZm9ybWF0aW9uIGdpdmVuIGluIHRoZSBwYXNzYWdlLiBUaGUgbGluZXMgJ1RoZSBpbXBhY3Qgb2YgY2xpbWF0ZSBjaGFuZ2UgaXMgbXVjaCBtb3JlIGV2aWRlbnQgaW4gSW5kaWFuICBhZ3JpY3VsdHVyZSwgd2hlcmUgYXJvdW5kIDg1IHBlciBjZW50IGZhcm1lcnMgYXJlIHNtYWxsIGFuZCBtYXJnaW5hbCBhbmQgNjAgcGVyIGNlbnQgYWdyaWN1bHR1cmUgaXMgIGRlcGVuZGVudCB1cG9uIHRoZSB2YWdhcmllcyBvZiBtb25zb29uJywganVzdCBzaG93IHRoYXQgdGhlIGltcGFjdCBvZiBjbGltYXRlIGNoYW5nZSBvbiBJbmRpYW4gYWdyaWN1bHR1cmUgIGlzIG9idmlvdXMuIFRoZXJlIGNhbm5vdCBiZSBhbnkgY29uY2x1c2lvbiB3aGljaCBjYW4gYmUgbWFkZSBvbiB0aGUgcmVkdWNlZCBwcm9kdWN0aXZpdHkgb2YgdGhlIGFncmljdWx0dXJlICBhcyB0aGVyZSBpcyBubyBzdWNoIGluZm9ybWF0aW9uIGluIHRoZSBwYXNzYWdlLiAgSGVuY2UsIGl0IGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2Ugbm8gZGlzY3Vzc2lvbiBvbiB0aGUgYXNwZWN0ICBvZiB0aGUgc2Vjb25kIGdyZWVuIHJldm9sdXRpb24gaGFzIGJlZW4gZG9uZSBpbiB0aGUgcGFzc2FnZS4gT25seSBsaW1pdGVkIGluZm9ybWF0aW9uIGFib3V0IHRoZSBncmVlbiAgcmV2b2x1dGlvbiBpcyBpbiB0aGUgbGluZXMgJ1RoZSBjb250aW51ZWQgaXJyaWdhdGlvbiB0aHJvdWdoIHRyYWRpdGlvbmFsIHByYWN0aWNlcyBzaW5jZSB0aGUgaW50cm9kdWN0aW9uIG9mICB0aGUgZ3JlZW4gcmV2b2x1dGlvbiBpbiB0aGUgMTk2MHMsIGhvd2V2ZXIsIGhhcyBiZWd1biB0byBzaG93IGl0cyBtdWx0aXR1ZGlub3VzIGlsbCBlZmZlY3RzIG9uIGdyb3VuZHdhdGVyICBxdWFsaXR5IGFuZCBoZWlnaHQsIHdhdGVyIGxvZ2dpbmcsIHNvaWwgc2FsaW5pdHksIHNvaWwgaGVhbHRoLCBjcm9wIHByb2R1Y3Rpdml0eSwgcGFydGlhbCBmYWN0b3IgcHJvZHVjdGl2aXR5ICBhbmQgY29zdCBlY29ub21pY3Mgb2YgZmFybSBwcmFjdGljZXMnLiBUaGVzZSBsaW5lcyB0YWxrIGFib3V0IHRoZSBpbnRyb2R1Y3RvcnkgcGhhc2Ugb2YgZ3JlZW4gcmV2b2x1dGlvbiAgKG5vdCBzZWNvbmQgZ3JlZW4gcmV2b2x1dGlvbikuIFRoZXJlZm9yZSwgdGhpcyBhbnN3ZXIgb3B0aW9uIGlzIG5vdCB0aGUgY3J1eCBvZiB0aGUgcGFzc2FnZS4gIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGUgZ2l2ZW4gb3B0aW9uIGlzIGFib3V0IHRoZSBhc3BlY3Qgb2YgaW52ZXN0bWVudCBieSB0aGUgZ292ZXJubWVudCBpbiBtaWNyby0gaXJyaWdhdGlvbiwgYnV0IHRoaXMgYXNwZWN0IGlzIG5vdCBkaXNjdXNzZWQgaW4gdGhlIHBhc3NhZ2UuIFNvLCB3ZSBjYW5ub3QgaW5mZXIgdGhhdCBtaWNyby1pcnJpZ2F0aW9uIG5lZWRzICBmdW5kaW5nLiBJdCBzdXJlbHkgYXNzdW1lcyBzaWduaWZpY2FuY2UgYmFzZWQgb24gdGhlIGlzc3VlcyB3aXRoIHRyYWRpdGlvbmFsIHByYWN0aWNlcywgYnV0IHRvIGluZmVyIGFib3V0ICBmdW5kaW5nIHdvdWxkIG5vdCBiZSBjb3JyZWN0LiBJdCdzIG1vcmUgb2YgYW4gaW1wbGljYXRpb24sIHRoYW4gdGhlIGNydXggb2YgdGhlIHBhc3NhZ2UuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Micro-irrigation has the potential to address  the ill effects of the green revolution and  reduce the dependence on monsoon. ",
        "option2" : " Climate change has reduced the overall  productivity of Indian agriculture. ",
        "option3" : " Second green revolution presents a viable  solution to deal with the impacts of climate  change on agriculture. ",
        "option4" : " The government should invest more in  micro-irrigation for its large-scale adoption. "
      }
    },
    {
      "index" : 43,
      "question" : "Which one of the following statements best reflects the central idea of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiB0YWxrcyBhYm91dCB0aGUgY3JlZGliaWxpdHkgaXNzdWVzIHdoaWNoIGFyZSBoaWdobGlnaHRlZCBpbiB0aGUgbGluZXMgICdIb3dldmVyLCBvbmUgbXVzdCBiZSB2ZXJ5IGNhcmVmdWwgd2hpbGUgbWFraW5nIGRvbmF0aW9ucyBhcyB3ZWxsIGFzIHdoaWxlIHJhaXNpbmcgZnVuZHMuIExvb2sgZm9yICBjcmVkaWJpbGl0eSBhbmQgdGhlIHJvb3QgY2F1c2VzIGNhcmVmdWxseScuIEhvd2V2ZXIsIHdlIGNhbm5vdCBhc3N1bWUgdGhhdCBieSBhZGRyZXNzaW5nIHN1Y2ggaXNzdWVzLCBpdCAgY2FuIGJlY29tZSB0aGUgYmVzdCBmdW5kLXJhaXNpbmcgbWVjaGFuaXNtIGJlY2F1c2UgdGhlcmUgaXMgbm8gY29tcGFyaXNvbiB3aXRoIGFueSBvdGhlciBtZWNoYW5pc20gIGJlaW5nIGRvbmUgaW4gdGhlIHBhc3NhZ2UgdG8gY29uY2x1ZGUgdGhhdC4gU28sIGl0IGlzIG5vdCB0aGUgY2VudHJhbCBpZGVhLiAgT3B0aW9uIChiKSBpcyBjb3JyZWN0LiBUaGUgbGluZXMgJ0l0IGNhbiBiZSBzYWlkIHRoYXQgdGhpcyBwaGVub21lbm9uIGhhcyBtYWRlIGZ1bmRpbmcgYWNjZXNzaWJsZSBhbmQgIGVyYWRpY2F0ZWQgdGhlIGdhdGVrZWVwZXJzLiBOb3csIGFueW9uZSB3aXRoIGEgZ3JlYXQgaWRlYSBhbmQgdGhlIGFiaWxpdHkgdG8gZXhlY3V0ZSBpdCBjYW4gcmFpc2UgdGhlIGZ1bmRzICB0aGV5IG5lZWQgdG8gc3VjY2VlZCcsIHNob3cgdGhhdCBjcm93ZGZ1bmRpbmcgaGFzIG1hZGUgZnVuZGluZyBhY2Nlc3NpYmxlIHdoaWNoIHdvdWxkIG1ha2UgdGhlICBleGVjdXRpb24gb2YgYW4gaWRlYSBlYXN5IGFuZCBtYWtlIGl0IHN1Y2Nlc3NmdWwuIFNvLCB0aGlzIGlzIHRoZSBjZW50cmFsIGlkZWEgb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdIb3dldmVyLCBvbmUgbXVzdCBiZSB2ZXJ5IGNhcmVmdWwgd2hpbGUgbWFraW5nIGRvbmF0aW9ucyBhcyB3ZWxsIGFzICB3aGlsZSByYWlzaW5nIGZ1bmRzLiBMb29rIGZvciBjcmVkaWJpbGl0eSBhbmQgdGhlIHJvb3QgY2F1c2VzIGNhcmVmdWxseS4gV2l0aCB0aGUgYWR2ZW50IG9mIHBvd2VyZnVsICBwbGF0Zm9ybXMsIHRoaW5ncyBoYXZlIGdvbmUgZWFzeSBhbmQgYmV0dGVyJywgc2hvdyBmbGF3cyBpbiBjcm93ZGZ1bmRpbmcgYnV0IHRoZSBzdGF0ZW1lbnQgdGhhdCAndXNpbmcgIHBvd2VyZnVsIHBsYXRmb3JtcyB3aWxsIGhlbHAgYWRkcmVzcyB0aGVzZSBmbGF3cycgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCBwcm92aWRlIGFueSAgaW5mb3JtYXRpb24gaW4gdGhpcyBjb250ZXh0LiBJc3N1ZXMgb2YgY3JlZGliaWxpdHkgYXJlIHRoZXJlIGJ1dCBwbGF0Zm9ybXMgdGhhdCB3aWxsIGhlbHAgYWRkcmVzcyB0aGVtIGNhbm5vdCAgYmUgY29uY2x1ZGVkIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiBnaXZlbiBpbiB0aGUgcGFzc2FnZS4gVGhlIG9ubHkgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHBsYXRmb3JtcyBpcyAgdGhhdCBpdCBoYXMgbWFkZSBmdW5kaW5nIGVhc2llci4gIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGlzIHN0YXRlbWVudCBpbiBnZW5lcmFsIGlzIGNvcnJlY3QgYnV0IHRoaXMgaXMgbm90IHRoZSBjZW50cmFsIGRpc2N1c3Npb24gaW4gdGhlICBwYXNzYWdlLiBUaGVyZSBpcyBubyBkaXNjdXNzaW9uIGFib3V0IHRoZSBpbnRlcmVzdCByYXRlcyBhbmQgdHJhZGl0aW9uYWwgZnVuZC1yYWlzaW5nIG1lY2hhbmlzbXMuIFNvLCB0aGlzIGlzICBub3QgdGhlIGNvcnJlY3QgY2VudHJhbCBpZGVhLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " By addressing the credibility issues in  crowdfunding, it can become the best  fundraising mechanism. ",
        "option2" : " Crowdfunding offers an easy path for  successfully turning an idea into a reality. ",
        "option3" : " Crowdfunding mechanism has inherent  flaws which can be resolved through the  use of powerful platforms. ",
        "option4" : " To avoid the interest on raising loans,  people should adopt crowdfunding. "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be drawn from the passage? 1. Climate impact of ozone changes is majorly seen in the troposphere. 2. Stratospheric and tropospheric ozone losses affect the temperature balance of the earth. Select the correct answer from the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhpcyBzdGF0ZW1lbnQgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgcGFzc2FnZSBkb2VzIG5vdCBzdGF0ZSB0aGF0IG96b25lIGNoYW5nZXMgIGFyZSBtYWpvcmx5IHNlZW4gaW4gdGhlIHRyb3Bvc3BoZXJlLiBUaGUgbGluZSAnVGhlcmVmb3JlLCB0aGUgY2xpbWF0ZSBpbXBhY3Qgb2YgY2hhbmdlcyBpbiBvem9uZSAgY29uY2VudHJhdGlvbnMgdmFyaWVzIHdpdGggdGhlIGFsdGl0dWRlIGF0IHdoaWNoIHRoZXNlIG96b25lIGNoYW5nZXMgb2NjdXInLCByZWZsZWN0cyB0aGF0IGNsaW1hdGUgaW1wYWN0ICB2YXJpZXMgd2l0aCBhbHRpdHVkZSBhbmQgbm90IG1ham9ybHkgaW4gdGhlIHRyb3Bvc3BoZXJlLiBJdCBtZWFucyB0aGF0IHRoZSBnaXZlbiBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QuICAgICAgIDEzICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbmZlcmVuY2UgMiBpcyBjb3JyZWN0LiBUaGUgcGFzc2FnZSBtZW50aW9ucyAnQXRtb3NwaGVyaWMgb3pvbmUgaGFzIHR3byBlZmZlY3RzIG9uIHRoZSB0ZW1wZXJhdHVyZSAgYmFsYW5jZSBvZiB0aGUgRWFydGgnIGFuZCAnVGhlIG1ham9yIG96b25lIGxvc3NlcyB0aGF0IGhhdmUgYmVlbiBvYnNlcnZlZCBpbiB0aGUgbG93ZXIgc3RyYXRvc3BoZXJlIGR1ZSAgdG8gdGhlIGh1bWFuLXByb2R1Y2VkIGNobG9yaW5lLSBhbmQgYnJvbWluZS1jb250YWluaW5nIGdhc2VzIGhhdmUgYSBjb29saW5nIGVmZmVjdCBvbiB0aGUgRWFydGgncyBzdXJmYWNlLiAgVGhlc2UgbGluZXMgY29uZmlybSB0aGUgaW5mZXJlbmNlIG1hZGUgaW4gdGhlIGdpdmVuIHN0YXRlbWVudCAtIHN0cmF0b3NwaGVyaWMgYW5kIHRyb3Bvc3BoZXJpYyBvem9uZSBsb3NzZXMgIGFmZmVjdCB0aGUgdGVtcGVyYXR1cmUgYmFsYW5jZSBvZiB0aGUgZWFydGguICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " 1 and 2  ",
        "option4" : " None  "
      }
    },
    {
      "index" : 46,
      "question" : "A large cube consists of 125 identical small cubes. Find the total number of small inner hidden cubes.  (a) 64  (b) 27  (c) 98  (d) 100 47. If 'MOHAN' is coded as '46815' in a code language, then what will be the code for 'INDIAN' in that code language? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IFRoZSBxdWVzdGlvbiBzYXlzIHRoYXQgYSBsYXJnZSBjdWJlIGlzIG1hZGUgdXAgb2YgMTI1IHNtYWxsZXIgY3ViZXMuICAgU2luY2UgMTI1ID0gNTMsIGl0IGltcGxpZXMgdGhhdCBlYWNoIHNpZGUgb2YgdGhlIGxhcmdlIGN1YmUgaXMgYWN0dWFsbHkgbWFkZSB1cCBvZiA1IGN1YmVzLiAgIFJlcXVpcmVkIG51bWJlciBvZiBpbm5lciBjdWJlcyA9IChuIC0gMikzID0gKDUgLSAyKTMgPSAzMyA9IDI3LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 954915 ",
        "option2" : " 938716 ",
        "option3" : " 946214 ",
        "option4" : " 967215  "
      }
    },
    {
      "index" : 48,
      "question" : "In the given mixed series, find the missing term. A4C,   D16H, I36O, P64X, ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEdpdmVuIHNlcmllczogIEE0QywgRDE2SCwgSTM2TywgUDY0WCwgPyAgUGF0dGVybiBiZWluZyBmb2xsb3dlZCBoZXJlIGlzOiAgIERpZ2l0IGluIGJldHdlZW4gdGhlIHR3byBhbHBoYWJldHMgaXMgdGhlIHNxdWFyZSBvZiB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBwbGFjZSB2YWx1ZXMgb2YgdGhlIHR3byAgYWxwaGFiZXRzLiAgICAgICAgMTQgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFNpbWlsYXJseSwgIEZvciBEMTZILCAgRC0+IDQgICAgIEgtPiA4ICBEaWZmZXJlbmNlID0gOCAtIDQgPSA0ICAgTnVtYmVyID0gKDQpMiA9IDE2ICBGb3IgSTM2TywgICBJIC0+IDkgIE8tPiAxNSAgRGlmZmVyZW5jZSA9IDE1IC0gOSA9IDYgICBOdW1iZXIgPSAoNikyID0gMzYgIEZvciBQNjRYLCAgIFAtPiAxNiAgWC0+IDI0ICBEaWZmZXJlbmNlID0gMjQgLSAxNiA9IDggICBOdW1iZXIgPSAoOCkyID0gNjQgIEZvciBZMjU2SSwgIFktPiAyNSAgSS0+IDkgIERpZmZlcmVuY2UgPSAyNSAtIDkgPSAxNiAgIFJlcXVpcmVkIG51bWJlciA9ICgxNikyID0gMjU2ICBIZW5jZSwgJ1kyNTZJJyBpcyB0aGUgcmVxdWlyZWQgYW5zd2VyLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Q100X ",
        "option2" : " Y256I ",
        "option3" : " R324M ",
        "option4" : " Z100N  "
      }
    },
    {
      "index" : 49,
      "question" : "Find the next term in the following series. 29, 131, 254, 419, 647, ? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEdpdmVuIHNlcmllczogIDI5LCAxMzEsIDI1NCwgNDE5LCA2NDcsID8gIFRoZSBwYXR0ZXJuIG9mIHRoZSBzZXJpZXMgaXMgYXMgZm9sbG93czogICA/ID0gNjQ3ICsgKDIyOCArIDg0KSA9IDY0NyArIDMxMiA9IDk1OSAgSGVuY2UsIG9wdGlvbiAoYSkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 959 ",
        "option2" : " 944 ",
        "option3" : " 1024 ",
        "option4" : " 1331  "
      }
    },
    {
      "index" : 50,
      "question" : "In a certain code language 'low nas hsi play' means 'she is bringing coffee'; 'wis sat low play' means 'he is bringing milk' and 'sat lim nas' means 'milk and coffee'. What is the code for 'he' in the same language? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEZvbGxvd2luZyBjb2RlcyBhcmUgbWVudGlvbmVkIGluIHRoZSBxdWVzdGlvbjogIChpKSAnbG93IG5hcyBoc2kgcGxheScgbWVhbnMgJ3NoZSBpcyBicmluZ2luZyBjb2ZmZWUnICAoaWkpICd3aXMgc2F0IGxvdyBwbGF5JyBtZWFucyAnaGUgaXMgYnJpbmdpbmcgbWlsaycgIChpaWkpICdzYXQgbGltIG5hcycgbWVhbnMgJ21pbGsgYW5kIGNvZmZlZScgICdtaWxrJyBpcyB0aGUgb25seSB3b3JkIGNvbW1vbiBpbiBzZWNvbmQgYW5kIHRoaXJkIHN0YXRlbWVudHMuIEhlbmNlLCBpdCBjYW4gYmUgY29uY2x1ZGVkIHRoYXQgJ21pbGsnIGlzICBjb2RlZCBhcyAnc2F0Jy4gU2ltaWxhcmx5LCBmcm9tIGZpcnN0IGFuZCBzZWNvbmQgc3RhdGVtZW50cyB3ZSBjYW4gb2JzZXJ2ZSB0aGF0ICdpcycgYW5kIGJyaW5naW5nJyBhcmUgY29kZWQgIGFzIGVpdGhlciAnbG93JyBvciAncGxheScuIFB1dHRpbmcgdGhlc2UgY29kZXMgaW4gc2Vjb25kIHN0YXRlbWVudCwgd2UgY2FuIGNvbmNsdWRlIHRoYXQgdGhlIGNvZGUgZm9yICdoZScgaXMgICd3aXMnLiAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " sat                               ",
        "option2" : " wis ",
        "option3" : " play                             ",
        "option4" : " low        12                                                                                                                                                              Directions for the following 2 (two) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 51,
      "question" : "Which one of the following statements best reflects the central idea of the passage?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUx",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSBwYXNzYWdlIGJlY2F1c2UgdGhlcmUgaXMgbm8gZGlzY3Vzc2lvbiBpbiAgdGhlIHBhc3NhZ2UgYWJvdXQgdGhlIHJvbGUgb2YgZ2xvYmFsIGJvZGllcyBpbiBhZGRyZXNzaW5nIHRoZSBzdGF0ZS1zcG9uc29yZWQgYXR0YWNrcyAuICBPcHRpb24gKGIpIGlzIGNvcnJlY3QuIFRoZSBsaW5lcyAnVGhlIHdhcnMgb2YgdGhlIDIxc3QgY2VudHVyeSB3aWxsIGJlIHRvIGNhcHR1cmUsIG1hbmlwdWxhdGUgb3IgZGVzdHJveSAgb3RoZXJzJyBkYXRhJyBhbmQgJ0JpbGxpb25zIG9mIGRvbGxhcnMgYXJlIGJlaW5nIHdhc3RlZCBpbiB0aGUgZGVzdHJ1Y3Rpb24sIGRvd250aW1lIGFuZCByZXBsYWNlbWVudCBjb3N0cyAgYXJpc2luZyBhcyBhIHJlc3VsdCBvZiBjeWJlciBpbnNlY3VyaXR5Jywgc2hvdyB0aGF0IGN5YmVyIGluc2VjdXJpdHkgY291bGQgY2VydGFpbmx5IGxlYWQgdG8gbG9zc2VzIGFtb3VudGluZyAgdG8gYmlsbGlvbnMgb2YgZG9sbGFycy4gU28sIHRoaXMgaXMgdGhlIGNlbnRyYWwgaWRlYSBvZiB0aGUgcGFzc2FnZS4gICAgICAgMTUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9wdGlvbiAoYykgaXMgaW5jb3JyZWN0LiBUaGUgcmVndWxhdGlvbiBhbmQgbW9uaXRvcmluZyBvZiB0aGUgaW50ZXJuZXQgYXJlIG5vdCBwYXJ0IG9mIHRoZSBkaXNjdXNzaW9uIGluIHRoZSAgcGFzc2FnZTsgaGVuY2UsIHRoaXMgb3B0aW9uIGlzIG5vdCBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24gaW4gdGhlIHBhc3NhZ2UuIFRoZSBsaW5lcyAnQXMgdGhlIGludGVybmV0IGJlY29tZXMgIGFsbCBwZXJ2YXNpdmUgYW5kIHRoZSB3b3JsZCBnZXRzIGluY3JlYXNpbmdseSBpbnRlcmNvbm5lY3RlZCwgY3liZXJhdHRhY2tzIGFyZSBib3VuZCB0byBjcmVhdGUgd2lkZXNwcmVhZCAgaW1wYWN0JyBzaG93IHRoZSBpbmV2aXRhYmxlIGFsbC1wZXJ2YXNpdmUgbmF0dXJlIG9mIHRoZSBpbnRlcm5ldCB3aGljaCBtZWFucyB0aGF0IGl0IGlzIG5vdCBlYXN5IHRvIHJlZ3VsYXRlICBhbmQgbW9uaXRvciBpdC4gIE9wdGlvbiAoZCkgaXMgaW5jb3JyZWN0LiBUaGUgcGFzc2FnZSBkb2VzIG5vdCBtZW50aW9uIGFueXRoaW5nIGFib3V0IG5hdGlvbnMgY29taW5nIHRvZ2V0aGVyIHRvIGNyZWF0ZSAgY29tbW9uIGdsb2JhbCBzb2x1dGlvbnMgcmVnYXJkaW5nIGN5YmVyIGluc2VjdXJpdHkuIEhlbmNlLCBpdCBpcyBub3QgdGhlIGNvcnJlY3QgY2VudHJhbCBpZGVhLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Global bodies should develop  accountability mechanisms for state- sponsored cyber-attacks. ",
        "option2" : " Cyber insecurity in the 21st century causes  major economic losses. ",
        "option3" : " To avoid the losses from cyber-attacks, it is  advised to regulate and monitor the  internet. ",
        "option4" : " Cyber insecurity is a global challenge;  therefore, nations should come together to  develop solutions.  "
      }
    },
    {
      "index" : 52,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be drawn from the passage? 1. Individualism and fraternity cannot go hand in hand. 2. Fraternity considers people as ends while individualism treats people as means. Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUy",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zICdGcmF0ZXJuaXR5IGlzIGEgZm9yY2Ugb2Ygb3Bwb3NpdGUgY2hhcmFjdGVyJywgd2hpY2ggbWVhbnMgIHRoYXQgaXQgaXMgbm90IHBvc3NpYmxlIHRvIGZvbGxvdyBpbmRpdmlkdWFsaXNtIGFuZCBmcmF0ZXJuaXR5IHRvZ2V0aGVyLiBUaHVzLCB0aGlzIHN0YXRlbWVudCBhcyBhbiBpbmZlcmVuY2UgaXMgIGNvcnJlY3QuICBJbmZlcmVuY2UgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIGhhcyBhIGxpbWl0ZWQgbWVudGlvbiBvZiBpbmRpdmlkdWFsaXNtLCB0aGF0IGl0IHRyZWF0cyB0aGUgcGVyc29uIGFzIGFuICBlbmQgaW4gaGltc2VsZiAtICcuLi4gYW5kIHVuZGVyIHRoZSBwcmVzc3VyZSBvZiBoaXMgcGFydGljdWxhciBpbnRlcmVzdHMgYWN0aW5nIGFzIHRob3VnaCBoZSB3YXMgYW4gZW5kIHRvICBoaW1zZWxmLCB0aGVyZWJ5IGRldmVsb3BpbmcgYSBub24tc29jaWFsIGFuZCBldmVuIGFuIGFudGktc29jaWFsIHNlbGYuLi4nIEJ1dCB0aGVyZSBpcyBubyBkZXNjcmlwdGlvbiBhYm91dCAgaG93IGZyYXRlcm5pdHkgdHJlYXRzIHBlb3BsZSAtIGFzIG1lYW5zIG9yIGFzIGFuIGVuZCBpbiB0aGVtc2VsdmVzLiBTbywgdGhlIGluZmVyZW5jZSBtYWRlIGlzIGluY29ycmVjdC4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " 1 and 2 ",
        "option4" : " None  "
      }
    },
    {
      "index" : 53,
      "question" : "In certain coding language 'CODE' and ''BUT' is written as 'XLWV' and 'YFG' respectively. Then what will be the code for 'MAN'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUz",
      "description" : "IENPREUgaXMgd3JpdHRlbiBhcyBYTFdWICBD4p+3WCAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBP4p+3TCAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBE4p+3VyAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBF4p+3ViAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBCVVQgaXMgd3JpdHRlbiBhcyBZRkcuICBC4p+3WSAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBV4p+3RiAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBU4p+3RyAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBTaW1pbGFybHksICBN4p+3TiAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBB4p+3WiAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBO4p+3TSAoT3Bwb3NpdGUgbGV0dGVyIHBhaXIpICBUaHVzLCBNQU4gd2lsbCBiZSBjb2RlZCBhcyBOWk0uICAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " RZQ ",
        "option2" : " SZR ",
        "option3" : " TZS ",
        "option4" : " NZM        13                                                                                                                                                             "
      }
    },
    {
      "index" : 54,
      "question" : "Which of the following option should come at the place of 'X'? BD1F, DH5L, X, FG4R ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU0",
      "description" : "IEdpdmVuIFNlcmllczogIEJEMUYsIERINUwsIFgsIEZHNFIgIExldCdzIHRha2UgYSB0ZXJtIGFuZCBmaW5kIG91dCB0aGUgcGF0dGVybi4gICBSZXF1aXJlZCBudW1iZXIgPSBbKDIgw5cgNCkgLSA2XSAvMiA9IDEgIEFwcGx5aW5nIHRoZSBzYW1lIGluIHRoZSBzZWNvbmQgdGVybS4gICBSZXF1aXJlZCBudW1iZXIgPSBbKDggw5cgNCkgLSAxMl0vNCA9IDUgICBMZXQncyBjaGVjayBlYWNoIG9wdGlvbiBvbmUgYnkgb25lLiAgICAgICAxNiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgT3B0aW9uIChhKTogICBSZXF1aXJlZCBudW1iZXIgPSBbKDYgw5cgMTIpIC0gMThdLzYgPSA5IOKJoCAzICBPcHRpb24gKGIpOiAgIFJlcXVpcmVkIG51bWJlciA9IFsoNSDDlyA0KSAtIDIwXS81ID0gMCDiiaAgMiAgT3B0aW9uIChjKTogSkQyVCAgIFJlcXVpcmVkIG51bWJlciA9IFsoMTAgw5cgNCkgLSAyMF0vMTAgPSAyICBPcHRpb24gKGQpICAgUmVxdWlyZWQgbnVtYmVyID0gWygzIMOXIDEyKSAtIDE5XS8zID0gMTcvMyDiiaAgNCAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " FL3R ",
        "option2" : " ED2T ",
        "option3" : " JD2T ",
        "option4" : " CL4R  "
      }
    },
    {
      "index" : 55,
      "question" : "Ram Krishna earns Rs. 0.40 per cube made by him. If he has a cubical block of 3 m side, and has to make smaller cubes of side 3 cm, then how much will he earn? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU1",
      "description" : "IExlbmd0aCBvZiB0aGUgc2lkZSBvZiBiaWcgY3ViZSA9IDMgbSA9IDMwMCBjbSAgTGVuZ3RoIG9mIHRoZSBzaWRlIG9mIHNtYWxsIGN1YmUgPSAzIGNtICAgU28sIG4gPSBMZW5ndGggb2YgdGhlIHNpZGUgb2YgYmlnIGN1YmUvIExlbmd0aCBvZiB0aGUgc2lkZSBvZiBzbWFsbCBjdWJlID0gMzAwLzMgPSAxMDAgIOKItCBOdW1iZXIgb2YgY3ViZXMgdGhhdCBjYW4gYmUgbWFkZSA9IChuKTMgPSAxMDAgw5cgMTAwIMOXIDEwMCA9IDEwMDAwMDAgIFRvdGFsIGVhcm5pbmcgb2YgUmFtIEtyaXNobmEgPSAwLjQwIMOXIDEwMDAwMDAgPSA0MDAwMDAgPSA0IGxha2hzICBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 40 thousand ",
        "option2" : " 4 lakhs ",
        "option3" : " 40 lakhs ",
        "option4" : " 35 thousand  "
      }
    },
    {
      "index" : 56,
      "question" : "Each of the six faces of a cube is marked A to F. Consider the following statement: S1. Figures (ii) and (iii) are sufficient to known as to which face is opposite to the face marked F. S2. Figures (ii) and (iii) are sufficient to known as to which face is opposite to the face marked D. S3. Figures (i) and (iv) are sufficient to known as to which face is opposite to the face marked C. Which of the statement given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU2",
      "description" : "IExldCdzIGNoZWNrIGZpZ3VyZXMgKGlpKSBhbmQgKGlpaSk6ICAgTW92aW5nIGZpZ3VyZSAoaWlpKSBieSA5MDAgY2xvY2t3aXNlLCBEIGlzIGF0IHRoZSBzYW1lIHBvc2l0aW9uIGluIGJvdGggZGljZXMuIFRodXMsIHdlIGdldDogIEEgaXMgb3Bwb3NpdGUgdG8gRiwgQiBpcyBvcHBvc2l0ZSB0byBFIGFuZCBEIGlzIG9wcG9zaXRlIHRvIEMuICBGaWd1cmVzIElJIGFuZCBJSUkgYXJlIHN1ZmZpY2llbnQgdG8gZmluZCB3aGljaCBmYWNlIGlzIG9wcG9zaXRlIHRvIHRoZSBmYWNlcyBtYXJrZWQgRiBhbmQgRC4gIExldCdzIGNoZWNrIGZpZ3VyZXMgKGkpIGFuZCAoaXYpOiAgICAgICAgIDE3ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBIZXJlIEYgYW5kIEIgYXJlIGNvbW1vbi4gVGh1cyB1bmNvbW1vbiBmYWNlcyBvZiBib3RoIGRpY2VzIGkuZS4gQyBhbmQgRCB3aWxsIGJlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIuICBUaHVzLCBmaWd1cmUgKGkpIGFuZCAoaXYpIGFyZSBzdWZmaWNpZW50IHRvIGZpbmQgd2hpY2ggZmFjZSBpcyBvcHBvc2l0ZSB0byB0aGUgZmFjZSBtYXJrZWQgQy4gIFRodXMsIGFsbCBzdGF0ZW1lbnRzLCBTMSwgUzIgYW5kIFMzIGFyZSBjb3JyZWN0LiAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIEV4cGxhbmF0aW9uIGZvciBRdWVzdGlvbnMgNTcgdG8gNTk6ICBGb29kIHRvIElCTSBpcyBkZWxpdmVyZWQgb24gVGh1cnNkYXkuIFRhaGlyIGRlbGl2ZXJzIGZvb2Qgb24gV2VkbmVzZGF5LiBGb29kIHRvIEhUQyBpcyBkZWxpdmVyZWQgb24gIEZyaWRheS4gUnVkcmEgd29ya3Mgb24gTW9uZGF5LiAgICAgRGF5IFdvcmtlciBDb21wYW55ICBNb25kYXkgUnVkcmEgICBUdWVzZGF5ICAgIFdlZG5lc2RheSBUYWhpciAgIFRodXJzZGF5ICBJQk0gIEZyaWRheSAgSFRDICBWaWNreSBkb2VzIG5vdCBkZWxpdmVyIGZvb2QgdG8gQWNlciBhbmQgaGUgZG9lcyBub3Qgd29yayBvbiBUdWVzZGF5LiBTbywgVmlja2V5IG11c3QgYmUgZGVsaXZlcmluZyBmb29kICBlaXRoZXIgb24gVGh1cnNkYXkgb3IgRnJpZGF5LiBTbywgdGhlcmUgYXJlIDIgcG9zc2liaWxpdGllczogIENhc2UtMSAgRGF5IFdvcmtlciBDb21wYW55ICBNb25kYXkgUnVkcmEgICBUdWVzZGF5ICAgIFdlZG5lc2RheSBUYWhpciAgIFRodXJzZGF5IFZpY2t5IElCTSAgRnJpZGF5ICBIVEMgICBDYXNlLTIgIERheSBXb3JrZXIgQ29tcGFueSAgTW9uZGF5IFJ1ZHJhICAgVHVlc2RheSAgICBXZWRuZXNkYXkgVGFoaXIgICBUaHVyc2RheSAgSUJNICBGcmlkYXkgVmlja3kgSFRDICBOb3csIFNhbmplZXYgZGVsaXZlcnMgdG8gSFAgYnV0IGhlIGRvZXMgbm90IGRvIHRoaXMgb24gTW9uZGF5IG9yIEZyaWRheSAtIHRoYXQgbWVhbnMgU2FuamVldiB3aWxsIHdvcmsgIG9uIFR1c2VkYXkuIEFuZCBvbiB0aGUgcmVtYWluaW5nIGRheSBVcGVuZHJhIHdpbGwgZGVsaXZlci4gICBDYXNlLTEgIERheSBXb3JrZXIgQ29tcGFueSAgTW9uZGF5IFJ1ZHJhICAgVHVlc2RheSBTYW5qZWV2IEhQICBXZWRuZXNkYXkgVGFoaXIgICBUaHVyc2RheSBWaWNreSBJQk0gIEZyaWRheSBVcGVuZHJhIEhUQyAgICAgICAxOCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQ2FzZS0yICBEYXkgV29ya2VyIENvbXBhbnkgIE1vbmRheSBSdWRyYSAgIFR1ZXNkYXkgU2FuamVldiBIUCAgV2VkbmVzZGF5IFRhaGlyICAgVGh1cnNkYXkgVXBlbmRyYSBJQk0gIEZyaWRheSBWaWNreSBIVEMgIEFsc28sIFRhaGlyIGRvZXMgbm90IGRlbGl2ZXIgZm9vZCB0byBBY2VyLiBTbywgUnVkcmEgd2lsbCBkZWxpdmVyIGZvb2QgdG8gQWNlci4gIENhc2UtMSAgRGF5IFdvcmtlciBDb21wYW55ICBNb25kYXkgUnVkcmEgQWNlciAgVHVlc2RheSBTYW5qZWV2IEhQICBXZWRuZXNkYXkgVGFoaXIgQXBwbGUgIFRodXJzZGF5IFZpY2t5IElCTSAgRnJpZGF5IFVwZW5kcmEgSFRDICAgQ2FzZS0yICBEYXkgV29ya2VyIENvbXBhbnkgIE1vbmRheSBSdWRyYSBBY2VyICBUdWVzZGF5IFNhbmplZXYgSFAgIFdlZG5lc2RheSBUYWhpciBBcHBsZSAgVGh1cnNkYXkgVXBlbmRyYSBJQk0gIEZyaWRheSBWaWNreSBIVEMgIEZvb2QgdG8gSFRDIGlzIGRlbGl2ZXJlZCBvbiBGcmlkYXkgYnV0IG5vdCBieSBVcGVuZHJhLiBTbywgQ2FzZSAtMSBjYW4gYmUgZWxpbWluYXRlZC4gICBIZW5jZSB0aGUgZmluYWwgYXJyYW5nZW1lbnQgaXM6ICAgQ2FzZS0yICBEYXkgV29ya2VyIENvbXBhbnkgIE1vbmRheSBSdWRyYSBBY2VyICBUdWVzZGF5IFNhbmplZXYgSFAgIFdlZG5lc2RheSBUYWhpciBBcHBsZSAgVGh1cnNkYXkgVXBlbmRyYSBJQk0gIEZyaWRheSBWaWNreSBIVEMgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Only S1 and S3 ",
        "option2" : " Only S1 and S2 ",
        "option3" : " Only S2 and S3 ",
        "option4" : " All S1, S2 and S3  Directions for the following 3 (three) items:  Read the following information and answer the three  questions that follow.  In a food delivery company, five workers Rudra,  Sanjeev, Tahir, Upendra and Vicky deliver food to five  companies, IBM, Apple, HTC, Acer or HP - one day a  week Monday through Friday.  (i) Vicky does not deliver food to Acer and he does  not work on Tuesday.  (ii) Sanjeev delivers to HP but he does not do this on  Monday or Friday.  (iii) Food to IBM is delivered on Thursday.  (iv) Tahir delivers food on Wednesday but not to Acer.  (v) Food to HTC is delivered on Friday but not by  Upendra.  (vi) Rudra works on Monday. "
      }
    },
    {
      "index" : 57,
      "question" : "Which among the following can be concluded? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU3",
      "description" : "IE9uIFdlZG5lc2RheSwgVGFoaXIgZGVsaXZlcnMgZm9vZCB0byBBcHBsZSBpcyBhIGNvcnJlY3Qgc3RhdGVtZW50LiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Tahir delivers food to Apple on Friday ",
        "option2" : " Sanjeev delivers food to HP on Wednesday ",
        "option3" : " Food is not delivered by Vickey on Friday ",
        "option4" : " On Wednesday Tahir delivers food to  Apple.   "
      }
    },
    {
      "index" : 58,
      "question" : "To which company does Vicky deliver? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU4",
      "description" : "IFZpY2t5IGRlbGl2ZXJzIGZvb2QgdG8gSFRDLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Acer ",
        "option2" : " HP ",
        "option3" : " IBM ",
        "option4" : " HTC  "
      }
    },
    {
      "index" : 59,
      "question" : "On which day is food delivered to Acer? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU5",
      "description" : "IEZvb2QgaXMgZGVsaXZlcmVkIHRvIEFjZXIgb24gTW9uZGF5LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Friday ",
        "option2" : " Monday ",
        "option3" : " Tuesday ",
        "option4" : " Wednesday         14                                                                                                                                                              Directions for the following 3 (three) items:  Read the following two passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 60,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. Women of the world could be considered as the feeder of the world population. 2. Both Indian and African women end up losing their education opportunity due to their responsibility of fetching water.  Select the correct answer from the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "IEluZmVyZW5jZSAxIGlzIGNvcnJlY3QuIFRoZSBnaXZlbiBpbmZlcmVuY2UgaXMgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBsaW5lICdGb3IgZXhhbXBsZSwgYXQgbGVhc3QgaGFsZiBvZiB0aGUgIHdvcmxkIGZvb2QgaXMgZ3Jvd24gYnkgd29tZW4gZmFybWVycywgYW5kIGl0IGFtb3VudHMgdG8gODAlIGluIHNvbWUgQWZyaWNhbiBjb3VudHJpZXMgKEZBTywyMDAwKScuIEl0ICBzaG93cyB0aGF0IHdvbWVuIGFjdCBhcyBhIG1ham9yIGNvbnRyaWJ1dG9yIHRvIGZvb2QgYXZhaWxhYmlsaXR5IGZvciB0aGUgd29ybGQgcG9wdWxhdGlvbi4gVGhlcmVmb3JlLCBpdCAgd291bGQgYmUgY29ycmVjdCB0byBzYXkgdGhhdCB3b21lbiBhcmUgYSBmZWVkZXIgdG8gdGhlIHdvcmxkIHBvcHVsYXRpb24uICAgICAgIDE5ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBJbmZlcmVuY2UgMiBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QgYmVjYXVzZSB0aGUgc3RhdGVtZW50IGlzIGFib3V0IHdvbWVuIG9mIEFmcmljYSAgYW5kIEluZGlhLiBIb3dldmVyLCB0aGUgcGFzc2FnZSBkb2VzIG5vdCBjb3ZlciBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIEluZGlhbiB3b21lbi4gT25seSB0aGUgaXNzdWVzIG9mICB0aGUgd29tZW4gb2YgQWZyaWNhIGFyZSBjb3ZlcmVkIGluIHRoZSBwYXNzYWdlLiBUaGVyZWZvcmUsIHRoZSBpbmZlcmVuY2UgYXMgYSB3aG9sZSBpcyBub3QgY29ycmVjdC4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 61,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. Death penalty should not have a place in modern societies as it is an unconstitutional act. 2. Awareness against the death penalty is a must for reducing the existing public support. Select the correct answer from the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYx",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhlIHBhc3NhZ2UgY2xlYXJseSBtZW50aW9ucyBhYm91dCB0aGUgZGVjbGluZSBpbiB0aGUgdXNlIG9mIGRlYXRoIHBlbmFsdHkgaW4gdGhlICBsaW5lICdUaGUgbXlyaWFkIG9mIGRpc3R1cmJpbmcgZmFjdHMgYWJvdXQgdGhlIGRlYXRoIHBlbmFsdHkgaGFzIGxlZCB0byBhIHNoYXJwIGRlY2xpbmUgaW4gaXRzIHVzZS4nIEhvd2V2ZXIsICB0aGUgY29uc3RpdHV0aW9uYWxpdHkgb2YgdGhlIHVzZSBoYXMgbm93aGVyZSBiZWVuIGRpc2N1c3NlZCBieSB0aGUgYXV0aG9yLiBUaGVyZWZvcmUsIGl0IHdvdWxkIGJlIGluY29ycmVjdCAgdG8gc2F5IHRoYXQgJ0RlYXRoIHBlbmFsdHkgc2hvdWxkIG5vdCBoYXZlIGEgcGxhY2UgaW4gbW9kZXJuIHNvY2lldGllcyBhcyBpdCBpcyBhbiB1bmNvbnN0aXR1dGlvbmFsIGFjdC4nICBJbmZlcmVuY2UgMiBpcyBpbmNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zICdVbHRpbWF0ZWx5LCB0aGUgZnV0dXJlIG9mIHRoZSBkZWF0aCBwZW5hbHR5IHdpbGwgZGVwZW5kIG9uICB3aGV0aGVyIGl0IGlzIHJldGFpbmluZyBwdWJsaWMgc3VwcG9ydCcuIFRoZXNlIGxpbmVzIHNob3cgdGhhdCB0aGUgY29udGludWFuY2Ugb2YgdGhlIGRlYXRoIHBlbmFsdHkgZGVwZW5kcyAgb24gcHVibGljIHN1cHBvcnQ7IGJ1dCB0byBpbmZlciB0aGF0IGF3YXJlbmVzcyBpcyBhIG11c3QgdG8gcmVkdWNlIHB1YmxpYyBzdXBwb3J0IHdvdWxkIG5vdCBiZSBjb3JyZWN0IGJlY2F1c2UgIHRoZSBwYXNzYWdlIG5vd2hlcmUgZGlzY3Vzc2VzIHRoYXQgcHVibGljIHN1cHBvcnQgaXMgdGhlIG1vc3QgaW1wb3J0YW50IGRldGVybWluYW50IG9mIGl0cyB1c2UuIEV2ZW4gaW4gdGhlICBmaXJzdCBsaW5lIG9mIHRoZSBwYXNzYWdlLCB0aGUgYXV0aG9yIGhhcyB1c2VkICdzb21ldGltZXMnIHdoaWxlIHRhbGtpbmcgYWJvdXQgcHVibGljIHN1cHBvcnQuIEhlbmNlLCB0aGlzICBpbmZlcmVuY2UgaXMgbm90IGNvcnJlY3QuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2        15                                                                                                                                                             "
      }
    },
    {
      "index" : 62,
      "question" : "What is the crucial message conveyed by the above passage? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYy",
      "description" : "IE9wdGlvbiAoYSkgaXMgaW5jb3JyZWN0LiBUaGlzIG9wdGlvbiBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdUaGUgQ291cnQgaGFzIGJlZW4gcmVsdWN0YW50IHRvIHJlbHkgIG9uIG9waW5pb24gcG9sbHMgdG8gbWVhc3VyZSB0aGVzZSBzdGFuZGFyZHMgYmVjYXVzZSBwb2xsIHJlc3VsdHMgY2FuIHZhcnkgd2lkZWx5IGRlcGVuZGluZyBvbiB0aGUgcG9sbGluZyAgZmlybSBhbmQgdGhlIHNwZWNpZmljIHdvcmRpbmcgb2YgdGhlIHF1ZXN0aW9ucyBhc2tlZCcsIHJlZmxlY3RzIHRoYXQgb3BpbmlvbiBwb2xscyBhcmUgbm90IHJlbGlhYmxlIGFuZCBzaG91bGQgIG5vdCBiZSBhIG1lY2hhbmlzbSBmb3IgZXZhbHVhdGluZyBwdWJsaWMgc3VwcG9ydCBmb3IgdGhlIGRlYXRoIHBlbmFsdHkuICBPcHRpb24gKGIpIGlzIGluY29ycmVjdC4gVGhlIG1haW4gZGlzY3Vzc2lvbiBvZiB0aGUgcGFzc2FnZSBpcyBub3QgYWJvdXQgd2hpY2ggY291cnQgc2hvdWxkIGdpdmUgdGhlIGRlYXRoICBwZW5hbHR5LiBTbywgdG8gc2F5IHRoYXQgb25seSB0aGUgYXBleCBjb3VydCBzaG91bGQgYXdhcmQgdGhlIGRlYXRoIHBlbmFsdHkgdG8gYXZvaWQgYSBtaXNjYXJyaWFnZSBvZiBqdXN0aWNlICBtZWFucyB0aGF0IGxvd2VyIGNvdXJ0cyBoYXZlIGRvbmUgYSBtaXNjYXJyaWFnZSBvZiBqdXN0aWNlIHdoaWNoIGlzIG5vdCBjb3ZlcmVkIGluIHRoZSBwYXNzYWdlLCBub3IgaXMgdGhlICBjcnVjaWFsIG1lc3NhZ2Ugb2YgdGhlIHBhc3NhZ2UuICBPcHRpb24gKGMpIGlzIGluY29ycmVjdC4gVGhlIGxpbmVzICdJbnN0ZWFkLCB0aGUgQ291cnQgaGFzIGxvb2tlZCB0byB0aGUgYWN0aW9ucyBvZiBzdGF0ZSBsZWdpc2xhdHVyZXMgYW5kIHRoZSAgZGVjaXNpb25zIG9mIGp1cmllcywgcHJvc2VjdXRvcnMgYW5kIGdvdmVybm9ycywgYXMgcmVmbGVjdGluZyBwdWJsaWMgd2lsbCcsIHNob3cgdGhhdCB0aGUgY291cnQgZm9yIGF3YXJkaW5nICB0aGUgZGVhdGggcGVuYWx0eSBoYXMgcmVmZXJyZWQgdG8gdGhlIGFjdGlvbnMgb2YgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlIGFuZCBnb3Zlcm5vcnMgZm9yIHVuZGVyc3RhbmRpbmcgcHVibGljICB3aWxsLiBCdXQsIHRoZSBnaXZlbiBvcHRpb24gc3RhdGVzIHRoZSBjb250cmFkaWN0b3J5IHZpZXcgdGhhdCBzdGF0ZSBsZWdpc2xhdHVyZSBhbmQgZ292ZXJub3JzIHNob3VsZCBub3QgIGluZmx1ZW5jZSB0aGUgZGVjaXNpb24gb2YgdGhlIGNvdXJ0LCB3aGljaCBpcyBub3QgY29ycmVjdC4gVGhlcmVmb3JlLCB0aGlzIGlzIG5vdCB0aGUgY3J1Y2lhbCBtZXNzYWdlIG9mIHRoZSAgcGFzc2FnZS4gIE9wdGlvbiAoZCkgaXMgY29ycmVjdC4gVGhpcyBvcHRpb24gY2FwdHVyZXMgdGhlIHJlYWwgZXNzZW5jZSBvZiB0aGUgcGFzc2FnZS4gUmVmZXIgdG8gdGhlIGxpbmVzICdJbnN0ZWFkLCB0aGUgIENvdXJ0IGhhcyBsb29rZWQgdG8gdGhlIGFjdGlvbnMgb2Ygc3RhdGUgbGVnaXNsYXR1cmVzIGFuZCB0aGUgZGVjaXNpb25zIG9mIGp1cmllcywgcHJvc2VjdXRvcnMgYW5kIGdvdmVybm9ycywgIGFzIHJlZmxlY3RpbmcgcHVibGljIHdpbGwuIFRoZSBteXJpYWQgb2YgZGlzdHVyYmluZyBmYWN0cyBhYm91dCB0aGUgZGVhdGggcGVuYWx0eSBoYXMgbGVkIHRvIGEgc2hhcnAgZGVjbGluZSAgaW4gaXRzIHVzZS4gVWx0aW1hdGVseSwgdGhlIGZ1dHVyZSBvZiB0aGUgZGVhdGggcGVuYWx0eSB3aWxsIGRlcGVuZCBvbiB3aGV0aGVyIGl0IGlzIHJldGFpbmluZyBwdWJsaWMgc3VwcG9ydCcuICBUaGVzZSBsaW5lcyBzaG93IHRoYXQgZm9yIGRlYXRoIHBlbmFsdHkgcHVibGljIHN1cHBvcnQgaXMgaW1wb3J0YW50LCBhbmQgdGhlIG1lY2hhbmlzbSB0byB1bmRlcnN0YW5kIHB1YmxpYyAgd2lsbCBpcyB0aHJvdWdoIGluc3RpdHV0aW9ucyBsaWtlIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSwgZ292ZXJub3JzIGV0Yy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Opinion polls could be a good mechanism  for evaluating public support for the death  penalty. ",
        "option2" : " Death penalty should be given only by the  apex court so that there is no miscarriage of  justice. ",
        "option3" : " State legislature and governors should not  influence the Supreme Courts' judgement  related to the death penalty. ",
        "option4" : " Continuance of the death penalty depends  on society's opinion reflected through  institutional mechanisms.  "
      }
    },
    {
      "index" : 63,
      "question" : "Find the wrong term in the given series. 4, 12, 45, 215, 1305  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYz",
      "description" : "IEdpdmVuIHNlcmllczogIDQsIDEyLCA0NSwgMjE1LCAxMzA1ICBUaGUgcGF0dGVybiBoZXJlIGlzOiAgNCAtPiBGaXJzdCB0ZXJtICA0IMOXIDMgLSAwIC0+IDEyICAxMiDDlyA0IC0gMyAtPiA0NSAgNDUgw5cgNSAtIDYgLT4gMjE5IOKJoCAyMTUgKGluIHNlcmllcyBpdCBpcyBnaXZlbiBhcyAyMTUpICAyMTkgw5cgNiAtIDkgLT4gMTMwNSAgU28sIDIxNSBpcyB0aGUgd3JvbmcgdGVybS4gIEhlbmNlLCBvcHRpb24gKGEpIGlzIGNvcnJlY3QuICAgICAgIDIwICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 215 ",
        "option2" : " 45 ",
        "option3" : " 12 ",
        "option4" : " 1305  "
      }
    },
    {
      "index" : 64,
      "question" : "If in a code language word 'CORRESPONDING' is coded as 'HJWMJNUJSYNIL' then what will be the code for the word 'RESPONSE'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY0",
      "description" : "IEFzLCAgIFNpbWlsYXJseSwgYXBwbHlpbmcgdGhlIHNhbWUgY29uY2VwdCBpbiAnUkVTUE9OU0UnLiAgIEhlbmNlLCBvcHRpb24gKGIpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " WJNUJIZ ",
        "option2" : " WZXKTIXZ ",
        "option3" : " WXJNTXIZ ",
        "option4" : " WZXKTXIZ  Directions for the following 2 (two) items:  The digits from 0 to 9 are coded as shown below.   Condition I.  If a number begins and ends with zero or  an even number, then the first and last digits are to be  coded as A and lambda (lamda) respectively.  Condition II.  If a number begins with one and ends  with zero, then the first and last digits are to be coded  as gama (gamma) and E respectively.   "
      }
    },
    {
      "index" : 65,
      "question" : "What is the code for 379150?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY1",
      "description" : "IEZvciB0aGUgZ2l2ZW4gbnVtYmVyIG5vbmUgb2YgdGhlIGFib3ZlIHR3byBjb25kaXRpb25zIGFyZSBhcHBsaWNhYmxlLiBIZW5jZSBjb2RlIGZvciAnMzc5MTUwJyBjYW4gc2ltcGx5ICBiZSBkZXJpdmVkIGZyb20gdGhlIGNoYXJ0IGdpdmVuIGluIHRoZSBxdWVzdGlvbi4gIDM3OTE1MCAtPiDDmEUgVSp0aGV0aGFaICBTbywgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " MEZ*thethaR ",
        "option2" : " ØEU*thethaZ ",
        "option3" : " lambdaØU*thethaE ",
        "option4" : " Cannot be determined  "
      }
    },
    {
      "index" : 66,
      "question" : "What will be the code for 147689020? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY2",
      "description" : "IEhlcmUsIHRoZSAybmQgY29uZGl0aW9uIGlzIGFwcGxpY2FibGUgYXMgdGhlIG51bWJlciBiZWdpbnMgd2l0aCAxIGFuZCBlbmRzIHdpdGggMC4gU28sIHRoZSBmaXJzdCBhbmQgbGFzdCBkaWdpdHMgIGFyZSB0byBiZSBjb2RlZCBhcyBnYW1hIChnYW1tYSkgYW5kIEUgcmVzcGVjdGl2ZWx5LiAgUmVzdCBvZiB0aGUgZGlnaXRzIHdpbGwgYmUgY29kZWQgYXMgcGVyIHRoZSBjaGFydCBnaXZlbiBpbiAgdGhlIHF1ZXN0aW9uLiAgMTQ3Njg5MDIwIC0+IGdhbWFNRWNSVVpYRSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " *MEcRUZXZ   ",
        "option2" : " gamaME*RUZXE ",
        "option3" : " gamaMEØRUZXE  ",
        "option4" : " gamaMEcRUZXE  "
      }
    },
    {
      "index" : 67,
      "question" : "Anurag cuts down a large painted cube into a number of small identical cubes. He found that among the small cubes there were 64 cubes which didn't have any face painted. How many small cubes have exactly one face painted? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY3",
      "description" : "IE51bWJlciBvZiBjdWJlcyB3aXRoIG5vIGZhY2UgcGFpbnRlZCA9IChuIC0gMikzID0gNjQgIG9yIG4gLSAyID0gNCAgb3IgbiA9IDYgICBOdW1iZXIgb2Ygc21hbGwgY3ViZXMgdGhhdCBoYXZlIGV4YWN0bHkgb25lIGZhY2UgcGFpbnRlZCA9IDYobiAtIDIpMiA9IDYgw5cgKDYgLSAyKTIgPSA5NiAgSGVuY2UsIG9wdGlvbiAoZCkgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 216 ",
        "option2" : " 100 ",
        "option3" : " 72 ",
        "option4" : " 96        16                                                                                                                                                             "
      }
    },
    {
      "index" : 68,
      "question" : "Which of the folded dice given in options is identical to the unfolded dice shown below? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY4",
      "description" : "IEdpdmVuIHVuZm9sZGVkIGRpY2U6ICAgRnJvbSB1bmZvbGRlZCBkaWNlLCBpdCBpcyBjbGVhciB0aGF0ICAtPiBGIGlzIG9wcG9zaXRlIHRvIEUgIC0+IEQgaXMgb3Bwb3NpdGUgdG8gQiAgIC0+IEMgaXMgb3Bwb3NpdGUgdG8gQSAgVGhlcmVmb3JlIG9wdGlvbnMgKGEpLCAoYykgYW5kIChkKSBhcmUgbm90IHBvc3NpYmxlLCBiZWNhdXNlIGFscGhhYmV0IGZvcm1pbmcgdGhlIG9wcG9zaXRlIHBhaXJzIGFwcGVhciBvbiAgdGhlIGFkamFjZW50IHN1cmZhY2VzLiAgSGVuY2UsIG9wdGlvbiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "   ",
        "option2" : "   ",
        "option3" : "   ",
        "option4" : "    "
      }
    },
    {
      "index" : 69,
      "question" : "Consider the following views of a dice. Which alphabet must be opposite to C? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY5",
      "description" : "IExldCB1cyB0YWtlIGRpY2UgMSBhbmQgMiwgd2hlcmUgRiBhbmQgQiBhcmUgY29tbW9uLiBUaHVzLCB1bmNvbW1vbiBmYWNlcyBvZiBib3RoIGRpY2VzLCBpLmUuIEMgYW5kIEQsICBtdXN0IGJlIG9wcG9zaXRlIHRvIGVhY2ggb3RoZXIuICBTbywgQyBpcyBvcHBvc2l0ZSB0byBELiAgSGVuY2UsIG9wdGlvbiAoYikgaXMgY29ycmVjdC4gICAgICAgMjEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A ",
        "option2" : " D ",
        "option3" : " E ",
        "option4" : " Data is insufficient.  "
      }
    },
    {
      "index" : 70,
      "question" : "Bhola is trying to cut a big cubical block into small and identical 729 cubical blocks using the minimum possible cuts. His cuts may be along the X, Y, or Z coordinates and go across the block (i.e. from one side to another side). After making each cut he takes a rest for 80 seconds. In the whole cutting session, what is the total time of rest taken by Bhola? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "IEZpcnN0LCB3ZSBuZWVkIHRvIGZpbmQgdGhlIHRvdGFsIG51bWJlciBvZiBjdXRzIG1hZGUgYnkgaGltLiAgSGVyZSwgbjMgPSA3MjkgIG9yIG4gPSAoNzI5KTEvMyAgb3IgbiA9IDkgICBXZSBrbm93IHRoYXQgdGhlIHRvdGFsIG51bWJlciBvZiBjdXRzID0gOCArIDggKyA3ID0gMjMgKGFmdGVyIHRoZSBsYXN0IGN1dCwgaGlzIHJlc3Qgd2lsbCBub3QgY291bnQpICBUb3RhbCB0aW1lIG9mIHJlc3QgPSAyNCDDlyA4MCA9IDE4NDAgcyA9IDMwLjY3IG1pbiAgIEhlbmNlLCBvcHRpb24gKGMpIGlzIGNvcnJlY3QuICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 24 min ",
        "option2" : " 36 min ",
        "option3" : " 30 min ",
        "option4" : " 20 min  Directions for the following 4 (four) items:  Read the following four passages and answer the items  that follow each passage. Your answers to these items  should be based on the passages only. "
      }
    },
    {
      "index" : 71,
      "question" : "Which of the following is/are the most rational and logical Inference/Inferences that can be made from the passage? 1. Only economic growth has the potential to overcome the menace of poverty. 2. Health and education have a direct correlation with poverty reduction. Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcx",
      "description" : "IEluZmVyZW5jZSAxIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIGluZmVyZW5jZSBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZSBsaW5lICdHZW5lcmFsbHksIHBvdmVydHkgY2Fubm90IGJlICByZWR1Y2VkIGlmIGVjb25vbWljIGdyb3d0aCBkb2VzIG5vdCBvY2N1cicgbWVhbnMgdGhhdCBnZW5lcmFsbHkgdGhpcyBjb3JyZWxhdGlvbiBpcyBjb3JyZWN0LCBidXQgdG8gaW5mZXIgdGhhdCAgb25seSBlY29ub21pYyBncm93dGggY2FuIGVuZCBwb3ZlcnR5IHdvdWxkIG5vdCBiZSBjb3JyZWN0LiBUaGUgbGluZSAnQWxzbywgdGhlIGluaXRpYWwgZGlzdHJpYnV0aW9uIG9mICBpbmNvbWUgKGFuZCB3ZWFsdGgpIGNhbiBncmVhdGx5IGFmZmVjdCB0aGUgcHJvc3BlY3RzIGZvciBncm93dGggYW5kIGFsbGV2aWF0aW9uIG9mIG1hc3MgcG92ZXJ0eScsIG1lYW5zICB0aGF0IGV2ZW4gd2l0aCBncm93dGggYW5kIHBvb3IgZGlzdHJpYnV0aW9uLCBlbmRpbmcgcG92ZXJ0eSBpcyBub3QgZWFzeS4gIEluZmVyZW5jZSAyIGlzIGNvcnJlY3QuIFRoZSBwYXNzYWdlIG1lbnRpb25zICdFeHBlcmllbmNlIGhhcyBzaG93biB0aGF0IGlmIGNvdW50cmllcyBwdXQgaW4gcGxhY2UgaW5jZW50aXZlICBzdHJ1Y3R1cmVzIGFuZCBjb21wbGVtZW50YXJ5IGludmVzdG1lbnRzIHRvIGVuc3VyZSBiZXR0ZXIgaGVhbHRoIGFuZCBlZHVjYXRpb24sIGl0IGNhbiBsZWFkIHRvIGhpZ2hlciAgaW5jb21lcywgdGhlIHBvb3Igd2lsbCBiZW5lZml0IGRvdWJseSB0aHJvdWdoIGluY3JlYXNlZCBjdXJyZW50IGNvbnN1bXB0aW9uIGFuZCBoaWdoZXIgZnV0dXJlIGluY29tZXMnLiAgVGhlc2UgbGluZXMgc2hvdyB0aGF0IHRoZSBpbnZlc3RtZW50cyBpbiBoZWFsdGggYW5kIGVkdWNhdGlvbiBjYW4gaGF2ZSBhIGRpcmVjdCBpbXBhY3Qgb24gcG9vciBwZW9wbGUgYW5kICB0aGV5IGNhbiBnZXQgaGlnaGVyIGZ1dHVyZSBpbmNvbWVzIHdoaWNoIGNhbiBsZWFkIHRvIHBvdmVydHkgcmVkdWN0aW9uLiBIZW5jZSwgdGhpcyBpbmZlcmVuY2UgaXMgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 72,
      "question" : "Based on the above passage, the following  assumptions have been made: 1. Indians take good care of their smartphones as compared to their western counterparts. 2. Changing smartphones in today's world has become a style statement. 3. India must come up with adequate environmental rules for handling tonnes of e-waste generated through obsolete phones. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lcyAnSW5kaWEgaXMgdGhlIGZhc3Rlc3QtZ3Jvd2luZyBtYXJrZXQgaW4gdGhlIHdvcmxkIGZvciBzbWFydHBob25lcyAgd2l0aCAyNyBtaWxsaW9uIHVuaXRzIHNoaXBwZWQgaW4gdGhlIHNlY29uZCBxdWFydGVyIG9mIDIwMTYgYWxvbmUsIGFuZCB0aG91Z2ggdGhlIGxpZmVzcGFuIG9mIGEgbW9iaWxlICBwaG9uZSBpcyBoaWdoZXIgaW4gSW5kaWEgdGhhbiBpbiB0aGUgV2VzdCwgb25lIGNhbiBpbWFnaW5lIHRoZSBudW1iZXIgb2YgJ29ic29sZXRlIiBwaG9uZXMgY29udHJpYnV0aW5nICB0byBlbGVjdHJvbmljIHdhc3RlIChlLXdhc3RlKScuIEZyb20gdGhlIGhpZ2hsaWdodGVkIHBvcnRpb24gaXQgbWlnaHQgZmVlbCB0aGF0IHRoZSBnaXZlbiBhc3N1bXB0aW9uIGlzICBjb3JyZWN0LCBidXQgaXQgaXMgbm90IGJlY2F1c2UgbWVyZWx5IGJhc2VkIG9uIHRoaXMgaW5mb3JtYXRpb24gd2UgY2Fubm90IGNvbmNsdWRlIHRoYXQgdGhlIHJlYXNvbiBmb3IgdGhlICBoaWdoIGxpZmVzcGFuIG9mIG1vYmlsZXMgaW4gSW5kaWEgaXMgYmVjYXVzZSBJbmRpYW5zIHRha2UgZ29vZCBjYXJlIG9mIHRoZWlyIHBob25lcywgYW5kIHRoZSB3ZXN0ZXJuIHBlb3BsZSAgZG9uJ3QuIFRoZXJlZm9yZSwgaXQgaXMgbm90IGEgY29ycmVjdCBhc3N1bXB0aW9uLiAgIEFzc3VtcHRpb24gMiBpcyBjb3JyZWN0LiBUaGlzIGFzc3VtcHRpb24gaXMgY29ycmVjdCBiZWNhdXNlIG9mIHRoZSBsaW5lcyAnU21hcnRwaG9uZSBtYWtlcnMsIGZvciBleGFtcGxlLCAgcmVsZWFzZSBhIG5ldyBtb2RlbCBldmVyeSB5ZWFyIHdpdGggbmV3IGZlYXR1cmVzIGFuZCBmb3IgbWFueSwgbm90IHJlcGxhY2luZyBvbmUncyBwZXJmZWN0bHkgZnVuY3Rpb25hbCAgc21hcnRwaG9uZSB3aXRoIHRoZSBsYXRlc3QgbW9kZWwgaXMgYmVpbmcgJ291dCBvZiBmYXNoaW9uIi4gVGhlc2UgbGluZXMgY29uZmlybSB0aGUgZXNzZW5jZSBvZiB0aGUgc3RhdGVtZW50ICAtIGNoYW5naW5nIHNtYXJ0cGhvbmVzIGhhcyBiZWNvbWUgYSBzdHlsZSBzdGF0ZW1lbnQuICAgQXNzdW1wdGlvbiAzIGlzIGluY29ycmVjdC4gVGhlIGdpdmVuIHN0YXRlbWVudCBpcyBub3QgY29ycmVjdCBiZWNhdXNlIHRoZXJlIGlzIG5vIGNvbnRleHQgb2YgZS13YXN0ZSBydWxlcyAgYmVpbmcgZGlzY3Vzc2VkIGluIHRoZSBwYXNzYWdlLiBDZXJ0YWlubHksIHN1Y2ggcnVsZXMgYXJlIG5lZWRlZCBidXQgdGhhdCBhc3N1bXB0aW9uIHNob3VsZCBiZSBiYXNlZCBvbiB0aGUgIGluZm9ybWF0aW9uIGluIHRoZSBwYXNzYWdlLiBJZiB0aGVyZSBpcyBubyBtZW50aW9uIG9mIGFueSBpc3N1ZXMgd2l0aCBleGlzdGluZyBydWxlcywgdGhlbiBpdCBpcyBub3QgY29ycmVjdCB0byAgYXNzdW1lIHRoYXQgdGhlIGdpdmVuIHN0YXRlbWVudCBpcyBjb3JyZWN0LiBTbywgdGhpcyBpcyBub3QgdGhlIGNvcnJlY3QgYXNzdW1wdGlvbi4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 3 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 73,
      "question" : "Based on the above passage, the following assumptions have been made: 1. The training of civil servants to maintain the status quo should be replaced with innovation. 2. Indian civil services have failed to uplift the social and economic status of the country. 3. Customizing Indian civil services during independence itself would have been a better approach. Which of the above assumptions is/are valid? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcz",
      "description" : "IEFzc3VtcHRpb24gMSBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBhc3N1bXB0aW9uIGlzIG5vdCBjb3JyZWN0IGJlY2F1c2Ugd2UgY2Fubm90IGFzc3VtZSB0aGF0IGNpdmlsICBzZXJ2YW50cyBhcmUgdHJhaW5lZCB0byBtYWludGFpbiB0aGUgc3RhdHVzIHF1by4gVGhlIGF1dGhvciBkb2VzIG5vdCBtYWtlIGFuIGluZGljYXRpb24gaW4gdGhpcyBkaXJlY3Rpb24uICBBbHNvLCB0aGVyZSBpcyBubyBkaXNjdXNzaW9uIGFib3V0IHRyYWluaW5nIGFuZCBpdHMgaW1wYWN0IG9uIHRoZSBhdHRpdHVkZSBvZiBjaXZpbCBzZXJ2YW50cy4gIEFzc3VtcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBsaW5lICdJdCBjYW4gYmUgc2FpZCB0aGF0IHRoZSBjaXZpbCBzZXJ2aWNlIGFzIGEgd2hvbGUgaGFzIG1haW50YWluZWQgaXRzICBzdGF0dXMgcXVvIGluc3RlYWQgb2Ygc3dlZXBpbmcgY2hhbmdlcyBpbiBzb2NpYWwgYW5kIGVjb25vbWljIHNjZW5hcmlvJywgc2hvd3MgdGhhdCBjaXZpbCBzZXJ2aWNlIGhhcyBub3QgIGJlZW4gYWJsZSB0byBtYWtlIHN3ZWVwaW5nIGNoYW5nZXMgaW4gaXRzZWxmIChyYXRoZXIgdGhhbiB0aGUgY291bnRyeSkuIEFsc28sIHRvIHRlcm0gaXQgYXMgYSBmYWlsdXJlIHdvdWxkICBub3QgYmUgY29ycmVjdC4gU28sIHRoaXMgYXNzdW1wdGlvbiBpcyBub3QgY29ycmVjdC4gIEFzc3VtcHRpb24gMyBpcyBpbmNvcnJlY3QuIFRoZSBnaXZlbiBzdGF0ZW1lbnQgaXMgYSBoeXBvdGhldGljYWwgb25lIGFuZCBpcyBiZXlvbmQgdGhlIHNjb3BlIG9mIHRoZSAgcGFzc2FnZS4gVGhlcmVmb3JlLCB0aGUgZ2l2ZW4gYXNzdW1wdGlvbiBpcyBub3QgY29ycmVjdC4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " None of the above ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3        18                                                                                                                                                             "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
