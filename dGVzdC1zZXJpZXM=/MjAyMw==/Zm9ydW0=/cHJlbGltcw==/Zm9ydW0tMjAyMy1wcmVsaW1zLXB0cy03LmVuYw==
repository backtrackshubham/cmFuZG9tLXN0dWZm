{
  "testId" : "forum-2023-prelims-pts-7",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-pts-7.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements  regarding the Inamgaon archaeological site:  1.  It is a port town located in Gujarat.  2.  At this site, adults were buried with vessels  containing food and water.  3.  Farming was the main occupation.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluYW1nYW9uIGlzIGFuIGFncmFyaWFuIHZpbGxhZ2UgYW5kIGFyY2hhZW9sb2dpY2FsIHNpdGUgbG9jYXRlZCBpbiBNYWhhcmFzaHRyYSwgd2VzdGVybiBJbmRpYS4gSXQgaXMgICBzaXR1YXRlZCBhbG9uZyB0aGUgcmlnaHQgYmFuayBvZiB0aGUgR2hvZCBSaXZlciBhbmQgaXMgY29uc2lkZXJlZCB0byBiZSB0aGUgJ3JlZ2lvbmFsIGNlbnRyZScgb2YgdGhlICAgQmhpbWEgVmFsbGV5LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogSW5hbWdhb24gaXMgYSBzaXRlIG9uIHJpdmVyIEdob2QsIGEgdHJpYnV0YXJ5IG9mIHRoZSBCaGltYSBSaXZlci4gSXQgaXMgaW4gdGhlICAgbW9kZXJuIHN0YXRlIG9mIE1haGFyYXNodHJhLiBUaGlzIGlzIGxvY2F0ZWQgYWJvdXQgODkga20gdG8gdGhlIGVhc3Qgb2YgUHVuZS4gSW5hbWdhb24gaXMgc2l0dWF0ZWQgbmVhciAgIHRoZSBHaG9kIHJpdmVyLiBJbmFtZ2FvbiB3YXMgb2NjdXBpZWQgYmV0d2VlbiAzNjAwIGFuZCAyNzAwIHllYXJzIGFnby4gICAgRGhvbGF2aXJhIGlzIGFuIEhhcnJhcGFuIHNpdGUgYXQgS2hhZGlyYmV0IGluIEJoYWNoYXUgVGFsdWthIG9mIEt1dGNoIERpc3RyaWN0LCBpbiB0aGUgc3RhdGUgb2YgR3VqYXJhdCBpbiAgIHdlc3Rlcm4gSW5kaWEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXQgSW5hbWdhb24gc2l0ZSwgdXN1YWxseSBhZHVsdHMgd2VyZSBidXJpZWQuIFRoZSBkZWFkIGJvZHkgd2FzIGxhaWQgc3RyYWlnaHQ7ICAgd2l0aCB0aGUgaGVhZCBmYWNpbmcgdG93YXJkcyBub3J0aC4gU29tZSBvZiB0aGUgYnVyaWFsIHdhcyBkb25lIGluc2lkZSB0aGUgaG91c2UuIFBlb3BsZSB1c2VkIHRvIHBsYWNlICAgdmVzc2VscyBhbG9uZyB3aXRoIHRoZSBkZWFkLiBUaGUgdmVzc2VscyBwcm9iYWJseSBjb250YWluZWQgZm9vZCBpdGVtcy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBSZW1haW5zIG9mIHdoZWF0LCBiYXJsZXksIGxlbnRpbHMsIG1pbGxldHMgYW5kIHNlc2FtZSBoYXZlIGJlZW4gZm91bmQgZnJvbSB0aGUgICBJbmFtZ2FvbiBzaXRlLiBSZW1haW5zIG9mIHZhcmlvdXMgYW5pbWFscyBoYXZlIGJlZW4gZm91bmQ7IGxpa2UgY2F0dGxlLCBidWZmYWxvLCBnb2F0LCBzaGVlcCwgZG9nLCBob3JzZSwgICBhc3MsIHBpZywgc2FtYmhhciwgc3BvdHRlciBkZWVyLCBibGFja2J1Y2ssIGFudGVsb3BlLCBoYXJlIGFuZCBtb25nb29zZS4gUmVtYWlucyBvZiBiaXJkcywgY3JvY29kaWxlcywgICB0dXJ0bGVzLCBjcmFiIGFuZCBmaXNoIGhhdmUgYWxzbyBiZWVuIGZvdW5kIGZyb20gdGhpcyBzaXRlLiBUaGUgYWJvdmUgZmluZGluZ3Mgc2hvdyB0aGF0IGZhcm1pbmcgd2FzIHRoZSAgIG1haW4gb2NjdXBhdGlvbiBvZiBwZW9wbGUgb2YgSW5hbWdhb24uIEFuaW1hbHMgd2VyZSBkb21lc3RpY2F0ZWQgZm9yIG1pbGsgYW5kIG1lYXQuIFdpbGQgYW5pbWFscyAgIHdlcmUgYWxzbyBraWxsZWQgZm9yIG1lYXQuICAgU291cmNlKSBDTEFTUyA2IFtPVVIgUEFTVCBJIC0gUGcgNDEsNDIgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 2,
      "question" : "The rulers of the Mahajapadas period  needed resources to build the huge fortress.  For this purpose, who among the following  were taxed by the rulers?  1. Agriculturalist  2. Traders   3. Crafts persons  4.  Army personnels  5. Hunters and Gatherers  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFzIHRoZSBydWxlcnMgb2YgdGhlIE1haGFqYW5hcGFkYXMgd2VyZSBidWlsZGluZyBodWdlIGZvcnRzLCBtYWludGFpbmluZyBiaWcgYXJtaWVzLCB0aGV5IG5lZWRlZCBtb3JlICAgcmVzb3VyY2VzLiBBbmQgdGhleSBuZWVkZWQgb2ZmaWNpYWxzIHRvIGNvbGxlY3QgdGhlc2UuIFNvLCBpbnN0ZWFkIG9mIGRlcGVuZGluZyBvbiBvY2Nhc2lvbmFsIGdpZnRzIGJyb3VnaHQgICBieSBwZW9wbGUsIHRoZXkgc3RhcnRlZCBjb2xsZWN0aW5nIHJlZ3VsYXIgdGF4ZXMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUnVsZXJzIG9mIE1haGFqYW5hcGFkYXMgaW4gYW5jaWVudCBJbmRpYSBjb2xsZWN0ZWQgYSB0YXggY2FsbGVkICdCaGFnYScgZnJvbSB0aGUgICBGYXJtZXJzIGluIHRoZWlyIHJlZ2lvbi4gTWFoYWphbmFwYWRhczogVGF4ZXMgb24gY3JvcHMgd2VyZSB0aGUgbW9zdCBpbXBvcnRhbnQuIFRoaXMgd2FzIGJlY2F1c2UgICAgIG9mIDIxICAgICAgICBhZ3JpY3VsdHVyZSB3YXMgdGhlIG1haW4gb2NjdXBhdGlvbiBhdCB0aGF0IHRpbWUuIFVzdWFsbHksIHRoZSB0YXggd2FzIGZpeGVkIGF0IDEvNnRoIG9mIHdoYXQgd2FzICAgcHJvZHVjZWQuIFRoaXMgd2FzIGtub3duIGFzIGJoYWdhIG9yIGEgc2hhcmUuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlcmUgd2VyZSB0YXhlcyBvbiBnb29kcyB0aGF0IHdlcmUgYm91Z2h0IGFuZCBzb2xkLCB0aHJvdWdoIHRyYWRlLiBUaGUgY2F0dGxlICAgcmFpZHMgb2YgdGhlIHByZWNlZGluZyBwZXJpb2Qgd2VyZSByZXBsYWNlZCBieSBvcmdhbmlzZWQgY2FtcGFpZ25zIGluIHdoaWNoIHRlcnJpdG9yeSB3YXMgYW5uZXhlZCBhbmQgICBhZ3JpY3VsdHVyaXN0cyBhbmQgdHJhZGVycyB3ZXJlIGZvcmNlZCB0byBwYXkgdGF4ZXMgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGVyZSB3ZXJlIHRheGVzIG9uIGNyYWZ0c3BlcnNvbiBhcyB3ZWxsIGluIE1haGFqYW5hcGFkYXMuIFRoZXNlIGNvdWxkIGhhdmUgICBiZWVuIGluIHRoZSBmb3JtIG9mIGxhYm91ci4gRm9yIGV4YW1wbGUsIGEgd2VhdmVyIG9yIGEgc21pdGggbWF5IGhhdmUgaGFkIHRvIHdvcmsgZm9yIGEgZGF5IGV2ZXJ5IG1vbnRoICAgZm9yIHRoZSBraW5nLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogQXJteSBQZXJzb25uZWwgd2VyZSBub3QgcmVxdWlyZWQgdG8gcGF5IHRheGVzLiBPbiB0aGUgY29udHJhcnksIGFybXkgd2FzIHBhaWQgICBvdXQgb2YgdGhlIHJldmVudWVzIGNvbGxlY3RlZCBmcm9tIHRoZSBjdWx0aXZhdG9ycy4gICAgU3RhdGVtZW50IDUgaXMgY29ycmVjdDogQ3JhZnRzIHBlcnNvbnMsIGZhcm1lcnMsIGh1bnRlci1nYXRoZXJlcnMsIGhlcmRlcnMgd2VyZSBsaWFibGUgdG8gcGF5IHRoZXNlIHRheGVzICAgaW4gb25lIGZvcm0gb3IgdGhlIG90aGVyLiBIdW50ZXItZ2F0aGVyZXJzIHByb3ZpZGVkIGZvcmVzdCBwcm9kdWNlIHRvIHRoZSByYWphIGFzIGEgdGF4LiAgIFNvdXJjZSkgQ0xBU1MgNiBbT1VSIFBBU1QgSSAtIFBnIDUxXSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only  ",
        "option2" : "1, 2, 3 and 5 only  ",
        "option3" : "2, 3, and 5 only  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to 6th Century B.C. India,  'Kammakaras' were  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEthbW1ha2FyYXMgd2VyZSBsYW5kbGVzcyBhZ3JpY3VsdHVyYWwgbGFib3VyZXJzLiAgIFRoZSB2aWxsYWdlcyBvZiB0aGUgc2l4dGggY2VudHVyeSBCLkMuIHdlcmUgc2V0dGxlbWVudHMgd2hlcmUgcGVvcGxlIGdlbmVyYWxseSBwdXJzdWVkIGFncmljdWx0dXJhbCAgIGFjdGl2aXRpZXMuIFRoaXMgc2lnbmlmaWVzIGEgc2hpZnQgZnJvbSBhIHBhc3RvcmFsIHRvIGFncmljdWx0dXJhbCBhY3Rpdml0aWVzLiBUaGVyZSB3ZXJlIHZhcmlvdXMga2luZHMgb2Ygc21hbGwgICBhbmQgbGFyZ2UgdmlsbGFnZXMgaW5oYWJpdGVkIGJ5IGEgc2luZ2xlIGhvdXNlaG9sZCBvciBtYW55IGZhbWlsaWVzLiBUaGUgaG91c2Vob2xkcyBzZWVtIHRvIGhhdmUgYmVlbiAgIHBhcnQgb2YgYW4gZXh0ZW5kZWQga2luIGdyb3VwLCBtZWFuaW5nIHRoYXQgZXZlcnlvbmUgd2FzIHJlbGF0ZWQgdG8gZXZlcnlvbmUgZWxzZSBpbiB0aGUgdmlsbGFnZXMuICAgIEhvd2V2ZXIsIHdpdGggdGhlIGVtZXJnZW5jZSBvZiBmYW1pbGllcyB3aG8gaGFkIGxhcmdlIGxhbmRob2xkaW5ncyBhbmQgd2hvIGVtcGxveWVkIHRoZSBsYWJvdXIgb2YgICBkYXNhcyAoc2xhdmUgbWVuIGFuZCB3b21lbiksIEthbW1ha2FyYXMgYW5kIHBvcmlzYXMsIHZpbGxhZ2VzIGluaGFiaXRlZCBieSBub24ta2luc2hpcCBncm91cHMgYWxzbyAgIGNhbWUgaW50byBleGlzdGVuY2UuICAgICBTb3VyY2UpIENMQVNTIDYgW09VUiBQQVNUIEkgLSBQZyA1MiAgIFVuaXQtMTQucGRmIChlZ3lhbmtvc2guYWMuaW4pICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Moneylenders  ",
        "option2" : "Slave men and women  ",
        "option3" : "Army sub commandant  ",
        "option4" : "Landless agricultural labourer   "
      }
    },
    {
      "index" : 4,
      "question" : "It is a shadow puppet theatre. In this  puppetry, puppets are made out of the hides of  goat, deer and buffalo. This puppetry is  mentioned in the Mahabharata. Music forms an  intrinsic part of the puppet show. The puppets  are large in size and have jointed waist,  shoulders, elbows and knees. In rural areas,  very often, oil lamps made of split coconut  shells are used for lighting.    The description given above best describes  which of the puppetry?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgVGhvbHUgQm9tbWFsYXRhLSAgICAgMSkgSXQgaXMgYSBzaGFkb3cgcHVwcGV0IHRoZWF0cmUgb2YgQW5kaHJhIFByYWRlc2guIEluIHRoaXMgdGhlYXRyZSwgdGhlIGJlc3Qta25vd24gbGVhdGhlciBwdXBwZXRzIGluICAgb3VyIGNvdW50cnkgYXJlIHVzZWQuICAgIDIpICBMZWF0aGVyIHB1cHBldHMgYXJlIG1hZGUgb3V0IG9mIHRoZSBoaWRlcyBvZiBnb2F0LCBkZWVyIGFuZCBidWZmYWxvLiAgICAgMykgVGhlIG9yaWdpbnMgb2YgdGhlc2UgcHVwcGV0cyBjYW4gYmUgdHJhY2VkIGJhY2sgdG8gYWJvdXQgMjAwMCBCQ0UsIGFzIHRoZXkgYXJlIG1lbnRpb25lZCBpbiB0aGUgICBNYWhhYmhhcmF0YS4gR29kcyBhbmQgaGVyb2VzIGFyZSBtYWRlIHRoZSBsYXJnZXN0IGluIHNpemUsIGJlY2F1c2Ugb2YgdGhlaXIgaW1wb3J0YW5jZS4gICAgIDQpIEEgc3BsaXQtYmFtYm9vIG9yIHBhbG0gbGVhZiBzdGVtIGlzIHVzZWQgZm9yIHRoZSBtYWluIGNlbnRyYWwgc3VwcG9ydCBvZiB0aGUgcHVwcGV0IGFuZCB0aHVzIGl0IGhhcyAgIGpvaW50ZWQgd2Fpc3QsIHNob3VsZGVycywgZWxib3dzIGFuZCBrbmVlcy4gICAgNSkgIEluIHRoZSBydXJhbCBhcmVhcywgdmVyeSBvZnRlbiwgb2lsIGxhbXBzIG1hZGUgb2Ygc3BsaXQgY29jb251dCBzaGVsbHMgYXJlIHVzZWQgZm9yIGxpZ2h0aW5nLiAgICAgNikgVGhlIGZsaWNrZXJpbmcgbGlnaHQga2VlcHMgdGhlIHB1cHBldHMgaW4gY29uc3RhbnQgbW92ZW1lbnQsIGFuZCBsZW5kcyBhbiBhaXIgb2YgbWFnaWMgdG8gdGhlIHNob3cuICAgICA3KSBNdXNpYyBmb3JtcyBhbiBpbnRyaW5zaWMgcGFydCBvZiB0aGUgcHVwcGV0IHNob3csIGFuZCBtYWtpbmcgbXVzaWNhbCBpbnN0cnVtZW50cyBpcyBhIG1ham9yIGNyYWZ0ICAgb2NjdXBhdGlvbiBhbGwgb3ZlciBJbmRpYS4gICAgU291cmNlOiBOQ0VSVCBMaXZpbmcgY3JhZnRzIHRyYWRpdGlvbiBjbGFzcy1YSSBDaGFwdGVyLTEwIHRoZWF0cmVzIGNyYWZ0cyBwYWdlLTExNiAgICBodHRwOi8vY2NydGluZGlhLmdvdi5pbi9wdXBwZXRmb3Jtcy5waHAgICAgICAgb2YgMjEgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Togalu Gombeyetta    ",
        "option2" : "Ravanachhaya   ",
        "option3" : "Tholu Bommalata   ",
        "option4" : "Poovakathu   "
      }
    },
    {
      "index" : 5,
      "question" : "Regarding the Indus Valley Civilization,  consider the following statements:    1. It was predominantly a secular civilization  and the religious element, though present,  did not dominate the scene  2. During this period, cotton was used for  manufacturing textiles in India    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgRmFybWVycyBpbiBJbmR1cyB2YWxsZXkgY2l2aWxpemF0aW9uIHdlcmUgdGhlIGZpcnN0IHRvIHdlYXZlIGNvdHRvbiB0ZXh0aWxlcy4gSXQgd2FzIHByZWRvbWluYW50bHkgYSBzZWN1bGFyICAgY2l2aWxpc2F0aW9uIGFuZCB0aGUgcmVsaWdpb3VzIGVsZW1lbnQsIHRob3VnaCBwcmVzZW50LCBkaWQgbm90IGRvbWluYXRlIHRoZSBzY2VuZS4gICBTT1VSQ0UpIFVQU0MgMjAxMSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to the 'Sangam Age', which  one of the following statements correctly  describes the term 'Muvendar'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE11dmVuZGFyIGlzIGEgVGFtaWwgd29yZCB3aGljaCBtZWFucyB0aHJlZSBjaGllZnMuIEl0IHdhcyB1c2VkIGZvciB0aGUgaGVhZHMgb2YgdGhyZWUgcnVsaW5nIGZhbWlsaWVzLSAgIHRoZSBDaG9sYXMsIENoZXJhcyBhbmQgUGFuZHlhcywgd2hvIGJlY2FtZSBwb3dlcmZ1bCBpbiBzb3V0aCBJbmRpYSBhcm91bmQgMjMwMCB5ZWFycyBhZ28uICAgVGhlIFRocmVlIENyb3duZWQgcnVsZXJzLCBvciB0aGUgVGhyZWUgR2xvcmlmaWVkIGJ5IEhlYXZlbiwgb3IgV29ybGQgb2YgdGhlIFRocmVlIG9yIFRoZSBUYW1pbCBLaW5ncywgICBwcmltYXJpbHkga25vd24gYXMgTXV2ZW5kYXIsIHJlZmVycyB0byB0aGUgdHJpdW12aXJhdGUgb2YgQ2hlcmEsIENob2xhIGFuZCBQYW5keWEgd2hvIGRvbWluYXRlZCB0aGUgICBwb2xpdGljcyBvZiB0aGUgYW5jaWVudCBUYW1pbCBjb3VudHJ5LCBUYW1pbGFrYW0sIGZyb20gdGhlaXIgdGhyZWUgTmFkdSAoY291bnRyaWVzKSBvZiBDaG9sYSBOYWR1LCAgIFBhbmR5YSBOYWR1IChwcmVzZW50IGRheSBNYWR1cmFpIGFuZCBUaXJ1bmVsdmVsaSkgYW5kIENoZXJhIE5hZHUgKHByZXNlbnQgZGF5IEtlcmFsYSBhbmQgc29tZSBwYXJ0cyAgIG9mIFRhbWlsbmFkdSkgaW4gc291dGhlcm4gSW5kaWEuIFRoZXkgc2lnbmFsbGVkIGEgdGltZSBvZiBpbnRlZ3JhdGlvbiBhbmQgcG9saXRpY2FsIGlkZW50aXR5IGZvciB0aGUgVGFtaWwgICBwZW9wbGUuIFRoZXkgd291bGQgZnJlcXVlbnRseSB3YWdlIHdhciBhZ2FpbnN0IG9uZSBhbm90aGVyIHVuZGVyIGEgcGVyaW9kIG9mIGluc3RhYmlsaXR5IHVudGlsIHRoZSAgIEltcGVyaWFsIHBlcmlvZCBvZiBSYWphcmFqYSBJIHdobyB1bml0ZWQgVGFtaWxha2FtIHVuZGVyIG9uZSBsZWFkZXJzaGlwLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogVGhlIHRoZW1lIG9mIHRoZSBmaXJzdCBmaXZlIGFudGhvbG9naWVzIChLdXJ1bnRva2FpLCBOYXJyaW5haSwgQWthbmFudXJ1LCAgIEFpbmt1cnVudXJ1IGFuZCBLYWxpdHRva2FpKSBvZiB0aGUgRXR0dXR0b2thaSBvciB0aGUgRWlnaHQgQW50aG9sb2dpZXMgb2YgY29sbGVjdGVkIHBvZXRyeSBpcyBsb3ZlLyBha2FtLiAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogQnJhaG1pbnMgcGxheWVkIGEgY29uc3RydWN0aXZlIHJvbGUgaW4gc29jaWV0eSBhbmQgYWRtaW5pc3RyYXRpb247IHRoZSBTYW5nYW0gICBzb2NpZXR5IHdhcyBub3QgcHJpZXN0LWRvbWluYXRlZC4gVGhlIG90aGVyIGNhc3RlcyBhbHNvIGVuam95ZWQgY29uc2lkZXJhYmxlIHJlc3BlY3QgaW4gdGhlIHNvY2lldHkuIFRoZSAgIFZhaXN5YXMgd2VyZSBlbmdhZ2VkIGluIGFncmljdWx0dXJlLCB0cmFkZSBhbmQgY29tbWVyY2UuICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBUb2xrYXBwaXlhbSByZWZlcnMgdG8gdGhlIEZpdmUtZm9sZCBkaXZpc2lvbiBvZiBsYW5kcyAtIEt1cmluamkgKGhpbGx5IHRyYWNrcyksIE11bGxhaSAgIChwYXN0b3JhbCksIE1hcnVkYW0gKGFncmljdWx0dXJhbCksIE5leWRhbCAoY29hc3RhbCkgYW5kIFBhbGFpIChkZXNlcnQpLiAgIFNvdXJjZSkgQ0xBU1MgNiBbT1VSIFBBU1QgSSAtIFBnIDkyXSAgICAgRDpcanVuZVxwYW5kZXlccHJlc3MgQkVHQy0xMDEgKGVneWFua29zaC5hYy5pbikgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is the theme of the first three anthologies   of the Eight Anthologies of collected poetry.  ",
        "option2" : " It means three chiefs used for the heads of   three ruling families namely the Cholas,   Cheras and Pandayas.  ",
        "option3" : " It was a caste group engaged in agriculture,   trade and commerce during the Sangam age.  ",
        "option4" : " It describes the five-fold division of lands in   Sangam society.   "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following pairs:  Books  Description  1. Manimekalai             the love story between  merchant Kovlan and  courtesan named Madhavi  2. Meghadutta              lyric love poem composed  by Kalidasa  3. Charak  Samhita          a book on medicine  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0OiBNYW5pbWVrYWxhaSB3YXMgY29tcG9zZWQgYnkgU2F0dGFuYXIgYXJvdW5kIDE0MDAgeWVhcnMgYWdvLiBJdCBkZXNjcmliZXMgdGhlIHN0b3J5IG9mICAgdGhlIGRhdWdodGVyIG9mIEtvdmFsYW4gYW5kIE1hZGhhdmkuIFRoZSBsb3ZlIHN0b3J5IGJldHdlZW4gbWVyY2hhbnQgS292bGFuIGFuZCBjb3VydGVzYW4gbmFtZWQgICBNYWRoYXZpIGlzIGRlc2NyaWJlZCBpbiBTaWxhcHBhZGlrYXJhbSAuIEl0J3MgYSB0YW1pbCBlcGljIGNvbXBvc2VkIGJ5IGEgcG9ldCBuYW1lZCBJbGFuZ28sIGFyb3VuZCAxODAwICAgeWVhcnMgYWdvLiAgIFRoZSBTYW5nYW0gUGVyaW9kIGlzIHRoZSB0aW1lIHdoZW4gbW9zdCBvZiB0aGUgYXZhaWxhYmxlIFNhbmdhbSBMaXRlcmF0dXJlIGlzIGZyb20gdGhlIFRoaXJkIFNhbmdhbS4gICBCYXNlZCBvbiB0aGUgY2hyb25vbG9neSwgdGhpcyBhdmFpbGFibGUgbGl0ZXJhdHVyZSB3YXMgY29tcGlsZWQgYW5kIGNhdGVnb3JpemVkIGluIHRoZSAxMHRoIGNlbnR1cnkgaW50byAyICAgY2F0ZWdvcmllcy4gVGhlIGNhdGVnb3JpZXMgYXJlIHRoZSBQYXRpbmVubWVsa2FuYWtrdSwgd2hpY2ggYXJlIHRoZSAxOCBncmVhdGVyIHRleHQgc2VyaWVzLCB0aGlzIGlzIGZ1cnRoZXIgICBzdWIgZGl2aWRlZCBpbnRvIHRoZSBFdHR1dGhvZ2FpICg4IGFudGhvbG9naWVzKSBhbmQgdGhlIFBhdHR1cHBhdHR1ICgxMCBpZHlsbHMpLiBUaGVuIHRoZSBvdGhlciBjYXRlZ29yeSBpcyAgIHRoZSBQYXRpbmVua2lsa2FuYWtrdSwgd2hpY2ggYXJlIHRoZSAxOCBsZXNzZXIgdGV4dCBzZXJpZXMuICAgUGFpciAyIGlzIGNvcnJlY3Q6IE1lZ2hhZHV0YSBpcyBseXJpYyBsb3ZlIHBvZW0gaW4gc29tZSAxMTUgdmVyc2VzIGNvbXBvc2VkIGJ5IEthbGlkYXNhIGFib3V0IHRoZSA1dGggICBjZW50dXJ5IENFLiAgSXQgZGVzY3JpYmVzIGhvdyBhbiBleGlsZWQgeWFrc2hhIChhIGJlbmV2b2xlbnQgbmF0dXJlIHNwaXJpdCkgaXMgbW9hbmluZyBmb3IgaGlzIGJlbG92ZWQgICBvbiBhIGxvbmVseSBtb3VudGFpbiBwZWFrLiBXaGVuLCBhdCB0aGUgYmVnaW5uaW5nIG9mIGEgbW9uc29vbiwgYSBjbG91ZCBpcyBvbiB0aGUgcGVhaywgaGUgYXNrcyBpdCB0byAgIGRlbGl2ZXIgYSBtZXNzYWdlIHRvIGhpcyBsb3ZlIGluIHRoZSBIaW1hbGF5YW4gY2l0eSBvZiBBbGFrYS4gTW9zdCBvZiB0aGUgcG9lbSwgY29tcG9zZWQgaW4gYW4gZXh0cmVtZWx5ICAgZ3JhY2VmdWwgbWV0cmUsIGNvbnNpc3RzIG9mIGEgZGVzY3JpcHRpb24gb2YgdGhlIGxhbmRtYXJrcywgY2l0aWVzLCBhbmQgc2lnaHRzIG9uIHRoZSBjbG91ZCdzIGpvdXJuZXkgdG8gICAgIG9mIDIxICAgICAgICBBbGFrYXMuIEhlIGRlc2NyaWJlcyBhIG1vbnNvb24gY2xvdWQgaXMgaW1hZ2luZWQgdG8gYmUgYSBtZXNzZW5nZXIgYmV0d2VlbiBsb3ZlcnMgd2hvIGFyZSBzZXBhcmF0ZWQgICBmcm9tIG9uZSBhbm90aGVyLiAgICBQYWlyIDMgaXMgY29ycmVjdDogQXl1cnZlZGEgaXMgYSB3ZWxsLWtub3duIHN5c3RlbSBvZiBoZWFsdGggc2NpZW5jZSB0aGF0IHdhcyBkZXZlbG9wZWQgaW4gYW5jaWVudCBJbmRpYS4gICBUaGUgdHdvIGZhbW91cyBwcmFjdGl0aW9uZXJzIG9mIEF5dXJ2ZWRhIGluIGFuY2llbnQgSW5kaWEgd2VyZSBDaGFyYWthIGFuZCBTdXNocnV0YS4gQ2hhcmFrIFNhbWhpdGEsICAgd3JpdHRlbiBieSBDaGFyYWsgaXMgYSByZW1hcmthYmxlIGJvb2sgb24gbWVkaWNpbmUuIEluIGhpcyB0cmVhdGlzZSwgU3VzcnV0YSBTYW1oaXRhLCBTdXNocnV0YSBzcGVha3MgICBhYm91dCBlbGFib3JhdGUgc3VyZ2ljYWwgcHJvY2VkdXJlcy4gICBLbm93bGVkZ2UgQmFzZTogVGhlIHN0b3J5IG9mIFNpbGFwcGFkaWthcmFtIGJlZ2lucyBpbiB0aGUgY2l0eSBvZiBQdWhhciBpbiB0aGUgQ2hvbGEga2luZ2RvbSB3aXRoIHRoZSAgIHdlZGRpbmcgb2YgS2FubmFnaSBhbmQgS292YWxhbiwgY2hpbGRyZW4gb2YgcHJvbWluZW50IG1lcmNoYW50cy4gQWZ0ZXIgYSBicmllZiBwZXJpb2Qgb2YgY29uanVnYWwgYmxpc3MsICAgS292YWxhbiwgaG93ZXZlciwgYWJhbmRvbnMgS2FubmFnaSBmb3IgYSBjZWxlYnJhdGVkIGNvdXJ0ZXNhbiBuYW1lZCBNYWRoYXZpLiBFbmdyb3NzZWQgaW4gYSBsaWZlIG9mICAgc2Vuc3VhbCBhbmQgY3VsdHVyYWwgcHVyc3VpdHMsIEtvdmFsYW4gZm9yZ2V0cyBhbGwgYWJvdXQgaGlzIHdpZmUuIEhvd2V2ZXIsIG9uZSBkYXksIG9uIHRoZSBvY2Nhc2lvbiBvZiB0aGUgICBmZXN0aXZhbCBvZiBMb3JkIEluZHJhLCBNYWRoYXZpIHNpbmdzIGEgc29uZyBhYm91dCBhIHdvbWFuIGJldHJheWVkIGluIGxvdmUuIFRoaXMgcHJvbXB0cyBLb3ZhbGFuIHRvICAgc3VzcGVjdCBNYWRoYXZpJ3MgZmlkZWxpdHkuIFdpdGggYSB3b3VuZGVkIHNlbnNlIG9mIHByaWRlLCBoZSBsZWF2ZXMgaGVyIGFuZCByZXR1cm5zIHRvIEthbm5hZ2kgd2hvICAgYWNjZXB0cyBoaW0gYmFjayB3aXRob3V0IGFueSByZXByb2FjaC4gICBTb3VyY2UpIE91ciBQYXN0cyBjbGFzcy02IGNoYXB0ZXItIDEyIEJ1aWxkaW5nLCBQYWludGluZ3MgYW5kIEJvb2tzIHBhZ2UtIDEyNywgMTI4LDEzMSAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMvTWVnaGFkdXRhICAgIGh0dHBzOi8vaW5kaWFuY3VsdHVyZS5udmxpLmluL3N0b3JpZXMvc2lsYXBwYWRpa2FyYW0tdGFsZS1hbmtsZXQgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 8,
      "question" : "Who among the following were the  contemporary kingdoms at the time of the  Rashtrakuta dynasty?  1. Pala Dynasty  2. Chola Dynasty founded under Vijayalaya  3. Gurjara-Pratihara Dynasty  4. Kadamba Dynasty  5. Hoysala Dynasty  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJhc2h0cmFrdXRhIGR5bmFzdHkgcnVsZWQgdGhlIERlY2NhbiBhbmQgbmVpZ2hib3VyaW5nIGFyZWFzIG9mIEluZGlhIGZyb20gYWJvdXQgNzU1IHRvIDk3NSBjZW50dXJpZXMuICAgIE9wdGlvbiAxIGFuZCAzIGFyZSBjb3JyZWN0OiBSdWxlcnMgYmVsb25naW5nIHRvIHRoZSBHdXJqYXJhLVByYXRpaGFyYSwgUmFzaHRyYWt1dGEgYW5kIFBhbGEgZHluYXN0aWVzICAgZm91Z2h0IGZvciBjb250cm9sIG92ZXIgS2FuYXVqLiBCZWNhdXNlIHRoZXJlIHdlcmUgdGhyZWUgJ3BhcnRpZXMnIGluIHRoaXMgbG9uZy1kcmF3biBjb25mbGljdCwgaGlzdG9yaWFucyAgIG9mdGVuIGRlc2NyaWJlIGl0IGFzIHRoZSAndHJpcGFydGl0ZSBzdHJ1Z2dsZScuIFNvLCBraW5nZG9tcyBvZiBQYWxhIGFuZCBQcmF0aWhhcmEgd2VyZSBjb250ZW1wb3JhcnkgICBraW5nZG9tcy4gICAgICBvZiAyMSAgICAgICAgUGFsYSBkeW5hc3R5IHdhcyB0aGUgcnVsaW5nIGR5bmFzdHkgaW4gQmloYXIgYW5kIEJlbmdhbCwgSW5kaWEuIEl0IHJ1bGVkIGZyb20gdGhlIDh0aCB0byB0aGUgMTJ0aCBjZW50dXJ5LiAgIEd1cmphcmEtUHJhdGloYXJhIGR5bmFzdHksIHdhcyBhIGR5bmFzdHkgb2YgbWVkaWV2YWwgSW5kaWEuIFRoZSBsaW5lIG9mIEhhcmljaGFuZHJhIHJ1bGVkIGluIE1hbmRvciwgICBNYXJ3YXIgKEpvZGhwdXIsIFJhamFzdGhhbiksIGR1cmluZyB0aGUgNnRoIHRvIDl0aCBjZW50dXJpZXMgQ0UsIGdlbmVyYWxseSB3aXRoIGZldWRhdG9yeSBzdGF0dXMuIFRoZSAgIGxpbmUgb2YgTmFnYWJoYXRhIHJ1bGVkIGZpcnN0IGF0IFVqamFpbiBhbmQgbGF0ZXIgYXQgS2FubmF1aiBkdXJpbmcgdGhlIDh0aCB0byAxMXRoIGNlbnR1cmllcy4gICBPcHRpb24gMiBpcyBjb3JyZWN0LiBUaGUgcmVpZ24gb2YgdGhlIENob2xhcyBiZWdhbiBpbiB0aGUgOXRoIGNlbnR1cnkgd2hlbiB0aGV5IGRlZmVhdGVkIHRoZSBQYWxsYXZhcyB0byAgIGNvbWUgaW50byBwb3dlci4gVGhpcyBydWxlIHN0cmV0Y2hlZCBvdmVyIGZvciBvdmVyIGZpdmUgbG9uZyBjZW50dXJpZXMgdW50aWwgdGhlIDEzdGggY2VudHVyeS4gVGhlIENob2xhICAgRW1waXJlIHdhcyBmb3VuZGVkIGJ5IFZpamF5YWxheWEuIEhlIHRvb2sgb3ZlciB0aGUgVGFuam9yZSBraW5nZG9tIGFuZCBsZWQgdG8gdGhlIHJpc2Ugb2YgdGhlIG1pZ2h0eSAgIENob2xhcyBieSBkZWZlYXRpbmcgdGhlIFBhbGxhdmFzLiBCYXR0bGUgb2YgVGFra29sYW0gaGFzIGZvdWdodCBpbiB0aGUgeWVhciA5NDgtNDkgQUQgYmV0d2VlbiB0aGUgICBDaG9sYSBraW5nLCBSYWphZGl0eWEgYW5kIFJhc2h0cmFrdXRhIGtpbmcsIEtyaXNobmEgSUlJLiBUaHVzLCBDaG9sYXMgd2VyZSBjb250ZW1wb3JhcmllcyB0byAgIFJhc2h0cmFrdXRhcy4gICBPcHRpb24gNCBpcyBpbmNvcnJlY3Q6IFRoZSBLYWRhbWJhIER5bmFzdHkgKDM0NSAtIDUyNSBDLkUuKSBkZXNpZ25hdGVzIGFuIGFuY2llbnQgcm95YWwgZHluYXN0eSAgIG9mIEthcm5hdGFrYSB0aGF0IHJ1bGVkIGZyb20gQmFuYXZhc2kgaW4gcHJlc2VudCBkYXkgVXR0YXJhIEthbm5hZGEgZGlzdHJpY3QuICAgIE9wdGlvbiA1IGlzIGluY29ycmVjdDogVGhlIEhveXNhbGEgRHluYXN0eSB3YXMgdGhlIHByb21pbmVudCBkeW5hc3R5IG9mIHRoZSBLYXJuYXRha2EgcmVnaW9uIHdobyBydWxlZCAgIGJldHdlZW4gMTB0aCB0byAxNHRoIGNlbnR1cmllcyBBRC4gQmVsdXIgd2FzIHRoZWlyIGNhcGl0YWwgY2l0eSB3aGljaCB3YXMgbGF0ZXIgbW92ZWQgdG8gSGFsZWJpZHUuICAgU291cmNlKSBPdXIgcGFzdHMgQ2xhc3MtNyBjaGFwdGVyLTIgcGFnZS0xNywgMjEsIDIzICAgaHR0cHM6Ly93d3cubmV3d29ybGRlbmN5Y2xvcGVkaWEub3JnL2VudHJ5L0thZGFtYmFfRHluYXN0eSAgICBodHRwczovL3d3dy5icml0YW5uaWNhLmNvbSBvcGljL0d1cmphcmEtUHJhdGloYXJhLWR5bmFzdHkgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only  ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "2, 3 and 5 only  ",
        "option4" : "1, 3 and 4 only   "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following statements is/are  correct regarding 'Tawarikh'?  1.  These are accounts of history written in the  Persian language under the Delhi Sultanate.  2.  Akbar ended the practice of commissioning  tawarikh.  3.  The authors of Tawarikh used to advise  rulers on governance.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIERlbGhpIHN1bHRhbmF0ZSwgcHJpbmNpcGFsIE11c2xpbSBzdWx0YW5hdGUgcnVsZWQgaW4gbm9ydGggSW5kaWEgZnJvbSB0aGUgMTN0aCB0byB0aGUgMTZ0aCBjZW50dXJ5LiAgIFRoZSBhdXRob3JzIG9mdGVuIHdyb3RlIHRoZWlyIGhpc3RvcmllcyBmb3IgU3VsdGFucyBpbiB0aGUgaG9wZSBvZiByaWNoIHJld2FyZHMuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEEgdGFyaWtoIChzaW5ndWxhcikgYXdhcmlraCAocGx1cmFsKSBhcmUgJ2hpc3Rvcmllcycgd2hpY2ggYXJlIHZhbHVhYmxlIHNvdXJjZXMgb2YgICBpbmZvcm1hdGlvbi4gVGhlc2Ugd2VyZSB3cml0dGVuIGluIFBlcnNpYW4sIHRoZSBsYW5ndWFnZSBvZiBhZG1pbmlzdHJhdGlvbiB1bmRlciB0aGUgRGVsaGkgU3VsdGFucy4gICAgTWluaGFqLWkgU2lyYWogSnV6amFuaSBkZWRpY2F0ZWQgaGlzIFRhYmFxYXQtaSBOYXNpcmkgdG8gTmFzaXJ1ZGRpbiBNYWhtdWQsIFppYXVkZGluIEJhcmFuaSBkZWRpY2F0ZWQgaGlzICAgVGFyaWtoLWkgRmlydXpzaGFoaSB0byBGaXJ1eiBTaGFoIFR1Z2hsYXEuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBBa2JhciBkaWQgbm90IGVuZCBjb21taXNzaW9uaW5nIHRhd2FyaWtoLiBBa2JhciBjb21taXNzaW9uZWQgVGFyaWtoLWkgQWxmaSAgIHRvIGNvbW1lbW9yYXRlIHRoZSBJc2xhbWljIG1pbGxlbm5pdW0uIMq9QWJkdWwgUWFkaXIgQmFkYXVuaSB3cm90ZSBNdW50YWtoYWItdXQgVGF3YXJpa2ggb24gICAnaGVyZXNpZXMnIGFuZCAnaW5ub3ZhdGlvbnMnIG9mIEFrYmFyJ3MgcmVpZ24uIEFyaWYgUWFuZGFoYXJpIGRlZGljYXRlZCBUYXJpa2gtaSBBbGZpIHRvIEFrYmFyLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBhdXRob3JzIG9mIHRhd2FyaWtoIHdlcmUgbGVhcm5lZCBtZW4gKHNlY3JldGFyaWVzLCBhZG1pbmlzdHJhdG9ycywgcG9ldHMgYW5kICAgY291cnRpZXJzKSB3aG8gYm90aCByZWNvdW50ZWQgZXZlbnRzLiBUaGV5IGFkdmlzZWQgcnVsZXJzIG9uIGdvdmVybmFuY2UsIGVtcGhhc2lzaW5nIHRoZSBpbXBvcnRhbmNlICAgb2YganVzdCBydWxlLiAgICBTb3VyY2UpIE91ciBQYXN0cy1JSSBDbGFzcy03IENoYXB0ZXItIDMgRGVsaGkgU3VsdGFucyBwYWdlLSAzMiwgMzMgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 10,
      "question" : "Ibadat Khana at Fatehpur Sikri was   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgb3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgSWJhZGF0IEtoYW5hIGF0IEZhdGVocHVyIFNpa3JpIHdhcyB0aGUgaGFsbCBpbiB3aGljaCBBa2JhciBoZWxkIGRpc2N1c3Npb25zIHdpdGggc2Nob2xhcnMgdG8gZGViYXRlIG9uICAgcmVsaWdpb3VzIGlzc3VlcyByYWlzZWQgYnkgQWtiYXIuICAgU291cmNlKSBVUFNDIDIwMTQgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " the mosque for the use of the Royal Family  ",
        "option2" : " Akbar's private prayer chamber  ",
        "option3" : " the hall in which Akbar held discussions with   scholars of various religions  ",
        "option4" : "the room in which the nobles belonging to   different religions gathered to discuss      religious affairs   "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements  regarding the Mughal empire:  1. Fire arms were used for the first time in  India by Mughals.  2.  Mughals followed the custom of the division  of the inheritance amongst all the sons.  3.  The major expansion of the Mughal Empire  was done by Akbar and his successors added  only a few territories to the empire.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjEgICAgICAgIFRoZSBNdWdoYWxzIHdlcmUgZGVzY2VuZGFudHMgb2YgdHdvIGdyZWF0IGxpbmVhZ2VzIG9mIHJ1bGVycy4gRnJvbSB0aGVpciBtb3RoZXIncyBzaWRlIHRoZXkgd2VyZSAgIGRlc2NlbmRhbnRzIG9mIEdlbmdoaXMgS2hhbiAoZGllZCAxMjI3KSwgdGhlIE1vbmdvbCBydWxlciB3aG8gcnVsZWQgb3ZlciBwYXJ0cyBvZiBDaGluYSBhbmQgQ2VudHJhbCAgIEFzaWEuIEZyb20gdGhlaXIgZmF0aGVyJ3Mgc2lkZSB0aGV5IHdlcmUgdGhlIHN1Y2Nlc3NvcnMgb2YgVGltdXIgKGRpZWQgICAxNDA0KSwgdGhlIHJ1bGVyIG9mIElyYW4sIElyYXEgYW5kIG1vZGVybi1kYXkgVHVya2V5LiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IENhbm5vbnMgd2VyZSBhbiBpbXBvcnRhbnQgYWRkaXRpb24gaW4gc2l4dGVlbnRoLWNlbnR1cnkgd2FyZmFyZS4gQmFidXIgdXNlZCAgIHRoZW0gZWZmZWN0aXZlbHkgaW4gdGhlIGZpcnN0IGJhdHRsZSBvZiBQYW5pcGF0LiBHdW4gcG93ZGVyIHRlY2hub2xvZ3kgd2FzIGJyb3VnaHQgdG8gSW5kaWEgZm9yIHdhcmZhcmUgaW4gICB0aGUgMTR0aGNlbnR1cnkuIEZpcmUgYXJtcyB3ZXJlIHVzZWQgZm9yIHRoZSBmaXJzdCB0aW1lIGluIHJlZ2lvbnMgc3VjaCBhcyAgIEd1amFyYXQsIE1hbHdhIGFuZCBEZWNjYW4sIGFuZCB3YXMgdXNlZCBieSBCYWJ1ciBpbiBlYXJseSAxNnRoIGNlbnR1cnkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIE11Z2hhbHMgZGlkIG5vdCBiZWxpZXZlIGluIHRoZSBydWxlIG9mIHByaW1vZ2VuaXR1cmUsIHdoZXJlIHRoZSBlbGRlc3Qgc29uICAgaW5oZXJpdGVkIGhpcyBmYXRoZXIncyBlc3RhdGUuIEluc3RlYWQsIHRoZXkgZm9sbG93ZWQgdGhlIE11Z2hhbCBhbmQgVGltdXJpZCBjdXN0b20gb2YgY29wYXJjZW5hcnkgICBpbmhlcml0YW5jZSwgb3IgYSBkaXZpc2lvbiBvZiB0aGUgaW5oZXJpdGFuY2UgYW1vbmdzdCBhbGwgdGhlIHNvbnMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQWZ0ZXIgY29uc29saWRhdGluZyBoaXMgaG9sZCBvbiB0aGUgdGhyb25lLCBBa2JhciBzdGFydGVkIGEgcG9saWN5IG9mIGV4dGVuZGluZyAgIE11Z2hhbCB0ZXJyaXRvcmllcy4gQWtiYXIgdGhyb3VnaCBhIHN5c3RlbWF0aWMgcG9saWN5IHN0YXJ0ZWQgdGhlIHRhc2sgb2YgZXhwYW5kaW5nIGhpcyBFbXBpcmUuIFRoZSBtYWpvciAgIGV4cGFuc2lvbiBvZiBNdWdoYWwgRW1waXJlIHRvb2sgcGxhY2UgZHVyaW5nIHRoZSByZWlnbiBvZiBBa2Jhci4gICBEdXJpbmcgdGhlIHJlaWducyBvZiBoaXMgc3VjY2Vzc29ycyAoSmFoYW5naXIsIFNoYWggSmFoYW4gYW5kIEF1cmFuZ3plYiksIHZlcnkgbGl0dGxlIHdhcyBhZGRlZCBpbiAgIHRlcm1zIG9mIHRlcnJpdG9yeS4gVGhlIG1haW4gYWRkaXRpb25zIGluIHRoZSBsYXRlciBwZXJpb2Qgd2VyZSBtYWRlIGR1cmluZyBBdXJhbmd6ZWIncyByZWlnbiBpbiBTb3V0aCAgIEluZGlhIGFuZCBOb3J0aC1FYXN0IChBc3NhbSkuICAgU291cmNlKSBPdXIgcGFzdHMtSUkgY2xhc3MtJiBjaGFwdGVyLTQgcGFnZS00NiwgNDcsIDQ5ICAgIGh0dHBzOi8vd3d3LmluZGlhbmV0em9uZS5jb20vNjYvYWhvbV9ydWxlX2Fzc2FtLmh0bSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements in the  context of the Mughal period:  1.  'Pahi-kashta' peasants were non-resident  cultivators on a contractual basis.  2.  'Khud-kashta' peasants were residents of  the village in which they held their lands.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFjY29yZGluZyB0byBzb3VyY2VzIG9mIHNldmVudGVlbnRoIGNlbnR1cnksIHRoZXJlIHdlcmUgdHdvIGtpbmRzIG9mIHBlYXNhbnRzIC0gICBraHVkLWthc2h0YSBhbmQgcGFoaS1rYXNodGEuIFRoZSBraHVkLWthc2h0YSB3ZXJlIHJlc2lkZW50cyBvZiB0aGUgdmlsbGFnZSBpbiB3aGljaCB0aGV5IGhlbGQgdGhlaXIgICBsYW5kcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQYWhpLWthc2h0YSB3ZXJlIG5vbi1yZXNpZGVudCBjdWx0aXZhdG9ycyB3aG8gYmVsb25nZWQgdG8gc29tZSBvdGhlciB2aWxsYWdlLCAgIGJ1dCBjdWx0aXZhdGVkIGxhbmRzIGVsc2V3aGVyZSBvbiBhIGNvbnRyYWN0dWFsIGJhc2lzLiBQZW9wbGUgYmVjYW1lIHBhaGkta2FzaHRhIGVpdGhlciB3aGVuIGxhbmQgaXMgICBtb3JlIGZlcnRpbGUgaW4gb3RoZXIgdmlsbGFnZXMgb3Igd2hlbiB0aGVyZSB3YXMgYW4gZWNvbm9taWMgZGlzdHJlc3MgYWZ0ZXIgYSBmYW1pbmUgaW4gdGhlaXIgdmlsbGFnZS4gICBLbm93bGVkZ2UgQmFzZTogICAgRHVyaW5nIE11Z2hhbCBwZXJpb2QgcGVhc2FudHMgd2VyZSBhbHNvIHRlcm1lZCBhcyByYWl5YXQsIG11emFyaWFuIGFuZCBhc2FtaS4gdGhlIGF2ZXJhZ2UgcGVhc2FudCBvZiAgIG5vcnRoIEluZGlhIGRpZCBub3QgcG9zc2VzcyBtb3JlIHRoYW4gYSBwYWlyIG9mIGJ1bGxvY2tzIGFuZCB0d28gcGxvdWdoczsgbW9zdCBwb3NzZXNzZWQgZXZlbiBsZXNzLiAgIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUkgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements with  reference to a Gond kingdom in Medieval  History of India:  1.  Each Garh of Garha Katanga or Gond  kingdom was divided into groups of villages  called chaurasi.  2.  Rani Durgawati of Garha Katanga was  contemporary to Mughal ruler Aurangzeb.  3.  Rani Durgawati surrendered against the  forces of Asaf Khan I to save her kingdom  and her son.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgR29uZHMgbGl2ZWQgaW4gYSB2YXN0IGZvcmVzdGVkIHJlZ2lvbiBjYWxsZWQgR29uZHdhbmEuIFRoZXkgcHJhY3Rpc2VkIHNoaWZ0aW5nIGN1bHRpdmF0aW9uLiBUaGUgbGFyZ2UgICBHb25kIHRyaWJlIHdhcyBmdXJ0aGVyIGRpdmlkZWQgaW50byBtYW55IHNtYWxsZXIgY2xhbnMuIEVhY2ggY2xhbiBoYWQgaXRzIG93biByYWphIG9yIHJhaS4gICBBYm91dCB0aGUgdGltZSB0aGF0IHRoZSBwb3dlciBvZiB0aGUgRGVsaGkgU3VsdGFucyB3YXMgZGVjbGluaW5nLCBhIGZldyBsYXJnZSBHb25kIGtpbmdkb21zIHdlcmUgICBiZWdpbm5pbmcgdG8gZG9taW5hdGUgdGhlIHNtYWxsZXIgR29uZCBjaGllZnMuIFRoZSBBa2JhciBOYW1hLCBhIGhpc3Rvcnkgb2YgQWtiYXIncyByZWlnbiwgbWVudGlvbnMgdGhlICAgR29uZCBraW5nZG9tIG9mIEdhcmhhIEthdGFuZ2EgdGhhdCBoYWQgNzAsMDAwIHZpbGxhZ2VzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBUaGUgYWRtaW5pc3RyYXRpdmUgc3lzdGVtIG9mIEdvbmQga2luZ2RvbXMgd2FzIGJlY29taW5nIGNlbnRyYWxpc2VkLiBUaGUgICBraW5nZG9tIHdhcyBkaXZpZGVkIGludG8gZ2FyaHMuIEVhY2ggZ2FyaCB3YXMgY29udHJvbGxlZCBieSBhIHBhcnRpY3VsYXIgR29uZCBjbGFuLiBUaGlzIHdhcyBmdXJ0aGVyICAgZGl2aWRlZCBpbnRvIHVuaXRzIG9mIDg0IHZpbGxhZ2VzIGNhbGxlZCBjaGF1cmFzaS4gVGhlIGNoYXVyYXNpIHdhcyBzdWJkaXZpZGVkIGludG8gYmFyaG90cyB3aGljaCB3ZXJlICAgbWFkZSB1cCBvZiAxMiB2aWxsYWdlcyBlYWNoLiAgICAgb2YgMjEgICAgICAgIFN0YXRlbWVudCAyIGFuZCAzIGFyZSBpbmNvcnJlY3QuIFJhbmkgRHVyZ2F3YXRpIHdhcyB0aGUgZGF1Z2h0ZXIgb2YgU2FsYmFoYW4sIHRoZSBDaGFuZGVsIFJhanB1dCByYWphICAgb2YgTWFob2JhLiBSYW5pIER1cmdhd2F0aSB3YXMgdmVyeSBjYXBhYmxlLCBhbmQgc3RhcnRlZCBydWxpbmcgb24gYmVoYWxmIG9mIGhlciBmaXZlLXllYXItb2xkIHNvbiwgQmlyICAgTmFyYWluIGFmdGVyIHRoZSBkZWF0aCBvZiBoZXIgaHVzYmFuZCBraW4gRGFscGF0LiBJbiAxNTY1LCB0aGUgTXVnaGFsIGZvcmNlcyB1bmRlciBBc2FmIEtoYW4gYXR0YWNrZWQgICBHYXJoYSBLYXRhbmdhLiBBIHN0cm9uZyByZXNpc3RhbmNlIHdhcyBwdXQgdXAgYnkgUmFuaSBEdXJnYXdhdGkuIFNoZSB3YXMgZGVmZWF0ZWQgYW5kIHByZWZlcnJlZCB0byBkaWUgICByYXRoZXIgdGhhbiBzdXJyZW5kZXIuICAgICBNdWdoYWwgUnVsZSB3YXMgdW5kZXIgQWtiYXIgKDE1NTYtMTYwNSkgYXQgdGhhdCB0aW1lLiAgIFNvdXJjZSkgTkNFUlQgQ0xBU1MgNywgT1VSIFBBU1QgSUkgLSBQZyA5Nyw5OCw5OSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements with  reference to Shankaradeva and his contribution  to art and culture:  1.  Bhaona theatrical performance was the  creation of Shankaradeva.  2.  Shankaradeva created the devotional songs  Borgeets in Sanskrit.  3.  Shankaradeva advocated the concept of  'dasvandh' or donating one-tenth of one's  earnings among needy persons.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFNhaW50LXJlZm9ybWVyIFNyaW1hbnRhIFNhbmthcmRldmEgd2FzIGEgVmFpc2huYXZhIHNhaW50IGJvcm4gaW4gMTQ0OSBBLkQgaW4gTmFnYW9uIGRpc3RyaWN0IG9mIEFzc2FtLiAgIEhlIHN0YXJ0ZWQgdGhlIG5lby1WYWlzaG5hdml0ZSBtb3ZlbWVudC4gICBIZSBlbXBoYXNpc2VkIGRldm90aW9uIHRvIFZpc2hudSwgYW5kIGNvbXBvc2VkIHBvZW1zIGFuZCBwbGF5cyBpbiBBc3NhbWVzZS4gSGUgYmVnYW4gdGhlIHByYWN0aWNlICAgb2Ygc2V0dGluZyB1cCBuYW1naGFycyBvciBob3VzZXMgb2YgcmVjaXRhdGlvbiBhbmQgcHJheWVyLCBhIHByYWN0aWNlIHRoYXQgY29udGludWVzIHRvIGRhdGUuSGUgd3JvdGUgICBoaXMgcHJvc2UgaW4gU2Fuc2tyaXQgYnV0IHVzZWQgQXNzYW1lc2UgYW5kIEJyYWphdmFsaSB0byBkZXZlbG9wIEJvcmdlZXQgYW5kIEJoYW9uYS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gIEJoYW9uYSB3YXMgYSBteXRob2xvZ3ktYmFzZWQgdGhlYXRyaWNhbCBwZXJmb3JtYW5jZSBjcmVhdGVkIGJ5ICAgU2hhbmthcmFkZXZhLiBBIEJoYW9uYSBpbnZvbHZlcyBkaWFsb2d1ZXMsIHNvbmdzLCBhbmQgZGFuY2VzLiBJdCBpcyBhIHRyYWRpdGlvbmFsIGZvcm0gb2YgZW50ZXJ0YWlubWVudCAgIGluIEFzc2FtZXNlIGFuZCBCcmFqYXZhbGkgbGFuZ3VhZ2VzLCB3aXRoIHJlbGlnaW91cyBtZXNzYWdlcy4gICBCaGFvbmEgaXMgYSBwZXJmb3JtaW5nIGFydCBmb3JtLiBJdCBpcyBhIHNpbXBsZSBkcmFtYSB3aGljaCBzaG93cyB0aGUgdmljdG9yeSBvZiB0cnV0aCBhdCB0aGUgY2xpbWF4LCAgIGdlbmVyYWxseSB1c2luZyBmaWN0aXRpb3VzIG9yIG15dGhvbG9naWNhbCBraW5ncywgcXVlZW5zLCBkZW1vbnMsIGdvZHMsIHNvbGRpZXJzIGV0Yy4gVGhlc2UgcGxheXMgYXJlICAgcG9wdWxhcmx5IGtub3duIGFzIEFua2l5YSBOYXRzIGFuZCB0aGVpciBzdGFnaW5nIGlzIGtub3duIGFzIGJoYW9uYS4gICBUaGUgc3RvcnkgZ2VuZXJhbGx5IGRlcGljdHMgc29tZSBpbml0aWFsIHN1cGVyZmljaWFsIHRyaXVtcGggb2YgZXZpbHMgb3ZlciBnb29kLCBidXQgaXQgc2hvd3MgdGhlIHVsdGltYXRlICAgdmljdG9yeSBvZiBnb29kIHdpdGggaW50ZXJjZXNzaW9uIGJ5IHRoZSBHb2RzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIEJvcmdlZXRzIHNvbmdzIGFyZSB3cml0dGVuIGluIHRoZSAnQnJhamF2YWxpLiBUaGVyZSB3ZXJlIDI0MCBCb3JnZWV0cyAgIHdyaXR0ZW4gYnkgU2hhbmthcmFkZXZhLiBUaGUgQm9yZ2VldHMgKGxpdGVyYWxseTogZ3JlYXQgc29uZ3MpIGFyZSBkZXZvdGlvbmFsIHNvbmdzLCBzZXQgdG8gbXVzaWMgYW5kICAgc3VuZyBpbiB2YXJpb3VzIHJhZ2Egc3R5bGVzLiBUaGVzZSBzdHlsZXMgYXJlIHNsaWdodGx5IGRpZmZlcmVudCBmcm9tIGVpdGhlciB0aGUgSGluZHVzdGFuaSBvciB0aGUgQ2FybmF0aWMgICBzdHlsZXMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBHdXJ1IE5hbmFrIERldiBhZHZvY2F0ZWQgdGhlIGNvbmNlcHQgb2YgJ2Rhc3ZhbmRoJyBvciBkb25hdGluZyBvbmUtdGVudGggICBvZiBvbmUncyBlYXJuaW5nIGFtb25nIG5lZWR5IHBlcnNvbnMuICAgS25vd2xlZGdlIEJhc2U6IFNoYW5rYXJkZXZhIHByb3BhZ2F0ZWQgYSBmb3JtIG9mIEJoYWt0aSBjYWxsZWQgZWthLXNoYXJhbmEtbmFhbS1kaHJhbWEsIGFuZCAgIGVzcG91c2VkIGEgc29jaWV0eSBiYXNlZCBvbiBlcXVhbGl0eSBhbmQgZnJhdGVybml0eSwgZnJlZSBmcm9tIGNhc3RlIGRpZmZlcmVuY2VzLCBvcnRob2RveCBCcmFobWFuaWNhbCAgIHJpdHVhbHMgYW5kIHNhY3JpZmljZXMuICAgU291cmNlKSBOQ0VSVCBDTEFTUyA3IFtPVVIgUEFTVCBJSSAtIFBnIDExMi0xMTRdICAgaHR0cDovL3d3dy5hc3NhbWluZm8uY29tL2ZhbW91cy1wZW9wbGUvNDcvc3JpbWFudGEtc2Fua2FyZGV2YS1vci1tYWhhcHVydXNoLXNyaW1hbnRhLSAgc2Fua2FyZGV2YS5odG0gICBodHRwOi8vd3d3LmFzc2FtaW5mby5jb20vY3VsdHVyZS80L2JoYW9uYS10cmFkaXRpb25hbC1mb3JtLW9mLWFzc2FtZXNlLWVudGVydGFpbm1lbnQuaHRtICAgaHR0cHM6Ly93d3cuc2lraHBoaWxvc29waHkubmV0IGhyZWFkcy93aGVyZS10by1naXZlLXRoZS1kYXN3YW5kLjMyMDU0LyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 15,
      "question" : "The Chinese traveller Yuan Chwang  (Hiuen Tsang) who visited India recorded the  general conditions and culture of India at that  time. In this context, which of the following  statements is/are correct?  1.  The roads and river-routes were completely  immune from robbery.  2.  As regards punishment for offences, ordeals  by fire, water and poison were the  instruments for determining the innocence  or guilt of a person.   3.  The tradesmen had to pay duties at ferries  and barrier stations.   Select the correct answer using the codes given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIDEpIFl1YW4gQ2h3YW5nIHdhcyBhIENoaW5lc2UgQnVkZGhpc3QgbW9uayBhbmQgdHJhdmVsbGVyIHdobyB0cmF2ZWxsZWQgYWNyb3NzIEluZGlhIGZvciAxNyB5ZWFycy4gICAyKSBZdWFuIENod2FuZyBoYXMgbWVudGlvbmVkIGluIGhpcyBqb3VybmFsIHRoYXQgaGUgd2FzIHJvYmJlZCBhbmQgdGhlIHRodWdzIGhhZCBkZWNpZGVkIHRvIHNhY3JpZmljZSAgIGhpbSwgYnV0IGhlIHdhcyBzYXZlZCBieSBhIGh1cnJpY2FuZS4gICAgIG9mIDIxICAgICAgICAzKSBUaGUgcHVuaXNobWVudCBmb3Igc29jaWFsIG9mZmVuY2VzIGFjY29yZGluZyB0byB0aGUgdHJhdmVsbGVyJ3MgYWNjb3VudCB3ZXJlIHRvIGN1dCBvZmYgdGhlIG5vc2Ugb3IgYW4gICBlYXIgb3IgYSBoYW5kLiBNaW5vciBvZmZlbmNlcyB3ZXJlIGRlYWx0IHdpdGggZmluZXMuIEFuZCB0byBkZXRlcm1pbmUgZ3VpbHQgb3IgaW5ub2NlbmNlIG9yZGVhbHMgYnkgICBmaXJlIHdhdGVyIGFuZCBwb2lzb24gd2VyZSB0aGUgaW5zdHJ1bWVudHMgd2hpY2ggd2VyZSB1c2VkLiAgIFNPVVJDRSkgVVBTQyAyMDEzICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements with  reference to kathak dance:  1.  The kathaks was originally a caste of story- tellers in temples of south India.  2.  Jugalbandi is the main attraction of a kathak  recital where a man and a woman sing in  chorus.  3  Kathak grew into a major art form under the  patronage of Wajid Ali Shah, the last Nawab  of Awadh.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgdGVybSBrYXRoYWsgaXMgZGVyaXZlZCBmcm9tIGthdGhhLCBhIHdvcmQgdXNlZCBpbiBTYW5za3JpdCBhbmQgb3RoZXIgbGFuZ3VhZ2VzIGZvciBzdG9yeS4gS2F0aGFrIGlzICAgdGhlIHRyYWRpdGlvbmFsIGRhbmNlIGZvcm0gb2YgVXR0YXIgUHJhZGVzaC4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSB0ZXJtIGthdGhhayBpcyBkZXJpdmVkIGZyb20ga2F0aGEsIGEgd29yZCB1c2VkIGluIFNhbnNrcml0IGFuZCBvdGhlciAgIGxhbmd1YWdlcyBmb3Igc3RvcnkuIFRoZSBrYXRoYWtzIHdlcmUgb3JpZ2luYWxseSBhIGNhc3RlIG9mIHN0b3J5LXRlbGxlcnMgaW4gdGVtcGxlcyBvZiBub3J0aCBJbmRpYSwgd2hvICAgZW1iZWxsaXNoZWQgdGhlaXIgcGVyZm9ybWFuY2VzIHdpdGggZ2VzdHVyZXMgYW5kIHNvbmdzLiBUaGUgbGVnZW5kcyBvZiBSYWRoYS1LcmlzaG5hIHdlcmUgZW5hY3RlZCBpbiAgIGZvbGsgcGxheXMgY2FsbGVkIHJhc2EgbGlsYSwgd2hpY2ggY29tYmluZWQgZm9sayBkYW5jZSB3aXRoIHRoZSBiYXNpYyBnZXN0dXJlcyBvZiB0aGUga2F0aGFrIHN0b3J5LXRlbGxlcnMuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBKdWdhbGJhbmRpIGlzIHRoZSBtYWluIGF0dHJhY3Rpb24gb2Yga2F0aGFrIHJlY2l0YWwgd2hpY2ggc2hvd3MgYSBjb21wZXRpdGl2ZSAgIHBsYXkgYmV0d2VlbiB0aGUgZGFuY2VyIGFuZCB0aGUgdGFibGEgcGxheWVyLiBKdWdhbGJhbmRpIG1lYW5zLCBsaXRlcmFsbHksICJlbnR3aW5lZCB0d2lucy4iIGFuZCBhbHNvICAgcmVmZXJzIHRvIGZyaWVuZGx5IGNvbXBldGl0aW9uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFVuZGVyIHRoZSBNdWdoYWwgZW1wZXJvcnMgYW5kIHRoZWlyIG5vYmxlcywgS2F0aGFrIHdhcyBwZXJmb3JtZWQgaW4gdGhlIGNvdXJ0LCAgIHdoZXJlIGl0IGFjcXVpcmVkIGl0cyBwcmVzZW50IGZlYXR1cmVzIGFuZCBkZXZlbG9wZWQgaW50byBhIGZvcm0gb2YgZGFuY2Ugd2l0aCBhIGRpc3RpbmN0aXZlIHN0eWxlLiAgIFN1YnNlcXVlbnRseSwgaXQgZGV2ZWxvcGVkIGluIHR3byB0cmFkaXRpb25zIG9yIGdoYXJhbmFzOiBvbmUgaW4gdGhlIGNvdXJ0cyBvZiBSYWphc3RoYW4gKEphaXB1cikgYW5kIHRoZSAgIG90aGVyIGluIEx1Y2tub3cuIFVuZGVyIHRoZSBwYXRyb25hZ2Ugb2YgV2FqaWQgQWxpIFNoYWgsIHRoZSBsYXN0IE5hd2FiIG9mIEF3YWRoLCBpdCBncmV3IGludG8gYSBtYWpvciAgIGFydCBmb3JtLiAgICBLbm93bGVkZ2UgQmFzZTogQnkgdGhlIHRoaXJkIHF1YXJ0ZXIgb2YgdGhlIG5pbmV0ZWVudGggY2VudHVyeSwgaXQgd2FzIGZpcm1seSBlbnRyZW5jaGVkIGFzIGEgZGFuY2UgZm9ybSAgIG5vdCBvbmx5IGluIHRoZXNlIHR3byByZWdpb25zLCBidXQgaW4gdGhlIGFkam9pbmluZyBhcmVhcyBvZiBwcmVzZW50LWRheSBQdW5qYWIsIEhhcnlhbmEsIEphbW11IGFuZCAgIEthc2htaXIsIEJpaGFyIGFuZCBNYWRoeWEgUHJhZGVzaC4gICBTb3VyY2UpIE5DRVJUIENMQVNTIDcgW09VUiBQQVNUIElJIC0gUGcgMTI2LTEyN10gICBOaXRpbiBTaW5naGFuaWEgQXJ0IGFuZCBDdWx0dXJlIDNyZCBFZGl0aW9uLCBwYWdlIDMzNCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following Pairs with  reference to raw materials used in economy  and source region during Harappan period:  Raw Materials  Source Region  1. Shell for bangles Nageshwar  2. Lapis Lazuli Shortughai  3. Carnelian Dholavira  4. Steatite North Gujarat  Which of the above Pairs is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgSW5kdXMgY2l2aWxpemF0aW9uLCBhbHNvIGtub3duIGFzIHRoZSBJbmR1cyBWYWxsZXkgQ2l2aWxpemF0aW9uIG9yIHRoZSBIYXJhcHBhbiBDaXZpbGl6YXRpb24sIGlzIHRoZSAgIG9sZGVzdCBrbm93biB1cmJhbiBjdWx0dXJlIG9mIHRoZSBJbmRpYW4gc3ViY29udGluZW50LiBUaGUgSGFyYXBwYW5zIHByb2N1cmVkIG1hdGVyaWFscyBmb3IgY3JhZnQgICBwcm9kdWN0aW9uIGluIHZhcmlvdXMgd2F5cy4gICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuIEhhcmFwcGFucyBlc3RhYmxpc2hlZCBzZXR0bGVtZW50cyBzdWNoIGFzIE5hZ2VzaHdhciBhbmQgQmFsYWtvdCBpbiBhcmVhcyAgIHdoZXJlIHNoZWxsIHdhcyBhdmFpbGFibGUuIE5hZ2VzaHdhciBvbiB0aGUgc291dGhlcm4gc2hvcmUgb2YgdGhlIEd1bGYgb2YgS3V0Y2gsIEd1amFyYXQgaXMgYXJndWVkIHRvIGJlICAgdGhlIGZpcnN0IEhhcmFwcGFuIHNoZWxsLSB3b3JraW5nIHNpdGUgaW4gSW5kaWEuIFRoZSBzdXJmYWNlIHN1cnZleSBvZiB0aGUgc2l0ZSBoYXMgcmV2ZWFsZWQgc2V2ZXJhbCAgIGNvbmNlbnRyYXRpb25zIG9mIHNoZWxsIG1hdGVyaWFsIGFuZCB0aGUgZXhjYXZhdGlvbnMgaGF2ZSBhbHNvIHJldmVhbGVkIHNoZWxsIGJhbmdsZSBwaWVjZXMuICAgICAgICBvZiAyMSAgICAgICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBMYXB1cyBsYXp1bGkgd2FzIHNvdXJjZWQgZnJvbSBTaG9ydHVnaGFpLCBpbiBmYXItb2ZmIEFmZ2hhbmlzdGFuLiBTaG9ydHVnYWkgICB3YXMgYSB0cmFkaW5nIGNvbG9ueSBvZiB0aGUgSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiBvbiB0aGUgT3h1cyBSaXZlciAoQW11IERhcnlhKSBuZWFyIHRoZSBsYXBpcyBsYXp1bGkgICBtaW5lcy4gSXQgaXMgY29uc2lkZXJlZCB0byBiZSB0aGUgbm9ydGhlcm5tb3N0IHNldHRsZW1lbnQgb2YgdGhlIEluZHVzIFZhbGxleSBDaXZpbGl6YXRpb24uICAgUGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBDYXJuZWxpYW4gaXMgYSBicm93bmlzaC1yZWQgbWluZXJhbCBjb21tb25seSB1c2VkIGFzIGEgc2VtaS1wcmVjaW91cyAgIGdlbXN0b25lLiBDYXJuZWxpYW4gYmVhZHMgZm91bmQgaW4gSGFyYXBwYW4gY2l0aWVzIGFyZSBhbiBpbmRpY2F0aW9uIG9mIHNvY2lhbCBoaWVyYXJjaHksIHRlY2hub2xvZ2ljYWwgICBtYXJrZXJzIGFuZCBpdGVtcyBvZiBsb25nLWRpc3RhbmNlIHRyYWRlLiAgIENhcm5lbGlhbiBiZWFkcyB3ZXJlIGZvdW5kIGluIERob2xhdmlyYSwgaW4gS3V0Y2ggRGlzdHJpY3Qgb2YgR3VqYXJhdC4gVGhleSB3ZXJlIHRyYWRlZCB0byBNZXNvcG90YW1pYSAgIGFuZCBFZ3lwdC4gICBQYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFN0ZWF0aXRlIHdhcyBtb3N0bHkgb2J0YWluZWQgZnJvbSBzb3V0aCBSYWphc3RoYW4gYW5kIG5vcnRoIEd1amFyYXQgYW5kICAgd2VyZSB0aGUgcHJpbWFyeSBlbGVtZW50IHVzZWQgdG8gbWFrZSBzZWFscy4gU3RlYXRpdGUgaXMgc29mdGVyIHRoYW4gbW9zdCBzdG9uZXMuIEJlY2F1c2Ugc3RlYXRpdGUgZmVlbHMgICBsaWtlIHNvYXAsIHBlb3BsZSBjYWxsIGl0ICJzb2Fwc3RvbmUiLiAgICAgU291cmNlKSBOQ0VSVCBDbGFzcyAxMnRoIC0gVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IC0gSSBQZyAxMi0xM10gICBOQ0VSVCBDbGFzcyA2LCBjaGFwdGVyIDQtSU4gVEhFIEVBUkxJRVNUIENJVElFUyAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements with  reference to Al-Baruni:  1.  Al-Biruni came with the Mohammad Ghori  during his invasion of India.  2.  He translated the works of Euclid into  Sanskrit.  3.  He wrote that vaishyas and Shudras were  allowed to recite Vedic texts.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBbC1CaXJ1bmkgd2FzIGJvcm4gaW4gOTczLCBpbiBLaHdhcml6bSBpbiBwcmVzZW50ZGF5IFV6YmVraXN0YW4uIEtod2FyaXptIHdhcyBhbiBpbXBvcnRhbnQgY2VudHJlIG9mICAgbGVhcm5pbmcsIGFuZCBBbC1CaXJ1bmkgcmVjZWl2ZWQgdGhlIGJlc3QgZWR1Y2F0aW9uIGF2YWlsYWJsZSBhdCB0aGUgdGltZS4gSGUgd2FzIHdlbGwgdmVyc2VkIGluIHNldmVyYWwgICBsYW5ndWFnZXM6IFN5cmlhYywgQXJhYmljLCBQZXJzaWFuLCBIZWJyZXcgYW5kIFNhbnNrcml0LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTXVoYW1tYWQgb2YgR2hvcmkgKDExNDkgLSAxMjA2IENFKSB3YXMgdGhlIHRoaXJkIE11c2xpbSBydWxlciB3aG8gaW52YWRlZCAgIEluZGlhLiBBbC1iaXJ1bmkgKDk3My0xMDQ4KSB3YXMgZGVhZCBieSB0aGVuLiAgIEluIDEwMTcsIHdoZW4gU3VsdGFuIE1haG11ZCBvZiBHaGF6bmkgaW52YWRlZCBLaHdhcml6bSwgaGUgdG9vayBzZXZlcmFsIHNjaG9sYXJzIGFuZCBwb2V0cyBiYWNrIHRvICAgaGlzIGNhcGl0YWwsIEdoYXpuaTsgQWwtQmlydW5pIHdhcyBvbmUgb2YgdGhlbS4gSGUgYXJyaXZlZCBpbiBHaGF6bmkgYXMgYSBob3N0YWdlLCBidXQgZ3JhZHVhbGx5ICAgZGV2ZWxvcGVkIGEgbGlraW5nIGZvciB0aGUgY2l0eSwgd2hlcmUgaGUgc3BlbnQgdGhlIHJlc3Qgb2YgaGlzIGxpZmUgdW50aWwgaGlzIGRlYXRoIGF0IHRoZSBhZ2Ugb2YgNzAuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSXQgd2FzIGluIEdoYXpuaSB0aGF0IEFsLUJpcnVuaSBkZXZlbG9wZWQgYW4gaW50ZXJlc3QgaW4gSW5kaWEuIEFsLUJpcnVuaSdzIGV4cGVydGlzZSAgIGluIHNldmVyYWwgbGFuZ3VhZ2VzIGFsbG93ZWQgaGltIHRvIGNvbXBhcmUgbGFuZ3VhZ2VzIGFuZCB0cmFuc2xhdGUgdGV4dHMuIEhlIHRyYW5zbGF0ZWQgc2V2ZXJhbCBTYW5za3JpdCAgIHdvcmtzLCBpbmNsdWRpbmcgUGF0YW5qYWxpJ3Mgd29yayBvbiBncmFtbWFyLCBpbnRvIEFyYWJpYy4gRm9yIGhpcyBCcmFobWFuYSBmcmllbmRzLCBoZSB0cmFuc2xhdGVkIHRoZSAgIHdvcmtzIG9mIEV1Y2xpZCAoYSBHcmVlayBtYXRoZW1hdGljaWFuKSBpbnRvIFNhbnNrcml0LiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gIEFsLUJpcnVuaSB0cmllZCB0byBleHBsYWluIHRoZSBjYXN0ZSBzeXN0ZW0gYnkgbG9va2luZyBmb3IgcGFyYWxsZWxzIGluIG90aGVyICAgc29jaWV0aWVzLiBIZSBhdHRlbXB0ZWQgdG8gc3VnZ2VzdCB0aGF0IHNvY2lhbCBkaXZpc2lvbnMgd2VyZSBub3QgdW5pcXVlIHRvIEluZGlhLiAgIEFsLWJpcnVuaSBzYXlzIHRoYXQgYm90aCB2YWlzaHlhcyBhbmQgc2h1ZHJhcyB3ZXJlIHB1bmlzaGVkIHdpdGggYW1wdXRhdGlvbiBvZiB0aGUgdG9uZ3VlIGZvciAgIHJlY2l0aW5nIHRoZSB2ZWRpYyB0ZXh0cy4gICAgSW4gc3BpdGUgb2YgaGlzIGFjY2VwdGFuY2Ugb2YgdGhlIEJyYWhtYW5pY2FsIGRlc2NyaXB0aW9uIG9mIHRoZSBjYXN0ZSBzeXN0ZW0sIEFsLUJpcnVuaSBkaXNhcHByb3ZlZCBvZiAgIHRoZSBub3Rpb24gb2YgcG9sbHV0aW9uLiBUaGUgY29uY2VwdGlvbiBvZiBzb2NpYWwgcG9sbHV0aW9uLCBpbnRyaW5zaWMgdG8gdGhlIGNhc3RlIHN5c3RlbSwgd2FzIGFjY29yZGluZyAgIHRvIGhpbSwgY29udHJhcnkgdG8gdGhlIGxhd3Mgb2YgbmF0dXJlLiAgICBTb3VyY2UpIE5DRVJUIENsYXNzIDEydGggLSBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgLSBJSSBQZyAxMTYtMTE3ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements with  reference to the Chishti Sufism in India:  1.   The khanqah was the centre of social life  during the Chishti era.  2.  Chishti tradition maintained absolute  isolation from political power.  3.  Those associated with Chisti Silsila used  Hindvi language to converse.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IER1cmluZyB0aGUgY2hpc2h0aSBlcmEgdGhlIGtoYW5xYWggd2FzIHRoZSBjZW50cmUgb2Ygc29jaWFsIGxpZmUuIEl0IGNvbXByaXNlZCAgIHNldmVyYWwgc21hbGwgcm9vbXMgYW5kIGEgYmlnIGhhbGwgKGphbWEnYXQga2hhbmEpIHdoZXJlIHRoZSBpbm1hdGVzIGFuZCB2aXNpdG9ycyBsaXZlZCBhbmQgcHJheWVkLiBUaGUgICBpbm1hdGVzIGluY2x1ZGVkIGZhbWlseSBtZW1iZXJzIG9mIHRoZSBTaGFpa2gsIGhpcyBhdHRlbmRhbnRzIGFuZCBkaXNjaXBsZXMuIFRoZSBTaGFpa2ggbGl2ZWQgaW4gYSBzbWFsbCAgIHJvb20gb24gdGhlIHJvb2Ygb2YgdGhlIGhhbGwgd2hlcmUgaGUgbWV0IHZpc2l0b3JzIGluIHRoZSBtb3JuaW5nIGFuZCBldmVuaW5nLiBBIHZlcmFuZGEgc3Vycm91bmRlZCB0aGUgICBjb3VydHlhcmQsIGFuZCBhIGJvdW5kYXJ5IHdhbGwgcmFuIGFyb3VuZCB0aGUgY29tcGxleC4gT24gb25lIG9jY2FzaW9uLCBmZWFyaW5nIGEgTW9uZ29sIGludmFzaW9uLCAgIHBlb3BsZSBmcm9tIHRoZSBuZWlnaGJvdXJpbmcgYXJlYXMgZmxvY2tlZCBpbnRvIHRoZSBraGFucWFoIHRvIHNlZWsgcmVmdWdlLiAgICAgb2YgMjEgICAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQSBtYWpvciBmZWF0dXJlIG9mIHRoZSBDaGlzaHRpIHRyYWRpdGlvbiB3YXMgYXVzdGVyaXR5LCBpbmNsdWRpbmcgbWFpbnRhaW5pbmcgICBhIGRpc3RhbmNlIGZyb20gd29ybGRseSBwb3dlci4gSG93ZXZlciwgdGhpcyB3YXMgYnkgbm8gbWVhbnMgYSBzaXR1YXRpb24gb2YgYWJzb2x1dGUgaXNvbGF0aW9uIGZyb20gICBwb2xpdGljYWwgcG93ZXIuIFRoZSBTdWZpcyBhY2NlcHRlZCB1bnNvbGljaXRlZCBncmFudHMgYW5kIGRvbmF0aW9ucyBmcm9tIHRoZSBwb2xpdGljYWwgZWxpdGVzLiBUaGUgICBTdWx0YW5zIGluIHR1cm4gc2V0IHVwIGNoYXJpdGFibGUgdHJ1c3RzIChhdXFhZikgYXMgZW5kb3dtZW50cyBmb3IgaG9zcGljZXMgYW5kIGdyYW50ZWQgdGF4LWZyZWUgbGFuZCAgIChpbmFtKS4gVGhlIENoaXNodGlzIGFjY2VwdGVkIGRvbmF0aW9ucyBpbiBjYXNoIGFuZCBraW5kLiBSYXRoZXIgdGhhbiBhY2N1bXVsYXRlIGRvbmF0aW9ucywgdGhleSAgIHByZWZlcnJlZCB0byB1c2UgdGhlc2UgZnVsbHkgb24gaW1tZWRpYXRlIHJlcXVpcmVtZW50cyBzdWNoIGFzIGZvb2QsIGNsb3RoZXMsIGxpdmluZyBxdWFydGVycyBhbmQgcml0dWFsICAgbmVjZXNzaXRpZXMuIEFsbCB0aGlzIGVuaGFuY2VkIHRoZSBtb3JhbCBhdXRob3JpdHkgb2YgdGhlIHNoYWlraHMsIHdoaWNoIGluIHR1cm4gYXR0cmFjdGVkIHBlb3BsZSBmcm9tIGFsbCAgIHdhbGtzIG9mIGxpZmUuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQ2hpc2h0aXMgYWRvcHRlZCBsb2NhbCBsYW5ndWFnZXMuIEluIERlbGhpLCB0aG9zZSBhc3NvY2lhdGVkIHdpdGggdGhlIENoaXNodGkgICBzaWxzaWxhIGNvbnZlcnNlZCBpbiBIaW5kYXZpLCB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIHBlb3BsZS4gT3RoZXIgc3VmaXMgc3VjaCBhcyBCYWJhIEZhcmlkIGNvbXBvc2VkICAgdmVyc2VzIGluIHRoZSBsb2NhbCBsYW5ndWFnZSwgd2hpY2ggd2VyZSBpbmNvcnBvcmF0ZWQgaW4gdGhlIEd1cnUgR3JhbnRoIFNhaGliLiBPdGhlcnMgY29tcG9zZWQgbG9uZyAgIHBvZW1zIG9yIG1hc25hdmlzIHRvIGV4cHJlc3MgaWRlYXMgb2YgZGl2aW5lIGxvdmUgdXNpbmcgaHVtYW4gbG92ZSBhcyBhbiBhbGxlZ29yeS4gRm9yIGV4YW1wbGUsIHRoZSAgIHByZW0tYWtoeWFuIChsb3ZlIHN0b3J5KSBQYWRtYXZhdCBjb21wb3NlZCBieSBNYWxpayBNdWhhbW1hZCBKYXlhc2kgcmV2b2x2ZWQgYXJvdW5kIHRoZSByb21hbmNlICAgb2YgUGFkbWluaSBhbmQgUmF0YW5zZW4sIHRoZSBraW5nIG9mIENoaXR0b3IuIFRoZWlyIHRyaWFscyB3ZXJlIHN5bWJvbGljIG9mIHRoZSBzb3VsJ3Mgam91cm5leSB0byB0aGUgZGl2aW5lLiAgIFN1Y2ggcG9ldGljIGNvbXBvc2l0aW9ucyB3ZXJlIG9mdGVuIHJlY2l0ZWQgaW4gaG9zcGljZXMsIHVzdWFsbHkgZHVyaW5nIHNhbWEuICAgU291cmNlKSB0aGVtZXMgaW4gSW5kaWFuIGhpc3RvcnkgcGFydCBJSS4gQ2hhcHRlciBuYW1lLSBCaGFrdGkgc3VmaSB0cmFkaXRpb25zLiBQYWdlIG5vLSAxNTQgdG8gMTYwLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 20,
      "question" : "Who of the following founded a new city  on the south bank of a tributary to river Krishna  and undertook to rule his new kingdom as the  agent of a deity to whom all the land south of  the river Krishna was supposed to belong?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEhhcmloYXJhLUkgd2FzIHRoZSBmb3VuZGVyIHRoZSBWaWpheW5hZ2FyYSBjaXR5IGFuZCB0aGUgVmlqYXlhbmFnYXJhIEVtcGlyZSBpbiAxMzM2LiAgIFNvdXJjZSkgVVBTQyAyMDE1ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Amoghavarsha I  ",
        "option2" : "Ballala II  ",
        "option3" : "Harihara I  ",
        "option4" : "Prataparudra II         "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements with  reference to tribal life during the medieval  period:  1.  The activities of forest dwellers during the  medieval period were largely season  specific.  2.  The peshkash levied from forest people by  Mughal often included the supply of  elephants.  3.  The spread of commercial agriculture was  an important external factor that had an  effect on the lives of tribals.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZXJlIHdhcyBtb3JlIHRvIHJ1cmFsIEluZGlhIHRoYW4gc2VkZW50YXJ5IGFncmljdWx0dXJlLiBBcGFydCBmcm9tIHRoZSBpbnRlbnNpdmVseSBjdWx0aXZhdGVkIHByb3ZpbmNlcyAgIGluIG5vcnRoZXJuIGFuZCBub3J0aC13ZXN0ZXJuIEluZGlhLCBodWdlIHN3YXRoZXMgb2YgZm9yZXN0cyAtIGRlbnNlIGZvcmVzdCAoamFuZ2FsKSBvciBzY3J1YmxhbmQgICAoa2hhcmJhbmRpKSBleGlzdGVkIGFsbCBvdmVyIGVhc3Rlcm4gSW5kaWEsIGNlbnRyYWwgSW5kaWEsIG5vcnRoZXJuIEluZGlhIChpbmNsdWRpbmcgdGhlIFRlcmFpIG9uIHRoZSBJbmRvLSAgTmVwYWwgYm9yZGVyKSwgSmhhcmtoYW5kLCBhbmQgaW4gcGVuaW5zdWxhciBJbmRpYSBkb3duIHRoZSBXZXN0ZXJuIEdoYXRzIGFuZCB0aGUgRGVjY2FuIHBsYXRlYXUuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogRm9yZXN0IGR3ZWxsZXJzIHdlcmUgdGVybWVkIGphbmdsaSBpbiBjb250ZW1wb3JhcnkgdGV4dHMuIEJlaW5nIGphbmdsaSwgICBob3dldmVyLCBkaWQgbm90IG1lYW4gYW4gYWJzZW5jZSBvZiAnY2l2aWxpemF0aW9uJy4gUmF0aGVyLCB0aGUgdGVybSBkZXNjcmliZWQgdGhvc2Ugd2hvc2UgbGl2ZWxpaG9vZCAgIGNhbWUgZnJvbSB0aGUgZ2F0aGVyaW5nIG9mIGZvcmVzdCBwcm9kdWNlLCBodW50aW5nIGFuZCBzaGlmdGluZyBhZ3JpY3VsdHVyZS4gVGhlc2UgYWN0aXZpdGllcyB3ZXJlICAgbGFyZ2VseSBzZWFzb24gc3BlY2lmaWMuIEFtb25nIHRoZSBCaGlscywgZm9yIGV4YW1wbGUsIHNwcmluZyB3YXMgcmVzZXJ2ZWQgZm9yIGNvbGxlY3RpbmcgZm9yZXN0IHByb2R1Y2UsICAgc3VtbWVyIGZvciBmaXNoaW5nLCB0aGUgbW9uc29vbiBtb250aHMgZm9yIGN1bHRpdmF0aW9uLCBhbmQgYXV0dW1uIGFuZCB3aW50ZXIgZm9yIGh1bnRpbmcuIFN1Y2ggYSAgIHNlcXVlbmNlIHByZXN1bWVkIGFuZCBwZXJwZXR1YXRlZCBtb2JpbGl0eSwgd2hpY2ggd2FzIGEgZGlzdGluY3RpdmUgZmVhdHVyZSBvZiB0cmliZXMgaW5oYWJpdGluZyB0aGVzZSAgIGZvcmVzdHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRXh0ZXJuYWwgZm9yY2VzIGVudGVyZWQgdGhlIGZvcmVzdCBpbiBkaWZmZXJlbnQgd2F5cy4gRm9yIGluc3RhbmNlLCB0aGUgc3RhdGUgICByZXF1aXJlZCBlbGVwaGFudHMgZm9yIHRoZSBhcm15LiBTbywgdGhlIHBlc2hrYXNoIGxldmllZCBmcm9tIGZvcmVzdCBwZW9wbGUgb2Z0ZW4gaW5jbHVkZWQgYSBzdXBwbHkgb2YgICBlbGVwaGFudHMuIFBlc2hrYXNoIHdhcyBhIGZvcm0gb2YgdHJpYnV0ZSBjb2xsZWN0ZWQgYnkgdGhlIE11Z2hhbCBzdGF0ZS4gSW4gdGhlIE11Z2hhbCBwb2xpdGljYWwgICBpZGVvbG9neSwgdGhlIGh1bnQgc3ltYm9saXplZCB0aGUgb3ZlcndoZWxtaW5nIGNvbmNlcm4gb2YgdGhlIHN0YXRlIHRvIGVuc3VyZSBqdXN0aWNlIHRvIGFsbCBpdHMgc3ViamVjdHMsICAgcmljaCBhbmQgcG9vci4gUmVndWxhciBodW50aW5nIGV4cGVkaXRpb25zIGVuYWJsZWQgdGhlIGVtcGVyb3IgdG8gdHJhdmVsIGFjcm9zcyB0aGUgZXh0ZW5zaXZlIHRlcnJpdG9yaWVzICAgb2YgaGlzIGVtcGlyZSBhbmQgcGVyc29uYWxseSBhdHRlbmQgdG8gdGhlIGdyaWV2YW5jZXMgb2YgaXRzIGluaGFiaXRhbnRzLiBUaGUgaHVudCB3YXMgYSBzdWJqZWN0IGZyZXF1ZW50bHkgICBwYWludGVkIGJ5IGNvdXJ0IGFydGlzdHMuIFRoZSBwYWludGVyIHJlc29ydGVkIHRvIHRoZSBkZXZpY2Ugb2YgaW5zZXJ0aW5nIGEgc21hbGwgc2NlbmUgc29tZXdoZXJlIGluIHRoZSAgIHBpY3R1cmUgdGhhdCBmdW5jdGlvbmVkIGFzIGEgc3ltYm9sIG9mIGEgaGFybW9uaW91cyByZWlnbi4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgc3ByZWFkIG9mIGNvbW1lcmNpYWwgYWdyaWN1bHR1cmUgd2FzIGFuIGltcG9ydGFudCBleHRlcm5hbCBmYWN0b3IgdGhhdCAgIGhhZCBhbiBlZmZlY3Qgb24gdGhlIGxpdmVzIG9mIHRob3NlIHdobyBsaXZlZCBpbiB0aGUgZm9yZXN0cy4gRm9yZXN0IHByb2R1Y3RzIGxpa2UgaG9uZXksIGJlZXN3YXggYW5kICAgICBvZiAyMSAgICAgICAgZ3VtIGxhYyB3ZXJlIGluIGdyZWF0IGRlbWFuZC4gU29tZSwgc3VjaCBhcyBndW0gbGFjLCBiZWNhbWUgbWFqb3IgaXRlbXMgb2Ygb3ZlcnNlYXMgZXhwb3J0IGZyb20gSW5kaWEgICBpbiB0aGUgc2V2ZW50ZWVudGggY2VudHVyeS4gRWxlcGhhbnRzIHdlcmUgYWxzbyBjYXB0dXJlZCBhbmQgc29sZC4gVHJhZGUgaW52b2x2ZWQgYW4gZXhjaGFuZ2Ugb2YgICBjb21tb2RpdGllcyB0aHJvdWdoIGJhcnRlciBhcyB3ZWxsLiBTb21lIHRyaWJlcywgbGlrZSB0aGUgTG9oYW5pcyBpbiB0aGUgUHVuamFiLCB3ZXJlIGVuZ2FnZWQgaW4gICBvdmVybGFuZCB0cmFkZSwgYmV0d2VlbiBJbmRpYSBhbmQgQWZnaGFuaXN0YW4sIGFuZCBpbiB0aGUgdG93bi1jb3VudHJ5IHRyYWRlIGluIHRoZSBQdW5qYWIgaXRzZWxmLiAgIFNvdXJjZSkgdGhlbWVzIGluIEluZGlhbiBoaXN0b3J5IHBhcnQgSUkuIENoYXB0ZXIgbmFtZS0gUEVBU0FOVFMsIFpBTUlOREFSUyBBTkQgVEhFIFNUQVRFLiBQYWdlICAgbm8tIDIwOCB0byAyMTEuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following pairs are correctly  matched?  List I Salutation List II Description  1. Kornish  salutation  It is done four times  and it literally means  submission  2. Chahar taslim  salutation  It signifies that the  subject placed his head  into the hand of  humility  3. Sijda  salutation   It means prostration  before God.  4. Zaminbos  salutation   Kissing the ground  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IEtvcm5pc2ggd2FzIGEgZm9ybSBvZiBjZXJlbW9uaWFsIHNhbHV0YXRpb24gaW4gd2hpY2ggdGhlIGNvdXJ0aWVyIHBsYWNlZCB0aGUgcGFsbSBvZiAgIGhpcyByaWdodCBoYW5kIGFnYWluc3QgaGlzIGZvcmVoZWFkIGFuZCBiZW50IGhpcyBoZWFkLiBJdCBzdWdnZXN0ZWQgdGhhdCB0aGUgc3ViamVjdCBwbGFjZWQgaGlzIGhlYWQgLSB0aGUgICBzZWF0IG9mIHRoZSBzZW5zZXMgYW5kIHRoZSBtaW5kIC0gaW50byB0aGUgaGFuZHMgb2YgaHVtaWxpdHksIHByZXNlbnRpbmcgaXQgdG8gdGhlIHJveWFsIGFzc2VtYmx5LiAgIFBhaXIgMiBpcyBpbmNvcnJlY3Q6IENoYWhhciB0YXNsaW0gaXMgYSBtb2RlIG9mIHNhbHV0YXRpb24gd2hpY2ggYmVnaW5zIHdpdGggcGxhY2luZyB0aGUgYmFjayBvZiB0aGUgcmlnaHQgICBoYW5kIG9uIHRoZSBncm91bmQsIGFuZCByYWlzaW5nIGl0IGdlbnRseSB0aWxsIHRoZSBwZXJzb24gc3RhbmRzIGVyZWN0LCB3aGVuIGhlIHB1dHMgdGhlIHBhbG0gb2YgaGlzIGhhbmQgICB1cG9uIHRoZSBjcm93biBvZiBoaXMgaGVhZC4gIEl0IGlzIGRvbmUgZm91ciAoY2hhaGFyKSB0aW1lcy4gVGFzbGltIGxpdGVyYWxseSBtZWFucyBzdWJtaXNzaW9uLiAgIFBhaXIgMyBpcyBjb3JyZWN0OiBTaWpkYSBtZWFucyBwcm9zdHJhdGlvbiBiZWZvcmUgR29kLiBJdCB3YXMgaW50cm9kdWNlZCBieSBHaGl5YXN1ZGRpbiBCYWxiYW4uIExhdGVyLCAgIEFrYmFyIGFsc28gaW50cm9kdWNlZCBpbiBoaXMgY291cnQgdGhlIHByYWN0aWNlIG9mIHNpamRhIG9yIHByb3N0cmF0aW9uLCBidXQgU2hhaCBKYWhhbiBhYm9saXNoZWQgaXQgc2luY2UgICB0aGlzIGZvcm0gb2YgdmVuZXJhdGlvbiB3YXMgZGVlbWVkIGZpdCBmb3IgdGhlIEFsbWlnaHR5LiBTaGFoIEphaGFuIHN1YnN0aXR1dGVkIGNiYWhhciB0YXNsaW0gZm9yIHNpamRhLiAgIFBhaXIgNCBpcyBjb3JyZWN0OiBUaGUgZm9ybXMgb2Ygc2FsdXRhdGlvbiB0byB0aGUgcnVsZXIgaW5kaWNhdGVkIHRoZSBwZXJzb24ncyBzdGF0dXMgaW4gdGhlIGhpZXJhcmNoeTogICBkZWVwZXIgcHJvc3RyYXRpb24gcmVwcmVzZW50ZWQgaGlnaGVyIHN0YXR1cy4gVGhlIGhpZ2hlc3QgZm9ybSBvZiBzdWJtaXNzaW9uIHdhcyBzaWpkYSBvciBjb21wbGV0ZSAgIHByb3N0cmF0aW9uLiBVbmRlciBTaGFoIEphaGFuIHRoZXNlIHJpdHVhbHMgd2VyZSByZXBsYWNlZCB3aXRoIGNoYWhhciB0YXNsaW0gYW5kIHphbWluYm9zIChraXNzaW5nIHRoZSAgIGdyb3VuZCkuICAgU291cmNlKSAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDI1OS8xL1VuaXQtMzAucGRmICAgVGhlbWVzIGluIEluZGlhbiBoaXN0b3J5IHBhcnQgSUkuIENoYXB0ZXIgbmFtZS0gS2luZ3MgYW5kIGNocm9uaWNsZXMuIFBhZ2Ugbm8tIDIzNyBhbmQgMjM4LiAgIGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5Lzc3NTc5LzEvVW5pdC05LnBkZiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements with  reference to the different types of musical  instruments:  1.  String instruments such as ektara,  ravanhattha and gopijantra are used as  accompanying instruments in traditional  performances.  2.  A drum is made of a membrane stretched  across a hollow frame and played by striking.  3.  Percussion Instruments need air to flow  through them to produce sound.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE11c2ljIGlzIGFuIGltcG9ydGFudCBjb21wb25lbnQgb2YgdGhlIHBlcmZvcm1pbmcgYXJ0cyBsaWtlIGRhbmNlIGFuZCBkcmFtYSwgYW5kIG9mIHJpdHVhbHMuIEVhY2ggICBjb21tdW5pdHkgaGFzIGl0cyBvd24gc3R5bGUgb2YgbXVzaWMgYW5kIHRyYWRpdGlvbiBvZiBzb25ncy4gVGhlcmUgYXJlIGVzc2VudGlhbGx5IHR3byB3YXlzIHRvIG1ha2UgICBtdXNpYzogd2l0aCB0aGUgaHVtYW4gdm9pY2UgYW5kIHdpdGggYW4gaW5zdHJ1bWVudC4gTXVzaWNhbCBpbnN0cnVtZW50cyBhcmUgY2xhc3NpZmllZCBvbiB0aGUgYmFzaXMgb2YgICB0aGUgc2NpZW50aWZpYyBwcmluY2lwbGUgdXNlZCB0byBjcmVhdGUgdGhlIHNvdW5kIHRoZXkgbWFrZS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBJbnN0cnVtZW50cyBpbiB3aGljaCBzb3VuZCBpcyBwcm9kdWNlZCBieSBzdHJpa2luZyBzdHJpbmdzIG1hZGUgb2YgaXJvbiwgc3RlZWwsICAgYnJhc3Mgb3Igb3RoZXIgbWV0YWxzIGFzIHdlbGwgYXMgZ29hdMOtcyBndXQsIGNvdHRvbiwgc2lsayB0aHJlYWRzIGV0Yy4gYXJlIGtub3duIGFzIHN0cmluZyBvciBjaG9yZG9waG9uaWMgICBpbnN0cnVtZW50cy4gU29tZSBvZiB0aGUgc3RyaW5nIGluc3RydW1lbnRzIHN1Y2ggYXMgZWt0YXJhLCByYXZhbmhhdHRoYSBhbmQgZ29waWphbnRyYSBhcmUgdXNlZCBhcyAgIGFjY29tcGFueWluZyBpbnN0cnVtZW50cyBpbiB0cmFkaXRpb25hbCBwZXJmb3JtYW5jZXMuIEJob3BhcyB1c2UgdGhlIGVrdGFyYSB3aGlsZSBwZXJmb3JtaW5nIEJhcHVqaSAgIGthIHBoYWQsIGEgdHJhZHRpb25hbCBzdG9yeS10ZWxsaW5nIHBlcmZvcm1hbmNlIG9mIFJhamFzdGhhbi4gICAgIG9mIDIxICAgICAgICAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQSBkcnVtIGlzIG1hZGUgb2YgYSBtZW1icmFuZSBzdHJldGNoZWQgYWNyb3NzIGEgaG9sbG93IGZyYW1lIGFuZCBwbGF5ZWQgYnkgICBzdHJpa2luZy4gRS5nLiAgZGhvbGFrIG9yIG1yaWRhbmdhbS4gQSBtZW1icmFuZSBtYWRlIG9mIGhpZGUsIHRhdXRseSBzdHJldGNoZWQgb3ZlciBhIGJvd2wgb3IgZnJhbWUsIGlzICAgdGhlIGtleSBlbGVtZW50IGluIGdlbmVyYXRpbmcgZHJ1bSBzb3VuZHMgd2hpY2ggaXMgd2h5IHRoaXMgZmFtaWx5IG9mIG11c2ljYWwgaW5zdHJ1bWVudHMgaXMgY2FsbGVkICAgbWVtYnJhbm9waG9uZXMuIFRhYmxhcywgZGhvbGFrcywgZGFtcnVzLCBuYWdnYWRhcywgY2hlbmRhcyBhbmQgbWFueSBvdGhlcnMgZmFsbCBpbiB0aGlzIGNhdGVnb3J5LiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFdpbmQgaW5zdHJ1bWVudHMgbmVlZCBhaXIgdG8gZmxvdyB0aHJvdWdoIHRoZW0gdG8gcHJvZHVjZSBzb3VuZC4gKEFuZCBub3QgICBQZXJjdXNzaW9uIEluc3RydW1lbnRzKSBFLmcuLCBiYW5zdXJpIG9yIGZsdXRlLiBJbiBmb2xrIG11c2ljIGEgdmFyaWV0eSBvZiB3aW5kIGluc3RydW1lbnRzIGFyZSBwb3B1bGFyLCAgIGZvciBleGFtcGxlLCBmbHV0ZXMgcGxheWVkIGJvdGggaG9yaXpvbnRhbGx5IGFuZCB2ZXJ0aWNhbGx5LCBhbGdvamEsIHBhd2EsIHNhdGFyYSwgdHVyaGksIHNoZWhuYWksIHNoYW5raCwgICBiZWVuIChwdW5naSkgZXRjLiAgICBXaW5kIGluc3RydW1lbnRzOiAgIDEpIEJlZW46IFRoZSBzbmFrZS1jaGFybWVyw61zIGJlZW4sIGEgcmVlZCB3aW5kIGluc3RydW1lbnQgb2YgYSBzdHJhbmdlIHNoYXBlLCBpcyBhbm90aGVyIGNvbW1vbnBsYWNlICAgc2lnaHQgaW4gb3VyIGNpdGllcy4gQmVlbiBpcyBtYWRlIG91dCBvZiBhIGthZGR1IChnb3VyZCksIHRoYXQgaGFzIGJlZW4gZHJpZWQgYW5kIGhvbGxvd2VkIG91dC4gVGhlICAgc2FwZXJhcyAoc25ha2UgY2hhcm1lcnMpIHBsYW50IHRoZSBnb3VyZCBjcmVlcGVyIHRoZW1zZWx2ZXMsIGluIGEgc3BlY2lhbCB3YXksIHNvIHRoYXQgdGhlIGdvdXJkIGRvZXMgICBub3QgdG91Y2ggdGhlIGdyb3VuZC4gR3Jvd2luZyBvbiB0aGUgY3JlZXBlciwgaXQgZGV2ZWxvcHMgYSBmdWxseSBlbG9uZ2F0ZWQgc2hhcGUsIGJlc3Qgc3VpdGVkIGZvciAgIG1ha2luZyBiZWVuLiAgIFBlcmN1c3Npb24gSW5zdHJ1bWVudHMgYXJlIHN0cnVjayB0byBwcm9kdWNlIHNvdW5kLiBPZnRlbiB0aGVzZSBhcmUgdXNlZCB0byBwcm9kdWNlIHRoZSB0YWFsIG9yIGJlYXQgICBhbmQgZG8gbm90IHByb2R1Y2UgYWxsIHRoZSBtdXNpY2FsIG5vdGVzIEUuZy4sIG1hbmplZXJhIG9yIGN5bWJhbHMuICAgS25vd2xlZGdlIEJhc2U6ICAgICAgb2YgMjEgIC4gICAgICAgICAgIFBlcmN1c3Npb24gSW5zdHJ1bWVudHM6ICAgMSkgQ2hpa2thOiBJdCBpcyBhbiBpbnN0cnVtZW50IHVuaXF1ZSB0byBQdW5qYWIuIFNpbWlsYXIgdG8gdGhlIGNhbmUgc25ha2UgYXZhaWxhYmxlIGluIG1hbnkgcGFydHMgb2YgdGhlICAgY291bnRyeSwgdGhlIGNoaWtoYSBpcyBtYWRlIHVwIG9mIDE0IHdvb2RlbiBzdGlja3Mgam9pbnQgdG9nZXRoZXIgYXMgYSBsYXR0aWNlLiBCeSBvcGVuaW5nIGFuZCBzaGFycGx5ICAgc2h1dHRpbmcgdGhlIGNoaWtraGEsIGEgc2hhcnAgc291bmQgc2ltaWxhciB0byBjbGFwcGluZyBpcyBwcm9kdWNlZC4gICAyKSBDaGltdGE6IEl0IGlzIHZlcnkgc2ltaWxhciB0byBhbiBhY3R1YWwgcGFpciBvZiB0b25ncyB1c2VkIGluIHRoZSBraXRjaGVuOyB0aGUgY2hpbXRhIGhhcyBzbWFsbCBtZXRhbCAgIGRpc2NzIGxvb3NlbHkgYXR0YWNoZWQgdG8gaXQgd2hpY2ggc3RyaWtlIGFnYWluc3QgZWFjaCBvdGhlciB3aGVuIHRoZSBhcm1zIG9mIHRoZSBjaGltdGEgYXJlIHN0cnVjay4gICAzKSBNYXNoYWs6IEl0IGlzIG1hZGUgb2YgdGhlIGxlYXRoZXIgYmFnIHVzZWQgYnkgdmlsbGFnZXJzIHRvIHRyYW5zcG9ydCB3YXRlciEgSXQgaXMgbGlrZSBhIGJhc2ljIGJhZ3BpcGUsIHRoZSAgIG5hdGlvbmFsIG11c2ljYWwgaW5zdHJ1bWVudCBvZiBTY290bGFuZCEgVGhlIG1hc2hhayBpcyB1c3VhbGx5IHBsYXllZCBieSB0aGUgRGhvbGlzIG9mIFJhamFzdGhhbiBhcyAgIGFjY29tcGFuaW1lbnQgdG8gcG9wdWxhciBmb2xrIG1lbG9kaWVzLiAgIFNvdXJjZSkgQ2xhc3MgMTF0aCBOQ0VSVC4gTGl2aW5nIHRyYWRpdGlvbnMgb2YgSW5kaWEuIENoYXB0ZXIgMTAuIENoYXB0ZXIgbmFtZS0gdGhlYXRyZSBjcmFmdHMuICBQYWdlIG5vLTExNyAgIHRvIDEyMS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following sites:   1. Hunsgi  2. Kurnool Caves  3. Brahmagiri   4. Burzahom   5. Bhimbetka    Which of the above sites belong to Paleolithic  period of India?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQYWxhZW9saXRoaWMgcGVyaW9kIGV4dGVuZHMgZnJvbSAyIG1pbGxpb24geWVhcnMgYWdvIHRvIGFib3V0IDEyLDAwMCB5ZWFycyBhZ28uIFRoaXMgbG9uZyBzdHJldGNoIG9mICAgdGltZSBpcyBkaXZpZGVkIGludG8gdGhlIExvd2VyLCBNaWRkbGUgYW5kIFVwcGVyIFBhbGFlb2xpdGhpYy4gVGhpcyBsb25nIHNwYW4gb2YgdGltZSBjb3ZlcnMgOTklIG9mICAgaHVtYW4gaGlzdG9yeS4gICBPcHRpb24gMSwyIGFuZCA1IGFyZSBjb3JyZWN0IDogSHVuc2dpLCBLdXJub29sIGNhdmVzIGFuZCBCaGltYmV0a2Egc2l0ZXMgYmVsb25nIHRvIFBhbGVvbGl0aGljIHBlcmlvZC4gICBPcHRpb24gMyBpcyBpbmNvcnJlY3QuIEJyYWhtYWdpcmkgaXMgYSBNZWdhbGl0aGljIHNpdGUgaW4gQ2hpdHJhZHVyZ2EgYXJlYSBvZiBLYXJuYXRha2EuICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0OiBCdXJ6YWhvbSBpcyBhIE5lb2xpdGhpYyBzaXRlIGxvY2F0ZWQgaW4gdGhlIG5vcnRoZWFzdCBvZiBTcmluYWdhciBpbiBKYW1tdSAmICAgS2FzaG1pci4gICAgIFNvdXJjZSkgTkNFUlQgQ2xhc3MgNnRoIE91ciBQYXN0cyBJLCBDaC0yLCBNYXAgMjsgICAgQW5jaWVudCBJbmRpYSBieSBVcGluZGVyIFNpbmdoLCBDaC0yLDMgYW5kIDQgKFNpdGUgZGVzY3JpcHRpb24pICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3 and 5 only  ",
        "option2" : "2, 3 and 5 only   ",
        "option3" : "1, 2 and 5 only   ",
        "option4" : "1, 2, 4 and 5   "
      }
    },
    {
      "index" : 25,
      "question" : "Banjaras during the medieval period of  Indian history were generally      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "ICAgb2YgMjEgIC4gICAgICAgICAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQmFuamFyYXMgZHVyaW5nIG1lZGlldmFsIHBlcmlvZCB0cmFkaW5nIGdyb3VwcyB0aGF0IG1vdmVkIGZyb20gb25lIHBsYWNlIHRvIGFub3RoZXIgaW4gYnV5aW5nIGFuZCAgIHNlbGxpbmcgZ29vZHMuICAgU291cmNlKSBVUFNDIDIwMTYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "agriculturists  ",
        "option2" : "warriors  ",
        "option3" : "weavers   ",
        "option4" : "traders   "
      }
    },
    {
      "index" : 26,
      "question" : "With reference to temple towns in  medieval India, consider the following  statements:    1.  Erivirappattanas were temple towns in  South India.   2.  Thanjavur was a famous temple town and  capital of Cholas.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRXJpdmlyYXBwYXR0YW5hcywgd2hlcmUgY2hhcnRlcmVkIG1lcmNhbnRpbGUgdG93bnMsIGJlZ2FuIHRvIGFwcGVhciBmcm9tIHRoZSAgIGVsZXZlbnRoIGNlbnR1cnknIGluIFNvdXRoIEluZGlhLiBUaGVzZSB3ZXJlICdpbmxhbmQgcG9ydHMnIGZvciB0cmFkZSBhbmQgZ2VuZXJhbGx5IGVzdGFibGlzaGVkIGluIHJlbW90ZSAgIGFuZCBkaWZmaWN1bHQgYXJlYXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVmlqYXlhbGF5YSwgb25lIG9mIHRoZSBDaG9sYXMgZnJvbSBVcmFpeXVyLCBjYXB0dXJlZCB0aGUgS2F2ZXJpIGRlbHRhIHdoaWNoIHdhcyAgIHVuZGVyIGNvbnRyb2wgb2YgdGhlIE11dHRhcmFpeWFyIChzdWJvcmRpbmF0ZSB0byB0aGUgUGFsbGF2YSBraW5ncyBvZiBLYW5jaGlwdXJhbSksIGluIHRoZSBtaWRkbGUgb2YgOXRoICAgY2VudHVyeS4gSGUgYnVpbHQgdGhlIHRvd24gb2YgVGhhbmphdnVyIGFuZCBhIHRlbXBsZSBmb3IgZ29kZGVzcyBOaXNodW1iaGFzdWRlbmkgdGhlcmUuIFRoYW5qYXZ1ciAgIHdhcyBhIGZhbW91cyB0ZW1wbGUgdG93biBhbmQgY2FwaXRhbCBvZiBDaG9sYXMuIEl0IGlzIHNpdHVhdGVkIG9uIHRoZSBiYW5rcyBvZiBLYXZlcmkgUml2ZXIuIFRoZSBmYW1vdXMgICB0ZW1wbGUgUmFqYXJhamVzaHZhcmEgaXMgaW4gVGhhbmphdnVyLiAgICBTb3VyY2UpIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2dlc3MxPTYtMTAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "both 1 and 2    ",
        "option4" : "neither 1 nor 2            "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements about  the societal structure in the Later Vedic Period:   1.  Women were allowed to study the Vedas.   2.  Only the Brahmins and Kshatriyas were  allowed to perform Vedic sacrifices.   3. The Varna system became very rigid and  there were no chances for social mobility.   Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogRHVyaW5nIHRoZSBMYXRlciBWZWRpYyBQZXJpb2QsIHRoZSBzaHVkcmFzIGhhZCB0byBzZXJ2ZSB0aGUgb3RoZXIgdGhyZWUgZ3JvdXBzICAgYW5kIGNvdWxkIG5vdCBwZXJmb3JtIGFueSByaXR1YWxzLiBPZnRlbiwgd29tZW4gd2VyZSBhbHNvIGdyb3VwZWQgd2l0aCB0aGUgc2h1ZHJhcy4gQm90aCB3b21lbiBhbmQgICBzaHVkcmFzIHdlcmUgbm90IGFsbG93ZWQgdG8gc3R1ZHkgdGhlIFZlZGFzLiBMYXRlciBWZWRpYyBQZXJpb2Qgc2F3IGEgZGVjbGluZSBpbiB0aGUgc3RhdHVzIG9mIHdvbWVuIGluICAgc29jaWV0eS4gVW5saWtlIGluIHRoZSBFYXJseSBWZWRpYyBQZXJpb2QsIHRoZSB3b21lbiB3ZXJlIG5vdCBlZHVjYXRlZCwgbm9yIGRpZCB0aGV5IGF0dGVuZCBwb2xpdGljYWwgICBhc3NlbWJsaWVzIGxpa2UgU2FiaGFzIGFuZCBTYW1pdGlzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJyYWhtaW4sIEtzaGF0cml5YXMgYXMgd2VsbCBhcyBWYWlzaHlhcyB3ZXJlIGFsbG93ZWQgdG8gY29uZHVjdCBWZWRpYyAgIHNhY3JpZmljZXMsIGFuZCBhbGwgdGhyZWUgd2VyZSBjYWxsZWQgRHZpamEgKHR3aWNlIGJvcm4pIGFzIHRoZXkgd2VyZSBhbGxvd2VkIHRvIHdlYXIgdGhlIHNhY3JlZCB0aHJlYWQgICBhZnRlciBjb25kdWN0aW5nIHRoZSBVcGFuYXlhbiByaXR1YWwuICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBWYXJuYSBzeXN0ZW0gd2FzIGFsbW9zdCBhYnNlbnQgZHVyaW5nIHRoZSBncmVhdGVyIHBhcnQgb2YgRWFybHkgVmVkaWMgICBQZXJpb2QsIGFuZCBjYW1lIGludG8gZXhpc3RlbmNlIHZlcnkgbGF0ZS4gSXQgdG9vayBydWRpbWVudGFyeSBzaGFwZSBkdXJpbmcgdGhlIExhdGVyIFZlZGljIFBlcmlvZCBhbmQgICB3YXMgbW9yZSBwcmVzY3JpcHRpdmUgaW4gbmF0dXJlIGFuZCBub3Qgc3RyaWN0bHkgcHJhY3RpY2FsbHkgZm9sbG93ZWQuIEJpcnRoIGRpZCBub3QgeWV0IGZpeCB0aGUgICBwcm9mZXNzaW9uIGFuZCBWYXJuYSBvZiBhIHBlcnNvbiBmb3JldmVyIGFuZCB0aGVyZSB3YXMgc2NvcGUgb2Ygc29jaWFsIG1vYmlsaXR5LiBXZSBzZWUgbG93ZXIgVmFybmFzICAgY2xhaW1pbmcga2luZ3NoaXAgKE5hbmRhLCBNYXVyeWEsIGV0Yy4pLiBFdmVuIFZlZGFzIGhhdmUgaHltbnMgdGFsa2luZyBhYm91dCBkaWZmZXJlbnQgcGVvcGxlIG9mIHRoZSAgIHNhbWUgZmFtaWx5IGhhdmluZyBkaWZmZXJlbnQgdmFybmFzIGFjY29yZGluZyB0byBpbmRpdmlkdWFsIHByb2Zlc3Npb24uICAgIFNvdXJjZSkgTkNFUlQgQ2xhc3MgNnRoIEhpc3RvcnksIENoLTU7ICAgIElHTk9VIEJBIEVISSAwMiBCbG9jayAwMywgVW5pdCAxMyAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements about  the ''Gana'' form of government in the Vajji  kingdom during the period of Mahajanapadas:    1.  It was an oligarchy ruled by few powerful  people belonging to important families and  wealthy individuals.   2.  People of all varnas including women were  allowed to participate in assemblies.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE9wcG9zZWQgdG8gbW9uYXJjaGllcyB3aXRoIGEgc2luZ2xlIHBvd2VyZnVsIGFuZCBhYnNvbHV0ZSBydWxlciwgdGhlICAgR2FuYS9TYW5naGEgd2VyZSBvbGlnYXJjaGllcyAocnVsZWQgYnkgYSBmZXcgcG93ZXJmdWwgcGVvcGxlKS4gSXQgd2FzIG5vdCBjb21wbGV0ZWx5IGRlbW9jcmF0aWMuIE9ubHkgICB0aGUgbGVhZGVycyBvZiB2YXJpb3VzIHRyaWJhbCBjbGFucywgb3IgaW1wb3J0YW50IGZhbWlsaWVzIG9yIHdlYWx0aHkgaW5kaXZpZHVhbHMgZ290IHRvIHBhcnRpY2lwYXRlIGluIHRoZSAgIGFzc2VtYmxpZXMgd2hlcmUgZGVjaXNpb25zIG9uIGdvdmVybmluZyB0aGUgZ2FuYS9zYW5naGEgd2VyZSB0YWtlbi4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBBbHRob3VnaCBtb3JlIHBhcnRpY2lwYXRpdmUgdGhhbiBtb25hcmNoaWVzLCBldmVuIHRoZSBHYW5hcyB3ZXJlbid0ICAgZGVtb2NyYXRpYyBpbiB0aGUgbW9kZXJuIHNlbnNlLiBOb3QgZXZlcnkgY2l0aXplbiBnb3QgYW4gb3Bwb3J0dW5pdHkgdG8gcGFydGljaXBhdGUgaW4gZ292ZXJuYW5jZS4gICAgIG9mIDIxICAuICAgICAgICBXb21lbiwgc2xhdmVzIChkYXNhcykgYW5kIGxvd2VyIHZhcm5hcyBsaWtlIGthbW1ha2FyYXMgd2VyZSBub3QgYWxsb3dlZCB0byBwYXJ0aWNpcGF0ZSBpbiB0aGVzZSAgIGFzc2VtYmxpZXMuICAgIFNvdXJjZSkgTkNFUlQgQ2xhc3MgNnRoIEhpc3RvcnkgT3VyIFBhc3RzIEksIENoLTU7ICAgIEFuY2llbnQgSW5kaWEgYnkgVXBpbmRlciBTaW5naCwgQ2gtNiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following statements with  reference to the teachings of Budhha is/are  correct?   1.  According to Buddha, cravings could be  removed by the following moderation in  everything.   2.  Buddha preached the idea of Atman.   3.  According to Buddha, our actions affect us  both in this life and the next.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBCdWRkaGEgdGF1Z2h0IGluIHRoZSBsYW5ndWFnZSBvZiB0aGUgb3JkaW5hcnkgcGVvcGxlLCBQcmFrcml0LCBzbyB0aGF0IGV2ZXJ5Ym9keSBjb3VsZCB1bmRlcnN0YW5kICAgaGlzIG1lc3NhZ2UuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBCdWRkaGEgdGF1Z2h0IHRoYXQgbGlmZSBpcyBmdWxsIG9mIHN1ZmZlcmluZyBhbmQgdW5oYXBwaW5lc3MuIFRoaXMgaXMgY2F1c2VkICAgYmVjYXVzZSB3ZSBoYXZlIGNyYXZpbmdzIGFuZCBkZXNpcmVzICh3aGljaCBvZnRlbiBjYW5ub3QgYmUgZnVsZmlsbGVkKS4gU29tZXRpbWVzLCBldmVuIGlmIHdlIGdldCB3aGF0ICAgd2Ugd2FudCwgd2UgYXJlIG5vdCBzYXRpc2ZpZWQsIGFuZCB3YW50IGV2ZW4gbW9yZSAob3Igd2FudCBvdGhlciB0aGluZ3MpLiBUaGUgQnVkZGhhIGRlc2NyaWJlZCB0aGlzIGFzICAgdGhpcnN0IG9yIHRhbmhhLiBIZSB0YXVnaHQgdGhhdCB0aGlzIGNvbnN0YW50IGNyYXZpbmcgY291bGQgYmUgcmVtb3ZlZCBieSBmb2xsb3dpbmcgbW9kZXJhdGlvbiBpbiAgIGV2ZXJ5dGhpbmcuIEJ1ZGRoYSBwcmVhY2hlZCBtb2RlcmF0aW9uIHdoaWNoIGlzIGtub3duIGFzIE1hZGh5YW1pa2EgTWFyZyAodGhlIE1pZGRsZSBQYXRoKS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBCdWRkaGEgYmVsaWV2ZWQgdGhhdCBub3RoaW5nIGluIHRoaXMgd29ybGQgd2FzIHBlcm1hbmVudCBhbmQgdGhhdCBldmVyeXRoaW5nICAgd2FzIGluIGNvbnN0YW50IHN0YXRlIG9mIGNoYW5nZS8gZmx1eCAtIEFuaWNoY2hhLiBTbywgaGUgYnkgZXh0ZW5zaW9uIHJlZnVzZWQgdG8gZW5kb3JzZSBjb25jZXB0cyBzdWNoICAgYXMgYW4gZXRlcm5hbCBzb3VsIC0gQXRtYW4gLSB3aGljaCBtb3N0IHBvcHVsYXIgcGhpbG9zb3BoaWVzIG9mIHRoZSBkYXkgY2FsbGVkIHVuY2hhbmdpbmcsIHBlcm1hbmVudCAgIGVzc2VuY2UgdGhhdCBuZXZlciBkaWVzLiAgICBCeSBjb250cmFzdCBKYWluaXNtIGFuZCBIaW5kdWlzbSBiZWxpZXZlZCBpbiB0aGUgY29uY2VwdCBvZiBldGVybmFsIHNvdWwgKEF0bWFuKS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSGUgYmVsaWV2ZWQgdGhhdCB0aGUgcmVzdWx0cyBvZiBvdXIgYWN0aW9ucyAoY2FsbGVkIGthcm1hKSwgd2hldGhlciBnb29kIG9yIGJhZCwgICBhZmZlY3QgdXMgYm90aCBpbiB0aGlzIGxpZmUgYW5kIHRoZSBuZXh0LiAgICBLbm93bGVkZ2UgQmFzZTogICAgIE1haW4gVGVhY2hpbmdzOiAgICAxKSA0IE5vYmxlIFRydXRocyAoQXJpeWEgU2FjaGNoYW5pKSAtIER1a2toYSwgU2FtdWRheWEsIE5pcm9kaGEsIEFzaHRhbmdpa2EgTWFyZyAgICAyKSBIZSBiZWxpZXZlZCB0aGUgdWx0aW1hdGUgZ29hbCB3YXMgYXR0YWlubWVudCBvZiBOaXJ2YW5hLyBOaWJiYW5hIC0gYW4gZXhwZXJpZW5jZSwgbm90IGEgcGxhY2UgbGlrZSAgIGhlYXZlbiwgYW5kIGNvdWxkIGJlIGFjaGlldmVkIHdpdGhpbiB0aGlzIGxpZmUgaXRzZWxmLiAgICAzKSBIZSBiZWxpZXZlZCBpbiBLYXJtYSBhbmQgdHJhbnNtaWdyYXRpb24gYW5kIHJlYmlydGhzLiAgICA0KSBIZSB3YXMgc2lsZW50IG9uIHRoZSBleGlzdGVuY2Ugb2YgR29kLiAgICBTb3VyY2UpIE5DRVJUIENsYXNzIDZ0aCBIaXN0b3J5IE91ciBQYXN0cyBJLCBDaC02OyAgICBBbmNpZW50IEluZGlhIGJ5IFVwaW5kZXIgU2luZ2gsIENoLTYsIFBnIDMwNCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 30,
      "question" : "Who of the following had first deciphered  the edicts of Emperor Ashoka?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgb3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIGFkZGl0aW9uIHRvIGRlY2lwaGVyaW5nIEJyYWhtaSwgUHJpbnNlcCBhbHNvIGRlY2lwaGVyZWQgdGhlICdLaGFyb3N0aGknIHNjcmlwdCwgYW4gYW5jaWVudCBzY3JpcHQgdXNlZCAgIGluIHRoZSBOb3J0aC1XZXN0ZXJuIHJlZ2lvbnMgb2YgSW5kaWEgdG8gd3JpdGUgU2Fuc2tyaXQgYW5kIFByYWtyaXQuIEZvciB0aGlzLCBoZSB1c2VkIHRoZSBjb2lucyBvZiB0aGUgICBJbmRvLUdyZWVrIGtpbmdzIHRoYXQgaGFkIHJ1bGVkIFB1bmphYi4gVGhlc2UgY29pbnMgaGFkIHRoZSBuYW1lcyBvZiB0aGUgcnVsZXJzIHdyaXR0ZW4gaW4gR3JlZWsgb24gb25lICAgc2lkZSBhbmQgaW4gS2hhcm9zdGhpIG9uIHRoZSBvdGhlci4gICBUaGVzZSBlZGljdHMgd2VyZSBkZWNpcGhlcmVkIGJ5IEJyaXRpc2ggYXJjaGFlb2xvZ2lzdCBhbmQgaGlzdG9yaWFuIEphbWVzIFByaW5zZXAgaW4gdGhlIDE5dGggY2VudHVyeS4gICBTb3VyY2UpIFVQU0MgMjAxNiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Georg Bilhler   ",
        "option2" : "James Prinsep   ",
        "option3" : "Max Muller   ",
        "option4" : "William Jones   "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following pairs of  Philosophical systems and their founders:   Philosophical  System    Founder   1. Nyaya   Gotama  2. Vedanta   Vyasa   3.Samkhya   Jaimini   Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjEgICAgICAgIFBhaXIgMSBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogUmlzaGkgR2F1dGFtYSB3YXMgdGhlIGZvdW5kZXIgb2YgdGhlIHN5c3RlbSBvZiBvcnRob2RveCBwaGlsb3NvcGh5IGtub3duICAgYXMgTnlheWEuIFRoaXMgc2Nob29sIGJlbGlldmVkIGluIHZhbGlkIGtub3dsZWRnZSBiZWluZyBkZWZpbmVkIGFzIHJlYWwga25vd2xlZGdlLiBJdCB3YXMgZGVmaW5lZCBhcyBhICAgdGVjaG5pcXVlIG9mIGxvZ2ljYWwgdGhpbmtpbmcuICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBWZWRhbnRhLCBhbHNvIGNhbGxlZCBVdHRhcmEgTWltYW5zYSwgd2FzIGEgc3lzdGVtIG9mIG9ydGhvZG94IHBoaWxvc29waHkgICBmb3VuZGVkIGJ5IFJpc2hpIFZ5YXMuIEFjY29yZGluZyB0byBWZWRhbnRhIHBoaWxvc29waHksICdCcmFobWFuIGlzIHRydWUsIHRoZSB3b3JsZCBpcyBmYWxzZSBhbmQgc2VsZiBhbmQgICBCcmFobWFuIGFyZSBub3QgZGlmZmVyZW50Jy4gSXQgYWxzbyBiZWxpZXZlcyB0aGF0IHRoZSBwYXRoIHRvIHNhbHZhdGlvbiBpcyB0aHJvdWdoIHRydWUga25vd2xlZGdlICAgKEpuYW5hbWFyZykgYW5kIG5vdCByaXR1YWxzIGFsb25lLiAgICBQYWlyIDMgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZDogS2FwaWxhIHdhcyB0aGUgZm91bmRlciBvZiBTYW1raHlhIHBoaWxvc29waHkuIFRoZSBTYW1raHlhIHBoaWxvc29waHkgICBob2xkcyB0aGF0IHJlYWxpdHkgaXMgY29uc3RpdHV0ZWQgb2YgdHdvIHByaW5jaXBsZXMgb25lIGZlbWFsZSBhbmQgdGhlIG90aGVyIG1hbGUgaS5lLiBQcmFrcml0aSwgUHVydXNoYSAgIHJlc3BlY3RpdmVseS4gUHJha3JpdGkgYW5kIFB1cnVzaGEgYXJlIGNvbXBsZXRlbHkgaW5kZXBlbmRlbnQgYW5kIGFic29sdXRlLiBBY2NvcmRpbmcgdG8gdGhpcyBzeXN0ZW0sICAgVGhlIFNhbWtoeWEgcGhpbG9zb3BoeSB0cmllcyB0byBlc3RhYmxpc2ggc29tZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBQdXJ1c2hhIGFuZCBQcmFrcml0aSBmb3IgZXhwbGFpbmluZyAgIHRoZSBjcmVhdGlvbiBvZiB0aGUgdW5pdmVyc2UuICAgS25vd2xlZGdlIEJhc2U6ICAgICAxKSBUaGVyZSB3YXMgYSBwcm9saWZlcmF0aW9uIGluIHRoZSBzeXN0ZW1zIG9mIHBvcHVsYXIgcGhpbG9zb3BoaWVzIGF0IHRoZSBlbmQgb2YgdGhlIExhdGVyIFZlZGljIHBlcmlvZC4gICBUaGV5IHdlcmUgY2xhc3NpZmllZCBpbnRvIDIgbWFpbiBjYXRlZ29yaWVzOiAgICAyKSBPcnRob2RveDogQmVsaWV2ZWQgaW4gdGhlIGV4aXN0ZW5jZSBvZiBHb2QgYW5kIGFjY2VwdGVkIHRoZSBhdXRob3JpdHkgb2YgdGhlIFZlZGFzLiBIYWQgbmV3IGlkZWFzICAgcmVnYXJkaW5nIGNvbmNlcHRzIHN1Y2ggYXMgbW9rc2hhLCBsaWJlcmF0aW9uLCBrYXJtYSBldGMuIFNhbWtoeWEsIFlvZ2EsIE55YXlhLCBWYWlzaGVzaGlrYSwgUHVydmEgICBhbmQgVXR0YXJhIE1pbWFuc2Egd2VyZSBpdHMgdmFyaW91cyBzY2hvb2xzLiAgICAzKSBIZXRlcm9kb3g6IERpZG4ndCBiZWxpZXZlIGluIHRoZSBleGlzdGVuY2Ugb2YgR29kLCBkaWRuJ3QgYWNjZXB0IHRoZSB2YWxpZGl0eSBvZiB0aGUgVmVkYXMuIEJ1ZGRoaXNtLCAgIEphaW5pc20sIENoYXJ2YWthIGV0Yy4gd2VyZSBpdHMgdmFyaW91cyBzY2hvb2xzLiAgICBTb3VyY2UpIE5DRVJUIENsYXNzIDZ0aCBIaXN0b3J5LCBPdXIgUGFzdHMgSSwgQ2gtNjsgICAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TZWNJQ0hDb3VyL0VuZ2xpc2gvQ0guMDgucGRmICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements with  reference to Samantas in the medieval Indian  history:  1. They were expected to bring gifts for their  overlords but did not provide any military  support.   2. They were subordinate to the Central  authority.   3. Harsha eliminated the influence of  Samantas.   4. The land grants to officials could have led to  the rise of Samantas  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gU2FtYW50YXMgd2VyZSBzZW1pLWluZGVwZW5kZW50IHJ1bGVycyB3aG8gcnVsZWQgYXMgc3Vib3JkaW5hdGVzIHRvIHRoZSAgIGNlbnRyYWwgYXV0aG9yaXR5LiBUaGUgU2FtYW50YXMgd2VyZSBleHBlY3RlZCB0byBicmluZyBnaWZ0cyBmb3IgdGhlaXIga2luZ3Mgb3Igb3ZlcmxvcmRzLCBiZSBwcmVzZW50IGF0ICAgdGhlaXIgY291cnRzIGFuZCBwcm92aWRlIHRoZW0gd2l0aCBtaWxpdGFyeSBzdXBwb3J0LiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQnkgdGhlIHNldmVudGggY2VudHVyeSB0aGVyZSB3ZXJlIGJpZyBsYW5kbG9yZHMgb3Igd2FycmlvciBjaGllZnMgaW4gZGlmZmVyZW50ICAgcmVnaW9ucyBvZiB0aGUgc3ViY29udGluZW50LiBFeGlzdGluZyBraW5ncyBvZnRlbiBhY2tub3dsZWRnZWQgdGhlbSBhcyB0aGVpciBzdWJvcmRpbmF0ZXMgb3Igc2FtYW50YXMuICAgU2FtYW50YSdzIHdlcmUgbWlub3IgcnVsZXJzLCB3aG8gcnVsZWQgYXMgc3Vib3JkaW5hdGVzIHRvIHRoZSBjZW50cmFsIGF1dGhvcml0eS4gSG93ZXZlciwgYXMgc2FtYW50YXMgICBnYWluZWQgcG93ZXIgYW5kIHdlYWx0aCwgdGhleSBkZWNsYXJlZCB0aGVtc2VsdmVzIHRvIGJlIG1haGEtc2FtYW50YSwgbWFoYS1tYW5kYWxlc2h2YXJhICh0aGUgZ3JlYXQgICBsb3JkIG9mIGEgJ2NpcmNsZScgb3IgcmVnaW9uKSBhbmQgc28gb24uIFNvbWV0aW1lcyB0aGV5IGFzc2VydGVkIHRoZWlyIGluZGVwZW5kZW5jZSBmcm9tIHRoZWlyIG92ZXJsb3Jkcy4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBEdXJpbmcgdGhlIHJlaWduIG9mIEtpbmcgSGFyc2hhLCBoZSB3YXMgYXNzaXN0ZWQgaW4gaGlzIGFkbWluaXN0cmF0aW9uIGJ5IGEgICBjb3VuY2lsIG9mIG1pbmlzdGVycy4gSW4gaGlzIGNvdW5jaWwgd2VyZSBpbmNsdWRlZCBmZXVkYXRvcmllcywgc2FtYW50YXMsIHByaW5jZXMgYW5kIGhpZ2ggb2ZmaWNpYWxzLiBUaGUgICBwb3dlciBvZiBTYW1hbnRhcyB3YXMgbm90IGN1cnRhaWxlZC4gVGhvdWdoIGhlIHN1YmR1ZWQgdGhlIGZldWRhbCBlbGVtZW50cywgaGUgZGlkIG5vdCBlbGltaW5hdGVkICAgdGhlbSwgd2hpY2ggbGVkIHRvIHJpc2Ugb2YgZmV1ZGFsaXNtIHRvIGEgbGFyZ2UgZXh0ZW50IGFmdGVyIGhpcyBkZWF0aC4gICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gQW5vdGhlciBmYWN0b3Igd2hpY2ggcmVhbGx5IGludHJvZHVjZWQgZmVhdHVyZXMgb2YgYSBkZWNlbnRyYWxpemVkIHBvbGl0eSB3YXMgdGhlICAgZ3JhbnRpbmcgb2YgbGFuZCB0byBwcmllc3RzIGFuZCBvZmZpY2lhbHMgZm9yIHRoZWlyIG1haW50ZW5hbmNlLiBHZW5lcmFsbHksIHRoZSBLaW5nIG5vdCBvbmx5IGdhdmUgdGhlIGxhbmQgICBidXQgYWxzbyBwYXJ0ZWQgd2l0aCBzb21lIG9mIGhpcyBhZG1pbmlzdHJhdGl2ZSByaWdodHMgbGlrZSB0YXhpbmcgdGhlIHBlb3BsZSwgcHVuaXNoaW5nIHRoZSBjcmltaW5hbHMsIGV0Yy4gICBUaGUgZ3JhbnRlZCB0ZXJyaXRvcmllcyB3ZXJlIGFsc28gZ2l2ZW4gaW1tdW5pdHkgZnJvbSB0aGUgZW50cnkgb2YgdGhlIEtpbmcncyBhcm15LiBOYXR1cmFsbHksIHRoZSAgIGdyYW50ZWVzIG9mIHN1Y2ggbGFuZHMgYmVjYW1lIGFsbW9zdCBpbmRlcGVuZGVudCBvZiB0aGUgS2luZyBhbmQgYmVjYW1lIHNhbWFudGFzIHRoZW1zZWx2ZXMuIFRodXMsICAgdGhlIGdyYW50aW5nIG9mIGxhbmQgdG8gb2ZmaWNpYWxzIGZvciB0aGVpciBtYWludGVuYW5jZSBjb3VsZCBoYXZlIGxlZCB0byB0aGUgcmlzZSBvZiBzYW1hbnRhcy4gICAgU291cmNlOiBOQ0VSVCBPdXIgUGFzdHMgUGFydC1JSSBDbGFzcyBWSUkgQ2gtMiBOZXcgS2luZ3MgYW5kIEtpbmdkb21zICAgIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMjE5OTIvMS9Vbml0LTUucGRmICAgICAgb2YgMjEgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1,3 and 4 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1,2, 3 and 4   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements  regarding various social institutions of ancient  India  1.  Dharmasutras and Dharmashastras  recognized six forms of marriage.  2.  Marriage of daughters outside the kin was  considered desirable.  3.  Kanyadan was considered an important  religious duty of the father.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBEaGFybWFzdXRyYXMgYW5kIERoYXJtYXNoYXN0cmFzIHJlY29nbmlzZWQgcmVjb2duaXplZCA4IGZvcm1zIG9mIG1hcnJpYWdlLiAgIFRoZXkgYXJlIEJyYWhtYSwgRGFpdmEsIEFyc2hhLCBQcmFqYXBhdHlhLCBBc3VyYSwgR2FuZGhhcnZhLCBSYWtzaGFzYSwgUGFpc2hhY2hhLiBUaGlzIG9yZGVyIG9mIGZvcm1zIG9mICAgbWFycmlhZ2UgaXMgaGllcmFyY2hpY2FsLiAgICBBbGwgd2VyZSBub3QgY29uc2lkZXJlZCBnb29kLiBPZiB0aGVzZSwgdGhlIGZpcnN0IGZvdXIgd2VyZSBjb25zaWRlcmVkIGFzICdnb29kJyB3aGlsZSB0aGUgcmVtYWluaW5nICAgd2VyZSBjb25kZW1uZWQuIEl0IGlzIHBvc3NpYmxlIHRoYXQgdGhlc2Ugd2VyZSBwcmFjdGlzZWQgYnkgdGhvc2Ugd2hvIGRpZCBub3QgYWNjZXB0IEJyYWhtYW5pY2FsICAgbm9ybXMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE1hcnJ5aW5nIHdvbWVuIGludG8gZmFtaWxpZXMgb3V0c2lkZSB0aGUga2luIHdhcyBjb25zaWRlcmVkIGRlc2lyYWJsZS4gICBNYXJyaWFnZSBvdXRzaWRlIHRoZSBraW4gaXMgY2FsbGVkIGV4b2dhbXkuIEl0IG1lYW50IHRoYXQgdGhlIGxpdmVzIG9mIHlvdW5nIGdpcmxzIGFuZCB3b21lbiBiZWxvbmdpbmcgICB0byBmYW1pbGllcyB0aGF0IGNsYWltZWQgaGlnaCBzdGF0dXMgd2VyZSBvZnRlbiBjYXJlZnVsbHkgcmVndWxhdGVkIHRvIGVuc3VyZSB0aGF0IHRoZXkgd2VyZSBtYXJyaWVkIGF0IHRoZSAgICdyaWdodCcgdGltZSBhbmQgdG8gdGhlICdyaWdodCcgcGVyc29uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIE1hcnJ5aW5nIHRoZSBkYXVnaHRlcnMgYXQgdGhlIHJpZ2h0IHRpbWUgYW5kIHdpdGggdGhlIHJpZ2h0IHBlcnNvbiBnYXZlIHJpc2UgdG8gICB0aGUgYmVsaWVmIHRoYXQga2FueWFkYW5hIG9yIHRoZSBnaWZ0IG9mIGEgZGF1Z2h0ZXIgaW4gbWFycmlhZ2Ugd2FzIGFuIGltcG9ydGFudCByZWxpZ2lvdXMgZHV0eSBvZiB0aGUgICBmYXRoZXIuICAgU291cmNlOiBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJIGNoYXB0ZXItMyBraW5zaGlwLCBjYXN0ZSBhbmQgY2xhc3MgcGFnZS01NywgNTggICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3      .         "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements  regarding Buddhist Sanghas.  1.  Women were not allowed to join the  Sanghas.  2.  Slaves and labourers were allowed to enter  Sanghas.  3.  Decisions within Sangha were taken by  consensus and voting.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gV29tZW4gd2VyZSBhbGxvd2VkIHRvIEpvaW4gU2FuZ2hhcy4gV29tZW4gaGFkIHRvIHRha2UgdGhlaXIgaHVzYmFuZHMnICAgcGVybWlzc2lvbi4gTWFoYXBhamFwYXRpIEdvdGFtaSwgQnVkZGhhJ3MgZm9zdGVyIG1vdGhlciB3YXMgdGhlIGZpcnN0IHdvbWFuIHRvIGJlIG9yZGFpbmVkIGFzIGEgICBiaGlra2h1bmkuICAgUHJhamFwYXRpIEdhdXRhbWkgcmVxdWVzdGVkIHRoZSBCdWRkaGEgdG8gc3RhcnQgdGhlIG9yZGVyIG9mIG51bnMuIFNoZSBsZWQgdGhlIGdyb3VwIG9mIDUwMCBTYWt5YSAgIHdvbWVuLCBhbmQgdGhleSB3b3JlIHJvYmVzIGFuZCBzaGF2ZWQgdGhlaXIgaGVhZHMgYW5kIHdvcmtlcnMgYWNjZXB0ZWQgaW50byB0aGUgU2FuZ2hhLiAgIFRoaXMgd2FzIGEgbGVnYWwsIGN1bHR1cmFsIGFuZCBtb3JhbGx5IGFjY2VwdGVkIHdheSBmb3Igd29tZW4gdG8gZW50ZXIgU2FuZ2hhICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhvc2Ugd2hvIGpvaW5lZCB0aGUgc2FuZ2hhIGluY2x1ZGVkIGJyYWhtaW5zLCBzaGF0cml5YXMsIG1lcmNoYW50cywgbGFib3VyZXJzLCAgIGJhcmJlcnMsIGNvdXJ0ZXNhbnMgYW5kIHNsYXZlcy4gTWFueSBvZiB0aGVtIHdyb3RlIGRvd24gdGhlIHRlYWNoaW5ncyBvZiB0aGUgQnVkZGhhLiBTb21lIG9mIHRoZW0gICBhbHNvIGNvbXBvc2VkIGJlYXV0aWZ1bCBwb2VtcywgZGVzY3JpYmluZyB0aGVpciBsaWZlIGluIHRoZSBzYW5naGEuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQWxsIHdlcmUgcmVnYXJkZWQgYXMgZXF1YWwgd2l0aGluIHRoZSBzYW5naGEuIFRoZSBpbnRlcm5hbCBmdW5jdGlvbmluZyBvZiB0aGUgICBzYW5naGEgd2FzIGJhc2VkIG9uIHRoZSB0cmFkaXRpb25zIG9mIGdhbmFzIGFuZCBzYW5naGFzLCB3aGVyZSBjb25zZW5zdXMgd2FzIGFycml2ZWQgYXQgdGhyb3VnaCAgIGRpc2N1c3Npb25zLiBJZiB0aGF0IGZhaWxlZCwgZGVjaXNpb25zIHdlcmUgdGFrZW4gYnkgYSB2b3RlIG9uIHRoZSBzdWJqZWN0LiAgIFNvdXJjZTogVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSSBjaGFwdGVyLTQgVGhpbmtlcnMsIGJlbGllZnMgYW5kIGJ1aWxkaW5ncyBwYWdlLTkyICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 35,
      "question" : "With reference to the economic history of  medieval India, the term 'Araghatta' refers to  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgb3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQXJhZ2hhdHRhIGlzIGEgUGVyc2lvbiB3aGVlbCB1c2VkIGluIHRoZSBpcnJpZ2F0aW9uLCBpdCBpcyB1c3VhbGx5IGVtcGxveWVkIHRvIGxpZnQgd2F0ZXIgZnJvbSBvcGVuIHdlbGxzICAgU291cmNlKSBVUFNDIDIwMTYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "bonded labour  ",
        "option2" : "land grants made to military officers  ",
        "option3" : "waterwheel used in the irrigation of land  ",
        "option4" : "waste land converted to cultivated land   "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to Zamindar's role in  agrarian society during the Mughal period,  which one of the following statements is  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogWmFtaW5kYXJzIGNvbGxlY3RlZCByZXZlbnVlIG9uIGJlaGFsZiBvZiB0aGUgc3RhdGUsIGEgc2VydmljZSBmb3Igd2hpY2ggdGhleSB3ZXJlICAgY29tcGVuc2F0ZWQgZmluYW5jaWFsbHkuIFRoZXkgYWxzbyBoYWQgbWlsaXRhcnkgcmVzb3VyY2VzLiBNb3N0IHphbWluZGFycyBoYWQgZm9ydHJlc3NlcyAocWlsYWNoYXMpIGFzICAgd2VsbCBhcyBhbiBhcm1lZCBjb250aW5nZW50IGNvbXByaXNpbmcgdW5pdHMgb2YgY2F2YWxyeSwgYXJ0aWxsZXJ5IGFuZCBpbmZhbnRyeS4gICAgICBvZiAyMSAgICAgICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0OiBUaGVyZSB3YXMgY29uc29saWRhdGlvbiBvZiBuZXcgbGFuZHMgZHVyaW5nIHRoaXMgcGVyaW9kLCBieSB0cmFuc2ZlciBvZiByaWdodHMsIGJ5ICAgb3JkZXIgb2YgdGhlIHN0YXRlIGFuZCBieSBwdXJjaGFzZS4gVGhlc2Ugd2VyZSB0aGUgcHJvY2Vzc2VzIHdoaWNoIHBlcmhhcHMgcGVybWl0dGVkIHBlb3BsZSBiZWxvbmdpbmcgICB0byB0aGUgcmVsYXRpdmVseSAnbG93ZXInIGNhc3RlcyB0byBlbnRlciB0aGUgcmFuayBvZiB6YW1pbmRhcnMgYXMgemFtaW5kYXJpcyB3ZXJlIGJvdWdodCBhbmQgc29sZCBxdWl0ZSAgIGJyaXNrbHkgaW4gdGhpcyBwZXJpb2QuICAgICBPcHRpb24gYyBpcyBjb3JyZWN0OiBUaGVyZSBpcyBldmlkZW5jZSB0byBzaG93IHRoYXQgemFtaW5kYXJzIG9mdGVuIGVzdGFibGlzaGVkIG1hcmtldHMgKGhhYXRzKSB0byB3aGljaCAgIHBlYXNhbnRzIGFsc28gY2FtZSB0byBzZWxsIHRoZWlyIHByb2R1Y2UuICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBaYW1pbmRhcnMgc3BlYXJoZWFkZWQgdGhlIGNvbG9uaXNhdGlvbiBvZiBhZ3JpY3VsdHVyYWwgbGFuZC4gdGhleSBhbHNvIGhlbHBlZCBpbiAgIHNldHRsaW5nIGN1bHRpdmF0b3JzIGJ5IHByb3ZpZGluZyB0aGVtIHdpdGggdGhlIG1lYW5zIG9mIGN1bHRpdmF0aW9uLiBUaGUgYnV5aW5nIGFuZCBzZWxsaW5nIG9mIHphbWluZGFyaXMgICBhY2NlbGVyYXRlZCB0aGUgcHJvY2VzcyBvZiBtb25ldGlzYXRpb24gaW4gdGhlIGNvdW50cnlzaWRlICAgIFNvdXJjZSkgTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUkgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They could collect revenue but had no   control over military resources.    ",
        "option2" : " They belonged only to upper castes.   ",
        "option3" : " They had established haats to which   peasants came to sell their produce.  ",
        "option4" : " They helped in the prevention of the   colonisation of agricultural land.   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following pairs with  reference to the types of land and their  description in the Chola period :   Type of land Description  1. Vellanvagai land of non-Brahmana  peasant proprietors  2. Pallichchhandam land donated to  Brahmana institutions  3.Shalabhoga land for the  maintenance of a  school  Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB2YXJpb3VzIENob2xhIEluc2NyaXB0aW9ucyBtZW50aW9uIHNldmVyYWwgY2F0ZWdvcmllcyBvZiBsYW5kLiAgICBUeXBlIG9mIGxhbmQgLSBEZXNjcmlwdGlvbiAgICBWZWxsYW52YWdhaSAtIGxhbmQgb2Ygbm9uLUJyYWhtYW5hIHBlYXNhbnQgcHJvcHJpZXRvcnMuIChQYWlyIDEgaXMgY29ycmVjdCkgICAgUGFsbGljaGNoaGFuZGFtIC0gbGFuZCBkb25hdGVkIHRvIEphaW5hIGluc3RpdHV0aW9ucy4gKFBhaXIgMiBpcyBpbmNvcnJlY3QpICAgIFNoYWxhYmhvZ2EgLSBsYW5kIGZvciB0aGUgbWFpbnRlbmFuY2Ugb2YgYSBzY2hvb2wuIChQYWlyIDMgaXMgY29ycmVjdCkgICAgQnJhaG1hZGV5YSAtIGxhbmQgZ2lmdGVkIHRvIHRoZSBCcmFobWFuYXMuICAgICBEZXZhZGFuYSBvciB0aXJ1bmFtYXR0dWtrYW5pIC0gbGFuZCBnaWZ0ZWQgdG8gdGVtcGxlcy4gICAgU291cmNlOiBOQ0VSVCBPdXIgUGFzdHMgUGFydC1JSSBDbGFzcyBWSUkgQ2gtMiBOZXcgS2luZ3MgYW5kIEtpbmdkb21zICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following was/were the  reasons for the commissioning of chronicles by  the Mughals?   1.  To convey to those who resisted the rule of  Mughals that all resistance was destined to  fail.   2.  To glorify the Mughal rulers   3.  To ensure that there was an account of their  rule for posterity   3.  To project an enlightened vision of the  kingdom.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEsIDIgLDMgYW5kIDQgYXJlIGNvcnJlY3Q6IENocm9uaWNsZXMgYXJlIHRoZSBpbXBvcnRhbnQgc291cmNlIHRvIHN0dWR5IHRoZSBNdWdoYWwgZW1waXJlIGFuZCAgIGl0cyBjb3VydC4gVGhlc2UgY2hyb25pY2xlcyB3ZXJlIGNvbW1pc3Npb25lZDogICAgMSkgdG8gcHJvamVjdCBhIHZpc2lvbiBvZiBhbiBlbmxpZ2h0ZW5lZCBraW5nZG9tIHRvIGFsbCB0aG9zZSB3aG8gY2FtZSB1bmRlciBpdHMgdW1icmVsbGEuICAgIDIpIHRvIGNvbnZleSB0byB0aG9zZSB3aG8gcmVzaXN0ZWQgdGhlIHJ1bGUgb2YgdGhlIE11Z2hhbHMgdGhhdCBhbGwgcmVzaXN0YW5jZSB3YXMgZGVzdGluZWQgdG8gZmFpbC4gICAgMykgdG8gZW5zdXJlIHRoYXQgdGhlcmUgd2FzIGFuIGFjY291bnQgb2YgdGhlaXIgcnVsZSBmb3IgcG9zdGVyaXR5LiAgICA0KSBUaGVzZSBjaHJvbmljbGVzIHdlcmUgZm9jdXNlZCBvbiBldmVudHMgY2VudHJlZCBvbiB0aGUgcnVsZXIsIGhpcyBmYW1pbHksIHRoZSBjb3VydCBhbmQgbm9ibGVzLCB3YXJzICAgYW5kIGFkbWluaXN0cmF0aXZlIGFycmFuZ2VtZW50cy4gICAgS25vd2xlZGdlIEJhc2U6IFRoZSB0aXRsZXMgb2YgY2hyb25pY2xlcywgc3VjaCBhcyB0aGUgQWtiYXIgTmFtYSwgU2hhaGphaGFuIE5hbWEsIEFsYW1naXIgTmFtYSwgdGhhdCAgIGlzLCB0aGUgc3Rvcnkgb2YgQWtiYXIsIFNoYWggSmFoYW4gYW5kIEFsYW1naXIgKGEgdGl0bGUgb2YgdGhlIE11Z2hhbCBydWxlciBBdXJhbmd6ZWIpLCBzdWdnZXN0IHRoYXQgaW4gdGhlICAgZXllcyBvZiB0aGVpciBhdXRob3JzIHRoZSBoaXN0b3J5IG9mIHRoZSBlbXBpcmUgYW5kIHRoZSBjb3VydCB3YXMgc3lub255bW91cyB3aXRoIHRoYXQgb2YgdGhlIGVtcGVyb3IuICAgIFNvdXJjZSkgTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUkgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following ancient texts:   1. Panch siddhantika  2. Abhidhamma Pitaka  3. Uttaradhyayana Sutta  4. Therigatha  Which of the options given above is/are  Buddhist text?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gUGFuY2ggc2lkZGhhbnRpa2EgaXMgd3JpdHRlbiBieSBWYXJhaGFtaWhpcmEuIFRoaXMgYm9vayBoYWQgYSBkZXRhaWxlZCBkZXNjcmlwdGlvbiAgIG9mIHBsYW5ldCBNYXJzLiBIZSBhbHNvIHdyb3RlIGluIGhpcyBib29rIHRoYXQgcGxhbmV0IE1hcnMgaGFzIGJvdGggd2F0ZXIgYW5kIGlyb24gcHJlc2VudCBvbiBpdHMgICBzdXJmYWNlLiBJdCBpcyBub3QgYSBidWRkaGlzdCB0ZXh0LiAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIFJ1bGVzIGFuZCByZWd1bGF0aW9ucyBmb3Igam9pbmluZyBTYW5naGEgYXJlIGRlc2NyaWJlZCBpbiBWaW5heWEgcGl0YWthLiAgIEFiaGlkaGFtbWEgUGl0YWthIGRlYWx0IHdpdGggcGhpbG9zb3BoaWNhbCBtYXR0ZXJzLCBldGhpY3MsIFBzeWNob2xvZ3kgYW5kIHBoaWxvc29waHkuIFVubGlrZSAgICAgb2YgMjEgICAgICAgIFN1dHRhcGl0dGFrYSBhbmQgVmluYXlhcGl0dGFrYS4gQWJoaWRoYW1tYSBwaXR0YWthIGFyZSBjbGFpbWVkIHRvIHJlcHJlc2VudCBub3QganVzdCB3b3JkcyBvZiBCdWRkaGEgICBidXQgYWxzbyBvZiBkaXNjaXBsZXMgYW5kIGdyZWF0IHNjaG9sYXJzLiAgICAgT3B0aW9uIDMgaXMgaW5jb3JyZWN0LiBVdHRhcmFkaHlheWFuYSBTdXR0YSBpcyBhIHByYWtyaXQgdGV4dCBvbiBKYWluaXNtLiBJdCBjb250YWlucyB0ZWFjaGluZ3Mgb2YgICBNYWhhdmlyYS4gICAgIE9wdGlvbiA0IGlzIGNvcnJlY3QuIFRoZXJpZ2F0aGEgaXMgYSBCdWRkaGlzdCB0ZXh0IGFuZCBpcyBhIHBhcnQgb2YgdGhlIFN1dHRhIFBpdGFrYS4gSXQgaXMgYSBjb2xsZWN0aW9uIG9mICAgdmVyc2VzIGNvbXBvc2VkIGJ5IGJoaWtraHVuaXMuIEl0IHByb3ZpZGVzIGFuIGluc2lnaHQgaW50byB3b21lbidzIHNvY2lhbCBhbmQgc3Bpcml0dWFsIGV4cGVyaWVuY2VzICAgIFNvdXJjZSkgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSSBjaGFwdGVyLTQgVGhpbmtlcnMsIGJlbGllZnMgYW5kIGJ1aWxkaW5ncyBwYWdlLTg2LCA4OCwgOTMgICAgaHR0cHM6Ly93d3cuc3BlYWtpbmd0cmVlLmluL2FsbHNsaWRlcy92YXJhaGFtaWhpcmFzLXByZWRpY3Rpb24tYWJvdXQtd2F0ZXItb24tbWFycy1jb21lcy10cnVlLSAgYWZ0ZXItMTUwMC15ZWFycyAgICAgIFEuNDAgICBFeHApIG9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBBY2NvcmRpbmcgdG8gdGhlIEphaW4gZG9jdHJpbmUsIHRoZSB1bml2ZXJzZSBhbmQgaXRzIGNvbnN0aXR1ZW50cyAoc291bCwgbWF0dGVyLCBzcGFjZSwgdGltZSwgYW5kIG1vdGlvbikgICBoYXZlIGFsd2F5cyBleGlzdGVkLiBBbGwgdGhlIGNvbnN0aXR1ZW50cyBhbmQgYWN0aW9ucyBhcmUgZ292ZXJuZWQgYnkgdW5pdmVyc2FsIG5hdHVyYWwgbGF3cy4gICBTb3VyY2UpIFVQU0MgMjAxMSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2 and 4 only    "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following items:   1. Textiles  2. Gold  3. Ivory  4. Potato  5. Nutmeg  6. Chinese blue pottery   Which of the items given above were traded  from India during the medieval period before  the advent of the Europeans?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBjIGlzIGNvcnJlY3QuIER1cmluZyBtZWRpZXZhbCBwZXJpb2QgdHJhZGUgZmxvdXJpc2hlZCBpbiBJbmRpYSBkdWUgdG8gb3BlbmluZyBvZiBwb3J0cy4gVHJhZGVycyAgIHNvbGQgdGV4dGlsZXMgYW5kIHNwaWNlcyBpbiB0aGVzZSBwb3J0cyBhbmQsIGluIGV4Y2hhbmdlLCBicm91Z2h0IGdvbGQgYW5kIGl2b3J5IGZyb20gQWZyaWNhOyBhbmQgc3BpY2VzLCAgIHRpbiwgQ2hpbmVzZSBibHVlIHBvdHRlcnkgYW5kIHNpbHZlciBmcm9tIFNvdXRoZWFzdCBBc2lhIGFuZCBDaGluYS4gU3BpY2VzIGdyb3duIGluIHRyb3BpY2FsIGNsaW1hdGVzICAgKHBlcHBlciwgY2lubmFtb24sIG51dG1lZywgZHJpZWQgZ2luZ2VyLCBldGMuKSBiZWNhbWUgYW4gaW1wb3J0YW50IHBhcnQgb2YgZXhwb3J0IHRvIEV1cm9wZWFuICAgY291bnRyaWVzLiAgICBPcHRpb24gYSwgYiBhbmQgZCBhcmUgaW5jb3JyZWN0LiBQb3RhdG8gYXJlIGluZGlnZW5vdXMgcGxhbnRzIG9mIHRoZSBTb3V0aCBBbWVyaWNhIGFuZCB0aGUgQW5kZXMgICBtb3VudGFpbnMuIFBvdGF0byB3YXMgaW50cm9kdWNlZCB0byBJbmRpYSBieSB0aGUgZWFybHkgUG9ydHVndWVzZSBhbmQgRHV0Y2ggdHJhZGVycyBhbG9uZyB0aGUgICBNYWxhYmFyIGNvYXN0bGluZSBpbiB0aGUgZWFybHkgc2V2ZW50ZWVudGggY2VudHVyeS4gICAgU291cmNlKSBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9nZXNzMT02LTEwICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 6 only   ",
        "option2" : "1, 4 and 5 only   ",
        "option3" : "1, 2, 3, 5 and 6 only   ",
        "option4" : "1, 2, 3, 4, 5 and 6   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the Chhau dance,  which of the following statements is/are  correct?   1.  The Masks in Chhau dance are made of  potters clay.   2.  Masks are not worn in Seraikella Chhau.   3.  Only the lead artists wear masks in Chhau  dance.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE1hc2tzIGFyZSBub3QgbWFkZSBvZiB3b29kLCBidXQgb2YgcG90dGVycyBjbGF5IG92ZXIgd2hpY2ggbGF5ZXJzIG9mIG11c2xpbiBhcmUgICBwYXN0ZWQuIEl0IGlzIHRoZW4gZm9sbG93ZWQgYnkgcGFwZXIgKGthZ2F6IGNoaXRhbm8pLiBEaWZmZXJlbnQgZmVhdHVyZXMgb2YgdGhlIG1hc2sgYXJlIHBvbGlzaGVkIGxpa2UgdGhlICAgbm9zZSwgZXllcywgZWFycywgY2hpbiwgYW5kIGxpcHMgYnkgdXNpbmcgdGhlIHdvb2RlbiBjaGlzZWwuIE9uY2UgaXQgaXMgZHJpZWQgaXQgaXMgcGFpbnRlZCBpbiBwYXN0ZWwgY29sb3VycyAgIChrYWhpaiBsZXBhKS4gVGhlbiB0aGUgbWFzayBpcyBzZXBhcmF0ZWQgZnJvbSB0aGUgY2xheSBtb2RlbCBhbmQgZnVsbHkgZHJpZWQgaW4gdGhlIHN1bi4gRmluYWxseSwgdGhlIG1hc2sgaXMgICB3b3JuIHdpdGggYSBoaWdobHkgZGVjb3JhdGVkIGhlYWQtZHJlc3Mgb2YgdGluc2VsLCBwZWFybHMsIGNvbG91cmVkIHBhcGVyIGFuZCBhcnRpZmljaWFsIGZsb3dlcnMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIG1hc2tzIGRlcGVuZCB1cG9uIG9uIHRoZSBzdHlsZSBvZiBDaGhhdSBwcmFjdGlzZWQgbGlrZSBTZXJhaWtlbGxhIENoaGF1LCAgIFB1cnVsaWEgQ2hoYXUgb3IgTWF5dXJiaGFuaiBDaGhhdS4gIFNlcmFpa2VsYSBhbmQgUHVydWxpYSBzdWJnZW5yZXMgb2YgQ2hoYXUgdXNlIG1hc2tzIGR1cmluZyB0aGUgICBkYW5jZSwgdGhlIE1heXVyYmhhbmogQ2hoYXUgdXNlcyBubyBtYXNrcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEluIENoaGF1IGRhbmNlIGFsbCB0aGUgZGFuY2VycyB3ZWFyIG1hc2tzLCBub3QganVzdCB0aGUgbGVhZCBhcnRpc3RzLiAgICBTb3VyY2UpIE5DRVJUIExpdmluZyBjcmFmdHMgdHJhZGl0aW9uIGNsYXNzLVhJIENoYXB0ZXItMTAgdGhlYXRyZXMgY3JhZnRzIHBhZ2UtMTE0ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to the Ahom kingdom,  consider the following statements:   1. The forced labor was known as Paiks.   2. Ahom society was divided into khels.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjEgICAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBBaG9tcyBtaWdyYXRlZCB0byB0aGUgQnJhaG1hcHV0cmEgdmFsbGV5IGZyb20gcHJlc2VudC1kYXkgTXlhbm1hciBpbiB0aGUgICB0aGlydGVlbnRoIGNlbnR1cnkuIFRoZSBBaG9tIHN0YXRlIHdhcyBsYXJnZWx5IGRlcGVuZGVkIHVwb24gZm9yY2VkIGxhYm91ci4gVGhvc2UgZm9yY2VkIHRvIHdvcmsgZm9yICAgdGhlIHN0YXRlIHdlcmUgY2FsbGVkIHBhaWtzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBaG9tIHNvY2lldHkgd2FzIGRpdmlkZWQgaW50byBjbGFucyBvciBraGVscy4gQSBraGVsIG9mdGVuIGNvbnRyb2xsZWQgc2V2ZXJhbCAgIHZpbGxhZ2VzLiBQZWFzYW50cyBoYWQgcmlnaHQgb24gdGhlIGxhbmQgb24gd2hpY2ggdGhleSBjdWx0aXZhdGVkLiBUaGUgcGVhc2FudCB3YXMgZ2l2ZW4gbGFuZCBieSBoaXMgICB2aWxsYWdlIGNvbW11bml0eS4gRXZlbiB0aGUga2luZyBjb3VsZCBub3QgdGFrZSBpdCBhd2F5IHdpdGhvdXQgdGhlIGNvbW11bml0eSdzIGNvbnNlbnQuICAgICBTb3VyY2UpIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2dlc3MxPTctMTAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements in  reference to the 'Arretine ware':  1.  Arretine ware refers to stamped red-glazed  pottery   2.  It has been named after a city in Italy.   3.  Its evidence has been found at Arikamedu,  Puducherry  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQXJyZXRpbmUgd2FyZSByZWZlcnMgdG8gc3RhbXBlZCByZWQtZ2xhemVkIHBvdHRlcnkgbmFtZWQgYWZ0ZXIgYSBjaXR5IGluIEl0YWx5LiBJdHMgZXZpZGVuY2UgaGFzIGJlZW4gICBmb3VuZCBhdCBBcmlrYW1lZHUsIFB1ZHVjaGVycnksIGEgY29hc3RhbCBzZXR0bGVtZW50IHdoZXJlIHNoaXBzIHVubG9hZGVkIGdvb2RzIGZyb20gZGlzdGFudCBsYW5kcy4gICBTb3VyY2UpIE91ciBQYXN0cyBQYXJ0IEksIE5DRVJUIFZJLCBDaGFwdGVyLTgsIFBnLiA4NyAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 45,
      "question" : "Which one of the following describes best  the concept of Nirvana in Buddhism?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgb3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEl0IGlzIHRoZSB1bHRpbWF0ZSBnb2FsIG9mIEJ1ZGRoaXN0IHRyYWRpdGlvbi4gSXQgcmVmZXJzIHRvIHRoZSBleHRpbmN0aW9uIG9mIGRlc2lyZSwgaGF0cmVkLCBhbmQgaWdub3JhbmNlICAgYW5kLCB1bHRpbWF0ZWx5LCBvZiBzdWZmZXJpbmcgYW5kIHJlYmlydGguICAgU09VUkNFKSBVUFNDIDIwMTMgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The extinction of the flame of desire  ",
        "option2" : "The complete annihilation of self  ",
        "option3" : "A state of bliss and rest  ",
        "option4" : "A mental stage beyond all comprehension   "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the Mahayana  Buddhism, consider the following statements:   1.  They believed in idol or image worship of  Buddha.   2.   They believed in the Bodhisattva concept of  the salvation of all conscious individuals.  3.  The Mahayana sect remains influential in  Korea and Japan.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBNYWhheWFuYSBmb2xsb3dlcnMgYmVsaWV2ZSBpbiBpZG9sIG9yIGltYWdlIHdvcnNoaXAgb2YgQnVkZGhhLiBNYW55IG9mICAgdGhlc2UgaWRvbHMgd2VyZSBtYWRlIGluIE1hdGh1cmEsIHdoaWxlIG90aGVycyB3ZXJlIG1hZGUgaW4gVGF4aWxhLiBUaGUgY29uY2VwdCBvZiBCb2RoaXNhdHR2YSBpcyBhbHNvICAgdGhlIHJlc3VsdCBvZiBNYWhheWFuYSBCdWRkaGlzbS4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBJdCBiZWxpZXZlcyBpbiBCb2RoaXNhdHR2YSBjb25jZXB0IG9mIHNhbHZhdGlvbiBvZiBhbGwgY29uc2Npb3VzIGluZGl2aWR1YWwuIFRoZSAgIHVsdGltYXRlIGdvYWwgdW5kZXIgTWFoYXlhbmEgaXMgJ3NwaXJpdHVhbCB1cGxpZnRtZW50Jy4gIEJvZGhpc2F0dHZhcyB3ZXJlIHN1cHBvc2VkIHRvIGJlIHBlcnNvbnMgd2hvICAgaGFkIGF0dGFpbmVkIGVubGlnaHRlbm1lbnQuIE9uY2UgdGhleSBhdHRhaW5lZCBlbmxpZ2h0ZW5tZW50LCB0aGV5IGNvdWxkIGxpdmUgaW4gY29tcGxldGUgaXNvbGF0aW9uIGFuZCAgIG1lZGl0YXRlIGluIHBlYWNlLiBIb3dldmVyLCBpbnN0ZWFkIG9mIGRvaW5nIHRoYXQsIHRoZXkgcmVtYWluZWQgaW4gdGhlIHdvcmxkIHRvIHRlYWNoIGFuZCBoZWxwIG90aGVyICAgcGVvcGxlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFByZXNlbnRseSwgbWFqb3JpdHkgb2YgdGhlIEJ1ZGRoaXN0IGZvbGxvd2VycyBpbiB0aGUgd29ybGQgYmVsb25nIHRvIE1haGF5YW5hICAgc2VjdC4gQ291bnRyaWVzIGZvbGxvd2luZyBpdCBhdCBwcmVzZW50IGluY2x1ZGVzIE5lcGFsLCBCYW5nbGFkZXNoLCBKYXBhbiwgVmlldG5hbSwgSW5kb25lc2lhLCBNYWxheXNpYSwgICBTaW5nYXBvcmUsIE1vbmdvbGlhLCBDaGluYSwgQmh1dGFuLCBUaWJldCwgS29yZWEsIGV0Yy4gICAgS25vd2xlZGdlIEJhc2U6ICAgICBPdGhlciBmYWN0cyBhYm91dCBNYWhheWFuYSBCdWRkaGlzbTogICAgIDEpIFRoZSBNYWhheWFuYSBzY2hvbGFycyBwcmVkb21pbmFudGx5IHVzZWQgU2Fuc2tyaXQgYXMgYSBsYW5ndWFnZS4gICAgU291cmNlKSBPdXIgUGFzdHMgUGFydCBJLCBOQ0VSVCBWSSwgQ2hhcHRlci05LCBQZy4gOTUgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the era of the Delhi  Sultanate, consider the following:   1.  Alauddin Khalji paid salaries to soldiers in  form of iqtas.   2.  Alauddin Khalji constructed a garrison town  named Siri for his soldiers in face of Mongol  invasions as a defensive measure.    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQWxhdWRkaW4gS2hhbGppIHBhaWQgaGlzIHNvbGRpZXJzIHNhbGFyaWVzIGluIGNhc2ggYW5kIG5vdCBpbiBpcXRhcyBieSAgIGNvbnRyb2xsaW5nIHRoZSBwcmljZXMuIChUaGUgaXF0YSB3YXMgYSB0ZXJyaXRvcmlhbCBhc3NpZ25tZW50IGdpdmVuIHRvIGFkbWluaXN0cmF0aXZlIG9mZmljZXJzIGFuZCBub2JsZXMgICBpbiBsaWV1IG9mIHRoZSBzZXJ2aWNlcyB0aGV5IHBlcmZvcm1lZCBmb3IgdGhlIHN0YXRlKS4gICAgICAgb2YgMjEgICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFsYXVkZGluIEtoYWxqaSdzIHBvbGljeSB3YXMgZGVmZW5zaXZlIGluIG5hdHVyZSwgaGUgYWxzbyBjb25zdHJ1Y3RlZCBhIG5ldyAgIGdhcnJpc29uIHRvd24gbmFtZWQgU2lyaSBmb3IgaGlzIHNvbGRpZXJzIGluIGZhY2Ugb2YgTW9uZ29sIGludmFzaW9ucyBhcyBhIGRlZmVuc2l2ZSBtZWFzdXJlLiAgICBTb3VyY2UpIE5DRVJUIE91ciBQYXN0cyBQYXJ0LUlJIENsYXNzIFZJSSBDaC0zIFRoZSBEZWxoaSBTdWx0YW5zIFBnLTQxICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to the term' Kutagrashala'  often seen in ancient texts, is used for:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEt1dGFncmFzaGFsYSBpcyBhIGh1dCB3aXRoIHBvaW50ZWQgcm9vZiBvciBncm92ZSB3aGVyZSB0cmF2ZWxsaW5nIG1lbmRpY2FudHMgaGFsdGVkLiBIZXJlIGRlYmF0ZXMgdG9vayAgIHBsYWNlIGFtb25nIHRoZW0uIElmIGEgcGhpbG9zb3BoZXIgc3VjY2VlZGVkIGluIGNvbnZpbmNpbmcgb25lIG9mIGhpcyByaXZhbHMsIHRoZSBmb2xsb3dlcnMgb2YgdGhlIGxhdHRlciAgIGFsc28gYmVjYW1lIGhpcyBkaXNjaXBsZXMuICAgIFNvdXJjZTogVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSSBjaGFwdGVyLTQgVGhpbmtlcnMsIGJlbGllZnMgYW5kIGJ1aWxkaW5ncyBwYWdlLSA4NSAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " a diary to be maintained for daily accounts   ",
        "option2" : " a hut where debates took place among the   travellers.   ",
        "option3" : " the measurement of land  ",
        "option4" : " a place where various pitakas of Buddhism   were discussed by sangha community.      .      "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to Guru Nanak's  teachings, consider the following statements:   1.  He did not reject all orthodox relgions.  2.  He emphasized the importance of the  worship of one God.   3.  He calls for inert bliss to achieve liberation  in life.   4.  He also emphasized on a strong sense of  social commitment.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEd1cnUgTmFuYWsgcmVqZWN0ZWQgYWxsIG9ydGhvZG94IHJlbGlnaW9ucy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSGUgZW1waGFzaXplZCB0aGUgaW1wb3J0YW5jZSBvZiB0aGUgd29yc2hpcCBvZiBvbmUgR29kLiBIZSBpbnNpc3RlZCB0aGF0ICAgY2FzdGUsIGNyZWVkIG9yIGdlbmRlciB3YXMgaXJyZWxldmFudCBmb3IgYXR0YWluaW5nIGxpYmVyYXRpb24uICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIE5hbmFrJ3MgaWRlYSBvZiBsaWJlcmF0aW9uIHdhcyBub3QgdGhhdCBvZiBhIHN0YXRlIG9mIGluZXJ0IGJsaXNzLiBIaXMgdGVhY2hpbmdzIGFyZSAgIG5vdyByZW1lbWJlcmVkIGFzIG5hbS1qYXBuYSwga2lydC1rYXJuYSBhbmQgdmFuZGNoaGFrbmEsIHdoaWNoIGFsc28gdW5kZXJsaW5lIHRoZSBpbXBvcnRhbmNlIG9mICAgcmlnaHQgYmVsaWVmIGFuZCB3b3JzaGlwLCBob25lc3QgbGl2aW5nLCBhbmQgaGVscGluZyBvdGhlcnMuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gTmFuYWsgYWR2b2NhdGVkIGZvciB0aGUgcHVyc3VpdCBvZiBhY3RpdmUgbGlmZSB3aXRoIGEgc3Ryb25nIHNlbnNlIG9mIHNvY2lhbCAgIGNvbW1pdG1lbnQuIFRodXMsIEJhYmEgR3VydSBOYW5haydzIGlkZWEgb2YgZXF1YWxpdHkgaGFkIHNvY2lhbCBhbmQgcG9saXRpY2FsIGltcGxpY2F0aW9ucy4gICAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/Z2VzczE9OC0xMCAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 4 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1, 3 and 4   "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following phrases defines  the nature of the 'Hundi' generally referred to  in the sources of the post-Harsha period?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgb3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEh1bmRpcyBhcmUgdXNlZCBhcyBhIGZvcm0gb2YgcmVtaXR0YW5jZSBpbnN0cnVtZW50IHRvIHRyYW5zZmVyIG1vbmV5IGZyb20gcGxhY2UgdG8gcGxhY2UuIEl0IGlzIGEgYmlsbCBvZiAgIGV4Y2hhbmdlLCByZWNvcmRpbmcgYSBkZXBvc2l0IG1hZGUgYnkgYSBwZXJzb24uIFRoZSBhbW91bnQgZGVwb3NpdGVkIGNhbiBiZSBjbGFpbWVkIGluIGFub3RoZXIgcGxhY2UgICBieSBwcmVzZW50aW5nIHRoZSByZWNvcmQgb2YgdGhlIGRlcG9zaXQuICAgU09VUkNFKSBVUFNDIDIwMjAgICAgICBvZiAyMSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " An advisory issued by the king to his   subordinates  ",
        "option2" : " A diary to be maintained for daily accounts  ",
        "option3" : " A bill of exchange  ",
        "option4" : "An order from the feudal lord to his   subordinates    "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
