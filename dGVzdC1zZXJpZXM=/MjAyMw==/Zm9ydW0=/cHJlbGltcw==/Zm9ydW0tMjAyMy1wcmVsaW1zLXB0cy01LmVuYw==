{
  "testId" : "forum-2023-prelims-pts-5",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-pts-5.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to the history of India,  which of the following statements best describe  the term Telugu Komatis?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gUGFyYWl5YXJzIGFuZCBWYW5uaXlhcnMgZm9ybWVkIHRoZSBsYWJvdXJpbmcgcG9vciBjbGFzcyBpbiB0aGUgY2l0eSBvZiBNYWRyYXMuICAgTWFkcmFzIGRldmVsb3BlZCBieSBpbmNvcnBvcmF0aW5nIGlubnVtZXJhYmxlIHN1cnJvdW5kaW5nIHZpbGxhZ2VzIGFuZCBieSBjcmVhdGluZyBvcHBvcnR1bml0aWVzIGFuZCAgIHNwYWNlcyBmb3IgYSB2YXJpZXR5IG9mIGNvbW11bml0aWVzLiBTZXZlcmFsIGRpZmZlcmVudCBjb21tdW5pdGllcyBjYW1lIGFuZCBzZXR0bGVkIGluIE1hZHJhcywgICBwZXJmb3JtaW5nIGEgcmFuZ2Ugb2YgZWNvbm9taWMgZnVuY3Rpb25zLiAgIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gVGhlIGR1YmFzaGVzIHdlcmUgSW5kaWFucyB3aG8gY291bGQgc3BlYWsgdHdvIGxhbmd1YWdlcyAtIHRoZSBsb2NhbCBsYW5ndWFnZSAgIGFuZCBFbmdsaXNoLiAgIE9wdGlvbiBjIGlzIGNvcnJlY3QuIFRlbHVndSBLb21hdGlzIHdlcmUgYSBwb3dlcmZ1bCBjb21tZXJjaWFsIGdyb3VwIHRoYXQgY29udHJvbGxlZCB0aGUgZ3JhaW4gdHJhZGUgICBpbiB0aGUgY2l0eS4gICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIFRoZSBkdWJhc2hlcyB3b3JrZWQgYXMgYWdlbnRzIGFuZCBtZXJjaGFudHMsIGFjdGluZyBhcyBpbnRlcm1lZGlhcmllcyBiZXR3ZWVuICAgSW5kaWFuIHNvY2lldHkgYW5kIHRoZSBCcml0aXNoLiBUaGV5IHVzZWQgdGhlaXIgcHJpdmlsZWdlZCBwb3NpdGlvbiBpbiBnb3Zlcm5tZW50IHRvIGFjcXVpcmUgd2VhbHRoLiAgIFRoZWlyIHBvd2VyZnVsIHBvc2l0aW9uIGluIHNvY2lldHkgd2FzIGVzdGFibGlzaGVkIGJ5IHRoZW0gY2hhcml0YWJsZSB3b3JrcyBhbmQgcGF0cm9uYWdlIG9mIHRlbXBsZXMgaW4gICB0aGUgQmxhY2sgVG93bi4gICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJSSBUaGVtZSAxMiBDb2xvbmlhbCBDaXRpZXMtVXJiYW5pc2F0aW9uLCBQbGFubmluZyAgIGFuZCBBcmNoaXRlY3R1cmUuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Poor labour class in South India.  ",
        "option2" : " Indians who could speak the local language   as well as English.  ",
        "option3" : " Commercial groups that controlled the   grain trade in the city.  ",
        "option4" : " Agents and merchants working for the   British.   "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements with  reference to the Satnami movement in Central  India:    1.  It was organised to improve the social status  of leather workers.   2.  They defied the Mughal emperor Aurangzeb  and were crushed by his army.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIFNhdG5hbWkgbW92ZW1lbnQgaW4gQ2VudHJhbCBJbmRpYSB3YXMgZm91bmRlZCBieSBHaGFzaWRhcyB3aG8gd29ya2VkICAgYW1vbmcgdGhlIGxlYXRoZXJ3b3JrZXJzIGFuZCBvcmdhbmlzZWQgYSBtb3ZlbWVudCB0byBpbXByb3ZlIHRoZWlyIHNvY2lhbCBzdGF0dXMuICAgVGhlIFNhdG5hbSBQYW50aCBzdWNjZWVkZWQgaW4gcHJvdmlkaW5nIGEgcmVsaWdpb3VzIGFuZCBzb2NpYWwgaWRlbnRpdHkgdG8gbGFyZ2UgbnVtYmVycyBvZiAgIENoaGF0dGlzZ2FyaGkgQ2hhbWFycy4gVGhleSBwcmVhY2hlZCBzb2NpYWwgZXF1YWxpdHkuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBTYXRuYW1pIHNlY3QgaGFzIGFuIHVuZGVyc3RhbmRpbmcgb2YgR29kIGFzIHNhdG5hbSAoZnJvbSBTYW5za3JpdCBzYXR5YW5hbWFuLCAgICdoZSB3aG9zZSBuYW1lIGlzIHRydXRoJykuIFRoZSBlYXJsaWVzdCBTYXRuYW1pcyB3ZXJlIGEgc2VjdCBvZiBtZW5kaWNhbnRzIGFuZCBob3VzZWhvbGRlcnMgZm91bmRlZCAgIGJ5IEJpcmJoYW4gaW4gTmFybmF1bCBpbiBlYXN0ZXJuIFB1bmphYiBpbiAxNjU3LiBJbiAxNjcyIHRoZXkgZGVmaWVkIHRoZSBNdWdoYWwgZW1wZXJvciBBdXJhbmd6ZWIgYW5kICAgd2VyZSBjcnVzaGVkIGJ5IGhpcyBhcm15LiAgICAgU291cmNlOiBOQ0VSVCBDbGFzcyBWSUlJIE91ciBQYXN0cyBJSUkgLSBXb21lbiwgQ2FzdGUgYW5kIFJlZm9ybS4gICAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMvU2F0bmFtaS1zZWN0ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to the English East India  Company in the 17th century, consider the  following statements:  1.  It was a private company regulated by the  British monarch.  2.  No other European company was allowed to  trade in the regions of its operation.  3. It was originally formed for the spice trade  in South East Asia.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBFbmdsaXNoIEVhc3QgSW5kaWEgQ29tcGFueSAoRUVJQykgd2FzIGEgcHJpdmF0ZSBidXNpbmVzcyB2ZW50dXJlIG9mIGEgZ3JvdXAgb2YgbWVyY2FudGlsaXN0cyBpbiAxN3RoICAgY2VudHVyeSBFbmdsYW5kLiBUaGV5IHdhbnRlZCB0byBleHBsb2l0IHRoZSBuZXdseSBkaXNjb3ZlcmVkIHNlYSByb3V0ZXMgYmV0d2VlbiBFdXJvcGUgYW5kIEVhc3Rlcm4gICBjb3VudHJpZXMgbGlrZSBJbmRvbmVzaWEsIENoaW5hIGFuZCBJbmRpYSwgdG8gY2Fycnkgb24gYSB0cmFkZSBvZiBoaWdobHkgaW4gZGVtYW5kIGl0ZW1zIGxpa2UgbXVzbGlucywgc2lsa3MsICAgc3BpY2VzLCBldGMgYmV0d2VlbiB0aGUgRWFzdCBhbmQgRXVyb3BlLiBUaGVzZSBjb21wYW5pZXMgd2VudCBvbiB0byBjb2xvbmlzZSBJbmRpYSBhcyB3ZWxsIGFzIHRoZSByZXN0IG9mICAgU291dGggRWFzdCBBc2lhLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFsdGhvdWdoIHRoZSBFbmdsaXNoIEVhc3QgSW5kaWEgQ29tcGFueSB3YXMgYSBqb2ludCBzdG9jayBwcml2YXRlIGNvbXBhbnksIGl0cyAgIGFjdGl2aXRpZXMgd2VyZSByZWd1bGF0ZWQgdG8gc29tZSBleHRlbnQgYnkgYSBkZWNyZWUgcGFzc2VkIGJ5IHRoZSBCcml0aXNoIG1vbmFyY2gsIHN0YXJ0aW5nIHdpdGggICBRdWVlbiBFbGl6YWJldGggSSBpbiAxNjAwLiBUaGlzIGRlY3JlZSB3YXMga25vd24gYXMgdGhlIENoYXJ0ZXIgQWN0IG9mIHRoZSBjb21wYW55LCBhbmQgdW5kZXJ3ZW50ICAgbWFueSByZXZpc2lvbnMgcGVyaW9kaWNhbGx5IGFuZCBzdWJzZXF1ZW50bHkgYXMgdGhlIHJvbGUgb2YgdGhlIEVFSUMgaW5jcmVhc2VkIGluIGl0cyBFYXN0ZXJuIHRlcnJpdG9yaWVzLCAgIGVzcGVjaWFsbHkgSW5kaWEuICAgICBvZiAyNCAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBFbmdsaXNoIEVhc3QgSW5kaWEgQ29tcGFueSAoRUVJQykgd2FzIGdyYW50ZWQgbW9ub3BvbHkgdG8gdHJhZGUgaW4gdGhlICAgcmVnaW9uIGl0IGNob3NlIGZvciBpdHMgb3BlcmF0aW9uLiBIb3dldmVyLCBpdCBtdXN0IGJlIG5vdGVkIHRoYXQgdGhpcyBtb25vcG9seSB3YXMganVzdCByZXN0cmljdGVkIHRvICAgRW5nbGFuZCwgYW5kIG5vdCBvdGhlciBFdXJvcGVhbiBjb3VudHJpZXMuICAgVGhlIFF1ZWVuIG9ubHkgaGFkIHRoZSBhdXRob3JpdHkgdG8gcHJvaGliaXQgYW55IGJ1c2luZXNzIGluIEVuZ2xhbmQgZnJvbSBjb21wZXRpbmcgYWdhaW5zdCB0aGUgRUVJQywgICBhbmQgbm90IG92ZXIgYW55IGJ1c2luZXNzZXMgaW4gb3RoZXIgRXVyb3BlYW4gY291bnRyaWVzLiBBcyBhIHJlc3VsdCwgb3RoZXIgY29udGVuZGVycyBsaWtlIHRoZSBGcmVuY2ggICBFYXN0IEluZGlhIENvbXBhbnksIHRoZSBEdXRjaCBFYXN0IEluZGlhIENvbXBhbnksIGV0YyB0cmFkZWQgaW4gSW5kaWEgYXMgd2VsbCBhbmQgYWxsIHRoZXNlIGNvbXBhbmllcyAgIGNvbXBldGVkIGZvciB0aGUgcHJvZml0cyBpbiB0aGlzIHRyYWRlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBFRUlDIHdhcyBpbml0aWFsbHkgZm9ybWVkIHdpdGggdGhlIGFpbSBvZiB0cmFkaW5nIHNwaWNlcyBiZXR3ZWVuIEVuZ2xhbmQgICBhbmQgdGhlIEVhc3QgSW5kaWVzIChpLmUuLCBTb3V0aCBFYXN0IEFzaWEsIGVzcGVjaWFsbHkgSW5kb25lc2lhKS4gSG93ZXZlciwgdGhlIER1dGNoIGFscmVhZHkgaGFkIGEgdmVyeSAgIHN0cm9uZyBwcmVzZW5jZSB0aGVyZSBhbmQgdGhlIEJyaXRpc2ggY291bGQgbm90IGNvbXBldGUgd2VsbC4gU28sIHRoZSBFRUlDIHR1cm5lZCBpdHMgYXR0ZW50aW9uIHRvIEluZGlhLiAgIFN1YnNlcXVlbnRseSB0aGUgQ2hhcnRlcnMgb2YgdGhlIGNvbXBhbnkgdG9vIGJlZ2FuIHRvIGJlIHNwZWNpZmljIHRvIEluZGlhLiAgIEtub3dsZWRnZSBCYXNlOiAgICAxKSBUaGUgaW5pdGlhbCBDaGFydGVyIHdhcyBvbmx5IGdyYW50ZWQgZm9yIDE1IHllYXJzIG9mIG1vbm9wb2x5LiBUaGVyZSB3YXMgbm8gcGVycGV0dWFsIGdyYW50IG9mICAgbW9ub3BvbHksIHNvIHRoZSBDaGFydGVyIGdyYW50aW5nIG1vbm9wb2x5IHdhcyBzdXBwb3NlZCB0byBiZSByZS1pc3N1ZWQgcmVndWxhcmx5LiBIb3dldmVyLCBpbiAgIDE2MDksIHRoZSBtb25vcG9seSByaWdodHMgd2VyZSBncmFudGVkIGluZGVmaW5pdGVseSwgd2hpY2ggd2VyZSBmaW5hbGx5IHRha2VuIGF3YXkgYnkgQ2hhcnRlciBBY3QgICAxODMzLiAgIFNvdXJjZTogYnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEgYnkgU3BlY3RydW0sIENoLTMsIFBnIDQxICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the effects of colonial  rule on tribal people during the 19th century,  which of the following statements is/are  correct?  1.  Tribal chiefs were given more power by the  British for better control of forest areas.  2.  British wanted tribal groups to settle down  and become peasant cultivators.  3.  Some of the forests were classified as  reserved forests by the British to increase  timber production.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVW5kZXIgQnJpdGlzaCBydWxlLCB0aGUgZnVuY3Rpb25zIGFuZCBwb3dlcnMgb2YgdGhlIHRyaWJhbCBjaGllZnMgY2hhbmdlZCAgIGNvbnNpZGVyYWJseS4gVGhleSB3ZXJlIGFsbG93ZWQgdG8ga2VlcCB0aGVpciBsYW5kIHRpdGxlcyBvdmVyIGEgY2x1c3RlciBvZiB2aWxsYWdlcyBhbmQgcmVudCBvdXQgbGFuZHMsIGJ1dCAgIHRoZXkgbG9zdCBtdWNoIG9mIHRoZWlyIGFkbWluaXN0cmF0aXZlIHBvd2VyIGFuZCB3ZXJlIGZvcmNlZCB0byBmb2xsb3cgbGF3cyBtYWRlIGJ5IEJyaXRpc2ggb2ZmaWNpYWxzIGluICAgSW5kaWEuIFRoZXkgYWxzbyBoYWQgdG8gcGF5IHRyaWJ1dGUgdG8gdGhlIEJyaXRpc2gsIGFuZCBkaXNjaXBsaW5lIHRoZSB0cmliYWwgZ3JvdXBzIG9uIGJlaGFsZiBvZiB0aGUgQnJpdGlzaC4gICBUaGV5IGxvc3QgdGhlIGF1dGhvcml0eSB0aGV5IGhhZCBlYXJsaWVyIGVuam95ZWQgYW1vbmdzdCB0aGVpciBwZW9wbGUsIGFuZCB3ZXJlIHVuYWJsZSB0byBmdWxmaWwgdGhlaXIgICB0cmFkaXRpb25hbCBmdW5jdGlvbnMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIEJyaXRpc2ggd2VyZSB1bmNvbWZvcnRhYmxlIHdpdGggZ3JvdXBzIHdobyBwcmFjdGljZWQgc2hpZnRpbmcgY3VsdGl2YXRpb24gICBhbmQgZGlkIG5vdCBoYXZlIGEgZml4ZWQgaG9tZS4gVGhleSB3YW50ZWQgdHJpYmFsIGdyb3VwcyB0byBzZXR0bGUgZG93biBhbmQgYmVjb21lIHBlYXNhbnQgICBjdWx0aXZhdG9ycy4gU2V0dGxlZCBwZWFzYW50cyB3ZXJlIGVhc2llciB0byBjb250cm9sIGFuZCBhZG1pbmlzdGVyIHRoYW4gcGVvcGxlIHdobyB3ZXJlIGFsd2F5cyBvbiB0aGUgICBtb3ZlLiBUaGUgQnJpdGlzaCBhbHNvIHdhbnRlZCBhIHJlZ3VsYXIgcmV2ZW51ZSBzb3VyY2UgZm9yIHRoZSBzdGF0ZS4gU28sIHRoZXkgaW50cm9kdWNlZCBsYW5kICAgc2V0dGxlbWVudHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQnJpdGlzaCBoYWQgY2xhc3NpZmllZCBzb21lIGZvcmVzdHMgYXMgUmVzZXJ2ZSBmb3Jlc3RzIGFzIHRoZXNlIGZvcmVzdHMgcHJvZHVjZWQgICB0aW1iZXIuIEluIHRoZXNlIGZvcmVzdHMsIGZvcmVzdHMsIHBlb3BsZSB3ZXJlIG5vdCBhbGxvd2VkIHRvIG1vdmUgZnJlZWx5LCBwcmFjdGljZSBKaHVtIGN1bHRpdmF0aW9uLCAgIGNvbGxlY3QgZnJ1aXRzIG9yIGh1bnQgYW5pbWFscy4gICBTb3VyY2U6IE5DRVJUIENsYXNzLTggT3VyIHBhc3RzLUlJSSBjaGFwdGVyLTMgUnVsaW5nIHRoZSBjb3VudHJ5IHNpZGUgcGFnZS00MyB0byA0NSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements about  'the Charter Act of 1813':    1.  It ended the trade monopoly of the East  India Company in India except for trade in  tea and trade with China.    2.  It asserted the sovereignty of the British  Crown over the Indian territories held by the  Company.    3.  The revenues of India were now controlled  by the British Parliament.    Which of the statements given above are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIENoYXJ0ZXIgQWN0IG9mIDE4MTMgZW5kZWQgdGhlIG1vbm9wb2x5IG9mIHRoZSBFYXN0IEluZGlhIENvbXBhbnkgb3ZlciAgIHRyYWRlIHdpdGggSW5kaWEsIGV4Y2VwdCBmb3IgdHJhZGUgaW4gdGVhIGFuZCB0cmFkZSB3aXRoIENoaW5hLiBUaGUgQ29tcGFueSByZXRhaW5lZCB0aGUgdHJhZGUgd2l0aCAgIENoaW5hIGFuZCB0aGUgdHJhZGUgaW4gdGVhLiAgICAgVGhlIENoYXJ0ZXIgQWN0IG9mIDE4MzMgYWJvbGlzaGVkIHRoZSBDb21wYW55J3MgbW9ub3BvbHkgb2YgdGhlIENoaW5hIHRyYWRlLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIENoYXJ0ZXIgQWN0LCAxODEzIGFzc2VydGVkIHRoZSBzb3ZlcmVpZ250eSBvZiB0aGUgQnJpdGlzaCBDcm93biBvdmVyIHRoZSAgIEluZGlhbiB0ZXJyaXRvcmllcyBoZWxkIGJ5IHRoZSBDb21wYW55LiBUaGUgQ29tcGFueSB3YXMgdG8gcmV0YWluIHRoZSBwb3NzZXNzaW9uIG9mIHRlcnJpdG9yaWVzIGFuZCB0aGUgICByZXZlbnVlIGZvciAyMCB5ZWFycyBtb3JlLCB3aXRob3V0IHByZWp1ZGljZSB0byB0aGUgc292ZXJlaWdudHkgb2YgdGhlIENyb3duLiAgICAgICAgb2YgMjQgICAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgQWN0IHByb3ZpZGVzIHRoYXQgdGhlIENvbXBhbnkgd2FzIHRvIHJldGFpbiB0aGUgcG9zc2Vzc2lvbiBvZiB0aGUgICByZXZlbnVlIGZvciAyMCB5ZWFycyBtb3JlLiAgICAgVGhlIEFjdCBhbHNvIGRlcHJpdmVkIHRoZSBwcmVzaWRlbmNpZXMgb2YgdGhlIHBvd2VyIHRvIG1ha2UgbGF3cywgY29uY2VudHJhdGluZyBsZWdpc2xhdGl2ZSBwb3dlciB3aXRoICAgdGhlIEdvdmVybm9yLUdlbmVyYWwgYW5kIGhpcyBjb3VuY2lsLiAgICAgSXQgYWxzbyBwcm92aWRlcyBmb3IgYSBzdW0gb2Ygb25lIGxha2ggcnVwZWVzIHRvIGJlIHNldCBhc2lkZSBmb3IgdGhlIHJldml2YWwsIHByb21vdGlvbiBhbmQgZW5jb3VyYWdlbWVudCAgIG9mIGxpdGVyYXR1cmUsIGxlYXJuaW5nIGFuZCBzY2llbmNlIGFtb25nIHRoZSBuYXRpdmVzIG9mIEluZGlhLCBldmVyeSB5ZWFyLiAgICAgU291cmNlOiBVUFNDIENTRSBQcmVsaW1zIDIwMTkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only    ",
        "option3" : "1 and 3 only    ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following were the  characteristics of towns in India before the  arrival of the British in the 16th century?  1.  Traders and administrators lived in towns  while Artisans lived in villages.  2.  Towns thrived on taxes derived from  agriculture in rural areas.   3.  Towns and cities were often fortified by  walls to separate it from the countryside.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gdGhlIHByZS1Ccml0aXNoIHBlcmlvZCBpbiBJbmRpYSwgdG93bnMgd2VyZSBwZW9wbGVkIHdpdGggYXJ0aXNhbnMsIHRyYWRlcnMsICAgYWRtaW5pc3RyYXRvcnMgYW5kIHJ1bGVycy4gVG93bnMgd2VyZSBvZnRlbiBkZWZpbmVkIGluIG9wcG9zaXRpb24gdG8gcnVyYWwgYXJlYXMuIFRoZXkgY2FtZSB0byAgIHJlcHJlc2VudCBzcGVjaWZpYyBmb3JtcyBvZiBlY29ub21pYyBhY3Rpdml0aWVzIGFuZCBjdWx0dXJlcy4gSW4gdGhlIHZpbGxhZ2VzIHBlb3BsZSBzdWJzaXN0ZWQgYnkgICBjdWx0aXZhdGluZyBsYW5kLCBmb3JhZ2luZyBpbiB0aGUgZm9yZXN0LCBvciByZWFyaW5nIGFuaW1hbHMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIER1cmluZyBQcmUtQnJpdGlzaCB0aW1lcywgdG93bnMgZG9taW5hdGVkIG92ZXIgdGhlIHJ1cmFsIHBvcHVsYXRpb24sIHRocml2aW5nIG9uICAgdGhlIHN1cnBsdXMgYW5kIHRheGVzIGRlcml2ZWQgZnJvbSBhZ3JpY3VsdHVyZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUb3ducyBhbmQgY2l0aWVzIHdlcmUgb2Z0ZW4gZm9ydGlmaWVkIGJ5IHdhbGxzIHdoaWNoIHN5bWJvbGlzZWQgdGhlaXIgc2VwYXJhdGlvbiAgIGZyb20gdGhlIGNvdW50cnlzaWRlLiBIb3dldmVyLCB0aGUgc2VwYXJhdGlvbiBiZXR3ZWVuIHRvd24gYW5kIGNvdW50cnkgd2FzIGZsdWlkLiBUcmFkZXJzIGFuZCBwZWRsYXJzICAgdG9vayBnb29kcyBmcm9tIHRoZSB0b3ducyB0byBzZWxsIGluIHRoZSB2aWxsYWdlcywgZXh0ZW5kaW5nIG1hcmtldHMgICBhbmQgY3JlYXRpbmcgbmV3IHBhdHRlcm5zIG9mIGNvbnN1bXB0aW9uLiAgIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUlJIFRoZW1lIDEyIENvbG9uaWFsIENpdGllcy1VcmJhbmlzYXRpb24sIFBsYW5uaW5nICAgYW5kIEFyY2hpdGVjdHVyZSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following were the changes  made in the army of the English East India  Company after the Revolt of 1857?  1.  The regiments of soldiers were made  heterogenous with people of different  castes and regions.  2.  Indian soldiers were made to serve in India  only.  3.  The Company's European troops were  merged into one division.  4.  Now in Army the numerical strength of  European troops was more than Indian  troops.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBFbmdsaXNoIEVhc3QgSW5kaWEgQ29tcGFueSAoRUVJQykgd2FzIGEgdHJhZGluZyBlbnRlcnByaXNlIHdpdGggbW9ub3BvbHkgcmlnaHRzIGZvciB0cmFkZSB3aXRoIHRoZSAgIEVhc3QgaW4gRW5nbGFuZC4gSXQgY2FtZSB0byBJbmRpYSBhcyBhIHRyYWRlciBsb29raW5nIHRvIG1heGltaXNlIHByb2ZpdHMuIFNvLCBpdCBzdGFydGVkIGJ1aWxkaW5nIG1pbGl0YXJ5ICAgY2FwYWNpdHkgdG8gZmlnaHQgY29tcGV0aXRpb24gZnJvbSBvdGhlciBFdXJvcGVhbiBjb21wZXRpbmcgQ29tcGFuaWVzIGFuZCB0byBnYWluIHBvbGl0aWNhbCBjb250cm9sIG9mICAgSW5kaWFuIHRlcnJpdG9yaWVzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBCcml0aXNoZXJzIHJlYWxpc2VkIHRoYXQgb25lIG9mIHRoZSByZWFzb25zIGZvciB0aGUgc2Vwb3kgbXV0aW55IGR1cmluZyB0aGUgICBHcmVhdCBSZXZvbHQgb2YgMTg1NyB3YXMgdGhhdCBtYW55IHNvbGRpZXJzIG9mIHRoZSBzYW1lIGNhc3RlIGFuZCByZWdpb24gd2VyZSBncm91cGVkIHRvZ2V0aGVyIGluIHRoZSAgIHNhbWUgcmVnaW1lbnRzLiBGb3IgZXhhbXBsZSwgTWFuZ2FsIFBhbmRleSdzIHJlZ2ltZW50IGhhZCBtYW55IHNvbGRpZXJzIGJlbG9uZ2luZyB0byBQZWFzYW50IGZhbWlsaWVzICAgb2YgQXdhZGggcmVnaW9uIHdobyB3ZXJlIGluIGRpc3RyZXNzIGR1ZSB0byB0aGUgQnJpdGlzaCByZXZlbnVlIHBvbGljaWVzLiBUaGlzIGNhc3RlIGFuZCByZWdpb25hbCBhZmZpbml0aWVzICAgZW1ib2xkZW5lZCB0aGVtIHRvIGdyb3VwIHRvZ2V0aGVyIGFuZCB0YWtlIGFjdGlvbiBhZ2FpbnN0IHRoZSBFdXJvcGVhbiBzb2xkaWVycy4gICBTbywgaW4gb3JkZXIgdG8gZGlzY291cmFnZSBhIHJlcGVhdCBvZiB0aGlzIHJldm9sdCBpbiBmdXR1cmUsIHdoaWxlIGNvbnRpbnVpbmcgd2l0aCB0aGVpciBleHBsb2l0YXRpdmUgICBjb2xvbmlhbCBwb2xpY2llcywgdGhlIEJyaXRpc2hlcnMgZGVjaWRlZCB0byBtaXggcGVvcGxlIG9mIGRpZmZlcmVudCBjYXN0ZXMgYW5kIHJlZ2lvbnMgaW4gZWFjaCByZWdpbWVudCAgIGFuZCBtYWtpbmcgdGhlbSBoZXRlcm9nZW5vdXMuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBFdmVuIGluIHRoZSBlYXJsaWVyIGRheXMgb2YgQ29tcGFueSBSdWxlLCB0aGUgSW5kaWFuIHRyb29wcyBvZiBpdHMgbWlsaXRhcnkgd2VyZSAgIG1hbmRhdGVkIHRvIHNlcnZlIG91dHNpZGUgSW5kaWEgc3VjaCBhcyBpbiB0aGUgQWZnaGFuaXN0YW4gV2FycyBvZiB0aGUgMTl0aCBjZW50dXJ5LiBMYXRlciBhZnRlciB0aGUgICBSZXZvbHQgb2YgMTg1NywgdGhlIEJyaXRpc2hlcnMgbWFkZSBpdCB0aGVpciBwb2xpY3kgdG8gdXNlIEluZGlhbiB0cm9vcHMgcHJpbWFyaWx5IGZvciBtYWludGFpbmluZyB0aGVpciAgIHBvc2l0aW9ucyBpbiBvdGhlciBjb2xvbmllcyAoZXguIEluIFNvdXRoIEFmcmljYSBkdXJpbmcgQm9lciBXYXJzKSwgYW5kIGFnYWluc3Qgb3RoZXIgcG93ZXJzIChleC4gQWdhaW5zdCAgIEdlcm1hbnksIGV0YyBpbiBXb3JsZCBXYXJzKS4gT24gdGhlIG90aGVyIGhhbmQsIHRoZXkgdXNlZCB0aGUgRXVyb3BlYW4gdHJvb3BzIHRvIGtlZXAgb2NjdXB5aW5nIGl0cyAgIEluZGlhbiBjb2xvbnkuIFRoaXMgd2FzIHNvIHRoYXQgSW5kaWFuIHRyb29wcyB3b3VsZCBub3Qgc3ltcGF0aGlzZSB3aXRoIHRoZWlyIGNvdW50cnltZW4gYW5kIHJldm9sdCAgIGFnYWluc3QgdGhlaXIgQnJpdGlzaCBtYXN0ZXJzLCB3aGlsZSB0aGUgRXVyb3BlYW5zIHdpdGggbm8gc3ltcGF0aHkgZm9yIEluZGlhbnMgd291bGQgY3J1c2ggdGhlbSAgIGVmZmVjdGl2ZWx5LiAgICAgb2YgMjQgICAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQWx0aG91Z2ggbG92ZWQgZm9yIGl0cyByaWNoIGJsdWUgY29sb3VyLCBpdCB3YXMgdmVyeSBleHBlbnNpdmUgdG8gYnJpbmcgSW5kaWdvICAgZnJvbSBJbmRpYSB0byBFdXJvcGUsIGFuZCBoZW5jZSBpdCBzb2xkIGF0IHZlcnkgaGlnaCBjb3N0LiBBcyBzdWNoIGl0IGNvdWxkIG9ubHkgYmUgYWZmb3JkZWQgYnkgdmVyeSBmZXcgICBwZW9wbGUuIFNvLCB0aGUgcHJlZG9taW5hbnQgc3Vic3RhbmNlIHVzZWQgdG8gZHllIGZhYnJpY3MgaW4gc2hhZGVzIG9mIGJsdWUgaW4gRXVyb3BlIHdhcyBhIGxvY2FsICAgdGVtcGVyYXRlIGNsaW1hdGUgcGxhbnQgbmFtZWQgV29hZCwgYXMgaXQgd2FzIGNoZWFwIHRvIHByb2N1cmUuICAgIEhvd2V2ZXIsIHdvYWQgcHJvZHVjZWQgZHVsbCBibHVlcyBhbmQgdmlvbGV0cyB3aGljaCBkaWQgbm90IGNvbXBhcmUgd2l0aCB0aGUgcmljaCBodWVzIG9mIHRoZSBvcmlnaW5hbCAgIGluZGlnby4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluZGlnbyB3YXMgaW5kZWVkIHJhcmUsIGJ1dCBpdCB3YXMgbm90IG9ubHkgY29uZmluZWQgdG8gSW5kaWEsIGhlbmNlIHRoaXMgICBzdGF0ZW1lbnQgaXMgaW5jb3JyZWN0LiAgICBJbmRpZ28gaXMgYSBjcm9wIG9mIHdhcm0gY2xpbWF0ZSBhbmQgaXMgZ3Jvd24gaW4gb3RoZXIgVHJvcGljYWwgY291bnRyaWVzIGFzIHdlbGwuIER1cmluZyB0aGUgMTh0aCAgIGNlbnR1cnksIEV1cm9wZWFuIGNvdW50cmllcyBsaWtlIFBvcnR1Z2FsLCBTcGFpbiwgZXRjIHdpdGggb3ZlcnNlYXMgY29sb25pZXMgc3RhcnRlZCBncm93aW5nIHRoZW0gdGhlcmUgICBpbiBvcmRlciB0byBzdXBwbGVtZW50IHRoZSBzdXBwbHkgZnJvbSBJbmRpYS4gVGhlIEZyZW5jaCBiZWdhbiBjdWx0aXZhdGluZyBpbmRpZ28gaW4gU3QgRG9taW5ndWUgaW4gdGhlICAgQ2FyaWJiZWFuIGlzbGFuZHMsIHRoZSBQb3J0dWd1ZXNlIGluIEJyYXppbCwgdGhlIEVuZ2xpc2ggaW4gSmFtYWljYSwgYW5kIHRoZSBTcGFuaXNoIGluIFZlbmV6dWVsYS4gICBTb3VyY2U6IE5DRVJUIENsYXNzIDh0aCBIaXN0b3J5IC0gT3VyIFBhc3RzIFBhcnQgSUlJLCBDaC0zLCBQZyAzMSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to Indian history, which of  the following statements is/are correct?  1.  The Nizamat of Arcot emerged out of  Hyderabad State.     2.  The Mysore Kingdom emerged out of  Vijayanagara Empire.     3.  The Rohilkhand Kingdom was formed out of  the territories occupied by Ahmad Shah  Durrani.     Select the correct answer using the code given  below.     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIE5pemFtYXQgb2YgQ2FybmF0aWMgKEFyY290KSB3YXMgYSBkZXBlbmRlbmN5IG9mIEh5ZGVyYWJhZCBEZWNjYW4gYW5kICAgd2FzIHVuZGVyIHRoZSBsZWdhbCBwdXJ2aWV3IG9mIHRoZSBOaXphbSBvZiBIeWRlcmFiYWQsIHVudGlsIGl0cyBkZW1pc2UuICBJdCB3YXMgYSBwcm90ZWN0b3JhdGUgc3RhdGUgYnV0ICAgICBkaWQgbm90IGVtZXJnZSBvdXQgb2YgSHlkZXJhYmFkLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIE15c29yZSBraW5nZG9tLCB3aGljaCB3YXMgZm91bmRlZCBhbmQgcnVsZWQgZm9yIG1vc3QgcGFydCBieSB0aGUgSGluZHUgICBXb2RleWFyIGZhbWlseSwgaW5pdGlhbGx5IHNlcnZlZCBhcyBhIHZhc3NhbCBzdGF0ZSBvZiB0aGUgVmlqYXlhbmFnYXJhIEVtcGlyZS4gICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIEtpbmdkb20gb2YgUm9oaWxraGFuZCBhcm9zZSB1bmRlciB0aGUgZGVjbGluaW5nIE11Z2hhbCBFbXBpcmUgaW4gMTcyMSAgIGFuZCBjb250aW51ZWQgdG8gZXhpc3QgdW50aWwgMTc3NCB3aGVuIGFubmV4YXRpb24gYnkgdGhlIEJyaXRpc2ggdHJhbnNmb3JtZWQgaXRzIHNpZ25pZmljYW50bHkgcmVkdWNlZCAgIGJvcmRlcnMgaW50byB0aGUgUHJpbmNlbHkgU3RhdGUgb2YgUmFtcHVyLiAgICAgIFNvdXJjZSkgaHR0cHM6Ly9hcnRzYW5kY3VsdHVyZS5nb29nbGUuY29tL2VudGl0eS9jYXJuYXRpYy1zdWx0YW5hdGUvbTAyNXl5NXI/aGw9ZW4gICAgIGh0dHBzOi8vd3d3Lm5ld3dvcmxkZW5jeWNsb3BlZGlhLm9yZy9lbnRyeS9LaW5nZG9tX29mX015c29yZSAgICAgaHR0cHM6Ly93d3cuaG1vb2IuaW4vd2lraS9LaW5nZG9tX29mX1JvaGlsa2hhbmQgICAgIFVQU0MgQ1NFIFByZWxpbXMgMjAyMCAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2     ",
        "option2" : "2 only     ",
        "option3" : "2 and 3     ",
        "option4" : "3 only     "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following were major centres  of weaving and textiles in the 18th and 19th  century India?  1. Dacca  2. Bombay  3. Nagapattinam  4. Kanpur  5. Patan  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFyb3VuZCAxNzUwLCBiZWZvcmUgdGhlIEJyaXRpc2ggY29ucXVlcmVkIEJlbmdhbCwgSW5kaWEgd2FzIGJ5IGZhciB0aGUgd29ybGQncyBsYXJnZXN0IHByb2R1Y2VyIG9mIGNvdHRvbiAgIHRleHRpbGVzLiBJbmRpYW4gdGV4dGlsZXMgaGFkIGxvbmcgYmVlbiByZW5vd25lZCBib3RoIGZvciB0aGVpciBmaW5lIHF1YWxpdHkgYW5kIGV4cXVpc2l0ZSBjcmFmdHNtYW5zaGlwLiAgICBUaGV5IHdlcmUgZXh0ZW5zaXZlbHkgdHJhZGVkIGluIFNvdXRoZWFzdCBBc2lhIChKYXZhLCBTdW1hdHJhIGFuZCBQZW5hbmcpIGFuZCBXZXN0IGFuZCBDZW50cmFsIEFzaWEuICAgRnJvbSB0aGUgc2l4dGVlbnRoIGNlbnR1cnkgRXVyb3BlYW4gdHJhZGluZyBjb21wYW5pZXMgYmVnYW4gYnV5aW5nIEluZGlhbiB0ZXh0aWxlcyBmb3Igc2FsZSBpbiBFdXJvcGUuICAgT3B0aW9uIDEgaXMgY29ycmVjdDogRGFjY2Egd2FzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgYW5kIGJpZ2dlc3QgY2VudHJlcyBvZiB3ZWF2aW5nIGluIDE4dGggY2VudHVyeSAgIEluZGlhLiBJdCB3YXMga25vd24gZm9yIGl0cyB1bHRyYS1maW5lIGNvdHRvbiB0ZXh0aWxlcyAobXVzbGlucyksIGNoaW50eiBhcyB3ZWxsIGFzIHNpbGtzLiBJdCB3YXMga25vd24gZm9yIGl0cyAgIG11bG11bCBhbmQgamFtZGFuaSB3ZWF2ZXMuICAgT3B0aW9uIDIgaXMgY29ycmVjdDogQm9tYmF5IHdhcyBhbiBpbmR1c3RyaWFsIGh1YiBhbmQgYSBodWIgdGV4dGlsZSBpbmR1c3RyeSBpbiB0aGUgbWlkLTE5dGggY2VudHVyeS4gICBCb21iYXkgaGFkIG1vcmUgdGhhbiAxMDAgdGV4dGlsZSBtaWxscy4gQm9tYmF5IHdhcyBhbiBpbXBvcnRhbnQgcG9ydCBmb3IgY29uZHVjdGluZyB0cmFkZSBhbmQgYW4gICBpbXBvcnRhbnQgYWRtaW5pc3RyYXRpdmUgY2VudHJlIG9mIHRoZSBCcml0aXNoIGVtcGlyZSBpbiBJbmRpYSwgICBPcHRpb24gMyBpcyBjb3JyZWN0OiBOYWdhcGF0dGluYW0gd2FzIG9uZSBvZiB0aGUgbWFueSB3ZWF2aW5nIGNlbnRyZXMgaW4gU291dGggSW5kaWEuIFNpdHVhdGVkIGluICAgTWFkcmFzIHByZXNpZGVuY3kgaW4gdGhlIDE4dGggY2VudHVyeSwgaXQgcHJvZHVjZWQgY290dG9uIHRleHRpbGVzIG9mIGhpZ2ggcXVhbGl0eS4gICAgIG9mIDI0ICAgICAgIE9wdGlvbiA0IGlzIGNvcnJlY3Q6IGluIDE4NjIsIGEgY290dG9uIHRleHRpbGUgbWlsbCB3YXMgZXN0YWJsaXNoZWQgaW4gS2FucHVyLCBpbiB0aGUgVW5pdGVkIFByb3ZpbmNlcy4gVGhlICAgQnJpdGlzaCBzdGFydGVkIG5ldyB0ZXh0aWxlIG1hbnVmYWN0dXJpbmcgdW5pdHMgY2FsbGVkIEVsZ2luIE1pbGxzIGluIDE4NjIgZm9sbG93ZWQgYnkgTXVpciBNaWxscyBpbiAxODgyLiAgIFRoZSBJbmRpYW4gY2FwaXRhbGlzdCBjbGFzcyBhbHNvIGpvaW5lZCB0aGUgdHJhZGUgYW5kIHRoZSBKSyBDb3R0b24gbWlsbCB3YXMgc2V0IHVwIGluIDE5MjguICAgT3B0aW9uIDUgaXMgY29ycmVjdDogUGF0YW4gd2FzIGFuZCBpcyBvbmUgb2YgdGhlIG1vc3QgcmVub3duZWQgd2VhdmluZyBjZW50cmVzIGluIHdlc3Rlcm4gSW5kaWEuICAgU2l0dWF0ZWQgaW4gR3VqYXJhdCwgaXQgd2FzIGEgY2VudHJlIGZvciB0aGUgZXhjbHVzaXZlIFBhdGFuIFBhdG9sYSB3ZWF2ZXMgb24gc2lsa2VuIHRleHRpbGVzLiBJdCBhbHNvICAgcHJvZHVjZWQgQ2hpbnR6IHRleHRpbGVzLiAgIEtub3dsZWRnZSBCYXNlOiAgICBTb21lIG90aGVyIGltcG9ydGFudCB3ZWF2aW5nIGNlbnRyZXMgb2YgbGF0ZSAxOHRoIGNlbnR1cnkgSW5kaWEgICAgU291cmNlOiBOQ0VSVCBDbGFzcyA4dGggSGlzdG9yeSAtIE91ciBQYXN0IElJSSwgQ2gtNiwgUGcgNjktNzAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1, 3 and 5 only  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to social reformer Jyotirao  Phule, consider the following statements:   1.  He argued that the Aryans were foreigners,  who subjugated the indigenous people.  2.  He was against Brahmanical domination.   3.  He wrote Annihilation of Caste against caste  inequality and untouchability.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFBodWxlIGFyZ3VlZCB0aGF0IHRoZSBBcnlhbnMgd2VyZSBmb3JlaWduZXJzLCB3aG8gY2FtZSBmcm9tIG91dHNpZGUgdGhlICAgc3ViY29udGluZW50LCBhbmQgZGVmZWF0ZWQgYW5kIHN1Ymp1Z2F0ZWQgdGhlIHRydWUgY2hpbGRyZW4gb2YgdGhlIGNvdW50cnkgLSB0aG9zZSB3aG8gaGFkIGxpdmVkIGhlcmUgICBmcm9tIGJlZm9yZSB0aGUgY29taW5nIG9mIHRoZSBBcnlhbnMuIEFzIHRoZSBBcnlhbnMgZXN0YWJsaXNoZWQgdGhlaXIgZG9taW5hbmNlLCB0aGV5IGJlZ2FuIGxvb2tpbmcgYXQgICB0aGUgZGVmZWF0ZWQgcG9wdWxhdGlvbiBhcyBpbmZlcmlvciwgYXMgbG93IGNhc3RlIHBlb3BsZS4gQWNjb3JkaW5nIHRvIFBodWxlLCB0aGUgJ3VwcGVyJyBjYXN0ZXMgaGFkIG5vICAgcmlnaHQgdG8gdGhlaXIgbGFuZCBhbmQgcG93ZXI6IGluIHJlYWxpdHksIHRoZSBsYW5kIGJlbG9uZ2VkIHRvIGluZGlnZW5vdXMgcGVvcGxlLCB0aGUgc28tY2FsbGVkIGxvdyBjYXN0ZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIFNhdHlhc2hvZGhhayBTYW1haiB3YXMgZm91bmRlZCBpbiAxODczIGF0IFB1bmUgYnkgSnlvdGlyYW8gUGh1bGUuIEl0IHdhcyAgIGFnYWluc3QgQnJhaG1hbmljYWwgZG9taW5hdGlvbiBhbmQgZGVub3VuY2VkIGNhc3RlIHN5c3RlbS4gSXQgd29ya2VkIGZvciB0aGUgZW1hbmNpcGF0aW9uIG9mIGxvdyAgIGNhc3RlcywgdW50b3VjaGFibGVzIGFuZCB3aWRvd3MuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBBbm5paGlsYXRpb24gb2YgQ2FzdGUgd2FzIHdyaXR0ZW4gYnkgQi5SLiBBbWJlZGthci4gSnlvdGlyYW8gUGh1bGUgd3JvdGUgYSAgIGJvb2sgbmFtZWQgR3VsYW1naXJpLCBtZWFuaW5nIHNsYXZlcnksIGluIDE4NzMuIEhlIGRlZGljYXRlZCB0aGlzIGJvb2sgdG8gYWxsIHRob3NlIEFtZXJpY2FucyB3aG8gaGFkICAgICBvZiAyNCAgICAgICBmb3VnaHQgdG8gZW5kIHRoZSBzbGF2ZXJ5IGluIEFtZXJpY2EuIFRoZSBib29rIHdhcyByZWxhdGVkIHRvIEJyYWhtYW5pY2FsIG9wcHJlc3Npb24sIGNhc3RlIGluZXF1YWxpdHkgICBhbmQgdW50b3VjaGFiaWxpdHkuICAgU291cmNlOiBOQ0VSVCBDbGFzcyBWSUlJIE91ciBQYXN0cyBJSUkgLSBXb21lbiwgQ2FzdGUgYW5kIFJlZm9ybS4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3          "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to Rabindranath Tagore's  views on education, consider the following  statements:  1.  He chose modern Western education over  traditional Indian education as the better  option for Indians.  2.  He established a school that taught modern  sciences, technology as well as arts, music  and dance.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJhYmluZHJhbmF0aCBUYWdvcmUgd2FzIGFuIGVtaW5lbnQgYXJ0aXN0LCBwb2V0LCB3cml0ZXIsIGRyYW1hdGlzdCwgcGFpbnRlciBhbmQgbXVzaWNpYW4sIGFzIHdlbGwgYXMgYSAgIG5hdGlvbmFsaXN0IGZyZWVkb20gZmlnaHRlciB3aG8gaGFkIGhpcyBvd24gdW5pcXVlIGlkZWFzIGFib3V0IHdoYXQgJ25hdGlvbmFsIGVkdWNhdGlvbicgb3VnaHQgdG8gYmUuICAgQXMgdGhlIEJyaXRpc2ggaW50cm9kdWNlZCBhIG5ldyBFbmdsaXNoIGJhc2VkIHN5c3RlbSBvZiBzY2hvb2xpbmcgdGhyb3VnaG91dCBJbmRpYSwgdGhlcmUgYmVnYW4gYSAgIGRlYmF0ZSwgYW1vbmcgdGhlIG5hdGlvbmFsaXN0cyBvbiB0aGUgZWR1Y2F0aW9uIHN5c3RlbSB3YXMgdGhlIGJlc3QgZm9yIHRoZSBwZW9wbGUgb2YgSW5kaWEuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGFnb3JlIGRpZCBub3QgYmVsaWV2ZSBpbiB0aGUgcmlnaWQgc3lzdGVtIG9mIHNjaG9vbGluZyBpbnZvbHZpbmcgZml4ZWQgc3lsbGFidXMgICBhbmQgZXhhbXMuIFNvLCBoZSBkaWRuJ3QgcHJlZmVyIG1vZGVybiB3ZXN0ZXJuIGVkdWNhdGlvbiBvdmVyIHRyYWRpdGlvbmFsIEluZGlhbiBlZHVjYXRpb24uIEhlIGRpZCAgIGJlbGlldmUgaXQgd2FzIGVxdWFsbHkgaW1wb3J0YW50IHRvIGxlYXJuIGFsbCBzdWJqZWN0cyBsaWtlIG1vZGVybiBzY2llbmNlLCB0ZWNobm9sb2d5IGFzIHdlbGwgYXMgSW5kaWEncyAgIG93biBjdWx0dXJlIGFuZCB0cmFkaXRpb25zLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRhZ29yZSB3YXMgb2YgdGhlIHZpZXcgdGhhdCBjcmVhdGl2ZSBsZWFybmluZyBjb3VsZCBiZSBlbmNvdXJhZ2VkIG9ubHkgd2l0aGluIGEgICBuYXR1cmFsIGVudmlyb25tZW50LiBTbywgaGUgc2V0IHVwIFNhbnRpbmlrZXRhbiBuZWFyIENhbGN1dHRhLiBUYWdvcmUgd2FudGVkIHRvIGNvbWJpbmUgZWxlbWVudHMgb2YgICBtb2Rlcm4gV2VzdGVybiBjaXZpbGlzYXRpb24gd2l0aCB3aGF0IGhlIHNhdyBhcyB0aGUgYmVzdCB3aXRoaW4gSW5kaWFuIHRyYWRpdGlvbi4gSGUgZW1waGFzaXNlZCB0aGUgICBuZWVkIHRvIHRlYWNoIHNjaWVuY2UgYW5kIHRlY2hub2xvZ3kgYXQgU2FudGluaWtldGFuLCBhbG9uZyB3aXRoIGFydCwgbXVzaWMgYW5kIGRhbmNlLiAgIEtub3dsZWRnZSBCYXNlOiAgICAxKSBUYWdvcmUgYmVsaWV2ZWQgaW4gbGV0dGluZyBhIGNoaWxkIGV4cHJlc3MgaGVyc2VsZiBmdWxseSBhbmQgZmluZGluZyB0aGVpciBpbmRpdmlkdWFsaXR5IGFuZCBpbnRlcmVzdHMgICB3aXRob3V0IHRoZSByaWdpZCBjb25maW5lcyBvZiB0aGUgdHJhZGl0aW9uYWwgZWR1Y2F0aW9uIHN5c3RlbSB3aGljaCB3ZXJlIGRvbWluYXRlZCBieSB0ZWFjaGVycyBhbmQgICBleGFtcy4gICAyKSBIZSBlc3RhYmxpc2hlZCBhIHNjaG9vbCBuYW1lZCBTaGFudGluaWtldGFuIG5lYXIgQ2FsY3V0dGEgdG8gZXhlY3V0ZSBoaXMgdmlzaW9uIGZvciBlZHVjYXRpb24uICAgMykgVGhlIHRlYWNoZXJzIHRoZXJlIGhhZCB0byBiZSBpbWFnaW5hdGl2ZSwgdW5kZXJzdGFuZCB0aGUgY2hpbGQsIGFuZCBoZWxwIHRoZSBjaGlsZCBkZXZlbG9wIGhlciAgIGN1cmlvc2l0eS4gICA0KSBIZSBiZWxpZXZlZCBpbiBlbmNvdXJhZ2luZyBjcmVhdGl2ZSBsZWFybmluZyB3aGljaCBoZSBiZWxpZXZlZCBpcyBiZXN0IGZvc3RlcmVkIHdoZW4gY2hpbGRyZW4gYXJlIGluICAgY2xvc2UgY29ubmVjdGlvbiB3aXRoIG5hdHVyZS4gU28gU2hhbnRpbmlrZXRhbiBoYWQgdmFzdCBhbmQgYmVhdXRpZnVsIG91dGRvb3JzIHdpdGggZ2FyZGVucywgdHJlZXMsICAgcml2ZXJzLCBldGMgYW5kIG1vc3Qgb2YgdGhlIGNsYXNzZXMgd2VyZSBoZWxkIG91dHNpZGUuICAgU291cmNlOiBOQ0VSVCBDbGFzcyA4LSBPdXIgUGFzdCBJSUksIENoLTcsUGcgOTAtOTEgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following pairs:  Books Authors  1. Stri Purush  Tulna  Tarabai Shinde  2. Gulamgiri B. R. Ambedkar  3. Vedanta  Grantha  Swami  Dayanand  Saraswati  4. Durgeshnandini Bankim Chandra  Chhatopadhyay  Which of the pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0OiBTdHJpIFB1cnVzaCBUdWxuYSB0cmFuc2xhdGVzIHRvICdhIGNvbXBhcmlzb24gYmV0d2VlbiBtYW4gYW5kIHdvbWFuJy4gSXQgaXMgdG91dGVkIHRvICAgYmUgdGhlIGZpcnN0IG1vZGVybiBmZW1pbmlzdCB0ZXh0IG9mIEluZGlhLiBJdCB3YXMgd3JpdHRlbiBieSBUYXJhYmFpIFNoaW5kZSBpbiAxODgyLiBJdCB3YXMgb25lIG9mIHRoZSAgIHBpb25lZXJpbmcgdGV4dHMgd2hpY2ggY2hhbGxlbmdlZCB0aGUgY2FzdGUgc3lzdGVtIGFuZCBwYXRyaWFyY2h5IGFmdGVyIHRoZSBwb2V0cnkgICAgb2YgdGhlIEJoYWt0aSBtb3ZlbWVudC4gVGhlIHRleHQgd2FzIG9yaWdpbmFsbHkgcHVibGlzaGVkIGluIE1hcmF0aGkgaW4gMTg4MiwgaW4gcmVzcG9uc2UgdG8gYW4gYXJ0aWNsZSBpbiAgIFB1bmUgVmFpYmhhdiwgYW4gb3J0aG9kb3ggbmV3c3BhcGVyLiBXaGVuIGEgd2lkb3cgYWJvcnRlZCBoZXIgdW5ib3JuIGNoaWxkLCBhIGNyaW1pbmFsIGNhc2Ugd2FzIGZpbGVkICAgYWdhaW5zdCBoZXIgYW5kIHNoZSB3YXMgc2VudGVuY2VkIHRvIGRlYXRoLiBUYXJhYmFpIGRlY2lkZWQgdG8gc3BlYWsgdXAgYWdhaW5zdCB0aGlzIGFjdCB0aHJvdWdoIGhlciAgIHdyaXRpbmdzLiAgIFBhaXIgMiBpcyBpbmNvcnJlY3Q6IEd1bGFtZ2lyaSB3YXMgd3JpdHRlbiBieSBNYWhhdG1hIEp5b3RpYmEgUGh1bGUgaW4gMTg3My4gSXQgaXMgY29uc2lkZXJlZCBvbmUgb2YgdGhlICAgZmlyc3QgdHJhY3RzIGFnYWluc3QgdGhlIGNhc3RlIHN5c3RlbS4gSXQgd2FzIHB1Ymxpc2hlZCBpbiAxODg1LiBJdCBjcml0aXF1ZXMgdGhlIGluc3RpdHV0aW9uIG9mIGNhc3RlIHRocm91Z2ggYSAgIDE2LXBhcnQgZXNzYXkgYW5kIGZvdXIgcG9ldGljIGNvbXBvc2l0aW9ucywgYW5kIGl0IGlzIHdyaXR0ZW4gaW4gdGhlIGZvcm0gb2YgYSBkaWFsb2d1ZSBiZXR3ZWVuIEpvdGliYSwgYW5kICAgYSBjaGFyYWN0ZXIgaGUgY2FsbHMgRGhvbmRpYmEuICAgUGFpciAzIGlzIGluY29ycmVjdDogVmVkYW50YSBHcmFudGhhIHdhcyB3cml0dGVuIGJ5IFJhamEgcmFtIE1vaGFuIFJveSBpbiAxODE1LiBSYWphIFJhbW1vaGFuIFJveSAgICgxNzcyLzQtMTgzMykgY29udHJpYnV0ZWQgdG8gdGhlIGZ1cnRoZXIgZGV2ZWxvcG1lbnQgb2YgQmFuZ2xhIHByb3NlLiBTb21lIG9mIGhpcyB3ZWxsLWtub3duIGJvb2tzIGFyZSAgIHRyYW5zbGF0aW9uczogVmVkYW50YXNhciAoMTgxNSksIEtlbm9wYW5pc2FkICgxODE2KSBhbmQgSXNob3BhbmlzYWQgKDE4MTYpLiAgICAgb2YgMjQgICAgICAgUGFpciA0IGlzIGNvcnJlY3Q6IER1cmdlc2ggTmFuZGluaSBpcyBhIHJvbWFudGljIGFuZCBoaXN0b3JpY2FsIG5vdmVsIHdyaXR0ZW4gYnkgQmVuZ2FsaSBXcml0ZXIgQmFua2ltICAgQ2hhbmRyYSBDaGF0dG9wYWRoeWF5LiBCYW5raW0gQ2hhbmRyYSBDaGF0dG9wYWRoeWF5IGlzIGZhbW91cyBJbmRpYW4gbm92ZWxpc3QsIFBvZXQsIEpvdXJuYWxpc3QgYW5kICAgY29tcG9zZXIgb2YgSW5kaWEncyBOYXRpb25hbCBTb25nLiBIaXMgcG9wdWxhciBib29rIGlzIER1cmdlc2ggTmFuZGluaSwgS29wYWxrdW5kb2xhLCBNcmluYWxpbmksICAgUmFqYW5pLCBSYWpzaGltYSBldGMgICBTb3VyY2U6IGh0dHBzOi8vd3d3LnNoZXRoZXBlb3BsZS50di9ob21lLXRvcC12aWRlby9zdHJpLXB1cnVzaC10dWxuYS10YXJhYmFpLXNoaW5kZS1maXJzdC0gIGZlbWluaXN0LXRleHQtaW5kaWEvICAgIGh0dHBzOi8vci5zZWFyY2gueWFob28uY29tL195bHQ9QXdyeDBzbUdkNFppeEc4QXBDaTdIQXguO195bHU9WTI5c2J3Tnpaek1FY0c5ekF6RUVkblJwWkEgIE1FYzJWakEzTnkvUlY9Mi9SRT0xNjUzMDA4MzkxL1JPPTEwL1JVPWh0dHBzJTNhJTJmJTJmZmVtaW5pc21pbmluZGlhLmNvbSUyZjIwMTclMmYwNCUyICBmMTQlMmZqb3RpYmEtcGh1bGUtZ3VsYW1naXJpJTJmL1JLPTIvUlM9TXl4dm5Yak1MaElCN29ZZll2ZkZZZzRMcjNVLSAgICBodHRwczovL2VuLmJhbmdsYXBlZGlhLm9yZy9pbmRleC5waHA/dGl0bGU9QmFuZ2xhX0xpdGVyYXR1cmUgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 15,
      "question" : "In the first quarter of the seventeenth  century, in which of the following was/were  the factory/factories of the English East India  Company located?     1. Broach     2. Chicacole     3. Trichinopoly    Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJ5IDFzdCBxdWFydGVyIG9mIDE3dGggY2VudHVyeSwgRW5nbGlzaCBFYXN0IEluZGlhIENvbXBhbnkgaGFkIGVzdGFibGlzaGVkIGZhY3RvcmllcyBhdCBTdXJhdCwgQnJvYWNoLCAgIEFobWVkYWJhZCwgQWdyYSwgYW5kIE1hc3VsaXBhdGFtIGFuZCBub3QgYXQgQ2hpY2Fjb2xlIGFuZCBUaWNob25vcG9seS4gICAgIFRoZSB0aW1lbGluZXMgYXJlICAgICAxNjEzLSBBIHBlcm1hbmVudCBmYWN0b3J5IG9mIHRoZSBlYXN0IEluZGlhIGNvbXBhbnkgaXMgZXN0YWJsaXNoZWQgYXQgU3VyYXQgICAgIDE2MTYtIDFzdCBmYWN0b3J5IGluIHNvdXRoIGF0IE1hc3VsaXBhdG5hbSAgICAgMTYxOS0gU2lyIFRob21hcyBSb2Ugc2V0IHVwIGZhY3RvcmllcyBhdCBBZ3JhLCBBaG1lZGFiYWQsIGFuZCBCcm9hY2guICAgICBTb3VyY2UpIFNwZWN0cnVtIFJldmlzZWQgZWRpdGlvbiBjaGFwdGVyLTMgcGFnZS0zOCwgMzkgICAgIFVQU0MgQ1NFIFByZWxpbXMgMjAyMSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "1 and 2     ",
        "option3" : "3 only     ",
        "option4" : "2 and 3     "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the Azamgarh  Proclamation in the context of the history of  modern India, consider the following  statements:  1. It aimed to set out a manifesto of the  objectives of the 1857 Revolt.  2. It details how the British had economically  ruined each class of people in India.  3. The proclamation is largely secular and  appealed to both Hindus and Muslims.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBBemFtZ2FyaCBQcm9jbGFtYXRpb24sIDI1IEF1Z3VzdCAxODU3IGlzIG9uZSBvZiB0aGUgbWFpbiBzb3VyY2VzIG9mIG91ciAgIGtub3dsZWRnZSBhYm91dCB3aGF0IHRoZSByZWJlbHMgb2YgdGhlIDE4NTcgUmV2b2x0IHdhbnRlZC4gVGhlIG9yaWdpbmFsIGRvY3VtZW50IHdhcyBwdWJsaXNoZWQgaW4gICBVcmR1LiBIb3dldmVyLCBhbiBFbmdsaXNoIHRyYW5zbGF0aW9uIHB1Ymxpc2hlZCBieSB0aGUgQnJpdGlzaCBpbiB0aGUgRGVsaGkgR2F6ZXR0ZSBvbiAyOSBTZXB0ZW1iZXIgMTg1Ny4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJdHMgbWFpbiBhcHBlYWwgaXMgdG8gZWNvbm9taWMgc2VudGltZW50LCBsYXlpbmcgb3V0IGluIGdyZWF0cyBkZXRhaWxzIGhvdyB0aGUgICBCcml0aXNoIGhhZCBydWluZWQgZWFjaCBjbGFzcyBvZiBjaXRpemVuLXphbWluZGFyLCBtZXJjaGFudCwgY2l2aWwgc2VydmFudHMsIHNvbGRpZXJzLCBhcnRpc2FucyBhbmQgZXZlbiB0aGUgICBjbGVyZ3ktYW5kIHByb21pc2luZyB0aGVtIGEgYmV0dGVyIGRlYWwgYWZ0ZXIgdGhlIHJldm9sdXRpb24uICAgIEl0IGlzIHdvcnRod2hpbGUgdG8gbm90ZSB0aGF0IHRoZSBBemFtZ2FyaCBwcm9jbGFtYXRpb24gc2hvd3MgYW4gaW5kaWdlbm91cyBtb2Rlcm5pdHksIHR5aW5nIHRvZ2V0aGVyICAgdGhlIGNvbWJhdGFudHMgb2YgTm9ydGggSW5kaWEgaW4gYSB2ZXJ5IGNvbnRlbXBvcmFyeSBzdHJ1Z2dsZSBmb3Igc29jaWFsLCBlY29ub21pYyBhbmQgcG9saXRpY2FsIGZyZWVkb20uICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBBemFtZ2FyaCBQcm9jbGFtYXRpb24gaXMgbGFyZ2VseSBzZWN1bGFyIGFuZCBkZW1vY3JhdGljIGluIHRvbmUgYXMgaXQgICBhcHBlYWxlZCB0byBib3RoIEhpbmR1cyBhbmQgTXVzbGltcyB3aG8gd2VyZSBiZWluZyBydWluZWQgdW5kZXIgdGhlIHR5cmFubnkgYW5kIG9wcHJlc3Npb24gb2YgdGhlICAgdHJlYWNoZXJvdXMgYW5kIGluZmlkZWwgRW5nbGlzaC4gICBTb3VyY2U6IFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJSSBDaGFwdGVyIDItIFJlYmVscyBhbmQgdGhlIFJhai1UaGUgUmV2b2x0IG9mIDE4NTcgYW5kIEl0cyAgIFJlcHJlc2VudGF0aW9ucyAgIGh0dHA6LyBhcmlraHBhcnRhcmlraC5ibG9nc3BvdC5jb20vMjAxNC8wNSBoZS1hemFtZ2FyaC1wcm9jbGFtYXRpb24tb2YtICAxODU3Lmh0bWw/bT0xIzp+OnRleHQ9Q2FsbGVkJTIwdGhlJTIwQXphbWdhcmglMjBQcm9jbGFtYXRpb24lMjAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following measures were  taken by the British to repress the rebellion of  1857?  1.  The whole of North India was put under  martial law.  2.  Ordinary Britons were given the power to  punish Indians suspected of rebellion.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEJ5IGEgbnVtYmVyIG9mIEFjdHMsIHBhc3NlZCBpbiBNYXkgYW5kIEp1bmUgMTg1NywgdGhlIHdob2xlIG9mIE5vcnRoIEluZGlhIHdhcyAgIHB1dCB1bmRlciBtYXJ0aWFsIGxhdy4gICAgIG9mIDI0ICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE1pbGl0YXJ5IG9mZmljZXJzIGFuZCBldmVuIG9yZGluYXJ5IEJyaXRvbnMgd2VyZSBnaXZlbiB0aGUgcG93ZXIgdG8gdHJ5IGFuZCAgIHB1bmlzaCBJbmRpYW5zIHN1c3BlY3RlZCBvZiByZWJlbGxpb24uIFRoZSBvcmRpbmFyeSBwcm9jZXNzZXMgb2YgbGF3IGFuZCB0cmlhbCB3ZXJlIHN1c3BlbmRlZC4gICBLbm93bGVkZ2UgYmFzZTogVGhlIEJyaXRpc2ggdXNlZCBtaWxpdGFyeSBwb3dlciBvbiBhIGdpZ2FudGljIHNjYWxlLiBCdXQgdGhpcyB3YXMgbm90IHRoZSBvbmx5IGluc3RydW1lbnQgICB0aGV5IHVzZWQuIEluIGxhcmdlIHBhcnRzIG9mIHByZXNlbnQtZGF5IFV0dGFyIFByYWRlc2gsIHdoZXJlIGJpZyBsYW5kaG9sZGVycyBhbmQgcGVhc2FudHMgaGFkIG9mZmVyZWQgICB1bml0ZWQgcmVzaXN0YW5jZSwgdGhlIEJyaXRpc2ggdHJpZWQgdG8gYnJlYWsgdXAgdGhlIHVuaXR5IGJ5IHByb21pc2luZyB0byBnaXZlIGJhY2sgdG8gdGhlIGJpZyAgIGxhbmRob2xkZXJzIHRoZWlyIGVzdGF0ZXMuIFJlYmVsIGxhbmRob2xkZXJzIHdlcmUgZGlzcG9zc2Vzc2VkIGFuZCB0aGUgbG95YWwgcmV3YXJkZWQuICAgU291cmNlOiBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJSUkgQ2hhcHRlciAyLSBSZWJlbHMgYW5kIHRoZSBSYWotVGhlIFJldm9sdCBvZiAxODU3IGFuZCBJdHMgICBSZXByZXNlbnRhdGlvbnMgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following pairs:  Anglo Mysore  wars  Consequences  1. First Anglo- Mysore war  Haidar Ali was defeated  by the combined forces  of Nizams, Marathas  and English.  2. Second  Anglo- Mysore war  Treaty of Madras  3. Third Anglo- Mysore war  Treaty of Seringapatam  4. Fourth  Anglo- Mysore war  Tipu's sons were taken  as hostages by Lord  Cornwallis  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IFRoZSBOaXphbSwgdGhlIE1hcmF0aGFzLCBhbmQgdGhlIEVuZ2xpc2ggYWxsaWVkIHRvZ2V0aGVyIGFnYWluc3QgSGFpZGFyIEFsaS4gSGFpZGFyICAgYWN0ZWQgd2l0aCBjb25zaWRlcmFibGUgdGFjdCBhbmQgZGlwbG9tYXRpYyBza2lsbC4gSGUgcGFpZCB0aGUgTWFyYXRoYXMgdG8gdHVybiB0aGVtIG5ldXRyYWwgYW5kLCAgIHByb21pc2luZyB0byBzaGFyZSBjb25xdWVyZWQgdGVycml0b3JpZXMgd2l0aCB0aGUgTml6YW0uIFRoZSB3YXIgY29udGludWVkIGZvciBhIHllYXItYW5kLWEtICAgaGFsZiB3aXRob3V0IGFueSBjb25jbHVzaW9uLiBFbmdsaXNoIGhhZCB0byBjb25jbHVkZSBhIHZlcnkgaHVtaWxpYXRpbmcgdHJlYXR5IHdpdGggSGFpZGFyIG9uIEFwcmlsIDQsICAgMTc2OS1UcmVhdHkgb2YgTWFkcmFzLiBUaGUgdHJlYXR5IHByb3ZpZGVkIGZvciB0aGUgZXhjaGFuZ2Ugb2YgcHJpc29uZXJzIGFuZCBtdXR1YWwgcmVzdGl0dXRpb24gb2YgICBjb25xdWVzdHMuICAgUGFpciAyIGlzIGluY29ycmVjdDogIEFmdGVyIFNlY29uZCBBbmdsby1NeXNvcmUgd2FyLCBIYWlkYXIgQWxpIGRpZWQgb2YgY2FuY2VyIG9uIERlY2VtYmVyIDcsIDE3ODIuIE5vdyAgIGhpcyBzb24sIFRpcHUgU3VsdGFuLCBjYXJyaWVkIG9uIHRoZSB3YXIgZm9yIG9uZSB5ZWFyIHdpdGhvdXQgYW55IHBvc2l0aXZlIG91dGNvbWUuIEJyaXRpc2ggbWFkZSBwZWFjZSAgIHdhcyBtYWRlIHdpdGggSHlkZXIgQWxpJ3Mgc29uIFRpcHUgU3VsdGFuIGJ5IHRoZSB0cmVhdHkgb2YgTWFuZ2Fsb3JlLiAgICBQYWlyIDMgaXMgY29ycmVjdDogVW5kZXIgdGhpcyB0cmVhdHkgb2YgU2VyaW5nYXBhdGFtICgxNzkyKSwgbmVhcmx5IGhhbGYgb2YgdGhlIE15c29yZWFuIHRlcnJpdG9yeSB3YXMgICB0YWtlbiBvdmVyIGJ5IHRoZSBFbmdsaXNoLiBBIHdhciBkYW1hZ2Ugb2YgdGhyZWUgY3JvcmUgcnVwZWVzIHdhcyBhbHNvIHRha2VuIGZyb20gVGlwdS4gSGFsZiBvZiB0aGUgd2FyICAgaW5kZW1uaXR5IHdhcyB0byBiZSBwYWlkIGltbWVkaWF0ZWx5IHdoaWxlIHRoZSByZXN0IHdhcyB0byBiZSBnaXZlbiBpbiBpbnN0YWxsbWVudHMsIGZvciB3aGljaCBUaXB1J3MgdHdvICAgc29ucyB3ZXJlIHRha2VuIGFzIGhvc3RhZ2VzIGJ5IHRoZSBFbmdsaXNoLiBMb3JkIENvcm53YWxsaXMgd2FzIHRoZSBHb3Zlcm5vci1HZW5lcmFsIGF0IHRoYXQgdGltZS4gICBQYWlyIDQgaXMgaW5jb3JyZWN0OiBUaXB1J3MgdHdvIHNvbnMgd2VyZSB0YWtlbiBhcyBob3N0YWdlcyBieSB0aGUgRW5nbGlzaCBpbiB0aGUgdGhpcmQgQW5nbG8tTXlzb3JlICAgd2FyLiBUaGUgNHRoIEFuZ2xvLU15c29yZSB3YXIgd2FzIHN0YXJ0ZWQgb24gdGhlIHBsZWEgdGhhdCBUaXB1IHdhcyByZWNlaXZpbmcgaGVscCBmcm9tIEZyYW5jZS4gICBCcml0aXNoIHRyb29wcyBzdG9ybWVkIFNlcmluZ2FwYXRhbSBpbiBNYXkgMTc5OS4gVGlwdSBkaWVkIGluIHRoZSBmaWdodGluZyBhbmQgaGlzIHRyb29wcyB3ZXJlIGRlZmVhdGVkLiAgIFNvdXJjZTogIFNwZWN0cnVtIDE3dGggZWRpdGlvbiBDaGFwdGVyLSA1IGV4cGFuc2lvbiBhbmQgY29uc29saWRhdGlvbiBvZiBCcml0aXNoIFBvd2VyIGluIEluZGlhIHBhZ2UtMTAzICAgdG8gMTA2ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2 and 4 only         "
      }
    },
    {
      "index" : 19,
      "question" : "With regards to contributions made by  Henry Derozio, which of the following  statements is/are correct?  1. He demanded the protection of farmers  from oppressive zamindars.  2. His movement 'Young Bengal' gained huge  success as it connected with the masses.  3. His students supported the logic and  arguments of Christian missionaries.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEhlbnJ5IExvdWlzIFZpdmlhbiBEZXJvemlvLCBhIHRlYWNoZXIgYXQgSGluZHUgQ29sbGVnZSwgQ2FsY3V0dGEsIGluIHRoZSAxODIwcywgcHJvbW90ZWQgcmFkaWNhbCBpZGVhcyBhbmQgICBlbmNvdXJhZ2VkIGhpcyBwdXBpbHMgdG8gcXVlc3Rpb24gYWxsIGF1dGhvcml0eS4gUmVmZXJyZWQgdG8gYXMgdGhlIFlvdW5nIEJlbmdhbCBNb3ZlbWVudCwgaGlzIHN0dWRlbnRzICAgYXR0YWNrZWQgdHJhZGl0aW9uIGFuZCBjdXN0b20sIGRlbWFuZGVkIGVkdWNhdGlvbiBmb3Igd29tZW4gYW5kICAgY2FtcGFpZ25lZCBmb3IgdGhlIGZyZWVkb20gb2YgdGhvdWdodCBhbmQgZXhwcmVzc2lvbiAgIFBhaXIgMSBpcyBjb3JyZWN0OiBUaGUgRGVyb3ppYW5zIGNhcnJpZWQgZm9yd2FyZCBSYW1tb2hhbiBSb3kncyB0cmFkaXRpb24gb2YgcHVibGljIGVkdWNhdGlvbiBvbiBzb2NpYWwsICAgZWNvbm9taWMgYW5kIHBvbGl0aWNhbCBxdWVzdGlvbnMuIEZvciBpbnN0YW5jZSwgdGhleSBkZW1hbmRlZCBpbmR1Y3Rpb24gb2YgSW5kaWFucyBpbiBoaWdoZXIgZ3JhZGVzIG9mICAgc2VydmljZXMsIHByb3RlY3Rpb24gb2YgcnlvdHMgZnJvbSBvcHByZXNzaXZlIHphbWluZGFycywgYmV0dGVyIHRyZWF0bWVudCB0byBJbmRpYW4gbGFib3VyIGFicm9hZCBpbiAgIEJyaXRpc2ggY29sb25pZXMsIHJldmlzaW9uIG9mIHRoZSBDb21wYW55J3MgY2hhcnRlciwgZnJlZWRvbSBvZiBwcmVzcyBhbmQgdHJpYWwgYnkganVyeS4gICBQYWlyIDIgaXMgaW5jb3JyZWN0OiBUaGUgRGVyb3ppYW5zIGZhaWxlZCB0byBoYXZlIGEgbG9uZy10ZXJtIGltcGFjdC4gRGVyb3ppbyB3YXMgcmVtb3ZlZCBmcm9tIHRoZSAgIEhpbmR1IENvbGxlZ2UgaW4gMTgzMSBiZWNhdXNlIG9mIGhpcyByYWRpY2FsaXNtLiBJdCBnYWluZWQgbGltaXRlZCBzdWNjZXNzIGR1ZSB0byB0aGUgcHJldmFpbGluZyBzb2NpYWwgICBjb25kaXRpb25zIGF0IHRoYXQgdGltZS4gVGltZSB3YXMgbm90IHJpcGUgZm9yIHRoZSBhZG9wdGlvbiBvZiByYWRpY2FsIGlkZWFzLiBGdXJ0aGVyLCB0aGVyZSB3YXMgbm8gc3VwcG9ydCAgIGZyb20gYW55IG90aGVyIHNvY2lhbCBncm91cCBvciBjbGFzcy4gVGhlIERlcm96aWFucyBsYWNrZWQgYW55IHJlYWwgbGluayB3aXRoIHRoZSBtYXNzZXMuICAgICBvZiAyNCAgICAgICBQYWlyIDMgaXMgY29ycmVjdDogTWFueSBvZiBEZXJvemlvJ3Mgc3R1ZGVudHMgZm91bmQgbG9naWMgYW5kIHN1YnN0YW5jZSBpbiB0aGUgYXJndW1lbnRzIG9mICAgdGhlIENocmlzdGlhbiBtaXNzaW9uYXJpZXMgYWdhaW5zdCBtYW55IHN1cGVyc3RpdGlvdXMgYW5kIGNydWVsIGJlbGllZnMgb2YgdGhlIEhpbmR1cy4gUXVpdGUgYSBudW1iZXIgb2YgICB0aGVtIGluY2x1ZGluZyBEYWtoaW5hcmFuamFuIE11a2hvcGFkaHlheSBhbmQgS3Jpc2huYW1vaGFuIEJhbmR5b3BhZGh5YXkgZXZlbiBsZWZ0IEhpbmR1aXNtIGFuZCAgIGVtYnJhY2VkIENocmlzdGlhbml0eS4gICBTb3VyY2U6ICBTcGVjdHJ1bSBjaGFwdGVyLSA5IEEgZ2VuZXJhbCBzdXJ2ZXkgb2Ygc29jaW8tcmVmb3JtIG1vdmVtZW50cyBwYWdlLTIzNSAgIE91ciBQYXN0cy1JSUkgQ2xhc3MtOCBDaGFwdGVyLTkgcGFnZS0xMjAgICBodHRwczovL2VuLmJhbmdsYXBlZGlhLm9yZy9pbmRleC5waHA/dGl0bGU9WW91bmdfQmVuZ2FsICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 20,
      "question" : "Wellesley established the Fort William  College Calcutta because:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEZvcnQgV2lsbGlhbSBDb2xsZWdlIHdhcyBlc3RhYmxpc2hlZCBvbiAxOCBBdWd1c3QgMTgwMCBieSBMb3JkIFJpY2hhcmQgV2VsbGVzbGV5IHRvIHRyYWluIHRoZSBCcml0aXNoICAgb2ZmaWNpYWxzIHdpdGggdGhlIGxvY2FsIGxhbmd1YWdlLCBjdWx0dXJlcywgbGF3IGFuZCB0cmFkaXRpb25zIHNvIHRoYXQgdGhlaXIgYWRtaW5pc3RyYXRpdmUgd29yayB3b3VsZCAgIGJlY29tZSBlYXNpZXIgYXMgaXQgaW52b2x2ZWQgaW50ZXJhY3Rpb24gd2l0aCB0aGUgSW5kaWFuIG5hdGl2ZXMuICAgICBUaGUgQ291cnQgb2YgRGlyZWN0b3JzIG9mIHRoZSBCcml0aXNoIEVhc3QgSW5kaWEgQ29tcGFueSB3ZXJlIG5vdCBpbiBzdXBwb3J0IG9mIGEgdHJhaW5pbmcgY29sbGVnZSBpbiAgIEtvbGthdGEuIFRoZW4gYSBzZXBhcmF0ZSBDb2xsZWdlIHdhcyBlc3RhYmxpc2hlZCBpbiAxODA3IGluIEVuZ2xhbmQuICAgICBTb3VyY2U6IFVQU0MgQ1NFIFByZWxpbXMgMjAyMCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " He was asked by the Board of Directors in   London to do so.  ",
        "option2" : " He wanted to revive his interest in oriental   learning in India.    ",
        "option3" : " He wanted to provide William Carey and his   associates with employment.  ",
        "option4" : " He wanted to train British civilians for   administrative purposes in India.   "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements  regarding the Singh Sabha movement:   1.  The original founders of the Singh Sabha  movement regarded Sikhs as a part of wider  Hindu society.   2.  It combined modern western education  with Sikh teachings.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTaW5naCBTYWJoYSB3YXMgYTE5dGgtY2VudHVyeSBtb3ZlbWVudCB3aXRoaW4gU2lraGlzbS4gSXQgYmVnYW4gYXMgYSBkZWZlbnNlIGFnYWluc3QgdGhlIHByb3NlbHl0aXppbmcgICBhY3Rpdml0aWVzIG9mIENocmlzdGlhbnMgYW5kIEhpbmR1cy4gSXRzIGNoaWVmIGFpbXMgd2VyZSB0aGUgcmV2aXZhbCBvZiB0aGUgdGVhY2hpbmdzICAgICBvZiB0aGUgU2lraCBHdXJ1cyAoc3Bpcml0dWFsIGxlYWRlcnMpLCB0aGUgcHJvZHVjdGlvbiBvZiByZWxpZ2lvdXMgbGl0ZXJhdHVyZSBpbiBQdW5qYWJpLCBhbmQgYSBjYW1wYWlnbiAgIGFnYWluc3QgaWxsaXRlcmFjeS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlc2UgbW92ZW1lbnRzIHdlcmUgdGhlIHJlZm9ybSBvcmdhbmlzYXRpb25zIG9mIHRoZSBTaWtocywgdGhlIGZpcnN0ICAgU2luZ2ggU2FiaGFzIHdlcmUgZm9ybWVkIGF0IEFtcml0c2FyIGluIDE4NzMgYW5kIGF0IExhaG9yZSBpbiAxODc5LlRoZSBvcmlnaW5hbCBmb3VuZGVycyBvZiB0aGUgU2luZ2ggICBTYWJoYSBtb3ZlbWVudCB3ZXJlIFNhbmF0YW4gb3IgJ3RyYWRpdGlvbmFsJyBTaWtocywgYmVsaWV2aW5nIHRoYXQgdGhlIFBhbnRoIGNlcnRhaW5seSBjb25zaXN0ZWQgb2YgdGhlICAgZm9sbG93ZXJzIG9mIHRoZSBHdXJ1cyBidXQgcmVnYXJkaW5nIGl0IGFzIGEgcGFydCBvZiB3aWRlciBIaW5kdSBzb2NpZXR5LiBUaGVzZSB3ZXJlIG9wcG9zZWQgYnkgYSBtdWNoICAgbW9yZSByYWRpY2FsIG9waW5pb24gY2VudGVyZWQgb24gTGFob3JlLiBUaGUgcmFkaWNhbHMgd2VyZSBTaWtocyBvZiB0aGUgVGF0IEtoYWxzYSwgdGhlICdUcnVlIEtoYWxzYScuIEZvciAgIHRoZSBUYXQgS2hhbHNhIGl0IHdhcyBpbXBvc3NpYmxlIHRvIGJlIGJvdGggYSBIaW5kdSBhbmQgYSBTaWtoLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBTaW5naCBTYWJoYSBsZWFkZXJzIHVuZGVydG9vayBhIG1ham9yIGVmZm9ydCB0byBtYWtlIFNpa2hzIGF3YXJlIG9mIHdoYXQgdGhleSAgIHNhdyBhcyBjb3JyZWN0IGRvY3RyaW5lIGFuZCBwcmFjdGljZSwgdXNpbmcgdGhlIG5ld2x5IGFycml2ZWQgcHJpbnQgY3VsdHVyZSB0byBwcm9wYWdhdGUgU2lraCBoaXN0b3J5IGFuZCAgIGxpdGVyYXR1cmUuIFRoZXNlIGxlYWRlcnMgZW1waGFzaXplZCB0aGUgcmVsaWdpb3VzIHNpZ25pZmljYW5jZSBvZiBsZWFybmluZyBQdW5qYWJpIHdyaXR0ZW4gaW4gICB0aGUgR3VybXVraGkgc2NyaXB0IChkZXZlbG9wZWQgYnkgdGhlIFNpa2hzIGluIEluZGlhIGZvciB0aGVpciBzYWNyZWQgbGl0ZXJhdHVyZSkgd2hpbGUgICBzaW11bHRhbmVvdXNseSBzdHJlc3NpbmcgdGhlIGltcG9ydGFuY2Ugb2YgV2VzdGVybiBlZHVjYXRpb24uICAgIFNvdXJjZTogT3VyIFBhc3RzLUlJSSBjaGFwdGVyLTkgcGFnZS0xMjAgICAgaHR0cDovL2Rpc2NvdmVyc2lraGlzbS5jb20vc2lraGlzbS9zaW5naF9zYWJoYS5odG1sICAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMvU2luZ2gtU2FiaGEgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to British revenue policies  in the Deccan region, consider the following  statements:  1.  The revenue here was directly settled with  the peasants who cultivated the land.  2. The high revenue forced peasants to migrate  to new areas.  3.  The revenue demand was based on the type  of soil and the paying capacity of peasants.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgcmV2ZW51ZSBzeXN0ZW0gdGhhdCB3YXMgaW50cm9kdWNlZCBpbiB0aGUgQm9tYmF5IERlY2NhbiBjYW1lIHRvIGJlICAga25vd24gYXMgdGhlIHJ5b3R3YXJpIHNldHRsZW1lbnQuIFVubGlrZSB0aGUgQmVuZ2FsIHN5c3RlbSwgdGhlIHJldmVudWUgaGVyZSB3YXMgZGlyZWN0bHkgc2V0dGxlZCB3aXRoICAgdGhlIHJ5b3RzLiAgICAgb2YgMjQgICAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHJldmVudWUgdGhhdCB3YXMgZGVtYW5kZWQgd2FzIHNvIGhpZ2ggdGhhdCBpbiBtYW55IHBsYWNlcycgcGVhc2FudHMgICBkZXNlcnRlZCB0aGVpciB2aWxsYWdlcyBhbmQgbWlncmF0ZWQgdG8gbmV3IHJlZ2lvbnMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIHJldmVudWUgZGVtYW5kIGhlcmUgd2FzIGRlY2lkZWQgYmFzZWQgb24gdmFyaW91cyBmYWN0b3JzIC0gdGhlIGF2ZXJhZ2UgICBpbmNvbWUgZnJvbSBkaWZmZXJlbnQgdHlwZXMgb2Ygc29pbCwgdGhlIHJldmVudWUtcGF5aW5nIGNhcGFjaXR5IG9mIHRoZSByeW90cy4gICBTb3VyY2U6IE5DRVJUIENsYXNzIFhJSSBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJSUkgQ2gtMTAgQ29sb25pYWxpc20gYW5kIHRoZSBDb3VudHJ5c2lkZSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements about  the Birsa movement:  1.  It was initiated to drive out Hindu landlords  from the region.   2.  They were against Christian missionaries  who were criticizing their traditional  culture.  3.  It urged the people to stop believing in  witchcraft.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgY29ycmVjdC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgQmlyc2EgbW92ZW1lbnQgd2FzIGluaXRpYXRlZCBieSBhIHRyaWFsIGxlYWRlciBCaXJzYSBNdW5kYSBpbiB0cmliYWwgcmVnaW9ucyBvZiAgIEpoYXJraGFuZC4gSXQgYWltZWQgdG8gZHJpdmUgb3V0IENocmlzdGlhbiBtaXNzaW9uYXJpZXMsIG1vbmV5bGVuZGVycywgSGluZHUgbGFuZGxvcmRzIGZyb20gdGhlaXIgICByZWdpb24uIFRoZSBtb3ZlbWVudCBpZGVudGlmaWVkIGFsbCB0aGVzZSBmb3JjZXMgYXMgdGhlIGNhdXNlIG9mIHRoZSBtaXNlcnkgdGhlIE11bmRhcyB3ZXJlIHN1ZmZlcmluZy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgbGFuZCBwb2xpY2llcyBvZiB0aGUgQnJpdGlzaCB3ZXJlIGRlc3Ryb3lpbmcgdGhlaXIgdHJhZGl0aW9uYWwgbGFuZCBzeXN0ZW0sICAgSGluZHUgbGFuZGxvcmRzIGFuZCBtb25leWxlbmRlcnMgd2VyZSB0YWtpbmcgb3ZlciB0aGVpciBsYW5kLCBhbmQgbWlzc2lvbmFyaWVzIHdlcmUgY3JpdGljaXppbmcgdGhlaXIgICB0cmFkaXRpb25hbCBjdWx0dXJlLiBUaGUgbW92ZW1lbnQgd2FudGVkIHRvIG92ZXJ0aHJvdyB0aGUgZ292ZXJubWVudCBhbmQgc2V0IHVwIGEgTXVuZGEgUmFqIHdpdGggICBCaXJzYSBhdCBpdHMgaGVhZC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgbW92ZW1lbnQgd2FzIGFsc28gYWltZWQgYXQgcmVmb3JtaW5nIHRyaWJhbCBzb2NpZXR5LiBCaXJzYSB1cmdlZCB0aGUgICBNdW5kYXMgdG8gZ2l2ZSB1cCBkcmlua2luZyBsaXF1b3IsIGNsZWFuIHRoZWlyIHZpbGxhZ2UsIGFuZCBzdG9wIGJlbGlldmluZyBpbiB3aXRjaGNyYWZ0IGFuZCBzb3JjZXJ5LiAgIFNvdXJjZTogTkNFUlQgQ2xhc3MtOCBPdXIgcGFzdHMtSUlJIGNoYXB0ZXItNCBUcmliYWxzLCBEaWt1cyBhbmQgdGhlIHZpc2lvbiBvZiBhIGdvbGRlbiBhZ2UgcGFnZS00OCwgNDkgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements with  reference to 'The Servants of India Society':  1. It was founded by Bal Gangadhar Tilak.  2. Its aim was to train national missionaries for  the service of India.  3. 'Hitavada' was the newsletter published by  the Servants of India Society.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTZXJ2YW50cyBvZiBJbmRpYSBTb2NpZXR5IHdhcyBmb3VuZGVkIG9uIDEyIEp1bmUgMTkwNSBieSBHb3BhbCBLcmlzaG5hIEdva2hhbGUgdG8gYnVpbGQgYSBkZWRpY2F0ZWQgICBncm91cCBvZiBwZW9wbGUgZm9yIHNvY2lhbCBzZXJ2aWNlIGFuZCByZWZvcm1zLiBUaGUgZm91bmRpbmcgb2YgdGhpcyBicm90aGVyaG9vZCB3YXMgdGhlIG91dGNvbWUgb2YgICBHb2toYWxlJ3MgY29udmljdGlvbnMgdGhhdCBpZiB0aGUgbWFzc2VzIHdlcmUgdG8gYmUgbGliZXJhdGVkIHRvIGZ1bmN0aW9uIGFzIGFjdGl2ZSBtZW1iZXJzIG9mIGZyZWUgSW5kaWEsICAgdGhleSBtdXN0IGhhdmUgYSBiYW5kIG9mIHNlbGZsZXNzIGFuZCBpbnRlbGxpZ2VudCB3b3JrZXJzIHdobyB3b3VsZCBkZWRpY2F0ZSB0aGVpciBsaXZlcyB0byB0aGUgc2VydmljZSBvZiAgIHRoZSBuYXRpb24uIFRoZXNlIHdvcmtlcnMgbXVzdCB0YWtlIHRoZSB2b3cgb2YgcmVudW5jaWF0aW9uLCBnaXZlIHVwIGFsbCBpZGVhcyBvZiBzZWxmaXNobmVzcywgcHJpZGUsIGZhbWUgICBhbmQgYmUgb25lIHdpdGggdGhlaXIgd29yayBhbmQgZHV0eS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEdvcGFsIEtyaXNobmEgR29raGFsZSAoMTg2Ni0xOTE1KSwgYSBsaWJlcmFsIGxlYWRlciBvZiB0aGUgSW5kaWFuIE5hdGlvbmFsICAgQ29uZ3Jlc3MsIGZvdW5kZWQgdGhlIFNlcnZhbnRzIG9mIEluZGlhIFNvY2lldHkgaW4gMTkwNSB3aXRoIHRoZSBoZWxwIG9mIE0uRy4gUmFuYWRlLiBHb3BhbCBLcmlzaG5hICAgR29raGFsZSdzIHRocmVlIGZyaWVuZHMgLSBOYXRlc2ggQXBwYWppIERyYXZpZCwgR29wYWwgS3Jpc2huYSBEZW9kaGFyIGFuZCBBbmFudCBWaW5heWFrIFBhdHdhcmRoYW4gICBhbHNvIHN1cHBvcnRlZC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIGFpbSBvZiB0aGUgc29jaWV0eSB3YXMgdG8gdHJhaW4gbmF0aW9uYWwgbWlzc2lvbmFyaWVzIGZvciB0aGUgc2VydmljZSBvZiBJbmRpYSAgIHRvIHByZXBhcmUgYSBjYWRyZSBvZiBzZWxmbGVzcyB3b3JrZXJzIHdobyB3ZXJlIHRvIGRldm90ZSB0aGVpciBsaXZlcyB0byB0aGUgY2F1c2Ugb2YgdGhlIGNvdW50cnkgaW4gYSAgIHJlbGlnaW91cyBzcGlyaXQuIFRoZSBzb2NpZXR5IHdvcmtlZCBpbiB0aGUgZmllbGRzIG9mIHByb21vdGlvbiBvZiBlZHVjYXRpb24sIHJlbW92YWwgb2YgdW50b3VjaGFiaWxpdHksICAgcHJvbW90aW9uIG9mIHNhbml0YXRpb24gYW5kIGhlYWx0aGNhcmUgZXRjLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICBGcm9tIDE5MTEsIHRoZSBzb2NpZXR5IGFsc28gcHVibGlzaGVkIGl0cyBuZXdzbGV0dGVyIHRpdGxlZCAnSGl0YXZhZGEnIGluIEVuZ2xpc2ggICB0byBwcm9qZWN0IHRoZSB2aWV3cyBvZiB0aGUgc29jaWV0eSBmcm9tIE5hZ3B1ci4gVGhlIHNvY2lldHkgc3RpbGwgZXhpc3RzIGFuZCBoYXMgaXRzIGhlYWRxdWFydGVycyBpbiBQdW5lLiAgICBTb3VyY2U6IEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWE6IFNwZWN0cnVtOiAyMDIwIEVkaXRpb24sIHBhZ2UgMjMxICAgaHR0cHM6Ly9pbmRpYXRvZ2V0aGVyLm9yZy9zdG9yaWVzLzIwMDIvcmQxMDAyLmh0bSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following statements  correctly explain the impact of the Industrial  Revolution on India during the first half of the  nineteenth century?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIER1cmluZyBNdWdoYWwgUGVyaW9kLCBJbmRpYW4gaGFuZGljcmFmdHMgcHJvZHVjZWQgZXhjZWxsZW50IHF1YWxpdHkgb2YgdGV4dGlsZSBwcm9kdWN0cyBhbmQgYXMgcGVyICAgZXN0aW1hdGVzIG5lYXJseSB0d28gaHVuZHJlZCB2YXJpZXRpZXMgb2YgY290dG9uIGFuZCBzaWxrIGZhYnJpY3Mgd2VyZSBleHBvcnRlZCBmcm9tIEluZGlhLiAgICAgICBvZiAyNCAgICAgICBXaGVuIEluZHVzdHJpYWwgUmV2b2x1dGlvbiB0b29rIHBsYWNlIGluIEVuZ2xhbmQsIEJyaXRhaW4gbmVlZGVkIHJhdyBtYXRlcmlhbHMgZnJvbSBJbmRpYSBhbmQgYSB3aWRlICAgbWFya2V0IGZvciBpdHMgbWFjaGluZS1tYWRlIGdvb2RzLiBUaHVzLCBvd2luZyB0byBpbmR1c3RyaWFsIHJldm9sdXRpb24gY2hlYXAgbWFjaGluZS1tYWRlIGdvb2RzICAgZnJvbSBCcml0YWluIGZsb29kZWQgdGhlIEluZGlhbiBtYXJrZXRzIGFuZCBJbmRpYSBzdXBwbGllZCB0aGUgcmF3IG1hdGVyaWFsIChDb3R0b24pIHRvIEJyaXRhaW4uICAgICBJbmRpYW4gdGV4dGlsZXMgbm93IGhhZCB0byBmYWNlIHN0aWZmIGNvbXBldGl0aW9uIGZyb20gbWFjaGluZS1tYWRlIEVuZ2xpc2ggdGV4dGlsZXMgaW4gdGhlIEV1cm9wZWFuIGFuZCAgIEFtZXJpY2FuIG1hcmtldHMuIEhlYXZ5IGR1dGllcyB3ZXJlIGltcG9zZWQgb24gaW1wb3J0ZWQgSW5kaWFuIHRleHRpbGVzIGluIEJyaXRhaW4uIFRoZSBtYWNoaW5lLW1hZGUgICBjaGVhcCB0ZXh0aWxlcyBvZiBCcml0YWluIHN1Y2Nlc3NmdWxseSBjYXB0dXJlZCB0aGUgQWZyaWNhbiBtYXJrZXRzLiAgICAgVGhlIGZyZWUgdHJhZGUgaW1wb3NlZCBvbiBJbmRpYSB3YXMgaG93ZXZlciBvbmUtc2lkZWQuIEluZGlhbiBnb29kcyB3ZXJlIHN1YmplY3RlZCB0byBoZWF2eSBpbXBvcnQgICBkdXRpZXMgb24gZW50cnkgaW50byBCcml0YWluLiAgICAgU291cmNlOiBVUFNDIENTRSBQcmVsaW1zIDIwMjAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Indian handicrafts were ruined.    ",
        "option2" : " Machines were introduced into the Indian   textile industry in large numbers.    ",
        "option3" : "Railway lines were laid in many parts of the   country.  ",
        "option4" : " Heavy duties were imposed on the imports   of British manufacturers.         "
      }
    },
    {
      "index" : 26,
      "question" : "Which of the following reasons were  responsible for the 'Revolt of 1857' against the  British?  1. The 'Forward policy' of the British on the  Northwest frontier of India.  2. The activities of Christian missionaries  aggravated people's discontentment  towards the British.  3. Introduction of a new system of  administration and land settlement in the  British annexed states.  4. The spread of rumour that the new  cartridges were greased with the fat of cows  and pigs.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlICdGb3J3YXJkIHBvbGljeScgYWR2b2NhdGVkIGJ5IEdvdmVybm9yLUdlbmVyYWwgQXVja2xhbmQgKDE4MzYpIG9uIHRoZSAgIE5vcnRod2VzdCBmcm9udGllciBvZiBJbmRpYSB3YXMgbm90IGEgY2F1c2UgZm9yIHRoZSByZXZvbHQgb2YgMTg1Ny4gVGhlIHBvbGljeSBpbXBsaWVkIHRoYXQgdGhlIENvbXBhbnkgICBnb3Zlcm5tZW50IGluIEluZGlhIGl0c2VsZiBoYWQgdG8gdGFrZSBpbml0aWF0aXZlcyB0byBwcm90ZWN0IHRoZSBib3VuZGFyeSBvZiBCcml0aXNoIEluZGlhIGZyb20gYSBwcm9iYWJsZSAgIFJ1c3NpYW4gYXR0YWNrLiBUaGlzIG9iamVjdGl2ZSB3YXMgdG8gYmUgYWNoaWV2ZWQgZWl0aGVyIHRocm91Z2ggdHJlYXRpZXMgd2l0aCB0aGUgbmVpZ2hib3VyaW5nIGNvdW50cmllcyAgIG9yIGJ5IGFubmV4aW5nIHRoZW0gY29tcGxldGVseS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgQ2hhcnRlciBBY3Qgb2YgMTgxMyBoYWQgYWxsb3dlZCB0aGUgQ2hyaXN0aWFuIG1pc3Npb25hcmllcyB0byBwcmVhY2ggdGhlICAgQmlibGUgaW4gSW5kaWEuIFRoaXMgbGVkIHRvIHJlbGlnaW91cyBjb252ZXJzaW9ucyBhbmQgd2FzIHNlZW4gd2l0aCBzdXNwaWNpb24gYnkgdGhlIGxvY2FsIHBvcHVsYXRpb24gYXMgICBpbnRlcmZlcmVuY2UgaW4gbG9jYWwgcmVsaWdpb25zLiBJdCB3YXMgYWxzbyBhIG1ham9yIGNhdXNlIG9mIHRoZSAxODU3IHJldm9sdC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogT24gYSB2YXJpZXR5IG9mIHBsZWFzLCBsaWtlIG1pc2dvdmVybm1lbnQgYW5kIHRoZSByZWZ1c2FsIHRvIHJlY29nbmlzZSBhZG9wdGlvbiwgICB0aGUgQnJpdGlzaCBhbm5leGVkIG5vdCBvbmx5IEF3YWRoLCBidXQgbWFueSBvdGhlciBraW5nZG9tcyBhbmQgcHJpbmNpcGFsaXRpZXMgbGlrZSBKaGFuc2kgYW5kIFNhdGFyYS4gICBPbmNlIHRoZXNlIHRlcnJpdG9yaWVzIHdlcmUgYW5uZXhlZCwgdGhlIEJyaXRpc2ggaW50cm9kdWNlZCB0aGVpciBvd24gc3lzdGVtIG9mIGFkbWluaXN0cmF0aW9uLCB0aGVpciAgIG93biBsYXdzIGFuZCB0aGVpciBvd24gbWV0aG9kcyBvZiBsYW5kIHNldHRsZW1lbnQgYW5kIGxhbmQgcmV2ZW51ZSBjb2xsZWN0aW9uLiBUaGUgY3VtdWxhdGl2ZSBpbXBhY3QgICBvZiBhbGwgdGhpcyBvbiB0aGUgcGVvcGxlIG9mIE5vcnRoIEluZGlhIHdhcyBwcm9mb3VuZC4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGVyZSB3YXMgYSBydW1vdXIgdGhhdCB0aGUgbmV3IGNhcnRyaWRnZXMgd2VyZSBncmVhc2VkIHdpdGggdGhlIGZhdCBvZiBjb3dzICAgYW5kIHBpZ3MuIFRoZSBydW1vdXIgc3ByZWFkIGxpa2Ugd2lsZGZpcmUgYWNyb3NzIHRoZSBzZXBveSBsaW5lcyBvZiBOb3J0aCBJbmRpYS4gVGhlcmUgd2FzIGFsc28gdGhlICAgcnVtb3VyIHRoYXQgdGhlIEJyaXRpc2ggZ292ZXJubWVudCBoYWQgaGF0Y2hlZCBhIGdpZ2FudGljIGNvbnNwaXJhY3kgdG8gZGVzdHJveSB0aGUgY2FzdGUgYW5kIHJlbGlnaW9uICAgb2YgSGluZHVzIGFuZCBNdXNsaW1zLiBUbyB0aGlzIGVuZCwgdGhlIHJ1bW91cnMgc2FpZCwgdGhlIEJyaXRpc2ggaGFkIG1peGVkIHRoZSBib25lIGR1c3Qgb2YgY293cyBhbmQgICBwaWdzIGludG8gdGhlIGZsb3VyIHRoYXQgd2FzIHNvbGQgaW4gdGhlIG1hcmtldCAgIFNvdXJjZTogTkNFUlQgQ2xhc3MgWElJIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJSSBDaC0xMSBSZWJlbHMgYW5kIHRoZSBSYWogICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements with  reference to social reform movements during  the freedom movement of India:  1. Initially, the social reform movements were  limited to the upper and middle classes.  2. The social reform movements fought  against caste rigidities, but not against  untouchability in society.  3. Revivalist movements believed that western  thinking ruined Indian culture and ethos.  4. Hindu Widows' Remarriage Act, 1856, was  passed to legalize the marriage of widows by  the efforts of Raja Rammohan Roy.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBJbmRpYSBpbiB0aGUgMTl0aCBjZW50dXJ5IHdpdG5lc3NlZCBhIHNlcmllcyBvZiByZWZvcm0gbW92ZW1lbnRzIHVuZGVydGFrZW4gaW4gdmFyaW91cyBwYXJ0cyBvZiB0aGUgICBjb3VudHJ5LiBUaGVzZSBtb3ZlbWVudHMgd2VyZSBvcmllbnRlZCB0b3dhcmQgYSByZXN0cnVjdHVyaW5nIG9mIHRoZSBJbmRpYW4gc29jaWV0eSBhbG9uZyBtb2Rlcm4gICBsaW5lcy4gICBUaGUgaHVtYW5pc3RpYyBpZGVhbHMgb2Ygc29jaWFsIGVxdWFsaXR5IGFuZCB0aGUgZXF1YWwgd29ydGggb2YgYWxsIGluZGl2aWR1YWxzIHdoaWNoIGluc3BpcmVkIHRoZSBuZXdseSAgIGVkdWNhdGVkIG1pZGRsZSBjbGFzcyBpbmZsdWVuY2VkIHRoZSBmaWVsZCBvZiBzb2NpYWwgcmVmb3JtIGluIGEgbWFqb3Igd2F5LiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBzb2NpYWwgcmVmb3JtIG1vdmVtZW50cyB3ZXJlIGxpbmtlZCB0byB0aGUgcmVsaWdpb3VzIHJlZm9ybXMgcHJpbWFyaWx5ICAgYmVjYXVzZSBuZWFybHkgYWxsIHNvY2lhbCBpbGxzIGxpa2UgdW50b3VjaGFiaWxpdHkgYW5kIGdlbmRlci1iYXNlZCBpbmVxdWl0eSBkZXJpdmVkIGxlZ2l0aW1hY3kgZnJvbSAgIHJlbGlnaW9uIGluIG9uZSB3YXkgb3IgdGhlIG90aGVyLiBJbiBsYXRlciB5ZWFycywgdGhvdWdoLCB0aGUgc29jaWFsIHJlZm9ybSBtb3ZlbWVudCBncmFkdWFsbHkgZGlzc29jaWF0ZWQgICBpdHNlbGYgZnJvbSByZWxpZ2lvbiBhbmQgYWRvcHRlZCBhIHNlY3VsYXIgYXBwcm9hY2guIE1vcmVvdmVyLCBlYXJsaWVyIHRoZSByZWZvcm0gbW92ZW1lbnRzIGhhZCBhICAgcmF0aGVyIG5hcnJvdyBzb2NpYWwgYmFzZSwgYmVpbmcgbGltaXRlZCB0byB0aGUgdXBwZXIgYW5kIG1pZGRsZSBjbGFzc2VzIGFuZCB1cHBlciBjYXN0ZXMgd2hvIHRyaWVkIHRvICAgICBvZiAyNCAgICAgICBiYWxhbmNlIHRoZWlyIG1vZGVybmlzZWQgdmlld3MgYW5kIHRoZSBleGlzdGluZyBzb2NpYWwgY29uZGl0aW9ucy4gQnV0IGxhdGVyIG9uLCB0aGUgc29jaWFsIHJlZm9ybSAgIG1vdmVtZW50cyBwZW5ldHJhdGVkIHRoZSBsb3dlciBzdHJhdGEgb2Ygc29jaWV0eSB0byByZXZvbHV0aW9uaXNlIGFuZCByZWNvbnN0cnVjdCB0aGUgc29jaWFsIHNwaGVyZS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEJyb2FkbHksIHRoZSBzb2NpYWwgcmVmb3JtIG1vdmVtZW50cyBoYWQgYSB0d28tcG9pbnQgYWdlbmRhLWZpZ2h0IGZvciB0aGUgICBiZXR0ZXJtZW50IG9mIHN0YXR1cyBvZiB3b21lbiBpbiBzb2NpZXR5IGFuZCBmaWdodCB0byByZW1vdmUgZGlzYWJpbGl0aWVzIGFyaXNpbmcgb3V0IG9mIHVudG91Y2hhYmlsaXR5LiAgIEZvciBleGFtcGxlLCBBcnlhIFNhbWFqIGZvdWdodCB1bnRvdWNoYWJpbGl0eSBhbmQgdGhlIHJpZ2lkaXRpZXMgb2YgdGhlIGhlcmVkaXRhcnkgY2FzdGUgc3lzdGVtIGFuZCAgIHByb21vdGVkIHNvY2lhbCBlcXVhbGl0eSAgIFRoZSByZWZvcm1lcnMgYmFzaWNhbGx5IGFwcGVhbGVkIHRvIHRoZSBkb2N0cmluZXMgb2YgaW5kaXZpZHVhbGlzbSBhbmQgZXF1YWxpdHksIGFuZCBhcmd1ZWQsIHRvIGJvbHN0ZXIgICB0aGVpciBhcHBlYWwsIHRoYXQgdHJ1ZSByZWxpZ2lvbiBkaWQgbm90IHNhbmN0aW9uIGFuIGluZmVyaW9yIHN0YXR1cyB0byB3b21lbi4gICBGcm9tIHRoZSBtaWQtMTl0aCBjZW50dXJ5IG9ud2FyZHMsIG51bWVyb3VzIG9yZ2FuaXNhdGlvbnMgYW5kIGdyb3VwcyBzdWNoIGFzIHRoZSBCcmFobW8gU2FtYWosICAgUHJhcnRoYW5hIFNhbWFqLCBBcnlhIFNhbWFqLCBSYW1ha3Jpc2huYSBNaXNzaW9uLCB0aGUgVGhlb3NvcGhpc3RzLCB0aGUgU29jaWFsIENvbmZlcmVuY2UsIGFuZCAgIGluZGl2aWR1YWxzIHdvcmtlZCB0byBzcHJlYWQgZWR1Y2F0aW9uIGFtb25nIHRoZSB1bnRvdWNoYWJsZXMgYW5kIHJlbW92ZSByZXN0cmljdGlvbnMgaW1wb3NlZCBvbiAgIHRoZW0gZnJvbSBlbnRlcmluZyB0ZW1wbGVzIG9yIHVzaW5nIHBvbmRzLCB0YW5rcywgZXRjLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZXJlIHdlcmUgdHdvIGtpbmRzIG9mIHJlZm9ybSBtb3ZlbWVudHMgaW4gdGhlIDE5dGggY2VudHVyeSBpbiBJbmRpYS4gICAgUmVmb3JtaXN0IG1vdmVtZW50cyByZXNwb25kZWQgd2l0aCB0aGUgdGltZSBhbmQgc2NpZW50aWZpYyB0ZW1wZXIgb2YgdGhlIG1vZGVybiBlcmEgd2hpbGUgUmV2aXZhbGlzdCAgIG1vdmVtZW50cyBzdGFydGVkIHJldml2aW5nIGFuY2llbnQgSW5kaWFuIHRyYWRpdGlvbnMgYW5kIHRob3VnaHRzIGFuZCBiZWxpZXZlZCB0aGF0IHdlc3Rlcm4gdGhpbmtpbmcgICBydWluZWQgSW5kaWFuIGN1bHR1cmUgYW5kIGV0aG9zLiAgIEZvciBleGFtcGxlLCBUaGUgQXJ5YSBTYW1haiBNb3ZlbWVudCwgcmV2aXZhbGlzdCBpbiBmb3JtIHRob3VnaCBub3QgaW4gY29udGVudCwgd2FzIHRoZSByZXN1bHQgb2YgYSAgIHJlYWN0aW9uIHRvIFdlc3Rlcm4gaW5mbHVlbmNlcy4gVml2ZWthbmFuZGEgdHJpZWQgdG8gcmVtb3ZlIGNhc3RlIHJpZ2lkaXRpZXMsIGFuZCB1bnRvdWNoYWJpbGl0eS4gICBUaGUgV2FoYWJpIE1vdmVtZW50IHdhcyBlc3NlbnRpYWxseSBhbiBJc2xhbWljIHJldml2YWxpc3QgbW92ZW1lbnQgdGhhdCBjb25kZW1uZWQgdGhlIFdlc3Rlcm4gICBpbmZsdWVuY2Ugb24gSXNsYW0gYW5kIGFkdm9jYXRlZCBhIHJldHVybiB0byBwdXJlIElzbGFtIGFuZCBzb2NpZXR5IGFzIGl0IHdhcyBpbiB0aGUgQXJhYmlhIG9mIHRoZSAgIFByb3BoZXQncyB0aW1lLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gVGhlIEJyYWhtbyBTYW1haiBoYWQgdGhlIGlzc3VlIG9mIHdpZG93IHJlbWFycmlhZ2UgaGlnaCBvbiBpdHMgYWdlbmRhIGFuZCAgIGRpZCBtdWNoIHRvIHBvcHVsYXJpc2UgaXQuIEJ1dCBpdCB3YXMgbWFpbmx5IGR1ZSB0byB0aGUgZWZmb3J0cyBvZiBQYW5kaXQgSXNod2FyIENoYW5kcmEgVmlkeWFzYWdhciAgICgxODIwLTkxKSwgdGhlIHByaW5jaXBhbCBvZiBTYW5za3JpdCBDb2xsZWdlLCBDYWxjdXR0YSwgdGhhdCB0aGUgSGluZHUgV2lkb3dzJyBSZW1hcnJpYWdlIEFjdCwgMTg1Niwgd2FzICAgcGFzc2VkLiBJdCBsZWdhbGlzZWQgbWFycmlhZ2Ugb2Ygd2lkb3dzIGFuZCBkZWNsYXJlZCBpc3N1ZXMgZnJvbSBzdWNoIG1hcnJpYWdlcyBhcyBsZWdpdGltYXRlLiAgIFZpZHlhc2FnYXIgY2l0ZWQgVmVkaWMgdGV4dHMgdG8gcHJvdmUgdGhhdCB0aGUgSGluZHUgcmVsaWdpb24gc2FuY3Rpb25lZCB3aWRvdyByZW1hcnJpYWdlLiAgIFNvdXJjZTogQSBCcmllZiBIaXN0b3J5IG9mIE1vZGVybiBJbmRpYTogU3BlY3RydW06IDIwMjAgRWRpdGlvbiwgcGFnZSAyMzMtNDMgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to the rebellion led by  Shah Mal in 1857, consider the following  statements:  1.  It was launched as a result of the oppressive  British land revenue system.  2.  Shah Mal formed a 'hall of justice' and  settled local disputes and dispensed  judgments.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcmViZWxsaW9uIGJ5IFNoYWggTWFsIGNvaW5jaWRlZCB3aXRoIHRoZSBsYXJnZXIgcmV2b2x0IG9mIDE4NTcgaW4gdGhlIHJlZ2lvbiBvZiBtb2Rlcm4tZGF5IFV0dGFyICAgUHJhZGVzaC4gVGhleSBzZW50IHN1cHBsaWVzIHRvIHRoZSBzZXBveXMgd2hvIGhhZCBtdXRpbmllZCBpbiBEZWxoaSBhbmQgc3RvcHBlZCBhbGwgb2ZmaWNpYWwgICBjb21tdW5pY2F0aW9uIGJldHdlZW4gQnJpdGlzaCBoZWFkcXVhcnRlcnMgYW5kIE1lZXJ1dC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgcmViZWxsaW9uIHdhcyBsYXVuY2hlZCBhcyBhIHJlc3VsdCBvZiB0aGUgb3BwcmVzc2l2ZSBCcml0aXNoIGxhbmQgcmV2ZW51ZSAgIHN5c3RlbS4gVGhlIHJldmVudWUgZGVtYW5kIHdhcyBoaWdoIGFuZCBpdHMgY29sbGVjdGlvbiBpbmZsZXhpYmxlLiBDb25zZXF1ZW50bHksIGN1bHRpdmF0b3JzIHdlcmUgbG9zaW5nICAgbGFuZCB0byBvdXRzaWRlcnMsIHRvIHRyYWRlcnMgYW5kIG1vbmV5bGVuZGVycyB3aG8gd2VyZSBjb21pbmcgaW50byB0aGUgYXJlYS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBTaGFoIE1hbCBhbHNvIHNldCB1cCBhbiBlZmZlY3RpdmUgbmV0d29yayBvZiBpbnRlbGxpZ2VuY2UuIExvY2FsbHkgYWNrbm93bGVkZ2VkICAgYXMgdGhlIFJhamEsIGhlIHRvb2sgb3ZlciB0aGUgYnVuZ2Fsb3cgb2YgYW4gRW5nbGlzaCBvZmZpY2VyLCB0dXJuZWQgaXQgaW50byBhICdoYWxsIG9mIGp1c3RpY2UnIGFuZCBzZXR0bGVkICAgbG9jYWwgZGlzcHV0ZXMgYW5kIGRpc3BlbnNlZCBqdWRnbWVudHMuICAgU291cmNlOiBOQ0VSVCBDbGFzcyBYSUkgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUlJIENoLTExIFJlYmVscyBhbmQgdGhlIFJhaiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "None   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following Pairs with  reference to Dalit newspapers during the  Freedom struggle and their authors:   Dalit Newspapers  Authors/ Founders  1. Vital Vidhwanasak Gopal Krishna  Walangkar  2. Mooknayak (Leader  of the Voiceless)  Sri Narayana Guru  3. Bahishkrit Bharat Jyotiba Phule  Which of the above pairs is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBEdXJpbmcgc29jaWFsIHJlZm9ybSBtb3ZlbWVudHMsIHdpdGggaW5jcmVhc2luZyBvcHBvcnR1bml0aWVzIG9mIGVkdWNhdGlvbiBhbmQgZ2VuZXJhbCBhd2FrZW5pbmcsICAgdGhlcmUgd2VyZSBzdGlycmluZ3MgYW1vbmcgdGhlIGxvd2VyIGNhc3RlcyB0aGVtc2VsdmVzLiBUaGlzIGF3YWtlbmluZyBncmFkdWFsbHkgICAgICBvZiAyNCAgICAgICBkZXZlbG9wZWQgaW50byBhIHBvd2VyZnVsIG1vdmVtZW50IGluIGRlZmVuY2Ugb2YgdGhlaXIgcmlnaHRzIGFuZCBhZ2FpbnN0IHVwcGVyLWNhc3RlIG9wcHJlc3Npb24uICAgUGFpciAxIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBHb3BhbCBCYWJhIFdhbGFuZ2thciBpcyBjb25zaWRlcmVkIHRvIGJlIGEgcGlvbmVlciBpbiB0aGUgbW92ZW1lbnQgdG8gICB1cGxpZnQgdGhlIHVudG91Y2hhYmxlIHBlb3BsZSBmcm9tIHRoZSBzb2Npby1lY29ub21pYyBvcHByZXNzaW9uIHRoYXQgdGhleSBoYWQgYmVlbiBzdWJqZWN0IHRvIGZvciAgIGFnZXMuIFdhbGFuZ2thciBsYXVuY2hlZCBhIG5ld3NwYXBlciwgdGhlIFZpdGFsIFZpZGh2YW5hc2FrIChEZXN0cm95ZXIgb2YgQnJhaG1hbmljYWwgb3IgQ2VyZW1vbmlhbCAgIFBvbGx1dGlvbikuICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIEluIHRoZSAxOTIwcywgQmFiYXNhaGViIEFtYmVka2FyIHN0YXJ0ZWQgYSBmb3J0bmlnaHRseSBuZXdzcGFwZXIsICAgTW9va25heWFrIChMZWFkZXIgb2YgdGhlIFZvaWNlbGVzcykgaW4gMTkyMC4gSGUgc3RhdGVkIGluIHRoZSBNb29rbmF5YWsgdGhhdCBhIG5hdGlvbmFsaXN0ICAgY29uc2Npb3VzbmVzcyBjb3VsZCBub3QgZGV2ZWxvcCBpZiBzb2NpYWwgZGl2aXNpb25zIHdlcmUgaWdub3JlZC4gVGhlIG5ld3NwYXBlciBwcmVzZW50ZWQgdGhlIHN1ZmZlcmluZ3MgICBvZiB0aGUgdW50b3VjaGFibGVzIGluIHRoZSBjb250ZXh0IG9mIHRoZSBjYXN0ZSBzeXN0ZW0uICAgUGFpciAzIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIEJhYmFzYWhlYiBBbWJlZGthciBmb3JtZWQgdGhlIEJhaHVzaGtyaXQgSGl0YWthcmFuaSBTYWJoYSBpbiAxOTI0ICAgd2l0aCB0aGUgZm9jdXMgYmVpbmcgb24gbW9iaWxpc2luZyB0aGUgbWFzc2VzLiBJdCBtYXJrZWQgdGhlIGJlZ2lubmluZyBvZiBhIG5ldyBzb2Npby1lY29ub21pYyBhbmQgICBwb2xpdGljYWwgbW92ZW1lbnQgc3RyaXZpbmcgdG8gYnJpbmcgYWJvdXQgZXF1YWxpdHkgZm9yIHRoZSBvcHByZXNzZWQgY2xhc3Nlcy4gQW5vdGhlciBuZXdzcGFwZXIgaGUgICBzdGFydGVkIHdpdGggdGhlIGFpbSBvZiBkZWZlbmRpbmcgdGhlIHJpZ2h0cyBvZiB0aGUgZGVwcmVzc2VkIGNsYXNzZXMgd2FzIEJhaGlzaGtyaXQgQmhhcmF0ICgxOTI3KS4gICBTb3VyY2U6ICBBIEJyaWVmIEhpc3Rvcnkgb2YgTW9kZXJuIEluZGlhOiBTcGVjdHJ1bTogMjAyMCBFZGl0aW9uLCBwYWdlIDIxMiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "None   "
      }
    },
    {
      "index" : 30,
      "question" : "With reference to the history of India,  consider the following pairs:   1.  Aurang - In-charge of the treasury of the  State    2.  Banian - Indian agent of the East India  Company    3. Mirasidar - Designated revenue payer to the  State    Which of the pairs given above is/are correctly  matched?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgUGFpciAxIGlzIGluY29ycmVjdC4gQXVyYW5nIHdhcyBhIFBlcnNpYW4gdGVybSBmb3IgYSB3YXJlaG91c2UuICAgICBQYWlyIDIgaXMgY29ycmVjdC4gQmFuaWFucyBhY3RlZCBhcyBpbnRlcm1lZGlhcmllcyBmb3IgRXVyb3BlYW4gbWVyY2hhbnRzIGluIEJlbmdhbC4gICAgIFBhaXIgMyBpcyBjb3JyZWN0LiBVbmRlciB0aGUgUnlvdHdhcmkgc2V0dGxlbWVudCBzeXN0ZW0sIHRoZSBjb21wYW55IHJlY29nbml6ZWQgbWlyYXNpZGFycyBhcyB0aGUgc29sZSAgIHByb3ByaWV0b3JzIG9mIGxhbmQsIGRpc21pc3NpbmcgdGVuYW50cycgcmlnaHRzIGNvbXBsZXRlbHkuICAgIFNvdXJjZTogVVBTQyBDU0UgUHJlbGltcyAyMDIwICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only    ",
        "option3" : "3 only    ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to the colonial history of  modern India, who were the Lathiyals?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCBhIGlzIGNvcnJlY3Q6IExhdGhpeWFscyB3ZXJlIHRoZSBzdHJvbmcgbWVuIGhpcmVkIGJ5IHRoZSB6YW1pbmRhcnMsIG1vbmV5bGVuZGVycyBvciAgIHBsYW50YXRpb24gb3duZXJzIHRvIHNjYXJlIHBlYXNhbnRzIGludG8gc3VibWlzc2lvbiBvbiB2YXJpb3VzIG1hdHRlcnMuIFRoZXkgd291bGQgYmVhdCBwZWFzYW50cyBhbmQgICBraWRuYXAgdGhlaXIgd2l2ZXMgYW5kIGNoaWxkcmVuIGluIG9yZGVyIHRvIGNvZXJjZSB0aGVtIHRvIGN1bHRpdmF0ZSBpbmRpZ28gaW5zdGVhZCBvZiBmb29kIGNyb3BzLCBmb3IgdGhlICAgc29sZSBiZW5lZml0IG9mIEV1cm9wZWFuIHBsYW50ZXJzLiAgIFN0YXRlbWVudCBiIGlzIGluY29ycmVjdDogUmVzaWRlbnRzIHdlcmUgdGhlIGFnZW50cyBvZiB0aGUgRWFzdCBJbmRpYSBDb21wYW55IHBvc3RlZCBpbiB0aGUgQ291cnQgb2YgYSAgIFByaW5jZWx5IFN0YXRlLiBUaGV5IHdvdWxkIHJlbGF5IHRoZSBkZXZlbG9wbWVudHMgaW5zaWRlIHRoZSBQcmluY2VseSBTdGF0ZSB0byB0aGUgQnJpdGlzaCwgYW5kIGFjdCBhcyBhICAgY29vcmRpbmF0aW5nIGxpYWlzb24gYmV0d2VlbiB0aGUgQ29tcGFueSBhbmQgdGhlIFByaW5jZS4gICBTdGF0ZW1lbnQgYyBpcyBpbmNvcnJlY3Q6IFRoZSBHb21hc3RoYXMgd2VyZSB0aGUgQnJpdGlzaCBFYXN0IEluZGlhIENvbXBhbnkncyBhZ2VudHMsIHdobyBzaWduZWQgICBhZ3JlZW1lbnRzIHdpdGggdGhlIGFydGlzYW5zIGFuZCB3ZWF2ZXJzIHRvIHN1cHBseSBnb29kcyB0byB0aGUgZmlybS4gICAgVGhleSBzZXQgdGhlIGNvc3Qgb2YgdGhlIHByb2R1Y3RzIGFuZCBnYXRoZXIgdGhlIHN1cHBsaWVzLiBHb21hc3RoYXMgd2VyZSBhcHBvaW50ZWQgYnkgdGhlIGdvdmVybm1lbnQuICAgVGhleSBzdXBlcnZpc2VkIHRoZSB3ZWF2ZXJzLiAgIFN0YXRlbWVudCBkIGlzIGluY29ycmVjdDogVGhhbmVkYWFyIHdhcyB0aGUgbG93ZXItbGV2ZWwgcG9saWNlIG9mZmljZXIgaW4gY2hhcmdlIG9mIGEgZ3JvdXAgb2YgdmlsbGFnZXMgICAodGhhbmEpIHVuZGVyIHRoZSBuZXcgbGF3IGVuZm9yY2VtZW50IHN5c3RlbSBvZiB0aGUgQ29tcGFueS4gSGUgd2FzIGJlbG93IHRoZSBjb250cm9sIG9mIHRoZSAgIFN1cGVyaW50ZW5kZW50IG9mIFBvbGljZSwgYW5kIHdhcyBnZW5lcmFsbHkgYSBsb2NhbC4gICBTb3VyY2U6IE5DRVJUIENsYXNzIDh0aCBIaXN0b3J5IC0gT3VyIFBhc3RzIElJSSBQYXJ0IEksIENoLTM7ICAgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEgYnkgU3BlY3RydW0uICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Men hired by the zamindars and   moneylenders to scare peasants into   submission on various matters.  ",
        "option2" : " Agents of the East India Company posted in   the Court of a Princely State.  ",
        "option3" : " British East India Company's agents, who   signed agreements with the artisans and   weavers to supply goods.  ",
        "option4" : " A lower-level police officer in charge of a   group of villages for the law enforcement.         "
      }
    },
    {
      "index" : 32,
      "question" : "Which of the following was/were the  purpose of the East India Company behind  introducing new systems of revenue  administration in India?  1. Improvement in the system of agriculture.  2. Raising money for the proper administration  of Indian subjects.  3. Maximization and stabilization of revenues  from land.   4. Decreasing profits from merchant activities  of the Company.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "ICAgb2YgMjQgICAgICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSW5jZW50aXZlcyB3ZXJlIGdpdmVuIGJ5IHRoZSBCcml0aXNoIHRvIGltcHJvdmUgYWdyaWN1bHR1cmUgZm9yIGluY3JlYXNpbmcgdGhlICAgcmVzdWx0YW50IHJldmVudWVzLiAgICBBZnRlciB0aGUgZ3JhbnQgb2YgRGl3YW5pIG9mIEJlbmdhbCB0byB0aGUgQ29tcGFueSwgcmV2ZW51ZSBmYXJtaW5nIHN5c3RlbSAoZXh0cmFjdGlvbiBvZiBtYXhpbXVtICAgcmVudCB3aXRob3V0IGFueSBsYW5kLyBwcm9kdWN0aXZpdHkgYXNzZXNzbWVudCksIGxlZnQgdGhlIHBlYXNhbnRzIGluIHZlcnkgcG9vciBjb25kaXRpb24uIEFsc28gZHVlIHRvICAgbGFjayBvZiB0ZWNobmljYWwgYWR2YW5jZW1lbnRzLCBhZ3JpY3VsdHVyZSB3YXMgdXNpbmcgb3V0bW9kZWQgaW1wbGVtZW50cyBhbmQgaW5wdXRzLiBTbywgdGhlICAgcmV2ZW51ZSByZWNlaXZlZCBieSB0aGUgQ29tcGFueSBmbHVjdHVhdGVkIGhlYXZpbHkgY2F1c2luZyB0aGVtIGZpbmFuY2lhbCB0cm91Ymxlcy4gICBUaHVzLCB0aGUgQnJpdGlzaCBkZWNpZGVkIHRvIHB1dCBpbiBwbGFjZSBhIHByb3BlciByZXZlbnVlIGFkbWluaXN0cmF0aW9uIHN5c3RlbSwgd2hlcmUgZGVtYW5kcyB3b3VsZCAgIGJlIGJhc2VkIG9uIHByb3BlciBtZWFzdXJlbWVudCBhbmQgYXNzZXNzbWVudCwgYW5kIHdvdWxkIGxlYXZlIHRoZSB6YW1pbmRhcnMgYW5kIHBlYXNhbnRzIHdpdGggICBzdWZmaWNpZW50IHJlc291cmNlcyBhbmQgaW5jZW50aXZlcyB0byBpbXByb3ZlIGFncmljdWx0dXJlIGFuZCB0aGUgcmVzdWx0YW50IHJldmVudWVzIGFzIHdlbGwuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgQ29tcGFueSwgZGVzcGl0ZSBnZXR0aW5nIERpd2FuaSByaWdodHMgb3Igc292ZXJlaWduIHJpZ2h0cyBvdmVyIG1vcmUgYW5kICAgbW9yZSB0ZXJyaXRvcmllcyBpbiBJbmRpYSwgc3RpbGwgdGhvdWdodCBvZiBpdHNlbGYgYXMgYSB0cmFkZXIgYW5kIG5vdCBhbiBhZG1pbmlzdHJhdG9yLiBBbHNvIGJlaW5nIGZvcmVpZ24sICAgdGhleSBkaWQgbm90IGNhcmUgYWJvdXQgdGhlIHdlbGZhcmUgb2YgdGhlIG5hdGl2ZXMuIFRoZXkgd2FudGVkIHRoZSByZXZlbnVlcyBvbmx5IHRvIGtlZXAgdGhlaXIgZWRnZSAgIG92ZXIgb3RoZXIgdHJhZGluZyBjb21wYW5pZXMgYW5kIHRvIHByb3RlY3QgdGhlbXNlbHZlcyBmcm9tIG5hdGl2ZSByZWJlbGxpb25zIGFuZCB3aGF0ZXZlciBvdGhlciBuYXRpdmUgICBraW5nZG9tcyBvciB0aGF0IHdlcmUgc3RpbGwgZXhpc3RpbmcsIHdoaWxlIGluY3JlYXNpbmcgdGhlaXIgcHJvZml0cy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBSZXZlbnVlIEZhcm1pbmcgaGFkIHNob3duIHRoYXQgdGhlIHJldmVudWUgY29sbGVjdGlvbnMgZmx1Y3R1YXRlZCBoZWF2aWx5ICAgKGJlY2F1c2UgdGhlcmUgd2FzIG5vIHByZS1leGlzdGluZyBhZ3JlZW1lbnQgYW5kIG5vIHBlbmFsdHkgb3IgbGlhYmlsaXR5IG9mIEluZGlhbiBhZ2VudHMgY29sbGVjdGluZyB0aGUgICByZXZlbnVlKSBjYXVzaW5nIHByb2JsZW1zIGZvciB0aGUgQ29tcGFueSB3aGljaCB3YW50ZWQgc3RhYmxlIGFuZCBwcmVkaWN0YWJsZSBlYXJyaW5ncyByZWd1bGFybHkuIFNvLCAgIHRoZXkgY3JlYXRlZCBuZXcgcmVndWxhciBzeXN0ZW1zIHdpdGggcHJlLWFncmVlZCBkdWVzIGFuZCBwZW5hbHRpZXMgc28gdGhhdCB0aGV5IHdlcmUgYXNzdXJlZCBvZiAgIHRoZWlyIGVhcm5pbmdzLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IFRoZSBjaGFuZ2UgaW4gQnJpdGlzaCBwb2xpY3kgb2YgYWxsb3dpbmcgb3RoZXIgYnVzaW5lc3NlcyBpbiBFbmdsYW5kIHRvIGVudGVyICAgSW5kaWEgYXMgd2VsbCAodW5kZXIgcHJlc3N1cmUgZnJvbSB0aGUgbmV3bHkgcmljaCBhbmQgcG93ZXJmdWwgaW5kdXN0cmlhbCBjbGFzcyBsb29raW5nIGZvciBuZXcgbWFya2V0cyksICAgZXJvZGVkIEVhc3QgSW5kaWEgQ29tcGFueSdzIG1vbm9wb2x5LiAgIFRoaXMgbGV0IG90aGVyIEJyaXRpc2ggYnVzaW5lc3NlcyB0byBjb21wZXRlIGxlYWRpbmcgdG8gZmFsbGluZyByZXZlbnVlcyBmcm9tIHRyYWRpbmcgYWN0aXZpdGllcy4gU28gbm93ICAgYWdyaWN1bHR1cmFsIHJldmVudWUgd2FzIGFsbCB0aGUgc291cmNlIG9mIGluY29tZSB0aGUgQ29tcGFueSBoYWQgYW5kIGl0IHdhbnRlZCB0byBtYXhpbWl6ZSBpdCBieSAgIHJlZ3VsYXJpc2luZyB0aGUgc3lzdGVtIHdoaWNoIHdhcyBwcmV2aW91c2x5IGFkIGhvYy4gICBTb3VyY2U6IE5DRVJUIENsYXNzIDh0aCBIaXN0b3J5IE91ciBQYXN0cyBJSUkgUGFydCBJLCBDaC0zICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following pairs:  1857 Revolt Leader  Region  1. Kunwar Singh  Rajasthan  2. Khan Bahadur Chotanagpur  3. Nana Saheb Kanpur  4. Maulvi  Ahmadullah  Shah   Faizabad   Which of the above pairs are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBJbiBCaWhhciAobm90IFJhamFzdGhhbiksIHRoZSByZXZvbHQgd2FzIGxlZCBieSBLdW53YXIgU2luZ2gsIHRoZSAgIHphbWluZGFyIG9mIEphZ2Rpc2hwdXIuICAgIFBhaXIgMiBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBLaGFuIEJhaGFkdXIgZm9ybWVkIGhpcyBvd24gZ292ZXJubWVudCBpbiBCYXJlaWxseSBpbiB0aGUgMTg1NyBJbmRpYW4gICByZXZvbHQgYWdhaW5zdCB0aGUgQnJpdGlzaCBydWxlLiBEdXJpbmcgdGhlIEluZGlhbiBSZWJlbGxpb24gb2YgMTg1NywgQmFyZWlsbHksIHRvbywgd2FzIGNhcHR1cmVkIGJ5IHRoZSAgIEJyaXRpc2guICAgUGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBJbiBKdW5lIDE4NTcsIE5hbmEgU2FoZWIgYW5kIHRoZSBzZXBveXMgaGUgbGVkIGF0dGFja2VkIHRoZSBCcml0aXNoICAgZW50cmVuY2htZW50IGF0IEthbnB1ciBhbmQgY2FwdHVyZWQgaXQuICAgUGFpciA0IGlzIGNvcnJlY3RseSBtYXRjaGVkLiBNYXVsdmkgQWhtYWR1bGxhaCBTaGFoIG9yIE1hdWxhdmkgb2YgRmFpemFiYWQsIHdhcyBvbmUgb2YgdGhlIGxlYWRpbmcgICBmaWd1cmVzIG9mIHRoZSBncmVhdCBJbmRpYW4gcmV2b2x0IG9mIDE4NTcuIEluIHRoZSBBd2FkaCByZWdpb24sIE1hdWxhdmkgQWhtYWR1bGxhaCBTaGFoIHdhcyBrbm93biBhcyAgIHRoZSAnTGlnaHRob3VzZSBvZiBSZWJlbGxpb24nLiAgIER1cmluZyB0aGUgZnJlZWRvbSBzdHJ1Z2dsZSwgTWF1bGF2aSBtYWRlIEZhaXphYmFkIHRoZSBjZW50cmUgYW5kIGxhdW5jaGVkIHJldm9sdHMgaW4gYWxsIG9mIHRoZSBBd2FkaCAgIHJlZ2lvbi4gICBLbm93bGVkZ2UgQmFzZTogICAgT3RoZXIgQ2VudHJlcyBvZiBSZXZvbHQgYW5kIExlYWRlcnMtICAgRGVsaGkgLSBHZW5lcmFsIEJha2h0IEtoYW4gICBMdWNrbm93IC0gQmVndW0gSGF6cmF0IE1haGFsICAgICBvZiAyNCAgICAgICBKaGFuc2kgLSBSYW5pIExheG1pYmFpICAgU291cmNlOiBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJSUkgQ2hhcHRlciAyLSBSZWJlbHMgYW5kIHRoZSBSYWotVGhlIFJldm9sdCBvZiAxODU3IGFuZCBJdHMgICBSZXByZXNlbnRhdGlvbnMgICBTcGVjdHJ1bSwgbW9kZXJuIEluZGlhLCBDaGFwdGVyLVRoZSBSZXZvbHQgb2YgMTg1NywgcGFnZSBuby0xNzUgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 34,
      "question" : "With reference to Lottery Committee  during the British Rule, consider the following  statements:  1. It was setup by Lord Ripon for town  planning.   2. For town improvement, it raised funds  through public lotteries.  3. Clearing the river bank of encroachments  was among the major activities of the  Committee.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTG90dGVyeSBDb21taXR0ZWUgd2VyZSBub3Qgc2V0IHVwIGJ5IExvcmQgUmlwb24uIFRoZSBMb3R0ZXJ5IENvbW1pdHRlZSB3YXMgICBzZXQgdXAgaW4gMTgxNyBhZnRlciB0aGUgZGVwYXJ0dXJlIG9mIExvcmQgV2VsbGVzbGV5LiBBZnRlciBXZWxsZXNsZXkncyBkZXBhcnR1cmUsIHRoZSB3b3JrIG9mIHRvd24gICBwbGFubmluZyB3YXMgY2FycmllZCBvbiBieSB0aGUgTG90dGVyeSBDb21taXR0ZWUgKDE4MTcpIHdpdGggdGhlIGhlbHAgb2YgdGhlIGdvdmVybm1lbnQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBMb3R0ZXJ5IENvbW1pdHRlZSB3YXMgc28gbmFtZWQgYmVjYXVzZSBmdW5kcyBmb3IgdG93biBpbXByb3ZlbWVudCAgIHdlcmUgcmFpc2VkIHRocm91Z2ggcHVibGljIGxvdHRlcmllcy4gSW4gb3RoZXIgd29yZHMsIGluIHRoZSBlYXJseSBkZWNhZGVzIG9mIHRoZSBuaW5ldGVlbnRoIGNlbnR1cnkgICByYWlzaW5nIGZ1bmRzIGZvciB0aGUgY2l0eSB3YXMgc3RpbGwgdGhvdWdodCB0byBiZSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgcHVibGljIG1pbmRlZCBjaXRpemVucyBhbmQgbm90ICAgZXhjbHVzaXZlbHkgdGhhdCBvZiB0aGUgZ292ZXJubWVudC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBbW9uZyB0aGUgQ29tbWl0dGVlJ3MgbWFqb3IgYWN0aXZpdGllcyB3YXMgcm9hZCBidWlsZGluZyBpbiB0aGUgSW5kaWFuIHBhcnQgb2YgICB0aGUgY2l0eSBhbmQgY2xlYXJpbmcgdGhlIHJpdmVyIGJhbmsgb2YgJ2VuY3JvYWNobWVudHMnLiAgIEtub3dsZWRnZSBiYXNlOiBUaGUgTG90dGVyeSBDb21taXR0ZWUgKDE4MTcpIGFzc2lzdGVkIHRoZSBnb3Zlcm5tZW50IGluIHRoZSB0YXNrIG9mIHRvd24gcGxhbm5pbmcgaW4gICBDYWxjdXR0YS4gSW4gaXRzIGRyaXZlIHRvIG1ha2UgdGhlIEluZGlhbiBhcmVhcyBvZiBDYWxjdXR0YSBjbGVhbmVyLCB0aGUgY29tbWl0dGVlIHJlbW92ZWQgbWFueSBodXRzIGFuZCAgIGRpc3BsYWNlZCB0aGUgbGFib3VyaW5nIHBvb3IsIHdobyB3ZXJlIG5vdyBwdXNoZWQgdG8gdGhlIG91dHNraXJ0cyBvZiBDYWxjdXR0YS4gICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJSSBUaGVtZSAxMiBDb2xvbmlhbCBDaXRpZXMtVXJiYW5pc2F0aW9uLCBQbGFubmluZyAgIGFuZCBBcmNoaXRlY3R1cmUuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 35,
      "question" : "What was the purpose with which Sir  William Wedderburn and W.S. Caine had set up  the Indian Parliamentary Committee  in 1893?            ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgVGhlIEJyaXRpc2ggQ29tbWl0dGVlIG9mIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyB3YXMgZm91bmRlZCBpbiAxODg5IGJ5IFNpciBXaWxsaWFtIFdlZGRlcmJ1cm4gYXMgICBDaGFpcm1hbiBhbmQgV2lsbGlhbSBEaWdieSBhcyBpdCdzIHNlY3JldGFyeSB0byBhY2hpZXZlIHBvbGl0aWNhbCByZWZvcm1zIGluIEluZGlhIGJ5IGdhdGhlcmluZyBzdXBwb3J0ICAgZnJvbSBCcml0aXNoIHB1YmxpYy4gRGFkYWJoYWkgTmFyb2ppIGFuZCBXLlMuQ2FpbmUgd2VyZSBzb21lIG9mIGl0cyBpbXBvcnRhbnQgbWVtYmVycy4gU2lyIFdpbGxpYW0gICBXZWRkZXJidXJuIGVudGVyZWQgSG91c2Ugb2YgQ29tbW9ucyBpbiBCcml0aXNoIFBhcmxpYW1lbnQgaW4gMTg5MyBhcyBhIExpYmVyYWwgbWVtYmVyLiAgICAgIFRoZSBCcml0aXNoIENvbW1pdHRlZSBvZiBJbmRpYW4gTmF0aW9uYWwgQ29uZ3Jlc3MgZGVjaWRlZCB0byBjYXJyeSBJbmRpYW4gUHJvcGFnYW5kYSBvbiB0aHJlZSBmcm9udHM6ICAgICAxKSBJbiBIb3VzZSBvZiBDb21tb24gYnkgb3JnYW5pc2luZyB0aGUgSW5kaWFuIFBhcmxpYW1lbnRhcnkgQ29tbWl0dGVlICAgICAyKSBPbiBwbGF0Zm9ybSwgYnkgYXJyYW5naW5nIG1lZXRpbmdzIGFuZCBsZWN0dXJlcyAgICAgMykgSW4gdGhlIHByZXNzLCBieSBmb3VuZGluZyB0aGUgam91cm5hbCAnSW5kaWEnICAgICBUaGUgcm9sZSBvZiBTaXIgV2lsbGlhbSBXZWRkZXJidXJuIGFuZCBXLlMuIENhaW5lIHdlcmUgaW5zdHJ1bWVudGFsIGluIHNldHRpbmcgdXAgdGhlIEluZGlhbiAgIFBhcmxpYW1lbnRhcnkgQ29tbWl0dGVlIGluIDE4OTMuIFdlZGRlcmJ1cm4gcGxheWVkIGEga2V5IHJvbGUgaW4gcGFzc2luZyB0aGUgcmVzb2x1dGlvbiBmb3IgICBzaW11bHRhbmVvdXNseSBjb25kdWN0aW5nIENpdmlsIFNlcnZpY2VzIEV4YW0gaW4gSW5kaWEuICAgICBTb3VyY2U6IFVQU0MgQ1NFIFByZWxpbXMgIDIwMTEgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " To agitate for Indian political reforms in the   House of Commons.     ",
        "option2" : " To campaign for the entry of Indians into the   Imperial Judiciary.     ",
        "option3" : " To facilitate a discussion on India's   Independence in the British Parliament.     ",
        "option4" : " To agitate for the entry of eminent Indians   into the British Parliament.   "
      }
    },
    {
      "index" : 36,
      "question" : "Which among the following is/are the  reason for regulating the East India Company  trade in India by the British Parliament in the  18th century?  1. The opening Indian market for British  manufactures  2. Maladministration by company officials  3. For conquering more territories of India  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBGcm9tIHRoZSB0aW1lIHRoZSBDb21wYW55IGVzdGFibGlzaGVkIGl0cyBydWxlIGluIEJlbmdhbCBpbiB0aGUgbWlkLTE3NjBzLCBpdHMgYWN0aXZpdGllcyB3ZXJlIGNsb3NlbHkgICB3YXRjaGVkIGFuZCBkZWJhdGVkIGluIEVuZ2xhbmQuIFRoZSBCcml0aXNoIFBhcmxpYW1lbnQgcGFzc2VkIGEgc2VyaWVzIG9mIEFjdHMgaW4gdGhlIGxhdGUgMTh0aCBjZW50dXJ5IHRvICAgcmVndWxhdGUgYW5kIGNvbnRyb2wgQ29tcGFueSBydWxlIGluIEluZGlhIGJlY2F1c2Ugb2YgdGhlIGZvbGxvd2luZyByZWFzb25zOiAgICAgb2YgMjQgICAgICAgMSkgVGhlcmUgd2VyZSBtYW55IGdyb3VwcyBpbiBCcml0YWluIHdobyB3ZXJlIG9wcG9zZWQgdG8gdGhlIG1vbm9wb2x5IHRoYXQgdGhlIEVhc3QgSW5kaWEgQ29tcGFueSAgIGhhZCBvdmVyIHRyYWRlIHdpdGggSW5kaWEgYW5kIENoaW5hLiBUaGVzZSBncm91cHMgd2FudGVkIGEgcmV2b2NhdGlvbiBvZiB0aGUgUm95YWwgQ2hhcnRlciB0aGF0IGdhdmUgICB0aGUgQ29tcGFueSB0aGlzIG1vbm9wb2x5LiAgICAyKSBBbiBpbmNyZWFzaW5nIG51bWJlciBvZiBwcml2YXRlIHRyYWRlcnMgd2FudGVkIGEgc2hhcmUgaW4gdGhlIEluZGlhIHRyYWRlLCBhbmQgdGhlIGluZHVzdHJpYWxpc3RzIG9mICAgQnJpdGFpbiB3ZXJlIGtlZW4gdG8gb3BlbiB1cCB0aGUgSW5kaWFuIG1hcmtldCBmb3IgQnJpdGlzaCBtYW51ZmFjdHVyZXJzLiBIZW5jZSwgU3RhdGVtZW50IDEgaXMgICBjb3JyZWN0LiAgIDMpIE1hbnkgcG9saXRpY2FsIGdyb3VwcyBhcmd1ZWQgdGhhdCB0aGUgY29ucXVlc3Qgb2YgQmVuZ2FsIHdhcyBiZW5lZml0aW5nIG9ubHkgdGhlIEVhc3QgSW5kaWEgICBDb21wYW55IGJ1dCBub3QgdGhlIEJyaXRpc2ggbmF0aW9uIGFzIGEgd2hvbGUuIEZ1cnRoZXIsIGluZm9ybWF0aW9uIGFib3V0IENvbXBhbnkgbWlzcnVsZSBhbmQgICBtYWxhZG1pbmlzdHJhdGlvbiB3YXMgaG90bHkgZGViYXRlZCBpbiBCcml0YWluIGFuZCBpbmNpZGVudHMgb2YgdGhlIGdyZWVkIGFuZCBjb3JydXB0aW9uIG9mICAgQ29tcGFueSBvZmZpY2lhbHMgd2VyZSB3aWRlbHkgcHVibGljaXNlZCBpbiB0aGUgcHJlc3MuIEhlbmNlLCBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgIENvbnF1ZXJpbmcgbW9yZSB0ZXJyaXRvcmllcyBvZiBJbmRpYSB3YXMgbm90IHRoZSByZWFzb24gZm9yIGJyaW5nIGluIHNlcmllcyBvZiBhY3RzIGluIGxhdGUgMTh0aCBjZW50dXJ5LiAgIEl0IG9ubHkgZ2FpbmVkIG1vbWVudHVtIGluIDE5dGggY2VudHVyeSB3aGVuIHRoZSBCcml0aXNoIGZhY2VkIHJlc2lzdGFuY2UgZnJvbSBsb2NhbCBwb3dlcnMuIEhlbmNlLCAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gICBTb3VyY2U6IFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeS1JSUksIE5DRVJUIFhJSSwgQ2hhcHRlci0xLCBQZy4gMjYzLTI2NCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements with  reference to the Santhal movement during the  freedom movement of India:  1. The British settled the Paharia community  exclusively in Damin-I-Koh which alienated  Santhals.  2. The Permanent Settlement Act of 1793  alienated lands from the Santhals.  3. Dikus were the leaders of the Santhal  movement who fought against the British.  4. The British government later enacted a  separate district to conciliate Santhals.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFNhbnRoYWxzIHdlcmUgdGhlIGFncmljdWx0dXJhbCBwZW9wbGUgc2V0dGxlZCBpbiBSYWptYWhhbCBIaWxscyBvZiB0aGVuIEJpaGFyLiBUaGV5IGFyZSBuYXRpdmUgdG8gdGhlIEluZGlhbiAgIHN0YXRlcyBvZiBwcmVkb21pbmFudGx5IEpoYXJraGFuZCwgV2VzdCBCZW5nYWwgYW5kIE9kaXNoYS4gICBUaGUgU2FudGhhbHMgcmViZWxsZWQgYWdhaW5zdCB0aGUgQnJpdGlzaCBiZWNhdXNlIHRoZXkgZmVsdCB0aHJlYXRlbmVkIGJ5IHRoZSBCcml0aXNoIHBvbGljaWVzLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUGFoYXJpYXMgd2VyZSB0aGUgb3JpZ2luYWwgaW5oYWJpdGFudHMgb2YgUmFqbWFoYWwgaGlsbHMuIERhbWluLWkgS29oIGluIHRoZSAgIFJham1haGFsIGFyZWEgd2FzIGEgbGFyZ2UgYXJlYSBvZiBsYW5kIGRlbWFyY2F0ZWQgYW5kIGRlY2xhcmVkIHRvIGJlIHRoZSBsYW5kIG9mIHRoZSBTYW50aGFscy4gVGhlICAgQnJpdGlzaCBwZXJzdWFkZWQgdGhlIFNhbnRoYWxzIHRvIHNldHRsZSBpbiB0aGUgZm9vdGhpbGxzIG9mIFJham1haGFsLiBCdXQgYSBmZXVkIGJldHdlZW4gdGhlIFNhbnRoYWxzIGFuZCAgIHRoZSBQYWhhcmlhcyBjb250aW51ZWQgZm9yIGEgbG9uZyB0aW1lLiBUaGUgQnJpdGlzaCB3b3JrZWQgb3V0IGEgY29tcHJvbWlzZSBiZXR3ZWVuIHRoZSB0d28gZ3JvdXBzIGJ5ICAgZm9ybWluZyB0aGUgRGFtaW4tIGkta29oIGluIDE4MzItMzMuIEEgcG9ydGlvbiBvZiBsYW5kIGF0IHRoZSBmb290aGlsbHMgd2FzIGRlY2xhcmVkIHRvIGJlIHRoYXQgb2YgdGhlICAgU2FudGhhbHMuIFRoZSBQYWhhcml5YXMgd2VyZSBwcmFjdGljYWxseSBmb3JjZWQgdG8gcmV0cmVhdCBpbnRvIHRoZSBoaWdoZXIgaGlsbCB0cmFjdHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIFBlcm1hbmVudCBTZXR0bGVtZW50IEFjdCBvZiAxNzkzIHByb3ZlZCB0byBiZSBkaXNhc3Ryb3VzIGZvciB0aGUgICBhZ3JpY3VsdHVyaXN0cy4gRm9sbG93aW5nIHRoaXMgc2V0dGxlbWVudCwgdGhlIEJyaXRpc2hlcnMgdG9vayBhd2F5IGFsbCB0aGUgbGFuZHMgZnJvbSB0aGUgU2FudGhhbHMuIFRoZSAgIHRheGVzIGxldmllZCBieSB0aGUgQ29tcGFueSBnb3Zlcm5tZW50IG9uIHRoZWlyIGxhbmQgd2FzIGhlYXZ5IGFuZCBtb25leSBoYWQgdG8gYmUgYm9ycm93ZWQgdG8gcGF5ICAgb2ZmIGRlYnRzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gRGlrdXMgbWVhbnMgb3V0c2lkZXJzLiBUaGUgb3V0c2lkZXJzIGNvbnNpc3Qgb2YgdHJhZGVycyBhbmQgbW9uZXkgbGVuZGVycywgICB3aG8gY2FuIGNvbWUgaW50byB0aGUgZm9yZXN0LiBUaGV5IHVzZWQgdG8gc2VsbCB0aGUgZ29vZHMgbm90IHByb2R1Y2VkIGluIHRoZSBmb3Jlc3RzIGFuZCBvZmZlciBjYXNoICAgbG9hbnMgd2l0aCBoaWdoIHJhdGUgb2YgaW50ZXJlc3RzLiAgVGhlIGRpa3UgbW9uZXlsZW5kZXJzIGNoYXJnZWQgdmVyeSBoaWdoIHJhdGVzIG9mIGludGVyZXN0IGFuZCwgd2hlbiAgIGRlYnRzIHJlbWFpbmVkIHVucGFpZCwgdG9vayBwb3NzZXNzaW9uIG9mIHRoZSBsYW5kLiAgICBTaWRodSBNdXJtdSBhbmQgS2FuaHUgTXVybXUgd2VyZSB0aGUgbGVhZGVycyBvZiB0aGUgU2FudGhhbCByZWJlbGxpb24uICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gQXMgYSBkaXJlY3QgY29uc2VxdWVuY2Ugb2YgdGhlIFNhbnRoYWwgSHVsIG9yIFJlYmVsbGlvbiBvZiAxODU0LTU1IGxlZCBieSBTaWRvICAgYW5kIEthbmh1IGJyb3RoZXJzLCBTYW50aGFsIFBhcmdhbmEgaGFkIGJlZW4gY3JlYXRlZCBhcyBhIHNlcGFyYXRlIGRpc3RyaWN0IGluIDE4NTUgYnkgY2VkaW5nIHRoZSAgIHBvcnRpb25zIG9mIEJoYWdhbHB1ciAod2hpY2ggaXMgcHJlc2VudGx5IGluIEJpaGFyKSBhbmQgQmlyYmh1bSAod2hpY2ggaXMgcHJlc2VudGx5IGluIFdlc3QgQmVuZ2FsKSAgIGRpc3RyaWN0LiBUaGUgQnJpdGlzaCBob3BlZCB0aGF0IGJ5IGNyZWF0aW5nIGEgbmV3IHRlcnJpdG9yeSBmb3IgdGhlIFNhbnRoYWxzIGFuZCBpbXBvc2luZyBzb21lIHNwZWNpYWwgICBsYXdzIHdpdGhpbiBpdCwgdGhlIFNhbnRoYWxzIGNvdWxkIGJlIGNvbmNpbGlhdGVkLiBJdCBiZWNhbWUgaWxsZWdhbCBmb3IgYSBTYW50aGFsIHRvIHRyYW5zZmVyIGxhbmQgdG8gYSBub24tICBTYW50aGFsLiBCcml0aXNoIGdvdmVybm1lbnQgZW5hY3RlZCBsYXdzIHNvIHRoYXQgdGhlIGxhbmQgb2YgdHJpYmFscyBjb3VsZCBub3QgYmUgdGFrZW4gYnkgb3V0c2lkZXJzICAgKGRpa3VzKS4gICBTb3VyY2U6IEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWE6IFNwZWN0cnVtOiAyMDIwIEVkaXRpb24sIHBhZ2UgMTYxLTY0ICAgaHR0cHM6Ly9zYWhpYmdhbmoubmljLmluL2hpc3RvcnkvIzp+OnRleHQ9QXMlMjBhJTIwZGlyZWN0JTIwY29uc2VxdWVuY2UlMjBvZixwcmVzZW50bHklMjBpbiUyICAwV2VzdCUyMEJlbmdhbCklMjBkaXN0cmljdC4gICAgICAgb2YgMjQgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "2, 3 and 4 only         ",
        "option4" : "1, 2 and 4 only          "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following were the result of  the Permanent Settlement?  1. Commodification of land.  2. Modernization of agriculture.  3. Absentee Landlordism.  4. Increase in agricultural productivity.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEVhcmxpZXIgcGVvcGxlIGhhZCBhbmNlc3RyYWwgaW5kaXZpZHVhbCByaWdodHMgb3ZlciB0aGVpciBsYW5kIGFuZCBkaWQgbm90IHRoaW5rICAgYWJvdXQgc2VsbGluZyBvciBidXlpbmcgaXQuIEhvd2V2ZXIsIHdpdGggdGhlc2UgbmV3IHN5c3RlbXMgb2YgcmV2ZW51ZSBhZG1pbmlzdHJhdGlvbiBpbnRyb2R1Y2VkIGJ5IHRoZSAgIEJyaXRpc2ggQ29tcGFueSwgbGFuZCB3YXMgdHJlYXRlZCBhcyBhIGNvbW1vZGl0eSB3aGljaCB3YXMgb3duZWQgKGxlZ2FsIHJlY29yZHMpIGFuZCBjb3VsZCBiZSAgIGNvbmZpc2NhdGVkIG9yIG1vcnRnYWdlZCBvciBzb2xkIGluIG9yZGVyIHRvIHBheSBmb3IgZHVlcy4gVGhpcyBwcm9jZXNzIG9mIG1ha2luZyBsYW5kIGEgdHJhZGFibGUgYXNzZXQgaXMgICBjYWxsZWQgY29tbW9kaWZpY2F0aW9uIG9mIGxhbmQsIHdoaWNoIHdhcyBhIGJ5LXByb2R1Y3Qgb2YgdGhlIFBlcm1hbmVudCBTZXR0bGVtZW50IHN5c3RlbS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBDb21wYW55IGhhZCBleHBlY3RlZCB0aGF0IHRoZSBsdXJlIG9mIGJlaW5nIGFsbG93ZWQgdG8gcmV0YWluIHN1cnBsdXMgICBhbW91bnRzLCB3b3VsZCBwcm9wZWwgSW5kaWFuIHphbWluZGFycyB0byBpbnZlc3QgaW4gbW9kZXJuaXphdGlvbiBvZiBhZ3JpY3VsdHVyZSwgYXMgaW4gRW5nbGFuZC4gICBIb3dldmVyLCB0aGlzIGRpZCBub3QgaGFwcGVuIGluIEluZGlhLCBhbmQgemFtaW5kYXJzIHdlcmUgb25seSBpbnRlcmVzdGVkIGluIGZhcm1pbmcgdGhlIG1heGltdW0gICByZW50IHdpdGhvdXQgY2FyZSBmb3Igc3Vic2lzdGVuY2Ugb2YgZmFybWVycy4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIGxhcmdlLXNjYWxlIGRlZmF1bHRzIGJ5IG9sZCB6YW1pbmRhcnMgcmVzdWx0ZWQgaW4gY29uZmlzY2F0aW9ucyBhbmQgICBhdWN0aW9uaW5nIG9mIHphbWluZGFyaSByaWdodHMgdG8gbWFueSBuZXcgcGVvcGxlLCBtb3N0bHkgcmljaCBtb25leWxlbmRlcnMgYW5kIHRyYWRlcnMuIFRoZXNlICAgZ3JvdXBzIHdlcmUgbW9zdGx5IHJlc2lkZW50IGluIHRoZSBjaXRpZXMgYW5kIGRpZCBub3QgY2FyZSBmb3IgdGhlaXIgdGVuYW50cyBpbiB0aGUgdmlsbGFnZSwgZXhjZXB0IGZvciB0aGUgICBjb2xsZWN0aW9uIHRpbWUuIFRoaXMgcGhlbm9tZW5vbiB3YXMga25vd24gYXMgYWJzZW50ZWUgbGFuZGxvcmRpc20uICAgICBvZiAyNCAgICAgICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IEFsc28sIHRoZSByZXZlbnVlIGRlbWFuZHMgd2VyZSBub3QgYmFzZWQgb24gYW55IHNjaWVudGlmaWMgYXNzZXNzbWVudHMsIHNvICAgdGhleSB3ZXJlIGV4Y2Vzc2l2ZSwgbGVhdmluZyBwZWFzYW50cyB3aXRoIG5vdGhpbmcgdG8gaW52ZXN0LiBTbyBhZ3JpY3VsdHVyYWwgcHJvZHVjdGl2aXR5IGRpZCBub3QgcmlzZSwgICBub3IgZGlkIHRoZSByZXZlbnVlcyBzaWduaWZpY2FudGx5LiAgIEtub3dsZWRnZSBCYXNlOiAgICAxKSBUaGUgUGVybWFuZW50IFNldHRsZW1lbnQgbWFkZSB0aGUgWmFtaW5kYXJzIHRoZSBvd25lcnMgb2YgdGhlIGVudGlyZSBsYW5kIHVuZGVyIHRoZW0uIFRoaXMgd2FzICAgbm90IGhvdyBhZ3JpY3VsdHVyYWwgcmlnaHRzIHdlcmUgZWFybGllci4gUGVvcGxlIGhhZCBwcml2YXRlIHByb3BlcnR5LCBhbmQgdmlsbGFnZXMgaGFkIGNvbW1vbmx5ICAgb3duZWQgbGFuZCwgd2hpbGUgdGhlIFphbWluZGFyIGhhZCBoaXMgb3duIHByb3BlcnR5LCBhbmQgb25seSB0aGUgcmlnaHQgdG8gY29sbGVjdCByZXZlbnVlLiAgIDIpIFRoZSBzeXN0ZW0gb2YgY29sbGVjdGlvbiBvZiByZXZlbnVlIHdhcyB2ZXJ5IHJpZ2lkLiBObyByZWxheGF0aW9uIGluIGR1ZSBkYXRlLCBvciBhbW91bnQgb3dlZCBpbiBjYXNlICAgb2YgbmF0dXJhbCBjYWxhbWl0aWVzIGxpa2UgZmxvb2QgYW5kIGRyb3VnaHQgZGFtYWdpbmcgY3JvcHMgbGVkIHRvIGxvdyBjb2xsZWN0aW9ucyBhbmQgd2lkZXNwcmVhZCAgIGRpc3Bvc3Nlc3Npb24gb2YgWmFtaW5kYXJzLiAgIDMpIEl0IHJlcGxhY2VkIG9sZCBaYW1pbmRhcnMgd2l0aCBhIHBhdGVybmFsIGF0dGl0dWRlIHRvIHRoZWlyIHRlbmFudHMsIHdpdGggbmV3IGxhbmRsb3JkcyB3aG8gd2VyZSBub3QgICBzeW1wYXRoZXRpYyBhdCBhbGwuIFRoaXMgbGVkIHRvIG9wcHJlc3Npb24gb2YgcGVhc2FudHJ5LiAgIFNvdXJjZTogTkNFUlQgQ2xhc3MgOHRoIEhpc3RvcnkgT3VyIFBhc3RzIElJSSBQYXJ0IEksIENoLTM7ICAgTW9kZXJuIEluZGlhbiBIaXN0b3J5IGJ5IEJMIEdyb3ZlciwgQ2gtMTkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2, 3, and 4 only  ",
        "option3" : "1, 2, and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 45,
      "question" : "Who among the following was associated  as Secretary with Hindu Female School which  later came to be known as Bethune Female  School?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgY29ycmVjdC4gICBJc2h3YXIgQ2hhbmRyYSBWaWR5YXNhZ2FyIHdhcyB0aGUgc2VjcmV0YXJ5IG9mIEJldGh1bmUgc2Nob29sIGVzdGFibGlzaGVkIGluIDE4NDkgYWxzbyBrbm93biBhcyAgIEhpbmR1IGZlbWFsZSBzY2hvb2wuIEhlIHdhcyBvbmUgb2YgdGhlIHBpb25lZXJzIG9mIGhpZ2hlciBlZHVjYXRpb24gZm9yIHdvbWVuIGluIEluZGlhLiAgIFNvdXJjZSkgVVBTQyBDU0UgUHJlbGltcyAyMDIxICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Annie Besant   ",
        "option2" : "Debendranath Tagore   ",
        "option3" : "Ishwar Chandra Vidyasagar    ",
        "option4" : "Sarojini Naidu   "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to revenue administration  under the Company rule, consider the following  statements:  1. In the Mahalwari system, the individuals  were directly responsible for submitting  revenue to the company.  2.  The Ryotwari system was introduced by  Capt. Alexander Read and Thomas Munro.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogSW4gTWFoYWx3YXJpIHN5c3RlbSB0aGUgcmVzcG9uc2liaWxpdHkgb2YgY29sbGVjdGluZyByZXZlbnVlIChhc3Nlc3NlZCBmb3IgdGhlICAgZW50aXJlIHZpbGxhZ2UvIGVzdGF0ZSAtIGNhbGxlZCBtYWhhbCkgZnJvbSBhbGwgaW5kaXZpZHVhbHMgYW5kIHBhc3NpbmcgaXQgb24gdG8gdGhlIENvbXBhbnksIHdhcyB3aXRoIHRoZSAgIFZpbGxhZ2UgSGVhZG1hbiAob3IgYm9keSBvZiBjby1zaGFyZXMgLWJoYWljaGFyYSkuIFRoZSBpbmRpdmlkdWFscyB3ZXJlIG5vdCBkaXJlY3RseSByZXNwb25zaWJsZSBmb3IgICBzdWJtaXR0aW5nIHJldmVudWUgdG8gdGhlIGNvbXBhbnkuICAgSW4gUnlvdHdhcmkgU3lzdGVtIHRoZSBvd25lcnNoaXAgcmlnaHRzIHdlcmUgaGFuZGVkIG92ZXIgdG8gdGhlIHBlYXNhbnRzLiBCcml0aXNoIEdvdmVybm1lbnQgY29sbGVjdGVkICAgdGF4ZXMgZGlyZWN0bHkgZnJvbSB0aGUgcGVhc2FudHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogUnlvdHdhcmkgc3lzdGVtIHdhcyBwcmV2YWxlbnQgaW4gbW9zdCBvZiBzb3V0aGVybiBJbmRpYSwgYmVpbmcgdGhlIHN0YW5kYXJkICAgc3lzdGVtIG9mIHRoZSBNYWRyYXMgUHJlc2lkZW5jeS4gICBUaGUgc3lzdGVtIHdhcyBkZXZpc2VkIGJ5IENhcHQuIEFsZXhhbmRlciBSZWFkIGFuZCBUaG9tYXMgTXVucm8gYXQgdGhlIGVuZCBvZiB0aGUgMTh0aCBjZW50dXJ5IGFuZCAgIGludHJvZHVjZWQgYnkgdGhlIGxhdHRlciB3aGVuIGhlIHdhcyBnb3Zlcm5vciAoMTgyMC0yNykgb2YgTWFkcmFzLiAgIFJlYWQgYW5kIE11bnJvIHByb3ZpZGVkIGEgc3lzdGVtIHdoZXJlIGV2ZXJ5IGZpZWxkJ3Mgc2l6ZSBhbmQgcHJvZHVjdGl2aXR5IGFyZSB0byBiZSBtZWFzdXJlZCBmb3IgICBhc3Nlc3NpbmcgcmV2ZW51ZSBkZW1hbmRzLiAgICBCdXQgdGhpcyB3YXMgbmV2ZXIgcHJhY3RpY2FsbHkgZG9uZSBpbiB0aGUgYXJlYXMgdW5kZXIgUnlvdHdhcmkgc3lzdGVtIG9mIHJldmVudWUgYWRtaW5pc3RyYXRpb24uIEFzIGEgICByZXN1bHQsIGV4dHJlbWVseSBoaWdoIHJldmVudWUgZGVtYW5kcyByYW5naW5nIGZyb20gMzMlLTUwJSBvZiBlc3RpbWF0ZWQgcHJvZHVjZSB3ZXJlIG1hZGUgd2hpY2ggICB3ZXJlIHVuZWNvbm9taWNhbCBhbmQgY291bGQgbm90IGJlIGZ1bGZpbGxlZCBieSB0aGUgcGVhc2FudHMuICAgIFNvdXJjZTogTkNFUlQgQ2xhc3MgOHRoIEhpc3RvcnkgLSBPdXIgUGFzdHMgSUlJIFBhcnQgSUksIENoLTI7ICAgTW9kZXJuIEluZGlhbiBIaXN0b3J5IGJ5IEJMIEdyb3ZlciwgQ2gtMTkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements with  reference to the Dual government in Bengal:  1. Warren Hastings introduced the dual  system of government in Bengal after the  battle of buxar.  2. Under this system, a company acquired the  Diwani functions from the emperor and  nizamat functions from the subahdar of  Bengal.  3. The dual system led to an effective  administration and proved beneficial for the  people of Bengal.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjQgICAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBZnRlciB0aGUgYmF0dGxlIG9mIEJ1eGFyLCB0aGUgRWFzdCBJbmRpYSBDb21wYW55IGJlY2FtZSB0aGUgcmVhbCBtYXN0ZXJzIG9mICAgQmVuZ2FsLiBSb2JlcnQgQ2xpdmUgaW50cm9kdWNlZCB0aGUgZHVhbCBzeXN0ZW0gb2YgZ292ZXJubWVudCAoYW5kIG5vdCBXYXJyZW4gaGFzdGluZykgaS5lLiwgdGhlIHJ1bGUgICBvZiB0aGUgdHdvIHRoZSBDb21wYW55IGFuZCB0aGUgTmF3YWIgaW4gQmVuZ2FsLiBVbmRlciB0aGlzIHN5c3RlbSBib3RoIHRoZSBkaXdhbmksIGkuZS4sIGNvbGxlY3RpbmcgICByZXZlbnVlcywgYW5kIG5pemFtYXQsIGkuZS4sIHBvbGljZSBhbmQganVkaWNpYWwgZnVuY3Rpb25zLCBjYW1lIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBDb21wYW55LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBDb21wYW55IGV4ZXJjaXNlZCBkaXdhbmkgcmlnaHRzIGFzIHRoZSBkaXdhbiBhbmQgdGhlIG5pemFtYXQgcmlnaHRzICAgdGhyb3VnaCBpdHMgcmlnaHQgdG8gbm9taW5hdGUgdGhlIGRlcHV0eSBzdWJhaGRhci4gVGhlIENvbXBhbnkgYWNxdWlyZWQgdGhlIGRpd2FuaSBmdW5jdGlvbnMgZnJvbSAgIHRoZSBlbXBlcm9yIGFuZCBuaXphbWF0IGZ1bmN0aW9ucyBmcm9tIHRoZSBzdWJhaGRhciBvZiBCZW5nYWwuIFRoZSBzeXN0ZW0gaGVsZCBhIGdyZWF0IGFkdmFudGFnZSAgIGZvciB0aGUgQ29tcGFueS4gSXQgbGVmdCB0aGUgYXBwZWFyYW5jZSBvZiBhdXRob3JpdHkgdG8gdGhlIHB1cHBldCBJbmRpYW4gcnVsZXIsIHdoaWxlIGtlZXBpbmcgdGhlICAgc292ZXJlaWduIHBvd2VyIGluIHRoZSBoYW5kcyBvZiB0aGUgQ29tcGFueS4gVGhlIG5hd2FiIHdhcyByZXNwb25zaWJsZSBmb3IgbWFpbnRhaW5pbmcgcGVhY2UgYW5kICAgb3JkZXIsIGJ1dCBoZSBkZXBlbmRlZCBib3RoIGZvciBmdW5kcyBhbmQgZm9yY2VzIHVwb24gdGhlIENvbXBhbnkgYmVjYXVzZSB0aGUgbGF0dGVyIGNvbnRyb2xsZWQgdGhlICAgYXJteSBhbmQgcmV2ZW51ZXMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgZHVhbCBzeXN0ZW0gbGVkIHRvIGFuIGFkbWluaXN0cmF0aXZlIGJyZWFrZG93biBhbmQgcHJvdmVkIGRpc2FzdHJvdXMgICBmb3IgdGhlIHBlb3BsZSBvZiBCZW5nYWwuIChBbmQgbm90IGJlbmVmaWNpYWwgYW5kIGVmZmVjdGl2ZSkgTmVpdGhlciB0aGUgQ29tcGFueSBub3IgdGhlIE5hd2FiIGNhcmVkICAgZm9yIGFkbWluaXN0cmF0aW9uIGFuZCBwdWJsaWMgd2VsZmFyZS4gV2FycmVuIEhhc3RpbmdzIGRpZCBhd2F5IHdpdGggdGhlIGR1YWwgc3lzdGVtIGluIDE3NzIuICAgU291cmNlOiAgQSBicmllZiBoaXN0b3J5IG9mIG1vZGVybiBJbmRpYSAyMDE5LTIwIGVkaXRpb24gcGRmLiBTcGVjdHJ1bS4gQ2hhcHRlciBuYW1lLSBFeHBhbnNpb24gYW5kICAgQ29uc29saWRhdGlvbiBvZiBCcml0aXNoIFBvd2VyIGluIEluZGlhLiBQYWdlIG5vIC05My4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements with  reference to Robert Clive:  1. He was the first Governor-General of  Bengal.  2. He forged a secret alliance with the traitors  of the nawab in Bengal during the Battle of  Plassey.  3. He signed the Treaty at Allahabad with  Mughal Emperor Shah Alam II for Diwani  rights in Bengal, Bihar, and Orissa.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJvYmVydCBDbGl2ZSB3YXMgYSBzb2xkaWVyIGFuZCBmaXJzdCBCcml0aXNoIGFkbWluaXN0cmF0b3Igb2YgQmVuZ2FsLCB3aG8gd2FzIG9uZSBvZiB0aGUgY3JlYXRvcnMgb2YgQnJpdGlzaCAgIHBvd2VyIGluIEluZGlhLiBJbiBoaXMgZmlyc3QgZ292ZXJub3JzaGlwICgxNzU1LTYwKSBoZSB3b24gdGhlIEJhdHRsZSBvZiBQbGFzc2V5IGFuZCBiZWNhbWUgbWFzdGVyIG9mICAgQmVuZ2FsLiBJbiBoaXMgc2Vjb25kIGdvdmVybm9yc2hpcCAoMTc2NC02NykgaGUgcmVvcmdhbml6ZWQgdGhlIEJyaXRpc2ggY29sb255LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogUm9iZXJ0IENsaXZlIHdhcyBtYWRlIHRoZSBHb3Zlcm5vciBvZiBCZW5nYWwgdHdpY2UgZnJvbSAxNzU3IHRvIDE3NjAgYW5kICAgdGhlbiBmcm9tIDE3NjUgdG8gMTc2Ny4gSGUgYWRtaW5pc3RlcmVkIEJlbmdhbCB1bmRlciB0aGUgZHVhbCBnb3Zlcm5tZW50IHN5c3RlbSB0aWxsIGhpcyByZXR1cm4gdG8gICBFbmdsYW5kIHdoZXJlIGhlIGFsbGVnZWRseSBjb21taXR0ZWQgc3VpY2lkZSBpbiAxNzc0LiAgIDEpIFJvYmVydCBDbGl2ZSB3YXMgdGhlIGZpcnN0IGdvdmVybm9yIG9mIEJlbmdhbC4gVGhlIGZpcnN0IEdvdmVybm9yLUdlbmVyYWwgb2YgQmVuZ2FsIHdhcyBXYXJyZW4gICBIYXN0aW5ncyBhbmQgdGhlIGZpcnN0IEdvdmVybm9yLUdlbmVyYWwgb2YgQnJpdGlzaCBJbmRpYSB3YXMgTG9yZCBXaWxsaWFtIEJlbnRpbmNrIGFuZCB0aGUgZmlyc3QgICBHb3Zlcm5vci1HZW5lcmFsIG9mIHRoZSBEb21pbmlvbiBvZiBJbmRpYSB3YXMgTG9yZCBNb3VudGJhdHRlbi4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBSb2JlcnQgQ2xpdmUgd2FzIHRoZSBjb21tYW5kZXIgb2YgRW5nbGlzaCBmb3JjZXMgaW4gdGhlIGJhdHRsZSBvZiBQbGFzc2V5LiBUaGUgICBhcnJpdmFsIG9mIGEgc3Ryb25nIGZvcmNlIHVuZGVyIHRoZSBjb21tYW5kIG9mIFJvYmVydCBDbGl2ZSBhdCBDYWxjdXR0YSBmcm9tIE1hZHJhcyBzdHJlbmd0aGVuZWQgdGhlICAgRW5nbGlzaCBwb3NpdGlvbiBpbiBCZW5nYWwuIENsaXZlIGZvcmdlZCBhIHNlY3JldCBhbGxpYW5jZSB3aXRoIHRoZSB0cmFpdG9ycyBvZiB0aGUgTmF3YWIgU2lyYWotdWQtRGF1bGFoIC0gICBNaXIgSmFmYXIsIFJhaSBEdXJsYWJoLCBKYWdhdCBTZXRoIChhbiBpbmZsdWVudGlhbCBiYW5rZXIgb2YgQmVuZ2FsKSBhbmQgT21pY2hhbmQuIFVuZGVyIHRoZSBkZWFsLCBNaXIgICBKYWZhciB3YXMgdG8gYmUgbWFkZSB0aGUgbmF3YWIgdGhhdCBpbiB0dXJuIHdvdWxkIHJld2FyZCB0aGUgQ29tcGFueSBmb3IgaXRzIHNlcnZpY2VzLiBUaGUgc2VjcmV0ICAgYWxsaWFuY2Ugb2YgdGhlIENvbXBhbnkgd2l0aCB0aGUgY29uc3BpcmF0b3JzIGZ1cnRoZXIgc3RyZW5ndGhlbmVkIHRoZSBFbmdsaXNoIHBvc2l0aW9uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJvYmVydCBDbGl2ZSBjb25jbHVkZWQgdHdvIGltcG9ydGFudCB0cmVhdGllcyBhdCBBbGxhaGFiYWQgaW4gQXVndXN0IDE3NjUsIG9uZSAgIHdpdGggdGhlIE5hd2FiIG9mIEF3YWRoIGFuZCB0aGUgb3RoZXIgd2l0aCB0aGUgTXVnaGFsIEVtcGVyb3IsIFNoYWggQWxhbSBJSS4gICBOYXdhYiBTaHVqYS11ZC1EYXVsYSBhZ3JlZWQgdG86ICAgMSkgU3VycmVuZGVyIEFsbGFoYWJhZCBhbmQgS2FyYSB0byBFbXBlcm9yIFNoYWggQWxhbSBJSTsgICAyKSBQYXkgUnMgNTAgbGFraCB0byB0aGUgQ29tcGFueSBhcyB3YXIgaW5kZW1uaXR5OyAgIDMpIEdpdmUgQmFsd2FudCBTaW5naCwgWmFtaW5kYXIgb2YgQmFuYXJhcywgZnVsbCBwb3NzZXNzaW9uIG9mIGhpcyBlc3RhdGUuICAgU2hhaCBBbGFtIElJIGFncmVlZCB0bzogICAxKSBSZXNpZGUgYXQgQWxsYWhhYmFkLCB0byBiZSBjZWRlZCB0byBoaW0gYnkgdGhlIE5hd2FiIG9mIEF3YWRoLCB1bmRlciB0aGUgQ29tcGFueSdzIHByb3RlY3Rpb247ICAgMikgSXNzdWUgYSBmYXJtYW4gZ3JhbnRpbmcgdGhlIGRpd2FuaSBvZiBCZW5nYWwsIEJpaGFyIGFuZCBPcmlzc2EgdG8gdGhlIEVhc3QgSW5kaWEgQ29tcGFueSBpbiBsaWV1IG9mICAgYW4gYW5udWFsIHBheW1lbnQgb2YgUnMgMjYgbGFraDsgYW5kICAgMykgQSBwcm92aXNpb24gb2YgUnMgNTMgbGFraCB0byB0aGUgQ29tcGFueSBpbiByZXR1cm4gZm9yIG5pemFtYXQgZnVuY3Rpb25zIChtaWxpdGFyeSBkZWZlbmNlLCBwb2xpY2UsIGFuZCAgIGFkbWluaXN0cmF0aW9uIG9mIGp1c3RpY2UpIG9mIHRoZSBzYWlkIHByb3ZpbmNlcy4gICAgIG9mIDI0ICAgICAgIFNvdXJjZTogQSBicmllZiBoaXN0b3J5IG9mIG1vZGVybiBJbmRpYSAyMDE5LTIwIGVkaXRpb24gcGRmLiBTcGVjdHJ1bS4gQ2hhcHRlciBuYW1lLSBhZHZlbnQgb2YgICBFdXJvcGVhbnMgaW4gSW5kaWEuIFBhZ2Ugbm8gLTg4IHRvIDkxLiAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tL2Jpb2dyYXBoeS9Sb2JlcnQtQ2xpdmUgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements with  reference to the Paika rebellion:  1. Paiks were the traditional landed militia who  enjoyed rent free land tenures and policing  functions on a hereditary basis.  2. Paikas revolted against the British under the  leadership of Baxi Jagandhu Bidyadhara.   3. Paika rebellion was brutally repressed by the  British.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBQYWlrcyBvZiBPZGlzaGEgd2VyZSB0aGUgdHJhZGl0aW9uYWwgbGFuZGVkIG1pbGl0aWEgYW5kIGVuam95ZWQgcmVudCBmcmVlICAgbGFuZCB0ZW51cmVzIGZvciB0aGVpciBtaWxpdGFyeSBzZXJ2aWNlIGFuZCBwb2xpY2luZyBmdW5jdGlvbnMgb24gYSBoZXJlZGl0YXJ5IGJhc2lzLiBUaGUgRW5nbGlzaCAgIENvbXBhbnkncyBjb25xdWVzdCBvZiBPZGlzaGEgaW4gMTgwMywgYW5kIHRoZSBkZXRocm9uZW1lbnQgb2YgdGhlIFJhamEgb2YgS2h1cmRhIGhhZCBncmVhdGx5IHJlZHVjZWQgICB0aGUgcG93ZXIgYW5kIHByZXN0aWdlIG9mIHRoZSBQYWlrcy4gRnVydGhlciwgdGhlIGV4dG9ydGlvbmlzdCBsYW5kIHJldmVudWUgcG9saWN5IG9mIHRoZSBCcml0aXNoIGNhdXNlZCAgIHJlc2VudG1lbnQgYW1vbmcgemFtaW5kYXJzIGFuZCBwZWFzYW50cyBhbGlrZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQYWlrYXMgdW5mdXJsZWQgdGhlIGJhbm5lciBvZiByZWJlbGxpb24gYWdhaW5zdCB0aGUgQnJpdGlzaCB1bmRlciB0aGUgICBsZWFkZXJzaGlwIG9mIEJheGkgSmFnYW5kaHUgQmlkeWFkaGFyYSBhcyBlYXJseSBhcyAxODE3IHRvIHRocm93IG9mZiB0aGUgQnJpdGlzaC4gVGhlIFBhaWthcyB1bmRlciBCYXhpICAgSmFnYWJhbmRodSAodGhlIGhlcmVkaXRhcnkgY2hpZWYgb2YgdGhlIG1pbGl0aWEgYXJteSBvZiB0aGUgR2FqYXBhdGkgS2luZykgcm9zZSBpbiByZWJlbGxpb24sIHRha2luZyAgIHN1cHBvcnQgb2YgdHJpYmFscyBhbmQgb3RoZXIgc2VjdGlvbnMgb2Ygc29jaWV0eS4gVGhlIHJlYmVsbGlvbiBzdGFydGVkIGluIE1hcmNoIDE4MTcgYW5kIHNwcmVhZCBxdWlja2x5LiAgIFRoZSB0cmliYWxzIG9mIEdodW11c2FyIChwYXJ0IG9mIHByZXNlbnQtZGF5IEdhbmphbSBhbmQgS2FuZGhtYWwgRGlzdHJpY3RzKSBhbmQgb3RoZXIgc2VjdGlvbnMgb2YgdGhlICAgcG9wdWxhdGlvbiBhY3RpdmVseSB0b29rIHBhcnQgaW4gaXQuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIFBhaWthIHJlYmVsbGlvbiB3YXMgYnJ1dGFsbHkgcmVwcmVzc2VkIGJ5IDE4MTguIFByaWVzdHMgYXQgdGhlIFB1cmkgdGVtcGxlICAgd2hvIGhhZCBzaGVsdGVyZWQgSmFnYWJhbmRodSB3ZXJlIGNhdWdodCBhbmQgaGFuZ2VkLiBQYWlrYXMgb24gdGhlIHdob2xlIHN1ZmZlcmVkIGdyZWF0bHkuICAgV2lkZXNwcmVhZCBzdXBwcmVzc2lvbiBmb2xsb3dlZCB3aXRoIG1hbnkga2lsbGVkIGFuZCBpbXByaXNvbmVkLiBNYW55IG1vcmUgd2VyZSB0b3J0dXJlZC4gU29tZSAgIHJlYmVscyBmb3VnaHQgYSBndWVycmlsbGEgd2FyIHRpbGwgMTgxOSBidXQgd2VyZSBjYXB0dXJlZCBhbmQga2lsbGVkLiBUaG91Z2ggdGhlIFBhaWthIEJpZHJvaGEgZW5qb3lzIGEgY3VsdCAgIHN0YXR1cyBpbiBPZGlzaGEgd2l0aCBjaGlsZHJlbiBncm93aW5nIHVwIHdpdGggc3RvcmllcyBvZiB0aGUgYnJhdmUgZmlnaHQgYWdhaW5zdCB0aGUgQnJpdGlzaC4gICBTb3VyY2U6ICBodHRwczovL3BpYi5nb3YuaW4vbmV3c2l0ZS9QcmludFJlbGVhc2UuYXNweD9yZWxpZD0xNjg3NjIgICBBIGJyaWVmIGhpc3Rvcnkgb2YgbW9kZXJuIEluZGlhIDIwMTktMjAgZWRpdGlvbiBwZGYuIFNwZWN0cnVtLiBDaGFwdGVyIG5hbWUtIFBlb3BsZSdzIFJlc2lzdGFuY2UgICBBZ2FpbnN0IEJyaXRpc2ggQmVmb3JlLiBQYWdlIG5vIC0gMTQ4IGFuZCAxNDkuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following parties were  established by Dr. B. R. Ambedkar?   1. The Peasants and Workers Party of India    2. All India Scheduled Castes Federation     3. The Independent Labour Party    Select the correct answer using the codes given  below:     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gVGhlIFBlYXNhbnRzIGFuZCBXb3JrZXJzIFBhcnR5IG9mIEluZGlhIHdhcyBmb3VuZGVkIGluIDE5NDggYnkgTWFyeGlzdCBsZWFkZXJzICAgc3VjaCBhcyBLZXNoYXYgUmFvIEplZGhlLCBOYW5hIFBhdGlsIGFuZCBvdGhlcnMuIFRodXMsIGl0IHdhcyBub3QgZXN0YWJsaXNoZWQgYnkgRHIuIEIuUi5BbWJlZGthci4gICAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIFRoZSBzZWNvbmQgcG9saXRpY2FsIHBhcnR5IGVzdGFibGlzaGVkIGJ5IEFtYmVka2FyIHdhcyB0aGUgQWxsIEluZGlhIFNjaGVkdWxlZCAgIENhc3RlcyBGZWRlcmF0aW9uLiBGb3VuZGVkIGluIDE5NDIsIGl0IHdhcyBmaXJzdCBhbGwgSW5kaWEgcG9saXRpY2FsIHBhcnR5IGV4Y2x1c2l2ZWx5IGZvciBTY2hlZHVsZWQgICBDYXN0ZXMuICAgT3B0aW9uIDMgaXMgY29ycmVjdC4gSW4gMTkzNiwgQmFiYXNhaGViIEFtYmVka2FyIGZvdW5kZWQgdGhlIEluZGVwZW5kZW50IExhYm91ciBQYXJ0eSwgd2hpY2ggICBjb250ZXN0ZWQgdGhlIDE5MzcgQm9tYmF5IGVsZWN0aW9uIHRvIHRoZSBDZW50cmFsIExlZ2lzbGF0aXZlIEFzc2VtYmx5IGZvciB0aGUgMTMgcmVzZXJ2ZWQgYW5kIDQgZ2VuZXJhbCAgIHNlYXRzLCBzZWN1cmluZyAxMSBhbmQgMyBzZWF0cyByZXNwZWN0aXZlbHkuICAgICBTb3VyY2U6IFVQU0MgQ1NFIFByZWxpbXMgMjAxMiAgICAgIG9mIDI0IA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only     ",
        "option3" : "1 and 3 only    ",
        "option4" : "1, 2 and 3    "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
