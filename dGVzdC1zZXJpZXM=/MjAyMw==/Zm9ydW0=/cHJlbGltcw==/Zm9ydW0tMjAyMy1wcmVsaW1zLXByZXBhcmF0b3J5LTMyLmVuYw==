{
  "testId" : "forum-2023-prelims-preparatory-32",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-32.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements  regarding 'Urban India Index':  1. It is developed by NITI Aayog in  collaboration with the Indo-German  Development Cooperation.  2. It aims to monitor the capacity of local  governments in absorbing and recovering  from natural hazards.  3. The urban areas are ranked on a scale of 0- 100 with a score of zero implying that the  area is farthest from achieving the targets.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE5JVEkgQWF5b2cgaGFzIHJlbGVhc2VkIHRoZSBmaXJzdCBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCBHb2FscyAoU0RHKSBVcmJhbiBJbmRpYSAgIEluZGV4LiBJdCBpcyBkZXZlbG9wZWQgYnkgTklUSSBBYXlvZyBpbiBjb2xsYWJvcmF0aW9uIHdpdGggR0laIChHZXJtYW4gQWdlbmN5IGZvciBJbnRlcm5hdGlvbmFsICAgQ29vcGVyYXRpb24gIClhbmQgQk1aIChGZWRlcmFsIE1pbmlzdHJ5IGZvciBFY29ub21pYyBDb29wZXJhdGlvbiBhbmQgRGV2ZWxvcG1lbnQgb2YgR2VybWFueSkgICB1bmRlciB0aGUgdW1icmVsbGEgb2YgSW5kby1HZXJtYW4gRGV2ZWxvcG1lbnQgQ29vcGVyYXRpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBVcmJhbiBJbmRpYSBpbmRleCBpcyBhbiBTREcgcHJvZ3Jlc3MgbW9uaXRvcmluZyB0b29sIGF0IHRoZSBVcmJhbiBMb2NhbCBCb2RpZXMgICAoVUxCKSBsZXZlbC4gVGhlIGluZGV4IGFuZCBkYXNoYm9hcmQgd2lsbCBmdXJ0aGVyIHN0cmVuZ3RoZW4gU0RHIGxvY2FsaXphdGlvbiBhbmQgaW5zdGl0dXRlIHJvYnVzdCBTREcgICBtb25pdG9yaW5nIGF0IHRoZSBjaXR5IGxldmVsLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBtZXRob2RvbG9neSB1c2VkIGZvciB0aGUgaW5kZXggaXM6IEZvciBlYWNoIFNERywgdGhlIHVyYmFuIGFyZWFzIGFyZSByYW5rZWQgICBvbiBhIHNjYWxlIG9mIDAtMTAwLiBBIHNjb3JlIG9mIDEwMCBpbXBsaWVzIHRoYXQgdGhlIHVyYmFuIGFyZWEgaGFzIGFjaGlldmVkIHRoZSB0YXJnZXRzIHNldCBmb3IgMjAzMDsgYSBzY29yZSAgIG9mIDAgaW1wbGllcyB0aGF0IGl0IGlzIHRoZSBmYXJ0aGVzdCBmcm9tIGFjaGlldmluZyB0aGUgdGFyZ2V0cyBhbW9uZyB0aGUgc2VsZWN0ZWQgdXJiYW4gYXJlYXMuICAgVGhlIGFyZWFzIHdpdGggc2NvcmVzIGJldHdlZW4gMCBhbmQgNDkgaGF2ZSBiZWVuIHJhbmtlZCBhcyBhc3BpcmFudHMsIHRob3NlIHdpdGggNTAtNjQgYXJlIHRlcm1lZCBhcyAgIHBlcmZvcm1lcnMsIDY1LTk5IGFyZSBjYWxsZWQgZnJvbnQtcnVubmVycyBhbmQgdGhlIG9uZXMgd2l0aCBwZXJmZWN0IHNjb3JlcyBhcmUgY2FsbGVkIGFjaGlldmVycy4gICBLbm93bGVkZ2UgQmFzZTogICAgS2V5IFJhbmtpbmdzIG9mIFNERyBVcmJhbiBJbmRpYSBpbmRleDogICAxKSBUb3AgMTAgVXJiYW4gQXJlYXM6IFNoaW1sYSBoYXMgdG9wcGVkIHRoZSBpbmRleC4gVGhpcyB3YXMgZm9sbG93ZWQgYnkgQ29pbWJhdG9yZSwgQ2hhbmRpZ2FyaCwgICBUaGlydXZhbmFudGhhcHVyYW0sIEtvY2hpLCBQYW5hamksIFB1bmUsIFRpcnVjaGlyYXBwYWxsaSwgQWhtZWRhYmFkIGFuZCBOYWdwdXIuIFRoZXNlIHRlbiB1cmJhbiAgIGFyZWFzIGhhdmUgc2NvcmVkIGJldHdlZW4gNzUuNSBhbmQgNjkuNzkgb2YgMTAwIGFuZCBhcmUgcmFua2VkIGFzIGZyb250LXJ1bm5lcnMuICAgMikgQm90dG9tIDEwIHVyYmFuIGFyZWFzOiBEaGFuYmFkLCBNZWVydXQsIEl0YW5hZ2FyLCBHdXdhaGF0aSwgUGF0bmEsIEpvZGhwdXIsIEtvaGltYSwgQWdyYSwgS29sa2F0YSAgIGFuZCBGYXJpZGFiYWQuIFRoZXNlIGFyZWFzIGhhdmUgc2NvcmVkIGJldHdlZW4gNTIuNDMgYW5kIDU4LjU3IGFuZCBhcmUgdGVybWVkIGFzICdwZXJmb3JtZXJzLiAgICAzKSBUaGVyZSBhcmUgbm9uZSBpbiB0aGUgJ2FzcGlyYW50JyBjYXRlZ29yeSB3aXRoIHNjb3JlcyBiZWxvdyA0OS4gICBTb3VyY2U6IE5JVEkgQWF5b2cgdW5kZXIgdGhlIEluZG8tR2VybWFuIENvb3BlcmF0aW9uIHJlbGVhc2VzIGluYXVndXJhbCBTREcgVXJiYW4gSW5kZXggYW5kICAgRGFzaGJvYXJkIDIwMjEtMjIgLUZvcnVtSUFTIEJsb2cgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to various awards given in  the field of the Disaster management and  environment, consider the following pairs:   Award                                Given by  1. Subhash Chandra  Bose Aapda  Prabandhan  Puraskar  Centre for  Science and  Environment  2. Sasakawa Award           World bank  3. Champions of the  Earth Award                   Coalition for  Disaster Resilient  Infrastructure  Which of the pairs given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBUbyByZWNvZ25pemUgYW5kIGhvbm9yIHRoZSBpbnZhbHVhYmxlIGNvbnRyaWJ1dGlvbiBhbmQgc2VsZmxlc3Mgc2VydmljZSAgIHJlbmRlcmVkIGJ5IGluZGl2aWR1YWxzIGFuZCBvcmdhbml6YXRpb25zIGluIEluZGlhIGluIHRoZSBmaWVsZCBvZiBEaXNhc3RlciBNYW5hZ2VtZW50LCBHb3Zlcm5tZW50IG9mICAgSW5kaWEgaGFzIGluc3RpdHV0ZWQgYW4gYW5udWFsIGF3YXJkIGtub3duIGFzIFN1Ymhhc2ggQ2hhbmRyYSBCb3NlIEFhcGRhIFByYWJhbmRoYW4gUHVyYXNrYXIuIFRoZSAgIGF3YXJkIHdpbGwgYmUgYWRtaW5pc3RlcmVkIGJ5IHRoZSBOYXRpb25hbCBEaXNhc3RlciBNYW5hZ2VtZW50IEF1dGhvcml0eSAoTkRNQSAtIGNyZWF0ZWQgYnkgdGhlICAgTWluaXN0cnkgb2YgSG9tZSBBZmZhaXJzIHVuZGVyIHRoZSBEaXNhc3RlciBNYW5hZ2VtZW50IEFjdCwgMjAwNSkuICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBVbml0ZWQgTmF0aW9ucyBTYXNha2F3YSBBd2FyZCBpcyB0aGUgbW9zdCBwcmVzdGlnaW91cyBpbnRlcm5hdGlvbmFsICAgYXdhcmQgaW4gdGhlIGFyZWEgb2YgRGlzYXN0ZXIgUmlzayBNYW5hZ2VtZW50LiBJdCB3YXMgaW5zdGl0dXRlZCBtb3JlIHRoYW4gMzAgeWVhcnMgYWdvIGFuZCBpcyBqb2ludGx5ICAgb3JnYW5pemVkIGJ5IHRoZSBVbml0ZWQgTmF0aW9ucyBPZmZpY2UgZm9yIERpc2FzdGVyIFJpc2sgUmVkdWN0aW9uIChVTkRSUikgYW5kIHRoZSBOaXBwb24gRm91bmRhdGlvbiAgIChub3QgYnkgV29ybGQgQmFuaykuIFRoZSBVTiBTYXNha2F3YSBBd2FyZCBmb3IgRGlzYXN0ZXIgUmVkdWN0aW9uIGlzIGF3YXJkZWQgdG8gYW4gaW5kaXZpZHVhbCBvciAgIGluc3RpdHV0aW9ucyB0aGF0IGhhdmUgdGFrZW4gYWN0aXZlIGVmZm9ydHMgaW4gcmVkdWNpbmcgZGlzYXN0ZXIgcmlzayBpbiB0aGVpciBjb21tdW5pdGllcyBhbmQgYWR2b2NhdGVzIGZvciAgIGRpc2FzdGVyIHJpc2sgcmVkdWN0aW9uLiAgIFBhaXIgMyBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBUaGUgQ2hhbXBpb25zIG9mIHRoZSBFYXJ0aCBhd2FyZCBpcyB0aGUgVW5pdGVkIE5hdGlvbidzIGhpZ2hlc3QgICBlbnZpcm9ubWVudGFsIGhvbm9yIGdpdmVuIGJ5IFVORVAuIEl0IHJlY29nbml6ZXMgb3V0c3RhbmRpbmcgbGVhZGVycyBmcm9tIGdvdmVybm1lbnQsIGNpdmlsIHNvY2lldHkgYW5kICAgdGhlIHByaXZhdGUgc2VjdG9yIHdob3NlIGFjdGlvbnMgaGF2ZSBhIHRyYW5zZm9ybWF0aXZlIGltcGFjdCBvbiB0aGUgZW52aXJvbm1lbnQuIENoYW1waW9ucyBvZiB0aGUgRWFydGggICBpbnNwaXJlLCBkZWZlbmQsIG1vYmlsaXplIGFuZCBhY3QgdG8gdGFja2xlIHRoZSBncmVhdGVzdCBlbnZpcm9ubWVudGFsIGNoYWxsZW5nZXMgb2Ygb3VyIHRpbWUuICAgU291cmNlOiBQSUIgICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzcmVsZWFzZXNoYXJlLmFzcHg/UFJJRD0xNjkxNjA3ICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzcmVsZWFzZXNoYXJlLmFzcHg/UFJJRD0xNTcyMTQzICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to the District Disaster  Management Authority (DDMA), consider the  following statements:  1.  It is headed by the retired chief justice of the  High Court.  2.  It consists of Co-Chairperson who is elected  representative of the local authority.   3.  In case a Zila Parishad exists in a district, the  Chairperson of the Zila Parishad must be the  Co-Chairperson of the DDMA.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFNlY3Rpb24gMjUgb2YgdGhlIERpc2FzdGVyIE1hbmFnZW1lbnQgQWN0IG1hbmRhdGVzIHRoZSBmb3JtYXRpb24gb2YgYSBERE1BIGZvciBlYWNoIGRpc3RyaWN0IHdpdGhpbiBhICAgc3RhdGUuIFRoZSBERE1BIHdpbGwgYWxzbyBlbnN1cmUgdGhhdCBhbGwgU3RhdGUgR292ZXJubWVudCBEZXBhcnRtZW50cyBhdCB0aGUgRGlzdHJpY3QgbGV2ZWwsIGFzIHdlbGwgYXMgICBtdW5pY2lwYWwgZ292ZXJubWVudHMgaW4gdGhlIERpc3RyaWN0LCBmb2xsb3cgdGhlIE5ETUEgYW5kIFNETUEgcmVjb21tZW5kYXRpb25zIGZvciBwcmV2ZW50aW9uLCAgIG1pdGlnYXRpb24sIHByZXBhcmVkbmVzcywgYW5kIHJlc3BvbnNlIGFjdGlvbnMuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBFeGNlcHQgaW4gdHJpYmFsIGFyZWFzLCB3aGVyZSB0aGUgQ2hpZWYgRXhlY3V0aXZlIE1lbWJlciBvZiB0aGUgRGlzdHJpY3QgQ291bmNpbCAgIG9mIEF1dG9ub21vdXMgRGlzdHJpY3QgaXMgZGVzaWduYXRlZCBhcyBDby1DaGFpcnBlcnNvbiwgdGhlIEF1dGhvcml0eSBpcyBjaGFpcmVkIGJ5IHRoZSBEaXN0cmljdCAgIE1hZ2lzdHJhdGUvRGlzdHJpY3QgQ29sbGVjdG9yL0RlcHV0eSBDb21taXNzaW9uZXIsIChub3QgYnkgcmV0aXJlZCBjaGllZiBqdXN0aWNlIG9mIHRoZSBIaWdoIENvdXJ0KSB3aXRoICAgYW4gZWxlY3RlZCByZXByZXNlbnRhdGl2ZSBvZiB0aGUgbG9jYWwgYXV0aG9yaXR5IGFzIENvLUNoYWlycGVyc29uLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgRGlzdHJpY3QgQXV0aG9yaXR5IHNoYWxsIGNvbnNpc3Qgb2YgdGhlIENoYWlycGVyc29uIGFuZCBzdWNoIG51bWJlciBvZiBvdGhlciAgIG1lbWJlcnMsIG5vdCBleGNlZWRpbmcgc2V2ZW4sIGFzIG1heSBiZSBwcmVzY3JpYmVkIGJ5IHRoZSBTdGF0ZSBHb3Zlcm5tZW50LCBhbmQgdW5sZXNzIHRoZSBydWxlcyAgIG90aGVyd2lzZSBwcm92aWRlLCBpdCBzaGFsbCBjb25zaXN0IG9mIHRoZSBmb2xsb3dpbmcgbmFtZWx5OiAtICAgMSkgVGhlIENvbGxlY3RvciBvciBEaXN0cmljdCBNYWdpc3RyYXRlIG9yIERlcHV0eSBDb21taXNzaW9uZXIsIGFzIHRoZSBjYXNlIG1heSBiZSwgb2YgdGhlIGRpc3RyaWN0IHdobyAgIHNoYWxsIGJlIENoYWlycGVyc29uLCBleCBvZmZpY2lvLiAgIDIpIFRoZSBlbGVjdGVkIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBsb2NhbCBhdXRob3JpdHkgd2hvIHNoYWxsIGJlIHRoZSBDby1DaGFpcnBlcnNvbiwgZXggb2ZmaWNpbzogUHJvdmlkZWQgICB0aGF0IGluIHRoZSBUcmliYWwgQXJlYXMsIGFzIHJlZmVycmVkIHRvIGluIHRoZSBTaXh0aCBTY2hlZHVsZSB0byB0aGUgQ29uc3RpdHV0aW9uLCB0aGUgQ2hpZWYgRXhlY3V0aXZlLiAgIE1lbWJlciBvZiB0aGUgZGlzdHJpY3QgY291bmNpbCBvZiBhdXRvbm9tb3VzIGRpc3RyaWN0LCBzaGFsbCBiZSB0aGUgQ28tQ2hhaXJwZXJzb24sIGV4IG9mZmljaW8uICAgMykgVGhlIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIG9mIHRoZSBEaXN0cmljdCBBdXRob3JpdHksIGV4IG9mZmljaW8uICAgNCkgVGhlIFN1cGVyaW50ZW5kZW50IG9mIFBvbGljZSwgZXggb2ZmaWNpby4gICA1KSBUaGUgQ2hpZWYgTWVkaWNhbCBPZmZpY2VyIG9mIHRoZSBkaXN0cmljdCwgZXggb2ZmaWNpby4gICA2KSBOb3QgZXhjZWVkaW5nIHR3byBvdGhlciBkaXN0cmljdCBsZXZlbCBvZmZpY2VycywgdG8gYmUgYXBwb2ludGVkIGJ5IHRoZSBTdGF0ZSBHb3Zlcm5tZW50LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluIGFueSBkaXN0cmljdCB3aGVyZSB6aWxhIHBhcmlzaGFkIGV4aXN0cywgdGhlIENoYWlycGVyc29uIHRoZXJlb2Ygc2hhbGwgYmUgdGhlIGNvLSAgQ2hhaXJwZXJzb24gb2YgdGhlIERpc3RyaWN0IERpc2FzdGVyIE1hbmFnZW1lbnQgQXV0aG9yaXR5LiAgIFNvdXJjZTogRGlzYXN0ZXIgTWFuYWdlbWVudCBBY3QtIDIwMDUgICBodHRwczovL25kbWEuZ292LmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvUERGL0RNX2FjdDIwMDUucGRmICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements  regarding 'River Cities Alliance':  1. The Alliance is a partnership between  Ministry of Jal Shakti and World Bank Group.  2. It is a platform for river cities in India to  discuss and exchange information for the  sustainable management of urban rivers.  3. The Alliance includes the cities located  alongside of Ganga basins only.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUml2ZXIgQ2l0aWVzIEFsbGlhbmNlIGlzIGEgcGFydG5lcnNoaXAgb2YgdHdvIE1pbmlzdHJpZXMgaS5lLiwgTWluaXN0cnkgb2YgSmFsIFNoYWt0aSAgIGFuZCBNaW5pc3RyeSBvZiBIb3VzaW5nIGFuZCBVcmJhbiBBZmZhaXJzLiBXb3JsZCBCYW5rIGlzIG5vdCBpbnZvbHZlZCBpbiB0aGUgQWxsaWFuY2UuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUml2ZXIgQ2l0aWVzIEFsbGlhbmNlIGlzIGEgZGVkaWNhdGVkIHBsYXRmb3JtIGZvciByaXZlciBjaXRpZXMgaW4gSW5kaWEgdG8gaWRlYXRlLCAgIGRpc2N1c3MgYW5kIGV4Y2hhbmdlIGluZm9ybWF0aW9uIGZvciB0aGUgc3VzdGFpbmFibGUgbWFuYWdlbWVudCBvZiB1cmJhbiByaXZlcnMuIEl0IGFpbXMgdG8gcHJvdmlkZSB0aGUgICBtZW1iZXIgY2l0aWVzIHdpdGggYSBwbGF0Zm9ybSB0byBkaXNjdXNzIGFuZCBleGNoYW5nZSBpbmZvcm1hdGlvbiBvbiBhc3BlY3RzIHRoYXQgYXJlIHZpdGFsIGZvciBzdXN0YWluYWJsZSAgIG1hbmFnZW1lbnQgb2YgdXJiYW4gcml2ZXJzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gQWx0aG91Z2ggdGhlIFJpdmVyIENpdGllcyBBbGxpYW5jZSBiZWdhbiB3aXRoIHRoZSBHYW5nYSBiYXNpbiBjaXRpZXMsIGl0IHdhcyAgIGV4dGVuZGVkIHRvIGluY2x1ZGUgY2l0aWVzIGJleW9uZCB0aGUgZ2FuZ2EgYmFzaW4gYXMgd2VsbC4gVGhlIHBhcnRpY2lwYXRpbmcgY2l0aWVzIGluIHRoZSBSaXZlciBDaXRpZXMgICBBbGxpYW5jZSBhcmU6ICAgIERlaHJhZHVuLCBIYXJpZHdhciwgUmlzaGlrZXNoLCBTcmluYWdhciwgQmVndXNhcmFpLCBCaGFnYWxwdXIsIE11bmdlciwgUGF0bmEsIEJlcmhhbXBvcmUsIEhvb2dobHktICBDaGluc3VyYWgsIEhvd3JhaCwgSmFuZ2lwdXIsIE1haGVzaHRhbGEsIFJham1haGFsLCBTYWhpYmdhbmosIEF5b2RoeWEsIEJpam5vciwgRmFycnVraGFiYWQsIEthbnB1ciwgICBNYXRodXJhLVZyaW5kYXZhbiwgTWlyemFwdXIsIFByYXlhZ3JhaiwgVmFyYW5hc2ksIEF1cmFuZ2FiYWQsIENoZW5uYWksIEJodWJhbmVzd2FyLCBIeWRlcmFiYWQsIFB1bmUsICAgVWRhaXB1ciBhbmQgVmlqYXlhd2FkYS4gICBTb3VyY2U6ICBVbmlvbiBNaW5pc3RlciBmb3IgSmFsIFNoYWt0aSBMYXVuY2hlcyBSaXZlciBDaXRpZXMgQWxsaWFuY2UgLUEgRGVkaWNhdGVkIFBsYXRmb3JtIEZvciBSaXZlciBDaXRpZXMgICBJbiBJbmRpYSBUbyBJZGVhdGUsIERpc2N1c3MgQW5kIEV4Y2hhbmdlIEluZm9ybWF0aW9uIEZvciBTdXN0YWluYWJsZSBNYW5hZ2VtZW50IG9mIFVyYmFuIFJpdmVycy0gIEZvcnVtSUFTIEJsb2cgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements with  reference to State Disaster Response Fund  (SDRF):  1.  Pest attack and Cold Waves are not covered  as natural calamity by State Disaster  Response Fund (SDRF).  2.  State Disaster Response Fund is audited by  the Comptroller and Auditor General of  India.   3.  States can use up to 10% of the funds  available under SDRF for local disasters.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlIERpc2FzdGVyIFJlc3BvbnNlIEZ1bmQgKFNEUkYpIGlzIGNvbnN0aXR1dGVkIHVuZGVyIHRoZSBzZWN0aW9uIDQ4IG9mICgxKSAoYSkgb2YgRE0gYWN0IDIwMDUgaXMgYSAgIHByaW1hcnkgZnVuZCBhdmFpbGFibGUgd2l0aCBTdGF0ZSBHb3Zlcm5tZW50IGZvciByZXNwb25zZXMgdG8gbm90aWZpZWQgZGlzYXN0ZXIuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogU0RSRiBpcyBwcmltYXJ5IGZ1bmQgYXZhaWxhYmxlIHdpdGggdGhlIFN0YXRlIGdvdmVybm1lbnRzIGZvciByZXNwb25zZXMgdG8gICBub3RpZmllZCBkaXNhc3RlcnMgdG8gbWVldCBleHBlbmRpdHVyZSBmb3IgcHJvdmlkaW5nIGltbWVkaWF0ZSByZWxpZWYuIFRoZSBkaXNhc3RlcnMgY292ZXJlZCB1bmRlciBTRFJGICAgYXJlIEN5Y2xvbmUsIERyb3VnaHQsIEVhcnRocXVha2UsIEZsb29kcywgVHN1bmFtaSwgSGFpbHN0b3JtLCBMYW5kc2xpZGUsIEF2YWxhbmNoZSwgQ2xvdWQgYnVyc3QsIFBlc3QgICBhdHRhY2ssIEZyb3N0LCBDb2xkIHdhdmUuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIENlbnRyYWwgR292ZXJubWVudCBjb250cmlidXRlIDc1JSBvZiBTRFJGIGFsbG9jYXRpb24gZm9yIGdlbmVyYWwgY2F0ZWdvcnkgICBTdGF0ZXMvVVRzIGFuZCA5MCUgZm9yIHNwZWNpYWwgY2F0ZWdvcnkgU3RhdGVzLiBEdWUgdG8gbWFqb3IgY29udHJpYnV0aW9uIGNvbWluZyBmcm9tIENlbnRyYWwgICBnb3Zlcm5tZW50IGZvciBTRFJGLCBpdCBpcyBhdWRpdGVkIGV2ZXJ5IHllYXIgYnkgdGhlIENvbXB0cm9sbGVyIGFuZCBBdWRpdG9yIEdlbmVyYWwgb2YgSW5kaWEuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogTG9jYWwgZGlzYXN0ZXJzIGFyZSB0aG9zZSBkaXNhc3RlcnMgd2hpY2ggYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGUgbm90aWZpZWQgbGlzdCBvZiAgIGRpc2FzdGVycyBvZiB0aGUgTWluaXN0cnkgb2YgSG9tZSBBZmZhaXJzIGJ1dCB0aGUgc3RhdGVzIGNvbnNpZGVyIHRvIGJlICdkaXNhc3RlcnMnIHdpdGhpbiB0aGUgbG9jYWwgY29udGV4dC4gICBTdGF0ZSBHb3Zlcm5tZW50IG1heSB1c2UgdXAgdG8gMTAlIG9mIHRoZSBmdW5kcyBhdmFpbGFibGUgdW5kZXIgU0RSRiBmb3IgcHJvdmlkaW5nIGltbWVkaWF0ZSByZWxpZWYgdG8gICB0aGUgdmljdGltcyBvZiBzdWNoIGxvY2FsIGRpc2FzdGVycy4gICAgU291cmNlOiBodHRwczovL25kbWluZGlhLm1oYS5nb3YuaW4vcmVzcG9uc2UtZnVuZCMgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following bodies are  constituted under the provisions of the  Disaster Management Act, 2005?  1. National Disaster Response Force  2. Rapid Action Force  3. National Executive Committee  4. National Institute of Disaster Management  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIERpc2FzdGVyIE1hbmFnZW1lbnQgQWN0LCAyMDA1IHdhcyBlbmFjdGVkIGluIHRoZSBjb3VudHJ5IG9uIDI2dGggRGVjZW1iZXIsIDIwMDUuIEl0IGNhbWUgaW50byBlZmZlY3QgICBpbiB0aGUgYWZ0ZXJtYXRoIG9mIHRoZSAyMDA0IHRzdW5hbWksIHdoZW4gdGhlIGNvdW50cnkgbG9zdCB0aG91c2FuZHMgb2YgbGl2ZXMuIEl0IHdhcyBwYXNzZWQgYnkgdGhlICAgZ292ZXJubWVudCBmb3IgZWZmaWNpZW50IG1hbmFnZW1lbnQgb2YgZGlzYXN0ZXJzLCBpbmNsdWRpbmcgcHJlcGFyYXRpb24gb2YgbWl0aWdhdGlvbiBzdHJhdGVnaWVzLCBjYXBhY2l0eS0gIGJ1aWxkaW5nIGFuZCByZWxhdGVkIG1hdHRlcnMuICAgIE9wdGlvbiAxLCAzIGFuZCA0IGFyZSBjb3JyZWN0LiBGb2xsb3dpbmcgYm9kaWVzIGFyZSBwcm92aWRlZCBieSB0aGUgRE0gQWN0LCAyMDA1OiAgICAxKSBOYXRpb25hbCBEaXNhc3RlciBNYW5hZ2VtZW50IEF1dGhvcml0eSAgIDIpIE5hdGlvbmFsIEV4ZWN1dGl2ZSBDb21taXR0ZWUgICAzKSBTdGF0ZSBEaXNhc3RlciBNYW5hZ2VtZW50IEF1dGhvcml0eSAgIDQpIERpc3RyaWN0IERpc2FzdGVyIE1hbmFnZW1lbnQgQXV0aG9yaXR5ICAgNSkgTmF0aW9uYWwgRGlzYXN0ZXIgUmVzcG9uc2UgRm9yY2UgICA2KSBOYXRpb25hbCBJbnN0aXR1dGUgb2YgRGlzYXN0ZXIgTWFuYWdlbWVudCAgIE9wdGlvbiAyIGlzIGluY29ycmVjdC4gVGhlIFJhcGlkIEFjdGlvbiBGb3JjZSAoUkFGKSBpcyBhIHNwZWNpYWxpemVkIHdpbmcgb2YgdGhlIENlbnRyYWwgUmVzZXJ2ZSBQb2xpY2UgRm9yY2UgICBvZiBJbmRpYSB0byBkZWFsIHdpdGggcmlvdCBhbmQgY3Jvd2QgY29udHJvbCBzaXR1YXRpb25zLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cubmRtaW5kaWEubmljLmluL2ltYWdlcy9UaGUlMjBEaXNhc3RlciUyME1hbmFnZW1lbnQlMjBBY3QsJTIwMjAwNS5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3 and 4 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "1, 2 and 4 only  ",
        "option4" : "1, 2, 3 and 4     Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements:  1.  Both Carbon credits and Carbon offsets are  units measured in term of greenhouse gases  emissions equivalent to one ton of Carbon  Dioxide.  2.  Carbon offsets are created when a business  reduces their greenhouse gas emissions in  their everyday operations.  3.  Carbon credits are created when a business  decides to invest in something that reduces  greenhouse gas emissions outside of their  everyday operations.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENhcmJvbiB0cmFkaW5nIGlzIHRoZSBwcm9jZXNzIG9mIGJ1eWluZyBhbmQgc2VsbGluZyBwZXJtaXRzIGFuZCBjcmVkaXRzIHRoYXQgYWxsb3cgdGhlIHBlcm1pdCBob2xkZXIgdG8gZW1pdCAgIGNhcmJvbiBkaW94aWRlLiAgIENhcmJvbiBvZmZzZXR0aW5nIGlzIGFueSBhY3Rpdml0eSB0aGF0IGNvbXBlbnNhdGVzIGZvciB0aGUgZW1pc3Npb24gb2YgY2FyYm9uIGRpb3hpZGUgKENPMikgb3Igb3RoZXIgICBncmVlbmhvdXNlIGdhc2VzIChtZWFzdXJlZCBpbiBjYXJib24gZGlveGlkZSBlcXVpdmFsZW50cyBbQ08yZV0pIGJ5IHByb3ZpZGluZyBmb3IgYW4gZW1pc3Npb24gcmVkdWN0aW9uICAgZWxzZXdoZXJlLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE9uZSBvZiB0aGUgYmlnZ2VzdCBkaWZmZXJlbmNlcyBiZXR3ZWVuIGEgY3JlZGl0IGFuZCBhbiBvZmZzZXQgaXMgdGhhdCB0aGUgZm9ybWVyIGlzICAgbWFuZGF0b3J5IGFuZCB0aGUgbGF0dGVyIHZvbHVudGFyeS4gSG93ZXZlciwgYm90aCB0aGUgQ2FyYm9uIGNyZWRpdHMgYW5kIENhcmJvbiBvZmZzZXRzIGFyZSB1bml0cyAgIG1lYXN1cmVkIGluIHRlcm0gb2YgZ3JlZW5ob3VzZSBnYXNlcyBlbWlzc2lvbnMgZXF1aXZhbGVudCB0byBvbmUgdG9uIG9mIENPMi4gKENhcmJvbiBEaW94aWRlKS4gICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBDYXJib24gb2Zmc2V0cyBhcmUgYWxzbyBtZWFzdXJlZCBieSB0b24gb2YgQ08yLWVxdWl2YWxlbnQsIGJ1dCBpbnN0ZWFkIG9mICAgcmVwcmVzZW50aW5nIHdoZW4gYSBjb21wYW55IGVtaXRzIGxlc3MgY2FyYm9uIHRoYW4gdGhlaXIgbGltaXQsIHRoZXkgYXJlIGNyZWF0ZWQgd2hlbiBhIGJ1c2luZXNzIGRlY2lkZXMgICB0byBpbnZlc3QgaW4gc29tZXRoaW5nIHRoYXQgcmVkdWNlcyBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgb3V0c2lkZSBvZiB0aGVpciBldmVyeWRheSBvcGVyYXRpb25zLiAgIFRoZXNlIGludmVzdG1lbnRzIGFyZSBrbm93biBhcyBjYXJib24gcHJvamVjdHMuICAgVGhlc2UgcHJvamVjdHMgdHlwaWNhbGx5IChidXQgbm90IGFsd2F5cykgdGFrZSBwbGFjZSBpbiBsb3dlci1kZXZlbG9wZWQgY291bnRyaWVzIGFuZCBpbnZvbHZlIGJ1aWxkaW5nIHdpbmQgICB0dXJiaW5lcywgc3VwcG9ydGluZyBzb2xhciBmYXJtcywgb3IgaW52ZXN0aW5nIGluIGZvcmVzdCBwcmVzZXJ2YXRpb24gYW5kIHJlZm9yZXN0YXRpb24gZWZmb3J0cy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSB0ZXJtIGNhcmJvbiBjcmVkaXQgdXN1YWxseSByZWZlcnMgdG8gYSB0cmFkYWJsZSBjZXJ0aWZpY2F0ZSBvciBwZXJtaXQgdGhhdCAgIHNob3dzIGEgY29tcGFueSwgaW5kdXN0cnksIG9yIGNvdW50cnksIGhhcyBwYWlkIHRvIHJlbW92ZSBhIGNlcnRhaW4gYW1vdW50IG9mIGNhcmJvbiBkaW94aWRlIGZyb20gdGhlICAgYXRtb3NwaGVyZS4gVGhpcyBjZXJ0aWZpY2F0ZSBnaXZlcyB0aGVtIHJpZ2h0IHRvIGVtaXQgMSB0b24gb2YgY2FyYm9uIGRpb3hpZGUgb3IgdGhlIGVxdWl2YWxlbnQgYW1vdW50IG9mIGEgICBkaWZmZXJlbnQgZ3JlZW5ob3VzZSBnYXMuICAgSWYgYSBjb3VudHJ5IG9yIGJ1c2luZXNzIHByb2R1Y2VzIGZld2VyIGVtaXNzaW9ucyB0aGFuIHRoZWlyIGNhcCB0aGV5IGFyZSBhZmZvcmRlZCBhIGNyZWRpdCAob25lIGNyZWRpdCAgIGJlaW5nIGVxdWFsIHRvIG9uZSB0b25uZSBvZiBDTzItZXF1aXZhbGVudCBlbWlzc2lvbnMgc2F2ZWQpIHdoaWNoIGNhbiBiZSBzb2xkIHRvIG90aGVyIG9yZ2FuaXphdGlvbnMgICBsb29raW5nIHRvIHByb2R1Y2UgZW1pc3Npb24gYWJvdmUgdGhlaXIgZ2l2ZW4gbGltaXQuICAgS25vd2xlZGdlIEJhc2U6ICAgIFRoZSBjYXJib24gb2Zmc2V0IGlzIHR5cGljYWxseSB0YWtpbmcgcGxhY2UgaW4gZGV2ZWxvcGVkIGNvdW50cmllcyBhbmQgdXN1YWxseSByZXByZXNlbnQgaW4gY29tbW9uIHR5cGVzICAgYXMgZm9sbG93czogICAgMSkgUmVmb3Jlc3RhdGlvbiAgICAyKSBSZWR1Y2luZyBFbWlzc2lvbnMgZnJvbSBEZWZvcmVzdGF0aW9uIGFuZCBGb3Jlc3QgRGVncmFkYXRpb24gKFJFREQpICAgIDMpIEludmVzdGluZyBpbiByZW5ld2FibGUgZW5lcmd5ICAgVGhlcmUgYXJlIHRocmVlIGJhc2ljIHR5cGVzIG9mIGNhcmJvbiBjcmVkaXRzOiAgIDEpIFRob3NlIGZyb20gcmVkdWNlZCBlbWlzc2lvbnMgKHR5cGljYWxseSBlbmVyZ3kgZWZmaWNpZW5jeSBtZWFzdXJlcykgICAyKSBSZW1vdmVkIGVtaXNzaW9ucyAoY2FyYm9uIGNhcHR1cmUgYW5kIHBsYW50aW5nIGZvcmVzdHMpICAgMykgQW5kIGF2b2lkZWQgZW1pc3Npb25zIChmb3IgZXhhbXBsZSByZWZyYWluaW5nIGZyb20gY3V0dGluZyBkb3duIHJhaW5mb3Jlc3RzKS4gICBTb3VyY2U6ICBodHRwczovL3d3dy53ZWZvcnVtLm9yZy9hZ2VuZGEvMjAxOS8wNi93aGF0LWlzLWNhcmJvbi1vZmZzZXR0aW5nLyAgIGh0dHBzOi8vd3d3LndlZm9ydW0ub3JnL2FnZW5kYS8yMDIwLzExL2NhcmJvbi1jcmVkaXRzLXdoYXQtaG93LWZpZ2h0LWNsaW1hdGUtY2hhbmdlLyAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only   ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following legislations:    1.  The Public Liability Insurance Act, 1991    2.  The Environment (Protection) Act, 1986    3.  The Factories Act, 1948    4.  The National Environment Appellate  Authority Act, 1997    Which of the legislations given above deal with  the industrial disasters in India?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIFRoZSBQdWJsaWMgTGlhYmlsaXR5IEluc3VyYW5jZSBBY3QsIDE5OTEgYXBwbGllcyB0byBhbGwgb3duZXJzIGFzc29jaWF0ZWQgd2l0aCB0aGUgICBwcm9kdWN0aW9uIG9yIGhhbmRsaW5nIG9mIGFueSBoYXphcmRvdXMgY2hlbWljYWxzLCB0byBwcm92aWRlIGltbWVkaWF0ZSByZWxpZWYgdG8gdmljdGltcyBhbmQgcGVyc29ucyAgIChvdGhlciB0aGFuIHdvcmttZW4pIGFmZmVjdGVkIGJ5IGFjY2lkZW50cyBvY2N1cnJpbmcgd2hpbGUgaGFuZGxpbmcgaGF6YXJkb3VzIHN1YnN0YW5jZXMgdGhyb3VnaCB0aGUgICBpbnN1cmFuY2UgYW1vdW50IHBhaWQgYnkgdGhlIG93bmVyIG9mIHRoZSBoYXphcmRvdXMgc3Vic3RhbmNlLiAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIFRoZSBFbnZpcm9ubWVudCAoUHJvdGVjdGlvbikgQWN0LCAxOTg2LCB3YXMgZW5hY3RlZCB3aGljaCBhbHNvIGRlYWxzIHdpdGggY2hlbWljYWwgICBtYW5hZ2VtZW50IGFuZCBzYWZldHkuIFVuZGVyIHRoaXMgRVAgQWN0LCAyIHJ1bGVzIGhhdmUgYmVlbiBub3RpZmllZCBmb3IgZW5zdXJpbmcgY2hlbWljYWwgc2FmZXR5OiAgIChhKSBNYW51ZmFjdHVyZSwgU3RvcmFnZSAmIEltcG9ydCBvZiBIYXphcmRvdXMgQ2hlbWljYWxzIFJ1bGVzIDE5ODkgKE1TSUhDKSAgICAoYikgQ2hlbWljYWwgQWNjaWRlbnRzIChFbWVyZ2VuY3ksIFBsYW5uaW5nLCBQcmVwYXJlZG5lc3MgYW5kIFJlc3BvbnNlKSBSdWxlcywgMTk5NiAoRVBQUiBSdWxlcykuICAgIFRoZSBmb2xsb3dpbmcgYWN0cyBhbmQgcnVsZXMgbGF5IGRvd24gcmVxdWlyZW1lbnRzIGZvciBlbWVyZ2VuY3kgcHJlcGFyZWRuZXNzIGFuZCBwYXltZW50IG9mIHJlbGllZiBhbmQgICBjb21wZW5zYXRpb24gaW4gSW5kaWEuICAgICBPcHRpb24gMyBpcyBjb3JyZWN0LiBUaGUgRmFjdG9yaWVzIEFjdCAxOTQ4IGVuc3VyZXMgc2FmZXR5LCBoZWFsdGggYW5kIHdlbGZhcmUgYXQgdGhlIHdvcmtwbGFjZS4gICBPcHRpb24gNCBpcyBjb3JyZWN0LiBUaGUgTmF0aW9uYWwgRW52aXJvbm1lbnQgQXBwZWxsYXRlIEF1dGhvcml0eSBBY3QsIDE5OTcsIHVuZGVyIHdoaWNoIHRoZSBOYXRpb25hbCAgIEVudmlyb25tZW50IEFwcGVsbGF0ZSBBdXRob3JpdHkgY2FuIGhlYXIgYXBwZWFscyByZWdhcmRpbmcgdGhlIHJlc3RyaWN0aW9uIG9mIGFyZWFzIGluIHdoaWNoIGFueSAgIGluZHVzdHJpZXMsIG9wZXJhdGlvbnMgb3IgcHJvY2Vzc2VzIG9yIGNsYXNzIG9mIGluZHVzdHJpZXMsIG9wZXJhdGlvbnMgb3IgcHJvY2Vzc2VzIHNoYWxsIG5vdCBiZSBjYXJyaWVkIG91dCAgIG9yIHNoYWxsIGJlIGNhcnJpZWQgb3V0IHN1YmplY3QgdG8gY2VydGFpbiBzYWZlZ3VhcmRzIHVuZGVyIHRoZSBFbnZpcm9ubWVudCAoUHJvdGVjdGlvbikgQWN0LCAxOTg2LiAgICAgS25vd2xlZGdlIEJhc2U6ICAgICBUaGUgTW9FRiAoTWluaXN0cnkgb2YgRW52aXJvbm1lbnQgJiBGb3Jlc3RzKSB3YXMgY3JlYXRlZCBpbiAxOTg1LCBhbmQgd2FzIGRlY2xhcmVkIGFzIHRoZSBub2RhbCBtaW5pc3RyeSAgIGZvciB0aGUgbWFuYWdlbWVudCBvZiBjaGVtaWNhbCAoaW5kdXN0cmlhbCkgZGlzYXN0ZXJzLiAgICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAgIFNvdXJjZTogaHR0cHM6Ly93d3cubGVnYWxzZXJ2aWNlaW5kaWEuY29tL2FydGljbGUvbDQ2NC1IdW1hbi1SaWdodHMsLUVudmlyb25tZW50LSYtSW5kdXN0cmlhbC0gIERpc2FzdGVyLS5odG1sICAgICBodHRwczovL2Nkbi5zM3dhYXMuZ292LmluL3MzODc1NzE1MGRlY2JkODliMGY1NDQyY2EzZGI0ZDBlMGUvdXBsb2Fkcy8yMDE4LzA3LzIwMTgwNzEwMjQucGRmICAgaHR0cDovL2VwZ3AuaW5mbGlibmV0LmFjLmluL2VwZ3BkYXRhL3VwbG9hZHMvZXBncF9jb250ZW50L1MwMDAwMTdHRS9QMDAxNzgyL00wMjUyOTQvRVQvMTUxMiAgNDU0MjUxRXBhdGhzaGFsYUNJRE0ucGRmICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only    ",
        "option2" : "1, 3 and 4 only    ",
        "option3" : "2, 3 and 4 only    ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to the emissions of the  greenhouse gases, consider the following  statements:  1.  India is the world's third largest emitter of  greenhouse gases on per capita basis.  2.  India has pledged to reduce the carbon  intensity of its economy by 45 per cent by  2030, over 2005 levels.  3.  India's coal-based thermal power sector  comprises about one-third of India's  Greenhouse gas emissions.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBlbWlzc2lvbiBvZiBHcmVlbmhvdXNlIGdhc2VzIHN0ZW0gZnJvbSBidXJuaW5nIGZvc3NpbCBmdWVscyBhbW9uZyBvdGhlcnMuIFRoZXkgaW5jbHVkZSBjYXJib24gICBkaW94aWRlIHByb2R1Y2VkIGR1cmluZyBjb25zdW1wdGlvbiBvZiBzb2xpZCwgbGlxdWlkLCBhbmQgZ2FzIGZ1ZWxzIGFuZCBnYXMgZmxhcmluZy4gSW5kaWEgaGFzIGFsc28gYmVlbiAgIHRha2luZyB0YW5naWJsZSBzdGVwcyB0byBrZWVwIGl0cyBQYXJpcyBDbGltYXRlIEFncmVlbWVudCBjb21taXRtZW50IGludGFjdCwgc3BlY2lmaWNhbGx5IGJ5IGtlZXBpbmcgR0hHICAgZW1pc3Npb25zIGxvdyBhbmQgbWl0aWdhdGluZyBpbnRlbnNpdHkuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBEZXNwaXRlIGJlaW5nIGFtb25nIHRoZSBmaXJzdCBjb3VudHJpZXMgdG8gam9pbiBpbiB0aGUgUGFyaXMgQ2xpbWF0ZSBhY2NvcmQgaW4gICAyMDE1LCBJbmRpYSBpcyBjdXJyZW50bHkgdGhlIHdvcmxkJ3MgdGhpcmQgbGFyZ2VzdCBlbWl0dGVyIG9mIGdyZWVuaG91c2UgZ2FzZXMgYWZ0ZXIgQ2hpbmEgYW5kIHRoZSBVUy4sICAgYWx0aG91Z2ggcGVyIGNhcGl0YSBlbWlzc2lvbnMgY29udGludWUgdG8gcmVtYWluIGJlbG93IHRoZSBnbG9iYWwgYXZlcmFnZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIDI2dGggQ29uZmVyZW5jZSBvZiBwYXJ0aWVzIG9mIHRoZSBVTiBGcmFtZXdvcmsgQ29udmVudGlvbiBvbiBDbGltYXRlICAgQ2hhbmdlIChVTkZDQ0MpLCBvciBDb1AgMjYgYXMgaXQgaXMgcG9wdWxhcmx5IGNhbGxlZCB3YXMgcmVjZW50bHkgaGVsZCBpbiBHbGFzZ293LCBTY290bGFuZC4gICAgQXQgdGhlIHN1bW1pdCwgUHJpbWUgTWluaXN0ZXIgb2YgSW5kaWEgYW5ub3VuY2VkIHRoYXQ6ICAgbyBJbmRpYSdzIG5vbi1mb3NzaWwgZW5lcmd5IGNhcGFjaXR5IHRvIHJlYWNoIDUwMCBHVyBieSAyMDMwICAgbyBJbmRpYSB3aWxsIG1lZXQgNTAgcGVyIGNlbnQgb2YgaXRzIGVuZXJneSByZXF1aXJlbWVudHMgd2l0aCByZW5ld2FibGUgZW5lcmd5IGJ5IDIwMzAuICAgbyBJbmRpYSB3aWxsIHJlZHVjZSBpdHMgdG90YWwgcHJvamVjdGVkIGNhcmJvbiBlbWlzc2lvbnMgYnkgb25lIGJpbGxpb24gdG9ubmVzIGZyb20gbm93IHRvIDIwMzAuICAgbyBJbmRpYSB3aWxsIHJlZHVjZSB0aGUgY2FyYm9uIGludGVuc2l0eSBvZiBpdHMgZWNvbm9teSBieSA0NSBwZXIgY2VudCBieSAyMDMwLCBvdmVyIDIwMDUgbGV2ZWxzLiAgIG8gQnkgMjA3MCwgSW5kaWEgd2lsbCBhY2hpZXZlIHRoZSB0YXJnZXQgb2YgbmV0IHplcm8gZW1pc3Npb25zLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluZGlhJ3MgY29hbC1iYXNlZCB0aGVybWFsIHBvd2VyIHNlY3RvciBjb21wcmlzZXMgYWJvdXQgb25lLXRoaXJkIG9mIEluZGlhJ3MgICBHSEcgZW1pc3Npb25zLiAgIEluZGlhJ3MgY29hbC1iYXNlZCB0aGVybWFsIHBvd2VyIHNlY3RvciBpcyBvbmUgb2YgdGhlIGNvdW50cnkncyBiaWdnZXN0IGVtaXR0ZXJzIG9mIGNhcmJvbiBkaW94aWRlIChDTzIpLiAgIEl0IGVtaXRzIG91dCAxLjEgZ2lnYXRvbm5lIG9mIENPMiBldmVyeSB5ZWFyOyB0aGlzIGlzIDIuNSBwZXIgY2VudCBvZiBnbG9iYWwgR0hHIGVtaXNzaW9ucywgb25lLXRoaXJkIG9mICAgSW5kaWEncyBHSEcgZW1pc3Npb25zLCBhbmQgYXJvdW5kIDUwIHBlciBjZW50IG9mIEluZGlhJ3MgZnVlbC1yZWxhdGVkIENPMiBlbWlzc2lvbnMuICAgU291cmNlOiBodHRwczovL3d3dy5jbGltYXRlc2NvcmVjYXJkLm9yZy8yMDIwLzEyL2luZGlhLWhhcy1zZWVuLWdyZWVuaG91c2UtZ2FzLWVtaXNzaW9ucy0gIGluY3JlYXNlLWJ5LWEtc3RhZ2dlcmluZy0zMzUtc2luY2UtMTk5MC8gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to the Climate Change  Performance Index (CCPI), consider the  following statements.  1.  It is annually published by the United  Nations Framework for Climate Change  (UNFCCC).  2.  India ranks first among all the G-20 member  countries in Climate Change Performance  Index ranking.  3.  Renewable energy constitutes the largest  share in the index.    Which of the statement given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENsaW1hdGUgQ2hhbmdlIHBlcmZvcm1hbmNlIEluZGV4IChDQ1BJKSBpcyBhbm51YWwgcHVibGljYXRpb24gd2hpY2ggaXMgcHVibGlzaGVkIHNpbmNlIDIwMDUuIEl0IGlzIGFuICAgaW5kZXBlbmRlbnQgbW9uaXRvcmluZyB0b29sIGFpbWluZyB0byBlbmhhbmNlIHRyYW5zcGFyZW5jeSBpbiBpbnRlcm5hdGlvbmFsIGNsaW1hdGUgcG9saXRpY3MgYW5kIGVuYWJsZXMgICBjb21wYXJpc29uIG9mIGNsaW1hdGUgcHJvdGVjdGlvbiBlZmZvcnRzIGFuZCBwcm9ncmVzcyBtYWRlIGJ5IGluZGl2aWR1YWwgY291bnRyaWVzLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHJlcG9ydCBjb250YWluaW5nIENDUEkgaXMgYW5udWFsbHkgcHVibGlzaGVkIGJ5IEdlcm1hbi13YXRjaCBhbG9uZyB3aXRoICAgQ2xpbWF0ZSBBY3Rpb24gTmV0d29yayAoQ0FOKSBhbmQgTmV3IENsaW1hdGUgSW5zdGl0dXRlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEluIHRoaXMgcmFua2luZywgSW5kaWEgZ290IHRoZSA4dGggcmFuay4gSXQgY29udGludWVkIHRvIGJlIGFtb25nIHRoZSB0b3AtICBwZXJmb3JtaW5nIGNvdW50cmllcyB3aXRoaW4gR3JvdXAgb2YgMjAgKGJ1dCB3YXMgbm90IHRoZSBmaXJzdCwgaXQgd2FzIFVuaXRlZCBLaW5nZG9tKS4gSW4gZmFjdCwgQ0NQSSAgIGV2YWx1YXRlcyA2MCBjb3VudHJpZXMgYW5kIHRoZSBFdXJvcGVhbiBVbmlvbiAoRVUpLCB3aGljaCBjb21iaW5lZCB0b2dldGhlciBnZW5lcmF0ZSBtb3JlIHRoYW4gOTAlICAgb2YgdGhlIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyByZWxlYXNlZCBnbG9iYWxseS4gQXMgcGVyIENDUEksIFVTLCBDaGluYSBhbmQgRVUgaGF2ZSBwZXJmb3JtZWQgcG9vcmx5ICAgYXMgdGhleSB3ZW50IGRvd24gc2V2ZXJhbCBwb3NpdGlvbnMgc2luY2UgbGFzdCB5ZWFyLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyAobm90IHJlbmV3YWJsZSBlbmVyZ3kpIGlzIHRoZSBsYXJnZXN0IGNyaXRlcmlhIGFtb25nICAgYWxsIGluZGljYXRvcnMgd2l0aCA0MCUgb2YgdGhlIG92ZXJhbGwgc2NvcmUuIFRoZXJlIGFyZSAxNCBpbmRpY2F0b3JzIHdoaWNoIGFyZSB1c2VkIHRvIGNhbGN1bGF0ZSB0aGUgQ2xpbWF0ZSAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBDaGFuZ2UgUGVyZm9ybWFuY2UgSW5kZXggKENDUEkpLiBBbGwgdGhlIGluZGljYXRvcnMgaGF2ZSBiZWVuIGdyb3VwZWQgaW50byA0IGNhdGVnb3JpZXMsIHdoaWNoIGFyZSAoaSkgICBHcmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgKDQwJSBvZiB0aGUgb3ZlcmFsbCBzY29yZSksIChpaSkgUmVuZXdhYmxlIGVuZXJneSAoMjAlKSwgKGlpaSkgRW5lcmd5IFVzZSAoMjAlKSAgIGFuZCAoaXYpIENsaW1hdGUgcG9saWN5ICgyMCUpLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9uZXdzL2NsaW1hdGUtY2hhbmdlL2luZGlhLWluLXRvcC0xMC1pbi1jbGltYXRlLSAgcGVyZm9ybWFuY2UtcmFua2luZy1zYXlzLW5ldy1yZXBvcnQtODAxMzggW1JlbGF0ZWQgdG8gQ0NQSSAyMDIxXSAgIGh0dHBzOi8vZ2VybWFud2F0Y2gub3JnL2VuLzIxMTEwIFtGb3IgZ2VuZXJhbCBpbmZvcm1hdGlvbiByZWxhdGVkIHRvIENDUEldICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "3 only  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following statements are  correct with reference to 'Blue Carbon  Initiative'?   1. It supports scientific research into the role  of coastal ecosystems for climate change  mitigation.    2. One of its objectives include national-level  accounting of carbon stocks and emissions.    3. The Initiative is coordinated by  Germanwatch in support with UNEP.  4. It works to develop financial incentives to  develop blue carbon ecosystems.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgQmx1ZSBjYXJib24gaXMgdGhlIGNhcmJvbiBzdG9yZWQgaW4gY29hc3RhbCBhbmQgbWFyaW5lIGVjb3N5c3RlbXMuICAgIFRoZSBCbHVlIENhcmJvbiBJbml0aWF0aXZlIGlzIGEgZ2xvYmFsIHByb2dyYW0gd29ya2luZyB0byBtaXRpZ2F0ZSBjbGltYXRlIGNoYW5nZSB0aHJvdWdoIHRoZSByZXN0b3JhdGlvbiAgIGFuZCBzdXN0YWluYWJsZSB1c2Ugb2YgY29hc3RhbCBhbmQgbWFyaW5lIGVjb3N5c3RlbXMuIFRoZSBCbHVlIENhcmJvbiBJbml0aWF0aXZlIGN1cnJlbnRseSBmb2N1c2VzIG9uICAgY2FyYm9uIGluIGNvYXN0YWwgZWNvc3lzdGVtcyAtIG1hbmdyb3ZlcywgdGlkYWwgbWFyc2hlcyBhbmQgc2VhZ3Jhc3Nlcywgd2hpY2ggYXJlIGZvdW5kIG9uIGV2ZXJ5ICAgY29udGluZW50IGV4Y2VwdCBBbnRhcmN0aWNhLiAgICBTdGF0ZW1lbnRzIDEgYW5kIDQgYXJlIGNvcnJlY3QuIFRoZSBCbHVlIENhcmJvbiBJbml0aWF0aXZlIHdvcmtzIHRvOiAgICAxKSBJbXBsZW1lbnQgcHJvamVjdHMgYXJvdW5kIHRoZSB3b3JsZCB0aGF0IGRlbW9uc3RyYXRlIHRoZSBmZWFzaWJpbGl0eSBvZiBibHVlIGNhcmJvbiBhY2NvdW50aW5nLCAgIG1hbmFnZW1lbnQgYW5kIGluY2VudGl2ZSBhZ3JlZW1lbnRzOyBhbmQgICAgMikgU3VwcG9ydCBzY2llbnRpZmljIHJlc2VhcmNoIGludG8gdGhlIHJvbGUgb2YgY29hc3RhbCBibHVlIGNhcmJvbiBlY29zeXN0ZW1zIGZvciBjbGltYXRlIGNoYW5nZSAgIG1pdGlnYXRpb24uICAgIDMpIEVuZ2FnZSBsb2NhbCwgbmF0aW9uYWwsIGFuZCBpbnRlcm5hdGlvbmFsIGdvdmVybm1lbnRzIGluIG9yZGVyIHRvIHByb21vdGUgcG9saWNpZXMgdGhhdCBzdXBwb3J0IGNvYXN0YWwgICBibHVlIGNhcmJvbiBjb25zZXJ2YXRpb24sIG1hbmFnZW1lbnQgYW5kIGZpbmFuY2luZzsgICAgNCkgRGV2ZWxvcCBjb21wcmVoZW5zaXZlIG1ldGhvZHMgZm9yIGFzc2Vzc2luZyBibHVlIGNhcmJvbiBzdG9ja3MgYW5kIGVtaXNzaW9uczsgICAgNSkgRGV2ZWxvcCBtYW5hZ2VtZW50IGFwcHJvYWNoZXMsIGZpbmFuY2lhbCBpbmNlbnRpdmVzIGFuZCBwb2xpY3kgbWVjaGFuaXNtcyBmb3IgZW5zdXJpbmcgdGhlICAgY29uc2VydmF0aW9uLCByZXN0b3JhdGlvbiBhbmQgc3VzdGFpbmFibGUgdXNlIG9mIGNvYXN0YWwgYmx1ZSBjYXJib24gZWNvc3lzdGVtczsgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIEJsdWUgQ2FyYm9uIEluaXRpYXRpdmUgcGFydG5lcnMsIGFzIHdlbGwgYXMgbWFueSBvdGhlciBvcmdhbml6YXRpb25zIGFyb3VuZCAgIHRoZSB3b3JsZCwgYXJlIHdvcmtpbmcgb24gY29uc2VydmF0aW9uIHNjaWVuY2UsIHBvbGljeSBhbmQgbWFuYWdlbWVudCBvZiBibHVlIGNhcmJvbiBlY29zeXN0ZW1zICAgZ2xvYmFsbHkuIE1ham9yIG9iamVjdGl2ZXMgaW5jbHVkZSBuYXRpb25hbC1sZXZlbCBhY2NvdW50aW5nIG9mIGNhcmJvbiBzdG9ja3MgYW5kIGVtaXNzaW9ucyBmcm9tIGJsdWUgICBjYXJib24gZWNvc3lzdGVtcywgaW5jcmVhc2VkIG1hbmFnZW1lbnQgZWZmZWN0aXZlbmVzcyBvZiBibHVlIGNhcmJvbiBlY29zeXN0ZW1zIHdpdGhpbiBwcm90ZWN0ZWQgICBhcmVhcywgYW5kIHRoZSBkZXZlbG9wbWVudCBvZiBibHVlIGNhcmJvbiBvZmZzZXRzIGZvciB0b3VyaXNtIGFjdGl2aXRpZXMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIEluaXRpYXRpdmUgaXMgY29vcmRpbmF0ZWQgYnkgQ29uc2VydmF0aW9uIEludGVybmF0aW9uYWwgKENJKSwgdGhlICAgSW50ZXJuYXRpb25hbCBVbmlvbiBmb3IgQ29uc2VydmF0aW9uIG9mIE5hdHVyZSAoSVVDTiksIGFuZCB0aGUgSW50ZXJnb3Zlcm5tZW50YWwgT2NlYW5vZ3JhcGhpYyAgIENvbW1pc3Npb24gb2YgdGhlIFVuaXRlZCBOYXRpb25zIEVkdWNhdGlvbmFsLCBTY2llbnRpZmljLCBhbmQgQ3VsdHVyYWwgT3JnYW5pemF0aW9uIChJT0MtVU5FU0NPKS4gICAgS25vd2xlZGdlIEJhc2U6IEJsdWUgQ2FyYm9uIHJlZmVycyB0byBjb2FzdGFsLCBhcXVhdGljIGFuZCBtYXJpbmUgY2FyYm9uIHNpbmtzIGhlbGQgYnkgdmVnZXRhdGlvbiwgbWFyaW5lICAgb3JnYW5pc21zIGFuZCBzZWRpbWVudHMuIFRoZSBjb2FzdGFsIGVjb3N5c3RlbXMgb2YgbWFuZ3JvdmVzLCB0aWRhbCBtYXJzaGVzIGFuZCBzZWFncmFzcyBtZWFkb3dzICAgY29udGFpbiBsYXJnZSBzdG9yZXMgb2YgY2FyYm9uIGRlcG9zaXRlZCBieSB2ZWdldGF0aW9uIGFuZCB2YXJpb3VzIG5hdHVyYWwgcHJvY2Vzc2VzIG92ZXIgY2VudHVyaWVzLiAgICAgIFRoZXNlIGVjb3N5c3RlbXMgc2VxdWVzdGVyIGFuZCBzdG9yZSBtb3JlIGNhcmJvbiAtIG9mdGVuIHJlZmVycmVkIHRvIGFzICdibHVlIGNhcmJvbicgLSBwZXIgdW5pdCBhcmVhIHRoYW4gICB0ZXJyZXN0cmlhbCBmb3Jlc3RzLiBUaGUgYWJpbGl0eSBvZiB0aGVzZSB2ZWdldGF0ZWQgZWNvc3lzdGVtcyB0byByZW1vdmUgY2FyYm9uIGRpb3hpZGUgKENPMikgZnJvbSB0aGUgICBhdG1vc3BoZXJlIG1ha2VzIHRoZW0gc2lnbmlmaWNhbnQgbmV0IGNhcmJvbiBzaW5rcywgYW5kIHRoZXkgYXJlIG5vdyBiZWluZyByZWNvZ25pemVkIGZvciB0aGVpciByb2xlIGluICAgbWl0aWdhdGluZyBjbGltYXRlIGNoYW5nZS4gICAgU291cmNlOiAgaHR0cHM6Ly93d3cudGhlYmx1ZWNhcmJvbmluaXRpYXRpdmUub3JnLyAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to the Global Environment  Facility (GEF), which one of the following  statements is correct?  1. It is an independent financial organization  established on the eve of the 1992 Rio Earth  Summit.  2. It serves as a financial mechanism for  Convention on Biological Diversity.  3. It is linked formally to the Montreal Protocol  to support implementation of the Protocol.  4. The SECURE Himalaya project in India is  funded by the Global Environment Facility  (GEF).  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBUaGUgR2xvYmFsIEVudmlyb25tZW50IEZhY2lsaXR5IChHRUYpLCBlc3RhYmxpc2hlZCBvbiB0aGUgZXZlIG9mIHRoZSAxOTkyIFJpbyBFYXJ0aCBTdW1taXQsIGlzIGEgY2F0YWx5c3QgICBmb3IgYWN0aW9uIG9uIHRoZSBlbnZpcm9ubWVudCAtIGFuZCBtdWNoIG1vcmUuIFRocm91Z2ggaXRzIHN0cmF0ZWdpYyBpbnZlc3RtZW50cywgdGhlIEdFRiB3b3JrcyB3aXRoICAgcGFydG5lcnMgdG8gdGFja2xlIHRoZSBwbGFuZXQncyBiaWdnZXN0IGVudmlyb25tZW50YWwgaXNzdWVzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEdFRiBpcyBhbiBpbmRlcGVuZGVudCBmaW5hbmNpYWwgb3JnYW5pemF0aW9uLiBUaGUgR2xvYmFsIEVudmlyb25tZW50IEZhY2lsaXR5ICAgKEdFRiksIGVzdGFibGlzaGVkIG9uIHRoZSBldmUgb2YgdGhlIDE5OTIgUmlvIEVhcnRoIFN1bW1pdC4gVGhlIEdFRiBpcyBBIHBhcnRuZXJzaGlwIG9mIDE4IGFnZW5jaWVzICAgaW5jbHVkaW5nIFVuaXRlZCBOYXRpb25zIGFnZW5jaWVzLCBtdWx0aWxhdGVyYWwgZGV2ZWxvcG1lbnQgYmFua3MsIG5hdGlvbmFsIGVudGl0aWVzIGFuZCBpbnRlcm5hdGlvbmFsICAgTkdPcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBHRUYgaXMgYSBmaW5hbmNpYWwgbWVjaGFuaXNtIGZvciBmaXZlIG1ham9yIGludGVybmF0aW9uYWwgZW52aXJvbm1lbnRhbCAgIGNvbnZlbnRpb25zOiB0aGUgTWluYW1hdGEgQ29udmVudGlvbiBvbiBNZXJjdXJ5LCB0aGUgU3RvY2tob2xtIENvbnZlbnRpb24gb24gUGVyc2lzdGVudCBPcmdhbmljICAgUG9sbHV0YW50cyAoUE9QcyksIHRoZSBVbml0ZWQgTmF0aW9ucyBDb252ZW50aW9uIG9uIEJpb2xvZ2ljYWwgRGl2ZXJzaXR5IChVTkNCRCksIHRoZSBVbml0ZWQgTmF0aW9ucyAgIENvbnZlbnRpb24gdG8gQ29tYmF0IERlc2VydGlmaWNhdGlvbiAoVU5DQ0QpIGFuZCB0aGUgVW5pdGVkIE5hdGlvbnMgRnJhbWV3b3JrIENvbnZlbnRpb24gb24gQ2xpbWF0ZSAgIENoYW5nZSAoVU5GQ0NDKS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBHRUYsIGlzIG5vdCBsaW5rZWQgZm9ybWFsbHkgdG8gdGhlIE1vbnRyZWFsIFByb3RvY29sIG9uIFN1YnN0YW5jZXMgdGhhdCAgIERlcGxldGUgdGhlIE96b25lIExheWVyIChNUCksIGJ1dCBpdCBzdXBwb3J0cyBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgUHJvdG9jb2wgaW4gY291bnRyaWVzIHdpdGggZWNvbm9taWVzICAgaW4gdHJhbnNpdGlvbi4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGUgU0VDVVJFIEhpbWFsYXlhIHByb2plY3QgaXMgYSBwYXJ0IG9mICdHbG9iYWwgUGFydG5lcnNoaXAgb24gV2lsZGxpZmUgICBDb25zZXJ2YXRpb24gYW5kIENyaW1lIFByZXZlbnRpb24gZm9yIFN1c3RhaW5hYmxlIERldmVsb3BtZW50JyAoR2xvYmFsIFdpbGRsaWZlIFByb2dyYW0pIGZ1bmRlZCBieSB0aGUgICBHbG9iYWwgRW52aXJvbm1lbnQgRmFjaWxpdHkgKEdFRikuICAgU291cmNlOiAgVU5FUC8gR0VGICAgaHR0cHM6Ly93d3cudW5lcC5vcmcvZ2VmLyAgIGh0dHA6Ly93d3cuZ2xvYmFsZW52aXJvbm1lbnRmdW5kLmNvbS8gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only    Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to the International Solar  Alliance (ISA), consider the following  statements:  1.  The ISA is guided by its 'Towards 1000'  strategy which aims to mobilize USD 1,000  billion of investments in solar energy.  2.  Ease of Doing Solar Report is a publication  of International Solar Alliance.  3.  Countries lying beyond the tropics cannot  become the member of international solar  alliance.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBJbnRlcm5hdGlvbmFsIFNvbGFyIEFsbGlhbmNlIChJU0EpIGlzIGEgdHJlYXR5IGJhc2VkIGludGVyLWdvdmVybm1lbnRhbCBvcmdhbml6YXRpb24gd29ya2luZyB0byBjcmVhdGUgICBhIGdsb2JhbCBtYXJrZXQgc3lzdGVtIHRvIHRhcCB0aGUgYmVuZWZpdHMgb2Ygc29sYXIgcG93ZXIgYW5kIHByb21vdGUgY2xlYW4gZW5lcmd5IGFwcGxpY2F0aW9ucy4gIFRoZSAgIEludGVybmF0aW9uYWwgU29sYXIgQWxsaWFuY2UgaXMgYSBncm91cCBvZiBuYXRpb25zIHRoYXQgbGllcyB3aXRoaW4gdGhlIFRyb3BpY3MgKFRyb3BpYyBvZiBDYW5jZXIgYW5kIFRyb3BpYyAgIG9mIENhcHJpY29ybikgYW5kIHJlY2VpdmUgc3Vuc2hpbmUgZm9yIG1vcmUgdGhhbiAzMDAgZGF5cy4gSXQgaXMgYSBwbGF0Zm9ybSBmb3IgdGhlIGNvbGxhYm9yYXRpb24gb2Ygc3Vuc2hpbmUgICBjb3VudHJpZXMgaW4gdGhlIGRvbWFpbiBvZiBlbmVyZ3kgc2VjdXJpdHkuIFRoZSBhbGxpYW5jZSB3YXMgZm9ybWVkIHdpdGggdGhlIGludGVudCB0byByZWR1Y2UgdGhlICAgZGVwZW5kZW5jZSBvbiBub24tcmVuZXdhYmxlIHNvdXJjZXMgb2YgZW5lcmd5IGxpa2UgZm9zc2lsIGZ1ZWxzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBJU0EgaXMgZ3VpZGVkIGJ5IGl0cyAnVG93YXJkcyAxMDAwJyBzdHJhdGVneSB3aGljaCBhaW1zIHRvIG1vYmlsaXNlIFVTRCAxLDAwMCAgIGJpbGxpb24gb2YgaW52ZXN0bWVudHMgaW4gc29sYXIgZW5lcmd5IHNvbHV0aW9ucyBieSAyMDMwLCB3aGlsZSBkZWxpdmVyaW5nIGVuZXJneSBhY2Nlc3MgdG8gMSwwMDAgbWlsbGlvbiAgIHBlb3BsZSB1c2luZyBjbGVhbiBlbmVyZ3kgc29sdXRpb25zIGFuZCByZXN1bHRpbmcgaW4gaW5zdGFsbGF0aW9uIG9mIDEsMDAwIEdXIG9mIHNvbGFyIGVuZXJneSBjYXBhY2l0eS4gVGhpcyAgIHdvdWxkIGhlbHAgbWl0aWdhdGUgZ2xvYmFsIHNvbGFyIGVtaXNzaW9ucyB0byB0aGUgdHVuZSBvZiAxLDAwMCBtaWxsaW9uIHRvbm5lcyBvZiBDTzIgZXZlcnkgeWVhci4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgSW50ZXJuYXRpb25hbCBTb2xhciBBbGxpYW5jZSBoYXMgcmVsZWFzZWQgJ0Vhc2Ugb2YgRG9pbmcgU29sYXIgUmVwb3J0IDIwMjAnIG9uICAgMjR0aCBGZWJydWFyeSAyMDIxLiBUaGUgSW50ZXJuYXRpb25hbCBTb2xhciBBbGxpYW5jZSdzIEVhc2Ugb2YgRG9pbmcgU29sYXIgUmVwb3J0IDIwMjAgaGFzIGNvdmVyZWQgODAgICBjb3VudHJpZXMuIEl0IGlkZW50aWZpZXMgdGhlIGhpZ2ggc29sYXIgZW5lcmd5IHBlcmZvcm1lcnMgaW4gMjAyMC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEFsbCBtZW1iZXIgc3RhdGVzIG9mIHRoZSBVbml0ZWQgTmF0aW9ucywgaW5jbHVkaW5nIHRob3NlIGx5aW5nIGJleW9uZCB0aGUgICB0cm9waWNzLCBjYW4gbm93IGpvaW4gdGhlIEludGVybmF0aW9uYWwgU29sYXIgQWxsaWFuY2UgKElTQSkgd2l0aCBhbiBhbWVuZG1lbnQgdG8gaXRzIGZyYW1ld29yayAgIGFncmVlbWVudCBjb21pbmcgaW50byBlZmZlY3QgcmVjZW50bHkuICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbC9hbGwtbWVtYmVyLXN0YXRlcy1vZi11bi1jYW4tbm93LWpvaW4tICBpbnRlcm5hdGlvbmFsLXNvbGFyLWFsbGlhbmNlLWluZGlhL2FydGljbGUzMzU4MTc4OS5lY2UgICBodHRwczovL2lzb2xhcmFsbGlhbmNlLm9yZy8gICBodHRwczovL21ucmUuZ292LmluL2lzYS8gICAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following pairs are correctly  matched?  List I  Funds  List II  Administered by  1. Climate Investment  Fund  Multilateral  development banks  2. Global Environment  Facility  World Bank  3. Special Climate  Change fund  Global Environment  Fund  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0LiBUaGUgQ2xpbWF0ZSBJbnZlc3RtZW50IEZ1bmRzIChDSUZzKSBhcmUgaW52ZXN0bWVudCBwcm9ncmFtcyBhZG1pbmlzdGVyZWQgYnkgdGhlICAgbXVsdGlsYXRlcmFsIGRldmVsb3BtZW50IGJhbmtzIChNREJzKSB0aGF0IGFpbSB0byBoZWxwIGZpbmFuY2UgZGV2ZWxvcGluZyBjb3VudHJpZXMnIHRyYW5zaXRpb25zIHRvd2FyZCAgIGxvdy1jYXJib24gYW5kIGNsaW1hdGUtcmVzaWxpZW50IGRldmVsb3BtZW50LiBUaGUgQ1RGIHByb3ZpZGVzIGZpbmFuY2luZyBmb3IgZGVtb25zdHJhdGluZywgZGVwbG95aW5nLCAgIGFuZCBkaWZmdXNpbmcgbG93LWNhcmJvbiB0ZWNobm9sb2dpZXMgdGhhdCBoYXZlIHRoZSBwb3RlbnRpYWwgZm9yIGxvbmctdGVybSBhdm9pZGFuY2Ugb2YgZ3JlZW5ob3VzZSBnYXMgICBlbWlzc2lvbnMuICAgUGFpciAyIGlzIGNvcnJlY3QuIFRoZSBHbG9iYWwgRW52aXJvbm1lbnQgRmFjaWxpdHkgKEdFRikgVHJ1c3QgRnVuZCB3YXMgZXN0YWJsaXNoZWQgb24gdGhlIGV2ZSBvZiB0aGUgMTk5MiAgIFJpbyBFYXJ0aCBTdW1taXQsIHRvIGhlbHAgdGFja2xlIG91ciBwbGFuZXQncyBtb3N0IHByZXNzaW5nIGVudmlyb25tZW50YWwgcHJvYmxlbXMuIEdFRiBmdW5kaW5nIHRvICAgc3VwcG9ydCB0aGUgcHJvamVjdHMgaXMgY29udHJpYnV0ZWQgYnkgZG9ub3IgY291bnRyaWVzLiBHRUYgZnVuZHMgYXJlIGF2YWlsYWJsZSB0byBkZXZlbG9waW5nIGNvdW50cmllcyAgIGFuZCBjb3VudHJpZXMgd2l0aCBlY29ub21pZXMgaW4gdHJhbnNpdGlvbiB0byBtZWV0IHRoZSBvYmplY3RpdmVzIG9mIHRoZSBpbnRlcm5hdGlvbmFsIGVudmlyb25tZW50YWwgICBjb252ZW50aW9ucyBhbmQgYWdyZWVtZW50cy4gICAgVGhlIFdvcmxkIEJhbmsgc2VydmVzIGFzIHRoZSBHRUYgVHJ1c3RlZSwgYWRtaW5pc3RlcmluZyB0aGUgR0VGIFRydXN0IEZ1bmQgKGNvbnRyaWJ1dGlvbnMgYnkgZG9ub3JzKS4gICBUaGUgVHJ1c3RlZSBoZWxwcyBtb2JpbGl6ZSBHRUYgcmVzb3VyY2VzOyBkaXNidXJzZXMgZnVuZHMgdG8gR0VGIEFnZW5jaWVzOyBwcmVwYXJlcyBmaW5hbmNpYWwgcmVwb3J0cyBvbiAgIGludmVzdG1lbnRzIGFuZCB1c2Ugb2YgcmVzb3VyY2VzOyBhbmQgbW9uaXRvcnMgYXBwbGljYXRpb24gb2YgYnVkZ2V0YXJ5IGFuZCBwcm9qZWN0IGZ1bmRzLiBUaGUgVHJ1c3RlZSAgIGNyZWF0ZXMgcGVyaW9kaWMgcmVwb3J0cyB0aGF0IGNvbnRhaW4gYW4gYXJyYXkgb2YgZnVuZC1zcGVjaWZpYyBmaW5hbmNpYWwgaW5mb3JtYXRpb24uICAgUGFpciAzIGlzIGNvcnJlY3QuIFRoZSBTcGVjaWFsIENsaW1hdGUgQ2hhbmdlIEZ1bmQsIG9uZSBvZiB0aGUgd29ybGQncyBmaXJzdCBtdWx0aWxhdGVyYWwgY2xpbWF0ZSBhZGFwdGF0aW9uICAgZmluYW5jZSBpbnN0cnVtZW50cywgd2FzIGNyZWF0ZWQgYXQgdGhlIDIwMDEgQ29uZmVyZW5jZSBvZiB0aGUgUGFydGllcyAoQ09QKSB0byB0aGUgVW5pdGVkIE5hdGlvbnMgICBGcmFtZXdvcmsgQ29udmVudGlvbiBvbiBDbGltYXRlIENoYW5nZSAoVU5GQ0NDKSB0byBoZWxwIHZ1bG5lcmFibGUgbmF0aW9ucyB0byBhZGRyZXNzIHRoZXNlIG5lZ2F0aXZlICAgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZS4gICBUaGUgU0NDRiBpcyBtYW5hZ2VkIGJ5IHRoZSBHbG9iYWwgRW52aXJvbm1lbnQgRnVuZCBhbmQgb3BlcmF0ZXMgaW4gcGFyYWxsZWwgd2l0aCB0aGUgTGVhc3QgRGV2ZWxvcGVkICAgQ291bnRyaWVzIEZ1bmQgKExEQ0YpLiBCb3RoIGZ1bmRzIGhhdmUgYSBtYW5kYXRlIHRvIHNlcnZlIHRoZSBQYXJpcyBBZ3JlZW1lbnQuIFNDQ0YgZmluYW5jaW5nIGlzIG9wZW4gICB0byBhbGwgdnVsbmVyYWJsZSBkZXZlbG9waW5nIGNvdW50cmllcyBhbmQgc3VwcG9ydHMgYSB3aWRlIHNwZWN0cnVtIG9mIGFkYXB0YXRpb24gYWN0aXZpdGllcywgaW5jbHVkaW5nICAgaW5ub3ZhdGl2ZSB0b29scyB0aGF0IGNhbiBiZSBzY2FsZWQgZm9yIGltcGFjdC4gICBLbm93bGVkZ2UgQmFzZTogVGhlIEdFRiBpcyBhIG11bHRpbGF0ZXJhbCBmaW5hbmNpYWwgaW5zdGl0dXRpb24sIHdpdGggMTczIG1lbWJlciBjb3VudHJpZXMsIGJyaW5naW5nICAgdG9nZXRoZXIgZGV2ZWxvcG1lbnQgaW5zdGl0dXRpb25zLCB0aGUgc2NpZW50aWZpYyBjb21tdW5pdHksIHByaXZhdGUgc2VjdG9yIGFuZCBub24tZ292ZXJubWVudGFsICAgb3JnYW5pemF0aW9ucyBpbiBiZWhhbGYgb2YgYSBjb21tb24gZ2xvYmFsIGVudmlyb25tZW50IGFnZW5kYS4gSXRzIHNlY3JldGFyaWF0IGlzIGJhc2VkIGluIFdhc2hpbmd0b24gRC5DLiAgIGFuZCBtYW5hZ2VkIGJ5IHRoZSBXb3JsZCBCYW5rIHVuZGVyIHRoZSBzdXBlcnZpc2lvbiBvZiB0aGUgR0VGIENvdW5jaWwsIHdoaWNoIGlzIHRoZSBHRUYncyBkZWNpc2lvbi0gIG1ha2luZyBhbmQgY29udHJvbCBhdXRob3JpdHkuICAgU291cmNlOiBodHRwczovL3VuZmNjYy5pbnQvQWRhcHRhdGlvbi0gIEZ1bmQjOn46dGV4dD1UaGUlMjBBZGFwdGF0aW9uJTIwRnVuZCUyMGlzJTIwc3VwZXJ2aXNlZCwoTWVtYmVyc2hpcCUyMG9mJTIwdGhlJTIwQUZCKS4gICBodHRwczovL3NncC5mYXMub3JnL2Nycy9taXNjL1I0MTMwMi5wZGYgICBodHRwczovL3d3dy50aGVnZWYub3JnL3doYXQtd2UtZG8gb3BpY3Mvc3BlY2lhbC1jbGltYXRlLWNoYW5nZS1mdW5kLXNjY2YgICBodHRwczovL3d3dy50aGVnZWYub3JnL3doby13ZS1hcmUvZnVuZGluZyAgIGh0dHBzOi8vd3d3LmZhby5vcmcvMy9hYzgzNmUvQUM4MzZFMDUuaHRtIzp+OnRleHQ9SXRzJTIwc2VjcmV0YXJpYXQlMjBpcyUyMGJhc2VkJTIwaW4sZnJvbSUgIDIwQ2VudHJhbCUyMGFuZCUyMEVhc3Rlcm4lMjBFdXJvcGUuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3    .  "
      }
    },
    {
      "index" : 15,
      "question" : "With reference to Permafrost thawing,  consider the following statements:  1.  It destabilizes the ground above it causing  unprecedented flooding.  2.  It accelerates the warming of Earth,  releasing methane directly into the  atmosphere.  3.  It may lead to the re-emergence of harmful  bacteria and diseases.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBlcm1hZnJvc3QgdGhhdyBpcyBvbmUgb2YgdGhlIGdyYXZlc3QgeWV0IGxlc3NlciBkaXNjdXNzZWQgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZS4gUGVybWFmcm9zdCBjb3ZlcnMgMjQgICBwZXJjZW50IG9mIHRoZSBzdXJmYWNlIG9mIGxhbmQgbWFzc2VzIGluIHRoZSBub3J0aGVybiBoZW1pc3BoZXJlIGFuZCBhY2NvdW50cyBmb3IgbmVhcmx5IGhhbGYgb2YgYWxsIG9yZ2FuaWMgICBjYXJib24gc3RvcmVkIHdpdGhpbiB0aGUgcGxhbmV0J3Mgc29pbC4gQXMgbG9uZyBhcyB0aGlzIG9yZ2FuaWMgbWF0dGVyIHJlbWFpbnMgZnJvemVuLCBpdCB3aWxsIHN0YXkgdHJhcHBlZCBpbiAgIHRoZSBwZXJtYWZyb3N0LiBIb3dldmVyLCBpZiBpdCB0aGF3cywgbWljcm9iZXMgd2lsbCBiZWdpbiB0byBlYXQgdGhlIG1hdGVyaWFsLCBjYXVzaW5nIGl0IHRvIGRlY2F5IGFuZCAgIHJlbGVhc2luZyBjYXJib24gZGlveGlkZSBhbmQgbWV0aGFuZSBpbnRvIHRoZSBhdG1vc3BoZXJlLiBFdmVuIGlmIGEgc21hbGwgZnJhY3Rpb24gb2YgdGhlc2UgZ3JlZW5ob3VzZSAgIGdhc2VzIGFyZSByZWxlYXNlZCwgaXQgd2lsbCBoYXZlIG1ham9yIGNvbnNlcXVlbmNlcyBvbiBub3Qgb25seSB0aGUgQXJjdGljLCBidXQgRWFydGgncyBlbnRpcmUgY2xpbWF0ZSBzeXN0ZW0sICAgYXMgdGhleSBpbnRlbnNpZnkgZ2xvYmFsIGNsaW1hdGUgY2hhbmdlLiAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgUGVybWFmcm9zdCB0aGF3IGRlc3RhYmlsaXplcyB0aGUgZ3JvdW5kIGFib3ZlIGl0LCBkYW1hZ2luZyBjcml0aWNhbCBpbmZyYXN0cnVjdHVyZSwgICBjYXVzaW5nIHVucHJlY2VkZW50ZWQgZmxvb2RpbmcsIGFuZCBkaXNwbGFjaW5nIGVudGlyZSBjb21tdW5pdGllcy4gU29pbCB0aGF0IHdhcyBvbmNlIGZyb3plbiB5ZWFyLXJvdW5kICAgaXMgbm93IHRoYXdpbmcgYW5kIHJlZnJlZXppbmcgZWFjaCB5ZWFyLiBXaGVuIHRoZSBncm91bmQgdGhhd3MsIHRoZSBzb2lsIGNvbnRyYWN0cyBhbmQgc2lua3MsIGFuZCB3aGVuICAgaXQgZnJlZXplcyBhZ2FpbiBpdCBleHBhbmRzIGFuZCByaXNlcy4gVGhpcyBjb250aW51b3VzIGN5Y2xlIHNoaWZ0cywgZGlzcGxhY2VzLCBhbmQgYnJlYWtzIHdoYXRldmVyIGxpZXMgYWJvdmUgICBpdCAtIHJvYWRzLCByYWlscm9hZCB0cmFja3MsIHBpcGVzLCBidWlsZGluZ3MsIGFuZCBtb3JlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBBcmN0aWMgaXMgd2FybWluZyBtb3JlIHRoYW4gdHdvIHRpbWVzIGZhc3RlciB0aGFuIHRoZSBnbG9iYWwgYXZlcmFnZS4gICBQZXJtYWZyb3N0IHRoYXcgY29udHJpYnV0ZXMgdG8gYSBwb3NpdGl2ZSBmZWVkYmFjayBsb29wIHRoYXQgZnVydGhlciBhY2NlbGVyYXRlcyB0aGUgd2FybWluZyBvZiBFYXJ0aCwgICByZWxlYXNpbmcgbWV0aGFuZSB3aGljaCBpcyBhIG1vcmUgcG93ZXJmdWwgZ3JlZW5ob3VzZSBnYXMgdGhhbiBjYXJib24sIGRpcmVjdGx5IGludG8gdGhlIGF0bW9zcGhlcmUsICAgYW5kIGNvbnRyaWJ1dGluZyB0byB0aGUgc3ByZWFkIG9mIGRldmFzdGF0aW5nIEFyY3RpYyB3aWxkZmlyZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhhd2luZyBwZXJtYWZyb3N0IG1heSBsZWFkIHRvIHRoZSByZS1lbWVyZ2VuY2Ugb2YgaGFybWZ1bCBiYWN0ZXJpYSBhbmQgICBkaXNlYXNlcyB0aGF0IGhhdmUgYmVlbiBmcm96ZW4gaW4gdGhlIGVhcnRoIGZvciBodW5kcmVkcyBvZiB5ZWFycyBhbmQgY291bGQgaGFybSBBcmN0aWMgZWNvc3lzdGVtcy4gQW4gICBpbnN0YW5jZSBvZiB0aGlzIGhhcyBhbHJlYWR5IGJlZW4gc2VlbiBpbiAyMDE2LCB3aGVuIGFuIGFudGhyYXggb3V0YnJlYWsgZnJvbSBhIHJvdHRpbmcgYW5pbWFsIGNhcmNhc3MgICBmb3VuZCBpbiB0aGUgcGVybWFmcm9zdCBjYXVzZWQgb3ZlciA3MCBwZW9wbGUgdG8gYmUgaG9zcGl0YWxpemVkIGluIG5vcnRoZXJuIFJ1c3NpYSwgYW5kIGtpbGxlZCBhIGNoaWxkIGFuZCAgIG1vcmUgdGhhbiAyLDMwMCByZWluZGVlci4gICAgU291cmNlOiBodHRwczovL3d3dy50aGVhcmN0aWNpbnN0aXR1dGUub3JnL3Blcm1hZnJvc3QtdGhhdy13YXJtaW5nLXdvcmxkLWFyY3RpYy1pbnN0aXR1dGUtICBwZXJtYWZyb3N0LXNlcmllcy1mYWxsLXdpbnRlci0yMDIwLyAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to Paris agreement,  consider the following statements:  1.  The Paris Agreement is a non-binding  international treaty on climate change  adopted at COP 21.  2.  Its goal is to limit global warming to below 2  degrees Celsius compared to pre-industrial  levels.  3.  Enhanced transparency framework (ETF)  was established under Paris Agreement.  4.  Unlike Kyoto protocol Paris agreement only  applied to developed countries.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIFBhcmlzIEFncmVlbWVudCBpcyBhIGxlZ2FsbHkgYmluZGluZyBpbnRlcm5hdGlvbmFsIHRyZWF0eSBvbiBjbGltYXRlIGNoYW5nZS4gICBJdCB3YXMgYWRvcHRlZCBieSAxOTYgUGFydGllcyBhdCBDT1AgMjEgaW4gUGFyaXMsIG9uIDEyIERlY2VtYmVyIDIwMTUgYW5kIGVudGVyZWQgaW50byBmb3JjZSBvbiA0IE5vdmVtYmVyICAgMjAxNi4gICBJbXBsZW1lbnRhdGlvbiBvZiB0aGUgUGFyaXMgQWdyZWVtZW50IHJlcXVpcmVzIGVjb25vbWljIGFuZCBzb2NpYWwgdHJhbnNmb3JtYXRpb24sIGJhc2VkIG9uIHRoZSBiZXN0ICAgYXZhaWxhYmxlIHNjaWVuY2UuIFRoZSBQYXJpcyBBZ3JlZW1lbnQgd29ya3Mgb24gYSA1LSB5ZWFyIGN5Y2xlIG9mIGluY3JlYXNpbmdseSBhbWJpdGlvdXMgY2xpbWF0ZSBhY3Rpb24gICBjYXJyaWVkIG91dCBieSBjb3VudHJpZXMuIEJ5IDIwMjAsIGNvdW50cmllcyBoYWQgc3VibWl0dGVkIHRoZWlyIHBsYW5zIGZvciBjbGltYXRlIGFjdGlvbiBrbm93biBhcyAgIG5hdGlvbmFsbHkgZGV0ZXJtaW5lZCBjb250cmlidXRpb25zIChORENzKS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJdHMgZ29hbCBpcyB0byBsaW1pdCBnbG9iYWwgd2FybWluZyB0byB3ZWxsIGJlbG93IDIgZGVncmVlcyBDZWxzaXVzLCBwcmVmZXJhYmx5IHRvICAgMS41IGRlZ3JlZXMgQ2Vsc2l1cywgY29tcGFyZWQgdG8gcHJlLWluZHVzdHJpYWwgbGV2ZWxzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFdpdGggdGhlIFBhcmlzIEFncmVlbWVudCwgY291bnRyaWVzIGVzdGFibGlzaGVkIGFuIGVuaGFuY2VkIHRyYW5zcGFyZW5jeSAgIGZyYW1ld29yayAoRVRGKS4gVW5kZXIgRVRGLCBzdGFydGluZyBpbiAyMDI0LCBjb3VudHJpZXMgd2lsbCByZXBvcnQgdHJhbnNwYXJlbnRseSBvbiBhY3Rpb25zIHRha2VuIGFuZCAgIHByb2dyZXNzIGluIGNsaW1hdGUgY2hhbmdlIG1pdGlnYXRpb24sIGFkYXB0YXRpb24gbWVhc3VyZXMgYW5kIHN1cHBvcnQgcHJvdmlkZWQgb3IgcmVjZWl2ZWQuIEl0IGFsc28gICBwcm92aWRlcyBmb3IgaW50ZXJuYXRpb25hbCBwcm9jZWR1cmVzIGZvciB0aGUgcmV2aWV3IG9mIHRoZSBzdWJtaXR0ZWQgcmVwb3J0cy4gICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3QuIFRoZSBLeW90byBwcm90b2NvbCBvbmx5IGFwcGxpZWQgdG8gZGV2ZWxvcGVkIGNvdW50cmllcywgd2hlcmVhcyB0aGUgUGFyaXMgICBhZ3JlZW1lbnQgcmVxdWlyZXMgYWxsIGNvdW50cmllcywgaW5jbHVkaW5nIGRldmVsb3BpbmcgY291bnRyaWVzLCB0byByZWR1Y2UgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zLiAgIFNvdXJjZTogIGh0dHBzOi8vdW5mY2NjLmludC9wcm9jZXNzLWFuZC1tZWV0aW5ncyBoZS1wYXJpcy1hZ3JlZW1lbnQgaGUtcGFyaXMtYWdyZWVtZW50ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2, 3 and 4 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 3 and 4 only   "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following could be the  consequence, if Atlantic Meridional  Overturning Circulation (AMOC) collapses due  to adverse effects of climate change?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEF0bGFudGljIE1lcmlkaW9uYWwgT3ZlcnR1cm5pbmcgQ2lyY3VsYXRpb24gKEFNT0MpIGFsc28ga25vd24gYXMgQXRsYW50aWMgQ29udmV5b3IgQmVsdC4gSXQgaXMgcGFydCBvZiAgIHRoZSBFYXJ0aCdzIGxhcmdlc3Qgd2F0ZXIgY2lyY3VsYXRpb24gc3lzdGVtIGtub3duIGFzIFRoZXJtb2hhbGluZSBjaXJjdWxhdGlvbi4gSW4gdGhpcyBvY2VhbiBjdXJyZW50cyAgIG1vdmUgd2FybSwgc2FsdHkgd2F0ZXIgZnJvbSB0aGUgdHJvcGljcyB0byByZWdpb25zIGZ1cnRoZXIgbm9ydGgsIHN1Y2ggYXMgd2VzdGVybiBFdXJvcGUgYW5kIHNlbmRzIGNvbGRlciAgIHdhdGVyIHNvdXRoLiBJbXBvcnRhbmNlIG9mIEFNT0MgY2FuIGJlIHNlZW4gdGhyb3VnaCB0aGUgZm9sbG93aW5nIHN0YXRlbWVudHM6ICAgIE9wdGlvbiBhIGlzIGNvcnJlY3QuIElmIEFNT0MgY29sbGFwc2VzLCBwYXJ0cyBvZiB3ZXN0ZXJuIEV1cm9wZSBhbmQgZWFzdGVybiBOb3J0aCBBbWVyaWNhIHRoYXQgd2VyZSAgIHdhcm1lZCBieSB0aGUgY3VycmVudHMgd291bGQgZXhwZXJpZW5jZSBhIG1hc3NpdmUgZGVjbGluZSBpbiB0aGVpciB0ZW1wZXJhdHVyZXMuIFRoZSBsYXN0IHRpbWUgdGhlICAgQU1PQyBlbnRlcmVkIGEgd2Vha2VuZWQgc3RhdGUsIGl0IHRyaWdnZXJlZCBhIG1pbmktaWNlIGFnZSBvdmVyIHRoZSBOb3J0aGVybiBIZW1pc3BoZXJlIG5lYXIgdGhlICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAgIEF0bGFudGljIE9jZWFuIHRoYXQgbGFzdGVkIGEgbWlsbGVubml1bS4gVGhlIHNlYSBsZXZlbHMgd291bGQgYWxzbyBzdXJnZSBmb2xsb3dpbmcgdGhlIGNvbGxhcHNlIG9mIHRoZSBzdHJlYW0gICBuZWFyIHRoZSBOb3J0aCBBdGxhbnRpYyBjb2FzdC4gICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0IC0gVGhlIHdlYWtlbmluZyBvZiB0aGUgQU1PQyB3b3VsZCBsZWFkIHRvIGRpc3J1cHRpb25zIGluIHJhaW4gcGF0dGVybnMgaW4gU291dGggICBBbWVyaWNhLCBBZnJpY2EgYW5kIGV2ZW4sIFNvdXRoIEVhc3QgQXNpYS4gRHVlIHRvIGl0cyBjb21wbGV4IG5hdHVyZSwgdGhlIEFNT0Mgd291bGQgZXZlbiB0cmlnZ2VyIGEgcmFwaWQgICBtZWx0ZG93biBvZiB0aGUgaWNlIHNoZWV0cyBpbiB0aGUgQW50YXJjdGljLCB3aGlsZSBkaXNydXB0aW5nIHRoZSByYWlucyBhbmQgd2VhdGhlciBwYXR0ZXJucyB0aGF0IHN1c3RhaW4gICB0aGUgQW1hem9uIGZvcmVzdHMuIEFkZGl0aW9uYWxseSwgMC43IGdpZ2F0b25zIG9mIGNhcmJvbiB3aWxsIG5vIGxvbmdlciBiZSBzZXF1ZXN0ZXJlZCBhbm51YWxseSBieSB0aGUgICBBTU9DLCBhcyBpdCBoYWx0cy4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0IC0gVGhlIHdlYWtlbmluZyBvZiB0aGUgQU1PQyB3b3VsZCBkZWNyZWFzZSBtYXJpbmUgcHJvZHVjdGl2aXR5IGluIHRoZSBOb3J0aCAgIEF0bGFudGljIGFzIGxlc3Mgc2lua2luZyB3b3VsZCBsZWFkIHRvIGxlc3MgbWl4aW5nIG9mIHdhdGVyLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdCAtIEluIGNvbnRyYXN0IHRvIHRoZSBub3J0aGVybiBoZW1pc3BoZXJlLCB0aGUgc291dGhlcm4gaGVtaXNwaGVyZSB3aWxsIHR1cm4gICB3YXJtZXIuIFRoZSBub3J0aCB3aWxsIGdldCBjb2xkZXIgYmVjYXVzZSB0aGUgQU1PQyB3aWxsIHN0b3AgdGFraW5nIHRoZSB3YXJtIGN1cnJlbnRzIHRvIGl0LiBBbHRlcm5hdGl2ZWx5LCAgIHRoZSB3YXJtIGN1cnJlbnQgd2lsbCBnbyB0b3dhcmRzIHNvdXRoZXJuIGhlbWlzcGhlcmUgbWFraW5nIGl0IG1vcmUgaG90dGVyLiAgICAgU291cmNlOiAgaHR0cHM6Ly93d3cudGhlZ3VhcmRpYW4uY29tL2Vudmlyb25tZW50LzIwMjEvYXVnLzA1L2NsaW1hdGUtY3Jpc2lzLXNjaWVudGlzdHMtc3BvdC0gIHdhcm5pbmctc2lnbnMtb2YtZ3VsZi1zdHJlYW0tY29sbGFwc2UgICAgaHR0cHM6Ly9zY2llbmNlLmhvd3N0dWZmd29ya3MuY29tL2Vudmlyb25tZW50YWwvZWFydGgvb2NlYW5vZ3JhcGh5L2Ftb2MtbmV3cy5odG0gICAgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvZXhwbGFpbmVkLWF0bGFudGljLW9jZWFuLWN1cnJlbnQtc3lzdGVtLXNsb3dpbmctICBpbXBsaWNhdGlvbnMtNzQ0NTM4OC8gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Huge decline in temperatures in the   Northern Hemisphere around Antarctic.  ",
        "option2" : " Increased carbon sequestration in the   troposphere.  ",
        "option3" : " Increase in the marine productivity in the   North Atlantic.  ",
        "option4" : " The temperature in southern hemisphere   around Antarctica will drop further.   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following pairs:  1. Brown  Hydrogen  produced from natural gas  and methane  2. Green  Hydrogen  produced in a climate- neutral manner  3. Blue Hydrogen produced from fossil fuels  but the carbon is captured  and stored  4. Grey Hydrogen produced from coal  gasification  Which of the pairs given above are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgSHlkcm9nZW4gY2FuIGJlIHByb2R1Y2VkIGZyb20gYSByYW5nZSBvZiByZXNvdXJjZXMgaW5jbHVkaW5nIGZvc3NpbCBmdWVscywgbnVjbGVhciBlbmVyZ3ksIGJpb21hc3MgYW5kICAgcmVuZXdhYmxlIGVuZXJneSBzb3VyY2VzLiBUaGlzIGNhbiBiZSBkb25lIHZpYSBhIG51bWJlciBvZiBwcm9jZXNzZXMuIFRoZSByZXN1bHRpbmcgZ2FzIGNhbiBiZSBidXJuZWQgb3IgICB1c2VkIGFzIGEgY2FycmllciB0byBwcm92aWRlIGVuZXJneS4gQW5kLCBpZiBnZW5lcmF0ZWQgdXNpbmcgcmVuZXdhYmxlcywgaXQgY2FuIGJlIGEgY2xlYW4gYWx0ZXJuYXRpdmUgdG8gICBidXJuaW5nIGZvc3NpbCBmdWVscy4gICBEZXBlbmRpbmcgb24gcHJvZHVjdGlvbiBtZXRob2RzLCBoeWRyb2dlbiBjYW4gYmUgZ3JleSwgYmx1ZSBvciBncmVlbiAtIGFuZCBzb21ldGltZXMgZXZlbiBwaW5rLCB5ZWxsb3cgICBvciB0dXJxdW9pc2UgLSBhbHRob3VnaCBuYW1pbmcgY29udmVudGlvbnMgY2FuIHZhcnkgYWNyb3NzIGNvdW50cmllcyBhbmQgb3ZlciB0aW1lLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3RseSBtYXRjaGVkOiBCcm93biBoeWRyb2dlbiBpcyB0aGUgdmFyaWV0eSBvZiBoeWRyb2dlbiBmdWVsIHByb2R1Y2VkIGZyb20gY29hbCAgIGdhc2lmaWNhdGlvbiAoYW5kIG5vdCBuYXR1cmFsIGdhcyBvciBtZXRoYW5lKS4gIEJyb3duIGh5ZHJvZ2VuIChtYWRlIGZyb20gYnJvd24gY29hbCkgYW5kIGJsYWNrICAgaHlkcm9nZW4gKG1hZGUgZnJvbSBibGFjayBjb2FsKSBhcmUgcHJvZHVjZWQgdmlhIGdhc2lmaWNhdGlvbi4gQXMgYSByZXN1bHQsIGdhc2lmaWNhdGlvbiByZWxlYXNlcyB0aG9zZSBieS0gIHByb2R1Y3RzIGludG8gdGhlIGF0bW9zcGhlcmUuICAgIFBhaXIgMiBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogR3JlZW4gaHlkcm9nZW4gaXMgZXh0cmFjdGVkIHVzaW5nIGEgbWV0aG9kIHRoYXQgZG9lcyBub3QgcHJvZHVjZSBHSEcgICBlbWlzc2lvbnMgaS5lLiBpdCBpcyBjbGltYXRlIG5ldXRyYWwuICAgICBHcmVlbiBoeWRyb2dlbiBpcyBtb3N0IGNvbW1vbmx5IHByb2R1Y2VkIHVzaW5nIGEgZGV2aWNlIGNhbGxlZCBhbiBlbGVjdHJvbHlzZXIuIEVsZWN0cm9seXNlcnMgdXNlICAgZWxlY3RyaWNpdHkgdG8gc3BsaXQgd2F0ZXIgaW50byBoeWRyb2dlbiBhbmQgb3h5Z2VuLiBUaGUga2V5IHRvIHRoaXMgbWV0aG9kIG9mIHByb2R1Y2luZyBncmVlbiBoeWRyb2dlbiAgIGlzIGVsZWN0cm9seXNpcy4gVGhlIGVsZWN0cmljaXR5IHRoYXQgcG93ZXJzIHRoZSBlbGVjdHJvbHlzZXIgY29tZXMgZnJvbSByZW5ld2FibGUgc291cmNlcywgc3VjaCBhcyB3aW5kLCAgIHNvbGFyLCB3aGljaCBoYXZlIG5vIGFzc29jaWF0ZWQgR0hHIGVtaXNzaW9ucy4gICBQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQ6IFdoZW5ldmVyIHRoZSBmb3NzaWwgZnVlbHMgYXJlIHVzZWQgdG8gZ2VuZXJhdGUgaHlkcm9nZW4gZnVlbCBidXQgdGhlIEdIRyAgIGVtaXNzaW9ucyBhcmUgc3RvcmVkIGFuZCBjYXB0dXJlZCBpbnN0ZWFkIG9mIGJlaW5nIHJlbGVhc2VkIGluIHRoZSBlbnZpcm9ubWVudCwgaXQgaXMgY2FsbGVkIGFzIEJsdWUgICBIeWRyb2dlbi4gICBQYWlyIDQgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZDogR3JleSBIeWRyb2dlbiBpcyB2YXJpZXR5IG9mIGh5ZHJvZ2VuIGZ1ZWwgcHJvZHVjZWQgZnJvbSBuYXR1cmFsIGdhcyBvciAgIG1ldGhhbmUgKGFuZCBub3QgY29hbCkuIEdyZXkgaHlkcm9nZW4gaXMgYWxzbyBleHRyYWN0ZWQgZnJvbSBuYXR1cmFsIGdhcyB1c2luZyBzdGVhbSByZWZvcm1pbmcgYnV0LCBpbiAgIHRoaXMgY2FzZSwgcmVsZXZhbnQgdGVjaG5vbG9naWVzIGRvbid0IGNhcHR1cmUgcmVzdWx0aW5nIGVtaXNzaW9ucy4gSW5zdGVhZCwgdGhleSBhcmUgcmVsZWFzZWQgaW50byB0aGUgICBhdG1vc3BoZXJlLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cud2Vmb3J1bS5vcmcvYWdlbmRhLzIwMjEvMDcvY2xlYW4tZW5lcmd5LWdyZWVuLWh5ZHJvZ2VuLyAgIGh0dHBzOi8vdXRpbGl0eWFuYWx5dGljcy5jb20vMjAyMC8xMCBoZS1jb2xvcnMtb2YtaHlkcm9nZW4tYnJvd24tZ3JleS1ibHVlLWFuZC1ncmVlbi10aGluay0gIGFib3V0LWl0LyAgIGh0dHBzOi8vYmxvZy5jc2lyby5hdS9ncmVlbi1ibHVlLWJyb3duLWh5ZHJvZ2VuLWV4cGxhaW5lZC8gICBodHRwczovL3d3dy5icnVuZWwubmV0L2VuL2Jsb2cvcmVuZXdhYmxlLWVuZXJneS8zLW1haW4tdHlwZXMtb2YtaHlkcm9nZW4gICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1, 2 and 3 only  ",
        "option4" : " 1, 3 and 4 only        Downloaded From @cse_updates Telegram Channel   Join @cse_updates For More     "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements with  reference to Carbon Capture and Storage:  1.  Carbon Captures have to be stored on-site  and cannot be transported to other  locations.  2.  Carbon dioxide is highly reactive and thus  Carbon Capture cannot be utilised for  industrial purposes.  3.  Carbon dioxide cannot be captured directly  from the atmosphere.  Which of the statements given above is/are  incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENhcmJvbiBjYXB0dXJlLCB1dGlsaXphdGlvbiBhbmQgc3RvcmFnZSAoQ0NVUykgaW52b2x2ZXMgdGhlIGNhcHR1cmUgb2YgQ08yIGZyb20gbGFyZ2UgcG9pbnQgc291cmNlcywgICBpbmNsdWRpbmcgcG93ZXIgZ2VuZXJhdGlvbiBvciBpbmR1c3RyaWFsIGZhY2lsaXRpZXMgdGhhdCB1c2UgZWl0aGVyIGZvc3NpbCBmdWVscyBvciBiaW9tYXNzIGZvciBmdWVsLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IE9uY2UgdGhlIENPMiBoYXMgYmVlbiBjYXB0dXJlZCwgaXQgaXMgY29tcHJlc3NlZCBpbnRvIGxpcXVpZCBzdGF0ZSBhbmQgICB0cmFuc3BvcnRlZCBieSBwaXBlbGluZSwgc2hpcCBvciByb2FkIHRhbmtlciAodGh1cyBpdCBjYW4gYmUgdHJhbnNwb3J0ZWQpLiBDTzIgY2FuIHRoZW4gYmUgcHVtcGVkICAgdW5kZXJncm91bmQsIHVzdWFsbHkgYXQgZGVwdGhzIG9mIDFrbSBvciBtb3JlLCB0byBiZSBzdG9yZWQgaW50byBkZXBsZXRlZCBvaWwgYW5kIGdhcyByZXNlcnZvaXJzLCBjb2FsYmVkcyAgIG9yIGRlZXAgc2FsaW5lIGFxdWlmZXJzLCB3aGVyZSB0aGUgZ2VvbG9neSBpcyBzdWl0YWJsZS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IENPMiBpcyBrbm93biB0byBoYXZlIGxvdyByZWFjdGl2aXR5IChhbmQgbm90IGhpZ2hseSByZWFjdGl2ZSkuIENPMiBjb3VsZCBhbHNvIGJlICAgdXNlZCB0byBwcm9kdWNlIGNvbW1lcmNpYWxseSBtYXJrZXRhYmxlIHByb2R1Y3RzLiBUaGlzIGlzIGNvbW1vbmx5IGtub3duIGFzIGNhcmJvbiBjYXB0dXJlIHN0b3JhZ2UgICBhbmQgdXRpbGl6YXRpb24gKENDU1UpLiBUaGUgbW9zdCB3ZWxsLWVzdGFibGlzaGVkIGZvcm0gb2YgQ08yIHV0aWxpemF0aW9uIGlzIGVuaGFuY2VkIG9pbCByZWNvdmVyeSAoRU9SKSwgICB3aGVyZSBDTzIgaXMgaW5qZWN0ZWQgaW50byBvaWwgYW5kIGdhcyByZXNlcnZvaXJzIHRvIGluY3JlYXNlIHRoZWlyIGV4dHJhY3Rpb24uICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogIFRoZSBDTzIgY2FuIGFsc28gYmUgY2FwdHVyZWQgZGlyZWN0bHkgZnJvbSB0aGUgYXRtb3NwaGVyZS4gVGhlcmUgYXJlICAgY3VycmVudGx5IDE5IGRpcmVjdCBhaXIgY2FwdHVyZSAoREFDKSBwbGFudHMgb3BlcmF0aW5nIHdvcmxkd2lkZS4gVGhpcyBsZXZlbCBvZiBkZXBsb3ltZW50IHdpbGwgcmVxdWlyZSAgIHNldmVyYWwgbW9yZSBsYXJnZS1zY2FsZSBkZW1vbnN0cmF0aW9ucyB0byByZWZpbmUgdGhlIHRlY2hub2xvZ3kgYW5kIHJlZHVjZSBjYXB0dXJlIGNvc3RzLiAgIEtub3dsZWRnZSBCYXNlOiAgICAxKSBPdGhlciBmb3JtcyBvZiBDTzIgdXRpbGl6YXRpb24gaW5jbHVkZSB1c2luZyBDTzIgaW4gY29uY3JldGUgb3IgcGxhc3RpYyBtYXRlcmlhbHMgb3IgY29udmVydGluZyBpdCBpbnRvICAgYmlvbWFzcyAtIGZvciBleGFtcGxlLCBieSBmZWVkaW5nIENPMiB0byBhbGdhZSwgd2hpY2ggYXJlIHRoZW4gaGFydmVzdGVkIGFuZCBwcm9jZXNzZWQgaW50byBiaW9mdWVsICAgZm9yIHRyYW5zcG9ydC4gICAyKSBQb3N0LWNvbWJ1c3Rpb24gYW5kIG94eWZ1ZWwgZXF1aXBtZW50IGNhbiBiZSBmaXR0ZWQgdG8gbmV3IHBsYW50cyBvciByZXRyb2ZpdHRlZCAtIGluIG90aGVyIHdvcmRzLCAgIGFkZGVkIHRvIGV4aXN0aW5nIHBvd2VyIHN0YXRpb25zIHRoYXQgd2VyZSBvcmlnaW5hbGx5IGJ1aWx0IHdpdGhvdXQgaXQuIFByZS1jb21idXN0aW9uIG1ldGhvZHMgcmVxdWlyZSAgIGxhcmdlIG1vZGlmaWNhdGlvbnMgdG8gZXhpc3RpbmcgcGxhbnMgdG8gYmUgcmV0cm9maXR0ZWQsIGFuZCBhcmUgdGhlcmVmb3JlIG1vcmUgc3VpdGFibGUgdG8gbmV3IGJ1aWx0LiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LmllYS5vcmcvcmVwb3J0cy9hYm91dC1jY3VzICAgIGh0dHBzOi8vd3d3LmxzZS5hYy51ay9ncmFudGhhbWluc3RpdHV0ZS9leHBsYWluZXJzL3doYXQtaXMtY2FyYm9uLWNhcHR1cmUtYW5kLXN0b3JhZ2UtYW5kLXdoYXQtICByb2xlLWNhbi1pdC1wbGF5LWluLXRhY2tsaW5nLWNsaW1hdGUtY2hhbmdlLyAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements with  reference to the National Adaptation Fund for  Climate Change (NAFCC):  1.  The project proposals are required to be  approved by the union Ministry of  Environment, Forest and Climate Change to  be eligible for consideration under NAFCC.  2.  It is a Central Sector Scheme.  3.  The National Afforestation and Eco- Development Board (NAEB) is National  Implementing Entity of NAFCC.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBvdmVyYWxsIGFpbSBvZiBOQUZDQyBpcyB0byBzdXBwb3J0IGNvbmNyZXRlIGFkYXB0YXRpb24gYWN0aXZpdGllcyB3aGljaCBtaXRpZ2F0ZSB0aGUgYWR2ZXJzZSBlZmZlY3RzIG9mICAgY2xpbWF0ZSBjaGFuZ2UuIFRoZSBhY3Rpdml0aWVzIHVuZGVyIHRoaXMgc2NoZW1lIGFyZSBpbXBsZW1lbnRlZCBpbiBhIHByb2plY3QgbW9kZS4gVGhlIHByb2plY3RzIHJlbGF0ZWQgICB0byBhZGFwdGF0aW9uIGluIHNlY3RvcnMgc3VjaCBhcyBhZ3JpY3VsdHVyZSwgYW5pbWFsIGh1c2JhbmRyeSwgd2F0ZXIsIGZvcmVzdHJ5LCB0b3VyaXNtIGV0Yy4gYXJlIGVsaWdpYmxlIGZvciAgIGZ1bmRpbmcgdW5kZXIgTkFGQ0MuIFRoZSBOYXRpb25hbCBBZGFwdGF0aW9uIEZ1bmQgZm9yIENsaW1hdGUgQ2hhbmdlIChOQUZDQykgd2FzIGVzdGFibGlzaGVkIGluICAgQXVndXN0LCAyMDE1IHRvIG1lZXQgdGhlIGNvc3Qgb2YgYWRhcHRhdGlvbiB0byBjbGltYXRlIGNoYW5nZSBmb3IgdGhlIFN0YXRlIGFuZCBVbmlvbiBUZXJyaXRvcmllcyBvZiBJbmRpYSAgIHRoYXQgYXJlIHBhcnRpY3VsYXJseSB2dWxuZXJhYmxlIHRvIHRoZSBhZHZlcnNlIGVmZmVjdHMgb2YgY2xpbWF0ZSBjaGFuZ2UuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgIFRoZSBTdGF0ZXMvVVRzIGFyZSByZXF1aXJlZCB0byBwcmVwYXJlIHRoZSBwcm9qZWN0IHByb3Bvc2FsIGluIGNvbnN1bHRhdGlvbiB3aXRoIE5JRSBpLmUuIE5BQkFSRC4gVGhlICAgcHJvamVjdCBwcm9wb3NhbHMgYXJlIHJlcXVpcmVkIHRvIGJlIGFwcHJvdmVkIGJ5IHRoZSBTdGF0ZSBTdGVlcmluZyBDb21taXR0ZWUgb24gQ2xpbWF0ZSBDaGFuZ2UgdG8gYmUgICBlbGlnaWJsZSBmb3IgY29uc2lkZXJhdGlvbiB1bmRlciBOQUZDQy4gSXQgaXMgdGhlIGRpc2NyZXRpb24gb2YgdGhlIFN0YXRlIEdvdmVybm1lbnQgdG8gZW5nYWdlIGFueSAgIG9yZ2FuaXphdGlvbiB0byBhc3Npc3QgaW4gcHJvamVjdCBwcmVwYXJhdGlvbiwgYXMgcGVyIHRoZWlyIHJlcXVpcmVtZW50LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBOYXRpb25hbCBBZGFwdGF0aW9uIEZ1bmQgZm9yIENsaW1hdGUgQ2hhbmdlIChOQUZDQykgaXMgYSBDZW50cmFsIFNlY3RvciAgIFNjaGVtZSB3aGljaCB3YXMgc2V0IHVwIGluIHRoZSB5ZWFyIDIwMTUtMTYuIFRoZSBhY3Rpdml0aWVzIHVuZGVyIHRoaXMgc2NoZW1lIGFyZSBpbXBsZW1lbnRlZCBpbiBhICAgcHJvamVjdCBtb2RlLiBUaGUgcHJvamVjdHMgcmVsYXRlZCB0byBhZGFwdGF0aW9uIGluIHNlY3RvcnMgc3VjaCBhcyBhZ3JpY3VsdHVyZSwgYW5pbWFsIGh1c2JhbmRyeSwgd2F0ZXIsICAgZm9yZXN0cnksIHRvdXJpc20gZXRjLiBhcmUgZWxpZ2libGUgZm9yIGZ1bmRpbmcgdW5kZXIgTkFGQ0MuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBOQUJBUkQgKGFuZCBub3QgTmF0aW9uYWwgQWZmb3Jlc3RhdGlvbiBhbmQgRWNvLURldmVsb3BtZW50IEJvYXJkKSBoYXMgYmVlbiAgIGRlc2lnbmF0ZWQgYXMgTmF0aW9uYWwgSW1wbGVtZW50aW5nIEVudGl0eSAoTklFKSBmb3IgaW1wbGVtZW50YXRpb24gb2YgYWRhcHRhdGlvbiBwcm9qZWN0cyB1bmRlciAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBOQUZDQyBieSBHb3Z0LiBvZiBJbmRpYS4gTkFCQVJEIGhhcyBhbHJlYWR5IGFuIGV4aXN0aW5nIGFycmFuZ2VtZW50IGFzIE5hdGlvbmFsIEltcGxlbWVudGluZyBFbnRpdHkgICAoTklFKSBmb3IgQWRhcHRhdGlvbiBGdW5kIChBRikgdW5kZXIgS3lvdG8gUHJvdG9jb2wgYXMgd2VsbC4gVGhpcyBpcyB3aHkgaXQgd2FzIGNob3NlbiBhcyBOSUUgZm9yIE5BRkNDICAgYXMgd2VsbC4gICBTb3VyY2U6IGh0dHBzOi8vdmlrYXNwZWRpYS5pbi9lbmVyZ3kvZW52aXJvbm1lbnQvY2xpbWF0ZS1jaGFuZ2UvbmF0aW9uYWwtYWRhcHRhdGlvbi1mdW5kLWZvci0gIGNsaW1hdGUtY2hhbmdlICAgIGh0dHBzOi8vd3d3Lm5hYmFyZC5vcmcvY29udGVudC5hc3B4P2lkPTU4NSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 21,
      "question" : "Talona dialogue frequently seen in news,  is related to which of the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBUYWxhbm9hIERpYWxvZ3VlIGlzIGEgcHJvY2VzcyB3aGljaCB3b3VsZCBoZWxwIGNvdW50cmllcyBpbXBsZW1lbnRzIHRoZWlyIEludGVuZGVkIE5hdGlvbmFsICAgRGV0ZXJtaW5lZCBDb250cmlidXRpb25zIGJ5IHRoZSBlbmQgb2YgMjAyMC4gSW50ZW5kZWQgTmF0aW9uYWxseSBEZXRlcm1pbmVkIENvbnRyaWJ1dGlvbnMgKElOREMpLCBpbiAgIHR1cm4sIGFyZSByZWR1Y3Rpb25zIGluIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyB1bmRlciB0aGUgVW5pdGVkIE5hdGlvbnMgRnJhbWV3b3JrIENvbnZlbnRpb24gb24gICBDbGltYXRlIENoYW5nZSAoVU5GQ0NDKS4gVGhlIFRhbGFub2EgRGlhbG9ndWUgd2FzIGxhdW5jaGVkIGF0IENPUCAyMyB1bmRlciB0aGUgUHJlc2lkZW5jeSBvZiB0aGUgICBSZXB1YmxpYyBvZiBGaWppLiAgIDEpIEluIHRoZSBGaWppYW4gZGlhbGVjdCwgJ3RhbGFub2EnIG1lYW5zIHRvIGhvbGQgYSBjb252ZXJzYXRpb24gaW4gYW4gaW5jbHVzaXZlLCByZWNlcHRpdmUgc3BhY2UuIEluIHRoZSBQYWNpZmljICAgaXNsYW5kcywgaXQgd2FzIGEgdHJhZGl0aW9uYWwgbWV0aG9kIG9mIHNvbHZpbmcgZGlzcHV0ZXMgYmV0d2VlbiB0aGUgdmFyaW91cyB0cmliZXMgdGhhdCBpbmhhYml0ZWQgdGhlICAgcmVnaW9uLiBJbiB0aGlzIHJlZ2FyZCwgdGhlIFRhbGFub2EgRGlhbG9ndWUgaXMgYSBwcm9jZXNzIHRocm91Z2ggd2hpY2ggdGhlIGRlYWRsb2NrIHJlZ2FyZGluZyBjbGltYXRlICAgY2hhbmdlIGNhbiBiZSBicm91Z2h0IHRvZ2V0aGVyIGJ5IGRyYXdpbmcgcGFydGljaXBhbnRzIHRvIHNoYXJlIHRoZWlyIHN0b3JpZXMuICAgVGhlcmUgYXJlIHR3byBvYmplY3RpdmVzIGJlaGluZCB0aGUgcHVycG9zZSBvZiB0aGUgVGFsYW5vYSBEaWFsb2d1ZS4gVGhleSBhcmUgYXMgZm9sbG93czogICAxKSBUbyBtb25pdG9yIHRoZSBwcm9ncmVzcyByZWdhcmRpbmcgdGhlIGdvYWwgb2YgdGhlIFBhcmlzIEFncmVlbWVudCB3aGljaCBpcyB0byByZWR1Y2UgZ2xvYmFsIHdhcm1pbmcgICB0byB3ZWxsIGJlbG93IDItZGVncmVlIENlbHNpdXMgYW5kIGlmIHBvc3NpYmxlLCB0byAxLjUtZGVncmVlIENlbHNpdXMuICAgMikgVG8gaW5mb3JtIHRoZSBuZXh0IHJvdW5kIG9mIG5hdGlvbmFsbHkgZGV0ZXJtaW5lZCBjb250cmlidXRpb25zLiBDdXJyZW50bHksIE5EQ3Mgc2V0IHRoZSB3b3JsZCBvbiAgIGNvdXJzZSBmb3IgMy00QyB3YXJtaW5nIGJ5IHRoZSBlbmQgb2YgdGhlIGNlbnR1cnkgLSBkYW5nZXJvdXNseSBmYXIgZnJvbSB0aGUgUGFyaXMgdGFyZ2V0cy4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9vcGluaW9uL29wLWVkL2Etc3VtLW9mLWNvbnRyaWJ1dGlvbnMvYXJ0aWNsZTIyMzkxOTUwLmVjZSAgIGh0dHBzOi8vdW5mY2NjLmludC9wcm9jZXNzLWFuZC1tZWV0aW5ncyBoZS1wYXJpcy1hZ3JlZW1lbnQgaGUtcGFyaXMtYWdyZWVtZW50LzIwMTgtdGFsYW5vYS0gIGRpYWxvZ3VlLXBsYXRmb3JtICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Forum for improving energy efficiency and   promoting innovative low-energy   technologies.  ",
        "option2" : " It is a process which would help countries   implements their Intended National   Determined Contributions.  ",
        "option3" : " It is a global dialogue that initiates and   performs innovative research on climate   change and related global challenges.  ",
        "option4" : " It is a Global Plastic Action Partnership   dialogue led by World Economic Forum.  "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the role of Halons in  ozone depletion, which of the following  statements is incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBFYXJ0aCdzIG96b25lIGxheWVyIHByb3RlY3RzIGFsbCBsaWZlIGZyb20gdGhlIHN1bidzIGhhcm1mdWwgcmFkaWF0aW9uLCBidXQgaHVtYW4gYWN0aXZpdGllcyBoYXZlICAgZGFtYWdlZCB0aGlzIHNoaWVsZC4gTGVzcyBvem9uZS1sYXllciBwcm90ZWN0aW9uIGZyb20gdWx0cmF2aW9sZXQgKFVWKSBsaWdodCB3aWxsLCBvdmVyIHRpbWUsIGRhbWFnZSBjcm9wcyAgIGFuZCBsZWFkIHRvIGhpZ2hlciBza2luIGNhbmNlciBhbmQgY2F0YXJhY3QgcmF0ZXMuICAgU3RhdGVtZW50IGEgaXMgY29ycmVjdC4gU2NpZW50aXN0cyBoYXZlIGRpc2NvdmVyZWQgdGhhdCBjZXJ0YWluIGNoZW1pY2FscyByZWFjdCB3aXRoIFVWIHJhZGlhdGlvbiBpbiB0aGUgICBzdHJhdG9zcGhlcmUsIHdoaWNoIGNhdXNlcyB0aGVtIHRvIGJyZWFrIGFwYXJ0IGFuZCByZWxlYXNlIGNobG9yaW5lIG9yIGJyb21pbmUgYXRvbXMuIFRoZXNlIGF0b21zLCBpbiAgIHR1cm4sIGRlc3Ryb3kgb3pvbmUgbW9sZWN1bGVzLiAgIE96b25lLWRlcGxldGluZyBzdWJzdGFuY2VzIChPRFMpLCB3aGljaCBpbmNsdWRlIGNobG9yb2ZsdW9yb2NhcmJvbnMgKENGQ3MpIGFuZCBoeWRyb2ZsdW9yb2NhcmJvbnMgICAoSENGQ3MpLCB3ZXJlIG9uY2UgdXNlZCB3aWRlbHkgaW4gcmVmcmlnZXJhbnRzLCBpbnN1bGF0aW5nIGZvYW1zLCBzb2x2ZW50cywgYW5kIG90aGVyIGFwcGxpY2F0aW9ucy4gVGhlc2UgICBzdWJzdGFuY2VzIGFsbCByZWxlYXNlIGNobG9yaW5lIGF0b21zIGludG8gdGhlIHN0cmF0b3NwaGVyZS4gQSBzaW5nbGUgY2hsb3JpbmUgYXRvbSBjYW4gYnJlYWsgYXBhcnQgbW9yZSAgIHRoYW4gMTAwLDAwMCBvem9uZSBtb2xlY3VsZXMuICAgU3RhdGVtZW50IGIgaXMgY29ycmVjdC4gT0RTIHRoYXQgcmVsZWFzZSBicm9taW5lIGluY2x1ZGUgbWV0aHlsIGJyb21pZGUgKHVzZWQgYXMgYSAgIHBlc3RpY2lkZSksIGhhbG9ucyAodXNlZCBpbiBmaXJlIGV4dGluZ3Vpc2hlcnMpLCBhbmQgbWV0aHlsIGNobG9yb2Zvcm0gKHVzZWQgYXMgYSBzb2x2ZW50IGluIGluZHVzdHJpYWwgICBwcm9jZXNzZXMpLiAgICBTdGF0ZW1lbnQgYyBpcyBpbmNvcnJlY3QuIEFzIG1ldGh5bCBicm9taWRlIGFuZCBoYWxvbnMgYXJlIGJyb2tlbiBhcGFydCwgdGhleSByZWxlYXNlIGJyb21pbmUgYXRvbXMsICAgd2hpY2ggYXJlIDYwIHRpbWVzIG1vcmUgZGVzdHJ1Y3RpdmUgdG8gb3pvbmUgbW9sZWN1bGVzIHRoYW4gY2hsb3JpbmUgYXRvbXMuICAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBTdGF0ZW1lbnQgZCBpcyBjb3JyZWN0LiBOb3QgYWxsIGNobG9yaW5lIGFuZCBicm9taW5lIHNvdXJjZXMgY29udHJpYnV0ZSB0byBvem9uZSBsYXllciBkZXBsZXRpb24uIEZvciAgIGV4YW1wbGUsIHJlc2VhcmNoZXJzIGhhdmUgZm91bmQgdGhhdCBjaGxvcmluZSBmcm9tIHN3aW1taW5nIHBvb2xzLCBpbmR1c3RyaWFsIHBsYW50cywgc2VhIHNhbHQsIGFuZCAgIHZvbGNhbm9lcyBkb2VzIG5vdCByZWFjaCB0aGUgc3RyYXRvc3BoZXJlLiAgIEtub3dsZWRnZSBCYXNlOiBBbHRob3VnaCBPRFMgYXJlIGVtaXR0ZWQgYXQgdGhlIEVhcnRoJ3Mgc3VyZmFjZSwgdGhleSBhcmUgZXZlbnR1YWxseSBjYXJyaWVkIGludG8gdGhlICAgc3RyYXRvc3BoZXJlIGluIGEgcHJvY2VzcyB0aGF0IGNhbiB0YWtlIGFzIGxvbmcgYXMgdHdvIHRvIGZpdmUgeWVhcnMuICAgIEF0bW9zcGhlcmljIGxldmVscyBvZiB0aGVzZSBPRFMgcmFwaWRseSBpbmNyZWFzZWQgYmVmb3JlIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgTW9udHJlYWwgUHJvdG9jb2wgb24gICBTdWJzdGFuY2VzIHRoYXQgRGVwbGV0ZSB0aGUgT3pvbmUgTGF5ZXIgYW5kIGl0cyBzdWJzZXF1ZW50IHJldmlzaW9ucyBhbmQgYW1lbmRtZW50cy4gSG93ZXZlciwgdGhlICAgYXRtb3NwaGVyaWMgbGV2ZWxzIG9mIG5lYXJseSBhbGwgb2YgdGhlc2Ugc3Vic3RhbmNlcyBoYXZlIGRlY2xpbmVkIHN1YnN0YW50aWFsbHkgaW4gdGhlIHBhc3QgdHdvIGRlY2FkZXMuICAgU291cmNlOiBodHRwczovL3d3dy5lcGEuZ292L296b25lLWxheWVyLXByb3RlY3Rpb24vYmFzaWMtb3pvbmUtbGF5ZXItc2NpZW5jZSAgIGh0dHBzOi8vd3d3LmVwYS5nb3Yvb3pvbmUtbGF5ZXItcHJvdGVjdGlvbi9mcmVxdWVudGx5LWFza2VkLXF1ZXN0aW9ucy1hYm91dC1vem9uZS1sYXllciAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Bromine from ozone-depleting substances   is released by the action of UV radiations.   ",
        "option2" : " Halons are a major source of bromine that   destroys ozone.  ",
        "option3" : " Chlorine atoms are more destructive to   ozone molecules than bromine atoms.   ",
        "option4" : " Not all chlorine and bromine sources   contribute to ozone layer depletion.   "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following carbon hot-spot  region in the world has the presence of largest  'Irrecoverable carbon'?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICdJcnJlY292ZXJhYmxlIGNhcmJvbicgcmVmZXJzIHRvIHRoZSB2YXN0IHN0b3JlcyBvZiBjYXJib24gaW4gbmF0dXJlIHRoYXQgYXJlIHZ1bG5lcmFibGUgdG8gcmVsZWFzZSBmcm9tICAgaHVtYW4gYWN0aXZpdHkgYW5kLCBpZiBsb3N0LCBjb3VsZCBub3QgYmUgcmVzdG9yZWQuICAgT3B0aW9uIGIgaXMgY29ycmVjdC4gQXMgcGVyIHRoZSBzdHVkeSwgdGhlIEFtYXpvbiBpcyB0aGUgYmlnZ2VzdCBjYXJib24gc2luayBhbmQgaGFzIHRoZSBsYXJnZXN0ICAgaXJyZWNvdmVyYWJsZSBjYXJib24gcmVzZXJ2ZSBvbiBlYXJ0aCwgaG9sZGluZyAzMS41IEd0IGlycmVjb3ZlcmFibGUgY2FyYm9uLiBUaGUgSXNsYW5kcyBvZiBzb3V0aGVhc3QgQXNpYSAgIHdpdGggdGhlaXIgZXF1YXRvcmlhbCByYWluZm9yZXN0cyByZXByZXNlbnRzIHNlY29uZC1sYXJnZXN0IHJlc2VydmUgb2YgY2FyYm9uLCBhdCAxMy4yIEd0LiBXaGVyZWFzLCB0aGUgICBDb25nbyBiYXNpbiByZXByZXNlbnRzIHRoZSB0aGlyZC1sYXJnZXN0IGhvdHNwb3Qgb2YgaXJyZWNvdmVyYWJsZSBjYXJib24gd2l0aCBvdmVyIDggR3Qgb2YgY2FyYm9uICAgcmVzZXJ2ZXMuICAgSW4gMjAyMCwgdGhlIGNvbmNlcHQgb2YgJ2lycmVjb3ZlcmFibGUgY2FyYm9uJyB3YXMgaW50cm9kdWNlZC4gSXQgaXMgaW50ZW5kZWQgdG8gZGlzY3JpbWluYXRlIGFtb25nIHRoZSAgIGJpbGxpb25zIG9mIHRvbm5lcyBvZiBjYXJib24gdGhhdCBpcyBzdG9yZWQgaW4gdGhlIGJpb3NwaGVyZSBiYXNlZCBvbiB0aHJlZSBjcml0ZXJpYSB3aGljaCBhcmUgcmVsZXZhbnQgZm9yICAgY29uc2VydmF0aW9uIGVmZm9ydHMuIEluIHRoaXMgY29uY2VwdCwgY2FyYm9uIHN0b2NrcyBpbiBlY29zeXN0ZW0gYXJlIGFzc2Vzc2VkIGluIGFjY29yZGFuY2UgdG8gdGhyZWUgICBjcml0ZXJpYTogKDEpIGhvdyB0aGV5IGNhbiBiZSBpbmZsdWVuY2VkIGJ5IHRoZSBkaXJlY3QgYW5kIGxvY2FsIGh1bWFuIGFjdGlvbiAoJ21hbmFnZWFiaWxpdHknKSwgKDIpIHRoZSAgIG1hZ25pdHVkZSBvZiBjYXJib24gbG9zdCB1cG9uIGRpc3R1cmJhbmNlICgndnVsbmVyYWJpbGl0eScpLCBhbmQgKDMpIHRoZSByZWNvdmVyYWJpbGl0eSBvZiBjYXJib24gc3RvY2tzICAgZm9sbG93aW5nIGxvc3MgKCdyZWNvdmVyYWJpbGl0eScpLiAgIEFmdGVyIGFwcGxpY2F0aW9uIG9mIHRoZSB0aHJlZSBjcml0ZXJpYSBhY3Jvc3MgYWxsIHRoZSB0ZXJyZXN0cmlhbCwgY29hc3RhbCBhbmQgZnJlc2h3YXRlciBlY29zeXN0ZW1zIG9uIHRoZSAgIHBsYW5ldCwgaXQgaXMgZm91bmQgdGhhdCBzb21lIHBsYWNlcyBvbiB0aGUgcGxhbmV0IGNvbnRhaW4gaXJyZWNvdmVyYWJsZSBjYXJib24sIG9yIG1hbmFnZWFibGUgY2FyYm9uICAgc3RvY2tzIHRoYXQsIGlmIGxvc3QsIHJlcHJlc2VudCBhIHBlcm1hbmVudCBkZWJpdCBmcm9tIHRoZSByZW1haW5pbmcgY2FyYm9uIGJ1ZGdldC4gICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9mYWN0c2hlZXQvd2hhdC1pcy1pcnJlY292ZXJhYmxlLWNhcmJvbi1ob3ctaXQtICBleGFjZXJiYXRlcy1nbG9iYWwtd2FybWluZy0tODA3MzEgW0Fib3V0IHRoZSBjb25jZXB0IG9mIGlycmVjb3ZlcmFibGUgY2FyYm9uXSAgIGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9mYWN0c2hlZXQvd2hhdC1pcy1pcnJlY292ZXJhYmxlLWNhcmJvbi1ob3ctaXQtZXhhY2VyYmF0ZXMtZ2xvYmFsLSAgd2FybWluZy0tODA3MzEgW1Jhbmtpbmcgb2YgY2FyYm9uIGhvdC1zcG90XSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Siberian Region  ",
        "option2" : "Amazon Basin  ",
        "option3" : "Congo Basin  ",
        "option4" : "South-East Asia Region   "
      }
    },
    {
      "index" : 24,
      "question" : "Which of the following statement is  incorrect with reference to the recently  launched 'Global Methane Pledge'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1ldGhhbmUgaXMgb25lIG9mIHRoZSBncmVlbmhvdXNlIGdhc2VzIHdoaWNoIGlzIHNlY29uZC1tb3N0IGFidW5kYW50IGluIHRoZSBhdG1vc3BoZXJlLCBhZnRlciB0aGUgICBtb3N0IGFidW5kYW50IGNhcmJvbiBkaW94aWRlLCBhbmQsIHRoZXJlZm9yZSwgR2xvYmFsIE1ldGhhbmUgUGxlZGdlcyBpcyBsYXVuY2hlZCByZWxhdGVkIHRvIGN1dHRpbmcgICBkb3duIGl0cyBlbWlzc2lvbnMgYXJlIHNpZ25pZmljYW50LiAgIFN0YXRlbWVudCBhIGlzIGNvcnJlY3QuIEl0IGlzIGEgbmV3IGpvaW50IGFncmVlbWVudCBsYXVuY2hlZCBieSB0aGUgRXVyb3BlYW4gVW5pb24gYW5kIHRoZSBVbml0ZWQgU3RhdGVzICAgb2YgQW1lcmljYSAoVVNBKS4gSXQgY291bGQgbWFyayBhIGNydWNpYWwgc3RlcCBpbiB0YWNrbGluZyBjbGltYXRlIGNoYW5nZSBhbmQgZ2V0dGluZyB0aGUgd29ybGQgY2xvc2VyIHRvICAgdGhlIGdvYWxzIG9mIHRoZSBQYXJpcyBBZ3JlZW1lbnQgd2hpY2ggaW5jbHVkZSB0byBrZWVwIGdsb2JhbCB0ZW1wZXJhdHVyZSByaXNlIHRvIGJlbG93IDLCsEMuICAgU3RhdGVtZW50IGIgaXMgY29ycmVjdC4gVGhlIEdsb2JhbCBNZXRoYW5lIFBsZWRnZSB3YXMgZm9ybWFsbHkgbGF1bmNoZWQgYXQgR2xhc2dvdyBTdW1taXQgMjAyMS4gSXQgICB3YXMgdGhlIENvbmZlcmVuY2Ugb2YgdGhlIFBhcnRpZXMgKENPUCkgMjYgb2YgdGhlIFVuaXRlZCBOYXRpb25zIEZyYW1ld29yayBmb3IgQ2xpbWF0ZSBDaGFuZ2UgICBDb25mZXJlbmNlIChVTkZDQ0MpLCB3aGljaCB3YXMgaGVsZCBpbiBHbGFzZ293IGZyb20gMzEgT2N0b2JlciBhbmQgMTIgTm92ZW1iZXIgMjAyMS4gICAgU3RhdGVtZW50IGMgaXMgaW5jb3JyZWN0LiBHbG9iYWwgTWV0aGFuZSBQbGVkZ2UgdGFyZ2V0cyB0byByZWR1Y2VkIHRvIHJlZHVjZSBnbG9iYWwgbWV0aGFuZSBlbWlzc2lvbnMgICBieSBhdCBsZWFzdCAzMCUgZnJvbSAyMDIwIGxldmVscyBieSAyMDMwLiBJdCBpbmNsdWRlcyB0aGUgUGFydGljaXBhbnRzIGpvaW5pbmcgdGhlIFBsZWRnZSB0byB0YWtlIHZvbHVudGFyeSAgIGFjdGlvbnMgdG8gY29udHJpYnV0ZSB0byBhIGNvbGxlY3RpdmUgZWZmb3J0IHdoaWNoIGNvdWxkIGVsaW1pbmF0ZSBvdmVyIDAuMsuaQyB3YXJtaW5nIGJ5IDIwNTAuICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAgIFN0YXRlbWVudCBkIGlzIGNvcnJlY3QuIEluZGlhIGNob3NlIG5vdCB0byBzaWduIHRoZSBHbG9iYWwgTWV0aGFuZSBQbGVkZ2UgZGVzcGl0ZSBiZWluZyBvbmUgb2YgdGhlIHRvcCAgIGVtaXR0ZXJzIG9mIG1ldGhhbmUuIEZ1cnRoZXIsIFJ1c3NpYSwgQ2hpbmEsIGFuZCBJcmFuIGFyZSBhbHNvIGFtb25nIHRoZSB0b3AgZW1pdHRlcnMgd2hvIGFsc28gZGlkbid0IHNpZ24gICB0aGUgYWdyZWVtZW50LiAgIFNvdXJjZTogICAgc2lnbmVkLWF0LWNvcDI2Lzc2MTE1NC8gICBodHRwczovL3d3dy51bmVwLm9yZy9uZXdzLWFuZC1zdG9yaWVzL3N0b3J5L25ldy1nbG9iYWwtbWV0aGFuZS1wbGVkZ2UtYWltcy10YWNrbGUtY2xpbWF0ZS0gIGNoYW5nZSAgICBodHRwczovL3d3dy5jY2Fjb2FsaXRpb24ub3JnL2VuL3Jlc291cmNlcy9nbG9iYWwtbWV0aGFuZS1wbGVkZ2UgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It was jointly launched by United States of   America (USA) and the European Union (EU).  ",
        "option2" : " It was launched during the Glasgow Summit   2021.   ",
        "option3" : " It projects to reduce global methane   emissions by 30% from 1990 levels by 2030.  ",
        "option4" : " India is not a signatory to the Global   Methane Pledge.   "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to High Ambition  Coalition (HAC), consider the following  statements:  1.  The member countries currently include the  countries from the global north and south.  2.  The goal of coalition is to protect at least  30% of world's land and ocean from  biodiversity loss by 2030.  Which of the above-mentioned statements  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEF0IGEgY2VyZW1vbnkgaGVsZCBiZXR3ZWVuIHRoZSBGcmVuY2ggYW5kIEluZGlhbiBnb3Zlcm5tZW50cywgSW5kaWEgb2ZmaWNpYWxseSBqb2luZWQgdGhlIEhpZ2ggQW1iaXRpb24gICBDb2FsaXRpb24gZm9yIE5hdHVyZSBhbmQgUGVvcGxlLiBGZWF0dXJlcyBvZiB0aGUgY29hbGl0aW9uIGFyZTogICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IC0gSGlnaCBBbWJpdGlvbiBDb2FsaXRpb24gbWVtYmVycyBjdXJyZW50bHkgaW5jbHVkZSBhIG1peCBvZiBjb3VudHJpZXMgaW4gdGhlICAgZ2xvYmFsIG5vcnRoIGFuZCBzb3V0aDsgRXVyb3BlYW4sIExhdGluIEFtZXJpY2FuLCBBZnJpY2EgYW5kIEFzaWEgY291bnRyaWVzIGFyZSBhbW9uZyB0aGUgbWVtYmVycy4gSW5kaWEgICBpcyB0aGUgZmlyc3Qgb2YgdGhlIEJSSUNTIGJsb2Mgb2YgbWFqb3IgZW1lcmdpbmcgZWNvbm9taWVzIChCcmF6aWwsIFJ1c3NpYSwgSW5kaWEsIENoaW5hIGFuZCBTb3V0aCBBZnJpY2EpIHRvICAgam9pbiB0aGUgSEFDLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLSBUaGUgZ2xvYmFsIDMww5czMCBnb2FsIGlzIGEgZ29hbCBvZiBIQUMgd2hpY2ggaXMgY3VycmVudGx5IGEgY2VudHJlIHBpZWNlIG9mIHRoZSAgIHRyZWF0eS4gSXQgaXMgYSBnbG9iYWwgdGFyZ2V0IHdoaWNoIGFpbXMgdG8gaGFsdCB0aGUgYWNjZWxlcmF0aW5nIGxvc3Mgb2Ygc3BlY2llcywgYW5kIHByb3RlY3Qgdml0YWwgZWNvc3lzdGVtcyAgIHRoYXQgYXJlIHRoZSBzb3VyY2Ugb2Ygb3VyIGVjb25vbWljIHNlY3VyaXR5LiBUaGUgYWltIGlzIHRvIHByb21vdGUgYW4gaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnQgdG8gcHJvdGVjdCAgIGF0IGxlYXN0IDMwICUgdGhlIG9mIHdvcmxkJ3MgbGFuZCBhbmQgb2NlYW4gYnkgMjAzMC4gICBTb3VyY2U6IGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLmFzcHg/UFJJRD0xNzYxODU1ICAgaHR0cHM6Ly93d3cubmV3aW5kaWFuZXhwcmVzcy5jb20vbmF0aW9uLzIwMjEvb2N0LzA3L2luZGlhLWpvaW5zLWhpZ2gtYW1iaXRpb24tY29hbGl0aW9uLWZvci0gIG5hdHVyZS1hbmQtcGVvcGxlLTIzNjg5MTguaHRtbCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2      Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following pairs:   UNFCCC  Summits  Results  1. Bali  Conference  Launch of the Adaptation  Fund under the Kyoto  Protocol  2. Cancun  Conference  Agreement to establish  Green Climate Fund  3. Warsaw  Conference  The term 'Intended  Nationally Determined  Contributions' was coined  Which of the pairs given above are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3QuIFRoZSAxNHRoIHNlc3Npb24gb2YgdGhlIENvbmZlcmVuY2Ugb2YgdGhlIFBhcnRpZXMgdG8gdGhlIFVORkNDQyB0b29rIHBsYWNlIGluIFBvem5hbiwgICBQb2xhbmQgYW5kIG5vdCBhdCBCYWxpLiBJdCBsYXVuY2hlZCB0aGUgQWRhcHRhdGlvbiBGdW5kIHVuZGVyIHRoZSBLeW90byBQcm90b2NvbC4gQWx0aG91Z2ggQWRhcHRhdGlvbiAgIEZ1bmQgd2FzIGVzdGFibGlzaGVkIGluIDIwMDEgYXQgdGhlIDd0aCBDb25mZXJlbmNlIG9mIHRoZSBQYXJ0aWVzIChDT1A3KSBpbiBNYXJyYWtlY2gsIE1vcm9jY28uICAgUGFpciAyIGlzIGNvcnJlY3QuIFRoZSAxNnRoIHNlc3Npb24gb2YgdGhlIENvbmZlcmVuY2Ugb2YgdGhlIFBhcnRpZXMgdG8gdGhlIFVORkNDQyB0b29rIHBsYWNlIGluIENhbmN1biAgIGFuZCB3YXMgaG9zdGVkIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIE1leGljby4gQW1vbmcgdGhlIGhpZ2hsaWdodHMsIFBhcnRpZXMgYWdyZWVkOiAgIDEpIFRvIGVzdGFibGlzaCBhIEdyZWVuIENsaW1hdGUgRnVuZCB0byBwcm92aWRlIGZpbmFuY2luZyB0byBwcm9qZWN0cywgcHJvZ3JhbW1lcywgcG9saWNpZXMgYW5kIG90aGVyICAgYWN0aXZpdGllcyBpbiBkZXZlbG9waW5nIGNvdW50cmllcyB2aWEgdGhlbWF0aWMgZnVuZGluZyB3aW5kb3dzLiAgIDIpIFRvIGNvbW1pdCB0byBhIG1heGltdW0gdGVtcGVyYXR1cmUgcmlzZSBvZiAyIGRlZ3JlZXMgQ2Vsc2l1cyBhYm92ZSBwcmUtaW5kdXN0cmlhbCBsZXZlbHMsIGFuZCB0byAgIGNvbnNpZGVyIGxvd2VyaW5nIHRoYXQgbWF4aW11bSB0byAxLjUgZGVncmVlcyBpbiB0aGUgbmVhciBmdXR1cmUuICAgMykgQ2FuY3VuIEFkYXB0YXRpb24gRnJhbWV3b3JrLCB3aGljaCBpbmNsdWRlZCBzZXR0aW5nIHVwIGFuIEFkYXB0YXRpb24gQ29tbWl0dGVlIHRvIHByb21vdGUgdGhlICAgaW1wbGVtZW50YXRpb24gb2Ygc3Ryb25nZXIsIGNvaGVzaXZlIGFjdGlvbiBvbiBhZGFwdGF0aW9uLiAgIFBhaXIgMyBpcyBjb3JyZWN0LiBUaGUgMTlUSCBzZXNzaW9uIG9mIHRoZSBDb25mZXJlbmNlIG9mIHRoZSBQYXJ0aWVzIHRvIHRoZSBVTkZDQ0MgdG9vayBwbGFjZSBpbiBXYXJzYXcsICAgUG9sYW5kLiBUaGUgdGVybSBJbnRlbmRlZCBOYXRpb25hbGx5IERldGVybWluZWQgQ29udHJpYnV0aW9ucyB3YXMgY29pbmVkIHVuZGVyIHRoZSBzdW1taXQuICAgIFNvdXJjZTogVU5GQ0NDICAgaHR0cHM6Ly91bmZjY2MuaW50L3Byb2Nlc3MvYm9kaWVzL3N1cHJlbWUtYm9kaWVzL2NvbmZlcmVuY2Utb2YtdGhlLXBhcnRpZXMtY29wICAgICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 27,
      "question" : "'Carbon Border Adjustment Mechanism',  is a carbon-pricing system related to which of  the following:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDYXJib24gQm9yZGVyIEFkanVzdG1lbnQgTWVjaGFuaXNtIChDQkFNKSBpcyBhIGNhcmJvbi1wcmljaW5nIHN5c3RlbSBmb3IgaW1wb3J0cyBpbnRvIHRoZSAgIEV1cm9wZWFuIFVuaW9uLiBJdCBpcyBhaW1lZCBhdCBhZGp1c3RpbmcgdGhlIHByaWNlIG9mIGNlcnRhaW4gaW1wb3J0ZWQgcHJvZHVjdHMgdG8gdGhlIGFtb3VudCBvZiBDTzIgICBlbWlzc2lvbnMgaW5jb3Jwb3JhdGVkIGluIHRoZW0sIGluIG9yZGVyIHRvIGVxdWFsaXplIHRoZSBjb3N0IG9mIGNhcmJvbiBiZXR3ZWVuIEVVIHByb2R1Y3RzIGFuZCB0aGVzZSAgIGltcG9ydHMuICAgIFRoZSBFVSBhZG9wdGVkIHRoaXMgbWVjaGFuaXNtIHNvIGFzIHRvIHB1dCBhIGNhcmJvbiBwcmljZSBvbiBpbXBvcnRzIG9mIGEgdGFyZ2V0ZWQgc2VsZWN0aW9uIG9mIHByb2R1Y3RzICAgc28gdGhhdCBhbWJpdGlvdXMgY2xpbWF0ZSBhY3Rpb24gaW4gRXVyb3BlIGRvZXMgbm90IGxlYWQgdG8gJ2NhcmJvbiBsZWFrYWdlJy4gVGhpcyB3aWxsIGVuc3VyZSB0aGF0IEV1cm9wZWFuICAgZW1pc3Npb24gcmVkdWN0aW9ucyBjb250cmlidXRlIHRvIGEgZ2xvYmFsIGVtaXNzaW9ucyBkZWNsaW5lLCBpbnN0ZWFkIG9mIHB1c2hpbmcgY2FyYm9uLWludGVuc2l2ZSAgIHByb2R1Y3Rpb24gb3V0c2lkZSBFdXJvcGUuIEl0IGFsc28gYWltcyB0byBlbmNvdXJhZ2UgaW5kdXN0cnkgb3V0c2lkZSB0aGUgRVUgYW5kIHRoZWlyIGludGVybmF0aW9uYWwgICBwYXJ0bmVycyB0byB0YWtlIHN0ZXBzIGluIHRoZSBzYW1lIGRpcmVjdGlvbi4gICBTb3VyY2U6IGh0dHBzOi8vZWMuZXVyb3BhLmV1L2NvbW1pc3Npb24vcHJlc3Njb3JuZXIvZGV0YWlsL2VuL3FhbmRhXzIxXzM2NjEgICAgaHR0cHM6Ly9lYy5ldXJvcGEuZXUgYXhhdGlvbl9jdXN0b21zL2dyZWVuLXRheGF0aW9uLTAvY2FyYm9uLWJvcmRlci1hZGp1c3RtZW50LW1lY2hhbmlzbV9lbiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "International Solar Alliance  ",
        "option2" : "European Union  ",
        "option3" : "World Bank  ",
        "option4" : "United Nations Environment Programme   "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to 'International climate  initiative (IKI)', consider the following  statements:  1.  It is an initiative of the United Nations  Environment Programme.  2.  It operates within the framework of  UNFCCC and the Convention on Biological  Diversity (CBD).  3.  It funds the project under the 'Reducing  Emissions from Deforestation and forest  Degradation (REDD+) initiatives.  Which of the statement given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBJbnRlcm5hdGlvbmFsIENsaW1hdGUgSW5pdGlhdGl2ZSAoSUtJKSBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IGluc3RydW1lbnRzIGZvciB0aGUgaW50ZXJuYXRpb25hbCAgIGZpbmFuY2luZyBvZiBjbGltYXRlIHByb3RlY3Rpb24gYW5kIGJpb2RpdmVyc2l0eS4gVGhlIElLSSB3YXMgc3RhcnRlZCBpbiAyMDA4LiBJdCBzdXBwb3J0ZWQgb3ZlciA3NTAgY2xpbWF0ZSAgIGFuZCBiaW9kaXZlcnNpdHkgcHJvamVjdHMgaW4gbW9yZSB0aGFuIDYwIGNvdW50cmllcyBiZXR3ZWVuIDIwMDggYW5kIDIwMjAsIHRocm91Z2ggZmluYW5jaW5nIGNsaW1hdGUgICBwcm90ZWN0aW9uIGFuZCBiaW9kaXZlcnNpdHkgY29uc2VydmF0aW9uIGluIGRldmVsb3BpbmcsIGVtZXJnaW5nIGFuZCB0cmFuc2l0aW9uIGNvdW50cmllcy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBJbnRlcm5hdGlvbmFsIENsaW1hdGUgSW5pdGlhdGl2ZSAoSUtJKSBvZiB0aGUgR2VybWFuIEZlZGVyYWwgTWluaXN0cnkgZm9yIHRoZSAgIEVudmlyb25tZW50LCBOYXR1cmUgQ29uc2VydmF0aW9uLCBCdWlsZGluZyBhbmQgTnVjbGVhciBTYWZldHkgKEJNVUIpIGhhcyBiZWVuIGZpbmFuY2luZyBjbGltYXRlIGFuZCAgIGJpb2RpdmVyc2l0eSBwcm9qZWN0cyBpbiBkZXZlbG9waW5nIGFuZCBuZXdseSBpbmR1c3RyaWFsaXNpbmcgY291bnRyaWVzLCBhcyB3ZWxsIGFzIGluIGNvdW50cmllcyBpbiB0cmFuc2l0aW9uLiAgIFRoZXNlIGVmZm9ydHMgcHJvdmlkZSB2YXJpb3VzIGNvLWJlbmVmaXRzLCBwYXJ0aWN1bGFybHkgdGhlIGltcHJvdmVtZW50IG9mIGxpdmluZyBjb25kaXRpb25zIGluIHBhcnRuZXIgICBjb3VudHJpZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSUtJIG9wZXJhdGVzIHdpdGhpbiB0aGUgZnJhbWV3b3JrIG9mIHRoZSBVbml0ZWQgTmF0aW9ucyBGcmFtZXdvcmsgQ29udmVudGlvbiAgIG9uIENsaW1hdGUgQ2hhbmdlIChVTkZDQ0MpIGFuZCB0aGUgQ29udmVudGlvbiBvbiBCaW9sb2dpY2FsIERpdmVyc2l0eSAoQ0JEKSwgZmluYW5jaW5nIGNsaW1hdGUgY2hhbmdlICAgbWl0aWdhdGlvbiBhbmQgYmlvZGl2ZXJzaXR5IGNvbnNlcnZhdGlvbiBpbiBkZXZlbG9waW5nLCBlbWVyZ2luZyBhbmQgdHJhbnNpdGlvbiBjb3VudHJpZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogUHJvamVjdHMgdGhhdCBhcmUgaW1wbGVtZW50ZWQgaW4gb25lIG9mIHRoZSBmb2xsb3dpbmcgZm91ciBmdW5kaW5nIGFyZWFzIGFyZSAgIGVsaWdpYmxlIGZvciBzdXBwb3J0OiAgICAxKSBNaXRpZ2F0aW5nIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyAgICAyKSBBZGFwdGluZyB0byB0aGUgaW1wYWN0cyBvZiBjbGltYXRlIGNoYW5nZSAgICAzKSBDb25zZXJ2aW5nIG5hdHVyYWwgY2FyYm9uIHNpbmtzIHdpdGggYSBmb2N1cyBvbiByZWR1Y2luZyBlbWlzc2lvbnMgZnJvbSBkZWZvcmVzdGF0aW9uIGFuZCBmb3Jlc3QgICBkZWdyYWRhdGlvbiAoUkVERCspICAgIDQpIENvbnNlcnZpbmcgYmlvbG9naWNhbCBkaXZlcnNpdHkgICAgUkVERCsgaXMgYSBmcmFtZXdvcmsgY3JlYXRlZCBieSB0aGUgVU5GQ0NDIENvbmZlcmVuY2Ugb2YgdGhlIFBhcnRpZXMgKENPUCkgdG8gZ3VpZGUgYWN0aXZpdGllcyBpbiB0aGUgICBmb3Jlc3Qgc2VjdG9yIHRoYXQgcmVkdWNlcyBlbWlzc2lvbnMgZnJvbSBkZWZvcmVzdGF0aW9uIGFuZCBmb3Jlc3QgZGVncmFkYXRpb24sIGFzIHdlbGwgYXMgdGhlIHN1c3RhaW5hYmxlICAgbWFuYWdlbWVudCBvZiBmb3Jlc3RzIGFuZCB0aGUgY29uc2VydmF0aW9uIGFuZCBlbmhhbmNlbWVudCBvZiBmb3Jlc3QgY2FyYm9uIHN0b2NrcyBpbiBkZXZlbG9waW5nICAgY291bnRyaWVzLiAgICBUaGUgR3JlZW4gQ2xpbWF0ZSBGdW5kIChHQ0YpIGVzdGFibGlzaGVkIGF0IENvbmZlcmVuY2UgT2YgUGFydGllcyAoQ09QKS0xNyB0byBmdW5jdGlvbiBhcyB0aGUgZmluYW5jaWFsICAgbWVjaGFuaXNtIGZvciB0aGUgVU5GQ0NDLCBpcyBjdXJyZW50bHkgZmluYW5jaW5nIFJFREQrIHByb2dyYW1zLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaW50ZXJuYXRpb25hbC1jbGltYXRlLWluaXRpYXRpdmUuY29tL2VuL2Fib3V0LWlraS9pbnRlcm5hdGlvbmFsLWFncmVlbWVudHMgICBodHRwczovL3VyYmFuLWluZHVzdHJpYWwuaW4vY3NjL2Fib3V0L2ludGVybmF0aW9uYWxfY2xpbWF0ZV9pbml0aWF0aXZlX2lraS9pbmRleF9lbmcuaHRtbCAgIGh0dHBzOi8vdW5mY2NjLmludC9zaXRlcy9kZWZhdWx0L2ZpbGVzL3Jlc291cmNlL2NwMjAyMF8wNUUucGRmICAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements:  1.  The Global Carbon Project is a multilateral  fund, managed by the World Bank to  promote technologies to reduce  greenhouse gas emissions.  2.  The Global Carbon Project was established  in the UN Climate Change Conference of the  Parties (COP26) in Glasgow in 2021.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBHbG9iYWwgQ2FyYm9uIFByb2plY3QgKEdDUCkgaW50ZWdyYXRlcyBrbm93bGVkZ2Ugb2YgZ3JlZW5ob3VzZSBnYXNlcyBmb3IgaHVtYW4gYWN0aXZpdGllcyBhbmQgdGhlICAgRWFydGggc3lzdGVtLiBJdCBlc3RhYmxpc2hlZCBpbiAyMDAxLCBpdHMgcHJvamVjdHMgaW5jbHVkZSBnbG9iYWwgYnVkZ2V0cyBmb3IgdGhyZWUgZG9taW5hbnQgZ3JlZW5ob3VzZSAgIGdhc2VzIDEuIENhcmJvbiBkaW94aWRlLCAyLiBNZXRoYW5lLCAzLiBOaXRyb3VzIG94aWRlLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIEdsb2JhbCBDYXJib24gUHJvamVjdCBpcyBhbiBvcmdhbmlzYXRpb24gdGhhdCBzZWVrcyB0byBxdWFudGlmeSBnbG9iYWwgICBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMgYW5kIHRoZWlyIGNhdXNlcy4gVGhlIEdDUCBpcyBhIEdsb2JhbCBSZXNlYXJjaCBQcm9qZWN0IG9mIEZ1dHVyZSBFYXJ0aCBhbmQgYSAgIHJlc2VhcmNoIHBhcnRuZXIgb2YgdGhlIFdvcmxkIENsaW1hdGUgUmVzZWFyY2ggUHJvZ3JhbW1lLiAgICBFc3RhYmxpc2hlZCBpbiAyMDAxLCBpdHMgcHJvamVjdHMgaW5jbHVkZSBnbG9iYWwgYnVkZ2V0cyBmb3IgdGhyZWUgZG9taW5hbnQgZ3JlZW5ob3VzZSBnYXNlcy1jYXJib24gICBkaW94aWRlIChDTzIpLCBtZXRoYW5lIChDSDQpLCBhbmQgbml0cm91cyBveGlkZSAoTjJPKS1hbmQgY29tcGxlbWVudGFyeSBlZmZvcnRzIGluIHVyYmFuLCByZWdpb25hbCwgICBjdW11bGF0aXZlLCBhbmQgbmVnYXRpdmUgZW1pc3Npb25zLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIEdsb2JhbCBDYXJib24gUHJvamVjdCB3YXMgZXN0YWJsaXNoZWQgaW4gMjAwMSAobm90IGluIHRoZSBVTiBDbGltYXRlIENoYW5nZSAgIENvbmZlcmVuY2Ugb2YgdGhlIFBhcnRpZXMgKENPUDI2KSBpbiBHbGFzZ293KS4gSXQgd2FzIGVzdGFibGlzaGVkIGJ5IGEgc2hhcmVkIHBhcnRuZXJzaGlwIGJldHdlZW4gdGhlICAgSW50ZXJuYXRpb25hbCBHZW9zcGhlcmUtQmlvc3BoZXJlIFByb2dyYW1tZSAoSUdCUCksIHRoZSBJbnRlcm5hdGlvbmFsIEh1bWFuIERpbWVuc2lvbnMgUHJvZ3JhbW1lICAgb24gR2xvYmFsIEVudmlyb25tZW50YWwgQ2hhbmdlIChJSERQKSwgdGhlIFdvcmxkIENsaW1hdGUgUmVzZWFyY2ggUHJvZ3JhbW1lIChXQ1JQKSBhbmQgRGl2ZXJzaXRhcy4gICBTb3VyY2U6IGh0dHBzOi8vd3d3Lmdsb2JhbGNhcmJvbnByb2plY3Qub3JnLyAgICBodHRwczovL25ld3NjZW50ZXIubGJsLmdvdi8yMDIwLzA4LzEzL2dsb2JhbC1tZXRoYW5lLWVtaXNzaW9ucy1zb2FyaW5nLWJ1dC1ob3ctbXVjaC13YXMtZHVlLSAgdG93ZXRsYW5kcy8jOn46dGV4dD1UaGVyZSUyMGlzJTIwYSUyMGxhcmdlJTIwbGF0aXR1ZGluYWwsbGF0aXR1ZGVzJTIwd2hlcmUlMjBpdCdzJTIwcmVhbGx5JTIwYyAgb2xkICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 30,
      "question" : "Which of the following are the possible  impacts of climate change on water bodies?  1.  The density of ocean water would  drastically increase.  2.  It will increase the recharging time of the  water tables.  3.  It would lead to overexploitation of the  groundwater resource.  4.  It may lead to change in the course of the  Himalayan rivers like Ganga and Indus.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBDbGltYXRlIGNoYW5nZSByZWZlcnMgdG8gbG9uZy10ZXJtIHNoaWZ0cyBpbiB0ZW1wZXJhdHVyZXMgYW5kIHdlYXRoZXIgcGF0dGVybnMuIEluZGlhIGlzIG9uZSBvZiB0aGUgd29ybGQncyAgIG1vc3QgdnVsbmVyYWJsZSByZWdpb25zIHRvIGNsaW1hdGUgY2hhbmdlLiBUaGVyZSBhcmUgdmFyaW91cyBlZmZlY3RzIG9mIGNsaW1hdGUgY2hhbmdlIG9ic2VydmVkIGluIHZhcmlvdXMgICBwYXJ0cyBvZiB3b3JsZCB3YXRlciBib2RpZXMuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgZGVuc2l0eSBvZiBzZWF3YXRlciBwbGF5cyBhIHZpdGFsIHJvbGUgaW4gY2F1c2luZyBvY2VhbiBjdXJyZW50cyBhbmQgY2lyY3VsYXRpbmcgICBoZWF0IGJlY2F1c2Ugb2YgdGhlIGZhY3QgdGhhdCBkZW5zZSB3YXRlciBzaW5rcyBiZWxvdyBsZXNzIGRlbnNlLiBTYWxpbml0eSwgdGVtcGVyYXR1cmUgYW5kIGRlcHRoIGFsbCBhZmZlY3QgICB0aGUgZGVuc2l0eSBvZiBzZWF3YXRlci4gICBPY2VhbiB3YXJtaW5nIGNvbnRyaWJ1dGVzIHRvIGdsb2JhbCBtZWFuIHNlYSBsZXZlbCByaXNlIGJ5IHJlZHVjaW5nIHRoZSBkZW5zaXR5IG9mIHNlYXdhdGVyLCB0aHVzICAgaW5jcmVhc2luZyBpdHMgdm9sdW1lLiBGcmVzaGVuaW5nIG9mIHNlYXdhdGVyIGFsc28gcmVkdWNlcyBpdHMgZGVuc2l0eSwgYW5kIHRoaXMgZWZmZWN0IGNvbnRyaWJ1dGVzIHRvICAgcmVnaW9uYWwgc2VhIGxldmVsIHZhcmlhdGlvbnMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQ2xpbWF0ZSBjaGFuZ2UgY2FuIGFsdGVyIHRoZSB0aW1pbmcgYW5kIG1hZ25pdHVkZSBvZiBwb3RlbnRpYWwgcmVjaGFyZ2UgICByZXN1bHRpbmcgaW4gbW9kaWZpY2F0aW9uIG9mIHJpc2tzIHRvIHdhdGVyIGF2YWlsYWJpbGl0eSwgZHJvdWdodHMgYW5kIGZsb29kaW5nLiBUaGUgcmlzZSBpbiBwb3B1bGF0aW9uIHdpbGwgICBpbmNyZWFzZSB0aGUgZGVtYW5kIGZvciB3YXRlciBsZWFkaW5nIHRvIGZhc3RlciB3aXRoZHJhd2FsIG9mIHdhdGVyIGFuZCB0aGlzIGluIHR1cm4gd291bGQgcmVkdWNlIHRoZSAgIHJlY2hhcmdpbmcgdGltZSBvZiB0aGUgd2F0ZXIgdGFibGVzLiAgIEFzIGEgcmVzdWx0LCBhdmFpbGFiaWxpdHkgb2Ygd2F0ZXIgaXMgYm91bmQgdG8gcmVhY2ggY3JpdGljYWwgbGV2ZWxzIHNvb25lciBvciBsYXRlci4gRHVyaW5nIHRoZSBwYXN0IGZvdXIgICBkZWNhZGVzLCB0aGVyZSBoYXMgYmVlbiBhIHBoZW5vbWVuYWwgaW5jcmVhc2UgaW4gdGhlIGdyb3d0aCBvZiBncm91bmR3YXRlciBhYnN0cmFjdGlvbiBzdHJ1Y3R1cmVzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEVmZmVjdHMgb2YgY2xpbWF0ZSBjaGFuZ2UsIGluY2x1ZGluZyBlcnJhdGljIHJhaW5mYWxsIGluIHRoZSBkcmllciBhcmVhcywgcHV0IGFkZGl0aW9uYWwgICBzdHJlc3Mgb24gZ3JvdW5kd2F0ZXIgcmVzb3VyY2VzIHRocm91Z2ggb3ZlcmV4cGxvaXRhdGlvbi4gVGhlIDEydGggRml2ZSBZZWFyIFBsYW4gcmVjb2duaXplcyB0aGF0ICAgZ3JvdW5kd2F0ZXIgaXMgYmVpbmcgZXhwbG9pdGVkIGJleW9uZCBzdXN0YWluYWJsZSBsZXZlbHMgYW5kIHdpdGggYW4gZXN0aW1hdGVkIDMwIG1pbGxpb24gZ3JvdW5kd2F0ZXIgICBzdHJ1Y3R1cmVzIGluIHBsYXksIEluZGlhIG1heSBiZSBodXJ0bGluZyB0b3dhcmRzIGEgc2VyaW91cyBjcmlzaXMgb2YgZ3JvdW5kd2F0ZXIgb3ZlciBleHRyYWN0aW9uIGFuZCBxdWFsaXR5ICAgZGV0ZXJpb3JhdGlvbi4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBBIHNpZ25pZmljYW50IHRocmVhdCBwb3NlZCBieSBjbGltYXRlIGNoYW5nZSBpbiB0aGUgSGltYWxheWFzIGlzIHRoZSBjaGFuZ2UgaW4gdGhlICAgY291cnNlIG9mIHRoZSBIaW1hbGF5YW4gcml2ZXJzIGxpa2UgR2FuZ2EgYW5kIEluZHVzLiBUaGUgSGltYWxheWFuIGdsYWNpZXJzIGFyZSBhIHNvdXJjZSBvZiBmcmVzaCB3YXRlciAgIGZvciBwZXJlbm5pYWwgcml2ZXJzLCBpbiBwYXJ0aWN1bGFyIHRoZSBJbmR1cywgR2FuZ2EsIGFuZCBCcmFobWFwdXRyYSBSaXZlciBzeXN0ZW1zLiBBIHNlcmlvdXMgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgZW52aXJvbm1lbnRhbCBwcm9ibGVtIGhhcyBhbHNvIGJlZW4gd2l0bmVzc2VkIGluIHRoZSBJbmRvLUdhbmdldGljIFBsYWluIFJlZ2lvbiAoSUdQUikgaW4gdGhlIHBhc3QgICB3aGVyZWJ5IGRpZmZlcmVudCByaXZlcnMgKGluY2x1ZGluZyBLb3NpLCBHYW5nYSwgR2hhZ2hhcmEsIFNvbiwgSW5kdXMgYW5kIGl0cyB0cmlidXRhcmllcyBhbmQgWWFtdW5hKSAgIGNoYW5nZWQgdGhlaXIgY291cnNlIGEgbnVtYmVyIG9mIHRpbWVzLiAgIFRoZSBHYW5nZXMsIGFzIHdlbGwgYXMgaXRzIHRyaWJ1dGFyaWVzIGFuZCBkaXN0cmlidXRhcmllcywgaXMgY29uc3RhbnRseSB2dWxuZXJhYmxlIHRvIGNoYW5nZXMgaW4gaXRzIGNvdXJzZSBpbiAgIHRoZSBkZWx0YSByZWdpb24uICAgVGhlIEluZHVzIFJpdmVyIGZsb3dpbmcgdGhyb3VnaCBQYWtpc3RhbiBhbHNvIGZvciBhbiBleGFtcGxlIGhhcyByZS1lbnRlcmVkIEluZGlhIGZlZWRpbmcgTGl0dGxlIFJhbm4gYW5kICAgYSBsYWtlIG5lYXIgQWhtZWRhYmFkIGtub3duIGFzIE5hbCBTYXJvdmFyLiAgIFNvdXJjZTogRW52aXJvbm1lbnQgQm9vayBieSBTaGFua2FyOiA2dGggRWRpdGlvbiBDSEFQVEVSIC0gMjAsIElNUEFDVCBPRiBDTElNQVRFIENIQU5HRSBwYWdlICAgMjU5LTYwICAgaHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20vcGxhY2UvR2FuZ2VzLVJpdmVyICAgIGh0dHBzOi8vd3d3LmluZGlhdG9kYXkuaW4vaW5kaWEvd2VzdC9zdG9yeS9pbmR1cy1yaXZlci1yZS1lbnRlcnMtaW5kaWEtMTQ1MDkxLTIwMTEtMTEtMDcgICAgaHR0cHM6Ly93d3cuaGluZHVzdGFudGltZXMuY29tL211bWJhaS1uZXdzL2dyb3VuZHdhdGVyLWRlcGxldGlvbi1vd2luZy10by1leGNlcHRpb25hbGx5LSAgaGlnaC1kZW1hbmQtaW4taW5kaWEvc3Rvcnktb2I4WmZWMDlMT1lyalZJbmJEcGVhSy5odG1sICAgIGh0dHBzOi8vc2FuZHJwLmluLzIwMTQvMDgvMTEvZ3JvdW5kd2F0ZXItZmFsbGluZy1sZXZlbHMtYW5kLWNvbnRhbWluYXRpb24tdGhyZWF0ZW4taW5kaWFzLXdhdGVyLSAgbGlmZWxpbmUtdXJnZW50LW5lZWQtZm9yLWNvbW11bml0eS1kcml2ZW4tYm90dG9tcy11cC1tYW5hZ2VtZW50LyAgICBodHRwczovL3d3dy5zY2llbmNlZGlyZWN0LmNvbS9zY2llbmNlL2FydGljbGUvcGlpL1MwMDIyMTY5NDIxMDAzODM4ICAgIGh0dHBzOi8vd3d3LmluZGlhd2F0ZXJwb3J0YWwub3JnL2FydGljbGVzL2NsaW1hdGUtY2hhbmdlLWFuZC1pdHMtaW1wYWN0LXdhdGVyLXJlc291cmNlcyAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "3 and 4 only  ",
        "option3" : "1, 2, 3 and 4  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements with  reference to climate change and its Impact on  Human life, health and economy:  1.  It leads to higher levels of tropospheric  ozone (O3) that can permanently damage  lung tissue.  2.  It leads to an increase in the frequency and  severity of heat waves.  3.  It ultimately leads to wider prevalence of  malnutrition/ undernutrition.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENsaW1hdGUgY2hhbmdlIHBvc2VzIGEgaG9zdCBvZiB0aHJlYXRzIHRvIHRoZSBzdXJ2aXZhbCBvZiBtYW5raW5kIGFuZCBoYXMgYSBkaXJlY3QgaW1wYWN0IG9uIGh1bWFuIGhlYWx0aC4gICBGb3IgZXhhbXBsZSwgdGhlIHdhcm1lciB0aGUgY2xpbWF0ZSB0aGUgbGlrZWxpaG9vZCBvZiBpdHMgaW1wYWN0IG9uIGh1bWFuIGhlYWx0aCBiZWNvbWVzIHdvcnNlLiBBcmVhcyAgIGFmZmVjdGVkIGJ5IGZyZXF1ZW50IGZsb29kcyBhbmQgZHJvdWdodCBjb25kaXRpb25zIGFsc28gd2l0bmVzcyBsYXJnZSBzY2FsZSBtaWdyYXRpb24gb2YgcG9wdWxhdGlvbnMgdG8gICByZWxhdGl2ZWx5IHN0YWJsZSByZWdpb25zIGxlYWRpbmcgdG8gb3ZlcmNyb3dkaW5nIGFuZCB1bmh5Z2llbmljIGNvbmRpdGlvbnMgcmVzdWx0aW5nIGluIHRyYW5zbWlzc2lvbiBvZiAgIGRpc2Vhc2VzIGxpa2UgSmFwYW5lc2UgZW5jZXBoYWxpdGlzIGFuZCBtYWxhcmlhLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEEgd2FybWVyIGFuZCBtb3JlIHZhcmlhYmxlIGNsaW1hdGUgd291bGQgcmVzdWx0IGluIGhpZ2hlciBsZXZlbHMgb2Ygc29tZSBhaXIgICBwb2xsdXRhbnRzLCBpbmNyZWFzZWQgdHJhbnNtaXNzaW9uIG9mIGRpc2Vhc2VzIHRocm91Z2ggdW5jbGVhbiB3YXRlciBhbmQgdGhyb3VnaCBjb250YW1pbmF0ZWQgZm9vZC4gVGhlICAgYWlyIHBvbGx1dGFudHMgb2YgbW9zdCBpbXBvcnRhbmNlIGZvciB0aGVpciBlZmZlY3RzIG9uIGZvcmVzdCBncm93dGggYW5kIGhlYWx0aCBhcmUgdHJvcG9zcGhlcmljIG96b25lIChPMyksICAgYW5kIHZhcmlvdXMgY29tcG9uZW50cyBvZiByZWFjdGl2ZSBuaXRyb2dlbiBhbmQgaXRzIGRlcG9zaXRpb24uIFRyb3Bvc3BoZXJpYyBvem9uZSBpcyBhIG1ham9yIGNvbXBvbmVudCAgIG9mIHNtb2csIHdoaWNoIGNhbiB3b3JzZW4gYnJvbmNoaXRpcyBhbmQgZW1waHlzZW1hLCB0cmlnZ2VyIGFzdGhtYSwgYW5kIHBlcm1hbmVudGx5IGRhbWFnZSBsdW5nICAgdGlzc3VlLiBUcm9wb3NwaGVyaWMgb3pvbmUgZXhwb3N1cmUgaXMgcmVzcG9uc2libGUgZm9yIGFuIGVzdGltYXRlZCBvbmUgbWlsbGlvbiBwcmVtYXR1cmUgZGVhdGhzIGVhY2ggICB5ZWFyLiAgICBUaGVyZSBpcyBhbHNvIGdyb3dpbmcgZXZpZGVuY2Ugc2hvd2luZyBhIGNvbm5lY3Rpb24gYmV0d2VlbiByZWFjdGl2ZSBuaXRyb2dlbiBpbiB0aGUgYWlyIGFuZCBzZXZlcmFsICAgdHlwZXMgb2YgY2FuY2VyIGFuZCBjYXJkaW9wdWxtb25hcnkgZGlzZWFzZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQ2xpbWF0ZSBjaGFuZ2UgaXMgY29udHJpYnV0aW5nIHRvIG1vcmUgZnJlcXVlbnQsIHNldmVyZSwgYW5kIGxvbmdlciBoZWF0IHdhdmVzICAgZHVyaW5nIHN1bW1lciBtb250aHMgYWNyb3NzIHRoZSBnbG9iZS4gQXMgdGhlIEVhcnRoJ3MgY2xpbWF0ZSB3YXJtcywgaG93ZXZlciwgaG90dGVyLXRoYW4tdXN1YWwgZGF5cyAgIGFuZCBuaWdodHMgYXJlIGJlY29taW5nIG1vcmUgY29tbW9uIGFuZCBoZWF0IHdhdmVzIGFyZSBleHBlY3RlZCB0byBiZWNvbWUgbW9yZSBmcmVxdWVudCBhbmQgICBpbnRlbnNlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFJpc2luZyB0ZW1wZXJhdHVyZXMgYW5kIGNoYW5naW5nIHBhdHRlcm5zIG9mIHJhaW5mYWxsIGFyZSBwcm9qZWN0ZWQgdG8gZGVjcmVhc2UgICBjcm9wIHlpZWxkcyBpbiBtYW55IGRldmVsb3BpbmcgY291bnRyaWVzLCBzdHJlc3NpbmcgZm9vZCBzdXBwbGllcy4gVGhpcyB3aWxsIHVsdGltYXRlbHkgdHJhbnNsYXRlIGludG8gd2lkZXIgICBwcmV2YWxlbmNlIG9mIG1hbG51dHJpdGlvbi8gdW5kZXJudXRyaXRpb24uIEluIHNvbWUgQWZyaWNhbiBjb3VudHJpZXMsIHlpZWxkcyBmcm9tIHJhaW4tZmVkIGFncmljdWx0dXJlICAgY291bGQgYmUgcmVkdWNlZCBieSB1cCB0byA1MCBwZXIgY2VudCBieSAyMDIwLiAgIFNvdXJjZTogIEVudmlyb25tZW50IEJvb2sgYnkgU2hhbmthcjogNnRoIEVkaXRpb24gQ0hBUFRFUiAtIDIwLCBJTVBBQ1QgT0YgQ0xJTUFURSBDSEFOR0UgcGFnZSAgIDI2Mi02MyAgIGh0dHBzOi8vd3d3LmZzLnVzZGEuZ292L2NjcmMgb3BpY3MvYWlyLXBvbGx1dGlvbiAgICBodHRwczovL3d3dy5zY2llbmNlLm9yZy9kb2kvMTAuMTEyNi9zY2lhZHYuMTcwMDA2NiAgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgaHR0cHM6Ly9wdWJsaWMud21vLmludC9lbi9tZWRpYS9uZXdzL2NsaW1hdGUtY2hhbmdlLW1hZGUtaGVhdHdhdmVzLWluZGlhLWFuZC1wYWtpc3Rhbi0zMC0gIHRpbWVzLW1vcmUtbGlrZWx5ICAgIGh0dHBzOi8vd3d3LndlZm9ydW0ub3JnL2FnZW5kYS8yMDIxLzA2L2ltcGFjdC1jbGltYXRlLWNoYW5nZS1nbG9iYWwtICBnZHAvIzp+OnRleHQ9d2lwZSUyMG9mZiUyMHVwJTIwdG8lMjAxOCUyNSUyMG9mJTIwR0RQJTIwb2ZmJTIwdGhlJTIwd29ybGR3aWRlJTIwZWNvbm8gIG15JTIwYnklMjAyMDUwICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3       Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements with  reference to Earthquake Disaster Risk Index  (EDRI):  1.  The Ministry of Earth Sciences along with  Jawaharlal Nehru University, Delhi has  developed EDRI to assess Earthquake risk.  2.  The index gives Earthquake risk assessment  for all cities above 1 lakh population in India.  3.  The Index shows that more than 50% of  total area of India is vulnerable to moderate  to major earthquakes.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEVhcnRocXVha2UgRGlzYXN0ZXIgUmlzayBJbmRleCBjb21iaW5lcyBub25saW5lYXJseSB0aGUgZWFydGhxdWFrZSBoYXphcmQsIHZ1bG5lcmFiaWxpdHkgYW5kIGV4cG9zdXJlIG9mICAgYSBjaXR5LiAgIEVhcnRocXVha2UgcmlzayBpcyByZXByZXNlbnRlZCBhcyB0aGUgcHJvZHVjdCBvZiB0aGUgcHJldmFsZW50IGVhcnRocXVha2UgaGF6YXJkIChIKSBvZiB0aGUgYXJlYSwgdGhlICAgZXhwb3N1cmUgKEUpIG9mIHBlcnNvbnMgdG8gdGhlIGVhcnRocXVha2UgaGF6YXJkLCBhbmQga25vd24gdnVsbmVyYWJpbGl0eSAoVikgb2YgdGhlIGhvdXNlcyBpbiB0aGF0IGFyZWEuICAgT2YgdGhlc2UgdGhyZWUgZmFjdG9ycywgVnVsbmVyYWJpbGl0eSBwbGF5cyBhbiBpbXBvcnRhbnQgcm9sZSB0byBmb3JlY2FzdCB0aGUgZXhwZWN0ZWQgZGFtYWdlIGluIGEgYnVpbGRpbmcuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBOYXRpb25hbCBEaXNhc3RlciBNYW5hZ2VtZW50IEF1dGhvcml0eSAoTkRNQSkgdGhyb3VnaCBJbnRlcm5hdGlvbmFsIEluc3RpdHV0ZSAgIG9mIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgKElJSVQpIEh5ZGVyYWJhZCBoYXMgZGV2ZWxvcGVkIEVhcnRocXVha2UgRGlzYXN0ZXIgUmlzayBJbmRleCAoRURSSSkuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBFYXJ0aHF1YWtlIERpc2FzdGVyIFJpc2sgSW5kZXggKEVEUkkpIGlzIGRldmVsb3BlZCBmb3IgNTAgY2l0aWVzIGFuZCAxIGRpc3RyaWN0IG9uICAgcGlsb3QgYmFzaXMuIFRoZSBjaXRpZXMgd2VyZSBzZWxlY3RlZCBiYXNlZCBvbiB0aGUgcG9wdWxhdGlvbiBkZW5zaXR5LCBob3VzaW5nIHRocmVhdCBmYWN0b3IgYW5kIGNpdGllcyAgIGlkZW50aWZpZWQgYnkgR292ZXJubWVudCBvZiBJbmRpYSBhcyBTbWFydCBDaXRpZXMuIFRoZSBtYWpvciBhcmVhIG9mIGZvY3VzIGlzIHRoZSBzZWlzbWljYWxseSBhY3RpdmUgcmVnaW9ucyAgIGluIEluZGlhLCBpLmUuLCBzZWlzbWljIHpvbmVzIElWIGFuZCBWLiBUaGUgRURSSSByZXBvcnQgaGFzIGJlZW4gcHJlcGFyZWQgYmFzZWQgb24gdGhlIHZpc2l0IG9mIDI1IGNpdGllcyBhbmQgICBjb2xsZWN0aW9uIG9mIHNlY29uZGFyeSBkYXRhIGZyb20gdGhlIHJlbWFpbmluZyBjaXRpZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhpcyBpbmRleCBzaG93ZWQgdGhhdCBhYm91dCA1NiUgYXJlYSBvZiBJbmRpYSBpcyB2dWxuZXJhYmxlIHRvIG1vZGVyYXRlIHRvIG1ham9yICAgZWFydGhxdWFrZXMgd2hlcmUgYWJvdXQgODIlIG9mIHRoZSBwb3B1bGF0aW9uIGxpdmUuIFNvIHRlY2huaWNhbGx5IHNwZWFraW5nLCA0IG91dCBvZiA1IHBlb3BsZSBhcmUgdW5kZXIgICBlYXJ0aHF1YWtlIHRocmVhdC4gICBLbm93bGVkZ2UgQmFzZTogICAgVW5kZXIgdGhlIEVhcnRocXVha2UgRGlzYXN0ZXIgUmlzayBJbmRleCAoRURSSSksIHRoZSByaXNrIGhhcyBiZWVuIGNhdGVnb3JpemVkIGFzIExvdywgTWVkaXVtIGFuZCBIaWdoICAgZm9yIGVhc3kgdW5kZXJzdGFuZGluZyBvZiB0aGUgZGVjaXNpb24tbWFrZXJzIGFuZCB0b3duIHBsYW5uZXJzLiBXZSBob3BlIHRoYXQgdGhlIHJlcG9ydCB3aWxsIGJlIG9mIGhlbHAgICB0byBjb25jZXJuZWQgY2l0eSBhbmQgYWN0IGFzIGEgZ3VpZGUgdG93YXJkcyBkaXNhc3RlciByaXNrIG1pdGlnYXRpb24gYW5kIHByZXBhcmVkbmVzcyBlZmZvcnRzLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cubmRtYS5nb3YuaW4vc2l0ZXMvZGVmYXVsdC9maWxlcy9QREYvUmVwb3J0cy9FRFJJX1JlcG9ydF9maW5hbC5wZGYgICAgaHR0cHM6Ly9ibG9ncy5paWl0LmFjLmluL2VkcmkvICAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbmFsIGVsYW5nYW5hLzU2LWFyZWEtb2YtaW5kaWEtcHJvbmUtdG8tICBxdWFrZXMvYXJ0aWNsZTMwMDg4NjU3LmVjZSAgICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvaW5kaWEvZWFydGhxdWFrZS1kaXNhc3Rlci1yaXNrLWluZGV4LXJhdG5hZ2lyaS1hdC1oaWdoLXJpc2stZm9yLSAgY2FzdWFsdGllcy1tdW1iYWktcHVuZS1pbi1oaWdoLWV4cG9zdXJlLWNhdGVnb3J5LSAgNjE4NTI0NC8jOn46dGV4dD1hYm91dCUyMDU2JTIwcGVyJTIwY2VudCUyMGFyZWElMjBvZiUyMEluZGlhICAgIGh0dHBzOi8vd3d3LnByZXZlbnRpb253ZWIubmV0L3B1YmxpY2F0aW9uL2VhcnRocXVha2UtZGlzYXN0ZXItcmlzay1pbmRleC1yZXBvcnQgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements  regarding 'National Innovation on Climate  Resilient Agriculture (NICRA)':  1.  It is a network project of the Indian Institute  of Rice Research.   2.  The project provides competitive research  grants to identified individuals and  institutions.  3.  The output of the project involves  preparation of district level risk assessment  of Indian agriculture to climate change.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlY2VudGx5LCBVbmlvbiBNaW5pc3RlciBvZiBBZ3JpY3VsdHVyZSBhbmQgRmFybWVycyBXZWxmYXJlIGhhcyBpbmZvcm1lZCBSYWp5YSBTYWJoYSBhYm91dCBOYXRpb25hbCAgIElubm92YXRpb25zIGluIENsaW1hdGUgUmVzaWxpZW50IEFncmljdWx0dXJlIChOSUNSQSkuIFRoZSBwcm9qZWN0IGFpbXMgYXQgc3RyYXRlZ2ljIHJlc2VhcmNoIG9uICAgYWRhcHRhdGlvbiBhbmQgbWl0aWdhdGlvbiwgZGVtb25zdHJhdGlvbiBvZiB0ZWNobm9sb2dpZXMgb24gZmFybWVycycgZmllbGRzIGFuZCBjcmVhdGluZyBhd2FyZW5lc3MgYW1vbmcgICBmYXJtZXJzIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMgdG8gbWluaW1pemUgdGhlIGNsaW1hdGljIGNoYW5nZSBpbXBhY3RzIG9uIGFncmljdWx0dXJlLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogTmF0aW9uYWwgSW5ub3ZhdGlvbnMgaW4gQ2xpbWF0ZSBSZXNpbGllbnQgQWdyaWN1bHR1cmUgKE5JQ1JBKSBpcyBhIG5ldHdvcmsgICBwcm9qZWN0IG9mIHRoZSBJbmRpYW4gQ291bmNpbCBvZiBBZ3JpY3VsdHVyYWwgUmVzZWFyY2ggKElDQVIpIGxhdW5jaGVkIGluIEZlYnJ1YXJ5IDIwMTEuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBQcm9qZWN0IGlzIGNvbXBvc2VkIG9mIEZvdXIgQ29tcG9uZW50czogICAxKSBTdHJhdGVnaWMgcmVzZWFyY2ggb24gYWRhcHRhdGlvbiBhbmQgbWl0aWdhdGlvbiAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICAyKSBUZWNobm9sb2d5IGRlbW9uc3RyYXRpb24gb24gZmFybWVycycgZmllbGRzIHRvIGNvcGUgd2l0aCBjdXJyZW50IGNsaW1hdGUgdmFyaWFiaWxpdHkgICAzKSBTcG9uc29yZWQgYW5kIGNvbXBldGl0aXZlIHJlc2VhcmNoIGdyYW50cyB0byBmaWxsIGNyaXRpY2FsIHJlc2VhcmNoIGdhcHMgICA0KSBDYXBhY2l0eSBidWlsZGluZyBvZiBkaWZmZXJlbnQgc3Rha2Vob2xkZXJzICAgT25lIG9mIHRoZSBrZXkgY29tcG9uZW50cyBvZiB0aGUgTmF0aW9uYWwgSW5pdGlhdGl2ZSBpcyBzcG9uc29yZWQvY29tcGV0aXRpdmUgZ3JhbnRzLiBBbiBhbW91bnQgb2YgMjUuMDAgICBjcm9yZXMgaXMgZWFybWFya2VkIHRocm91Z2ggc3BvbnNvcmVkL2NvbXBldGl0aXZlIGdyYW50IGNvbXBvbmVudCBmb3IgMjAxMC0xMiwgb3V0IG9mIHdoaWNoIDEwJSBpcyAgIGVhcm1hcmtlZCBmb3IgTm9ydGggRWFzdC4gUmVzZWFyY2ggcHJvcG9zYWxzIGFkZHJlc3NpbmcgY3JpdGljYWwgZ2FwcyBvZiBuYXRpb25hbCBpbXBvcnRhbmNlIG5vdCBjb3ZlcmVkICAgaW4gdGhlIG1haW4gcHJvamVjdCwgd2lsbCBiZSBmdW5kZWQgdW5kZXIgdGhpcyBjb21wb25lbnQgaW52aXRpbmcgcHJvcG9zYWxzIGZyb20gaWRlbnRpZmllZCBpbnN0aXR1dGlvbnMgb3IgICB0aHJvdWdoIGFuIG9wZW4gaW52aXRhdGlvbiBvbiBjb21wZXRpdGl2ZSBiYXNpcyBmcm9tIGluc3RpdHV0aW9ucy9pbmRpdmlkdWFscyBib3RoIHdpdGhpbiBhbmQgb3V0c2lkZSAgIE5hdGlvbmFsIEFncmljdWx0dXJhbCBSZXNlYXJjaCBTeXN0ZW0gKE5BUlMpLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBvdXRwdXRzIG9mIHRoZSBOSUNSQSBhcmU6ICAgKC0pQ2xpbWF0ZSByZXNpbGllbnQgdGVjaG5vbG9naWVzIGhhdmUgYmVlbiBkZXZlbG9wZWQgdml6LiwgY2xpbWF0ZSBzbWFydCBjcm9wIHZhcmlldGllcy9jdWx0aXZhcnMgdG9sZXJhbnQgICB0byBhYmlvdGljIHN0cmVzc2VzIGluIHJpY2UsIHdoZWF0LCBtYWl6ZSwgcGlnZW9ucGVhLCBibGFja2dyYW0sIGdyZWVuZ3JhbSwgdG9tYXRvLCBvbmlvbjsgbGl2ZXN0b2NrIGJyZWVkcyAgIGFuZCBtYW5hZ2VtZW50IHByYWN0aWNlcyB0byBicmluZyBjbGltYXRlIHJlc2lsaWVuY2UgaW4gYWdyaWN1bHR1cmUuICAgKC0pU3RhdGUgb2YgdGhlIGFydCwgY2xpbWF0ZSBjaGFuZ2UgcmVzZWFyY2ggZmFjaWxpdGllcyBoYXZlIGJlZW4gZXN0YWJsaXNoZWQgYXQgc2V2ZXJhbCBpbnN0aXR1dGVzIGFjcm9zcyB0aGUgICBjb3VudHJ5IHRvIGNhcnJ5IG91dCByZXNlYXJjaCBvbiB0aGUgaW1wYWN0IG9mIGNsaW1hdGUgY2hhbmdlIGFuZCBkZXZlbG9wIGNsaW1hdGUgcmVzaWxpZW50IHRlY2hub2xvZ2llcy4gICAoLSlQcmVwYXJlZCBkaXN0cmljdCBsZXZlbCByaXNrIGFzc2Vzc21lbnQgb2YgSW5kaWFuIGFncmljdWx0dXJlIHRvIGNsaW1hdGUgY2hhbmdlICg1NzIgcnVyYWwgZGlzdHJpY3RzKS4gICAoLSlJQ0FSIGFsb25nIHdpdGggTkFSUyBoYXMgZGV2ZWxvcGVkIERpc3RyaWN0IEFncmljdWx0dXJlIENvbnRpbmdlbmN5IFBsYW5zIGZvciA2NTAgZGlzdHJpY3RzIGluIEluZGlhIGFuZCAgIGlzIGJlaW5nIHVwZGF0ZWQgcmVndWxhcmx5LiAgIFNvdXJjZTogIFdlbGNvbWUgVG8gTklDUkEgKG5pY3JhLWljYXIuaW4pICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZUlmcmFtZVBhZ2UuYXNweD9QUklEPTE3NDMzNTQgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 34,
      "question" : "Which one of the following statements  correctly describe the term 'BSE GREENEX',  often seen in news?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJvbWJheSBTdG9jayBFeGNoYW5nZSBvbiBoYWQgbGF1bmNoZWQgYSBuZXcgaW5kZXggY2FsbGVkICdCU0UtR1JFRU5FWCcgd2hpY2ggbWVhc3VyZXMgdGhlICAgcGVyZm9ybWFuY2Ugb2YgdGhlIGNvbXBhbmllcyBpbiB0ZXJtcyBvZiBDYXJib24gRW1pc3Npb25zLiBJdCB3aWxsIGFsbG93IGludmVzdG9ycyB0byB0cmFjayBjb21wYW5pZXMgICB0aGF0IGludmVzdCBpbiBlbmVyZ3kgZWZmaWNpZW50IHByYWN0aWNlcy4gSW52ZXN0b3JzIGNhbiBpbnZlc3QgaW4gYSBtdXR1YWwgZnVuZCB0aGF0IGludmVzdHMgaW4gY29tcGFuaWVzICAgdGhhdCBmb3JtIHRoaXMgR3JlZW5leC4gVGhlIEdyZWVuZXggd2lsbCBhbGxvdyBhc3NldCBtYW5hZ2VycyB0byBjcmVhdGUgcHJvZHVjdHMgdG8gaGVscCBpbnZlc3RvcnMgcHV0ICAgdGhlaXIgbW9uZXkgaW4gZ3JlZW4gZW50ZXJwcmlzZXMuICAgVGhlIEdyZWVuIGluZGV4LCBkZXZlbG9wZWQgYnkgdGhlIEJTRSBpbiBjb2xsYWJvcmF0aW9uIHdpdGggdGhlIHByZW1pZXIgQi1zY2hvb2wgSW5kaWFuIEluc3RpdHV0ZSBvZiAgIE1hbmFnZW1lbnQsIEFobWVkYWJhZCAoSUlNLUEpLiAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3Q6IENsaW1hdGUgSW1wYWN0IFggaXMgYSBqb2ludCB2ZW50dXJlIGZyb20gQXNpYSdzIGxhcmdlc3QgbGVuZGVyIERCUyBHcm91cCwgQnJpdGlzaCAgIGJhbmsgU3RhbmRhcmQgQ2hhcnRlcmVkLCBTaW5nYXBvcmUgc3RhdGUgaW52ZXN0b3IgVGVtYXNlayBhbmQgbWFya2V0IG9wZXJhdG9yIFNpbmdhcG9yZSBFeGNoYW5nZS4gSXQgICB3aWxsIGNhdGVyIHRvIHRoZSBuZWVkcyBvZiBidXllcnMgYW5kIHNlbGxlcnMgb2YgY2FyYm9uIGNyZWRpdHMuICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0OiAnUGFyaXZlc2gnIGlzIGEgc2luZ2xlIHdpbmRvdyBwb3J0YWwgZm9yIGFsbCBlbnZpcm9ubWVudGFsIGNsZWFyYW5jZXMtIHRvIGVuYWJsZSAgIGZhc3RlciBncmVlbiBhcHByb3ZhbHMgdGhyb3VnaCBhIHNpbmdsZSBmb3JtIGFzIHBhcnQgb2YgaXRzIGxhcmdlciBnb2FsIG9mICdlYXNlIG9mIGRvaW5nIGJ1c2luZXNzJyBhbmQgYnJpbmcgICB0cmFuc3BhcmVuY3kgaW4gdGhlIGVudGlyZSBwcm9jZXNzLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogQSBncmVlbiBib25kIGlzIGEgZml4ZWQtaW5jb21lIGluc3RydW1lbnQgZGVzaWduZWQgc3BlY2lmaWNhbGx5IHRvIHN1cHBvcnQgc3BlY2lmaWMgICBjbGltYXRlLXJlbGF0ZWQgb3IgZW52aXJvbm1lbnRhbCBwcm9qZWN0cy4gSW5kaWEgaGFzIGVtZXJnZWQgYXMgdGhlIHNpeHRoIGxhcmdlc3QgY291bnRyeSBpbiB0aGUgQXNpYS0gIFBhY2lmaWMgcmVnaW9uIGluIHRlcm1zIG9mIHRvdGFsIGFtb3VudCBvZiBncmVlbiBib25kcyBpc3N1ZWQgaW4gMjAyMS4gICBTb3VyY2U6IFdoYXQgaXMgQlNFLUdSRUVORVggKENhcmJvbiBJbmRleCkgKG1hcmtldGNhbGxzLmluKSAgIEEgbmV3IGdsb2JhbCBjYXJib24gZXhjaGFuZ2Ugd2lsbCBiZSBsYXVuY2hlZCBpbiBTaW5nYXBvcmUgdGhpcyB5ZWFyIChjbmJjLmNvbSkgICBGb3IgZmFzdGVyIGdyZWVuIG5vZHMsIHNjb3BlIG9mIHVtYnJlbGxhIHBvcnRhbCB0byBiZSBleHBhbmRlZCB8IEluZGlhIE5ld3MgLSBUaW1lcyBvZiBJbmRpYSAgIChpbmRpYXRpbWVzLmNvbSkgICAgICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is a platform for trading of carbon credits   between different companies to reduce   emission of carbon dioxide.  ",
        "option2" : " It is an index that allows investors to track   companies that invest in energy efficient   practices.  ",
        "option3" : " It is a single window portal for all   environmental clearances through   Centralised Processing Centre-Green.   ",
        "option4" : " It is a fixed-income instrument designed   specifically to support specific climate-  related or environmental projects.   "
      }
    },
    {
      "index" : 35,
      "question" : "With reference to 'Climate Smart  Agriculture', consider the following statements:  1.  It refers to an integrated approach to  managing landscapes of cropland, livestock,  forests and fisheries.  2.  The objective of this agricultural practice is  to pursue lower emissions for each calorie  or kilo of food produced.  3.  Increasing the organic content of soil  through conservation tillage is an example  of Climate Smart Agriculture.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IENsaW1hdGUtc21hcnQgYWdyaWN1bHR1cmUgKENTQSkgaXMgYW4gaW50ZWdyYXRlZCBhcHByb2FjaCB0byBtYW5hZ2luZyAgIGxhbmRzY2FwZXMtY3JvcGxhbmQsIGxpdmVzdG9jaywgZm9yZXN0cyBhbmQgZmlzaGVyaWVzLS10aGF0IGFkZHJlc3MgdGhlIGludGVybGlua2VkIGNoYWxsZW5nZXMgb2YgZm9vZCAgIHNlY3VyaXR5IGFuZCBjbGltYXRlIGNoYW5nZS4gSXQgaGVscHMgZ3VpZGUgYWN0aW9ucyB0byB0cmFuc2Zvcm0gYWdyaS1mb29kIHN5c3RlbXMgdG93YXJkcyBncmVlbiBhbmQgICBjbGltYXRlIHJlc2lsaWVudCBwcmFjdGljZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQ2xpbWF0ZS1zbWFydCBhZ3JpY3VsdHVyZSAoQ1NBKSBhaW1zIHRvIHNpbXVsdGFuZW91c2x5IGFjaGlldmUgdGhyZWUgb3V0Y29tZXM6ICAgMSkgIEluY3JlYXNlZCBwcm9kdWN0aXZpdHk6IFByb2R1Y2UgbW9yZSBhbmQgYmV0dGVyIGZvb2QgdG8gaW1wcm92ZSBudXRyaXRpb24gc2VjdXJpdHkgYW5kIGJvb3N0IGluY29tZXMsICAgZXNwZWNpYWxseSBvZiA3NSBwZXJjZW50IG9mIHRoZSB3b3JsZCdzIHBvb3Igd2hvIGxpdmUgaW4gcnVyYWwgYXJlYXMgYW5kIG1haW5seSByZWx5IG9uIGFncmljdWx0dXJlIGZvciB0aGVpciAgIGxpdmVsaWhvb2RzLiAgIDIpIEVuaGFuY2VkIHJlc2lsaWVuY2U6IFJlZHVjZSB2dWxuZXJhYmlsaXR5IHRvIGRyb3VnaHQsIHBlc3RzLCBkaXNlYXNlcyBhbmQgb3RoZXIgY2xpbWF0ZS1yZWxhdGVkIHJpc2tzIGFuZCAgIHNob2NrczsgYW5kIGltcHJvdmUgY2FwYWNpdHkgdG8gYWRhcHQgYW5kIGdyb3cgaW4gdGhlIGZhY2Ugb2YgbG9uZ2VyLXRlcm0gc3RyZXNzZXMgbGlrZSBzaG9ydGVuZWQgc2Vhc29ucyAgIGFuZCBlcnJhdGljIHdlYXRoZXIgcGF0dGVybnMuICAgMykgUmVkdWNlZCBlbWlzc2lvbnM6IFB1cnN1ZSBsb3dlciBlbWlzc2lvbnMgZm9yIGVhY2ggY2Fsb3JpZSBvciBraWxvIG9mIGZvb2QgcHJvZHVjZWQsIGF2b2lkICAgZGVmb3Jlc3RhdGlvbiBmcm9tIGFncmljdWx0dXJlIGFuZCBpZGVudGlmeSB3YXlzIHRvIGFic29yYiBjYXJib24gb3V0IG9mIHRoZSBhdG1vc3BoZXJlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBFeGFtcGxlcyBvZiBDbGltYXRlIFNtYXJ0IEFncmljdWx0dXJlIGluY2x1ZGU6IDEuIEluY3JlYXNpbmcgdGhlIG9yZ2FuaWMgICBjb250ZW50IG9mIHNvaWwgdGhyb3VnaCBjb25zZXJ2YXRpb24gdGlsbGFnZS4gMi4gRW5nYWdpbmcgaW4gQ29uc2VydmF0aW9uIEFncmljdWx0dXJlIGxpa2UgYWRvcHRpbmcgICBtaW5pbXVtIHRpbGxhZ2UsIHVzaW5nIGNyb3AgcmVzaWR1ZXMgdG8gY292ZXIgc29pbCBzdXJmYWNlIGFuZCBhZG9wdGluZyBjcm9wIHJvdGF0aW9ucy4gMy4gRm9sbG93aW5nIGEgICBsYW5kc2NhcGUgYXBwcm9hY2ggaW4gYWdyaWN1bHR1cmUsIGxpa2UgaW50ZWdyYXRlZCBwbGFubmluZyBvZiBsYW5kLiAgIFNvdXJjZTogIENsaW1hdGUtU21hcnQgQWdyaWN1bHR1cmUgKHdvcmxkYmFuay5vcmcpICAgQ2xpbWF0ZS1TbWFydCBBZ3JpY3VsdHVyZSB8IEZvb2QgYW5kIEFncmljdWx0dXJlIE9yZ2FuaXphdGlvbiBvZiB0aGUgVW5pdGVkIE5hdGlvbnMgKGZhby5vcmcpICAgRm9ydW0gUmVkIEJvb2s6IEVudmlyb25tZW50ICAgIENoYXB0ZXIgOCw5LDEwLDExICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to 'Emission Gap Report',  consider the following statements:  1.   The report is an annual publication released  by World Bank and Zero Emission Group.  2.  It tracks the progress in limiting global  warming in line with the Paris Agreement.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSAnRW1pc3Npb25zIEdhcCBSZXBvcnQgMjAyMTogVGhlIEhlYXQgSXMgT24nIGlzIHRoZSAxMnRoIGVkaXRpb24gaW4gYW4gYW5udWFsIHNlcmllcyB0aGF0IHByb3ZpZGVzIGFuICAgb3ZlcnZpZXcgb2YgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB3aGVyZSBncmVlbmhvdXNlIGVtaXNzaW9ucyBhcmUgcHJlZGljdGVkIHRvIGJlIGluIDIwMzAgYW5kIHdoZXJlICAgdGhleSBzaG91bGQgYmUgdG8gYXZlcnQgdGhlIHdvcnN0IGltcGFjdHMgb2YgY2xpbWF0ZSBjaGFuZ2UuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgRW1pc3Npb24gR2FwIFJlcG9ydCBpcyBhbiBhbm51YWwgcHVibGljYXRpb24gcmVsZWFzZWQgYnkgVW5pdGVkIE5hdGlvbnMgICBFbnZpcm9ubWVudCBQcm9ncmFtbWUgQ29wZW5oYWdlbiBDbGltYXRlIENlbnRyZSAoVU5FUC1DQ0MpLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSByZXBvcnQgYXNzZXNzZXMgdGhlIGdhcCBiZXR3ZWVuIGVzdGltYXRlZCBmdXR1cmUgZ2xvYmFsIGdyZWVuaG91c2UgZ2FzICAgKEdIRykgZW1pc3Npb25zIGlmIGNvdW50cmllcyBpbXBsZW1lbnQgdGhlaXIgY2xpbWF0ZSBtaXRpZ2F0aW9uIHBsZWRnZXMgYW5kIHRoZSBnbG9iYWwgZW1pc3Npb24gbGV2ZWxzICAgZnJvbSBsZWFzdC1jb3N0IHBhdGh3YXlzIHRoYXQgYXJlIGFsaWduZWQgd2l0aCBhY2hpZXZpbmcgdGhlIHRlbXBlcmF0dXJlIGdvYWxzIG9mIHRoZSBQYXJpcyBBZ3JlZW1lbnQuIEl0ICAgdHJhY2tzIHRoZSBwcm9ncmVzcyBpbiBsaW1pdGluZyBnbG9iYWwgd2FybWluZyB3ZWxsIGJlbG93IDLCsEMgbGluZSB3aXRoIHRoZSBQYXJpcyBBZ3JlZW1lbnQuICAgU291cmNlOiAgVU5FUC1FbWlzc2lvbnMgR2FwIFJlcG9ydCAtRm9ydW1JQVMgQmxvZyAgIEVtaXNzaW9ucyBHYXAgUmVwb3J0IDIwMjEgKHVuZXAub3JnKSAgIFRoZSBFbWlzc2lvbnMgR2FwIFJlcG9ydCAyMDIxIHwgTmV3Q2xpbWF0ZSBJbnN0aXR1dGUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the concept of 'Net  Zero', consider the following statements:  1.  It implies completely replacing greenhouse  gas emissions through usage of renewable  energy.  2.  Under2 Coalition is the world's largest  subnational climate leadership group to  announce its transition to become a 'net  zero coalition' by 2050.  3.  India has committed to source half of India's  energy requirement from renewable energy  towards achieving net-zero by 2070.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE91ciBwbGFuZXQgaXMgYWxyZWFkeSBhYm91dCAxLjHCsEMgd2FybWVyIHRoYW4gaXQgd2FzIGluIHRoZSBsYXRlIDE4MDBzLCBhbmQgZW1pc3Npb25zIGNvbnRpbnVlIHRvIHJpc2UuIFRvICAga2VlcCBnbG9iYWwgd2FybWluZyB0byBubyBtb3JlIHRoYW4gMS41wrBDIC0gYXMgY2FsbGVkIGZvciBpbiB0aGUgUGFyaXMgQWdyZWVtZW50IC0gZW1pc3Npb25zIG5lZWQgdG8gYmUgICByZWR1Y2VkIGJ5IDQ1JSBieSAyMDMwIGFuZCByZWFjaCBuZXQgemVybyBieSAyMDUwLiAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IE5ldCBaZXJvIG1lYW5zIGN1dHRpbmcgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIHRvIGFzIGNsb3NlIHRvIHplcm8gYXMgICBwb3NzaWJsZSwgd2l0aCBhbnkgcmVtYWluaW5nIGVtaXNzaW9ucyByZS1hYnNvcmJlZCBmcm9tIHRoZSBhdG1vc3BoZXJlLCBieSBvY2VhbnMgYW5kIGZvcmVzdHMgZm9yICAgaW5zdGFuY2UuIEl0IHJlZmVycyB0byB0aGUgYmFsYW5jZSBiZXR3ZWVuIHRoZSBhbW91bnQgb2YgZ3JlZW5ob3VzZSBnYXMgcHJvZHVjZWQgYW5kIHRoZSBhbW91bnQgICByZW1vdmVkIGZyb20gdGhlIGF0bW9zcGhlcmUuIEl0IGRvZXMgbm90IGltcGx5IGNvbXBsZXRlIHJlbW92YWwgb2YgR3JlZW4gSG91c2UgR2FzIGVtaXNzaW9ucy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBVbmRlcjIgQ29hbGl0aW9uIGlzIHRoZSB3b3JsZCdzIGxhcmdlc3Qgc3VibmF0aW9uYWwgY2xpbWF0ZSBsZWFkZXJzaGlwIGdyb3VwIC0gICBoYXMgYW5ub3VuY2VkIGl0cyB0cmFuc2l0aW9uIHRvIGJlY29tZSBhICduZXQgemVybyBjb2FsaXRpb24nIGJ5IDIwNTAuIFRoZSBVbmRlcjIgQ29hbGl0aW9uIGJyaW5ncyB0b2dldGhlciAgIG92ZXIgMjcwIGdvdmVybm1lbnRzIHJlcHJlc2VudGluZyAxLjc1IGJpbGxpb24gcGVvcGxlIGFuZCA1MCUgb2YgdGhlIGdsb2JhbCBlY29ub215LiBJdCBpcyBjb21taXRtZW50ICAgdG8gYmVjb21lIGEgJ25ldCB6ZXJvIGNvYWxpdGlvbicgYnkgMjA1MCAtIHdpdGggbmV0IHplcm8gZW1pc3Npb25zIHRhcmdldHMgYXMgYSBiYXNlbGluZSBmb3IgbWVtYmVyc2hpcC4gICBHb3Zlcm5tZW50cyB3aGljaCBzaWduIHRoZSBVbmRlcjIgTU9VIGJlY29tZSBwYXJ0IG9mIHRoZSBVbmRlcjIgQ29hbGl0aW9uLiBWYXJpb3VzIEluZGlhbiBzdGF0ZXMgbGlrZSAgIFdlc3QgQmVuZ2FsLCBUZWxhbmdhbmEsIEphbW11IGFuZCBLYXNobWlyLCBDaGhhdHRpc2dhcmgsIE1haGFyYXNodHJhIGhhcyBqb2luZWQgdGhlIFVuZGVyMiBjb2FsaXRpb24uICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSW4gMjZ0aCBDb25mZXJlbmNlIG9mIFBhcnRpZXMgKENPUDI2KSBhdCBHbGFzZ293LCBQcmltZSBNaW5pc3RlciBOYXJlbmRyYSBNb2RpICAgbWFkZSB2ZXJ5IGdlbmVyb3VzIGNvbW1pdG1lbnRzIG9uIHdoYXQgSW5kaWEgd291bGQgZG8gdG8gc2F2ZSB0aGUgcGxhbmV0IGZyb20gdGhlIHBlcmlscyBvZiBjbGltYXRlICAgY2hhbmdlLiBIZSBjb21taXR0ZWQgdG8gaW5zdGFsbGluZyBub24tZm9zc2lsIGZ1ZWwgZWxlY3RyaWNpdHkgZ2VuZXJhdGlvbiBjYXBhY2l0eSBvZiA1MDAgR1csIHNvdXJjaW5nICAgNTAlIG9mIEluZGlhJ3MgZW5lcmd5IHJlcXVpcmVtZW50IGZyb20gcmVuZXdhYmxlcywgcmVkdWNpbmcgMSBiaWxsaW9uIHRvbm5lcyBvZiBwcm9qZWN0ZWQgZW1pc3Npb25zICAgKGZyb20gY3VycmVudCBlbWlzc2lvbnMpLCBhY2hpZXZpbmcgY2FyYm9uIGludGVuc2l0eSByZWR1Y3Rpb24gb2YgNDAlIG92ZXIgMjAwNSBsZXZlbHMsIGFsbCBieSAyMDMwLCBhbmQgICBtb3N0IGltcG9ydGFudGx5LCBhY2hpZXZpbmcgbmV0LXplcm8gYnkgMjA3MC4gICBTb3VyY2U6IE5ldCBaZXJvIENvYWxpdGlvbiB8IFVuaXRlZCBOYXRpb25zICAgRXhwbGFpbmVkOiBXaGF0IElzIFVuZGVyMiBDbGltYXRlIEdyb3VwPyBXaGljaCBJbmRpYW4gU3RhdGVzIEFyZSBQYXJ0IE9mIEl0PyAoY25iY3R2MTguY29tKSAgIFVuZGVyMiBDb2FsaXRpb24gfCBDbGltYXRlIEdyb3VwICh0aGVjbGltYXRlZ3JvdXAub3JnKSAgIFRvIGFjaGlldmUgbmV0LXplcm8gYnkgMjA3MCwgSW5kaWEgbXVzdCBzdGFydCBub3cgLSBUaGUgRWNvbm9taWMgVGltZXMgKGluZGlhdGltZXMuY29tKSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3       Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following are significant  impacts of climate change?  1.  Extinction of species  2.  Intense precipitation events  3.  Coral bleaching due to increased acidity of  the ocean  4.  Decreased growing season for farmers in  temperate regions  5.  Drastic rise in population of Plankton due to  warming of oceans  Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENsaW1hdGUgY2hhbmdlIG1lYW5zIGEgY2hhbmdlIG9mIGNsaW1hdGUgd2hpY2ggaXMgYXR0cmlidXRlZCBkaXJlY3RseSBvciBpbmRpcmVjdGx5IHRvIGh1bWFuIGFjdGl2aXR5IHRoYXQgICBhbHRlcnMgdGhlIGNvbXBvc2l0aW9uIG9mIHRoZSBnbG9iYWwgYXRtb3NwaGVyZSBhbmQgd2hpY2ggaXMgaW4gYWRkaXRpb24gdG8gbmF0dXJhbCBjbGltYXRlIHZhcmlhYmlsaXR5ICAgb2JzZXJ2ZWQgb3ZlciBjb21wYXJhYmxlIHRpbWUgcGVyaW9kcy4gICAgT3B0aW9uIDEgaXMgY29ycmVjdDogQ2xpbWF0ZSBjaGFuZ2Ugd2lsbCBsZWFkIHRvIGJpb2RpdmVyc2l0eSBkZXN0cnVjdGlvbiBhbmQgdGh1cyBsZWFkaW5nIHRvIHNwZWNpZXMgICBleHRpbmN0aW9uLiBUaGUgZmF0ZSBvZiBtYW55IHNwZWNpZXMgaW4gYSByYXBpZGx5IHdhcm1pbmcgd29ybGQgd2lsbCBsaWtlbHkgZGVwZW5kIG9uIHRoZWlyIGFiaWxpdHkgdG8gbWlncmF0ZSAgIGF3YXkgZnJvbSBpbmNyZWFzaW5nbHkgbGVzcyBmYXZvcmFibGUgY2xpbWF0aWMgY29uZGl0aW9ucyB0byBuZXcgYXJlYXMgdGhhdCBtZWV0IHRoZWlyIHBoeXNpY2FsLCBiaW9sb2dpY2FsLCAgIGFuZCBjbGltYXRpYyBuZWVkcy4gRXZpZGVuY2Ugc3VnZ2VzdHMgdGhhdCB0aGUgZ2xvYmFsIHdhcm1pbmcgb2YgdGhlIHBhc3QgY2VudHVyeSBhbHJlYWR5IGhhcyByZXN1bHRlZCBpbiAgIG1hcmtlZCBlY29sb2dpY2FsIGNoYW5nZXMsIGluY2x1ZGluZyBjaGFuZ2VzIGluIGdyb3dpbmcgc2Vhc29ucywgc3BlY2llcyByYW5nZXMsIGFuZCBwYXR0ZXJucyBvZiBzZWFzb25hbCAgIGJyZWVkaW5nLiAgIE9wdGlvbiAyIGlzIGNvcnJlY3Q6IENsaW1hdGUgY2hhbmdlIGNhbiBhZmZlY3QgdGhlIGludGVuc2l0eSBhbmQgZnJlcXVlbmN5IG9mIHByZWNpcGl0YXRpb24uIFdhcm1lciBvY2VhbnMgICBpbmNyZWFzZSB0aGUgYW1vdW50IG9mIHdhdGVyIHRoYXQgZXZhcG9yYXRlcyBpbnRvIHRoZSBhaXIuIFdoZW4gbW9yZSBtb2lzdHVyZS1sYWRlbiBhaXIgbW92ZXMgb3ZlciBsYW5kICAgb3IgY29udmVyZ2VzIGludG8gYSBzdG9ybSBzeXN0ZW0sIGl0IGNhbiBwcm9kdWNlIG1vcmUgaW50ZW5zZSBwcmVjaXBpdGF0aW9uLWZvciBleGFtcGxlLCBoZWF2aWVyIHJhaW4gICBhbmQgc25vdyBzdG9ybXMuICAgIE9wdGlvbiAzIGlzIGNvcnJlY3Q6IENvcmFsIGJsZWFjaGluZyBoYXBwZW5zIHdoZW4gY29yYWxzIGV4cGVyaWVuY2Ugc3RyZXNzIGluIHRoZWlyIGVudmlyb25tZW50IGR1ZSB0byAgIGNoYW5nZXMgaW4gdGVtcGVyYXR1cmUsIHBvbGx1dGlvbiBvciBoaWdoIGxldmVscyBvZiBvY2VhbiBhY2lkaXR5LiBVbmRlciBzdHJlc3NlZCBjb25kaXRpb25zLCB0aGUgY29yYWxzICAgZXhwZWwgdGhlIGNvbG91ci1naXZpbmcgem9veGFudGhlbGxhZSBmcm9tIHRoZWlyIHBvbHlwcywgd2hpY2ggZXhwb3NlcyB0aGVpciBwYWxlIHdoaXRlIGV4b3NrZWxldG9uLCBnaXZpbmcgICB0aGUgY29yYWxzIGEgYmxlYWNoZWQgYXBwZWFyYW5jZS4gQ2xpbWF0ZSBjaGFuZ2UgaXMgbGVhZGluZyB0byBhY2lkaWZpY2F0aW9uIG9mIG9jZWFucyB0aGF0IG1lYW5zIGRlY3JlYXNlICAgaW4gdGhlIGJhc2ljaXR5IG9mIHRoZSBvY2Vhbi4gICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0OiBUaGUgZmFybWVycyBpbiB0ZW1wZXJhdGUgcmVnaW9ucyBtYXkgYmVuZWZpdCBmcm9tIHRoZSBlYXJsaWVyIG9uc2V0IG9mIHNwcmluZyBhbmQgICBmcm9tIGEgbG9uZ2VyIHdhcm0gc2Vhc29uIHRoYXQgaXMgc3VpdGFibGUgZm9yIGdyb3dpbmcgY3JvcHMuIEFsc28sIHN0dWRpZXMgc2hvdyB0aGF0LCB1cCB0byBhIGNlcnRhaW4gcG9pbnQsICAgY3JvcHMgYW5kIG90aGVyIHBsYW50cyBncm93IGJldHRlciBpbiB0aGUgcHJlc2VuY2Ugb2YgaGlnaGVyIGNhcmJvbiBkaW94aWRlIGxldmVscyBhbmQgc2VlbSB0byBiZSBtb3JlICAgZHJvdWdodC10b2xlcmFudC4gICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgT3B0aW9uIDUgaXMgaW5jb3JyZWN0OiBUaGUgY2xpbWF0ZSBjaGFuZ2Ugd2lsbCBoYXZlIGEgdHdvLWZvbGQgaW1wYWN0IG9uIHBoeXRvcGxhbmt0b24gZ3Jvd3RoIGluIHRyb3BpY2FsICAgbWFyaW5lIGVjb3N5c3RlbXM6IDEpIGEgcmVkdWN0aW9uIGluIHBoeXRvcGxhbmt0b24gYWJ1bmRhbmNlIGFuZCAyKSBhbHRlcmF0aW9ucyBpbiB0aGUgdGltaW5nIG9mIHNlYXNvbmFsICAgcGh5dG9wbGFua3RvbiBibG9vbXMuICAgS25vd2xlZGdlIEJhc2U6ICAgIE90aGVyIGltcGFjdHMgb2YgY2xpbWF0ZSBjaGFuZ2U6ICAgICgtKVJpc2UgaW4gU2VhIGxldmVsICAg4oCiSW5jcmVhc2VkIGxpa2VsaWhvb2Qgb2YgZXh0cmVtZSBldmVudHMgc3VjaCBhcyBoZWF0IHdhdmUsIGZsb29kaW5nLCBodXJyaWNhbmVzLCBldGMuICAgKC0pTWVsdGluZyBvZiB0aGUgaWNlIGNhcHMuICAgKC0pU3ByZWFkIG9mIGRpc2Vhc2UgKGxpa2UgbWFsYXJpYSwgZXRjKS4gICBTb3VyY2U6IEVudmlyb25tZW50IGJ5IFNoYW5rYXIgSUFTIC0gQ2hhcHRlciAxNyAtIENsaW1hdGUgQ2hhbmdlLiAgICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tIGhlLXBoZW5vbWVub24tb2YtY29yYWwtYmxlYWNoaW5nLyM6fjp0ZXh0PWFib3V0JTIwY29yYWxzJTIwaGVyZS0gICxXaGF0JTIwaXMlMjBjb3JhbCUyMGJsZWFjaGluZyUzRixub3QlMjBiZW5lZmljaWFsJTIwdG8lMjB0aGUlMjBjb3JhbHMuICAgIGh0dHBzOi8vd3d3Lm5hdHVyZS5jb20vYXJ0aWNsZXMvczQxNTk4LTAxOC0yMDU2MC0gIDUjOn46dGV4dD1UaGVzZSUyMGZpbmRpbmdzJTIwc3VnZ2VzdCUyMHRoYXQlMjBmdXR1cmUsdGltaW5nJTIwb2YlMjBzZWFzb25hbCUyMHBoeXRvcGxhbmt0b24gICUyMGJsb29tcy4gICAgaHR0cHM6Ly93d3cuY2xpbWF0ZS5nb3YvbmV3cy1mZWF0dXJlcy9jbGltYXRlLXFhL2FyZS10aGVyZS1wb3NpdGl2ZS1iZW5lZml0cy1nbG9iYWwtd2FybWluZyAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "1, 2 and 5 only   ",
        "option3" : "1, 2, 3 and 4 only   ",
        "option4" : "1, 3, 4 and 5 only   "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to the Greenhouse Effect,  consider the following statements:   1.  It is the warming of Earth's troposphere due  to trapping of heat by the greenhouse gases.   2.  It helps in keeping the temperature within  habitable range.    3.  Unlike the Greenhouse effect, Global  Warming is caused solely by anthropogenic  factors.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBncmVlbmhvdXNlIGVmZmVjdCByZWZlcnMgdG8gdGhlIHdhcm1pbmcgb2YgRWFydGgncyBzdXJmYWNlIGFuZCB0cm9wb3NwaGVyZSAgIGNhdXNlZCBieSB0aGUgcHJlc2VuY2Ugb2YgZ3JlZW5ob3VzZSBnYXNlcy4gR3JlZW5ob3VzZSBnYXNlcyBpbiB0aGUgYXRtb3NwaGVyZSBsaWtlIFdhdGVyIFZhcG9yLCAgIENhcmJvbiBEaW94aWRlLCBNZXRoYW5lLCBOaXRyb3VzIE94aWRlLCBldGMgYWJzb3JiIG11Y2ggb2YgdGhlIGxvbmcgd2F2ZSBlbmVyZ3kgKGluZnJhcmVkIHJhZGlhdGlvbikgICBlbWl0dGVkIGZyb20gdGhlIGVhcnRoJ3Mgc3VyZmFjZS4gVGh1cywgdGhlc2UgZ2FzZXMgcHJldmVudCB0aGUgZW5lcmd5IGZyb20gZXNjYXBpbmcgdGhlIGVhcnRoJ3Mgc3VyZmFjZSwgICBsZWFkaW5nIHRvIHdhcm1pbmcgb2YgdGhlIGF0bW9zcGhlcmUuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZ3JlZW5ob3VzZSBlZmZlY3QgaXMgYSBuYXR1cmFsbHkgb2NjdXJyaW5nIHBoZW5vbWVub24gdGhhdCBibGFua2V0cyB0aGUgZWFydGggICBsb3dlciBhdG1vc3BoZXJlIGFuZCB3YXJtcyBpdCwgbWFpbnRhaW5pbmcgdGhlIHRlbXBlcmF0dXJlIHN1aXRhYmxlIGZvciBsaXZpbmcgdGhpbmdzIHRvIHN1cnZpdmUuICAgR3JlZW5ob3VzZSBnYXNlcyBwbGF5IGFuIGltcG9ydGFudCByb2xlIGluIHRoZSBiYWxhbmNlIG9mIEVhcnRoJ3MgY29vbGluZyBhbmQgd2FybWluZy4gQWNjb3JkaW5nIHRvIG9uZSAgIGVzdGltYXRlLCBpbiB0aGUgYWJzZW5jZSBvZiBuYXR1cmFsbHkgb2NjdXJyaW5nIGdyZWVuaG91c2UgZWZmZWN0LCB0aGUgYXZlcmFnZSB0ZW1wZXJhdHVyZSBvZiB0aGUgZWFydGggICBzdXJmYWNlIHdvdWxkIGJlIC0xOcKwQyBpbnN0ZWFkIG9mIHByZXNlbnQgdmFsdWUgb2YgMTXCsEMgYW5kIHRoZSBlYXJ0aCB3b3VsZCBiZSBhIGZyb3plbiBsaWZlbGVzcyBwbGFuZXQuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIGdyZWVuaG91c2UgZWZmZWN0IGlzIGhvdyBoZWF0IGlzIHJldGFpbmVkIGJ5IHRoZSBhdG1vc3BoZXJlIGR1ZSB0byAgIGdyZWVuaG91c2UgZ2FzZXMgd2hlcmVhcyBnbG9iYWwgd2FybWluZyBpcyB0aGUgaW5jcmVhc2UgaW4gYXZlcmFnZSBhbm51YWwgdGVtcGVyYXR1cmVzIGFjcm9zcyB0aGUgZ2xvYmUuICAgVGhlIGdyZWVuaG91c2UgZWZmZWN0IGlzIGEgbmF0dXJhbGx5IG9jY3VycmluZyBwaGVub21lbm9uIHRoYXQgYmxhbmtldHMgdGhlIGVhcnRoIGxvd2VyIGF0bW9zcGhlcmUgICBhbmQgd2FybXMgaXQuICAgIEdsb2JhbCBXYXJtaW5nIGNhbiBvY2N1ciBib3RoIGR1ZSB0byBuYXR1cmFsIGFuZCBhbnRocm9wb2dlbmljIGZhY3RvcnMuIEN1cnJlbnQgZ2xvYmFsIHdhcm1pbmcgaXMgICBtYWpvcmx5IGR1ZSB0byByZWxlYXNlIG9mIGdyZWVuaG91c2UgZ2FzZXMgZHVlIHRvIGFudGhyb3BvZ2VuaWMgZmFjdG9ycy4gTmF0dXJhbCBmYWN0b3JzIGluY2x1ZGUgdm9sY2FuaWMgICBlcnVwdGlvbiwgY2hhbmdlIGluIGluc29sYXRpb24gaW50ZW5zaXR5LCBNaWxhbmtvdml0Y2ggY3ljbGUsIGV0Yy4gICAgU291cmNlOiAgaHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20vc2NpZW5jZS9ncmVlbmhvdXNlLWVmZmVjdCAgICBFbnZpcm9ubWVudCBieSBTaGFua2FyIElBUyAtIENoYXB0ZXIgMTcgLSBDbGltYXRlIENoYW5nZSAtIFAgMjA0ICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs:   Fluorinated Gasses Used in  1. Sulphur Hexafluoride Transmission of  Electricity  2. Nitrogen Trifluoride Manufacturing of  Solar Panels  3. Perfluorocarbons Manufacturing of  semiconductors  4. Hydrofluorocarbons Fire extinguishing  systems  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEZsdW9yaW5hdGVkIEdhc3NlcyBsaWtlIEhGQ3MsIFBGQ3MsIFNGNiBhcmUgZW1pdHRlZCB0aHJvdWdoIGEgdmFyaWV0eSBvZiBpbmR1c3RyaWFsIHByb2Nlc3NlcyBsaWtlICAgYWx1bWluaXVtIGFuZCBzZW1pY29uZHVjdG9yIG1hbnVmYWN0dXJpbmcsIHN1YnN0aXR1dGlvbiBmb3Igb3pvbmUgZGVwbGV0aW5nIHN1YnN0YW5jZXMsIGVsZWN0cmljYWwgICB0cmFuc21pc3Npb24gZXF1aXBtZW50IGV0Yy4gICBQYWlyIDEgaXMgY29ycmVjdC4gU3VscGh1ciBoZXhhZmx1b3JpZGUgKFNGNikgaXMgYSBzeW50aGV0aWMgZmx1b3JpbmF0ZWQgY29tcG91bmQgd2l0aCBhbiBleHRyZW1lbHkgc3RhYmxlICAgbW9sZWN1bGFyIHN0cnVjdHVyZS4gQmVjYXVzZSBvZiBpdHMgdW5pcXVlIGRpZWxlY3RyaWMgcHJvcGVydGllcywgZWxlY3RyaWMgdXRpbGl0aWVzIHJlbHkgaGVhdmlseSBvbiBTRjYgaW4gICBlbGVjdHJpYyBwb3dlciBzeXN0ZW1zIGZvciB2b2x0YWdlIGVsZWN0cmljYWwgaW5zdWxhdGlvbiwgY3VycmVudCBpbnRlcnJ1cHRpb24sIGFuZCBhcmMgcXVlbmNoaW5nIGluIHRoZSAgIHRyYW5zbWlzc2lvbiBhbmQgZGlzdHJpYnV0aW9uIG9mIGVsZWN0cmljaXR5LiAgIFBhaXIgMiBpcyBjb3JyZWN0LiBOaXRyb2dlbiB0cmlmbHVvcmlkZSAoTkYzKSBpcyBhIGZ1bGx5IGZsdW9yaW5hdGVkIEdIRyB0aGF0IGlzIHVzZWQgaW4gYW5kIGVtaXR0ZWQgZnJvbSAgIGVsZWN0cm9uaWNzIG1hbnVmYWN0dXJpbmcuIEl0IGlzIHVzZWQgaW4gYSByZWxhdGl2ZWx5IHNtYWxsIG51bWJlciBvZiBpbmR1c3RyaWFsIHByb2Nlc3Nlcy4gSXQgaXMgcHJpbWFyaWx5ICAgcHJvZHVjZWQgaW4gdGhlIG1hbnVmYWN0dXJlIG9mIHNlbWljb25kdWN0b3JzIGFuZCBMQ0QgKExpcXVpZCBDcnlzdGFsIERpc3BsYXkpIHBhbmVscywgYW5kIGNlcnRhaW4gICB0eXBlcyBvZiBzb2xhciBwYW5lbHMgYW5kIGNoZW1pY2FsIGxhc2Vycy4gICBQYWlyIDMgaXMgY29ycmVjdC4gUGVyZmx1b3JvY2FyYm9ucyBhcmUgYSBncm91cCBvZiBodW1hbi1tYWRlIGNoZW1pY2FscyBjb21wb3NlZCBvZiBjYXJib24gYW5kICAgZmx1b3JpbmUgb25seS4gUEZDcyByZXBsYWNlIGNobG9yb2ZsdW9yb2NhcmJvbnMgKENGQ3MpIGluIG1hbnVmYWN0dXJpbmcgc2VtaWNvbmR1Y3RvcnMuIFRoZXkgYXJlIGFsc28gICB1c2VkIGFzIHNvbHZlbnRzIGluIHRoZSBlbGVjdHJvbmljcyBpbmR1c3RyeSwgYW5kIGFzIHJlZnJpZ2VyYW50cyBvZiBzb21lIHNwZWNpYWxpemVkIHJlZnJpZ2VyYXRpb24gc3lzdGVtcy4gICBJbiBhZGRpdGlvbiB0byBiZWluZyByZWxlYXNlZCBkdXJpbmcgY29uc3VtcHRpb24sIHRoZXkgYXJlIGVtaXR0ZWQgYXMgYSBieS1wcm9kdWN0IGR1cmluZyBhbHVtaW5pdW0gICBwcm9kdWN0aW9uLiBXaGVyZWFzIFRvbHVlbmUgaXMgZm91bmQgbmF0dXJhbGx5IGluIGNydWRlIG9pbCBhbmQgaXMgdXNlZCBpbiBvaWwgcmVmaW5pbmcgYW5kIHRoZSAgIG1hbnVmYWN0dXJpbmcgb2YgcGFpbnRzLCBsYWNxdWVycywgZXhwbG9zaXZlcyAoVE5UKSBhbmQgZ2x1ZXMuIEluIGhvbWVzLCB0b2x1ZW5lIG1heSBiZSBmb3VuZCBpbiBwYWludCAgIHRoaW5uZXJzLCBwYWludGJydXNoIGNsZWFuZXJzLCBuYWlsIHBvbGlzaCwgZ2x1ZXMsIGlua3MgYW5kIHN0YWluIHJlbW92ZXJzLiAgIFBhaXIgNCBpcyBjb3JyZWN0LiAgSHlkcm9mbHVvcm9jYXJib25zIChIRkNzKSBhcmUgZ3JlZW5ob3VzZSBnYXNzZXMgKEdIR3MpIGNvbW1vbmx5IHVzZWQgYnkgZmVkZXJhbCAgIGFnZW5jaWVzIGluIGEgd2lkZSB2YXJpZXR5IG9mIGFwcGxpY2F0aW9ucywgaW5jbHVkaW5nIHJlZnJpZ2VyYXRpb24sIGFpci1jb25kaXRpb25pbmcgKEFDKSwgYnVpbGRpbmcgICBpbnN1bGF0aW9uLCBmaXJlIGV4dGluZ3Vpc2hpbmcgc3lzdGVtcywgYW5kIGFlcm9zb2xzLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LmVwYS5nb3YvZXBzLXBhcnRuZXJzaGlwL3N1bGZ1ci1oZXhhZmx1b3JpZGUtc2Y2LWJhc2ljcyAgIGh0dHBzOi8vZWMuZ2MuY2Egb3hpcXVlcy10b3hpY3MvRGVmYXVsdC5hc3A/bGFuZz1FbiZuPUFBMzI5NjcwLSAgMSM6fjp0ZXh0PVBlcmZsdW9yb2NhcmJvbnMlMjAoUEZDcykmdGV4dD1QRkNzJTIwcmVwbGFjZSUyMGNobG9yb2ZsdW9yb2NhcmJvbnMlMjAoQ0ZDcyklMjBpbixvICBmJTIwc29tZSUyMHNwZWNpYWxpemVkJTIwcmVmcmlnZXJhdGlvbiUyMHN5c3RlbXMuICAgaHR0cHM6Ly93d3cuZXBhLmdvdi9zbmFwL3JlZHVjaW5nLWh5ZHJvZmx1b3JvY2FyYm9uLWhmYy11c2UtYW5kLWVtaXNzaW9ucy1mZWRlcmFsLXNlY3Rvci0gIHRocm91Z2gtICBzbmFwIzp+OnRleHQ9SHlkcm9mbHVvcm9jYXJib25zJTIwKEhGQ3MpJTIwYXJlJTIwZ3JlZW5ob3VzZSUyMGdhc2VzLGZpcmUlMjBleHRpbmd1aXNoaW5nJTIwICBzeXN0ZW1zJTJDJTIwYW5kJTIwYWVyb3NvbHMuICAgaHR0cDovL3d3dy5pb2EtZWEzZy5vcmcvb3pvbmUtdGhlbWVzL296b25lLWFuZC1pdHMtYXBwbGljYXRpb24uaHRtbCAgIGh0dHBzOi8vd3d3LmVwYS5nb3YvZ2hncmVwb3J0aW5nL2ZsdW9yaW5hdGVkLWdyZWVuaG91c2UtZ2FzLWVtaXNzaW9ucy1hbmQtc3VwcGxpZXMtcmVwb3J0ZWQtICBnaGdycCAgIGh0dHBzOi8vd3d3LmRocy53aXNjb25zaW4uZ292L2NoZW1pY2FsIG9sdWVuZS5odG0gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following statements are  correct about Ocean acidification?  1.  The underwater hydrothermal and volcanic  vents can cause ocean acidification.  2.  Since Industrial revolution there is more  than 50% increase in the ocean acidity.  3.  It can alter the marine food chain affecting  the food supply to humans.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9jZWFuIEFjaWRpZmljYXRpb24gaXMgY2FsbGVkIHRoZSAnZXZpbCB0d2luIG9mIGdsb2JhbCB3YXJtaW5nJyBhbmQgJ3RoZSBvdGhlciBjYXJib24gZGlveGlkZSBwcm9ibGVtJy4gICBPY2VhbiBBY2lkaWZpY2F0aW9uIGlzIHRoZSBvbmdvaW5nIGRlY3JlYXNlIGluIHRoZSBwSCBsZXZlbHMgb2YgdGhlIEVhcnRoJ3Mgb2NlYW5zIGNhdXNlZCBieSB0aGUgdXB0YWtlIG9mICAgY2FyYm9uIGRpb3hpZGUgZnJvbSB0aGUgYXRtb3NwaGVyZS4gQXMgdGhlIHVwdGFrZSBvZiBhdG1vc3BoZXJpYyBjYXJib24gZGlveGlkZSBieSB0aGUgb2NlYW4gaW5jcmVhc2VzLCAgIHRoZSBjb25jZW50cmF0aW9uIG9mIGh5ZHJvZ2VuIGlvbnMgaW4gdGhlIG9jZWFuIGluY3JlYXNlcywgdGhlIGNvbmNlbnRyYXRpb24gb2YgY2FyYm9uYXRlIGlvbnMgZGVjcmVhc2VzLCAgIHRoZSBwSCBvZiB0aGUgb2NlYW5zIGRlY3JlYXNlcywgYW5kIHRoZSBvY2VhbnMgYmVjb21lIGxlc3MgYWxrYWxpbmUuICAgICBvZiAzMURvd25sb2FkZWQgRnJvbSBwZGZub3Rlcy5jbyBUZWxlZ3JhbSBDaGFubmVsICBKb2luIHBkZm5vdGVzLmNvIEZvciBNb3JlICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBPY2VhbiBhY2lkaWZpY2F0aW9uIGNhbiBiZSBjYXVzZWQgYnkgYm90aCBuYXR1cmFsIGFuZCBhbnRocm9wb2dlbmljIGZhY3RvcnMuIFRoZXJlICAgYXJlIHNvbWUgcGFydHMgb2YgdGhlIG9jZWFuIGluIHdoaWNoIGFjaWRpZmljYXRpb24gaXMgY2F1c2VkIGJ5IGh5ZHJvdGhlcm1hbCB2ZW50cyB3aGljaCBhcmUgdW5kZXJ3YXRlciAgIGhvdCBzcHJpbmdzIGFuZCBzb21lIHJhcmUgdW5kZXJzZWEgdm9sY2FuaWMgdmVudHMgdGhhdCBlbWl0IGNhcmJvbiBkaW94aWRlLiBUaGUgcHJveGltaXR5IG9mIHRoZXNlICAgaHlkcm90aGVybWFsIHZlbnRzIHRvIG1hZ21hIG1ha2VzIHNlYXdhdGVyIGNoYW5nZXMgdG8gYW4gYWNpZGljIHZlbnQgZmx1aWQuIEFzIGFuIGFjaWQsIHRoZSB2ZW50IGZsdWlkICAgbGVlY2hlcyBtb3JlIG1ldGFscywgbWFnbmVzaXVtLCBzdWxwaHVyIGdhc3NlcyBhbmQgQ2FyYm9uIGRpb3hpZGUgZnJvbSBzdXJyb3VuZGluZyByb2NrcyBvZiB0aGUgICBvY2VhbmljIGNydXN0LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSW4gdGhlIDIwMC1wbHVzIHllYXJzIHNpbmNlIHRoZSBpbmR1c3RyaWFsIHJldm9sdXRpb24gYmVnYW4sIHRoZSBjb25jZW50cmF0aW9uICAgb2YgY2FyYm9uIGRpb3hpZGUgKENPMikgaW4gdGhlIGF0bW9zcGhlcmUgaGFzIGluY3JlYXNlZCBkdWUgdG8gaHVtYW4gYWN0aW9ucy4gRHVyaW5nIHRoaXMgdGltZSwgdGhlIHBIICAgb2Ygc3VyZmFjZSBvY2VhbiB3YXRlcnMgaGFzIGZhbGxlbiBieSAwLjEgcEggdW5pdHMuIFRoZSBwSCBzY2FsZSBpcyBsb2dhcml0aG1pYywgc28gdGhpcyBjaGFuZ2UgcmVwcmVzZW50cyAgIGFwcHJveGltYXRlbHkgYSAzMCBwZXJjZW50IGluY3JlYXNlIGluIGFjaWRpdHkuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gT2NlYW4gQWNpZGlmaWNhdGlvbiBoYXZlIG92ZXJhbGwgbmVnYXRpdmUgZWZmZWN0IG9uIG1hbnkgbWFyaW5lIHNwZWNpZXMgYW5kIHRoZWlyICAgZWNvc3lzdGVtIHdoaWNoIGNvdWxkIGFsdGVyIG1hcmluZSBmb29kIGNoYWlucyBhbmQgZm9vZCBzdXBwbHkgdG8gaHVtYW5zLiBBbnkgaW5jcmVhc2Ugb3IgZGVjcmVhc2UgaW4gICB0aGUgYWJ1bmRhbmNlIG9mIGEgc3BlY2llcyBjYW4gaGF2ZSBhIHJpcHBsZSBlZmZlY3Qgb24gb3RoZXIgc3BlY2llcy4gVGhpcyBpcyBiZWNhdXNlIG9jZWFuIGZvb2Qgd2VicyBhcmUgICBjb21wbGV4LiBDaGFuZ2VzIGluIHRoZSBudW1iZXIgb2Ygb25lIHR5cGUgb2YgYW5pbWFsIGNhbiBhZmZlY3QgdGhlIG51bWJlciBvZiBhbmltYWxzIHRoYXQgZmVlZCBvbiBpdCwgYW5kICAgc28gZm9ydGguIFRoaXMgY2FuIGFmZmVjdCB0aGUgY29tcGxldGUgZm9vZCBjaGFpbiBvZiBhIG1hcmluZSBlY29zeXN0ZW0gdGh1cyBmdXJ0aGVyIHRocmVhdGVuaW5nIHRoZSBnbG9iYWwgICBmb29kIHNlY3VyaXR5LiAgIFNvdXJjZTogU0hBTktBUiBJQVMgKENILU9DRUFOIEFDSURJRklDQVRJT04pLTdUSCBFRElUSU9OICAgaHR0cHM6Ly9vY2Vhbi5zaS5lZHUvb2NlYW4tbGlmZS9pbnZlcnRlYnJhdGVzL29jZWFuLWFjaWRpZmljYXRpb24gICBodHRwczovL2VkdWNhdGlvbi5uYXRpb25hbGdlb2dyYXBoaWMub3JnL3Jlc291cmNlL29jZWFuLXZlbnQgICBodHRwczovL3d3dy5ub2FhLmdvdi9lZHVjYXRpb24vcmVzb3VyY2UtY29sbGVjdGlvbnMvb2NlYW4tY29hc3RzL29jZWFuLWFjaWRpZmljYXRpb24gICBodHRwczovL25ld3Muc3RhbmZvcmQuZWR1L25ld3MvMjAxMS9zZXB0ZW1iZXIvYWNpZHNlYS1odXJ0LWJpb2RpdmVyc2l0eS0wOTEyMTEuaHRtbCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to Eutrophication and its  associated impacts, consider the following  statements:  1.  Eutrophication is the enrichment of water  bodies with nutrients that leads to increased  biological demand for oxygen (BOD).  2.  It decreases the pH levels of water bodies  making them more acidic.  3.  The eutrophic water body can be used as a  source of fertilizer in agriculture.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEV1dHJvcGhpY2F0aW9uIGlzIG1vc3QgYXNzb2NpYXRlZCB3aXRoIHRoZSBhbnRocm9wb2dlbmljIHBvbGx1dGlvbiBvZiB3YXRlciB3aXRoIGV4Y2Vzc2l2ZSBudXRyaWVudHMuIFRoZSAgIGVmZmVjdCBvZiB0aGlzIGlzIHRoZSByYXBpZCBpbmNyZWFzZSBpbiBiaW9tYXNzLCB3aGljaCBjYW4gaGF2ZSBib3RoIHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBlZmZlY3RzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEV1dHJvcGhpY2F0aW9uIGlzIHRoZSBwcm9jZXNzIGJ5IHdoaWNoIGEgYm9keSBvZiB3YXRlciBiZWNvbWVzIG92ZXJseSBlbnJpY2hlZCAgIHdpdGggbWluZXJhbHMgYW5kIG51dHJpZW50cyBmcm9tIGFjdGl2aXRpZXMgbGlrZSBhZ3JpY3VsdHVyYWwgcnVuLW9mZiwgZGlzcG9zYWwgb2YgaW5kdXN0cmlhbCB3YXN0ZXMgYW5kICAgc2V3YWdlIGRpc2NoYXJnZS4gVGhpcyBpbiB0dXJuIGluZHVjZXMgZXhjZXNzaXZlIGdyb3d0aCBvZiBhbGdhZS4gSXQgaW5jcmVhc2VzIHRoZSBiaW9sb2dpY2FsIGRlbWFuZCBmb3IgICBveHlnZW4gKEJPRCkgaW4gd2F0ZXIgYm9kaWVzIHdpdGggdGhlIGluY3JlYXNlIGluIGFxdWF0aWMgb3JnYW5pc21zLiAgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEV1dHJvcGhpY2F0aW9uIGNhbiBsZWFkIHRvIGhpZ2ggcmF0ZXMgb2YgcGhvdG9zeW50aGVzaXMgdGhhdCBjYW4gaW5jcmVhc2UgdGhlIGxldmVsICAgb2YgY2FyYm9uIGRpb3hpZGUuIFdoZW4gd2F0ZXIgKEgyTykgYW5kIGNhcmJvbiBkaW94aWRlIG1peCwgdGhleSBjb21iaW5lIHRvIGZvcm0gY2FyYm9uaWMgYWNpZCAoSDJDTzMpICAgd2hpY2ggcmVsZWFzZXMgaHlkcm9nZW4gaW9ucyAoSCspIGluIHRoZSB3YXRlciBib2R5IHdoaWNoIGJvbmQgd2l0aCBvdGhlciBtb2xlY3VsZXMgaW4gdGhlIGFyZWEuIFdpdGggICByZWxlYXNlIG9mIGh5ZHJvZ2VuIGlvbnMsIHRoZSB3YXRlciBiZWNvbWVzIG1vcmUgYWNpZGljIHRoYXQgbG93ZXJzIHRoZSBwSCBsZXZlbHMgb2YgdGhlIHdhdGVyIGJvZHkuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEV1dHJvcGhpY2F0aW9uIGhhcyBhIHBvc2l0aXZlIGZlcnRpbGl6YXRpb24gZWZmZWN0IG9uIGZhcm1sYW5kIHVzaW5nIG51dHJpZW50LSAgZW5yaWNoZWQgaXJyaWdhdGlvbiB3YXRlci4gVGhlIHdhdGVyIGJvZGllcyBhcmUgcmljaCBpbiBleGNlc3NpdmUgbnV0cmllbnQgaW5wdXRzIG1haW5seSBuaXRyb2dlbiBhbmQgICBwaG9zcGhvcnVzIHRoYXQgY2FuIGxlYWQgdG8gaGlnaCBlY29ub21pYyBiZW5lZml0cyBmcm9tIGZpc2ggZmFybXMgb3IgcmljZSBwYWRkaWVzLiAgICBLbm93bGVkZ2UgQmFzZTogICAgVGhlIGFjaWRpdHkgb2YgdGhlIHdhdGVyIGJvZHkgZGVzY3JpYmVzIGhvdyBtYW55IEgrIGlvbnMgYXJlIGluIGEgc29sdXRpb247IGFuIGFjaWQgaXMgYSBzdWJzdGFuY2UgdGhhdCAgIHJlbGVhc2VzIEgrIGlvbnM7IGFuZCBwSCBpcyB0aGUgc2NhbGUgdXNlZCB0byBtZWFzdXJlIHRoZSBjb25jZW50cmF0aW9uIG9mIEgrIGlvbnMuICAgU291cmNlOiAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy8zMzNjb3Vyc2VFL0xHL2VuZy9FVlNfMzMzX0VfTEdfMTAucGRmICAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8wNC9FbnZpcm9ubWVudC1SZWQtQm9vay1WNC0yLnBkZi4gICBodHRwczovL29jZWFuLnNpLmVkdS9vY2Vhbi1saWZlL2ludmVydGVicmF0ZXMvb2NlYW4tYWNpZGlmaWNhdGlvbiAgIGh0dHA6Ly93d3cuZW9sc3MubmV0L3NhbXBsZS1jaGFwdGVycy9jMDMvZTItMjBhLTA0LTAyLnBkZiAgIGh0dHA6Ly9zdC1lbmkuZW5pc2N1b2xhLm5ldC9lbi8yMDE2LzExLzAzL3doYXQtaXMtZXV0cm9waGljYXRpb24tY2F1c2VzLWVmZmVjdHMtYW5kLSAgY29udHJvbC8oSU1BR0VPTkxZKSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 43,
      "question" : "Which of the following can be the reasons  behind ozone layer depletion?  1.  Occurrence of Explosive volcanic eruptions  in the tropics.  2.  Explosions of thermonuclear weapons.  3.  Manufacturing of halocarbon refrigerants  and foam-blowing agents.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE96b25lIGRlcGxldGlvbiBjYW4gYmUgYm90aCBuYXR1cmFsIGFuZCBhbnRocm9wb2dlbmljIGFjdGl2aXRpZXMuIFRoZSBvem9uZSBkZXBsZXRpbmcgc3Vic3RhbmNlcyBhcmUgICBtYW4tbWFkZSBnYXNzZXMgdGhhdCBkZXN0cm95IG96b25lIG9uY2UgdGhleSByZWFjaCB0aGUgb3pvbmUgbGF5ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIGluY3JlYXNlcyBpbiBzdHJhdG9zcGhlcmljIGFlcm9zb2xzIChzbWFsbCBwYXJ0aWNsZXMpIGZyb20gdm9sY2FuaWMgZXJ1cHRpb25zICAgY2FuIGFmZmVjdCB0aGUgYWJ1bmRhbmNlIG9mIHN0cmF0b3NwaGVyaWMgb3pvbmUuIEV4cGxvc2l2ZSB2b2xjYW5pYyBlcnVwdGlvbnMgaW5qZWN0IHN1bHBodXIgZ2Fzc2VzICAgZGlyZWN0bHkgaW50byB0aGUgc3RyYXRvc3BoZXJlLCBjYXVzaW5nIG5ldyBzdWxwaGF0ZSBhZXJvc29sIHBhcnRpY2xlcyB0byBiZSBwcm9kdWNlZC4gVGhlc2UgcGFydGljbGVzICAgaW5pdGlhbGx5IGZvcm0gZG93bndpbmQgb2YgdGhlIHZvbGNhbm8gYW5kIHRoZW4gZGlzcGVyc2Ugb3ZlciBsYXJnZSByZWdpb25zLCBhcyBhaXIgaXMgdHJhbnNwb3J0ZWQgYnkgICBzdHJhdG9zcGhlcmljIHdpbmRzLiBUaGUgbGFyZ2VzdCBpbXBhY3Qgb24gZ2xvYmFsIG96b25lIHVzdWFsbHkgdGFrZXMgcGxhY2UgYWZ0ZXIgZXhwbG9zaXZlIHZvbGNhbmljICAgZXJ1cHRpb25zIGluIHRoZSB0cm9waWNzLCBiZWNhdXNlIHRoZSBzdHJhdG9zcGhlcmljIGNpcmN1bGF0aW9uIGVmZmljaWVudGx5IHNwcmVhZHMgdHJvcGljYWwgdm9sY2FuaWMgcGx1bWVzICAgdG8gYm90aCBoZW1pc3BoZXJlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gTml0cm9nZW4gT3hpZGVzIGFyZSBhIG1ham9yIHNvdXJjZSBvZiBvem9uZSBkZXBsZXRpb24gd2hpY2ggaGFzIGl0cyBzb3VyY2UgbWFpbmx5ICAgZnJvbSBleHBsb3Npb25zIG9mIHRoZXJtb251Y2xlYXIgd2VhcG9ucywgaW5kdXN0cmlhbCBlbWlzc2lvbnMgYW5kIGFncmljdWx0dXJhbCBmZXJ0aWxpemVycy4gICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIG1haW4gY2F1c2Ugb2Ygb3pvbmUgZGVwbGV0aW9uIGFuZCB0aGUgb3pvbmUgaG9sZSBpcyBtYW51ZmFjdHVyZWQgY2hlbWljYWxzLCAgIGVzcGVjaWFsbHkgbWFudWZhY3R1cmVkIGhhbG9jYXJib24gcmVmcmlnZXJhbnRzLCBzb2x2ZW50cywgcHJvcGVsbGFudHMsIGFuZCBmb2FtLSBibG93aW5nIGFnZW50cyAgIChjaGxvcm9mbHVvcm9jYXJib25zIChDRkNzKSwgSENGQ3MsIGhhbG9ucykuICAgIFNvdXJjZTogIGh0dHBzOi8vb3pvbmUudW5lcC5vcmcvMjAtcXVlc3Rpb25zLWFuZC1hbnN3ZXJzICAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS93cC1jb250ZW50L3VwbG9hZHMvMjAyMS8wNC9FbnZpcm9ubWVudC1SZWQtQm9vay1WNC0yLnBkZiAgIGh0dHBzOi8vd3d3LmJ1c2luZXNzLXN0YW5kYXJkLmNvbS9hcnRpY2xlL2N1cnJlbnQtYWZmYWlycy9vem9uZS1sYXllci1kZXBsZXRpb24tY2F1c2UtZWZmZWN0cy0gIGFuZC1zb2x1dGlvbnMtICAxMjAwOTE2MDE2OTdfMS5odG1sIzp+OnRleHQ9VGhlJTIwbWFpbiUyMGNhdXNlJTIwb2YlMjBvem9uZSwpJTJDJTIwSENGQ3MlMkMlMjBoYWxvbnMpLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3      Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to Coalition for  Sustainable Climate Action, consider the  following statements:  1.  Coalition for Sustainable Climate Action is  an initiative launched by England.  2.  It aims to take measures to attract  corporates operating in member countries  to help fight climate challenges.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQ29hbGl0aW9uIGZvciBTdXN0YWluYWJsZSBDbGltYXRlIEFjdGlvbiBpcyBhbiBpbml0aWF0aXZlIG9mIEludGVybmF0aW9uYWwgU29sYXIgICBBbGxpYW5jZS4gVGhlIElTQSBTZWNyZXRhcmlhdCBoYXMgcmVjZW50bHkgbGF1bmNoZWQgYSAnQ29hbGl0aW9uIGZvciBTdXN0YWluYWJsZSBDbGltYXRlIEFjdGlvbicgY29tcHJpc2luZyAgIG9mIGdsb2JhbCBwdWJsaWMgYW5kIHByaXZhdGUgY29ycG9yYXRlcy4gQ2hhcnRlciBvZiB0aGUgQ29hbGl0aW9uIGZvciBTdXN0YWluYWJsZSBDbGltYXRlIEFjdGlvbiAoQ1NDQSkgd2FzICAgZm9ybWFsbHkgYW5kIGNvbGxlY3RpdmVseSBsYXVuY2hlZCBieSBhbGwgdGhlIG1lbWJlcnMuIFNvZnRiYW5rIGZyb20gSmFwYW4gYW5kIE5UUEMgZnJvbSBJbmRpYSB3ZXJlICAgZWxlY3RlZCBhcyBDaGFpciBhbmQgQ28tQ2hhaXIgcmVzcGVjdGl2ZWx5IGZvciBvbmUgeWVhci4gSW5kaWFuIFBTVXMgYWRkZWQgb3ZlciAxMC41IG1pbGxpb24gVVNEIHRvIElTQSAgIENvcnB1cywgdW5kZXJzY29yaW5nIHRoZSByb2xlIHRoYXQgQ29ycG9yYXRlIFNlY3RvciB3aWxsIHBsYXkgaW4gYWNoaWV2aW5nIHRoZSBvYmplY3RpdmVzIG9mIElTQS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBDb2FsaXRpb24gZm9yIFN1c3RhaW5hYmxlIENsaW1hdGUgQWN0aW9uIHdpbGwgdGFrZSBtZWFzdXJlcyB0byBhdHRyYWN0IGNvcnBvcmF0ZSAgIG1lbWJlcnMgd2hvIG9wZXJhdGUgaW4gbWVtYmVyIGNvdW50cmllcyBhbmQgY2FuIGhlbHAgZmlnaHQgY2xpbWF0ZSBjaGFsbGVuZ2VzIGluIGFsbCB0aGUgZm91ciByZWdpb25zICAgb2YgdGhlIEludGVybmF0aW9uYWwgU29sYXIgQWxsaWFuY2UuIFRoZSBmb3VyIHJlZ2lvbnMgb2YgSVNBIGFyZSBBc2lhIFBhY2lmaWMgUmVnaW9uLCBBZnJpY2EgUmVnaW9uLCBFdXJvcGUgICBhbmQgb3RoZXJzIFJlZ2lvbiwgTGF0aW4gQW1lcmljYSBhbmQgQ2FyaWJiZWFuIFJlZ2lvbi4gICBLbm93bGVkZ2UgQmFzZTogICAgSW50ZXJuYXRpb25hbCBTb2xhciBBbGxpYW5jZTogSXQgaXMgYW4gaW50ZXJnb3Zlcm5tZW50YWwgYm9keSByZWdpc3RlcmVkIHdpdGggdGhlIFVuaXRlZCBOYXRpb25zIHVuZGVyICAgQXJ0aWNsZSAxMDIgb2YgdGhlIFVOIENoYXJ0ZXIuIFRoZSBJU0EgaXMgb3BlbiB0byAxMjIgY291bnRyaWVzLCBtb3N0IG9mIHRoZW0gbG9jYXRlZCBiZXR3ZWVuIHRoZSBUcm9waWNzICAgb2YgQ2FuY2VyIGFuZCBDYXByaWNvcm4uIEl0IGlzIGEgdHJlYXR5LWJhc2VkIG9yZ2FuaXphdGlvbiB3b3JraW5nIHRvIGNyZWF0ZSBhIGdsb2JhbCBtYXJrZXQgc3lzdGVtIHRvIHRhcCAgIHRoZSBiZW5lZml0cyBvZiBzb2xhciBwb3dlciBhbmQgcHJvbW90ZSBjbGVhbiBlbmVyZ3kgYXBwbGljYXRpb25zLiAgIFNvdXJjZTogICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZXNlRGV0YWlsLmFzcHg/UFJJRD0xNjkzMTgxIzp+OnRleHQ9VGhlJTIwSVNBJTIwU2VjcmV0YXJpYXQlMjBoYXMlMjAgIHJlY2VudGx5LGdsb2JhbCUyMHB1YmxpYyUyMGFuZCUyMHByaXZhdGUlMjBjb3Jwb3JhdGVzLiAgIE1pY3Jvc29mdCBXb3JkIC0gMTEgMTAgQU0gMjAgT2N0OiBQcmVzcyBOb3RlLSAzcmQgQXNzZW1ibHkgb2YgdGhlIElTQSAuZG9jeCAoaXNvbGFyYWxsaWFuY2Uub3JnKSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 45,
      "question" : "which one of the following statements  describes 'Stockholm+50'?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0b2NraG9sbSs1MCBpcyBhbiBpbnRlcm5hdGlvbmFsIG1lZXRpbmcgY29udmVuZWQgYnkgdGhlIFVuaXRlZCBOYXRpb25zIEdlbmVyYWwgQXNzZW1ibHkgdG8gYmUgaGVsZCAgIGluIFN0b2NraG9sbSwgU3dlZGVuIGZyb20gMi0zIEp1bmUgMjAyMi4gSXQgd2lsbCBjb21tZW1vcmF0ZSB0aGUgNTAgeWVhcnMgc2luY2UgdGhlIDE5NzIgVW5pdGVkICAgTmF0aW9ucyBDb25mZXJlbmNlIG9uIHRoZSBIdW1hbiBFbnZpcm9ubWVudCwgd2hpY2ggbWFkZSB0aGUgZW52aXJvbm1lbnQgYSBwcmVzc2luZyBnbG9iYWwgaXNzdWUgZm9yICAgdGhlIGZpcnN0IHRpbWUuIFNvbWUgMTIyIGNvdW50cmllcyBhdHRlbmRlZCwgYW5kIHBhcnRpY2lwYW50cyBhZG9wdGVkIGEgc2VyaWVzIG9mIHByaW5jaXBsZXMgb24gdGhlICAgZW52aXJvbm1lbnQsIGluY2x1ZGluZyB0aGUgU3RvY2tob2xtIERlY2xhcmF0aW9uIGFuZCBBY3Rpb24gUGxhbiBmb3IgdGhlIEh1bWFuIEVudmlyb25tZW50LiAgIFRoZSBVbml0ZWQgTmF0aW9ucyBFbnZpcm9ubWVudCBQcm9ncmFtbWUgd2FzIGNyZWF0ZWQgYXMgYSByZXN1bHQgb2YgdGhlIFVuaXRlZCBOYXRpb25zIENvbmZlcmVuY2Ugb24gICB0aGUgSHVtYW4gRW52aXJvbm1lbnQuIFRoZSBtZWV0aW5nIHdpbGwgY29tcHJpc2UgYW4gb3BlbmluZyBzZWdtZW50LCBmb3VyIHBsZW5hcnkgbWVldGluZ3MgYW5kIHRocmVlICAgbGVhZGVyc2hpcCBkaWFsb2d1ZXMsIGFuZCBhIGNsb3Npbmcgc2VnbWVudC4gICAgU291cmNlOiAgU3RvY2tob2xtKzUwICh1bmVwLm9yZykgICAgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is a document released by UNEP to   highlight the impacts of climate change in   2050, if the current rate of GHG emissions   is not curtailed.  ",
        "option2" : " It is the flagship UN knowledge and advisory   partnership on forests and climate to   reduce forest emissions and enhance forest   carbon stocks.  ",
        "option3" : " It is an international meeting convened by   the UNGP to commemorate the 50 years of   United Nations Conference on the Human   Environment, 1972  ",
        "option4" : " It is an alliance of 50 countries pledging   towards the goal of 'Net Zero' by 2050.   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements  regarding 'Heat Dome':  1.  It occurs when a persistent region of high- pressure traps heat over an area.  2.  It can be formed over a large area only in the  absence of Jet Streams.  3.  It is more likely to form during La Nina  years.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIDIwMjEsIHBhcnRzIG9mIENhbmFkYSBhbmQgVVNBIHdlcmUgc2VlbiByZWVsaW5nIHVuZGVyIHNldmVyZSBoZWF0d2F2ZSBjYXVzZWQgZHVlIHRvIGEgaGVhdCBkb21lLiAgIE9uIEp1bmUgMjksIHRlbXBlcmF0dXJlcyBpbiBQb3J0bGFuZCAoVVNBKSBhZHZhbmNlZCB0byA0Ni43b0MuIEZvciB0aHJlZSBjb25zZWN1dGl2ZSBkYXlzLCB0aGUgY2l0eSBzYXcgICByZWNvcmQgdGVtcGVyYXR1cmVzLiBCZWZvcmUgdGhpcywgdGhlIGhpZ2hlc3QgdGVtcGVyYXR1cmVzIHdlcmUgaW4gQXVndXN0IDE5ODEgYW5kIEp1bHkgMTk2NS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gVGhlIE5hdGlvbmFsIE9jZWFuaWMgYW5kIEF0bW9zcGhlcmljIEFkbWluaXN0cmF0aW9uIChOT0FBKSwgYSBoZWF0ICAgZG9tZSBvY2N1cnMgd2hlbiB0aGUgYXRtb3NwaGVyZSB0cmFwcyBob3Qgb2NlYW4gYWlyIGxpa2UgYSBsaWQgb3IgY2FwLiBBIGhlYXQgZG9tZSBvY2N1cnMgd2hlbiBhICAgcGVyc2lzdGVudCByZWdpb24gb2YgaGlnaC1wcmVzc3VyZSB0cmFwcyBoZWF0IG92ZXIgYW4gYXJlYS4gVGhlIGhlYXQgZG9tZSBjYW4gc3RyZXRjaCBvdmVyIHNldmVyYWwgc3RhdGVzICAgYW5kIGxpbmdlciBmb3IgZGF5cyB0byB3ZWVrcywgbGVhdmluZyB0aGUgcGVvcGxlLCBjcm9wcyBhbmQgYW5pbWFscyBiZWxvdyB0byBzdWZmZXIgdGhyb3VnaCBzdGFnbmFudCwgaG90ICAgYWlyIHRoYXQgY2FuIGZlZWwgbGlrZSBhbiBvdmVuLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEhlYXQgZG9tZXMgYXJlIHRpZWQgdG8gdGhlIGJlaGF2aW91ciBvZiB0aGUgamV0IHN0cmVhbSwgYSBiYW5kIG9mIGZhc3Qgd2luZHMgaGlnaCAgIGluIHRoZSBhdG1vc3BoZXJlIHRoYXQgZ2VuZXJhbGx5IHJ1bnMgd2VzdCB0byBlYXN0LiBOb3JtYWxseSwgdGhlIGpldCBzdHJlYW0gaGFzIGEgd2F2ZWxpa2UgcGF0dGVybiwgICBtZWFuZGVyaW5nIG5vcnRoIGFuZCB0aGVuIHNvdXRoIGFuZCB0aGVuIG5vcnRoIGFnYWluLiBXaGVuIHRoZXNlIG1lYW5kZXJzIGluIHRoZSBqZXQgc3RyZWFtIGJlY29tZSAgIGJpZ2dlciwgdGhleSBtb3ZlIHNsb3dlciBhbmQgY2FuIGJlY29tZSBzdGF0aW9uYXJ5LiBUaGF0J3Mgd2hlbiBoZWF0IGRvbWVzIGNhbiBvY2N1ci4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBIZWF0IGRvbWUgaXMgbW9yZSBsaWtlbHkgdG8gZm9ybSBkdXJpbmcgTGEgTmnDsWEgeWVhcnMgbGlrZSAyMDIxLCB3aGVuIHdhdGVycyBhcmUgICBjb29sIGluIHRoZSBlYXN0ZXJuIFBhY2lmaWMgYW5kIHdhcm0gaW4gdGhlIHdlc3Rlcm4gUGFjaWZpYy4gVGhlIHBoZW5vbWVub24gYmVnaW5zIHdoZW4gdGhlcmUgaXMgYSAgIHN0cm9uZyBjaGFuZ2UgKG9yIGRpZmZlcmVuY2UpIGluIG9jZWFuIHRlbXBlcmF0dXJlcy4gSW4gdGhlIHByb2Nlc3Mga25vd24gYXMgY29udmVjdGlvbiwgdGhlIHRlbXAgICBkaWZmZXJlbmNlIGNhdXNlcyBtb3JlIHdhcm0gYWlyLCBoZWF0ZWQgYnkgdGhlIG9jZWFuIHN1cmZhY2UsIHRvIHJpc2Ugb3ZlciB0aGUgb2NlYW4gc3VyZmFjZS4gICBUaGF0IHRlbXBlcmF0dXJlIGRpZmZlcmVuY2UgY3JlYXRlcyB3aW5kcyB0aGF0IGJsb3cgZGVuc2UsIHRyb3BpY2FsLCB3ZXN0ZXJuIGFpciBlYXN0d2FyZC4gRXZlbnR1YWxseSAgIHRoYXQgd2FybSBhaXIgZ2V0cyB0cmFwcGVkIGluIHRoZSBqZXQgc3RyZWFtLWEgY3VycmVudCBvZiBhaXIgc3Bpbm5pbmcgY291bnRlciBjbG9ja3dpc2UgYXJvdW5kIHRoZSBnbG9iZS0gIGFuZCBlbmRzIHVwIG9uIHRoZSBVLlMuIFdlc3QgQ29hc3QsIHJlc3VsdGluZyBpbiBoZWF0d2F2ZXMuICAgU291cmNlOiAgV2hhdCBpcyBhIGhlYXQgZG9tZT8gLSBFeHBsYWluZWQgLUZvcnVtSUFTIEJsb2cgICBXaGF0IGlzIGEgaGVhdCBkb21lPyAobm9hYS5nb3YpICAgSGVhdCBkb21lczogV2hhdCBhcmUgdGhleT8gQSBzY2llbnRpc3QgZXhwbGFpbnMgfCBXb3JsZCBFY29ub21pYyBGb3J1bSAod2Vmb3J1bS5vcmcpICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3     "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements:  1.  Biological carbon sequestration is the  process of storing carbon dioxide in  underground geologic formations, or rocks.   2.  Green carbon is carbon removed by  photosynthesis process by storing in the  plants and soil of natural ecosystems.  3. Hydrodynamic Trapping involves storage of  carbon dioxide gas under low-permeability  cap rock.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzFEb3dubG9hZGVkIEZyb20gcGRmbm90ZXMuY28gVGVsZWdyYW0gQ2hhbm5lbCAgSm9pbiBwZGZub3Rlcy5jbyBGb3IgTW9yZSAgICAgICBDYXJib24gY2FwdHVyZSBhbmQgc3RvcmFnZSBkZXNjcmliZXMgdGhlIHRlY2hub2xvZ2llcyBkZXNpZ25lZCB0byB0YWNrbGUgZ2xvYmFsIHdhcm1pbmcgYnkgY2FwdHVyaW5nICAgQ08yIGF0IHBvd2VyIHN0YXRpb25zLCBpbmR1c3RyaWFsIHNpdGVzIG9yIGV2ZW4gZGlyZWN0bHkgZnJvbSB0aGUgYWlyIGFuZCBwZXJtYW5lbnRseSBzdG9yaW5nIGl0ICAgdW5kZXJncm91bmQuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBCaW9sb2dpY2FsIGNhcmJvbiBzZXF1ZXN0cmF0aW9uIGlzIHRoZSBzdG9yYWdlIG9mIGNhcmJvbiBkaW94aWRlIGluIHZlZ2V0YXRpb24gICBzdWNoIGFzIGdyYXNzbGFuZHMgb3IgZm9yZXN0cywgYXMgd2VsbCBhcyBpbiBzb2lscyBhbmQgb2NlYW5zLiBHZW9sb2dpY2FsIGNhcmJvbiBzZXF1ZXN0cmF0aW9uIGlzIHRoZSBwcm9jZXNzICAgb2Ygc3RvcmluZyBjYXJib24gZGlveGlkZSBpbiB1bmRlcmdyb3VuZCBnZW9sb2dpYyBmb3JtYXRpb25zLCBvciByb2Nrcy4gVHlwaWNhbGx5LCBjYXJib24gZGlveGlkZSBpcyAgIGNhcHR1cmVkIGZyb20gYW4gaW5kdXN0cmlhbCBzb3VyY2UsIHN1Y2ggYXMgc3RlZWwgb3IgY2VtZW50IHByb2R1Y3Rpb24sIG9yIGFuIGVuZXJneS1yZWxhdGVkIHNvdXJjZSwgc3VjaCAgIGFzIGEgcG93ZXIgcGxhbnQgb3IgbmF0dXJhbCBnYXMgcHJvY2Vzc2luZyBmYWNpbGl0eSBhbmQgaW5qZWN0ZWQgaW50byBwb3JvdXMgcm9ja3MgZm9yIGxvbmctdGVybSBzdG9yYWdlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEdyZWVuIGNhcmJvbiBpcyBjYXJib24gcmVtb3ZlZCBieSBwaG90b3N5bnRoZXNpcyBhbmQgc3RvcmVkIGluIHRoZSBwbGFudHMgYW5kICAgc29pbCBvZiBuYXR1cmFsIGVjb3N5c3RlbXMgYW5kIGlzIGEgdml0YWwgcGFydCBvZiB0aGUgZ2xvYmFsIGNhcmJvbiBjeWNsZS4gTWFueSBwbGFudHMgYW5kIG1vc3QgY3JvcHMsIGhhdmUgICBzaG9ydCBsaXZlcyBhbmQgcmVsZWFzZSBtdWNoIG9mIHRoZWlyIGNhcmJvbiBhdCB0aGUgZW5kIG9mIGVhY2ggc2Vhc29uLCBidXQgZm9yZXN0IGJpb21hc3MgYWNjdW11bGF0ZXMgICBjYXJib24gb3ZlciBkZWNhZGVzIGFuZCBjZW50dXJpZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogR2VvbG9naWMgU2VxdWVzdHJhdGlvbiBpcyB0aG91Z2h0IHRvIGhhdmUgdGhlIGxhcmdlc3QgcG90ZW50aWFsIGZvciBuZWFyLXRlcm0gICBhcHBsaWNhdGlvbi4gVGhlcmUgYXJlIHZhcmlvdXMgR2VvbG9naWMgU2VxdWVzdHJhdGlvbiBUcmFwcGluZyBNZWNoYW5pc21zIGxpa2UgSHlkcm9keW5hbWljIFRyYXBwaW5nLCAgIFNvbHViaWxpdHkgVHJhcHBpbmcgYW5kIE1pbmVyYWwgQ2FyYm9uYXRpb24uIEluIEh5ZHJvZHluYW1pYyBUcmFwcGluZywgQ2FyYm9uIGRpb3hpZGUgY2FuIGJlIHRyYXBwZWQgICBhcyBhIGdhcyB1bmRlciBsb3ctcGVybWVhYmlsaXR5IGNhcCByb2NrIChtdWNoIGxpa2UgbmF0dXJhbCBnYXMgaXMgc3RvcmVkIGluIGdhcyByZXNlcnZvaXJzKS4gSW4gU29sdWJpbGl0eSAgIFRyYXBwaW5nLCBDYXJib24gZGlveGlkZSBjYW4gYmUgZGlzc29sdmVkIGludG8gYSBsaXF1aWQsIHN1Y2ggYXMgd2F0ZXIgb3Igb2lsLiBJbiBNaW5lcmFsIENhcmJvbmF0aW9uLCBDYXJib24gICBkaW94aWRlIGNhbiByZWFjdCB3aXRoIHRoZSBtaW5lcmFscywgZmx1aWRzLCBhbmQgb3JnYW5pYyBtYXR0ZXIgaW4gYSBnZW9sb2dpYyBmb3JtYXRpb24gdG8gZm9ybSBzdGFibGUgICBjb21wb3VuZHMvbWluZXJhbHM7IGxhcmdlbHkgY2FsY2l1bSwgaXJvbiwgYW5kIG1hZ25lc2l1bSBjYXJib25hdGVzLiAgIFNvdXJjZTogU2hhbmthciA6IENoYXB0ZXIgMjEsMjIsMjMsMjYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements  regarding 'Carbon Credit':  1.  It is a tradable certificate or permit  representing the right to emit one tonne of  carbon or carbon dioxide equivalent  (tCO2e).  2.  Earth Summit of 1992 laid the foundation of  saleable certified emission reduction (CER)  credits.  3.  The prices of Carbon Credits are primarily  decided by International Supervisory and  Regulatory Body formed under UNFCCC.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENhcmJvbiBjcmVkaXRzIGFyZSBtYXJrZXQgbWVjaGFuaXNtcyBmb3IgdGhlIG1pbmltaXphdGlvbiBvZiBncmVlbmhvdXNlIGdhc2VzIGVtaXNzaW9uLiBHb3Zlcm5tZW50cyAgIG9yIHJlZ3VsYXRvcnkgYXV0aG9yaXRpZXMgc2V0IHRoZSBjYXBzIG9uIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucy4gRm9yIHNvbWUgY29tcGFuaWVzLCB0aGUgaW1tZWRpYXRlICAgcmVkdWN0aW9uIG9mIHRoZSBlbWlzc2lvbiBpcyBub3QgZWNvbm9taWNhbGx5IHZpYWJsZS4gVGhlcmVmb3JlLCB0aGV5IGNhbiBwdXJjaGFzZSBjYXJib24gY3JlZGl0cyB0byAgIGNvbXBseSB3aXRoIHRoZSBlbWlzc2lvbiBjYXAuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQSBjYXJib24gY3JlZGl0IGlzIGEgdHJhZGVhYmxlIGNlcnRpZmljYXRlIG9yIHBlcm1pdCByZXByZXNlbnRpbmcgdGhlIHJpZ2h0IHRvIGVtaXQgICBvbmUgdG9ubmUgb2YgY2FyYm9uIG9yIGNhcmJvbiBkaW94aWRlIGVxdWl2YWxlbnQgKHRDTzJlKS4gSXQgaXMgYW4gb2Zmc2V0IG1lY2hhbmlzbSB0aGF0IGlzIGlzc3VlZCBmb3IgYW4gICBlcXVpdmFsZW50IHJlZHVjdGlvbiBvciBhYnNvcnB0aW9uIG9mIGNhcmJvbiBlbWlzc2lvbnMgZnJvbSB0aGUgYXRtb3NwaGVyZSBhcyByZXN1bHQgb2YgYSB0YXJnZXRlZCAgIGNhcmJvbiByZWR1Y3Rpb24gcHJvamVjdC4gVGhlc2UgaXNzdWVkIGNyZWRpdHMgYXJlIHRoZW4gc3VwcGxpZWQgdG8gYW55b25lIGFuZCBldmVyeW9uZSBhaW1pbmcgdG8gcmVkdWNlICAgdGhlaXIgY2FyYm9uIGZvb3RwcmludC4gU28sIGNhcmJvbiBjcmVkaXRzIGFyZSBhIHdheSB0byByZWR1Y2UgeW91ciBjYXJib24gZm9vdHByaW50IGNhdXNlZCBieSB1bmF2b2lkYWJsZSAgIGVtaXNzaW9ucy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgS3lvdG8gUHJvdG9jb2wgb2YgMTk5NyBsYWlkIGRvd24gdGhlIGZvdW5kYXRpb24gb2YgTWFya2V0IEJhc2VkICAgSW5zdHJ1bWVudHMgKE1CSXMpIGZvciBlbWlzc2lvbiByZWR1Y3Rpb24sIG9uZSBvZiB3aGljaCB3YXMgdGhlIENsZWFuIERldmVsb3BtZW50IE1lY2hhbmlzbSAoQ0RNKSAgIHdoaWNoIGFsbG93ZWQgYSBjb3VudHJ5IHdpdGggYW4gZW1pc3Npb24gcmVkdWN0aW9uIG9yIGxpbWl0YXRpb24gY29tbWl0bWVudCB0byBpbXBsZW1lbnQgb3IgZnVuZCBhICAgcHJvamVjdCBpbiB0aGUgZGV2ZWxvcGluZyB3b3JsZCB0aGF0IGNhbiBlYXJuIHNhbGVhYmxlIGNlcnRpZmllZCBlbWlzc2lvbiByZWR1Y3Rpb24gKENFUikgY3JlZGl0cyB0byBtZWV0ICAgS3lvdG8gdGFyZ2V0cy4gICBDYXJib24gdHJhZGluZyBzdGFydGVkIGZvcm1hbGx5IGluIDE5OTcgdW5kZXIgdGhlIFVuaXRlZCBOYXRpb25zJyBLeW90byBQcm90b2NvbCBvbiBjbGltYXRlIGNoYW5nZSAgIHdoaWNoIGhhZCBtb3JlIHRoYW4gMTUwIG5hdGlvbiBzaWduYXRvcmllcy4gUGFydGllcyB3aXRoIGNvbW1pdG1lbnRzIHVuZGVyIHRoZSBhZ3JlZW1lbnQgYWdyZWVkIHRvICAgbGltaXQgb3IgcmVkdWNlIHRoZWlyIGdyZWVuaG91c2UgZ2FzIGVtaXNzaW9ucyBiZXR3ZWVuIDIwMDggLSAyMDEyIHRvIDUuNCUgd2hpY2ggd2VyZSB3ZWxsIGJlbG93IHRoZSAgIGxldmVscyBvZiAxOTkwLiBFbWlzc2lvbnMgdHJhZGluZywgYXMgc2V0IG91dCBpbiB0aGUgS3lvdG8gUHJvdG9jb2wsIGFsbG93ZWQgY291bnRyaWVzIHRvIHNlbGwgdGhlIGV4Y2VzcyAgIGNhcGFjaXR5IG9mIGVtaXNzaW9uIHVuaXRzIHRvIGNvdW50cmllcyB0aGF0IGhhZCBsZXZlbHMgd2VsbCBvdmVyIHRoZWlyIHRhcmdldHMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBDYXJib24gY3JlZGl0cyBjYW4gYmUgdHJhZGVkIG9uIGJvdGggcHJpdmF0ZSBhbmQgcHVibGljIG1hcmtldHMuIEN1cnJlbnQgcnVsZXMgICBvZiB0cmFkaW5nIGFsbG93IHRoZSBpbnRlcm5hdGlvbmFsIHRyYW5zZmVyIG9mIGNyZWRpdHMuIFRoZSBwcmljZXMgb2YgY3JlZGl0cyBhcmUgcHJpbWFyaWx5IGRyaXZlbiBieSB0aGUgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgbGV2ZWxzIG9mIHN1cHBseSBhbmQgZGVtYW5kIGluIHRoZSBtYXJrZXRzLiBEdWUgdG8gdGhlIGRpZmZlcmVuY2VzIGluIHRoZSBzdXBwbHkgYW5kIGRlbWFuZCBpbiBkaWZmZXJlbnQgICBjb3VudHJpZXMsIHRoZSBwcmljZXMgb2YgdGhlIGNyZWRpdHMgZmx1Y3R1YXRlLiAgIFNvdXJjZTogIE1ha2UgY2FyYm9uIG1hcmtldHMgd29yayBmb3IgdGhlIGRldmVsb3Bpbmcgd29ybGQgLSBUaGUgSGluZHUgQnVzaW5lc3NMaW5lICAgVGhlIGNhcmJvbiBjcmVkaXRzIG1hcmtldDogVGhlIHBhc3QsIHByZXNlbnQgYW5kIGZ1dHVyZSEgKGluZGlhdGltZXMuY29tKSAgIENhcmJvbiBDcmVkaXQgLSBEZWZpbml0aW9uLCBUeXBlcyBhbmQgVHJhZGluZyBvZiBDYXJib24gQ3JlZGl0cyAoY29ycG9yYXRlZmluYW5jZWluc3RpdHV0ZS5jb20pICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 49,
      "question" : "Which of the following methods could be  classified as 'Geo-Engineering' Techniques?  1. Mirrors into Space  2. Drilling into Earth's core  3. Seed the Sea with Iron  4. Spraying Sea water into the sky  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEdlby1lbmdpbmVlcmluZyBwcmltYXJpbHkgYWltcyBhdCBtb2RpZnlpbmcgYW5kIGNvb2xpbmcgRWFydGgncyBlbnZpcm9ubWVudCwgZGVmZWF0aW5nIHRoZSAgIGVudmlyb25tZW50YWwgZGFtYWdlIGFuZCBlbnN1aW5nIGNsaW1hdGUgY2hhbmdlcyB0byBtYWtlIHRoZSBwbGFuZXQgbW9yZSBpbmhhYml0YWJsZS4gR2VvZW5naW5lZXJpbmcsICAgYXQgdGhpcyBwb2ludCwgaXMgc3RpbGwgb25seSBhIHRoZW9yZXRpY2FsIENvbmNlcHQuICAgU3RhdGVtZW50IDEsIDMgYW5kIDQgYXJlIGNvcnJlY3QgJiBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEdlb2VuZ2luZWVyaW5nIGlzIHRoZSBkZWxpYmVyYXRlIGxhcmdlLXNjYWxlICAgaW50ZXJ2ZW50aW9uIGluIHRoZSBFYXJ0aCdzIG5hdHVyYWwgc3lzdGVtcyB0byBjb3VudGVyYWN0IGNsaW1hdGUgY2hhbmdlLiAgIFRoZXJlIGlzIHdpZGUgcmFuZ2Ugb2YgcHJvcG9zZWQgZ2VvZW5naW5lZXJpbmcgdGVjaG5pcXVlcy4gICAxKSBTaG9vdCBNaXJyb3JzIGludG8gU3BhY2U6IEluIG9yZGVyIHRvIGRlZmxlY3QgZW5vdWdoIHN1bmxpZ2h0IHRvIGJyaW5nIHRoZSBFYXJ0aCdzIGNsaW1hdGUgYmFjayB0byBpdHMgcHJlLSAgaW5kdXN0cmlhbCBsZXZlbCwgZ2VvZW5naW5lZXJzIHBsYW4gdG8gbGF1bmNoIGEgbWlycm9yLCB0aGUgc2l6ZSBvZiBHcmVlbmxhbmQgYW5kIHN0cmF0ZWdpY2FsbHkgcG9zaXRpb24gaXQgICBiZXR3ZWVuIHRoZSBwbGFuZXQgYW5kIHRoZSBzdW4uIChIZW5jZSBvcHRpb24gMSBpcyBjb3JyZWN0LikgICAyKSBEcmlsbGluZyBpbnRvIEVhcnRoJ3MgY29yZSBpcyBub3QgY29uc2lkZXJlZCBhcyBHZW8tZW5naW5lZXJpbmcgdGVjaG5pcXVlLiBOb3Qgb25seSBoYXMgbm8gb25lIGV2ZXIgICBkcmlsbGVkIHRvIHRoZSBjZW50cmUgb2YgdGhlIEVhcnRoLCBubyBvbmUgaGFzIGV2ZXIgZXZlbiBtYW5hZ2VkIHRvIGRyaWxsIHRocm91Z2ggdGhlIEVhcnRoJ3MgY3J1c3QuIEluIGZhY3QsICAgd2Uga25vdyBtb3JlIGFib3V0IG91dGVyIHNwYWNlIHRoYW4gd2UgZG8gYWJvdXQgd2hhdCdzIHVuZGVyIHRoZSBFYXJ0aCdzIHN1cmZhY2UhIFdlIGtub3cgdGhhdCBFYXJ0aCAgIGhhcyBsYXllcnMuIFRoZSBFYXJ0aCBpcyBtYWRlIHVwIG9mIGEgY3J1c3QsIG1hbnRsZSwgYW5kIGNvcmUuIChIZW5jZSBvcHRpb24gMiBpcyBpbmNvcnJlY3QuKSAgIDMpIFNlZWQgdGhlIFNlYSB3aXRoIElyb246IFNjaWVudGlzdCBzdWdnZXN0cyBpcm9uIHdpbGwgYmUgdGhlIGtleSB0byB0dXJuIHRoaW5ncyBhcm91bmQuIFBoeXRvcGxhbmt0b24sICAgd2hpY2ggZHdlbGwgbmVhciB0aGUgc3VyZmFjZSwgcHJlZmVyIGlyb24uIFRoZXkgYXJlIGFsc28gYWRhcHRpbmcgYXQgcHVsbGluZyBjYXJib24gb3V0IG9mIHRoZSBhdG1vc3BoZXJlICAgZHVyaW5nIHBob3Rvc3ludGhlc2lzLiBXaGVuIHRoZXkgZGllIGFmdGVyIGFib3V0IDYwIGRheXMsIHRoZSBjYXJib24gdGhlIG9yZ2FuaXNtcyBoYXZlIGNvbnN1bWVkIGZhbGxzICAgdG8gdGhlIGJvdHRvbSBvZiB0aGUgb2NlYW4uIEJ5IHB1bXBpbmcgaXJvbiBpbnRvIHRoZSBzZWEgYW5kIHN0aW11bGF0aW5nIHBoeXRvcGxhbmt0b24gdG8gZ3JvdyBsaWtlIGNyYXp5LCAgIHNjaWVudGlzdCBiZWxpZXZlLCBnbG9iYWwgd2FybWluZyBjb3VsZCBiZSByZXZlcnNlZC4gKEhlbmNlIG9wdGlvbiAzIGlzIGNvcnJlY3QuKSAgIDQpIFdoaXRlbiB0aGUgQ2xvdWRzIHdpdGggV2luZC1Qb3dlcmVkIFNoaXBzOiBTY2llbnRpc3QgaG9wZXMsIGxpa2UgdGhlIHZvbGNhbmljIGVydXB0aW9uLCB0aGUgdG9wcyBvZiAgIGNsb3VkcyBhbHNvIHJlZmxlY3Qgc29sYXIgcmFkaWF0aW9uLiBTcHJheWluZyBhIGxvdCBvZiBzZWEtd2F0ZXIgaW50byB0aGUgc2t5IGJ5IHdpbmQgcG93ZXJlZCByZW1vdGVseSAgIGFjdGl2YXRlZCBzaGlwcyB0byB3aGl0ZW4gdGhlIGNsb3VkcyBhbmQgdGh1cyBpdCB3aWxsIHJlZmxlY3Qgc29sYXIgcmFkaWF0aW9uLiAoSGVuY2Ugb3B0aW9uIDQgaXMgY29ycmVjdC4pICAgU291cmNlOiAgT3hmb3JkIEdlb2VuZ2luZWVyaW5nIFByb2dyYW1tZSAvLyBXaGF0IGlzIEdlb2VuZ2luZWVyaW5nPyAgIFNoYW5rYXI6IENoYXB0ZXIgMjEsMjIsMjMsMjYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4    Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More     "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements with  reference to biological disasters:  1.  Epidemic refers to an unexpected increase  in the number of disease cases in a specific  geographical area.  2.  Pandemic refers to a new disease spread  over a vast geographical area covering  several countries and continents.  3.  The World Health Organization identifies an  outbreak as a pandemic after a certain  number of cases or deaths.  4.  The World Health Organization declares a  pandemic when the spread of a disease is  exponential.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBDZW50ZXJzIGZvciBEaXNlYXNlIENvbnRyb2wgYW5kIFByZXZlbnRpb24gKENEQykgZGVzY3JpYmVzIGFuIGVwaWRlbWljIGFzICAgYW4gdW5leHBlY3RlZCBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIGRpc2Vhc2UgY2FzZXMgaW4gYSBzcGVjaWZpYyBnZW9ncmFwaGljYWwgYXJlYS4gWWVsbG93IGZldmVyLCAgIHNtYWxscG94LCBtZWFzbGVzLCBhbmQgcG9saW8gYXJlIHByaW1lIGV4YW1wbGVzIG9mIGVwaWRlbWljcy4gQW4gZXBpZGVtaWMgZGlzZWFzZSBkb2Vzbid0IG5lY2Vzc2FyaWx5ICAgaGF2ZSB0byBiZSBjb250YWdpb3VzLiBXZXN0IE5pbGUgZmV2ZXIgYW5kIHRoZSByYXBpZCBpbmNyZWFzZSBpbiBvYmVzaXR5IHJhdGVzIGFyZSBhbHNvIGNvbnNpZGVyZWQgZXBpZGVtaWNzLiAgIEVwaWRlbWljcyBjYW4gcmVmZXIgdG8gYSBkaXNlYXNlIG9yIG90aGVyIHNwZWNpZmljIGhlYWx0aC1yZWxhdGVkIGJlaGF2aW9yIChlLmcuLCBzbW9raW5nKSB3aXRoIHJhdGVzIHRoYXQgICBhcmUgY2xlYXJseSBhYm92ZSB0aGUgZXhwZWN0ZWQgb2NjdXJyZW5jZSBpbiBhIGNvbW11bml0eSBvciByZWdpb24uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQSBwYW5kZW1pYyBpcyBhIG1lYXN1cmUgb2YgdGhlIHNwcmVhZCBvZiBhIGRpc2Vhc2UuIFdoZW4gYSBuZXcgZGlzZWFzZSBzcHJlYWRzICAgb3ZlciBhIHZhc3QgZ2VvZ3JhcGhpY2FsIGFyZWEgY292ZXJpbmcgc2V2ZXJhbCBjb3VudHJpZXMgYW5kIGNvbnRpbmVudHMsIGFuZCBtb3N0IHBlb3BsZSBkbyBub3QgaGF2ZSAgIGltbXVuaXR5IGFnYWluc3QgaXQsIHRoZSBvdXRicmVhayBpcyB0ZXJtZWQgYSBwYW5kZW1pYy4gSXQgaW1wbGllcyBhIGhpZ2hlciBsZXZlbCBvZiBjb25jZXJuIHRoYW4gYW4gICBlcGlkZW1pYywgd2hpY2ggdGhlIFVTIENlbnRyZXMgb2YgRGlzZWFzZSBhbmQgQ29udHJvbCBQcmV2ZW50aW9uIChDREMpIGRlZmluZSBhcyB0aGUgc3ByZWFkIG9mIGEgZGlzZWFzZSAgIGluIGEgbG9jYWxpc2VkIGFyZWEgb3IgY291bnRyeS4gICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUgICAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGVyZSBpcyBubyBmaXhlZCBudW1iZXIgb2YgY2FzZXMgb3IgZGVhdGhzIGRlZmluZWQgYnkgdGhlIFdvcmxkIGhlYWx0aCAgIG9yZ2FuaXphdGlvbiB0aGF0IGRldGVybWluZXMgd2hlbiBhbiBvdXRicmVhayBiZWNvbWVzIGEgcGFuZGVtaWMuIFRoZSBFYm9sYSB2aXJ1cywgd2hpY2gga2lsbGVkICAgdGhvdXNhbmRzIGluIFdlc3QgQWZyaWNhLCBpcyBhbiBlcGlkZW1pYyBhcyBpdCBpcyB5ZXQgdG8gbWFyayBpdHMgcHJlc2VuY2Ugb24gb3RoZXIgY29udGluZW50cy4gT3RoZXIgICBvdXRicmVha3MgY2F1c2VkIGJ5IGNvcm9uYXZpcnVzZXMgc3VjaCBhcyBNRVJTICgyMDEyKSBhbmQgU0FSUyAoMjAwMiksIHdoaWNoIHNwcmVhZCB0byAyNyBhbmQgMjYgICBjb3VudHJpZXMgcmVzcGVjdGl2ZWx5LCB3ZXJlIG5vdCBsYWJlbGVkIHBhbmRlbWljcyBiZWNhdXNlIHRoZXkgd2VyZSBldmVudHVhbGx5IGNvbnRhaW5lZC4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgV29ybGQgSGVhbHRoIE9yZ2FuaXphdGlvbiBkZWNsYXJlcyBhIHBhbmRlbWljIHdoZW4gdGhlIHNwcmVhZCBvZiBhIGRpc2Vhc2UgICBpcyBleHBvbmVudGlhbC4gVGhlIGRlY2lkaW5nIGZhY3RvciBmb3IgYSBkaXNlYXNlIHRvIGJlIGNhbGxlZCBhIHBhbmRlbWljIGlzIG5vdCBpdHMgc2V2ZXJpdHkgYnV0IHRoZSBleHRlbnQgICB0byB3aGljaCBpdCBoYXMgc3ByZWFkLiBQYW5kZW1pY3MgY2FuIGNsYWltIG1pbGxpb25zIG9mIGxpdmVzIGFuZCByYXZhZ2UgZWNvbm9taWVzLiBJdCBpcyB1c3VhbGx5IGNhdXNlZCBieSAgIG5ldyBwYXRob2dlbnMgYW5kIHRoZXNlIGNvdWxkIGJlIHpvb25vdGljIGluIG5hdHVyZSwgdHJhbnNtaXR0aW5nIGZyb20gYW5pbWFscyB0byBodW1hbnMuICAgU291cmNlOiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmVkL2V4cGxhaW5lZC1ob3ctd2hvLWNsYXNzaWZpZXMtYS1kaXNlYXNlLSAgb3V0YnJlYWstY29yb25hdmlydXMtNjMxMTU2OC8gICBodHRwczovL3d3dy5wdWJsaWNoZWFsdGguY29sdW1iaWEuZWR1L3B1YmxpYy1oZWFsdGgtbm93L25ld3MvZXBpZGVtaWMtZW5kZW1pYy1wYW5kZW1pYy0gIHdoYXQtYXJlLWRpZmZlcmVuY2VzICAgaHR0cHM6Ly93d3cuYnVzaW5lc3Mtc3RhbmRhcmQuY29tL3BvZGNhc3QvY3VycmVudC1hZmZhaXJzL3doYXQtYXJlLWVwaWRlbWljLXBhbmRlbWljLWFuZC0gIGVuZGVtaWMtMTIyMDMwMzAwMDU4XzEuaHRtbCAgICAgIG9mIDMxRG93bmxvYWRlZCBGcm9tIHBkZm5vdGVzLmNvIFRlbGVncmFtIENoYW5uZWwgIEpvaW4gcGRmbm90ZXMuY28gRm9yIE1vcmUg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "4 only  ",
        "option3" : "1, 2 and 4 only  ",
        "option4" : "2 and 3 only     Downloaded From pdfnotes.co Telegram Channel  Join pdfnotes.co For More "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
