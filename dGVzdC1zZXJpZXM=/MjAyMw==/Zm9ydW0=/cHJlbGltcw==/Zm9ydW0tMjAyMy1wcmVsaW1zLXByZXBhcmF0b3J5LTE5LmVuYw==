{
  "testId" : "forum-2023-prelims-preparatory-19",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/forum/prelims/forum-2023-prelims-preparatory-19.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with respect to the Indian Standard Time (IST): 1.  Indian Standard Time is fixed at Longitude 82°30' E. 2.  It is behind Greenwich Mean Time by 5 hours and 30 minutes. 3.  The Standard Meridian of India passes through Bhopal in Madhya Pradesh. 4.  There is a time lag of two hours between the sunrise in Arunachal Pradesh and Gujarat.   Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlcmUgaXMgYSBnZW5lcmFsIHVuZGVyc3RhbmRpbmcgYW1vbmcgdGhlIGNvdW50cmllcyBvZiB0aGUgd29ybGQgdG8gc2VsZWN0IHRoZSAgc3RhbmRhcmQgbWVyaWRpYW4gaW4gbXVsdGlwbGVzIG9mIDfCsDMwJyBvZiBsb25naXR1ZGUuIFRoYXQgaXMgd2h5IGxvbmdpdHVkZSA4MsKwMzAnIEUgaGFzIGJlZW4gc2VsZWN0ZWQgYXMgIHRoZSAnc3RhbmRhcmQgbWVyaWRpYW4nIG9mIEluZGlhLiBJdCBpcyB0YWtlbiBhcyB0aGUgc3RhbmRhcmQgdGltZSBmb3IgdGhlIHdob2xlIGNvdW50cnkuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEluZGlhbiBTdGFuZGFyZCBUaW1lIGlzIGFoZWFkIChhbmQgZG9lcyBub3QgZmFsbCBiZWhpbmQpIG9mIEdyZWVud2ljaCBNZWFuICBUaW1lIGJ5IDUgaG91cnMgYW5kIDMwIG1pbnV0ZXMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIHRpbWUgYWxvbmcgdGhlIFN0YW5kYXJkIE1lcmlkaWFuIG9mIEluZGlhICg4MsKwMzAnRSkgcGFzc2VzIHRocm91Z2ggIE1pcnphcHVyLCBuZWFyIEFsbGFoYWJhZCAoUHJheWFnIFJhaikgKGluIFV0dGFyIFByYWRlc2gpLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEF0IHByZXNlbnQsIHRoZSBjb3VudHJ5IG9ic2VydmVzIGEgc2luZ2xlIHRpbWUgem9uZSBiYXNlZCBvbiB0aGUgbG9uZ2l0dWRlIHBhc3NpbmcgIHRocm91Z2ggODLCsDMz4oCyIEUuIEluZGlhIHN0cmV0Y2hlcyBhIGxpdHRsZSBsZXNzIHRoYW4gMywwMDAga2lsb21ldHJlcyBmcm9tIGVhc3QgdG8gd2VzdCwgc3Bhbm5pbmcgZnJvbSA2OMKwNydFICB0byA5N8KwMjUnRSAoYSBzcHJlYWQgb2YgMjnCsCBsb25naXR1ZGUpLCB3aXRoIGEgdHdvLWhvdXIgZGlmZmVyZW5jZSBpbiBtZWFuIHNvbGFyIHRpbWVzLiBNZWFuaW5nIHRoYXQgdGhlICBzdW4gcmlzZXMgdHdvIGhvdXJzIGVhcmxpZXIgaW4gQXJ1bmFjaGFsIFByYWRlc2ggdGhhbiBpbiBHdWphcmF0LiAgIFNvdXJjZTogR2VvZ3JhcGh5LCBOQ0VSVC1JWCwgQ2hhcHRlci0xLCBJbmRpYS1TaXplIGFuZCBMb2NhdGlvbiwgUGcuIDEtMiAgaHR0cHM6Ly93d3cudGltZXNub3duZXdzLmNvbS9taXJyb3Itbm93L2luLWZvY3VzL2FydGljbGUvaW5kaWFuLXN0YW5kYXJkLXRpbWUtd2FzLSBpbnRyb2R1Y2VkLW9uLXRoaXMtZGF5LTc0LXllYXJzLWFnby1idXQtaXMtb25lLXRpbWUtem9uZS1lbm91Z2gtZm9yLWluZGlhLzgwNjQ4MyAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1, 3 and 4 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "1 and 4 only  "
      }
    },
    {
      "index" : 2,
      "question" : "When travelling through Indian Peninsular Plateau region, which of the following landforms are most likely to be observed by you? 1. Tors 2. Rift valleys 3. Spurs 4. Block Mountains Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUmlzaW5nIGZyb20gdGhlIGhlaWdodCBvZiAxNTAgbSBhYm92ZSB0aGUgcml2ZXIgcGxhaW5zIHVwIHRvIGFuIGVsZXZhdGlvbiBvZiA2MDAtOTAwIG0gaXMgdGhlIGlycmVndWxhciAgdHJpYW5nbGUga25vd24gYXMgdGhlIFBlbmluc3VsYXIgcGxhdGVhdS4gRGVsaGkgcmlkZ2UgaW4gdGhlIG5vcnRod2VzdCwgKGV4dGVuc2lvbiBvZiBBcmF2YWxpcyksIHRoZSBSYWptYWhhbCAgaGlsbHMgaW4gdGhlIGVhc3QsIEdpciByYW5nZSBpbiB0aGUgd2VzdCBhbmQgdGhlIENhcmRhbW9tIGhpbGxzIGluIHRoZSBzb3V0aCBjb25zdGl0dXRlIHRoZSBvdXRlciBleHRlbnQgb2YgIHRoZSBQZW5pbnN1bGFyIHBsYXRlYXUuICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgU29tZSBvZiB0aGUgaW1wb3J0YW50IHBoeXNpb2dyYXBoaWMgZmVhdHVyZXMgb2YgdGhpcyByZWdpb24gYXJlIHRvcnMsIGJsb2NrIG1vdW50YWlucywgcmlmdCB2YWxsZXlzLCBzcHVycywgIGJhcmUgcm9ja3kgc3RydWN0dXJlcywgc2VyaWVzIG9mIGh1bW1vY2t5IGhpbGxzIGFuZCB3YWxsLWxpa2UgcXVhcnR6aXRlIGR5a2VzIG9mZmVyaW5nIG5hdHVyYWwgc2l0ZXMgZm9yICB3YXRlciBzdG9yYWdlLiBUaGUgd2VzdGVybiBhbmQgbm9ydGgtd2VzdGVybiBwYXJ0IG9mIHRoZSBwbGF0ZWF1IGhhcyBhbiBlbXBoYXRpYyBwcmVzZW5jZSBvZiBibGFjayBzb2lsLiAgIFRvcnMgYXJlIGxhbmRmb3JtcyBjcmVhdGVkIGJ5IHRoZSBlcm9zaW9uIGFuZCB3ZWF0aGVyaW5nIG9mIHJvY2s7IG1vc3QgY29tbW9ubHkgZ3Jhbml0ZXMuIEl0IGlzIGEgbGFyZ2UsICBmcmVlLXN0YW5kaW5nIHJvY2sgb3V0Y3JvcCB0aGF0IHJpc2VzIGFicnVwdGx5IGZyb20gdGhlIHN1cnJvdW5kaW5nIHNtb290aCBhbmQgZ2VudGxlIHNsb3BlcyBvZiBhIHJvdW5kZWQgIGhpbGwgc3VtbWl0IG9yIHJpZGdlIGNyZXN0LiAgU3B1ciBpcyBhIGxhdGVyYWwgcmlkZ2Ugb3IgdG9uZ3VlIG9mIGxhbmQgZGVzY2VuZGluZyBmcm9tIGEgaGlsbCwgbW91bnRhaW4gb3IgbWFpbiBjcmVzdCBvZiBhIHJpZGdlLiBJdCBjYW4gIGFsc28gYmUgZGVmaW5lZCBhcyBhbm90aGVyIGhpbGwgb3IgbW91bnRhaW4gcmFuZ2Ugd2hpY2ggcHJvamVjdHMgaW4gYSBsYXRlcmFsIGRpcmVjdGlvbiBmcm9tIGEgbWFpbiBoaWxsIG9yICBtb3VudGFpbiByYW5nZS4gIFJpZnQgdmFsbGV5IGlzIGEgbG93bGFuZCByZWdpb24gdGhhdCBmb3JtcyB3aGVyZSBFYXJ0aCdzIHRlY3RvbmljIHBsYXRlcyBtb3ZlIGFwYXJ0LCBvciByaWZ0LiAgQmxvY2sgbW91bnRhaW5zIHJlcHJlc2VudCB0aGUgdXBzdGFuZGluZyBwYXJ0cyBvZiB0aGUgZ3JvdW5kIGJldHdlZW4gdHdvIGZhdWx0cyBvciBvbiBlaXRoZXIgc2lkZSBvZiBhICByaWZ0IHZhbGxleSBvciBhIGdyYWJlbi4gIFNvdXJjZTogMTF0aCBOY2VydCBJTkRJQTogUEhZU0lDQUwgRU5WSVJPTk1FTlQgUGcgbm8gMTYgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "1, 2, and 4 only ",
        "option3" : "3 and 4 only ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to the western coastal plains, consider the following statements: 1.  It is characterized by shallow lagoons called Kayals.  2.  The western coastal plains are wider than the eastern coastal plains. Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIE1hbGFiYXIgQ29hc3QgaXMgdGhlIG5hbWUgZ2l2ZW4gdG8gdGhlIHBhcnQgb2YgdGhlIFdlc3Rlcm4gY29hc3RhbCBwbGFpbnMgZXh0ZW5kaW5nIGJldHdlZW4gdGhlICBBcmFiaWFuIFNlYSBhbmQgdGhlIFdlc3Rlcm4gR2hhdHMgaW4gdGhlIHJlZ2lvbiBiZXR3ZWVuIHNvdXRoZXJuIEthcm5hdGFrYSBhbmQgdGhlIGVudGlyZSBsZW5ndGggb2YgIEtlcmFsYS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIE1hbGFiYXIgY29hc3QgaXMgZG90dGVkIHdpdGggYSBuZXR3b3JrIG9mIGJhY2t3YXRlciBsYWdvb25zLiBMYWdvb25zIGFyZSAgc2hhbGxvdyBib2RpZXMgb2Ygd2F0ZXIgZm9ybWVkIGR1ZSB0byB0aGUgcHJlc2VuY2Ugb2YgYSBsb25nIGJhciBvZiBzYW5kLCBjYWxsZWQgYmFycmllciBpc2xhbmRzLCAgc2VwYXJhdGluZyB0aGUgb3BlbiBvY2VhbiBhbmQgdGhlIGNvYXN0LiBUaGVzZSBhcmUgcmVsYXRpdmVseSB1bmRpc3R1cmJlZC4gVGhlc2UgbGFnb29ucyBhcmUga25vd24gIGxvY2FsbHkgYXMgS2F5YWxzIG9uIHRoZSBNYWxhYmFyIGNvYXN0LiBJdCBpcyBhIG5ldHdvcmsgaW5jbHVkaW5nIGZpdmUgbGFyZ2UgbGFrZXMgbGlua2VkIGJ5IGNhbmFscywgYm90aCBtYW4tIG1hZGUgYW5kIG5hdHVyYWwsIGZlZCBieSAzOCByaXZlcnMsIGFuZCBleHRlbmRpbmcgdmlydHVhbGx5IGhhbGYgdGhlIGxlbmd0aCBvZiBLZXJhbGEgc3RhdGUuIEl0IGRpc3BsYXlzIGEgIHVuaXF1ZSBoYWJpdGF0IGNyZWF0ZWQgb3V0IG9mIGJyYWNraXNoIHdhdGVycyAoc2FsaW5lIG9jZWFuIHdhdGVyIG1lZXRpbmcgZnJlc2h3YXRlciBmcm9tIHJpdmVycykuIFRoaXMgIGdpdmVzIHJpc2UgdG8gdmFyaWVkIGJpb2RpdmVyc2l0eSBpbiBhbmltYWxzIGFzIHdlbGwgYXMgdmVnZXRhdGlvbiBzdWNoIGNvY29udXRzIGFuZCBwYWxtcyB3aGljaCBhcmUgc3ByZWFkICB0aHJvdWdob3V0IHRoZSBsZW5ndGggb2YgdGhpcyBuZXR3b3JrLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHdlc3Rlcm4gY29hc3RhbCBwbGFpbiBpcyBhIG5hcnJvdyBiZWx0IGFsb25nIHRoZSBBcmFiaWFuIHNlYSBvZiBhYm91dCAxMC0gMjBrbSB3aWRlLiBJdCBzdHJldGNoZXMgZnJvbSBSYW5uIG9mIEthY2hjaGggdG8gS2FueWFrdW1hcmkuIFRoZSBlYXN0ZXJuIGNvYXN0IHJ1bnMgYWxvbmcgdGhlIEJheSBvZiAgQmVuZ2FsLiBJdCBpcyB3aWRlciB0aGFuIHRoZSB3ZXN0ZXJuIGNvYXN0YWwgcGxhaW4uIEl0cyBhdmVyYWdlIHdpZHRoIGlzIGFib3V0IDEyMEttcy4gV2VzdGVybiBjb2FzdGFsICBwbGFpbnMgY29tcHJpc2Ugb2YgdGhyZWUgc2VjdG9ycyAoaSkgS29ua2FuIENvYXN0IChNdW1iYWkgdG8gR29hKSwgKGlpKSBLYXJuYXRha2EgY29hc3QgZnJvbSBHb2EgdG8gIE1hbmdhbG9yZSAoaWlpKSBNYWxhYmFyIENvYXN0IChNYW5nYWxvcmUgdG8gS2FueWEgS3VtYXJpKS4gVGhlIGVhc3Rlcm4gY29hc3QgcnVucyBhbG9uZyB0aGUgQmF5IG9mICBCZW5nYWwuIEl0IGlzIHdpZGVyIHRoYW4gdGhlIHdlc3Rlcm4gY29hc3RhbCBwbGFpbi4gSXRzIGF2ZXJhZ2Ugd2lkdGggaXMgYWJvdXQgMTIwS21zLiAgU291cmNlOiAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2xpZmVzdHlsZS9saWZlLXN0eWxlL2FkdmVudHVyZS1rZXJhbGEtbWFsYWJhci1yaXZlci0gZmVzdGl2YWwta2F5YWtpbmctcGFuZGVtaWMtYmFjay03OTk3OTE4LycgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the Malda fault, consider the following statements: 1.  It separates the Meghalaya plateau from the Chotanagpur plateau. 2.  It is located in the state of Meghalaya. 3.  It is also known as Garo-Rajmahal Gap. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIE1lZ2hhbGF5YSBQbGF0ZWF1IGlzIGRldGFjaGVkIGZyb20gdGhlIEluZGlhbiBwZW5pbnN1bGEgYnkgTWFsZGEgR2FwLiBJdCAgd2FzIGZvcm1lZCBieSBkb3duLWZhdWx0aW5nLiBUaHVzLCB0aGUgbm9ydGgtZWFzdGVybiBwYXJ0cyBhcmUgc2VwYXJhdGVkIGZyb20gdGhlIENob3RhbmFncHVyIHBsYXRlYXUgIGJ5IHRoZSBNYWxkYSBmYXVsdCAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogTWFsZGEgR2FwIGlzIGxvY2F0ZWQgaW4gdGhlIHN0YXRlIG9mIFdlc3QgQmVuZ2FsIChhbmQgbm90IE1lZ2hhbGF5YSkuIFRoZSAgTWVnaGFsYXlhIHBsYXRlYXUgaGFzIGJlZW4gc2VwYXJhdGVkIGZyb20gdGhlIHBlbmluc3VsYXIgYmxvY2sgYnkgYSB3aWRlIGdhcCBrbm93biBhcyB0aGUgTWFsZGEgR2FwLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogTWFsZGEgZmF1bHQgaXMgYWxzbyBrbm93biBhcyBHYXJvLVJham1haGFsIEdhcC4gQW4gZXh0ZW5zaW9uIG9mIHRoZSBNZWdoYWxheWEgIHBsYXRlYXUgY2FuIGFsc28gYmUgc2VlbiBpbiB0aGUgS2FyYmkgQW5nbG9uZyBoaWxscyBvZiBBc3NhbS4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTb3VyY2U6IEluZGlhOiBQaHlzaWNhbCBFbnZpcm9ubWVudCwgTkNFUlQgWEksIENoYXB0ZXItMiwgU3RydWN0dXJlIGFuZCBQaHlzaW9ncmFwaHksIFBnLiA4ICBodHRwczovL3d3dy5zdHVkaW9kZXNzdWFudGJvbmUuY29tIGlwcy1hbmQtdHJpY2tzL3doZXJlLWlzLXRoZS1tYWxkYS1mYXVsdC8gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "2 and 3 only  "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following is/are the practices used for soil conservation? 1. Contour Ploughing 2. Agrostological Measures 3. No-till farming 4. Demineralization Which of the options given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU29pbCBjb25zZXJ2YXRpb24gaXMgdGhlIHByZXZlbnRpb24gb2Ygc29pbCBsb3NzIGZyb20gZXJvc2lvbiBvciB0aGUgcHJldmVudGlvbiBvZiBkZWNyZWFzZWQgZmVydGlsaXR5IGNhdXNlZCAgYnkgYWNpZGlmaWNhdGlvbiwgb3ZlciB1c2FnZSwgc2FsaW5pemF0aW9uIG9yIG90aGVyIGNoZW1pY2FsIHNvaWwgY29udGFtaW5hdGlvbi4gICBUaGVyZSBhcmUgdmFyaW91cyBtZXRob2RzIG5vcm1hbGx5IGFkb3B0ZWQgZm9yIGNvbnNlcnZpbmcgc29pbDogIE9wdGlvbiAxIGlzIGNvcnJlY3QuIENvbnRvdXIgcGxvdWdoaW5nIGhlbHBzIHRvIHJlZHVjZSBzb2lsIGVyb3Npb24uIENvbnRvdXIgYnVuZGluZyBvciBjb250b3VyIGZhcm1pbmcgIG9yIENvbnRvdXIgcGxvdWdoaW5nIGlzIHRoZSBmYXJtaW5nIHByYWN0aWNlIG9mIHBsb3dpbmcgYW5kL29yIHBsYW50aW5nIGFjcm9zcyBhIHNsb3BlIGZvbGxvd2luZyBpdHMgIGVsZXZhdGlvbiBjb250b3VyIGxpbmVzLiBUaGVzZSBjb250b3VyIGxpbmVzIGNyZWF0ZSBhIHdhdGVyIGJyZWFrIHdoaWNoIHJlZHVjZXMgdGhlIGZvcm1hdGlvbiBvZiByaWxscyBhbmQgIGd1bGxpZXMgZHVyaW5nIHRpbWVzIG9mIGhlYXZ5IHdhdGVyIHJ1bi1vZmY7IHdoaWNoIGlzIGEgbWFqb3IgY2F1c2Ugb2Ygc29pbCBlcm9zaW9uLiBUaGUgd2F0ZXIgYnJlYWsgYWxzbyAgYWxsb3dzIG1vcmUgdGltZSBmb3IgdGhlIHdhdGVyIHRvIHNldHRsZSBpbnRvIHRoZSBzb2lsLiBJbiBjb250b3VyIHBsb3dpbmcsIHRoZSBydXRzIG1hZGUgYnkgdGhlIHBsb3cgcnVuICBwZXJwZW5kaWN1bGFyIHJhdGhlciB0aGFuIHBhcmFsbGVsIHRvIHRoZSBzbG9wZXMsIGdlbmVyYWxseSByZXN1bHRpbmcgaW4gZnVycm93cyB0aGF0IGN1cnZlIGFyb3VuZCB0aGUgbGFuZCAgYW5kIGFyZSBsZXZlbC4gICBPcHRpb24gMiBpcyBjb3JyZWN0LiBQbGFudGluZyBncmFzcyBpbiBoZWF2aWx5IGVyb2RlZCBhcmVhcyBpcyBjYWxsZWQgYW4gYWdyb3N0b2xvZ2ljYWwgbWVhc3VyZS4gTGV5IGZhcm1pbmcgIHByYWN0aWNlcyBjdWx0aXZhdGluZyBncmFzcyBpbiByb3RhdGlvbiB3aXRoIHJlZ3VsYXIgY3JvcHMgaGVscCB0byBpbmNyZWFzZSB0aGUgbnV0cmllbnQgbGV2ZWwgaW4gdGhlIHNvaWxzLiAgV2hlbiB0aGUgZ3Jhc3MgaXMgaGFydmVzdGVkLCBpdCBjYW4gYmUgdXNlZCBhcyBmb2RkZXIgZm9yIGNhdHRsZS4gRm9yIGhlYXZpbHkgZXJvZGVkIHNvaWwsIGl0IGlzIHJlY29tbWVuZGVkICB0byBncm93IGdyYXNzIGZvciBtYW55IHllYXJzIHRvIGxldCB0aGUgc29pbHMgbmF0dXJhbGx5IHJlcGFpciB0aGVtc2VsdmVzLiAgT3B0aW9uIDMgaXMgY29ycmVjdC4gTm8tdGlsbCBmYXJtaW5nIChaZXJvIFRpbGxhZ2Ugb3IgRGlyZWN0IERyaWxsaW5nKSBpcyB0aGUgbWV0aG9kIG9mIGdyb3dpbmcgY3JvcHMgeWVhci0gcm91bmQgd2l0aG91dCBjaGFuZ2luZyB0aGUgdG9wb2dyYXBoeSBvZiB0aGUgc29pbCBieSB0aWxsaW5nIG9yIGNvbnRvdXJpbmcuICAgVGhpcyB0aWxsLWxlc3MgYWdyaWN1bHR1cmUgaXMgYSBjdWx0aXZhdGlvbiB0ZWNobmlxdWUgaW4gd2hpY2ggdGhlIHNvaWwgaXMgZGlzdHVyYmVkIG9ubHkgYWxvbmcgdGhlIHNsaXQgb3IgaW4gIHRoZSBob2xlIGludG8gd2hpY2ggdGhlIHNlZWRzIGFyZSBwbGFudGVkLiBJdCByZXNlcnZlcyBkZXRyaXR1cyBmcm9tIHByZXZpb3VzIGNyb3BzIGNvdmVycyBhbmQgcHJvdGVjdHMgdGhlICBzZWVkYmVkLiBUaGlzIHRlY2huaXF1ZSBpbmNyZWFzZXMgdGhlIGFtb3VudCBvZiB3YXRlciB0aGF0IHBlbmV0cmF0ZXMgdGhlIHNvaWwgYW5kIGNhbiBpbmNyZWFzZSB0aGUgIG9yZ2FuaWMgbWF0dGVyIG9mIHRoZSBzb2lsLCB3aGljaCBsZWFkcyB0byBsYXJnZXIgeWllbGRzLiAgIE9wdGlvbiA0IGlzIGluY29ycmVjdC4gTWluZXJhbGl6YXRpb24gaXMgdGhlIG1ldGhvZCB1c2VkIHRvIGhlbHAgY3JvcHMgcmVhY2ggaGlnaGVyIHlpZWxkcyBvciBmdWxsIHBvdGVudGlhbCAgaW4gd2hpY2ggc29tZXRpbWVzIGNydXNoZWQgcm9jayBvciBjaGVtaWNhbCBzdXBwbGVtZW50cyBhcmUgYWRkZWQgdG8gdGhlIGZhcm1sYW5kLCB0aGlzIGhlbHBzIGNvbWJhdCAgbWluZXJhbCBkZXBsZXRpb24uIE5vcm1hbGx5IHVzZWQgYWZ0ZXIgZmxvb2RpbmcsIGl0IGJyaW5ncyBzdWJzdGFudGlhbCBhbW91bnRzIG9mIHNlZGltZW50LCB3aGljaCBjYW4gIGRhbWFnZSB0aGUgbnV0cmllbnQgbGV2ZWwgb2YgdGhlIHNvaWwuICBTb3VyY2U6IGh0dHA6Ly9lY291cnNlc29ubGluZS5pYXNyaS5yZXMuaW4vbW9kL3BhZ2Uvdmlldy5waHA/aWQ9NTY3NzEgICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9rZWd5MTA2LnBkZiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvamVzczEwMS5wZGYgICBOQ0VSVCBjbGFzcyAxMCBHZW9ncmFwaHkgUkVTT1VSQ0VTIEFORCBERVZFTE9QTUVOVCBwYWdlIDExICBOQ0VSVCBjbGFzcyAxMiBJTkRJQSA6IFBIWVNJQ0FMIEVOVklST05NRU5UIHBhZ2UgNzQgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMgaWxsLWxlc3MtYWdyaWN1bHR1cmUgICBodHRwczovL3d3dy5mcm9udGllcnNpbi5vcmcvYXJ0aWNsZXMvMTAuMzM4OS9mZmdjLjIwMjAuMDAwOTkvZnVsbCAgIGh0dHBzOi8vd3d3LmNvbnNlcnZlLWVuZXJneS1mdXR1cmUuY29tL21ldGhvZHMtb2Ytc29pbC1jb25zZXJ2YXRpb24ucGhwICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1, 3 and 4 only  "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to the Himalayas, consider the following statements: 1.  The Himalayas are of tectonic origin. 2.  Altitudinal variations are greater in the western half than those in the eastern half  3.  Gorges and V-shaped valleys are the major landforms found in the Himalayan Mountains. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEhpbWFsYXlhcywgZ2VvbG9naWNhbGx5IHlvdW5nIGFuZCBzdHJ1Y3R1cmFsbHkgZm9sZCBtb3VudGFpbnMgc3RyZXRjaCBvdmVyIHRoZSBub3J0aGVybiBib3JkZXJzIG9mICBJbmRpYS4gVGhlc2UgbW91bnRhaW4gcmFuZ2VzIHJ1biBpbiBhIHdlc3QtZWFzdCBkaXJlY3Rpb24gZnJvbSB0aGUgSW5kdXMgdG8gdGhlIEJyYWhtYXB1dHJhLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIEhpbWFsYXlhbiBNb3VudGFpbnMgYXJlIHRlY3RvbmljIGluIG9yaWdpbi4gSGltYWxheWFzIGFsb25nIHdpdGggb3RoZXIgIHBlbmluc3VsYXIgbW91bnRhaW5zIGFyZSB5b3VuZywgd2VhayBhbmQgZmxleGlibGUgaW4gdGhlaXIgZ2VvbG9naWNhbCBzdHJ1Y3R1cmUgdW5saWtlIHRoZSByaWdpZCBhbmQgc3RhYmxlICBQZW5pbnN1bGFyIEJsb2NrLiBDb25zZXF1ZW50bHksIHRoZXkgYXJlIHN0aWxsIHN1YmplY3RlZCB0byB0aGUgaW50ZXJwbGF5IG9mIGV4b2dlbmljIGFuZCBlbmRvZ2VuaWMgZm9yY2VzLCAgcmVzdWx0aW5nIGluIHRoZSBkZXZlbG9wbWVudCBvZiBmYXVsdHMsIGZvbGRzIGFuZCB0aHJ1c3QgcGxhaW5zLiAgICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBIaW1hbGF5YXMgcmVwcmVzZW50cyBhIHZlcnkgeW91dGhmdWwgdG9wb2dyYXBoeSB3aXRoIGhpZ2ggcGVha3MsIGRlZXAgdmFsbGV5cyAgYW5kIGZhc3QgZmxvd2luZyByaXZlcnMgd2hpY2ggYXJlIGluIHRoZWlyIHlvdXRoZnVsIHN0YWdlLiBUaGUgYWx0aXR1ZGluYWwgdmFyaWF0aW9ucyBhcmUgZ3JlYXRlciBpbiB0aGUgIGVhc3Rlcm4gaGFsZiB0aGFuIHRob3NlIGluIHRoZSB3ZXN0ZXJuIGhhbGYuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogR29yZ2VzLCBWLXNoYXBlZCB2YWxsZXlzLCByYXBpZHMsIHdhdGVyZmFsbHMsIGV0Yy4gYXJlIHZhcmlvdXMgbGFuZGZvcm1zIG9mIHRoZSAgSGltYWxheWFuIE1vdW50YWluIHN5c3RlbS4gVGhlc2UgbGFuZGZvcm1zIGFyZSBmb3JtZWQgYnkgcml2ZXJzIHdoaWNoIGFyZSBpbiB0aGVpciB5b3V0aGZ1bCBzdGFnZS4gIFNvdXJjZTogSW5kaWE6IFBoeXNpY2FsIEVudmlyb25tZW50LCBOQ0VSVCBYSSwgQ2hhcHRlci0yLCBTdHJ1Y3R1cmUgYW5kIFBoeXNpb2dyYXBoeSwgUGcuIDktMTAgIEdlb2dyYXBoeSwgTkNFUlQgSVgsIENoYXB0ZXItMiwgUGh5c2ljYWwgRmVhdHVyZXMgb2YgSW5kaWEsIFBnLiA3LTEwICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following rivers flow towards the Arabian Sea?  1. Shetruniji  2. Sharavati  3. Pamba  4. Brahmani  Select the correct answer from the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIHJpdmVycyBmbG93aW5nIHRvd2FyZHMgdGhlIEFyYWJpYW4gc2VhIGhhdmUgc2hvcnQgY291cnNlcy4gICBUaGUgU2hldHJ1bmlqaSByaXNlcyBuZWFyIERhbGthaHdhIGluIEFtcmVsaSBkaXN0cmljdCBvZiBHdWphcmF0LiBJdCBpcyBhIHdlc3R3YXJkLWZsb3dpbmcgcml2ZXIgdGhhdCBmYWxscyBpbiAgdGhlIEFyYWJpYW4gU2VhLiBJdCBpcyB0aGUgc2Vjb25kIGxhcmdlc3Qgcml2ZXIgaW4gdGhlIHJlZ2lvbiBvZiBTYXVyYXNodHJhLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBTaGFyYXZhdGkgaXMgYW4gaW1wb3J0YW50IHJpdmVyIGluIEthcm5hdGFrYSBmbG93aW5nIHRvd2FyZHMgdGhlIHdlc3QuIFRoZSAgU2hhcmF2YXRpIG9yaWdpbmF0ZXMgaW4gU2hpbW9nYSBkaXN0cmljdCBvZiBLYXJuYXRha2EgYW5kIGZhbGxzIGluIHRoZSBBcmFiaWFuIFNlYS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBQYW1iYSByaXZlciBmbG93cyB0aHJvdWdoIEtlcmFsYS4gSXQgZmFsbHMgaW4gdGhlIFZlbW9iYW5hZCBsYWtlIGFmdGVyIHRyYXZlcnNpbmcgIGEgY291cnNlIG9mIDE3NyBrbS4gICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IFRoZXJlIGFyZSBhIGxhcmdlIG51bWJlciBvZiByaXZlcnMgZmxvd2luZyB0b3dhcmRzIHRoZSBlYXN0IGFsb25nIHdpdGggdGhlaXIgIHRyaWJ1dGFyaWVzLiBUaGVyZSBhcmUgc21hbGwgcml2ZXJzIHdoaWNoIGpvaW4gdGhlIEJheSBvZiBCZW5nYWwuIFNvbWUgaW1wb3J0YW50IGVhc3QgZmxvd2luZyByaXZlcnMgYXJlICBTdWJhcm5hcmVraGEsIHRoZSBCYWl0YXJhbmksIHRoZSBCcmFobWFuaSwgdGhlIFZhbXNhZGhhcmEsIHRoZSBQZW5uZXIsIHRoZSBQYWxhciBhbmQgdGhlIFZhaWdhaS4gICBUaGUgQnJhaG1hbmkgaXMgdGhlIHNlY29uZCB3aWRlc3Qgcml2ZXIgaW4gT2Rpc2hhIGFmdGVyIE1haGFuYWRpLiBUaGUgQnJhaG1hbmkgaXMgZm9ybWVkIGJ5IHRoZSAgY29uZmx1ZW5jZSBvZiB0aGUgU2Fua2ggYW5kIFNvdXRoIEtvZWwgcml2ZXJzLiBJdCBmb3JtcyBhIGxhcmdlIGRlbHRhLCB0b2dldGhlciB3aXRoIHRoZSByaXZlciBCYWl0YXJhbmksICBiZWZvcmUgZW1wdHlpbmcgaW50byB0aGUgQmF5IG9mIEJlbmdhbCBhdCBEaGFtcmEuICAgS25vd2xlZGdlIEJhc2U6IFRoZSBsb25nZXN0IHJpdmVyIG9mIEtlcmFsYSwgQmhhcmF0aGFwdXpoYSByaXNlcyBuZWFyIEFubmFtYWxhaSBoaWxscy4gSXQgaXMgYWxzbyBrbm93biAgYXMgUG9ubmFuaS4gSXQgZmxvd3MgdG93YXJkcyBBcmFiaWFuIFNlYS4gIFRoZSBQZXJpeWFyIGlzIHRoZSBzZWNvbmQgbGFyZ2VzdCByaXZlciBvZiBLZXJhbGEgd2hpY2ggaXMgYWxzbyBhIHdlc3QgZmxvd2luZyByaXZlci4gICBTb3VyY2U6IE5DRVJUIENsYXNzIDExIEluZGlhOiBQaHlzaWNhbCBHZW9ncmFwaHkgLSBDaGFwdGVyIDMgRHJhaW5hZ2UgU3lzdGVtIFAgMjgsIDI5LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 3 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "1, 2, 3 and 4        "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following Statements regarding 'Karewas': 1.  It is an erosional feature created by a water body that only exists temporarily. 2.  They are characterized by the presence of fossils of mammals and peat. 3.  The formations of Karewas are useful for the cultivation of Saffron in Kashmir Valley. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgSW4gS2FzaG1pcmksIHRoZSB3b3JkIEthcmV3YSBtZWFucyAnZWxldmF0ZWQgdGFibGVsYW5kLicgR29kd2luLUF1c3RpbiAoMTg1OSkgY29pbmVkIHRoZSBwaHJhc2UsIHdoaWNoICB3YXMgbGF0ZXIgdXNlZCBieSBMeWRla2tlciAoMTg3OCksIHRvIGRlc2NyaWJlIGFuIHVuY29uc29saWRhdGVkIHRvIHNlbWktY29uc29saWRhdGVkIHNhbmQtY2xheS0gY29uZ2xvbWVyYXRlIHN1Y2Nlc3Npb24uICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEthcmV3YXMgYXJlIHRoZSB0aGljayBkZXBvc2l0cyBvZiBnbGFjaWFsIGNsYXkgYW5kIG90aGVyIG1hdGVyaWFscyBlbWJlZGRlZCAgd2l0aCBtb3JhaW5lcy4gVGhlIGZlcnRpbGl0eSBvZiB0aGVzZSBwYXRjaGVzIGlzIHRoZSByZXN1bHQgb2YgdGhlaXIgbG9uZyBoaXN0b3J5IG9mIGZvcm1hdGlvbi4gSXQgd2FzIGZvcm1lZCAgZHVyaW5nIHRoZSBQbGVpc3RvY2VuZSBwZXJpb2QgKDEgbWlsbGlvbiBZZWFycyBBZ28pLiBTZWRpbWVudHMgY29udGludWVkIHRvIGZsb3cgaW4gZnJvbSByaXZlcnMgYW5kIGRlcG9zaXQgIGluIHRoZSBsYWtlLCBldmVudHVhbGx5IHJlc3VsdGluZyBpbiB0aGUgZm9ybWF0aW9uIG9mIGEgbGFjdXN0cmluZSBwbGFpbi4gT3ZlciB0aW1lLCB0aGUgd2F0ZXIgZHJhaW5lZCBhd2F5LCAgbGVhdmluZyBiZWhpbmQgZGVwb3NpdHMgc3VjaCBhcyB1bmNvbnNvbGlkYXRlZCBncmF2ZWwgYW5kIHNsdWRnZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBLYXJld2FzIGFyZSBjaGFyYWN0ZXJpemVkIGJ5IHRoZSBwcmVzZW5jZSBvZiBmb3NzaWxzIG9mIG1hbW1hbHMgYW5kIHBsYWNlcyBmaWxsZWQgIHdpdGggcGVhdC4gVGhpcyBtYWtlcyB0aGVtIGlkZWFsIGZvciBjdWx0aXZhdGlvbiBvZiBzYWZmcm9uLCBhbG1vbmRzLCBhcHBsZXMgYW5kIHNldmVyYWwgb3RoZXIgY2FzaCBjcm9wcy4gIEl0IGlzIG1haW5seSBmb3VuZCBpbiB0aGUgS2FzaG1pciB2YWxsZXkgYmV0d2VlbiBQaXIgUGFuamFsIGFuZCBaYXNrYXIgcmFuZ2UgaW4gdGhlIEhpbWFsYXlhcy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEthcmV3YSBmb3JtYXRpb25zIGFyZSB1c2VmdWwgZm9yIHRoZSBjdWx0aXZhdGlvbiBvZiBaYWZyYW4sIGEgbG9jYWwgdmFyaWV0eSBvZiBTYWZmcm9uICBpbiBLYXNobWlyIHZhbGxleS4gVGhlIEthcmV3YSBzZWRpbWVudHMgaG9sZCBmb3NzaWxzIGFuZCByZW1uYW50cyBvZiBtYW55IGh1bWFuIGNpdmlsaXNhdGlvbnMgYW5kICBoYWJpdGF0aW9ucywgSGVuY2UsIGFyZSB0aGUgbW9zdCBmZXJ0aWxlIHNwb3RzIGluIHRoZSB2YWxsZXkuIEthcmV3YSBkZXBvc2l0cyBoYXZlIGRpZmZlcmVudCBzb2lsIGFuZCAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIHNlZGltZW50cyBzdWNoIGFzIHNhbmQsIGNsYXksIHNpbHQsIHNoYWxlLCBtdWQsIGxpZ25pdGUgYW5kIGxvc3Nlcy4gSGVuY2UsIHRoZXNlIGFyZSB2ZXJ5IHVzZWZ1bCBmb3IgYWdyaWN1bHR1cmFsICBhbmQgaG9ydGljdWx0dXJlIGFjdGl2aXRpZXMuICBLbm93bGVkZ2UgQmFzZTogICAgS2FzaG1pciBzYWZmcm9uIHJlY2VpdmVkIGEgR2VvZ3JhcGhpY2FsIEluZGljYXRpb24gKEdJKSB0YWcgaW4gMjAyMCBmb3IgaXRzIGxvbmdlciBhbmQgdGhpY2tlciBzdGlnbWFzLCAgZGVlcC1yZWQgY29sb3VyLCBoaWdoIGFyb21hIGFuZCBiaXR0ZXIgZmxhdm91ciwgaXMgZ3Jvd24gb24gdGhlc2UgS2FyZXdhcy4gIFNvdXJjZTogTkNFUlQtQ2xhc3MtMTEtR2VvZ3JhcGh5LVBhcnQtMi5wZGYgIEthc2htaXIncyBLYXJld2FzLCBXb2VkZGVycywgY3J1bWJsaW5nIHVuZGVyIHVyYmFuaXphdGlvbiAtIEpLIFBvbGljeSBJbnN0aXR1dGUgfCBQZWFjZSAmIFN1c3RhaW5hYmxlICBEZXZlbG9wbWVudCBpbiBKJksgKGprcGkub3JnKSAgS2FzaG1pciBzYWZmcm9uIGdldHMgR0kgdGFnIC0gVGhlIEhpbmR1ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "None of the above  "
      }
    },
    {
      "index" : 9,
      "question" : "'This river rises from a spring at Verinag situated at the foot of the Pir Panjal range. It is believed to be named as Bidaspes as mentioned by the Egyptian geographer Ptolemy. The river is still in its youth stage and yet forms meanders which is a typical feature associated with the mature stage in the evolution of fluvial land form'. Which one of the following river is described in the above given paragraph? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEpoZWx1bSBvcmlnaW5hdGVzIGF0IFZlcmluYWcsIGluIHdlc3Rlcm4gSmFtbXUgYW5kIEthc2htaXIgdW5pb24gdGVycml0b3J5LCBmcm9tIGEgZGVlcCBzcHJpbmcuICBUaGUgSmhlbHVtIFJpdmVyIGZsb3dzIGZyb20gdGhlIEluZGlhbiB1bmlvbiB0ZXJyaXRvcnkgb2YgSmFtbXUgYW5kIEthc2htaXIgaW50byBQYWtpc3RhbmkgUHVuamFiLiBJdCBpcyAgaGFzIGEgdG90YWwgbGVuZ3RoIG9mIGFib3V0IDcyNSBraWxvbWV0cmVzLiBUaGUgSmhlbHVtIFJpdmVyIGlzIGJlbGlldmVkIHRvIGJlIHRoZSBIeWRhc3BlcyBtZW50aW9uZWQgYnkgIEFycmlhbiAodGhlIGhpc3RvcmlhbiBmb3IgQWxleGFuZGVyIHRoZSBHcmVhdCkgYW5kIHRoZSBCaWRhc3BlcyBtZW50aW9uZWQgYnkgdGhlIEVneXB0aWFuIGdlb2dyYXBoZXIgIFB0b2xlbXkuICBUaGUgcml2ZXJzIG5vcm1hbGx5IGZvcm0gbWVhbmRlcnMgZHVyaW5nIHRoZWlyIG1hdHVyZSBzdGFnZSB3aGVuIHRoZXkgZXJvZGUgdGhlIHNvaWwgYW5kIHNlZGltZW50cyAgZHVyaW5nIHRoZWlyIGNvdXJzZSBvZiBmbG93IGFuZCBjcmVhdGUgZGVwb3NpdHMgdGhhdCBsZWFkIHRvIHRoZWlyIG1lYW5kZXJpbmcuIFdoZXJlYXMsIEpoZWx1bSBSaXZlciAgZmxvd2luZyB0aHJvdWdoIHRoZSBLYXNobWlyIHZhbGxleSwgZm9ybXMgbWVhbmRlcnMgaW4gaXRzIHlvdXRoIHN0YWdlIGR1ZSB0byB0aGUgcHJlc2VuY2Ugb2Ygc2VkaW1lbnRzLCAgc2lsdCwgcm9ja3MgYW5kIG1vcmUgdGhhdCBvcmlnaW5hdGVkIGZyb20gbWlsbGlvbnMgb2YgeWVhcnMgYmFjayBkdWUgdG8gdGhlIHRlY3RvbmljIHVwbGlmdG1lbnQgb2YgdGhlICBtb3VudGFpbnMgYW5kIG90aGVyIGVuZG9nZW5pYyBmb3JjZXMuICBTb3VyY2U6IE5DRVJULCBDSEFQIDIgZ2VvZ3JhcGh5IENMQVNTIDExICBKaGVsdW0gUml2ZXIgfCBUcmlidXRhcnksIENpdGllcywgSGlzdG9yeSwgRGFtLCAmIEZhY3RzIHwgQnJpdGFubmljYSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Jhelum ",
        "option2" : "Ravi  ",
        "option3" : "Indus ",
        "option4" : "Chenab  "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following are the features of the Singi Khamban river?  1.  It originates in the Rakas Tal near Manasarovar Lake.  2.  It passes through the Shipki La on the Himalayan ranges.  3.  It forms an arcuate shaped delta.  4.  It flows in India only through the Union Territories of Jammu and Kashmir and Ladakh.  Select the correct answer from the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZHVzIHJpdmVyIGlzIGtub3duIGFzICdTaW5naSBLaGFtYmFuIChvciBMaW9uJ3MgbW91dGgpIGluIFRpYmV0LiBUaGUgSW5kdXMgaXMgYWxzbyBrbm93biBhcyB0aGUgU2luZGh1LiBJdCAgaXMgb25lIG9mIHRoZSBsYXJnZXN0IHJpdmVyIGJhc2lucyBvZiB0aGUgd29ybGQgY292ZXJpbmcgYW4gYXJlYSAzMjEsIDI4OSBzcS4ga20gaW4gSW5kaWEuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBJbmR1cyBSaXZlciBvcmlnaW5hdGVzIGZyb20gYSBnbGFjaWVyIG5lYXIgQm9raGFyIENodSBpbiB0aGUgS2FpbGFzaCBNb3VudGFpbiAgcmFuZ2UgaW4gVGliZXQuICAgVGhlIFNhdGx1aiByaXZlciBvcmlnaW5hdGVzIGluIHRoZSAnUmFrc2FzIHRhbCcgbmVhciBNYW5hc2Fyb3ZhciBMYWtlLiBJbiBUaWJldCwgaXQgaXMga25vd24gYXMgTGFuZ2NoZW4gIEtoYW1iYWIuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIFNhdGx1aiByaXZlciBwYXNzZXMgdGhyb3VnaCB0aGUgU2hpcGtpIExhIG9uIHRoZSBIaW1hbGF5YW4gcmFuZ2VzIGJlZm9yZSAgZW50ZXJpbmcgdGhlIFB1bmphYiBwbGFpbnMuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBJbmR1cyBSaXZlciBmb3JtcyBhbiBhcmN1YXRlIGRlbHRhLiBUaGlzIGlzIHBvc3NpYmxlIGR1ZSB0byB0aGUgaGlnaCBzZWRpbWVudCBsb2FkICBhY3F1aXJlZCBiZWNhdXNlIG9mIGhlYXZ5IGVyb3Npb25hbCBhY3Rpdml0eS4gVGhlIHNlZGltZW50IGlzIGFsc28gYnJvdWdodCBpbiBsYXJnZSBxdWFudGl0eSBieSBhbGwgdGhlICB0cmlidXRhcmllcy4gICBBcmN1YXRlIGRlbHRhcyBhcmUgbGlrZSBhbiBhcmMgb2YgYSBjaXJjbGUgb3IgYSBib3cgYW5kIGFyZSBvZiBsb2JhdGUgZm9ybSBpbiBhcHBlYXJhbmNlIHdoZXJlaW4gbWlkZGxlICBwb3J0aW9uIGhhcyBtYXhpbXVtIGV4dGVudCB0b3dhcmRzIHRoZSBzZWEgd2hlcmVhcyB0aGV5IG5hcnJvdyBkb3duIHRvd2FyZHMgdGhlaXIgbWFyZ2lucy4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IFRoZSBJbmR1cyBSaXZlciBmbG93cyBpbiBJbmRpYSBvbmx5IHRocm91Z2ggdGhlIFVuaW9uIFRlcnJpdG9yaWVzIG9mIEphbW11IGFuZCAgS2FzaG1pciBhbmQgTGFkYWtoLiBBZnRlciBmbG93aW5nIGluIHRoZSBub3J0aHdlc3QgZGlyZWN0aW9uIGJldHdlZW4gdGhlIExhZGFraCBhbmQgWmFza2FyIHJhbmdlcywgaXQgIHBhc3NlcyB0aHJvdWdoIExhZGFraCBhbmQgQmFsdGlzdGFuLiBJdCBjdXRzIGFjcm9zcyB0aGUgTGFkYWtoIHJhbmdlLCBmb3JtaW5nIGEgc3BlY3RhY3VsYXIgZ29yZ2UgbmVhciAgR2lsZ2l0IGluIEphbW11IGFuZCBLYXNobWlyLiBJdCBlbnRlcnMgaW50byBQYWtpc3RhbiBuZWFyIENoaWxhcyBpbiB0aGUgRGFyZGlzdGFuIHJlZ2lvbi4gICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgIEtub3dsZWRnZSBCYXNlOiAgIFRoZSBJbmR1cyBSaXZlciByZWNlaXZlcyBhIG51bWJlciBvZiBIaW1hbGF5YW4gdHJpYnV0YXJpZXMgc3VjaCBhcyB0aGUgU2h5b2ssIHRoZSBHaWxnaXQsIHRoZSBaYXNrYXIsIHRoZSAgSHVuemEsIHRoZSBOdWJyYSwgdGhlIFNoaWdhciwgdGhlIEdhc3RpbmcgYW5kIHRoZSBEcmFzLiBUaGUgb3RoZXIgaW1wb3J0YW50IHRyaWJ1dGFyaWVzIGpvaW5pbmcgdGhlIHJpZ2h0ICBiYW5rIG9mIHRoZSBJbmR1cyAob3JpZ2luYXRlIGluIHRoZSBTdWxhaW1hbiByYW5nZXMpIGFyZSB0aGUgS2h1cnJhbSwgdGhlIFRvY2hpLCB0aGUgR29tYWwsIHRoZSBWaWJvYSBhbmQgIHRoZSBTYW5nYXIuICAgVGhlIEluZHVzIFJpdmVyIGZsb3dzIGluIFBha2lzdGFuIGFuZCByZWNlaXZlcyAnUGFuam5hZCcgKGZpdmUgcml2ZXJzIG9mIFB1bmphYiwgbmFtZWx5IHRoZSBTYXRsdWosIHRoZSBCZWFzLCAgdGhlIFJhdmksIHRoZSBDaGVuYWIgYW5kIHRoZSBKaGVsdW0uKSBhIGxpdHRsZSBhYm92ZSBNaXRoYW5rb3QuIEl0IGZpbmFsbHkgZGlzY2hhcmdlcyBpbnRvIHRoZSBBcmFiaWFuIFNlYSwgIGVhc3Qgb2YgS2FyYWNoaS4gIFNvdXJjZTogTkNFUlQgQ2xhc3MgMTEgSW5kaWE6IFBoeXNpY2FsIEdlb2dyYXBoeSAtIENoYXB0ZXIgMyBEcmFpbmFnZSBTeXN0ZW0gUCAyNCwgMjUuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "3 and 4 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements: 1. Barak River flows in all the Northeastern states except Arunachal Pradesh and Mizoram. 2. The Molassis basin in Mizoram is made up of soft unconsolidated deposits of terrestrial or marine origin. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgQmFyYWsgUml2ZXIgZmxvd3MgOTAwIGtpbG9tZXRlcnMgdGhyb3VnaCB0aGUgc3RhdGVzIG9mIE1hbmlwdXIsIE5hZ2FsYW5kLCAgTWl6b3JhbSBhbmQgQXNzYW0gaW4gSW5kaWEgYW5kIGl0cyBzdWJiYXNpbiBjb3ZlcnMgQnVybWEsIEluZGlhIGFuZCBCYW5nbGFkZXNoLiBCdXQgaXRzIHN1Yi1iYXNpbiBsaWVzICBpbiB0aGUgYWxsLW5vcnRoZWFzdGVybiBTdGF0ZXMgZXhjZXB0IEFydW5hY2hhbCBQcmFkZXNoLiAgRnVydGhlciBpdCBlbnRlcnMgQmFuZ2xhZGVzaCB3aGVyZSBpdCBpcyBrbm93biBieSB0aGUgbmFtZSBvZiB0aGUgU3VybWEgYW5kIHRoZSBLdXNoaXlhcmEgIGFuZCBsYXRlciBjYWxsZWQgdGhlIE1lZ2huYSBiZWZvcmUgcmVjZWl2aW5nIHRoZSBjb21iaW5lZCBmbG93IG9mIHRoZSBHYW5nYSBhbmQgdGhlICBCcmFobWFwdXRyYS4gSXQgZmxvd3MgaW50byB0aGUgQmF5IG9mIEJlbmdhbCB2aWEgQmFuZ2xhZGVzaC4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSAnTW9sYXNzaXMgYmFzaW4nIGluIE1pem9yYW0gaXMgbWFkZSB1cCBvZiBzb2Z0IHVuY29uc29saWRhdGVkIGRlcG9zaXRzIG9mICB0ZXJyZXN0cmlhbCBvciBtYXJpbmUgb3JpZ2luLiBNaXpvcmFtIGhhcyBhIGh1Z2UgbnVtYmVyIG9mIG1vdW50YWlucyBhbmQgdGhlIGZvcm1hdGlvbiBvZiBtb3N0IG9mIHRoZSAgbW91bnRhaW5zIGlzIGFjY29tcGFuaWVkIGJ5IGZvcm1hdGlvbiBvZiB2YWxsZXkgdHlwZSBkZXByZXNzaW9uIHdoaWNoIHJ1bnMgcGFyYWxsZWwgdG8gbW91bnRhaW5zLiBUaGVzZSAgZGVwcmVzc2lvbnMgZ2V0IGFjY3VtdWxhdGVkIHdpdGggdW5jb25zb2xpZGF0ZWQgZGVwb3NpdHMga25vd24gYXMgbW9sYXNzZXMgYmFzaW4uIEFsc28ga25vd24gYXMgICdMQU5EIE9GIFJPTExJTkcgTU9VTlRBSU5TJy4gIFNvdXJjZTogTkNFUlQtQ2xhc3MtMTEtR2VvZ3JhcGh5LVBhcnQtMi5wZGYgICAgICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to the various features found on the Indian Plains, consider the following statements: 1.  The Terai is a marshy area where re-emergent river streams flow without well-defined channels  2.  Old alluvial deposits at the end of the plains are known as Bhabar. Which of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEluZGlhbiBQbGFpbnMgYXJlIG9uZSBvZiB0aGUgcGh5c2lvZ3JhcGhpYyBkaXZpc2lvbnMgb2YgSW5kaWEuIFRoZXkgYXJlIGZvdW5kIGluIE5vcnRoIEluZGlhLCBzb3V0aCBvZiAgdGhlIEhpbWFsYXlhcy4gVGhlc2UgcGxhaW5zIGFyZSBub3QgdW5pZm9ybSBhbmQgaGF2ZSBkaWZmZXJlbnQgZGl2aXNpb25zLCBzaG93aW5nIGRpZmZlcmVudCBmZWF0dXJlcyBhbmQgIGNoYXJhY3RlcmlzdGljcy4gVGhlIEluZGlhbiBQbGFpbnMgYXJlIGZ1cnRoZXIgZGl2aWRlZCBpbnRvIHJlZ2lvbnMgc3VjaCBhcyAtIEJoYWJhciwgVGVyYWksIEJoYW5nYXIsIEtoYWRhciwgIGV0Yy4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBUZXJhaSBpcyBhIGJyb2FkIHpvbmUgKDEwLTIwIGttIHdpZGUpIHdoZXJlIHJpdmVycyB0aGF0IGhhZCBiZWVuIGFic29yYmVkICB1bmRlcmdyb3VuZCBpbiB0aGUgcHJldmlvdXMgc2VjdGlvbiwgcmUtZW1lcmdlLiBIb3dldmVyLCB0aGVzZSByZS1lbWVyZ2Ugd2l0aG91dCBhbnkgcHJvcGVyICBjaGFubmVscywgc28gdGhlIGVudGlyZSBhcmVhIGJlY29tZXMgdmVyeSBzd2FtcHkgYW5kIG1hcnNoeS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQmhhYmFyIGlzIGEgbmFycm93IHpvbmUgd2hpY2ggZm9ybXMgdGhlIGZpcnN0IHBoeXNpY2FsIGRpdmlzaW9uIG9mIHRoZSBOb3J0aGVybiAgSW5kaWFuIFBsYWlucy4gSXQgaXMgYW4gYXJlYSBjb21wb3NlZCBvZiBjb2Fyc2VseSBkZW51ZGVkIHJvY2sgYm91bGRlcnMgYW5kIG90aGVyIGhlYXZ5IGRlcG9zaXRzLCBhdCB0aGUgIGJhc2Ugb2YgdGhlIFNoaXdhbGlrIHJhbmdlIG9mIHRoZSBIaW1hbGF5YXMgd2hlcmUgdGhlIHNsb3BlIGJyZWFrcy4gICBCaGFuZ2FyIChub3QgQmhhYmFyKSBpcyB0aGUgZGl2aXNpb24gb2YgdGhlIHBsYWlucywgYXQgdGhlIGVuZCwgYWZ0ZXIgQmhhYmFyICYgVGVyYWksIHdoaWNoIGlzIGNvbXBvc2VkIG9mICB0aGUgZmluZSBvbGQgYWxsdXZpdW0gZGVwb3NpdGVkIGJ5IHRoZSByaXZlcnMgaW4gdGhlIGxvd2VyIGNvdXJzZS4gIEtub3dsZWRnZSBCYXNlOiAgIE90aGVyIGZlYXR1cmVzIG9mIEJoYWJhcjogIDEpIEFsc28ga25vd24gYXMgYWxsdXZpYWwgZmFucy8gY29uZXMuICAyKSBSb3VnaGx5IHRyaWFuZ3VsYXIgaW4gc2hhcGUuICAzKSBMb25nIGFuZCBuYXJyb3cgem9uZSBhdCBmb290aGlsbHMgKDgtMTAga20gd2lkZSkgIDQpIFBlYmJsZSBzdHVkZGVkLCBwb3JvdXMgYmVkLiAgNSkgUml2ZXJzIGFuZCBzdHJlYW1zIGNvbWluZyBkb3duIGZyb20gdGhlIEhpbWFsYXlhcyBnZXQgYWJzb3JiZWQgdW5kZXJncm91bmQgYW5kIGRpc2FwcGVhciBkdWUgdG8gIHRoZSBoaWdoIGxldmVsIG9mIHBvcm9zaXR5IG9mIHRoaXMgcmVnaW9uLiAgNikgVW5zdWl0YWJsZSBmb3IgYWdyaWN1bHR1cmUuICBPdGhlciBmZWF0dXJlcyBvZiBUZXJhaTogIDEpIFRoaWNrIHZlZ2V0YXRpb24gc3VjaCBhcyBiYW1ib29zLCB0YWxsIHNhdmFubmEgZ3Jhc3NlcyBhbmQgc2FsIHRyZWVzLiAgMikgSW4gTm9ydGggSW5kaWEsIGl0IGV4dGVuZHMgZnJvbSBVdHRhcmFraGFuZCwgdGhyb3VnaCBub3J0aGVybiBwYXJ0cyBvZiBVdHRhciBQcmFkZXNoICYgQmloYXIgKGFkam9pbmluZyAgTmVwYWwpLCBpbnRvIFdlc3QgQmVuZ2FsLiBXZXN0IEJlbmdhbCBvbndhcmRzLCB0aGlzIGZvcm1hdGlvbiBtZXJnZXMgd2l0aCBhbm90aGVyIGZlYXR1cmUgY2FsbGVkIHRoZSAgRHVhcnMgKFRlcmFpIGxpa2UgbGFuZHNjYXBlIGZvdW5kIGluIE5vcnRoIEVhc3QgSW5kaWEpICAzKSBJdCBjb25zaXN0cyBvZiBjb21wYXJhdGl2ZWx5IGZpbmVyIGFsbHV2aXVtIGNvbXBhcmVkIHRvIHRoZSBwcmV2aW91cyBkaXZpc2lvbiBvZiB0aGUgcGxhaW5zLiAgNCkgSXQgaXMgc3VpdGFibGUgZm9yIGFncmljdWx0dXJlLiAgU291cmNlOiBOQ0VSVCBDbGFzcyBYSSwgSW5kaWEgLSBQaHlzaWNhbCBHZW9ncmFwaHksIENoIC0gMiwgUGctMTUgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 13,
      "question" : "Arrange the following plateaus of Peninsular India in East to West direction: 1. Malwa Plateau 2. Hazaribagh Plateau 3. Marwar Plateau 4. Karbi Anglong 5. Baghelkhand Plateau Select the correct option using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIFBlbmluc3VsYXIgUGxhdGVhdSBSZWdpb24gaXMgb25lIG9mIHRoZSBwaHlzaW9ncmFwaGljIGRpdmlzaW9ucyBvZiBJbmRpYS4gSXQgaXMgYW4gb2xkIHN0YWJsZSBtYXNzIG9mIHJvY2tzICB0aGF0IGZvcm1zIHRoZSBjb3JlIG9mIHRoZSBJbmRpYW4gdGVjdG9uaWMgc3VicGxhdGUuIEl0IGNvbnNpc3RzIG9mIG1hbnkgb2xkIGRlbnVkZWQgcGxhdGVhdXMgdGhhdCB3ZXJlICBvbmNlIG1vdW50YWlucy4gVGhleSBhcmUgcmljaCBpbiBtaW5lcmFscy4gVGhleSBhcmUgYm91bmQgYnkgcmFuZ2VzIGxpa2UgdGhlIEFyYXZhbGksIERlbGhpIFJpZGdlLCBWaW5kaHlhcywgIE1haWthbCBpbiB0aGUgbm9ydGgsIHRoZSBHaXIgSGlsbHMgaW4gdGhlIHdlc3QsIHRoZSBSYWptYWhhbCBIaWxscyBpbiB0aGUgRWFzdCBhbmQgdGhlIENhcmRhbW9tIEhpbGxzIGluIHRoZSAgU291dGgsIHRoZXkgYXJlIGEgcm91Z2hseSB0cmlhbmd1bGFyIHNoYXBlZCByZWdpb24gbWFkZSBvZiBtYW55IHNtYWxsZXIgcGxhdGVhdXMuICBPcHRpb24gMTogVGhlIE1hbHdhIFBsYXRlYXUgbGllcyBhdG9wIHRoZSBWaW5kaHlhIHJhbmdlIGluIFNvdXRoIGFuZCBpcyBib3VuZGVkIGJ5IHRoZSBBcmF2YWxpIHJhbmdlIGluICB0aGUgd2VzdC4gSXQgbGllcyBpbiB0aGUgcmVnaW9uIHN0cmFkZGxpbmcgc291dGggZWFzdCBwb3J0aW9ucyBvZiBSYWphc3RoYW4gYW5kIHdlc3Rlcm4gcmVnaW9ucyBvZiBNYWRoeWEgIFByYWRlc2guIEl0IGNvbXByaXNlcyB0aGUgbm9ydGh3ZXN0IHBhcnQgb2YgdGhlIERlY2NhbiB0cmFwcyBhbmQgaGFzIGJsYWNrIHNvaWwuICBPcHRpb24gMjogVGhlIEhhemFyaWJhZ2ggUGxhdGVhdSBpcyBvbmUgdGhlIHBsYXRlYXVzIG1ha2luZyB1cCB0aGUgQ2hvdGEgTmFncHVyIFBsYXRlYXUgY29tcGxleCBpbiB0aGUgIEVhc3QuIFJvdWdobHkgc3ByZWFkaW5nIG92ZXIgdGhlIFNvdXRoZXJuIHBhcnQgb2YgQmloYXIsIE5vcnRoZXJuIEpoYXJraGFuZCBhbmQgbWlkZGxlIHdlc3QgcGFydCBvZiAgV2VzdCBCZW5nYWwsIHRoaXMgcGxhdGVhdSBsaWVzIG5vcnRoIG9mIHRoZSByaXZlciBEYW1vZGFyLiBJdCBoYXMgYW4gYXZlcmFnZSBlbGV2YXRpb24gb2YgNjAwIG0gYWJvdmUgbWVhbiAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIHNlYSBsZXZlbC4gVGhpcyBwbGF0ZWF1IGhhcyBpc29sYXRlZCBoaWxsczsgUGFyYXNuYXRoIGluIHRoZSBlYXN0IHJpc2VzIHRvIDEsMzY2IG0uIFRoZSBhcmVhIGlzIG1hZGUgb2YgZ3Jhbml0ZSAgYW5kIGduZWlzcyB3aGlsZSB0aGUgaGlsbHMgaGF2ZSBxdWFydHogcm9ja3MuIEl0IGxvb2tzIGxpa2UgYSBwZW5lcGxhaW4gZHVlIHRvIGxhcmdlIHNjYWxlIGVyb3Npb24uICBPcHRpb24gMzogVGhlIE1hcndhciBQbGF0ZWF1IGlzIHRoZSB3ZXN0ZXJubW9zdCBwbGF0ZWF1IG9mIHRoZSBQZW5pbnN1bGFyIFBsYXRlYXUgcmVnaW9uLiBJdCBpcyBib3VuZGVkICBieSB0aGUgQXJhdmFsaSByYW5nZSBpbiB0aGUgd2VzdCBhbmQgdGhlIE1hbHdhIFBsYXRlYXUgaW4gdGhlIGVhc3QuIEl0IGlzIGRpc3RpbmN0IGZyb20gdGhlIE1hbHdhIFBsYXRlYXUgYXMgIGl0IGlzIG5vdCBhIHBhcnQgb2YgdGhlIERlY2NhbiBUcmFwLiBJdCBvY2N1cGllcyB0aGUgZWFzdGVybiBwb3J0aW9uIG9mIFJhamFzdGhhbi4gVGhlIGF2ZXJhZ2UgZWxldmF0aW9uIG9mICB0aGlzIGFyZWEgaXMgMjUwLTUwMCBtIGFib3ZlIHNlYSBsZXZlbCBhbmQgaXQgc2xvcGVzIGRvd24gZWFzdHdhcmRzLiBJdCBpcyBtYWRlIHVwIG9mIHNhbmRzdG9uZSwgc2hhbGVzICBhbmQgbGltZXN0b25lcyBvZiB0aGUgVmluZGh5YW4gcGVyaW9kLiBUaGUgQmFuYXMgUml2ZXIgb3JpZ2luYXRlcyBpbiB0aGUgQXJhdmFsaSBSYW5nZSBhbmQgZmxvd3MgZm9yICBhYm91dCA0MDAga20gYmVmb3JlIGpvaW5pbmcgdGhlIENoYW1iYWwgUml2ZXIuICBPcHRpb24gNDogS2FyYmkgQW5nbG9uZyBpcyBhIHBhcnQgb2YgdGhlIFNoaWxsb25nLyBNZWdoYWxheWEgUGxhdGVhdSBwcmVzZW50IGluIHRoZSBOb3J0aCBFYXN0LiBJdCBoYXMgIGJlZW4gc2VwYXJhdGVkIGZyb20gdGhlIG1haW4gcGFydCBvZiB0aGUgUGVuaW5zdWxhciBwbGF0ZWF1IHJlZ2lvbiBieSB0aGUgTWFsZGEgZmF1bHQuIEl0IGlzIHByZXNlbnQgb24gdGhlICB3ZXN0ZXJuIGZyaW5nZSBvZiB0aGUgU2hpbGxvbmcgUGxhdGVhdSBhbmQgb2NjdXBpZXMgc29tZSBhcmVhcyBvZiBBc3NhbSBhcyB3ZWxsLiBJdCBpcyBsYXJnZWx5IGZvcm1lZCBieSAgQXJjaGFlYW4gKERoYXJ3YXJpYW4pIHF1YXJ0eml0ZXMsIHNoYWxlcyBhbmQgc2NoaXN0cyB3aXRoIGdyYW5pdGUgaW50cnVzaW9ucyBhbmQgc29tZSBiYXNpYyBzaWx0LiAgT3B0aW9uIDU6IFRoZSBCYWdoZWxraGFuZCBQbGF0ZWF1IGxpZXMgZWFzdCBvZiB0aGUgTWFpa2FsIHJhbmdlIGFuZCBvY2N1cGllcyB0aGUgcmVnaW9uIHN0cmFkZGxpbmcgZWFzdCAgTWFkaHlhIFByYWRlc2ggYW5kIG5vcnRoIHdlc3QgQ2hoYXR0aXNnYXJoLiBJdCBsaWVzIHNsaWdodGx5IHNvdXRoIGFuZCBlYXN0IGNvbXBhcmVkIHRvIHRoZSAgQnVuZGVsa2hhbmQgcmVnaW9uLiBJdCBpcyBtYWRlIG9mIGxpbWVzdG9uZSBhbmQgc2FuZHN0b25lcyBpbiB0aGUgd2VzdCBhbmQgZ3Jhbml0ZSBpbiB0aGUgZWFzdC4gSXQgaXMgIGJvdW5kZWQgYnkgdGhlIHNvbiBSaXZlciBpbiB0aGUgbm9ydGguIEl0IGFjdHMgYXMgYSB3YXRlcnNoZWQgYmV0d2VlbiB0aGUgU29uIFJpdmVyIGluIHRoZSBub3J0aCBhbmQgdGhlICBNYWhhbmFkaSBpbiB0aGUgc291dGguICAgIFNvdXJjZTogaHR0cHM6Ly93d3cueW91cmFydGljbGVsaWJyYXJ5LmNvbS9nZW9ncmFwaHkvcGVuaW5zdWxhci1pbmRpYS05LW1ham9yLXBsYXRlYXVzLW9mLXRoZS0gcGVuaW5zdWxhci1pbmRpYS8xMzc4NCAgICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2-5-4-1-3 ",
        "option2" : "4-5-2-3-1 ",
        "option3" : "5-2-1-4-3 ",
        "option4" : "4-2-5-1-3           "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following events are associated with the northward shift of Inter Tropical Convergence Zone (ITCZ) over India? 1. Low pressure belt created over North India 2. Withdrawal of easterly jet stream 3. Onset of southwest monsoon Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEludGVyIFRyb3BpY2FsIENvbnZlcmdlbmNlIFpvbmUgKElUQ1opIGlzIGEgbG93LXByZXNzdXJlIHpvbmUgbG9jYXRlZCBhdCB0aGUgZXF1YXRvciB3aGVyZSB0cmFkZSAgd2luZHMgY29udmVyZ2UsIGFuZCBzbywgaXQgaXMgYSB6b25lIHdoZXJlIGFpciB0ZW5kcyB0byBhc2NlbmQuIEluIEp1bHksIHRoZSBJVENaIGlzIGxvY2F0ZWQgYXJvdW5kIDIwwrBOLSAyNcKwTiBsYXRpdHVkZXMgKG92ZXIgdGhlIEdhbmdldGljIHBsYWluKSwgc29tZXRpbWVzIGNhbGxlZCB0aGUgbW9uc29vbiB0cm91Z2guIFRoaXMgbW9uc29vbiB0cm91Z2ggIGVuY291cmFnZXMgdGhlIGRldmVsb3BtZW50IG9mIHRoZXJtYWwgbG93IG92ZXIgbm9ydGggYW5kIG5vcnRod2VzdCBJbmRpYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBcyB0aGUgc3VtbWVyIHNldHMgaW4gYW5kIHRoZSBzdW4gc2hpZnRzIG5vcnRod2FyZHMsIHRoZSB3aW5kIGNpcmN1bGF0aW9uIG92ZXIgdGhlICBzdWJjb250aW5lbnQgdW5kZXJnb2VzIGEgY29tcGxldGUgcmV2ZXJzYWwgYXQgYm90aCwgdGhlIGxvd2VyIGFzIHdlbGwgYXMgdGhlIHVwcGVyIGxldmVscy4gQnkgdGhlIG1pZGRsZSBvZiAgSnVseSwgdGhlIGxvdy1wcmVzc3VyZSBiZWx0IG5lYXJlciB0aGUgc3VyZmFjZSBJVENaIHNoaWZ0cyBub3J0aHdhcmRzLCByb3VnaGx5IHBhcmFsbGVsIHRvIHRoZSBIaW1hbGF5YXMgIGJldHdlZW4gMjDCsCBOIGFuZCAyNcKwIE4uIFRoaXMgY3JlYXRlcyBsb3cgcHJlc3N1cmUgYmVsdCBvdmVyIE5vcnRoIEluZGlhLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBCeSB0aGUgdGltZSBJVENaIHNoaWZ0cyBub3J0aHdhcmQsIHRoZSB3ZXN0ZXJseSBqZXQgc3RyZWFtIHdpdGhkcmF3cyAoYW5kIG5vdCAgZWFzdGVybHkgamV0IHN0cmVhbSkgZnJvbSB0aGUgSW5kaWFuIHJlZ2lvbi4gSW4gZmFjdCwgdGhlcmUgaXMgYSBjYXVzZS1hbmQtZWZmZWN0IHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSAgdHdvLiBUaGUgZWFzdGVybHkgamV0IHN0cmVhbSBzZXRzIGluIGFsb25nIDE1wrBOIGxhdGl0dWRlIG9ubHkgYWZ0ZXIgdGhlIHdlc3Rlcm4gamV0IHN0cmVhbSBoYXMgd2l0aGRyYXduICBpdHNlbGYgZnJvbSB0aGUgcmVnaW9uLiBUaGlzIGVhc3Rlcmx5IGpldCBzdHJlYW0gaXMgaGVsZCByZXNwb25zaWJsZSBmb3IgdGhlIGJ1cnN0IG9mIHRoZSBtb25zb29uIGluIEluZGlhLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIElUQ1ogYmVpbmcgYSB6b25lIG9mIGxvdyBwcmVzc3VyZSwgYXR0cmFjdHMgaW5mbG93IG9mIHdpbmRzIGZyb20gZGlmZmVyZW50ICBkaXJlY3Rpb25zLiBUaGUgbWFyaXRpbWUgdHJvcGljYWwgYWlyIG1hc3MgKE10KSBmcm9tIHRoZSBzb3V0aGVybiBoZW1pc3BoZXJlLCBhZnRlciBjcm9zc2luZyB0aGUgZXF1YXRvciwgIHJ1c2hlcyB0byB0aGUgbG93LXByZXNzdXJlIGFyZWEgaW4gdGhlIGdlbmVyYWwgc291dGgtd2VzdGVybHkgZGlyZWN0aW9uLiBJdCBpcyB0aGlzIG1vaXN0IGFpciBjdXJyZW50IHdoaWNoICBpcyBwb3B1bGFybHkga25vd24gYXMgdGhlIHNvdXRod2VzdCBtb25zb29uLiAgU291cmNlOiBHZW9ncmFwaHksIEluZGlhOiBQaHlzaWNhbCBFbnZpcm9ubWVudCwgTkNFUlQgWEksIENoYXB0ZXItNCwgUGcuIDM2LTM4ICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 15,
      "question" : "Arrange the following regions in increasing order (from lowest to highest) of annual rainfall: 1. Middle Ganga valley. 2. Western Rajasthan 3. Upper Ganga valley. 4. Western side of Western Ghats Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3BhdGlhbCBWYXJpYXRpb25zIGluIHRoZSBSYWluZmFsbCAgIDEpIEFyZWFzIG9mIEhlYXZ5IFJhaW5mYWxsIChPdmVyIDIwMGNtKTogVGhlIGhpZ2hlc3QgcmFpbmZhbGwgb2NjdXJzIG9uIHRoZSB3ZXN0IGNvYXN0cywgb24gdGhlIHdlc3Rlcm4gIEdoYXRzIGFzIHdlbGwgYXMgdGhlIFN1Yi1IaW1hbGF5YW4gYXJlYXMgaW4gTm9ydGggRWFzdCBhbmQgTWVnaGFsYXlhIEhpbGxzLiBBc3NhbSwgV2VzdCBCZW5nYWwsIFdlc3QgIENvYXN0IGFuZCBTb3V0aGVybiBzbG9wZXMgb2YgZWFzdGVybiBIaW1hbGF5YXMuICAyKSBBcmVhcyBvZiBNb2RlcmF0ZWx5IEhlYXZ5IFJhaW5mYWxsICgxMDAtMjAwIGNtKTogVGhpcyByYWluZmFsbCBvY2N1cnMgaW4gU291dGhlcm4gUGFydHMgb2YgR3VqYXJhdCwgRWFzdCAgVGFtaWwgTmFkdSwgTm9ydGgtZWFzdGVybiBQZW5pbnN1bGFyLCBXZXN0ZXJuIEdoYXRzLCBlYXN0ZXJuIE1haGFyYXNodHJhLCBNYWRoeWEgUHJhZGVzaCwgT2Rpc2hhLCAgdGhlIG1pZGRsZSBHYW5nYSB2YWxsZXkuICAzKSBBcmVhcyBvZiBMZXNzIFJhaW5mYWxsICg1MC0xMDAgY20pOiBVcHBlciBHYW5nYSB2YWxsZXksIGVhc3Rlcm4gUmFqYXN0aGFuLCBQdW5qYWIsIFNvdXRoZXJuIFBsYXRlYXUgb2YgIEthcm5hdGFrYSwgQW5kaHJhIFByYWRlc2ggYW5kIFRhbWlsIE5hZHUuICA0KSBBcmVhcyBvZiBTY2FudHkgUmFpbmZhbGwgKExlc3MgdGhhbiA1MCBjbSk6IE5vcnRoZXJuIHBhcnQgb2YgS2FzaG1pciwgV2VzdGVybiBSYWphc3RoYW4sIFB1bmphYiBhbmQgIERlY2NhbiBQbGF0ZWF1LiAgIFR3byBzaWduaWZpY2FudCBmZWF0dXJlcyBvZiBJbmRpYSdzIHJhaW5mYWxsIGFyZSAgIDEpIGluIHRoZSBub3J0aCBJbmRpYSwgcmFpbmZhbGwgZGVjcmVhc2VzIHdlc3R3YXJkcyBhbmQgICAyKSBpbiBQZW5pbnN1bGFyIEluZGlhLCBleGNlcHQgVGFtaWwgTmFkdSwgaXQgZGVjcmVhc2VzIGVhc3R3YXJkLiAgICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgIFNvdXJjZTogR2VvZ3JhcGh5LCBJbmRpYTogUGh5c2ljYWwgRW52aXJvbm1lbnQsIE5DRVJUIFhJLCBDaGFwdGVyLTQsIFBnLiA1MC01MSAgaHR0cDovL21vc3BpLm5pYy5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL1N0YXRpc3RpY2FsX3llYXJfYm9va19pbmRpYV9jaGFwdGVycy9SYWluZmFsbF8wLnBkZiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2-1-3-4 ",
        "option2" : "2-3-1-4 ",
        "option3" : "3-4-2-1 ",
        "option4" : "4-2-3-1  "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the impact of Indian Ocean Dipole (IOD) on Indian climate, consider the following statements: 1.  A positive IOD year is beneficial for monsoons over India despite the El Nino impact. 2.  A negative IOD obstructs the progression of Indian monsoon leading to severe drought. 3.  Positive IOD results in more cyclones than usual in Bay of Bengal.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBJbmRpYW4gT2NlYW4gRGlwb2xlIChJT0QpIGlzIGFuIGF0bW9zcGhlcmUtb2NlYW4gY291cGxlZCBwaGVub21lbm9uIGluIHRoZSBJbmRpYW4gT2NlYW4sICBjaGFyYWN0ZXJpc2VkIGJ5IGEgZGlmZmVyZW5jZSBpbiBzZWEtc3VyZmFjZSB0ZW1wZXJhdHVyZXMuIElPRCBpcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0ZW1wZXJhdHVyZSAgb2YgZWFzdGVybiAoQmF5IG9mIEJlbmdhbCkgYW5kIHRoZSB3ZXN0ZXJuIEluZGlhbiBPY2VhbiAoQXJhYmlhbiBTZWEpLiBJbmRpYW4gbW9uc29vbiBkZXBlbmRzIHVwb24gbm90ICBvbmx5IEVsIE5pbm8gTGEgTmluYSBidXQgYWxzbyBJT0QgYW5kIG90aGVyIHN1Y2ggb2NlYW4gcGhlbm9tZW5hLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gRHVyaW5nIHRoZSBQb3NpdGl2ZSBJT0QsIHRoZSBlYXN0ZXJuIGVxdWF0b3JpYWwgSW5kaWFuIE9jZWFuIG9mZiBTdW1hdHJhIGluICBJbmRvbmVzaWEgYmVjb21lcyBjb2xkZXIgdGhhbiBub3JtYWwgd2hpbGUgdGhlIHdlc3Rlcm4gdHJvcGljYWwgcGFydCBvZiB0aGUgSW5kaWFuIE9jZWFuIG5lYXIgdGhlICBBZnJpY2FuIGNvYXN0IGJlY29tZXMgdW51c3VhbGx5IHdhcm0uIFN0dWRpZXMgaGF2ZSBzaG93biB0aGF0IGEgcG9zaXRpdmUgSU9EIHllYXIgc2VlcyBtb3JlIHRoYW4gIG5vcm1hbCByYWluZmFsbCBvdmVyIGNlbnRyYWwgSW5kaWEuIEl0IHdhcyBkZW1vbnN0cmF0ZWQgdGhhdCBhIHBvc2l0aXZlIElPRCBpbmRleCBvZnRlbiBuZWdhdGVkIHRoZSBlZmZlY3QgIG9mIEVsIE5pbm8gU291dGhlcm4gT3NjaWxsYXRpb24gKEVOU08pLCByZXN1bHRpbmcgaW4gaW5jcmVhc2VkIE1vbnNvb24gcmFpbnMgaW4gc2V2ZXJhbCBFTlNPIHllYXJzLiBBbiAgSU9EIGNhbiBlaXRoZXIgYWdncmF2YXRlIG9yIHdlYWtlbiB0aGUgaW1wYWN0IG9mIEVsIE5pbm8gb24gSW5kaWFuIG1vbnNvb24uIElmIHRoZXJlIGlzIGEgcG9zaXRpdmUgSU9ELCBpdCAgY2FuIGJyaW5nIGdvb2QgcmFpbnMgdG8gSW5kaWEgZGVzcGl0ZSBhbiBFbCBOaW5vIHllYXIuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBEdXJpbmcgdGhlIG5lZ2F0aXZlIElPRCwgdGhlIGVhc3Rlcm4gZXF1YXRvcmlhbCBJbmRpYW4gT2NlYW4gb2ZmIFN1bWF0cmEgaW4gIEluZG9uZXNpYSBiZWNvbWVzIGFibm9ybWFsbHkgd2FybSB3aGlsZSB0aGUgd2VzdGVybiB0cm9waWNhbCBwYXJ0IG9mIHRoZSBvY2VhbiBuZWFyIHRoZSBBZnJpY2FuIGNvYXN0ICBiZWNvbWVzIHJlbGF0aXZlbHkgY29sZGVyLiBUaGlzIGVmZmVjdCBvYnN0cnVjdHMgdGhlIHByb2dyZXNzaW9uIG9mIG1vbnNvb24gb3ZlciBJbmRpYS4gQSBuZWdhdGl2ZSBJT0QgIGNvbXBsZW1lbnRzIEVsIE5pTm8gbGVhZGluZyB0byBzZXZlcmUgZHJvdWdodC4gIFN0YXRlbWVudHMgMyBpcyBpbmNvcnJlY3QuIFBvc2l0aXZlIElPRCByZXN1bHRzIGluIG1vcmUgY3ljbG9uZXMgdGhhbiB1c3VhbCBpbiBBcmFiaWFuIFNlYS4gTmVnYXRpdmUgSU9EICByZXN1bHRzIGluIHN0cm9uZ2VyIHRoYW4gdXN1YWwgY3ljbG9nZW5lc2lzIChGb3JtYXRpb24gb2YgVHJvcGljYWwgQ3ljbG9uZXMpIGluIHRoZSBCYXkgb2YgQmVuZ2FsLiAgQ3ljbG9nZW5lc2lzIGluIEFyYWJpYW4gU2VhIGlzIHN1cHByZXNzZWQgZHVyaW5nIHRoaXMgdGltZS4gIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9hbnN3ZXJlZHdoYXQtaXMtdGhlLWluZGlhbi1vY2Vhbi1kaXBvbGUtd2hhdC1hcmUtaXRzLSBjaGFyYWN0ZXJpc3RpYy1mZWF0dXJlcy1kaXNjdXNzLWl0cy1pbXBhY3Qtb24taW5kaWFuLW1vbnNvb24vICAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "3 only ",
        "option3" : "1 only ",
        "option4" : "2 and 3 only      "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements with respect to the Boreal Summer Intra Seasonal Oscillation: 1.  It is the movement of heat from the Pacific Ocean to the Indian Ocean during the monsoon. 2.  It represents active and break period in the monsoon. 3.  It induces high wave activity in the Arabian Sea. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBCb3JlYWwgU3VtbWVyIEludHJhIFNlYXNvbmFsIE9zY2lsbGF0aW9uIChCU0lTTykgaXMgdGhlIG1vdmVtZW50IG9mIGNvbnZlY3Rpb24gIChoZWF0KSBmcm9tIHRoZSBJbmRpYW4gT2NlYW4gdG8gdGhlIHdlc3Rlcm4gUGFjaWZpYyBPY2VhbiAoYW5kIG5vdCB2aWNlLXZlcnNhKSByb3VnaGx5IGV2ZXJ5IDEwLTUwIGRheXMgIGR1cmluZyB0aGUgbW9uc29vbiAoSnVuZS1TZXB0ZW1iZXIpLiBUaGUgQlNJU08gb2YgdGhlIEFzaWFuIHN1bW1lciBtb25zb29uIChBU00pIGlzIG9uZSBvZiB0aGUgbW9zdCAgcHJvbWluZW50IHNvdXJjZXMgb2Ygc2hvcnQtdGVybSBjbGltYXRlIHZhcmlhYmlsaXR5IGluIHRoZSBnbG9iYWwgbW9uc29vbiBzeXN0ZW0uICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBCb3JlYWwgU3VtbWVyIEludHJhIFNlYXNvbmFsIE9zY2lsbGF0aW9uIChCU0lTTykgcmVwcmVzZW50cyB0aGUgbW9uc29vbidzICdhY3RpdmUnICBhbmQgJ2JyZWFrJyBwZXJpb2RzLCBpbiB3aGljaCB3ZWVrcyBvZiBoZWF2eSByYWluZmFsbCBnaXZlIHdheSB0byBicmlsbGlhbnQgc3Vuc2hpbmUgYmVmb3JlIHN0YXJ0aW5nIGFsbCBvdmVyICBhZ2Fpbi4gVGhlIGFjdGl2ZSBwaGFzZSBhbHNvIGVuaGFuY2VzIG1vbnNvb24gd2luZHMgYW5kIGhlbmNlIHRoZSBzdXJmYWNlIHdhdmVzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gU29tZSBwaGFzZXMgb2YgYm9yZWFsIHN1bW1lciBpbnRyYS1zZWFzb25hbCBvc2NpbGxhdGlvbiBvciBCU0lTTyBpbmR1Y2UgaGlnaCAgd2F2ZSBhY3Rpdml0eSBpbiB0aGUgbm9ydGggSW5kaWFuIE9jZWFuIGFuZCB0aGUgQXJhYmlhbiBTZWEuIFdhdmUgZm9yZWNhc3QgYWR2aXNvcmllcyBiYXNlZCBvbiB0aGUgQlNJU08gIHdvdWxkIGJlIG1vcmUgdXNlZnVsIGZvciBlZmZpY2llbnQgY29hc3RhbCBhbmQgbWFyaW5lIG1hbmFnZW1lbnQuICBTb3VyY2U6aHR0cHM6Ly93d3cuZG93bnRvZWFydGgub3JnLmluL25ld3Mvc2NpZW5jZS10ZWNobm9sb2d5L2luZGlhbi1yZXNlYXJjaGVycy1tYXktaW1wcm92ZS0gd2F2ZS1mb3JlY2FzdHMtNzI3MjMgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements with respect to the western cyclonic disturbances: 1.  It originates over the Mediterranean Sea. 2.  It is brought into India by the westerly jet stream. 3.  It causes most of the winter rainfall across North-West India. Which of the statements give above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50cyAxIGFuZCAyIGFyZSBjb3JyZWN0LiBXZXN0ZXJuIGN5Y2xvbmljIGRpc3R1cmJhbmNlcyBvcmlnaW5hdGUgb3ZlciB0aGUgTWVkaXRlcnJhbmVhbiBTZWEuICBUaGV5IGVudGVyIHRoZSBJbmRpYW4gc3ViY29udGluZW50IGZyb20gdGhlIHdlc3QgYW5kIHRoZSBub3J0aHdlc3QgZHVyaW5nIHRoZSB3aW50ZXIgbW9udGhzIGJ5IHRoZSAgd2VzdGVybHkgamV0IHN0cmVhbS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBXZXN0ZXJuIERpc3R1cmJhbmNlcyBhcmUgdGhlIGNhdXNlIG9mIHRoZSBtb3N0IHdpbnRlciBhbmQgcHJlLW1vbnNvb24gc2Vhc29uICByYWluZmFsbCBhY3Jvc3MgTm9ydGgtV2VzdCBJbmRpYS4gQWZ0ZXIgd2ludGVyIHRoZSB3ZXN0ZXJuIGRpc3R1cmJhbmNlcyBoZWxwIGluIHRoZSBhY3RpdmF0aW9uIG9mIG1vbnNvb24gIGluIGNlcnRhaW4gcGFydHMgb2Ygbm9ydGh3ZXN0IEluZGlhLiBUaGUgaW50ZXJhY3Rpb24gb2YgdGhlIG1vbnNvb24gdHJvdWdoIHdpdGggd2VzdGVybiBkaXN0dXJiYW5jZXMgbWF5ICBvY2Nhc2lvbmFsbHkgY2F1c2UgZGVuc2UgY2xvdWRpbmcgYW5kIGhlYXZ5IHByZWNpcGl0YXRpb24uICBTb3VyY2U6IEdlb2dyYXBoeSwgSW5kaWE6IFBoeXNpY2FsIEVudmlyb25tZW50LCBOQ0VSVCBYSSwgQ2hhcHRlci00LCBQZy4gMzUtMzYgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1,2 and 3  "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements: 1.  The Thar Desert witnesses the highest diurnal and annual temperature ranges in the country. 2.  The coastal regions witness the least diurnal and mean annual temperature ranges.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgSW5kaWEgaGFzIGhpZ2ggcmVnaW9uYWwgY2xpbWF0aWMgZGl2ZXJzaXR5IGJlY2F1c2Ugb2YgaXRzIHRvcG9ncmFwaGljYWwgZGl2ZXJzaXR5IC0gbG9jYXRpb24sIGFsdGl0dWRlLCBkaXN0YW5jZSAgZnJvbSBzZWEgYW5kIHJlbGllZi4gRGl1cm5hbCBhbmQgYW5udWFsIHRlbXBlcmF0dXJlIHJhbmdlcyBhcmUgc3Vic3RhbnRpYWwgaW4gdGhpcyBzaXR1YXRpb24uICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRob3VnaCB0aGUgaGlnaGVzdCBkaXVybmFsIHRlbXBlcmF0dXJlIHJhbmdlcyBvY2N1ciBpbiB0aGUgVGhhciBEZXNlcnQsIHRoZSAgaGlnaGVzdCBhbm51YWwgdGVtcGVyYXR1cmUgcmFuZ2VzIGFyZSByZWNvcmRlZCBpbiB0aGUgSGltYWxheWFuIHJlZ2lvbnMuIEluIHRoZSBUaGFyIERlc2VydCwgaWYgdGhlIGRheSAgdGVtcGVyYXR1cmUgaXMgYXJvdW5kIDUwwrBDLCBhdCBuaWdodCwgaXQgbWF5IGRyb3AgZG93biBjb25zaWRlcmFibHkgdXAgdG8gMTXCsC0yMMKwQy4gSGltYWxheWFuIHJlZ2lvbnMgIGV4cGVyaWVuY2UgYnJ1dGFsIHdpbnRlcnMgd2hpbGUgdGhlIHN1bW1lcnMgYXJlIG1vZGVyYXRlLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQm90aCBkaXVybmFsIGFuZCBtZWFuIGFubnVhbCB0ZW1wZXJhdHVyZSByYW5nZXMgYXJlIGxlYXN0IGluIGNvYXN0YWwgcmVnaW9ucy4gSW4gIERlY2VtYmVyLCB0aGUgdGVtcGVyYXR1cmUgbWF5IGRpcCB0byAtIDQwwrBDIGF0IHNvbWUgcGxhY2VzIGluIEomSyB3aGlsZSBpbiBtYW55IGNvYXN0YWwgcmVnaW9ucyBhdmVyYWdlICB0ZW1wZXJhdHVyZSBpcyAyMC0yNcKwQy4gIFNvdXJjZTogR2VvZ3JhcGh5LCBJbmRpYTogUGh5c2ljYWwgRW52aXJvbm1lbnQsIE5DRVJUIFhJLCBDaGFwdGVyLTQsIFBnLiAzMy0zNCwgICBOQ0VSVCBJWCwgQ2hhcHRlci00LCBQZy4gMzMgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2        \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 20,
      "question" : "With reference to various passes in India which of the following statements is/are correct? 1. Nathu La Pass connects Sikkim to China's Tibet Autonomous Region 2. The Bomdi-La pass connects Himachal Pradesh with Tibet. 3. Khardung La is one of the highest motorable pass in the country. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBOYXRodSBMYSBpcyBsb2NhdGVkIGluIHRoZSBzdGF0ZSBvZiBTaWtraW0uIFRoaXMgZmFtb3VzIHBhc3MgaXMgbG9jYXRlZCBpbiB0aGUgSW5kaWEtICBDaGluYSBib3JkZXIgYW5kIHdhcyByZW9wZW5lZCBpbiAyMDA2LiBJdCBmb3JtcyBhIHBhcnQgb2YgYW4gb2Zmc2hvb3Qgb2YgdGhlIGFuY2llbnQgc2lsayByb3V0ZS4gSXQgaXMgb25lIG9mICB0aGUgdHJhZGluZyBib3JkZXJzIHBvc3RzIGJldHdlZW4gSW5kaWEgYW5kIENoaW5hLiBOYXRodSBMYSBQYXNzIGNvbm5lY3RzIFNpa2tpbSB0byBDaGluYSdzIFRpYmV0ICBBdXRvbm9tb3VzIFJlZ2lvbi4gSXQgd2FzIHNlYWxlZCBmb3IgYWxtb3N0IDQgZGVjYWRlcyBhZnRlciB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEgc3VwcHJlc3NlZCBhICBUaWJldGFuIHVwcmlzaW5nIGluIDE5NTkuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuICBUaGUgQm9tZGktTGEgcGFzcyBjb25uZWN0cyBBcnVuYWNoYWwgUHJhZGVzaCB3aXRoIExoYXNhLCB0aGUgY2FwaXRhbCBjaXR5IG9mICBUaWJldC4gSXQgaXMgbG9jYXRlZCBpbiB0aGUgZWFzdCBvZiBCaHV0YW4uICAgU2hpcGtpIExhIGlzIGxvY2F0ZWQgdGhyb3VnaCBTdXRsZWogR29yZ2UuIEl0IGNvbm5lY3RzIEhpbWFjaGFsIFByYWRlc2ggd2l0aCBUaWJldC4gSXQgaXMgSW5kaWEncyB0aGlyZCAgYm9yZGVyIHBvc3QgZm9yIHRyYWRlIHdpdGggQ2hpbmEgYWZ0ZXIgTGlwdSBMZWtoIGFuZCBOYXRodSBMYSBQYXNzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gIEtoYXJkdW5nIExhIGlzIHRoZSBzZWNvbmQtaGlnaGVzdCBtb3RvcmFibGUgcGFzcyBpbiB0aGUgY291bnRyeS4gSXQgY29ubmVjdHMgIExlaCBhbmQgU2lhY2hlbiBnbGFjaWVycy4gVGhpcyBwYXNzIHJlbWFpbnMgY2xvc2VkIGR1cmluZyB0aGUgd2ludGVyLiAgIEtub3dsZWRnZSBCYXNlOiBPdGhlciBpbXBvcnRhbnQgcGFzc2VzIGluIEhpbWFsYXlhczogICAxKSBOaXRpIHBhc3Mgam9pbnMgVXR0YXJha2hhbmQgd2l0aCBUaWJldC4gVGhpcyBhbHNvIHJlbWFpbnMgc25vdy1jb3ZlcmVkIGR1cmluZyB0aGUgd2ludGVyIHNlYXNvbi4gIDIpIERpcGh1IFBhc3MgaXMgYSBtb3VudGFpbiBwYXNzIGFyb3VuZCB0aGUgYXJlYSBvZiB0aGUgZGlzcHV0ZWQgdHJpcG9pbnQgYm9yZGVycyBvZiBJbmRpYSwgQ2hpbmEsIGFuZCAgTXlhbm1hci4gRGlwaHUgUGFzcyBpcyBhbHNvIGEgc3RyYXRlZ2ljIGFwcHJvYWNoIHRvIGVhc3Rlcm4gQXJ1bmFjaGFsIFByYWRlc2guIEl0IGxpZXMgb24gdGhlIE1jTWFob24gIExpbmUuICAzKSBQaXIgcHJhbmphbCBwYXNzIGlzIGEgdHJhZGl0aW9uYWwgcGFzcyBmcm9tIEphbW11IHRvIFNyaW5hZ2FyLiBUaGlzIHBhc3Mgd2FzIGNsb3NlZCBhZnRlciB0aGUgcGFydGl0aW9uLiBJdCAgcHJvdmlkZXMgdGhlIHNob3J0ZXN0IHJvYWR3YXkgYWNjZXNzIHRvIEthc2htaXIgdmFsbGV5IGZyb20gSmFtbXUuICA0KSBMaXB1IGxla2ggcGFzcyBpcyBsb2NhdGVkIGluIFV0dGFyYWtoYW5kLiBJdCBjb25uZWN0cyBVdHRhcmFraGFuZCB3aXRoIFRpYmV0LiBUaGlzIHBhc3MgaXMgYW4gaW1wb3J0YW50ICBib3JkZXIgcG9zdCBmb3IgdHJhZGUgd2l0aCBDaGluYS4gVGhlIHBpbGdyaW1zIGZvciBNYW5hc2Fyb3ZhciB0cmF2ZWwgdGhyb3VnaCB0aGlzIHBhc3MuICA1KSBEaWhhbmcgUGFzcyBpcyBsb2NhdGVkIGluIHRoZSBOb3J0aGVhc3Rlcm4gc3RhdGVzIG9mIEFydW5hY2hhbCBQcmFkZXNoLiBUaGlzIHBhc3MgY29ubmVjdHMgQXJ1bmFjaGFsICBQcmFkZXNoIHdpdGggTXlhbm1hciAoTWFuZGFsYXkpLiBBdCBhbiBlbGV2YXRpb24gb2YgbW9yZSB0aGFuIDQwMDAgbSwgaXQgcHJvdmlkZXMgcGFzc2FnZS4gIFNvdXJjZTogZnVuZGFtZW50YWxzIG9mIFBoeXNpY2FsIGdlb2dyYXBoeS4gTkNFUlQgY2xhc3MgMTF0aC4gIEQuIFIuIEtodWxsYXIgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the Western Ghats, consider the following statements: 1. The elevation increases from north to south 2. Anaimudi is the highest peak of this region 3. They are known as the Sahyadri in Tamil Nadu. Which of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIFdlc3Rlcm4gR2hhdHMgaXMgYSBsb25nIGNoYWluIG9mIGhpbGxzIGZvcm1pbmcgdGhlIHdlc3Rlcm4gYm9yZGVyIG9mIHRoZSBQZW5pbnN1bGFyIFBsYXRlYXUgUmVnaW9uLiAgVGhleSBhcmUgbXVjaCBtb3JlIGNvbnRpbnVvdXMgdGhhbiB0aGVpciBlYXN0ZXJuIGNvdW50ZXJwYXJ0cy4gVGhlaXIgYXZlcmFnZSBlbGV2YXRpb24gaXMgYWJvdXQgMTUwMC4gIFRoZXkgcmVjZWl2ZSBhbm51YWwgcmFpbmZhbGwgb2YgMjAwY20gYW5kIGFib3ZlIGFuZCBoYXZlIHRyb3BpY2FsIGV2ZXJncmVlbiB2ZWdldGF0aW9uLiBUaGV5IGFyZSBhICBiaW9kaXZlcnNpdHkgaG90c3BvdC4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgV2VzdGVybiBHaGF0cyBhcmUgc2hvcnRlciBpbiB0aGUgTm9ydGggYW5kIHRoZWlyIGVsZXZhdGlvbiBnb2VzIG9uIGluY3JlYXNpbmcgIHRvd2FyZHMgdGhlIFNvdXRoLiBTbywgdGhlIGhpZ2hlciBwZWFrcyBhcmUgaW4gU291dGhlcm4gcGFydHMuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBbmFpbXVkaSwgYSBwZWFrIHdpdGggYW4gZWxldmF0aW9uIG9mIDI2OTVtIGluIHRoZSBBbmFpbWFsYWkgSGlsbHMgaW4gVGFtaWwgTmFkdSwgIGlzIHRoZSBoaWdoZXN0IHBvaW50IG9mIHRoZSBXZXN0ZXJuIEdoYXRzLiAgVGhlIFNlY29uZCBoaWdoZXN0IHBlYWsgaXMgRG9kYSBCZXR0YSAoMjYzN20pIGluIHRoZSBOaWxnaXJpcyBIaWxscy4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhleSBhcmUga25vd24gYXMgdGhlIFNhaHlhZHJpIGluIE1haGFyYXNodHJhLiBUaGUgV2VzdGVybiBHaGF0cyBpbiAgS2FybmF0YWthIChhcyB3ZWxsIGFzIFRhbWlsIE5hZHUpIGFyZSBrbm93biBhcyB0aGUgTmlsZ2lyaXMuIEluIEtlcmFsYSwgdGhlIFdlc3Rlcm4gR2hhdHMgYXJlIGtub3duIGFzICB0aGUgQ2FyZGFtb20gSGlsbHMuICBTb3VyY2U6IE5DRVJUIENsYXNzIFhJLCBQaHlzaWNhbCBGZWF0dXJlcyBvZiBJbmRpYW4gR2VvZ3JhcGh5LCBDaC0yLCBQZy0xNi4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements regarding the Northern plains of India: 1.  Generally the width of the Northern plains increases from west to east. 2.  It is formed by the alluvial deposits of Ganga and Brahmaputra River and their tributaries only. 3. It extends up to Rajasthan in the west. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBQdW5qYWIgcGxhaW5zIHN0cmV0Y2ggb3ZlciBhbiBhcmVhIG9mIDY1MGttIGZyb20gTm9ydGgtRWFzdCB0byBTb3V0aC13ZXN0LiAgR2FuZ2EgcGxhaW5zIGhhdmUgYW4gYXZlcmFnZSB3aWR0aCBvZiAzMDAga20gZnJvbSBOb3J0aCB0byBzb3V0aC4gQnJhaG1hcHV0cmEgcGxhaW4gaXMgb25seSA4MCBrbSAgd2lkZS4gVGh1cywgdGhlIHdpZHRoIG9mIHRoZSBub3J0aGVybiBwbGFpbiBkZWNyZWFzZXMgZnJvbSB3ZXN0IHRvIGVhc3QuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE5vcnRoZXJuIFBsYWlucyBhcmUgZm9ybWVkIGJ5IHRoZSBhbGx1dmlhbCBkZXBvc2l0cyBvZiBub3Qgb25seSBHYW5nYSwgIEJyYWhtYXB1dHJhIFJpdmVyIGJ1dCBhbHNvIEluZHVzIFJpdmVyIGFuZCB0aGVpciB0cmlidXRhcmllcy4gVGhlIHBsYWlucyBvZiBSYWphc3RoYW4gYW5kIFB1bmphYi1IYXJ5YW5hICBwbGFpbiBhcmUgZm9ybWVkIGJ5IHRoZSBkZXBvc2l0cyBicm91Z2h0IGRvd24gYnkgdGhlIEluZHVzIFJpdmVyIGFuZCB0aGVpciB0cmlidXRhcmllcy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIE5vcnRoZXJuIFBsYWluIGV4dGVuZHMgdXAgdG8gUmFqYXN0aGFuIGFuZCBpcyBjYWxsZWQgUmFqYXN0aGFuIHBsYWlucy4gTm9ydGhlcm4gIHBsYWlucyBsaWUgdG8gdGhlIHdlc3Qgb2YgQXJhdmFsbGlzIGFuZCBpbmNsdWRlIHRoZSBNYXJ1c3RoYWxpIGFuZCBCYWdhciBvZiBSYWphc3RoYW4uIEl0IGFsc28gY292ZXJzIHRoZSAgUHVuamFiLUhhcnlhbmEgcGxhaW4gZGVwb3NpdGVkIGJ5IFNhdGx1aiwgUmF2aSBhbmQgQmVhcyByaXZlcnMuICAgIFNvdXJjZTogTWFqaWQgSHVzc2FuIFBoeXNpY2FsIGdlb2dyYXBoeSBDaGFwdGVyLTIgcGFnZS0yLjM0LCAyLjM1LCAyLjM2ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "3 only    "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements regarding the islands of India. 1.  Aliabet island is located in the Gulf of Kutch. 2.  Majauli island is the world's largest freshwater riverine island located in Assam. 3.  New Moore Island is located between India and Sri Lanka.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQWxpYWJldCBpc2xhbmQgaXMgbG9jYXRlZCBpbiB0aGUgR3VsZiBvZiBLaGFtYmF0LiBBbGlhYmV0IGlzIEluZGlhJ3Mgb2Zmc2hvcmUgb2lsICB3ZWxsIHNpdGUgaW4gR3VqcmF0LiBBbm90aGVyIGltcG9ydGFudCBpc2xhbmQgbG9jYXRlZCBpbiB0aGUgR3VsZiBvZiBLaGFtYmF0IGlzIEtoYWxpYWJldCBpc2xhbmQuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gTWFqYXVsaSBpc2xhbmQgaXMgd29ybGQncyBsYXJnZXN0IGZyZXNoIHdhdGVyIHJpdmVyaW5lIGlzbGFuZCBsb2NhdGVkIGluIEFzc2FtLiBJdCAgYmVjYW1lIHRoZSBmaXJzdCBpc2xhbmQgdG8gYmUgbWFkZSBhIGRpc3RyaWN0IGluIEluZGlhLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gTmV3IE1vb3JlIElzbGFuZCBpcyBhbHNvIGtub3duIGFzIFB1cmJhc2hhIGlzbGFuZCBhbmQgbG9jYXRlZCBhdCB0aGUgY29uZmx1ZW5jZSAgb2YgSWNoaGFtYXRpIGFuZCBSYWltYW5nYWwgcml2ZXJzIG5lYXIgdGhlIEJheSBvZiBCZW5nYWwgaW4gU3VuZGVyYmFuIGRlbHRhaWMgcmVnaW9uLiAgIFNvdXJjZTogTWFqaWQgSHVzc2FpbiBDaGFwdGVyLTIgUGFnLTIuNDEgICBleHBlcnQtYmxhbWVzLXdhcm1pbmcvYXJ0aWNsZXNob3cvNTcyMDY4NS5jbXMgICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 only ",
        "option3" : "1 and 3 only ",
        "option4" : "2 and 3 only  "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to the Indian Desert, consider the following statements: 1.  This landscape is characterised by the Barchan type of sand dunes. 2.  Mushroom Rocks are an erosional feature found in this region. 3.  This region has special lakes called Corrie Lakes. How many of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEdyZWF0IEluZGlhbiBEZXNlcnQgaXMgb25lIG9mIHRoZSBwaHlzaW9ncmFwaGljIGRpdmlzaW9ucyBvZiBJbmRpYS4gSXQgbGllcyBpbiB0aGUgbm9ydGh3ZXN0ZXJuIHJlZ2lvbiBvZiAgSW5kaWEsIGNvdmVyaW5nIG1vc3Qgb2YgdGhlIHN0YXRlIG9mIFJhamFzdGhhbi4gSXQgaGFzIGEgZHJ5IGFuZCBhcmlkIGNsaW1hdGUgd2l0aCByYWluZmFsbCBvZiBsZXNzIHRoYW4gMTVjbSBhICB5ZWFyLiBJdCBoYXMgdGhvcm55IHNjcnViIHZlZ2V0YXRpb24gYW5kIG1hbnkgZ2VvZ3JhcGhpY2FsIGZlYXR1cmVzIGNoYXJhY3RlcmlzdGljIG9mIHRoZSBIb3QgRGVzZXJ0ICByZWdpb25zLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhpcyBsYW5kc2NhcGUgaXMgZG9taW5hdGVkIGJ5IGEgdHlwZSBvZiBzYW5kIGR1bmUga25vd24gYXMgQmFyY2hhbi4gVGhlc2UgYXJlICBjcmVzY2VudCBzaGFwZWQgZHVuZXMgb2Ygc2FuZC4gVGhleSBvY2N1ciBpbiBhIHRyYW5zdmVyc2UgZGlyZWN0aW9uIHRvIHRoZSB3aW5kLCBzbyB0aGV5IGhhdmUgYSBicm9hZCAgbWlkZGxlIGFuZCB0aGlubmVkIGhvcm5zIGF0IHRoZSBlbmRzLiBUaGUgd2luZHdhcmQgc2lkZSBpcyBjb252ZXggYW5kIGdlbnRseSBzbG9waW5nLCB3aGlsZSB0aGUgbGVld2FyZCAgc2lkZSBpcyBjb25jYXZlIGFuZCBzdGVlcC4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IE11c2hyb29tIFJvY2tzIGFyZSBhIGZlYXR1cmUgb2YgZXJvc2lvbiBmb3VuZCBpbiBkZXNlcnQgYXJlYXMuIFRoZXkgYXJlIGZvcm1lZCAgZHVlIHRvIHdpbmQgZXJvc2lvbiBvZiByb2NrcyBpbiB0aGVzZSBob3QsIGFyaWQgY2xpbWF0ZXMuIFRoZSBhY3Rpb24gb2YgdGhlIHdpbmQgYWdhaW5zdCBhbnkgcHJvamVjdGluZyByb2NrICBwaWVjZSB3ZWFycyBiYWNrIHRoZSBzb2Z0ZXIgbGF5ZXJzLiBUaGVzZSByb2NrIHBpbGxhcnMgYXJlIGZ1cnRoZXIgZXJvZGVkIGV4dHJhIGF0IHRoZWlyIGJhc2Ugd2hlcmUgdGhlICBmcmljdGlvbiBpcyB0aGUgbW9zdCwgbGVhdmluZyBhIGJyb2FkIHRvcCBhbmQgYSBuYXJyb3cgYmFzZSwgbXVjaCBsaWtlIGEgbXVzaHJvb20sIGhlbmNlIHRoZSBuYW1lLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGlzIHJlZ2lvbiBpcyBkb3R0ZWQgYnkgYSBzcGVjaWFsIHR5cGUgb2YgbGFrZSwga25vd24gYXMgUGxheWEuIFBsYXlhcyBhcmUgc2FsdCAgbGFrZXMuIFRoZXNlIGFyZSBiYXNpbnMgb2YgaW5sYW5kIGRyYWluYWdlIGluIHdoaWNoIHRoZSBmZXcgZXBoZW1lcmFsIHJpdmVycyBsaWtlIHRoZSBMdW5pIGRyYWluIHRoZWlyICB3YXRlci4gRHVlIHRvIGhpZ2ggYXJpZGl0eSBhbmQgZXZhcG9yYXRpb24gY291cGxlZCB3aXRoIGhvdCBzdW5ueSBkYXlzLCB0aGUgbGV2ZWwgb2Ygc2FsdCBpcyBtdWNoIGhpZ2hlciAgdGhhbiBub3JtYWwuICAgQ29ycmllIExha2VzIGFyZSBhIHR5cGUgb2YgbGFrZSBmb3JtZWQgaW4gR2xhY2lhbCByZWdpb25zLiBUaGVzZSBhcmUgbGFrZXMgdGhhdCBhcmUgZm9ybWVkIGR1ZSB0byBtZWx0aW5nICBpY2UgaW4gdGhlIFUtc2hhcGVkIGhvbGxvdyByZWdpb24gY3JlYXRlZCBkdWUgdG8gZXJvc2lvbiBvZiB0aGUgcm9jayBmcm9tIHRoZSBib3R0b20gb2YgYSBtb3ZpbmcgZ2xhY2llci4gICBTb3VyY2U6ICBDbGFzcyBYSSBOQ0VSVCBJbmRpYTogUGh5c2ljYWwgR2VvZ3JhcGh5LCBDaC0yLCBQZy0xNywxODsgIFBoeXNpY2FsIEdlb2dyYXBoeSBieSBHQyBMZW9uZywgQ2gtNywgUGctNTcsIDU5LCA2MDsgQ2gtOSwgUGctNjYgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the drainage pattern, consider the following statements:  1.  Radial pattern is seen when a river discharges its waters from all directions in a lake.  2.  Trellis pattern is seen when the secondary tributaries of a river join the primary tributaries at right angles.  3.  Dendritic pattern is seen when the drainage pattern resembles the branches of a tree. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgRHJhaW5hZ2UgUGF0dGVybiBpcyB0aGUgcGF0dGVybiBmb3JtZWQgYnkgdGhlIHN0cmVhbXMsIHJpdmVycywgYW5kIGxha2VzIGluIGEgcGFydGljdWxhciBkcmFpbmFnZSBiYXNpbi4gIERyYWluYWdlIHBhdHRlcm5zIGFyZSBjYXRlZ29yaXNlZCBiYXNlZCBvbiB0aGVpciBzaGFwZSBhbmQgdGV4dHVyZS4gVGhlaXIgc2hhcGUgb3IgcGF0dGVybiBldm9sdmVzIGFzIGEgIHJlc3VsdCBvZiB0aGUgbG9jYWwgdGVycmFpbiBhbmQgdW5kZXJseWluZyBnZW9sb2d5LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogV2hlbiB0aGUgcml2ZXJzIG9yaWdpbmF0ZSBmcm9tIGEgaGlsbCBhbmQgZmxvdyBpbiBhbGwgZGlyZWN0aW9ucywgdGhlIGRyYWluYWdlICBwYXR0ZXJuIGlzIGtub3duIGFzIHJhZGlhbCBwYXR0ZXJuLiBUaGUgcml2ZXJzIG9yaWdpbmF0aW5nIGZyb20gdGhlIEFtYXJrYW50YWsgcmFuZ2UgcHJlc2VudCBhIGdvb2QgIGV4YW1wbGUgb2YgaXQuICAgV2hlbiB0aGUgcml2ZXJzIGRpc2NoYXJnZSB0aGVpciB3YXRlcnMgZnJvbSBhbGwgZGlyZWN0aW9ucyBpbiBhIGxha2Ugb3IgZGVwcmVzc2lvbiwgdGhlIHBhdHRlcm4gaXMga25vd24gIGFzIGNlbnRyaXBldGFsIHBhdHRlcm4uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVHJlbGxpcyBwYXR0ZXJuIGlzIHNlZW4gd2hlbiB0aGUgcHJpbWFyeSB0cmlidXRhcmllcyBvZiByaXZlcnMgZmxvdyBwYXJhbGxlbCB0byBlYWNoICBvdGhlciBhbmQgc2Vjb25kYXJ5IHRyaWJ1dGFyaWVzIGpvaW4gdGhlbSBhdCByaWdodCBhbmdsZXMuIEZvciBleGFtcGxlLCB0aGUgcml2ZXJzIG9mIHRoZSBIaW1hbGF5YW4gIHJlZ2lvbidzIHVwcGVyIHJlYWNoLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBkcmFpbmFnZSBwYXR0ZXJuIHJlc2VtYmxpbmcgdGhlIGJyYW5jaGVzIG9mIGEgdHJlZSBpcyBrbm93biBhcyBkZW5kcml0aWMuICBUaGUgSGltYWxheWFuIHJpdmVycyBpbiB0aGUgcGxhaW4gcmVnaW9uIGlzIGV4YW1wbGVzLiAgIFNvdXJjZTogIE5DRVJUIENsYXNzIDExIEluZGlhOiBQaHlzaWNhbCBHZW9ncmFwaHkgLSBDaGFwdGVyIDMgRHJhaW5hZ2UgU3lzdGVtIFAgMjEuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "2 and 3 only      \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following pairs: Waterfalls Rivers 1. Dudhsagar Mandovi 2. Dhuandhar Narmada 3. Gersoppa Shravati 4. Elephant Godavari Which of the pairs given above are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuIER1ZGhzYWdhciBmYWxsIGlzIGEgZm91ci10aWVyZWQgd2F0ZXJmYWxsIG9uIHRoZSBNYW5kb3ZpIFJpdmVyIEdvYS4gV2l0aCBhICBoZWlnaHQgb2YgMSwwMjAgZnQuIER1ZGhzYWdhciBXYXRlcmZhbGwgaXMgYWxzbyBrbm93biBhcyAnU2VhIG9mIE1pbGsnLiBJdCBpcyBzaXR1YXRlZCBvbiB0aGUgYm9yZGVyIG9mICBLYXJuYXRha2EgYW5kIEdvYSBhbmQgYSBwYXJ0IG9mIHRoZSBCaGFnd2FuIE1haGF2aXIgV2lsZCBMaWZlIFNhbmN0dWFyeS4gICBQYWlyIDIgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBEaHVhbmRoYXIgZmFsbHMsIGFsc28ga25vd24gYXMgZGh1YW5kaGFyIGphbHByYXBhdCBpcyBsb2NhdGVkIGluIEphYmFscHVyICBkaXN0cmljdCBvZiBNYWRoeWEgUHJhZGVzaC4gSXQgaXMgY3JlYXRlZCBieSByaXZlciBOYXJtYWRhIHRocm91Z2ggdGhlIGdvcmdlIG9mIG1hcmJsZSByb2NrcyBpbiBCaGVkYWdoYXQuICBUaGUgd2F0ZXJmYWxsIGlzIDMwIG0gaGlnaCwgYW5kIGlzIG1hZ25pZmljZW50IHRvIGxvb2sgYXQuICAgUGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBHZXJzb3BwYSBmYWxscyBpcyBjcmVhdGVkIGJ5IHJpdmVyIFNoYXJhdmF0aSBsb2NhdGVkIGluIFdlc3Rlcm4gR2hhdHMgbmVhciAgS2FybmF0YWthLiBUaGV5IGFyZSBhbHNvIGNhbGxlZCBKb2cgRmFscyBGYWxscyBhbmQgSm9nYWRhIEd1bmRpLiBKb2dhIEZhbGxzIGlzIHRoZSBzZWNvbmQgaGlnaGVzdCBwbHVuZ2UgIHdhdGVyZmFsbCBpbiBJbmRpYSBsb2NhdGVkIGluIFNoaXZhbW9nZ2EgZGlzdHJpY3QuIEl0IGlzIGEgc2VnbWVudGVkIHdhdGVyZmFsbCB3aGljaCwgZGVwZW5kaW5nIG9uIHJhaW4gYW5kICBzZWFzb24sIGJlY29tZXMgYSBwbHVuZ2Ugd2F0ZXJmYWxsLiBUaGUgZmFsbHMgYXJlIGEgbWFqb3IgdG91cmlzdCBhdHRyYWN0aW9uIGFuZCBhcmUgcmFua2VkIDEzdGggaW4gdGhlIHdvcmxkICBieSB0aGUgd2F0ZXJmYWxsIGRhdGFiYXNlLiAgUGFpciA0IGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIEVsZXBoYW50IEZhbGxzIGlzIHNpdHVhdGVkIG9uIHRoZSBvdXRza2lydHMgb2YgdGhlIG1haW4gY2l0eSBvZiBTaGlsbG9uZywgIE1lZ2hhbGF5YS4gVGhlIHVuaXF1ZSBwYXJ0IG9mIHRoZXNlIGZhbGxzIGlzIHRoYXQsIGl0IGlzIGEgdHdvLXRpZXIgd2F0ZXJmYWxsIHNldCBpbiB0aGUgZGluZ2xlcyBvZiB0aGUgcm9ja3MuIEl0ICBpcyBsb2NhbGx5IGtub3duIGFzIEthIEtzaGFpZCBMYWkgUGF0ZW5nIEtob2hzaWV3LCB0aGUgbGl0ZXJhbCBtZWFuaW5nIG9mIHdoaWNoIGlzLSAnVGhyZWUgU3RlcHMgV2F0ZXIgIEZhbGxzJy4gVGhlIHByZXNlbnQgbmFtZSBoYXMgaXRzIG9yaWdpbiBpbiB0aGUgQnJpdGlzaCBlcmEgd2hlbiB0aGUgRW5nbGlzaG1lbiBzcG90dGVkIGEgZ2lhbnQgcm9jayB0aGF0ICBsb29rZWQgbGlrZSBhbiBlbGVwaGFudCBuZWFyIHRoZSBmYWxsLiAgaHR0cDovL3d3dy53YWxrdGhyb3VnaGluZGlhLmNvbS9hdHRyYWN0aW9uIGVuLW1vc3QtZmFtb3VzLXdhdGVyZmFsbHMtb2YtaW5kaWFuLXN0YXRlcy8gIGh0dHBzOi8vd3d3LmJhbmdhbG9yZXRvdXJpc20ub3JnL3dhdGVyZmFsbHMtam9nLWZhbGxzLnBocCAgICBodHRwczovL3NoaW1vZ2EubmljLmluL2VuIG91cmlzdC1wbGFjZS9qb2dmYWxscy8gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 4 only ",
        "option2" : "1, 2 and 3 only ",
        "option3" : "1, 3 and 4 only ",
        "option4" : "2, 3 and 4 only  "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following rivers originate from Aravalli mountains? 1. Chambal 2. Banas 3. Mahi 4. Luni 5. Sabarmati Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQXJhdmFsbGkgSGlsbCBSYW5nZXMgaXMgdGhlIG9sZGVzdCByYW5nZSBvZiBmb2xkIG1vdW50YWlucyBpbiBJbmRpYS4gSXQgc3BhbnMgdGhyb3VnaCBHdWphcmF0LCBSYWphc3RoYW4sICBIYXJ5YW5hIGFuZCBEZWxoaSBhbmQgaXMgYW4gZWNvbG9naWNhbGx5IHNlbnNpdGl2ZSB6b25lLiBTZXZlcmFsIHJpdmVycyBpbmNsdWRpbmcgdGhlIEJhbmFzLCBMdW5pLCBTYWtoaSwgYW5kICBTYWJhcm1hdGkgcmlzZSBmcm9tIHRoZSBBcmF2YWxpIE1vdW50YWlucy4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBMdW5pIGlzIHRoZSBsYXJnZXN0IHJpdmVyIHN5c3RlbSBvZiBSYWphc3RoYW4sIHdlc3Qgb2YgQXJhdmFsaS4gTHVuaSBvcmlnaW5hdGVzIGZyb20gIHdlc3Rlcm4gc2xvcGVzIG9mIHRoZSBBcmF2YWxsaSByYW5nZXMuIEl0IG9yaWdpbmF0ZXMgbmVhciBQdXNoa2FyIGluIHR3byBicmFuY2hlcywgaS5lLiwgdGhlIFNhcmFzd2F0aSBhbmQgIHRoZSBTYWJhcm1hdGksIHdoaWNoIGpvaW4gd2l0aCBlYWNoIG90aGVyIGF0IEdvdmluZGdhcmguIEZyb20gaGVyZSwgdGhlIHJpdmVyIGNvbWVzIG91dCBvZiBBcmF2YWxpIGFuZCBpcyAga25vd24gYXMgTHVuaS4gSXQgZmxvd3MgdG93YXJkcyB0aGUgd2VzdCB0aWxsIFRlbHdhcmEgYW5kIHRoZW4gdGFrZXMgYSBzb3V0aHdlc3QgZGlyZWN0aW9uIHRvIGpvaW4gdGhlIFJhbm4gIG9mIEt1Y2hjaGguIFRoZSBlbnRpcmUgcml2ZXIgc3lzdGVtIGlzIGVwaGVtZXJhbC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBCYW5hcyBvcmlnaW5hdGVzIGluIHRoZSBLaGFtbm9yIEhpbGxzIG9mIHRoZSBBcmF2YWxsaSBSYW5nZSwgYWJvdXQgNSBrbSBmcm9tICBLdW1iaGFsZ2FyaCBpbiBSYWpzYW1hbmQgZGlzdHJpY3QuIFRoZSByaXZlciBmbG93cyBpbiBhIHNvdXRoIC0gd2VzdGVybHkgZGlyZWN0aW9uIGFuZCBlbXB0aWVzIGludG8gbGl0dGxlICBSYW5uIG9mIEthY2hjaGguIEl0IGlzIGJvdW5kZWQgYnkgTHVuaSBiYXNpbiBpbiB0aGUgbm9ydGgsIFNhcmFzdmF0aSBiYXNpbiBpbiB0aGUgc291dGgsIEFyYXZhbGxpIEhpbGwgcmFuZ2VzICBpbiB0aGUgZWFzdCBhbmQgZmluYWxseSwgQXJhYmlhbiBTZWEgaW4gdGhlIHdlc3QuIFRoZSBudW1iZXIgb2YgcHJpbmNpcGFsIHRyaWJ1dGFyaWVzLCB3aGljaCBjb250cmlidXRlICBzaWduaWZpY2FudGx5LCBpcyBzZXZlbi4gU2lwdSBpcyB0aGUgb25seSBtYWpvciB0cmlidXRhcnkgb24gdGhlIHJpZ2h0IGJhbmsuIFRoZSBvdGhlciBzaXggdHJpYnV0YXJpZXMgbmFtZWx5ICBCYXRyaWEsIFN1a2xpLCBTZXdhcmFuLCBTdWtldCwgQmFsYXJhbSBhbmQgS2hhcmkgZHJhaW4gaW50byB0aGUgbWFpbiBjaGFubmVsIGZyb20gbGVmdCBiYW5rLiAgU3RhdGVtZW50IDUgaXMgY29ycmVjdC4gVGhlIFNhYmFybWF0aSBiYXNpbiBleHRlbmRzIG92ZXIgdGhlIHN0YXRlcyBvZiBSYWphc3RoYW4gYW5kIEd1amFyYXQuIFRoZSBiYXNpbiBpcyAgYm91bmRlZCBieSBBcmF2YWxsaSBoaWxscyBvbiB0aGUgbm9ydGggYW5kIG5vcnRoLWVhc3QsIGJ5IFJhbm4gb2YgS3V0Y2ggb24gdGhlIHdlc3QgYW5kIGJ5IEd1bGYgb2YgIEtoYW1iaGF0IG9uIHRoZSBzb3V0aC4gU2FiYXJtYXRpIG9yaWdpbmF0ZXMgZnJvbSBBcmF2YWxsaSBoaWxscyBhdCBhbiBlbGV2YXRpb24gb2YgNzYyIG0gbmVhciB2aWxsYWdlIFRlcHVyLCAgaW4gVWRhaXB1ciBkaXN0cmljdCBvZiBSYWphc3RoYW4uIFRoZSB0b3RhbCBsZW5ndGggb2Ygcml2ZXIgZnJvbSBvcmlnaW4gdG8gb3V0ZmFsbCBpbnRvIHRoZSBBcmFiaWFuIFNlYSBpcyAzNzEgIGttIGFuZCBpdHMgcHJpbmNpcGFsIHRyaWJ1dGFyaWVzIGpvaW5pbmcgZnJvbSBsZWZ0IGFyZSB0aGUgV2FrYWwsIHRoZSBIYXRobWF0aSBhbmQgdGhlIFZhdHJhayB3aGVyZWFzIHRoZSAgU2VpIGpvaW5zIHRoZSByaXZlciBmcm9tIHJpZ2h0LiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgQ2hhbWJhbCBSaXZlciwgY2FsbGVkIENoYXJtYW52YXRpIGluIGFuY2llbnQgdGltZXMsIGlzIHRoZSBsYXJnZXN0IG9mIHRoZSAgcml2ZXJzIGZsb3dpbmcgdGhyb3VnaCBSYWphc3RoYW4gU3RhdGUuIFRoZSBsZW5ndGggb2YgQ2hhbWJhbCBSaXZlciBpcyA5NjAga20uIFRoZSByaXZlciBoYXMgaXRzIHNvdXJjZSBuZWFyICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgdGhlIFNpbmdhciBDaG91cmkgY3Jlc3Qgb24gdGhlIG5vcnRoZXJuIHNpZGUgb2YgdGhlIFZpbmRoeWFuIGNsaWZmcywgMTUga20gd2VzdCB0byBzb3V0aHdlc3Qgb2YgTWhvdyBpbiAgSW5kb3JlIERpc3RyaWN0LCBNYWRoeWEgUHJhZGVzaC4gVGhpcyBpcyBhIG1ham9yIHRyaWJ1dGFyeSBvZiBZYW11bmEgd2hpY2ggaXMgOTYwIGttIGxvbmcuIExvY2F0ZWQgaW4gIENlbnRyYWwgSW5kaWEsIHRoZSByaXZlciBjb21wcmlzZXMgYSBzaWduaWZpY2FudCBwb3J0aW9uIG9mIHRoZSBHcmVhdGVyIEdhbmdldGljIERyYWluYWdlIFN5c3RlbS4gVGhlICBDaGFtYmFsIFJpdmVyIHJ1bnMgYWNjb3JkaW5nIHRvIGEgbm9ydGggdG8gbm9ydGhlYXN0ZXJseSBpdGluZXJhcnkgdGhyb3VnaCBNYWRoeWEgUHJhZGVzaCwgZmxvd2luZyBmb3IgYSAgY29uc2lkZXJhYmxlIGRpc3RhbmNlIHRocm91Z2ggUmFqYXN0aGFuLCBzdWJzZXF1ZW50bHkgY3JlYXRlcyB0aGUgYm9yZGVyIGJldHdlZW4gTWFkaHlhIFByYWRlc2ggYW5kICBSYWphc3RoYW4gcHJpb3IgdG8gdHdpc3RpbmcgdG8gdGhlIHNvdXRoZWFzdCB0byBtZWV0IHRoZSBZYW11bmEgaW4gdGhlIHN0YXRlIG9mIFV0dGFyIFByYWRlc2guICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBNYWhpIGJhc2luIGV4dGVuZHMgb3ZlciB0aGUgc3RhdGVzIG9mIE1hZGh5YSBQcmFkZXNoLCBSYWphc3RoYW4gYW5kICBHdWphcmF0LiBJdCBpcyBib3VuZGVkIGJ5IEFyYXZhbGxpIGhpbGxzIG9uIHRoZSBub3J0aCBhbmQgdGhlIG5vcnRoLXdlc3QsIGJ5IE1hbHdhIFBsYXRlYXUgb24gdGhlIGVhc3QsIGJ5ICB0aGUgVmluZGh5YXMgb24gdGhlIHNvdXRoIGFuZCBieSB0aGUgR3VsZiBvZiBLaGFtYmhhdCBvbiB0aGUgd2VzdC4gTWFoaSBpcyBvbmUgb2YgdGhlIG1ham9yIGludGVyc3RhdGVzICB3ZXN0IGZsb3dpbmcgcml2ZXJzIG9mIEluZGlhLiBJdCBvcmlnaW5hdGVzIGZyb20gdGhlIG5vcnRoZXJuIHNsb3BlcyBvZiBWaW5kaHlhcyBhdCBhbiBhbHRpdHVkZSBvZiA1MDAgbSBuZWFyICB2aWxsYWdlIEJob3Bhd2FyLCBTYXJkYXJwdXIgdGVoc2lsIGluIERoYXIgZGlzdHJpY3Qgb2YgTWFkaHlhIFByYWRlc2guIFRoZSB0b3RhbCBsZW5ndGggb2YgTWFoaSBpcyA1ODMga20uICBUaGUgU29tIGlzIGl0cyBwcmluY2lwYWwgdHJpYnV0YXJ5IHdoaWNoIGpvaW5zIGZyb20gdGhlIHJpZ2h0LCBhbmQgdGhlIEFuYXMgYW5kIHRoZSBQYW5hbSBqb2lucyB0aGUgcml2ZXIgIGZyb20gdGhlIGxlZnQuIEl0IGRyYWlucyBpbnRvIHRoZSBBcmFiaWFuIFNlYSB0aHJvdWdoIHRoZSBHdWxmIG9mIEtoYW1iaGF0LiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20vcGxhY2UvQXJhdmFsbGktUmFuZ2UgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only ",
        "option2" : "1, 2, 3 and 5 only ",
        "option3" : "2, 4 and 5 only ",
        "option4" : "1, 3, 4 and 5 only  "
      }
    },
    {
      "index" : 28,
      "question" : "Which one of the following is the primary reason behind the near absence of vegetation or snow in the Karakoram Mountain pass that connects Leh in India with Yarkand in China?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgS2FyYWtvcmFtIFBhc3MgaXMgYSBtb3VudGFpbiBwYXNzIGJldHdlZW4gSW5kaWEgYW5kIENoaW5hIGluIHRoZSBLYXJha29yYW0gUmFuZ2UuIFRoZSBtb3VudGFpbiBwYXNzIGlzICBsb2NhdGVkIG9uIHRoZSBib3VuZGFyeSBiZXR3ZWVuIHRoZSBJbmRpYW4gVW5pb24gVGVycml0b3J5IG9mIExhZGFraCBhbmQgdGhlIFhpbmppYW5nIEF1dG9ub21vdXMgIFJlZ2lvbiBvZiBDaGluYSwgYW5kIGNvbm5lY3RzIExlaCB3aXRoIFlhcmthbmQuICAgSGlnaCBhbHRpdHVkZSBvZiB0aGUgcGFzcyBhbmQgdGhlIGxhY2sgb2YgZm9kZGVyIHdlcmUgcmVzcG9uc2libGUgZm9yIHRoZSBkZWF0aHMgb2YgY291bnRsZXNzIHBhY2sgYW5pbWFscyAgd2hpbGUgdGhlIHJvdXRlIHdhcyBub3RvcmlvdXMgZm9yIHRoZSB0cmFpbCBvZiBib25lcyBzdHJld24gYWxvbmcgdGhlIHdheS4gVGhlcmUgaXMgYW4gYWxtb3N0IHRvdGFsIGFic2VuY2UgIG9mIHZlZ2V0YXRpb24gb24gdGhlIGFwcHJvYWNoZXMgdG8gdGhlIHBhc3MgICBUaGUgcGFzcyBoYXMgbm8gdmVnZXRhdGlvbiBub3Igc25vdyBiZWNhdXNlIG9mIHRoZSBoaWdoLXNwZWVkIHdpbmQsIHdoaWNoIGNvbnN0YW50bHkgYmxvd3MgaW4gdGhlICByZWdpb24uIEFuaW1hbCBsaWZlIGlzIGFsc28gbm9uLWV4aXN0ZW50IGluIHRoZSBhcmVhLiBIb3dldmVyLCB0ZW1wZXJhdHVyZXMgYXJlIGxvdyBhbmQgYmxpenphcmRzIGFyZSAgY29tbW9uLiAgIFNvdXJjZTogIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vZGVmZW5jZS1taW5pc3Rlci1mbGFncy1pbi1pbmRpYW4tYXJteS1za2lpbmctZXhwZWRpdGlvbi1hcm1leC0gMjEvICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Lack of fertile soil ",
        "option2" : "High speed winds ",
        "option3" : "Militarization of the zone ",
        "option4" : "Barrier of mountain in the valley  "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following pairs is/are correctly matched? Famous Places Bank of River 1. Cuttack Mahanadi 2. Ujjain Narmada 3. Hampi Krishna 4. Madurai Vaigai Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUGFpciAxIGlzIGNvcnJlY3QuIFRoZSBmYW1vdXMgY2l0eSBvZiBDdXR0YWNrIGluIE9kaXNoYSBpcyBzaXR1YXRlZCBvbiB0aGUgYmFua3Mgb2YgTWFoYW5hZGkgUml2ZXIuIEl0IGlzICBmYW1vdXMgZm9yIHNpbHZlciBmaWxpZ3JlZSBhbmQgbWFueSBmYW1vdXMgYXJ0IHdvcmtzLiAgUGFpciAyIGlzIGluY29ycmVjdC4gVGhlIGhpc3RvcmljYWwgY2l0eSBvZiBVamphaW4gaXMgbG9jYXRlZCBvbiB0aGUgYmFua3Mgb2YgU2hpcHJhIGFuZCBub3QgTmFybWFkYSBSaXZlci4gSXQgIGxpZXMgaW4gdGhlIHN0YXRlIG9mIE1hZGh5YSBQcmFkZXNoLiBTaGlwcmEgaXMgYSB0cmlidXRhcnkgb2YgQ2hhbWJhbCB3aGljaCBmbG93cyBpbnRvIFlhbXVuYSBSaXZlci4gIFVqamFpbiBpcyBvbmUgb2YgdGhlIGZvdXIgcGxhY2VzIChIYXJpZHdhciwgQWxsYWhhYmFkIGFuZCBOYXNpayBiZWluZyB0aGUgb3RoZXIgdGhyZWUpIHdoZXJlIEt1bWJoIE1lbGEgIGlzIG9yZ2FuaXplZC4gIFBhaXIgMyBpcyBpbmNvcnJlY3QuIEhhbXBpLCBsb2NhdGVkIGluIEthcm5hdGFrYSwgaXMgc2l0dWF0ZWQgb24gdGhlIGJhbmtzIG9mIFR1bmdhYmhhZHJhIFJpdmVyLiBJdCB3YXMgdGhlICBjYXBpdGFsIG9mIHRoZSBWaWpheWFuYWdhciBlbXBpcmUgaW4gdGhlIDE0dGggQ2VudHVyeS4gSXQgaXMgYWxzbyBhIFVORVNDTyB3b3JsZCBoZXJpdGFnZSBzaXRlIGFuZCBzYWlkIHRvIGJlICB0aGUgc2Vjb25kIGxhcmdlc3QgbWVkaWV2YWwgZXJhIGNpdHkgYWZ0ZXIgQmVpamluZy4gIFBhaXIgNCBpcyBjb3JyZWN0LiBUaGUgYW5jaWVudCBjaXR5IG9mIE1hZHVyYWksIFRhbWlsIE5hZHUgaXMgbG9jYXRlZCBvbiB0aGUgYmFua3Mgb2YgVmFpZ2FpIFJpdmVyLiBWYWlnYWkgIGRyYWlucyBpbnRvIHRoZSBCYXkgb2YgQmVuZ2FsIGJlZm9yZSBwYXNzaW5nIHRocm91Z2ggdGhlIGNpdGllcyBvZiBEaW5kaWd1bCBhbmQgTWFkdXJhaS4gTWFkdXJhaSBob3N0cyAgdGhlIGZhbW91cyBNZWVuYWtzaGkgVGVtcGxlLiAgU291cmNlOiBodHRwczovL2luZGlhd3Jpcy5nb3YuaW4vd3Jpcy8gICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2  ",
        "option2" : "2 and 4 ",
        "option3" : "1 and 4 ",
        "option4" : "2 and 3  "
      }
    },
    {
      "index" : 30,
      "question" : "Which one of the following statements correctly describe the term 'Dhrians', in the context of Indian geography? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU2FuZCBkdW5lcyBpcyBhIGxhbmQgb2YgdW5kdWxhdGluZyB0b3BvZ3JhcGh5IGRvdHRlZCB3aXRoIGxvbmdpdHVkaW5hbCBkdW5lcywgdHJhbnN2ZXJzZSAgZHVuZXMgYW5kIGJhcmNoYW5zLiBCYXJjaGFuIC0gQSBjcmVzY2VudC1zaGFwZWQgc2FuZCBkdW5lLCB0aGUgaG9ybnMgb2Ygd2hpY2ggcG9pbnQgYXdheSBmcm9tIHRoZSAgZGlyZWN0aW9uIG9mIHRoZSBkb21pbmFudCB3aW5kOyBMb25naXR1ZGluYWwgZHVuZSAtIEEgc2FuZCBkdW5lIHdpdGggaXRzIGNyZXN0IHJ1bm5pbmcgcGFyYWxsZWwgdG8gdGhlICBkaXJlY3Rpb24gb2YgcHJldmFpbGluZyB3aW5kLiAgSW4gZGVzZXJ0IHJlZ2lvbnMsIGR1ZSB0byBjaGFuZ2UgaW4gdGhlIGRpcmVjdGlvbiBvZiB3aW5kcywgdGhlIHNhbmQgZHVuZXMgc2hpZnQgZnJvbSBvbmUgcGxhY2UgdG8gdGhlIG90aGVyLiAgVGhlc2UgbW92aW5nIG9yIHNoaWZ0aW5nIGR1bmVzIGFyZSBjYWxsZWQgJ2RocmlhbnMnICBpbiAgdGhlIGRlc2VydCByZWdpb24gb2YgUmFqYXN0aGFuLiAgIEVwaXNvZGljIHJpdmVycyBhcmUgZm9ybWVkIGZyb20gcnVuLW9mZiBjaGFubmVscyBhbmQgZm91bmQgaW4gYXJlYXMgd2l0aCB2ZXJ5IGRyeSBjbGltYXRlcy4gICBNb3JhaW5lcyBhcmUgdGhlIG1hdGVyaWFsIHVzdWFsbHkgc29pbCBhbmQgcm9jayBsZWZ0IGJlaGluZCBieSBhIG1vdmluZyBnbGFjaWVyLiAgIER5a2VzIGFyZSBzaGVldHMgb2Ygcm9jayB0aGF0IGlzIGZvcm1lZCBpbiBhIGZyYWN0dXJlIG9mIGEgcHJlLWV4aXN0aW5nIHJvY2sgYm9keS4gIFNvdXJjZTogV2hhdCBpcyBhIGRocmlhbj8gRmxhc2ggRWR1Y2F0aW9uICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They are formed from run-off channels in the  rivers found in areas with very dry climates. ",
        "option2" : " They are moving or shifting dunes found in  the desert region of Rajasthan. ",
        "option3" : " They are the soil and rock that is left behind  by a moving glacier.  ",
        "option4" : " They are sheets of rock that is formed in  a fracture of a pre-existing rock body.  "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements regarding 'Retreating Monsoon Season in India': 1.  The weakening of low-pressure area over Northwest India is responsible for the retreat of monsoon. 2.  The season is marked by cloudy skies with rainfall in the north India. 3.  The months of October and November are known for retreating monsoons in India. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIFNvdXRod2VzdCBtb25zb29ucyBzdGFydCByZXRyZWF0aW5nIGluIHRoZSBmaXJzdCB3ZWVrIG9mIFNlcHRlbWJlciBmcm9tIFBha2lzdGFuIGJvcmRlciBpbiAgTm9ydGh3ZXN0IEluZGlhLiBUaHVzLCB0aGVzZSB3aW5kcyB3aXRoZHJhdyBlYXJsaWVyIGZyb20gdGhlIHJlZ2lvbnMgd2hlcmUgdGhleSByZWFjaCB0aGUgbGFzdC4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSByZXRyZWF0IG9mIG1vbnNvb24gd2luZHMgdGFrZXMgcGxhY2UgZHVlIHRvIHdlYWtlbmluZyBvZiBsb3ctcHJlc3N1cmUgYXJlYSAgb3ZlciB0aGUgbm9ydGggd2VzdGVybiBwYXJ0cy4gVGhpcyBoYXBwZW5zIGR1ZSB0byBsb3cgdGVtcGVyYXR1cmVzIGNhdXNlZCBieSB0aGUgYXBwYXJlbnQgc2hpZnQgb2YgdGhlICBzdW4gdG93YXJkcyB0aGUgZXF1YXRvciBhbmQgYWxzbyBvd2luZyB0byB0aGUgd2lkZXNwcmVhZCByYWlucyBicmluZ2luZyBkb3duIHRlbXBlcmF0dXJlcyBwZXJjZXB0aWJseS4gIENvbnNlcXVlbnRseSwgdGhlIGFpciBwcmVzc3VyZSBzdGFydHMgZGVjcmVhc2luZy4gU3VjaCBjaGFuZ2VzIGluIHRoZSBwYXR0ZXJucyBvZiBhdG1vc3BoZXJpYyBwcmVzc3VyZSAgY2F1c2VzIFNvdXRod2VzdCBtb25zb29ucyB0byB3aXRoZHJhdy4gSGVuY2UsIHRoaXMgcGVyaW9kIGlzIGtub3duIGFzIHRoZSBzZWFzb24gb2YgcmV0cmVhdGluZyAgU291dGh3ZXN0IG1vbnNvb25zLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgcmV0cmVhdGluZyBzb3V0aHdlc3QgbW9uc29vbiBzZWFzb24gaXMgbWFya2VkIGJ5IGNsZWFyIHNraWVzIGFuZCBhIHJpc2UgaW4gIHRlbXBlcmF0dXJlLiBUaGUgbGFuZCBpcyBzdGlsbCBtb2lzdC4gT3dpbmcgdG8gdGhlIGNvbmRpdGlvbnMgb2YgaGlnaCB0ZW1wZXJhdHVyZSBhbmQgaHVtaWRpdHksIHRoZSAgd2VhdGhlciBiZWNvbWVzIHJhdGhlciBvcHByZXNzaXZlLiBUaGlzIGlzIGNvbW1vbmx5IGtub3duIGFzIHRoZSAnT2N0b2JlciBoZWF0Jy4gSW4gdGhlIHNlY29uZCBoYWxmIG9mICBPY3RvYmVyLCB0aGUgbWVyY3VyeSBiZWdpbnMgdG8gZmFsbCByYXBpZGx5LCBwYXJ0aWN1bGFybHkgaW4gbm9ydGhlcm4gSW5kaWEuIFRoZSB3ZWF0aGVyIGluIHRoZSByZXRyZWF0aW5nICBtb25zb29uIGlzIGRyeSBpbiBub3J0aCBJbmRpYSBidXQgaXQgaXMgYXNzb2NpYXRlZCB3aXRoIHJhaW4gaW4gdGhlIGVhc3Rlcm4gcGFydCBvZiB0aGUgUGVuaW5zdWxhLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIG1vbnRocyBvZiBPY3RvYmVyIGFuZCBOb3ZlbWJlciBhcmUga25vd24gZm9yIHJldHJlYXRpbmcgbW9uc29vbnMuIEJ5IHRoZSAgZW5kIG9mIFNlcHRlbWJlciwgdGhlIHNvdXRod2VzdCBtb25zb29uIGJlY29tZXMgd2VhayBhcyB0aGUgbG93LXByZXNzdXJlIHRyb3VnaCBvZiB0aGUgR2FuZ2EgcGxhaW4gIHN0YXJ0cyBtb3Zpbmcgc291dGh3YXJkIGluIHJlc3BvbnNlIHRvIHRoZSBzb3V0aHdhcmQgbWFyY2ggb2YgdGhlIHN1bi4gVGhlIG1vbnNvb24gcmV0cmVhdHMgZnJvbSAgd2VzdGVybiBSYWphc3RoYW4gYnkgdGhlIGZpcnN0IHdlZWsgb2YgU2VwdGVtYmVyLiBCeSB0aGUgYmVnaW5uaW5nIG9mIE9jdG9iZXIsIHRoZSBsb3cgcHJlc3N1cmUgY292ZXJzICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgbm9ydGhlcm4gcGFydHMgb2YgdGhlIEJheSBvZiBCZW5nYWwgYW5kIGJ5IGVhcmx5IE5vdmVtYmVyLCBpdCBtb3ZlcyBvdmVyIEthcm5hdGFrYSBhbmQgVGFtaWwgTmFkdS4gQnkgIHRoZSBtaWRkbGUgb2YgRGVjZW1iZXIsIHRoZSBjZW50cmUgb2YgbG93IHByZXNzdXJlIGlzIGNvbXBsZXRlbHkgcmVtb3ZlZCBmcm9tIHRoZSBQZW5pbnN1bGEuICAgU291cmNlOiAgY2gxNy5wZGYgKG5pb3MuYWMuaW4pICAxMXRoIE5DRVJUIFVuaXQgSUlJLSBDTElNQVRFLCBWRUdFVEFUSU9OIEFORCBTT0lMICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only ",
        "option2" : "1 and 3 only ",
        "option3" : "1 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to the physiographic features in the Himalayan region, consider the following statements:  1.  River Indus flows between Zaskar ranges and Pir panjal ranges. 2.  K-2, the second highest peak in the world is located in the Ladakh Ranges. 3.  Kailash Range is an extension of Trans-Himalayas. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgSGltYWxheWFzIGlzIHRoZSBoaWdoZXN0IG1vdW50YWluIHN5c3RlbSBvZiB0aGUgd29ybGQuIEl0IGV4dGVuZHMgaW4gYXJjIHNoYXBlIGZvciBhIGRpc3RhbmNlIG9mIGFib3V0ICAyNTAwIGttIGZyb20gd2VzdCB0byBlYXN0IGFsb25nIHRoZSBub3J0aGVybiBib3VuZGFyeSBvZiBJbmRpYS4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIHJpdmVyIEluZHVzIGZsb3dzIHRvd2FyZHMgbm9ydGh3ZXN0IGJldHdlZW4gWmFza2FyIHJhbmdlIGFuZCBMYWRha2ggIHJhbmdlLiBBIEhpbWFsYXlhIHJhbmdlIHdoaWNoIGlzIGxvY2F0ZWQgdG8gdGhlIG5vcnRoIGFuZCBydW5zIGFsbW9zdCBwYXJhbGxlbCBvZiB0aGUgSGltYWRyaS9HcmVhdCAgSGltYWxheWFzIGlzIFphc2thciByYW5nZS4gRnVydGhlciwgdG8gdGhlIG5vcnRoIG9mIFphc2thciByYW5nZSBpcyB0aGUgTGFkYWtoIHJhbmdlLiBGdXJ0aGVyLCBOb3J0aCBvZiB0aGUgIExhZGFraCByYW5nZSBsaWUgdGhlIEthcmFrb3JhbS4gTWFueSBzY2hvbGFycyB0cmVhdCBaYXNrYXIgYW5kIExhZGFraCByYW5nZXMgYXMgcGFydHMgb2YgdGhlIEdyZWF0ICBIaW1hbGF5YXMgYW5kIGluY2x1ZGUgdGhlbSBpbiBLYXNobWlyIEhpbWFsYXlhcy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBLMiAoODYxMW0pIGlzIHRoZSBzZWNvbmQgaGlnaGVzdCBwZWFrIG9mIHRoZSB3b3JsZCwgbmV4dCBvbmx5IHRvIE10LiBFdmVyZXN0LiBJdCBpcyAgYWxzbyB0aGUgaGlnaGVzdCBwZWFrIG9mIHRoZSBLYXJha29yYW0gTW91bnRhaW5zLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSB0aHJlZSBtYWpvciByYW5nZXMgb2YgdGhlIEhpbWFsYXlhcyBhcmUgdGhlIEdyZWF0IEhpbWFsYXlhbiBSYW5nZXMvSGltYWRyaSwgIExlc3NlciBIaW1hbGF5YW4gUmFuZ2VzIGhlIEhpbWFjaGFsIGFuZCB0aGUgU2l3YWxpayByYW5nZXMuIEZ1cnRoZXIsIHRvIHRoZSBub3J0aCBvZiBHcmVhdCBIaW1hbGF5YXMsICBUaGUgWmFza2FyLCB0aGUgTGFkYWtoIGFuZCB0aGUgS2FyYWtvcmFtIHJhbmdlcyBhbG9uZyB3aXRoIHRoZWlyIGVhc3Rlcm4gZXh0ZW5zaW9uLCBLYWlsYXNoIGluIFRpYmV0IGFyZSAgY29uc2lkZXJlZCBhcyB0aGUgdHJhbnMgSGltYWxheWFuIHJhbmdlcy4gIFNvdXJjZTogaHR0cHM6Ly93d3cubmlvcy5hYy5pbi9tZWRpYS9kb2N1bWVudHMvMzE2Y291cnNlRS9jaDE2LnBkZiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 Only ",
        "option2" : "2 and 3 Only ",
        "option3" : "3 Only ",
        "option4" : "1, 2 and 3     \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 33,
      "question" : "Which of the following tribes are mainly found in Arunachal Pradesh? 1. Karbi 2. Abor 3. Lepchas 4. Singpho 5. Mishmi Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEdvdmVybm1lbnQgb2YgQXJ1bmFjaGFsIFByYWRlc2ggaW4gaXRzIGRvY3VtZW50cyBhbmQgYm9va3MsIGluIHRoZSB5ZWFybHkgZGlhcnkgIHB1Ymxpc2hlZCBieSB0aGUgSW5mb3JtYXRpb24gYW5kIFB1YmxpYyBSZWxhdGlvbnMgKElQUikgRGVwYXJ0bWVudCBjaXRlcyB0aGF0IEFydW5hY2hhbCAgUHJhZGVzaCBpcyBob21lIHRvIDI2IG1ham9yIHRyaWJlcyBhbmQgMTEwIHN1YiB0cmliZXMuICBPcHRpb24gMiwgMywgNCwgNSBhcmUgY29ycmVjdCBhbmQgT3B0aW9uIDEgaXMgaW5jb3JyZWN0LiAgMSkgS2FyYmkgVHJpYmU6IFRoZSBLYXJiaSBjb21tdW5pdHkgaXMgdGhlIHByaW5jaXBhbCBpbmRpZ2Vub3VzIGNvbW11bml0eSBpbiB0aGUgS2FyYmkgQW5nbG9uZyBkaXN0cmljdCAgYW5kIFdlc3QgS2FyYmkgQW5nbG9uZyBkaXN0cmljdCBvZiB0aGUgSW5kaWFuIFN0YXRlIG9mIEFzc2FtLiBUaGUgZGlzdHJpY3RzIGFyZSBhZG1pbmlzdGVyZWQgYXMgcGVyIHRoZSAgcHJvdmlzaW9ucyBvZiB0aGUgU2l4dGggU2NoZWR1bGUgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgaGF2aW5nIGF1dG9ub215IHNpbmNlIDE3IE5vdmVtYmVyIDE5NTEuICAyKSBBYm9yIFRyaWJlOiBUaGUgQWRpIHBlb3BsZSBwcmV2aW91c2x5IGtub3duIGFzICdBQk9SJyBpdHMgYWN0dWFsIG1lYW5pbmcgaXMgJ0lOREVQRU5ERU5UJy4gVGhlc2UgIHBlb3BsZSBhcmUgdGhlIG1vc3QgcG9wdWxhdGVkIGFuZCBuYXRpdmUgb2YgdGhlIEluZGlhbiBzdGF0ZSBvZiBBcnVuYWNoYWwgUHJhZGVzaC4gVGhlIEFkaSBwZW9wbGUgIHJlc2lkZSBpbiBzdWJ0cm9waWNhbCByZWdpb25zIGFuZCBiZWNhdXNlIG9mIHRoZSBjb29sIHRlbXBlcmF0dXJlLiBUaGUgbWVuIGFzIHdlbGwgYXMgd29tZW4gd2VhciAgamFja2V0cyBhbmQgd29vbGVuIGNsb3RoZXMgc28gYXMgdG8ga2VlcCB0aGVtc2VsdmVzIHdhcm0uIEFkaSB0cmliZSBzcGVhayBhIGxhbmd1YWdlIGtub3duIGFzIEFESSAgd2hpY2ggaXMgc29tZXdoYXQgcmVsYXRlZCB0byBDaGluZXNlIGFuZCBUaWJldGFuIExhbmd1YWdlLiAgMykgTGVwY2hhcyBUcmliZTogTGVwY2hhIGlzIGEgdHJpYmUgb2YgSGltYWxheWFuIHJhbmdlIGxpdmUgYXQgdGhlIE5vcnRoLUVhc3QgY29ybmVyIG9mIEluZGlhLiBUaGV5IGxhcmdlbHkgIHJlc2lkZSBhdCBNZWdoYWxheWEsIEFydW5hY2hhbCBQcmFkZXNoLCBCaHV0YW4sIFNpa2tpbSBhbmQgRGFyamVlbGluZy4gVGhleSBoYXZlIGFsc28gbWlncmF0ZWQgdG8gIG90aGVyIE5vcnRoLUVhc3Rlcm4gU3RhdGVzIGZvciBlY29ub21pYyByZWFzb25zLiBUaGVpciBsYW5ndWFnZSBpcyBhbiBhZG1peHR1cmUgb2YgTmVwYWxlc2UgYW5kICBTaWtraW1lc2UgbGFuZ3VhZ2VzLCB3aGljaCBpcyB2ZXJ5IGZhbWlsaWFyIHdpdGggSW5kby1DaGluZXNlIGxhbmd1YWdlLiAgIDQpIFNpbmdocG8gVHJpYmU6IFRoZSBTaW5ncGhvIHRyaWJlIGlzIHRoZSB0cmliZSB3aG8gaW5oYWJpdCBwYXJ0cyBvZiBJbmRpYSwgQ2hpbmEgYW5kIE15YW5tYXIuIEluIEluZGlhICBTaW5ncGhvIFRyaWJlIGlzIGxvY2F0ZWQgaW4gdGhlIHN0YXRlIG9mIEFydW5hY2hhbCBQcmFkZXNoIGluIHRoZSBkaXN0cmljdCBvZiBMb2hpdCBhbmQgQ2hhbmdsYW5nIGFuZCAgaW4gQXNzYW0uIFRoZXkgc3BlYWsgdGhlIFNpbmdwaG8gZGlhbGVjdCBvZiB0aGUgSmluZ3BvIGxhbmd1YWdlLiBUaGUgbWFpbiByZWxpZ2lvbiBmb2xsb3dlZCBieSBTaW5ncGhvICBUcmliZSBvZiBBcnVuYWNoYWwgUHJhZGVzaCBpcyBCdWRkaGlzaW0uICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgNSkgTWlzaG1pIFRyaWJlOiBUaGUgTWlzaG1pIG9yIERlbmcgcGVvcGxlIG9mIFRpYmV0IGFuZCBBcnVuYWNoYWwgUHJhZGVzaCBhcmUgYW4gZXRobmljIGdyb3VwICBvY2N1cHlpbmcgdGhlIG5vcnRoZWFzdGVybiB0aXAgb2YgdGhlIGNlbnRyYWwgQXJ1bmFjaGFsIFByYWRlc2ggaW4gVXBwZXIgYW5kIExvd2VyIERpYmFuZyBWYWxsZXksICBMb2hpdCBhbmQgQW5qYXcgRGlzdHJpY3RzLiBUaGUgSWR1LU1pc2htaSBiZWxpZXZlcyB0aGF0IFJ1a21pbmktQ2hpZWYgQ29uc29ydCBvZiBMb3JkIEtyaXNobmEgIGJlbG9uZ2VkIHRvIHRoZWlyIHRyaWJlLiBUaGUgcGxheXMgYW5kIGRhbmNlcyBvbiAnUnVrbWluaSBIYXJhbicgYXJlIGNvbW1vbi4gICBTb3VyY2U6IFRIRSBBREkoQUJPUiktVFJJQkUgLSBORSBUcmliZSAgTkNFUlQtQ2xhc3MtMTEtR2VvZ3JhcGh5LVBhcnQtMi5wZGYgIExlcGNoYSB8IFRyaWJhbCBSZXNlYXJjaCBhbmQgQ3VsdHVyYWwgSW5zdGl0dXRlICh0cmlwdXJhLmdvdi5pbiksIFRIRSBTSU5HUEhPIFRSSUJFIC0gTkUgIFRyaWJlLCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "1, 3 and 5 only ",
        "option4" : "2, 3, 4 and 5 only   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements: 1.  It is a state which is traversed by the same latitude that passes through Gujarat.  2.  It is the host of the famous Jampui hill range.  3. The famous Feni River originates in this state and it passes through Sabroom Town.  The state referred above is? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVHJpcHVyYSBpcyBhIHN0YXRlIGluIE5vcnRoLUVhc3QgSW5kaWEuIEl0IHNoYXJlcyBib3JkZXJzIHdpdGggQmFuZ2xhZGVzaCwgTWl6b3JhbSBhbmQgQXNzYW0uIFRyaXB1cmEgaXMgIHN1cnJvdW5kZWQgYnkgQmFuZ2xhZGVzaCBvbiBpdHMgbm9ydGgsIHNvdXRoIGFuZCB3ZXN0LiBUaGUgbGVuZ3RoIG9mIGl0cyBpbnRlcm5hdGlvbmFsIGJvcmRlciBpcyA4NTYga20gICg4NCBwZXIgY2VudCBvZiBpdHMgdG90YWwgYm9yZGVyKS4gSXQgaXMgbG9jYXRlZCBvbiBUcm9waWMgb2YgQ2FuY2VyIHdoaWNoIGlzIGFuIGltYWdpbmFyeSBsaW5lLCBhdCBhbiBhbmdsZSBvZiAgMjMuNTAgZGVncmVlcyBOb3J0aCBmcm9tIHRoZSBFcXVhdG9yLiBJdCBwYXNzZXMgdGhyb3VnaCBHdWphcmF0IChKYXNkYW4pLCBSYWphc3RoYW4gKEthbGluamFyaCksIE1hZGh5YSAgUHJhZGVzaCAoU2hhamFwdXIpLCBDaGhhdHRpc2dhcmggKFNvbmhhdCksIEpoYXJraGFuZCAoTG9oYXJkYWdhKSwgV2VzdCBCZW5nYWwgKEtyaXNobmFuYWdhciksIFRyaXB1cmEgIChVZGFpcHVyKSBhbmQgTWl6b3JhbSAoQ2hhbXBoYWkpLiBUaGVyZSBhcmUgJ0ZpdmUgbWFqb3IgaGlsbCByYW5nZXMgd2hpY2ggdHJhdmVyc2UgdGhlIFN0YXRlIGluIHJvdWdobHkgIG5vcnRoLXNvdXRoIGRpcmVjdGlvbi4gVGhlIGVhc3Rlcm5tb3N0IHJhbmdlIGlzIEphbXB1aSwgYmVpbmcgc3VjY2Vzc2l2ZWx5IGZvbGxvd2VkIHRvIHRoZSBXZXN0IGJ5ICBVbm9rb3RpLVNha2hhbnRsYW5nLCBMb25ndGhvcmFpLCBBdGhhcmFtdXJhLUthbGFqaGFyaSBhbmQgQmFyYW11cmEtRGVvdGFtdXJhLiBUaGUgaGlnaGVzdCBwZWFrIG9mICB0aGUgc3RhdGUgbGllcyBhdCBCZXRobGlhbmdjaGhpcCAoVGhhaWRhd2FyLCBTaGliLXJhbmdraHVuZyksIDk3NS4zNiBtIGFib3ZlIHRoZSBzZWEgbGV2ZWwuIFRoZSBzdGF0ZSBpcyAgY29ubmVjdGVkIHdpdGggdGhlIHJlc3Qgb2YgSW5kaWEgYnkgTkgtNDQgdGhhdCBydW5zIHRocm91Z2ggQXNzYW0sIE1lZ2hhbGF5YSwgTm9ydGggQmVuZ2FsLCBLb2xrYXRhIGFuZCAgb3RoZXIgcGFydHMgb2YgSW5kaWEuICAgU291cmNlOiBodHRwczovL3d3dy5vdXRsb29raW5kaWEuY29tL291dGxvb2t0cmF2ZWxsZXIvZXhwbG9yZS9zdG9yeS82OTQyNy9mYWN0cy1hYm91dC1pbmRpYS1hbmQtIHRoZS10cm9waWMtb2YtY2FuY2VyICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "West Bengal ",
        "option2" : "Mizoram ",
        "option3" : "Manipur ",
        "option4" : "Tripura  "
      }
    },
    {
      "index" : 35,
      "question" : "Why the intensity of tropical cyclones in Arabian sea has increased in recent times? 1.  Rapid increase of sea surface temperature in Arabian sea. 2.  Greater occurrence of El Nino Modoki. 3.  Conducive wind shear for cyclones in Arabian sea. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQ3ljbG9uZXMgYXJlIGFtb25nIHRoZSBtb3N0IGRldmFzdGF0aW5nIGV4dHJlbWUgd2VhdGhlciBldmVudHMgdGhhdCBJbmRpYSBmYWNlcyBldmVyeSB5ZWFyLiBUaGUgaGlnaCAgd2luZHMgYW5kIGhlYXZ5IHJhaW5zIHRoYXQgYWNjb21wYW55IGN5Y2xvbmVzIGNhdXNlIGltbWVuc2UgbG9zcyBvZiBsaWZlIGFuZCBwcm9wZXJ0eSBhbG9uZyB0aGUgY29hc3RsaW5lICBvZiBJbmRpYS4gIEFwcHJveGltYXRlbHkgMS40IGxha2ggcGVvcGxlIGRpZWQgYnkgY3ljbG9uZXMsIGZsb29kcywgYW5kIG90aGVyIHdlYXRoZXIgZXh0cmVtZXMgZHVyaW5nIHRoZSAgcGFzdCBmaXZlIGRlY2FkZXMuICBUaGUgcmVjZW50IGZvcm1hdGlvbiBvZiBDeWNsb25lIFRhdWt0YWUgbWFrZXMgMjAyMSB0aGUgZm91cnRoIGNvbnNlY3V0aXZlIHllYXIgdG8gd2l0bmVzcyBhbiBBcmFiaWFuICBTZWEgY3ljbG9uZSBkdXJpbmcgdGhlIHByZS1tb25zb29uIHNlYXNvbiAoQXByaWwtSnVuZSkuIFRoZSBjaGFuZ2luZyBjbGltYXRlIGFuZCByaXNpbmcgZ2xvYmFsIHdhcm1pbmcgIGhhdmUgY29udmVydGVkIHRoZSBBcmFiaWFuIFNlYSBpbnRvIGEgbmV3IGhvdGJlZCBmb3IgY3ljbG9uaWMgYWN0aXZpdGllcy4gRWFybGllciBtb3N0IG9mIHRoZSBjeWNsb25lcyB1c2VkICB0byBvY2N1ciBpbiB0aGUgQmF5IG9mIEJlbmdhbC4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFNlYSBzdXJmYWNlIHRlbXBlcmF0dXJlcyBpbiB0aGUgQXJhYmlhbiBTZWEgaGF2ZSBpbmNyZWFzZWQgcmFwaWRseSBkdXJpbmcgdGhlIHBhc3QgIGNlbnR1cnkgZHVlIHRvIGdsb2JhbCB3YXJtaW5nLiBUaGUgdGVtcGVyYXR1cmUgbm93IGlzIDEuMi0xLjQgwrBDIGhpZ2hlciB0aGFuIHRoZSB0ZW1wZXJhdHVyZSB3aXRuZXNzZWQgIGZvdXIgZGVjYWRlcyBhZ28uIFRoZXNlIHdhcm1lciB0ZW1wZXJhdHVyZXMgc3VwcG9ydCBhY3RpdmUgY29udmVjdGlvbiwgaGVhdnkgcmFpbmZhbGwsIGFuZCBpbnRlbnNlICBjeWNsb25lcy4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEdyZWF0ZXIgb2NjdXJyZW5jZSBvZiBFbCBOacOxbyBNb2Rva2kuIEl0IGlzIGEgY2xpbWF0ZSBwaGVub21lbm9uIHRoYXQgbWVhbnMgICdwc2V1ZG8gRWwgTmnDsW8nIGFuZCBjcmVhdGVzIGNvbmRpdGlvbnMgdGhhdCBhcmUgbm90IGNvbmR1Y2l2ZSBmb3IgY3ljbG9nZW5lc2lzIGluIHRoZSBCYXkgb2YgQmVuZ2FsLiAgSG93ZXZlciwgdGhpcyBjb25kaXRpb24gaXMgY29uZHVjaXZlIGZvciB0aGUgZm9ybWF0aW9uIG9mIGN5Y2xvbmVzIGluIHRoZSBBcmFiaWFuIFNlYS4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgQXJhYmlhbiBTZWEgaXMgYWxzbyBwcm92aWRpbmcgY29uZHVjaXZlIHdpbmQgc2hlYXIgZm9yIGN5Y2xvbmVzLiBGb3IgaW5zdGFuY2UsICBhIGhpZ2hlci1sZXZlbCBlYXN0ZXJseSB3aW5kIGRyb3ZlIHRoZSBkZXByZXNzaW9uIG9mIEN5Y2xvbmUgT2NraGkgZnJvbSB0aGUgQmF5IG9mIEJlbmdhbCB0byB0aGUgQXJhYmlhbiAgU2VhLiAgIFNvdXJjZTogaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC9leHBsYWluZWQtaW4tY3ljbG9uZS10YXVrdGFlLWEtY29udGludWluZy0gbmV3LXRyZW5kLWZyb20tdGhlLWFyYWJpYW4tc2VhLTczMTc5MTMvICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only ",
        "option4" : "1,2, and 3       "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following pairs: Forest type             Region 1. Swamp Forest        grows along the coast 2. Alpine Forest            Himalayan mountain region 3. Tropical thorn forest     semi-arid regions of India Which of the pairs given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUGFpciAxIGlzIGNvcnJlY3QuIFN3YW1wIGZvcmVzdCBncm93cyBhbG9uZyB0aGUgY29hc3QsIGVzcGVjaWFsbHkgaW4gdGhlIHJpdmVyIGRlbHRhcy4gVGhlc2UgcGxhbnRzIGFyZSBhYmxlICB0byBncm93IGluIGEgbWl4IG9mIHNhbGluZSBhbmQgZnJlc2h3YXRlci4gU3VuZHJpIHNwZWNpZXMgZ3JvdyBhYnVuZGFudGx5IGluIHRoZXNlIGZvcmVzdHMgd2hpY2ggcHJvdmlkZSAgaGFyZCBhbmQgZHVyYWJsZSB0aW1iZXIuICBQYWlyIDIgaXMgY29ycmVjdC4gQWxwaW5lIEZvcmVzdHMgZ3JvdyBpbiB0aGUgSGltYWxheWFuIE1vdW50YWluIHJlZ2lvbiwgd2hlcmUgdGhlIHRlbXBlcmF0dXJlcyBhcmUgIGxvdy4gVGhlc2UgZm9yZXN0cyBoYXZlIHRhbGwgc3RhdGVseSB0cmVlcyB3aXRoIG5lZWRsZWxpa2UgbGVhdmVzIGFuZCBkb3dud2FyZCBzbG9waW5nIGJyYW5jaGVzIHNvIHRoYXQgdGhlICBzbm93IGNhbiBzbGlwIG9mZiB0aGUgYnJhbmNoZXMuIFJob2RvZGVuZHJvbnMsIEZpciwgU3BydWNlIGFuZCBwbHVtIGFyZSB2YXJpZXRpZXMgb2YgZmxvcmEgdGhhdCBjYW4gYmUgZm91bmQgIGhlcmUuICBQYWlyIDMgaXMgY29ycmVjdC4gVGhvcm4gRm9yZXN0cyBhcmUgZm91bmQgaW4gdGhlIHNlbWktYXJpZCByZWdpb25zIG9mIEluZGlhLiBUaGUgdHJlZXMsIHdoaWNoIGFyZSBzcGFyc2VseSAgZGlzdHJpYnV0ZWQsIGFyZSBzdXJyb3VuZGVkIGJ5IG9wZW4gZ3Jhc3N5IGFyZWFzLiBGYW1vdXMgZmxvcmEgc3BlY2llcyBhcmUgQWNhY2lhcywga2hhaXIsIHBhbGFzLCBraGVqcmEgYW5kICBiYWJ1bC4gICBTb3VyY2U6IEluZGlhIGEgY29tcHJlaGVuc2l2ZSBnZW9ncmFwaHkgYnkgRC5SLiBLaHVsbGFyIGNoYXB0ZXIgNiBwYWdlIDE2OS03NC4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 37,
      "question" : "Tamil Nadu coast remains relatively dry during the south-west monsoon period. What may be the possible reasons? 1.  The region lies in the rain shadow area of the Arabian Sea branch of the monsoon. 2.  Bay of Bengal branch of the monsoon flows parallel to the eastern coast. 3.  The Eastern Ghats are lower in altitude than the Western ghats. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGFtaWwgTmFkdSBpcyBsb2NhdGVkIG9uIHRoZSBlYXN0ZXJuIGNvYXN0IG9mIEluZGlhLiBTb3V0aCBJbmRpYSB1c3VhbGx5IHJlY2VpdmVzIHJhaW5mYWxsIGZyb20gc291dGggd2VzdCAgbW9uc29vbnMuIEJ1dCB0aGlzIHNvdXRoIHdlc3QgbW9uc29vbiBhcmlzaW5nIGZyb20gQXJhYmlhbiBTZWEgZ2V0cyBvYnN0cnVjdGVkIGJ5IFdlc3Rlcm4gR2hhdHMuICBNb25zb29uIHdpbmRzIGJleW9uZCBzb3V0aCBLZXJhbGEgcHJvZ3Jlc3MgaW4gdGhlIGZvcm0gb2YgdHdvIGJyYW5jaGVzIHZpei4gdGhlIEFyYWJpYW4gU2VhIGJyYW5jaCBhbmQgIHRoZSBCYXkgb2YgQmVuZ2FsIGJyYW5jaC4gIFN0YXRlbWVudCAxIGFuZCAyIGFyZSBjb3JyZWN0ICBUaGUgVGFtaWwgTmFkdSBjb2FzdCByZW1haW5zIHJlbGF0aXZlbHkgZHJ5IGR1cmluZyB0aGUgc291dGgtd2VzdCBtb25zb29uIHBlcmlvZCBiZWNhdXNlIG9mICByYWluIHNoYWRvdyBlZmZlY3Qgb2YgdGhlIEFyYWJpYW4gU2VhIGN1cnJlbnQgYW5kIEJheSBvZiBCZW5nYWwgY3VycmVudCB3aGljaCBmbG93cyBwYXJhbGxlbCB0byB0aGUgIGNvYXN0LiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdCAgIFRoZSBFYXN0ZXJuIEdoYXRzIGFyZSBsb3dlciBpbiBhbHRpdHVkZSB0aGFuIHRoZSBXZXN0ZXJuIGdoYXRzLiBEdWUgdG8gdGhpcyB0aGUgbW9uc29vbiByYWlucyBsb3NlIGl0cyAgbW9pc3R1cmUgb24gdGhlIHdlc3Rlcm4gc2xvcGVzIG9mIHRoZSBXZXN0ZXJuIEdoYXRzIGFuZCB0aGUgcmVzdCBvZiB0aGUgcGxhdGVhdSBhbmQgdGhlIGVhc3Rlcm4gZ2hhdHMgZ2V0cyAgc2NhbnR5IHJhaW5mYWxsLiBBcyBhIHJlc3VsdCwgVGFtaWwgTmFkdSAoQ2hlbm5haSkgZ2V0cyBsZXNzIHJhaW4gZmFsbCBkdXJpbmcgdGhlIFNvdXRoIFdlc3QgTW9uc29vbnMuICBUYW1pbCBOYWR1IHJlY2VpdmVzIGxlc3MgcmFpbmZhbGwgaW4gc3VtbWVyIGZyb20gdGhlIHNvdXRoLXdlc3QgbW9uc29vbiBhcyBpdCBsaWVzIGluIHRoZSBsZWV3YXJkIHNpZGUgb2YgIHRoZSBXZXN0ZXJuIEdoYXRzLiAgS25vd2xlZGdlIEJhc2U6ICAgSGVuY2UsIFRhbWlsIE5hZHUgcmVjZWl2ZXMgbW9zdCBvZiBpdHMgcmFpbiBmcm9tIG5vcnRoIGVhc3QgYW5kIHJldHJlYXRpbmcgbW9uc29vbnMgZHVyaW5nIHdpbnRlciBzZWFzb24uICBNb3Jlb3ZlciwgbWFueSBsb3ctcHJlc3N1cmUgc3lzdGVtcyBkZXZlbG9wIGluIHRoZSBCYXkgb2YgQmVuZ2FsIGR1cmluZyB0aGlzIHBlcmlvZCBhbmQgbW92ZSB0b3dhcmRzICB0aGUgZWFzdCBjb2FzdCBvZiBUYW1pbCBOYWR1IGNhdXNpbmcgaGVhdnkgcmFpbmZhbGwuICBTb3VyY2U6IGh0dHBzOi8vd3d3LnBtZmlhcy5jb20vc291dGgtd2VzdC1tb25zb29uLXNlYXNvbi1zb3V0aC13ZXN0LW1vbnNvb25zLWFyYWJpYW4tc2VhLSBicmFuY2gtYmF5LW9mLWJlbmdhbC1icmFuY2gvICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvaWVzczEwNC5wZGYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only ",
        "option3" : "1, 2 and 3  ",
        "option4" : "1 and 3 only  "
      }
    },
    {
      "index" : 38,
      "question" : "Match the following pairs with respect to various types of soils and regions where they are commonly found: Types of soils  Regions where they are commonly found 1. Red Soil  Bundelkhand and Kathiawar 2. Black or Regur Soil Upper reaches of the Godavari and the Krishna 3. Alluvial soil Western coastal plains 4. Peaty Soils Northern part of Bihar Which of the above pairs are correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT24gdGhlIGJhc2lzIG9mIGdlbmVzaXMsIGNvbG91ciwgY29tcG9zaXRpb24gYW5kIGxvY2F0aW9uLCB0aGUgc29pbHMgb2YgSW5kaWEgaGF2ZSBiZWVuIGNsYXNzaWZpZWQgaW50bzogKDEpICBBbGx1dmlhbCBzb2lscyAoMikgQmxhY2sgc29pbHMgKDMpIFJlZCBhbmQgWWVsbG93IHNvaWxzICg0KSBMYXRlcml0ZSBzb2lscyAoNSkgQXJpZCBzb2lscyAoNikgU2FsaW5lIHNvaWxzICg3KSBQZWF0eSAgc29pbHMgKDgpIEZvcmVzdCBzb2lscy4gICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICBSZWQgc29pbCBkZXZlbG9wcyBvbiBjcnlzdGFsbGluZSBpZ25lb3VzIHJvY2tzIGluIGFyZWFzIG9mIGxvdyByYWluZmFsbCBpbiB0aGUgZWFzdGVybiBhbmQgc291dGhlcm4gcGFydCBvZiAgdGhlIERlY2NhbiBQbGF0ZWF1LiBUaGV5IGFyZSBtYWlubHkgZm91bmQgaW4gdGhlIFBlbmluc3VsYSBmcm9tIFRhbWlsIE5hZHUgaW4gdGhlIHNvdXRoIHRvIEJ1bmRlbGtoYW5kICBpbiB0aGUgbm9ydGggYW5kIFJhaiBNYWhhbCBpbiB0aGUgZWFzdCB0byBLYXRoaWF3YWQgaW4gdGhlIHdlc3QuIEFsb25nIHRoZSBwaWVkbW9udCB6b25lIG9mIHRoZSBXZXN0ZXJuICBHaGF0LCBhIGxvbmcgc3RyZXRjaCBvZiBhcmVhIGlzIG9jY3VwaWVkIGJ5IHJlZCBsb2FteSBzb2lsLiBZZWxsb3cgYW5kIHJlZCBzb2lscyBhcmUgYWxzbyBmb3VuZCBpbiBwYXJ0cyBvZiAgT2Rpc2hhIGFuZCBDaGhhdHRpc2dhcmggYW5kIGluIHRoZSBzb3V0aGVybiBwYXJ0cyBvZiB0aGUgbWlkZGxlIEdhbmdhIHBsYWluLiBUaGUgc29pbCBkZXZlbG9wcyBhIHJlZGRpc2ggIGNvbG91ciBkdWUgdG8gYSB3aWRlIGRpZmZ1c2lvbiBvZiBpcm9uIGluIGNyeXN0YWxsaW5lIGFuZCBtZXRhbW9ycGhpYyByb2Nrcy4gSXQgbG9va3MgeWVsbG93IHdoZW4gaXQgb2NjdXJzICBpbiBhIGh5ZHJhdGVkIGZvcm0uIFRoZSBmaW5lLWdyYWluZWQgcmVkIGFuZCB5ZWxsb3cgc29pbHMgYXJlIG5vcm1hbGx5IGZlcnRpbGUsIHdoZXJlYXMgY29hcnNlLWdyYWluZWQgc29pbHMgIGZvdW5kIGluIGRyeSB1cGxhbmQgYXJlYXMgYXJlIHBvb3IgaW4gZmVydGlsaXR5LiBUaGV5IGFyZSBnZW5lcmFsbHkgcG9vciBpbiBuaXRyb2dlbiwgcGhvc3Bob3JvdXMgYW5kIGh1bXVzLiAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgQmxhY2sgc29pbCBjb3ZlcnMgbW9zdCBvZiB0aGUgRGVjY2FuIFBsYXRlYXUgd2hpY2ggaW5jbHVkZXMgcGFydHMgb2YgTWFoYXJhc2h0cmEsIE1hZGh5YSBQcmFkZXNoLCAgR3VqYXJhdCwgQW5kaHJhIFByYWRlc2ggYW5kIHNvbWUgcGFydHMgb2YgVGFtaWwgTmFkdS4gSW4gdGhlIHVwcGVyIHJlYWNoZXMgb2YgdGhlIEdvZGF2YXJpIGFuZCB0aGUgIEtyaXNobmEsIGFuZCB0aGUgbm9ydGggd2VzdGVybiBwYXJ0IG9mIHRoZSBEZWNjYW4gUGxhdGVhdSwgdGhlIGJsYWNrIHNvaWwgaXMgdmVyeSBkZWVwLiBUaGVzZSBzb2lscyBhcmUgYWxzbyAga25vd24gYXMgdGhlICdSZWd1ciBTb2lsJyBvciB0aGUgJ0JsYWNrIENvdHRvbiBTb2lsJy4gVGhlIGJsYWNrIHNvaWwgaXMgZ2VuZXJhbGx5IGNsYXlleSwgZGVlcCBhbmQgaW1wZXJtZWFibGUuICBUaGV5IHN3ZWxsIGFuZCBiZWNvbWUgc3RpY2t5IHdoZW4gd2V0IGFuZCBzaHJpbmsgd2hlbiBkcmllZC4gU28sIGR1cmluZyB0aGUgZHJ5IHNlYXNvbiwgdGhlc2Ugc29pbHMgIGRldmVsb3Agd2lkZSBjcmFja3MuIFRodXMsIHRoZXJlIG9jY3VycyBhIGtpbmQgb2YgJ3NlbGYtcGxvdWdoaW5nJy4gQmVjYXVzZSBvZiB0aGlzIGNoYXJhY3RlciBvZiBzbG93ICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgYWJzb3JwdGlvbiBhbmQgbG9zcyBvZiBtb2lzdHVyZSwgdGhlIGJsYWNrIHNvaWwgcmV0YWlucyB0aGUgbW9pc3R1cmUgZm9yIGEgdmVyeSBsb25nIHRpbWUsIHdoaWNoIGhlbHBzIHRoZSAgY3JvcHMsIGVzcGVjaWFsbHkgdGhlIHJhaW4gZmVkIG9uZXMsIHRvIHN1c3RhaW4gZXZlbiBkdXJpbmcgdGhlIGRyeSBzZWFzb24uIENoZW1pY2FsbHksIHRoZSBibGFjayBzb2lsIGlzIHJpY2ggIGluIGxpbWUsIGlyb24sIG1hZ25lc2lhIGFuZCBhbHVtaW5hLiBUaGV5IGFsc28gY29udGFpbiBwb3Rhc2guIEJ1dCB0aGV5IGxhY2sgcGhvc3Bob3J1cywgbml0cm9nZW4gYW5kICBvcmdhbmljIG1hdHRlci4gVGhlIGNvbG91ciBvZiB0aGUgc29pbCByYW5nZXMgZnJvbSBkZWVwIGJsYWNrIHRvIGdyZXkuICBQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuICBBbGx1dmlhbCBzb2lscyBhcmUgd2lkZXNwcmVhZCBpbiB0aGUgbm9ydGhlcm4gcGxhaW5zIGFuZCB0aGUgcml2ZXIgdmFsbGV5cy4gVGhpcyBzb2lsIGNvdmVycyBhYm91dCA0MCBwZXIgY2VudCAgb2YgdGhlIHRvdGFsIGFyZWEgb2YgdGhlIGNvdW50cnkuIFRoZXkgYXJlIGRlcG9zaXRpb25hbCBzb2lscywgdHJhbnNwb3J0ZWQgYW5kIGRlcG9zaXRlZCBieSByaXZlcnMgYW5kICBzdHJlYW1zLiAgIFRocm91Z2ggYSBuYXJyb3cgY29ycmlkb3IgaW4gUmFqYXN0aGFuLCB0aGV5IGV4dGVuZCBpbnRvIHRoZSBwbGFpbnMgb2YgR3VqYXJhdC4gSW4gdGhlIFBlbmluc3VsYXIgcmVnaW9uLCAgdGhleSBhcmUgZm91bmQgaW4gZGVsdGFzIG9mIHRoZSBlYXN0IGNvYXN0IGFuZCBpbiB0aGUgcml2ZXIgdmFsbGV5cy4gIFRoZSBhbGx1dmlhbCBzb2lsIG9jY3VycyBtYWlubHkgaW4gdGhlIFNhdGx1ai0gR2FuZ2EtIEJyYWhtYXB1dHJhIFBsYWlucy4gVGhleSBhcmUgYWxzbyBmb3VuZCBpbiB0aGUgdmFsbGV5cyAgb2YgdGhlIE5hcm1hZGEsIFRhcGksIGFuZCB0aGUgRWFzdGVybiBhbmQgV2VzdGVybiBjb2FzdGFsIHBsYWlucy4gICAgUGFpciA0IGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgUGVhdHkgU29pbHMgYXJlIGZvdW5kIGluIGFyZWFzIG9mIGhlYXZ5IHJhaW5mYWxsIGFuZCBoaWdoIGh1bWlkaXR5LCB3aGVyZSB0aGVyZSBpcyBhIGdvb2QgZ3Jvd3RoIG9mICB2ZWdldGF0aW9uLiBUaHVzLCBsYXJnZSBxdWFudGl0eSBvZiBkZWFkIG9yZ2FuaWMgbWF0dGVyIGFjY3VtdWxhdGVzIGluIHRoZXNlIGFyZWFzLCBhbmQgdGhpcyBnaXZlcyBhIHJpY2ggIGh1bXVzIGFuZCBvcmdhbmljIGNvbnRlbnQgdG8gdGhlIHNvaWwuIE9yZ2FuaWMgbWF0dGVyIGluIHRoZXNlIHNvaWxzIG1heSBnbyBldmVuIHVwIHRvIDQwLTUwIHBlciBjZW50LiAgVGhpcyBzb2lsIGlzIG5vcm1hbGx5IGhlYXZ5IGFuZCBibGFjayBpbiBjb2xvdXIuIEF0IG1hbnkgcGxhY2VzLCB0aGV5IGFyZSBhbGthbGluZSBhbHNvLiBJdCBvY2N1cnMgd2lkZWx5IGluICB0aGUgbm9ydGhlcm4gcGFydCBvZiBCaWhhciwgc291dGhlcm4gcGFydCBvZiBVdHRhcmFuY2hhbCBhbmQgdGhlIGNvYXN0YWwgYXJlYXMgb2YgV2VzdCBCZW5nYWwsIE9yaXNzYSAgYW5kIFRhbWlsIE5hZHUuICAgS25vd2xlZGdlIEJhc2U6ICAgIFNvdXJjZTogIGh0dHBzOi8vbmNlcnQubmljLmluL25jZXJ0cy9sL2tlZ3kxMDYucGRmICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "1, 2, 3 and 4 ",
        "option4" : "1, 3 and 4 only    \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following pairs: Local Storms in India - Associated regions 1. Mango Shower         - Coastal areas of Karnataka 2. Bardoli Chheerha    - Odisha and Telangana 3. Loo                            - Kerala and Tamil Nadu Which of the pairs given above is/are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQSBzdWRkZW4gY29udGFjdCBiZXR3ZWVuIGRyeSBhbmQgbW9pc3QgYWlyIG1hc3NlcyBnaXZlcyByaXNlIHRvIGxvY2FsIHN0b3JtcyBvZiBncmVhdCBpbnRlbnNpdHkuIFRoZXNlICBsb2NhbCBzdG9ybXMgYXJlIGFzc29jaWF0ZWQgd2l0aCB2aW9sZW50IHdpbmRzLCB0b3JyZW50aWFsIHJhaW5zIGFuZCBldmVuIGhhaWxzdG9ybXMuICBQYWlyIDEgaXMgY29ycmVjdDogICBNYW5nbyBTaG93ZXI6IFRvd2FyZHMgdGhlIGVuZCBvZiBzdW1tZXIsIHRoZXJlIGFyZSBwcmUtbW9uc29vbiBzaG93ZXJzIHdoaWNoIGFyZSBhIGNvbW1vbiAgcGhlbm9tZW5vbiBpbiBLZXJhbGEgYW5kIGNvYXN0YWwgYXJlYXMgb2YgS2FybmF0YWthLiBMb2NhbGx5LCB0aGV5IGFyZSBrbm93biBhcyBtYW5nbyBzaG93ZXJzIHNpbmNlICB0aGV5IGhlbHAgaW4gdGhlIGVhcmx5IHJpcGVuaW5nIG9mIG1hbmdvZXMuICBQYWlyIDIgaXMgaW5jb3JyZWN0OiAgIE5vciBXZXN0ZXJzOiBUaGVzZSBhcmUgZHJlYWRlZCBldmVuaW5nIHRodW5kZXJzdG9ybXMgaW4gQmVuZ2FsIGFuZCBBc3NhbS4gVGhlaXIgbm90b3Jpb3VzIG5hdHVyZSBjYW4gIGJlIHVuZGVyc3Rvb2QgZnJvbSB0aGUgbG9jYWwgbm9tZW5jbGF0dXJlIG9mICdLYWxiYWlzYWtoaScsIGEgY2FsYW1pdHkgb2YgdGhlIG1vbnRoIG9mIEJhaXNha2guIFRoZXNlICBzaG93ZXJzIGFyZSB1c2VmdWwgZm9yIHRlYSwganV0ZSBhbmQgcmljZSBjdWx0aXZhdGlvbi4gSW4gQXNzYW0sIHRoZXNlIHN0b3JtcyBhcmUga25vd24gYXMgJ0JhcmRvbGkgIENoaGVlcmhhJy4gIFBhaXIgMyBpcyBpbmNvcnJlY3Q6ICAgTG9vOiBIb3QsIGRyeSBhbmQgb3BwcmVzc2l2ZSB3aW5kcyBibG93aW5nIGluIHRoZSBOb3J0aGVybiBwbGFpbnMgZnJvbSBQdW5qYWIgdG8gQmloYXIgd2l0aCBoaWdoZXIgIGludGVuc2l0eSBiZXR3ZWVuIERlbGhpIGFuZCBQYXRuYS4gIEJsb3Nzb20gU2hvd2VyOiBXaXRoIHRoaXMgc2hvd2VyLCBjb2ZmZWUgZmxvd2VycyBibG9zc29tIGluIEtlcmFsYSBhbmQgbmVhcmJ5IGFyZWFzLiAgU291cmNlOiAxMXRoIE5DRVJUIFVuaXQgSUlJLSBDTElNQVRFLCBWRUdFVEFUSU9OIEFORCBTT0lMLCBDaGFwdGVyIDQgQ2xpbWF0ZSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1 and 3 only  "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to Tropical Evergreen Forests, consider the following statements: 1.  These are spread in the areas with rainfall between 100 to 200 cm annually. 2.  These forests are found in the rainier parts of the Peninsular plateau of India. 3.  The Cinchona, Indian laurel and Mesua Ferra are few commercially important trees found in this vegetation. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIG5hdHVyYWwgdmVnZXRhdGlvbiBvZiBhbiBhcmVhIGlzIGRldGVybWluZWQgYnkgY2xpbWF0ZSwgcGh5c2lvZ3JhcGhpYyBhbmQgc29pbCBmYWN0b3JzLiBJdCBpcyBiYXNlZCBvbiAgZmFjdG9ycyBvZiB0ZW1wZXJhdHVyZSwgcmFpbmZhbGwgYW5kIHRvcG9ncmFwaGljIGNvbmRpdGlvbnMgdGhhdCBwcm92aWRlIGl0IHdpdGggZGl2ZXJzaWZpY2F0aW9uLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgVHJvcGljYWwgRXZlcmdyZWVuIGZvcmVzdHMgYXJlIGZvdW5kIGluIHRoZSBhcmVhcyBoYXZpbmcgbW9yZSB0aGFuIDIwMCBjbSAgb2YgcmFpbmZhbGwgd2l0aCBhIHNob3J0IGRyeSBzZWFzb24uIFdoaWxlIHRoZSBUcm9waWNhbCBNb2lzdCBEZWNpZHVvdXMgZm9yZXN0cyBhcmUgZm91bmQgaW4gYXJlYXMgb2YgcmFpbmZhbGwgIGJldHdlZW4gMTAwIHRvIDIwMCBjbS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gIFRoZSBUcm9waWNhbCBFdmVyZ3JlZW4gZm9yZXN0cyBpbiBJbmRpYSBhcmUgcmVzdHJpY3RlZCB0byBoZWF2eSByYWluZmFsbCBhcmVhcyBvZiAgdGhlIFdlc3Rlcm4gR2hhdHMgYW5kIHRoZSBpc2xhbmQgZ3JvdXBzIG9mIExha3NoYWR3ZWVwLCBBbmRhbWFuIGFuZCBOaWNvYmFyLCB1cHBlciBwYXJ0cyBvZiBBc3NhbSAgYW5kIFRhbWlsIE5hZHUgY29hc3QuIEJ1dCB0aGUgcmFpbmllciBwYXJ0cyBvZiB0aGUgUGVuaW5zdWxhciBwbGF0ZWF1IG9mIEluZGlhIGhhdmUgdGhlIFRyb3BpY2FsIERyeSAgRGVjaWR1b3VzIGZvcmVzdHMuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgVHJvcGljYWwgRXZlcmdyZWVuIGZvcmVzdHMgY29uc2lzdHMgb2Ygc2V2ZXJhbCBzcGVjaWVzIG9mIGNvbW1lcmNpYWxseSAgaW1wb3J0YW50IHRyZWVzIHdoaWNoIGNvbXByaXNlcyBSb3Nld29vZCwgZWJvbnksIG1haG9nYW55LCBydWJiZXIsIGphY2sgd29vZCwgYmFtYm9vLCBhbmQgQ2luY2hvbmEgICh0aGUgYmFyayBvZiB0aGUgdHJlZSBjb250YWlucyBxdWluaW5lIGFuZCBpcyB1c2VmdWwgZm9yIHRyZWF0bWVudCBvZiBtYWxhcmlhKSwgSW5kaWFuIExhdXJlbCAodXNlZCBmb3IgbWFyaW5lICBjb25zdHJ1Y3Rpb24gYW5kIHBpbGluZywgYm9hdCBidWlsZGluZywgZnVybml0dXJlIGNvbnN0cnVjdGlvbiBldGMuKSBhbmQgTWVzdWEgRmVyYSAoYSB3ZWxsLWtub3duICBtZWRpY2luYWwgcGxhbnQgd2lkZWx5IHVzZWQgaW4gYW5lbWlhLCBwaWxlcywgYnVybmluZyBmZWV0LCBza2luIGRpc2Vhc2VzIGV0Yy4pICBTb3VyY2U6IGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NlY1NvY1NjaUNvdXIvRW5nbGlzaC9MZXNzb24tMTEucGRmICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9pZXNzMTA1LnBkZiAgaHR0cHM6Ly92aWthc3BlZGlhLmluL2FncmljdWx0dXJlL2Nyb3AtcHJvZHVjdGlvbi9wYWNrYWdlLW9mLXByYWN0aWNlcy9tZWRpY2luYWwtYW5kLWFyb21hdGljLSBwbGFudHMvbWVzdWEtZmVycmVhICBodHRwczovL2Fncml0ZWNoLnRuYXUuYWMuaW4vZm9yZXN0cnkvZm9yZXN0X2luZGlhX3R5cGVzLmh0bWwgKGltYWdlKSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "3 only  "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following are features of Black soil? 1.  It is rich in lime and magnesium but poor in nitrogen and phosphorous. 2.  The absence of ferric oxides makes the color of soil Black. 3.  The black cotton soil of India has been formed due to weathering of basaltic rocks. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIEJsYWNrIHNvaWxzIGFyZSBtaW5lcmFsIHNvaWxzIHdoaWNoIGhhdmUgYSBibGFjayBzdXJmYWNlIGhvcml6b24sIGVucmljaGVkIHdpdGggb3JnYW5pYyBjYXJib24gdGhhdCBpcyBhdCAgbGVhc3QgMjUgY20gZGVlcC4gQmxhY2sgc29pbCBjb3ZlcnMgbW9zdCBvZiB0aGUgRGVjY2FuIFBsYXRlYXUgd2hpY2ggaW5jbHVkZXMgcGFydHMgb2YgTWFoYXJhc2h0cmEsIE1hZGh5YSAgUHJhZGVzaCwgR3VqYXJhdCwgQW5kaHJhIFByYWRlc2ggYW5kIHNvbWUgcGFydHMgb2YgVGFtaWwgTmFkdS4gSW4gdGhlIHVwcGVyIHJlYWNoZXMgb2YgdGhlIEdvZGF2YXJpIGFuZCAgdGhlIEtyaXNobmEsIGFuZCB0aGUgbm9ydGggd2VzdGVybiBwYXJ0IG9mIHRoZSBEZWNjYW4gUGxhdGVhdSwgdGhlIGJsYWNrIHNvaWwgaXMgdmVyeSBkZWVwLiBUaGVzZSBzb2lscyBhcmUgIGFsc28ga25vd24gYXMgdGhlICdSZWd1ciBTb2lsJyBvciB0aGUgJ0JsYWNrIENvdHRvbiBTb2lsJy4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIENoZW1pY2FsbHksIHRoZSBibGFjayBzb2lsIGlzIHJpY2ggaW4gbGltZSwgaXJvbiwgbWFnbmVzaWEgYW5kIGFsdW1pbmEuIFRoZXkgYWxzbyAgY29udGFpbiBwb3Rhc2guIEJ1dCB0aGV5IGxhY2sgcGhvc3Bob3J1cywgbml0cm9nZW4gYW5kIG9yZ2FuaWMgbWF0dGVyLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgY29sb3VyIG9mIHRoZSBzb2lsIHJhbmdlcyBmcm9tIGRlZXAgYmxhY2sgdG8gZ3JleS4gVGhlIGJsYWNrIGNvbG91ciBvZiB0aGUgc29pbCAgaXMgZHVlIHRvIHRoZSBwcmVzZW5jZSBvZiBpcm9uLCBhbHVtaW5pdW0gYW5kIGh1bXVzLiAgVGhlIGJsYWNrIGNvbG91ciBpcyBkdWUgdG8gdGhlIHByZXNlbmNlIG9mIGEgc21hbGwgIHByb3BvcnRpb24gb2YgdGl0YW5pZmVyb3VzIG1hZ25ldGl0ZSBvciBpcm9uIGFuZCBibGFjayBjb25zdGl0dWVudHMgb2YgdGhlIHBhcmVudCByb2NrLiBIdW11cyBpcyB0aGUgZGFyayAgb3JnYW5pYyBtYXR0ZXIgdGhhdCBmb3JtcyBpbiBzb2lsIHdoZW4gZGVhZCBwbGFudCBhbmQgYW5pbWFsIG1hdHRlciBicmVha3MgZG93biBmdXJ0aGVyIHRocm91Z2ggdGhlICBhY3Rpb24gb2YgYW5hZXJvYmljIG9yZ2FuaXNtcy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICBCYXNhbHQgaXMgYW4gYXBoYW5pdGljIGV4dHJ1c2l2ZSBpZ25lb3VzIHJvY2sgZm9ybWVkIGZyb20gdGhlIHJhcGlkIGNvb2xpbmcgb2YgbG93LSB2aXNjb3NpdHkgbGF2YSByaWNoIGluIG1hZ25lc2l1bSBhbmQgaXJvbiBleHBvc2VkIGF0IG9yIHZlcnkgbmVhciB0aGUgc3VyZmFjZS4gVGhlIGJsYWNrIHNvaWwgaXMgZm9ybWVkIGR1ZSAgdG8gd2VhdGhlcmluZyBvZiBiYXNhbHRpYyByb2NrcyB3aGljaCBlbWVyZ2VkIGR1cmluZyBmaXNzdXJlIGVydXB0aW9uIG9mIHRoZSBDcmV0YWNlb3VzIHBlcmlvZC4gVGhlICBwYXJlbnQgbWF0ZXJpYWwgZm9yIG1vc3Qgb2YgdGhlIGJsYWNrIHNvaWwgYXJlIHRoZSB2b2xjYW5pYyByb2NrcyB0aGF0IHdlcmUgZm9ybWVkIGluIHRoZSBEZWNjYW4gUGxhdGVhdSAgKERlY2NhbiBhbmQgdGhlIFJham1haGFsIHRyYXApLiBJbiBUYW1pbCBOYWR1LCBnbmVpc3NlcyBhbmQgc2NoaXN0cyBmb3JtIHRoZSBwYXJlbnQgbWF0ZXJpYWwuIFRoZSBmb3JtZXIgIGlzIHN1ZmZpY2llbnRseSBkZWVwIHdoaWxlIHRoZSBsYXRlciBhcmUgZ2VuZXJhbGx5IHNoYWxsb3cuICBLbm93bGVkZ2UgQmFzZTogSW4gZ2VuZXJhbCwgYmxhY2sgc29pbHMgb2YgdXBsYW5kcyBhcmUgb2YgbG93IGZlcnRpbGl0eSB3aGlsZSB0aG9zZSBpbiB0aGUgdmFsbGV5cyBhcmUgdmVyeSAgZmVydGlsZS4gIFRoZSBibGFjayBzb2lsIGlzIGhpZ2hseSByZXRlbnRpdmUgdG8gbW9pc3R1cmUuIEl0IHN3ZWxscyBncmVhdGx5IG9uIGFjY3VtdWxhdGluZyBtb2lzdHVyZS4gU3RyZW51b3VzIGVmZm9ydCAgaXMgcmVxdWlyZWQgdG8gd29yayBvbiBzdWNoIHNvaWwgaW4gdGhlIHJhaW55IHNlYXNvbiBhcyBpdCBnZXRzIHZlcnkgc3RpY2t5LiAgSW4gc3VtbWVyLCB0aGUgbW9pc3R1cmUgZXZhcG9yYXRlcyB0aGUgc29pbCBzaHJpbmtzIGFuZCBpcyBzZWFtZWQgd2l0aCBicm9hZCBhbmQgZGVlcCBjcmFja3MuIFRoZSBsb3dlciAgbGF5ZXJzIGNhbiBzdGlsbCByZXRhaW4gbW9pc3R1cmUuIFRoZSBjcmFja3MgcGVybWl0IG94eWdlbmF0aW9uIG9mIHRoZSBzb2lsIHRvIHN1ZmZpY2llbnQgZGVwdGhzIGFuZCB0aGUgc29pbCAgaGFzIGV4dHJhb3JkaW5hcnkgZmVydGlsaXR5LiAgV2hlbiBkcnksIGl0IGRldmVsb3BzIGNyYWNrcyBhbmQgaGFzIGJsb2NreSBzdHJ1Y3R1cmUuIChTZWxmLVBsb3VnaGluZyBDYXBhY2l0eSkgIFNvdXJjZTogIGh0dHA6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS82OTYwNy8xL1VuaXQtNy5wZGYgIE5DRVJUIElORElBOiBQSFlTSUNBTCBFTlZJUk9OTUVOVCBwYWdlIDY5LTcxICBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MTA2LnBkZiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 42,
      "question" : "Which of the following factors are responsible for causing break in Indian monsoon? 1.  Lack of rain-bearing storms along the ITCZ 2.  Formation of cyclonic depression over Bay of Bengal 3.  Winds blowing parallel to the coast of India Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgRHVyaW5nIHRoZSBzb3V0aC13ZXN0IG1vbnNvb24gcGVyaW9kIGFmdGVyIGhhdmluZyByYWlucyBmb3IgYSBmZXcgZGF5cywgaWYgcmFpbiBmYWlscyB0byBvY2N1ciBmb3Igb25lIG9yICBtb3JlIHdlZWtzLCBpdCBpcyBrbm93biBhcyBicmVhayBpbiB0aGUgbW9uc29vbi4gVGhlc2UgZHJ5IHNwZWxscyBhcmUgcXVpdGUgY29tbW9uIGR1cmluZyB0aGUgcmFpbnkgIHNlYXNvbi4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJbiBub3J0aGVybiBJbmRpYSByYWlucyBhcmUgbGlrZWx5IHRvIGZhaWwgaWYgdGhlIHJhaW4tYmVhcmluZyBzdG9ybXMgYXJlIG5vdCB2ZXJ5ICBmcmVxdWVudCBhbG9uZyB0aGUgbW9uc29vbiB0cm91Z2ggb3IgdGhlIElUQ1ogb3ZlciB0aGlzIHJlZ2lvbi4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgYnJlYWtzIGluIHJhaW5mYWxsIGFyZSByZWxhdGVkIHRvIHRoZSBjeWNsb25pYyBkZXByZXNzaW9ucyBtYWlubHkgZm9ybWVkIGF0IHRoZSAgaGVhZCBvZiB0aGUgQmF5IG9mIEJlbmdhbCwgYW5kIHRoZWlyIGNyb3NzaW5nIGludG8gdGhlIG1haW5sYW5kLiBCZXNpZGVzIHRoZSBmcmVxdWVuY3kgYW5kIGludGVuc2l0eSBvZiAgdGhlc2UgZGVwcmVzc2lvbnMsIHRoZSBwYXNzYWdlIGZvbGxvd2VkIGJ5IHRoZW0gZGV0ZXJtaW5lcyB0aGUgc3BhdGlhbCBkaXN0cmlidXRpb24gb2YgcmFpbmZhbGwuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBPdmVyIHRoZSB3ZXN0IGNvYXN0IHRoZSBkcnkgc3BlbGxzIGFyZSBhc3NvY2lhdGVkIHdpdGggZGF5cyB3aGVuIHdpbmRzIGJsb3cgIHBhcmFsbGVsIHRvIHRoZSBjb2FzdC4gICBTb3VyY2U6IEdlb2dyYXBoeSwgSW5kaWE6IFBoeXNpY2FsIEVudmlyb25tZW50LCBOQ0VSVCBYSSwgQ2hhcHRlci00LCBQZy4gNDAsIDQ5ICAgICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "1 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following pairs: Peninsular Plateaus in India  River that drains in the region 1. Baghelkhand Plateau  Son River 2. Madhya Bharat Plateau (Central Highland) Tungabhadra River 3. Chota Nagpur Plateau  Subarnarekha River  4. Malwa Plateau  Narmada River Which of the pairs given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIHBlbmluc3VsYXIgcGxhdGVhdSBpcyBhIHBhcnQgb2YgdGhlIHBlbmluc3VsYXIgSW5kaWFuIGxhbmRtYXNzIHRoYXQgaXMgc3Vycm91bmRlZCBieSBzZWFzLiBNb3N0IG9mIHRoZSAgcGVuaW5zdWxhciBsYW5kbWFzcyBpcyBhIHBsYXRlYXUuIEl0J3MgYW4gdXBsaWZ0ZWQgYmxvY2sgY2FsbGVkIHRoZSBIb3JzdCwgY3JlYXRlZCBieSB0d28gZmF1bHRzIGluIHRoZSB3ZXN0ICBhbmQgZWFzdCBjb2FzdHMuICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuICBCYWdoZWxraGFuZCBwbGF0ZWF1OiBJdCBpcyBzaXR1YXRlZCBpbiB0aHJlZSBTdGF0ZXMgLSBVUCwgTVAsIGFuZCBDaGhhdHRpc2dhcmguIFNvbiByaXZlciBkcmFpbnMgdGhlIHJlZ2lvbiwgIG9uIHdoaWNoIHRoZSBSaWhhbmQgRGFtIGFuZCBHb3ZpbmQgVmFsbGFiaCBQYW50IFNhZ2FyIHJlc2Vydm9pciAobGFyZ2VzdCBtYW5tYWRlIGxha2UgaW4gSW5kaWEpIHdlcmUgIGJ1aWx0LiBUaGUgcGxhdGVhdSBjb250YWlucyBEaGFyd2FyIGFuZCBHb25kd2FuYSByb2Nrcy4gSXQgc2VwYXJhdGVzIHRoZSBHYW5nYSBiYXNpbiBmcm9tIHRoZSBNYWhhbmFkaSAgYmFzaW4uICBQYWlyIDIgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZC4gIE1hZGh5YSBCaGFyYXQgUGF0aGFyOiBJdCBpcyBhbHNvIGtub3duIGFzIHRoZSBDZW50cmFsIEhpZ2hsYW5kLiBSaXZlciBDaGFtYmFsIGRyYWlucyB0aGUgcmVnaW9uIHdoaWNoICBmbG93cyBpbiBhIHJpZnQgdmFsbGV5LiBLYWxpLVNpbmRoLCBCYW5hcywgYW5kIFBhcmJhdGkgYXJlIHRoZSB0cmlidXRhcmllcyBvZiBDaGFtYmFsIHdoaWNoIGFsc28gZHJhaW4gdGhlICByZWdpb24uIEl0IGxpZXMgdG8gdGhlIGVhc3Qgb2YgTWFyd2FyIHVwbGFuZC4gIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gIENob3RhIE5hZ3B1ciBwbGF0ZWF1OiBJdCdzIGEgY29udGluZW50YWwgcGxhdGVhdSwgd2l0aCBIaW1hbGF5YXMgKFNoaXdhbGlrcykgdG8gaXRzIG5vcnRoLCBhbmQgaGF2aW5nIHRoZSAgZHJhaW5hZ2Ugc3lzdGVtcyBvZiBEYW1vZGFyLCBTdWJhcm5hcmVraGEsIE5vcnRoIEtvZWwsIGFuZCBTb3V0aCBLb2VsIHdoaWNoIGVtcHR5IGludG8gdGhlIEJheSBvZiAgQmVuZ2FsLiBIaW1hbGF5YW4gdXBsaWZ0IHJlc3VsdGVkIGluIHRoZSBkb3duIGJ1Y2tsaW5nIG9mIHRoZSBwbGF0ZWF1IHdoaWNoIGNyZWF0ZWQgYSB0cm91Z2ggaW4gd2hpY2ggdGhlICBhbGx1dmlhbCBzZWRpbWVudHMgZnJvbSB0aGUgSGltYWxheWFuIHJpdmVycyBnb3QgZGVwb3NpdGVkLiBUaGlzIGluY2x1ZGVzIHRoZSBwcmVzZW50LWRheSBHYW5nYSBiYXNpbi4gIFBhaXIgNCBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gIE1hbHdhIHBsYXRlYXU6IExvY2F0ZWQgaW1tZWRpYXRlbHkgdG8gdGhlIGVhc3Qgb2YgdGhlIEFyYXZhbGxpcywgbW9zdCBvZiB0aGUgcGxhdGVhdSBpcyBzaXR1YXRlZCBpbiBNYWRoeWEgIFByYWRlc2ggYW5kIFJhamFzdGhhbiBOYXJtYWRhIFJpZnQgVmFsbGV5IGlzIHRoZSBtb3N0IHByb21pbmVudCBzdHJ1Y3R1cmUgb2YgdGhpcyBwbGF0ZWF1ICBJdCBoYXMgdGhlIGRyYWluYWdlIHN5c3RlbXMgb2YgdGhlIEJheSBvZiBCZW5nYWwgKENoYW1iYWwsIFNpbmRoLCBCZXR3YSwgUGFyYmF0aSBqb2luIHRoZSBZYW11bmEsIHdoaWNoIGluICB0dXJuIGpvaW5zIHRoZSBHYW5nYSkgYW5kIHRoZSBBcmFiaWFuIFNlYSAoTmFybWFkYSwgVGFwdGksIE1haGkpLiAgIFNvdXJjZTogTWFsd2EgUGxhdGVhdSB8IHBsYXRlYXUsIEluZGlhIHwgQnJpdGFubmljYSAgUGVuaW5zdWxhciBJbmRpYTogOSBNYWpvciBQbGF0ZWF1cyBvZiB0aGUgUGVuaW5zdWxhciBJbmRpYSAoeW91cmFydGljbGVsaWJyYXJ5LmNvbSkgICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "1, 3 and 4 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "2 and 4 only  "
      }
    },
    {
      "index" : 44,
      "question" : "'Satpura Mountain Range is a series of seven mountains ranges or folds'. In this context, which one of the following is not the part of the Satpura Mountain range? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU2F0cHVyYSByYW5nZSBpcyBhIHNlcmllcyBvZiBzZXZlbiBtb3VudGFpbnMgKCdTYXQnID0gc2V2ZW4gYW5kICdwdXJhJyA9IG1vdW50YWlucykuIEl0IHJ1bnMgaW4gYW4gZWFzdC13ZXN0ICBkaXJlY3Rpb24gc291dGggb2YgdGhlIFZpbmRoeWFzIGFuZCBpbiBiZXR3ZWVuIHRoZSBOYXJtYWRhIGFuZCB0aGUgVGFwaSwgcm91Z2hseSBwYXJhbGxlbCB0byB0aGVzZSByaXZlcnMuICBJdCBzdHJldGNoZXMgZm9yIGEgZGlzdGFuY2Ugb2YgYWJvdXQgOTAwIGttLiBQYXJ0cyBvZiB0aGUgU2F0cHVyYXMgaGF2ZSBiZWVuIGZvbGRlZCBhbmQgdXBoZWF2ZWQuIFRoZXkgYXJlICByZWdhcmRlZCBhcyBzdHJ1Y3R1cmFsIHVwbGlmdCBvciAnaG9yc3QnLiAgVGhlIHNldmVuIG1vdW50YWluIHJhbmdlcyBvciBmb2xkcyBvZiBTYXRwdXJhJ3MgYXJlOiBNYWlrYWwsIE1haGFkZW8gSGlsbHMsIEthbGliaGl0LCBBc2lyZ2FyaCwgQmlqYWdhcmgsICBCYXJ3YW5pLCBBcndhbmkuICBCYW5hc3VyYSBIaWxsIGlzIG9uZSBvZiB0aGUgdGFsbGVzdCBtb3VudGFpbnMgaW4gdGhlIFdlc3Rlcm4gR2hhdHMgb2YgdGhlIFdheWFuYWQgZGlzdHJpY3QsIEtlcmFsYSwgSW5kaWEuICBUaGUgaGlsbCBpcyBuYW1lZCBhZnRlciBCYW5hc3VyYSwgYSBteXRoaWNhbCBjaGFyYWN0ZXIgb2YgSW5kaWFuIGxlZ2VuZHMuIEl0IGlzIG9uZSBvZiB0aGUgaGlnaGVzdCBwZWFrcyAgZXhjZWVkaW5nIDIsMDAwbSBiZXR3ZWVuIE5pbGdpcmlzIGFuZCBIaW1hbGF5YXMgYWZ0ZXIgQ2hlbWJyYSBQZWFrLiAgU291cmNlOiBNb3VudGFpbiBTeXN0ZW1zIGluIEluZGlhIC0gc3VicmF0YWNoYWsgKHdvcmRwcmVzcy5jb20pICBTYXRwdXJhIFJhbmdlIHwgaGlsbHMsIEluZGlhIHwgQnJpdGFubmljYSAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Maikal  ",
        "option2" : "Mahadeo Hills ",
        "option3" : "Banasura Hills ",
        "option4" : "Kalibhit  "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1.  Radcliffe Line demarcated the present border between India and Bangladesh.  2.  The boundary line between India and China in Arunachal Pradesh is referred as Durand line. 3.  The Kali River forms the boundary between India and Nepal in Uttarakhand region. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gIFJhZGNsaWZmIExpbmUgaGFkIGRpdmlkZWQgQnJpdGlzaCBJbmRpYSBpbnRvIHRocmVlIHBhcnRzIC0gV2VzdCBQYWtpc3RhbiwgSW5kaWEgYW5kIEVhc3QgUGFraXN0YW4uIEJ1dCBpbiAgMTk3MSwgdGhlIEJlbmdhbGkgcGVvcGxlIGluIEVhc3QgUGFraXN0YW4gcmViZWxsZWQgYWdhaW5zdCB0aGVpciBXZXN0IFBha2lzdGFuaSBydWxlcnMuIEFzIGEgcmVzdWx0LCBhIG5ldyAgY291bnRyeSBjYW1lIGludG8gYmVpbmcgYW5kIGlzIGtub3duIGFzIEJhbmdsYWRlc2guICBUaGUgc2FtZSBSYWRjbGlmZmUgTGluZSB3aGljaCBzZXBhcmF0ZWQgSW5kaWEgYW5kIHRoZSB0aGVuIEVhc3QgUGFraXN0YW4gaXMgdGhlIHByZXNlbnQgYm9yZGVyIGJldHdlZW4gIEluZGlhIGFuZCBCYW5nbGFkZXNoLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuICBUaGUgMSwxNDAga20gbG9uZyBib3VuZGFyeSBiZXR3ZWVuIEluZGlhIGFuZCBDaGluYSBydW5zIGZyb20gdGhlIGVhc3Rlcm4gbGltaXQgb2YgQmh1dGFuIHRvIGEgcG9pbnQgbmVhciAgRGlwaHUgcGFzcyAoVGFsdSBQYXNzKSBhdCB0aGUgdHJpanVuY3Rpb24gb2YgSW5kaWEsIFRpYmV0IGFuZCBNeWFubWFyLiAgVGhpcyBsaW5lIGlzIHVzdWFsbHkgcmVmZXJyZWQgdG8gYXMgdGhlIE1jIE1haG9uIExpbmUgYWZ0ZXIgU2lyIEhlbnJ5IE1jIE1haG9uLCB0aGVuIGZvcmVpZ24gc2VjcmV0YXJ5ICBvZiBCcml0aXNoIEluZGlhLCB3aG8gbmVnb3RpYXRlZCB0aGUgYm91bmRhcnkgYWdyZWVtZW50IGJldHdlZW4gR3JlYXQgQnJpdGFpbiBhbmQgVGliZXQgYXQgU2hpbWxhICBhY2NvcmQgaW4gMTkxMy0xNC4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICAgVGhlIER1cmFuZCBMaW5lIGlzIHRoZSAyLDQzMC1raWxvbWV0cmUgaW50ZXJuYXRpb25hbCBib3JkZXIgYmV0d2VlbiBQYWtpc3RhbiBhbmQgQWZnaGFuaXN0YW4uIFNpciAgTW9ydGltZXIgRHVyYW5kIGhhZCBkcmF3biB0aGlzIGxpbmUgaW4gMTg5MyBiZXR3ZWVuIEFmZ2hhbmlzdGFuIGFuZCB0aGVuIEJyaXRpc2ggSW5kaWEsIHdoaWNoIGxhdGVyIGdvdCAgZGl2aWRlZCBpbnRvIHR3byBjb3VudHJpZXMgSW5kaWEgYW5kIFBha2lzdGFuIGluIDE5NDcuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gIFRoZSBLYWxhcGFuaSB0ZXJyaXRvcnkgaXMgYW4gYXJlYSB1bmRlciBJbmRpYW4gYWRtaW5pc3RyYXRpb24gYXMgcGFydCBvZiBQaXRob3JhZ2FyaCBkaXN0cmljdCBpbiB0aGUgS3VtYW9uICBEaXZpc2lvbiBvZiB0aGUgVXR0YXJha2hhbmQgc3RhdGUuIFRoZSBLYWxpIFJpdmVyIGZvcm1zIHRoZSBib3VuZGFyeSBiZXR3ZWVuIEluZGlhIGFuZCBOZXBhbCBpbiB0aGlzICByZWdpb24uICAgU291cmNlOiBGcm9tIER1cmFuZCBUbyBSYWRjbGlmZmUgQW5kIE1hY01vaGFuLCBUaGVzZSBBcmUgVGhlIExpbmVzIFRoYXQgRGl2aWRlZCBJbmRpYW4gU3ViY29udGluZW50ICBBbmQgQ2FydmVkIE5ldyBUZXJyaXRvcmllcyAoaW5kaWF0aW1lcy5jb20pICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1 and 3 only      \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 46,
      "question" : "Which of the following pairs of water bodies and the land masses separated by them is/ are correctly matched? Water Body  Landmass Separated 1. Eight Degree Channel  Minicoy and Maldives Islands 2. Nine Degree Channel  North Andaman and South Andaman Islands  3. Ten Degree Channel  Andaman Islands and Nicobar Islands Select the correct option using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUGFpciAxIGlzIGNvcnJlY3Q6IFRoZSBNaW5pY295IElzbGFuZCBvZiBMYWtzaGFkd2VlcCBncm91cCBhbmQgTWFsZGl2ZXMgaXNsYW5kcyBhcmUgc2VwYXJhdGVkIGJ5IGEgdGhpbiAgYm9keSBvZiB3YXRlciBjYWxsZWQgdGhlIEVpZ2h0IERlZ3JlZSBDaGFubmVsLiAgUGFpciAyIGlzIGluY29ycmVjdDogVGhlIE5pbmUgRGVncmVlIENoYW5uZWwgaXMgYSB0aGluIGJvZHkgb2Ygd2F0ZXIgd2hpY2ggc2VwYXJhdGVzIHRoZSBBbWluZGl2aSBpc2xhbmRzICBmcm9tIHRoZSBNaW5pY295IGlzbGFuZHMgb2YgTGFrc2hhZHdlZXAgZ3JvdXAuICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgIFBhaXIgMyBpcyBjb3JyZWN0OiBUaGUgVGVuIERlZ3JlZSBDaGFubmVsIHNlcGFyYXRlcyB0aGUgTGl0dGxlIEFuZGFtYW4gSXNsYW5kIG9mIEFuZGFtYW4gZ3JvdXAgZnJvbSAgdGhlIENhciBOaWNvYmFyIElzbGFuZCBvZiBOaWNvYmFyIGdyb3VwIG9mIGlzbGFuZHMgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 47,
      "question" : "The tropic of cancer passes through which of the following states in India? 1. Rajasthan 2. Madhya Pradesh 3. Odisha 4. Tripura 5. Manipur Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVHJvcGljIG9mIENhbmNlciBpcyBhbiBpbWFnaW5hcnkgbGluZSwgYXQgYW4gYW5nbGUgb2YgMjMuMzAgZGVncmVlcyBub3J0aCBmcm9tIHRoZSBFcXVhdG9yLiBJdCBkaXZpZGVzIHRoZSAgY291bnRyeSBpbnRvIGFsbW9zdCB0d28gZXF1YWwgcGFydHMuICBPcHRpb24gYiBpcyBjb3JyZWN0OiBUaGUgVHJvcGljIG9mIENhbmNlciBwYXNzZXMgdGhyb3VnaCBlaWdodCBzdGF0ZXMgaW4gSW5kaWE6IEd1amFyYXQgKEphc2RhbiksIFJhamFzdGhhbiAgKEthbGluamFyaCksIE1hZGh5YSBQcmFkZXNoIChTaGFqYXB1ciksIENoaGF0dGlzZ2FyaCAoU29uaGF0KSwgSmhhcmtoYW5kIChMb2hhcmRhZ2EpLCBXZXN0IEJlbmdhbCAgKEtyaXNobmFuYWdhciksIFRyaXB1cmEgKFVkYWlwdXIpIGFuZCBNaXpvcmFtIChDaGFtcGhhaSkgaW4gdGhhdCBvcmRlci4gICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgIEtub3dsZWRnZSBCYXNlOiAgIDEpIE1haGkgUml2ZXIgaXMgdGhlIG9ubHkgcml2ZXIgaW4gSW5kaWEgdGhhdCBjdXRzIHRoZSBUcm9waWMgb2YgQ2FuY2VyIHR3aWNlLCBmaXJzdCBpbiBNYWRoeWEgUHJhZGVzaCBmcm9tICB3aGVyZSBpdCBmbG93cyB0b3dhcmRzIFJhamFzdGhhbiBhbmQgZW50ZXJzIEd1amFyYXQgd2hlcmUgaXQgY3V0cyBmb3IgdGhlIHNlY29uZCB0aW1lLiAgMikgVWRhaXB1ciBpbiBUcmlwdXJhIGlzIHRoZSBjaXR5IG5lYXJlc3QgdG8gdGhlIFRyb3BpYyBvZiBDYW5jZXIuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cub3V0bG9va2luZGlhLmNvbS9vdXRsb29rdHJhdmVsbGVyL2V4cGxvcmUvc3RvcnkvNjk0MjcvZmFjdHMtYWJvdXQtaW5kaWEtYW5kLSB0aGUtdHJvcGljLW9mLWNhbmNlciAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3 and 5 only ",
        "option2" : "1, 2 and 4 only ",
        "option3" : "2, 3, 4 and 5 only ",
        "option4" : "1, 2, 3, 4 and 5  "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to physical and structural features associated with Indian subcontinent, consider the following statements:  1.  Tibetan Plateau is the result of folding caused by compression forces of Kunlun Mountains in the north and Himalayas in the south.  2.  According to Alfred Wegner, the Indian subcontinent was originally a part of Angara land.  3.  The Himalayas is the outcome of compression of Tethys Sea by Eurasian and Indian plate.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEluZGlhbiBTdWJjb250aW5lbnQgc2hvd3MgYSBodWdlIGRpdmVyc2l0eSBpbiBwaHlzaWNhbCBhbmQgc3RydWN0dXJhbCBmZWF0dXJlcyBhcyBpdHMgbGFuZCBjb21wcmlzZXMgIHZhcmlvdXMgbmF0dXJhbCBmZWF0dXJlcyBsaWtlIHNub3ctY2xhZCBmb2xkZWQgbW91bnRhaW5zIGluIHRoZSBub3J0aCwgcGxhdGVhdXMgaW4gdGhlIHNvdXRoIGFuZCBwbGFpbnMgaW4gIGJldHdlZW4gdGhlbS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIER1cmluZyB0aGUgRW9jZW5lIHBlcmlvZCBib3RoIEFuZ2FyYSBsYW5kIGFuZCBHb25kd2FuYWxhbmQgc3RhcnRlZCAgY29udmVyZ2luZyBhcyBhIHJlc3VsdCBvZiB3aGljaCBmb2xkcyB3ZXJlIGZvcm1lZCBhbG9uZyB0aGUgbm9ydGhlcm4gYW5kIHNvdXRoZXJuIGJvcmRlcnMgb2YgdGhlIFRldGh5cyAgc2VkaW1lbnRzIGdpdmluZyBiaXJ0aCB0byB0aGUgS3VubHVuIG1vdW50YWlucyBpbiB0aGUgbm9ydGggYW5kIEhpbWFsYXlhcyBpbiB0aGUgc291dGguIFRpYmV0YW4gcGxhdGVhdSAgYXMgbWVkaWFuIG1hc3MgKHN0YWJsZSBibG9jayBsb2NhdGVkIGluIGdlb3N5bmNsaW5hbCBiZWx0KSBiZXR3ZWVuIHRoZXNlIHR3byBtb3VudGFpbnMgcmVtYWluZWQgIHVuYWZmZWN0ZWQgYnkgdGhlIGZvbGRpbmcsIGFsdGhvdWdoIGl0IHdhcyBzbGlnaHRseSByYWlzZWQgZHVlIHRvIGludGVuc2UgbmF0dXJlIG9mIHRoZSBjb21wcmVzc2lvbiBmb3JjZXMuICAgICBvZiAzMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQWxmcmVkIFdlZ2VuZXIgYXNzdW1lZCB0aGF0IHRoZXJlIHdhcyBvbmx5IG9uZSBzdXBlci1jb250aW5lbnQgbmFtZWQgIFBhbmdhZWEgc3Vycm91bmRlZCBieSBhIHN1cGVyLW9jZWFuIGNhbGxlZCBQYW50aGFsYXNzYS4gVGhlIG5vcnRoZXJuIHBhcnQgb2YgUGFuZ2FlYSB3YXMgY2FsbGVkICBBbmdhcmFsYW5kIGFuZCB0aGUgc291dGhlcm4gcGFydCB3YXMgY2FsbGVkIEdvbmR3YW5hbGFuZC4gSW5kaWEgd2FzIHBhcnQgb2YgR29uZHdhbmEgbGFuZCwgdGhlIGdyZWF0ICBzb3V0aGVybiBjb250aW5lbnQgb2YgdGhlIHdvcmxkLCB3aGljaCBicm9rZSB1cCBhZnRlciB0aGUgY2xvc2Ugb2YgUGFsYWVvem9pYyB0aW1lIHBlcmlvZCBpbnRvIGh1Z2UgIGNvbnRpbmVudGFsIGJsb2Nrcy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBZnRlciB0aGUgTWVzb3pvaWMgZXJhLCBHb25kd2FuYWxhbmQgc3RhcnRlZCBicmVha2luZyB1cCBhbmQgRGVjY2FuIHNoaWVsZCAgc3RhcnRlZCBtb3Zpbmcgbm9ydGh3YXJkLiBUaGUgcmVzdWx0IG9mIGNvbnZlcmdlIG9mIHRoZSBJbmRpYW4gcGxhdGUgKERlY2NhbiBzaGllbGQpIHdpdGggdGhlIEV1cmFzaWFuICBwbGF0ZSAoTGF1cmF0aWEgb3IgQW5nYXJhbGFuZCkgd2FzIHRoYXQgdGhlIFRldGh5cyBzZWEgYmVjYW1lIG5hcnJvd2VyIGFuZCB1bHRpbWF0ZWx5IGNsb3NlZC4gVGhlIG1hcmluZSAgc2VkaW1lbnRzIGFuZCB0aGUgY3J1c3Qgb2YgdGhlIFRldGh5cyBzZWFzIHN1ZmZlcmVkIGZyb20gY29tcHJlc3Npb24gYXMgYSByZXN1bHQgb2YgY29udmVyZ2VuY2Ugb2YgdGhlICB0d28gY29udGluZW50YWwgcGxhdGVzIGFuZCB0aGVzZSBsZWQgdG8gdGhlIGZvbGRpbmcgb2YgdGhlIHJvY2sgc3RyYXRhIGFuZCB0aGUgSGltYWxheWFzIHdlcmUgYm9ybi4gICBTb3VyY2U6IGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNTc0ODIvMS9Vbml0Ni5wZGYgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzI5NTk2LzEvVW5pdC0xLnBkZiAgIGh0dHBzOi8vd3d3LnNoaXZhamljb2xsZWdlLmFjLmluL3NQYW5lbC91cGxvYWRzL2Vjb250ZW50L2NjMTVjZjliZjBhZTIyMTNhODc1NGViOTMxMDJjZTA5LnBkZiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to the Greater Himalayas, consider the following statements: 1.  It extends from the Nanga Parbat peak in the west and Namcha Barva peak in the east. 2.  Amu Darya River originates from glaciers of Pamir's of the Greater Himalayas. 3.  The Main Boundary Thrust demarcates the boundary between the Greater and Lesser Himalaya.  Which of the statements given above are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgR3JlYXRlciBIaW1hbGF5YXMgb3IgSGltYWRhcmkgaXMgdGhlIG5vcnRoZXJuIG1vc3QgYW5kIHRoZSBoaWdoZXN0IHJhbmdlIG9mIHRoZSBIaW1hbGF5YXMuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgZXh0ZW50IG9mIHRoZSBHcmVhdGVyIEhpbWFsYXlhcyBvciBIaW1hZHJpIHJhbmdlIGlzIGJldHdlZW4gdGhlIE5hbmdhIFBhcmJhdCAgcGVhayAoODEyNiBtLikgaW4gdGhlIHdlc3QgYW5kIE5hbWNoYSBCYXJ2YSBwZWFrICg3NzU2IG0uKSBpbiB0aGUgZWFzdC4gSXQgaXMgdGhlIG9ubHkgcmFuZ2Ugb2YgdGhlIEhpbWFsYXlhICB3aGljaCBtYWludGFpbnMgaXRzIGNvbnRpbnVpdHkgZnJvbSB3ZXN0IHRvIGVhc3QuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgQW11IERhcnlhIGlzIGEgbWFqb3Igcml2ZXIgaW4gQ2VudHJhbCBBc2lhLCBoaXN0b3JpY2FsbHkga25vd24gYXMgdGhlIE94dXMuIEl0ICBvcmlnaW5hdGVzIGZyb20gdGhlIGdsYWNpZXJzIG9mIHRoZSBQYW1pcnMgYW5kIGRpZXMgbW9yZSB0aGFuIDEsNTAwIG1pbGVzIHRvIHRoZSB3ZXN0LCBpbiB0aGUgaHVtYW4tbWFkZSAgZGVzZXJ0IG9mIHRoZSBBcmFsIFNlYSBiYXNpbiBJdCBpcyBhIHRyYW5zLWJvdW5kYXJ5IHJpdmVyIHNoYXJlZCBieSBBZmdoYW5pc3RhbiwgS3lyZ3l6c3RhbiwgVGFqaWtpc3RhbiwgIFR1cmttZW5pc3RhbiBhbmQgVXpiZWtpc3Rhbi4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIE1haW4gQm91bmRhcnkgVGhydXN0IGRlbWFyY2F0ZXMgdGhlIGJvdW5kYXJ5IGJldHdlZW4gdGhlIExlc3NlciBhbmQgIE91dGVyIEhpbWFsYXlhLiBXaGlsZSwgVGhlIE1haW4gQ2VudHJhbCBUaHJ1c3QgZGVtYXJjYXRlcyB0aGUgYm91bmRhcnkgYmV0d2VlbiB0aGUgR3JlYXRlciBhbmQgIExlc3NlciBIaW1hbGF5YS4gIFNvdXJjZTogaHR0cHM6Ly93d3cubmF0aW9uYWxnZW9ncmFwaGljLm9yZy9wcm9qZWN0cy9vdXQtb2YtZWRlbi13YWxrL2FydGljbGVzLzIwMTYtMDgtdGhlc2UtIHdhdGVycy1jYXJyeS10aGUtZ2hvc3RzLW9mLWFuY2llbnQtZW1waXJlcy8gIGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzLzMxNmNvdXJzZUUvY2gxNi5wZGYgIGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzY5NTk5LzEvVW5pdC0zLnBkZiAgaHR0cHM6Ly93d3cubmlvcy5hYy5pbi9tZWRpYS9kb2N1bWVudHMvU2VjU29jU2NpQ291ci9FbmdsaXNoL0xlc3Nvbi0wOS5wZGYgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "1 and 3 only  "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following rivers are the tributaries of Brahmaputra River? 1. Torsa 2. Feni 3. Raidak  4. Sankosh 5. Kameng Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT3B0aW9uIGEgaXMgY29ycmVjdC4gVGhlIEJyYWhtYXB1dHJhIHJlY2VpdmVzIG51bWVyb3VzIHRyaWJ1dGFyaWVzIGluIGl0cyA3NTAga20gbG9uZyBqb3VybmV5IHRocm91Z2ggdGhlICBBc3NhbSB2YWxsZXkuIEl0cyBtYWpvciBsZWZ0IGJhbmsgdHJpYnV0YXJpZXMgYXJlIHRoZSBCdXJoaSBEaWhpbmcsIERlc2FuZyBhbmQgRGhhbnNhcmkgKFNvdXRoKSB3aGVyZWFzIHRoZSAgaW1wb3J0YW50IHJpZ2h0IGJhbmsgdHJpYnV0YXJpZXMgYXJlIHRoZSBTdWJhbnNpcmksIExvaGl0LCBEaWJhbmcsIFRvcnNhLCBLYW1lbmcsIE1hbmFzIGFuZCBTYW5rb3NoLiAgUmFpZGFrIFJpdmVyIGlzIGFsc28gb25lIG9mIHRoZSByaWdodCBiYW5rIHRyaWJ1dGFyaWVzIG9mIEJyYWhtYXB1dHJhLiBJdCBmbG93cyB0aHJvdWdoIEJodXRhbiwgSW5kaWEgYW5kICBCYW5nbGFkZXNoLiAgSG93ZXZlciwgdGhlIEZlbmkgUml2ZXIsIHdoaWNoIGZvcm1zIHBhcnQgb2YgdGhlIEluZGlhLUJhbmdsYWRlc2ggYm9yZGVyLCBpcyBub3QgYSB0cmlidXRhcnkgb2YgIEJyYWhtYXB1dHJhIFJpdmVyLiBJdCBvcmlnaW5hdGVzIGluIHRoZSBTb3V0aCBUcmlwdXJhIGRpc3RyaWN0LCBwYXNzZXMgdGhyb3VnaCBTYWJyb29tIHRvd24gb24gdGhlIEluZGlhbiAgc2lkZSwgYW5kIG1lZXRzIHRoZSBCYXkgb2YgQmVuZ2FsIGFmdGVyIGl0IGZsb3dzIGludG8gQmFuZ2xhZGVzaC4gICAgb2YgMzIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICAgU291cmNlOiBJbmRpYW4gUGh5c2ljYWwgR2VvZ3JhcGh5LCBOQ0VSVCBYSSwgQ2hhcHRlci0zLCBwZy4gMjcgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvZXhwbGFpbmVkLXNpZ25pZmljYW5jZS1vZi10aGUtZmVuaS1yaXZlci1tb3UtYmV0d2Vlbi0gaW5kaWEtYW5kLWJhbmdsYWRlc2gtNjEwODM4OS8gICAgIG9mIDMyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQgg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3, 4 and 5 only ",
        "option2" : "3 and 4 only ",
        "option3" : "1, 2 and 5 only ",
        "option4" : "1, 2, 3, 4 and 5    \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
