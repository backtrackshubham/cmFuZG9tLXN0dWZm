{
  "testId" : "forum-2023-prelims-preparatory-20",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-20.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to the factors that determine the  distribution pattern of population in India:  1. Climatic variations  2. Presence of deserts and mountains  3. Availability of Mineral resources  4. Prospects of Industrial growth  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBXaXRoIHJlc3BlY3QgdG8gdGhlIHNvY2lvLWVjb25vbWljIGFuZCBoaXN0b3JpY2FsIGZhY3RvcnMsIHRoZSBldm9sdXRpb24gb2Ygc2V0dGxlZCBhZ3JpY3VsdHVyZSBhbmQgZnVydGhlciAgIGRldmVsb3BtZW50IGluIGFncmljdWx0dXJlOyBwYXR0ZXJuIG9mIGh1bWFuIHNldHRsZW1lbnRzOyBkZXZlbG9wbWVudCBvZiB0cmFuc3BvcnQgbmV0d29yaywgICBpbmR1c3RyaWFsaXphdGlvbiBhbmQgdXJiYW5pemF0aW9uIGhhdmUgcGxheWVkIGltcG9ydGFudCByb2xlIGluIGRldGVybWluaW5nIHRoZSBwYXR0ZXJuIG9mIHBvcHVsYXRpb24gICBkaXN0cmlidXRpb24gaW4gSW5kaWEuICAgRHVlIHRvIGNsaW1hdGUsIHRlcnJhaW4gYW5kIGF2YWlsYWJpbGl0eSBvZiB3YXRlciwgdGhlIG5vcnRoZXJuIEluZGlhbiBwbGFpbnMsIGRlbHRhcyBhbmQgY29hc3RhbCBwbGFpbnMgaGF2ZSAgIGhpZ2hlciBwcm9wb3J0aW9uIG9mIHBvcHVsYXRpb24gaW4gY29tcGFyaXNvbiB0byBzb3V0aCBhbmQgc291dGhlcm4gaGludGVybGFuZCwgaGlsbHkgYW5kIGRlc2VydCBhcmVhcy4gICBPcHRpb24gMSBhbmQgMiBhcmUgY29ycmVjdC4gIFRoZSB0d2luIGVsZW1lbnRzIG9mIHJhaW5mYWxsIGFuZCB0ZW1wZXJhdHVyZSBwbGF5IGFuIGltcG9ydGFudCByb2xlIGluICAgZGV0ZXJtaW5pbmcgdGhlIHBvcHVsYXRpb24gb2YgYW4gYXJlYS4gRXh0cmVtZXMgb2YgY2xpbWF0ZSBhcmVuJ3QgZmF2b3JhYmxlLCB3aGlsZSBhIG1vZGVyYXRlIGNsaW1hdGUgICBmYXZvcnMgcG9wdWxhdGlvbiBjb25jZW50cmF0aW9uLiBGb3IgZXhhbXBsZSwgTGVoIGFuZCBMYWRha2gsIGR1ZSB0byBleHRyZW1lIGxvdyB0ZW1wZXJhdHVyZXMgYW5kIGFyaWQgICBjbGltYXRlLCBhcmUgbm90IGRlbnNlbHkgcG9wdWxhdGVkLiBBbHNvLCB0aGV5IGFyZSBpbiBoaWdoIG1vdW50YWlucyB3aXRoIGluZmVydGlsZSBzb2lsLiBTaW1pbGFybHksIFRoYXIgICBkZXNlcnRzIGluIFJhamFzdGhhbiBpcyBzcGFyc2VseSBwb3B1bGF0ZWQgYXMgaXQgZmFsbHMgaW4gcmFpbiBzaGFkb3cgYXJlYSBvZiBBcmF2YWxsaSBtb3VudGFpbnMgbWFraW5nIGl0IGFuICAgYXJpZCByZWdpb24uIEhlbmNlIGFic2VuY2UvIHByZXNlbmNlIG9mIG1vdW50YWlucyBhbmQgb2YgZGVzZXJ0cyBkZXRlcm1pbmVzIHRoZSBwb3B1bGF0aW9uIGRpc3RyaWJ1dGlvbi4gICBPcHRpb24gMyBpcyBjb3JyZWN0LiBUaGUgaGlnaGVyIHBvcHVsYXRpb24gZGVuc2l0aWVzIGluIHRoZSBDaGhvdGEgTmFncHVyIHBsYXRlYXUgcmVnaW9uLCBhbmQgYWRqb2luaW5nICAgcmVnaW9ucyBvZiBPZGlzaGEgYXJlIGxhcmdlbHkgZHVlIHRvIGF2YWlsYWJpbGl0eSBvZiBtaW5lcmFscyBhbmQgbWFueSBzdXBwb3J0aW5nLyBkZXBlbmRlbnQgaW5kdXN0cmllcyAgIHByZXNlbmNlIHRoZXJlLiAgIE9wdGlvbiA0IGlzIGNvcnJlY3QuIEluZHVzdHJpYWwgZ3Jvd3RoIG9mZmVycyBtYXNzaXZlIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcyBhbmQgYWN0cyBhcyBhIGdyZWF0ICAgbWFnbmV0IHRvIGF0dHJhY3QgcGVvcGxlLCByZXN1bHRpbmcgaW4gaGlnaGVyIGRlbnNpdGllcy4gTWFqb3IgY2F1c2VzIG9mIGhpZ2ggZGVuc2l0eSBpbiBXZXN0IEJlbmdhbCwgICBKaGFya2hhbmQsIE1haGFyYXNodHJhIGFuZCBHdWphcmF0IGFyZSB0aGUgcGhlbm9tZW5hbCBncm93dGggb2YgSW5kdXN0cmllcyBpbiB0aGVzZSBzdGF0ZXMuICAgU291cmNlOiAgaHR0cHM6Ly93d3cubmlvcy5hYy5pbi9tZWRpYS9kb2N1bWVudHMvMzE2Y291cnNlRS9jaDI2LnBkZiAgICBodHRwczovL3d3dy5iaGF0dGFkZXZ1bml2ZXJzaXR5LmFjLmluL2RvY3Mvc3R1ZHlNYXRlcmlhbC9Mb25raGFtX0JhcnVhaC9Mb25raGFtJTIwQm9ydWFoXyAgR2VvZ3JhcGh5X1VHJTIwSUklMjBTZW0oSEMpX0ZhY3RvcnMlMjBhZmZlY3RpbmclMjBEaXN0cmlidXRpb24lMjBvZiUyMFBvcHVsYXRpb24ucGRmICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "3 and 4 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following statements  regarding Reverse Migration in India is/ are  correct?  1.  There has been a continuous decrease in the  worker population ratio in agriculture  during the last five years.  2.  Reverse migration may cause a collapse of  supply chains by making industrial labour  scarce.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgUmV2ZXJzZSBNaWdyYXRpb24gcmVmZXJzIHRvIG1pZ3JhdGlvbiBmcm9tIHVyYmFuIGFyZWFzIHRvIHJ1cmFsIGFyZWFzIHNpbmNlIHRoZSBtYWluIGRpcmVjdGlvbiBvZiBtaWdyYXRpb24gICBpcyBnZW5lcmFsbHkgZnJvbSBydXJhbCBhcmVhcyB0byB1cmJhbiBhcmVhcy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgUGVyaW9kaWMgTGFib3VyIEZvcmNlIFN1cnZleSAyMDE5LTIwLCBpbiB0aGUgY292aWQgd2F2ZSBhbmQgICBwb3N0IGNvdmlkIHNjZW5hcmlvLCB0aGVyZSBoYXMgYmVlbiBhbiBpbmNyZWFzZSAobm90IGRlY3JlYXNlKSBvZiAzJSBpbiB0aGUgd29ya2VyIHBvcHVsYXRpb24gcmF0aW8gaW4gICBhZ3JpY3VsdHVyZS4gVGhpcyBoYXMgYmVlbiB1bmRlcnN0b29kIHRvIGJlIGluZGljYXRpdmUgb2YgcmV2ZXJzZSBtaWdyYXRpb24gdHJlbmRzLiBTaW5jZSBhZ3JpY3VsdHVyZSBpcyAgIHByaW1hcmlseSBhbiBhY3Rpdml0eSBjYXJyaWVkIG91dCBpbiBydXJhbCBhcmVhcywgYW4gaW5jcmVhc2UgaW4gcGVvcGxlIGludm9sdmVkIGluIGFncmljdWx0dXJlIHNob3dzIHRoYXQgICBwZW9wbGUgYXJlIG1vdmluZyBmcm9tIGNpdGllcyB0byBydXJhbCBhcmVhcyAocmV2ZXJzZSBtaWdyYXRpb24pLiAgIEFsc28gYW4gaW5jcmVhc2UgaW4gZGlzYnVyc2VtZW50cyBhbmQgZW5yb2xtZW50IGluIE1HTlJFR0EgaW4gdGhlIHBhc3QgeWVhciBpcyBpbmRpY2F0aXZlIG9mIHJldmVyc2UgICBtaWdyYXRpb24gdHJlbmRzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEluZHVzdHJpZXMgaW4gdXJiYW4gYXJlYXMgYXJlIGRlcGVuZGVudCBvbiBzdXBwbHkgb2YgY2hlYXAgbGFib3VyIGZyb20gcnVyYWwgICBhcmVhcywgbWlncmF0aW5nIHRvIGNpdGllcyBpbiBzZWFyY2ggb2YgYmV0dGVyIG9wcG9ydHVuaXRpZXMsIHRvIGNyZWF0ZSBwcm9maXRhYmxlIGdvb2RzLiBIb3dldmVyLCB0aGVpciAgIHJldmVyc2UgbWlncmF0aW9uIGJhY2sgdG8gdmlsbGFnZXMgaGFzIGxlZnQgaW5kdXN0cmllcyBpbiBzaG9ydGFnZSBvZiBsYWJvdXIsIGFzIGVjb25vbWljIGFjdGl2aXR5IGhhcyBwaWNrZWQgICB1cCBwb3N0IGxpZnRpbmcgb2YgbG9ja2Rvd25zIGFuZCBlbmQgb2YgY292aWQgd2F2ZXMuIFRoaXMgc2hvcnRhZ2Ugb2YgbGFib3VyIGNyZWF0ZXMgc2hvcnRhZ2Ugb2Ygc3VwcGx5ICAgd2hpY2ggZW5kcyB1cCBjcmVhdGluZyBoaWdoZXIgcHJpY2VzLyBpbmZsYXRpb24gaW4gdGhlIGVjb25vbXksIGFzIHdlbGwgYXMgbG9zcyBmb3IgYnVzaW5lc3Nlcy4gICBTb3VyY2U6ICAgIGFwcmlsLWFzLWthcm5hdGFrYS1zZWVzLXJldmVyc2UtbWlncmF0aW9uL2FydGljbGVzaG93LzgyNDc2OTc3LmNtcyAgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9vcGluaW9uL2NvbHVtbnMvYXMtdGhlLXBhbmRlbWljcy1zZWNvbmQtd2F2ZS1yYWdlcy0gIG1pZ3JhbnRzLXRydWRnZS1ob21lLWFnYWluLTcyOTczMDMvICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbmFsL290aGVyLXN0YXRlcy9ndWphcmF0LWdvdmVybm1lbnQtY2FsbHMtbWducmVnYS1zY2hlbWUtICBhLWxpZmVzYXZlci1mb3ItbGFib3VyZXJzLWR1cmluZy1jb3ZpZC0xOS1wYW5kZW1pYy9hcnRpY2xlMzQ3OTY4MjIuZWNlICAgaHR0cHM6Ly9lY29ub21pY3RpbWVzLmluZGlhdGltZXMuY29tL25ld3MvZWNvbm9teS9pbmRpY2F0b3JzIGhleS1oYXZlLW5vdC1yZXR1cm5lZC1ob3ctICBjb3ZpZC0xOS1oYXMtaW1wYWN0ZWQtbGFib3VyLW1pZ3JhdGlvbi1pbi10aGUtY291bnRyeS9hcnRpY2xlc2hvdy84NjUxMzExMy5jbXMgICBodHRwczovL3d3dy5maW5hbmNpYWxleHByZXNzLmNvbS9vcGluaW9uL3BhbmRlbWljLWltcGFjdC1uZWNlc3NhcnktdG8tc3RvcC1yZXZlcnNlLSAgbWlncmF0aW9uLzIyNDEzMjIvICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to nuclear power in India,  consider the following statements:  1.  Kudankulam Power Plant is the nuclear  plant with highest-capacity in India.  2.  Share of nuclear-powered electricity in  India has remained stagnant in the last two  decades.  3.  The share of nuclear-powered electricity  produced in India is largest among advanced  economies.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEt1ZGFua3VsYW0gTnVjbGVhciBQb3dlciBQbGFudCBpcyB0aGUgaGlnaGVzdC1jYXBhY2l0eSBudWNsZWFyIHBsYW50IGluIEluZGlhLCAgIHdpdGggYSB0b3RhbCBvZiAyLDAwME1XIGN1cnJlbnRseSBpbnN0YWxsZWQgd2l0aCBhIGZ1cnRoZXIgMiwwMDBNVyB1bmRlciBjb25zdHJ1Y3Rpb24uIEt1ZGFua3VsYW0gaXMgICB0aGUgb25seSBudWNsZWFyIHBsYW50IGluIEluZGlhIHRoYXQgdXNlcyBwcmVzc3VyaXplZCB3YXRlciByZWFjdG9ycyAoUFdSKSByYXRoZXIgdGhhbiBib2lsaW5nIHdhdGVyICAgcmVhY3RvcnMgKEJIV1IpIG9yIHByZXNzdXJpemVkIGhlYXZ5LXdhdGVyIHJlYWN0b3JzIChQSFdSKS4gVGhlIFBXUnMgYXJlIGJhc2VkIG9uIFJ1c3NpYW4gICB0ZWNobm9sb2d5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBzaGFyZSBvZiBudWNsZWFyLXBvd2VyZWQgZWxlY3RyaWNpdHkgaW4gSW5kaWEgaGFzIHJlbWFpbmVkIHN0YWduYW50IGluIHRoZSAgIGxhc3QgdHdvIGRlY2FkZXMsIGF0IGEgdGltZSB0aGVyZSBhcmUgaW5jcmVhc2VkIGVmZm9ydHMgdG8gYm9vc3QgYWx0ZXJuYXRpdmUgZW5lcmd5LiBUaGUgc2hhcmUgb2YgbnVjbGVhciAgIGVuZXJneSBpbiB0aGUgY291bnRyeSB3YXMgMy43IHBlciBjZW50IGluIDIwMDEuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHNoYXJlIG9mIG51Y2xlYXItcG93ZXJlZCBlbGVjdHJpY2l0eSBwcm9kdWNlZCBpbiBJbmRpYSBpcyBzaWduaWZpY2FudGx5IGxvd2VyICAgdGhhbiBzb21lIG9mIHRoZSBhZHZhbmNlZCBlY29ub21pZXMuIFdoaWxlIGNvdW50cmllcyBzdWNoIGFzIEZyYW5jZSBhbmQgVWtyYWluZSBnZW5lcmF0ZSA3MC42IHBlciBjZW50ICAgYW5kIDUxLjIgcGVyIGNlbnQgb2YgZWxlY3RyaWNpdHkgcmVzcGVjdGl2ZWx5IGZyb20gbnVjbGVhciBzb3VyY2VzLCB0aGV5IGFyZSBiZWhpbmQgb25seSAzLjMgcGVyIGNlbnQgb2YgSW5kaWEncyAgIHRvdGFsIGVsZWN0cmljaXR5IGdlbmVyYXRpb24uICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTb3VyY2U6IGh0dHBzOi8vemVlbmV3cy5pbmRpYS5jb20vaW5kaWEvY29uc3RydWN0aW9uLW9mLWluZGlhcy1sYXJnZXN0LW51Y2xlYXItcG93ZXItcGxhbnQtICBjb21tZW5jZXMtaW4tdGFtaWwtbmFkdS0yMzcyNjUyLmh0bWwgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 4,
      "question" : "Which among the following are  consequences of migration for the source  region?  1. Increase in remittances.  2. Imbalance in sex ratio.  3.  Pressure on the existing physical  infrastructure.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1pZ3JhdGlvbiBpcyBhIHJlc3BvbnNlIHRvIHRoZSB1bmV2ZW4gZGlzdHJpYnV0aW9uIG9mIG9wcG9ydHVuaXRpZXMgb3ZlciBzcGFjZS4gUGVvcGxlIHRlbmQgdG8gbW92ZSBmcm9tICAgcGxhY2VzIG9mIGxvdyBvcHBvcnR1bml0eSBhbmQgbG93IHNhZmV0eSB0byBwbGFjZXMgb2YgaGlnaGVyIG9wcG9ydHVuaXR5IGFuZCBiZXR0ZXIgc2FmZXR5LiBUaGlzLCBpbiB0dXJuLCAgIGNyZWF0ZXMgYm90aCBiZW5lZml0cyBhbmQgcHJvYmxlbXMgZm9yIHRoZSBhcmVhcyBhbmQgcGVvcGxlIG1pZ3JhdGUgZnJvbSBhbmQgbWlncmF0ZSB0by4gU291cmNlIHJlZ2lvbiAgIGlzIHRoZSBwbGFjZSBmcm9tIHdoZXJlIHBlb3BsZSBtaWdyYXRlIHRvIG90aGVyIGxvY2F0aW9ucyAoZGVzdGluYXRpb24gcmVnaW9uKS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBIG1ham9yIGJlbmVmaXQgZm9yIHRoZSBzb3VyY2UgcmVnaW9uIGlzIHRoZSByZW1pdHRhbmNlIHNlbnQgYnkgbWlncmFudHMuICAgUmVtaXR0YW5jZXMgZnJvbSBpbnRlcm5hdGlvbmFsIG1pZ3JhbnRzIGFyZSBvbmUgb2YgdGhlIG1ham9yIHNvdXJjZXMgb2YgZm9yZWlnbiBleGNoYW5nZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSW1iYWxhbmNlIGluIHNleCByYXRpbyBpbiB0aGUgcGxhY2Ugb2Ygb3JpZ2luLiBNaWdyYXRpb24gbGVhZHMgdG8gdGhlIHJlZGlzdHJpYnV0aW9uICAgb2YgdGhlIHBvcHVsYXRpb24gd2l0aGluIGEgY291bnRyeS4gUnVyYWwgdXJiYW4gbWlncmF0aW9uIGlzIG9uZSBvZiB0aGUgaW1wb3J0YW50IGZhY3RvcnMgY29udHJpYnV0aW5nIHRvICAgdGhlIHBvcHVsYXRpb24gZ3Jvd3RoIG9mIGNpdGllcy4gSG93ZXZlciwgaGlnaCBvdXQgbWlncmF0aW9uIGZyb20gVXR0YXJha2hhbmQsIFJhamFzdGhhbiwgTWFkaHlhICAgUHJhZGVzaCwgQmloYXIgZXRjLiBoYXZlIGJyb3VnaHQgc2VyaW91cyBpbWJhbGFuY2VzIGluIGFnZSBhbmQgc2V4IGNvbXBvc2l0aW9uIGluIHRoZSBzb3VyY2UgcmVnaW9uICh0aGVzZSAgIHN0YXRlcykuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBPdmVyY3Jvd2Rpbmcgb2YgcGVvcGxlIGR1ZSB0byBydXJhbC11cmJhbiBtaWdyYXRpb24gaGFzIHB1dCBwcmVzc3VyZSBvbiB0aGUgICBleGlzdGluZyBzb2NpYWwgYW5kIHBoeXNpY2FsIGluZnJhc3RydWN0dXJlIGluIHRoZSB1cmJhbiBhcmVhcyAoRGVzdGluYXRpb24gcmVnaW9uIGFuZCBub3Qgc291cmNlIHJlZ2lvbikuICAgVGhpcyB1bHRpbWF0ZWx5IGxlYWRzIHRvIHVucGxhbm5lZCBncm93dGggb2YgdXJiYW4gc2V0dGxlbWVudCAgICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlZ3kyMDIucGRmICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 5,
      "question" : "With reference to the Tank irrigation,  consider the following statements:  1.  Tank irrigation is found more popularly in  peninsular regions of the country.  2.  It accounts for less than 5% of the total  irrigated area in the country.  3.   It has much less expenditure than the canal  irrigation system.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgVGFuayBpcnJpZ2F0aW9uIGlzIGEgbWV0aG9kIG9mIGlycmlnYXRpb24gaW4gd2hpY2ggYSB0YW5rLCB1c3VhbGx5IGEgbWFuLW1hZGUgaG9sbG93IG9uIHRoZSBFYXJ0aCdzIHN1cmZhY2UsICAgaXMgdXNlZCB0byBzdG9yZSByYWlud2F0ZXIgdGhhdCBjYW4gYmUgbGF0ZXIgdXNlZCBmb3IgaXJyaWdhdGlvbi4gVGhpcyB0eXBlIG9mIGlycmlnYXRpb24gaXMgd2lkZWx5IGZvdW5kIGluIHRoZSAgIHN0YXRlcyBvZiBUYW1pbCBOYWR1LCBBbmRocmEgUHJhZGVzaCwgTWFoYXJhc2h0cmEsIGFuZCBLYXJuYXRha2EuIFRoZSBhcmVhIHVuZGVyIHRhbmsgaXJyaWdhdGlvbiBoYXMgICBkZWNyZWFzZWQgaW4gcmVjZW50IHllYXJzIGJlY2F1c2UgdGhlIHRhbmsgc3lzdGVtcyBhcmUgbm9uLXBlcmVubmlhbCBhbmQgZGVwZW5kZW50IG9uIHJhaW53YXRlciAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEl0IGlzIHByYWN0aWNlZCBtb3JlIHBvcHVsYXJseSBpbiB0aGUgcGVuaW5zdWxhciByZWdpb25zLiBUaGUgcmVhc29ucyBmb3Igd2hpY2ggYXJlLSAgIDEpIHRoZSB1bmR1bGF0aW5nIHJlbGllZiBhbmQgaGFyZCByb2NrcyBtYWtlIGl0IGRpZmZpY3VsdCB0byBkaWcgY2FuYWxzIGFuZCB3ZWxscyAgIDIpIFRoZXJlIGlzIGxpdHRsZSBwZXJjb2xhdGlvbiBvZiB3YXRlciBkdWUgdG8gaGFyZCByb2NrIHN0cnVjdHVyZSBhbmQgZ3JvdW5kIHdhdGVyIGlzIG5vdCBhdmFpbGFibGUgaW4gbGFyZ2UgICBxdWFudGl0aWVzLiBNb3N0IG9mIHRoZSByaXZlcnMgYXJlIHNlYXNvbmFsLiAgIDMpIHRoZXJlIGFyZSBtYW55IHN0cmVhbXMgd2hpY2ggYmVjb21lIHRvcnJlbnRpYWwgZHVyaW5nIHRoZSByYWlueSBzZWFzb24gLSBzbyB0aGUgb25seSB3YXkgdG8gdXNlIHRoaXMgICB3YXRlciBpcyB0byBpbXBvdW5kIGl0IGJ5IGNvbnN0cnVjdGluZyBidW5kcyBhbmQgYnVpbGRpbmcgdGFua3MuIEFsc28sIGl0IGlzIGVhc3kgdG8gY29sbGVjdCByYWlud2F0ZXIgaW4gICBuYXR1cmFsIG9yIGFydGlmaWNpYWwgcGl0cyBiZWNhdXNlIG9mIGltcGVybWVhYmxlIHJvY2tzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEl0IGFjY291bnRzIGZvciBhcHByb3hpbWF0ZWx5IDMlIG9mIHRoZSBuZXQgaXJyaWdhdGVkIGFyZWEgaW4gdGhlIGNvdW50cnkuVGFtaWwgICBOYWR1IGFjY291bnRzIGZvciAyMyUgb2YgdGFuayBpcnJpZ2F0aW9uIGluIEluZGlhIHdoZXJlYXMgQW5kaHJhIFByYWRlc2ggYW5kIFRlbGFuZ2FuYSBhY2NvdW50cyBmb3IgICAyOCUgb2YgdGFuayBpcnJpZ2F0aW9uIGluIEluZGlhLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluIHRoZSBjYXNlIG9mIHRhbmsgaXJyaWdhdGlvbiBzeXN0ZW1zIHRoZXJlIGlzIG11Y2ggbGVzcyBleHBlbmRpdHVyZSB0aGFuIHRoZSBjYW5hbCAgIGlycmlnYXRpb24gc3lzdGVtLiBCZWNhdXNlIG1vc3Qgb2YgdGhlIHRhbmtzIGFyZSBuYXR1cmFsIGFuZCBkbyBub3QgaW52b2x2ZSBoZWF2eSBjb3N0IGZvciB0aGVpciAgIGNvbnN0cnVjdGlvbi4gRXZlbiBhbiBpbmRpdmlkdWFsIGZhcm1lciBjYW4gaGF2ZSBoaXMgb3duIHRhbmsuIFRhbmtzIGFyZSBnZW5lcmFsbHkgY29uc3RydWN0ZWQgb24gcm9ja3kgICBiZWRzIGFuZCBoYXZlIGxvbmdlciBsaWZlIHNwYW5zLiBJbiBtYW55IHRhbmtzIGZpc2hpbmcgaXMgYWxzbyBjYXJyaWVkIG91dC4gVGhpcyBzdXBwbGVtZW50cyBib3RoIHRoZSBmb29kICAgcmVzb3VyY2VzIGFuZCBpbmNvbWUgb2YgZmFybWVycy4gICBTb3VyY2U6IEludHJvZHVjdGlvbiB0byBtaWNybyBpcnJpZ2F0aW9uIHN5c3RlbS4gUGFnZSBuby4gQ2xhc3MgMTEuIHBhZ2Ugbm8uMzAgICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "1 only    ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to Coal Bed Methane (CBM)  in India, consider the following statements:   1.  Exploitation of CBM negatively impacts the  wildlife and biodiversity of the region.  2.  During extraction of CBM, a large amount of  salinized water is released into freshwater  ecosystems.  3.  During the process of extraction of CBM,  methane is emitted causing global warming  in the atmosphere.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENvYWxiZWQgbWV0aGFuZSAoQ0JNKSwgaXMgYSBmb3JtIG9mIG5hdHVyYWwgZ2FzIHRoYXQgaXMgZXh0cmFjdGVkIGZyb20gY29hbCBiZWRzLiBJdCBoYXMgYmVjb21lIHBvcHVsYXIgICBpbiByZWNlbnQgdGltZXMgYXMgaXQgaXMgY29uc2lkZXJlZCBhIGNsZWFuIGVuZXJneSBzb3VyY2UuIENvYWxiZWQgTWV0aGFuZSBhbiB1bmNvbnZlbnRpb25hbCBzb3VyY2Ugb2YgICBuYXR1cmFsIGdhcyBpcyBub3cgY29uc2lkZXJlZCBhcyBhbiBhbHRlcm5hdGl2ZSBzb3VyY2UgZm9yIGF1Z21lbnRpbmcgSW5kaWEncyBlbmVyZ3kgcmVzb3VyY2UuIEluZGlhIGhhcyAgIHRoZSBmaWZ0aCBsYXJnZXN0IHByb3ZlbiBjb2FsIHJlc2VydmVzIGluIHRoZSB3b3JsZCBhbmQgdGh1cyBob2xkcyBzaWduaWZpY2FudCBwcm9zcGVjdHMgZm9yIGV4cGxvcmF0aW9uIGFuZCAgIGV4cGxvaXRhdGlvbiBvZiBDQk0uICAgVGhlcmUgYXJlIGEgZmV3IGNvbmNlcm5zIGFuZCBjaGFsbGVuZ2VzIGFzc29jaWF0ZWQgd2l0aCB1c2luZyBjb2FsIGJlZCBtZXRoYW5lLiBUaGV5IGFyZSBkaXNjdXNzZWQgICBiZWxvdzogICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBFeHBsb2l0YXRpb24gb2YgQ29hbCBCZWQgTWV0aGFuZSBjcmVhdGVzIGRpc3R1cmJhbmNlIG9mIHRoZSBsYW5kcyBkcmlsbGVkIGZvciBjb2FsICAgYmVkIG1ldGhhbmUgYW5kIGl0cyBlZmZlY3Qgb24gd2lsZGxpZmUgaGFiaXRhdHMgcmVzdWx0cyBpbiBlY29zeXN0ZW0gZGFtYWdlLiBXYXRlciBkaXNjaGFyZ2VzIGZyb20gQ0JNICAgZGV2ZWxvcG1lbnQgcG9sbHV0ZSB0aGUgZG93bnN0cmVhbSB3YXRlciBzb3VyY2VzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEluIHRoZSBwcm9jZXNzIG9mIGV4dHJhY3Rpb24gb2YgQ0JNLCBhIGxhcmdlIGFtb3VudCBvZiBzYWxpbml6ZWQgd2F0ZXIgaXMgcmVsZWFzZWQgICBpbnRvIGZyZXNod2F0ZXIgZWNvc3lzdGVtcy4gVGhpcyBjb3VsZCBwb3NlIGFkdmVyc2UgaW1wYWN0cy4gRGlzcG9zYWwgb2Ygc2FsaW5pemVkIHdhdGVyIGlzIGFuIGlzc3VlLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIE1ldGhhbmUgaXMgZW1pdHRlZCBkdXJpbmcgdGhlIHByb2Nlc3Mgb2YgZXh0cmFjdGlvbiBvZiBDQk0uIE1ldGhhbmUgaXMgYSAgIGdyZWVuaG91c2UgZ2FzIGFuZCBoZW5jZSByYWlzZXMgY29uY2VybnMuIEFsc28sIGluIHRoZSBlYXJseSBzdGFnZXMgb2YgcmVjb3Zlcnkgb2YgQ0JNLCB0aGUgcHJvZHVjdGlvbiAgIGJlaGF2aW9yIGlzIGNvbXBsZXggYW5kIHdvdWxkIGJlIGRpZmZpY3VsdCB0byBwcmVkaWN0LiAgIFNvdXJjZTogaHR0cHM6Ly9kZ2hpbmRpYS5nb3YuaW4vaW5kZXgucGhwL3BhZ2U/cGFnZUlkPTM4ICAgIGh0dHBzOi8vc3R1ZGVudGVuZXJneS5vcmcvc291cmNlL2NvYWwtYmVkLW1ldGhhbmUvICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following statements is  correct about Manganese in India?  1. It is found in Dharwar system of rocks.  2. Jharkhand is the largest producer of  manganese.   3. The most important manganese ore is  Pyrolusite.  4. It is found as a free element in nature.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgIE1hbmdhbmVzZSBpcyBhIHNpbHZlciBtZXRhbGxpYyBlbGVtZW50LiBJdCBvY2N1cnMgaW4gbWFueSBtaW5lcmFscyBzdWNoIGFzIG1hbmdhbml0ZSwgc3VnaWxpdGUsIHJob2Rvbml0ZSwgICByaG9kb2Nocm9zaXRlLCBhbmQgcHlyb2x1c2l0ZS4gICBJbmRpYW4gbWFuZ2FuZXNlIG9yZSBkZXBvc2l0cyBvY2N1ciBtYWlubHkgYXMgbWV0YW1vcnBob3NlZCBiZWRkZWQgc2VkaW1lbnRhcnkgZGVwb3NpdHMgYXNzb2NpYXRlZCAgIHdpdGggR29uZGl0ZSBTZXJpZXMgKEFyY2hhZWFucykgb2YgTWFkaHlhIFByYWRlc2ggKEJhbGFnaGF0LCBDaGhpbmR3YXJhICYgSmhhYnVhIGRpc3RyaWN0cyksIE1haGFyYXNodHJhICAgKEJoYW5kYXJhICYgTmFncHVyIGRpc3RyaWN0cyksIEd1amFyYXQgKFBhbmNobWFoYWwgZGlzdHJpY3QpLCBPZGlzaGEgKFN1bmRlcmdhcmggZGlzdHJpY3QpLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuVGhlIERoYXJ3YXIgc3lzdGVtcyBvZiByb2NrcyBhcmUgaGlnaGx5IG1ldGFsbGlmZXJvdXMuIFRoZXkgYmVhciBvdXQgZ29sZCwgaXJvbiAgIG9yZSwgbWFuZ2FuZXNlIG1pY2EsIGNvYmFsdCwgY2hyb21pdW0sIGNvcHBlciwgdHVuZ3N0ZW4sIGxlYWQsIG5pY2tlbCwgcHJlY2lvdXMgc3RvbmVzIGFuZCBidWRkaW5nICAgc3RvbmVzLiBUaGUgRGhhcndhciBzeXN0ZW0gb2Ygcm9ja3Mgb2NjdXJzIGluIHNjYXR0ZXJlZCBwYXRjaGVzIGluOiAoaSkgc291dGhlcm4gRGVjY2FuLCAoaWkpIGNlbnRyYWwgYW5kICAgZWFzdGVybiBwYXJ0cyBvZiB0aGUgUGVuaW5zdWxhLCAoaWlpKSBub3J0aC0gd2VzdGVybiByZWdpb24sIGFuZCAoaXYpIHRoZSBIaW1hbGF5YW4gcmVnaW9uLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gT3Jpc3NhIGlzIHRoZSBsYXJnZXN0IHByb2R1Y2VyIGFuZCBwcm9kdWNlcyBvdmVyIDM3IHBlciBjZW50IG1hbmdhbmVzZSBvcmUgb2YgICBJbmRpYS4gSXQgaXMgb2J0YWluZWQgZnJvbSBHb25kaXRlIGRlcG9zaXRzIGluIFN1bmRhcmdhcmggZGlzdHJpY3QgYW5kIEtvZHVyaXRlIGFuZCBLaG9uZG9saXRlIGRlcG9zaXRzIGluICAgS2FsYWhhbmRpIGFuZCBLb3JhcHV0IERpc3RyaWN0cy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgbW9zdCBpbXBvcnRhbnQgbWFuZ2FuZXNlIG9yZSBpcyBweXJvbHVzaXRlLiBMaW1vbml0ZSBpcyBhbiBvcmUgb2YgaXJvbi4gT3RoZXIgICBpbXBvcnRhbnQgbWFuZ2FuZXNlIG9yZXMgYXJlIHRoZSBveGlkZXMgcHlyb2x1c2l0ZSwgcm9tYW5lY2hpdGUsIG1hbmdhbml0ZSwgYW5kIGhhdXNtYW5uaXRlIGFuZCB0aGUgICBjYXJib25hdGUgb3JlIHJob2RvY2hyb3NpdGUuIFJob2Rvbml0ZSBhbmQgYnJhdW5pdGUsIGJvdGggc2lsaWNhdGUgb3JlcywgYXJlIGZyZXF1ZW50bHkgZm91bmQgd2l0aCB0aGUgICBveGlkZXMuICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBPbiBFYXJ0aCwgbWFuZ2FuZXNlIGlzIG5ldmVyIGZvdW5kIGFzIGEgZnJlZSBtZXRhbCwgYnV0IGl0IGlzIGZvdW5kIGluIGEgbnVtYmVyICAgb2YgbWluZXJhbHMuIFRoZSBtb3N0IGltcG9ydGFudCBvZiB0aGVzZSBtaW5lcmFscyBpcyBweXJvbHVzaXRlLCB0aGUgbWFpbiBvcmUgbWluZXJhbCBmb3IgbWFuZ2FuZXNlLiAgIE1hbmdhbmVzZSBpcyBlc3NlbnRpYWwgdG8gaXJvbiBhbmQgc3RlZWwgcHJvZHVjdGlvbiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LnByZXNlcnZlYXJ0aWNsZXMuY29tL2FydGljbGVzL3Nob3J0LWVzc2F5LW9uLXRoZS1kaGFyd2FyLXN5c3RlbS8xOTkwNiAgIGh0dHBzOi8vd3d3LnlvdXJhcnRpY2xlbGlicmFyeS5jb20vaW5kaWEtMi9wcm9kdWN0aW9uLWFuZC1kaXN0cmlidXRpb24tb2YtbWFuZ2FuZXNlLWluLSAgaW5kaWEvMTk3NTgjOn46dGV4dD1Qcm9kdWN0aW9uJTIwYW5kJTIwRGlzdHJpYnV0aW9uJTNBJTIwMSUyME9yaXNzYSUzQSUyME9yaXNzYSUyMGlzJTIwdGhlICAsZm9sbG93ZWQlMjBieSUyME1hZGh5YSUyMFByYWRlc2guJTIwLi4uJTIwTW9yZSUyMGl0ZW1zLi4uJTIwICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgICBodHRwczovL21pbmVyYWxzZWR1Y2F0aW9uY29hbGl0aW9uLm9yZy9taW5lcmFscy0gIGRhdGFiYXNlL21hbmdhbmVzZS8jOn46dGV4dD1PbiUyMEVhcnRoJTJDJTIwbWFuZ2FuZXNlJTIwaXMlMjBuZXZlciUyMGZvdW5kJTIwYXMlMjBhLGEgIHJlJTIwYWxsJTIwbmVhcmx5JTIwZGVmaWNpZW50JTIwaW4lMjBlY29ub21pY2FsbHklMjBtaW5lYWJsZSUyMG1hbmdhbmVzZS4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 4 only   "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to solar energy in India,  consider the following statements:   1.  Solar energy contributes for less than 20%  share in the total Renewable Energy  produced in India.  2.  India's solar installed capacity is currently  less than 60 GW.  3.  India has on an average of 300 sunny days in  a year.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gdGVybXMgb2YgY3VtdWxhdGl2ZSBpbnN0YWxsYXRpb25zLCBhY2NvcmRpbmcgdG8gdGhlIGRhdGEgcmVsZWFzZWQgYnkgTWluaXN0cnkgICBvZiBOZXcgYW5kIFJlbmV3YWJsZSBFbmVyZ3kgKE1OUkUpIHRpbGwgU2VwdGVtYmVyIDIwMjEsIEluZGlhJ3MgUkUgaW5zdGFsbGF0aW9uIGNhcGFjaXR5IHJlYWNoZWQgMTAxLjUzICAgR1cuIFNvbGFyIGVuZXJneSBjb250cmlidXRlcyBmb3IgYXBwcm94aW1hdGVseSA0NiUgb2YgdGhlIHNoYXJlIGluIHRoZSB0b3RhbCBSRSBzZWdtZW50LCBtYWtpbmcgaXQgdGhlICAgbWFqb3IgY29udHJpYnV0b3IgZm9sbG93ZWQgYnkgd2luZCBlbmVyZ3kgKDM5JSksIEJpbyBQb3dlciAoMTAlKSBhbmQgU21hbGwgSHlkcm8gKDUlKS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBTb2xhciBwb3dlciBpbiBJbmRpYSBpcyBhIGZhc3QtZGV2ZWxvcGluZyBpbmR1c3RyeSBhcyBwYXJ0IG9mIHRoZSByZW5ld2FibGUgZW5lcmd5ICAgaW4gSW5kaWEuIFRoZSBjb3VudHJ5J3Mgc29sYXIgaW5zdGFsbGVkIGNhcGFjaXR5IHdhcyA0Ny43IEdXIGFzIG9mIDMxIE9jdG9iZXIgMjAyMS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBXaXRoIGEgaHVnZSBsYW5kbWFzcyBhbmQgYW4gYXZlcmFnZSBvZiAzMDAgc3VubnkgZGF5cyBhIHllYXIsIEluZGlhIHRoZW9yZXRpY2FsbHkgICBwcm92aWRlcyBmaXZlIHRyaWxsaW9uIGtpbG93YXR0LWhvdXJzIG9mIGNsZWFuIGFuZCByZW5ld2FibGUgc29sYXIgcG93ZXIgYXZhaWxhYmxlIGV2ZXJ5IHllYXIgYWNyb3NzIGl0cyAgIGxlbmd0aCBhbmQgYnJlYWR0aCAtIGVub3VnaCB0byBlbGVjdHJpZnkgdGhlIG5hdGlvbiBkb3plbnMgb2YgdGltZXMgb3Zlci4gICAgU291cmNlOiBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vaW5kdXN0cnkvcmVuZXdhYmxlcy9pbmRpYS1hZGRlZC0xMC1ndy1vZi1zb2xhci0gIGFuZC13aW5kLWNhcGFjaXR5LWluLXRoZS1maXJzdC1uaW5lLW1vbnRocy1vZi0yMDIxLXJlcG9ydC9hcnRpY2xlc2hvdy84NzI5Nzg5NC5jbXMgICAgaHR0cHM6Ly9tbnJlLmdvdi5pbiBoZS1taW5pc3RyeS9waHlzaWNhbC1wcm9ncmVzcyAgICBodHRwczovL3d3dy5wb3dlci10ZWNobm9sb2d5LmNvbS9mZWF0dXJlcy9mZWF0dXJlc29sYXItcG93ZXItaW5kaWEtbGV0cy10aGUtc3Vuc2hpbmUtaW4vICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to Literacy in India, which  of the following statement is correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCBhIGlzIGNvcnJlY3QgLSBBcyBwZXIgQ2Vuc3VzLCBhIHBlcnNvbiBhZ2VkIHNldmVuIGFuZCBhYm92ZSB3aG8gY2FuIGJvdGggcmVhZCBhbmQgd3JpdGUgd2l0aCAgIHVuZGVyc3RhbmRpbmcgaW4gYW55IGxhbmd1YWdlLCBpcyB0cmVhdGVkIGFzIGxpdGVyYXRlLiBBIHBlcnNvbiwgd2hvIGNhbiBvbmx5IHJlYWQgYnV0IGNhbm5vdCB3cml0ZSwgaXMgbm90ICAgbGl0ZXJhdGUuIEluIHRoZSBDZW5zdXNlcyBwcmlvciB0byAxOTkxLCBjaGlsZHJlbiBiZWxvdyA1IHllYXJzIG9mIGFnZSB3ZXJlIHRyZWF0ZWQgYXMgaWxsaXRlcmF0ZXMuIEl0IHdhcyAgIGRlY2lkZWQgYXQgMTk5MSBDZW5zdXMgdGhhdCBhbGwgY2hpbGRyZW4gaW4gdGhlIGFnZSBncm91cCAwLTYsIHdvdWxkIGJlIHRyZWF0ZWQgYXMgaWxsaXRlcmF0ZSBieSBkZWZpbml0aW9uICAgYW5kIHRoZSBwb3B1bGF0aW9uIGFnZWQgc2V2ZW4geWVhcnMgYW5kIGFib3ZlIG9ubHkgd291bGQgYmUgY2xhc3NpZmllZCBhcyBsaXRlcmF0ZSBvciBpbGxpdGVyYXRlLiBUaGUgc2FtZSAgIGNyaXRlcmlvbiBoYXMgYmVlbiByZXRhaW5lZCBpbiB0aGUgQ2Vuc3VzZXMgb2YgMjAwMSBhbmQgMjAxMS4gICBTdGF0ZW1lbnQgYiBpcyBpbmNvcnJlY3QgLSBUaGVyZSBpcyBuZWl0aGVyIHJlcXVpcmVtZW50IG9mIGFueSBmb3JtYWwgZWR1Y2F0aW9uIG5vciBvZiBhbnkgbWluaW11bSAgIHF1YWxpZmljYXRpb24gdG8gYmUgY29uc2lkZXJlZCBhcyBMaXRlcmF0ZSBpbiBJbmRpYS4gICBTdGF0ZW1lbnQgYyBpcyBpbmNvcnJlY3QgLSBUaGVyZSBpcyBubyBjaGFuZ2UgaW4gZGVmaW5pdGlvbiBvZiBsaXRlcmFjeSBhcyBwZXIgY2Vuc3VzIDIwMjEuIEFjY29yZGluZyB0byAgIHRoZSBkZWZpbml0aW9uIHByb3ZpZGVkIGluIHRoZSBJbmRpYW4gY2Vuc3VzLCBMaXRlcmFjeSBpcyBkZWZpbmVkIGFzICdhY3F1aXJpbmcgdGhlIHNraWxscyBvZiByZWFkaW5nLCB3cml0aW5nICAgd2l0aCB1bmRlcnN0YW5kaW5nJy4gQW55b25lIGFnZWQgNyBvciBhYm92ZSB3aXRoIHRoZSBhYmlsaXR5IHRvIHJlYWQgYW5kIHdyaXRlIGF0IGxlYXN0IGluIGFueSBvbmUgbGFuZ3VhZ2UgICBpcyBjb25zaWRlcmVkIGEgbGl0ZXJhdGUgcGVyc29uLiAgIFN0YXRlbWVudCBkIGlzIGluY29ycmVjdCAtIFdoZXJlIHRoZSBtYWxlIGxpdGVyYWN5IGluY3JlYXNlZCBieSAxMyUgYmV0d2VlbiAyMDAxLTIwMTEsIGZlbWFsZSBsaXRlcmFjeSAgIGluY3JlYXNlZCBieSBhbG1vc3QgMzUlLiAgICBLbm93bGVkZ2UgQmFzZTogTGl0ZXJhY3kgcmF0ZSBpbiBJbmRpYSBzdGFuZHMgYXQgNzQlIGFzIHBlciBDZW5zdXMgMjAxMS4gVGhlcmUgaXMgYSBzdGFyayBkaWZmZXJlbmNlIGJldHdlZW4gICBtYWxlIGFuZCBmZW1hbGUgbGl0ZXJhY3kgcmF0ZXMsIHdoaWNoIHN0YW5kIDgyJSBhbmQgNjUlIHJlc3BlY3RpdmVseS4gVGhlcmUgaXMgYSB3aWRlciBnYXAgaW4gbGl0ZXJhY3kgcmF0ZXMgICBvZiBkaWZmZXJlbnQgY2FzdGVzLiBUaGUgbGl0ZXJhY3kgcmF0ZSBvZiBTY2hlZHVsZWQgVHJpYmVzIHN0YW5kcyBhdCA1OC45NiUsIHdoaWxlIHRoZSBTY2hlZHVsZWQgQ2FzdGVzIGlzIGF0ICAgNjYuMTAlLiBLZXJhbGEgaGFzIHRoZSBoaWdoZXN0IGxpdGVyYWN5IHJhdGUgaW4gSW5kaWEsIGF0IDk0JSwgd2l0aCBtYWxlIGxpdGVyYWN5IHJhdGUgYXQgOTYuMSUgYW5kIGZlbWFsZSAgIGxpdGVyYWN5IHJhdGUgYXQgOTIuMSUuICAgIlRoZSBhYmlsaXR5IG9mIGluZGl2aWR1YWxzIGFuZCBjb21tdW5pdGllcyB0byB1bmRlcnN0YW5kIGFuZCB1c2UgZGlnaXRhbCB0ZWNobm9sb2dpZXMgZm9yIG1lYW5pbmdmdWwgICBhY3Rpb25zIHdpdGhpbiBsaWZlIHNpdHVhdGlvbnMiIGhhcyBiZWVuIGRlZmluZWQgYXMgZGlnaXRhbCBsaXRlcmFjeSBieSB0aGUgYXV0aG9yaXRpZXMuIFRoaXMgaXMgYXMgcGVyICAgZ3VpZGVsaW5lcyBvZiAnUHJhZGhhbiBNYW50cmkgR3JhbWluIERpZ2l0YWwgU2Frc2hhcnRhIEFiaGl5YW4nIChQTUdESVNIQSkgc2NoZW1lLiAgIFNvdXJjZTogQ2Vuc3VzIDIwMTEgLSAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBodHRwOi8vbW9zcGkubmljLmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvcmVwb3J0c19hbmRfcHVibGljYXRpb24vc3RhdGlzdGljYWxfcHVibGljYXRpb24vc29jaWFsX3N0YXRpc3QgIGljcy9XTTE3Q2hhcHRlcjMucGRmICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " All the children in the age group of 0-6 years   are treated as illiterate in India.  ",
        "option2" : " One must have either formal education or   acquire any minimum qualification to be   termed as literate in India.  ",
        "option3" : " Census 2021 has changed the definition of   literacy, to include knowledge of basic   arithmetic.  ",
        "option4" : " Between 2001 Census and 2011 Census, the   increase in male literacy is more than the   female literacy.   "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements  regarding 'Bio-Energy':  1.  It is produced from natural sources capable  of replacing fossil energy.  2.  It can replace conventional fuels in  electricity production due to its low-cost  technological requirements.  3.  It is termed as 'clean energy' as the  greenhouse gases emissions in its  production are zero.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJpby1lbmVyZ3kgcmVmZXJzIHRvIGVuZXJneSBkZXJpdmVkIGZyb20gYmlvbG9naWNhbCBwcm9kdWN0cyB3aGljaCBpbmNsdWRlcyBhZ3JpY3VsdHVyYWwgcmVzaWR1ZXMsICAgbXVuaWNpcGFsLCBpbmR1c3RyaWFsIGFuZCBvdGhlciB3YXN0ZXMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQmlvZW5lcmd5IGlzIGRlZmluZWQgYXMgYSByZW5ld2FibGUgZW5lcmd5IHByb2R1Y2VkIGZyb20gbmF0dXJhbCBzb3VyY2VzIGNhcGFibGUgICBvZiByZXBsYWNpbmcgZm9zc2lsIGVuZXJneS4gQmlvLWVuZXJneSBpcyBhIHBvdGVudGlhbCBzb3VyY2Ugb2YgZW5lcmd5IGNvbnZlcnNpb24uIEl0IGNhbiBiZSBjb252ZXJ0ZWQgaW50byAgIGVsZWN0cmljYWwgZW5lcmd5LCBoZWF0IGVuZXJneSBvciBnYXMgZm9yIGNvb2tpbmcuIEl0IHdpbGwgYWxzbyBwcm9jZXNzIHRoZSB3YXN0ZSBhbmQgZ2FyYmFnZSBhbmQgcHJvZHVjZSAgIGVuZXJneS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJpb2VuZXJneSBjYW4gY28tZ2VuZXJhdGUgZWxlY3RyaWNpdHkgYW5kIGhlYXQgdmlhIGNvbWJpbmVkIGhlYXQgYW5kIHBvd2VyICAgKENIUCkgc3lzdGVtcyB0byBzZXJ2ZSByZXNpZGVudGlhbCwgY29tbWVyY2lhbCwgYW5kIGluZHVzdHJpYWwgYnVpbGRpbmdzLiBPbmUgb2YgdGhlIG1ham9yIGNoYWxsZW5nZXMgb2YgICBiaW9lbmVyZ3kgd2l0aGluIHRoZSBlbGVjdHJpY2l0eSBwcm9kdWN0aW9uIHNlY3RvciBpcyB0aGUgcmVsYXRpdmVseSBoaWdoIGNvc3Qgb2YgZWxlY3RyaWNpdHkgZ2VuZXJhdGlvbiBhbmQgICBsaW1pdGVkIHNjb3BlIGZvciBsb3dlcmluZyB0aGVzZSBjb3N0cyBkdWUgdG8gZ2VuZXJhbCBtYXR1cml0eSBvZiB0ZWNobm9sb2d5IGltcGxlbWVudGVkLiBCaW9lbmVyZ3kgICBhY2NvdW50cyBmb3Igb25seSAyJSBvZiBnbG9iYWwgZWxlY3RyaWNpdHkgZ2VuZXJhdGlvbiB3aXRoIHRoZSB0b3RhbCBpbnN0YWxsZWQgY2FwYWNpdHkuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBCaW8tZW5lcmd5IGlzIG5vdCBhIGNsZWFuIGZvcm0gb2YgZW5lcmd5LiBJdCBwcm9kdWNlcyBncmVlbmhvdXNlIGdhc2VzIGxpa2UgICBjYXJib24gZGlveGlkZSBhbmQgbWV0aGFuZS4gWWV0LCB0aGUgdXNlIG9mIGJpb2VuZXJneSBoYXMgdGhlIHBvdGVudGlhbCB0byBncmVhdGx5IHJlZHVjZSBncmVlbmhvdXNlIGdhcyAgIGVtaXNzaW9ucy4gRXhhbXBsZTogQnVybmluZyBiaW9tYXNzIChiaW9lbmVyZ3kpIHJlbGVhc2VzIGFib3V0IHRoZSBzYW1lIGFtb3VudCBvZiBjYXJib24gZGlveGlkZSBhcyAgIGJ1cm5pbmcgZm9zc2lsIGZ1ZWxzLiBIb3dldmVyLCBmb3NzaWwgZnVlbHMgcmVsZWFzZSBjYXJib24gZGlveGlkZSBjYXB0dXJlZCBieSBwaG90b3N5bnRoZXNpcyBtaWxsaW9ucyBvZiAgIHllYXJzIGFnby1hbiBlc3NlbnRpYWxseSAibmV3IiBncmVlbmhvdXNlIGdhcy4gQmlvbWFzcywgb24gdGhlIG90aGVyIGhhbmQsIHJlbGVhc2VzIGNhcmJvbiBkaW94aWRlIHRoYXQgICBpcyBsYXJnZWx5IGJhbGFuY2VkIGJ5IHRoZSBjYXJib24gZGlveGlkZSBjYXB0dXJlZCBpbiBpdHMgb3duIGdyb3d0aCAoZGVwZW5kaW5nIG9uIGhvdyBtdWNoIGVuZXJneSB3YXMgICB1c2VkIHRvIGdyb3csIGhhcnZlc3QsIGFuZCBwcm9jZXNzIHRoZSBmdWVsKS4gICAgU291cmNlOiBDaGFwdGVyLTcucG1kIChuY2VydC5uaWMuaW4pIEJpb2VuZXJneSAtIGFuIG92ZXJ2aWV3IHwgU2NpZW5jZURpcmVjdCBUb3BpY3MgQmlvbWFzcyBFbmVyZ3kgQmFzaWNzICAgfCBOUkVMICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements  regarding Census 2021 of India:  1.  It is to be the first digital Census using  Mobile Applications for collection of data.  2.  It will collect information about the mother  tongue and two other languages known.  3.  It will be the first census to collect caste  wise data for the total population of India.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBHb3Zlcm5tZW50IGRlY2lkZWQgdG8gY29uZHVjdCBDZW5zdXMgMjAyMSB1bmRlciB0aGUgQ2Vuc3VzIEFjdCwgMTk0OCBpbiB0d28gcGhhc2VzLCB2aXouLCAoYSkgSG91c2UgICBsaXN0aW5nICYgSG91c2luZyBDZW5zdXMgZHVyaW5nIEFwcmlsLVNlcHRlbWJlciwgMjAyMCBhbmQgKGIpIFBvcHVsYXRpb24gRW51bWVyYXRpb24gZHVyaW5nIDl0aCB0byAyOHRoICAgRmVicnVhcnksIDIwMjEuIER1ZSB0byB0aGUgb3V0YnJlYWsgb2YgQ292aWQtMTksIHRoZSBmaXJzdCBwaGFzZSBvZiBDZW5zdXMsIHVwZGF0aW5nIG9mIE5QUiBhbmQgb3RoZXIgICByZWxhdGVkIGZpZWxkIGFjdGl2aXRpZXMgaGF2ZSBiZWVuIHBvc3Rwb25lZC4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGZvcnRoY29taW5nIENlbnN1cyBpcyB0byBiZSB0aGUgZmlyc3QgZGlnaXRhbCBDZW5zdXMuIE1vYmlsZSBBcHAgZm9yIGNvbGxlY3Rpb24gICBvZiBkYXRhIGFuZCBhIENlbnN1cyBQb3J0YWwgZm9yIG1hbmFnZW1lbnQgYW5kIG1vbml0b3Jpbmcgb2YgdmFyaW91cyBDZW5zdXMgcmVsYXRlZCBhY3Rpdml0aWVzIGhhdmUgICBiZWVuIGRldmVsb3BlZC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgbmFtZXMgb2YgdGhlIG1vdGhlciB0b25ndWUgYW5kIHR3byBvdGhlciBsYW5ndWFnZXMga25vd24gaW4gb3JkZXIgb2YgICBwcm9maWNpZW5jeSBhcmUgdG8gYmUgcmVjb3JkZWQgYnkgdGhlIGVudW1lcmF0b3IgaW4gdGhlIGZvcnRoY29taW5nIENlbnN1cyBhcyByZXNwb25kZWQgYnkgZWFjaCBwZXJzb24uICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBJbiBDZW5zdXMsIHRoZSBjYXN0ZXMgYW5kIHRyaWJlcyB3aGljaCBhcmUgc3BlY2lmaWNhbGx5IG5vdGlmaWVkIGFzIFNjaGVkdWxlZCAgIENhc3RlcyBhbmQgU2NoZWR1bGVkIFRyaWJlcyBhcyBwZXIgdGhlIENvbnN0aXR1dGlvbiAoU2NoZWR1bGVkIENhc3RlcykgT3JkZXIgMTk1MCBhbmQgdGhlIENvbnN0aXR1dGlvbiAgIChTY2hlZHVsZWQgVHJpYmVzKSBPcmRlciwgMTk1MCAoYXMgYW1lbmRlZCBmcm9tIHRpbWUgdG8gdGltZSkgYXJlIGVudW1lcmF0ZWQuIFRoZSBVbmlvbiBvZiBJbmRpYSBhZnRlciAgIGluZGVwZW5kZW5jZSwgZGVjaWRlZCBhcyBhIG1hdHRlciBvZiBwb2xpY3kgbm90IHRvIGVudW1lcmF0ZSBjYXN0ZSB3aXNlIHBvcHVsYXRpb24gb3RoZXIgdGhhbiBTQ3MgYW5kICAgU1RzLiAgIEtub3dsZWRnZSBCYXNlOiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgSW4gY2Vuc3VzIDIwMjEgb3BlcmF0aW9ucywgbm8gdGVjaG5pY2FsIGFzc2lzdGFuY2UgaGFzIGJlZW4gb2J0YWluZWQgZnJvbSBhbnkgaW50ZXJuYXRpb25hbCBhZ2VuY3kgZm9yICAgY29uZHVjdGluZyBDZW5zdXMgb3BlcmF0aW9ucyBpbiB0aGUgZmllbGQ7IGRldmVsb3BtZW50IG9mIENlbnN1cyBRdWVzdGlvbm5haXJlcywgTW9iaWxlIGFwcGxpY2F0aW9ucyAgIGFuZCBDZW5zdXMgTWFuYWdlbWVudCBhbmQgTW9uaXRvcmluZyBTeXN0ZW0gKENNTVMpIHBvcnRhbDsgZXRjLiAgICAgVGhlIHJvbGUgb2YgaW50ZXJuYXRpb25hbCBhZ2VuY2llcyBpcyBsaW1pdGVkIHRvIHN1cHBvcnQgaW4gZGV2ZWxvcG1lbnQgb2YgcHVibGljaXR5IG1hdGVyaWFsIGFuZCBlLWxlYXJuaW5nICAgdHJhaW5pbmcgbW9kdWxlcyBieSBVTklDRUYsIFVOIFdPTUVOIGFuZCBVTkZQQS4gICAgU29jaW8gRWNvbm9taWMgYW5kIENhc3RlIENlbnN1cyAoU0VDQykgMjAxMSB3YXMgY29uZHVjdGVkIGJ5IHRoZSBNaW5pc3RyeSBvZiBSdXJhbCBEZXZlbG9wbWVudCAgIChNb1JEKSBhbmQgdGhlIHRoZW4gTWluaXN0cnkgb2YgSG91c2luZyBhbmQgVXJiYW4gUG92ZXJ0eSBBbGxldmlhdGlvbiAoSFVQQSkgaW4gcnVyYWwgYW5kIHVyYmFuIGFyZWFzICAgcmVzcGVjdGl2ZWx5LiAgVGhlIFNFQ0MgMjAxMSBkYXRhIGV4Y2x1ZGluZyB0aGUgY2FzdGUgZGF0YSBoYXMgYmVlbiBmaW5hbGl6ZWQgYW5kIHB1Ymxpc2hlZCBieSBNb1JEIGFuZCAgIEhVUEEuIFRoZSBPZmZpY2Ugb2YgdGhlIFJlZ2lzdHJhciBHZW5lcmFsLCBJbmRpYSBoYWQgcHJvdmlkZWQgbG9naXN0aWNzIGFuZCB0ZWNobmljYWwgc3VwcG9ydCBpbiBjb25kdWN0aW5nICAgdGhlIFNFQ0MtMjAxMS4gIFRoZSByYXcgY2FzdGUgZGF0YSBoYXMgYmVlbiBwcm92aWRlZCB0byB0aGUgTWluaXN0cnkgb2YgU29jaWFsIEp1c3RpY2UgYW5kIEVtcG93ZXJtZW50ICAgKE1vU0pFKSBmb3IgY2xhc3NpZmljYXRpb24gYW5kIGNhdGVnb3JpemF0aW9uIG9mIHRoZSBkYXRhLiAgICAgU291cmNlOiAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzcmVsZWFzZXNoYXJlLmFzcHg/UFJJRD0xNzAzNzg2ICAgaHR0cHM6Ly93d3cucGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmFzcHg/UFJJRD0xNzc2ODE3ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 12,
      "question" : "Arrange the following sectors according  to the increasing water utilization:  1. Industry  2. Irrigation  3. Domestic/Household  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFncmljdWx0dXJlIGFjY291bnRzIGZvciBtb3N0IG9mIHRoZSBzdXJmYWNlIGFuZCBncm91bmR3YXRlciB1dGlsaXphdGlvbiwgaXQgYWNjb3VudHMgZm9yIDg5IHBlciBjZW50IG9mIHRoZSAgIHN1cmZhY2Ugd2F0ZXIgYW5kIDkyIHBlciBjZW50IG9mIHRoZSBncm91bmR3YXRlciB1dGlsaXphdGlvbi4gV2hpbGUgdGhlIHNoYXJlIG9mIHRoZSBpbmR1c3RyaWFsIHNlY3RvciBpcyAgIGxpbWl0ZWQgdG8gMiBwZXIgY2VudCBvZiB0aGUgc3VyZmFjZSB3YXRlciB1dGlsaXphdGlvbiBhbmQgNSBwZXIgY2VudCBvZiB0aGUgZ3JvdW5kLXdhdGVyLCB0aGUgc2hhcmUgb2YgICBkb21lc3RpYyBzZWN0b3IgaXMgaGlnaGVyICg5IHBlciBjZW50KSBpbiBzdXJmYWNlIHdhdGVyIHV0aWxpemF0aW9uIGFzIGNvbXBhcmVkIHRvIGdyb3VuZHdhdGVyLiBUaGUgc2hhcmUgICBvZiB0aGUgYWdyaWN1bHR1cmFsIHNlY3RvciBpbiB0b3RhbCB3YXRlciB1dGlsaXphdGlvbiBpcyBtdWNoIGhpZ2hlciB0aGFuIG90aGVyIHNlY3RvcnMuICAgQ29ycmVjdCBzZXF1ZW5jZSBhY2NvcmRpbmcgdG8gaW5jcmVhc2UgZGVtYW5kIGZvciB3YXRlciB1dGlsaXphdGlvbiBpcyBhcyB1bmRlciAgIEluZHVzdHJ5IChMb3dlc3QpICAgRG9tZXN0aWMgKEludGVybWVkaWF0ZSkgICBJcnJpZ2F0aW9uIChIaWdoZXN0KSAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9PcGluaW9uLzk3ZnVhRjJhUWtPOUlqUGlQQWpNeUwvU2l4LWNoYXJ0cy10aGF0LWV4cGxhaW4tSW5kaWFzLSAgd2F0ZXItY3Jpc2lzLmh0bWwgICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MjA2LnBkZiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3  ",
        "option2" : "2-3-1  ",
        "option3" : "2-1-3  ",
        "option4" : "1-3-2   "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements with  reference to distribution of mineral resources  in India:  1.  Most of the metallic minerals in India occur  in the Himalayan region.  2.  Most of the coal reserves of India occur in  the valleys of Narmada, Indus and Kaveri.  3.  Petroleum reserves are located in the  sedimentary basins of Assam, Gujarat and  Mumbai High.  Which of the above statements is/are correct  in the above context?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgSW5kaWEgaXMgb25lIG9mIHRoZSByaWNoZXN0IGNvdW50cmllcyBpbiBtaW5lcmFscyByZXNvdXJjZXMgaW4gdGhlIHdvcmxkLiBTaW5jZSBJbmRpYSdzIGludGVybmFsIHN0cnVjdHVyZSBvZiAgIGVhcnRoIGlzIHRoZSBwcm9kdWN0IG9mIGFuY2llbnQgaGFyZCByb2NrJ3MgdGhlcmVmb3JlIGFsbW9zdCBhbGwga2luZHMgb2YgbWluZXJhbHMgYXJlIGZvdW5kIGhlcmUgZXNwZWNpYWxseSAgIGluIEdvbmR3YW5hIHJvY2tzLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTW9zdCBvZiB0aGUgbWV0YWxsaWMgbWluZXJhbHMgaW4gSW5kaWEgb2NjdXIgaW4gdGhlIHBlbmluc3VsYXIgcGxhdGVhdSByZWdpb24gaW4gICB0aGUgb2xkIGNyeXN0YWxsaW5lIHJvY2tzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gT3ZlciA5NyBwZXIgY2VudCBvZiBjb2FsIHJlc2VydmVzIG9jY3VyIGluIHRoZSB2YWxsZXlzIG9mIERhbW9kYXIsIFNvbmUsICAgTWFoYW5hZGkgYW5kIEdvZGF2YXJpLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0IFBldHJvbGV1bSByZXNlcnZlcyBhcmUgbG9jYXRlZCBpbiB0aGUgc2VkaW1lbnRhcnkgYmFzaW5zIG9mIEFzc2FtLCBHdWphcmF0IGFuZCAgIE11bWJhaSBIaWdoIGkuZS4sIG9mZi1zaG9yZSByZWdpb24gaW4gdGhlIEFyYWJpYW4gU2VhLiBOZXcgcmVzZXJ2ZXMgaGF2ZSBiZWVuIGxvY2F0ZWQgaW4gdGhlIEtyaXNobmEtICBHb2RhdmFyaSBhbmQgS2F2ZXJpIGJhc2lucy4gICBNb3N0IG9mIHRoZSBtYWpvciBtaW5lcmFsIHJlc291cmNlcyBvY2N1ciB0byB0aGUgZWFzdCBvZiBhIGxpbmUgbGlua2luZyBNYW5nYWx1cnUgYW5kIEthbnB1ci4gTWluZXJhbHMgYXJlICAgZ2VuZXJhbGx5IGNvbmNlbnRyYXRlZCBpbiB0aHJlZSBicm9hZCBiZWx0cyBpbiBJbmRpYS4gICBTb3VyY2U6ICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MjA3LnBkZiAgICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 14,
      "question" : "Which among the following are principal  reasons behind the decline in share of railways  in total freight transport in India?  1.  Absence of last mile delivery  2.  Non-competitive tariff structure  3.  Low capability to generate operational  surplus  4.  No foreign direct investment (FDI)  permitted in railway infrastructure sector  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgSW5kaWFuIFJhaWx3YXlzIGlzIGEgZ292ZXJubWVudC1vd25lZC1yYWlsd2F5IHN5c3RlbSB1bmRlciB0aGUgb3duZXJzaGlwIG9mIE1pbmlzdHJ5IG9mIFJhaWx3YXlzLCAgIEdvdmVybm1lbnQgb2YgSW5kaWEgdGhhdCBvcGVyYXRlcyBJbmRpYSdzIG5hdGlvbmFsIHJhaWx3YXkgc3lzdGVtLiBJdCBtYW5hZ2VzIHRoZSBGb3VydGgtbGFyZ2VzdCByYWlsd2F5ICAgbmV0d29yayBpbiB0aGUgd29ybGQgYnkgc2l6ZSwgd2l0aCBhIHJvdXRlIGxlbmd0aCBvZiA2Nyw5NTYga20gYXMgb2YgMzEgTWFyY2ggMjAyMC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBSYWlsd2F5cyBoYXMgYmVlbiBsb3Npbmcgb3V0IG9uIHRoZSBGTUNHIGFuZCBhdXRvbW9iaWxlIG1hcmtldHMgKHdoaWNoIGFyZSAgIHByZWZlcnJpbmcgcm9hZHMpIGR1ZSB0byBhYnNlbmNlIG9mIGxhc3QgbWlsZSBsaW5rYWdlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHNoYXJlIG9mIEluZGlhbiBSYWlsd2F5cyBpbiBmcmVpZ2h0IG1vdmVtZW50IGhhcyBiZWVuIHdpdG5lc3NpbmcgYSBkcm9wIG92ZXIgICBhIHBlcmlvZCBvZiB0aW1lLCBtYWlubHkgb24gYWNjb3VudCBvZiBub24tY29tcGV0aXRpdmUgdGFyaWZmIHN0cnVjdHVyZS4gUmFpbHdheXMnIGZyZWlnaHQgcmF0ZXMgYXJlIGFscmVhZHkgICBoaWdoZXIgdGhhbiBvdGhlciBtb2RlcyBvZiB0cmFuc3BvcnQgZm9yIHNldmVyYWwgY29tbW9kaXRpZXMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFJhaWx3YXlzJyBvcGVyYXRpbmcgcmF0aW8gaGFzIGNvbnNpc3RlbnRseSBiZWVuIGhpZ2hlciB0aGFuIDkwJSBpbiB0aGUgcGFzdCBzZXZlcmFsICAgeWVhcnMsIHdoaWNoIGluZGljYXRlcyB0aGF0IGl0cyBjYXBhYmlsaXR5IHRvIGdlbmVyYXRlIG9wZXJhdGlvbmFsIHN1cnBsdXMgaXMgbG93LiAgRnVydGhlciwgaXRzIGV4cGVuZGl0dXJlICAgb24gc3RhZmYgYW5kIHBlbnNpb24gaGFzIGJlZW4gaW5jcmVhc2luZy4gIENvbnNlcXVlbnRseSwgY2FwYWNpdHkgZ3Jvd3RoIGlzIGluY3JlYXNpbmdseSBiZWluZyBmdW5kZWQgICB0aHJvdWdoIGJvcnJvd2luZ3MuICAgU3RhdGVtZW50cyA0IGlzIGluY29ycmVjdC4gRmFjaW5nIHN0aWZmIGNvbXBldGl0aW9uIGZyb20gb3RoZXIgbW9kZXMgb2YgdHJhbnNwb3J0YXRpb24sIHRoZSBnb3Zlcm5tZW50IGlzICAgaW50cm9kdWNpbmcgdmFyaW91cyB0cmFuc2Zvcm1hdGl2ZSBtZWFzdXJlcyBpbiBvcmRlciB0byBrZWVwIHJhaWx3YXlzIG9uIHRyYWNrLiBUaGVzZSBtZWFzdXJlcyBpbmNsdWRlICAgbmV3IG1vZGVybmlzZWQgd2Fnb25zLCBkZWRpY2F0ZWQgZnJlaWdodCBjb3JyaWRvcnMsIGhpZ2ggc3BlZWQgcmFpbCwgaGlnaC1jYXBhY2l0eSByb2xsaW5nIHN0b2NrLCBwb3J0ICAgY29ubmVjdGl2aXR5LCBhbmQgYXR0cmFjdGluZyBwcml2YXRlIGFuZCBmb3JlaWduIGRpcmVjdCBpbnZlc3RtZW50LiBUaGUgRkRJIFBvbGljeSBwZXJtaXRzIDEwMCUgRkRJIGluIHRoZSAgIHJhaWx3YXkncyBpbmZyYXN0cnVjdHVyZSBzZWN0b3IuIEZESSBpcyBwZXJtaXR0ZWQgaW4gdGhlIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9uIGFuZCBtYWludGVuYW5jZSBvZiB0aGUgICByYWlsd2F5IHRyYW5zcG9ydCBzZWN0b3IuICAgICBGaWd1cmU6IFJhaWx3YXlzJyB0cmFmZmljIHNoYXJlICAgU291cmNlOiBodHRwczovL3d3dy5uaXRpLmdvdi5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzLzIwMjEtMDYvRnJlaWdodFJlcG9ydE5hdGlvbmFsTGV2ZWwucGRmICAgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9pbmR1c3RyeSByYW5zcG9ydGF0aW9uL3JhaWx3YXlzL3JhaWx3YXlzLWZyZWlnaHQtdHJhZmZpYy0gIGRlY2xpbmluZy1vbi1ub24tY29tcGV0aXRpdmUtdGFyaWZmLXN1cnZleS9hcnRpY2xlc2hvdy82MjY5NjYzOC5jbXM/ZnJvbT1tZHIgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following factors will have a  definite impact on the automobile industry?  1. Technology  2. Demography  3. Level of competition  4. Total cost of ownership  Select the correct answer from the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEF1dG9tb2JpbGVzIHByb3ZpZGUgdmVoaWNsZSBmb3IgcXVpY2sgdHJhbnNwb3J0IG9mIGdvb2Qgc2VydmljZXMgYW5kIHBhc3NlbmdlcnMuIFRydWNrcywgYnVzZXMsIGNhcnMsICAgbW90b3IgY3ljbGVzLCBzY29vdGVycywgdGhyZWUtd2hlZWxlcnMgYW5kIG11bHRpLXV0aWxpdHkgdmVoaWNsZXMgYXJlIG1hbnVmYWN0dXJlZCBpbiBJbmRpYSBhdCB2YXJpb3VzICAgY2VudHJlcy4gICBGYWN0b3JzIEFmZmVjdGluZyBBdXRvbW9iaWxlIEluZHVzdHJ5OiAgIDEpIEVjb25vbWljIGNvbmRpdGlvbnM6IEVjb25vbWljIGZhY3RvcnMgaGF2ZSBhbHdheXMgcGxheWVkIGEgcHJvbWluZW50IHJvbGUgaW4gYWZmZWN0aW5nIHRoZSBkZW1hbmQgICBhbmQgc2FsZXMgb2YgYXV0b21vYmlsZXMgYXJvdW5kIHRoZSB3b3JsZC4gV2hlbiB0aGUgbGV2ZWwgb2YgZWNvbm9taWMgYWN0aXZpdHkgaXMgaGlnaCBnbG9iYWxseSwgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgYXV0b21vYmlsZSBkZW1hbmQgYW5kIHNhbGVzIGFyZSBnZW5lcmFsbHkgaGlnaCBhbmQgb24gdGhlIGNvbnRyYXJ5LCBpZiB0aGUgZ2xvYmFsIGVjb25vbXkgaXMgdGhyb3VnaCAgIGEgcmVjZXNzaW9uYXJ5IHBlcmlvZCwgY2FyIHNhbGVzIGFyZSBsb3cgd29ybGR3aWRlLiAgIDIpIENhciBwcmljZXM6IENvbnN1bWVycyBjb21wYXJlIHRoZSBwcmljZXMgb2YgY2FycyBiZWZvcmUgbWFraW5nIGEgcHVyY2hhc2UuIExhcmdlIG51bWJlciBvZiBjYXIgICBicmFuZHMgdGhhdCBzZWxsIGZhbWlseSBjYXJzIGFuZCBTVVZzLCB0aGUgbWlkZGxlIGN1c3RvbWVyIGlzIHRoZWlyIG1haW4gdGFyZ2V0IHNlZ21lbnQgYW5kIHByaWNlcyBhcmUgICB0aGVyZWZvcmUgaW1wb3J0YW50LiAgICAzKSBGdWVsIFByaWNlczogSWYgdGhlIFBldHJvbCBQcmljZSBncm93IGhpZ2hlciwgdGhlIG51bWJlciBvZiBjYXJzIHB1cmNoYXNlZCB3aWxsIGRlY3JlYXNlLiBJbiBzb21lICAgbWFya2V0cywgdGhlIHByaWNlcyBvZiBvd25pbmcgYSBjYXIgY2FuIGFsc28gYmUgZHJpdmVuIGhpZ2ggYnkgZ292ZXJubWVudC1yZWxhdGVkIGZhY3RvcnMuIEZvciBleGFtcGxlLCAgIGlmIHRoZSBnb3Zlcm5tZW50IHJhaXNlcyB0aGUgcmVnaXN0cmF0aW9uIGZlZXMgY29uc2lkZXJhYmx5LCBpdCBjYW4gbGVhZCB0byBoaWdoZXIgY29zdHMgb2Ygb3duaW5nIGEgY2FyICAgYW5kIHRoZXJlZm9yZSByZXRhcmRhdGlvbiBpbiBjYXIgc2FsZXMuICAgNCkgVGVjaG5vbG9neTogSW4gdGhlIGF1dG9tb2JpbGUgaW5kdXN0cnksIHRlY2hub2xvZ3kgaGFzIGEgc2lnbmlmaWNhbnQgaW1wYWN0IG9uIGRlbWFuZCBhbmQgc2FsZXMuIE9uICAgdGhlIG9uZSBoYW5kLCB0ZWNobm9sb2d5IGhhcyBoZWxwZWQgY2FyIG1hbnVmYWN0dXJlcnMgZHJpdmUgdGhlaXIgb3BlcmF0aW9uYWwgY29zdHMgbG93ZXIgYW5kIGluY3JlYXNlICAgdGhlaXIgcHJvZml0IG1hcmdpbnMsIG9uIHRoZSBvdGhlciwgaXQgaGFzIGFsc28gaGVscGVkIHRoZW0gYWNoaWV2ZSBoaWdoZXIgUk9JIGZyb20gdGhlaXIgbWFya2V0aW5nICAgZXhwZW5zZXMuICAgNSkgQXZhaWxhYmlsaXR5IG9mIHF1YWxpdHkgcmF3IG1hdGVyaWFscyBhbmQgbGFib3VyOiBUbyBhbiBleHRlbnQsIHRoZSBhdmFpbGFiaWxpdHkgb2YgZ29vZCBxdWFsaXR5IHJhdyAgIG1hdGVyaWFscyBhbmQgcXVhbGlmaWVkIGxhYm91ciBhbHNvIGFmZmVjdHMgdGhlIGRlbWFuZCBhbmQgc2FsZXMgb2YgYXV0b21vYmlsZXMuIENvbXBldGl0aW9uIGlzIGhpZ2ggaW4gICB0aGUgYXV0b21vYmlsZSBpbmR1c3RyeSBhbmQgY29tcGFuaWVzIGFyZSBjb21wZXRpbmcgYWdhaW5zdCBlYWNoIG90aGVyIGZvciBvYnRhaW5pbmcgZ29vZCBxdWFsaXR5ICAgcmF3IG1hdGVyaWFsIGFuZCB0YWxlbnRlZCBodW1hbiByZXNvdXJjZXMuICAgIDYpIFRoZSB0b3RhbCBjb3N0IG9mIG93bmVyc2hpcDogVGhlIHRvdGFsIGNvc3Qgb2Ygb3duZXJzaGlwIG9mIGEgdmVoaWNsZSBhbHNvIGRldGVybWluZXMgaXRzIGRlbWFuZCBhbmQgICBzYWxlcyBsZXZlbC4gRm9yIGV4YW1wbGUsIGEgY2FyIG1vZGVsIHRoYXQgY29zdHMgbG93ZXIgYnV0IGl0cyBtYWludGVuYW5jZSBjb3N0cyBhcmUgaGlnaCBtYXkgZW5kIHVwICAgc2VsbGluZyBmZXdlciB1bml0cyBjb21wYXJlZCB0byB0aGUgY2FyIG1vZGVsIHdob3NlIHByaWNlIGlzIGhpZ2ggYnV0IG1haW50ZW5hbmNlIGNvc3RzIGFyZSAgIGNvbXBhcmF0aXZlbHkgbG93ZXIgYW5kIGZ1ZWwgZWZmaWNpZW5jeSBzdXBlcmlvciBjb21wYXJlZCB0byB0aGUgZmlyc3QgbW9kZWwuIE9uZSBpbXBvcnRhbnQgcmVhc29uICAgdGhhdCB0aGUgc2FsZXMgb2YgVGVzbGEgY2FycyBzaG90IHVwIGlzIHRoYXQgdGhlaXIgbWFpbnRlbmFuY2UgY29zdCBpcyBtdWNoIGxvd2VyIGNvbXBhcmVkIHRvIHRoZSByZWd1bGFyICAgZ2Fzb2xpbmUgY2Fycy4gICAgU291cmNlOiBGYWN0b3JzIEFmZmVjdGluZyBWZWhpY2xlIERlbWFuZCBhbmQgU2FsZXMgaW4gdGhlIEF1dG9tb2JpbGUgSW5kdXN0cnkgLSBub3Rlc21hdGljICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements:  Assertion (A): Computer Chips manufacturing  can be located anywhere in the world.  Reasoning (R): It is a type of footloose industry.  For the Assertions (A) and Reasons (R), which is  correct alternative from the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJvdGggQXNzZXJ0aW9uIGFuZCBSZWFzb24gYXJlIHRydWUgYW5kIFJlYXNvbiBpcyB0aGUgY29ycmVjdCBleHBsYW5hdGlvbiBvZiBBc3NlcnRpb24uICAgRm9vdGxvb3NlIGluZHVzdHJ5IGlzIGEgZ2VuZXJhbCB0ZXJtIGZvciBhbiBpbmR1c3RyeSB0aGF0IGNhbiBiZSBwbGFjZWQgYW5kIGxvY2F0ZWQgYXQgYW55IGxvY2F0aW9uIHdpdGhvdXQgICBlZmZlY3QgZnJvbSBmYWN0b3JzIG9mIHByb2R1Y3Rpb24gc3VjaCBhcyByZXNvdXJjZXMsIGxhbmQsIGxhYm91ciwgYW5kIGNhcGl0YWwuIEZvb3QgbG9vc2UgaW5kdXN0cmllcyBjYW4gICBiZSBsb2NhdGVkIGluIGEgd2lkZSB2YXJpZXR5IG9mIHBsYWNlcy4gVGhleSBhcmUgbm90IGRlcGVuZGVudCBvbiBhbnkgc3BlY2lmaWMgcmF3IG1hdGVyaWFsLCB3ZWlnaHQgbG9zaW5nICAgb3Igb3RoZXJ3aXNlLiBUaGV5IGxhcmdlbHkgZGVwZW5kIG9uIGNvbXBvbmVudCBwYXJ0cyB3aGljaCBjYW4gYmUgb2J0YWluZWQgYW55d2hlcmUuIFRoZXkgcHJvZHVjZSBpbiAgIHNtYWxsIHF1YW50aXR5IGFuZCBhbHNvIGVtcGxveSBhIHNtYWxsIGxhYm91ciBmb3JjZS4gVGhlc2UgYXJlIGdlbmVyYWxseSBub3QgcG9sbHV0aW5nIGluZHVzdHJpZXMuIFRoZSAgIGltcG9ydGFudCBmYWN0b3IgaW4gdGhlaXIgbG9jYXRpb24gaXMgYWNjZXNzaWJpbGl0eSBieSByb2FkIG5ldHdvcmsuICAgVGhlc2UgaW5kdXN0cmllcyBvZnRlbiBoYXZlIHNwYXRpYWxseSBmaXhlZCBjb3N0cywgd2hpY2ggbWVhbnMgdGhhdCB0aGUgY29zdHMgb2YgdGhlIHByb2R1Y3RzIGRvIG5vdCBjaGFuZ2UgICByZWdhcmRsZXNzIG9mIHdoZXJlIHRoZSBwcm9kdWN0IGlzIGFzc2VtYmxlZC4gRGlhbW9uZHMsIGNvbXB1dGVyIGNoaXBzLCBhbmQgbW9iaWxlIG1hbnVmYWN0dXJpbmcgYXJlICAgc29tZSBleGFtcGxlcyBvZiBmb290bG9vc2UgaW5kdXN0cmllcy4gVGhlc2UgYXJlIGdlbmVyYWxseSBub24tcG9sbHV0aW5nIGluZHVzdHJpZXMuICAgU291cmNlOiBDaGFwdGVyIDYucG1kIChuY2VydC5uaWMuaW4pICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both A and R are true and R is the correct   explanation of A  ",
        "option2" : " Both A and R are true but R is not the correct   explanation of A  ",
        "option3" : " A is true but R is false  ",
        "option4" : " A is false but R is true.   "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following is the most  appropriate reason for India losing out to  countries like Bangladesh and Vietnam in  textiles sector?  1. High tariffs faced by Indian textile exporters  in foreign markets.  2. No subsidy is provided to the Indian textile  industries to increase employment.  3. Indian domestic policy favors clothing based  on man-made fibres.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGlzIGFtb25nIHRoZSB3b3JsZCdzIGxhcmdlc3QgcHJvZHVjZXJzIG9mIFRleHRpbGVzIGFuZCBBcHBhcmVsLiBUaGUgZG9tZXN0aWMgYXBwYXJlbCAmIHRleHRpbGUgICBpbmR1c3RyeSBpbiBJbmRpYSBjb250cmlidXRlcyA1JSB0byB0aGUgY291bnRyeSdzIEdEUCwgNyUgb2YgaW5kdXN0cnkgb3V0cHV0IGluIHZhbHVlIHRlcm1zLCBhbmQgMTIlIG9mIHRoZSAgIGNvdW50cnkncyBleHBvcnQgZWFybmluZ3MuIEluZGlhIGlzIHRoZSA2dGggbGFyZ2VzdCBleHBvcnRlciBvZiB0ZXh0aWxlcyBhbmQgYXBwYXJlbCBpbiB0aGUgd29ybGQuIEhvd2V2ZXIsICAgaW4gcmVjZW50IHRpbWVzIEluZGlhIGlzIGxvc2luZyBvdXQgdG8gY291bnRyaWVzIGxpa2UgQmFuZ2xhZGVzaCBhbmQgVmlldG5hbSBpbiB0ZXh0aWxlcyBzZWN0b3IuICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgbW9zdCBhcHByb3ByaWF0ZSByZWFzb24gZm9yIEluZGlhIGxvc2luZyBvdXQgdG8gQmFuZ2xhZGVzaCBhbmQgVmlldG5hbSBpbiAgIHRleHRpbGVzIHNlY3RvciBpcyBoaWdoIHRhcmlmZnMgZmFjZWQgYnkgSW5kaWFuIGV4cG9ydGVycyBhcyBjb21wYXJlZCB0byBCYW5nbGFkZXNoIGFuZCBWaWV0bmFtIGV4cG9ydGVycyAgIGluIGZvcmVpZ24gbWFya2V0cy4gRm9yIGV4YW1wbGUsIGluIHRoZSBFVSwgQmFuZ2xhZGVzaCdzIGV4cG9ydHMgZW50ZXIgbW9zdGx5IGR1dHkgZnJlZSB3aGlsZSBJbmRpYW4gZXhwb3J0cyAgIGZhY2UgYW4gYXZlcmFnZSB0YXJpZmYgb2YgOS4yIHBlciBjZW50LiBBcyBJbmRpYSB3aXRoZHJldyBmcm9tIFJDRVAsIEluZGlhIHdpbGwgYmUgZGlzYWR2YW50YWdlZCBpbiB0aGUgICBtYXJrZXQuIEluZGlhIGluZHVzdHJ5J3MgZGVwZW5kZW5jZSBvbiBkdXR5IGRyYXdiYWNrcyBhdCB0aGUgZXhwZW5zZSBvZiBpbm5vdmF0aW9uIGFyZSBjYXVzaW5nIHRoZSB0ZXh0aWxlICAgaW5kdXN0cnkgdG8gbG9zZSBvdXQgdG8gQmFuZ2xhZGVzaC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEl0IGlzIG5vdCB0aGUgY2FzZSB0aGF0IG5vIHN1YnNpZHkgaXMgcHJvdmlkZWQgdG8gdGhlIEluZGlhbiB0ZXh0aWxlIGluZHVzdHJpZXMgdG8gICBpbmNyZWFzZSBlbXBsb3ltZW50LiBVbmRlciwgUHJhZGhhbiBNYW50cmkgUm9qZ2FyIFByb3RzYWhhbiBZb2phbmEgKFBNUlBZKSwgR292ZXJubWVudCBpcyBwYXlpbmcgdGhlICAgOC4zMyUgY29udHJpYnV0aW9uIG9mIGVtcGxveWVycyB0byB0aGUgRW1wbG95ZWUgUGVuc2lvbiBTY2hlbWUgKEVQUykgaW4gcmVzcGVjdCBvZiBuZXcgZW1wbG95ZWVzICAgaGF2aW5nIGEgVUFOLiBGb3IgdGhlIHRleHRpbGUgKGFwcGFyZWwpIHNlY3RvciwgdGhlIEdvdmVybm1lbnQgd2lsbCBhbHNvIGJlIHBheWluZyB0aGUgMy42NyUgRW1wbG95ZWVzICAgUHJvdmlkZW50IEZ1bmQgKEVQRikgY29udHJpYnV0aW9uIG9mIHRoZSBlbGlnaWJsZSBlbXBsb3llciBmb3IgdGhlc2UgbmV3IGVtcGxveWVlcy4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgd29ybGQgZGVtYW5kIGlzIGluY3JlYXNpbmdseSBzaGlmdGluZyB0b3dhcmQgY2xvdGhpbmcgYmFzZWQgb24gbWFuLW1hZGUgICBmaWJyZXMgd2hpbGUgSW5kaWFuIGRvbWVzdGljIHRheCBwb2xpY3kgZmF2b3VycyBjb3R0b24tYmFzZWQgcHJvZHVjdGlvbiBhbmQgdGhlIHRhcmlmZiBwb2xpY3kgc2hpZWxkcyBhbiAgIGluZWZmaWNpZW50IG1hbi1tYWRlIGZpYnJlIHNlY3Rvci4gICBTb3VyY2U6ICBodHRwczovL3d3dy50aGVkYWlseXN0YXIubmV0L2J1c2luZXNzL2JhbmdsYWRlc2gtYWdhaW4tZGVuaWVkLWdzcC0xNTExMzIzICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL29waW5pb24vY29sdW1ucy9hcnVuLWphaXRsZXktdGV4dGlsZS1zZWN0b3ItYXBwYXJlbC1zZWN0b3ItICBhcHBhcmVsLXNlY3Rvci1lbXBsb3ltZW50LTI4Njk5MDcvICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 18,
      "question" : "It is a key element for new technologies  and finds its use in ceramics, glass,  telecommunication and aerospace industries.  Under standard conditions, it is the lightest  metal. Currently, India is heavily dependent on  import of these chemical element and aims to  reduce its dependence on import. Recently  there has been discovery of 1600 Tonnes of its  deposit's in Mandya district of Karnataka.  Which mineral has been described in the above  paragraph?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIExpdGhpdW0gaXMgYW4gZWxlbWVudCB2YWx1YWJsZSBmb3IgdGhlIHByb2R1Y3Rpb24gb2YgZ2xhc3MsIGFsdW1pbnVtIHByb2R1Y3RzLCBhbmQgYmF0dGVyaWVzLiBJdCBpcyBtaW5lZCAgIGZyb20gb3JlcyBvZiBwZXRhbGl0ZSBMaUFsKFNpMk81KTIsIGxlcGlkb2xpdGUgSyhMaSxBbCkzKEFsLFNpLFJiKTRPMTAoRixPSCkyLCBzcG9kdW1lbmUgTGlBbChTaU8zKTIgYW5kIGFsc28gICBzdWJzdXJmYWNlIGJyaW5lcy4gQXVzdHJhbGlhIGFuZCBDaGlsZSBhcmUgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBwcm9kdWNlcnMgb2YgbGl0aGl1bS4gICBQcm9wZXJ0aWVzIG9mIGxpdGhpdW06ICAgMSkgSXQgaXMgYSBjaGVtaWNhbCBlbGVtZW50IHdpdGggdGhlIHN5bWJvbCBMaS4gICAyKSBJdCBpcyBhIHNvZnQsIHNpbHZlcnktd2hpdGUgbWV0YWwuICAgMykgVW5kZXIgc3RhbmRhcmQgY29uZGl0aW9ucywgaXQgaXMgdGhlIGxpZ2h0ZXN0IG1ldGFsIGFuZCB0aGUgbGlnaHRlc3Qgc29saWQgZWxlbWVudC4gICA0KSBJdCBpcyBoaWdobHkgcmVhY3RpdmUgYW5kIGZsYW1tYWJsZSwgYW5kIG11c3QgYmUgc3RvcmVkIGluIG1pbmVyYWwgb2lsLiAgIDUpIEl0IGlzIGFuIGFsa2FsaSBtZXRhbCBhbmQgYSByYXJlIG1ldGFsLiAgIDYpIExpdGhpdW0gaXMgYSBrZXkgZWxlbWVudCBmb3IgbmV3IHRlY2hub2xvZ2llcyBhbmQgZmluZHMgaXRzIHVzZSBpbiBjZXJhbWljcywgZ2xhc3MsIHRlbGVjb21tdW5pY2F0aW9uICAgYW5kIGFlcm9zcGFjZSBpbmR1c3RyaWVzLiBUaGUgd2VsbC1rbm93biB1c2VzIG9mIGxpdGhpdW0gYXJlIGluIGxpdGhpdW0taW9uIGJhdHRlcmllcywgbHVicmljYXRpbmcgICBncmVhc2UsIGhpZ2ggZW5lcmd5IGFkZGl0aXZlcyB0byByb2NrZXQgcHJvcGVsbGFudHMsIG9wdGljYWwgbW9kdWxhdG9ycyBmb3IgbW9iaWxlIHBob25lcyBhbmQgYXMgYSAgIGNvbnZlcnRlciB0byB0cml0aXVtIHVzZWQgYXMgYSByYXcgbWF0ZXJpYWwgZm9yIHRoZXJtb251Y2xlYXIgcmVhY3Rpb25zIGkuZS4sIGZ1c2lvbi4gICA3KSBEdWUgdG8gdGhlIGNvbnRpbnVvdXMgaW5jcmVhc2UgaW4gZGVtYW5kIGZvciBsaXRoaXVtLWlvbiBiYXR0ZXJpZXMsIHRoZSByZXF1aXJlbWVudCBvZiBsaXRoaXVtIGhhcyAgIGluY3JlYXNlZCBvdmVyIHRoZSBsYXN0IGZldyB5ZWFycy4gICA4KSBSZWNlbnRseSwgYSBwcmVsaW1pbmFyeSBzdXJ2ZXkgb24gc3VyZmFjZSBhbmQgbGltaXRlZCBzdWJzdXJmYWNlIGJ5IEF0b21pYyBNaW5lcmFscyBEaXJlY3RvcmF0ZSBmb3IgICBFeHBsb3JhdGlvbiBhbmQgUmVzZWFyY2ggKEFNRCksIGEgY29uc3RpdHVlbnQgdW5pdCBvZiBEZXBhcnRtZW50IG9mIEF0b21pYyBFbmVyZ3kgaGF2ZSBzaG93biAgIHByZXNlbmNlIG9mIExpdGhpdW0gcmVzb3VyY2VzIG9mIDEsNjAwIHRvbm5lcyAoaW5mZXJyZWQgY2F0ZWdvcnkpIGluIHRoZSBwZWdtYXRpdGVzIG9mIE1hcmxhZ2FsbGEgLSAgIEFsbGFwYXRuYSBhcmVhLCBNYW5keWEgZGlzdHJpY3QsIEthcm5hdGFrYS4gICAgU291cmNlOiBodHRwOi8vd3d3LmJ1c2luZXNzd29ybGQuaW4vYXJ0aWNsZS9MaXRoaXVtLURpc2NvdmVyZWQtSW4tSW5kaWEtV2hhdC1Eb2VzLUl0LU1lYW4tRm9yLSAgUmVuZXdhYmxlcy0vMTktMDEtMjAyMS0zNjczMjEvICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Lithium  ",
        "option2" : "Uranium   ",
        "option3" : "Thorium   ",
        "option4" : "Niobium    "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements:   1.  China has largest reserves of rare earth  elements in the world.  2.  United states of America is the largest  exporter of rare earth elements.  3.  India has world's third largest reserves of  rare earth elements.  4.  In India, exploration of rare earth elements  is done by bureau of mines and department  of atomic energy.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIENoaW5hIGhhcyBvdmVyIHRpbWUgYWNxdWlyZWQgZ2xvYmFsIGRvbWluYXRpb24gb2YgcmFyZSBlYXJ0aHMuIEF0IG9uZSBwb2ludCwgQ2hpbmEgICBwcm9kdWNlZCA5MCBwZXIgY2VudCBvZiB0aGUgcmFyZSBlYXJ0aHMgdGhlIHdvcmxkIG5lZWRzLiBUb2RheSwgaG93ZXZlciwgaXQgaGFzIGNvbWUgZG93biB0byA2MCBwZXIgY2VudC4gICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgVGhlIHJlbWFpbmluZyBpcyBwcm9kdWNlZCBieSBvdGhlciBjb3VudHJpZXMgQXMgb2YgMjAyMCwgQ2hpbmEgcHJvZHVjZWQgYSA1Ny42IHBlcmNlbnQgc2hhcmUgb2YgdGhlIHRvdGFsICAgZ2xvYmFsIHJhcmUgZWFydGggbWluZSBwcm9kdWN0aW9uLCBtYWtpbmcgaXQgYnkgZmFyIHRoZSB3b3JsZCdzIGxhcmdlc3QgcmFyZSBlYXJ0aCBwcm9kdWNlciAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIENoaW5hIGFsc28gdG9wcyB0aGUgbGlzdCBvZiBleHBvcnRpbmcgY291bnRyaWVzLiBDaGluYSBpcyBsYXJnZXN0IGV4cG9ydGVyIG9mIHJhcmUgICBlYXJ0aCBlbGVtZW50cyAoJDMzMk0pIGluIDIwMTkuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBJbmRpYSBoYXMgdGhlIHdvcmxkJ3MgZmlmdGgtbGFyZ2VzdCByZXNlcnZlcyBvZiByYXJlIGVhcnRoIGVsZW1lbnRzLCBuZWFybHkgdHdpY2UgICBhcyBtdWNoIGFzIEF1c3RyYWxpYSwgYnV0IGl0IGltcG9ydHMgbW9zdCBvZiBpdHMgcmFyZSBlYXJ0aCBuZWVkcyBpbiBmaW5pc2hlZCBmb3JtIGZyb20gQ2hpbmEuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gRXhwbG9yYXRpb24gaW4gSW5kaWEgaGFzIGJlZW4gY29uZHVjdGVkIGJ5IHRoZSBCdXJlYXUgb2YgTWluZXMgYW5kIHRoZSAgIERlcGFydG1lbnQgb2YgQXRvbWljIEVuZXJneS4gTWluaW5nIGFuZCBwcm9jZXNzaW5nIGhhcyBiZWVuIHBlcmZvcm1lZCBieSBzb21lIG1pbm9yIHByaXZhdGUgcGxheWVycyAgIGluIHRoZSBwYXN0LCBidXQgaXMgdG9kYXkgY29uY2VudHJhdGVkIGluIHRoZSBoYW5kcyBvZiBJUkVMIChJbmRpYSkgTGltaXRlZCAoZm9ybWVybHkgSW5kaWFuIFJhcmUgRWFydGhzICAgTGltaXRlZCksIGEgUHVibGljIFNlY3RvciBVbmRlcnRha2luZyB1bmRlciB0aGUgRGVwYXJ0bWVudCBvZiBBdG9taWMgRW5lcmd5LiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvaW50ZXJuYXRpb25hbC9yYXJlLWVhcnRoLW1ldGFscy1hdC10aGUtaGVhcnQtb2YtY2hpbmEtdXMtICByaXZhbHJ5L2FydGljbGUzNDgwNjU4OC5lY2UgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following pairs are correctly  matched?   Minerals Region it is found in  1. Bauxite  Eastern Ghats  2. Mica  Andhra Pradesh   3. Copper  Singhbhum district of  Jharkhand  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0LiBCYXV4aXRlOkJhdXhpdGUgaXMgYSBub24tZmVycm91cyBtZXRhbGxpYyBtaW5lcmFsIHdoaWNoIGlzIHVzZWQgaW4gbWFudWZhY3R1cmluZyBvZiAgIGFsdW1pbml1bS4gQmF1eGl0ZSBpcyBmb3VuZCBtYWlubHkgaW4gdGVydGlhcnkgZGVwb3NpdHMgYW5kIGlzIGFzc29jaWF0ZWQgd2l0aCBsYXRlcml0ZSByb2Nrcy4gQmF1eGl0ZSBpcyAgIGZvdW5kIGV4dGVuc2l2ZWx5IGVpdGhlciBvbiB0aGUgcGxhdGVhdSBvciBoaWxsIHJhbmdlcyBvZiBwZW5pbnN1bGFyIEluZGlhIGFuZCBhbHNvIGluIHRoZSBjb2FzdGFsIHRyYWN0cyAgIG9mIHRoZSBjb3VudHJ5LiBJbmRpYSdzIHJlc2VydmVzIG9mIGJhdXhpdGUgYXJlIHN1ZmZpY2llbnQgdG8ga2VlcCB0aGUgY291bnRyeSBzZWxmLXJlbGlhbnQuIE1ham9yIHJlc2VydmVzICAgb2NjdXIgaW4gSmhhcmtoYW5kLCBNYWhhcmFzaHRyYSwgTWFkaHlhIFByYWRlc2gsIENoaGF0dGlzZ2FyaCwgR3VqYXJhdCwgS2FybmF0YWthLCBUYW1pbCBOYWR1LCBHb2EgYW5kICAgVXR0YXIgUHJhZGVzaC4gSHVnZSBkZXBvc2l0cyBvZiBiYXV4aXRlIGhhdmUgYmVlbiBkaXNjb3ZlcmVkIGluIHRoZSBFYXN0ZXJuIEdoYXRzIGluIE9kaXNoYSBhbmQgQW5kaHJhICAgUHJhZGVzaCwgU2FsZW0sIE5pbGdpcmkgYW5kIE1hZHVyYWkgZGlzdHJpY3Qgb2YgVGFtaWwgTmFkdSwgYW5kIEJhbmRhIGRpc3RyaWN0IG9mIFV0dGFyIFByYWRlc2ggYWxzbyBoYXZlICAgd29ya2FibGUgZGVwb3NpdHMgb2YgYmF1eGl0ZS4gICBQYWlyIDIgaXMgY29ycmVjdC4gTWljYTpNaWNhIGlzIG1haW5seSB1c2VkIGluIGVsZWN0cm9uaWMgYW5kIGVsZWN0cmljYWwgaW5kdXN0cmllcy4gSXQgY2FuIGJlIHNwbGl0IGludG8gdmVyeSAgIHRoaW4gc2hlZXRzIHdoaWNoIGFyZSB0b3VnaCBhbmQgZmxleGlibGUuIEluZGlhIGlzIHRoZSBsZWFkaW5nIHByb2R1Y2VyIGluIHNoZWV0IG1pY2EuIE1pY2EgaXMgd2lkZWx5ICAgZGlzdHJpYnV0ZWQgaW4gSW5kaWEsIGJ1dCB3b3JrYWJsZSBkZXBvc2l0cyBvY2N1ciBpbiBvbmx5IHRocmVlIHByaW5jaXBhbCBiZWx0cywgaS5lLiwgc3RhdGVzIG9mIEFuZGhyYSAgIFByYWRlc2gsIEpoYXJraGFuZCwgQmloYXIgYW5kIFJhamFzdGhhbi4gICAgUGFpciAzIGlzIGNvcnJlY3QuIENvcHBlcjogQ29wcGVyIGlzIGFuIGltcG9ydGFudCBtZXRhbCBpbiB0aGUgZWxlY3RyaWNhbCBpbmR1c3RyeSBmb3IgbWFraW5nIHdpcmVzLCBlbGVjdHJpYyAgIG1vdG9ycywgdHJhbnNmb3JtZXJzIGFuZCBnZW5lcmF0b3JzLiBJbmRpYSBpcyBhIHBvb3IgY291bnRyeSB3aXRoIHJlZ2FyZCB0byByZXNlcnZlcyBhbmQgcHJvZHVjdGlvbiBvZiAgIGNvcHBlci4gTWFqb3IgY29wcGVyIG9yZSBkZXBvc2l0cyBhcmUgbG9jYXRlZCBpbiBTaW5naGJodW0gZGlzdHJpY3QgKEpoYXJraGFuZCksIEJhbGFnaGF0IGRpc3RyaWN0ICAgKE1hZGh5YSBQcmFkZXNoKSBhbmQgSmh1bmpodW51IGFuZCBBbHdhciBkaXN0cmljdHMgKFJhamFzdGhhbikgICBTb3VyY2U6IEluZGlhIHBlb3BsZSBhbmQgZWNvbm9teSBjbGFzcyAxMi4gcGFnZSBuby4gNzYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 21,
      "question" : "Which of the following are objectives of  watershed management in India?  1. To effectively conserve soil.  2. To control river water pollution.  3. To promote agro-forestry on wastelands.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQSB3YXRlcnNoZWQgKGFsc28gY2FsbGVkIGRyYWluYWdlIGJhc2luL2NhdGNobWVudCBhcmVhKSBpcyBhbiBhcmVhIG9mIGxhbmQgdGhhdCBkcmFpbnMgb3IgJ3NoZWRzJyB3YXRlciBpbnRvICAgYSBzcGVjaWZpYyB3YXRlcmJvZHkuIE9uZSB3YXRlcnNoZWQgaXMgc2VwYXJhdGVkIGZyb20gYW5vdGhlciBieSBhIG5hdHVyYWwgYm91bmRhcnkga25vd24gYXMgdGhlIHdhdGVyICAgZGl2aWRlIG9yIHRoZSByaWRnZSBsaW5lLiBXYXRlcnNoZWQgbWFuYWdlbWVudCBpcyBhbiBhdHRlbXB0IHRvIGhhbHQgbGFuZCBkZWdyYWRhdGlvbiBhbmQgYSBob2xpc3RpYyAgIHByb2Nlc3MgZm9yIGdldHRpbmcgbWF4aW11bSBwcm9kdWN0aW9uIG91dCBvZiBsYW5kLiAgICBUaGUgZm9sbG93aW5nIGFyZSBpbXBvcnRhbnQgZmVhdHVyZXMvb2JqZWN0aXZlcyBvZiB3YXRlcnNoZWQgbWFuYWdlbWVudDogICAxKSBUbyBlZmZlY3RpdmVseSBjb25zZXJ2ZSBzb2lsLCByYWlud2F0ZXIsIGFuZCBoYXJuZXNzIHRoZSBzdXJwbHVzIHdhdGVyIHRvIGNyZWF0ZSB3YXRlciBzb3VyY2VzIGluICAgYWRkaXRpb24gdG8gcmVjaGFyZ2UgZ3JvdW5kd2F0ZXIuIChIZW5jZSwgc3RhdGVtZW50IDEgaXMgY29ycmVjdCkgICAyKSBDb250cm9scyBQb2xsdXRpb246IFJ1bm9mZiBmcm9tIHJhaW53YXRlciBvciBzbm93bWVsdCBjYW4gY29udHJpYnV0ZSBzaWduaWZpY2FudCBhbW91bnRzIG9mIHBvbGx1dGlvbiAgIGludG8gdGhlIGxha2Ugb3Igcml2ZXIuIFdhdGVyc2hlZCBtYW5hZ2VtZW50IGhlbHBzIHRvIGNvbnRyb2wgcG9sbHV0aW9uIG9mIHRoZSB3YXRlciBhbmQgb3RoZXIgbmF0dXJhbCAgIHJlc291cmNlcyBpbiB0aGUgd2F0ZXJzaGVkLiAoSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QpICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIDMpIElkZW50aWZpY2F0aW9uIGFuZCBSZWd1bGF0aW9uIG9mIEVjb2xvZ2ljYWxseSBIYXphcmRvdXMgQWN0aXZpdGllcyBhcyBBbGwgYWN0aXZpdGllcyB0aGF0IG9jY3VyIHdpdGhpbiBhICAgd2F0ZXJzaGVkIHNvbWVob3cgYWZmZWN0IGl0cyBuYXR1cmFsIHJlc291cmNlcyBhbmQgd2F0ZXIgcXVhbGl0eS4gICA0KSBtYW5hZ2VtZW50IHBsYW5uaW5nIGNvbXByZWhlbnNpdmVseSBpZGVudGlmaWVzIHN1Y2ggYWN0aXZpdGllcyBhbmQgbWFrZXMgcmVjb21tZW5kYXRpb25zIHRvICAgcHJvcGVybHkgYWRkcmVzcyB0aGVtIHNvIHRoYXQgdGhlaXIgYWR2ZXJzZSBpbXBhY3RzIGNhbiBiZSByZWR1Y2VkLiAgIDUpIFRvIHJlc3RvcmUgZWNvbG9naWNhbCBiYWxhbmNlLiAgIDYpIEluY3JlYXNpbmcgY3JvcHBpbmcgaW50ZW5zaXR5IGFuZCBsYW5kIGVxdWl2YWxlbnQgcmF0aW8gdGhyb3VnaCBpbnRlcmNyb3BwaW5nIGFuZCBzZXF1ZW5jZSBjcm9wcGluZy4gICA3KSBUbyBjb3ZlciBub24tYXJhYmxlIGFyZWFzIGVmZmVjdGl2ZWx5IHRocm91Z2ggYWZmb3Jlc3RhdGlvbiwgaG9ydGljdWx0dXJlLCBhbmQgcGFzdHVyZSBsYW5kIGRldmVsb3BtZW50ICAgYmFzZWQgb24gdGhlIGNhcGFiaWxpdHkgb2YgdGhlIGxhbmQuIFNhZmUgdXRpbGl6YXRpb24gb2YgbWFyZ2luYWwgYW5kIHdhc3RlbGFuZHMgaXMgZG9uZSB0aHJvdWdoICAgYWx0ZXJuYXRlIGxhbmQtdXNlIHN5c3RlbXMgc3VjaCBhcyBhZ3JvLWZvcmVzdHJ5LiAoSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QpICAgOCkgVG8gZW5oYW5jZSB0aGUgaW5jb21lIG9mIHRoZSBpbmRpdmlkdWFscyBieSBhZG9wdGluZyBhbHRlcm5hdGl2ZSBlbnRlcnByaXNlcy4gICAgS25vd2xlZGdlIEJhc2U6ICAgIFR5cGVzIG9mIFdhdGVyc2hlZHM6IFRoZXkgYXJlIGNsYXNzaWZpZWQgZGVwZW5kaW5nIHVwb24gdGhlIHNpemUsIGRyYWluYWdlLCBzaGFwZSBhbmQgbGFuZCB1c2UgcGF0dGVybi4gICBNYWNybyB3YXRlcnNoZWQgKD4gNTAsMDAwIEhhKSAgIFN1Yi13YXRlcnNoZWQgKDEwLDAwMCB0byA1MCwwMDAgSGEpICAgTWlsbGktd2F0ZXJzaGVkICgxMDAwIHRvIDEwLDAwMCBIYSkgICBNaWNybyB3YXRlcnNoZWQgKDEwMCB0byAxMDAwIEhhKSAgIE1pbmkgd2F0ZXJzaGVkICgxLTEwMCBIYSkgICBTb3VyY2U6IGh0dHBzOi8vdmlrYXNwZWRpYS5pbi9lbmVyZ3kvZW52aXJvbm1lbnQva25vdy15b3VyLWVudmlyb25tZW50L3dhdGVyL3dhdGVyc2hlZC0gIG1hbmFnZW1lbnQgICBodHRwczovL2Fncml0ZWNoLnRuYXUuYWMuaW4vYWdyaWN1bHR1cmUvYWdyaV9tYWpvcmFyZWFzX3dhdGVyc2hlZF93YXRlcnNoZWRtZ3QuaHRtbCAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlZ3kyMDYucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements with  reference to Fast-moving consumer goods  (FMCG) sector in India:  1.  Food and beverages, healthcare and  household and personal care are the major  segments of FMCG in India.  2.  The urban segment is the largest  contributor to the overall revenue  generated by the FMCG sector in India.  3.  100% FDI is allowed in multi-brand retail for  FMCG sector.  Which of the above statements is/are correct  in the above context?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgIFByb2R1Y3RzIHRoYXQgYXJlIGNsYXNzaWZpZWQgdW5kZXIgdGhlIEZNQ0cgYmFubmVyIGluY2x1ZGUgZm9vZCwgYmV2ZXJhZ2VzLCBwZXJzb25hbCBoeWdpZW5lIGFuZCAgIGhvdXNlaG9sZCBjbGVhbmluZyB1dGVuc2lscy4gVGhlIHRlcm0gJ2Zhc3QtIG1vdmluZycgc3RlbXMgZnJvbSB0aGUgZmFjdCB0aGF0IEZNQ0cgcHJvZHVjdHMgdXN1YWxseSBoYXZlICAgYSBzaG9ydCBzaGVsZiBsaWZlIGFuZCBhcmUgbm9uLWR1cmFibGUuICAgIEZhc3QgbW92aW5nIGNvbnN1bWVyIGdvb2RzIChGTUNHKSBhcmUgdGhlIDR0aCBsYXJnZXN0IHNlY3RvciBpbiB0aGUgSW5kaWFuIGVjb25vbXkuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlcmUgYXJlIHRocmVlIG1haW4gc2VnbWVudHMgaW4gdGhlIHNlY3RvciAtIGZvb2QgYW5kIGJldmVyYWdlcyAoMTklKSwgaGVhbHRoY2FyZSAgICgzMSUpIGFuZCBob3VzZWhvbGQgJiBwZXJzb25hbCBjYXJlIChyZW1haW5pbmcgNTAlKS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgdXJiYW4gc2VnbWVudCBpcyB0aGUgbGFyZ2VzdCBjb250cmlidXRvciAoYWNjb3VudHMgZm9yIGEgcmV2ZW51ZSBzaGFyZSBvZiAgIGFyb3VuZCA1NSUpIHRvIHRoZSBvdmVyYWxsIHJldmVudWUgZ2VuZXJhdGVkIGJ5IHRoZSBGTUNHIHNlY3RvciBpbiBJbmRpYS4gICBIb3dldmVyLCBpbiB0aGUgbGFzdCBmZXcgeWVhcnMsIHRoZSBGTUNHIG1hcmtldCBoYXMgZ3Jvd24gYXQgYSBmYXN0ZXIgcGFjZSBpbiBydXJhbCBJbmRpYSBjb21wYXJlZCB3aXRoICAgdXJiYW4gSW5kaWEuIFNlbWktdXJiYW4gYW5kIHJ1cmFsIHNlZ21lbnRzIGFyZSBncm93aW5nIGF0IGEgcmFwaWQgcGFjZSBhbmQgRk1DRyBwcm9kdWN0cyBhY2NvdW50IGZvciAgIDUwJSBvZiB0aGUgdG90YWwgcnVyYWwgc3BlbmRpbmcuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBHb3Zlcm5tZW50IGdhdmUgYXBwcm92YWwgb2YgMTAwJSBGb3JlaWduIERpcmVjdCBJbnZlc3RtZW50IChGREkpIGluIHRoZSBjYXNoICAgYW5kIGNhcnJ5IHNlZ21lbnQgYW5kIGluIHNpbmdsZS1icmFuZCByZXRhaWwgYWxvbmcgd2l0aCA1MSUgRkRJIChhbmQgbm90IDEwMCUpIGluIG11bHRpLWJyYW5kIHJldGFpbCBmb3IgICBGTUNHIHNlY3Rvci4gICAxMDAlIEZESSBhbGxvd2VkIGluIGZvb2QgcHJvY2Vzc2luZyBzZWdtZW50LiAgIEtub3dsZWRnZSBCYXNlOiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaWJlZi5vcmcvaW5kdXN0cnkvZm1jZy5hc3B4ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following pairs are matched  correctly?  Industries in India Primary  Location  1. Aircraft Manufacturing Karnataka  2. Ship Recycling Industry Gujarat  3. Sugar Industry Tamil Nadu  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZHVzdHJ5IHJlZmVycyB0byBhbiBlY29ub21pYyBhY3Rpdml0eSBjb25jZXJuZWQgd2l0aCB0aGUgcHJvY2Vzc2luZyBvZiByYXcgbWF0ZXJpYWxzIGFuZCBtYW51ZmFjdHVyZSAgIG9mIGdvb2RzIGluIGZhY3Rvcmllcy4gICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBodWIgb2YgdGhlIG5hdGlvbidzIGF2aWF0aW9uIG1hbnVmYWN0dXJpbmcgaW5kdXN0cnkgaXMgYXQgQmFuZ2Fsb3JlLCAgIEthcm5hdGFrYSB3aGljaCBoYXMgYSA2NSUgc2hhcmUgb2YgdGhpcyBlY29ub21pYyBzZWN0b3IuICAgIEhpbmR1c3RhbiBBZXJvbmF1dGljcyBMaW1pdGVkIChIQUwpIGlzIGFuIEluZGlhbiBzdGF0ZS1vd25lZCBhZXJvc3BhY2UgYW5kIGRlZmVuY2UgY29tcGFueSwgICBoZWFkcXVhcnRlcmVkIGluIEJlbmdhbHVydSwgSW5kaWEuIEVzdGFibGlzaGVkIG9uIDIzIERlY2VtYmVyIDE5NDAsIEhBTCBpcyBvbmUgb2YgdGhlIG9sZGVzdCBhbmQgbGFyZ2VzdCAgIGFlcm9zcGFjZSBhbmQgZGVmZW5jZSBtYW51ZmFjdHVyZXJzIGluIHRoZSB3b3JsZCB0b2RheS4gICBQYWlyIDIgaXMgY29ycmVjdGx5IG1hdGNoZWQuIEluZGlhIGhhcyB0aGUgd29ybGQncyBsYXJnZXN0IHNoaXAgcmVjeWNsaW5nIG9wZXJhdGlvbiAtIHRoZSBBbGFuZy1Tb3NpeWEgc2hpcCAgIHJlY3ljbGluZyB5YXJkcyAtIHNpdHVhdGVkIG9uIHRoZSB3ZXN0IGNvYXN0IG9mIEd1amFyYXQuIEFsYW5nIGF0IHByZXNlbnQgaGFzIG5lYXJseSAxMjAgYWN0aXZlIHJlY3ljbGluZyAgIHlhcmRzIGRpc21hbnRsaW5nIGVuZC1vZi1saWZlIHNoaXBzIHRvIGV4dHJhY3QgdmFyaW91cyB0eXBlcyBvZiBzY3JhcHMgYW5kIGVxdWlwbWVudCBmb3IgcmVjeWNsaW5nIGFuZCAgIHJldXNpbmcuICAgUGFpciAzIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIFV0dGFyIFByYWRlc2ggaXMgdGhlIGNvdW50cnkncyBsYXJnZXN0IHN1Z2FyLXByb2R1Y2luZyBzdGF0ZS4gVGhlcmUgYXJlICAgYWJvdXQgMTIwIHN1Z2FyIG1pbGxzIGluIHRoZSBzdGF0ZS4gTWFoYXJhc2h0cmEgaXMgdGhlIHNlY29uZCBhbmQgS2FybmF0YWthIGlzIHRoZSBjb3VudHJ5J3MgdGhpcmQtbGFyZ2VzdCAgIHN1Z2FyLXByb2R1Y2luZyBzdGF0ZS4gVXR0YXIgUHJhZGVzaCBhbmQgTWFoYXJhc2h0cmEgdG9nZXRoZXIgc2hhcmUgNjYgcGVyIGNlbnQgb2Ygc3VnYXIgcHJvZHVjdGlvbi4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmludmVzdGluZGlhLmdvdi5pbiBlYW0taW5kaWEtYmxvZ3MvaW5kaWFuLWl0LWJwbS0gIGluZHVzdHJ5Izp+OnRleHQ9QmVuZ2FsdXJ1JTNBLHRoZSUyMGNvdW50cnkncyUyMGxhcmdlc3QlMjBJVCUyMGh1Yi4gICAgaHR0cHM6Ly9pbmRpYW5jb21wYW5pZXMuaW4vc3VnYXItaW5kdXN0cnktb2YtaW5kaWEtc3RhdGUtICBwcm9kdWN0aW9uLyM6fjp0ZXh0PVV0dGFyJTIwUHJhZGVzaCUyMGlzJTIwdGhlJTIwTGFyZ2VzdCxzdWdhcmNhbmUlMjBvdXRwdXQlMjBvZiUyMHRoZSUyMCAgU3RhdGUuICAgaHR0cHM6Ly93d3cuaWJlZi5vcmcvaW5kdXN0cnkvaW5kaWFuLWF2aWF0aW9uLmFzcHggICAgaHR0cHM6Ly9zaGlwYnJlYWtpbmdwbGF0Zm9ybS5vcmcvb3VyLXdvcmsgaGUtICBwcm9ibGVtL2luZGlhLyM6fjp0ZXh0PVRoZSUyMHNoaXBicmVha2luZyUyMHlhcmRzJTIwaW4lMjBBbGFuZyx0aGUlMjB3b3JsZCdzJTIwbGFyZ2VzdCUyMHNoICBpcGJyZWFraW5nJTIwc2l0ZS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 24,
      "question" : "In which of the following locations in  India are hydrocarbon deposits located?  1. Krishna Godavari basin.  2. Mahanadi basin.   3. Andaman Islands.  4. Coast of Saurashtra.  5. Kerala-Konkan region.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBBIGh5ZHJvY2FyYm9uIGlzIGFuIG9yZ2FuaWMgY2hlbWljYWwgY29tcG91bmQgY29tcG9zZWQgZXhjbHVzaXZlbHkgb2YgaHlkcm9nZW4gYW5kIGNhcmJvbiBhdG9tcy4gICBIeWRyb2NhcmJvbnMgYXJlIG5hdHVyYWxseS1vY2N1cnJpbmcgY29tcG91bmRzIGFuZCBmb3JtIHRoZSBiYXNpcyBvZiBjcnVkZSBvaWwsIG5hdHVyYWwgZ2FzLCBjb2FsLCBhbmQgICBvdGhlciBpbXBvcnRhbnQgZW5lcmd5IHNvdXJjZXMuICAgVGhlc2UgaHlkcm9jYXJib24gZGVwb3NpdHMgaGF2ZSBiZWVuIGRpc2NvdmVyZWQgaW4gbGFyZ2UgcXVhbnRpdGllcyBpbiB0aGUgc2VhcyBhcm91bmQgdGhlIEtyaXNobmEtICBHb2RhdmFyaSwgTWFoYW5hZGkgYmFzaW4sIGluIHRoZSBBbmRhbWFuIElzbGFuZHMsIG9mZiB0aGUgY29hc3Qgb2YgU2F1cmFzaHRyYSBhbmQgaW4gdGhlIEtlcmFsYS1Lb25rYW4gICByZWdpb24uIFRoZXNlIGh5ZHJvY2FyYm9uIHJpY2ggZGVwb3NpdHMgb2NjdXIgYXQgdGltZXMgYXQgZGVwdGhzIG9mIG9uZSBrbSBiZWxvdyB0aGUgc2VhIGFuZCBpbiBsb2NhdGlvbnMgICB3aGVyZSB0aGUgdGVtcGVyYXR1cmUgaXMganVzdCByaWdodCBhYm91dCA1LTYgZGVncmVlcyBDZWxzaXVzLiAgICAgU291cmNlOiBodHRwczovL2RnaGluZGlhLmdvdi5pbi9pbmRleC5waHAvcGFnZT9wYWdlSWQ9NjYmbmFtZT1JbmRpYW4lMjBHZW9sb2d5ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "1, 2, 4 and 5 only  ",
        "option3" : "1 and 4 only   ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following statements is/are  correct regarding the Petrochemical  Industries?  1.  It is a highly capital-intensive industry.  2.  The Indian Petrochemical Corporation  Limited is the largest petrochemicals  producer in the country.  3.  Polymers are an example of the  petrochemical industries.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQZXRyb2NoZW1pY2FsIGluZHVzdHJ5LCB3aGljaCBlbnRlcmVkIHRoZSBJbmRpYW4gaW5kdXN0cmlhbCBzY2VuZSBpbiB0aGUgMTk3MHMsIHJlZ2lzdGVyZWQgYSByYXBpZCAgIGdyb3d0aCBpbiB0aGUgMTk4MHMgYW5kIDE5OTBzLiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgUGV0cm9jaGVtaWNhbCBpbmR1c3RyeSBpcyBhbiBvcmdhbmljIGNoZW1pY2FsIGluZHVzdHJ5IHRoYXQgdXNlcyBvcmdhbmljIHJhdyAgIG1hdGVyaWFsIGxpa2UgbmF0dXJhbCBnYXNzZXMsIGNydWRlIG9pbCwgcmVmaW5lcnkgZ2FzZXMsIG5hcGh0aGEgZnJhY3Rpb25zIGV0Yy4gSXQgaXMgYSBoaWdobHkgY2FwaXRhbC1pbnRlbnNpdmUgICBpbmR1c3RyeSBhcyB0aGUgZWNvbm9teSBhbmQgdGhlIHNpemUgb2YgcHJvZHVjdGlvbiBpbiBQZXRyby1jaGVtaWNhbHMgaXMgdmVyeSBsYXJnZS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFJlbGlhbmNlIGlzIHRoZSBsYXJnZXN0IHByb2R1Y2VyIG9mIHBldHJvY2hlbWljYWxzIGluIEluZGlhIGNvbnRyb2xsaW5nIGFsbW9zdCAgIHRocmVlLWZvdXJ0aCBvZiB0aGUgZ3Jvd2luZyBJbmRpYW4gcG9seW1lciBtYXJrZXQuIFdoaWxlIEluZGlhbiBQZXRyb2NoZW1pY2FsIENvcnBvcmF0aW9uIExpbWl0ZWQgICAoSVBDTCkgaXMgdGhlIHNlY29uZC1sYXJnZXN0IHBldHJvY2hlbWljYWxzIHByb2R1Y2VyIGluIHRoZSBjb3VudHJ5IHdpdGggYSBtYXJrZXQgc2hhcmUgb2YgYWJvdXQgMjUtMzAgICBwZXIgY2VudCBpbiB0aGUgZG9tZXN0aWMgcG9seW1lcnMgYW5kIEZpYmVyLWludGVybWVkaWF0ZXMgKHByaW1hcmlseSBNRUcpIG1hcmtldHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHBldHJvY2hlbWljYWwgaW5kdXN0cnkgaXMgZGl2aWRlZCBpbnRvIGZvdXIgc3ViLWdyb3VwczogKGkpIHBvbHltZXJzLCAoaWkpICAgc3ludGhldGljIEZpYmVycywgKGlpaSkgZWxhc3RvbWVycywgYW5kIChpdikgc3VyZmFjdGFudCBpbnRlcm1lZGlhdGUuIFRoZXNlIFBvbHltZXJzIGFyZSB1c2VkIGFzIHJhdyBtYXRlcmlhbHMgICBpbiB0aGUgcGxhc3RpYyBpbmR1c3RyeSB3aGljaCBpcyB0aGUgbW9zdCBpbXBvcnRhbnQgcGV0cm9jaGVtaWNhbC4gICAgU291cmNlOiAgaHR0cHM6Ly9jaGVtaWNhbHMubmljLmluL3BldHJvY2hlbWljYWxzICAgaHR0cHM6Ly93d3cuZXB3LmluL3N5c3RlbS9maWxlcy9wZGYvMTk2NF8xNi81LTYtICA3L29yZ2FuaWNfY2hlbWljYWxfaW5kdXN0cnl0aGVfY2FzZV9mb3JfaXRzX3NwZWVkeV9kZXZlbG9wbWVudC5wZGYgICBodHRwczovL3d3dy5maW5hbmNpYWxleHByZXNzLmNvbS9hcmNoaXZlL2luZGlhbi1wZXRyb2NoZW1pY2Fscy1jb3Jwb3JhdGlvbi1sdGQvODE5OTMvICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVneTIwOC5wZGYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements:  1.  Gondwana coal is moderate in ash content  and low in Sulphur.  2.  Tertiary coal fields are mainly located in  North-eastern India.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENvYWwgaXMgb25lIG9mIHRoZSBpbXBvcnRhbnQgbWluZXJhbHMgd2hpY2ggaXMgbWFpbmx5IHVzZWQgaW4gdGhlIGdlbmVyYXRpb24gb2YgdGhlcm1hbCBwb3dlciBhbmQgc21lbHRpbmcgICBvZiBvcmUuIENvYWwgb2NjdXJzIGluIHJvY2sgc2VxdWVuY2VzIG1haW5seSBvZiB0d28gZ2VvbG9naWNhbCBhZ2VzLCBuYW1lbHkgR29uZHdhbmEgYW5kIHRlcnRpYXJ5IGNvYWwuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gR29uZHdhbmEgY29hbCBpcyBtb2RlcmF0ZSB0byBoaWdoIGluIGFzaCBjb250ZW50IGFuZCBsb3cgaW4gU3VscGh1ci4gQWJvdXQgODAlICAgb2YgdGhlIGNvYWwgZGVwb3NpdHMgaW4gSW5kaWEgaXMgb2YgYml0dW1pbm91cyB0eXBlIGFuZCBpcyBvZiBub24tY29raW5nIGdyYWRlLiBUaGUgR29uZHdhbmEgY29hbCBtaW5lcyAgIGFyZSBsb2NhdGVkIGluIHJpdmVyIHZhbGxleXMgb2YgRGFtb2RhciwgTWFoYW5hZGksIEdvZGF2YXJpLCBTb24gYW5kIE5hcm1hZGEuIERhbW9kYXIgdmFsbGV5IGlzIGhvbWUgdG8gICBsYXJnZXN0IGNvYWwgbWluZXMgaW4gSmhhcmtoYW5kLVdlc3QgQmVuZ2FsIGNvYWwgYmVsdCBsb2NhdGVkIGluIEpoYXJpYSAobGFyZ2VzdCBjb2FsIGZpZWxkIG9mIEluZGlhKSwgICBSYW5pZ2FuaGogKHNlY29uZCBsYXJnZXN0IGNvYWwgZmllbGQgb2YgSW5kaWEpLCBCb2thcm8sIEdpcmlkaWgsIEthcmFucHVyYSAsIENoYW5kcmFwdXIsIFRhdGFwYW5pLCBUYWxjaGVyLCAgIEhpbWdpcmksIEtvcmJhLCBTaW5ncmF1bGkgZXRjLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRlcnRpYXJ5IGNvYWwgZmllbGRzIHNoYXJlIG9ubHkgMSUgb2YgY29hbCBwcm9kdWN0aW9uIG9mIEluZGlhLiBUaGV5IGhhdmUgaGlnaCAgIHN1bHBodXIgY29udGVudC4gU3VjaCBmaWVsZHMgb2NjdXIgaW4gQXNzYW0sIEFydW5hY2hhbCBQcmFkZXNoLCBNZWdoYWxheWEgYW5kIE5hZ2FsYW5kIGFuZCBhbHNvIGluICAgc21hbGwgcXVhbnRpdGllcyBpbiBKYW1tdSAmIEthc2htaXIuIEl0IGlzIGV4dHJhY3RlZCBmcm9tIERhcmFuZ2lyaSwgQ2hlcnJhcHVuamksIE1ld2xvbmcgYW5kIExhbmdyaW4gICAoTWVnaGFsYXlhKTsgTWFrdW0sIEphaXB1ciBhbmQgTmF6aXJhIGluIHVwcGVyIEFzc2FtLCBOYW1jaGlrIC0gTmFtcGh1ayAoQXJ1bmFjaGFsIFByYWRlc2gpIGFuZCAgIEthbGFrb3QgKEphbW11IGFuZCBLYXNobWlyKS4gICAgU291cmNlOiBJbmRpYSBwZW9wbGUgYW5kIGVjb25vbXkuIENsYXNzIDEyLiBwYWdlIG5vLjc4ICAgaHR0cHM6Ly9mb3NzaWwuZW5lcmd5Lmdvdi9pbnRlcm5hdGlvbmFsL1B1YmxpY2F0aW9ucy91Y2dfMTEwNl9nc2kucGRmICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following correctly  describes the 'Non associated gas or Dry gas'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gQXNzb2NpYXRlZC1kaXNzb2x2ZWQgbmF0dXJhbCBnYXMsIGFsc28gcmVmZXJyZWQgdG8gYXMgYXNzb2NpYXRlZCBnYXMsIGlzIG5hdHVyYWwgZ2FzICAgcHJvZHVjZWQgYnkgb2lsIHdlbGxzLiBBc3NvY2lhdGVkIGdhcyBjb250YWlucyBuYXR1cmFsIGdhcyBwbGFudCBsaXF1aWRzIChOR1BMcykgc3VjaCBhcyBldGhhbmUsIHByb3BhbmUsICAgbm9ybWFsIGJ1dGFuZSwgaXNvYnV0YW5lLCBhbmQgbmF0dXJhbCBnYXNvbGluZS4gQXNzb2NpYXRlZCBnYXMgaXMgc29tZXRpbWVzIGNoYXJhY3Rlcml6ZWQgYXMgd2V0IGdhcyAgIGJlY2F1c2UgaXQgbXVzdCBiZSB0cmVhdGVkIGF0IG5hdHVyYWwgZ2FzIHByb2Nlc3NpbmcgcGxhbnRzIHRvIHJlbW92ZSBpbXB1cml0aWVzIGFuZCBsaXF1aWRzIGJlZm9yZSBpdCBjYW4gICBiZSBtYXJrZXRlZCBhcyBuYXR1cmFsIGdhcy4gICBPcHRpb24gYiBpcyBjb3JyZWN0LiBOb24tYXNzb2NpYXRlZCBwZXRyb2xldW0gZ2FzLCBhbHNvIGtub3duIGFzIGZyZWUgZ2FzIG9yIGRyeSBnYXMgaXMgYSBuYXR1cmFsbHkgICBvY2N1cnJpbmcgZ2FzIHRoYXQgaXMgbm90IGRpc3NvbHZlZCBpbiBjcnVkZSBvaWwgaW4gYSByZXNlcnZvaXIgd2hlcmUgb2lsIGlzIGV4dHJhY3RlZC4gU29tZXRpbWVzLCBpdCBpcyBmb3VuZCAgIGFib3ZlIHNvbWUgZmx1aWRzIG9yIHVuZGVyIHRoZSBvaWwgcHJlc2VudCBpbiB0aGUgb2lsIHJlc2Vydm9pciBidXQgaW4gYSBzdGF0ZSBvZiBlcXVpbGlicml1bS4gVGhpcyBnYXMgaXMgYWxzbyAgIGZvdW5kIGluIGdhcyBhbmQgY29uZGVuc2F0ZSB3ZWxscyB3aGVyZSB0aGVyZSBpcyBsaXR0bGUgb3Igbm8gY3J1ZGUgb2lsIHByZXNlbnQuICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gU3RyYW5kZWQgZ2FzIGlzIGVzc2VudGlhbGx5IGdhcyB0aGF0IGlzIHdhc3RlZCBvciB1bnVzZWQuIEVzdGltYXRlcyBvZiByZW1vdGUgb3IgICBzdHJhbmRlZCBnYXMgcmVzZXJ2ZXMgcmFuZ2UgZnJvbSA0MCB0byA2MCUgb2YgdGhlIHdvcmxkJ3MgcHJvdmVuIGdhcyByZXNlcnZlcy4gVGhlc2UgbWFzc2l2ZSBnbG9iYWwgZ2FzICAgcmVzZXJ2ZXMgYXJlIGxhcmdlbHkgdW50YXBwZWQsIGFuZCBjb252ZW50aW9uYWwgbWVhbnMgb2YgZGV2ZWxvcG1lbnQgZmFjZSBsb2dpc3RpY2FsIGFuZCBlY29ub21pYyAgIGJhcnJpZXJzLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LnRyZW5jaGxlc3NwZWRpYS5jb20vZGVmaW5pdGlvbi8zNDQxL25vbi1hc3NvY2lhdGVkLXBldHJvbGV1bS1nYXMgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is a natural gas produced by oil wells.  ",
        "option2" : " It is natural gas that is not dissolved in crude   oil.  ",
        "option3" : " It is a gas that is wasted or unused.  ",
        "option4" : " Both options a and b are correct.      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements :  1.  Cobalt, tin, tungsten and vanadium are  considered as strategic minerals.  2.  Refractory minerals are those minerals that  have high melting points.   Which of the statements given above  is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFN0cmF0ZWdpYyBNaW5lcmFscyAoYWxzbyBrbm93biBhcyBDcml0aWNhbCBNaW5lcmFscykgaXMgYSBicm9hZCBjYXRlZ29yeSB0aGF0ICAgaWRlbnRpZmllcyB2YXJpb3VzIG1pbmVyYWxzIGFuZCBlbGVtZW50czsgdGhlIGJ1bGsgb2Ygd2hpY2ggYXJlIG1pbm9yIG1ldGFscy4gR2VvZ3JhcGh5IGFuZCBhdmFpbGFiaWxpdHkgb2YgICBkb21lc3RpYyBzdXBwbHkgbm9ybWFsbHkgZGVmaW5lcyB0aGUgImNyaXRpY2FsJyBuYXR1cmUgb2YgbWluZXJhbHMgZm9yIGFueSBwYXJ0aWN1bGFyIHJlZ2lvbiBvciBhIGNvdW50cnkuIFRvICAgdGhlIGV4dGVudCB0aGF0IHRoZXNlIG1pbmVyYWxzIGFyZSBpbXBvcnRhbnQgaW4gdmFyaW91cyBpbmR1c3RyaWFsIHByb2Nlc3NlcyB0aGV5IGFyZSByZWdhcmRlZCBhcyBjcml0aWNhbCBvciAgIHN0cmF0ZWdpYyBtaW5lcmFscy4gU29tZSBleGFtcGxlcyBvZiBzdHJhdGVnaWMgbWluZXJhbHMgYXJlIHRpbiwgc2lsdmVyLCBjb2JhbHQsIG1hbmdhbmVzZSwgdHVuZ3N0ZW4sIHppbmMsICAgdGl0YW5pdW0sIHBsYXRpbnVtIGFuZCBkaWFtb25kcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBSZWZyYWN0b3J5IG1pbmVyYWxzIGNhbiBiZSBkZWZpbmVkIGFzIG1pbmVyYWxzIG9yIHN5bnRoZXRpYyBpbm9yZ2FuaWMgY3J5c3RhbCAgIHBoYXNlcyB0aGF0IGhhdmUgaGlnaCBtZWx0aW5nIHBvaW50cy4gVGhleSBzaG91bGQgYWxzbyBiZSByZXNpc3RhbnQgdG8gZGVmb3JtYXRpb24gYW5kIHRvIHNvZnRlbmluZyBhdCAgIGhpZ2ggdGVtcGVyYXR1cmVzLiBFdmVuIHRob3VnaCB0aGVpciBwcmltYXJ5IGZ1bmN0aW9uIGlzIHJlc2lzdGFuY2UgdG8gZWxldmF0ZWQgdGVtcGVyYXR1cmVzOyBpbiBtYW55ICAgYXBwbGljYXRpb25zIHRoZXkgbXVzdCByZXNpc3Qgb3RoZXIgZGVzdHJ1Y3RpdmUgZm9yY2VzLCBzdWNoIGFzIGNoZW1pY2FsIGNvcnJvc2lvbiBhbmQgYWJyYXNpb24gICBTb3VyY2U6IGh0dHBzOi8vaWJtLmdvdi5pbi9pbmRleC5waHA/Yz1wYWdlcyZtPWluZGV4JmlkPTkwMCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to wind energy in India,  consider the following statements:  1.  Wind is an intermittent and site-specific  resource of energy.  2.  Tamil Nadu has the highest wind energy  potential in country.  3.  Wind plants can negatively impact local  wildlife.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFdpbmQgaXMgYW4gaW50ZXJtaXR0ZW50IGFuZCBzaXRlLXNwZWNpZmljIHJlc291cmNlIG9mIGVuZXJneS4gSW50ZXJtaXR0ZW50IG1lYW5zICAgdGhhdCB3aGljaCBjYW5ub3QgYmUgZGlzcGF0Y2hlZCB3aGVuIHRoZXJlIGlzIGRlbWFuZC4gSXQgZ2l2ZXMgdmFyaWFibGUgcG93ZXIsIHdoaWNoIGlzIGNvbnNpc3RlbnQgZnJvbSAgIHllYXIgdG8geWVhciBidXQgdmFyaWVzIGdyZWF0bHkgb3ZlciBzaG9ydGVyIHRpbWUgc2NhbGVzLiBUaGVyZWZvcmUsIGl0IG11c3QgYmUgdXNlZCB0b2dldGhlciB3aXRoIG90aGVyICAgcG93ZXIgc291cmNlcyB0byBnaXZlIGEgcmVsaWFibGUgc3VwcGx5LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gR3VqYXJhdCBoYXMgdGhlIGhpZ2hlc3QgcG90ZW50aWFsIG9mIHdpbmQgZW5lcmd5IHdpdGggODQ0MzEuMzMgTVcuIFRhbWlsIE5hZHUgICBoYXMgdG90YWwgcG90ZW50aWFsIG9mIDMzNzk5LjY1TVcgYW5kIHJhbmtzIDQgaW4gb3ZlcmFsbCBwb3RlbnRpYWwuIEhvd2V2ZXIsIFRhbWlsIE5hZHUgcmFua3MgZmlyc3QgaW4gICBpbnN0YWxsZWQgd2luZCBwb3dlciB3aXRoIDkzMDAgTVcgY2FwYWNpdHkuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gV2luZCBwbGFudHMgY2FuIG5lZ2F0aXZlbHkgaW1wYWN0IGxvY2FsIHdpbGRsaWZlLiBCaXJkcyBoYXZlIGJlZW4ga2lsbGVkIGJ5IGZseWluZyAgIGludG8gc3Bpbm5pbmcgdHVyYmluZSBibGFkZXMuIE1vc3Qgb2YgdGhlc2UgcHJvYmxlbXMgaGF2ZSBiZWVuIHJlc29sdmVkIG9yIGdyZWF0bHkgcmVkdWNlZCB0aHJvdWdoICAgdGVjaG5vbG9neSBkZXZlbG9wbWVudCBvciBieSBwcm9wZXJseSBzaXRpbmcgd2luZCBwbGFudHMuIExpa2UgYWxsIGVuZXJneSBzb3VyY2VzLCB3aW5kIHByb2plY3RzIGNhbiBhbHRlciAgIHRoZSBoYWJpdGF0IG9uIHdoaWNoIHRoZXkgYXJlIGJ1aWx0LCB3aGljaCBtYXkgYWx0ZXIgdGhlIHN1aXRhYmlsaXR5IG9mIHRoYXQgaGFiaXRhdCBmb3IgY2VydGFpbiBzcGVjaWVzLiAgICBLbm93bGVkZ2UgQmFzZTogICAgVGhlIHdpbmQgcmVzb3VyY2VzIGFzc2Vzc21lbnQgY2FycmllZCBvdXQgYnkgdGhlIE5hdGlvbmFsIEluc3RpdHV0ZSBvZiBXaW5kIEVuZXJneSAoTklXRSkgZ2l2ZXMgdG90YWwgICB3aW5kIGVuZXJneSBwb3RlbnRpYWwgYXQgMzAyIEdXIGF0IDEwMCBtZXRlciBhbmQgNjk1LjUwIEdXIGF0IDEyMC1tZXRlciBodWIgaGVpZ2h0LiBPdXQgb2YgdGhlIHRvdGFsICAgZXN0aW1hdGVkIHBvdGVudGlhbCBtb3JlIHRoYW4gOTUlIG9mIGNvbW1lcmNpYWxseSBleHBsb2l0YWJsZSB3aW5kIHJlc291cmNlcyBhcmUgY29uY2VudHJhdGVkIGluIHNldmVuICAgc3RhdGVzIChBbmRocmEgUHJhZGVzaCwgR3VqYXJhdCwgS2FybmF0YWthLCBNYWRoeWEgUHJhZGVzaCwgTWFoYXJhc2h0cmEsIFJhamFzdGhhbiBhbmQgVGFtaWwgTmFkdSkuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cuZW5lcmd5Lmdvdi9lZXJlL3dpbmQvYWR2YW50YWdlcy1hbmQtY2hhbGxlbmdlcy13aW5kLWVuZXJneSAgICBodHRwczovL21ucmUuZ292LmluL3dpbmQvY3VycmVudC1zdGF0dXMvICAgIGh0dHBzOi8vbW5yZS5nb3YuaW4vd2luZC9vZmZzaG9yZS13aW5kLyAgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9jaXRpZXMvQ29pbWJhdG9yZS93aW5kLWVuZXJneS1nZW5lcmF0aW9uLWxpa2VseS10by1oYXZlLWVhcmx5LSAgc3RhcnQvYXJ0aWNsZTM0MjE4NDI4LmVjZSAgICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 30,
      "question" : "With reference to Information  Technology (IT) Sector in India, consider the  following statements:  1.  The IT sector in India contributed more  than 5% to India's GDP in 2021-22.  2.  The Software Technology Park Scheme  promotes the export of software products  from India.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBJVCBzcGVuZGluZyBpbiBJbmRpYSB3YXMgVVMkIDgxLjg5IGJpbGxpb24gaW4gMjAyMSBhbmQgZnVydGhlciBpbmNyZWFzZWQgdG8gVVMkIDEwMS44IGJpbGxpb24gaW4gMjAyMiwgYSAgIDI0LjMxJSBZb1kgaW5jcmVhc2UuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBJbmZvcm1hdGlvbiBUZWNobm9sb2d5IGluZHVzdHJ5IHNlY3RvciBjb250cmlidXRlZCA5JSB0byB0aGUgbmF0aW9uYWwgR0RQICAgYW5kIGFjY291bnRlZCBmb3IgNTElIG9mIHNlcnZpY2VzIGV4cG9ydHMgaW4gMjAyMS0yMi4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgU29mdHdhcmUgVGVjaG5vbG9neSBQYXJrIChTVFApIFNjaGVtZSBpcyBhIDEwMCBwZXJjZW50IEV4cG9ydCBPcmllbnRlZCAgIFNjaGVtZSBmb3IgdGhlIGRldmVsb3BtZW50IGFuZCBleHBvcnQgb2YgY29tcHV0ZXIgc29mdHdhcmUsIGluY2x1ZGluZyBleHBvcnQgb2YgcHJvZmVzc2lvbmFsIHNlcnZpY2VzICAgdXNpbmcgY29tbXVuaWNhdGlvbiBsaW5rcyBvciBwaHlzaWNhbCBtZWRpYS4gSXQgcGVybWl0cyAxMDAgUGVyY2VudCBGb3JlaWduIEVxdWl0eSB0byBhbGwgSW5kaWFuICAgY29tcGFuaWVzIGluIGV4cG9ydCBvZiBjb21wdXRlciBzb2Z0d2FyZS4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LnN0YXJ0dXBpbmRpYS5nb3YuaW4vY29udGVudC9zaWgvZW4vZ292ZXJubWVudC1zY2hlbWVzL3NvZnR3YXJlLXRlY2hub2xvZ3ktICBwYXJrLXNjaGVtZS5odG1sICAgIHR3aWNlLXRoZS1yYXRlLW9mLWVjby9hcnRpY2xlc2hvdy84OTYwMjMwOC5jbXMgICBodHRwczovL3d3dy5idXNpbmVzcy1zdGFuZGFyZC5jb20vcG9kY2FzdCBlY2hub2xvZ3kvd2lsbC1pbmRpYW4taXQtaW5kdXN0cnktc3VzdGFpbi1pdHMtZ3Jvd3RoLSAgbW9tZW50dW0tMTIyMDEyODAwMDc5XzEuaHRtbCAgIGh0dHBzOi8vd3d3LmliZWYub3JnL2luZHVzdHJ5L2luZm9ybWF0aW9uLXRlY2hub2xvZ3ktaW5kaWEgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 31,
      "question" : "Which of the following is/are the major  Industrial Regions of India?  1. Chhota Nagpur plateau region  2. Hyderabad-Warangal-Nagpur region  3. Madurai - Coimbatore - Bangalore region  4. Kolkata- Chennai - Tuticorin region  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIEluZGlhLCB0aGVyZSBhcmUgc2l4IG1ham9yIGluZHVzdHJpYWwgcmVnaW9ucyBvdXQgb2Ygd2hpY2ggdGhyZWUgYXJlIGluIHRoZSBoaW50ZXJsYW5kcyBvZiBwb3J0cy4gSXQgLSAgIEhvb2dobHkgSW5kdXN0cmlhbCByZWdpb247IE11bWJhaSAtIFB1bmUgSW5kdXN0cmlhbCByZWdpb247IEFobWVkYWJhZCAtIFZhZG9kYXJhIHJlZ2lvbjsgTWFkdXJhaSAtICAgQ29pbWJhdG9yZSAtIEJhbmdhbG9yZSByZWdpb247IENoaG90YSBOYWdwdXIgcGxhdGVhdSByZWdpb24gYW5kIERlbGhpIGFuZCBBZGpvaW5pbmcgcmVnaW9uLiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIENob3RhbmFncHVyIFJlZ2lvbiBleHRlbmRzIG92ZXIgSmhhcmtoYW5kLCBub3J0aGVybiBPZGlzaGEgYW5kIHdlc3Rlcm4gICBXZXN0IEJlbmdhbC4gYW5kIGlzIGtub3duIGZvciB0aGUgaGVhdnkgbWV0YWxsdXJnaWNhbCBpbmR1c3RyaWVzLiBUaGUgZGV2ZWxvcG1lbnQgb2YgdGhlIHJlZ2lvbiBpcyBmcm9tICAgdGhlIGRpc2NvdmVyeSBvZiBjb2FsIGluIHRoZSBEYW1vZGFyIFZhbGxleSBhbmQgbWV0YWxsaWMgYW5kIG5vbi1tZXRhbGxpYyBtaW5lcmFscyBpbiBKaGFya2hhbmQgYW5kICAgbm9ydGhlcm4gT2Rpc2hhLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIEh5ZGVyYWJhZCBXYXJhbmdhbCBhbmQgSHlkZXJhYmFkIE5hZ3B1ciBpcyBhbiBJbmR1c3RyaWFsIENvcnJpZG9yIHdoaWNoICAgaGFzIGFuIEluZmx1ZW5jZSBhcmVhIHNwcmVhZCBhY3Jvc3MgdGhlIHN0YXRlcyBvZiBUZWxhbmdhbmEgYW5kIE1haGFyYXNodHJhLiBUaGUgR292ZXJubWVudCBvZiBJbmRpYSBpcyAgIGNvbnNpZGVyaW5nIGl0IHRvIGZhY2lsaXRhdGUgZGV2ZWxvcG1lbnQgb2YgYSB3ZWxsLSBwbGFubmVkIGFuZCByZXNvdXJjZS1lZmZpY2llbnQgaW5kdXN0cmlhbCBiYXNlIHNlcnZlZCBieSAgIHdvcmxkLWNsYXNzIHN1c3RhaW5hYmxlIGNvbm5lY3Rpdml0eSBpbmZyYXN0cnVjdHVyZSwgYnJpbmdpbmcgc2lnbmlmaWNhbnQgYmVuZWZpdHMgaW4gdGVybXMgb2YgaW5ub3ZhdGlvbiwgICBtYW51ZmFjdHVyaW5nLCBqb2IgY3JlYXRpb24gYW5kIHJlc291cmNlIHNlY3VyaXR5IHRvIHRoZSBpZGVudGlmaWVkIGFyZWFzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBNYWR1cmFpIC0gQ29pbWJhdG9yZSAtIEJhbmdhbG9yZSBpbmR1c3RyaWFsIHJlZ2lvbiBjb25maW5lZCB0byBCZW5nYWx1cnUsICAgU2FsZW0gYW5kIE1hZHVyYWkgZGlzdHJpY3RzIGhhdmUgbm93IHNwcmVhZCBvdmVyIGFsbCB0aGUgZGlzdHJpY3RzIG9mIFRhbWlsIE5hZHUgZXhjZXB0IFZpbGx1cHVyYW0uIFRoZSAgIHJlZ2lvbiBpcyB3ZWxsIGtub3duIGZvciBDb3R0b24gdGV4dGlsZSBpbmR1c3RyeSwgbG9vbSBpbmR1c3RyeSwgc2V2ZXJhbCBoZWF2eSBlbmdpbmVlcmluZyBpbmR1c3RyaWVzLCByYWlsICAgd2Fnb25zIGluZHVzdHJ5LCBhbHVtaW5pdW0gaW5kdXN0cnksIGNlbWVudCBpbmR1c3RyeSwgZXRjLiAgQWlyY3JhZnQgKEhBTCksIG1hY2hpbmUgdG9vbHMsIHRlbGVwaG9uZSAoSFRMKSAgIGFuZCBCaGFyYXQgRWxlY3Ryb25pY3MgYXJlIGluZHVzdHJpYWwgbGFuZG1hcmtzIG9mIHRoaXMgcmVnaW9uLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gVGhlIEtvbGthdGEtIENoZW5uYWkgLSBUdXRpY29yaW4gaXMgbm90IGFuIGluZHVzdHJpYWwgcmVnaW9uIGJ1dCBpcyBsaW5rZWQgdG8gRWFzdCAgIENvYXN0IEVjb25vbWljIENvcnJpZG9yIHdoaWNoIGVuY29tcGFzc2VzIG9uZSBvZiB0aGUgbGFyZ2VzdCBjb25jZW50cmF0aW9ucyBvZiBpbmR1c3RyaWFsLCBtaW5lcmFsIGFuZCAgIHVyYmFuIG5vZGVzIHN1cHBsZW1lbnRlZCBieSBzdHJvbmcgbG9jYWwgZmFjdG9yIGFkdmFudGFnZXMgd2hpY2ggaW50ZXIgYWxpYSBpbmNsdWRlIGdvb2QgY29ubmVjdGlvbiB3aXRoICAgaXRzIGhpbnRlcmxhbmQgYW5kIG1ham9yIHBvcnRzIGluIHRoZSBwcm94aW1pdHkgb2YgRWFzdCBBc2lhbiBlY29ub21pZXMgKGFyb3VuZCA4MCUgb2YgQW5kaHJhIFByYWRlc2gpLiAgICBTb3VyY2U6ICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzLzMxNmNvdXJzZUUvY2gyNC5wZGYgICBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MjA4LnBkZiAoRk9SIElNQUdFIEFMU08pICAgaHR0cHM6Ly9kcGlpdC5nb3YuaW4vcHJvZ3JhbW1lcy1hbmQtc2NoZW1lcy9pbmZyYXN0cnVjdHVyZS9pbmR1c3RyaWFsLWNvcnJpZG9ycyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to the Census 2011,  consider the following statements:  1.  Since Independence, India's rate of  urbanization has been higher compared to  all of the developed nations.  2.  More than 50% of India's total urban  population lives in metropolitan cities.  3.  Mizoram is the most urbanized among the  North-Eastern States of India.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB1cmJhbml6YXRpb24gaW4gSW5kaWEgaXMgb2Z0ZW4gdGVybWVkIGFzIG92ZXItdXJiYW5pemF0aW9uIG9yIHBzZXVkby0gdXJiYW5pemF0aW9uLiBUaGUgYmlnIGNpdGllcyAgIGF0dGFpbmVkIGlub3JkaW5hdGVseSBsYXJnZSBwb3B1bGF0aW9uIHNpemUgbGVhZGluZyB0byB2aXJ0dWFsIGNvbGxhcHNlIGluIHRoZSB1cmJhbiBzZXJ2aWNlcyBhbmQgZm9sbG93ZWQgYnkgICBiYXNpYyBwcm9ibGVtcyBpbiB0aGUgZmllbGQgb2YgaG91c2luZywgc2x1bSwgd2F0ZXIsIGluZnJhc3RydWN0dXJlLCBxdWFsaXR5IG9mIGxpZmUgZXRjLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gMTkxMSwgdGhlIHBlcmNlbnRhZ2Ugb2YgdXJiYW5pemF0aW9uIHdhcyAxMC4yOSBhbmQgdGhpcyByZWFjaGVkIDE3LjI5IHBlcmNlbnQgICBieSAxOTUxLiBCeSAyMDExLCB0aGUgcGVyY2VudGFnZSBoYWQgcmVhY2hlZCAzMS4xNiwgYW4gYWRkaXRpb24gb2YgMjAuODcgcGVyY2VudCwgYXQgYW4gYXZlcmFnZSBvZiAyLjA5IHBlcmNlbnQgICBwZXIgZGVjYWRlLiBJbmRpYSdzIHJhdGUgb2YgdXJiYW5pemF0aW9uIGhhcyBiZWVuIHNsb3cgY29tcGFyZWQgdG8gbWFueSBvZiB0aGUgZGV2ZWxvcGVkIG5hdGlvbnM7IGJ1dCB0aGUgICBtb3ZlbWVudCBoYXMgYmVlbiB1bmlkaXJlY3Rpb25hbCAtIGluIHRoZSBkaXJlY3Rpb24gb2YgdXJiYW5pemF0aW9uLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSW4gMTk1MSwgMTguOSBwZXJjZW50IG9mIHRoZSB1cmJhbiBwb3B1bGF0aW9uIHdhcyBpbiBtZXRyb3BvbGlzZXMuIFRoaXMgcm9zZSB0byAgIDIzLjYsIDI3LjcsIDM3LjggYW5kIDQyLjMgcGVyY2VudCBpbiBlYWNoIHN1Y2Nlc3NpdmUgZGVjYWRlLiBJbiBvdGhlciB3b3JkcywgaW4gMjAxMSwgZmlmdHktdHdvIG1ldHJvcG9saXRhbiAgIHRvd25zIGhlbGQgNDIuMyBwZXJjZW50IG9mIEluZGlhJ3MgdXJiYW4gcG9wdWxhdGlvbiBhbmQgNyw4ODMgb3RoZXIgY2l0aWVzIGFuZCB0b3ducyBoZWxkIDQ3LjcgcGVyY2VudCBvZiAgIHRoZSB0b3RhbCB1cmJhbiBwb3B1bGF0aW9uLiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIHRoZSBDZW5zdXMgb2YgSW5kaWEgMjAxMSwgYW1vbmcgdGhlIE5vcnRoLUVhc3Rlcm4gU3RhdGVzLCBNaXpvcmFtICAgaXMgbW9zdCB1cmJhbml6ZWQgd2l0aCA1MS41IHBlcmNlbnQgdXJiYW4gcG9wdWxhdGlvbiwgdGhvdWdoIGluIHRlcm1zIG9mIGFic29sdXRlIGNvbnRyaWJ1dGlvbiB0byB0b3RhbCAgIHVyYmFuIHBvcHVsYXRpb24gaW4gdGhlIGNvdW50cnksIE1pem9yYW0ncyBjb250cmlidXRpb24gaXMganVzdCAwLjEgcGVyY2VudC4gV2hpbGUgYW1vbmcgU3RhdGVzLCBHb2EgaXMgdGhlICAgbW9zdCB1cmJhbml6ZWQgU3RhdGUgd2l0aCA2Mi4yIHBlcmNlbnQgdXJiYW4gcG9wdWxhdGlvbi4gICAgU291cmNlOiAgaHR0cDovLzQ1LjExNS45OS4yMDUvbW91ZC9jbXMvbGV2ZWwtb2YtdXJiYW5pc2F0aW9uLnBocCAgICBiZWhpbmQtY2hpbmFzLTEtYm4tdW4vYXJ0aWNsZXNob3cvOTI1NjE3NDcuY21zICAgIHBvbGljaWVzLWFyZS1hdC10aGUtYm90dG9tLW9mLWl0cy1lY29ub215LWZhaWxpbmctdG8tdGFrZS1vZmYvICAgaHR0cHM6Ly93d3cuZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNTk0ODUvMS9Vbml0MS5wZGYgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgaHR0cHM6Ly93d3cub3Jmb25saW5lLm9yZy9leHBlcnQtc3BlYWsvY2Vuc3VzLTIwMjEtbGlrZWx5LWNvbmZpcm1hdGlvbi1vZi1wYXN0LXVyYmFuaXNhdGlvbi0gIHRyZW5kcy8gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements with  reference to the slum areas:  1.  Slums refer to informal settlements in urban  areas that are densely populated.  2.  Uncontrolled rural-urban migration,  informal economy and poverty are the  factors associated with the slum expansion.  3.  Slums areas are well known for their high  vulnerability to natural disasters like floods.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFNsdW1zIHJlZmVyIHRvIGluZm9ybWFsIHNldHRsZW1lbnRzIGluIHVyYmFuIGFyZWFzIHRoYXQgYXJlIGRlbnNlbHkgcG9wdWxhdGVkLiAgIFRoZXkgYXJlIG9mdGVuIGNoYXJhY3Rlcml6ZWQgYnkgc3Vic3RhbmRhcmQgaG91c2luZyBhcyB3ZWxsIGFzIHNxdWFsb3IuIE1hbnkgc2x1bXMnIGFyZWFzIG1heSBub3QgaGF2ZSAgIHJlbGlhYmxlIHNhbml0YXJ5IHNlcnZpY2VzLCBlbGVjdHJpY2l0eSwgYSBjbGVhbiBhbmQgY29uc2lzdGVudCB3YXRlciBzdXBwbHksIGFuZCBsYXcgZW5mb3JjZW1lbnQuIFNsdW0gICByZXNpZGVuY2VzIHJhbmdlIGZyb20gdGhlIHNoYW50eSBob3VzZXMgdG8gdGhlIHByb2Zlc3Npb25hbGx5IGJ1aWx0IGhvdXNpbmcgdGhhdCBoYXMgdHVybmVkIG91dCB0byBiZSBzbHVtcywgICBzb21ldGltZXMgYmVjYXVzZSBvZiBwb29yIGNvbnN0cnVjdGlvbiBlZmZvcnRzIG9yIGNvcnJ1cHRpb24uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogU2V2ZXJhbCByZWFzb25zIGNvbnRyaWJ1dGUgc2lnbmlmaWNhbnRseSB0byB0aGUgZXhwYW5zaW9uIG9mIHNsdW1zLiBUaGVzZSByZWFzb25zICAgY291bGQgYmUgZGVtb2dyYXBoaWMsIGVjb25vbWljLCBwb2xpdGljYWwgYW5kIHNvY2lhbC4gVGhlIHNvY2lvLWVjb25vbWljIGZhY3RvcnMgYXNzb2NpYXRlZCB3aXRoIHNsdW0gICBleHBhbnNpb24gaW5jbHVkZSB1bmNvbnRyb2xsZWQgcnVyYWwtdXJiYW4gbWlncmF0aW9uLCBpbmZvcm1hbCBlY29ub215IG9yIHBvdmVydHkuIFBvbGl0aWNhbCBmYWN0b3JzICAgaW5jbHVkZSBwb2xpdGljYWwgaW5zdGFiaWxpdHksIHBvb3IgcGxhbm5pbmcsIGFuZCBzb2NpYWwgY29uZmxpY3RzLiBNaWdyYXRpb24gZnJvbSBydXJhbCB0byB1cmJhbiBhcmVhcyBpcyBhbW9uZyAgIHRoZSBmYWN0b3JzIHRoYXQgY29udHJpYnV0ZSBzaWduaWZpY2FudGx5IHRvIHRoZSByaXNlIGFuZCBncm93dGggb2Ygc2x1bXMuIEZvciBtYW55IHBlb3BsZSBhcm91bmQgdGhlIHdvcmxkLCAgIHVyYmFuIGFyZWFzIHByb21pc2UgYmV0dGVyIGpvYiBvcHBvcnR1bml0aWVzLCBiZXR0ZXIgc2Nob29scyBmb3IgdGhlIGNoaWxkcmVuIG9mIHRoZSBwb29yLCBhbmQgZGlmZmVyZW50ICAgc291cmNlcyBvZiBpbmNvbWUgKHVubGlrZSB0aGUgcnVyYWwgYXJlYXMgdGhhdCBwcmltYXJpbHkgcmVseSBvbiBzdWJzaXN0ZW5jZSBmYXJtaW5nKS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBTbHVtcyBhcmUgd2VsbCBrbm93biBmb3IgdGhlaXIgaGlnaCB2dWxuZXJhYmlsaXR5IHRvIGZsb29kcyBhbmQgbGFuZHNsaWRlcyBhbW9uZyAgIG90aGVyIG5hdHVyYWwgZGlzYXN0ZXJzLiBPdGhlciBoYXphcmRzIGluY2x1ZGUgaW5kdXN0cmllcywgY29sbGFwc2luZyBpbmZyYXN0cnVjdHVyZSBhbmQgdHJhZmZpYyBjb25nZXN0aW9uLiAgIEFkZGl0aW9uYWxseSwgZmlyZXMgYXJlIGFuIGVzc2VudGlhbCByaXNrIHRvIHRoZSBzbHVtcyB0b2dldGhlciB3aXRoIGl0cyByZXNpZGVudHMuIFRoZXkgaGF2ZSBzdHJlZXRzIHRoYXQgYXJlICAgbmFycm93IGFuZCBjYW5ub3QgcGVybWl0IGVhc3kgYWNjZXNzIHRvIHRoZSB0cnVja3MgZm9yIGZpcmUgY29udHJvbC4gVW5lbXBsb3ltZW50IGFuZCB0aGUgaW5mb3JtYWwgICBlY29ub215IGFyZSBhbm90aGVyIHJpc2sgZm9sbG93aW5nIHRoZSBhYnNlbmNlIG9mIHNraWxscyB0b2dldGhlciB3aXRoIGFkZXF1YXRlIGVkdWNhdGlvbiBpbiB0aGUgam9iICAgbWFya2V0cyB0aGF0IGFyZSBoaWdobHkgY29tcGV0aXRpdmUuICAgU291cmNlOiAgaHR0cHM6Ly93d3cud29ybGRhdGxhcy5jb20vYXJ0aWNsZXMvd2hhdC1hcmUtc2x1bXMuaHRtbCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements with  reference to Logistics sector in India:  1.  The logistics cost in India is considerably  lower than that of developed economies.   2.  Road freight accounts for more than half of  all the freight transported in India.  3.  Railways accounts for less than 20 percent  of all the freight transported in India.  Which of the above statements is/are correct  in the above context?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgTG9naXN0aWNzIGlzIG1hbmFnZW1lbnQgb2YgZmxvdyBvZiBnb29kcyBmcm9tIG9yaWdpbiB0byBkZXN0aW5hdGlvbiB0byBtZWV0IGN1c3RvbWVyIHJlcXVpcmVtZW50cyBpbiAgIG1pbmltdW0gdGltZSBhdCBtaW5pbXVtIGNvc3QuICAgTG9naXN0aWNzIGluY2x1ZGUgcGFja2FnaW5nLCB3YXJlaG91c2luZywgdHJhbnNwb3J0IGFuZCBkZWxpdmVyeSBvZiByYXcgbWF0ZXJpYWxzIGFuZCBmaW5hbCBnb29kcy4gICBMb2dpc3RpY3MgYW5kIHRyYW5zcG9ydGF0aW9uIHNlY3RvciBpcyBjb25zaWRlcmVkIGFzIGJhY2tib25lIG9mIHRoZSBlY29ub215IGJlY2F1c2UgaXQgcHJvdmlkZXMgZmxvdyBvZiAgIGdvb2RzIGVmZmljaWVudGx5IG9uIHdoaWNoIHN1Y2Nlc3Mgb2Ygb3RoZXIgY29tbWVyY2lhbCBzZWN0b3JzIGRlcGVuZC4gVGhlcmVmb3JlLCB0aGUgbG9naXN0aWNzICAgaW5mcmFzdHJ1Y3R1cmUgaGFzIGdhaW5lZCBhIGxvdCBvZiBhdHRlbnRpb24gYm90aCBmcm9tIGJ1c2luZXNzIGluZHVzdHJ5IGFzIHdlbGwgYXMgcG9saWN5IG1ha2Vycy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEluZGlhJ3MgbG9naXN0aWNzIGNvc3QgaXMgZXN0aW1hdGVkIHRvIGFjY291bnQgc29tZXdoZXJlIGJldHdlZW4gMTMtMTQgcGVyIGNlbnQgICBvZiB0aGUgR0RQLiBUaGlzIGNvbXBhcmVzIHBvb3JseSB3aXRoIHRoZSBjb3N0IG9mIDctOCBwZXIgY2VudCBmb3IgZGV2ZWxvcGVkIGVjb25vbWllcy4gT25lIG9mIHRoZSBrZXkgICByZWFzb25zIGZvciBwb29yIHByb2R1Y3Rpdml0eSBpcyB0aGUgbGFjayBvZiBhdXRvbWF0aW9uIGluIGxvZ2lzdGljcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IGFuZCBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFdoaWxlIHJvYWQgZnJlaWdodCBhY2NvdW50cyBmb3IgNTQlIGFuZCByYWlsd2F5cyAgIDMzJSwganVzdCA2JSBvZiBmcmVpZ2h0IHRyYW5zcG9ydGVkIGluIEluZGlhIGlzIGNhcnJpZWQgYnkgY29hc3RhbCBzaGlwcGluZyBhbmQgaW5sYW5kIHdhdGVyd2F5cy4gICAgU291cmNlOiBodHRwczovL3d3dy5oaW5kdXN0YW50aW1lcy5jb20vYnVzaW5lc3MvZ3VqYXJhdC1yYW5rcy0xc3QtZm9yLXRoaXJkLWNvbnNlY3V0aXZlLXllYXItaW4tICBsb2dpc3RpY3MtcGVyZm9ybWFuY2UtaW5kZXgtMTAxNjM2MzgxMDM0NjMxLmh0bWwgICAgaHR0cHM6Ly93d3cubGl2ZW1pbnQuY29tL1BvbGl0aWNzL29nWDR3bGRqU2ZYSmtnd2ZBUGh6RUkvR292dC1wbGFucy1pbmNlbnRpdmUtdG8tc2hpZnQtY2FyZ28tICB0cmFuc3BvcnQtZnJvbS1yb2Fkcy10by5odG1sICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2 and 3 only       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 35,
      "question" : "With reference to birth and death rates in  India, consider the following statements:  1.  India's birth rate has declined drastically  over the last four decades.  2.  The decline in death rate in rural area has  been higher than urban areas over the last  decade.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IC0gQmlydGggcmF0ZSBpcyBhIGNydWRlIG1lYXN1cmUgb2YgZmVydGlsaXR5IG9mIGEgcG9wdWxhdGlvbiBhbmQgYSBjcnVjaWFsIGRldGVybWluYW50ICAgb2YgcG9wdWxhdGlvbiBncm93dGguIEluZGlhJ3MgYmlydGggcmF0ZSBoYXMgZGVjbGluZWQgZHJhc3RpY2FsbHkgb3ZlciB0aGUgbGFzdCBmb3VyIGRlY2FkZXMgZnJvbSAzNi45IGluICAgMTk3MSB0byAyMC4wIGluIDIwMTguIFRoZSBydXJhbC11cmJhbiBkaWZmZXJlbnRpYWwgaGFzIGFsc28gbmFycm93ZWQuIEhvd2V2ZXIsIHRoZSBiaXJ0aCByYXRlIGhhcyBjb250aW51ZWQgICB0byBiZSBoaWdoZXIgaW4gcnVyYWwgYXJlYXMgY29tcGFyZWQgdG8gdXJiYW4gYXJlYXMgaW4gdGhlIGxhc3QgZm91ciBkZWNhZGVzLiBUaGVyZSBoYXMgYmVlbiBhYm91dCBhbiAxMSBwZXIgICBjZW50IGRlY2xpbmUgaW4gYmlydGggcmF0ZSBpbiB0aGUgbGFzdCBkZWNhZGUsIGZyb20gMjIuNSBpbiAyMDA5IHRvIDIwLjAgaW4gMjAxOC4gVGhlIGNvcnJlc3BvbmRpbmcgZGVjbGluZSAgIGluIHJ1cmFsIGFyZWFzIGlzIDI0LjEgdG8gMjEuNiwgYW5kIGluIHVyYmFuIGFyZWFzLCBpdCBpcyAxOC4zIHRvIDE2LjcuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLSBUaGUgZGVhdGggcmF0ZSBvZiBJbmRpYSBoYXMgd2l0bmVzc2VkIGEgc2lnbmlmaWNhbnQgZGVjbGluZSBvdmVyIHRoZSBsYXN0IGZvdXIgICBkZWNhZGVzIGZyb20gMTQuOSBpbiAxOTcxIHRvIDYuMiBpbiAyMDE4LiBUaGUgZGVjbGluZSBoYXMgYmVlbiBzdGVlcGVyIGluIHJ1cmFsIGFyZWFzLiBJbiB0aGUgbGFzdCBkZWNhZGUsICAgZGVhdGggcmF0ZSBhdCBhbiBhbGwtSW5kaWEgbGV2ZWwgaGFzIGRlY2xpbmVkIGZyb20gNy4zIHRvIDYuMi4gVGhlIGNvcnJlc3BvbmRpbmcgZGVjbGluZSBpbiBydXJhbCBhcmVhcyBpcyA3LjggICB0byA2LjcgYW5kIGluIHVyYmFuIGFyZWFzLCA1LjggdG8gNS4xLiAgIEtub3dsZWRnZSBCYXNlOiAgICBBY2NvcmRpbmcgdG8gdGhlIGRhdGEgcmVsZWFzZWQgYnkgdGhlIFJlZ2lzdHJhciBHZW5lcmFsIG9mIEluZGlhLCB0aGUgbmF0aW9uYWwgYmlydGggcmF0ZSBpbiAyMDE4IHN0b29kIGF0IDIwLCAgIGFuZCBkZWF0aCBhbmQgaW5mYW50IG1vcnRhbGl0eSByYXRlcyBzdG9vZCBhdCA2LjIgYW5kIDMyLCByZXNwZWN0aXZlbHkuIFRoZSByYXRlcyBhcmUgY2FsY3VsYXRlZCBwZXIgb25lICAgdGhvdXNhbmQgb2YgdGhlIHBvcHVsYXRpb24uICAgVGhlIGRhdGEgc2hvd3MgdGhhdCBhZ2FpbnN0IHRoZSBuYXRpb25hbCBpbmZhbnQgbW9ydGFsaXR5IHJhdGUgKElNUikgb2YgMzIsIE1hZGh5YSBQcmFkZXNoIGhhcyBhbiBJTVIgb2YgICA0OCBhbmQgTmFnYWxhbmQgNC4gQmloYXIgaGFzIHRoZSBoaWdoZXN0IGJpcnRoIHJhdGUgYXQgMjYuMiBhbmQgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzIGhhcyBhIGJpcnRoICAgcmF0ZSBvZiAxMS4yLiBDaGhhdHRpc2dhcmggaGFzIHRoZSBoaWdoZXN0IGRlYXRoIHJhdGUgYXQgOCBhbmQgRGVsaGksIGFuIGFsbW9zdCBlbnRpcmVseSB1cmJhbiBzdGF0ZSwgaGFzIGEgcmF0ZSAgIG9mIDMuMywgaW5kaWNhdGluZyBiZXR0ZXIgaGVhbHRoY2FyZSBmYWNpbGl0aWVzLiAgIFRoZSBTUlMgaXMgYSBkZW1vZ3JhcGhpYyBzdXJ2ZXkgZm9yIHByb3ZpZGluZyByZWxpYWJsZSBhbm51YWwgZXN0aW1hdGVzIG9mIGluZmFudCBtb3J0YWxpdHkgcmF0ZSwgYmlydGggcmF0ZSwgICBkZWF0aCByYXRlIGFuZCBvdGhlciBmZXJ0aWxpdHkgYW5kIG1vcnRhbGl0eSBpbmRpY2F0b3JzIGF0IHRoZSBuYXRpb25hbCBhbmQgc3ViLW5hdGlvbmFsIGxldmVscy4gSW5pdGlhdGVkIG9uIGEgICBwaWxvdCBiYXNpcyBieSB0aGUgUmVnaXN0cmFyIEdlbmVyYWwgb2YgSW5kaWEgaW4gYSBmZXcgc3RhdGVzIGluIDE5NjQtNjUsIGl0IGJlY2FtZSBmdWxseSBvcGVyYXRpb25hbCBkdXJpbmcgICAxOTY5LTcwLiAgIFNvdXJjZTogaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2luZGlhL25hdGlvbmFsLWluZmFudC1tb3J0YWxpdHktcmF0ZS1hdC0zMi1tYWRoeWEtICBwcmFkZXNoLXdvcnN0LXBlcmZvcm1lci02NDAyNDk3LyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 Only  ",
        "option2" : "2 Only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 36,
      "question" : "Which of the following is/are the criteria  defined as per the census to declare an area as  a town?  1.  Population should be greater than 100000.  2.  Population density should be greater than  400 persons per sq. Km  3.  At least 50% of the working population  should be employed in non-agricultural  sectors  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFjcm9zcyBJbmRpYSB0aGUgdmlsbGFnZXMgYXJlIGdldHRpbmcgdXJiYW5pemVkLiBPbmUgbWVhc3VyZSBvZiB0aGlzIGNvbWVzIGZyb20gdGhlIGNlbnN1cy4gQmV0d2VlbiAyMDAxICAgYW5kIDIwMTEsIHRoZSBudW1iZXIgb2YgY2Vuc3VzIHRvd25zIGluY3JlYXNlZCBmcm9tIDEsMzYyIHRvIDMsODk0LiBDZW5zdXMgdG93bnMgYXJlIGFuIGFyZWEgdGhhdCBpcyBub3QgICBkZWZpbmVkIGFzIGEgdG93biBieSBzdGF0ZSBnb3Zlcm5tZW50cyBidXQgaGFzIHVyYmFuIGNoYXJhY3RlcmlzdGljcy4gICBUaGUgY3JpdGVyaWEgZm9yIGJlaW5nIGNsYXNzaWZpZWQgYXMgYSBjZW5zdXMgdG93biBhcmU6ICAgMSkgQSBtaW5pbXVtIHBvcHVsYXRpb24gb2YgNSwwMDAgICAyKSBBdCBsZWFzdCA3NSUgb2YgdGhlIG1hbGUgbWFpbiB3b3JraW5nIHBvcHVsYXRpb24gaW4gdGhlIHRvd24gZW5nYWdlZCBpbiBub24tYWdyaWN1bHR1cmFsIGFjdGl2aXRpZXMgICAzKSBBIHBvcHVsYXRpb24gZGVuc2l0eSBvZiBhdCBsZWFzdCA0MDAgcGVyc29ucyBwZXIgc3F1YXJlIGtpbG9tZXRyZSAgIFRoZSBudW1iZXIgb2YgY2Vuc3VzIHRvd25zIHRyZWJsZWQgZnJvbSAxLDM2MiB0byAzLDg5NCBkdXJpbmcgMjAwMS0yMDExLCBhY2NvdW50aW5nIGZvciAzMCUgb2YgdGhlIHRvdGFsICAgcmlzZSBpbiB1cmJhbiBwb3B1bGF0aW9uIG9mIHRoZSBjb3VudHJ5LiAgIDEpIFRoZSBlbWVyZ2VuY2Ugb2YgY2Vuc3VzIHRvd25zIGlzIGEgcmVzdWx0IG9mIHBlb3BsZSBpbiBydXJhbCBhcmVhcyBzaGlmdGluZyBmcm9tIGFncmljdWx0dXJlIHRvIG5vbi0gIGFncmljdWx0dXJhbCBzZWN0b3JzIHN1Y2ggYXMgY29uc3RydWN0aW9uLCB0cmFkZSBhbmQgbWFudWZhY3R1cmluZy4gSW4gVXR0YXIgUHJhZGVzaCwgYXJvdW5kIGhhbGYgb2YgdGhlICAgY2Vuc3VzIHRvd25zIGFyZSBzbWFsbCAobGVzcyB0aGFuIDUgc3F1YXJlIGtpbG9tZXRyZXMpLCBsb2NhdGVkIGF0IHRoZSBvdXRza2lydHMgb2YgbWFqb3IgY2l0aWVzIGFuZCBkbyAgIG5vdCBzcGVjaWFsaXplIGluIGFueSBjb21tb2RpdHkuIFRoZXNlIHRvd25zIGhhdmUgZW1lcmdlZCBhcyBhIHJlc3VsdCBvZiBpbmNyZWFzZWQgcnVyYWwgZGVtYW5kIGFuZCAgIGFjdCBhcyBtYXJrZXRwbGFjZXMgZm9yIHRoZSBuZWlnaGJvcmluZyB2aWxsYWdlcy4gSW4gY29udHJhc3QsIHRoZSBvdGhlciBoYWxmIG9mIGNlbnN1cyB0b3ducyBoYXZlIGlzICAgY2VudGVyZWQgb24gdGhlIG1hbnVmYWN0dXJpbmcgb2YgYSBzaW5nbGUgZ29vZC4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9wb2xpdGljcy9wb2xpY3kvd2hhdC1kcml2ZXMtaW5kaWEtcy11cmJhbml6YXRpb24tICAxNTY2ODk5MzUzMzAxLmh0bWwgICAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 37,
      "question" : "'It is a continuous urban spread  constituting a town and its adjoining  outgrowths or two or more physically  contiguous towns. It consists of at least a  statutory town (all places with a municipality,  corporation, cantonment board or notified  town area committee, etc.) and its total  population should not be less than 20,000 as  per the Census of 2011.'  The above paragraph refers to which of the  following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IEluIEluZGlhLCB0aGUgd29yZCAndXJiYW4gYWdnbG9tZXJhdGlvbicgaXMgZGVmaW5lZCBpbiB0aGUgQ2Vuc3VzIG9mIEluZGlhIHdoaWNoICAgcHJvdmlkZXMgc3RhdGlzdGljYWwgaW5mb3JtYXRpb24gb24gZGlmZmVyZW50IGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgcGVvcGxlIG9mIEluZGlhLiBUaGUgcmVzcG9uc2liaWxpdHkgb2YgICBjb25kdWN0aW5nIHRoZSBkZWNlbm5pYWwgQ2Vuc3VzIHJlc3RzIHdpdGggdGhlIE9mZmljZSBvZiB0aGUgUmVnaXN0cmFyIEdlbmVyYWwgYW5kIENlbnN1cyBDb21taXNzaW9uZXIsICAgSW5kaWEgdW5kZXIgTWluaXN0cnkgb2YgSG9tZSBBZmZhaXJzLCBHb3Zlcm5tZW50IG9mIEluZGlhLiAgIDEpIEFuIHVyYmFuIGFnZ2xvbWVyYXRpb24gaXMgYSBjb250aW51b3VzIHVyYmFuIHNwcmVhZCBjb25zdGl0dXRpbmcgYSB0b3duIGFuZCBpdHMgYWRqb2luaW5nICAgb3V0Z3Jvd3RocyAoT0dzKSwgb3IgdHdvIG9yIG1vcmUgcGh5c2ljYWxseSBjb250aWd1b3VzIHRvd25zIHRvZ2V0aGVyIHdpdGggb3Igd2l0aG91dCBvdXRncm93dGhzICAgb2Ygc3VjaCB0b3ducy4gQW4gVXJiYW4gQWdnbG9tZXJhdGlvbiBtdXN0IGNvbnNpc3Qgb2YgYXQgbGVhc3QgYSBzdGF0dXRvcnkgdG93biAoYWxsIHBsYWNlcyB3aXRoIGEgICBtdW5pY2lwYWxpdHksIGNvcnBvcmF0aW9uLCBjYW50b25tZW50IGJvYXJkIG9yIG5vdGlmaWVkIHRvd24gYXJlYSBjb21taXR0ZWUsIGV0Yy4pIGFuZCBpdHMgdG90YWwgICBwb3B1bGF0aW9uIChpLmUuLCBhbGwgdGhlIGNvbnN0aXR1ZW50cyBwdXQgdG9nZXRoZXIpIHNob3VsZCBub3QgYmUgbGVzcyB0aGFuIDIwLDAwMCBhcyBwZXIgdGhlIHByZXZpb3VzICAgQ2Vuc3VzIG9mIDIwMTEuIEV4YW1wbGVzOiBHcmVhdGVyIE11bWJhaSBVQSwgRGVsaGkgVUEsIGV0Yy4gICBXaXRoIHRoZXNlIHR3byBiYXNpYyBjcml0ZXJpYSBoYXZpbmcgYmVlbiBtZXQsIHRoZSBmb2xsb3dpbmcgYXJlIHRoZSBwb3NzaWJsZSBkaWZmZXJlbnQgc2l0dWF0aW9ucyBpbiB3aGljaCAgIFVyYmFuIEFnZ2xvbWVyYXRpb25zIHdvdWxkIGJlIGNvbnN0aXR1dGVkOiAgICAxKSBBIGNpdHkgb3IgdG93biB3aXRoIG9uZSBvciBtb3JlIGNvbnRpZ3VvdXMgb3V0Z3Jvd3RocyAgIDIpIFR3byBvciBtb3JlIGFkam9pbmluZyB0b3ducyB3aXRoIHRoZWlyIG91dGdyb3d0aHMgICAzKSBBIGNpdHkgYW5kIG9uZSBvciBtb3JlIGFkam9pbmluZyB0b3ducyB3aXRoIHRoZWlyIG91dGdyb3d0aHMgYWxsIG9mIHdoaWNoIGZvcm0gYSBjb250aW51b3VzIHNwcmVhZC4gSW4gICB2YXJ5aW5nIGxvY2FsIGNvbmRpdGlvbnMsIHRoZXJlIHdlcmUgc2ltaWxhciBvdGhlciBjb21iaW5hdGlvbnMgd2hpY2ggaGF2ZSBiZWVuIHRyZWF0ZWQgYXMgdXJiYW4gICBhZ2dsb21lcmF0aW9ucyBzYXRpc2Z5aW5nIHRoZSBiYXNpYyBjb25kaXRpb24gb2YgY29udGlndWl0eS4gICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IEEgcHJlZGVjZXNzb3Igb2YgdGhlIHRlcm0gJ1VyYmFuIEFnZ2xvbWVyYXRpb24nIGlzIGEgdGVybSBjYWxsZWQgJ3N0YW5kYXJkIHVyYmFuICAgYXJlYScuIFRoaXMgd2FzIGEgbmV3IGNvbmNlcHQgZGV2ZWxvcGVkIGZvciB0aGUgMTk3MSBDZW5zdXMgZm9yIHRoZSB0YWJ1bGF0aW9uIG9mIGNlcnRhaW4gdXJiYW4gZGF0YS4gVGhlICAgZXNzZW50aWFsIGNyaXRlcmlhIG9mIGEgU3RhbmRhcmQgVXJiYW4gQXJlYSBhcmU6ICAgMSkgSXQgc2hvdWxkIGhhdmUgYSBjb3JlIHRvd24gb2YgYSBtaW5pbXVtIHBvcHVsYXRpb24gc2l6ZSBvZiA1MCwwMDAsICAgMikgVGhlIGNvbnRpZ3VvdXMgYXJlYXMgbWFkZSB1cCBvZiBvdGhlciB1cmJhbiBhcyB3ZWxsIGFzIHJ1cmFsIGFkbWluaXN0cmF0aXZlIHVuaXRzIHNob3VsZCBoYXZlIGNsb3NlICAgbXV0dWFsIHNvY2lvLSBlY29ub21pYyBsaW5rcyB3aXRoIHRoZSBjb3JlIHRvd24gICAzKSBUaGUgcHJvYmFiaWxpdGllcyBhcmUgdGhhdCB0aGlzIGVudGlyZSBhcmVhIHdpbGwgZ2V0IGZ1bGx5IHVyYmFuaXplZCBpbiBhIHBlcmlvZCBvZiB0d28gdG8gdGhyZWUgZGVjYWRlcy4gICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IEFkbWluaXN0cmF0aXZlIHRvd25zIGFuZCBjaXRpZXMgYXJlIHRoZSB0b3ducyB0aGF0IGFyZSBzdXBwb3J0aW5nIGFkbWluaXN0cmF0aXZlICAgaGVhZHF1YXJ0ZXJzIG9mIGhpZ2hlciBvcmRlciBhcmUgYWRtaW5pc3RyYXRpdmUgdG93bnMsIHN1Y2ggYXMgQ2hhbmRpZ2FyaCwgTmV3IERlbGhpLCBCaG9wYWwsIFNoaWxsb25nLCAgIEd1d2FoYXRpLCBJbXBoYWwsIFNyaW5hZ2FyLCBHYW5kaGluYWdhciwgSmFpcHVyLCBDaGVubmFpLCBldGMuICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBBIG1ldHJvcG9saXRhbiBhcmVhIGlzIGEgcmVnaW9uIGhvdXNlIHRvIGEgZGVuc2VseSBwb3B1bGF0ZWQgdXJiYW4gY29yZSBhbmQgaXRzIGxlc3MtICBwb3B1bGF0ZWQgc3Vycm91bmRpbmcgdGVycml0b3JpZXMsIHNoYXJpbmcgaW5kdXN0cnksIGluZnJhc3RydWN0dXJlLCBhbmQgaG91c2luZy4gQSBtZXRybyBhcmVhIHVzdWFsbHkgICBjb21wcmlzZXMgbXVsdGlwbGUganVyaXNkaWN0aW9ucyBhbmQgbXVuaWNpcGFsaXRpZXMuIEFzIHNvY2lhbCwgZWNvbm9taWMgYW5kIHBvbGl0aWNhbCBpbnN0aXR1dGlvbnMgaGF2ZSAgIGNoYW5nZWQsIG1ldHJvcG9saXRhbiBhcmVhcyBoYXZlIGJlY29tZSBrZXkgZWNvbm9taWMgYW5kIHBvbGl0aWNhbCByZWdpb25zLiBJbiBJbmRpYSwgdGhlIENlbnN1cyAgIENvbW1pc3Npb24gZGVmaW5lcyB0aGUgcXVhbGlmaWNhdGlvbiBmb3IgbWV0cm9wb2xpdGFuIGNpdHkgYXMsIHRoZSBjaXRpZXMgaGF2aW5nIGEgcG9wdWxhdGlvbiBvZiBtb3JlICAgdGhhbiAxMCBsYWtocyBvciBvbmUgbWlsbGlvbiBhbmQgYWJvdmUgYW5kIGEgTWVnYWNpdHkgYXMgdGhlIGNpdGllcyBoYXZpbmcgYSBwb3B1bGF0aW9uIG9mIG1vcmUgdGhhbiAxMCAgIG1pbGxpb24gYW5kIGFib3ZlLiAgIFNvdXJjZTogICBodHRwOi8vd3d3LmFydGhhcGVkaWEuaW4vaW5kZXgucGhwP3RpdGxlPVVyYmFuX0FnZ2xvbWVyYXRpb24jOn46dGV4dD1BbiUyMHVyYmFuJTIwYWdnbG9tZXJhdGkgIG9uJTIwaXMlMjBhLHdpdGhvdXQlMjBvdXRncm93dGhzJTIwb2YlMjBzdWNoJTIwdG93bnMuICAgaHR0cHM6Ly93d3cuaW5kaWF0b2RheS5pbi9lZHVjYXRpb24tdG9kYXkvZ2stY3VycmVudC1hZmZhaXJzL3N0b3J5L3doYXQtaXMtdGhlLWRpZmZlcmVuY2UtICBiZXR3ZWVuLW1ldHJvcG9saXRhbi1hbmQtY29zbW9wb2xpdGFuLWNpdHktMTU5OTY2MS0yMDE5LTA5LTE2ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVneTIwNC5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Urban agglomeration  ",
        "option2" : "Standard urban area  ",
        "option3" : "administrative towns and cities  ",
        "option4" : "Metropolitan Cities   "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements with  reference to globalization:  1.  Globalization is an outcome of the set of  various policies that are aimed at  transforming the world towards greater  interdependence and integration.  2.  Economic Globalization reflects the idea  that no economy in the world is isolated  today.  3.  A company hiring regular services from  other countries under globalization is called  outsourcing.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBHbG9iYWxpemF0aW9uIGlzIGdlbmVyYWxseSB1bmRlcnN0b29kIHRvIG1lYW4gaW50ZWdyYXRpb24gb2YgdGhlIGVjb25vbXkgb2YgdGhlICAgY291bnRyeSB3aXRoIHRoZSB3b3JsZCBlY29ub215LCBpdCBpcyBhIGNvbXBsZXggcGhlbm9tZW5vbi4gSXQgaXMgYW4gb3V0Y29tZSBvZiB0aGUgc2V0IG9mIHZhcmlvdXMgICBwb2xpY2llcyB0aGF0IGFyZSBhaW1lZCBhdCB0cmFuc2Zvcm1pbmcgdGhlIHdvcmxkIHRvd2FyZHMgZ3JlYXRlciBpbnRlcmRlcGVuZGVuY2UgYW5kIGludGVncmF0aW9uLiBJdCAgIGludm9sdmVzIGNyZWF0aW9uIG9mIG5ldHdvcmtzIGFuZCBhY3Rpdml0aWVzIHRyYW5zY2VuZGluZyBlY29ub21pYywgc29jaWFsIGFuZCBnZW9ncmFwaGljYWwgYm91bmRhcmllcy4gICBHbG9iYWxpemF0aW9uIGF0dGVtcHRzIHRvIGVzdGFibGlzaCBsaW5rcyBpbiBzdWNoIGEgd2F5IHRoYXQgdGhlIGhhcHBlbmluZ3MgaW4gSW5kaWEgY2FuIGJlIGluZmx1ZW5jZWQgYnkgICBldmVudHMgaGFwcGVuaW5nIG1pbGVzIGF3YXkuIEl0IGlzIHR1cm5pbmcgdGhlIHdvcmxkIGludG8gb25lIHdob2xlIG9yIGNyZWF0aW5nIGEgYm9yZGVybGVzcyB3b3JsZC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBFY29ub21pYyBHbG9iYWxpemF0aW9uIHJlZmxlY3RzIHRoZSBpZGVhIHRoYXQgbm8gZWNvbm9teSBpbiB0aGUgd29ybGQgaXMgaXNvbGF0ZWQgICB0b2RheSBhbmQgdGhlcmUgaXMgYW4gaW50ZXItbG9ja2luZyBnbG9iYWwgZWNvbm9teSB3aGljaCBoYXMgYWJzb3JiZWQgdmFyaW91cyBlY29ub21pZXMgYXJvdW5kIHRoZSAgIHdvcmxkLiBUaGUgZGVtaXNlIG9mIHRoZSBTb3ZpZXQgVW5pb24gYWN0ZWQgYXMgYSBjYXRhbHlzdCBmb3IgZ2xvYmFsIGVjb25vbWljIGludGVncmF0aW9uIGFzIHRoZSBsYXN0IG1ham9yICAgYmxvY2sgb2YgY291bnRyaWVzIHdlcmUgYWJzb3JiZWQgaW50byB0aGUgZ2xvYmFsIGNhcGl0YWxpc3Qgc3lzdGVtLiBFY29ub21pYyBnbG9iYWxpemF0aW9uIGhhcyByZWR1Y2VkIHRoZSAgIGNhcGFjaXR5IG9mIG5hdGlvbmFsIGdvdmVybm1lbnRzIHRvIG1hbmFnZSB0aGVpciBlY29ub21pZXMgYW5kIHRvIHJlc2lzdCB0aGVpciByZXN0cnVjdHVyaW5nIGFsb25nIGZyZWUgICBtYXJrZXQgcHJpbmNpcGxlcy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBPdXRzb3VyY2luZyBpcyBvbmUgb2YgdGhlIGltcG9ydGFudCBvdXRjb21lcyBvZiB0aGUgZ2xvYmFsaXphdGlvbiBwcm9jZXNzLiBJbiAgIG91dHNvdXJjaW5nLCBhIGNvbXBhbnkgaGlyZXMgcmVndWxhciBzZXJ2aWNlIGZyb20gZXh0ZXJuYWwgc291cmNlcywgbW9zdGx5IGZyb20gb3RoZXIgY291bnRyaWVzLCB3aGljaCAgIHdhcyBwcmV2aW91c2x5IHByb3ZpZGVkIGludGVybmFsbHkgb3IgZnJvbSB3aXRoaW4gdGhlIGNvdW50cnkgKGxpa2UgbGVnYWwgYWR2aWNlLCBjb21wdXRlciBzZXJ2aWNlLCAgIGFkdmVydGlzZW1lbnQsIHNlY3VyaXR5LSBlYWNoIHByb3ZpZGVkIGJ5IHJlc3BlY3RpdmUgZGVwYXJ0bWVudHMgb2YgdGhlIGNvbXBhbnkpLiBvdXRzb3VyY2luZyBoYXMgICBpbnRlbnNpZmllZCwgaW4gcmVjZW50IHRpbWVzLCBiZWNhdXNlIG9mIHRoZSBncm93dGggb2YgZmFzdCBtb2RlcyBvZiBjb21tdW5pY2F0aW9uLCBwYXJ0aWN1bGFybHkgdGhlIGdyb3d0aCAgIG9mIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgKElUKS4gICAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYva2VlYzEwMy5wZGYgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5Lzc2NzI3LzEvVW5pdC0xLnBkZiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to the Gurugram-Delhi- Meerut industrial region, consider the  following statements:  1.  Industries located in this region are light  and market-oriented.  2.  Agra-Mathura industrial area of this region  specializes in glass goods.  3.  Proximity of coal and iron ore facilitated the  location of heavy industries in this region.  Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgb3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZHVzdHJpZXMgbG9jYXRlZCBpbiB0aGlzIHJlZ2lvbiBoYXZlIHNob3duIHZlcnkgZmFzdCBncm93dGggaW4gdGhlIHJlY2VudCBwYXN0LiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoaXMgcmVnaW9uIGlzIGxvY2F0ZWQgZmFyIGF3YXkgZnJvbSB0aGUgbWluZXJhbCBhbmQgcG93ZXIgcmVzb3VyY2VzLCBhbmQgICB0aGVyZWZvcmUsIHRoZSBpbmR1c3RyaWVzIGFyZSBsaWdodCBhbmQgbWFya2V0LW9yaWVudGVkLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQWdyYS1NYXRodXJhIGluZHVzdHJpYWwgYXJlYSwgd2hpY2ggc3BlY2lhbGl6ZXMgaW4gZ2xhc3MgYW5kIGxlYXRoZXIgZ29vZHMuICAgTWF0aHVyYSwgd2l0aCBhbiBvaWwgcmVmaW5lcnksIGlzIGEgcGV0cm9jaGVtaWNhbCBjb21wbGV4LiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gUHJveGltaXR5IG9mIGNvYWwsIGlyb24gb3JlIGFuZCBvdGhlciBtaW5lcmFscyBmYWNpbGl0YXRlZCB0aGUgbG9jYXRpb24gb2YgaGVhdnkgICBpbmR1c3RyaWVzIGluIENob3RhbmFncHVyIHJlZ2lvbiBhbmQgbm90IEd1cnVncmFtLURlbGhpLU1lZXJ1dCBpbmR1c3RyaWFsIHJlZ2lvbi4gRWxlY3Ryb25pY3MsIGxpZ2h0ICAgZW5naW5lZXJpbmcgYW5kIGVsZWN0cmljYWwgZ29vZHMgYXJlIG1ham9yIGluZHVzdHJpZXMgb2YgdGhpcyByZWdpb24uICAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVneTIwOC5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs regarding  the primary factors determining the location of  Industries:  Factors for the location of Industries -  Associated Industries  1.  Availability of Raw Materials - Watches and  Electronics industries  2.  Supply of labour - Consumer Goods  industries  3.  Access to Sources of Energy - Aluminium  industries  Which of the following pairs is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZHVzdHJpZXMgd29ya3Mgb24gdGhlIHByaW5jaXBsZSBvZiBtYXhpbWlzZSBwcm9maXRzIGJ5IHJlZHVjaW5nIGNvc3RzLiBUaGVyZWZvcmUsIGluZHVzdHJpZXMgc2hvdWxkIGJlICAgbG9jYXRlZCBhdCBwb2ludHMgd2hlcmUgdGhlIHByb2R1Y3Rpb24gY29zdHMgYXJlIG1pbmltdW0uIFNvbWUgb2YgdGhlIGZhY3RvcnMgaW5mbHVlbmNpbmcgaW5kdXN0cmlhbCAgIGxvY2F0aW9ucyBhcmUgYXMgdW5kZXI6ICAgUGFpciAxIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IFJhdyBtYXRlcmlhbCB1c2VkIGJ5IGluZHVzdHJpZXMgc2hvdWxkIGJlIGNoZWFwIGFuZCBlYXN5IHRvIHRyYW5zcG9ydC4gICBJbmR1c3RyaWVzIGJhc2VkIG9uIGNoZWFwLCBidWxreSBhbmQgd2VpZ2h0LWxvc2luZyBtYXRlcmlhbCAob3JlcykgYXJlIGxvY2F0ZWQgY2xvc2UgdG8gdGhlIHNvdXJjZXMgb2YgcmF3ICAgbWF0ZXJpYWwgc3VjaCBhcyBzdGVlbCwgc3VnYXIsIGFuZCBjZW1lbnQgaW5kdXN0cmllcy4gUGVyaXNoYWJpbGl0eSBpcyBhIHZpdGFsIGZhY3RvciBmb3IgdGhlIGluZHVzdHJ5IHRvIGJlICAgbG9jYXRlZCBjbG9zZXIgdG8gdGhlIHNvdXJjZSBvZiB0aGUgcmF3IG1hdGVyaWFsLiBTb21lIG9mIHRoZSBpbmR1c3RyaWVzLCBsaWtlIHdhdGNoIGFuZCBlbGVjdHJvbmljcyAgIGluZHVzdHJpZXMgdXNlIHZlcnkgd2lkZSByYW5nZSBvZiBsaWdodCByYXcgbWF0ZXJpYWxzIGFuZCB0aGUgYXR0cmFjdGl2ZSBpbmZsdWVuY2Ugb2YgZWFjaCBzZXBhcmF0ZSBtYXRlcmlhbCAgIGRpbWluaXNoZXMuIFRoZSByZXN1bHQgaXMgdGhhdCBzdWNoIGluZHVzdHJpZXMgYXJlIG9mdGVuIGxvY2F0ZWQgd2l0aCBubyByZWZlcmVuY2UgdG8gcmF3IG1hdGVyaWFscy4gICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBTdXBwbHkgTGFib3VyIHN1cHBseSBpcyBhbiBpbXBvcnRhbnQgZmFjdG9yIGluIHRoZSBsb2NhdGlvbiBvZiBpbmR1c3RyaWVzLiBTb21lICAgdHlwZXMgb2YgbWFudWZhY3R1cmluZyBzdGlsbCByZXF1aXJlIHNraWxsZWQgbGFib3VyLiBJbmNyZWFzaW5nIG1lY2hhbmlzYXRpb24sIGF1dG9tYXRpb24gYW5kIGZsZXhpYmlsaXR5IG9mICAgaW5kdXN0cmlhbCBwcm9jZXNzZXMgaGF2ZSByZWR1Y2VkIHRoZSBkZXBlbmRlbmNlIG9mIGluZHVzdHJ5IHVwb24gdGhlIGxhYm91cnMuIENvbnN1bWVyIGdvb2RzIGFuZCAgIGFncm8tYmFzZWQgaW5kdXN0cmllcyBnZW5lcmFsbHkgcmVxdWlyZSBhIHBsZW50aWZ1bCBvZiBsYWJvdXIgc3VwcGx5LiAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogSW5kdXN0cmllcyB3aGljaCB1c2UgbW9yZSBwb3dlciBhcmUgbG9jYXRlZCBjbG9zZSB0byB0aGUgc291cmNlIG9mIHRoZSBlbmVyZ3kgICBzdXBwbHkgc3VjaCBhcyB0aGUgYWx1bWluaXVtIGluZHVzdHJ5LiBFYXJsaWVyIGNvYWwgd2FzIHRoZSBtYWluIHNvdXJjZSBvZiBlbmVyZ3ksIHRvZGF5IGh5ZHJvZWxlY3RyaWNpdHkgICBhbmQgcGV0cm9sZXVtIGFyZSBhbHNvIGltcG9ydGFudCBzb3VyY2VzIG9mIGVuZXJneSBmb3IgbWFueSBpbmR1c3RyaWVzIFNvdXJjZTogQ2hhcHRlciA2LnBtZCAgIChuY2VydC5uaWMuaW4pIDk5OTk4NTAzLnBkZiAoYW11LmFjLmluKSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following pairs:   Drought  Description   1. Meteorological  drought   Less than average  precipitation for a  prolonged time.  2. Agricultural  droughts   Low water available  for crop production   3. Hydrological  drought   Water in reservoirs fall  below a locally  significant threshold.  Which of the pairs given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB0ZXJtICdEcm91Z2h0JyBpbiBzaW1wbGUgd29yZHMgaXMgdGhlIGFic2VuY2Ugb2Ygd2F0ZXIgZm9yIGEgbG9uZyBwZXJpb2Qgb2YgdGltZSwgYXQgYSBwbGFjZSB3aGVyZSBpdCBpcyAgIGNvbnNpZGVyZWQgYWJub3JtYWwgYXMgY29tcGFyZWQgdG8gaXRzIHVzdWFsIGNvbmRpdGlvbnMuIFRoZXJlIGFyZSB0aHJlZSB0eXBlcyBvZiBkcm91Z2h0cyBrbm93biB0byB0aGUgICBzY2llbnRpZmljIGNvbW11bml0eTogICBQYWlyIDEgaXMgY29ycmVjdC4gTWV0ZW9yb2xvZ2ljYWwgZHJvdWdodCBvY2N1cnMgd2hlbiB0aGVyZSBpcyBhIHByb2xvbmdlZCB0aW1lIHdpdGggbGVzcyB0aGFuIGF2ZXJhZ2UgICBwcmVjaXBpdGF0aW9uLiBTdWNoIHR5cGUgb2YgZHJvdWdodHMgY2FuIGJlIHRyaWdnZXJlZCBieSBhIGhpZ2ggbGV2ZWwgb2YgcmVmbGVjdGVkIHN1bmxpZ2h0IGFuZCBhYm92ZS0gIGF2ZXJhZ2UgcHJldmFsZW5jZSBvZiBoaWdoLXByZXNzdXJlIHN5c3RlbXMsIHdpbmRzIGNhcnJ5aW5nIGNvbnRpbmVudGFsLCByYXRoZXIgdGhhbiBvY2VhbmljIGFpciBtYXNzZXMuICAgUGFpciAyIGlzIGNvcnJlY3QuIEFncmljdWx0dXJhbCBkcm91Z2h0cyBhZmZlY3QgY3JvcCBwcm9kdWN0aW9uIG9yIHRoZSBlY29sb2d5IG9mIHRoZSByYW5nZS4gVGhpcyBjb25kaXRpb24gICBjYW4gYWxzbyBhcmlzZSBpbmRlcGVuZGVudGx5IGZyb20gYW55IGNoYW5nZSBpbiBwcmVjaXBpdGF0aW9uIGxldmVscyB3aGVuIGVpdGhlciBpbmNyZWFzZWQgaXJyaWdhdGlvbiBvciAgIHNvaWwgY29uZGl0aW9ucyBhbmQgZXJvc2lvbiB0cmlnZ2VyZWQgYnkgcG9vcmx5IHBsYW5uZWQgYWdyaWN1bHR1cmFsIGFjdGl2aXRpZXMgY2F1c2UgYSBzaG9ydGZhbGwgaW4gd2F0ZXIgICBhdmFpbGFibGUgdG8gdGhlIGNyb3BzLiAgIFBhaXIgMyBpcyBjb3JyZWN0LiBIeWRyb2xvZ2ljYWwgZHJvdWdodCBpcyBicm91Z2h0IGFib3V0IHdoZW4gdGhlIHdhdGVyIHJlc2VydmVzIGF2YWlsYWJsZSBpbiBzb3VyY2VzIHN1Y2ggICBhcyBhcXVpZmVycywgbGFrZXMgYW5kIHJlc2Vydm9pcnMgZmFsbCBiZWxvdyBhIGxvY2FsbHkgc2lnbmlmaWNhbnQgdGhyZXNob2xkLiBIeWRyb2xvZ2ljYWwgZHJvdWdodCB0ZW5kcyB0byAgIHNob3cgdXAgbW9yZSBzbG93bHkgYmVjYXVzZSBpdCBpbnZvbHZlcyBzdG9yZWQgd2F0ZXIgdGhhdCBpcyB1c2VkIGJ1dCBub3QgcmVwbGVuaXNoZWQuIExpa2UgYW4gYWdyaWN1bHR1cmFsICAgZHJvdWdodCwgdGhpcyBjYW4gYmUgdHJpZ2dlcmVkIGJ5IG1vcmUgdGhhbiBqdXN0IGEgbG9zcyBvZiByYWluZmFsbC4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9uZXdzL2FsbGluZGlhLWRyb3VnaHQtMTIzNjkgICAgaHR0cHM6Ly9uZG1hLmdvdi5pbi9raWRzL2Ryb3VnaHQuaHRtbCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following reasons for  increasingly shifting of sugar mills towards  southern India:  1.  Tropical climate of southern India is suitable  for higher sucrose content.  2.  Hotter climate provides for long crushing  season.  3.  Large number of cooperatives in south  India.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN1Z2FyIGluZHVzdHJ5IGlzIGJyb2FkbHkgZGlzdHJpYnV0ZWQgb3ZlciB0d28gbWFqb3IgYXJlYXMgb2YgcHJvZHVjdGlvbi0gVXR0YXIgUHJhZGVzaCwgQmloYXIsIEhhcnlhbmEgICBhbmQgUHVuamFiIGluIHRoZSBub3J0aCBhbmQgTWFoYXJhc2h0cmEsIEthcm5hdGFrYSwgVGFtaWwgTmFkdSBhbmQgQW5kaHJhIFByYWRlc2ggaW4gdGhlIHNvdXRoLiBJbiAgIHJlY2VudCB5ZWFycywgdGhlIG1pbGxzIGhhdmUgc2hpZnRlZCB0byB0aGUgc291dGhlcm4gYW5kIHdlc3Rlcm4gc3RhdGVzLCBlc3BlY2lhbGx5IGluIE1haGFyYXNodHJhLiBUaGlzIGlzICAgYmVjYXVzZTogICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBTb3V0aCBJbmRpYSBoYXMgdHJvcGljYWwgY2xpbWF0ZSB3aGljaCBpcyBzdWl0YWJsZSBmb3IgaGlnaGVyIHN1Y3Jvc2UgY29udGVudCBnaXZpbmcgICBoaWdoZXIgeWllbGQgcGVyIHVuaXQgYXJlYSBhcyBjb21wYXJlZCB0byBub3J0aCBJbmRpYS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBjb29sZXIgY2xpbWF0ZSBpbiB0aGUgcmVnaW9uIChub3QgSG90dGVyIGNsaW1hdGUpIGFsc28gZW5zdXJlcyBhIGxvbmdlciAgIGNydXNoaW5nIHNlYXNvbi4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBTdWdhciBpbmR1c3RyeSB0aHJpdmVzIGlmIGl0IGlzIHJ1biBieSBjb29wZXJhdGl2ZXMuIFN1Y2ggY29vcGVyYXRpdmVzIGFyZSBwb3B1bGFyICAgYW5kIHN1Y2Nlc3NmdWwgaW4gdGhlIHNvdXRoZXJuIHN0YXRlcy4gICBTb3VyY2U6IEluZGlhIGEgY29tcHJlaGVuc2l2ZSBnZW9ncmFwaHkgYnkgRC5SLiBLaHVsbGFyIGNoYXB0ZXIgMjIgcGFnZSA3NzguICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 43,
      "question" : "Which of the following is/are the  characteristic (s) of the 'Footloose industries?  1.  They can only be set up near large markets.  2. They are always highly polluting industries.  3. Iron ore industry is a Footloose industry.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBBIEZvb3Rsb29zZSBpbmR1c3RyeSBpcyBhbiBpbmR1c3RyeSB0aGF0IGNhbiBiZSBwbGFjZWQgYW5kIGxvY2F0ZWQgYXQgYW55IGxvY2F0aW9uIHdpdGhvdXQgYmVpbmcgYWZmZWN0ZWQgICBieSBmYWN0b3JzIHN1Y2ggYXMgcmVzb3VyY2VzIG9yIHRyYW5zcG9ydC4gVGhlc2UgaW5kdXN0cmllcyBvZnRlbiBoYXZlIHNwYXRpYWxseSBmaXhlZCBjb3N0cywgd2hpY2ggbWVhbiAgIHRoYXQgdGhlIGNvc3RzIG9mIHRoZSBwcm9kdWN0cyBkbyBub3QgY2hhbmdlIHJlZ2FyZGxlc3Mgb2Ygd2hlcmUgdGhlIHByb2R1Y3QgaXMgYXNzZW1ibGVkLiBEaWFtb25kcyBhbmQgICBjb21wdXRlciBjaGlwcyBhcmUgc29tZSBleGFtcGxlcyBvZiBmb290bG9vc2UgaW5kdXN0cmllcy4gSW4gYSB0cmFkaXRpb25hbCBpbmR1c3RyeSwgY29zdHMgYXJlIHZhcmlhYmxlIGFuZCAgIGRlcGVuZCBvbiB0aGUgZGlzdGFuY2UgZnJvbSB0aGUgc291cmNlIG9mIHJhdyBtYXRlcmlhbCwgdHJhbnNwb3J0YXRpb24gbGluZXMsIGV0Yy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEZvb3Rsb29zZSBpbmR1c3RyaWVzIGNhbiBiZSBzZXQgdXAgbmVhciBvciBhd2F5IGZyb20gbGFyZ2UgbWFya2V0cy4gSXRzIHByb2R1Y3RzICAgY2FuIHJlYWNoIGEgd2lkZSB2YXJpZXR5IG9mIG1hcmtldHMgbm8gbWF0dGVyIHdoZXJlIHRoZXkgYXJlIGxvY2F0ZWQuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhleSBwcm9kdWNlIGluIHNtYWxsIHF1YW50aXRpZXMgYW5kIGFsc28gZW1wbG95IGEgc21hbGwgbGFib3VyIGZvcmNlLiBUaHVzLCB0aGV5ICAgYXJlIG5vdCByZXF1aXJlZCB0byBiZSBzZXQgdXAgYXQgYSBwYXJ0aWN1bGFyIGxvY2F0aW9uLiBUaGVzZSBhcmUgZ2VuZXJhbGx5IG5vbi1wb2xsdXRpbmcgaW5kdXN0cmllcy4gTm9uLSAgcG9sbHV0aW5nIGhlcmUgbWVhbnMgbWFqb3JseSBhaXIsIGxhbmQgYW5kIHdhdGVyIHBvbGx1dGlvbi4gU29tZSBmb290bG9vc2UgaW5kdXN0cmllcyBkbyBjYXVzZSBub2lzZSAgIHBvbGx1dGlvbiBhcyB3ZWxsIGFzIGdlbmVyYXRlIGUtd2FzdGUuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBJcm9uIG9yZSBpbmR1c3RyeSBpcyBub3QgYSBGb290bG9vc2UgaW5kdXN0cnkuIEluZHVzdHJpZXMgdGhhdCB1c2Ugd2VpZ2h0LWxvc2luZyAgIHJhdyBtYXRlcmlhbHMgYXJlIGxvY2F0ZWQgaW4gcmVnaW9ucyB3aGVyZSByYXcgbWF0ZXJpYWxzIGFyZSBsb2NhdGVkLiBQdWxwIGluZHVzdHJ5LCBjb3BwZXIgc21lbHRpbmcgYW5kICAgcGlnIGlyb24gaW5kdXN0cmllcyBhcmUgbG9jYXRlZCBuZWFyIHRoZWlyIHJhdyBtYXRlcmlhbHMnIHNvdXJjZS4gSW4gaXJvbiBhbmQgc3RlZWwgaW5kdXN0cmllcywgaXJvbiBvcmUgYW5kICAgY29hbCBhcmUgYm90aCB3ZWlnaHQtbG9zaW5nIHJhdyBtYXRlcmlhbHMuICAgS25vd2xlZGdlIEJhc2U6IEFsZnJlZCBXZWJlciBmb3JtdWxhdGVkIGEgdGhlb3J5IG9mIGluZHVzdHJpYWwgbG9jYXRpb24gaW4gd2hpY2ggYW4gaW5kdXN0cnkgaXMgbG9jYXRlZCAgIHdoZXJlIHRoZSB0cmFuc3BvcnRhdGlvbiBjb3N0cyBvZiByYXcgbWF0ZXJpYWxzIGFuZCBmaW5hbCBwcm9kdWN0IGlzIG1pbmltdW0uIEhlIHNpbmdsZWQgb3V0IHR3byBzcGVjaWFsICAgY2FzZXMuICAgSW4gb25lLCB0aGUgd2VpZ2h0IG9mIHRoZSBmaW5hbCBwcm9kdWN0IGlzIGxlc3MgdGhhbiB0aGUgd2VpZ2h0IG9mIHRoZSByYXcgbWF0ZXJpYWwgZ29pbmcgaW50byB0aGUgbWFraW5nIG9mICAgdGhlIHByb2R1Y3QuIFRoaXMgaXMga25vd24gYXMgd2VpZ2h0IGxvc2luZyBpbmR1c3RyeS4gICBJbiB0aGUgb3RoZXIsIHRoZSBmaW5hbCBwcm9kdWN0IGlzIGhlYXZpZXIgdGhhbiB0aGUgcmF3IG1hdGVyaWFsIHRoYXQgcmVxdWlyZXMgdHJhbnNwb3J0LiBVc3VhbGx5IHRoaXMgaXMgYSBjYXNlICAgb2Ygc29tZSB1YmlxdWl0b3VzIChhdmFpbGFibGUgZXZlcnl3aGVyZSkgcmF3IG1hdGVyaWFsIHN1Y2ggYXMgd2F0ZXIgYmVpbmcgaW5jb3Jwb3JhdGVkIGludG8gdGhlIHByb2R1Y3QuICAgVGhpcyBpcyBjYWxsZWQgdGhlIHdlaWdodC1nYWluaW5nIGluZHVzdHJ5IChCdWxrIGdhaW5pbmcgaW5kdXN0cnkpLiBFeGFtcGxlIC0gQmV2ZXJhZ2UgcHJvZHVjdGlvbiBvciBzb2RhICAgaW5kdXN0cnkgd2hlcmUgZW1wdHkgcGxhc3RpYyBib3R0bGVzIGFyZSBmaWxsZWQgd2l0aCBzb2RhIGFuZCBoZW5jZSBiZWNvbWUgd2VpZ2h0IGdhaW5pbmcuICAgU291cmNlOiBJbmRpYSBwZW9wbGUgYW5kIGVjb25vbXkgdGV4dGJvb2sgZm9yIGNsYXNzIFhJSTsgdW5pdCAzLWNoYXB0ZXIgOCBtYW51ZmFjdHVyaW5nIGluZHVzdHJpZXM7IHBhZ2UgICA4Ny4gICAgRnVuZGFtZW50YWxzIG9mIEh1bWFuIEdlb2dyYXBoeSBUZXh0Ym9vayBmb3IgQ2xhc3MgWElJOyB1bml0IDMtY2hhcHRlciA2IFNlY29uZGFyeSBBY3Rpdml0aWVzOyBwYWdlIDQ3ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "None   "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to the 'jute', consider the  following statements:  1.  India is the largest exporter of jute.  2.  Jute does not generate any toxic gases when  burnt.  3.  It grows well in tropical lowland regions  with humidity ranging from 60% to 90%.  4.  More than 90 per cent of the world jute is  grown in India and Bangladesh.  Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW5kaWEgaXMgdGhlIGxhcmdlc3QgcHJvZHVjZXIgb2YgcmF3IGp1dGUgYW5kIGp1dGUgZ29vZHMgYW5kIGlzIHNlY29uZCBsYXJnZXN0ICAgZXhwb3J0ZXIgYWZ0ZXIgQmFuZ2xhZGVzaC4gTW9zdCBvZiB0aGUgbWlsbHMgYXJlIGxvY2F0ZWQgaW4gV2VzdCBCZW5nYWwsIG1haW5seSBhbG9uZyB0aGUgYmFua3Mgb2YgdGhlICAgSHVnbGkgUml2ZXIsIGluIGEgbmFycm93IGJlbHQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEp1dGUgZmlicmUgaXMgMTAwJSBiaW8tZGVncmFkYWJsZSBhbmQgcmVjeWNsYWJsZSBhbmQgdGh1cyBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkuICAgQ3VsdGl2YXRpbmcganV0ZSBpbiBjcm9wIHJvdGF0aW9ucyBlbnJpY2hlcyB0aGUgZmVydGlsaXR5IG9mIHRoZSBzb2lsIGZvciB0aGUgbmV4dCBjcm9wLiBKdXRlIGFsc28gZG9lcyBub3QgICBnZW5lcmF0ZSB0b3hpYyBnYXNlcyB3aGVuIGJ1cm50LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEp1dGUgaXMgYW4gYW5udWFsIGNyb3AgdGFraW5nIGFib3V0IDEyMCBkYXlzIChBcHJpbC9NYXktSnVseS9BdWd1c3QpIHRvIGdyb3cuIEl0ICAgdGhyaXZlcyBpbiB0cm9waWNhbCBsb3dsYW5kIGFyZWFzIHdpdGggaHVtaWRpdHkgb2YgNjAlIHRvIDkwJS4gSnV0ZSBpcyBhIHJhaW4tZmVkIGNyb3Agd2l0aCBsaXR0bGUgbmVlZCBmb3IgICBmZXJ0aWxpemVyIG9yIHBlc3RpY2lkZXMuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gSnV0ZSBpcyBhIHByb2R1Y3Qgb2YgU291dGggQXNpYSBhbmQgc3BlY2lmaWNhbGx5IGEgcHJvZHVjdCBvZiBJbmRpYSBhbmQgQmFuZ2xhZGVzaC4gICBBYm91dCA5NSUgb2Ygd29ybGQganV0ZSBpcyBncm93biBpbiB0aGVzZSB0d28gc291dGggQXNpYW4gY291bnRyaWVzLiBOZXBhbCBhbmQgTXlhbm1hciBhbHNvIHByb2R1Y2UgICBhIHNtYWxsIGFtb3VudCBvZiBqdXRlLiBQYWtpc3RhbiwgYWx0aG91Z2ggaXQgZG9lcyBub3QgcHJvZHVjZSBtdWNoLCBpbXBvcnRzIGEgc3Vic3RhbnRpYWwgYW1vdW50IG9mIHJhdyAgIGp1dGUsIG1haW5seSBmcm9tIEJhbmdsYWRlc2gsIGZvciBwcm9jZXNzaW5nLiAgIFNvdXJjZTogIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2plc3MxMDYucGRmICAgaHR0cHM6Ly93d3cuZmFvLm9yZy9lY29ub21pYy9mdXR1cmVmaWJyZXMvZmlicmVzL2p1dGUvZW4vICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2 and 4 only   "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements with  reference to the ground water utilization in  India:   1.  More than 90 percent of groundwater in  India is used for irrigation.  2. The ground water utilization is lowest in  Tamil Nadu.  3. The new guidelines by Jal shakti ministry  prohibits new industry and mining projects  in over-exploited zones.  Which of the statements given above is/ are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEluZGlhIGlzIHRoZSBsYXJnZXN0IHVzZXIgb2YgZ3JvdW5kd2F0ZXIgaW4gdGhlIHdvcmxkLCBleHRyYWN0aW5nIGdyb3VuZHdhdGVyIHRvICAgdGhlIHR1bmUgb2YgMjUzIGJpbGxpb24gY3ViaWMgbWV0ZXIgKGJjbSkgcGVyIHllYXIuIEluZGlhIGlzIG1vcmUgZGVwZW5kZW50IG9uIHdhdGVyIHB1bXBlZCBmcm9tIGFxdWlmZXJzICAgdGhhbiBhbnkgb3RoZXIgbmF0aW9uLCBpdCBhY2NvdW50cyBmb3IgYWJvdXQgYSBxdWFydGVyIG9mIGdsb2JhbCBkZW1hbmQgZm9yIGdyb3VuZHdhdGVyLCBhY2NvcmRpbmcgdG8gdGhlICAgd29ybGQgYmFuaywgTW9yZSB0aGFuIDkwIHBlcmNlbnQgb2YgZ3JvdW5kd2F0ZXIgaW4gSW5kaWEgaXMgdXNlZCBmb3IgaXJyaWdhdGVkIGFncmljdWx0dXJlLiBUaGUgICByZW1haW5kZXIgMjQgYmlsbGlvbiBjdWJpYyBtZXRlcnMgc3VwcGxpZXMgODUgcGVyY2VudCBvZiB0aGUgY291bnRyeSdzIGRyaW5raW5nIHdhdGVyLiBSb3VnaGx5IDgwJSBvZiAgIEluZGlhJ3MgMS4zNSBiaWxsaW9uIHJlc2lkZW50cyBkZXBlbmQgb24gZ3JvdW5kd2F0ZXIgZm9yIGJvdGggZHJpbmtpbmcgYW5kIGlycmlnYXRpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgY2VudHJhbCBncm91bmQgd2F0ZXIgYXV0aG9yaXR5IHJlcG9ydCBzaG93ZWQgdGhhdCBncm91bmQgd2F0ZXIgdXRpbGl6YXRpb24gICBpcyB2ZXJ5IGhpZ2ggaW4gc3RhdGVzIG9mIFB1bmphYiwgSGFyeWFuYSwgUmFqYXN0aGFuIGFuZCBUYW1pbCBOYWR1LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJlY2VudGx5IGd1aWRlbGluZXMgd2VyZSBub3RpZmllZCBieSB0aGUgQ2VudHJhbCBHcm91bmQgV2F0ZXIgQXV0aG9yaXR5ICB1bmRlciAgIHRoZSBKYWwgc2hha3RpIG1pbmlzdHJ5LiAgIEl0IGhhcyBpc3N1ZWQgZ3VpZGVsaW5lcyB0byB0aGUgaW5kdXN0cmllcy4gVGhlIG5ldyBndWlkZWxpbmVzIHByb2hpYml0IG5ldyBpbmR1c3RyeSBhbmQgbWluaW5nIHByb2plY3RzICAgaW4gb3Zlci1leHBsb2l0ZWQgem9uZXMgYW5kIG1ha2VzIGl0IG1hbmRhdG9yeSBmb3IgZXhpc3RpbmcgaW5kdXN0cmllcywgY29tbWVyY2lhbCB1bml0cyBhbmQgYmlnICAgaG91c2luZyBzb2NpZXRpZXMgdG8gdGFrZSBubyBvYmplY3Rpb24gY2VydGlmaWNhdGUgKE5PQykuICAgIEtub3dsZWRnZSBCYXNlOiBvdGhlciBndWlkZWxpbmVzIGJ5IEphbCBzaGFrdGkgbWluaXN0cnk6ICAgIDEpIEV4ZW1wdGlvbjogVGhlIGRvbWVzdGljIGNvbnN1bWVycywgcnVyYWwgZHJpbmtpbmcgd2F0ZXIgc2NoZW1lcywgYXJtZWQgZm9yY2VzLCBmYXJtZXJzIGFuZCAgIG1pY3JvICYgc21hbGwgZW50ZXJwcmlzZXMgKHRoYXQgd2l0aGRyYXcgdXAgdG8gMTAgbTMgd2F0ZXIgcGVyIGRheSkgYXJlIGV4ZW1wdGVkIGZyb20gdGhlICAgcmVxdWlyZW1lbnQgb2YgYSBubyBvYmplY3Rpb24gY2VydGlmaWNhdGUgZnJvbSB0aGUgQ0dXQi4gICAyKSBUaGUgZ3VpZGVsaW5lcyBoYXZlIGFsc28gZW5jb3VyYWdlZCB0aGUgdXNlIG9mIHJlY3ljbGVkIGFuZCB0cmVhdGVkIHNld2FnZSB3YXRlciBieSBpbmR1c3RyaWVzLCAgIG1lbnRpb25lZCBhIHByb3Zpc2lvbiBvZiBhY3Rpb24gYWdhaW5zdCBwb2xsdXRpbmcgaW5kdXN0cmllcyBhbmQgbWFuZGF0ZWQgdGhlIHJlcXVpcmVtZW50IG9mIGRpZ2l0YWwgICBmbG93IG1ldGVycywgcGllem9tZXRlcnMgYW5kIGRpZ2l0YWwgd2F0ZXIgbGV2ZWwgcmVjb3JkZXJzICAgMykgY29tcGVuc2F0aW9uOiBUaGUgZ3VpZGVsaW5lcyBub3RpZmllZCBieSB0aGUgQ0dXQiB1bmRlciBqYWwgc2hha3RpIG1pbmlzdHJ5ICBwcmVzY3JpYmVzIGEgbWluaW11bSAgIGVudmlyb25tZW50YWwgY29tcGVuc2F0aW9uIG9mIFJzLjEgbGFraCBvbiBpbmR1c3RyaWFsLCBtaW5pbmcgYW5kIGluZnJhc3RydWN0dXJlIHVzZXJzIGZvciBleHRyYWN0aW5nICAgZ3JvdW5kd2F0ZXIgd2l0aG91dCBhIG5vIG9iamVjdGlvbiBjZXJ0aWZpY2F0ZSAoTk9DKS4gVGhpcyBjYW4gcmlzZSwgZGVwZW5kaW5nIG9uIHRoZSBxdWFudHVtIG9mIHdhdGVyICAgZXh0cmFjdGVkIGFuZCB0aGUgZHVyYXRpb24gb2YgdGhlIGJyZWFjaC4gICA0KSBBYnN0cmFjdGlvbiBjaGFyZ2VzOiBBbGwgcmVzaWRlbnRpYWwgYXBhcnRtZW50cy8gZ3JvdXAgaG91c2luZyBzb2NpZXRpZXMvIEdvdmVybm1lbnQgd2F0ZXIgICBzdXBwbHkgYWdlbmNpZXMgaW4gdXJiYW4gYXJlYXMgd291bGQgYmUgcmVxdWlyZWQgdG8gcGF5IGdyb3VuZCB3YXRlciBhYnN0cmFjdGlvbiBjaGFyZ2VzLiAgIFNvdXJjZTpodHRwczovL3d3dy5saXZlbWludC5jb20vbmV3cy9pbmRpYS9jZW50cmUtaXNzdWVzLWZyZXNoLWd1aWRlbGluZXMtb24tZ3JvdW5kd2F0ZXItdXNlLSAgMTE2MDEwMjYxMTQ3NzMuaHRtbCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "none of the above    "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the United Nations'  Human Development Index, which of the  following dimension index(s) contribute  towards making Human Development Index  (HDI)?  1. Life expectancy  2. Education  3. Intensity of poverty  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEh1bWFuIERldmVsb3BtZW50IFJlcG9ydCAoSERSKSByZWxlYXNlZCBieSB0aGUgVW5pdGVkIE5hdGlvbnMgRGV2ZWxvcG1lbnQgUHJvZ3JhbW1lIChVTkRQKS4gSW5kaWEgICBkcm9wcGVkIHR3byByYW5rcyBpbiB0aGUgVW5pdGVkIE5hdGlvbnMnIEh1bWFuIERldmVsb3BtZW50IEluZGV4IDIwMjAsIHN0YW5kaW5nIGF0IDEzMSBvdXQgb2YgMTg5ICAgY291bnRyaWVzLiAgIFRoZSBIREkgbWVhc3VyZXMgYXZlcmFnZSBhY2hpZXZlbWVudCBpbiB0aHJlZSBiYXNpYyBkaW1lbnNpb25zIG9mIGh1bWFuIGRldmVsb3BtZW50IC0gICAgMSkgbGlmZSBleHBlY3RhbmN5IChIZW5jZSwgb3B0aW9uIDEgY29ycmVjdCkgICAyKSBlZHVjYXRpb24gKEhlbmNlLCBvcHRpb24gMiBjb3JyZWN0KSAgIDMpIHBlciBjYXBpdGEgaW5jb21lLiAgICBIREkgZG9lcyBub3QgaW5jbHVkZSB0aGUgaW50ZW5zaXR5IG9mIHBvdmVydHkgcHJldmFsZW50IGluIGEgY291bnRyeSBhcyBhIGRpbWVuc2lvbiBpbmRleCBpbiBpdHMgICBjYWxjdWxhdGlvbiBvZiBIREkgaW5kZXguIChIZW5jZSwgb3B0aW9uIDMgaXMgaW5jb3JyZWN0KSAgIEtub3dsZWRnZSBCYXNlOiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgMSkgSERJIGlzIGNhbGN1bGF0ZWQgdGFraW5nIGludG8gY29uc2lkZXJhdGlvbiBwZXJmb3JtYW5jZSBvZiBjb3VudHJpZXMgb24gZm91ciBicm9hZCBwYXJhbWV0ZXJzIC0gbGlmZSAgIGV4cGVjdGFuY3kgYXQgYmlydGggKHRvdGFsIHBvcHVsYXRpb24pOyBleHBlY3RlZCB5ZWFycyBvZiBzY2hvb2xpbmcgKEFnZXMgNSB0byAyNCk7IG1lYW4geWVhcnMgb2YgICBzY2hvb2xpbmcgKEFnZXMgMjUgYW5kIGFib3ZlKTsgYW5kIHBlciBjYXBpdGEgZ3Jvc3MgbmF0aW9uYWwgaW5jb21lIChQUFApLiAgIDIpIFRoZSBIREkgYXNzaWducyBlcXVhbCB3ZWlnaHQgdG8gYWxsIHRocmVlLWRpbWVuc2lvbiBpbmRpY2VzOyB0aGUgdHdvIGVkdWNhdGlvbiBzdWItaW5kaWNlcyBhcmUgYWxzbyAgIHdlaWdodGVkIGVxdWFsbHkuICAgICAzKSBGb3IgdGhlIGZpcnN0IHRpbWUsIHRoZSBVbml0ZWQgTmF0aW9ucyBEZXZlbG9wbWVudCBQcm9ncmFtbWUgaW50cm9kdWNlZCBhIG5ldyBtZXRyaWMgdG8gcmVmbGVjdCB0aGUgICBpbXBhY3QgY2F1c2VkIGJ5IGVhY2ggY291bnRyeSdzIHBlci1jYXBpdGEgY2FyYm9uIGVtaXNzaW9ucyBhbmQgaXRzIG1hdGVyaWFsIGZvb3RwcmludCwgd2hpY2ggbWVhc3VyZXMgICB0aGUgYW1vdW50IG9mIGZvc3NpbCBmdWVscywgbWV0YWxzIGFuZCBvdGhlciByZXNvdXJjZXMgdXNlZCB0byBtYWtlIHRoZSBnb29kcyBhbmQgc2VydmljZXMgaXQgY29uc3VtZXMuICAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVneTIwMy5wZGYgICBodHRwczovL2hkci51bmRwLm9yZy9kYXRhLWNlbnRlci9odW1hbi1kZXZlbG9wbWVudC1pbmRleCMvaW5kaWNpZXMvSERJICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following are the challenges  to irrigation in India?  1. Poor irrigation efficiency.  2. Depletion of water table.  3. Uneven rainfall distribution.  4. There is a huge and increasing gap between  created and utilized irrigation potential.  5. There are frequent droughts and ground  water overuse.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgT3B0aW9uIDEgaXMgY29ycmVjdC4gQXMgcGVyIHRoZSBSZXBvcnQgb2YgdGhlIFRhc2sgRm9yY2Ugb24gSXJyaWdhdGlvbiAoMjAwOSkgY29uc3RpdHV0ZWQgYnkgdGhlIHRoZW4gICBQbGFubmluZyBDb21taXNzaW9uLCBmb3IgYSBncm9zcyBpcnJpZ2F0ZWQgYXJlYSBvZiBhYm91dCA5MSBtaGEsIHRoZSB3YXRlciB1c2UgaXMgNjM0IEJDTSwgd2hpY2ggZ2l2ZXMgYSAgIGRlbHRhIG9mIDAuNjggbSBwZXIgaGEgb2YgZ3Jvc3MgaXJyaWdhdGVkIGFyZWEuIFRoZSBhdmVyYWdlIGFubnVhbCByYWluZmFsbCBpcyAxMTcwIG1tICgxLjE3bSkuIFRha2luZyA3MCBwZXIgICBjZW50IG9mIHRoZSByYWluZmFsbCBhcyBlZmZlY3RpdmUgZm9yIGNyb3AgY29uc3VtcHRpdmUgdXNlLCB0aGUgZ3Jvc3Mgd2F0ZXIgdXNlIGlzIGFib3V0IDEuNDUgbSAoNC44IGZlZXQpIHBlciAgIGhhIG9mIHRoZSBncm9zcyBpcnJpZ2F0ZWQgYXJlYS4gVGhpcyBpcyB2ZXJ5IGhpZ2ggY29tcGFyZWQgdG8gd2F0ZXIgdXNlIGluIGlycmlnYXRpb24gc3lzdGVtcyBpbiBkZXZlbG9wZWQgICBjb3VudHJpZXMsIHN1Y2ggYXMgdGhlIFVTQSwgd2hlcmUgd2F0ZXIgYWxsb2NhdGlvbiBpcyBhYm91dCA5MCBjbS4gVGhpcyBvdmVydXNlIGluIHRoZSBjb3VudHJ5IHJlZmxlY3RzICAgbG93IGlycmlnYXRpb24gZWZmaWNpZW5jeS4gICBPcHRpb24gMiBpcyBjb3JyZWN0LiBUaGUgZGVtYW5kIGZvciB3YXRlciBmb3IgdmFyaW91cyBwdXJwb3NlcyBpcyBpbmNyZWFzaW5nIGR1ZSB0byBwb3B1bGF0aW9uIGdyb3d0aCwgICB1cmJhbml6YXRpb24gYW5kIGluZHVzdHJpYWxpemF0aW9uLiBQcmVzZW50bHksIHRoZSBhZ3JpY3VsdHVyZSBzZWN0b3IgaXMgdXNpbmcgYWJvdXQgODMgcGVyIGNlbnQgb2YgYXZhaWxhYmxlICAgd2F0ZXIgcmVzb3VyY2VzLCBidXQgZGVtYW5kIGZyb20gb3RoZXIgc2VjdG9ycyBtYXkgcmVkdWNlIGF2YWlsYWJpbGl0eSBmb3IgYWdyaWN1bHR1cmFsIHVzZSB0byA2OCBwZXIgY2VudCAgIGJ5IDIwNTAuICAgT3B0aW9uIDMgaXMgY29ycmVjdC4gVGhlcmUgaXMgYSBodWdlIHRlbXBvcmFsIGFuZCBzcGF0aWFsIHZhcmlhdGlvbiBpbiByYWluZmFsbCBhbmQgd2F0ZXIgYXZhaWxhYmlsaXR5IGluIHRoZSAgIGNvdW50cnkuIFdoaWxlIGF2ZXJhZ2UgYW5udWFsIHJhaW5mYWxsIGlzIDExNzBtbSwgc29tZSBwYXJ0cyBvZiBub3J0aGVhc3QgZ2V0IGFyb3VuZCAxMDAwMCBtbSBwZXIgeWVhciwgICB3aGlsZSBwYXJ0cyBvZiB3ZXN0ZXJuIFJhamFzdGhhbiBnZXQgb25seSAxMDAgbW0uICAgT3B0aW9uIDQgaXMgY29ycmVjdC4gVGhlcmUgaGFzIGJlZW4gYSBsYXJnZSBnYXAgaW4gdXRpbGl6YXRpb24gb2YgY3JlYXRlZCBwb3RlbnRpYWwuIEF0IHRoZSBlbmQgb2YgdGhlIGVsZXZlbnRoICAgcGxhbiwgdG90YWwgdXRpbGl6YXRpb24gb2YgaXJyaWdhdGlvbiBwb3RlbnRpYWwgd2FzIHRvIHRoZSBleHRlbnQgb2YgODcuNjYgbWlsbGlvbiBoZWN0YXJlcyBhcyBhZ2FpbnN0IHRoZSB0b3RhbCAgIGNyZWF0ZWQgcG90ZW50aWFsIG9mIDExMy41MyBtaWxsaW9uIGhlY3RhcmVzIHNob3dpbmcgYSBnYXAgb2YgMjUuNjcgbWlsbGlvbiBoZWN0YXJlcy4gICBPcHRpb24gNSBpcyBjb3JyZWN0LiBUaGUgZnJlcXVlbmN5IG9mIG9jY3VycmVuY2Ugb2YgZHJhdWdodCB5ZWFycyBoYXMgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQgSW4gSW5kaWEuIFRoZSAgIHBlcmlvZCBiZXR3ZWVuIDE5NTAgdG8gMTk4OSBoYWQgMTAgZHJhdWdodCB5ZWFycyB3aGlsZSB0aGVyZSBoYXZlIGJlZW4gZml2ZSBkcmF1Z2h0cyBpbiB0aGUgbGFzdCAxNiB5ZWFycy4gICBBY2NvcmRpbmcgdG8gbWV0ZW9yb2xvZ2lzdHMnIGZyZXF1ZW5jeSBpcyBzZXQgdG8gaW5jcmVhc2UgZnJvbSAyMDIwIHRvIDIwNDkuIGluIEluZGlhIHRoZSBsYWNrIG9mIG1vbnNvb24gICByZXN1bHQgaW4gd2F0ZXIgc2hvcnRhZ2VzLCByZXN1bHRpbmcgaW4gYmVsb3cgY3JvcCB5aWVsZC4gICBTb3VyY2U6ICBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vbmV3cy9hZ3JpY3VsdHVyZS9ncm93aW5nLWdhcC1pbi1pcnJpZ2F0aW9uLXBvdGVudGlhbC1hbmQtICB1c2FnZS1tYWpvci1jaGFsbGVuZ2UtNjY1ODAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2, 3, 4 and 5 only  ",
        "option3" : "1, 2, 3 and 5 only   ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to Micro-irrigation,  consider the following statements:  1.  The more crops per drop programme  provide financial assistance for farmers  adopting the micro-irrigation systems.  2.  The share of irrigated land under micro- irrigation in the country is approximately 20  per cent of the total irrigated land.  3.  Bihar and West Bengal are among the States  that have the highest percent of micro  irrigated land  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEEgY29tcHJlaGVuc2l2ZSBmbGFnc2hpcCBwcm9ncmFtbWUgY2FsbGVkIFByYWRoYW4gTWFudHJpIEtyaXNoaSBTaW5jaGFpICAgWW9qYW5hIG9yICdtb3JlIGNyb3AgcGVyIGRyb3AnIGlzIGEgY2VudHJhbGx5IHNwb25zb3JlZCBwcm9ncmFtbWUgYmVpbmcgaW1wbGVtZW50ZWQgYnkgRGVwYXJ0bWVudCBvZiAgIEFncmljdWx0dXJlLCBDb29wZXJhdGlvbiAmIEZhcm1lcnMgV2VsZmFyZSAoREFDJkZXKSBmcm9tIDIwMTUtMTYgaW4gYWxsIHRoZSBTdGF0ZXMgb2YgdGhlIGNvdW50cnkuIFVuZGVyICAgdGhlIHByb2dyYW1tZSwgZmluYW5jaWFsIGFzc2lzdGFuY2Ugb2YgdXAgdG8gNTUgcGVyIGNlbnQgaXMgYXZhaWxhYmxlIGZvciBzbWFsbCBhbmQgbWFyZ2luYWwgZmFybWVycyBhbmQgICA0NSBwZXIgY2VudCBmb3Igb3RoZXIgZmFybWVycyBmb3IgYWRvcHRpb24gb2YgbWljcm8taXJyaWdhdGlvbiBzeXN0ZW1zLiBUaGUgZnVuZGluZyBwYXR0ZXJuIGJldHdlZW4gdGhlICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFVuaW9uIGdvdmVybm1lbnRzIGFuZCB0aGUgc3RhdGUgZ292ZXJubWVudCdzIHNoYXJlIHNpbmNlIE5vdmVtYmVyIDIwMTUgaGFzIGJlZW4gNjA6NDAgZm9yIGFsbCBzdGF0ZXMgICBleGNlcHQgdGhlIE5vcnRoIEVhc3QgYW5kIHRoZSBIaW1hbGF5YW4gc3RhdGVzLCBmb3Igd2hpY2ggdGhlIGZ1bmRpbmcgcGF0dGVybiBpcyA5MDoxMC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHRvdGFsIGFyZWEgb2YgNTMuNzMgbGFraCBoZWN0YXJlcyBjb3ZlcmVkIHVuZGVyIHRoZSBQZXIgRHJvcCBNb3JlIENyb3AgICBjb21wb25lbnQgb2YgUHJhZGhhbiBNYW50cmkgS3Jpc2hpIFNpbmNoYXllZSBZb2phbmEgKFBNS1NZLVBETUMpIHNjaGVtZSwgZHJpcCBpcnJpZ2F0aW9uIGNvdmVyZWQgICAyOC4yMyBsYWtoIGhlY3RhcmVzIGFuZCBzcHJpbmtsZXIgaXJyaWdhdGlvbiBjb3ZlcmVkIDI1LjUwIGxha2ggaGVjdGFyZXMgdGhyb3VnaCBQTUtTWS1QRE1DIGZyb20gICAyMDE1LTE2IHRvIE1hcmNoIDIwMjEuIFRoZSBzY2hlbWUgaXMgdml0YWwgZm9yIEluZGlhbiBhZ3JpY3VsdHVyZSBjb25zaWRlcmluZyB0aGF0IDI3IFN0YXRlcyAoaW5jbHVkaW5nIFVUcykgICBoYXZlIGxlc3MgdGhhbiAzMCBwZXIgY2VudCBtaWNyby1pcnJpZ2F0aW9uIHN5c3RlbSBvdXQgb2Ygd2hpY2ggMjMgaGF2ZSBsZXNzIHRoYW4gMTUgcGVyIGNlbnQgbWljcm8tICBpcnJpZ2F0aW9uLiBEYXRhIGZyb20gdGhlIE1pbmlzdHJ5IG9mIEFncmljdWx0dXJlIGFuZCBGYXJtZXJzIFdlbGZhcmUgc2hvdyB0aGF0IHRoZSBuZXQgaXJyaWdhdGVkIGFyZWEgaW4gICB0aGUgY291bnRyeSBpcyA2OCw2NDkgdGhvdXNhbmQgaGVjdGFyZXMuIFRoZSBhZ3JpY3VsdHVyYWwgbGFuZCBjb3ZlcmVkIHVuZGVyIG1pY3JvLWlycmlnYXRpb24gaXMgMTIsOTA4LjQ0ICAgdGhvdXNhbmQgaGVjdGFyZXMuIFRoaXMgbWVhbnMgdGhhdCBvdXQgb2YgdG90YWwgaXJyaWdhdGVkIGxhbmQgaW4gdGhlIGNvdW50cnkgb25seSAxOSBwZXIgY2VudCBpcyB1bmRlciAgIG1pY3JvLWlycmlnYXRpb24uICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBJbnRlcmVzdGluZ2x5IFV0dGFyIFByYWRlc2gsIHRoZSBsYXJnZXN0IHN1Z2FyY2FuZSBncm93ZXIsIGhhcyBvbmx5IDEuNSBwZXIgY2VudCAgIHdoaWxlIFB1bmphYiwgdGhlIG1ham9yIHdoZWF0IGdyb3dlciwgaGFzIDEuMiBwZXIgY2VudCBsYW5kIHVuZGVyIG1pY3JvLWlycmlnYXRpb24uIEJpaGFyIGFuZCBXZXN0IEJlbmdhbCAgIGFyZSBhbW9uZyB0aGUgU3RhdGVzIHRoYXQgaGF2ZSBsZXNzIHRoYW4gNSBwZXIgY2VudCBtaWNybyBpcnJpZ2F0ZWQgbGFuZC4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmRvd250b2VhcnRoLm9yZy5pbi9ibG9nL2FncmljdWx0dXJlL21pY3JvLWlycmlnYXRpb24tdGhlLXdheS1haGVhZC1mb3ItICBzdXN0YWluYWJsZS1hZ3JpY3VsdHVyZS03MzE1MyAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1YnVzaW5lc3NsaW5lLmNvbS9kYXRhLXN0b3JpZXMvZGF0YS1mb2N1cy9zdGF0ZXMtbGVhZGluZy1pbi1taWNyby1pcnJpZ2F0aW9uLSAgcmVhcC1iZW5lZml0cy1mcm9tLW5ldy1zY2hlbWUvYXJ0aWNsZTM1MjE5NzY1LmVjZSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only  ",
        "option3" : " 1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements with  reference to human population:  1.  Agricultural density is the ratio between the  agricultural population and the total  cultivated area.  2.  Physiological Density is the ratio between  total population & the total area.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBxdWFudGl0YXRpdmUgYXNwZWN0IG9mIHRoZSBwb3B1bGF0aW9uIG9mIGFuIGFyZWEgaXMgcmVmbGVjdGVkIGJ5IHBvcHVsYXRpb24gZGVuc2l0eS4gSXQgZXhwcmVzc2VzIHRoZSAgIG51bWJlciBvZiBwZW9wbGUgcmVzaWRpbmcgcGVyIHVuaXQgb2YgYXJlYSBvZiBsYW5kIGZvciBhIHBhcnRpY3VsYXIgcmVnaW9uLiBIb3dldmVyLCBpdCBkb2VzIG5vdCBhbHdheXMgcmV2ZWFsICAgYSB0cnVlIHBpY3R1cmUgLSBlc3BlY2lhbGx5IGZvciBsYXJnZSBjb3VudHJpZXMgd2l0aCBwaHlzaW9ncmFwaGljICYgZWNvbm9taWMgdmFyaWF0aW9ucy4gRGVuc2l0eSBpcyBhIGNydWRlICAgbWVhc3VyZSBvZiBodW1hbiBhbmQgbGFuZCByZWxhdGlvbnNoaXBzLiAgIFRoZSBwaHlzaW9sb2dpY2FsIGFuZCB0aGUgYWdyaWN1bHR1cmFsIGRlbnNpdGllcyBwcm92aWRlIGEgYmV0dGVyIGluc2lnaHQgaW50byB0aGUgaHVtYW4tbGFuZCByYXRpbyBpbiB0ZXJtcyAgIG9mIHByZXNzdXJlIG9mIHBvcHVsYXRpb24gb24gdG90YWwgY3VsdGl2YWJsZSBsYW5kLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFncmljdWx0dXJhbCBkZW5zaXR5IGlzIHRoZSByYXRpbyBiZXR3ZWVuIG9ubHkgdGhlIGFncmljdWx0dXJhbCBwb3B1bGF0aW9uIGFuZCB0aGUgICB0b3RhbCBjdWx0aXZhdGVkIGFyZWEuIFRoZSBhZ3JpY3VsdHVyYWwgcG9wdWxhdGlvbiBpbmNsdWRlcyBjdWx0aXZhdG9ycyBhbmQgYWdyaWN1bHR1cmFsIGxhYm91cmVycyBhbmQgdGhlaXIgICBmYW1pbHkgbWVtYmVycy4gVGhlcmVmb3JlLCB0aGUgYWdyaWN1bHR1cmFsIGRlbnNpdHkgaXMgZXhwcmVzc2VkIGluIHRlcm1zIG9mIGFncmljdWx0dXJhbCBwb3B1bGF0aW9uIHBlciAgIHVuaXQgb2YgY3VsdGl2YXRlZCBhcmVhLiBJdCBoYXMgcHJvdmVkIHRvIGJlIGEgdXNlZnVsIGluZGV4IG9mIG1hbi0gbGFuZCByZWxhdGlvbnNoaXAgaW4gcHJpbWFyaWx5IGFuIGFncmFyaWFuICAgY29udGV4dC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFBoeXNpb2xvZ2ljYWwgZGVuc2l0eSByZWZlcnMgdG8gdGhlIHRvdGFsIHBvcHVsYXRpb24gZGl2aWRlZCBieSB0aGUgbmV0IGN1bHRpdmF0ZWQgICBhcmVhLiBJdHMgbWVhc3VyZSBpcyBoZWxwZnVsIHdoaWxlIHN0dWR5aW5nIHBvcHVsYXRpb24gcHJlc3N1cmUgYW5kIG92ZXJjcm93ZGluZy4gQSBoaWdoZXIgcGh5c2lvbG9naWNhbCAgIGRlbnNpdHkgc3VnZ2VzdHMgdGhhdCB0aGUgYXZhaWxhYmxlIGFncmljdWx0dXJhbCBsYW5kIGlzIGJlaW5nIHVzZWQgYnkgbW9yZSBhbmQgbWF5IHJlYWNoIGl0cyBvdXRwdXQgbGltaXQgICBzb29uZXIgdGhhbiBhIGNvdW50cnkgdGhhdCBoYXMgbG93ZXIgcGh5c2lvbG9naWNhbCBkZW5zaXR5LiBFZ3lwdCBpcyBhIG5vdGFibGUgZXhhbXBsZSBvZiBwaHlzaW9sb2dpY2FsICAgZGVuc2l0eSByZWFjaGluZyB0aGF0IG9mIEJhbmdsYWRlc2ggZGVzcGl0ZSBtdWNoIGRlc2VydC4gICAgQXJpdGhtZXRpYyBEZW5zaXR5IG9mIHBvcHVsYXRpb24gaXMgdGhlIHJhdGlvIGJldHdlZW4gdGhlIHRvdGFsIG51bWJlciBvZiBwZW9wbGUgYW5kIHRoZSB0b3RhbCBhcmVhIG9mIHRoZSAgIGxhbmQuICAgU291cmNlOiBOQ0VSVCBHZW9ncmFwaHkgY2xhc3MgMTIgSW5kaWE6IFBlb3BsZSBhbmQgRWNvbm9teSBDaGFwdGVyIDE6IFBvcHVsYXRpb24gICBodHRwczovL2NpZXQubmljLmluL21vb2NzcGRmL0dlb2dyYXBoeSUyMDA0L2xlZ3lfMjAxMDFfZS10ZXh0LnBkZiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:  1.  The deposits of Uranium in India are  primarily associated with Gondwana type of  rocks.  2.  The richest monazite deposits occur in  Palakkad and Kollam districts of Kerala.  3.  Most of the uranium and thorium deposits  established in India falls under the category  of high grade.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE51Y2xlYXIgZW5lcmd5IGhhcyBlbWVyZ2VkIGFzIGEgdmlhYmxlIHNvdXJjZSBpbiByZWNlbnQgdGltZXMuIEltcG9ydGFudCBtaW5lcmFscyB1c2VkIGZvciB0aGUgZ2VuZXJhdGlvbiAgIG9mIG51Y2xlYXIgZW5lcmd5IGFyZSB1cmFuaXVtIGFuZCB0aG9yaXVtLiBUaGUgRGVwYXJ0bWVudCBvZiBBdG9taWMgRW5lcmd5IChEQUUpIG9mIHRoZSBHb3Zlcm5tZW50ICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIG9mIEluZGlhIChHT0kpIHdhcyBlc3RhYmxpc2hlZCBpbiBBdWd1c3QgMTk1NC4gSXQgaXMgZW5nYWdlZCBpbiByZXNlYXJjaCwgdGVjaG5vbG9neSBkZXZlbG9wbWVudCBhbmQgICBjb21tZXJjaWFsIG9wZXJhdGlvbnMgaW4gdGhlIGFyZWFzIG9mIE51Y2xlYXIgRW5lcmd5LCByZWxhdGVkIEhpZ2ggVGVjaG5vbG9naWVzIGFuZCBzdXBwb3J0cyBiYXNpYyAgIHJlc2VhcmNoIGluIG51Y2xlYXIgc2NpZW5jZSBhbmQgZW5naW5lZXJpbmcuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBVcmFuaXVtIGRlcG9zaXRzIG9jY3VyIGluIHRoZSBEaGFyd2FyIHJvY2tzLiBHZW9ncmFwaGljYWxseSwgdXJhbml1bSBvcmVzIGFyZSAgIGtub3duIHRvIG9jY3VyIGluIHNldmVyYWwgbG9jYXRpb25zIGFsb25nIHRoZSBTaW5nYmh1bSBDb3BwZXIgYmVsdC4gSXQgaXMgYWxzbyBmb3VuZCBpbiBVZGFpcHVyLCBBbHdhciBhbmQgICBKaHVuamh1bnUgZGlzdHJpY3RzIG9mIFJhamFzdGhhbiwgRHVyZyBkaXN0cmljdCBvZiBDaGhhdHRpc2dhcmgsIEJoYW5kYXJhIGRpc3RyaWN0IG9mIE1haGFyYXNodHJhIGFuZCBLdWxsdSAgIGRpc3RyaWN0IG9mIEhpbWFjaGFsIFByYWRlc2guICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQWNjb3JkaW5nIHRvIHRoZSBBdG9taWMgTWluZXJhbHMgRGlyZWN0b3JhdGUgZm9yIEV4cGxvcmF0aW9uIGFuZCBSZXNlYXJjaCAoQU1EKSwgICBhIGNvbnN0aXR1ZW50IFVuaXQgb2YgdGhlIERlcGFydG1lbnQgb2YgQXRvbWljIEVuZXJneSAoREFFKSwgSW5kaWEgaGFzIDEwLjcwIG1pbGxpb24gdG9ubmVzIG9mICAgTW9uYXppdGUgd2hpY2ggY29udGFpbnMgOSw2MywwMDAgdG9ubmVzIG9mIFRob3JpdW0gT3hpZGUgKFRoTzIpLiBUaG9yaXVtIGlzIG1haW5seSBvYnRhaW5lZCBmcm9tICAgbW9uYXppdGUgYW5kIGlsbWVuaXRlIGluIHRoZSBiZWFjaCBzYW5kcyBhbG9uZyB0aGUgY29hc3Qgb2YgS2VyYWxhIGFuZCBUYW1pbCBOYWR1LiBUaGUgd29ybGQncyByaWNoZXN0ICAgbW9uYXppdGUgZGVwb3NpdHMgb2NjdXIgaW4gUGFsYWtrYWQgYW5kIEtvbGxhbSBkaXN0cmljdHMgb2YgS2VyYWxhLCBuZWFyIFZpc2hha2hhcGF0bmFtIGluIEFuZGhyYSAgIFByYWRlc2ggYW5kIE1haGFuYWRpIFJpdmVyIGRlbHRhIGluIE9kaXNoYS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IE1vc3Qgb2YgdGhlIHVyYW5pdW0gZGVwb3NpdHMgZXN0YWJsaXNoZWQgaW4gSW5kaWEgc28gZmFyIGZhbGxzIHVuZGVyIHRoZSBjYXRlZ29yeSAgIG9mIGxvdyBncmFkZS4gVGhlc2UgbG93LWdyYWRlIHVyYW5pdW0gZGVwb3NpdHMgYXJlIGRpc3RyaWJ1dGVkIG1haW5seSBpbiBTaW5naGJodW0gU2hlYXIgWm9uZSwgICBKaGFya2hhbmQgYW5kIGluIHBhcnRzIG9mIENoaGF0dGlzZ2FyaC4gICAgU291cmNlOiBDaGFwdGVyLTcucG1kIChuY2VydC5uaWMuaW4pIExvdyBncmFkZSB1cmFuaXVtIGRlcG9zaXRzIG9mIEluZGlhIC0gYSBiYW5lIG9yIGJvb24gLSBTY2llbmNlRGlyZWN0ICAgSW5kaWEgMjAxOSAoaWFlYS5vcmcpICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
