{
  "testId" : "forum-2023-prelims-preparatory-18",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-18.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to the 'Inversion of temperature':   1.  In the inversion of temperature, a layer of  cool air lies on top of a layer of warm air.   2.  Clear sky is one of the ideal conditions for  the temperature inversion to occur.   3.  Temperature inversion can lead to the  reduction of visibility.  Which of the statements given above are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFVuZGVyIG5vcm1hbCBjb25kaXRpb25zLCB0ZW1wZXJhdHVyZSB1c3VhbGx5IGRlY3JlYXNlcyB3aXRoIGluY3JlYXNlIGluIGFsdGl0dWRlIGluIHRoZSB0cm9wb3NwaGVyZSBhdCAgIGEgcmF0ZSBvZiAxIGRlZ3JlZSBmb3IgZXZlcnkgMTY1IG1ldGVycy4gVGhpcyBpcyBjYWxsZWQgbm9ybWFsIGxhcHNlIHJhdGUuIEJ1dCBvbiBzb21lIG9jY2FzaW9ucywgdGhlICAgc2l0dWF0aW9ucyBnZXQgcmV2ZXJzZWQgYW5kIHRlbXBlcmF0dXJlIHN0YXJ0cyBpbmNyZWFzaW5nIHdpdGggaGVpZ2h0IHJhdGhlciB0aGFuIGRlY3JlYXNpbmcuIFRoaXMgaXMgICBjYWxsZWQgdGVtcGVyYXR1cmUgaW52ZXJzaW9uLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFVzdWFsbHksIHRlbXBlcmF0dXJlIHVzdWFsbHkgZGVjcmVhc2VzIHdpdGggaGVpZ2h0LiBTbyB3ZSBmaW5kIGNvbGQgYWlyIGFib3ZlICAgd2FybSBhaXIuIEhvd2V2ZXIsIGluIHRoZSBpbnZlcnNpb24gb2YgdGVtcGVyYXR1cmUsIGEgbGF5ZXIgb2Ygd2FybSBhaXIgKG5vdCBjb29sKSBsaWUgb24gdG9wIG9mIGEgbGF5ZXIgb2YgICBjb29sIGFpciAobm90IHdhcm0pLiBUZW1wZXJhdHVyZSBpbnZlcnNpb24gaXMgdXN1YWxseSBvZiBzaG9ydCBkdXJhdGlvbi4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQ2xvdWRsZXNzIGFuZCBjbGVhciBza3kgaXMgYW1vbmcgdGhlIGlkZWFsIGNvbmRpdGlvbnMgZm9yIHRoZSBpbnZlcnNpb24gb2YgICB0ZW1wZXJhdHVyZS4gQ2xlYXIgc2tpZXMgYWxsb3cgdW5vYnN0cnVjdGVkIGVzY2FwZSBvZiByYWRpYXRpb24uIE90aGVyIGlkZWFsIGNvbmRpdGlvbnMgaW5jbHVkZSBsb25nICAgd2ludGVyIG5pZ2h0cywgZHJ5IGFpciBuZWFyIHRoZSBncm91bmQgc3VyZmFjZSwgc2xvdyBtb3ZlbWVudCBvZiB0aGUgYWlyLCBhbmQgc25vdy1jb3ZlcmVkIGdyb3VuZCAgIHN1cmZhY2UuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEludmVyc2lvbiBvZiB0ZW1wZXJhdHVyZSBjYW4gcGxheSBhbiBpbXBvcnRhbnQgcm9sZSBpbiBkZXRlcm1pbmluZyBjbG91ZCBmb3JtcywgICBwcmVjaXBpdGF0aW9uLCBhbmQgdmlzaWJpbGl0eS4gVmlzaWJpbGl0eSBtYXkgYmUgZ3JlYXRseSByZWR1Y2VkIGJlbG93IHRoZSBpbnZlcnNpb24gZHVlIHRvIHRoZSAgIGFjY3VtdWxhdGlvbiBvZiBkdXN0IGFuZCBzbW9rZSBwYXJ0aWNsZXMuIEJlY2F1c2UgYWlyIG5lYXIgdGhlIGJhc2Ugb2YgYW4gaW52ZXJzaW9uIHRlbmRzIHRvIGJlIGNvb2wsIGZvZyAgIGlzIGZyZXF1ZW50bHkgcHJlc2VudCB0aGVyZS4gICAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4vbmNlcnRzL2wva2VneTIwOS5wZGYgICAgIENlcnRpZmljYXRlIFBoeXNpY2FsIGFuZCBIdW1hbiBHZW9ncmFwaHkgYnkgRyBDIExlb25nIENoYXB0ZXItMTQgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only    ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements with  reference to the variation of pressure on earth:   1.  In the lower atmosphere, Vertical pressure  increases rapidly with height.   2.  The horizontal variation of pressure is due  to non-uniform heating of the earth's  surface.   3.  The horizontal distribution of pressure can  be studied by drawing isobars.  Which of the statements given above are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFpciBleHBhbmRzIHdoZW4gaGVhdGVkIGFuZCBnZXRzIGNvbXByZXNzZWQgd2hlbiBjb29sZWQuIFRoaXMgcmVzdWx0cyBpbiB2YXJpYXRpb25zIGluIHRoZSBhdG1vc3BoZXJpYyAgIHByZXNzdXJlLiBUaGUgZGlmZmVyZW5jZXMgaW4gYXRtb3NwaGVyaWMgcHJlc3N1cmUgY2F1c2VzIHRoZSBtb3ZlbWVudCBvZiBhaXIgZnJvbSBoaWdoIHByZXNzdXJlIHRvIGxvdyAgIHByZXNzdXJlLCBzZXR0aW5nIHRoZSBhaXIgaW4gbW90aW9uLiBBdG1vc3BoZXJpYyBwcmVzc3VyZSBhbHNvIGRldGVybWluZXMgd2hlbiB0aGUgYWlyIHdpbGwgcmlzZSBvciBzaW5rLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEluIHRoZSBsb3dlciBhdG1vc3BoZXJlIHRoZSBwcmVzc3VyZSBkZWNyZWFzZXMgKG5vdCBpbmNyZWFzZXMpIHJhcGlkbHkgd2l0aCAgIGhlaWdodC4gVGhlIGRlY3JlYXNlIGluIHByZXNzdXJlIHdpdGggYWx0aXR1ZGUsIGhvd2V2ZXIsIGlzIG5vdCBjb25zdGFudC4gU2luY2UgdGhlIGZhY3RvcnMgY29udHJvbGxpbmcgYWlyICAgZGVuc2l0eSAtIHRlbXBlcmF0dXJlLCBhbW91bnQgb2Ygd2F0ZXIgdmFwb3IgYW5kIGdyYXZpdHkgYXJlIHZhcmlhYmxlLCB0aGVyZSBpcyBubyBzaW1wbGUgcmVsYXRpb25zaGlwICAgYmV0d2VlbiBhbHRpdHVkZSBhbmQgcHJlc3N1cmUuICAgIFN0YXRlbWVudCAyIGFuZCAzIGFyZSBjb3JyZWN0OiBBdG1vc3BoZXJpYyBwcmVzc3VyZSBpcyBub3QgdW5pZm9ybSBldmVyeXdoZXJlLiBUaGUgYWlyIG92ZXIgdGhlIGVhcnRoJ3MgICBzdXJmYWNlIHVuZGVyZ29lcyB2YXJpZXR5IG9mIHByZXNzdXJlIGNoYW5nZXMgZHVlIHRvIG5vbi11bmlmb3JtIGhlYXRpbmcgb2YgdGhlIGVhcnRoJ3Mgc3VyZmFjZS4gVGhlICAgaG9yaXpvbnRhbCBwcmVzc3VyZSBmaWVsZCBpcyBhbmFseXplZCBieSBkcmF3aW5nIGxpbmVzIG9mIGVxdWFsIHByZXNzdXJlIHZhbHVlcyBvbiBhIG1hcCwgd2hpY2ggYXJlIGNhbGxlZCAgIElzb2JhcnMuIEhvcml6b250YWwgZGlzdHJpYnV0aW9uIG9mIHByZXNzdXJlIGlzIHN0dWRpZWQgYnkgZHJhd2luZyBpc29iYXJzIGF0IGNvbnN0YW50IGxldmVscy4gSXNvYmFycyBhcmUgICBsaW5lcyBjb25uZWN0aW5nIHBsYWNlcyBoYXZpbmcgZXF1YWwgcHJlc3N1cmUuIEluIG9yZGVyIHRvIGVsaW1pbmF0ZSB0aGUgZWZmZWN0IG9mIGFsdGl0dWRlIG9uIHByZXNzdXJlLCBpdCBpcyAgIG1lYXN1cmVkIGF0IGFueSBzdGF0aW9uIGFmdGVyIGJlaW5nIHJlZHVjZWQgdG8gc2VhIGxldmVsIGZvciBwdXJwb3NlcyBvZiBjb21wYXJpc29uLiAgICBTb3VyY2U6ICBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjEwLnBkZiAgICAgaHR0cDovL2Vjb3Vyc2Vzb25saW5lLmlhc3JpLnJlcy5pbi9tb2QvcGFnZS92aWV3LnBocD9pZD04NDQzNCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following pairs:   Atmospheric  Layer  Feature  1. Troposphere Contains the largest  percentage of the  mass of  the total atmosphere.   2. Stratosphere The coldest temperatures  in Earth's atmosphere  occurs in this layer.  3. Mesosphere Transitional zone between  Earth's atmosphere and  interplanetary space.  Which of the pair(s) given above is /are  correctly matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBhdG1vc3BoZXJlIGNhbiBiZSBkaXZpZGVkIGludG8gbGF5ZXJzIGJhc2VkIG9uIGl0cyB0ZW1wZXJhdHVyZSwgYXMgc2hvd24gaW4gdGhlIGZpZ3VyZSBiZWxvdy4gVGhlc2UgICBsYXllcnMgYXJlIHRoZSB0cm9wb3NwaGVyZSwgdGhlIHN0cmF0b3NwaGVyZSwgdGhlIG1lc29zcGhlcmUgYW5kIHRoZSB0aGVybW9zcGhlcmUuIEEgZnVydGhlciByZWdpb24sICAgYmVnaW5uaW5nIGFib3V0IDUwMCBrbSBhYm92ZSB0aGUgRWFydGgncyBzdXJmYWNlLCBpcyBjYWxsZWQgdGhlIGV4b3NwaGVyZS4gICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFBhaXIgMSBpcyBjb3JyZWN0LiBUaGUgdHJvcG9zcGhlcmUgaXMgdGhlIGF0bW9zcGhlcmljIGxheWVyIGNsb3Nlc3QgdG8gdGhlIHBsYW5ldCBhbmQgY29udGFpbnMgdGhlIGxhcmdlc3QgICBwZXJjZW50YWdlIChhcm91bmQgODAlKSBvZiB0aGUgbWFzcyBvZiB0aGUgdG90YWwgYXRtb3NwaGVyZS4gVGVtcGVyYXR1cmUgYW5kIHdhdGVyIHZhcG9yIGNvbnRlbnQgaW4gICB0aGUgdHJvcG9zcGhlcmUgZGVjcmVhc2UgcmFwaWRseSB3aXRoIGFsdGl0dWRlLiBUaGUgdHJvcG9zcGhlcmUgY29udGFpbnMgOTkgJSBvZiB0aGUgd2F0ZXIgdmFwb3IgaW4gdGhlICAgYXRtb3NwaGVyZS4gV2F0ZXIgdmFwb3IgY29uY2VudHJhdGlvbnMgdmFyeSB3aXRoIGxhdGl0dWRlLiBUaGV5IGFyZSBncmVhdGVzdCBhYm92ZSB0aGUgdHJvcGljcywgd2hlcmUgICB0aGV5IG1heSBiZSBhcyBoaWdoIGFzIDMgJSwgYW5kIGRlY3JlYXNlIHRvd2FyZCB0aGUgcG9sYXIgcmVnaW9ucy4gICAgICAgICBQYWlyIDIgaXMgaW5jb3JyZWN0LiBUaGUgbWVzb3NwaGVyZSBhIGxheWVyIGV4dGVuZGluZyBmcm9tIGFwcHJveGltYXRlbHkgMzAgdG8gNTAgbWlsZXMgKDUwIHRvIDg1IGttKSAgIGFib3ZlIHRoZSBzdXJmYWNlLCBpcyBjaGFyYWN0ZXJpemVkIGJ5IGRlY3JlYXNpbmcgdGVtcGVyYXR1cmVzLiBUaGUgY29sZGVzdCB0ZW1wZXJhdHVyZXMgaW4gRWFydGgncyAgIGF0bW9zcGhlcmUgb2NjdXIgYXQgdGhlIHRvcCBvZiB0aGlzIGxheWVyLCB0aGUgbWVzb3BhdXNlLCBlc3BlY2lhbGx5IGluIHRoZSBzdW1tZXIgbmVhciB0aGUgcG9sZS4gICAgUGFpciAzIGlzIGluY29ycmVjdC4gVGhlIGV4b3NwaGVyZSBpcyB0aGUgbW9zdCBkaXN0YW50IGF0bW9zcGhlcmljIHJlZ2lvbiBmcm9tIEVhcnRoJ3Mgc3VyZmFjZS4gSW4gdGhlICAgZXhvc3BoZXJlLCBhbiB1cHdhcmQgdHJhdmVsbGluZyBtb2xlY3VsZSBjYW4gZXNjYXBlIHRvIHNwYWNlIChpZiBpdCBpcyBtb3ZpbmcgZmFzdCBlbm91Z2gpIG9yIGJlIHB1bGxlZCBiYWNrICAgdG8gRWFydGggYnkgZ3Jhdml0eSAoaWYgaXQgaXNuJ3QpIHdpdGggbGl0dGxlIHByb2JhYmlsaXR5IG9mIGNvbGxpZGluZyB3aXRoIGFub3RoZXIgbW9sZWN1bGUuIFRoZSBhbHRpdHVkZSBvZiBpdHMgICBsb3dlciBib3VuZGFyeSwga25vd24gYXMgdGhlIHRoZXJtb3BhdXNlIG9yIGV4b2Jhc2UsIHJhbmdlcyBmcm9tIGFib3V0IDE1MCB0byAzMDAgbWlsZXMgKDI1MC01MDAga20pICAgZGVwZW5kaW5nIG9uIHNvbGFyIGFjdGl2aXR5LiBUaGUgZXhvc3BoZXJlIGlzIGEgdHJhbnNpdGlvbmFsIHpvbmUgYmV0d2VlbiBFYXJ0aCdzIGF0bW9zcGhlcmUgYW5kICAgaW50ZXJwbGFuZXRhcnkgc3BhY2UuICAgIFNvdXJjZTogaHR0cHM6Ly9uaXdhLmNvLm56L2VkdWNhdGlvbi1hbmQtICB0cmFpbmluZy9zY2hvb2xzL3N0dWRlbnRzL2xheWVycyM6fjp0ZXh0PVRoZSUyMGF0bW9zcGhlcmUlMjBpcyUyMGNvbXByaXNlZCUyMG9mLHN1cmZhY2UlMjBpcyAgJTIwY2FsbGVkJTIwdGhlJTIwZXhvc3BoZXJlLiAgICAgIGh0dHBzOi8vd3d3LmFsYmFueS5lZHUvZmFjdWx0eS9yZ2svYXRtMTAxL3N0cnVjdHVyLmh0bSAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 3 only     "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the Human settlements,  the term administrative town refers to?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IGEgaXMgaW5jb3JyZWN0OiBUcmFkaW5nIGFuZCBDb21tZXJjaWFsIFRvd25zIHJlZmVycyB0byB0aGUgQWdyaWN1bHR1cmFsIG1hcmtldCB0b3ducywgc3VjaCAgIGFzLCBXaW5uaXBlZyBhbmQgS2Fuc2FzIGNpdHk7IGJhbmtpbmcgYW5kIGZpbmFuY2lhbCBjZW50cmVzIGxpa2UgRnJhbmtmdXJ0IGFuZCBBbXN0ZXJkYW07IGxhcmdlIGlubGFuZCAgIGNlbnRyZXMgbGlrZSBNYW5jaGVzdGVyIGFuZCBTdCBMb3VpczsgYW5kIHRyYW5zcG9ydCBub2RlcyBzdWNoIGFzLCBMYWhvcmUsIEJhZ2hkYWQgYW5kIEFncmEgaGF2ZSBiZWVuICAgaW1wb3J0YW50IHRyYWRpbmcgY2VudHJlcy4gICAgU3RhdGVtZW50IGIgaXMgaW5jb3JyZWN0OiBQbGFjZXMgb2YgcGlsZ3JpbWFnZSwgc3VjaCBhcyBKZXJ1c2FsZW0sIE1lY2NhLCBKYWdhbm5hdGggUHVyaSBhbmQgVmFyYW5hc2kgICBldGMuIGFyZSBjb25zaWRlcmVkIGN1bHR1cmFsIHRvd25zLiBUaGVzZSB1cmJhbiBjZW50cmVzIGFyZSBvZiBncmVhdCByZWxpZ2lvdXMgaW1wb3J0YW5jZS4gQWRkaXRpb25hbCAgIGZ1bmN0aW9ucyB3aGljaCB0aGUgY2l0aWVzIHBlcmZvcm0gYXJlIGhlYWx0aCBhbmQgcmVjcmVhdGlvbiAoTWlhbWkgYW5kIFBhbmFqaSksIGluZHVzdHJpYWwgKFBpdHRzYnVyZ2ggYW5kICAgSmFtc2hlZHB1ciksIG1pbmluZyBhbmQgcXVhcnJ5aW5nIChCcm9rZW4gSGlsbCBhbmQgRGhhbmJhZCkgYW5kIHRyYW5zcG9ydCAoU2luZ2Fwb3JlIGFuZCBNdWdoYWwgU2FyYWkpLiAgICBTdGF0ZW1lbnQgYyBpcyBjb3JyZWN0OiBOYXRpb25hbCBjYXBpdGFscywgd2hpY2ggaG91c2UgdGhlIGFkbWluaXN0cmF0aXZlIG9mZmljZXMgb2YgY2VudHJhbCBnb3Zlcm5tZW50cywgICBzdWNoIGFzIE5ldyBEZWxoaSwgQ2FuYmVycmEsIEJlaWppbmcsIEFkZGlzIEFiYWJhLCBXYXNoaW5ndG9uIEQuQy4sIGFuZCBMb25kb24gZXRjLiBhcmUgY2FsbGVkICAgYWRtaW5pc3RyYXRpdmUgdG93bnMuIFByb3ZpbmNpYWwgKHN1Yi1uYXRpb25hbCkgdG93bnMgY2FuIGFsc28gaGF2ZSBhZG1pbmlzdHJhdGl2ZSBmdW5jdGlvbnMsIGZvciBleGFtcGxlLCAgIFZpY3RvcmlhIChCcml0aXNoIENvbHVtYmlhKSwgQWxiYW55IChOZXcgWW9yayksIGFuZCBDaGVubmFpIChUYW1pbCBOYWR1KS4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MTEwLnBkZiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " These towns are of banking and financial   importance.   ",
        "option2" : " These urban centres are of great religious   importance.   ",
        "option3" : " These types of towns house the offices of   governments.   ",
        "option4" : " None of the above     "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements with  reference to the Tropical Cyclones:   1.  The wind movements in tropical cyclones  are clockwise in the northern hemisphere  and anti-clockwise in the southern  hemisphere.   2.  It requires large sea surface with  temperature higher than 27° C for its  formation.   3.  There is little or no precipitation in the eye  of the cyclone storm.  Which of the above given statements is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRyb3BpY2FsIGN5Y2xvbmVzIGFyZSB2aW9sZW50IHN0b3JtcyB0aGF0IG9yaWdpbmF0ZSBvdmVyIG9jZWFucyBpbiB0cm9waWNhbCBhcmVhcyBhbmQgbW92ZSBvdmVyIHRvIHRoZSAgIGNvYXN0YWwgYXJlYXMgYnJpbmdpbmcgYWJvdXQgbGFyZ2Utc2NhbGUgZGVzdHJ1Y3Rpb24gZHVlIHRvIHZpb2xlbnQgd2luZHMsIHZlcnkgaGVhdnkgcmFpbmZhbGwgYW5kIHN0b3JtICAgc3VyZ2UuICAgIFN0YXRlbWVudDEgaXMgaW5jb3JyZWN0OiBUaGUgY3ljbG9uaWMgd2luZCBtb3ZlbWVudHMgaW4gdGhlIHRyb3BpY2FsIGN5Y2xvbmUgYXJlIGFudGktY2xvY2t3aXNlIGluIHRoZSAgIG5vcnRoZXJuIGhlbWlzcGhlcmUgYW5kIGNsb2Nrd2lzZSBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZS4gVGhpcyBvY2N1cnMgZHVlIHRvIHRoZSBDb3Jpb2xpcyBGb3JjZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQ29uZGl0aW9ucyB0aGF0IGFyZSBmYXZvcmFibGUgZm9yIFRyb3BpY2FsIEN5Y2xvbmUgZm9ybWF0aW9uIGluY2x1ZGUsIGxhcmdlIHNlYSAgIHN1cmZhY2Ugd2l0aCB0ZW1wZXJhdHVyZSBoaWdoZXIgdGhhbiAyN8KwIEMsIHByZXNlbmNlIG9mIHRoZSBDb3Jpb2xpcyBmb3JjZSBlbm91Z2ggdG8gY3JlYXRlIGEgY3ljbG9uaWMgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgdm9ydGV4LCBzbWFsbCB2YXJpYXRpb25zIGluIHRoZSB2ZXJ0aWNhbCB3aW5kIHNwZWVkLCBwcmUtZXhpc3Rpbmcgd2VhayBsb3ctcHJlc3N1cmUgYXJlYSBhbmQgVXBwZXIgICBkaXZlcmdlbmNlIGFib3ZlIHRoZSBzZWEgbGV2ZWwgc3lzdGVtLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgJ2V5ZScgaXMgYSByb3VnaGx5IGNpcmN1bGFyIGFyZWEgb2YgY29tcGFyYXRpdmVseSBsaWdodCB3aW5kcyBhbmQgZmFpciB3ZWF0aGVyICAgZm91bmQgYXQgdGhlIGNlbnRlciBvZiBhIHNldmVyZSB0cm9waWNhbCBjeWNsb25lLiBUaGVyZSBpcyBsaXR0bGUgb3Igbm8gcHJlY2lwaXRhdGlvbiBhbmQgc29tZXRpbWVzIGJsdWUgc2t5ICAgb3Igc3RhcnMgY2FuIGJlIHNlZW4uIFRoZSBleWUgaXMgdGhlIHJlZ2lvbiBvZiBsb3dlc3Qgc3VyZmFjZSBwcmVzc3VyZSBhbmQgd2FybWVzdCB0ZW1wZXJhdHVyZXMgaW4gdGhlICAgdXBwZXIgbGV2ZWxzLiAgICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2dlc2MxMDgucGRmICAgICBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjEwLnBkZiAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 6,
      "question" : "Which among the following is correct  description of 'Geostrophic Winds'?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBJbiBhdG1vc3BoZXJpYyBzY2llbmNlLCBnZW9zdHJvcGhpYyB3aW5kIGlzIHRoZSB3aW5kIHRoYXQgd291bGQgcmVzdWx0IGZyb20gYW4gZXhhY3QgYmFsYW5jZSBiZXR3ZWVuICAgdGhlIENvcmlvbGlzIGZvcmNlIGFuZCB0aGUgcHJlc3N1cmUgZ3JhZGllbnQgZm9yY2UuIFRoaXMgY29uZGl0aW9uIGlzIGNhbGxlZCBnZW9zdHJvcGhpYyBlcXVpbGlicml1bSBvciAgIGdlb3N0cm9waGljIGJhbGFuY2UuIFRoZSBnZW9zdHJvcGhpYyB3aW5kIGlzIGRpcmVjdGVkIHBhcmFsbGVsIHRvIGlzb2JhcnMuIFRoaXMgYmFsYW5jZSBzZWxkb20gaG9sZHMgICBleGFjdGx5IGluIG5hdHVyZS4gVGhlIHRydWUgd2luZCBhbG1vc3QgYWx3YXlzIGRpZmZlcnMgZnJvbSB0aGUgZ2Vvc3Ryb3BoaWMgd2luZCBkdWUgdG8gb3RoZXIgZm9yY2VzIHN1Y2ggICBhcyBmcmljdGlvbiBmcm9tIHRoZSBncm91bmQuIFRodXMsIHRoZSBhY3R1YWwgd2luZCB3b3VsZCBlcXVhbCB0aGUgZ2Vvc3Ryb3BoaWMgd2luZCBvbmx5IGlmIHRoZXJlIHdlcmUgbm8gICBmcmljdGlvbiAoZS5nLiBhYm92ZSB0aGUgYXRtb3NwaGVyaWMgYm91bmRhcnkgbGF5ZXIpIGFuZCB0aGUgaXNvYmFycyB3ZXJlIHBlcmZlY3RseSBzdHJhaWdodC4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjEwLnBkZiAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " wind blowing parallel to the isobars, when   Coriolis force is balanced by the pressure   gradient force.    ",
        "option2" : " winds that circle around the earth with   poles as their centers   ",
        "option3" : " winds blowing from the subtropical high-  pressure belts towards sub-polar low-  pressure belts   ",
        "option4" : " Winds blowing perpendicular to the   isobars.    "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements with  reference to heatwave and urban heat islands:   1.  In India for hilly areas, whenever Maximum  temperature of a station reaches 30 o C, the  heatwave is declared.   2.  High rise buildings that offer more surface  area for heat absorption are one of the  causes of urban heat island effect.   3.  National Policy on Disaster Management,  2009 do not consider the heatwaves as  natural disaster.  Which of the above given statements is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBIGhlYXQgd2F2ZSBpcyBhIHBlcmlvZCBvZiBleGNlc3NpdmVseSBob3Qgd2VhdGhlci4gQW5kIGFuIHVyYmFuIGhlYXQgaXNsYW5kIGlzIGFuIHVyYmFuIG9yIGFuIGluZHVzdHJpYWwgICBhcmVhIHRoYXQgaGFzIHRlbXBlcmF0dXJlcyBjb25zaWRlcmFibHkgaGlnaGVyIHRoYW4gaXRzIHN1cnJvdW5kaW5nIHJ1cmFsIGFyZWFzIHByaW1hcmlseSBkdWUgdG8gICBhbnRocm9wb2dlbmljIHJlYXNvbnMuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEluZGlhbiBNZXRlb3JvbG9naWNhbCBEZXBhcnRtZW50IGhhcyBwcmVzY3JpYmVkIGNlcnRhaW4gY3JpdGVyaWEgZm9yIGRlY2xhcmluZyAgIGhlYXR3YXZlcy4gV2hlbmV2ZXIgbWF4aW11bSB0ZW1wZXJhdHVyZSBvZiBhIHN0YXRpb24gcmVhY2hlcyA0MCDCsEMgZm9yIHRoZSBwbGFpbnMsIDM3IMKwQyBmb3IgY29hc3RhbCAgIHN0YXRpb25zIGFuZCAzMCDCsEMgZm9yIGhpbGx5IGFyZWFzLCBhIGhlYXR3YXZlIGlzIGRlY2xhcmVkLiBXaGVuIGFjdHVhbCBtYXhpbXVtIHRlbXBlcmF0dXJlIHJlbWFpbnMgNDUgICDCsEMgb3IgbW9yZSByZWdhcmRsZXNzIG9mIG5vcm1hbCBtYXhpbXVtIHRlbXBlcmF0dXJlLCBoZWF0IHdhdmVzIHNob3VsZCBiZSBkZWNsYXJlZC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFsYmVkbyBvZiBhIHN1cmZhY2UgaXMgdGhlIHByb3BvcnRpb24gb2Ygc3VubGlnaHQgdGhhdCB0aGUgc3VyZmFjZSBjYW4gcmVmbGVjdCBiYWNrICAgaW50byBzcGFjZS4gRGFyayBhc3BoYWx0IHVzZWQgdG8gcm9hZCBjb25zdHJ1Y3Rpb24gYW5kIGluIHJvb2Zpbmcgb2YgYnVpbGRpbmdzIGhhcyB2ZXJ5IGxvdyBhbGJlZG8uIFNpbWlsYXJseSwgICBoaWdoIHJpc2UgYnVpbGRpbmdzIG9mZmVyIG1vcmUgc3VyZmFjZSBhcmVhIGZvciBoZWF0IGFic29ycHRpb24uIFRoaXMgYWxsIGxlYWQgdG8gaGVhdC10cmFwcGluZyBlZmZlY3QsICAgZ2l2aW5nIHJpc2UgdG8gdGhlIHBoZW5vbWVub24gb2YgVXJiYW4gSGVhdCBJc2xhbmQuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBOYXRpb25hbCBEaXNhc3RlciBNYW5hZ2VtZW50IEFjdCwgMjAwNSwgYW5kIHRoZSBOYXRpb25hbCBQb2xpY3kgb24gRGlzYXN0ZXIgICBNYW5hZ2VtZW50LCAyMDA5LCBkbyBub3QgY29uc2lkZXIgaGVhdHdhdmUgdG8gYmUgYSBuYXR1cmFsIGRpc2FzdGVyIChuYXR1cmFsIGNhbGFtaXR5KS4gSXQgaXMgbm90IG5vdGlmaWVkICAgaW4gdGhlIGxpc3Qgb2YgMTIgZGlzYXN0ZXJzIGVsaWdpYmxlIGZvciByZWxpZWYgdGhyb3VnaCBuYXRpb25hbCBvciBzdGF0ZSBkaXNhc3RlciByZWxpZWYgZnVuZHMuIEhvd2V2ZXIsIE5hdGlvbmFsICAgRGlzYXN0ZXIgTWFuYWdlbWVudCBBdXRob3JpdHkgaGFzIGd1aWRlbGluZXMgZm9yIHByZXBhcmluZyBhY3Rpb24gcGxhbnMgZm9yIGhlYXR3YXZlcy4gQXMgcGFydCBvZiBpdHMgICB3ZWF0aGVyIGZvcmVjYXN0aW5nIHByb3RvY29sLCB0aGUgSU1EIGhhcyBiZWVuIHByb3ZpZGluZyBhIHNlYXNvbmFsIHRlbXBlcmF0dXJlIGFuZCBoZWF0LXdhdmUgICBjb25kaXRpb25zIG91dGxvb2sgb3ZlciB0aGUgY291bnRyeSBhdCB0aGUgc3ViZGl2aXNpb24gbGV2ZWwgc2luY2UgMjAxNi4gICAgU291cmNlOiBodHRwczovL2ludGVybmFsLmltZC5nb3YuaW4vc2VjdGlvbi9uaGFjL2R5bmFtaWMvRkFRX2hlYXRfd2F2ZS5wZGYgICAgIGh0dHBzOi8vbmNlcnQubmljLmluL25jZXJ0cy9sL2xlZ3kxMTAucGRmICAgICBodHRwczovL3NkbWEua2VyYWxhLmdvdi5pbi9ub3RpZmllZC1kaXNhc3RlcnMvICAgICBodHRwczovL25kbWEuZ292LmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvUERGL25kbXAtMjAxOS5wZGYgICAgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvZXhwbGFpbmVkLXdoYXQtaXMtYS1ub3RpZmllZC1kaXNhc3Rlci1hbmQtaG93LWlzLXRoZS0gIHNkcmYtdXNlZC02MzE1NjQzLyAgICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3    ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3        "
      }
    },
    {
      "index" : 8,
      "question" : "  With reference to 'Weather systems',  which of the following is/are the factors  affecting the speed and direction of wind on  Earth?   1. Frictional force   2. Pressure Gradient Force   3. Coriolis force   4. Humidity   5. Gravitational force  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBEdWUgdG8gYXRtb3NwaGVyaWMgcHJlc3N1cmUsIHRoZSBhaXIgaXMgc2V0IGluIG1vdGlvbi4gVGhpcyBpcyBjYWxsZWQgV2luZC4gVGhpcyB3aW5kIGZsb3dzIGZyb20gYSBoaWdoLSAgcHJlc3N1cmUgYXJlYSB0byBsb3cgcHJlc3N1cmUgYXJlYS4gVGhlIGhvcml6b250YWwgd2luZHMgbmVhciB0aGUgZWFydGggc3VyZmFjZSByZXNwb25kIHRvIHRoZSBjb21iaW5lZCAgIGVmZmVjdCBvZiB0aHJlZSBmb3JjZXMgLSB0aGUgcHJlc3N1cmUgZ3JhZGllbnQgZm9yY2UsIHRoZSBmcmljdGlvbmFsIGZvcmNlIGFuZCB0aGUgQ29yaW9saXMgZm9yY2UuIEluIGFkZGl0aW9uLCAgIHRoZSBncmF2aXRhdGlvbmFsIGZvcmNlIGFjdHMgZG93bndhcmQuICAgIFBvaW50IDEsIDIsIDMsIGFuZCA1IGFyZSBjb3JyZWN0IGFuZCBwb2ludCA0IGlzIGluY29ycmVjdC4gICAgMSkgRnJpY3Rpb25hbCBGb3JjZS1UaGUgYWlyIGlzIGEgZmx1aWQsIHRoZSBhaXIgbW9sZWN1bGVzIHJ1YiBhY3Jvc3MgdGhlIHN1cmZhY2Ugb2YgdGhlIGVhcnRoIGFuZCB0aGUgb2JqZWN0ICAgb3ZlciBpdCBzdWNoIGFzIGhpbGxzLCB0cmVlcywgZXRjLiBUaGUgZnJpY3Rpb25hbCBmb3JjZSBpcyBncmVhdGVzdCBhdCB0aGUgc3VyZmFjZS4gVGhlIGZyaWN0aW9uYWwgZm9yY2UgaXMgICBtaW5pbWFsIGF0IHRoZSBzdXJmYWNlIG9mIHRoZSBzZWEuIFNpbXBseSwgdGhlIGZyaWN0aW9uIGlzIGdyZWF0ZXN0IG5lYXIgdGhlIGVhcnRoJ3Mgc3VyZmFjZSBhbmQgaXQgcmFwaWRseSAgIGRlY3JlYXNlcyB3aXRoIGFsdGl0dWRlIG9yIGhlaWdodC4gICAgMikgUHJlc3N1cmUgZ3JhZGllbnQgRm9yY2UtIFRoZSBkaWZmZXJlbmNlIGluIGFpciBwcmVzc3VyZSBhbmQgcHJlc3N1cmUgZ3JhZGllbnQgaXMgY2F1c2VkIGJlY2F1c2Ugb2YgdGhlICAgdW5lcXVhbCBoZWF0aW5nIG9mIHRoZSBlYXJ0aCdzIHN1cmZhY2UgYW5kIHRoZSBjb25jZW50cmF0aW9uIG9mIHRoZSBpbmNvbWluZyBzb2xhciByYWRpYXRpb24gYXQgdGhlICAgZXF1YXRvci4gQWxzbyBkdWUgdG8gdGhlIGVuZXJneSBzdXJwbHVzIGF0IGxvdyBsYXRpdHVkZS4gRXg6IEFpciBpcyB3YXJtIGF0IHRoZSBlcXVhdG9yIGFuZCBBaXIgaXMgY29sZCBhdCAgIHBvbGVzLiAgICAzKSBDb3Jpb2xpcyBGb3JjZS0gVGhlIGRpcmVjdGlvbmFsIG9mIHdpbmQgaXMgYWZmZWN0ZWQgYnkgdGhlIHJvdGF0aW9uIG9mIHRoZSBlYXJ0aCBhYm91dCBpcyB0aGUgYXhpcy4gVGhpcyAgIGZvcmNlIGR1ZSB0byB0aGUgcm90YXRpb24gb2YgdGhlIGVhcnRoIGlzIGtub3duIGFzIENvcmlvbGlzIGZvcmNlcy4gVGhlIENvcmlvbGlzIGZvcmNlcyBhcmUgZGlyZWN0bHkgICBwcm9wb3J0aW9uYWwgdG8gdGhlIGFuZ2xlIG9mIGxhdGl0dWRlIGFuZCBhcmUgbWF4aW11bSBhdCB0aGUgcG9sZXMgYW5kIGFyZSBhYnNlbnQgYXQgdGhlIGVxdWF0b3IuICAgIDQpIEdyYXZpdGF0aW9uYWwgRm9yY2U6IEl0IGFjdHMgb24gZXZlcnkgbWFzcyBwcmVzZW50IGluIGF0bW9zcGhlcmUgYW5kIGFjdHMgYWx3YXlzIGRvd253YXJkLiBBcyAgIGdyYXZpdHkgY29tcHJlc3NlcyB0aGUgRWFydGgncyBhdG1vc3BoZXJlLCBpdCBjcmVhdGVzIGFpciBwcmVzc3VyZS0gdGhlIGRyaXZpbmcgZm9yY2Ugb2Ygd2luZC4gV2l0aG91dCAgIGdyYXZpdHksIHRoZXJlIHdvdWxkIGJlIG5vIGF0bW9zcGhlcmUgb3IgYWlyIHByZXNzdXJlIGFuZCB0aHVzLCBubyB3aW5kLiAgICA1KSBIdW1pZGl0eTogSHVtaWRpdHkgZG9uJ3QgYWN0IGFzIGEgZHJpdmluZyBmb3JjZSBmb3IgY2lyY3VsYXRpb24gb2YgdGhlIHdpbmQgbm9yIGl0IGRpcmVjdHMgdGhlIGRpcmVjdGlvbiAgIG9mIHRoZSB3aW5kLiAgICBTb3VyY2U6IE5DRVJULCBDaC0xMCwgQXRtb3NwaGVyaWMsIENpcmN1bGF0aW9uIGFuZCBXZWF0aGVyIFN5c3RlbSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 3 and 5 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "3, 4 and 5 only   ",
        "option4" : "1, 2, 3 and 5 only   "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following local winds of the  world flows towards the northward directions?   1. Chinook   2. Sirocco   3. Mistral   4. Pampero  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBMb2NhbCB3aW5kcyBhcmUgY2F1c2VkIGJ5IHRoZSBkaWZmZXJlbmNlcyBpbiB0ZW1wZXJhdHVyZSBhbmQgcHJlc3N1cmUgbG9jYWxseS4gVGhleSBhcmUgZ2VuZXJhbGx5IHdhcm0gICBhbmQgY29sZCB3aW5kcy4gVGhlcmUgYXJlIG1hbnkgbG9jYWwgd2luZHMgYXJvdW5kIHRoZSBnbG9iZS4gICAgUG9pbnQgMiBhbmQgNCBhcmUgY29ycmVjdCAmIFBvaW50IDEgYW5kIDMgYXJlIGluY29ycmVjdC4gICAgMSkgQ2hpbm9vazogSXQgaXMgYSB3ZXQgYW5kIHdhcm0gd2luZCB0aGF0IG9yaWdpbmF0ZWQgaW4gY29hc3RhbCBhcmVhcyBvZiB0aGUgUGFjaWZpYyBPY2VhbiBhbmQgZmxvd3MgZnJvbSAgIHRoZSBzb3V0aHdlc3QgZGlyZWN0aW9uIHRvd2FyZHMgdGhlIFVTQS4gQ2hpbm9vaydzIGxpdGVyYWwgbWVhbmluZyBpcyAnc25vdyBlYXRlciwnIGFzIHRoZXkgYWlkIGluIHRoZSAgIG1lbHRpbmcgb2Ygc25vdy4gVGhleSBtYWludGFpbiB0aGUgZ3Jhc3NsYW5kcyBzbm93LWZyZWUuIEFzIGEgcmVzdWx0LCB0aGV5IGFyZSBleHRyZW1lbHkgYmVuZWZpY2lhbCB0byAgIHJhbmNoZXJzLiAgICAyKSBTaXJvY2NvOiBJdCBpcyBhIHdhcm0sIGh1bWlkIHdpbmQgb2NjdXJyaW5nIG92ZXIgdGhlIG5vcnRoZXJuIE1lZGl0ZXJyYW5lYW4gU2VhIGFuZCBzb3V0aGVybiBFdXJvcGUsICAgd2hlcmUgaXQgYmxvd3MgZnJvbSB0aGUgc291dGggb3Igc291dGhlYXN0IGFuZCBicmluZ3MgdW5jb21mb3J0YWJseSBodW1pZCBhaXIuIEl0IG9yaWdpbmF0ZXMgICBvdmVyIE5vcnRoIEFmcmljYSBhcyBhIGRyeSB3aW5kIGFuZCBwaWNrcyB1cCBtb2lzdHVyZSBhcyBpdCBtb3ZlcyBub3J0aHdhcmQgdG93YXJkcyB0aGUgICBNZWRpdGVycmFuZWFuLiAgICAzKSBNaXN0cmFsOiBJdCBpcyBhIGNvbGQgYW5kIGRyeSBzdHJvbmcgd2luZCBpbiBzb3V0aGVybiBGcmFuY2UgdGhhdCBibG93cyBkb3duIHRvIHNvdXRoIGZyb20gdGhlIG5vcnRoICAgYWxvbmcgdGhlIGxvd2VyIFJow7RuZSBSaXZlciB2YWxsZXkgdG93YXJkIHRoZSBNZWRpdGVycmFuZWFuIFNlYS4gSXQgaXMgc3Ryb25nZXN0IGFuZCBtb3N0IGZyZXF1ZW50IGluICAgd2ludGVyLCBhbmQgaXQgc29tZXRpbWVzIGNhdXNlcyBjb25zaWRlcmFibGUgZGFtYWdlIHRvIGNyb3BzLiAgICAgNCkgUGFtcGVybzogIEl0IGlzIGNvbGQgd2luZHMgb3JpZ2luYXRlZCBhbmQgZmxvdyBpbiBQYW1wYXMgZ3Jhc3NsYW5kIGluIEFyZ2VudGluYSwgU291dGggQW1lcmljYS4gSXQgICBzd2VlcHMgb3ZlciB0aGUgcGFtcGFzIGZyb20gdGhlIHdlc3Qgb3Igc291dGh3ZXN0IHRvd2FyZHMgbm9ydGh3YXJkIGRpcmVjdGlvbnMuIEluIHRoZSBzb3V0aGVybiAgIGhlbWlzcGhlcmUsIHRoZSBQYW1wZXJvIGlzIG1vc3QgZnJlcXVlbnQgaW4gdGhlIHdpbnRlciAocHJpbmNpcGFsbHkgYmV0d2VlbiBNYXkgYW5kIEF1Z3VzdCkuICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTb3VyY2U6IE5DRVJULCBDaC0xMCwgQXRtb3NwaGVyaWMsIENpcmN1bGF0aW9uIGFuZCBXZWF0aGVyIFN5c3RlbSBHIEMgTGVvbmcgICAgIG1pc3RyYWwgfCB3aW5kIHwgQnJpdGFubmljYSAgICBzaXJvY2NvIHwgd2luZCB8IEJyaXRhbm5pY2EgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1, 2 and 4 only    "
      }
    },
    {
      "index" : 10,
      "question" : "'This type of climate type occurs in  temperate zone, which lie between the tropics  and polar regions. There are semi-arid regions  with enough rain to support short grasses, but  not enough for tall grasses or trees to  grow. These regions have  been converted to cropland and pasture. The  major tribes in this climate types are Kirghiz,  Red Indians and Kalmuk.'   Which of the Climate Types is described in the  above given paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgU3RlcHBlIENsaW1hdGUgdHlwZSBvY2N1ciBpbiB0ZW1wZXJhdGUgY2xpbWF0ZXMsIHdoaWNoIGxpZSBiZXR3ZWVuIHRoZSB0cm9waWNzIGFuZCBwb2xhciByZWdpb25zLiAgIFRlbXBlcmF0ZSByZWdpb25zIGhhdmUgZGlzdGluY3Qgc2Vhc29uYWwgdGVtcGVyYXR1cmUgY2hhbmdlcywgd2l0aCBjb2xkIHdpbnRlcnMgYW5kIHdhcm0gc3VtbWVycy4gICAgMSkgU3RlcHBlcyBhcmUgc2VtaS1hcmlkLCBtZWFuaW5nIHRoZXkgcmVjZWl2ZSAyNSB0byA1MCBjZW50aW1ldGVycyBvZiByYWluIGVhY2ggeWVhci4gVGhpcyBpcyBlbm91Z2ggICByYWluIHRvIHN1cHBvcnQgc2hvcnQgZ3Jhc3NlcywgYnV0IG5vdCBlbm91Z2ggZm9yIHRhbGwgZ3Jhc3NlcyBvciB0cmVlcyB0byBncm93LiBNYW55IGtpbmRzIG9mIGdyYXNzZXMgICBncm93IG9uIHN0ZXBwZXMsIGJ1dCBmZXcgZ3JvdyB0YWxsZXIgdGhhbiBoYWxmIGEgbWV0ZXIgKDIwIGluY2hlcykuICAgIDIpIE1hbnkgb2YgdGhlIHdvcmxkJ3Mgc3RlcHBlcyBoYXZlIGJlZW4gY29udmVydGVkIHRvIGNyb3BsYW5kIGFuZCBwYXN0dXJlLiBTaG9ydCBncmFzc2VzIHRoYXQgZ3JvdyAgIG5hdHVyYWxseSBvbiBzdGVwcGVzIHByb3ZpZGUgZ3JhemluZyBmb3IgY2F0dGxlLCBnb2F0cywgaG9yc2VzLCBjYW1lbHMsIGFuZCBzaGVlcC4gU29tZXRpbWVzIHN0ZXBwZXMgYXJlICAgb3ZlcmdyYXplZCwgd2hpY2ggb2NjdXJzIHdoZW4gdGhlcmUgYXJlIG1vcmUgYW5pbWFscyB0aGFuIHRoZSBsYW5kIGNhbiBzdXBwb3J0LiAgICAzKSBUaGUgbWFqb3IgdHJpYmVzIG9mIHRoaXMgY2xpbWF0ZSB0eXBlIHJlZ2lvbiBpbmNsdWRlIEtpcmdoaXosIEthemFraHMsIEthbG11ayBpbiBBc2lhdGljIFN0ZXBwZXMsIFJlZCAgIEluZGlhbnMgaW4gTm9ydGggQW1lcmljYS4gICAgIERpc3RyaWJ1dGlvbiBvZiBTdGVwcGUgQ2xpbWF0ZSB0eXBlICAgICBTb3VyY2U6ICBHIEMgTGVvbmcsIENoIDIwLCBUaGUgVGVtcGVyYXRlIENvbnRpbmVudGFsIChzdGVwcGUgY2xpbWF0ZSkgICAgUmVzb3VyY2UgTGlicmFyeSB8IE5hdGlvbmFsIEdlb2dyYXBoaWMgU29jaWV0eSAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Savanna climate   ",
        "option2" : "Hot desert and mid latitude desert climate   ",
        "option3" : "Steppe Climate   ",
        "option4" : "Mediterranean climate    "
      }
    },
    {
      "index" : 11,
      "question" : "  With reference to Laurentian Climatic  region, Consider the following Statements:   1.  The presence of this climate type can be  seen in African region of southern  hemisphere.    2.  This type of climate receives summer  rainfall from the easterly winds from the  ocean.   3. The predominant vegetation of the  Laurentian type of climate is cool temperate  forest.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb29sIFRlbXBlcmF0ZSBFYXN0ZXJuIE1hcmdpbiAoTGF1cmVudGlhbikgQ2xpbWF0ZSBpcyBhbiBpbnRlcm1lZGlhdGUgdHlwZSBvZiBjbGltYXRlIGJldHdlZW4gdGhlICAgQnJpdGlzaCBhbmQgdGhlIFNpYmVyaWFuIHR5cGUgb2YgY2xpbWF0ZS4gSXQgaGFzIGZlYXR1cmVzIG9mIGJvdGggdGhlIG1hcml0aW1lIGFuZCB0aGUgY29udGluZW50YWwgICBjbGltYXRlcy4gICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogTGF1cmVudGlhbiB0eXBlIG9mIGNsaW1hdGUgaXMgZm91bmQgb25seSBpbiB0d28gcmVnaW9ucy4gT25lIGlzIG5vcnRoLWVhc3Rlcm4gICBOb3J0aCBBbWVyaWNhLCBpbmNsdWRpbmcgZWFzdGVybiBDYW5hZGEsIG5vcnRoLWVhc3QgVS5TLkEuIFRoZSBvdGhlciByZWdpb24gaXMgdGhlIGVhc3Rlcm4gY29hc3RsYW5kcyBvZiAgIEFzaWEsIGluY2x1ZGluZyBlYXN0ZXJuIFNpYmVyaWEsIE5vcnRoIENoaW5hLCBNYW5jaHVyaWEsIEtvcmVhIGFuZCBub3J0aGVybiBKYXBhbi4gSW4gdGhlIHNvdXRoZXJuICAgaGVtaXNwaGVyZSwgdGhlIGNsaW1hdGUgaXMgc28gZXF1YWJsZSBhbmQgdGhlIG9jZWFuIGluZmx1ZW5jZSBpcyBzbyBwcm9mb3VuZCB0aGF0IG5laXRoZXIgdGhlIGNvbnRpbmVudGFsICAgbm9yIHRoZSBlYXN0ZXJuIG1hcmdpbiB0eXBlIG9mIGNsaW1hdGUgZXhpc3RzLiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIExhdXJlbnRpYW4gdHlwZSBvZiBjbGltYXRlIGhhcyBjb2xkLCBkcnkgd2ludGVycyBhbmQgd2FybSwgd2V0IHN1bW1lcnMuIEluICAgV2ludGVyLCB0ZW1wZXJhdHVyZXMgbWF5IGJlIHdlbGwgYmVsb3cgZnJlZXppbmctcG9pbnQgYW5kIHNub3cgZmFsbHMgdG8gcXVpdGUgYSBkZXB0aC4gV2ludGVyIGlzIGRyeSBhbmQgICBjb2xkLCBiZWNhdXNlIHRoZSB3aW5kcyBhcmUgZHJ5IFdlc3RlcmxpZXMgdGhhdCBibG93IG91dCBmcm9tIHRoZSBjb250aW5lbnRhbCBpbnRlcmlvcnMuIFRob3VnaCByYWluIGZhbGxzICAgdGhyb3VnaG91dCB0aGUgeWVhciwgdGhlcmUgaXMgYSBkaXN0aW5jdCBzdW1tZXIgbWF4aW11bSBmcm9tIHRoZSBlYXN0ZXJseSB3aW5kcyBmcm9tIHRoZSBvY2VhbnMuIE9mICAgdGhlIGFubnVhbCBwcmVjaXBpdGF0aW9uIG9mIDMwIHRvIDYwIGluY2hlcywgdHdvIHRoaXJkcyBjb21lIGluIHRoZSBzdW1tZXIuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBwcmVkb21pbmFudCB2ZWdldGF0aW9uIG9mIHRoZSBMYXVyZW50aWFuIHR5cGUgb2YgY2xpbWF0ZSBpcyBjb29sIHRlbXBlcmF0ZSAgIGZvcmVzdC4gVGhlIGhlYXZ5IHJhaW5mYWxsLCB0aGUgd2FybSBzdW1tZXJzIGFuZCB0aGUgZGFtcCBhaXIgZnJvbSBmb2dzLCBhbGwgZmF2b3VyIHRoZSBncm93dGggb2YgdHJlZXMuICAgVGhlIGluY3JlYXNlIGluIHRoZSBsZW5ndGggYW5kIHNldmVyaXR5IG9mIHRoZSB3aW50ZXIgZXhjbHVkZXMgZm9yZXN0cyB0aGF0IGFyZSBub3QgYWRhcHRhYmxlIHRvIGNvbGQgICBjb25kaXRpb25zLiBJbiB0aGUgQXNpYXRpYyByZWdpb24sIHRoZSBjb25pZmVyb3VzIGZvcmVzdHMgYXJlLCBpbiBmYWN0LCBhIGNvbnRpbnVhdGlvbiBvZiB0aGUgZ3JlYXQgY29uaWZlcm91cyAgIGJlbHQgb2YgdGhlIHRhaWdhLiAgICBTb3VyY2U6ICBHIEMgTGVvbmcgKENoIDIzLCBUaGUgY29vbCBUZW1wZXJhdGUgQ29udGluZW50YWwgQ2xpbWF0ZSkgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following statement is the  most appropriate reason for the relatively mild  winters in British type of climate?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJyaXRpc2ggdHlwZSBvZiBjbGltYXRlIGlzIGNoYXJhY3Rlcml6ZWQgYnkgbW9kZXJhdGVseSB3YXJtIHN1bW1lcnMgYW5kIGZhaXJseSBtaWxkIHdpbnRlcnMuICAgVGhlIG1lYW4gYW5udWFsIHRlbXBlcmF0dXJlcyBhcmUgdXN1YWxseSBiZXR3ZWVuIDXCsCBDIGFuZCAxNcKwIEMuIFdpbnRlcnMgYXJlIGFibm9ybWFsbHkgbWlsZC4gVGhpcyBpcyAgIGJlY2F1c2Ugb2YgdGhlIHdhcm1pbmcgZWZmZWN0IGJyb3VnaHQgYnkgd2FybSBOb3J0aCBBdGxhbnRpYyBEcmlmdC4gICBEdXJpbmcgc3VtbWVyIHRpbWUsIG5vdCBleGNlc3NpdmVseSBob3QgdGVtcGVyYXR1cmVzIGFyZSBleHBlcmllbmNlZC4gVGhlIEJyaXRpc2ggd2VhdGhlciBpcyBkb21pbmF0ZWQgICBieSBmcm9udGFsIGRlcHJlc3Npb25zIHdoaWNoIGZvcm0gaW4gdGhlIE1pZC1BdGxhbnRpYyBhbmQgcGFzcyBhY3Jvc3MgaW50byBFdXJvcGUsIGJyaW5naW5nIGNoYW5nZWFibGUgICB3ZWF0aGVyLiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3QuIFdlc3RlcmxpZXMgZmxvdyB0aHJvdWdob3V0IHRoZSB5ZWFyIGJ1dCB0aGV5IGRvIG5vdCBoZWxwIGluIGNoZWNraW5nIHRoZSB3aW50ZXIgICB0ZW1wZXJhdHVyZXMuICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gVGhlIEJyaXRpc2ggdHlwZSBvZiBjbGltYXRlIGhhcyBhZGVxdWF0ZSByYWluZmFsbCB0aHJvdWdob3V0IHRoZSB5ZWFyIHdpdGggYSB0ZW5kZW5jeSAgIHRvd2FyZHMgYSBzbGlnaHQgd2ludGVyIG1heGltdW0gZHVlIHRvIGZyb250YWwgY3ljbG9uZXMuIEJ1dCB3aW50ZXIgcmFpbmZhbGwgbGVhZHMgdG8gZGVjbGluZSBpbiAgIHRlbXBlcmF0dXJlLiAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIFRob3VnaCB0aGUgQnJpdGFpbiBpcyBsb2NhdGVkIGluIEF0bGFudGljIE9jZWFuIGJ1dCBpdCBleHBlcmllbmNlIHBvbGFyIGNvbGQgd2luZHMgdG9vICAgdGhhdCBtYWtlcyB0aGUgd2ludGVyIGNvbGRlci4gVW51c3VhbCBjb2xkIHNwZWxscyBhcmUgY2F1c2VkIGJ5IHRoZSBpbnZhc2lvbiBvZiBjb2xkIHBvbGFyIGNvbnRpbmVudGFsIGFpciAgIChQb2xhciBWb3J0ZXgpIGZyb20gdGhlIGludGVyaW9ycy4gICAgICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cubG9yZGdyZXkub3JnLnVrL35mMDE0L3VzZWZ1bHJlc291cmNlcy9hcmljL1Jlc291cmNlcy9UZWFjaGluZ19QYWNrcy9LZXlfU3RhZ2VfMy8gIFdlYXRoZXJfQ2xpbWF0ZS8wOS5odG1sICAgIENlcnRpZmljYXRlIFBoeXNpY2FsIEFuZCBIdW1hbiBHZW9ncmFwaHkgYnkgR29oIENoZW5nIExlb25nIC0gUDE2My4gICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The North Atlantic Drift keeps winters quite   mild.   ",
        "option2" : " Westerlies flow throughout the year that   keeps the temperature under check.   ",
        "option3" : " It receives winter rainfall due to the frontal   cyclone that have a warming effect.   ",
        "option4" : " It is located near Atlantic Sea that exerts   maritime influence.   "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to the Quinary and  Quaternary activities, consider the following  statements:   1.  Quinary activities are those which control  the industrial and government decision- making processes.   2.  Quaternary activities involve work related  to a Research and development.   3.  Software developers comes under  quaternary activities whereas bureaucrats  come under quinary activities.  Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFF1aW5hcnkgYWN0aXZpdGllcyBhcmUgc2VydmljZXMgdGhhdCBmb2N1cyBvbiB0aGUgY3JlYXRpb24sIHJlLWFycmFuZ2VtZW50IGFuZCAgIGludGVycHJldGF0aW9uIG9mIG5ldyBhbmQgZXhpc3RpbmcgaWRlYXM7IGRhdGEgaW50ZXJwcmV0YXRpb24gYW5kIHRoZSB1c2UgYW5kIGV2YWx1YXRpb24gb2YgbmV3ICAgdGVjaG5vbG9naWVzLiAgICAgVGhlc2UgaW5kdXN0cmllcyBpbnZvbHZlIHRob3NlIHRoYXQgY29udHJvbCB0aGUgaW5kdXN0cmlhbCBhbmQgZ292ZXJubWVudCBkZWNpc2lvbi1tYWtpbmcgcHJvY2Vzc2VzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUXVhdGVybmFyeSBhY3Rpdml0aWVzIGludm9sdmUgc29tZSBvZiB0aGUgZm9sbG93aW5nOiB0aGUgY29sbGVjdGlvbiwgcHJvZHVjdGlvbiBhbmQgICBkaXNzZW1pbmF0aW9uIG9mIGluZm9ybWF0aW9uIG9yIGV2ZW4gdGhlIHByb2R1Y3Rpb24gb2YgaW5mb3JtYXRpb24uIFJlc2VhcmNoIGFuZCBkZXZlbG9wbWVudCBjb21wYW5pZXMgICBhcmUgdGhlIG1vc3QgY29tbW9uIHR5cGVzIG9mIGJ1c2luZXNzZXMgaW4gdGhpcyBzZWN0b3IuIFF1YXRlcm5hcnkgYWN0aXZpdGllcyBjZW50cmUgYXJvdW5kIHJlc2VhcmNoLCAgIGRldmVsb3BtZW50IGFuZCBtYXkgYmUgc2VlbiBhcyBhbiBhZHZhbmNlZCBmb3JtIG9mIHNlcnZpY2VzIGludm9sdmluZyBzcGVjaWFsaXNlZCBrbm93bGVkZ2UgYW5kICAgdGVjaG5pY2FsIHNraWxscy4gICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgIFF1YXRlcm5hcnkgSW5kdXN0cmllcyBJbmR1c3RyeSBhbmQgTGFib3VyIFRoZXNlIGluZHVzdHJpZXMgSW52b2x2ZSB0aGUgdXNlIG9mIGhpZ2ggdGVjaCBpbmR1c3RyaWVzLiAgIFNvZnR3YXJlIGRldmVsb3BtZW50IHByb3ZpZGVzIHRoZSBjbGFzc2ljIGV4YW1wbGUgb2YgdGhlIHF1YXRlcm5hcnkgZWNvbm9teS4gICAgIFF1aW5hcnkgYWN0aXZpdGllcyBpbmNsdWRlcyBpbmR1c3RyeSBleGVjdXRpdmVzLCBtYW5hZ2VtZW50LCBidXJlYXVjcmF0cyBhbmQgZWxlY3RlZCBvZmZpY2lhbHMgaW4gICBnb3Zlcm5tZW50LiBQb2xpY2llcyBhbmQgbGF3cyBhcmUgbWFkZSBhbmQgaW1wbGVtZW50ZWQgYXQgdGhpcyBsZXZlbC4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MTA3LnBkZiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "3 only   ",
        "option4" : "1, 2 and 3           "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following pairs:         Port Function   1. Entrepot Ports collection centres where  the goods are brought  from different countries  for export.  2. Ports of Call serve the parent ports  by receiving those ships  which are unable to  approach them   due to  their large size.  3. Inland Port linked to the sea through  a river or a canal.   4. Out Port developed on main sea  routes where ships used  to anchor for refuelling  Which of the pairs given above are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0LiBFbnRyZXBvdCBQb3J0czogVGhlc2UgYXJlIGNvbGxlY3Rpb24gY2VudHJlcyB3aGVyZSB0aGUgZ29vZHMgYXJlIGJyb3VnaHQgZnJvbSBkaWZmZXJlbnQgICBjb3VudHJpZXMgZm9yIGV4cG9ydC4gU2luZ2Fwb3JlIGlzIGFuIGVudHJlcG90IGZvciBBc2lhLiAgICBQYWlyIDIgaXMgaW5jb3JyZWN0LiBQb3J0cyBvZiBDYWxsOiBUaGVzZSBhcmUgdGhlIHBvcnRzIHdoaWNoIG9yaWdpbmFsbHkgZGV2ZWxvcGVkIGFzIGNhbGxpbmcgcG9pbnRzIG9uIG1haW4gICBzZWEgcm91dGVzIHdoZXJlIHNoaXBzIHVzZWQgdG8gYW5jaG9yIGZvciByZWZ1ZWxsaW5nLCB3YXRlcmluZyBhbmQgdGFraW5nIGZvb2QgaXRlbXMuIExhdGVyIG9uLCB0aGV5ICAgZGV2ZWxvcGVkIGludG8gY29tbWVyY2lhbCBwb3J0cy4gQWRlbiwgSG9ub2x1bHUgYW5kIFNpbmdhcG9yZSBhcmUgZ29vZCBleGFtcGxlcy4gICAgUGFpciAzIGlzIGNvcnJlY3QuIElubGFuZCBQb3J0czogVGhlc2UgcG9ydHMgYXJlIGxvY2F0ZWQgYXdheSBmcm9tIHRoZSBzZWEgY29hc3QuIFRoZXkgYXJlIGxpbmtlZCB0byB0aGUgc2VhICAgdGhyb3VnaCBhIHJpdmVyIG9yIGEgY2FuYWwuIFN1Y2ggcG9ydHMgYXJlIGFjY2Vzc2libGUgdG8gZmxhdCBib3R0b20gc2hpcHMgb3IgYmFyZ2VzLiBGb3IgZXhhbXBsZSwgICBNYW5jaGVzdGVyIGlzIGxpbmtlZCB3aXRoIGEgY2FuYWwgICAgUGFpciA0IGlzIGluY29ycmVjdC4gT3V0IFBvcnRzOiBUaGVzZSBhcmUgZGVlcCB3YXRlciBwb3J0cyBidWlsdCBhd2F5IGZyb20gdGhlIGFjdHVhbCBwb3J0cy4gVGhlc2Ugc2VydmUgICB0aGUgcGFyZW50IHBvcnRzIGJ5IHJlY2VpdmluZyB0aG9zZSBzaGlwcyB3aGljaCBhcmUgdW5hYmxlIHRvIGFwcHJvYWNoIHRoZW0gZHVlIHRvIHRoZWlyIGxhcmdlIHNpemUuICAgQ2xhc3NpYyBjb21iaW5hdGlvbiwgZm9yIGV4YW1wbGUsIGlzIEF0aGVucyBhbmQgaXRzIG91dCBwb3J0IFBpcmFldXMgaW4gR3JlZWNlICAgICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2tlY3QxMDIucGRmLCBwZyBuby40OSAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 4 only    "
      }
    },
    {
      "index" : 15,
      "question" : "With reference to the distribution of Coal  across the world, which of the following  statement(s) is/are correct?   1.  More than 90% of the world's total proved  coal reserves are located in USA and China.   2.  USA is the biggest producer and consumer  of coal.    3.  India is the second-biggest coal producer  and consumer of coal.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTW9yZSB0aGFuIDkwJSBvZiB0aGUgd29ybGQncyB0b3RhbCBwcm92ZWQgY29hbCByZXNlcnZlcyBhcmUgbG9jYXRlZCBpbiB0ZW4gICBjb3VudHJpZXMgd2l0aCBVU0EsIFJ1c3NpYSBhbmQgQXVzdHJhbGlhIGF0IHRvcCB0aHJlZSBwb3NpdGlvbnMuIFRoZSBsYXJnZXN0IGNvYWwgbWluZSBpbiB0aGUgd29ybGQgYnkgICByZXNlcnZlcyBpcyB0aGUgTm9ydGggQW50ZWxvcGUgUm9jaGVsbGUgY29hbCBtaW5lIGluIHRoZSBQb3dkZXIgUml2ZXIgQmFzaW4gb2YgV3lvbWluZywgVVMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQ2hpbmEgaXMgdGhlIHdvcmxkJ3MgYmlnZ2VzdCBwcm9kdWNlciBhbmQgY29uc3VtZXIgb2YgY29hbC4gSXQgcHJvZHVjZWQgMy41NUJ0ICAgb2YgY29hbCAoNDYuNyUgb2YgdGhlIHdvcmxkJ3MgdG90YWwgY29hbCBwcm9kdWN0aW9uKSwgd2hpbGUgaXRzIGNvYWwgY29uc3VtcHRpb24gYWNjb3VudGVkIGZvciBtb3JlIHRoYW4gICA1MCUgb2YgdGhlIHdvcmxkJ3MgdG90YWwgaW4gMjAxOCB3aGVyZWFzIHRoZSBVbml0ZWQgU3RhdGVzIGhvbGRzIHRoZSB3b3JsZCdzIGJpZ2dlc3QgY29hbCByZXNlcnZlcy4gVGhlICAgbmF0aW9uJ3MgcHJvdmVkIGNvYWwgcmVzZXJ2ZXMgYXMgb2YgRGVjZW1iZXIgMjAxOCBzdG9vZCBhdCAyNTAuMiBiaWxsaW9uIHRvbm5lcyAoQnQpIGFjY291bnRpbmcgZm9yICAgYXBwcm94aW1hdGVseSAyNCUgb2YgdGhlIHdvcmxkJ3MgcHJvdmVuIGNvYWwgcmVzZXJ2ZXMuICAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gSW5kaWEgaXMgdGhlIHNlY29uZC1iaWdnZXN0IGNvYWwgcHJvZHVjZXIgYW5kIGNvbnN1bWVyLCBhZnRlciBDaGluYS4gSXQgcHJvZHVjZWQgICA3NzFNdCBvZiBDb2FsICg3LjklIG9mIHRoZSB3b3JsZCdzIHRvdGFsKSBpbiAyMDE4LiBJbmRpYSBhbHNvIGFjY291bnRzIGZvciAxMiUgb2YgdGhlIHdvcmxkJ3MgdG90YWwgY29hbCAgIGNvbnN1bXB0aW9uLiBJdCBpbXBvcnRlZCAyNDBNdCBvZiBjb2FsIGluIDIwMTgsIGJlY29taW5nIHRoZSB3b3JsZCdzIHNlY29uZC1iaWdnZXN0IGNvYWwgaW1wb3J0ZXIuICAgICBTb3VyY2U6IGh0dHBzOi8vd3d3Lm1pbmluZy10ZWNobm9sb2d5LmNvbS9hbmFseXNpcy9mZWF0dXJlLXRoZS13b3JsZHMtYmlnZ2VzdC1jb2FsLXJlc2VydmVzLWJ5LSAgY291bnRyeS8gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 only   ",
        "option3" : "3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the wind energy,  consider the following statements:   1.  India is the second largest producer of wind  energy after China.   2.  Tamil Nadu has the highest installed  capacity of wind energy in India.   3.  Wind energy generation is the highest from  June to October in Tamil Nadu and August  to September in Gujarat.   Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEluZGlhIGhhcyB0aGUgZm91cnRoIGhpZ2hlc3Qgd2luZCBpbnN0YWxsZWQgY2FwYWNpdHkgaW4gdGhlIHdvcmxkIHdpdGggdG90YWwgICBpbnN0YWxsZWQgY2FwYWNpdHkgb2YgMzkuMjUgR1cuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUYW1pbCBOYWR1IGhhcyA5LjkgR1cgb2YgdG90YWwgaW5zdGFsbGVkIGNhcGFjaXR5LCBhY2NvdW50aW5nIGZvciAyNCBwZXIgY2VudCBvZiAgIHRoZSB0b3RhbCBtYXJrZXQgc2hhcmUuIFRhbWlsIE5hZHUgaXMgZm9sbG93ZWQgYnkgR3VqYXJhdC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gV2luZCBlbmVyZ3kgZ2VuZXJhdGlvbiBpcyB0aGUgaGlnaGVzdCBmcm9tIEp1bmUgdG8gT2N0b2JlciBpbiBUYW1pbCBOYWR1IGFuZCAgIEF1Z3VzdCB0byBTZXB0ZW1iZXIgaW4gR3VqYXJhdC4gICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgICBGaWcgMTogVHlwaWNhbCBkYWlseSB3aW5kIGVuZXJneSBnZW5lcmF0aW9uIHBhdHRlcm4gbW9udGgtd2lzZSBpbiBUYW1pbCBOYWR1ICAgICBGaWcgMjogVHlwaWNhbCBkYWlseSB3aW5kIGVuZXJneSBnZW5lcmF0aW9uIHBhdHRlcm4gbW9udGgtd2lzZSBpbiBHdWphcmF0LiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5jYW5hcnltZWRpYS5jb20vYXJ0aWNsZXMvd2luZC9jaGFydC10aGUtdG9wLTEwLWNvdW50cmllcy13aXRoLXRoZS1tb3N0LSAgd2luZC1wb3dlciAgICBodHRwczovL21lcmNvbWluZGlhLmNvbS9pbmRpYS1hZGRzLXdpbmQtY2FwYWNpdHktcTEtMjAyMi8gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to the patterns of  population distribution in the world, consider  the following statements:   1.  India and China have more than 50 per cent  of the world's population.   2.  All the 10 most populous countries of the  world are located in Asia.   3.  Majority of the world population lives in the  northern hemisphere.   Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQYXR0ZXJucyBvZiBwb3B1bGF0aW9uIGRpc3RyaWJ1dGlvbiBhbmQgZGVuc2l0eSBoZWxwIHVzIHRvIHVuZGVyc3RhbmQgdGhlIGRlbW9ncmFwaGljIGNoYXJhY3RlcmlzdGljcyBvZiAgIGFueSBhcmVhLiBUaGUgdGVybSBwb3B1bGF0aW9uIGRpc3RyaWJ1dGlvbiByZWZlcnMgdG8gdGhlIHdheSBwZW9wbGUgYXJlIHNwYWNlZCBvdmVyIHRoZSBlYXJ0aCdzIHN1cmZhY2UuICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuICBDaGluYSAoMS40NCBiaWxsaW9uKSBhbmQgSW5kaWEgKDEuMzkgYmlsbGlvbikgcmVtYWluIHRoZSB0d28gbW9zdCBwb3B1bG91cyBjb3VudHJpZXMgICBvZiB0aGUgd29ybGQsIGJvdGggd2l0aCBtb3JlIHRoYW4gMSBiaWxsaW9uIHBlb3BsZSwgcmVwcmVzZW50aW5nIGFyb3VuZCAxOSBhbmQgMTggcGVyIGNlbnQgb2YgdGhlIHdvcmxkJ3MgICBwb3B1bGF0aW9uLCByZXNwZWN0aXZlbHkgKG5vdCA1MCBwZXJjZW50KS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgICAgVGhlIDEwIG1vc3QgcG9wdWxvdXMgY291bnRyaWVzIG9mIHRoZSB3b3JsZCBjb250cmlidXRlIGFib3V0IDYwIHBlciBjZW50IG9mIHRoZSB3b3JsZCdzIHBvcHVsYXRpb24uIE9mICAgdGhlc2UgMTAgY291bnRyaWVzLCA2IGFyZSBsb2NhdGVkIGluIEFzaWEgKENoaW5hLCBJbmRpYSwgUGFraXN0YW4sIEluZG9uZXNpYSwgQmFuZ2xhZGVzaCwgUnVzc2lhKS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gUG9wdWxhdGlvbiBkaXN0cmlidXRpb24gb24gYSBnbG9iYWwgc2NhbGUgaXMgaGlnaGx5IHVuZXZlbiwgd2l0aCB0aGUgZ3JlYXRlciBwYXJ0IG9mICAgdGhlIHdvcmxkJ3MgcG9wdWxhdGlvbiBsaXZpbmcgaW4gdGhlIG5vcnRoZXJuIGhlbWlzcGhlcmUgYW5kIGluIGNvdW50cmllcyBpbiB0aGUgbGVzcyBkZXZlbG9wZWQgd29ybGQuICAgTGVzcyB0aGFuIDEwIHBlcmNlbnQgb2YgdGhlIHdvcmxkJ3MgcG9wdWxhdGlvbiBsaXZlcyBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZSwgYW5kIDgwIHBlcmNlbnQgbGl2ZXMgICBiZXR3ZWVuIDIwIGRlZ3JlZXMgYW5kIDYwIGRlZ3JlZXMgbm9ydGggbGF0aXR1ZGUuICAgIFNvdXJjZTogIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlZ3kxMDIucGRmICAgIGh0dHBzOi8vYXNpYXBhY2lmaWMudW5mcGEub3JnL2VuL3BvcHVsYXRpb250cmVuZHMgICAgaHR0cHM6Ly93d3cuZW5jeWNsb3BlZGlhLmNvbS9zb2NpYWwtc2NpZW5jZXMvZW5jeWNsb3BlZGlhcy1hbG1hbmFjcy10cmFuc2NyaXB0cy1hbmQtICBtYXBzL2RlbnNpdHktYW5kLWRpc3RyaWJ1dGlvbi1wb3B1bGF0aW9uICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "2 only    "
      }
    },
    {
      "index" : 18,
      "question" : "Which one of the following best describes  the term 'Megalopolis '?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgVXJiYW4gc2V0dGxlbWVudHMgdmFyeSBpbiBjdWx0dXJlLCBzaXplIGFuZCBzcGVjaWFsdHksIHdpdGggY2VydGFpbiBhcmVhcyBiZWNvbWluZyBtb3JlIHNpZ25pZmljYW50ICAgdGhyb3VnaG91dCB0aGUgZGV2ZWxvcG1lbnQgb2YgYSByZWdpb24uIFRoZXJlIGFyZSBtYW55IHR5cGVzIG9mIHVyYmFuIGxhbmRzY2FwZXM6ICAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gR2xvYmFsIGNpdGllcyBsaWtlIExvbmRvbiwgVG9reW8gYW5kIE5ldyBZb3JrIGFyZSBrZXkgbG9jYXRpb25zIHdpdGhpbiB0aGUgd29ybGQgICBlY29ub215LCBhY3RpbmcgYXMgY3J1Y2lhbCBjZW50cmVzIGZvciB0aGUgZ2xvYmFsIHRyYWRpbmcgb2YgZ29vZHMgYW5kIHNlcnZpY2VzLiAgICBFY29ub21pY2FsbHksIHRoZXkgc2VydmUgYSB2YXJpZXR5IG9mIGludGVybmF0aW9uYWwgZWNvbm9taWMgc2VydmljZXMgYW5kIGhvc3QgdGhlIGhlYWRxdWFydGVycyBmb3Igc2V2ZXJhbCAgIG11bHRpbmF0aW9uYWwgY29ycG9yYXRpb25zLiBTb2NpYWxseSwgdGhleSBoYXZlIGEgaGlnaCBkaXZlcnNpdHkgb2YgY3VsdHVyZXMsIHJlbGlnaW9ucywgaWRlb2xvZ2llcyBhbmQgICBsYW5ndWFnZXMuICAgICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0LiBBIG1ldHJvcG9saXMsIGZyb20gdGhlIEdyZWVrIGZvciAnbW90aGVyIGNpdHknLCBpcyBhIGRlc2NyaXB0aXZlIHRlcm0gZm9yIGxhcmdlIGNpdGllcyAgIHRoYXQgYXJlIGtleSBjZW50ZXJzIG9mIG5hdGlvbmFsIGFuZCByZWdpb25hbCBzb2Npby1lY29ub21pYyBhY3Rpdml0eSwgc2hhcmluZyBtYW55IG9mIHRoZSBzYW1lICAgY2hhcmFjdGVyaXN0aWNzIHdpdGggYSBnbG9iYWwgY2l0eS4gICAgVGhlIGxvd2VyIHN0YW5kYXJkIG9mIGxpdmluZywgZGV2ZWxvcG1lbnQgYW5kIGluZnJhc3RydWN0dXJlIGluIG1hbnkgbWV0cm9wb2xpc2VzIGNhbiBhbHNvIGltcGFjdCB0aGVpciAgIHN0YXR1cyBhcyBhIGdsb2JhbCBjaXR5LiBBcyBhIHJlc3VsdCwgYSBnbG9iYWwgY2l0eSBpcyBhbHdheXMgYSBtZXRyb3BvbGlzIC0gYnV0IGEgbWV0cm9wb2xpcyBpc24ndCBndWFyYW50ZWVkIHRvICAgYmUgYSBnbG9iYWwgY2l0eS4gQ2Fpcm8gYW5kIExhZ29zIHJlZmxlY3QgdGhlIGxhdHRlci4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiAgQSBjaXR5IHdpdGggb3ZlciAxMCBtaWxsaW9uIGluaGFiaXRhbnRzIGlzIHRoZSBtb3N0IHdpZGVseSBhY2NlcHRlZCBkZWZpbml0aW9uIG9mIGEgICBtZWdhY2l0eTsgaG93ZXZlciwgb3RoZXJzIGluY2x1ZGUgdXJiYW4gYXJlYXMgd2l0aCBvbmx5IDggbWlsbGlvbiBwZW9wbGUgYW5kIGFsc28gd2l0aCBhIHBvcHVsYXRpb24gZGVuc2l0eSAgIG9mIDIwMDAgcGVyIHNxdWFyZSBraWxvbWV0ZXIgYXMgYSBtZWdhY2l0eS4gICAgVG9kYXksIHNvbWUgb2YgdGhlIG1vc3QgcG9wdWxhdGVkIGNpdGllcyBhcmUgVG9reW8sIFNoYW5naGFpLCBKYWthcnRhLCBEZWxoaSBhbmQgU2VvdWwuICAgIE9wdGlvbiBkIGlzIGNvcnJlY3QuIE1lZ2Fsb3BvbGlzID0oTWV0cm9wb2xpc2F0aW9uICsgQ29zbW9wb2xpc2F0aW9uKS4gVGhpcyBHcmVlayB3b3JkIG1lYW5pbmcgJ2dyZWF0ICAgY2l0eScsIHdhcyBwb3B1bGFyaXNlZCBieSBKZWFuIEdvdHRtYW4gKDE5NTcpIGFuZCBzaWduaWZpZXMgJ3N1cGVyLSBtZXRyb3BvbGl0YW4nIHJlZ2lvbiBleHRlbmRpbmcgYXMgdW5pb24gICBvZiBjb251cmJhdGlvbnMuIEhlbmNlIGEgY2x1c3RlciBvZiB3ZWxsLW5ldHdvcmtlZCBjaXRpZXMgaXMgY2FsbGVkIGEgbWVnYWxvcG9saXMuIEdlb2dyYXBoeSBjYW4gcGxheSBhICAgbGFyZ2Ugcm9sZSBpbiB0aGUgbG9jYXRpb24gb2YgbWVnYWxvcG9saXNlcywgYXMgY2FuIGdvb2QgaW50ZXJuYXRpb25hbCBhbmQgcmVnaW9uYWwgdHJhbnNwb3J0IGxpbmtzLiBUaGUgICBzdWJzZXF1ZW50IGVjb25vbWljIGdyb3d0aCBvZiBvbmUgY2l0eSBjYW4gaGF2ZSBhIHBvc2l0aXZlIGltcGFjdCBvbiBuZWlnaGJvdXJpbmcgbG9jYXRpb25zLiAgVGhlIHVyYmFuICAgbGFuZHNjYXBlIHN0cmV0Y2hpbmcgZnJvbSBCb3N0b24gaW4gdGhlIG5vcnRoIHRvIHNvdXRoIG9mIFdhc2hpbmd0b24gaW4gVS5TLkEuIGlzIHRoZSBiZXN0LWtub3duIGV4YW1wbGUgICBvZiBhIG1lZ2Fsb3BvbGlzLiAgICBTb3VyY2U6ICBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9sZWd5MTEwLnBkZiAgICAgaHR0cHM6Ly93d3cueW91cmRpY3Rpb25hcnkuY29tL21lZ2Fsb3BvbGlzICAgICBodHRwczovL3d3dy5hcmNoZGFpbHkuY29tLzg5NjU2OC93aGF0cy10aGUtZGlmZmVyZW5jZS1iZXR3ZWVuLWEtbWVnYWNpdHktYS1tZXRyb3BvbGlzLWEtICBtZWdhbG9wb2xpcy1hbmQtYS1nbG9iYWwtY2l0eSAgICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A city having key location within the world   economy and acting as crucial center for the   global trading of goods and services.   ",
        "option2" : " A large city that is a key center of national   and regional socio-economic activity   ",
        "option3" : " A city with over 10 million inhabitants   ",
        "option4" : " A cluster of well-networked cities    "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to the mining activity,  consider the following statements:     1.  The mining activity is not presently  dependent upon the quality of the ore due  to technological progress.    2.  The mines located near coasts or industrial  sites are preferred more.    3.  The presence of large deposits of minerals is  a necessary condition for mining of gold.     Which of the statements given above are  correct?      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJlZm9yZSBhIG1pbmVyYWwgY2FuIGJlIHdvcmtlZCBpdCBtdXN0IGJlIGFzY2VydGFpbmVkIHdoZXRoZXIgaXRzIHZhbHVlIGlzIGdyZWF0ZXIgdGhhbiB0aGUgY29zdHMgb2YgICB3b3JraW5nLCB0cmFuc3BvcnRpbmcgYW5kIGNvbmNlbnRyYXRpbmcgb24gdGhlIG9yZS4gVGhlIHByb2ZpdGFiaWxpdHkgb2YgbWluaW5nIG9wZXJhdGlvbnMgZGVwZW5kcyBvbiB0d28gICBtYWluIGZhY3RvcnM6ICAgIChpKSBQaHlzaWNhbCBmYWN0b3JzIGluY2x1ZGUgdGhlIHNpemUsIGdyYWRlIGFuZCB0aGUgbW9kZSBvZiBvY2N1cnJlbmNlIG9mIHRoZSBkZXBvc2l0cy4gICAgKGlpKSBFY29ub21pYyBmYWN0b3JzIHN1Y2ggYXMgdGhlIGRlbWFuZCBmb3IgdGhlIG1pbmVyYWwsIHRlY2hub2xvZ3kgYXZhaWxhYmxlIGFuZCB1c2VkLCBjYXBpdGFsIHRvIGRldmVsb3AgICBpbmZyYXN0cnVjdHVyZSBhbmQgdGhlIGxhYm91ciBhbmQgdHJhbnNwb3J0IGNvc3RzLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgcXVhbGl0eSBvZiBvcmVzIGRldGVybWluZXMgaW4gYSBsYXJnZSBtZWFzdXJlIHRoZWlyIGNvbW1lcmNpYWwgZXhwbG9pdGF0aW9uLiAgIEdlbmVyYWxseSwgdGhlIGhpZ2hlci1ncmFkZSBvcmVzIGFyZSBtb3JlIGVjb25vbWljYWwgdG8gd29yayB3aXRoIGJlY2F1c2UgdGhleSB5aWVsZCBsYXJnZSBhbW91bnRzIG9mICAgbWV0YWwgYW5kIHRoZWlyIGhpZ2hlciBtZXRhbCBjb250ZW50IG1ha2VzIHRoZW0gZWFzaWVyIGFuZCBjaGVhcGVyIHRvIHNtZWx0LiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRm9yIGEgc3VjY2Vzc2Z1bCBtaW5pbmcgYWN0aXZpdHksIHRyYW5zcG9ydGF0aW9uIGZhY2lsaXRpZXMgYXJlIGVzc2VudGlhbC4gT3JlcyBhcmUgICByZWxhdGl2ZWx5IGJ1bGt5IGFuZCBoZWF2eS4gVGhleSBhcmUgdGh1cyBjb3N0bHkgdG8gdHJhbnNwb3J0IGFuZCB0aGUgc2hvcnRlciB0aGUgZGlzdGFuY2UgdG8gYmUgY292ZXJlZCB0aGUgICBiZXR0ZXIuIFRoZSBkZXBvc2l0cyBoYXZpbmcgY29hc3RhbCBsb2NhdGlvbiBvciBsb2NhdGVkIG5lYXIgaW5kdXN0cmlhbCBzaXRlcyBoYXZlIGFuIGFkdmFudGFnZSBvdmVyIHRob3NlICAgZmFyIGlubGFuZC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaG91Z2ggdGhlIHNpemUgb2YgZGVwb3NpdCBpcyBpbXBvcnRhbnQgYmVjYXVzZSBtaW5pbmcgcmVxdWlyZXMgYSBsYXJnZSBhbW91bnQgICBvZiBleHBlbnNpdmUgZXF1aXBtZW50LiBCdXQgcHJlY2lvdXMgbWluZXJhbHMgbGlrZSBnb2xkIGFuZCBzaWx2ZXIgYXJlIGFuIGV4Y2VwdGlvbi4gVGhleSBhcmUgdXN1YWxseSBtaW5lZCAgIGluIHNtYWxsIGRlcG9zaXRzIGJlY2F1c2UgdGhleSBhcmUgbmF0dXJhbGx5IGZvdW5kIGluIGxlc3MgcXVhbnRpdGllcyBhbmQgdGhlaXIgbWluaW5nIGlzIHByb2ZpdGFibGUgZHVlIHRvICAgdGhlaXIgcHJvY2Vzcy4gICAgICBLbm93bGVkZ2UgQmFzZTogICAgIE90aGVyIGZhY3RvcnMgYXJlOiAgICAgMSkgVGhlIG1ldGhvZCBvZiBtaW5pbmcgZGVwZW5kcyBvbiB0aGUgbW9kZSBvZiBvY2N1cnJlbmNlIG9mIHRoZSBvcmVzLiBPcGVuY2FzdCBtaW5pbmcgaXMgdGhlIGNoZWFwZXN0LCAgIHdoaWxlIHNoYWZ0IG1pbmVzIGFyZSB2ZXJ5IGV4cGVuc2l2ZS4gICAgIDIpIFRoZSBhY2Nlc3NpYmlsaXR5IG9mIGEgcmVnaW9uIHdoZXJlIHRoZSBwYXJ0aWN1bGFyIG1pbmVyYWwgZGVwb3NpdCBvY2N1cnMgaXMgb2YgZ3JlYXQgc2lnbmlmaWNhbmNlLiBUaGUgICB0ZXJyYWluIGFuZCBjbGltYXRlIGRldGVybWluZSBhY2Nlc3NpYmlsaXR5IHdoaWNoIGhlbHBzIG9yIGhpbmRlcnMgdGhlIG1pbmluZyBvcGVyYXRpb25zLiAgICAzKSBUaGUgc3RhZ2Ugb2YgaW5kdXN0cmlhbGl6YXRpb24gb2YgYSBjb3VudHJ5IGlzIHRoZSBnZW5lcmFsIGluZGV4IG9mIHRoZSBleHBsb2l0YXRpb24gb2YgaGVyIG1pbmVyYWwgICB3ZWFsdGguICAgICA0KSBUZWNobm9sb2dpY2FsIGNoYW5nZXMgcGVydGFpbmluZyB0byBtaW5pbmcgbWV0aG9kcywgbWFudWZhY3R1cmluZyBwcm9jZXNzZXMgYW5kIHRoZSBsaWtlIG1heSAgIGNoYW5nZSBvbmNlIHdvcnRobGVzcyBkZXBvc2l0cyBhcmUgY29udmVydGVkIGludG8gZXN0ZWVtZWQgY29tbWVyY2lhbCBvcmVzLiAgICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWd5MTA1LnBkZiAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "1 and 3 only    ",
        "option4" : "2 and 3 only     "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following are the factors of  location for the large integrated Steel plants?    1. Nearness to the mining areas of iron and  coal.    2. Availability of cheap labour.    3. Availability of scrap metal.    4. Power Supply   5. Port facilities.    Select the correct answer from the code given  below:    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgSXJvbiBhbmQgc3RlZWwgaW5kdXN0cnkgZm9ybXMgdGhlIGJhc2Ugb2YgYWxsIG90aGVyIGluZHVzdHJpZXM7IHRoZXJlZm9yZSwgaXQgaXMgY2FsbGVkIGJhc2ljIGluZHVzdHJ5LiBJdCBpcyAgIG1haW5seSBvZiB0d28gdHlwZXMgLSBMYXJnZSBpbnRlZ3JhdGVkIHN0ZWVsIHBsYW50cyBhbmQgbWluaSBzdGVlbCBwbGFudHMuICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBNb3N0bHkgbGFyZ2UgaW50ZWdyYXRlZCBzdGVlbCBwbGFudHMgYXJlIGxvY2F0ZWQgY2xvc2UgdG8gc291cmNlIG9mIHJhdyBtYXRlcmlhbHMgICAoaXJvbiBvcmUsIGNvYWwsIG1hbmdhbmVzZSBhbmQgbGltZXN0b25lKSwgYXMgdGhleSB1c2UgbGFyZ2UgcXVhbnRpdHkgb2YgaGVhdnkgYW5kIHdlaWdodCBsb3NpbmcgcmF3ICAgbWF0ZXJpYWxzLiBDb25jZW50cmF0aW9uIG9mIElyb24gYW5kIHN0ZWVsIGluZHVzdHJ5IGluIENob3RhIE5hZ3B1ciBSZWdpb24tUHJlc2VuY2Ugb2YgSXJvbiBvcmUgaW4gdGhpcyAgIHJlZ2lvbiBhbmQgVElTQ08gYXQgSmFtc2hlZHB1ciBhcmUgdGhlIGV4YW1wbGVzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXZhaWxhYmlsaXR5IG9mIGNoZWFwIGxhYm91ciBpcyBhbHNvIGltcG9ydGFudCBmb3IgdGhlIGxhcmdlIGludGVncmF0ZWQgc3RlZWwgcGxhbnRzLiAgIEUuZy46IFJvdXJrZWxhIHBsYW50LCBPcmlzc2E7IEJoaWxhaSBzdGVlbCBwbGFudCBpbiBDaGhhdHRpc2dhcmgsIG1vc3RseSBpbiBDaG90YSBOYWdwdXIgcmVnaW9uLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBGb3IgbWluaSBzdGVlbCBtaWxscywgYWNjZXNzIHRvIG1hcmtldHMgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiBpbnB1dHMuIFRoZXNlIGFyZSAgIGxlc3MgZXhwZW5zaXZlIHRvIGJ1aWxkIGFuZCBvcGVyYXRlIGFuZCBjYW4gYmUgbG9jYXRlZCBuZWFyIG1hcmtldHMgYmVjYXVzZSBvZiB0aGUgYWJ1bmRhbmNlIG9mIHNjcmFwICAgbWV0YWwsIHdoaWNoIGlzIHRoZSBtYWluIGlucHV0LiAgICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEF2YWlsYWJpbGl0eSBvZiBlbGVjdHJpY2l0eSBtb3N0bHkgaHlkcm8gYW5kIHdhdGVyIGZvciBjb29saW5nIGlzIGltcG9ydGFudCBmb3IgbGFyZ2UgICBpbnRlZ3JhdGVkIHN0ZWVsIHBsYW50cy4gIEUuZy46IEJva2FybyBzdGVlbCBwbGFudCBvbiBiYW5rcyBvZiByaXZlciBEYW1vZGFyLCBWaXNoZXNod2FyeWEgc3RlZWwgcGxhbnQsIEthciAgIG5lYXIgcml2ZXIgQmhhZHJhLiAgICAgU3RhdGVtZW50IDUgaXMgY29ycmVjdDogQWZ0ZXIgMTk1MCwgaXJvbiBhbmQgc3RlZWwgaW5kdXN0cnkgYmVnYW4gdG8gYmUgbG9jYXRlZCBvbiBsYXJnZSBhcmVhcyBvZiBmbGF0IGxhbmQgICBuZWFyIHNlYSBwb3J0cy4gVGhpcyBpcyBiZWNhdXNlIGJ5IHRoaXMgdGltZSBzdGVlbCB3b3JrcyBoYWQgYmVjb21lIHZlcnkgbGFyZ2UgYW5kIGlyb24gb3JlIGhhZCB0byBiZSAgIGltcG9ydGVkIGZyb20gb3ZlcnNlYXMuIEFzIHRoZSBwcm9kdWN0cyBoZWF2eSBhbmQgYnVsa3ksIHNvIHRoZSB0cmFuc3BvcnRhdGlvbiBjb3N0IGlzIGhpZ2guIFRoZXJlZm9yZSwgICBuZWFybmVzcyB0byBwb3J0IGZvciBleHBvcnRzIGlzIGltcG9ydGFudC4gICAgS25vd2xlZGdlIEJhc2U6ICAgICAgSW4gSW5kaWEsIGlyb24gYW5kIHN0ZWVsIGluZHVzdHJ5IGhhcyBkZXZlbG9wZWQgdGFraW5nIGFkdmFudGFnZSBvZiByYXcgbWF0ZXJpYWxzLCBjaGVhcCBsYWJvdXIsIHRyYW5zcG9ydCAgIGFuZCBtYXJrZXQuIEFsbCB0aGUgaW1wb3J0YW50IHN0ZWVsIHByb2R1Y2luZyBjZW50cmVzIHN1Y2ggYXMgQmhpbGFpLCBEdXJnYXB1ciwgQnVybnB1ciwgSmFtc2hlZHB1ciwgICBSb3Vya2VsYSwgQm9rYXJvIGFyZSBzaXR1YXRlZCBpbiBhIHJlZ2lvbiB0aGF0IHNwcmVhZHMgb3ZlciBmb3VyIHN0YXRlcyAtIFdlc3QgQmVuZ2FsLCBKaGFya2hhbmQsIE9kaXNoYSAgIGFuZCBDaGhhdHRpc2dhcmguIEJoYWRyYXZhdGkgYW5kIFZpamF5IE5hZ2FyIGluIEthcm5hdGFrYSwgVmlzaGFraGFwYXRuYW0gaW4gQW5kaHJhIFByYWRlc2gsIGFuZCBTYWxlbSAgIGluIFRhbWlsIE5hZHUgYXJlIG90aGVyIGltcG9ydGFudCBzdGVlbCBjZW50cmVzIHV0aWxpc2luZyBsb2NhbCByZXNvdXJjZXMuICAgICBTb3VyY2U6IE5DRVJUIENsYXNzIDEyIC0gRnVuZGFtZW50YWxzIG9mIEh1bWFuIEdlb2dyYXBoeSAtIENoYXB0ZXIgNiBTZWNvbmRhcnkgQWN0aXZpdGllcyBQIDUxLiAgICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4vbmNlcnRzL2wvaGVzczQwNS5wZGYgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only    ",
        "option2" : "2, 3, 4 and 5 only    ",
        "option3" : "1, 2, 4 and 5 only    ",
        "option4" : "1, 2, 3, 4 and 5      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 21,
      "question" : "Which of the following are the  characteristics of modern large- scale  Manufacturing?    1.  Automation leading to exclusion of human  input.    2.  Concentration in a few regions.   3.  Focus on generalisation of all skills for  producing more goods with low costs.    4.  Factories produce only a few pieces which  are made to order.   Select the correct answer from the code given  below:     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgTGFyZ2Utc2NhbGUgbWFudWZhY3R1cmluZyBhbGxvd3MgZm9yIGdvb2RzIHRvIGJlIG1hc3MtcHJvZHVjZWQgdXNpbmcgYXNzZW1ibHkgbGluZSBwcm9jZXNzZXMgYW5kICAgYWR2YW5jZWQgdGVjaG5vbG9naWVzIGFzIGNvcmUgYXNzZXRzLiBFZmZpY2llbnQgbWFudWZhY3R1cmluZyB0ZWNobmlxdWVzIGVuYWJsZSBtYW51ZmFjdHVyZXJzIHRvIHRha2UgICBhZHZhbnRhZ2Ugb2YgZWNvbm9taWVzIG9mIHNjYWxlLCBwcm9kdWNpbmcgbW9yZSB1bml0cyBhdCBhIGxvd2VyIGNvc3QuICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgTWVjaGFuaXNhdGlvbiBpcyBhbiBpbXBvcnRhbnQgY2hhcmFjdGVyaXN0aWMgb2YgbW9kZXJuIG1hbnVmYWN0dXJpbmcuICAgTWVjaGFuaXNhdGlvbiByZWZlcnMgdG8gdXNpbmcgZ2FkZ2V0cyB3aGljaCBhY2NvbXBsaXNoIHRhc2tzLiBBdXRvbWF0aW9uICh3aXRob3V0IGFpZCBvZiBodW1hbiAgIHRoaW5raW5nIGR1cmluZyB0aGUgbWFudWZhY3R1cmluZyBwcm9jZXNzKSBpcyB0aGUgYWR2YW5jZWQgc3RhZ2Ugb2YgbWVjaGFuaXNhdGlvbi4gQXV0b21hdGljIGZhY3RvcmllcyAgIHdpdGggZmVlZGJhY2sgYW5kIGNsb3NlZCBsb29wIGNvbXB1dGVyIGNvbnRyb2wgc3lzdGVtcyB3aGVyZSBtYWNoaW5lcyBhcmUgZGV2ZWxvcGVkIHRvICd0aGluaycsIGhhdmUgICBzcHJ1bmcgdXAgYWxsIG92ZXIgdGhlIHdvcmxkLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVW5ldmVuIGdlb2dyYXBoaWMgZGlzdHJpYnV0aW9uIGlzIGFuIGltcG9ydGFudCBmZWF0dXJlIG9mIGxhcmdlLXNjYWxlICAgbWFudWZhY3R1cmluZy4gTWFqb3IgY29uY2VudHJhdGlvbnMgb2YgbW9kZXJuIG1hbnVmYWN0dXJpbmcgaGF2ZSBmbG91cmlzaGVkIGluIGEgZmV3IG51bWJlcnMgb2YgICBwbGFjZXMuIFRoZXNlIGNvdmVyIGxlc3MgdGhhbiAxMCBwZXIgY2VudCBvZiB0aGUgd29ybGQncyBsYW5kIGFyZWEuIFRoZXNlIG5hdGlvbnMgaGF2ZSBiZWNvbWUgdGhlIGNlbnRyZXMgICBvZiBlY29ub21pYyBhbmQgcG9saXRpY2FsIHBvd2VyLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBPcmdhbmlzYXRpb25hbCBzdHJ1Y3R1cmUgaGFzIGFsc28gY2hhbmdlZCBpbiB0aGUgbW9kZXJuIG1hbnVmYWN0dXJpbmcuIE5vdyAgIGV4dHJlbWUgc3BlY2lhbGlzYXRpb24gYW5kIGRpdmlzaW9uIG9mIGxhYm91ciBmb3IgcHJvZHVjaW5nIG1vcmUgZ29vZHMgd2l0aCBsZXNzIGVmZm9ydCBhbmQgbG93IGNvc3RzICAgaGF2ZSBiZWNvbWUgdGhlIG5vcm0uIFNwZWNpYWxpc2F0aW9uIGlzIHRoZSBzZWdtZW50aW5nIG9mIGxhcmdlLCBsYWJvdXItaW50ZW5zaXZlIHRhc2tzIGludG8gd29ya2FibGUgICBzdWJ0YXNrcyB0aGF0IG1heSBiZSBkb25lIGJ5IGRpZmZlcmVudCB3b3JrZXJzLiBHZW5lcmFsaXphdGlvbiBmb2N1c2VzIG9uIGJlaW5nIHByb2ZpY2llbnQgaW4gaW4gYSB3aWRlICAgcmFuZ2Ugb2YgZnVuY3Rpb25zIHJhdGhlciB0aGFuIGVuZ2FnaW5nIGluIGEgc3BlY2lmaWMgdGFzay4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBVbmRlciB0aGUgdHJhZGl0aW9uYWwgJ2NyYWZ0JyBtZXRob2QgZmFjdG9yaWVzIHByb2R1Y2Ugb25seSBhIGZldyBwaWVjZXMgd2hpY2ggICBhcmUgbWFkZS10by1vcmRlci4gU28sIHRoZSBjb3N0cyBhcmUgaGlnaC4gT24gdGhlIG90aGVyIGhhbmQsIG1hc3MgcHJvZHVjdGlvbiBpbnZvbHZlcyBwcm9kdWN0aW9uIG9mICAgbGFyZ2UgcXVhbnRpdGllcyBvZiBzdGFuZGFyZGlzZWQgcGFydHMgYnkgZWFjaCB3b3JrZXIgcGVyZm9ybWluZyBvbmx5IG9uZSB0YXNrIHJlcGVhdGVkbHkuICAgICAgS25vd2xlZGdlIEJhc2U6ICAgICAgIFRlY2hub2xvZ2ljYWwgaW5ub3ZhdGlvbnMgdGhyb3VnaCByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgc3RyYXRlZ3kgYXJlIGFuIGltcG9ydGFudCBhc3BlY3Qgb2YgbW9kZXJuICAgbWFudWZhY3R1cmluZyBmb3IgcXVhbGl0eSBjb250cm9sLCBlbGltaW5hdGluZyB3YXN0ZSBhbmQgaW5lZmZpY2llbmN5LCBhbmQgY29tYmF0aW5nIHBvbGx1dGlvbi4gICAgIE1vZGVybiBtYW51ZmFjdHVyaW5nIGlzIGNoYXJhY3RlcmlzZWQgYnkgYSBjb21wbGV4IG1hY2hpbmUgdGVjaG5vbG9neSwgdmFzdCBjYXBpdGFsLCBsYXJnZSBvcmdhbmlzYXRpb25zICAgYW5kIGV4ZWN1dGl2ZSBidXJlYXVjcmFjeS4gICAgIFNvdXJjZTogICBOQ0VSVCBDbGFzcyAxMiAtIEZ1bmRhbWVudGFscyBvZiBIdW1hbiBHZW9ncmFwaHkgLSBDaGFwdGVyIDYgU2Vjb25kYXJ5IEFjdGl2aXRpZXMgUCA0NSwgNDYuICAgICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 4 only    ",
        "option3" : "1, 3 and 4 only    ",
        "option4" : "1, 2, 3 and 4     "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the Jute industry,  consider the following statements:    1. India is the largest producer and exporter of  the jute in the world.    2.  Jute mills are facing financial losses due to  higher procurement prices of raw material.    3.  In recent periods, West Bengal has seen a  rise in number of the Jute mills due to  various government initiatives.    Which of the statements given above is/are  correct?      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBJbmRpYSBpcyB0aGUgbGFyZ2VzdCBwcm9kdWNlciBvZiBqdXRlIGZvbGxvd2VkIGJ5IEJhbmdsYWRlc2ggYW5kIENoaW5hLiBIb3dldmVyLCAgIGluIHRlcm1zIG9mIHRyYWRlLCBCYW5nbGFkZXNoIHRha2VzIHRoZSBsZWFkIGFjY291bnRpbmcgZm9yIDc1JSBvZiB0aGUgZ2xvYmFsIGp1dGUgZXhwb3J0cyBpbiBjb21wYXJpc29uICAgdG8gSW5kaWEncyA3JS4gVGhpcyBjYW4gYmUgYXR0cmlidXRlZCB0byB0aGUgZmFjdCB0aGF0IEluZGlhIGxhZ3MgYmVoaW5kIEJhbmdsYWRlc2ggaW4gcHJvZHVjaW5nIHN1cGVyaW9yICAgcXVhbGl0eSBqdXRlIGZpYmVyIGR1ZSB0byBpbmZyYXN0cnVjdHVyYWwgY29uc3RyYWludHMgcmVsYXRlZCB0byByZXR0aW5nIGFuZCBsYWNrIG9mIGF2YWlsYWJpbGl0eSBvZiBjZXJ0aWZpZWQgICBzZWVkcy4gRnVydGhlciwgQmFuZ2xhZGVzaCBwcm92aWRlcyBjYXNoIHN1YnNpZGllcyBmb3IgdmFyaWVkIHNlbWktZmluaXNoZWQgYW5kIGZpbmlzaGVkIGp1dGUgcHJvZHVjdHMuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBKdXRlIG1pbGxzIGFyZSBwcm9jdXJpbmcgcmF3IGp1dGUgYXQgcHJpY2VzIGhpZ2hlciB0aGFuIHdoYXQgdGhleSBhcmUgc2VsbGluZyBhZnRlciAgIHByb2Nlc3NpbmcuIEp1dGUgbWlsbHMgYWNxdWlyZSB0aGVpciByYXcgbWF0ZXJpYWwgdGhyb3VnaCBtaWRkbGVtZW4gb3IgdHJhZGVycy4gIFRoZSBnb3Zlcm5tZW50IGhhcyBhICAgZml4ZWQgTWluaW11bSBTdXBwb3J0IFByaWNlIChNU1ApIGZvciByYXcganV0ZSBwcm9jdXJlbWVudCBmcm9tIGZhcm1lcnMgd2hpY2ggaXMgUnMuNCw3NTAgcGVyIHF1aW50YWwgZm9yICAgdGhlIDIwMjItMjMgc2Vhc29uLiBIb3dldmVyLCBqdXRlIHJlYWNoZXMgbWlsbCBhdCBScy43LDIwMCBwZXIgcXVpbnRhbCB0aGF0IGlzLCBScy43MDAgbW9yZSB0aGFuIHRoZSBScy42LDUwMCBwZXIgICBxdWludGFsIGNhcCBmb3IgdGhlIGZpbmFsIHByb2R1Y3QuIFRoaXMgaXMgd2h5IHRoZSBKdXRlIG1pbGxzIGFyZSBmYWNpbmcgbG9zc2VzLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBXZXN0IEJlbmdhbCBpcyBleHBlcmllbmNpbmcgYSBjcmlzaXMgdGhhdCBoYXMgbGVkIHRvIHRoZSBjbG9zdXJlIG9mIHNldmVyYWwgSnV0ZSAgIE1pbGxzLiBBcHByb3hpbWF0ZWx5IDYwIG1pbGxzIG9wZXJhdGluZyBpbiB0aGUgU3RhdGUsIDE1IGhhZCBzaHV0IGRvd24gYmVjYXVzZSBvZiB0aGUgY3Jpc2lzLiAgICBUaGlzIGlzIGJlY2F1c2Ugb2YgaGlnaGVyIGNvc3Qgb2YgcmF3IG1hdGVyaWFscywgaW1wYWN0IG9mIEN5Y2xvbmUgQW1waGFuIHRoYXQgbGVkIHRvIGxvd2VyIGFjcmVhZ2UsIGxvd2VyICAgcXVhbGl0eSBvZiBqdXRlIGZpYmVyIGFuZCBjb21wZXRpdGlvbiBmcm9tIEJhbmdsYWRlc2guICAgICBTb3VyY2U6ICAgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20gaGUtcmVjZW50LXdvZXMtb2YtdGhlLWp1dGUtaW5kdXN0cnktaW4td2VzdC1iZW5nYWwvICAgICBUaGUgcmVjZW50IHdvZXMgb2YgdGhlIGp1dGUgaW5kdXN0cnkgaW4gV2VzdCBCZW5nYWwgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "1 and 3 only    ",
        "option4" : "2 and 3 only     "
      }
    },
    {
      "index" : 23,
      "question" : "With reference to continental shelves,  consider the following statements:   1.  Continental shelves are major source of oil  deposits around the world.  2.   Continental shelves can be formed either  due to emergence of continent or  submergence of sea.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBDb250aW5lbnRhbCBTaGVsZiBpcyB0aGUgZ2VudGx5IHNsb3Bpbmcgc2Vhd2FyZCBleHRlbnNpb24gb2YgY29udGluZW50YWwgcGxhdGUuIFRoZXNlIGV4dGVuZGVkIG1hcmdpbnMgb2YgICBlYWNoIGNvbnRpbmVudCBhcmUgb2NjdXBpZWQgYnkgcmVsYXRpdmVseSBzaGFsbG93IHNlYXMgYW5kIGd1bGZzLiBHcmFkaWVudCBvZiBjb250aW5lbnRhbCBpcyBvZiAxwrAgb3IgZXZlbiAgIGxlc3MuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQ29udGluZW50YWwgc2hlbHZlcyBhcmUgbWFqb3Igc291cmNlIG9mIG9pbCBkZXBvc2l0cyBhcm91bmQgdGhlIHdvcmxkLiBNb3JlIHRoYW4gICBhIHRoaXJkIG9mIHRoZSBvaWwgYW5kIGdhcyBleHRyYWN0ZWQgd29ybGR3aWRlIGNvbWVzIGZyb20gb2Zmc2hvcmUgc291cmNlcy4gUGV0cm9sZXVtIGlzIG5vdCBkaXN0cmlidXRlZCAgIGV2ZW5seSBhcm91bmQgdGhlIHdvcmxkLiBTbGlnaHRseSBsZXNzIHRoYW4gaGFsZiBvZiB0aGUgd29ybGQncyBwcm92ZW4gcmVzZXJ2ZXMgYXJlIGxvY2F0ZWQgaW4gdGhlIE1pZGRsZSAgIEVhc3QuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBDb250aW5lbnRhbCBzaGVsdmVzIGNhbiBiZSBmb3JtZWQgZWl0aGVyIGR1ZSB0byBlbWVyZ2VuY2Ugb2Ygc2VhIG9yICAgc3VibWVyZ2VuY2Ugb2YgY29udGluZW50LiBQYXJ0IG9mIGEgY29udGluZW50IG1heSBkcm9wIGluIGVsZXZhdGlvbiwgYmVjb21pbmcgYSBwb3J0aW9uIG9mIGNvbnRpbmVudGFsICAgc2hlbGYgdGhhdCBib3JkZXJzIHRoZSBkcnkgbWFpbmxhbmQuIEF0IHRoZSBzYW1lIHRpbWUsIHNlYSBsZXZlbCBjYW4gYWxzbyByaXNlLCBzdWJtZXJnaW5nIGEgcG9ydGlvbiBvZiB0aGUgICBjb250aW5lbnQuICAgU291cmNlOiBodHRwczovL3d3dy5icml0YW5uaWNhLmNvbS9zY2llbmNlL3BldHJvbGV1bS9Xb3JsZC1kaXN0cmlidXRpb24tb2Ytb2lsICAgIGh0dHBzOi8vd29ybGRvY2VhbnJldmlldy5jb20vZW4vd29yLTEvZW5lcmd5L2Zvc3NpbC1mdWVscy8gICAgaHR0cDovL3dvcmxkbGFuZGZvcm1zLmNvbS9sYW5kZm9ybXMvY29udGluZW50YWwtc2hlbGYvICAgIGh0dHA6Ly93d3cuZ2VvbC1hbXUub3JnL25vdGVzL2JsOC0xLTEuaHRtICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements  regarding the distribution of annual range of  temperature:  1.  It is maximum over the vast interiors of  continents of the Northern Hemisphere.  2.  It is the least over a narrow belt at the  equator.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBhbm51YWwgcmFuZ2UgaXMgZGVmaW5lZCBhcyB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBob3R0ZXN0IGFuZCBjb2xkZXN0IG1vbnRocywgdGFraW5nIG1vbnRobHkgICBtZWFuIHRlbXBlcmF0dXJlcyBpbiBlYWNoIGNhc2UuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSXQgaXMgbWF4aW11bSBvdmVyIHRoZSB2YXN0IGludGVyaW9ycyBvZiBjb250aW5lbnRzIG9mIHRoZSBOb3J0aGVybiBIZW1pc3BoZXJlLiBJdCAgIGlzIHRoZSBtb3N0IHByb25vdW5jZWQgb3ZlciB0aGUgU2liZXJpYW4gUGxhaW5zLiBUaGlzIGlzIGR1ZSB0byB0aGUgZWZmZWN0IG9mIENvbnRpbmVudGFsaXR5LiBUaGlzIG1lYW5zIHRoYXQgICBsYW5kIGhlYXRzIGFuZCBjb29scyBtdWNoIGZhc3RlciB0aGFuIHdhdGVyICh3aGljaCBoYXMgYSB2ZXJ5IGhpZ2ggc3BlY2lmaWMgaGVhdCBjYXBhY2l0eSksIHNvIHRoZSAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICB0ZW1wZXJhdHVyZXMgKGFubnVhbCByYW5nZSBvZiB0ZW1wZXJhdHVyZSkgdmFyaWVzIGdyZWF0bHkgb3ZlciBsYW5kIHdpdGggY2hhbmdpbmcgc2Vhc29ucyAoZHVlIHRvIGNoYW5nZSAgIGluIGFtb3VudCBvZiBpbnNvbGF0aW9uIGRpZSB0byBzcGhlcmljYWwgc2hhcGUgb2YgZWFydGggYW5kIGEgdGlsdGVkIGF4aXMpLCBtdWNoIG1vcmUgdGhhbiB0aGF0IG92ZXIgb2NlYW5zLCAgIGVzcGVjaWFsbHkgYXMgb25lIGdvZXMgdG8gdGhlIGludGVyaW9yIG9mIHRoZSBjb250aW5lbnRhbCBsYW5kbWFzcy4gQXMgdGhlIE5vcnRoZXJuIEhlbWlzcGhlcmUgaGFzIG1vcmUgICBsYW5kbWFzcyBhbmQgdGhlIFNvdXRoZXJuIEhlbWlzcGhlcmUgaGFzIGNvbXBhcmF0aXZlbHkgbW9yZSBvY2VhbnMsIHRoZSBjb250aW5lbnRhbCBpbnRlcmlvciBvZiB0aGUgICBOb3J0aGVybiBIZW1pc3BoZXJlLCBsaWtlIHRoZSBTaWJlcmlhbiBQbGFpbnMsIGRpc3BsYXlzIHRoZSBncmVhdGVzdCBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUuICAgIFRoZSBOb3J0aGVybiBBdGxhbnRpYyBPY2VhbiBpcyB3YXJtZXIgZHVlIHRvIHRoZSBpbmZsdWVuY2Ugb2Ygd2FybSBvY2VhbiBjdXJyZW50cyBsaWtlIHRoZSBHdWxmIFN0cmVhbSAgIGFuZCB0aGUgTm9ydGggQXRsYW50aWMgRHJpZnQsIHNvIHRoZSB0ZW1wZXJhdHVyZSByYW5nZSBvdmVyIGl0IGlzIG5vdCBtdWNoIGNvbXBhcmVkIHRvIGNvbnRpbmVudGFsICAgaW50ZXJpb3JzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBhcmVhcyB3aXRoaW4gYSBuYXJyb3cgYmVsdCBhdCBFcXVhdG9yIChyb3VnaGx5IGJldHdlZW4gMjAgZGVncmVlcyBTb3V0aCBhbmQgICAxNSBkZWdyZWVzIE5vcnRoKSBoYXZlIHRoZSBsZWFzdCBhbm51YWwgcmFuZ2Ugb2YgdGVtcGVyYXR1cmUgKGFyb3VuZCAzIGRlZ3JlZXMgQ2Vsc2l1cykuIFRoaXMgaXMgYmVjYXVzZSAgIHRoZXNlIHBsYWNlcyBkdWUgdG8gYmVpbmcgbmVhciBFcXVhdG9yIGhhdmUgYWxtb3N0IHRoZSBzYW1lIGFtb3VudCBvZiBpbnNvbGF0aW9uIGFuZCBzYW1lIHR5cGUgb2YgICB3ZWF0aGVyIHRocm91Z2hvdXQgdGhlIHllYXIsIHNvIHRoZSB0ZW1wZXJhdHVyZSBpcyBtb3JlIG9yIGxlc3MgdGhlIHNhbWUgdGhyb3VnaG91dCB0aGUgeWVhciAobm8gICBleHRyZW1lcyBvZiBob3Qgb3IgY29sZCksIHRodXMgZ2l2aW5nIHJpc2UgdG8gdmVyeSBsb3cgYW5udWFsIHJhbmdlcyBvZiB0ZW1wZXJhdHVyZS4gICBTb3VyY2U6IENsYXNzIFhJIE5DRVJUIEZ1bmRhbWVudGFscyBvZiBQaHlzaWNhbCBHZW9ncmFwaHksIENoLTkgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to vertical temperature  distribution of oceans, consider the following  statements:  1.  The rate of decrease of temperature with  depths is greater at the equator than at the  poles.  2.  The maximum temperature of the oceans  water is at the surface.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSByYXRlIG9mIGRlY3JlYXNlIG9mIHRlbXBlcmF0dXJlIHdpdGggZGVwdGhzIGlzIGdyZWF0ZXIgYXQgdGhlIGVxdWF0b3IgdGhhbiBhdCAgIHRoZSBwb2xlcy4gVGhvdWdoIHRoZSBzdXJmYWNlIHRlbXBlcmF0dXJlIG9mIHRoZSBzZWFzIGRlY3JlYXNlcyBmcm9tIGVxdWF0b3IgdG93YXJkcyB0aGUgcG9sZXMgYnV0IHRoZSAgIHRlbXBlcmF0dXJlIGF0IHRoZSBvY2VhbiBib3R0b21zIGlzIHVuaWZvcm0gZnJvbSB0aGUgZXF1YXRvciB0b3dhcmRzIHRoZSBwb2xlLCB3aGljaCBtZWFucyB0aGF0IHRoZSAgIHJhdGUgb2YgZGVjcmVhc2Ugb2YgdGVtcGVyYXR1cmUgd2l0aCBpbmNyZWFzaW5nIGRlcHRoIGlzIG1vcmUgcmFwaWQgbmVhciB0aGUgZXF1YXRvciB0aGFuIHRvd2FyZHMgdGhlICAgcG9sZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG1heGltdW0gdGVtcGVyYXR1cmUgb2YgdGhlIG9jZWFucyBpcyBhbHdheXMgYXQgdGhlaXIgc3VyZmFjZXMgYmVjYXVzZSB0aGV5ICAgZGlyZWN0bHkgcmVjZWl2ZSB0aGUgaGVhdCBmcm9tIHRoZSBzdW4gYW5kIHRoZSBoZWF0IGlzIHRyYW5zbWl0dGVkIHRvIHRoZSBsb3dlciBzZWN0aW9ucyBvZiB0aGUgb2NlYW5zICAgdGhyb3VnaCB0aGUgcHJvY2VzcyBvZiBjb252ZWN0aW9uLiAgIEtub3dsZWRnZSBCYXNlOiAgICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjEzLnBkZiAgICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 26,
      "question" : "With reference to movement of tides,  which of the forces is responsible for tidal  movement?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBwZXJpb2RpY2FsIHJpc2UgYW5kIGZhbGwgb2YgdGhlIHNlYSBsZXZlbCwgb25jZSBvciB0d2ljZSBhIGRheSwgbWFpbmx5IGR1ZSB0byB0aGUgYXR0cmFjdGlvbiBvZiB0aGUgc3VuIGFuZCAgIHRoZSBtb29uLCBpcyBjYWxsZWQgYSB0aWRlLiAgICBPcHRpb24gYiBpcyBjb3JyZWN0IEdyYXZpdGF0aW9uYWwgcHVsbCBvZiBzdW4gYW5kIG1vb24gYXJlIHRoZSBmb3JjZXMgcmVzcG9uc2libGUgZm9yIG1vdmVtZW50IG9mIHRpZGVzLiAgICBUaG91Z2ggd2luZHMsIHRlbXBlcmF0dXJlIGRpZmZlcmVuY2UgYXJlIHJlc3BvbnNpYmxlIGZhY3RvcnMgaW4gZm9ybWF0aW9uIGFuZCBtb3ZlbWVudCBvZiBvY2VhbmljICAgY3VycmVudHMgYnV0IHRoZXkgYXJlIG5vdCByZXNwb25zaWJsZSBmb3IgZm9ybWF0aW9uIG9mIHRpZGVzLiAgICBUaGUgbW9vbidzIGdyYXZpdGF0aW9uYWwgcHVsbCB0byBhIGdyZWF0IGV4dGVudCBhbmQgdG8gYSBsZXNzZXIgZXh0ZW50IHRoZSBzdW4ncyBncmF2aXRhdGlvbmFsIHB1bGwsIGFyZSB0aGUgICBtYWpvciBjYXVzZXMgZm9yIHRoZSBvY2N1cnJlbmNlIG9mIHRpZGVzLiBBbm90aGVyIGZhY3RvciBpcyBjZW50cmlmdWdhbCBmb3JjZSwgd2hpY2ggaXMgdGhlIGZvcmNlIHRoYXQgYWN0cyAgIHRvIGNvdW50ZXIgYmFsYW5jZSB0aGUgZ3Jhdml0eS4gVG9nZXRoZXIsIHRoZSBncmF2aXRhdGlvbmFsIHB1bGwgYW5kIHRoZSBjZW50cmlmdWdhbCBmb3JjZSBhcmUgcmVzcG9uc2libGUgZm9yICAgY3JlYXRpbmcgdGhlIHR3byBtYWpvciB0aWRhbCBidWxnZXMgb24gdGhlIGVhcnRoICAgTW92ZW1lbnQgb2Ygd2F0ZXIgY2F1c2VkIGJ5IG1ldGVvcm9sb2dpY2FsIGVmZmVjdHMgbGlrZSB3aW5kcyBhbmQgYXRtb3NwaGVyaWMgcHJlc3N1cmUgICBDaGFuZ2VzLCBhcmUgY2FsbGVkIHN1cmdlcy4gU3VyZ2VzIGFyZSBub3QgdGlkZWQgYW5kIGFyZSBub3QgcmVndWxhciBsaWtlIHRpZGVzLiAgIFNvdXJjZTogICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjE0LnBkZiBwYWdlIDMgICBTYXZpbmRyYSBTaW5naCBjaGFwdGVyIDI4IHBhZ2UgMzgwICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Winds  ",
        "option2" : "Gravitational pull of Sun  ",
        "option3" : "Salinity difference between the surface   zones and deep zones of the ocean  ",
        "option4" : "Temperature difference at surface of the   ocean   "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following statements  regarding Fog and Mist is/ are correct?  1.  Fogs are wetter compared to mists.  2.  Mists are prevalent where warm currents of  air come in contact with cold currents.   Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogRm9ncyBhcmUgZHJpZXIgY29tcGFyZWQgdG8gbWlzdHMuIEJvdGggYXJlIGdyb3VuZCBsZXZlbCBjbG91ZHMsIGZvcm1lZCB3aGVuICAgd2F0ZXIgY29uZGVuc2VzIGFyb3VuZCBudWNsZWkgaW4gYSBsYXJnZSBtYXNzIG9mIGFpciBuZWFyIHRoZSBzdXJmYWNlIG9mIGVhcnRoLiBIb3dldmVyLCBtaXN0IGNvbnRhaW5zICAgbXVjaCBtb3JlIG1vaXN0dXJlLCBhcyBpbiBtaXN0IGVhY2ggbnVjbGVpIGNvbnRhaW5zIGEgdGhpY2tlciBsYXllciBvZiBtb2lzdHVyZSBhcm91bmQgaXQsIGNvbXBhcmVkIHRvICAgYSBmb2cuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBGb2dzIGFyZSBnZW5lcmFsbHkgcHJldmFsZW50IHdoZXJlIHdhcm0gY3VycmVudHMgb2YgYWlyIGNvbWUgaW4gY29udGFjdCB3aXRoICAgY29sZCBjdXJyZW50cy4gT24gdGhlIG90aGVyIGhhbmQsIG1pc3RzIGFyZSBnZW5lcmFsbHkgZm9ybWVkIG9uIG1vdW50YWluIGFzIHRoZSByaXNpbmcgd2FybSBhaXIgdXAgdGhlICAgc2xvcGVzIG1lZXQgYSBjb2xkIHN1cmZhY2UuICAgIEtub3dsZWRnZSBCYXNlOiBNaXN0IGlzIGxlc3MgZGVuc2UgY29tcGFyZWQgdG8gZm9nIGFuZCBjYXVzZXMgbGVzc2VyIHJlZHVjZWQgdmlzaWJpbGl0eSB0aGFuIGZvZyBkb2VzLiAgIFNvdXJjZTogQ2xhc3MgWEkgTkNFUlQgRnVuZGFtZW50YWxzIG9mIFBoeXNpY2FsIEdlb2dyYXBoeSwgQ2gtMTEgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 28,
      "question" : "These clouds can form along cold fronts  as a result of forced convection. The base of the  cloud is often flat, with a very dark wall-like  feature hanging underneath. These are the only  cloud type that can produce hail, thunder and  lightning.   Which of the following type of cloud is  described in the above paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEN1bXVsb25pbWJ1cyBjbG91ZHMgZXh0ZW5kIGhpZ2ggaW50byB0aGUgc2t5IGluIHRvd2VycyBvciBwbHVtZXMuIFRoZXkgYXJlIGNvbW1vbmx5IGtub3duIGFzICAgdGh1bmRlcmNsb3VkcyBhcyB0aGUgY3VtdWxvbmltYnVzIGlzIHRoZSBvbmx5IGNsb3VkIHR5cGUgdGhhdCBjYW4gcHJvZHVjZSBoYWlsLCB0aHVuZGVyIGFuZCBsaWdodG5pbmcuICAgVGhlIGJhc2Ugb2YgdGhlIGNsb3VkIGlzIG9mdGVuIGZsYXQsIHdpdGggYSB2ZXJ5IGRhcmsgd2FsbC1saWtlIGZlYXR1cmUgaGFuZ2luZyB1bmRlcm5lYXRoLCBhbmQgbWF5IG9ubHkgbGllICAgYSBmZXcgaHVuZHJlZCBmZWV0IGFib3ZlIHRoZSBFYXJ0aCdzIHN1cmZhY2UuICAgIEN1bXVsb25pbWJ1cyBjbG91ZHMgYXJlIGJvcm4gdGhyb3VnaCBjb252ZWN0aW9uLiBUaGV5IGNhbiBhbHNvIGZvcm0gYWxvbmcgY29sZCBmcm9udHMgYXMgYSByZXN1bHQgb2YgICBmb3JjZWQgY29udmVjdGlvbiwgd2hlcmUgbWlsZGVyIGFpciBpcyBmb3JjZWQgdG8gcmlzZSBvdmVyIHRoZSBpbmNvbWluZyBjb2xkIGFpci4gICAgU291cmNlOiBodHRwczovL3d3dy5tZXRvZmZpY2UuZ292LnVrL3dlYXRoZXIvbGVhcm4tYWJvdXQvd2VhdGhlciB5cGVzLW9mLXdlYXRoZXIvY2xvdWRzL2xvdy0gIGxldmVsLWNsb3Vkcy9jdW11bG9uaW1idXMgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Cumulonimbus  ",
        "option2" : "Nimbostratus  ",
        "option3" : "Stratocumulus  ",
        "option4" : "Cirrostratus    "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements with  reference to transfer of energy through  Conduction, Convection and Advection:  1.  Convective transfer of energy is confined  only to the troposphere  2.  Conduction is important in heating the  lower layers of the atmosphere  3.  In middle latitudes, most of diurnal variation  in daily weather is caused by Conduction  alone  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZXJlIGFyZSBkaWZmZXJlbnQgd2F5cyBvZiBoZWF0aW5nIGFuZCBjb29saW5nIG9mIHRoZSBhdG1vc3BoZXJlLiAgICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgVGhlIGVhcnRoIGFmdGVyIGJlaW5nIGhlYXRlZCBieSBpbnNvbGF0aW9uIHRyYW5zbWl0cyB0aGUgaGVhdCB0byB0aGUgYXRtb3NwaGVyaWMgbGF5ZXJzIG5lYXIgdG8gdGhlIGVhcnRoICAgaW4gbG9uZyB3YXZlIGZvcm0uICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBwcm9jZXNzIG9mIHZlcnRpY2FsIGhlYXRpbmcgb2YgdGhlIGF0bW9zcGhlcmUgaXMga25vd24gYXMgY29udmVjdGlvbi4gICBUaGUgYWlyIGluIGNvbnRhY3Qgd2l0aCB0aGUgZWFydGggcmlzZXMgdmVydGljYWxseSBvbiBoZWF0aW5nIGluIHRoZSBmb3JtIG9mIGN1cnJlbnRzIGFuZCBmdXJ0aGVyIHRyYW5zbWl0cyAgIHRoZSBoZWF0IG9mIHRoZSBhdG1vc3BoZXJlLiAgICBUaGUgY29udmVjdGl2ZSB0cmFuc2ZlciBvZiBlbmVyZ3kgaXMgY29uZmluZWQgb25seSB0byB0aGUgdHJvcG9zcGhlcmUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBhaXIgaW4gY29udGFjdCB3aXRoIHRoZSBsYW5kIGdldHMgaGVhdGVkIHNsb3dseSBhbmQgdGhlIHVwcGVyIGxheWVycyBpbiBjb250YWN0ICAgd2l0aCB0aGUgbG93ZXIgbGF5ZXJzIGFsc28gZ2V0IGhlYXRlZC4gVGhpcyBwcm9jZXNzIGlzIGNhbGxlZCBjb25kdWN0aW9uLiAgICBDb25kdWN0aW9uIHRha2VzIHBsYWNlIHdoZW4gdHdvIGJvZGllcyBvZiB1bmVxdWFsIHRlbXBlcmF0dXJlIGFyZSBpbiBjb250YWN0IHdpdGggb25lIGFub3RoZXIsIHRoZXJlICAgaXMgYSBmbG93IG9mIGVuZXJneSBmcm9tIHRoZSB3YXJtZXIgdG8gY29vbGVyIGJvZHkuICAgIFRoZSB0cmFuc2ZlciBvZiBoZWF0IGNvbnRpbnVlcyB1bnRpbCBib3RoIHRoZSBib2RpZXMgYXR0YWluIHRoZSBzYW1lIHRlbXBlcmF0dXJlIG9yIHRoZSBjb250YWN0IGlzICAgYnJva2VuLiAgICBDb25kdWN0aW9uIGlzIGltcG9ydGFudCBpbiBoZWF0aW5nIHRoZSBsb3dlciBsYXllcnMgb2YgdGhlIGF0bW9zcGhlcmUuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgdHJhbnNmZXIgb2YgaGVhdCB0aHJvdWdoIGhvcml6b250YWwgbW92ZW1lbnQgb2YgYWlyIGlzIGNhbGxlZCBhZHZlY3Rpb24uICAgIEhvcml6b250YWwgbW92ZW1lbnQgb2YgdGhlIGFpciBpcyByZWxhdGl2ZWx5IG1vcmUgaW1wb3J0YW50IHRoYW4gdGhlIHZlcnRpY2FsIG1vdmVtZW50LiAgICBJbiBtaWRkbGUgbGF0aXR1ZGVzLCBtb3N0IG9mIGRpdXJuYWwgKGRheSBhbmQgbmlnaHQpIHZhcmlhdGlvbiBpbiBkYWlseSB3ZWF0aGVyIGFyZSBjYXVzZWQgYnkgYWR2ZWN0aW9uICAgYWxvbmUuICAgIEluIHRyb3BpY2FsIHJlZ2lvbnMgcGFydGljdWxhcmx5IGluIG5vcnRoZXJuIEluZGlhIGR1cmluZyBzdW1tZXIgc2Vhc29uIGxvY2FsIHdpbmRzIGNhbGxlZCAnbG9vJyBpcyB0aGUgICBvdXRjb21lIG9mIGFkdmVjdGlvbiBwcm9jZXNzLiAgICBTb3VyY2U6IE5DRVJUOiBGVU5EQU1FTlRBTFMgT0YgUEhZU0lDQUwgR0VPR1JBUEhZIC0gY2hhcHRlciA5LVNPTEFSIFJBRElBVElPTiwgSEVBVCAgIEJBTEFOQ0UgQU5EIFRFTVBFUkFUVVJFLSBwYWdlIDc2ICAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYva2VneTIwOS5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 30,
      "question" : "Which of the following is the correct  reason behind not experiencing strong upward  winds despite having a vertical pressure  gradient?  1.  Vertical pressure gradient is too small in  comparison to gravitational force.  2.  Vertical pressure gradient is balanced by a  nearly equal but opposite gravitational  force.   3.  There is no relation between vertical  pressure gradient and strong upward winds.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB2ZXJ0aWNhbCBwcmVzc3VyZSBncmFkaWVudCBmb3JjZSBpcyBtdWNoIGxhcmdlciB0aGFuIHRoYXQgb2YgdGhlIGhvcml6b250YWwgcHJlc3N1cmUgZ3JhZGllbnQuIEJ1dCBpdCBpcyAgIGdlbmVyYWxseSBiYWxhbmNlZCBieSBhIG5lYXJseSBlcXVhbCBidXQgb3Bwb3NpdGUgZ3Jhdml0YXRpb25hbCBmb3JjZS4gSGVuY2UsIHdlIGRvIG5vdCBleHBlcmllbmNlIHN0cm9uZyAgIHVwd2FyZCB3aW5kcy4gICBJbiB0aGUgbG93ZXIgYXRtb3NwaGVyZSB0aGUgcHJlc3N1cmUgZGVjcmVhc2VzIHJhcGlkbHkgd2l0aCBoZWlnaHQuIEl0IGlzIGNhbGxlZCBWZXJ0aWNhbCBwcmVzc3VyZSBncmFkaWVudCAgIG9yIFZlcnRpY2FsIFZhcmlhdGlvbiBvZiBQcmVzc3VyZS4gICBJbiBnZW5lcmFsLCB0aGUgYXRtb3NwaGVyaWMgcHJlc3N1cmUgZGVjcmVhc2VzIG9uIGF2ZXJhZ2UgYXQgdGhlIHJhdGUgb2YgYWJvdXQgMzQgbWlsbGliYXJzIGV2ZXJ5IDMwMCAgIG1ldHJlcyBvZiBoZWlnaHQuICAgVGhlIHByZXNzdXJlIGRlY3JlYXNlcyB3aXRoIGhlaWdodC4gQXQgYW55IGVsZXZhdGlvbiBpdCB2YXJpZXMgZnJvbSBwbGFjZSB0byBwbGFjZSwgYW5kIGl0cyB2YXJpYXRpb24gaXMgdGhlICAgcHJpbWFyeSBjYXVzZSBvZiBhaXIgbW90aW9uLCBpLmUuLCB3aW5kIHdoaWNoIG1vdmVzIGZyb20gaGlnaCBwcmVzc3VyZSBhcmVhcyB0byBsb3cgcHJlc3N1cmUgYXJlYXMuICAgQSByaXNpbmcgcHJlc3N1cmUgaW5kaWNhdGVzIGZpbmUsIHNldHRsZWQgd2VhdGhlciwgd2hpbGUgYSBmYWxsaW5nIHByZXNzdXJlIGluZGljYXRlcyB1bnN0YWJsZSBhbmQgY2xvdWR5ICAgd2VhdGhlci4gICBLbm93bGVkZ2UgQmFzZTogQXQgdGhlIGhlaWdodCBvZiBNdC4gRXZlcmVzdCwgdGhlIGFpciBwcmVzc3VyZSBpcyBhYm91dCB0d28tdGhpcmRzIGxlc3MgdGhhbiB3aGF0IGl0IGlzIGF0IHNlYSAgIGxldmVsLiAgIFRoZSBkZWNyZWFzZSBpbiBwcmVzc3VyZSB3aXRoIGFsdGl0dWRlLCBob3dldmVyLCBpcyBub3QgY29uc3RhbnQuIFNpbmNlIHRoZSBmYWN0b3JzIGNvbnRyb2xsaW5nIGFpciBkZW5zaXR5ICAgLSB0ZW1wZXJhdHVyZSwgYW1vdW50IG9mIHdhdGVyIHZhcG91ciBhbmQgZ3Jhdml0eSBhcmUgdmFyaWFibGUsIHRoZXJlIGlzIG5vIHNpbXBsZSByZWxhdGlvbnNoaXAgYmV0d2VlbiAgIGFsdGl0dWRlIGFuZCBwcmVzc3VyZS4gICBEdWUgdG8gZ3Jhdml0eSB0aGUgYWlyIGF0IHRoZSBzdXJmYWNlIGlzIGRlbnNlciBhbmQgaGVuY2UgaGFzIGhpZ2hlciBwcmVzc3VyZS4gU2luY2UgYWlyIHByZXNzdXJlIGlzICAgcHJvcG9ydGlvbmFsIHRvIGRlbnNpdHkgYXMgd2VsbCBhcyB0ZW1wZXJhdHVyZSwgaXQgZm9sbG93cyB0aGF0IGEgY2hhbmdlIGluIGVpdGhlciB0ZW1wZXJhdHVyZSBvciBkZW5zaXR5ICAgd2lsbCBjYXVzZSBhIGNvcnJlc3BvbmRpbmcgY2hhbmdlIGluIHRoZSBwcmVzc3VyZS4gICBzb3VyY2U6IGh0dHBzOi8vd3d3LnBtZmlhcy5jb20vcHJlc3N1cmUtYmVsdHMtcHJlc3N1cmUtc3lzdGVtcy1lcXVhdG9yaWFsLWxvdy1zdWItdHJvcGljYWwtaGlnaC0gIHN1Yi1wb2xhci1sb3ctcG9sYXItaGlnaC8gICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgTkNFUlQ6IEZVTkRBTUVOVEFMUyBPRiBQSFlTSUNBTCBHRU9HUkFQSFkgLSBDaGFwdGVyIDEwLSBBVE1PU1BIRVJJQyBDSVJDVUxBVElPTiBBTkQgICBXRUFUSEVSIFNZU1RFTVMtIHBhZ2UgODUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1 only   "
      }
    },
    {
      "index" : 31,
      "question" : "Mediterranean climate is suitable for  growing a large number of fruits, what are the  most suitable reasons for it:  1. Moderate and mild Climate  2. Long Summer Season  3. Moist winter season  Which of the above options are correct in the  above context?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1lZGl0ZXJyYW5lYW4gbGFuZHMgYXJlIGFsc28ga25vd24gYXMgb3JjaGFyZCBsYW5kcy4gTW9zdCBjaXRydXMgZnJ1aXRzIGFyZSBhY3R1YWxseSBuYXRpdmUgb2YgICBNZWRpdGVycmFuZWFuIHR5cGUgYXJlYXMuICAgIENpdHJ1cyBmcnVpdHMgKG9yYW5nZXMsIGxlbW9ucywgZ3JhcGVmcnVpdHMpLCBvbGl2ZXMgYW5kIGZpZ3MsIHdoaWNoIGhhdmUgbG9uZywgd2lkZS1zcHJlYWRpbmcgcm9vdHMsIHNjYW50ICAgZm9saWFnZSBhbmQgZnJ1aXRzIHdpdGggdGhpY2sgc2tpbnMgYXJlIGJlc3QgYWRhcHRlZCB0byB0aGUgTWVkaXRlcnJhbmVhbiB0eXBlIG9mIGNsaW1hdGUuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBNZWRpdGVycmFuZWFuIGNsaW1hdGUgaXMgbm90IGV4dHJlbWUgYW5kIGlzIHF1aXRlIG1vZGVyYXRlIGFzIGl0IGxpZXMgaW4gU3ViLSAgVHJvcGljcy4gRnJ1aXRzLCBlc3BlY2lhbGx5IGNpdHJ1cyBvbmVzIG5lZWQgc3Vuc2hpbmUgZm9yIGEgZmFpcmx5IGxvbmcgdGltZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBIZXJlIGFubnVhbCBwcmVjaXBpLXRhdGlvbiBjYW4gYmUgYXMgbG93IGFzIDM4MC02MzUgbW0gKDE1LTI1IGluY2hlcykgYW5kIHdoZXJlICAgc3VtbWVyIGRyb3VnaHRzIG1heSBsYXN0IGZvciBtb3JlIHRoYW4gc2l4IG1vbnRocy4gICBMb25nIHN1bW1lciBvZiBNZWRpdGVycmFuZWFuIGFyZWFzIGZhdm91cnMgdGhlIGdyb3d0aCBvZiB0aGVzZSBmcnVpdHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQ2l0cnVzIGZydWl0cyBncm93IHZlcnkgd2VsbCBpbiB0cm9waWNzIGFzIHRoZXkgbmVlZCBhZGVxdWF0ZSBtb2lzdHVyZSwgICB0ZW1wZXJhdHVyZSBhbmQgc29pbCBmb3IgdGhlaXIgZ3Jvd3RoLiAgICBNZWRpdGVycmFuZWFuIGFyZWFzIGFsc28gZW5qb3kgYSBtaWxkIGFuZCBtb2lzdCB3aW50ZXIgc2Vhc29uIGhlbmNlLCB0aGUgY3JvcHMgbmVlZCBub3QgZ2V0IHNwb2lsZWQgZHVlICAgdG8gaW5mbHVlbmNlIG9mIHdpbnRlcnMgYXMsIHRoZXkgYXJlIHNlbnNpdGl2ZSB0b3dhcmRzIGxvdyB0ZW1wZXJhdHVyZXMuICAgS25vd2xlZGdlIEJhc2U6ICAgIChhKSBPcmNoYXJkIGZhbm5pbmc6ICAgSXQgcmVwcmVzZW50cyBhIGhpZ2hseSBzcGVjaWFsaXplZCBjb21tZXJjaWFsIGFncmljdWx0dXJlIGhlcmUuIFRoZSB3b3JsZCBzdXBwbHkgb2YgY2l0cnVzIGZydWl0cywgb2xpdmVzIGFuZCAgIGZpZ3MgY29tZXMgYWxtb3N0IGV4Y2x1c2l2ZWx5IGZyb20gTWVkaXRlcnJhbmVhbiBsYW5kcy4gRnJ1aXQgY3VsdHVyZSBoYXMgbG9uZyBiZWVuIGEgdHJhZGl0aW9uYWwgICBNZWRpdGVycmFuZWFuIG9jY3VwYXRpb24gYmVjYXVzZSBvZiB0aGUgdmVyeSBzcGVjaWFsIGNsaW1hdGljIGZlYXR1cmVzIGluIE1lZGl0ZXJyYW5lYW4gYXJlYXMuICAgKGIpIFZpdGljdWx0dXJlOiAgIFZpdGljdWx0dXJlIG9yIGdyYXBlIGN1bHRpdmF0aW9uIGlzIGEgc3BlY2lhbHR5IG9mIHRoZSBNZWRpdGVycmFuZWFuIHJlZ2lvbi4gSXQgcmVwcmVzZW50cyBhIHZlcnkgaW50ZW5zaXZlICAgZm9ybSBvZiBmYXJtaW5nIHJlcXVpcmluZyBub3Qgb25seSBnb29kIGNvbmRpdGlvbnMgb2YgbW9pc3R1cmUsIHRlbXBlcmF0dXJlIGFuZCBzb2lsIGJ1dCBhbHNvIG11Y2ggICBwZXJzb25hbCBjYXJlLCBpZiB0aGUgZ3JhcGVzIGFyZSB0byBiZSBvZiBoaWdoIHF1YWxpdHkuICAgR3JhcGVzIHJhaXNlZCBpbiBkaWZmZXJlbnQgcGFydHMgb2YgdGhlIE1lZGl0ZXJyYW5lYW4gbGFuZHMgaGF2ZSBkaXN0aW5jdGl2ZSBmbGF2b3VycyBhbmQgd2luZXMgbWFkZSBpbiB0aGUgICB2YXJpb3VzIGFyZWFzIG1haW50YWluIHRoZWlyIGV4Y2x1c2l2ZSBuYW1lcywgZS5nLiwgc2hlcnJ5IGZyb20gdGhlIEFuZGFsdXNpYSBkaXN0cmljdCBvZiBzb3V0aGVybiBTcGFpbiwgICBwb3J0IHdpbmUgZnJvbSB0aGUgRG91cmEgYmFzaW4gb2Ygd2VzdGVybiBQb3J0dWdhbCwgbWFyc2FsYSBmcm9tIHRoZSBJc2xlIG9mIFNpY2lseSwgYW50aSBmcm9tIHRoZSBDaGlhbnRpICAgSGlsbHMgb2YgVHVzY2FueSwgYXN0aSBmcm9tIHRoZSBQaWVkbW9udCBkaXN0cmljdCBvZiBub3J0aGVybiBJdGFseS4gICAgVGhlIGdyZWF0IHZhcmlhdGlvbiBpbiByZWxpZWYsIGNsaW1hdGUsIHNvaWwgYW5kIG1ldGhvZHMgb2YgcHJlcGFyYXRpb24gaGFzIHByb2R1Y2VkIG1hbnkgZmFtb3VzIHdpbmVzLiAgIFRoZSBzcGFya2xpbmcgQ2hhbXBhZ25lIGNvbWVzIGZyb20gdGhlIFBhcmlzIGJhc2luOyBCdXJndW5keSBmcm9tIHRoZSBsaW1lc3RvbmUgc2NhcnAtbGFuZHMgb2YgdGhlICAgQ290ZSBkJyBvcjsgQ2xhcmV0LCBCcmFuZHkgKENvZ25hYyksIEJhciBzYWMgYW5kIEJvcmRlYXV4IGZyb20gZGlmZmVyZW50IHBhcnRzIG9mIHdlc3Rlcm4gRnJhbmNlLCBlc3BlY2lhbGx5ICAgdGhlIGJhc2luIG9mIEFxdWl0YWluZS4gV2luZXMgYXJlIGFsc28gcHJvZHVjZWQgaW4gdGhlIE1lZGl0ZXJyYW5lYW4gbGFuZHMgb2YgQXVzdHJhbGlhLCBTb3V0aCBBZnJpY2EgYW5kICAgU291dGggQW1lcmljYSwgdGhvdWdoIHRoZXNlIGFyZSBub3QgYXMgZmFtb3VzLiAgIChjKSBDZXJlYWwgYW5kIHZlZ2V0YWJsZSBjdWx0aXZhdGlvbjogICBJbiBhY3JlYWdlLCBjZXJlYWwgY3JvcHMgYXJlIHRoZSBtb3N0IGltcG9ydGFudCBpbiBNZWRpdGVycmFuZWFuIGFncmljdWx0dXJlLiBXaGVhdCwgZXNwZWNpYWxseSBoYXJkICAgd2ludGVyIHdoZWF0LCBpcyB0aGUgcHJpbmNpcGFsIGZvb2QgZ3JhaW4sIGFuZCBiYXJsZXkgaXMgZ3Jvd24gaW4gdGhlIHBvb3JlciBhcmVhcy4gICBJbiBtb3N0IE1lZGl0ZXJyYW5lYW4gY291bnRyaWVzIGNlcmVhbHMgb2Z0ZW4gb2NjdXB5IGFib3V0IGhhbGYgdGhlIHRvdGFsIGN1bHRpdmF0ZWQgYWNyZWFnZSBhbmQgcHJvdmlkZSAgIGVub3VnaCBncmFpbiBmb3IgaG9tZSBjb25zdW1wdGlvbi4gVGhlIHdhcm0gYW5kIHN1bm55IE1lZGl0ZXJyYW5lYW4gY2xpbWF0ZSBhbHNvIGFsbG93cyBhIHdpZGUgcmFuZ2UgICBvZiBvdGhlciBmb29kIGNyb3BzIGFuZCBncmVlbiB2ZWdldGFibGVzIHRvIGJlIGhhcnZlc3RlZC4gICBCZWFucywgbGVudGlscywgb25pb25zLCB0b21hdG9lcywgY2Fycm90cywgc3VnYXIgYmVldCBhbmQgYWxsIHRoZSBsZWFmeSB2ZWdldGFibGVzIG9mIHRoZSB3YXJtIHRlbXBlcmF0ZSAgIGxhdGl0dWRlcyBhcmUgZ3Jvd24uIFRoZSBzZWVkcyBhcmUgc293biBpbiBhdXR1bW4gd2hlbiB0aGUgc2hvd2VycyBjb21lIGFuZCBjdWx0aXZhdGlvbiBjb250aW51ZXMgaW50byAgIHRoZSBmb2xsb3dpbmcgeWVhciwgbWFpbnRhaW5pbmcgYSBjb25zdGFudCBzdXBwbHkgdG8gdGhlIHVyYmFuIG1hcmtldHMuICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIHNvdXJjZTogaHR0cHM6Ly93d3cueW91cmFydGljbGVsaWJyYXJ5LmNvbS9hZ3JpY3VsdHVyZS9tZWRpdGVycmFuZWFuLWFncmljdWx0dXJlLWxvY2F0aW9uLWFuZC0gIGNoYXJhY3RlcmlzdGljcy13aXRoLWRpYWdyYW1zLzI1NDQzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 32,
      "question" : "Match the following pairs with respect to  the Cyclones and the Oceans in which they  originate:  Cyclones         originate in   1. Cyclones         Indian Ocean  2. Typhoons         Atlantic Ocean  3. Hurricanes          Western Pacific Ocean  Which of the above Pairs is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRyb3BpY2FsIEN5Y2xvbmVzIGluIERpZmZlcmVudCBSZWdpb24gICBUcm9waWNhbCBjeWNsb25lcyBhcmUgdmlvbGVudCBzdG9ybXMgdGhhdCBvcmlnaW5hdGUgb3ZlciBvY2VhbnMgaW4gdHJvcGljYWwgYXJlYXMgYW5kIG1vdmUgb3ZlciB0byB0aGUgICBjb2FzdGFsIGFyZWFzIGJyaW5naW5nIGFib3V0IGxhcmdlLXNjYWxlIGRlc3RydWN0aW9uIGNhdXNlZCBieSB2aW9sZW50IHdpbmRzLCB2ZXJ5IGhlYXZ5IHJhaW5mYWxsIGFuZCBzdG9ybSAgIHN1cmdlcy4gICAgVGhpcyBpcyBvbmUgb2YgdGhlIG1vc3QgZGV2YXN0YXRpbmcgbmF0dXJhbCBjYWxhbWl0aWVzLiAgICBUaGV5IGFyZSBrbm93biBhcyAgICBDeWNsb25lcyBpbiB0aGUgSW5kaWFuIE9jZWFuLCAgICBIdXJyaWNhbmVzIGluIHRoZSBBdGxhbnRpYywgICAgVHlwaG9vbnMgaW4gdGhlIFdlc3Rlcm4gUGFjaWZpYyBhbmQgU291dGggQ2hpbmEgU2VhLCBhbmQgICBXaWxseS13aWxsaWVzIGluIHRoZSBXZXN0ZXJuIEF1c3RyYWxpYS4gICBUaGlzIHN5c3RlbSBvZiBnaXZpbmcgbmFtZXMgdG8gdHJvcGljYWwgY3ljbG9uZXMgaXMgYSByZWNlbnQgc3lzdGVtIGFuZCBpbiB0aGlzIG5hbWluZyBzZXZlcmFsIGNvdW50cmllcyAgIGFyZSBpbnZvbHZlZCBhbmQgaXMgZG9uZSB1bmRlciB0aGUgYWVnaXMgb2YgdGhlIFdvcmxkIE1ldGVvcm9sb2dpY2FsIE9yZ2FuaXphdGlvbiAoV01PKS4gICBLbm93bGVkZ2UgQmFzZTogVHJvcGljYWwgY3ljbG9uZXMgb3JpZ2luYXRlIGFuZCBpbnRlbnNpZnkgb3ZlciB3YXJtIHRyb3BpY2FsIG9jZWFucy4gICAgVGhlIGNvbmRpdGlvbnMgZmF2b3VyYWJsZSBmb3IgdGhlIGZvcm1hdGlvbiBhbmQgaW50ZW5zaWZpY2F0aW9uIG9mIHRyb3BpY2FsIHN0b3JtcyBhcmU6ICgxKSBMYXJnZSBzZWEgc3VyZmFjZSAgIHdpdGggdGVtcGVyYXR1cmUgaGlnaGVyIHRoYW4gMjfCsCBDOyAoMikgUHJlc2VuY2Ugb2YgdGhlIENvcmlvbGlzIGZvcmNlOyAoMykgU21hbGwgdmFyaWF0aW9ucyBpbiB0aGUgdmVydGljYWwgICB3aW5kIHNwZWVkOyAoNCkgQSBwcmUtZXhpc3Rpbmcgd2VhayBsb3ctcHJlc3N1cmUgYXJlYSBvciBsb3ctbGV2ZWwtY3ljbG9uaWMgY2lyY3VsYXRpb247ICg1KSBVcHBlciAgIGRpdmVyZ2VuY2UgYWJvdmUgdGhlIHNlYSBsZXZlbCBzeXN0ZW0uIFRoZSBlbmVyZ3kgdGhhdCBpbnRlbnNpZmllcyB0aGUgc3Rvcm0sIGNvbWVzIGZyb20gdGhlIGNvbmRlbnNhdGlvbiAgIHByb2Nlc3MgaW4gdGhlIHRvd2VyaW5nIGN1bXVsb25pbWJ1cyBjbG91ZHMsIHN1cnJvdW5kaW5nIHRoZSBjZW50cmUgb2YgdGhlIHN0b3JtLiBXaXRoIGNvbnRpbnVvdXMgICBzdXBwbHkgb2YgbW9pc3R1cmUgZnJvbSB0aGUgc2VhLCB0aGUgc3Rvcm0gaXMgZnVydGhlciBzdHJlbmd0aGVuZWQuIE9uIHJlYWNoaW5nIHRoZSBsYW5kIHRoZSBtb2lzdHVyZSAgIHN1cHBseSBpcyBjdXQgb2ZmIGFuZCB0aGUgc3Rvcm0gZGlzc2lwYXRlcy4gVGhlIHBsYWNlIHdoZXJlIGEgdHJvcGljYWwgY3ljbG9uZSBjcm9zc2VzIHRoZSBjb2FzdCBpcyBjYWxsZWQgdGhlICAgbGFuZGZhbGwgb2YgdGhlIGN5Y2xvbmUuIFRoZSBjeWNsb25lcywgd2hpY2ggY3Jvc3MgMjBvIE4gbGF0aXR1ZGUgZ2VuZXJhbGx5LCByZWN1cnZlIGFuZCB0aGV5IGFyZSBtb3JlICAgZGVzdHJ1Y3RpdmUuICAgc291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9rZWd5MjEwLnBkZiAgIE5DRVJUOiBGVU5EQU1FTlRBTFMgT0YgUEhZU0lDQUwgR0VPR1JBUEhZIC0gY2hhcHRlciA5LVNPTEFSIFJBRElBVElPTiwgSEVBVCBCQUxBTkNFICAgQU5EIFRFTVBFUkFUVVJFIHBhZ2UgOTUgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 33,
      "question" : "Major hot deserts of the world are mainly  associated along which of the following  pressure belts?  1. Sub-Tropical High-Pressure Belts   2. Sub-Tropical Low-Pressure Belts  3. Equatorial low-pressure Belts  4. Temperate High-pressure Belts  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIERlc2VydHMgY292ZXIgbW9yZSB0aGFuIG9uZS1maWZ0aCBvZiB0aGUgRWFydGgncyBsYW5kIGFyZWEsIGFuZCB0aGV5IGFyZSBmb3VuZCBvbiBldmVyeSBjb250aW5lbnQuIEhvdCAgIGRlc2VydHMgYXJlIG1haW5seSBmb3VuZCBhcm91bmQgdGhlIFRyb3BpY3Mgb2YgQ2FuY2VyIGFuZCBDYXByaWNvcm4uICAgIFRoZSBob3QgZGVzZXJ0cyBvZiB0aGUgd29ybGQgYXJlIGxvY2F0ZWQgYmV0d2VlbiAxNcKwIGFuZCAzMMKwIG5vcnRoIG9yIHNvdXRoIG9mIHRoZSBlcXVhdG9yLCB3aGVyZSB0aGUgYWlyICAgaXMgc3Vic2lkaW5nIG9yIHNpbmtpbmcgYWlyLiAgIFRoZSBob3QgZGVzZXJ0cyBsaWUgYWxvbmcgdGhlIEhvcnNlIExhdGl0dWRlcyBvciB0aGUgU3ViLVRyb3BpY2FsIEhpZ2gtUHJlc3N1cmUgQmVsdHMgd2hlcmUgdGhlIGFpciBpcyAgIGRlc2NlbmRpbmcsIGEgY29uZGl0aW9uIGxlYXN0IGZhdm9yYWJsZSBmb3IgcHJlY2lwaXRhdGlvbiBvZiBhbnkga2luZCB0byB0YWtlIHBsYWNlLiAgIFRoZSByYWluLWJlYXJpbmcgVHJhZGUgV2luZHMgYmxvdyBvZmYtc2hvcmUgYW5kIHRoZSBXZXN0ZXJsaWVzIHRoYXQgYXJlIG9uLXNob3JlIGJsb3cgb3V0c2lkZSB0aGUgICBkZXNlcnQgbGltaXRzLiAgIFdoYXRldmVyIHdpbmRzIHJlYWNoIHRoZSBkZXNlcnRzIGJsb3cgZnJvbSBjb29sZXIgdG8gd2FybWVyIHJlZ2lvbnMsIGFuZCB0aGVpciByZWxhdGl2ZSBodW1pZGl0eSBpcyAgIGxvd2VyZWQsIG1ha2luZyBjb25kZW5zYXRpb24gYWxtb3N0IGltcG9zc2libGUuICAgVGhlcmUgaXMgc2NhcmNlbHkgYW55IGNsb3VkIGluIHRoZSBjb250aW51b3VzIGJsdWUgc2t5LiBUaGUgcmVsYXRpdmUgaHVtaWRpdHkgaXMgZXh0cmVtZWx5IGxvdywgZGVjcmVhc2luZyAgIGZyb20gNjAgcGVyIGNlbnQgaW4gY29hc3RhbCBkaXN0cmljdHMgdG8gbGVzcyB0aGFuIDMwIHBlciBjZW50IGluIHRoZSBkZXNlcnQgaW50ZXJpb3JzLiBVbmRlciBzdWNoIGNvbmRpdGlvbnMsICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGV2ZXJ5IGJpdCBvZiBtb2lzdHVyZSBpcyBldmFwb3JhdGVkIGFuZCB0aGUgZGVzZXJ0cyBhcmUgdGh1cyByZWdpb25zIG9mIHBlcm1hbmVudCBkcm91Z2h0LiBQcmVjaXBpdGF0aW9uICAgaXMgYm90aCBzY2FyY2UgYW5kIG1vc3QgdW5yZWxpYWJsZS4gICBPbiB0aGUgd2VzdGVybiBjb2FzdHMsIHRoZSBwcmVzZW5jZSBvZiBjb2xkIGN1cnJlbnRzIGdpdmVzIHJpc2UgdG8gbWlzdHMgYW5kIGZvZ3MgYnkgY2hpbGxpbmcgdGhlIG9uLWNvbWluZyAgIGFpci4gVGhpcyBhaXIgaXMgbGF0ZXIgd2FybWVkIGJ5IGNvbnRhY3Qgd2l0aCB0aGUgaG90IGxhbmQsIGFuZCBsaXR0bGUgcmFpbiBmYWxscy4gVGhlIGRlc2ljY2F0aW5nIGVmZmVjdCBvZiB0aGUgICBjb2xkIFBlcnV2aWFuIEN1cnJlbnQgYWxvbmcgdGhlIENoaWxlYW4gY29hc3QgaXMgc28gcHJvbm91bmNlZCB0aGF0IHRoZSBtZWFuIGFubnVhbCByYWluZmFsbCBmb3IgdGhlICAgQXRhY2FtYSBEZXNlcnQgaXMgbm90IG1vcmUgdGhhbiAxLjMgY20uICAgS25vd2xlZGdlIEJhc2U6IFdoeSBhcmUgZGVzZXJ0cyBsb2NhdGVkIGFsb25nIHRoZSB0cm9waWNzPyAgICBUaGUgSGFkbGV5IENlbGwgICBBLiBBcyB5b3Ugd291bGQgZXhwZWN0LCB0ZW1wZXJhdHVyZXMgYXQgdGhlIGVxdWF0b3IgYXJlIGhpZ2hlc3QuIFdhcm0gYWlyIHJpc2VzIGNvbnRhaW5pbmcgZXZhcG9yYXRlZCAgIG1vaXN0dXJlLiAgIEIuIFRoZSBhaXIgY29vbHMsIGNvbmRlbnNlcyBhbmQgZm9ybXMgY2xvdWRzLiAgIEMuIEhlYXZ5IGVxdWF0b3JpYWwgcmFpbmZhbGwgb2NjdXJzIChsaWtlIGluIHRoZSByYWluZm9yZXN0ISkgICBELiBUaGUgY29vbCwgZHJ5IGFpciB0aGVuIGJlZ2lucyBkZXNjZW5kaW5nLiBUaGUgYWlyIHdhcm1zIHVwLiBBbnkgbW9pc3R1cmUgaW4gdGhlIGFpciBpcyBoZWxkIGFzIHdhdGVyICAgdmFwb3VyIChpbnZpc2libGUpLiAgIEJlY2F1c2UgdGhlIHRyb3BpY3MgYXJlIGxhcmdlbHkgY2xvdWRsZXNzLCB0aGV5IGdldCB2ZXJ5IGhvdCBkdXJpbmcgdGhlIGRheS4gVGhlcmUgYXJlIGZldyBjbG91ZHMgdG8gaW5zdWxhdGUgICB0aGVzZSBhcmVhcyBkdXJpbmcgdGhlIG5pZ2h0LiBUaGVyZWZvcmUsIHRlbXBlcmF0dXJlcyBkcm9wIHRvIHZlcnkgbG93IGxldmVscyBvdmVybmlnaHQuIEl0J3MganVzdCBsaWtlIGdvaW5nICAgdG8gYmVkIHdpdGhvdXQgYW55IGJsYW5rZXRzLiAgIEV4YW1wbGUgICBUaGV5IGluY2x1ZGUgdGhlIFNhaGFyYSBEZXNlcnQsIHRoZSBsYXJnZXN0IHNpbmdsZSBzdHJldGNoIG9mIGRlc2VydCwgd2hpY2ggaXMgMywyMDAgbWlsZXMgZnJvbSBlYXN0IHRvIHdlc3QgICBhbmQgYXQgbGVhc3QgMSwwMDAgbWlsZXMgd2lkZS4gICBUaGUgbmV4dCBiaWdnZXN0IGRlc2VydCBpcyB0aGUgR3JlYXQgQXVzdHJhbGlhbiBEZXNlcnQgd2hpY2ggY292ZXJzIGFsbW9zdCBoYWxmIG9mIHRoZSBjb250aW5lbnQuICAgVGhlIG90aGVyIGhvdCBkZXNlcnRzIGFyZSB0aGUgQXJhYmlhbiBEZXNlcnQsIElyYW5pYW4gRGVzZXJ0LCBUaGFyIERlc2VydCwgS2FsYWhhcmkgYW5kIE5hbWliIERlc2VydHMuICAgSW4gTm9ydGggQW1lcmljYSwgdGhlIGRlc2VydCBleHRlbmRzIGZyb20gTWV4aWNvIGludG8gVS5TLkEuIGFuZCBpcyBjYWxsZWQgYnkgZGlmZmVyZW50IG5hbWVzIGF0IGRpZmZlcmVudCAgIHBsYWNlcywgZS5nLiB0aGUgTW9oYXZlLCBTb25vcmFuLCBDYWxpZm9ybmlhbiBhbmQgTWV4aWNhbiBEZXNlcnRzLiBJbiBTb3V0aCBBbWVyaWNhLCB0aGUgQXRhY2FtYSBvciAgIFBlcnV2aWFuIERlc2VydCBpcyB0aGUgZHJpZXN0IG9mIGFsbCBkZXNlcnRzIHdpdGggbGVzcyB0aGFuIDAuNSBpbmNoZXMgb2YgcmFpbmZhbGwgYW5udWFsbHkuICAgU291cmNlOiAgIGh0dHA6Ly93d3cuYXRtby5hcml6b25hLmVkdS9zdHVkZW50cy9jb3Vyc2VsaW5rcy9mYWxsMTIvYXRtbzE3MGExczEvY29taW5nX3VwL3dlZWtfMTAvbGVjdDI4ICBfMV9hbmRfM19jZWxsX21vZGVsLmh0bWwgICAgaHR0cHM6Ly93d3cuaW50ZXJuZXRnZW9ncmFwaHkubmV0IG9waWNzL3doZXJlLWFyZS1kZXNlcnRzLWxvY2F0ZWQvICAgIGh0dHBzOi8vd3d3LmludGVybmV0Z2VvZ3JhcGh5Lm5ldCBvcGljcy93aHktYXJlLWRlc2VydHMtbG9jYXRlZC1hbG9uZy10aGUtdHJvcGljcy8gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 34,
      "question" : "Arrange the following terms/surfaces in  decreasing order of their albedo:  1. Fresh snow  2. Sand  3. Grass  4. Old snow  5. Thin Cloud  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFsYmVkbyBpcyB0aGUgcG9ydGlvbiBvZiBzb2xhciBlbmVyZ3kgcmVmbGVjdGVkIGZyb20gdGhlIHN1cmZhY2Ugb2YgdGhlIEVhcnRoIGJhY2sgaW50byBzcGFjZS4gICAgSXQgaXMgYSByZWZsZWN0aW9uIGNvZWZmaWNpZW50IGFuZCBoYXMgYSB2YWx1ZSBvZiBsZXNzIHRoYW4gb25lLiAgIFdoZW4gc29sYXIgcmFkaWF0aW9uIHBhc3NlcyB0aHJvdWdoIHRoZSBhdG1vc3BoZXJlLCBhIGNlcnRhaW4gYW1vdW50IG9mIGl0IGlzIHNjYXR0ZXJlZCwgcmVmbGVjdGVkIGFuZCAgIGFic29yYmVkLiBUaGUgcmVmbGVjdGVkIHN1bSBvZiByYWRpYXRpb24gaXMgY2FsbGVkIHRoZSBhbGJlZG8gb2YgdGhlIGVhcnRoLiAgIEFsYmVkbyBpcyBhbiBpbXBvcnRhbnQgY29uY2VwdCBpbiBjbGltYXRvbG9neSwgYXN0cm9ub215LCBhbmQgZW52aXJvbm1lbnRhbCBtYW5hZ2VtZW50LiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBJdCBwbGF5cyBhIG1ham9yIHJvbGUgaW4gdGhlIGVuZXJneSBiYWxhbmNlIG9mIHRoZSBlYXJ0aCdzIHN1cmZhY2UsIGFzIGl0IGRlZmluZXMgdGhlIHJhdGUgb2YgdGhlIGFic29yYmVkICAgcG9ydGlvbiBvZiB0aGUgaW5jaWRlbnQgc29sYXIgcmFkaWF0aW9uICAgRGlmZmVyZW50IHN1cmZhY2VzIGhhdmUgZGlmZmVyZW50IHZhbHVlcy4gICBBbGJlZG8gaXMgaGlnaGVyIGluIFNub3cgb3IgSWNlLiAgICBLbm93bGVkZ2UgQmFzZTogTkNFUlQ6IEZVTkRBTUVOVEFMUyBPRiBQSFlTSUNBTCBHRU9HUkFQSFkgLSBjaGFwdGVyIDktU09MQVIgUkFESUFUSU9OLCAgIEhFQVQgQkFMQU5DRSBBTkQgVEVNUEVSQVRVUkUgcGFnZSA4MSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3-5-4-2-1  ",
        "option2" : "1-4-2-5-3  ",
        "option3" : "2-3-4-1-5  ",
        "option4" : "2-3-4-5-1       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements:   1.   The variation in temperature over the sea is  less compared to land.  2.  The places located on the coast where the  warm ocean currents flow, record higher  temperature.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFub3RoZXIgZmFjdG9yIHRoYXQgaW5mbHVlbmNlcyB0aGUgdGVtcGVyYXR1cmUgaXMgdGhlIGxvY2F0aW9uIG9mIGEgcGxhY2Ugd2l0aCAgIHJlc3BlY3QgdG8gdGhlIHNlYS4gQ29tcGFyZWQgdG8gbGFuZCwgdGhlIHNlYSBnZXRzIGhlYXRlZCBzbG93bHkgYW5kIGxvc2VzIGhlYXQgc2xvd2x5LiBUaGVyZWZvcmUsIHRoZSAgIHZhcmlhdGlvbiBpbiB0ZW1wZXJhdHVyZSBvdmVyIHRoZSBzZWEgaXMgbGVzcyBjb21wYXJlZCB0byBsYW5kLiBUaGUgcGxhY2VzIHNpdHVhdGVkIG5lYXIgdGhlIHNlYSBjb21lICAgdW5kZXIgdGhlIG1vZGVyYXRpbmcgaW5mbHVlbmNlIG9mIHRoZSBzZWEgYW5kIGxhbmQgYnJlZXplcyB3aGljaCBtb2RlcmF0ZSB0aGUgdGVtcGVyYXR1cmUuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBhc3NhZ2Ugb2YgYWlyIG1hc3NlcyBhbHNvIGFmZmVjdHMgdGhlIHRlbXBlcmF0dXJlLiBUaGUgcGxhY2VzLCB3aGljaCBjb21lICAgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiB3YXJtIGFpcm1hc3NlcyBleHBlcmllbmNlIGhpZ2hlciB0ZW1wZXJhdHVyZSBhbmQgdGhlIHBsYWNlcyB0aGF0IGNvbWUgdW5kZXIgdGhlICAgaW5mbHVlbmNlIG9mIGNvbGQgYWlyLW1hc3NlcyBleHBlcmllbmNlIGxvdyB0ZW1wZXJhdHVyZS4gU2ltaWxhcmx5LCB0aGUgcGxhY2VzIGxvY2F0ZWQgb24gdGhlIGNvYXN0IHdoZXJlICAgdGhlIHdhcm0gb2NlYW4gY3VycmVudHMgZmxvdyByZWNvcmQgaGlnaGVyIHRlbXBlcmF0dXJlIHRoYW4gdGhlIHBsYWNlcyBsb2NhdGVkIG9uIHRoZSBjb2FzdCB3aGVyZSB0aGUgICBjb2xkIGN1cnJlbnRzIGZsb3cuICAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYva2VneTIwOS5wZGYgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 36,
      "question" : "Which of the following statements  regarding the Atlantic Meridional Overturning  Circulation is/ are correct?  1.  It is responsible for keeping Western Europe  relatively colder than other places at the  same latitude.  2.  It has shown signs of weakening due to  accelerated melting of the Arctic Ocean.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEF0bGFudGljIE1lcmlkaW9uYWwgT3ZlcnR1cm5pbmcgQ2lyY3VsYXRpb24gKEFNT0MpIGlzIGEgVGhlcm1vLUhhbGluZSBjaXJjdWxhdGlvbiAoVEhDKSAtaS5lLiBtb3ZlbWVudCAgIG9mIG9jZWFuIHdhdGVyIGRyaXZlbiBieSBkaWZmZXJlbmNlcyBpbiBkZW5zaXRpZXMgZHVlIHRvIHNhbGluaXR5IGFuZCB0ZW1wZXJhdHVyZSwgaW4gdGhlIEF0bGFudGljIE9jZWFuIGFuZCAgIGluY2x1ZGVzIG1hbnkgb2NlYW4gY3VycmVudHMsIHdpdGggdGhlIHdhcm0gR3VsZiBTdHJlYW0sIE5vcnRoIEF0bGFudGljIERyaWZ0IGFuZCB0aGUgY29sZCBTb3V0aGVybiAgIE9jZWFuIGN1cnJlbnQuIEFNT0MgY2FycmllcyB3YXJtIHN1cmZhY2Ugd2F0ZXJzIGZyb20gdGhlIHRyb3BpY3MgdG93YXJkcyB0aGUgTm9ydGhlcm4gSGVtaXNwaGVyZSwgICB3aGVyZSBpdCBjb29scyBhbmQgc2lua3MuIEl0IHRoZW4gcmV0dXJucyB0byB0aGUgdHJvcGljcyBhbmQgdGhlbiB0byB0aGUgU291dGggQXRsYW50aWMgYXMgYSBib3R0b20gY3VycmVudC4gICBGcm9tIHRoZXJlIGl0IGlzIGRpc3RyaWJ1dGVkIHRvIGFsbCBvY2VhbiBiYXNpbnMgdmlhIHRoZSBBbnRhcmN0aWMgY2lyY3VtcG9sYXIgY3VycmVudC4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFNT0MgaXMgYSBwYXJ0IG9mIHRoZSBnbG9iYWwgb2NlYW4gY29udmV5b3IgYmVsdCAoVEhDKSB0aGF0IHdvcmtzIHRvIGRpc3RyaWJ1dGUgICBudXRyaWVudHMgYW5kIGhlYXQgYWxsIG92ZXIgdGhlIGdsb2JlLiBJdCBpcyByZXNwb25zaWJsZSBmb3Iga2VlcGluZyB0aGUgZWFzdGVybiBjb2FzdCBvZiBBbWVyaWNhIGluIG1pZCAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBsYXRpdHVkZXMgYXMgd2VsbCBhcyBXZXN0ZXJuIEV1cm9wZSAtIHVwIHRvIHRoZSBoaWdoZXN0IGxhdGl0dWRlcywgd2FybWVyIGFuZCBpY2UgZnJlZSBjb21wYXJlZCB0byBvdGhlciAgIHBsYWNlcyBpbiBjb21wYXJhYmxlIGxhdGl0dWRlcy4gSXQgZG9lcyB0aGlzIHdpdGggdGhlIGhlbHAgb2YgdGhlIHdhcm0gR3VsZiBTdHJlYW0gYW5kIHRoZSBOb3J0aCBBdGxhbnRpYyAgIERyaWZ0IGN1cnJlbnRzIHdoaWNoIGNhcnJ5IHdhcm0gc3VyZmFjZSB3YXRlcnMgZnJvbSB0aGUgVHJvcGljcyB0byB0aGVzZSBoaWdoZXIgbGF0aXR1ZGVzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IElQQ0MncyBBc3Nlc3NtZW50IFJlcG9ydCA2IChBUjYpIGFzIHdlbGwgYXMgcmVjZW50IHBhcGVycyBpbiBOYXR1cmUgQ2xpbWF0ZSAgIENoYW5nZSwgaW5kaWNhdGUgdGhhdCBkdWUgdG8gYW50aHJvcG9nZW5pYyBjbGltYXRlIGNoYW5nZSwgdGhlIEFNT0MgaXMgc2xvd2luZyBkb3duIHRvIHVucHJlY2VkZW50ZWQgICBsZXZlbHMgaW4gYSBtaWxsZW5uaXVtLiBHbG9iYWwgd2FybWluZyBpcyBjYXVzaW5nIG1lbHRpbmcgb2YgZXZlbiB0aGUgZGVlcGVzdCBhbmQgbW9zdCB1bnRvdWNoZWQgb2YgaWNlICAgc2hlbHZlcyBpbiB0aGUgQXJjdGljIGZyb20gYW4gYXJlYSBjYWxsZWQgJ1RoZSBMYXN0IEljZSBBcmVhJy4gVGhlIGZyZXNod2F0ZXIgZnJvbSB0aGUgbWVsdGluZyBpY2UgcmVkdWNlcyAgIHRoZSBzYWxpbml0eSBhbmQgZGVuc2l0eSBvZiB0aGUgd2F0ZXIuIE5vdywgdGhlIHdhdGVyIGlzIHVuYWJsZSB0byBzaW5rIGFzIGl0IHVzZWQgdG8gYW5kIHRoaXMgd2Vha2VucyB0aGUgICBBTU9DIGZsb3cuICAgVGhpcyB3ZWFrZW5pbmcgb2YgQU1PQyBpcyBwcmVkaWN0ZWQgdG8gaGF2ZSBhIG51bWJlciBvZiBpbXBsaWNhdGlvbnM6ICAgMSkgTm9ydGggQW1lcmljYSBhbmQgV2VzdGVybiBFdXJvcGUgd2lsbCBiZWNvbWUgbXVjaCBjb2xkZXIuICAgMikgUmFpbmZhbGwgaW4gRXVyb3BlIHdpbGwgZGVjcmVhc2UgZHVlIHRvIHNpZ25pZmljYW50IHNvdXRod2FyZCByYWluLWJlbHQgbWlncmF0aW9uIG92ZXIgdGhlIHRyb3BpY2FsICAgQXRsYW50aWMuICAgMykgVHJhbnNwb3J0IG9mIG51dHJpZW50cyBpbiB0aGUgQXRsYW50aWMgT2NlYW4gYmFzaW4gYW5kIHJpY2ggZmlzaGluZyBncm91bmRzIGxpa2UgTmV3Zm91bmRsYW5kIHdpbGwgICB2YW5pc2ggICA0KSBJdCBtYXkgYWxzbyBhZmZlY3QgRWwgTmluby4gICA1KSBTZWEgaWNlIHdpbGwgaW5jcmVhc2Ugb3ZlciB0aGUgR3JlZW5sYW5kLUljZWxhbmQtTm9yd2VnaWFuIHNlYXMgYW5kIHRvIHRoZSBzb3V0aCBvZiBHcmVlbmxhbmQgICBTb3VyY2U6IGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvZXhwbGFpbmVkLWF0bGFudGljLW9jZWFuLWN1cnJlbnQtc3lzdGVtLSAgc2xvd2luZy1pbXBsaWNhdGlvbnMtNzQ0NTM4OC8gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the Inter Tropical  Convergence Zone (ITCZ), consider the  following statements:   1.  It moves north or south with the apparent  movement of the sun.  2.  The shift of ITCZ is less in Southern  hemisphere compared to Northern  hemisphere.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBJbnRlci1Ucm9waWNhbCBDb252ZXJnZW5jZSBab25lIChJVENaKSBpcyBhIGJlbHQgYXJvdW5kIHRoZSBFYXJ0aCBleHRlbmRpbmcgYXBwcm94aW1hdGVseSBmaXZlICAgZGVncmVlcyBub3J0aCBhbmQgc291dGggb2YgdGhlIGVxdWF0b3IuIEl0IGlzIGEgYnJvYWQgdHJvdWdoIG9mIGxvdyBwcmVzc3VyZSBpbiBlcXVhdG9yaWFsIGxhdGl0dWRlcy4gVGhpcyBpcyAgIHdoZXJlIHRoZSBub3J0aGVhc3QgYW5kIHRoZSBzb3V0aGVhc3QgdHJhZGUgd2luZHMgY29udmVyZ2UuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIElUQ1ogbGllcyBtb3JlIG9yIGxlc3MgcGFyYWxsZWwgdG8gdGhlIGVxdWF0b3IgYnV0IG1vdmVzIG5vcnRoIG9yIHNvdXRoIHdpdGggdGhlICAgYXBwYXJlbnQgbW92ZW1lbnQgb2YgdGhlIHN1bi4gICBTZWFzb25hbCBzaGlmdHMgaW4gdGhlIGxvY2F0aW9uIG9mIHRoZSBJVENaIGRyYXN0aWNhbGx5IGFmZmVjdHMgcmFpbmZhbGwgaW4gbWFueSBlcXVhdG9yaWFsIG5hdGlvbnMsIHJlc3VsdGluZyAgIGluIHRoZSB3ZXQgYW5kIGRyeSBzZWFzb25zIG9mIHRoZSB0cm9waWNzIHJhdGhlciB0aGFuIHRoZSBjb2xkIGFuZCB3YXJtIHNlYXNvbnMgb2YgaGlnaGVyIGxhdGl0dWRlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHNoaWZ0IG9mIElUQ1ogaXMgbGVzcyBpbiBTb3V0aGVybiBoZW1pc3BoZXJlIGNvbXBhcmVkIHRvIE5vcnRoZXJuICAgaGVtaXNwaGVyZS4gVGhpcyBpcyBkdWUgdG8gdGhlIG1vcmUgY29udGluZW50YWwgbmF0dXJlIG9mIHRoZSBOb3J0aGVybiBoZW1pc3BoZXJlIHdoZXJlYnkgdGhlICAgdGVtcGVyYXR1cmUgZ3JhZGllbnQgaXMgc2hhcnBlci4gICAgS25vd2xlZGdlIEJhc2U6IER1ZSB0byBpbnRlbnNlIHNvbGFyIGhlYXRpbmcgbmVhciB0aGUgZXF1YXRvciwgdGhlIHdhcm0sIG1vaXN0IGFpciBpcyBmb3JjZWQgdXAgaW50byB0aGUgICBhdG1vc3BoZXJlIGxpa2UgYSBob3QgYWlyIGJhbGxvb24uIEFzIHRoZSBhaXIgcmlzZXMsIGl0IGNvb2xzLCBjYXVzaW5nIHBlcnNpc3RlbnQgYmFuZHMgb2Ygc2hvd2VycyBhbmQgc3Rvcm1zICAgYXJvdW5kIHRoZSBFYXJ0aCdzIG1pZHNlY3Rpb24uIFRoZSByaXNpbmcgYWlyIG1hc3MgZmluYWxseSBzdWJzaWRlcyBpbiB3aGF0IGlzIGtub3duIGFzIHRoZSBob3JzZSBsYXRpdHVkZXMsICAgd2hlcmUgdGhlIGFpciBtb3ZlcyBkb3dud2FyZCB0b3dhcmQgRWFydGgncyBzdXJmYWNlLiAgIFNvdXJjZTogaHR0cHM6Ly9vY2VhbnNlcnZpY2Uubm9hYS5nb3YvZmFjdHMvZG9sZHJ1bXMuaHRtbCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following statements  correctly defines the term simoons?  1. Cold wind blowing during winters in Rhone  valley of France.  2. Cold and dry wind blowing during winter  season in Pampas.  3. Dry, suffocating and dust-laden wind in  Syria.  4. Hot wind blowing during summers in Saudi  Arabia.  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gbWlzdHJhbCwgaXMgY29sZCBhbmQgZHJ5IHN0cm9uZyB3aW5kIGluIHNvdXRoZXJuIEZyYW5jZSB0aGF0IGJsb3dzIGRvd24gZnJvbSB0aGUgICBub3J0aCBhbG9uZyB0aGUgbG93ZXIgUmjDtG5lIFJpdmVyIHZhbGxleSB0b3dhcmQgdGhlIE1lZGl0ZXJyYW5lYW4gU2VhLiBJdCBtYXkgYmxvdyBjb250aW51b3VzbHkgZm9yICAgc2V2ZXJhbCBkYXlzIGF0IGEgdGltZSwgd2l0aCB2ZWxvY2l0aWVzIHRoYXQgYXZlcmFnZSBhYm91dCA3NCBrbSAoYWJvdXQgNDUgbWlsZXMpIHBlciBob3VyLiBJdCBpcyBzdHJvbmdlc3QgYW5kICAgbW9zdCBmcmVxdWVudCBpbiB3aW50ZXIsIGFuZCBpdCBzb21ldGltZXMgY2F1c2VzIGNvbnNpZGVyYWJsZSBkYW1hZ2UgdG8gY3JvcHMuICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiBQYW1wZXJvIGlzIHRoZSBjb2xkIGFuZCBkcnkgd2luZCBibG93aW5nIGR1cmluZyB3aW50ZXIgc2Vhc29uIGluIFBhbXBhcyAgIChBcmdlbnRpbmEpLiBUaGUgcGFtcGVybyBpcyBhIGJ1cnN0IG9mIGNvbGQgcG9sYXIgYWlyIGZyb20gdGhlIHdlc3QsIHNvdXRod2VzdCBvciBzb3V0aCBvbiB0aGUgcGFtcGFzIGluICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIHRoZSBzb3V0aCBvZiBCcmF6aWwsIEFyZ2VudGluYSwgVXJ1Z3VheSwgUGFyYWd1YXkgYW5kIEJvbGl2aWEuIFRoaXMgd2luZCAob2Z0ZW4gdmlvbGVudGx5KSBwaWNrcyB1cCBkdXJpbmcgICB0aGUgcGFzc2FnZSBvZiBhIGNvbGQgZnJvbnQgb2YgYW4gYWN0aXZlIGxvdyBwYXNzaW5nIGJ5LiBJdCB0YWtlcyB0aGUgZm9ybSBvZiBhIHNxdWFsbCBsaW5lIGFuZCB0aGVyZSBpcyBhIG1hcmtlZCAgIGRyb3AgaW4gdGVtcGVyYXR1cmUgYWZ0ZXIgaXRzIHBhc3NpbmcuIFRoZSBQYW1wZXJvIGlzIG1vc3QgY29tbW9uIGF0IHdpbnRlciBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZSAgIChwcmluY2lwYWxseSBiZXR3ZWVuIE1heSBhbmQgQXVndXN0KS4gRHVyaW5nIHRoZSBzdW1tZXJzIGluIHRoZSByZWdpb24gYXJvdW5kIEJ1ZW5vcyBBaXJlcywgdGhlIHBhbXBlcm8gICBzdG9ybXMgYXJlIGEgd2VsY29tZSBmZWF0dXJlIG1hcmtpbmcgdGhlIGVuZCBvZiBsb25nIHBlcmlvZHMgb2YgaGlnaCBodW1pZGl0eSBhbmQgZXh0cmVtZSBoZWF0LiAgIE9wdGlvbiAzIGFuZCA0IGFyZSBjb3JyZWN0LiBTaW1vb24gaXMgYSB2ZXJ5IGhvdCwgZHJ5LCBzdWZmb2NhdGluZyBhbmQgZHVzdC1sYWRlbiB3aW5kIHRoYXQgYmxhc3RzIGFjcm9zcyAgIHRoZSBBZnJpY2FuIGRlc2VydHMsIG5vdGFibHkgaW4gQXJhYmlhLCBTeXJpYSwgYW5kIG5laWdoYm9yaW5nIGNvdW50cmllcyBnZW5lcmF0ZWQgYnkgdGhlIGV4dHJlbWUgaGVhdCAgIG9mIHRoZSBwYXJjaGVkIGRlc2VydHMgb3Igc2FuZHkgcGxhaW5zLiBJdCBjYW4gZm9ybSBpbnRvIHdoaXJsd2luZHMgYWx0aG91Z2ggdGhpcyBpcyBtb3N0IGxpa2VseSBhIHNlY29uZGFyeSAgIHJlc3VsdCBvZiB0aGUgbG93LWxldmVsIHRoZXJtaWMgaGVhdGluZyByYXRoZXIgdGhhbiBqdXN0IHRoZSB3aW5kIGl0c2VsZi4gSXQgaXMgb25lIG9mIHRoZSBicmllZmVzdCB3aW5kcyBhbmQgICBsYXN0cyBvbmx5IDIwIG1pbnV0ZXMgYnV0IGNhbiBjYXJyeSBtb3VuZHMgb2YgZHVzdCBhbmQgc2FuZCB0aGF0IGl0IGhhcyBzY29vcGVkIGZyb20gdGhlIGRlc2VydCBmbG9vci4gVGhpcyAgIGlzIG9uZSBvZiB0aGUgd2luZHMgdGhhdCByZXNoYXBlcyB0aGUgZGVzZXJ0IGFuZCB0aGUgc2FuZCBkdW5lcyBhY3Jvc3MgdGhlIGxhdGUgU3ByaW5nIGFuZCB0aGUgU3VtbWVyLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LndlYXRoZXJvbmxpbmUuY28udWsvcmVwb3J0cy93aW5kL1RoZS1TaW1vb20uaHRtICAgaHR0cHM6Ly93d3cuZHRuLmNvbSBoZS1zaXJvY2NvLXdpbmRzLW9mLXRoZS1tZWRpdGVycmFuZWFuLXNlYS8gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "3 and 4 only   "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements:  1.  Recently China's market share in the total  global photovoltaic (PV) installations has  become more than 50%.  2.  The Lighthouse Initiative is the new  initiative of UNEP to facilitate knowledge  sharing between countries regarding Solar  Energy production.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIHBob3Rvdm9sdGFpYyAoUFYpIGNhcGFjaXR5IGlzIGVub3VnaCBmb3IgQ2hpbmEgdG8ga2VlcCBpdHMgbWFya2V0IGxlYWRlciAgIHBvc2l0aW9uIHdpdGggdGhlIENoaW5lc2UgbWFya2V0IHJlcHJlc2VudGluZyAyNyUgb2YgdG90YWwgZ2xvYmFsIGluc3RhbGxhdGlvbnMuICAgIEhvd2V2ZXIsIGl0J3MgaW50ZXJlc3RpbmcgdG8gbm90ZSB0aGF0IGluIDIwMTcgQ2hpbmEncyBtYXJrZXQgc2hhcmUgd2FzIDUxJS4gICBBY2NvcmRpbmcgdG8gQ2hpbmEncyBOYXRpb25hbCBFbmVyZ3kgQWRtaW5pc3RyYXRpb24sIENoaW5hIGluc3RhbGxlZCBtb3JlIHRoYW4gMzAuMSBHVyBvZiBwaG90b3ZvbHRhaWMgICAoUFYpIGNhcGFjaXR5IGluIDIwMTksIGJyaW5naW5nIGl0cyB0b3RhbCBpbnN0YWxsZWQgY2FwYWNpdHkgdG8gMjA1LjIgR1cuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgV29ybGQgQmFuayBpbiBwYXJ0bmVyc2hpcCB3aXRoIEluZGlhIGxlZCBJbnRlcm5hdGlvbmFsIFNvbGFyIEFsbGlhbmNlIChJU0EpICAgaGFzIHN0YXJ0ZWQgYSBuZXcgaW5pdGlhdGl2ZSBrbm93biBhcyB0aGUgTGlnaHRob3VzZSBJbml0aWF0aXZlLiAgICBJdCBzdXBwb3J0cyB0aGUgZXhjaGFuZ2Ugb2Ygc29sYXIga25vd2xlZGdlIGJldHdlZW4gSW5kaWFuIGFnZW5jaWVzIGFuZCB0aGVpciBjb3VudGVycGFydHMgaW4gICBCYW5nbGFkZXNoLCB0aGUgTWFsZGl2ZXMgYW5kIG90aGVycyBpbiBBZnJpY2EuICAgU291cmNlOiBodHRwczovL291cndvcmxkaW5kYXRhLm9yZy9yZW5ld2FibGUtZW5lcmd5ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following statements  regarding the E-vehicle industry is/ are  correct?  1.  Lithium and Nickel are essential minerals  required for E-Vehicle manufacturing.  2.  Australia has the largest identified Lithium  reserves in the world.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFJhcmUgZWxlbWVudHMgbGlrZSBMaXRoaXVtIGFuZCBOaWNrZWwgYW5kIENvYmFsdCBhcmUgcmVxdWlyZWQgZm9yIHRoZSBwcm9kdWN0aW9uICAgb2YgRS1WZWhpY2xlcywgd2hpY2ggaXMgb25lIG9mIHRoZSBmYWN0b3JzIGxpbWl0aW5nIHRoZSBpbmR1c3RyeSBnbG9iYWxseS4gTGl0aGl1bSwgZXNwZWNpYWxseSwgaXMgYSByYXJlIG1ldGFsICAgcHJlc2VudCBpbiB2ZXJ5IGxpbWl0ZWQgcXVhbnRpdGllcyBpbiB0aGUgd29ybGQgYW5kIGlzIHZlcnkgZXNzZW50aWFsIGZvciBFLVZlaGljbGVzIGFzIGl0IGlzIHVzZWQgdG8gICBtYW51ZmFjdHVyZSB0aGUgcmVjaGFyZ2VhYmxlIGJhdHRlcnkgZm9yIHBvd2VyIHN0b3JhZ2UuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBCb2xpdmlhIHdpdGggMjEgbWlsbGlvbiB0b25uZXMsIGhhcyB0aGUgbGFyZ2VzdCBjdXJyZW50bHkgaWRlbnRpZmllZCByZXNlcnZlcyBvZiAgIExpdGhpdW0gaW4gdGhlIHdvcmxkIGluY2x1ZGluZyB0aGUgd29ybGQncyBzaW5nbGUtYmlnZ2VzdCBsaXRoaXVtIGRlcG9zaXQsIHRoZSBTYWxhciBkZSBVeXVuaSBzYWx0IGZsYXQsICAgd2hpY2ggaXMgdmlzaWJsZSBmcm9tIHNwYWNlLCBmb2xsb3dlZCBieSBBcmdlbnRpbmEgKDE3IG1pbGxpb24gdG9ubmVzKSwgQ2hpbGUgKDkgbWlsbGlvbiB0b25uZXMpLCBVU0EgKDYuOCAgIG1pbGxpb24gdG9ubmVzKSwgQXVzdHJhbGlhICg2LjMgbWlsbGlvbiB0b25uZXMpIGFuZCBDaGluYSAoNC41IG1pbGxpb24gdG9ubmVzKSBhdCB0aGUgNnRoIHNwb3QuICAgU291cmNlOiBodHRwczovL3d3dy5uc2VuZXJneWJ1c2luZXNzLmNvbS9mZWF0dXJlcy9zaXgtbGFyZ2VzdC1saXRoaXVtLXJlc2VydmVzLXdvcmxkLyAgIGh0dHBzOi8vd3d3LmNhcmJvbmJyaWVmLm9yZy9pZWEtbWluZXJhbC1zdXBwbGllcy1mb3ItZWxlY3RyaWMtY2Fycy1tdXN0LWluY3JlYXNlLTMwLWZvbGQtdG8tbWVldC0gIGNsaW1hdGUtZ29hbHMgICBodHRwczovL3d3dy5saW5rbGF0ZXJzLmNvbS9lbi9pbnNpZ2h0cyBob3VnaHQtbGVhZGVyc2hpcC9lbGVjdHJpYy12ZWhpY2xlLWJhdHRlcmllcy9wb3dlcmluZy0gIHRoZS1mdXR1cmUvc291cmNpbmctcmF3LW1hdGVyaWFscyAgIGh0dHBzOi8vYXV0by5oaW5kdXN0YW50aW1lcy5jb20vYXV0by9uZXdzIGhlLXdvcmxkLW9mLWVsZWN0cmljLXZlaGljbGVzLWNhbi1oYXZlLWEtc3Ryb25nLSAgYWZnaGFuaXN0YW4tY29ubmVjdGlvbi00MTYzMTAxODY2MjY4Ny5odG1sICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGh0dHBzOi8vd3d3LmluZGlhdG9kYXkuaW4vZGl1L3N0b3J5L2dsb2JhbC1wbGF5ZXJzLWV5ZWluZy1hZmdoYW5pc3Rhbi12YXN0LW1pbmVyYWwtcmVzZXJ2ZXMtICAxODQ2MjE4LTIwMjEtMDgtMjcgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following statements  regarding the trends in India's migration data  is/ are correct?  1.  International migrants as a share of total  population in India is less than 1 per cent.  2.  Asia has the largest share of the Indian  diaspora compared to North America and  Europe combined.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEludGVybmF0aW9uYWwgbWlncmFudHMgYXMgYSBzaGFyZSBvZiB0b3RhbCBwb3B1bGF0aW9uIGluIEluZGlhIHdhcyBzdGVhZHkgYXQgMC40ICAgcGVyIGNlbnQgZnJvbSAyMDEwIHRvIDIwMTkuIEluZGlhIGhvc3RlZCA1LjEgbWlsbGlvbiBpbnRlcm5hdGlvbmFsIG1pZ3JhbnRzIGluIDIwMTksIGxlc3MgdGhhbiB0aGUgNS4yIG1pbGxpb24gICBpbiAyMDE1LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFzaWEgaG9zdHMgYWJvdXQgMS4xOSBDciBJbmRpYW4gaW1taWdyYW50cywgd2hlcmVhcyBOb3J0aCBBbWVyaWNhIGhvc3RzIG9ubHkgICBhYm91dCAzMy43IExha2ggSW5kaWFuIGltbWlncmFudHMgYW5kIEV1cm9wZSBob3N0cyBhYm91dCAxNC45IExha2ggSW5kaWFuIGltbWlncmFudHMgKGFzIG9mIDIwMTkpLiAgICBJdCBtdXN0IGJlIG5vdGVkIHRoYXQgdGhlIHNoYXJlcyBvZiBOb3J0aCBBbWVyaWNhIGFuZCBFdXJvcGUgdmlzLWEtdmlzIEFzaWEgaGF2ZSBncm93biBhcyBhIGRlc3RpbmF0aW9uICAgZm9yIHRoZSBJbmRpYW4gZGlhc3BvcmEgZnJvbSAxOTkwIHRvIDIwMTkuICAgS25vd2xlZGdlIEJhc2U6IEluZGlhIGlzIGZvbGxvd2VkIGJ5IE1leGljbyBhbmQgUnVzc2lhICgxMSBtaWxsaW9uIGVhY2gpLCBDaGluYSAoMTAgbWlsbGlvbikgYW5kIFN5cmlhICg4ICAgbWlsbGlvbikgaW4gdGVybXMgb2YgZW1pZ3JhdGVkIGRpYXNwb3JhLiAgIFJlYWQgRnVydGhlcjogaHR0cHM6Ly93d3cudGhlaGluZHVidXNpbmVzc2xpbmUuY29tL25ld3MvYXJvdW5kLXRoZS13b3JsZC10cmFjaW5nLXRoZS1jaGFuZ2luZy0gIHBhdHRlcm5zLW9mLWluZGlhbi1taWdyYW50cy9hcnRpY2xlMjk1MzA3NzAuZWNlICAgU291cmNlOiBodHRwczovL3d3dy5oaW5kdXN0YW50aW1lcy5jb20vd29ybGQtbmV3cy9hdC0xOC1taWxsaW9uLWluZGlhLWhhcy1sYXJnZXN0LWRpYXNwb3JhLWluLSAgdGhlLXdvcmxkLXVuLTEwMTYxMDc4MDE3NDI3Ny5odG1sICAgaHR0cHM6Ly93d3cudGhlaGluZHVidXNpbmVzc2xpbmUuY29tL25ld3MvYXJvdW5kLXRoZS13b3JsZC10cmFjaW5nLXRoZS1jaGFuZ2luZy1wYXR0ZXJucy1vZi0gIGluZGlhbi1taWdyYW50cy9hcnRpY2xlMjk1MzA3NzAuZWNlICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 42,
      "question" : "Which of the following statements  explains the reason for the British climate  region being a net importer of food crops?   1.  The regions are highly industrialized with  high standard of living.  2.  This area has a very high population density.   Select the correct code from the options given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE5vcnRoLVdlc3QgRXVyb3BlIGhhcyBsaXR0bGUgc3VycGx1cyBmb3IgZXhwb3J0LiBJdCBpcywgaW4gZmFjdCwgYSBuZXQgaW1wb3J0ZXIgb2YgZm9vZCBjcm9wcywgZXNwZWNpYWxseSB3aGVhdC4gICBBIGxhcmdlIHJhbmdlIG9mIGNlcmVhbHMsIGZydWl0cyBhbmQgcm9vdCBjcm9wcyBhcmUgcmFpc2VkLCBtYWlubHkgZm9yIGhvbWUgY29uc3VtcHRpb24gcmF0aGVyIHRoYW4gZm9yICAgZXhwb3J0LiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBub3J0aC13ZXN0ZXJuIEV1cm9wZWFuIGNvdW50cmllcyBhcmUgaGlnaGx5IGluZHVzdHJpYWxpemVkIHdpdGggaGlnaCAgIHN0YW5kYXJkIG9mIGxpdmluZy4gVGhlIGNvdW50cmllcyBhcmUgY29uY2VybmVkIGluIHRoZSBwcm9kdWN0aW9uIG9mIG1hY2hpbmVyeSwgY2hlbWljYWxzLCB0ZXh0aWxlcyBhbmQgICBvdGhlciBtYW51ZmFjdHVyZWQgYXJ0aWNsZXMgcmF0aGVyIHRoYW4gYWdyaWN1bHR1cmUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFsbCB0aGUgbm9ydGgtd2VzdGVybiBFdXJvcGVhbiBjb3VudHJpZXMgaGF2ZSBoaWdoIHBvcHVsYXRpb24gZGVuc2l0aWVzLiBUaGlzICAgbGVhdmVzIGxpdHRsZSBsYW5kIGZvciBleHRlbnNpdmUgYWdyaWN1bHR1cmFsIGFjdGl2aXRpZXMuICAgIFNvdXJjZTogQ2VydGlmaWNhdGUgUGh5c2ljYWwgYW5kIEh1bWFuIEdlb2dyYXBoeSBieSBHb2ggQ2hlbmcgTGVvbmcgLSBQMTY1LiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 43,
      "question" : "In which one of the following regions is  extensive commercial grain cultivation  practiced?  1. American Canadian prairies  2. European Steppes  3. Pampas of Argentina  4. Amazon Basin  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFtYXpvbiBCYXNpbiBpcyB0aGUgbGFyZ2VzdCB0cm9waWNhbCBmb3Jlc3QgaW4gdGhlIHdvcmxkLiBFeHRlbnNpdmUgYWdyaWN1bHR1cmUgaXMgbm90IHByYWN0aWNlZCBoZXJlLiBNb3N0bHkgICBwZW9wbGUgcHJhY3RpY2Ugc2hpZnRpbmcgY3VsdGl2YXRpb24gaGVyZS4gICBDb21tZXJjaWFsIEdyYWluIEZhcm1pbmcgaXMgYW4gZXh0ZW5zaXZlIGFncmljdWx0dXJhbCBhY3Rpdml0eSB3aGVyZWJ5IGNyb3BzIGFyZSBncm93biBmb3IgY29tbWVyY2lhbCAgIHB1cnBvc2UuIE1vc3QgY29tbW9ubHkgY29tbWVyY2lhbCBncm93biBncmFpbnMgYXJlIHdoZWF0IGFuZCBtYWl6ZS4gICAgSXQgaXMgbW9zdGx5IHByYWN0aWNlZCBpbiB0ZW1wZXJhdGUgZ3Jhc3NsYW5kcyBvZiBOb3J0aCBBbWVyaWNhLCBFdXJvcGUgYW5kIEFzaWEuICAgIENvbW1lcmNpYWwgZ3JhaW4gZmFybWluZyBvZiB3aGVhdCAgIFRoZXJlIGFyZSBmb3VyIG1ham9yIGFyZWFzIGluIHRoZSB3b3JsZCBrbm93biBmb3IgY29tbWVyY2lhbCBmYXJtaW5nIG9mIHdoZWF0LiBUaGVzZSBhcmUgVVMgYW5kICAgQ2FuYWRpYW4gUHJhaXJpZXM7IEV1cmEAc2lhbiBTdGVwcGVzOyBBcmdlbnRpbmUgUGFtcGFzIGFuZCBEb3ducyBvZiBBdXN0cmFsaWEuICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIEFtZXJpY2FuIENhbmFkaWFuIHByYWlyaWVzIGV4cGVyaWVuY2UgZHJ5IHNlbWktYXJpZCBjbGltYXRlcyB3aXRoIGFuIGFubnVhbCAgIHByZWNpcGl0YXRpb24gb2YgMTIgdG8gMTUgaW5jaGVzIHdoaWNoIGlzIHN1aXRhYmxlIGZvciBjb21tZXJjaWFsIGdyYWluIGN1bHRpdmF0aW9uLiAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIEV1cm9wZWFuIHN0ZXBwZXMgYXJlIHRoZSBsYXJnZXN0IHRlbXBlcmF0ZSBzdGVwcGUgYW5kIGV4cGVyaWVuY2Ugc2VtaS1hcmlkIGNsaW1hdGUgICB3aGljaCBpcyBiZXN0IGZvciBjb21tZXJjaWFsIGdyYWluIGN1bHRpdmF0aW9uLiAgIE9wdGlvbiAzIGlzIGNvcnJlY3QuIFBhbXBhcyBvZiBBcmdlbnRpbmEgaXMgYWxzbyBzZW1pLWFyaWQgcmVnaW9uLiBXaGVhdCBpcyBBcmdlbnRpbmEncyBsYXJnZXN0IGNyb3AgaW4gICBoYXJ2ZXN0ZWQgbGFuZCBhcmVhLiAgIEtub3dsZWRnZSBCYXNlOiBLZXkgQ2hhcmFjdGVyaXN0aWNzIC0gICBUaGUgcmVnaW9ucyB1bmRlciBDb21tZXJjaWFsIGdyYWluIGZhcm1pbmcgYXJlIGF3YXkgZnJvbSBjb2FzdHMgYW5kIGFyZSBnZW5lcmFsbHkgc2VtaS1hcmlkIHNvICAgc3BlY2lhbGl6ZSBvbmx5IGZvciBzaW5nbGUgY3JvcCBhIHllYXIgKG1vbm9jcm9wcGluZykuICAgIFRoZSBmYXJtcyBhcmUgdmVyeSBsYXJnZSBkdWUgdG8gYXZhaWxhYmlsaXR5IG9mIGxhcmdlIHRyYWN0cyBvZiBsYW5kLiBJdCBpcyBleHRlbnNpdmUgZmFybWluZywgaGlnaGx5IG1lY2hhbml6ZWQgICBhbmQgY2hhcmFjdGVyaXplZCBieSBsb3cgeWllbGQgcGVyIGFyZWEgb2YgbGFuZC4gICBTb3VyY2U6IGh0dHA6Ly93d3cuYWVlcy5nb3YuaW4vaHRtbGRvY3MvZG93bmxvYWRzL2UtICBjb250ZW50XzA2XzA0XzIwL1BSSU1BUlklMjBBQ1RJVklUSUVTLU1vZHVsZSUyMDAyLUhPLnBkZiAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlZ3kxMDUucGRmICAgTkNFUlQgRnVuZGFtZW50YWxzIG9mIEh1bWFuIEdlb2dyYXBoeSAgLTM4ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1, 2 and 4 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 44,
      "question" : "In which of the following types of  agriculture is the farming of citrus fruit very  important?  1. Market gardening   2. Plantation agriculture  3. Mediterranean agriculture  4. Co-operative farming  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB0ZXJtICdNZWRpdGVycmFuZWFuIGFncmljdWx0dXJlJyBhcHBsaWVzIHRvIHRoZSBhZ3JpY3VsdHVyZSBkb25lIGluIHRob3NlIHJlZ2lvbnMgd2hpY2ggYXJlIGhhdmluZyAgIE1lZGl0ZXJyYW5lYW4gdHlwZSBvZiBjbGltYXRlLiBUaGlzIHR5cGUgb2YgYWdyaWN1bHR1cmUgaXMgZGV0ZXJtaW5lZCBieSBjbGltYXRpYyBjb25kaXRpb25zLCB3aGljaCBleGVydCAgIHN1Y2ggYW4gaW5mbHVlbmNlIHRoYXQgYm90aCB0cmFkaXRpb25hbCBhbmQgY29tbWVyY2lhbCBhZ3JpY3VsdHVyZSBmbG91cmlzaCB3aXRoIGEgZG9taW5hbmNlIG9mIHRoZSAgIGFncmljdWx0dXJlIG9mIGNpdHJ1cyBmcnVpdHMgYWxvbmcgd2l0aCBob3J0aWN1bHR1cmUgYW5kIGZsb3JpY3VsdHVyZS4gVGhpcyByZWdpb24gaXMgYW4gaW1wb3J0YW50IHN1cHBsaWVyICAgb2YgY2l0cnVzIGZydWl0cy4gICBWaXRpY3VsdHVyZSBvciBncmFwZSBjdWx0aXZhdGlvbiBpcyBhIHNwZWNpYWxpdHkgb2YgdGhlIE1lZGl0ZXJyYW5lYW4gcmVnaW9uLiBCZXN0IHF1YWxpdHkgd2luZXMgaW4gdGhlICAgd29ybGQgd2l0aCBkaXN0aW5jdGl2ZSBmbGF2b3VycyBhcmUgcHJvZHVjZWQgZnJvbSBoaWdoIHF1YWxpdHkgZ3JhcGVzIGluIHZhcmlvdXMgY291bnRyaWVzIG9mIHRoaXMgcmVnaW9uLiAgIFRoZSBpbmZlcmlvciBncmFwZXMgYXJlIGRyaWVkIGludG8gcmFpc2lucyBhbmQgY3VycmFudHMuIFRoaXMgcmVnaW9uIGFsc28gcHJvZHVjZXMgb2xpdmVzIGFuZCBmaWdzLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gTWFya2V0IGdhcmRlbmluZyBhbmQgSG9ydGljdWx0dXJlOiBBIG1hcmtldCBnYXJkZW4gaXMgcmVsYXRpdmVseSBzbWFsbC1zY2FsZSAgIHByb2R1Y3Rpb24gb2YgZnJ1aXRzLCB2ZWdldGFibGVzIGFuZCBmbG93ZXJzIGFzIGNhc2ggY3JvcHMsIGZyZXF1ZW50bHkgc29sZCBkaXJlY3RseSB0byBjb25zdW1lcnMgYW5kICAgcmVzdGF1cmFudHMuICAgIE1hcmtldCBnYXJkZW5pbmcgYW5kIGhvcnRpY3VsdHVyZSBzcGVjaWFsaXplIGluIHRoZSBjdWx0aXZhdGlvbiBvZiBoaWdoIHZhbHVlIGNyb3BzIHN1Y2ggYXMgdmVnZXRhYmxlcywgICBmcnVpdHMgYW5kIGZsb3dlcnMsIHNvbGVseSBmb3IgdGhlIHVyYmFuIG1hcmtldHMuIEZhcm1zIGFyZSBzbWFsbCBhbmQgYXJlIGxvY2F0ZWQgd2hlcmUgdGhlcmUgYXJlIGdvb2QgICB0cmFuc3BvcnRhdGlvbiBsaW5rcyB3aXRoIHRoZSB1cmJhbiBjZW50cmUgd2hlcmUgaGlnaCBpbmNvbWUgZ3JvdXAgb2YgY29uc3VtZXJzIGlzIGxvY2F0ZWQuIEl0IGlzIGJvdGggICBsYWJvdXIgYW5kIGNhcGl0YWwgaW50ZW5zaXZlIGFuZCBsYXlzIGVtcGhhc2lzIG9uIHRoZSB1c2Ugb2YgaXJyaWdhdGlvbiwgSFlWIHNlZWRzLCBmZXJ0aWxpc2VycywgaW5zZWN0aWNpZGVzLCAgIGdyZWVuaG91c2VzIGFuZCBhcnRpZmljaWFsIGhlYXRpbmcgaW4gY29sZGVyIHJlZ2lvbnMuICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiBQbGFudGF0aW9uIEFncmljdWx0dXJlOiBwbGFudGF0aW9uIGFncmljdWx0dXJlIGlzIHRoZSBjdWx0aXZhdGlvbiBvZiBhIHNpbmdsZSBjYXNoIGNyb3AgICBvbiBhIGxhcmdlIHNjYWxlIGluIGEgcHJvZmVzc2lvbmFsIHdheS4gICBPcHRpb24gNCBpcyBpbmNvcnJlY3QuIENvLW9wZXJhdGl2ZSBGYXJtaW5nOiBBIGdyb3VwIG9mIGZhcm1lcnMgZm9ybXMgYSBjby1vcGVyYXRpdmUgc29jaWV0eSBieSBwb29saW5nICAgaW4gdGhlaXIgcmVzb3VyY2VzIHZvbHVudGFyaWx5IGZvciBtb3JlIGVmZmljaWVudCBhbmQgcHJvZml0YWJsZSBmYXJtaW5nLiBJbmRpdmlkdWFsIGZhcm1zIHJlbWFpbiBpbnRhY3QgICBhbmQgZmFybWluZyBpcyBhIG1hdHRlciBvZiBjb29wZXJhdGl2ZSBpbml0aWF0aXZlLiAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVneTEwNS5wZGYgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 45,
      "question" : "Why does Mediterranean climate region  receive most of the rain in winter?  1. In winter, it comes under the influence of  South-east trade winds.  2. In winter, warm gulf stream increases the  moisture content of easterlies.   3. Westerlies winds brought cyclonic rain from  the Atlantic.  4. It is due to maritime influence on the  narrow continent size of these regions.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1lZGl0ZXJyYW5lYW4gY2xpbWF0ZSByZWdpb24gcmVjZWl2ZXMgbW9zdCBvZiB0aGUgcmFpbiBpbiB3aW50ZXIgZHVlIHRvIHNoaWZ0aW5nIG9mIHByZXNzdXJlIGJlbHRzLiBJdCBjb21lICAgdW5kZXIgdGhlIGluZmx1ZW5jZSBvZiB3ZXN0ZXJsaWVzIHdoaWNoIHNoaWZ0IGVxdWF0b3J3YXJkLiBUaHVzIGluIG5vcnRoZXJuIGhlbWlzcGhlcmUsIHRoZSBwcmV2YWlsaW5nICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIG9uLXNob3JlIHdlc3RlcmxpZXMgYnJpbmcgbXVjaCBjeWNsb25pYyByYWluIGZyb20gdGhlIEF0bGFudGljIHRvIHRoZSBib3JkZXJpbmcgY291bnRyaWVzIG9mICAgTWVkaXRlcnJhbmVhbiBzZWEuIEluIHN1bW1lciwgZHVlIHRvIHNoaWZ0aW5nIG9mIHByZXNzdXJlIGJlbHRzLCB0aGUgdHJhZGUgd2luZHMgYmVjb21lIG9mZiBzaG9yZSBhbmQgdGh1cyAgIHByYWN0aWNhbGx5IG5vIHJhaW4gaW4gc3VtbWVyIGluIHRoZXNlIHJlZ2lvbnMuICAgICBTb3VyY2U6IEcgTGVvbmcgQ2hhcHRlci0xOSBwYWdlLSAxNDEsIDE0MiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 4 only   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following Pairs:  Industry Areas/ Regions well  known for it  1. Shipbuilding Japan  2. Aircraft USA  3. Automobile Germany  Which of the Pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gQXV0b21vYmlsZSBJbmR1c3RyeTogVGhlIGJlc3QgbG9jYXRpb25zIGluIGVzdGFibGlzaGVkIGluZHVzdHJpYWwgcmVnaW9ucyB3aXRoICAgYSB0cmFkaXRpb24gb2YgbWFudWZhY3R1cmluZyBjb21wb25lbnRzLiBHZW5lcmFsIE1vdG9ycywgRm9yZCBhbmQgQ2hyeXNsZXIgb2YgdGhlIFUuUy5BLiwgQnJpdGlzaCBMZXlsYW5kICAgaW4gdGhlIFUuSy4sIFZvbGtzd2FnZW4gYW5kIE1lcmNlZGVzIGluIEdlcm1hbnksIEZpYXQgb2YgSXRhbHksIERhdHN1biwgVG95b3RhLCBhbmQgTWF6ZGEgb2YgSmFwYW4gYXJlICAgdGhlIG1ham9yIHByb2R1Y2Vycy4gVS5TLkEuLCBKYXBhbiwgR2VybWFueSwgRnJhbmNlLCBhbmQgb3RoZXIgRXVyb3BlYW4gY291bnRyaWVzIGFyZSB0aGUgbWFqb3IgY2FyICAgcHJvZHVjZXJzIGluIHRoZSBXb3JsZC4gICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFNoaXBidWlsZGluZyBJbmR1c3RyeTogSXQgaXMgaWRlYWxseSBzaXR1YXRlZCBpbiBhcmVhcyBub3RlZCBmb3IgdGhlIElyb24gYW5kICAgU3RlZWwgSW5kdXN0cnkuIEphcGFuIGxlYWRzIGluIHRoZSBzaGlwYnVpbGRpbmcgSW5kdXN0cnkuICAgUGFpciAyIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBUaGUgVW5pdGVkIFN0YXRlcyBoYXMgdGhlIGxhcmdlc3QgYWlyY3JhZnQgbWFudWZhY3R1cmluZyBpbmR1c3RyeSB3aXRoICAgY29tcGFuaWVzIGxpa2UgQm9laW5nLiBJdCBhbHNvIGhhZCB0aGUgbGFyZ2VzdCBjb21tZXJjaWFsIGFpciB0cmF2ZWwgbWFya2V0IGluIDIwMTksIHdpdGggb3ZlciA5MjYuNyBtaWxsaW9uICAgcGFzc2VuZ2VycyBib2FyZGluZyBwbGFuZXMgcmVnaXN0ZXJlZCB0byBVLlMuIGFpciBjYXJyaWVycy4gVGhlIG5leHQgbGFyZ2VzdCBtYXJrZXQgd2FzIENoaW5hLCB3aXRoIGp1c3QgICB1bmRlciA2NjAgbWlsbGlvbiBwYXNzZW5nZXJzLCB3aGlsZSBJcmVsYW5kIHdhcyBpbiB0aGlyZCBwbGFjZSwgd2l0aCBqdXN0IG92ZXIgMTcwIG1pbGxpb24gcGFzc2VuZ2Vycy4gICBJbiAyMDE5LCB0aGUgVW5pdGVkIFN0YXRlcyBjb250cmlidXRlZCBzb21lIDEzNiBiaWxsaW9uIFUuUy4gZG9sbGFycyBpbiBhZXJvc3BhY2UgZXhwb3J0cy4gVGh1cywgbWFraW5nIGl0ICAgdGhlIGxlYWRpbmcgY291bnRyeSBpbiB0ZXJtcyBvZiBhZXJvc3BhY2UgZXhwb3J0cy4gVGhlIGNvdW50cnkgaXMgaG9tZSB0byBzb21lIG9mIHRoZSBsZWFkaW5nICAgbWFudWZhY3R1cmVycyBpbiB0aGUgYWVyb3NwYWNlIHNlY3RvciwgaW5jbHVkaW5nIEJvZWluZyBhbmQgTG9ja2hlZWQgTWFydGluLiAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4vbmNlcnRzL2wvaGVzczQwNS5wZGYgICAgaHR0cHM6Ly93d3cuc3RhdGlzdGEuY29tL3N0YXRpc3RpY3MvMjYzMjkwL2Flcm9zcGFjZS1pbmR1c3RyeS1yZXZlbnVlLWJyZWFrZG93bi8gICBodHRwczovL3d3dy5icml0YW5uaWNhLmNvbSBlY2hub2xvZ3kvYWVyb3NwYWNlLWluZHVzdHJ5ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 47,
      "question" : "Which one of the following is the most  common form of vegetation in the steppe type  of climate?  1. Trees with broad trunks with less canopy  are present   2. Shrubs and cacti are the dominant  vegetation.  3. Grasses are short and general absence of  trees.  4. Coniferous trees are predominant trees  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRlbXBlcmF0ZSBzdGVwcGVzIGFyZSBhcmVhcyB3aXRoIGEgc2VtaWFyaWQgY29udGluZW50YWwgY2xpbWF0aWMgcmVnaW1lLiBXaW50ZXJzIGFyZSBjb2xkIGFuZCBkcnksICAgc3VtbWVycyB3YXJtIHRvIGhvdC4gVGhlIHZlZ2V0YXRpb24gaXMgc3RlcHBlLCBzb21ldGltZXMgY2FsbGVkIHNob3J0Z3Jhc3MgcHJhaXJpZSwgYW5kIHNlbWlkZXNlcnQuICAgVHlwaWNhbCBzdGVwcGUgdmVnZXRhdGlvbiBjb25zaXN0cyBvZiBudW1lcm91cyBzcGVjaWVzIG9mIHNob3J0IGdyYXNzZXMgdGhhdCB1c3VhbGx5IGdyb3cgaW4gc3BhcnNlbHkgICBkaXN0cmlidXRlZCBidW5jaGVzLiBTY2F0dGVyZWQgc2hydWJzIGFuZCBsb3cgdHJlZXMgc29tZXRpbWVzIGdyb3cgaW4gdGhlIHN0ZXBwZTsgYWxsIGdyYWRhdGlvbnMgb2YgY292ZXIgICBhcmUgcHJlc2VudCwgZnJvbSBzZW1pZGVzZXJ0IHRvIHdvb2RsYW5kLiBCZWNhdXNlIGdyb3VuZCBjb3ZlciBpcyBnZW5lcmFsbHkgc3BhcnNlLCBtdWNoIHNvaWwgaXMgZXhwb3NlZC4gICBNYW55IHNwZWNpZXMgb2YgZ3Jhc3NlcyBhbmQgb3RoZXIgaGVyYnMgb2NjdXIuICAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBJbiBzdGVwcGUgdHlwZSBvZiBjbGltYXRlLCBUcmVlcyBhcmUgYWxtb3N0IG5pbCBhbmQgZ3Jhc3NlcyBhcmUgc2hvcnQuIFRyZWVzIHdpdGggYnJvYWQgdHJ1bmtzIHdpdGggbGVzcyAgIGNhbm9weSBhcmUgcHJlc2VudCBpbiBUcm9waWNhbCBncmFzc2xhbmRzLiBUaG91Z2ggQ29uaWZlcm91cyB0cmVlcyBhcmUgcHJlc2VudCBkdWUgdG8gaW5jcmVhc2UgaW4gICBwcmVjaXBpdGF0aW9uIHdoZW4gbW92aW5nIHBvbGV3YXJkLCBidXQgaXMgbm90IHRoZSBkb21pbmFudCB2ZWdldGF0aW9uLiBCdXQgd2hlbiB0aGUgcmFpbmZhbGwgaXMgYWJvdmUgMjAgICBpbmNoZXMgYXMgZGVzY3JpYmVkIGluIHByYWlyaWVzIG9mIE5vcnRoIEFtZXJpY2EsIGdyYXNzZXMgYXJlIHRhbGwsIGZyZXNoIGFuZCBudXRyaXRpb3VzLiBCdXQgd2hlbiB0aGUgICByYWluZmFsbCBpcyBsZXNzIHRoYW4gMjAgaW5jaGVzLCBncmFzc2VzIGFyZSBzaG9ydCwgd2lyeSBhbmQgc3BhcnNlLiBUaGUgc3RlcHBlIGdyYXNzZXMgY2FuIGxpZSBkb3JtYW50ICAgdGhyb3VnaG91dCB0aGUgcHJvbG9uZ2VkIGRyb3VnaHQuICAgIEtub3dsZWRnZSBCYXNlOiAgICAgU291cmNlOiBHQyBMZW9uZyBDaGFwdGVyLTIwIHBhZ2UtIDE1MCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 and 4 only  ",
        "option3" : " 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements:  1.  India has the second largest deposits of  Thorium in the world.  2.   Australia produces the largest share of  uranium from mines in the world.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGhhcyBodWdlIHJlc2VydmVzIG9mIGF0b21pYyBtaW5lcmFscy4gVXJhbml1bSBhbmQgVGhvcml1bSBhcmUgdGhlIG1haW4gYXRvbWljIG1pbmVyYWxzLiBUaG9yaXVtICAgaXMgZGVyaXZlZCBmcm9tIG1vbmF6aXRlIHdoaWNoIGNvbnRhaW5zIDEwIHBlcmNlbnQgdGhvcmlhIGFuZCAwLjMgcGVyY2VudCBVcmFuaWEuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBJbmRpYSBoYXMgdGhlIGxhcmdlc3QgZGVwb3NpdHMgb2YgVGhvcml1bSBpbiB0aGUgd29ybGQgYW5kIGlzIHRyeWluZyBoYXJkIHRvIGdldCAgIG9uIHRvIHRoZSB0aGlyZCBzdGFnZSBvZiBudWNsZWFyIGZ1ZWwgY29uc3VtcHRpb24gaW4gb3JkZXIgdG8gZ2V0IHNlbGYtcmVsaWFudCBpbiB0aGUgbnVjbGVhciBmdWVsIHN1cHBseS4gICBJbmRpYSBwcm9kdWNlcyBhYm91dCAyIHBlcmNlbnQgb2YgdGhlIHdvcmxkJ3MgdXJhbml1bS4gVGhlIHRvdGFsIHJlc2VydmVzIG9mIHVyYW5pdW0gYXJlIGVzdGltYXRlZCBhdCAgIDMwLDQ4MCB0b25uZXMuIEluIEluZGlhLCBVcmFuaXVtIGRlcG9zaXRzIG9jY3VyIGluIENyeXN0YWxsaW5lIHJvY2tzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gS2F6YWtoc3RhbiBwcm9kdWNlcyB0aGUgbGFyZ2VzdCBzaGFyZSBvZiB1cmFuaXVtIGZyb20gbWluZXMgKDQyJSBvZiB3b3JsZCAgIHN1cHBseSBmcm9tIG1pbmVzIGluIDIwMTkpLCBmb2xsb3dlZCBieSBDYW5hZGEgKDEzJSkgYW5kIEF1c3RyYWxpYSAoMTIlKS4gVGhlIENodS1TYXJ5c3UgYmFzaW4gaW4gY2VudHJhbCAgIEthemFraHN0YW4gYWxvbmUgYWNjb3VudHMgZm9yIG92ZXIgaGFsZiBvZiB0aGUgY291bnRyeSdzIGtub3duIHVyYW5pdW0gcmVzb3VyY2VzLiBUaGUgbGFyZ2VzdCB2aWFibGUgICBkZXBvc2l0cyBvZiBVcmFuaXVtIGFyZSBmb3VuZCBpbiBBdXN0cmFsaWEsIEthemFraHN0YW4sIGFuZCBDYW5hZGEuIE9seW1waWMgRGFtIGFuZCB0aGUgUmFuZ2VyIG1pbmUgICBpbiBzb3V0aCBhcmUgaW1wb3J0YW50IG1pbmVzIGluIEF1c3RyYWxpYS4gSGlnaC1ncmFkZSBkZXBvc2l0cyBhcmUgb25seSBmb3VuZCBpbiB0aGUgQXRoYWJhc2NhIEJhc2luIHJlZ2lvbiAgIG9mIENhbmFkYS4gICBDaWdhciBMYWtlLCBNY0FydGh1ciBSaXZlciBiYXNpbiBpbiBDYW5hZGEgYXJlIG90aGVyIGltcG9ydGFudCB1cmFuaXVtIG1pbmluZyBzaXRlcy4gICBLbm93bGVkZ2UgQmFzZTogTWluZXMgb2YgQXRvbWljIG1pbmVyYWxzIGFyZSBnaXZlbiBiZWxvdzogICAgICBvZiAyOCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgICBVcmFuaXVtIGluIEluZGlhIC0gSW5kaWEgaGFzIG5vIHNpZ25pZmljYW50IHJlc2VydmVzIG9mIFVyYW5pdW0uIEFsbCBuZWVkcyBhcmUgbWV0IHRocm91Z2ggaW1wb3J0cy4gICBJbmRpYSBpbXBvcnRzIHRob3VzYW5kcyBvZiB0b25uZXMgb2YgdXJhbml1bSBmcm9tIFJ1c3NpYSwgS2F6YWtoc3RhbiwgRnJhbmNlLCBhbmQgICBJbmRpYSBpcyB0cnlpbmcgaGFyZCB0byBpbXBvcnQgdXJhbml1bSBmcm9tIEF1c3RyYWxpYSBhbmQgQ2FuYWRhLiBUaGVyZSBhcmUgc29tZSBjb25jZXJucyByZWdhcmRpbmcgICBudWNsZWFyIHByb2xpZmVyYXRpb24gYW5kIG90aGVyIHJlbGF0ZWQgaXNzdWVzIHdoaWNoIEluZGlhIGlzIHRyeWluZyB0byBzb3J0IG91dC4gICBTb21lIHF1YWxpdHkgcmVzZXJ2ZXMgd2VyZSByZWNlbnRseSBkaXNjb3ZlcmVkIGluIHBhcnRzIG9mIEFuZGhyYSBQcmFkZXNoIGFuZCBUZWxhbmdhbmEgYmV0d2VlbiAgIFNlc2hhY2hhbGFtIGZvcmVzdCBhbmQgU3Jlc2FpbGFtIChTb3V0aGVybiBlZGdlIG9mIEFuZGhyYSB0byBTb3V0aGVybiBlZGdlIG9mIFRlbGFuZ2FuYSkuICAgU291cmNlOiBodHRwczovL3d3dy5wbWZpYXMuY29tL3VyYW5pdW0tdGhvcml1bS1kaXN0cmlidXRpb24tYWR2YW50YWdlcy11cmFuaXVtLWluZGlhLW51Y2xlYXItICBwb3dlci1wbGFudHMvICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements:  1. Ladang are short grasses found in semi-arid  climate zones  2. Lalang are tall grasses in equatorial regions  3. Belukar is secondary forests in Malaysia  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIHN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlICdzbGFzaCBhbmQgYnVybicgYWdyaWN1bHR1cmUgaXMga25vd24gYXMgJ0xhZGFuZycgaW4gSW5kb25lc2lhLCAnTWlscGEnIGluICAgTWV4aWNvIGFuZCBDZW50cmFsIEFtZXJpY2EsICdDb251Y28nIGluIFZlbnp1ZWxhLCAnUm9jYScgaW4gQnJhemlsLCAnTWFzb2xlJyBpbiBDZW50cmFsIEFmcmljYSwgJ1JheScgaW4gICBWaWV0bmFtLiAgIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIExhbGFuZyAodGFsbCBncmFzcykgYW5kIHRoaWNrIHVuZGVyZ3Jvd3RoIHNwcmluZyB1cCBhcyBzb29uIGFzIHRoZSB0cmVlcyBhcmUgY3V0IGluICAgZXF1YXRvcmlhbCByZWdpb25zLiBUaGV5IGNob2tlIHRoZSByZXN0b3JhdGlvbiBvZiBmb3Jlc3RzLiAgIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEJlbHVrYXIgYXJlIHRoZSBsZXNzIGx1eHVyaWFudCBzZWNvbmRhcnkgZm9yZXN0cyB0aGF0IHNwcmluZyB1cCBpbiBNYWxheXNpYSB3aGVuICAgdmlyZ2luIHRyb3BpY2FsIHJhaW4gZm9yZXN0cyBhcmUgY2xlYXJlZCBlaXRoZXIgZm9yIGx1bWJlcmluZyBvciBzaGlmdGluZyBjdWx0aXZhdGlvbi4gVGhlc2UgYXJlIGNoYXJhY3Rlcml6ZWQgICBieSBzaG9ydCB0cmVlcyBhbmQgdmVyeSBkZW5zZSB1bmRlcmdyb3d0aC4gSW4gdGhlIGNvYXN0YWwgYXJlYXMgYW5kIGJyYWNraXNoIHN3YW1wcywgbWFuZ3JvdmUgZm9yZXN0cyAgIHRocml2ZS4gICBTb3VyY2U6IEdlb2dyYXBoeSwgRy5DIExlb25nLCBDaGFwdGVyLTE1LCBQZy4gMTE4LCAxMjAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following countries does not  experiences the tropical monsoon climate?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRyb3BpY2FsIG1vbnNvb24gY2xpbWF0ZSBpcyBjaGFyYWN0ZXJpc2VkIGJ5IHRoZSBvbi1zaG9yZSBbc2VhIHRvIGxhbmRdIHRyb3BpY2FsIG1vbnNvb25zIG9jY3VyIGluIHRoZSAgIHN1bW1lciBhbmQgb2ZmLXNob3JlIFtsYW5kIHRvIHNlYV0gZHJ5IG1vbnNvb25zIGluIHRoZSB3aW50ZXIuIFRoZXkgYXJlIGJlc3QgZGV2ZWxvcGVkIGluIHRoZSBJbmRpYW4gICBzdWItY29udGluZW50LCBCdXJtYSwgVGhhaWxhbmQsIExhb3MsIENhbWJvZGlhLCBwYXJ0cyBvZiBWaWV0bmFtIGFuZCBzb3V0aCBDaGluYSBhbmQgbm9ydGhlcm4gICBBdXN0cmFsaWEuICAgIFBoaWxpcHBpbmVzIGV4cGVyaWVuY2VzIHRoZSBUcm9waWNhbCBNYXJpbmUgY2xpbWF0ZSB3aGljaCBpcyBtb2RpZmllZCBieSB0aGUgaW5mbHVlbmNlIG9mIHRoZSBvbi1zaG9yZSAgIFRyYWRlIFdpbmRzIGFsbCB0aGUgeWVhciByb3VuZCBvdXRzaWRlIHRoZSBtb25zb29uIHpvbmUuICAgS25vd2xlZGdlIEJhc2U6ICAgIFRyb3BpY2FsIE1vbnNvb24gY2xpbWF0ZTogVW5saWtlIGVxdWF0b3JpYWwgd2V0IGNsaW1hdGUsIG1vbnNvb24gY2xpbWF0ZSBpcyBjaGFyYWN0ZXJpemVkIGJ5IGRpc3RpbmN0ICAgd2V0IGFuZCBkcnkgc2Vhc29ucyBhc3NvY2lhdGVkIHdpdGggc2Vhc29uYWwgcmV2ZXJzYWwgb2Ygd2luZHMuIEZsb29kcyBpbiB3ZXQgc2Vhc29uIGFuZCBkcm91Z2h0cyBpbiBkcnkgICBzZWFzb24gYXJlIGNvbW1vbi4gVXN1YWxseSB0aGVyZSBhcmUgdGhyZWUgc2Vhc29ucyBuYW1lbHkgc3VtbWVyLCB3aW50ZXIgYW5kIHJhaW55IHNlYXNvbi4gT2NjdXIgICB3aXRoaW4gNcKwIHRvIDMwwrAgTiBhbmQgUyBvZiB0aGUgZXF1YXRvci4gICAgIG9mIDI4ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgVHJvcGljYWwgTWFyaW5lIGNsaW1hdGU6IE91dHNpZGUgdGhlIG1vbnNvb24gem9uZSwgdGhlIGNsaW1hdGUgaXMgbW9kaWZpZWQgYnkgdGhlIGluZmx1ZW5jZSBvZiB0aGUgb24tICBzaG9yZSBUcmFkZSBXaW5kcyBhbGwgdGhlIHllYXIgcm91bmQuIFRoaXMgdHlwZSBvZiBjbGltYXRlIGlzIGNhbGxlZCBUcm9waWNhbCBNYXJpbmUgQ2xpbWF0ZS4gU3VjaCBhIGNsaW1hdGUgICBoYXMgYSBtb3JlIGV2ZW5seSBkaXN0cmlidXRlZCByYWluZmFsbC4gU3VjaCBhIGNsaW1hdGUgaXMgZXhwZXJpZW5jZWQgaW4gQ2VudHJhbCBBbWVyaWNhLCBXZXN0IEluZGllcywgbm9ydGgtICBlYXN0ZXJuIEF1c3RyYWxpYSwgdGhlIFBoaWxpcHBpbmVzLCBwYXJ0cyBvZiBFYXN0IEFmcmljYSwgTWFkYWdhc2NhciwgdGhlIEd1aW5lYSBDb2FzdCBhbmQgZWFzdGVybiBCcmF6aWwuICAgVGhlIHJhaW5mYWxsIGlzIGJvdGggb3JvZ3JhcGhpYyB3aGVyZSB0aGUgbW9pc3QgdHJhZGVzIG1lZXQgdXBsYW5kIG1hc3NlcyBhcyBpbiBlYXN0ZXJuIEJyYXppbCwgYW5kICAgY29udmVjdGlvbmFsIGR1ZSB0byBpbnRlbnNlIGhlYXRpbmcgZHVyaW5nIHRoZSBkYXkgYW5kIGluIHN1bW1lci4gSXRzIHRlbmRlbmN5IGlzIHRvd2FyZHMgYSBzdW1tZXIgICBtYXhpbXVtIHdpdGhvdXQgYW55IGRpc3RpbmN0IGRyeSBwZXJpb2QuICAgU291cmNlOiBHZW9ncmFwaHksIEcuQyBMZW9uZywgQ2hhcHRlci0xNiwgUGcuIDEyMiAgICAgb2YgMjggIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Cambodia  ",
        "option2" : "Thailand  ",
        "option3" : "Philippines  ",
        "option4" : "Northern Australia     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}