{
  "testId" : "forum-2023-prelims-preparatory-6",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-6.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to cybersecurity and data privacy in  India:   1. As per new rules, virtual private networks  have to store user data for five years.   2. There exists no provision for Data Security  as of now in the Information Technology  Act, 2008.   3. Companies are required to report  cybersecurity incidents to CERT-In within  six hours of becoming aware of them.    Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBDeWJlcnNlY3VyaXR5IGlzIHRoZSBwcm90ZWN0aW9uIG9mIGludGVybmV0LWNvbm5lY3RlZCBzeXN0ZW1zIHN1Y2ggYXMgaGFyZHdhcmUsIHNvZnR3YXJlIGFuZCBkYXRhIGZyb20gICBjeWJlcnRocmVhdHMuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEEgcmVjZW50IGRpcmVjdGl2ZSBpc3N1ZWQgYnkgdGhlIGdvdmVybm1lbnQgbWFuZGF0ZXMgVlBOIHByb3ZpZGVycyB0byAgIG1haW50YWluIGFuZCBzdG9yZSB0aGUgdXNlciBkYXRhIGFzIHBhcnQgb2YgdGhlIGtub3cgeW91ciBjdXN0b21lciAoS1lDKSBwb2xpY3kgZm9yIGEgcGVyaW9kIG9mIGZpdmUgICB5ZWFycy4gSXQgaW5jbHVkZXMgYSB3aWRlIHJhbmdlIG9mIGRhdGEgb24gdGhlaXIgY3VzdG9tZXJzLCBpbmNsdWRpbmcgdGhlaXIgY29udGFjdCBudW1iZXJzLCBlbWFpbCBJRHMgYW5kICAgSVAgYWRkcmVzc2VzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRob3VnaCBJbmRpYSBjdXJyZW50bHkgZG9lcyBub3QgaGF2ZSBjb21wcmVoZW5zaXZlIGRhdGUgcHJvdGVjdGlvbiBhbmQgICBwcml2YWN5IGxlZ2lzbGF0aW9uLCBzZWN0aW9uIDQzIG9mIEluZm9ybWF0aW9uIFRlY2hub2xvZ3kgQWN0LCAyMDA4IGRlYWwgd2l0aCBkYXRhIHByb3RlY3Rpb24gYXMgb2Ygbm93LiAgIEl0IGNsZWFybHkgc3RhdGVzLCAnV2hlcmUgYSBib2R5IGNvcnBvcmF0ZSwgcG9zc2Vzc2luZywgZGVhbGluZyBvciBoYW5kbGluZyBhbnkgc2Vuc2l0aXZlIHBlcnNvbmFsIGRhdGEgb3IgICBpbmZvcm1hdGlvbiBpbiBhIGNvbXB1dGVyIHJlc291cmNlIHdoaWNoIGl0IG93bnMsIGNvbnRyb2xzIG9yIG9wZXJhdGVzLCBpcyBuZWdsaWdlbnQgaW4gaW1wbGVtZW50aW5nIGFuZCAgIG1haW50YWluaW5nIHJlYXNvbmFibGUgc2VjdXJpdHkgcHJhY3RpY2VzIGFuZCBwcm9jZWR1cmVzIGFuZCB0aGVyZWJ5IGNhdXNlcyB3cm9uZ2Z1bCBsb3NzIG9yIHdyb25nZnVsICAgZ2FpbiB0byBhbnkgcGVyc29uLCBzdWNoIGJvZHkgY29ycG9yYXRlIHNoYWxsIGJlIGxpYWJsZSB0byBwYXkgZGFtYWdlcyBieSB3YXkgb2YgY29tcGVuc2F0aW9uLCB0byB0aGUgICBwZXJzb24gc28gYWZmZWN0ZWQuJyAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgSW5kaWFuIENvbXB1dGVyIEVtZXJnZW5jeSBSZXNwb25zZSBUZWFtIChDRVJULUluKSBoYXMgbWFuZGF0ZWQgdGhhdCAgIGFsbCBjeWJlcnNlY3VyaXR5IGluY2lkZW50cyBzdWNoIGFzIHRhcmdldGVkIHNjYW5uaW5nIG9yIHByb2Jpbmcgb2YgY3JpdGljYWwgbmV0d29ya3MgYW5kIHN5c3RlbXMsICAgY29tcHJvbWlzZSBvZiBjcml0aWNhbCBzeXN0ZW1zIGFuZCBpbmZvcm1hdGlvbiwgdW5hdXRob3JpemVkIGFjY2VzcyBvZiBkYXRhIGFuZCBzeXN0ZW1zIGFtb25nIG90aGVycyAgIG11c3QgYmUgaW5mb3JtZWQgdG8gaXQgYnkgdGhlIHJlc3BlY3RpdmUgY29tcGFuaWVzIHdpdGhpbiBzaXggaG91cnMgb2YgZWl0aGVyIGJlaW5nIG1hZGUgYXdhcmUgb2YgdGhlICAgaW5jaWRlbnQgb3IgYmVjb21pbmcgYXdhcmUgaXRzZWxmLiAgICBTb3VyY2U6ICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvYnVzaW5lc3MvcmVwb3J0aW5nLWN5YmVyLWluY2lkZW50cy1pbi02LWhycy1tYW5kYXRvcnktICA3ODkyMzQ0LyAgICAgaHR0cHM6Ly9wb2xpY2UucHkuZ292LmluL0luZm9ybWF0aW9uJTIwVGVjaG5vbG9neSUyMEFjdCUyMDIwMDAlMjAtICAlMjAyMDA4JTIwKGFtZW5kbWVudCkucGRmICAgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20gZWNoIGVjaG5vbG9neS9ldHRlY2gtZXhwbGFpbmVyLXdoYXQtaW5kaWFzLW5ldy12cG4tICBydWxlcy1tZWFuLWZvci15b3VyLXByaXZhY3kvYXJ0aWNsZXNob3cvOTE1OTc3MjUuY21zICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1 and 2 only    "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements with  reference to the Tenth Schedule of the  Constitution:   1.  It was added by the Eighty-sixth  Constitutional Amendment Act of 2002.   2.  A nominated member of a House becomes  disqualified for being a member of the  House if he joins any political party before  the expiry of six months.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgVGVudGggU2NoZWR1bGUgYWRkZWQgdGhlIHByb3Zpc2lvbnMgd2l0aCByZWdhcmQgdG8gdGhlIGRpc3F1YWxpZmljYXRpb24gb2YgTVBzIGFuZCBNTEFzIG9uIHRoZSAgIGdyb3VuZHMgb2YgZGVmZWN0aW9uLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQSBuZXcgVGVudGggU2NoZWR1bGUgd2FzIGFkZGVkIHRvIEluZGlhbiBjb25zdGl0dXRpb24gYnkgNTJuZCBBbWVuZG1lbnQgICBBY3Qgb2YgMTk4NSB3aGljaCBwcm92aWRlZCBmb3IgZGlzcXVhbGlmaWNhdGlvbiBvZiBtZW1iZXJzIG9mIHBhcmxpYW1lbnQgYW5kIHN0YXRlIGxlZ2lzbGF0dXJlIG9uIGdyb3VuZCAgIG9mIGRlZmVjdGlvbiAoQW50aS0gZGVmZWN0aW9uKS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiAgQSBub21pbmF0ZWQgbWVtYmVyIG9mIGEgSG91c2UgYmVjb21lcyBkaXNxdWFsaWZpZWQgZm9yIGJlaW5nIGEgbWVtYmVyIG9mICAgdGhlIEhvdXNlIGlmIGhlIGpvaW5zIGFueSBwb2xpdGljYWwgcGFydHkgYWZ0ZXIgKGFuZCBub3QgYmVmb3JlKSB0aGUgZXhwaXJ5IG9mIHNpeCBtb250aHMgZnJvbSB0aGUgZGF0ZSBvbiAgIHdoaWNoIGhlIHRha2VzIGhpcyBzZWF0IGluIHRoZSBIb3VzZS4gVGhpcyBtZWFucyB0aGF0IGhlIG1heSBqb2luIGFueSBwb2xpdGljYWwgcGFydHkgd2l0aGluIHNpeCBtb250aHMgb2YgICB0YWtpbmcgaGlzIHNlYXQgaW4gdGhlIEhvdXNlIHdpdGhvdXQgaW52aXRpbmcgdGhpcyBkaXNxdWFsaWZpY2F0aW9uLiAgICAgIEFzIHBlciB0aGUgMTk4NSBBY3QsIGEgZGVmZWN0aW9uIGJ5IG9uZSB0aGlyZCBvZiB0aGUgZWxlY3RlZCBtZW1iZXJzIG9mIGEgcG9saXRpY2FsIHBhcnR5IHdhcyBjb25zaWRlcmVkIGEgICBtZXJnZXIuIEJ1dCB0aGUgOTFzdCBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgYWN0IGFtZW5kZWQgdGhpcyBhbmQgbm93IGF0IGxlYXN0IHR3byB0aGlyZHMgb2YgdGhlICAgbWVtYmVycyBvZiBhIHBhcnR5IGhhdmUgdG8gYmUgaW4gZmF2b3VyIG9mIHRoZSBtZXJnZXIgdG8gYnlwYXNzIHRoZSBhbmQgdGhlIGFudGktZGVmZWN0aW9uIGFjdC4gICBTb3VyY2U6IExBWE1JS0FOVCAgICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements:  1.  District Magistrate is authorized to provide  a certificate of identity for a transgender  person.  2.  The Supreme Court in NALSA vs Union of  India ruled that transgender people should  be recognized as a third gender.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIERpc3RyaWN0IE1hZ2lzdHJhdGUgc2hhbGwgaXNzdWUgdG8gdGhlIGFwcGxpY2FudCBhIGNlcnRpZmljYXRlIG9mIGlkZW50aXR5LCAgIGluZGljYXRpbmcgdGhlIGdlbmRlciBvZiBzdWNoIHBlcnNvbiBhcyB0cmFuc2dlbmRlci4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW4gMjAxNCwgdGhlIEluZGlhbiBTdXByZW1lIENvdXJ0IGluIE5BTFNBIHZzIFVuaW9uIG9mIEluZGlhIHJ1bGVkIHRoYXQgICB0cmFuc2dlbmRlciBwZW9wbGUgc2hvdWxkIGJlIHJlY29nbml6ZWQgYXMgYSB0aGlyZCBnZW5kZXIgYW5kIGVuam95IGFsbCBmdW5kYW1lbnRhbCByaWdodHMsIHdoaWxlIGFsc28gICBiZWluZyBlbnRpdGxlZCB0byBzcGVjaWZpYyBiZW5lZml0cyBpbiBlZHVjYXRpb24gYW5kIGVtcGxveW1lbnQuICAgU291cmNlOiBodHRwczovL3d3dy5uZXdzMTguY29tL25ld3MvaW5kaWEva2FybmF0YWthLWJlY29tZXMtZmlyc3Qtc3RhdGUtdG8tcHJvdmlkZS0xLSAgcmVzZXJ2YXRpb24tZm9yLXRyYW5zZ2VuZGVycy0zOTg4NTcxLmh0bWwgICBodHRwczovL3NvY2lhbGp1c3RpY2UubmljLmluL3dyaXRlcmVhZGRhdGEvVXBsb2FkRmlsZS9kcmFmdHJ1bGUxNjA0LnBkZiAgIGh0dHBzOi8vd3d3Lmhydy5vcmcvbmV3cy8yMDE5LzEyLzA1L2luZGlhcy10cmFuc2dlbmRlci1yaWdodHMtbGF3LWlzbnQtd29ydGgtY2VsZWJyYXRpbmcgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 4,
      "question" : "Which of the following are the steps taken  by the government to increase citizens'  participation at various levels of governance  and policy formulation?   1.  Publishing of new bills and amendments to  existing legislation on the Ministry's website  for public scrutiny.  2.  Mandating social Audit under the MGNREG  Act.    3.  Online platforms like mygov.in to discuss  new ideas which may be incorporated into  government policies.  4.  Scrapping of the Official Secrets Act   5.  Institutionalizing plebiscite on all important  public questions.  Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gMSBpcyBjb3JyZWN0OiBBbGwgbmV3IGJpbGxzIHRoYXQgdGhlIGdvdmVybm1lbnQgcGxhbnMgb24gaW50cm9kdWNpbmcgaW4gdGhlIFBhcmxpYW1lbnQsIGFzIHdlbGwgYXMgICBhbWVuZG1lbnRzIHRvIGV4aXN0aW5nIGxlZ2lzbGF0aW9uIGlzIHB1Ymxpc2hlZCBvbiB0aGUgTWluaXN0cnkncyB3ZWJzaXRlIGZvciBwdWJsaWMgc2NydXRpbnkuIFRoZSAgIG1pbmlzdHJ5IGludml0ZXMgY29tbWVudHMgZnJvbSB0aGUgcHVibGljLCBlc3BlY2lhbGx5IHRoZSBzdGFrZWhvbGRlcnMgd2hvIGFyZSBkaXJlY3RseSBhZmZlY3RlZCBieSB0aGUgICBiaWxsIHRvIHByZXNlbnQgdGhlaXIgdmlld3Mgc28gdGhhdCB0aGV5IG1heSBiZSBpbmNsdWRlZCBpbiB0aGUgbGVnaXNsYXRpb24uIFRoaXMgaGVscHMgcmVkdWNlIHRoZSBnYXAgICBiZXR3ZWVuIGdvdmVybm1lbnQncyBlZmZvcnRzIGFuZCBwZW9wbGUncyBuZWVkcyBhdCB0aGUgZ3Jhc3Nyb290IGxldmVsLiAgICBPcHRpb24gMiBpcyBjb3JyZWN0OiBUaGUgU29jaWFsIEF1ZGl0IGJ5IEdyYW0gU2FiaGEgaXMgbWFuZGF0ZWQgdW5kZXIgU2VjdGlvbiAxNyBvZiB0aGUgTUdOUkVHIEFjdC4gICAgU29jaWFsIGF1ZGl0aW5nIGlzIGEgcHJvY2VzcyBvZiByZXZpZXdpbmcgb2ZmaWNpYWwgcmVjb3JkcyBhbmQgZGV0ZXJtaW5pbmcgd2hldGhlciBzdGF0ZSByZXBvcnRlZCAgIGV4cGVuZGl0dXJlcyByZWZsZWN0IHRoZSBhY3R1YWwgbW9uaWVzIHNwZW50IG9uIHRoZSBncm91bmQuIFRoZSBwdWJsaWMgYW5ub3VuY2VtZW50IG9mIHBlb3BsZSBlbnJvbGxlZCAgIGluIHRoZSBwYXlyb2xsIG11c3RlciBvZiBOUkVHQSBhdCBQYW5jaGF5YXQgbWVldGluZ3MgaXMgYW4gZXhhbXBsZSBvZiBob3cgcGVvcGxlIGdldCB0byBwYXJ0aWNpcGF0ZSAgIGZpcnN0IGhhbmQgaW4gdGhlIHZlcmlmaWNhdGlvbiBvZiBwcm9wZXIgc3BlbmRpbmcgb2YgZnVuZHMgaW4gc2NoZW1lcy4gICAgT3B0aW9uIDMgaXMgY29ycmVjdDogT25saW5lIFBsYXRmb3JtcyBsaWtlIG15Z292LmluIGhlbHAgY2l0aXplbnMgYnkgcHJvdmlkaW5nIGEgcGxhdGZvcm0gdG8gZGlzY3VzcyBuZXcgICBpZGVhcyB3aGljaCBtYXkgYmUgdHVybmVkIGludG8gcG9saWN5IG9yIGFpcmluZyBncmlldmFuY2VzIGFnYWluc3QgZXhpc3Rpbmcgc3lzdGVtcyBzbyB0aGF0IHRoZXkgbWF5IGJlICAgY29ycmVjdGVkIGluIGFsaWdubWVudCB3aXRoIHBlb3BsZSdzIGV4cGVjdGF0aW9ucyBhbmQgbmVlZHMgc28gdGhhdCB0aGUgZ292ZXJuYW5jZSBpcyByZXNwb25zaXZlICAgcmF0aGVyIHRoYW4gaW1wb3NlZC4gICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0OiBBbHRob3VnaCB0aGUgZ292ZXJubWVudCwgdGhlIExlZ2lzbGF0dXJlIGFuZCB0aGUgSnVkaWNpYXJ5IGJlbGlldmUgdGhhdCAgIFRyYW5zcGFyZW5jeSBzaG91bGQgYmUgdGhlIGJhc2lzIG9mIGdvdmVybmFuY2UsIE9mZmljaWFsIFNlY3JldHMgQWN0LCBhIGNvbG9uaWFsIGxhdywgdGhhdCBjbGFzc2lmaWVkICAgdmFyaW91cyBnb3Zlcm5tZW50IHJlY29yZHMgYW5kIGFjdGl2aXRpZXMgaGFzIG5vdCBiZWVuIHJlcGVhbGVkIGFzIHlldCBpbiBJbmRpYS4gVGhpcyBpcyBiZWNhdXNlIHRoZSAgIGxlZ2lzbGF0dXJlIGJlbGlldmVzIHRoYXQgY2VydGFpbiBtYXR0ZXJzIHN1Y2ggYXMgZGVmZW5jZSwgaW50ZXJuYWwgc2VjdXJpdHksIGZvcmVpZ24gcmVsYXRpb25zLCBldGMgYXJlIHRvbyAgIHNlbnNpdGl2ZSB0byBiZSBtYWRlIHB1YmxpYyBhbmQgaGVuY2UgbmVlZCB0byBiZSBwcm90ZWN0ZWQsIGluIGxhcmdlciBwdWJsaWMgYW5kIG5hdGlvbmFsIGludGVyZXN0LiAgICBPcHRpb24gNSBpcyBpbmNvcnJlY3Q6IFBsZWJpc2NpdGUgaXMgYSBkaXJlY3Qgdm90ZSBvZiBhbGwgdGhlIG1lbWJlcnMgb2YgYW4gZWxlY3RvcmF0ZSBvbiBhbiBpbXBvcnRhbnQgICBwdWJsaWMgcXVlc3Rpb24uIEl0IGlzIG9mdGVuIG9ic2VydmVkIGluIERpcmVjdCBEZW1vY3JhY2llcy4gSG93ZXZlciwgSW5kaWEgaXMgYSBSZXByZXNlbnRhdGl2ZSAgIERlbW9jcmFjeSwgd2hlcmUgZGlyZWN0bHkgZWxlY3RlZCByZXByZXNlbnRhdGl2ZXMgb2YgcGVvcGxlIGZyYW1lIHBvbGljaWVzIGFuZCBsZWdpc2xhdGlvbnMgdG8gcnVuIHRoZSAgIGNvdW50cnkuIFNvLCB0aGUgbWVjaGFuaXNtIG9mIHBsZWJpc2NpdGUgaGFzIG5vdCBiZWVuIGluc3RpdHV0aW9uYWxpc2VkIGluIGFsbCBwdWJsaWMgcXVlc3Rpb25zLiAgIEtub3dsZWRnZSBCYXNlOiAgICAgT3RoZXIgc3VjaCBpbml0aWF0aXZlczogICAgMSkgQ29tcHJlaGVuc2l2ZSBkYXNoYm9hcmRzIHdpdGggaW50ZXJhY3RpdmUgcmVhbCB0aW1lIGRhdGEgYW5kIG1hcHMgdG8gc2hvdyB0aGUgcHJvZ3Jlc3Mgb2YgbmF0aW9uYWwgICBwcm9qZWN0cywgb3Igc3RhdHVzIG9mIHJlc291cmNlcy4gICAgMikgSW1wcm92ZXMgc2luZ2xlIHdpbmRvdyBhbmQgb25saW5lIGdyaWV2YW5jZSByZWRyZXNzYWwgbWVjaGFuaXNtcyBoZWxwIG1ha2UgZ292ZXJuYW5jZSBtb3JlICAgcmVzcG9uc2l2ZSBieSByZWR1Y2luZyB0aGUgdGltZSB0YWtlbiB0byByZXNvbHZlIGlzc3Vlcy4gICAgMykgVW1icmVsbGEgYXBwcyBsaWtlIFVNQU5HIGdyb3VwIGdvdmVybm1lbnQgc2VydmljZXMgc28gdGhhdCBhY2Nlc3Npbmcgc2VydmljZXMgb3IgcmVnaXN0ZXJpbmcgICBncmlldmFuY2VzIGJlY29tZXMgc2VhbWxlc3MgZm9yIGNpdGl6ZW5zLiAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgNCkgUHJlc2VuY2Ugb2YgZ292ZXJubWVudCBtaW5pc3RlcnMgYW5kIG1pbmlzdHJpZXMgb24gc29jaWFsIG1lZGlhIGxpa2UgVHdpdHRlciBhbmQgcHJvbXB0IHJlc3BvbnNlIHRvICAgY2l0aXplbiBlbmdhZ2VtZW50IG9uIHRoZXNlIHBsYXRmb3Jtcy4gICAgU291cmNlOiBMYXhtaWthbnQsIGh0dHBzOi8vdmlrYXNwZWRpYS5pbi9hZ3JpY3VsdHVyZS9wb2xpY2llcy1hbmQtc2NoZW1lcy9ydXJhbC1lbXBsb3ltZW50LSAgcmVsYXRlZC0xL21nbnJlZ2Evc29jaWFsLWF1ZGl0LWluLW1nbnJlZ3Mvc29jaWFsLWF1ZGl0LWdyYW0tICBzYWJoYSM6fjp0ZXh0PVRoZSUyMFNvY2lhbCUyMEF1ZGl0JTIwR3JhbSUyMFNhYmhhJTIwaXMlMjBhJTIwc3BlY2lhbCUyMGZvcnVtJTIwYW5kLHRoZSAgJTIwZmluZGluZ3MlMjBvZiUyMHNvY2lhbCUyMGF1ZGl0LiAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbmFsL2FsbC15b3UtbmVlZC10by1rbm93LWFib3V0LXRoZS1vZmZpY2lhbC1zZWNyZXRzLSAgYWN0L2FydGljbGUyNjQ1ODAwNi5lY2UgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2 and 5 only   ",
        "option3" : "1, 2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 5 only   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements with  reference to the minimum age of marriage for  Women in India:  1.  The government has recently revised the  minimum age of marriage for women from  18 to 21 years.  2.  The minimum age of marriage is prescribed  through the Prohibition of Child Marriage  Act, 2006.  Which of the above-given statements is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFZhcmlvdXMgQ2l2aWwgYW5kIHBlcnNvbmFsIGxhd3MgdGhhdCBnb3Zlcm4gbWFycmlhZ2UgYW5kIG90aGVyIHBlcnNvbmFsIHByYWN0aWNlcyBmb3IgY29tbXVuaXRpZXMgICBwcmVzY3JpYmUgY2VydGFpbiBjcml0ZXJpYSBmb3IgbWFycmlhZ2UsIGluY2x1ZGluZyBhZ2Ugb2YgdGhlIGJyaWRlIGFuZCBncm9vbS4gRm9yIGV4YW1wbGUsIFNlY3Rpb24gNShpaWkpICAgb2YgVGhlIEhpbmR1IE1hcnJpYWdlIEFjdCwgMTk1NSwgc2V0cyBhIG1pbmltdW0gYWdlIG9mIDE4IGZvciB0aGUgYnJpZGUgYW5kIDIxIGZvciB0aGUgZ3Jvb20uIFRoaXMgaXMgICB0aGUgc2FtZSBmb3IgQ2hyaXN0aWFucyB1bmRlciB0aGUgSW5kaWFuIENocmlzdGlhbiBNYXJyaWFnZSBBY3QsIDE4NzIgYW5kIHRoZSBTcGVjaWFsIE1hcnJpYWdlIEFjdC4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBQcm9oaWJpdGlvbiBvZiBDaGlsZCBNYXJyaWFnZSAoQW1lbmRtZW50KSBCaWxsLCAyMDIxLCB3aGljaCBzZWVrcyB0byByYWlzZSAgIHRoZSBsZWdhbCBhZ2Ugb2YgbWFycmlhZ2UgZm9yIEluZGlhbiB3b21lbiBmcm9tIDE4IHRvIDIxIHllYXJzLCB3YXMgc2VudCB0byBhIHBhcmxpYW1lbnRhcnkgc3RhbmRpbmcgICBjb21taXR0ZWUuIFNpbmNlIGl0IGlzIG5vdCBwYXNzZWQgeWV0LCBpdCBkb2Vzbid0IGhhdmUgdGhlIGZvcmNlIG9mIHRoZSBsYXcuIFRoZSBCaWxsIGFpbXMgdG8gZXJhZGljYXRlIGNoaWxkICAgbWFycmlhZ2UgYW5kIGJyaW5nIGFib3V0IHBhcml0eSBpbiB0aGUgbWFycmlhZ2VhYmxlIGFnZSBmb3IgbWVuIGFuZCB3b21lbi4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgYWdlIGxpbWl0IGlzIHByZXNjcmliZWQgaW4gdGhlIFByb2hpYml0aW9uIG9mIENoaWxkIE1hcnJpYWdlIEFjdCwgMjAwNi4gVGhpcyAgIHdvdWxkIHJlcXVpcmUgYW1lbmRtZW50IHRvIGNoYW5nZSB0aGUgbWluaW11bSBhZ2UgbGltaXQuIEl0IHdvdWxkIGFsc28gbmVlZCB0byBiZSBmb2xsb3dlZCBieSAgIG5lY2Vzc2FyeSBjaGFuZ2VzIGluIGxhd3MgbGlrZSB0aGUgSGluZHUgTWFycmlhZ2UgQWN0LCB0aGUgSW5kaWFuIENocmlzdGlhbiBNYXJyaWFnZSBBY3QgYW5kIHRoZSBTcGVjaWFsICAgTWFycmlhZ2UgQWN0IGFzIHdlbGwgYXMgcGVyc29uYWwgbGF3cy4gICAgU291cmNlOiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwbGFpbmVkL2xlZ2FsLWFnZS1tYXJyaWFnZS1mb3Itd29tZW4taW5kaWEtbGF3LSAgNzY3Njc0OC8gICAgaHR0cHM6Ly93d3cuaW5kaWFzcGVuZC5jb20vaW5kaWFzcGVuZC1pbnRlcnZpZXdzL2xhdy1ub3Qtc3VmZmljaWVudC10by1icmluZy1zb2NpYWwtY2hhbmdlLXRoYXQtICB3aWxsLWVuZC1jaGlsZC1tYXJyaWFnZS0gIDgwMzYyOCM6fjp0ZXh0PU11bWJhaSUzQSUyMFRoZSUyMFByb2hpYml0aW9uJTIwT2YlMjBDaGlsZCxhZ2UlMjBmb3IlMjBtZW4lMjBhbmQlMjB3byAgbWVuLiAgICBodHRwczovL3d3dy5lZGV4bGl2ZS5jb20vbmV3cy8yMDIxL25vdi8yNS9uZmhzLTUtZXZlcnktZm91cnRoLXdvbWFuLWFnZWQtMjAtMjQtZmVsbC1wcmV5LXRvLSAgY2hpbGQtbWFycmlhZ2UtZXZlbi1hcy1wZXJjZW50YWdlLWRyb3BzLTI1ODQ0Lmh0bWwgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to the National Human  Rights Commission (NHRC), which of the  following statements is/are correct?   1. It is empowered to provide monetary  compensation to a victim.   2. The recommendations of NHRC are not  binding in nature on the government.   3. It cannot take Suo moto cognizance of  human rights issues.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBOYXRpb25hbCBIdW1hbiBSaWdodHMgQ29tbWlzc2lvbiBvciBOSFJDIGlzIGEgc3RhdHV0b3J5IGJvZHkgd2l0aCB0aGUgb2JqZWN0aXZlIG9mIHByb21vdGluZyBhbmQgICBwcm90ZWN0aW5nIGh1bWFuIHJpZ2h0cy4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBJdCBkb2VzIG5vdCBwcm92aWRlIHBheW1lbnQgb2YgY29tcGVuc2F0aW9uIHRvIHRoZSB2aWN0aW0uIEl0IG1heSBnaXZlICAgcmVjb21tZW5kYXRpb25zIHJlZ2FyZGluZyB0aGUgbW9uZXRhcnkgcmVsaWVmIHByb3ZpZGVkIHRvIHRoZSB2aWN0aW0sIGJ1dCBjYW4ndCBnaXZlIHBheW1lbnQgaXRzZWxmLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgcmVjb21tZW5kYXRpb25zIG9mIE5IUkMgYXJlIG5vdCBiaW5kaW5nIGluIG5hdHVyZSwgYnV0IGl0IHNob3VsZCBiZSAgIGluZm9ybWVkIGFib3V0IHRoZSBhY3Rpb24gdGFrZW4gb24gaXRzIHJlY29tbWVuZGF0aW9ucyB3aXRoaW4gb25lIG1vbnRoLiBCdXQgaXQgaXMgbm90IGJpbmRpbmcgb24gdGhlICAgZXhlY3V0aXZlIHRvIHN1Ym1pdCBBVFIgKGFjdGlvbiB0YWtlbiByZXBvcnQpLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIE5IUkMgY2FuIHRha2UgU3VvIG1vdG8gY29nbml6YW5jZSBvZiBodW1hbiByaWdodHMgaXNzdWUuIEZvciBFeGFtcGxlLCBOSFJDICAgdG9vayBTdW8gbW90byBjb2duaXphbmNlIG9mIG1lZGlhIHJlcG9ydHMgYWJvdXQgdGhlIGRlYXRoIG9mIGZvdXIgYWNjdXNlZCBpbiBUZWxhbmdhbmEgcmFwZSBhbmQgICBtdXJkZXIgY2FzZSBpbiBhIHBvbGljZSBlbmNvdW50ZXI7IG9yZGVycyBmb3Igc3BvdCBpbnF1aXJ5IGJ5IGl0cyBpbnZlc3RpZ2F0aW9uIHRlYW0gICAgIFNvdXJjZTogaHR0cHM6Ly9wcnNpbmRpYS5vcmcvYmlsbHRyYWNrIGhlLXByb3RlY3Rpb24tb2YtaHVtYW4tcmlnaHRzLWFtZW5kbWVudC1iaWxsLTIwMTkgICAgTGF4bWlrYW50IFBvbGl0eSByZXZpc2VkIDZ0aCBlZGl0aW9uIGNoYXB0ZXItNTUgcGFnZS01NS4zICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1, 2 and 3          "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements with  reference to the Central Bureau of  Investigation:   1.  The CBI acts as the 'National Central  Bureau' of Interpol in India.   2.  It can suo-moto take up investigation of  offences only in the Union Territories and  not in states.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENlbnRyYWwgQnVyZWF1IEludmVzdGlnYXRpb24gaXMgSW5kaWEncyB0b3Atbm90Y2ggYWdlbmN5IHRoYXQgaW52ZXN0aWdhdGVzIHZlcnkgc2V2ZXJlIGNhc2VzIGZyb20gYWxsIG92ZXIgICB0aGUgY291bnRyeS4gICBUaGUgUmlnaHQgdG8gSW5mb3JtYXRpb24gQWN0IDIwMDUgc2V0cyBvdXQgdGhlIHJ1bGVzIGFuZCBwcm9jZWR1cmVzIHJlZ2FyZGluZyBjaXRpemVucycgcmlnaHQgdG8gICBpbmZvcm1hdGlvbi4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgQ0JJIGFjdHMgYXMgdGhlICdOYXRpb25hbCBDZW50cmFsIEJ1cmVhdScgb2YgSW50ZXJwb2wgaW4gICBJbmRpYS4gVGhlIEludGVycG9sIFdpbmcgb2YgdGhlIENCSSBjb29yZGluYXRlcyByZXF1ZXN0cyBmb3IgaW52ZXN0aWdhdGlvbi1yZWxhdGVkIGFjdGl2aXRpZXMgb3JpZ2luYXRpbmcgICBmcm9tIEluZGlhbiBsYXcgZW5mb3JjZW1lbnQgYWdlbmNpZXMgYW5kIHRoZSBtZW1iZXIgY291bnRyaWVzIG9mIHRoZSBJbnRlcnBvbC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBDQkkgY2FuIHN1by1tb3RvIHRha2UgdXAgaW52ZXN0aWdhdGlvbiBvZiBvZmZlbmNlcyBvbmx5IGluIHRoZSBVbmlvbiAgIFRlcnJpdG9yaWVzLiAgIFRoZSBDZW50cmFsIEdvdmVybm1lbnQgY2FuIGF1dGhvcml6ZSBDQkkgdG8gaW52ZXN0aWdhdGUgYSBjcmltZSBpbiBhIFN0YXRlIGJ1dCBvbmx5IHdpdGggdGhlIGNvbnNlbnQgb2YgICB0aGUgY29uY2VybmVkIFN0YXRlIEdvdmVybm1lbnQuIFRoZSBTdXByZW1lIENvdXJ0IGFuZCBIaWdoIENvdXJ0cywgaG93ZXZlciwgY2FuIG9yZGVyIENCSSB0byAgIGludmVzdGlnYXRlIGEgY3JpbWUgYW55d2hlcmUgaW4gdGhlIGNvdW50cnkgd2l0aG91dCB0aGUgY29uc2VudCBvZiB0aGUgU3RhdGUuICAgS25vd2xlZGdlIEJhc2U6IEl0IGFsc28gcGxheXMgYSByb2xlIGluIG5lZ290aWF0aW9uIGFuZCBmaW5hbGl6YXRpb24gb2YgTXV0dWFsIExlZ2FsIEFzc2lzdGFuY2UgVHJlYXRpZXMgICAoTUxBVHMpIGFuZCBFeHRyYWRpdGlvbiBUcmVhdGllcyBiZXR3ZWVuIEluZGlhIGFuZCBvdGhlciBjb3VudHJpZXMuIENCSSBhbHNvIGZhY2lsaXRhdGVzIGV4ZWN1dGlvbiBvZiAgIExldHRlciBvZiBSZXF1ZXN0cyBmb3IgSW52ZXN0aWdhdGlvbiBpbiBJbmRpYSBhbmQgb3V0IG9mIEluZGlhLiAgICBTb3VyY2U6IGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9pbmRpYS9pbmRpYS1vdGhlcnMvY2JpLXNvdWdodC1wYXJ0LXJ0aS1leGVtcHRpb24tZ292dC0gIGdhdmUtaXQtZnVsbC8gICAgIGh0dHBzOi8vY2JpLmdvdi5pbi9GQVFzICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements with  reference to the Lokpal and Lokayukta Act,  2013:  1.  The Chairperson of the Lokpal must be a  former Chief justice of the High Court.   2.  The term of office of members of Lokpal is 5  years or till the age of 70 years.    3.  Lokpal does not have any non-judicial  members.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgTG9rcGFsIGFuZCBMb2theXVrdGEgQWN0LCAyMDEzIHByb3ZpZGVkIGZvciB0aGUgZXN0YWJsaXNobWVudCBvZiBMb2twYWwgZm9yIHRoZSBVbmlvbiBhbmQgTG9rYXl1a3RhICAgZm9yIFN0YXRlcy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBDaGFpcnBlcnNvbiwgd2hvIGlzIG9yIGhhcyBiZWVuIGEgQ2hpZWYgSnVzdGljZSBvZiBJbmRpYSBvciBpcyBvciBoYXMgYmVlbiBhICAgSnVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQgb3IgYW4gZW1pbmVudCBwZXJzb24gKGFuZCBub3QgYSBjaGllZiBqdXN0aWNlIG9mIGhpZ2ggY291cnQpLiA1MCAlIG9mICAgbWVtYmVycyBzaG91bGQgYmUganVkaWNpYWwgbWVtYmVycyBidXQgbm90IGV4Y2VlZGluZyA4LiBBIGp1ZGljaWFsIE1lbWJlciBzaG91bGQgYmUgYSBKdWRnZSBvZiB0aGUgICBTdXByZW1lIENvdXJ0IG9yIGEgQ2hpZWYgSnVzdGljZSBvZiBhIEhpZ2ggQ291cnQ7ICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSB0ZXJtIG9mIG9mZmljZSBvZiBMb2twYWwgY2hhaXJtYW4gYW5kIGl0cyBtZW1iZXJzIGlzIGRlY2lkZWQgYnkgdGhlIENlbnRyYWwgICBHb3Zlcm5tZW50LiBJdCBpcyBwcmVzZW50bHkgNSB5ZWFycyBvciB0aWxsIHRoZSBhZ2Ugb2YgNzAgeWVhcnMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gTG9rcGFsIGhhcyBhcyBtZW1iZXJzIG90aGVyIHRoYW4gYSBKdWRpY2lhbCBNZW1iZXJzLiBIZSBzaG91bGQgYmUgYSBwZXJzb24gb2YgICBpbXBlY2NhYmxlIGludGVncml0eSBhbmQgb3V0c3RhbmRpbmcgYWJpbGl0eSBoYXZpbmcgc3BlY2lhbCBrbm93bGVkZ2UgYW5kIGV4cGVydGlzZSBvZiBub3QgbGVzcyB0aGFuICAgdHdlbnR5LWZpdmUgeWVhcnMgaW4gdGhlIG1hdHRlcnMgcmVsYXRpbmcgdG8gYW50aS1jb3JydXB0aW9uIHBvbGljeSwgcHVibGljIGFkbWluaXN0cmF0aW9uLCB2aWdpbGFuY2UsICAgZmluYW5jZSBpbmNsdWRpbmcgaW5zdXJhbmNlIGFuZCBiYW5raW5nLCBsYXcgYW5kIG1hbmFnZW1lbnQuIE5vbi1KdWRpY2lhbCBtZW1iZXJzIG9mIExva3BhbCBzaG91bGQgICBoYXZlIG1vcmUgdGhhbiAyNSB5ZWFycyBvZiBleHBlcmllbmNlIGluIHRoZSBtYXR0ZXJzIHJlbGF0aW5nIHRvIGFudGktY29ycnVwdGlvbiBwb2xpY3ksIHB1YmxpYyAgIGFkbWluaXN0cmF0aW9uLCB2aWdpbGFuY2UsIGZpbmFuY2UgaW5jbHVkaW5nIGluc3VyYW5jZSBhbmQgYmFua2luZywgbGF3IGFuZCBtYW5hZ2VtZW50LiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmluZGlhY29kZS5uaWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMTIyLzEvMjAxNDAxLnBkZiBwYWdlLTYgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following statements  regarding the Central information commission.   1.  It has Suo-moto powers to order inquiries  on reasonable grounds.  2.  It has powers of civil court in compelling a  person to give oral or written evidence on  oath.   3.  It cannot impose a penalty on a public  information officer if he refuses to furnish  information.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENlbnRyYWwgSW5mb3JtYXRpb24gQ29tbWlzc2lvbiB3YXMgZXN0YWJsaXNoZWQgYnkgdGhlIENlbnRyYWwgR292ZXJubWVudCBpbiAyMDA1LCB1bmRlciB0aGUgICBwcm92aXNpb25zIG9mIHRoZSBSaWdodCB0byBJbmZvcm1hdGlvbiBBY3QgKDIwMDUpLiAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJdCBkb2VzIG9yZGVyIGlucXVpcnkgaW50byBhbnkgbWF0dGVycyBvbmx5IHdoZW4gaXQgcmVjZWl2ZXMgY29tcGxhaW50IGZyb20gYW55ICAgcGVyc29uLiBJdCBoYXMgU3VvLW1vdG8gcG93ZXJzIHRvIG9yZGVyIGlucXVpcnkgb24gcmVhc29uYWJsZSBncm91bmRzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJdCBoYXMgcG93ZXJzIG9mIGNpdmlsIGNvdXJ0IGluIGlzc3Vpbmcgc3VtbW9ucyBmb3IgZXhhbWluaW5nIHRoZSB3aXRuZXNzLCBpbiAgIHN1bW1vbmluZyBhbmQgZW5mb3JjaW5nIGF0dGVuZGFuY2Ugb2YgcGVyc29ucywgY29tcGVsbGluZyBwZXJzb25zIHRvIGdpdmUgb3JhbCBvciB3cml0dGVuIGV2aWRlbmNlIG9uICAgb2F0aCBldGMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gSXQgY2FuIGltcG9zZSBwZW5hbHR5IG9uIFBJTyAoUHVibGljIGluZm9ybWF0aW9uIG9mZmljZXIpIGlmIGhlIHJlZnVzZWQgdG8gICBmdXJuaXNoIGluZm9ybWF0aW9uIHdpdGhpbiB0aGUgc3BlY2lmaWVkIHRpbWUgYXQgdGhlIHJhdGUgb2YgUnMgMjUwIHBlciBkYXkgdXB0byBhIG1heGltdW0gb2YgMjUsIDAwMCBhbmQgICBpdCBjYW4gYWxzbyByZWNvbW1lbmQgZGlzY2lwbGluYXJ5IGFjdGlvbiBhZ2FpbnN0IHRoZSBlcnJhbnQgb2ZmaWNpYWwuICAgIFNvdXJjZTogTGF4bWlrYW50aCByZXZpc2VkIDZ0aCBlZGl0aW9uIGNoYXB0ZXItNTcgcGFnZS01Ny4yLCA1Ny40ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to the National  Commission for Scheduled Castes, consider the  following statements:   1.  It falls under the jurisdiction of the Ministry  of Social Justice & Empowerment.   2.  The Commission by public notification  specify the castes as Scheduled Castes in  relation to that State or Union Territory.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgTmF0aW9uYWwgQ29tbWlzc2lvbiBmb3IgU2NoZWR1bGVkIENhc3RlcywgZmFsbHMgdW5kZXIgdGhlIGp1cmlzZGljdGlvbiBvZiB0aGUgICBNaW5pc3RyeSBvZiBTb2NpYWwgSnVzdGljZSAmIEVtcG93ZXJtZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciBTY2hlZHVsZWQgQ2FzdGVzIG9ubHkgcmVjb21tZW5kcyBhbmQgaXMgbm90IHRoZSAgIGZpbmFsIGF1dGhvcml0eSBmb3IgaW5jbHVzaW9uIG9yIGV4Y2x1c2lvbiBvZiBhbnkgY2FzdGUgaW4gc2NoZWR1bGVkIGxpc3QuIFVuZGVyIGFydGljbGUgMzQxIFByZXNpZGVudCB3aXRoICAgcmVzcGVjdCB0byBhbnkgU3RhdGUgb3IgVW5pb24gVGVycml0b3J5LCBieSBwdWJsaWMgbm90aWZpY2F0aW9uIHNwZWNpZnkgdGhlIGNhc3RlcywgcmFjZXMgb3IgdHJpYmVzIGFzICAgU2NoZWR1bGVkIENhc3RlcyBpbiByZWxhdGlvbiB0byB0aGF0IFN0YXRlIG9yIFVuaW9uIFRlcnJpdG9yeS4gVW5kZXIgYXJ0aWNsZSAzNDEoMiksIHRoZSBQYXJsaWFtZW50IG9mICAgSW5kaWEgYnkgbGF3IGNhbiBpbmNsdWRlIG9yIGV4Y2x1ZGUgYSBncm91cCBmcm9tIHRoZSBsaXN0IG9mIHRoZSBTY2hlZHVsZWQgQ2FzdGVzLiAgICBTb3VyY2U6IFBvbGl0eSBieSBMYXhtaWthbnRoLCA1dGggZWRpdGlvbiwgQ2gtNDY7ICAgIGh0dHA6Ly9uY3NjLm5pYy5pbi8gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following pairs are correctly  matched?   List I   Election  machinery    List II   Role /Mandate    1. Chief Electoral  Officer (CEO)    to supervise the election  work in the state/Union  Territory subject to the  overall superintendence of  the Election Commission  2. District  Election  Officer (DEO)   supervises the election  work of a district   3. Returning  Officer (RO)    responsible for the  conduct of elections in the  Parliamentary or assembly  constituency concerned   4. Presiding  Officer   Conducts polls with the  assistance of polling  officers at a polling  station.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0OiBUaGUgQ2hpZWYgRWxlY3RvcmFsIE9mZmljZXIgb2YgYSBzdGF0ZS8gVW5pb24gVGVycml0b3J5IGlzIGF1dGhvcmlzZWQgdG8gc3VwZXJ2aXNlIHRoZSAgIGVsZWN0aW9uIHdvcmsgaW4gdGhlIHN0YXRlL1VuaW9uIFRlcnJpdG9yeSBzdWJqZWN0IHRvIHRoZSBvdmVyYWxsIHN1cGVyaW50ZW5kZW5jZSwgZGlyZWN0aW9uIGFuZCAgIGNvbnRyb2wgb2YgdGhlIEVsZWN0aW9uIENvbW1pc3Npb24uIFRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhIG5vbWluYXRlcyBvciBkZXNpZ25hdGVzIGFuICAgT2ZmaWNlciBvZiB0aGUgR292ZXJubWVudCBvZiB0aGUgc3RhdGUgLyBVbmlvbiBUZXJyaXRvcnkgYXMgdGhlIENoaWVmIEVsZWN0b3JhbCBPZmZpY2VyIGluIGNvbnN1bHRhdGlvbiAgIHdpdGggdGhhdCBTdGF0ZSBHb3Zlcm5tZW50IC8gVW5pb24gVGVycml0b3J5IEFkbWluaXN0cmF0aW9uLiAgIFBhaXIgMiBpcyBjb3JyZWN0OiBTdWJqZWN0IHRvIHRoZSBzdXBlcmludGVuZGVuY2UsIGRpcmVjdGlvbiBhbmQgY29udHJvbCBvZiB0aGUgQ2hpZWYgRWxlY3RvcmFsIE9mZmljZXIsIHRoZSAgIERpc3RyaWN0IEVsZWN0aW9uIE9mZmljZXIgc3VwZXJ2aXNlcyB0aGUgZWxlY3Rpb24gd29yayBvZiBhIGRpc3RyaWN0LiBUaGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBvZiBJbmRpYSAgIG5vbWluYXRlcyBvciBkZXNpZ25hdGVzIGFuIG9mZmljZXIgb2YgdGhlIHN0YXRlIEdvdmVybm1lbnQgYXMgdGhlIERpc3RyaWN0IEVsZWN0aW9uIE9mZmljZXIgaW4gICBjb25zdWx0YXRpb24gd2l0aCB0aGUgc3RhdGUgZ292ZXJubWVudC4gICAgUGFpciAzIGlzIGNvcnJlY3Q6IFRoZSBSZXR1cm5pbmcgT2ZmaWNlciBvZiBhIFBhcmxpYW1lbnRhcnkgb3IgYXNzZW1ibHkgY29uc3RpdHVlbmN5IGlzIHJlc3BvbnNpYmxlIGZvciAgIHRoZSBjb25kdWN0IG9mIGVsZWN0aW9ucyBpbiB0aGUgUGFybGlhbWVudGFyeSBvciBhc3NlbWJseSBjb25zdGl0dWVuY3kgY29uY2VybmVkLiBUaGUgRWxlY3Rpb24gICBDb21taXNzaW9uIG9mIEluZGlhIG5vbWluYXRlcyBvciBkZXNpZ25hdGVzIGFuIG9mZmljZXIgb2YgdGhlIEdvdmVybm1lbnQgb3IgYSBsb2NhbCBhdXRob3JpdHkgYXMgdGhlICAgUmV0dXJuaW5nIE9mZmljZXIgZm9yIGVhY2ggb2YgdGhlIGFzc2VtYmx5IGFuZCBwYXJsaWFtZW50YXJ5IGNvbnN0aXR1ZW5jaWVzIGluIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSAgIFN0YXRlIEdvdmVybm1lbnQgLyBVbmlvbiBUZXJyaXRvcnkgQWRtaW5pc3RyYXRpb24uIEluIGFkZGl0aW9uLCB0aGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBvZiBJbmRpYSBhbHNvICAgYXBwb2ludHMgb25lIG9yIG1vcmUgQXNzaXN0YW50IFJldHVybmluZyBPZmZpY2VycyBmb3IgZWFjaCBvZiB0aGUgYXNzZW1ibHkgYW5kIFBhcmxpYW1lbnRhcnkgICBjb25zdGl0dWVuY2llcyB0byBhc3Npc3QgdGhlIFJldHVybmluZyBPZmZpY2VyIGluIHRoZSBwZXJmb3JtYW5jZSBvZiBoaXMgZnVuY3Rpb25zIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgICBjb25kdWN0IG9mIGVsZWN0aW9ucy4gICAgUGFpciA0IGlzIGNvcnJlY3Q6IFRoZSBQcmVzaWRpbmcgT2ZmaWNlciB3aXRoIHRoZSBhc3Npc3RhbmNlIG9mIHBvbGxpbmcgb2ZmaWNlcnMgY29uZHVjdHMgdGhlIHBvbGwgYXQgYSAgIHBvbGxpbmcgc3RhdGlvbi4gVGhlIERpc3RyaWN0IEVsZWN0aW9uIE9mZmljZXIgYXBwb2ludHMgdGhlIFByZXNpZGluZyBPZmZpY2VycyBhbmQgdGhlIFBvbGxpbmcgT2ZmaWNlcnMuIEluICAgdGhlIGNhc2Ugb2YgVW5pb24gVGVycml0b3JpZXMsIHN1Y2ggYXBwb2ludG1lbnRzIGFyZSBtYWRlIGJ5IHRoZSBSZXR1cm5pbmcgT2ZmaWNlcnMuICAgIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTSBMYXhtaWthbnRoIDZ0aCBlZGl0aW9uIHBkZi4gQ2hhcHRlciBuYW1lLUVsZWN0aW9ucy4gUGFnZSBuby0gMTE3MyBhbmQgMTE3NC4gICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 and 4 only   ",
        "option4" : "1, 2, 3 and 4          "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to disaster management in  India, consider the following statements:   1.  The Environment Minister is the ex-officio  chairperson of the National Disaster  Management Authority (NDMA).   2.  State Disaster Response Fund (SDRF) has  been constituted under Disaster  Management Act, 2005.  3.  The Centre contributes not more than 50%  of the SDRF allocation for all States.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBEaXNhc3RlciBNYW5hZ2VtZW50IEFjdCwgMjAwNSBwcm92aWRlZCBmb3IgdGhlIGNyZWF0aW9uIG9mIHRoZSBOYXRpb25hbCBEaXNhc3RlciBNYW5hZ2VtZW50ICAgQXV0aG9yaXR5IChORE1BKS4gVGhlIE5ETUEgY29uc2lzdHMgb2YgYSBjaGFpcnBlcnNvbiBhbmQgb3RoZXIgbWVtYmVycywgbm90IGV4Y2VlZGluZyBuaW5lLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBQcmltZSBNaW5pc3RlciBpcyB0aGUgZXgtb2ZmaWNpbyBjaGFpcnBlcnNvbiBvZiB0aGUgTkRNQS4gVGhlIG90aGVyICAgbWVtYmVycyBhcmUgbm9taW5hdGVkIGJ5IHRoZSBjaGFpcnBlcnNvbiBvZiB0aGUgTkRNQS4gVGhlIGNoYWlycGVyc29uIG9mIHRoZSBORE1BIGRlc2lnbmF0ZXMgb25lICAgb2YgdGhlIG1lbWJlcnMgYXMgdGhlIHZpY2UtY2hhaXJwZXJzb24gb2YgdGhlIE5ETUEuIFRoZSB2aWNlLWNoYWlycGVyc29uIGhhcyB0aGUgc3RhdHVzIG9mIGEgY2FiaW5ldCAgIG1pbmlzdGVyIHdoaWxlIHRoZSBvdGhlciBtZW1iZXJzIGhhdmUgdGhlIHN0YXR1cyBvZiBhIE1pbmlzdGVyIG9mIFN0YXRlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBTdGF0ZSBEaXNhc3RlciBSZXNwb25zZSBGdW5kIChTRFJGKSBoYXMgYmVlbiBjb25zdGl0dXRlZCB1bmRlciBEaXNhc3RlciAgIE1hbmFnZW1lbnQgQWN0LCAyMDA1IG9uIHRoZSBiYXNpcyBvZiB0aGUgcmVjb21tZW5kYXRpb25zIG9mIHRoZSAxM3RoIEZpbmFuY2UgQ29tbWlzc2lvbiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIENlbnRyZSBjb250cmlidXRlcyA3NSUgb2YgdGhlIFNEUkYgYWxsb2NhdGlvbiBmb3IgZ2VuZXJhbCBjYXRlZ29yeSAgIFN0YXRlcyBhbmQgVW5pb24gVGVycml0b3JpZXMgYW5kIDkwJSBmb3Igc3BlY2lhbCBjYXRlZ29yeSBTdGF0ZXMgKG5vcnRoZWFzdGVybiBTdGF0ZXMsIFNpa2tpbSwgICBVdHRhcmFraGFuZCwgSGltYWNoYWwgUHJhZGVzaCwgSmFtbXUgYW5kIEthc2htaXIpLiAgICBLbm93bGVkZ2UgQmFzZTogICAgIFNvbWUgb2YgdGhlIGZ1bmN0aW9ucyBvZiB0aGUgTkRNQSBhcmUgYXMgZm9sbG93czogICAgMSkgVG8gYXBwcm92ZSB0aGUgTmF0aW9uYWwgUGxhbi4gICAgIDIpIFRvIGFwcHJvdmUgcGxhbnMgcHJlcGFyZWQgYnkgdGhlIE1pbmlzdHJpZXMgb3IgRGVwYXJ0bWVudHMgb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgaW4gICBhY2NvcmRhbmNlIHdpdGggdGhlIE5hdGlvbmFsIFBsYW4uICAgICAzKSBUbyBsYXkgZG93biBndWlkZWxpbmVzIHRvIGJlIGZvbGxvd2VkIGJ5IHRoZSBTdGF0ZSBEaXNhc3RlciBNYW5hZ2VtZW50IEF1dGhvcml0aWVzIChTRE1BcykgaW4gICBkcmF3aW5nIHVwIHRoZSBTdGF0ZSBQbGFuLiAgICAgNCkgVG8gbGF5IGRvd24gZ3VpZGVsaW5lcyB0byBiZSBmb2xsb3dlZCBieSB0aGUgZGlmZmVyZW50IE1pbmlzdHJpZXMgb3IgRGVwYXJ0bWVudHMgb2YgdGhlIEdvdmVybm1lbnQgICBvZiBJbmRpYSBmb3IgdGhlIHB1cnBvc2Ugb2YgaW50ZWdyYXRpbmcgdGhlIG1lYXN1cmVzIGZvciBwcmV2ZW50aW9uIG9mIGRpc2FzdGVyIG9yIHRoZSBtaXRpZ2F0aW9uIG9mIGl0cyAgIGVmZmVjdHMgaW4gdGhlaXIgZGV2ZWxvcG1lbnQgcGxhbnMgYW5kIHByb2plY3RzLiAgIDUpIFRvIGNvb3JkaW5hdGUgdGhlIGVuZm9yY2VtZW50IGFuZCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgcG9saWN5IGFuZCBwbGFuIGZvciBkaXNhc3RlciBtYW5hZ2VtZW50LiAgIDYpIFRvIHJlY29tbWVuZCBwcm92aXNpb24gb2YgZnVuZHMgZm9yIHRoZSBwdXJwb3NlIG9mIG1pdGlnYXRpb24uICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIE0gTGF4bWlrYW50aCAtNnRoIGVkaXRpb24gLSBjaGFwdGVyIC0gNjMtIE5hdGlvbmFsIERpc2FzdGVyIE1hbmFnZW1lbnQgICBBdXRob3JpdHkgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 13,
      "question" : "A new All India Service can be created by  an act of Parliament if   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgbmV3IEFsbCBJbmRpYSBTZXJ2aWNlIGNhbiBiZSBjcmVhdGVkIGJ5IGFuIGFjdCBvZiBQYXJsaWFtZW50IGlmIHRoZSBSYWp5YSBTYWJoYSBwYXNzZXMgYSByZXNvbHV0aW9uICAgZGVjbGFyaW5nIHRoYXQgaXQgaXMgbmVjZXNzYXJ5IG9yIGV4cGVkaWVudCBpbiB0aGUgbmF0aW9uYWwgaW50ZXJlc3QgdG8gZG8gc28gYW5kIHRoYXQgcmVzb2x1dGlvbiBpbiB0aGUgUmFqeWEgICBTYWJoYSBzaG91bGQgYmUgc3VwcG9ydGVkIGJ5IHR3by10aGlyZHMgb2YgdGhlIG1lbWJlcnMgcHJlc2VudCBhbmQgdm90aW5nLiAgICBTb3VyY2U6IFBvbGl0eSBMYXhtaWthbnRoIENoYXB0ZXItNjYgcGFnZS02Ni40ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The cabinet passes a resolution  ",
        "option2" : " A resolution is passed by the Rajya Sabha   ",
        "option3" : " A resolution is passed by one-third of the   states   ",
        "option4" : " A resolution is passed by the Lok Sabha   "
      }
    },
    {
      "index" : 14,
      "question" : "Which among the following comes under  the exemption or exception for disclosure  under the RTI Act, 2005:   1. Information about scientific discoveries   2. Information received in confidence from  foreign Government   3. intelligence and security organisations in all  cases  4. Prime Minister's Office  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTZWN0aW9uIDggKDEpIG1lbnRpb25zIGV4ZW1wdGlvbnMgYWdhaW5zdCBmdXJuaXNoaW5nIGluZm9ybWF0aW9uIHVuZGVyIFJUSSBBY3QuIFNlY3Rpb24gOCAoMikgcHJvdmlkZXMgICBmb3IgZGlzY2xvc3VyZSBvZiBpbmZvcm1hdGlvbiBleGVtcHRlZCB1bmRlciBPZmZpY2lhbCBTZWNyZXRzIEFjdCwgMTkyMyBpZiBsYXJnZXIgcHVibGljIGludGVyZXN0IGlzICAgc2VydmVkLiAgICAgT3B0aW9uIDEgYW5kIDIgYXJlIGNvcnJlY3Q6IFNlY3Rpb24gOCgxKShhKSBleGVtcHQgdGhlIGRpc2Nsb3N1cmUgb2YgaW5mb3JtYXRpb24gd2hpY2ggYWZmZWN0IHRoZSAgIHNjaWVudGlmaWMgb3IgZWNvbm9taWMgaW50ZXJlc3RzIG9mIHRoZSBTdGF0ZS4gU2ltaWxhcmx5LCBTZWN0aW9uIDgoMSkoZikgZXhlbXB0IHRoZSBkaXNjbG9zdXJlIG9mICAgaW5mb3JtYXRpb24gcmVjZWl2ZWQgaW4gY29uZmlkZW5jZSBmcm9tIGZvcmVpZ24gR292ZXJubWVudC4gICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIE9wdGlvbiAzIGlzIGluY29ycmVjdDogTW9zdCBvZiB0aGUgaW50ZWxsaWdlbmNlIGFnZW5jaWVzIGFyZSBleGNsdWRlZCBmcm9tIHRoZSBhbWJpdCBvZiBSVEkgQWN0LCAyMDA1LiAgIFNlY3Rpb24gMjQoMSkgb2YgdGhlIFJUSSBhY3Qgc3BlY2lmaWVzIHRoYXQgdGhlIHByb3Zpc2lvbiBvZiB0aGUgUlRJIGFjdCB3aWxsIG5vdCBhcHBseSB0byBpbnRlbGxpZ2VuY2UgYW5kICAgc2VjdXJpdHkgb3JnYW5pc2F0aW9ucyBleGNlcHQgaW4gY2FzZXMgb2YgYWxsZWdlZCBodW1hbiByaWdodHMgdmlvbGF0aW9ucyBhbmQvIG9yIGNvcnJ1cHRpb24uICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0OiBQcmltZSBNaW5pc3RlcidzIE9mZmljZSBkb2VzIG5vdCBmYWxsIHVuZGVyIHRoZSBleGNlcHRpb24gb2YgUlRJIEFjdCwgMjAwOC4gICBIb3dldmVyLCBpbnRlcm5hbCBkZWxpYmVyYXRpb24gb2YgdGhlIGdvdmVybm1lbnQgY2FuIGJlIGtlcHQgYXdheSBmcm9tIHB1YmxpYyBleWUgYXMgdGhlIGV4ZW1wdGlvbiBmb3IgICB0aGUgc2FtZSBoYXMgYmVlbiBwcm92aWRlZCBpbiB0aGUgUlRJIEFjdC4gICAgU291cmNlOiBodHRwczovL3d3dy5jYmljLmdvdi5pbi9odGRvY3MtY2JlYy9pbmZvLWFjdC9jaWMtZGVjaXNvbnMtZXhlbXB0bnMucGRmICAgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vbmV3cy9wb2xpdGljcy1hbmQtbmF0aW9uL2NiaS1jYW50LXRha2UtcmVmdWdlLWluLSAgZXhlbXB0aW9uLWNsYXVzZS11bmRlci1ydGktYWN0LXRvLWRlbnktaW5mby1vbi1jb3JydXB0aW9uLWNhc2VzLSAgY2ljL2FydGljbGVzaG93LzcyMzY2NjQ2LmNtcz9mcm9tPW1kciAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "2, 3 and 4 only    "
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following initiatives are  anchored/brought out by the NITI Aayog?    1. Aspirational Districts Programme   2. The Atal Innovation Mission    3. Export Preparedness Index   4. School Education Quality Index   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFzcGlyYXRpb25hbCBEaXN0cmljdHMgUHJvZ3JhbW1lIHdhcyBsYXVuY2hlZCBpbiBKYW51YXJ5IDIwMTggdG8gdHJhbnNmb3JtIGFuZCAgIGRldmVsb3Agc29tZSBvZiB0aGUgbW9zdCB1bmRlcmRldmVsb3BlZCBkaXN0cmljdHMgb2YgdGhlIGNvdW50cnkgZWZmaWNpZW50bHkgYW5kIGVmZmVjdGl2ZWx5LiBBdCB0aGUgICBHb3Zlcm5tZW50IG9mIEluZGlhIGxldmVsLCB0aGUgcHJvZ3JhbW1lIGlzIGFuY2hvcmVkIGJ5IE5JVEkgQWF5b2cuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBBdGFsIElubm92YXRpb24gTWlzc2lvbiAoQUlNKSBpcyBhIGZsYWdzaGlwIGluaXRpYXRpdmUgc2V0IHVwIGJ5IHRoZSBOSVRJIEFheW9nICAgdG8gcHJvbW90ZSBpbm5vdmF0aW9uIGFuZCBlbnRyZXByZW5ldXJzaGlwIGFjcm9zcyB0aGUgbGVuZ3RoIGFuZCBicmVhZHRoIG9mIHRoZSBjb3VudHJ5LiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBFeHBvcnQgUHJlcGFyZWRuZXNzIEluZGV4IChFUEkpIHdhcyBsYXVuY2hlZCBpbiBBdWd1c3QgMjAyMCBhbmQgZGV2ZWxvcGVkIGJ5ICAgTklUSSBBYXlvZyBpbiBwYXJ0bmVyc2hpcCB3aXRoIHRoZSBJbnN0aXR1dGUgZm9yIENvbXBldGl0aXZlbmVzcy4gRVBJIHJhbmtzIGFsbCBTdGF0ZXMgYW5kIFVuaW9uICAgVGVycml0b3JpZXMgYmFzZWQgb24gdGhlaXIgZXhwb3J0IHJlYWRpbmVzcyBhbmQgcGVyZm9ybWFuY2UuICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IFNjaG9vbCBFZHVjYXRpb24gUXVhbGl0eSBJbmRleCAoU0VRSSkgaXMgcmVsZWFzZWQgYnkgTklUSSBBYXlvZy4gSXQgaXMgYmFzZWQgb24gYSAgIHNldCBvZiBpbmRpY2F0b3JzIHRoYXQgbWVhc3VyZSB0aGUgb3ZlcmFsbCBlZmZlY3RpdmVuZXNzLCBxdWFsaXR5IGFuZCBlZmZpY2llbmN5IG9mIHRoZSBJbmRpYW4gc2Nob29sICAgZWR1Y2F0aW9uIHN5c3RlbS4gVGhlIGluZGV4IGVuY291cmFnZXMgU3RhdGVzL1VUcyB0byBpbXByb3ZlIHRoZWlyIHNjb3JlcyBieSBzaG93aW5nIHByb2dyZXNzIGFjcm9zcyAgIHRoZXNlIGFzcGVjdHMuICAgICBLbm93bGVkZ2UgQmFzZTogICAgIFNvbWUgb2Ygb3RoZXIgaW5kaWNlcyByZWxlYXNlZCBieSBOSVRJIEFheW9nIGFyZTogICAgMSkgQWdyaWN1bHR1cmUgVHJhbnNmb3JtYXRpb24gSW5kZXggICAgIDIpIENvbXBvc2l0ZSB3YXRlciBtYW5hZ2VtZW50IGluZGV4ICAgICAzKSBEaXN0cmljdCBob3NwaXRhbCBpbmRleCAgICAgNCkgSW5kaWEgSW5ub3ZhdGlvbiBJbmRleCAgICAgNSkgVGhlIFNERyBJbmRpYSBJbmRleCAgICBTb3VyY2U6IGh0dHBzOi8vd3d3Lm5pdGkuZ292LmluL3NvY2lhbC1zZWN0b3ItaW5kaWNlcyAgICBodHRwczovL3Zpa2FzcGVkaWEuaW4vZWR1Y2F0aW9uL3BvbGljaWVzLWFuZC1zY2hlbWVzL2F0YWwtaW5ub3ZhdGlvbi1taXNzaW9uICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following provisions with  reference to the administration of the National  Capital Territory of Delhi:   1.  The Chief minister is appointed by the Lt.  Governor.  2. Lt. Governor cannot promulgate  ordinances.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIGNoaWVmIG1pbmlzdGVyIG9mIERlbGhpIGlzIGFwcG9pbnRlZCBieSB0aGUgUHJlc2lkZW50IChub3QgYnkgdGhlIEx0LiAgIEdvdmVybm9yKS4gVGhlIG90aGVyIG1pbmlzdGVycyBhcmUgYXBwb2ludGVkIGJ5IHRoZSBwcmVzaWRlbnQgb24gdGhlIGFkdmljZSBvZiB0aGUgY2hpZWYgbWluaXN0ZXIuIFRoZSAgIG1pbmlzdGVycyBob2xkIG9mZmljZSBkdXJpbmcgdGhlIHBsZWFzdXJlIG9mIHRoZSBwcmVzaWRlbnQuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIEx0LiBHb3Zlcm5vciBpcyBlbXBvd2VyZWQgdG8gcHJvbXVsZ2F0ZSBvcmRpbmFuY2VzIGR1cmluZyByZWNlc3Mgb2YgdGhlICAgYXNzZW1ibHkuIEhlIGNhbiBhbHNvIHdpdGhkcmF3IGFuIG9yZGluYW5jZSBhdCBhbnkgdGltZS4gQnV0IGhlIGNhbm5vdCBwcm9tdWxnYXRlIGFuIG9yZGluYW5jZSB3aGVuICAgdGhlIGFzc2VtYmx5IGlzIGRpc3NvbHZlZCBvciBzdXNwZW5kZWQuIEZ1cnRoZXIsIG5vIHN1Y2ggb3JkaW5hbmNlIGNhbiBiZSBwcm9tdWxnYXRlZCBvciB3aXRoZHJhd24gICB3aXRob3V0IHRoZSBwcmlvciBwZXJtaXNzaW9uIG9mIHRoZSBQcmVzaWRlbnQuICAgICBTb3VyY2U6IGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20gaGUtZ292ZXJubWVudC1vZi1uY3Qtb2YtZGVsaGktYW1lbmRtZW50LWJpbGwtMjAyMS1leHBsYWluZWQtICBwb2ludHdpc2UvICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following are the  qualifications to be appointed as a member of  the Finance Commission?  1.  A judge of the high court or one qualified to  be appointed as one.   2.  A person who has specialised knowledge of  finance and accounts of the government.   3.  A person who has wide experience in  financial matters and in administration.   4.  A person who has special knowledge of  economics.    Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBGaW5hbmNlIENvbW1pc3Npb24gY29uc2lzdHMgb2YgYSBjaGFpcm1hbiBhbmQgZm91ciBvdGhlciBtZW1iZXJzIHRvIGJlIGFwcG9pbnRlZCBieSB0aGUgICBQcmVzaWRlbnQuICAgVGhlIENvbnN0aXR1dGlvbiBlbXBvd2VycyB0aGUgUGFybGlhbWVudCB0byBkZXRlcm1pbmUgd2hhdCB0aGUgcXVhbGlmaWNhdGlvbnMgZm9yIHRoZSBtZW1iZXJzIG9mICAgdGhlIEZDIHNob3VsZCBiZSBieSBlbmFjdGluZyBhIGxhdyAoRmluYW5jZSBDb21taXNzaW9uIEFjdCwgMTk1MSkuICAgIEFjY29yZGluZ2x5LCB0aGUgUGFybGlhbWVudCBoYXMgc3BlY2lmaWVkIHRoZSBxdWFsaWZpY2F0aW9ucyBvZiB0aGUgY2hhaXJtYW4gYW5kIG1lbWJlcnMgb2YgdGhlICAgY29tbWlzc2lvbi4gVGhlIGNoYWlybWFuIHNob3VsZCBiZSBhIHBlcnNvbiBoYXZpbmcgZXhwZXJpZW5jZSBpbiBwdWJsaWMgYWZmYWlycyBhbmQgdGhlIGZvdXIgb3RoZXIgICBtZW1iZXJzIHNob3VsZCBiZSBzZWxlY3RlZCBmcm9tIGFtb25nc3QgdGhlIGZvbGxvd2luZzogICAgMSkgQSBqdWRnZSBvZiBoaWdoIGNvdXJ0IG9yIG9uZSBxdWFsaWZpZWQgdG8gYmUgYXBwb2ludGVkIGFzIG9uZS4gICAgMikgQSBwZXJzb24gd2hvIGhhcyBzcGVjaWFsaXNlZCBrbm93bGVkZ2Ugb2YgZmluYW5jZSBhbmQgYWNjb3VudHMgb2YgdGhlIGdvdmVybm1lbnQuICAgIDMpIEEgcGVyc29uIHdobyBoYXMgd2lkZSBleHBlcmllbmNlIGluIGZpbmFuY2lhbCBtYXR0ZXJzIGFuZCBpbiBhZG1pbmlzdHJhdGlvbi4gICAgNCkgQSBwZXJzb24gd2hvIGhhcyBzcGVjaWFsIGtub3dsZWRnZSBvZiBlY29ub21pY3MuICAgIFNvdXJjZTogUG9saXR5IGJ5IExheG1pa2FudGgsIDV0aCBlZGl0aW9uLCBDaC00NSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 18,
      "question" : "Which one of the following statements is  correct about the Inner Line Permit (ILP) in  India?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogSW5uZXIgTGluZSBwZXJtaXQgKElMUCkgaXMgYSBkb2N1bWVudCByZXF1aXJlZCBieSBub24tIG5hdGl2ZXMgdG8gdmlzaXQgb3Igc3RheSBpbiBhICAgc3RhdGUgdGhhdCBpcyBwcm90ZWN0ZWQgdW5kZXIgdGhlIElMUCBzeXN0ZW0uIEF0IHByZXNlbnQsIGZvdXIgbm9ydGgtZWFzdGVybiBzdGF0ZXMgYXJlIGNvdmVyZWQgdW5kZXIgaXQgLSAgIEFydW5hY2hhbCBQcmFkZXNoLCBNaXpvcmFtLCBNYW5pcHVyIGFuZCBOYWdhbGFuZC4gICAgT3B0aW9uIGIgaXMgY29ycmVjdDogQW4gSW5uZXIgTGluZSBQZXJtaXQgaXMgYSBkb2N1bWVudCB0aGF0IGFsbG93cyBhbiBJbmRpYW4gY2l0aXplbiB0byB2aXNpdCBvciBzdGF5IGluIGEgICBzdGF0ZSB0aGF0IGlzIHByb3RlY3RlZCB1bmRlciB0aGUgSUxQIHN5c3RlbS4gTm8gSW5kaWFuIGNpdGl6ZW4gY2FuIHZpc2l0IGFueSBvZiB0aGVzZSBzdGF0ZXMgdW5sZXNzIGhlIG9yICAgc2hlIGJlbG9uZ3MgdG8gdGhhdCBzdGF0ZSwgbm9yIGNhbiBoZSBvciBzaGUgb3ZlcnN0YXkgYmV5b25kIHRoZSBwZXJpb2Qgc3BlY2lmaWVkIGluIHRoZSBJTFAuICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogQW4gSUxQIGlzIGlzc3VlZCBieSB0aGUgc3RhdGUgZ292ZXJubWVudCBjb25jZXJuZWQuIEl0IGNhbiBiZSBvYnRhaW5lZCBhZnRlciAgIGFwcGx5aW5nIGVpdGhlciBvbmxpbmUgb3IgcGh5c2ljYWxseS4gSXQgc3RhdGVzIHRoZSBkYXRlcyBvZiB0cmF2ZWwgYW5kIGFsc28gc3BlY2lmaWVzIHRoZSBwYXJ0aWN1bGFyIGFyZWFzIGluICAgdGhlIHN0YXRlIHdoaWNoIHRoZSBJTFAgaG9sZGVyIGNhbiB0cmF2ZWwgdG8uICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogVGhlIElubmVyIExpbmUgUGVybWl0IGlzIGFuIGV4dGVuc2lvbiBvZiB0aGUgQmVuZ2FsIEVhc3Rlcm4gRnJvbnRpZXIgUmVndWxhdGlvbiAgIEFjdCAxODczLiBUaGUgQnJpdGlzaGVycyBmcmFtZWQgcmVndWxhdGlvbnMgcmVzdHJpY3RpbmcgZW50cnkgaW4gY2VydGFpbiBkZXNpZ25hdGVkIGFyZWFzLiBUaGlzIHdhcyBkb25lIHRvICAgcHJvdGVjdCB0aGUgQ3Jvd24ncyBpbnRlcmVzdCBpbiBjZXJ0YWluIHN0YXRlcyBieSBwcmV2ZW50aW5nICdCcml0aXNoIHN1YmplY3RzJyAoSW5kaWFucykgZnJvbSB0cmFkaW5nICAgd2l0aGluIHRoZXNlIHJlZ2lvbnMuICAgIEluIDE5NTAsIHRoZSBJbmRpYW4gZ292ZXJubWVudCByZXBsYWNlZCAnQnJpdGlzaCBzdWJqZWN0cycgd2l0aCAnQ2l0aXplbiBvZiBJbmRpYScuICAgIE9uIDExdGggRGVjZW1iZXIgMjAyMCwgdGhlIFByZXNpZGVudCBzaWduZWQgdGhlIG9yZGVyIGV4dGVuZGluZyBJTFAgdG8gTWFuaXB1ciwgd2hpY2ggYmVjYW1lIHRoZSAgIGZvdXJ0aCBzdGF0ZSB3aGVyZSB0aGUgSUxQIHJlZ2ltZSBpcyBhcHBsaWNhYmxlLiBFYXJsaWVyIGl0IHdhcyBhcHBsaWNhYmxlIG9ubHkgdG8gdGhlIHRocmVlIE5vcnRoLUVhc3Rlcm4gICBTdGF0ZXMgdml6LiBNaXpvcmFtLCBBcnVuYWNoYWwgUHJhZGVzaCBhbmQgTmFnYWxhbmQuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwvbWVnaGFsYXlhLXZpb2xlbmNlLXRvbGwtcmVhY2hlcy10aHJlZS1zaXR1YXRpb24tICByZW1haW5zLXRlbnNlL2FydGljbGUzMDk1NjU4Mi5lY2UgICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC9pbm5lci1saW5lLXBlcm1pdC13aGF0LWlzLWl0cy1jYWEtY29udGV4dC02NDQxMzkwLyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Manipur, Jammu and Kashmir and Assam   are protected by the Inner Line system.   ",
        "option2" : " No Indian citizen can overstay beyond the   period specified in the ILP.  ",
        "option3" : " An Inner Line Permit is issued only by the   Central Government.   ",
        "option4" : " It was introduced in 1964 after the India-  China war.      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements with  reference to cooperative societies:   1.  Cooperative Societies is a State Subject  under the 7th Schedule of the constitution.   2.  Supreme Court recently ruled that the  authority of the Union Government is  restricted only to multi-state cooperatives.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBpdGVtICdDb29wZXJhdGl2ZSBTb2NpZXRpZXMnIGlzIGEgU3RhdGUgU3ViamVjdCBpbiB0aGUgN3RoIFNjaGVkdWxlIHVuZGVyICAgZW50cnkgMzIgb2YgdGhlIFN0YXRlIExpc3QgaW4gdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYS4gSXQgY29uZmVycyBwb3dlciBvbiB0aGUgU3RhdGUgbGVnaXNsYXR1cmVzIHRvIG1ha2UgICBsYXdzIHBlcnRhaW5pbmcgdG8gaW5jb3Jwb3JhdGlvbiwgcmVndWxhdGlvbiBhbmQgdGhlIHdpbmRpbmcgdXAgb2YgY29vcGVyYXRpdmUgc29jaWV0aWVzLiAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSW4gYSByZWNlbnQganVkZ2VtZW50IHRoZSBTdXByZW1lIENvdXJ0IGhhcyBjbGFyaWZpZWQgdGhhdCB0aGUgQ2VudHJlJ3Mgcm9sZSBpcyAgIHJlc3RyaWN0ZWQgb25seSB0byBtdWx0aS1TdGF0ZSBjb29wZXJhdGl2ZXMuIEl0IHNhaWQgdGhhdCwgdGhlIHN1YmplY3QgbWF0dGVyIG9mIGNvb3BlcmF0aXZlIHNvY2lldGllcyAgIHdvcmtpbmcgd2l0aGluIGEgc3RhdGUgZmVsbCBpbiB0aGUgc3RhdGUgbGlzdCwgYW5kICdiZWxvbmdzIHdob2xseSBhbmQgZXhjbHVzaXZlbHkgdG8gdGhlIFN0YXRlIGxlZ2lzbGF0dXJlcyB0byAgIGxlZ2lzbGF0ZSB1cG9uJy4gICAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwvY28tb3BlcmF0aXZlLXNvY2lldGllcy1zdXByZW1lLWNvdXJ0LXN0cmlrZXMtICBkb3duLXBhcnRzLW9mLWEtY29uc3RpdHV0aW9uYWwtYW1lbmRtZW50L2FydGljbGUzNTQzMzY2MC5lY2UgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following are the rights to  forest Dwelling Scheduled Tribes (FDST) and  Other Traditional Forest Dwellers (OTFD)  under the Forest Rights Act, 2006?  1.  Right to ownership of land subject to the  maximum limit of 10 hectares.  2.  Right to use of forest including extracting  Minor Forest Produce.  3.  To rehabilitation in case of illegal eviction.   4.  Right to conserve community forest  resource.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBTY2hlZHVsZWQgVHJpYmVzIGFuZCBPdGhlciBUcmFkaXRpb25hbCBGb3Jlc3QgRHdlbGxlcnMgKFJlY29nbml0aW9uIG9mIEZvcmVzdCBSaWdodHMpIEFjdCwgMjAwNiAgIGdpdmVzIHRoaXMgYXV0aG9yaXR5IHRvIEdyYW0gU2FiaGEuIFRoZSBHcmFtIFNhYmhhIGlzIHRoZSBhdXRob3JpdHkgdG8gaW5pdGlhdGUgdGhlIHByb2Nlc3MgZm9yICAgZGV0ZXJtaW5pbmcgdGhlIG5hdHVyZSBhbmQgZXh0ZW50IG9mIEluZGl2aWR1YWwgRm9yZXN0IFJpZ2h0cyAoSUZSKSBvciBDb21tdW5pdHkgRm9yZXN0IFJpZ2h0cyAoQ0ZSKSBvciAgIGJvdGggdGhhdCBtYXkgYmUgZ2l2ZW4gdG8gZm9yZXN0IER3ZWxsaW5nIFNjaGVkdWxlZCBUcmliZXMgKEZEU1QpIGFuZCBPdGhlciBUcmFkaXRpb25hbCBGb3Jlc3QgRHdlbGxlcnMgICAoT1RGRCkuICAgICBUaGUgRm9yZXN0IFJpZ2h0cyBBY3QsIDIwMDYsIGlkZW50aWZpZXMgZm91ciB0eXBlcyBvZiByaWdodHM6ICAgIDEpIFRpdGxlIHJpZ2h0cyAtIEl0IGdpdmVzIGZvcmVzdCBEd2VsbGluZyBTY2hlZHVsZWQgVHJpYmVzIChGRFNUKSBhbmQgT3RoZXIgVHJhZGl0aW9uYWwgRm9yZXN0IER3ZWxsZXJzICAgKE9URkQpIHRoZSByaWdodCB0byBvd25lcnNoaXAgdG8gbGFuZCBmYXJtZWQgYnkgdHJpYmFscyBvciBmb3Jlc3QgZHdlbGxlcnMgc3ViamVjdCB0byBhIG1heGltdW0gb2YgNCAgIGhlY3RhcmVzOyBvd25lcnNoaXAgaXMgb25seSBmb3IgbGFuZCB0aGF0IGlzIGFjdHVhbGx5IGJlaW5nIGN1bHRpdmF0ZWQgYnkgdGhlIGNvbmNlcm5lZCBmYW1pbHkgYW5kIG5vICAgbmV3IGxhbmRzIHdpbGwgYmUgZ3JhbnRlZC4gSGVuY2UsIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCAgIDIpIFVzZSByaWdodHMgLSBUaGUgcmlnaHRzIG9mIHRoZSBkd2VsbGVycyBleHRlbmQgdG8gZXh0cmFjdGluZyBNaW5vciBGb3Jlc3QgUHJvZHVjZSwgZ3JhemluZyBhcmVhcywgdG8gICBwYXN0b3JhbGlzdCByb3V0ZXMsIGV0Yy4gSGVuY2UsIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgICAzKSBSZWxpZWYgYW5kIGRldmVsb3BtZW50IHJpZ2h0cyAtIFRvIHJlaGFiaWxpdGF0aW9uIGluIGNhc2Ugb2YgaWxsZWdhbCBldmljdGlvbiBvciBmb3JjZWQgZGlzcGxhY2VtZW50ICAgYW5kIHRvIGJhc2ljIGFtZW5pdGllcywgc3ViamVjdCB0byByZXN0cmljdGlvbnMgZm9yIGZvcmVzdCBwcm90ZWN0aW9uLiBIZW5jZSwgU3RhdGVtZW50IDMgaXMgY29ycmVjdCAgIDQpIEZvcmVzdCBtYW5hZ2VtZW50IHJpZ2h0cyAtIEl0IGluY2x1ZGVzIHRoZSByaWdodCB0byBwcm90ZWN0LCByZWdlbmVyYXRlIG9yIGNvbnNlcnZlIG9yIG1hbmFnZSBhbnkgICBjb21tdW5pdHkgZm9yZXN0IHJlc291cmNlIHdoaWNoIHRoZXkgaGF2ZSBiZWVuIHRyYWRpdGlvbmFsbHkgcHJvdGVjdGluZyBhbmQgY29uc2VydmluZyBmb3IgICBzdXN0YWluYWJsZSB1c2UuIEhlbmNlLCBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0ICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbC9rYXJuYXRha2EvZm9yZXN0LXJpZ2h0cy1jbGFpbXMtb2YtbmVhcmx5LTEyMDAtICB0cmliYWxzLWluLWh1bnN1ci1yZWplY3RlZC9hcnRpY2xlMzMxMDM1OTMuZWNlICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4     "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements:   1.  Service voters belonging to Armed Forces  have the option of either voting through a  postal ballot or through a proxy voter.   2.  People under preventive detention can cast  their votes through postal ballots.  Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFNlcnZpY2Ugdm90ZXJzIGJlbG9uZ2luZyB0byBBcm1lZCBGb3JjZXMgb3IgZm9yY2VzIHRvIHdoaWNoIHByb3Zpc2lvbnMgb2YgQXJteSAgIEFjdCwgMTk1MCBhcmUgYXBwbGljYWJsZSBoYXZlIHRoZSBvcHRpb24gb2YgZWl0aGVyIHZvdGluZyB0aHJvdWdoIHBvc3RhbCBiYWxsb3Qgb3IgdGhyb3VnaCBhIHByb3h5IHZvdGVyLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUGVvcGxlIHVuZGVyIHByZXZlbnRpdmUgZGV0ZW50aW9uIGNhbiBjYXN0IHRoZWlyIHZvdGVzIHRocm91Z2ggcG9zdGFsIGJhbGxvdHMuICAgIEtub3dsZWRnZSBCYXNlOiBQb3N0YWwgdm90aW5nIGlzIGEgdHlwZSBvZiB2b3RpbmcgaW4gZWxlY3Rpb25zIHdoZXJlYnkgRWxlY3Ryb25pY2FsbHkgVHJhbnNtaXR0ZWQgUG9zdGFsICAgQmFsbG90IFBhcGVycyAoRVRQQikgYXJlIGRpc3RyaWJ1dGVkIHRvIGVsZWN0b3JzIGFuZCByZXR1cm5lZCBieSBwb3N0LiAgICAgVGhlIExvayBTYWJoYSBwYXNzZWQgYSBiaWxsIHRoYXQgcHJvcG9zZXMgdG8gYW1lbmQgdGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxLCB0byBlbmFibGUgICBvdmVyc2VhcyBlbGVjdG9ycyB0byBhcHBvaW50IHByb3hpZXMgdG8gY2FzdCB0aGVpciB2b3RlcyBpbiBlbGVjdGlvbnMgdG8gdGhlIExvayBTYWJoYSBhbmQgc3RhdGUgYXNzZW1ibGllcyAgIHdoaWNoIGlzIGN1cnJlbnRseSBwZW5kaW5nIGluIHRoZSBSYWp5YSBTYWJoYS4gICAgU291cmNlOiBodHRwczovL3d3dy5maXJzdHBvc3QuY29tL2luZGlhL3Bvc3RhbC1iYWxsb3RzLXdoby1jYW4tdm90ZS10aHJvdWdoLWV0cGItaG93LXRvLWdldC0gIHJlZ2lzdGVyZWQtYW5kLWhvdy10aGUtdm90aW5nLWlzLWRvbmUtYW4tZXhwbGFpbmVyLTYzNzI2MTEuaHRtbCAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2        "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following matters fall under  the provisions of the Representation of the  People Act, 1951?   1. Notification of general elections  2. Registration of political parties  3. Disputes regarding elections  4. Bye-elections and time limit for filling  vacancies  Select the correct answer using the code given  below:    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBUaGUgUmVwcmVzZW50YXRpb24gb2YgdGhlIFBlb3BsZSBBY3QsIDE5NTEgY29udGFpbnMgcHJvdmlzaW9ucyByZWxhdGluZyB0byB0aGUgZm9sbG93aW5nIGVsZWN0b3JhbCAgIG1hdHRlcnM6ICAgIDEpIFF1YWxpZmljYXRpb25zIGFuZCBkaXNxdWFsaWZpY2F0aW9ucyBmb3IgbWVtYmVyc2hpcCBvZiBQYXJsaWFtZW50IGFuZCBTdGF0ZSBMZWdpc2xhdHVyZS4gICAgMikgTm90aWZpY2F0aW9uIG9mIGdlbmVyYWwgZWxlY3Rpb25zICAgIDMpIFJlZ2lzdHJhdGlvbiBvZiBwb2xpdGljYWwgcGFydGllcyAgICA0KSBEaXNwdXRlcyByZWdhcmRpbmcgZWxlY3Rpb25zICAgNSkgUG93ZXJzIG9mIEVsZWN0aW9uIENvbW1pc3Npb24gaW4gY29ubmVjdGlvbiB3aXRoIGlucXVpcmllcyBhcyB0byBkaXNxdWFsaWZpY2F0aW9ucyBvZiBtZW1iZXJzLiAgIDYpIEJ5ZS1lbGVjdGlvbnMgYW5kIHRpbWUgbGltaXQgZm9yIGZpbGxpbmcgdmFjYW5jaWVzIGFuZCBvdGhlcnMuICAgUmVwcmVzZW50YXRpb24gb2YgdGhlIFBlb3BsZSBBY3QsIDE5NTAsIGRlYWxzIHdpdGggdGhlIGFsbG9jYXRpb24gb2Ygc2VhdHMgaW4gdGhlIEhvdXNlIG9mIHRoZSBQZW9wbGUgICBhbmQgaW4gdGhlIExlZ2lzbGF0aXZlIEFzc2VtYmxpZXMgYW5kIExlZ2lzbGF0aXZlIENvdW5jaWxzIG9mIFN0YXRlcyBhbmQgZGVsaW1pdGF0aW9uIG9mIFBhcmxpYW1lbnRhcnksICAgQXNzZW1ibHkgYW5kIENvdW5jaWwgQ29uc3RpdHVlbmNpZXMuICAgICBLbm93bGVkZ2UgQmFzZTogICAgIE90aGVyIG1hdHRlcnMgZGVhbHQgd2l0aCBSZXByZXNlbnRhdGlvbiBvZiB0aGUgUGVvcGxlIEFjdCwgMTk1MDogICAgMSkgRWxlY3Rpb24gb2ZmaWNlcnMgbGlrZSBjaGllZiBlbGVjdG9yYWwgb2ZmaWNlcnMsIGRpc3RyaWN0IGVsZWN0aW9uIG9mZmljZXJzLCBlbGVjdG9yYWwgcmVnaXN0cmF0aW9uIG9mZmljZXJzICAgYW5kIHNvIG9uLiAgICAyKSBFbGVjdG9yYWwgcm9sbHMgZm9yIFBhcmxpYW1lbnRhcnksIEFzc2VtYmx5IGFuZCBDb3VuY2lsIGNvbnN0aXR1ZW5jaWVzLiAgICAzKSBNYW5uZXIgb2YgZmlsbGluZyBzZWF0cyBpbiB0aGUgQ291bmNpbCBvZiBTdGF0ZXMgdG8gYmUgZmlsbGVkIGJ5IHJlcHJlc2VudGF0aXZlcyBvZiB1bmlvbiB0ZXJyaXRvcmllcy4gICAgNCkgTG9jYWwgYXV0aG9yaXRpZXMgZm9yIHB1cnBvc2VzIG9mIGVsZWN0aW9ucyB0byB0aGUgU3RhdGUgTGVnaXNsYXRpdmUgQ291bmNpbHMuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTS4gTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIENoYXB0ZXItNzIgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following benefits are  available for a recognized National political  party in India?   1.  Candidates require only 10 proposers to file  their nominations.   2.  Dedicated broadcast slots on public  broadcasters.   3.  It can nominate up to 40 Star campaigners.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQ2FuZGlkYXRlcyBmcm9tIGEgbmF0aW9uYWwgcGFydHkgcmVxdWlyZSBvbmx5IG9uZSBwcm9wb3NlciBvciBwZXJzb24gdG8gZmlsZSAgIHRoZWlyIG5vbWluYXRpb25zLiBUaGUgcHJvcG9zZXJzIG11c3QgYWxzbyBiZSBlbGVjdG9ycyBmcm9tIHRoZSBjb25jZXJuZWQgY29uc3RpdHVlbmN5LCBidXQgYSBwcm9wb3NlciAgIGNhbiBhbHNvIGJlIGEgY2FuZGlkYXRlIGZyb20gdGhlIHNhbWUgY29uc3RpdHVlbmN5LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBOYXRpb25hbCBwYXJ0aWVzIGdldCBkZWRpY2F0ZWQgYnJvYWRjYXN0IHNsb3RzIG9uIHB1YmxpYyBicm9hZGNhc3RlcnMuICAgRG9vcmRhcnNoYW4gYW5kIEFsbCBJbmRpYSBSYWRpbyBkdXJpbmcgdGhlIGdlbmVyYWwgZWxlY3Rpb25zLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBQb2xpdGljYWwgcGFydGllcyBhcmUgZW50aXRsZWQgdG8gbm9taW5hdGUgJ3N0YXIgY2FtcGFpZ25lcnMnIGR1cmluZyBnZW5lcmFsICAgZWxlY3Rpb25zLiBBIG5hdGlvbmFsIHBhcnR5IGNhbiBoYXZlIGEgbWF4aW11bSBvZiA0MCAnc3RhciBjYW1wYWlnbmVycycgd2hpbGUgYSByZWdpc3RlcmVkICAgdW5yZWNvZ25pc2VkIHBhcnR5IGNhbiBub21pbmF0ZSBhIG1heGltdW0gb2YgMjAgc3RhciBjYW1wYWlnbmVycy4gICAgU291cmNlOiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvaW5kaWEvaW5kaWEtb3RoZXJzL3doYXQtZG9lcy1uYXRpb25hbC1wYXJ0eS1zdGF0dXMtICBtZWFuLyAgICBodHRwczovL3d3dy5maXJzdHBvc3QuY29tL2luZGlhL2xvay1zYWJoYS1lbGVjdGlvbi0yMDE5LXdoby1jYW4tZmlsZS1ub21pbmF0aW9ucy10by1jb250ZXN0LSAgcG9sbHMtZG9jdW1lbnRzLXJlcXVpcmVkLWhlcmVzLWhvdy1pdC13b3Jrcy02MzY5NDUxLmh0bWwgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to the contracts executed  by the Union government, consider the  following statements:   1.  All contracts of the Union government to  carry on any trade must be expressed to be  made by the Prime Minister.   2.  The officer executing the contract is not  personally liable for any contract executed  by the Union government.   3.  Under any ordinary contract law, the Union  government owes a liability.    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIFVuaW9uIGNhbiBlbnRlciBpbnRvIGNvbnRyYWN0cyBmb3IgdGhlIGFjcXVpc2l0aW9uLCBob2xkaW5nIGFuZCBkaXNwb3NhbCBvZiAgIHByb3BlcnR5LCBvciB0byBjYXJyeSBvbiBhbnkgdHJhZGUgb3IgYnVzaW5lc3MsIG9yIGZvciBhbnkgb3RoZXIgcHVycG9zZSB1bmRlciB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbjogICB0aGV5IG11c3QgYmUgZXhwcmVzc2VkIHRvIGJlIG1hZGUgYnkgdGhlIHByZXNpZGVudCBhbmQgbXVzdCBiZSBleGVjdXRlZCBvbiBiZWhhbGYgb2YgdGhlIHByZXNpZGVudCBvciAgIGJ5IHN1Y2ggcGVyc29uIG9yIGluIHN1Y2ggbWFubmVyIGFzIHRoZSBwcmVzaWRlbnQgbWF5IGRpcmVjdCBvciBhdXRob3Jpc2UuICAgIFRoZXNlIGNvbmRpdGlvbnMgYXJlIG1hbmRhdG9yeSBhbmQgZmFpbHVyZSB0byBjb21wbHkgd2l0aCB0aGVtIG51bGxpZmllcyB0aGUgY29udHJhY3RzIGFuZCByZW5kZXJzICAgdGhlbSB2b2lkIGFuZCB1bmVuZm9yY2VhYmxlIGluIHRoZSBjb3VydHMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBQcmVzaWRlbnQgaXMgbm90IHBlcnNvbmFsbHkgbGlhYmxlIGluIHJlc3BlY3Qgb2YgYW55IGNvbnRyYWN0IGV4ZWN1dGVkIGluIGhpcyAgIG5hbWUuIFNpbWlsYXJseSwgdGhlIG9mZmljZXIgZXhlY3V0aW5nIHRoZSBjb250cmFjdCBpcyBhbHNvIG5vdCBwZXJzb25hbGx5IGxpYWJsZS4gVGhpcyBpbW11bml0eSBpcyBwdXJlbHkgICBwZXJzb25hbC4gICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBpbW11bml0eSBwcm92aWRlZCB0byB0aGUgUHJlc2lkZW50IGRvZXMgbm90IGltbXVuaXplIHRoZSBnb3Zlcm5tZW50ICAgZnJvbSBhIGNvbnRyYWN0dWFsIGxpYWJpbGl0eSwgbWFraW5nIHRoZSBnb3Zlcm5tZW50IHN1YWJsZSBpbiBjb250cmFjdHMuIFRoaXMgbWVhbnMgdGhhdCB0aGUgY29udHJhY3R1YWwgICBsaWFiaWxpdHkgb2YgdGhlIFVuaW9uIGdvdmVybm1lbnQgaXMgdGhlIHNhbWUgYXMgdGhhdCBvZiBhbiBpbmRpdmlkdWFsIHVuZGVyIHRoZSBvcmRpbmFyeSBsYXcgb2YgICBjb250cmFjdC4gICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTS4gTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIENoYXB0ZXItNjcgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the Elections in India,  consider the following statements:   1.  The president's decision is final on the  question of whether a member is subject to  any of the disqualifications mentioned in the  Constitution.  2.  Election Commission has recently extended  the Electronically Transmitted Postal Ballot  System (ETPBS) to Non-Resident Indian  (NRI) voters.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE9uIHRoZSBxdWVzdGlvbiB3aGV0aGVyIGEgbWVtYmVyIGlzIHN1YmplY3QgdG8gYW55IG9mIHRoZSBkaXNxdWFsaWZpY2F0aW9ucyAgIG1lbnRpb25lZCBpbiB0aGUgQ29uc3RpdHV0aW9uIGFuZCB0aGUgUmVwcmVzZW50YXRpb24gb2YgUGVvcGxlIEFjdCAoMTk1MSksIHRoZSBwcmVzaWRlbnQncyBkZWNpc2lvbiBpcyAgIGZpbmFsLiBIb3dldmVyLCBoZSBzaG91bGQgb2J0YWluIHRoZSBvcGluaW9uIG9mIHRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhIGluIHRoZXNlIG1hdHRlcnMgYW5kIGFjdCAgIGFjY29yZGluZ2x5LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFJlY2VudGx5LCB0aGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBvZiBJbmRpYSAoRUNJKSBwcm9wb3NlZCB0byBleHRlbmQgdGhlICAgRWxlY3Ryb25pY2FsbHkgVHJhbnNtaXR0ZWQgUG9zdGFsIEJhbGxvdCBTeXN0ZW0gKEVUUEJTKSB0byBOb24tUmVzaWRlbnQgSW5kaWFuIChOUkkpIHZvdGVycyBmb3IgZWxlY3Rpb25zICAgaW4gQXNzYW0sIFdlc3QgQmVuZ2FsLCBLZXJhbGEsIFRhbWlsIE5hZHUgYW5kIFB1ZHVjaGVycnkuIEJ1dCB0aGUgZ292ZXJubWVudCBpcyB5ZXQgdG8gYWdyZWUgd2l0aCB0aGUgICBwcm9wb3NhbCwgc28gaXQncyBub3QgYmVlbiBpbXBsZW1lbnRlZCB0aWxsIG5vdy4gICAgIFNvdXJjZTogTS4gTGF4bWlrYW50aCBDaGFwdGVyIDQyIEVsZWN0aW9uIENvbW1pc3Npb24gICAgaHR0cHM6Ly93d3cuaGluZHVzdGFudGltZXMuY29tL2luZGlhLW5ld3MvZWxlY3Ryb25pYy1iYWxsb3QtZm9yLW5yaS12b3RlcnMtdW5kZXItY29uc2lkZXJhdGlvbi0gIGNlYy1zdXNoaWwtY2hhbmRyYS0xMDE2NTA2MDY4MzMyOTMuaHRtbCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 26,
      "question" : "Which of the following statements  regarding the Central Vigilance Commission  (CVC) is/ are correct?   1.  CVC can be consulted by Government while  taking disciplinary action against a civil  servant.   2.  CVC constitutes a Central Vigilance  Commissioner and not more than two  Vigilance Commissioners as members.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBDZW50cmFsIFZpZ2lsYW5jZSBDb21taXNzaW9uIGlzIHRoZSBtYWluIGFnZW5jeSBmb3IgcHJldmVudGluZyBjb3JydXB0aW9uIGluIHRoZSBDZW50cmFsIGdvdmVybm1lbnQuIEl0ICAgd2FzIGVzdGFibGlzaGVkIGluIDE5NjQgYnkgYW4gZXhlY3V0aXZlIHJlc29sdXRpb24uIEl0cyBlc3RhYmxpc2htZW50IHdhcyByZWNvbW1lbmRlZCBieSB0aGUgICBTYW50aGFuYW0gQ29tbWl0dGVlIG9uIFByZXZlbnRpb24gb2YgQ29ycnVwdGlvbi4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgQ2VudHJhbCBWaWdpbGFuY2UgQ29tbWlzc2lvbiAoQ1ZDKSBpcyBjb25zdWx0ZWQgYnkgdGhlIGdvdmVybm1lbnQgd2hpbGUgICB0YWtpbmcgZGlzY2lwbGluYXJ5IGFjdGlvbiBhZ2FpbnN0IGEgY2l2aWwgc2VydmFudC4gVGhlIHByb2JsZW0gYXJpc2VzIHdoZW4gdGhlIHR3byBib2RpZXMgdGVuZGVyICAgY29uZmxpY3RpbmcgYWR2aWNlLiBIb3dldmVyLCB0aGUgVVBTQywgYmVpbmcgYW4gaW5kZXBlbmRlbnQgY29uc3RpdHV0aW9uYWwgYm9keSwgaGFzIGFuIGVkZ2Ugb3ZlciB0aGUgICBDVkMsIHdoaWNoIGlzIGNyZWF0ZWQgYnkgYW4gZXhlY3V0aXZlIHJlc29sdXRpb24gb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgYW5kICAgIGNvbmZlcnJlZCBhIHN0YXR1dG9yeSBzdGF0dXMgaW4gT2N0b2JlciAyMDAzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIENlbnRyYWwgVmlnaWxhbmNlIENvbW1pc3Npb24gQWN0IDIwMDMuIFRoZSBDb21taXNzaW9uIHNoYWxsICAgY29uc2lzdCBvZjogICAxKSBBIENlbnRyYWwgVmlnaWxhbmNlIENvbW1pc3Npb25lciAtIENoYWlycGVyc29uOyAgIDIpIE5vdCBtb3JlIHRoYW4gdHdvIFZpZ2lsYW5jZSBDb21taXNzaW9uZXJzIC0gTWVtYmVycyAgIFNvdXJjZTogUG9saXR5IGJ5IExheG1pa2FudGgsIDV0aCBlZGl0aW9uLCBDaC00MywgQ2gtNTcgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following statements is/are  correct regarding the National Commission for  Backward Classes (NCBC)?   1.  It presents an annual report to the President  on the safeguards provided for the socially  and educationally backward classes.  2.  The Commission consists of a chairperson,  a vice-chairperson and three other  members.  3. The Commission has the power to regulate  its own procedure.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSAxMDJuZCBBbWVuZG1lbnQgQWN0IG9mIDIwMTggY29uZmVycmVkIGEgY29uc3RpdHV0aW9uYWwgc3RhdHVzIG9uIHRoZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciAgIEJhY2t3YXJkIENsYXNzZXMgKE5DQkMpLiBUaGUgYW1lbmRtZW50IGluc2VydGVkIGEgbmV3IEFydGljbGUgMzM4LUIgaW4gdGhlIGNvbnN0aXR1dGlvbi4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gSXQgcHJlc2VudHMgdG8gdGhlIFByZXNpZGVudCwgYW5udWFsbHkgYW5kIGF0IHN1Y2ggb3RoZXIgdGltZXMgYXMgdGhlIENvbW1pc3Npb24gICBtYXkgZGVlbSBmaXQsIHJlcG9ydHMgdXBvbiB0aGUgd29ya2luZyBvZiB0aG9zZSBzYWZlZ3VhcmRzIHByb3ZpZGVkIGZvciB0aGUgc29jaWFsbHkgYW5kIGVkdWNhdGlvbmFsbHkgICBiYWNrd2FyZCBjbGFzc2VzLiBUaGUgUHJlc2lkZW50IGxhaWQgc3VjaCByZXBvcnRzIGJlZm9yZSBlYWNoIEhvdXNlIG9mIFBhcmxpYW1lbnQuICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBDb21taXNzaW9uIGNvbnNpc3RzIG9mIGEgY2hhaXJwZXJzb24sIGEgdmljZS1jaGFpcnBlcnNvbiBhbmQgdGhyZWUgb3RoZXIgICBtZW1iZXJzLiBUaGV5IGFyZSBhcHBvaW50ZWQgYnkgdGhlIFByZXNpZGVudCBieSB3YXJyYW50IHVuZGVyIGhpcyBoYW5kIGFuZCBzZWFsLiBUaGVpciBjb25kaXRpb25zIG9mICAgc2VydmljZSBhbmQgdGVudXJlIG9mIG9mZmljZSBhcmUgYWxzbyBkZXRlcm1pbmVkIGJ5IHRoZSBQcmVzaWRlbnQuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBDb21taXNzaW9uIGlzIHZlc3RlZCB3aXRoIHRoZSBwb3dlciB0byByZWd1bGF0ZSBpdHMgb3duIHByb2NlZHVyZS4gVGhlICAgQ29tbWlzc2lvbiwgd2hpbGUgaW52ZXN0aWdhdGluZyBhbnkgbWF0dGVyIG9yIGVucXVpcmluZyBpbnRvIGFueSBjb21wbGFpbnQsIGhhcyBhbGwgdGhlIHBvd2VycyBvZiBhIGNpdmlsICAgY291cnQuICAgIFNvdXJjZTogaHR0cDovL3d3dy5uY2JjLm5pYy5pbi9Ib21lLmFzcHg/UmV0dXJuVXJsPSUyZiAgICBodHRwczovL3d3dy5pbmRpYW5sYXdzaW5mby5jb20vaG9tZS9zZWN0aW9uLzM3NzQvYXJ0aWNsZS0zMzhiLWluLXRoZS1jb25zdGl0dXRpb24tb2YtICBpbmRpYS9uYXRpb25hbC1jb21taXNzaW9uLWZvci1iYWNrd2FyZC1jbGFzc2VzICAgIGh0dHA6Ly93d3cubmNiYy5uaWMuaW4vV3JpdGVyZWFkZGF0YS9HYXpldHRlMTEuMDguMjAxOC5wZGYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to the Ninth Schedule of  the Constitution, which of the following  statements is correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBOaW50aCBTY2hlZHVsZSBiZWNhbWUgYSBwYXJ0IG9mIHRoZSBDb25zdGl0dXRpb24gaW4gMTk1MS4gSXQgd2FzIGNyZWF0ZWQgYnkgdGhlIG5ldyBBcnRpY2xlIDMxQiwgICB3aGljaCBhbG9uZyB3aXRoIDMxQSB3YXMgYnJvdWdodCBpbiBieSB0aGUgZ292ZXJubWVudCB0byBwcm90ZWN0IGxhd3MgcmVsYXRlZCB0byBhZ3JhcmlhbiByZWZvcm0gYW5kICAgZm9yIGFib2xpc2hpbmcgdGhlIFphbWluZGFyaSBzeXN0ZW0uICAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IFRoZSBOaW50aCBTY2hlZHVsZSBjb250YWlucyBhIGxpc3Qgb2YgY2VudHJhbCBhbmQgc3RhdGUgbGF3cyB3aGljaCBjYW5ub3QgYmUgICBjaGFsbGVuZ2VkIGluIGNvdXJ0cyAodGhvdWdoIGxhd3MgcGxhY2VkIHVuZGVyIHRoZSBOaW50aCBTY2hlZHVsZSBhZnRlciBBcHJpbCAyNCwgMTk3MywgYXJlIG9wZW4gdG8gICBjaGFsbGVuZ2UgaW4gY291cnQgaWYgdGhleSB2aW9sYXRlIGZ1bmRhbWVudGFscyByaWdodHMpLiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IFRoZSBsYXdzIHdlcmUgaW5pdGlhbGx5IGluY2x1ZGVkIGluIHRoaXMgc2NoZWR1bGUgdG8gcHJvdGVjdCBpdCBmcm9tIGp1ZGljaWFsIHNjcnV0aW55ICAgb24gdGhlIGdyb3VuZCBvZiB2aW9sYXRpb24gb2YgZnVuZGFtZW50YWwgcmlnaHRzLiBIb3dldmVyLCBpbiBhIHNpZ25pZmljYW50IGp1ZGdlbWVudCBkZWxpdmVyZWQgaW4gSS5SLiAgIENvZWxobyBjYXNlICgyMDA3KSwgdGhlIFN1cHJlbWUgQ291cnQgcnVsZWQgdGhhdCB0aGVyZSBjb3VsZCBub3QgYmUgYW55IGJsYW5rZXQgaW1tdW5pdHkgZnJvbSBqdWRpY2lhbCAgIHJldmlldyBvZiBsYXdzIGluY2x1ZGVkIGluIHRoZSBOaW50aCBTY2hlZHVsZS4gVGhlIGNvdXJ0IGhlbGQgdGhhdCBqdWRpY2lhbCByZXZpZXcgaXMgYSAnYmFzaWMgZmVhdHVyZScgb2YgICB0aGUgY29uc3RpdHV0aW9uIGFuZCBpdCBjb3VsZCBub3QgYmUgdGFrZW4gYXdheSBieSBwdXR0aW5nIGEgbGF3IHVuZGVyIHRoZSBOaW50aCBTY2hlZHVsZS4gSXQgc2FpZCB0aGF0IHRoZSAgIGxhd3MgcGxhY2VkIHVuZGVyIHRoZSBOaW50aCBTY2hlZHVsZSBhZnRlciBBcHJpbCAyNCwgMTk3MywgYXJlIG9wZW4gdG8gY2hhbGxlbmdlIGluIGNvdXJ0IGlmIHRoZXkgdmlvbGF0ZWQgICBmdW5kYW1lbnRhbHMgcmlnaHRzIGd1YXJhbnRlZWQgdW5kZXIgQXJ0aWNsZXMgMTQsIDE1LCAxOSBhbmQgMjEgb3IgdGhlICdiYXNpYyBzdHJ1Y3R1cmUnIG9mIHRoZSAgIGNvbnN0aXR1dGlvbi4gICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogTW9zdCBvZiB0aGUgbGF3cyBpbmNsdWRlZCB1bmRlciA5dGggc2NoZWR1bGUgYXJlIHJlbGF0ZWQgdG8gYWdyaWN1bHR1cmUgYW5kIGxhbmQgICBpc3N1ZXMuIEhvd2V2ZXIsIHRoZSBsaXN0IGFsc28gaW5jbHVkZXMgb3RoZXIgc3ViamVjdHMsIHN1Y2ggYXMgcmVzZXJ2YXRpb24gZWcuIHRoZSA3NnRoIEFtZW5kbWVudCBBY3Qgb2YgICAxOTk0IGhhcyBwbGFjZWQgdGhlIFRhbWlsIE5hZHUgUmVzZXJ2YXRpb25zIEFjdCBvZiAxOTk0IGluIHRoZSBOaW50aCBTY2hlZHVsZS4gVGh1cywgdGhlIDl0aCBzY2hlZHVsZSAgIGRvZXNuJ3Qgb25seSBkZWFsIHdpdGggbGF3cyByZWxhdGVkIHRvIGFncmljdWx0dXJlIGFuZCBsYW5kIGlzc3Vlcy4gICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBBcnRpY2xlIDMxQiBoYXMgYSByZXRyb3NwZWN0aXZlIG9wZXJhdGlvbiB3aGljaCBtZWFucyB0aGF0IGlmIGxhd3MgYXJlIGluc2VydGVkIGluICAgdGhlIE5pbnRoIFNjaGVkdWxlIGFmdGVyIHRoZXkgYXJlIGRlY2xhcmVkIHVuY29uc3RpdHV0aW9uYWwsIHRoZXkgYXJlIGNvbnNpZGVyZWQgdG8gaGF2ZSBiZWVuIGluIHRoZSAgIFNjaGVkdWxlIHNpbmNlIHRoZWlyIGNvbW1lbmNlbWVudCwgYW5kIHRodXMgdmFsaWQuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTGF4bWlrYW50aCwgQ2hhcHRlci0zLCBTYWxpZW50IEZlYXR1cmVzIG9mIHRoZSBDb25zdGl0dXRpb24sIENoYXB0ZXItNywgICBGdW5kYW1lbnRhbCBSaWdodHMgICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC9uaW50aC1zY2hlZHVsZS1vZi10aGUtY29uc3RpdHV0aW9uLWV4cGxhaW5lZC0gIDYyNjU4OTAvIzp+OnRleHQ9VGhlJTIwTmludGglMjBTY2hlZHVsZSUyMGNvbnRhaW5zJTIwYSxhbWVuZGVkJTIwZm9yJTIwdGhlJTIwZmlyc3QlMjB0aSAgbWUuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It includes laws from both centre and state.   ",
        "option2" : " The laws included in the schedule are given   complete immunity from Judicial Review.   ",
        "option3" : " Laws included under this schedule are only   related to agriculture and land issues.   ",
        "option4" : " Retrospective laws cannot be included in   the 9th schedule.   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements with  reference to National Commission for  Scheduled Tribes (STs):   1. It is a ten-member body including a  chairperson.   2. It ensures the implementation of the  Provisions of Panchayats (Extension to the  Scheduled Areas) Act, 1996.   3. The state governments are required to  consult the Commission on all major policy  matters affecting the STs.   4. The Commission can enforce the  attendance of any person from any part of  India during an investigation.   Which of the statements given above is/are  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgVGhlIE5hdGlvbmFsIENvbW1pc3Npb24gZm9yIFNDcyBhbmQgU1RzIGNhbWUgaW50byBiZWluZyBjb25zZXF1ZW50IHVwb24gdGhlIHBhc3Npbmcgb2YgdGhlIDY1dGggICBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0IG9mIDE5OTAuIFRoZSBzZXBhcmF0ZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciBTVHMgY2FtZSBpbnRvIGV4aXN0ZW5jZSBpbiAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICAyMDA0LiBJdCBpcyBhbHNvIGEgY29uc3RpdHV0aW9uYWwgYm9keSBpbiB0aGUgc2Vuc2UgdGhhdCBpdCBpcyBkaXJlY3RseSBlc3RhYmxpc2hlZCBieSBBcnRpY2xlIDMzOC1BIG9mIHRoZSAgIENvbnN0aXR1dGlvbi4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBJdCBjb25zaXN0cyBvZiBhIGNoYWlycGVyc29uLCBhIHZpY2UtY2hhaXJwZXJzb24gYW5kIHRocmVlIG90aGVyIG1lbWJlcnMuICAgVGhleSBhcmUgYXBwb2ludGVkIGJ5IHRoZSBQcmVzaWRlbnQgYnkgd2FycmFudCB1bmRlciBoaXMgaGFuZCBhbmQgc2VhbC4gVGhlaXIgY29uZGl0aW9ucyBvZiBzZXJ2aWNlIGFuZCAgIHRlbnVyZSBvZiBvZmZpY2UgYXJlIGFsc28gZGV0ZXJtaW5lZCBieSB0aGUgUHJlc2lkZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJbiAyMDA1LCB0aGUgUHJlc2lkZW50IHNwZWNpZmllZCB0aGUgZm9sbG93aW5nIG90aGVyIGZ1bmN0aW9ucyBvZiB0aGUgQ29tbWlzc2lvbiAgIGluIHJlbGF0aW9uIHRvIHRoZSBwcm90ZWN0aW9uLCB3ZWxmYXJlIGFuZCBkZXZlbG9wbWVudCBhbmQgYWR2YW5jZW1lbnQgb2YgdGhlIFNUcy4gSXQgaW5jbHVkZXMgICBtZWFzdXJlcyB0byBiZSB0YWtlbiB0byBlbnN1cmUgZnVsbCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgUHJvdmlzaW9ucyBvZiBQYW5jaGF5YXRzIChFeHRlbnNpb24gdG8gdGhlICAgU2NoZWR1bGVkIEFyZWFzKSBBY3QsIDE5OTYuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgVGhlIENlbnRyYWwgZ292ZXJubWVudCBhbmQgdGhlIHN0YXRlIGdvdmVybm1lbnRzIGFyZSByZXF1aXJlZCB0byBjb25zdWx0IHRoZSAgIENvbW1pc3Npb24gb24gYWxsIG1ham9yIHBvbGljeSBtYXR0ZXJzIGFmZmVjdGluZyB0aGUgU1RzLiAgICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIFRoZSBDb21taXNzaW9uIGlzIHZlc3RlZCB3aXRoIHRoZSBwb3dlciB0byByZWd1bGF0ZSBpdHMgb3duIHByb2NlZHVyZS4gVGhlICAgQ29tbWlzc2lvbiwgd2hpbGUgaW52ZXN0aWdhdGluZyBhbnkgbWF0dGVyIG9yIGlucXVpcmluZyBpbnRvIGFueSBjb21wbGFpbnQsIGhhcyBhbGwgdGhlIHBvd2VycyBvZiBhIGNpdmlsICAgY291cnQgdHJ5aW5nIGEgc3VpdCBhbmQgaW4gcGFydGljdWxhciBpbiByZXNwZWN0IG9mIHRoZSBmb2xsb3dpbmcgbWF0dGVyczogKGEpIHN1bW1vbmluZyBhbmQgZW5mb3JjaW5nIHRoZSAgIGF0dGVuZGFuY2Ugb2YgYW55IHBlcnNvbiBmcm9tIGFueSBwYXJ0IG9mIEluZGlhIGFuZCBleGFtaW5pbmcgaGltIG9uIG9hdGg7IChiKSByZXF1aXJpbmcgdGhlIGRpc2NvdmVyeSAgIGFuZCBwcm9kdWN0aW9uIG9mIGFueSBkb2N1bWVudDsgKGMpIHJlY2VpdmluZyBldmlkZW5jZSBvbiBhZmZpZGF2aXRzOyAoZCkgcmVxdWlzaXRpb25pbmcgYW55IHB1YmxpYyByZWNvcmQgICBmcm9tIGFueSBjb3VydCBvciBvZmZpY2U7IChlKSBpc3N1aW5nIHN1bW1vbnMgZm9yIHRoZSBleGFtaW5hdGlvbiBvZiB3aXRuZXNzZXMgYW5kIGRvY3VtZW50czsgYW5kIChmKSAgIGFueSBvdGhlciBtYXR0ZXIgd2hpY2ggdGhlIFByZXNpZGVudCBtYXkgZGV0ZXJtaW5lLiAgICBTb3VyY2U6ICBJbmRpYW4gcG9saXR5OyBMYXhtaWthbnRoLCA2dGggZWRpdGlvbiwgY2hhcHRlciA0OCwgUGFnZS05MzYtOTQxICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "3 and 4 only   ",
        "option4" : "2, 3 and 4 only    "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements:    1.  The Constitution does not specify the  tenure and service conditions of the Special  Officer for Linguistic Minorities.   2.  In India, the linguistic minorities can be  identified by the state governments on the  basis of Census data.  3.  The Constitution provides a definition to  identify linguistic minorities in the country.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFydGljbGUgMzUwLUIgb2YgdGhlIENvbnN0aXR1dGlvbiBwcm92aWRlcyBmb3IgdGhlIFNwZWNpYWwgT2ZmaWNlciBmb3IgTGluZ3Vpc3RpYyAgIE1pbm9yaXRpZXMuIEhlIGlzIGFwcG9pbnRlZCBieSB0aGUgUHJlc2lkZW50LiBIb3dldmVyLCB0aGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IHNwZWNpZnkgdGhlICAgcXVhbGlmaWNhdGlvbnMgYXMgd2VsbCBhcyB0aGUgdGVudXJlLCBzYWxhcmllcyBhbmQgYWxsb3dhbmNlcywgc2VydmljZSBjb25kaXRpb25zIGFuZCBwcm9jZWR1cmUgZm9yICAgcmVtb3ZhbCBvZiB0aGUgU3BlY2lhbCBPZmZpY2VyIGZvciBMaW5ndWlzdGljIE1pbm9yaXRpZXMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEluIHRoZSBjYXNlIG9mIFRBIFBhaSBGb3VuZGF0aW9uIGFuZCBPdGhlcnMgdnMgU3RhdGUgb2YgS2FybmF0YWthLCB0aGUgU3VwcmVtZSAgIENvdXJ0IGhlbGQgdGhhdCB0aGUgc3RhdHVzIG9mIGxpbmd1aXN0aWMgbWlub3JpdHkgaXMgdG8gYmUgZGV0ZXJtaW5lZCBpbiB0aGUgY29udGV4dCBvZiBzdGF0ZXMgYW5kIG5vdCAgIEluZGlhIGFzIGEgd2hvbGUuIFN0YXR1cyBvZiBsaW5ndWlzdGljIG1pbm9yaXRpZXMgYXJlIGlkZW50aWZpZWQgYnkgdGhlIHN0YXRlIGdvdmVybm1lbnQgL1VuaW9uIFRlcnJpdG9yeSAgIG9uIHRoZSBiYXNpcyBvZiBDZW5zdXMgZGF0YS4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBOZWl0aGVyIHRoZSBDb25zdGl0dXRpb24gbm9yIGFueSBwaWVjZSBvZiBsZWdpc2xhdGlvbiBkZWZpbmVzIGxpbmd1aXN0aWMgICBtaW5vcml0eS4gSW4gMTk3MSwgaW4gdGhlIGNhc2Ugb2YgREFWIENvbGxlZ2UgZXRjLiB2L3MgU3RhdGUgb2YgUHVuamFiLCB0aGUgU3VwcmVtZSBDb3VydCBvZiBJbmRpYSBkZWZpbmVkIGEgICBsaW5ndWlzdGljIG1pbm9yaXR5IGFzIGEgbWlub3JpdHkgdGhhdCBhdCBsZWFzdCBoYXMgYSBzcG9rZW4gbGFuZ3VhZ2UsIHJlZ2FyZGxlc3Mgb2YgaGF2aW5nIGEgc2NyaXB0IG9yIG5vdC4gICAgIEtub3dsZWRnZSBCYXNlOiBJdCB3b3VsZCBiZSB0aGUgZHV0eSBvZiB0aGUgU3BlY2lhbCBPZmZpY2VyIHRvIGludmVzdGlnYXRlIGFsbCBtYXR0ZXJzIHJlbGF0aW5nIHRvIHRoZSAgIHNhZmVndWFyZHMgcHJvdmlkZWQgZm9yIGxpbmd1aXN0aWMgbWlub3JpdGllcyB1bmRlciB0aGUgQ29uc3RpdHV0aW9uLiBIZSB3b3VsZCByZXBvcnQgdG8gdGhlIFByZXNpZGVudCAgIHVwb24gdGhvc2UgbWF0dGVycyBhdCBzdWNoIGludGVydmFscyBhcyB0aGUgUHJlc2lkZW50IG1heSBkaXJlY3QuIFRoZSBQcmVzaWRlbnQgc2hvdWxkIHBsYWNlIGFsbCBzdWNoICAgcmVwb3J0cyBiZWZvcmUgZWFjaCBIb3VzZSBvZiBQYXJsaWFtZW50IGFuZCBzZW5kIHRvIHRoZSBnb3Zlcm5tZW50cyBvZiB0aGUgc3RhdGVzIGNvbmNlcm5lZC4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IC0gTSBMYXhtaWthbnRoIC02dGggZWRpdGlvbiAtIGNoYXB0ZXIgLSA1MCAtIFNwZWNpYWwgT2ZmaWNlciBmb3IgTGluZ3Vpc3RpYyBNaW5vcml0aWVzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 31,
      "question" : "Pressure groups exist in India for the  protection and promotion of the interests of  their members by influencing the governments  at the Centre and State levels. In this context,  consider the following statements:   1.  All India Trade Union Congress (AITUC) was  formed during the Indian freedom struggle  which had Lala Lajpat Rai as its first  president.    2.  The Bar Council of India is a statutory body  to safeguard the rights, privileges and  interests of advocates.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgdGVybSAncHJlc3N1cmUgZ3JvdXAnIG9yaWdpbmF0ZWQgaW4gdGhlIFVTQS4gQSBwcmVzc3VyZSBncm91cCBpcyBhIGdyb3VwIG9mIHBlb3BsZSB3aG8gYXJlIG9yZ2FuaXNlZCAgIGFjdGl2ZWx5IGZvciBwcm9tb3RpbmcgYW5kIGRlZmVuZGluZyB0aGVpciBjb21tb24gaW50ZXJlc3QuIFRoZXNlIGFyZSBhc3NvY2lhdGlvbnMgdGhhdCByYWlzZSB0aGUgICBjb25jZXJucyBhbmQgZGVtYW5kcyBvZiBkb2N0b3JzLCBsYXd5ZXJzLCBqb3VybmFsaXN0cyBhbmQgdGVhY2hlcnMuIERlc3BpdGUgdmFyaW91cyByZXN0cmljdGlvbnMsIHRoZXNlICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGFzc29jaWF0aW9ucyBwcmVzc3VyaXplIHRoZSBnb3Zlcm5tZW50IGJ5IHZhcmlvdXMgbWV0aG9kcyBpbmNsdWRpbmcgYWdpdGF0aW9ucyBmb3IgdGhlIGltcHJvdmVtZW50IG9mICAgdGhlaXIgc2VydmljZSBjb25kaXRpb25zLiBUaGV5IGluY2x1ZGU6ICAgICAxKSBJbmRpYW4gTWVkaWNhbCBBc3NvY2lhdGlvbiAoSU1BKSAgICAgMikgQmFyIENvdW5jaWwgb2YgSW5kaWEgKEJDSSkgICAgIDMpIEluZGlhbiBGZWRlcmF0aW9uIG9mIFdvcmtpbmcgSm91cm5hbGlzdHMgKElGV0opICAgICA0KSBBbGwgSW5kaWEgVHJhZGUgVW5pb24gQ29uZ3Jlc3MgKEFJVFVDKSAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgQWxsIEluZGlhIFRyYWRlIFVuaW9uIENvbmdyZXNzIChBSVRVQykgd2FzIGZvdW5kZWQgaW4gMTkyMCB3aXRoIExhbGEgTGFqcGF0ICAgUmFpIGFzIGl0cyBmaXJzdCBwcmVzaWRlbnQuIFVwdG8gMTk0NSwgQ29uZ3Jlc3NtZW4sIFNvY2lhbGlzdHMgYW5kIENvbW11bmlzdHMgd29ya2VkIGluIHRoZSBBSVRVQyAgIHdoaWNoIHdhcyB0aGUgY2VudHJhbCB0cmFkZSB1bmlvbiBvcmdhbmlzYXRpb24gb2Ygd29ya2VycyBvZiBJbmRpYS4gU3Vic2VxdWVudGx5LCB0aGUgdHJhZGUgdW5pb24gICBtb3ZlbWVudCBnb3Qgc3BsaXQgb24gcG9saXRpY2FsIGxpbmVzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIEJhciBDb3VuY2lsIG9mIEluZGlhIGlzIGEgc3RhdHV0b3J5IGJvZHkgY3JlYXRlZCBieSBQYXJsaWFtZW50IHRvIHJlZ3VsYXRlICAgYW5kIHJlcHJlc2VudCB0aGUgSW5kaWFuIGJhci4gSXQgcGVyZm9ybXMgdGhlIHJlZ3VsYXRvcnkgZnVuY3Rpb24gYnkgcHJlc2NyaWJpbmcgc3RhbmRhcmRzIG9mICAgcHJvZmVzc2lvbmFsIGNvbmR1Y3QgYW5kIGV0aXF1ZXR0ZSBhbmQgYnkgZXhlcmNpc2luZyBkaXNjaXBsaW5hcnkganVyaXNkaWN0aW9uIG92ZXIgdGhlIGJhci4gICAgIEl0IGFsc28gc2V0cyBzdGFuZGFyZHMgZm9yIGxlZ2FsIGVkdWNhdGlvbiBhbmQgZ3JhbnRzIHJlY29nbml0aW9uIHRvIFVuaXZlcnNpdGllcyB3aG9zZSBkZWdyZWUgaW4gbGF3IHdpbGwgICBzZXJ2ZSBhcyBxdWFsaWZpY2F0aW9uIGZvciBlbnJvbG1lbnQgYXMgYW4gYWR2b2NhdGUuIEluIGFkZGl0aW9uLCBpdCBwZXJmb3JtcyBjZXJ0YWluIHJlcHJlc2VudGF0aXZlICAgZnVuY3Rpb25zIGJ5IHByb3RlY3RpbmcgdGhlIHJpZ2h0cywgcHJpdmlsZWdlcyBhbmQgaW50ZXJlc3RzIG9mIGFkdm9jYXRlcyBhbmQgdGhyb3VnaCB0aGUgY3JlYXRpb24gb2YgICBmdW5kcyBmb3IgcHJvdmlkaW5nIGZpbmFuY2lhbCBhc3Npc3RhbmNlIHRvIG9yZ2FuaXNlIHdlbGZhcmUgc2NoZW1lcyBmb3IgdGhlbS4gICBLbm93bGVkZ2UgQmFzZTogICAgIFRoZSBCYXIgQ291bmNpbCBvZiBJbmRpYSB3YXMgZXN0YWJsaXNoZWQgYnkgUGFybGlhbWVudCB1bmRlciB0aGUgQWR2b2NhdGVzIEFjdCwgMTk2MS4gVGhlIGZvbGxvd2luZyAgIHN0YXR1dG9yeSBmdW5jdGlvbnMgY292ZXIgdGhlIEJhciBDb3VuY2lsJ3MgcmVndWxhdG9yeSBhbmQgcmVwcmVzZW50YXRpdmUgbWFuZGF0ZSBmb3IgdGhlIGxlZ2FsICAgcHJvZmVzc2lvbiBhbmQgbGVnYWwgZWR1Y2F0aW9uIGluIEluZGlhOiAgICAxKSBUbyBsYXkgZG93biBzdGFuZGFyZHMgb2YgcHJvZmVzc2lvbmFsIGNvbmR1Y3QgYW5kIGV0aXF1ZXR0ZSBmb3IgYWR2b2NhdGVzLiAgICAyKSBUbyBsYXkgZG93biBwcm9jZWR1cmUgdG8gYmUgZm9sbG93ZWQgYnkgaXRzIGRpc2NpcGxpbmFyeSBjb21taXR0ZWUgYW5kIHRoZSBkaXNjaXBsaW5hcnkgY29tbWl0dGVlcyAgIG9mIGVhY2ggU3RhdGUgQmFyIENvdW5jaWwuICAgIDMpIFRvIHNhZmVndWFyZCB0aGUgcmlnaHRzLCBwcml2aWxlZ2VzIGFuZCBpbnRlcmVzdHMgb2YgYWR2b2NhdGVzLiAgICA0KSBUbyBwcm9tb3RlIGFuZCBzdXBwb3J0IGxhdyByZWZvcm0uICAgIFNvdXJjZTogIExheG1pa2FudGggNnRoIEVkaXRpb24ucGRmICAgIGh0dHA6Ly93d3cuYmFyY291bmNpbG9maW5kaWEub3JnL2Fib3V0L2Fib3V0LXRoZS1iYXItY291bmNpbC1vZi1pbmRpYS8gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 32,
      "question" : "Which of the following can be considered  as the necessary conditions required for  conducting democratic elections in any  country?  1. Equal right to vote   2. Freedom to contest  3. Free and Fair election process  4. Corporate funding  5. Election held at regular intervals  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgT3B0aW9uIGMgaXMgY29ycmVjdC4gRWxlY3Rpb25zIGNhbiBiZSBoZWxkIGluIG1hbnkgd2F5cy4gRGVtb2NyYXRpYyBjb3VudHJpZXMgaG9sZCBlbGVjdGlvbnMsIGJ1dCBhdCB0aGUgICBzYW1lIHRpbWUsIG1vc3Qgbm9uLWRlbW9jcmF0aWMgY291bnRyaWVzIGFsc28gaG9sZCBzb21lIGtpbmQgb2YgZWxlY3Rpb25zLiBUbyBkaXN0aW5ndWlzaCBiZXR3ZWVuIHRoZSAgIHR3bywgbWluaW11bSBhbmQgbmVjZXNzYXJ5IGNvbmRpdGlvbnMgb2YgYSBkZW1vY3JhdGljIGVsZWN0aW9uIGFyZTogICAgMSkgRXF1YWwgcmlnaHQgdG8gdm90ZTogVGhpcyBtZWFucyBldmVyeW9uZSBzaG91bGQgaGF2ZSBvbmUgdm90ZSBhbmQgZXZlcnkgdm90ZSBzaG91bGQgaGF2ZSBlcXVhbCAgIHZhbHVlLiBIZW5jZSwgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gICAyKSBQYXJ0aWVzIGFuZCBjYW5kaWRhdGVzIHNob3VsZCBiZSBmcmVlIHRvIGNvbnRlc3QgZWxlY3Rpb25zLiBIZW5jZSwgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gICAzKSBFbGVjdGlvbnMgc2hvdWxkIGJlIGNvbmR1Y3RlZCBpbiBhIGZyZWUgYW5kIGZhaXIgbWFubmVyIHdoZXJlIHBlb3BsZSBjYW4gY2hvb3NlIGFzIHRoZXkgcmVhbGx5IHdpc2guICAgSGVuY2UsIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgNCkgRWxlY3Rpb25zIG11c3QgYmUgaGVsZCByZWd1bGFybHkgYWZ0ZXIgZXZlcnkgZmV3IHllYXJzLiBIZW5jZSwgU3RhdGVtZW50IDUgaXMgY29ycmVjdC4gICA1KSBDYW5kaWRhdGUgcHJlZmVycmVkIGJ5IHRoZSBwZW9wbGUgc2hvdWxkIGdldCBlbGVjdGVkLiAgIENvcnBvcmF0ZSBmdW5kaW5nIGlzIG5vdCBhIG1pbmltdW0gY29uZGl0aW9uIHJlcXVpcmVkIGZvciBkZW1vY3JhdGljIGVsZWN0aW9ucy4gRm9yIGZhaXIgZWxlY3Rpb25zLCAgIGNhbmRpZGF0ZXMgc2hvdWxkIGhhdmUgYWNjZXNzIHRvIHB1YmxpYyBmaW5hbmNlIG9yIGFueSBvdGhlciBraW5kIG9mIHB1YmxpYyBhaWQgZHVyaW5nIHRoZSBlbGVjdG9yYWwgICBjYW1wYWlnbiwgd2l0aCBlcXVhbGl0eSBhbW9uZyBjb250ZW5kZXJzLiAgSGVuY2UsIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gICBTb3VyY2U6IE5DRVJUIElYLCBDaGFwdGVyLTMsIEVsZWN0b3JhbCBQb2xpdGljcywgUGcuIDM2LTM3ICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 5 only  ",
        "option3" : "1, 2, 3 and 5 only  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 33,
      "question" : "With reference to All India Services,  Consider the following statements:   1.  Department of Personnel and Training is the  cadre controlling authority for all the three  All India Services.     2.  Both salaries and pensions of members of  All-India services are borne by the states.  Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIExpa2UgaW4gYW55IG90aGVyIGZlZGVyYXRpb24sIHRoZSBDZW50cmUgYW5kIHRoZSBzdGF0ZXMgYWxzbyBoYXZlIHRoZWlyIHNlcGFyYXRlIHB1YmxpYyBzZXJ2aWNlcyBjYWxsZWQgYXMgICB0aGUgQ2VudHJhbCBTZXJ2aWNlcyBhbmQgdGhlIFN0YXRlIFNlcnZpY2VzIHJlc3BlY3RpdmVseS4gSW4gYWRkaXRpb24sIHRoZXJlIGFyZSBhbGwtSW5kaWEgc2VydmljZXMtSUFTLCBJUFMgICBhbmQgSUZTLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IERlcGFydG1lbnQgb2YgUGVyc29ubmVsIGFuZCBUcmFpbmluZyB1bmRlciBUaGUgTWluaXN0cnkgb2YgUGVyc29ubmVsLCBQdWJsaWMgICBHcmlldmFuY2VzIGFuZCBQZW5zaW9ucyBpcyB0aGUgY2FkcmUgY29udHJvbGxpbmcgYXV0aG9yaXR5IGZvciB0aGUgSW5kaWFuIEFkbWluaXN0cmF0aXZlIFNlcnZpY2UsIFRoZSAgIE1pbmlzdHJ5IG9mIEhvbWUgQWZmYWlycyBpcyB0aGUgY2FkcmUgY29udHJvbGxpbmcgYXV0aG9yaXR5IGZvciB0aGUgSW5kaWFuIFBvbGljZSBTZXJ2aWNlIGFuZCB0aGUgTWluaXN0cnkgICBvZiBFbnZpcm9ubWVudCwgRm9yZXN0IGFuZCBDbGltYXRlIENoYW5nZSBmb3IgdGhlIEZvcmVzdCBTZXJ2aWNlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFNhbGFyaWVzIGFuZCBwZW5zaW9ucyBvZiBtZW1iZXJzIG9mIEFsbC1JbmRpYSBzZXJ2aWNlcyBhcmUgbWV0IGJ5IHRoZSAgICBzdGF0ZXMuICAgVGhlIGFsbC1JbmRpYSBzZXJ2aWNlcyBhcmUgY29udHJvbGxlZCBqb2ludGx5IGJ5IHRoZSBDZW50cmFsIGFuZCBzdGF0ZSBnb3Zlcm5tZW50cy4gVGhlIHVsdGltYXRlIGNvbnRyb2wgICBsaWVzIHdpdGggdGhlIENlbnRyYWwgZ292ZXJubWVudCB3aGlsZSB0aGUgaW1tZWRpYXRlIGNvbnRyb2wgaXMgdmVzdGVkIGluIHRoZSBzdGF0ZSBnb3Zlcm5tZW50cy4gICBTb3VyY2U6IExheG1pa2FudCA2dGggRWRpdGlvbi5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 34,
      "question" : "In the context of State Public Service  Commission (SPSC) in India, consider the  following statements:   1.  The chairman or a member of an SPSC is  removed from office by the governor of the  state.   2.  The chairman of a SPSC is eligible for  appointment as the chairman of any other  SPSC.   3.  A member of a SPSC is eligible for  reappointment to the same SPSC.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgU3RhdGUgUHVibGljIFNlcnZpY2UgQ29tbWlzc2lvbiBjb25zaXN0cyBvZiBhIGNoYWlybWFuIGFuZCBvdGhlciBtZW1iZXJzIGFwcG9pbnRlZCBieSB0aGUgZ292ZXJub3IgICBvZiB0aGUgc3RhdGUuIFRoZSBjaGFpcm1hbiBhbmQgbWVtYmVycyBvZiB0aGUgQ29tbWlzc2lvbiBob2xkIG9mZmljZSBmb3IgYSB0ZXJtIG9mIHNpeCB5ZWFycyBvciB1bnRpbCAgIHRoZXkgYXR0YWluIHRoZSBhZ2Ugb2YgNjIgeWVhcnMsIHdoaWNoZXZlciBpcyBlYXJsaWVyIChpbiB0aGUgY2FzZSBvZiBVUFNDLCB0aGUgYWdlIGxpbWl0IGlzIDY1IHllYXJzKS4gICBIb3dldmVyLCB0aGV5IGNhbiByZWxpbnF1aXNoIHRoZWlyIG9mZmljZXMgYXQgYW55IHRpbWUgYnkgYWRkcmVzc2luZyB0aGVpciByZXNpZ25hdGlvbiB0byB0aGUgZ292ZXJub3IuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIGNoYWlybWFuIG9yIGEgbWVtYmVyIG9mIGEgU1BTQyBjYW4gYmUgcmVtb3ZlZCBmcm9tIG9mZmljZSBieSB0aGUgICBwcmVzaWRlbnQgKG5vdCBnb3Zlcm5vcikgb25seSBpbiB0aGUgbWFubmVyIGFuZCBvbiB0aGUgZ3JvdW5kcyBtZW50aW9uZWQgaW4gdGhlIENvbnN0aXR1dGlvbi4gICBUaGVyZWZvcmUsIHRoZXkgZW5qb3kgdGhlIHNlY3VyaXR5IG9mIHRlbnVyZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIGNoYWlybWFuIG9mIGEgU1BTQyAob24gY2Vhc2luZyB0byBob2xkIG9mZmljZSkgaXMgZWxpZ2libGUgZm9yIGFwcG9pbnRtZW50IGFzICAgdGhlIGNoYWlybWFuIG9yIGEgbWVtYmVyIG9mIHRoZSBVUFNDIG9yIGFzIHRoZSBjaGFpcm1hbiBvZiBhbnkgb3RoZXIgU1BTQywgYnV0IG5vdCBmb3IgYW55IG90aGVyICAgZW1wbG95bWVudCB1bmRlciB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBvciBhIHN0YXRlLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBBIG1lbWJlciBvZiBhIFNQU0MgaXMgZWxpZ2libGUgZm9yIHJlYXBwb2ludG1lbnQgdG8gdGhlIHNhbWUgU1BTQy4gQSBtZW1iZXIgb2YgICBhIFNQU0MgKG9uIGNlYXNpbmcgdG8gaG9sZCBvZmZpY2UpIGlzIGVsaWdpYmxlIGZvciBhcHBvaW50bWVudCBhcyB0aGUgY2hhaXJtYW4gb3IgYSBtZW1iZXIgb2YgdGhlIFVQU0MsIG9yICAgYXMgdGhlIGNoYWlybWFuIG9mIHRoYXQgU1BTQyBvciBhbnkgb3RoZXIgU1BTQywgYnV0IG5vdCBmb3IgYW55IG90aGVyIGVtcGxveW1lbnQgdW5kZXIgdGhlICAgR292ZXJubWVudCBvZiBJbmRpYSBvciBhIHN0YXRlLiAgICBTb3VyY2U6IExheG1pa2FudGggNnRoIEVkaXRpb24ucGRmICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 35,
      "question" : "With respect to Indian Polity, on which  among the following matters is the State Public  Service Commission (SPSC) consulted by the  state government?   1.  It is consulted by the state government in all  disciplinary matters related to reduction to  lower service or rank.   2. It is consulted for the award of a pension in  respect of an injury sustained by a person  while serving under the state government.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcnRpY2xlcyAoaS5lLiwgMzE1IHRvIDMyMyBpbiBQYXJ0IFhJVikgb2YgdGhlIENvbnN0aXR1dGlvbiBkZWFsIHdpdGggdGhlIGNvbXBvc2l0aW9uLCBhcHBvaW50bWVudCBhbmQgICByZW1vdmFsIG9mIG1lbWJlcnMsIHBvd2VyIGFuZCBmdW5jdGlvbnMgYW5kIGluZGVwZW5kZW5jZSBvZiBhIFN0YXRlIFB1YmxpYyBTZXJ2aWNlIENvbW1pc3Npb24gICAoU1BTQykuICAgIEEgU1BTQyBpcyBjb25zdWx0ZWQgb24gdGhlIGZvbGxvd2luZyBtYXR0ZXJzIHJlbGF0ZWQgdG8gcGVyc29ubmVsIG1hbmFnZW1lbnQ6ICAgICgxKSBBbGwgbWF0dGVycyByZWxhdGluZyB0byBtZXRob2RzIG9mIHJlY3J1aXRtZW50IHRvIGNpdmlsIHNlcnZpY2VzIGFuZCBmb3IgY2l2aWwgcG9zdHMuICAgICgyKSBUaGUgcHJpbmNpcGxlcyB0byBiZSBmb2xsb3dlZCBpbiBtYWtpbmcgYXBwb2ludG1lbnRzIHRvIEdyb3VwIEEgYW5kIEIgc2VydmljZXMgYW5kIHBvc3RzIGFuZCBpbiAgIG1ha2luZyBwcm9tb3Rpb25zIGFuZCB0cmFuc2ZlcnMgZnJvbSBvbmUgc2VydmljZSB0byBhbm90aGVyLiAgICAoMykgVGhlIHN1aXRhYmlsaXR5IG9mIGNhbmRpZGF0ZXMgZm9yIGFwcG9pbnRtZW50cyB0byBjaXZpbCBzZXJ2aWNlcyBhbmQgcG9zdHM7IGZvciBwcm9tb3Rpb25zIGFuZCB0cmFuc2ZlcnMgICBmcm9tIG9uZSBzZXJ2aWNlIGFub3RoZXI7IGFuZCBhcHBvaW50bWVudHMgYnkgdHJhbnNmZXIgb3IgZGVwdXRhdGlvbi4gVGhlIGNvbmNlcm5lZCBkZXBhcnRtZW50cyBtYWtlICAgcmVjb21tZW5kYXRpb25zIGZvciBwcm9tb3Rpb24gYW5kIHJlcXVlc3QgdGhlIFNQU0MgdG8gcmF0aWZ5IHRoZW0uICAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICAoNCkgQWxsIGRpc2NpcGxpbmFyeSBtYXR0ZXJzIGFmZmVjdGluZyBhIHBlcnNvbiBzZXJ2aW5nIHVuZGVyIHRoZSBnb3Zlcm5tZW50IG9mIHRoZSBzdGF0ZSBpbiBhIGNpdmlsICAgY2FwYWNpdHkgaW5jbHVkaW5nIG1lbW9yaWFscyBwZXRpdGlvbnMgcmVsYXRpbmcgdG8gc3VjaCBtYXR0ZXJzLiAgICAgVGhlc2UgaW5jbHVkZTogICAtIENlbnN1cmUgKHNldmVyZSBkaXNhcHByb3ZhbCkgLSBXaXRoaG9sZGluZyBvZiBpbmNyZW1lbnRzICAgIC0gV2l0aGhvbGRpbmcgb2YgcHJvbW90aW9ucyAgICAgLSBSZWNvdmVyeSBvZiBwZWN1bmlhcnkgbG9zcyAgICAtIFJlZHVjdGlvbiB0byBsb3dlciBzZXJ2aWNlIG9yIHJhbmsgKGRlbW90aW9uKSAtIENvbXB1bHNvcnkgcmV0aXJlbWVudCAoSGVuY2UsIFN0YXRlbWVudCAxIGlzICAgY29ycmVjdCkgICAgLSBSZW1vdmFsIGZyb20gc2VydmljZSAgICAgLSBEaXNtaXNzYWwgZnJvbSBzZXJ2aWNlICAgICAoNSkgQW55IGNsYWltIGZvciByZWltYnVyc2VtZW50IG9mIGxlZ2FsIGV4cGVuc2VzIGluY3VycmVkIGJ5IGNpdmlsIHNlcnZhbnQgaW4gZGVmZW5kaW5nIGxlZ2FsIHByb2NlZWRpbmdzICAgaW5zdGl0dXRlZCBhZ2FpbiBoaW0gaW4gcmVzcGVjdCBvZiBhY3RzIGRvbmUgaW4gdGhlIGV4ZWN1dGlvbiBvZiBoaXMgb2ZmaWNpYWwgZHV0eS4gICAgKDYpIEFueSBjbGFpbSBmb3IgdGhlIGF3YXJkIG9mIGEgcGVuc2lvbiBpbiByZXNwZWN0IG9mIGluanVyeSBzdXN0YWluZWQgYnkgYSBwZXJzb24gd2hpbGUgc2VydmluZyB1bmRlciAgIHRoZSBnb3Zlcm5tZW50IHRoZSBzdGF0ZSAoSGVuY2UsIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QpICAgICg3KSBBbnkgb3RoZXIgbWF0dGVyIHJlbGF0ZWQgdG8gdGhlIHBlcnNvbm5lbCBtYW5hZ2VtZW50LiAgICBTb3VyY2U6IExheG1pa2FudCA2dGggRWRpdGlvbi5wZGYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 36,
      "question" : "In the context of orders issued by the  Election Commission of India (ECI), consider  the following statements:  1.  The ballot papers and EVMs will carry the  picture of the candidate with his/her name  and party symbol for all the elections  conducted by the Election Commission of  India.  2.  The persons in jail or in police custody are  allowed to contest the elections conducted  by the Election Commission of India.  3.  The persons in jail or in police custody are  allowed to vote in the elections conducted  by the Election Commission of India.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBFbGVjdGlvbiBDb21taXNzaW9uIG9mIEluZGlhIGlzIGFuIGF1dG9ub21vdXMgY29uc3RpdHV0aW9uYWwgYXV0aG9yaXR5IHJlc3BvbnNpYmxlIGZvciAgIGFkbWluaXN0ZXJpbmcgVW5pb24gYW5kIFN0YXRlIGVsZWN0aW9uIHByb2Nlc3NlcyBpbiBJbmRpYS4gVGhlIGJvZHkgYWRtaW5pc3RlcnMgZWxlY3Rpb25zIHRvIHRoZSBMb2sgICBTYWJoYSwgUmFqeWEgU2FiaGEsIFN0YXRlIExlZ2lzbGF0aXZlIEFzc2VtYmxpZXMgaW4gSW5kaWEsIGFuZCB0aGUgb2ZmaWNlcyBvZiB0aGUgUHJlc2lkZW50IGFuZCBWaWNlICAgUHJlc2lkZW50IGluIHRoZSBjb3VudHJ5LiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gYW4gRWxlY3Rpb24gQ29tbWlzc2lvbiBvcmRlciwgaW4gYW55IGVsZWN0aW9uIGJlaW5nIGhlbGQgYWZ0ZXIgTWF5ICAgMSwgMjAxNSwgdGhlIGJhbGxvdCBwYXBlcnMgYW5kIEVWTXMgd2lsbCBjYXJyeSB0aGUgcGljdHVyZSBvZiB0aGUgY2FuZGlkYXRlIHdpdGggaGlzIG9yIGhlciBuYW1lIGFuZCAgIHBhcnR5IHN5bWJvbCB0byBhdm9pZCBjb25mdXNpb24gYW1vbmcgdGhlIGVsZWN0b3JhdGVzIGluIGNvbnN0aXR1ZW5jaWVzIHdoZXJlIG5hbWVzYWtlcyBhcmUgICBjb250ZXN0aW5nLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBSZXByZXNlbnRhdGlvbiBvZiB0aGUgUGVvcGxlIEFjdCwgMTk1MSBwcm92aWRlcyBmb3IgdGhhdCBieSByZWFzb24gb2YgdGhlICAgcHJvaGliaXRpb24gdG8gdm90ZSAoZWl0aGVyIGR1ZSB0byBpbiBqYWlsIG9yIGluIHBvbGljZSBjdXN0b2R5KSwgYSBwZXJzb24gd2hvc2UgbmFtZSBoYXMgYmVlbiBlbnRlcmVkIGluICAgdGhlIGVsZWN0b3JhbCByb2xsIHNoYWxsIG5vdCBjZWFzZSB0byBiZSBhbiBlbGVjdG9yLiBDb25zZXF1ZW50bHksIHRoZSBwZXJzb25zIGluIGphaWwgb3IgaW4gcG9saWNlIGN1c3RvZHkgICBhcmUgYWxsb3dlZCB0byBjb250ZXN0IHRoZSBlbGVjdGlvbnMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBBY2NvcmRpbmcgdG8gVGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxLSBUaGUgcGVyc29ucyBpbiBqYWlsIG9yICAgaW4gcG9saWNlIGN1c3RvZHkgYXJlIG5vdCBhbGxvd2VkIHRvIHZvdGUgaW4gdGhlIGVsZWN0aW9ucyBjb25kdWN0ZWQgYnkgRWxlY3Rpb24gQ29tbWlzc2lvbiBvZiBJbmRpYS4gICAgU291cmNlOiBMYXhtaWthbnQgNnRoIEVkaXRpb24ucGRmICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 37,
      "question" : "Which of the following political parties  are recognised as the National political party in  India?   1. Telangana Rashtra Samiti (TRS)     2. Aam Aadmi Party (AAP)                       3. Janta Dal (United) (JDU)                       4. All India Trinamool Congress (AITC)    How many pairs given above are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgcGFydHkgdGhhdCBzZWN1cmVzIGF0IGxlYXN0IHNpeCBwZXIgY2VudCBvZiB0aGUgdG90YWwgdm90ZXMgaW4gTG9rIFNhYmhhIGVsZWN0aW9ucyBvciBBc3NlbWJseSBlbGVjdGlvbnMgaW4gICBmb3VyIFN0YXRlcyBhbmQgd2lucyBhdCBsZWFzdCBmb3VyIHNlYXRzIGluIHRoZSBMb2sgU2FiaGEgaXMgcmVjb2duaXNlZCBhcyBhIG5hdGlvbmFsIHBhcnR5LiBBY2NvcmRpbmcgdG8gICB0aGlzIGNsYXNzaWZpY2F0aW9uIGFuZCBiYXNlZCBvbiAyMDE5IEdlbmVyYWwgRWxlY3Rpb24gdGhlcmUgYXJlIGVpZ2h0IHJlY29nbmlzZWQgbmF0aW9uYWwgcGFydGllcyBpbiB0aGUgICBjb3VudHJ5LiBUaGV5IGFyZTogQWxsIEluZGlhIFRyaW5hbW9vbCBDb25ncmVzcyAoQUlUQyksIEJhaHVqYW4gU2FtYWogUGFydHkgKEJTUCksIEJoYXJhdGl5YSBKYW5hdGEgICBQYXJ0eSAoQkpQKSwgQ29tbXVuaXN0IFBhcnR5IG9mIEluZGlhIChDUEkpLCBDb21tdW5pc3QgUGFydHkgb2YgSW5kaWEgLSBNYXJ4aXN0IChDUEktTSksIEluZGlhbiBOYXRpb25hbCAgIENvbmdyZXNzIChJTkMpLCBOYXRpb25hbGlzdCBDb25ncmVzcyBQYXJ0eSAoTkNQKSBhbmQgTmF0aW9uYWwgUGVvcGxlJ3MgUGFydHkgKE5QUCkuICAgIE9wdGlvbiAxIGlzIGluY29ycmVjdDogVGVsYW5nYW5hIFJhc2h0cmEgU2FtaXRpIChUUlMpIGlzIGEgU3RhdGUgUGFydHkuICAgIE9wdGlvbiAyIGlzIGluY29ycmVjdDogQWFtIEFhZG1pIFBhcnR5IChBQVApIGlzIGEgU3RhdGUgUGFydHkuICAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBPcHRpb24gMyBpcyBpbmNvcnJlY3Q6IEphbnRhIERhbCAoVW5pdGVkKSAoSkRVKSBpcyBhIFN0YXRlIFBhcnR5LiAgICBPcHRpb24gNCBpcyBjb3JyZWN0OiBBbGwgSW5kaWEgVHJpbmFtb29sIENvbmdyZXNzIChBSVRDKSBpcyBhIG5hdGlvbmFsIHBhcnR5LiAgICBTb3VyY2U6ICBMYXhtaWthbnQgNnRoIEVkaXRpb24ucGRmICAgIGh0dHBzOi8vZWNpLmdvdi5pbi9hYm91dC9hYm91dC1lY2kgaGUtZnVuY3Rpb25zLWVsZWN0b3JhbC1zeXN0ZW0tb2YtaW5kaWEtcjIvI2VsQ29udGVudCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one option is correct   ",
        "option2" : "Only two options are correct   ",
        "option3" : "Only three options are correct   ",
        "option4" : "All four options are correct    "
      }
    },
    {
      "index" : 38,
      "question" : "Which among the following statement is  correct for a political party which gets  derecognized by the Election Commission of  India (ECI)?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIDIwMTYgdGhlIEVDIGFtZW5kZWQgaXRzIHJ1bGVzLCB3aGVyZWJ5IG5hdGlvbmFsIGFuZCBzdGF0ZSBwYXJ0eSBzdGF0dXMgb2YgcG9saXRpY2FsIHBhcnRpZXMgYXJlIHRvIGJlICAgcmV2aWV3ZWQgZXZlcnkgMTAgeWVhcnMgaW5zdGVhZCBvZiBmaXZlLiAgQSAnc3RhdGUgcGFydHknIGlzIGVudGl0bGVkIHRvIGV4Y2x1c2l2ZSBhbGxvdG1lbnQgb2YgaXRzIHJlc2VydmVkICAgc3ltYm9sIHRvIGl0cyBjYW5kaWRhdGVzIGluIHRoZSBzdGF0ZXMgd2hlcmUgaXQgaXMgcmVjb2duaXNlZCwgYW5kIGEgY2FuZGlkYXRlIG9mIGEgbmF0aW9uYWwgcGFydHkgY2FuIHVzZSAgIHRoZSByZXNlcnZlZCBzeW1ib2wgdGhyb3VnaG91dCBJbmRpYS4gICBPcHRpb24gYSBpcyBjb3JyZWN0OiBJZiB0aGUgcGFydGllcyBnZXQgZGUtcmVjb2duaXRpb24gdGhleSB3b3VsZCBiZSBjb25zaWRlcmVkICJyZWdpc3RlcmVkIGJ1dCBub3QgYSAgIHJlY29nbmlzZWQgcGFydHkuIiBUaGV5IGFyZSBib3VuZCB0byBsb3NlIGZhY2lsaXRpZXMgYW5kIGNvbmNlc3Npb25zIGhpdGhlcnRvIGVuam95ZWQgYnkgdGhlbSBpbiB0aG9zZSAgIHN0YXRlcyB3aGVyZSB0aGVpciByZWNvZ25pdGlvbiB3YXMgd2l0aGRyYXduLiBUaGV5IGNvdWxkIG5vdCBwYXJ0aWNpcGF0ZSBpbiBvZmZpY2lhbCBtZWV0aW5ncyBvZiB0aGUgICByZWNvZ25pc2VkIHBhcnRpZXMgY29udmVuZWQgYnkgdGhlIEVDIG9yIHRoZSBTdGF0ZSBFbGVjdGlvbiBEZXBhcnRtZW50LCBhbmQgY291bGQgbm90IHNlZWsgdm90ZXMgICB0aHJvdWdoIHRoZSBzdGF0ZS1vd25lZCBEb29yZGFyc2hhbiBvciBBbGwgSW5kaWEgUmFkaW8gZHVyaW5nIGVsZWN0aW9ucy4gICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0OiAgU3VjaCBwb2xpdGljYWwgcGFydGllcyBhcmUgbm90IGVudGl0bGVkIHRvIGV4Y2x1c2l2ZSBhbGxvdG1lbnQgb2YgaXRzIHJlc2VydmVkICAgc3ltYm9sIHRvIGl0cyBjYW5kaWRhdGVzLiAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IFVuZGVyIHRoZSBQYXJ0LUlWLUEgb2YgdGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxLCAocmVsYXRpbmcgdG8gICByZWdpc3RyYXRpb24gb2YgcG9saXRpY2FsIHBhcnRpZXMpLCBhIHBvbGl0aWNhbCBwYXJ0eSBpcyByZXF1aXJlZCB0byBnZXQgaXRzZWxmIHJlZ2lzdGVyZWQgd2l0aCB0aGUgRWxlY3Rpb24gICBDb21taXNzaW9uIG9mIEluZGlhLiBIb3dldmVyLCB0aGUgRUNJIGNhbiByZWdpc3RlciBhIHBvbGl0aWNhbCBwYXJ0eSBidXQgY2Fubm90IGRlcmVnaXN0ZXIgaXQuICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogU3VjaCBwb2xpdGljYWwgcGFydGllcyBhcmUgbm90IGJhcnJlZCBmcm9tIHJlY2VpdmluZyBkb25hdGlvbnMgZnJvbSBmb3JlaWduICAgY29tcGFuaWVzIGJ5IHRoZSBFQ0kuICAgIFNvdXJjZTogTGF4bWlrYW50IDZ0aCBFZGl0aW9uLnBkZiAgICBodHRwczovL3d3dy5idXNpbmVzcy1zdGFuZGFyZC5jb20vYXJ0aWNsZS9wdGktc3Rvcmllcy9lYy1kZWZlcnMtbW92ZS10by1kZS1yZWNvZ25pc2UtbmNwLWNwaS0gIGFuZC10bWMtYXMtbmF0aW9uYWwtcGFydGllcy0xMTkxMTIwMDE1MjFfMS5odG1sICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Such political parties are considered as   registered but not a recognised parties by   the ECI.   ",
        "option2" : " Such political parties get entitled to   exclusive allotment of reserved symbols to   its candidates.   ",
        "option3" : "Such political parties will get deregistered   from ECI list, if they fail to get recognition   within 5 years.   ",
        "option4" : "Such political parties are barred from   receiving donations from foreign companies   by the ECI.   "
      }
    },
    {
      "index" : 39,
      "question" : "The State does not have a constitutional  obligation to pay compensation in the  acquisition of private property except in a few  cases. They are:   1.  When the State acquires the property of a  minority educational institution.   2.  When the State acquires the property of a  religious institution registered as a trust.   3.  When the State acquires the land held by a  person under his personal cultivation within  the statutory ceiling limits.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaG91Z2ggdGhlIEZ1bmRhbWVudGFsIFJpZ2h0IHRvIFByb3BlcnR5IHVuZGVyIFBhcnQgSUlJIGhhcyBiZWVuIGFib2xpc2hlZCwgdGhlIFBhcnQgSUlJIHN0aWxsIGNhcnJpZXMgdHdvICAgcHJvdmlzaW9ucyB3aGljaCBwcm92aWRlIGZvciB0aGUgZ3VhcmFudGVlZCByaWdodCB0byBjb21wZW5zYXRpb24gaW4gY2FzZSBvZiBhY3F1aXNpdGlvbiBvciByZXF1aXNpdGlvbiBvZiAgIHRoZSBwcml2YXRlIHByb3BlcnR5IGJ5IHRoZSBzdGF0ZS4gICAgIFRoZXNlIHR3byBjYXNlcyB3aGVyZSBjb21wZW5zYXRpb24gaGFzIHRvIGJlIHBhaWQgYXJlOiAgICAgKGEpIFdoZW4gdGhlIFN0YXRlIGFjcXVpcmVzIHRoZSBwcm9wZXJ0eSBvZiBhIG1pbm9yaXR5IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIChBcnRpY2xlIDMwKSAoSGVuY2UgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0KTsgYW5kICAgICAoYikgV2hlbiB0aGUgU3RhdGUgYWNxdWlyZXMgdGhlIGxhbmQgaGVsZCBieSBhIHBlcnNvbiB1bmRlciBoaXMgcGVyc29uYWwgY3VsdGl2YXRpb24gYW5kIHRoZSBsYW5kIGlzICAgd2l0aGluIHRoZSBzdGF0dXRvcnkgY2VpbGluZyBsaW1pdHMgKEFydGljbGUgMzEgQSkgKEhlbmNlIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QpLiAgICAgVGhlIGZpcnN0IHByb3Zpc2lvbiB3YXMgYWRkZWQgYnkgdGhlIDQ0dGggQW1lbmRtZW50IEFjdCAoMTk3OCksIHdoaWxlIHRoZSBzZWNvbmQgcHJvdmlzaW9uIHdhcyBhZGRlZCAgIGJ5IHRoZSAxN3RoIEFtZW5kbWVudCBBY3QgKDE5NjQpLiAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGVyZSBpcyBubyBjb25zdGl0dXRpb25hbCBvYmxpZ2F0aW9uIHRvIHBheSBjb21wZW5zYXRpb24gd2hlbiB0aGUgU3RhdGUgICBhY3F1aXJlcyB0aGUgcHJvcGVydHkgb2YgYSByZWxpZ2lvdXMgaW5zdGl0dXRpb24gcmVnaXN0ZXJlZCBhcyBhIHRydXN0LiAgICBTb3VyY2U6IExheG1pa2FudCA2dGggRWRpdGlvbi5wZGYgcGFnZSAxMTUgICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "All of the above     "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the rights and  Liabilities of the Government, consider the  following statements:    1.  All property and assets that were vested in  an Indian princely state, before the  commencement of the Constitution,  became vested in the Union or  corresponding state.   2.  All minerals found within the territorial  waters of India, are vested in the  corresponding coastal state of India.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBbGwgcHJvcGVydHkgYW5kIGFzc2V0cyB0aGF0IHdlcmUgdmVzdGVkIGluIHRoZSBEb21pbmlvbiBvZiBJbmRpYSBvciBhIHByb3ZpbmNlIG9yICAgYW4gSW5kaWFuIHByaW5jZWx5IHN0YXRlLCBiZWZvcmUgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGUgcHJlc2VudCBDb25zdGl0dXRpb24sIGJlY2FtZSB2ZXN0ZWQgaW4gdGhlICAgVW5pb24gb3IgdGhlIGNvcnJlc3BvbmRpbmcgc3RhdGUuICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEFsbCBsYW5kcywgbWluZXJhbHMgYW5kIG90aGVyIHRoaW5ncyBvZiB2YWx1ZSB1bmRlciB0aGUgd2F0ZXJzIG9mIHRoZSBvY2VhbiAgIHdpdGhpbiB0aGUgdGVycml0b3JpYWwgd2F0ZXJzIG9mIEluZGlhLCB0aGUgY29udGluZW50YWwgc2hlbGYgb2YgSW5kaWEgYW5kIHRoZSBleGNsdXNpdmUgZWNvbm9taWMgem9uZSBvZiAgIEluZGlhIHZlc3RzIGluIHRoZSBVbmlvbiAobm90IGlzIHN0YXRlIGdvdmVybm1lbnQpLiBIZW5jZSwgYSBzdGF0ZSBuZWFyIHRoZSBvY2VhbiBjYW5ub3QgY2xhaW0gICBqdXJpc2RpY3Rpb24gb3ZlciB0aGVzZSB0aGluZ3MuICAgICBJbmRpYSdzIHRlcnJpdG9yaWFsIHdhdGVycyBleHRlbmQgdG8gYSBkaXN0YW5jZSBvZiAxMiBuYXV0aWNhbCBtaWxlcyBmcm9tIHRoZSBhcHByb3ByaWF0ZSBiYXNlIGxpbmUuIFNpbWlsYXJseSwgICBJbmRpYSdzIGV4Y2x1c2l2ZSBlY29ub21pYyB6b25lIGV4dGVuZHMgdXB0byAyMDAgbmF1dGljYWwgbWlsZXMuICAgICBTb3VyY2U6ICBMYXhtaWthbnQgNnRoIEVkaXRpb24ucGRmICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 41,
      "question" : "In the context of Indian Polity, consider  the following statements:   1.  Governors cannot be sued for their official  acts during the term of their office or  thereafter.   2.  The Constitution does not grant any  immunity to the ministers for their personal  as well as official acts.   3.  The judicial officers enjoy immunity from  any liability in respect of their official acts.   Which of the statement(s) given above is /are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgZ292ZXJub3JzIGNhbm5vdCBiZSBzdWVkIGR1cmluZyB0aGUgdGVybSBvZiB0aGVpciBvZmZpY2Ugb3IgdGhlcmVhZnRlciwgZm9yICAgYW55IGFjdCBkb25lIGJ5IHRoZW0gaW4gdGhlIGV4ZXJjaXNlIGFuZCBwZXJmb3JtYW5jZSBvZiB0aGVpciBvZmZpY2lhbCBwb3dlcnMgYW5kIGR1dGllcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IGdyYW50IGFueSBpbW11bml0eSB0byB0aGUgbWluaXN0ZXJzIGZvciB0aGVpciAgIG9mZmljaWFsIGFjdHMuIEJ1dCwgc2luY2UgdGhleSBhcmUgbm90IHJlcXVpcmVkIHRvIGNvdW50ZXJzaWduIHRoZSBvZmZpY2lhbCBhY3RzIG9mIHRoZSBwcmVzaWRlbnQgYW5kIHRoZSAgIGdvdmVybm9ycywgdGhleSBhcmUgbm90IGxpYWJsZSBpbiB0aGUgY291cnRzIGZvciB0aG9zZSBhY3RzLiBUaGUgbWluaXN0ZXJzIGRvIG5vdCBlbmpveSBhbnkgaW1tdW5pdHkgZm9yICAgdGhlaXIgcGVyc29uYWwgYWN0cywgYW5kIGNhbiBiZSBzdWVkIGZvciBjcmltZXMgYXMgd2VsbCBhcyB0b3J0cyBpbiB0aGUgb3JkaW5hcnkgY291cnRzIGxpa2UgY29tbW9uICAgY2l0aXplbnMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIGp1ZGljaWFsIG9mZmljZXJzIGVuam95IGltbXVuaXR5IGZyb20gYW55IGxpYWJpbGl0eSBpbiByZXNwZWN0IG9mIHRoZWlyICAgb2ZmaWNpYWwgYWN0cyBhbmQgaGVuY2UsIGNhbm5vdCBiZSBzdWVkLiBUaGUgSnVkaWNpYWwgT2ZmaWNlcnMgUHJvdGVjdGlvbiBBY3QgKDE4NTApIGxheXMgZG93biB0aGF0LCAnbm8gICBqdWRnZSwgbWFnaXN0cmF0ZSwganVzdGljZSBvZiBwZWFjZSwgY29sbGVjdG9yIG9yIG90aGVyIHBlcnNvbiBhY3RpbmcganVkaWNpYWxseSBzaGFsbCBiZSBsaWFibGUgdG8gYmUgc3VlZCBpbiAgIGFueSBjaXZpbCBjb3VydCBmb3IgYW55IGFjdCBkb25lIGJ5IGhpbSBpbiB0aGUgZGlzY2hhcmdlIG9mIGhpcyBvZmZpY2lhbCBkdXR5Jy4gICAgU291cmNlOiBNLiBMYXhtaWthbnQsIENoYXB0ZXItNjcsIFJpZ2h0cyBhbmQgTGlhYmlsaXRpZXMgb2YgdGhlIEdvdmVybm1lbnQgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to Right to Information  (RTI), consider the following statements:  1.  Applicants who are below the poverty line  are exempt from payment of fees for filing  RTI applications.  2.  Any person irrespective of citizenship have  the right to seek information under the  Right to Information Act, 2005.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIFJpZ2h0IHRvIEluZm9ybWF0aW9uIEFjdCwgMjAwNSBwcmVzY3JpYmVzIHRoYXQgYW4gUlRJIGFwcGxpY2FudCBpcyBlbnRpdGxlZCB0byAgIGJlIGNoYXJnZWQgb25seSBzdWNoIGZlZXMgYXMgYXJlIHJlYXNvbmFibGUuIEF0IHByZXNlbnQsIHRoZSBmZWUgZm9yIHJlcXVlc3RpbmcgaW5mb3JtYXRpb24gdGhyb3VnaCBhbiAgIFJUSSBhcHBsaWNhdGlvbiBmcm9tIHRoZSBDZW50cmFsIFB1YmxpYyBJbmZvcm1hdGlvbiBPZmZpY2VycyBvZiBDZW50cmFsIHB1YmxpYyBhdXRob3JpdGllcyBpcyBScy4xMC8uICAgQXBwbGljYW50cyB3aG8gYXJlIGJlbG93IHRoZSBwb3ZlcnR5IGxpbmUgYXJlIGV4ZW1wdCBmcm9tIHBheW1lbnQgZnJvbSBSVEkgZmVlIG9uIHByb2R1Y3Rpb24gb2YgdGhlICAgQlBMIGNlcnRpZmljYXRlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE9ubHkgY2l0aXplbnMgb2YgSW5kaWEgaGF2ZSB0aGUgcmlnaHQgdG8gc2VlayBpbmZvcm1hdGlvbiB1bmRlciB0aGUgcHJvdmlzaW9ucyAgIG9mIFJpZ2h0IHRvIEluZm9ybWF0aW9uIEFjdCwgMjAwNS4gICAgU291cmNlOiBodHRwczovL3d3dy50aHlyaWdodHRvaW5mb3JtYXRpb24uY29tLzIwMTkvMDIvMTQvZmVlcy11bmRlci10aGUtcmlnaHQtdG8taW5mb3JtYXRpb24tICBhY3QtMjAwNS8gICBodHRwczovL3dibGMuZ292LmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvUm9sZSUyMG9mJTIwUElPLnBkZiAgICBodHRwOi8vbW9zcGkubmljLmluL2ZhcS1yZWxhdGVkLXJ0aS1tYXR0ZXJzICAgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9uZXdzL3BvbGl0aWNzLWFuZC1uYXRpb24vbnJpcy1jYW5ub3QtZmlsZS1ydGktICBhcHBsaWNhdGlvbnMvYXJ0aWNsZXNob3cvNjUzMjI2MjAuY21zP2Zyb209bWRyICAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to the Election  Commission of India, which of the following  statements are correct?   1.  The two posts of election commissioners  were abolished in 1990.   2.  The chief election commissioner and the  two other election commissioners have  equal powers and receive an equal salary.   3. The Constitution has debarred the retiring  election commissioners from any further  appointment by the government.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBpcyBhIHBlcm1hbmVudCBhbmQgYW4gaW5kZXBlbmRlbnQgYm9keSBlc3RhYmxpc2hlZCBieSB0aGUgQ29uc3RpdHV0aW9uIG9mICAgSW5kaWEgZGlyZWN0bHkgdG8gZW5zdXJlIGZyZWUgYW5kIGZhaXIgZWxlY3Rpb25zIGluIHRoZSBjb3VudHJ5LiBBcnRpY2xlIDMyNCBvZiB0aGUgQ29uc3RpdHV0aW9uIHByb3ZpZGVzICAgdGhhdCB0aGUgcG93ZXIgb2Ygc3VwZXJpbnRlbmRlbmNlLCBkaXJlY3Rpb24gYW5kIGNvbnRyb2wgb2YgZWxlY3Rpb25zIHRvIHBhcmxpYW1lbnQsIHN0YXRlIGxlZ2lzbGF0dXJlcywgICB0aGUgb2ZmaWNlIG9mIHByZXNpZGVudCBvZiBJbmRpYSBhbmQgdGhlIG9mZmljZSBvZiB2aWNlLXByZXNpZGVudCBvZiBJbmRpYSBzaGFsbCBiZSB2ZXN0ZWQgaW4gdGhlIGVsZWN0aW9uICAgY29tbWlzc2lvbi4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gU2luY2UgaXRzIGluY2VwdGlvbiBpbiAxOTUwIGFuZCB0aWxsIDE1IE9jdG9iZXIgMTk4OSwgdGhlIGVsZWN0aW9uIGNvbW1pc3Npb24gICBmdW5jdGlvbmVkIGFzIGEgc2luZ2xlIG1lbWJlciBib2R5IGNvbnNpc3Rpbmcgb2YgdGhlIENoaWVmIEVsZWN0aW9uIENvbW1pc3Npb25lci4gSW4gMTk4OSwgdGhlIHByZXNpZGVudCAgIGFwcG9pbnRlZCB0d28gbW9yZSBlbGVjdGlvbiBjb21taXNzaW9uZXJzIHRvIGNvcGUgd2l0aCB0aGUgaW5jcmVhc2VkIHdvcmsgb2YgdGhlIGVsZWN0aW9uIGNvbW1pc3Npb24gICBvbiBhY2NvdW50IG9mIGxvd2VyaW5nIG9mIHRoZSB2b3RpbmcgYWdlIGZyb20gMjEgdG8gMTggeWVhcnMuIEhvd2V2ZXIsIHRoZSB0d28gcG9zdHMgb2YgZWxlY3Rpb24gd2VyZSAgIGFib2xpc2hlZCBpbiBKYW51YXJ5IDE5OTAgYW5kIHRoZSBFbGVjdGlvbiBDb21taXNzaW9uIHdhcyByZXZlcnRlZCB0byB0aGUgZWFybGllciBwb3NpdGlvbi4gQWdhaW4sIGluICAgT2N0b2JlciAxOTkzLCB0aGUgcHJlc2lkZW50IGFwcG9pbnRlZCB0d28gbW9yZSBlbGVjdGlvbiBjb21taXNzaW9uZXJzLiBTaW5jZSB0aGVuIGFuZCB0aWxsIHRvZGF5LCB0aGUgICBFbGVjdGlvbiBDb21taXNzaW9uIGhhcyBiZWVuIGZ1bmN0aW9uaW5nIGFzIGEgbXVsdGktbWVtYmVyIGJvZHkgY29uc2lzdGluZyBvZiB0aHJlZSBlbGVjdGlvbiAgIGNvbW1pc3Npb25lcnMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIGNoaWVmIGVsZWN0aW9uIGNvbW1pc3Npb25lciBhbmQgdGhlIHR3byBvdGhlciBlbGVjdGlvbiBjb21taXNzaW9uZXJzICAgaGF2ZSBlcXVhbCBwb3dlcnMgYW5kIHJlY2VpdmUgZXF1YWwgc2FsYXJ5LCBhbGxvd2FuY2VzIGFuZCBvdGhlciBwZXJxdWlzaXRlcywgd2hpY2ggYXJlIHNpbWlsYXIgdG8gdGhvc2UgICBvZiBhIGp1ZGdlIG9mIHRoZSBTdXByZW1lIENvdXJ0LiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIENvbnN0aXR1dGlvbiBoYXMgbm90IGRlYmFycmVkIHRoZSByZXRpcmluZyBlbGVjdGlvbiBjb21taXNzaW9uZXJzIGZyb20gICBhbnkgZnVydGhlciBhcHBvaW50bWVudCBieSB0aGUgZ292ZXJubWVudC4gICAgU291cmNlOiAgTS4gTGF4bWlrYW50LCBjaGFwdGVyLTQyLCBFbGVjdGlvbiBDb21taXNzaW9uICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to the Finance  Commission, which of the following  statement(s) is/are correct?   1.  Recommendations made by the Finance  Commission are only of advisory nature.   2.  The central finance commission suggests  measures needed to augment the  consolidated fund of a state to supplement  the resources of the municipalities in the  state.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgIEFydGljbGUgMjgwIG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgcHJvdmlkZXMgZm9yIGEgRmluYW5jZSBDb21taXNzaW9uIGFzIGEgcXVhc2ktanVkaWNpYWwgYm9keS4gIEl0IGlzICAgY29uc3RpdHV0ZWQgYnkgdGhlIHByZXNpZGVudCBvZiBJbmRpYSBldmVyeSBmaWZ0aCB5ZWFyIG9yIGF0IHN1Y2ggZWFybGllciB0aW1lIGFzIGhlIGNvbnNpZGVycyBuZWNlc3NhcnkuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gUmVjb21tZW5kYXRpb25zIG1hZGUgYnkgdGhlIEZpbmFuY2UgQ29tbWlzc2lvbiBhcmUgb25seSBvZiBhZHZpc29yeSAgIG5hdHVyZSBhbmQgaGVuY2UsIG5vdCBiaW5kaW5nIG9uIHRoZSBnb3Zlcm5tZW50LiAgSXQgaXMgdXAgdG8gdGhlIFVuaW9uIGdvdmVybm1lbnQgdG8gaW1wbGVtZW50IGl0cyAgIHJlY29tbWVuZGF0aW9ucyBvbiBncmFudGluZyBtb25leSB0byB0aGUgc3RhdGVzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBjZW50cmFsIGZpbmFuY2UgY29tbWlzc2lvbiBzaGFsbCBhbHNvIHN1Z2dlc3QgdGhlIG1lYXN1cmVzIG5lZWRlZCB0byAgIGF1Z21lbnQgdGhlIGNvbnNvbGlkYXRlZCBmdW5kIG9mIGEgc3RhdGUgdG8gc3VwcGxlbWVudCB0aGUgcmVzb3VyY2VzIG9mIHRoZSBtdW5pY2lwYWxpdGllcyBpbiB0aGUgICBzdGF0ZSAob24gdGhlIGJhc2lzIG9mIHRoZSByZWNvbW1lbmRhdGlvbnMgbWFkZSBieSB0aGUgZmluYW5jZSBjb21taXNzaW9uIG9mIHRoZSBzdGF0ZSkuICAgIFNvdXJjZTogIE0uIExheG1pa2FudCwgQ2hhcHRlciA0NS0gRmluYW5jZSBDb21taXNzaW9uICAgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VQYWdlLmFzcHg/UFJJRD0xNjkzODY4Izp+OnRleHQ9SW4lMjBvcmRlciUyMHRvJTIwbWFpbnRhaW4lMjBwciAgZWRpY3RhYmlsaXR5LGFzJTIwcmVjb21tZW5kZWQlMjBieSUyMEZDJTJEWElWLiAgICBNLiBMYXhtaWthbnQsIENoYXB0ZXIgMzktIE11bmljaXBhbGl0aWVzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements with  reference to the Comptroller and Auditor  General of India (CAG)   1.  He/she can resign from his office by  addressing the resignation to the Chief  Justice of India.   2.  He/she can be removed by the president on  the basis of a resolution passed to that effect  by both the Houses of Parliament with a  special majority.   3.  His/her salary is equal to that of a judge of  the Supreme Court.   4.  He/she is eligible for further office under  state government after he ceases to hold his  office of CAG.    Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIChBcnRpY2xlIDE0OCkgcHJvdmlkZXMgZm9yIGFuIGluZGVwZW5kZW50IG9mZmljZSBvZiB0aGUgQ29tcHRyb2xsZXIgYW5kIEF1ZGl0b3IgICBHZW5lcmFsIG9mIEluZGlhIChDQUcpLiBIZSBpcyB0aGUgaGVhZCBvZiB0aGUgSW5kaWFuIEF1ZGl0IGFuZCBBY2NvdW50cyBEZXBhcnRtZW50LiBIZSBpcyB0aGUgZ3VhcmRpYW4gICBvZiB0aGUgcHVibGljIHB1cnNlIGFuZCBjb250cm9scyB0aGUgZW50aXJlIGZpbmFuY2lhbCBzeXN0ZW0gb2YgdGhlIGNvdW50cnkgYXQgYm90aCB0aGUgbGV2ZWxzLXRoZSBDZW50cmUgICBhbmQgdGhlIHN0YXRlLiAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIENBRyBjYW4gcmVzaWduIGFueSB0aW1lIGZyb20gaGlzIG9mZmljZSBieSBhZGRyZXNzaW5nIHRoZSByZXNpZ25hdGlvbiBsZXR0ZXIgdG8gICB0aGUgcHJlc2lkZW50LCBub3QgQ0pJLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEhlIGNhbiBhbHNvIGJlIHJlbW92ZWQgYnkgdGhlIHByZXNpZGVudCBvbiBzYW1lIGdyb3VuZHMgYW5kIGluIHRoZSBzYW1lICAgbWFubmVyIGFzIGEganVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQuIEluIG90aGVyIHdvcmRzLCBoZSBjYW4gYmUgcmVtb3ZlZCBieSB0aGUgcHJlc2lkZW50IG9uIHRoZSAgIGJhc2lzIG9mIGEgcmVzb2x1dGlvbiBwYXNzZWQgdG8gdGhhdCBlZmZlY3QgYnkgYm90aCB0aGUgSG91c2VzIG9mIFBhcmxpYW1lbnQgd2l0aCBzcGVjaWFsIG1ham9yaXR5LCAgIGVpdGhlciBvbiB0aGUgZ3JvdW5kIG9mIHByb3ZlZCBtaXNiZWhhdmlvdXIgb3IgaW5jYXBhY2l0eS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBIaXMgc2FsYXJ5IGFuZCBvdGhlciBzZXJ2aWNlIGNvbmRpdGlvbnMgYXJlIGRldGVybWluZWQgYnkgdGhlIFBhcmxpYW1lbnQuIEhpcyAgIHNhbGFyeSBpcyBlcXVhbCB0byB0aGF0IG9mIGEganVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQuICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBIZSBpcyBub3QgZWxpZ2libGUgZm9yIGZ1cnRoZXIgb2ZmaWNlLCBlaXRoZXIgdW5kZXIgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgb3IgICBvZiBhbnkgc3RhdGUsIGFmdGVyIGhlIGNlYXNlcyB0byBob2xkIGhpcyBvZmZpY2UuICAgIFNvdXJjZTogIE0uIExheG1pa2FudCwgQ2hhcHRlci01MSwgQ0FHICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "3 and 4 only    "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the Attorney General of  India, which of the following statement(s)  is/are correct?   1.  He/she represents the Government of India  in any reference made by the President to  the Supreme Court under Article 143.   2.  He/she has the right to vote and take part  in the proceedings of any committee of the  Parliament of which he may be named a  member.   3.  He/she should not advise any ministry of  the Government of India unless the proposal  in this regard is received through the  Ministry of Law and Justice.  Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgb3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gdW5kZXIgQXJ0aWNsZSA3NiBoYXMgcHJvdmlkZWQgZm9yIHRoZSBvZmZpY2Ugb2YgdGhlIEF0dG9ybmV5IEdlbmVyYWwgZm9yIEluZGlhLiBIZSBpcyB0aGUgICBoaWdoZXN0IGxhdyBvZmZpY2VyIGluIHRoZSBjb3VudHJ5LiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEhlIHJlcHJlc2VudCB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBpbiBhbnkgcmVmZXJlbmNlIG1hZGUgYnkgdGhlIHByZXNpZGVudCB0byAgIHRoZSBTdXByZW1lIENvdXJ0IHVuZGVyIEFydGljbGUgMTQzIG9mIHRoZSBDb25zdGl0dXRpb24uICAoQXJ0aWNsZSAxNDMgaXMgcmVsYXRlZCB0byB0aGUgcG93ZXIgb2YgUHJlc2lkZW50ICAgdG8gY29uc3VsdCBTdXByZW1lIENvdXJ0KSAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSGUgaGFzIHRoZSByaWdodCB0byBzcGVhayBhbmQgdG8gdGFrZSBwYXJ0IGluIHRoZSBwcm9jZWVkaW5ncyBvZiBib3RoIHRoZSAgIEhvdXNlcyBvZiBQYXJsaWFtZW50IG9yIHRoZWlyIGpvaW50IHNpdHRpbmcgYW5kIGFueSBjb21taXR0ZWUgb2YgdGhlIFBhcmxpYW1lbnQgb2Ygd2hpY2ggaGUgbWF5IGJlICAgbmFtZWQgYSBtZW1iZXIsIGJ1dCB3aXRob3V0IGEgcmlnaHQgdG8gdm90ZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBIZSBzaG91bGQgbm90IGFkdmlzZSBhbnkgbWluaXN0cnkgb3IgZGVwYXJ0bWVudCBvZiBHb3Zlcm5tZW50IG9mIEluZGlhIG9yICAgYW55IHN0YXR1dG9yeSBvcmdhbml6YXRpb24gb3IgYW55IHB1YmxpYyBzZWN0b3IgdW5kZXJ0YWtpbmcgdW5sZXNzIHRoZSBwcm9wb3NhbCBvciBhIHJlZmVyZW5jZSBpbiB0aGlzICAgcmVnYXJkIGlzIHJlY2VpdmVkIHRocm91Z2ggdGhlIE1pbmlzdHJ5IG9mIExhdyBhbmQgSnVzdGljZSwgRGVwYXJ0bWVudCBvZiBMZWdhbCBBZmZhaXJzLiAgICBTb3VyY2U6IE0uIExheG1pa2FudCwgQ2hhcHRlci01MiwgQXR0b3JuZXkgR2VuZXJhbCBvZiBJbmRpYSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the practice of begging  in India, consider the following statements.  1.  It comes under the concurrent list of the  Constitution.  2.  It is banned under the central law on  begging and destitution enacted by the  parliament.  3.  A child being forced to beg is an offence  under the Juvenile Justice Act, 2015.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIERlc3BpdGUgb2YgSW5kaWEncyByYXBpZCBlY29ub21pYyBncm93dGgsIGJlZ2dpbmcgYXMgYSBzb2NpYWwgcHJvYmxlbSBoYXMgZXhpc3RlZCBpbiBvdXIgc29jaWV0eSBzaW5jZSAgIGluY2VwdGlvbiBvZiBodW1hbiBjaXZpbGl6YXRpb24gYW5kIHN0aWxsIHBlcnNpc3RzIGV2ZW4gYWZ0ZXIgb3VyIGdvdmVybm1lbnQgaW50ZW5kZWQgdG8gYWJvbGlzaCBpdCBieSAgIHRha2luZyBsb3Qgb2YgbWVhc3VyZXMgYW5kIGJyaW5naW5nIGluIGxlZ2lzbGF0aW9ucy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEJlZ2dpbmcgaXMgYSBzdGF0ZSBzdWJqZWN0LCBhbmQgdGhlcmUgaXNuJ3QgYSBjZW50cmFsIGxhdyBnb3Zlcm5pbmcgdGhpcy4gQXMgcGVyIHRoZSAgIDd0aCBTY2hlZHVsZSBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGFuZCB1bmRlciBzZXJpYWwgbm8uIDkgb2YgU3RhdGUgTGlzdCwgdGhlIHN1YmplY3QgbWF0dGVyIG9mICJSZWxpZWYgICBvZiB0aGUgZGlzYWJsZWQgYW5kIHVuZW1wbG95YWJsZSIgY29tZXMgdW5kZXIgdGhlIHB1cnZpZXcgb2YgU3RhdGUgTGlzdC4gVGhlIFN0YXRlcyBhcmUgcmVzcG9uc2libGUgZm9yICAgdGFraW5nIG5lY2Vzc2FyeSBwcmV2ZW50aXZlIGFuZCByZWhhYmlsaXRhdGl2ZSBzdGVwcy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEluZGlhIGhhcyBubyBjZW50cmFsIGxhdyBvbiBiZWdnaW5nIGFuZCBkZXN0aXR1dGlvbi4gQXMgbWFueSBhcyAyMCBTdGF0ZXMgYW5kIDIgICBVbmlvbiBUZXJyaXRvcmllcyBoYXZlIGVpdGhlciBlbmFjdGVkIHRoZWlyIG93biBBbnRpLUJlZ2dhcnkgTGVnaXNsYXRpb24gb3IgYWRvcHRlZCBsZWdpc2xhdGlvbnMgZW5hY3RlZCAgIGJ5IG90aGVyIFN0YXRlcy9VVHMuIGkuZS4sIHRoZSBCb21iYXkgUHJldmVudGlvbiBvZiBCZWdnaW5nIEFjdCwgMTk1OSwgd2hpY2ggY2FycmllcyBhIHBlbmFsdHkgb2YgICBkZXRlbnRpb24gb2YgdGhyZWUgdG8gMTAgeWVhcnMgaW4gYmVnZ2FyIGhvbWVzLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgSnV2ZW5pbGUgSnVzdGljZSAoQ2FyZSBhbmQgUHJvdGVjdGlvbiBvZiBDaGlsZHJlbikgQWN0LCAyMDE1IGlzIHRoZSBwcmltYXJ5IGxhdyAgIGZvciBjaGlsZHJlbiBpbiB0aGUgY291bnRyeS4gQXMgcGVyIHRoZSBsYXcsIHdob2V2ZXIgZW1wbG95cyBvciB1c2VzIGFueSBjaGlsZCBmb3IgdGhlIHB1cnBvc2Ugb2YgYmVnZ2luZyAgIG9yIGNhdXNlcyBhbnkgY2hpbGQgdG8gYmVnIHNoYWxsIGJlIHB1bmlzaGFibGUgd2l0aCBpbXByaXNvbm1lbnQgZm9yIGEgdGVybSB3aGljaCBtYXkgZXh0ZW5kIHRvIGZpdmUgICB5ZWFycyBhbmQgc2hhbGwgYWxzbyBiZSBsaWFibGUgdG8gZmluZSBvZiBvbmUgbGFraCBydXBlZXMuICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFNvdXJjZTogaHR0cHM6Ly93d3cubGVnYWxzZXJ2aWNlaW5kaWEuY29tL2xlZ2FsL2FydGljbGUtMTM2Ny1iZWdnYXJ5LWxhd3MtaW4taW5kaWEtYS1jb25zdGl0dXRpb25hbC0gIGFuYWx5c2lzLmh0bWwgICBodHRwczovL3d3dy5oaW5kdXN0YW50aW1lcy5jb20vZWRpdG9yaWFscyBoZS1zdXByZW1lLWNvdXJ0LWlzLXJpZ2h0LW9uLWJlZ2dpbmctICAxMDE2Mjc0NzE3MTE5NzIuaHRtbCM6fjp0ZXh0PUluZGlhJTIwaGFzJTIwbm8lMjBmZWRlcmFsJTIwbGF3LDEwJTIweWVhcnMlMjBpbiUyMGJlZ2dhciUyMGhvICBtZXMuICAgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc3JlbGVhc2VzaGFyZS5hc3B4P1BSSUQ9MTU2NDA3MiAgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLmFzcHg/UFJJRD0xNjk3NDIwIzp+OnRleHQ9QXMlMjBwZXIlMjBTZWN0aW9uJTIwNzYlMiAgMG9mLGZpbmUlMjBvZiUyMG9uZSUyMGxha2glMjBydXBlZXMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the statements is incorrect with  respect to the model code of conduct for  elections in India?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IGIgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIHRoZSBNb2RlbCBDb2RlIG9mIENvbmR1Y3QsIG5vIHBhcnR5IG9yIGNhbmRpZGF0ZSBjYW4gYnJpYmUgb3IgICB0aHJlYXRlbiB2b3RlcnMgb3IgYXBwZWFsIHRvIHRoZW0gaW4gdGhlIG5hbWUgb2YgY2FzdGUgb3IgcmVsaWdpb24gZm9yIHNlY3VyaW5nIHZvdGVzLiAgIFN0YXRlbWVudHMgYSBhbmQgZCBhcmUgY29ycmVjdCBhbmQgYyBpcyBpbmNvcnJlY3QuIEFjY29yZGluZyB0byB0aGUgTW9kZWwgQ29kZSBvZiBDb25kdWN0IGFzIGFncmVlZCBieSAgIGFsbCBwb2xpdGljYWwgcGFydGllcywgbm8gcGFydHkgb3IgY2FuZGlkYXRlIGNhbjogICAxKSBVc2UgcmVsaWdpb3VzIHBsYWNlcyBzdWNoIGFzIG1vc3F1ZXMsIGd1cmR3YXJhcyBvciBhbnkgcGxhY2Ugb2Ygd29yc2hpcCBmb3IgZWxlY3Rpb24gcHJvcGFnYW5kYS4gICBWaW9sYXRpbmcgYW55IG9mIHRoZXNlIHNlY3Rpb25zIGNhbiBhdHRyYWN0IGltcHJpc29ubWVudCB1cCB0byBmaXZlIHllYXJzIGFsb25nIHdpdGggYSBtb25ldGFyeSBmaW5lLiAgIDIpIFVzZSBnb3Zlcm5tZW50IHZlaGljbGVzLCBhaXJjcmFmdHMgYW5kIG9mZmljaWFscyBmb3IgZWxlY3Rpb25zLiBHb3Zlcm5tZW50IHRyYW5zcG9ydCBpbmNsdWRpbmcgICBvZmZpY2lhbCBhaXItY3JhZnRzLCB2ZWhpY2xlcywgbWFjaGluZXJ5IGFuZCBwZXJzb25uZWwgc2hhbGwgbm90IGJlIHVzZWQgZm9yIGZ1cnRoZXJhbmNlIG9mIHRoZSBpbnRlcmVzdCAgIG9mIHRoZSBwYXJ0eSBpbiBwb3dlci4gICAgMykgTm8gcGFydHkgb3IgY2FuZGlkYXRlIHNoYWxsIGluZHVsZ2UgaW4gYW55IGFjdGl2aXR5IHdoaWNoIG1heSBhZ2dyYXZhdGUgZXhpc3RpbmcgZGlmZmVyZW5jZXMgb3IgY3JlYXRlICAgbXV0dWFsIGhhdHJlZCBiZXR3ZWVuIGRpZmZlcmVudCByZWxpZ2lvdXMgb3IgbGluZ3Vpc3RpYyBjb21tdW5pdGllcy4gICBLbm93bGVkZ2UgQmFzZTogICAgT3RoZXIgTW9kZWwgQ29kZSBvZiBDb25kdWN0IGd1aWRlbGluZXM6ICAgMSkgT25jZSBlbGVjdGlvbnMgYXJlIGFubm91bmNlZCwgTWluaXN0ZXJzIHNoYWxsIG5vdCBsYXkgZm91bmRhdGlvbiBzdG9uZXMgb2YgYW55IHByb2plY3RzLCB0YWtlIGFueSBiaWcgICBwb2xpY3kgZGVjaXNpb25zIG9yIG1ha2UgYW55IHByb21pc2VzIG9mIHByb3ZpZGluZyBwdWJsaWMgZmFjaWxpdGllcy4gICAyKSBDcml0aWNpc20gb2Ygb3RoZXIgcG9saXRpY2FsIHBhcnRpZXMgc2hhbGwgYmUgY29uZmluZWQgdG8gdGhlaXIgcG9saWNpZXMgYW5kIHByb2dyYW1tZSwgcGFzdCByZWNvcmQgYW5kICAgd29yay4gUGFydGllcyBhbmQgQ2FuZGlkYXRlcyBzaGFsbCByZWZyYWluIGZyb20gY3JpdGljaXNtIG9mIGFsbCBhc3BlY3RzIG9mIHByaXZhdGUgbGlmZS4gICAzKSBObyBwb2xpdGljYWwgcGFydHkgb3IgY2FuZGlkYXRlIHNoYWxsIHBlcm1pdCBpdHMgb3IgaGlzIGZvbGxvd2VycyB0byBtYWtlIHVzZSBvZiBhbnkgaW5kaXZpZHVhbCdzIGxhbmQsICAgYnVpbGRpbmcsIGNvbXBvdW5kIHdhbGwgZXRjLiwgd2l0aG91dCBoaXMgcGVybWlzc2lvbiBmb3IgZXJlY3RpbmcgZmxhZy1zdGFmZnMsIHN1c3BlbmRpbmcgYmFubmVycywgICBwYXN0aW5nIG5vdGljZXMsIHdyaXRpbmcgc2xvZ2FucyBldGMuICAgU291cmNlOiBOQ0VSVCBJWCwgQ2hwdGVyLTMsIEVsZWN0b3JhbCBQb2xpdGljcywgUGcuIDQ0LTQ1ICAgaHR0cHM6Ly93d3cuZmluYW5jaWFsZXhwcmVzcy5jb20vaW5kaWEtbmV3cy93aGF0LWlzLW1vZGVsLWNvZGUtb2YtY29uZHVjdC1rbm93LWFib3V0LW1jYy0gIGd1aWRlbGluZXMtdmlvbGF0aW9ucy1hbmQtaGlzdG9yeS8yMjE1Nzg4LyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "No party or candidate can use any place of   worship for the election campaign.  ",
        "option2" : "No candidate can appeal to voters in the   name of caste or religion.  ",
        "option3" : "The political party in power can use   government vehicles for election   campaigns.  ",
        "option4" : "No candidate shall indulge in any activity   which may lead to disharmony between   religious or linguistic communities.   "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to the National  Investigation Agency (NIA) and Central Bureau  of Investigation (CBI), consider the following  statements:   1.  The NIA investigates of terror-related crime  whereas the CBI investigates crimes of  corruption, economic offences and serious  and organized crime.   2.  Both NIA and CBI are statutory bodies.    Which of the statement(s) given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBDZW50cmFsIEJ1cmVhdSBJbnZlc3RpZ2F0aW9uIGlzIEluZGlhJ3MgdG9wLW5vdGNoIGFnZW5jeSB0aGF0IGludmVzdGlnYXRlcyB2ZXJ5IHNldmVyZSBjYXNlcyBmcm9tIGFsbCBvdmVyICAgdGhlIGNvdW50cnkuIFRoaXMgb3JnYW5pemF0aW9uIGNvbWVzIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBQZXJzb25uZWwsIFB1YmxpYyBHcmlldmFuY2VzIGFuZCBQZW5zaW9ucyBvZiAgIHRoZSBGZWRlcmFsIGdvdmVybm1lbnQuICAgTmF0aW9uYWwgSW52ZXN0aWdhdGlvbiBBZ2VuY3kgKE5JQSkgZnVuY3Rpb25zIGFzIHRoZSBDZW50cmFsIENvdW50ZXIgVGVycm9yaXNtIExhdyBFbmZvcmNlbWVudCBBZ2VuY3kgICBpbiB0aGUgY291bnRyeS4gSXQgaXMgdW5kZXIgdGhlIE1pbmlzdHJ5IG9mIEhvbWUgQWZmYWlycywgR292ZXJubWVudCBvZiBJbmRpYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgTklBIGhhcyBiZWVuIGNvbnN0aXR1dGVkIGFmdGVyIHRoZSBNdW1iYWkgdGVycm9yIGF0dGFjayBpbiAyMDA4IG1haW5seSBmb3IgICBpbnZlc3RpZ2F0aW9uIG9mIGluY2lkZW50cyBvZiB0ZXJyb3Jpc3QgYXR0YWNrcywgZnVuZGluZyBvZiB0ZXJyb3Jpc20gYW5kIG90aGVyIHRlcnJvciByZWxhdGVkIGNyaW1lLCAgIHdoZXJlYXMgdGhlIENCSSBpbnZlc3RpZ2F0ZXMgY3JpbWUgb2YgY29ycnVwdGlvbiwgZWNvbm9taWMgb2ZmZW5jZXMgYW5kIHNlcmlvdXMgYW5kIG9yZ2FuaXplZCBjcmltZSAgIG90aGVyIHRoYW4gdGVycm9yaXNtLiAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBDQkkgaXMgbm90IGEgc3RhdHV0b3J5IGJvZHkuIEl0IGRlcml2ZXMgaXRzIHBvd2VycyBmcm9tIHRoZSBEZWxoaSBTcGVjaWFsICAgUG9saWNlIEVzdGFibGlzaG1lbnQgQWN0LCAxOTQ2LiBUaGUgTmF0aW9uYWwgSW52ZXN0aWdhdGlvbiBBZ2VuY3kgaXMgYSBzdGF0dXRvcnkgYm9keSBlc3RhYmxpc2hlZCBieSB0aGUgICBOYXRpb25hbCBJbnZlc3RpZ2F0aW9uIEFnZW5jeSBBY3QgMjAwOC4gICBTb3VyY2U6IE0uIExheG1pa2FudCwgQ2hhcHRlci0gNjAsIENlbnRyYWwgQnVyZWF1IG9mIEludmVzdGlnYXRpb24gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 50,
      "question" : "Which among the following is a special  feature that distinguishes a pressure group  from a political party?  1. Parties take political stances, while pressure  groups do not bother about political issues.  2. Pressure groups are always confined to a  few people, while parties involve a larger  number of people.  3. Pressure groups do not seek to get into  power, while political parties do.  4. Pressure groups do not seek to mobilise  people, while political parties do.  Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQSBwcmVzc3VyZSBncm91cCBpcyBhIGdyb3VwIG9mIHBlb3BsZSB3aG8gYXJlIG9yZ2FuaXNlZCBhY3RpdmVseSBmb3IgcHJvbW90aW5nIGFuZCBkZWZlbmRpbmcgdGhlaXIgICBjb21tb24gaW50ZXJlc3QuICAgT3B0aW9uIDMgaXMgY29ycmVjdC4gUHJlc3N1cmUgZ3JvdXBzIGFyZSBvcmdhbmlzYXRpb25zIHRoYXQgYXR0ZW1wdCB0byBpbmZsdWVuY2UgZ292ZXJubWVudCBwb2xpY2llcy4gQnV0ICAgdW5saWtlIHBvbGl0aWNhbCBwYXJ0aWVzLCBwcmVzc3VyZSBncm91cHMgZG8gbm90IGFpbSB0byBkaXJlY3RseSBjb250cm9sIG9yIHNoYXJlIHBvbGl0aWNhbCBwb3dlci4gICBQcm9tb3RpbmcgdGhlIGludGVyZXN0cyBvZiBhIGdyb3VwIG9mIHNvY2lldHkgb3IgaW50ZXJlc3RzIG9mIHBhcnRpY3VsYXIgc2VjdGlvbnMgb2Ygc29jaWV0eSBpcyB0aGUgdXN1YWwgICBhaW0gb2YgUHJlc3N1cmUgb3IgaW50ZXJlc3QgZ3JvdXBzLiBQcm9mZXNzaW9uYWwgYXNzb2NpYXRpb25zIG9mIHRlYWNoZXJzLCBkb2N0b3JzLCBsYXd5ZXJzOyBidXNpbmVzcyAgIGFzc29jaWF0aW9ucywgdHJhZGUgdW5pb25zIGFyZSBzb21lIGV4YW1wbGVzIG9mIFByZXNzdXJlIG9yIGludGVyZXN0IGdyb3Vwcy4gICBPcHRpb24gMSBpcyBpbmNvcnJlY3QuIFByZXNzdXJlIGdyb3VwcyBkbyBib3RoZXIgYWJvdXQgcG9saXRpY2FsIGlzc3VlcyB3aGljaCBtYXkgYWZmZWN0IHRoZW0uICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiBTb21lIFByZXNzdXJlIGdyb3VwcyBhcmUgY29uZmluZWQgdG8gYSBmZXcgcGVvcGxlLCBidXQgc29tZSBncm91cHMgYXJlIHZlcnkgYmlnICAgbGlrZSBmYXJtZXIgYXNzb2NpYXRpb25zLiAgIE9wdGlvbiA0IGlzIGluY29ycmVjdC4gUHJlc3N1cmUgZ3JvdXBzIHNlZWsgdG8gbW9iaWxpc2UgcGVvcGxlIHRvIGVmZmVjdGl2ZWx5IGluZmx1ZW5jZSB0aGUgZ292ZXJubWVudC4gICBTb3VyY2U6IE5DRVJUIFgsIERlbW9jcmF0aWMgcG9saXRpY3MsIGNoYXB0ZXIgNSAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : " 3 only   ",
        "option4" : "3 and 4 only     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
