{
  "testId" : "forum-2023-prelims-preparatory-26",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-26.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to the Koodiyattam:  1.  Koodiyattam is a form of theatre in Kerala.   2.  The play is performed with musical  instruments Mizhavu and Edakka.  3.  It originated more than 2,000 years ago.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEtvb2RpeWF0dGFtIGlzIGFuIG9sZGVzdCBjb250aW51aW5nIGZvcm0gb2YgdGhlYXRyZSBhbmQgbGl2aW5nIHRyYWRpdGlvbiBpbiBLZXJhbGEuICAgSXQgY29tcGxldGVseSBhZGhlcmVzIHRvIHRoZSBydWxlcyBsYWlkIGRvd24gaW4gTmF0eWEgU2hhc3RyYSBhbmQgaXMgdGhlIHRyYWRpdGlvbmFsIHByaXZpbGVnZSBvZiB0aGUgQ2hha3lhciAgIGFuZCBOYW1iaWFyIGNhc3RlcyBvZiBLZXJhbGEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHBsYXkgaXMgcGVyZm9ybWVkIGluIFNhbnNrcml0LCBQcmFrcml0IGFuZCBNYWxheWFsYW0sIHdpdGggbXVzaWNhbCAgIGluc3RydW1lbnRzIE1pemhhdnUgYW5kIEVkYWtrYSBwcm92aWRpbmcgdGhlIGJhY2tncm91bmQgbXVzaWMuIEFsbCB0aGUgY2hhcmFjdGVycyBiZWdpbiB0aGUgcGxheSB3aXRoICAgTmlydmFoYW5hLCBhIHJlY29sbGVjdGlvbiBvZiB0aGUgcGFzdCBldmVudHMgb2YgdGhlIHN0b3J5LiBBZnRlciB0aGlzLCB0aGUgc3RvcnkgdW5mb2xkcyBpbiBhIGxlaXN1cmVseSBmYXNoaW9uICAgd2l0aCBjb21tZW50YXJpZXMgb24gc29jaWFsLCBwaGlsb3NvcGhpY2FsLCBhbmQgcG9saXRpY2FsIGJlaGF2aW91ci4gTWFyZ2lNYWRodSBDaGFreWFyIGlzIGEgbGVhZGluZyAgIGV4cG9uZW50IG9mIHRoaXMgYXJ0IGZvcm0uICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogIGl0IGlzIHByYWN0aWNlZCBpbiBLZXJhbGEuIEl0J3Mgb25lIG9mIEluZGlhJ3Mgb2xkZXN0IGxpdmluZyB0aGVhdHJpY2FsIHRyYWRpdGlvbnMuICAgT3JpZ2luYXRpbmcgbW9yZSB0aGFuIDIsMDAwIHllYXJzIGFnbywgS3V0aXlhdHRhbSByZXByZXNlbnRzIGEgc3ludGhlc2lzIG9mIFNhbnNrcml0IGNsYXNzaWNpc20gYW5kICAgcmVmbGVjdHMgdGhlIGxvY2FsIHRyYWRpdGlvbnMgb2YgS2VyYWxhLiAgIFNvdXJjZTogIEFydCBhbmQgY3VsdHVyZSBieSBOaXRpbiBTaW5naGFuaWEgcGRmLiBDaGFwdGVyIG5hbWUtIEluZGlhbiB0aGVhdHJlLiBQYWdlIG5vLiAzNjEuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to the coins that were  issued during the Delhi Sultanate period,  consider the following statements:   1.  The coins had inscriptions in the form of  king's name, title and the date.   2.  The coins did not bear any image of the  issuing monarch.  3.  Silver coins were absent during Delhi  Sultanate period.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBjb2lucyBoYWQgaW5zY3JpcHRpb25zIGluIHRoZSBmb3JtIG9mIGtpbmcncyBuYW1lLCB0aXRsZSBhbmQgdGhlIGRhdGUgYXMgcGVyIEhpanJpICAgY2FsZW5kYXIuIEhvd2V2ZXIsIEFsbGF1ZGluIEtoaWxqaSB3YXMgZmlyc3QgdG8gY2hhbmdlIHRoZSBleGlzdGluZyBkZXNpZ24gYnkgZHJvcHBpbmcgdGhlIG5hbWUgb2YgdGhlIEtoYWxpZiAgIGFuZCByZXBsYWNlZCBpdCBieSBzZWxmLXByYWlzaW5nIHRpdGxlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIGVhcmxpZXIgdHJhZGl0aW9uIG9mIGFuY2llbnQgcGljdG9yaWFsIHBhdHRlcm4gb2YgY29pbmFnZSBnYXZlIHdheSB0byB0aGUgc28tICBjYWxsZWQgSXNsYW1pYyB0eXBlIG9mIGNvaW5zIHdoaWNoIHdlcmUgc2FucyBhbnkgcGljdG9yaWFsIG1vdGlmLiBGb3IgZXhhbXBsZSwgdGhlIGNvaW5zIGRpZCBub3QgYmVhciBhbnkgICBpbWFnZSBvZiB0aGUgaXNzdWluZyBtb25hcmNoIGFzIHRoZXJlIHdhcyBhIHByb2hpYml0aW9uIG9mIGlkb2xhdHJ5IGluIElzbGFtLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFdpdGggdGhlIERlbGhpIFN1bHRhbmF0ZSAoMTIwNi0xNTI2IEFEKSBjYW1lIHRoZSBhdHRlbXB0IGF0IHN0YW5kYXJkaXNhdGlvbi4gICBUaGlzIHBlcmlvZCB3YXMgbWFya2VkIGJ5IGEgY29uc2lkZXJhYmxlIGV4cGFuc2lvbiBvZiB0aGUgbW9uZXkgZWNvbm9teS4gQ29pbnMgd2VyZSBzdHJ1Y2sgaW4gZ29sZCwgICBzaWx2ZXIgYW5kIGNvcHBlci4gSW4gdGhlIG1vbmV0YXJ5IHN5c3RlbSwgdGhlIGVxdWF0aW9uIGJldHdlZW4gZ29sZCBhbmQgc2lsdmVyIHdhcyBwcm9iYWJseSBhdCAxOjEwLiAgICAgU291cmNlOiBOaXRpbiBTaW5naGFuaWEsIEFydCBhbmQgQ3VsdHVyZSwgQ2hhcHRlciBDb2lucyAgICBodHRwOi8vZXBncC5pbmZsaWJuZXQuYWMuaW4vZXBncGRhdGEvdXBsb2Fkcy9lcGdwX2NvbnRlbnQvUzAwMDgyOUlDL1AwMDE3MzgvTTAyMzk4Ni9MTS8xNTAgIDc2OTk0ODlQMDktTTI0LUNvaW5zb2ZEZWxoaVN1bHRhbmF0ZS1MTS5wZGYgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 Only   ",
        "option2" : "2 and 3 Only   ",
        "option3" : "1 Only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 3,
      "question" : "  With reference to coinage system of  Satavahana kingdom, which of the following  statement(s) is/ are correct?  1.  The prominent language inscribed on their  coins was Sanskrit.  2.  Ujjain symbol is the most peculiar  characteristic of Satvahana coins.  3.  Satvahana kings never issued coins made of  gold.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBTYXR2YWhhbmFzIHJ1bGVkIGZyb20gYXJvdW5kIG1pZCAxc3QgY2VudHVyeSBCQyB0byAzcmQgY2VudHVyeSBBRCBpbiB0aGUgRGVjY2FuIHJlZ2lvbi4gSXQgd2FzIG9uZSBvZiAgIHRoZSBlYXJsaWVzdCBhbmQgdGhlIGxvbmdlc3QgcnVsaW5nIER5bmFzdHkgb2YgQW5jaWVudCBJbmRpYS4gVGhleSBhcmUgY29uc2lkZXJlZCB0byBiZSBpZGVudGljYWwgd2l0aCB0aGUgICBBbmRocmFzIG1lbnRpb25lZCBpbiB0aGUgUHVyYW5hcy4gVGhleSBoYWQgYSBwZWN1bGlhciBjb2luYWdlIHN5c3RlbSB3aGljaCBjb21wcmlzZWQgb2YgbW90aWZzLCAgIHN5bWJvbHMsIHBvcnRyYWl0cyBhbmQgbGVnZW5kLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIFNhdHZhaGFuYSBjb2lucyBoYWQgaW5zY3JpcHRpb24gaW4gUHJha3JpdCBsYW5ndWFnZSwgQnJhaG1pIHNjcmlwdC4gVGhlICAgZW1ibGVtIGFuZCB0aGUgbW90aWZzIGRpc3BsYXllZCBvbiB0aGUgU2F0YXZhaGFuYSBjb2luYWdlIGFyZSB0aGUgbW9zdCBlc3NlbnRpYWwgYW5kIGFtYmlndW91cyBhc3BlY3RzICAgb2YgdGhlbS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBVamphaW4gc3ltYm9sIGlzIGEgcGVjdWxpYXIgZmVhdHVyZSBvZiB0aGUgU2F0dmFoYW5hIGNvaW5zLiBJdCBpcyBuYW1lZCBzbyBiZWNhdXNlICAgYSBob2FyZCBvZiB0aGVzZSBjb2lucyB3ZXJlIGRpc2NvdmVyZWQgaW4gVWpqYWluLiBUaGUgVWpqYWluIHN5bWJvbCBoYXMgZm91ciBjaXJjbGVzIGF0dGFjaGVkIHRvIHRoZSBlbmRzIG9mICAgdGhlIGJhcnMgb2YgYSBjcm9zcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIENvaW5zIG9mIHRoZSBTYXR2YWhhbmFzIHdlcmUgbWFkZSB1cCBvZiBDb3BwZXIsIFNpbHZlciwgTGVhZCBhbmQgUG90aW4gaW4gICBkaWZmZXJlbnQgc2hhcGVzIHN1Y2ggYXMgUm91bmQsIFNxdWFyZSBhbmQgUmVjdGFuZ3VsYXIuIFNpbHZlciBjb2lucyBhcmUgY29tbW9ubHkgc2VlbiBhZnRlciAgICAgb2YgMjMgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBHYXV0YW1pcHV0cmEgU2F0YWthcm5pLCBtYWpvcml0eSBvZiB3aGljaCBkZXBpY3QgdGhlIHBvcnRyYWl0cyBvZiBLaW5ncy4gRmV3IENvaW5zIG9mIHRoZSBTYXR2YWhhbmFzIHdlcmUgICBtYWRlIHVwIG9mIGdvbGQuICAgU291cmNlOiBodHRwczovL3d3dy5taW50YWdld29ybGQuY29tL2Jsb2cvc2F0YXZhaGFuYS1jb2lucy1zeW1ib2xzLW1vdGlmcy8gICBSUyBTaGFybWEgTkNFUlQsIENoYXB0ZXIgLSAxNiwgUGFnZS0gMTE2LCAxMTkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 only   "
      }
    },
    {
      "index" : 4,
      "question" : "Which of the following is/are examples of  shadow puppetries in India?  1. Togalu Gombeyatta  2. Tholu Bommalata  3. Bommalattam  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGhhcyBhIHJpY2ggdHJhZGl0aW9uIGluIHNoYWRvdyBwdXBwZXRyeSwgd2hpY2ggaGFzIHN1cnZpdmVkIHRpbGwgbm93LiAgICBPcHRpb24gMSBpcyBjb3JyZWN0LiBUb2dhbHUgR29tYmV5YXR0YSBpcyB0aGUgcG9wdWxhciBzaGFkb3cgdGhlYXRyZSBvZiBLYXJuYXRha2EuIEEgdW5pcXVlIGZlYXR1cmUgb2YgICB0aGUgVG9nYWx1IEdvbWJheWV0dGEgcHVwcGV0cyBpcyB0aGUgdmFyaWF0aW9uIG9mIHB1cHBldCBzaXplIGJhc2VkIG9uIHNvY2lhbCBzdGF0dXMsIGkuZS4ga2luZ3MgYW5kICAgcmVsaWdpb3VzIGZpZ3VyZXMgYXJlIGNoYXJhY3RlcmlzZWQgYnkgbGFyZ2UgcHVwcGV0cyB3aGlsZSBjb21tb24gcGVvcGxlIGFuZCBzZXJ2YW50cyBhcmUgc2hvd24gYnkgICBzbWFsbGVyIHB1cHBldHMuICAgICAgT3B0aW9uIDIgaXMgY29ycmVjdC4gVGhvbHUgQm9tbWFsYXRhIGlzIHRoZSBzaGFkb3cgdGhlYXRyZSBvZiBBbmRocmEgUHJhZGVzaC4gVGhlIHNob3cgaXMgYWNjb21wYW5pZWQgICBieSBhIG11c2ljYWxseSBjbGFzc2ljIGJhY2tncm91bmQgYW5kIGlzIHRoZW1lZCBhcm91bmQgbXl0aG9sb2dpY2FsIGFuZCBkZXZvdGlvbmFsIHRhbGVzIG9mIHRoZSBFcGljcyAgIGFuZCBQdXJhbmFzLiBUaGUgcHVwcGV0cyBhcmUgbGFyZ2VyIGluIHNpemUgYW5kIGNvbG91cmVkIG9uIGJvdGggc2lkZXMuICAgIE9wdGlvbiAzIGlzIGluY29ycmVjdC4gQm9tbWFsYXR0YW0gaXMgdGhlIHB1cHBldHJ5IGluZGlnZW5vdXMgdG8gdGhlIHJlZ2lvbiBvZiBUYW1pbCBOYWR1LiBJdCBjb21iaW5lcyAgIGZlYXR1cmVzIG9mIHJvZCBhbmQgc3RyaW5nIHB1cHBldHJ5LiBUaGUgc3RyaW5ncyBhcmUgYXR0YWNoZWQgdG8gYW4gaXJvbiByaW5nIHdoaWNoIGlzIHdvcm4gYnkgdGhlICAgcHVwcGV0ZWVyIG9uIGhpcyBoZWFkLiBUaGUgQm9tbWFsYXR0YW0gcHVwcGV0cyBhcmUgdGhlIGxhcmdlc3QgYW5kIGhlYXZpZXN0IG1hcmlvbmV0dGVzIGZvdW5kIGluIEluZGlhLCAgIHdpdGggc29tZSBvZiB0aGVtIGFzIGxhcmdlIGFzIDQuNSBmdCBpbiBoZWlnaHQgYW5kIDEwIGtnIGluIHdlaWdodC4gICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgIFNvdXJjZTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZSBmb3IgQ2l2aWwgU2VydmljZXM6IE5pdGluIFNpbmdoYW5pYSAzcmQgRWRpdGlvbiBwYWdlIDM4Mi04NCAgIGh0dHA6Ly9jY3J0aW5kaWEuZ292LmluL3B1cHBldGZvcm1zLnBocCAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements with  reference to astronomical development in  Indian History:  1.  Sawai Jai Singh invented an astronomical  instrument known as Yantaraja.  2.  'Jiz Muhammad Shahi' deals with the  knowledge of constellations.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBNYWhhcmFqYSBTYXdhaSBKYWkgU2luZ2ggKDMgTm92ZW1iZXIgMTY4OCAtIDIxIFNlcHRlbWJlciAxNzQzKSB3YXMgdGhlIEhpbmR1IFJhanB1dCBydWxlciBvZiB0aGUga2luZ2RvbSAgIG9mIEFtYmVyIHdoaWNoIHdhcyBsYXRlciBjYWxsZWQgSmFpcHVyLiBIZSB3YXMgZ2l2ZW4gdGhlIHRpdGxlIG9mIFNhd2FpIGJ5IHRoZSBNdWdoYWwgRW1wZXJvciwgQXVyYW5nemViICAgaW4gdGhlIHllYXIgMTY5OS4gIlNhd2FpIiBtZWFucyBvbmUgYW5kIGEgcXVhcnRlciB0aW1lIHN1cGVyaW9yIHRvIGhpcyBjb250ZW1wb3Jhcmllcy4gSGUgaGFkIGEgZ3JlYXQgICBpbnRlcmVzdCBpbiBtYXRoZW1hdGljcywgYXJjaGl0ZWN0dXJlLCBhbmQgYXN0cm9ub215LiAgICBKYWkgU2luZ2ggd291bGQgaGF2ZSByZWNlaXZlZCBoaXMgZWFybHkgaW5zdHJ1Y3Rpb24gaW4gYXN0cm9ub215IHRocm91Z2ggdGhlIHVzZSBvZiB0aGUgYXN0cm9sYWJlLCBhbmQgaW4gICBmYWN0IG9uZSBvZiB0aGUgZWFybHkgaW5zdHJ1bWVudHMgYXQgaGlzIG9ic2VydmF0b3J5IGluIEphaXB1ciBpcyB0aGUgWWFudHJhcmFqYSwgYSBncmVhdCBBc3Ryb2xhYmUgICBhcHByb3hpbWF0ZWx5IDggZmVldCBpbiBoZWlnaHQuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIGNvdXJ0IGFzdHJvbm9tZXIgb2YgRmVyb3ogU2hhaCBCYWhhbWFuaSwgTWFoZW5kcmEgU3VyaSwgaW52ZW50ZWQgYW4gICBhc3Ryb25vbWljYWwgaW5zdHJ1bWVudCBrbm93biBhcyBZYW50YXJhamEuIE1haGVuZHJhIFN1cmkgd2FzIGZhbWVkIGFzIHRoZSBmaXJzdCBwZXJzb24gdG8gd3JpdGUgYSAgIFNhbnNrcml0IHRyZWF0aXNlIG9uIHRoZSBhc3Ryb2xhYmUuIFRoZSBhc3Ryb2xhYmUgd2FzIGludHJvZHVjZWQgaW50byBJbmRpYSBhdCB0aGUgdGltZSBvZiBGaXJ1eiBTaGFoICAgVHVnaGx1cSAocmVpZ24gQUQgMTM1MSAtIDg4KSwgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gU2F3YWkgSmFpIFNpbmdoICgxNjgxLTE3NDMgQS5ELikgcHJlcGFyZWQgYSBzZXQgb2YgY2hhcnRzIG5hbWVkIEppeiBNdWhhbW1hZCAgIFNoYWhpIGZvciBlYXNlIGluIGFzdHJvbm9taWNhbCBvYnNlcnZhdGlvbiBqb3VybmFscy4gICBUaGUgYm9vayBqaXogTXVoYW1tYWQgU2hhaGkgcmVsYXRlZCB0byBrbm93bGVkZ2UgICBvZiBBc3Ryb2xvZ3kgYW5kIGRlYWxzIHdpdGggdGhlIGNvdW50aW5nIG9mIGNvbnN0ZWxsYXRpb25zLiAgICBGb3IgYXN0cm9sb2dlcnMsIHRoZSB0YWJsZXMga25vd24gYnkgdGhlIGFyYWJpYyB0ZXJtIFppaiwgd2hpY2ggaW5kaWNhdGVkIHRoZSBwb3NpdGlvbnMgb2YgdGhlIHN0YXJzIGFuZCAgIHBsYW5ldHMgYXQgYW55IGdpdmVuIGRhdGUgYW5kIHRpbWUsIHdlcmUgY3JpdGljYWwgdG8gdGhlaXIgcHJhY3RpY2UuIFRvIGNyZWF0ZSB0aGVzZSB0YWJsZXMsIHRoZXkgdXNlZCB0aGUgICBhc3Ryb2xhYmUsIGFuIGFuY2llbnQgaW5zdHJ1bWVudCB0aGF0IGNhbiBiZSB1c2VkIHRvIG1hcCB0aGUgbG9jYWwgc2t5IGFuZCBtYWtlIGEgdmFyaWV0eSBvZiBhc3Ryb25vbWljYWwgICBjYWxjdWxhdGlvbnMuIEludmVudGVkIGJ5IHRoZSBHcmVla3MgaW4gYWJvdXQgMTUwIEJDLCBhbmQgZnVydGhlciBkZXZlbG9wZWQgYnkgYm90aCBJc2xhbWljIGFuZCBJbmRpYW4gICBhc3Ryb25vbWVycywgdGhlIGFzdHJvbGFiZSBpcyBhbiBpbnN0cnVtZW50IGJvdGggcHJhY3RpY2FsIGFuZCBiZWF1dGlmdWwuIEJ5IHRoZSAxNHRoIGNlbnR1cnksIEluZGlhbiAgIGFzdHJvbm9tZXJzIGhhZCBwZXJmZWN0ZWQgdGhlIGluc3RydW1lbnQgYW5kIHdlcmUgcHJvZHVjaW5nIGluZGl2aWR1YWwgbW9kZWxzIHdpdGggZmluZSBjcmFmdHNtYW5zaGlwICAgYW5kIGJlYXV0aWZ1bCBvcm5hbWVudGF0aW9uLiAgICBTb3VyY2U6IEluZGlhbiBBcnQgYW5kIEN1bHR1cmUsIE5pdGluIFNpbmdoYW5pYSwzcmQgRWRpdGlvbiBQLk4uIC01NjYgICAgaHR0cHM6Ly9pbnNhLm5pYy5pbi93cml0ZXJlYWRkYXRhL1VwTG9hZGVkRmlsZXMvSUpIUy9Wb2wzNF8yXzZfU1JTYXJtYS5wZGYgICAgIGh0dHBzOi8vaGlzdG9yaWNhbHBsYWNlcy5pbi9qYW50YXItbWFudGFyLyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to Al Beruni's accounts on  India, consider the following statements:   1.  Science was connected deeply with  common man and not restricted to elitist- intellectuals.   2.  Science gained prominence due to  increased patronage to scholars from the  rulers.   Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFsIGJlcnVuaSB3YXMgYSByZW5vd25lZCBwaGlsb3NvcGhlciwgbWF0aGVtYXRpY2lhbiwgaGlzdG9yaWFuIGFuZCBvbmUgb2YgdGhlIGpld2VscyBpbiB0aGUgY291cnQgb2Ygc3VsdGFuICAgb2YgTWFobXVkIG9mIEdoYXpuaS4gSGUgdHJhdmVsbGVkIHRvIHRoZSBJbmRpYW4gc3ViY29udGluZW50IGFuZCBhdXRob3JlZCBhIHN0dWR5IG9mIEluZGlhbiBjdWx0dXJlIEtpdGFiLSAgdWwtaGluZC4gSGlzIGJvb2sgaXMgYSBzdXJ2ZXkgb2YgSW5kaWEncyBsaWZlIGJhc2VkIG9uIGhpcyBzdHVkaWVzIGFuZCBvYnNlcnZhdGlvbnMgaW4gSW5kaWEgYmV0d2VlbiAxMDE3IGFuZCAgIDEwMzAuICAgICAgb2YgMjMgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFsIEJlcnVuaSB0YWxrcyBhYm91dCB0aGUgdmVyeSBlbGl0aXN0IGNoYXJhY3RlciBvZiBJbmRpYW4gc2NpZW5jZS4gSXQgd2FzIHJlc3RyaWN0ZWQgICB0byBhIGZldyBwZW9wbGUgd2hvIHByYWN0aXNlZCBzY2llbmNlIG9ubHkgYXMgYW4gaW50ZWxsZWN0dWFsIGV4ZXJjaXNlLiBTY2llbmNlIGluIEluZGlhIGhhZCBsb3N0IGl0cyAgIGNvbm5lY3Rpb24gd2l0aCB0aGUgbGlmZSBvZiBjb21tb24gcGVvcGxlIG9yIHByb2R1Y3RpdmUgcHJvY2Vzcy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBBbCBCZXJ1bmkgaGFzIHdyaXR0ZW4gYWJvdXQgbGFjayBvZiBwYXRyb25hZ2UgdG8gc2Nob2xhcnMgZnJvbSBraW5ncy4gU2NpZW5jZSAgIHdhcyBvbiB0aGUgZGVjbGluZSBhbmQgaXQgd2FzIHF1aXRlIGltcG9zc2libGUgdGhhdCBhIG5ldyBzY2llbmNlIG9yIGFueSBuZXcga2luZCBvZiByZXNlYXJjaCBzaG91bGQgYXJpc2UgICBpbiBvdXIgZGF5cy4gV2hhdCB3YXMgbGVmdCB3YXMgdGhlIHNjYW50eSByZW1haW5zIG9mIGJ5Z29uZXMgYmV0dGVyIGRheXMuICAgS25vd2xlZGdlIEJhc2U6ICAgICBBY2NvcmRpbmcgdG8gQWwtQmVydW5pLCBJbmRpYW5zIGhhZCB0cmllZCB0byBjYWxjdWxhdGUgbGF0aXR1ZGVzIG9mIHNvbWUgcGxhY2VzIGxpa2UgS2FubmF1aiwgVGhhbmVzYXIgYW5kICAgU3JpbmFnYXIgKGluIEthc2htaXIpLiBUaGUgY2FsY3VsYXRpb24gb2YgbG9uZ2l0dWRlcyB3YXMgYmFzZWQgb24gdGltaW5ncyBvZiB0aGUgZWNsaXBzZSBhdCBkaWZmZXJlbnQgcGxhY2VzLCAgIGFzIGhhZCBiZWVuIHN1Z2dlc3RlZCBieSBQdG9sZW15IGVhcmxpZXIuIFRoZWlyIHByaW1lIG1lcmlkaWFuIHBhc3NlZCB0aHJvdWdoIFVpamFpbi4gQWwtQmVydW5pIHBvaW50cyAgIG91dCB0aGF0IHRoZSBJbmRpYW4gdmlld3MgcmVnYXJkaW5nIG1hdHRlciB3ZXJlIHNpbWlsYXIgdG8gdGhvc2Ugb2YgdGhlIFNjaWVuY2UgaW4gdGhlIE1lZGlldmFsIFRpbWVzICAgR3JlZWtzLiBBY2NvcmRpbmcgdG8gQWwtQmVydW5pLCB0aGUgZ3JlYXRlc3QgSW5kaWFuIGNvbnRyaWJ1dGlvbiB3YXMgaW4gdGhlIHVzZSBvZiB0aGUgZGVjaW1hbCBzeXN0ZW0uIFRoZSAgIG51bWVyYWwgc2lnbnMgdGhhdCB0aGUgSW5kaWFucyB1c2VkIHdlcmUgdGhlIHNvdXJjZSBvZiBBcmFiaWMgYW5kIHRoZSBwcmVzZW50LWRheSBpbnRlcm5hdGlvbmFsIG51bWVyYWxzLiAgICBTb3VyY2U6IGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMTIxOTUvMS9Vbml0LTUucGRmICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 7,
      "question" : "In the context of theatre, the term  'Sutradhar' refers to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFsbCBTYW5za3JpdCBwbGF5cyBmb2xsb3dlZCBhIHJpdHVhbGlzdGljIHByb2dyZXNzaW9uIGluIHdoaWNoIFN1dHJhZGhhciBwbGF5cyBhbiBpbXBvcnRhbnQgcm9sZS4gU3V0cmFkaGFyLCAgIHRoZSBzdGFnZSBtYW5hZ2VyIGFuZCBkaXJlY3RvciwgbWFkZSBoaXMgd2F5IG9udG8gdGhlIHN0YWdlIHdpdGggaGlzIGFzc2lzdGFudHMuIEhlIHdvdWxkIHByYXkgdG8gdGhlIGRlaXR5ICAgYW5kIHNlZWsgaGlzIGJsZXNzaW5ncy4gVGhlIFN1dHJhZGhhciBzdW1tb25lZCB0aGUgcGxheSdzIGxlYWRpbmcgYWN0b3JzIGFuZCBhbm5vdW5jZWQgdGhlIHBsYXkncyB0aW1lICAgYW5kIGxvY2F0aW9uLiBIZSB1c2VkIHRvIGdpdmUgYnJpZWYgaW50cm9kdWNlZCBvZiB0aGUgcGxheXdyaWdodC4gICAgVGhlIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgU3V0cmFkaGFyIGFyZSBkZXNjcmliZWQgYnkgQmhhcmF0YSBhbmQgTWF0cmlndXB0YSwgYW4gZWFybHkgd3JpdGVyIG9uICAgZHJhbWF0dXJneS4gQWNjb3JkaW5nIHRvIHRoZW0sIFN1dHJhZGhhciBtdXN0IGJlIHNraWxsZWQgYXQgcGxheWluZyBhIHZhcmlldHkgb2YgbXVzaWNhbCBpbnN0cnVtZW50cy4gSGUgICBzaG91bGQgYmUgd2VsbC12ZXJzZWQgaW4gcmFzYSBhbmQgYmhhdmEgYW5kIGFuIGV4cGVydCBpbiB0aGUgdGhlYXRyaWNhbCBzcGVlY2gsIGdhaXRzLCBhbmQgbW92ZW1lbnRzIG9mICAgdmFyaW91cyBjaGFyYWN0ZXIuIEhlIHNob3VsZCBiZSBza2lsbGVkIGluIHRoZSBwcmVzZW50YXRpb24gb2YgbmF0eWEgb3IgdGhlYXRyZSBhbmQgb3RoZXIgYXJ0cyBhbmQgY3JhZnRzLCAgIGFuZCBhYmxlIHRvIGp1ZGdlIHRoZSByaHl0aG0gYW5kIHRpbWUgbWVhc3VyZSB0byBhY2NvbXBhbnkgZGlmZmVyZW50IHNvbmdzLiBBZnRlciBtYXN0ZXJpbmcgdGhlIHBsYXksICAgaGUgbXVzdCBiZSBhYmxlIHRvIHRlYWNoIG90aGVyIGFjdG9ycyB0aGUgc2tpbGxzIGhlIGhhcyBsZWFybmVkLiAgIFNvdXJjZTogTml0aW4gU2luZ2hhbmlhLCAzcmQgZWRpdGlvbiwgQ2hhcHRlciA3LCAgLjMgICAgIGh0dHBzOi8vd3d3LmluZGlhbmV0em9uZS5jb20vMzQvc3V0cmFkaGFyYV9pbmRpYW5fdGhlYXRyZV9jaGFyYWN0ZXIuaHRtICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Stage manager who give brief introduction   of playwright.  ",
        "option2" : " Noble and good-hearted person in the play.  ",
        "option3" : " Hero of the play mainly males who presents   different personalities.  ",
        "option4" : " Person in the play who questions prevailing   social norms through satire.         "
      }
    },
    {
      "index" : 8,
      "question" : "Which of the following are the reasons for  decline of Sanskrit theatre around 14th century  AD?  1.  Due to the diversion of Sanskrit dramatists  towards poetry.  2.  Rigid orthodoxy of the Sanskrit theatre.  3.  It got confined to the religious sphere.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBTYW5za3JpdCB0aGVhdHJlIGVtZXJnZWQgZHVyaW5nIDIwMCBCQyBhbmQgMTB0aCBjZW50dXJ5IEFELiBhcyBhbiBhbWFsZ2FtYXRpb24gb2YgdGhlIGRyYW1hdGljICAgcml0dWFscywgZXBpYyBzdG9yaWVzLCByZWNpdGF0aW9uLCBwYW50b21pbWUsIGRhbmNlIGFuZCBwdXBwZXQgdGhlYXRyZS4gVGhlIFNhbnNrcml0IHRyYWRpdGlvbiBjb250YWlucyBvbmUgICBvZiB0aGUgbW9zdCBoaWdobHkgcmVmaW5lZCBhbmQgZWxhYm9yYXRlIGFlc3RoZXRpYyB0aGVvcmllcyBpbiB0aGUgYW5jaWVudCB0aW1lcyB0aGF0IGFyZSBzdGlsbCBleHRhbnQgaW4gICB3cml0dGVuIG1hbnVzY3JpcHRzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEx5cmljYWwgd3JpdGluZ3MgYmVnYW4gdG8gZ2FpbiBwb3B1bGFyaXR5IG92ZXIgZHJhbWF0aWMgd29ya3MgYXMgU2Fuc2tyaXQgZHJhbWF0aXN0cyAgIGJlZ2FuIHRvIGRpdmVyZ2UgdG93YXJkcyBwb2V0cnkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIFNhbnNrcml0IHRoZWF0cmUncyByaWdpZCBvcnRob2RveHkgbGltaXRlZCB0aGUgY3JlYXRpdmUgc3BhY2Ugb2YgbmV3ICAgcGxheXdyaWdodHMgd2hvIHR1cm5lZCB0byBvdGhlciBmb3Jtcy4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gU2Fuc2tyaXQncyBwb3B1bGFyaXR5IHdhbmVkIGFzIGl0IGJlY2FtZSBtb3JlIG9yIG1vcmUgZW1iZWxsaXNoZWQuIEl0IGJlY2FtZSAgIGluY3JlYXNpbmdseSByZXN0cmljdGVkIHRvIHRoZSByZWxpZ2lvdXMgc3BoZXJlIGFuZCBhbW9uZyBCcmFobWlucywgYXMgb3RoZXIgbGFuZ3VhZ2VzIHN1Y2ggYXMgUGFsaSBhbmQgICBQcmFrcml0IHRvb2sgaXRzIHBsYWNlLiAgIE9uZSBtb3JlIHJlYXNvbiBpcyB0aGF0LCB3aXRoIHRoZSBhcnJpdmFsIG9mIE11c2xpbSBydWxlcnMsIFNhbnNrcml0IHRoZWF0cmUgdG9vayBhIGJhY2sgc2VhdCBhcyBkYW5jZSBhbmQgICBtdXNpYyBnYWluZWQgcG9wdWxhcml0eS4gICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU291cmNlOiBOaXRpbiBTaW5naGFuaWEsIDNyZCBlZGl0aW9uLCBDaGFwdGVyIDcsICAuNCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following was/were the main  contribution(s) of Aryabhata?  1.  He discovered the method of calculating  large units of time.  2.  He gave calculations for predicting  planetary positions.  3.  He propounded the theory that Earth is  round and rotates on its own axis.  4.  He computed trigonometric tables  geometrically.  Which of the statements above are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFyeWFiaGF0YSwgYWxzbyBjYWxsZWQgQXJ5YWJoYXRhIEkgd2FzIGFuIGFzdHJvbm9tZXIgYW5kIHRoZSBlYXJsaWVzdCBJbmRpYW4gbWF0aGVtYXRpY2lhbiB3aG9zZSB3b3JrICAgYW5kIGhpc3RvcnkgYXJlIGF2YWlsYWJsZSB0byBtb2Rlcm4gc2Nob2xhcnMuIEhlIGZsb3VyaXNoZWQgaW4gS3VzdW1hcHVyYS1uZWFyIFBhdGFsaXB1cnRhIChQYXRuYSksIHRoZW4gICB0aGUgY2FwaXRhbCBvZiB0aGUgR3VwdGEgZHluYXN0eS4gSGUgY29tcG9zZWQgdHdvIHdvcmtzLCBBcnlhYmhhdGl5YSAoYy4gNDk5KSBhbmQgdGhlIG5vdyBsb3N0ICAgQXJ5YWJoYXRhc2lkZGhhbnRhLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFyeWFiaGF0YSBpbiBhcm91bmQgNDk5IEFEIHdyb3RlIEFyeWFiaGF0aXlhIGluIHdoaWNoIHRoZSBjb25jZXB0cyBvZiAgIG1hdGhlbWF0aWNzIGFzIHdlbGwgYXMgYXN0cm9ub215IHdlcmUgZXhwbGljaXRseSBtZW50aW9uZWQuIFRoZSBib29rIHdyaXR0ZW4gaW4gU2Fuc2tyaXQgcHJvdmlkZWQgICAxKSBNZXRob2Qgb2YgY2FsY3VsYXRpbmcgbGFyZ2UgdW5pdHMgb2YgdGltZSAgIDIpIE51bWJlciB0aGVvcnksIEdlb21ldHJ5LCBUcmlnb25vbWV0cnkgYW5kIEJpamFnYW5pdGEgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXN0cm9ub215IChKeW90aXNhKSBBc3Ryb25vbXkgd2FzIGFsc28gY2FsbGVkIGtoYWdvbCBzaGFzdHJhIGluIHRob3NlIGRheXMuIEtoYWdvbCAgIHdhcyB0aGUgZmFtb3VzIGFzdHJvbm9taWNhbCBsYWJvcmF0b3J5IGluIE5hbGFuZGEgd2hlcmUgQXJ5YWJoYXRhIHN0dWRpZWQuICAgSGUgZ2F2ZSBjYWxjdWxhdGlvbnMgZm9yIHByZWRpY3RpbmcgdGhlIHBsYW5ldGFyeSBwb3NpdGlvbnMgaW4gQXN0cm9sb2d5LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEFyeWFiaGF0YSBpbiBoaXMgYm9vayBzdGF0ZWQgdGhhdCB0aGUgRWFydGggaXMgcm91bmQgYW5kIHJvdGF0ZXMgb24gaXRzIG93biBheGlzLiAgIEhlIGZvcm11bGF0ZWQgdGhlIGFyZWEgb2YgYSB0cmlhbmdsZSBhbmQgZGlzY292ZXJlZCBhbGdlYnJhLiBUaGUgdmFsdWUgb2YgUGkgZ2l2ZW4gYnkgQXJ5YWJoYXRhIGlzIG11Y2ggICBtb3JlIGFjY3VyYXRlIHRoYW4gdGhhdCBnaXZlbiBieSB0aGUgR3JlZWtzLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEFyeWFiaGF0dGEgY29uc3RydWN0ZWQgdHJpZ29ub21ldHJpYyB0YWJsZXMuIEhlIGNvbXB1dGVkIHRyaWdvbm9tZXRyaWMgdGFibGVzICAgZ2VvbWV0cmljYWxseSBhbmQgdXNlZCB0aGUgdmFsdWVzIG9mICdzaW5lJyBhbmQgJ2Nvc2luZScgaW4gaGlzIGFzdHJvbm9taWNhbCBjYWxjdWxhdGlvbnMuIEJlc2lkZXMgdGhlc2UsIGhlICAgZGV2ZWxvcGVkIGZvcm11bGFzIGZvciB0aGUgc3VtIG9mIGFyaXRobWV0aWMgYW5kIGdlb21ldHJpYyBzZXJpZXMgICBLbm93bGVkZ2UgQmFzZTogVGhlIEluZGlhbiBnb3Zlcm5tZW50IG5hbWVkIGl0cyBmaXJzdCBzYXRlbGxpdGUgQXJ5YWJoYXRhIChsYXVuY2hlZCAxOTc1KSBpbiBoaXMgaG9ub3VyLiAgIEFyeWFiaGF0YXNpZGRoYW50YSBjaXJjdWxhdGVkIG1haW5seSBpbiB0aGUgbm9ydGh3ZXN0IG9mIEluZGlhIGFuZCwgdGhyb3VnaCB0aGUgU2FzYW5pYW4gZHluYXN0eSAoMjI0LSAgNjUxKSBvZiBJcmFuLCBoYWQgYSBwcm9mb3VuZCBpbmZsdWVuY2Ugb24gdGhlIGRldmVsb3BtZW50IG9mIElzbGFtaWMgYXN0cm9ub215LiBJdHMgY29udGVudHMgYXJlIHByZXNlcnZlZCAgIHRvIHNvbWUgZXh0ZW50IGluIHRoZSB3b3JrcyBvZiBWYXJhaGFtaWhpcmEgKGZsb3VyaXNoZWQgYy4gNTUwKSwgQmhhc2thcmEgSSAoZmxvdXJpc2hlZCBjLiA2MjkpLCBCcmFobWFndXB0YSAgICg1OTgtYy4gNjY1KSwgYW5kIG90aGVycy4gSXQgaXMgb25lIG9mIHRoZSBlYXJsaWVzdCBhc3Ryb25vbWljYWwgd29ya3MgdG8gYXNzaWduIHRoZSBzdGFydCBvZiBlYWNoIGRheSB0byAgIG1pZG5pZ2h0LiAgIFNvdXJjZTogQXJ0IGFuZCBDdWx0dXJlIE5pdGluIFNpbmdoYW5peWEgM3JkIEVkaXRpb24ucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 10,
      "question" : "He was an Indian mathematician and  astronomer. In his book, he mentioned Zero as  a number. He also introduced negative  numbers and described them as debts and  positive numbers as fortunes.  Which of the following persons is being  described in the above paragraph?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogQmhhc2thcmEgd2FzIGEgN3RoIGNlbnR1cnkgbWF0aGVtYXRpY2lhbiB3aG8gd3JvdGUgQXJ5YWJoYXRpeWEtIGJoYXN5YSByZWxhdGVkICAgdG8gTWF0aGVtYXRpY3MgYW5kIGFzdHJvbm9teS4gSGUgZnVydGhlciBleHRlbmRlZCBCcmFobWFndXB0YSdzIHdvcmsgb24gbnVtYmVyIHN5c3RlbXMuIEJoYXNrYXJhICAgaXMgYWxzbyBrbm93biBhcyBCaGFza2FyYSBJSSBvciBhcyBCaGFza2FyYWNoYXJ5YSBsYXZhdGkgKFRoZSBCZWF1dGlmdWwpIHdoaWNoIGlzIG9uIG1hdGhlbWF0aWNzIGlzIGhpcyBtb3N0ICAgaW1wb3J0YW50IHdvcmsuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0OiBBcnlhYmhhdGEgd2FzIGFuIGFzdHJvbm9tZXIgYW5kIG1hdGhlbWF0aWNpYW4uIEhlIGZsb3VyaXNoZWQgaW4gS3VzdW1hcHVyYS0gIG5lYXIgUGF0YWxpcHVydGEgKFBhdG5hKSwgdGhlbiB0aGUgY2FwaXRhbCBvZiB0aGUgR3VwdGEgZHluYXN0eS4gSGUgY29tcG9zZWQgdHdvIGJvb2tzIEFyeWFiaGF0aXlhIChjLiAgIDQ5OSkgYW5kIHRoZSBub3cgbG9zdCBBcnlhYmhhdGFzaWRkaGFudGEuIFRoZXkgbWFpbmx5IGRlYWx0IHdpdGggbWF0aGVtYXRpY3MsIGFzdHJvbm9teSBhbmQgYXN0cm9sb2d5LiAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogQ2hhcmFrYSwgdGhlIGZhdGhlciBvZiBtZWRpY2luZSBjb25zb2xpZGF0ZWQgQXl1cnZlZGEgMjUwMCB5ZWFycyBhZ28uICAgSGUgd2FzIG9uZSBvZiB0aGUgcHJpbmNpcGFsIGNvbnRyaWJ1dG9ycyB0byBBeXVydmVkYSwgYSBzeXN0ZW0gb2YgbWVkaWNpbmUgYW5kIGxpZmVzdHlsZSBkZXZlbG9wZWQgaW4gICBBbmNpZW50IEluZGlhLiBIZSBpcyBrbm93biBhcyBhbiBlZGl0b3Igb2YgdGhlIG1lZGljYWwgdHJlYXRpc2UgZW50aXRsZWQgQ2hhcmFrYSBTYW1oaXRhLCBvbmUgb2YgdGhlICAgZm91bmRhdGlvbmFsIHRleHRzIG9mIGNsYXNzaWNhbCBJbmRpYW4gbWVkaWNpbmUgYW5kIEF5dXJ2ZWRhLiBDaGFyYWsgU2FtaGl0YSBtYWlubHkgZGVhbHMgd2l0aCB1c2Ugb2YgICBwbGFudHMgYW5kIGhlcmJzIGZvciBtZWRpY2luYWwgcHVycG9zZXMsIHdob3NlIGRlc2NyaXB0aW9uIGlzIGRpdmlkZWQgaW50byBlaWdodCBib29rcy4gICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIE9wdGlvbiBkIGlzIGNvcnJlY3Q6IEJyYWhtYWd1cHRhICg3dGggY2VudHVyeSBBRCkgaW4gaGlzIGJvb2sgQnJhaG1hc3B1dGEgU2lkZGhhbnRhIG1lbnRpb25lZCBaZXJvICAgYXMgYSBudW1iZXIuIEluIGhpcyBib29rLCBoZSBhbHNvIGludHJvZHVjZWQgbmVnYXRpdmUgbnVtYmVycyBhbmQgZGVzY3JpYmVkIHRoZW0gYXMgZGVidHMgYW5kIHBvc2l0aXZlICAgbnVtYmVycyBhcyBmb3J0dW5lcy4gSXQgYWxzbyBjb250YWluZWQgZmlyc3QgY2xlYXIgZGVzY3JpcHRpb24gb2YgUXVhZHJhdGljIGZvcm11bGEuICAgS25vd2xlZGdlIEJhc2U6ICAgIFRoZSBDb25jZXB0IG9mICdaZXJvJyBvciBTaHVueWEgaXMgZGVyaXZlZCBmcm9tIHRoZSBjb25jZXB0IG9mIGEgdm9pZC4gVGhlIGNvbmNlcHQgb2Ygdm9pZCBleGlzdGVkIGluIEhpbmR1ICAgUGhpbG9zb3BoeSBoZW5jZSB0aGUgZGVyaXZhdGlvbiBvZiBhIHN5bWJvbCBmb3IgaXQuIFRoZSBjb25jZXB0IG9mIFNodW55YSwgaW5mbHVlbmNlZCBTb3V0aC1FYXN0IEFzaWFuICAgY3VsdHVyZSB0aHJvdWdoIHRoZSBCdWRkaGlzdCBjb25jZXB0IG9mIE5pcnZhbmEgKGF0dGFpbmluZyBzYWx2YXRpb24pIGJ5IG1lcmdpbmcgaW50byB0aGUgdm9pZCBvZiBldGVybml0eScuICAgU291cmNlOiAgQXJ0IGFuZCBDdWx0dXJlIE5pdGluIFNpbmdoYW5peWEgM3JkIEVkaXRpb24ucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Bhaskara  ",
        "option2" : "Aryabhata  ",
        "option3" : "Charak  ",
        "option4" : "Brahmagupta   "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following statements is/are  correct about the Classical Sanskrit Theatre?  1. The Classical Sanskrit drama predominantly  flourished during the Gupta period.  2. The leading male character speaks in  Sanskrit dialect while the female character  speaks in different Prakrit dialects during  their performance.  3. The plays have a well-defined beginning,  progression and happy endings.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBTYW5za3JpdCB0aGVhdHJlIHRyYWRpdGlvbiBmbG91cmlzaCBwcmltYXJpbHkgaW4gdGhlIGNvdXJ0cyBvZiBIaW5kdSBraW5ncy4gVGhlIHBsYXlzIHdlcmUgcGVyZm9ybWVkIGluICAgY291cnQgb24gb2NjYXNpb25zIHN1Y2ggYXMgY29yb25hdGlvbnMsIGZlc3RpdmFscywgdmljdG9yeSBpbiB3YXIsIGJpcnRocyBhbmQgb3RoZXIgY29tbXVuaXR5IGNlbGVicmF0aW9ucy4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgdHJhZGl0aW9uYWwgdGhlYXRyZXMgaW4gSW5kaWEgaW5jbHVkZSB0aGUgU2Fuc2tyaXQgZHJhbWF0aWMgdHJhZGl0aW9uIHdoaWNoICAgZmxvdXJpc2hlZCBmcm9tIDIwMCBCQyB0byAxMHRoIGNlbnR1cnkgQUQuIFRoZSBDbGFzc2ljYWwgU2Fuc2tyaXQgZHJhbWEgcmVhY2hlZCBpdHMgemVuaXRoIGR1cmluZyB0aGUgICBHdXB0YSBlcmEuIFNvbWUgb2YgdGhlIGZhbW91cyBmaWd1cmVzIGFzc29jaWF0ZWQgd2l0aCBTYW5za3JpdCB0cmFkaXRpb24gZHVyaW5nIHRoZSBHdXB0YSBlcmEgYXJlLSBLYWxpZGFzYSAgIGtub3duIGZvciBoaXMgd29yayBBYmhpamFuYXNha3V0YWxhbSwgU3VkcmFrYSBmb3IgTXJjY2hha2F0aWthLCBCaGFzYSBmb3IgVXJ1LUJoYW5nYSBldGMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW4gQ2xhc3NpY2FsIFNhbnNrcml0IFRoZWF0cmUsIHRoZSBsYW5ndWFnZSB1c2VkIGJ5IHRoZSBoZXJvIGFuZCB0aGUgaGlnaGVyICAgY2hhcmFjdGVyIGlzIENsYXNzaWNhbCBTYW5za3JpdCwgd2hpbGUgZmVtYWxlIGFuZCBvdGhlciBtaW5vciBjaGFyYWN0ZXJzIHNwZWFrIGluIHRoZSBkaWZmZXJlbnQgUHJha3JpdCAgIGRpYWxlY3RzLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgU2Fuc2tyaXQgcGxheXMgYXJlIGZvdXIgdG8gc2V2ZW4gYWN0cyBsb25nIHRoYXQgaGFkIGEgd2VsbC1kZWZpbmVkIGJlZ2lubmluZywgICBkZXZlbG9wbWVudCwgcGF1c2UgYW5kIGNvbmNsdXNpb24uIFRoZSBhY3QgYWx3YXlzIGhhcyBhIGhhcHB5IGVuZGluZy4gVGhlIGRlcGljdGlvbiBvZiB0cmFnZWR5IGlzIGhhcmRseSAgIHNlZW4gaW4gdGhlc2UgcGxheXMuICAgU291cmNlOiAgaHR0cHM6Ly93d3cuZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNzQ0MjQvMS9Vbml0LTMucGRmICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yNjk2MS8xL1VuaXQtMjMucGRmICAgaHR0cHM6Ly93d3cuaGFuc3JhamNvbGxlZ2UuYWMuaW4vaENQYW5lbC91cGxvYWRzL2VsZWFybmluZy9lbGVhcm5pbmdfZG9jdW1lbnQvUG9wdWxhci5wZGYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to Ankia Naat, consider  the following statements:  1. It is a musical drama written in Brajavali  language.  2. The performances of Ankia Naat are  organized to coincide with the religious  festival of Gokul Ashtami.  3. Ankia Naat's performances showcase huge  statues made up of bamboo.   4. A close variant of this musical drama is  known as Chhaiti Ghoda.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFua2l5YSBOYWF0IGlzIGEgcmVsaWdpb3VzIHRoZWF0cmUgZm9ybSBmcm9tIHRoZSBub3J0aC1lYXN0ZXJuIHN0YXRlIEFzc2FtLiAnQW5raXlhJyBtZWFucyBhY3QgYW5kICduYWF0JyAgIG1lYW5zIGRyYW1hLiBUaGlzIGZvcm0gd2FzIGNyZWF0ZWQgYnkgU2hyaS4gU2hhbmthcmRldmEgbGl2ZWQgaW4gdGhlIDE1dGgsIDE2dGggY2VudHVyaWVzLiBIZSB3YXMgYSBncmVhdCAgIGRldm90ZWUgb2YgTG9yZCBLcmlzaG5hLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBbmtpYSBOYWF0IGlzIGEgbXVzaWNhbCBkcmFtYSB0aGF0IGludm9sdmVzIHN0b3JpZXMgb2YgTG9yZCBLcmlzaG5hLiBJdCB3YXMgb3JpZ2luYWxseSAgIHdyaXR0ZW4gaW4gYW4gQXNzYW1lc2UtTWFpdGhpbGkgbWl4IGxhbmd1YWdlIGNhbGxlZCBCcmFqYXZhbGxpLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBwZXJmb3JtYW5jZXMgb2YgQW5raWEgTmFhdCBhcmUgb3JnYW5pemVkIHRvIGNvaW5jaWRlIHdpdGggcmVsaWdpb3VzIGZlc3RpdmFscyAgIGxpa2UgZ29rdWxhc2h0YW1pLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBtb3N0IHN0cmlraW5nIGFzcGVjdCBvZiB0aGUgQW5raWEgTmFhdCBwZXJmb3JtYW5jZXMgYXJlIHRoZSBodWdlIGVmZmlnaWVzICAgKHN0YXR1ZXMpIG1hZGUgdXAgb2YgYmFtYm9vIGFuZCBjb3ZlcmVkIHdpdGggcGFwaWVyLW1hY2hlIGFuZCBwYWludGVkIHdpdGggYnJpZ2h0IGNvbG91cnMuIFRoZXNlICAgZWZmaWdpZXMgcmVwcmVzZW50IGRlbW9ucyBhbmQgYW5pbWFscyBhbmQgY2FuIGJlIGFzIHRhbGwgYXMgMTUgZmVldC4gICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3QuIERhc2thdGhpYSBpcyBhIGZvcm0gb2YgZm9sayB0aGVhdHJlIHBvcHVsYXIgaW4gdGhlIHJlZ2lvbiBvZiBPZGlzaGEgaW4gd2hpY2ggdGhlcmUgICBpcyBhIHJhdC1HYXlha2EsIHdobyBpcyB0aGUgY2hpZWYgc2luZ2VyIGFuZCBQYWxpYSwgd2hvIGlzIHRoZSBjby1uYXJyYXRvciBpcyBhY2NvbXBhbmllZCBieSBhIGRyYW1hdGljICAgbXVzaWMgY29tcG9zZWQgdXNpbmcgYSB3b29kZW4gbXVzaWNhbCBpbnN0cnVtZW50IGNhbGxlZCBrYXRoaWEuIEl0cyBjbG9zZSB2YXJpYW50IGlzIGtub3duIGFzIHRoZSBDaGhhaXRpICAgR2hvZGEsIHdoaWNoIHVzZXMgdHdvIG11c2ljYWwgaW5zdHJ1bWVudHMgZGhvbCBhbmQgbW9odXJpLWFuZCB0aHJlZSBuYXJyYXRvcnMuICAgIFNvdXJjZTogIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNDczNTgvMS9Vbml0LTIucGRmICAgICAgb2YgMjMgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 3 and 4 only   "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following pairs:  Plays/Drama Authors  1. Chitrangada Ved Vyasa  2. Mahaviracharita Visakhadatta  3. Sariputraprakarana Ashvaghosa  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBjb21iaW5hdGlvbiBvZiBkaWZmZXJlbnQgZ2VucmVzIG9mIE1vZGVybiBkcmFtYSBhbmQgU2Fuc2tyaXQgcmVzdWx0ZWQgaW4gYSB1bmlxdWUgYW1hbGdhbWF0aW9uIHRoYXQgICBnYXZlIHVzIGEgZGlmZmVyZW50IGNvbGxlY3Rpb24gb2YgbGl0ZXJhcnkgdHJlYXN1cmUuIFRoZSBmYW1vdXMgZHJhbWF0aXN0cyBvZiBTYW5za3JpdCBsaXRlcmF0dXJlIHdlcmUgICBLYWxpZGFzYSwgQmhhc2EsIFNodWRyYWthIGFuZCBBc3ZhZ2hvc2Egd2hpbGUgdGhvc2Ugb2YgTW9kZXJuIEluZGlhIGluY2x1ZGVkIFJhYmluZHJhbmF0aCBUYWdvcmUsICAgSGVzaW5hbSBLYW5oYWlsYWwgZXRjLiAgICBQYWlyIDEgaXMgaW5jb3JyZWN0LiBDaGl0cmFuZ2FkYSBhbHNvIGtub3duIGFzIE5yaXR5YS1OYXR5YSBpcyB0aGUgZmFtb3VzIHBsYXkgd3JpdHRlbiBieSBSYWJpbmRyYW5hdGggICBUYWdvcmUgd2hpY2ggaXMgYmFzZWQgb24gYSBzdG9yeSBmcm9tIHRoZSBNYWhhYmhhcmF0YS4gSXQgaXMgYSBsb3ZlIHN0b3J5IGJhc2VkIG9uIGxpZmUgb2YgTWFuaXB1cidzIHByaW5jZXNzICAgQ2hpdHJhbmdhZGEgYW5kIEFyanVuLCAgIFBhaXIgMiBpcyBpbmNvcnJlY3QuIE1haGF2aXJhY2hhcml0YSBpcyBhIHBsYXkgd3JpdHRlbiBpbiBTYW5za3JpdCBieSBCaGF2YWJodXRpIGluIHRoZSA4dGgtY2VudHVyeSBiYXNlZCAgIG9uIHRoZSBlYXJseSBsaWZlIG9mIFJhbWEsIHRoZSBoZXJvIG9mIHRoZSBSYW1heWFuYS4gVGhlIHBsYXkgY29uc2lzdHMgb2Ygc2V2ZW4gYWN0cyBhbmQgdGhlIGludHJvZHVjdGlvbiAgIHJlcHJlc2VudHMgYSBzY2VuZSB3aGVyZSBzYWdlIFZpc3ZhbWl0cmEgYXNrcyBSYW1hIGFuZCBMYWtzaG1hbmEgdG8gZ3VhcmQgaGlzIHNhY3JpZmljZS4gICBQYWlyIDMgaXMgY29ycmVjdC4gU2FyaXB1dHJhcHJha2FyYW5hIGlzIGEgU2Fuc2tyaXQgZHJhbWEgd3JpdHRlbiBieSBBc2h2YWdob3NhLiBUaGUgZHJhbWEgaGFzIG5pbmUgYWN0cywgICBhbmQgaXRzIHRoZW1lIGlzIGJhc2VkIG9uIHRoZSBldmVudHMgd2hpY2ggbGVkIHVwIHRvIHRoZSBjb252ZXJzaW9uIG9mIHRoZSB5b3VuZyBNYXVkZ2FsYXlhbmEgYW5kICAgU2FyaXB1dHJhIGJ5IHRoZSBCdWRkaGEuIFRoZSBkcmFtYSBoYXMgYSBjbG9zZSByZWxhdGlvbiB3aXRoIHRoZSBjbGFzc2ljYWwgdHlwZSBhcyBsYWlkIGRvd24gaW4gdGhlICAgTmF0eWFzYXN0cmEuICAgU291cmNlOiBuaXRpbiBzaW5naGFuaWEoY2gtaW5kaWFuIHRoZWF0cmUpLTJuZCBlZGl0aW9uICAgaHR0cHM6Ly93d3cuaW5kaWFuZXR6b25lLmNvbS81NC9hc3ZhZ2hvc2hhLmh0bSAgIGh0dHBzOi8vbGVhcm5pbmdhbmRjcmVhdGl2aXR5LmNvbS9yYWJpbmRyYW5hdGgtdGFnb3JlLWNoaXRyYW5nYWRhLWVuZ2xpc2gtdHJhbnNsYXRpb24tcGFydC1pLyAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMvVmlrcmFtb3J2YXNoaSAgIGh0dHBzOi8vd3d3Lndpc2RvbWxpYi5vcmcvc2Fuc2tyaXQvYm9vay8zOS9tYWhhdmlyYWNhcml0YSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following ancient and  medieval Indian texts is/are dedicated to  Mathematics?  1. Uttaratantra  2. Navankura  3. Silpratnakosa  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGhhcyBhIGdsb3Jpb3VzIGN1bHR1cmUgb2YgZWR1Y2F0aW9uLCBzY2llbmNlIGFuZCB0ZWNobm9sb2d5IGZyb20gYW5jaWVudCB0aW1lcyBhbmQgaGFzIG1hZGUgICBzaWduaWZpY2FudCBjb250cmlidXRpb25zIGluIHRoZSBmaWVsZCBvZiBhc3Ryb25vbXksIGFyaXRobWV0aWMsIGdlb21ldHJ5LCBtZXRhbGx1cmd5LCBBeXVydmVkaWMgc3lzdGVtIG9mICAgbWVkaWNpbmUgYW5kIHN1cmdlcnkuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gIFV0dGFyYXRhbnRyYSB3YXMgd3JpdHRlbiBieSBOYWdhcmp1bmEgd2hpY2ggaXMgYSBzdXBwbGVtZW50IHRvIFN1c2hydXRhICAgU2FtaGl0YSBhbmQgZGVhbHMgd2l0aCBwcmVwYXJhdGlvbiBvZiBtZWRpY2luYWwgZHJ1Z3MuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEtyaXNobmEgb2YgdGhlIFZhbGhhbGxhIGZhbWlseSBicm91Z2h0IG91dCBOYXZhbmt1cmEgb24gdGhlIEJpamFnYW5pdCBvZiBCaGFza2FyYS0gIElJIGFuZCBlbGFib3JhdGlvbiBvZiB0aGUgcnVsZXMgb2YgaW5kZXRlcm1pbmF0ZSBlcXVhdGlvbnMgb2YgdGhlIGZpcnN0IGFuZCBzZWNvbmQgb3JkZXJzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIGEuIFRyZWF0aWVzIHN1Y2ggYXMgU2lscHJhdG5ha29zYSwgU2lscGFwcmFkaXBhLCBTaWxwYXNhc3RyYSwgQmh1YmFuYXByYWRpcGEsICAgTWF5YW1hdGFtLCBWaXNudWRoYXJtb3R0YXJhIFB1cmFuYSwgU2lscGFzYXJhbmkgZXRjLiB3ZXJlIGNvZGlmaWVkIGJ5IFNpbHBpbjsgdGhlc2UgdHJlYXRpc2VzIHRocm93ICAgYW1wbGUgbGlnaHQgb24gdGhlIGFuY2llbnQgSW5kaWFuIGFyY2hpdGVjdHVyZSBhbmQgYXJjaGFlb21ldHJ5ICAgU291cmNlOiAgaHR0cHM6Ly93d3cubmlvcy5hYy5pbi9tZWRpYS9kb2N1bWVudHMvU2VjSUNIQ291ci9FbmdsaXNoL0NILjE2LnBkZiAgIGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzM0MDU3LzEvVW5pdC0xMy5wZGYgICBOSVRJTiBTSU5HSEFOSUEgKENILVNjaWVuY2UgYW5kIFRlY2hub2xvZ3kgdGhyb3VnaCB0aGUgYWdlcyktIDJORCBFRElUSU9OICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following was/were  introduced by Mughals in India?  1. Introduction of paper  2. Distillation of Perfumes through distillation  technique  3. Development of Rhinoplasty  4. Gunpowder   Select the correct answer using the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1lZGlldmFsIEluZGlhIHdpdG5lc3NlZCBjb25zaWRlcmFibGUgaW1wcm92ZW1lbnQgYW5kIGNoYW5nZXMgaW4gdGhlIGZpZWxkIG9mIHRlY2hub2xvZ3kuIFdoaWxlIHRoZXNlICAgY2hhbmdlcyB3ZXJlIGxhcmdlbHkgYSByZXN1bHQgb2YgZGlmZnVzaW9uIGZyb20gb3V0c2lkZSwgc29tZSB0ZWNobm9sb2dpY2FsIGlubm92YXRpb25zIGFsc28gb3JpZ2luYXRlZCBpbiAgIEluZGlhLiAgICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBQYXBlciB3YXMgaW50cm9kdWNlZCBpbiBJbmRpYSBieSB0aGUgQXJhYnMuIFRoZSBvbGRlc3QgSW5kaWFuIHBhcGVyIG1hbnVzY3JpcHQgICBpcyBzYWlkIHRvIGRhdGUgZnJvbSAxMjIzLTI0IEFELiBJdCBmaXJzdCByZXBsYWNlZCBiaXJjaC1iYXJrIGFuZCBsYXRlciBwYWxtLWxlYWYgKFNlZSBGaWcuIDUgZm9yIHNwZWNpbWVuIG9mICAgb2xkIHBhcGVyIG1hbnVzY3JpcHRzKS4gVGhlIE11Z2hhbCBydWxlIGhvd2V2ZXIgc3RhcnRlZCBpbiB0aGUgMTZ0aCBjZW50dXJ5LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIEl0dGFyLCBpcyBuYXR1cmFsIHBlcmZ1bWUgb2lsIGRlcml2ZWQgZnJvbSBoZXJicywgZmxvd2VycyBhbmQgd29vZC4gVGhlIG9pbCBpcyAgIG9idGFpbmVkIHRocm91Z2ggaHlkcm8gb3Igc3RlYW0gZGlzdGlsbGF0aW9uLiBIb3dldmVyLCB0aGUgYXJ0IG9mIG1ha2luZyBwZXJmdW1lcyBiZWdhbiBpbiBJbmRpYSBkdXJpbmcgICB0aGUgSW5kdXMgVmFsbGV5IGNpdmlsaXphdGlvbi4gVGhleSBmb3VuZCBhIGRpc3RpbGxhdGlvbiBhcHBhcmF0dXMgbWFkZSBvdXQgb2YgdGVycmFjb3R0YSB3aGljaCBkYXRlZCAgIGJhY2sgaW50byAzMDAwIEJDRS4gVGVycmFjb3R0YSB2ZXNzZWxzIHdlcmUgZGlzY292ZXJlZCB0aGF0IGhhZCBwbHVnZ2VkIG9yaWZpY2VzIGFuZCB3b3ZlbiBtYXRlcmlhbCB0aGF0ICAgY291bGQgYmUgc3F1ZWV6ZWQgb3V0IHRvIGlzb2xhdGUgdGhlIGZyYWdyYW50IG9pbHMuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBSaGlub3BsYXN0eSwgd2hpY2ggbWVhbnMgcmVzdG9yYXRpb24gb2YgYSBtdXRpbGF0ZWQgbm9zZSB0aHJvdWdoIHBsYXN0aWMgICBzdXJnZXJ5LCB3YXMgdGhlIGdyZWF0ZXN0IGNvbnRyaWJ1dGlvbiBvZiBhbmNpZW50IEluZGlhbiBwaHlzaWNpYW4gU2h1c2h1dHJhIGluIHRoZSBmaWVsZCBvZiBBeXVydmVkaWMgICBtZWRpY2luZS4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBBcyB0aGUgTXVnaGFscyBjYW1lIGZyb20gQ2VudHJhbCBBc2lhLCB0aGV5IGJyb3VnaHQgdGhlIENlbnRyYWwgQXNpYW4gbWlsaXRhcnkgICB0cmFkaXRpb24gYWxvbmcgd2l0aCB0aGVtLiBCYWJ1ciBicm91Z2h0IGd1biBwb3dkZXIgaW4gSW5kaWEuIEEgbmV3IHN0eWxlIG9mIGNvbWJhdCB3YXMgYWRvcHRlZCBkdWUgdG8gICB0aGUgYXJyaXZhbCBvZiBndW5wb3dkZXIgYW5kIHdpdGggdGhhdCBhIG5ldyBraW5kIG9mIHRhY3RpY3Mgd2FzIGFsc28gZW1wbG95ZWQuICAgU291cmNlOiAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS82MjY0My8xL0Jsb2NrLTIucGRmICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDI4My8xL1VuaXQtMzIucGRmICAgaHR0cHM6Ly93d3cuZGVjY2FuaGVyYWxkLmNvbS9jb250ZW50LzM3MjAwMy9mcmFncmFuY2Utcm95YWx0eS5odG1sICAgTklUSU4gU0lOR0hBTklBIChDSC1TY2llbmNlIGFuZCBUZWNobm9sb2d5IHRocm91Z2ggdGhlIGFnZXMpLTJORCBFRElUSU9OICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only  ",
        "option2" : "4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 16,
      "question" : "Which of the following articles of the  Indian Constitution deals with the protection of  Indian Culture and Heritage?  1. Article 49  2. Article 154  3. Article 50  4. Article 51A  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIEFydGljbGUgNDkgaW4gdGhlIEluZGlhbiBDb25zdGl0dXRpb24gZGVhbHMgd2l0aCB0aGUgcHJvdGVjdGlvbiBvZiBtb251bWVudHMgYW5kICAgcGxhY2VzIGFuZCBvYmplY3RzIG9mIG5hdGlvbmFsIGltcG9ydGFuY2UuIEl0IHN0YXRlcyB0aGF0IGl0IHNoYWxsIGJlIHRoZSBvYmxpZ2F0aW9uIG9mIHRoZSBTdGF0ZSB0byBwcm90ZWN0ICAgZXZlcnkgbW9udW1lbnQgb3IgcGxhY2Ugb3Igb2JqZWN0IG9mIGFydGlzdGljIG9yIGhpc3RvcmljIGludGVyZXN0cywgZGVjbGFyZWQgYnkgb3IgdW5kZXIgbGF3IG1hZGUgYnkgICBQYXJsaWFtZW50IHRvIGJlIG9mIG5hdGlvbmFsIGltcG9ydGFuY2UsIGZyb20gc3BvbGlhdGlvbiwgZGlzZmlndXJlbWVudCwgZGVzdHJ1Y3Rpb24sIHJlbW92YWwsIGRpc3Bvc2FsIG9yICAgZXhwb3J0LiAgIE9wdGlvbiAyIGlzIGluY29ycmVjdC4gQXJ0aWNsZSAxNTQgaW4gVGhlIENvbnN0aXR1dGlvbiBPZiBJbmRpYSBzdGF0ZXMgdGhhdCB0aGUgZXhlY3V0aXZlIHBvd2VyIG9mIHRoZSBTdGF0ZSAgIHNoYWxsIGJlIHZlc3RlZCBpbiB0aGUgR292ZXJub3IgYW5kIHNoYWxsIGJlIGV4ZXJjaXNlZCBieSBoaW0gZWl0aGVyIGRpcmVjdGx5IG9yIHRocm91Z2ggb2ZmaWNlcnMgc3Vib3JkaW5hdGUgICB0byBoaW0gaW4gYWNjb3JkYW5jZSB3aXRoIHRoaXMgQ29uc3RpdHV0aW9uLiAgIE9wdGlvbiAzIGlzIGluY29ycmVjdC4gQXJ0aWNsZSA1MCBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uIHN0YXRlcyB0aGF0IHRoZSBTdGF0ZSBzaGFsbCB0YWtlIHN0ZXBzIHRvIHNlcGFyYXRlICAgdGhlIGp1ZGljaWFyeSBmcm9tIHRoZSBleGVjdXRpdmUgaW4gdGhlIHB1YmxpYyBzZXJ2aWNlcyBvZiB0aGUgU3RhdGUuICAgT3B0aW9uIDQgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIEFydGljbGUtNTFBKGYpIG9mIEZ1bmRhbWVudGFsIGR1dGllcyBzdGF0ZXMgdG8gdmFsdWUgYW5kIHByZXNlcnZlIHRoZSAgIHJpY2ggaGVyaXRhZ2Ugb2Ygb3VyIGNvbXBvc2l0ZSBjdWx0dXJlLiBJdCBkaXJlY3RzIHBlb3BsZSB0byB2YWx1ZSBhbmQgcHJlc2VydmUgdGhlIHRhbmdpYmxlIGFuZCBpbnRhbmdpYmxlICAgaGVyaXRhZ2Ugb2Ygb3VyIGNvbXBvc2l0ZSBjdWx0dXJlLiAgIFNvdXJjZTogIGh0dHBzOi8vaW5kaWFua2Fub29uLm9yZy9kb2MvOTEwNy8gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 and 4 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to western influence on  Indian music, which of the following  statements is/are correct?   1.  One of the adverse impacts of west on  Indian music is that now the performance  became limited to the privileged.   2.  India adopted instruments like violin from  western countries into Indian music.   3.  After western influence master-disciple  system is a prerequisite to learn music  education.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIGltcGFjdCBvZiB3ZXN0IG9uIEluZGlhbiBtdXNpYyB3YXMgdGhhdCBpdCBhbGxvd2VkIHRoZSBvcmNoZXN0cmF0aW9uIG9mIG11c2ljICAgb24gc3RhZ2UuIFVzZSBvZiBjYXNzZXR0ZXMgcmVwbGFjZWQgb3JhbCB0cmFuc21pc3Npb24gb2YgdHVuZXMgYW5kIHJhZ2FzLiBTbyB0aGUgcGVyZm9ybWFuY2Ugd2hpY2ggd2VyZSAgIGVhcmxpZXIgbGltaXRlZCB0byBhIHByaXZpbGVnZWQgZmV3IGhhdmUgbm93IGJlZW4gdGhyb3duIG9wZW4gdG8gdGhlIHB1YmxpYyBhbmQgY2FuIGJlIHZpZXdlZCBieSAgIHRob3VzYW5kcyBvZiBtdXNpYyBsb3ZlcnMgdGhyb3VnaG91dCB0aGUgY291bnRyeS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW5kaWFucyBhZG9wdGVkIHNvbWUgb2YgdGhlaXIgaW5zdHJ1bWVudHMgc3VjaCBhcyB2aW9saW4gYW5kIGNsYXJpbmV0IHRvIHN1aXQgdGhlICAgZGVtYW5kcyBvZiBJbmRpYW4gbXVzaWMuIE9yY2hlc3RyYXRpb24gb2YgbXVzaWMgb24gc3RhZ2UgaXMgYSBuZXcgZGV2ZWxvcG1lbnQuICAgICAgb2YgMjMgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIG9uZSBvZiB0aGUgd2VzdGVybiBmZWF0dXJlcyBvZiBkZXBlbmRlbmN5IG9uIHRoZSBtYXN0ZXItZGlzY2lwbGUgc3lzdGVtIHRvICAgbGVhcm4gbXVzaWMgZWR1Y2F0aW9uIGlzIG5vIGxvbmdlciBuZWVkZWQgYW5kIGNhbiBiZSBpbXBhcnRlZCB0aHJvdWdoIGluc3RpdHV0aW9ucyB0ZWFjaGluZyBtdXNpYy4gQSAgIG51bWJlciBvZiBhc3NvY2lhdGlvbnMgYW5kIHNvY2lldGllcyBzcHJhbmcgdXAgaW4gdmFyaW91cyBwYXJ0cyBvZiB0aGUgY291bnRyeSB3aXRoIGEgdmlldyB0byBwb3B1bGFyaXplICAgYW5kIGRldmVsb3AgdGhlIEluZGlhbiBtdXNpYy4gVGhlc2Ugc29jaWV0aWVzIGtub3duIGFzIFNhbmdlZXQgU2FtYWogb3IgU2FuZ2VldCBNYW5kYWxzIG5vdCBvbmx5ICAgaW1wYXJ0ZWQgdGVhY2hpbmcgaW4gaW5zdHJ1bWVudGFsIGFuZCB2b2NhbCBtdXNpYyBidXQgYWxzbyBvcmdhbmlzZWQgY3VsdHVyYWwgYW5kIG11c2ljIHByb2dyYW1tZXMuICAgR3JhZHVhbGx5IHNpbWlsYXIgc29jaWV0aWVzIGFsc28gc3ByYW5nIHVwIGF0IFBvb25hLCBMdWNrbm93LCBHd2FsaW9yLCBJbmRvcmUgYW5kIG90aGVyIHByb21pbmVudCB0b3ducyAgIG9mIEluZGlhLiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TZWNJQ0hDb3VyL0VuZ2xpc2gvQ0guMTIucGRmICAgIGh0dHBzOi8vd3d3Lmhpc3RvcnlkaXNjdXNzaW9uLm5ldC9oaXN0b3J5LW9mLWluZGlhL2luZGlhbi1tdXNpYy1kdXJpbmctYnJpdGlzaC1wZXJpb2QvNjA1NyAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to Indian puppetry,  consider the following statements:  1. Putul Naach is influenced by the Jatra folk  theatre of West Bengal.  2. Putul Naach is also famous for showing  social issues like dowry and other social  evils.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQdXR1bCBOYWNoaCBpcyB0aGUgdHJhZGl0aW9uYWwgcm9kIHB1cHBldCBkYW5jZSBvZiBCZW5nYWwtT2Rpc2hhLUFzc2FtIFJlZ2lvbi4gVGhlIGZpZ3VyZXMgYXJlIGdlbmVyYWxseSAgIHRocmVlIHRvIGZvdXIgZmVldCwgaGlnaC4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gRnJvbSB0aGUgcGFzdCBmZXcgZGVjYWRlcywgaXQgaGFzIGJlZW4gaW5jcmVhc2luZ2x5IGluZmx1ZW5jZWQgYnkgdGhlIEphdHJhIGZvbGsgICB0aGVhdHJlIG9mIFdlc3QgQmVuZ2FsLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBCZXNpZGVzIEphdHJhIHBlb3BsZSBhbHNvIHdyaXRlIHRoZWlyIG93biBzY3JpcHQgb24gc29jaWFsIGlzc3VlcyBsaWtlIGRvd3J5IGFuZCAgIG90aGVyIHNvY2lhbCBldmlscy4gICAgS25vd2xlZGdlIGJhc2U6ICBQdXR1bCBOYWNoaCBwdXBwZXRzIGdlbmVyYWxseSBoYXZlIHRocmVlIGpvaW50cyAtIGF0IHRoZSBuZWNrIGFuZCBhdCB0aGUgc2hvdWxkZXJzLiBUaGUgICBwdXBwZXRlZXJzLCBlYWNoIG9mIHdob20gY29udHJvbCBhIHNpbmdsZSBwdXBwZXQgYnkgbWVhbnMgb2YgYSByb2QgYXR0YWNoZWQgdG8gaGlzL2hlciB3YWlzdCwgYXJlIHBsYWNlZCAgIGJlaGluZCBhIGhpZ2ggY3VydGFpbi4gVGhlIHB1cHBldGVlcnMgbW92ZSBiZWhpbmQgdGhlIGN1cnRhaW4sIGltcGFydGluZyBzaW1pbGFyIG1vdmVtZW50cyB0byB0aGUgICBwdXBwZXRzLiBUaGUgcGVyZm9ybWFuY2UgaXMgYWNjb21wYW5pZWQgYnkgYSBtdXNpY2FsIHRyb29wIG9mIHRocmVlIHRvIGZvdXIgbXVzaWNpYW5zIHBsYXlpbmcgICBoYXJtb25pdW0sIGN5bWJhbHMgYW5kIHRhYmxhLiBUaGUgcHVwcGV0cyBvZiBPcmlzc2EgYXJlIHNtYWxsZXIgdGhhbiB0aG9zZSBmcm9tIEJlbmdhbCBvciBBbmRocmEgICBQcmFkZXNoLiBSb2QgcHVwcGV0IHNob3dzIG9mIE9yaXNzYSBhcmUgbW9yZSBvcGVyYXRpYyBhbmQgcHJvc2UgZGlhbG9ndWVzIGFyZSBzZWxkb20gdXNlZC4gICAgU291cmNlOiBJbmRpYW4gQ3VsdHVyZSwgTml0aW4gU2luZ2hhbmlhLCAzcmQgRWRpdGlvbiwgQ2hhcHRlci04ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to Indian theatre, consider  the following pairs.   Indian theatre  Description   1. Daskathia dead ancestors are  worshipped in coastal  Karnataka  2. Garoda art form of Brahmin  community of Gujrat  3. Kariyila open air theatre popular  in Himachal Pradesh  Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQYWlyIDEgaXMgaW5jb3JyZWN0LiBEYXNoa2F0aGlhIGlzIGEgZm9ybSBvZiBmb2xrIHRoZWF0cmUgb2YgT3Jpc3NhLiBLYXRoYScgbWVhbnMgdHdvIHdvb2RlbiBwaWVjZXMgcGxheWVkICAgaW4gdHVuZSB3aXRoIHRoZSBwcmF5ZXIgb2YgdGhlIGRldm90ZWUuIFRoZSBwYXJ0eSBjb25zaXN0cyBvZiB0d28gcGVyc29ucy4gT25lIGlzIHRoZSBjaGllZiBzaW5nZXIsIHRoZSBvdGhlciAgIGlzIHRoZSAnUGFsaWEnIHdobyBoZWxwcyBoaW0gaW4gYWxsIHJlc3BlY3RzIGluIHNpbmdpbmcgYW5kIGFjdGluZy4gVGhpcyBmb2xrIGZvcm0gaXMgbWFpbmx5IGFzc29jaWF0ZWQgd2l0aCBhICAgd29yc2hpcCBvZiBMb3JkIFNoaXZhLiBXaGVyZWFzIGluIEJodXRhIGFyYWRobmEsIGRlYWQgYW5jZXN0b3JzIGFyZSB3b3JzaGlwcGVkIGFuZCBpcyBjb21tb24gaW4gICBjb2FzdGFsIEthcm5hdGFrYS4gS29sYSBpcyB0aGUgY2hpZWYgZm9ybSBvZiBCaG9vdGEgdGhlYXRyZS4gICAgIFBhaXIgMiBpcyBjb3JyZWN0LiBHYXJvZGEgaXMgcG9wdWxhciBhcnQgZm9ybSBvZiBCcmFobWluIGNvbW11bml0eSBvZiBHdWpyYXQuIEl0IHVzZXMgcGFpbnRlZCBwaWN0dXJlcyB0byAgIG5hcnJhdGUgc3RvcmllcyBvZiByb21hbmNlIGFuZCBWYWxvdXIuICAgIFBhaXIgMyBpcyBjb3JyZWN0LiBLYXJpeWlsYSBpcyBhbiBvcGVuLWFpciBmb2xrIHRoZWF0cmUgb2YgSGltYWNoYWwgUHJhZGVzaC4gVGhlIHBlcmZvcm1hbmNlIG9mIEthcml5YWxhIGlzICAgbm90IHRoZSBlbmFjdG1lbnQgb2YgYSBzaW5nbGUgcGxheSBpbiB0aGUgc2VxdWVuY2Ugb2YgaW50cm9kdWN0aW9uLCBzdG9yeWxpbmUgYW5kIGNvbmNsdXNpb24sIGJ1dCBpbiBmYWN0LCBpdCdzICAgYW4gZW50ZXJ0YWluaW5nIHNlcmllcyBvZiBzbWFsbCBwbGF5bGV0cywgZmFyY2VzLCBza2l0cywgcmV2dWVzIGFuZCBidXJsZXNxdWVzLiAgICBTb3VyY2U6ICBOaXRpbiBTaW5naGFuaWEgY2hhcHRlci03IHBhZ2UtNy42LCA3LjcgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 20,
      "question" : "With reference to the development of  science in medieval period, which of the  following statements are correct?   1.  In Ain-i Akbari Abu'l Fazl's records show  familiarity with the knowledge of laws of  motion.   2.  During this period, India discovered the  freezing mixture for cooling water.  3.  There was increasing interaction between  Unani System bought by Muslims and Indian  Ayurvedic System leading to cure of many  diseases.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBIGZhbWlsaWFyaXR5IHdpdGggdGhlIGtub3dsZWRnZSBvZiBzcGVjaWZpYyBncmF2aXR5IGFuZCBsYXdzIG9mIG1vdGlvbiwgYmFzZWQgb24gICBjbGFzc2ljIHNvdXJjZXMsIHdhcyBzaG93biBieSBBYnUnbCBGYXpsLiBUaGlzIGlzIGluZGljYXRlZCBieSBhIGNoYXB0ZXIgZGV2b3RlZCB0byB0aGVzZSBtYXR0ZXJzIGluIGhpcyBib29rICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIEFpbi1pIEFrYmFyaSwgY29tcGxldGVkIGluIDE1OTUuIEluIHRoaXMgaGUgc2hvd3MgYSBjbGVhciB1bmRlcnN0YW5kaW5nIG9mIHRoZSBBcmNoaW1lZGVzIHByaW5jaXBsZSwgYW5kICAgdGhlIGRpZmZlcmVuY2VzIGluIHRoZSB3ZWlnaHRzIG9mIGJvZGllcyBpbiBhaXIgYW5kIHVuZGVyIHdhdGVyLiBIZSBhbHNvIGdyYXBwbGVkIHdpdGggdGhlIHByb2JsZW0gb2YgICBtb2xlY3VsYXIgYXJyYW5nZW1lbnQgaW4gdmFyaW91cyBzdWJzdGFuY2VzIGFuZCB0cmllZCB0byByZWxhdGUgaXQgdG8gc3BlY2lmaWMgZ3Jhdml0eS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlcmUgd2FzIGh1Z2UgYWR2YW5jZW1lbnQgaW4gbWV0YWxsdXJneSBkdXJpbmcgbWVkaWV2YWwgdGltZXMuIEluZGlhIHNlZW1zIHRvICAgaGF2ZSBkaXNjb3ZlcmVkIHRoZSBmcmVlemluZyBtaXh0dXJlIGJlZm9yZSBFdXJvcGUuIFNhbHRwZXRyZSAocG90YXNzaXVtIG5pdHJhdGUpIHdhcyB1c2VkIGZvciBjb29saW5nICAgd2F0ZXIgYmVmb3JlIDE1ODAuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIEdyZWVrIChVbmFuaSkgc3lzdGVtIG9mIG1lZGljaW5lIHN0aWxsIHdpZGVseSBwcmFjdGlzZWQgaW4gSW5kaWEgYXJyaXZlZCB3aXRoICAgdGhlIE11c2xpbXMuIE9uZSB3b3VsZCBoYXZlIGV4cGVjdGVkIGltcHJvdmVtZW50IGJ5IHRoZSBtdXR1YWwgZXhjaGFuZ2UgYmV0d2VlbiBpdCBhbmQgdGhlIGFscmVhZHkgICBleGlzdGluZyBJbmRpYW4gc3lzdGVtIG9mIEF5dXJ2ZWRhLiBCdXQgdGhlIHR3byBzeXN0ZW1zIHJlbWFpbmVkIHNlcGFyYXRlLiBUaGUgdHdvIHN5c3RlbXMgY29udGludWVkICAgdG8gY29leGlzdCBidXQgcHJvYmFibHkgd2l0aG91dCBhbnkgZ3JlYXQgaW50ZXJhY3Rpb24uICAgIFNvdXJjZTogaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8xMjE5NS8xL1VuaXQtNS5wZGYgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 Only   ",
        "option2" : "2 and 3 Only   ",
        "option3" : "1, 2 and 3   ",
        "option4" : "1 and 3 only      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements  regarding 'Choppu Samaan':   1.  They are kitchen set toys made up of fine  wood with polished edges.   2.  They are not made from fine quality of  sandalwood.   3.  They are a traditional art form of Tamil  Nadu.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJlY2VudGx5LCBhIFdlbGZhcmUgQXNzb2NpYXRpb24gb2Ygd29vZGVuIHRveW1ha2VycyBuYW1lZCBBbWJhc2FtdWRyYW0gQmhhcmFuaSBNYXJhIFZhcm5hIEthZGFzYWwgICBBcnRpc2FucyBoYXMgYXBwbGllZCBmb3IgdGhlIEdlb2dyYXBoaWNhbCBJbmRpY2F0aW9ucyB0YWcgZm9yIENob3BwdSBTYW1hYW4uICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIENob3BwdSBTYW1hYW4gaXMgYSB0cmFkaXRpb25hbCB0b3kgZm9yIGtpZHMuIEl0IGlzIGEga2l0Y2hlbiBzZXQgdGhhdCBpcyBtYWRlIHVwIG9mICAgZmluZSB3b29kIHdpdGggcG9saXNoZWQgZWRnZXMuIEZ1cnRoZXJtb3JlLCBpdCBpcyBwYWludGVkIHdpdGggaGFybWxlc3MgbmF0dXJhbCBjb2xvdXJzLCBzbyBpdCBpcyBzYWZlIGZvciAgIGNoaWxkcmVuLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE9yaWdpbmFsbHksIGFydGlzdHMgdXNlZCB0ZWFrIGFuZCByb3Nld29vZCwgYnV0IG5vdyB0aGVyZSBpcyBtb3JlIHVzZSBvZiBldWNhbHlwdHVzICAgYW5kIHJ1YmJlcndvb2QuIENob3BwdSBTYW1hYW4gaXMgbm90IG1hZGUgZnJvbSBzYW5kYWx3b29kLiBUaGUgd29vZCBpcyBzZWFzb25lZCBieSB0aGUgbWV0aG9kIG9mICAgYWlyIGRyeWluZy4gSXQgaXMgdGhlbiBjdXQgaW50byBzbWFsbGVyIGN5bGluZGVycyB0byBmaXQgb250byBhIGxhdGhlIChtYWNoaW5lIGZvciBzaGFwaW5nIHdvb2QpLiBUaGUgdG95cyBhcmUgICBzaGFwZWQgb24gdGhhdCBsYXRoZSB3aXRoIHN0YW5kYXJkIGNhcnBlbnRyeSB0b29scy4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQ2hvcHB1IFNhbWFhbiBpcyBtYWRlIGluIFRpcnVuZWx2ZWxpLCBUYW1pbCBOYWR1LiBUaGUgaGlzdG9yeSBvZiB0aGVzZSB0b3lzIGNhbiAgIGJlIHRyYWNlZCBiYWNrIHRvIGF0IGxlYXN0IDMwMCB5ZWFycy4gSXQgZmluZHMgbWVudGlvbiBpbiB0aGUgYm9vaywgQ290dGFnZSBJbmR1c3RyaWVzIG9mIEluZGlhICgxOTQ2KSwgRGlzdHJpY3QgICBDZW5zdXMgSGFuZGJvb2ssIFZpbGxhZ2UgYW5kIFRvd24gRGlyZWN0b3J5LCBUaXJ1bmVsdmVsaSAtIENlbnN1cyBvZiBJbmRpYSAxOTcxLCBTZXJpZXMgICAgIFNvdXJjZTogIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20gaGUtdG93bi1vZi13b29kZW4tdG95cy8gICAgQW1iYXNhbXVkcmFtIENob3BwdSBTYW1hbiBtYWtlcnMgZXllIGludCdsIG1hcmtldCwgR0kgdGFnIC0gRFROZXh0LmluICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following is incorrect with  reference to the Indo- Greek and Kushana  coins?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSByZWlnbiBvZiBJbmRvLUdyZWVrcyB3YXMgZnJvbSAxODAgQkMgdG8gYXJvdW5kIDEwIEFELiBJbmRvLUdyZWVrcyBpbnRyb2R1Y2VkIHRoZSBmYXNoaW9uIG9mIHNob3dpbmcgICB0aGUgYnVzdG9yIGhlYWQgb2YgdGhlIHJ1bGVyIG9uIHRoZSBjb2lucy4gICBPcHRpb24gYSBpcyBjb3JyZWN0OiAgICBUaGUgY29pbnMgb2YgdGhlIEdyZWVrIGtpbmdzIGluIEluZGlhIHdlcmUgYmlsaW5ndWFsLCBpLmUuLCB3cml0dGVuIGluIEdyZWVrIG9uIHRoZSBmcm9udCBzaWRlIGFuZCBpbiBQYWxpICAgbGFuZ3VhZ2UgKGluIEtoYXJvc3RoaSBzY3JpcHQpIG9uIHRoZSBiYWNrLiBUaGUgR3JlZWsgZ29kcyBhbmQgZ29kZGVzc2VzIGNvbW1vbmx5IHNob3duIG9uIHRoZSBsbmRvLSAgIEdyZWVrIGNvaW5zIHdlcmUgWmV1cywgSGVyY3VsZXMsIEFwb2xsbyBhbmQgUGFsbGFzIEF0aGVuZS4gVGhlIGluaXRpYWwgc2VyaWVzIHVzZWQgaW1hZ2VzIG9mIEdyZWVrIGRlaXRpZXMgICBidXQgbGF0ZXIgY29pbnMgaGFkIGltYWdlcyBvZiBJbmRpYW4gZGVpdGllcyBhcyB3ZWxsLiAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6ICBUaGUgY29pbnMgaXNzdWVkIGJ5IHRoZSBJbmRvLSBHcmVlayBydWxlcnMgYXJlIHNpZ25pZmljYW50IGJlY2F1c2UgdGhleSBjYXJyaWVkICAgZGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGlzc3VpbmcgbW9uYXJjaCBhbmQgdGhlIHllYXIgb2YgaXNzdWUgYW5kIHNvbWV0aW1lcyBhbiBpbWFnZSBvZiB0aGUgICByZWlnbmluZyBraW5nLiBDb2lucyB3ZXJlIG1haW5seSBtYWRlIG9mIHNpbHZlciwgY29wcGVyLCBuaWNrZWwgYW5kIGxlYWQuICAgT3B0aW9uIGMgaXMgY29ycmVjdDogSW5kby1HcmVlayBLdXNoYW4ga2luZ3MgaW50cm9kdWNlZCB0aGUgR3JlZWsgY3VzdG9tIG9mIGVuZ3JhdmluZyBwb3J0cmFpdCBoZWFkcyBvbiAgIHRoZSBjb2lucy4gS3VzaGFuIGNvaW5zIHdlcmUgYWRvcm5lZCB3aXRoIGhlbG1ldGVkIGJ1c3Qgb2YgdGhlIGtpbmcgb24gb25lIHNpZGUsIGFuZCB0aGUga2luZydzIGZhdm91cml0ZSAgIGRlaXR5IG9uIHRoZSByZXZlcnNlLiBUaGUgY29pbnMgaXNzdWVkIGJ5IEthbmlzaGthIGR1cmluZyBLdXNoYW5hIHBlcmlvZCBlbXBsb3llZCBvbmx5IEdyZWVrICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGNoYXJhY3RlcnMuIFRoZSBleHRlbnNpdmUgY29pbmFnZSBvZiB0aGUgS3VzaGFuIEVtcGlyZSBhbHNvIGluZmx1ZW5jZWQgYSBsYXJnZSBudW1iZXIgb2YgdHJpYmVzLCBkeW5hc3RpZXMgICBhbmQga2luZ2RvbXMsIHdoaWNoIGJlZ2FuIGlzc3VpbmcgdGhlaXIgb3duIGNvaW5zLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogIFRoZSBLdXNoYW4gcmVsaWdpb3VzIHBhbnRoZW9uIGlzIGV4dHJlbWVseSB2YXJpZWQsIGFzIHJldmVhbGVkIGJ5IHRoZWlyIGNvaW5zIGFuZCAgIHRoZWlyIHNlYWxzLCBvbiB3aGljaCBtb3JlIHRoYW4gMzAgZGlmZmVyZW50IGdvZHMgYXBwZWFyLCBiZWxvbmdpbmcgdG8gdGhlIEhlbGxlbmlzdGljLCB0aGUgSXJhbmlhbiwgYW5kICAgdG8gYSBsZXNzZXIgZXh0ZW50IHRoZSBJbmRpYW4gd29ybGQuIEdyZWVrIGRlaXRpZXMsIHdpdGggR3JlZWsgbmFtZXMgYXJlIHJlcHJlc2VudGVkIG9uIGVhcmx5IGNvaW5zLiAgIEluZG8tR3JlZWtzIGNvaW5zLCB0aGVpciBvcmlnaW5hbCBjb2lucyB0b28gaGFkIHRoZSBraW5nIGZpZ3VyaW5nIG9uIG9idmVyc2UgYW5kIHNvbWUgZGVpdHksIHByZWZlcmFibHkgICBHcmVlayBHb2QsIG9uIHRoZSByZXZlcnNlLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The coins of the Indo-Greek rulers in India   were bilingual.  ",
        "option2" : " The coins of Indo Greek rulers carried   detailed information about the issuing   monarch.  ",
        "option3" : " The coins issued by Kanishka during   Kushana period employed only Greek   characters.  ",
        "option4" : " Kushan and Indo-Greeks coins did not have   deities or Gods engraved on them.   "
      }
    },
    {
      "index" : 23,
      "question" : "With reference to coins during Mughal  period, consider the following statements:  1.  Shahrukhi were the silver coins issued by  Babar.  2.  Aurangzeb discarded the tradition of  inscribing Kalima and Caliph's name on the  coins.  3.  All Mughal rulers issued coins depicting  different zodiac signs.  Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFVuZGVyIHRoZSBNdWdoYWxzLCB0aGUgY3VycmVuY3kgc3lzdGVtIHdhcyB2ZXJ5IHdlbGwgb3JnYW5pc2VkLiBBIGhpZ2ggbGV2ZWwgb2YgcHVyaXR5IG9mIG1ldGFscyB3YXMgYWxzbyAgIGFjaGlldmVkLiBUaGUgTXVnaGFsIGN1cnJlbmN5IHN5c3RlbSBtYXkgYmUgdGVybWVkIGFzIHRyaW1ldGFsbGljLiBDb2lucyB3ZXJlIG9mIHRocmVlIG1ldGFscywgdml6LCAgIGNvcHBlciwgc2lsdmVyIGFuZCBnb2xkLiBIb3dldmVyLCB0aGUgc2lsdmVyIGNvaW4gd2FzIHRoZSBiYXNlIG9mIHRoZSBjdXJyZW5jeS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgQmFiYXIgaXNzdWVkIGhpcyBjb2lucyBpbiBzaWx2ZXIgYW5kIGNvcHBlci4gSGlzIGxhcmdlIGFuZCB0aGluLWZsYW5rZWQgc2lsdmVyIGNvaW5zICAgYXJlIHJlZmVycmVkIHRvIGFzIFNoYWhydWtoaS4gVGhlIGZvdXIgZ3JlYXQgQ2FsaXBocycgbmFtZXMgYW5kIEthbGltYSB3ZXJlIHByaW50ZWQgb24gb25lIHNpZGUgb2YgdGhlICAgU2hhaHJ1a2hpIGNvaW5zLCB3aGlsZSB0aGUgcnVsZXIncyBuYW1lLCBoaXMgdGl0bGUsIHRoZSBkYXRlLCBhbmQgdGhlIG1pbnQgbmFtZSB3ZXJlIHByaW50ZWQgb24gdGhlIG90aGVyLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBsb25nLXN0YW5kaW5nIHByYWN0aWNlIG9mIGluc2NyaWJpbmcgS2FsaW1hIGFuZCB0aGUgbmFtZXMgb2YgQ2FsaXBocyBvbiB0aGUgICBjb2lucyB3YXMgYWJhbmRvbmVkIGJ5IEF1cmFuZ3plYiwgd2hvIG1hZGUgYSBzaWduaWZpY2FudCBhbHRlcmF0aW9uIHRvIHRoZSBpbnNjcmlwdGlvbiBvZiB0aGUgTXVnaGFsICAgY29pbmFnZS4gS2FsaW1hIGFuZCBDYWxpcGhzIG5hbWVzIHdlcmUgcmVwbGFjZWQgYnkgYW4gZW50aXJlbHkgbmV3IGxlZ2VuZCB0aGF0IGhhZCBub3RoaW5nIHRvIGRvIHdpdGggICBhbnkgcmVsaWdpb24sIG5vdCBldmVuIElzbGFtLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gSmFoYW5naXIgKG5vdCBhbGwgTXVnaGFscykgd2FzIHRoZSBlbXBlcm9yIG9mIEluZGlhIHdobyBpcyBrbm93biB0byBoYXZlICAgaXNzdWVkIGdvbGQgYW5kIHNpbHZlciBjb2lucyB3aXRoIGltYWdlcyBvZiBzZXZlcmFsIHpvZGlhYyBzaWducy4gSGUgaXNzdWVkIGNvaW5zIGZlYXR1cmluZyBib3RoIGhpcyBvd24gICBwb3J0cmFpdCBhbmQgdGhhdCBvZiBoaXMgZmF0aGVyLCBBa2Jhci4gT24gSmFoYW5naXIncyBjb2lucywgYW4gaW5zY3JpcHRpb24gaW4gdGhlIGZvcm0gb2YgYSBQZXJzaWFuIGNvdXBsZXQgICB3YXMgZnJlcXVlbnRseSBlbXBsb3llZC4gICBTb3VyY2U6ICAgIGh0dHA6Ly9lcGdwLmluZmxpYm5ldC5hYy5pbi9lcGdwZGF0YS91cGxvYWRzL2VwZ3BfY29udGVudC9TMDAwODI5SUMvUDAwMTczOC9NMDIzOTkzL0xNLzE1MCAgNzY5OTUyMVAwOS1NMjUtVGhlTXVnaGFsQ29pbmFnZXMtTE0ucGRmICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to the Tholpavakoothu  puppetry, which of the following statement(s)  is/are correct?  1.  It is a form of shadow puppetry prevalent in  Kerala.  2.  The story of Tholppavakoothu performance  is based on Indian epic, Ramayana.  3.  The narrative used for the performance is a  mixture of prose and poetry  called 'Adalpattu'.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGlzIHNhaWQgdG8gYmUgdGhlIGhvbWUgb2YgcHVwcGV0cy4gVGhlIGVhcmxpZXN0IHJlZmVyZW5jZSB0byB0aGUgYXJ0IG9mIHB1cHBldHJ5IGlzIGZvdW5kIGluIFRhbWlsICAgY2xhc3NpYyAnU2lsYXBwYWRpa2FhcmFtJyB3cml0dGVuIGFyb3VuZCB0aGUgMXN0IG9yIDJuZCBjZW50dXJ5IEIuQy4gTGlrZSB0cmFkaXRpb25hbCB0aGVhdHJlLCB0aGVtZXMgZm9yICAgcHVwcGV0IHRoZWF0cmUgYXJlIG1vc3RseSBiYXNlZCBvbiBlcGljcyBhbmQgbGVnZW5kcy4gUmVnaW9uYWwgc3R5bGVzIG9mIHBhaW50aW5nIGFuZCBzY3VscHR1cmUgYXJlICAgcmVmbGVjdGVkIGluIHRoZW0uICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gU2hhZG93IHB1cHBldHJ5LCBUaG9scGF2YWtvb3RodSwgaXMgYSBmb3JtIG9mIHRlbXBsZSBhcnQgdGhhdCBpcyBwb3B1bGFyIGluIHRoZSAgIEJoYWdhdmF0aHkgdGVtcGxlcyAobW90aGVyIEdvZGRlc3MpIGluIEtlcmFsYSdzIFBhbGFra2FkIGRpc3RyaWN0IGFuZCBuZWlnaGJvdXJpbmcgYXJlYXMuICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEluIFRob2xwYXZha29vdGh1IHRoZSBwdXBwZXRzLCBrbm93biBhcyBUaG9scHBhdmEgKFRob2wgbWVhbnMgbGVhdGhlciBhbmQgUGF2YSAgIG1lYW5zIHB1cHBldCksIGFyZSBtYW5pcHVsYXRlZCBieSBzdHJpbmdzLCBhbmQgYSBiYWNrZ3JvdW5kIHJvdyBvZiBvaWwgbGFtcHMgaGVscHMgdG8gcHJvamVjdCB0aGVpciAgIHNoYWRvd3Mgb250byBhIHNjcmVlbi4gVGhvbHBwYXZha29vdGh1IHBlcmZvcm1hbmNlIHRha2VzIGl0cyBzdG9yeSBmcm9tIHRoZSBSYW1heWFuYSwgYW4gSW5kaWFuIGVwaWMuICAgSXQgdXNlZCB0byBiZSBjYXJlZnVsbHkgcGVyZm9ybWVkIG92ZXIgdGhlIGNvdXJzZSBvZiBmb3J0eS1vbmUgZGF5cy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBZGFscGF0dHUgaXMgYSBwcm9zZSBhbmQgcG9ldHJ5IGh5YnJpZCB0aGF0IHNlcnZlcyBhcyB0aGUgcGVyZm9ybWFuY2UncyBuYXJyYXRpdmUuICAgS25vd2xlZGdlIEJhc2U6IEFkZGl0aW9uYWwgSW5mb3JtYXRpb24gICAxKSBUaG9scHBhdmFzIGFyZSBtYWRlIG9mIHRoZSBza2luIG9mIGRlZXIgYW5kIHRoZSBwdXBwZXQgZm9ybXMgYXJlIG1hZGUgYnkgbWFraW5nIHNtYWxsIGhvbGVzIGluIHRoZSAgIGxlYXRoZXIgdGhhdCBpcyB0aGVuIGF0dGFjaGVkIHZlcnRpY2FsbHkgdG8gYSBiYW1ib28gc3RpY2suICAgMikgQWNjb21wYW55aW5nIGluc3RydW1lbnRzIGluY2x1ZGUgRXpodXBhcmEsIENoZW5kYSBhbmQgTWFkZGFsYW0uIFRoZSBhcnRpc3RzIGhhdmUgdG8gdW5kZXJnbyAgIHNldmVyYWwgeWVhcnMgb2Ygcmlnb3JvdXMgdHJhaW5pbmcgdG8gbWFzdGVyIHRoaXMgYXJ0IGZvcm0uIFRoZSBwdXBwZXRyeSBpcyBzdGFnZWQgb24gYSBzcGVjaWFsIHN0cnVjdHVyZSAgIGluIHRlbXBsZSBwcmVtaXNlcyBjYWxsZWQgS29vdGh1bWFkYW0uICAgU291cmNlOiBodHRwOi8vd3d3LmtlcmFsYWN1bHR1cmUub3JnIGhvbHBhdmFra29vdGh1LzY5ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 25,
      "question" : "In the context of Indian Puppetry,  consider the following statements:  1.  In Togalu Gombeyatta, puppets differ in size  according to their social status.  2.  In Gombeyatta puppetry, puppets are styled  and designed like the characters of  Yakshagana.  3.  Bommalattam puppetry of Tamil Nadu  features large and heavy puppets.  Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBUb2dhbHUgR29tYmV5YXR0YSBpcyB0aGUgbmFtZSBvZiBLYXJuYXRha2EncyBzaGFkb3cgdGhlYXRyZS4gTW9zdCBvZiB0aGVzZSAgIHB1cHBldHMgYXJlIHF1aXRlIHNtYWxsIGluIHNpemUuIEhvd2V2ZXIsIHRoZSBwdXBwZXRzJyBzaXplcyB2YXJ5IGRlcGVuZGluZyBvbiB0aGVpciBzb2NpYWwgc3RhdHVzOyBmb3IgICBleGFtcGxlLCBraW5ncyBhbmQgcmVsaWdpb3VzIGZpZ3VyZXMgYXJlIGxhcmdlciB0aGFuIG9yZGluYXJ5IHBlb3BsZSBvciBzZXJ2YW50cy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiAgR29tYmV5YXR0YSBhcmUgc3RyaW5nIHB1cHBldHMgb2YgS2FybmF0YWthLiBUaGV5IGFyZSBtb2RlbGxlZCBhZnRlciB0aGUgICBZYWtzaGFnYW5hIGNoYXJhY3RlcnMsIHRoZSByZWdpb24ncyB0cmFkaXRpb25hbCBmb3JtIG9mIHRoZWF0cmUuIFRoZSBoaWdobHkgc3R5bGl6ZWQgR29tYmV5YXR0YSBwdXBwZXQgICBmaWd1cmVzIGluY2x1ZGUgam9pbnRzIGluIHRoZSBlbGJvd3MsIHNob3VsZGVycywgaGlwcywgYW5kIGtuZWVzLiBGaXZlIHRvIHNldmVuIHN0cmluZ3MgdGhhdCBhcmUgYXR0YWNoZWQgdG8gYSAgIHByb3AgYXJlIHVzZWQgdG8gY29udHJvbCB0aGVzZSBwdXBwZXRzLiBUeXBpY2FsbHksIEdvbWJleWF0dGEgZXBpc29kZXMgYXJlIGFkYXB0ZWQgZnJvbSBQcmFzYW5nYXMgb2YgICB0aGUgWWFrc2hhZ2FuYSBwbGF5cy4gVGhlIGFjY29tcGFueWluZyBtdXNpYyBpcyBkcmFtYXRpYyBhbmQgZXhwZXJ0bHkgY29tYmluZXMgZm9sayBhbmQgY2xhc3NpY2FsICAgZWxlbWVudHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQm9tbWFsYXR0YW0gcHVwcGV0cywgd2hpY2ggb3JpZ2luYXRlIGluIFRhbWlsIE5hZHUsIGJsZW5kIHJvZCBhbmQgc3RyaW5nICAgcHVwcGV0cnkgdGVjaG5pcXVlcy4gVGhleSBhcmUgbWFkZSBvZiB3b29kLCBhbmQgdGhlIHN0cmluZ3MgdGhhdCBhcmUgdXNlZCB0byBtYW5pcHVsYXRlIHRoZW0gYXJlICAgYXR0YWNoZWQgdG8gYW4gaXJvbiByaW5nIHRoYXQgdGhlIHB1cHBldGVlciB3ZWFycyBvbiBoaXMgaGVhZCBsaWtlIGEgY3Jvd24uIFNvbWUgb2YgdGhlIHB1cHBldHMgaGF2ZSBqb2luZWQgICBoYW5kcyBhbmQgYXJtcyB0aGF0IGFyZSBjb250cm9sbGVkIGJ5IHJvZHMuIE9mIGFsbCBjb252ZW50aW9uYWwgSW5kaWFuIG1hcmlvbmV0dGVzLCB0aGUgQm9tbWFsYXR0YW0gICBwdXBwZXRzIGFyZSB0aGUgYmlnZ2VzdCwgaGVhdmllc3QsIGFuZCBtb3N0IHZvY2FsLiBBIHB1cHBldCBtYXkgYmUgdXAgdG8gNC41IGZlZXQgdGFsbCBhbmQgdGVuIGtpbG9ncmFtbWVzICAgaW4gd2VpZ2h0LiBWaW5heWFrIFB1amEsIEtvbWFsaSwgQW1hbmF0dGFtLCBhbmQgUHVzZW5rYW5hdHRhbSBhcmUgdGhlIGZvdXIgY29tcG9uZW50cyBvZiB0aGUgZWxhYm9yYXRlICAgcHJlbGltaW5hcmllcyBhdCBCb21tYWxhdHRhbSBUaGVhdHJlLiAgIFNvdXJjZTogaHR0cDovL2NjcnRpbmRpYS5nb3YuaW4vcHVwcGV0Zm9ybXMucGhwICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 26,
      "question" : "The art form is an ancient form of shadow  puppetry in Odisha, the narrative is usually  rooted in mythological tales, Ramayana in  particular. The majority of the characters are  constructed of 3-millimeter-thick goat or  sheep skin; however, God figures are made of  deerskin, and demons are made of stag skin.  They just have black and white colours, and  neither transparency nor articulation are  present. The Bichitra Ramayana's episodes are  described and illustrated by the gayak, or lead  vocalist during the performance.  The above paragraph refers to which of the  following puppetry art form?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gVG9nYWx1IEdvbWJleWF0dGEgaXMgdGhlIG5hbWUgb2YgS2FybmF0YWthJ3Mgc2hhZG93IHRoZWF0cmUuIE1vc3Qgb2YgdGhlc2UgICBwdXBwZXRzIGFyZSBxdWl0ZSBzbWFsbC4gSG93ZXZlciwgdGhlIHB1cHBldHMnIHNpemVzIHZhcnkgZGVwZW5kaW5nIG9uIHRoZWlyIHNvY2lhbCBzdGFuZGluZzsgZm9yIGV4YW1wbGUsICAga2luZ3MgYW5kIHJlbGlnaW91cyBmaWd1cmVzIGFyZSBsYXJnZXIgdGhhbiBvcmRpbmFyeSBwZW9wbGUgb3Igc2VydmFudHMuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0LiBUaG9sdSBCb21tYWxhdGEgaXMgYSBzaGFkb3cgdGhlYXRyZSBmcm9tIEFuZGhyYSBQcmFkZXNoLiBUaGUgaHVnZSBwdXBwZXRzIGhhdmUgICBqb2ludHMgaW4gdGhlIHNob3VsZGVycywgZWxib3dzLCBhbmQga25lZXMuIEVhY2ggc2lkZSBvZiB0aGVtIGlzIGNvbG91cmVkLiBBcyBhIHJlc3VsdCwgdGhlIHNoYWRvd3MgdGhlc2UgICBwdXBwZXRzIGNhc3Qgb24gdGhlIHNjcmVlbiBhcmUgY29sb3VyZWQuIFRoZSB0aGVtZSBvZiB0aGUgcHVwcGV0IHNob3dzIGlzIHRha2VuIGZyb20gdGhlIFJhbWF5YW5hLCAgIE1haGFiaGFyYXRhLCBhbmQgUHVyYW5hcywgYW5kIHRoZSBtdXNpYyBpcyBtb3N0bHkgaW5mbHVlbmNlZCBieSB0aGUgbG9jYWwgY2xhc3NpY2FsIG11c2ljLiAgIE9wdGlvbiBjIGlzIGNvcnJlY3QuIFJhdmFuYWNoaGF5YSBpcyB0aGUgdHJhZGl0aW9uYWwgc2hhZG93IHRoZWF0cmUgb2YgT2Rpc2hhLiBSZWd1bGFyIGNoYXJhY3RlcnMgd2VyZSAgIGN1dCBmcm9tIGdvYXQgb3Igc2hlZXBza2luLiBUaGUgZWlnaHQtcGVyc29uIGNvbXBhbnkgY29uc2lzdHMgb2YgZm91ciBwdXBwZXRlZXJzIGFuZCBmb3VyIE9yaXlhLXNpbmdpbmcgICBtdXNpY2lhbnMuIFJhdmFuYS1jaGhheWEgZm9sbG93cyB0cmFkaXRpb25hbCBzdHlsZSBpbiBzaW5naW5nIHRoZSBseXJpY3MgZnJvbSBWaWNoaXRyYSBSYW1heWFuYS4gVGhlICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFZpY2hpdHJhIFJhbWF5YW5hLCBvbmUgb2Ygc2V2ZXJhbCByZWdpb25hbCByZW5kaXRpb25zIG9mIHRoZSBlcGljIFJhbWF5YW5hLCAodHJhbnNsYXRlZCBpbnRvIE9yaXlhIGF0IHRoZSAgIGJlZ2lubmluZyBvZiB0aGUgMTh0aCBjZW50dXJ5KSBhcmUgbmFycmF0ZWQgYW5kIHBvcnRyYXllZCBieSB0aGUgZ2F5YWssIG9yIGxlYWQgc2luZ2VyLiAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIFRoZSBzdHJpbmcgcHVwcGV0cyBvZiBPcmlzc2EgYXJlIGtub3duIGFzIEt1bmRoZWkuIE1hZGUgb2YgbGlnaHQgd29vZCwgdGhlIE9kaXNoYSAgIHB1cHBldHMgaGF2ZSBubyBsZWdzIGJ1dCB3ZWFyIGxvbmcgZmxvd2luZyBza2lydHMuIFRoZXkgaGF2ZSBtb3JlIGpvaW50cyBhbmQgYXJlLCB0aGVyZWZvcmUsIG1vcmUgdmVyc2F0aWxlLCAgIGFydGljdWxhdGUgYW5kIGVhc3kgdG8gbWFuaXB1bGF0ZS4gVGhlIHB1cHBldGVlcnMgb2Z0ZW4gaG9sZCBhIHdvb2RlbiBwcm9wLCB0cmlhbmd1bGFyIGluIHNoYXBlLCB0byB3aGljaCAgIHN0cmluZ3MgYXJlIGF0dGFjaGVkIGZvciBtYW5pcHVsYXRpb24uIFRoZSBjb3N0dW1lcyBvZiBLdW5kaGVpIHJlc2VtYmxlIHRob3NlIHdvcm4gYnkgYWN0b3JzIG9mIHRoZSBKYXRyYSAgIHRyYWRpdGlvbmFsIHRoZWF0cmUuIFRoZSBtdXNpYyBpcyBkcmF3biBmcm9tIHRoZSBwb3B1bGFyIHR1bmVzIG9mIHRoZSByZWdpb24gYW5kIGlzIHNvbWV0aW1lcyBpbmZsdWVuY2VkICAgYnkgdGhlIG11c2ljIG9mIE9kaXNoYSBkYW5jZS4gICBTb3VyY2U6ICBodHRwczovL3dlcGEudW5pbWEub3JnL2VuL3JhdmFuYWNoaGF5YS8gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Togalu Gombeyatta  ",
        "option2" : "Tholu Bommalata  ",
        "option3" : "Ravanachhaya  ",
        "option4" : "Kundhei      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to Chadar Badar puppetry,  which of the following statement(s) is/are  correct?  1. Chadar Badar puppetry is practiced by the  members of Santhal community.  2. In this puppetry form the performance is  done without any music or song.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBDaGFkYXIgQmFkYXIgYWxzbyByZWZlcnJlZCBhcyBDaGFkYXIgQmFuZGhhbmkgaXMgYSB2ZXJ5IHJhcmUgZm9ybSBvZiBpbmRpZ2Vub3VzICAgU2FudGhhbCBwdXBwZXRyeSBhbmQgYSBoYWxsIG1hcmsgb2YgU2FudGhhbGkgY3VsdHVyZS4gUHVwcGV0cnkgaGFzIGFsd2F5cyBiZWVuIGFzc29jaWF0ZWQgd2l0aCBmb2xrICAgY3VsdHVyZSBhbmQgaGFzIHBsYXllZCBhbiBpbXBvcnRhbnQgcm9sZSBpbiBmb2xrIGVkdWNhdGlvbi4gIFRoZSBTYW50aGFsIGNvbW11bml0aWVzIGluIEpoYXJraGFuZCwgV2VzdCAgIEJlbmdhbCwgT2Rpc2hhLCBCaWhhciwgYW5kIEFzc2FtIG9uY2UgcHJhY3RpY2VkIHRoaXMgZHlpbmcgYXJ0IHN0eWxlLiBUb2RheSwgYSBmZXcgQ2hhZGFyIEJhZGFyIHB1cHBldGVlcnMgICBjYW4gc3RpbGwgYmUgZm91bmQgaW4gdGhlIFdlc3QgQmVuZ2FsJ3MgZGlzdHJpY3RzIG9mIEJpcmJodW0sIEJhcmRoYW1hbiwgTm9ydGggRGluYWpwdXIsIGFuZCBCYW5rdXJhLCAgIGFzIHdlbGwgYXMgaW4gdGhlIER1bWthIHJlZ2lvbiBpbiBKaGFya2hhbmQuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGVyZm9ybWFuY2UgaXMgYWNjb21wYW5pZWQgYnkgYSB2YXJpZXR5IG9mIHRyYWRpdGlvbmFsIG11c2ljYWwgaW5zdHJ1bWVudHMsICAgc3VjaCBhcyB0aGUgQmFqZSBCYW5hbSwgTGFnYXJhLCBUaXJlbnlhIG9yIGZsdXRlLCBhbmQgdGhlIFR1bmRhIG9yIE1hZGFsLiBBY2NvbXBhbmllZCBieSB0aGUgbXVzaWMgYW5kICAgc2luZ2luZywgdGhlIHB1cHBldHMgY3JlYXRlIGFuIGlsbHVzaW9uIG9mIGEgcmh5dGhtaWMgU2FudGhhbGkgZGFuY2UuIFRoZSBwZXJmb3JtYW5jZSBpcyBhbiBhdHRlbXB0IGJ5ICAgdGhlIGNvbW11bml0eSBtZW1iZXJzIHRvIHByZXNlcnZlIHRoZWlyIG93biBjdWx0dXJlIHdoaWxlIHNob3djYXNpbmcgdGhlIHNpbXBsaWNpdHkgYW5kIGFuaW1hdGlvbiBvZiAgIGluZGlnZW5vdXMgcGVvcGxlLiAgICBTb3VyY2U6ICBodHRwczovL2luZGlhbmN1bHR1cmUuZ292LmluL2ludGFuZ2libGUtY3VsdHVyYWwtaGVyaXRhZ2UgcmFkaXRpb25hbC1jcmFmdHNtYW5zaGlwL2NoYWRhci0gIGJhZGFyICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to puppetry in India,  consider the following statements:   1.  Evidences of puppetry were not found in the  cities of Indus Valley civilization.   2.  Natyashastra provides detailed description  on all types of puppetries in India.   3.  Dolls moved by strings has found reference  in Tamil text Silappadikaram.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgcHVwcGV0cnkgaXMgYSBmb3JtIG9mIG5hcnJhdGl2ZSBhcnQgdGhhdCB1c2VzIGEgZG9sbCBvciBhIGZpZ3VyZSB0aGF0IHJlcHJlc2VudHMgYSBwZXJzb24sIGFuaW1hbCwgb2JqZWN0IG9yICAgYW4gaWRlYSBhbmQgaXMgdXNlZCB0byB0ZWxsIGEgc3RvcnkuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUHVwcGV0cnkgaXMgb25lIG9mIHRoZSBhbmNpZW50IGZvcm1zIG9mIGVudGVydGFpbm1lbnQuIEl0IGhhcyBiZWVuIGZvdW5kIGluIEluZHVzICAgVmFsbGV5IGNpdmlsaXNhdGlvbi4gVGhlIGV4Y2F2YXRpb24gc2l0ZXMgYXQgSGFyYXBwYSBhbmQgTW9oZW5qby1kYXJvIGhhdmUgeWllbGRlZCBwdXBwZXRzIHdpdGggc29ja2V0cyAgIGF0dGFjaGVkIHRvIHRoZW0sIHdoaWNoIHN1Z2dlc3QgdGhlIHByZXNlbmNlIG9mIHB1cHBldHJ5IGFzIGFuIGFydCBmb3JtIGV2ZW4gZHVyaW5nIHRob3NlIGRheXMuIFNvbWUgICByZWZlcmVuY2VzIG9mIG1hcmlvbmV0dGUgdGhlYXRyZSBoYXZlIGJlZW4gZm91bmQgaW4gdGhlIHBlcmlvZCBhcm91bmQgNTAwIEJDLiAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBOYXR5YXNoYXN0cmEsIHRoZSBtYXN0ZXJseSB0cmVhdGlzZSBvbiBkcmFtYXR1cmd5IHdyaXR0ZW4gc29tZXRpbWUgZHVyaW5nIDJuZCAgIGNlbnR1cnkgQkMgdG8gMm5kIGNlbnR1cnkgQUQuLCBkb2VzIG5vdCByZWZlciB0byB0aGUgYXJ0IG9mIHB1cHBldHJ5IGJ1dCB0aGUgcHJvZHVjZXItY3VtLWRpcmVjdG9yIG9mICAgdGhlIGh1bWFuIHRoZWF0cmUgaGFzIGJlZW4gdGVybWVkIGFzICdTdXRyYWRoYXInIG1lYW5pbmcgdGhlIGhvbGRlciBvZiBzdHJpbmdzLiBUaGUgd29yZCBtaWdodCBoYXZlICAgZm91bmQgaXRzIHBsYWNlIGluIHRoZWF0cmUtdGVybWlub2xvZ3kgbG9uZyBiZWZvcmUgTmF0eWFzaGFzdHJhIHdhcyB3cml0dGVuIGJ1dCBpdCBtdXN0IGNvbWUgZnJvbSAgIG1hcmlvbmV0dGUgdGhlYXRyZS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHB1cHBldHJ5IGhhcyBiZWVuIG1lbnRpb25lZCBpbiBTaWxhcHBhZGlrYXJhbSwgd2hpY2ggbWVudGlvbiBkb2xscyBtb3ZlZCAgIGJ5IHN0cmluZ3MuIEl0IGlzIGFsc28gbWVudGlvbmVkIGluIFBhbmluaSdzIGdyYW1tYXIgKDR0aCBjZW50dXJ5IEJDRSksIGFuZCBpbiBQYXRhbmphbGkncyB0ZXh0cyAoMm5kICAgY2VudHVyeSBCQ0UpLiAgICBTb3VyY2U6IEluZGlhbiBDdWx0dXJlLCBOaXRpbiBTaW5naGFuaWEsIDNyZCBFZGl0aW9uLCBDaGFwdGVyLTggICAgICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : " 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following pairs:  Folk Theatre Locations  1. Swang   Assam  2. Powada Maharashtra  3. Ojapali Haryana  4. Bayalata Karnataka  Which of the pair(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3QuIFN3YW5nOiAgUG9wdWxhciBmb3JtIG9mIGVudGVydGFpbm1lbnQgaW4gdGhlIFJhamFzdGhhbiBhbmQgSGFyeWFuYSByZWdpb24gaXMgU3dhbmdzLiAgIFRoZXkgYXJlIHByaW1hcmlseSB2ZXJzZS1zdW5nIG11c2ljYWwgZHJhbWFzIGFjY29tcGFuaWVkIHdpdGggZWt0YXJhLCBoYXJtb25pdW0sIHNhcmFuZ2ksIGRob2xhaywgYW5kICAga2hhcnRhbC4gSXQgYWxzbyBpbnZvbHZlcyBtaW1pY3J5IGFjY29tcGFuaWVkIGJ5IGRpYWxvZ3VlLiAgIFBhaXIgMiBpcyBjb3JyZWN0LiBQb3dhZGE6IFBvd2FkYSBpcyBhIHN0eWxlIG9mIE1hcmF0aGkgcG9ldHJ5IHRoYXQgZmlyc3QgYXBwZWFyZWQgaW4gSW5kaWEgaW4gdGhlIGxhdHRlciBwYXJ0ICAgb2YgdGhlIDE3dGggY2VudHVyeS4gVGhlIFBvd2FkYXMgYXJlIGEgcGFydGljdWxhciBzdHlsZSBvZiBNYXJhdGhpIGJhbGxhZCB0aGF0IGV4dWRlcyBleGNpdGVtZW50IHdoaWxlICAgaW5zcGlyaW5nbHkgcmV0ZWxsaW5nIGhpc3RvcmljYWwgZXZlbnRzLiBUaGlzIGluY2x1ZGVzIGRlc2NyaXB0aW9uIG9mIHRoZSBicmF2ZSBhY3RzIG9mIHBvd2VyZnVsIGtpbmdzLiBUaGVzZSAgIFBvd2FkYXMnIGNvbXBvc2VycyBhbmQgc2luZ2VycyBhcmUgcmVmZXJyZWQgdG8gYXMgIlNoYWhpcnMuIiBUaGUgZWFybGllc3QgUG93YWRhcyB3ZXJlIHByaW1hcmlseSB3cml0dGVuICAgYnkgcGVvcGxlIHdobyB3ZXJlIHByZXNlbnQgZm9yIHRoZSBzaWduaWZpY2FudCBldmVudHMgdGhhdCB3ZXJlIHRoZSBzdWJqZWN0IG9mIHRoZXNlIGJhbGxhZHMuICAgUGFpciAzIGlzIGluY29ycmVjdC4gT2phLVBhbGk6IE9qYXBhbGkgaXMgYSBkaXN0aW5jdGl2ZSBBc3NhbWVzZSBuYXJyYXRpdmUgdGhlYXRyZSBzdHlsZSB0aGF0IGlzIG1haW5seSAgIGNvbm5lY3RlZCB0byB0aGUgZmVzdGl2YWwgb2YgTWFuYXNoYSwgb3IgdGhlIFNlcnBlbnQgR29kZGVzcy4gQmFuaXlhIEtoYW5kYSwgQmhhdGl5YWxpIEtoYW5kYSwgYW5kIERldmEgICBLaGFuZGEgYXJlIHRoZSB0aHJlZSBkaXN0aW5jdCBwYXJ0cyBvZiB0aGUgbGVuZ3RoeSBuYXJyYXRpb24uIFRoZSBjaG9ydXMgaXMgbWFkZSB1cCBvZiBQYWxpcyBhbmQgT2phIHNlcnZlcyAgIGFzIHRoZSBwcmltYXJ5IG5hcnJhdG9yLiAgICBQYWlyIDQgaXMgY29ycmVjdC4gQmF5YWxhdGE6IEl0IGlzIGEgS2FybmF0YWthIG9wZW4gYWlyIHRoZWF0cmUgdHJhZGl0aW9uIHRoYXQgaXMgcGVyZm9ybWVkIGR1cmluZyB0aGUgd29yc2hpcCAgIG9mIHRoZSBsb2NhbCBkZWl0eS4gVGhlIHN0b3JpZXMgYXJlIGFsc28gYmFzZWQgb24gUmFkaGEgYW5kIEtyaXNobmEncyBsb3ZlLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LmluZGlhbmV0em9uZS5jb20vMzIvcG92YWRhX2luZGlhbl9mb2xrX2Zvcm0uaHRtICAgTml0aW4gU2luZ2hhbmlhLCAzcmQgZWRpdGlvbiwgQ2hhcHRlci03LCBwZyBuby4gNy44IGFuZCA3LjEwICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1, 2 and 4 only   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following description:  It is a five-act Sanskrit play by Kalidasa. It  depicts the Vedic love story of King Pururavas  and an Apsara named Urvashi.  Which among the following plays can be  identified using the description given above?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFZpa3JhbW9ydmFzaXlhbSB3aGljaCBsaXRlcmFsbHkgbWVhbnMgVXJ2YXNoaSB3b24gYnkgdmFsb3VyIGlzIGEgZml2ZS1hY3QgU2Fuc2tyaXQgcGxheSBieSBhbmNpZW50ICAgSW5kaWFuIHBvZXQgS2FsaWRhc2EsIHdobyBsaXZlZCBpbiB0aGUgNHRoIG9yIDV0aCBDZW50dXJ5IENFLiBJdCBpcyBiYXNlZCBvbiB0aGUgVmVkaWMgbG92ZSBzdG9yeSBvZiBLaW5nICAgUHVydXJhdmFzIGFuZCBhbiBBcHNhcmEgbmFtZWQgVXJ2YXNoaSwga25vd24gZm9yIGhlciBiZWF1dHkuIFRoZSBwbGF5IGNvbnRhaW5zIGEgd2VsbC1rbm93biAnbWFkICAgc2NlbmUnIGluIHdoaWNoIHRoZSBraW5nLCBncmllZi1zdHJpY2tlbiwgd2FuZGVycyB0aHJvdWdoIGEgbG92ZWx5IGZvcmVzdCBhcG9zdHJvcGhpemluZyB2YXJpb3VzIGZsb3dlcnMgICBhbmQgdHJlZXMgYXMgdGhvdWdoIHRoZXkgd2VyZSBoaXMgbG92ZS4gICAgSW4gdGhpcyBwbGF5LCBLYWxpZGFzYSBhcHBlYXJzIHRvIGhhdmUgZm9jdXNlZCBvbiBwZXJzb25hbGl0eSByYXRoZXIgdGhhbiBuYXJyYXRpdmUgY3JlYXRpb24sIGFzIGhlIGRpZCBpbiAgIHRoZSBNYWxhdmlrYWduaW1pdHJhLiAgIFZpa3JhbW9ydmFzaXlhbSBpcyB0aGUgc2Vjb25kIG9mIEthbGlkYXNhJ3MgdGhyZWUgZHJhbWFzLCB0aGUgZmlyc3QgYmVpbmcgTWFsYXZpa2FnbmltaXRyYW0gYW5kIHRoZSB0aGlyZCAgIGJlaW5nIHRoZSB3ZWxsLWtub3duIEFiaGlqbmFuYXNha3VudGFsYW0uICAgU291cmNlOiAgaHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20gb3BpYy9WaWtyYW1vcnZhc2hpICAgIGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NlY0lDSENvdXIvRW5nbGlzaC9DSC4wNi5wZGYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Vikramorvasiyam  ",
        "option2" : "Malavikagnimitra   ",
        "option3" : "Shakuntala    ",
        "option4" : "Devichandraguptam  "
      }
    },
    {
      "index" : 31,
      "question" : "Match the following recently added  products to GI tag list and their respective  state:  Product                              State  1. Kandhamal Haladi         Chhattisgarh  2. Dindigul Locks               Karnataka  3. Kaji Nemu                       Assam  Which of the pair(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgb3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQW55IHBlcnNvbiwgbWFudWZhY3R1cmVyLCBvcmdhbml6YXRpb24gb3IgYXV0aG9yaXR5IGVzdGFibGlzaGVkIGJ5IG9yIHVuZGVyIHRoZSBsYXcgbWF5IGFwcGx5IGZvciB0aGUgICByZWdpc3RyYXRpb24gb2YgR2VvZ3JhcGhpY2FsIEluZGljYXRpb24gb2YgdGhlaXIgcHJvZHVjdC4gVGhlIHJlc3BlY3RpdmUgQXBwbGljYW50IHNob3VsZCByZXByZXNlbnQgdGhlICAgaW50ZXJlc3Qgb2YgcHJvZHVjZXJzLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IEthbmRobWFsIEhhbGRpIGlzIGEgdmFyaWV0eSBvZiB0dXJtZXJpYyBpbmRpZ2Vub3VzIHRvIFNvdXRoIE9kaXNoYSBhbmQgbW9zdGx5ICAgY3VsdGl2YXRlZCBpbiBLYW5kaGFtYWwgZGlzdHJpY3Qgb2YgT2Rpc2hhLiAgICBQYWlyIDIgaXMgaW5jb3JyZWN0OiBUaGUgRGluZGlndWwgbG9ja3MgYXJlIGtub3duIHRocm91Z2hvdXQgdGhlIHdvcmxkIGZvciB0aGVpciBzdXBlcmlvciBxdWFsaXR5IGFuZCAgIGR1cmFiaWxpdHkuIFRoZSBHSSB0YWcgaGFzIGJlZW4gZ2l2ZW4gd2l0aCByZXNwZWN0IHRvIFRhbWlsbmFkdSBhbmQgbm90IEthcm5hdGFrYS4gICBQYWlyIDMgaXMgY29ycmVjdDogT25lIG9mIHRoZSBtb3N0IGNvbW1vbiBhbmQgcG9wdWxhciBjaXRydXMgZnJ1aXRzIGZvdW5kIGluIHRoaXMgc3RhdGUgb2YgQXNzYW0gaXMgdGhlIEthamkgICBuZW11IGFsc28ga25vd24gYXMgQXNzYW0gbGVtb24uIFRoaXMgaXMgYW4gaW5kaWdlbm91cyBsZW1vbiBvZiBBc3NhbSBhbmQgaXQgaGFzIGNlcnRhaW4gdW5pcXVlbmVzcyAgICAgb2YgMjMgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBpbiB0ZXJtcyBvZiBxdWFsaXR5IHdoaWNoIGlzIGVzc2VudGlhbGx5IGF0dHJpYnV0YWJsZSB0byBpdHMgcGxhY2Ugb2Ygb3JpZ2luIGkuIGUuLCBBc3NhbS4gSXQgaGFzIGJlZW4gcmVjZW50bHkgICBnaXZlbiBHSSB0YWcuICAgU291cmNlOiBodHRwczovL2lwaW5kaWEuZ292LmluL3JlZ2lzdGVyZWQtZ2xzLmh0bSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only  ",
        "option2" : "3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 32,
      "question" : "Which among the following items has  received the GI tag?  1. Indori Poha  2. Gorakhpur Terracotta   3. Gulbarga Tur Dal  4. Jeeraphool  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdDogSW5kb3JpIFBvaGEgaGFzIHJlY2VudGx5IGJlZW4gaW4gdGhlIG5ld3MgYXMgYW4gYXBwbGljYXRpb24gbWFkZSBieSB0aGUgSW5kb3JpIE1pdGhhaSAgIEF1ciBOYW1rZWVuIE5pcm1hdGEtVmlrcmV0YSBWeWFwYXJpIFNhbmdoIGRlbWFuZGVkIGEgR2VvZ3JhcGhpY2FsIEluZGljYXRpb24gKEdJKSB0YWcgZm9yIHRoZSBJbmRvcmkgICBQb2hhLiBIb3dldmVyLCBpdCBpcyB5ZXQgdG8gYmUgZ3JhbnRlZC4gICBPcHRpb24gMiBpcyBjb3JyZWN0OiBUaGUgdGVycmFjb3R0YSB3b3JrIG9mIEdvcmFraHB1ciAoVXR0YXIgUHJhZGVzaCkgaXMgYSBjZW50dXJpZXMtb2xkIHRyYWRpdGlvbmFsIGFydCAgIGZvcm0sIHdoZXJlIHRoZSBwb3R0ZXJzIG1ha2UgdmFyaW91cyBhbmltYWwgZmlndXJlcyBsaWtlLCBob3JzZXMsIGVsZXBoYW50cywgY2FtZWwsIGdvYXQsIG94LCBldGMuIHdpdGggaGFuZC0gIGFwcGxpZWQgb3JuYW1lbnRhdGlvbi4gSXQgd2FzIGF3YXJkZWQgR0kgdGFnIGluIDIwMjAuICAgT3B0aW9uIDMgaXMgY29ycmVjdDogVGhlICdHdWxiYXJnYSB0dXIgZGFsJyAoS2FsYWJ1cmFnaSByZWQgZ3JhbSksIHJlbm93bmVkIGZvciBpdHMgc3VwZXJpb3IgcXVhbGl0eSB0aGUgICB3b3JsZCBvdmVyLCByZWNlaXZlZCBHZW9ncmFwaGljYWwgSW5kaWNhdGlvbiAoR0kpIHRhZyBmcm9tIHRoZSBnb3Zlcm5tZW50IGluIDIwMTkuIFRoZSBoaWdoIGNhbGNpdW0gYW5kICAgcG90YXNzaXVtIGNvbnRlbnQgb2YgdGhlIHNvaWwgaW4gR3VsYmFyZ2EgdHVyIGRhbC1ncm93aW5nIHJlZ2lvbiBoYXMgYmVlbiBvbmUgb2YgdGhlIG1ham9yIGZhY3RvcnMgZm9yIGl0cyAgIHN1cGVyaW9yIHF1YWxpdHkuICAgT3B0aW9uIDQgaXMgY29ycmVjdDogSmVlcmFwaG9vbCBpcyBhbiBpbmRpZ2Vub3VzIHNjZW50ZWQgdmFyaWV0eSBvZiBSaWNlIGdyb3duIHByZWRvbWluYW50bHkgaW4gdGhlIGxvdy0gIGx5aW5nIGFyZWFzIGluIFN1cmd1amEgcmVnaW9uIG9mIENoYXR0aXNnYXJoLiBKZWVyYXBob29sIGlzIGEgc21hbGwgc2l6ZSB2YXJpZXR5IG9mIFJpY2Ugd2l0aCBhbiBhcHBlYXJhbmNlICAgb2YgY3VtaW4gKGplZXJhKSBhbmQgaGVuY2Uga25vd24gYXMgSmVlcmFwaG9vbC4gSmVlcmFwaG9vbCByZWNlaXZlZCB0aGUgR2VvZ3JhcGhpY2FsIEluZGljYXRpb24gVGFnIChHSSkgICBpbiAyMDE5LiAgIFNvdXJjZTogaHR0cHM6Ly93d3cubGl2ZW1pbnQuY29tL3BvbGl0aWNzL3BvbGljeS9tYWRoeWEtcHJhZGVzaC1zLWluZG9yaS1wb2hhLWxpa2VseS10by1qb2luLSAgcmFjZS1mb3ItZ2ktdGFnLTE1NjMxMTIwMDkwNDYuaHRtbCAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9uZXdzL25hdGlvbmFsL2dpLXRhZy10by1tYW5pcHVyLWJsYWNrLXJpY2UtZ29yYWtocHVyLSAgdGVycmFjb3R0YS9hcnRpY2xlMzE0NzU5NTguZWNlICAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwva2FybmF0YWthL2d1bGJhcmdhLXR1ci1kYWwtZ2V0cy1naS0gIHRhZy9hcnRpY2xlMjkyNDkwMzcuZWNlICAgaHR0cHM6Ly9zdGF0aWMucGliLmdvdi5pbi9Xcml0ZVJlYWREYXRhL3NwZWNpZmljZG9jcy9kb2N1bWVudHMvMjAyMS9ub3YvZG9jMjAyMTExMjQ0MS5wZGYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 33,
      "question" : "Which among the following has written  'Rasaratnakara', an ancient text dealing with  compounds?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJhc2FyYXRuYWthcmEgd2FzIHdyaXR0ZW4gYnkgTmFnYXJqdW5hIGluIHRoZSBzZXZlbnRoIG9yIGVpZ2h0aCBjZW50dXJ5IEEuRC4gTmFnYXJqdW5hIHdhcyBhICAgbWV0YWxsdXJnaXN0IGFuZCBhbGNoZW1pc3QgZnJvbSBJbmRpYS4gVGhlIHRyZWF0aXNlIGRpc2N1c3NlcyBtZXRob2RzIGZvciBleHRyYWN0aW5nIG1ldGFscyBzdWNoIGFzIGdvbGQsICAgc2lsdmVyLCB0aW4sIGFuZCBjb3BwZXIuICAgS25vd2xlZGdlIEJhc2U6IEluZGlhIGhhcyBhIHZlcnkgYW5jaWVudCB0cmFkaXRpb24gb2YgY2hlbWlzdHJ5LiBJbiBhbmNpZW50IHRleHRzLCBhbWF6aW5nIGluZm9ybWF0aW9uIGlzICAgYXZhaWxhYmxlIG9uIG1ldGFscywgb3JlcywgdGhlaXIgcXVhcnJpZXMsIGNvbXBvdW5kcywgYW5kIGFsbG95cy4gVGhlcmUgYXJlIGFsc28gZGV0YWlscyBvZiBodW5kcmVkcyBvZiAgIGRldmljZXMgdXNlZCBpbiBjaGVtaWNhbCBleHBlcmltZW50cyBpbiAnUmFzYXlhbiBTaGFzdHJhJyB3aGljaCB3ZSBjYWxsICJjaGVtaXN0cnknLiBUaGVyZSBoYXZlIGJlZW4gbWFueSAgIGNoZW1pc3RzIGluIHRoZSBwYXN0LCB0aGUgY3JlYXRpb25zIG9mIHNvbWUgb2YgdGhlbSBhcmUgYXMgZm9sbG93czogICAgKC0pTmFnYXJqdW5hLSBSYXMgUmF0bmFrYXIsIEtha3NoYXB1dHRhbnRyYSAgICgtKVZhYWdiaGF0dC0gUmFzcmF0bmEgU2FtdWNoY2hheSAgICgtKUdvdmluZGFjaGFyeWEtUmFzYXJuYXZhICAgKC0pWWFzaG9kaGFyLSBSYXMgUHJha2FzaCBTdWRoYWthciAgICgtKVNvbWRldi0gUmFzZW5kcmEgQ2h1ZGFtYW5pICAgU291cmNlOiBodHRwczovL3d3dy5hY2FkZW1pYS5lZHUvMjIxMjY5L0FuX0FsY2hlbWljYWxfR2hvc3RfVGhlX1Jhc2FyYXRuYWthcmFfYnlfTmFnYXJqdW5hICAgICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Bhaskaracharya  ",
        "option2" : "Nagarjuna  ",
        "option3" : "Lilavati  ",
        "option4" : "Al-Beruni   "
      }
    },
    {
      "index" : 34,
      "question" : "If someone finds a treasure hidden in his  personal land in India, which of the following  laws, rules might be applicable?  1. The Antiquities and Art Treasures Act, 1972  2. The Indian Treasure Trove Act, 1878  3. The Ancient Monuments and Archaeological  sites and Remains Act,1958  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgT3B0aW9uIDEgaXMgY29ycmVjdDogVGhlIEFudGlxdWl0aWVzIGFuZCBBcnQgVHJlYXN1cmVzIEFjdCwgMTk3MiBpcyBhbiBBY3QgdG8gcmVndWxhdGUgdGhlIGV4cG9ydCB0cmFkZSBpbiAgIGFudGlxdWl0aWVzIGFuZCBhcnQgdHJlYXN1cmVzLCB0byBwcm92aWRlIGZvciB0aGUgcHJldmVudGlvbiBvZiBzbXVnZ2xpbmcgb2YsIGFuZCBmcmF1ZHVsZW50IGRlYWxpbmdzIGluLCAgIGFudGlxdWl0aWVzLCB0byBwcm92aWRlIGZvciB0aGUgY29tcHVsc29yeSBhY3F1aXNpdGlvbiBvZiBhbnRpcXVpdGllcyBhbmQgYXJ0IHRyZWFzdXJlcyBmb3IgcHJlc2VydmF0aW9uIGluICAgcHVibGljIHBsYWNlcyAgIE9wdGlvbiAyIGlzIGNvcnJlY3Q6IFRoZSBJbmRpYW4gVHJlYXN1cmUgVHJvdmUgQWN0LCAxODc4IGxheXMgZG93biB0aGUgbGF3IHJlZ2FyZGluZyBidXJpZWQgdHJlYXN1cmVzLiBJdCAgIGRlZmluZXMgdHJlYXN1cmUgYXM6ICJhbnl0aGluZyBvZiBhbnkgdmFsdWUgaGlkZGVuIGluIHRoZSBzb2lsLCBvciBpbiBhbnl0aGluZyBhZmZpeGVkIHRoZXJldG8uIiAgIE9wdGlvbiAzIGlzIGluY29ycmVjdDogQW5jaWVudCBNb251bWVudHMgYW5kIEFyY2hhZW9sb2dpY2FsIHNpdGVzIGFuZCBSZW1haW5zIEFjdCwxOTU4LCBpcyBhbiBBY3QgdGhhdCAgIHByb3ZpZGUgZm9yIHRoZSBwcmVzZXJ2YXRpb24gb2YgYW5jaWVudCBhbmQgaGlzdG9yaWNhbCBtb251bWVudHMgYW5kIGFyY2hhZW9sb2dpY2FsIHNpdGVzIGFuZCByZW1haW5zICAgb2YgbmF0aW9uYWwgaW1wb3J0YW5jZSwgZm9yIHRoZSByZWd1bGF0aW9uIG9mIGFyY2hhZW9sb2dpY2FsIGV4Y2F2YXRpb25zIGFuZCBmb3IgdGhlIHByb3RlY3Rpb24gb2YgICBzY3VscHR1cmVzLCBjYXJ2aW5ncyBhbmQgb3RoZXIgbGlrZSBvYmplY3RzLiBJdCBkb2VzIG5vdCBkZWFsIHdpdGggdHJlYXN1cmUgZXRjLiAgICBTb3VyY2U6ICBodHRwczovL2xlZ2lzbGF0aXZlLmdvdi5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL0ExOTcyLTUyLnBkZiAgICBodHRwczovL3d3dy5pbmRpYWN1bHR1cmUubmljLmluL3NpdGVzL2RlZmF1bHQvZmlsZXMvTGVnaXNsYXRpb25zLzkucGRmICAgIGh0dHBzOi8vd3d3LmluZGlhY3VsdHVyZS5uaWMuaW4vc2l0ZXMvZGVmYXVsdC9maWxlcy9hY3RzX3J1bGVzL1RoZUFuY2llbnRNb251bWVudHNhbmRBcmNoYWVvbG9naSAgY2FsU2l0ZXNhbmRSZW1haW5zQWN0MTk1OF8xMi4wMy4yMDE4LnBkZiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 35,
      "question" : "'Yukti Kalpataru' is a treatise of Ancient  India related to which of the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgWXVrdGkgS2FscGF0YXJ1IGlzIGEgZmFtb3VzIHRyZWF0aXNlIGluIFNhbnNrcml0IHByaW5jaXBhbGx5IG9uIHNoaXAgYnVpbGRpbmcgaW4gYW5jaWVudCBJbmRpYS4gSXQgd2FzICAgd3JpdHRlbiBhbmQgY29tcGlsZWQgYnkga2luZyBCaG9qYSBvZiBEaGFyYSAoQyAxMDAwIC0gMTA1NSBDRSkgb2YgdGhlIFBhcmFtYXJhIGR5bmFzdHkuIEFuZCB0aGVyZWZvcmUsICAgaXQgaXMgYWxzbyBrbm93biBhcyBZdWt0aSBLYWxwYXRhcnUgb2YgQmhvamEuIFRoZXJlIGFyZSByZWZlcmVuY2VzIHRvIHNoaXBwaW5nIGFuZCBzaGlwYnVpbGRpbmcgaW4gb3RoZXIgICBsYW5ndWFnZXMgb2YgdGhlIHdvcmxkIGJ1dCBZdWt0aSBLYWxwYXRhcnUgaXMgdGhlIG9sZGVzdCBib29rIHdoaWNoIGRlYWxzIHdpdGggc2hpcGJ1aWxkaW5nIGluIHN1Y2ggICBleGhhdXN0aXZlIGRldGFpbC4gIEFwYXJ0IGZyb20gU2hpcHBpbmcsIFl1a3RpIEthbHBhdGFydSBhbHNvIHRvdWNoZXMgdXBvbiBtYW55IG90aGVyIHRvcGljcyBsaWtlIHNlbGVjdGlvbiAgIG9mIGpld2Vscywgc3dvcmRzLCBob3JzZXMsIGVsZXBoYW50cywgb3JuYW1lbnRzLCBmbGFncyBhbmQgc28gb24uICAgU291cmNlOiBodHRwczovL29ubGluZWJvb2tzLmxpYnJhcnkudXBlbm4uZWR1L3dlYmJpbi9ib29rL2xvb2t1cGlkP2tleT1vbGJwNzEwOTkgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Astronomy  ",
        "option2" : "Mathematics  ",
        "option3" : "Medicine  ",
        "option4" : "Ship-Building   "
      }
    },
    {
      "index" : 36,
      "question" : "Which among the following forms the  sub-part of Siddhanta Shiromani- a 12th  Century AD book on Mathematics written by  Bhaskaracharya?   1. Lilavati   2. Jyotisa   3. Goladhyaya   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBCaGFza2FyYWNoYXJ5YSB3YXMgb25lIG9mIHRoZSBsZWFkaW5nIG1hdGhlbWF0aWNpYW5zIGluIHRoZSAxMnRoIGNlbnR1cnkgQUQuIEhpcyBib29rIFNpZGRoYW50YSAgIFNoaXJvbWFuaSBpcyBkaXZpZGVkIGludG8gZm91ciBzZWN0aW9uczogICAgTGlsYXZhdGkgKGRlYWxpbmcgd2l0aCBBcml0aG1ldGljKSAgICBCaWpnYW5pdGEgKGRlYWxpbmcgd2l0aCBBbGdlYnJhKSAgICBHb2xhZGh5YXlhIChhYm91dCBzcGhlcmVzKSAgICBHcmFoYWdhbml0YSAobWF0aGVtYXRpY3Mgb2YgcGxhbmV0cy4pICAgIEEgY2hha3Jhd2F0IG1ldGhvZCBvciB0aGUgY3ljbGljIG1ldGhvZCB0byBzb2x2ZSBhbGdlYnJhaWMgZXF1YXRpb25zIHdhcyBpbnRyb2R1Y2VkIGJ5IGhpbSBpbiBoaXMgYm9vayAgIExpbGF2YXRpLiBJbiB0aGUgbmluZXRlZW50aCBjZW50dXJ5LCBKYW1lcyBUYXlsb3IgdHJhbnNsYXRlZCBMaWxhdmF0aSBhbmQgbWFkZSBpdCBrbm93biB0byB0aGUgcGVvcGxlIGFjcm9zcyAgIHRoZSBnbG9iZS4gSGVuY2UgU3RhdGVtZW50cyAxIGFuZCAzIGFyZSBjb3JyZWN0LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEp5b3Rpc2EgaXMgYSBwYXJ0IG9mIEFyeWFiaGF0aXlhLCBhIGJvb2sgb24gbWF0aGVtYXRpY3MgYW5kIGFzdHJvbm9teSBieSAgIEFyeWFiaGF0YS4gVGhlIEp5b3Rpc2EgcGFydCBvZiBBcnlhYmhhdGl5YSBhbHNvIGRlYWxzIHdpdGggYXN0cm9ub21pY2FsIGRlZmluaXRpb25zLCBtZXRob2RzIG9mIGRldGVybWluaW5nICAgdGhlIHRydWUgcG9zaXRpb25zIG9mIHRoZSBwbGFuZXRzLCBtb3ZlbWVudHMgb2YgdGhlIFN1biBhbmQgdGhlIE1vb24gYW5kIHRoZSBjYWxjdWxhdGlvbiBvZiB0aGUgZWNsaXBzZXMuICAgIFNvdXJjZTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZSAtTml0aW4gU2luZ2hhbmlhICAgICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "3 only    ",
        "option3" : "1 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 37,
      "question" : "with reference to Science and Technology  in ancient India, consider the following  statements:  1.  The first evidence of extraction of zinc  through distillation process was found from  India.  2.  The idea of atom was first propounded by  Varahamihira.  3.  Parmanu was the smallest unit of time used  during ancient India.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGhhcyBhIHJpY2ggaGVyaXRhZ2Ugb2Ygc2NpZW5jZSBhbmQgdGVjaG5vbG9neS4gVGhlIGRlcGVuZGVuY2Ugb24gbmF0dXJlIGNvdWxkIGJlIG92ZXJjb21lIGJ5ICAgZGV2ZWxvcG1lbnRzIGluIHNjaWVuY2UgYW5kIGluIGFuY2llbnQgSW5kaWEsIHJlbGlnaW9uIGFuZCBzY2llbmNlIHdvcmtlZCBpbiBjbG9zZSBwcm94aW1pdHkuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIGZpcnN0IGV2aWRlbmNlIG9mIGV4dHJhY3Rpb24gb2YgemluYyB3YXMgZm91bmQgZnJvbSBJbmRpYS5UaGUgZXh0cmFjdGlvbiBvZiB6aW5jICAgZnJvbSBvcmVzIGJlZ2FuIGxhdGUgaW4gaGlzdG9yeSwgbWFpbmx5IGJlY2F1c2Ugb2YgdGhlIGZhY3QgdGhhdCBpdCB0ZW5kZWQgdG8gZXZhcG9yYXRlIHdoZW4gc21lbHRpbmcgaW4gdGhlICAgb3BlbiB3YXMgYXR0ZW1wdGVkLiBJdCB3YXMgb25seSB3aGVuIGNsb3NlZCBzdGlsbHMgYmVnYW4gdG8gYmUgdXNlZCBmb3IgbGlxdW9yIGRpc3RpbGxhdGlvbiB0aGF0IHRoZSBzYW1lICAgbWV0aG9kIGNvdWxkIGJlIGFkb3B0ZWQgZm9yIHppbmMuIFRoZSBEaXN0aWxsYXRpb24gcHJvY2VzcyB3YXMgdXNlZCBmcm9tIHRoZSAxMnRoIGNlbnR1cnkgQUQ7IHRodXMsIEluZGlhICAgaXMgdGhlIGZpcnN0IHRvIHByb2R1Y2UgemluYyBieSBkaXN0aWxsYXRpb24gcHJvY2Vzc2VzIGFuZCBaYXdhciwgc2l0dWF0ZWQgaW4gdGhlIEFyYXZhbGxpIEhpbGxzIGFib3V0IDM4IGttICAgc291dGggb2YgVWRhaXB1ciwgUmFqYXN0aGFuLCBpcyB0aGUgb25seSBrbm93biBhbmNpZW50IHppbmMgc21lbHRpbmcgc2l0ZSBpbiBJbmRpYS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBlYXJsaWVzdCBrbm93biByZWZlcmVuY2UgdG8gdGhlIGF0b21pYyBuYXR1cmUgb2YgbWF0dGVyIGRhdGVzIGJhY2sgdG8gdGhlICAgdGltZXMgb2YgR3JlZWsgcGhpbG9zb3BoZXJzLCBMZXVjaXBwdXMgYW5kIGhpcyBwdXBpbCBEZW1vY3JpdHVzLiBJbiA1MDAgQi5DLiwgS2FuYWQsIGFuIEluZGlhbiBzYWludCAgIGZvdW5kZXIgb2YgdGhlIHN5c3RlbSBvZiBwaGlsb3NvcGh5IChEYXJzaGFuKSBjYWxsZWQgVmFpc2hlc2hpayB0aGF0IHByb3BvdW5kcyB0aGUgZG9jdHJpbmUgICBvZiBhbnUgKGF0b21zKSBhcyBwYXJ0IG9mIGl0cyBtZXRhcGh5c2ljcy4gV2hpbGUgVmFyYWhhbWloaXJhLCBhbHNvIGNhbGxlZCBWYXJhaGEgd2FzIGFuIEluZGlhbiBwaGlsb3NvcGhlciwgICBhc3Ryb25vbWVyLCBhbmQgbWF0aGVtYXRpY2lhbi4gSGUgaXMgYXV0aG9yIG9mIHRoZSBQYW5jaGEtc2lkZGhhbnRpa2EgKCdGaXZlIFRyZWF0aXNlcycpLCBhIGNvbXBlbmRpdW0gICBvZiBHcmVlaywgRWd5cHRpYW4sIFJvbWFuLCBhbmQgSW5kaWFuIGFzdHJvbm9teS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBtZWFzdXJlbWVudCBvZiB0aW1lIGJlZ2FuIHdpdGggdGhlIGludmVudGlvbiBvZiBzdW5kaWFscyBpbiBhbmNpZW50IEVneXB0ICAgc29tZSB0aW1lIHByaW9yIHRvIDE1MDAgQi5DLiBIb3dldmVyLCB0aGUgdGltZSB0aGUgRWd5cHRpYW5zIG1lYXN1cmVkIHdhcyBub3QgdGhlIHNhbWUgYXMgdGhlIHRpbWUgICB0b2RheSdzIGNsb2NrcyBtZWFzdXJlLiBXaGlsZSwgZHVyaW5nIHRoZSBDaGFuZHJhZ3VwdGEgTWF1cnlhIHBlcmlvZCB0aGVyZSB3YXMgYSB3ZWxsLWRlZmluZWQgc3lzdGVtICAgb2Ygd2VpZ2h0cyBhbmQgbWVhc3VyZXMgYWNjb3JkaW5nIHRvIHdoaWNoLCB0aGUgc21hbGxlc3QgdW5pdCBvZiBsZW5ndGggd2FzIDEgUGFybWFudS4gICBTb3VyY2U6ICAgIGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL3NlY3NjaWNvdXIvRW5nbGlzaC9DaGFwdGVyLTEucGRmICAgaHR0cHM6Ly93d3cubWFhLm9yZy9leHRlcm5hbF9hcmNoaXZlL2Rldmxpbi9kZXZsaW5fMTJfOTkuaHRtbCM6fjp0ZXh0PVRoZSUyMG1lYXN1cmVtZW50JTIwbyAgZiUyMHRpbWUlMjBiZWdhbix3YXMlMjB0aGUlMjBwZXJpb2QlMjBvZiUyMGRheWxpZ2h0LiAgIGh0dHBzOi8vam91cm5hbHMuc2FnZXB1Yi5jb20vZG9pL2Z1bGwvMTAuMTE3Ny8yMzQ4NDQ4OTIwOTA4MjM3ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following pairs are correctly  matched?  List I  Geographical indication tag  List II  States  1. Dalle Khursani Jammu and  Kashmir  2. Hathei chilli Manipur  3. Tamenglong mandarin  orange  Nagaland  4. Rataul mangoes Uttar Pradesh  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgY29ycmVjdC4gICBQYWlyIDEgaXMgaW5jb3JyZWN0OiBUaGUgR2VvZ3JhcGhpY2FsIElkZW50aWZpY2F0aW9uIChHSSkgcmVnaXN0cnkgaGFzIGFjY2VwdGVkIGFuZCBwdWJsaXNoZWQgdGhlIEdJICAgYXBwbGljYXRpb24gZm9yIERhbGxlIEtodXJzYW5pLiBJdCBpcyBvbmUgb2Ygd29ybGQncyBob3R0ZXN0IGNoaWxsaWVzLCBmb3VuZCBpbiBTaWtraW0gYW5kIHRoZSBhZGpvaW5pbmcgICByZWdpb25zIG9mIHRoZSBlYXN0ZXJuIEhpbWFsYXlhcy4gVGhlIG5hbWUgb2YgdGhlIEdJIHByb2R1Y3QgaXMgRGFsbGUgS2h1cnNhbmkgYW5kIHRoZSBsb2dvIGJlYXJzIHRoZSBuYW1lICAgb2YgJ0RhbGxlIEtodXJzYW5pIENoaWxsaSBTaWtraW0nLiAgIFBhaXIgMiBpcyBjb3JyZWN0OiBIYXRoZWkgY2hpbGxpIGlzIGZvdW5kIGluIE1hbmlwdXIncyBVa3J1bCBkaXN0cmljdCBhbmQgaXQgaXMga25vd24gZm9yIGl0cyB1bmlxdWUgZmxhdm91ciwgICBoYXMgYmVlbiBncmFudGVkIHRoZSBHZW9ncmFwaGljYWwgSW5kaWNhdGlvbiAoR0kpIHRhZy4gSXQgaXMgY29tbW9ubHkga25vd24gYXMgdGhlIFNpcmFyYWtob25nIGNoaWxseSBhbmQgICBpdCB0aHJpdmVzIHdlbGwgb25seSBpbiBjbGltYXRpYyBjb25kaXRpb24gb2YgdGhlIFNpcmFyYWtob25nIHZpbGxhZ2UsIHdoaWNoIGlzIHNpdHVhdGVkIGFib3V0IDY2IGttIGZyb20gICBJbXBoYWwuICAgMSkgSXQgaGFzIG92ZXIgMjAwIGhvdXNlaG9sZHMgYW5kIGZhcm1pbmcgaXMgdGhlIG1haW4gb2NjdXBhdGlvbiBvZiB0aGUgdmlsbGFnZXJzLiBUaGVzZSBjaGlsbGllcyBhbHNvIGdyb3cgICBpbiBhZGpvaW5pbmcgdmlsbGFnZXMgYnV0IHRoZWlyIHF1YWxpdHksIGluIHRlcm1zIG9mIHRhc3RlLCBmbGF2b3VyIGFuZCBjb2xvdXIsIGFyZSBjb25zaWRlcmVkIHRvIGJlIGluZmVyaW9yICAgdG8gdGhlIHZhcmlldHkgdGhhdCBpcyBmb3VuZCBpbiBTaXJhcmFraG9uZy4gICAgMikgVGhlIEhhdGhlaSBjaGlsbHkgd29ya3MgYXMgYSBnb29kIGFudGktb3hpZGFudCBhbmQgcG9zc2Vzc2VzIGhpZ2ggY2FsY2l1bSBhbmQgVml0YW1pbiBDIGxldmVscy4gSXQgICBoYXMgYW4gZXh0cmVtZWx5IGhpZ2ggQW1lcmljYW4gU3BpY2UgVHJhZGUgQXNzb2NpYXRpb24gKEFTVEEpIGNvbG91ciB2YWx1ZSBvZiAxNjQuIFRoZSBleHRyYWN0YWJsZSAgIGNvbG91ciBvZiBjaGlsbGkgaXMgdXN1YWxseSBleHByZXNzZWQgdXNpbmcgQVNUQSB2YWx1ZXMuICAgUGFpciAzIGlzIGluY29ycmVjdDogVGFtZW5nbG9uZyBvcmFuZ2Ugb2YgTWFuaXB1ciBoYXMgYmVlbiBncmFudGVkIEdJIHRhZyBieSBHb3Zlcm5tZW50IG9mIEluZGlhLiBUaGUgICBUYW1lbmdsb25nIG1hbmRhcmluIG9yYW5nZSBpcyBiaWdnZXIgaW4gc2l6ZSwgd2VpZ2hpbmcgMjMyLjc2IGdyYW1zIG9uIGF2ZXJhZ2UuICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIDEpIEl0IGhhcyBhIHVuaXF1ZSBzd2VldCBhbmQgc291ciBmbGF2b3VyLiBJdCBoYXMgaGlnaCBqdWljZSBjb250ZW50IChhcm91bmQgNDUgcGVyIGNlbnQpIGFuZCBpcyByaWNoIGluICAgYXNjb3JiaWMgYWNpZCAoNDguMTIgbWcvMTAwbWwpLiBUaGVzZSBvcmFuZ2VzIGFyZSBncm93biBvdmVyIGFyZWFzIHNwYW5uaW5nIDEsODAwIGhlY3RhcmVzIGluIHRoZSBoaWxscyAgIG9mIFRhbWVuZ2xvbmcsIG91dCBvZiB3aGljaCA0MDAgaGVjdGFyZXMgYXJlIGNlcnRpZmllZCBhcyBvcmdhbmljIGJ5IE1hbmlwdXIgb3JnYW5pYyBtaXNzaW9uIGFnZW5jeSAgIChNT01BKS4gICBQYWlyIDQgaXMgY29ycmVjdDogVGhlIGZhbW91cyBSYXRhdWwgbWFuZ28sIGN1bHRpdmF0ZWQgaW4gQmFnaHBhdCBkaXN0cmljdCBvZiBVdHRhciBQcmFkZXNoIHdhcyBhd2FyZGVkICAgdGhlIEdlb2dyYXBoaWNhbCBJbmRpY2F0aW9uIChHSSkgY2VydGlmaWNhdGUgYnkgdGhlIEdlb2dyYXBoaWNhbCBJbmRpY2F0aW9uIFJlZ2lzdHJ5LCBDaGVubmFpLiAgICAxKSBUaGUgbWFuZ28gZ290IGl0cyBuYW1lIFJhdGF1bCBmcm9tIHRoZSB2aWxsYWdlIHdoZXJlIGl0IG9yaWdpbmF0ZWQuIFBvcHVsYXIgZm9yIGl0cyBzcGVjaWFsIGFyb21hIGFuZCAgIHRhc3RlLCB0aGUgbWFuZ28gaXMgYWxzbyBjbGFpbWVkIGJ5IFBha2lzdGFuIGFzIGl0cyBuYXRpdmUgcHJvZHVjZS4gVGhlIGNsYWltIGlzIGNvbnRlc3RlZCBieSBSYXRhdWwgICBNYW5nbyBQcm9kdWNlcnMnIEFzc29jaWF0aW9uIHdoaWNoIGhhZCBiZWVuIG1ha2luZyBlZmZvcnRzIHRvIGdldCB0aGUgR2VvZ3JhcGhpY2FsIEluZGljYXRvciAoR0kpIHRhZyAgIGZvciB0aGUgbWFuZ28gdmFyaWV0eSBmb3Igb3ZlciBhIGRlY2FkZS4gSXRzIEdJIGNlcnRpZmljYXRpb24gcHJvY2VzcyB3YXMgYWNjZWxlcmF0ZWQgYnkgdGhlIENlbnRyYWwgICBJbnN0aXR1dGUgb2YgU3VidHJvcGljYWwgSG9ydGljdWx0dXJlIChDSVNIKSwgTHVja25vdyBhcyBhIGZhY2lsaXRhdG9yIHNpbmNlIDIwMjAuICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdS5jb20gb2RheXMtcGFwZXIvZ2ktdGFnLWZvci1kYWxsZS1raHVyc2FuaS1jaGlsbGktZnJvbS0gIHNpa2tpbS9hcnRpY2xlMzI3MDA0NzEuZWNlICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL25vcnRoLWVhc3QtaW5kaWEvbWFuaXB1ci9oYXRoZWktY2hpbGxpcy10YW1lbmdsb25nLW9yYW5nZXMtICBtYW5pcHVyLWdpLXRhZy0gIDc1MTc4MjcvIzp+OnRleHQ9SGF0aGVpJTIwY2hpbGxpJTJDJTIwd2hpY2glMjBpcyUyMGZvdW5kLHRvJTIwdGhlJTIwZGF5JTIwZm9yJTIwTWFuaXB1ciEgICBodHRwczovL3d3dy5oaW5kdXN0YW50aW1lcy5jb20vY2l0aWVzL2x1Y2tub3ctbmV3cy9jaXNoLWhlbHBzLXJhdGF1bC1tYW5nb2VzLWdldC1naS10YWctICAxMDE2MzQyMjU1Njg5MzIuaHRtbCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "2 and 4 only   "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following statements is  correct with reference to the folk-art form of  Pandavani?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgY29ycmVjdC4gICAgUGFuZGF2YW5pIGlzIGEgbHlyaWNhbCBmb2xrIGJhbGxhZCBmb3JtIHRoYXQgbmFycmF0ZXMgdGhlIHN0b3J5IG9mIHRoZSBQYW5kYXZhcy4gUGFuZGF2YW5pIHRoZWF0cmUgdXN1YWxseSBoYXMgICBhIGxlYWQgYXJ0aXN0IGFuZCBzb21lIHN1cHBvcnRpbmcgc2luZ2VycyBhbmQgbXVzaWNpYW5zLiAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3Q6IFBhbmRhdmFuaSBpcyB0aGUgZm9sayB0aGVhdHJlIG9mIENoaGF0dGlzZ2FyaC4gICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogSW4gUGFuZGF2YW5pLCB0YWxlcyBmcm9tIE1haGFiaGFyYXRhIGFyZSBzdW5nIGFzIGEgYmFsbGFkIGFuZCBvbmUgb3IgdHdvIGVwaXNvZGVzICAgYXJlIGNob3NlbiBmb3IgdGhlIG5pZ2h0J3MgcGVyZm9ybWFuY2UuIEJoaW1hIGlzIHRoZSBoZXJvIHRoZSB0YWxlcyBpbiBQYW5kYXZhbmkuICAgIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IFRoZSBtYWluIHNpbmdlciBjb250aW51b3VzbHkgc2l0cyB0aHJvdWdob3V0IHRoZSBwZXJmb3JtYW5jZS4gV2l0aCBwb3dlcmZ1bCBzaW5naW5nICAgYW5kIHN5bWJvbGljIGdlc3R1cmVzLCBoZSBhc3N1bWVzIGFsbCB0aGUgY2hhcmFjdGVycyBvZiB0aGUgZXBpc29kZSBvbmUgYWZ0ZXIgYW5vdGhlci4gICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBQYW5kYXZhbmkgaXMgYWxsIGluY2x1c2l2ZSBvZiBnYXlhbiAoc2luZ2luZykgYW5kIHZhZGFuIChwbGF5aW5nIGFuIGluc3RydW1lbnQpLiAgIFVzdWFsbHksIHRoZSBzb25ncyBhcmUgc2V0IHRvIHRoZSByaHl0aG0gb2YgYSB0YW1idXJhLiAgICBJbiBQYW5raGlkYSBmb2xrIG11c2ljLCB0aGUgcGVhc2FudHMgb2YgUmFqYXN0aGFuIHNpbmdzIHdoaWxlIGRvaW5nIHdvcmsgaW4gdGhlIGZpZWxkcy4gVGhleSBwbGF5ICAgaW5zdHJ1bWVudHMgbGlrZSBhbGdvemEgYW5kIG1hbmppcmEuIFRoZSBsaXRlcmFsIG1lYW5pbmcgb2YgdGhlIHdvcmQgJ1BhbmtoaWRhJyBpcyBsb3Zlci4gICAgS25vd2xlZGdlIEJhc2U6IFRlZWphbiBCYWkgYW5kIFJpdHUgVmVybWEgYXJlIHJlbm93bmVkIHNpbmdlcnMgb2YgUGFuZHZhbmkuICAgIFNvdXJjZTogICAgaHR0cDovL2NjcnRpbmRpYS5nb3YuaW4vcmVnaW9uYWxtdXNpYy5waHAgICAgSW5kaWFuIEFydCBhbmQgQ3VsdHVyZSBieSBOaXRpbiBTaW5naGFuaWEgMm5kIEVkaXRpb24gLSBDaGFwdGVyIDUgLSBJbmRpYW4gTXVzaWMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is the folk theatre of Maharashtra.    ",
        "option2" : " It is based on Ramayana.  ",
        "option3" : " The main singer assumes all the characters   of the episode one after another.  ",
        "option4" : " The musical instruments like algoza and   manjira are used.    "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements with  reference to major scientific discoveries during  Medieval period of Indian history:  1. Babur was the first to initiate and utilize  metal cylinder rockets.    2. Use of saltpetre for cooling water was  discovered during this period.  Which of the above options is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFNvbWUgdGVjaG5pY2FsIGRldmljZXMgbGlrZSBnZWFyaW5nLCBiZWx0LWRyaXZlLCB3ZWF2aW5nLCBwYXBlciBtYW51ZmFjdHVyaW5nLCBkaXN0aWxsYXRpb24sIGFyY2hpdGVjdHVyZSwgICBtaWxpdGFyeSB0ZWNobm9sb2d5LCBtZXRhbCBzY3Jld3MsIHNoaXAtYnVpbGRpbmcgYW5kIGluIHNvbWUgYXJlYXMgb2YgYWdyaWN1bHR1cmUgd2VyZSBpbnZlbnRlZCBvciAgIGltcHJvdmVkIGluIHRoZSBtZWRpZXZhbCBJbmRpYS4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBJdCB3YXMgQWtiYXIgd2hvIHdhcyB0aGUgZmlyc3QgdG8gaW5pdGlhdGUgYW5kIHV0aWxpemUgbWV0YWwgY3lsaW5kZXIgcm9ja2V0cyBhZ2FpbnN0ICAgd2FyIGVsZXBoYW50cyBkdXJpbmcgdGhlIGJhdHRsZSBvZiBTYW1iYWwuIFRoZSBhcnQgcmVhY2hlZCBpdHMgemVuaXRoIGR1cmluZyB0aGUgcnVsZSBvZiBIYWlkZXIgQWxpIGFuZCBUaXB1ICAgU3VsdGFuIG9mIE15c29yZS4gICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEluIHRoZSBjaGVtaWNhbCBzZWN0b3IsIHJvc2Utc2NlbnQgYW5kIHRoZSB1c2Ugb2Ygc2FsdHBldHJlIGZvciB3YXRlci1jb29saW5nIHdlcmUgICBlbnRpcmVseSBuZXcgZGlzY292ZXJpZXMuIEFidWwgRmF6bCBjb21tZW50cyB0aGF0IHNhbHRwZXRyZSwgd2hpY2ggaW4gZ3VucG93ZGVyIHByb2R1Y2VzIHRoZSBleHBsb3NpdmUgICBoZWF0cywgaXMgdXNlZCBhcyBhIG1lYW5zIGZvciBjb29saW5nIHdhdGVyLiBUaGlzIGRpc2NvdmVyeSBoYXMgYmVlbiBhdHRyaWJ1dGVkIHRvIEVtcGVyb3IgQWtiYXIuICAgU291cmNlOiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlOiBOaXRpbiBTaW5naGFuaWEgM3JkIEVkaXRpb24gICAgIGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NlY0lDSENvdXIvRW5nbGlzaC9DSC4xNi5wZGYgICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8xMjE5NS8xL1VuaXQtNS5wZGYgICAgTkNFUlQgUlMgU2hhcm1hOiBBbmNpZW50IEluZGlhICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 41,
      "question" : "With reference to India's contributions to  science and technology, consider the following  statements:  1.  The value of Pi was first calculated by  Aryabhata in India.  2.  The decimal number system was first taken  from India by the Arabs, who introduced it  to the world.  3.  Bhaskaracharya was the first to rightly  calculate the duration of revolution of earth.   Which of the above-mentioned statements  is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIHdhcyBhY3RpdmVseSBjb250cmlidXRpbmcgdG8gdGhlIGZpZWxkIG9mIHNjaWVuY2UgYW5kIHRlY2hub2xvZ3kgY2VudHVyaWVzIGxvbmcgYmVmb3JlIG1vZGVybiAgIGxhYm9yYXRvcmllcyB3ZXJlIHNldCB1cC4gTWFueSB0aGVvcmllcyBhbmQgdGVjaG5pcXVlcyBkaXNjb3ZlcmVkIGJ5IHRoZSBhbmNpZW50IEluZGlhbnMgaGF2ZSBjcmVhdGVkICAgYW5kIHN0cmVuZ3RoZW5lZCB0aGUgZnVuZGFtZW50YWxzIG9mIG1vZGVybiBzY2llbmNlIGFuZCB0ZWNobm9sb2d5LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdCAtIFRoZSB2YWx1ZSBvZiAnUGknIHdhcyBmaXJzdCBjYWxjdWxhdGVkIGJ5IEJhdWRoYXlhbmEgYW5kIGhlIGFsc28gZXhwbGFpbmVkIHRoZSAgIGNvbmNlcHQgb2YgUHl0aGFnb3JhcyB0aGVvcmVtLiBUaGUgY29uY2VwdCBvZiBBbGdlYnJhLCBHZW9tZXRyeSBhbmQgVHJpZ29ub21ldHJ5IGFsc28gd2VudCBhYnJvYWQgICBmcm9tIEluZGlhLiBUaGUgZWFybGllc3QgYm9vayBvbiBtYXRoZW1hdGljcyB3YXMgU3VsdmFzdXRyYSB3cml0dGVuIGJ5IEJhdWRoYXlhbmEgaW4gdGhlIDZ0aCBjZW50dXJ5IEJDLiAgIFRoZXJlIGlzIGEgbWVudGlvbiBvZiAnUGknIGFuZCBldmVuIHNvbWUgY29uY2VwdHMgdmVyeSBzaW1pbGFyIHRvIFB5dGhhZ29yYXMgdGhlb3JlbSBpbiB0aGUgU3VsdmFzdXRyYS4gUGkgICBpcyBwcmVzZW50bHkgdXNlZCB0byBjYWxjdWxhdGUgdGhlIGFyZWEgYW5kIGNpcmN1bWZlcmVuY2Ugb2YgdGhlIGNpcmNsZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IC0gSW5kaWFucywgYXMgZWFybHkgYXMgNTAwIEJDRSwgaGFkIGRldmlzZWQgYSBzeXN0ZW0gb2YgZGlmZmVyZW50IHN5bWJvbHMgZm9yIGV2ZXJ5ICAgbnVtYmVyIGZyb20gb25lIHRvIG5pbmUuIFRoaXMgbm90YXRpb24gc3lzdGVtIHdhcyBhZG9wdGVkIGJ5IHRoZSBBcmFicy4gVGhlIG1hcml0aW1lIHRyYWRlcnMgdG9vayB0aGUgICBkZWNpbWFsIHN5c3RlbSB0byBBcmFiaWEuIFRoZSBBcmFicyBhY2tub3dsZWRnZWQgdGhlaXIgZGVidCB0byBJbmRpYSBieSBjYWxsaW5nIG1hdGhlbWF0aWNzICdoaW5kaXNhdCcgICAocGVydGFpbmluZyB0byBJbmRpYSkuIFRoZSBjb25jZXB0cyB3ZXJlIGxhdGVyIGFkb3B0ZWQgYnkgdGhlIHdlc3Rlcm4gd29ybGQgZnJvbSB0aGVyZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0IC0gSW5kaWFuIHNjaWVudGlzdCBCaGFza2FyYWNoYXJ5YSAoNXRoIGNlbnR1cnkpIGNvbnRyaWJ1dGVkIHRvIHdvcmxkIGJ5IHJpZ2h0bHkgICBjYWxjdWxhdGluZyB0aGUgdGltZSB0YWtlbiBieSB0aGUgZWFydGggdG8gb3JiaXQgdGhlIHN1biBodW5kcmVkcyBvZiB5ZWFycyBiZWZvcmUgdGhlIGFzdHJvbm9tZXIgU21hcnQuICAgSGlzIGNhbGN1bGF0aW9uIHdhcyAtIFRpbWUgdGFrZW4gYnkgZWFydGggdG8gb3JiaXQgdGhlIHN1biBpcyAzNjUuMjU4NzU2NDg0IGRheXMuICAgU291cmNlOiAgTml0aW4gU2luZ2hhbmlhIEFydCBhbmQgQ3VsdHVyZSAtIENoYXB0ZXIgLSAyNCAtIEluZGlhbiBDdWx0dXJlcyBBYnJvYWQgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "None of the above       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the history of glassware  in ancient India, consider the following  statements:  1.  The term 'Kanch' was first used in the  Satapatha Brahmana  2.  There are evidences of glass industry  operating in Brahmapuri district of  Maharashtra in 2nd century BC.  3.  Sanskrit text Vyasayogacharita mentions  the use of spectacles.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgY29ycmVjdCAgIEdsYXNzd2FyZSB3YXMgYW4gaW1wb3J0YW50IGhhbmRpY3JhZnQgY3JhZnRlZCBzaW5jZSBhbmNpZW50IHRpbWVzLiBIb3dldmVyLCBtYXRlcmlhbCBldmlkZW5jZSBkb2VzIG5vdCAgIGdpdmUgYW55IGluZGljYXRpb24gb2YgZ2xhc3MgYmVhZHMgaW4gdGhlIGVhcmx5IEhhcmFwcGFuIENpdmlsaXNhdGlvbi4gVGhlIGZpcnN0IG1hdGVyaWFsIGV2aWRlbmNlIHdhcyBmb3VuZCAgIGluIHRoZSBmb3JtIG9mIGJlYXV0aWZ1bCBnbGFzcyBiZWFkcyBmcm9tIHRoZSBQYWludGVkIEdyZXkgV2FyZSBjdWx0dXJlIG9mIHRoZSBHYW5nZXMgVmFsbGV5ICgxMDAwIEJDKS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJdCB3YXMgaW4gdGhlIFZlZGljIHRleHQgY2FsbGVkIFNhdGFwYXRoYSBCcmFobWFuYSB0aGF0IHRoZSB0ZXJtIHVzZWQgZm9yIGdsYXNzICAgd2FzIGthbmNoIG9yIGthY2EuIFRoZSBmaXJzdCByZWZlcmVuY2UgdG8gZ2xhc3MgbWFraW5nIHdhcyBmb3VuZCBpbiB0aGUgSW5kaWFuIGVwaWMgTWFoYWJoYXJhdGEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQXJjaGFlb2xvZ2ljYWwgZXZpZGVuY2VzIGhhdmUgYmVlbiBmb3VuZCBvZiBhIGdsYXNzIGluZHVzdHJ5IGluIEJyYWhtYXB1cmkgYW5kICAgS29saGFwdXIgaW4gTWFoYXJhc2h0cmEuIEl0IHdhcyBvcGVyYXRpb25hbCBiZXR3ZWVuIDJuZCBjZW50dXJ5IEJDLTJuZCBjZW50dXJ5IEFEIGFuZCBwcm9kdWNlZCAgIHNwZWNpYWxpc2VkIGdsYXNzd2FyZSwgY2FsbGVkIGxlbnRpY3VsYXIgYmVhZHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHJlZmVyZW5jZXMgb2Ygc3BlY3RhY2xlcyBoYXZlIGJlZW4gZm91bmQgaW4gdGhlIFNhbnNrcml0IHRleHQgICBWeWFzYXlvZ2FjaGFyaXRhLiBUaGlzIHNob3dzIHRoYXQgdGhlIGdsYXNzIGluZHVzdHJ5IGhhZCBtYWRlIGEgZm9yYXkgaW4gb3B0aWNhbCBsZW5zZXMuICAgS25vd2xlZGdlIEJhc2U6ICAgIE90aGVyIGZhY3RzIHJlbGF0aW5nIHRvIGdsYXNzd2FyZSBpbiBJbmRpYTogICAxKSBJbiB0aGUgc291dGhlcm4gcGFydCBvZiBJbmRpYSwgYXJjaGFlb2xvZ2ljYWwgZXZpZGVuY2VzIGhhdmUgYmVlbiBmb3VuZCBvZiBnbGFzcyBhdCBNYXNraSwgd2hpY2ggaXMgYSAgIENoYWxjb2xpdGhpYyBzaXRlIGluIHRoZSBEZWNjYW4uICAgIDIpIE90aGVyIHNpdGVzIHRoYXQgaGF2ZSB5aWVsZGVkIGV2aWRlbmNlcyBvZiBnbGFzcyBhcmUgQWhhciAoUmFqYXN0aGFuKSwgSGFzdGluYXB1ciBhbmQgQWhpY2hhY2hoYXRyYSAgIChVdHRhciBQcmFkZXNoKSwgRXJhbiBhbmQgVWpqYWluIChNYWRoeWEgUHJhZGVzaCksIGV0Yy4gICAgIG9mIDIzICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgMykgTXVnaGFsIFBlcmlvZDogVXNlZCBhcyBkZWNvcmF0aW9uIGluIHRoZWlyIG1vbnVtZW50cyBsaWtlIHRoZSBTaGVlc2ggTWFoYWwuIE90aGVyIGdsYXNzIGl0ZW1zIHdlcmUgICBnbGFzcyBodWtrYXMsIHBlcmZ1bWUgYm94ZXMgb3IgaXR0YXJkYW5zIGFuZCBlbmdyYXZlZCBnbGFzc2VzLiAgIDQpIE1vc3QgZXhxdWlzaXRlIGdsYXNzIGJhbmdsZXMgYXJlIG1hZGUgaW4gSHlkZXJhYmFkIGFuZCBhcmUgY2FsbGVkICdDaHVyaSBrYSBqb2RhcycuICAgIDUpIEZpcm96YWJhZCBpcyBmYW1vdXMgZm9yIGdsYXNzIGNoYW5kZWxpZXJzLiAgIDYpIFNhaGFyYW5wdXIsIFUuUCBwcm9kdWNlcyAncGFuY2hrb3JhJyBvciBnbGFzcyB0b3lzIGZvciBjaGlsZHJlbi4gICA3KSBQYXRuYSAoQmloYXIpIHByb2R1Y2VzIGEgcGVjdWxpYXIga2luZCBvZiBkZWNvcmF0aXZlIGdsYXNzIGJlYWRzIGNhbGxlZCAnVGlrdWxpJy4gSXQgaXMgc3RpbGwgd29ybiBieSB0aGUgICBTYW50aGFsIHRyaWJlcyBvZiBCaWhhci4gICAgU291cmNlOiBJbmRpYW4gQXJ0ICYgQ3VsdHVyZSwgTml0aW4gU2luZ2hhbmlhLCAzcmQgRWRpdGlvbiwgQ2hhcHRlci0zICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements:   1.  Bhavai mainly incorporates an extensive use  of dance to narrate a series of small plays.  2.  Mudiyettu depicts the mythological tale of a  battle between the Krishna and the Kansa.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQmhhdmFpIGlzIGEgcG9wdWxhciBmb2xrIHRoZWF0cmUgZm9ybSBvZiBHdWphcmF0IGFuZCBSYWphc3RoYW4sIG1haW5seSBpbiB0aGUgcmVnaW9ucyAgIG9mIEt1dGNoaCBhbmQgS2F0aGlhd2FyLiBUaGlzIGZvcm0gaW5jb3Jwb3JhdGVzIGFuIGV4dGVuc2l2ZSB1c2Ugb2YgZGFuY2UgdG8gbmFycmF0ZSBhIHNlcmllcyBvZiBzbWFsbCAgIHBsYXlzLiBUaGUgdGhlbWUgb2YgdGhlIHBsYXkgaXMgZ2VuZXJhbGx5IHJvbWFudGljLiBUaGUgcGxheSBpcyBhY2NvbXBhbmllZCBieSBhIHNlbWktY2xhc3NpY2FsIG11c2ljLCAgIHBsYXllZCBpbiBhIGRpc3RpbmN0IGZvbGsgc3R5bGUgd2l0aCBpbnN0cnVtZW50cyBzdWNoIGFzIEJodW5nYWxhLCBKaGFuamhhIGFuZCB0YWJsYS4gVGhlIHN1dHJhZGhhcmEgaXMga25vd24gICBhcyBOYXlha2EgaW4gdGhlIEJoYXZhaSB0aGVhdHJlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE11ZGl5ZXR0dSBpcyBhIHRyYWRpdGlvbmFsIHJpdHVhbCB0aGVhdHJlIHBlcmZvcm1lZCBpbiBLZXJhbGEuIEl0IGRlcGljdHMgdGhlICAgbXl0aG9sb2dpY2FsIHRhbGUgb2YgYSBiYXR0bGUgYmV0d2VlbiB0aGUgR29kZGVzcyBLYWxpIGFuZCB0aGUgZGVtb24gRGFyaWthLiBUaGUgZGFuY2UgaXMgcGVyZm9ybWVkIGluICAgdGhlIHZpbGxhZ2UgdGVtcGxlcyBpbiBiZXR3ZWVuIEZlYnJ1YXJ5IGFuZCBNYXkgYWZ0ZXIgdGhlIGhhcnZlc3Rpbmcgc2Vhc29uLiBUaGUgcGVyZm9ybWVycyBkbyBoZWF2eSAgIG1ha2UtdXAgYW5kIHdlYXIgZ29yZ2VvdXMgYXR0aXJlIHdpdGggY29udmVudGlvbmFsIGZhY2lhbCBwYWludGluZy4gSXQgaXMgaW5jbHVkZWQgaW4gdGhlIGludGFuZ2libGVzIGluIHRoZSAgIFJlcHJlc2VudGF0aXZlIExpc3Qgb2YgdGhlIEludGFuZ2libGUgQ3VsdHVyYWwgSGVyaXRhZ2Ugb2YgSHVtYW5pdHkuICAgIFNvdXJjZTogICBBcnQgYW5kIEN1bHR1cmUgYnkgTml0aW4gU2luZ2hhbmlhIC0gQ2hhcHRlciAxMCAtIFVORVNDTydTIExpc3Qgb2YgSW50YW5naWJsZSBDdWx0dXJhbCBIZXJpdGFnZS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to the glove puppetry,  consider the following statements:  1.  Glove puppets necessarily involves the use  of both hands.  2.  The performance is usually accompanied by  the beats of drum.  3.  Putul Nachh is a larger variations of glove  puppet.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgVGhlIHRyYWRpdGlvbiBvZiBnbG92ZSBwdXBwZXRzIGluIEluZGlhIGlzIHBvcHVsYXIgaW4gVXR0YXIgUHJhZGVzaCwgT3Jpc3NhLCBXZXN0IEJlbmdhbCBhbmQgS2VyYWxhLiBHbG92ZSAgIHB1cHBldHMgYXJlIGFsc28ga25vd24gYXMgc2xlZXZlLCBoYW5kIG9yIHBhbG0gcHVwcGV0cy4gVGhlIHB1cHBldHMgYXJlIGdlbmVyYWxseSBtYWRlIG9mIGNsb3RoIG9yIHdvb2QsICAgd2l0aCBzb21lIHZhcmlhdGlvbnMgYXMgd2VsbC4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIEJvdGggdGhlIGhhbmRzIGFyZSBub3QgbmVjZXNzYXJpbHkgaW52b2x2ZWQgaW4gbWFuYWdpbmcgdGhlIGdsb3ZlIHB1cHBldHMuIFRoZSAgIHB1cHBldGVlciB3ZWFycyB0aGUgcHVwcGV0IGFzIGEgZ2xvdmUsIG1hbmlwdWxhdGluZyB0aGUgaGVhZCB3aXRoIGhpcyBpbmRleCBmaW5nZXIuIFRoZXNlIHB1cHBldHMgYXJlIGxpa2UgICBsaW1wIGRvbGxzLCBidXQgaW4gdGhlIGhhbmRzIG9mIGFuIGFibGUgcHVwcGV0ZWVyLCBhcmUgY2FwYWJsZSBvZiBwcm9kdWNpbmcgYSB3aWRlIHJhbmdlIG9mIG1vdmVtZW50cy4gVGhlICAgbW92ZW1lbnRzIGFyZSBjb250cm9sbGVkIGJ5IHRoZSBodW1hbiBoYW5kIHRoZSBmaXJzdCBmaW5nZXIgaW5zZXJ0ZWQgaW4gdGhlIGhlYWQgYW5kIHRoZSBtaWRkbGUgZmluZ2VyICAgYW5kIHRoZSB0aHVtYiBhcmUgdGhlIHR3byBhcm1zIG9mIHRoZSBwdXBwZXQuIFdpdGggdGhlIGhlbHAgb2YgdGhlc2UgdGhyZWUgZmluZ2VycywgdGhlIGdsb3ZlIHB1cHBldCAgIGNvbWVzIGFsaXZlLiBJbiBPcmlzc2EsIHRoZSBwdXBwZXRlZXIgcGxheXMgb24gdGhlIGRob2xhayB3aXRoIG9uZSBoYW5kIGFuZCBtYW5pcHVsYXRlcyB0aGUgcHVwcGV0IHdpdGggICB0aGUgb3RoZXIuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHBlcmZvcm1hbmNlIG9mIGdsb3ZlIHB1cHBldHMgaXMgdXN1YWxseSBhY2NvbXBhbmllZCBieSByaHl0aG1pYyBiZWF0cyBvZiAgIGRydW0gb3IgZGhvbGFrLiBUaGUgZGVsaXZlcnkgb2YgdGhlIGRpYWxvZ3VlcywgdGhlIG1vdmVtZW50IG9mIHRoZSBwdXBwZXQgYW5kIHRoZSBiZWF0IG9mIHRoZSBkaG9sYWsgYXJlICAgd2VsbCBzeW5jaHJvbmlzZWQgYW5kIGNyZWF0ZSBhIGRyYW1hdGljIGF0bW9zcGhlcmUuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gUHV0dWwgTmFjaGggaXMgdGhlIHRyYWRpdGlvbmFsIHJvZCBwdXBwZXQgZGFuY2Ugb2YgQmVuZ2FsLU9kaXNoYS1Bc3NhbSBSZWdpb24uICAgUm9kIHB1cHBldHMgYXJlIGxhcmdlciB2YXJpYXRpb25zIG9mIGdsb3ZlIHB1cHBldCBhbmQgYXJlIGNvbnRyb2xsZWQgYnkgdGhlIHB1cHBldGVlciB3aXRoIHRoZSBoZWxwIG9mICAgcm9kcyBmcm9tIGJlaGluZCBhIHNjcmVlbi4gSXQgaXMgbWFpbmx5IHBvcHVsYXIgaW4gdGhlIHJlZ2lvbiBvZiBFYXN0ZXJuIEluZGlhLiBQdXR1bCBOYWNoaCBpcyB0aGUgdHJhZGl0aW9uYWwgICByb2QgcHVwcGV0IGRhbmNlIG9mIEJlbmdhbC1PZGlzaGEtQXNzYW0gUmVnaW9uLiBUaGUgZmlndXJlcyBhcmUgZ2VuZXJhbGx5IHRocmVlIHRvIGZvdXIgZnQuIGhpZ2ggYW5kICAgZHJlc3NlZCBsaWtlIGNoYXJhY3RlcnMgb2YgSmF0cmEuIFRoZXkgZ2VuZXJhbGx5IGhhdmUgdGhyZWUgam9pbnRzIC0gYXQgdGhlIG5lY2sgYW5kIGF0IHRoZSBzaG91bGRlcnMuICAgU291cmNlOiBJbmRpYW4gQXJ0ICYgQ3VsdHVyZSwgTml0aW4gU2luZ2hhbmlhLCAzcmQgRWRpdGlvbiwgQ2hhcHRlci04ICAgaHR0cDovL2NjcnRpbmRpYS5nb3YuaW4vcHVwcGV0Zm9ybXMucGhwICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 45,
      "question" : "With reference to the Idu Mishmi  Textiles, consider the following statements:  1.  It is a traditional woven textile from Sikkim.  2.  It has been traditionally done using silk  fabric only.  3.  It has received a GI Tag.   Which of the statements given above is/ are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBNaXNobWkgaXMgYW4gZXRobmljIGdyb3VwIG9mIEFydW5hY2hhbCBQcmFkZXNoLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIElkdSBNaXNobWkgdGV4dGlsZSBpcyBhIHRyYWRpdGlvbmFsIHRleHRpbGUgd292ZW4gYnkgdGhlIHdvbWVuIG9mIHRoZSBJZHUgICBzdWJncm91cCBvZiBNaXNobWkgdHJpYmUgb2YgQXJ1bmFjaGFsIFByYWRlc2guICAgT3RoZXIgTWlzaG1pIHN1YiBncm91cHMgbGlrZSBLYW1hbiBhbmQgVGFyYW9uIE1pc2htaXMgaGF2ZSB0aGVpciBvd24gZGlzdGluY3QgdGV4dGlsZXMgdG9vLCBoZW5jZSB0aGV5ICAgYXJlIG5vdCB0byBiZSBjb25mdXNlZC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRyYWRpdGlvbmFsbHkgaXQgaGFzIGJlZW4gZG9uZSBvbiBjb3R0b24gZmFicmljLiBIb3dldmVyLCB0aGVzZSBkYXlzIGFjcnlsaWMgICB5YXJucyBhcmUgaW5jb3Jwb3JhdGVkIHRvIGNyZWF0ZSBtb2Rlcm4gZGVzaWducyBhbmQgdGV4dHVyZXMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSXQgaGFzIHJlY2VpdmVkIGEgR0kgVGFnIGluIDIwMTktMjAuIEl0IGhhcyBiZWVuIHJlY29nbml6ZWQgYXMgaGF2aW5nIGEgZGlzdGluY3QgICBkaWFtb25kIGFuZCBiYW5kIHBhdHRlcm4gYW5kIHNwZWNpYWwgY3VsdHVyYWwgc2lnbmlmaWNhbmNlIGR1ZSB0byB1c2FnZSBpbiB0cmFkaXRpb25hbCBmZXN0aXZhbHMgYW5kICAgY2VyZW1vbmllcyBvZiB0aGUgSWR1IE1pc2htaS4gICBTb3VyY2U6ICBodHRwczovL2FzaWFpbmNoLm9yZy9jcmFmdC9pZHUtbWlzaG1pLXRleHRpbGVzLW9mLWFydW5hY2hhbC1wcmFkZXNoLyAgIGh0dHA6Ly9pZ25jYS5nb3YuaW4vZGl2aXNpb25zcy9qYW5hcGFkYS1zYW1wYWRhL25vcnRoZWFzdGVybi1yZWdpb25hbC1jZW50cmUgZXh0aWxlcy1vZi0gIGFydW5hY2hhbC1wcmFkZXNoLyAgIGh0dHBzOi8vYXJ1bmFjaGFsdGltZXMuaW4vaW5kZXgucGhwLzIwMTkvMTEvMzAvaWR1LW1pc2htaS10ZXh0aWxlcy1naS1jZXJ0aWZpY2F0ZS1oYW5kZWQtb3Zlci0gIGltY2xzLyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements with  respect to the foreign coins in India:  1.  The influx of Roman coin aureus, led to  minting of gold coin in India called as dinara.  2.  The coins issued by Indo-Scythians had the  inscription of Buddhist chaitya.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBmb3JlaWduIGNvaW5zIGhhZCBhbiBpbmZsdWVuY2Ugb24gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBjb2luYWdlIHN5c3RlbSBpbiBJbmRpYS4gRm9yIGV4YW1wbGU6IEluZG8tICBHcmVla3MgaW50cm9kdWNlZCB0aGUgZmFzaGlvbiBvZiBzaG93aW5nIHRoZSBidXN0b3IgaGVhZCBvZiB0aGUgcnVsZXIgb24gdGhlIGNvaW5zLiBEdXJpbmcgdGhpcyBwZXJpb2QsIHRoZSAgIG1pbnRpbmcgd2FzIGV4ZWN1dGVkIGluIGEgbW9yZSByZWZpbmVkIG1hbm5lci4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBcyBhIHJlc3VsdCBvZiB0aGUgaW5mbHV4IG9mIHRoZSBhdXJldXMgKGdvbGQgY29pbiBvZiBhbmNpZW50IFJvbWUpIHRvIEluZGlhLCB0aGUgICBLdXNoYW5zIGJlZ2luIHRvIG1pbnQgYSBnb2xkIGNvaW4gY2FsbGVkIHRoZSBkxKtuYXJhIChhZnRlciB0aGUgZGVuYXJpdXMpLCB3aGljaCBtYXRjaGVzIHRoZSBhdXJldXMgaW4gICB3ZWlnaHQsIHRodXMgYWRkaW5nIGEgd2hvbGUgbmV3IG1ldGFsIGFuZCBkZW5vbWluYXRpb24gdG8gdGhlIG1vbmV5IHN1cHBseS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgY29pbnMgb2YgdGhlIEluZG8tU2N5dGhpYW5zIGhhdmUgaGVhZCBvZiB0aGUga2luZyBvbiBvbmUgc2lkZSBhbmQgb24gdGhlIG90aGVyICAgc2lkZSwgdGhleSBjYXJyeSB0aGUgZGV2aWNlIG9mIHRoZSBCdWRkaGlzdCBjaGFpdHlhIG9yIHN0dXBhIGV2aWRlbnRseSBib3Jyb3dlZCBmcm9tIFNhdGF2YWhhbmFzLiBQcmFrcml0ICAgbGFuZ3VhZ2UgaGFzIGJlZW4gZm91bmQgd3JpdHRlbiBpbiBtYW55IHNjcmlwdHMuIEluZG8tU2N5dGhpYW5zIG9yIFdlc3Rlcm4gU2F0cmFwcyAoMzUtNDA1IEFEKSB3ZXJlIGEgICBncm91cCBvZiBub21hZGljIElyYW5pYW4gcGVvcGxlcyBvZiBTYWthIGFuZCBTY3l0aGlhbiBvcmlnaW4gd2hvIG1pZ3JhdGVkIGZyb20gQ2VudHJhbCBBc2lhIHNvdXRod2FyZCAgIGludG8gbm9ydGhlcm4gYW5kIHdlc3Rlcm4gcmVnaW9ucyBvZiBhbmNpZW50IEluZGlhLiBUaGV5IGhhZCB0aGVpciBkb21pbmlvbiBpbiBXZXN0ZXJuIEluZGlhLCBvcmlnaW5hbGx5ICAgY29tcHJpc2luZyBNYWx3YSwgR3VqYXJhdCBhbmQgS2F0aGlhd2FyLiBUaGUgY29pbnMgYmVhciBkYXRlcyBvZiB0aGUgU2FrYSBlcmEsIHdoaWNoIHN0YXJ0ZWQgZnJvbSA3OCBBRC4gICBTb3VyY2U6IEluZGlhbiBBcnQgJiBDdWx0dXJlLCBOaXRpbiBTaW5naGFuaWEsIDNyZCBFZGl0aW9uLCBDaGFwdGVyLTI0ICAgaHR0cHM6Ly9jbGFzc2ljYWxzdHVkaWVzLm9yZy9hbm51YWwtbWVldGluZy8xNDgvYWJzdHJhY3Qvcm9tYW4tY29pbnMtYWJyb2FkLWZvcmVpZ24tY29pbmFnZS1hbmQtICBzdHJhdGVnaWVzLXNvdmVyZWlnbnR5LWFuY2llbnQgICBodHRwczovL2FydHNhbmRjdWx0dXJlLmdvb2dsZS5jb20vZW50aXR5L2luZG8tc2N5dGhpYW5zL20wM2Z4cjU/aGw9ZW4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the ancient history of  India, which one of the following is the correct  description of the term 'Shulbasutra'?   1. It is one of the earliest treatises on  mathematics.   2. It is a later Vedic commentary on  metaphysics and symbolism of sacrifice.    3. It is the earliest Dharmashastra texts  written in aphoristic (sutra) style.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgZWFybGllc3QgdGV4dCBvbiBtYXRoZW1hdGljcyB3YXMgU2h1bGJhc3V0cmEgd3JpdHRlbiBieSBCYXVkaHlhbmEgYXJvdW5kICAgNnRoIGNlbnR1cnkgQkMuIFRoZXJlIGlzIGEgbWVudGlvbiBvZiBmb3JtdWxhIGZvciB0aGUgc3F1YXJlIHJvb3Qgb2YgMiBhbmQgZXZlbiBzb21lIGNvbmNlcHRzIHNpbWlsYXIgdG8gICBQeXRoYWdvcmFzIFRoZW9yZW0uIEl0IGFsc28gY29udGFpbnMgZ2VvbWV0cnkgcmVsYXRlZCB0byBmaXJlIGFsdGFyIGNvbnN0cnVjdGlvbi4gICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQXJhbnlha2EsIGEgbGF0ZXIgVmVkaWMgY29tbWVudGFyeSB0aGF0IGlzIGEgZm9yZXN0IGJvb2sgdGhhdCBnaXZlcyBkZXRhaWwgYWJvdXQgICBtZXRhcGh5c2ljcyBhbmQgc3ltYm9saXNtIG9mIHNhY3JpZmljZS4gICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gS2FscGFzdXRyYSBpcyB0aGUgZWFybGllc3QgRGhhcm1hc2hhc3RyYSB0ZXh0cyB3cml0dGVuIGluIGFwaG9yaXN0aWMgKHN1dHJhKSBzdHlsZS4gICAgU291cmNlOiAgSW5kaWFuIEFydCBhbmQgQ3VsdHVyZSAtTml0aW4gU2luZ2hhbmlhICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements with  reference to punch marked coins, issued during  ancient India:   1.  Panini's Ashtadhyayi cites that each unit of  punch marked coins was called 'Ratti'.   2.  First such coins were called Puranas,  Karshapanas or Pana.   3.  These coins had standard weight and were  made up of gold with different markings.   Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgZWFybGllc3QgY29pbnMgd2VyZSBjYXN0ZWQgY29pbnMgYW5kIHdlcmUgZGllLXN0cnVjayBvbmx5IG9uIG9uZSBzaWRlLiBPbmUgdG8gZml2ZSBtYXJrcyBvciBzeW1ib2xzICAgaW5jdXNlZCBvbiBzaW5nbGUgc2lkZSBhbmQgdGVybWVkIGFzICdQdW5jaCBNYXJrZWQnIGNvaW5zLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gUGFuaW5pJ3MgQXNodGFkaHlheWkgY2l0ZXMgdGhhdCBpbiBwdW5jaCBtYXJrZWQgY29pbnMsIHRoZSBtZXRhbGxpYyBwaWVjZXMgd2VyZSAgIHN0YW1wZWQgd2l0aCBzeW1ib2xzLiBFYWNoIHVuaXQgd2FzIGNhbGxlZCAnUmF0dGknIHdlaWdoaW5nIDAuMTEgZ3JhbS4gVGhlIGZpcnN0IHRyYWNlIG9mIHRoaXMgY29pbiB3YXMgICBhdmFpbGFibGUgaW4gdGhlIHBlcmlvZCBiZXR3ZWVuIHNpeHRoIGFuZCBzZWNvbmQgY2VudHVyeSBCQy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIGZpcnN0IEluZGlhbiBwdW5jaCBtYXJrZWQgY29pbnMgY2FsbGVkIFB1cmFuYXMsIEthcnNoYXBhbmFzIG9yIFBhbmEgYW5kICAgd2VyZSBtaW50ZWQgaW4gdGhlIDZ0aCBjZW50dXJ5IEJDIGJ5IHRoZSB2YXJpb3VzIEphbmFwYWRhcyBhbmQgTWFoYWphbmFwYWRhcyBvZiB0aGUgSW5kby1HYW5nZXRpYyAgIFBsYWluLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZXNlIGNvaW5zIGhhZCBpcnJlZ3VsYXIgc2hhcGVzIGFuZCB3ZXJlIG1hZGUgdXAgb2Ygc2lsdmVyIHdpdGggZGlmZmVyZW50ICAgbWFya2luZ3MuIExpa2UgU2F1cmFzaHRyYSBoYWQgYSBodW1wZWQgYnVsbCwgRGFrc2hpbiBQYW5jaGFsYSBoYWQgYSBTd2FzdGlrYSBhbmQgTWFnYWRoYSBoYWQgICBnZW5lcmFsbHkgZml2ZSBzeW1ib2xzLiAgICAgS25vd2xlZGdlIEJhc2U6IE1hZ2FkaGFuIHB1bmNoLW1hcmtlZCBjb2lucyBiZWNhbWUgdGhlIG1vc3QgY2lyY3VsYXRlZCBjb2lucyBpbiBTb3V0aCBBc2lhLiBUaGV5IGFyZSAgIG1lbnRpb25lZCBpbiB0aGUgTWFudXNtcml0aSBhbmQgQnVkZGhpc3QgSmF0YWthIHN0b3JpZXMgYW5kIGxhc3RlZCB0aHJlZSBjZW50dXJpZXMgbG9uZ2VyIGluIHRoZSBzb3V0aCAgIHRoYW4gaW4gdGhlIG5vcnRoLiAgICAgQ2hhbmFreWEsIHRoZSBwcmltZSBtaW5pc3RlciB0byB0aGUgZmlyc3QgTWF1cnlhbiBlbXBlcm9yIENoYW5kcmFndXB0YSBNYXVyeWEsIG1lbnRpb25lZCB0aGUgbWludGluZyAgIG9mIHB1bmNoIG1hcmtlZCBjb2lucyBzdWNoIGFzIHJ1cHlhcnVwYSAoc2lsdmVyKSwgc3V2YXJuYXJ1cGEgKGdvbGQpLCB0YW1yYXJ1cGEgKGNvcHBlcikgYW5kIHNpc2FydXBhICAgKGxlYWQpIGluIGhpcyBBcnRoYXNoYXN0cmEgdHJlYXRpc2UuIE91dCBvZiB0aGUgdmFyaW91cyBzeW1ib2xzIHVzZWQsIHN1biBhbmQgc2l4IGFybWVkIHdoZWVsIHdlcmUgbW9zdCAgIGNvbnNpc3RlbnQuIFRoZSBjb2luIGNvbnRhaW5lZCBhbiBhdmVyYWdlIG9mIDUwLTU0IGdyYWlucyBvZiBzaWx2ZXIgYW5kIDMyIHJhdHRpcyBpbiB3ZWlnaHQgYW5kIHRlcm1lZCBhcyAgIEthcnNoYXBhbmFzLiBNYXVyeWFuIEthcnNoYXBhbmEgd2l0aCBzeW1ib2xzIG9mIHdoZWVsIGFuZCBlbGVwaGFudC4gICAgU291cmNlOiBJTkRJQU4gQVJUIGFuZCBDVUxUVVJFLCBOaXRpbiBTaW5naGFuaWEsIFAuTi4gLSA3NjgsNzY5ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only   ",
        "option3" : "1, 2 and 3   ",
        "option4" : "1 and 3 only      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 49,
      "question" : "Starting with the earliest, arrange these  ancient mathematicians in chronological order  based on their timeline:   1. Brahmagupta   2. Bhaskaracharya   3. Aryabhata   4. Baudhayana   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgTmFtZSAgUGVyaW9kICBGYW1vdXMgQm9vay9zICBBZGRpdGlvbmFsIEluZm9ybWF0aW9uICAgIEJhdWRoYXlhbmEgIDZ0aCBDZW4uIEJDICBTaHVsYmFzdXRyYSAgVGhlIGVhcmxpZXN0IHRyZWF0aXNlIG9uICAgbWF0aGVtYXRpY3MuIEdhdmUgdGhlIGZpcnN0ICAgY29uY2VwdCBvZiBQeXRoYWdvcmFzIFRoZW9yZW0uICAgIEFyeWFiaGF0YSAgNDc2LTU1MCBBRCAgQXJ5YWJoYXRpeWEgYW5kIEFyeWEgICBTYW1oaXRhICAgIEFyeWFiaGF0aXlhIGlzIG9uZSBvZiB0aGUgbW9zdCAgIGZhbW91cyBib29rIG9uIE1hdGhlbWF0aWNzIGFuZCAgIEFzdHJvbm9teSAgICBCcmFobWFndXB0YSAgN3RoIENlbi4gQUQgIEJyYWhtYXNwdXRhICAgU2lkZGhhbnRhICAgIFRoZSBib29rIG1lbnRpb25zIFplcm8gYXMgYSAgIG51bWJlci4gSGUgYWxzbyBpbnRyb2R1Y2VkICAgbmVnYXRpdmUgbnVtYmVycy4gSGlzIGJvb2sgYWxzbyAgIGNvbnRhaW5lZCBmaXJzdCBjbGVhciBkZXNjcmlwdGlvbiBvZiAgIFF1YWRyYXRpYyBGb3JtdWxhLiAgICBCaGFza2FyYWNoYXJ5YSAgMTJ0aCBDZW4gQUQgIFNpZGRoYW50YSBTaGlyb21hbmkgIEFsc28ga25vd24gYXMgQmhhc2thcmEtSUkuIEhpcyAgIGJvb2sgZGVhbHMgd2l0aCB0aGUgY3ljbGljIHByb2Nlc3MgICB0byBzb2x2ZSBhbGdlYnJhaWMgZXF1YXRpb25zLiAgICBLbm93bGVkZ2UgQmFzZTogQmhhc2thcmEtSSB3YXMgYSA3VEggY2VudHVyeSBtYXRoZW1hdGljaWFuIHdobyB3cm90ZSBBcnlhYmhhdGl5YS1iaGFzeWEgcmVsYXRlZCB0byAgIE1hdGhlbWF0aWNzIGFuZCBhc3Ryb25vbXkuIElTUk8gTGF1bmNoZWQgQmhhc2thcmEtMSBpbiAxOTc5LCBob25vcmluZyB0aGUgbWF0aGVtYXRpY2lhbi4gICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFNvdXJjZTogSW5kaWFuIEFydCBhbmQgQ3VsdHVyZSAtTml0aW4gU2luZ2hhbmlhICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3-4-1-2   ",
        "option2" : "4-3-2-1   ",
        "option3" : "4-3-1-2   ",
        "option4" : "3-4-2-1   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:  1.  The inscription on coins during Gupta  period was in Sanskrit.  2.  The coins issued by Kushan kings engraved  portrait heads on the coins.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIEd1cHRhIGFnZSAoMzE5IEFELTU1MCBBRCkgbWFya2VkIGEgcGVyaW9kIG9mIGdyZWF0IEhpbmR1IHJldml2YWwuIFRoZSBHdXB0YSAgIGNvaW5zIHdlcmUgbWFpbmx5IG1hZGUgb2YgZ29sZCwgYWx0aG91Z2ggdGhleSBpc3N1ZWQgc2lsdmVyIGFuZCBjb3BwZXIgY29pbnMgdG9vLiAgIFNpbHZlciBjb2lucyB3ZXJlIGlzc3VlZCBvbmx5IGFmdGVyIENoYW5kcmFndXB0YSBJSSBvdmVydGhyZXcgdGhlIFdlc3Rlcm4gU2F0cmFwcy4gVGhlIGluc2NyaXB0aW9ucyBvbiB0aGUgICBjb2lucyB3ZXJlIGFsbCBpbiBTYW5za3JpdCAoQnJhaG1pIHNjcmlwdCkgZm9yIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBoaXN0b3J5IG9mIGNvaW5zLiBHdXB0YSBydWxlcnMgaXNzdWVkICAgY29pbnMgZGVwaWN0aW5nIHRoZSBlbXBlcm9ycyBub3Qgb25seSBpbiBtYXJ0aWFsIGFjdGl2aXRpZXMgbGlrZSBodW50aW5nIGxpb25zIGlnZXJzLCBwb3Npbmcgd2l0aCB3ZWFwb25zLCAgIGV0Yy4sIGJ1dCBhbHNvIGluIGxlaXN1cmVseSBhY3Rpdml0aWVzIGxpa2UgcGxheWluZyBhIFZlZW5hLCB3aXRoIHJldmVyc2Ugc2lkZSBvZiB0aGUgY29pbiBoYXZpbmcgaW1hZ2VzIG9mICAgR29kZGVzcyBMYWtzaG1pLCBEdXJnYSwgR2FuZ2EsIEdhcnVkYSBhbmQgS2FydGlrZXlhLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEt1c2hhbiBraW5ncyBpbnRyb2R1Y2VkIHRoZSBHcmVlayBjdXN0b20gb2YgZW5ncmF2aW5nIHBvcnRyYWl0IGhlYWRzIG9uIHRoZSAgIGNvaW5zLiBLdXNoYW4gY29pbnMgd2VyZSBhZG9ybmVkIHdpdGggaGVsbWV0ZWQgYnVzdCBvZiB0aGUga2luZyBvbiBvbmUgc2lkZSwgYW5kIHRoZSBraW5nJ3MgZmF2b3VyaXRlIGRlaXR5ICAgb24gdGhlIHJldmVyc2UuIFRoZSBjb2lucyBpc3N1ZWQgYnkgS2FuaXNoa2EgZW1wbG95ZWQgb25seSBHcmVlayBjaGFyYWN0ZXJzLiAgICAgIFNvdXJjZTogSW5kaWFuIEFydCAmIEN1bHR1cmUsIE5pdGluIFNpbmdoYW5pYSwgM3JkIEVkaXRpb24sIENoYXB0ZXItMjQgICAgICBvZiAyMyAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
