{
  "testId" : "forum-2023-prelims-pts-8",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-pts-8.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "In the context of the Mauryan rule,  consider the following statements:   1.  The Mauryan bureaucracy was not as  elaborate as that of the Nandas.   2.  Slaves were mostly employed in agricultural  operations.   3.  Mauryan pillars were made of a single piece  of sandstone.   4. Adhyakshas were appointed to regulate  economic activities.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIER1cmluZyBNYXVyeWFuIHBlcmlvZCB0aGUgc3RhdGUgY29udHJvbGxlZCBhbG1vc3QgYWxsIHNwaGVyZXMgb2YgbGlmZS4gVGhpcyAgIHJlc3VsdGVkIGluIHZhc3QgTWF1cnlhbiBidXJlYXVjcmFjeSB3aGljaCB3YXMgbW9yZSBlbGFib3JhdGUgdGhhbiBhbnkgb3RoZXIgcGVyaW9kIG9mIGFuY2llbnQgaGlzdG9yeS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIEFydGhhc2FzdHJhIG9mIEthdXRpbHlhLCBzbGF2ZXMgd2VyZSBtb3N0bHkgZW1wbG95ZWQgaW4gYWdyaWN1bHR1cmFsICAgb3BlcmF0aW9ucy4gVGhlIHN0YXRlLW1haW50YWluZWQgZmFybXMsIG9uIHdoaWNoIGxhcmdlIG51bWJlciBvZiBzbGF2ZXMgd2VyZSBlbXBsb3llZC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gTWF1cnlhbiBzdG9uZSBwaWxsYXJzIHdlcmUgYXMgc2hpbmluZyBhcyB0aGUgTm9ydGhlcm4gQmxhY2sgUG9saXNoZWQgd2FyZS4gVGhleSAgIHdlcmUgbWFkZSBvZiBzaW5nbGUgcGllY2Ugb2Ygc2FuZHN0b25lLiBDYXBpdGFscyB3ZXJlIHBsYWNlZCBvbiB0aGUgdG9wIHdoaWNoIGNvbnRhaW4gYmVhdXRpZnVsICAgc2N1bHB0dXJlcyBvZiBsaW9ucyBhbmQgYnVsbHMuICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIEFzIHBlciBBcnRoYXNhc3RyYSBvZiBLYXV0aWx5YSwgdGhlIHN0YXRlIGFwcG9pbnRlZCAyNyBzdXBlcmludGVuZGVudHMgaS5lLiAgIEFkaHlha3NoYXMgdG8gcmVndWxhdGUgdGhlIGVjb25vbWljIGFjdGl2aXRpZXMgbGlrZSB0cmFkZSwgYWdyaWN1bHR1cmUsIGNvbW1lcmNlLCBtaW5pbmcgYW5kIHNvIG9uLiAgICBTb3VyY2U6IE5DRVJULCBBbmNpZW50IEluZGlhLCBwYWdlIG5vLiA5MywgOTQsIDk1ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "All of the above.    "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to temple architecture in  the northern hills of India, which of the  following statements are correct?   1.  Gandhara and Gupta influence can be seen  in the temples of the Kashmir region.   2.  The temples of the hills had their own  tradition of wooden buildings with pitched  roofs.   3.  Images of Mahishasuramardini and  Narasimha are found at the Laksna-Devi  Mandir.    Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEthc2htaXIncyBwcm94aW1pdHkgdG8gcHJvbWluZW50IEdhbmRoYXJhIHNpdGVzIChzdWNoIGFzIFRheGlsYSwgICAgUGVzaGF3YXIgYW5kIHRoZSBub3J0aHdlc3QgZnJvbnRpZXIpIGxlbnQgdGhlIHJlZ2lvbiBhIHN0cm9uZyBHYW5kaGFyYSBpbmZsdWVuY2UgYnkgdGhlIGZpZnRoIGNlbnR1cnkgICBDRS4gVGhpcyBiZWdhbiB0byBtaXggd2l0aCB0aGUgR3VwdGEgYW5kIHBvc3QtR3VwdGEgdHJhZGl0aW9ucyB0aGF0IHdlcmUgYnJvdWdodCB0byBpdCBmcm9tIFNhcm5hdGgsICAgTWF0aHVyYSBhbmQgZXZlbiBjZW50cmVzIGluIEd1amFyYXQgYW5kIEJlbmdhbC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSB0ZW1wbGVzIGluIEthc2htaXIgYWxzbyBmb2xsb3dlZCBpdHMgb3duIHRyYWRpdGlvbiBvZiB3b29kZW4gYXJjaGl0ZWN0dXJlICAgd2l0aCBwaXRjaGVkIHJvb2ZzLCBCdXQgc29tZSBlZmZlY3Qgb2YgbmFnYXJhIHN0eWxlIGNhbiBhbHNvIGJlIHNlZW4gaW4gbWFueSB0ZW1wbGVzIGluIHRoZSBoaWxscyBvZiAgIG5vcnRoZXJuIEluZGlhLiBBdCBzZXZlcmFsIHBsYWNlcyB0aGUgbWFpbiBnYXJhYmhhZ3JpaGEgYW5kIHNoaWtoYXJhIGFyZSBtYWRlIGluIGEgcmVraGEgcHJhc2FkYSBzdHlsZSAgIHdoaWxlIHRoZSBtYW5kYXBhIGlzIG9mIGFuIG9sZGVyIGZvcm0gb2Ygd29vZGVuIGFyY2hpdGVjdHVyZS4gICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBpbWFnZXMgb2YgTWFoaXNoYXN1cmFtYXJkaW5pIGFuZCBOYXJhc2ltaGEgYXQgdGhlIExha3NuYS1EZXZpIE1hbmRpciAgIGFyZSBldmlkZW5jZXMgb2YgdGhlIGluZmx1ZW5jZSBvZiB0aGUgcG9zdC1HdXB0YSB0cmFkaXRpb24uIEJvdGggdGhlIGltYWdlcyBzaG93ICAgIHRoZSBpbmZsdWVuY2Ugb2YgdGhlIG1ldGFsIHNjdWxwdHVyZSB0cmFkaXRpb24gb2YgS2FzaG1pci4gVGhlIHllbGxvdyBjb2xvdXIgb2YgdGhlIGltYWdlcyBpcyBwb3NzaWJseSBkdWUgICB0byBhbiBhbGxveSBvZiB6aW5jIGFuZCBjb3BwZXIgd2hpY2ggd2VyZSBwb3B1bGFybHkgdXNlZCB0byBtYWtlIGltYWdlcyBpbiBLYXNobWlyLiBUaGlzIHRlbXBsZSBiZWFycyAgIGFuIGluc2NyaXB0aW9uIHRoYXQgc3RhdGVzIHRoYXQgaXQgd2FzIGJ1aWx0IGR1cmluZyB0aGUgcmVpZ24gb2YgTWVydXZhcm1hbiB3aG8gbGl2ZWQgaW4gdGhlIHNldmVudGggICBjZW50dXJ5LiAgICAgU291cmNlOiBBbiBJbnRyb2R1Y3Rpb24gdG8gSW5kaWFuIGFydCBDbGFzcy1YSSBuY2VydCBjaGFwdGVyNiBUZW1wbGUgQXJjaGl0ZWN0dXJlIGFuZCBzY3VscHR5cmUgcGFnZS0gIDgwLCA4MSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to the Vijayanagara empire,  consider the following pairs:    Term      Description    1. Sthalas   A platform of Vijayanagara  temples    2. Palaiyagar Governor of the province    3. Kuruvai Village officials  Which of the pair/s given above is/are  correctly matched?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IEluIHRoZSBWaWpheWFuYWdhcmEgZW1waXJlLCB0aGUga2luZ2RvbSB3YXMgZGl2aWRlZCBpbnRvIHJhanlhcyBvciBtYW5kYWxhbSAgIChwcm92aW5jZXMpIGJlbG93IHdoaWNoIHdlcmUgbmFkdSAoZGlzdHJpY3QpLCBzdGhhbGEgKHN1Yi1kaXN0cmljdCkgYW5kIGdyYW1hICh2aWxsYWdlKS4gVGhlIENob2xhICAgdHJhZGl0aW9ucyBvZiB2aWxsYWdlIHNlbGYtZ292ZXJubWVudCB3ZXJlIGNvbnNpZGVyYWJseSB3ZWFrZW5lZCB1bmRlciBWaWpheWFuYWdhcmEgcnVsZS4gU3RoYWxhcyB3YXMgYW4gICB1bml0IG9mIGFkbWluaXN0cmF0aW9uLiAgICAgUGFpciAyIGlzIGluY29ycmVjdDogVGhlcmUgd2FzIG5vIHJlZ3VsYXIgdGVybSBmb3IgYSBwcm92aW5jaWFsIGdvdmVybm9yLCBoaXMgdGVybSBkZXBlbmRpbmcgb24gaGlzICAgYWJpbGl0eSBhbmQgaGlzIHN0cmVuZ3RoLiBUaGUgZ292ZXJub3JzIG9mIHRoZSBwcm92aW5jZXMgd2VyZSByb3lhbCBwcmluY2VzIGF0IGZpcnN0LiBMYXRlciwgcGVyc29ucyAgIGJlbG9uZ2luZyB0byB2YXNzYWwgcnVsaW5nIGZhbWlsaWVzIGFuZCBub2JsZXMgd2VyZSBhbHNvIGFwcG9pbnRlZCBhcyBnb3Zlcm5vcnMuICAgICBJbiB0aGUgbGFyZ2UgY2VudHJhbGx5IGNvbnRyb2xsZWQgYXJlYSwgdGhlIGtpbmcgZ3JhbnRlZCBhbWFyYW0gb3IgdGVycml0b3J5IHdpdGggYSBmaXhlZCByZXZlbnVlIHRvICAgbWlsaXRhcnkgY2hpZWZzLiBUaGVzZSBtaWxpdGFyeSBjaGllZnMsIHdobyB3ZXJlIGNhbGxlZCBwYWxhaXlhZ2FyIChwYWxlZ2FyKSBvciBuYXlha3MsIGhhZCB0byBtYWludGFpbiBhICAgICBvZiAyMiAgICAgICAgZml4ZWQgbnVtYmVyIG9mIGZvb3QsIHNvbGRpZXJzLCBob3JzZXMgYW5kIGVsZXBoYW50cyBmb3IgdGhlIHNlcnZpY2Ugb2YgdGhlIHN0YXRlLiBUaGUgbmF5YWtzIG9yIHBhbGVnYXJzICAgYWxzbyBoYWQgdG8gcGF5IGEgc3VtIG9mIG1vbmV5IHRvIHRoZSBjZW50cmFsIGV4Y2hlcXVlci4gICAgIFBhaXIgMyBpcyBpbmNvcnJlY3Q6IEt1cnV2YWkgd2FzIGEgdHlwZSBvZiByaWNlIGdyb3duIGR1cmluZyB3aW50ZXIuIEl0IGlzIG1lbnRpb25lZCBpbiBhbiBpbnNjcmlwdGlvbi4gICAgIEFjY29yZGluZyB0byBhbiBpbnNjcmlwdGlvbiwgdGhlIHJhdGVzIG9mIHRheGVzIHdlcmUgYXMgZm9sbG93czogICAgMSkgT25lLXRoaXJkIG9mIHRoZSBwcm9kdWNlIG9mIGt1cnV2YWkgKGEgdHlwZSBvZiByaWNlKSBkdXJpbmcgd2ludGVyICAgIDIpIE9uZS1mb3VydGggb2Ygc2VzYW1lLCByYWdpLCBob3JzZWdyYW0sIGV0YyAgICAzKSBPbmUtc2l4dGggb2YgbWlsbGV0IGFuZCBvdGhlciBjcm9wcyBjdWx0aXZhdGVkIG9uIGRyeSBsYW5kICAgICBUaHVzLCB0aGUgcmF0ZSB2YXJpZWQgYWNjb3JkaW5nIHRvIHRoZSB0eXBlIG9mIGNyb3BzLCBzb2lsLCBtZXRob2Qgb2YgaXJyaWdhdGlvbiwgZXRjLiAgICBTb3VyY2U6ICBIaXN0b3J5IG9mIE1lZGlldmFsIEluZGlhIGJ5IFNhdGlzaCBDaGFuZHJhIC0gQ2hhcHRlciA5IFRoZSBBZ2Ugb2YgVmlqYXlhbmFnYXJhIGFuZCB0aGUgICBCYWhtYW5pZHMsIGFuZCB0aGUgQ29taW5nIG9mIHRoZSBQb3J0dWd1ZXNlIChDaXJjYSAxMzUwLTE1NjUpLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "3 only    ",
        "option3" : "1 and 2 only    ",
        "option4" : "None   "
      }
    },
    {
      "index" : 4,
      "question" : "Which among the following is an incorrect  statement with reference to the Bhakti  movement in India?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgT3B0aW9uIGEgaXMgY29ycmVjdDogVGhlIHR3ZWxmdGggY2VudHVyeSBLYXJuYXRha2Egc2FpbnQgQnJhaG1hbmEgbmFtZWQgQmFzYXZhbm5hIGNoYWxsZW5nZWQgdGhlIGlkZWEgICBvZiBjYXN0ZSBhbmQgdGhlICdwb2xsdXRpb24nIGF0dHJpYnV0ZWQgdG8gY2VydGFpbiBncm91cHMgYnkgQnJhaG1hbmFzLiBIZSBhbHNvIHF1ZXN0aW9uZWQgdGhlIHRoZW9yeSBvZiAgIHJlYmlydGguIEhpcyBmb2xsb3dlcnMgd2VyZSBrbm93biBhcyBWaXJhc2hhaXZhcyAoaGVyb2VzIG9mIFNoaXZhKSBvciBMaW5nYXlhdHMgKHdlYXJlcnMgb2YgdGhlIGxpbmdhKS4gIFRoZSAgIExpbmdheWF0cyBlbmNvdXJhZ2VkIGNlcnRhaW4gcHJhY3RpY2VzIGRpc2FwcHJvdmVkIGluIHRoZSBEaGFybWFzaGFzdHJhcywgc3VjaCBhcyBwb3N0LXB1YmVydHkgICBtYXJyaWFnZSBhbmQgdGhlIHJlbWFycmlhZ2Ugb2Ygd2lkb3dzLiAgICAgT3B0aW9uIGIgaXMgY29ycmVjdDogVmVyc2VzIGFzY3JpYmVkIHRvIEthYmlyIGhhdmUgYmVlbiBjb21waWxlZCBpbiB0aHJlZSBkaXN0aW5jdCBidXQgb3ZlcmxhcHBpbmcgICB0cmFkaXRpb25zLiBBbGwgdGhlc2UgbWFudXNjcmlwdCBjb21waWxhdGlvbnMgd2VyZSBtYWRlIGxvbmcgYWZ0ZXIgdGhlIGRlYXRoIG9mIEthYmlyLiBUaGUgS2FiaXIgQmlqYWsgaXMgICBwcmVzZXJ2ZWQgYnkgdGhlIEthYmlycGFudGggKHRoZSBwYXRoIG9yIHNlY3Qgb2YgS2FiaXIpIGluIFZhcmFuYXNpOyB0aGUgS2FiaXIgR3JhbnRoYXZhbGkgaXMgYXNzb2NpYXRlZCAgIHdpdGggdGhlIERhZHVwYW50aCBpbiBSYWphc3RoYW4sIGFuZCBtYW55IG9mIGhpcyBjb21wb3NpdGlvbnMgYXJlIGZvdW5kIGluIHRoZSBBZGkgR3JhbnRoIFNhaGliLiAgICAgT3B0aW9uIGMgaXMgY29ycmVjdDogR3VydSBOYW5hayByZWplY3RlZCBzYWNyaWZpY2VzLCByaXR1YWwgYmF0aHMsIGltYWdlIHdvcnNoaXAsIGF1c3Rlcml0aWVzIGFuZCB0aGUgICBzY3JpcHR1cmVzIG9mIGJvdGggSGluZHVzIGFuZCBNdXNsaW1zLiBGb3IgQmFiYSBHdXJ1IE5hbmFrLCB0aGUgQWJzb2x1dGUgb3IgJ3JhYicgaGFkIG5vIGdlbmRlciBvciAgIGZvcm0uIEhlIHByb3Bvc2VkIGEgc2ltcGxlIHdheSB0byBjb25uZWN0IHRvIHRoZSBEaXZpbmUgYnkgcmVtZW1iZXJpbmcgYW5kIHJlcGVhdGluZyB0aGUgRGl2aW5lICAgTmFtZSwgdGhyb3VnaCBoeW1ucyBjYWxsZWQgJ3NoYWJhZCcgaW4gUHVuamFiaS4gQmFiYSBHdXJ1IE5hbmFrIHdvdWxkIHNpbmcgdGhlc2UgY29tcG9zaXRpb25zIGluICAgdmFyaW91cyByYWdhcyB3aGlsZSBoaXMgYXR0ZW5kYW50IE1hcmRhbmEgcGxheWVkIHRoZSByYWJhYi4gQmFiYSBHdXJ1IE5hbmFrIG9yZ2FuaXNlZCBoaXMgZm9sbG93ZXJzICAgaW50byBhIGNvbW11bml0eS4gSGUgc2V0IHVwIHJ1bGVzIGZvciBjb25ncmVnYXRpb25hbCB3b3JzaGlwIChzYW5nYXQpIGludm9sdmluZyBjb2xsZWN0aXZlIHJlY2l0YXRpb24uICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogQ2hhaXRhbnlhIE1haGFwcmFiaHUgd2FzIHRoZSBkZXZvdGVlIG9mIEtyaXNobmEuIEhlIGRpZCBub3QgcmVqZWN0IHRoZSAgIHNjcmlwdHVyZXMgb3IgaWRvbC13b3JzaGlwLiBIZSBleGVydGVkIGFuIGV4dHJhb3JkaW5hcnkgaW5mbHVlbmNlLCBwYXJ0aWN1bGFybHkgaW4gdGhlIGVhc3Rlcm4gcGFydHMgb2YgICBJbmRpYSwgYW5kIGF0dHJhY3RlZCBhIHdpZGUgZm9sbG93aW5nLCBpbmNsdWRpbmcgc29tZSBNdXNsaW1zIGFuZCBwZW9wbGUgZnJvbSB0aGUgbG93IGNhc3Rlcy4gICAgIEtub3dsZWRnZSBCYXNlOiAgICAgICBMaW5nYXlhdHMgd29yc2hpcCBTaGl2YSBpbiBoaXMgbWFuaWZlc3RhdGlvbiBhcyBhIGxpbmdhLCBhbmQgbWVuIHVzdWFsbHkgd2VhciBhIHNtYWxsIGxpbmdhIGluIGEgc2lsdmVyIGNhc2UgICBvbiBhIGxvb3Agc3RydW5nIG92ZXIgdGhlIGxlZnQgc2hvdWxkZXIuIExpbmdheWF0cyBiZWxpZXZlIHRoYXQgb24gZGVhdGggdGhlIGRldm90ZWUgd2lsbCBiZSB1bml0ZWQgd2l0aCAgIFNoaXZhIGFuZCB3aWxsIG5vdCByZXR1cm4gdG8gdGhpcyB3b3JsZC4gVGhlcmVmb3JlIHRoZXkgZG8gbm90IHByYWN0aXNlIGZ1bmVyYXJ5IHJpdGVzIHN1Y2ggYXMgY3JlbWF0aW9uLCAgIHByZXNjcmliZWQgaW4gdGhlIERoYXJtYXNoYXN0cmFzLiBJbnN0ZWFkLCB0aGV5IGNlcmVtb25pYWxseSBidXJ5IHRoZWlyIGRlYWQuICAgICBLYWJpcidzIHBvZW1zIGhhdmUgc3Vydml2ZWQgaW4gc2V2ZXJhbCBsYW5ndWFnZXMgYW5kIGRpYWxlY3RzOyBhbmQgc29tZSBhcmUgY29tcG9zZWQgaW4gdGhlIHNwZWNpYWwgICBsYW5ndWFnZSBvZiBuaXJndW5hIHBvZXRzLCB0aGUgc2FudCBiaGFzaGEuIE90aGVycywga25vd24gYXMgdWxhdGJhbnNpICh1cHNpZGUtZG93biBzYXlpbmdzKSwgYXJlICAgd3JpdHRlbiBpbiBhIGZvcm0gaW4gd2hpY2ggZXZlcnlkYXkgbWVhbmluZ3MgYXJlIGludmVydGVkLiBIZSBhbHNvIHVzZWQgdGVybXMgZHJhd24gZnJvbSBWZWRhbnRpYyAgIHRyYWRpdGlvbnMsIGFsYWtoICh0aGUgdW5zZWVuKSwgbmlyYWthciAoZm9ybWxlc3MpLCBCcmFobWFuLCBBdG1hbiwgZXRjLiBPdGhlciB0ZXJtcyB3aXRoIG15c3RpY2FsICAgY29ubm90YXRpb25zIHN1Y2ggYXMgc2hhYmRhIChzb3VuZCkgb3Igc2h1bnlhIChlbXB0aW5lc3MpIHdlcmUgZHJhd24gZnJvbSB5b2dpYyB0cmFkaXRpb25zLiAgICAgQmFiYSBHdXJ1IE5hbmFrIGRpZCBub3Qgd2lzaCB0byBlc3RhYmxpc2ggYSBuZXcgcmVsaWdpb24sIGJ1dCBhZnRlciBoaXMgZGVhdGggaGlzIGZvbGxvd2VycyBjb25zb2xpZGF0ZWQgICB0aGVpciBvd24gcHJhY3RpY2VzIGFuZCBkaXN0aW5ndWlzaGVkIHRoZW1zZWx2ZXMgZnJvbSBib3RoIEhpbmR1cyBhbmQgTXVzbGltcy4gVGhlIGZpZnRoIHByZWNlcHRvciwgICBHdXJ1IEFyamFuLCBjb21waWxlZCBCYWJhIEd1cnUgTmFuYWsncyBoeW1ucyBhbG9uZyB3aXRoIHRob3NlIG9mIGhpcyBmb3VyIHN1Y2Nlc3NvcnMgYW5kIG90aGVyICAgcmVsaWdpb3VzIHBvZXRzIGxpa2UgQmFiYSBGYXJpZCwgUmF2aWRhcyAoYWxzbyBrbm93biBhcyBSYWlkYXMpIGFuZCBLYWJpciBpbiB0aGUgQWRpIEdyYW50aCBTYWhpYi4gVGhlc2UgICBoeW1ucywgY2FsbGVkICdndXJiYW5pJywgYXJlIGNvbXBvc2VkIGluIHZhcmlvdXMgbGFuZ3VhZ2VzLiBJbiB0aGUgbGF0ZSBzZXZlbnRlZW50aCBjZW50dXJ5IHRoZSB0ZW50aCAgICAgb2YgMjIgICAgICAgIHByZWNlcHRvciwgR3VydSBHb2JpbmQgU2luZ2gsIGluY2x1ZGVkIHRoZSBjb21wb3NpdGlvbnMgb2YgdGhlIG5pbnRoIGd1cnUsIEd1cnUgVGVnaCBCYWhhZHVyLCBhbmQgdGhpcyAgIHNjcmlwdHVyZSB3YXMgY2FsbGVkIHRoZSBHdXJ1IEdyYW50aCBTYWhpYi4gICAgIFNvdXJjZTogICAgSGlzdG9yeSBvZiBNZWRpZXZhbCBJbmRpYSBieSBTYXRpc2ggQ2hhbmRyYSAtIENoYXB0ZXIgMTEgQ3VsdHVyYWwgRGV2ZWxvcG1lbnQgaW4gSW5kaWEgKDEzMDAtICAxNTAwKS4gICAgIE5DRVJUIENsYXNzIDEyIC0gVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IC0gVGhlbWUgNiAtIEJoYWt0aSBTdWZpIHRyYWRpdGlvbi4gICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Basavanan promoted the post-puberty   marriage and the remarriage of widows.    ",
        "option2" : " Dadupanthis composed the Kabir   Granthavali to spread the teachings of   Kabir.    ",
        "option3" : " Guru Nanak set up rules for congregational   worship that involved collective recitation.    ",
        "option4" : " Chaitanya Mahaprabhu rejected the practise   of idol worship.   "
      }
    },
    {
      "index" : 5,
      "question" : "Regarding the Indus Valley Civilization,  consider the following statements:     1.  It was predominantly a secular civilization  and the religious element, though present,  did not dominate the scene     2.  During this period, cotton was used for  manufacturing textiles in India      Which of the statements given above is/are  correct?      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEluZHVzIFZhbGxleSBDaXZpbGl6YXRpb24gd2FzIHByZWRvbWluYW50bHkgYSBzZWN1bGFyIGNpdmlsaXphdGlvbi4gVGhlcmUgd2VyZSBubyAgIHRlbXBsZXMuIFRoZXJlIHdlcmUgbm8gcmVsaWdpb3VzIHN0cnVjdHVyZXMgb2YgYW55IGtpbmQgZXhjZXB0IHRoZSBHcmVhdCBCYXRoLiAgICAgIEhvd2V2ZXIsIHJlbGlnaW9uIHdhcyBhIHBhcnQgb2YgdGhlIEhhcmFwcGFuIGxpZmUuIFRoZSBjaGllZiBtYWxlIGRlaXR5IHdhcyBQYXN1cGF0aSwgKHByb3RvLVNpdmEpICAgcmVwcmVzZW50ZWQgaW4gc2VhbHMgYXMgc2l0dGluZyBpbiBhIHlvZ2ljIHBvc3R1cmUgd2l0aCB0aHJlZSBmYWNlcyBhbmQgdHdvIGhvcm5zLiBIZSBpcyBzdXJyb3VuZGVkIGJ5IGZvdXIgICBhbmltYWxzIChlbGVwaGFudCwgdGlnZXIsIHJoaW5vLCBhbmQgYnVmZmFsbyBlYWNoIGZhY2luZyBhIGRpZmZlcmVudCBkaXJlY3Rpb24pLiBUd28gZGVlciBhcHBlYXIgb24gaGlzIGZlZXQuICAgVGhlIGNoaWVmIGZlbWFsZSBkZWl0eSB3YXMgdGhlIE1vdGhlciBHb2RkZXNzIHJlcHJlc2VudGVkIGluIHRlcnJhY290dGEgZmlndXJpbmVzLiBJbiBsYXR0ZXIgdGltZXMsIExpbmdhICAgd29yc2hpcCB3YXMgcHJldmFsZW50LiBUcmVlcyBhbmQgYW5pbWFscyB3ZXJlIGFsc28gd29yc2hpcHBlZCBieSB0aGUgSGFyYXBwYW5zLiBUaGV5IGJlbGlldmVkIGluICAgZ2hvc3RzIGFuZCBldmlsIGZvcmNlcyBhbmQgdXNlZCBhbXVsZXRzIGFzIHByb3RlY3Rpb24gYWdhaW5zdCB0aGVtLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQSBwaWVjZSBvZiB3b3ZlbiBjb3R0b24gaGFzIGJlZW4gcmVjb3ZlcmVkIGZyb20gTW9oZW5qby1EYXJvLiBXZWF2ZXJzIHdvdmUgICBjbG90aCBvZiBjb3R0b24gYW5kIHdvb2wuIFNwaW5kbGUgd2hvcmxzIHdlcmUgdXNlZCBmb3Igc3Bpbm5pbmcuICAgICBEdXJpbmcgdGhpcyBwZXJpb2QsIHRoZSBtYWluIGNyb3BzIGdyb3duIHdlcmUgd2hlYXQgYW5kIGJhcmxleSBiZXNpZGVzIHNlc2FtZSwgbXVzdGFyZCBhbmQgY290dG9uLiAgIENvdHRvbiB3YXMgdXNlZCBmb3IgbWFraW5nIHRleHRpbGVzLiBNYWluIGV4cG9ydHMgd2VyZSBzZXZlcmFsIGFncmljdWx0dXJhbCBwcm9kdWN0cyBzdWNoIGFzIHdoZWF0LCAgIGJhcmVseSwgcGVhcywgb2lsIHNlZWRzIGFuZCBhIHZhcmlldHkgb2YgZmluaXNoZWQgcHJvZHVjdHMgaW5jbHVkaW5nIGNvdHRvbiBnb29kcywgcG90dGVyeSwgYmVhZHMsICAgdGVycmFjb3R0YSBmaWd1cmVzIGFuZCBpdm9yeSBwcm9kdWN0cy4gICAgIFVQU0MgQ1NFIFByZV8yMDExICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "2 only     ",
        "option3" : "Both 1 and 2     ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to the Sufi movement in  India during the medieval period, consider the  following statements:    1.  Sheikh Hamiduddin of Nagaur translated  many Persian books into the Hindi  language.    2.  The Sufi movement led to the origin of the  khayal and Tarana tradition of music.    Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3VmaXNtIGlzIHRoZSBteXN0aWNhbCBhcm0gb2YgSXNsYW0uIEl0IHN0cmVzc2VzIG9uIHNlbGYgcmVhbGlzYXRpb24sIHRvbGVyYW5jZSwgcmlnaHRlb3VzbmVzcyBhbmQgdW5pdmVyc2FsICAgbG92ZSBmb3IgYWxsLiBUaGUgU3VmaSBtb3ZlbWVudCBpbiBJbmRpYSB3YXMgYSByZXN1bHQgb2YgSGluZHUgaW5mbHVlbmNlIG9uIE11c2xpbSByZWxpZ2lvdXMgdGhpbmtlcnMgd2hvICAgdW5kZXJ0b29rIGFuIGluIGRlcHRoIHN0dWR5IG9mIFZlZGFudGEgYW5kIHRoZSBwaGlsb3NvcGh5IG9mIEJ1ZGRoaXNtIGFuZCBKYWluaXNtLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2hlaWtoIEhhbWlkdWRkaW4gb2YgTmFnYXVyIHdobyB3YXMgZ2l2ZW4gdGhlIHRpdGxlIG9mICdTdWx0YW4tZS1UYXJrZWVuJyBhbmQgICBoZSB0cmFuc2xhdGVkIG1hbnkgUGVyc2lhbiBib29rcyBpbnRvIEhpbmRpLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQW1pciBLaHVzcm8gKDEyNTMtIDEzMjUpIHdhcyBhIFN1Zmkgc3Bpcml0dWFsIHBvZXQgYW5kIG11c2ljaWFuIHdobyBoYWQgYSBkZWVwICAgaW1wYWN0IG9uIHRoZSBjdWx0dXJlIG9mIEluZGlhLiBIZSB3cm90ZSBtYW55IHBvZW1zLCBnaGF6YWxzLCBkb2hhcywgYW5kIHJpZGRsZXMgYW5kIGlzIGFsc28gY3JlZGl0ZWQgICB3aXRoIGVucmljaGluZyBIaW5kdXN0YW5pIGNsYXNzaWNhbCBtdXNpYyBieSBpbnRyb2R1Y2luZyBQZXJzaWFuIGFuZCBBcmFiaWMgZWxlbWVudHMgaW4gaXQuIEhlIGlzICAga25vd24gYXMgdGhlIG9yaWdpbmF0b3Igb2YgdGhlIGtoYXlhbCBhbmQgdGFyYW5hIHN0eWxlcyBvZiBtdXNpYy4gSGUgaXMgcmVnYXJkZWQgYXMgdGhlICdmYXRoZXIgb2YgICBxYXd3YWxpJyAodGhlIGRldm90aW9uYWwgbXVzaWMgb2YgdGhlIEluZGlhbiBTdWZpcykuIFRoZSBpbnZlbnRpb24gb2YgdGhlIHRhYmxhIGlzIGFsc28gdHJhZGl0aW9uYWxseSAgIGF0dHJpYnV0ZWQgdG8gQW1pciBLaHVzcm8gYW5kIHNvIGFsc28gdGhlIHNpdGFyLiBLYWJpciB3YXMgZ3JlYXRseSBpbmZsdWVuY2VkIGJ5IEtodXNybyBhbmQgc29tZSBvZiBoaXMgICBkb2hhcyBhcmUgdmlydHVhbGx5IHRyYW5zbGF0aW9ucyBvZiBLaHVzcm8ncyBjb3VwbGV0cy4gICAgU291cmNlOiAgQmhha3RpIGFuZCBTdWZpIG1vdmVtZW50IGluIEluZGlhICAgICBTdWZpIHRyYWRpdGlvbiAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following information was  provided by the Ain-i-Akbari?  1.  Statistical details of crops and their yields.   2.  Details about tradition and culture of people  living in India    3.  Details of Akbar's ancestors   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgICAgICAgIFN0YXRlbWVudCAxIGFuZCAyIGFyZSBjb3JyZWN0LiBUaGUgQWluLWkgQWtiYXJpIHdyaXR0ZW4gYnkgQWJ1bCBGYXpsLCBpcyBpdHMgcmljaCBzdGF0aXN0aWNhbCBkZXRhaWxzIGFib3V0ICAgdGhpbmdzIGFzIGRpdmVyc2UgYXMgY3JvcHMsIHlpZWxkcywgcHJpY2VzLCB3YWdlcyBhbmQgcmV2ZW51ZXMuIEl0IGRlYWxzIHdpdGggQWtiYXIncyBhZG1pbmlzdHJhdGlvbiwgICBob3VzZWhvbGQsIGFybXksIHRoZSByZXZlbnVlcyBhbmQgdGhlIGdlb2dyYXBoeSBvZiBoaXMgZW1waXJlLiBJdCBhbHNvIHByb3ZpZGVzIHJpY2ggZGV0YWlscyBhYm91dCB0aGUgICB0cmFkaXRpb25zIGFuZCBjdWx0dXJlIG9mIHRoZSBwZW9wbGUgbGl2aW5nIGluIEluZGlhLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEFidSBGYXpsIHdyb3RlIGEgMy12b2x1bWUgaGlzdG9yeSBvZiBBa2JhcidzIHJlaWduIGNhbGxlZCBhcyBBa2JhciBOYW1hLiBUaGUgICBmaXJzdCB2b2x1bWUgb2YgQWtiYXIgTmFtYSBkZWFsdCB3aXRoIEFrYmFyJ3MgYW5jZXN0b3JzIGFuZCB0aGUgc2Vjb25kIHZvbHVtZSByZWNvcmRlZCB0aGUgZXZlbnRzIG9mICAgQWtiYXIncyByZWlnbi4gVGhlIHRoaXJkIHZvbHVtZSBpcyBBaW4taSBBa2JhcmkuICAgIEtub3dsZWRnZSBCYXNlOiAgICAgT3RoZXIgaW1wb3J0YW50IGZhY3RzIHJlbGF0ZWQgdG8gQWluLUktQWtiYXJpOiAgICAxKSBUaGUgYm9vayBpcyBhIHVuaXF1ZSBjb21waWxhdGlvbiBjb21wcmlzaW5nIHRoZSBzeXN0ZW0gb2YgYWRtaW5pc3RyYXRpb24gYW5kIGNvbnRyb2wgb3ZlciBhbGwgICBkZXBhcnRtZW50cyBvZiBnb3Zlcm5tZW50IG9mIHRoZSBncmVhdCBNdWdoYWwgRW1waXJlLiBMYXRlciBNdWdoYWwgYWRtaW5pc3RyYXRvcnMsIGJvdGggaW4gdGhlICAgYWRtaW5pc3RyYXRpdmUgYW5kIHJldmVudWUgc2lkZSwgdXNlZCB0aGUgYm9vayBhcyBhIGd1aWRlLiAgICAyKSBBYnVsIEZhemwgYWxzbyBkaXNjdXNzZXMgaW4gdGhpcyBib29rIHRoZSBzb2NpYWwgY29uZGl0aW9uLCBsaXRlcmFyeSBhY3Rpdml0aWVzLCBhbmQgc3R1ZHkgb2YgbGF3IGFuZCAgIHBoaWxvc29waHkgbm90IG9ubHkgb2YgTXVzbGltcyBidXQgYWxzbyBvZiBsb2NhbCBIaW5kdXMsIEphaW5zIGFuZCBvdGhlciBjb21tdW5pdGllcy4gVGhlcmUgYXJlLCBpbiAgIGFkZGl0aW9uLCBjaGFwdGVycyBvbiBkaXN0aW5ndWlzaGVkIHRyYXZlbGxlcnMsIE11c2xpbSBzYWludHMsIGFuZCBzdWZpcy4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9nZXNzMT00LTEwICAgICBodHRwczovL2VuLmJhbmdsYXBlZGlhLm9yZy9pbmRleC5waHAvQWluLWktQWtiYXJpICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 only   ",
        "option4" : "1, 2 and 3        "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to various philosophical  traditions in India, consider the following  statements:   1.  Advaita philosophy proposes that there is a  fundamental separation of the individual  soul with the Supreme God.   2.  According to the doctrine of Advaita, the  world is an illusion.    3.  Dvaita proposes that the world is real and is  created by God.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gU2hhbmthcmEgd2FzIGFuIGFkdm9jYXRlIG9mIEFkdmFpdGEgcGhpbG9zb3BoeSBvciB0aGUgZG9jdHJpbmUgb2YgdGhlIG9uZW5lc3MgICBvZiB0aGUgaW5kaXZpZHVhbCBzb3VsIGFuZCB0aGUgU3VwcmVtZSBHb2Qgd2hpY2ggaXMgdGhlIFVsdGltYXRlIFJlYWxpdHkuIEhlIHRhdWdodCB0aGF0IEJyYWhtYW4sIHRoZSAgIG9ubHkgb3IgVWx0aW1hdGUgUmVhbGl0eSwgd2FzIGZvcm1sZXNzIGFuZCB3aXRob3V0IGFueSBhdHRyaWJ1dGVzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQWR2YWl0YSBjb25zaWRlcnMgdGhlIHdvcmxkIGFyb3VuZCB1cyB0byBiZSBhbiBpbGx1c2lvbiBvciBtYXlhLCBhbmQgcHJlYWNoZXMgICByZW51bmNpYXRpb24gb2YgdGhlIHdvcmxkIGFuZCBhZG9wdGlvbiBvZiB0aGUgcGF0aCBvZiBrbm93bGVkZ2UgdG8gdW5kZXJzdGFuZCB0aGUgdHJ1ZSBuYXR1cmUgb2YgICBCcmFobWFuIGFuZCBhdHRhaW4gc2FsdmF0aW9uLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBY2NvcmRpbmcgdG8gZHZhaXRhLCB0aGUgd29ybGQgaXMgcmVhbC4gR29kIGlzIGFsc28gcmVhbCBhbmQgaXMgdGhlIGNyZWF0b3Igb2YgdGhpcyAgIHdvcmxkLiBUaGVyZSBpcyBhIG5hdHVyYWwgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBvcmRpbmFyeSwgaWdub3JhbnQgc291bCB3aG8gZXhwZXJpZW5jZXMgc29ycm93IGluIHRoaXMgICB3b3JsZCBhbmQgdGhlIEdvZCB3aG8ga25vd3MgYWxsIGFuZCBpcyBvbW5pcG90ZW50LiAgICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9nZXNzMT04LTEwICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to the 'Virashaiva  movement', which of the following statements  is correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCBhIGlzIGluY29ycmVjdC4gVmlyYXNoYWl2YSBtb3ZlbWVudCB3YXMgaW5pdGlhdGVkIGJ5IEJhc2F2YW5uYSBhbmQgaGlzIGNvbXBhbmlvbnMgbGlrZSAgIEFsbGFtYSBQcmFiaHUgYW5kIEFra2FtYWhhZGV2aSBpbiB0aGUgMTJ0aCBjZW50dXJ5LiAgICAgU3RhdGVtZW50IGIgaXMgaW5jb3JyZWN0LiBUaGlzIG1vdmVtZW50IGJlZ2FuIGluIEthcm5hdGFrYSBpbiB0aGUgbWlkLXR3ZWxmdGggY2VudHVyeS4gVGhleSByZWplY3RlZCAgIG9mIHRoZSBhdXRob3JpdHkgb2YgdGhlIFZlZGFzLCB0aGUgZG9jdHJpbmUgb2YgdHJhbnNtaWdyYXRpb24gb2Ygc291bHMsIGNoaWxkIG1hcnJpYWdlLCBhbmQgaWxsIHRyZWF0bWVudCAgIG9mIHdpZG93cyAgICBTdGF0ZW1lbnQgYyBpcyBjb3JyZWN0LiBUaGUgVmlyYXNoYWl2YXMgYXJndWVkIHN0cm9uZ2x5IGZvciB0aGUgZXF1YWxpdHkgb2YgYWxsIGh1bWFuIGJlaW5ncyBhbmQgYWdhaW5zdCAgIEJyYWhtYW5pY2FsIGlkZWFzIGFib3V0IGNhc3RlIGFuZCB0aGUgdHJlYXRtZW50IG9mIHdvbWVuLiAgICAgU3RhdGVtZW50IGQgaXMgaW5jb3JyZWN0LiBWZWVyYXNoYWl2YXMgYXJlIHRoZSBmb2xsb3dlcnMgb2YgdGhlIGZpdmUgcGVldGhhcyAocmVsaWdpb3VzIGNlbnRyZXMpLCBjYWxsZWQgICBwYW5jaGEgcGVldGhhcy4gVGhlc2UgcGVldGhhcyBhcmUgc2V0IHVwIG9uIHNpbWlsYXIgbGluZXMgdG8gdGhlIGZvdXIgcGVldGhhcyBzZXQgdXAgYnkgQWRpIFNoYW5rYXJhLiAgIFRoZXkgZXZlbiBjbGFpbSBhIG15dGhvbG9naWNhbCBiYWNrZ3JvdW5kLiBUaGV5IGJlbGlldmUgdGhhdCB0aGV5IGFyZSBib3JuIHN0cmFpZ2h0IG91dCBvZiB0aGUgICBTaGl2YWxpbmdhbSAtIHRoZSBwaGFsbGljIHN5bWJvbCB3b3JzaGlwcGVkIGJ5IFNoYWl2YXMuICAgICAgb2YgMjIgICAgICAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay5waHA/Z2VzczE9OC0xMCAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It was initiated by Vallabhacharya and his   disciples in the 15the century.  ",
        "option2" : " Veerashaivas believed in the doctrine of   transmigration of souls.   ",
        "option3" : " It emphasized the equality of all human   beings and rejected ideas on caste.   ",
        "option4" : " Veerashaivas believe that they are born out   of Lord Brahma's head.   "
      }
    },
    {
      "index" : 10,
      "question" : "In which of the following relief sculpture  inscriptions is 'Ranyo Ashoka' (King Ashoka)  mentioned along with the stone portrait of  Ashoka?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEthbmdhbmFoYWxsaSAsIG5lYXIgU2FubmF0aSwgaXMgYW4gaW1wb3J0YW50IEJ1ZGRoaXN0IHNpdGUgaW4gS2FsYWJ1cmFnaSBkaXN0cmljdCwgS2FybmF0YWthIGV4Y2F2YXRlZCBieSAgIHRoZSBBcmNoYWVvbG9naWNhbCBTdXJ2ZXkgb2YgSW5kaWEgKEFTSSkuIEl0IGNvbnRhaW5zIGEgc2N1bHB0dXJlLXBvcnRyYWl0IG9mIEVtcGVyb3IgQXNob2thIC0gdGhlIG9ubHkgICBhdmFpbGFibGUgaW1hZ2Ugb2YgdGhlIE1hdXJ5YW4gZW1wZXJvciwgd2hpY2ggaXMgY29uc2lkZXJlZCB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgZm91bmQgaW4gdGhlICAgZXhjYXZhdGlvbi4gQW5vdGhlciBpbXBvcnRhbnQgZmluZGluZyBvZiB0aGUgS2FuZ2FuYWhhbGxpIGV4Y2F2YXRpb24gaW5jbHVkZSBhIHN0b25lIHNjdWxwdHVyZWQgc2xhYiAgIGJlYXJpbmcgdGhlIG5hbWUgUmFueW8gQXNob2thLiBJdCBpcyB0aGUgZmlyc3QtZXZlciBzY3VscHR1cmUgb2YgQXNva2Egd2l0aCBoaXMgbmFtZSBpbnNjcmliZWQuICAgICAgVVBTQyBDU0UgUHJlXzIwMTkgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Kanganahalli     ",
        "option2" : "Sanchi     ",
        "option3" : "Shahbazagrhi     ",
        "option4" : "Sohgaura   "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to Char Bagh, consider the  following statements:  1.  It is a four-quadrant garden with the four  rivers representing paradise in the Holy  Quran.  2.  It was introduced for the first time in India  by the Delhi sultanate.  3.  Mehtab Bagh is a Char Bagh complex located  near the Taj Mahal.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIENoYXIgQmFnaCBpcyBhIGZvdXItcXVhZHJhbnQgZ2FyZGVuIHdpdGggdGhlIGZvdXIgcml2ZXJzIHJlcHJlc2VudGluZyBRdXJhbmljICAgcGFyYWRpc2UuIEluIENoYXIgQmFnaCwgdGhlIG1vbnVtZW50IGlzIGJ1aWx0IGluIHRoZSBtaWRkbGUgb2YgdGhlIGdhcmRlbi4gQ2hhciBCYWdoIGFyZSBmb3VyIGdhcmRlbiAgIHN0eWxlcyBwbGFjZWQgd2l0aGluIHJlY3Rhbmd1bGFyIHdhbGxlZCBlbmNsb3N1cmVzLiBJdCBpcyBkaXZpZGVkIGludG8gZm91ciBxdWFydGVycyBieSBhcnRpZmljaWFsIGNoYW5uZWxzICAgYW5kIHN5bW1ldHJpY2FsIGRpdmlzaW9uIGludG8gNCBlcXVhbCBxdWFydGVycy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE11Z2hhbHMgaW50cm9kdWNlZCB0aGUgUGVyc2lhbiBDaGFoYXIgQmFnaCB0byBJbmRpYS4gSHVtYXl1bidzIGdhcmRlbiBpcyBhbiAgIGV4YW1wbGUgb2YgdGhlIENoYXIgQmFnaC4gICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIE1laHRhYiBCYWdoIGlzIGEgQ2hhcmJhZ2ggY29tcGxleCBsb2NhdGVkIGluIEFncmEuIEl0IGlzIGJ1aWx0IGF0IG5vcnRoZXJuIHNpZGUgb2YgICB0aGUgQWdyYSBGb3J0IGFuZCB0aGUgVGFqIE1haGFsIG92ZXJsb29raW5nIFJpdmVyIFlhbXVuYS4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9nZXNzMT01LTEwICAgICAgIG9mIDIyICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following pairs are correctly  matched in the context of the Sangam Age?   Term   Description   1. Uzhavar   Head of a military unit  2. Adimai   A ruling class   3. Vellalar   Large landowners   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3RseSBtYXRjaGVkOiBVemhhdmFyIHdlcmUgb3JkaW5hcnkgcGxvdWdobWVuIG9mIHRoZSBTYW5nYW0gQWdlIGluIGFuY2llbnQgU291dGhlcm4gICBJbmRpYS4gVGhleSBkaWQgbm90IG93biBsYW5kLCBidXQgd29ya2VkIG9uIGZhcm1zIG9mIG90aGVycy4gICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IFNsYXZlcnkgd2FzIGtub3duIGFuZCBwcmFjdGlzZWQgaW4gdGhlIFNhbmdhbSBzb2NpZXR5LiBBZGltYWkgd2VyZSAgIHNsYXZlcyBpbiBhbmNpZW50IFNhbmdhbSBzb2NpZXR5LiAgICBUb2xrYXBwaXlhbSBhbHNvIHJlZmVycyB0byBmb3VyIGNhc3RlcyBuYW1lbHkgYXJhc2FyKFJ1bGluZyBDbGFzcyksIGFudGhhbmFyLCB2YW5pZ2FyKGNhcnJpZWQgb24gdHJhZGUgICBhbmQgY29tbWVyY2UpIGFuZCB2ZWxsYWxhcihBZ3JpY3VsdHVyaXN0cykuICAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogVmVsbGFsYXIgd2VyZSBsYXJnZSBsYW5kb3duaW5nIGZhcm1lcnMgb2YgYW5jaWVudCBTYW5nYW0gc29jaWV0eS4gVGhleSAgIHdpZWxkZWQgY29uc2lkZXJhYmxlIHNvY2lhbCBhbmQgcG9saXRpY2FsIGluZmx1ZW5jZS4gICAgU291cmNlOiBOQ0VSVCBDbGFzcyA2dGggSGlzdG9yeSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to science and technology  in ancient India, consider the following  statements:    1.  Potter's wheel was first used by the people  of Indus Valley Civilisation.   2.  The lost wax technique was first used during  the Mauryan period.   Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUG90dGVyJ3Mgd2hlZWwgd2FzIGV2ZW4gdXNlZCBkdXJpbmcgdGhlIE5lb2xpdGhpYyBwZXJpb2QgdG8gbWFrZSBwb3R0ZXJ5LiAgIFBvdHRlcidzIHdoZWVsIHdhcyBub3QgZmlyc3QgaW50cm9kdWNlZCBieSB0aGUgSGFyYXBwYW4gcGVvcGxlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBjaXJlLXBlcmR1IG9yICdsb3N0LXdheCcgaXMgYSB0ZWNobmlxdWUgdXNlZCBmb3IgbWFraW5nIG9iamVjdHMgb2YgbWV0YWwgICBlc3BlY2lhbGx5IGJyb256ZSB0aGF0IHdhcyBsZWFybnQgYXMgbG9uZyBhZ28gYW5kIGl0cyBldmlkZW5jZSBjYW4gYmUgZm91bmQgZHVyaW5nIEluZHVzIFZhbGxleSAgIENpdmlsaXphdGlvbi4gICAgS25vd2xlZGdlIEJhc2U6ICAgICBUaGUgTG9zdC13YXggUHJvY2VzcyAgICAgRmlyc3QgYSB3YXggbW9kZWwgb2YgdGhlIGltYWdlIGlzIG1hZGUuIEl0IGlzIHRoZW4gcHJlc3NlZCBub29kbGUtbGlrZSBzaGFwZS4gVGhlc2Ugd2F4IHdpcmVzIGFyZSB0aGVuICAgd291bmQgYXJvdW5kIHRvIHRoZSBzaGFwZSBvZiB0aGUgZW50aXJlIGltYWdlLiBUaGUgaW1hZ2UgaXMgbm93IGNvdmVyZWQgd2l0aCBhIHRoaWNrIGNvYXRpbmcgb2YgcGFzdGUsICAgbWFkZSBvZiBlcXVhbCBwYXJ0cyBvZiBjbGF5LCBzYW5kIGFuZCBjb3ctZHVuZy4gSW50byBhbiBvcGVuaW5nIG9uIG9uZSBzaWRlLCBhIGNsYXkgcG90IGlzIGZpeGVkLiBJbiB0aGlzICAgbW9sdGVuIG1ldGFsIGlzIHBvdXJlZC4gQXMgdGhlIHdheCBpbnNpZGUgbWVsdHMsIHRoZSBtZXRhbCBmbG93cyBkb3duIHRoZSBjaGFubmVsIGFuZCB0YWtlcyBvbiB0aGUgICBzaGFwZSBvZiB0aGUgd2F4IGltYWdlLiBUaGUgaW1hZ2UgaXMgbGF0ZXIgY2hpc2VsbGVkIHdpdGggZmlsZXMgdG8gc21vb3RoZW4gaXQgYW5kIGdpdmUgaXQgYSBmaW5pc2guICAgU29tZXRpbWVzIGFuIGFsbG95IG9mIGZpdmUgbWV0YWxzIC0gZ29sZCwgc2lsdmVyLCBjb3BwZXIsIGJyYXNzIGFuZCBsZWFkIC0gaXMgdXNlZCB0byBjYXN0IGJyb256ZSBpbWFnZXMuICAgICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2sucGhwP2tlZmExPTctOCAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following statements are  correct regarding the Amara-nayaka system of  the Vijayanagara empire?  1.  Amara-Nayakas were non-military officials  at the village level.  2.  The system was influenced by the iqta  system of the Delhi Sultanate.   3.  King exercised administrative power over  Amara-nayakas.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIGFtYXJhLW5heWFrYXMgd2VyZSBtaWxpdGFyeSBjb21tYW5kZXJzIHdobyB3ZXJlIGdpdmVuIHRlcnJpdG9yaWVzIHRvICAgZ292ZXJuIGJ5IHRoZSBraW5nIChyYXlhKS4gVGhleSBjb2xsZWN0ZWQgdGF4ZXMgYW5kIG90aGVyIGR1ZXMuIFRoZXkgcmV0YWluZWQgcGFydCBvZiB0aGUgcmV2ZW51ZSBmb3IgICBwZXJzb25hbCB1c2UgYW5kIGZvciBtYWludGFpbmluZyBhIHN0aXB1bGF0ZWQgY29udGluZ2VudCBvZiBob3JzZXMgYW5kIGVsZXBoYW50cy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIEFtYXJhLU5heWFrYSBzeXN0ZW0gd2FzIGEgbWFqb3IgcG9saXRpY2FsIGlubm92YXRpb24gb2YgdGhlIFZpamF5YW5hZ2FyYSAgIEVtcGlyZS4gSXQgd2FzIGluZmx1ZW5jZWQgYnkgdGhlIElxdGEgc3lzdGVtIG9mIHRoZSBEZWxoaSBTdWx0YW5hdGUuIFRoaXMgc3lzdGVtIHByb3ZpZGVkIHRoZSAgIFZpamF5YW5hZ2FyYSBraW5ncyB3aXRoIGFuIGVmZmVjdGl2ZSBmaWdodGluZyBmb3JjZS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogS2luZ3MgZXhlcmNpc2VkIGFkbWluaXN0cmF0aXZlIHBvd2VycyBvdmVyIGFtYXJhLW5heWFrYXMuIFRoZSBhbWFyYS1uYXlha2FzICAgc2VudCB0cmlidXRlIHRvIHRoZSBraW5nIGFubnVhbGx5IGFuZCBwZXJzb25hbGx5IGFwcGVhcmVkIGluIHRoZSByb3lhbCBjb3VydCB3aXRoIGdpZnRzIHRvIGV4cHJlc3MgdGhlaXIgICBsb3lhbHR5LiBLaW5ncyBvY2Nhc2lvbmFsbHkgYXNzZXJ0ZWQgdGhlaXIgY29udHJvbCBvdmVyIHRoZW0gYnkgdHJhbnNmZXJyaW5nIHRoZW0gZnJvbSBvbmUgcGxhY2UgdG8gICBhbm90aGVyLiAgICAgSG93ZXZlciwgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIHNldmVudGVlbnRoIGNlbnR1cnksIG1hbnkgb2YgdGhlc2UgbmF5YWthcyBlc3RhYmxpc2hlZCBpbmRlcGVuZGVudCAgIGtpbmdkb21zLiBUaGlzIGhhc3RlbmVkIHRoZSBjb2xsYXBzZSBvZiB0aGUgY2VudHJhbCBpbXBlcmlhbCBzdHJ1Y3R1cmUuICAgIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5IFBhcnQgSUkgICAgICAgIG9mIDIyICAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 15,
      "question" : "With reference to forced labour (Vishti) in  India during the Gupta period, which one of the  following statements is correct?       ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIHRoZSBHdXB0YSBwZXJpb2QgdmlzaHRpIG9yIGZvcmNlZCBsYWJvdXIgYmVjYW1lIGEgc291cmNlIG9mIHN0YXRlIGluY29tZSBhbmQgd2FzIGxvb2tlZCB1cG9uIGFzIGEgICBzb3J0IG9mIHRheGF0aW9uIHBhaWQgYnkgdGhlIHBlb3BsZS4gU28gaXQgZmluZHMgZnJlcXVlbnQgbWVudGlvbiBhbG9uZyB3aXRoIG90aGVyIHRheGVzIGluIHRoZSBHdXB0YSAgIGluc2NyaXB0aW9ucy4gVGhlIGRvbmVlcyB3ZXJlIG5vdCBvbmx5IHByb3ZpZGVkIHdpdGggbGFuZCBhbmQgdmlsbGFnZXMgYWxvbmcgd2l0aCByaWdodCB0byB2YXJpb3VzIHRheGVzLCAgIHRoZXkgd2VyZSBhbHNvIGdpdmVuIHRoZSByaWdodCB0byBmb3JjZWQgbGFib3VyLiBUaGlzIHNob3dzIHRoYXQgZm9yY2VkIGxhYm91ciB3YXMgcHJvYmFibHkgbW9yZSAgIGNvbW1vbiB0aGFuIGluIHRoZSBlYXJsaWVyIHBlcmlvZC4gICAgICBNb3N0IG9mIHRoZSBpbnNjcmlwdGlvbnMgcmVmZXJyaW5nIHRvIFZpc2h0aSBjb21lIGZyb20gTWFkaHlhIFByYWRlc2ggYW5kIEthdGhpYXdhciByZWdpb25zIG1heSAgIHN1Z2dlc3QgdGhpcyBwcmFjdGljZSB3YXMgbW9yZSBwcmV2YWxlbnQgaW4gdGhlc2UgYXJlYXMuICAgVVBTQyBDU0UgUHJlXzIwMTkgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It was considered a source of income for the   State, a sort of tax paid by the people.     ",
        "option2" : " It was totally absent in the Madhya Pradesh   and Kathiawar regions of the Gupta   Empire.     ",
        "option3" : " The forced labourer was entitled to weekly   wages.     ",
        "option4" : " The eldest son of the labourer was sent as   the forced labourer.   "
      }
    },
    {
      "index" : 16,
      "question" : "Which of the following statements are  correct regarding the social conditions during  the 17th century?  1.  Women were not allowed to engage in any  type of economic activity.   2.  Marriage required compulsory payment of  dowry to the groom's family.   3.  Some women enjoyed the right to inherit  property.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogRHVyaW5nIHRoZSAxN3RoIGNlbnR1cnksIGluIGFncmFyaWFuIHNvY2lldHksIHdvbWVuIGFuZCBtZW4gaGFkIHRvIHdvcmsgICBzaG91bGRlciB0byBzaG91bGRlciBpbiB0aGUgZmllbGRzLiBNZW4gdGlsbGVkIGFuZCBwbG91Z2hlZCwgd2hpbGUgd29tZW4gc293ZWQsIHdlZWRlZCwgdGhyZXNoZWQgYW5kICAgd2lubm93ZWQgdGhlIGhhcnZlc3QuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSGlnaCBtb3J0YWxpdHkgcmF0ZXMgYW1vbmcgd29tZW4gLSBvd2luZyB0byBtYWxudXRyaXRpb24sIGZyZXF1ZW50ICAgcHJlZ25hbmNpZXMsIGRlYXRoIGR1cmluZyBjaGlsZGJpcnRoIC0gb2Z0ZW4gbWVhbnQgYSBzaG9ydGFnZSBvZiB3aXZlcy4gVGhpcyBsZWQgdG8gY3VzdG9tcyBpbiBhZ3JhcmlhbiAgIHNvY2lldHkgd2hpY2ggd2VyZSBkaWZmZXJlbnQgZnJvbSBjdXN0b21zIGluIGVsaXRlIGNvbW11bml0aWVzLiBNYXJyaWFnZXMgaW4gbWFueSBydXJhbCBjb21tdW5pdGllcyAgIHJlcXVpcmVkIHRoZSBwYXltZW50IG9mIGJyaWRlLXByaWNlIHJhdGhlciB0aGFuIGRvd3J5IHRvIHRoZSBicmlkZSdzIGZhbWlseS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQW1vbmcgdGhlIGxhbmRlZCBzb2NpYWwgY2xhc3MsIHdvbWVuIGhhZCB0aGUgcmlnaHQgdG8gaW5oZXJpdCB0aGUgcHJvcGVydHkuICAgSGluZHUgYW5kIE11c2xpbSB3b21lbiBpbmhlcml0ZWQgemFtaW5kYXJpcyB3aGljaCB0aGV5IHdlcmUgZnJlZSB0byBzZWxsIG9yIG1vcnRnYWdlLiAgICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to ancient Indian history,  consider the following statements:   1.  While the Indus Valley civilisation is known  for their towns and citadels, Mesopotamia is  famous for its religious temples and art.    2. While the Indus Valley civilisation imported  cotton goods from Mesopotamia, later  imported gold from Indus Valley.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBNZXNvcG90YW1pYSBhbmQgSW5kdXMgVmFsbGV5IENpdmlsaXphdGlvbiBhcmUgb2xkZXN0IGNpdmlsaXNhdGlvbnMgb2Ygd29ybGQuIE1lc29wb3RhbWlhIHdhcyBsb2NhdGVkIGluICAgdHJpYW5ndWxhciBhcmVhIGJldHdlZW4gdGhlIFRpZ3JpcyBhbmQgdGhlIEV1cGhyYXRlcyByaXZlcnMuIFRoZSBJbmR1cyBjaXZpbGl6YXRpb24gd2FzIGFsb25nIHRoZSBJbmR1cyAgIFJpdmVyLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIHR3byBjaXZpbGlzYXRpb25zIGluc3RlYWQgb2YgbG90IG9mIHNpbWlsYXJpdHkgaGFkIHNvbWUgY29udHJhc3RpbmcgZmVhdHVyZXMuICAgV2hpbGUgSW5kdXMgVmFsbGV5IGNpdmlsaXNhdGlvbiBpcyBrbm93biBmb3IgdGhlaXIgdG93bnMgYW5kIGNpdGFkZWxzLCBNZXNvcG90YW1pYSBpcyBmYW1vdXMgZm9yIGl0cyAgIHJlbGlnaW91cyB0ZW1wbGVzIGFuZCBhcnQuIE1lc29wb3RhbWlhbnMgd29yc2hpcHBlZCB0aGUgZ29kcyBpbiBUZW1wbGVzIGFuZCB0aGVyZSB3YXMgYSBodWdlICAgZW1waGFzaXMgb24gdGhlIGRlc2lnbmluZyBhbmQgYmVhdXRpZmljYXRpb24gb2YgdGhlIFRlbXBsZXMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogRHVyaW5nIEluZHVzIHZhbGxleSBjaXZpbGlzYXRpb24gaW50ZXJuYWwgdHJhZGUgd2FzIGV4dGVuc2l2ZSB3aXRoIG90aGVyIHBhcnRzIG9mICAgSW5kaWEuIEZvcmVpZ24gdHJhZGUgd2FzIG1haW5seSBjb25kdWN0ZWQgd2l0aCBNZXNvcG90YW1pYSwgQWZnaGFuaXN0YW4gYW5kIElyYW4uICAgIEdvbGQsIGNvcHBlciwgdGluIGFuZCBzZXZlcmFsIHNlbWktcHJlY2lvdXMgc3RvbmVzIHdlcmUgaW1wb3J0ZWQuIE1haW4gZXhwb3J0cyBmcm9tIEluZHVzIHZhbGxleSAgIHdlcmUgc2V2ZXJhbCBhZ3JpY3VsdHVyYWwgcHJvZHVjdHMgc3VjaCBhcyB3aGVhdCwgYmFyZWx5LCBwZWFzLCBvaWwgc2VlZHMgYW5kIGEgdmFyaWV0eSBvZiBmaW5pc2hlZCAgIHByb2R1Y3RzIGluY2x1ZGluZyBjb3R0b24gZ29vZHMsIHBvdHRlcnksIGJlYWRzLCB0ZXJyYWNvdHRhIGZpZ3VyZXMgYW5kIGl2b3J5IHByb2R1Y3RzLiAgICAgU291cmNlOiAgSGlzdG9yeSBIaWdoZXIgU2Vjb25kYXJ5IC0gRmlyc3QgWWVhciBUYW1pbCBOYWR1IEJvYXJkICAgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vYW5zd2VyZWQtY29tcGFyZS1mZWF0dXJlcy1vZi1pbmR1cy12YWxsZXktY2l2aWxpc2F0aW9uLXdpdGgtICBtZXNvcG90YW1pYW4tY2l2aWxpc2F0aW9uLyAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2          "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to Nathpanthis, Siddhas  and Yogis in medieval India, which of the  following statement is correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "ICAgb2YgMjIgICAgICAgIEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgYSBpcyBpbmNvcnJlY3QuIE5hdGhwYW50aGlzLCBTaWRkaGFjaGFyYXMgYW5kIFlvZ2lzIGNyaXRpY2lzZWQgdGhlIHJpdHVhbCBhbmQgb3RoZXIgYXNwZWN0cyBvZiAgIGNvbnZlbnRpb25hbCByZWxpZ2lvbiBhbmQgdGhlIHNvY2lhbCBvcmRlciwgdXNpbmcgc2ltcGxlLCBsb2dpY2FsIGFyZ3VtZW50cy4gICAgU3RhdGVtZW50IGIgaXMgY29ycmVjdC4gTmF0aHBhbnRoaXMsIFNpZGRoYWNoYXJhcyBhbmQgWW9naXMgYWR2b2NhdGVkIGZvciByZW51bmNpYXRpb24gb2YgdGhlIHdvcmxkLiAgIFRvIHRoZW0gdGhlIHBhdGggdG8gc2FsdmF0aW9uIGxheSBpbiBtZWRpdGF0aW9uLiAgICBTdGF0ZW1lbnQgYyBpcyBpbmNvcnJlY3QuIFRvIGFjaGlldmUgcGF0aCBvZiBzYWx2YXRpb24gdGhleSBhZHZvY2F0ZWQgaW50ZW5zZSB0cmFpbmluZyBvZiB0aGUgbWluZCBhbmQgICBib2R5IHRocm91Z2ggcHJhY3RpY2VzIGxpa2UgeW9nYXNhbmFzLCBicmVhdGhpbmcgZXhlcmNpc2VzIGFuZCBtZWRpdGF0aW9uLiAgICAgU3RhdGVtZW50IGQgaXMgaW5jb3JyZWN0LiBOYXRocGFudGhpcywgU2lkZGhhY2hhcmFzIGFuZCBZb2dpcyBiZWNhbWUgcGFydGljdWxhcmx5IHBvcHVsYXIgYW1vbmcgJ2xvdycgICBjYXN0ZXMuIFRoZWlyIGNyaXRpY2lzbSBvZiBjb252ZW50aW9uYWwgcmVsaWdpb24gY3JlYXRlZCB0aGUgZ3JvdW5kIGZvciBkZXZvdGlvbmFsIHJlbGlnaW9uIHRvIGJlY29tZSBhICAgcG9wdWxhciBmb3JjZSBpbiBub3J0aGVybiBJbmRpYS4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rLnBocD9nZXNzMT04LTEwICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They neither criticized nor supported   conventional religion and the social order.   ",
        "option2" : " They supported the renunciation of the   world through meditation.   ",
        "option3" : " They rejected yogasanas for attaining   salvation.   ",
        "option4" : " It became popular among the Brahminical   class due to extreme ritual practices.    "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to stupas of ancient India,  consider the following statements  1.  The practice of constructing Stupas was  prevalent during the Vedic Period.   2.  The Stupas were built in relation to both  Buddhist and Jain religions.  3.   The Shunga dynasty introduced the idea of  'toranas' to the stupas.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QtIFN0dXBhcyB3ZXJlIGJ1cmlhbCBtb3VuZHMgcHJldmFsZW50IGluIEluZGlhIGZyb20gdGhlIFZlZGljIHBlcmlvZC4gQWx0aG91Z2ggYSAgIFZlZGljIHRyYWRpdGlvbiwgc3R1cGFzIHdlcmUgcG9wdWxhcml6ZWQgYnkgdGhlIEJ1ZGRoaXN0cy4gRHVyaW5nIHRoZSBwZXJpb2Qgb2YgQXNob2thLCB0aGUgYXJ0IG9mIHN0dXBhcyAgIHJlYWNoZWQgaXRzIGNsaW1heC4gQWxtb3N0IDg0LDAwMCBzdHVwYXMgd2VyZSBlcmVjdGVkIGR1cmluZyBoaXMgcGVyaW9kLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC0gU3R1cGEsIHZpaGFyYSBhbmQgY2hhaXR5YSBhcmUgcGFydCBvZiBCdWRkaGlzdCBhbmQgSmFpbmEgbW9uYXN0aWMgY29tcGxleGVzIGJ1dCAgIHRoZSBsYXJnZXN0IG51bWJlciBiZWxvbmdzIHRvIHRoZSBCdWRkaGlzdCByZWxpZ2lvbi4gQW1vbmcgdGhlIEphaW5hIFZpaGFyYXMsIHRob3NlIGF0IFVkYXlhZ2lyaSBhbmQgICBLaGFuZGFnaXJpIChPcmlzc2EpIHdlcmUgZXhjYXZhdGVkIGR1cmluZyB0aGUgdGltZSBvZiBLaGFyYXZlbGEuIFN0dXBhcyB3ZXJlIGFtb25nIHRoZSBmaXJzdCAgIG1vbnVtZW50cyB0byBiZSBlcmVjdGVkIGJ5IHRoZSBKYWluIGNvbW11bml0eS4gU29vbiB0aGUgQnVkZGhpc3RzIGFsb25lIGNvbnRpbnVlZCB0aGlzIHRyYWRpdGlvbi4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC0uIFRoZSBTaHVuZ2EgZHluYXN0eSBpbnRyb2R1Y2VkIHRoZSBpZGVhIG9mIHRvcmFucyBhcyBiZWF1dGlmdWxseSBkZWNvcmF0ZWQgICBnYXRld2F5cyB0byB0aGUgc3R1cGFzLiAgIFRoZSB0b3JhbnMgd2VyZSBpbnRyaWNhdGVseSBjYXJ2ZWQgd2l0aCBmaWd1cmVzIGFuZCBwYXR0ZXJucyBhbmQgd2VyZSBldmlkZW5jZSBvZiBIZWxsZW5pc3RpYyBpbmZsdWVuY2UuICAgIFNvdXJjZTogQU4gSU5UUk9EVUNUSU9OIFRPIElORElBTiBBUlQgJiBDVUxUVVJFIE5DRVJUIENMQVNTIFhJSSAoQ0hBUFRFUi00KSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 20,
      "question" : "In the context of the history of India,  consider the following pairs:     Term     Description     1. Eripatti     Revenue from this land was  set apart for the  maintenance of the village  tank      2. Taniyurs     Villages donated to a single  Brahmin or a group of  Brahmins      3. Ghatikas     Colleges generally attached  to the temples      Which of the pairs given above is/are correctly  matched?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gRXJpcGF0dGkgd2FzIGEgc3BlY2lhbCBjYXRlZ29yeSBvZiBsYW5kIGR1cmluZyB0aGUgcnVsZSBvZiBQYWxsYXZhcyBpbiBTb3V0aCAgIEluZGlhLiBEb25hdGVkIGJ5IGluZGl2aWR1YWxzLCB0aGUgcmV2ZW51ZSBmcm9tIHRoaXMgbGFuZCB3YXMgc2V0IGFwYXJ0IGZvciB0aGUgbWFpbnRlbmFuY2Ugb2YgdGhlICAgdmlsbGFnZSB0YW5rLiAgICAgICBQYWlyIDIgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZC4gSW4gQ2hvbGEgYWRtaW5pc3RyYXRpb24sIEt1cnJhbSByZWZlcnJlZCB0byBhIGdyb3VwIG9mIHZpbGxhZ2VzLiBUYW5peXVyICAgd2FzIGEgbGFyZ2UgdmlsbGFnZSBiaWcgZW5vdWdoIHRvIGJlIGEgS3VycmFtIGJ5IGl0c2VsZi4gICAgICBQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuIER1cmluZyBhbmNpZW50IHBlcmlvZCwgaW4gU291dGggSW5kaWEsIGFncmFoYXJhcyBzZXJ2ZWQgYXMgY2VudGVycyBvZiAgIGxlYXJuaW5nIGFuZCB0ZWFjaGluZy4gU291dGggSW5kaWFuIGtpbmdkb21zIGFsc28gaGFkIG90aGVyIGN1bHR1cmFsIGluc3RpdHV0aW9ucyBrbm93biBhcyBHaGF0aWthICAgYW5kIEJyYWhtYXB1cmkuIEEgR2hhdGlrYSB3YXMgYSBjZW50cmUgb2YgbGVhcm5pbmcgaW5jbHVkaW5nIHJlbGlnaW9uLCB3YXMgYXR0YWNoZWQgdG8gdGVtcGxlcyBhbmQgICB3YXMgc21hbGwgaW4gc2l6ZS4gICAgIFVQU0MgQ1NFIFByZV8yMDE2ICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only     ",
        "option2" : "3 only     ",
        "option3" : "2 and 3 only     ",
        "option4" : "1 and 3 only         "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the Sangam age, which  of the following statement(s) is/are correct?   1.  Puhar was a great centre of trade for  Pandyan   2.  Kavuriyar's title was assumed by the  Pandyan kings and the 'Vallavan' title was  assumed by the Chola kings.   3. The Chola kingdom was situated between  the Pennar and the Velar Rivers.   4.  The Major Rock Edict II Asoka mentions of  the three kingdoms - Pandya's, Cholas and  Cheras as neighbours.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgVGFtaWwgY291bnRyeSB3YXMgcnVsZWQgYnkgdGhyZWUgZHluYXN0aWVzIG5hbWVseSB0aGUgQ2hlcmEsIENob2xhIGFuZCBQYW5keWFzIGR1cmluZyB0aGUgU2FuZ2FtICAgQWdlLiAgICAgIG9mIDIyICAgICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBQYW5keWFuIHBvcnQgS29ya2FpIHdhcyBhIGdyZWF0IGNlbnRyZXMgb2YgdHJhZGUgYW5kIGNvbW1lcmNlLCBhbm90aGVyICAgcG9ydCB3YXMgU2FsaXl1ci4gQ2hvbGEga2luZyBLYXJpa2FsYSBmb3VuZGVkIFB1aGFyIGFuZCBjb25zdHJ1Y3RlZCAxNjAga20gb2YgZW1iYW5rbWVudCBhbG9uZyB0aGUgICBLYXZlcmkgUml2ZXIuIFB1aGFyIHdhcyBhIGdyZWF0IGNlbnRyZSBvZiB0cmFkZSBhbmQgY29tbWVyY2UsIGFuZCBleGNhdmF0aW9ucyBzaG93IHRoYXQgaXQgaGFkIGEgbGFyZ2UgICBkb2NrLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gS2luZ3MgYXNzdW1lZCBzZXZlcmFsIHRpdGxlcy4gRm9yIGV4YW1wbGUsIHRoZSBQYW5keWFzIHdlcmUga25vd24gYXMgTWluYXZhciwgICBLYXZ1cml5YXIsIFBhbmNoYXZhciwgVGVubmFyLCBTZWxpeWFyLCBNYXJhciwgVmFsdWRpLmV0YyB0aGUgQ2hvbGFzIGNhbGxlZCB0aGVtc2VsdmVzIFNlbm5pcywgU2VtYml5YXMsICAgVmFsYXZhbiBhbmQgS2lsbGksIGFuZCB0aGUgQ2hlcmFzIGhhZCB0aXRsZXMgbGlrZSBWYW5hdmFyLCBWaWxsYXZhciwgS3VkYXZhciwgS3V0dHV2YXIsIFBvcmFpeWFyLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgQ2hvbGEga2luZ2RvbSB3aGljaCBjYW1lIHRvIGJlIGNhbGxlZCBDaG9sYW1hbmRhbGFtIChDb3JvbWFuZGVsKSBpbiAgIGVhcmx5IG1lZGlldmFsIHRpbWVzIHdhcyBzaXR1YXRlZCB0byB0aGUgbm9ydGgtZWFzdCBvZiB0aGUgUGFuZHlhbiB0ZXJyaXRvcnksIGJldHdlZW4gdGhlIFBlbm5hciBhbmQgICB0aGUgVmVsYXIgUml2ZXJzLiBUaGVpciBjYXBpdGFsIHdhcyBmaXJzdCBhdCBVcmFpeXVyLCBhIHBsYWNlIGZhbW91cyBmb3IgY290dG9uIHRyYWRlIGFuZCBsYXRlciBzaGlmdGVkIHRvICAgUHVoYXIgb3IgS2F2ZXJpcGF0dGlyYW0uICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIEluIHRoZSBNYWpvciBSb2NrIEVkaWN0IElJIEFzb2thIG1lbnRpb25zIG9mIHRoZSB0aHJlZSBraW5nZG9tcyAtIFBhbmR5YXMsICAgQ2hvbGFzIGFuZCBDaGVyYXMgYXMgbmVpZ2hib3Vycy4gVGhlIEhhdGhpZ3VtcGhhIGluc2NyaXB0aW9uIG9mIEtoYXJhdmVsZWEgY29udGFpbnMgdGhlIGVhcmx5ICAgZXBpZ3JhcGhpYyByZWZlcmVuY2UgdG8gdGhlIGtpbmdkb21zIG9mIHRoZSBUYW1pbCBjb3VudHJ5LCB3aGVyZSBoZSBpcyBzYWlkIHRvIGhhdmUgZGVzdHJveWVkIGEgICBjb25mZWRlcmFjeSBvZiBUYW1pbCBzdGF0ZXMgLSBUcmFtaXJhZGVzYSBTYW5naGF0YW0uIEhvd2V2ZXIsIHRoZSBjaGllZiBzb3VyY2UgZm9yIHRoZSBTYW5nYW0gcGVyaW9kICAgaXMgdGhlIFNhbmdhbSBsaXRlcmF0dXJlLiAgICAgU291cmNlOiAgaHR0cHM6Ly93d3cuaGlzdG9yeWRpc2N1c3Npb24ubmV0L2hpc3Rvcnktb2YtaW5kaWEvc2FuZ2FtLXBlcmlvZC1saXRlcmF0dXJlLSAgYWRtaW5pc3RyYXRpb24tYW5kLWVjb25vbWljLWNvbmRpdGlvbi1kdXJpbmctc2FuZ2FtLXBlcmlvZC83MzkgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 22,
      "question" : "It is an urban site identified as one of the  centres of Civilisation. It has common  settlements with mud-brick walls and is  located on the right bank of the now dried up  Palaeo-channel of Drishadvati. It is by far one of  the largest Harappan sites in modern-day  India.   Which of the following is being described in the  above passage?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcmNoYWVvbG9naWNhbGx5LCB0aGUgc3BhbiBvZiB0aGUgSGFyYXBwYW4gQ2l2aWxpc2F0aW9uIGlzIHN1YmRpdmlkZWQgaW50byB0aHJlZSBwZXJpb2RzIC0gZWFybHkgKDMzMDAgICBCQyB0byAyNjAwIEJDKSwgbWF0dXJlICgyNjAwIEJDIHRvIDE5MDAgQkMpLCBhbmQgbGF0ZSAoMTkwMCBCQyB0byAxNzAwIEJDKS4gICAgIEZpdmUgdXJiYW4gc2l0ZXMgLSBNb2hlbmpvLURhcm8sIEhhcmFwcGEsIEdhbndlcml3YWxhIChub3cgaW4gUGFraXN0YW4pLCBhbmQgUmFraGlnYXJoaSBhbmQgICBEaG9sYXZpcmEgKEluZGlhKSAtIGhhdmUgYmVlbiBpZGVudGlmaWVkIGFzIGNlbnRyZXMgb2YgdGhlIENpdmlsaXNhdGlvbi4gICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBNb2hlbmpvLURhcm8gaXMgaW4gUGFraXN0YW4uICAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFRoZSBhbmNpZW50IHNpdGUgb2YgUmFraGktS2hhcyBhbmQgUmFraGktU2hhaHB1ciBhcmUgY29sbGVjdGl2ZWx5IGtub3duIGFzICAgUmFraGlnYXJoaSwgbG9jYXRlZCBvbiB0aGUgcmlnaHQgYmFuayBvZiBub3cgZHJpZWQgdXAgUGFsYWVvLWNoYW5uZWwgb2YgRHJpc2hhZHZhdGkuICBTZXZlbiAoMDcpICAgbW91bmRzIGFyZSBsb2NhdGVkIGhlcmUgYW5kIGlzIGJ5IGZhciBvbmUgb2YgdGhlIGxhcmdlc3QgSGFyYXBwYW4gc2l0ZXMgaW4gSW5kaWEuIFRoaXMgc2l0ZSBzaG93cyB0aGUgICBzZXF1ZW50aWFsIGRldmVsb3BtZW50IG9mIHRoZSBJbmR1cyBjdWx0dXJlIGluIHRoZSBub3cgZHJpZWQgdXAgU2FyYXN3YXRpIGJhc2luLiAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IERob2xhdmlyYSBpcyBpbiBtb2Rlcm4gZGF5IEluZGlhIGJ1dCBub3QgbG9jYXRlZCBvbiB0aGUgcmlnaHQgYmFuayBvZiBub3cgZHJpZWQgICB1cCBQYWxhZW8tY2hhbm5lbCBvZiBEcmlzaGFkdmF0aS4gICAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3Q6IEdhbndlcml3YWxhIGlzIGluIG1vZGVybiBkYXkgUGFraXN0YW4uICAgU291cmNlOiAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC9leHBsYWluZWQtd2hhdC1uZXctZmluZHMtYXQtaGFyYXBwYW4tc2l0ZS0gIGNvdWxkLW1lYW4tNzkwODk0MC8gICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL3Vwc2MtY3VycmVudC1hZmZhaXJzL3Vwc2MtZXNzZW50aWFscy91cHNjLWVzc2VudGlhbHMtaGlzdG9yaWNhbC0gIHRpZGJpdHMtcmFraGlnYXJoaS1hcmNoYWVvbG9naWNhbC1zaXRlLTc5MjMzNDYvICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Mohenjo-Daro   ",
        "option2" : "Rakhigarhi   ",
        "option3" : "Dholavira   ",
        "option4" : "Ganweriwala   "
      }
    },
    {
      "index" : 23,
      "question" : "With reference to the administrative  structure during the Mughals and Delhi  Sultanate, consider the following statements:   1.  The emperor controlled all military and  judicial powers both during the Sultanate  period and Mughal period.  2.  Unlike the Delhi Sultanate, the provinces in  the Mughal empire enjoyed semi- autonomous rule.   3.  The village was the smallest unit of  administration in both the Delhi Sultanate  and Mughal Empire.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgRGVsaGkgU3VsdGFuYXRlIHdhcyBhbiBJc2xhbWljIGVtcGlyZSBiYXNlZCBpbiBEZWxoaSBmb3IgMzIwIHllYXJzICgxMjA2LTE1MjYpLiBGaXZlIGR5bmFzdGllcyBydWxlZCAgIG92ZXIgdGhlIERlbGhpIFN1bHRhbmF0ZSBzZXF1ZW50aWFsbHk6IHRoZSBNYW1sdWsgZHluYXN0eSwgdGhlIEtoYWxqaSBkeW5hc3R5LCB0aGUgVHVnaGxhcSBkeW5hc3R5LCB0aGUgICBTYXl5aWQgZHluYXN0eSBhbmQgdGhlIExvZGkgZHluYXN0eS4gICAgICBvZiAyMiAgICAgICAgVGhlIE11Z2hhbHMgd2VyZSBhIE11c2xpbSBkeW5hc3R5IHdobyBydWxlZCBvdmVyIGEgbWFqb3JpdHkgb2YgSW5kaWEuIEJ5IDE3NTAsIHRoZXkgaGFkIGRvbWluYXRlZCAgIG11Y2ggb2YgU291dGggQXNpYSBmb3Igc2V2ZXJhbCBjZW50dXJpZXMuIEJhYnVyIHdhcyB0aGUgZm91bmRlciBvZiB0aGUgTXVnaGFsIGVtcGlyZSB3aGljaCB3YXMgICBlc3RhYmxpc2hlZCBpbiAxNTI2IGFmdGVyIEJhYnVyIGRlZmVhdGVkIElicmFoaW0gTG9kaSBpbiB0aGUgZmlyc3QgYmF0dGxlIG9mIFBhbmlwYXQuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBTdWx0YW4sIGluIHRoZSBEZWxoaSBTdWx0YW5hdGUsIHdhcyB0aGUgY2VudHJhbCBmaWd1cmUgaW4gdGhlIGFkbWluaXN0cmF0aXZlIHNldCAgIHVwLiBIZSB3YXMgdGhlIGhlYWQgb2YgdGhlIGNpdmlsIGFkbWluaXN0cmF0aW9uIGFuZCBTdXByZW1lIENvbW1hbmRlciBvZiB0aGUgYXJteS4gSGUgbWFkZSBhbGwgdGhlICAgYXBwb2ludG1lbnRzIGFuZCBwcm9tb3Rpb25zLiBIZSB3YXMgYWxzbyB0aGUgaGVhZCBvZiB0aGUgSnVkaWNpYXJ5LiBIZSBhbHNvIGhhZCB0aGUgcmlnaHQgdG8gcmVtb3ZlICAgYW55Ym9keSBmcm9tIHRoZSBzZXJ2aWNlLiBIZSBoYWQgYWJzb2x1dGUgcG93ZXIgaW4gaGlzIGhhbmQuIEhlIHVzZWQgdG8gY29uZmVyIHRpdGxlcyBhbmQgaG9ub3VycyB1cG9uICAgcGVvcGxlLiBTaW1pbGFybHksIGR1cmluZyBNdWdoYWwgcnVsZSwgdGhlIGVtcGVyb3Igd2FzIHRoZSBzdXByZW1lIGhlYWQgb2YgdGhlIGFkbWluaXN0cmF0aW9uIGFuZCAgIGNvbnRyb2xsZWQgYWxsIG1pbGl0YXJ5IGFuZCBqdWRpY2lhbCBwb3dlcnMuIEFsbCBvZmZpY2VycyBpbiBNdWdoYWwgYWRtaW5pc3RyYXRpb24gb3dlZCB0aGVpciBwb3dlciBhbmQgICBwb3NpdGlvbiB0byB0aGUgRW1wZXJvci4gVGhlIEVtcGVyb3IgaGFkIGF1dGhvcml0eSB0byBhcHBvaW50LCBwcm9tb3RlLCBhbmQgcmVtb3ZlIG9mZmljaWFscyBhdCBoaXMgICBwbGVhc3VyZS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBhZG1pbmlzdHJhdGlvbiBvZiBwcm92aW5jaWFsIGFyZWFzIHVuZGVyIERlbGhpIHN1bHRhbmF0ZSBkZXBlbmRlZCBvbiB0aGUgICBkZWdyZWUgb2YgcG9saXRpY2FsIGNvbnRyb2wgd2hpY2ggd2FzIGV4ZXJjaXNlZCBvdmVyIHRoZSBhcmVhcy4gU29tZSBvZiB0aGUgbmV3bHkgY29ucXVlcmVkIGFyZWFzIHdlcmUgICBicm91Z2h0IGRpcmVjdGx5IHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBTdWx0YW5hdGUgYW5kIHNvbWUgb3RoZXIgYXJlYXMgcmVtYWluZWQgc2VtaS1hdXRvbm9tb3VzLiAgIFRodXMsIHRoZXJlIHdhcyBhbiBlbGVtZW50IG9mIHNlbWktYXV0b25vbW91cyBydWxlIGluIHByb3ZpbmNlcy4gSW4gdGhlIGFyZWFzIHRoYXQgd2VyZSBsb29zZWx5ICAgYWZmaWxpYXRlZCB0byB0aGUgU3VsdGFuYXRlLCBhIGZldyBvZmZpY2lhbHMgd2VyZSBhcHBvaW50ZWQgYnkgdGhlIENlbnRyZSBhcyBhIHN5bWJvbCBvZiBpbXBlcmlhbCBwcmVzZW5jZS4gICBUaGUgcHJvdmluY2VzIHdlcmUgcGxhY2VkIHVuZGVyIHRoZSBjaGFyZ2Ugb2YgdGhlIEdvdmVybm9ycyB3aG8gd2VyZSByZXNwb25zaWJsZSBmb3IgdGhlIG92ZXJhbGwgICBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgYXJlYS4gICAgIFRoZSBFbXBlcm9yIG9mIHRoZSBNdWdoYWwgRW1waXJlIGVuam95ZWQgYWJzb2x1dGUgcG93ZXIgYW5kIHdhcyBhbHdheXMgdGhlIGNlbnRyYWwgYWRtaW5pc3RyYXRpdmUgICBhdXRob3JpdHkuICAgIFRoZSBNdWdoYWwgZW1waXJlIHdhcyBkaXZpZGVkIGludG8gdHdlbHZlIHByb3ZpbmNlcyBvciBzdWJhcyBieSBBa2Jhci4gV2l0aCB0aGUgZXhwYW5zaW9uIG9mIE11Z2hhbCAgIGVtcGlyZSB0aGUgbnVtYmVyIG9mIHByb3ZpbmNlcyBpbmNyZWFzZWQgdG8gdHdlbnR5LiBFYWNoIHN1YmEgd2FzIHBsYWNlZCB1bmRlciBhIFN1YmVkYXIgb3IgICBwcm92aW5jaWFsIGdvdmVybm9yIHdobyB3YXMgZGlyZWN0bHkgYXBwb2ludGVkIGJ5IHRoZSBFbXBlcm9yLiBUaGUgc3ViZWRhciB3YXMgaGVhZCBvZiB0aGUgcHJvdmluY2UgICBhbmQgcmVzcG9uc2libGUgZm9yIG1haW50ZW5hbmNlIG9mIGdlbmVyYWwgbGF3IGFuZCBvcmRlci4gICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgdmlsbGFnZSB3YXMgdGhlIHNtYWxsZXN0IHVuaXQgb2YgYWRtaW5pc3RyYXRpb24gaW4gYm90aCBEZWxoaSBTdWx0YW5hdGUgYW5kICAgTXVnaGFsIEVtcGlyZS4gSW4gRGVsaGkgU3VsdGFuYXRlLCBhIG51bWJlciBvZiB2aWxsYWdlcyBmb3JtZWQgdGhlIFBhcmdhbmEuIFRoZSBpbXBvcnRhbnQgUGFyZ2FuYSAgIG9mZmljaWFscyB3ZXJlIENoYXVkaGFyeSwgQW1pbCAocmV2ZW51ZSBjb2xsZWN0b3IpIGFuZCBLYXJrdW4gKGFjY291bnRhbnQpLiBWaWxsYWdlIGFuZCBwYXJnYW5hIHdlcmUgICBpbmRlcGVuZGVudCB1bml0cyBvZiBhZG1pbmlzdHJhdGlvbiwgYW5kIHlldCB0aGVyZSB3ZXJlIGludGVyIHJlbGF0ZWQgYXJlYXMuICAgICBTaW1pbGFybHksIGluIE11Z2hhbCBFbXBpcmUsIHRoZSBwcm92aW5jZXMgb3Igc3ViYXMgd2VyZSBkaXZpZGVkIGludG8gU2Fya2Fycy4gVGhlIFNhcmthcnMgd2VyZSBkaXZpZGVkICAgaW50byBQYXJnYW5hcy4gQXQgdGhlIGxldmVsIG9mIFNhcmthciwgdGhlcmUgd2VyZSB0d28gaW1wb3J0YW50IGZ1bmN0aW9uYXJpZXMsIHRoZSBmYXVqZGFyIGFuZCB0aGUgICBBbWFsZ3V6YXIuIFRoZSBGYXVqZGFyIHdhcyBhcHBvaW50ZWQgYnkgdGhlIGltcGVyaWFsIG9yZGVyIGFuZCBoaXMgcHJpbWFyeSBkdXR5IHdhcyB0byBzYWZlZ3VhcmQgdGhlICAgbGlmZSBhbmQgcHJvcGVydHkgb2YgdGhlIHJlc2lkZW50cyBvZiB0aGUgYXJlYXMgdW5kZXIgaGlzIEp1cmlzZGljdGlvbi4gVGhlIGFtYWxndXphciBvciBhbWlsIHdhcyB0aGUgICByZXZlbnVlIGNvbGxlY3Rvci4gICAgIFNvdXJjZTogICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NyU2VjMzE1TkVXLzMxNV9IaXN0b3J5X0VuZy8zMTVfSGlzdG9yeV9FbmdfTGVzc29uMTIucGQgIGYgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to Ancient India, which of  the following factors led to the rapid decline of  the Mauryan Empire?   1.  The religious policy of Ashoka antagonized  the Brahmins.   2.  Financial crisis faced by the successors of  Ashoka    3.  Foreign invasions of the Mauryan Empire  after the death of Ashoka.   4.  Neglect of the Deccan Region by Ashoka led  to a rise in independent kingdoms   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgY2F1c2VzIGZvciB0aGUgZGVjbGluZSBvZiB0aGUgTWF1cnlhbiBlbXBpcmUgaGF2ZSBiZWVuIHdpZGVseSBkZWJhdGVkIGJ5IHNjaG9sYXJzLiBUaGUgdHJhZGl0aW9uYWwgICBhcHByb2FjaCBhdHRyaWJ1dGVzIHRoZSBkZWNsaW5lIHRvIEFzb2thJ3MgcG9saWNpZXMgYW5kIGhpcyB3ZWFrIHN1Y2Nlc3NvcnMuIEFub3RoZXIgYXBwcm9hY2ggaG9sZHMgdGhlICAgaW5hZGVxdWF0ZSBwb2xpdGljYWwgYW5kIGVjb25vbWljIGluc3RpdHV0aW9ucyB0byBzdXN0YWluIHN1Y2ggYSB2YXN0IGVtcGlyZS4gICAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6ICBUaGUgcmVsaWdpb3VzIHBvbGljeSBvZiBBc2hva2EgYW50YWdvbml6ZWQgdGhlIEJyYWhtaW5zIG9mIGhpcyBlbXBpcmUuIFNpbmNlICAgQXNob2thIGJhbm5lZCBhbmltYWwgc2FjcmlmaWNlIGl0IHN0b3BwZWQgdGhlIGluY29tZSBvZiBCcmFobWlucyB3aG8gcmVjZWl2ZWQgZ2lmdHMgaW4gZm9ybSBvZiB2YXJpb3VzICAga2luZHMgb2Ygc2FjcmlmaWNlcyBtYWRlIHRvIHRoZW0uICAgICAgb2YgMjIgICAgICAgIE9wdGlvbiAyIGlzIGNvcnJlY3Q6IER1cmluZyBNYXVyeWFuIGFnZSBhIGh1Z2UgZXhwZW5kaXR1cmUgd2FzIGRvbmUgb24gbWFpbnRhaW5pbmcgYXJteSBhbmQgICBidXJlYXVjcmFjeS4gTW9yZW92ZXIsIEFzaG9rYSBkdXJpbmcgaGlzIHJlaWduIG1hZGUgbGFyZ2UgZ3JhbnRzIHRvIHRoZSBCdWRkaGlzdCBtb25rcyB3aGljaCBtYWRlICAgdGhlIHJveWFsIHRyZWFzdXJ5IGVtcHR5LiBUaGUgTWF1cnlhbiBraW5ncyB3aG8gc3VjY2VlZGVkIEFzaG9rYSBmYWNlZCB0aGUgZmluYW5jaWFsIGNydW5jaC4gICAgT3B0aW9uIDMgaXMgY29ycmVjdDogRm9yZWlnbiBJbnZhc2lvbnM6IER1cmluZyB0aGUgcmVpZ24gb2YgdGhlIGZpcnN0IHRocmVlIE1hdXJ5YW4ga2luZ3MsIG5vIGZvcmVpZ24gICBwb3dlciB0cmllZCB0byBhdHRhY2sgSW5kaWEgZnJvbSB0aGUgbm9ydGgtd2VzdCBhcyB0aGVyZSB3YXMgYSBmZWFyIG9mIHRoZSBtaWdodHkgTWF1cnlhbiBhcm15LiBCdXQgICBhZnRlciBBc2hva2EncyBkZWF0aCwgdGhlIGtpbmdkb20gc3BsaXQgdXAgaW50byB0d28sIGZvcmVpZ24gdHJpYmVzIGF0dGFja2VkIGFuZCBlc3RhYmxpc2hlZCB0aGVpciAgIGtpbmdkb21zIG9uIEluZGlhbiBzb2lsLiBUaGUgbm90YWJsZSBvbmVzIHdlcmUgdGhlIEluZG8tR3JlZWtzLCB0aGUgU2FrYXMgYW5kIHRoZSBLdXNoYW5hcy4gICAgIE9wdGlvbiA0IGlzIGluY29ycmVjdDogSXQgd2FzIHRoZSBuZWdsZWN0IG9mIE5vcnRoLVdlc3QgZnJvbnRpZXIgYW5kIG5vdCBEZWNjYW4gcmVnaW9uLiBBc2hva2Egd2FzIHNvICAgYnVzeSBpbiBjYXJyeWluZyBvdXIgcmVsaWdpb3VzIGFjdGl2aXRpZXMgdGhhdCBoZSBzZWxkb20gcGFpZCBhdHRlbnRpb24gdG8gbm9ydGgtd2VzdCBmcm9udGllciBvZiBNYXVyeWFuICAgRW1waXJlLiBUaGUgR3JlZWtzIHRvb2sgYWR2YW50YWdlIG9mIHRoaXMgYW5kIHNldCB1cCBhIGtpbmdkb20gaW4gbm9ydGggQWZnaGFuaXN0YW4gd2hpY2ggd2FzIGtub3duICAgYXMgQmFjdHJpYS4gVGhpcyB3YXMgZm9sbG93ZWQgYnkgYSBzZXJpZXMgb2YgZm9yZWlnbiBpbnZhc2lvbiB3aGljaCB3ZWFrZW5lZCB0aGUgZW1waXJlLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmphZ3Jhbmpvc2guY29tL2dlbmVyYWwta25vd2xlZGdlL21hdXJ5YW4tZW1waXJlLWl0cy1kZWNsaW5lLWFuZC0gIHNpZ25pZmljYW5jZS0xNDM3NDU4OTIwLTEgICAgSGlzdG9yeSBIaWdoZXIgU2Vjb25kYXJ5IC0gRmlyc3QgWWVhciBUYW1pbCBOYWR1IEJvYXJkICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "1, 2. 3 and 4   "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following:     The arrival of Babur into India led to the     1.  Introduction of gunpowder in the  subcontinent     2.  Introduction of the arch and dome in the  region's architecture     3.  Establishment of the Timurid dynasty in the  region     Select the correct answer using the code given  below:     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gR3VucG93ZGVyIHRlY2hub2xvZ3kgaXMgYmVsaWV2ZWQgdG8gaGF2ZSBhcnJpdmVkIGluIEluZGlhIGJ5IHRoZSBtaWQtMTR0aCAgIGNlbnR1cnksIGJ1dCBjb3VsZCBoYXZlIGJlZW4gaW50cm9kdWNlZCBtdWNoIGVhcmxpZXIgYnkgdGhlIE1vbmdvbHMsIHdobyBoYWQgY29ucXVlcmVkIGJvdGggQ2hpbmEgICBhbmQgc29tZSBib3JkZXJsYW5kcyBvZiBJbmRpYSwgcGVyaGFwcyBhcyBlYXJseSBhcyB0aGUgbWlkLTEzdGggY2VudHVyeS4gICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBlc3RhYmxpc2htZW50IG9mIERlbGhpIFN1bHRhbmF0ZXMgbGVkIHRvIHRoZSBpbnRyb2R1Y3Rpb24gb2YgTXVzbGltIHN0eWxlIG9mICAgY29uc3RydWN0aW9uIGluIEluZGlhIHdoaWNoIHdhcyBiYXNlZCBvbiBhcmNoZXMsIHZhdWx0cyBhbmQgZG9tZXMsIG9uIGNvbHVtbnMgYW5kIHB5cmFtaWRhbCB0b3dlcnMgb3IgICBzbGVuZGVyIHNwaXJlcywgY2FsbGVkIHRyYWJlYXRlLiAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEJhYnVyIHdhcyB0aGUgZm91bmRlciBvZiB0aGUgTXVnaGFsIEVtcGlyZS4gVGhlIG5hbWUgTXVnaGFsIGRlcml2ZXMgZnJvbSAgIE1vbmdvbC4gVGhleSByZWZlcnJlZCB0byB0aGVtc2VsdmVzIGFzIFRpbXVyaWRzLCBhcyBkZXNjZW5kYW50cyBvZiB0aGUgVHVya2lzaCBydWxlciBUaW11ciBvbiB0aGUgICBwYXRlcm5hbCBzaWRlLiAgIFVQU0MgQ1NFIFByZV8yMDE1ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only     ",
        "option2" : "3 only     ",
        "option3" : "1 and 3 only     ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 26,
      "question" : "Ashoka's Dhamma signifies a general code  of conduct, which of the following are its  prominent features?   1.  Humane treatment of servants by masters  and prisoners by government officials.      2.  Prohibition of animal sacrifices and festive  gatherings.   3.  Tolerance among all the religious sects.   4.  Conquest through Dhamma instead of  through war.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBbHRob3VnaCBBc29rYSBlbWJyYWNlZCBCdWRkaGlzbSBhbmQgdG9vayBlZmZvcnRzIHRvIHNwcmVhZCBCdWRkaGlzbSwgaGlzIHBvbGljeSBvZiBEaGFtbWEgd2FzIGEgICBzdGlsbCBicm9hZCBjb25jZXB0LiBJdCB3YXMgYSB3YXkgb2YgbGlmZSwgYSBjb2RlIG9mIGNvbmR1Y3QgYW5kIGEgc2V0IG9mIHByaW5jaXBsZXMgdG8gYmUgYWRvcHRlZCBhbmQgICBwcmFjdGljZWQgYnkgdGhlIHBlb3BsZSBhdCBsYXJnZS4gQXNva2Egd2lzaGVkIHRoYXQgaGlzIERoYW1tYSBzaG91bGQgc3ByZWFkIHRocm91Z2ggYWxsIHNvY2lhbCBsZXZlbHMuICAgSGlzIHByaW5jaXBsZXMgb2YgRGhhbW1hIHdlcmUgY2xlYXJseSBzdGF0ZWQgaW4gaGlzIEVkaWN0cy4gVGhlIG1haW4gZmVhdHVyZXMgb2YgQXNva2EncyBEaGFtbWEgYXMgICBtZW50aW9uZWQgaW4gaGlzIHZhcmlvdXMgRWRpY3RzIG1heSBiZSBzdW1tZWQgYXMgZm9sbG93czogICAgIDEpIFNlcnZpY2UgdG8gZmF0aGVyIGFuZCBtb3RoZXIsIHByYWN0aWNlIG9mIGFoaW1zYSwgbG92ZSBvZiB0cnV0aCwgcmV2ZXJlbmNlIHRvIHRlYWNoZXJzIGFuZCBnb29kICAgdHJlYXRtZW50IG9mIHJlbGF0aXZlcy4gICAgIDIpIFByb2hpYml0aW9uIG9mIGFuaW1hbCBzYWNyaWZpY2VzIGFuZCBmZXN0aXZlIGdhdGhlcmluZ3MgYW5kIGF2b2lkaW5nIGV4cGVuc2l2ZSBhbmQgbWVhbmluZ2xlc3MgICBjZXJlbW9uaWVzIGFuZCByaXR1YWxzLiAoSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QpICAgIDMpIEVmZmljaWVudCBvcmdhbml6YXRpb24gb2YgYWRtaW5pc3RyYXRpb24gaW4gdGhlIGRpcmVjdGlvbiBvZiBzb2NpYWwgd2VsZmFyZSBhbmQgbWFpbnRlbmFuY2Ugb2YgY29uc3RhbnQgICBjb250YWN0IHdpdGggcGVvcGxlIHRocm91Z2ggdGhlIHN5c3RlbSBvZiBEaGFtbWF5YXRyYXMuICAgICA0KSBIdW1hbmUgdHJlYXRtZW50IG9mIHNlcnZhbnRzIGJ5IG1hc3RlcnMgYW5kIHByaXNvbmVycyBieSBnb3Zlcm5tZW50IG9mZmljaWFscy4gKEhlbmNlLCBzdGF0ZW1lbnQgMSAgIGlzIGluY29ycmVjdCkgICAgNSkgQ29uc2lkZXJhdGlvbiBhbmQgbm9uLXZpb2xlbmNlIHRvIGFuaW1hbHMgYW5kIGNvdXJ0ZXN5IHRvIHJlbGF0aW9ucyBhbmQgbGliZXJhbGl0eSB0byBCcmFobWlucy4gICAgNikgVG9sZXJhbmNlIGFtb25nIGFsbCB0aGUgcmVsaWdpb3VzIHNlY3RzLiAoSGVuY2UsIHN0YXRlbWVudCAzIGlzIGNvcnJlY3QpICAgICAgb2YgMjIgICAgICAgICAgIDcpIENvbnF1ZXN0IHRocm91Z2ggRGhhbW1hIGluc3RlYWQgb2YgdGhyb3VnaCB3YXIuIChIZW5jZSwgc3RhdGVtZW50IDQgaXMgY29ycmVjdCkgICAgS25vd2xlZGdlIEJhc2U6IFRoZSBjb25jZXB0IG9mIG5vbi12aW9sZW5jZSBhbmQgb3RoZXIgc2ltaWxhciBpZGVhcyBvZiBBc29rYSdzIERoYW1tYSBhcmUgaWRlbnRpY2FsICAgd2l0aCB0aGUgdGVhY2hpbmdzIG9mIEJ1ZGRoYS4gQnV0IGhlIGRpZCBub3QgZXF1YXRlIERoYW1tYSB3aXRoIEJ1ZGRoaXN0IHRlYWNoaW5ncy4gQnVkZGhpc20gICByZW1haW5lZCBoaXMgcGVyc29uYWwgYmVsaWVmLiBIaXMgRGhhbW1hIHNpZ25pZmllcyBhIGdlbmVyYWwgY29kZSBvZiBjb25kdWN0LiAgICAgU291cmNlOiAgSGlzdG9yeSBIaWdoZXIgU2Vjb25kYXJ5IC0gRmlyc3QgWWVhciBUYW1pbCBOYWR1IEJvYXJkICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "1, 2, 3 and 4 only           "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to Ancient India, which of  the following events occurred during the reign  of Chandragupta II, the great Gupta king?   1.  He crossed the river Sindh and conquered  Bactria.   2.  He undertook a military campaign in  western India against the Sakas.    3.  The famous Chinese pilgrim, Fa- Hien  visited India during his reign.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcG93ZXIgYW5kIGdsb3J5IG9mIEd1cHRhIGVtcGlyZSByZWFjaGVkIGl0cyBwZWFrIHVuZGVyIHRoZSBydWxlIENoYW5kcmFndXB0YSBJSSBWaWtyYW1hZGl0eWEuICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBDaGFuZHJhZ3VwdGEgSUkgZGVmZWF0ZWQgYSBjb25mZWRlcmFjeSBvZiBlbmVteSBjaGllZnMgaW4gVmFuZ2EuIEhlIGFsc28gICBjcm9zc2VkIHRoZSByaXZlciBTaW5kaCBhbmQgY29ucXVlcmVkIEJhY3RyaWEuIFRoZSBLdXNoYW5hcyBydWxpbmcgaW4gdGhpcyByZWdpb24gd2VyZSBzdWJkdWVkIGJ5IGhpbS4gICBXaXRoIHRoZXNlIGNvbnF1ZXN0cywgdGhlIEd1cHRhIGVtcGlyZSBleHRlbmRlZCBpbiB0aGUgd2VzdCBhcyBmYXIgYXMgd2VzdGVybiBNYWx3YSwgR3VqYXJhdCBhbmQgICBLYXRoaWF3YXIuIEluIHRoZSBub3J0aHdlc3QgaXQgZXh0ZW5kZWQgYmV5b25kIHRoZSBIaW5kdWt1c2ggdXAgdG8gQmFjdHJpYS4gSW4gdGhlIGVhc3QsIGl0IGluY2x1ZGVkIGV2ZW4gICBlYXN0ZXJuIEJlbmdhbCBhbmQgaW4gdGhlIHNvdXRoIHRoZSBOYXJtYWRhIHJpdmVyIGZvcm1lZCB0aGUgYm91bmRhcnkuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZ3JlYXRlc3Qgb2YgdGhlIG1pbGl0YXJ5IGFjaGlldmVtZW50cyBvZiBDaGFuZHJhZ3VwdGEgSUkgd2FzIGhpcyB3YXIgYWdhaW5zdCAgIHRoZSBTYWthIHNhdHJhcHMgb2Ygd2VzdGVybiBJbmRpYS4gUnVkcmFzaW1oYSBJSUksIHRoZSBsYXN0IHJ1bGVyIG9mIHRoZSBTYWthIHNhdHJhcCB3YXMgZGVmZWF0ZWQsICAgZGV0aHJvbmVkIGFuZCBraWxsZWQuIEhpcyB0ZXJyaXRvcmllcyBpbiB3ZXN0ZXJuIE1hbHdhIGFuZCB0aGUgS2F0aGlhd2FyIFBlbmluc3VsYSB3ZXJlIGFubmV4ZWQgaW50byAgIHRoZSBHdXB0YSBFbXBpcmUuIEFmdGVyIHRoaXMgdmljdG9yeSBoZSBwZXJmb3JtZWQgdGhlIGhvcnNlIHNhY3JpZmljZSBhbmQgYXNzdW1lZCB0aGUgdGl0bGUgU2FrYXJpLCAgIG1lYW5pbmcsICdkZXN0cm95ZXIgb2YgU2FrYXMnLiBIZSBhbHNvIGNhbGxlZCBoaW1zZWxmIFZpa3JhbWFkaXR5YSAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIGZhbW91cyBDaGluZXNlIHBpbGdyaW0sIEZhaGllbiB2aXNpdGVkIEluZGlhIGR1cmluZyB0aGUgcmVpZ24gb2YgICBDaGFuZHJhZ3VwdGEgSUkuIE91dCBvZiBoaXMgbmluZSB5ZWFycyBzdGF5IGluIEluZGlhLCBoZSBzcGVudCBzaXggeWVhcnMgaW4gdGhlIEd1cHRhIGVtcGlyZS4gSGUgY2FtZSB0byAgIEluZGlhIGJ5IHRoZSBsYW5kIHJvdXRlIHRocm91Z2ggS2hvdGFuLCBLYXNoZ2FyLCBHYW5kaGFyYSBhbmQgUHVuamFiLiBIZSB2aXNpdGVkIFBlc2hhd2FyLCBNYXRodXJhLCAgIEthbmF1aiwgU3JhdmFzdGksIEthcGlsYXZhc3R1LCBLdXNpbmFnYXJhLCBQYXRhbGlwdXRyYSwgS2FzaSBhbmQgQm9kaCBHYXlhIGFtb25nIG90aGVyIHBsYWNlcy4gSGUgICByZXR1cm5lZCBieSB0aGUgc2VhIHJvdXRlLCB2aXNpdGluZyBvbiB0aGUgd2F5IENleWxvbiBhbmQgSmF2YS4gVGhlIG1haW4gcHVycG9zZSBvZiBoaXMgdmlzaXQgd2FzIHRvIHNlZSAgIHRoZSBsYW5kIG9mIHRoZSBCdWRkaGEgYW5kIHRvIGNvbGxlY3QgQnVkZGhpc3QgbWFudXNjcmlwdHMgZnJvbSBJbmRpYS4gICAgIEtub3dsZWRnZSBCYXNlOiAgICAgQ2hhbmRyYWd1cHRhIElJIGFjaGlldmVkIHRoaXMgYnkgYSBqdWRpY2lvdXMgY29tYmluYXRpb24gb2YgdGhlIHBvbGljeSBvZiBkaXBsb21hY3kgYW5kIHdhcmZhcmUuICAgVGhyb3VnaCBtYXRyaW1vbmlhbCBhbGxpYW5jZXMgaGUgc3RyZW5ndGhlbmVkIGhpcyBwb2xpdGljYWwgcG93ZXIuIEhlIG1hcnJpZWQgS3ViZXJhbmFnYSwgYSBOYWdhICAgcHJpbmNlc3Mgb2YgY2VudHJhbCBJbmRpYS4gSGUgZ2F2ZSBoaXMgZGF1Z2h0ZXIgUHJhYmhhdmF0aSBpbiBtYXJyaWFnZSB0byB0aGUgVmFrYXRha2EgcHJpbmNlIFJ1ZHJhc2VuYSAgIElJLiBUaGUgcG9saXRpY2FsIGltcG9ydGFuY2Ugb2YgdGhpcyBtYXJyaWFnZSBsaWVzIGluIHRoZSBmYWN0IHRoYXQgdGhlIFZha2F0YWthcyBvY2N1cGllZCBhIGdlb2dyYXBoaWNhbGx5ICAgc3RyYXRlZ2ljIHBvc2l0aW9uIGluIHRoZSBEZWNjYW4uIFRoaXMgYWxsaWFuY2Ugc2VydmVkIGEgdXNlZnVsIHB1cnBvc2Ugd2hlbiBDaGFuZHJhZ3VwdGEtSUkgdW5kZXJ0b29rICAgaGlzIGNhbXBhaWduIGluIHdlc3Rlcm4gSW5kaWEgYWdhaW5zdCB0aGUgU2FrYXMuICAgICBDaGFuZHJhZ3VwdGEgSUkgYWxzbyBjb250cmlidXRlZCB0byB0aGUgZ2VuZXJhbCBjdWx0dXJhbCBwcm9ncmVzcyBvZiB0aGUgYWdlIGFuZCBwYXRyb25pemVkIGdyZWF0IGxpdGVyYXJ5ICAgZmlndXJlcyBsaWtlIEthbGlkYXNhLiBIZSBwcm9tb3RlZCBhcnRpc3RpYyBhY3Rpdml0eS4gQmVjYXVzZSBvZiB0aGUgaGlnaCBsZXZlbCBvZiBjdWx0dXJhbCBwcm9ncmVzcyB0aGF0IHdhcyAgIGFjaGlldmVkIGR1cmluZyB0aGlzIHBlcmlvZCwgdGhlIEd1cHRhIHBlcmlvZCBpcyBnZW5lcmFsbHkgcmVmZXJyZWQgdG8gYXMgYSBnb2xkZW4gYWdlLiAgICBTb3VyY2U6ICBIaXN0b3J5IEhpZ2hlciBTZWNvbmRhcnkgLSBGaXJzdCBZZWFyIFRhbWlsIE5hZHUgQm9hcmQgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following statements is/are  correct with reference to the Land Revenue  System of the Mughal Empire?   1.  The responsibility of revenue collection was  fulfilled by Amil-guzar.  2. Jama was the amount collected whereas  Hasil was the amount assessed.  3.  Revenue could not be paid in kind, and was  to be paid only in cash.   4.  Land measurement was completely ignored  during this period.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IER1cmluZyB0aGUgTXVnaGFsIHBlcmlvZCwgdGhlIG9mZmljZSAoZGFmdGFyKSBvZiB0aGUgZGl3YW4gd2FzIHJlc3BvbnNpYmxlIGZvciAgIHN1cGVydmlzaW5nIHRoZSBmaXNjYWwgc3lzdGVtIG9mIHRoZSBlbXBpcmUuIEFtaWwtZ3V6YXIgYWN0ZWQgYXMgdGhlIHJldmVudWUgY29sbGVjdG9yLiBXaGlsZSBmaXhpbmcgICByZXZlbnVlLCB0aGUgYXR0ZW1wdCBvZiB0aGUgc3RhdGUgd2FzIHRvIG1heGltaXNlIGl0cyBjbGFpbXMuICAgIE9wdGlvbiAyIGlzIGluY29ycmVjdDogVGhlIGxhbmQgcmV2ZW51ZSBhcnJhbmdlbWVudHMgY29uc2lzdGVkIG9mIHR3byBzdGFnZXMgLSBmaXJzdCwgYXNzZXNzbWVudCBhbmQgICB0aGVuIGFjdHVhbCBjb2xsZWN0aW9uLiBUaGUgamFtYSB3YXMgdGhlIGFtb3VudCBhc3Nlc3NlZCwgd2hlcmVhcyBoYXNpbCB3YXMgdGhlIGFtb3VudCBjb2xsZWN0ZWQuICAgICAgb2YgMjIgIC4gICAgICAgICAgIE9wdGlvbiAzIGlzIGluY29ycmVjdDogSW5zdHJ1Y3Rpb25zIHdlcmUgZ2l2ZW4gdG8gdGhlIFJldmVudWUgb2ZmaWNlcnMgdGhhdCBoZSBzaG91bGQgc3RyaXZlIHRvIG1ha2UgICBjdWx0aXZhdG9ycyBwYXkgaW4gY2FzaCBidXQgdGhlIG9wdGlvbiBvZiBwYXltZW50IGluIGtpbmQgc2hvdWxkIGFsc28gYmUga2VwdCBvcGVuLiAgICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0OiBUaGUgTXVnaGFsIHN0YXRlIHRyaWVkIHRvIGZpcnN0IGFjcXVpcmUgc3BlY2lmaWMgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGV4dGVudCBvZiB0aGUgICBhZ3JpY3VsdHVyYWwgbGFuZHMgaW4gdGhlIGVtcGlyZSBhbmQgd2hhdCB0aGVzZSBsYW5kcyBwcm9kdWNlZCBiZWZvcmUgZml4aW5nIHRoZSBidXJkZW4gb2YgdGF4ZXMgb24gICBwZW9wbGUuIEJvdGggY3VsdGl2YXRlZCBhbmQgY3VsdGl2YWJsZSBsYW5kcyB3ZXJlIG1lYXN1cmVkIGluIGVhY2ggcHJvdmluY2UuICAgICBLbm93bGVkZ2UgQmFzZTogICAgIFVuZGVyIFphYmF0aSBzeXN0ZW0sIHRoZSBsYW5kIHdhcyBjbGFzc2lmaWVkIGluIGZvdXIgdHlwZXMgLSAgICAgMSkgUG9sYWogaXMgbGFuZCB3aGljaCBpcyBhbm51YWxseSBjdWx0aXZhdGVkIGZvciBlYWNoIGNyb3AgaW4gc3VjY2Vzc2lvbiBhbmQgaXMgbmV2ZXIgYWxsb3dlZCB0byBsaWUgZmFsbG93LiAgICAyKSBQYXJhdXRpIGlzIGxhbmQgbGVmdCBvdXQgb2YgY3VsdGl2YXRpb24gZm9yIGEgdGltZSB0aGF0IGl0IG1heSByZWNvdmVyIGl0cyBzdHJlbmd0aC4gICAgMykgQ2hhY2hhciBpcyBsYW5kIHRoYXQgaGFzIGxhaW4gZmFsbG93IGZvciB0aHJlZSBvciBmb3VyIHllYXJzICAgIDQpIEJhbmphciBpcyBsYW5kIHVuY3VsdGl2YXRlZCBmb3IgZml2ZSB5ZWFycyBhbmQgbW9yZSAgICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBQYXJ0IElJICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "2 and 4 only   "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following statements  characterize the people of Harappan  civilization?  1.  They made huge temples to worship gods.  2.  Boat-making was not practiced by  Harappans.    Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogTm8gYnVpbGRpbmcgaGFzIGJlZW4gZGlzY292ZXJlZCBhdCBhbnkgSGFyYXBwYW4gc2l0ZSB0aGF0IGNhbiBiZSBwb3NpdGl2ZWx5ICAgaWRlbnRpZmllZCBhcyBhIHRlbXBsZS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJvYXQtbWFraW5nIHdhcyBhbiBpbXBvcnRhbnQgYWN0aXZpdHkgcHJhY3RpY2VkIGJ5IEhhcmFwcGFucy4gVGhleSBidWlsdCAgIGJvYXRzIHRvIGNhcnJ5IHRoZWlyIHByb2R1Y2UgdG8gZmFyLW9mZiByZWdpb25zLCBhY3Jvc3MgdGhlIEFyYWJpYW4gc2VhLiBJbiBmYWN0LCAnTWVsdWhhJywgdGhlIHRlcm0gZ2l2ZW4gdG8gICB0aGUgcGVvcGxlIG9mIHRoZSBJVkMsIG1lYW5zICd0aGUgbGFuZCBvZiBzZWEtZmFyZXJzJy4gICAgU291cmNlOiBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgSSwgTkNFUlQgWElJLCBDaGFwdGVyLTEsIFBnLiA5LTExICAgIEFuY2llbnQgSGlzdG9yeSwgTkNFUlQgWEksIENoYXB0ZXItNiwgUGcuIDM5ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2        "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements:        1.  In the revenue administration of Delhi  Sultanate, the in-charge of revenue  collection was known as 'Amil'.     2.  The Iqta system of Sultans of Delhi was an  ancient indigenous institution.     3.  The office of 'Mir Bakshi' came into  existence during the reign of Khalji Sultans  of Delhi.     Which of the statements given above is/are  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEluIHRoZSByZXZlbnVlIGFkbWluaXN0cmF0aW9uIG9mIERlbGhpIFN1bHRhbmF0ZSwgdGhlIGluLWNoYXJnZSBvZiByZXZlbnVlICAgY29sbGVjdGlvbiB3YXMga25vd24gYXMgJ0FtaWwnLiAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSXF0YSBzeXN0ZW0gd2FzIG5vdCBhbiBhbmNpZW50IGluZGlnZW5vdXMgSW5kaWFuIGluc3RpdHV0aW9uLiBJbiBJbmRpYSwgaXQgd2FzICAgc3RhcnRlZCBkdXJpbmcgdGhlIHJ1bGUgb2YgRGVsaGkgc3VsdGFuYXRlcyBpdHNlbGYuIFVuZGVyIElxdGEgU3lzdGVtLCB0aGUgbGFuZCBvZiB0aGUgZW1waXJlIHdhcyAgIGRpdmlkZWQgaW50byBzZXZlcmFsIGxhcmdlIGFuZCBzbWFsbCB0cmFjdHMgY2FsbGVkIElxdGEgYW5kIGFzc2lnbmVkIHRoZXNlIElxdGFzIHRvIGhpcyBzb2xkaWVycywgb2ZmaWNlcnMgICBhbmQgbm9ibGVzLiAgICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gTWlyIEJha3NoaSB3YXMgSGVhZCBvZiB0aGUgbWlsaXRhcnkgZGVwYXJ0bWVudC4gVGhlIG9mZmljZSBvZiAnTWlyIEJha3NoaScgICBjYW1lIGludG8gZXhpc3RlbmNlIGR1cmluZyB0aGUgcmVpZ24gb2YgTXVnaGFscy4gICAgVVBTQyBDU0UgUHJlXzIwMTkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "1 and 2 only     ",
        "option3" : "3 only     ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements    1.  Alauddin Khilji dropped the name of the  Khalifa from his coins.    2.  Alauddin Khilji mandated that landlords of  an area should pay the same taxes as others.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBbGF1ZGRpbiBLaGlsamkgd2FzIHRoZSBzZWNvbmQgc3VsdGFuIG9mIHRoZSBLaGFsamkgZHluYXN0eSBvZiBEZWxoaSBpbiBJbmRpYS4gSGUgd2FzIGFwcG9pbnRlZCBnb3Zlcm5vciBvZiAgIEthcmEgYnkgaGlzIHVuY2xlIGFuZCBmYXRoZXItaW4tbGF3LCBTdWx0YW4gSmFsYWwtdWQtZGluIEtoYWxqaSwgaW4gMTI5Mi4gSGUgYXNzYXNzaW5hdGVkIGhpcyBmYXRoZXItaW4tbGF3ICAgYW5kIHByb2NsYWltZWQgaGltc2VsZiB0aGUgc3VsdGFuIG9mIERlbGhpIGluIDEyOTYuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBLaGlsamkgc3VsdGFuIEFsYXVkZGluIGRpc2NhcmRlZCB0aGUgbmFtZSBvZiBBYmJhc2lkIENhbGlwaCBmcm9tIGhpcyBjb2lucyAgIGFuZCBjYWxsZWQgaGltc2VsZiByaWdodCBoYW5kIG9mIENhbGlwaC4gSGUgYWxzbyBhZG9wdGVkIHRoZSB0aXRsZSBvZiBTZWNvbmQgQWxleGFuZGVyLiAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFsYXVkZGluIHdhcyB0aGUgZmlyc3QgbW9uYXJjaCBpbiB0aGUgU3VsdGFuYXRlIHdobyBpbnNpc3RlZCB0aGF0IGluIHRoZSBkb2FiLCAgIGxhbmQgcmV2ZW51ZSB3b3VsZCBiZSBhc3Nlc3NlZCBvbiB0aGUgYmFzaXMgb2YgbWVhc3VyaW5nIHRoZSBsYW5kIHVuZGVyIGN1bHRpdmF0aW9uLiBUaGlzIGltcGxpZWQgdGhhdCAgICAgb2YgMjIgIC4gICAgICAgICAgIHRoZSByaWNoIGFuZCB0aGUgcG93ZXJmdWwgaW4gdGhlIHZpbGxhZ2VzIHdobyBoYWQgbW9yZSBsYW5kIGNvdWxkIG5vdCBwYXNzIG9uIHRoZWlyIGJ1cmRlbiB0byB0aGUgcG9vci4gICBBbGF1ZGRpbiB3YW50ZWQgdGhhdCB0aGUgbGFuZGxvcmRzIG9mIHRoZSBhcmVhLWNhbGxlZCBraHV0cyBhbmQgbXVxYWRkYW1zLCBzaG91bGQgcGF5IHRoZSBzYW1lIHRheGVzICAgYXMgdGhlIG90aGVycy4gVGh1cywgdGhleSBoYWQgdG8gcGF5IHRheGVzIG9uIG1pbGNoIGNhdHRsZSBhbmQgaG91c2VzIGxpa2UgdGhlIG90aGVycywgYW5kIGZvcmdvIG90aGVyICAgaWxsZWdhbCBjZXNzZXMgd2hpY2ggdGhleSB3ZXJlIGluIHRoZSBoYWJpdCBvZiByZWFsaXppbmcuICAgICAgS25vd2xlZGdlIEJhc2U6ICAgICBEb2FiIHJlZ2lvbiBpcyB0aGUgYXJlYSBleHRlbmRpbmcgZnJvbSBNZWVydXQgbmVhciB0aGUgWWFtdW5hIHRvIHRoZSBib3JkZXIgb2YgS2FyYSBuZWFyIEFsbGFoYWJhZC4gICAgU291cmNlOiBNZWRpZXZhbCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci03LCBUaGUgRGVsaGkgU3VsdGFuYXRlLUlJIChDaXJjYSAxMjAwLTE0MDApICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to the jagirdari and  mansabdari system during Mughal period,  consider the following statements:   1.  Under the mansabdari system, the salary  was paid only by cash while under the  jagirdari system, salary was paid only by  assignment of jagir.   2.  While the mansabdari system fixed the  status of officer in official hierarchy, the  jagirdari system did not grant any  permanent position to officials.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBNYW5zYWJkYXJpIHdhcyBhIHVuaXF1ZSBzeXN0ZW0gZm9ybWFsbHkgaW50cm9kdWNlZCBieSBtdWdoYWwgZW1wZXJvciBBa2JhciBpbiAxNTcxQUQuICBNYW5zYWJkYXIgICBtZWFucyB0aGUgaG9sZGVyIG9mIGEgcmFuaywgb3IgYW4gb2ZmaWNlci4gICAgVGhlIHN5c3RlbSBvZiBhc3NpZ25tZW50IG9mIHJldmVudWUgb2YgYSBwYXJ0aWN1bGFyIHRlcnJpdG9yeSB0byB0aGUgbm9ibGVzIGZvciB0aGVpciBzZXJ2aWNlcyB0byB0aGUgc3RhdGUgICBjb250aW51ZWQgdW5kZXIgdGhlIE11Z2hhbHMgYWxzby4gVW5kZXIgdGhlIE11Z2hhbHMsIHRoZSBhcmVhcyBhc3NpZ25lZCB3ZXJlIGdlbmVyYWxseSBjYWxsZWQgSmFnaXIgYW5kICAgaXRzIGhvbGRlcnMgSmFnaXJkYXJzLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFNhbGFyeSBlbnRpdGxlbWVudHMgb2YgbWFuc2FiZGFycyB3ZXJlIGNhbGN1bGF0ZWQgb24gdGhlIGJhc2lzIG9mIHRoZWlyIFphdCBhbmQgICBTYXdhciByYW5rcy4gVGhlIHNhbGFyeSB3YXMgcGFpZCBlaXRoZXIgaW4gY2FzaCAoaW4gdGhhdCBjYXNlIHRoZXkgd2VyZSBjYWxsZWQgTmFxZGkpIG9yIHRocm91Z2ggdGhlICAgYXNzaWdubWVudCBvZiBhIEphZ2lyLCB0aGUgbGF0dGVyIGJlaW5nIHRoZSBwcmVmZXJhYmxlIG1vZGUuIFVuZGVyIHRoZSBqYWdpcmRhcmkgc3lzdGVtIG9mIHRoZSBNdWdoYWxzLCAgIHRoZSBhcmVhcyBhc3NpZ25lZCB3ZXJlIGdlbmVyYWxseSBjYWxsZWQgSmFnaXIgYW5kIGl0cyBob2xkZXJzIEphZ2lyZGFycy4gVGhlIEphZ2lyZGFyaSBzeXN0ZW0gd2FzIGFuICAgaW50ZWdyYWwgcGFydCBvZiB0aGUgbWFuc2FiZGFyaSBzeXN0ZW0gd2hpY2ggZGV2ZWxvcGVkIHVuZGVyIEFrYmFyLiBEdXJpbmcgQWtiYXIncyBwZXJpb2QgYWxsIHRoZSAgIHRlcnJpdG9yeSB3YXMgYnJvYWRseSBkaXZpZGVkIGludG8gdHdvOiBLaGFsaXNhIGFuZCBKYWdpci4gVGhlIHJldmVudWUgZnJvbSB0aGUgZmlyc3Qgd2VudCB0byBpbXBlcmlhbCAgIHRyZWFzdXJ5LCBhbmQgdGhhdCBmcm9tIEphZ2lyIHdhcyBhc3NpZ25lZCB0byBKYWdpcmRhcnMgaW4gbGlldSBvZiB0aGVpciBjYXNoIHNhbGFyeS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIG1hbnNhYiBhd2FyZGVkIHRvIGFuIGluZGl2aWR1YWwgZml4ZWQgYm90aCBoaXMgc3RhdHVzIGluIHRoZSBvZmZpY2lhbCAgIGhpZXJhcmNoeSBhbmQgYWxzbyBoaXMgc2FsYXJ5LiBJdCBhbHNvIGZpeGVkIHRoZSBudW1iZXIgb2YgYXJtZWQgcmV0YWluZXJzIHRoZSBob2xkZXJzIG9mIG1hbnNhYiB3YXMgdG8gICBtYWludGFpbi4gVGhlIHN5c3RlbSB3YXMgZm9ybXVsYXRlZCB0byBzdHJlYW1saW5lIHJhbmsgb2YgdGhlIG5vYmxlcywgZml4IHRoZWlyIHNhbGFyeSBhbmQgc3BlY2lmeSB0aGUgICBudW1iZXIgb2YgY2F2YWxyaWVzIHRvIGJlIG1haW50YWluZWQgYnkgdGhlbS4gICAgSG93ZXZlciwgbm9uZSBvZiB0aGUgYXNzaWdubWVudHMgd2FzIHBlcm1hbmVudCBvciBoZXJlZGl0YXJ5IGluIGphZ2lyZGFyaSBzeXN0ZW0uIFRoZSBFbXBlcm9yICAgY291bGQgc2hpZnQgcGFydCBvciB0aGUgZW50aXJlIEphZ2lyIGZyb20gb25lIHBhcnQgb2YgdGhlIGltcGVyaWFsIHRlcnJpdG9yeSB0byBhbm90aGVyIGF0IGFueSB0aW1lLiBUaGUgICByYXRpbyBiZXR3ZWVuIEphZ2lyIGFuZCBLaGFsaXNhIGtlcHQgZmx1Y3R1YXRpbmcgZHVyaW5nIHRoZSBNdWdoYWwgcnVsZS4gRHVyaW5nIEFrYmFyJ3MgcGVyaW9kIEtoYWxpc2EgICB3YXMgb25seSA1JSBvZiB0b3RhbCByZXZlbnVlLCB1bmRlciBKYWhhbmdpciBpdCB3YXMgMTAlLCB1bmRlciBTaGFoamFoYW4gaXQgZmx1Y3R1YXRlZCBiZXR3ZWVuIDkgdG8gICAxNSUuICAgICBTb3VyY2U6ICAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TclNlYzMxNU5FVy8zMTVfSGlzdG9yeV9FbmcvMzE1X0hpc3RvcnlfRW5nX0xlc3NvbjEyLnBkICBmICAgIChQZy4gMjAwLTIwMSkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2       .         "
      }
    },
    {
      "index" : 33,
      "question" : "Which of the following were the factors  responsible for the downfall of the Mughal  Empire?   1.  No clear law of succession among Muslim  rulers   2.  Increase in the number of Mansabdars   3.  High cost of maintaining the Mughal armies  in the Deccan   4.  Demoralization of the Mughal Army   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBdXJhbmd6ZWIncyBkZWF0aCBpbiAxNzA3QS5EIG1hcmtlZCB0aGUgZGVjbGluZSBvZiBNdWdoYWwgZW1waXJlIGluIEluZGlhLiBXaGVuIEF1cmFuZ3plYiBkaWVkLCB0aGUgICBlbXBpcmUgb2YgdGhlIE11Z2hhbHMgd2FzIHRoZSBsYXJnZXN0IGluIEluZGlhLiBXaXRoaW4gYWJvdXQgZmlmdHkgeWVhcnMgb2YgaGlzIGRlYXRoLCB0aGUgTXVnaGFsIEVtcGlyZSAgIGRpc2ludGVncmF0ZWQuIFRoZSBzaWduIG9mIGRlZ2VuZXJhdGlvbiB3YXMgdmlzaWJsZSBpbiB0aGUgaW5zdGl0dXRpb25zIGFuZCBzeXN0ZW1zIGludHJpbnNpYyB0byBpdHMgY3VsdHVyYWwgICBjaGFyYWN0ZXIgYW5kIGFkbWluaXN0cmF0aXZlIHBvbGljaWVzLiAgICBPcHRpb24gMSBpcyBjb3JyZWN0OiBUaGVyZSB3YXMgbm8gY2xlYXIgdHJhZGl0aW9uIG9mIHN1Y2Nlc3Npb24gYW1vbmcgdGhlIE11c2xpbXMgb3IgdGhlIFRpbXVyaWRzLiBUaGUgICByaWdodCBvZiBub21pbmF0aW9uIGJ5IHRoZSBydWxlciBoYWQgYmVlbiBhY2NlcHRlZCBieSBzb21lIG9mIHRoZSBNdXNsaW0gcG9saXRpY2FsIHRoaW5rZXJzLiBCdXQgaXQgY291bGQgICBub3QgYmUgYXNzZXJ0ZWQgaW4gSW5kaWEgZHVyaW5nIHRoZSBTdWx0YW5hdGUgcGVyaW9kLiBUaGUgVGltdXJpZCB0cmFkaXRpb24gb2YgcGFydGl0aW9uaW5nIGhhZCBub3QgYmVlbiAgICAgb2YgMjIgIC4gICAgICAgIHN1Y2Nlc3NmdWwgZWl0aGVyIGFuZCB3YXMgbmV2ZXIgYXBwbGllZCBpbiBJbmRpYS4gVGhlIGxhc3QgeWVhcnMgb2YgU2hhaCBKYWhhbidzIHJlaWduIHdlcmUgY2xvdWRlZCBieSBhICAgYml0dGVyIHdhciBvZiBzdWNjZXNzaW9uIGFtb25nIGhpcyBzb25zLiAgICBPcHRpb24gMiBpcyBjb3JyZWN0OiBUaGUgTWFuc2FiZGFyaSBzeXN0ZW0gd2FzIGEgZ3JhZGluZyBzeXN0ZW0gdXNlZCBieSB0aGUgTXVnaGFsIHJ1bGVycyB0byBmaXggdGhlICAgcmFuayBhbmQgc2FsYXJ5IG9mIGEgTWFuc2FiZGFyLkFmdGVyIEFrYmFyJ3MgZGVhdGgsIHRoZSBudW1iZXIgb2YgbWFuc2FiZGFycyBncmV3IGJ1dCBub3QgZW5vdWdoICAgamFnaXJzIHdlcmUgYXZhaWxhYmxlLiBUaGlzIHJlc3VsdGVkIGluIHRoZSBpbmZlc3RhdGlvbiBvZiBjb3JydXB0aW9uIGluIHRoZSBzeXN0ZW0uIFRoZSBtYW5zYWJkYXJzIG9mdGVuICAgZGlkIG5vdCBtYWludGFpbiB0aGUgcmVxdWlyZWQgbnVtYmVyIG9mIHNvbGRpZXJzIHdoaWNoIGZ1cnRoZXIgd2Vha2VuZWQgdGhlIE11Z2hhbCBhcm15LiAgICBUaGUgaW5jcmVhc2Ugb2YgdGhlIG51bWJlciBvZiBNYW5zYWJkYXJzIGR1cmluZyB0aGUgcmVpZ24gb2YgQXVyYW5nemViIGxlZCB0byB0aGUgSmFnaXJkYXJpIGFuZCAgIGFncmFyaWFuIGNyaXNpcyB3aGljaCBsZWQgdG8gdGhlIGNvbGxhcHNlIG9mIHRoZSBNYW5zYWJkYXJpIHN5c3RlbS4gICAgT3B0aW9uIDMgaXMgY29ycmVjdDogVGhlIGNvc3Qgb2YgbWFpbnRhaW5pbmcgdGhlIE11Z2hhbCBhcm1pZXMgaW4gdGhlIERlY2NhbiB3YXMgaGlnaCwgYW5kIHRoZSBpbmNvbWUgICBmcm9tIHRoZSBEZWNjYW5pIGFyZWFzIHVuZGVyIHRoZSBjb250cm9sIG9mIHRoZSBNdWdoYWxzIHdhcyBpbnN1ZmZpY2llbnQgdG8gbWVldCBpdC4gICAgICBPcHRpb24gNCBpcyBjb3JyZWN0OiBUaGUgZGVtb3JhbGl6YXRpb24gb2YgdGhlIE11Z2hhbCBBcm15IHdhcyBhbm90aGVyIG1ham9yIHJlYXNvbiBmb3IgdGhlIGRlY2xpbmUgb2YgICB0aGUgTXVnaGFsIEVtcGlyZS4gSXQgY29uc2lzdGVkIGNoaWVmbHkgb2YgY29udGluZ2VudHMgcmVjcnVpdGVkIGFuZCBtYWludGFpbmVkIGJ5IHRoZSBoaWdoIG9mZmljZXMgYW5kICAgbm9ibGVzIHdobyB3ZXJlIGFzc2lnbmVkIHJldmVudWVzIG9mIGxhcmdlIHRyYWN0IG9mIHRoZSBjb3VudHJ5IGZvciB0aGVpciBtYWludGVuYW5jZS4gT24gYWNjb3VudCBvZiAgIHRoaXMgdGhlIGluZGl2aWR1YWwgc29sZGllciBsb29rZWQgdXBvbiBoaXMgbWFuc2FiZGFyIGFzIGhpcyBjaGllZiBhbmQgbm90IGFzIGhpcyBvZmZpY2VyLiAgICAgVGhlcmUgd2FzIG5vIHRvdWNoIGJldHdlZW4gdGhlIGVtcGVyb3IgYW5kIHRoZSBpbmRpdmlkdWFsIHNvbGRpZXJzIHdobyB3ZXJlIHBhaWQgYnkgdGhlaXIsIGNvbW1hbmRlciAgIG9yIG1hbnNhYmRhci4gICAgVGhlIE1pciBCYWtzaGkgY291bGQgbm90IGVuZm9yY2UgcHJvcGVyIGRpc2NpcGxpbmUgaW4gdGhlIGFybXkgd2hpY2ggd2FzIHJlZHVjZWQgdG8gYSB3ZWxsLWFybWVkIG1vYi4gICBNaWxpdGFyeSBjcmltZXMgd2VyZSBvdmVybG9va2VkIGV2ZW4gYnkgQXVyYW5nemViIGFuZCBubyByZWd1bGFyIHB1bmlzaG1lbnRzIHdlcmUgaW5mbGljdGVkIGZvciAgIGRlcmVsaWN0aW9uIG9mIGR1dHkgICAgU291cmNlOiBNZWRpZXZhbCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0xOCwgQ2xpbWF4IGFuZCBEaXNpbnRlZ3JhdGlvbiBvZiBNdWdoYWwgRW1waXJlLUkgJiBJSSAgICBodHRwczovL2RpZ2l0YWwubmlvcy5hYy5pbi9jb250ZW50LzM3NWVuLzgucGRmIChQZy4gNTQpICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements with  respect to the socio-economic conditions  during the Vijayanagar Empire:   1.  The village self-government tradition of  Cholas was strongly adhered during this  period.   2.  The earlier tradition of granting territories  to military chiefs were banned to increase  central control.   3.  Both property tax and tax on sale of produce  were laid on the people.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgVmlqYXlhbmFnYXIgRW1waXJlIHdhcyBhbiBlbXBpcmUgYmFzZWQgaW4gdGhlIERlY2NhbiBwbGF0ZWF1IHJlZ2lvbiBvZiBTb3V0aCBJbmRpYS4gSXQgd2FzICAgZXN0YWJsaXNoZWQgaW4gMTMzNiBieSBIYXJpaGFyYSBJICh3aG8gcnVsZWQgZnJvbSAxMzM2LTEzNTYgQ0UpLiBJdCBlbmpveWVkIGl0cyBncmVhdGVzdCBwb2xpdGljYWwgYW5kICAgY3VsdHVyYWwgcHJvbWluZW5jZSB1bmRlciBFbXBlcm9yIEtyaXNobmEgRGV2YSBSYXlhICh3aG8gcnVsZWQgZnJvbSAxNTA5LTE1MjkgQ0UpLiAgICBUaGUgZW1waXJlIGxhc3RlZCB1bnRpbCAxNjQ2LCB3aGVuIGl0IHdhcyBjb25xdWVyZWQgYnkgdGhlIE11c2xpbSBTdWx0YW5zIG9mIEJpamFwdXIgYW5kIEdvbGtvbmRhLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBDaG9sYSB0cmFkaXRpb25zIG9mIHZpbGxhZ2Ugc2VsZi1nb3Zlcm5tZW50IHdlcmUgY29uc2lkZXJhYmx5IHdlYWtlbmVkICAgdW5kZXIgVmlqYXlhbmFnYXJhIHJ1bGUuIFRoZSBncm93dGggb2YgaGVyZWRpdGFyeSBuYXlha3NoaXBzIHRlbmRlZCB0byBjdXJiIHRoZWlyIGZyZWVkb20gYW5kICAgaW5pdGlhdGl2ZS4gVGhlIGdvdmVybm9ycyBvZiB0aGUgcHJvdmluY2VzIHdlcmUgcm95YWwgcHJpbmNlcyBhdCBmaXJzdC4gTGF0ZXIsIHBlcnNvbnMgYmVsb25naW5nIHRvIHZhc3NhbCAgIHJ1bGluZyBmYW1pbGllcyBhbmQgbm9ibGVzIHdlcmUgYWxzbyBhcHBvaW50ZWQgYXMgZ292ZXJub3JzLiBUaGUgcHJvdmluY2lhbCBnb3Zlcm5vcnMgaGFkIGEgbGFyZ2UgICBtZWFzdXJlIG9mIGF1dG9ub215LiBUaGV5IGhlbGQgdGhlaXIgb3duIGNvdXJ0cywgYXBwb2ludGVkIHRoZWlyIG93biBvZmZpY2VycywgYW5kIG1haW50YWluZWQgdGhlaXIgICBvd24gYXJtaWVzLiBUaGV5IHdlcmUgYWxsb3dlZCB0byBpc3N1ZSB0aGVpciBvd24gY29pbnMsIHRob3VnaCBvZiBzbWFsbCBkZW5vbWluYXRpb25zIG9ubHkuIFRoZXJlIHdhcyAgIG5vIHJlZ3VsYXIgdGVybSBmb3IgYSBwcm92aW5jaWFsIGdvdmVybm9yLCBoaXMgdGVybSBkZXBlbmRpbmcgb24gaGlzIGFiaWxpdHkgYW5kIGhpcyBzdHJlbmd0aC4gVGhlICAgZ292ZXJub3IgaGFkIHRoZSByaWdodCB0byBpbXBvc2UgbmV3IHRheGVzIG9yIHJlbWl0IG9sZCBvbmVzLiBFYWNoIGdvdmVybm9yIHBhaWQgYSBmaXhlZCBjb250cmlidXRpb24gaW4gICBtZW4gYW5kIG1vbmV5IHRvIHRoZSBjZW50cmFsIGdvdmVybm1lbnQuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSW4gdGhlIGxhcmdlIGNlbnRyYWxseSBjb250cm9sbGVkIGFyZWEsIHRoZSBraW5nIGdyYW50ZWQgYW1hcmFtIG9yIHRlcnJpdG9yeSAgIHdpdGggYSBmaXhlZCByZXZlbnVlIHRvIG1pbGl0YXJ5IGNoaWVmcy4gVGhlc2UgY2hpZWZzLCB3aG8gd2VyZSBjYWxsZWQgcGFsYWl5YWdhciAocGFsZWdhcikgb3IgbmF5YWtzLCBoYWQgICB0byBtYWludGFpbiBhIGZpeGVkIG51bWJlciBvZiBmb290LCBzb2xkaWVycywgaG9yc2VzIGFuZCBlbGVwaGFudHMgZm9yIHRoZSBzZXJ2aWNlIG9mIHRoZSBzdGF0ZS4gVGhlIG5heWFrcyAgIG9yIHBhbGVnYXJzIGFsc28gaGFkIHRvIHBheSBhIHN1bSBvZiBtb25leSB0byB0aGUgY2VudHJhbCBleGNoZXF1ZXIuIFRoZXkgZm9ybWVkIGEgdmVyeSBwb3dlcmZ1bCAgIHNlY3Rpb24gYW5kIHNvbWV0aW1lcyBpdCB3YXMgZGlmZmljdWx0IGZvciB0aGUgZ292ZXJubWVudCB0byBjb250cm9sIHRoZW0uICAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSW4gYWRkaXRpb24gdG8gdGhlIGxhbmQgdGF4LCB0aGVyZSB3ZXJlIHZhcmlvdXMgb3RoZXIgdGF4ZXMsIHN1Y2ggYXMgcHJvcGVydHkgdGF4LCAgIHRheCBvbiBzYWxlIG9mIHByb2R1Y2UsIHByb2Zlc3Npb24gdGF4ZXMsIG1pbGl0YXJ5IGNvbnRyaWJ1dGlvbiAoaW4gdGltZXMgb2YgZGlzdHJlc3MpLCB0YXggb24gbWFycmlhZ2UsICAgZXRjLiBUaGVyZSB3YXMgY29uc2lkZXJhYmxlIGdyb3d0aCBvZiB0b3ducyBhbmQgdXJiYW5pemF0aW9uIHVuZGVyIFZpamF5YW5hZ2FyYSBydWxlLiBJdCBpcyBpbiB0aGlzIHNlbnNlICAgICBvZiAyMiAgICAgICAgdGhhdCBtYW55IGhpc3RvcmlhbnMgY29uc2lkZXIgdGhlIHBlcmlvZCBvZiBWaWpheWFuYWdhcmEgcnVsZSB0byBiZSBhIHBlcmlvZCBvZiB0cmFuc2l0aW9uIGZyb20gdGhlIG9sZCB0byAgIHRoZSBuZXcgZWNvbm9teS4gICAgU291cmNlOiBNZWRpZXZhbCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci05LCBUaGUgQWdlIG9mIFZpamF5YW5hZ2FyYSBhbmQgdGhlIEJhaG1hbmlkcywgYW5kIHRoZSAgIENvbWluZyBvZiB0aGUgUG9ydHVndWVzZSAoQ2lyY2EgMTM1MC0xNTY1KS4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 35,
      "question" : "With reference to Mian Tansen, which  one of the following statements is not  correct?      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFrYmFyIGdhdmUgaGltIHRoZSB0aXRsZSBvZiAnTWlhbicsIGJ1dCB0aGUgdGl0bGUgJ1RhbnNlbicgd2FzIGdpdmVuIHRvIGhpbSBieSB0aGUgUmFqYSBWaWtyYW1qaXQgb2YgICBHd2FsaW9yLiBBa2JhciBwYXRyb25pc2VkIFRhbnNlbiBvZiBHd2FsaW9yIHdobyBpcyBjcmVkaXRlZCB3aXRoIGNvbXBvc2luZyBtYW55IG5ldyBtZWxvZGllcyAocmFnYXN9LiAgIFRhbnNlbiB3YXMgb25lIG9mIHRoZSBiZXN0LWtub3duIGRocnVwYWQgc2luZ2VycyBhbmQgb25lIG9mIHRoZSBuaW5lIGpld2VscyBvZiBFbXBlcm9yIEFrYmFyJ3MgY291cnQuICAgSGUgY29tcG9zZWQgRGhydXBhZHMgb24gSGluZHUgZ29kcyBhbmQgZ29kZGVzc2VzLCBhbmQgYWxzbyBjb21wb3NlZCBzb25ncyBvbiBoaXMgcGF0cm9ucy4gICAgIFVQU0MgQ1NFIFByZV8yMDE5ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Tansen was the title given to him by   Emperor Akbar.     ",
        "option2" : " Tansen composed Dhrupads on Hindu gods   and goddesses.     ",
        "option3" : " Tansen composed songs on his patrons.     ",
        "option4" : " Tansen invented many Ragas.   "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to the Ashokan  inscriptions, consider the following  statements:   1.  Inscriptions in the north-western part of the  empire were written in the Pali language.  2.  Greek and Aramaic scripts were used for  writing Ashokan inscriptions.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTW9zdCBBc29rYW4gaW5zY3JpcHRpb25zIHdlcmUgd3JpdHRlbiBpbiB0aGUgUHJha3JpdCBsYW5ndWFnZSBhbmQgbm90IGluIFBhbGkuICAgTW9zdCBvZiB0aGUgUHJha3JpdCBpbnNjcmlwdGlvbnMgd2VyZSB3cml0dGVuIGluIHRoZSBCcmFobWkgc2NyaXB0LiBIb3dldmVyLCBpbiB0aGUgbm9ydGgtd2VzdGVybiBwYXJ0IG9mICAgdGhlIGVtcGlyZSwgdGhlIEtoYXJvc2h0aGkgc2NyaXB0IHdhcyB1c2VkLCB3aGljaCB3YXMgZGVyaXZlZCBmcm9tIHRoZSBBcmFtYWljIHNjcmlwdCB0aGVuIHByZXZhbGVudCAgIGluIElyYW4uICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBBcmFtYWljIGFuZCBHcmVlayBzY3JpcHRzIHdlcmUgaW5kZWVkIHVzZWQgZm9yIHdyaXRpbmcgQXNva2FuICAgaW5zY3JpcHRpb25zIGluIEFmZ2hhbmlzdGFuLiBJbiByZXN0IG9mIHRoZSBlbXBpcmUsIHRoZSBCcmFobWkgc2NyaXB0IHdhcyB1c2VkIGZvciB3cml0aW5nIHRoZXNlICAgaW5zY3JpcHRpb25zLiBUaHVzLCBBcmFtYWljIGFuZCBHcmVlayBzY3JpcHRzIHdlcmUgYWxzbyB1c2VkIGZvciB3cml0aW5nIEFzaG9rYW4gaW5zY3JpcHRpb25zLiAgICBTb3VyY2U6IFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeSBJLCBOQ0VSVCBYSUksIENoYXB0ZXItMiwgUGcuIDMyICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "Regarding the policies adopted by various  Delhi Sultans towards their nobles, consider  the following statements:  1.  Balban followed the policy of blood and iron  against the nobles.   2.  Alauddin Khilji tried to reduce the power of  the nobles.  3.  Firuz Shah Tughlaq adopted a policy of  appeasement towards the nobles  Which of the options given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEJhbGJhbiBpbnRyb2R1Y2VkIHN0ZXJuIG1lYXN1cmVzIGFnYWluc3QgVHVya2lzaCBub2JsZXMgYW5kIGFwcG9pbnRlZCBOb24tICBUdXJraXNoIG5vYmxlcyBvbiBpbXBvcnRhbnQgcG9zdHMuIEhlIGZvbGxvd2VkIHRoZSBwb2xpY3kgb2YgJ2Jsb29kIGFuZCBpcm9uJyBhZ2FpbnN0IGFsbCB0aG9zZSBub2JsZXMgd2hvICAgb3Bwb3NlZCBoaW0uIEhlIHdhcyBjb252aW5jZWQgdGhhdCB0aGlzIGdyb3VwIHdhcyBkb2luZyBhIGxvdCBvZiBkZXN0cnVjdGl2ZSB3b3JrIGFuZCB3YXMgYSBncmVhdCAgIGRhbmdlciB0byB0aGUgc3RhYmlsaXR5IG9mIHRoZSBTdWx0YW4gYW5kIHRoZSBTdWx0YW5hdGUgb2YgRGVsaGkuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFsYXVkZGluIEtoaWxqaSBmcm9tIHRoZSB2ZXJ5IGJlZ2lubmluZyByZWFsaXplZCB0aGF0IG5vYmlsaXR5IHdhcyByZXNwb25zaWJsZSBmb3IgICBhIGdvb2QgZGVhbCBvZiB1bnJlc3QgaW4gdGhlIGVtcGlyZS4gSGUsIHRoZXJlZm9yZSwgdG9vayBzZXZlcmFsIG1lYXN1cmVzIHRvIGNydXNoIHRoZSBwb3dlciBvZiB0aGUgICBub2JsZXMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEZpcnV6IHNoYWggVHVnaGxhcSByZWNlaXZlZCB0aGUgZW1waXJlIGluIHVucmVzdCBmcm9tIGhpcyBwcmVkZWNlc3Nvci4gU28sIHRvICAgcmVnYWluIGNvbnRyb2wgb3ZlciB0aGUgYWRtaW5pc3RyYXRpb24sIGhlIGFkb3B0ZWQgYSBwb2xpY3kgb2YgYXBwZWFzZW1lbnQgdG93YXJkcyBoaXMgbm9ibGVzLiAgICBLbm93bGVkZ2UgQmFzZTogVGhlIG5vYmxlcyBub3JtYWxseSBvY2N1cGllZCB0aGUgcGxhY2UgbmV4dCB0byB0aGUgU3VsdGFuIGFuZCBwbGF5ZWQgYSBrZXkgcm9sZSBpbiB0aGUgICBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgc3RhdGUuIE5vYmxlcyBjb21wcmlzZWQgdGhlIHJ1bGluZyBjbGFzcyBhbmQgYmVsb25nZWQgdG8gZGlmZmVyZW50IHRyaWJlcyBhbmQgICBuYXRpb25hbGl0aWVzIGxpa2UgdGhlIFR1cmtpc2gsIFBlcnNpYW4sIEFyYWJpYywgRWd5cHRpYW4gYW5kIEluZGlhbiBNdXNsaW1zLiBEdXJpbmcgdGhlIFN1bHRhbmF0ZSBwZXJpb2QgICB0aGUgbnVtYmVyIG9mIEhpbmR1IG5vYmxlcyB3YXMgZXh0cmVtZWx5IG5lZ2xpZ2libGUuICAgIFNvdXJjZTogTWVkaWV2YWwgSW5kaWEgY2hhcHRlci04IEdvdmVybm1lbnQgYW5kIGVjb25vbWljIGFuZCBzb2NpYWwgbGlmZSB1bmRlciB0aGUgRGVsaGkgc3VsdGFuYXRlLiAgIFBhZ2UtIDEwMiwgMTAzIENoYXB0ZXItIDcgVGhlIERlbGhpIHN1bHRhbmF0ZS1JSSBwYWdlLTg4ICAgICAgICBvZiAyMiAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following temples do not  form part of the Khajuraho temple complex?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBncm91cCBvZiB0ZW1wbGVzIG9mIEtoYWp1cmFobyB0ZXN0aWZpZXMgdG8gdGhlIGN1bG1pbmF0aW9uIG9mIG5vcnRoZXJuIEluZGlhbiB0ZW1wbGUgYXJ0IGFuZCAgIGFyY2hpdGVjdHVyZSBvZiB0aGUgQ2hhbmRlbGxhIGR5bmFzdHkgd2hvIHJ1bGVkIHRoZSByZWdpb24gaW4gdGhlIDEwdGggYW5kIDExdGggY2VudHVyaWVzIENFLiBEaXN0cmlidXRlZCAgIG92ZXIgYW4gYXJlYSBvZiA2IHNxdWFyZSBrbSwgdGhlIDIzIHRlbXBsZXMgKGluY2x1ZGluZyBvbmUgcGFydGx5IGV4Y2F2YXRlZCBzdHJ1Y3R1cmUpIGFyZSByYXJlIHN1cnZpdmluZyAgIGV4YW1wbGVzIHRoYXQgZGlzcGxheSB0aGUgb3JpZ2luYWxpdHkgYW5kIGhpZ2ggcXVhbGl0eSBvZiBOYWdhcmEtc3R5bGUgdGVtcGxlIGFyY2hpdGVjdHVyZS4gICAgU3RhdGVtZW50IGEsIGIgYW5kIGMgYXJlIGNvcnJlY3QuICAgICBUZW1wbGVzIGF0IEtoYWp1cmFobyBpbmNsdWRlcy0gICAgIDEpIENoYXVzYXRoIGpvZ2luaSB0ZW1wbGUgICAgMikgS2FuZGFyaXlhIE1haGFkZXYgdGVtcGxlICAgIDMpIENoaXRyYWd1cHRhIG9yIEJoYXJhdGppcyB0ZW1wbGUgICAgNCkgVklzaHdhbmF0aCB0ZW1wbGUgICAgNSkgTGFrc2htYW5hIHRlbXBsZSAgICA2KSBQYXJzdmFuYXRoIEphaW4gdGVtcGxlIGV0Yy4gICAgU3RhdGVtZW50IGQgaXMgaW5jb3JyZWN0LiBMYWQgS2hhbiB0ZW1wbGUgYmVsb25ncyB0byBBaWhvbGUgdGVtcGxlIGNvbXBsZXguIEFpaG9sZSB0ZW1wbGVzIGFyZSBmcm9tICAgY2hhbHVreWFuIHBlcmlvZC4gT3RoZXIgdGVtcGxlcyBmb3VuZCBhdCBBaWhvbGUgYXJlLSAgICAxKSBEdXJnYSBUZW1wbGUgICAgMikgTWVndXRpIFRlbXBsZSAgICAzKSBIdWNjaGltYWxsaSBUZW1wbGUgICA0KSBSYXZhbnBoYWRpIENhdmUgICAgNSkgU3VyeWFuYXJheWFuYSBUZW1wbGUgZXRjLiAgICBTb3VyY2U6IE5DRVJUIDExdGggQU4gSU5UUk9EVUNUSU9OIFRPIElORElBTiBBUlQgY2g2OiBUZW1wbGUgYXJjaGl0ZWN0dXJlIGFuZCBzY3VscHR1cmUgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Lakshmana temple.   ",
        "option2" : "Kandariya Mahadev temple.   ",
        "option3" : "Vishwanath temple.   ",
        "option4" : "Lad Khan temple.   "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following statements are  correct in the context of Vijayanagar paintings?   1.  The faces are shown in profile and figures  and objects two-dimensionally.   2.  Lepakshi mural is an example of Vijayanagar  paintings.   3.  Paintings of swayamvara of Sita and  Dhraupadi in Virupaksha temple belong to  this period.   4.  Chalukyan painting is an extension of the  Vijayanagara style.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgVmlqYXlhbmFnYXIgcGFpbnRlcnMgZXZvbHZlZCBhIHBpY3RvcmlhbCBsYW5ndWFnZSB3aGVyZWluIHRoZSBmYWNlcyBhcmUgICBzaG93biBpbiBwcm9maWxlIGFuZCBmaWd1cmVzIGFuZCBvYmplY3RzIHR3by1kaW1lbnNpb25hbGx5LiBMaW5lcyBiZWNvbWUgc3RpbGwgYnV0IGZsdWlkLCBjb21wb3NpdGlvbnMgICBhcHBlYXIgaW4gcmVjdGlsaW5lYXIgY29tcGFydG1lbnRzLiBbUHJvZmlsZSBoZXJlIG1lYW5zIG91dGxpbmUgb2YgeW91ciBmYWNlIGFzIGl0IGlzIHNlZW4gd2hlbiBzb21lb25lICAgaXMgbG9va2luZyBhdCB5b3UgZnJvbSB0aGUgc2lkZS5dICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogTGVwYWtzaGkgVGVtcGxlIFBhaW50aW5ncyBhcmUgbG9jYXRlZCBpbiB0aGUgQW5hbnRhcHVyIGRpc3RyaWN0IG9mIEFuZGhyYSAgIFByYWRlc2guIFRoZXNlIG11cmFsIHBhaW50aW5ncyB3ZXJlIGV4ZWN1dGVkIG9uIFZlZXJhYmhhZHJhIHRlbXBsZSB3YWxscyBhdCBMZXBha3NoaSBpbiAxNnRoIGNlbnR1cnkuICAgTWFkZSBkdXJpbmcgdGhlIFZpamF5YW5hZ2FyYSBwZXJpb2QsIHRoZXkgZm9sbG93IGEgcmVsaWdpb3VzIHRoZW1lIGJhc2VkIG9uIFJhbWF5YW5hLCBNYWhhYmhhcmF0YSAgIGFuZCBpbmNhcm5hdGlvbnMgb2YgVmlzaG51LiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIFZpcnVwYWtzaGEgdGVtcGxlJ3MgbWFoYXJhbmdhbWFudGFwYSBpcyB0aGUgb25seSBWaWpheWFuYWdhcmEgbW9udW1lbnQgICBpbiBIYW1waSB3aXRoIHBhaW50aW5ncyB0aGF0IGhhdmUgc3Vydml2ZWQgdGlsbCBkYXRlLiBJdCB3YXMgYnVpbHQgYnkgVmlqYXlhbmFnYXJhIEVtcGVyb3IgU3JpICAgS3Jpc2huYWRldmFyYXlhIGluIDE1MDkgQ0UgdG8gY29tbWVtb3JhdGUgaGlzIGNvcm9uYXRpb24uIFRoZSBwYWludGluZ3Mgb2NjdXB5IHRoZSBsYXJnZSBjZWlsaW5nIG9mICAgdGhlIG1haGFyYW5nYW1hbnRhcGEuIFNvbWUgb2YgdGhlIGltcG9ydGFudCB0aGVtZXMgYXJlIFJhbWEgYnJlYWtpbmcgU2hpdmEncyBib3cgdG8gbWFycnkgU2l0YSBhbmQgICBBcmp1bmEgc2hvb3RpbmcgYW4gYXJyb3cgYXQgdGhlIHJvdGF0aW5nIGZpc2ggdG8gbWFycnkgRHJhdXBhZGkuIEJvdGggdGhlIHRoZW1lcyBhcmUgY29ubmVjdGVkIHRvICAgc3dheWFtdmFycyBhbmQgY3VsbWluYXRlIHdpdGggdGhlIGlsbHVzdHJhdGlvbiBvZiB0aGUgcmVzcGVjdGl2ZSB3ZWRkaW5nIHNjZW5lcy4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBOYXlha2EgcGFpbnRpbmdzIHdlcmUgYW4gZXh0ZW5zaW9uIG9mIHRoZSBWaWpheWFuYWdhcmEgc3R5bGUgd2l0aCBtaW5vciAgIHJlZ2lvbmFsIG1vZGlmaWNhdGlvbnMgYW5kIGluY29ycG9yYXRpb25zLiBUaGUgZmlndXJlcywgbW9zdGx5IGluIHByb2ZpbGUsIGFyZSBzZXQgYWdhaW5zdCBhIGZsYXQgYmFja2dyb3VuZC4gICBNYWxlIGZpZ3VyZXMgYXJlIHNob3duIHNsaW0td2Fpc3RlZCBidXQgd2l0aCBsZXNzIGhlYXZ5IGFiZG9tYW4gYXMgY29tcGFyZWQgdG8gdGhvc2UgaW4gVmlqYXlhbmFnYXJhLiAgICAgQ2hhbHVreWFuIHBlcmlvZCB3YXMgbXVjaCBiZWZvcmUgdGhlIHZpamF5bmFnYXIgcGVyaW9kLiAgICBTb3VyY2U6IE5DRVJUIDExdGggQU4gSU5UUk9EVUNUSU9OIFRPIElORElBTiBBUlQgY2g1IExBVEVSIE1VUkFMICAgIFRSQURJVElPTlMgICAgICBvZiAyMiAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3 only      .         "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following Bhakti Saints:      1. Dadu Dayal      2. Guru Nanak      3. Tyagaraja      Who among the above was/were preaching  when the Lodi dynasty fell and Babur took  over?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBMb2RoaSBkeW5hc3R5IGZlbGwgaW4gMTUyNiB3aGVuIElicmFoaW0gTG9kaGkgd2FzIGRlZmVhdGVkIGJ5IEJhYnVyIGF0IEJhdHRsZSBvZiBQYW5pcGF0LiAgICAgIERhZHUgRGF5YWwgd2FzIGEgcmVsaWdpb3VzIHJlZm9ybWVyIGZyb20gR3VqYXJhdCwgYm9ybiBpbiAxNTQ0LiBUeWFnYXJhamEsIGEgcmVub3dlZCBjb21wb3NlciBvZiAgIENhcm5hdGljIE11c2ljIHdhcyBib3JuIGluIDE3NjcuIEd1cnUgTmFuYWsgKDE0NjktMTUzOSkgd2FzIHByZWFjaGluZyB3aGVuIEJhdHRsZSBvZiBQYW5pcGF0IHRvb2sgICBwbGFjZS4gICBVUFNDIDIwMTMgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only     ",
        "option2" : "2 only     ",
        "option3" : "2 and 3 only     ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following pairs is/are  matched correctly?    Medieval Terms   Description   1. Tawarikh   Historical accounts were written  during Delhi Sultanate.   2. Dehliwal  A type of coin.   3. Bandagan  Special slaves purchased for  military service.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gVGFyaWtoIChzaW5ndWxhcikgLyB0YXdhcmlraCAocGx1cmFsKSByZWZlcnMgdG8gdGhlIGhpc3RvcmljYWwgYWNjb3VudHMgYW5kICAgY2hyb25pY2xlcyB3cml0dGVuIGluIFBlcnNpYW4gdW5kZXIgdGhlIERlbGhpIFN1bHRhbnMuIFRoZSBhdXRob3JzIG9mIHRhd2FyaWtoIHdlcmUgbGVhcm5lZCBtZW46ICAgc2VjcmV0YXJpZXMsIGFkbWluaXN0cmF0b3JzLCBwb2V0cyBhbmQgY291cnRpZXJzLCB3aG8gYm90aCByZWNvdW50ZWQgZXZlbnRzIGFuZCBhZHZpc2VkIHJ1bGVycyBvbiAgIGdvdmVybmFuY2UsIGVtcGhhc2lzaW5nIHRoZSBpbXBvcnRhbmNlIG9mIGp1c3QgcnVsZS4gVGhleSBvZnRlbiB3cm90ZSB0aGVpciBoaXN0b3JpZXMgZm9yIFN1bHRhbnMgaW4gdGhlICAgaG9wZSBvZiByaWNoIHJld2FyZHMuICAgIFBhaXIgMiBpcyBjb3JyZWN0bHkgbWF0Y2hlZC4gRGVobGl3YWwgcmVmZXJzIHRvIHRoZSBjb2lucyBtaW50ZWQgZHVyaW5nIHRoZSByZWlnbiBvZiB0aGUgVG9tYXJhcyBhbmQgICBDaGF1aGFucyBpbiBEZWxoaS4gVGhleSB3ZXJlIHdpZGVseSBjaXJjdWxhdGVkIGR1cmluZyB0aGF0IHRpbWUgYXMgRGVsaGkgYmVjYW1lIGFuIGltcG9ydGFudCAgIGNvbW1lcmNpYWwgY2VudHJlLiAgICBQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQuIEJhbmRhZ2FuIGlzIGEgUGVyc2lhbiB3b3JkIHRoYXQgcmVmZXJzIHRvIHRoZSBzcGVjaWFsIHNsYXZlcyBwdXJjaGFzZWQgZm9yICAgbWlsaXRhcnkgc2VydmljZSBieSBlYXJseSBEZWxoaSBTdWx0YW5zLCBlc3BlY2lhbGx5IElsdHV0bWlzaC4gVGhleSB3ZXJlIGNhcmVmdWxseSB0cmFpbmVkIHRvIG1lbiBhbmQgc29tZSAgIG9mIHRoZSBtb3N0IGltcG9ydGFudCBwb2xpdGljYWwgb2ZmaWNlcnMgaW4gdGhlIGtpbmdkb20uIFNpbmNlIHRoZXkgd2VyZSB0b3RhbGx5IGRlcGVuZGVudCB1cG9uIHRoZWlyICAgbWFzdGVycyB0aGVyZWZvcmUsIHRoZXkgd2VyZSBhbHNvIGxveWFsIGFuZCB0cnVzdHdvcnRoeS4gICAgIFNvdXJjZTogTkNFUlQgT3VyIFBhc3RzIFBhcnQtSUkgQ2xhc3MgVklJIENoLTMgVGhlIERlbGhpIFN1bHRhbnMgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the position of women  in the Sangam age, which of the following  statement(s) is/are correct?   1.  The women have the freedom to choose  their life partners during the Sangam  period.   2.  The practice of Sati was generally prevalent  during the Sangam period.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgU2FuZ2FtIGxpdGVyYXR1cmUgZGVzY3JpYmVzIHRoZSBwb3NpdGlvbiBvZiB3b21lbiBpbiBhbmNpZW50IFRhbWlsIHNvY2lldHkuIEluIHRoZSBTYW5nYW0gQWdlLCAgIHdvbWVuIHdlcmUgdHJlYXRlZCB3aXRoIHNwZWNpYWwgY29uc2lkZXJhdGlvbi4gVGhlIG5hdHVyYWwgZmVtaW5pbmUgcXVhbGl0aWVzIHN1Y2ggYXMgQWNoY2hhbSwgTWFkYW0gICBhbmQgTmFhbmFtIHdlcmUgaW5zaXN0ZWQgaW4gdGhlIFNhbmdhbSBsaXRlcmF0dXJlLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIHdvbWVuIHdlcmUgZ2l2ZW4gZnJlZWRvbSB0byBjaG9vc2UgdGhlaXIgbGlmZSBwYXJ0bmVycyBkdXJpbmcgdGhlICAgU2FuZ2FtIHBlcmlvZC4gVGhlIGNvbmNlcHQgb2YgbG92ZSBoYWQgYmVlbiBlbGFib3JhdGVseSBkaXNjdXNzZWQgaW4gQWdhbmFudXJ1LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFdvbWVuIHRyZWF0ZWQgdGhlaXIgaHVzYmFuZHMgYXMgZXF1aXZhbGVudCB0byBHb2QgZHVyaW5nIHRoZSBTYW5nYW0gcGVyaW9kLiAgIFRoZXkgd2VyZSBub3QgcGVybWl0dGVkIHRvIHJlbWFycnkgYW5kIGluaGVyaXQgcHJvcGVydHkgU2F0aSBvciB0aGUgY3VzdG9tIG9mIHNlbGYtaW1tb2xhdGlvbiBhdCB0aGUgICBkZWF0aCBvZiBvbmUncyBodXNiYW5kIHdhcyBub3QgZ2VuZXJhbGx5IHByZXZhbGVudCBkdXJpbmcgdGhpcyBwZXJpb2QuIEhvd2V2ZXIsIHNvbWUgd29tZW4gZnJvbSB0aGUgICByb3lhbCBmYW1pbHkgaW5kdWxnZWQgaW4gdGhlIHByYWN0aWNlIG9mIFNhdGkuICAgICBTb3VyY2U6ICAgIGh0dHBzOi8vd3d3LnRhbWlsbmFkdS5pbmQuaW4gYW1pbG5hZHVfaGlzdG9yeS9zYW5nYW1fYWdlL3N0YXR1c19vZl93b21lbl9pbl9zYW5nYW1fYWdlLnBoICBwICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements:   1.  A wooden plough was discovered from  Mohenjodaro.   2. Mixed cropping  pattern was  in existence   during the  Indus Valley Civilisation.    With reference to the Agriculture during the  Indus Valley Civilization, which of the  statement(s) given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBIYXJhcHBhbnMgbGVhcm50IHRoZSB1c2Ugb2YgdGhlIHBsb3VnaCBmcm9tIHRoZSBTdW1lcmlhbnMuIEFsbCBwcmltaXRpdmUgICBwbG91Z2hzIHdlcmUgbWFkZSBvZiB3b29kLCBhbmQgd29vZCBpcyBhIHBlcmlzaGFibGUgbWF0ZXJpYWwuIEhlbmNlIHRoZXJlIGlzIG5vIHBvc3NpYmlsaXR5ICAgICBvZiAyMiAgICAgICAgb2YgZmluZGluZyBhbiBhY3R1YWwgd29vZGVuIHBsb3VnaCBmcm9tIGEgSGFyYXBwYW4gc2l0ZS4gIEhvd2V2ZXIsIGEgdGVycmFjb3R0YSBtb2RlbCBvZiBhIHBsb3VnaCBoYXMgICBiZWVuIGRpc2NvdmVyZWQgZnJvbSBNb2hlbmpvLWRhcm8uICBUaGVyZSBpcyBubyBpbmRpY2F0aW9uIHRoYXQgaXQgaGFkIGEgaGFuZGxlIGZvciB0aGUgcGxvdWdobWFuICAgdG8gaG9sZC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIEhhcmFwcGFuIHBhdHRlcm4gb2YgY3JvcHBpbmcgd2FzIG5vdGljZWQgYXQgS2FsaWJhbmdhbiB3aGVyZSBhIGZ1cnJvd2VkICAgZmllbGQgY2FtZSB0b2xpZ2h0IGR1cmluZyB0aGUgZXhjYXZhdGlvbi4gVGhlIGZ1cnJvdyBtYXJrcyBzdWdnZXN0IHRoYXQgdGhlIG1peGVkIGNyb3BwaW5nIHBhdHRlcm4gICB3YXMgaW4gZXhpc3RlbmNlIGR1cmluZyB0aGUgSGFyYXBwYW4gdGltZXMuIEl0IGlzIHBlcmhhcHMgdGhlIGVhcmxpZXN0IGV2aWRlbmNlIG9mIHBsb3VnaCBmaWVsZCBzbyBmYXIgICBleGNhdmF0ZWQgYW55d2hlcmUgaW4gdGhlIHdvcmxkLiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5zaWVhbGxhaGFiYWQub3JnL2hydC0gIGFkbWluL2Jvb2svYm9va19maWxlLzc1OWQ3N2U2MDgwYjE4MjhkZTIwMDhmMWEyYjQ5NWEwLnBkZiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neihter 1 nor 2   "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following statement is  correct with reference to the temple  architecture of India?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgRnJvbSBmaWZ0aCBjZW50dXJ5IEEuRC4gb253YXJkcywgYSBkaXN0aW5jdCBzdHlsZSBvZiB0ZW1wbGUgYXJjaGl0ZWN0dXJlIGRldmVsb3BlZCBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiAgIEluZGlhLCBrbm93biBhcyB0aGUgTmFnYXJhIHN0eWxlIG9mIGFyY2hpdGVjdHVyZS4gRHJhdmlkaWFuIHN0eWxlIG9mIHRlbXBsZSBhcmNoaXRlY3R1cmUgZGV2ZWxvcGVkIGluIHRoZSAgIFNvdXRoIEluZGlhIHVuZGVyIHRoZSBwYXRyb25hZ2Ugb2YgUGFsbGF2YSBhbmQgQ2hvbGEgcnVsZXJzLiAgICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBVbmxpa2UgdGhlIE5hZ2FyYSB0ZW1wbGVzLCB0aGUgRHJhdmlkaWFuIHRlbXBsZXMgd2VyZSBzdXJyb3VuZGVkIGJ5IGhpZ2ggICBib3VuZGFyeSB3YWxscy4gVGhlIGZyb250IHdhbGwgaGFkIGEgaGlnaCBlbnRyYW5jZSBnYXRld2F5IGtub3duIGFzIHRoZSBnb3B1cmFtLiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IEluIE5hZ2FyYSBzdHlsZSwgdGhlIGltYWdlcyBvZiB0aGUgcml2ZXIgZ29kZGVzc2VzLCBHYW5nYSBhbmQgWWFtdW5hLCB3ZXJlICAgcGxhY2VkIG91dHNpZGUgdGhlIGdhcmJncmloYS4gSW4gRHJhdmlkaWFuIHN0eWxlLCB0aGUgZW50cmFuY2Ugb2YgdGhlIGdhcmJoYWdyaWhhIGhhZCBzY3VscHR1cmVzIG9mICAgRHdhYXJwYWwsIG1pdGh1biBhbmQgeWFrc2hhcy4gICAgT3B0aW9uIGMgaXMgY29ycmVjdDogSW4gRHJhdmlkaWFuIHN0eWxlLCB0aGUgY3Jvd25pbmcgZWxlbWVudCBpcyBzaGFwZWQgaW4gdGhlIGZvcm0gb2YgYW4gb2N0YWdvbiBhbmQgaXMgICBrbm93biBhcyBzaGlraGFyYS4gSXQgaXMgc2ltaWxhciB0byB0aGUga2FsYXNoIG9mIHRoZSBOYWdhcmEgdGVtcGxlLCBidXQgbm90IHNwaGVyaWNhbC4gICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogVGhlIERyYXZpZGlhbiB0ZW1wbGUgcHJlbWlzZSB3YXMgbGFpZCBvdXQgaW4gdGhlIHBhbmNoYXlhdGFuIHN0eWxlIHdpdGggYSAgIHByaW5jaXBhbCB0ZW1wbGUgYW5kIGZvdXIgc3Vic2lkaWFyeSBzaHJpbmVzLiBUaGVyZSBpcyBvbmx5IG9uZSB2aW1hbmEgaW4gdGhlIERyYXZpZGlhbiBhcmNoaXRlY3R1cmUgb24gICB0b3Agb2YgdGhlIG1haW4gdGVtcGxlLiBUaGUgc3Vic2lkaWFyeSBzaHJpbmVzIGRvIG5vdCBoYXZlIHZpbWFuYXMsIHVubGlrZSBpbiBOYWdhcmEgYXJjaGl0ZWN0dXJlLiAgICAgS25vd2xlZGdlIEJhc2U6IFNvbWUgb2YgdGhlIGZlYXR1cmVzIG9mIE5hZ2FyYSBzdHlsZSBhcmU6ICAgIDEpIFRoZSB0ZW1wbGVzIGdlbmVyYWxseSBmb2xsb3dlZCB0aGUgUGFuY2hheWF0YW4gc3R5bGUgb2YgdGVtcGxlIG1ha2luZywgd2hpY2ggY29uc2lzdGVkIG9mIHN1YnNpZGlhcnkgICBzaHJpbmVzIGxhaWQgb3V0IGluIGEgY3J1Y2lmaWVkIGdyb3VuZCBwbGFuIHdpdGggcmVzcGVjdCB0byB0aGUgcHJpbmNpcGFsIHNocmluZS4gICAgMikgUHJlc2VuY2Ugb2YgYXNzZW1ibHkgaGFsbHMgb3IgbWFuZGFwcyBpbiBmcm9udCBvZiB0aGUgcHJpbmNpcGFsIHNocmluZS4gICAgMykgVGhlcmUgd2VyZSBubyB3YXRlciB0YW5rcyBvciByZXNlcnZvaXJzIHByZXNlbnQgaW4gdGhlIHRlbXBsZSBwcmVtaXNlcy4gICAgNCkgVGhlIHRlbXBsZXMgd2VyZSBnZW5lcmFsbHkgYnVpbHQgb24gdXByYWlzZWQgcGxhdGZvcm1zLiAgICA1KSBUaGUgcG9ydGljb3MgaGFkIGEgcGlsbGFyZWQgYXBwcm9hY2guICAgICA2KSBUaGUgYW1idWxhdG9yeSBwYXNzYWdld2F5IG9yIHRoZSBwcmFkYWtzaGluYSBwYXRoIGFyb3VuZCB0aGUgc2FuY3R1bSBzYW5jdG9ydW0gd2FzIGNvdmVyZWQuICAgIFRoZSBTaGlraGFyYXMgd2VyZSBnZW5lcmFsbHkgb2YgdGhyZWUgdHlwZXM6ICAgIDEpIExhdGluYSBvciByZWtoYS1wcmFzYWQ6IFRoZXkgd2VyZSBzcXVhcmUgYXQgdGhlIGJhc2UgYW5kIHRoZSB3YWxscyBjdXJ2ZSBpbndhcmQgdG8gYSBwb2ludCBvbiB0aGUgICB0b3AuICAgIDIpIFBoYW1zYW5hOiBUaGV5IGhhZCBhIGJyb2FkZXIgYmFzZSBhbmQgd2VyZSBzaG9ydGVyIGluIGhlaWdodCB0aGFuIHRoZSBMYXRpbmEgb25lcy4gVGhleSBzbG9wZSAgIHVwd2FyZHMgb24gYSBzdHJhaWdodCBsaW5lLiAgICAzKSBWYWxhYmhpOiBUaGV5IGhhZCBhIHJlY3Rhbmd1bGFyIGJhc2Ugd2l0aCB0aGUgcm9vZiByaXNpbmcgaW50byB2YXVsdGVkIGNoYW1iZXJzLiBUaGV5IHdlcmUgYWxzbyBjYWxsZWQgICB3YWdvbi12YXVsdGVkIHJvb2ZzLiAgICBPdGhlciBmZWF0dXJlcyBvZiB0aGUgRHJhdmlkaWFuIHN0eWxlIGFyZTogICAgIDEpIEluIHRoZSBEcmF2aWRpYW4gc3R5bGUsIHRoZSBzcGlyZSBpcyBpbiB0aGUgZm9ybSBvZiBhIHN0ZXBwZWQgcHlyYW1pZCB0aGF0IHJpc2VzIHVwIGxpbmVhcmx5IHJhdGhlciB0aGFuICAgY3VydmVkLiBJdCBpcyBrbm93biBhcyB2aW1hbmEuICAgICAyKSBUaGUgYXNzZW1ibHkgaGFsbCB3YXMgY29ubmVjdGVkIHdpdGggdGhlIGdhcmJoYWdyaWhhIGJ5IGEgdmVzdGlidWxhciB0dW5uZWwga25vd24gYXMgYW50YXJhbGEuICAgICAzKSBUaGUgcHJlc2VuY2Ugb2YgYSB3YXRlciB0YW5rIGluc2lkZSB0aGUgdGVtcGxlIGVuY2xvc3VyZSB3YXMgYSB1bmlxdWUgZmVhdHVyZSBvZiB0aGUgRHJhdmlkaWFuIHN0eWxlLiAgICAgU291cmNlOiBJbmRpYW4gQXJ0IGFuZCBDdWx0dXJlIGJ5IE5pdGluIFNpbmdoYW5pYSAtIENoYXB0ZXIgMSBJbmRpYW4gQXJjaGl0ZWN0dXJlLiAgICAgb2YgMjIgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Nagara style temples were covered with   high boundary walls.    ",
        "option2" : " The images of Dwaarpal, Mithun and   yakshas are placed outside the garbhagriha   in Nagara style.    ",
        "option3" : " The crowning element in the Dravida style is   shaped in the form of an octagon.    ",
        "option4" : " In Dravidian style, there is vimana on the top   of the main temple as well as the subsidiary   shrines.   "
      }
    },
    {
      "index" : 45,
      "question" : "How do you distinguish between  Kuchipudi and Bharatnatyam dances?  1.  Dancers occasionally speaking dialogues are  found in Kuchipudi dance but not in  Bharatnatyam.     2.  Dancing on the brass plate by keeping the  feet on its edges is a feature of  Bharatnatyam but Kuchipudi dance does not  have such a form of movement.     Which of the statements given above is/are  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gS3VjaGlwdWRpIGlzIHVuaXF1ZSBhbW9uZyB0aGUgSW5kaWFuIGNsYXNzaWNhbCBkYW5jZSBzdHlsZXMuIEl0IHVzZXMgZmFzdCByaHl0aG1pYyAgIGZvb3R3b3JrIGFuZCBzY3VscHR1cmVzcXVlIGJvZHkgbW92ZW1lbnRzLiBTdHlsaXNlZCBtaW1lLCB1c2luZyBoYW5kIGdlc3R1cmVzIGFuZCBzdWJ0bGUgZmFjaWFsICAgZXhwcmVzc2lvbiwgaXMgY29tYmluZWQgd2l0aCBtb3JlIHJlYWxpc3RpYyBhY3RpbmcsIG9jY2FzaW9uYWxseSBpbmNsdWRpbmcgZGlhbG9ndWVzIHNwb2tlbiBieSB0aGUgICBkYW5jZXJzLiAgICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlICJUYXJhbmdhbSIsIGlzIGFub3RoZXIgdW5pcXVlIGZlYXR1cmUgb2YgS3VjaGlwdWRpLiBJbiB0aGlzLCBhIGRhbmNlciAgIGRhbmNlcyBvbiB0aGUgZWRnZSBvZiBhIGJyYXNzIHBsYXRlLCBtYXRjaGluZyB0byB0aGUgcmh5dGhtIG9mIG11c2ljLiAgICAgIFNvbWV0aW1lcywgZGFuY2VycyBhbHNvIGJhbGFuY2UgYSBwb3Qgb2Ygd2F0ZXIgb24gdGhlIGhlYWQuICAgICAgVVBTQyAyMDEyICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "2 only     ",
        "option3" : "Both 1 and 2     ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 46,
      "question" : "Which of the following statements is  incorrect with regard to the prehistoric  painting in India?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBwcmUtaGlzdG9yaWMgcGFpbnRpbmdzIHdlcmUgZ2VuZXJhbGx5IGV4ZWN1dGVkIG9uIHJvY2tzIGFuZCB0aGVzZSByb2NrIGVuZ3JhdmluZ3Mgd2VyZSBjYWxsZWQgICBQZXRyb2dseXBocy4gVGhlcmUgYXJlIHRocmVlIG1ham9yIHBoYXNlcyBvZiBwcmUtaGlzdG9yaWMgcGFpbnRpbmdzOiBVcHBlciBQYWxlb2xpdGhpYyBQZXJpb2QgKDQwMDAwLSAgMTAwMDAgQkMpLCBNZXNvbGl0aGljIFBlcmlvZCAoMTAwMDAtNDAwMCBCQykgYW5kIENoYWxjb2xpdGhpYyBQZXJpb2QuICAgICBPcHRpb24gYSBpcyBjb3JyZWN0OiBVcHBlciBQYWxlb2xpdGhpYyBQZXJpb2QgcGFpbnRpbmdzIHVzZWQgbWluZXJhbHMgZm9yIHBpZ21lbnRzLiBPbmUgb2YgdGhlIG1vc3QgICBjb21tb24gbWluZXJhbCB3YXMgb2NocmUgb3IgZ2VydSBtaXhlZCB3aXRoIGxpbWUgYW5kIHdhdGVyLiBUaGUgd2hpdGUsIGRhcmsgcmVkIGFuZCBncmVlbiB3ZXJlIHVzZWQgICB0byBkZXBpY3QgbGFyZ2UgYW5pbWFscyBsaWtlIGJpc29uLCBlbGVwaGFudCwgcmhpbm8sIHRpZ2VycyBldGMuIEZvciB0aGUgaHVtYW4gZmlndXJpbmVzLCByZWQgd2FzIHVzZWQgZm9yICAgaHVudGVycyBhbmQgdGhlIGdyZWVuIG1vc3RseSBmb3IgZGFuY2Vycy4gICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogVGhlIENoYWxjb2xpdGhpYyBQZXJpb2QgcGFpbnRpbmcgc2F3IHRoZSBpbmNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHBhaW50aW5ncyAgIHVzaW5nIHRoZSBncmVlbiBhbmQgeWVsbG93IGNvbG91ci4gTWVzb2xpdGhpYyBQZXJpb2QgcGFpbnRpbmcgbWFpbmx5IHNhdyB0aGUgdXNlIG9mIHJlZCBjb2xvdXIuICAgICBPcHRpb24gYyBpcyBjb3JyZWN0LiBPbmUgb2YgdGhlIG1vc3QgY29tbW9uIHNjZW5lcyBkZXBpY3RlZCBpbiBNZXNvbGl0aGljIHBlcmlvZCBwYWludGluZ3MgaXMgb2YgZ3JvdXAgICBodW50aW5nLiBPdGhlcnMgaW5jbHVkZSBkZXBpY3QgZ3JhemluZyBhY3Rpdml0eSBhbmQgcmlkaW5nIHNjZW5lcy4gICAgT3B0aW9uIGQgaXMgY29ycmVjdDogSW4gY29tcGFyaXNvbiB0byB0aGUgVXBwZXIgUGFsZW9saXRoaWMgcGVyaW9kLCB0aGUgc2l6ZSBvZiB0aGUgcGFpbnRpbmdzIGJlY2FtZSAgIHNtYWxsZXIgZHVyaW5nIE1lc29saXRpaGljIHBlcmlvZC4gICAgS25vd2xlZGdlIEJhc2U6ICAgVGhlIGZpcnN0IHNldCBvZiBwcmVoaXN0b3JpYyBwYWludGluZ3Mgd2FzIGRpc2NvdmVyZWQgaW4gQmhpbWJldGFrYSBjYXZlcyBpbiBNYWRoeWEgICAgUHJhZGVzaCBpbiAxOTU3LTU4IGJ5IGFuIGFyY2hhZW9sb2dpc3QgbmFtZWQgVi5TLiBXYWthbmthci4gVGhlc2UgcGFpbnRpbmdzIGdlbmVyYWxseSBkZXBpY3QgYW5pbWFscyAgIGxpa2UgYmlzb24sIGJlZXJzIGFuZCB0aWdlcnMgZXRjLiBUaGV5IGhhdmUgYmVlbiBjYWxsZWQgdGhlICdab28gUm9jayBTaGVsdGVyJyBiZWNhdXNlIGl0IGRlcGljdHMgZWxlcGhhbnQsICAgcmhpbm9jZXJvcywgY2F0dGxlLCBzbmFrZSwgc3BvdHRlZCBkZWVyLCBiYXJhc2luZ2hhLCBldGMuICAgICBDaGFsY29saXRoaWMgUGVyaW9kICAgIE1vc3Qgb2YgdGhlIHBhaW50aW5ncyBjb25jZW50cmF0ZSBvbiBkZXBpY3RpbmcgYmF0dGxlIHNjZW5lcy4gVGhlcmUgYXJlIG1hbnkgcGFpbnRpbmdzIG9mIG1lbiByaWRpbmcgICBob3JzZXMgYW5kIGVsZXBoYW50cy4gT3RoZXIgcGFpbnRpbmdzIGZyb20gdGhpcyBwZXJpb2QgYWxzbyBoYXZlIGRlcGljdGlvbnMgb2YgbXVzaWNhbCBpbnN0cnVtZW50cyBsaWtlICAgdGhlIGhhcnAuIFNvbWUgb2YgdGhlIHBhaW50aW5ncyBoYXZlIGNvbXBsZXggZ2VvbWV0cmljYWwgc2hhcGVzIGxpa2UgdGhlIHNwaXJhbCwgcmhvbWJvaWQgYW5kIGNpcmNsZS4gICAgU29tZSBvZiB0aGUgcGFpbnRpbmdzIGZyb20gdGhlIGxhdGVyIHBlcmlvZCBjYW4gYmUgc2VlbiBpbiB0aGUgSm9naW1hcmEgY2F2ZXMgaW4gdGhlIFJhbWdhcmggaGlsbHMgaW4gICBTdXJndWphIGRpc3RyaWN0IG9mIENoaGF0dGlzZ2FyaC4gQW5vdGhlciBpbnRlcmVzdGluZyBzaXRlIGlzIGluIENoaXR3YSBEb25ncmkgKER1cmcgZGlzdHJpY3QpIHdoZXJlIHdlIGZpbmQgICBhIGNoaW5lc2UgZmlndXJlIHJpZGluZyBhIGRvbmtleSwgcGljdHVyZXMgb2YgZHJhZ29ucyBhbmQgYWdyaWN1bHR1cmFsIHNjZW5lcmllcy4gICAgIFNvdXJjZTogIEluZGlhbiBBcnQgYW5kIEN1bHR1cmUgYnkgTml0aW4gU2luZ2hhbmlhIC0gQ2hhcHRlciAyIEluZGlhbiBQYWludGluZ3MuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Paleolithic paintings depicted large   animals like bison, elephant and tigers.   ",
        "option2" : " Green and yellow were the most   prominently used in Mesolithic period   paintings.    ",
        "option3" : " The theme of group hunting is the most   common scene in Mesolithic period   paintings.    ",
        "option4" : " The size of paintings was smaller during the   Mesolithic period as compared to the Upper   Paleolithic period.       .      "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the Gupta Empire,  consider the following pairs:   Functionaries Duties   1. Vishayapati In charge of Bhukti (an  administrative unit)   2. Uparika Incharge of districts   3. Mahattama Managing the affairs of the  village   Which of the pair(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQYWlyIDEgaXMgaW5jb3JyZWN0LiBUaGUgQmh1a3RpIHdhcyBkaXZpZGVkIGludG8gVmlzYXlhcyBvciBkaXN0cmljdHMuIFRoZSBWaXNheWEgd2FzIGluIGNoYXJnZSBvZiB0aGUgICBLdW1hcmFtYXR5YSBpbiBlYXJseSB0aW1lcywgYnV0IGxhdGVyIGl0IGNhbWUgdG8gYmUgcGxhY2VkIHVuZGVyIHRoZSBWaXNheWFwYXRpLiAgICAgIG9mIDIyICAgICAgICBQYWlyIDIgaXMgaW5jb3JyZWN0LiBUaGUgQmh1a3RpIHdhcyB0aGUgbGFyZ2VzdCBhZG1pbmlzdHJhdGl2ZSB1bml0IHVuZGVyIHRoZSBHdXB0YXMgYW5kIHRoZXJlIHdlcmUgYXQgICBsZWFzdCBzaXggc3VjaCBkaXZpc2lvbnMgb3ZlciBCZW5nYWwsIEpoYXJraGFuZC4gQmloYXIsIFV0dGFyIFByYWRlc2gsIENoaGF0dGlzZ2FyaCBhbmQgTWFkaHlhIFByYWRlc2guIEl0ICAgd2FzIHBsYWNlZCBpbiBjaGFyZ2Ugb2YgYW4gVXBhcmlrYS4gICAgIFBhaXIgMyBpcyBjb3JyZWN0LiBUaGUgdml0aGkgY29uc2lzdGVkIG9mIHZpbGxhZ2VzIHdoaWNoIGZvcm1lZCB0aGUgbG93ZXN0IHVuaXQgb2YgYWRtaW5pc3RyYXRpb247IHNldmVyYWwgb2YgICB0aGVzZSBhcmUgbWVudGlvbmVkIGluIEd1cHRhIGluc2NyaXB0aW9ucyBhbmQgc2VhbHMuIFRoZSBsZWFkaW5nIHBhcnQgaW4gbWFuYWdpbmcgdGhlIGFmZmFpcnMgb2YgdGhlICAgdmlsbGFnZSB3YXMgdGFrZW4gYnkgaXRzIGdyYW1pa2EgYW5kIGVsZGVycyBrbm93biBhcyB0aGUgbWFoYXR0YW1hLCBtYWhhdHRha2Egb3IgbWFoYXR0YXJhLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LnlvdXJhcnRpY2xlbGlicmFyeS5jb20vaGlzdG9yeSBoZS1zYWxpZW50LWZlYXR1cmVzLW9mLXRoZS1hZG1pbmlzdHJhdGl2ZS0gIHN5c3RlbS1vZi10aGUtZ3VwdGFzLWhpc3RvcnkvNDQzOCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to the trade during the  Sangam age, consider the following  statements:   1.  The Romans were the first to enter into  trade contacts with the Tamil region.   2.  There was also a great demand in the west  for the cotton clothes manufactured in the  Tamil country.   3. The port-town Korkai was the primary port  of the Pandyan kingdom.   4.  The Chola kingdom was the first to get the  benefit of the Roman trade.    Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRhbWlsIGNvdW50cnkgaGFkIGNhcnJpZWQgb24gYW4gZXh0ZW5zaXZlIHRyYWRlIHdpdGggZm9yZWlnbiBjb3VudHJpZXMuIFRoZSBHcmVla3MgYW5kIFJvbWFucyBoYWQgICBjb21tZXJjaWFsIGNvbnRhY3RzIHdpdGggdGhlIFRhbWlsIGNvdW50cnkgZnJvbSBhYm91dCB0aGUgVGhpcmQgY2VudHVyeSBCLkMuIFRoZXNlIHRyYWRlIHJlbGF0aW9ucyBoYWQgICBsYXN0ZWQgdGhyb3VnaG91dCB0aGUgU2FuZ2FtIHBlcmlvZC4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgR3JlZWtzIHdlcmUgdGhlIGZpcnN0IHRvIGVudGVyIGludG8gdHJhZGUgY29udGFjdHMgd2l0aCB0aGUgVGFtaWwgcmVnaW9uICAgaW4gYWJvdXQgVGhpcmQgY2VudHVyeSBCLkMuIFRoZSBHcmVla3MgaGFkIGFkb3B0ZWQgYW5kIG1lbnRpb25lZCBzZXZlcmFsIFRhbWlsIG5hbWVzIGZvciB0aGUgICBjb21tb2RpdGllcyB0aGF0IHdlcmUgYXZhaWxhYmxlIGluIHRoZSBUYW1pbCBjb3VudHJ5LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgVGFtaWwgY291bnRyeSBleHBvcnRlZCBhIHZhcmlldHkgb2YgZ29vZHMgdG8gR3JlZWNlIGFuZCBSb21lIGR1cmluZyB0aGUgICBTYW5nYW0gQWdlLiBUaGUgbW9zdCBpbXBvcnRhbnQgb2YgdGhlbSB3ZXJlIHNwaWNlcyBsaWtlIHBlcHBlciwgY2FyZGFtb20sIGNsb3ZlcyBhbmQgZ2luZ2VyLiBUaGUgICBvdGhlciBpdGVtcyBvZiBleHBvcnQgaW5jbHVkZSBzYW5kYWwgcGFzdGUsIGZsb3dlcnMsIHNjZW50cywgYXJvbWF0aWMgd29vZCBsaWtlIEFoaWwsIGl2b3J5LCBwZWFybHMsIGNvcmFscywgICBtZWRpY2luYWwgcGxhbnRzLCBiYW5hbmEgYW5kIHJpY2UuIFRoZXJlIHdhcyBhbHNvIGEgZ3JlYXQgZGVtYW5kIGluIHRoZSB3ZXN0IGZvciB0aGUgY290dG9uIGNsb3RoZXMgICBtYW51ZmFjdHVyZWQgaW4gdGhlIFRhbWlsIGNvdW50cnkuIFRoZSBTYW5nYW0gbGl0ZXJhdHVyZSByZXZlYWxzIHRoYXQgZmluZSB2YXJpZXRpZXMgb2YgY2xvdGhlcyBoYWQgICBiZWVuIGV4cG9ydGVkIHRvIHRoZSBXZXN0LiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgU2FuZ2FtIGxpdGVyYXR1cmUsIFBhdHRpbmFwcGFsYWkgcHJvdmlkZXMgdGhlIGRldGFpbHMgb2YgdGhlIFB1aGFyIGhhcmJvdXIgICBhbmQgaXRzIGFjdGl2aXRpZXMuIFRoZSBwb3J0LXRvd24gS29ya2FpIGhhZCByZW1haW5lZCBmYW1vdXMgZm9yIGl0cyBwZWFybHMuIEl0IHdhcyB0aGUgcHJpbWFyeSBwb3J0IG9mICAgdGhlIFBhbmR5YW4ga2luZ2RvbS4gICAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gQWZ0ZXIgdGhlIEdyZWVrcywgdGhlIFJvbWFucyBiZWdhbiB0byBhcnJpdmUgaW4gdGhlIFRhbWlsIGNvdW50cnkuIFRoZSAgIFBhbmR5YW4ga2luZ2RvbSB3YXMgdGhlIGZpcnN0IHRvIGdldCB0aGUgYmVuZWZpdCBvZiB0aGUgUm9tYW4gdHJhZGUuIFRoZXkgaGFkIGFsc28gc2VydmVkIGluIHRoZSAgIFBhbmR5YW4gYXJteS4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cudGFtaWxuYWR1LmluZC5pbiBhbWlsbmFkdV9oaXN0b3J5L3NhbmdhbV9hZ2UvZ3JlZWtfYW5kX3JvbWFuX2NvbnRhY3RzX2luX3NhbmcgIGFtX2FnZS5waHAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements  regarding the village administration during the  Mughal period:  1.  The Village panchayat head was known as  'Muqaddam   2.  The Village panchayat aimed at reducing  caste discrimination in villages.   3.  The village panchayat was an assembly of all  elected members.   4.  The Village panchayats had the authority to  levy fines and inflict punishments.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IFRoZSBwYW5jaGF5YXQgd2FzIGhlYWRlZCBieSBhIGhlYWRtYW4ga25vd24gYXMgbXVxYWRkYW0gb3IgbWFuZGFsLiBIZWFkbWVuICAgaGVsZCBvZmZpY2UgYXMgbG9uZyBhcyB0aGV5IGVuam95ZWQgdGhlIGNvbmZpZGVuY2Ugb2YgdGhlIHZpbGxhZ2UgZWxkZXJzLCBmYWlsaW5nIHdoaWNoIHRoZXkgY291bGQgYmUgICBkaXNtaXNzZWQgYnkgdGhlbS4gTXV6YXJpYW4gd2FzIGEgcGVhc2FudC4gICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0OiBDYXN0ZSB3YXMgYW4gaW1wb3J0YW50IGFzcGVjdCBvZiBzb2NpZXR5IGR1cmluZyB0aGlzIHBlcmlvZC4gVGhlcmVmb3JlLCBvbmUgb2YgICBJbXBvcnRhbnQgZnVuY3Rpb24gb2YgcGFuY2hheWF0IHdhcyB0byBtYWludGFpbiBjYXN0ZSBib3VuZGFyaWVzIGFtb25nIGluaGliaXRpbmcgY29tbXVuaXRpZXMgb2YgdGhlICAgdmlsbGFnZXMuIEUuZy4sIEltcG9ydGFudCBkdXR5IG9mIHZpbGxhZ2UgaGVhZG1hbiB3YXMgdG8gb3ZlcnNlZSB0aGUgY29uZHVjdCBvZiB0aGUgbWVtYmVycyBvZiB0aGUgdmlsbGFnZSAgIGNvbW11bml0eSAnY2hpZWZseSB0byBwcmV2ZW50IGFueSBvZmZlbmNlIGFnYWluc3QgdGhlaXIgY2FzdGUnLiAgICBPcHRpb24gMyBpcyBpbmNvcnJlY3Q6IFRoZSB2aWxsYWdlIHBhbmNoYXlhdCB3YXMgYW4gYXNzZW1ibHkgb2YgZWxkZXJzLCB1c3VhbGx5IGltcG9ydGFudCBwZW9wbGUgb2YgdGhlICAgdmlsbGFnZSB3aXRoIGhlcmVkaXRhcnkgcmlnaHRzIG92ZXIgdGhlaXIgcHJvcGVydHkuIEluIG1peGVkLWNhc3RlIHZpbGxhZ2VzLCB0aGUgcGFuY2hheWF0IHdhcyB1c3VhbGx5IGEgICBoZXRlcm9nZW5lb3VzIGJvZHkuIEFuIG9saWdhcmNoeSwgdGhlIHBhbmNoYXlhdCByZXByZXNlbnRlZCB2YXJpb3VzIGNhc3RlcyBhbmQgY29tbXVuaXRpZXMgaW4gdGhlICAgICBvZiAyMiAgICAgICAgdmlsbGFnZSwgdGhvdWdoIHRoZSB2aWxsYWdlIG1lbmlhbC1jdW0tYWdyaWN1bHR1cmFsIHdvcmtlciB3YXMgdW5saWtlbHkgdG8gYmUgcmVwcmVzZW50ZWQgdGhlcmUuIFRoZSAgIGRlY2lzaW9ucyBtYWRlIGJ5IHRoZXNlIHBhbmNoYXlhdHMgd2VyZSBiaW5kaW5nIG9uIHRoZSBtZW1iZXJzLiBUaHVzLCB1bmxpa2UgdGhlIHByZXNlbnQgdGltZXMgdmlsbGFnZSAgIHBhbmNoYXlhdCB3YXMgbm90IGFuIGFzc2VtYmx5IG9mIGFsbCBlbGVjdGVkIG1lbWJlcnMuICAgICBPcHRpb24gNCBpcyBjb3JyZWN0OiBQYW5jaGF5YXRzIGFsc28gaGFkIHRoZSBhdXRob3JpdHkgdG8gbGV2eSBmaW5lcyBhbmQgaW5mbGljdCBtb3JlIHNlcmlvdXMgZm9ybXMgb2YgICBwdW5pc2htZW50IGxpa2UgZXhwdWxzaW9uIGZyb20gdGhlIGNvbW11bml0eS4gVGhlIGxhdHRlciB3YXMgYSBkcmFzdGljIHN0ZXAgYW5kIHdhcyBpbiBtb3N0IGNhc2VzICAgbWV0ZWQgb3V0IGZvciBhIGxpbWl0ZWQgcGVyaW9kLiBJdCBtZWFudCB0aGF0IGEgcGVyc29uIGZvcmNlZCB0byBsZWF2ZSB0aGUgdmlsbGFnZSBiZWNhbWUgYW4gb3V0Y2FzdGUgYW5kICAgbG9zdCBoaXMgcmlnaHQgdG8gcHJhY3Rpc2UgaGlzIHByb2Zlc3Npb24uIFN1Y2ggYSBtZWFzdXJlIHdhcyBpbnRlbmRlZCBhcyBhIGRldGVycmVudCB0byB2aW9sYXRpb24gb2YgY2FzdGUgICBub3Jtcy4gICAgU291cmNlOiBOQ0VSVCBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJSSAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 50,
      "question" : "With reference to Dhrupad, one of the  major traditions of India that has been kept  alive for centuries, which of the following  statements are correct?     1.  Dhrupad originated and developed in the  Rajput kingdoms during the Mughal  period.      2.  Dhrupad is primarily a devotional and  spiritual music.      3.  Dhrupad Alap uses Sanskrit syllables from  Mantras.      Select the correct answer using the codes given  below:      ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRGhydXBhZCBjbGFpbXMgdGhlIGRpc3RpbmN0aW9uIG9mIGJlaW5nIHRoZSBvbGRlc3QgZm9ybSBvZiBJbmRpYW4gQ2xhc3NpY2FsICAgbXVzaWMgaGVhcmQgdG9kYXksIGl0cyBvcmlnaW4gY2FuIGJlIHRyYWNlZCBiYWNrIHRvIHRoZSBjaGFudGluZyBvZiB2ZWRpYyBoeW1ucyBhbmQgbWFudHJhcy4gSXQgaXMgc2FpZCAgIHRvIGJlIGEgZm9ybSBvZiB0aGUgR2FuZGhhcnZhIFZlZGEsIHRoZSBWZWRpYyBzY2llbmNlIG9mIG11c2ljLCB3aGljaCBpcyBhIGJyYW5jaCBvZiBTYW1hIFZlZGEuIFRoZSAgIFNhbWEgVmVkYSB3YXMgY2hhbnRlZCB3aXRoIHRoZSBoZWxwIG9mIG1lbG9keSBhbmQgcmh5dGhtIGNhbGxlZCBTYW1nYW5hLiBHcmFkdWFsbHkgdGhpcyBkZXZlbG9wZWQgICBpbnRvIG90aGVyIHZvY2FsIHN0eWxlcyBjYWxsZWQgJ0NoaGFuZGEnIGFuZCAnUHJhYmFuZGhhJyB3aXRoIGludHJvZHVjdGlvbiBvZiB2ZXJzZSBhbmQgbWV0ZXIuIFRoZSBmdXNpb24gICBvZiB0aGVzZSB0d28gZWxlbWVudHMgbGVkIHRvIHRoZSBlbWVyZ2VuY2Ugb2YgRGhydXBhZC4gICAgICBUaGUgYmlydGggb2YgRGhydXBhZCBhcyB3ZSBrbm93IGl0IHRvZGF5IGNvaW5jaWRlZCB3aXRoIHRoZSBCaGFrdGkgbW92ZW1lbnQgKHBhcnRpY3VsYXJseSB0aGF0IG9mIHRoZSAgIFZhbGxhYmggU2FtcHJhZGF5YSkgYW5kIGNvbnNlcXVlbnRseSB3YXMgbW9yZSBkZXZvdGlvbmFsIGluIG5hdHVyZS4gSXQgd2FzIHJlbmRlcmVkIGluIHRlbXBsZXMgICBmYWNpbmcgdGhlIHRoZSBEaXZpbml0eSBmdWxsIG9mIGRldm90aW9uIGFuZCBiaGFhdiwgdGhpcyB3YXMgdGhlIGdlbmVzaXMgb2Ygd2hhdCBiZWNhbWUga25vd24gYXMgSGF2ZWxpICAgRGhydXBhZC9TYW5nZWV0LiAgICAgICAgU3RhdGVtZW50IDIgYW5kIDMgYm90aCBhcmUgY29ycmVjdC4gRGhydXBhZCBpcyBwcmltYXJpbHkgYSBzcGlyaXR1YWwgYW5kIGRldm90aW9uYWwgbXVzaWMgYW5kIGl0IHVzZXMgICBTYW5za3JpdCBzeWxsYWJsZXMgZnJvbSBtYW50cmFzLiAgICAgICBEaHJ1cGFkIGlzIHRoZSBvbGRlc3Qgc3Vydml2aW5nIGNsYXNzaWNhbCBzdHlsZSBvZiBIaW5kdXN0YW5pIChvciBOb3J0aCBJbmRpYW4pIHZvY2FsIG11c2ljLiBPcmlnaW4gb2YgICBEaHJ1cGFkIGNhbiBiZSB0cmFjZWQgdG8gdGhlIHZlZGFzLiAgICAgIFVQU0MgQ1NFIDIwMTIgICAgICBvZiAyMiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only      ",
        "option2" : "2 and 3 only     ",
        "option3" : "1, 2 and 3      ",
        "option4" : "None of the above is correct    "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
