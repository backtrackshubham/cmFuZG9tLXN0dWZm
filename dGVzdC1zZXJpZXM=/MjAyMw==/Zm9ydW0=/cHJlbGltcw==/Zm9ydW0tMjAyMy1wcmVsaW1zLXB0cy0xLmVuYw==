{
  "testId" : "forum-2023-prelims-pts-1",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-pts-1.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to the Western Model of  Secularism, consider the following statements:   1. A religious classification can be the basis of  any public policy.  2. The state cannot hinder the activities of  religious communities.  3. There is not much scope for community- based rights in western model.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgb3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gd2VzdGVybiBtb2RlbCBvZiBzZWN1bGFyaXNtIHdoaWNoIGlzIGluc3BpcmVkIG1haW5seSBieSB0aGUgQW1lcmljYW4gICBtb2RlbCwgc2VwYXJhdGlvbiBvZiByZWxpZ2lvbiBhbmQgc3RhdGUgaXMgdW5kZXJzdG9vZCBhcyBtdXR1YWwgZXhjbHVzaW9uLiBUaGUgc3RhdGUgd2lsbCBub3QgaW50ZXJ2ZW5lICAgaW4gdGhlIGFmZmFpcnMgb2YgcmVsaWdpb24gYW5kLCBpbiB0aGUgc2FtZSBtYW5uZXIsIHJlbGlnaW9uIHdpbGwgbm90IGludGVyZmVyZSBpbiB0aGUgYWZmYWlycyBvZiB0aGUgc3RhdGUuIEVhY2ggICBoYXMgYSBzZXBhcmF0ZSBzcGhlcmUgb2YgaXRzIG93biB3aXRoIGluZGVwZW5kZW50IGp1cmlzZGljdGlvbi4gTm8gcG9saWN5IG9mIHRoZSBzdGF0ZSBjYW4gaGF2ZSBhbiAgIGV4Y2x1c2l2ZWx5IHJlbGlnaW91cyByYXRpb25hbGUuIE5vIHJlbGlnaW91cyBjbGFzc2lmaWNhdGlvbiBjYW4gYmUgdGhlIGJhc2lzIG9mIGFueSBwdWJsaWMgcG9saWN5LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJbiB3ZXN0ZXJuIG1vZGVsIG9mIHNlY3VsYXJpc20sIHRoZSBzdGF0ZSBjYW5ub3QgYWlkIGFueSByZWxpZ2lvdXMgaW5zdGl0dXRpb24uIEl0ICAgY2Fubm90IGdpdmUgZmluYW5jaWFsIHN1cHBvcnQgdG8gZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zIHJ1biBieSByZWxpZ2lvdXMgY29tbXVuaXRpZXMuIEl0IGFsc28gY2Fubm90ICAgaGluZGVyIHRoZSBhY3Rpdml0aWVzIG9mIHJlbGlnaW91cyBjb21tdW5pdGllcywgZm9yIGV4YW1wbGUsIGlmIGEgcGFydGljdWxhciByZWxpZ2lvbiBmb3JiaWRzIHRoZSBlbnRyeSBvZiAgIHNvbWUgb2YgaXRzIG1lbWJlcnMgaW4gdGhlIHNhbmN0dW0gb2YgaXRzIHRlbXBsZSwgdGhlbiB0aGUgc3RhdGUgaGFzIG5vIG9wdGlvbiBidXQgdG8gbGV0IHRoZSBtYXR0ZXIgcmVzdCAgIGV4YWN0bHkgd2hlcmUgaXQgaXMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZXJlIGlzIGxpdHRsZSBzY29wZSBmb3IgY29tbXVuaXR5LWJhc2VkIHJpZ2h0cyBvciBtaW5vcml0eSByaWdodHMuIFRoZXJlIGlzIG5vICAgc2NvcGUgZm9yIHRoZSBpZGVhIHRoYXQgYSBjb21tdW5pdHkgaGFzIHRoZSBsaWJlcnR5IHRvIGZvbGxvdyBwcmFjdGljZXMgb2YgaXRzIG93biBjaG9vc2luZy4gV2hlbiBzdHJpY3QgICBzZXBhcmF0aW9uIG9mIHRoZSBzdGF0ZSBmcm9tIHRoZSBjaHVyY2ggaXMgZW1waGFzaXplZCB0aGUgaXNzdWVzIG9mIGludGVyLXJlbGlnaW91cyBhbmQgbWlub3JpdHkgcmlnaHRzIGdvdCAgIG5lZ2xlY3RlZC4gICAgU291cmNlOiBDbGFzcyAxMSAtUG9saXRpY2FsIFRoZW9yeSBOQ0VSVC4gQ2hhcHRlciA4LiAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 2,
      "question" : "With respect to the concept of  Citizenship, consider the following  statements:   1.  One of the purposes of citizenship is to  unite the people based on their culture.   2.  It is about citizen-to-citizen relationship in  a given country.    3. Citizenship refers to full and equal  membership of a Nation State.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBDaXRpemVuc2hpcCB1bml0ZXMgdGhlIHBlb3BsZSB3aXRoIGRpZmZlcmVudCBjdWx0dXJlLCByZWxpZ2lvbiBhbmQgZXRobmljaXR5IGFuZCAgIGRvZXMgbm90IHNlZ3JlZ2F0ZSB0aGUgcGVvcGxlLiBJbiB0aGUgY29udGVtcG9yYXJ5IHdvcmxkLCBzdGF0ZXMgcHJvdmlkZSBhIGNvbGxlY3RpdmUgcG9saXRpY2FsIGlkZW50aXR5IHRvICAgdGhlaXIgbWVtYmVycyBhcyB3ZWxsIGFzIGNlcnRhaW4gcmlnaHRzLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQ2l0aXplbnNoaXAgaXMgYWJvdXQgbm90IG9ubHkgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHN0YXRlcyBhbmQgdGhlaXIgbWVtYmVycyAgIGJ1dCBhbHNvIGFib3V0IGNpdGl6ZW4tY2l0aXplbiByZWxhdGlvbnMgYW5kIGludm9sdmVzIGNlcnRhaW4gb2JsaWdhdGlvbnMgb2YgY2l0aXplbnMgdG8gZWFjaCBvdGhlciBhbmQgdG8gICB0aGUgc29jaWV0eS4gVGhlc2Ugd291bGQgaW5jbHVkZSBub3QganVzdCB0aGUgbGVnYWwgb2JsaWdhdGlvbnMgaW1wb3NlZCBieSBzdGF0ZXMgYnV0IGFsc28gYSBtb3JhbCAgIG9ibGlnYXRpb24gdG8gcGFydGljaXBhdGUgaW4sIGFuZCBjb250cmlidXRlIHRvLCB0aGUgc2hhcmVkIGxpZmUgb2YgdGhlIGNvbW11bml0eS4gICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIENpdGl6ZW5zaGlwIHJlZmVycyB0byBmdWxsIGFuZCBlcXVhbCBtZW1iZXJzaGlwIG9mIG5hdGlvbiBzdGF0ZS4gQ2l0aXplbnMgZXhwZWN0ICAgY2VydGFpbiByaWdodHMgZnJvbSB0aGVpciBzdGF0ZSBhcyB3ZWxsIGFzIGhlbHAgYW5kIHByb3RlY3Rpb24gd2hlcmV2ZXIgdGhleSBtYXkgdHJhdmVsLiBFcXVhbCByaWdodHMgZm9yICAgY2l0aXplbnMgbmVlZCBub3QgbWVhbiB0aGF0IHVuaWZvcm0gcG9saWNpZXMgaGF2ZSB0byBiZSBhcHBsaWVkIHRvIGFsbCBwZW9wbGUgc2luY2UgZGlmZmVyZW50IGdyb3VwcyBvZiAgIHBlb3BsZSBtYXkgaGF2ZSBkaWZmZXJlbnQgbmVlZHMuICAgIFNvdXJjZTogQ2xhc3MgMTEgLVBvbGl0aWNhbCBUaGVvcnkgbmNlcnQuIENoYXB0ZXIgNiBwYWdlIDYgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 3   ",
        "option3" : "2 and 3 only   ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements with  reference to 'Structural Violence':  1. It occurs when a social institution harm  people by preventing them from meeting  their basic needs.   2.  It is the violence inflicted by irregular  insurgent groups against orthodox military  and police forces.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBTdHJ1Y3R1cmFsIHZpb2xlbmNlIHJlZmVycyB0byBhIGZvcm0gb2YgdmlvbGVuY2Ugd2hlcmVpbiBhIHNvY2lhbCBzdHJ1Y3R1cmUgb3IgICBzb2NpYWwgaW5zdGl0dXRpb24gbWF5IGhhcm0gcGVvcGxlIGJ5IHByZXZlbnRpbmcgdGhlbSBmcm9tIG1lZXRpbmcgdGhlaXIgYmFzaWMgbmVlZHMuIFRoaXMgY29uY2VwdCAgIHdhcyBpbnRyb2R1Y2VkIGJ5IEpvaGFuIEdhbHR1bmcgaW4gMTk2OS4gSXQgcmVmZXJzIHRvIGEgZm9ybSBvZiB2aW9sZW5jZSB3aGVyZWluIHNvbWUgc29jaWFsIHN0cnVjdHVyZSBvciAgIHNvY2lhbCBpbnN0aXR1dGlvbiBtYXkgaGFybSBwZW9wbGUgYnkgcHJldmVudGluZyB0aGVtIGZyb20gbWVldGluZyB0aGVpciBiYXNpYyBuZWVkczsgYWNjb3JkaW5nIHRvICAgR2FsdHVuZywgcmF0aGVyIHRoYW4gY29udmV5aW5nIGEgcGh5c2ljYWwgaW1hZ2UsIHN0cnVjdHVyYWwgdmlvbGVuY2UgaXMgYW4gJ2F2b2lkYWJsZSBpbXBhaXJtZW50IG9mICAgZnVuZGFtZW50YWwgaHVtYW4gbmVlZHMuJy4gU3RydWN0dXJhbCB2aW9sZW5jZSBpcyB0aGUgdmlvbGVuY2UgaW5mbGljdGVkIHdoZW4gb3BwcmVzc2VkIGNsYXNzZXMgbWFrZSAgIGFueSBjaGFsbGVuZ2UgdG8gZXN0YWJsaXNoZWQgaGllcmFyY2hpZXMuIFNvY2lhbCBpbnN0aXR1dGlvbnMgYW5kIHByYWN0aWNlcyByZWluZm9yY2UgZW50cmVuY2hlZCAgIGluZXF1YWxpdGllcyBvZiBjYXN0ZSwgY2xhc3MgYW5kIGdlbmRlciBpbiBzb2NpZXR5LCB3aGljaCBjYW4gY2F1c2UgaW5qdXJ5IGluIHN1YnRsZSBhbmQgaW52aXNpYmxlIHdheXMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gR3VlcnJpbGxhIHdhcmZhcmUgKG5vdCBzdHJ1Y3R1cmFsIHZpb2xlbmNlKSwgaXMgYSB0eXBlIG9mIHdhcmZhcmUgZm91Z2h0IGJ5ICAgaXJyZWd1bGFycyBpbiBmYXN0LW1vdmluZywgc21hbGwtc2NhbGUgYWN0aW9ucyBhZ2FpbnN0IG9ydGhvZG94IG1pbGl0YXJ5IGFuZCBwb2xpY2UgZm9yY2VzIGFuZCwgb24gICBvY2Nhc2lvbiwgYWdhaW5zdCByaXZhbCBpbnN1cmdlbnQgZm9yY2VzLCBlaXRoZXIgaW5kZXBlbmRlbnRseSBvciBpbiBjb25qdW5jdGlvbiB3aXRoIGEgbGFyZ2VyIHBvbGl0aWNhbC0gIG1pbGl0YXJ5IHN0cmF0ZWd5LiAgIFNvdXJjZTogIENsYXNzIDExIC1Qb2xpdGljYWwgVGhlb3J5IE5DRVJULiBDaGFwdGVyIDkuICAgICAgaHR0cHM6Ly93d3cubmNiaS5ubG0ubmloLmdvdi9wbWMvYXJ0aWNsZXMvUE1DNTU2MTY4OC8gICAgaHR0cHM6Ly93d3cudW5pY2VmLm9yZy9yb3NhL3NpdGVzL3VuaWNlZi5vcmcucm9zYS9maWxlcy8yMDE4LSAgMDgvU1ZBQ1MlMjByZXBvcnQlMjh3ZWIlMjlBdWd1c3QlMjAyLnBkZiAgICAgIG9mIDE4ICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 4,
      "question" : "Which of the following can be the basis  for the formation of a Nation state?   1.  People have a shared belief in a collective  identity.   2. People embody a sense of continuing  historical identity.   3. People have a shared vision of state they  want to build.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgb3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEl0IGlzIGNvbW1vbmx5IGJlbGlldmVkIHRoYXQgbmF0aW9ucyBhcmUgY29uc3RpdHV0ZWQgYnkgYSBncm91cCB3aG8gc2hhcmUgY2VydGFpbiBmZWF0dXJlcyBzdWNoIGFzICAgZGVzY2VudCwgb3IgbGFuZ3VhZ2UsIG9yIHJlbGlnaW9uIG9yIGV0aG5pY2l0eS4gQnV0IHRoZXJlIGlzIGluIGZhY3Qgbm8gY29tbW9uIHNldCBvZiBjaGFyYWN0ZXJpc3RpY3MgICAgd2hpY2ggaXMgcHJlc2VudCBpbiBhbGwgbmF0aW9ucy4gU29tZSBvZiB0aGUgYXNzdW1wdGlvbnMgd2hpY2ggcGVvcGxlIG1ha2UgYWJvdXQgdGhlIG5hdGlvbiBhcmUgLSAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIG5hdGlvbiBjYW4gYmUgZm9ybWVkIG9uIHNoYXJlZCBiZWxpZWZzLiBQZW9wbGUgYXMgYSBuYXRpb24gcmVmZXIgdG8gdGhlICAgY29sbGVjdGl2ZSBpZGVudGl0eSBhbmQgdmlzaW9uIGZvciB0aGUgZnV0dXJlIHdoaWNoIGFzcGlyZXMgdG8gaGF2ZSBhbiBpbmRlcGVuZGVudCBwb2xpdGljYWwgZXhpc3RlbmNlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBIG5hdGlvbiBjYW4gYmUgZm9ybWVkIHdoZW4gcGVvcGxlIGVtYm9keSBhIHNlbnNlIG9mIGNvbnRpbnVpbmcgaGlzdG9yaWNhbCAgIGlkZW50aXR5LiBOYXRpb25zIHBlcmNlaXZlIHRoZW1zZWx2ZXMgYXMgc3RyZXRjaGluZyBiYWNrIGludG8gdGhlIHBhc3QgYXMgd2VsbCBhcyByZWFjaGluZyBpbnRvIHRoZSBmdXR1cmUuICAgVGhleSBhcnRpY3VsYXRlIGZvciB0aGVtc2VsdmVzIGEgc2Vuc2Ugb2YgdGhlaXIgb3duIGhpc3RvcnkgYnkgZHJhd2luZyBvbiBjb2xsZWN0aXZlIG1lbW9yaWVzLCBsZWdlbmRzLCAgIGhpc3RvcmljYWwgcmVjb3JkcywgdG8gb3V0bGluZSB0aGUgY29udGludWluZyBpZGVudGl0eSBvZiB0aGUgbmF0aW9uLiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gIEEgbmF0aW9uIGNhbiBiZSBmb3JtZWQgd2hlbiBtZW1iZXJzIG9mIGEgbmF0aW9uIHNoYXJlIGEgdmlzaW9uIG9mIHRoZSBraW5kIG9mICAgc3RhdGUgdGhleSB3YW50IHRvIGJ1aWxkLiBUaGV5IGFmZmlybSBhbW9uZyBvdGhlciB0aGluZ3MgYSBzZXQgb2YgdmFsdWVzIGFuZCBwcmluY2lwbGVzIHN1Y2ggYXMgICBkZW1vY3JhY3ksIHNlY3VsYXJpc20gYW5kIGxpYmVyYWxpc20uIFRoZXNlIGlkZWFscyByZXByZXNlbnQgdGhlIHRlcm1zIHVuZGVyIHdoaWNoIHRoZXkgY29tZSAgIHRvZ2V0aGVyIGFuZCBhcmUgd2lsbGluZyB0byBsaXZlIHRvZ2V0aGVyLiBJdCByZXByZXNlbnRzLCB0aGVpciBwb2xpdGljYWwgaWRlbnRpdHkgYXMgYSBuYXRpb24uICAgIFNvdXJjZTogIENsYXNzIDExIC1Qb2xpdGljYWwgVGhlb3J5IG5jZXJ0LiBDaGFwdGVyIDcgcGFnZSA0ICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 5,
      "question" : "Right to vote and to be elected in India is  a   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcmlnaHQgdG8gdm90ZSBoYXMgYmVlbiByZWNvZ25pc2VkIHVuZGVyIHRoZSBBcnRpY2xlLTMyNiBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBhbmQgdGh1cyBpdCBpcyBhICAgQ29uc3RpdHV0aW9uYWwgUmlnaHQuIEluZGlhIGlzIGEgZGVtb2NyYXRpYyBjb3VudHJ5IGFuZCByaWdodCB0byB2b3RlIGFuZCB0byBiZSBlbGVjdGVkIGlzIGdyYW50ZWQgdG8gZXZlcnkgICBjaXRpemVuIG9mIEluZGlhIHVuZGVyIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEuIFVuZGVyIEFydGljbGUgMzI2IG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgaXQgaXMgICBwcm92aWRlZCB0aGF0ICdUaGUgZWxlY3Rpb25zIHRvIHRoZSBIb3VzZSBvZiB0aGUgUGVvcGxlIGFuZCB0byB0aGUgTGVnaXNsYXRpdmUgQXNzZW1ibHkgb2YgZXZlcnkgU3RhdGUgICBzaGFsbCBiZSBvbiB0aGUgYmFzaWMgb2YgYWR1bHQgc3VmZnJhZ2U7IHRoYXQgaXMgdG8gc2F5IGV2ZXJ5IHBlcnNvbiB3aG8gaXMgYSBjaXRpemVuIG9mIEluZGlhIGFuZCB3aG8gaXMgbm90ICAgbGVzcyB0aGFuIGVpZ2h0ZWVuIHllYXJzIG9mIGFnZSBhbmQgaXMgbm90IGRpc3F1YWxpZmllZCBvbiB0aGUgZ3JvdW5kIG9mIG5vbi1yZXNpZGVuY2UsIHVuc291bmRuZXNzIG9mICAgbWluZCwgY3JpbWUgb3IgY29ycnVwdCBvciBpbGxlZ2FsIHByYWN0aWNlIHNoYWxsIGJlIGVudGl0bGVkIHRvIGJlIHJlZ2lzdGVyZWQgYXMgYSB2b3RlcicuICAgIFVuZGVyIFNlY3Rpb24gNjIgb2YgdGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxIGl0IGlzIHByb3ZpZGVkIHRoYXQgJ0V2ZXJ5IHBlcnNvbiB3aG8gaXMsICAgZm9yIHRoZSB0aW1lIGJlaW5nIGVudGVyZWQgaW4gdGhlIGVsZWN0b3JhbCByb2xsIG9mIGFueSBjb25zdGl0dWVuY3kgc2hhbGwgYmUgZW50aXRsZWQgdG8gdm90ZSBpbiB0aGF0ICAgY29uc3RpdHVlbmN5Jy4gICAgSW4gc2ltcGxlIHdvcmRzICdldmVyeSBDaXRpemVuIG9mIEluZGlhIHdobyBpcyBub3QgbGVzcyB0aGFuIGVpZ2h0ZWVuIHllYXJzIG9mIGFnZSBpcyBlbnRpdGxlZCB0byBnZXQgICBlbnJvbGxlZCBpbnRvIGVsZWN0b3JhbCByb2xsIGFuZCBpcyBlbnRpdGxlZCB0byB2b3RlIGluIHRoZSBjb25zdGl0dWVuY3kgaW4gd2hpY2ggaGlzIG5hbWUgaXMgZW50ZXJlZCBpbiB0aGUgICBlbGVjdG9yYWwgcm9sbCBpcnJlc3BlY3RpdmUgb2YgY2FzdGUsIGNyZWVkLCByZWxpZ2lvbiBvciBnZW5kZXIgdW5sZXNzIGhlIGlzIGRpc3F1YWxpZmllZCB1bmRlciB0aGUgICBDb25zdGl0dXRpb24gb3IgYW55IG90aGVyIGxhdyBvbiB0aGUgZ3JvdW5kIG9mIG5vbi1yZXNpZGVuY2UsIHVuc291bmRuZXNzIG9mIG1pbmQsIGNyaW1lIG9yIGNvcnJ1cHQgb3IgICBpbGxlZ2FsIHByYWN0aWNlLiAgICBTb3VyY2UpIGh0dHA6Ly93d3cuaGVscGxpbmVsYXcuY29tL2J1c2luZXNzLWxhdy9SVE9SL3JpZ2h0LXRvLXZvdGUtYW5kLXJpZ2h0LXRvLXJlamVjdC1hbGwtICBjYW5kaWRhdGVzLWluLWVsZWN0aW9ucy5odG1sICAgICBVUFNDIDIwMTcgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Fundamental Right    ",
        "option2" : "Natural Right    ",
        "option3" : "Constitutional Right    ",
        "option4" : "Legal Right     "
      }
    },
    {
      "index" : 6,
      "question" : "With reference to 'Theocratic States',  consider the following statements:   1.  It allows separation between religious and  political institutions.   2. Theocratic state is reluctant to allow  freedom of religion to all the members of  state.   3.  It is governed by officials who are regarded  as divinely guided.   4.  The state's legal system is based on  religious law.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgb3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZW9jcmF0aWMgc3RhdGUgZG9lcyBsYWNrcyBzZXBhcmF0aW9uIGJldHdlZW4gcmVsaWdpb3VzIGFuZCBwb2xpdGljYWwgICBpbnN0aXR1dGlvbnMuIE9uIHRoZSBvdGhlciBoYW5kLCBpdCBpcyBzZWN1bGFyIHN0YXRlIHRoYXQgc3RhdGUgYWxsb3dzIHNlcGFyYXRpb24gYmV0d2VlbiByZWxpZ2lvdXMgYW5kICAgcG9saXRpY2FsIGluc3RpdHV0aW9ucy4gVGhlb2NyYXRpYyBzdGF0ZXMsIHN1Y2ggYXMgdGhlIFBhcGFsIHN0YXRlcyBvZiBFdXJvcGUgaW4gbWVkaWV2YWwgdGltZXMgb3IgaW4gcmVjZW50ICAgdGltZXMgdGhlIFRhbGliYW4tY29udHJvbGxlZCBzdGF0ZSwgbGFja2luZyBzZXBhcmF0aW9uIGJldHdlZW4gcmVsaWdpb3VzIGFuZCBwb2xpdGljYWwgaW5zdGl0dXRpb25zLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGVvY3JhdGljIHN0YXRlcyBhcmUga25vd24gZm9yIHRoZWlyIGhpZXJhcmNoaWVzLCBhbmQgb3BwcmVzc2lvbnMuIFRoZXkgYXJlICAgcmVsdWN0YW5jZSB0byBhbGxvdyBmcmVlZG9tIG9mIHJlbGlnaW9uIHRvIG1lbWJlcnMgb2Ygb3RoZXIgcmVsaWdpb3VzIGdyb3Vwcy4gSWYgd2UgdmFsdWUgcGVhY2UsICAgZnJlZWRvbSBhbmQgZXF1YWxpdHksIHJlbGlnaW91cyBpbnN0aXR1dGlvbnMgYW5kIHN0YXRlIGluc3RpdHV0aW9ucyBtdXN0IGJlIHNlcGFyYXRlZC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gIEEgc3RhdGUgZ292ZXJuZWQgZGlyZWN0bHkgYnkgYSBwcmllc3RseSBvcmRlciBpcyBjYWxsZWQgdGhlb2NyYXRpYyBzdGF0ZS4gSXQgaXMgICBnb3Zlcm5tZW50IGJ5IGRpdmluZSBndWlkYW5jZSBvciBieSBvZmZpY2lhbHMgd2hvIGFyZSByZWdhcmRlZCBhcyBkaXZpbmVseSBndWlkZWQuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gICBJbiBtYW55IHRoZW9jcmFjaWVzLCBnb3Zlcm5tZW50IGxlYWRlcnMgYXJlIG1lbWJlcnMgb2YgdGhlIGNsZXJneSwgYW5kIHRoZSAgIHN0YXRlJ3MgbGVnYWwgc3lzdGVtIGlzIGJhc2VkIG9uIHJlbGlnaW91cyBsYXcuICAgICAgb2YgMTggICAgICAgU291cmNlOiAgQ2xhc3MgMTEgLVBvbGl0aWNhbCBUaGVvcnkgTkNFUlQuIENoYXB0ZXIgOCwgcGFnZSA0ICAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMgaGVvY3JhY3kgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements   1. Emergency of 1975 was imposed due to  escalation of violence during the Assam  movement against undocumented  immigrants.   2.  Justice Mohammad Hidayatullah  Commission was appointed to inquire into  the excesses committed during the  Emergency of 1975.   3.  National emergency under Article 352 was  declared in India for the first time in 1975.   Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIEFzc2FtIG1vdmVtZW50IG1haW5seSBsZWQgYnkgc3R1ZGVudHMgb2YgQXNzYW0gd2FzIHN0YXJ0ZWQgaW4gMTk3OSAgIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIEFsbCBBc3NhbSBTdHVkZW50cyBVbmlvbiAoQUFTVSkgYW5kIHRoZSBBbGwgQXNzYW0gR2FuYSBTYW5ncmFtIFBhcmlzaGFkICAgKEFBR1NQKS4gVGhpcyB3YXMgYSBtb3ZlbWVudCBhZ2FpbnN0IHVuZG9jdW1lbnRlZCBpbW1pZ3JhbnRzIGluIEFzc2FtLiBJdCBvZmZpY2lhbGx5IGVuZGVkIG9uIDE1ICAgQXVndXN0LCAxOTg1IGFmdGVyIGNvbWluZyBvZiBhbiB1bmRlcnN0YW5kaW5nIHdpdGggdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgd2hpY2ggZm91bmQgb2ZmaWNpYWwgICBleHByZXNzaW9uIGluIHRoZSBtZW1vcmFuZHVtIG9mIHVuZGVyc3RhbmRpbmcgcG9wdWxhcmx5IGtub3duIGFzIHRoZSBBc3NhbSBBY2NvcmQgMTk4NS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBJbiBNYXkgMTk3NywgdGhlIGNlbnRyYWwgZ292ZXJubWVudCBhcHBvaW50ZWQgYSBDb21taXNzaW9uIG9mIElucXVpcnkgICBoZWFkZWQgYnkgSnVzdGljZSBKLkMuIFNoYWggKG5vdCBNb2hhbW1hZCBIaWRheWF0dWxsYWgpLCB0byBpbnF1aXJlICdpbnRvIHNldmVyYWwgYXNwZWN0cyBvZiBhbGxlZ2F0aW9ucyAgIG9mIGFidXNlIG9mIGF1dGhvcml0eSwgZXhjZXNzZXMgYW5kIG1hbHByYWN0aWNlcyBjb21taXR0ZWQgYW5kIGFjdGlvbiB0YWtlbiBpbiB0aGUgd2FrZSBvZiB0aGUgICBFbWVyZ2VuY3kgcHJvY2xhaW1lZCBvbiB0aGUgMjV0aCBKdW5lLCAxOTc1Jy4gICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gTmF0aW9uYWwgZW1lcmdlbmN5IHVuZGVyIEFydGljbGUgMzUyIGluIEluZGlhIGR1cmluZyAxOTYyIHdhciAoQ2hpbmEgd2FyKSwgMTk3MSAgIHdhciAoUGFraXN0YW4gd2FyKSwgYW5kIGluIDE5NzUuICAgU291cmNlOiAgTkNFUlQgY2xhc3MxMl9Qb2xpdGljcy1pbi1JbmRpYS1zaW5jZS1JbmRlcGVuZGVuY2UsIGNoYXB0ZXItNiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3      of 8     "
      }
    },
    {
      "index" : 8,
      "question" : "'It is concerned with nature of the  relationship between the individual and  society and of improving these conditions  such that there are fewer constraints to the  development of the individual personality. It  recognizes that one can be free only in society  and hence tries to make that society such that  it enables the development of the individual.'    Which of the following ideals is referred to in  the above paragraph?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBwb3NpdGl2ZSBsaWJlcnR5IGFyZSBjb25jZXJuZWQgd2l0aCBleHBsYWluaW5nIHRoZSBpZGVhIG9mICdmcmVlZG9tIHRvJy4gSXQgaXMgY29uY2VybmVkIHdpdGggbG9va2luZyBhdCAgIHRoZSBjb25kaXRpb25zIGFuZCBuYXR1cmUgb2YgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSBpbmRpdmlkdWFsIGFuZCBzb2NpZXR5IGFuZCBvZiBpbXByb3ZpbmcgdGhlc2UgICBjb25kaXRpb25zIHN1Y2ggdGhhdCB0aGVyZSBhcmUgZmV3ZXIgY29uc3RyYWludHMgdG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBpbmRpdmlkdWFsIHBlcnNvbmFsaXR5LiAgIFBvc2l0aXZlIGxpYmVydHkgcmVjb2duaXNlcyB0aGF0IG9uZSBjYW4gYmUgZnJlZSBvbmx5IGluIHNvY2lldHkgKG5vdCBvdXRzaWRlIGl0KSBhbmQgaGVuY2UgdHJpZXMgdG8gbWFrZSAgIHRoYXQgc29jaWV0eSBzdWNoIHRoYXQgaXQgZW5hYmxlcyB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIGluZGl2aWR1YWwuICAgIEtub3dsZWRnZSBCYXNlKSAgICBOZWdhdGl2ZSBsaWJlcnR5IHNlZWtzIHRvIGRlZmluZSBhbmQgZGVmZW5kIGFuIGFyZWEgaW4gd2hpY2ggdGhlIGluZGl2aWR1YWwgd291bGQgYmUgaW52aW9sYWJsZSwgaW4gICB3aGljaCBoZSBvciBzaGUgY291bGQgJ2RvLCBiZSBvciBiZWNvbWUnIHdoYXRldmVyIGhlIG9yIHNoZSB3aXNoZWQgdG8gJ2RvLCBiZSBvciBiZWNvbWUnLiAgICAgTmVnYXRpdmUgbGliZXJ0eSBpcyB0aGUgYWJzZW5jZSBvZiBvYnN0YWNsZXMsIGJhcnJpZXJzIG9yIGNvbnN0cmFpbnRzLiBPbmUgaGFzIG5lZ2F0aXZlIGxpYmVydHkgdG8gdGhlIGV4dGVudCAgIHRoYXQgYWN0aW9ucyBhcmUgYXZhaWxhYmxlIHRvIG9uZSBpbiB0aGlzIG5lZ2F0aXZlIHNlbnNlLiBQb3NpdGl2ZSBsaWJlcnR5IGlzIHRoZSBwb3NzaWJpbGl0eSBvZiBhY3RpbmcgLSBvciB0aGUgICBmYWN0IG9mIGFjdGluZyAtIGluIHN1Y2ggYSB3YXkgYXMgdG8gdGFrZSBjb250cm9sIG9mIG9uZSdzIGxpZmUgYW5kIHJlYWxpemUgb25lJ3MgZnVuZGFtZW50YWwgcHVycG9zZXMuICAgV2hpbGUgbmVnYXRpdmUgbGliZXJ0eSBpcyB1c3VhbGx5IGF0dHJpYnV0ZWQgdG8gaW5kaXZpZHVhbCBhZ2VudHMsIHBvc2l0aXZlIGxpYmVydHkgaXMgc29tZXRpbWVzICAgYXR0cmlidXRlZCB0byBjb2xsZWN0aXZpdGllcywgb3IgdG8gaW5kaXZpZHVhbHMgY29uc2lkZXJlZCBwcmltYXJpbHkgYXMgbWVtYmVycyBvZiBnaXZlbiBjb2xsZWN0aXZpdGllcy4gICAgTmVnYXRpdmUgbGliZXJ0eSBpcyBhbiBhcmVhIGluIHdoaWNoIG5vIGV4dGVybmFsIGF1dGhvcml0eSBjYW4gaW50ZXJmZXJlLiBUaHVzLCB0aGVyZSBpcyBhbiBhYnNlbmNlIG9mICAgcmVzdHJhaW50cyBvbiB0aGUgYWN0aXZpdGllcyBvZiB0aGUgaW5kaXZpZHVhbHMuIEl0IGlzIGEgbWluaW11bSBhcmVhIHRoYXQgaXMgc2FjcmVkIGFuZCBpbiB3aGljaCB3aGF0ZXZlciAgIHRoZSBpbmRpdmlkdWFsIGRvZXMsIGlzIG5vdCB0byBiZSBpbnRlcmZlcmVkIHdpdGguICAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0yLCBQZy4gMjYtMjggICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Positive liberty   ",
        "option2" : "Social justice   ",
        "option3" : "Equality   ",
        "option4" : "Negative liberty   "
      }
    },
    {
      "index" : 9,
      "question" : "In the context of polity, which one of the  following are most appropriate for the concept  of equality?   1. Access to same opportunities   2. Equality of rights   3. Equal access to privileges   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGFuZCAyIGFyZSBjb3JyZWN0LiBUaGUgY29uY2VwdCBvZiBlcXVhbGl0eSBpbXBsaWVzIHRoYXQgYWxsIHBlb3BsZSwgYXMgaHVtYW4gYmVpbmdzLCBhcmUgZW50aXRsZWQgICB0byB0aGUgc2FtZSByaWdodHMgYW5kIG9wcG9ydHVuaXRpZXMgdG8gZGV2ZWxvcCB0aGVpciBza2lsbHMgYW5kIHRhbGVudHMsIGFuZCB0byBwdXJzdWUgdGhlaXIgZ29hbHMgYW5kICAgYW1iaXRpb25zLiBUaGlzIG1lYW5zIHRoYXQgaW4gYSBzb2NpZXR5IHBlb3BsZSBtYXkgZGlmZmVyIHdpdGggcmVnYXJkIHRvIHRoZWlyIGNob2ljZXMgYW5kIHByZWZlcmVuY2VzLiAgIFRoZXkgbWF5IGFsc28gaGF2ZSBkaWZmZXJlbnQgdGFsZW50cyBhbmQgc2tpbGxzIHdoaWNoIHJlc3VsdHMgaW4gc29tZSBiZWluZyBtb3JlIHN1Y2Nlc3NmdWwgaW4gdGhlaXIgICBjaG9zZW4gY2FyZWVycyB0aGFuIG90aGVycy4gICAgT3B0aW9uIDMgaXMgaW5jb3JyZWN0LiBJdCBpcyBub3QgdGhlIGxhY2sgb2YgZXF1YWxpdHkgb2Ygc3RhdHVzIG9yIHdlYWx0aCBvciBwcml2aWxlZ2UgdGhhdCBpcyBzaWduaWZpY2FudCBidXQgICB0aGUgaW5lcXVhbGl0aWVzIGluIHBlb3BsZSdzIGFjY2VzcyB0byBzdWNoIGJhc2ljIGdvb2RzLCBhcyBlZHVjYXRpb24sIGhlYWx0aCBjYXJlLCBzYWZlIGhvdXNpbmcsIHRoYXQgbWFrZSAgIGZvciBhbiB1bmVxdWFsIGFuZCB1bmp1c3Qgc29jaWV0eS4gICBTb3VyY2U6IFBvbGl0aWNhbCBUaGVvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTMsIFBnLiAzNiAgICAgICAgb2YgMTggICAgICAgIFBhaXIgMiBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBTb2NpYWwsIGVjb25vbWljIGFuZCBwb2xpdGljYWwgaW5lcXVhbGl0aWVzIGFsbCBvdmVyIHRoZSB3b3JsZCBoYXZlIGJlZW4gICBwcm90ZWN0ZWQgYnkgY3VzdG9tcyBhbmQgbGVnYWwgc3lzdGVtcyB0aGF0IHByb2hpYml0ZWQgc29tZSBzZWN0aW9ucyBvZiBzb2NpZXR5IGZyb20gZW5qb3lpbmcgY2VydGFpbiAgIGtpbmRzIG9mIG9wcG9ydHVuaXRpZXMgYW5kIHJld2FyZHMuIEZvcm1hbCBlcXVhbGl0eSByZXF1aXJlcyB0aGF0IHRoZSBnb3Zlcm5tZW50IGFuZCB0aGUgbGF3IG9mIHRoZSAgIGxhbmQgc2hvdWxkIHN0b3AgcHJvdGVjdGluZyB0aGVzZSBzeXN0ZW1zIG9mIGluZXF1YWxpdHkuIFRoZSBDb25zdGl0dXRpb24gcHJvaGliaXRzIGRpc2NyaW1pbmF0aW9uIG9uICAgZ3JvdW5kcyBvZiByZWxpZ2lvbiwgcmFjZSwgY2FzdGUsIHNleCBvciBwbGFjZSBvZiBiaXJ0aC4gVGh1cywgcHJvdmlkaW5nIHNwZWNpYWwgcmFtcHMgZm9yIGRpc2FibGVkIHBlb3BsZSAgIGZvcm1zIHBhcnQgb2YgYWZmaXJtYXRpdmUgYWN0aW9uIGFuZCBkb2VzIG5vdCBjb21lIHVuZGVyIGZvcm1hbCBlcXVhbGl0eS4gICAgUGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkLiBJbiBJbmRpYSwgbWFueSBmYWNlIGxhY2sgb2YgZXF1YWwgb3Bwb3J0dW5pdGllcyBmcm9tIGJvdGggbGFjayBvZiBmYWNpbGl0aWVzIGFuZCAgIHByZXZhaWxpbmcgY3VzdG9tcyBpbiB0aGUgc29jaWV0eS4gV29tZW4sIGZvciBpbnN0YW5jZSwgbWF5IG5vdCBlbmpveSBlcXVhbCByaWdodHMgb2YgaW5oZXJpdGFuY2UgaW4gICBzb21lIGdyb3Vwcywgb3IgdGhlcmUgbWF5IGJlIHNvY2lhbCBwcm9oaWJpdGlvbnMgcmVnYXJkaW5nIHRoZWlyIHRha2luZyBwYXJ0IGluIGNlcnRhaW4ga2luZHMgb2YgYWN0aXZpdGllcywgICBvciB0aGV5IG1heSBldmVuIGJlIGRpc2NvdXJhZ2VkIGZyb20gb2J0YWluaW5nIGhpZ2hlciBlZHVjYXRpb24uIFRoZSBzdGF0ZSBzaG91bGQgbWFrZSBwb2xpY2llcyB0byAgIHByZXZlbnQgZGlzY3JpbWluYXRpb24gb3IgaGFyYXNzbWVudCBvZiB3b21lbiBpbiBwdWJsaWMgcGxhY2VzIG9yIGVtcGxveW1lbnQsIHRvIHByb3ZpZGUgaW5jZW50aXZlcyB0byAgIG9wZW4gdXAgZWR1Y2F0aW9uIG9yIGNlcnRhaW4gcHJvZmVzc2lvbnMgdG8gd29tZW4sIGFuZCBvdGhlciBzdWNoIG1lYXN1cmVzLiBUaHVzLCBwcm92aWRpbmcgZXF1YWwgICBpbmhlcml0YW5jZSByaWdodHMgdG8gd29tZW4gaXMgcHJvdmlkaW5nIGVxdWFsaXR5IG9mIG9wcG9ydHVuaXRpZXMuICAgIFNvdXJjZTogUG9saXRpY2FsIFRoZW9yeSwgTkNFUlQgWEksIENoYXB0ZXItMywgUGcuIDM5LCA0NS00NiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements in the  context of Feminism:   1.  It is a political doctrine that aims to provide  special privileges to women.   2.  It believes that inequality between men and  women is the result of patriarchy.   3. Feminist do not make the distinction  between 'sex' and 'gender' to promote  equality.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRmVtaW5pc20gaXMgYSBwb2xpdGljYWwgZG9jdHJpbmUgb2YgZXF1YWwgcmlnaHRzIGZvciB3b21lbiBhbmQgbWVuLiBGZW1pbmlzbSAgIGlzIG9ubHkgdHJ5aW5nIHRvIHByb3ZpZGUgYSBsZXZlbCBwbGF5aW5nIGZpZWxkIHRvIHdvbWVuLCBub3QgZ2l2ZSB0aGVtIGV4dHJhIHByaXZpbGVnZXMuIEZlbWluaXN0cyBhcmUgICB0aG9zZSBtZW4gYW5kIHdvbWVuIHdobyBiZWxpZXZlIHRoYXQgbWFueSBvZiB0aGUgaW5lcXVhbGl0aWVzIHdlIHNlZSBpbiBzb2NpZXR5IGJldHdlZW4gbWVuIGFuZCAgIHdvbWVuIGFyZSBuZWl0aGVyIG5hdHVyYWwgbm9yIG5lY2Vzc2FyeSBhbmQgY2FuIGJlIGFsdGVyZWQgc28gdGhhdCBib3RoIHdvbWVuIGFuZCBtZW4gY2FuIGxlYWQgZnJlZSAgIGFuZCBlcXVhbCBsaXZlcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIGZlbWluaXN0cywgaW5lcXVhbGl0eSBiZXR3ZWVuIG1lbiBhbmQgd29tZW4gaW4gc29jaWV0eSBpcyB0aGUgICByZXN1bHQgb2YgcGF0cmlhcmNoeS4gVGhpcyB0ZXJtIHJlZmVycyB0byBhIHNvY2lhbCwgZWNvbm9taWMgYW5kIGN1bHR1cmFsIHN5c3RlbSB0aGF0IHZhbHVlcyBtZW4gbW9yZSAgIHRoYW4gd29tZW4gYW5kIGdpdmVzIG1lbiBwb3dlciBvdmVyIHdvbWVuLiBGZW1pbmlzdHMgc2hvdyB1cyB0aGF0IG11Y2ggb2YgdGhlIGluZXF1YWxpdHkgYmV0d2VlbiAgIG1lbiBhbmQgd29tZW4gaXMgcHJvZHVjZWQgYnkgc29jaWV0eSBhbmQgbm90IGJ5IG5hdHVyZS4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBQYXRyaWFyY2h5IGlzIGJhc2VkIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgbWVuIGFuZCB3b21lbiBhcmUgZGlmZmVyZW50IGJ5ICAgbmF0dXJlIGFuZCB0aGF0IHRoaXMgZGlmZmVyZW5jZSBqdXN0aWZpZXMgdGhlaXIgdW5lcXVhbCBwb3NpdGlvbnMgaW4gc29jaWV0eS4gRmVtaW5pc3RzIHF1ZXN0aW9ucyB0aGlzIHdheSBvZiAgIHRoaW5raW5nIGJ5IG1ha2luZyBhIGRpc3RpbmN0aW9uIGJldHdlZW4gJ3NleCcgaS5lLiBiaW9sb2dpY2FsIGRpZmZlcmVuY2UgYmV0d2VlbiBtZW4gYW5kIHdvbWVuLCBhbmQgICAnZ2VuZGVyJyB3aGljaCBkZXRlcm1pbmVzIHRoZSBkaWZmZXJlbnQgcm9sZXMgdGhhdCBtZW4gYW5kIHdvbWVuIHBsYXkgaW4gc29jaWV0eS4gRm9yIGluc3RhbmNlLCB0aGUgICBiaW9sb2dpY2FsIGZhY3QgdGhhdCBvbmx5IHdvbWVuIGNhbiBiZWNvbWUgcHJlZ25hbnQgYW5kIGJlYXIgY2hpbGRyZW4gZG9lcyBub3QgcmVxdWlyZSB0aGF0IG9ubHkgICB3b21lbiBzaG91bGQgbG9vayBhZnRlciBjaGlsZHJlbiBhZnRlciB0aGV5IGFyZSBib3JuLiAgICBTb3VyY2U6IFBvbGl0aWNhbCBUaGVvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTMsIFBnLiA0MiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3      of 8     "
      }
    },
    {
      "index" : 15,
      "question" : "Which one of the following statements is  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJpZ2h0cyBhcmUgbGVnYWwgYW5kIG1vcmFsIGVudGl0bGVtZW50cyBvciBjbGFpbXMgb2YgYSBwZXJzb24gb3ZlciBvdGhlciBmZWxsb3cgYmVpbmdzLCBvdmVyIHNvY2lldHkgYW5kICAgb3ZlciB0aGUgZ292ZXJubWVudC4gIEZ1bmRhbWVudGFsIHJpZ2h0cyBndWFyYW50ZWVkIGJ5IHRoZSBDb25zdGl0dXRpb24gYXJlLCBpbiB0aGUgYWJzZW5jZSBvZiBzcGVjaWZpYyAgIGNvbnN0aXR1dGlvbmFsIHByb3Zpc2lvbnMsIG1haW5seSBlbmZvcmNlYWJsZSBhZ2FpbnN0IHRoZSBTdGF0ZS4gVGhlIGRlZmluaXRpb24gb2YgJ3RoZSBTdGF0ZScgaW4gYXJ0aWNsZSAxMiAgIGJlaW5nIGFuICxpbmNsdXNpdmUnIG9uZSwgY291cnRzIGhhdmUgcnVsZWQgdGhhdCB3aGVyZSB0aGVyZSBpcyBwZXJ2YXNpdmUgb3IgcHJlZG9taW5hbnQgZ292ZXJubWVudGFsICAgY29udHJvbCBvciBzaWduaWZpY2FudCBpbnZvbHZlbWVudCBpbiBpdHMgYWN0aXZpdHksIHN1Y2ggYm9kaWVzLCBlbnRpdGllcyBhbmQgb3JnYW5pemF0aW9ucyBmYWxsIHdpdGhpbiB0aGUgICBkZWZpbml0aW9uIG9mIHRoZSBTdGF0ZS4gUmlnaHRzIGFyZSBjbGFpbWVkIGJ5IHRoZSBjaXRpemVucyBhZ2FpbnN0IHRoZSBzdGF0ZSBoYXMgdG8gcHJvdGVjdCB0aGUgY2l0aXplbnMgZnJvbSAgIG9wcHJlc3Npb24gYnkgc29jaWV0eS4gVGhlIHN0YXRlIGNhbm5vdCBjbGFpbSBvciBkZW1hbmQgYWdhaW5zdCB0aGUgY2l0aXplbnMsIGJlY2F1c2UgaXQgdGFrZXMgYXdheSB0aGUgICByaWdodHMgb2YgaW5kaXZpZHVhbHMgYW5kIHJlc3RyYWludCB0aGVtLiAgICBTb3VyY2UpIGh0dHBzOi8vbGVnYWxhZmZhaXJzLmdvdi5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL2NoYXB0ZXIlMjAzLnBkZiwgVVBTQyAyMDE3ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Rights are claims of the State against the   citizens.    ",
        "option2" : "Rights are privileges which are   incorporated in the Constitution of a   State.    ",
        "option3" : "Rights are claims of the citizens against the   State.    ",
        "option4" : "Rights are privileges of a few citizens   against the many.     "
      }
    },
    {
      "index" : 16,
      "question" : "Which of the following constitutes the  principles of 'Social Justice'?   1.  Principle of treating equal equally   2.  Rewarding people in proportion to their  status   3.  Recognizing special needs of people while  distributing rewards   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB0aHJlZSBwcmluY2lwbGVzIG9mIHNvY2lhbCBqdXN0aWNlIGFyZTogICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gUHJpbmNpcGxlIG9mIHRyZWF0aW5nIGVxdWFscyBlcXVhbGx5OiBJdCBpcyBjb25zaWRlcmVkIHRoYXQgYWxsIGluZGl2aWR1YWxzIHNoYXJlICAgY2VydGFpbiBjaGFyYWN0ZXJpc3RpY3MgYXMgaHVtYW4gYmVpbmdzLiBUaGVyZWZvcmUsIHRoZXkgZGVzZXJ2ZSBlcXVhbCByaWdodHMgYW5kIGVxdWFsIHRyZWF0bWVudC4gICAgICBvZiAxOCAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFByb3BvcnRpb25hbGl0eTogUHJvdmlkZWQgZXZlcnlib2R5IHN0YXJ0cyBmcm9tIHRoZSBzYW1lIGJhc2UgbGluZSBvZiBlcXVhbCAgIHJpZ2h0cywganVzdGljZSBpbiBzdWNoIGNhc2VzIHdvdWxkIG1lYW4gcmV3YXJkaW5nIHBlb3BsZSBpbiBwcm9wb3J0aW9uIHRvIHRoZSBzY2FsZSBhbmQgcXVhbGl0eSBvZiB0aGVpciAgIGVmZm9ydCAobm90IHN0YXR1cykuIEZvciBqdXN0aWNlIGluIHNvY2lldHksIHRoZSBwcmluY2lwbGUgb2YgZXF1YWwgdHJlYXRtZW50IG5lZWRzIHRvIGJlIGJhbGFuY2VkIHdpdGggdGhlICAgcHJpbmNpcGxlIG9mIHByb3BvcnRpb25hbGl0eS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gUmVjb2duaXRpb24gb2Ygc3BlY2lhbCBuZWVkczogQSBzb2NpZXR5IG5lZWRzIHRvIHRha2UgaW50byBhY2NvdW50IHNwZWNpYWwgbmVlZHMgICBvZiBwZW9wbGUgd2hpbGUgZGlzdHJpYnV0aW5nIHJld2FyZHMgb3IgZHV0aWVzLiBJdCBkb2VzIG5vdCBuZWNlc3NhcmlseSBjb250cmFkaWN0IHRoZSBwcmluY2lwbGUgb2YgZXF1YWwgICB0cmVhdG1lbnQgc28gbXVjaCBhcyBleHRlbmQgaXQgYmVjYXVzZSB0aGUgcHJpbmNpcGxlIG9mIHRyZWF0aW5nIGVxdWFscyBlcXVhbGx5IGNvdWxkIGltcGx5IHRoYXQgcGVvcGxlICAgd2hvIGFyZSBub3QgZXF1YWwgaW4gY2VydGFpbiBpbXBvcnRhbnQgcmVzcGVjdHMgY291bGQgYmUgdHJlYXRlZCBkaWZmZXJlbnRseS4gICAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci00LCBQZy4gNTUtNTcgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 17,
      "question" : "In the context of Indian Constitution,  which of the following options are appropriate  for imposing 'Reasonable Restriction' in India?  1. Limitations imposed upon a person's rights   2. Restrictions on legislative power of  government   3. Limitation imposed upon judiciary by  legislature   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9ubHkgb3B0aW9uIDEgaXMgY29ycmVjdC4gVGhlIHBocmFzZSAncmVhc29uYWJsZSByZXN0cmljdGlvbiBjb25ub3RlcyB0aGF0IHRoZSBsaW1pdGF0aW9uIGltcG9zZWQgdXBvbiBhICAgcGVyc29uIGluIGVuam95bWVudCBvZiB0aGUgcmlnaHQgc2hvdWxkIG5vdCBiZSBhcmJpdHJhcnkgb3Igb2YgYW4gZXhjZXNzaXZlIG5hdHVyZSwgYmV5b25kIHdoYXQgaXMgICByZXF1aXJlZCBpbiB0aGUgaW50ZXJlc3Qgb2YgdGhlIHB1YmxpYy4gTGVnaXNsYXRpb24gd2hpY2ggYXJiaXRyYXJpbHkgb3IgZXhjZXNzaXZlbHkgaW52YWRlcyB0aGUgcmlnaHQgY2Fubm90ICAgYmUgc2FpZCB0byBjb250YWluIHRoZSBxdWFsaXR5IG9mIHJlYXNvbmFibGVuZXNzIHVubGVzcyBpdCBzdHJpa2VzIGEgcHJvcGVyIGJhbGFuY2UgYmV0d2VlbiB0aGUgZnJlZWRvbSAgIGd1YXJhbnRlZWQgaW4gQXJ0LjE5ICgxKSgyKSBhbmQgdGhlIHNvY2lhbCBjb250cm9sIHBlcm1pdHRlZCBieSBjbC4gKDYpIG9mIEFydC4gMTksIGl0IG11c3QgYmUgaGVsZCB0byBiZSAgIHdhbnRpbmcgaW4gdGhhdCBxdWFsaXR5LiAgICBTb3VyY2U6IFBvbGl0aWNhbCBUaGVvcnkgYnkgTkNFUlQsIENoYXB0ZXIgMiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 18,
      "question" : "In Indian Constitution, gender equality is  ensured at several instances. Which of the  following instances given below is/are  correct?   1.  Fundamental Duties ensures for  renouncing practices derogatory to the  dignity of women.   2.  Directive Principles of State Policy (DPSP)  secures equally the right to an adequate  means of livelihood for both men and  women.   3.  Fundamental rights ensures humane  conditions of work and for maternity relief  for women.  4.  Part IX of the constitution ensures half of  the seats to be reserved for women in  panchayats.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBGdW5kYW1lbnRhbCBkdXRpZXMgcHJvbW90ZSBoYXJtb255IGFuZCB0aGUgc3Bpcml0IG9mIGNvbW1vbiBicm90aGVyaG9vZCAgIGFtb25nc3QgYWxsIHRoZSBwZW9wbGUgb2YgSW5kaWEgYW5kIGVuc3VyZXMgcmVub3VuY2UgcHJhY3RpY2VzIGRlcm9nYXRvcnkgdG8gdGhlIGRpZ25pdHkgb2Ygd29tZW4uICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIERpcmVjdGl2ZSBwcmluY2lwbGVzIHVuZGVyIEFydGljbGUgMzkoYSkgc2VjdXJlcyBlcXVhbGx5IHRoZSByaWdodCB0byBhbiBhZGVxdWF0ZSAgIG1lYW5zIG9mIGxpdmVsaWhvb2QgZm9yIGJvdGggbWVuIGFuZCB3b21lbi4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBBcnRpY2xlIDQyIHVuZGVyIERQU1AgYW5kIG5vdCBmdW5kYW1lbnRhbCByaWdodHMsIGRpcmVjdHMgdGhlIFN0YXRlIHRvIG1ha2UgICBwcm92aXNpb24gZm9yIHNlY3VyaW5nIGp1c3RpY2UgYW5kIGh1bWFuZSBjb25kaXRpb25zIG9mIHdvcmsgYW5kIGZvciBtYXRlcm5pdHkgcmVsaWVmLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gQXJ0aWNsZSAyNDNEICgzKSB1bmRlciBQYXJ0IElYIHByb3ZpZGVzIG5vdCBsZXNzIHRoYW4gb25lLXRoaXJkIChpbmNsdWRpbmcgdGhlICAgbnVtYmVyIG9mIHNlYXRzIHJlc2VydmVkIGZvciB3b21lbiBiZWxvbmdpbmcgdG8gdGhlIFNjaGVkdWxlZCBDYXN0ZXMgYW5kIHRoZSBTY2hlZHVsZWQgVHJpYmVzKSBvZiB0aGUgICB0b3RhbCBudW1iZXIgb2Ygc2VhdHMgdG8gYmUgZmlsbGVkIGJ5IGRpcmVjdCBlbGVjdGlvbiBpbiBldmVyeSBQYW5jaGF5YXQgdG8gYmUgcmVzZXJ2ZWQgZm9yIHdvbWVuLiAgICBTb3VyY2U6IExheG1pa2FudGggSW5kaWFuIHBvbGl0eSA2dGggZWRpdGlvbiBwYWdlIDEwOTYgKFBkZikgICAgaHR0cDovL21vc3BpLm5pYy5pbi9zaXRlcy9kZWZhdWx0L2ZpbGVzL3JlcG9ydHNfYW5kX3B1YmxpY2F0aW9uL2Nzb19zb2NpYWxfc3RhdGljZXNfZGl2aXNpb24vQ29uc3RpICB0dXRpb25hbCZMZWdhbF9SaWdodHMucGRmICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 19,
      "question" : "Which of the following fundamental  rights are available to both citizens as well as  foreigners?   1. Protection in respect of conviction for  offences  2. Freedom of speech and expression.   3. Freedom to manage religious affairs.   4. Protection of interests of minorities.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEZ1bmRhbWVudGFsIHJpZ2h0cyBhdmFpbGFibGUgdG8gYm90aCBjaXRpemVucyBhbmQgZm9yZWlnbmVycyAoZXhjZXB0IGVuZW15IGFsaWVucykgLSAgICAgQXJ0aWNsZSAxNCAtIEVxdWFsaXR5IGJlZm9yZSB0aGUgbGF3IGFuZCBlcXVhbCBwcm90ZWN0aW9uIG9mIGxhd3MuICAgIEFydGljbGUgMjAgLSBQcm90ZWN0aW9uIGluIHJlc3BlY3Qgb2YgY29udmljdGlvbiBmb3Igb2ZmZW5jZXMuICAgIEFydGljbGUgMjEgLSBQcm90ZWN0aW9uIG9mIGxpZmUgYW5kIHBlcnNvbmFsIGxpYmVydHkuICAgIEFydGljbGUgMjFBIC0gUmlnaHQgdG8gZWxlbWVudGFyeSBlZHVjYXRpb24uICAgIEFydGljbGUgMjIgLSBQcm90ZWN0aW9uIGFnYWluc3QgYXJyZXN0IGFuZCBkZXRlbnRpb24gaW4gY2VydGFpbiBjYXNlcy4gICAgQXJ0aWNsZSAyMyAtIFByb2hpYml0aW9uIG9mIHRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyLiAgICBBcnRpY2xlIDI0IC0gUHJvaGliaXRpb24gb2YgZW1wbG95bWVudCBvZiBjaGlsZHJlbiBpbiBmYWN0b3JpZXMgZXRjLiAgICBBcnRpY2xlIDI1IC0gRnJlZWRvbSBvZiBjb25zY2llbmNlIGFuZCBmcmVlIHByb2Zlc3Npb24sIHByYWN0aWNlIGFuZCBwcm9wYWdhdGlvbiBvZiByZWxpZ2lvbi4gICAgQXJ0aWNsZSAyNiAtIEZyZWVkb20gdG8gbWFuYWdlIHJlbGlnaW91cyBhZmZhaXJzLiAgICBBcnRpY2xlIDI3IC0gRnJlZWRvbSBmcm9tIHBheW1lbnQgb2YgdGF4ZXMgZm9yIHByb21vdGlvbiBvZiBhbnkgcmVsaWdpb24uICAgIEFydGljbGUgMjggLSBGcmVlZG9tIGZyb20gYXR0ZW5kaW5nIHJlbGlnaW91cyBpbnN0cnVjdGlvbiBvciB3b3JzaGlwIGluIGNlcnRhaW4gZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zLiAgICAgS25vd2xlZGdlIEJhc2U6IEZ1bmRhbWVudGFsIHJpZ2h0cyBhdmFpbGFibGUgb25seSB0byBjaXRpemVucyBhbmQgbm90IHRvIGZvcmVpZ25lcnMgLSAgICAgQXJ0aWNsZSAxNSAtIFByb2hpYml0aW9uIG9mIGRpc2NyaW1pbmF0aW9uIG9uIGdyb3VuZHMgb2YgcmVsaWdpb24sIHJhY2UsIGNhc3RlLCBzZXggb3IgcGxhY2Ugb2YgYmlydGguICAgICAgb2YgMTggICAgICAgQXJ0aWNsZSAxNiAtIEVxdWFsaXR5IG9mIG9wcG9ydHVuaXR5IGluIG1hdHRlcnMgb2YgcHVibGljIGVtcGxveW1lbnQuICAgIEFydGljbGUgMTkgLSBQcm90ZWN0aW9uIG9mIHNpeCByaWdodHMgcmVsYXRlZCB0byBmcmVlZG9tIC0gKGEpIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbjsgKGIpIHRvIGFzc2VtYmxlICAgcGVhY2VhYmx5IGFuZCB3aXRob3V0IGFybXM7IChjKSB0byBmb3JtIGFzc29jaWF0aW9ucyBvciB1bmlvbnM7IChkKSB0byBtb3ZlIGZyZWVseSB0aHJvdWdob3V0IHRoZSAgIHRlcnJpdG9yeSBvZiBJbmRpYTsgKGUpIHRvIHJlc2lkZSBhbmQgc2V0dGxlIGluIGFueSBwYXJ0IG9mIHRoZSB0ZXJyaXRvcnkgb2YgSW5kaWE7IGFuZCAoZikgdG8gcHJhY3RpY2UgYW55ICAgcHJvZmVzc2lvbiwgb3IgdG8gY2Fycnkgb24gYW55IG9jY3VwYXRpb24sIHRyYWRlIG9yIGJ1c2luZXNzLiAgICBBcnRpY2xlIDI5IC0gUHJvdGVjdGlvbiBvZiBsYW5ndWFnZSwgc2NyaXB0IGFuZCBjdWx0dXJlIG9mIG1pbm9yaXRpZXMuICAgIEFydGljbGUgMzAgLSBSaWdodCBvZiBtaW5vcml0aWVzIHRvIGVzdGFibGlzaCBhbmQgYWRtaW5pc3RlciBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMuICAgIFNvdXJjZTogTSBMYXhtaWthbnRoLCBJbmRpYW4gcG9saXR5LCA2dGggZWRpdGlvbiwgcGFnZSBuby4gNy40ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 20,
      "question" : "Right to Privacy is protected as an  intrinsic part of Right to Life and Personal  Liberty. Which of the following in the  Constitution of India correctly and  appropriately imply the above statement?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIEluIEp1c3RpY2UgSy4gUy4gUHV0dGFzd2FteSAoUmV0ZCkgYW5kIG90aGVycyB2cyBVbmlvbiBvZiBJbmRpYSwgdGhlIFN1cHJlbWUgQ291cnQgb2JzZXJ2ZWQgdGhhdCAnUmlnaHQgdG8gICBQcml2YWN5JyBpcyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIFJpZ2h0IHRvIExpZmUgYW5kIFBlcnNvbmFsIExpYmVydHkgZ3VhcmFudGVlZCBpbiBBcnRpY2xlIDIxIG9mIHRoZSAgIENvbnN0aXR1dGlvbi4gIEEgbmluZS1qdWRnZSBiZW5jaCBvZiB0aGUgU3VwcmVtZSBDb3VydCBkZWNsYXJlZCB0aGF0IHRoZSByaWdodCB0byBwcml2YWN5IGlzIGEgICBmdW5kYW1lbnRhbCByaWdodCBwcm90ZWN0ZWQgdW5kZXIgUGFydCBJSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYS4gV2hpbGUgcHJpbWFyaWx5IGZvY3VzZWQgb24gdGhlICAgaW5kaXZpZHVhbCdzIHJpZ2h0IGFnYWluc3QgdGhlIFN0YXRlIGZvciB2aW9sYXRpb25zIG9mIHRoZWlyIHByaXZhY3ksIHRoaXMgbGFuZG1hcmsganVkZ2VtZW50IGhhZCAgIHJlcGVyY3Vzc2lvbnMgYWNyb3NzIGJvdGggU3RhdGUgYW5kIG5vbi1TdGF0ZSBhY3RvcnMgYW5kIGlzIGxpa2VseSB0byByZXN1bHQgaW4gdGhlIGVuYWN0bWVudCBvZiBhICAgY29tcHJlaGVuc2l2ZSBsYXcgb24gcHJpdmFjeS4gICAgU291cmNlKSBodHRwczovL3d3dy5tb25kYXEuY29tL2luZGlhL3ByaXZhY3ktcHJvdGVjdGlvbi82MjUxOTIvc3VwcmVtZS1jb3VydC1kZWNsYXJlcy1yaWdodC0gIHRvLXByaXZhY3ktYS1mdW5kYW1lbnRhbC1yaWdodCAgLCBVUFNDIDIwMTggICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 14 and the provisions under the   42nd Amendment to the Constitution    ",
        "option2" : "Article 17 and the Directive Principles of   State Policy in Part IV    ",
        "option3" : "Article 21 and the freedoms guaranteed in   Part III    ",
        "option4" : "Article 24 and the provisions under the   44th Amendment to the Constitution                of 8     "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements with  reference to the 'Dalit Panthers' movement in  India:   1.  Dalit Panthers was a militant organization  of Dalit youths in Uttar Pradesh.   2.  The larger ideological agenda of the Dalit  Panthers was to destroy the caste system.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQnkgdGhlIGVhcmx5IDE5NzBzIGluIEluZGlhLCB0aGUgZmlyc3QtZ2VuZXJhdGlvbiBEYWxpdCBncmFkdWF0ZXMsICAgIGVzcGVjaWFsbHkgdGhvc2UgbGl2aW5nIGluIGNpdHkgc2x1bXMgYmVnYW4gdG8gYXNzZXJ0IHRoZW1zZWx2ZXMgZnJvbSB2YXJpb3VzIHBsYXRmb3Jtcy4gRGFsaXQgUGFudGhlcnMsICAgd2FzIHN1Y2ggYSBtaWxpdGFudCBvcmdhbmlzYXRpb24gb2YgRGFsaXQgeW91dGhzLiBJdCB3YXMgZm9ybWVkIGluIE1haGFyYXNodHJhIChhbmQgbm90IGluIFV0dGFyICAgUHJhZGVzaCkgaW4gMTk3Mi4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIGxhcmdlciBpZGVvbG9naWNhbCBhZ2VuZGEgb2YgdGhlIFBhbnRoZXJzIHdhcyB0byBkZXN0cm95IHRoZSBjYXN0ZSBzeXN0ZW0uICAgSXQgYWxzbyBhaW1lZCB0byBidWlsZCBhbiBvcmdhbmlzYXRpb24gb2YgYWxsIG9wcHJlc3NlZCBzZWN0aW9ucyBsaWtlIHRoZSBsYW5kbGVzcyBwb29yIHBlYXNhbnRzIGFuZCB1cmJhbiAgIGluZHVzdHJpYWwgd29ya2VycyBhbG9uZyB3aXRoIERhbGl0cy4gICAgS0I6IER1cmluZyB0aGUgMTk3MHMsIERhbGl0IFBhbnRoZXJzIHJlc29ydGVkIHRvIG1hc3MgYWN0aW9uIGZvciBhc3NlcnRpb24gb2YgRGFsaXRzJyByaWdodHMuIEl0IHdhcyAgIG1haW5seSBiZWNhdXNlIHRoZSBwb2xpdGljYWwgcGFydGllcyBzdXBwb3J0ZWQgYnkgdGhlIERhbGl0cywgbGlrZSB0aGUgUmVwdWJsaWNhbiBQYXJ0eSBvZiBJbmRpYSwgd2VyZSBub3QgICBzdWNjZXNzZnVsIGluIGVsZWN0b3JhbCBwb2xpdGljcy4gVGhlc2UgcGFydGllcyBhbHdheXMgcmVtYWluZWQgbWFyZ2luYWw7IGhhZCB0byBhbGx5IHdpdGggc29tZSBvdGhlciBwYXJ0eSAgIGluIG9yZGVyIHRvIHdpbiBlbGVjdGlvbnMgYW5kIGZhY2VkIGNvbnN0YW50IHNwbGl0cy4gICAgU291cmNlOiAgTkNFUlQgY2xhc3MxMl9Qb2xpdGljcy1pbi1JbmRpYS1zaW5jZS1JbmRlcGVuZGVuY2UsIGNoYXB0ZXItNyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements with  reference to peasants' movements In India  during 1980s:    1.  These movements focused for lowering of  government dues such as canal water  charges.   2.  These movements were not confined to  upper sections of peasantry.   3.  These movements believed that farmers are  exploited by urban interests.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSAnbmV3JyBmYXJtZXJzJyBtb3ZlbWVudHMgdGhhdCBoYWQgYXR0cmFjdGVkIG11Y2ggbWVkaWEgYW5kIHBvbGl0aWNhbCAgIGF0dGVudGlvbiwgZXNwZWNpYWxseSBpbiB0aGUgMTk4MHMsIGZvY3VzZWQgbWFpbmx5IG9uIGRlbWFuZGluZyByZW11bmVyYXRpdmUgcHJpY2VzIGZvciBhZ3JpY3VsdHVyYWwgICBwcm9kdWNlLiBUaGV5IGFsc28gcHJvdGVzdGVkIGZvciBsb3dlcmluZyBvciBlbGltaW5hdGlvbiBvZiBnb3Zlcm5tZW50IGR1ZXMgc3VjaCBhcyBjYW5hbCB3YXRlciAgIGNoYXJnZXMsIGVsZWN0cmljaXR5IGNoYXJnZXMsIGludGVyZXN0IHJhdGVzIGFuZCBwcmluY2lwYWwgb2YgbG9hbnMsIGV0Yy4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFZlcnkgZmV3IHBlYXNhbnRzJyBvcmdhbml6YXRpb25zIHdlbnQgYmV5b25kIHdoYXQgY2FuIGJlIGRlc2NyaWJlZCBhcyAgIGxhbmRvd25pbmcgcGVhc2FudHMnIGlzc3Vlcy4gVGhlc2Ugb3JnYW5pemF0aW9ucyBzaG93ZWQgbGl0dGxlIGNvbmNlcm4gZm9yIHRoZSBsYW5kbGVzcyBydXJhbCBwb29yIG9yICAgcnVyYWwgd29tZW4uIEl0IHdhcywgaG93ZXZlciwgdHJ1ZSB0aGF0IHRoZXkgd2VyZSBicm9hZCBiYXNlZCBhbW9uZyB0aGUgcGVhc2FudHJ5IGFuZCBub3QgY29uZmluZWQgdG8gICB0aGUgdXBwZXIgc2VjdGlvbnMsIGFzIGFsbGVnZWQgYnkgc29tZSBjcml0aWNzLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgYmFzaWMgdW5kZXJzdGFuZGluZyBvbiB3aGljaCB0aGUgbW92ZW1lbnRzIHJlc3RlZCBpcyB0aGF0IHRoZSBnb3Zlcm5tZW50ICAgbWFpbnRhaW5zIGFncmljdWx0dXJhbCBwcmljZXMgYXQgYW4gYXJ0aWZpY2lhbGx5IGxvdyBsZXZlbCBpbiBvcmRlciB0byBwcm92aWRlIGNoZWFwIGZvb2QgYW5kIHJhdyBtYXRlcmlhbHMgICB0byB1cmJhbiBhcmVhcywgYW5kIHRoZSBjb25zZXF1ZW50IGRpc3Bhcml0eSBpbiBwcmljZXMgcmVzdWx0cyBpbiBmYXJtZXJzIHBheWluZyBoaWdoIHByaWNlcyBmb3IgaW5kdXN0cmlhbCAgIGdvb2RzIG5lZWRlZCBhcyBpbnB1dHMgaW50byBhZ3JpY3VsdHVyZSBhbmQgcmVjZWl2aW5nIGxvdyByZXR1cm5zIGZvciB0aGVpciBwcm9kdWNlLiBBcyBhIHJlc3VsdCwgZmFybWVycyAgIGFyZSBleHBsb2l0ZWQgYnkgdXJiYW4gaW50ZXJlc3RzLCBhbmQgYXJlIHZpY3RpbXMgb2YgaW50ZXJuYWwgY29sb25pYWxpc20uICAgICAgIG9mIDE4ICAgICAgIFNvdXJjZTogIE5DRVJUIGNsYXNzMTJfUG9saXRpY3MtaW4tSW5kaWEtc2luY2UtSW5kZXBlbmRlbmNlLCBjaGFwdGVyLTcgICAgSW5kaWEgc2luY2UgaW5kZXBlbmRlbmNlOmNoLTM0OiBBZ3JhcmlhbiBTdHJ1Z2dsZXMgU2luY2UgSW5kZXBlbmRlbmNlICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following statement(s)  reflects the view of Libertarians on equality?    1. They believe open and fair competition is  necessary to achieve equality.   2. They believe public control over essential  resources is necessary to achieve equality.   3. They believe that political, social and  economic equalities are necessarily inked.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuICBMaWJlcmFscyB1cGhvbGQgdGhlIHByaW5jaXBsZSBvZiBjb21wZXRpdGlvbiBhcyB0aGUgbW9zdCBlZmZpY2llbnQgYW5kIGZhaXIgd2F5IG9mICAgZGlzdHJpYnV0aW5nIHJlc291cmNlcyBhbmQgcmV3YXJkcyBpbiBzb2NpZXR5LiBUaGV5IGJlbGlldmUgdGhhdCB3aGlsZSBzdGF0ZXMgbWF5IGhhdmUgdG8gaW50ZXJ2ZW5lIHRvIHRyeSAgIGFuZCBlbnN1cmUgYSBtaW5pbXVtIHN0YW5kYXJkIG9mIGxpdmluZyBhbmQgZXF1YWwgb3Bwb3J0dW5pdGllcyBmb3IgYWxsLCB0aGlzIGNhbm5vdCBieSBpdHNlbGYgYnJpbmcgICBlcXVhbGl0eSBhbmQganVzdGljZSB0byBzb2NpZXR5LiBDb21wZXRpdGlvbiBiZXR3ZWVuIHBlb3BsZSBpbiBmcmVlIGFuZCBmYWlyIGNvbmRpdGlvbnMgaXMgdGhlIG1vc3QganVzdCAgIGFuZCBlZmZpY2llbnQgd2F5IG9mIGRpc3RyaWJ1dGluZyByZXdhcmRzIGluIGEgc29jaWV0eS4gICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiAgU29jaWFsaXNtIChub3QgbGliZXJhbHMpIGFkdm9jYXRlcyB0aGF0IHNvbWUga2luZCBvZiBnb3Zlcm5tZW50IHJlZ3VsYXRpb24sICAgcGxhbm5pbmcgYW5kIGNvbnRyb2wgb3ZlciBjZXJ0YWluIGFyZWFzIHN1Y2ggYXMgZWR1Y2F0aW9uIGFuZCBoZWFsdGhjYXJlLiAgICBPcHRpb24gMyBpcyBpbmNvcnJlY3QuICBVbmxpa2UgU29jaWFsaXN0cywgbGliZXJhbHMgZG8gbm90IGJlbGlldmUgdGhhdCBwb2xpdGljYWwsIGVjb25vbWljIGFuZCBzb2NpYWwgICBpbmVxdWFsaXRpZXMgYXJlIG5lY2Vzc2FyaWx5IGxpbmtlZC4gVGhleSBtYWludGFpbiB0aGF0IGluZXF1YWxpdGllcyBpbiBlYWNoIG9mIHRoZXNlIHNwaGVyZXMgc2hvdWxkIGJlICAgdGFja2xlZCBhcHByb3ByaWF0ZWx5LiAgICBTb3VyY2U6IENoYXB0ZXIgMywgUG9saXRpY2FsIFRoZW9yeSBDbGFzcyBYSSBOQ0VSVCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 24,
      "question" : "What lessons can we draw from the  process of National integration in post- independent India?   1.  Regional aspirations should not be met on  regular basis.   2.  Best way to deal with regional aspiration is  through suppression.   3.  Regions should be given a share in decision  making.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIExlc3NvbnMgY2FuIHdlIGRyYXcgZnJvbSB0aGUgcHJvY2VzcyBvZiBOYXRpb25hbCBpbnRlZ3JhdGlvbiBpbiBwb3N0LWluZGVwZW5kZW50IEluZGlhOiAgICBGaXJzdCBhbmQgdGhlIG1vc3QgZWxlbWVudGFyeSBsZXNzb24gaXMgdGhhdCByZWdpb25hbCBhc3BpcmF0aW9ucyBhcmUgdmVyeSBtdWNoIGEgcGFydCBvZiBkZW1vY3JhdGljICAgcG9saXRpY3MuIEV4cHJlc3Npb24gb2YgcmVnaW9uYWwgaXNzdWVzIGlzIG5vdCBhbiBhYmVycmF0aW9uIG9yIGFuIGFibm9ybWFsIHBoZW5vbWVub24uIEEgbGFyZ2UgYW5kICAgZGl2ZXJzZSBkZW1vY3JhY3kgbGlrZSBJbmRpYSBtdXN0IGRlYWwgd2l0aCByZWdpb25hbCBhc3BpcmF0aW9ucyBvbiBhIHJlZ3VsYXIgYmFzaXMuIE5hdGlvbiBidWlsZGluZyBpcyAgIGFuIG9uZ29pbmcgcHJvY2Vzcy4gSGVuY2UsIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gICAgVGhlIHNlY29uZCBsZXNzb24gaXMgdGhhdCB0aGUgYmVzdCB3YXkgdG8gcmVzcG9uZCB0byByZWdpb25hbCBhc3BpcmF0aW9ucyBhcmUgdGhyb3VnaCBkZW1vY3JhdGljICAgbmVnb3RpYXRpb25zIHJhdGhlciB0aGFuIHRocm91Z2ggc3VwcHJlc3Npb24uIEhlbmNlLCBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuICAgICBUaGUgdGhpcmQgbGVzc29uIGlzIGFib3V0IHRoZSBzaWduaWZpY2FuY2Ugb2YgcG93ZXItc2hhcmluZy4gSXQgaXMgbm90IHN1ZmZpY2llbnQgdG8gaGF2ZSBhIGZvcm1hbCAgIGRlbW9jcmF0aWMgc3RydWN0dXJlLiBCZXNpZGVzIHRoYXQsIGdyb3VwcyBhbmQgcGFydGllcyBmcm9tIHRoZSByZWdpb24gbmVlZCB0byBiZSBnaXZlbiBzaGFyZSBpbiBwb3dlciAgIGF0IHRoZSBTdGF0ZSBsZXZlbC4gVGh1cywgcmVnaW9ucyBzaG91bGQgYmUgZ2l2ZW4gYSBzaGFyZSBpbiBkZWNpc2lvbi1tYWtpbmcuIFNpbWlsYXJseSwgaXQgaXMgbm90IHN1ZmZpY2llbnQgICB0byBzYXkgdGhhdCB0aGUgc3RhdGVzIG9yIHRoZSByZWdpb25zIGhhdmUgYXV0b25vbXkgaW4gdGhlaXIgbWF0dGVycy4gSGVuY2UsIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuICAgU291cmNlOiBodHRwczovL3d3dy5pbmRpYXRvZGF5LmluL25ld3MtYW5hbHlzaXMvc3Rvcnkvd2hhdC1pcy1hc3NhbS1hY2NvcmQtb2YtMTk4NS1hbmQtaG93LSAgYW1lbmRlZC1jaXRpemVuc2hpcC1sYXctY2hhbGxlbmdlcy1pdC0xNjI3OTY1LTIwMTktMTItMTMgICAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZVBhZ2UuYXNweD9QUklEPTE2MDA3MTcgICAgTkNFUlQgY2xhc3MxMl9Qb2xpdGljcy1pbi1JbmRpYS1zaW5jZS1JbmRlcGVuZGVuY2UsIGNoYXB0ZXItOCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only.   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 25,
      "question" : "Which one of the following reflects the  most appropriate relationship between law  and liberty?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICBKb2huIExvY2tlIHNhaWQgJ1doZXJlIHRoZXJlIGlzIG5vIGxhdywgdGhlcmUgaXMgbm8gZnJlZWRvbS4uLicgICAgIExpYmVydHkgaXMgcHJvdGVjdGVkIGJ5IGxhdywgJ2xpYmVydHknIG1lYW5zIGFic2VuY2Ugb2YgcmVzdHJhaW50cyBvbiB0aGUgYWN0aXZpdGllcyBvZiBpbmRpdmlkdWFscywgYW5kIGF0IHRoZSAgIHNhbWUgdGltZSwgcHJvdmlkaW5nIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBpbmRpdmlkdWFscy4gIExhdyBwcm9tb3RlcyBsaWJlcnR5LiBUaGUgbW9yZSAgIGxhdyB0aGVyZSBpcyB0aGUsIG1vcmUgbGliZXJ0eSB0aGVyZSBpcy4gQW5kIGFzIHNvb24gYXMgbGF3IGVuZHMsIGxpYmVydHkgYWxzbyBjZWFzZXMgdG8gZXhpc3QuIFdoZXJlIHRoZXJlICAgYXJlIG5vIGxhd3MgdG8gcHJvdGVjdCBvciBwcm92aWRlIGZyZWVkb20gYW5kIGxpYmVydHksIHZpb2xhdGlvbnMgb2YgdGhlIHNhbWUgdGFrZSBwbGFjZS4gICAgIExhdyBwcm90ZWN0cyBsaWJlcnR5IGlzIGluIHNldmVyYWwgd2F5cy4gRmlyc3RseSwgdGhlIGxhdyBoZWxwcyBpbiBlc3RhYmxpc2hpbmcgYSBjaXZpbGl6ZWQgc29jaWV0eSwgdGhlcmVieSAgIGVhc2luZyB0aGUgd2F5IG9mIGxpZmUgZm9yIGluZGl2aWR1YWxzLiBUaGlzIGlzIGRvbmUgYnkgdGhlIGNyZWF0aW9uIG9mIGEgcHJvdmlzaW9uIGZvciBwdW5pc2htZW50IHRvIHRoZSAgIGNyaW1pbmFscy4gU2Vjb25kbHksIGl0IGd1YXJhbnRlZXMgcmlnaHRzIGFuZCBkdXRpZXMgdG8gdGhlIGNpdGl6ZW5zIGFuZCBpbmRpdmlkdWFscy4gVGhlIHN0YXRlIGludGVydmVuZXMgICB3aGVuZXZlciB0aGUgcmlnaHRzIG9mIGFuIGluZGl2aWR1YWwgYXJlIHZpb2xhdGVkIGJ5IGFub3RoZXIuIFRoaXJkbHksIHRoZSBjb25zdGl0dXRpb24gYWN0cyBhcyB0aGUgICBjdXN0b2RpYW4gb2YgbGliZXJ0eS4gSXQgaXMgdGhlIGNvbnN0aXR1dGlvbiB0aGF0IHByb3ZpZGVzIHRoZSBhdXRob3JpdHkgb2YgdGhlIHN0YXRlIGFuZCBwcm90ZWN0cyB0aGUgICBmdW5kYW1lbnRhbCByaWdodHMgb2YgdGhlIHBlb3BsZS4gICAgU291cmNlKSBodHRwczovL2xlZ29kZXNrLmNvbS9sZWdvcGVkaWEvbGF3LWFuZC1saWJlcnR5LyAsIFVQU0MgMjAxOCAgICAgICAgb2YgMTggICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "If there are more laws, there is less   liberty.     ",
        "option2" : "If there are no laws, there is no liberty.    ",
        "option3" : "If there is liberty, laws have to be made by   the people.    ",
        "option4" : "If laws are changed too often, liberty is in   danger.     "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following events:   1.  Appointment of Second Backward Classes  Commission.   2. Demolition of the disputed structure at  Ayodhya.  3.  Economic reforms popularly known as LPG  reforms.   4. National Front government under V. P.  Singh.   Which of the following is the correct  chronological sequence of the above events?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxLiBUaGUgc2Vjb25kIGJhY2t3YXJkIGNsYXNzIGNvbW1pdHRlZSB3YXMgYXBwb2ludGVkIGluIDE5NzkgYnkgdGhlIGdvdmVybm1lbnQgb2YgSW5kaWEuIEl0IHdhcyAgIGVzdGFibGlzaGVkIGJ5IHRoZSBKYW5hdGEgUGFydHkgZ292ZXJubWVudCB1bmRlciBQcmltZSBNaW5pc3RlciBNb3JhcmppIERlc2FpIHdpdGggYSBtYW5kYXRlIHRvICAgaWRlbnRpZnkgdGhlIHNvY2lhbGx5IG9yIGVkdWNhdGlvbmFsbHkgYmFja3dhcmQgY2xhc3NlcyBvZiBJbmRpYS4gICAgT3B0aW9uIDQuIE5hdGlvbmFsIEZyb250IGdvdmVybm1lbnQgd2l0aCBWLiBQLiBTaW5naCBhcyBQcmltZSBNaW5pc3RlciB3YXMgZm9ybWVkIGluIDE5ODkuIEl0IGxhc3RlZCB0aWxsICAgMTk5MC4gSXQgd2FzIHNlY29uZCBub24tQ29uZ3Jlc3MgZ292ZXJubWVudCBpbiBwb3N0LWluZGVwZW5kZW5jZSBJbmRpYSB0byBmb3JtIGdvdmVybm1lbnQgYXQgICBjZW50cmUuICAgIE9wdGlvbiAzLiBFY29ub21pYyByZWZvcm1zIGluIEluZGlhIG9mdGVuIHJlZmVycmVkIGFzIExQRyByZWZvcm1zIHdhcyBpbnRyb2R1Y2VkIGJ5IHRoZSBOYXJzaW1oYS1SYW8gICBnb3Zlcm5tZW50IGluIDE5OTEgd2hlbiBJbmRpYSBmYWNlZCBhIHNldmVyZSBlY29ub21pYyBjcmlzaXMuICAgIE9wdGlvbiAyLiBEZW1vbGl0aW9uIG9mIHRoZSBkaXNwdXRlZCBzdHJ1Y3R1cmUgYXQgQXlvZGh5YSAoa25vd24gYXMgQmFicmkgTWFzamlkKSBpbiBEZWNlbWJlciAxOTkyLiAgIFRoaXMgZXZlbnQgc3ltYm9saXNlZCBhbmQgdHJpZ2dlcmVkIHZhcmlvdXMgY2hhbmdlcyBpbiB0aGUgcG9saXRpY3Mgb2YgdGhlIGNvdW50cnkgYW5kIGludGVuc2lmaWVkIGRlYmF0ZXMgICBhYm91dCB0aGUgbmF0dXJlIG9mIEluZGlhbiBuYXRpb25hbGlzbSBhbmQgc2VjdWxhcmlzbS4gICBTb3VyY2U6IE5DRVJUIGNsYXNzMTJfUG9saXRpY3MtaW4tSW5kaWEtc2luY2UtSW5kZXBlbmRlbmNlLCBjaGFwdGVyLTkgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-3-4-2   ",
        "option2" : "4-1-3-2   ",
        "option3" : "4-3-1-2   ",
        "option4" : "1-4-3-2   "
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements:   1.  Socialism is not entirely opposed to the  market-based economy.   2. Liberalism advocates total absence of  government from market.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBTb2NpYWxpc20gcmVmZXJzIHRvIGEgc2V0IG9mIHBvbGl0aWNhbCBpZGVhcyB0aGF0IGVtZXJnZWQgYXMgYSByZXNwb25zZSB0byB0aGUgICBpbmVxdWFsaXRpZXMgcHJlc2VudCBpbiwgYW5kIHJlcHJvZHVjZWQgYnksIHRoZSBpbmR1c3RyaWFsIGNhcGl0YWxpc3QgZWNvbm9teS4gVGhlIG1haW4gY29uY2VybiBvZiAgIFNvY2lhbGlzbSBpcyBob3cgdG8gbWluaW1pc2UgZXhpc3RpbmcgaW5lcXVhbGl0eSBhbmQgZGlzdHJpYnV0ZSByZXNvdXJjZXMganVzdGx5LiBBbHRob3VnaCBhZHZvY2F0ZXMgb2YgICBzb2NpYWxpc20gYXJlIG5vdCBlbnRpcmVseSBvcHBvc2VkIHRvIHRoZSBtYXJrZXQsIHRoZXkgZmF2b3VyIHNvbWUga2luZCBvZiBnb3Zlcm5tZW50IHJlZ3VsYXRpb24sICAgcGxhbm5pbmcgYW5kIGNvbnRyb2wgb3ZlciBjZXJ0YWluIGtleSBhcmVhcyBzdWNoIGFzIGVkdWNhdGlvbiBhbmQgaGVhbHRoIGNhcmUuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSGlzdG9yaWNhbGx5LCBsaWJlcmFsaXNtIGZhdm91cmVkIGZyZWUgbWFya2V0IGFuZCBtaW5pbWFsIHJvbGUgdG8gdGhlIHN0YXRlIChub3QgICB0b3RhbCBhYnNlc25jZSkuIEhvd2V2ZXIsIHByZXNlbnQgZGF5IGxpYmVyYWxpc20gYWNrbm93bGVkZ2VzIGEgcm9sZSBmb3Igd2VsZmFyZSBzdGF0ZSBhbmQgYWNjZXB0cyB0aGUgICBuZWVkIGZvciBtZWFzdXJlcyB0byByZWR1Y2UgYm90aCBzb2NpYWwgYW5kIGVjb25vbWljIGluZXF1YWxpdGllcy4gICAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBDbGFzcyBYSSwgQ2hhcHRlci0yLCBQZy4gMjMsIENoYXB0ZXItMywgUGcuIDQ0ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2       of 8     "
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following are reasonable  restrictions on the freedom of expression  under Article 19?   1. Contempt of court   2. Decency and Morality   3. Sedition  4. Friendly relations with foreign state   5. Incitement to an offence   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBSZXN0cmljdGlvbnMgb24gdGhlIGZyZWVkb20gb2YgaW5kaXZpZHVhbHMgbWF5IGNvbWUgZnJvbSBkb21pbmF0aW9uIGFuZCBleHRlcm5hbCBjb250cm9scy4gICAgIEFydGljbGUgMTkgKDIpIG9mIEluZGlhbiBDb25zdGl0dXRpb24gZW1wb3dlcnMgdGhlIFN0YXRlIHRvIGluc3RpbGwgcmVhc29uYWJsZSByZXN0cmljdGlvbnMgb24gdGhlIGZvbGxvd2luZyAgIGdyb3VuZHM6IHNvdmVyZWlnbnR5IGFuZCBpbnRlZ3JpdHkgb2YgSW5kaWEsIHNlY3VyaXR5IG9mIHRoZSBzdGF0ZSwgZnJpZW5kbHkgcmVsYXRpb25zIHdpdGggZm9yZWlnbiBzdGF0ZXMsICAgcHVibGljIG9yZGVyLCBkZWNlbmN5IG9yIG1vcmFsaXR5LCBjb250ZW1wdCBvZiBjb3VydCwgZGVmYW1hdGlvbiwgYW5kIGluY2l0ZW1lbnQgdG8gYW4gb2ZmZW5jZS4gSGVuY2UsICAgU3RhdGVtZW50cyAxLCAyLCA0IGFuZCA1IGFyZSBjb3JyZWN0LiAgICBTZWN0aW9uIDEyNEEgb2YgdGhlIEluZGlhbiBQZW5hbCBDb2RlIGRlZmluZXMgc2VkaXRpb24gYXMgd29yZHMsIGVpdGhlciBzcG9rZW4gb3Igd3JpdHRlbiwgb3IgYnkgc2lnbnMsIG9yICAgYnkgdmlzaWJsZSByZXByZXNlbnRhdGlvbiwgb3Igb3RoZXJ3aXNlLCBicmluZ3Mgb3IgYXR0ZW1wdHMgdG8gYnJpbmcgaW50byBoYXRyZWQgb3IgY29udGVtcHQsIG9yIGV4Y2l0ZXMgb3IgICBhdHRlbXB0cyB0byBleGNpdGUgZGlzYWZmZWN0aW9uIHRvd2FyZHMgdGhlIEdvdmVybm1lbnQgZXN0YWJsaXNoZWQgYnkgbGF3LiBJdCBpcyBub3QgYSByZWFzb25hYmxlICAgcmVzdHJpY3Rpb24gdW5kZXIgQXJ0aWNsZSAxOSAoMikuIEhlbmNlLCBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuICAgIFNvdXJjZTogUG9saXRpY2FsIFRoZW9yeSwgQ2xhc3MgWEksIENoYXB0ZXItMiwgUGcuIDI4LTI5ICAgIEluZGlhbiBQb2xpdHksIE0uTGF4bWlrYW50aCwgQ2hhcHRlci03ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 4 and 5 only   ",
        "option2" : "1, 2, 4 and 5 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements  regarding the rights of the citizens under the  Constitution of India:  1. Rights are obligation upon the state.   2. Rights indicate activities that states must  refrain from doing.   3. Fulfillment of rights depends on fulfillment  of duties.   4. Rights are entitled claims of citizens on the  state.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFJpZ2h0cyBwbGFjZSBhbiBvYmxpZ2F0aW9uIHVwb24gdGhlIHN0YXRlIHRvIGFjdCBpbiBjZXJ0YWluIGtpbmRzIG9mIHdheXMuIEVhY2ggICByaWdodCBpbmRpY2F0ZXMgd2hhdCB0aGUgc3RhdGUgbXVzdCBkbyBhcyB3ZWxsIGFzIHdoYXQgaXQgbXVzdCBub3QgZG8uIEZvciBpbnN0YW5jZSwgbXkgcmlnaHQgdG8gbGlmZSBvYmxpZ2VzICAgdGhlIHN0YXRlIHRvIG1ha2UgbGF3cyB0aGF0IHByb3RlY3QgbWUgZnJvbSBpbmp1cnkgYnkgb3RoZXJzLiBJdCBjYWxscyB1cG9uIHRoZSBzdGF0ZSB0byBwdW5pc2ggdGhvc2Ugd2hvICAgaHVydCBtZSBvciBoYXJtIG1lLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUmlnaHRzIG5vdCBvbmx5IGluZGljYXRlIHdoYXQgdGhlIHN0YXRlIG11c3QgZG8sIHRoZXkgYWxzbyBzdWdnZXN0IHdoYXQgdGhlIHN0YXRlICAgbXVzdCByZWZyYWluIGZyb20gZG9pbmcuIFJpZ2h0cyBlbnN1cmUgdGhhdCB0aGUgYXV0aG9yaXR5IG9mIHRoZSBzdGF0ZSBpcyBleGVyY2lzZWQgd2l0aG91dCB2aW9sYXRpbmcgdGhlICAgc2FuY3RpdHkgb2YgaW5kaXZpZHVhbCBsaWZlIGFuZCBsaWJlcnR5LiAgICAgICBvZiAxOCAgICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIEZ1bGZpbGxtZW50IG9mIHJpZ2h0cyBpcyBub3QgZGVwZW5kZW50IG9uIGZ1bGZpbGxtZW50IG9mIGR1dGllcy4gUmlnaHRzIGFyZSAgIGVzc2VudGlhbCBmb3Igd2VsbC1iZWluZywgcmVzcGVjdCBhbmQgZGlnbml0eSBvZiBpbmRpdmlkdWFscy4gUmlnaHRzIHN1Y2ggYXMgdGhlIHJpZ2h0IHRvIGEgbGl2ZWxpaG9vZCwgb3IgICBmcmVlZG9tIG9mIGV4cHJlc3Npb24sIHdvdWxkIGJlIGltcG9ydGFudCBmb3IgYWxsIGh1bWFuIGJlaW5ncywgd2hvIGxpdmUgaW4gc29jaWV0eSBhbmQgdGhleSBhcmUgICBkZXNjcmliZWQgYXMgdW5pdmVyc2FsIGluIG5hdHVyZS4gICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIEEgcmlnaHQgaXMgZXNzZW50aWFsbHkgYW4gZW50aXRsZW1lbnQgb3IgYSBqdXN0aWZpZWQgY2xhaW0uIEl0IGRlbm90ZXMgd2hhdCB3ZSBhcmUgICBlbnRpdGxlZCB0byBhcyBjaXRpemVucywgYXMgaW5kaXZpZHVhbHMgYW5kIGFzIGh1bWFuIGJlaW5ncy4gSXQgaXMgc29tZXRoaW5nIHRoYXQgd2UgY29uc2lkZXIgdG8gYmUgZHVlIHRvICAgdXM7IHNvbWV0aGluZyB0aGF0IHRoZSByZXN0IG9mIHNvY2lldHkgbXVzdCByZWNvZ25pc2UgYXMgYmVpbmcgYSBsZWdpdGltYXRlIGNsYWltIHRoYXQgbXVzdCBiZSB1cGhlbGQuICAgIFNvdXJjZTogUG9saXRpY2FsIFRoZW9yeSwgQ2xhc3MgWEksIENoYXB0ZXItNSwgUGcuIDY4LTY5ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 30,
      "question" : "In the context of polity, which one of the  following would you accept as the most  appropriate definition of liberty?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgdGVybSAnbGliZXJ0eScgbWVhbnMgdGhlIGFic2VuY2Ugb2YgcmVzdHJhaW50cyBvbiB0aGUgYWN0aXZpdGllcyBvZiBpbmRpdmlkdWFscywgYW5kIGF0IHRoZSBzYW1lIHRpbWUsICAgcHJvdmlkaW5nIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBpbmRpdmlkdWFsIHBlcnNvbmFsaXRpZXMuIFRoZSBQcmVhbWJsZSBvZiBDb25zdGl0dXRpb24gb2YgICBJbmRpYSBwcm92aWRlcyBmb3IgbGliZXJ0eSBvZiB0aG91Z2h0LCBleHByZXNzaW9uLCBiZWxpZWYsIGZhaXRoIGFuZCB3b3JzaGlwLiBUaHVzLCBpbiBjb250ZXh0IG9mIHBvbGl0eSwgICBsaWJlcnR5IHByb3ZpZGVzIGZvciBhbiBvcHBvcnR1bml0eSB0byBkZXZlbG9wIG9uZXNlbGYgZnVsbHkuICAgICBTb3VyY2UpIFVQU0MgMjAxOSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Protection against the tyranny of political   rulers    ",
        "option2" : "Absence of restraint    ",
        "option3" : "Opportunity to do whatever one likes    ",
        "option4" : "Opportunity to develop oneself fully     "
      }
    },
    {
      "index" : 31,
      "question" : "Which of the following statements is/are  correct regarding the model of Secularism  followed in India?    1.  It is based on the principle of separation of  state and religion.     2.  Indian secularism does not allows state- supported religious reforms.    Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSW4gSW5kaWEgc2VjdWxhcmlzbSBkb2VzIG5vdCBtZWFuIHNlcGFyYXRpb24gb2YgcmVsaWdpb24gZnJvbSBzdGF0ZS4gSW5kaWEgICBkb2VzIG5vdCBoYXZlIGFuIG9mZmljaWFsIHN0YXRlIHJlbGlnaW9uLiBJdCBpcyBwb3NpdGl2ZSBDb25jZXB0LiBJdCBnaXZlcyBlcXVhbCBmcmVlZG9tIHRvIGFsbCByZWxpZ2lvbi4gSXQgaXMgICBuZWl0aGVyIGlycmVsaWdpb3VzIG5vciBhbnRpLXJlbGlnaW91cy4gV2VzdGVybiBzZWN1bGFyaXNtIGlzIGNvbmNlaXZlZCBhcyBzZXBhcmF0aW9uIG9mIHN0YXRlIGFuZCAgIHJlbGlnaW9uLiAgICAgIFN0YXRlbWVudCAyIGlzIEluY29ycmVjdC4gSW5kaWFuIHNlY3VsYXJpc20gaXMgY29tcGF0aWJsZSB3aXRoIHRoZSBpZGVhIG9mIHN0YXRlLXN1cHBvcnRlZCByZWxpZ2lvdXMgICByZWZvcm0uIFRodXMsIHRoZSBJbmRpYW4gY29uc3RpdHV0aW9uIGJhbnMgdW50b3VjaGFiaWxpdHkuIFRoZSBJbmRpYW4gc3RhdGUgaGFzIGVuYWN0ZWQgc2V2ZXJhbCBsYXdzICAgYWJvbGlzaGluZyBjaGlsZCBtYXJyaWFnZSBhbmQgbGlmdGluZyB0aGUgdGFib28gb24gaW50ZXItY2FzdGUgbWFycmlhZ2Ugc2FuY3Rpb25lZCBieSBIaW5kdWlzbS4gICAgICBTb3VyY2U6IENsYXNzIDExIC1Qb2xpdGljYWwgVGhlb3J5IE5DRVJULiBDaGFwdGVyIDggICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements  regarding economic inequality:   1.  Economic inequality can be measured by  estimating the number of people who live  below the poverty line.   2.  Poverty declined faster in India after 1991,  compared with pre-1991 period.   3.  LPG reforms of 1991 were successful in  reducing poverty in India.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBFY29ub21pYyBpbmVxdWFsaXR5IGV4aXN0cyBpbiBhIHNvY2lldHkgaWYgdGhlcmUgYXJlIHNpZ25pZmljYW50IGRpZmZlcmVuY2VzIGluICAgd2VhbHRoLCBwcm9wZXJ0eSBvciBpbmNvbWUgYmV0d2VlbiBpbmRpdmlkdWFscyBvciBjbGFzc2VzLiBPbmUgd2F5IG9mIG1lYXN1cmluZyB0aGUgZGVncmVlIG9mIGVjb25vbWljICAgaW5lcXVhbGl0eSBpbiBhIHNvY2lldHkgd291bGQgYmUgdG8gbWVhc3VyZSB0aGUgcmVsYXRpdmUgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSByaWNoZXN0IGFuZCBwb29yZXN0ICAgZ3JvdXBzLiBBbm90aGVyIHdheSBjb3VsZCBiZSB0byBlc3RpbWF0ZSB0aGUgbnVtYmVyIG9mIHBlb3BsZSB3aG8gbGl2ZSBiZWxvdyB0aGUgcG92ZXJ0eSBsaW5lLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBIFdvcmxkIEJhbmsgc3R1ZHkgYnkgR2F1cmF2IERhdHQgYW5kIG90aGVycywgc2hvd2VkIHRoYXQgcG92ZXJ0eSBkZWNsaW5lZCBieSAgIDEuMzYgcGVyY2VudGFnZSBwb2ludHMgcGVyIGFubnVtIGFmdGVyIDE5OTEsIGNvbXBhcmVkIHRvIHRoYXQgb2YgMC40NCBwZXJjZW50YWdlIHBvaW50cyBwZXIgYW5udW0gICBwcmlvciB0byAxOTkxLiBUaGVpciBzdHVkeSBzaG93cyB0aGF0IGFtb25nIG90aGVyIHRoaW5ncywgdXJiYW4gZ3Jvd3RoIGlzIHRoZSBtb3N0IGltcG9ydGFudCAgIGNvbnRyaWJ1dG9yIHRvIHRoZSByYXBpZCByZWR1Y3Rpb24gaW4gcG92ZXJ0eSBldmVuIHRob3VnaCBydXJhbCBhcmVhcyBzaG93ZWQgZ3Jvd3RoIGluIHRoZSBwb3N0LXJlZm9ybSAgIHBlcmlvZC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQSBzZWNvbmQgY29uY2x1c2lvbiBpcyB0aGF0IGluIHRoZSBwb3N0LXJlZm9ybSBwZXJpb2QsIHBvdmVydHkgZGVjbGluZWQgZmFzdGVyIGluICAgdGhlIDIwMDBzIHRoYW4gaW4gdGhlIDE5OTBzLiBUaGUgb2ZmaWNpYWwgZXN0aW1hdGVzIGJhc2VkIG9uIFRlbmR1bGthciBjb21taXR0ZWUncyBwb3ZlcnR5IGxpbmVzIHNob3dzICAgdGhhdCBwb3ZlcnR5IGRlY2xpbmVkIG9ubHkgMC43NCBwZXJjZW50YWdlIHBvaW50cyBwZXIgYW5udW0gZHVyaW5nIDE5OTMtOTQgdG8gMjAwNC0wNS4gQnV0IHBvdmVydHkgICBkZWNsaW5lZCBieSAyLjIgcGVyY2VudGFnZSBwb2ludHMgcGVyIGFubnVtIGR1cmluZyAyMDA0LTA1IHRvIDIwMTEtMTIuIEFyb3VuZCAxMzggbWlsbGlvbiBwZW9wbGUgd2VyZSAgIGxpZnRlZCBhYm92ZSB0aGUgcG92ZXJ0eSBsaW5lIGR1cmluZyB0aGlzIHBlcmlvZC4gVGhpcyBpbmRpY2F0ZXMgdGhlIHN1Y2Nlc3Mgb2YgMTk5MSByZWZvcm1zIGluIHJlZHVjaW5nICAgcG92ZXJ0eS4gICAgS0I6IFRoZSBnb3Zlcm5tZW50IGFubm91bmNlZCBhIE5ldyBFY29ub21pYyBQb2xpY3kgb24gSnVseSAyNCwgMTk5MS4gVGhpcyBuZXcgbW9kZWwgb2YgZWNvbm9taWMgICByZWZvcm1zIGlzIGNvbW1vbmx5IGtub3duIGFzIHRoZSBMUEcgb3IgTGliZXJhbGlzYXRpb24sIFByaXZhdGlzYXRpb24sIGFuZCBHbG9iYWxpc2F0aW9uIG1vZGVsLiBUaGVzZSAgIHJlZm9ybXMgd2VyZSBhbHNvIGtub3duIGFzICdzdHJ1Y3R1cmFsIGFkanVzdG1lbnRzJy4gICAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBDbGFzcyBYSSwgQ2hhcHRlci0zLCBQZy4gNDAtNDEgICAgICAgIG9mIDE4ICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 33,
      "question" : "Which of the following actions can be  useful in making development process more  equitable and sustainable?    1. Viewing private property as common  property of all humanity.    2. Increasing powers and resources of local  bodies.    3. Selection of development priorities at the  higher levels of political leadership.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gSWYgd2UgdW5kZXJzdGFuZCBuYXR1cmFsIHJlc291cmNlcyAobm90IHByaXZhdGUgcHJvcGVydHkpIGFzIGNvbW1vbiB0byAgIGh1bWFuaXR5LCB0aGVuIGh1bWFuaXR5IHdvdWxkIGluY2x1ZGUgZnV0dXJlIGdlbmVyYXRpb25zIGFzIHdlbGwsIHdoaWNoIHdvdWxkIG1ha2UgaXQgc3VzdGFpbmFibGUgYW5kICAgZXF1aXRhYmxlLiBJZiByZXNvdXJjZXMgYXJlIHZpZXdlZCBhcyBiZWxvbmdpbmcgdG8gc3RhdGUgYWxvbmUgdGhlbiBjb21tdW5pdGllcyB3aGljaCBhcmUgZGVwZW5kZW50IG9uICAgaXQgbWF5IGdldCBhbGllbmF0ZWQgYXMgdGhlc2UgY29tbXVuaXRpZXMgaGF2ZSBhIHNwZWNpZmljIHdheSBvZiBjb21tdW5pdHkgbGlmZSBhbmQgcmVsYXRpb25zaGlwIHRvIHRoZSAgIGVudmlyb25tZW50LiAgICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBGb3IgZGV2ZWxvcG1lbnQgdG8gYmUgZXF1aXRhYmxlLCB0aGUgcmlnaHQgb2YgcGVvcGxlIHRvIHBhcnRpY2lwYXRlIGluIGRlY2lzaW9uLSAgbWFraW5nIGlzIGVtcGhhc2l6ZWQuIE9uZSBvZiB0aGUgd2F5cyB3aGljaCBoYXMgYmVlbiAgIHN1Z2dlc3RlZCB0byBlbnN1cmUgcGFydGljaXBhdGlvbiBpcyB0byBhbGxvdyAgIGxvY2FsIGRlY2lzaW9uLW1ha2luZyBib2RpZXMgdG8gdGFrZSBkZWNpc2lvbnMgYWJvdXQgZGV2ZWxvcG1lbnQgcHJvamVjdHMgaW4gdGhlIGxvY2FsIGFyZWEuIEluY3JlYXNpbmcgICB0aGUgcG93ZXJzIGFuZCByZXNvdXJjZXMgb2YgbG9jYWwgYm9kaWVzIGlzIHRodXMgYmVpbmcgYWR2b2NhdGVkLiAgICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gU3RyYXRlZ2llcyBvZiBkZXZlbG9wbWVudCBhZG9wdGVkIGluIG1vc3QgY291bnRyaWVzIGhhdmUgYmVlbiAndG9wLWRvd24nLCAgIHRoYXQgaXMsIHRoZSBzZWxlY3Rpb24gb2YgZGV2ZWxvcG1lbnQgcHJpb3JpdGllcyBhbmQgc3RyYXRlZ2llcyBhbmQgdGhlIGFjdHVhbCBpbXBsZW1lbnRhdGlvbiBvZiBwcm9qZWN0cyAgIHdlcmUgYWxsIGdlbmVyYWxseSBkZWNpZGVkIGJ5IHRoZSBoaWdoZXIgbGV2ZWxzIG9mIHRoZSBwb2xpdGljYWwgbGVhZGVyc2hpcCBhbmQgYnVyZWF1Y3JhY3kuIERldmVsb3BtZW50ICAgdGh1cyBiZWNhbWUgYSBwcm9jZXNzIGRlc2lnbmVkIGFuZCBpbXBsZW1lbnRlZCBieSB0aGUgcnVsaW5nIHNlY3Rpb25zIGluIHRoZSBjb3VudHJ5IHdobyBoYXZlIGFsc28gICBvZnRlbiBiZWVuIHRoZSBtYWpvciBiZW5lZmljaWFyaWVzIG9mIGRldmVsb3BtZW50IHByb2plY3RzLiBUaGlzIGtpbmQgb2YgZGV2ZWxvcG1lbnQgaXMgaW5lcXVpdGFibGUgYW5kICAgdW5zdXN0YWluYWJsZS4gICAgU291cmNlOiBDbGFzcyAxMSAtUG9saXRpY2FsIFRoZW9yeSBOQ0VSVC4gQ2hhcHRlciAxMCwgcGFnZSA0ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only    ",
        "option3" : "2 only    ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 34,
      "question" : "Regionalism in post-independent India  can be associated with demands for?   1. Political autocracy   2. Religious identity   3. Cultural aspirations   Select the correct answer using the codes  given below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUG9saXRpY2FsIGF1dG9ub215IChub3QgYXV0b2NyYWN5KSBmb3IgZXhhbXBsZSBLYXNobWlyIElzc3VlIGlzIG5vdCBqdXN0IGEgICBkaXNwdXRlIGJldHdlZW4gSW5kaWEgYW5kIFBha2lzdGFuLiBJdCBoYXMgZXh0ZXJuYWwgYW5kIGludGVybmFsIGRpbWVuc2lvbnMuIEl0IGludm9sdmVzIHRoZSBpc3N1ZSBvZiAgIGthc2htaXJpIGlkZW50aXR5IGtub3duIGFzIGthc2htaXJpeWF0IGFuZCB0aGUgYXNwaXJhdGlvbnMgb2YgdGhlIHBlb3BsZSBvZiBKJksgZm9yIFBvbGl0aWNhbCBFY29ub215ICAgd2hpY2ggY291bGQgYmUgYWNoaWV2ZWQgdGhyb3VnaCBwb2xpdGljYWwgYXV0b25vbXkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUmVsaWdpb3VzIGlkZW50aXR5IGZvciBleGFtcGxlIEtoYWxpc3RhbiBtb3ZlbWVudCAoSW4gMTk4MCwgdGhlIEFrYWxpIERhbCAgIGxhdW5jaGVkIGEgbW92ZW1lbnQgb24gdGhlIHF1ZXN0aW9uIG9mIGRpc3RyaWJ1dGlvbiBvZiB3YXRlciBiZXR3ZWVuIFB1bmphYiBhbmQgaXRzIG5laWdoYm91cmluZyAgIHN0YXRlcy4gQSBzZWN0aW9uIG9mIHJlbGlnaW91cyBsZWFkZXJzIHJhaXNlZCB0aGUgcXVlc3Rpb24gb2YgYXV0b25vbW91cyBzaWtoIGlkZW50aXR5LiBUaGUgbW9yZSBleHRyZW1lICAgZWxlbWVudHMgc3RhcnRlZCBhZHZvY2F0aW5nIHNlY2Vzc2lvbiBmcm9tIEluZGlhIGFuZCB0aGUgY3JlYXRpb24gb2YgS2hhbGlzdGFuLiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQ3VsdHVyYWwgYXNwaXJhdGlvbnMgZm9yIGV4YW1wbGUgbW92ZW1lbnRzIGFtb25nIHRyaWJhbHMgb2YgTm9ydGgtZWFzdC4gVGhlICAgaXNvbGF0aW9uIG9mIHRoZSBORSByZWdpb24sIGl0cyBjb21wbGV4IHNvY2lhbCBjaGFyYWN0ZXIgYW5kIGl0cyBiYWNrd2FyZG5lc3MgY29tcGFyZWQgdG8gb3RoZXIgcGFydHMgb2YgICB0aGUgY291bnRyeSBoYXZlIGFsbCByZXN1bHRlZCBpbiB0aGUgY29tcGxpY2F0ZWQgc2V0IG9mIGRlbWFuZHMgZnJvbSB0aGUgc3RhdGVzIG9mIE5vcnRoIEVhc3QgcmVnaW9uLiAgICAgS0I6IEF1dG9ub215IGlzIHNlbGYtZ292ZXJubWVudDsgZnJlZWRvbSB0byBhY3Qgb3IgZnVuY3Rpb24gaW5kZXBlbmRlbnRseSB3aGlsZSBhdXRvY3JhY3kgaXMgYSBmb3JtIG9mICAgZ292ZXJubWVudCBpbiB3aGljaCB1bmxpbWl0ZWQgcG93ZXIgaXMgaGVsZCBieSBhIHNpbmdsZSBpbmRpdmlkdWFsLiAgIFNvdXJjZTogUG9saXRpY3MgaW4gSW5kaWEgc2luY2UgSW5kZXBlbmRlbmNlIChDbGFzcyAxMiBOQ0VSVCkgQ2hhcHRlciA4IFJlZ2lvbmFsIGFzcGlyYXRpb25zICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3         of 8     "
      }
    },
    {
      "index" : 35,
      "question" : "Which Article of the Constitution of  India safeguards one's right to marry the  person of one's choice?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBJbiAyMDE0LCB0aGUgU3VwcmVtZSBDb3VydCB0b29rIHN1by1tb3R1IGNvZ25pemFuY2Ugb2YgbmV3c3BhcGVyIHJlcG9ydHMgb2YgdGhlIGdhbmcgcmFwZSBvZiBhIDIwLSAgeWVhci1vbGQgSW5kaWFuIHdvbWFuIG9uIHRoZSBvcmRlcnMgb2YgYSB2aWxsYWdlIGNvdXJ0LiBJbiB0aGlzIGNhc2UsIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0ICdhbiBpbmhlcmVudCAgIGFzcGVjdCBvZiBBcnRpY2xlIDIxIG9mIHRoZSBDb25zdGl0dXRpb24gd291bGQgYmUgdGhlIGZyZWVkb20gb2YgY2hvaWNlIGluIG1hcnJpYWdlJy4gVGhpcyB3YXMgcmVpdGVyYXRlZCAgIGJ5IFN1cHJlbWUgY291cnQgaW4gMjAxNy4gIFRoZSBjaG9pY2Ugb2YgYSBwYXJ0bmVyIHdoZXRoZXIgd2l0aGluIG9yIG91dHNpZGUgbWFycmlhZ2UgbGllcyB3aXRoaW4gdGhlICAgZXhjbHVzaXZlIGRvbWFpbiBvZiBlYWNoIGluZGl2aWR1YWwuIEludGltYWNpZXMgb2YgbWFycmlhZ2UgbGllIHdpdGhpbiBhIGNvcmUgem9uZSBvZiBwcml2YWN5LCB3aGljaCBpcyAgIGludmlvbGFibGUuIFRoZSBhYnNvbHV0ZSByaWdodCBvZiBhbiBpbmRpdmlkdWFsIHRvIGNob29zZSBhIGxpZmUgcGFydG5lciBpcyBub3QgaW4gdGhlIGxlYXN0IGFmZmVjdGVkIGJ5ICAgbWF0dGVycyBvZiBmYWl0aC4gVGhlIENvbnN0aXR1dGlvbiBndWFyYW50ZWVzIHRvIGVhY2ggaW5kaXZpZHVhbCB0aGUgcmlnaHQgZnJlZWx5IHRvIHByYWN0aXNlLCBwcm9mZXNzIGFuZCAgIHByb3BhZ2F0ZSByZWxpZ2lvbi4gICAgU291cmNlKSBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvaW5kaWEvcmlnaHQtdG8tbWFycnktc3VwcmVtZS1jb3VydC1oYWRpeWEtY2FzZS0gIDUxMzEwNTUvICBVUFNDIDIwMTkgICAgICAgICBvZiAxOCAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 19    ",
        "option2" : "Article 21    ",
        "option3" : "Article 25    ",
        "option4" : "Article 29     "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to environmental  movements in India after Independence,  consider the following statements:   1.  Chipko movement took up economic and  social issues along with protection of trees.   2.  Save Silent Valley movement was launched  in Andhra Pradesh against the mining  activities.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBDaGlwa28gbW92ZW1lbnQgYmVnYW4gaW4gVXR0YXJha2hhbmQgd2hlbiB0aGUgZm9yZXN0IGRlcGFydG1lbnQgICByZWZ1c2VkIHBlcm1pc3Npb24gdG8gdGhlIHZpbGxhZ2VycyB0byBmZWxsIGFzaCB0cmVlcyBmb3IgbWFraW5nIGFncmljdWx0dXJhbCB0b29scy4gTGF0ZXIsIHRoZSBtb3ZlbWVudCBhbHNvICAgdG9vayB1cCBlY29ub21pYyBpc3N1ZXMgb2YgbGFuZGxlc3MgZm9yZXN0IHdvcmtlcnMgYW5kIGFza2VkIGZvciBndWFyYW50ZWVzIG9mIG1pbmltdW0gd2FnZS4gV29tZW4gICBoZWxkIHN1c3RhaW5lZCBhZ2l0YXRpb25zIGFnYWluc3QgdGhlIGhhYml0IG9mIGFsY29ob2xpc20gYW5kIGJyb2FkZW5lZCB0aGUgYWdlbmRhIG9mIHRoZSBtb3ZlbWVudCB0byAgIGNvdmVyIG90aGVyIHNvY2lhbCBpc3N1ZXMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gU2F2ZSBTaWxlbnQgVmFsbGV5IE1vdmVtZW50IHN0YXJ0ZWQgaW4gS2VyYWxhIChub3QgaW4gQW5kaHJhIFByYWRlc2gpIHRvICAgcHJvdGVjdCB0aGUgbW9pc3QgZXZlcmdyZWVuIGZvcmVzdCBmcm9tIGJlaW5nIGRlc3Ryb3llZCBieSBhIGh5ZHJvZWxlY3RyaWMgcHJvamVjdCBhY3Jvc3MgS3VudGhpcHV6aGEgICBSaXZlciB0aGF0IHJ1bnMgdGhyb3VnaCBTaWxlbnQgVmFsbGV5LiBTZXZlcmFsIE5HT3Mgc3Ryb25nbHkgb3Bwb3NlZCB0aGUgcHJvamVjdCBhbmQgdXJnZWQgdGhlICAgZ292ZXJubWVudCB0byBhYmFuZG9uIGl0LiAgICBJbiBKYW51YXJ5IDE5ODEsIGJvd2luZyB0byB1bnJlbGVudGluZyBwdWJsaWMgcHJlc3N1cmUsIEluZGlyYSBHYW5kaGkgZGVjbGFyZWQgdGhhdCBTaWxlbnQgVmFsbGV5IHdpbGwgYmUgICBwcm90ZWN0ZWQuIEluIE5vdmVtYmVyIDE5ODMgdGhlIFNpbGVudCBWYWxsZXkgSHlkcm9lbGVjdHJpYyBQcm9qZWN0IHdhcyBjYWxsZWQgb2ZmLiAgICBTb3VyY2U6ICBOQ0VSVCBjbGFzczEyX1BvbGl0aWNzLWluLUluZGlhLXNpbmNlLUluZGVwZW5kZW5jZSwgY2hhcHRlci03ICAgIGh0dHBzOi8vd3d3LnBhdG5hdW5pdmVyc2l0eS5hYy5pbi9lLWNvbnRlbnQvc29jaWFsX3NjaWVuY2VzL2hpc3RvcnkvTUFIaXN0b3J5NC5wZGYgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements  regarding the communist parties in India:  1.  The Communist Party of India got split up  into two factions immediately after India's  independence.  2.  India's first democratically elected  communist government was formed by  Communist party of India in Kerala.  3.  CPI emerged as the largest opposition  party in the first general election to Lok  Sabha.  4.  The Communist Party of India was declared  illegal in 1937 when Congress ministries  came to power.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIDE5MjUgdGhlIEluZGlhbiBDb21tdW5pc3QgQ29uZmVyZW5jZSBhdCBLYW5wdXIgd2FzIGhlbGQgYW5kIHRoZSBDb21tdW5pc3QgUGFydHkgb2YgSW5kaWEgKENQSSkgICB3YXMgZm9ybWVkIGluIERlY2VtYmVyIDE5MjUgaW4gSW5kaWEgYnkgTS5OLiBSb3kuIEluIDE5NTEgdGhlIENQSSwgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgdGhlIG5ldyAgIGdlbmVyYWwgc2VjcmV0YXJ5IEFqb3kgR2hvc2ggYWRvcHRlZCBhIG5ldyBwcm9ncmFtbWUgd2hpY2ggc2lnbmFsbGVkIHRoZSBjaGFuZ2Ugb2YgbGluZSwgYWxsb3dpbmcgdGhlICAgcGFydHkncyBlbnRyeSBpbiBwYXJsaWFtZW50YXJ5IHBvbGl0aWNzIGluIHBvc3QtaW5kZXBlbmRlbmNlIEluZGlhLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQ29tbXVuaXN0IFBhcnR5IG9mIEluZGlhIGJyb2tlIGludG8gdHdvIC0gQ29tbXVuaXN0IFBhcnR5IG9mIEluZGlhIChNYXJ4aXN0KSAgIGFuZCBDb21tdW5pc3QgUGFydHkgb2YgSW5kaWEgKE1hcnhpc3QpIGluIDE5NjQgYW5kIG5vdCBpbW1lZGlhdGVseSBhZnRlciBJbmRpYSdzIGluZGVwZW5kZW5jZS4gU2luby0gIFNvdmlldCB0ZW5zaW9ucywgYW50aS1Db25ncmVzc2lzbSBhbmQgY29tbXVuaXN0IGRvY3RyaW5hbCBkaWZmZXJlbmNlcyBsZWQgdG8gdGhlIENQSSBzcGxpdHRpbmcgaW4gMTk2NC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSW4gMTk1NywgdGhlIEluZGlhJ3MgZmlyc3QgZGVtb2NyYXRpY2FsbHkgZWxlY3RlZCBjb21tdW5pc3QgZ292ZXJubWVudCBjYW1lIHRvICAgcG93ZXIgaW4gS2VyYWxhLiBUaGUgQ1BJIGdvdmVybm1lbnQgb2YgRU1TIE5hbWJvb2RpcmlwYWQgZm9jdXNzZWQgb24gYnVpbGRpbmcgYSB3ZWxmYXJlIHN0YXRlLiBJdCAgIGVtYmFya2VkIG9uIGluaXRpYXRpdmVzIHRoYXQgYWRkcmVzc2VkIHRoZSByaWdodHMgYW5kIG5lZWRzIG9mIHBlYXNhbnRzIGFuZCBpbmR1c3RyaWFsIHdvcmtlcnMuIEl0IHJhaXNlZCAgIG1pbmltdW0gd2FnZXMgYW5kIHByb3RlY3RlZCBlbXBsb3ltZW50LiBJdCBzaG93ZWQgYW4gdXJnZW5jeSB0byBpbmR1c3RyaWFsaXNlIHRoZSBzdGF0ZSBhbmQgaW52aXRlZCAgIGV2ZW4gcHJpdmF0ZSBjYXBpdGFsLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEZpZnR5LXRocmVlIHBhcnRpZXMgY29udGVzdGVkIHRoZSBmaXJzdCBnZW5lcmFsIGVsZWN0aW9ucywgdGhlIENvbmdyZXNzIGJlaW5nIHRoZSAgIGJpZ2dlc3QsIGZvciBvYnZpb3VzIHJlYXNvbnMuIEVsZWN0aW9ucyB3ZXJlIGhlbGQgZm9yIDQwMSBjb25zdGl0dWVuY2llcy4gVGhlIHJlc3VsdHMgd2VyZSBkZWNsYXJlZCBvbiAgIEZlYnJ1YXJ5IDEwLCAxOTUyLiBUaGUgQ29uZ3Jlc3Mgd29uIDM2MSBzZWF0cywgc2VjdXJpbmcgNDUlIG9mIHZvdGVzLiBUaGUgQ1BJIGNvbnRlc3RlZCA0OSBzZWF0cyBhbmQgICB3b24gMTYgc2VhdHMsIGNvbWluZyBvdXQgYXMgdGhlIHNlY29uZCBiaWdnZXN0IHBhcnR5IG5leHQgdG8gQ29uZ3Jlc3MuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgQ29tbXVuaXN0IFBhcnR5IG9mIEluZGlhIChDUEkpIHdhcyBkZWNsYXJlZCBhbiBpbGxlZ2FsIHBhcnR5IGZvciBtb3N0IG9mIHRoZSAgIHRpbWUgdW5kZXIgdGhlIEJyaXRpc2ggcnVsZS4gSXQgd2FzIG9ubHkgaW4gMTkzNyB3aGVuIHRoZSBDb25ncmVzcyBtaW5pc3RyaWVzIGNhbWUgdG8gcG93ZXIgaW4gc2V2ZXJhbCAgIHN0YXRlcyB3aGVuIHRoZSBiYW4gd2FzIGxpZnRlZC4gQnV0IGl0IGhhZCB0byBnbyB1bmRlcmdyb3VuZCBhZ2FpbiBpbiAxOTQwLCBhbmQgY291bGQgb25seSBzdGFydCAgIGZ1bmN0aW9uaW5nIG9wZW5seSBhZnRlciBpdCBzdXBwb3J0ZWQgdGhlIGFudGktZmFzY2lzdCBhbGxpZXMgaW4gdGhlIFdvcmxkIFdhciBJSS4gICBTb3VyY2U6IE5DRVJUIFBvbGl0aWNzIGluIEluZGlhIGNoYXB0ZXItMiBwYWdlLTMzLCAzNyAgIEhvdyBDb21tdW5pc3QgUGFydHkgb2YgSW5kaWEgRW1lcmdlZCBhcyBMYXJnZXN0IE9wcG9zaXRpb24gdG8gQ29uZ3Jlc3MgaW4gMTk1MS01MiAodGhld2lyZS5pbikgICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following ideas did not  form part of the early phase of India's  development policy?  1. Planning  2. Cooperative Farming  3. Liberalisation of economy  4. Self-sufficiency  5. Land reforms  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFBsYW5uaW5nIGNvbW1pc3Npb24gb2YgSW5kaWEgd2FzIHNldCB1cCBpbiB0byBjcmVhdGUsIGRldmVsb3AgYW5kIGV4ZWN1dGUgNS15ZWFyICAgcGxhbnMuIEl0IGhhcyBiZWVuIGdpdmVuIHRoZSByZXNwb25zaWJpbGl0eSBvZiBtYWtpbmcgYW4gYXNzZXNzbWVudCBvZiB0aGUgbWF0ZXJpYWwgY2FwaXRhbCBhbmQgaHVtYW4gICByZXNvdXJjZXMgb2YgdGhlIGNvdW50cnkgYW5kIGFsc28gb2YgaW52ZXN0aWdhdGluZyB0aGUgcG9zc2liaWxpdHkgb2YgYXVnbWVudGF0aW9uIG9mIHN1Y2ggcmVzb3VyY2VzLiBJdCBpcyAgIGV4cGVjdGVkIHRvIHN1Z2dlc3Qgd2F5cyBhbmQgbWVhbnMgYnkgd2hpY2ggZGVmaWNpZW50IHJlc291cmNlcyBpbiByZWxhdGlvbiB0byBuYXRpb24ncyByZXF1aXJlbWVudHMgICBjYW4gYmUgbWV0LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFmdGVyIGluZGVwZW5kZW5jZSwgY29vcGVyYXRpdmVzIGJlY2FtZSBhbiBpbnRlZ3JhbCBwYXJ0IG9mIEZpdmUtWWVhciBQbGFucy4gICBJbiAxOTU4LCB0aGUgTmF0aW9uYWwgRGV2ZWxvcG1lbnQgQ291bmNpbCAoTkRDKSBoYWQgcmVjb21tZW5kZWQgYSBuYXRpb25hbCBwb2xpY3kgb24gY29vcGVyYXRpdmVzICAgYW5kIGFsc28gZm9yIHRyYWluaW5nIG9mIHBlcnNvbm5lbCdzIGFuZCBzZXR0aW5nIHVwIG9mIENvLW9wZXJhdGl2ZSBNYXJrZXRpbmcgU29jaWV0aWVzLiBJbiAxOTg0LCAgICAgb2YgMTggICAgICAgUGFybGlhbWVudCBvZiBJbmRpYSBlbmFjdGVkIHRoZSBNdWx0aS1TdGF0ZSBDb29wZXJhdGl2ZSBTb2NpZXRpZXMgQWN0IHRvIHJlbW92ZSB0aGUgcGxldGhvcmEgb2YgICBkaWZmZXJlbnQgbGF3cyBnb3Zlcm5pbmcgdGhlIHNhbWUgdHlwZXMgb2Ygc29jaWV0aWVzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogTGliZXJhbGl6YXRpb24gb2YgZWNvbm9teSB3YXMgbm90IGEgcGFydCBvZiB0aGUgZWFybHkgcGhhc2Ugb2YgSW5kaWEncyAgIGRldmVsb3BtZW50IHBvbGljeS4gSXQgd2FzIGFkb3B0ZWQgaW4gMTk5MS4gSGlnaGx5IHJlZ3VsYXRlZCBpbmR1c3RyaWFsIHNlY3RvciwgYnVyZWF1Y3JhdGljIGNvbnRyb2wgICBiZWZvcmUgMTk5MSBnYXZlIHZlcnkgbGltaXRlZCBzcGFjZSB0byBwcml2YXRlIHNlY3RvciBhbmQgdGh1cyB0aHJlYXRlbmluZyB0aGUgZ3Jvd3RoIG9mIG5hdGlvbi4gVGhlIGJhc2ljICAgYWltIG9mIGxpYmVyYWxpemF0aW9uIHdhcyB0byBwdXQgYW4gZW5kIHRvIHRob3NlIHJlc3RyaWN0aW9ucyB3aGljaCBiZWNhbWUgaGluZHJhbmNlcyBpbiB0aGUgZGV2ZWxvcG1lbnQgICBhbmQgZ3Jvd3RoIG9mIHRoZSBuYXRpb24uICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogVGhlIEdvdmVybm1lbnQgYWRvcHRlZCBHcmVlbiBSZXZvbHV0aW9uIHRvIGFjaGlldmUgc2VsZi1zdWZmaWNpZW5jeS4gSW5zdGVhZCAgIG9mIGdpdmluZyBzdXBwb3J0IHRvIGFyZWFzIGFuZCBmYXJtZXJzLCB0aGUgZ292ZXJubWVudCBkZWNpZGVkIHRvIHB1dCBtb3JlIHJlc291cmNlcyBpbiB0aG9zZSBhcmVhcyAgIHdoaWNoIGFscmVhZHkgaGFkIGlycmlnYXRpb24gYW5kIHRob3NlIGZhcm1lcnMgd2hvIHdlcmUgYWxyZWFkeSB3ZWxsLW9mZi4gICBTdGF0ZW1lbnQgNSBpcyBjb3JyZWN0OiBBZnRlciBpbmRlcGVuZGVuY2UgaW4gMTk0NywgYW4gaW5hZGVxdWF0ZSBhZ3JpY3VsdHVyYWwgb3V0cHV0IHdhcyBwcmV2YWlsaW5nLiBJbiAgIG9yZGVyIHRvIHNvbHZlIHRoaXMsIHRoZSBJbmRpYW4gZ292ZXJubWVudCB0b29rIG1lYXN1cmVzIHRvIGFsdGVyIGV4aXN0aW5nIHJlZ3VsYXRpb25zIGZvciBhIGJldHRlciAgIG91dGNvbWUuIFRoZXNlIGFjdHMgZm9ybWVkIGFncmFyaWFuIGFuZCBsYW5kIHJlZm9ybXMgaW4gSW5kaWEgYWZ0ZXIgaW5kZXBlbmRlbmNlLiBMYW5kIHJlZm9ybXMgICBpbmNsdWRlZCBhYm9saXRpb24gb2YgaW50ZXJtZWRpYXJpZXMsIHRlbmFuY3kgcmVmb3JtcywgZml4aW5nIHRoZSBjZWlsaW5nIGV0Yy4gICBTb3VyY2U6ICBOQ0VSVCBQb2xpdGljcyBpbiBJbmRpYSBjaGFwdGVyLTMgcGFnZS00OSwgNTAsIDYxICAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9oaXN0b3J5LW9mLWNvLW9wZXJhdGl2ZXMtaW4taW5kaWEvICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 5 only  ",
        "option4" : "3, 4 and 5 only   "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to India external  relations with China since independence  consider the following statements:  1.  After the Chinese revolution in 1949, India  was one of the first countries to recognize  the communist government in China.  2.  In 1962, para-military force was raised to  reorganize security setup along the Indo- Tibetan border.  3.  The main cause of Chinese invasion in 1962  was a dispute over the sovereignty of Aksai  Chin and Arunachal Pradesh border  regions.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFVubGlrZSBpdHMgcmVsYXRpb25zaGlwIHdpdGggUGFraXN0YW4sIGZyZWUgSW5kaWEgYmVnYW4gaXRzIHJlbGF0aW9uc2hpcCB3aXRoIENoaW5hICAgb24gYSB2ZXJ5IGZyaWVuZGx5IG5vdGUuIEFmdGVyIHRoZSBDaGluZXNlIHJldm9sdXRpb24gaW4gMTk0OSwgSW5kaWEgd2FzIG9uZSBvZiB0aGUgZmlyc3QgY291bnRyaWVzIHRvICAgcmVjb2duaXNlIHRoZSBjb21tdW5pc3QgZ292ZXJubWVudC4gTmVocnUgZmVsdCBzdHJvbmdseSBmb3IgdGhpcyBuZWlnaGJvdXIgdGhhdCB3YXMgY29taW5nIG91dCBvZiB0aGUgICBzaGFkb3cgb2Ygd2VzdGVybiBkb21pbmF0aW9uIGFuZCBoZWxwZWQgdGhlIG5ldyBnb3Zlcm5tZW50IGluIGludGVybmF0aW9uYWwgbWVldGluZ3MuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFmdGVyIGluZGVwZW5kZW5jZSwgdGhlIGxvY2FsIHBvbGljZSBvZiBhIHN0YXRlIHdlcmUgcmVzcG9uc2libGUgZm9yIHRoZSAgIGd1YXJkaWFuc2hpcCBvZiBpbnRlcm5hdGlvbmFsIGJvcmRlcnMuIEhvd2V2ZXIsIHRoaXMgcHJvdmVkIHRvIGJlIGFuIGluYWRlcXVhdGUgcHJvdmlzaW9uIGR1cmluZyB0aGUgICAxOTYyIGFuZCAxOTY1IHdhci4gQW5kIHBhcmFtaWxpdGFyeSBmb3JjZXMgd2VyZSByYWlzZWQgdG8gZ3VhcmQgdGhlIGJvcmRlcnMuIE9uIE9jdG9iZXIgMjQsIDE5NjIsIHRoZSAgIEluZG8tVGliZXRhbiBCb3VuZGFyeSBQb2xpY2UgKElUQlApd2FzIGVzdGFibGlzaGVkIHRvIHJlb3JnYW5pc2UgdGhlIGZyb250aWVyIGludGVsbGlnZW5jZSBhbmQgICBzZWN1cml0eSBzZXR1cCBhbG9uZyB0aGUgSW5kby1UaWJldGFuIGJvcmRlci4gVG8gYmVnaW4gd2l0aCwganVzdCBmb3VyIGJhdHRhbGlvbnMgd2VyZSBzYW5jdGlvbmVkLiBUaGUgICBJVEJQIHdhcyBmaXJzdCBlc3RhYmxpc2hlZCB1bmRlciB0aGUgQ1JQRiBBY3QuIFRoZSBJVEJQIEFjdCB3YXMgZXN0YWJsaXNoZWQgYnkgcGFybGlhbWVudCBpbiAxOTkyLlRoZSAgIElUQlAgd2FzIGdpdmVuIHJlc3BvbnNpYmlsaXR5IGZvciB0aGUgd2hvbGUgMyw0ODgta2lsb21ldHJlIHN0cmV0Y2ggb2YgdGhlIEluZGlhLUNoaW5hIGJvcmRlciBpbiAyMDA0LiAgIEluIFNpa2tpbSBhbmQgQXJ1bmFjaGFsIFByYWRlc2gsIHRoZSBJVEJQIHRvb2sgb3ZlciBmcm9tIHRoZSBBc3NhbSBSaWZsZXMgaW4gMjAwNC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiAgQSBib3VuZGFyeSBkaXNwdXRlIGhhZCBzdXJmYWNlZCBiZXR3ZWVuIEluZGlhIGFuZCBDaGluYS4gSW5kaWEgY2xhaW1lZCB0aGF0ICAgdGhlIGJvdW5kYXJ5IHdhcyBhIG1hdHRlciBzZXR0bGVkIGluIGNvbG9uaWFsIHRpbWUsIGJ1dCBDaGluYSBzYWlkIHRoYXQgYW55IGNvbG9uaWFsIGRlY2lzaW9uIGRpZCBub3QgICBhcHBseS4gVGhlIG1haW4gZGlzcHV0ZSB3YXMgYWJvdXQgdGhlIHdlc3Rlcm4gYW5kIHRoZSBlYXN0ZXJuIGVuZCBvZiB0aGUgbG9uZyBib3JkZXIuIENoaW5hIGNsYWltZWQgICB0d28gYXJlYXMgd2l0aGluIHRoZSBJbmRpYW4gdGVycml0b3J5OiBBa3NhaS1jaGluIGFyZWEgaW4gdGhlIExhZGFraCByZWdpb24gb2YgSmFtbXUgYW5kIEthc2htaXIgYW5kICAgbXVjaCBvZiB0aGUgc3RhdGUgb2YgQXJ1bmFjaGFsIFByYWRlc2ggaW4gd2hhdCB3YXMgdGhlbiBjYWxsZWQgTkVGQSAoTm9ydGggRWFzdGVybiBGcm9udGllciBBZ2VuY3kpLiAgIEJldHdlZW4gMTk1NyBhbmQgMTk1OSwgdGhlIENoaW5lc2Ugb2NjdXBpZWQgdGhlIEFrc2FpLWNoaW4gYXJlYSBhbmQgYnVpbHQgYSBzdHJhdGVnaWMgcm9hZCB0aGVyZS4gRGVzcGl0ZSAgIGEgdmVyeSBsb25nIGNvcnJlc3BvbmRlbmNlIGFuZCBkaXNjdXNzaW9uIGFtb25nIHRvcCBsZWFkZXJzLCB0aGVzZSBkaWZmZXJlbmNlcyBjb3VsZCBub3QgYmUgcmVzb2x2ZWQuICAgQ2hpbmEgbGF1bmNoZWQgYSBzd2lmdCBhbmQgbWFzc2l2ZSBpbnZhc2lvbiBpbiBPY3RvYmVyIDE5NjIgb24gYm90aCB0aGUgZGlzcHV0ZWQgcmVnaW9ucy4gICAgIG9mIDE4ICAgICAgICBTb3VyY2U6IHBvbGl0aWNzIGluIEluZGlhIHNpbmNlIGluZGVwZW5kZW5jZS4gQ2hhcHRlciBuYW1lLSBJbmRpYSdzIGV4dGVybmFsIHJlbGF0aW9ucy4gQ2hhcHRlciA0LiBQYWdlICAgbm8uNjggdG8gNzIuICAgaHR0cHM6Ly93d3cuaW5kaWF0aW1lcy5jb20vZXhwbGFpbmVycy9uZXdzL3doaWNoLWluZGlhbi1wYXJhbWlsaXRhcnktZm9yY2UtZ3VhcmRzLXdoaWNoLSAgYm9yZGVyLTU1OTg0OC5odG1sICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 40,
      "question" : "Which one of the following categories of  Fundamental Rights incorporate protection  against untouchability as a form of  discrimination?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJpZ2h0IHRvIEVxdWFsaXR5IChBcnRpY2xlIDE0IC0xOCkgcHJvdGVjdHMgdGhlIGNpdGl6ZW5zIGFnYWluc3QgYW55IGRpc2NyaW1pbmF0aW9uIGJ5IHRoZSBTdGF0ZSBvbiB0aGUgYmFzaXMgICBvZiByZWxpZ2lvbiwgY2FzdGUsIHJhY2UsIHNleCwgb3IgcGxhY2Ugb2YgYmlydGguICAgVW5kZXIgQXJ0aWNsZSAxNyBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhLCBVbnRvdWNoYWJpbGl0eSBpcyBhYm9saXNoZWQgYW5kIGl0cyBwcmFjdGljZSBpbiBhbnkgZm9ybSBpcyAgIGZvcmJpZGRlbi4gVGhlIGVuZm9yY2VtZW50IG9mIGFueSBkaXNhYmlsaXR5IGFyaXNpbmcgb3V0IG9mIHVudG91Y2hhYmlsaXR5IHNoYWxsIGJlIGFuIG9mZmVuY2UgcHVuaXNoYWJsZSAgIGluIGFjY29yZGFuY2Ugd2l0aCBsYXcuICAgSW4gMTk3NiwgdGhlIFVudG91Y2hhYmlsaXR5IChPZmZlbmNlcykgQWN0LCAxOTU1IGhhcyBiZWVuIGNvbXByZWhlbnNpdmVseSBhbWVuZGVkIGFuZCByZW5hbWVkIGFzIHRoZSAgIFByb3RlY3Rpb24gb2YgQ2l2aWwgUmlnaHRzIEFjdCwgMTk1NSB0byBlbmxhcmdlIHRoZSBzY29wZSBhbmQgbWFrZSBwZW5hbCBwcm92aXNpb25zIG1vcmUgc3RyaW5nZW50LiBUaGUgICBhY3QgZGVmaW5lcyBjaXZpbCByaWdodCBhcyBhbnkgcmlnaHQgYWNjcnVpbmcgdG8gYSBwZXJzb24gYnkgcmVhc29uIG9mIHRoZSBhYm9saXRpb24gb2YgdW50b3VjaGFiaWxpdHkgYnkgICBBcnRpY2xlIDE3IG9mIHRoZSBDb25zdGl0dXRpb24uICAgSG93ZXZlciwgdGhlIHRlcm0gJ3VudG91Y2hhYmlsaXR5JyBoYXMgbm90IGJlZW4gZGVmaW5lZCBlaXRoZXIgaW4gdGhlIENvbnN0aXR1dGlvbiBvciBpbiB0aGUgQWN0LiAgIFNvdXJjZSkgTSBMYXhtaWthbnRoLCBVUFNDIDIwMjAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Right against Exploitation  ",
        "option2" : "Right to Freedom  ",
        "option3" : "Right to Constitutional Remedies   ",
        "option4" : "Right to Equality                   of 8      "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following statements about  the Grand Alliance of 1971 is correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBmaWZ0aCBnZW5lcmFsIGVsZWN0aW9uIHRvIExvayBTYWJoYSB3YXMgaGVsZCBpbiBGZWJydWFyeSAxOTcxLiBUaGUgR3JhbmQgQWxsaWFuY2Ugb2YgMTk3MSB3YXMgYSBwcmUtICBwb2xsIGFsbGlhbmNlIGZvcm1lZCBhZ2FpbnN0IHRoZSBydWxpbmcgcGFydHkuICAgT3B0aW9uIGEgaXMgY29ycmVjdC4gQWxsIHRoZSBtYWpvciBub24tY29tbXVuaXN0LCBub24tQ29uZ3Jlc3Mgb3Bwb3NpdGlvbiBwYXJ0aWVzIGZvcm1lZCBhbiAgIGVsZWN0b3JhbCBhbGxpYW5jZSBrbm93biBhcyB0aGUgR3JhbmQgQWxsaWFuY2UuIFRoZSBTU1AsIFBTUCwgQmhhcnRpeWEgSmFuYSBTYW5naCwgU3dhdGFudHJhIFBhcnR5IGFuZCAgIHRoZSBCaGFydGl5YSBLcmFudGkgRGFsIGNhbWUgdG9nZXRoZXIgdW5kZXIgdGhpcyB1bWJyZWxsYS4gVGhlIHJ1bGluZyBwYXJ0eSBoYWQgYW4gYWxsaWFuY2Ugd2l0aCB0aGUgQ1BJLiAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogVW5saWtlIG5ldyBDb25ncmVzcyB1bmRlciBJbmRpcmEgR2FuZGhpLCB0aGUgR3JhbmQgQWxsaWFuY2UgZGlkIG5vdCBoYXZlIGEgICBjb2hlcmVudCBwb2xpdGljYWwgcHJvZ3JhbW1lLiAgICBJbmRpcmEgR2FuZGhpIHNhaWQgdGhhdCB0aGUgR3JhbmQgYWxsaWFuY2UgaGFkIG9ubHkgb25lIGNvbW1vbiBwcm9ncmFtbWU6IEluZGlyYSBIYXRhbyAoUmVtb3ZlICAgSW5kaXJhKS4gSW4gY29udHJhc3QgdG8gdGhpcywgc2hlIHB1dCBmb3J3YXJkIGEgcG9zaXRpdmUgcHJvZ3JhbW1lIGNhcHR1cmVkIGluIHRoZSBmYW1vdXMgc2xvZ2FuOiBHYXJpYmkgICBIYXRhbyAoUmVtb3ZlIFBvdmVydHkpLiAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IEsuIEthbWFyYWogKG5vdCBSYW0gTWFub2hhciBMb2hpYSkgd2FzIGEgbWFpbiBsZWFkZXIgd2hvIGxlZCB0aGUgR3JhbmQgICBBbGxpYW5jZS4gV2hlcmVhcywgUmFtIE1hbm9oYXIgTG9oaWEgd2FzIGEgbWVtYmVyIG9mIHRoZSBQcmFqYSBTb2NpYWxpc3QgUGFydHkuICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBUaGUgR3JhbmQgQWxsaWFuY2Ugb2YgdGhlIG9wcG9zaXRpb24gcHJvdmVkIGEgYmlnIGZhaWx1cmUuIFRoZWlyIGNvbWJpbmVkIHRhbGx5IG9mICAgc2VhdHMgd2FzIGxlc3MgdGhhbiA0MCBhZ2FpbnN0IDM1MiBzZWF0cyB3b24gYnkgdGhlIENvbmdyZXNzIGxlZCBieSBJbmRpcmEgR2FuZGhpLiAgIFNvdXJjZTogIGNoYXB0ZXIgNSBjaGFsbGVuZ2VzIHRvIGFuZCByZXN0b3JhdGlvbiBvZiB0aGUgY29uZ3Jlc3Mgc3lzdGVtLCBjbGFzcyAxMiBwb2xpdGljcyBpbiBJbmRpYSwgcGFnZSA5Ni0gIDk3ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It was formed by non-Communist and non-  Congress parties.  ",
        "option2" : "It had a clear political and ideological   programme.  ",
        "option3" : " Ram Manohar Lohia was the main leader of   the Grand Alliance.  ",
        "option4" : " It had won a significant number of seats in   the general elections of 1971 to the Lok   Sabha.   "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to the concept of  Political Theory, which of the following  statements are correct?   1. It explains the meanings of concepts like  equality and freedom.   2. It discusses ideas that form the basis of  political institutions.   3. It predicts the performance of political  parties.    Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBvbGl0aWNhbCB0aGVvcnkgZGVhbHMgd2l0aCB0aGUgaWRlYXMgYW5kIHByaW5jaXBsZXMgdGhhdCBzaGFwZSBDb25zdGl0dXRpb25zLCBnb3Zlcm5tZW50cyBhbmQgc29jaWFsIGxpZmUgICBpbiBhIHN5c3RlbWF0aWMgbWFubmVyLiBUaGUgb2JqZWN0aXZlIG9mIHBvbGl0aWNhbCB0aGVvcnkgaXMgdG8gdHJhaW4gY2l0aXplbnMgdG8gdGhpbmsgcmF0aW9uYWxseSBhYm91dCAgIHBvbGl0aWNhbCBxdWVzdGlvbnMgYW5kIGFzc2VzcyB0aGUgcG9saXRpY2FsIGV2ZW50cyBvZiBvdXIgdGltZS4gICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFBvbGl0aWNhbCB0aGVvcnkgY2xhcmlmaWVzIHRoZSBtZWFuaW5nIG9mIGNvbmNlcHRzIHN1Y2ggYXMgZnJlZWRvbSwgZXF1YWxpdHksICAganVzdGljZSwgZGVtb2NyYWN5LCBzZWN1bGFyaXNtLiBJdCBwcm9iZXMgdGhlIHNpZ25pZmljYW5jZSBvZiBwcmluY2lwbGVzIHN1Y2ggYXMgcnVsZSBvZiBsYXcsIHNlcGFyYXRpb24gb2YgICBwb3dlcnMsIGp1ZGljaWFsIHJldmlldywgZXRjLiBUaGlzIGlzIGRvbmUgYnkgZXhhbWluaW5nIHRoZSBhcmd1bWVudHMgYWR2YW5jZWQgYnkgZGlmZmVyZW50IHRoaW5rZXJzIGluICAgZGVmZW5jZSBvZiB0aGVzZSBjb25jZXB0cy4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEJlc2lkZXMgZXhhbWluaW5nIGFyZ3VtZW50cywgcG9saXRpY2FsIHRoZW9yaXN0cyBhbHNvIHJlZmxlY3QgdXBvbiBvdXIgY3VycmVudCAgIHBvbGl0aWNhbCBleHBlcmllbmNlcyBhbmQgcG9pbnQgb3V0IHRyZW5kcyBhbmQgcG9zc2liaWxpdGllcyBmb3IgdGhlIGZ1dHVyZS4gICAgICAgb2YgMTggICAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogUG9saXRpY2FsIHRoZW9yeSBhbHNvIGV4YW1pbmVzIHRoZSBleHRlbnQgdG8gd2hpY2ggZnJlZWRvbSBvciBlcXVhbGl0eSBhcmUgICBhY3R1YWxseSBwcmVzZW50IGluIHRoZSBpbnN0aXR1dGlvbnMgdGhhdCB3ZSBwYXJ0aWNpcGF0ZSBpbiwgZXZlcnlkYXkgbGlmZSBzdWNoIGFzIHNjaG9vbHMsIHNob3BzLCBidXNlcyBvciAgIHRyYWlucyBvciBnb3Zlcm5tZW50IG9mZmljZXMuIEF0IGFuIGFkdmFuY2VkIGxldmVsLCBpdCBsb29rcyBhdCB3aGV0aGVyIGV4aXN0aW5nIGRlZmluaXRpb25zIGFyZSBhZGVxdWF0ZSAgIGFuZCBob3cgZXhpc3RpbmcgaW5zdGl0dXRpb25zIChnb3Zlcm5tZW50LCBidXJlYXVjcmFjeSkgYW5kIHBvbGljeSBwcmFjdGljZXMgbXVzdCBiZSBtb2RpZmllZCB0byAgIGJlY29tZSBtb3JlIGRlbW9jcmF0aWMuICAgICAgU291cmNlOiBOQ0VSVCAxMSB0aGUgcG9saXRpY2FsIHRoZW9yeSBjaGFwdGVyIDEgcG9saXRpY2FsIHRoZW9yeSBpbnRyb2R1Y3Rpb24sIFBhZ2VzIDQgYW5kIDYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 49,
      "question" : "Which among the following statements  best describes the term 'peace'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IERlZmluaW5nIHBlYWNlIGluIHRydWUgc2Vuc2Ugd291bGQgYmUgdG8gc2VlIGl0IGFzIGFic2VuY2Ugb2YgdmlvbGVudCBjb25mbGljdCBvZiBhbGwgICBraW5kcyBpbmNsdWRpbmcgd2FyLCByaW90LCBtYXNzYWNyZSwgYXNzYXNzaW5hdGlvbiwgb3Igc2ltcGx5IHBoeXNpY2FsIGF0dGFjay4gVmlvbGVuY2UgaXMgb2Z0ZW4gcm9vdGVkIGluICAgdGhlIHZlcnkgc3RydWN0dXJlIG9mIHNvY2lldHkuICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogTWFpbnRlbmFuY2Ugb2YgbGF3IGFuZCBvcmRlciBieSB0aGUgc3RhdGUgZG9lcyBub3QgZGVmaW5lIHBlYWNlIGluIGl0cyB0cnVlIHNlbnNlLiAgIExhdyBhbmQgb3JkZXIgYWRtaW5pc3RyYXRpb24gaXMgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBmdW5jdGlvbnMgcGVyZm9ybWVkIGJ5IHRoZSBHb3Zlcm5tZW50LiBUaGUgICBleGVjdXRpdmUgYXJtIG9mIGdvdmVybm1lbnQgbWFpbnRhaW5zIGxhdyBhbmQgb3JkZXIgdGhyb3VnaCB0aGUgcGFyYW1pbGl0YXJ5L3BvbGljZS9hcm15LiAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IExpYmVydHkgaXMgZ2VuZXJhbGx5IGRlZmluZWQgYXMgbm90IGJlaW5nIHN1YmplY3QgdG8gZXh0ZXJuYWwgY29udHJvbHMgb3IgY29lcmNpb24uICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBEZW1vY3JhY3kgaXMgYSBmb3JtIG9mIGdvdmVybm1lbnQgaW4gd2hpY2ggdGhlIHBlb3BsZSBoYXZlIHRoZSBhdXRob3JpdHkgdG8gICBkZWxpYmVyYXRlIGFuZCBkZWNpZGUgdXBvbiB0aGVpciBtYXR0ZXJzIHRocm91Z2ggbGVnaXNsYXRpb24uICAgIFNvdXJjZTogTkNFUlQgMTEgdGhlIHBvbGl0aWNhbCB0aGVvcnkgLSBDaGFwdGVyIDkgUGVhY2UgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "It is defined as the absence of violent   conflict of all kinds.  ",
        "option2" : " It is defined as the maintenance of law and   order by the state.  ",
        "option3" : " It is defined as not being subject to external   controls or coercion.  ",
        "option4" : " It is defined as people having the authority   to decide upon their matters.   "
      }
    },
    {
      "index" : 50,
      "question" : "'Economic Justice' as one of the  objectives of the Indian Constitutional has  been provided in  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEVjb25vbWljIGp1c3RpY2UgZGVub3RlcyB0aGUgbm9uLWRpc2NyaW1pbmF0aW9uIGJldHdlZW4gcGVvcGxlIG9uIHRoZSBiYXNpcyBvZiBlY29ub21pYyBmYWN0b3JzLiBJdCAgIGludm9sdmVzIHRoZSBlbGltaW5hdGlvbiBvZiBnbGFyaW5nIGluZXF1YWxpdGllcyBpbiB3ZWFsdGgsIGluY29tZSBhbmQgcHJvcGVydHkuIEEgY29tYmluYXRpb24gb2Ygc29jaWFsICAganVzdGljZSBhbmQgZWNvbm9taWMganVzdGljZSBkZW5vdGVzIHdoYXQgaXMga25vd24gYXMgJ2Rpc3RyaWJ1dGl2ZSBqdXN0aWNlJy4gICAgIFRoZSB0ZXJtICdqdXN0aWNlJyBpbiB0aGUgUHJlYW1ibGUgZW1icmFjZXMgdGhyZWUgZGlzdGluY3QgZm9ybXMtc29jaWFsLCBlY29ub21pYyBhbmQgcG9saXRpY2FsLCBzZWN1cmVkICAgdGhyb3VnaCB2YXJpb3VzIHByb3Zpc2lvbnMgb2YgRnVuZGFtZW50YWwgUmlnaHRzIGFuZCBEaXJlY3RpdmUgUHJpbmNpcGxlcy4gICAgICBUaGUgY29uY2VwdCBvZiBFY29ub21pYyBKdXN0aWNlIGlzIGFsc28gbWVudGlvbmVkIHVuZGVyIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kuIEFydGljbGUgICAzOSBzYXlzIHRoYXQgdGhlIFN0YXRlIHNoYWxsLCBpbiBwYXJ0aWN1bGFyLCBkaXJlY3QgaXRzIHBvbGljeSB0b3dhcmRzIHNlY3VyaW5nLSAoYSkgdGhhdCB0aGUgY2l0aXplbnMsIG1lbiBhbmQgICB3b21lbiBlcXVhbGx5LCBoYXZlIHRoZSByaWdodCB0byBhbiBhZGVxdWF0ZSBtZWFucyBvZiBsaXZlbGlob29kOyAoYikgdGhhdCB0aGUgb3duZXJzaGlwIGFuZCBjb250cm9sIG9mICAgdGhlIG1hdGVyaWFsIHJlc291cmNlcyBvZiB0aGUgY29tbXVuaXR5IGFyZSBzbyBkaXN0cmlidXRlZCBhcyBiZXN0IHRvIHN1YnNlcnZlIHRoZSBjb21tb24gZ29vZDsgKGMpIHRoYXQgICB0aGUgb3BlcmF0aW9uIG9mIHRoZSBlY29ub21pYyBzeXN0ZW0gZG9lcyBub3QgcmVzdWx0IGluIHRoZSBjb25jZW50cmF0aW9uIG9mIHdlYWx0aCBhbmQgbWVhbnMgb2YgICBwcm9kdWN0aW9uIHRvIHRoZSBjb21tb24gZGV0cmltZW50OyAoZCkgdGhhdCB0aGVyZSBpcyBlcXVhbCBwYXkgZm9yIGVxdWFsIHdvcmsgZm9yIGJvdGggbWVuIGFuZCAgIHdvbWVuLiAgICBTb3VyY2UpIE0gTGF4bWlrYW50aCwgQ2hhcHRlciA0IGFuZCA4ICAgICAgb2YgMTgg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "the Preamble and the Fundamental Rights    ",
        "option2" : "the Preamble and the Directive Principles   of State Policy    ",
        "option3" : "the Fundamental Rights and the Directive   Rights and the Directive Principles of State   Policy    ",
        "option4" : "None of the above      of 8 "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
