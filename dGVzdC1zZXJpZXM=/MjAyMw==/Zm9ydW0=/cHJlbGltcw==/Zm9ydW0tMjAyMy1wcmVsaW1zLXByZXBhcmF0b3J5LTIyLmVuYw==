{
  "testId" : "forum-2023-prelims-preparatory-22",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-22.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to the ancient history of  India under Gupta rule, consider the following  statements:   1.  The Gupta kings adopted big titles such as  paramabhatraraka signifying they did not  recognise other kings under their rule.   2.  There were legal provisions for the throne  to be mandatorily given to the eldest son.   3.  The Kumaramatyas were the high officers  and the personal staff of the emperor.  How many of the statements given above is/  are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgT25seSBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgICBIaXN0b3JpYW5zIG9mdGVuIGNvbnNpZGVyIHRoZSBHdXB0YSBwZXJpb2QgYXMgdGhlICdnb2xkZW4gYWdlJyBvZiBJbmRpYSdzIHBhc3QgYXMgaXQgaXMgb2Z0ZW4gcmVtZW1iZXJlZCBmb3IgICBjZXJ0YWluIGtleSBjbGFzc2ljYWwgZmVhdHVyZXMsIHN1Y2ggYXMgdGhlIHBvbGl0aWNhbCB1bmlmaWNhdGlvbiBvZiBhIGxhcmdlIHBhcnQgb2YgdGhlIHN1YmNvbnRpbmVudCB1bmRlciBhICAgbW9zdGx5IGNlbnRyYWxpemVkIGdvdmVybm1lbnQuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIGtpbmcgd2FzIHRoZSBmb2N1cyBvZiBhZG1pbmlzdHJhdGlvbiBhbmQgR3VwdGEga2luZ3MgYWRvcHRlZCBwb21wb3VzIHRpdGxlcyAgIGxpa2UgcGFyYW1lc2h3YXJhLCBtYWhhcmFqYWRoaXJhamEsIHBhcmFtYWJoYXR0YXJha2EsIHBhcmFtYS1kYWl2YXRhICh0aGUgZm9yZW1vc3Qgd29yc2hpcHBlciBvZiBnb2RzKSwgICBhbmQgcGFyYW1hYmhhZ2F2YXRhIChmb3JlbW9zdCB3b3JzaGlwcGVyIG9mIFZhc3VkZXZhIEtyaXNobmEpLiBUaGUgR3VwdGEgYWRtaW5pc3RyYXRpb24gd2FzICAgZGVjZW50cmFsaXplZCBpbiBuYXR1cmUgYW5kIGNvbnRhaW5lZCBtYW55IGZldWRhdG9yaWVzIGxpa2UgbG9jYWwga2luZ3MgYW5kIHNtYWxsZXIgY2hpZWZzLCB3aG8gcnVsZWQgICBvdmVyIGxhcmdlIHBhcnRzIG9mIHRoZWlyIGVtcGlyZS4gVGhlc2UgbGVzc2VyIHJ1bGVycyBhZG9ybmVkIHRoZWlyIG5hbWVzIHdpdGggdGl0bGVzIGxpa2UgcmFqYSBhbmQgICBtYWhhcmFqYS4gVGh1cyB0aGV5IHJlY29nbmlzZSBvdGhlciBraW5ncyB1bmRlciB0aGVpciBydWxlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIGtpbmdzaGlwIHdhcyBub3JtYWxseSBoZXJlZGl0YXJ5IGJ1dCB0aGVyZSB3YXMgYW4gYWJzZW5jZSBvZiB0aGUgcHJhY3RpY2UgICBvZiBwcmltb2dlbml0dXJlICh0aGF0IGlzLCB0aHJvbmUgYWx3YXlzIGdvaW5nIHRvIHRoZSBlbGRlc3Qgc29uKS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIEd1cHRhIGJ1cmVhdWNyYWN5IHdhcyBsZXNzIGVsYWJvcmF0ZSBhcyBjb21wYXJlZCB0byB0aGF0IG9mIHRoZSBNYXVyeWFzLiBUaGUgICBraW5nIG1haW50YWluZWQgYSBkZWVwIGNvbnRhY3Qgd2l0aCB0aGUgcHJvdmluY2lhbCBhZG1pbmlzdHJhdGlvbiBieSBhIGdyb3VwIG9mIG9mZmljaWFscyBjYWxsZWQgICBLdW1hcmFtYXR5YXMgYW5kIEF5dWt0YXMuIFRoZSBLdW1hcmFtYXR5YXMgd2VyZSB0aGUgaGlnaCBvZmZpY2VycyBhbmQgdGhlIHBlcnNvbmFsIHN0YWZmIG9mIHRoZSAgIGVtcGVyb3IgYW5kIHdlcmUgYXBwb2ludGVkIGJ5IHRoZSBraW5nIGluIHRoZSBob21lIHByb3ZpbmNlcyBhbmQgcG9zc2libHkgcGFpZCBpbiBjYXNoLiBSZWNydWl0bWVudCB3YXMgICBub3QgY29uZmluZWQgdG8gdGhlIHVwcGVyIHZhcm5hcyBvbmx5IGFuZCBzZXZlcmFsIG9mZmljZXMgY2FtZSB0byBiZSBjb21iaW5lZCBpbiB0aGUgaGFuZHMgb2YgdGhlIHNhbWUgICBwZXJzb24sIGFuZCBwb3N0cyBiZWNhbWUgaGVyZWRpdGFyeS4gICAgU291cmNlOiAgTkNFUlQgQ2xhc3MgVkk6IE91ciBQYXN0cyBJLCBDaGFwdGVyIDEwOiBOZXcgRW1waXJlIGFuZCBLaW5nZG9tcyAgICBPbGQgTkNFUlQgQ2xhc3MgWEkgQW5jaWVudCBJbmRpYSBDSEFQVEVSIDIwOiBMaWZlIGluIHRoZSBHdXB0YSBBZ2UsIHBhZ2UxNDAgICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDE2MS8xL1VuaXQtMzMucGRmICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one statement is correct.   ",
        "option2" : "Only two statements are correct.   ",
        "option3" : "All of the three statements are correct.   ",
        "option4" : "None of the statements are correct.    "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements with  reference to Sunga Art in India:   1.  During the Sunga period, stone replaced  wood in the railings and the gateways of the  Buddhist stupas.   2.  A characteristic feature of Sunga art is its  flowing linear rhythm that binds all isolated  objects in one continuous stream of life.  Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgVGhlIFN1bmdhIGVtcGlyZSBwbGF5ZWQgYW4gaW1wb3J0YW50IHJvbGUgaW4gcGF0cm9uaXppbmcgYXJ0LiBCaGFyaHV0LCBCb2RoZ2F5YSBhbmQgU2FuY2hpIGJlYXIgZXZpZGVuY2UgICBvZiB0aGUgcGF0cm9uYWdlIHJlY2VpdmVkIGZyb20gdGhlIFN1bmdhIHJ1bGVycy4gVGhlIGdhdGVzIGFuZCByYWlsaW5ncyBvZiB0aGUgQmhhcmh1dCBzdHVwYSBhbmQgdGhlIGZpbmUgICBnYXRld2F5IHJhaWxpbmdzIHdoaWNoIHN1cnJvdW5kIHRoZSBTYW5jaGkgc3R1cGEgYXJlIHNhaWQgdG8gaGF2ZSBiZWVuIGJ1aWx0IGR1cmluZyB0aGUgU3VuZ2EgcGVyaW9kLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBEdXJpbmcgdGhlIFN1bmdhIHBlcmlvZCwgc3RvbmUgcmVwbGFjZWQgd29vZCBpbiB0aGUgcmFpbGluZ3MgYW5kIHRoZSBnYXRld2F5cyBvZiAgIHRoZSBCdWRkaGlzdCBzdHVwYXMgYXMgbm90aWNlZCBhdCBCaGFyaHV0IGFuZCBTYW5jaGkuIEJoYXJodXQgc3R1cGEgaXMgcmVwbGV0ZSB3aXRoIHNjdWxwdHVyZXMgLSBhcGFydCBmcm9tICAgZmxvcmFsIGRlc2lnbnMsIGFuaW1hbCwgZmlndXJlcywgWWFrc2hhcyBhbmQgaHVtYW4gZmlndXJlcy4gRXZlbiB0aGUgc3RvbmUgcmFpbGluZyBhcm91bmQgdGhlIFNhbmNoaSBTdHVwYSAgIGlzIGluIHJpY2ggYmVsaWVmIHdvcmsuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBtb3N0IGNoYXJhY3RlcmlzdGljIGZvcm1hbCBxdWFsaXR5IG9mIFN1bmdhIGFydCBpcyBpdHMgZmxvd2luZyBsaW5lYXIgcmh5dGhtICAgdGhhdCBiaW5kcyBhbGwgaXNvbGF0ZWQgb2JqZWN0cyBpbiBvbmUgY29udGludW91cyBzdHJlYW0gb2YgbGlmZS4gVGhlIGNvcGluZyBzdG9uZXMgb2YgdGhlIHBlcmlvZCBoYXZlIGh1Z2UgICBsb3R1cyBzdGFsa3MgZmxvd2luZyBpbiByaHl0aG1pY2FsIHdhdmVzIGZyb20gZm9ybSB0byBmb3JtLiBUaGUgdmVnZXRhbCB3b3JsZCBpcyBpbnRpbWF0ZWx5LCBlbmdyb3NzaW5nbHkgICBhbmQgbHV4dXJpb3VzbHkgcmVuZGVyZWQgaW4gdGhlIEJoYXJodXQsIEJvZGhnYXlhIGFuZCBTYW5jaGkgcmVsaWVmcy4gSXRzIHJhZGlhdGluZyBhbmQgY29udGludW91cyBsaW5lYXIgICBtb3ZlbWVudHMgZG9taW5hdGUgdGhlIGNvbXBvc2l0aW9uIGFuZCBhbGwgdGhlIGZpZ3VyZXMgb2YgbWVuIGFuZCBhbmltYWxzIGJlY29tZSBlcXVhbCBhbmQgaW50ZWdyYWwgICBwYXJ0cyBvZiB0aGUgd2hvbGUuICAgIFNvdXJjZTogIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNjc3MDUvMS9Vbml0LTEucGRmICAgIEFuY2llbnQgSW5kaWEgQnkgVi4gRC4gTUFIQUpBTiDCtyAyMDE2ICAgICAgaHR0cHM6Ly93d3cuZ29vZ2xlLmNvLmluL2Jvb2tzL2VkaXRpb24vQW5jaWVudF9JbmRpYS83VEpsRHdBQVFCQUo/aGw9ZW4mZ2Jwdj0xJmRxPXN0b25lK3JlcGwgIGFjZWQrd29vZCtpbit0aGUrcmFpbGluZ3MrYW5kK3RoZStnYXRld2F5cytvZit0aGUrQnVkZGhpc3Qrc3R1cGFzK2lzK25vdGljZWQrYXQrQmhhcmh1dCZwZz1QQTI3ICA5JnByaW50c2VjPWZyb250Y292ZXIgICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following was/were  important ports during post Mauryan period?   1. Arikamedu   2. Tamralipti   3. Broach   4. Uraiyur   Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgUG9zdCBNYXVyeWFuIEFnZSBsaWtlIHRoYXQgb2YgU2FrYXMsIEt1c2hhbnMsIFNhdGF2YWhhbmFzICgyMDAgQi5DLi1BIEQuIDIwMCkgYW5kIHRoZSBmaXJzdCBUYW1pbCAgIHN0YXRlcyB3YXMgdGhlIG1vc3QgZmxvdXJpc2hpbmcgcGVyaW9kIGluIHRoZSBoaXN0b3J5IG9mIGNyYWZ0cyBhbmQgY29tbWVyY2UgaW4gYW5jaWVudCBJbmRpYS4gICAgIFRoZSBpbW1lbnNlIGNvbW1lcmNpYWwgYWN0aXZpdHkgd2FzIGJvbHN0ZXJlZCBieSB0aGUgdGhyaXZpbmcgdHJhZGUgYmV0d2VlbiBJbmRpYSBhbmQgdGhlIEVhc3RlciBSb21hbiAgIEVtcGlyZS4gV2l0aCB0aGUgbW92ZW1lbnQgb2YgQ2VudHJhbCBBc2lhbiBwZW9wbGUgbGlrZSBTYWthcywgUGFydGhpYW5zIGFuZCBLdXNoYW5zLCB0cmFkZSBjYW1lIHRvIGJlICAgY2FycmllZCBhY3Jvc3MgdGhlIHNlYS4gICAgIE9wdGlvbiAxLCAyIGFuZCAzIGFyZSBjb3JyZWN0LiBBbW9uZyB0aGUgcG9ydHMsIHRoZSBpbXBvcnRhbnQgb25lcyB3ZXJlIEJyb2FjaCBhbmQgU29wYXJhIG9uIHRoZSAgIHdlc3Rlcm4gY29hc3QsIGFuZCBBcmlrYW1lZHUgYW5kIFRhbXJhbGlwdGkgb24gdGhlIGVhc3Rlcm4gY29hc3QuIE91dCBvZiB0aGVzZSBwb3J0cyBCcm9hY2ggd2FzIHRoZSAgIG1vc3QgaW1wb3J0YW50IGFzIG5vdCBvbmx5IGdvb2RzIHdlcmUgZXhwb3J0ZWQgZnJvbSBoZXJlIGJ1dCAgYWxzbyBnb29kcyB3ZXJlIHJlY2VpdmVkLiBBY3Jvc3MgbGFuZCwgdGhlICAgY29udmVyZ2luZyBwb2ludCBvZiB0cmFkZSByb3V0ZXMgd2FzIFRheGlsYSwgd2hpY2ggd2FzIGNvbm5lY3RlZCB3aXRoIHRoZSBTaWxrIFJvdXRlIHBhc3NpbmcgdGhyb3VnaCAgIENlbnRyYWwgQXNpYS4gVWpqYWluIHdhcyB0aGUgbWVldGluZyBwb2ludCBvZiBnb29kIG51bWJlciBvZiB0cmFkZSByb3V0ZXMuICAgIE9wdGlvbiA0IGlzIGluY29ycmVjdC4gVXJhaXl1ciAoV29yYWl5dXIpIGlzIGEgbmVpZ2hib3VyaG9vZCByZWdpb24gaW4gVGlydWNoaXJhcHBhbGxpIGluIFRhbWlsIE5hZHUsIEluZGlhLiAgIEl0IHdhcyB0aGUgY2FwaXRhbCBvZiB0aGUgZWFybHkgQ2hvbGFzLiBJdCBpcyBub3QgYSBwb3J0IG9yIGxvY2F0ZWQgbmVhciBzZWEuICAgIFNvdXJjZTogIE9sZCBOQ0VSVCBDbGFzcyBYSSBBbmNpZW50IEluZGlhOiBDSEFQVEVSIDE4IENyYWZ0cywgVHJhZGUgYW5kIFRvd25zIGluIHRoZSBQb3N0LU1hdXJ5YSBBZ2UgICBwYWdlIDEyNy0yOCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only    ",
        "option2" : "2, 3 and 4 only    ",
        "option3" : "1, 2 and 3 only    ",
        "option4" : "1, 3 and 4 only    "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the ancient and medieval  history of India, what is the main theme of  Abhijyanashakuntalam?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcGxheSBBYmhpanlhbnNoYWt1bnRhbGFtIGlzIGEgdGVzdGltb255IG9mIHRoZSBwb2V0aWMgZ2VuaXVzIG9mIEthbGlkYXNhLiBLYWxpZGFzYSBpcyByZWdhcmRlZCBhcyB0aGUgICBiZXN0IHBvZXQgaW4gU2Fuc2tyaXQgbGFuZ3VhZ2UuICAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogVGhlIFBhbGkgd29yayBNaWxpbmRhLVBhbmhhIChUaGUgUXVlc3Rpb25zIG9mIE1pbGluZGEpIGdpdmVzIGluZm9ybWF0aW9uIGFib3V0IHRoZSAgIFlhdmFuYSBraW5nIE1lbmFuZGVyIGFuZCBvbiBCdWRkaGlzbSBvZiB0aGlzIHBlcmlvZC4gICAgT3B0aW9uIGIgaXMgY29ycmVjdDogS2FsaWRhc2EgaXMga25vd24gZm9yIGhpcyBwbGF5cyBkZXBpY3RpbmcgbGlmZSBpbiB0aGUga2luZydzIGNvdXJ0LiBBbiBpbnRlcmVzdGluZyBmZWF0dXJlICAgYWJvdXQgdGhlc2UgcGxheXMgaXMgdGhhdCB0aGUga2luZyBhbmQgbW9zdCBicmFobWlucyBhcmUgc2hvd24gYXMgc3BlYWtpbmcgU2Fuc2tyaXQsIHdoaWxlIHdvbWVuIGFuZCAgIG1lbiBvdGhlciB0aGFuIHRoZSBraW5nIGFuZCBicmFobWlucyB1c2UgUHJha3JpdC4gSGlzIG1vc3QgZmFtb3VzIHBsYXksIEFiaGlqbmFuYSBTaGFrdW50YWxhbSBpcyB0aGUgICBzdG9yeSBvZiB0aGUgbG92ZSBiZXR3ZWVuIGEga2luZyBuYW1lZCBEdXNoeWFudGEgYW5kIGEgeW91bmcgd29tYW4gbmFtZWQgU2hha3VudGFsYS4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0OiBNYWxhdmlrYWduaW1pdHJhbSBpcyBhIHBsYXkgYnkgS2FsaWRhc2Egd2hpY2ggcHJlc2VydmVzIHRoZSBtZW1vcnkgb2YgdGhlIGRlZmVhdCAgIG9mIHRoZSB5YXZhbmFzIGF0IHRoZSBoYW5kcyBvZiBWYXN1bWl0cmEsIHRoZSBncmFuZHNvbiBvZiBQdXNoeWFtaXRyYSBTdW5nYS4gQWNjb3JkaW5nIHRvIHRoZSBwbGF5LCAgIFB1c2hwYW1pdHJhIChQdXNoeWFtaXRyYSkgc2VudCBoaXMgZ3JhbmRzb24gVmFzdW1pdHJhIChBZ25pbWl0cmEncyBzb24pIHdobyBlc2NvcnRlZCB0aGUgc2FjcmlmaWNpYWwgICBob3JzZSBkdXJpbmcgaXRzIHRyYXZlbHMgdGhyb3VnaCBkaWZmZXJlbnQgYXJlYXMgcHJpb3IgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBBc3ZhbWVkaGEgeWFqeWEuIFZhc3VtaXRyYSAgIGRlZmVhdGVkIHRoZSBZYXZhbmFzIG9uIHRoZSBiYW5rcyBvZiB0aGUgU2luZGh1IFJpdmVyLiAgICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBNcmljY2hha2F0aWthIHdhcyB3cml0dGVuIGJ5IHRoZSBzdWRyYWthLiBJdCBjb250YWlucyB0aGUgTG92ZSBhZmZhaXIgb2YgeW91bmcgICBicmFobWluIENoYXJ1ZGF0dGEgd2l0aCBhIHdlYWx0aHkgY291cnRlc2FuLiAgICBTb3VyY2U6ICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzY3NzA1LzEvVW5pdC0xLnBkZiAgICBBcnQgYW5kIGN1bHR1cmUgYnkgTml0aW4gc2luZ2hhbmlhLiBDaGFwdGVyIG5hbWUtIEluZGlhbiBsaXRlcmF0dXJlLiBQYWdlIG5vLSA1MDIuICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It gives information about the Yavana king   Menander and on Buddhism of this period   ",
        "option2" : " It is the story of the love between a king   named Dushyanta and a young woman   ",
        "option3" : " It preserves the memory of the defeat of the   yavanas at the hands of Vasumitra   ",
        "option4" : " It is the story of love affair of young brahmin   Charudatta with a wealthy courtesan.   "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following was introduced by  the Kushanas in India?   1.  The gates and railings of the Bharhut stupa   2.  Depiction of Buddha on the coins   3.  Satrap system of government   4.  Flowering of visual arts including small  terracotta images   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gMSBpcyBpbmNvcnJlY3Q6IFRoZSBTdW5nYSBlbXBpcmUgcGxheWVkIGFuIGltcG9ydGFudCByb2xlIGluIHBhdHJvbml6aW5nIGFydC4gQmhhcmh1dCwgQm9kaGdheWEgICBhbmQgU2FuY2hpIGJlYXIgZXZpZGVuY2Ugb2YgdGhlIHBhdHJvbmFnZSByZWNlaXZlZCBmcm9tIHRoZSBTdW5nYSBydWxlcnMuIFRoZSBnYXRlcyBhbmQgcmFpbGluZ3Mgb2YgdGhlICAgQmhhcmh1dCBzdHVwYSBhbmQgdGhlIGZpbmUgZ2F0ZXdheSByYWlsaW5ncyB3aGljaCBzdXJyb3VuZCB0aGUgU2FuY2hpIHN0dXBhIGFyZSBzYWlkIHRvIGhhdmUgYmVlbiBidWlsdCAgIGR1cmluZyB0aGUgU3VuZ2EgcGVyaW9kLiBBIHBoZW5vbWVuYWwgc3BhdGlhbCBleHBhbnNpb24gb2YgQnVkZGhpc3QgbW9uYXN0aWMgc2l0ZXMgb2NjdXJyZWQgZnJvbSB0aGUgICBzZWNvbmQtZmlyc3QgY2VudHVyaWVzIEJDRSBvbndhcmRzLiAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgT3B0aW9uIDIgaXMgY29ycmVjdDogUmVwcmVzZW50YXRpb24gb2YgdGhlIEJ1ZGRoYSBhcyBCb2RkbyBpcyBhIHNpZ25pZmljYW50IGFkZGl0aW9uIHRvIHRoZSByZXBlcnRvaXJlIG9mICAgZGVpdGllcyBkZXBpY3RlZCBvbiBLYW5pc2hrYSdzIGNvaW5zLiBUaGUgQnVkZGhhIGlzIGRlcGljdGVkIG9uIHRoZSBjb2luYWdlIGluIHRoZSBzYW1lIHdheSBhcyB0aGUgZ29kcyAgIHN1Y2ggYXMgU2l2YSwgTWl0aHJhLCBBaHVybWF6ZGEgZXRjLiBCeSBwbGFjaW5nIHRoZSBCdWRkaGEgb24gYSBjb2luLCBLYW5pc2hrYSBoYXMgZXF1YXRlZCBoaXMgcG9zaXRpb24gICB3aXRoIHRoYXQgb2YgZGVpdGllcywgYW5kIHRoZXJlYnkgaW1wbGllZCBmb3IgaGltc2VsZiBhIGRpdmluZSByb2xlLiBUaGUgQnVkZGhhIGltYWdlcyB1c2VkIG9uIEthbmlzaGthJ3MgICBjb2lucyBzaG93IHRoYXQgaGlzIGFkaGVyZW5jZSB0byBCdWRkaGlzbSB3YXMgYSBjbG9zZSByZWZsZWN0aW9uIG9mIHRoZSBjdWx0cyBwcmV2YWlsaW5nIGluIGhpcyByZWFsbS4gICAgT3B0aW9uIDMgaXMgY29ycmVjdDogVGhlIEt1c2hhbmFzIGludHJvZHVjZWQgdGhlICdTYXRyYXAnIHN5c3RlbSBvZiBnb3Zlcm5tZW50LCB1bmRlciB3aGljaCB0aGUgICBlbXBpcmUgd2FzIGRpdmlkZWQgaW50byBudW1lcm91cyBzYXRyYXBpcyBhbmQgZWFjaCBzYXRyYXBpIHdhcyBwbGFjZWQgdW5kZXIgdGhlIHJ1bGUgb2YgYSBzYXRyYXAuIFRoZXNlICAgc3lzdGVtcyBsZWQgdG8gdGhlIGRldmVsb3BtZW50IG9mIGEgZmV1ZGF0b3J5IG9yZ2FuaXphdGlvbiB3aGVyZWluIHRoZXNlIENlbnRyYWwgQXNpYW4gY29ucXVlcm9ycyAgIGVzdGFibGlzaGVkIHRoZWlyIHN1cHJlbWFjeSBvdmVyIG51bWVyb3VzIHNtYWxsIHByaW5jZXMgd2hvIHJlZ3VsYXJseSBwYWlkIHRyaWJ1dGVzIHRvIHRoZW0uIFRoZSBTaGFrYXMgICBhbmQgdGhlIEt1c2hhbmFzIHN0cmVuZ3RoZW5lZCB0aGUgaWRlYSBvZiB0aGUgZGl2aW5lIG9yaWdpbiBvZiBraW5nc2hpcC4gVGhleSB0b29rIHRoZSB0aXRsZSBvZiAnRGV2aXB1dHJhJywgICB0aGF0IGlzLCB0aGUgc29ucyBvZiBHb2QuICAgIE9wdGlvbiA0IGlzIGluY29ycmVjdDogVGhlIFN1bmdhIHBlcmlvZCBzYXcgdGhlIGZsb3dlcmluZyBvZiB2aXN1YWwgYXJ0cyBpbmNsdWRpbmcgc21hbGwgdGVycmFjb3R0YSAgIGltYWdlcywgbGFyZ2VyIHN0b25lIHNjdWxwdHVyZXMgYW5kIGFyY2hpdGVjdHVyYWwgbW9udW1lbnRzIGxpa2UgdGhlIENhaXR5YSBIYWxsIGF0IEJoYWphLCB0aGUgc3R1cGEgYXQgICBCaGFyaHV0IGFuZCB0aGUgR3JlYXQgU3R1cGEgYXQgU2FuY2hpLiAgICBTb3VyY2U6ICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzY3NzA1LzEvVW5pdC0xLnBkZiAgICBBbmNpZW50IGFuZCBtZWRpZXZhbCBoaXN0b3J5IG9mIEluZGlhIGJ5IHBvb25hbSBkYWxhbCBkYWhpeWEgcGRmLiBDaGFwdGVyIG5hbWUtIFBPTElUSUNBTCBBTkQgICBDVUxUVVJBTCBERVZFTE9QTUVOVFMgRFVSSU5HIGMuIDIwMCBCQ0UtMzAwIENFIFBhZ2Ugbm8gLTI4OC4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements with  reference to the Satvahana administration:  1.  The Satvahana kingdom was divided into  subdivisions called aharas.   2.  The ministers or advisors of the king under  satavahana administration were called as  the amatyas.   3.  The highest level of administration in  satavahana administration was under the  charge of a gaulmika.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgU2F0YXZhaGFuYSBraW5nIHdhcyByZXByZXNlbnRlZCBhcyB0aGUgdXBob2xkZXIgb2YgZGhhcm1hIGFuZCBoZSBnZW5lcmFsbHkgICBzdHJvdmUgZm9yIHRoZSByb3lhbCBhbmQgZGl2aW5lIGlkZWFsIHNldCBmb3J0aCBpbiB0aGUgZGhhcm1hc2hhc3RyYXMuIFRoZSBTYXRhdmFoYW5hcyByZXRhaW5lZCBzb21lIG9mIHRoZSAgIGFkbWluaXN0cmF0aXZlIHVuaXRzIG9mIEFzaG9rYW4gdGltZXMuIFRoZSBTYXRhdmFoYW5hIGtpbmdkb20gd2FzIGRpdmlkZWQgaW50byBzdWJkaXZpc2lvbnMgY2FsbGVkICAgYWhhcmFzIG9yIHJhc2h0cmFzLCBtZWFuaW5nIGRpc3RyaWN0cy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSW4gdGhlIHNhdGF2YWhhbmEgYWRtaW5pc3RyYXRpb24gdGhlcmUgd2VyZSBvZmZpY2VycyBjYWxsZWQgICBhbWF0eWFzL21haGFtYXRyYXMgd2hvIHdlcmUgcGVyaGFwcyBtaW5pc3RlcnMgb3IgYWR2aXNvcnMgb2YgdGhlIGtpbmcuIEJ1dCwgdW5saWtlIE1hdXJ5YW4gdGltZXMsICAgY2VydGFpbiBtaWxpdGFyeSBhbmQgZmV1ZGFsIHRyYWl0cyBhcmUgZm91bmQgaW4gdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBTYXRhdmFoYW5hcy4gRm9yIGluc3RhbmNlLCB0aGUgICBzZW5hcGF0aSB3YXMgYXBwb2ludGVkIHByb3ZpbmNpYWwgZ292ZXJub3IuIEl0IHdhcyBwcm9iYWJseSBkb25lIHRvIGtlZXAgdGhlIHRyaWJhbCBwZW9wbGUgd2hvIHdlcmUgbm90ICAgdGhvcm91Z2hseSBCcmFobWFuaXNlZCB1bmRlciBzdHJvbmcgbWlsaXRhcnkgY29udHJvbC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgbG93ZXN0IGxldmVsIG9mIGFkbWluaXN0cmF0aW9uIChhbmQgbm90IGhpZ2hlc3QgbGV2ZWwgb2YgYWRtaW5pc3RyYXRpb24pIHdhcyAgIGEgZ3JhbWEgKHZpbGxhZ2UpIGluIHNhdGF2YWhhbmEgYWRtaW5pc3RyYXRpb24gd2hpY2ggd2FzIHVuZGVyIHRoZSBjaGFyZ2Ugb2YgYSBnYXVsbWlrYSAodmlsbGFnZSAgIGhlYWRtYW4pLiBIZSB3YXMgYWxzbyB0aGUgaGVhZCBvZiBhIG1pbGl0YXJ5IHJlZ2ltZW50IGNvbnNpc3Rpbmcgb2YgbmluZSBjaGFyaW90cywgbmluZSBlbGVwaGFudHMsIDI1IGhvcnNlcyAgIGFuZCA0NS1mb290IHNvbGRpZXJzLiBUaGUgbWlsaXRhcnkgY2hhcmFjdGVyIG9mIHRoZSBTYXRhdmFoYW5hcyBpcyBhbHNvIGV2aWRlbnQgd2l0aCB0aGUgdXNlIG9mIHRlcm1zIGxpa2UgICBrYXRha2EgYW5kIHNrYW5kaGF2YXJhcyBpbiB0aGVpciBpbnNjcmlwdGlvbnMsIHdoaWNoIGRlbm90ZSBtaWxpdGFyeSBjYW1wcyBhbmQgc2V0dGxlbWVudHMgYXR0YWNoZWQgdG8gYSAgIHBhcnRpY3VsYXIga2luZyBhbmQgYWxzbyBzZXJ2ZWQgYXMgYWRtaW5pc3RyYXRpdmUgY2VudHJlcy4gICAgIFNvdXJjZTogIEFuY2llbnQgYW5kIG1lZGlldmFsIGhpc3Rvcnkgb2YgSW5kaWEgYnkgcG9vbmFtIGRhbGFsIGRhaGl5YSBwZGYuIENoYXB0ZXIgbmFtZS0gUE9MSVRJQ0FMIEFORCAgIENVTFRVUkFMIERFVkVMT1BNRU5UUyBEVVJJTkcgYy4gMjAwIEJDRS0zMDAgQ0UgUGFnZSBubyAtMjk3LiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 7,
      "question" : "With reference to the southern kingdoms  of Pallavas and Chalukyas, consider the  following statements:   1.  The Aihole inscription gives details about  the reign of Pulakesin II.    2.  Harshavardhana was defeated on the banks  of the river Narmada by a Pallava ruler.   3.  The Pallavas issued their earlier inscriptions  in Prakrit and Sanskrit.   4.  Hiuen Tsang paid visit to the Chalukya  kingdom.    Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUHVsYWtlc2luIEkgd2FzIHRoZSBmb3VuZGVyIG9mIHRoZSBDaGFsdWt5YSBkeW5hc3R5ICg1NDMgLSA3NTUgQS5ELikuIEhlIGVzdGFibGlzaGVkICAgYSBzbWFsbCBraW5nZG9tIHdpdGggVmF0YXBpIG9yIEJhZGFtaSBhcyBpdHMgY2FwaXRhbC4gVGhlIG1vc3QgaW1wb3J0YW50IHJ1bGVyIG9mIHRoaXMgZHluYXN0eSB3YXMgICBQdWxha2VzaW4gSUkgKDYwOC02NDIgQS5ELikuIFRoZSBBaWhvbGUgaW5zY3JpcHRpb24gaXNzdWVkIGJ5IGhpbSBnaXZlcyB0aGUgZGV0YWlscyBvZiBoaXMgcmVpZ24uICAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBPbmUgb2YgdGhlIG5vdGFibGUgYWNoaWV2ZW1lbnRzIG9mIFB1bGFrZXNpbiBJSSAobm90IGEgUGFsbGF2YSBydWxlcikgd2FzIHRoZSAgIGRlZmVhdCBvZiBIYXJzaGF2YXJkaGFuYSBvbiB0aGUgYmFua3Mgb2YgdGhlIHJpdmVyIE5hcm1hZGEuIEluIGhpcyBmaXJzdCBleHBlZGl0aW9uIGFnYWluc3QgdGhlIFBhbGxhdmFzLCAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBQdWxha2VzaW4gSUkgZW1lcmdlZCB2aWN0b3Jpb3VzLiBCdXQgaGUgc3VmZmVyZWQgYSBodW1pbGlhdGluZyBkZWZlYXQgYXQgdGhlIGhhbmRzIG9mIE5hcmFzaW1oYXZhcm1hbiBJICAgbmVhciBLYW5jaGkuIFN1YnNlcXVlbnRseSwgdGhlIENoYWx1a3lhIGNhcGl0YWwgVmF0YXBpIHdhcyBjYXB0dXJlZCBhbmQgZGVzdHJveWVkIGJ5IHRoZSBQYWxsYXZhcy4gICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiAgVGhlIFBhbGxhdmFzIGlzc3VlZCB0aGVpciBlYXJsaWVyIGluc2NyaXB0aW9ucyBpbiBQcmFrcml0IGFuZCBTYW5za3JpdCBiZWNhdXNlIG9mICAgdGhlaXIgU2F0YXZhaGFuYSBjb25uZWN0aW9ucywgYW5kIGFsc28gcGF0cm9uaXNlZCBCcmFobWFuaXNtLiBXaGVuIFRvbmRhaW1hbmRhbGFtIHdhcyBjb25xdWVyZWQgICBieSB0aGUgU2F0YXZhaGFuYXMsIHRoZSBQYWxsYXZhcyBiZWNhbWUgdGhlaXIgZmV1ZGF0b3JpZXMuIEFmdGVyIHRoZSBmYWxsIG9mIHRoZSBTYXRhdmFoYW5hcyBpbiB0aGUgdGhpcmQgICBjZW50dXJ5IEEuRC4sIHRoZXkgYmVjYW1lIGluZGVwZW5kZW50LiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgbW9zdCBpbXBvcnRhbnQgZXZlbnQgaW4gdGhlIHJlaWduIG9mIFB1bGFrZXNpbiBJSSB3YXMgdGhlIHZpc2l0IG9mIEhpdWVuICAgVHNhbmcgdG8gaGlzIGtpbmdkb20uIEtpcnRpdmFybWFuIElJIHdhcyB0aGUgbGFzdCBvZiB0aGUgcnVsZXJzIG9mIHRoZSBDaGFsdWt5YXMuICAgIFNvdXJjZTogIFRhbWlsIE5hZHUgSGlzdG9yeSA4Mi04MywgOTAtOTIgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4          "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to the Silk Road, consider  the following statements:   1.  The Silk Road began in Tibet and extended  up to the Mediterranean Sea.   2.  Merchants from the Indian subcontinent  exposed China to Buddhism via. Silk Road.   3.  China's Belt and Road Initiative is inspired by  the Silk Road.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgU2lsayBSb2FkLCBhbHNvIGNhbGxlZCBTaWxrIFJvdXRlLCB3YXMgYW4gYW5jaWVudCB0cmFkZSByb3V0ZSB0aGF0IGxpbmtlZCB0aGUgV2VzdGVybiB3b3JsZCB3aXRoIHRoZSAgIE1pZGRsZSBFYXN0IGFuZCBBc2lhLiBJdCB3YXMgYSBtYWpvciBjb25kdWl0IGZvciB0cmFkZSBiZXR3ZWVuIHRoZSBSb21hbiBFbXBpcmUgYW5kIENoaW5hIGFuZCBsYXRlciAgIGJldHdlZW4gbWVkaWV2YWwgRXVyb3BlYW4ga2luZ2RvbXMgYW5kIENoaW5hLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgU2lsayBSb2FkIGJlZ2FuIGluIG5vcnRoLWNlbnRyYWwgQ2hpbmEgaW4gWGknYW4gKGluIG1vZGVybiBTaGFhbnhpICAgcHJvdmluY2UpLiBBIGNhcmF2YW4gdHJhY2sgc3RyZXRjaGVkIHdlc3QgYWxvbmcgdGhlIEdyZWF0IFdhbGwgb2YgQ2hpbmEsIGFjcm9zcyB0aGUgUGFtaXJzLCB0aHJvdWdoICAgQWZnaGFuaXN0YW4sIGFuZCBpbnRvIHRoZSBMZXZhbnQgYW5kIEFuYXRvbGlhLiBJdHMgbGVuZ3RoIHdhcyBhYm91dCA0LDAwMCBtaWxlcyAobW9yZSB0aGFuIDYsNDAwIGttKS4gR29vZHMgICB3ZXJlIHRoZW4gc2hpcHBlZCB0byBFdXJvcGUgdmlhIHRoZSBNZWRpdGVycmFuZWFuIFNlYS4gQ2hpbmVzZSBtZXJjaGFudHMgZXhwb3J0ZWQgc2lsayB0byBXZXN0ZXJuICAgYnV5ZXJzLiBGcm9tIFJvbWUgYW5kIGxhdGVyIGZyb20gQ2hyaXN0aWFuIGtpbmdkb21zLCB3b29scywgZ29sZCwgYW5kIHNpbHZlciB0cmF2ZWxlZCBlYXN0d2FyZC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXBhcnQgZnJvbSBtYXRlcmlhbCBnb29kcywgcmVsaWdpb24gd2FzIG9uZSBvZiB0aGUgV2VzdCdzIG1ham9yIGV4cG9ydHMgYWxvbmcgdGhlICAgU2lsayBSb2FkLiBFYXJseSBBc3N5cmlhbiBDaHJpc3RpYW5zIHRvb2sgdGhlaXIgZmFpdGggdG8gQ2VudHJhbCBBc2lhIGFuZCBDaGluYSwgd2hpbGUgbWVyY2hhbnRzIGZyb20gdGhlICAgSW5kaWFuIHN1YmNvbnRpbmVudCBleHBvc2VkIENoaW5hIHRvIEJ1ZGRoaXNtLiBEaXNlYXNlIGFsc28gdHJhdmVsZWQgYWxvbmcgdGhlIFNpbGsgUm9hZC4gTWFueSBzY2hvbGFycyAgIGJlbGlldmUgdGhhdCB0aGUgYnVib25pYyBwbGFndWUgd2FzIHNwcmVhZCB0byBFdXJvcGUgZnJvbSBBc2lhLCBjYXVzaW5nIHRoZSBCbGFjayBEZWF0aCBwYW5kZW1pYyBpbiB0aGUgICBtaWQtMTR0aCBjZW50dXJ5LiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBQYXJ0cyBvZiB0aGUgU2lsayBSb2FkIHN1cnZpdmUgaW4gdGhlIGZvcm0gb2YgYSBwYXZlZCBoaWdod2F5IGNvbm5lY3RpbmcgUGFraXN0YW4gICBhbmQgdGhlIFV5Z2h1ciBBdXRvbm9tb3VzIFJlZ2lvbiBvZiBYaW5qaWFuZyBpbiBDaGluYS4gSW4gdGhlIDIxc3QgY2VudHVyeSB0aGUgVW5pdGVkIE5hdGlvbnMgcGxhbm5lZCB0byAgIHNwb25zb3IgYSB0cmFucy1Bc2lhbiBtb3RvciBoaWdod2F5IGFuZCByYWlscm9hZC4gVGhlIFNpbGsgUm9hZCBhbHNvIGluc3BpcmVkIENoaW5hJ3MgQmVsdCBhbmQgUm9hZCAgIEluaXRpYXRpdmUsIGEgZ2xvYmFsIGluZnJhc3RydWN0dXJlIGRldmVsb3BtZW50IHN0cmF0ZWd5IGF1dGhvcmVkIGJ5IFByZXNpZGVudCBhbmQgR2VuZXJhbCBTZWNyZXRhcnkgWGkgICBKaW5waW5nLiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5icml0YW5uaWNhLmNvbSBvcGljL1NpbGstUm9hZC10cmFkZS1yb3V0ZSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "2 and 3 only     "
      }
    },
    {
      "index" : 9,
      "question" : "In context of Ancient Indian history,  consider the following paragraph:   He is famous for his visit to India and as a  translator of Buddhist scriptures. He criticized  some philosophical thoughts in Hinduism and  Jainism. King Harshavardhan organized a  religious assembly at Kanauj to honour this  scholar towards the end of his reign.   Which foreign traveler to India is described in  the above paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgYWNjb3VudHMgb2YgZm9yZWlnbiB0cmF2ZWxsZXJzIHRoYXQgY2FtZSB0byBJbmRpYSBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBwcmV2YWlsaW5nIHNvY2lvICAgZWNvbm9taWMgY29uZGl0aW9ucyBkdXJpbmcgdGhlaXIgdmlzaXQuIE1lZ2FzdGhlbmVzLCBhbWJhc3NhZG9yIG9mIFNlbGV1Y3VzIE5pa2F0b3Igd2FzIHRoZSBmaXJzdCBmb3JlaWduICAgdHJhdmVsbGVyIHRvIEluZGlhLiAgICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBGYS1oaWVuICgzMzctYy40MjIgQUQpOiBUaGUgZmFtb3VzIENoaW5lc2UgcGlsZ3JpbSwgRmFoaWVuIHZpc2l0ZWQgSW5kaWEgZHVyaW5nICAgdGhlIHJlaWduIG9mIENoYW5kcmFndXB0YSBJSS4gT3V0IG9mIGhpcyBuaW5lIHllYXJzIHN0YXkgaW4gSW5kaWEsIGhlIHNwZW50IHNpeCB5ZWFycyBpbiB0aGUgR3VwdGEgZW1waXJlLiAgIEhlIGNhbWUgdG8gSW5kaWEgYnkgdGhlIGxhbmQgcm91dGUuIEhlIHJldHVybmVkIGJ5IHRoZSBzZWEgcm91dGUsIHZpc2l0aW5nIG9uIHRoZSB3YXkgQ2V5bG9uIGFuZCBKYXZhLiBUaGUgICBtYWluIHB1cnBvc2Ugb2YgaGlzIHZpc2l0IHdhcyB0byBzZWUgdGhlIGxhbmQgb2YgdGhlIEJ1ZGRoYSBhbmQgdG8gY29sbGVjdCBCdWRkaGlzdCBtYW51c2NyaXB0cyBmcm9tIEluZGlhLiAgIEhlIHN0YXllZCBpbiBQYXRhbGlwdXRyYSBmb3IgdGhyZWUgeWVhcnMgc3R1ZHlpbmcgU2Fuc2tyaXQgYW5kIGNvcHlpbmcgQnVkZGhpc3QgdGV4dHMuICAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFh1YW56YW5nIGlzIGFsc28ga25vd24gYXMgSGl1ZW4gVHNhbmcuIEhlIHdhcyBib3JuIGluIENoaW5hIGFuZCB2aXNpdGVkIEluZGlhICAgZHVyaW5nIDd0aCBjZW50dXJ5IEFELiAgWHVhbnphbmcsIHdvcmxkLWZhbW91cyBmb3IgaGlzIHNpeHRlZW4teWVhciBwaWxncmltYWdlIHRvIEluZGlhIGFuZCBjYXJlZXIgYXMgYSAgIHRyYW5zbGF0b3Igb2YgQnVkZGhpc3Qgc2NyaXB0dXJlcy4gSGUgdmlzaXRlZCBJbmRpYSBkdXJpbmcgdGhlIHJlaWduIG9mIEtpbmcgSGFyc2hhLiBBdCBOYWxhbmRhLCBYdWFuemFuZyAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBiZWNhbWUgYSBjcml0aWMgb2YgdHdvIG1ham9yIHBoaWxvc29waGljYWwgc3lzdGVtcyBvZiBIaW5kdWlzbSBvcHBvc2VkIHRvIEJ1ZGRoaXNtOiB0aGUgU2Fta2h5YSBhbmQgICB0aGUgVmFpc2VzaGlrYS4gWHVhbnphbmcgYWxzbyBjcml0aXF1ZWQgdGhlIGF0aGVpc3RpYyBtb25pc20gb2YgdGhlIEphaW5zLiBIYXJzaGEgb3JnYW5pemVkIGEgcmVsaWdpb3VzICAgYXNzZW1ibHkgYXQgS2FuYXVqIHRvIGhvbm91ciB0aGUgQ2hpbmVzZSBwaWxncmltIEhpdWVuIFRzYW5nIHRvd2FyZHMgdGhlIGNsb3NlIG9mIGhpcyByZWlnbi4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0OiBBbC1iZXJ1bmkgKDEwMjQtMTAzMCBBLkQuKTogSGUgd2FzIGEgUGVyc2lhbiBzY2hvbGFyLiBIZSBjYW1lIHRvIEluZGlhIGFsb25nIHdpdGggICBNYWhtdWQgb2YgR2hhem5pLiBIZSB3YXMgdGhlIGZpcnN0IG11c2xpbSBzY2hvbGFyIHRvIHN0dWR5IEluZGlhLiBIZSB3cm90ZSB0aGUgYm9vayAnVGFocWlxLWktSGluZCcuICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogSS10c2luZyAoNjcxLSA2OTUgQS5ELik6IEhlIHZpc2l0ZWQgSW5kaWEgaW4gY29ubmVjdGlvbiB3aXRoIEJ1ZGRoaXNtLiBIaXMgd29ya3MgICBpbmNsdWRlIEJpb2dyYXBoaWVzIG9mIEVtaW5lbnQgTW9ua3MuICAgIFNvdXJjZTogIFROIEhpc3RvcnkgSGlnaGVyIFNlY29uZGFyeSAtIEZpcnN0IFllYXIgICAgaHR0cHM6Ly9pZXAudXRtLmVkdS94dWFuemFuZy8gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Fa-hein   ",
        "option2" : "Xuanzang   ",
        "option3" : "Al-beruni   ",
        "option4" : "I-tsing    "
      }
    },
    {
      "index" : 10,
      "question" : "In context of architecure in ancient India,  which among the following are prominent  features of a stupa?   1.  It comprises of a hemispherical dome into  which one cannot enter.   2.  It consists of a Chattra placed at the top of  the stupa.   3.  It incorporates a prayer hall called mandapa  for a large number of worshippers.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdHVwYSBpcyBtYWlubHkgYSBCdWRkaGlzdCBhcmNoaXRlY3R1cmUgaW4gSW5kaWEgYW5kIFNvdXRoLUVhc3QgQXNpYS4gSHVnZSBTdHVwYXMgd2VyZSBjb25zdHJ1Y3RlZCBpbiAgIE1hdXJ5YW4gcHJvdmluY2VzIGR1cmluZyB0aGUgcmVpZ24gb2YgQXNob2thLiBJbnNpZGUgZWFjaCBzdHVwYSBhcmUgbWFudHJhcyBhbmQgcmVsaWNzIG9mIGhvbHkgYmVpbmdzICAgdGhhdCBjcmVhdGUgaW5jcmVkaWJsZSBwdXJpZmljYXRpb24sIG1lcml0LCBhbmQgYmxlc3NpbmdzLiAgICAgU3R1cGFzIGNvbnNpc3Qgb2YgYSBjeWxpbmRyaWNhbCBkcnVtIHdpdGggdGhlc2UgdGhyZWUgcHJvbWluZW50IGZlYXR1cmVzOiBhIGNpcmN1bGFyIGFuZGEgYW5kIGEgaGFybWlrYSBhbmQgICBhIGNoaGF0cmEgb24gdGhlIHRvcC4gICAgQW5kYSBpcyBhIHNpbmdsZSBkb21lIHN0cnVjdHVyZS4gSXQgaXMgaGVtaXNwaGVyaWNhbCBtb3VuZCBzeW1ib2xpYyBvZiB0aGUgbW91bmQgb2YgZGlydCB1c2VkIHRvIGNvdmVyICAgQnVkZGhhJ3MgcmVtYWlucy4gVGhpcyBoZW1pc3BoZXJpY2FsIGRvbWUgaXMgYSBzb2xpZCBzdHJ1Y3R1cmUgaW50byB3aGljaCBvbmUgY2Fubm90IGVudGVyLiAoSGVuY2UsICAgc3RhdGVtZW50IDEgaXMgY29ycmVjdCkgICAgSGFybWlrYSBpcyBhIHNxdWFyZSByYWlsaW5nIG9uIHRvcCBvZiB0aGUgbW91bmQuIENoaGF0cmEgaXMgYSBmb3JtIG9mIHRyaXBsZSB1bWJyZWxsYSBzdXBwb3J0ZWQgYnkgYSBjZW50cmFsICAgcGlsbGFyLiAoSGVuY2UsIHN0YXRlbWVudCAyIGlzIGNvcnJlY3QpICAgIEluIEJ1ZGRoaXNtLCBDaGFpdHlhIGlzIHRoZSBwcmF5ZXIgaGFsbCwgYWxzbyB1c2VkIGFzIGEgcGxhY2UgZm9yIGFzc2VtYmx5IG9mIHRoZSBtb25rcyBhbmQgaXQgY29uc2lzdHMgb2YgICBzdHVwYSB3aXRoaW4gdGhlIHN0cnVjdHVyZSBhdCBvbmUgZW5kLiAgICAgVGhlIFZpaGFyYSBhcmUgdGhlIG1vbmFzdGVyeSB3aGVyZSB0aGUgbW9ua3MgdXNlZCB0byBsaXZlIGFuZCBpdCBhY3RzIGFzIHRoZWlyIGFjY29tbW9kYXRpb24gZHVyaW5nIHRoZSAgIHJhaW55IGRheXMuIFRoZXkgYXJlIHVzdWFsbHkgY2FydmVkIG91dCBvZiByb2NrcyBhcyBjYXZlIHN0cnVjdHVyZXMuICAgIE1hbmRhcGEgaXMgYSBwcmF5ZXIgaGFsbCBmb3IgYSBsYXJnZSBudW1iZXIgb2Ygd29yc2hpcHBlcnMgaW4gTmFnYXJhIHN0eWxlIG9mIGhpbmR1IHRlbXBsZSBhcmNoaXRlY3R1cmUuICAgKEhlbmNlLCBzdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QpICAgIFNvdXJjZTogQXJ0IGFuZCBDdWx0dXJlIE5pdGluIFNpbmdoYW5peWEgM3JkIEVkaXRpb24ucGRmICAgIGh0dHBzOi8vd3d3LmtoYW5hY2FkZW15Lm9yZy9odW1hbml0aWVzL2FwLWFydC1oaXN0b3J5L2ludHJvZHVjdGlvbi1jdWx0dXJlcy1yZWxpZ2lvbnMtICBhcGFoL2J1ZGRoaXNtLWFwYWgvYSBoZS1zdHVwYSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements  regarding King Harsha's religious policies:   1.  Harsha was a worshipper of Siva but Hiuen  Tsang converted him to Buddhism.   2.  According to Madhuban copper plates  inscriptions Harsha granted land to  Brahmanas.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgZWFybHkgaGlzdG9yeSBvZiBIYXJzaGEncyByZWlnbiBpcyByZWNvbnN0cnVjdGVkIGZyb20gYSBzdHVkeSBieSBCYW5hYmhhdHRhLCB3aG8gd2FzIGhpcyBjb3VydCBwb2V0ICAgYW5kIHdobyB3cm90ZSBhIGJvb2sgY2FsbGVkIEhhcnNoYWNoYXJpdGEuIFRoZSBhY2NvdW50IG9mIHRoZSBDaGluZXNlIHBpbGdyaW0gSHN1YW4gVHNhbmcsIHdobyB2aXNpdGVkICAgSW5kaWEgaW4gdGhlIHNldmVudGggY2VudHVyeSBhbmQgc3RheWVkIGluIHRoZSBjb3VudHJ5IGZvciBhYm91dCBmaWZ0ZWVuIHllYXJzIGFsc28gdGFsa3MgYWJvdXQgSGFyc2hhIGluICAgZGV0YWlsLiBIZSBmb2xsb3dlZCBhIHRvbGVyYW50IHJlbGlnaW91cyBwb2xpY3kuIEEgU2hhaXZhIGluIGhpcyBlYXJseSB5ZWFycywgaGUgZ3JhZHVhbGx5IGJlY2FtZSBhIGdyZWF0IHBhdHJvbiAgIG9mIEJ1ZGRoaXNtLiBBcyBhIGRldm91dCBCdWRkaGlzdCBoZSBjb252ZW5lZCBhIGdyYW5kIGFzc2VtYmx5IGF0IEthbmF1aiB0byB3aWRlbHkgcHVibGljaXplIHRoZSAgIGRvY3RyaW5lcyBvZiBNYWhheWFuYS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSGFyc2hhIHdhcyBhIHdvcnNoaXBwZXIgb2YgU2l2YS4gQnV0IGhlIGVtYnJhY2VkIEJ1ZGRoaXNtIHVuZGVyIHRoZSBpbmZsdWVuY2UgICBvZiBoaXMgc2lzdGVyIFJhanlhc3JpIGFuZCB0aGUgQnVkZGhpc3QgbW9uayBIaWV1biBUc2FuZy4gSGl1ZW4gVHNhbmcgY29udmVydGVkIGhpbSB0byBNYWhheWFuYSAgIEJ1ZGRoaXNtLiBIYXJzaGEgcHJvaGliaXRlZCB0aGUgdXNlIG9mIGFuaW1hbCBmb29kIGluIGhpcyBraW5nZG9tIGFuZCBwdW5pc2hlZCB0aG9zZSB3aG8ga2lsbCBhbnkgbGl2aW5nICAgYmVpbmcuIEhlIGVyZWN0ZWQgdGhvdXNhbmRzIG9mIHN0dXBhcyBhbmQgZXN0YWJsaXNoZWQgdHJhdmVsbGVycycgcmVzdHMgYWxsIG92ZXIgaGlzIGtpbmdkb20uIEhlIGFsc28gZXJlY3RlZCAgIG1vbmFzdGVyaWVzIGF0IHRoZSBzYWNyZWQgcGxhY2VzIG9mIEJ1ZGRoaXN0cy4gICAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgQmFuc2toZXJhIGFuZCBNYWRodWJhbiBjb3BwZXIgcGxhdGVzIGluc2NyaXB0aW9ucyBtZW50aW9ucyB0aGF0IEhhcnNoYSAgIGdyYW50ZWQgbGFuZCB0byBCcmFobWFuYXMuIEhhcnNoYSBoYXMgYmVlbiByZXByZXNlbnRlZCBhcyBhIGRldm90ZWUgb2YgU2hpdmEgaW4gdGhlc2UgaW5zY3JpcHRpb25zLiAgIEluc2NyaXB0aW9ucyBhbHNvIHN1Z2dlc3QgdGhhdCB0aGUgZWFybHkgUHVzeWFiaHV0aSBraW5ncyB3b3JzaGlwcGVkIFN1cnlhIHdoaWxlIFJhanlhdmFyZGhhbmEgd2FzIGEgICBkZXZvdGVlIG9mIHRoZSBCdWRkaGEuICAgS25vd2xlZGdlIEJhc2U6ICAgICBLYW5hdWogQXNzZW1ibHk6IEhhcnNoYSBvcmdhbml6ZWQgYSByZWxpZ2lvdXMgYXNzZW1ibHkgYXQgS2FuYXVqIHRvIGhvbm91ciB0aGUgQ2hpbmVzZSBwaWxncmltIEhpdWVuICAgVHNhbmcgdG93YXJkcyB0aGUgY2xvc2Ugb2YgaGlzIHJlaWduLiBIZSBpbnZpdGVkIHJlcHJlc2VudGF0aXZlcyBvZiBhbGwgcmVsaWdpb3VzIHNlY3RzLiBJdCB3YXMgYXR0ZW5kZWQgYnkgICAyMCBraW5ncywgMTAwMCBzY2hvbGFycyBmcm9tIHRoZSBOYWxhbmRhIFVuaXZlcnNpdHksIDMwMDAgSGluYXlhbmlzdHMgYW5kIE1haGF5YW5pc3RzLCAzMDAwIEJyYWhtaW5zICAgYW5kIEphaW5zLiBUaGUgQXNzZW1ibHkgd2VudCBvbiBjb250aW51b3VzbHkgZm9yIDIzIGRheXMuIEhpdWVuIFRzYW5nIGV4cGxhaW5lZCB0aGUgdmFsdWVzIG9mIE1haGF5YW5hICAgZG9jdHJpbmUgYW5kIGVzdGFibGlzaGVkIGl0cyBzdXBlcmlvcml0eSBvdmVyIG90aGVycy4gSG93ZXZlciwgdmlvbGVuY2UgYnJva2Ugb3V0IGFuZCB0aGVyZSB3ZXJlIGFjdHMgb2YgICBhcnNvbi4gVGhlcmUgd2FzIGFsc28gYW4gYXR0ZW1wdCBvbiB0aGUgbGlmZSBvZiBIYXJzaGEuIFNvb24sIGl0IHdhcyBicm91Z2h0IHVuZGVyIGNvbnRyb2wgYW5kIHRoZSBndWlsdHkgICB3ZXJlIHB1bmlzaGVkLiBPbiB0aGUgZmluYWwgZGF5IG9mIHRoZSBBc3NlbWJseSwgSGl1ZW4gVHNhbmcgd2FzIGhvbm91cmVkIHdpdGggY29zdGx5IHByZXNlbnRzLiAgICAgUHJheWFnIChBbGxhaGFiYWQpIEFzc2VtYmx5ICAgICBIaXVlbiBUc2FuZyBtZW50aW9ucyBpbiBoaXMgYWNjb3VudCBhYm91dCB0aGUgY29uZmVyZW5jZSBoZWxkIGF0IEFsbGFoYWJhZCwga25vd24gYXMgUHJheWFnLiBJdCB3YXMgdGhlICAgb25lIGFtb25nIHRoZSBjb25mZXJlbmNlcyByb3V0aW5lbHkgY29udmVuZWQgYnkgSGFyc2hhIG9uY2UgaW4gZml2ZSB5ZWFycy4gSGFyc2hhIGdhdmUgYXdheSBoaXMgICBlbm9ybW91cyB3ZWFsdGggYXMgZ2lmdHMgdG8gdGhlIG1lbWJlcnMgb2YgYWxsIHJlbGlnaW91cyBzZWN0cy4gQWNjb3JkaW5nIHRvIEhpdWVuIFRzYW5nLCBIYXJzaGEgd2FzIHNvICAgbGF2aXNoIHRoYXQgaGUgZW1wdGllZCB0aGUgdHJlYXN1cnkgYW5kIGV2ZW4gZ2F2ZSBhd2F5IHRoZSBjbG90aGVzIGFuZCBqZXdlbHMgaGUgd2FzIHdlYXJpbmcuICAgICBTb3VyY2U6ICBUTiBIaXN0b3J5IEhpZ2hlciBTZWNvbmRhcnkgLSBGaXJzdCBZZWFyICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 12,
      "question" : "  With reference to the Sangam texts,  consider the following statements:   1.  The text mentions the existence of the port  city of Kaveripattanam.   2.  Akam and Puram themes form the crucial  part of Cilappatikaran.  3.  Cilappatikaran is a Hindu text which is  mostly influenced by the Hindu philosophy.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTYW5nYW0gbGl0ZXJhdHVyZSBpcyBhIGNvbGxlY3Rpb24gb2YgcG9lbXMgYW5kIGxpdGVyYXR1cmUgd3JpdHRlbiBieSBtZW4gYW5kIHdvbWVuIGZyb20gZGlmZmVyZW50IGNsYXNzZXMgICBvZiBzb2NpZXR5IHRoYXQgcmVtYWlucyBhbm9ueW1vdXMuICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgU2FuZ2FtIHRleHRzIHJlZmVyIHRvIG1hbnkgc2V0dGxlbWVudHMsIGluY2x1ZGluZyBLYXZlcmlwYXR0YW5hbSB3aG9zZSAgIGZsb3VyaXNoaW5nIGV4aXN0ZW5jZSBoYXMgbm93IGJlZW4gYXJjaGFlb2xvZ2ljYWxseSBjb3Jyb2JvcmF0ZWQuIEthdmVyaXBhdHRpbmFtIHdhcyBhbiBhbmNpZW50IHBvcnQgY2l0eSAgIG9mIHRoZSBDaG9sYXMsIHNpdHVhdGVkIGluIG5vcnRoZXJuIFRhbWlsIE5hZHUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBha2FtIG9yIGxvdmUsIGFuZCBwdXJhbSBvciBoZXJvaXNtLyBwcmFpc2Ugb2YgS2luZ3MgYW5kIHRoZWlyIGRlZWRzIGFyZSB0d28gICB0aGVtZXMvIGVtb3Rpb25zIHdoaWNoIGZvcm0gYSBjcnVjaWFsIHBhcnQgb2YgdGhlIHRleHQgQ2lsYXBwYXRpa2FyYW4uIEluIGZhY3QsIG1vc3Qgb2YgdGhlIHBvZW1zIGJlbG9uZ2luZyAgIHRvIHdoYXQgaXMgY2FsbGVkIFNhbmdhbSBMaXRlcmF0dXJlIGFyZSBiYXNlZCBvbiB0aGVzZSB0d28gbWFpbiB0aGVtZXMga25vd24gYXMgYWthbSBhbmQgcHVyYW0uIEluIHRoYXQgICBzZW5zZSwgdGhlIFNhbmdhbSBMaXRlcmF0dXJlIGlzIG5vdCByZWxpZ2lvdXMgYWx0b2dldGhlci4gICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIENpbGFwcGF0aWthcmFuIGlzIGEgSmFpbiB0ZXh0IHdpdGggbGFyZ2VyIG92ZXJ0b25lcyBvZiBKYWluIHBoaWxvc29waHkgYW5kICAgdGhlIE1hbmltZWthbGFpIGlzIGEgQnVkZGhpc3QgdGV4dCB3aXRoIGEgaGVhdnkgaW5mbHVlbmNlIG9mIEJ1ZGRoaXN0IHRoZW9sb2d5LiBJdCBpcyBiZWNhdXNlIHVubGlrZSB0aGUgICBwb2V0cnkgdGhhdCB3YXMgd3JpdHRlbiBkdXJpbmcgdGhlIFNhbmdhbSBwZXJpb2QsIHRoZSB0d28gZXBpY3MgaS5lLiwgQ2lsYXBwYXRpa2FyYW4gYW5kIE1hbmlrZWtoYWxhaSB3ZXJlICAgY29tcG9zZWQgYWZ0ZXIgdGhlIFNhbmdhbSBwZXJpb2QgZHVyaW5nIHRoZSBCdWRkaGlzdCBhbmQgdGhlIEphaW4gcGVyaW9kcyBvZiBUYW1pbCBOYWR1LiAgIFNvdXJjZTogQW5jaWVudCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0zLCBUeXBlcyBvZiBTb3VyY2VzIGFuZCBIaXN0b3JpY2FsIENvbnN0cnVjdGlvbiwgUGcuIDE3ICAgIGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzY3NzA0LzEvQmxvY2stMS5wZGYgKHBnLiA1MywgNzkgYW5kIDg0KSAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 13,
      "question" : "  Consider the following statements with  respect to society in the Sangam age:   1.  Enadi were the ruling class who controlled  the majority of the land in society.   2.  Vellalas were rich peasants who held  military offices.   3.  Kadaisiyar were the members of the lowest  class who worked on the agricultural land of  the ruling class.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgYnJhaG1hbmFzIGZpcnN0IGFwcGVhciBpbiB0aGUgVGFtaWwgbGFuZCBpbiB0aGUgU2FuZ2FtIGFnZS4gQW4gaWRlYWwga2luZyB3YXMgb25lIHdobyBuZXZlciBodXJ0IHRoZSAgIGJyYWhtYW5hcy4gVGhlIGtzaGF0cml5YXMgYW5kIHZhaXNoeWFzIGFwcGVhciBhcyByZWd1bGFyIHZhcm5hcyBpbiB0aGUgU2FuZ2FtIHRleHRzLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBFbmFkaSB3YXMgdGhlIHRpdGxlIGdpdmVuIHRvIHRoZSBjYXB0YWlucyBvZiB0aGUgYXJteSBhdCBhIGZvcm1hbCBjZXJlbW9ueS4gIFRoZSAgIHdhcnJpb3IgY2xhc3Mgd2FzIGFuIGltcG9ydGFudCBlbGVtZW50IGluIHRoZSBwb2xpdHkgYW5kIHNvY2lldHkgaW4gdGhlIFNhbmdhbSBhZ2UuIFRoZSBydWxpbmcgY2xhc3Mgd2FzICAgY2FsbGVkIGFyYXNhciwgYW5kIGl0cyBtZW1iZXJzIGhhZCBtYXJyaWFnZSByZWxhdGlvbnMgd2l0aCB0aGUgdmVsbGFsYXMsIHdobyBmb3JtZWQgdGhlIGZvdXJ0aCBjYXN0ZS4gVGhleSAgIGhlbGQgdGhlIGJ1bGsgb2YgdGhlIGxhbmQgYW5kIHRodXMgY29uc3RpdHV0ZWQgdGhlIGN1bHRpdmF0aW5nIGNsYXNzLCBkaXZpZGVkIGludG8gdGhlIHJpY2ggYW5kIHRoZSBwb29yLiAgICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFZlbGxhbGFzIHdlcmUgdGhlIHJpY2ggcGVhc2FudHMgd2hvIGhlbGQgY2l2aWwgYW5kIG1pbGl0YXJ5IG9mZmljZXMgdW5kZXIgYm90aCB0aGUgICBDaG9sYXMgYW5kIFBhbmR5YXMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEthZGFpc2l5YXIgd2VyZSB0aGUgbG93ZXN0IGNsYXNzLCB3aG9zZSBzdGF0dXMgYXBwZWFycyB0byBoYXZlIGRpZmZlcmVkIGxpdHRsZSBmcm9tICAgdGhhdCBvZiBzbGF2ZS4gVGhlIHJpY2ggZGlkIG5vdCBwbG91Z2ggdGhlIGxhbmQgdGhlbXNlbHZlcyBidXQgZW1wbG95ZWQgbGFib3VyZXJzIHRvIHVuZGVydGFrZSB0aGlzLiAgIEFncmljdWx0dXJhbCBvcGVyYXRpb25zIHdlcmUgZ2VuZXJhbGx5IHRoZSB0YXNrIG9mIGthZGFpc2l5YXIuICAgIFNvdXJjZTogQW5jaWVudCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0xOCwgVGhlIERhd24gb2YgSGlzdG9yeSBpbiB0aGUgRGVlcCBTb3V0aCwgUGcuIDEzMCAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the Sangam texts, the  term 'virarkal' refers to   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3Q6IFRoZSBTYW5nYW0gbGl0ZXJhdHVyZSBjYW4gcm91Z2hseSBiZSBkaXZpZGVkIGludG8gdHdvIGdyb3VwcywgbmFycmF0aXZlIGFuZCBkaWRhY3RpYy4gICBUaGUgbmFycmF0aXZlIHRleHRzIGFyZSBjYWxsZWQgTWVsa2FubmFra3Ugb3IgRWlnaHRlZW4gTWFqb3IgV29ya3MuIFRoZXkgY29tcHJpc2UgZWlnaHRlZW4gbWFqb3IgICB3b3JrcyBjb25zaXN0aW5nIG9mIGVpZ2h0IGFudGhvbG9naWVzIGFuZCB0ZW4gaWR5bGxzLiBUaGUgZGlkYWN0aWMgd29ya3MgYXJlIGNhbGxlZCBLaWxrYW5ha2t1IG9yIEVpZ2h0ZWVuICAgTWlub3IgV29ya3MuICAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFZpcmFya2FsIHJlZmVycyB0byB0aGUgJ2hlcm8gc3RvbmVzJyB3aGljaCB3ZXJlIHJhaXNlZCBpbiBob25vdXIgb2YgdGhlIGhlcm9lcyB3aG8gICBoYWQgZGllZCBmaWdodGluZyBmb3Iga2luZyBhbmQgb3RoZXIgdGhpbmdzLiBUaGUgU2FuZ2FtIHRleHRzIHN1Z2dlc3QgdGhhdCB3YXIgYm9vdHkgd2FzIGFuIGltcG9ydGFudCAgIHNvdXJjZSBvZiBsaXZlbGlob29kLiBUaGV5IGFsc28gc3RhdGUgdGhhdCB3aGVuIGEgaGVybyBkaWVzLCBoZSBpcyByZWR1Y2VkIHRvIGEgcGllY2Ugb2Ygc3RvbmUuICAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IFBhcml5YXJzIHdlcmUgYWdyaWN1bHR1cmFsIGxhYm91cmVycyB3aG8gYWxzbyB3b3JrZWQgd2l0aCBhbmltYWwgc2tpbnMgYW5kIHVzZWQgICB0aGVtIGFzIG1hdHMuICAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3Q6IFB1aGFyIHdhcyBhIGdyZWF0IGNlbnRyZSBvZiB0cmFkZSBhbmQgY29tbWVyY2UsIGFuZCBleGNhdmF0aW9ucyBzaG93IHRoYXQgaXQgaGFkICAgYSBsYXJnZSBkb2NrLiBDdXN0b21zIG9mZmljZXJzIGZ1bmN0aW9uZWQgaW4gUHVoYXIuIFRyYW5zaXQgZHV0aWVzIHdlcmUgY29sbGVjdGVkIGZyb20gbWVyY2hhbnRzIHdobyAgIG1vdmVkIGZyb20gcGxhY2UgdG8gcGxhY2Ugd2l0aCB0aGVpciBnb29kcy4gICAgIFNvdXJjZTogQW5jaWVudCBIaXN0b3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0xOCwgVGhlIERhd24gb2YgSGlzdG9yeSBpbiB0aGUgRGVlcCBTb3V0aCwgUGcuIDEyOC0gMTMxICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Narrative text of the Sangam literature   comprising eighteen major works.   ",
        "option2" : " Stones raised in honour of the heroes who   has died fighting in battles.   ",
        "option3" : " Agricultural labourers who also worked with   animal skin.   ",
        "option4" : " Large dock where transit duties were   collected from merchants who moved from   place to place.        "
      }
    },
    {
      "index" : 15,
      "question" : "  With reference to the southern  kingdoms, consider the following statements:   1.  Madurai was the capital of the Pandya  dynasty.   2.  The chief centre of political power of Cheras  was at Uraiyur.   3.  Trade in cotton cloth was one of the  principal sources of wealth of the Chola  dynasty.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgc291dGhlcm4gZW5kIG9mIHRoZSBJbmRpYW4gcGVuaW5zdWxhIHNpdHVhdGVkIHNvdXRoIG9mIHRoZSBLcmlzaG5hIFJpdmVyIHdhcyBkaXZpZGVkIGludG8gdGhyZWUgICBraW5nZG9tczogQ2hvbGEsIFBhbmR5YSwgYW5kIENoZXJhIG9yIEtlcmFsYS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIFBhbmR5YSB0ZXJyaXRvcnkgb2NjdXBpZWQgdGhlIHNvdXRoZXJubW9zdCBhbmQgdGhlIHNvdXRoLWVhc3Rlcm4gcG9ydGlvbiBvZiAgIHRoZSBJbmRpYW4gcGVuaW5zdWxhLiBJdCByb3VnaGx5IGluY2x1ZGVkIHRoZSBtb2Rlcm4gZGlzdHJpY3RzIG9mIFRpcnVuZWx2ZWxpLCBSYW1uYWQsIGFuZCBNYWR1cmFpIGluICAgVGFtaWwgTmFkdSB3aXRoIGl0cyBjYXBpdGFsIGF0IE1hZHVyYWkuIFRoZSBTYW5nYW0gbGl0ZXJhdHVyZSByZWZlcnMgdG8gdGhlIFBhbmR5YSBydWxlcnMsIGJ1dCBpdCBkb2VzIG5vdCAgIHByb3ZpZGUgYW55IGNvaGVyZW50IGFjY291bnQuICBIb3dldmVyLCB0aGlzIGxpdGVyYXR1cmUgc2hvd3MgY2xlYXJseSB0aGF0IHRoZSBzdGF0ZSB3YXMgd2VhbHRoeSBhbmQgICBwcm9zcGVyb3VzLiBUaGUgUGFuZHlhIGtpbmdzIHByb2ZpdGVkIGZyb20gdHJhZGUgd2l0aCB0aGUgUm9tYW4gZW1waXJlIGFuZCBzZW50IGFtYmFzc2Fkb3JzIHRvIHRoZSAgIFJvbWFuIGVtcGVyb3IgQXVndXN0dXMuIFRoZSBicmFobWFuYXMgZW5qb3llZCBjb25zaWRlcmFibGUgaW5mbHVlbmNlLCBhbmQgdGhlIFBhbmR5YSBraW5nICAgcGVyZm9ybWVkIFZlZGljIHNhY3JpZmljZXMgaW4gdGhlIGVhcmx5IGNlbnR1cmllcyBvZiB0aGUgQ2hyaXN0aWFuIGVyYS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgY2hpZWYgY2VudHJlIG9mIHBvbGl0aWNhbCBwb3dlciBvZiBDaG9sYXMgKGFuZCBub3QgQ2hlcmFzKSBsYXkgYXQgVXJhaXl1ciwgYSAgIHBsYWNlIGZhbW91cyBmb3IgY290dG9uIHRyYWRlLiBUaGUgQ2hvbGEga2luZ2RvbSwgd2hpY2ggY2FtZSB0byBiZSBjYWxsZWQgQ2hvbGFtYW5kYWxhbSAoQ29yb21hbmRlbCksICAgaW4gZWFybHkgbWVkaWV2YWwgdGltZXMsIHdhcyBzaXR1YXRlZCB0byB0aGUgbm9ydGgtZWFzdCBvZiB0aGUgdGVycml0b3J5IG9mIHRoZSBQYW5keWFzLCBiZXR3ZWVuIHRoZSBQZW5uYXIgICBhbmQgdGhlIFZlbGFyIHJpdmVycy4gVGhlIENoZXJhIG9yIHRoZSBLZXJhbGEgY291bnRyeSB3YXMgc2l0dWF0ZWQgdG8gdGhlIHdlc3QgYW5kIG5vcnRoIG9mIHRoZSBsYW5kIG9mIHRoZSAgIFBhbmR5YXMuIEl0IGluY2x1ZGVkIHRoZSBuYXJyb3cgc3RyaXAgb2YgbGFuZCBiZXR3ZWVuIHRoZSBzZWEgYW5kIHRoZSBtb3VudGFpbnMsIGFuZCBjb3ZlcmVkIHBvcnRpb25zIG9mICAgYm90aCBLZXJhbGEgYW5kIFRhbWlsIE5hZHUuIEFjY29yZGluZyB0byB0aGUgQ2hlcmEgcG9ldHMsIHRoZWlyIGdyZWF0ZXN0IGtpbmcgd2FzIFNlbmd1dHR1dmFuLCB0aGUgUmVkICAgb3IgR29vZCBDaGVyYS4gSGUgcm91dGVkIGhpcyByaXZhbHMgYW5kIGVzdGFibGlzaGVkIGhpcyBjb3VzaW4gc2VjdXJlbHkgb24gdGhlIHRocm9uZS4gICAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IE9uZSBvZiB0aGUgcHJpbmNpcGFsIHNvdXJjZXMgb2YgdGhlIHdlYWx0aCBvZiB0aGUgQ2hvbGFzIHdhcyB0cmFkZSBpbiBjb3R0b24gY2xvdGguICAgVGhleSBhbHNvIG1haW50YWluZWQgYW4gZWZmaWNpZW50IG5hdnkuIENob2xhIGtpbmcgS2FyaWthbGEgZm91bmRlZCBQdWhhciBhbmQgY29uc3RydWN0ZWQgMTYwIGttIG9mICAgZW1iYW5rbWVudCBhbG9uZyB0aGUgS2F2ZXJpIFJpdmVyLiBQdWhhciBpcyBjb3Rlcm1pbm91cyB3aXRoIEthdmVyaXBhdHRhbmFtLCB0aGUgQ2hvbGEgY2FwaXRhbCBhbmQgd2FzICAgYSBncmVhdCBjZW50cmUgZm9yIHRyYWRlIGFuZCBjb21tZXJjZS4gICAgU291cmNlOiBBbmNpZW50IEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTE4LCBUaGUgRGF3biBvZiBIaXN0b3J5IGluIHRoZSBEZWVwIFNvdXRoLCBQZy4gMTI3LTEyOSAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 16,
      "question" : "At which of the following place the famous  sculptures of Ardhanarishvara and  Maheshamurti are found?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBCb3RoIHRoZSBmYW1vdXMgc2N1bHB0dXJlcyBvZiBBcmRoYW5hcmlzaHZhcmEgYW5kIE1haGVzaGFtdXJ0aSBhcmUgZm91bmQgYXQgdGhlIEVsZXBoYW50YSBDYXZlcy4gIFRoZSAgIEVsZXBoYW50YSBDYXZlcyBhcmUgbG9jYXRlZCBpbiBNdW1iYWkgSGFyYm91ciwgZWFzdCBvZiBNdW1iYWksIE1haGFyYXNodHJhIG9uIEVsZXBoYW50YSBJc2xhbmQuICAgICBUaGUgdW5pb24gb2YgU2hpdmEgYW5kIFBhcnZhdGkgaXMgdmVyeSBpbmdlbmlvdXNseSByZXByZXNlbnRlZCBpbiB0aGUgQXJkaGFuYXJpc3ZhcmEgbXVydGkgaW4gYSBzaW5nbGUgICBpbWFnZS4gQXJkaGFuYXJpc2h2YXJhLCBsaXRlcmFsbHkgdHJhbnNsYXRlcyBpbnRvIHRoZSBnb2QgKFNpdmEpIGhhbGYgZmVtYWxlLiAgICAgIEJvdGggU2hpdmEgYW5kIFBhcnZhdGkgYXJlIHBvcnRyYXllZCB3aXRoIGZvdXIgYXJtcywgYSB2ZXJ5IGNvbW1vbiBpY29ub2dyYXBoeSBleHByZXNzaW9uIGluIEhpbmR1aXNtLiAgICBUaGUgaW1hZ2Ugb2YgTWFoZXNobXVydGkgYXQgRWxlcGhhbnRhIGRhdGVzIGJhY2sgdG8gdGhlIGVhcmx5IHNpeHRoIGNlbnR1cnkgQ0UuIEl0IGlzIGxvY2F0ZWQgaW4gdGhlIG1haW4gICBjYXZlIHNocmluZS4gSW4gdGhlIHRyYWRpdGlvbiBvZiB3ZXN0ZXJuIERlY2NhbiBzY3VscHRpbmcsIGl0IGlzIG9uZSBvZiB0aGUgYmVzdCBleGFtcGxlcyBvZiBxdWFsaXRhdGl2ZSAgIGFjaGlldmVtZW50IGluIHNjdWxwdGluZyBpbWFnZXMgaW4gcm9jayBjdXQgY2F2ZXMuIFRoZSBjZW50cmFsIGhlYWQgaXMgdGhlIG1haW4gU2hpdmEgZmlndXJlIHdoZXJlYXMgdGhlICAgb3RoZXIgdHdvIHZpc2libGUgaGVhZHMgYXJlIG9mIEJoYWlyYXZhIGFuZCBVbWEuICAgIFNvdXJjZTogTkNFUlQgMTF0aCBBTiBJTlRST0RVQ1RJT04gVE8gSU5ESUFOIEFSVCwgY2hhcHRlciA0OiBQT1NULU1BVVJZQU4gVFJFTkRTIElOIElORElBTiAgIEFSVCBBTkQgQVJDSElURUNUVVJFICAgIGh0dHBzOi8vZWxlcGhhbnRhLmNvLmluL2FyZGhhbmFyaXNodmFyYS1hdC1lbGVwaGFudGEgICAgaHR0cHM6Ly9lbGVwaGFudGEuY28uaW4vbWFoZXNoLW11cnRoaS1hdC1lbGVwaGFudGEgICAgIGh0dHBzOi8vd2hjLnVuZXNjby5vcmcvZW4vbGlzdC8yNDQvICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Belan valley   ",
        "option2" : "Udayagiri caves   ",
        "option3" : "Elephanta caves   ",
        "option4" : "Bagh caves    "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements with  reference to the Pala and Rashtrakuta  contributions to art and culture:   1.  The Palas were great patrons of Buddhism.    2.  The rock-cut Kailashnatha Temple at Ellora  was constructed by the Rashtrakutas.   3.  Amogavarsha's Kavirajamarga was a poetic  work in Kannada language.   4.  The Palas and the Rashtrakutas both  contributed significantly to the  construction of the Brihadeswara temple at  Tanjore.  Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgJ1Jhc2h0cmFrdXRhJyBtZWFucyB0aGUgY2hpZWYgb2YgYSByYXNodHJhIChhIGRpdmlzaW9uIG9yIGtpbmdkb20uVGhleSBhcmUgcHJlc3VtZWQgdG8gYmUgYSBmZXVkYXRvcnkgb2YgICB0aGUgQ2hhbHVreWFzIGFuZCB0aGVpciBjYXBpdGFsIHdhcyBNYW55YWtoZXRhIG9yIE1hbGtoZWQgbmVhciBTaG9sYXB1ci4gICAgVGhlIFBhbGEga2luZ2RvbSBpbmNsdWRlZCBCZW5nYWwgYW5kIEJpaGFyLiAgICBUaGUgUGFsYSBwZXJpb2QgaXMgY29uc2lkZXJlZCBvbmUgb2YgdGhlIGdvbGRlbiBlcmFzIGluIHRoZSBoaXN0b3J5IG9mIEJlbmdhbC4gVGhleSBjcmVhdGVkIG91dHN0YW5kaW5nICAgd29ya3Mgb2YgYXJ0IGFuZCBhcmNoaXRlY3R1cmUuIFRoZSBQYWxhIGxlZ2FjeSBpcyBzdGlsbCByZWZsZWN0ZWQgaW4gVGliZXRhbiBCdWRkaGlzbS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIFBhbGEga2luZ3Mgd2VyZSB0aGUgZm9sbG93ZXJzIG9mIEJ1ZGRoaXNtLCBlc3BlY2lhbGx5IE1haGF5YW5hIGFuZCBUYW50cmljICAgc2Nob29scyBvZiBCdWRkaGlzbS4gIFBoaWxvc29waGljYWwgY29tcG9uZW50cyBvZiBNYWhheWFuYSBCdWRkaGlzbSB3ZXJlIGFiYW5kb25lZCwgYW5kIFRhbnRyaWMgICBwcmFjdGlzZXMgaW5jcmVhc2luZ2x5IHBlbmV0cmF0ZWQgdGhlIE1haGF5YW5hIGN1bHQsIGdpdmluZyByaXNlIHRvIHRoZSB0ZXJtICJWYWpyYXlhbmEuIiBWaWtyYW1hc2lsYSAgIHVuaXZlcnNpdHkgd2FzIHdlbGwta25vd24gZm9yIHByb3ZpZGluZyBzcGVjaWFsaXN0IFRhbnRyYSB0cmFpbmluZyAoVGFudHJpc20pLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgbWFnbmlmaWNlbnQgcm9jay1jdXQgS2FpbGFzaG5hdGhhIFRlbXBsZSBhdCBFbGxvcmEgKG5lYXIgQXVyYW5nYWJhZCwgICBNYWhhcmFzdHJhKSB3YXMgYnVpbHQgZHVyaW5nIEtyaXNobmEgSSAoYy43NTbiiJI3NzQgQ0UpIHJlaWduIChSYXNodHJha3V0YSkuIFRoZSB0ZW1wbGUgZGVkaWNhdGVkIHRvIExvcmQgICBTaGl2YSBhbmQgaXMgbW9ub2xpdGhpYyBpLmUuIG1hZGUgb2Ygb25lIHNpbmdsZSBwaWVjZSBvZiByb2NrLiBUaGUgZnJvbnQgcG9ydGlvbiBvZiBhIGhpbGwgd2FzIGNhcnZlZCBpbiBzdWNoICAgYSBtYW5uZXIgdGhhdCBpdCB3YXMgY29udmVydGVkIGludG8gYSB2YXN0IGNvbXBsZXggb2YgU2l2YSB0ZW1wbGUgd2l0aCBleHF1aXNpdGUgc2N1bHB0dXJlcyBkZXBpY3RpbmcgICBzdG9yaWVzIG9mIGVwaWNzIGluIG1vc3QgbGl2ZWx5IGZvcm0uICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEthbm5hZGEgbGl0ZXJhdHVyZSBzYXcgaXRzIGJlZ2lubmluZyBkdXJpbmcgdGhlIHBlcmlvZCBvZiB0aGUgUmFzaHRyYWt1dGFzLiAgIEFtb2dhdmFyc2hhJ3MgS2F2aXJhamFtYXJnYSB3YXMgdGhlIHBvZXRpYyB3b3JrIGluIEthbm5hZGEgbGFuZ3VhZ2UuIFBhbXBhIHdhcyB0aGUgZ3JlYXRlc3Qgb2YgdGhlICAgS2FubmFkYSBwb2V0cy4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBBIG1hcnZlbG91cyBleGFtcGxlIG9mIGNob2xhIGFyY2hpdGVjdHVyZSwgdGhlIEJyaWhhZGVzaHdhcmEgVGVtcGxlLCAgIFRoYW5qYXZ1ciBpcyBhIEhpbmR1IFRlbXBsZSBkZWRpY2F0ZWQgdG8gTG9yZCBTaGl2YS4gSXQgaXMgYnVpbHQgYmV0d2VlbiAxMDAzIGFuZCAxMDEwIEFEIGJ5IFJhamEgUmFqYSAgIENob2xhIEkgaW4gRHJhdmlkaWFuIGFyY2hpdGVjdHVyZSBzdHlsZS4gICAgVGhlcmUgd2FzIG5vIGNvbnRyaWJ1dGlvbiBvZiBQYWxhIGFuZCBSYXNodHJha3V0YXMgaW4gY29uc3RydWN0aW9uIG9mIHRoaXMgdGVtcGxlLiAgICBTb3VyY2U6ICBBTkNJRU5UIEFORCBNRURJRVZBTCBJTkRJQSwgQXV0aG9yLSBQb29uYW0gRGFsYWwgRGFoaXlhLCAgLDQxNi0xNyw0MzcgICAgaHR0cHM6Ly9kZGNldXRrYWwuYWMuaW4vU3lsbGFidXMvTUFfaGlzdG9yeS9wYXBlci0xMi1OLnBkZiAgICAgICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only    ",
        "option2" : "1, 2 and 3 only    ",
        "option3" : "2 and 3 only    ",
        "option4" : "1, 3 and 4 only    "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements with  reference to Pallava Period in history:   1.  Pallavas were pastoral local tribe in the land  of creepers called Tondaimandalam.   2.  Mahendravarman I defeated Pulekshin II  and assumed the title of Vatapikonda.   3.  The Seven Ratha temples at Mahabalipuram  were built by Narasimhavarman,  Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQYWxsYXZhcyBlbWVyZ2VkIGFzIGEgZm9ybWlkYWJsZSBwb3dlciBpbiB0aGUgU291dGggYXJvdW5kIHRoZSA0dGggY2VudHVyeSBBRCBhbmQgd2VyZSBhdCB0aGUgaGVpZ2h0ICAgb2YgdGhlaXIgcG93ZXIgaW4gdGhlIHNldmVudGggY2VudHVyeSBBRC4gICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgdGVybSBQYWxsYXZhIG1lYW5zICdjcmVlcGVyJywgd2hpY2ggaXMgYSBTYW5za3JpdCB2ZXJzaW9uIG9mIHRoZSB3b3JkIHRvbmRpIGFuZCAgIGluIFRhbWlsIHRoZXkgYXJlIHN5bm9ueW1vdXMgdG8gcm9iYmVyLiBTbywgdGhlIFBhbGxhdmFzIHdlcmUgcHJvYmFibHkgYSBwYXN0b3JhbCBsb2NhbCB0cmliZSB3aG8gICBlc3RhYmxpc2hlZCB0aGVpciBhdXRob3JpdHkgaW4gdGhlIGxhbmQgb2YgY3JlZXBlcnMgY2FsbGVkIFRvbmRhaW1hbmRhbGFtICh0aGUgbGFuZCBiZXR3ZWVuIHRoZSBub3J0aCAgIFBlbm5lciBhbmQgbm9ydGggVmVsbGFyIHJpdmVycyksIG1vc3RseSBjb21wcmlzaW5nIG9mIHNvdXRoZXJuIEFuZGhyYSBQcmFkZXNoIGFuZCBub3J0aGVybiBUYW1pbCBOYWR1ICAgd2l0aCB0aGVpciBjYXBpdGFsIGF0IEthbmNoaS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBEdXJpbmcgdGhlIHJlaWduIG9mIE1haGVuZHJhdmFybWFuIEkgKGMuIDU5MOKIkjYzMCBDRSksIGNvbmZsaWN0IGJldHdlZW4gdGhlICAgQ2hhbHVreWFzIG9mIEJhZGFtaSBhbmQgdGhlIFBhbGxhdmFzIGhlaWdodGVuZWQuIE1haGVuZHJhdmFybWFuIEkgd2FzIGRlZmVhdGVkIGJ5IFB1bGVrc2hpbiBJSSBhdCAgIFB1bGxhbHVyIChuZWFyIEthbmNoaSkgd2hvIGFubmV4ZWQgdGhlIG5vcnRoZXJuIHBhcnQgb2YgdGhlIFBhbGxhdmEga2luZ2RvbS4gSGUgd2FzIGEgZ3JlYXQgcGF0cm9uIG9mICAgYXJ0cywgYW5kIGhpbXNlbGYgYSBwb2V0IGFuZCBtdXNpY2lhbi4gSGUgd3JvdGUgdGhlIE1hdHRhdmlsYXNhIFByYWhhc2FubmEgYW5kIGluaXRpYXRlZCB0aGUgY29uc3RydWN0aW9uICAgb2YgdGhlIGZhbW91cyBjYXZlIHRlbXBsZSBhdCBNYWhhYmFsaXB1cmFtLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBOYXJhc2ltaGF2YXJtYW4gSSAoNjMwIEFEIC0gNjY4IEFEKSB3YXMgdGhlIFNvbiBhbmQgc3VjY2Vzc29yIG9mICAgTWFoZW5kcmF2YXJtYW4uIEhlIHdhcyBDb25zaWRlcmVkIHRoZSBncmVhdGVzdCBvZiB0aGUgUGFsbGF2YXMgYWxzbyBjYWxsZWQgTmFyYXNpbWhhdmFybWFuICAgTWFoYW1hbGxhL01hbWFsbGEuSGUgZGVmZWF0ZWQgYW5kIGtpbGxlZCBQdWxha2VzaW4gSUkgaW4gNjQyIEFELiBIZSB0b29rIGNvbnRyb2wgb2YgVmF0YXBpLCB0aGUgQ2hhbHVreWEgICBjYXBpdGFsIGFuZCBhc3N1bWVkIHRoZSB0aXRsZSAnVmF0YXBpa29uZGEnLiBIZSB3YXMgZW50aHVzaWFzdGljIHBhdHJvbiBvZiBhcmNoaXRlY3R1cmUgYW5kIGFsb25nIHdpdGggICBjb25zdHJ1Y3RpbmcgdGhlIHBvcnQgb2YgTWFtYWxsYXB1cmFtLCBoZSBhbHNvIGNvbnRyaWJ1dGVkIHRvIHRoZSBjb25zdHJ1Y3Rpb24gb2Ygc2V2ZW4gcmF0aGEgdGVtcGxlcyAgIGZvdW5kIGF0IE1haGFiYWxpcHVyYW0uICAgIFNvdXJjZTogIFRhbWlsIE5hZHUgMTF0aCBBbmNpZW50IEhpc3RvcnkgQm9vayBDdWx0dXJhbCBEZXZlbG9wbWVudCBpbiBTb3V0aCBJbmRpYSBwYWdlIDEyMS0yNiAgICBPbGQgTkNFUlQgQ2xhc3MgWEkgQW5jaWVudCBJbmRpYSBDSEFQVEVSIE5FVyBTVEFURVMgQU5EIFJVUkFMIEVYUEFOU0lPTiBJTiBUSEUgUEVOSU5TVUxBICAgIEFOQ0lFTlQgQU5EIE1FRElFVkFMIElORElBLCBBdXRob3ItIFBvb25hbSBEYWxhbCBEYWhpeWEsICAtMDQgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 only    ",
        "option3" : "1 and 3 only    ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to Ancient India, Consider  the following statements about the Gupta  dynasty:   1.  The Allahabad Pillar inscription refers to the  achievements of Chandragupta I.   2.  The famous Chinese pilgrim, Fahien visited  India during the reign of Samudragupta.    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHdXB0YSBlbXBpcmUgKDMyMC0gNDU1IEFEKTogVGhlIEd1cHRhIGVtcGlyZSBlc3RhYmxpc2hlZCBpdHMgY29udHJvbCBvdmVyIGEgZ29vZCBwYXJ0IG9mIHRoZSBmb3JtZXIgICBkb21pbmlvbnMgb2YgYm90aCB0aGUgS3VzaGFucyBhbmQgdGhlIFNhdGF2YWhhbmFzLiBUaGUgR3VwdGFzIChwb3NzaWJseSBWYWlzaHlhcykga2VwdCBub3J0aGVybiBJbmRpYSAgIHBvbGl0aWNhbGx5IHVuaXRlZCBmb3IgbW9yZSB0aGFuIGEgY2VudHVyeSBUaGUgR3VwdGFzIGFyZSBiZWxpZXZlZCB0byBoYXZlIGJlZW4gZmV1ZGF0b3JpZXMgb2YgdGhlIEt1c2hhbmFzLiAgIFNhbXVkcmFndXB0YSB3YXMgdGhlIGdyZWF0ZXN0IG9mIHRoZSBydWxlcnMgb2YgdGhlIEd1cHRhIGR5bmFzdHkuICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZXJlIGFyZSBpbnNjcmlwdGlvbnMgbGlrZSB0aGUgTWVocmF1bGkgSXJvbiBQaWxsYXIgSW5zY3JpcHRpb24gYW5kIHRoZSBBbGxhaGFiYWQgICBQaWxsYXIgaW5zY3JpcHRpb24gKFByYXlhZyBQcmFzaGFzdGkpLiBUaGUgTWVocmF1bGkgSXJvbiBQaWxsYXIgcmVmZXJzIHRvIHRoZSBhY2hpZXZlbWVudHMgb2YgQ2hhbmRyYWd1cHRhIEkuICAgVGhlIG1vc3QgaW1wb3J0YW50IHNvdXJjZSBmb3IgdGhlIHJlaWduIG9mIFNhbXVkcmFndXB0YSBpcyB0aGUgQWxsYWhhYmFkIFBpbGxhciBpbnNjcmlwdGlvbi4gSXQgZGVzY3JpYmVzICAgaGlzIHBlcnNvbmFsaXR5IGFuZCBhY2hpZXZlbWVudHMgYW5kIGlzIHdyaXR0ZW4gaW4gY2xhc3NpY2FsIFNhbnNrcml0LCB1c2luZyB0aGUgTmFnYXJpIHNjcmlwdC4gVGhlIEFsbGFoYWJhZCAgIFBpbGxhciBpbnNjcmlwdGlvbiBwcm92aWRlcyBhIGRldGFpbGVkIGFjY291bnQgb2YgdGhlIGZvbGxvd2luZyBleHBlZGl0aW9ucyBkdXJpbmcgaGlzIHJlaWduOiAgICAxKSBBZ2FpbnN0IHNvbWUgcnVsZXJzIG9mIE5vcnRoIEluZGlhICAgIDIpIEhpcyBmYW1vdXMgRGFrc2hpbmEgUGF0aGEgZXhwZWRpdGlvbiBhZ2FpbnN0IFNvdXRoIEluZGlhbiBydWxlcnMgICAgIDMpIEEgc2Vjb25kIGNhbXBhaWduIGFnYWluc3Qgc29tZSBvdGhlciBydWxlcnMgb2YgTm9ydGggSW5kaWEuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIGZhbW91cyBDaGluZXNlIHBpbGdyaW0sIEZhaGllbiB2aXNpdGVkIEluZGlhIGR1cmluZyB0aGUgcmVpZ24gb2YgICBDaGFuZHJhZ3VwdGEgSUkuIE91dCBvZiBoaXMgbmluZSB5ZWFycyBzdGF5IGluIEluZGlhLCBoZSBzcGVudCBzaXggeWVhcnMgaW4gdGhlIEd1cHRhIGVtcGlyZS4gSGUgY2FtZSB0byAgIEluZGlhIGJ5IHRoZSBsYW5kIHJvdXRlLiBIZSByZXR1cm5lZCBieSB0aGUgc2VhIHJvdXRlLCB2aXNpdGluZyBvbiB0aGUgd2F5IENleWxvbiBhbmQgSmF2YS4gVGhlIG1haW4gcHVycG9zZSAgIG9mIGhpcyB2aXNpdCB3YXMgdG8gc2VlIHRoZSBsYW5kIG9mIHRoZSBCdWRkaGEgYW5kIHRvIGNvbGxlY3QgQnVkZGhpc3QgbWFudXNjcmlwdHMgZnJvbSBJbmRpYS4gSGUgc3RheWVkIGluICAgUGF0YWxpcHV0cmEgZm9yIHRocmVlIHllYXJzIHN0dWR5aW5nIFNhbnNrcml0IGFuZCBjb3B5aW5nIEJ1ZGRoaXN0IHRleHRzLiAgICAgS25vd2xlZGdlIEJhc2U6ICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgVGhlIG1vc3QgaW1wb3J0YW50IHNvdXJjZSBmb3IgdGhlIHJlaWduIG9mIFNhbXVkcmFndXB0YSBpcyB0aGUgQWxsYWhhYmFkIFBpbGxhciBpbnNjcmlwdGlvbi4gSXQgZGVzY3JpYmVzICAgaGlzIHBlcnNvbmFsaXR5IGFuZCBhY2hpZXZlbWVudHMuIFRoaXMgaW5zY3JpcHRpb24gaXMgZW5ncmF2ZWQgb24gYW4gQXNva2FuIHBpbGxhci4gSXQgd2FzIG9yaWdpbmFsbHkgaW5zdGFsbGVkICAgYnkgQXNva2EgYXQgS2F1c2FtYmkuIEl0IHdhcyBsYXRlciBvbiBzaGlmdGVkIHRvIEFsbGFoYWJhZCBGb3J0LiBJdCBjb250YWlucyB0aHJlZSBpbnNjcmlwdGlvbnMgYmVsb25naW5nIHRvICAgdGhlIHRpbWUgb2YgQXNva2EsIFNhbXVkcmFndXB0YSBhbmQgSmFoYW5naXIuICAgIFRoZSBpbnNjcmlwdGlvbiBkZWxpbmVhdGVzIGEgdml2aWQgZGVzY3JpcHRpb24gb2YgdGhlIGV4cGxvaXRzIG9mIHRoZSBraW5nIGluIGRpZmZlcmVudCBkaXJlY3Rpb25zLiBJdCBwcm92aWRlcyAgIGEgdW5pcXVlIGRlc2NyaXB0aW9uIG9mIHRoZSBHdXB0YSBlbXBpcmUgYW5kIGl0cyBuZWlnaGJvdXJzLiBJdCBpcyBhbiBhdXRoZW50aWMgc291cmNlIG9uIHRoZSBnZW9wb2xpdGljYWwgICBsYW5kc2NhcGUgb2YgSW5kaWEgb2YgdGhlIDR0aCBjZW50dXJ5IENFLiAgICBTb3VyY2U6IFROIEhpc3RvcnkgSGlnaGVyIFNlY29uZGFyeSAtIEZpcnN0IFllYXIgICAgaHR0cDovL2VwZ3AuaW5mbGlibmV0LmFjLmluL2VwZ3BkYXRhL3VwbG9hZHMvZXBncF9jb250ZW50L1MwMDA4MjlJQy9QMDAxNjg5L00wMjIwNDcvTE0vMTUwICA0MDcyNzE4UDA4LU0zMy1BbGxhaGFiYWRQaWxsYXJJbnNjcmlwdGlvbm9mU2FtdWRyYWd1cHRhLUxNLnBkZiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 20,
      "question" : "With respect to Gupta Empire, consider  the following statements about judicial  administration during this period:   1.  There was clear distinction between civil  and criminal offences during this period.   2.  The king had no discretion and passed  judgments based on codified laws.   3.   At the lowest level of the judicial system was  the village assembly or trade guilds.   Which of the above statements are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUganVkaWNpYWwgc3lzdGVtIHdhcyBmYXIgbW9yZSBkZXZlbG9wZWQgdW5kZXIgdGhlIEd1cHRhcyB0aGFuIGluIGVhcmxpZXIgdGltZXMuIExpa2UgZWFybGllciB0aW1lcywgbWFueSAgIGxhd3MgY29udGludWVkIHRvIGJlIGJhc2VkIG9uIGRpZmZlcmVuY2VzIGluIHZhcm5hcy4gVGhlIGd1aWxkcyBvZiBhcnRpc2FucywgbWVyY2hhbnRzIGFuZCBvdGhlcnMgd2VyZSAgIGdvdmVybmVkIGJ5IHRoZWlyIG93biBsYXdzLiBTZWFscyBmcm9tIFZhaXNoYWxpIGFuZCBmcm9tIEJoaXRhIG5lYXIgQWxsYWhhYmFkIGluZGljYXRlIHRoYXQgdGhlc2UgZ3VpbGRzICAgZmxvdXJpc2hlZCBleGNlZWRpbmdseSB3ZWxsIGluIEd1cHRhIHRpbWVzLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBTZXZlcmFsIGJvb2tzIG9uIGxhdyB3ZXJlIGNvbXBpbGVkIGR1cmluZyB0aGlzIHBlcmlvZCBhbmQgZm9yIHRoZSBmaXJzdCB0aW1lIGNpdmlsICAgYW5kIGNyaW1pbmFsIGxhd3Mgd2VyZSBjbGVhcmx5IGRlbWFyY2F0ZWQuIFRoZWZ0IGFuZCBhZHVsdGVyeSBjYW1lIHVuZGVyIGNyaW1pbmFsIGxhdyBhbmQgZGlzcHV0ZXMgICByZWdhcmRpbmcgdmFyaW91cyB0eXBlcyBvZiBwcm9wZXJ0eSBjYW1lIHVuZGVyIGNpdmlsIGxhdy4gRWxhYm9yYXRlIGxhd3Mgd2VyZSBsYWlkIGRvd24gcmVnYXJkaW5nICAgaW5oZXJpdGFuY2UuIFB1cmFuYXMsIFNtcml0aXMgYW5kIERoYXJtYSBTaGFzaHRyYSBsaXRlcmF0dXJlIHdhcyBkZXZlbG9wZWQgaW4gdGhlIEd1cHRhIHBlcmlvZC4gICBZYWpuYXZhbGt5YXNtcml0aSBpcyByZWdhcmRlZCBhcyB0aGUgb2ZmaWNpYWwgbGF3IGJvb2sgb2YgR3VwdGFzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEl0IHdhcyB0aGUgZHV0eSBvZiB0aGUgS2luZyB0byB1cGhvbGQgdGhlIGxhdyBhbmQgZGVhbCB3aXRoIGxlZ2FsIGNhc2VzIHdpdGggdGhlICAgaGVscCBvZiBCcmFobWFuIHByaWVzdHMsIGp1ZGdlcywgYW5kIG1pbmlzdGVycy4gVGhlIGRlY2lzaW9uIG9yIHRoZSBqdWRnbWVudCBvZiB0aGUgY291cnQgd2FzIGJhc2VkIG9uICAgbGVnYWwgdGV4dHMsIHNvY2lhbCBjdXN0b21zIHByZXZhaWxpbmcgZHVyaW5nIHRob3NlIHRpbWVzLCBhbmQgZGlzY3JldGlvbiBvZiB0aGUgS2luZy4gS2luZyB3YXMgdGhlIGhpZ2hlc3QgICBjb3VydCBvZiBhcHBlYWwuIFRoZSBndWlsZHMgb2YgYXJ0aXNhbnMsIG1lcmNoYW50cywgYW5kIG90aGVycyB3ZXJlIGdvdmVybmVkIGJ5IHRoZWlyIG93biBsYXdzLiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQXQgdGhlIGxvd2VzdCBsZXZlbCBvZiB0aGUganVkaWNpYWwgc3lzdGVtIHdhcyB0aGUgdmlsbGFnZSBhc3NlbWJseSBvciB0cmFkZSBndWlsZC4gICBUaGVzZSB3ZXJlIHRoZSB2aWxsYWdlIGNvdW5jaWxzLCB3aGljaCB3ZXJlIGFwcG9pbnRlZCB0byBzZXR0bGUgdGhlIGRpc3B1dGVzIGJldHdlZW4gdGhlIHBhcnRpZXMgdGhhdCAgIGFwcGVhcmVkIGJlZm9yZSB0aGVtLiBJdCBpcyBiZWxpZXZlZCB0aGF0IG1pbGQgcHVuaXNobWVudHMgd2VyZSBhd2FyZGVkIHRvIHRoZSBndWlsdHkgcGVyc29ucy4gVGhlICAgYWRtaW5pc3RyYXRpdmUgdW5pdHMgYmVsb3cgdGhlIGRpc3RyaWN0IGxldmVsIGluY2x1ZGVkIGNsdXN0ZXJzIG9mIHNldHRsZW1lbnRzIGtub3duIHZhcmlvdXNseSBhcyB2aXRoaSwgICBiaHVtaSwgcGF0aGFrYSBhbmQgcGV0YS4gVGhlcmUgYXJlIHJlZmVyZW5jZXMgdG8gb2ZmaWNpYWxzIGtub3duIGFzIGF5dWt0YWthcyBhbmQgdml0aGktbWFoYXR0YXJhcy4gQXQgdGhlICAgdmlsbGFnZSBsZXZlbCwgdmlsbGFnZXJzIGNob3NlIGZ1bmN0aW9uYXJpZXMgc3VjaCBhcyBncmFtaWthIGFuZCBncmFtYWRoeWFrc2hhLiAgICBTb3VyY2U6ICBUTiBIaXN0b3J5IEhpZ2hlciBTZWNvbmRhcnkgLSBGaXJzdCBZZWFyICAgIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNjg3NzEvMS9Vbml0LTEucGRmICAgICBub3QtdGhlLWJyaXRpc2gtc2F5cy1leHBlcnQvYXJ0aWNsZXNob3cvNjMxNjI0MTEuY21zICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the practice of land  grants during Gupta period, consider the  following statements:   1.  Satavahanas for the first time started the  system of land grants to the Brahamanas.   2.  Dev-Agrahara grants, were meant for the  Brahmanas, which were perpetual,  hereditary and tax-free in nature.   3.  Agrahara grants were made to secular  parties such as writers and merchants, for  the purpose of repair and worship of  temples.  Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBGZXVkYWwgZGV2ZWxvcG1lbnQgc3VyZmFjZWQgdW5kZXIgdGhlIEd1cHRhcyB3aXRoIHRoZSBncmFudCBvZiBmaXNjYWwgYW5kICAgYWRtaW5pc3RyYXRpdmUgY29uY2Vzc2lvbnMgdG8gcHJpZXN0cyBhbmQgYWRtaW5pc3RyYXRvcnMuIFN0YXJ0ZWQgaW4gdGhlIERlY2NhbiBieSB0aGUgU2F0YXZhaGFuYXMsIHRoZSAgIHByYWN0aWNlIGJlY2FtZSBhIHJlZ3VsYXIgYWZmYWlyIGluIEd1cHRhIHRpbWVzLiBSZWxpZ2lvdXMgZnVuY3Rpb25hcmllcyB3ZXJlIGdyYW50ZWQgbGFuZCwgZnJlZSBvZiB0YXgsICAgZm9yZXZlciwgYW5kIHRoZXkgd2VyZSBhdXRob3Jpc2VkIHRvIGNvbGxlY3QgZnJvbSB0aGUgcGVhc2FudHMgYWxsIHRoZSB0YXhlcyB3aGljaCBjb3VsZCBoYXZlIG90aGVyd2lzZSAgIGdvbmUgdG8gdGhlIGVtcGVyb3IuICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDIgYW5kIDMgYXJlIGluY29ycmVjdC4gVGhlcmUgd2VyZSB0d28gZGlmZmVyZW50IGtpbmRzIG9mIHJlbGlnaW91cyBncmFudHMuIEZvciB0aGUgQnJhaG1hbmFzLCAgIEFncmFoYXJhIGdyYW50cy1pbnRlbmRlZCB0byBiZSBwZXJwZXR1YWwsIGhlcmVkaXRhcnksIGFuZCB0YXgtZnJlZS13ZXJlIG1hZGUsIGFsb25nIHdpdGggdGhlICAgYXNzaWdubWVudCBvZiBhbGwgbGFuZCByZXZlbnVlLiBGb3IgdGhlIHB1cnBvc2Ugb2YgdGVtcGxlIG1haW50ZW5hbmNlIGFuZCB3b3JzaGlwLCB0aGUgRGV2LUFncmFoYXJhICAgZ3JhbnRzIHdlcmUgZ2l2ZW4gdG8gc2VjdWxhciBwYXJ0aWVzIGxpa2Ugd3JpdGVycyBhbmQgbWVyY2hhbnRzLiAgICAgU291cmNlOiAgaHR0cHM6Ly9lZ3lhbmFnYXIub3NvdS5hYy5pbi9kb3dubG9hZC1zbG0ucGhwP2ZpbGU9QkFISS0wMy1CbG9jay0wMy5wZGYgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "3 only     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements with  reference to the Gupta period:    1.  Buddhism received no or less royal  patronage during the Gupta period.    2.  This period noticed the spread of Tantrism  in India.   3.  Tantrism did not believe in any caste or  gender bias.  Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBCdWRkaGlzbSBmbG91cmlzaGVkIGluIHRoZSBpbml0aWFsIEd1cHRhIGFnZS4gVmFyaW91cyBhcmNoaXRlY3R1cmFsIGRldmVsb3BtZW50cyAgIHRvb2sgcGxhY2UgaW4gdGhpcyBlcmEuIFRoZSBncmVhdGVzdCBhY2hpZXZlbWVudHMgb2YgdGhlIEd1cHRhIHNjdWxwdHVyZSBhcmUgZnJvbSB0aGUgdGhyZWUgc2Nob29scyBvZiAgIEJ1ZGRoaXN0IHNjdWxwdHVyZSBuYW1lbHkgTWF0aHVyYSwgVmFyYW5hc2ksIGFuZCBOYWxhbmRhLiBCdWRkaGlzbSwgaG93ZXZlciwgZXhwZXJpZW5jZWQgYSBkb3dud2FyZCAgIHRyZW5kIGFzIHRoZSBHdXB0YSBhZ2UgYWR2YW5jZWQuIEl0cyBlbGltaW5hdGlvbiBhY2NlbGVyYXRlZCBqdXN0IGFmdGVyIHRoZSBkZWNsaW5lIG9mIEd1cHRhcy4gVGhpcyBjYW4gYmUgICBhdHRyaWJ1dGVkIHRvIHRoZSBncm93aW5nIGNhbWFyYWRlcmllIGJldHdlZW4gdGhlIEJyYWhtYW5hcyBhbmQgdGhlIEd1cHRhIHJ1bGVycyBjdXJiZWQgdGhlIGdyb3d0aCAgIG9mIEJ1ZGRoaXNtLiBCdWRkaGlzbSB3YXMgbm8gbG9uZ2VyIHRoZSByZWNpcGllbnQgb2YgcGF0cm9uYWdlIGJ5IHRoZSBydWxlcnMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoaXMgcGVyaW9kIG9ic2VydmVkIHRoZSBzcHJlYWQgb2YgVGFudHJpc20gaW4gSW5kaWEuIEZyb20gdGhlIGZpZnRoIGNlbnR1cnkgdGhlICAgYnJhaG1hbmFzIGhhZCBzdGFydGVkIHJlY2VpdmluZyBsYW5kIGluIHRoZSB0cmliYWwgYXJlYXMgb2YgTmVwYWwsIEFzc2FtLCBCZW5nYWwsIE9yaXNzYSwgY2VudHJhbCBJbmRpYSBhbmQgICBEZWNjYW4uIEFzIGEgY29uc2VxdWVuY2UsIHRoZSB0cmliYWwgZWxlbWVudHMgY2FtZSB0byBiZSBhc3NpbWlsYXRlZCBpbiB0aGUgQnJhaG1hbmljYWwgc29jaWV0eS4gVGhlICAgYnJhaG1hbmFzIGFkb3B0ZWQgdGhlaXIgcml0dWFscywgZ29kcyBhbmQgZ29kZGVzc2VzLiBJdCBpcyB0aGlzIGFzc2ltaWxhdGlvbiBvZiBCcmFobWFuaWNhbCByZWxpZ2lvbiBhbmQgICB0cmliYWwgcHJhY3RpY2VzIHdoaWNoIHJlc3VsdGVkIGluIHRoZSBkZXZlbG9wbWVudCBvZiBUYW50cmlzbS4gICAgT24gdGhlIHBvaW50IG9mIHZpZXcgb2YgcmVsaWdpb24sIFRhbnRyYXMgY2FuIGJlIGRpdmlkZWQgaW50byB0d28sIEhpbmR1IFRhbnRyYSBhbmQgQnVkZGhhIFRhbnRhLiAgIFRyYWRpdGlvbmFsbHksIHRoZSBzY3JpcHR1cmVzIGRlbGl2ZXJlZCBieSBMb3JkIFNoaXZhIGFyZSBjYWxsZWQgSGluZHUgVGFudHJhLiBJdCB3YXMgZmlyc3QgaW5pdGlhdGVkIGluIHRoZSAgIE5yc2luZ2hhdGFwYW5peWEgVXBhbmlzaGFkcyBpbiBBdGhhcnZhIFZlZGEuIEFzIFNoYW5rYXJhY2hhcnlhIGhhZCBhbm5vdGF0ZWQgdGhlIEhpbmR1IFRhbnRyYSwgaXQgaXMgICBhc3N1bWVkIHRoYXQgaXQgd2FzIHdyaXR0ZW4gZXZlbiBiZWZvcmUgdGhlIDd0aCBjZW50dXJ5IGFuZCB0aGF0IHRoZSBCdWRkaGEgVGFudHJhIHdhcyBhbiBpbWl0YXRpb24gb2YgICB0aGUgSGluZHUgVGFudHJhLiAgICBUYW50cmljIEJ1ZGRoaXNtLCBhbHNvIGtub3duIGFzIFZhanJheWFuYSBCdWRkaGlzbSwgVGFudHJheWFuYSwgTWFudHJheWFuYSwgRXNvdGVyaWMgQnVkZGhpc20gYW5kICAgdGhlIERpYW1vbmQgVmVoaWNsZSwgaXMgYW4gYW5jaWVudCBhbmQgYSBoaWdobHkgY29tcGxpY2F0ZWQgc3lzdGVtIG9mIEJ1ZGRoaXN0IHBoaWxvc29waHkuIFZhanJheWFuYSBpcyAgIG9uZSBvZiB0aGUgdGhyZWUgcm91dGVzIHRha2luZyB0aGUgZm9sbG93ZXIgdG8gZW5saWdodGVubWVudC4gVGhlIG90aGVyIHR3byBpbmNsdWRlIEhpbmF5YW5hIGFuZCAgIE1haGF5YW5hLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUYW50cmlzbSB3ZWxjb21lZCBib3RoIHdvbWVuIGFuZCBzaHVkcmFzIGludG8gaXRzIHJhbmtzIGFuZCBoYWQgbm8gYmlhcyAgIGFnYWluc3QgY2FzdGUgb3IgZ2VuZGVyLiBJdCBlbXBoYXNpc2VkICJmZW1hbGUiIGFzIGEgc291cmNlIG9mIHN0cmVuZ3RoIGFuZCB2aXRhbGl0eS4gU2hhaXZpc20sIFZhaXNobmF2aXNtLCAgIEJ1ZGRoaXNtLCBhbmQgSmFpbmlzbSB3ZXJlIGFsbCBpbXBhY3RlZCBieSB0aGUgVGFudHJpYyBpZGVhcy4gSXQgbGVkIHRvIHRoZSBlbWVyZ2VuY2Ugb2YgdGhlIHdvcnNoaXAgb2YgICBmZW1hbGUgZ29kZGVzc2VzIGluIHRoZXNlIHJlbGlnaW9ucy4gICAgU291cmNlOiAgIGh0dHBzOi8vb3hmb3JkLnVuaXZlcnNpdHlwcmVzc3NjaG9sYXJzaGlwLmNvbS92aWV3LzEwLjEwOTMvYWNwcm9mOm9zby85NzgwMTk1Njg3ODU5LjAwMS4wMDAxL2FjcCAgcm9mLTk3ODAxOTU2ODc4NTktY2hhcHRlci0yNSAgICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NyU2VjMzE1TkVXLzMxNV9IaXN0b3J5X0VuZy8zMTVfSGlzdG9yeV9FbmdfTGVzc29uNy5wZGYgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "1 only   ",
        "option4" : "1, 2 and 3     "
      }
    },
    {
      "index" : 23,
      "question" : "With reference to the Fa-Hien's account  of Gupta period, consider the following  statements:   1.  There are no precise records from Fa-hien  about India's political situation during the  period.   2.  Mostly, corporal punishment was awarded  to the offenders.   3.  Agriculture was the primary source of  income of the state.  Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIER1cmluZyBDaGFuZHJhIEd1cHRhIElJJ3MgcmVpZ24sIHRoZSBDaGluZXNlIHBpbGdyaW0gRmEtaGllbiBjYW1lIHRvIEluZGlhLiBIaXMgbWFpbiBvYmplY3RpdmUgd2FzIHRvIHRyYXZlbCAgIHRvIEJ1ZGRoaXN0IHJlbGlnaW91cyBwbGFjZXMgYW5kIGNvbGxlY3QgY29waWVzIG9mIEJ1ZGRoaXN0IHNjcmlwdHVyZXMuIEFzIGEgcmVzdWx0LCBoZSB0cmF2ZWxsZWQgdGhyb3VnaG91dCAgIHRoZSBHdXB0YSBlbXBpcmUgYW5kIHJlY29yZGVkIGhpcyBvYnNlcnZhdGlvbnMgb24gSW5kaWEuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBGYS1IZWluJ3MgbWFpbiBhcmVhIG9mIGludGVyZXN0IHdhcyByZWxpZ2lvbiwgYW5kIGZyb20gaGlzIGRlc2NyaXB0aW9uLCB3ZSBsZWFybiAgIG5vdGhpbmcgYWJvdXQgSW5kaWEncyBwb2xpdGljYWwgc2l0dWF0aW9uLiBIb3dldmVyLCBoaXMgYWNjb3VudCBwcm92aWRlcyBzb21lIGluc2lnaHQgaW50byB0aGUgc29jaWFsIGFuZCAgIHJlbGlnaW91cyBjb25kaXRpb25zIG9mIHRoZSBwZXJpb2QuICAgICAgb2YgMjIgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZXJlIHdlcmUgYSBmZXcgcXVhcnJlbHMgb3IgZGlzcHV0ZXMsIGJ1dCBwZW9wbGUgcmFyZWx5IGZlbHQgY29tcGVsbGVkIHRvICAgYXBwcm9hY2ggdGhlIGNvdXJ0cy4gR2VuZXJhbGx5LCBjb3Jwb3JhbCBwdW5pc2htZW50IHdhcyBhdm9pZGVkLCBhbmQgb2ZmZW5kZXJzIHdlcmUgdXN1YWxseSBmaW5lZCAgIGFjY29yZGluZyB0byB0aGUgbmF0dXJlIG9mIHRoZWlyIG9mZmVuY2UuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHByaW1hcnkgc291cmNlIG9mIGluY29tZSBvZiB0aGUgc3RhdGUgd2FzIGxhbmQtcmV2ZW51ZS4gVGhlIHBlb3BsZSB3ZXJlICAgZnJlZSB0byBtb3ZlIGZyb20gb25lIGxhbmQgdG8gYW5vdGhlci4gVGhlIGdvdmVybm1lbnQgc2VydmFudHMgd2VyZSBwYWlkIGluIGNhc2ggYW5kIHRoZXkgd2VyZSBiYXJyZWQgICBmcm9tIHRha2luZyBwcmVzZW50cyBvciBicmliZXJ5IGZyb20gdGhlIHBlb3BsZS4gICAgU291cmNlOiAgaHR0cHM6Ly93d3cuaGlzdG9yeWRpc2N1c3Npb24ubmV0L2hpc3Rvcnktb2YtaW5kaWEvZmEtaGllbnMtdmlld3Mtb24taW5kaWEtaW5kaWFuLSAgaGlzdG9yeS82NTE1ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 24,
      "question" : "Why Gupta period is known as golden age  of ancient India?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHdXB0YSBwZXJpb2QgaGFzIGJlZW4gbWFya2VkIGFzIGEgZ29sZGVuIGFnZSBiZWNhdXNlIHRoZXJlIHdlcmUgbWFueSBhZHZhbmNlcyBhbmQgaW52ZW50aW9ucyBmb3IgSW5kaWEgICBpbiB0aGUgYWdlIG9mIHRoZSBHdXB0YSBlbXBpcmUsIHRoZSBhZHZhbmNlbWVudHMgd2VyZSBpbiBTY2llbmNlLCBUZWNoLCBFbmdpbmVlcmluZywgYXJ0LCBkaWFsZWN0aWNzLCAgIGxpdGVyYXR1cmUsIGxvZ2ljLCBtYXRoZW1hdGljcywgYXN0cm9ub215LCByZWxpZ2lvbiwgYW5kIHBoaWxvc29waHkuICAgICBGZXcgZXhhbXBsZXMgd2hpY2ggbWFya2VkIEd1cHRhIHBlcmlvZCBhcyBhIGdvbGRlbiBhZ2U6ICAgIDEpIE9uZSBvZiBtYWpvciBpbnZlbnRpb24gb2YgR3VwdGEgaXMgbnVtZXJhbHMgR3VwdGEgd2FzIHRoZSBmaXJzdCBlbXBpcmUgdG8gdXNlIG51bWVyYWxzLCB0aGV5IHdlcmUgYWxzbyAgIHRoZSBmaXJzdCBlbXBpcmUgdG8gdXNlIGNvaW5zLiAgICAyKSBDaGFuZHJhZ3VwdGEgSUkgcHJvbW90ZWQgdGhlIHN5bnRoZXNpcyBvZiBzY2llbmNlLCBhcnQsIHBoaWxvc29waHksIGFuZCByZWxpZ2lvbiwgaW4gcGFydCBiZWNhdXNlIGhpcyAgIGNvdXJ0IGNvbnRhaW5lZCB0aGUgTmF2YXJhdG5hLCBvciB0aGUgTmluZSBKZXdlbHMsIGEgZ3JvdXAgb2YgbmluZSBzY2hvbGFycyB3aG8gcHJvZHVjZWQgICBhZHZhbmNlbWVudHMgaW4gbWFueSBhY2FkZW1pYyBmaWVsZHMuICAgIDMpIEFyeWFiaGF0YSBoYXZlIGVudmlzaW9uZWQgdGhlIGNvbmNlcHQgb2YgemVybyBhbmQgYWxzbywgaGUgd2FzIGJlbGlldmVkIHRvIGJlIHRoZSBmaXJzdCBvZiB0aGUgSW5kaWFuICAgbWF0aGVtYXRpY2lhbi1hc3Ryb25vbWVycyB3aG8gcG9zdHVsYXRlZCB0aGUgdGhlb3J5IHRoYXQgdGhlIEVhcnRoIG1vdmVzIHJvdW5kIHRoZSBTdW4gYW5kIGlzIG5vdCAgIGZsYXQsIGJ1dCBpbnN0ZWFkIGlzIHJvdW5kIGFuZCByb3RhdGVzIG9uIGl0cyBvd24gYXhpcy4gICAgNCkgVGhlIFNhbWhpdGEsIGEgU2Fuc2tyaXQgdHJlYXRpc2UgdGhhdCBjb3ZlcnMgYWxsIG9mIHRoZSBrZXkgYXl1cnZlZGljIG1lZGljYWwgaWRlYXMgYW5kIGluY2x1ZGVzIGdyb3VuZC0gIGJyZWFraW5nIGNoYXB0ZXJzIG9uIHN1cmdlcnksIHdhcyB3cml0dGVuIGJ5IHRoZSBlbWluZW50IEluZGlhbiBwaHlzaWNpYW4gU3VzaHJ1dGEgZHVyaW5nIHRoZSBHdXB0YSAgIGVyYS4gICAgNSkgSGluZHUgYXJ0IHJlYWNoZWQgbmV3IGhlaWdodHMsIGFzIGV4ZW1wbGlmaWVkIGluIHRoZSBjYXJ2ZWQgcmVsaWVmcyBvZiB0aGUgRGFzaGF2YXRhcmEgVGVtcGxlLiAgIENoYW5kcmFndXB0YSBJSSBhbHNvIHBhdHJvbml6ZWQgQnVkZGhpc3QgYXJ0LiBUaGUgQWphbnRhIENhdmVzLCBkZWNvcmF0ZWQgd2l0aCBpbWFnZXMgb2YgdGhlIGxpZmUgb2YgICBCdWRkaGEsIHByb3ZpZGUgYSB2aXZpZCBleGFtcGxlIG9mIEd1cHRhLWVyYSBJbmRpYW4gcGFpbnRpbmcuICAgIFNvdXJjZTogIGh0dHBzOi8vd3d3Lmt0dWZzZC5vcmcvY21zL2xpYi9OWTE5MDAwMjYyL0NlbnRyaWNpdHkvRG9tYWluLzExMS9BUCUyMEFjdGl2aXRpZXMvQW5jaSAgZW50JTIwQ2l2JTIwUHJvamVjdC9TdHVkZW50JTIwQ2l2aWxpemF0aW9uJTIwUHJvamVjdHMvR3VwdGElMjBKYW1lcyUyMEJyeWNlLnBkZiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Due to their large empire which covered   much of the Indian subcontinent.   ",
        "option2" : " Due to issue of large number of gold coins in   this period.   ",
        "option3" : " Because of its great achievements in the   field of art, science and literature.   ",
        "option4" : " Because of the welfare programmes   introduced in the society by the Gupta   rulers to abrogate poverty and inequality.    "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the 'Drama' during  Gupta period, Consider the following  statements:   1.  The dramas produced during the Gupta  period are mostly comedies.   2.  In dramas, the characters of the higher  classes used Prakrit language and  characters of Shudra used Pali language.   3.  Sanskrit is the language used by women  featuring in these plays.  Which of the statement(s) given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgR3VwdGEgcGVyaW9kIGlzIG5vdGFibGUgZm9yIGl0cyBzZWN1bGFyIGxpdGVyYXR1cmUgcHJvZHVjdGlvbi4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdCBidXQgc3RhdGVtZW50cyAyIGFuZCAzIGFyZSBpbmNvcnJlY3QuIFRoZSBkcmFtYXMgcHJvZHVjZWQgaW4gSW5kaWEgZHVyaW5nIHRoZSAgIEd1cHRhIGVyYSBzaGFyZSB0d28gY2hhcmFjdGVyaXN0aWNzLiBGaXJzdCBhbmQgZm9yZW1vc3QsIHRoZXkgYXJlIGFsbCBjb21lZGllczsgdGhlcmUgYXJlIG5vIHRyYWdlZGllcy4gICBTZWNvbmQsIGNoYXJhY3RlcnMgZnJvbSB0aGUgdXBwZXIgYW5kIGxvd2VyIGNsYXNzZXMgZG8gbm90IGNvbW11bmljYXRlIGluIHRoZSBzYW1lIGxhbmd1YWdlLiBXb21lbiAgIGFuZCBzaHVkcmFzIGZlYXR1cmluZyBpbiB0aGVzZSBkcmFtYXMgdXNlIFByYWtyaXQgd2hlcmVhcyB0aGUgaGlnaGVyIGNsYXNzZXMgdXNlIFNhbnNrcml0LiAgICBLbm93bGVkZ2UgYmFzZTogVGhlIHdvcmtzIG9mIEthbGlkYXNhLCB3aG8gbGl2ZWQgaW4gdGhlIHNlY29uZCBoYWxmIG9mIHRoZSBmb3VydGggYW5kIGZpcnN0IGhhbGYgb2YgdGhlIGZpZnRoICAgY2VudHVyaWVzLCBoYXMgbWFkZSB0aGUgR3VwdGEgcGVyaW9kIHBhcnRpY3VsYXJseSBmYW1vdXMgaW4gbGl0ZXJhdHVyZSBhbmQgcGxheXMuIEhlIHdhcyB0aGUgZ3JlYXRlc3QgcG9ldCAgIG9mIGNsYXNzaWNhbCBTYW5za3JpdCBsaXRlcmF0dXJlIGFuZCB3cm90ZSBBYmhpam5hbmFzaGFrdW50YWxhbSB3aGljaCBpcyB2ZXJ5IGhpZ2hseSByZWdhcmRlZCBpbiB3b3JsZCAgIGxpdGVyYXR1cmUuICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgQmhhc2Egd2FzIGEgc2lnbmlmaWNhbnQgcG9ldCBkdXJpbmcgdGhlIGVhcmx5IEd1cHRhIGVyYS4gSGUgY29tcG9zZWQgdGhpcnRlZW4gcGxheXMuIEFsdGhvdWdoIGhlICAgY29tcG9zZWQgaW4gU2Fuc2tyaXQsIGhpcyBkcmFtYXMgYWxzbyBoZWF2aWx5IGluY2x1ZGUgUHJha3JpdC4gSGUgd3JvdGUgdGhlIHBsYXkgRHJhZGlyYWNoYXJ1ZGF0dGEsICAgYWZ0ZXJ3YXJkcyByZXRpdGxlZCBNcmljaGNoaGFrYXRpa2EsIHdoaWNoIGJlY2FtZSB3ZWxsLWtub3duLiAgICBWaXNoYWtoYWRhdHRhIHdhcyBvbmUgb2YgdGhlIGZhbW91cyBTYW5za3JpdCBwb2V0cyBhbmQgcGxheSB3cml0ZXIuIEhlIHdyb3RlIG1hZ251bSBvcHVzIHR3byBwbGF5cywgICB0aGUgTXVkcmFyYWtzYXNhIGFuZCB0aGUgRGV2aWNoYW5kcmFndXB0YW0uIEluIHRoZXNlIGJvb2tzLCBoZSB3cm90ZSBpbiBTYW5za3JpdCBsYW5ndWFnZS4gICAgU3VkcmFrYSBpcyB0aGUgYXV0aG9yIG9mIHRoZSBmYW1vdXMgZHJhbWEsIHRoZSBNcmljY2hha2F0aWthLCBhIHVuaXF1ZSB3b3JrIGluIFNhbnNrcml0IGRyYW1hdGljICAgbGl0ZXJhdHVyZS4gSGUgZmxvdXJpc2hlZCBpbiB0aGUgZWFybGllciBwYXJ0IG9mIHRoZSBmb3VydGggY2VudHVyeSBBLkQuIEhlIG1heSBiZSBjb25zaWRlcmVkIGFzIHRoZSBmaXJzdCAgIFNhbnNrcml0IGRyYW1hdGlzdCBvZiB0aGUgR3VwdGEgcGVyaW9kLiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5oaXN0b3J5ZGlzY3Vzc2lvbi5uZXQvaGlzdG9yeS1vZi1pbmRpYS9hcnQtbGl0ZXJhdHVyZS1hbmQtc2NpZW5jZS1pbi1ndXB0YS0gIHBlcmlvZC8yMjM3ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 only   ",
        "option3" : "3 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 26,
      "question" : "  Consider the following statements  regarding Brahmadeyas Villages:   1.  It was a form of land grant given to a single  Brahmana or to several Brahmana families.   2.  No outsiders were allowed as cultivators on  these lands as these villages were  exclusively populated by Brahmanas.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIExhbmQgZ3JhbnRzIHRvIHJlbGlnaW91cyBpbnN0aXR1dGlvbnMgd2VyZSBjYWxsZWQgQnJhaG1hZGV5YXMsIChpLmUuLCBkb25hdGVkIHRvIEJyYWhtaW5zKSBEZXZhZGFuYSAgIChkb25hdGVkIHRvIEdvZHMpIGFuZCBBZ3JhaGFyYSAoU2V0dGxlbWVudCBvZiBQcmllc3RzKS4gVGhlc2UgbGFuZHMgZG9uYXRlZCB0byB0aGUgdGVtcGxlcyBhbmQgICBtb25hc3RlcmllcyBhcGFydCBmcm9tIGJlaW5nIHVzZWQgYXMgbm9ybWFsIHRlbmFuY3kgYWxzbyBjYXJyaWVkIGEgcmlnaHQgdmVzdGVkIHdpdGggdGhlIHRlbXBsZSAgIGF1dGhvcml0aWVzIHRvIGNhbGwgZm9yIHVucGFpZCBsYWJvdXIgKGNhbGxlZCBWaXNodGkpIGFzIGEgcmVsaWdpb3VzIHNlcnZpY2UgdG8gdGhlIHRlbXBsZSBmcm9tIHRoZSB0aWxsZXJzIG9uICAgdGhlIGRvbmF0ZWQgbGFuZC4gSXQgYmVjYW1lIGEgd2lkZWx5IHByZXZhbGVudCBwcmFjdGljZSBpbiAxMHRoIGNlbnR1cnkgQUQgaW4gZ3JhZHVhbCBwaGFzZXMgaW4gYWxsIHRoZSAgIHNvdXRoIEluZGlhbiByZWdpb25zLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBMYW5kcyB3ZXJlIGdpdmVuIGFzIEJyYWhtYWRleWFzIGVpdGhlciB0byBhIHNpbmdsZSBCcmFobWFuYSBvciB0byBzZXZlcmFsICAgQnJhaG1hbmEgZmFtaWxpZXMgd2hpY2ggcmFuZ2VkIGZyb20gYSBmZXcgdG8gc2V2ZXJhbCBodW5kcmVkcyBvciBldmVuIG1vcmUgdGhhbiBhIHRob3VzYW5kLCBhcyBzZWVuIGluICAgdGhlIFNvdXRoIEluZGlhbiBjb250ZXh0LiBUaGUgdGF4ZXMgZnJvbSBzdWNoIHZpbGxhZ2VzIHdlcmUgYXNzaWduZWQgdG8gdGhlIEJyYWhtYW5hIGRvbmVlcywgd2hvIHdlcmUgICBhbHNvIGdpdmVuIHRoZSByaWdodCB0byBnZXQgdGhlIGRvbmF0ZWQgbGFuZCBjdWx0aXZhdGVkLiBCcmFobWFuYXMgYmVjYW1lIG1hbmFnZXJzIG9mIGFncmljdWx0dXJhbCBhbmQgICBhcnRpc2FuYWwgcHJvZHVjdGlvbiBpbiB0aGVzZSBzZXR0bGVtZW50cyBmb3Igd2hpY2ggdGhleSBvcmdhbml6ZWQgdGhlbXNlbHZlcyBpbiB0byBhc3NlbWJsaWVzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEEgQnJhaG1hZGV5YXMgd2FzIG5vdCBleGNsdXNpdmVseSBwb3B1bGF0ZWQgYnkgQnJhaG1hbmFzLCBidXQgd2FzIG9mdGVuICAgaW5oYWJpdGVkIGJ5IG5vbi1CcmFobWFuYSBjdWx0aXZhdG9ycyBvciBzZXJ2aWNlIHBlcnNvbm5lbCB3b3JraW5nIGZvciB0aGUgdmlsbGFnZSBhcyBhIHdob2xlIGFuZCBmb3IgICB0aGUgbGFuZCBjb250cm9sbGluZyBCcmFobWFuYXMuIEhlbmNlIGEga2luZCBvZiBsYW5kbG9yZC10ZW5hbnQgb3Igc2VydmljZSByZWxhdGlvbnNoaXAgZXZvbHZlZCBpbiBuZXdseSAgIGVzdGFibGlzaGVkIEJyYWhtYWRleWFzICAgIFNvdXJjZTogIEJsb2NrIDNhX1ByZXNzQ29weV9JIChlZ3lhbmtvc2guYWMuaW4pICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 27,
      "question" : "  With reference to 'Post-Satavahana  Kingdoms', consider the following pairs:   Empires                        Capital   1. Vakatakas            -    Vijayapuri   2. Ikshvakus            -    Nandivardhan   3. Kadambas           -    Banavasi  Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgZW5kIG9mIHRoZSBTYXRhdmFoYW5hIHBvbGl0aWNhbCBwcmVzZW5jZSBpbiBEZWNjYW4gaXMgbGlrZWx5IHRvIGhhdmUgdGFrZW4gcGxhY2UgaW4gYy4gMjI1IENFLiBUaGlzICAgcGF2ZWQgdGhlIHdheSBmb3IgdGhlIHJpc2Ugb2YgdGhlIFZha2F0YWthcyBpbiB0aGUgRGVjY2FuLCBLYWRhbWJhcyBpbiBNeXNvcmUsIEFiaGlyYXMgaW4gTWFoYXJhc2h0cmEgICBhbmQgSWtzaHZha3VzIGluIEFuZGhyYS4gICAgUGFpciAxIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IFRoZSBjYXBpdGFsIG9mIHRoZSBWYWthdGFrYXMgZHluYXN0eSB0aGF0IGJ1aWx0IHRoZSBBamFudGEgQ2F2ZXMgaW4gICBBdXJhbmdhYmFkIHdhcyBmb3VuZCBpbiBwcmVzZW50LWRheSBOYWdhcmRoYW4gdmlsbGFnZSAoTmFuZGl2YXJkaGFuYSkgbmVhciBSYW10ZWsgb2YgTmFncHVyIGJ5IGEgICBncm91cCBvZiBhcmNoYWVvbG9naXN0cyBmcm9tIERlY2NhbiBDb2xsZWdlLiBOYW5kaXZhcmRoYW5hIHdhcyBvZiBncmVhdCBzaWduaWZpY2FuY2UgdG8gdGhlIGR5bmFzdHkgICB3aGljaCBydWxlZCBzb3V0aC13ZXN0ZXJuIEluZGlhIGZyb20gMjUwLTU1MCBBRC4gICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQ6IFRoZSBJa3NodmFrdXMgZHluYXN0eSAoYy4gMjI1LTM0MCBBLkQpIHdhcyBhIGZldWRhdG9yeSB0cmliZSB1bmRlciB0aGUgICBwYXRyb25hZ2Ugb2YgdGhlIGdyZWF0IFNhdGF2YWhhbmEgRW1waXJlIHRoYXQgcnVsZWQgdGhlIEFuZGhyYSByZWdpb24sIGRlbHRhIG9mIHRoZSBLcmlzaG5hIGFuZCBHb2RhdmFyaSAgIHJpdmVycyBvbiB0aGUgZWFzdCBjb2FzdCwgc2l0dWF0aW5nIHRoZWlyIGNhcGl0YWwgYXQgVmlqYXlwdXJpLiAgICBQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQ6IFRoZSBLYWRhbWJhcyB3ZXJlIGFuIGFuY2llbnQgYW5kIHJveWFsIGR5bmFzdHkgb2YgS2FybmF0YWthLCBJbmRpYS4gVGhleSAgIHJ1bGVkIG5vcnRoZXJuIEthcm5hdGFrYSBhbmQgdGhlIEtvbmthbiBmcm9tIEJhbmF2YXNpIChjYXBpdGFsIGNpdHkpIGluIHdoYXQgd2UgY2FsbCBVdHRhcmEgS2FubmFkYSAgIGRpc3RyaWN0IHRvZGF5LiBUaGUga2luZ2RvbSB3YXMgZm91bmRlZCBieSBNYXl1cmFzaGFybWEgaW4gYy4gMzQ1LiAgICBTb3VyY2U6ICBDYXBpdGFsIG9mIFZha2F0YWthIGR5bmFzdHkgd2hvIHJ1bGVkIERlY2NhbiwgYnVpbHQgQWphbnRhIENhdmVzLCBleGNhdmF0ZWQgaW4gTmFncHVyIHwgVGhlICAgRmluYW5jaWFsIEV4cHJlc3MgICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only    ",
        "option3" : "1 and 3 only   ",
        "option4" : "3 only    "
      }
    },
    {
      "index" : 28,
      "question" : "  With reference to 'Society of  Tamilaham', consider the following  statements:   1.  It was priest-dominated society based on  religious worship and cult practices.   2.  The introduction of the Brahmanical varna  concept led to breaking up of old tribal  kinship ties of Tamilaham society.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUYW1pbGFoYW0gcmVmZXJzIHRvIHRoZSBnZW9ncmFwaGljYWwgcmVnaW9uIGluaGFiaXRlZCBieSB0aGUgYW5jaWVudCBUYW1pbCBwZW9wbGUuIFRoZSBhbmNpZW50IFRhbWlsICAgY291bnRyeSB3YXMgZGl2aWRlZCBpbnRvIGtpbmdkb21zLiBUaGUgYmVzdCBrbm93biBhbW9uZyB0aGVtIHdlcmUgdGhlIENoZXJhcywgQ2hvbGFzLCBQYW5keWFzIGFuZCAgIFBhbGxhdmFzLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFJlbGlnaW91cyB3b3JzaGlwIGFuZCBjdWx0IHByYWN0aWNlcyBvZiB0aGUgdmlsbGFnZSBmb2xrIGZvbGxvd2VkIG9sZCB0cmliYWwgcml0dWFscyAgIHdoaWNoIG5lY2Vzc2l0YXRlZCB0aGUgcHJlc2VuY2Ugb2Ygcml0dWFsIGdyb3Vwcywgc3VjaCBhcyBWZWxhbiwgVmVudHR1dmFuIGV0Yy4gVGhleSBsb29rZWQgYWZ0ZXIgdGhlICAgc3VwZXJuYXR1cmFsIGVsZW1lbnRzIGFuZCB0aGVpciBtYW5hZ2VtZW50LiBIb3dldmVyLCBzb2NpZXR5IHdhcyBub3QgJ3ByaWVzdC1kb21pbmF0ZWQnLiBUaGVyZSB3YXMgICBjb25zaWRlcmFibGUgc3VycGx1cyB3aGljaCBsZWQgdG8gdGhlIHByb3NwZXJpdHkgb2YgdHJhZGluZyBhbmQgb3RoZXIgZ3JvdXBzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBTb2NpZXR5IGluIGFuY2llbnQgVGFtaWxhaGFtIHdhcyBlc3NlbnRpYWxseSB0cmliYWwgaW4gY2hhcmFjdGVyIHdpdGggaXRzIGtpbnNoaXAgICBvcmdhbmlzYXRpb24uIEhvd2V2ZXIsIHRoZSBzb2NpZXR5IHdhcyBjaGFyYWN0ZXJpc2VkIGJ5IHRoZSBncmFkdWFsIGJyZWFraW5nIHVwIG9mIG9sZCBraW5zaGlwIHRpZXMgYW5kICAgdGhlIGludHJvZHVjdGlvbiBvZiB0aGUgQnJhaG1hbmljYWwgdmFybmEgY29uY2VwdC4gU29jaWFsIHN0cmF0aWZpY2F0aW9uIG9yIGluZXF1YWxpdHkgYmV0d2VlbiBkaWZmZXJlbnQgICBzb2NpYWwgZ3JvdXBzIGFwcGVhcmVkIGFuZCB0aGVyZSB3YXMgYnJvYWQgZGlzdGluY3Rpb24gYmV0d2VlbiAnaGlnaCcgYW5kICdsb3cnICAgIFNvdXJjZTogIFVuaXQtMjkucGRmIChlZ3lhbmtvc2guYWMuaW4pICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements  regarding Sangam Age:   1.  Nagarattars was the representative body of  mercantile groups in charge of trade  settlements.   2.  Nagaram was a settlement of a peasant's  group with an exemption from the liability  of tax.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgQ2hvbGEgY29wcGVyIHBsYXRlIGV2aWRlbmNlIHJlZmVycyB0byB0aGUgTmFnYXJhdHRhciB3aGlsZSBleGVjdXRpbmcgdGhlIGxhbmQtZ3JhbnQuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE5hdHRhcnMgd2VyZSB0aGUgcmVwcmVzZW50YXRpdmVzIG9mIG5hZHUgKGxvY2FsaXR5KS4gTmFnYXJhdHRhcnMgY29tcHJpc2VkIG9mIHRoZSAgIHRyYWRpbmcgY29tbXVuaXR5IGFuZCB3YXMgdGhlIHJlcHJlc2VudGF0aXZlIGJvZHkgb2YgbWVyY2FudGlsZSBncm91cHMgaW4gY2hhcmdlIG9mIHRyYWRlIHNldHRsZW1lbnRzLiAgIFRoZSBtZW1iZXJzIG9mIE5hZ2FyYXR0YXIgd2VyZSB0aGVtc2VsdmVzIGFncmljdWx0dXJpc3RzIHdobyBjb3VsZCBjaGFubmVscyB0aGVpciBzdXJwbHVzIHByb2R1Y2UgaW50byAgIHRyYWRlLiBUaGV5IGJlY2FtZSBhIGZ1bGwtZmxlZGdlZCB0cmFkaW5nIHNvY2lldHkgZGVzY3JpYmVkIHRoZSBuYWdhcmF0dGFyICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogTmFnYXJhbSB3YXMgYSBzZXR0bGVtZW50IG9mIGEgZ3JvdXAgb2YgdHJhZGVycy4gTmFnYXJhbSBzZXR0bGVtZW50IHdhcyBhICAgc2VwYXJhdGUgYXJlYS4gTmFnYXJhbSBhbHNvIGhlbGQgbGFuZCBpbiBjb21tb24gY2FsbGVkIG5hZ2FyYWtrYW5pLiBUaGlzIHRoZXkgYWNxdWlyZWQgdGhyb3VnaCBwdXJjaGFzZSAgIGJ1dCB0aGV5IGFsc28gbGVhc2VkIG91dCBsYW5kIGFuZCBwZXJmb3JtZWQgdGhlIHRhc2sgb2YgbGV2eWluZyB0YXhlcyBhbmQgcmVuZGVyaW5nIHNlcnZpY2VzIHRvIHRoZSBsb2NhbCAgIGdyb3Vwcy4gVGhleSBtYWludGFpbmVkIHRoZWlyIHJlY29yZHMgcmVnYXJkaW5nIGluY29tZSBhbmQgZXhwZW5kaXR1cmUuIFRoZXkgYWxzbyBwYWlkIHJveWFsIGxldmllcyBpbiAgIHRoZSBmb3JtIG9mIGdvbGQgYW5kIHBhZGR5LiAgICBTb3VyY2U6ICBCSElDLTEwNSBFbmdsaXNoLnBtZCAoZWd5YW5rb3NoLmFjLmluKSAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 30,
      "question" : "  Consider the following pairs:  Sangam Literature Associated  subject matter  1. Pattuppattu Country life of  Tamil society  2. Tolkappiyam Stories based on  love and valour  3. Pathinenkilkanakku Poetic work on  human values  Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTYW5nYW0gbGl0ZXJhdHVyZSBpcyB0aGUgYW5jaWVudCBUYW1pbCBsaXRlcmF0dXJlIHRoYXQgY2FtZSBpbnRvIHRoZSBleGlzdGVuY2UgZHVyaW5nIFNhbmdhbSBwZXJpb2QgKDMwMCAgIEJDIC0tIDMwMCBBRCkuIFRoZXNlIHdvcmtzIHdlcmUgbW9zdGx5IGNvbXBpbGVkIGR1cmluZyBTYW5nYW0gYXNzZW1ibGllcy4gVGhlIFNhbmdhbSBsaXRlcmF0dXJlICAgY29uc2lzdHMgb2YgVG9sa2FwcGl5YW0sIEV0dHV0b2dhaSwgUGF0dHVwcGF0dHUsIFBhdGhpbmVua2lsa2FuYWtrdSBhbmQgdGhlIHR3byAgIGVwaWNzIFNpbGFwcGF0aGlrYXJhbSBhbmQgTWFuaW1lZ2FsYWkuICAgIFBhaXIgMSBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogVGhlcmUgYXJlIDEwIGxvbmcgc29uZ3MsIGFsc28ga25vd24gYXMgUGF0dHVwcGF0dHUsIGFuIGFudGhvbG9neSBvZiB0ZW4gbWlkLSAgc2l6ZSBib29rcy4gVGhleSB3ZXJlIGxvc3QgZm9yIHF1aXRlIHNvbWUgdGltZSwgYnV0IHVuZWFydGhlZCBieSB0aGUgZWZmb3J0cyBvZiBUYW1pbCBTY2hvbGFyIFUuIFYuICAgU3dhbWluYXRoYSBJeWVyLiBUaGUgc3ViamVjdCBtYXR0ZXIgb2YgUGF0dHVwcGF0dHUgaXMgVGFtaWwgY291bnRyeSBsaWZlLiAgICBQYWlyIDIgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZDogVG9sa2FwcGl5YW0gaXMgYSB3b3JrIG9uIFRhbWlsIGxhbmd1YWdlIGdyYW1tYXIuIEl0IGlzIHNhaWQgdG8gYmUgd3JpdHRlbiAgIGJ5IFRob2xrYXBwaXlhciwgYSBkaXNjaXBsZSBvZiBWZWRpYyBzYWdlIEFnYXN0eWEuICAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogRXR0dXRvZ2FpIGFuZCBQYXR0dXBwYXR0dSBhcmUgY29sbGVjdGl2ZWx5IGtub3duIGFzIFBhdGluZW5tZWxrYW5ha2t1IGFuZCAgIHRoZXkgYXJlIGRpdmlkZWQgaW50byB0d28gbWFpbiBncm91cHMgLSBBaGFtIChsb3ZlKSBhbmQgUHVyYW0gKHZhbG91cikuIFRoZXJlIGFyZSBhbHNvIDE4IHBvc3QtU2FuZ2FtICAgcG9ldGljIHdvcmtzLiBUaGVzZSB3b3JrcyBhcmUgY29sbGVjdGl2ZWx5IGtub3duIGFzIFBhdGhpbmVua2lsa2FuYWtrdS4gVGhlIHN1YmplY3QgbWF0dGVyIG9mIHRoZXNlIHdvcmsgICBpcyBtb3JhbGl0eSwgZXRoaWNzLCBhbmQgaHVtYW4gdmFsdWVzLiAgICAgU291cmNlOiAgRDpcanVuZVxwYW5kZXlccHJlc3MgQkVHQy0xMDEgKGVneWFua29zaC5hYy5pbikgICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to architecture in Gupta  period, which of the following statement is  correct?   1.  Gupta period art was mainly inspired by  religion.  2.  The themes for sculpture were mainly  drawn from Hindu traditions ignoring Jain  and Buddhist traditions.  3.  Great Boar at the entrance of a cave at  Udayagiri belongs to Gupta period.  4.  Bamiyan Buddha sculptures which were  destroyed by the Taliban belonged to Gupta  period.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gR3VwdGEgcGVyaW9kIGFydCB3YXMgbWFpbmx5IGluc3BpcmVkIGJ5IHJlbGlnaW9uLiBBcyBpbiBlYXJsaWVyIHRpbWVzLCBCdWRkaGlzbSAgIGdhdmUgYSBncmVhdCBpbXBldHVzIHRvIGFydCBpbiBHdXB0YSBwZXJpb2QgYXMgd2VsbC4gQSBsaWZlc2l6ZWQgYnJvbnplIGltYWdlIG9mIHRoZSBCdWRkaGEgYmVsb25naW5nIHRvIHRoZSAgIE1hdGh1cmEgc2Nob29sIGhhcyBiZWVuIGZvdW5kIGZyb20gU3VsdGFuZ2FuaiBpbiBCaWhhci4gQWxzbywgYmVhdXRpZnVsIGltYWdlcyBvZiB0aGUgQnVkZGhhIHdlcmUgYWxzbyAgIGNyZWF0ZWQgYXQgTWF0aHVyYSBhbmQgU2FybmF0aC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBpbnNwaXJhdGlvbiBvZiB0aGUgdGhlbWVzIGZvciBzY3VscHR1cmUgd2FzIGRyYXduIGZyb20gSGluZHUsIEJ1ZGRoaXN0LCAgIGFuZCBKYWluYSB0cmFkaXRpb25zLiBBIGdvb2Qgc3BlY2ltZW4gaXMgdGhlIHdlbGwta25vd24gZXJlY3QgQnVkZGhhIGZyb20gU2FybmF0aC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gR3JlYXQgQm9hciAodmFyYWhhKSBhdCB0aGUgZW50cmFuY2Ugb2YgYSBjYXZlIGF0IFVkYXlhZ2lyaSBiZWxvbmdzIHRvIEd1cHRhIHBlcmlvZC4gICBUaGUgVWRheWFnaXJpIENhdmVzIGFyZSB0d2VudHkgcm9jay1jdXQgY2F2ZXMgbmVhciBWaWRpc2hhLCBNYWRoeWEgUHJhZGVzaC4gVGhlIG1vc3QgZmFtb3VzIGNhcnZpbmcgYXQgICBVZGF5YWdpcmkgaXMgYSBmaXZlLWZvb3QgdGFsbCBzdGF0dWUgb2YgVmlzaG51J3MgQm9hciBBdmF0YXIsIHdpdGggdGhlIHdvcnNoaXBmdWwgbWFzc2VzIHN0YW5kaW5nIGluIGhvbWFnZSAgIGJ5IHRoZSBzaWRlcy4gICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gVGhlIHNwZWN0YWN1bGFyIEJhbWl5YW4gQnVkZGhhIHNjdWxwdHVyZXMgd2hpY2ggd2VyZSB0cmFnaWNhbGx5IGRlc3Ryb3llZCBieSAgIHRoZSBUYWxpYmFuIHRvbyBiZWxvbmdlZCB0byBHdXB0YSBwZXJpb2QuICAgIFNvdXJjZTogQW5jaWVudCAmIE1lZGlldmFsIEluZGlhIEJ5IFBvb25hbSBEYWxhbCBEYWhpeWEgY2hhcHRlciA4ICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2 and 3 only  "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements with  reference to foreign trade between India and  Rome during post Mauryan phase:   1.  The trade involved mostly articles of daily or  common use.  2.  Roman export to India was mostly gold and  silver coins.   3.  The balance of trade was in favour of India.  Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0ICAgIEFsdGhvdWdoIHRoZSB2b2x1bWUgb2YgdHJhZGUgYmV0d2VlbiBJbmRpYSBhbmQgUm9tZSBzZWVtcyB0byBoYXZlIGJlZW4gbGFyZ2UsIGl0IHdhcyBub3QgY2FycmllZCBvbiBpbiAgIGFydGljbGVzIG9mIGRhaWx5IG9yIGNvbW1vbiB1c2UuIFRoZXJlIHdhcyBhIGJyaXNrIGNvbW1lcmNlIGluIGx1eHVyeSBnb29kcywgbm90IGluIHRoZSBhcnRpY2xlcyBvZiBkYXktICB0by1kYXkgdXNlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0ICAgIFRoZSBtb3N0IHNpZ25pZmljYW50IFJvbWFuIGV4cG9ydCB0byBJbmRpYSB3YXMgdGhlIGxhcmdlIG51bWJlciBvZiBjb2lucywgaW52YXJpYWJseSBtYWRlIG9mIGdvbGQgYW5kICAgc2lsdmVyLiBBYm91dCA4NSBmaW5kcyBvZiBSb21hbiBjb2lucyBoYXZlIGNvbWUgdG8gbGlnaHQgaW4gdGhlIHdob2xlIG9mIHRoZSBzdWJjb250aW5lbnQsIGFuZCBtb3N0IG9mICAgdGhlbSBjb21lIGZyb20gdGhlIHNvdXRoIG9mIHRoZSBWaW5kaHlhcy4gICBSb21hbiB3cml0ZXIgUGxpbnksIHdobyB3cm90ZSBoaXMgYWNjb3VudCBjYWxsZWQgTmF0dXJhbCBIaXN0b3J5LCB3cm90ZSB0aGF0IFJvbWUgd2FzIGJlaW5nIGRyYWluZWQgb2YgICBnb2xkIG9uIGFjY291bnQgb2YgaGVyIHRyYWRlIHdpdGggSW5kaWEuICAgIFJvbWFucyBtYWlubHkgaW1wb3J0ZWQgc3BpY2VzLCBtdXNsaW4sIHBlYXJscywgamV3ZWxzIGFuZCBwcmVjaW91cyBzdG9uZXMsIGlyb24gZ29vZHMgZXNwZWNpYWxseSBjdXRsZXJ5ICAgZXRjLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0ICAgIFRoZSBiYWxhbmNlIG9mIHRyYWRlIHdhcyBzbyBtdWNoIGluIGZhdm91ciBvZiBJbmRpYSB0aGF0IGV2ZW50dWFsbHkgc3RlcHMgaGFkIHRvIGJlIHRha2VuIGluIFJvbWUgdG8gYmFuICAgUm9tZSdzIHRyYWRlIHdpdGggSW5kaWEgaW4gcGVwcGVyIGFuZCBzdGVlbCBnb29kcy4gICAgS25vd2xlZGdlIEJhc2U6ICAgIFRob3VnaCB0aGUga2luZ2RvbXMgb2YgYm90aCB0aGUgU2F0YXZhaGFuYXMgYXMgd2VsbCBhcyB0aGUgS3VzaGFucyBwcm9maXRlZCBmcm9tIHRyYWRlIHdpdGggdGhlIFJvbWFuICAgZW1waXJlLCBhbHRob3VnaCB0aGUgTWF4aW11bSBwcm9maXQgc2VlbXMgdG8gaGF2ZSBhY2NydWVkIHRvIHRoZSBTYXRhdmFoYW5hcy4gICBUaGUgUm9tYW5zIGZpcnN0IHN0YXJ0ZWQgdHJhZGUgd2l0aCB0aGUgc291dGhlcm4tbW9zdCBwb3J0aW9uIG9mIHRoZSBjb3VudHJ5LCBiZWNhdXNlIHRoZWlyIGVhcmxpZXN0IGNvaW5zICAgaGF2ZSBiZWVuIGZvdW5kIGluIHRoZSBUYW1pbCBraW5nZG9tcyB3aGljaCBsYXkgb3V0c2lkZSB0aGUgU2F0YXZhaGFuYSBkb21pbmlvbnMuIFRoZSBSb21hbnMgbWFpbmx5ICAgaW1wb3J0ZWQgc3BpY2VzIGZvciB3aGljaCBzb3V0aCBJbmRpYSB3YXMgZmFtb3VzLiBUaGV5IGFsc28gaW1wb3J0ZWQgbXVzbGluLCBwZWFybHMsIGpld2VscywgYW5kIHByZWNpb3VzICAgc3RvbmVzIGZyb20gY2VudHJhbCBhbmQgc291dGggSW5kaWEuIElyb24gZ29vZHMsIGVzcGVjaWFsbHkgY3V0bGVyeSwgZm9ybWVkIGFuIGltcG9ydGFudCBpdGVtIG9mIGV4cG9ydCB0byAgIHRoZSBSb21hbiBlbXBpcmUuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 33,
      "question" : "How did the end of Kushana empire dealt  a great blow to the towns of north western  India?  1.  Security provided for the trade routes was  withdrawn.  2.  A widespread plunder of towns by central  Asian tribes.  3.  Changes to the climatic conditions of the  area occurred around the same time.  4.  A great flood struck the area adjoining  towns.  Select the correct answer using the code given  below  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFRvd25zIHByb3NwZXJlZCBpbiB0aGUgS3VzaGFuIGFuZCBTYXRhdmFoYW5hIGVtcGlyZXMgYmVjYXVzZSB0aGV5IGNhcnJpZWQgb24gdGhyaXZpbmcgdHJhZGUgd2l0aCB0aGUgICBSb21hbiBlbXBpcmUuIFRoZSBjb3VudHJ5IHRyYWRlZCB3aXRoIHRoZSBlYXN0ZXJuIHBhcnQgb2YgdGhlIFJvbWFuIGVtcGlyZSBhcyB3ZWxsIGFzIHdpdGggQ2VudHJhbCBBc2lhLiAgIFRvd25zIGluIFBhbmphYiBhbmQgd2VzdGVybiBVdHRhciBQcmFkZXNoIHRocml2ZWQgYmVjYXVzZSB0aGUgY2VudHJlIG9mIEt1c2hhbiBwb3dlciBsYXkgaW4gbm9ydGgtICB3ZXN0ZXJuIEluZGlhLiBNb3N0IEt1c2hhbiB0b3ducyBpbiBJbmRpYSBsYXkgZXhhY3RseSBvbiB0aGUgbm9ydGgtd2VzdGVybiBvciBVdHRhcmFwYXRoYSByb3V0ZSAgIHBhc3NpbmcgZnJvbSBNYXRodXJhIHRvIFRheGlsYS4gVGhlIEt1c2hhbiBlbXBpcmUgZW5zdXJlZCBzZWN1cml0eSBvbiB0aGUgcm91dGVzLiBJdHMgZW5kIGluLCB0aGUgdGhpcmQgICBjZW50dXJ5IEEuRC4gZGVhbHQgYSBncmVhdCBibG93IHRvIHRoZXNlIHRvd25zLiAgICBUaGUgc2FtZSB0aGluZyBzZWVtcyB0byBoYXZlIGhhcHBlbmVkIGluIHRoZSBEZWNjYW4gd2l0aCB0aGUgYmFuIG9uIHRyYWRlIHdpdGggSW5kaWEgaW1wb3NlZCBieSB0aGUgICBSb21hbiBlbXBpcmUgZnJvbSB0aGUgdGhpcmQgY2VudHVyeSBBRC4gVG93bnMgY291bGQgbm90IHN1cHBvcnQgdGhlIGFydGlzYW5zIGFuZCBtZXJjaGFudHMgd2hvIGxpdmVkICAgdGhlcmUuIEFyY2hhZW9sb2dpY2FsIGV4Y2F2YXRpb25zIGluIHRoZSBEZWNjYW4gYWxzbyBzdWdnZXN0IGRlY2xpbmUgaW4gdGhlIHVyYmFuIHNldHRsZW1lbnRzIGFmdGVyIHRoZSAgIFNhdGF2YWhhbmEgcGhhc2UuICAgU291cmNlOiBOQ0VSVCBBbmNpZW50IEluZGlhIFJTIFNoYXJtYSBQYWdlMTQ0ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 34,
      "question" : "With reference to the Rudradaman-I, the  most famous of all the Shaka rulers in the  ancient India, consider the following  statements:  1.  He is known for repairing of Sudarshan  Lake.  2.  He issued the first ever long inscription in  chaste Sanskrit.   3.  Greek writer Yavaneshwara lived in India  during Rudradaman's reign.  Which of the statement given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU2hha2EgaXMgdGhlIEluZGlhbiB0ZXJtIHVzZWQgZm9yIHRoZSBwZW9wbGUgY2FsbGVkIFNjeXRoaWFucywgd2hvIG9yaWdpbmFsbHkgYmVsb25nZWQgdG8gY2VudHJhbCBBc2lhLiAgIERlZmVhdGVkIGJ5IHRoZWlyIG5laWdoYm91cnMgdGhlIFl1ZWgtY2hpcyAodGhlIHRyaWJhbCBzdG9jayB0byB3aGljaCB0aGUgS3VzaGFuYXMgYmVsb25nZWQpIHRoZXkgICBncmFkdWFsbHkgY2FtZSB0byBzZXR0bGUgaW4gbm9ydGh3ZXN0ZXJuIEluZGlhIGFyb3VuZCBUYXhpbGEgaW4gdGhlIGZpcnN0IGNlbnR1cnkgQi5DLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IC0gUnVkcmFkYW1hbiBlbXBpcmUgd2FzIHNwcmVhZCBvdmVyIGFsbW9zdCB3aG9sZSBvZiB3ZXN0ZXJuIEluZGlhLiBUaGUgICBTdWRhcnNoYW5hIGxha2Ugd2FzIGFuIGFydGlmaWNpYWwgcmVzZXJ2b2lyLCBhcyBwZXIgcm9jayBpbnNjcmlwdGlvbi4gVGhlIGluc2NyaXB0aW9uIG1lbnRpb25zIHRoYXQgdGhlICAgbGFrZSwgd2l0aCBlbWJhbmttZW50cyBhbmQgd2F0ZXIgY2hhbm5lbHMsIHdhcyBidWlsdCBieSBhIGxvY2FsIGdvdmVybm9yIGR1cmluZyB0aGUgcnVsZSBvZiB0aGUgICBNYXVyeWFzLiBJdHMgZW1iYW5rbWVudHMgd2FzIGJyb2tlbiBkdXJpbmcgdGVycmlibGUgc3Rvcm0gYW5kIHdhdGVyIGd1c2hlZCBvdXQgb2YgdGhlIGxha2UuICAgUnVkcmFkYW1hbiwgd2hvIHdhcyB0aGVuIHJ1bGluZyBpbiB0aGUgYXJlYSwgY2xhaW1lZCB0byBoYXZlIGdvdCB0aGUgbGFrZSByZXBhaXJlZCB1c2luZyBoaXMgb3duICAgcmVzb3VyY2VzLCB3aXRob3V0IGltcG9zaW5nIGFueSB0YXggb24gaGlzIHN1YmplY3RzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IC0gSGlzIGFjaGlldmVtZW50cyBhcmUga25vd24gdGhyb3VnaCB0aGUgaW5zY3JpcHRpb24gdGhhdCBoZSBnb3QgZW5ncmF2ZWQgb24gYSAgIGJvdWxkZXIgYXQgR2lybmFyIG9yIEp1bmFnYXJoLiBIZSB3YXMgYSBncmVhdCBsb3ZlciBvZiBTYW5za3JpdC4gSGUgaXNzdWVkIHRoZSBmaXJzdCBldmVyIGxvbmcgaW5zY3JpcHRpb24gaW4gICBjaGFzdGUgU2Fuc2tyaXQuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJ1ZHJhZGFtYW4gYmVjYW1lIHJ1bGVyIG9mIHRoZSBLc2F0cmFwYXMgaW4gYXJvdW5kIDEzMCBBRCBhbmQgaXQgd2FzIGR1cmluZyB0aGUgICBwZXJpb2Qgb2YgaGlzIHJ1bGUgdGhhdCBZYXZhbmVzdmFyYSB3b3JrZWQgYXMgYW4gb2ZmaWNpYWwgYW5kIG1hZGUgaGlzIHRyYW5zbGF0aW9uIG9mIFlhdmFuYWphdGFrYSBmcm9tICAgR3JlZWsgdG8gU2Fuc2tyaXQuICAgICBLbm93bGVkZ2UgQmFzZTogQWJvdXQgU2hha2FzOiAgICBSdWxlcnMsIHN1Y2ggYXMgdGhlIFNoYWthcyB3aG8gY2FtZSBmcm9tIENlbnRyYWwgQXNpYSwgd2VyZSByZWdhcmRlZCBhcyBtbGVjaGNoaGFzLCBiYXJiYXJpYW5zIG9yICAgb3V0c2lkZXJzIGJ5IHRoZSBCcmFobWFuYXMuIFVuZGVyIHRoZSBzdWNjZXNzaXZlIFNoYWthIHJ1bGVycyB0aGVpciB0ZXJyaXRvcmllcyAgIGV4dGVuZGVkIHVwIHRvIE1hdGh1cmEgYW5kIEd1amFyYXQuICAgU291cmNlOiBOSU9TIEFuY2llbnQgSGlzdG9yeSwgICBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnkgUGFydCBJIG9mIE5DRVJUIENsYXNzIFhJSSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 35,
      "question" : "St. Thomas visited India during the period  of which of the following ruler in ancient India:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBTaGFrYSBydWxlIGluIG5vcnRoLXdlc3Rlcm4gcGFydCBvZiBJbmRpYSB3YXMgZm9sbG93ZWQgYnkgdGhlIFBhcnRoaWFucy4gSXQgaXMgc2FpZCB0aGF0IFBhcnRoaWFucyBoYWQgICB0aGVpciByb290cyBpbiBJcmFuIGFuZCBmcm9tIHRoZXJlIHRoZXkgbWlncmF0ZWQgdG8gSW5kaWEuIEhvd2V2ZXIgYXMgY29tcGFyZWQgd2l0aCB0aGUgU2hha2FzIGFuZCBHcmVla3MsICAgdGhleSBydWxlZCBvdmVyIG9ubHkgYSBzbWFsbCBwb3J0aW9uIG9mIG5vcnRoLXdlc3Rlcm4gSW5kaWEgaW4gZmlyc3QgY2VudHVyeSBBRC4gICBTb21lIGxpdGVyYXJ5IHNvdXJjZXMgYXNzb2NpYXRlIEdvbmRvcGhlcm5lcyBvciBHb25kb3BoYXJlcyBhcyBhIFBhcnRoaWFuIHJ1bGVyLiBJdCBpcyBzYWlkIHRoYXQgU3QuICAgVGhvbWFzLCB2aXNpdGVkIEluZGlhIGR1cmluZyBoaXMgcmVpZ24gdG8gc3ByZWFkIENocmlzdGlhbml0eSBpbiBJbmRpYS4gSGUgaXMgc2FpZCB0byBoYXZlIGNvbnZlcnRlZCBib3RoLCB0aGUgICBraW5nIGFuZCBoaXMgYnJvdGhlciwgdG8gQ2hyaXN0aWFuaXR5LiAgIFNvdXJjZTogTklPUywgQW5jaWVudCBIaXN0b3J5ICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Gondophorenes  ",
        "option2" : "Harsha Vardhan  ",
        "option3" : "Chandra Gupta II  ",
        "option4" : "Chandra Gupta Maurya   "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to the trade routes of  Ancient India, consider the following  statements:  1.  Uttarapatha was not in existence during the  Mauryan period.   2.  Taxila, Mathura, Kausambi and Varanasi  were few of the major towns located on  uttarapatha.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFdpdGhpbiB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQgdGhlcmUgd2VyZSB0d28gbWFqb3Igcm91dGVzIG1lbnRpb25lZCBpbiB0aGUgZGlmZmVyZW50IHNvdXJjZXMuIFRoZSAgIHV0dGFyYXBhdGhhIG9yIG5vcnRoZXJuIHJvdXRlIGNvbm5lY3RlZCB0aGUgbWFqb3IgY2VudHJlcyBvZiB0aGUgbm9ydGggd2hpbGUgdGhlIGRha3NoaW5hcGF0aGEgbGlua2VkICAgdGhlIGNlbnRyZXMgb2YgcGVuaW5zdWxhciBJbmRpYS4gICBJdCBzdHJldGNoZWQgZnJvbSB0aGUgbm9ydGgtd2VzdCwgYWNyb3NzIHRoZSBJbmRvLUdhbmdldGljIHBsYWlucywgdXAgdG8gdGhlIHBvcnQgb2YgVGFtcmFsaXB0aSBvbiB0aGUgICBCYXkgb2YgQmVuZ2FsLiBUaGUgdXR0YXJhcGF0aGEgb3JpZ2luYXRlZCBhdCBQdXNoa2FsYXZhdGkgb3IgbW9kZW0gQ2hhcnNhZGEgYW5kIHdlbnQgdmlhIFRheGlsYSwgICBNYXRodXJhLCBLYXVzYW1iaSBhbmQgVmFyYW5hc2kgdG8gUGF0YWxpcHV0cmEgYW5kIGZyb20gdGhlcmUgb253YXJkcyB0byBDaGFtcGEgYW5kICAgQ2hhbmRyYWtldHVnYXJoLiBUaGlzIGFuY2llbnQgcm91dGUgd2FzIGFscmVhZHkgaW4gZXhpc3RlbmNlIHVuZGVyIHRoZSBNYXVyeWFzIGFuZCByZWZlcmVuY2VzIHRvIGl0ICAgb2NjdXIgaW4gR3JlZWsgd3JpdGluZ3MuIEZyb20gTWF0aHVyYSBhbm90aGVyIHJvdXRlIGJyYW5jaGVkIG9mZiB3ZXN0d2FyZCB0byBTaW5kaCBhbmQgaXQgd2FzIGFsb25nIHRoaXMgICByb3V0ZSB0aGF0IGhvcnNlcyB3ZXJlIGJyb3VnaHQgdG8gdGhlIG5vcnRoLiAgIFNvdXJjZTogaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDE1Mi8xL1VuaXQtMjQucGRmICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS82NDc5OC8xL0JMT0NLJTIwNC5wZGYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 Only  ",
        "option2" : "2 Only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the ancient India,  consider the following statements:   1.  The Maitrakas established an independent  kingdom in Thanesar after the fall of Gupta  empire.   2.  The Maukharies were the subordinate rulers  of the Guptas who ruled over the western  India.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgY29ycmVjdC4gICAgTWFueSBzbWFsbCBraW5nZG9tcyByb3NlIGFmdGVyIHRoZSBmYWxsIG9mIHRoZSBHdXB0YSBlbXBpcmUuIFRoZXkgd2VyZSBtb3N0bHkgZmV1ZGF0b3JpZXMgb2YgdGhlIEd1cHRhICAgcnVsZXJzLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBNYWl0cmFrYXMgd2VyZSB0cmlidXRhcnkgY2hpZWZzIG9mIHRoZSBHdXB0YXMsIHdobyBlc3RhYmxpc2hlZCBhbiAgIGluZGVwZW5kZW50IGtpbmdkb20gaW4gd2VzdGVybiBJbmRpYS4gUnVsaW5nIG92ZXIgU2F1cmFzaHRyYSBpbiBHdWphcmF0LCB0aGUgTWFpdHJha2FzIGRldmVsb3BlZCBWYWxhYmhpICAgYXMgdGhlaXIgY2FwaXRhbC4gVGhpcyBjaXR5IGJlY2FtZSBhbiBpbXBvcnRhbnQgY2VudGVyIG9mIGxlYXJuaW5nLiBCZWluZyBvbiB0aGUgQXJhYmlhbiBTZWEsIGl0IHdhcyBhbHNvIGEgICBwb3J0IHRvd24gaGF2aW5nIGZsb3VyaXNoaW5nIHRyYWRlIGFuZCBjb21tZXJjZS4gTWFpdHJha2FzIGNvbnRpbnVlZCB0byBydWxlIHVudGlsIHRoZSBtaWRkbGUgb2YgdGhlICAgZWlnaHRoIGNlbnR1cnkgd2hlbiBBcmFiIGF0dGFja3Mgd2Vha2VuZWQgdGhlaXIgcG93ZXIuICAgIEFuIGltcG9ydGFudCBydWxpbmcgZmFtaWx5IHRvIGdhaW4gcHJvbWluZW5jZSBhZnRlciB0aGUgZmFsbCBvZiB0aGUgR3VwdGEgd2FzIHRoYXQgb2YgdGhlIFB1c2h5YWJodXRpcyB3aG8gICBoYWQgdGhlaXIgY2FwaXRhbCBhdCBUaGFuZXNhci4gSGFyc2h2YXJkaGFuYSB3YXMgaXRzIGltcG9ydGFudCBydWxlci4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgTWF1a2hhcmllcyBydWxlZCBvdmVyIEthbmF1aiB3aGljaCBncmFkdWFsbHkgcmVwbGFjZWQgUGF0YWxpcHV0cmEgYXMgYSAgIHBvbGl0aWNhbCBjZW50ZXIgb2Ygbm9ydGggSW5kaWEuIEhhcnNoYXZhcmRoYW5hJ3Mgc2lzdGVyIFJhanlhc2hyaSB3YXMgbWFycmllZCB0byBHcmloYXZhcm1hbi4gU2hhc2hhbmthICAgKHRoZSBydWxlciBvZiBHYXVyKSBhbmQgRGV2Z3VwdGEgKHRoZSBMYXRlciBHdXB0YSkgcnVsZXIgam9pbnRseSBhdHRhY2tlZCBHcmloYXZhcm1hbiBhbmQga2lsbGVkIGhpbS4gVGhlICAga2luZ2RvbSBvZiBLYW5hdWogd2FzIHRoZW4gbWVyZ2VkIHdpdGggdGhhdCBvZiB0aGUgUHVzaHlhYmh1dGlzIGFuZCBIYXJzaGEgc2hpZnRlZCBoaXMgY2FwaXRhbCBmcm9tICAgVGhhbmVzYXIgKEt1cnVrc2hldHJhKSB0byBLYW5hdWouICAgICAgIG9mIDIyICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgS25vd2xlZGdlIEJhc2U6ICAgIERocnV2YXNlbmEgSUkgd2FzIHRoZSBtb3N0IGltcG9ydGFudCBydWxlciBvZiB0aGUgTWFpdHJha2FzLiBIZSB3YXMgYSBjb250ZW1wb3Jhcnkgb2YgSGFyc2hhdmFyZGhhbmEgICBhbmQgd2FzIG1hcnJpZWQgdG8gaGlzIGRhdWdodGVyLiBIc3VhbiBUc2FuZyB0ZWxscyB1cyB0aGF0IERocnV2YXNlbmEgSUkgYXR0ZW5kZWQgSGFyc2hhJ3MgYXNzZW1ibHkgYXQgICBQcmF5YWdhIChBbGxhaGFiYWQpLiAgICBTb3VyY2U6ICAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TclNlYzMxNU5FVy8zMTVfSGlzdG9yeV9FbmcvMzE1X0hpc3RvcnlfRW5nX0xlc3NvbjcucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 38,
      "question" : "With reference to the Besnagar pillar  inscription, consider the following statement   1.  It mentions about Heridotus, a Greek  ambassador to Nanda Dynasty.  2.  It is double the size of Mauryan lion capital  pillar.  3.  It is the first known inscription in India  related to the Vaishnavism.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQmVzdCBzcGVjaW1lbiBvZiBhIFN1bmdhIHBpbGxhciBpcyB0aGUgSGVsaW9kb3J1cyBwaWxsYXIgYXQgQmVzbmFnYXIgbmVhciBWaWRpc2hhLCBNYWRoeWEgUHJhZGVzaC4gSXQgd2FzICAgY29tbWlzc2lvbmVkIGJ5IEhlbGlvZG9ydXMsIEdyZWVrIGFtYmFzc2Fkb3IgdG8gdGhlIFN1bmdhcywgYXJvdW5kIDExMyBCQ0UuIEhlIGlzIG9uZSBvZiB0aGUgZWFybGllc3QgICByZWNvcmRlZCBHcmVlayBjb252ZXJ0cyB0byBIaW5kdWlzbS4gVGhlIDctbGluZSBCcmFobWkgaW5zY3JpcHRpb24gaWRlbnRpZmllcyB0aGUgcGlsbGFyIGFzIEdhcnVkYS1kaHZhamEgICBpbnN0YWxsZWQgdG8gc2hvd2Nhc2UgaGlzIGRldm90aW9uIHRvIEJoYWdhdmF0YSBjdWx0LiBUaGlzIGN1bHQgaXMgY29uc2lkZXJlZCBhIHByZWRlY2Vzc29yIG9mIFZpc2hudSBjdWx0LiAgIFRoZSBpbnNjcmlwdGlvbiBpcyB0aGUgZmlyc3Qga25vd24gaW5zY3JpcHRpb24gaW4gSW5kaWEgcmVsYXRlZCB0byBWYWlzaG5hdmlzbS4gICBJbiBtYW55IHdheXMgdGhlIHBpbGxhciBpcyBkaWZmZXJlbnQgZnJvbSBNYXVyeWFuIGxpb24tY2FwaXRhbHMuIEl0IGlzIGhhbGYgdGhlaXIgc2l6ZS4gVGhlIHNoYWZ0IGRvZXMgbm90IGhhdmUgICBhIHNtb290aCBhcHBlYXJhbmNlIGFuZCB0aGVyZSBpcyBzbGlnaHQgZGVjb3JhdGlvbiBpbiB0aGUgZm9ybSBvZiBnYXJsYW5kIGFuZCBnZWVzZSBtb3RpZnMuIFRoZSBjYXBpdGFsICAgY29uc2lzdHMgb2YgYSByZXZlcnNlIGxvdHVzIHdpdGggaXRzIGxlYXZlcyB2aXNpYmxlLiBBdG9wIHdhcyBwZXJoYXBzIGEgZ2FydWRhIHNjdWxwdHVyZSBhcyB0aGUgbmFtZSAgIEdhcnVkYWRodmFqYSBzdWdnZXN0cy4gVGhlIHBpbGxhciB3YXMgbG9jYXRlZCBuZWFyIGEgVmFzdWRldmEgc2hyaW5lLiAgIEEgYmFueWFuIHRyZWUtc2hhcGVkIGNhcGl0YWwgaGFzIGFsc28gYmVlbiBmb3VuZC4gVGhpcyBpbmRpY2F0ZXMgdGhhdCBtYW55IG1vcmUgcGlsbGFycyBtYXkgaGF2ZSBiZWVuICAgZXJlY3RlZCBpbiBhbmQgYXJvdW5kIHRoZSByZWdpb24gb2YgVmlkaXNoYSBidXQgdGhleSBoYXZlIG5vdCBzdXJ2aXZlZC4gICBTb3VyY2U6IGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNjc3MjUvMS9Vbml0LTE1LnBkZiAgIE5JT1MsIENoYXB0ZXIgNiwgUG9zdCBNYXVyeWFuIERldmVsb3BtZW50ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 39,
      "question" : "With reference to 'Trade and Commerce  in ancient Indian History', the terms like  Barygaza, Supara and Kalyan are-  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICBJbiBjb250ZXh0IG9mIEFuY2llbnQgSW5kaWFuIEhpc3RvcnksIEJhcnlnYXphLCBTdXBhcmEgYW5kIEthbHlhbiB3ZXJlIHRoZSBpbXBvcnRhbnQgcG9ydHMgb2YgICB0cmFuc21hcmluZSBjb21tZXJjZSBieSB0aGlyZCBjZW50dXJ5IEJDLiAgICAxKSBJbiB0aGUgM3JkIGNlbnR1cnksIEJoYXJ1Y2ggcG9ydCBpbiBHdWphcmF0IHdhcyBtZW50aW9uZWQgYXMgQmFydWdhemEuIEl0IHdhcyBrbm93biB0byB0aGUgR3JlZWtzICAgYW5kIFJvbWFucyBhcyBCYXJ5Z2F6YSwgYW5kIHByb2JhYmx5IGhhZCBhIHNldHRsZW1lbnQgb2YgR3JlZWsgdHJhZGVycy4gICAyKSBTb3BhcmEgd2FzIGFuIGFuY2llbnQgcG9ydCB0b3duIGFuZCB0aGUgY2FwaXRhbCBvZiB0aGUgYW5jaWVudCBBcGFyYW50YS4gVGhlIGFuY2llbnQgcG9ydCBvZiBTb3BhcmEgICB3YXMgdGhlIG1vc3QgaW1wb3J0YW50IHBvcnQgaW4gd2VzdGVybiBJbmRpYS4gVGhlIHNpdGUgb2YgdGhpcyBhbmNpZW50IHRvd24gaXMgbG9jYXRlZCBuZWFyIHRoZSBwcmVzZW50LSAgZGF5IE5hbGEgU29wYXJhIChuZWFyIE11bWJhaSkuIEluIGFuY2llbnQgdGltZXMsIGl0IHdhcyB0aGUgbGFyZ2VzdCB0b3duc2hpcCBvbiBJbmRpYSdzIHdlc3QgY29hc3QsICAgdHJhZGluZyB3aXRoIE1lc29wb3RhbWlhLCBFZ3lwdCwgQ29jaGluLCBBcmFiaWEgYW5kIEVhc3Rlcm4gQWZyaWNhLiAgIDMpIEthbHlhbiB3YXMgb25jZSBmYW1vdXMgYXMgYSBwb3J0IGluIGFuY2llbnQgdGltZXMuIFJlY29yZHMgb2YgaXRzIGV4aXN0ZW5jZSBhcyBhIHByZW1pZXIgcG9ydCBpbiB0aGUgICByZWdpb24gaGF2ZSBiZWVuIGZvdW5kIGluIGFuY2llbnQgR3JlZWsgbWFudXNjcmlwdHMuIFRoZSBjb3Jwb3JhdGlvbiBpcyBnb3Zlcm5lZCBieSBCb21iYXkgICBQcm92aW5jaWFsIE11bmljaXBhbCBDb3Jwb3JhdGlvbiBBY3QgMTk0OS4gICBTb3VyY2U6IFVuaXQtMyAoZWd5YW5rb3NoLmFjLmluKSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Taxes and Customs  ",
        "option2" : "Ports for transmarine commerce  ",
        "option3" : "Interest charged by moneylenders  ",
        "option4" : "Guild system of traders   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements:  1.  The basic strength of Guptas was in the use  of horses.   2.  Gupta empire benefitted by exploiting iron  ores of south Bihar.  3.  Guptas skilfully used matrimonial alliances  to consolidate their power.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEd1cHRhIGVtcGlyZSB3aXRuZXNzZWQgcHJvZ3Jlc3MgaW4gaXRzIGtpbmdkb20gZHVlIHRvIGV4Y2VsbGVudCBob3JzZW1lbi4gICBCZWluZyBmZXVkYXRvcmllcyBvZiBLdXNoYW5zLCBHdXB0YSBsZWFybmVkIHRoZSB1c2Ugb2Ygc2FkZGxlIGFuZCByZWlucy4gVGhlc2UgZ2F2ZSB0aGVtIHRoZSBtb2JpbGl0eSBhbmQgICBtYWRlIHRoZW0gZXhjZWxsZW50IGhvcnNlbWVuLiBUaGUgYmFzaWMgc3RyZW5ndGggb2YgR3VwdGFzIHdhcyBpbiB0aGUgdXNlIG9mIGhvcnNlcy4gICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEd1cHRhIGVtcGlyZSBiZW5lZml0dGVkIGJ5IGV4cGxvaXRpbmcgaXJvbiBvcmVzIG9mIGNlbnRyYWwgSW5kaWEgYW5kIHNvdXRoIEJpaGFyLiAgIENlbnRyZSBvZiB0aGVpciBvcGVyYXRpb25zIGxheSBpbiB0aGUgZmVydGlsZSBsYW5kIG9mIE1hZGh5YWRlc2EgY292ZXJpbmcgQmloYXIgYW5kIFV0dGFyIFByYWRlc2guIEZ1cnRoZXIgICB0aGV5IHRvb2sgYWR2YW50YWdlIG9mIHRoZWlyIHByb3hpbWl0eSBvZiB0aGUgYXJlYXMgb2Ygbm9ydGggSW5kaWEgd2hpY2ggY2FycmllZCBvbiBhIHByb3NwZXJvdXMgc2lsayB0cmFkZSAgIHdpdGggdGhlIEJ5emFudGluZSBlbXBpcmUuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gR3VwdGFzIHNraWxsZnVsbHkgdXNlZCBtYXRyaW1vbmlhbCBhbGxpYW5jZXMgdG8gY29uc29saWRhdGUgdGhlaXIgcG93ZXIuICAgQ2hhbmRyYWd1cHRhIC0gSSBlbmhhbmNlZCBoaXMgcG93ZXIgYW5kIHByZXN0aWdlIGJ5IG1hcnJ5aW5nIEt1bWFyYWRldmksIHByaW5jZXNzIG9mIExpY2hjaGhhdmkgY2xhbiAgIG9mIE5lcGFsLiBGdXJ0aGVyIENoYW5kcmFndXB0YSBJSSBoYWQgZXN0YWJsaXNoZWQgYSBtYXRyaW1vbmlhbCBhbGxpYW5jZSB3aXRoIFZha2F0YWthcyBieSBtYXJyeWluZyBoaXMgICBkYXVnaHRlciBQcmFiaGF2YXRpZ3VwdGEgd2l0aCBSdWRyYXNlbmEtSUkgb2YgdGhlIFZha2F0YWthIGR5bmFzdHkuICAgU291cmNlOiBBbmNpZW50ICYgTWVkaWV2YWwgSW5kaWEgQnkgUG9vbmFtIERhbGFsIERhaGl5YSBjaGFwdGVyIDggICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 41,
      "question" : "In the history of India, which of the  following events occurred the earliest?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3QuIFJhc2h0cmFrdXRhIER5bmFzdHkgd2FzIGZvcm1lZCBpbiA3NTMgQS5ELiBieSBEYW50aWR1cmdhLiBIZSBmaXhlZCBoaXMgY2FwaXRhbCBhdCAgIE1hbGtoYW5kLiBJdCBpbmNsdWRlZCB0aGUgbGFyZ2UgcGFydCBvZiBwcmVzZW50IGRheSBLYXJuYXRha2EuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0LiBUYW1pbCBQb2V0IEthbWJhbmEgd2hvIHdyb3RlIHRoZSBmYW1vdXMgVGFtaWwgUmFtYXlhbmEgYWxzbyBjYWxsZWQgYXMgICBSYW1hdmF0YXJhbSBiZWxvbmdlZCB0byBDaG9sYSBLaW5nZG9tLiBUaGUgYm9vayB3YXMgd3JpdHRlbiBhcm91bmQgMTJ0aCBjZW50dXJ5LiAgIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gVGhlIEJhdHRsZSBvZiBCYW5uaWhhdHRpIHRvb2sgcGxhY2UgaW4gMTU2NS4gSXQgaXMgYWxzbyBjYWxsZWQgdGhlIEJhdHRsZSBvZiBUYWxpa290YS4gICBUaGUgQmF0dGxlIG9mIFRhbGlrb3RhIChCYXR0bGUgb2YgUmFrc2hhc2EtVGFuZ2FkaSkgd2FzIGZvdWdodCBpbiAxNTY1IGF0IEJhbm5paGF0dGkuIEl0IHJlc3VsdGVkIGluIHRoZSAgIGNydXNoaW5nIGRlZmVhdCBvZiB0aGUgVmlqYXlhbmFnYXJhIGtpbmdkb20uIFRoZSBiYXR0bGUgaXMgY29uc2lkZXJlZCB0byBtYXJrIHRoZSBlbmQgb2YgdGhlIGdyZWF0ICAgVmlqYXlhbmFnYXJhIGVtcGlyZS4gSW4gdGhpcyBiYXR0bGUsIHRoZSBjb21iaW5lZCBmb3JjZXMgb2YgdGhlIHJ1bGVycyBvZiBCaWphcHVyLCBHb2xjb25kYSBhbmQgQWhtYWRuYWdhciAgIGZvdWdodCBhZ2FpbnN0IHRoZSBWaWpheWFuYWdhcmEgcnVsZXIuIFZpamF5YW5hZ2FyYSB3YXMgdGhvcm91Z2hseSBsb290ZWQgYW5kIGxlZnQgaW4gcnVpbnMuICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0LiBHYW5nYWlrb25kYWNob2xhcHVyYW0gd2FzIGVzdGFibGlzaGVkIGJ5IEtpbmcgUmFqZW5kcmEgQ2hvbGEgSSAoMTAxMi0xMDQ0IENFKSAgIGFmdGVyIGhpcyB2aWN0b3Jpb3VzIGV4cGVkaXRpb24gdXAgdG8gdGhlIEdhbmdldGljIHBsYWlucy4gSXQgYmVjYW1lIHRoZSBjYXBpdGFsIG9mIHRoZSBDaG9sYSBkeW5hc3R5IGluIGMuICAgMTAyNSBkdXJpbmcgdGhlIHJlaWduIG9mIFJhamVuZHJhIENob2xhIEksIGFuZCBzZXJ2ZWQgYXMgdGhlIENob2xhIGNhcGl0YWwgZm9yIGFyb3VuZCAyNTAgeWVhcnMuICAgU291cmNlOiBUYW1pbCBOYWR1IEhpc3RvcnkgVGV4dCBCb29rcyAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9zb2NpZXR5L2hpc3RvcnktYW5kLWN1bHR1cmUva2FtYmFuLXRoZS1maXJzdC10by1nbG9yaWZ5LXJhbWEtICBuYW1hL2FydGljbGUyNjgwNTE5MC5lY2UgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Foundation of Rashtrakuta Dynasty.  ",
        "option2" : " Publication of Ramavataram (Kamba   Ramayanam).  ",
        "option3" : " Occurrence of the Battle of Bannihatti.  ",
        "option4" : " Foundation of Gangaikonda Cholapuram.   "
      }
    },
    {
      "index" : 42,
      "question" : "The Gupta dynasty reached its peak  during his reign by expanding territories  through conquests as well as by marriage  alliances. He indirectly controlled the Vakataka  kingdom through her daughter Prabhavati. He  adopted the title 'Vikramaditya'.  The king mentioned in the above paragraph is:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBiIGlzIGNvcnJlY3QuIENoYW5kcmFndXB0YSBJSSAoYy4gMzc2IC0gNDEzLzQxNSBDRSkgd2FzIHRoZSBzb24gb2YgU2FtdWRyYWd1cHRhLiBEdXJpbmcgICBDaGFuZHJhZ3VwdGEg4oWhJ3MgcmVpZ24sIHRoZSBHdXB0YSBkeW5hc3R5IHJlYWNoZWQgaXRzIHBlYWsgYnkgZXhwYW5kaW5nIHRlcnJpdG9yaWVzIHRocm91Z2ggY29ucXVlc3RzIGFzICAgd2VsbCBhcyBieSBtYXJyaWFnZSBhbGxpYW5jZXMuIEhlIG1hcnJpZWQgS3ViZXJhbmFuZ2EsIGEgTmFnYSBwcmluY2VzcyBhbmQgaGFkIGEgZGF1Z2h0ZXIsIFByYWJoYXZhdGkgICB3aXRoIGhlci4gSGUgbWFycmllZCBQcmFiaGF2YXRpIHRvIGEgVmFrYXRha2EgcHJpbmNlLCBSdWRyYXNlbmEg4oWhIChEZWNjYW4pLiBBZnRlciB0aGUgZGVhdGggb2YgaGVyIGh1c2JhbmQsICAgUHJhYmhhdmF0aSBydWxlZCB0aGUgdGVycml0b3J5IGFzIHJlZ2VudCB0byBoZXIgbWlub3Igc29ucyB3aXRoIHRoZSBoZWxwIG9mIGhlciBmYXRoZXIuIFRodXMsIENoYW5kcmFndXB0YSAgIOKFoSBpbmRpcmVjdGx5IGNvbnRyb2xsZWQgdGhlIFZha2F0YWthIGtpbmdkb20uICAgVGhlIEd1cHRhcyByZWFjaGVkIHRoZSB3ZXN0ZXJuIHNlYSBjb2FzdCB3aGljaCB3YXMgZmFtb3VzIGZvciB0cmFkZSBhbmQgY29tbWVyY2UuIFRoaXMgY29udHJpYnV0ZWQgICB0byB0aGUgcHJvc3Blcml0eSBvZiBNYWx3YSBhbmQgaXRzIG1haW4gY2l0eSBVamphaW4sIHdoaWNoIHdhcyBhbHNvIENoYW5kcmFndXB0YSDihaEncyBzZWNvbmQgY2FwaXRhbC4gSGUgICBhZG9wdGVkIHRoZSB0aXRsZSAnVmlrcmFtYWRpdHlhJyAocG93ZXJmdWwgYXMgdGhlIHN1bikgYW5kIFNpbWhhdmlrcmFtYS4gICBIZSBpc3N1ZWQgZ29sZCBjb2lucyAoRGluYXJhKSwgc2lsdmVyIGNvaW5zIGFuZCBjb3BwZXIgY29pbnMuIE9uIGhpcyBjb2lucywgaGUgaXMgbWVudGlvbmVkIGFzIENoYW5kcmEuICAgRHVyaW5nIGhpcyByZWlnbiwgYSBDaGluZXNlIHRyYXZlbGxlciwgRmEtSGllbiB2aXNpdGVkIEluZGlhIGFuZCB3cm90ZSBhIGRldGFpbGVkIGFjY291bnQgYWJvdXQgdGhlIGxpZmUgb2YgICBpdHMgcGVvcGxlLiAgIFNvdXJjZTogQW5jaWVudCAmIE1lZGlldmFsIEluZGlhIEJ5IFBvb25hbSBEYWxhbCBEYWhpeWEgY2hhcHRlciA4ICAgICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Chandragupta-I  ",
        "option2" : "Chandragupta-II  ",
        "option3" : "Kumaragupta-I  ",
        "option4" : "Skandagupta      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to administrative features  of feudatories during Gupta period, consider  the following statements:  1.  Feudatory chiefs presented their daughters  for marriage to the sovereign.  2.  The charters made for feudatory chiefs were  marked with the royal Garuda seal.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBtYWpvciBwYXJ0IG9mIHRoZSBHdXB0YSBlbXBpcmUgd2FzIGhlbGQgYnkgZmV1ZGF0b3J5IGNoaWVmcyB3aG8gaGFkIHRocmVlICAgb2JsaWdhdGlvbnMuIEZldWRhdG9yeSBjaGllZnMgbXVzdCBvZmZlciBob21hZ2UgdG8gdGhlIHNvdmVyZWlnbiBieSBwZXJzb25hbCBhdHRlbmRhbnRzIGF0IGhpcyBjb3VydCwgYW5kICAgcHJlc2VudGVkIHRvIHNvdmVyZWlnbiBkYXVnaHRlcnMgZm9yIG1hcnJpYWdlLiBJbiByZXR1cm4gZm9yIHRoZXNlIHRoZSBmZXVkYXRvcmllcyBvYnRhaW5lZCBjaGFydGVycyBmb3IgICBydWxpbmcgaW4gdGhlIGFyZWFzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgY2hhcnRlcnMgbWFkZSBmb3IgZmV1ZGF0b3J5IGNoaWVmcyB3ZXJlIG1hcmtlZCB3aXRoIHRoZSByb3lhbCBHYXJ1ZGEgc2VhbC4gICBUaGUgR3VwdGFzIGFsc28gZ3JhbnRlZCBmaXNjYWwgYW5kIGFkbWluaXN0cmF0aXZlIGNvbmNlc3Npb25zIHRvIHByaWVzdHMgYW5kIGFkbWluaXN0cmF0b3JzLiBUaGlzIHByYWN0aWNlICAgd2hpY2ggd2FzIHN0YXJ0ZWQgaW4gdGhlIERlY2NhbiBieSB0aGUgU2F0YXZhaGFuYXMsIGJlY2FtZSBhIHJlZ3VsYXIgYWZmYWlyIGluIHRoZSBHdXB0YSB0aW1lcywgcGFydGljdWxhcmx5ICAgaW4gTWFkaHlhIFByYWRlc2guICAgIFNvdXJjZTogQW5jaWVudCAmIE1lZGlldmFsIEluZGlhIEJ5IFBvb25hbSBEYWxhbCBEYWhpeWEgY2hhcHRlciA4ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to the great scholar  Varahamihira, which of the following  statements is/are correct?  1.  He was one of the Navaratna i.e., nine gems  of Chandragupta I of Gupta dynasty.  2.  His book Pancha Siddhantika is a  compilation of five treatises in Medicine.  Select the correct option using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IC0gVmFyYWhhbWloaXRhIGlzIHRoZSBvbmUgb2YgdGhlIE5hdmFyYXRuYXMgb2YgQ2hhbmRyYWd1cHRhIElJIG9mIEd1cHRhIER5bmFzdHkuICAgSGUgbGl2ZWQgZHVyaW5nIDZ0aCBDRSBpbiBVamphaW4gKE1hZGh5YSBQcmFkZXNoKS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgLSBQYW5jaGFzaWRkaGFudGFrYSwgaXMgdGhlIGZpdmUgdHJlYXRpc2VzIG9uIGFzdHJvbm9teSBhbmQgbm90IE1lZGljaW5lLiBJdCAgIHN1bW1hcmlzZXMgZml2ZSBlYXJsaWVyIGFzdHJvbm9taWNhbCB0cmVhdGlzZXMsIG5hbWVseSB0aGUgU3VyeWEgU2lkZGhhbnRhLCBSb21ha2EgU2lkZGhhbnRhLCBQYXVsaXNhICAgU2lkZGhhbnRhLCBWYXNpc2h0aGEgU2lkZGhhbnRhIGFuZCBQYWl0YW1haGEgU2lkZGhhbnRhcy4gICBLbm93bGVkZ2UgQmFzZTogTmF2YXJhdG5hcyBvZiBDaGFuZHJhZ3VwdGEgSUkgICBLYWxpZGFzYSAoUG9ldHJ5KSwgQW1hcnNpbmgsIERoYW5hdmFudHJpIChNZWRpY2luZSksIFZhcmFoYW1paGlyYSwgVmFyYXJ1Y2hpLCBHaGF0YWthcm5hLCBLc2hhcHJhbmFrLCAgIFZlbGFiaGF0dCwgU2hhbmt1ICAgU291cmNlOiBBbmNpZW50IEhpc3RvcnkgYnkgUiBTIFNoYXJtYSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 45,
      "question" : "With reference to the history of India,  consider the following statements:   1.  The Kamarupa was coterminous with the  Brahmaputra basin.   2.  Chinese traveler Hsuan Tsang made a visit  to the Kamarupa.   Which of the statement/s given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gS2FtYXJ1cGEgd2FzIGNvdGVybWlub3VzIHdpdGggdGhlIEJyYWhtYXB1dHJhIGJhc2luIHJ1bm5pbmcgZnJvbSBlYXN0IHRvIHdlc3QsICAgc2hvdCBpbnRvIHByb21pbmVuY2UgaW4gdGhlIHNldmVudGggY2VudHVyeS4gVGhlIEthbWFydXBhIGtpbmdzIGFkb3B0ZWQgdGhlIHRpdGxlIHZhcm1hbi4gVGhpcyB0aXRsZSwgICB3aGljaCBtZWFucyBhcm1vdXIgYW5kIHN5bWJvbGl6ZXMgYSB3YXJyaW9yLCB3YXMgZ2l2ZW4gdG8gdGhlIGtzaGF0cml5YXMgYnkgTWFudS4gVGhlIGtzaGF0cml5YXMgICBzdHJlbmd0aGVuZWQgdGhlaXIgcG9zaXRpb24gdGhyb3VnaCBsYW5kIGdyYW50cyB0byB0aGUgYnJhaG1hbmFzLiBUaHVzLCBpdCB3YXMgbm90IEJ1ZGRoaXNtIGJ1dCAgIEJyYWhtYW5pc20gdGhhdCB3YXMgZG9taW5hbnQgYW5kIHdhcyBwYXRyb25pemVkIGJ5IHRoZSBraW5ncy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaG91Z2ggQnJhaG1hbmlzbSBkb21pbmF0ZWQgdGhlIEthbWFydXBhIGJ1dCBCdWRkaGlzbSBhbHNvIGFjcXVpcmVkIGEgICBmb290aG9sZC4gSW4gdGhpcyBjb250ZXh0LCBDaGluZXNlIHRyYXZlbGxlciBIc3VhbiBUc2FuZyAoSGlldW4gVHNhbmcpIHZpc2l0ZWQgdGhpcyBzdGF0ZS4gICAgU291cmNlOiBJbmRpYSdzIEFuY2llbnQgUGFzdCBieSBSUyBTaGFybWEgLSBTcHJlYWQgb2YgQ2l2aWxpemF0aW9uIGluIEVhc3Rlcm4gSW5kaWEuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the Early History of  South India, consider the following statements:  1.  The practise of sati was prevalent in Tamil  society.  2.  Seyon was the primary diety of Sangam  period   3.  Trade was based on the Barter system  known as Pandamattumurai.  4.  The earliest phase of social evolution  reflected in Sangam works relates to the  early megalithic stage.  Which of the statement given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2F0aSB3YXMgYWxzbyBwcmV2YWxlbnQgaW4gVGFtaWwgc29jaWV0eSwgYW5kIGl0IHdhcyByZWZlcnJlZCBhcyB0aXBwYXlhZGFsLiBCdXQgaXQgICB3YXMgbm90IG9ibGlnYXRvcnkgYXMgdGhlcmUgYXJlIHJlZmVyZW5jZXMgdG8gd2lkb3dzIHByZXNlbnQgaW4gc29jaWV0eS4gVGhlaXIgcG9zaXRpb24gd2FzIG1pc2VyYWJsZS4gVGhleSAgIGNvdWxkIG5vdCBwYXJ0aWNpcGF0ZSBpbiBhbnkgZm9ybSBvZiBjZWxlYnJhdGlvbiBldGMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDotIFNleW9uIG9yIE11cnVnYW4gd2FzIHRoZSBwcmltYXJ5IGRlaXR5IG9mIHRoZSBTYW5nYW0gcGVyaW9kLiBJbiBmYWN0LCBoZSBpcyBzdGlsbCAgIHdvcnNoaXBwZWQgYXMgdGhlIHByaW1hcnkgZ29kIG9mIFRhbWlscyBldmVuIHRvZGF5LiBIZSB3YXMgaG9ub3VyZWQgd2l0aCBzaXggYWJvZGVzIGtub3duIGFzIEFydXBhZGFpICAgVmVlZHUuICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QgOiBUcmFkZSB3YXMgYmFzZWQgb24gdGhlIEJhcnRlciBzeXN0ZW0gKHByaW1pdGl2ZSBwYXR0ZXJuIG9mIGV4Y2hhbmdlIG9mICAgY29tbW9kaXRpZXMpIGtub3duIGFzIFBhbmRhbWF0dHVtdXJhaSAoZXhjaGFuZ2Ugb2YgZ29vZHMgYW5kIHNlcnZpY2VzKS4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0IFNhbmdhbSB0ZXh0cyBvZiB0aGUgc29jaWFsIGV2b2x1dGlvbiBvZiBUYW1pbCBwZW9wbGUgc3RhdGUgdGhhdCBUYW1pbCBwZW9wbGUgb2YgdGhhdCAgIHRpbWUgd2VyZSBwcmltYXJpbHkgcGFzdG9yYWwuIFRyYWNlcyBvZiBlYXJseSBtZWdhbGl0aGljIGxpZmUgYXBwZWFyIGluIFNhbmdhbSB0ZXh0cy4gVGhlIGVhcmxpZXN0ICAgbWVnYWxpdGhpYyBwZW9wbGUgc2VlbSB0byBiZSBwcmltYXJpbHkgcGFzdG9yYWxpc3RzLCBodW50ZXJzIGFuZCBmaXNoZXJtZW4gYWx0aG91Z2ggdGhleSBhbHNvIHByb2R1Y2VkICAgcmljZS4gICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wdWJsaWNhdGlvbi8zNDg2MTk4MjVfVGhlX01hcmtldF9zeXN0ZW1fb2ZfdGhlX1NhbmdhbV9QZXJpb2QtICBBX2hpc3RvcmljYWxfc3R1ZHkgICBodHRwOi8vd3RodGpzanMuY24vZ2FsbGVyeS8xMy13aGpqLWp1bmUlMjAtNTQ0Ny5wZGYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1,2, 3 and 4   "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following products were  exported by southern states during the Sangam  Age?  1. Ivory Products  2. Orpiment  3. Pepper  4. Pearls and precious stones  5. Copper  Select the correct answer from the codes given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgIFRoZSBTYW5nYW0gZWNvbm9teSB3YXMgc2ltcGxlIGFuZCBtb3N0bHkgc2VsZi1zdWZmaWNpZW50LiBFeHRlcm5hbCB0cmFkZSB3YXMgY2FycmllZCBvbiBiZXR3ZWVuIFNvdXRoICAgSW5kaWEgYW5kIEhlbGxlbmlzdGljIGtpbmdkb20gb2YgRWd5cHQgYW5kIEFyYWJpYSBhcyB3ZWxsIGFzIHRoZSBNYWxheSBBcmNoaXBlbGFnby4gVGhlIGF1dGhvciBvZiB0aGUgICBQZXJpcGx1cyBvZiB0aGUgRXJ5dGhyZWFuIFNlYSAoNzUgQS5ELikgZ2l2ZXMgdGhlIG1vc3QgdmFsdWFibGUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHRyYWRlIGJldHdlZW4gSW5kaWEgICBhbmQgdGhlIFJvbWFuIEVtcGlyZS4gVGhlIG1haW4gZXhwb3J0cyBmcm9tIEluZGlhIHdlcmU6IHBlcHBlciwgcGVhcmxzLCBpdm9yeSwgc2lsaywgc3Bpa2UtbmFyZCwgICBtYWxhYmF0aHJ1bSwgZGlhbW9uZHMsIHNhZmZyb24sIHByZWNpb3VzIHN0b25lIGFuZCB0b3J0b2lzZSBzaGVsbC4gU2lsaywgd2hpY2ggd2FzIHN1cHBsaWVkIGJ5IEluZGlhbiAgIG1lcmNoYW50cyB0byB0aGUgUm9tYW4gRW1waXJlLCB3YXMgY29uc2lkZXJlZCBzbyBpbXBvcnRhbnQgdGhhdCB0aGUgUm9tYW4gZW1wZXJvciBBdXJlbGlhbiBkZWNsYXJlZCAgIGl0IHRvIGJlIHdvcnRoIGl0cyB3ZWlnaHQgaW4gZ29sZC4gICAgSW5kaWEgaW1wb3J0ZWQgZnJvbSB0aGUgUm9tYW4gZW1waXJlIHN1Y2ggY29tbW9kaXRpZXMgYXMgdG9wYXosIHRpbiBjbG90aCwgbGluZW4sIGFudGltb255LCBjcnVkZSBnbGFzcywgICBjb3BwZXIsIHRpbiwgbGVhZCwgd2luZSwgb3JwaW1lbnQgYW5kIHdoZWF0LiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaGlzdG9yeWRpc2N1c3Npb24ubmV0L2hpc3Rvcnktb2YtaW5kaWEvc2FuZ2FtLXBlcmlvZC1saXRlcmF0dXJlLWFkbWluaXN0cmF0aW9uLSAgYW5kLWVjb25vbWljLWNvbmRpdGlvbi1kdXJpbmctc2FuZ2FtLXBlcmlvZC83MzkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 5 only  ",
        "option2" : "1,3 and 4 only  ",
        "option3" : "2, 4 and 5 only  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 48,
      "question" : "In context to Indo-China relations,  consider the following statements:  1.  Harsha had established diplomatic contacts  with the Chinese emperor.  2.  Sarvastivada Buddhism transmitted to India  from China.  Which of the following statements is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhLUNoaW5hIGN1bHR1cmFsIGV4Y2hhbmdlcyBkYXRlIGJhY2sgdG8gbWFueSBjZW50dXJpZXMgYW5kIHRoZXJlIGFyZSBzb21lIGV2aWRlbmNlIHRoYXQgY29uY2VwdHVhbCAgIGFuZCBsaW5ndWlzdGljIGV4Y2hhbmdlcyBleGlzdGVkIGluIDE1MDAtMTAwMCBCLkMuIGJldHdlZW4gdGhlIFNoYW5nLVpob3UgY2l2aWxpemF0aW9uIGFuZCB0aGUgYW5jaWVudCAgIFZlZGljIGNpdmlsaXphdGlvbi4gU2V2ZXJhbCBhbmNpZW50IEluZGlhbiBtb25rLXNjaG9sYXJzIHN1Y2ggYXMgS3VtYXJhaml2YSwgQm9kaGlkaGFybWEgYW5kICAgRGhhcm1ha3NoZW1hIGNvbnRyaWJ1dGVkIHRvIHRoZSBzcHJlYWQgb2YgQnVkZGhpc20gaW4gQ2hpbmEuIFNpbWlsYXJseSwgQ2hpbmVzZSBwaWxncmltcyBhbHNvIHVuZGVydG9vayAgIGpvdXJuZXlzIHRvIEluZGlhLCB0aGUgbW9zdCBmYW1vdXMgYW1vbmcgdGhlbSBiZWluZyBGYSBYaWFuIGFuZCBYdWFuIFphbmcuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEhhcnNoYSB3YXMgb24gZnJpZW5kbHkgdGVybXMgd2l0aCBuZWlnaGJvdXJpbmcgY291bnRyaWVzICAgd2hvIGhlIGFza2VkIHRvIGV4dGVuZCBmYWNpbGl0aWVzIG9mIHRyYXZlbCBhbmQgcmVzaWRlbmNlIHRvIFh1YW4gWmFuZy4gSGUgYWxzbyAgIGhhZCBkaXBsb21hdGljIGNvbnRhY3RzIHdpdGggdGhlIENoaW5lc2UgZW1wZXJvci4gICAgRnJvbSB0aGUgQ2hpbmVzZSBzb3VyY2VzIHdlIGxlYXJuIHRoYXQgdGhlIFQnYW5nIGVtcGVyb3IgVGFpIFRzdW5nIHNlbnQgYW4gZW1iYXNzeSB0byB0aGUgY291cnQgb2YgICBIYXJzaGEgaW4gNjQzIGFuZCBhZ2FpbiBpbiA2NDcgQ0UuIE9uIHRoZSBsYXN0IG9jY2FzaW9uIHRoZXkgZm91bmQgSGFyc2hhIHdhcyBubyBsb25nZXIgYWxpdmUgYW5kIGhpcyAgIHRocm9uZSBoYWQgYmVlbiB1c3VycGVkIGJ5IHNvbWVvbmUuIFdpdGggdGhlIGhlbHAgb2YgZm9yY2VzIGZyb20gTmVwYWwgYW5kIEFzc2FtIHRoZSB1c3VycGVyIHdhcyAgIGRlZmVhdGVkIGFuZCB0YWtlbiBhcyBhIHByaXNvbmVyIHRvIENoaW5hLiBUaGlzIGV2ZW50IHNob3dzIHRoZSBncm93aW5nIGludGVyZXN0IG9mIHRoZSAgIENoaW5lc2UgaW4gdGhlIHBvbGl0aWNzIG9mIE5vcnRoIEluZGlhLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFNhcnZhc3RpdmFkYSBCdWRkaGlzbSB3YXMgdHJhbnNtaXR0ZWQgZnJvbSBJbmRpYSB0byBDaGluYS4gVGhlIFNhcnZhc3RpdmFkYSAgIHdhcyBvbmUgb2YgdGhlIGVhcmx5IEJ1ZGRoaXN0IHNjaG9vbHMgZXN0YWJsaXNoZWQgYXJvdW5kIHRoZSByZWlnbiBvZiBBc29rYS4gSXQgd2FzIHBhcnRpY3VsYXJseSBrbm93biBhcyAgIGFuIEFiaGlkaGFybWEgdHJhZGl0aW9uLCB3aXRoIGEgdW5pcXVlIHNldCBvZiBzZXZlbiBBYmhpZGhhcm1hIHdvcmtzLiAgIFNvdXJjZTogaHR0cHM6Ly9hc2lhc29jaWV0eS5vcmcvYnVkZGhpc20tY2hpbmEgICBodHRwczovL21lYS5nb3YuaW4vUG9ydGFsL0ZvcmVpZ25SZWxhdGlvbi9DaGluYV9PY3RvYmVyXzIwMTcucGRmICAgSUdOT1UgQkhJQyAxMzItIEhpc3Rvcnkgb2YgaW5kaWEgZnJvbSAzMDAgdG8gMTIwNiAgIGh0dHBzOi8vc28wMy50Y2ktdGhhaWpvLm9yZy9pbmRleC5waHAvaWJzYy9hcnRpY2xlL2Rvd25sb2FkLzIwODk0OC8xNDQ4MzgvICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to the history of India,  consider the following statements:   1.   Both the Pallavas and the Chalukyas  performed Vedic sacrifices.   2.  Pallavas and the Chalukyas fought over the  doab lying between the River Krishna and  Tungabhadra.  3.  The Chalukya king Vikramaditya II occupied  the Pallavan capital at Vatapi and assumed  the title of Vatapikonda.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgVGhlIHByaW5jaXBhbCBpbnRlcmVzdCBpbiB0aGUgcG9saXRpY2FsIGhpc3Rvcnkgb2YgcGVuaW5zdWxhciBJbmRpYSBmcm9tIHRoZSBzaXh0aCB0byB0aGUgZWlnaHRoIGNlbnR1cnkgY2VudHJlcyAgIGFyb3VuZCB0aGUgbG9uZyBzdHJ1Z2dsZSBmb3Igc3VwcmVtYWN5IGJldHdlZW4gdGhlIFBhbGxhdmFzIG9mIEthbmNoaSBhbmQgdGhlIENoYWx1a3lhcyBvZiBCYWRhbWkuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEJvdGggdGhlIFBhbGxhdmFzIGFuZCB0aGUgQ2hhbHVreWFzIGNoYW1waW9uZWQgQnJhaG1hbmlzbSwgcGVyZm9ybWVkIFZlZGljICAgc2FjcmlmaWNlcywgYW5kIG1hZGUgZ3JhbnRzIHRvIHRoZSBicmFobWFuYXMsIHRoZSB0d28gcXVhcnJlbGVkIHdpdGggZWFjaCBvdGhlciBvdmVyIHBsdW5kZXIsIHByZXN0aWdlLCAgIGFuZCB0ZXJyaXRvcmlhbCByZXNvdXJjZXMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEJvdGggUGFsbGF2YXMgYW5kIHRoZSBDaGFsdWt5YXMgdHJpZWQgdG8gZXN0YWJsaXNoIHN1cHJlbWFjeSBvdmVyIHRoZSBsYW5kIGx5aW5nICAgYmV0d2VlbiB0aGUgS3Jpc2huYSBhbmQgdGhlIFR1bmdhYmhhZHJhLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBDaGFsdWt5YSBraW5nIFZpa3JhbWFkaXR5YSBJSSAoQUQgNzMzLTQ1KSBpcyBzYWlkIHRvIGhhdmUgb3ZlcnJ1biBLYW5jaGkgICB0aHJlZSB0aW1lcy4gSW4gQUQgNzQwIGhlIGNvbXBsZXRlbHkgcm91dGVkIHRoZSBQYWxsYXZhcy4gSGlzIHZpY3RvcnkgZW5kZWQgdGhlIFBhbGxhdmEgc3VwcmVtYWN5IGluIHRoZSAgIGZhciBzb3V0aCBhbHRob3VnaCB0aGUgcnVsaW5nIGhvdXNlIGNvbnRpbnVlZCBmb3Igb3ZlciBhIGNlbnR1cnkgdGhlcmVhZnRlci4gICAgVGhlIFBhbGxhdmEga2luZyBOYXJhc2ltaGF2YXJtYW4gKEFEIDYzMC02OCkgb2NjdXBpZWQgdGhlIENoYWx1a3lhIGNhcGl0YWwgYXQgVmF0YXBpIGluIGFib3V0IEFEIDY0MiwgICB3aGVuIFB1bGFrZXNpbiBJSSB3YXMgcHJvYmFibHkga2lsbGVkIGluIGEgYmF0dGxlIGFnYWluc3QgdGhlIFBhbGxhdmFzLiBOYXJhc2ltaGF2YXJtYW4gYXNzdW1lZCB0aGUgdGl0bGUgICBvZiBWYXRhcGlrb25kYSBvciB0aGUgY29ucXVlcm9yIG9mIFZhdGFwaS4gICAgS25vd2xlZGdlIEJhc2U6IFRoZSBmaXJzdCBpbXBvcnRhbnQgZXZlbnQgaW4gdGhpcyBsb25nIGNvbmZsaWN0IHRvb2sgcGxhY2UgZHVyaW5nIHRoZSByZWlnbiBvZiBQdWxha2VzaGluIElJICAgKEFEIDYwOS00MiksIHRoZSBtb3N0IGZhbW91cyBDaGFsdWt5YSBraW5nLiBIZSBpcyBrbm93biB0byB1cyBmcm9tIHRoZSBldWxvZ3kgd3JpdHRlbiBvbiBoaW0gYnkgdGhlICAgY291cnQgcG9ldCBSYXZpa2lydGkgaW4gdGhlIEFpaG9sZSBpbnNjcmlwdGlvbi4gSGUgc3VianVnYXRlZCB0aGUgS2FkYW1iYSBjYXBpdGFsIGF0IEJhbmF2YXNpIGFuZCBjb21wZWxsZWQgICB0aGUgR2FuZ2FzIG9mIE15c29yZSB0byBhY2tub3dsZWRnZSBoaXMgc3V6ZXJhaW50eS4gSGUgYWxzbyBkZWZlYXRlZCBIYXJzaGEncyBhcm15IG9uIHRoZSBOYXJtYWRhIGFuZCAgIGNoZWNrZWQgaGlzIGFkdmFuY2UgdG93YXJkcyB0aGUgRGVjY2FuLiBJbiBoaXMgY29uZmxpY3Qgd2l0aCB0aGUgUGFsbGF2YXMsIGhlIGFsbW9zdCByZWFjaGVkIHRoZSBQYWxsYXZhICAgY2FwaXRhbCwgYnV0IHRoZSBQYWxsYXZhcyBwdXJjaGFzZWQgcGVhY2UgYnkgY2VkaW5nIHRoZWlyIG5vcnRoZXJuIHByb3ZpbmNlcyB0byBQdWxha2VzaGluIElJLiAgICBBcm91bmQgQUQgNjEwIFB1bGFrZXNoaW4gSUkgYWxzbyBjb25xdWVyZWQgdGhlIGVudGlyZSBhcmVhIGJldHdlZW4gdGhlIEtyaXNobmEgYW5kIHRoZSBHb2RhdmFyaSwgd2hpY2ggICBjYW1lIHRvIGJlIGtub3duIGFzIHRoZSBwcm92aW5jZSBvZiBWZW5naS4gSG93ZXZlciwgUHVsYWtlc2hpbidzIHNlY29uZCBpbnZhc2lvbiBvZiBQYWxsYXZhIHRlcnJpdG9yeSAgIGVuZGVkIGluIGZhaWx1cmUuICAgIFNvdXJjZTogSW5kaWEncyBBbmNpZW50IFBhc3QgYnkgUlMgU2hhcm1hIC0gQnJhaG1hbml6YXRpb24sIFJ1cmFsIEV4cGFuc2lvbiwgYW5kIFBlYXNhbnQgUHJvdGVzdCBpbiB0aGUgICBQZW5pbnN1bGEuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:   1.  Harshavardhana did not follow the practice  of paying officers with grants of land.   2.  Harshavardhana's administration was more  decentralized in nature than the Gupta  period.   3.  The law and order were strictly adhered to  in the Harshavardhana's empire.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgQ2hpbmVzZSBwaWxncmltIEhzdWFuIFRzYW5nIGluZm9ybXMgdXMgdGhhdCBIYXJzaGEncyByZXZlbnVlcyB3ZXJlIGRpdmlkZWQgICBpbnRvIGZvdXIgcGFydHMuIE9uZSBwYXJ0IHdhcyBlYXJtYXJrZWQgZm9yIHRoZSBleHBlbmRpdHVyZSBvZiB0aGUga2luZywgYSBzZWNvbmQgZm9yIHNjaG9sYXJzLCBhIHRoaXJkIGZvciAgIHRoZSBlbmRvd21lbnQgb2Ygb2ZmaWNpYWxzIGFuZCBwdWJsaWMgc2VydmFudHMsIGFuZCBhIGZvdXJ0aCBmb3IgcmVsaWdpb3VzIHB1cnBvc2VzLiBIZSBhbHNvIHRlbGxzIHVzIHRoYXQgICBtaW5pc3RlcnMgYW5kIGhpZ2ggb2ZmaWNlcnMgb2YgdGhlIHN0YXRlIHdlcmUgZW5kb3dlZCB3aXRoIGxhbmQuIFRoZSBmZXVkYWwgcHJhY3RpY2Ugb2YgcmV3YXJkaW5nIGFuZCAgIHBheWluZyBvZmZpY2VycyB3aXRoIGdyYW50cyBvZiBsYW5kIHNlZW1zIHRvIGhhdmUgYmVndW4gdW5kZXIgSGFyc2hhLiBUaGVzZSBncmFudHMgYWxsb3dlZCB0aGUgc2FtZSAgIGNvbmNlc3Npb25zIHRvIHByaWVzdHMgYXMgd2VyZSBhbGxvd2VkIGJ5IHRoZSBlYXJsaWVyIGdyYW50cy4gVGhpcyBleHBsYWlucyB3aHkgd2UgZG8gbm90IGhhdmUgdmVyeSBtYW55ICAgY29pbnMgaXNzdWVkIGJ5IHRoaXMga2luZy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSGFyc2hhdmFyZGhhbmEgZ292ZXJuZWQgaGlzIGVtcGlyZSBvbiB0aGUgc2FtZSBsaW5lcyBhcyBkaWQgdGhlIEd1cHRhcywgYnV0IGhpcyAgIGFkbWluaXN0cmF0aW9uIGhhZCBiZWNvbWUgZmV1ZGFsIGFuZCBkZWNlbnRyYWxpemVkLiBUaG91Z2ggSGFyc2hhIGhhZCBhIGxhcmdlciBhcm15IGJ1dCB0aGlzIHdhcyBkdWUgICB0byB0aGUgc3VwcG9ydCBvZiBhbGwgaGlzIGZldWRhdG9yaWVzIGluIHRoZSB0aW1lIG9mIHdhci4gRXZpZGVudGx5IGV2ZXJ5IGZldWRhdG9yeSBjb250cmlidXRlZCBoaXMgcXVvdGEgb2YgICBmb290IHNvbGRpZXJzIGFuZCBob3JzZXMsIGFuZCB0aHVzIGVub3Jtb3VzbHkgYWRkZWQgdG8gdGhlIGltcGVyaWFsIGFybXkuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBJbiBIYXJzaGEncyBlbXBpcmUsIGxhdyBhbmQgb3JkZXIgd2FzIG5vdCB3ZWxsIG1haW50YWluZWQuIEhzdWFuIFRzYW5nLCBhYm91dCAgIHdob3NlIHdlbGZhcmUsIHNwZWNpYWwgY2FyZSBtYXkgaGF2ZSBiZWVuIHRha2VuIGJ5IHRoZSBnb3Zlcm5tZW50LCB3YXMgcm9iYmVkIG9mIGhpcyBiZWxvbmdpbmdzLCAgIGFsdGhvdWdoIGhlIHJlcG9ydHMgdGhhdCBhY2NvcmRpbmcgdG8gdGhlIGxhd3Mgb2YgdGhlIGxhbmQsIHNldmVyZSBwdW5pc2htZW50cyB3ZXJlIGluZmxpY3RlZCBmb3IgY3JpbWUuICAgIFNvdXJjZTogSW5kaWEncyBBbmNpZW50IFBhc3QgYnkgUlMgU2hhcm1hIC0gSGFyc2hhIGFuZCBIaXMgVGltZXMuICAgICBvZiAyMiAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 only    \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
