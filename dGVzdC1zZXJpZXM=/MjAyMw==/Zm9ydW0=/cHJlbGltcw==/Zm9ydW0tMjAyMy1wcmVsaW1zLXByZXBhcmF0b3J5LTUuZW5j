{
  "testId" : "forum-2023-prelims-preparatory-5",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-5.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to Gram Sabha, consider  the following statements:   1.  It is a village assembly consisting of all the  registered voters of the village within the  area of a panchayat.  2.  The powers and functions of Gram Sabha  are fixed by state legislature by law.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBHcmFtIFNhYmhhIGlzIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBQYW5jaGF5YXRpIHJhaiBzeXN0ZW0uIEl0IGlzIGEgYm9keSBjb25zaXN0aW5nICAgb2YgcGVyc29ucyByZWdpc3RlcmVkIGluIHRoZSBlbGVjdG9yYWwgcm9sbHMgb2YgYSB2aWxsYWdlIGNvbXByaXNlZCB3aXRoaW4gdGhlIGFyZWEgb2YgUGFuY2hheWF0IGF0IHRoZSAgIHZpbGxhZ2UgbGV2ZWwuIFRodXMsIGl0IGlzIGEgdmlsbGFnZSBhc3NlbWJseSBjb25zaXN0aW5nIG9mIGFsbCB0aGUgcmVnaXN0ZXJlZCB2b3RlcnMgaW4gdGhlIGFyZWEgb2YgYSAgIHBhbmNoYXlhdC4gSXQgbWF5IGV4ZXJjaXNlIHN1Y2ggcG93ZXJzIGFuZCBwZXJmb3JtIHN1Y2ggZnVuY3Rpb25zIGF0IHRoZSB2aWxsYWdlIGxldmVsIGFzIHRoZSBsZWdpc2xhdHVyZSAgIG9mIGEgc3RhdGUgZGV0ZXJtaW5lcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gR3JhbSBTYWJoYSBzZXJ2ZXMgYXMgZm91bmRhdGlvbiBvZiB0aGUgUGFuY2hheWF0aSBSYWosIHlldCBpdCBpcyBub3QgYW1vbmcgdGhlICAgdGhyZWUgdGllcnMgb2YgdGhlIHNhbWUuIFRoZSBwb3dlcnMgYW5kIGZ1bmN0aW9ucyBvZiBHcmFtIFNhYmhhIGFyZSBmaXhlZCBieSBzdGF0ZSBsZWdpc2xhdHVyZSBieSBsYXcuICAgIFNvdXJjZTogaHR0cHM6Ly92aWthc3BlZGlhLmluL3NvY2lhbC13ZWxmYXJlL2NvbW11bml0eS1wb3dlci9yb2xlLW9mLWdyYW0tc2FiaGEvZHV0aWVzLXBvd2Vycy0gIGFuZC1yZXNwb25zaWJpbGl0aWVzLW9mLWdyYW0tc2FiaGEjc2VjdGlvbjMgICAgIEluZGlhbiBwb2xpdHkgYnkgTS4gTGF4bWlrYW50aCBjaGFwdGVyIDM4IFBhbmNoYXlhdGkgUmFqICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 2,
      "question" : "Which of the following is not a voluntary  provision for the states under the 73rd  Constitutional Amendment?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgYSBpcyBpbmNvcnJlY3QuIEluZGlyZWN0IGVsZWN0aW9ucyB0byB0aGUgcG9zdCBvZiBjaGFpcnBlcnNvbiBvZiBwYW5jaGF5YXRzIGF0IHRoZSBpbnRlcm1lZGlhdGUgICBhbmQgZGlzdHJpY3QgbGV2ZWxzIGlzIGEgbWFuZGF0b3J5IHByb3Zpc2lvbiB1bmRlciB0aGUgNzNyZCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQuICAgIFZvbHVudGFyeSBQcm92aXNpb25zIGFyZSBhcyBmb2xsb3dzLSAgICAxKSBFbmRvd2luZyB0aGUgR3JhbSBTYWJoYSB3aXRoIHBvd2VycyBhbmQgZnVuY3Rpb25zIGF0IHRoZSB2aWxsYWdlIGxldmVsLiBIZW5jZSwgU3RhdGVtZW50IGIgaXMgICBjb3JyZWN0LiAgICAyKSBEZXRlcm1pbmluZyB0aGUgbWFubmVyIG9mIGVsZWN0aW9uIG9mIHRoZSBjaGFpcnBlcnNvbiBvZiB0aGUgdmlsbGFnZSBwYW5jaGF5YXQuICAgMykgR2l2aW5nIHJlcHJlc2VudGF0aW9uIHRvIHRoZSBjaGFpcnBlcnNvbnMgb2YgdGhlIHZpbGxhZ2UgcGFuY2hheWF0cyBpbiB0aGUgaW50ZXJtZWRpYXRlIHBhbmNoYXlhdHMgb3IgICBpbiB0aGUgY2FzZSBvZiBhIHN0YXRlIG5vdCBoYXZpbmcgaW50ZXJtZWRpYXRlIHBhbmNoYXlhdHMsIGluIHRoZSBkaXN0cmljdCBwYW5jaGF5YXRzLiAgIDQpIEdpdmluZyByZXByZXNlbnRhdGlvbiB0byB0aGUgY2hhaXJwZXJzb25zIG9mIHRoZSBpbnRlcm1lZGlhdGUgcGFuY2hheWF0cyBpbiB0aGUgZGlzdHJpY3QgcGFuY2hheWF0cy4gICBIZW5jZSwgU3RhdGVtZW50IGQgaXMgY29ycmVjdC4gICA1KSBHaXZpbmcgcmVwcmVzZW50YXRpb24gdG8gbWVtYmVycyBvZiB0aGUgUGFybGlhbWVudCAoYm90aCB0aGUgSG91c2VzKSBhbmQgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlIChib3RoICAgdGhlIEhvdXNlcykgaW4gdGhlIHBhbmNoYXlhdHMgYXQgZGlmZmVyZW50IGxldmVscyBmYWxsaW5nIHdpdGhpbiB0aGVpciBjb25zdGl0dWVuY2llcy4gSGVuY2UsIFN0YXRlbWVudCAgIGMgaXMgY29ycmVjdC4gICAgNikgUHJvdmlkaW5nIHJlc2VydmF0aW9uIG9mIHNlYXRzIChib3RoIG1lbWJlcnMgYW5kIGNoYWlycGVyc29ucykgZm9yIGJhY2t3YXJkIGNsYXNzZXMgaW4gcGFuY2hheWF0cyAgIGF0IGFueSBsZXZlbC4gICAgNykgR3JhbnRpbmcgcG93ZXJzIGFuZCBhdXRob3JpdHkgdG8gdGhlIHBhbmNoYXlhdHMgdG8gZW5hYmxlIHRoZW0gdG8gZnVuY3Rpb24gYXMgaW5zdGl0dXRpb25zIG9mIHNlbGYtICBnb3Zlcm5tZW50IChpbiBicmllZiwgbWFraW5nIHRoZW0gYXV0b25vbW91cyBib2RpZXMpLiAgICA4KSBEZXZvbHV0aW9uIG9mIHBvd2VycyBhbmQgcmVzcG9uc2liaWxpdGllcyB1cG9uIHBhbmNoYXlhdHMgdG8gcHJlcGFyZSBwbGFucyBmb3IgZWNvbm9taWMgICBkZXZlbG9wbWVudCBhbmQgc29jaWFsIGp1c3RpY2U7IGFuZCB0byBwZXJmb3JtIHNvbWUgb3IgYWxsIG9mIHRoZSAyOSBmdW5jdGlvbnMgbGlzdGVkIGluIHRoZSBFbGV2ZW50aCAgIFNjaGVkdWxlIG9mIHRoZSBDb25zdGl0dXRpb24uICAgIDkpIEdyYW50aW5nIGZpbmFuY2lhbCBwb3dlcnMgdG8gdGhlIHBhbmNoYXlhdHMsIHRoYXQgaXMsIGF1dGhvcml6aW5nIHRoZW0gdG8gbGV2eSwgY29sbGVjdCBhbmQgYXBwcm9wcmlhdGUgICB0YXhlcywgZHV0aWVzLCB0b2xscyBhbmQgZmVlcy4gICAgMTApIEFzc2lnbmluZyB0byBhIHBhbmNoYXlhdCB0aGUgdGF4ZXMsIGR1dGllcywgdG9sbHMgYW5kIGZlZXMgbGV2aWVkIGFuZCBjb2xsZWN0ZWQgYnkgdGhlIHN0YXRlICAgZ292ZXJubWVudC4gICAgMTEpIE1ha2luZyB0aGUgZ3JhbnRzLWluLWFpZCB0byB0aGUgcGFuY2hheWF0cyBmcm9tIHRoZSBjb25zb2xpZGF0ZWQgZnVuZCBvZiB0aGUgc3RhdGUuICAgIDEyKSBQcm92aWRpbmcgZm9yIGNvbnN0aXR1dGlvbiBvZiBmdW5kcyBmb3IgY3JlZGl0aW5nIGFsbCBtb25leXMgb2YgdGhlIHBhbmNoYXlhdHMgICAgIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTS4gTGF4bWlrYW50aCBjaGFwdGVyIDM4IFBhbmNoYXlhdGkgUmFqICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Indirect elections to the post of chairperson   of panchayats at the intermediate and   district levels.   ",
        "option2" : " Endowing the Gram Sabha with powers and   functions at the village level.   ",
        "option3" : " Giving representation to members of the   Parliament and the state legislature in the   Panchayats.   ",
        "option4" : " Giving representation to the chairpersons of   the intermediate panchayats in the district   panchayats.    "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to panchayats in India,  consider the following statements:   1.  A state having a population below 20 lakhs  may not constitute panchayats at the  intermediate level.   2.  The provision relating to the reservation of  seats in panchayats for the scheduled castes  is not applicable to some states.  3.  The chairperson of village panchayats must  be elected directly in all states.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIHN0YXRlIGhhdmluZyBhIHBvcHVsYXRpb24gYmVsb3cgMjAgbGFraHMgbWF5IG5vdCBjb25zdGl0dXRlIHBhbmNoYXlhdHMgYXQgdGhlICAgaW50ZXJtZWRpYXRlIGxldmVsLiBUaGUgUGFuY2hheWF0aSBSYWogYWN0IHByb3ZpZGVzIGZvciBhIHRocmVlLXRpZXIgc3lzdGVtIG9mIHBhbmNoYXlhdGkgcmFqIGluIGV2ZXJ5ICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIHN0YXRlLCB0aGF0IGlzLCBwYW5jaGF5YXRzIGF0IHRoZSB2aWxsYWdlLCBpbnRlcm1lZGlhdGUsIGFuZCBkaXN0cmljdCBsZXZlbHMuIEhvd2V2ZXIsIGEgc3RhdGUgaGF2aW5nIGEgICBwb3B1bGF0aW9uIG5vdCBleGNlZWRpbmcgMjAgbGFraHMgbWF5IG5vdCBjb25zdGl0dXRlIHBhbmNoYXlhdHMgYXQgdGhlIGludGVybWVkaWF0ZSBsZXZlbC4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIHByb3Zpc2lvbiByZWxhdGluZyB0byB0aGUgcmVzZXJ2YXRpb24gb2Ygc2VhdHMgaW4gcGFuY2hheWF0cyAoYm90aCBtZW1iZXJzICAgYW5kIGNoYWlycGVyc29ucykgZm9yIHRoZSBzY2hlZHVsZWQgY2FzdGVzIGlzIG5vdCBhcHBsaWNhYmxlIHRvIHRoZSBzdGF0ZSBvZiBBcnVuYWNoYWwgUHJhZGVzaC4gVGhpcyBpcyAgIGJlY2F1c2UgdGhlIHN0YXRlIGlzIGluaGFiaXRlZCBmdWxseSBieSBpbmRpZ2Vub3VzIHRyaWJhbCBwZW9wbGUgYW5kIHRoZXJlIGFyZSBubyBzY2hlZHVsZWQgY2FzdGVzLiBUaGlzICAgcHJvdmlzaW9uIHdhcyBhZGRlZCBsYXRlciBieSB0aGUgODNyZCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0IG9mIDIwMDAuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIGNoYWlycGVyc29uIG9mIGEgcGFuY2hheWF0IGF0IHRoZSB2aWxsYWdlIGxldmVsIHNoYWxsIGJlIGVsZWN0ZWQgaW4gc3VjaCAgIG1hbm5lciBhcyB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgZGV0ZXJtaW5lcyAoZGlyZWN0IG9yIGluZGlyZWN0KS4gICAgIFNvdXJjZTogSW5kaWFuIHBvbGl0eSBieSBNLiBMYXhtaWthbnRoIGNoYXB0ZXIgMzggUGFuY2hheWF0aSBSYWogICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3       "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to disqualification of the  members of panchayat, consider the following  statements:   1.  Any peson below 25 years of age is from  being a member of panchayat.    2.  All questions of disqualifications are decided  only by High Court of the given state.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFVuZGVyIHRoZSBQYW5jaGF5YXRpIHJhaiBhY3QsIG5vIHBlcnNvbiBzaGFsbCBiZSBkaXNxdWFsaWZpZWQgb24gdGhlIGdyb3VuZCAgIHRoYXQgaGUgaXMgbGVzcyB0aGFuIDI1IHllYXJzIG9mIGFnZSBpZiBoZSBoYXMgYXR0YWluZWQgdGhlIGFnZSBvZiAyMSB5ZWFycy4gSW4gZmFjdCwgYSBwZXJzb24gc2hhbGwgYmUgICBkaXNxdWFsaWZpZWQgZm9yIGJlaW5nIGNob3NlbiBhcyBvciBmb3IgYmVpbmcgYSBtZW1iZXIgb2YgcGFuY2hheWF0IGlmIGhlIGlzIHNvIGRpc3F1YWxpZmllZCB1bmRlciBhbnkgbGF3ICAgbWFkZSBieSB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgb3IgdW5kZXIgYW55IGxhdyBmb3IgdGhlIHRpbWUgYmVpbmcgaW4gZm9yY2UgZm9yIHRoZSBwdXJwb3NlIG9mIGVsZWN0aW9ucyB0byAgIHRoZSBsZWdpc2xhdHVyZSBvZiB0aGUgc3RhdGUgY29uY2VybmVkLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFVuZGVyIHRoZSBQYW5jaGF5YXRpIHJhaiBhY3QsIGFsbCBxdWVzdGlvbnMgb2YgZGlzcXVhbGlmaWNhdGlvbnMgc2hhbGwgYmUgcmVmZXJyZWQgICB0byBzdWNoIGF1dGhvcml0eSBhcyB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgZGV0ZXJtaW5lcy4gICAgU291cmNlOiBJbmRpYW4gcG9saXR5IGJ5IE0uIExheG1pa2FudGggY2hhcHRlciAzOCBQYW5jaGF5YXRpIFJhaiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 5,
      "question" : "With reference to State election  commission, consider the following  statements:   1.  A state election commissioner is appointed  by the President.   2.  A state election commissioner shall hold  office during the pleasure of the President.  3.  According to the constitution, government  employees can be given 'additional charge'  of the State Election Commission.  Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gIFN0YXRlIGVsZWN0aW9uIGNvbW1pc3Npb25lciBpcyBhcHBvaW50ZWQgYnkgdGhlIGdvdmVybm9yIG9mIHRoZSBzdGF0ZS4gVGhlICAgc3VwZXJpbnRlbmRlbmNlLCBkaXJlY3Rpb24gYW5kIGNvbnRyb2wgb2YgdGhlIHByZXBhcmF0aW9uIG9mIGVsZWN0b3JhbCByb2xscyBhbmQgdGhlIGNvbmR1Y3Qgb2YgYWxsICAgZWxlY3Rpb25zIHRvIHRoZSBwYW5jaGF5YXRzIHNoYWxsIGJlIHZlc3RlZCBpbiB0aGUgc3RhdGUgZWxlY3Rpb24gY29tbWlzc2lvbi4gICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gIFN0YXRlIGVsZWN0aW9uIGNvbW1pc3Npb25lciBzaGFsbCBub3QgYmUgcmVtb3ZlZCBmcm9tIHRoZSBvZmZpY2UgZXhjZXB0IGluIHRoZSAgIG1hbm5lciBhbmQgb24gdGhlIGdyb3VuZHMgcHJlc2NyaWJlZCBmb3IgdGhlIHJlbW92YWwgb2YgYSBqdWRnZSBvZiB0aGUgc3RhdGUgaGlnaCBjb3VydC4gSGlzIGNvbmRpdGlvbnMgICBvZiBzZXJ2aWNlIHNoYWxsIG5vdCBiZSB2YXJpZWQgdG8gaGlzIGRpc2FkdmFudGFnZSBhZnRlciBoaXMgYXBwb2ludG1lbnQuICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuICBSZWNlbnRseSB0aGUgU3VwcmVtZSBDb3VydCBydWxlZCB0aGF0IGluZGVwZW5kZW50IHBlcnNvbnMgYW5kIG5vdCAgIGdvdmVybm1lbnQgZW1wbG95ZWVzIHNob3VsZCBiZSBhcHBvaW50ZWQgRWxlY3Rpb24gQ29tbWlzc2lvbmVycy4gICBHaXZpbmcgZ292ZXJubWVudCBlbXBsb3llZXMgYWRkaXRpb25hbCBjaGFyZ2UgYXMgRWxlY3Rpb24gQ29tbWlzc2lvbmVycyBpcyBhIG1vY2tlcnkgb2YgdGhlICAgQ29uc3RpdHV0aW9uLiAgIElmIHRoZXkgaG9sZCBhbnkgc3VjaCBvZmZpY2UgKHVuZGVyIHRoZSBzdGF0ZSBnb3Zlcm5tZW50KSwgdGhlbiB0aGV5IGhhdmUgdG8gcmVzaWduIGJlZm9yZSB0YWtpbmcgY2hhcmdlICAgb2YgdGhlIG9mZmljZSBvZiB0aGUgZWxlY3Rpb24gY29tbWlzc2lvbmVyLiBUaGUgY291cnQgb3JkZXJlZCBhbGwgc3RhdGUgZ292ZXJubWVudHMgdG8gYXBwb2ludCB3aG9sZS0gIHRpbWUgZWxlY3Rpb24gY29tbWlzc2lvbmVycyB3aG8gd2lsbCBhY3QgaW5kZXBlbmRlbnRseSBhbmQgZmFpcmx5LiAgIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTS4gTGF4bWlrYW50aCBjaGFwdGVyIDM4IFBhbmNoYXlhdGkgUmFqICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements:   1.  The state legislature can assign taxes,  duties, tolls and fees levied and collected by  the state government to a Panchayat.   2.  The state legislature can endow the  Panchayats with authority to enable them to  function as institutions of self-government.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBtYXkgYXV0aG9yaXNlIGEgcGFuY2hheWF0IHRvIGxldnksIGNvbGxlY3QgYW5kIGFwcHJvcHJpYXRlICAgdGF4ZXMsIGR1dGllcywgdG9sbHMgYW5kIGZlZXMuIEl0IGNhbiBhbHNvIGFzc2lnbiB0byBhIFBhbmNoYXlhdCwgdGF4ZXMsIGR1dGllcywgdG9sbHMgYW5kIGZlZXMgbGV2aWVkIGFuZCAgIGNvbGxlY3RlZCBieSB0aGUgc3RhdGUgZ292ZXJubWVudC4gICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBtYXkgZW5kb3cgdGhlIFBhbmNoYXlhdHMgd2l0aCBzdWNoIHBvd2VycyBhbmQgYXV0aG9yaXR5ICAgYXMgbWF5IGJlIG5lY2Vzc2FyeSB0byBlbmFibGUgdGhlbSB0byBmdW5jdGlvbiBhcyBpbnN0aXR1dGlvbnMgb2Ygc2VsZi1nb3Zlcm5tZW50LiBTdWNoIGEgc2NoZW1lIG1heSAgIGNvbnRhaW4gcHJvdmlzaW9ucyBmb3IgdGhlIGRldm9sdXRpb24gb2YgcG93ZXJzIGFuZCByZXNwb25zaWJpbGl0aWVzIHVwb24gUGFuY2hheWF0cyBhdCB0aGUgYXBwcm9wcmlhdGUgICBsZXZlbCB3aXRoIHJlc3BlY3QgdG8gdGhlIHByZXBhcmF0aW9uIG9mIHBsYW5zIGZvciBlY29ub21pYyBkZXZlbG9wbWVudCBhbmQgc29jaWFsIGp1c3RpY2UuICAgIFNvdXJjZTogSW5kaWFuIHBvbGl0eSBieSBNLiBMYXhtaWthbnRoIGNoYXB0ZXIgMzggUGFuY2hheWF0aSBSYWogICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2         "
      }
    },
    {
      "index" : 7,
      "question" : "Panchayats in India receive funds in which  of the following ways?   1. State Government can devolve funds based  on recommendations of the State Finance  Commission.  2. State Government can provide loans to  Panchayats.  3. Grants from Union Government based on  recommendations of the Central Finance  Commission  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhbmNoYXlhdHMgaW4gb3VyIGNvdW50cnkgcmVjZWl2ZSBmdW5kcyBpbiB0aGUgZm9sbG93aW5nIHdheXM6ICAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIERldm9sdXRpb24gZnJvbSB0aGUgU3RhdGUgR292ZXJubWVudCBiYXNlZCBvbiByZWNvbW1lbmRhdGlvbnMgb2YgdGhlIFN0YXRlICAgRmluYW5jZSBDb21taXNzaW9uIGFzIHBlciBBcnQgMjQzLUkuICAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIExvYW5zIC8gZ3JhbnRzIGZyb20gdGhlIFN0YXRlIEdvdmVybm1lbnQgYW5kIGFsc28gUHJvZ3JhbW1lLXNwZWNpZmljIGFsbG9jYXRpb24gICB1bmRlciBDZW50cmFsbHkgU3BvbnNvciBTY2hlbWVzIGFuZCBBZGRpdGlvbmFsIENlbnRyYWwgQXNzaXN0YW5jZS4gICAgT3B0aW9uIDMgaXMgY29ycmVjdC4gSW50ZXJuYWwgUmVzb3VyY2UgR2VuZXJhdGlvbiAodGF4IGFuZCBub24tdGF4KS4gSG93ZXZlciBJbnRlcm5hbCByZXNvdXJjZSAgIGdlbmVyYXRpb24gYXQgdGhlIFBhbmNoYXlhdCBsZXZlbCBpcyB3ZWFrLiBUaGlzIGlzIHBhcnRseSBkdWUgdG8gYSB0aGluIHRheCBkb21haW4gYW5kIHBhcnRseSBkdWUgdG8gICBQYW5jaGF5YXRzIG93biByZWx1Y3RhbmNlIGluIGNvbGxlY3RpbmcgcmV2ZW51ZS4gICAgQW5vdGhlciB3YXkgaXMgZ3JhbnRzIGZyb20gdGhlIFVuaW9uIEdvdmVybm1lbnQgYmFzZWQgb24gcmVjb21tZW5kYXRpb25zIG9mIHRoZSBDZW50cmFsIEZpbmFuY2UgICBDb21taXNzaW9uLiAgICBTb3VyY2U6ICBJbmRpYW4gcG9saXR5IGJ5IE0uIExheG1pa2FudGggY2hhcHRlciAzOCBQYW5jaGF5YXRpIFJhaiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to Panchayats (Extension  to the Scheduled Areas) Act (PESA Act) 1996,  consider the following statements:   1.  Gram Sabha shall be competent to  safeguard the traditions of the people and  the customary mode of dispute resolution.   2.  The reservation of seats in the Scheduled  Areas in every Panchayat shall be in  proportion to the population of the  communities.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBVbmRlciB0aGUgUEVTQSBBY3QgMTk5NiwgZXZlcnkgdmlsbGFnZSBzaGFsbCBoYXZlIGEgR3JhbSBTYWJoYSBjb25zaXN0aW5nIG9mICAgcGVyc29ucyB3aG9zZSBuYW1lcyBhcmUgaW5jbHVkZWQgaW4gdGhlIGVsZWN0b3JhbCByb2xscyBmb3IgdGhlIFBhbmNoYXlhdCBhdCB0aGUgdmlsbGFnZSBsZXZlbC4gRnVydGhlciAgIGV2ZXJ5IEdyYW0gU2FiaGEgc2hhbGwgYmUgY29tcGV0ZW50IHRvIHNhZmVndWFyZCBhbmQgcHJlc2VydmUgdGhlIHRyYWRpdGlvbnMgYW5kIGN1c3RvbXMgb2YgdGhlICAgcGVvcGxlLCB0aGVpciBjdWx0dXJhbCBpZGVudGl0eSwgY29tbXVuaXR5IHJlc291cmNlcyBhbmQgdGhlIGN1c3RvbWFyeSBtb2RlIG9mIGRpc3B1dGUgcmVzb2x1dGlvbi4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVW5kZXIgdGhlIGFjdCwgdGhlIHJlc2VydmF0aW9uIGZvciB0aGUgU2NoZWR1bGVkIFRyaWJlcyBzaGFsbCBub3QgYmUgbGVzcyB0aGFuICAgb25lLWhhbGYgb2YgdGhlIHRvdGFsIG51bWJlciBvZiBzZWF0cy4gVGhlIHJlc2VydmF0aW9uIG9mIHNlYXRzIGluIHRoZSBTY2hlZHVsZWQgQXJlYXMgaW4gZXZlcnkgUGFuY2hheWF0ICAgc2hhbGwgYmUgaW4gcHJvcG9ydGlvbiB0byB0aGUgcG9wdWxhdGlvbiBvZiB0aGUgY29tbXVuaXRpZXMgZm9yIHdob20gcmVzZXJ2YXRpb24gaXMgc291Z2h0IHRvIGJlIGdpdmVuICAgdW5kZXIgUGFydCBJWCBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgVW5kZXIgdGhlIGFjdCwgYWxsIHNlYXRzIG9mIENoYWlycGVyc29ucyBvZiBQYW5jaGF5YXRzIGF0IGFsbCBsZXZlbHMgICBzaGFsbCBiZSByZXNlcnZlZCBmb3IgdGhlIFNjaGVkdWxlZCBUcmliZXMuIEZ1cnRoZXIsIHRoZSBzdGF0ZSBnb3Zlcm5tZW50IG1heSBub21pbmF0ZSBzdWNoICAgU2NoZWR1bGVkIFRyaWJlcyB3aGljaCBoYXZlIG5vIHJlcHJlc2VudGF0aW9uIGluIHRoZSBQYW5jaGF5YXQgYXQgdGhlIGludGVybWVkaWF0ZSBsZXZlbCBvciB0aGUgICBQYW5jaGF5YXQgYXQgdGhlIGRpc3RyaWN0IGxldmVsLiAgICBTb3VyY2U6IEluZGlhbiBwb2xpdHkgYnkgTS4gTGF4bWlrYW50aCBjaGFwdGVyIDM4IFBhbmNoYXlhdGkgUmFqICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 9,
      "question" : "In the context of Municipal Personnel  System in India, consider the following  statements:   1.  In separate personnel system, municipal  personnel are not transferrable to other  local bodies.  2.  In Integrated personnel system, municipal  personnel are members of state services.   3.  In unified personnel system, the state  government appoints, administers, and  controls the municipal personnel.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBVbmRlciBzZXBhcmF0ZSBwZXJzb25uZWwgc3lzdGVtLCBlYWNoIGxvY2FsIGJvZHkgYXBwb2ludHMsIGFkbWluaXN0ZXJzLCBhbmQgICBjb250cm9scyBpdHMgb3duIHBlcnNvbm5lbC4gTXVuaWNpcGFsIHBlcnNvbm5lbCBhcmUgbm90IHRyYW5zZmVycmFibGUgdG8gb3RoZXIgbG9jYWwgYm9kaWVzLiBIZW5jZSB0aGlzICAgc3lzdGVtIHVwaG9sZHMgdGhlIHByaW5jaXBsZSBvZiBsb2NhbCBhdXRvbm9teSBhbmQgcHJvbW90ZXMgdW5kaXZpZGVkIGxveWFsdHkuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEluIEludGVncmF0ZWQgcGVyc29ubmVsIHN5c3RlbSwgbXVuaWNpcGFsIHBlcnNvbm5lbCBhcmUgbWVtYmVycyBvZiBzdGF0ZSAgIHNlcnZpY2VzLiBUaGV5IGFyZSB0cmFuc2ZlcmFibGUgbm90IG9ubHkgYmV0d2VlbiB0aGUgbG9jYWwgYm9kaWVzIGJ1dCBhbHNvIGJldHdlZW4gbG9jYWwgYm9kaWVzIGFuZCAgIGRlcGFydG1lbnQgb2Ygc3RhdGUgZ292ZXJubWVudC4gICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluIHVuaWZpZWQgcGVyc29ubmVsIHN5c3RlbSwgdGhlIHN0YXRlIGdvdmVybm1lbnQgYXBwb2ludHMsIGFkbWluaXN0ZXJzLCBhbmQgICBjb250cm9scyB0aGUgbXVuaWNpcGFsIHBlcnNvbm5lbC4gU3RhdGUgd2lkZSBzZXJ2aWNlcyBhcmUgY3JlYXRlZCBmb3IgYWxsIHVyYmFuIGJvZGllcyBpbiB0aGUgc3RhdGUgYW5kICAgdGhleSBhcmUgdHJhbnNmZXJhYmxlIGJldHdlZW4gdGhlIGxvY2FsIGJvZGllcyBpbiB0aGUgc3RhdGUuICAgIFNvdXJjZTogIExBWE1JS0FOVChDSEFQVEVSLU1VTklDSVBBTElUSUVTKSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following is not a reason for  the ineffective performance of Panchayati Raj  Institutions in India?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IEluIGdlbmVyYWwsIGZldyB0YXhhdGlvbiBwb3dlcnMgaGF2ZSBiZWVuIGRldm9sdmVkIGJ5IHRoZSBzdGF0ZXMgdG8gdGhlIFBhbmNoYXlhdGkgICBSYWogSW5zdGl0dXRlcyAoUFJJcykuIEl0IGhhcyBiZWVuIG5vdGVkIGluIHZhcmlvdXMgcmVwb3J0cyBsaWtlIHRob3NlIG9mIHRoZSBDQUcsIHRoZSBFY29ub21pYyBTdXJ2ZXkgICAyMDE3LTE4LCBldGMuLCB0aGF0IHRoZSBmZXcgdGF4YXRpb24gcG93ZXJzIHRoYXQgUFJJcyBoYXZlLCB0aGV5IGFyZSBvZnRlbiB1bndpbGxpbmcgdG8gdXNlIHRoZW0gdG8gICBkZW1hbmQgYXBwcm9wcmlhdGUgdGF4ZXMgZnJvbSB0aGUgY29uc3RpdHVlbnRzLiBUaGlzIGlzIGJlY2F1c2UgdGhlIFBSSSBsZWFkZXJzIGRvbid0IHdhbnQgdG8gZGlzdHVyYiAgIHRoZWlyIGhhcm1vbmlvdXMgcmVsYXRpb25zIHdpdGggdGhlIHBlb3BsZSBpbiB0aGVpciBjb21tdW5pdHkuICAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFdoYXQgZnVuY3Rpb25zIGFyZSB0byBiZSBkZXZvbHZlZCBhY3R1YWxseSB0byBhIFBSSSBoYXMgYmVlbiBsZWZ0IGJ5IHRoZSAgIENvbnN0aXR1dGlvbiB0byB0aGUgZGlzY3JldGlvbiBvZiB0aGUgc3RhdGUgbGVnaXNsYXR1cmVzLiBUaGUgc3ViamVjdHMgdGhhdCBtYXkgYmUgdHJhbnNmZXJyZWQgYXJlICAgbWVudGlvbmVkIGluIHRoZSAxMnRoIFNjaGVkdWxlIG9mIHRoZSBDb25zdGl0dXRpb24sIGJ1dCB0aGVyZSBpcyBubyBjb21wdWxzaW9uIG9uIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSwgICBieSB0aGUgQ29uc3RpdHV0aW9uLCB0byBhY3R1YWxseSBkZXZvbHZlIHBvd2VycyByZWxhdGVkIHRvIHRoZXNlIGZ1bmN0aW9ucyBpbiB0aGUgY29tcHVsc29yeSBTdGF0ZSAgIE11bmljaXBhbCBBY3RzLiBTbywgbW9zdCBzdGF0ZSBsZWdpc2xhdHVyZXMgdGVuZCB0byBrZWVwIHBvd2VycyBhbmQgZnVuY3Rpb25zIHdpdGggdGhlbXNlbHZlcyBhbmQgbm90ICAgZ2l2ZSB0aGVtIGF3YXkgdG8gUFJJcy4gU28sIG1vc3QgUFJJcyBkb24ndCBoYXZlIHRoZSBkZWNpc2lvbi1tYWtpbmcgYWJpbGl0eSByZWdhcmRpbmcgaW1wb3J0YW50IGxvY2FsICAgaXNzdWVzIGxpa2UgaGVhbHRoLCBzYW5pdGF0aW9uLCByb2FkcywgZXRjLiB0aHVzIHJlbmRlcmluZyB0aGVtIGluZWZmZWN0aXZlLCBhcyB0aGV5IGhhdmUgdG8gd2FpdCBmb3IgZmluYW5jZXMgICBhbmQgcGVybWlzc2lvbnMgZnJvbSBzdGF0ZSBsZWdpc2xhdHVyZXMgd2hpY2ggbm90IG9ubHkgaXMgdGltZSBjb25zdW1pbmcsIGJ1dCBhbHNvIG5vdCBjZW50ZXJlZCBvbiB0aGUgICBuZWVkcyBvZiB0aGUgbG9jYWwgcGVvcGxlLiAgICBPcHRpb24gYyBpcyBjb3JyZWN0OiBQYXJhbGxlbCBCb2RpZXMsIHN1Y2ggYXMgU3BlY2lhbCBQdXJwb3NlIFZlaGljbGVzIChTUFYpLCBldGMuIGFyZSBvZnRlbiBjcmVhdGVkIHdpdGggICBvdmVybGFwcGluZyBqdXJpc2RpY3Rpb24vIGZ1bmN0aW9uLyBwb3dlciB3aXRoIFBSSXMgdG8gZ2V0IGEgd29yayBkb25lIHF1aWNrbHkuIEJ1dCB0aGVpciBwcmVzZW5jZSAgIGNyYW1wcyB0aGUgYWJpbGl0eSBvZiB0aGUgUFJJIHRvIHdvcmsgYW5kIGRlbW9yYWxpemVzIHRoZW0sIHdoaWxlIG9mdGVuIGxlYWRpbmcgdG8gdW53YW50ZWQgb3V0Y29tZXMgICBsaWtlIGNvcnJ1cHRpb24sIHBhcnRpc2FuIHBvbGl0aWNzLCBlbGl0ZSBjYXB0dXJlLCBldGMuICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogVGhlIENvbnN0aXR1dGlvbiBtYWtlcyBwcm92aXNpb25zIGZvciBib3RoIENlbnRyZSAoQXJ0aWNsZSAyODApIGFuZCB0aGUgc3RhdGVzICAgKEFydGljbGUgMjQzSSkgdG8gZ2l2ZSBncmFudHMgYW5kIGZ1bmRzIHRvIFBSSXMuIEZvbGxvd2luZyB0aGUgc2V2ZW50eS10aGlyZCBhbmQgc2V2ZW50eS1mb3VydGggICBhbWVuZG1lbnRzIHRvIHRoZSBDb25zdGl0dXRpb24sIEZpbmFuY2UgQ29tbWlzc2lvbnMgd2VyZSBjaGFyZ2VkIHdpdGggdGhlIGFkZGl0aW9uYWwgcmVzcG9uc2liaWxpdHkgb2YgICByZWNvbW1lbmRpbmcgbWVhc3VyZXMgdG8gYXVnbWVudCB0aGUgQ29uc29saWRhdGVkIEZ1bmQgb2YgYSBTdGF0ZSB0byBzdXBwbGVtZW50IHRoZSByZXNvdXJjZXMgb2YgICBsb2NhbCBib2RpZXMuIFRoaXMgaGFzIHJlc3VsdGVkIGluIGZ1cnRoZXIgZXhwYW5zaW9uIGluIHRoZSBzY29wZSBvZiBGaW5hbmNlIENvbW1pc3Npb24gZ3JhbnRzLiBUaGUgICBUZW50aCBDb21taXNzaW9uIHdhcyB0aGUgZmlyc3QgQ29tbWlzc2lvbiB0byBoYXZlIHJlY29tbWVuZGVkIGdyYW50cyBmb3IgcnVyYWwgYW5kIHVyYmFuIGxvY2FsICAgYm9kaWVzLiBUaGUgMTV0aCBGaW5hbmNlIENvbW1pc3Npb24gYWR2aXNlZCB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50IHRvIGRldm9sdmUgYSByZWNvcmQgUnMgNC4zNiwzNjEgICBjcm9yZSB0byBsb2NhbCBnb3Zlcm5tZW50cy4gICAgU291cmNlOiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNXRoIGVkaXRpb24sIENoaC0zODsgICAgaHR0cHM6Ly9lY29ub21pY3RpbWVzLmluZGlhdGltZXMuY29tL25ld3MvZWNvbm9teS9wb2xpY3kvbG93LXRheC1jb2xsZWN0aW9uLWF0LXBhbmNoYXlhdHMtYS0gIGNoYWxsZW5nZS10by1maXNjYWwtZmVkZXJhbGlzbS1zdXJ2ZXkvYXJ0aWNsZXNob3cvNjI2OTk0MjkuY21zICAgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9vcGluaW9uL2NvbHVtbnMvbWVjaGFuaXNtcy1mb3ItZGV2b2x1dGlvbi1vZi1mdW5kcy10by0gIHBhbmNoYXlhdHMtbXVuaWNpcGFsLWJvZGllcy1mcm9tLXRoZS1maWZ0ZWVudGgtZmluYW5jZS1jb21taXNzaW9uLWNvdWxkLWNhdGFseXNlLWFjY291bnRhYmlsaXR5LSAgYW5kLWVmZmVjdGl2ZS1nb3Zlcm5hbmNlLWF0LXRoZS1ncmFzc3Jvb3RzLTcxOTQ3MzkvICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Few taxation powers have been devolved by   the states to the Panchayati Raj Institutes  ",
        "option2" : " State legislatures tend to keep powers and   functions with themselves.   ",
        "option3" : " Creation of Special Purpose Vehicles with   overlapping jurisdictions.   ",
        "option4" : " From the 10th Finance Commission (FC), the   FC stopped advising the Central   government on devolving funds to local   governments.   "
      }
    },
    {
      "index" : 11,
      "question" : "At the Central level, the subject of 'urban  local government' is dealt with by which of the  following ministries?   1. Ministry of Defence.  2. Ministry of Home Affairs.  3. Ministry of Rural Development  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgc3lzdGVtIG9mIHVyYmFuIGdvdmVybm1lbnQgd2FzIGNvbnN0aXR1dGlvbmFsaXNlZCB0aHJvdWdoIHRoZSA3NHRoIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QgICBvZiAxOTkyLiBBdCB0aGUgQ2VudHJhbCBsZXZlbCwgdGhlIHN1YmplY3Qgb2YgJ3VyYmFuIGxvY2FsIGdvdmVybm1lbnQnIGlzIGRlYWx0IHdpdGggYnkgdGhlIGZvbGxvd2luZyB0aHJlZSAgIG1pbmlzdHJpZXM6ICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICAxKSBNaW5pc3RyeSBvZiBIb3VzaW5nIGFuZCBVcmJhbiBBZmZhaXJzLiAgICAyKSBNaW5pc3RyeSBvZiBEZWZlbmNlIGluIHRoZSBjYXNlIG9mIGNhbnRvbm1lbnQgYm9hcmRzICAgIDMpIE1pbmlzdHJ5IG9mIEhvbWUgQWZmYWlycyBpbiB0aGUgY2FzZSBvZiBVbmlvbiBUZXJyaXRvcmllcyAgICBTb3VyY2U6IGh0dHA6Ly9tb2h1YS5nb3YuaW4vY21zL21hbmRhdGUucGhwICAgIGh0dHBzOi8vd3d3LnBhbmNoYXlhdC5nb3YuaW4vd2ViL2d1ZXN0L2Fib3V0LXVzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following statements about  the evolution of Urban Local Bodies in India is/  are correct?   1.  Lord Ripon introduced a resolution  outlining the formation and transfer of  certain functions like water supply,  sanitation to local bodies.  2.  The subject of Local Governance was  handled by a directly elected responsible  Minister, under the Government of India  Act, 1919.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgQnJpdGlzaCBicm91Z2h0IHdpdGggdGhlbSB0aGUgbW9kZXJuIGNvbmNlcHQgb2YgdXJiYW4gbG9jYWwgZ292ZXJuYW5jZSBhbmQgbXVuaWNpcGFsICAgY29ycG9yYXRpb25zLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBMb3JkIFJpcG9uIChWaWNlcm95IG9mIEluZGlhLCAxODgwLTg0KSBpbnRyb2R1Y2VkIGEgcmVzb2x1dGlvbiBvdXRsaW5pbmcgdGhlICAgZm9ybWF0aW9uIGFuZCB0cmFuc2ZlciBvZiBjZXJ0YWluIGZ1bmN0aW9ucyAobGlrZSB3YXRlciBzdXBwbHksIHNhbml0YXRpb24sIGV0Yy4pIHRvIGxvY2FsIGJvZGllcyAgIHRocm91Z2hvdXQgQnJpdGlzaCBJbmRpYSwgd2hpY2ggaXMgd2h5IGhlIGlzIGtub3duIGFzIHRoZSAnRmF0aGVyIG9mIExvY2FsIFNlbGYgR292ZXJubWVudCBpbiBJbmRpYScuIEhpcyAgIHJlc29sdXRpb24gb24gdGhpcyBzdWJqZWN0IGlzIGNhbGxlZCB0aGUgJ01hZ25hIENhcnRhIG9mIExvY2FsIFNlbGYgR292ZXJubWVudCBpbiBJbmRpYScuIE1vc3Qgb3RoZXIgICBHb3Zlcm5vciBHZW5lcmFscyB0ZW5kZWQgdG8gZmF2b3VyIHBvbGljaWVzIHRvIGtlZXAgZ292ZXJuYW5jZSBjZW50cmFsaXNlZCwgdW5saWtlIFJpcG9uLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgc3ViamVjdCBvZiBMb2NhbCBHb3Zlcm5hbmNlIHdhcyBoYW5kbGVkIGJ5IGEgZGlyZWN0bHkgZWxlY3RlZCByZXNwb25zaWJsZSAgIE1pbmlzdGVyLCB1bmRlciB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBBY3QsIDE5MTkuIEl0IHdhcyBhIHRyYW5zZmVycmVkIHN1YmplY3QgaW4gdGhlIER5YXJjaHkgc3lzdGVtICAgYmVpbmcgaW1wbGVtZW50ZWQgaW4gdGhlIHN0YXRlcy4gQWZ0ZXIgdGhhdCB1bmRlciB0aGUgcHJvdmluY2lhbCBhdXRvbm9teSBzY2hlbWUgaW50cm9kdWNlZCBieSB0aGUgICBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCBvZiAxOTM1LCBsb2NhbCBzZWxmLWdvdmVybm1lbnQgd2FzIGRlY2xhcmVkIGEgcHJvdmluY2lhbCBzdWJqZWN0ICAgIFNvdXJjZTogU3BlY3RydW0gQ0gyNi1jb25zdGl0dWl0aW9vbmFsLCBhZG1pbmlzdHJhdGl2ZSBhbmQganVkaWNpYWwgZGV2ZWxvcG1lbnRzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2         "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following types of  Municipalities are provided under the 74th  Constitutional Amendment Act, 1992?   1.  Town Area Committee is a type of municipal  body created by a separate dedicated Act by  state legislature  2.  A Municipal Council is an urban body  prescribed by 74th Constitutional  Amendment Act, 1992.  3. Cantonment Board is a municipal body  created by a central law.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRvd24gQXJlYSBDb21taXR0ZWUgaXMgYSB0eXBlIG9mIG11bmljaXBhbCBib2R5IGNyZWF0ZWQgYnkgYSBzZXBhcmF0ZSAgIGRlZGljYXRlZCBBY3QgYnkgc3RhdGUgbGVnaXNsYXR1cmUsIGFuZCBub3QgZm91bmQgaW4gdGhlIDc0dGggQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEEgTXVuaWNpcGFsIENvdW5jaWwgaXMgYSBzbWFsbCB1cmJhbiBib2R5IHByZXNjcmliZWQgYnkgNzR0aCBDb25zdGl0dXRpb25hbCAgIEFtZW5kbWVudCBBY3QsIDE5OTIgZm9yIHNtYWxsZXIgdXJiYW4gYXJlYXMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQSBDYW50b25tZW50IEJvYXJkIGlzIGEgbXVuaWNpcGFsIGJvZHkgY3JlYXRlZCBmb3IgbXVuaWNpcGFsIGFkbWluaXN0cmF0aW9uICAgb2YgY2l2aWxpYW4gcG9wdWxhdGlvbiBpbiBhbiBhcm15IGNhbnRvbm1lbnQgYXJlYS4gSXQgaXMgY3JlYXRlZCBieSBhIGNlbnRyYWwgbGF3IGNhbGxlZCB0aGUgQ2FudG9ubWVudHMgICBBY3QsIDIwMDYsIGFuZCBpcyBub3QgbWVudGlvbmVkIGluIHRoZSA3NHRoIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QsIDE5OTIuICAgIFNvdXJjZTogUG9saXR5IGJ5IExheG1pa2FudGgsIDV0aCBlZGl0aW9uLCBDaC0zOSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "2 only   "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following statements is/are  correct about the District Planning Committees  (DPC) set up in states?   1.  Four-fifths of the members of the DPC are  indirectly elected.    2.  The District Plan prepared by the DPC is to  be a combination of the Panchayat level  development plan as well as the  Municipality development plan.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIENvbnN0aXR1dGlvbiAoQXJ0aWNsZSAyNDMgWkQpLCBmb3VyLWZpZnRocyBvZiB0aGUgbWVtYmVycyBvZiB0aGUgICBEaXN0cmljdCBQbGFubmluZyBDb21taXR0ZWUgKERQQykgYXJlIHRvIGJlIGVsZWN0ZWQgaW5kaXJlY3RseSBieSB0aGUgZWxlY3RlZCBtZW1iZXJzIG9mIGJvdGggdGhlICAgUGFuY2hheWF0IGFuZCB0aGUgTXVuaWNpcGFsaXR5IGZyb20gYW1vbmdzdCB0aGVtc2VsdmVzIChpbiBwcm9wb3J0aW9uIHRvIHRoZSByYXRpbyBvZiB1cmJhbiBhbmQgICBydXJhbCBwb3B1bGF0aW9uIG9mIHRoYXQgZGlzdHJpY3QpLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgRGlzdHJpY3QgUGxhbiBwcmVwYXJlZCBieSB0aGUgRFBDIGlzIHRvIGJlIGEgY29tYmluYXRpb24gb2YgdGhlIFBhbmNoYXlhdCAgIGxldmVsIGRldmVsb3BtZW50IHBsYW4gYXMgd2VsbCBhcyB0aGUgTXVuaWNpcGFsaXR5IGRldmVsb3BtZW50IHBsYW4uIEl0IGRlYWxzIHdpdGggaW1wb3J0YW50IGNvbW1vbiAgIG1hdHRlcnMgbGlrZSBzcGF0aWFsIHBsYW5uaW5nIGFuZCBzaGFyaW5nIG9mIGNvbW1vbiByZXNvdXJjZXMgKGxpa2Ugd2F0ZXIsIGV0YyksIGVudmlyb25tZW50YWwgICBjb25zZXJ2YXRpb24sIGZpbmFuY2VzLCBldGMuICAgIFNvdXJjZTogUG9saXR5IGJ5IExheG1pa2FudGgsIDV0aCBlZGl0aW9uLCBDaC0zOSAgICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 15,
      "question" : "'It is created for small urban settlements  that meet the population criteria for a city. Also,  they are created by State Municipal Acts of  state legislature and not by an executive order  of the state government. It has some members  who are nominated. But most of its members  are elected.'   Which of the following types of urban local  body is correctly described in the paragraph  given above?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYSBpcyBjb3JyZWN0OiBNdW5pY2lwYWxpdGllcyBhcmUgY3JlYXRlZCBmb3Igc21hbGwgdXJiYW4gc2V0dGxlbWVudHMgdGhhdCBtZWV0IHRoZSBwb3B1bGF0aW9uICAgY3JpdGVyaWEgZm9yIGEgY2l0eS4gQWxzbywgdGhleSBhcmUgY3JlYXRlZCBieSBTdGF0ZSBNdW5pY2lwYWwgQWN0cyBvZiBzdGF0ZSBsZWdpc2xhdHVyZSBhbmQgbm90IGJ5IGFuICAgZXhlY3V0aXZlIG9yZGVyIG9mIHRoZSBzdGF0ZSBnb3Zlcm5tZW50LiBJdCBoYXMgc29tZSBtZW1iZXJzIHdobyBhcmUgbm9taW5hdGVkLiBidXQgbW9zdCBvZiBpdHMgICBtZW1iZXJzIGFyZSBlbGVjdGVkLiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IEEgVG93biBBcmVhIENvbW1pdHRlZSBpcyBhIHNlbWkgbXVuaWNpcGFsIGF1dGhvcml0eSBlbnRydXN0ZWQgb25seSB3aXRoIGEgICBsaW1pdGVkIG51bWJlciBvZiBiYXJlIG1pbmltdW0gbXVuaWNpcGFsIGZ1bmN0aW9ucyBmb3IgYSBzbWFsbCB0b3duLiBNb3N0IGltcG9ydGFudGx5IGl0IGlzIGNyZWF0ZWQgYnkgYSAgIHNlcGFyYXRlIEFjdCBvZiB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgYW5kIG5vdCBieSBhbiBleGVjdXRpdmUgb3JkZXIuIEFsc28sIGl0IGlzIG5vdCBjb21wdWxzb3JpbHkgYSAgIG5vbWluYXRlZCBib2R5IC0gaXQgbWF5IGJlIHdob2xseSBlbGVjdGVkIG9yIHdob2xseSBub21pbmF0ZWQgb3IgcGFydGx5IGVsZWN0ZWQgcGFydGx5IG5vbWluYXRlZC4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0OiBUb3duc2hpcCBpcyBlc3RhYmxpc2hlZCBieSBsYXJnZSBpbmR1c3RyaWFsIGVudGVycHJpc2VzIGFuZCBub3QgYnkgc3RhdGUgICBnb3Zlcm5tZW50cy4gSXQgaXMgbmVpdGhlciBhIHN0YXR1dG9yeSBub3IgYW4gZXhlY3V0aXZlIGJvZHkuIE9uZSBjb21tb25hbGl0eSBpcyB0aGF0IGl0IGhhcyBubyBlbGVjdGVkICAgbWVtYmVycy4gICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBBIE5vdGlmaWVkIEFyZWEgQ29tbWl0dGVlIGlzIGFuIHVyYmFuIGxvY2FsIGJvZHkgY3JlYXRlZCBieSBhbiBleGVjdXRpdmUgb3JkZXIgb2YgICB0aGUgU3RhdGUgZ292ZXJubWVudCwgd2l0aCBvbmx5IGxpbWl0ZWQgYXNwZWN0cyBvZiBTdGF0ZSBNdW5pY2lwYWwgQWN0IGFwcGx5aW5nIHRvIGl0ICh0aG9zZSBtZW50aW9uZWQgaW4gICB0aGUgb3JkZXIpLiBJdCBpcyBhbiBlbnRpcmVseSBub21pbmF0ZWQgYm9keSAoYnkgdGhlIHN0YXRlIGdvdmVybm1lbnQpLiBJdCBpcyBjcmVhdGVkIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gICBvZiAyIHR5cGVzIG9mIGFyZWFzICAgIDEpIGZhc3QgZGV2ZWxvcGluZyB1cmJhbiBhcmVhcyBkdWUgdG8gaW5kdXN0cmlhbGl6YXRpb24sIGV0Yy4gICAgMikgYW4gdXJiYW4gYXJlYSBjb25zaWRlcmVkIGltcG9ydGFudCBieSB0aGUgc3RhdGUgZ292ZXJubWVudCBidXQgd2hpY2ggZG9lcyBub3QgeWV0IGZ1bGZpbCBjb25kaXRpb25zICAgZm9yIGNyZWF0aW9uIG9mIGNpdHkgbXVuaWNpcGFsaXR5LiAgICBTb3VyY2U6IFBvbGl0eSBieSBMYXhtaWthbnRoLCA1dGggZWRpdGlvbiwgQ2gtMzkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Municipality   ",
        "option2" : "Town Area Committee   ",
        "option3" : "Township   ",
        "option4" : "Notified Area Committee      "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the 'Ward Committees'  of the Urban Local Government in India,  consider the following statements:    1.  Ward refers to the territorial constituencies  in a municipal area.  2.  Wards Committees consists of one or more  Wards within the territorial area of a  Municipality having a population of three  lakhs or more.    3.  Ward Committees cannot oversee the  spending of funds granted to their  respective wards.    Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEVhY2ggbXVuaWNpcGFsIGFyZWEgaXMgZGl2aWRlZCBpbnRvIHRlcnJpdG9yaWFsIGNvbnN0aXR1ZW5jaWVzIHRvIGJlIGtub3duIGFzICAgd2FyZHMuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgQ29uc3RpdHV0aW9uIHByb3ZpZGVzIHRoYXQgdGhlcmUgc2hhbGwgYmUgV2FyZHMgQ29tbWl0dGVlcywgY29uc2lzdGluZyBvZiAgIG9uZSBvciBtb3JlIFdhcmRzLCB3aXRoaW4gdGhlIHRlcnJpdG9yaWFsIGFyZWEgb2YgYSBNdW5pY2lwYWxpdHkgaGF2aW5nIGEgcG9wdWxhdGlvbiBvZiB0aHJlZSBsYWtocyBvciAgIG1vcmUuICAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFdhcmQgQ29tbWl0dGVlcyBhcmUgZW1wb3dlcmVkIHRvIGZvcm0gYW4gYWN0aW9uIHBsYW4gZm9yIHRoZWlyIHJlc3BlY3RpdmUgICB3YXJkcywgb3ZlcnNlZSBkZWNlbnRyYWxpc2F0aW9uIG9mIHByb2Nlc3Npbmcgb2YgbXVuaWNpcGFsIHdhc3RlLCBoZWxwIG1haW50YWluIHB1YmxpYyBzcGFjZXMsIGFuZCBhbHNvICAgb3ZlcnNlZSBzcGVuZGluZyBvZiBmdW5kcyBncmFudGVkIHRvIHRoZSB3YXJkLiBJdCBpcyBtYW5kYXRlZCB1bmRlciB0aGUgNzR0aCBDb25zdGl0dXRpb25hbCAgIEFtZW5kbWVudC4gICAgIFNvdXJjZTogTGF4bWlrYW50aCBDaGFwdGVyIDM5IE11bmljaXBhbGl0aWVzIHBnIG5vIDczMCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 3 only    ",
        "option2" : "1 and 2 only    ",
        "option3" : "1 and 3 only    ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following powers/functions  are available to the Gram Sabha, with respect to  a Scheduled Area, under the Panchayat  (Extension to the Scheduled Areas) Act, 1996?    1.  Restrict the sale and consumption of any  intoxicant.  2.  The power to exercise control over money  lending to Scheduled Tribes   3.  Grant of mining lease for minor minerals.    Select the correct answer using the code given  below:    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgUGFuY2hheWF0IChFeHRlbnNpb24gdG8gdGhlIFNjaGVkdWxlZCBBcmVhcykgQWN0LCAxOTk2IG1hbmRhdGVzIHRoYXQgdGhlICAgU3RhdGUgTGVnaXNsYXR1cmUgc2hhbGwgZW5zdXJlIHRoYXQgdGhlIFBhbmNoYXlhdHMgYXQgdGhlIGFwcHJvcHJpYXRlIGxldmVsIGFuZCB0aGUgR3JhbSBTYWJoYSBhcmUgICBlbmRvd2VkIHNwZWNpZmljYWxseSB3aXRoIHRoZSBwb3dlciB0byBlbmZvcmNlIHByb2hpYml0aW9uIG9yIHRvIHJlZ3VsYXRlIG9yIHJlc3RyaWN0IHRoZSBzYWxlIGFuZCAgIGNvbnN1bXB0aW9uIG9mIGFueSBpbnRveGljYW50LiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIFBhbmNoYXlhdCAoRXh0ZW5zaW9uIHRvIHRoZSBTY2hlZHVsZWQgQXJlYXMpIEFjdCwgMTk5NiBwcm92aWRlcyB0aGF0IGEgU3RhdGUgICBMZWdpc2xhdHVyZSBzaGFsbCBlbnN1cmUgdGhhdCB0aGUgUGFuY2hheWF0cyBhdCB0aGUgYXBwcm9wcmlhdGUgbGV2ZWwgYW5kIHRoZSBHcmFtIFNhYmhhIGFyZSBlbmRvd2VkICAgc3BlY2lmaWNhbGx5IHdpdGggdGhlIHBvd2VyIHRvIGV4ZXJjaXNlIGNvbnRyb2wgb3ZlciBtb25leSBsZW5kaW5nIHRvIFNjaGVkdWxlZCBUcmliZXMgICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEFjY29yZGluZyB0byB0aGUgUGFuY2hheWF0IChFeHRlbnNpb24gdG8gdGhlIFNjaGVkdWxlZCBBcmVhcykgQWN0LCAxOTk2LCB0aGUgICByZWNvbW1lbmRhdGlvbnMgb2YgdGhlIEdyYW0gU2FiaGEgb3IgdGhlIFBhbmNoYXlhdHMgYXQgdGhlIGFwcHJvcHJpYXRlIGxldmVsICAgICBzaGFsbCBiZSBtYW5kYXRvcnkgZm9yIGdyYW50IG9mIHByb3NwZWN0aW5nIGxpY2VuY2Ugb3IgbWluaW5nIGxlYXNlIGZvciBtaW5vciBtaW5lcmFscyBpbiB0aGUgU2NoZWR1bGVkICAgQXJlYXMuICAgICAgU291cmNlOiBMYXhtaWthbnRoIHBnIG5vIDcwOCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only    ",
        "option3" : "1 only    ",
        "option4" : "1, 2 and 3     "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements:   1.  The Constitution does not specify the  official languages for different states in  India.   2.  The legislature of a state may adopt any one  or more of the languages as the official  language of that state.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IHNwZWNpZnkgdGhlIG9mZmljaWFsIGxhbmd1YWdlcyBvZiBkaWZmZXJlbnQgc3RhdGVzIGluICAgSW5kaWEuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgQ29uc3RpdHV0aW9uIC0gICAgIDEpIFRoZSBsZWdpc2xhdHVyZSBvZiBhIHN0YXRlIG1heSBhZG9wdCBhbnkgb25lIG9yIG1vcmUgb2YgdGhlIGxhbmd1YWdlcyBpbiB1c2UgaW4gdGhlIHN0YXRlIG9yIEhpbmRpIGFzICAgdGhlIG9mZmljaWFsIGxhbmd1YWdlIG9mIHRoYXQgc3RhdGUuIFVudGlsIHRoYXQgaXMgZG9uZSwgRW5nbGlzaCBpcyB0byBjb250aW51ZSBhcyBvZmZpY2lhbCBsYW5ndWFnZSBvZiB0aGF0ICAgc3RhdGUuICAgIDIpIFdoZW4gdGhlIFByZXNpZGVudCAob24gYSBkZW1hbmQgYmVpbmcgbWFkZSkgaXMgc2F0aXNmaWVkIHRoYXQgYSBzdWJzdGFudGlhbCBwcm9wb3J0aW9uIG9mIHRoZSAgIHBvcHVsYXRpb24gb2YgYSBzdGF0ZSBkZXNpcmUgdGhlIHVzZSBvZiBhbnkgbGFuZ3VhZ2Ugc3Bva2VuIGJ5IHRoZW0gdG8gYmUgcmVjb2duaXplZCBieSB0aGF0IHN0YXRlLCAgIHRoZW4gaGUgbWF5IGRpcmVjdCB0aGF0IHN1Y2ggbGFuZ3VhZ2Ugc2hhbGwgYWxzbyBiZSBvZmZpY2lhbGx5IHJlY29nbml6ZWQgaW4gdGhhdCBzdGF0ZS4gVGhpcyBwcm92aXNpb24gICBhaW1zIGF0IHByb3RlY3RpbmcgdGhlIGxpbmd1aXN0aWMgaW50ZXJlc3RzIG9mIG1pbm9yaXRpZXMgaW4gdGhlIHN0YXRlcy4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IC0gTSBMYXhtaWthbnRoIC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDY1IC0gT2ZmaWNpYWwgbGFuZ3VhZ2UgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2        \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements  1.  A panchayat or municipality can be  dissolved earlier than its term in accordance  with the procedure prescribed by state law  2.  A panchayat reconstituted after premature  dissolution remains in office for the full  period of 5 years.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIDczcmQgYW5kIDc0dGggQW1lbmRtZW50IEFjdHMgcHJvdmlkZSB0aGF0IHBhbmNoYXlhdCBhbmQgbXVuaWNpcGFsaXR5IGNhbiBiZSAgIGRpc3NvbHZlZCBlYXJsaWVyIHRoYW4gaXRzIHRlcm0gaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwcm9jZWR1cmUgcHJlc2NyaWJlZCBieSBzdGF0ZSBsYXcuIEJ1dCBpbiBjYXNlIG9mICAgbXVuaWNpcGFsaXR5LCBiZWZvcmUgdGhlIGRpc3NvbHV0aW9uIGEgcmVhc29uYWJsZSBvcHBvcnR1bml0eSBvZiBiZWluZyBoZWFyZCBtdXN0IGJlIGdpdmVuIHRvIGEgICBtdW5pY2lwYWxpdHkuICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEEgcGFuY2hheWF0IGNvbnN0aXR1dGVkIHVwb24gdGhlIGRpc3NvbHV0aW9uIG9mIGEgcGFuY2hheWF0IGJlZm9yZSB0aGUgICBleHBpcmF0aW9uIG9mIGl0cyBkdXJhdGlvbiBzaGFsbCBjb250aW51ZSBvbmx5IGZvciB0aGUgcmVtYWluZGVyIG9mIHRoZSBwZXJpb2QgZm9yIHdoaWNoIHRoZSBkaXNzb2x2ZWQgICBwYW5jaGF5YXQgd291bGQgaGF2ZSBjb250aW51ZWQgaGFkIGl0IG5vdCBiZWVuIHNvIGRpc3NvbHZlZC4gSW4gb3RoZXIgd29yZHMsIGEgcGFuY2hheWF0IHJlY29uc3RpdHV0ZWQgICBhZnRlciBwcmVtYXR1cmUgZGlzc29sdXRpb24gZG9lcyBub3QgZW5qb3kgdGhlIGZ1bGwgcGVyaW9kIG9mIGZpdmUgeWVhcnMgYnV0IHJlbWFpbnMgaW4gb2ZmaWNlIG9ubHkgZm9yIHRoZSAgIHJlbWFpbmRlciBvZiB0aGUgcGVyaW9kLiAgIFNvdXJjZTogREQgQmFzdSAyMm5kIGVkaXRpb24gMzA2LDMwNywzMDkgYW5kIDMxMCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 20,
      "question" : "With reference to Cantonment Boards in  India, consider the following statements    1. It is established for municipal  administration of civilian population  residing in cantonment area.    2.  The board is created by the state  governments but administered by the  central government.    3.  The president of a cantonment board is  elected by the elected members of the board  from amongst themselves.    Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIGNhbnRvbm1lbnQgYm9hcmQgaXMgZXN0YWJsaXNoZWQgZm9yIG11bmljaXBhbCBhZG1pbmlzdHJhdGlvbiBmb3IgY2l2aWxpYW4gICBwb3B1bGF0aW9uIGluIHRoZSBjYW50b25tZW50IGFyZWEuIEl0IGlzIHNldCB1cCB1bmRlciB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgQ2FudG9ubWVudHMgQWN0IG9mIDIwMDYuICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIE1vc3QgdHlwZXMgb2YgdXJiYW4gbG9jYWwgYm9kaWVzIGFyZSBjcmVhdGVkIGFuZCBhZG1pbmlzdGVyZWQgYnkgdGhlIHN0YXRlICAgZ292ZXJubWVudCBidXQgYSBjYW50b25tZW50IGJvYXJkIGlzIGNyZWF0ZWQgYXMgd2VsbCBhcyBhZG1pbmlzdGVyZWQgYnkgdGhlIGNlbnRyYWwgZ292ZXJubWVudC4gICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIG1pbGl0YXJ5IG9mZmljZXIgY29tbWFuZGluZyB0aGUgc3RhdGlvbiBpcyB0aGUgZXgtb2ZmaWNpbyBwcmVzaWRlbnQgb2YgdGhlICAgYm9hcmQgYW5kIHByZXNpZGVzIG92ZXIgaXRzIG1lZXRpbmdzLiBJdCBpcyB2aWNlLXByZXNpZGVudCBvZiB0aGUgYm9hcmQgd2hvIGlzIGVsZWN0ZWQgYnkgdGhlIGVsZWN0ZWQgICBtZW1iZXJzIG9mIHRoZSBib2FyZCBmcm9tIGFtb25nc3QgdGhlbXNlbHZlcyBmb3IgYSB0ZXJtIG9mIGZpdmUgeWVhcnMuICAgICBTb3VyY2U6IExheG1pa2F0aCA0dGggZWRpdGlvbiAzNS43ICAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only    ",
        "option2" : "2 and 3 only    ",
        "option3" : "3 only    ",
        "option4" : "1 only   "
      }
    },
    {
      "index" : 21,
      "question" : "Consider the following statements:   1.  At present all proceedings in the Supreme  Court can only be in English language.  2.  The governor of a state with the previous  consent of the president can authorize the  use of Hindi or any other official language of  the state, in the proceedings of the High  Court.  3.  Every bill introduced in the Parliament is to  be accompanied by a translation in all the  languages present in the eighth schedule.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIGNvbnN0aXR1dGlvbmFsIHByb3Zpc2lvbnMgZGVhbGluZyB3aXRoIHRoZSBsYW5ndWFnZSBvZiB0aGUgY291cnRzICAgYW5kIGxlZ2lzbGF0aW9uIC0gICAgIFVudGlsIFBhcmxpYW1lbnQgcHJvdmlkZXMgb3RoZXJ3aXNlLCB0aGUgZm9sbG93aW5nIGFyZSB0byBiZSBpbiB0aGUgRW5nbGlzaCBsYW5ndWFnZSBvbmx5OiAgICAgKGEpIEFsbCBwcm9jZWVkaW5ncyBpbiB0aGUgU3VwcmVtZSBDb3VydCBhbmQgaW4gZXZlcnkgaGlnaCBjb3VydC4gICAgIChiKSBUaGUgYXV0aG9yaXRhdGl2ZSB0ZXh0cyBvZiBhbGwgYmlsbHMsIGFjdHMsIG9yZGluYW5jZXMsIG9yZGVycywgcnVsZXMsIHJlZ3VsYXRpb25zIGFuZCBieWUtbGF3cyBhdCB0aGUgICBDZW50cmFsIGFuZCBzdGF0ZSBsZXZlbHMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBnb3Zlcm5vciBvZiBhIHN0YXRlLCB3aXRoIHRoZSBwcmV2aW91cyBjb25zZW50IG9mIHRoZSBwcmVzaWRlbnQsIGNhbiAgIGF1dGhvcml6ZSB0aGUgdXNlIG9mIEhpbmRpIG9yIGFueSBvdGhlciBvZmZpY2lhbCBsYW5ndWFnZSBvZiB0aGUgc3RhdGUsIGluIHRoZSBwcm9jZWVkaW5ncyBpbiB0aGUgaGlnaCAgIGNvdXJ0IG9mIHRoZSBzdGF0ZSwgYnV0IG5vdCB3aXRoIHJlc3BlY3QgdG8gdGhlIGp1ZGdlbWVudHMsIGRlY3JlZXMgYW5kIG9yZGVycyBwYXNzZWQgYnkgaXQuIEluIG90aGVyICAgd29yZHMsIHRoZSBqdWRnZW1lbnRzLCBkZWNyZWVzIGFuZCBvcmRlcnMgb2YgdGhlIGhpZ2ggY291cnQgbXVzdCBjb250aW51ZSB0byBiZSBpbiBFbmdsaXNoIG9ubHkgKHVudGlsICAgUGFybGlhbWVudCBvdGhlcndpc2UgcHJvdmlkZXMpLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBPZmZpY2lhbCBMYW5ndWFnZXMgQWN0IG9mIDE5NjMgbGF5cyBkb3duIHRoYXQgSGluZGkgdHJhbnNsYXRpb24gb2YgYWN0cywgICBvcmRpbmFuY2VzLCBvcmRlcnMsIHJlZ3VsYXRpb25zIGFuZCBieWUtbGF3cyBwdWJsaXNoZWQgdW5kZXIgdGhlIGF1dGhvcml0eSBvZiB0aGUgcHJlc2lkZW50IGFyZSBkZWVtZWQgICB0byBiZSBhdXRob3JpdGF0aXZlIHRleHRzLiBGdXJ0aGVyLCBldmVyeSBiaWxsIGludHJvZHVjZWQgaW4gdGhlIFBhcmxpYW1lbnQgaXMgdG8gYmUgYWNjb21wYW5pZWQgYnkgYSBIaW5kaSAgIHRyYW5zbGF0aW9uLiAgICBLbm93bGVkZ2UgQmFzZTogICAgIFNpbmNlLCB0aGUgUGFybGlhbWVudCBoYXMgbm90IG1hZGUgYW55IHByb3Zpc2lvbiBmb3IgdGhlIHVzZSBvZiBIaW5kaSBpbiB0aGUgU3VwcmVtZSBDb3VydC4gSGVuY2UsIHRoZSAgIFN1cHJlbWUgQ291cnQgaGVhcnMgb25seSB0aG9zZSB3aG8gcGV0aXRpb24gb3IgYXBwZWFsIHdoaWNoIGFyZSBpbiBFbmdsaXNoLiBJbiAxOTcxLCBhIHBldGl0aW9uZXIgaW5zaXN0ZWQgICBvbiBhcmd1aW5nIGluIEhpbmRpIGEgaGFiZWFzIGNvcnB1cyBwZXRpdGlvbiBpbiB0aGUgU3VwcmVtZSBDb3VydC4gQnV0IHRoZSBDb3VydCBjYW5jZWxsZWQgaGlzIHBldGl0aW9uICAgb24gdGhlIGdyb3VuZCB0aGF0IHRoZSBsYW5ndWFnZSBvZiB0aGUgQ291cnQgd2FzIEVuZ2xpc2ggYW5kIGFsbG93aW5nIEhpbmRpIHdvdWxkIGJlIHVuY29uc3RpdHV0aW9uYWwuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIE0gTGF4bWlrYW50aCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA2NSAtIE9mZmljaWFsIGxhbmd1YWdlICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following are the criteria for  declaring a language as a classical language in  India?   1.  High antiquity of its early texts over a period  of 1,500- 2,000 years.  2.  A literary tradition that is not borrowed  from another speech community.   3.  There can be a discontinuity between the  classical language and its later forms.   4.  A body of ancient texts which is considered  a valuable heritage by generations of  speakers.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBjcml0ZXJpYSBmb3IgZGVjbGFyaW5nIGEgbGFuZ3VhZ2UgYXMgY2xhc3NpY2FsIG1hbmRhdGVzIGhpZ2ggYW50aXF1aXR5IG9mIGl0cyAgIGVhcmx5IHRleHRzL3JlY29yZGVkIGhpc3Rvcnkgb3ZlciBhIHBlcmlvZCBvZiAxLDUwMC0gMiwwMDAgeWVhcnMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBjcml0ZXJpYWwgZm9yIGNsYXNzaWNhbCBsYW5ndWFnZSBhbHNvIG1hbmRhdGVkIGZvciBhIGxpdGVyYXJ5IHRyYWRpdGlvbiB0aGF0IGlzICAgb3JpZ2luYWwgYW5kIG5vdCBib3Jyb3dlZCBmcm9tIGFub3RoZXIgc3BlZWNoIGNvbW11bml0eS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogU2luY2UgdGhlIGNsYXNzaWNhbCBsYW5ndWFnZSBhbmQgbGl0ZXJhdHVyZSBpcyBkaXN0aW5jdCBmcm9tIHRoZSBtb2Rlcm4sIHRoZXJlIGNhbiAgIGFsc28gYmUgYSBkaXNjb250aW51aXR5IGJldHdlZW4gdGhlIGNsYXNzaWNhbCBsYW5ndWFnZSBhbmQgaXRzIGxhdGVyIGZvcm1zIG9yIGl0cyBvZmZzaG9vdHMuICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEl0IHNob3VsZCBhbHNvIGJlIGEgYm9keSBvZiBhbmNpZW50IGxpdGVyYXR1cmUgZXh0cyB3aGljaCBpcyBjb25zaWRlcmVkIGEgdmFsdWFibGUgICBoZXJpdGFnZSBieSBnZW5lcmF0aW9ucyBvZiBzcGVha2Vycy4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IC0gTSBMYXhtaWthbnRoIC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDY1IC0gT2ZmaWNpYWwgbGFuZ3VhZ2UgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements with  reference to language provisions for the states:   1.  Until a state decides it's official language,  Hindi is continued as the official language of  that state.   2.  Both Hindi and English can be used as the  link language for communications between  various states.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgQ29uc3RpdHV0aW9uLCB0aGUgbGVnaXNsYXR1cmUgb2YgYSBzdGF0ZSBtYXkgYWRvcHQgYW55IG9uZSBvciAgIG1vcmUgb2YgdGhlIGxhbmd1YWdlcyBpbiB1c2UgaW4gdGhlIHN0YXRlIG9yIEhpbmRpIGFzIHRoZSBvZmZpY2lhbCBsYW5ndWFnZSBvZiB0aGF0IHN0YXRlLiBVbnRpbCB0aGF0IGlzIGRvbmUsICAgRW5nbGlzaCBpcyB0byBjb250aW51ZSBhcyBvZmZpY2lhbCBsYW5ndWFnZSBvZiB0aGF0IHN0YXRlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIENvbnN0aXR1dGlvbmFsIHByb3Zpc2lvbnMsIGZvciB0aGUgdGltZSBiZWluZywgdGhlIG9mZmljaWFsICAgbGFuZ3VhZ2Ugb2YgdGhlIFVuaW9uIChpLmUuLCBFbmdsaXNoKSB3b3VsZCByZW1haW4gdGhlIGxpbmsgbGFuZ3VhZ2UgZm9yIGNvbW11bmljYXRpb25zIGJldHdlZW4gdGhlICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFVuaW9uIGFuZCB0aGUgc3RhdGVzIG9yIGJldHdlZW4gdmFyaW91cyBzdGF0ZXMuIEJ1dCwgdHdvIG9yIG1vcmUgc3RhdGVzIGFyZSBmcmVlIHRvIGFncmVlIHRvIHVzZSBIaW5kaSAgIChpbnN0ZWFkIG9mIEVuZ2xpc2gpIGZvciBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlbXNlbHZlcy4gICAgS25vd2xlZGdlIEJhc2U6ICAgICBUaGUgT2ZmaWNpYWwgTGFuZ3VhZ2VzIEFjdCAoMTk2MykgbGF5cyBkb3duIHRoYXQgRW5nbGlzaCBzaG91bGQgYmUgdXNlZCBmb3IgcHVycG9zZXMgb2YgY29tbXVuaWNhdGlvbiAgIGJldHdlZW4gdGhlIFVuaW9uIGFuZCB0aGUgbm9uLUhpbmRpIHN0YXRlcyAodGhhdCBpcywgdGhlIHN0YXRlcyB0aGF0IGhhdmUgbm90IGFkb3B0ZWQgSGluZGkgYXMgdGhlaXIgICBvZmZpY2lhbCBsYW5ndWFnZSkuIEZ1cnRoZXIsIHdoZXJlIEhpbmRpIGlzIHVzZWQgZm9yIGNvbW11bmljYXRpb24gYmV0d2VlbiBhIEhpbmRpIGFuZCBhIG5vbi1IaW5kaSAgIHN0YXRlLCBzdWNoIGNvbW11bmljYXRpb24gaW4gSGluZGkgc2hvdWxkIGJlIGFjY29tcGFuaWVkIGJ5IGFuIEVuZ2xpc2ggdHJhbnNsYXRpb24uICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIE0gTGF4bWlrYW50aCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA2NSAtIE9mZmljaWFsIGxhbmd1YWdlICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to Central Council of  Local Government which of the following  statements is/are correct?    1. It was set up by an act of Parliament.    2.  The council is headed by the Union Minister  for Housing and Urban Affairs.  3.  It deals with matters of urban local  government only.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBDZW50cmFsIENvdW5jaWwgb2YgTG9jYWwgR292ZXJubWVudCB3YXMgc2V0IHVwIGluIDE5NTQuIEl0IHdhcyBjb25zdGl0dXRlZCAgIHVuZGVyIEFydGljbGUgMjYzIG9mIHRoZSBjb25zdGl0dXRpb24gYnkgYW4gb3JkZXIgb2YgdGhlIFByZXNpZGVudC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBjb3VuY2lsIGlzIGhlYWRlZCBieSB0aGUgVW5pb24gTWluaXN0ZXIgZm9yIEhvdXNpbmcgYW5kIFVyYmFuIEFmZmFpcnMuIEl0IGlzICAgb25seSBhbiBhZHZpc29yeSBib2R5IHdoaWNoIGRlYWxzIHdpdGggbWF0dGVycyBvZiB1cmJhbiBsb2NhbCBnb3Zlcm5tZW50LiAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGlsbCAxOTU4IHRoZSBjb3VuY2lsIGRlYWx0IHdpdGggYm90aCB1cmJhbiBhcyB3ZWxsIGFzIHJ1cmFsIGxvY2FsIGdvdmVybm1lbnQuIEJ1dCAgIGFmdGVyIDE5NTggaXQgaGFzIGJlZW4gZGVhbGluZyB3aXRoIG1hdHRlcnMgb2YgdXJiYW4gbG9jYWwgZ292ZXJubWVudCBvbmx5LiAgICAgU291cmNlOiBMYXhtaWthbnRoIDR0aCBlZGl0aW9uIDM1LjggICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "1 and 3 only    ",
        "option3" : "2 and 3 only    ",
        "option4" : "1, 2 and 3       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following are the powers of  Regional Councils constituted under the Sixth  Schedule of the Constitution?   1.  To make laws on certain matters like land,  forests and village administration.   2.  To constitute courts for trial of suits and  cases between the tribes.   3.  To make regulations for control of trading  by non-tribals within their jurisdiction.   4.  To impose certain specified taxes.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIHBvd2VycyBwcm92aWRlZCB1bmRlciB0aGUgU2l4dGggU2NoZWR1bGUgb2YgdGhlIENvbnN0aXR1dGlvbiwgICB0aGUgZGlzdHJpY3QgYW5kIHJlZ2lvbmFsIGNvdW5jaWxzIGFkbWluaXN0ZXIgdGhlIGFyZWFzIHVuZGVyIHRoZWlyIGp1cmlzZGljdGlvbi4gVGhleSBjYW4gbWFrZSBsYXdzIG9uICAgY2VydGFpbiBzcGVjaWZpZWQgbWF0dGVycyBsaWtlIGxhbmQsIGZvcmVzdHMsIGNhbmFsIHdhdGVyLCBzaGlmdGluZyBjdWx0aXZhdGlvbiwgdmlsbGFnZSBhZG1pbmlzdHJhdGlvbiwgICBpbmhlcml0YW5jZSBvZiBwcm9wZXJ0eSwgbWFycmlhZ2UgYW5kIGRpdm9yY2UsIHNvY2lhbCBjdXN0b21zIGFuZCBzbyBvbi4gQnV0IGFsbCBzdWNoIGxhd3MgcmVxdWlyZSB0aGUgICBhc3NlbnQgb2YgdGhlIGdvdmVybm9yLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZGlzdHJpY3QgYW5kIHJlZ2lvbmFsIGNvdW5jaWxzIHdpdGhpbiB0aGVpciB0ZXJyaXRvcmlhbCBqdXJpc2RpY3Rpb25zIGNhbiAgIGNvbnN0aXR1dGUgdmlsbGFnZSBjb3VuY2lscyBvciBjb3VydHMgZm9yIHRyaWFsIG9mIHN1aXRzIGFuZCBjYXNlcyBiZXR3ZWVuIHRoZSB0cmliZXMuIFRoZXkgaGVhciBhcHBlYWxzICAgZnJvbSB0aGVtLiBUaGUganVyaXNkaWN0aW9uIG9mIGhpZ2ggY291cnQgb3ZlciB0aGVzZSBzdWl0cyBhbmQgY2FzZXMgaXMgc3BlY2lmaWVkIGJ5IHRoZSBnb3Zlcm5vci4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIHJlZ2lvbmFsIGNvdW5jaWxzIGNhbiBhbHNvIG1ha2UgcmVndWxhdGlvbnMgZm9yIHRoZSBjb250cm9sIG9mIG1vbmV5IGxlbmRpbmcgICBhbmQgdHJhZGluZyBieSBub24tdHJpYmFscy4gQnV0IHN1Y2ggcmVndWxhdGlvbnMgcmVxdWlyZSB0aGUgYXNzZW50IG9mIHRoZSBnb3Zlcm5vci4gICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogVGhlIGRpc3RyaWN0IGFuZCByZWdpb25hbCBjb3VuY2lscyBhcmUgZW1wb3dlcmVkIHRvIGFzc2VzcyBhbmQgY29sbGVjdCBsYW5kICAgcmV2ZW51ZSBhbmQgdG8gaW1wb3NlIGNlcnRhaW4gc3BlY2lmaWVkIHRheGVzLiAgICBLbm93bGVkZ2UgQmFzZTogU29tZSBvdGhlciBwcm92aXNpb25zIHdpdGggcmVzcGVjdCB0byB0aGUgZGlzdHJpY3QgY291bmNpbHMgdW5kZXIgdGhlIDZ0aCBzY2hlZHVsZSBhcmU6ICAgIFRoZSBkaXN0cmljdCBjb3VuY2lsIGNhbiBlc3RhYmxpc2gsIGNvbnN0cnVjdCBvciBtYW5hZ2UgcHJpbWFyeSBzY2hvb2xzLCBkaXNwZW5zYXJpZXMsIG1hcmtldHMsIGZlcnJpZXMsICAgZmlzaGVyaWVzLCByb2FkcyBhbmQgc28gb24gaW4gdGhlIGRpc3RyaWN0LiAgICBUaGUgYWN0cyBvZiBQYXJsaWFtZW50IG9yIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBkbyBub3QgYXBwbHkgdG8gYXV0b25vbW91cyBkaXN0cmljdHMgYW5kIGF1dG9ub21vdXMgICByZWdpb25zIG9yIGFwcGx5IHdpdGggc3BlY2lmaWVkIG1vZGlmaWNhdGlvbnMgYW5kIGV4Y2VwdGlvbnMuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIE0gTGF4bWlrYW50aCAtIDZ0aCBlZGl0aW9uIC0gY2hhcHRlciA0MSAtIFNjaGVkdWxlZCBhbmQgVHJpYmFsIEFyZWFzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 and 4 only   ",
        "option3" : "1, 2 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 26,
      "question" : "Which of the following statements is/are  correct about Port Trust?   1.  It is created by an Act of Parliament to  provide civic amenities in the port areas.    2.  The port trust consists of only nominated  members.    Select the correct answer using the code given  below    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQSBwb3J0IHRydXN0IGlzIGVzdGFibGlzaGVkIGJ5IGFuIEFjdCBvZiBQYXJsaWFtZW50IGluIHRoZSBwb3J0IGFyZWFzIGxpa2UgTXVtYmFpLCAgIEtvbGthdGEsIENoZW5uYWkgYW5kIHNvIG9uIGZvciB0d28gcHVycG9zZXM6IHRvIG1hbmFnZSBhbmQgcHJvdGVjdCBwb3J0cywgYW5kIHRvIHByb3ZpZGUgY2l2aWMgICBhbWVuaXRpZXMuICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBtZW1iZXJzIG9mIGEgcG9ydCB0cnVzdCBhcmUgYm90aCBlbGVjdGVkIGFuZCBub21pbmF0ZWQuICAgIFNvdXJjZTogTGF4bWlrYW50aCA0dGggZWRpdGlvbiAzNS43ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to the 74th Constitutional  Amendment Act, consider the following  statements    1.  The state legislature provides for the  manner of election of the chairperson of a  municipality.    2.  Nagar panchayat is an area in transition  from rural area to urban area.    3.  The act provides for a two-tier structure of  urban local bodies.    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgc3RhdGUgbGVnaXNsYXR1cmUgbWF5IHByb3ZpZGUgZm9yIHRoZSBtYW5uZXIgb2YgZWxlY3Rpb24gb2YgdGhlIGNoYWlycGVyc29uICAgb2YgYSBtdW5pY2lwYWxpdHkuICAgVGhlIGFjdCBwcm92aWRlcyB0aGF0IGFsbCBtZW1iZXJzIG9mIG11bmljaXBhbGl0eSBzaGFsbCBiZSBkaXJlY3RseSBlbGVjdGVkIGJ5IHRoZSAgIHBlb3BsZSBvZiB0aGUgbXVuaWNpcGFsIGFyZWEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gIE5hZ2FyIHBhbmNoYXlhdCBpcyBhIHR5cGUgb2YgbXVuaWNpcGFsaXR5IHdoaWNoIGlzIGFuIGFyZWEgaW4gdHJhbnNpdGlvbiBmcm9tICAgcnVyYWwgYXJlYSB0byB1cmJhbiBhcmVhLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBVbmxpa2UgdGhlIDczcmQgQW1lbmRtZW50IEFjdCwgdGhpcyBhY3QgZG9lcyBub3QgcHJvdmlkZSBmb3IgYSB0aHJlZS10aWVyICAgc3RydWN0dXJlLiBUaGVyZSBpcyBvbmx5IGEgc2luZ2xlIHN0cnVjdHVyZSBzeXN0ZW0gdW5kZXIgNzR0aCBBbWVuZG1lbnQgQWN0IHdoaWNoIGlzIGtub3duIGJ5ICAgZGlmZmVyZW50IHR5cGVzIGJhc2VkIG9uIHRoZSBzcGVjaWZpYyBjb25kaXRpb25zIGxpa2UgTmFnYXIgcGFuY2hheWF0LCBtdW5pY2lwYWwgY291bmNpbCwgTXVuaWNpcGFsICAgQ29ycG9yYXRpb24sIHBvcnQgYXJlYSwgdG93biBhcmVhIGNvbW1pdHRlZSwgZXRjLiAgICAgU291cmNlOiBMYXhtaWthbnRoIDR0aCBlZGl0aW9uIDM1LjEtMiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "1 and 3 only    ",
        "option3" : "2 only    ",
        "option4" : "1 and 2 only       "
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following statement is  correct about Autonomous District Councils  set up under the Sixth Schedule of the  Constitution?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYSBhbmQgYiBhcmUgaW5jb3JyZWN0LiBFYWNoIGF1dG9ub21vdXMgZGlzdHJpY3QgaGFzIGEgZGlzdHJpY3QgY291bmNpbCBjb25zaXN0aW5nIG9mIDMwIG1lbWJlcnMgLSAgIGZvdXIgYXJlIG5vbWluYXRlZCBieSB0aGUgR292ZXJub3IgYW5kIHRoZSByZW1haW5pbmcgMjYgYXJlIGVsZWN0ZWQgb24gdGhlIGJhc2lzIG9mIGFkdWx0IGZyYW5jaGlzZS4gICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiBUaGUgZWxlY3RlZCBtZW1iZXJzIGFyZSBkaXJlY3RseSBlbGVjdGVkIGJhc2VkIG9uIHRoZSBiYXNpcyBvZiBhZHVsdCBmcmFuY2hpc2UuICAgVGhlIGVsZWN0ZWQgbWVtYmVycyBob2xkIG9mZmljZSBmb3IgYSB0ZXJtIG9mIGZpdmUgeWVhcnMuICAgIE9wdGlvbiBkIGlzIGNvcnJlY3QuIFRoZSBub21pbmF0ZWQgbWVtYmVycyBob2xkIG9mZmljZSBkdXJpbmcgdGhlIHBsZWFzdXJlIG9mIHRoZSBHb3Zlcm5vci4gICAgIEtub3dsZWRnZSBCYXNlOiBUaGUgdHJpYmFsIGFyZWFzIGluIHRoZSBmb3VyIHN0YXRlcyBvZiBBc3NhbSwgTWVnaGFsYXlhLCBUcmlwdXJhIGFuZCBNaXpvcmFtIGhhdmUgYmVlbiAgIGNvbnN0aXR1dGVkIGFzIGF1dG9ub21vdXMgZGlzdHJpY3RzLiBUaGUgR292ZXJub3IgaXMgZW1wb3dlcmVkIHRvIG9yZ2FuaXNlIGFuZCByZS1vcmdhbmlzZSB0aGUgICBhdXRvbm9tb3VzIGRpc3RyaWN0cy4gRWFjaCBhdXRvbm9tb3VzIHJlZ2lvbiBhbHNvIGhhcyBhIHNlcGFyYXRlIHJlZ2lvbmFsIGNvdW5jaWwuIFRoZSBkaXN0cmljdCBhbmQgICByZWdpb25hbCBjb3VuY2lscyB3aXRoaW4gdGhlaXIgdGVycml0b3JpYWwganVyaXNkaWN0aW9ucyBjYW4gY29uc3RpdHV0ZSB2aWxsYWdlIGNvdW5jaWxzIG9yIGNvdXJ0cyBmb3IgdHJpYWwgb2YgICBzdWl0cyBhbmQgY2FzZXMgYmV0d2VlbiB0aGUgdHJpYmVzLiBUaGUganVyaXNkaWN0aW9uIG9mIGhpZ2ggY291cnQgb3ZlciB0aGVzZSBzdWl0cyBhbmQgY2FzZXMgaXMgc3BlY2lmaWVkIGJ5ICAgdGhlIEdvdmVybm9yLiBUaGUgZGlzdHJpY3QgYW5kIHJlZ2lvbmFsIGNvdW5jaWxzIGNhbiBtYWtlIGxhd3Mgb24gY2VydGFpbiBzcGVjaWZpZWQgbWF0dGVycyBsaWtlIGxhbmQsICAgZm9yZXN0cywgY2FuYWwgd2F0ZXIsIHNoaWZ0aW5nIGN1bHRpdmF0aW9uLCB2aWxsYWdlIGFkbWluaXN0cmF0aW9uLCBpbmhlcml0YW5jZSBvZiBwcm9wZXJ0eSwgbWFycmlhZ2UgYW5kICAgZGl2b3JjZSwgc29jaWFsIGN1c3RvbXMgYW5kIHNvIG9uLiBCdXQgYWxsIHN1Y2ggbGF3cyByZXF1aXJlIHRoZSBhc3NlbnQgb2YgdGhlIEdvdmVybm9yLiAgICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIFNjaGVkdWxlZCBhbmQgVHJpYmFsIEFyZWFzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Autonomous District Council consists of 50   members.    ",
        "option2" : " Half of the members are elected and the   other half is nominated.  ",
        "option3" : " The elected members are indirectly elected   based on proportional representation   method.    ",
        "option4" : " The nominated members hold office during   the pleasure of the Governor.   "
      }
    },
    {
      "index" : 29,
      "question" : "Consider the following statements with  reference to the Union Territory of  Lakshadweep:   1.  A non-native person requires a permit to  reside in Lakshadweep, but not to enter.   2.  The Lakshadweep islands constitute a single  district, and are governed by an  administrator appointed by the President of  India.  3.  Lakshadweep Police is under the command  and control of the President.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgTGFjY2FkaXZlLCBNaW5pY295IGFuZCBBbWluZGl2aSBJc2xhbmRzIChSZXN0cmljdGlvbiBvbiBFbnRyeSAgIGFuZCBSZXNpZGVuY2UpIFJ1bGVzLCAxOTY3LCBldmVyeSBwZXJzb24sIHdobyBpcyBub3QgYSBuYXRpdmUgb2YgdGhlc2UgaXNsYW5kcywgc2hhbGwgaGF2ZSB0byBvYnRhaW4gYSBwZXJtaXQgICBpbiB0aGUgUHJlc2NyaWJlZCBGb3JtIGZyb20gdGhlIENvbXBldGVudCBhdXRob3JpdHksIGZvciBlbnRlcmluZyBpbnRvIGFuZCByZXNpZGluZyBpbiB0aGVzZSBpc2xhbmRzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QgYW5kIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIExha3NoYWR3ZWVwIGlzbGFuZHMgY29uc3RpdHV0ZSBhIHNpbmdsZSBJbmRpYW4gICBkaXN0cmljdCwgYW5kIGFyZSBnb3Zlcm5lZCBieSBhbiBhZG1pbmlzdHJhdG9yIGFwcG9pbnRlZCBieSB0aGUgUHJlc2lkZW50IG9mIEluZGlhIHVuZGVyIGFydGljbGUgMjM5IG9mIHRoZSAgIENvbnN0aXR1dGlvbi4gTGFrc2hhZHdlZXAgUG9saWNlIGlzIHVuZGVyIHRoZSBjb21tYW5kIGFuZCBjb250cm9sIG9mIEFkbWluaXN0cmF0b3IgaW4gaGlzIGNhcGFjaXR5IGFzICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIEluc3BlY3RvciBHZW5lcmFsIG9mIExha3NoYWR3ZWVwIFBvbGljZS4gVGhlIERpc3RyaWN0IE1hZ2lzdHJhdGUgaXMgYXNzaXN0ZWQgYnkgb25lIEFkZGl0aW9uYWwgRGlzdHJpY3QgICBNYWdpc3RyYXRlIGFuZCBUZW4gRXhlY3V0aXZlIE1hZ2lzdHJhdGVzIHdpdGggcmVzcGVjdCB0byBlbmZvcmNlbWVudCBvZiBsYXcgYW5kIG9yZGVyLiAgICBVbmRlciBBcnRpY2xlIDI0MCBvZiB0aGUgQ29uc3RpdHV0aW9uLCBUaGUgUHJlc2lkZW50IGNhbiBtYWtlIHJlZ3VsYXRpb25zIGZvciB0aGUgcGVhY2UsIHByb2dyZXNzIGFuZCAgIGdvb2QgZ292ZXJubWVudCBvZiB0aGUgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzLCBMYWtzaGFkd2VlcCwgRGFkcmEgYW5kIE5hZ2FyIEhhdmVsaSwgRGFtYW4gICBhbmQgRGl1IGFuZCBMYWRha2guICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIE0gTGF4bWlrYW50aCAtIDZ0aCBlZGl0aW9uIC0gY2hhcHRlciA0MCAtIHVuaW9uIHRlcnJpdG9yaWVzICAgIGh0dHBzOi8vbGFrc2hhZHdlZXAuZ292LmluL2Fib3V0LWxha3NoYWR3ZWVwL2FkbWluaXN0cmF0aXZlLXNldHVwLyAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements with  reference to the Fifth and Sixth Schedule of the  Constitution:   1.  The Fifth Schedule is applicable in any state  except Assam, Meghalaya, Tripura and  Mizoram.  2.  Executive power of the State and Centre  extends to the Fifth Schedule areas.  3.  Tribes Advisory Council are advisory in  nature and do not make laws.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgRmlmdGggU2NoZWR1bGUgb2YgdGhlIENvbnN0aXR1dGlvbiBkZWFscyB3aXRoIHRoZSBhZG1pbmlzdHJhdGlvbiBhbmQgY29udHJvbCAgIG9mIHNjaGVkdWxlZCBhcmVhcyBhbmQgc2NoZWR1bGVkIHRyaWJlcyBpbiBhbnkgc3RhdGUgZXhjZXB0IHRoZSBmb3VyIHN0YXRlcyBvZiBBc3NhbSwgTWVnaGFsYXlhLCBUcmlwdXJhICAgYW5kIE1pem9yYW0uIFdoZXJlYXMsIHRoZSBTaXh0aCBTY2hlZHVsZSBvZiB0aGUgQ29uc3RpdHV0aW9uIGRlYWxzIHdpdGggdGhlIGFkbWluaXN0cmF0aW9uIGFuZCBjb250cm9sICAgb2Ygc2NoZWR1bGVkIGFyZWFzIGFuZCBzY2hlZHVsZWQgdHJpYmVzIGluIHRoZSBmb3VyIHN0YXRlcyBvZiBBc3NhbSwgTWVnaGFsYXlhLCBUcmlwdXJhIGFuZCBNaXpvcmFtLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBFeGVjdXRpdmUgcG93ZXIgb2YgdGhlIFN0YXRlIGFuZCBDZW50cmUgZXh0ZW5kcyB0byB0aGUgRmlmdGggU2NoZWR1bGUgYXJlYXMuIFRoZSAgIGV4ZWN1dGl2ZSBwb3dlciBvZiB0aGUgQ2VudHJlIGV4dGVuZHMgdG8gZ2l2aW5nIGRpcmVjdGlvbnMgdG8gdGhlIHN0YXRlcyByZWdhcmRpbmcgdGhlIGFkbWluaXN0cmF0aW9uICAgb2Ygc3VjaCBhcmVhcy4gU2ltaWxhcmx5LCBhdXRvbm9tb3VzIGRpc3RyaWN0cyBjb25zdGl0dXRlZCB1bmRlciB0aGUgU2l4dGggU2NoZWR1bGUsIGRvIG5vdCBmYWxsIG91dHNpZGUgICB0aGUgZXhlY3V0aXZlIGF1dGhvcml0eSBvZiB0aGUgc3RhdGUgY29uY2VybmVkLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBFYWNoIHN0YXRlIGhhdmluZyBzY2hlZHVsZWQgYXJlYXMgdW5kZXIgdGhlIDV0aCBzY2hlZHVsZSwgaGFzIHRvIGVzdGFibGlzaCBhICAgVHJpYmVzIEFkdmlzb3J5IENvdW5jaWwgdG8gYWR2aXNlIG9uIHdlbGZhcmUgYW5kIGFkdmFuY2VtZW50IG9mIHRoZSBzY2hlZHVsZWQgdHJpYmVzLiBUaGV5IGFyZSBhZHZpc29yeSAgIGluIG5hdHVyZSBhbmQgZG8gbm90IG1ha2UgbGF3cy4gICAgS25vd2xlZGdlIEJhc2U6IFRyaWJlcyBBZHZpc29yeSBDb3VuY2lsOiBFYWNoIHN0YXRlIGhhdmluZyBzY2hlZHVsZWQgYXJlYXMgaGFzIHRvIGVzdGFibGlzaCBhIHRyaWJhbCAgIGFkdmlzb3J5IGNvdW5jaWwgdG8gYWR2aXNlIG9uIHdlbGZhcmUgYW5kIGFkdmFuY2VtZW50IG9mIHRoZSBzY2hlZHVsZWQgdHJpYmVzLiBJdCBpcyB0byBjb25zaXN0IG9mIDIwICAgbWVtYmVycywgdGhyZWUtZm91cnRocyBvZiB3aG9tIGFyZSB0byBiZSB0aGUgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBzY2hlZHVsZWQgdHJpYmVzIGluIHRoZSBzdGF0ZSAgIGxlZ2lzbGF0aXZlIGFzc2VtYmx5LiBBIHNpbWlsYXIgY291bmNpbCBjYW4gYWxzbyBiZSBlc3RhYmxpc2hlZCBpbiBhIHN0YXRlIGhhdmluZyBzY2hlZHVsZWQgdHJpYmUgICAgU291cmNlOiBJbmRpYW4gUG9saXR5IC0gTSBMYXhtaWthbnRoIC0gNnRoIGVkaXRpb24gLSBjaGFwdGVyIDQxIC0gU2NoZWR1bGVkIGFuZCBUcmliYWwgQXJlYXMgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following pairs:  Committees Recommendations   1. Balwant Rai  Mehta  Committee  Village panchayats  with directly elected  representatives   2. Ashok Mehta  Committee  Three-tier Panchayati  raj institutions   3. G.V.K Rao  Committee  Advocated making  district as the basic  unit of planning   Which of the pairs given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQYWlyIDEgaXMgY29ycmVjdDogQmFsd2FudCBSYWkgTWVodGEgQ29tbWl0dGVlIGRpZCByZWNvbW1lbmQgdGhlIGNvbnN0aXR1dGlvbiBvZiB2aWxsYWdlIHBhbmNoYXlhdCAgIHdpdGggZGlyZWN0bHkgZWxlY3RlZCByZXByZXNlbnRhdGl2ZXMuIEF0IHRoZSBzYW1lIHRpbWUsIGl0IHJlY29tbWVuZGVkIHRoYXQgdGhlIHBhbmNoYXlhdCBzYW1pdGkgYW5kICAgemlsYSBwYXJpc2hhZCBzaG91bGQgYmUgY29uc3RpdHV0ZWQgd2l0aCBpbmRpcmVjdGx5IGVsZWN0ZWQgbWVtYmVycy4gVGhpcyBjb21taXR0ZWUgd2FzIGFwcG9pbnRlZCBieSAgIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGluIDE5NTcgdG8gZXhhbWluZSB0aGUgd29ya2luZyBvZiB0aGUgQ29tbXVuaXR5IERldmVsb3BtZW50IFByb2dyYW1tZSAgICgxOTUyKSBhbmQgdGhlIE5hdGlvbmFsIEV4dGVuc2lvbiBTZXJ2aWNlICgxOTUzKSBhbmQgdG8gc3VnZ2VzdCBtZWFzdXJlcyBmb3IgdGhlaXIgYmV0dGVyIHdvcmtpbmcuICAgICBQYWlyIDIgaXMgaW5jb3JyZWN0OiBUaGUgQXNob2sgTWVodGEgY29tbWl0dGVlIHJlY29tbWVuZGVkIHRoYXQgdGhlIHRocmVlLXRpZXIgc3lzdGVtIG9mIHBhbmNoYXlhdGkgICByYWogc2hvdWxkIGJlIHJlcGxhY2VkIGJ5IHRoZSB0d28tdGllciBzeXN0ZW0sIHRoYXQgaXMsIHppbGEgcGFyaXNoYWQgYXQgdGhlIGRpc3RyaWN0IGxldmVsLCBhbmQgYmVsb3cgaXQsIHRoZSAgIG1hbmRhbCBwYW5jaGF5YXQgY29uc2lzdGluZyBvZiBhIGdyb3VwIG9mIHZpbGxhZ2VzIHdpdGggYSB0b3RhbCBwb3B1bGF0aW9uIG9mIDE1LDAwMCB0byAyMCwwMDAuIEl0IHdhcyAgIEJhbHdhbnQgUmFpIE1laHRhIGNvbW1pdHRlZSB3aGljaCByZWNvbW1lbmRlZCBlc3RhYmxpc2htZW50IG9mIGEgdGhyZWUtdGllciBwYW5jaGF5YXRpIHJhaiAgIHN5c3RlbS1ncmFtIHBhbmNoYXlhdCBhdCB0aGUgdmlsbGFnZSBsZXZlbCwgcGFuY2hheWF0IHNhbWl0aSBhdCB0aGUgYmxvY2sgbGV2ZWwgYW5kIHppbGEgcGFyaXNoYWQgYXQgdGhlICAgZGlzdHJpY3QgbGV2ZWwuIEFzaG9rIE1laHRhIGNvbW1pdHRlZSB3YXMgY29uc3RpdHV0ZWQgYnkgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgaW4gMTk3Ny4gSXQgZ2F2ZSAgIHJlY29tbWVuZGF0aW9ucyB0byByZXZpdmUgYW5kIHN0cmVuZ3RoZW4gdGhlIGRlY2xpbmluZyBwYW5jaGF5YXRpIHJhaiBzeXN0ZW0gaW4gdGhlIGNvdW50cnkuICAgICAgIFBhaXIgMyBpcyBjb3JyZWN0LiBHLlYuSy4gUmFvIGNvbW1pdHRlZSB3YXMgYXBwb2ludGVkIGJ5IHRoZSBQbGFubmluZyBDb21taXNzaW9uIGluIDE5ODUgdG8gcmV2aWV3IHRoZSAgIGV4aXN0aW5nIEFkbWluaXN0cmF0aXZlIEFycmFuZ2VtZW50cyBmb3IgUnVyYWwgRGV2ZWxvcG1lbnQgYW5kIFBvdmVydHkgQWxsZXZpYXRpb24gUHJvZ3JhbW1lcy4gVGhlICAgRy5WLksuIFJhbyBDb21taXR0ZWUgKDE5ODUpIHJlY29tbWVuZGVkIG1ha2luZyB0aGUgJ2Rpc3RyaWN0JyBhcyB0aGUgYmFzaWMgdW5pdCBvZiBwbGFubmluZy4gVGhlICAgY29tbWl0dGVlIHJlY29tbWVuZGVkIHRoYXQgdGhlIFBhbmNoYXlhdGkgUmFqIGluc3RpdHV0aW9ucyBhdCB0aGUgZGlzdHJpY3QgYW5kIGxvd2VyIGxldmVscyBzaG91bGQgYmUgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgYXNzaWduZWQgYW4gaW1wb3J0YW50IHJvbGUgd2l0aCByZXNwZWN0IHRvIHBsYW5uaW5nLCBpbXBsZW1lbnRhdGlvbiBhbmQgbW9uaXRvcmluZyBvZiBydXJhbCAgIGRldmVsb3BtZW50IHByb2dyYW1tZXMuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTS4gTGF4bWlrYW50aCwgQ2hhcHRlci0zOCwgUGFuY2hheWF0aSBSYWogICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "3 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements with  respect to the reforms undertaken by the  Government of India for panchayats:   1.  The Rajiv Gandhi government  constitutionalized the Panchayati raj  institutions in the country.   2.  Even though Panchayati system existed in  India prior to the enactment of 73rd  Constitutional Amendment Act, 1992,  elections were never held to these bodies.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBSYWppdiBHYW5kaGkgR292ZXJubWVudCBpbnRyb2R1Y2VkIHRoZSA2NHRoIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCAgIEJpbGwgaW4gdGhlIExvayBTYWJoYSBpbiAxOTg5IHRvIGNvbnN0aXR1dGlvbmFsaXNlIFBhbmNoYXlhdGkgcmFqIGluc3RpdHV0aW9ucyBhbmQgbWFrZSB0aGVtIG1vcmUgICBwb3dlcmZ1bCBhbmQgYnJvYWQgYmFzZWQuIEFsdGhvdWdoLCB0aGUgTG9rIFNhYmhhIHBhc3NlZCB0aGUgYmlsbCBpbiAxOTg5LCBpdCB3YXMgbm90IGFwcHJvdmVkIGJ5IHRoZSAgIFJhanlhIFNhYmhhLiBUaGUgYmlsbCB3YXMgdmVoZW1lbnRseSBvcHBvc2VkIGJ5IHRoZSBvcHBvc2l0aW9uIG9uIHRoZSBncm91bmQgdGhhdCBpdCBzb3VnaHQgdG8gICBzdHJlbmd0aGVuIGNlbnRyYWxpc2F0aW9uIGluIHRoZSBmZWRlcmFsIHN5c3RlbS4gICBJdCB3YXMgUFYgTmFyc2ltaGEgUmFvIEdvdmVybm1lbnQgd2hpY2ggICBjb25zdGl0dXRpb25hbGl6ZSB0aGUgUGFuY2hheWF0aSByYWogaW5zdGl0dXRpb25zIGluIHRoZSBjb3VudHJ5IGJ5IHBhc3NpbmcgdGhlIDczcmQgYW5kIDc0dGggQ29uc3RpdHV0aW9uYWwgICBBbWVuZG1lbnQgQWN0LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogU2V2ZXJhbCBzdGF0ZSBnb3Zlcm5tZW50cyBlbmFjdCBuZXcgUGFuY2hheWF0IEFjdHMgYWZ0ZXIgMTk1MHMgYnJpbmdpbmcgaW4gICB0aHJlZS10aWVyIHBhbmNoYXlhdCBzeXN0ZW0uIFRoZSBmaXJzdCBlbGVjdGlvbnMgdW5kZXIgdGhlIFJhamFzdGhhbiBQYW5jaGF5YXQgU2FtaXRpcyBhbmQgWmlsbGEgICBQYXJpc2hhZHMgQWN0LCAxOTU5IHdlcmUgaGVsZCBpbiBTZXB0ZW1iZXItT2N0b2JlciAxOTU5LiBLYXJuYXRha2EgaGVsZCBwYW5jaGF5YXQgZWxlY3Rpb25zIGluIEphbnVhcnkgICAxOTg3LiBUaHVzLCBlbGVjdGlvbnMgd2VyZSBoZWxkIHRvIHRoZXNlIGJvZGllcyBwcmlvciB0byB0aGUgZW5hY3RtZW50IG9mIDczcmQgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50ICAgQWN0LiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTS4gTGF4bWlrYW50aCwgQ2hhcHRlci0zOCwgUGFuY2hheWF0aSBSYWogICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements with  reference to the local self-government in India:  1.  The first municipal corporation in India was  established by the Indian Councils Act, 1861.   2.  Lord Mayo's resolution advocated financial  decentralisation for functioning of local  bodies.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgaW5zdGl0dXRpb25zIG9mIHVyYmFuIGxvY2FsIGdvdmVybm1lbnQgb3JpZ2luYXRlZCBhbmQgZGV2ZWxvcGVkIGluIG1vZGVybiBJbmRpYSBkdXJpbmcgdGhlIHBlcmlvZCAgIG9mIEJyaXRpc2ggcnVsZS4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgZmlyc3QgbXVuaWNpcGFsIGNvcnBvcmF0aW9uIGluIEluZGlhIHdhcyBzZXQgdXAgYXQgTWFkcmFzIGluIDE2ODggKGFuZCBub3QgICBieSB0aGUgSW5kaWFuIENvdW5jaWxzIEFjdCBvZiAxODYxKS4gTGF0ZXIgaW4gMTcyNiwgdGhlIG11bmljaXBhbCBjb3Jwb3JhdGlvbnMgd2VyZSBzZXQgdXAgaW4gQm9tYmF5IGFuZCAgIENhbGN1dHRhLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogTG9yZCBNYXlvJ3MgUmVzb2x1dGlvbiBvZiAxODcwIG9uIGZpbmFuY2lhbCBkZWNlbnRyYWxpc2F0aW9uIHZpc3VhbGlzZWQgdGhlICAgZGV2ZWxvcG1lbnQgb2YgbG9jYWwgc2VsZi1nb3Zlcm5tZW50IGluc3RpdHV0aW9ucy4gTWF5bydzIFJlc29sdXRpb24gZW1waGFzaXNlZCBvbiBsb2NhbCBpbnRlcmVzdCwgICBzdXBlcnZpc2lvbiBhbmQgY2FyZSBmb3Igc3VjY2VzcyBpbiB0aGUgbWFuYWdlbWVudCBvZiB0aGUgZnVuZHMgZGV2b3RlZCB0byBlZHVjYXRpb24sIHNhbml0YXRpb24sICAgbWVkaWNhbCByZWxpZWYgYW5kIGxvY2FsIHB1YmxpYyB3b3Jrcy4gSW4gdGhpcyByZWdhcmQsIHRoZSB2YXJpb3VzIHByb3ZpbmNpYWwgZ292ZXJubWVudHMgc3VjaCBhcyBpbiBCZW5nYWwsICAgTWFkcmFzLCBOb3J0aC1XZXN0ZXJuIFByb3ZpbmNlLCBQdW5qYWIsIHBhc3NlZCBtdW5pY2lwYWwgYWN0cyB0byBpbXBsZW1lbnQgdGhlIHBvbGljeSBvdXRsaW5lZC4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5LCBNLiBMYXhtaWthbnRoLCBDaGFwdGVyLTM5LCBNdW5pY2lwYWxpdGllcyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2        "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements:   1.  The directive principles of state policy  provide for the organization of village  panchayats to enable them to function as  units of self-government.   2.  The State List under the Seventh Schedule  mentions the constitution of the local  government.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgc3ViamVjdCBvZiBsb2NhbCBnb3Zlcm5tZW50IGlzIG1lbnRpb25lZCBpbiB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgYXMgb25lICAgb2YgdGhlIHBvbGljeSBkaXJlY3RpdmVzIHRvIGFsbCBnb3Zlcm5tZW50cyBpbiB0aGUgY291bnRyeS4gQXMgcGVyIEFydGljbGUgNDAsIHRoZSBTdGF0ZSBzaGFsbCB0YWtlIHN0ZXBzIHRvICAgb3JnYW5pc2UgdmlsbGFnZSBwYW5jaGF5YXRzIGFuZCBlbmRvdyB0aGVtIHdpdGggc3VjaCBwb3dlcnMgYW5kIGF1dGhvcml0eSBhcyBtYXkgYmUgbmVjZXNzYXJ5IHRvICAgZW5hYmxlIHRoZW0gdG8gZnVuY3Rpb24gYXMgdW5pdHMgb2Ygc2VsZi1nb3Zlcm5tZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgc3ViamVjdCBvZiAnTG9jYWwgR292ZXJubWVudCcgaXMgbWVudGlvbmVkIGluIHRoZSBTdGF0ZSBMaXN0IHVuZGVyIHRoZSAgIFNldmVudGggU2NoZWR1bGUgb2YgdGhlIENvbnN0aXR1dGlvbi4gRW50cnkgNSBvZiB0aGUgU3RhdGUgTGlzdCBtZW50aW9uczogJ0xvY2FsIGdvdmVybm1lbnQsIHRoYXQgaXMgdG8gICBzYXksIHRoZSBjb25zdGl0dXRpb24gYW5kIHBvd2VycyBvZiBtdW5pY2lwYWwgY29ycG9yYXRpb25zLCBpbXByb3ZlbWVudCB0cnVzdHMsIGRpc3RyaWN0cyBib2FyZHMsICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIG1pbmluZyBzZXR0bGVtZW50IGF1dGhvcml0aWVzIGFuZCBvdGhlciBsb2NhbCBhdXRob3JpdGllcyBmb3IgdGhlIHB1cnBvc2Ugb2YgbG9jYWwgc2VsZi1nb3Zlcm5tZW50IG9yICAgdmlsbGFnZSBhZG1pbmlzdHJhdGlvbicuICAgIFNvdXJjZTogSW5kaWFuIENvbnN0aXR1dGlvbiBhdCBXb3JrLCBDaGFwdGVyLTgsIExvY2FsIEdvdmVybm1lbnRzLCBQZy4gMTgwICAgIGh0dHA6Ly9jb25zdGl0dXRpb25vZmluZGlhLmV0YWwuaW4vc2NoZWR1bGVfN18yLyM6fjp0ZXh0PTUuLGFuZCUyMHNhbml0YXRpb24lM0IlMjBob3NwaXRhbHMlMjBhbiAgZCUyMGRpc3BlbnNhcmllcy4gICAgaHR0cDovL3d3dy5tZWEuZ292LmluL0ltYWdlcy9wZGYxL1BhcnQ0LnBkZiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 35,
      "question" : "With reference to minorities in India,  consider the following statements:   1.  The Central Government notifies minority  communities specific to a State under the  National Commission for Minorities Act,  1992.   2.  In 2014 Jews were notified as minority  communities in India.   3.  The Supreme Court in various cases has  held that the unit for determining the status  of both linguistic and religious minorities  would be 'state'.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gZG9lcyBub3QgZGVmaW5lIHRoZSB0ZXJtICdtaW5vcml0aWVzJyBhbnl3aGVyZSwgYnV0IG9ubHkgbWVudGlvbnMgaXQgaW4gc29tZSBBcnRpY2xlcy4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgQ2VudHJhbCBHb3Zlcm5tZW50IG5vdGlmaWVzIG1pbm9yaXR5IGNvbW11bml0aWVzIGF0IHRoZSBuYXRpb25hbCBsZXZlbCBpbiAgIGNvbnN1bHRhdGlvbiB3aXRoIHZhcmlvdXMgc3Rha2Vob2xkZXJzIHVuZGVyIFNlY3Rpb24gMiAoYykgb2YgdGhlIE5hdGlvbmFsIENvbW1pc3Npb24gZm9yIE1pbm9yaXRpZXMgICAoTkNNKSBBY3QsIDE5OTIuICBUaGUgc2l4IGNvbW11bml0aWVzIG5vdGlmaWVkIGFzIG1pbm9yaXR5IGNvbW11bml0aWVzIHVuZGVyIFNlY3Rpb24gMihjKSBvZiB0aGUgTkNNICAgQWN0LCAxOTkyIGFyZSBDaHJpc3RpYW5zLCBTaWtocywgTXVzbGltcywgQnVkZGhpc3RzLCBQYXJzaXMgYW5kIEphaW5zLiBOb3RpZmljYXRpb24gb2YgYW55IGNvbW11bml0eSAgIHNwZWNpZmljIHRvIGEgU3RhdGUgYXMgbWlub3JpdHkgY29tbXVuaXR5IHdpdGhpbiBhIFN0YXRlIGNvbWVzIHVuZGVyIHRoZSBwdXJ2aWV3IG9mIHRoZSBTdGF0ZSAgIGNvbmNlcm5lZC4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJbml0aWFsbHksIGZpdmUgcmVsaWdpb3VzIGNvbW11bml0aWVzIG5hbWVseSBNdXNsaW1zLCBDaHJpc3RpYW5zLCBTaWtocywgICBCdWRkaGlzdHMsIGFuZCBab3JvYXN0cmlhbnMgKFBhcnNpcykgd2VyZSBub3RpZmllZCBhcyBtaW5vcml0eSBjb21tdW5pdGllcy4gSW4gMjAxNCwgSmFpbnMgd2VyZSBhbHNvICAgbm90aWZpZWQgYXMgYW5vdGhlciBtaW5vcml0eSBjb21tdW5pdHkuIEpld3MgYXJlIG5vdCBub3RpZmllZCBhcyBtaW5vcml0eSBjb21tdW5pdHkgaW4gd2hvbGUgb2YgICBJbmRpYS4gSG93ZXZlciwgTWFoYXJhc2h0cmEgbm90aWZpZWQgJ0pld3MnIGFzIGEgbWlub3JpdHkgY29tbXVuaXR5IGluIHRoZSBzdGF0ZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBJbiBUTUEgUEFJIENhc2UsIFN1cHJlbWUgQ291cnQgZGVhbHQgd2l0aCB0aGUgcXVlc3Rpb24gb2YgdGhlIHNjb3BlIG9mIHJpZ2h0cyBvZiAgIG1pbm9yaXRpZXMgdG8gZXN0YWJsaXNoIGFuZCBhZG1pbmlzdGVyIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucyBvZiB0aGVpciBjaG9pY2UgdW5kZXIgdGhlIENvbnN0aXR1dGlvbi4gICBXaGlsZSBkZWxpdmVyaW5nIGp1ZGdtZW50LCB0aGUgY291cnQgcmVqZWN0ZWQgdGhlIGNvbnRlbnRpb24gdGhhdCBzaW5jZSBIaW5kdXMgd2VyZSBhIG1ham9yaXR5IGluIEluZGlhLCAgIHRoZXkgY291bGQgbm90IGJlIGEgcmVsaWdpb3VzIG1pbm9yaXR5IGluIHRoZSBTdGF0ZSBvZiBQdW5qYWIgYXMgaXQgdG9vayB0aGUgU3RhdGUgYXMgdGhlIHVuaXQgdG8gZGV0ZXJtaW5lICAgd2hldGhlciB0aGUgSGluZHVzIHdlcmUgYSBtaW5vcml0eSBjb21tdW5pdHkuIFRoZXJlZm9yZSwgdGhpcyBqdWRnbWVudCBoZWxkIHRoYXQgdGhlIHVuaXQgdG8gICBkZXRlcm1pbmUgYSByZWxpZ2lvdXMgb3IgbGluZ3Vpc3RpYyBtaW5vcml0eSBjYW4gb25seSBiZSB0aGUgU3RhdGUgKG5vdCBuYXRpb24pLiAgICBJbiAyMDA1LCB0aGUgU0MgaW4gaXRzIGp1ZGdtZW50IGluICdCYWwgUGF0aWwnIHJlZmVycmVkIHRvIHRoZSBUTUEgUGFpIHJ1bGluZywgYW5kIHNhaWQgdGhhdCB0aGUgdmVyZGljdCBpbiB0aGUgICBUTUEgUGFpIEZvdW5kYXRpb24gY2FzZSAoc3VwcmEpIGhhcyBjbGFyaWZpZWQgdGhhdCB0aGUgdW5pdCBmb3IgZGV0ZXJtaW5pbmcgdGhlIHN0YXR1cyBvZiBib3RoIGxpbmd1aXN0aWMgICBhbmQgcmVsaWdpb3VzIG1pbm9yaXRpZXMgd291bGQgYmUgJ3N0YXRlJy4gICAgU291cmNlOiAgRXhwbGFpbmVkOiBXaG8gaXMgYSAnbWlub3JpdHknIGluIEluZGlhPyBIZXJlJ3Mgd2hhdCBjb3VydHMgaGF2ZSBzYWlkIC1Gb3J1bUlBUyBCbG9nICAgIFJldmFsdWF0aW9uIG9mIE1pbm9yaXR5IENvbW1pc3Npb24gLUZvcnVtSUFTIEJsb2cgICAgTGF4bWlrYW50aCAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 36,
      "question" : "Which of the following is the role played  by the cooperatives?     1.  Promoting the ideals of democracy.    2.  Members do not have to bear personal  liability for the debts of the society.    3.  Reduction in the costs of management and  operations.    4.  It establishes a direct link between effort  and reward.    Select the correct answer from the code given  below:     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgQSBjby1vcGVyYXRpdmUgaXMgYSB2b2x1bnRhcnkgYXNzb2NpYXRpb24gb2YgcGVvcGxlIHdpdGggY29sbGVjdGl2ZWx5IG93bmVkIGZ1bmQsIG9yZ2FuaXplZCBvbiB0aGUgICBkZW1vY3JhdGljIHByaW5jaXBsZSBvZiBlcXVhbGl0eSwgd2hvIGpvaW4gdG9nZXRoZXIgdG8gc3VwcGx5IGZvciB0aGVpciByZXF1aXJlbWVudHMgdGhyb3VnaCBtdXR1YWwgICBhY3Rpb24sIGFuZCBpbiB3aGljaCB0aGUgb2JqZWN0aXZlIGlzIHNlcnZpY2UgcmF0aGVyIHRoYW4gcHJvZml0LiBUaGUgcHJpbWFyeSBvYmplY3RpdmUgb2YgZm9ybWluZyBhIGNvLSAgb3BlcmF0aXZlIGlzIHRvIHByb3RlY3QgdGhlIGVjb25vbWljYWxseSB3ZWFrZXIgc2VjdGlvbnMgb2YgdGhlIHNvY2lldHkgZnJvbSB0aGUgb3BwcmVzc2lvbiBvZiB0aGUgICBlY29ub21pY2FsbHkgb3JnYW5pemVkIHN0cm9uZyBzZWdtZW50IG9mIHRoZSBzb2NpZXR5LiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQSBDb29wZXJhdGl2ZSBTb2NpZXR5IGlzIGNvbnRyb2xsZWQgaW4gYSBkZW1vY3JhdGljIG1hbm5lci4gSXQncyBiYXNlZCBvbiB0aGUgICBwcmVjZXB0IG9mIG9uZSBtYW4gb25lIHZvdGUuIEFsbCBjb250cmlidXRvcnMgaGF2ZSBpZGVudGljYWwgcmlnaHRzIGFuZCBtYXkgaGF2ZSBhIHZvaWNlIGluIHRoZWlyICAgbWFuYWdlbWVudC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBsaWFiaWxpdHkgb2YgdGhlIG1lbWJlcnMgb2YgYSBjby1vcGVyYXRpdmUgc29jaWV0eSBpcyBsaW1pdGVkIHRvIHRoZSBleHRlbnQgb2YgICBjYXBpdGFsIGNvbnRyaWJ1dGVkIGJ5IHRoZW0uIFRoZXkgZG8gbm90IGhhdmUgdG8gYmVhciBwZXJzb25hbCBsaWFiaWxpdHkgZm9yIHRoZSBkZWJ0cyBvZiB0aGUgc29jaWV0eS4gICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgb3BlcmF0aW9uIG9mIGEgY29vcGVyYXRpdmUgc29jaWV0eSBpcyBlY29ub21pY2FsIGR1ZSB0byBlbGltaW5hdGlvbiBvZiAgIG1pZGRsZW1lbiBhbmQgdGhlIHZvbHVudGFyeSBzZXJ2aWNlcyBwcm92aWRlZCBieSBpdHMgbWVtYmVycy4gU29tZSBvZiB0aGUgZXhwZW5zZXMgb2YgdGhlICAgbWFuYWdlbWVudCBhcmUgc2F2ZWQgYnkgdGhlIHZvbHVudGFyeSBzZXJ2aWNlcyByZW5kZXJlZCBieSB0aGUgbWVtYmVycy4gVGhlIHNvY2lldHkgaXMgbm90IHJlcXVpcmVkICAgdG8gc3BlbmQgbGFyZ2UgYW1vdW50IG9uIG1hbmFnZXJpYWwgcGVyc29ubmVsLiAgICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBUaGUgcHJpbmNpcGxlIHVuZGVybHlpbmcgYSBjby1vcGVyYXRpdmUgb3JnYW5pemF0aW9uIGlzIG11dHVhbCBoZWxwLCBpLmUuLCAnZWFjaCAgIGZvciBhbGwgYW5kIGFsbCBmb3IgZWFjaCcuIEEgY29vcGVyYXRpdmUgc29jaWV0eSBpcyBmb3JtZWQgZm9yIG11dHVhbCBiZW5lZml0IGFuZCB0aGUgaW50ZXJlc3Qgb2YgaW5kaXZpZHVhbCAgIG1lbWJlcnMgaXMgbm90IGZ1bGx5IHNhdGlzZmllZC4gVGhlcmUgaXMgbm8gZGlyZWN0IGxpbmsgYmV0d2VlbiBlZmZvcnQgYW5kIHJld2FyZC4gU28sIHRoZSBtZW1iZXJzIGFyZSAgIG5vdCBpbmNsaW5lZCB0byBwdXQgdGhlaXIgYmVzdCBlZmZvcnRzIGluIGEgY29vcGVyYXRpdmUgc29jaWV0eS4gICAgIFNvdXJjZTogQWR2YW50YWdlcyBhbmQgRGlzYWR2YW50YWdlcyBvZiBDb29wZXJhdGl2ZSBTb2NpZXR5ICAgICAgaHR0cHM6Ly93d3cuaWJlZi5vcmcvZG93bmxvYWQvMTY0NjIwNjA1N19kOGM5OGFmZjcyNDUyZDVmNWRkZS5wZGYgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only    ",
        "option2" : "2 and 4 only    ",
        "option3" : "1, 2 and 3 only    ",
        "option4" : "2, 3 and 4 only        \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the 73rd amendment Act  of 1992, consider the following statements:   1.  The act applies to all union territories.   2.  The provisions of the act do not apply to the  states of Arunachal Pradesh, Jharkhand and  Nagaland.   3.  The President may extend the provisions of  this act to the scheduled areas and tribal  areas subject to certain exceptions.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgNzNyZCBBbWVuZG1lbnQgQWN0LCAxOTkyIGFkZGVkIGEgbmV3IFBhcnQtSVggYW5kIGEgbmV3IEVsZXZlbnRoIFNjaGVkdWxlIHRvIHRoZSBDb25zdGl0dXRpb24uICAgVGhpcyBwYXJ0IGlzIGVudGl0bGVkIGFzICdUaGUgUGFuY2hheWF0cycgYW5kIGNvbnNpc3RzIG9mIHByb3Zpc2lvbnMgZnJvbSBBcnRpY2xlcyAyNDMgdG8gMjQzIE8uICAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIHByb3Zpc2lvbnMgb2YgUGFydC1JWCBQYXJ0IGFyZSBhcHBsaWNhYmxlIHRvIHRoZSBVbmlvbiB0ZXJyaXRvcmllcy4gQnV0IHRoZSAgIFByZXNpZGVudCBtYXkgZGlyZWN0IHRoYXQgdGhleSB3b3VsZCBhcHBseSB0byBhIFVuaW9uIHRlcnJpdG9yeSBzdWJqZWN0IHRvIHN1Y2ggZXhjZXB0aW9ucyBhbmQgICBtb2RpZmljYXRpb25zIGFzIGhlIG1heSBzcGVjaWZ5LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSA3M3JkIEFtZW5kbWVudCBBY3QsIDE5OTIgZG9lcyBub3QgYXBwbHkgdG8gdGhlIHN0YXRlcyBvZiBOYWdhbGFuZCwgICBNZWdoYWxheWEgYW5kIE1pem9yYW0gYW5kIGNlcnRhaW4gb3RoZXIgYXJlYXMuIFRoZXNlIGFyZWFzIGluY2x1ZGU6ICAgIDEpIHRoZSBzY2hlZHVsZWQgYXJlYXMgYW5kIHRoZSB0cmliYWwgYXJlYXMgaW4gdGhlIHN0YXRlcyAgICAyKSB0aGUgaGlsbCBhcmVhcyBvZiBNYW5pcHVyIGZvciB3aGljaCBkaXN0cmljdCBjb3VuY2lscyBleGlzdCAgICAzKSBEYXJqZWVsaW5nIGRpc3RyaWN0IG9mIFdlc3QgQmVuZ2FsIGZvciB3aGljaCBEYXJqZWVsaW5nIEdvcmtoYSBIaWxsIENvdW5jaWwgZXhpc3RzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBQYXJsaWFtZW50IChhbmQgbm90IHRoZSBQcmVzaWRlbnQpIG1heSBleHRlbmQgdGhlIHByb3Zpc2lvbnMgb2YgdGhpcyBQYXJ0ICAgdG8gdGhlIHNjaGVkdWxlZCBhcmVhcyBhbmQgdHJpYmFsIGFyZWFzIHN1YmplY3QgdG8gc3VjaCBleGNlcHRpb25zIGFuZCBtb2RpZmljYXRpb25zIGFzIGl0IG1heSBzcGVjaWZ5LiAgIFVuZGVyIHRoaXMgcHJvdmlzaW9uLCB0aGUgUGFybGlhbWVudCBoYXMgZW5hY3RlZCB0aGUgJ1Byb3Zpc2lvbnMgb2YgdGhlIFBhbmNoYXlhdHMgKEV4dGVuc2lvbiB0byB0aGUgICBTY2hlZHVsZWQgQXJlYXMgQWN0JywgMTk5NiwgcG9wdWxhcmx5IGtub3duIGFzIHRoZSBQRVNBIEFjdCBvciB0aGUgRXh0ZW5zaW9uIEFjdC4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5LCBNLiBMYXhtaWthbnRoLCBDaGFwdGVyLTM4LCBQYW5jaGF5YXRpIFJhaiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following are the principles  of Gram Swaraj propounded by Mahatma  Gandhi?   1. Swadeshi products   2. Nai Talim   3. Bottom-up planning process    4. Reconstruction of rural areas  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHYW5kaGlhbiBHcmFtIFN3YXJhaiBpcyBiYXNlZCBvbiBjZXJ0YWluIHByaW5jaXBsZXMgc3VjaCBhcyBodW1hbiBiZWluZ3MnIHN1cHJlbWFjeSwgZnVsbCBlbXBsb3ltZW50LCAgIGVxdWFsaXR5LCBTd2FkZXNoaSwgdHJ1c3RlZXNoaXAsIHNlbGYtc3VmZmljaWVuY3kgYW5kIGNvb3BlcmF0aW9uLCBOYWkgVGFsaW0sIGRlY2VudHJhbGlzYXRpb24uICAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IEEgdmlsbGFnZSB3b3VsZCBiZWNvbWUgc2VsZi1zdWZmaWNpZW50IHdoZW4gdGhlIHZpbGxhZ2UgcmVzaWRlbnRzIHdpbGwgdXNlIHRoZSBsb2NhbCAgIHByb2R1Y3QgYW5kIHByb21vdGUgcnVyYWwgaW5kdXN0cmllcy4gVXNlIG9mIG1vcmUgbG9jYWwgcHJvZHVjdHMgYW5kIHByb21vdGlvbiBvZiBydXJhbCBpbmR1c3RyaWVzICAgbWVhbnMgYW4gaW5jcmVhc2UgaW4gaW5jb21lIGJlY2F1c2Ugb2YgZnJ1aXRmdWwgZW1wbG95bWVudCBhbmQgaW5jcmVhc2VkIHByb2R1Y3Rpb24gYmVjYXVzZSBvZiBhbiAgIGluY3JlYXNlIGluIGxvY2FsIGRlbWFuZC4gSXQgd2lsbCBkaXJlY3RseSBzdXBwb3J0IHRoZSBsb2NhbCBwcm9kdWNlcnMgbGlrZSBmYXJtZXJzLCBhcnRpc2FuLCB3ZWF2ZXJzIGV0Yy4gICBVc2Ugb2YgbG9jYWwgcHJvZHVjdHMgbWVhbnMgdGhlIHVzZSBvZiBTd2FkZXNoaSwgYWNjb3JkaW5nIHRvIEdhbmRoaS4gSGlzIGlkZWEgb2YgU3dhZGVzaGkgd2FzICAgaW5mbHVlbmNlZCBieSBTd2FkaGFybWEgcGhpbG9zb3BoeSBvZiBHaXRhLCB3aGljaCBtZWFucyBvbmUncyBmdW5kYW1lbnRhbCBuYXR1cmUuICAgICAgT3B0aW9uIDIgaXMgY29ycmVjdDogTmFpIFRhbGltIGlzIGFub3RoZXIgaW50ZWdyYWwgcGFydCBvZiBHYW5kaGlhbiBHcmFtIFN3YXJhai4gSXQgaXMgYSBjcmFmdC1iYXNlZCAgIGVkdWNhdGlvbiBzeXN0ZW0gd2hlcmUgbGVhcm5lcnMgYXJlIGJlaW5nIHRhdWdodCBwcmFjdGljYWwgc2tpbGxzLCBlbXBoYXNpc2luZyBzcGlyaXR1YWwsIGN1bHR1cmFsIGFuZCAgIHNvY2lhbCBkZXZlbG9wbWVudC4gSGUgcmVhbGlzZWQgdGhhdCBsZWFybmVycycgc3Bpcml0IGNvdWxkIG5vdCBiZSB0cmFpbmVkIG9ubHkgdGhyb3VnaCBib29rczsgaW5zdGVhZCwgaXQgaXMgICBuZWNlc3NhcnkgdG8gaW50cm9kdWNlIHRoZSBsZWFybmVycyB3aXRoIHRoZSBodW1hbiBlbnZpcm9ubWVudCdzIHByYWN0aWNhbCBjb25jZXB0LiAgICAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgT3B0aW9uIDMgaXMgY29ycmVjdDogTWFoYXRtYSBHYW5kaGkgY29uc2lkZXJlZCB0aGF0IGluZGVwZW5kZW5jZSBtdXN0IGJlZ2luIGF0IHRoZSBib3R0b20sIGFuZCAgIGVjb25vbWljIGluZGVwZW5kZW5jZSBjYW5ub3QgYmUgc2VwYXJhdGVkIGZyb20gcG9saXRpY2FsIGluZGVwZW5kZW5jZS4gUG9saXRpY2FsIGluZGVwZW5kZW5jZSAgIHdpdGhvdXQgZWNvbm9taWMgaW5kZXBlbmRlbmNlIGhhcyBubyBtZWFuaW5nLiBUaHVzLCBoZSBhZHZvY2F0ZWQgYm90dG9tLXVwIHBsYW5uaW5nIHByb2Nlc3MuICAgIE9wdGlvbiA0IGlzIGNvcnJlY3Q6IE1haGF0bWEgR2FuZGhpIGNvbnNpZGVyZWQgYSBuZWVkIGZvciByZWNvbnN0cnVjdGlvbiBvZiBydXJhbCBhcmVhcyB0byBhY2hpZXZlIHRoZSAgIHJlYWwgZ29hbCBvZiBJbmRpYSdzIGluZGVwZW5kZW5jZS4gQSB2aWxsYWdlLCBhY2NvcmRpbmcgdG8gaGlzIGNvbmNlcHQgR3JhbSBTd2FyYWogc2hvdWxkIGJlIGEgc2VsZi0gIHN1ZmZpY2llbnQgdW5pdCBpbmRlcGVuZGVudCBvZiBvdGhlcnMgYnV0IGluZGl2aWR1YWxzIGFyZSBpbnRlcmRlcGVuZGVudCBvZiBlYWNoIG90aGVyLiBHYW5kaGkgICBjb25zaWRlcmVkIHRoYXQgbGFjayBvZiBzZWxmLXN1ZmZpY2llbmN5IGxlYWRzIHRvIGV4cGxvaXRhdGlvbiBvZiBwb29yIGluIHRoZSBoYW5kIG9mIHJpY2ggYW5kIHZpbGxhZ2UgaW4gICBjaXRpZXMnIGhhbmQuIFNvLCB0aGUgR2FuZGhpYW4gcGhpbG9zb3BoeSBvZiBzZWxmLXN1ZmZpY2llbmN5IHdhcyBtYWlubHkgaW5mbHVlbmNlZCBieSBlY29ub21pYyBlcXVhbGl0eS4gICBUbyBlbmhhbmNlIHRoZWlyIGluY29tZSwgdGhlIHJ1cmFsIGhvdXNlaG9sZCBtdXN0IGZvY3VzIG9uIG90aGVyIHNvdXJjZXMgb2YgaW5jb21lIGFsb25nIHdpdGggICBhZ3JpY3VsdHVyZS4gSW4gcnVyYWwgSW5kaWEsIHZpbGxhZ2UgY290dGFnZSBhbmQgc21hbGwtc2NhbGUgaW5kdXN0cmllcyBtYXkgZnVsZmlsIHRoaXMgZ2FwLiAgICBLbm93bGVkZ2UgQmFzZTogICAgIFRoZSBwcmluY2lwbGVzIEdyYW0gU3dhcmFqIGNhbiBiZSBzdW1tYXJpc2VkIGFzIGZvbGxvd3MuICAgIDEpIEluZGlhIGxpdmVzIGluIGl0cyB2aWxsYWdlcywgbm90IGluIGNpdGllcy4gICAgMikgUnVyYWwgcmVjb25zdHJ1Y3Rpb24gaXMgYmFzZWQgb24gdGhlIG5vbi1leHBsb2l0YXRpb24gb2YgcnVyYWwgYXJlYXMuICAgIDMpIE1vcmFsIGFuZCBldGhpY2FsIHZhbHVlcyBhcmUgdml0YWwgdGhhbiBtYXRlcmlhbGlzdGljIGdhaW4uICAgIDQpIFNhcnZvZGF5YSAtIHRoZSB3ZWxmYXJlIG9mIGFsbCAgICA1KSBQcm9tb3Rpb24gYW5kIHVzZSBvZiBTd2FkZXNoaSBwcm9kdWN0cyAgICA2KSBWaWxsYWdlIGluZHVzdHJpYWxpc2F0aW9uIHRocm91Z2ggc21hbGwgc2NhbGUgYW5kIGNvdHRhZ2UgaW5kdXN0cmllcy4gICAgNykgRWFjaCBpbmRpdmlkdWFsIG11c3QgcGVyZm9ybSB0aGVpciBkdXR5IHRvd2FyZHMgdGhlIHN0YXRlLiAgICA4KSBEZWNpc2lvbiBtYWtpbmcgc2hvdWxkIGJlIGxpZXMgaW4gcGVvcGxlJ3MgaGFuZC4gICAgOSkgQm90dG9tLXVwIHBsYW5uaW5nIHByb2Nlc3MgICAgU291cmNlOiBodHRwczovL3d3dy5ta2dhbmRoaS5vcmcvYXJ0aWNsZXMvZ3JhbS1zd2FyYWotaXRzLXJlbGV2YW5jZS1pbi1wcmVzZW50LWNvbnRleHQuaHRtbCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "1, 3 and 4 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements with  reference to the president's powers with  respect to Ladakh:   1.  Union territory of Ladakh is administered by  the President acting through a Lieutenant  Governor appointed by him.   2.  The Ladakh Autonomous Hill Development  Council was created by the Jammu and  Kashmir Reorganisation Act, 2019.  3.  The Union territory of Ladakh has two  Autonomous Hill development councils.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBBZG1pbmlzdHJhdGlvbiBvZiBVbmlvbiBUZXJyaXRvcnkgb2YgTGFkYWtoIGlzIHRoZSBnb3Zlcm5pbmcgYXV0aG9yaXR5IG9mIHRoZSBJbmRpYW4gdW5pb24gdGVycml0b3J5ICAgb2YgTGFkYWtoIGFuZCBpdHMgdHdvIGRpc3RyaWN0cy4gVGhlIEFkbWluaXN0cmF0aW9uIGlzIGxlZCBieSBhIExpZXV0ZW5hbnQgR292ZXJub3IgYXBwb2ludGVkIGJ5IHRoZSAgIFByZXNpZGVudCBvZiBJbmRpYSB3aG8gYWN0cyBvbiBiZWhhbGYgb2YgdGhlIGNlbnRyYWwgR292ZXJubWVudCBvZiBJbmRpYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBMYWRha2ggaXMgYWRtaW5pc3RlcmVkIGFzIGEgdW5pb24gdGVycml0b3J5IHdpdGhvdXQgYSBsZWdpc2xhdGl2ZSBhc3NlbWJseSBieSAgIHZpcnR1ZSBvZiBBcnRpY2xlIDI0MCBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGFuZCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEphbW11IGFuZCBLYXNobWlyICAgUmVvcmdhbml6YXRpb24gQWN0LCAyMDE5LiBVbmlvbiB0ZXJyaXRvcnkgb2YgTGFkYWtoIGlzIGFkbWluaXN0ZXJlZCBieSB0aGUgUHJlc2lkZW50IGFjdGluZyB0aHJvdWdoIGEgICBMaWV1dGVuYW50IEdvdmVybm9yIHRvIGJlIGFwcG9pbnRlZCBieSBoaW0gdW5kZXIgQXJ0aWNsZSAyMzkuICBBbiBhZG1pbmlzdHJhdG9yIG9mIGEgdW5pb24gdGVycml0b3J5IGlzICAgYW4gYWdlbnQgb2YgdGhlIFByZXNpZGVudCBhbmQgbm90IGhlYWQgb2Ygc3RhdGUgbGlrZSBhIGdvdmVybm9yLiBUaGUgUHJlc2lkZW50IGNhbiBzcGVjaWZ5IHRoZSBkZXNpZ25hdGlvbiAgIG9mIGFuIGFkbWluaXN0cmF0b3I7IGl0IG1heSBiZSBMaWV1dGVuYW50IEdvdmVybm9yIG9yIENoaWVmIENvbW1pc3Npb25lciBvciBBZG1pbmlzdHJhdG9yLiBBdCAgIHByZXNlbnQsIGl0IGlzIExpZXV0ZW5hbnQgR292ZXJub3IgaW4gdGhlIGNhc2Ugb2YgRGVsaGksIFB1ZHVjaGVycnksIEFuZGFtYW4gYW5kIE5pY29iYXIgSXNsYW5kcywgICBKYW1tdSBhbmQgS2FzaG1pciBhbmQgTGFkYWtoIGFuZCBBZG1pbmlzdHJhdG9yIGluIHRoZSBjYXNlIG9mIENoYW5kaWdhcmgsIERhZHJhIGFuZCBOYWdhciBIYXZlbGksICAgRGFtYW4gYW5kIERpdSBhbmQgTGFrc2hhZHdlZXAuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIExhZGFraCBBdXRvbm9tb3VzIEhpbGwgRGV2ZWxvcG1lbnQgQ291bmNpbCAoTEFIREMpLCBMZWggaXMgYW4gICBhdXRvbm9tb3VzIGRpc3RyaWN0IGNvdW5jaWwgdGhhdCBhZG1pbmlzdGVycyB0aGUgTGVoIGRpc3RyaWN0IG9mIExhZGFraC4gVGhlIGNvdW5jaWwgd2FzIGNyZWF0ZWQgdW5kZXIgICB0aGUgTGFkYWtoIEF1dG9ub21vdXMgSGlsbCBEZXZlbG9wbWVudCBDb3VuY2lsIEFjdCBvZiAxOTk1LiBUaGUgY291bmNpbCBjYW1lIGludG8gYmVpbmcgYWZ0ZXIgICBob2xkaW5nIHRoZSBmaXJzdCBlbGVjdGlvbnMgb24gQXVndXN0IDI4LCAxOTk1LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIExhZGFraCBkb2VzIG5vdCBoYXZlIGFuIGVsZWN0ZWQgbGVnaXNsYXRpdmUgYXNzZW1ibHkuIFRoZSB0d28gZGlzdHJpY3RzIG9mICAgTGFkYWtoIGJvdGggZWxlY3QgdGhlaXIgb3duIGF1dG9ub21vdXMgZGlzdHJpY3QgY291bmNpbC10aGUgTGVoIEF1dG9ub21vdXMgSGlsbCBkZXZlbG9wbWVudCBjb3VuY2lsICAgYW5kIHRoZSBLYXJnaWwgQXV0b25vbW91cyBIaWxsIGRldmVsb3BtZW50IENvdW5jaWwsIHdoaWNoIGhhdmUgY29tcGV0ZW5jZSBvdmVyIGEgcmFuZ2Ugb2YgZG9tZXN0aWMgICBhZmZhaXJzLiAgICBTb3VyY2U6IEluZGlhbiBwb2xpdHkgYnkgTSBMYXhtaWthbnRoLiA2dGggZWRpdGlvbi4gUGFnZSBuby44ODQuICAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3     "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following subjects is/are  part of the 11th Schedule of the Indian  Constitution?   1. Pilgrimages in India   2. Implementation of land consolidation   3. Rural electrification    4. Primary and secondary education  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYiBpcyBjb3JyZWN0OiBFbGV2ZW50aCBTY2hlZHVsZSBjb250YWlucyB0aGUgZm9sbG93aW5nIDI5IGZ1bmN0aW9uYWwgaXRlbXMgcGxhY2VkIHdpdGhpbiB0aGUgICBwdXJ2aWV3IG9mIHBhbmNoYXlhdHMuIFNvbWUgb2YgdGhlIGltcG9ydGFudCBpdGVtcyBhcmU6ICAgIDEpIEFncmljdWx0dXJlLCBpbmNsdWRpbmcgYWdyaWN1bHR1cmFsIGV4dGVuc2lvbiAgICAyKSBMYW5kIGltcHJvdmVtZW50LCBpbXBsZW1lbnRhdGlvbiBvZiBsYW5kIHJlZm9ybXMsIGxhbmQgY29uc29saWRhdGlvbiBhbmQgc29pbCBjb25zZXJ2YXRpb24gICAgMykgTWlub3IgaXJyaWdhdGlvbiwgd2F0ZXIgbWFuYWdlbWVudCBhbmQgd2F0ZXJzaGVkIGRldmVsb3BtZW50ICAgIDQpIE1pbm9yIGZvcmVzdCBwcm9kdWNlICAgIDUpIFNtYWxsLXNjYWxlIGluZHVzdHJpZXMsIGluY2x1ZGluZyBmb29kIHByb2Nlc3NpbmcgaW5kdXN0cmllcyAgICA2KSBSdXJhbCBob3VzaW5nLCBkcmlua2luZyB3YXRlciAgICA3KSBSdXJhbCBlbGVjdHJpZmljYXRpb24sIGluY2x1ZGluZyBkaXN0cmlidXRpb24gb2YgZWxlY3RyaWNpdHkgICAgOCkgTm9uLWNvbnZlbnRpb25hbCBlbmVyZ3kgc291cmNlcyAgICA5KSBQb3ZlcnR5IGFsbGV2aWF0aW9uIHByb2dyYW1tZSAgICAxMCkgRWR1Y2F0aW9uLCBpbmNsdWRpbmcgcHJpbWFyeSBhbmQgc2Vjb25kYXJ5IHNjaG9vbHMgICAgMTEpIFRlY2huaWNhbCB0cmFpbmluZyBhbmQgdm9jYXRpb25hbCBlZHVjYXRpb24gICAgUGlsZ3JpbWFnZXMsIG90aGVyIHRoYW4gcGlsZ3JpbWFnZXMgdG8gcGxhY2VzIG91dHNpZGUgSW5kaWEgZG9lcyBub3QgY29tZSB1bmRlciB0aGUgRWxldmVudGggU2NoZWR1bGUuICAgSXQgaXMgbWVudGlvbmVkIGluIHRoZSBzdGF0ZSBsaXN0IHVuZGVyIHRoZSBTZXZlbnRoIFNjaGVkdWxlIG9mIHRoZSBDb25zdGl0dXRpb24gICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIENoYXB0ZXItMzgsIFBhbmNoYXlhdGkgUmFqICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following is the reason for  Scheduled Areas being treated differently from  other areas in the country?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBGaWZ0aCBTY2hlZHVsZSBkZWFscyB3aXRoIGFkbWluaXN0cmF0aW9uIG9mIHNjaGVkdWxlZCBhcmVhcyB3aGVyZSB0cmliYWwgY29tbXVuaXRpZXMgYXJlIGluIGEgICBtYWpvcml0eS4gQXMgcGVyIEFydGljbGUgMjQ0KDEpIG9mIHRoZSBDb25zdGl0dXRpb24sIFNjaGVkdWxlZCBBcmVhcyBtZWFucyBzdWNoIGFyZWFzIGFzIHRoZSBQcmVzaWRlbnQgbWF5ICAgYnkgb3JkZXIgZGVjbGFyZSB0byBiZSBTY2hlZHVsZWQgQXJlYXMuICAgIFRoZSBzY2hlZHVsZWQgYXJlYXMgYXJlIHRyZWF0ZWQgZGlmZmVyZW50bHkgZnJvbSB0aGUgb3RoZXIgYXJlYXMgaW4gdGhlIGNvdW50cnkgYmVjYXVzZSB0aGV5IGFyZSAgIGluaGFiaXRlZCBieSBhYm9yaWdpbmFscyAob3JpZ2luYWwgcGVvcGxlIGxpdmluZyBpbiB0aGF0IHJlZ2lvbikgd2hvIGFyZSBzb2NpYWxseSBhbmQgZWNvbm9taWNhbGx5IHJhdGhlciAgIGJhY2t3YXJkLCBhbmQgc3BlY2lhbCBlZmZvcnRzIG5lZWQgdG8gYmUgbWFkZSB0byBpbXByb3ZlIHRoZWlyIGNvbmRpdGlvbi4gVGhlcmVmb3JlLCB0aGUgd2hvbGUgb2YgdGhlICAgbm9ybWFsIGFkbWluaXN0cmF0aXZlIG1hY2hpbmVyeSBvcGVyYXRpbmcgaW4gYSBzdGF0ZSBpcyBub3QgZXh0ZW5kZWQgdG8gdGhlIHNjaGVkdWxlZCBhcmVhcyBhbmQgdGhlICAgQ2VudHJhbCBnb3Zlcm5tZW50IGhhcyBzb21ld2hhdCBncmVhdGVyIHJlc3BvbnNpYmlsaXR5IGZvciB0aGVzZSBhcmVhcy4gICAgU291cmNlOiAgTEFYTUlLQU5UIChjaC1TY2hlZHVsZWQgYW5kIHRyaWJhbCBhcmVhcykgICAgaHR0cHM6Ly93d3cudGhlc3RhdGVzbWFuLmNvbS9vcGluaW9uL2NvbnN0aXR1dGlvbmFsLWlzc3Vlcy1vZi1zY2hlZHVsZWQtdHJpYmVzLTE1MDI2ODYzNzIuaHRtbCAgICBodHRwczovL3d3dy5kb3dudG9lYXJ0aC5vcmcuaW4vYmxvZy9nb3Zlcm5hbmNlL2ZpZnRoLXNjaGVkdWxlLWFuZC10aGUtZmF0ZS1vZi1zY2hlZHVsZWQtYXJlYXMtICA0OTQ1NCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The scheduled areas are recognized as such   by the Constitution as areas subjected to   high relative poverty.   ",
        "option2" : " The scheduled areas hold high business   potential and profitability for the   government due to availability of rich   natural resources.   ",
        "option3" : " The scheduled areas are inhabited by   aboriginals who are economically and   socially backward.   ",
        "option4" : " To prevent the tribal community from   getting diseases to which they have no   acquired immunity.   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to President's role in  Scheduled and Tribal Areas, Consider the  following statements:   1.  The President can decrease the area of any  Scheduled Area in a state after consultation  with the Governor of that State.   2.  The President can appoint a Commission to  report on the administration of the  Scheduled Areas.   3.  The President is empowered to direct  whether the act of parliament or state  legislature will apply or not to a scheduled  area.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQcmVzaWRlbnQgb2YgSW5kaWEgaXMgZW1wb3dlcmVkIHRvIGRlYWwgd2l0aCBTY2hlZHVsZWQgQXJlYXMgb2YgSW5kaWEgdW5kZXIgQXJ0aWNsZSAyNDQoMSkgb2YgdGhlICAgSW5kaWFuIENvbnN0aXR1dGlvbiBhcyBwZXIgdGhlIHByb3Zpc2lvbnMgb2YgdGhlIEZpZnRoIFNjaGVkdWxlIHdoaWNoIGRlYWxzIHdpdGggdGhlIGFkbWluaXN0cmF0aW9uIGFuZCAgIGNvbnRyb2wgb2YgdGhlIFNjaGVkdWxlZCBBcmVhcy4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIEZpZnRoIFNjaGVkdWxlIHByZXNjcmliZXMgdGhlIHByb2NlZHVyZSBmb3IgYWx0ZXJpbmcsIHNjaGVkdWxpbmcgb3IgICByZXNjaGVkdWxpbmcgb2YgYW55IFNjaGVkdWxlZCBBcmVhcyBpbiBhbnkgc3RhdGUuIFRoZSBQcmVzaWRlbnQgbWF5IGF0IGFueSB0aW1lIGJ5IG9yZGVyIGluY3JlYXNlIG9yICAgZGVjcmVhc2UgdGhlIGFyZWEgb2YgYW55IFNjaGVkdWxlZCBBcmVhIGluIGEgc3RhdGUgYWZ0ZXIgY29uc3VsdGF0aW9uIHdpdGggdGhlIEdvdmVybm9yIG9mIHRoYXQgU3RhdGUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFVuZGVyIEFydGljbGUgMzM5ICgxKSBvZiB0aGUgQ29uc3RpdHV0aW9uLCB0aGUgUHJlc2lkZW50IGNhbiBhcHBvaW50ICAgIGEgQ29tbWlzc2lvbiB0byByZXBvcnQgb24gdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBTY2hlZHVsZWQgQXJlYXMgYW5kIHdlbGZhcmUgb2YgdGhlIFNjaGVkdWxlZCAgIFRyaWJlcyBpbiB0aGUgc3RhdGVzLiBJdCB3YXMgb2JsaWdhdG9yeSB0byBhcHBvaW50IHN1Y2ggYSBDb21taXNzaW9uIGF0IHRoZSBlbmQgb2YgdGhlIGZpcnN0IHRlbiB5ZWFycyBvZiB0aGUgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgaW1wbGVtZW50YXRpb24gb2YgdGhlIENvbnN0aXR1dGlvbi4gVGhlIEZpcnN0IFNjaGVkdWxlZCBBcmVhcyBhbmQgU2NoZWR1bGVkIFRyaWJlcyBDb21taXNzaW9uIHdhcyAgIGFwcG9pbnRlZCBpbiAxOTYwLCB3aXRoIFUuTi4gRGhlYmFyIGFzIHRoZSBDaGFpcm1hbiB0byBhZGRyZXNzIHRoZSBvdmVyYWxsIHNpdHVhdGlvbiBvZiB0aGUgdHJpYmFscy4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgZ292ZXJub3IgaXMgZW1wb3dlcmVkIHRvIGRpcmVjdCB0aGF0IGFueSBwYXJ0aWN1bGFyIGFjdCBvZiBQYXJsaWFtZW50IG9yICAgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlIGRvZXMgbm90IGFwcGx5IHRvIGEgc2NoZWR1bGVkIGFyZWEgb3IgYXBwbHkgd2l0aCBzcGVjaWZpZWQgbW9kaWZpY2F0aW9ucyBhbmQgICBleGNlcHRpb25zLiAgICBTb3VyY2U6ICBodHRwczovL3d3dy5lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS81NzkzMC8xL1VuaXQxMi5wZGYgICAgTEFYTUlLQU5UIChDSC1TQ0hFRFVMRUQgQU5EIFRSSUJBTCBBUkVBUykgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to Tribes Advisory  Council, consider the following statements:   1.  The council is established by the Governor  in any State having Scheduled Tribes.   2.  It is mandatory for the council to have 3/4th  members as the representatives of  Scheduled tribes in the State legislative  Assembly.   3.  The states not having any scheduled areas  cannot constitute Tribes Advisory Council.  Which of the following statements given above  is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcHJvdmlzaW9ucyB1bmRlciBBcnRpY2xlIDI0NCgxKSBvZiBGaWZ0aCBTY2hlZHVsZSBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGRlYWxzIHdpdGggdGhlICAgZXN0YWJsaXNobWVudCBvZiBUcmliZXMgQWR2aXNvcnkgQ291bmNpbHMgKFRBQykgYW5kIGZ1bmN0aW9ucy4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUbyB0YWtlIGNhcmUgb2YgdGhlIHdlbGZhcmUgb2YgdGhlIHNjaGVkdWxlZCB0cmliZXMsIGEgVHJpYmFsIEFkdmlzb3J5IENvdW5jaWwgaXMgICBjb25zdGl0dXRlZCBpbiBlYWNoIHN0YXRlIHdpdGggYSBzY2hlZHVsZWQgYXJlYSBhcyBwZXIgZGlyZWN0aW9uIG9mIHRoZSBQcmVzaWRlbnQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBUcmliZXMgQWR2aXNvcnkgQ291bmNpbCBzaGFsbCBjb25zaXN0IG9mIG5vdCBtb3JlIHRoYW4gMjAgbWVtYmVycyBvZiAgIHdob20sIG5lYXJseSB0aHJlZS1mb3VydGhzIHNoYWxsIGJlIHJlcHJlc2VudGF0aXZlcyBvZiBTY2hlZHVsZWQgVHJpYmVzIGluIFN0YXRlIExlZ2lzbGF0aXZlIEFzc2VtYmx5LiBJZiAgIG51bWJlciBvZiByZXByZXNlbnRhdGl2ZXMgb2YgU1RzIGluIFN0YXRlIEFzc2VtYmx5IGlzIGxlc3MgdGhhbiBudW1iZXIgb2Ygc2VhdHMgaW4gVEFDIHRvIGJlIGZpbGxlZCBieSAgIHN1Y2ggcmVwcmVzZW50YXRpdmVzLCByZW1haW5pbmcgc2VhdHMgc2hhbGwgYmUgZmlsbGVkIGJ5IG90aGVyIG1lbWJlcnMgb2YgdGhvc2UgdHJpYmVzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBUcmliZXMgQWR2aXNvcnkgQ291bmNpbHMgKFRBQykgaGF2ZSBiZWVuIGNvbnN0aXR1dGVkIGluIFNjaGVkdWxlZCBBcmVhICAgU3RhdGVzIG9mIEFuZGhyYSBQcmFkZXNoLCBDaGhhdHRpc2dhcmgsIEd1amFyYXQsIEpoYXJraGFuZCwgSGltYWNoYWwgUHJhZGVzaCwgTWFkaHlhIFByYWRlc2gsICAgTWFoYXJhc2h0cmEsIE9kaXNoYSwgUmFqYXN0aGFuIGFuZCBUZWxhbmdhbmEuIFRob3VnaCBUYW1pbCBOYWR1LCBVdHRhcmFraGFuZCBhbmQgV2VzdCBCZW5nYWwgZG8gICBub3QgaGF2ZSBhbnkgc2NoZWR1bGVkIGFyZWEsIHRoZXkgaGF2ZSBhbHNvIGNvbnN0aXR1dGVkIFRBQy4gICAgU291cmNlOiAgICAgICBodHRwczovL3BpYi5nb3YuaW4vUHJlc3NSZWxlYXNlUGFnZS5hc3B4P1BSSUQ9MTc3ODU0MCM6fjp0ZXh0PUFjY29yZGluZyUyMHRvJTIwdGhlJTIwcHJvdmlzaW9ucyAgJTIwb2YsVHJpYmVzJTIwYnV0JTIwbm90JTIwU2NoZWR1bGVkJTIwQXJlYXMgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following statements is/are  incorrect regarding the Tribal Areas in India?   1.  All Tribal Areas under Sixth Schedule are  situated in the North-East.   2.  The President of India holds power to divide  autonomous districts into several  autonomous regions.  Select the correct answer using the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFucy4gVGhlIEZpZnRoIFNjaGVkdWxlIHVuZGVyIEFydGljbGUgMjQ0KDEpIG9mIENvbnN0aXR1dGlvbiBkZWZpbmVzIFNjaGVkdWxlZCBBcmVhcy4gT24gdGhlIG90aGVyIGhhbmQsICAgdGhlIFNpeHRoIFNjaGVkdWxlIHVuZGVyIEFydGljbGUgMjQ0ICgyKSBvZiB0aGUgQ29uc3RpdHV0aW9uIGRlZmluZXMgVHJpYmFsIGFyZWFzLiBUaG9zZSBhcmVhcyBpbiB0aGUgU3RhdGVzICAgb2YgQXNzYW0sIE1lZ2hhbGF5YSwgVHJpcHVyYSBhbmQgTWl6b3JhbSB3aGljaCBwcm92aWRlIGZvciBEaXN0cmljdCBvciBSZWdpb25hbCBBdXRvbm9tb3VzIENvdW5jaWxzICAgZm9yIHN1Y2ggYXJlYXMgYXJlIGNhbGxlZCBUcmliYWwgQXJlYXMuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBJbmRpYW4gY29uc3RpdHV0aW9uIHVuZGVyIEFydGljbGUgMjQ0KDIpIG9mIHRoZSBTaXh0aCBTY2hlZHVsZSBkZWFscyB3aXRoIHRoZSAgIGFkbWluaXN0cmF0aW9uIG9mIFRyaWJhbCBBcmVhcyBpbiBvbmx5IGZvdXIgTm9ydGgtZWFzdGVybiBTdGF0ZXMgb2YgSW5kaWEgd2hpY2ggaW5jbHVkZXMgQXNzYW0sICAgTWVnaGFsYXlhLCBNaXpvcmFtIGFuZCBUcmlwdXJhLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBHb3Zlcm5vciBpcyBlbXBvd2VyZWQgdG8gZGl2aWRlLCBvcmdhbml6ZSBhbmQgcmVvcmdhbml6ZSB0aGUgICBhdXRvbm9tb3VzIGRpc3RyaWN0IGludG8gc2V2ZXJhbCBhdXRvbm9tb3VzIHJlZ2lvbnMgbm90IHRoZSBQcmVzaWRlbnQgb2YgSW5kaWEgaWYgdGhlcmUgYXJlIGRpZmZlcmVudCAgIHRyaWJlcyBpbiBhbnkgYXV0b25vbW91cyBkaXN0cmljdC4gICAgU291cmNlOiAgaHR0cHM6Ly92aWthc3BlZGlhLmluL3NvY2lhbC13ZWxmYXJlL3NjaGVkdWxlZC10cmliZXMtd2VsZmFyZS9zY2hlZHVsZWQtdHJpYmVzLWluLWluZGlhICAgIExBWE1JS0FOVCAoQ0gtU0NIRURVTEVEIEFORCBUUklCQUwgQVJFQVMpICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following states in India have  Scheduled Areas?   1. Meghalaya   2. Andhra Pradesh   3. Chhattisgarh   4. Jharkhand  Select the correct answer using the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgQXJ0aWNsZSAyNDQgaW4gUGFydCBYIG9mIEZpZnRoIFNjaGVkdWxlIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIGRlYWxzIHdpdGggYWRtaW5pc3RyYXRpb24gb2YgU2NoZWR1bGVkICAgQXJlYXMuIFRoZSBwcmVzaWRlbnQgb2YgSW5kaWEgaXMgZW1wb3dlcmVkIHRvIGRlY2xhcmUgYW55IGFyZWEgYXMgc2NoZWR1bGVkIGFyZWEgYW55d2hlcmUgaW4gSW5kaWEuIEF0ICAgcHJlc2VudCwgMTAgU3RhdGVzIG5hbWVseSBBbmRocmEgUHJhZGVzaCwgQ2hoYXR0aXNnYXJoLCBHdWphcmF0LCBIaW1hY2hhbCBQcmFkZXNoLCBKaGFya2hhbmQsICAgTWFkaHlhIFByYWRlc2gsIE1haGFyYXNodHJhLCBPZGlzaGEsIFJhamFzdGhhbiBhbmQgVGVsYW5nYW5hIGhhdmUgRmlmdGggU2NoZWR1bGUgQXJlYXMuICAgICBXaGlsZSBNZWdoYWxheWEgaGFzIHRyaWJhbCBhcmVhcyB0aGF0IGNvbWUgdW5kZXIgYWRtaW5pc3RyYXRpb24gb2YgU2l4dGggU2NoZWR1bGUgb2YgSW5kaWFuICAgQ29uc3RpdHV0aW9uLiAgICBTb3VyY2U6ICBodHRwczovL3Zpa2FzcGVkaWEuaW4vc29jaWFsLXdlbGZhcmUvc2NoZWR1bGVkLXRyaWJlcy13ZWxmYXJlL2ZpZnRoLXNjaGVkdWxlLWFyZWFzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1, 2 and 4 only   ",
        "option3" : "2 and 4 only   ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements:   1.  Nyaya panchayats cannot send anyone to  jail.   2.  The Gram Nyayalayas shall try criminal  cases and civil suits.  Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBOeWF5YSBQYW5jaGF5YXRzIGFyZSBjb25zaWRlcmVkIGFzIGEgdW5pdCBvZiB0aGUgUGFuY2hheWF0aSBSYWogU3lzdGVtIG9mIEluZGlhLiBUaGV5IGZ1bmN0aW9uIGF0IHRoZSAgIHZpbGxhZ2Ugb3IgZGlzdHJpY3QgbGV2ZWwgdG8gZGVsaXZlciBqdXN0aWNlIGFuZCB0aHVzIGFyZSBjb25zaWRlcmVkIGFzIHRoZSBtb3N0IGJhc2ljIGxldmVsIG9mIHRoZSBJbmRpYW4gICBKdWRpY2lhcnkuICAgIFRvIHByb3ZpZGUgYWNjZXNzIHRvIGp1c3RpY2UgdG8gdGhlIGNpdGl6ZW4gYXQgdGhlaXIgZG9vciBzdGVwcywgdGhlIENlbnRyYWwgR292ZXJubWVudCBoYXMgZW5hY3RlZCB0aGUgICBHcmFtIE55YXlhbGF5YXMgQWN0LCAyMDA4LiAgSXQgcHJvdmlkZXMgZm9yIGVzdGFibGlzaG1lbnQgb2YgR3JhbSBOeWF5YWxheWFzIGF0IGludGVybWVkaWF0ZSBwYW5jaGF5YXQgICBsZXZlbC4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogICAgTnlheWEgcGFuY2hheWF0IGNhbiBvbmx5IGltcG9zZSBmaW5lcyBidXQgY2Fubm90IHNlbmQgYW55b25lIHRvIGphaWwuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6ICAgIFRoZSBHcmFtIE55YXlhbGF5YSBzaGFsbCBiZSBhIG1vYmlsZSBjb3VydCBhbmQgc2hhbGwgZXhlcmNpc2UgdGhlIHBvd2VycyBvZiBib3RoIENyaW1pbmFsIGFuZCBDaXZpbCAgIGNvdXJ0cy4gVGhlIEdyYW0gTnlheWFsYXlhcyBzaGFsbCB0cnkgY3JpbWluYWwgY2FzZXMsIGNpdmlsIHN1aXRzLCBjbGFpbXMgb3IgZGlzcHV0ZXMgd2hpY2ggYXJlIHNwZWNpZmllZCAgIGluIHRoZSBGaXJzdCBTY2hlZHVsZSBhbmQgdGhlIFNlY29uZCBTY2hlZHVsZSB0byB0aGUgQWN0LiAgIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmlwbGVhZGVycy5pbi9kaXNjdXNzaW5nLXBhdGgtbnlheWEtcGFuY2hheWF0cy1waWxzLWxvay0gIGFkYWxhdHMvI0Z1bmN0aW9uaW5nX29mX055YXlhX1BhbmNoYXlhdHMgICAgaHR0cHM6Ly93d3cubGVnYWxzZXJ2aWNlaW5kaWEuY29tL2xlZ2FsL2FydGljbGUtMzE5NS10aGUtZ3JhbS1ueWF5YWxheWFzLWFjdC1ueWF5YS1wYW5jaGF5YXRzLSAgbG9rLWFkYWxhdC1hbmQtbGVnYWwtYWlkLW55YXlhLXBhbmNoYXlhdHMtLmh0bWwgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements:   1.  Originally, Article 371 was not the part of the  Constitution at the time of its  commencement on January 26, 1950.   2.  Article 371 provides for special  responsibilities to the Governor from the  Northeastern state's.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcnRpY2xlcyAzNzEgdG8gMzcxLUogaW4gUGFydCBYWEkgb2YgdGhlIGNvbnN0aXR1dGlvbiBjb250YWluIHNwZWNpYWwgcHJvdmlzaW9ucyBmb3IgdHdlbHZlIHN0YXRlcyB2aXouLCAgIE1haGFyYXNodHJhLCBHdWphcmF0LCBOYWdhbGFuZCwgQXNzYW0sIE1hbmlwdXIsIEFuZGhyYSBQcmFkZXNoLCBUZWxhbmdhbmEsIFNpa2tpbSwgTWl6b3JhbSwgICBBcnVuYWNoYWwgUHJhZGVzaCwgR29hIGFuZCBLYXJuYXRha2EuIFRoZSBpbnRlbnRpb24gYmVoaW5kIHRoZW0gaXMgdG8gbWVldCB0aGUgYXNwaXJhdGlvbnMgb2YgdGhlICAgcGVvcGxlIG9mIGJhY2t3YXJkIHJlZ2lvbnMgb2YgdGhlIHN0YXRlcyBvciB0byBwcm90ZWN0IHRoZSBjdWx0dXJhbCBhbmQgZWNvbm9taWMgaW50ZXJlc3RzIG9mIHRoZSB0cmliYWwgICBwZW9wbGUgb2YgdGhlIHN0YXRlcy4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBcnRpY2xlcyAzNzAgYW5kIDM3MSB3ZXJlIHBhcnQgb2YgdGhlIENvbnN0aXR1dGlvbiBhdCB0aGUgdGltZSBvZiBpdHMgICBjb21tZW5jZW1lbnQgb24gSmFudWFyeSAyNiwgMTk1MDsgQXJ0aWNsZXMgMzcxQSB0aHJvdWdoIDM3MUogd2VyZSBpbmNvcnBvcmF0ZWQgc3Vic2VxdWVudGx5IHRocm91Z2ggICB2YXJpb3VzIGNvbnN0aXR1dGlvbmFsIGFtZW5kbWVudCBhY3RzLiBVbmRlciBBcnRpY2xlIDM3MSwgdGhlIFByZXNpZGVudCBpcyBhdXRob3Jpc2VkIHRvIHByb3ZpZGUgdGhhdCAgIHRoZSBHb3Zlcm5vciBvZiBNYWhhcmFzaHRyYSBhbmQgdGhhdCBvZiBHdWphcmF0IHdvdWxkIGhhdmUgc3BlY2lhbCByZXNwb25zaWJpbGl0eSB0b3dhcmRzICAgZGV2ZWxvcG1lbnQgb2YgYmFja3dhcmQgYXJlYXMgb2YgdGhlIHN0YXRlLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMzcxIHByb3ZpZGVzIGZvciBzcGVjaWFsIHJlc3BvbnNpYmlsaXRpZXMgdG8gR292ZXJub3Igb2YgdGhlIHN0YXRlcyBvZiAgIE1haGFyYXNodHJhIGFuZCBHdWphcmF0LiBHb3Zlcm5vciBoYXMgJ3NwZWNpYWwgcmVzcG9uc2liaWxpdHknIHRvIGVzdGFibGlzaCAnc2VwYXJhdGUgZGV2ZWxvcG1lbnQgICBib2FyZHMnIGZvciAnVmlkYXJiaGEsIE1hcmF0aHdhZGEsIGFuZCB0aGUgcmVzdCBvZiBNYWhhcmFzaHRyYScsIGFuZCBTYXVyYXNodHJhIGFuZCBLdXRjaCBpbiBHdWphcmF0OyAgIGVuc3VyZSAnZXF1aXRhYmxlIGFsbG9jYXRpb24gb2YgZnVuZHMgZm9yIGRldmVsb3BtZW50YWwgZXhwZW5kaXR1cmUgb3ZlciB0aGUgc2FpZCBhcmVhcycsIGFuZCAnZXF1aXRhYmxlICAgYXJyYW5nZW1lbnQgcHJvdmlkaW5nIGFkZXF1YXRlIGZhY2lsaXRpZXMgZm9yIHRlY2huaWNhbCBlZHVjYXRpb24gYW5kIHZvY2F0aW9uYWwgdHJhaW5pbmcsIGFuZCBhZGVxdWF0ZSAgIG9wcG9ydHVuaXRpZXMgZm9yIGVtcGxveW1lbnQnIHVuZGVyIHRoZSBzdGF0ZSBnb3Zlcm5tZW50LiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU291cmNlOiAgRXhwbGFpbmVkOiBXaGF0IGlzIEFydGljbGUgMzcxPyB8IEV4cGxhaW5lZCBOZXdzLFRoZSBJbmRpYW4gRXhwcmVzcyAgICBMYXhtaWthbnRoIENoYXB0ZXIgMzcgU3BlY2lhbCBQcm92aXNpb25zIGZvciBTb21lIFN0YXRlcyAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements  regarding the Special provisions for Nagaland:   1.  The Acts of Parliament relating to the social  practices of the Nagas does not apply to  Nagaland unless the President of India so  decides.   2.  The Governor can arrange for equitable  distribution of money provided by the  Centre between Tuensang district and the  rest of Nagaland.   3.  Members in the Nagaland Legislative  Assembly from the Tuensang district are not  elected directly by the people.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcnRpY2xlIDM3MUEgKDEzdGggQW1lbmRtZW50IEFjdCwgMTk2MiksIE5hZ2FsYW5kIHByb3Zpc2lvbiB3YXMgaW5zZXJ0ZWQgYWZ0ZXIgYSAxNi1wb2ludCBhZ3JlZW1lbnQgICBiZXR3ZWVuIHRoZSBDZW50cmUgYW5kIHRoZSBOYWdhIFBlb3BsZSdzIENvbnZlbnRpb24gaW4gMTk2MCwgd2hpY2ggbGVkIHRvIHRoZSBjcmVhdGlvbiBvZiBOYWdhbGFuZCBpbiAgIDE5NjMuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIEFjdHMgb2YgUGFybGlhbWVudCByZWxhdGluZyB0byB0aGUgZm9sbG93aW5nIG1hdHRlcnMgd291bGQgbm90IGFwcGx5IHRvICAgTmFnYWxhbmQgdW5sZXNzIHRoZSBTdGF0ZSBMZWdpc2xhdGl2ZSBBc3NlbWJseSBzbyBkZWNpZGVzOiAoaSkgcmVsaWdpb3VzIG9yIHNvY2lhbCBwcmFjdGljZXMgb2YgdGhlIE5hZ2FzOyAgIChpaSkgTmFnYSBjdXN0b21hcnkgbGF3IGFuZCBwcm9jZWR1cmU7IChpaWkpIGFkbWluaXN0cmF0aW9uIG9mIGNpdmlsIGFuZCBjcmltaW5hbCBqdXN0aWNlIGludm9sdmluZyBkZWNpc2lvbnMgICBhY2NvcmRpbmcgdG8gTmFnYSBjdXN0b21hcnkgbGF3OyBhbmQgKGl2KSBvd25lcnNoaXAgYW5kIHRyYW5zZmVyIG9mIGxhbmQgYW5kIGl0cyByZXNvdXJjZXMuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBHb3Zlcm5vciBvZiBOYWdhbGFuZCBzaGFsbCBoYXZlIHNwZWNpYWwgcmVzcG9uc2liaWxpdHkgZm9yIGxhdyBhbmQgb3JkZXIgaW4gICB0aGUgc3RhdGUgc28gbG9uZyBhcyBpbnRlcm5hbCBkaXN0dXJiYW5jZXMgY2F1c2VkIGJ5IHRoZSBob3N0aWxlIE5hZ2FzIGNvbnRpbnVlLiBUaGUgR292ZXJub3IgY2FuIGluIGhpcyAgIGRpc2NyZXRpb24gYXJyYW5nZSBmb3IgZXF1aXRhYmxlIGRpc3RyaWJ1dGlvbiBvZiBtb25leSBwcm92aWRlZCBieSB0aGUgQ2VudHJlIGJldHdlZW4gVHVlbnNhbmcgICBkaXN0cmljdCBhbmQgdGhlIHJlc3Qgb2YgTmFnYWxhbmQuICAgICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQ29uc3RpdHV0aW9uIHByb3ZpZGVzIHRoYXQgdGhlcmUgc2hhbGwgYmUgYSBNaW5pc3RlciBmb3IgVHVlbnNhbmcgYWZmYWlycyBpbiB0aGUgICBTdGF0ZSBDb3VuY2lsIG9mIE1pbmlzdGVycy4gSGUgaXMgdG8gYmUgYXBwb2ludGVkIGZyb20gYW1vbmdzdCB0aGUgbWVtYmVycyByZXByZXNlbnRpbmcgVHVlbnNhbmcgICBkaXN0cmljdCBpbiB0aGUgTmFnYWxhbmQgTGVnaXNsYXRpdmUgQXNzZW1ibHkuIE1lbWJlcnMgaW4gdGhlIE5hZ2FsYW5kIExlZ2lzbGF0aXZlIEFzc2VtYmx5IGZyb20gdGhlICAgVHVlbnNhbmcgZGlzdHJpY3QgYXJlIG5vdCBlbGVjdGVkIGRpcmVjdGx5IGJ5IHRoZSBwZW9wbGUgYnV0IGJ5IHRoZSByZWdpb25hbCBjb3VuY2lsLiAgICBTb3VyY2U6IExheG1pa2FudGggQ2hhcHRlciAzNyBTcGVjaWFsIFByb3Zpc2lvbnMgZm9yIFNvbWUgU3RhdGVzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to Post Independent  Political administration of India, which of the  following States were once a Union Territory?   1. Nagaland   2. Arunachal Pradesh   3. Mizoram   4. Assam  Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBVbmRlciBBcnRpY2xlIDEgb2YgdGhlIENvbnN0aXR1dGlvbiwgdGhlIHRlcnJpdG9yeSBvZiBJbmRpYSBjb21wcmlzZXMgdGhyZWUgY2F0ZWdvcmllcyBvZiB0ZXJyaXRvcmllczogKGEpICAgdGVycml0b3JpZXMgb2YgdGhlIHN0YXRlczsgKGIpIHVuaW9uIHRlcnJpdG9yaWVzOyBhbmQgKGMpIHRlcnJpdG9yaWVzIFRoZSB1bmlvbiB0ZXJyaXRvcmllcyBpbiBJbmRpYSBoYXZlIGJlZW4gICBjcmVhdGVkIGZvciBhIHZhcmlldHkgb2YgcmVhc29ucy4gVGhlc2UgYXJlIG1lbnRpb25lZCBiZWxvdzogICAgMSkgUG9saXRpY2FsIGFuZCBhZG1pbmlzdHJhdGl2ZSBjb25zaWRlcmF0aW9uLURlbGhpIGFuZCBDaGFuZGlnYXJoLiAgICAgMikgQ3VsdHVyYWwgZGlzdGluY3RpdmVuZXNzLVB1ZHVjaGVycnksIERhZHJhIGFuZCBOYWdhciBIYXZlbGksIGFuZCBEYW1hbiBhbmQgRGl1LiAgICAgMykgU3RyYXRlZ2ljIGltcG9ydGFuY2UtQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzIGFuZCBMYWtzaGFkd2VlcC4gICAgIDQpIFNwZWNpYWwgdHJlYXRtZW50IGFuZCBjYXJlIG9mIHRoZSBiYWNrd2FyZCBhbmQgdHJpYmFsIHBlb3BsZS1NaXpvcmFtLCBNYW5pcHVyLCBUcmlwdXJhIGFuZCAgIEFydW5hY2hhbCBQcmFkZXNoIHdoaWNoIGxhdGVyIGJlY2FtZSBzdGF0ZXMuICAgIEF0IHByZXNlbnQsIHRoZXJlIGFyZSBlaWdodCBVbmlvbiBUZXJyaXRvcmllcy4gVGhleSBhcmU6ICgxKSBBbmRhbWFuIGFuZCBOaWNvYmFyIElzbGFuZHMsICgyKSBEZWxoaSwgKDMpICAgTGFrc2hhZHdlZXAsICg0KSBEYWRyYSBhbmQgTmFnYXIgSGF2ZWxpIGFuZCBEYW1hbiBhbmQgRGl1LCAoNSkgUHVkdWNoZXJyeSwgKDYpIENoYW5kaWdhcmgsICg3KSBKYW1tdSAgIGFuZCBLYXNobWlyLCAoOCkgTGFkYWtoLiAgICBBc3NhbSB3YXMgdGhlIHN0YXRlIGluIFBhcnQgQSBpbiAxOTUwIGFuZCB3YXMgbmV2ZXIgYSBVbmlvbiBUZXJyaXRvcnkuIEluIDE5NjMsIHRoZSBTdGF0ZSBvZiBOYWdhbGFuZCAgIHdhcyBmb3JtZWQgYnkgdGFraW5nIHRoZSBOYWdhIEhpbGxzIGFuZCBUdWVuc2FuZyBhcmVhIG91dCBvZiB0aGUgc3RhdGUgb2YgQXNzYW0uIFRoaXMgd2FzIGRvbmUgdG8gICBzYXRpc2Z5IHRoZSBtb3ZlbWVudCBvZiB0aGUgaG9zdGlsZSBOYWdhcy4gICAgU291cmNlOiBMYXhtaWthbnRoIENoYXB0ZXIgMzcgU3BlY2lhbCBQcm92aXNpb25zIGZvciBTb21lIFN0YXRlcyAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 3 and 4 only     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements with  reference to Union Territories of India:   1.  The President of India can appoint the  governor of a state as the administrator of  an adjoining union territory.   2.  The Parliament can make laws on any  subject of the three lists for the union  territories except for Puducherry and Delhi.   3. The President can put a Union Territory  under the jurisdiction of the high court of  adjacent state.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcnRpY2xlcyAyMzkgdG8gMjQxIGluIFBhcnQgVklJSSBvZiB0aGUgQ29uc3RpdHV0aW9uIGRlYWwgd2l0aCB0aGUgdW5pb24gdGVycml0b3JpZXMuIEV2ZXJ5IHVuaW9uIHRlcnJpdG9yeSBpcyAgIGFkbWluaXN0ZXJlZCBieSB0aGUgUHJlc2lkZW50IGFjdGluZyB0aHJvdWdoIGFuIGFkbWluaXN0cmF0b3IgYXBwb2ludGVkIGJ5IGhpbS4gQW4gYWRtaW5pc3RyYXRvciBvZiBhICAgdW5pb24gdGVycml0b3J5IGlzIGFuIGFnZW50IG9mIHRoZSBQcmVzaWRlbnQgYW5kIG5vdCBoZWFkIG9mIHN0YXRlIGxpa2UgYSBnb3Zlcm5vci4gICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBQcmVzaWRlbnQgY2FuIHNwZWNpZnkgdGhlIGRlc2lnbmF0aW9uIG9mIGFuIGFkbWluaXN0cmF0b3I7IGl0IG1heSBiZSAgIExpZXV0ZW5hbnQgR292ZXJub3Igb3IgQ2hpZWYgQ29tbWlzc2lvbmVyIG9yIEFkbWluaXN0cmF0b3IuIFRoZSBQcmVzaWRlbnQgY2FuIGFsc28gYXBwb2ludCB0aGUgICBnb3Zlcm5vciBvZiBhIHN0YXRlIGFzIHRoZSBhZG1pbmlzdHJhdG9yIG9mIGFuIGFkam9pbmluZyB1bmlvbiB0ZXJyaXRvcnkuIEluIHRoYXQgY2FwYWNpdHksIHRoZSBnb3Zlcm5vciAgIGlzIHRvIGFjdCBpbmRlcGVuZGVudGx5IG9mIGhpcyBjb3VuY2lsIG9mIG1pbmlzdGVycy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgUGFybGlhbWVudCBjYW4gbWFrZSBsYXdzIG9uIGFueSBzdWJqZWN0IG9mIHRoZSB0aHJlZSBsaXN0cyAoaW5jbHVkaW5nIHRoZSAgIFN0YXRlIExpc3QpIGZvciB0aGUgdW5pb24gdGVycml0b3JpZXMuIFRoaXMgcG93ZXIgb2YgUGFybGlhbWVudCBhbHNvIGV4dGVuZHMgdG8gUHVkdWNoZXJyeSBhbmQgRGVsaGksICAgd2hpY2ggaGF2ZSB0aGVpciBvd24gbG9jYWwgbGVnaXNsYXR1cmVzLiBUaGlzIG1lYW5zIHRoYXQsIHRoZSBsZWdpc2xhdGl2ZSBwb3dlciBvZiBQYXJsaWFtZW50IGZvciB0aGUgdW5pb24gICB0ZXJyaXRvcmllcyBvbiBzdWJqZWN0cyBvZiB0aGUgU3RhdGUgTGlzdCByZW1haW4gdW5hZmZlY3RlZCBldmVuIGFmdGVyIGVzdGFibGlzaGluZyBhIGxvY2FsIGxlZ2lzbGF0dXJlIGZvciAgIHRoZW0uICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIFBhcmxpYW1lbnQgKG5vdCBQcmVzaWRlbnQpIGNhbiBlc3RhYmxpc2ggYSBoaWdoIGNvdXJ0IGZvciBhIHVuaW9uICAgdGVycml0b3J5IG9yIHB1dCBpdCB1bmRlciB0aGUganVyaXNkaWN0aW9uIG9mIHRoZSBoaWdoIGNvdXJ0IG9mIGFkamFjZW50IHN0YXRlLiBEZWxoaSBpcyB0aGUgb25seSB1bmlvbiAgIHRlcnJpdG9yeSB0aGF0IGhhcyBhIGhpZ2ggY291cnQgb2YgaXRzIG93biAoc2luY2UgMTk2NikuICAgIFNvdXJjZTogTGF4bWlrYW50aCBDaGFwdGVyIDQwIFVuaW9uIFRlcnJpdG9yeSAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "2 only   ",
        "option4" : "2 and 3 only     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
