{
  "testId" : "forum-2023-prelims-sgf-2",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-sgf-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "A legislation which confers on the  executive or administrative authority an  unguided and uncontrolled discretionary  power in the matter of application of law  violates which one of the following Articles of  the Constitution of India?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IGRpc2NyZXRpb25hcnkgcG93ZXIgaW4gdGhlIG1hdHRlciBvZiBhcHBsaWNhdGlvbiBvZiBsYXcgdmlvbGF0ZXMgd2hpY2ggb25lIG9mIHRoZSBmb2xsb3dpbmcgQXJ0aWNsZXMgb2YgdGhlICAgQ29uc3RpdHV0aW9uIG9mIEluZGlhPyAgIGEpIEFydGljbGUgMTQgICBiKSBBcnRpY2xlIDI4ICAgYykgQXJ0aWNsZSAzMiAgICBkKSBBcnRpY2xlIDQ0ICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFydGljbGUgMTQgb2YgSW5kaWFuIENvbnN0aXR1dGlvbiBzYXlzIHRoYXQgdGhlIFN0YXRlIHNoYWxsIG5vdCBkZW55IHRvIGFueSBwZXJzb24gZXF1YWxpdHkgYmVmb3JlIHRoZSBsYXcgb3IgICB0aGUgZXF1YWwgcHJvdGVjdGlvbiBvZiB0aGUgbGF3cyB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gVGhlIGNvbmNlcHQgb2YgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIGlzIGFuICAgZWxlbWVudCBvZiB0aGUgY29uY2VwdCBvZiAnUnVsZSBvZiBMYXcnLiBUaGlzIGNvbmNlcHQgaGFzIHRoZSBmb2xsb3dpbmcgdGhyZWUgZWxlbWVudHMgb3IgYXNwZWN0czogICAxKSBBYnNlbmNlIG9mIGFyYml0cmFyeSBwb3dlciAgIDIpIEVxdWFsaXR5IGJlZm9yZSB0aGUgbGF3LCB0aGF0IGlzLCBlcXVhbCBzdWJqZWN0aW9uIG9mIGFsbCBjaXRpemVucyB0byB0aGUgb3JkaW5hcnkgbGF3IG9mIHRoZSBsYW5kICAgMykgVGhlIGNvbnN0aXR1dGlvbiBpcyB0aGUgcmVzdWx0IG9mIHRoZSByaWdodHMgb2YgdGhlIGluZGl2aWR1YWwgICBUaGUgZmlyc3QgYW5kIHRoZSBzZWNvbmQgZWxlbWVudHMgYXJlIGFwcGxpY2FibGUgdG8gSW5kaWEuIFRoaXMgbWVhbnMgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIHVuZGVyIEFydGljbGUgMTQgICBjb25ub3RlcyB0aGUgYWJzZW5jZSBvZiBhcmJpdHJhcnkgcG93ZXIgd2l0aCB0aGUgYXV0aG9yaXRpZXMuIFRodXMsIHdoZW4gYSBsZWdpc2xhdGlvbiBjb25mZXJzIHVuY29udHJvbGxlZCAgIGRpc2NyZXRpb25hcnkgcG93ZXJzIG9uIGFueSBhdXRob3JpdHksIGl0IHRlbmRzIHRvIHZpb2xhdGUgdGhlIGFydGljbGUgMTQgb2YgdGhlIGNvbnN0aXR1dGlvbi4gICBPcHRpb24gYiBpcyBpbmNvcnJlY3QuIEFydGljbGUgMjggaXMgcmVsYXRlZCB0byB0aGUgcmlnaHQgdG8gZnJlZWRvbSBvZiByZWxpZ2lvbi4gSXQgcHJvdmlkZXMgdGhhdCBubyByZWxpZ2lvdXMgICBpbnN0cnVjdGlvbiBzaGFsbCBiZSBwcm92aWRlZCBpbiBhbnkgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb24gd2hvbGx5IG1haW50YWluZWQgb3V0IG9mIFN0YXRlIGZ1bmRzLiBGdXJ0aGVyLCAgIG5vIHBlcnNvbiBhdHRlbmRpbmcgYW55IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIHJlY29nbml6ZWQgYnkgdGhlIFN0YXRlIG9yIHJlY2VpdmluZyBhaWQgb3V0IG9mIFN0YXRlIGZ1bmRzICAgc2hhbGwgYmUgcmVxdWlyZWQgdG8gYXR0ZW5kIGFueSByZWxpZ2lvdXMgaW5zdHJ1Y3Rpb24gb3Igd29yc2hpcCBpbiB0aGF0IGluc3RpdHV0aW9uIHdpdGhvdXQgaGlzIGNvbnNlbnQuICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiBBcnRpY2xlIDMyIGNvbmZlcnMgdGhlIHJpZ2h0IHRvIHJlbWVkaWVzIGZvciB0aGUgZW5mb3JjZW1lbnQgb2YgdGhlIGZ1bmRhbWVudGFsICAgcmlnaHRzIG9mIGFuIGFnZ3JpZXZlZCBjaXRpemVuLiBBcnRpY2xlIDMyIGFmZmlybXMgdGhlIHJpZ2h0IHRvIG1vdmUgdGhlIFN1cHJlbWUgQ291cnQgaWYgYSBmdW5kYW1lbnRhbCAgIHJpZ2h0IGlzIHZpb2xhdGVkLiBVbmRlciB0aGlzIGFydGljbGUsIHRoZSBTdXByZW1lIENvdXJ0IGNhbiBpc3N1ZSB3cml0cyBmb3IgdGhlIGVuZm9yY2VtZW50IG9mIGFueSBvZiB0aGUgICBmdW5kYW1lbnRhbCByaWdodHMgb2YgdGhlIGNpdGl6ZW5zLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdC4gQXJ0aWNsZSA0NCBwcm92aWRlcyBmb3Igb25lIG9mIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kuIEFydGljbGUgNDQgc2F5cyAgIHRoYXQgdGhlICdTdGF0ZSBzaGFsbCBlbmRlYXZvciB0byBzZWN1cmUgZm9yIHRoZSBjaXRpemVucyBhIHVuaWZvcm0gY2l2aWwgY29kZSB0aHJvdWdob3V0IHRoZSB0ZXJyaXRvcnkgb2YgICBJbmRpYSIuICAgU291cmNlKSBVUFNDIENTRSAyMDIxICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 14  ",
        "option2" : "Article 28  ",
        "option3" : "Article 32   ",
        "option4" : "Article 44   "
      }
    },
    {
      "index" : 2,
      "question" : "According to Article 12 of Indian  Constitution, which of the following are  included in the definition of 'state'?  1. Gram Panchayat  2. Life Insurance Corporation   3. State Legislature  4. Political Parties  5. Judicial proceedings of the Supreme Court  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "ICdzdGF0ZSc/ICAgMS4gR3JhbSBQYW5jaGF5YXQgICAyLiBMaWZlIEluc3VyYW5jZSBDb3Jwb3JhdGlvbiAgICAzLiBTdGF0ZSBMZWdpc2xhdHVyZSAgIDQuIFBvbGl0aWNhbCBQYXJ0aWVzICAgNS4gSnVkaWNpYWwgcHJvY2VlZGluZ3Mgb2YgdGhlIFN1cHJlbWUgQ291cnQgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlcyBnaXZlbiBiZWxvdzogICBhKSAxLCAyIGFuZCAzIG9ubHkgICBiKSAxLCAzIGFuZCA1IG9ubHkgICBjKSAyLCAzIGFuZCA0IG9ubHkgICBkKSAxLCAyLCAzLCA0IGFuZCA1ICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgQXJ0aWNsZSAxMiBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uIGlzIGEgZ2F0ZXdheSBwcm92aXNpb24gZm9yIFBhcnQgSUlJIG9uIEZ1bmRhbWVudGFsIFJpZ2h0cywgYW5kIGRlZmluZWQgdGhlICAgdGVybSAnU3RhdGUnIHVzZWQgdGhyb3VnaG91dCB0aGUgUGFydC4gVW5kZXIgSW5kaWFuIGNvbnN0aXR1dGlvbiwgdGhlIHRlcm0gJ1N0YXRlJyBoYXMgYmVlbiB1c2VkIGluIGRpZmZlcmVudCAgIHByb3Zpc2lvbnMgY29uY2VybmluZyB0aGUgZnVuZGFtZW50YWwgcmlnaHRzLiBJdCBpcyBkZWZpbmVkIGluIGEgd2lkZXIgc2Vuc2Ugc28gYXMgdG8gaW5jbHVkZSBhbGwgaXRzIGFnZW5jaWVzLiAgIEl0IGlzIHRoZSBhY3Rpb25zIG9mIHRoZXNlIGFnZW5jaWVzIHRoYXQgY2FuIGJlIGNoYWxsZW5nZWQgaW4gdGhlIGNvdXJ0cyBhcyB2aW9sYXRpbmcgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cy4gICBPcHRpb24gMSwgMiBhbmQgMyBhcmUgY29ycmVjdDogQXJ0aWNsZSAxMiBoYXMgZGVmaW5lZCB0aGUgdGVybSBmb3IgdGhlIHB1cnBvc2VzIG9mIFBhcnQgSUlJLiBBY2NvcmRpbmcgdG8gaXQsICAgdGhlIFN0YXRlIGluY2x1ZGVzIHRoZSBmb2xsb3dpbmc6ICAgIChhKSBHb3Zlcm5tZW50IGFuZCBQYXJsaWFtZW50IG9mIEluZGlhLCB0aGF0IGlzLCBleGVjdXRpdmUgYW5kIGxlZ2lzbGF0aXZlIG9yZ2FucyBvZiB0aGUgVW5pb24gZ292ZXJubWVudC4gICAgKGIpIEdvdmVybm1lbnQgYW5kIGxlZ2lzbGF0dXJlIG9mIHN0YXRlcywgdGhhdCBpcywgZXhlY3V0aXZlIGFuZCBsZWdpc2xhdGl2ZSBvcmdhbnMgb2Ygc3RhdGUgZ292ZXJubWVudC4gICAoSGVuY2UgU3RhdGVtZW50IDMgaXMgY29ycmVjdCkgICAoYykgQWxsIGxvY2FsIGF1dGhvcml0aWVzLCB0aGF0IGlzLCBtdW5pY2lwYWxpdGllcywgZGlzdHJpY3QgYm9hcmRzLCBpbXByb3ZlbWVudCB0cnVzdHMsIGdyYW0gcGFuY2hheWF0cyBldGMuICAgKEhlbmNlIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QpICAgKGQpIEFsbCBvdGhlciBhdXRob3JpdGllcywgdGhhdCBpcywgc3RhdHV0b3J5IG9yIG5vbi1zdGF0dXRvcnkgYXV0aG9yaXRpZXMgbGlrZSBMSUMsIE9OR0MsIFNBSUwsIGV0Yy4gKEhlbmNlICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdCkgICBPcHRpb24gNCBhbmQgNSBhcmUgaW5jb3JyZWN0OiBQb2xpdGljYWwgUGFydGllcyBhcyBzdWNoIGRvIG5vdCBjb21lIHVuZGVyIHRoZSBkZWZpbml0aW9uIG9mICdzdGF0ZScgdW5kZXIgICBhcnRpY2xlIDEyLiBUaGUgSGlnaCBDb3VydCBvZiBNYWRyYXMgaGFzIHNhaWQgdGhhdCAnQSBwb2xpdGljYWwgcGFydHkgaXMgb25seSBhIGdyb3VwIG9mIGluZGl2aWR1YWxzIHdobyBtYXkgICBjb250ZXN0IHRoZSBlbGVjdGlvbiBhbmQgdGhlcmVhZnRlciwgd2hvIG1heSBldmVuIGdvdmVybiB0aGUgU3RhdGUuIEV2ZW4gZHVyaW5nLCB3aGVuIHRoZSBwb2xpdGljYWwgcGFydGllcyAgIGFyZSBpbiBwb3dlciwgdGhlIHBvbGl0aWNhbCBwYXJ0eSBhcyBzdWNoIGRvZXMgbm90IGNvbWUgdW5kZXIgdGhlIGRlZmluaXRpb24gdGhlICdTdGF0ZScgd2l0aGluIHRoZSBtZWFuaW5nICAgb2YgQXJ0aWNsZSAxMiBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhLicgICBJbiBSdXBhIEFzaG9rIEh1cnJhIHYgQXNob2sgSHVycmEsIHRoZSBTdXByZW1lIENvdXJ0IHJlYWZmaXJtZWQgYW5kIHJ1bGVkIHRoYXQgbm8ganVkaWNpYWwgcHJvY2VlZGluZyAgIGNvdWxkIGJlIHNhaWQgdG8gdmlvbGF0ZSBhbnkgZnVuZGFtZW50YWwgcmlnaHQuICBJdCB3YXMgc2FpZCB0byBiZSBhIHNldHRsZWQgcG9zaXRpb24gb2YgbGF3IHRoYXQgc3VwZXJpb3IgICBjb3VydHMgb2YganVzdGljZSBkbyBub3QgZmFsbCB3aXRoaW4gdGhlIGFtYml0IG9mICdTdGF0ZScgb3Igb3RoZXIgYXV0aG9yaXRpZXMgdW5kZXIgQXJ0aWNsZSAxMi4gVGhlcmVmb3JlLCBpdCBjYW4gICByaWdodGx5IGJlIHNhaWQgdGhhdCB3aGVuIHRoZXkgZ2l2ZSBqdWRpY2lhbCBkZWNpc2lvbnMsIHRoZXkgZG8gbm90IGNvbWUgd2l0aGluIHRoZSBtZWFuaW5nIG9mIFN0YXRlLiBCdXQsICAgd2hpbGUgY291cnRzIHBlcmZvcm0gdGhlaXIgYWRtaW5pc3RyYXRpdmUgZnVuY3Rpb24sIHRoZXkgYXJlIHdpdGhpbiB0aGUgU3RhdGUncyBkZWZpbml0aW9uLiAgIFNvdXJjZTogICdTdGF0ZScgdW5kZXIgQXJ0aWNsZSAxMiBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIChpcGxlYWRlcnMuaW4pICAgTSBMYXhtaWthbnQtIENoLTcgKEZ1bmRhbWVudGFsIHJpZ2h0cykgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 3 and 5 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following is the most  appropriate definition of 'Freedom'?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IGEpIEZyZWVkb20gaXMgdGhlIGNvbmRpdGlvbiBpbiB3aGljaCBwZW9wbGUgY2FuIGRldmVsb3AgdGhlaXIgY2FwYWJpbGl0aWVzLiAgIGIpIEZyZWVkb20gbWVhbnMgYWJzZW5jZSBvZiBhbnkgdHlwZSBvZiBydWxlcyBhbmQgcmVndWxhdGlvbnMuICAgYykgRnJlZWRvbSBpcyB0aGUgcHJpdmlsZWdlIHRvIGRvIHdoYXRldmVyIG9uZSBsaWtlcy4gICBkKSBGcmVlZG9tIG1lYW5zIHRoZSBjb21wbGV0ZSBhYnNlbmNlIG9mIHJlc3RyYWludHMgYW5kIGNvbnN0cmFpbnRzLiAgICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBUaGUgdGVybSAnRnJlZWRvbScgbWVhbnMgdGhlIGFic2VuY2Ugb2YgcmVzdHJhaW50cyBvbiB0aGUgYWN0aXZpdGllcyBvZiBpbmRpdmlkdWFscywgYW5kIGF0IHRoZSBzYW1lIHRpbWUsICAgcHJvdmlkaW5nIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBpbmRpdmlkdWFsIHBlcnNvbmFsaXRpZXMuICAgIEZyZWVkb20gb3IgTGliZXJ0eSwgYXMgZWxhYm9yYXRlZCBpbiB0aGUgUHJlYW1ibGUsIGlzIHZlcnkgZXNzZW50aWFsIGZvciB0aGUgc3VjY2Vzc2Z1bCBmdW5jdGlvbmluZyBvZiB0aGUgICBJbmRpYW4gZGVtb2NyYXRpYyBzeXN0ZW0uIEFic2VuY2Ugb2YgY29uc3RyYWludHMgaXMgb25seSBvbmUgZGltZW5zaW9uIG9mIGZyZWVkb20uIEZyZWVkb20gaXMgYWxzbyAgIGFib3V0IGV4cGFuZGluZyB0aGUgYWJpbGl0eSBvZiBwZW9wbGUgdG8gZnJlZWx5IGV4cHJlc3MgdGhlbXNlbHZlcyBhbmQgZGV2ZWxvcCB0aGVpciBwb3RlbnRpYWwuIEZyZWVkb20gICBpbiB0aGlzIHNlbnNlIGlzIHRoZSBjb25kaXRpb24gaW4gd2hpY2ggcGVvcGxlIGNhbiBkZXZlbG9wIHRoZWlyIGNyZWF0aXZpdHkgYW5kIGNhcGFiaWxpdGllcy4gICAgSG93ZXZlciwgRnJlZWRvbSBkb2VzIG5vdCBtZWFuICdsaWNlbnNlJyB0byBkbyB3aGF0IG9uZSBsaWtlcyBhbmQgaGFzIHRvIGJlIGVuam95ZWQgd2l0aGluIHRoZSAgIGxpbWl0YXRpb25zIG1lbnRpb25lZCBpbiB0aGUgQ29uc3RpdHV0aW9uIGl0c2VsZi4gSW4gYnJpZWYsIHRoZSBmcmVlZG9tIGNvbmNlaXZlZCBieSB0aGUgUHJlYW1ibGUgb3IgICBmdW5kYW1lbnRhbCByaWdodHMgaXMgbm90IGFic29sdXRlIGJ1dCBxdWFsaWZpZWQuICAgIEFueSBmb3JtIG9mIHNvY2lhbCBsaXZpbmcgcmVxdWlyZXMgc29tZSBydWxlcyBhbmQgcmVndWxhdGlvbi4gVGhlc2UgcnVsZXMgbWF5IHJlcXVpcmUgc29tZSByZXN0cmFpbnRzIHRvICAgYmUgaW1wb3NlZCBvbiB0aGUgZnJlZWRvbSBvZiBpbmRpdmlkdWFscyBidXQgaXQgaXMgcmVjb2duaXNlZCB0aGF0IHN1Y2ggY29uc3RyYWludHMgbWF5IGFsc28gZnJlZSB1cyAgIGZyb20gaW5zZWN1cml0eSBhbmQgcHJvdmlkZSB1cyB3aXRoIHRoZSBjb25kaXRpb25zIGluIHdoaWNoIHdlIGNhbiBkZXZlbG9wIG91cnNlbHZlcy4gSW4gcG9saXRpY2FsIHRoZW9yeSAgIG11Y2ggb2YgdGhlIGRpc2N1c3Npb24gcmVnYXJkaW5nIGZyZWVkb20gaGFzIHRoZXJlZm9yZSBmb2N1c2VkIG9uIHRyeWluZyB0byBldm9sdmUgcHJpbmNpcGxlcyBieSB3aGljaCAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgd2UgY2FuIGRpc3Rpbmd1aXNoIGJldHdlZW4gc29jaWFsbHkgbmVjZXNzYXJ5IGNvbnN0cmFpbnRzIGFuZCBvdGhlciByZXN0cmljdGlvbnMuIFRvIHVuZGVyc3RhbmQgd2hpY2ggICBzb2NpYWwgY29uc3RyYWludHMgYXJlIG5lY2Vzc2FyeSwgZGlzY3Vzc2lvbnMgb24gZnJlZWRvbSBuZWVkIHRvIGxvb2sgYXQgdGhlIGNvcmUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlICAgaW5kaXZpZHVhbCBhbmQgdGhlIHNvY2lldHkgKG9yIGdyb3VwLCBjb21tdW5pdHksIG9yIHN0YXRlKSB3aXRoaW4gd2hpY2ggc2hlL2hlIGlzIHBsYWNlZC4gICAgSGVuY2UsIGluIHRoZSBhYm92ZSBxdWVzdGlvbiwgdGhlIG1vc3QgYXBwcm9wcmlhdGUgZGVmaW5pdGlvbiBvZiBGcmVlZG9tIGlzIHRoZSBjb25kaXRpb24gaW4gd2hpY2ggcGVvcGxlICAgY2FuIGRldmVsb3AgdGhlaXIgY3JlYXRpdml0eSBhbmQgY2FwYWJpbGl0aWVzLiAgIFNvdXJjZTogTkNFUlQgWEksIFBvbGl0aWNhbCB0aGVvcnksIGNoYXB0ZXIgMiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Freedom is the condition in which people   can develop their capabilities.  ",
        "option2" : " Freedom means absence of any type of rules   and regulations.  ",
        "option3" : " Freedom is the privilege to do whatever one   likes.  ",
        "option4" : " Freedom means the complete absence of   restraints and constraints.   "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements  regarding the Fundamental Rights enshrined in  the Indian Constitution:  1.  Any Fundamental Right can be repealed  through the passage of ordinary bills.  2.  Both Parliament and state legislatures have  power to make laws to give effect to any  Fundamental Right.  3.  Ordinances issued by the President cannot  be challenged in the courts as being violative  of fundamental rights.  Which of the statements given above is/are  incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IENvbnN0aXR1dGlvbjogICAxLiBBbnkgRnVuZGFtZW50YWwgUmlnaHQgY2FuIGJlIHJlcGVhbGVkIHRocm91Z2ggdGhlIHBhc3NhZ2Ugb2Ygb3JkaW5hcnkgYmlsbHMuICAgMi4gQm90aCBQYXJsaWFtZW50IGFuZCBzdGF0ZSBsZWdpc2xhdHVyZXMgaGF2ZSBwb3dlciB0byBtYWtlIGxhd3MgdG8gZ2l2ZSBlZmZlY3QgdG8gYW55IEZ1bmRhbWVudGFsIFJpZ2h0LiAgIDMuIE9yZGluYW5jZXMgaXNzdWVkIGJ5IHRoZSBQcmVzaWRlbnQgY2Fubm90IGJlIGNoYWxsZW5nZWQgaW4gdGhlIGNvdXJ0cyBhcyBiZWluZyB2aW9sYXRpdmUgb2YgICBmdW5kYW1lbnRhbCByaWdodHMuICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGluY29ycmVjdD8gICBhKSAxIG9ubHkgICBiKSAyIGFuZCAzIG9ubHkgICBjKSAzIG9ubHkgICBkKSAxLCAyIGFuZCAzICAgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBUaGUgRnVuZGFtZW50YWwgUmlnaHRzIGFyZSBlbnNocmluZWQgaW4gUGFydCBJSUkgb2YgdGhlIEluZGlhbiBDb25zdGl0dXRpb24gKEFydGljbGVzIDEyLTM1KS4gUGFydCAgIElJSSBvZiB0aGUgQ29uc3RpdHV0aW9uIGlzIGRlc2NyaWJlZCBhcyB0aGUgTWFnbmEgQ2FydGEgb2YgSW5kaWEuIFRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYXJlIG1lYW50IGZvciAgIHByb21vdGluZyB0aGUgaWRlYWwgb2YgcG9saXRpY2FsIGRlbW9jcmFjeS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMTMgZGVjbGFyZXMgdGhhdCBhbGwgbGF3cyB0aGF0IGFyZSBpbmNvbnNpc3RlbnQgd2l0aCBvciBpbiAgIGRlcm9nYXRpb24gb2YgYW55IG9mIHRoZSBmdW5kYW1lbnRhbCByaWdodHMgc2hhbGwgYmUgdm9pZC4gQXJ0aWNsZSAxMyAoMikgcHJvdmlkZXMgZm9yIHRoZSBwcm90ZWN0aW9uICAgb2YgdGhlIGZ1bmRhbWVudGFsIHJpZ2h0cyBvZiB0aGUgY2l0aXplbi4gUGFybGlhbWVudCBhbmQgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlcyBhcmUgY2xlYXJseSAgIHByb2hpYml0ZWQgZnJvbSBtYWtpbmcgbGF3cyB0aGF0IG1heSB0YWtlIGF3YXkgb3IgYWJyaWRnZSB0aGUgZnVuZGFtZW50YWwgcmlnaHRzIGd1YXJhbnRlZWQgdG8gdGhlICAgY2l0aXplbi4gVGhlIFBhcmxpYW1lbnQgY2FuIGN1cnRhaWwgb3IgcmVwZWFsIHRoZW0gYnV0IG9ubHkgYnkgYSBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgYWN0IGFuZCBub3QgYnkgICBhbiBvcmRpbmFyeSBhY3QuIE1vcmVvdmVyLCB0aGlzIGNhbiBiZSBkb25lIHdpdGhvdXQgYWZmZWN0aW5nIHRoZSAnYmFzaWMgc3RydWN0dXJlJyBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQXJ0aWNsZSAzNSBsYXlzIGRvd24gdGhhdCB0aGUgcG93ZXIgdG8gbWFrZSBsYXdzIHRvIGdpdmUgZWZmZWN0IHRvIGNlcnRhaW4gc3BlY2lmaWVkICAgZnVuZGFtZW50YWwgcmlnaHRzIHNoYWxsIHZlc3Qgb25seSBpbiB0aGUgUGFybGlhbWVudCBhbmQgbm90IGluIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMuIFBhcmxpYW1lbnQgc2hhbGwgaGF2ZSAgIChhbmQgdGhlIGxlZ2lzbGF0dXJlIG9mIGEgc3RhdGUgc2hhbGwgbm90IGhhdmUpIHBvd2VycyB0byBtYWtlIGxhd3MgZm9yIHByZXNjcmliaW5nIHB1bmlzaG1lbnQgZm9yIHRob3NlICAgYWN0cyB0aGF0IGFyZSBkZWNsYXJlZCB0byBiZSBvZmZlbmNlcyB1bmRlciB0aGUgZnVuZGFtZW50YWwgcmlnaHRzLiBUaGVzZSBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6IChhKSAgIFVudG91Y2hhYmlsaXR5IChBcnRpY2xlIDE3KS4gKGIpIFRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyIChBcnRpY2xlIDIzKS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMTMgZGVjbGFyZXMgdGhhdCBhbGwgbGF3cyB0aGF0IGFyZSBpbmNvbnNpc3RlbnQgd2l0aCBvciBpbiBkZXJvZ2F0aW9uIG9mIGFueSAgIG9mIHRoZSBmdW5kYW1lbnRhbCByaWdodHMgc2hhbGwgYmUgdm9pZC4gVGVtcG9yYXJ5IGxhd3MgbGlrZSBvcmRpbmFuY2VzIGlzc3VlZCBieSB0aGUgUHJlc2lkZW50IG9yIHRoZSAgIFN0YXRlIEdvdmVybm9ycyBjYW4gYmUgY2hhbGxlbmdlZCBpbiB0aGUgY291cnRzIGFzIHZpb2xhdGlvbiBvZiBGdW5kYW1lbnRhbCBSaWdodCBhbmQgaGVuY2UsIGNhbiBiZSAgIGRlY2xhcmVkIGFzIHZvaWQuICAgU291cmNlOiBNIGxheG1pa2FudCAoY2hhcCA3LSBGdW5kYW1lbnRhbCByaWdodHMpICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements:  1.  Disinvestment involves compulsory transfer  of more than half of the shareholding of the  government in public sector enterprise to  private hands.   2.  The main advantage of Disinvestment is  lessening of fiscal burden on the  government and achieve greater inflow of  private capital.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IDEuIERpc2ludmVzdG1lbnQgaW52b2x2ZXMgY29tcHVsc29yeSB0cmFuc2ZlciBvZiBtb3JlIHRoYW4gaGFsZiBvZiB0aGUgc2hhcmVob2xkaW5nIG9mIHRoZSBnb3Zlcm5tZW50IGluICAgcHVibGljIHNlY3RvciBlbnRlcnByaXNlIHRvIHByaXZhdGUgaGFuZHMuICAgIDIuIFRoZSBtYWluIGFkdmFudGFnZSBvZiBEaXNpbnZlc3RtZW50IGlzIGxlc3NlbmluZyBvZiBmaXNjYWwgYnVyZGVuIG9uIHRoZSBnb3Zlcm5tZW50IGFuZCBhY2hpZXZlIGdyZWF0ZXIgICBpbmZsb3cgb2YgcHJpdmF0ZSBjYXBpdGFsLiAgICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIG9ubHkgICBiKSAyIG9ubHkgICBjKSBCb3RoIDEgYW5kIDIgICBkKSBOZWl0aGVyIDEgbm9yIDIgICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBEaXNpbnZlc3RtZW50IHJlZmVycyB0byBhIHN0cmF0ZWd5IG9mIHNlbGxpbmcgb2ZmIG9yIGxpcXVpZGF0aW5nIHNvbWUgYXNzZXRzIGxpa2UgICBwbGFudCwgZGl2aXNpb24sIHVuaXQsIGV0Yy4gb3duZWQgYnkgdGhlIGdvdmVybm1lbnQgb3IgdGhlIG9yZ2FuaXphdGlvbi4gVGhlIGtleSBkaWZmZXJlbmNlIGJldHdlZW4gICBQcml2YXRpemF0aW9uIGFuZCBEaXNpbnZlc3RtZW50IGlzIHRoYXQgaW4gUHJpdmF0aXphdGlvbiwgdGhlIGdvdmVybm1lbnQgc2VsbCBtb3JlIHRoYW4gNTAgJSBvZiBpdHMgICBzaGFyZWhvbGRpbmdzLCB3aGVyZWFzIGluIGNhc2Ugb2YgRGlzaW52ZXN0bWVudCwgc2hhcmVob2xkaW5ncyBsZXNzIHRoYW4gNTAgJSBpcyBzb2xkIGJ5IHRoZSBnb3Zlcm5tZW50LiAgIEhvd2V2ZXIsIGRpdmVzdG1lbnQgZG9lc24ndCBuZWNlc3NhcmlseSBicmluZyB0aGUgZ292ZXJubWVudCBzdGFrZSBiZWxvdyA1MSUuIFRoZSBnb3Zlcm5tZW50IGRpdmVzdHMgICBpdHMgc3Rha2UgaW4gcHVibGljIHNlY3RvciB1bmRlcnRha2luZ3MgdG8gbWFrZSBtb25leS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgbWFpbiBhZHZhbnRhZ2Ugb2YgRGlzaW52ZXN0bWVudCBpcyB0aGF0LCBpdCBhaW1zIGF0IGxlc3NlbmluZyB0aGUgZmlzY2FsIGJ1cmRlbiAgIG9uIHRoZSBnb3Zlcm5tZW50LiBUaGUgbWFpbiBvYmplY3RpdmVzIG9mIERpc2ludmVzdG1lbnQgYXJlICAgMSkgVG8gcmVkdWNlIHRoZSBmaW5hbmNpYWwgYnVyZGVuIG9mIHRoZSBnb3Zlcm5tZW50ICAgMikgVG8gaW1wcm92ZSBwdWJsaWMgZmluYW5jZXMgICAzKSBUbyBpbmNyZWFzZSBncm93dGggb2YgdGhlIGZpcm0gICBUaGUgb3RoZXIgYWR2YW50YWdlcyBpbmNsdWRlIGFjaGlldmUgZ3JlYXRlciBpbmZsb3cgb2YgcHJpdmF0ZSBjYXBpdGFsLCBhbGxvdyBlbnRyeSBhbmQgZXhpdCBvZiBuZXcgZmlybXMgICBpbnRvIHRoZSBtYXJrZXQgdGh1cyBpbmNyZWFzaW5nIGNvbXBldGl0aW9uLiAgIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9wcml2YXRpc2F0aW9uLWlzLWZhci1tb3JlLWRpZmZpY3VsdC10aGFuLWNvbnNvbGlkYXRpb24vICAgRGlmZmVyZW5jZSBiZXR3ZWVuIFByaXZhdGl6YXRpb24gYW5kIGRpc2ludmVzdG1lbnQgfCBTdGVybGluZyBFZHVjYXRpb24gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 6,
      "question" : "What are the exceptions exclusively  mentioned under Article 15 of Indian  Constitution that allows the State to make  special provisions for certain classes?   1.  Special provision for transgender  communities   2.  Special provision for women and children  3.  Special provision for economically weaker  sections of citizens  4.  Special provision for physically disabled  persons  5.  Special provision for Scheduled Castes and  Scheduled Tribes  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFN0YXRlIHRvIG1ha2Ugc3BlY2lhbCBwcm92aXNpb25zIGZvciBjZXJ0YWluIGNsYXNzZXM/ICAgIDEuIFNwZWNpYWwgcHJvdmlzaW9uIGZvciB0cmFuc2dlbmRlciBjb21tdW5pdGllcyAgICAyLiBTcGVjaWFsIHByb3Zpc2lvbiBmb3Igd29tZW4gYW5kIGNoaWxkcmVuICAgMy4gU3BlY2lhbCBwcm92aXNpb24gZm9yIGVjb25vbWljYWxseSB3ZWFrZXIgc2VjdGlvbnMgb2YgY2l0aXplbnMgICA0LiBTcGVjaWFsIHByb3Zpc2lvbiBmb3IgcGh5c2ljYWxseSBkaXNhYmxlZCBwZXJzb25zICAgNS4gU3BlY2lhbCBwcm92aXNpb24gZm9yIFNjaGVkdWxlZCBDYXN0ZXMgYW5kIFNjaGVkdWxlZCBUcmliZXMgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgIGEpIDEsIDIgYW5kIDMgb25seSAgIGIpIDIsIDMgYW5kIDUgb25seSAgIGMpIDIgYW5kIDQgb25seSAgIGQpIDEsIDIsIDQgYW5kIDUgb25seSAgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBBcnRpY2xlIDE1IHByb3ZpZGVzIHRoYXQgdGhlIFN0YXRlIHNoYWxsIG5vdCBkaXNjcmltaW5hdGUgYWdhaW5zdCBhbnkgY2l0aXplbiBvbiBncm91bmRzIG9ubHkgb2YgcmVsaWdpb24sIHJhY2UsICAgY2FzdGUsIHNleCBvciBwbGFjZSBvZiBiaXJ0aC4gICBTdGF0ZW1lbnRzIDIsIDMgYW5kIDUgYXJlIGNvcnJlY3Q6IFRoZXJlIGFyZSBmb3VyIGV4Y2VwdGlvbnMgdG8gdGhlIGdlbmVyYWwgcnVsZSBvZiBub24tZGlzY3JpbWluYXRpb24gICBtZW50aW9uZWQgdW5kZXIgQXJ0aWNsZSAxNSBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uLiAgIDEpIFRoZSBzdGF0ZSBpcyBwZXJtaXR0ZWQgdG8gbWFrZSBhbnkgc3BlY2lhbCBwcm92aXNpb24gZm9yIHdvbWVuIGFuZCBjaGlsZHJlbi4gRm9yIGV4YW1wbGUsIHJlc2VydmF0aW9uICAgb2Ygc2VhdHMgZm9yIHdvbWVuIGluIGxvY2FsIGJvZGllcyBvciBwcm92aXNpb24gb2YgZnJlZSBlZHVjYXRpb24gZm9yIGNoaWxkcmVuLiAgIDIpIFRoZSBzdGF0ZSBpcyBwZXJtaXR0ZWQgdG8gbWFrZSBhbnkgc3BlY2lhbCBwcm92aXNpb24gZm9yIHRoZSBhZHZhbmNlbWVudCBvZiBhbnkgc29jaWFsbHkgYW5kICAgZWR1Y2F0aW9uYWxseSBiYWNrd2FyZCBjbGFzc2VzIG9mIGNpdGl6ZW5zIG9yIGZvciB0aGUgc2NoZWR1bGVkIGNhc3RlcyBhbmQgc2NoZWR1bGVkIHRyaWJlcy4gRm9yICAgZXhhbXBsZSwgcmVzZXJ2YXRpb24gb2Ygc2VhdHMgb3IgZmVlIGNvbmNlc3Npb25zIGluIHB1YmxpYyBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMuICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICAzKSBUaGUgc3RhdGUgaXMgZW1wb3dlcmVkIHRvIG1ha2UgYW55IHNwZWNpYWwgcHJvdmlzaW9uIGZvciB0aGUgYWR2YW5jZW1lbnQgb2YgYW55IGVjb25vbWljYWxseSB3ZWFrZXIgICBzZWN0aW9ucyBvZiBjaXRpemVucy4gICBTdGF0ZW1lbnRzIDEgYW5kIDQgYXJlIGluY29ycmVjdDogQ29uc3RpdHV0aW9uIHVuZGVyIEFydGljbGUgMTUgZG9lcyBub3QgcHJvdmlkZSBhbnkgZXhjbHVzaXZlIGV4Y2VwdGlvbiAgIGZvciB0aGUgU3BlY2lhbCBwcm92aXNpb24gZm9yIHRyYW5zZ2VuZGVyIGNvbW11bml0aWVzIHdpdGggZXh0ZW5kZWQgc2NvcGUgYW5kIFNwZWNpYWwgcHJvdmlzaW9uIGZvciAgIHBoeXNpY2FsbHkgZGlzYWJsZWQgcGVyc29ucy4gICBTb3VyY2U6IExheG1pa2FudGggQ2hhcHRlciA3IEZ1bmRhbWVudGFsIFJpZ2h0cyAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 5 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2, 4 and 5 only           .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements:  1.  The concept of 'equality before law' is of  British origin while the concept of 'equal  protection of laws' has been taken from the  American Constitution.  2.  Unlike the concept of 'equality before law',  the 'equal protection of laws' advocates  absence of special privileges in favour of any  person.  3.  Indian Constitution has rejected the  concept of 'equal protection of laws' in  favour of the concept of 'equality before the  law'.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IDEuIFRoZSBjb25jZXB0IG9mICdlcXVhbGl0eSBiZWZvcmUgbGF3JyBpcyBvZiBCcml0aXNoIG9yaWdpbiB3aGlsZSB0aGUgY29uY2VwdCBvZiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzJyBoYXMgICBiZWVuIHRha2VuIGZyb20gdGhlIEFtZXJpY2FuIENvbnN0aXR1dGlvbi4gICAyLiBVbmxpa2UgdGhlIGNvbmNlcHQgb2YgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnLCB0aGUgJ2VxdWFsIHByb3RlY3Rpb24gb2YgbGF3cycgYWR2b2NhdGVzIGFic2VuY2Ugb2Ygc3BlY2lhbCAgIHByaXZpbGVnZXMgaW4gZmF2b3VyIG9mIGFueSBwZXJzb24uICAgMy4gSW5kaWFuIENvbnN0aXR1dGlvbiBoYXMgcmVqZWN0ZWQgdGhlIGNvbmNlcHQgb2YgJ2VxdWFsIHByb3RlY3Rpb24gb2YgbGF3cycgaW4gZmF2b3VyIG9mIHRoZSBjb25jZXB0IG9mICAgJ2VxdWFsaXR5IGJlZm9yZSB0aGUgbGF3Jy4gICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIG9ubHkgICBiKSAyIGFuZCAzIG9ubHkgICBjKSAxIGFuZCAzIG9ubHkgICBkKSAxIGFuZCAyIG9ubHkgICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGV4cHJlc3Npb24gJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIHN0ZW1zIGZyb20gdGhlIEVuZ2xpc2ggQ29tbW9uIExhdyAoQnJpdGlzaCkgICBhbmQgdGhlIGV4cHJlc3Npb24gJ2VxdWFsIHByb3RlY3Rpb24gb2YgbGF3JyBzdGVtcyBmcm9tIHRoZSBBbWVyaWNhbiBDb25zdGl0dXRpb24uIFRoZSBjb25jZXB0IG9mICAgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIGlzIGFuIGVsZW1lbnQgb2YgdGhlIGNvbmNlcHQgb2YgJ1J1bGUgb2YgTGF3JywgcHJvcG91bmRlZCBieSBBLlYuIERpY2V5LCB0aGUgQnJpdGlzaCAgIGp1cmlzdC4gV2hpbGUsIHRoZSBGb3VydGVlbnRoIEFtZW5kbWVudCdzIEVxdWFsIFByb3RlY3Rpb24gQ2xhdXNlIG9mIFVTIENvbnN0aXR1dGlvbiByZXF1aXJlcyBzdGF0ZXMgdG8gICBwcmFjdGljZSBlcXVhbCBwcm90ZWN0aW9uLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBleHByZXNzaW9uICdlcXVhbGl0eSBiZWZvcmUgbGF3JyBpcyBhIG5lZ2F0aXZlIGNvbmNlcHQgYXMgaXQgaW1wbGllcyBhbiAgIGFic2VuY2Ugb2Ygc3BlY2lhbCBwcml2aWxlZ2VzIHRoYXQgZmF2b3VyIGFueSBpbmRpdmlkdWFsLiBIb3dldmVyLCB0aGUgZXhwcmVzc2lvbiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXcnICAgb24gdGhlIG90aGVyIGhhbmQsIGlzIGEgcG9zaXRpdmUgY29uY2VwdCBhcyBpdCBzaW1wbHkgbWVhbnMgdGhhdCB0aGVyZSBzaG91bGQgYmUgZXF1YWxpdHkgb2YgdHJlYXRtZW50IG9mICAgaW5kaXZpZHVhbHMgaW4gc2ltaWxhciBjaXJjdW1zdGFuY2VzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluZGlhbiBDb25zdGl0dXRpb24gaGFzIGFjY2VwdGVkIGJvdGggdGhlIGNvbmNlcHQgb2YgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIGFuZCAgICdlcXVhbCBwcm90ZWN0aW9uIG9mIGxhd3MnIHVuZGVyIEFydGljbGUgMTQuIEl0IHNheXMgdGhhdCB0aGUgU3RhdGUgc2hhbGwgbm90IGRlbnkgdG8gYW55IHBlcnNvbiBlcXVhbGl0eSBiZWZvcmUgICB0aGUgbGF3IG9yIHRoZSBlcXVhbCBwcm90ZWN0aW9uIG9mIHRoZSBsYXdzIHdpdGhpbiB0aGUgdGVycml0b3J5IG9mIEluZGlhLiBXaGVyZXZlciB0aGVyZSBpcyBubyBlcXVhbCAgIHByb3RlY3Rpb24gb2YgbGF3LCB0aGVyZSBpcyBubyBlcXVhbGl0eSBiZWZvcmUgbGF3LiBUaGUgQ29uc3RpdHV0aW9uIHBlcm1pdHMgdGhlIFN0YXRlIHRvIGVuYWN0IGxhd3MgdGhhdCAgIGFwcGx5IHRvIG9ubHkgY2VydGFpbiBjbGFzc2VzIG9mIHBlb3BsZSBmb3IgYWNoaWV2aW5nIGNlcnRhaW4gcmVhc29uYWJsZSBvYmplY3RzLiAgICBTb3VyY2U6ICBMYXhtaWthbnRoIENoYXB0ZXIgNyBGdW5kYW1lbnRhbCBSaWdodHMgICBFcXVhbGl0eSBiZWZvcmUgbGF3IGFuZCBlcXVhbCBwcm90ZWN0aW9uIG9mIGxhdyAtIGlQbGVhZGVycyAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 8,
      "question" : "Which of the following principles  constitute the components of 'social justice'?  1.  Principle of treating equals equally  2.  Rewarding people in proportion to their  effort  3.  Recognizing special needs of people while  distributing rewards  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IDEuIFByaW5jaXBsZSBvZiB0cmVhdGluZyBlcXVhbHMgZXF1YWxseSAgIDIuIFJld2FyZGluZyBwZW9wbGUgaW4gcHJvcG9ydGlvbiB0byB0aGVpciBlZmZvcnQgICAzLiBSZWNvZ25pemluZyBzcGVjaWFsIG5lZWRzIG9mIHBlb3BsZSB3aGlsZSBkaXN0cmlidXRpbmcgcmV3YXJkcyAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGUgZ2l2ZW4gYmVsb3c6ICAgYSkgMSBvbmx5ICAgYikgMSBhbmQgMiBvbmx5ICAgYykgMiBhbmQgMyBvbmx5ICAgZCkgMSwgMiBhbmQgMyAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIgICBBbGwgb2YgdGhlbSBhcmUgY29ycmVjdC4gVGhlIHRocmVlIHByaW5jaXBsZXMgb2Ygc29jaWFsIGp1c3RpY2UgYXJlOiAgIDEpIFByaW5jaXBsZSBvZiB0cmVhdGluZyBlcXVhbHMgZXF1YWxseTogSXQgaXMgY29uc2lkZXJlZCB0aGF0IGFsbCBpbmRpdmlkdWFscyBzaGFyZSBjZXJ0YWluIGNoYXJhY3RlcmlzdGljcyBhcyAgIGh1bWFuIGJlaW5ncy4gVGhlcmVmb3JlLCB0aGV5IGRlc2VydmUgZXF1YWwgcmlnaHRzIGFuZCBlcXVhbCB0cmVhdG1lbnQuICAgMikgUHJvcG9ydGlvbmFsaXR5OiBQcm92aWRlZCBldmVyeWJvZHkgc3RhcnRzIGZyb20gdGhlIHNhbWUgYmFzZSBsaW5lIG9mIGVxdWFsIHJpZ2h0cywganVzdGljZSBpbiBzdWNoIGNhc2VzICAgd291bGQgbWVhbiByZXdhcmRpbmcgcGVvcGxlIGluIHByb3BvcnRpb24gdG8gdGhlIHNjYWxlIGFuZCBxdWFsaXR5IG9mIHRoZWlyIGVmZm9ydC4gRm9yIGp1c3RpY2UgaW4gICBzb2NpZXR5LCB0aGUgcHJpbmNpcGxlIG9mIGVxdWFsIHRyZWF0bWVudCBuZWVkcyB0byBiZSBiYWxhbmNlZCB3aXRoIHRoZSBwcmluY2lwbGUgb2YgcHJvcG9ydGlvbmFsaXR5LiAgIDMpIFJlY29nbml0aW9uIG9mIHNwZWNpYWwgbmVlZHM6IEEgc29jaWV0eSBuZWVkcyB0byB0YWtlIGludG8gYWNjb3VudCBzcGVjaWFsIG5lZWRzIG9mIHBlb3BsZSB3aGlsZSAgIGRpc3RyaWJ1dGluZyByZXdhcmRzIG9yIGR1dGllcy4gSXQgZG9lcyBub3QgbmVjZXNzYXJpbHkgY29udHJhZGljdCB0aGUgcHJpbmNpcGxlIG9mIGVxdWFsIHRyZWF0bWVudCBzbyAgIG11Y2ggYXMgZXh0ZW5kIGl0IGJlY2F1c2UgdGhlIHByaW5jaXBsZSBvZiB0cmVhdGluZyBlcXVhbHMgZXF1YWxseSBjb3VsZCBpbXBseSB0aGF0IHBlb3BsZSB3aG8gYXJlIG5vdCAgIGVxdWFsIGluIGNlcnRhaW4gaW1wb3J0YW50IHJlc3BlY3RzIGNvdWxkIGJlIHRyZWF0ZWQgZGlmZmVyZW50bHkuICAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci00LCBQZy4gNTUtNTcgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 9,
      "question" : "Which one of the following statements  most appropriately defines the meaning of  'Rights'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IGEpIFRoZXkgYXJlIG1vcmFsIGRlbWFuZHMgb2YgYSBzb2NpZXR5IGZvciBpdHMgb3duIHNlbGYtZGV2ZWxvcG1lbnQuICAgYikgVGhleSBhcmUgaW5jZW50aXZlcyBnaXZlbiBieSB0aGUgU3RhdGUgdG8gdGhlIHBlb3BsZSBpbiByZXR1cm4gZm9yIHRoZWlyIG9iZWRpZW5jZSB0b3dhcmRzIHRoZSBydWxlIG9mICAgbGF3LiAgIGMpIFRoZXkgYXJlIHJlYXNvbmFibGUgY2xhaW1zIG9mIHBlcnNvbnMgcmVjb2duaXNlZCBieSBzb2NpZXR5IGFuZCBzYW5jdGlvbmVkIGJ5IGxhdy4gICBkKSBUaGV5IGFyZSBvYmxpZ2F0aW9ucyBtYW5kYXRlZCBvbiB0aGUgU3RhdGUgaW4gb3JkZXIgdG8gcHJvbW90ZSBzb2NpYWwgd2VsZmFyZS4gICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgUmlnaHRzIGFyZSByZWFzb25hYmxlIGNsYWltcyBvZiBwZXJzb25zIHJlY29nbmlzZWQgYnkgc29jaWV0eSBhbmQgc2FuY3Rpb25lZCBieSBsYXcuICAgMSkgUmlnaHRzIGFyZSBjbGFpbXMgb2YgYSBwZXJzb24gb3ZlciBvdGhlciBmZWxsb3cgYmVpbmdzLCBvdmVyIHRoZSBzb2NpZXR5IGFuZCBvdmVyIHRoZSBnb3Zlcm5tZW50LiBBIHJpZ2h0ICAgaXMgcG9zc2libGUgd2hlbiB5b3UgbWFrZSBhIGNsYWltIHRoYXQgaXMgZXF1YWxseSBwb3NzaWJsZSBmb3Igb3RoZXJzLiBZb3UgY2Fubm90IGhhdmUgYSByaWdodCB0aGF0IGhhcm1zICAgb3IgaHVydHMgb3RoZXJzLiBZb3UgY2Fubm90IGhhdmUgYSByaWdodCB0byBwbGF5IGEgZ2FtZSBpbiBzdWNoIGEgd2F5IHRoYXQgaXQgYnJlYWtzIHRoZSBuZWlnaGJvdXIncyAgIHdpbmRvdyAgIDIpIFJpZ2h0cyBhY3F1aXJlIG1lYW5pbmcgb25seSBpbiBzb2NpZXR5LiBFdmVyeSBzb2NpZXR5IG1ha2VzIGNlcnRhaW4gcnVsZXMgdG8gcmVndWxhdGUgb3VyIGNvbmR1Y3QuICAgVGhleSB0ZWxsIHVzIHdoYXQgaXMgcmlnaHQgYW5kIHdoYXQgaXMgd3JvbmcuIFdoYXQgaXMgcmVjb2duaXNlZCBieSB0aGUgc29jaWV0eSBhcyByaWdodGZ1bCBiZWNvbWVzIHRoZSAgIGJhc2lzIG9mIHJpZ2h0cy4gVGhhdCBpcyB3aHkgdGhlIG5vdGlvbiBvZiByaWdodHMgY2hhbmdlcyBmcm9tIHRpbWUgdG8gdGltZSBhbmQgc29jaWV0eSB0byBzb2NpZXR5LiAgIDMpIFdoZW4gdGhlIHNvY2lhbGx5IHJlY29nbmlzZWQgY2xhaW1zIGFyZSB3cml0dGVuIGludG8gbGF3LCB0aGV5IGFjcXVpcmUgcmVhbCBmb3JjZS4gT3RoZXJ3aXNlLCB0aGV5ICAgcmVtYWluIG1lcmVseSBhcyBuYXR1cmFsIG9yIG1vcmFsIHJpZ2h0cy4gV2hlbiBsYXcgcmVjb2duaXNlcyBzb21lIGNsYWltcywgdGhleSBiZWNvbWUgZW5mb3JjZWFibGUuICAgV2UgY2FuIHRoZW4gZGVtYW5kIHRoZWlyIGFwcGxpY2F0aW9uLiBXaGVuIGZlbGxvdyBjaXRpemVucyBvciB0aGUgZ292ZXJubWVudCBkbyBub3QgcmVzcGVjdCB0aGVzZSAgIHJpZ2h0cywgd2UgY2FsbCBpdCB2aW9sYXRpb24gb3IgaW5mcmluZ2VtZW50IG9mIG91ciByaWdodHMuIEluIHN1Y2ggY2lyY3Vtc3RhbmNlcyBjaXRpemVucyBjYW4gYXBwcm9hY2ggICBjb3VydHMgdG8gcHJvdGVjdCB0aGVpciByaWdodHMuICAgU291cmNlOiBOQ0VSVCBJWCwgRGVtb2NyYXRpYyBwb2xpdGljcyBjaGFwdGVyIDYgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They are moral demands of a society for its   own self-development.  ",
        "option2" : " They are incentives given by the State to the   people in return for their obedience   towards the rule of law.  ",
        "option3" : " They are reasonable claims of persons   recognised by society and sanctioned by   law.  ",
        "option4" : " They are obligations mandated on the State   in order to promote social welfare.   "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to 'International Space  Laws', which of the following agreements are  signed by India?  1. Rescue Agreement  2. The Outer Space Treaty  3. Artemis Accord  4. Moon Agreement  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IDEuIFJlc2N1ZSBBZ3JlZW1lbnQgICAyLiBUaGUgT3V0ZXIgU3BhY2UgVHJlYXR5ICAgMy4gQXJ0ZW1pcyBBY2NvcmQgICA0LiBNb29uIEFncmVlbWVudCAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgIGEpIDEgYW5kIDIgb25seSAgIGIpIDEsIDIgYW5kIDQgb25seSAgIGMpIDIgYW5kIDQgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIEFncmVlbWVudCBvbiB0aGUgcmVzY3VlIG9mIEFzdHJvbmF1dHMsIHRoZSBSZXR1cm4gb2YgQXN0cm9uYXV0cyBhbmQgdGhlIHJldHVybiBvZiAgIG9iamVjdHMgbGF1bmNoZWQgaW50byBPdXRlciBTcGFjZSwgYWxzbyByZWZlcnJlZCB0byBhcyB0aGUgUmVzY3VlIEFncmVlbWVudCBpcyBhbiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudCAgIHNldHRpbmcgZm9ydGggcmlnaHRzIGFuZCBvYmxpZ2F0aW9ucyBvZiBzdGF0ZXMgY29uY2VybmluZyB0aGUgcmVzY3VlIG9mIHBlcnNvbnMgaW4gc3BhY2UuIFRoZSBBZ3JlZW1lbnQgICB3YXMgY3JlYXRlZCBieSBhIDE5IERlY2VtYmVyIDE5NjcgY29uc2Vuc3VzIHZvdGUgaW4gdGhlIFVuaXRlZCBOYXRpb25zIEdlbmVyYWwgQXNzZW1ibHkgKFJlc29sdXRpb24gICAyMzQ1IChYWElJKSkuIEl0IGNhbWUgaW50byBmb3JjZSBvbiAzIERlY2VtYmVyIDE5NjguIEluZGlhIGhhcyBzaWduZWQgYW5kIHJhdGlmaWVkIHRoZSBSZXNjdWUgQWdyZWVtZW50LiAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuIFRoZSBPdXRlciBTcGFjZSBUcmVhdHksIGZvcm1hbGx5IHRoZSBUcmVhdHkgb24gUHJpbmNpcGxlcyBHb3Zlcm5pbmcgdGhlIEFjdGl2aXRpZXMgb2YgICBTdGF0ZXMgaW4gdGhlIEV4cGxvcmF0aW9uIGFuZCBVc2Ugb2YgT3V0ZXIgU3BhY2UsIGluY2x1ZGluZyB0aGUgTW9vbiBhbmQgT3RoZXIgQ2VsZXN0aWFsIEJvZGllcywgaXMgYSAgIG11bHRpbGF0ZXJhbCB0cmVhdHkgdGhhdCBmb3JtcyB0aGUgYmFzaXMgb2YgaW50ZXJuYXRpb25hbCBzcGFjZSBsYXcuIE5lZ290aWF0ZWQgYW5kIGRyYWZ0ZWQgdW5kZXIgdGhlICAgYXVzcGljZXMgb2YgdGhlIFVuaXRlZCBOYXRpb25zLCBpdCB3YXMgb3BlbmVkIGZvciBzaWduYXR1cmUgb24gMjcgSmFudWFyeSAxOTY3LCBlbnRlcmluZyBpbnRvIGZvcmNlIG9uIDEwICAgT2N0b2JlciAxOTY3LiBJbmRpYSBoYXMgc2lnbmVkIE91dGVyIFNwYWNlIFRyZWF0eSBvbiAzcmQgTWFyY2gsIDE5NjcuICAgT3B0aW9uIDMgaXMgaW5jb3JyZWN0LiBUaGUgQXJ0ZW1pcyBBY2NvcmRzIGFyZSBhbiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudCBiZXR3ZWVuIGdvdmVybm1lbnRzICAgcGFydGljaXBhdGluZyBpbiB0aGUgQXJ0ZW1pcyBQcm9ncmFtLCBhbiBBbWVyaWNhbi1sZWQgZWZmb3J0IHRvIHJldHVybiBodW1hbnMgdG8gdGhlIE1vb24gYnkgMjAyNCwgd2l0aCAgIHRoZSB1bHRpbWF0ZSBnb2FsIG9mIGV4cGFuZGluZyBzcGFjZSBleHBsb3JhdGlvbi4gSXQgZW5zdXJlcyB0aGF0IHNwYWNlIGV4cGxvcmF0aW9uIGlzIGNvbmR1Y3RlZCBpbiBhIHNhZmUsICAgc3VzdGFpbmFibGUgYW5kIHRyYW5zcGFyZW50IG1hbm5lciBhbmQgaW4gZnVsbCBjb21wbGlhbmNlIHdpdGggaW50ZXJuYXRpb25hbCBsYXcuIEluZGlhIGhhcyBub3QgeWV0ICAgc2lnbmVkIEFydGVtaXMgQWNjb3Jkcy4gVVMgaGFzIGludml0ZWQgSW5kaWEgdG8gam9pbiB0aGUgYWNjb3JkcyBhbmQgc29tZSBwcmVsaW1pbmFyeSBvZmZpY2lhbCBkaXNjdXNzaW9uICAgb24gdGhlIGlzc3VlIHRvb2sgcGxhY2UgYmV0d2VlbiB0aGUgdHdvIHNpZGVzIHdoZW4gSW5kaWFuIFBNIG1ldCBVUyBQcmVzaWRlbnQgYXQgdGhlIFdoaXRlIEhvdXNlIGZvciAgIHRoZSBiaWxhdGVyYWwgc3VtbWl0IGxhc3QgbW9udGggKFNlcHQgMjAyMSkuICAgT3B0aW9uIDQgaXMgY29ycmVjdC4gVGhlIEFncmVlbWVudCBHb3Zlcm5pbmcgdGhlIEFjdGl2aXRpZXMgb2YgU3RhdGVzIG9uIHRoZSBNb29uIGFuZCBPdGhlciBDZWxlc3RpYWwgICBCb2RpZXMsIGJldHRlciBrbm93biBhcyB0aGUgTW9vbiBUcmVhdHkgb3IgTW9vbiBBZ3JlZW1lbnQsIGlzIGEgbXVsdGlsYXRlcmFsIHRyZWF0eSB0aGF0IHR1cm5zICAganVyaXNkaWN0aW9uIG9mIGFsbCBjZWxlc3RpYWwgYm9kaWVzIChpbmNsdWRpbmcgdGhlIG9yYml0cyBhcm91bmQgc3VjaCBib2RpZXMpIG92ZXIgdG8gdGhlIHBhcnRpY2lwYW50IGNvdW50cmllcy4gICBUaHVzLCBhbGwgYWN0aXZpdGllcyB3b3VsZCBjb25mb3JtIHRvIGludGVybmF0aW9uYWwgbGF3LCBpbmNsdWRpbmcgdGhlIFVuaXRlZCBOYXRpb25zIENoYXJ0ZXIuICAgSW5kaWEgaGFzIHNpZ25lZCB0aGlzICdBZ3JlZW1lbnQgR292ZXJuaW5nIHRoZSBBY3Rpdml0aWVzIG9mIFN0YXRlcyBvbiB0aGUgTW9vbiBhbmQgT3RoZXIgQ2VsZXN0aWFsIEJvZGllcyAgIGluIDE5ODIsIGJ1dCBuZXZlciByYXRpZmllZCBpdC4gICBBcyBvZiBTZXB0ZW1iZXIsIDIwMjEsIGl0IGhhcyBub3QgYmVlbiByYXRpZmllZCBieSBhbnkgc3RhdGUgdGhhdCBlbmdhZ2VzIGluIHNlbGYtbGF1bmNoZWQgaHVtYW4gc3BhY2VmbGlnaHQgICAoZS5nLiB0aGUgVW5pdGVkIFN0YXRlcywgUnVzc2lhIChmb3JtZXIgU292aWV0IFVuaW9uKSwgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgQ2hpbmEpIHNpbmNlIGl0cyBjcmVhdGlvbiBvbiAgIERlY2VtYmVyIDE4LCAxOTc5LCBhbmQgdGh1cyBpdCBoYXMgbGl0dGxlIHRvIG5vIHJlbGV2YW5jeSBpbiBpbnRlcm5hdGlvbmFsIGxhdy4gQXMgb2YgSmFudWFyeSAyMDE5LCAxOCBzdGF0ZXMgICBhcmUgcGFydGllcyB0byB0aGUgdHJlYXR5LiAgIFNvdXJjZTogICAgSW5kaWEgYW5kIHRoZSBnZW9wb2xpdGljcyBvZiB0aGUgbW9vbiAtRm9ydW1JQVMgQmxvZyAgIFdoYXQgaXMgQXJ0ZW1pcyBBY2NvcmRzPyAtRm9ydW1JQVMgQmxvZyAgIFNwYWNlIExhdyBUcmVhdGllcyBhbmQgUHJpbmNpcGxlcyAodW5vb3NhLm9yZykgICBSZXNjdWUgQWdyZWVtZW50ICh1bm9vc2Eub3JnKSAgIFdoeSBJbmRpYSBzaG91bGQgZXhpdCB0aGUgTW9vbiBBZ3JlZW1lbnQgLSBUaGUgSGluZHUgQnVzaW5lc3NMaW5lICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following are envisaged by  the Right against Exploitation in the  Constitution of India?   1.  Prohibition of traffic in human beings and  forced labour   2.  Abolition of untouchability   3.  Protection of the interests of minorities   4.  Prohibition of employment of children in  factories and mines   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IDEuIFByb2hpYml0aW9uIG9mIHRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyICAgIDIuIEFib2xpdGlvbiBvZiB1bnRvdWNoYWJpbGl0eSAgICAzLiBQcm90ZWN0aW9uIG9mIHRoZSBpbnRlcmVzdHMgb2YgbWlub3JpdGllcyAgICA0LiBQcm9oaWJpdGlvbiBvZiBlbXBsb3ltZW50IG9mIGNoaWxkcmVuIGluIGZhY3RvcmllcyBhbmQgbWluZXMgICAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZSBnaXZlbiBiZWxvdzogICAgYSkgMSwgMiBhbmQgNCBvbmx5ICAgIGIpIDIsIDMgYW5kIDQgb25seSAgICBjKSAxIGFuZCA0IG9ubHkgICAgZCkgMSwgMiwgMyBhbmQgNCAgICAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgVGhlIFJpZ2h0IGFnYWluc3QgRXhwbG9pdGF0aW9uIHVuZGVyIEFydGljbGVzIDIzIGFuZCAyNCBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBndWFyYW50ZWVzIHRoZSBkaWduaXR5ICAgb2YgdGhlIGluZGl2aWR1YWwuIFVuZGVyIHRoZXNlIC0gICAgQXJ0aWNsZSAyMyBwcm9oaWJpdHMgdHJhZmZpYyBpbiBodW1hbiBiZWluZ3MsIGJlZ2FyIChmb3JjZWQgbGFib3VyKSBhbmQgb3RoZXIgc2ltaWxhciBmb3JtcyBvZiBmb3JjZWQgICBsYWJvdXIuIEFueSBjb250cmF2ZW50aW9uIG9mIHRoaXMgcHJvdmlzaW9uIHNoYWxsIGJlIGFuIG9mZmVuY2UgcHVuaXNoYWJsZSBpbiBhY2NvcmRhbmNlIHdpdGggbGF3LiBUaGlzIHJpZ2h0ICAgaXMgYXZhaWxhYmxlIHRvIGJvdGggY2l0aXplbnMgYW5kIG5vbi1jaXRpemVucy4gSXQgcHJvdGVjdHMgdGhlIGluZGl2aWR1YWwgbm90IG9ubHkgYWdhaW5zdCB0aGUgU3RhdGUgYnV0IGFsc28gICBhZ2FpbnN0IHByaXZhdGUgcGVyc29ucyAgIEFydGljbGUgMjQgcHJvaGliaXRzIHRoZSBlbXBsb3ltZW50IG9mIGNoaWxkcmVuIGJlbG93IHRoZSBhZ2Ugb2YgMTQgeWVhcnMgaW4gYW55IGZhY3RvcnksIG1pbmUgb3Igb3RoZXIgICBoYXphcmRvdXMgYWN0aXZpdGllcyBsaWtlIGNvbnN0cnVjdGlvbiB3b3JrIG9yIHJhaWx3YXkuIEJ1dCBpdCBkb2VzIG5vdCBwcm9oaWJpdCB0aGVpciBlbXBsb3ltZW50IGluIGFueSAgIGhhcm1sZXNzIG9yIGlubm9jZW50IHdvcmsuICAgQWJvbGl0aW9uIG9mIHVudG91Y2hhYmlsaXR5IGFuZCBwcm90ZWN0aW9uIG9mIHRoZSBpbnRlcmVzdHMgb2YgbWlub3JpdGllcyBhcmUgZW52aXNhZ2VkIHVuZGVyIEFydGljbGUgMTcgYW5kICAgQXJ0aWNsZSAyOSBvZiB0aGUgQ29uc3RpdHV0aW9uIHJlc3BlY3RpdmVseS4gICAgU291cmNlKSBVUFNDIENTRSAyMDE3ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to 'Article 20 of Indian  Constitution', consider the following  statements:  1.  It prohibits the retrospective imposition of  any kind of civil liability on a person.  2. The Protection against Double Jeopardy is  available in proceedings before  departmental authorities.  3.  It protects an individual from any sort of  compulsion to give thumb impressions or  blood specimens.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IDEuIEl0IHByb2hpYml0cyB0aGUgcmV0cm9zcGVjdGl2ZSBpbXBvc2l0aW9uIG9mIGFueSBraW5kIG9mIGNpdmlsIGxpYWJpbGl0eSBvbiBhIHBlcnNvbi4gICAyLiBUaGUgUHJvdGVjdGlvbiBhZ2FpbnN0IERvdWJsZSBKZW9wYXJkeSBpcyBhdmFpbGFibGUgaW4gcHJvY2VlZGluZ3MgYmVmb3JlIGRlcGFydG1lbnRhbCBhdXRob3JpdGllcy4gICAzLiBJdCBwcm90ZWN0cyBhbiBpbmRpdmlkdWFsIGZyb20gYW55IHNvcnQgb2YgY29tcHVsc2lvbiB0byBnaXZlIHRodW1iIGltcHJlc3Npb25zIG9yIGJsb29kIHNwZWNpbWVucy4gICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIG9ubHkgICBiKSAxIGFuZCAyIG9ubHkgICBjKSAyIGFuZCAzIG9ubHkgICBkKSBOb25lIG9mIHRoZSBhYm92ZSAgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBBcnRpY2xlIDIwIG9mIEluZGlhbiBDb25zdGl0dXRpb24gZ3JhbnRzIHByb3RlY3Rpb24gYWdhaW5zdCBhcmJpdHJhcnkgYW5kIGV4Y2Vzc2l2ZSBwdW5pc2htZW50IHRvIGFuICAgYWNjdXNlZCBwZXJzb24sIHdoZXRoZXIgY2l0aXplbiBvciBmb3JlaWduZXIgb3IgbGVnYWwgcGVyc29uIGxpa2UgYSBjb21wYW55IG9yIGEgY29ycG9yYXRpb24uICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBVbmRlciBBcnRpY2xlIDIwKGEpLCBubyBwZXJzb24gc2hhbGwgYmUgKGkpIGNvbnZpY3RlZCBvZiBhbnkgb2ZmZW5jZSBleGNlcHQgZm9yICAgdmlvbGF0aW9uIG9mIGEgbGF3IGluIGZvcmNlIGF0IHRoZSB0aW1lIG9mIHRoZSBjb21taXNzaW9uIG9mIHRoZSBhY3QsIG5vciAoaWkpIHN1YmplY3RlZCB0byBhIHBlbmFsdHkgZ3JlYXRlciAgIHRoYW4gdGhhdCBwcmVzY3JpYmVkIGJ5IHRoZSBsYXcgaW4gZm9yY2UgYXQgdGhlIHRpbWUgb2YgdGhlIGNvbW1pc3Npb24gb2YgdGhlIGFjdC4gQW4gZXgtcG9zdC1mYWN0byBsYXcgaXMgICBvbmUgdGhhdCBpbXBvc2VzIHBlbmFsdGllcyByZXRyb3NwZWN0aXZlbHkgKHJldHJvYWN0aXZlbHkpLCB0aGF0IGlzLCB1cG9uIGFjdHMgYWxyZWFkeSBkb25lIG9yIHdoaWNoICAgaW5jcmVhc2VzIHRoZSBwZW5hbHRpZXMgZm9yIHN1Y2ggYWN0cy4gVGhlIGVuYWN0bWVudCBvZiBzdWNoIGEgbGF3IGlzIHByb2hpYml0ZWQgYnkgdGhlIGZpcnN0IHByb3Zpc2lvbiBvZiAgIEFydGljbGUgMjAuIEhvd2V2ZXIsIHRoaXMgbGltaXRhdGlvbiBpcyBpbXBvc2VkIG9ubHkgb24gY3JpbWluYWwgbGF3cyBhbmQgbm90IG9uIGNpdmlsIGxhd3Mgb3IgdGF4IGxhd3MuIEluICAgb3RoZXIgd29yZHMsIGEgY2l2aWwgbGlhYmlsaXR5IG9yIGEgdGF4IGNhbiBiZSBpbXBvc2VkIHJldHJvc3BlY3RpdmVseS4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMjAgc3RhdGVzIHRoYXQtIE5vIHBlcnNvbiBzaGFsbCBiZSBwcm9zZWN1dGVkIGFuZCBwdW5pc2hlZCBmb3IgdGhlIHNhbWUgICBvZmZlbmNlIG1vcmUgdGhhbiBvbmNlLiBUaGUgcHJvdGVjdGlvbiBhZ2FpbnN0IGRvdWJsZSBqZW9wYXJkeSBpcyBhdmFpbGFibGUgb25seSBpbiBwcm9jZWVkaW5ncyBiZWZvcmUgYSAgIGNvdXJ0IG9mIGxhdyBvciBhIGp1ZGljaWFsIHRyaWJ1bmFsLiBJbiBvdGhlciB3b3JkcywgaXQgaXMgbm90IGF2YWlsYWJsZSBpbiBwcm9jZWVkaW5ncyBiZWZvcmUgZGVwYXJ0bWVudGFsICAgb3IgYWRtaW5pc3RyYXRpdmUgYXV0aG9yaXRpZXMgYXMgdGhleSBhcmUgbm90IG9mIGp1ZGljaWFsIG5hdHVyZS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMjAoYykgc3RhdGVzIHRoYXQgbm8gcGVyc29uIGFjY3VzZWQgb2YgYW55IG9mZmVuY2Ugc2hhbGwgYmUgY29tcGVsbGVkIHRvICAgYmUgYSB3aXRuZXNzIGFnYWluc3QgaGltc2VsZiAobm8gc2VsZi1pbmNyaW1pbmF0aW9uKS4gVGhlIHByb3RlY3Rpb24gYWdhaW5zdCBzZWxmLWluY3JpbWluYXRpb24gZXh0ZW5kcyB0byAgIGJvdGggb3JhbCBldmlkZW5jZSBhbmQgZG9jdW1lbnRhcnkgZXZpZGVuY2UuIEhvd2V2ZXIsIGl0IGRvZXMgbm90IGV4dGVuZCB0byAoaSkgY29tcHVsc29yeSBwcm9kdWN0aW9uICAgb2YgbWF0ZXJpYWwgb2JqZWN0cywgKGlpKSBjb21wdWxzaW9uIHRvIGdpdmUgdGh1bWIgaW1wcmVzc2lvbiwgc3BlY2ltZW4gc2lnbmF0dXJlLCBibG9vZCBzcGVjaW1lbnMsIGFuZCAgIChpaWkpIGNvbXB1bHNvcnkgZXhoaWJpdGlvbiBvZiB0aGUgYm9keS4gRnVydGhlciwgaXQgZXh0ZW5kcyBvbmx5IHRvIGNyaW1pbmFsIHByb2NlZWRpbmdzIGFuZCBub3QgdG8gY2l2aWwgICBwcm9jZWVkaW5ncyBvciBwcm9jZWVkaW5ncyB3aGljaCBhcmUgbm90IG9mIGNyaW1pbmFsIG5hdHVyZSAgIFNvdXJjZTogIExheG1pa2FudGggQ2hhcHRlciA3IEZ1bmRhbWVudGFsIFJpZ2h0cyAgIFByb3RlY3Rpb24gaW4gcmVzcGVjdCBvZiBDb252aWN0aW9uIGZvciBPZmZlbmNlczogQSBDb25zdGl0dXRpb25hbCBCbGVuZCAoaXBsZWFkZXJzLmluKSAgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "None of the above        .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements  regarding the Cultural and Educational Rights  provided under Part III of the Constitution:  1.  The rights guaranteed under Article 29 are  extended to both minority as well as  majority religious communities.  2.  The right to conserve the language covers  the right to agitate for the protection of the  language.   3.  The right to establish educational  institutions has been extended to religious  minorities but not to linguistic minorities.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IElJSSBvZiB0aGUgQ29uc3RpdHV0aW9uOiAgIDEuIFRoZSByaWdodHMgZ3VhcmFudGVlZCB1bmRlciBBcnRpY2xlIDI5IGFyZSBleHRlbmRlZCB0byBib3RoIG1pbm9yaXR5IGFzIHdlbGwgYXMgbWFqb3JpdHkgcmVsaWdpb3VzICAgY29tbXVuaXRpZXMuICAgMi4gVGhlIHJpZ2h0IHRvIGNvbnNlcnZlIHRoZSBsYW5ndWFnZSBjb3ZlcnMgdGhlIHJpZ2h0IHRvIGFnaXRhdGUgZm9yIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBsYW5ndWFnZS4gICAgMy4gVGhlIHJpZ2h0IHRvIGVzdGFibGlzaCBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMgaGFzIGJlZW4gZXh0ZW5kZWQgdG8gcmVsaWdpb3VzIG1pbm9yaXRpZXMgYnV0IG5vdCB0byAgIGxpbmd1aXN0aWMgbWlub3JpdGllcy4gICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICAgYSkgMSBhbmQgMiBvbmx5ICAgIGIpIDIgYW5kIDMgb25seSAgICBjKSAxIG9ubHkgICAgZCkgMSwgMiBhbmQgMyAgICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgQXJ0aWNsZSAyOSBhbmQgMzAgb2YgSW5kaWFuIGNvbnN0aXR1dGlvbiBwcm92aWRlcyBmb3IgdGhlIGN1bHR1cmFsIGFuZCBlZHVjYXRpb25hbCByaWdodHMgYXZhaWxhYmxlIHRvIHRoZSAgIGNpdGl6ZW5zLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBcnRpY2xlIDI5IGdyYW50cyBwcm90ZWN0aW9uIHRvIGJvdGggcmVsaWdpb3VzIG1pbm9yaXRpZXMgYXMgd2VsbCBhcyBsaW5ndWlzdGljICAgbWlub3JpdGllcy4gSG93ZXZlciwgdGhlIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IHRoZSBzY29wZSBvZiB0aGlzIGFydGljbGUgaXMgbm90IG5lY2Vzc2FyaWx5IHJlc3RyaWN0ZWQgdG8gICBtaW5vcml0aWVzIG9ubHksIGFzIGl0IGlzIGNvbW1vbmx5IGFzc3VtZWQgdG8gYmUuIFRoaXMgaXMgYmVjYXVzZSBvZiB0aGUgdXNlIG9mIHdvcmRzICdzZWN0aW9uIG9mIGNpdGl6ZW5zJyAgIGluIHRoZSBBcnRpY2xlIHRoYXQgaW5jbHVkZSBtaW5vcml0aWVzIGFzIHdlbGwgYXMgbWFqb3JpdHkuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgcmlnaHQgdG8gY29uc2VydmUgdGhlIGxhbmd1YWdlIGluY2x1ZGVzIHRoZSByaWdodCAgIHRvIGFnaXRhdGUgZm9yIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBsYW5ndWFnZS4gSGVuY2UsIHRoZSBwb2xpdGljYWwgc3BlZWNoZXMgb3IgcHJvbWlzZXMgbWFkZSBmb3IgdGhlICAgY29uc2VydmF0aW9uIG9mIHRoZSBsYW5ndWFnZSBvZiBhIHNlY3Rpb24gb2YgdGhlIGNpdGl6ZW5zIGRvZXMgbm90IGFtb3VudCB0byBjb3JydXB0IHByYWN0aWNlIHVuZGVyIHRoZSAgIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMzAgZ3JhbnRzIHRoZSBmb2xsb3dpbmcgcmlnaHRzIHRvIG1pbm9yaXRpZXMsIHdoZXRoZXIgcmVsaWdpb3VzIG9yICAgbGluZ3Vpc3RpYzogICAxKSBBbGwgbWlub3JpdGllcyBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBlc3RhYmxpc2ggYW5kIGFkbWluaXN0ZXIgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zIG9mIHRoZWlyIGNob2ljZS4gICAyKSBUaGUgY29tcGVuc2F0aW9uIGFtb3VudCBmaXhlZCBieSB0aGUgU3RhdGUgZm9yIHRoZSBjb21wdWxzb3J5IGFjcXVpc2l0aW9uIG9mIGFueSBwcm9wZXJ0eSBvZiBhICAgbWlub3JpdHkgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb24gc2hhbGwgbm90IHJlc3RyaWN0IG9yIGFicm9nYXRlIHRoZSByaWdodCBndWFyYW50ZWVkIHRvIHRoZW0uIFRoaXMgICBwcm92aXNpb24gd2FzIGFkZGVkIGJ5IHRoZSA0NHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3OC4gICAgMykgSW4gZ3JhbnRpbmcgYWlkLCB0aGUgU3RhdGUgc2hhbGwgbm90IGRpc2NyaW1pbmF0ZSBhZ2FpbnN0IGFueSBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbiBtYW5hZ2VkIGJ5IGEgICBtaW5vcml0eS4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50IC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDcgLSBGdW5kYW1lbnRhbCBSaWdodHMuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the implementation of  Directive Principles of State Policy (DPSPs) in  India, consider the following statements:  1.  The 25th Constitutional Amendment Act  made all the DPSPs non-justiciable.  2.  There is no moral obligation on the  government to implement the DPSPs.  3.  The 73rd Constitutional Amendment Act of  1992 has given effect to one of the Directive  Principles.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IHRoZSBmb2xsb3dpbmcgc3RhdGVtZW50czogICAxLiBUaGUgMjV0aCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0IG1hZGUgYWxsIHRoZSBEUFNQcyBub24tanVzdGljaWFibGUuICAgMi4gVGhlcmUgaXMgbm8gbW9yYWwgb2JsaWdhdGlvbiBvbiB0aGUgZ292ZXJubWVudCB0byBpbXBsZW1lbnQgdGhlIERQU1BzLiAgIDMuIFRoZSA3M3JkIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3Qgb2YgMTk5MiBoYXMgZ2l2ZW4gZWZmZWN0IHRvIG9uZSBvZiB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMuICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgYSkgMSBhbmQgMyBvbmx5ICAgYikgMyBvbmx5ICAgYykgMiBhbmQgMyBvbmx5ICAgZCkgMSBhbmQgMiBvbmx5ICAgIEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBBbGwgdGhlIERQU1Agc2luY2UgdGhlIGFkb3B0aW9uIGFuZCBlbmZvcmNlbWVudCBvZiB0aGUgY29uc3RpdHV0aW9uIGhhdmUgYmVlbiAgIG5vbi1qdXN0aWNpYWJsZS4gVGhlIDI1dGggYW1lbmRtZW50IGFjdCBwcm92aWRlZCB0aGF0IGFueSBsYXcgbWFkZSB0byBnaXZlIGVmZmVjdCB0byB0aGUgRGlyZWN0aXZlICAgUHJpbmNpcGxlcyBjb250YWluZWQgaW4gQXJ0aWNsZSAzOSAoYikgb3IgKGMpIGNhbm5vdCBiZSBjaGFsbGVuZ2VkIG9uIHRoZSBncm91bmQgb2YgdmlvbGF0aW9uIG9mIHRoZSByaWdodHMgICBndWFyYW50ZWVkIGJ5IEFydGljbGVzIDE0LCAxOSBhbmQgMzEuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaG91Z2ggdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFyZSBub24tanVzdGljaWFibGUsIHRoZSBDb25zdGl0dXRpb24gKEFydGljbGUgICAzNykgbWFrZXMgaXQgY2xlYXIgdGhhdCAndGhlc2UgcHJpbmNpcGxlcyBhcmUgZnVuZGFtZW50YWwgaW4gdGhlIGdvdmVybmFuY2Ugb2YgdGhlIGNvdW50cnkgYW5kIGl0IHNoYWxsIGJlICAgdGhlIGR1dHkgb2YgdGhlIHN0YXRlIHRvIGFwcGx5IHRoZXNlIHByaW5jaXBsZXMgaW4gbWFraW5nIGxhd3MnLiBUaHVzLCB0aGV5IGltcG9zZSBhIG1vcmFsIG9ibGlnYXRpb24gb24gdGhlICAgc3RhdGUgYXV0aG9yaXRpZXMgZm9yIHRoZWlyIGFwcGxpY2F0aW9uLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSA3M3JkIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QsIDE5OTIsIGltcGxlbWVudGVkIHRoZSBjb25zdGl0dXRpb25hbCAgIG9ibGlnYXRpb24gc3RhdGVkIGluIEFydGljbGUgNDAgKE9yZ2FuaXNhdGlvbiBvZiB2aWxsYWdlIHBhbmNoYXlhdHMpLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBNLiBMYXhtaWthbnRoIDV0aCBlZGl0aW9uICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 15,
      "question" : "Recently, Indian Scientists has  indigenously developed superior multilayer  series of LTCC tapes and HTCC substrates. In  this context, which of the following is/are the  advantages of these technologies?  1.  It will result into reducing the volume and  production time of satellite.  2.  It will be useful in building affordable  housing for economically backward  sections.  3.  It will be less toxic contributing towards  environmental sustainability of the country.  Select the correct answer using the options  given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEhUQ0Mgc3Vic3RyYXRlcy4gSW4gdGhpcyBjb250ZXh0LCB3aGljaCBvZiB0aGUgZm9sbG93aW5nIGlzL2FyZSB0aGUgYWR2YW50YWdlcyBvZiB0aGVzZSB0ZWNobm9sb2dpZXM/ICAgMS4gSXQgd2lsbCByZXN1bHQgaW50byByZWR1Y2luZyB0aGUgdm9sdW1lIGFuZCBwcm9kdWN0aW9uIHRpbWUgb2Ygc2F0ZWxsaXRlLiAgIDIuIEl0IHdpbGwgYmUgdXNlZnVsIGluIGJ1aWxkaW5nIGFmZm9yZGFibGUgaG91c2luZyBmb3IgZWNvbm9taWNhbGx5IGJhY2t3YXJkIHNlY3Rpb25zLiAgIDMuIEl0IHdpbGwgYmUgbGVzcyB0b3hpYyBjb250cmlidXRpbmcgdG93YXJkcyBlbnZpcm9ubWVudGFsIHN1c3RhaW5hYmlsaXR5IG9mIHRoZSBjb3VudHJ5LiAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIG9wdGlvbnMgZ2l2ZW4gYmVsb3c6ICAgYSkgMSBvbmx5ICAgYikgMiBhbmQgMyBvbmx5ICAgYykgMSBhbmQgMyBvbmx5ICAgZCkgMSwgMiBhbmQgMyAgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBDU0lSLSBOSUlTVCAoTmF0aW9uYWwgSW5zdGl0dXRlIGZvciBJbnRlcmRpc2NpcGxpbmFyeSBTY2llbmNlIGFuZCBUZWNobm9sb2d5KSwgdW5kZXIgdGhlIHB1cnZpZXcgb2YgICAnQWR2YW5jZWQgTWFudWZhY3R1cmluZyBUZWNobmlxdWVzIHNjaGVtZScgb2YgRGVwYXJ0bWVudCBvZiBTY2llbmNlICYgVGVjaG5vbG9neSAoRFNUKSBoYXMgICBpbmRpZ2Vub3VzbHkgZGV2ZWxvcGVkIHRveGljLWZyZWUgYW5kIHN1cGVyaW9yIG11bHRpbGF5ZXIgc2VyaWVzIG9mIExUQ0MgdGFwZXMgYW5kIEhUQ0MgICBzdWJzdHJhdGVzIHdoaWNoIGFyZSBvbiBwYXIgd2l0aCBpbnRlcm5hdGlvbmFsIHN0YW5kYXJkcy4gICAgVGhlc2UgdGVjaG5vbG9naWVzIHBhY2thZ2UgdG9nZXRoZXIgZWxlY3Ryb25pYyBjb21wb25lbnRzIGxpa2UgcmVzaXN0b3JzLCBjYXBhY2l0b3JzIHRvIHByb2R1Y2UgICBtdWx0aWxheWVyIGNpcmN1aXRzLCBhbiBhbGwtZ29sZCBzeXN0ZW0gYXMgYSBzdWJzdGl0dXRlIGZvciB0aGUgaW1wb3J0ZWQgY29tbWVyY2lhbCBMVENDIHRhcGUgc3lzdGVtLiBJdCAgIGNhbiB3b3JrIGFzIGEgY29zdC1lZmZlY3RpdmUgcmVwbGFjZW1lbnQgdG8gdGhlIGNvbW1lcmNpYWwgTFRDQyB0YXBlcyB3aGljaCBJbmRpYSBpcyBjdXJyZW50bHkgICBpbXBvcnRpbmcsIHRoZXJlYnkgc2F2aW5nIGRyYWluIG9mIGhlYXZ5IGFtb3VudCBmcm9tIEluZGlhLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGVzZSB0ZWNobm9sb2dpZXMgYXJlIGhlbHBmdWwgaW4gbG93IG9yYml0IHNhdGVsbGl0ZSBzeXN0ZW1zIHdoaWNoIGFyZSBpbiBkZW1hbmQgICB0b2RheS4gSXQgd2lsbCBoZWxwIGluIHN1cHBvcnRpbmcgcmVkdWNlZCBzYXRlbGxpdGUgdm9sdW1lIGFuZCBtYXNzLCBiZXNpZGVzIHJlZHVjZWQgcHJvZHVjdGlvbiB0aW1lIGFuZCAgIGFmZm9yZGFibGUgY29zdC4gVGhlc2UgdGFwZXMgZmluZCBhcHBsaWNhdGlvbiBpbiB2YXJpb3VzIHNhdGVsbGl0ZSBjb21tdW5pY2F0aW9uIGNvbXBvbmVudHMgd2hpY2ggICByZXF1aXJlIHRob3VzYW5kcyBvZiBtaWNyb3dhdmUgc3Vic3RyYXRlcyBldmVyeSB5ZWFyIGFzIGFsc28gaW4gRGVmZXJlbmNlIFJlc2VhcmNoIGxhYm9yYXRvcmllcyBhbmQgICBCSEVMLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlc2UgdGVjaG5vbG9naWVzIGFyZSBzcGVjaWZpY2FsbHkgdXNlZCBpbiBzYXRlbGxpdGUgYW5kIGRlZmVuc2UgdGVjaG5vbG9naWVzIGFuZCAgIGhhcyBubyB1c2VmdWwgYXBwbGljYXRpb24gYnVpbGRpbmcgYWZmb3JkYWJsZSBob3VzaW5nLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBJdCBpcyBsZXNzIHRveGljIGFuZCBtb3JlIGVudmlyb25tZW50IGZyaWVuZGx5LiBBbiBhcXVlb3VzIHRhcGUgY2FzdGluZyB0ZWNobmlxdWUgICBoYXMgYmVlbiBkZXZlbG9wZWQsIHdoaWNoIGlzIHJlbGF0aXZlbHkgaGVhbHRoIGhhemFyZCBmcmVlIHNpbmNlIGl0IGRvZXMgbm90IGVtcGxveSB2b2xhdGlsZSBvcmdhbmljICAgY29tcG9uZW50cyBsaWtlIHh5bGVuZSBhbmQgbWV0aHlsIGV0aHlsIGtldG9uZS4gVGhlIHRlY2hub2xvZ3kgZGV2ZWxvcGVkIGlzIGEgZ2xhc3MtZnJlZSBMVENDIHRhcGUgICBjYXN0aW5nIGNvbXBvc2l0aW9uLCB3aGljaCBjYW4gYWRkcmVzcyB0aGUgYnJ1dGFsaXR5IGlzc3VlcyBvZiB0YXBlcy4gICBTb3VyY2U6ICBOZXcgdG94aWMtZnJlZSwgc3VwZXJpb3IgbXVsdGlsYXllciB0ZWNobm9sb2d5IHRoYXQgcGFja2FnZXMgdG9nZXRoZXIgZWxlY3Ryb25pYyBjb21wb25lbnRzIGNhbiAgIGhlbHAgY291bnRyeSdzIHN0cmF0ZWdpYyBzZWN0b3JzLUZvcnVtSUFTIEJsb2cgICBOZXcgdG94aWMtZnJlZSwgc3VwZXJpb3IgbXVsdGlsYXllciB0ZWNobm9sb2d5IHRoYXQgcGFja2FnZXMgdG9nZXRoZXIgZWxlY3Ryb25pYyBjb21wb25lbnRzIGNhbiBoZWxwICAgY291bnRyeSdzIHN0cmF0ZWdpYyBzZWN0b3JzLUZvcnVtSUFTIEJsb2cgICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the 'Preventive  Detention', consider the following statements:   1.  Preventive Detention means detention of a  person without trial and conviction by a  court.  2.  The maximum period for which a person can  be detained under Preventive Detention is 2  months.  3.  Only the Parliament can make a law  regarding Preventive Detention.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IDEuIFByZXZlbnRpdmUgRGV0ZW50aW9uIG1lYW5zIGRldGVudGlvbiBvZiBhIHBlcnNvbiB3aXRob3V0IHRyaWFsIGFuZCBjb252aWN0aW9uIGJ5IGEgY291cnQuICAgMi4gVGhlIG1heGltdW0gcGVyaW9kIGZvciB3aGljaCBhIHBlcnNvbiBjYW4gYmUgZGV0YWluZWQgdW5kZXIgUHJldmVudGl2ZSBEZXRlbnRpb24gaXMgMiBtb250aHMuICAgMy4gT25seSB0aGUgUGFybGlhbWVudCBjYW4gbWFrZSBhIGxhdyByZWdhcmRpbmcgUHJldmVudGl2ZSBEZXRlbnRpb24uICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgIGEpIDEgb25seSAgICBiKSAyIG9ubHkgICAgYykgMSBhbmQgMiBvbmx5ICAgIGQpIDEgYW5kIDMgb25seSAgICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgQXJ0aWNsZSAyMiBncmFudHMgcHJvdGVjdGlvbiB0byBwZXJzb25zIHdobyBhcmUgYXJyZXN0ZWQgb3IgZGV0YWluZWQuIERldGVudGlvbiBpcyBvZiB0d28gdHlwZXMsIG5hbWVseSwgICBwdW5pdGl2ZSBhbmQgcHJldmVudGl2ZS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUHJldmVudGl2ZSBkZXRlbnRpb24gbWVhbnMgZGV0ZW50aW9uIG9mIGEgcGVyc29uIHdpdGhvdXQgdHJpYWwgYW5kIGNvbnZpY3Rpb24gICBieSBhIGNvdXJ0LiBJdHMgcHVycG9zZSBpcyBub3QgdG8gcHVuaXNoIGEgcGVyc29uIGZvciBhIHBhc3Qgb2ZmZW5jZSBidXQgdG8gcHJldmVudCBoaW0gZnJvbSBjb21taXR0aW5nIGFuICAgb2ZmZW5jZSBpbiB0aGUgbmVhciBmdXR1cmUuIEl0IGlzIG9ubHkgYSBwcmVjYXV0aW9uYXJ5IG1lYXN1cmUgYW5kIGJhc2VkIG9uIHN1c3BpY2lvbi4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgNDR0aCBBbWVuZG1lbnQgYWN0IG9mIDE5NzggaGFzIHJlZHVjZWQgdGhlIHBlcmlvZCBvZiBkZXRlbnRpb24gd2l0aG91dCAgIG9idGFpbmluZyB0aGUgb3BpbmlvbiBvZiB0aGUgYWR2aXNvcnkgYm9hcmQgZnJvbSAzIG1vbnRocyB0byAyIG1vbnRocy4gSG93ZXZlciwgdGhpcyBwcm92aXNpb24gaGFzIG5vdCAgIHlldCBiZWVuIGJyb3VnaHQgaW50byBmb3JjZSwgaGVuY2UsIHRoZSBvcmlnaW5hbCBwZXJpb2Qgb2YgdGhyZWUgbW9udGhzIHN0aWxsIGNvbnRpbnVlcy4gICAgICBBbHNvLCBpZiBhbiBhZHZpc29yeSBib2FyZCByZXBvcnRzIHN1ZmZpY2llbnQgY2F1c2UgZm9yIGFuIGV4dGVuc2lvbiwgaXRzIDMtbW9udGggcGVyaW9kIGNhbiBhbHNvIGJlICAgZXh0ZW5kZWQuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiAgVGhlIENvbnN0aXR1dGlvbiBoYXMgZGl2aWRlZCB0aGUgbGVnaXNsYXRpdmUgcG93ZXIgd2l0aCByZWdhcmQgdG8gcHJldmVudGl2ZSAgIGRldGVudGlvbiBiZXR3ZWVuIHRoZSBQYXJsaWFtZW50IGFuZCB0aGUgc3RhdGUgbGVnaXNsYXR1cmVzLiBUaGUgUGFybGlhbWVudCBoYXMgZXhjbHVzaXZlIGF1dGhvcml0eSB0byAgIG1ha2UgYSBsYXcgb2YgcHJldmVudGl2ZSBkZXRlbnRpb24gZm9yIHJlYXNvbnMgY29ubmVjdGVkIHdpdGggZGVmZW5jZSwgZm9yZWlnbiBhZmZhaXJzIGFuZCB0aGUgc2VjdXJpdHkgb2YgICBJbmRpYS4gQm90aCB0aGUgUGFybGlhbWVudCBhcyB3ZWxsIGFzIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMgY2FuIGNvbmN1cnJlbnRseSBtYWtlIGEgbGF3IG9mIHByZXZlbnRpdmUgICBkZXRlbnRpb24gZm9yIHJlYXNvbnMgY29ubmVjdGVkIHdpdGggdGhlIHNlY3VyaXR5IG9mIGEgc3RhdGUsIHRoZSBtYWludGVuYW5jZSBvZiBwdWJsaWMgb3JkZXIgYW5kIHRoZSAgIG1haW50ZW5hbmNlIG9mIHN1cHBsaWVzIGFuZCBzZXJ2aWNlcyBlc3NlbnRpYWwgdG8gdGhlIGNvbW11bml0eSAgIFNvdXJjZTogIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vZGlmZmVyZW5jZS1iZXR3ZWVuLXByZXZlbnRpdmUtZGV0ZW50aW9uLWFuZC1wdW5pdGl2ZS1kZXRlbnRpb24vICAgIEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50IC0gNnRoIEVkaXRpb24gLSBDaGFwdGVyIDcgLSBGdW5kYW1lbnRhbCBSaWdodHMuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 17,
      "question" : "'It is a minimum area that is sacred and in  which whatever the individual does, is not to be  interfered with. The existence of the 'minimum  area of non-interference' is the recognition  that human nature and human dignity need an  area where the person can act unobstructed by  others.'   Which of the following ideals is referred to in  the above paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IHdpdGguIFRoZSBleGlzdGVuY2Ugb2YgdGhlICdtaW5pbXVtIGFyZWEgb2Ygbm9uLWludGVyZmVyZW5jZScgaXMgdGhlIHJlY29nbml0aW9uIHRoYXQgaHVtYW4gbmF0dXJlIGFuZCAgIGh1bWFuIGRpZ25pdHkgbmVlZCBhbiBhcmVhIHdoZXJlIHRoZSBwZXJzb24gY2FuIGFjdCB1bm9ic3RydWN0ZWQgYnkgb3RoZXJzLicgICAgV2hpY2ggb2YgdGhlIGZvbGxvd2luZyBpZGVhbHMgaXMgcmVmZXJyZWQgdG8gaW4gdGhlIGFib3ZlIHBhcmFncmFwaD8gICAgYSkgUG9zaXRpdmUgbGliZXJ0eSAgIGIpIEVxdWFsaXR5ICAgYykgRGlzdHJpYnV0aXZlIEp1c3RpY2UgICBkKSBOZWdhdGl2ZSBsaWJlcnR5ICAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE5lZ2F0aXZlIGxpYmVydHkgKGFuZCBub3QgcG9zaXRpdmUgbGliZXJ0eSkgc2Vla3MgdG8gZGVmaW5lIGFuZCBkZWZlbmQgYW4gYXJlYSBpbiB3aGljaCB0aGUgaW5kaXZpZHVhbCAgIHdvdWxkIGJlIGludmlvbGFibGUsIGluIHdoaWNoIGhlIG9yIHNoZSBjb3VsZCAnZG8sIGJlIG9yIGJlY29tZScgd2hhdGV2ZXIgaGUgb3Igc2hlIHdpc2hlZCB0byAnZG8sIGJlIG9yICAgYmVjb21lJy4gICAgTmVnYXRpdmUgbGliZXJ0eSBpcyB0aGUgYWJzZW5jZSBvZiBvYnN0YWNsZXMsIGJhcnJpZXJzIG9yIGNvbnN0cmFpbnRzLiBPbmUgaGFzIG5lZ2F0aXZlIGxpYmVydHkgdG8gdGhlIGV4dGVudCAgIHRoYXQgYWN0aW9ucyBhcmUgYXZhaWxhYmxlIHRvIG9uZSBpbiB0aGlzIG5lZ2F0aXZlIHNlbnNlLiBQb3NpdGl2ZSBsaWJlcnR5IGlzIHRoZSBwb3NzaWJpbGl0eSBvZiBhY3RpbmcgLSBvciB0aGUgICBmYWN0IG9mIGFjdGluZyAtIGluIHN1Y2ggYSB3YXkgYXMgdG8gdGFrZSBjb250cm9sIG9mIG9uZSdzIGxpZmUgYW5kIHJlYWxpemUgb25lJ3MgZnVuZGFtZW50YWwgcHVycG9zZXMuIFdoaWxlICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBuZWdhdGl2ZSBsaWJlcnR5IGlzIHVzdWFsbHkgYXR0cmlidXRlZCB0byBpbmRpdmlkdWFsIGFnZW50cywgcG9zaXRpdmUgbGliZXJ0eSBpcyBzb21ldGltZXMgYXR0cmlidXRlZCB0byAgIGNvbGxlY3Rpdml0aWVzLCBvciB0byBpbmRpdmlkdWFscyBjb25zaWRlcmVkIHByaW1hcmlseSBhcyBtZW1iZXJzIG9mIGdpdmVuIGNvbGxlY3Rpdml0aWVzLiAgIE5lZ2F0aXZlIGxpYmVydHkgaXMgYW4gYXJlYSBpbiB3aGljaCBubyBleHRlcm5hbCBhdXRob3JpdHkgY2FuIGludGVyZmVyZS4gVGh1cywgdGhlcmUgaXMgYW4gYWJzZW5jZSBvZiAgIHJlc3RyYWludHMgb24gdGhlIGFjdGl2aXRpZXMgb2YgdGhlIGluZGl2aWR1YWxzLiBJdCBpcyBhIG1pbmltdW0gYXJlYSB0aGF0IGlzIHNhY3JlZCBhbmQgaW4gd2hpY2ggd2hhdGV2ZXIgdGhlICAgaW5kaXZpZHVhbCBkb2VzLCBpcyBub3QgdG8gYmUgaW50ZXJmZXJlZCB3aXRoLiAgICBLbm93bGVkZ2UgQmFzZSkgICBUaGUgYXJndW1lbnRzIG9mIHBvc2l0aXZlIGxpYmVydHkgYXJlIGNvbmNlcm5lZCB3aXRoIGV4cGxhaW5pbmcgdGhlIGlkZWEgb2YgJ2ZyZWVkb20gdG8nLiBJdCBpcyBjb25jZXJuZWQgICB3aXRoIGxvb2tpbmcgYXQgdGhlIGNvbmRpdGlvbnMgYW5kIG5hdHVyZSBvZiB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIGluZGl2aWR1YWwgYW5kIHNvY2lldHkgYW5kIG9mICAgaW1wcm92aW5nIHRoZXNlIGNvbmRpdGlvbnMgc3VjaCB0aGF0IHRoZXJlIGFyZSBmZXdlciBjb25zdHJhaW50cyB0byB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIGluZGl2aWR1YWwgICBwZXJzb25hbGl0eS4gUG9zaXRpdmUgbGliZXJ0eSByZWNvZ25pc2VzIHRoYXQgb25lIGNhbiBiZSBmcmVlIG9ubHkgaW4gc29jaWV0eSAobm90IG91dHNpZGUgaXQpIGFuZCBoZW5jZSB0cmllcyAgIHRvIG1ha2UgdGhhdCBzb2NpZXR5IHN1Y2ggdGhhdCBpdCBlbmFibGVzIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgaW5kaXZpZHVhbC4gICBTb3VyY2U6IFBvbGl0aWNhbCBUaGVvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTIsIFBnLiAyNi0yOCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Positive liberty  ",
        "option2" : "Equality  ",
        "option3" : "Distributive Justice  ",
        "option4" : "Negative liberty   "
      }
    },
    {
      "index" : 18,
      "question" : "Which of the following rights are available  only against the State and not against a private  individual?  1.  Right to Equality Before Law  2.  Prohibition of traffic in human beings and  forced labour  3.  Right to Abolition of Untouchability  4.  Right to Protection Against Arrest and  Detention  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IDEuIFJpZ2h0IHRvIEVxdWFsaXR5IEJlZm9yZSBMYXcgICAyLiBQcm9oaWJpdGlvbiBvZiB0cmFmZmljIGluIGh1bWFuIGJlaW5ncyBhbmQgZm9yY2VkIGxhYm91ciAgIDMuIFJpZ2h0IHRvIEFib2xpdGlvbiBvZiBVbnRvdWNoYWJpbGl0eSAgIDQuIFJpZ2h0IHRvIFByb3RlY3Rpb24gQWdhaW5zdCBBcnJlc3QgYW5kIERldGVudGlvbiAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgIGEpIDEgYW5kIDIgb25seSAgIGIpIDIgYW5kIDMgb25seSAgIGMpIDMgYW5kIDQgb25seSAgIGQpIDEgYW5kIDQgb25seSAgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgTW9zdCBvZiBGdW5kYW1lbnRhbCBSaWdodHMgaW4gSW5kaWFuIENvbnN0aXR1dGlvbiBhcmUgYXZhaWxhYmxlIGFnYWluc3QgdGhlIGFyYml0cmFyeSBhY3Rpb24gb2YgdGhlIFN0YXRlLCAgIGJ1dCBzb21lIGFyZSBhbHNvIGF2YWlsYWJsZSBhZ2FpbnN0IHRoZSBhY3Rpb24gb2YgcHJpdmF0ZSBpbmRpdmlkdWFscy4gICAgT3B0aW9uIDEgYW5kIDQgYXJlIGNvcnJlY3Q6ICAgIDEpIFJpZ2h0IHRvIEVxdWFsaXR5IEJlZm9yZSBMYXcgKEFydGljbGUgMTQpIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIGd1YXJhbnRlZXMgdGhhdCBubyBwZXJzb24gc2hhbGwgYmUgICBkZW5pZWQgdGhlIHJpZ2h0IHRvIGVxdWFsaXR5IGJlZm9yZSBsYXcgb3IgdGhlIGVxdWFsIHByb3RlY3Rpb24gb2YgbGF3IGluIHRoZSB0ZXJyaXRvcnkgb2YgSW5kaWEuIFRoaXMgaXMgYSAgIHJpZ2h0IHRoYXQgY2FuIGJlIGNsYWltZWQgYnkgYW55IHBlcnNvbiwgd2hldGhlciBhIGNpdGl6ZW4gb3IgYSBub24tY2l0aXplbiwgb24gSW5kaWFuIHNvaWwuIEl0IGlzIGF2YWlsYWJsZSAgIG9ubHkgYWdhaW5zdCB0aGUgc3RhdGUgYW5kIG5vdCBhZ2FpbnN0IHRoZSBwcml2YXRlIGluZGl2aWR1YWwuICAgMikgQXJ0aWNsZSAyMiAoUmlnaHQgdG8gUHJvdGVjdGlvbiBBZ2FpbnN0IEFycmVzdCBhbmQgRGV0ZW50aW9uKSBkZWFscyB3aXRoIHRoZSBwcm90ZWN0aW9uIGFnYWluc3QgYXJyZXN0ICAgYW5kIGRldGVudGlvbiBpbiBjZXJ0YWluIGNhc2VzLiBUaGlzIGFydGljbGUgaXMgYXBwbGljYWJsZSB0byBib3RoIGNpdGl6ZW5zIGFuZCBub24tY2l0aXplbnMuIFRoaXMgcHJvdmlzaW9uICAgZXh0ZW5kcyBjZXJ0YWluIHByb2NlZHVyYWwgc2FmZWd1YXJkcyBmb3IgaW5kaXZpZHVhbHMgaW4gY2FzZSBvZiBhbiBhcnJlc3QuIEl0IGlzIGF2YWlsYWJsZSBvbmx5IGFnYWluc3QgICB0aGUgc3RhdGUgYW5kIG5vdCBhZ2FpbnN0IHRoZSBpbmRpdmlkdWFsLiAgIE9wdGlvbiAyIGFuZCAzIGFyZSBpbmNvcnJlY3Q6ICAgIDEpIFByb2hpYml0aW9uIG9mIHRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyIChBcnRpY2xlIDIzKSBleHBsaWNpdGx5IHByb2hpYml0cyBodW1hbiAgIHRyYWZmaWNraW5nLCBjaGlsZCBsYWJvciwgdW50b3VjaGFiaWxpdHksIGFuZCB2YXJpb3VzIG90aGVyIGFjdGl2aXRpZXMgcmVsYXRlZCB0byBpdC4gQW55b25lIHJlc2lkaW5nIGluIGFueSAgIHBhcnQgb2YgdGhlIGNvdW50cnkgcHJhY3RpY2luZyBhbnkgc3VjaCBraW5kIG9mIGFjdGl2aXR5IHdpbGwgYmUgcHVuaXNoZWQgYWNjb3JkaW5nIHRvIHRoZSBsYXcuIEl0IHByb3RlY3RzICAgdGhlIGluZGl2aWR1YWwgbm90IG9ubHkgYWdhaW5zdCB0aGUgU3RhdGUgYnV0IGFsc28gYWdhaW5zdCBwcml2YXRlIHBlcnNvbnMuICAgMikgQWJvbGl0aW9uIG9mIFVudG91Y2hhYmlsaXR5IChBcnRpY2xlIDE3KSBhYm9saXNoZXMgJ3VudG91Y2hhYmlsaXR5JyBhbmQgZm9yYmlkcyBpdHMgcHJhY3RpY2UgaW4gYW55IGZvcm0uICAgVGhlIGVuZm9yY2VtZW50IG9mIGFueSBkaXNhYmlsaXR5IGFyaXNpbmcgb3V0IG9mIHVudG91Y2hhYmlsaXR5IHNoYWxsIGJlIGFuIG9mZmVuY2UgcHVuaXNoYWJsZSBpbiAgIGFjY29yZGFuY2Ugd2l0aCBsYXcuIFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgcmlnaHQgdW5kZXIgQXJ0aWNsZSAxNyBpcyBhdmFpbGFibGUgYWdhaW5zdCAgIHByaXZhdGUgaW5kaXZpZHVhbHMuICAgU291cmNlOiBNIGxha3NtaWthbnQgKENocCA3LSBGdW5kYW1lbnRhbCByaWdodHMpICAgSG9yaXpvbnRhbCBhcHBsaWNhdGlvbiBvZiBGdW5kYW1lbnRhbCBSaWdodHM6IElzc3VlcyBhbmQgQ29uY2VybnMgKG1hZGhhdnVuaXZlcnNpdHkuZWR1LmluKSAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1 and 4 only           .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to the concept of 'Police  State' in polity, consider the following  statements:   1.  Its main objective is the establishment of  economic and social democracy in a  country.  2.  This concept is based on the theory of  Laissez-Faire.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IDEuIEl0cyBtYWluIG9iamVjdGl2ZSBpcyB0aGUgZXN0YWJsaXNobWVudCBvZiBlY29ub21pYyBhbmQgc29jaWFsIGRlbW9jcmFjeSBpbiBhIGNvdW50cnkuICAgMi4gVGhpcyBjb25jZXB0IGlzIGJhc2VkIG9uIHRoZSB0aGVvcnkgb2YgTGFpc3Nlei1GYWlyZS4gICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgIGEpIDEgb25seSAgICBiKSAyIG9ubHkgICAgYykgQm90aCAxIGFuZCAyICAgIGQpIE5laXRoZXIgMSBub3IgMiAgICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGluIEluZGlhIGVtYm9keSB0aGUgY29uY2VwdCBvZiBhICd3ZWxmYXJlIHN0YXRlJyBhbmQgbm90IHRoYXQgb2YgYSAncG9saWNlIHN0YXRlJywgICB3aGljaCBleGlzdGVkIGR1cmluZyB0aGUgY29sb25pYWwgZXJhLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBICdQb2xpY2UgU3RhdGUnIGlzIG1haW5seSBjb25jZXJuZWQgd2l0aCB0aGUgbWFpbnRlbmFuY2Ugb2YgbGF3IGFuZCBvcmRlciBhbmQgICBkZWZlbmNlIG9mIHRoZSBjb3VudHJ5IGFnYWluc3QgZXh0ZXJuYWwgYWdncmVzc2lvbi4gSXQgaXMgYSBjb3VudHJ5IGluIHdoaWNoIHRoZSBnb3Zlcm5tZW50IHVzZXMgdGhlIHBvbGljZSAgIHRvIHNldmVyZWx5IGxpbWl0IHBlb3BsZSdzIGZyZWVkb20uICAgIFRoZSBjb25jZXB0IG9mIGEgJ3dlbGZhcmUgc3RhdGUnIGlzIGluIGNvbnRyYXN0IHRvIHRoYXQgb2YgYSAncG9saWNlIHN0YXRlJy4gIEEgJ1dlbGZhcmUgU3RhdGUnIHNlZWtzIHRvIGVzdGFibGlzaCAgIGVjb25vbWljIGFuZCBzb2NpYWwgZGVtb2NyYWN5IGluIHRoZSBjb3VudHJ5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBjb25jZXB0IG9mIFBvbGljZSBzdGF0ZSBpcyBiYXNlZCBvbiB0aGUgbmluZXRlZW50aCBjZW50dXJ5IHRoZW9yeSBvZiAgIGluZGl2aWR1YWxpc20gb3IgbGFpc3Nlei1mYWlyZS4gVGhlIHRoZW9yeSBvZiBsYWlzc2V6IGZhaXJlIGluIHRoZSAxOXRoIGNlbnR1cnkgZW52aXNhZ2VzIG1heGltdW0gZnJlZSAgIGVudGVycHJpc2UgYW5kIGNvbnRyYWN0dWFsIGZyZWVkb20uIFRoZSBsYXcgYW5kIG9yZGVyIGNoYXJhY3Rlcml6ZWQgdGhlIHNpdHVhdGlvbiBpbiB0aGUgc3RhdGUuIEl0cyByb2xlIHdhcyAgIGxpbWl0ZWQgdG8gdGhlIHRyYWRpdGlvbmFsIHJvbGUgb2YgZ292ZXJubWVudCBhcyBhIHByb3RlY3Rvci4gICAgS25vd2xlZGdlIEJhc2U6ICAgICBBIHdlbGZhcmUgc3RhdGUgaXMgYSBnb3Zlcm5tZW50IG9mIHRoZSBTdGF0ZSB0byBwcm90ZWN0IGFuZCBwcm9tb3RlIHRoZSBlY29ub21pYyBhbmQgc29jaWFsIHdlbGZhcmUgb2YgaXRzICAgY2l0aXplbnMuIEl0IGlzIGEgY29yZSByb2xlLiBJdCBpcyBlcXVhbGl0eSBvZiBvcHBvcnR1bml0eSwgZXF1aXRhYmxlIGRpc3RyaWJ1dGlvbiBvZiB3ZWFsdGgsIGFuZCB0aG9zZSB3aG8gYXJlICAgdW5hYmxlIHRvIGF2YWlsIHRoZW1zZWx2ZXMgb2YgYSBiZXR0ZXIgbGlmZSBmb3IgYXQgbGVhc3QgYmFzZWQgb24gdGhlIHByaW5jaXBsZSBvZiB0aGUgcmVzcG9uc2liaWxpdHkgZm9yIHRoZSAgIHB1YmxpYy4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the arguments given below  justifies the view that India should review One  China Policy especially in context of Taiwan?  1.  Repeated Chinese intrusions across the LAC  are taking place after Galwan valley clashes  in 2020.  2.  Look East policy of India has largely ignored  the engagement of India with Taiwan.  3.  Taiwan is the potential supplier of  semiconductors which is important for chip  manufacturing.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IGVzcGVjaWFsbHkgaW4gY29udGV4dCBvZiBUYWl3YW4/ICAgMS4gUmVwZWF0ZWQgQ2hpbmVzZSBpbnRydXNpb25zIGFjcm9zcyB0aGUgTEFDIGFyZSB0YWtpbmcgcGxhY2UgYWZ0ZXIgR2Fsd2FuIHZhbGxleSBjbGFzaGVzIGluIDIwMjAuICAgMi4gTG9vayBFYXN0IHBvbGljeSBvZiBJbmRpYSBoYXMgbGFyZ2VseSBpZ25vcmVkIHRoZSBlbmdhZ2VtZW50IG9mIEluZGlhIHdpdGggVGFpd2FuLiAgIDMuIFRhaXdhbiBpcyB0aGUgcG90ZW50aWFsIHN1cHBsaWVyIG9mIHNlbWljb25kdWN0b3JzIHdoaWNoIGlzIGltcG9ydGFudCBmb3IgY2hpcCBtYW51ZmFjdHVyaW5nLiAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgIGEpIDEgYW5kIDIgb25seSAgIGIpIDIgYW5kIDMgb25seSAgIGMpIDEgYW5kIDMgb25seSAgIGQpIDEsIDIgYW5kIDMgICAgRXhwKSBPcHRpb24gYyBpcyBjb3JyZWN0LiAgIFVuZGVyIE9uZSBDaGluYSBwb2xpY3ksIGFueSBjb3VudHJ5IHdpbGxpbmcgdG8gZXN0YWJsaXNoIGRpcGxvbWF0aWMgcmVsYXRpb25zIHdpdGggdGhlIFBlb3BsZSdzIFJlcHVibGljIG9mICAgQ2hpbmEgbXVzdCBhY2tub3dsZWRnZSB0aGF0IHRoZXJlIGlzIG9ubHkgJ09uZSBDaGluYScuIEFwYXJ0IGZyb20gdGhhdCB0aGUgYWNjZXB0aW5nIGNvdW50cnkgYWxzbyBoYXMgdG8gICBjdXQgZG93biBhbGwgZm9ybWFsIHRpZXMgKGluZm9ybWFsIHRpZXMgY2FuIGJlIG1haW50YWluZWQpIHdpdGggVGFpd2FuLiBNb3Jlb3ZlciwgaXQgY2FuJ3QgcmVjb2duaXplIFRhaXdhbiAgIGFzIGFuIGluZGVwZW5kZW50IGNvdW50cnkuICAgSW5kaWEgc2hvdWxkIHJldmlldyBpdHMgYWNjZXB0YW5jZSBvZiB0aGUgT25lIENoaW5hIHBvbGljeSBmb3IgdGhlIGZvbGxvd2luZyByZWFzb25zLCAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gSW5jcmVhc2VkIENoaW5lc2UgaW50cnVzaW9uczogQWZ0ZXIgdGhlIEdhbHdhbiB2YWxsZXkgY2xhc2hlcyBsYXN0IHllYXIsIHJlcGVhdGVkICAgQ2hpbmVzZSBpbnRydXNpb25zIGFjcm9zcyB0aGUgTEFDIGFyZSB0YWtpbmcgcGxhY2UuIFJldmlld2luZyBPbmUgQ2hpbmEgcG9saWN5IHdpbGwgZ2l2ZSBhIGNsZWFyIHNpZ25hbCB0byAgIENoaW5hIHRoYXQgSW5kaWEgY2FuIHJldGFsaWF0ZSBpbiBjb21tZW5zdXJhdGUgbWFubmVyLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEJvb3N0aW5nIHRpZXMgd2l0aCBUYWl3YW4gYWxzbyBoYXMgc3RhbmRhbG9uZSBiZW5lZml0cyBhcyBpdCBpcyBhIHNlbWljb25kdWN0b3IgICBwb3dlcmhvdXNlIGFuZCByZXBvcnRlZGx5IGJpbGF0ZXJhbCB0YWxrcyBhcmUgdW5kZXJ3YXkgdG8gYnJpbmcgY2hpcCBtYW51ZmFjdHVyaW5nIC0gYSBrZXkgc3RyYXRlZ2ljICAgc2VjdG9yIC0gdG8gSW5kaWEuIEZ1cnRoZXIsIGNvb3BlcmF0aW9uIGNhbiBhbHNvIGJlIGFjaGlldmVkIGluIGdyZWVuIHRlY2hub2xvZ3ksIElULCBkaWdpdGFsIGhlYWx0aGNhcmUsIGFuZCAgIHRlbGVjb20gd2l0aCBUYWl3YW5lc2UgY29tcGFuaWVzIGFzIHRoZXkgYXJlIGxvb2tpbmcgdG8gcmVsb2NhdGUgdGhlaXIgb3BlcmF0aW9ucyBmcm9tIENoaW5hLiBTbywgICBlbWJyYWNpbmcgVGFpd2FuIGZvciB0aGUgc3RyYXRlZ2ljIGFuZCBlY29ub21pYyBpbnRlcmVzdHMgb2YgSW5kaWEgd2lsbCBlbGV2YXRlIHRpZXMgYmV0d2VlbiBib3RoLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gTG9vayBFYXN0IHBvbGljeSBvZiBJbmRpYSBoYXMgbm90IGlnbm9yZWQgdGhlIGVuZ2FnZW1lbnQgb2YgSW5kaWEgd2l0aCBUYWl3YW4uICAgSW5kaWEncyBMb29rIEVhc3QgcG9saWN5IHN0YXJ0ZWQgc3RyZW5ndGhlbmluZyB0aGUgZW5nYWdlbWVudCBvZiBJbmRpYSB3aXRoIEVhc3QgQXNpYW4gY291bnRyaWVzLCAgIGluY2x1ZGluZyBUYWl3YW4uIEluIDE5OTUgSW5kaWEgYW5kIFRhaXdhbiBlc3RhYmxpc2hlZCBjb21wbGVtZW50YXJ5IHJlcHJlc2VudGF0aXZlIG9mZmljZXMuICAgIEluZGlhLVRhaXdhbiByZWxhdGlvbnMgaW1wcm92ZWQgZ3JhZHVhbGx5IGFuZCBzaW5jZSAyMDEwIEluZGlhIGhhcyByZWZ1c2VkIHRvIGVuZG9yc2UgdGhlICdvbmUtQ2hpbmEnICAgcG9saWN5LiBBdCB0aGUgc2FtZSB0aW1lLCBJbmRpYSBpcyBub3QgaGF2aW5nIGFueSBmb3JtYWwgZGlwbG9tYXRpYyByZWxhdGlvbnMgd2l0aCBUYWl3YW4uICAgU291cmNlOiBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL2hlbGxvLXRhaXdhbi1uZXctZGVsaGktc2hvdWxkLWJvb3N0LXRpZXMtd2l0aC10YWlwZWktbm90LWp1c3QtICBiZWNhdXNlLW9mLWNoaW5lc2UtdGhyZWF0LXRoZXJlLWFyZS1vdGhlci1iZW5lZml0cy8gICBXaGF0IGlzIHRoZSBjb3JlIGNvbmZsaWN0IGJldHdlZW4gQ2hpbmEgYW5kIFRhaXdhbj8gKGZvcnVtaWFzLmNvbSkgICBDaGluYSBhc2tzIEluZGlhIHRvIGFkaGVyZSB0byB0aGUgJ09uZSBDaGluYSBwb2xpY3knLCBub3QgdG8gZW50ZXIgaW50byBhbnkgYWdyZWVtZW50IHdpdGggVGFpd2FuIHwgRGVjY2FuICAgSGVyYWxkICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 21,
      "question" : "Which of the following statements is/are  true of the Fundamental Duties of an Indian  citizen?    1.  A legislative process has been provided to  enforce these duties.   2.  They are correlative to legal duties.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IDEuIEEgbGVnaXNsYXRpdmUgcHJvY2VzcyBoYXMgYmVlbiBwcm92aWRlZCB0byBlbmZvcmNlIHRoZXNlIGR1dGllcy4gICAgMi4gVGhleSBhcmUgY29ycmVsYXRpdmUgdG8gbGVnYWwgZHV0aWVzLiAgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgICBhKSAxIG9ubHkgICAgYikgMiBvbmx5ICAgIGMpIEJvdGggMSBhbmQgMiAgICBkKSBOZWl0aGVyIDEgbm9yIDIgICAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gcHJvdmlzaW9uIGluIHRoZSBDb25zdGl0dXRpb24gZm9yIGRpcmVjdCBlbmZvcmNlbWVudCBvZiBhbnkgb2YgdGhlICAgRnVuZGFtZW50YWwgRHV0aWVzIG5vciBmb3IgYW55IHNhbmN0aW9uIHRvIHByZXZlbnQgdGhlaXIgdmlvbGF0aW9uLiBBbGwgdGhlIEZ1bmRhbWVudGFsIER1dGllcyB1bmRlciAgIEFydGljbGUgNTEgQSBhcmUgJ25vbi1qdXN0aWNpYWJsZScuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlcmUgaXMgbm8gbGVnaXNsYXRpdmUgcHJvY2VzcyB0byBlbmZvcmNlIGNpdGl6ZW5zIHRvIGRvIHRoZWlyIGZ1bmRhbWVudGFsIGR1dGllcy4gICBUaGUgbGVnYWwgZHV0eSBpcyBvbmUgd2hpY2ggaXMgcmVxdWlyZWQgdG8gYmUgY2FycmllZCBvdXQgYXMgcGVyIGxhdy4gU28sIHRoZXJlIGlzIG5vIGNvcnJlbGF0aW9uIGJldHdlZW4gICBib3RoIGR1dGllcy4gSXQgaGFzIGJlZW4gaGVsZCB0aGF0IHRoZXNlIGR1dGllcyBiZWluZyBkdXRpZXMgb2YgaW5kaXZpZHVhbCBjaXRpemVucyBjYW5ub3QgYmUgZW5mb3JjZWQgICB0aHJvdWdoIG1hbmRhbXVzLiAgIFNvdXJjZSkgVVBTQyBDU0UgMjAxNyAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the comparison  between the Fundamental Rights and the  Directive Principles of State Policy, consider  the following statements:   1.  The focus of Fundamental Rights is at  individual level, whereas the focus of  Directive Principles is at community level.  2.  Fundamental Rights restrict the power of  the state whereas the Directive Principles  requires the State to take certain positive  steps.   3.  The courts can declare a law as  unconstitutional if it violates either the  Fundamental Rights or the Directive  Principles of State Policy.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IFN0YXRlIFBvbGljeSwgY29uc2lkZXIgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzOiAgICAxLiBUaGUgZm9jdXMgb2YgRnVuZGFtZW50YWwgUmlnaHRzIGlzIGF0IGluZGl2aWR1YWwgbGV2ZWwsIHdoZXJlYXMgdGhlIGZvY3VzIG9mIERpcmVjdGl2ZSBQcmluY2lwbGVzIGlzIGF0ICAgY29tbXVuaXR5IGxldmVsLiAgIDIuIEZ1bmRhbWVudGFsIFJpZ2h0cyByZXN0cmljdCB0aGUgcG93ZXIgb2YgdGhlIHN0YXRlIHdoZXJlYXMgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIHJlcXVpcmVzIHRoZSBTdGF0ZSAgIHRvIHRha2UgY2VydGFpbiBwb3NpdGl2ZSBzdGVwcy4gICAgMy4gVGhlIGNvdXJ0cyBjYW4gZGVjbGFyZSBhIGxhdyBhcyB1bmNvbnN0aXR1dGlvbmFsIGlmIGl0IHZpb2xhdGVzIGVpdGhlciB0aGUgRnVuZGFtZW50YWwgUmlnaHRzIG9yIHRoZSAgIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeS4gICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICAgYSkgMSBvbmx5ICAgIGIpIDEgYW5kIDIgb25seSAgIGMpIDIgYW5kIDMgb25seSAgIGQpIDEsIDIgYW5kIDMgICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgRnVuZGFtZW50YWwgUmlnaHRzIGFyZSBlbnVtZXJhdGVkIGluIFBhcnQgSUlJIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIHRoYXQgaXMgYm9ycm93ZWQgZnJvbSBVUyAgIENvbnN0aXR1dGlvbi4gVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlcyBQb2xpY3kgYXJlIGVudW1lcmF0ZWQgaW4gUGFydCBJViBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiAgIHRoYXQgaXMgYm9ycm93ZWQgZnJvbSB0aGUgSXJpc2ggQ29uc3RpdHV0aW9uLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBGdW5kYW1lbnRhbCBSaWdodHMgcHJvbW90ZSB0aGUgd2VsZmFyZSBvZiB0aGUgaW5kaXZpZHVhbC4gVGhleSBwcm9tb3RlIHRoZSBpZGVhbCAgIG9mIHBvbGl0aWNhbCBkZW1vY3JhY3kuIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZXMgUG9saWN5IHByb21vdGVzIHRoZSB3ZWxmYXJlIG9mIHRoZSBjb21tdW5pdHkuICAgVGhleSBwcm9tb3RlIHRoZSBpZGVhbCBvZiBzb2NpYWwgYW5kIGVjb25vbWljIGRlbW9jcmFjeS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRnVuZGFtZW50YWwgUmlnaHRzIGFyZSBuZWdhdGl2ZSBhcyB0aGV5IHJlc3RyaWN0IHRoZSBwb3dlciBvZiB0aGUgc3RhdGUuIFRoZSAgIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlcyBQb2xpY3kgYXJlIHBvc2l0aXZlIGFzIHRoZXkgcmVxdWlyZSB0aGUgU3RhdGUgdG8gdGFrZSBjZXJ0YWluIHN0ZXBzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEp1ZGljaWFyeSBjYW4gZGVjbGFyZSBhIGxhdyBhcyB1bmNvbnN0aXR1dGlvbmFsIGFuZCBpbnZhbGlkIGlmIGl0IHZpb2xhdGVzIHRoZSAgIEZ1bmRhbWVudGFsIFJpZ2h0cy4gVGhlIGNvdXJ0cyBjYW5ub3QgZGVjbGFyZSBhIGxhdyB2aW9sYXRpdmUgb2YgYW55IG9mIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBhcyAgIHVuY29uc3RpdHV0aW9uYWwgYW5kIGludmFsaWQuIEhvd2V2ZXIsIHRoZXkgY2FuIHVwaG9sZCB0aGUgdmFsaWRpdHkgb2YgYSBsYXcgb24gdGhlIGdyb3VuZCB0aGF0IGl0IHdhcyAgIGVuYWN0ZWQgdG8gZ2l2ZSBlZmZlY3QgdG8gYSBkaXJlY3RpdmUuICAgICBLbm93bGVkZ2UgQmFzZTogICAgRnVuZGFtZW50YWwgUmlnaHRzIGFyZSBqdXN0aWNpYWJsZSBpbiBuYXR1cmUgaS5lLjsgdGhleSBhcmUgbGVnYWxseSBlbmZvcmNlYWJsZSBpbiB0aGUgY291cnQgb2YgbGF3IGluIGNhc2Ugb2YgICB0aGVpciB2aW9sYXRpb24uIFRoZSBEUFNQcyBhcmUgbm9uLWp1c3RpY2lhYmxlIGluIG5hdHVyZSBpLmUuOyB0aGV5IGFyZSBub3QgbGVnYWxseSBlbmZvcmNlYWJsZSBpbiB0aGUgY291cnQgb2YgICBsYXcuICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vZGlmZmVyZW5jZS1iZXR3ZWVuLWZ1bmRhbWVudGFsLXJpZ2h0cy1hbmQtZHBzcGRpcmVjdGl2ZS1wcmluY2lwbGVzLW9mLSAgc3RhdGUtcG9saWN5LyAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following statements is  correct with reference to the Directive  Principles of State Policy?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IGEpIFRoZXkgcHJvbW90ZSBwb2xpdGljYWwgYW5kIGVjb25vbWljIGRlbW9jcmFjeSBpbiB0aGUgY291bnRyeS4gICAgYikgVGhleSBoYXZlIGJlZW4gYm9ycm93ZWQgZnJvbSB0aGUgUnVzc2lhbiBDb25zdGl0dXRpb24uICAgYykgVGhlc2UgaGF2ZSBiZWVuIGRlc2NyaWJlZCBhcyAnbm92ZWwgZmVhdHVyZXMnIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uLiAgIGQpIFRoZXNlIGFyZSBkaXJlY3RpdmVzIG9ubHkgdG8gdGhlIGV4ZWN1dGl2ZSBvcmdhbiBhbmQgbm90IHRvIHRoZSBsZWdpc2xhdGl2ZSBvcmdhbi4gICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBUaGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgYWltIGF0IHJlYWxpc2luZyB0aGUgaGlnaCBpZGVhbHMgb2YganVzdGljZSwgbGliZXJ0eSwgZXF1YWxpdHkgICBhbmQgZnJhdGVybml0eSBhcyBvdXRsaW5lZCBpbiB0aGUgUHJlYW1ibGUgdG8gdGhlIENvbnN0aXR1dGlvbi4gVGhleSBzZWVrIHRvIGVzdGFibGlzaCBlY29ub21pYyBhbmQgc29jaWFsICAgZGVtb2NyYWN5IGluIHRoZSBjb3VudHJ5LiBGdW5kYW1lbnRhbCBSaWdodHMgYWltIGF0IHByb21vdGluZyBwb2xpdGljYWwgZGVtb2NyYWN5IGluIHRoZSBjb3VudHJ5LiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgYXJlIGVudW1lcmF0ZWQgaW4gUGFydCBJViBvZiB0aGUgQ29uc3RpdHV0aW9uICAgZnJvbSBBcnRpY2xlcyAzNiB0byA1MS4gVGhlIGZyYW1lcnMgb2YgdGhlIENvbnN0aXR1dGlvbiBib3Jyb3dlZCB0aGlzIGlkZWEgZnJvbSB0aGUgSXJpc2ggICBDb25zdGl0dXRpb24gb2YgMTkzNywgd2hpY2ggaGFkIGNvcGllZCBpdCBmcm9tIHRoZSBTcGFuaXNoIENvbnN0aXR1dGlvbiAgIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IERyLiBCLlIuIEFtYmVka2FyIGRlc2NyaWJlZCB0aGVzZSBwcmluY2lwbGVzIGFzICdub3ZlbCBmZWF0dXJlcycgb2YgdGhlIEluZGlhbiAgIENvbnN0aXR1dGlvbi4gVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFsb25nIHdpdGggdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBjb250YWluIHRoZSBwaGlsb3NvcGh5IG9mIHRoZSAgIENvbnN0aXR1dGlvbiBhbmQgaXMgdGhlIHNvdWwgb2YgdGhlIENvbnN0aXR1dGlvbi4gR3JhbnZpbGxlIEF1c3RpbiBoYXMgZGVzY3JpYmVkIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBhbmQgICB0aGUgRnVuZGFtZW50YWwgUmlnaHRzIGFzIHRoZSAnQ29uc2NpZW5jZSBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBUaGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgcmVzZW1ibGUgdGhlICdJbnN0cnVtZW50IG9mIEluc3RydWN0aW9ucycgZW51bWVyYXRlZCBpbiAgIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCBvZiAxOTM1LiBUaGUgb25seSBkaWZmZXJlbmNlIGlzIHRoYXQgdGhleSBhcmUgaW5zdHJ1Y3Rpb25zIHRvIHRoZSBsZWdpc2xhdHVyZSBhbmQgICB0aGUgZXhlY3V0aXZlLiBBY2NvcmRpbmcgdG8gQXJ0aWNsZSAzNiwgdGhlIHRlcm0gJ1N0YXRlJyBpbiBQYXJ0IElWIGhhcyB0aGUgc2FtZSBtZWFuaW5nIGFzIGluIFBhcnQgSUlJIGRlYWxpbmcgICB3aXRoIEZ1bmRhbWVudGFsIFJpZ2h0cy4gVGhlcmVmb3JlLCBpdCBpbmNsdWRlcyB0aGUgbGVnaXNsYXRpdmUgYW5kIGV4ZWN1dGl2ZSBvcmdhbnMgb2YgdGhlIGNlbnRyYWwgYW5kIHN0YXRlICAgZ292ZXJubWVudHMsIGFsbCBsb2NhbCBhdXRob3JpdGllcyBhbmQgYWxsIG90aGVyIHB1YmxpYyBhdXRob3JpdGllcyBpbiB0aGUgY291bnRyeS4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They promote political and economic   democracy in the country.   ",
        "option2" : " They have been borrowed from the Russian   Constitution.  ",
        "option3" : " These have been described as 'novel   features' of the Indian Constitution.  ",
        "option4" : " These are directives only to the executive   organ and not to the legislative organ.   "
      }
    },
    {
      "index" : 24,
      "question" : "Under the Constitution, which of the  following fundamental rights is not available to  an Indian citizen?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IGEpIEZyZWVkb20gdG8gY29udmVydCBhbm90aGVyIHBlcnNvbiB0byBvbmUncyBvd24gcmVsaWdpb24uICAgIGIpIEZyZWVkb20gdG8gcHJvcGFnYXRlIHRoZSB2aWV3cyBvZiBvdGhlcnMuICAgIGMpIEZyZWVkb20gb2YgcGlja2V0aW5nIGFuZCBkZW1vbnN0cmF0aW9uLiAgIGQpIE5vbmUgb2YgdGhlIGFib3ZlLW1lbnRpb25lZCByaWdodHMgYXJlIGd1YXJhbnRlZWQgdG8gYW4gSW5kaWFuIGNpdGl6ZW4gICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IEFydGljbGUgMjUgc2F5cyB0aGF0IGFsbCBwZXJzb25zIGFyZSBlcXVhbGx5IGVudGl0bGVkIHRvIGZyZWVkb20gb2YgY29uc2NpZW5jZSBhbmQgdGhlICAgcmlnaHQgdG8gZnJlZWx5IHByb2Zlc3MsIHByYWN0aWNlIGFuZCBwcm9wYWdhdGUgcmVsaWdpb24uIE9uZSBvZiBpdHMgaW1wbGljYXRpb25zIGlzOiAgIFJpZ2h0IHRvIHByb3BhZ2F0ZTogVHJhbnNtaXNzaW9uIGFuZCBkaXNzZW1pbmF0aW9uIG9mIG9uZSdzIHJlbGlnaW91cyBiZWxpZWZzIHRvIG90aGVycyBvciBleHBvc2l0aW9uIG9mIHRoZSAgIHRlbmV0cyBvZiBvbmUncyByZWxpZ2lvbi4gQnV0LCBpdCBkb2VzIG5vdCBpbmNsdWRlIGEgcmlnaHQgdG8gY29udmVydCBhbm90aGVyIHBlcnNvbiB0byBvbmUncyBvd24gcmVsaWdpb24uICAgRm9yY2libGUgY29udmVyc2lvbnMgaW1waW5nZSBvbiB0aGUgJ2ZyZWVkb20gb2YgY29uc2NpZW5jZScgZ3VhcmFudGVlZCB0byBhbGwgdGhlIHBlcnNvbnMgYWxpa2UuIEluIDE5NzcsICAgYSBmaXZlLWp1ZGdlIEJlbmNoIG9mIHRoZSBTdXByZW1lIENvdXJ0LCBpbiBSZXYuIFN0YWluaXNsYXVzIHZlcnN1cyBTdGF0ZSBvZiBNYWRoeWEgUHJhZGVzaCwgaGFkIGhlbGQgdGhhdCAgIHRoZSB3b3JkICdwcm9wYWdhdGUnIGluIEFydGljbGUgMjUgZG9lcyBub3QgZ2l2ZSAndGhlIHJpZ2h0IHRvIGNvbnZlcnQgYW5vdGhlciBwZXJzb24gdG8gb25lJ3Mgb3duIHJlbGlnaW9uLCAgIGJ1dCB0byB0cmFuc21pdCBvciBzcHJlYWQgb25lJ3MgcmVsaWdpb24gYnkgYW4gZXhwb3NpdGlvbiBvZiBpdHMgdGVuZXRzJy4gVGhlIENvbnN0aXR1dGlvbiBCZW5jaCBoYWQgYWxzbyAgIGhlbGQgdGhlcmUgd2FzICdubyBmdW5kYW1lbnRhbCByaWdodCB0byBjb252ZXJ0IGFub3RoZXIgcGVyc29uIHRvIG9uZSdzIG93biByZWxpZ2lvbicgICBPcHRpb24gYiBhbmQgYyBhcmUgaW5jb3JyZWN0OiBGcmVlZG9tIG9mIFNwZWVjaCBhbmQgRXhwcmVzc2lvbiBpbXBsaWVzIHRoYXQgZXZlcnkgY2l0aXplbiBoYXMgdGhlIHJpZ2h0ICAgdG8gZXhwcmVzcyBoaXMgdmlld3MsIG9waW5pb25zLCBiZWxpZWZzIGFuZCBjb252aWN0aW9ucyBmcmVlbHkgYnkgd29yZCBvZiBtb3V0aCwgd3JpdGluZywgcHJpbnRpbmcsIHBpY3R1cmluZyAgIG9yIGluIGFueSBvdGhlciBtYW5uZXIuIFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgZnJlZWRvbSBvZiBzcGVlY2ggYW5kIGV4cHJlc3Npb24gaW5jbHVkZXMgdGhlICAgZm9sbG93aW5nOiAgICAoYSkgUmlnaHQgdG8gcHJvcGFnYXRlIG9uZSdzIHZpZXdzIGFzIHdlbGwgYXMgdGhlIHZpZXdzIG9mIG90aGVycy4gICAoYikgRnJlZWRvbSBvZiB0aGUgcHJlc3MuICAgKGMpIEZyZWVkb20gb2YgY29tbWVyY2lhbCBhZHZlcnRpc2VtZW50cy4gICAoZCkgUmlnaHQgYWdhaW5zdCB0YXBwaW5nIG9mIHRlbGVwaG9uaWMgY29udmVyc2F0aW9uLiAgIChlKSBSaWdodCB0byB0ZWxlY2FzdCwgdGhhdCBpcywgZ292ZXJubWVudCBoYXMgbm8gbW9ub3BvbHkgb24gZWxlY3Ryb25pYyBtZWRpYS4gICAoZikgUmlnaHQgYWdhaW5zdCBiYW5kaCBjYWxsZWQgYnkgYSBwb2xpdGljYWwgcGFydHkgb3Igb3JnYW5pc2F0aW9uLiAgIChnKSBSaWdodCB0byBrbm93IGFib3V0IGdvdmVybm1lbnQgYWN0aXZpdGllcy4gICAoaCkgRnJlZWRvbSBvZiBzaWxlbmNlLiAgICAoaSkgUmlnaHQgYWdhaW5zdCBpbXBvc2l0aW9uIG9mIHByZS1jZW5zb3JzaGlwIG9uIGEgbmV3c3BhcGVyLiAgIChqKSBSaWdodCB0byBkZW1vbnN0cmF0aW9uIG9yIHBpY2tldGluZyBidXQgbm90IHJpZ2h0IHRvIHN0cmlrZS4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA3IC0gRnVuZGFtZW50YWwgUmlnaHRzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Freedom to convert another person to one's   own religion.   ",
        "option2" : " Freedom to propagate the views of others.   ",
        "option3" : " Freedom of picketing and demonstration.  ",
        "option4" : " None of the above-mentioned rights are   guaranteed to an Indian citizen             .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following benefits does the  'Vertical Farming' can offers in the future  towards agricultural growth in the country?  1.  Increased Crop Yields and production.  2.  Economic viability due to lower cost of  investments.  3.  Higher efficiency and conservation of water.  4.  Less labour and skill intensive.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IGFncmljdWx0dXJhbCBncm93dGggaW4gdGhlIGNvdW50cnk/ICAgMS4gSW5jcmVhc2VkIENyb3AgWWllbGRzIGFuZCBwcm9kdWN0aW9uLiAgIDIuIEVjb25vbWljIHZpYWJpbGl0eSBkdWUgdG8gbG93ZXIgY29zdCBvZiBpbnZlc3RtZW50cy4gICAzLiBIaWdoZXIgZWZmaWNpZW5jeSBhbmQgY29uc2VydmF0aW9uIG9mIHdhdGVyLiAgIDQuIExlc3MgbGFib3VyIGFuZCBza2lsbCBpbnRlbnNpdmUuICAgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgIGEpIDEgYW5kIDMgb25seSAgIGIpIDEsIDIgYW5kIDQgb25seSAgIGMpIDIgYW5kIDMgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgVmVydGljYWwgZmFybWluZyBpcyB0aGUgcHJhY3RpY2Ugb2YgZ3Jvd2luZyBjcm9wcyBpbmRvb3JzLCBvbiB2ZXJ0aWNhbGx5IGluY2xpbmVkIHN1cmZhY2VzLCB1bmRlciBhcnRpZmljaWFsICAgY29uZGl0aW9ucyBvZiBsaWdodCBhbmQgdGVtcGVyYXR1cmUuIEl0IGlzIGRvbmUgaW4gYSBjb250cm9sbGVkIGVudmlyb25tZW50LCB3aXRoIHRoZSBhaW0gb2Ygb3B0aW1pc2luZyBwbGFudCAgIGdyb3d0aC4gSXQgYWltcyBhdCBoaWdoZXIgcHJvZHVjdGl2aXR5IGluIHNtYWxsZXIgc3BhY2VzIGFuZCB1c2VzIHNvaWwtbGVzcyBtZXRob2RzIHN1Y2ggYXMgaHlkcm9wb25pY3MsICAgYXF1YXBvbmljcyBhbmQgYWVyb3Bvbmljcy4gICAgQWR2YW50YWdlcyBvZiBWZXJ0aWNhbCBGYXJtaW5nOiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIEluY3JlYXNlZCBjcm9wIHlpZWxkOiBUaGUgbWFpbiBhZHZhbnRhZ2Ugb2YgdXRpbGl6aW5nIHZlcnRpY2FsIGZhcm1pbmcgdGVjaG5vbG9naWVzIGlzICAgdGhlIGluY3JlYXNlZCBjcm9wIHlpZWxkIHRoYXQgY29tZXMgd2l0aCBhIHNtYWxsZXIgdW5pdCBhcmVhIG9mIGxhbmQgcmVxdWlyZW1lbnQuIFRoZSBpbmNyZWFzZWQgYWJpbGl0eSB0byAgIGN1bHRpdmF0ZSBhIGxhcmdlciB2YXJpZXR5IG9mIGNyb3BzIGF0IG9uY2UgaXMgYmVjYXVzZSBjcm9wcyBkbyBub3Qgc2hhcmUgdGhlIHNhbWUgcGxvdHMgb2YgbGFuZC4gICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiBFY29ub21pYyBWaWFiaWxpdHk6IFRoaXMgdHlwZSBvZiBmYXJtIGRlcGVuZHMgaGVhdmlseSBvbiBtb2Rlcm4gZW5naW5lZXJpbmcgYW5kICAgYXJjaGl0ZWN0dXJlLCBhcyB3ZWxsIGFzIHRoZSBhcHBsaWNhdGlvbiBvZiBkaWZmZXJlbnQgdGVjaG5vbG9naWVzLiBCdWlsZGluZyB2ZXJ0aWNhbCBmYXJtcyBpbiBleHBlbnNpdmUgICBidWlsZGluZ3MgYWRkIHRvIHRoZSB0b3RhbCBpbnZlc3RtZW50IGFuZCBvcGVyYXRpb25hbCBjb3N0cy4gICBPcHRpb24gMyBpcyBjb3JyZWN0LiBXYXRlciBjb25zZXJ2YXRpb246IFZlcnRpY2FsIGZhcm1pbmcgYWxsb3dzIHRvIHByb2R1Y2UgY3JvcHMgd2l0aCA3MC05NSUgbGVzcyB3YXRlciAgIHRoYW4gcmVxdWlyZWQgZm9yIG5vcm1hbCBjdWx0aXZhdGlvbi4gSW4gYWRkaXRpb24sIHdpdGggdGhlIHBsYW50cyBiZWluZyBncm93biBpbiBodWdlIHZlcnRpY2FsIGdyZWVuaG91c2VzLCAgIHRoZSB0cmFuc3BpcmF0aW9uIHRoYXQgd2lsbCBvY2N1ciBuYXR1cmFsbHkgd2lsbCBiZSBoYXJuZXNzZWQgYW5kIHJldXNlZCBhZ2FpbiBmb3IgaXJyaWdhdGlvbi4gICBPcHRpb24gNCBpcyBpbmNvcnJlY3QuIExhYm91ciBDb3N0czogSW4gdmVydGljYWwgZmFybWluZywgbGFib3VyIGNvc3RzIGNhbiBiZSBldmVuIGhpZ2hlciBkdWUgdG8gdGhlaXIgICBjb25jZW50cmF0aW9uIGluIHVyYmFuIGNlbnRyZXMgd2hlcmUgd2FnZXMgYXJlIGhpZ2hlciwgYXMgd2VsbCBhcyB0aGUgbmVlZCBmb3IgbW9yZSBza2lsbGVkIGxhYm91ci4gICBBdXRvbWF0aW9uIGluIHZlcnRpY2FsIGZhcm1zLCBob3dldmVyLCBtYXkgbGVhZCB0byB0aGUgbmVlZCBmb3IgZmV3ZXIgd29ya2Vycy4gTWFudWFsIHBvbGxpbmF0aW9uIG1heSAgIGJlY29tZSBvbmUgb2YgdGhlIG1vcmUgbGFib3VyLWludGVuc2l2ZSBmdW5jdGlvbnMgaW4gdmVydGljYWwgZmFybXMuICAgSW50ZXJmZXJlIHdpdGggUG9sbGluYXRpb246IFZlcnRpY2FsIGZhcm1pbmcgdGFrZXMgcGxhY2UgaW4gYSBjb250cm9sbGVkIGVudmlyb25tZW50IHdpdGhvdXQgdGhlIHByZXNlbmNlICAgb2YgaW5zZWN0cy4gQXMgc3VjaCwgdGhlIHBvbGxpbmF0aW9uIHByb2Nlc3MgbmVlZHMgdG8gYmUgZG9uZSBtYW51YWxseSwgd2hpY2ggd2lsbCBiZSBsYWJvdXIgaW50ZW5zaXZlIGFuZCAgIGNvc3RseS4gICBEaXNydXB0aW9uIHRvIHRoZSBSdXJhbCBTZWN0b3I6IEFub3RoZXIgZm9yZXNlZW4gY2hhbGxlbmdlIGFuZCBkaXNhZHZhbnRhZ2Ugb2YgdmVydGljYWwgZmFybWluZyBpbnZvbHZlcyAgIHRoZSBwb3RlbnRpYWwgZm9yIGRpc3J1cHRpbmcgdGhlIHJ1cmFsIHNlY3RvciwgZXNwZWNpYWxseSB0aG9zZSBjb21tdW5pdGllcyB3aXRoIGVjb25vbWllcyB0aGF0IGFyZSAgIGRlcGVuZGVudCBvbiBhZ3JpY3VsdHVyZS4gVmVydGljYWwgZmFybXMgY2FuIHJlbmRlciB0cmFkaXRpb25hbCBmYXJtaW5nIGpvYnMgb2Jzb2xldGUuICAgS25vd2xlZGdlIEJhc2U6ICAgIFRoZSBmdXR1cmUgb2YgdmVydGljYWwgZmFybWluZyBpcyBicmlnaHRlciB0aGFuIG9uY2UgdGhvdWdodCAtRm9ydW1JQVMgQmxvZyAgIFdoYXQgaXMgVmVydGljYWwgRmFybWluZz8tRm9ydW1JQVMgQmxvZyAgIEFkdmFudGFnZXMgb2YgVmVydGljYWwgRmFybWluZyAoZXBvbmljLmNvbS5hdSkgICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 26,
      "question" : "Suppose the Parliament of India has made  a law that seeks to implement the provisions of  Article 39(b) and 39(c) of the Indian  Constitution. Such a law cannot be declared  void by the Courts even if it is in contravention  to which of the following Fundamental Rights?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IDM5KGIpIGFuZCAzOShjKSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbi4gU3VjaCBhIGxhdyBjYW5ub3QgYmUgZGVjbGFyZWQgdm9pZCBieSB0aGUgQ291cnRzIGV2ZW4gaWYgaXQgaXMgaW4gICBjb250cmF2ZW50aW9uIHRvIHdoaWNoIG9mIHRoZSBmb2xsb3dpbmcgRnVuZGFtZW50YWwgUmlnaHRzPyAgICBhKSBBcnRpY2xlIDE0IGFuZCAxNSAgICBiKSBBcnRpY2xlIDE1IGFuZCAyMSAgICBjKSBBcnRpY2xlIDE0IGFuZCAxOSAgICBkKSBBcnRpY2xlIDE5IGFuZCAyMSAgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBPcHRpb24gYyBpcyBjb3JyZWN0OiBBcnRpY2xlIDMxQyBzdGF0ZXMgdGhhdCBubyBsYXcgd2hpY2ggc2Vla3MgdG8gaW1wbGVtZW50IHRoZSBzb2NpYWxpc3RpYyBEaXJlY3RpdmUgICBQcmluY2lwbGVzIHNwZWNpZmllZCBpbiBBcnRpY2xlIDM5IChiKSBhbmQgKGMpIHNoYWxsIGJlIHZvaWQgb24gdGhlIGdyb3VuZCBvZiBjb250cmF2ZW50aW9uIG9mIHRoZSBGdW5kYW1lbnRhbCAgIFJpZ2h0cyBjb25mZXJyZWQgYnkgQXJ0aWNsZSAxNCAoZXF1YWxpdHkgYmVmb3JlIGxhdyBhbmQgZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzKSBhbmQgQXJ0aWNsZSAxOSAocHJvdGVjdGlvbiAgIG9mIHNpeCByaWdodHMgaW4gcmVzcGVjdCBvZiBzcGVlY2gsIGFzc2VtYmx5LCBtb3ZlbWVudCwgZXRjKS4gVGhzdSwgaXQgZ2l2ZXMgcHJpbWFjeSB0byB0aGUgaW1wbGVtZW50YXRpb24gICBvZiB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgc3BlY2lmaWVkIGluIEFydGljbGUgMzkgKGIpIGFuZCAoYykgb3ZlciBGdW5kYW1lbnRhbCBSaWdodHMgdW5kZXIgYXJ0aWNsZSAxNCBhbmQgICAxOS4gQXJ0aWNsZSAzMUMgd2FzIGludHJvZHVjZWQgaW4gdGhlIEluZGlhbiBDb25zdGl0dXRpb24gYnkgdGhlIDI1dGggQW1lbmRtZW50IEFjdCwgMTk3MS4gICAgU291cmNlOiAgSW5kaWFuIFBvbGl0eSBieSBMYXhtaWthbnQgLSA2dGggZWRpdGlvbiAtIENoYXB0ZXIgOCAtIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeS4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 14 and 15   ",
        "option2" : "Article 15 and 21   ",
        "option3" : "Article 14 and 19   ",
        "option4" : "Article 19 and 21   "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following Directive  Principles of State Policy were added later  through various amendments to the  Constitution?   1.  To secure opportunities for healthy  development of children.   2.  To prevent concentration of wealth and  means of production.   3.  To promote equal justice and to provide free  legal aid to the poor.   4.  To make provision for just and humane  conditions of work and maternity relief.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IGFtZW5kbWVudHMgdG8gdGhlIENvbnN0aXR1dGlvbj8gICAgMS4gVG8gc2VjdXJlIG9wcG9ydHVuaXRpZXMgZm9yIGhlYWx0aHkgZGV2ZWxvcG1lbnQgb2YgY2hpbGRyZW4uICAgIDIuIFRvIHByZXZlbnQgY29uY2VudHJhdGlvbiBvZiB3ZWFsdGggYW5kIG1lYW5zIG9mIHByb2R1Y3Rpb24uICAgIDMuIFRvIHByb21vdGUgZXF1YWwganVzdGljZSBhbmQgdG8gcHJvdmlkZSBmcmVlIGxlZ2FsIGFpZCB0byB0aGUgcG9vci4gICAgNC4gVG8gbWFrZSBwcm92aXNpb24gZm9yIGp1c3QgYW5kIGh1bWFuZSBjb25kaXRpb25zIG9mIHdvcmsgYW5kIG1hdGVybml0eSByZWxpZWYuICAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgZnJvbSB0aGUgY29kZSBnaXZlbiBiZWxvdzogICAgYSkgMSBhbmQgMiBvbmx5ICAgIGIpIDIgYW5kIDQgb25seSAgICBjKSAxIGFuZCAzIG9ubHkgICAgZCkgMyBhbmQgNCBvbmx5ICAgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSBhcmUgZW51bWVyYXRlZCBpbiBQYXJ0IElWIG9mIHRoZSBDb25zdGl0dXRpb24gZnJvbSBBcnRpY2xlcyAzNiB0byAgIDUxLiBUaGV5IHdlcmUgYW1lbmRlZCBmb3VyIHRpbWVzIHRocm91Z2ggNDJuZCwgNDR0aCwgODZ0aCBhbmQgOTd0aCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0cy4gICAgU3RhdGVtZW50IDEgYW5kIDMgYXJlIGNvcnJlY3Q6IFRoZSA0Mm5kIEFtZW5kbWVudCBBY3Qgb2YgMTk3NiBhZGRlZCBmb3VyIG5ldyBEaXJlY3RpdmUgUHJpbmNpcGxlcyB0byAgIHRoZSBvcmlnaW5hbCBsaXN0LiBUaGV5IHJlcXVpcmUgdGhlIFN0YXRlOiAgICAxKSBUbyBzZWN1cmUgb3Bwb3J0dW5pdGllcyBmb3IgaGVhbHRoeSBkZXZlbG9wbWVudCBvZiBjaGlsZHJlbiAoQXJ0aWNsZSAzOSkuICAgMikgVG8gcHJvbW90ZSBlcXVhbCBqdXN0aWNlIGFuZCB0byBwcm92aWRlIGZyZWUgbGVnYWwgYWlkIHRvIHRoZSBwb29yIChBcnRpY2xlIDM5IEEpLiAgIDMpIFRvIHRha2Ugc3RlcHMgdG8gc2VjdXJlIHRoZSBwYXJ0aWNpcGF0aW9uIG9mIHdvcmtlcnMgaW4gdGhlIG1hbmFnZW1lbnQgb2YgaW5kdXN0cmllcyAoQXJ0aWNsZSA0MyBBKS4gICA0KSBUbyBwcm90ZWN0IGFuZCBpbXByb3ZlIHRoZSBlbnZpcm9ubWVudCBhbmQgdG8gc2FmZWd1YXJkIGZvcmVzdHMgYW5kIHdpbGRsaWZlIChBcnRpY2xlIDQ4IEEpLiAgICBTdGF0ZW1lbnQgMiBhbmQgNCBhcmUgaW5jb3JyZWN0OiBBcnRpY2xlIDM5KGMpIGRpcmVjdHMgdGhlIHN0YXRlIHRvIHByZXZlbnQgY29uY2VudHJhdGlvbiBvZiB3ZWFsdGggYW5kICAgbWVhbnMgb2YgcHJvZHVjdGlvbi4gQXJ0aWNsZSA0MiBkaXJlY3RzIHRoZSBzdGF0ZSB0byBtYWtlIHByb3Zpc2lvbiBmb3IganVzdCBhbmQgaHVtYW5lIGNvbmRpdGlvbnMgb2Ygd29yayAgIGFuZCBtYXRlcm5pdHkgcmVsaWVmLiBUaGVzZSBhcmUgcGFydCBvZiB0aGUgb3JpZ2luYWwgQ29uc3RpdHV0aW9uLiAgICBLbm93bGVkZ2UgQmFzZTogICAgT3RoZXIgYW1lbmRtZW50IHRvIERQU1A6ICAgIDEpIFRoZSA0NHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3OCBhZGRlZCBvbmUgbW9yZSBEaXJlY3RpdmUgUHJpbmNpcGxlLCB3aGljaCByZXF1aXJlcyB0aGUgU3RhdGUgdG8gICBtaW5pbWlzZSBpbmVxdWFsaXRpZXMgaW4gaW5jb21lLCBzdGF0dXMsIGZhY2lsaXRpZXMgYW5kIG9wcG9ydHVuaXRpZXMgKEFydGljbGUgMzgpLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgMikgVGhlIDg2dGggQW1lbmRtZW50IEFjdCBvZiAyMDAyIGNoYW5nZWQgdGhlIHN1YmplY3QtbWF0dGVyIG9mIEFydGljbGUgNDUgYW5kIG1hZGUgZWxlbWVudGFyeSAgIGVkdWNhdGlvbiBhIGZ1bmRhbWVudGFsIHJpZ2h0IHVuZGVyIEFydGljbGUgMjEgQS4gICAgMykgVGhlIDk3dGggQW1lbmRtZW50IEFjdCBvZiAyMDExIGFkZGVkIGEgbmV3IERpcmVjdGl2ZSBQcmluY2lwbGUgcmVsYXRpbmcgdG8gY29vcGVyYXRpdmUgc29jaWV0aWVzLiBJdCAgIHJlcXVpcmVzIHRoZSBzdGF0ZSB0byBwcm9tb3RlIHZvbHVudGFyeSBmb3JtYXRpb24sIGF1dG9ub21vdXMgZnVuY3Rpb25pbmcsIGRlbW9jcmF0aWMgY29udHJvbCBhbmQgICBwcm9mZXNzaW9uYWwgbWFuYWdlbWVudCBvZiBjby1vcGVyYXRpdmUgc29jaWV0aWVzIChBcnRpY2xlIDQzQikuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBMYXhtaWthbnQgLSA2dGggZWRpdGlvbiAtIENoYXB0ZXIgOCAtIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeS4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "3 and 4 only    "
      }
    },
    {
      "index" : 28,
      "question" : "What was the key ruling of the Supreme  Court in the 'State of Madras v. Champakam  Dorairajan' case?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IGEpIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgaGF2ZSBhIHBvc2l0aW9uIG9mIGxlZ2FsIHByaW1hY3kgYW5kIHN1cHJlbWFjeSBvdmVyIHRoZSAgIEZ1bmRhbWVudGFsIFJpZ2h0cy4gICBiKSBJbmRpYW4gQ29uc3RpdHV0aW9uIGlzIGZvdW5kZWQgb24gdGhlIGJlZHJvY2sgb2YgYmFsYW5jZSBiZXR3ZWVuIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYW5kIHRoZSAgIERpcmVjdGl2ZSBQcmluY2lwbGVzLiAgIGMpIFRoZSBGdW5kYW1lbnRhbCBSaWdodHMgY2FuIG5ldmVyIGJlIGFtZW5kZWQgYnkgdGhlIFBhcmxpYW1lbnQsIGV2ZW4gYnkgZW5hY3RpbmcgQ29uc3RpdHV0aW9uYWwgICBhbWVuZG1lbnQgYWN0cy4gICBkKSBUaGUgRnVuZGFtZW50YWwgUmlnaHRzIHdvdWxkIHByZXZhaWwgb3ZlciB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LCBpbiBjYXNlIG9mIGFueSBjb25mbGljdCAgIGJldHdlZW4gdGhlIHR3by4gICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgT3B0aW9uIGQgaXMgY29ycmVjdCBhbmQgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiBUaGUgU3RhdGUgb2YgTWFkcmFzIHYuIENoYW1wYWthbSBEb3JhaXJhamFuIGlzIGEgbGFuZG1hcmsgICBkZWNpc2lvbiBvZiB0aGUgU3VwcmVtZSBDb3VydCBvZiBJbmRpYS4gVGhpcyBqdWRnZW1lbnQgbGVkIHRvIHRoZSBmaXJzdCBhbWVuZG1lbnQgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiAgIEluZGlhLiBUaGUgU3VwcmVtZSBjb3VydCBoZWxkIHRoYXQgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5IGhhdmUgdG8gY29uZm9ybSB0byBhbmQgcnVuIGFzICAgc3Vic2lkaWFyeSB0byB0aGUgQ2hhcHRlciBvZiBGdW5kYW1lbnRhbCBSaWdodHMuIFRoZSBTdXByZW1lIENvdXJ0IHJ1bGVkIHRoYXQgaW4gY2FzZSBvZiBhbnkgY29uZmxpY3QgICBiZXR3ZWVuIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYW5kIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcywgdGhlIGZvcm1lciB3b3VsZCBwcmV2YWlsLiBCdXQsIGl0IGFsc28gaGVsZCAgIHRoYXQgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBjb3VsZCBiZSBhbWVuZGVkIGJ5IHRoZSBQYXJsaWFtZW50IGJ5IGVuYWN0aW5nIGNvbnN0aXR1dGlvbmFsIGFtZW5kbWVudCAgIGFjdHMuICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0LiBUaGUgNDJuZCBBbWVuZG1lbnQgQWN0IGFjY29yZGVkIHRoZSBwb3NpdGlvbiBvZiBsZWdhbCBwcmltYWN5IGFuZCBzdXByZW1hY3kgICB0byB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgb3ZlciB0aGUgRnVuZGFtZW50YWwgUmlnaHRzIGNvbmZlcnJlZCBieSBBcnRpY2xlcyAxNCwgMTkgYW5kIDMxLiBIb3dldmVyLCAgIHRoaXMgZXh0ZW5zaW9uIHdhcyBkZWNsYXJlZCBhcyB1bmNvbnN0aXR1dGlvbmFsIGFuZCBpbnZhbGlkIGJ5IHRoZSBTdXByZW1lIENvdXJ0IGluIHRoZSBNaW5lcnZhIE1pbGxzIGNhc2UgICAoMTk4MCkuIEl0IG1lYW50IHRoYXQgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIHdlcmUgb25jZSBhZ2FpbiBtYWRlIHN1Ym9yZGluYXRlIHRvIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0LiBJbiB0aGUgTWluZXJ2YSBNaWxscyBjYXNlICgxOTgwKSwgdGhlIFN1cHJlbWUgQ291cnQgYWxzbyBoZWxkIHRoYXQgJ3RoZSBJbmRpYW4gICBDb25zdGl0dXRpb24gaXMgZm91bmRlZCBvbiB0aGUgYmVkcm9jayBvZiB0aGUgYmFsYW5jZSBiZXR3ZWVuIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYW5kIHRoZSAgIERpcmVjdGl2ZSBQcmluY2lwbGVzLiBUaGV5IHRvZ2V0aGVyIGNvbnN0aXR1dGUgdGhlIGNvcmUgb2YgY29tbWl0bWVudCB0byBzb2NpYWwgcmV2b2x1dGlvbi4gVGhleSBhcmUgbGlrZSAgIHR3byB3aGVlbHMgb2YgYSBjaGFyaW90LCBvbmUgbm8gbGVzcyB0aGFuIHRoZSBvdGhlci4gVG8gZ2l2ZSBhYnNvbHV0ZSBwcmltYWN5IHRvIG9uZSBvdmVyIHRoZSBvdGhlciBpcyB0byAgIGRpc3R1cmIgdGhlIGhhcm1vbnkgb2YgdGhlIENvbnN0aXR1dGlvbi4gVGhpcyBoYXJtb255IGFuZCBiYWxhbmNlIGJldHdlZW4gdGhlIHR3byBpcyBhbiBlc3NlbnRpYWwgZmVhdHVyZSAgIG9mIHRoZSBiYXNpYyBzdHJ1Y3R1cmUgb2YgdGhlIENvbnN0aXR1dGlvbi4gICBTb3VyY2U6ICBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCA4dGggQ2hhcHRlciAgICBodHRwczovL21haW4uc2NpLmdvdi5pbi9qdWRnbWVudC9qdWRpcy8xMTk0LnBkZiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Directive Principles of State Policy have   a position of legal primacy and supremacy   over the Fundamental Rights.  ",
        "option2" : " Indian Constitution is founded on the   bedrock of balance between the   Fundamental Rights and the Directive   Principles.  ",
        "option3" : " The Fundamental Rights can never be   amended by the Parliament, even by   enacting Constitutional amendment acts.  ",
        "option4" : " The Fundamental Rights would prevail over   the Directive Principles of State Policy, in   case of any conflict between the two.   "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following is the most  appropriate description of the term 'Fabian  Socialism'?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IGEpIEFuIGlkZW9sb2d5IHRoYXQgcHJvbW90ZXMgZ3JhZHVhbCBlc3RhYmxpc2htZW50IG9mIGRlbW9jcmF0aWMgc29jaWFsaXNtIHRocm91Z2ggcGVhY2VmdWwgbWVhbnMuICAgYikgQW4gaWRlb2xvZ3kgdGhhdCBhZHZvY2F0ZXMgdGhlIGFkdmFuY2VtZW50IG9mIHNvY2lhbGlzbSB0aHJvdWdoIHJldm9sdXRpb25hcnkgb3ZlcnRocm93LiAgIGMpIEEgdHlwZSBvZiBzb2NpYWxpc3RpYyBpZGVvbG9neSB0aGF0IGlzIHZlcnkgcHJvdGVjdGl2ZSBvZiBuYXR1cmFsIHJlc291cmNlcy4gICAgZCkgQSBzb2NpYWxpc3RpYyBpZGVvbG9neSB0aGF0IGludm9sdmVzIHRoZSBtYXJrZXQgbWVjaGFuaXNtIGZvciBhbGxvY2F0aW5nIGVjb25vbWljIHJlc291cmNlcy4gICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgU29jaWFsaXNtIGlzIGEgc3lzdGVtIGluIHdoaWNoIGV2ZXJ5IHBlcnNvbiBpbiB0aGUgY29tbXVuaXR5IGhhcyBhbiBlcXVhbCBzaGFyZSBvZiB0aGUgdmFyaW91cyBlbGVtZW50cyAgIG9mIHByb2R1Y3Rpb24sIGRpc3RyaWJ1dGlvbiwgYW5kIGV4Y2hhbmdlIG9mIHJlc291cmNlcy4gU3VjaCBhIGZvcm0gb2Ygb3duZXJzaGlwIGlzIGdyYW50ZWQgdGhyb3VnaCBhICAgZGVtb2NyYXRpYyBzeXN0ZW0gb2YgZ292ZXJuYW5jZS4gICAgT3B0aW9uIGEgaXMgY29ycmVjdDogRmFiaWFuIHNvY2lhbGlzbSBpcyBhIGZvcm0gb2Ygc29jaWFsaXNtIHRoYXQgYWR2YW5jZXMgdGhlIHByaW5jaXBsZXMgb2YgZGVtb2NyYXRpYyAgIGZyYW1ld29yayB0byBhY2hpZXZlIGdyYWR1YWwgY29udmVyc2lvbiB0byBzb2NpYWxpc20gYnkgcGVhY2VmdWwgbWVhbnMgcmF0aGVyIHRoYW4gYnkgcmV2b2x1dGlvbmFyeSAgIG92ZXJ0aHJvdy4gICBUaGUgRmFiaWFuIFNvY2lldHkgaXMgYSBCcml0aXNoIHNvY2lhbGlzdCBvcmdhbmlzYXRpb24gd2hvc2UgcHVycG9zZSBpcyB0byBhZHZhbmNlIHRoZSBwcmluY2lwbGVzIG9mICAgZGVtb2NyYXRpYyBzb2NpYWxpc20gdmlhIGdyYWR1YWxpc3QgYW5kIHJlZm9ybWlzdCBlZmZvcnQgaW4gZGVtb2NyYWNpZXMsIHJhdGhlciB0aGFuIGJ5IHJldm9sdXRpb25hcnkgICBvdmVydGhyb3cuIEZhYmlhbnMnIGZ1bmRhbWVudGFsIGFzc3VtcHRpb24gd2FzIHRoYXQgc29jaWFsaXNtIHdvdWxkIGJlIGludHJvZHVjZWQgbm90IHRocm91Z2ggY2xhc3MgICBjb25mbGljdCwgYnV0IGJ5IHdheSBvZiBkZW1vY3JhdGljIHdlbGZhcmUgbGVnaXNsYXRpb24gYWRtaW5pc3RlcmVkIGJ5IGNpdmlsIHNlcnZpY2UuICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogTWFyeCBiZWxpZXZlZCB0aGF0IGNhcGl0YWxpc3Qgc3lzdGVtIG9mIGVjb25vbXkgd2FzIHRoZSBjaGllZiBjYXVzZSBvZiB0aGUgY29tbW9uICAgcGVvcGxlJ3MgbWlzZXJ5LiBIZSBpbnNpc3RlZCB1cG9uIGNsYXNzIHN0cnVnZ2xlIGFuZCBhbHNvIGl0cyBpbnRlbnNpZmljYXRpb24gd2hpY2ggd291bGQgdWx0aW1hdGVseSBsZWFkIHRvICAgdGhlIG92ZXJ0aHJvdyBvZiBjYXBpdGFsaXNtLiBUaGlzLCBhY2NvcmRpbmcgdG8gTWFyeCwgaXMgdGhlIG9ubHkgd2F5IG9mIGVtYW5jaXBhdGluZyBvcHByZXNzZWQgcGVvcGxlLiAgICBPcHRpb24gYyBpcyBpbmNvcnJlY3Q6IEdyZWVuIHNvY2lhbGlzbSBpcyBwcm90ZWN0aXZlIG9mIG5hdHVyYWwgcmVzb3VyY2VzLiBUaGUgcHJvZHVjdGlvbiBwcm9jZXNzIGlzICAgZm9jdXNlZCBvbiBlbnN1cmluZyB0aGF0IGV2ZXJ5IG1lbWJlciBvZiB0aGUgY29tbXVuaXR5IGhhcyBlbm91Z2ggYWNjZXNzIHRvIGJhc2ljIGdvb2RzLiBMYXJnZSAgIGNvcnBvcmF0aW9ucyBpbiBhIGdyZWVuIHNvY2lhbGlzdGljIHNvY2lldHkgYXJlIG93bmVkIGFuZCBydW4gYnkgdGhlIHB1YmxpYy4gSW4gYWRkaXRpb24sIGdyZWVuIHNvY2lhbGlzbSAgIHByb21vdGVzIHRoZSBkZXZlbG9wbWVudCBhbmQgdXNlIG9mIHB1YmxpYyB0cmFuc2l0LCBhcyB3ZWxsIGFzIHRoZSBwcm9jZXNzaW5nIGFuZCBzYWxlIG9mIGxvY2FsbHkgZ3Jvd24gICBmb29kLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogTWFya2V0IHNvY2lhbGlzbSByZWZlcnMgdG8gdmFyaW91cyBlY29ub21pYyBzeXN0ZW1zIHRoYXQgaW52b2x2ZSBlaXRoZXIgcHVibGljICAgb3duZXJzaGlwIG9yIHdvcmtlciBjb29wZXJhdGl2ZSBvd25lcnNoaXAgb3ZlciB0aGUgbWVhbnMgb2YgcHJvZHVjdGlvbiwgb3IgYSBjb21iaW5hdGlvbiBvZiBib3RoLiBJdCAgIGludm9sdmVzIHRoZSBtYXJrZXQgbWVjaGFuaXNtIGZvciBhbGxvY2F0aW5nIGVjb25vbWljIG91dHB1dCwgZGVjaWRpbmcgd2hhdCB0byBwcm9kdWNlIGFuZCBpbiB3aGF0ICAgcXVhbnRpdHkuICAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tL2V2ZW50L0ZhYmlhbmlzbSAgICBodHRwczovL3d3dy5jYW1icmlkZ2Uub3JnL2NvcmUvam91cm5hbHMvam91cm5hbC1vZi1icml0aXNoLXN0dWRpZXMvYXJ0aWNsZS9hYnMvZmFiaWFuLXNvY2lhbGlzbS1hLSAgdGhlb3J5LW9mLXJlbnQtYXMtZXhwbG9pdGF0aW9uLzVDNDg3ODYwMDQ1Rjk2MDFCOEM1QUU0M0Q2MURFNkU1ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " An ideology that promotes gradual   establishment of democratic socialism   through peaceful means.  ",
        "option2" : " An ideology that advocates the   advancement of socialism through   revolutionary overthrow.  ",
        "option3" : " A type of socialistic ideology that is very   protective of natural resources.   ",
        "option4" : " A socialistic ideology that involves the   market mechanism for allocating economic   resources.    "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements  regarding NITI Aayog's report 'Health  Insurance for India's Missing Middle':  1.  The report states that the bottom thirty  percent of the population are not covered  under any health insurance schemes in  India.  2.  The uncovered sections mostly include self- employed in agriculture and informal sector  in rural areas.  3.  The report advocated for phasing out  government supported health insurance  scheme in favor of standardize health  insurance products led by private sector.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IE1pZGRsZSc6ICAgMS4gVGhlIHJlcG9ydCBzdGF0ZXMgdGhhdCB0aGUgYm90dG9tIHRoaXJ0eSBwZXJjZW50IG9mIHRoZSBwb3B1bGF0aW9uIGFyZSBub3QgY292ZXJlZCB1bmRlciBhbnkgaGVhbHRoICAgaW5zdXJhbmNlIHNjaGVtZXMgaW4gSW5kaWEuICAgMi4gVGhlIHVuY292ZXJlZCBzZWN0aW9ucyBtb3N0bHkgaW5jbHVkZSBzZWxmLWVtcGxveWVkIGluIGFncmljdWx0dXJlIGFuZCBpbmZvcm1hbCBzZWN0b3IgaW4gcnVyYWwgYXJlYXMuICAgMy4gVGhlIHJlcG9ydCBhZHZvY2F0ZWQgZm9yIHBoYXNpbmcgb3V0IGdvdmVybm1lbnQgc3VwcG9ydGVkIGhlYWx0aCBpbnN1cmFuY2Ugc2NoZW1lIGluIGZhdm9yIG9mICAgc3RhbmRhcmRpemUgaGVhbHRoIGluc3VyYW5jZSBwcm9kdWN0cyBsZWQgYnkgcHJpdmF0ZSBzZWN0b3IuICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgYSkgMSBhbmQgMiBvbmx5ICAgYikgMiBvbmx5ICAgYykgMSBhbmQgMyBvbmx5ICAgZCkgMSwgMiBhbmQgMyAgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBOaXRpIEFheW9nIGhhcyByZWxlYXNlZCBhIHJlcG9ydCB0aXRsZWQgJ0hlYWx0aCBJbnN1cmFuY2UgZm9yIEluZGlhJ3MgTWlzc2luZyBNaWRkbGUnLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIHJlcG9ydCBwb2ludHMgb3V0IHRoZSBmYWN0IHRoYXQgYXQgbGVhc3QgMzAlIG9mIHRoZSBwb3B1bGF0aW9uLCBvciA0MCBjcm9yZSAgIGluZGl2aWR1YWxzIChub3QgdGhlIGJvdHRvbSAzMCUpIC0gY2FsbGVkIHRoZSBtaXNzaW5nIG1pZGRsZSBhcmUgZGV2b2lkIG9mIGFueSBmaW5hbmNpYWwgcHJvdGVjdGlvbiBmb3IgICBoZWFsdGguIEluZmFjdCwgdGhlIEF5dXNobWFuIEJoYXJhdCAtIFByYWRoYW4gTWFudHJpIEphbiBBcm9neWEgWW9qYW5hIChBQi1QTUpBWSkgYW5kIFN0YXRlICAgR292ZXJubWVudCBzY2hlbWVzIHByb3ZpZGUgY29tcHJlaGVuc2l2ZSBob3NwaXRhbGl6YXRpb24gY292ZXIgdG8gdGhlIGJvdHRvbSA1MCUgb2YgdGhlICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBwb3B1bGF0aW9uLiBBbm90aGVyIDIwJSBvZiB0aGUgcG9wdWxhdGlvbiBhcmUgY292ZXJlZCB0aHJvdWdoIHNvY2lhbCBoZWFsdGggaW5zdXJhbmNlIGFuZCBwcml2YXRlICAgdm9sdW50YXJ5IGhlYWx0aCBpbnN1cmFuY2UuICAgIEJ1dCB0aGUgcmVtYWluaW5nIDMwJSBvZiB0aGUgcG9wdWxhdGlvbiBvciA0MCBjcm9yZSBpbmRpdmlkdWFscyBhcmUgd2l0aG91dCBhbnkgaGVhbHRoIGluc3VyYW5jZS4gVGhpcyAgIHVuY292ZXJlZCBwb3B1bGF0aW9uIGlzIHRlcm1lZCBhcyB0aGUgbWlzc2luZyBtaWRkbGUuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBNaXNzaW5nIG1pZGRsZSAodW5jb3ZlcmVkIHNlY3Rpb25zKSBwcmVkb21pbmFudGx5IGNvbnN0aXR1dGVzIHRoZSBzZWxmLWVtcGxveWVkICAgKGFncmljdWx0dXJlIGFuZCBub24tYWdyaWN1bHR1cmUpLCB0aGUgaW5mb3JtYWwgc2VjdG9yIGluIHJ1cmFsIGFyZWFzIGFuZCBhIGJyb2FkIGFycmF5IG9mIG9jY3VwYXRpb25zIC0gICBpbmZvcm1hbCwgc2VtaS1mb3JtYWwsIGFuZCBmb3JtYWwgLSBpbiB1cmJhbiBhcmVhcy4gICAgVGhlIG9jY3VwYXRpb25zIGFuZCBuYXR1cmUgb2YgZW1wbG95bWVudCBvZiB0aGlzIHNlZ21lbnQgb2YgdGhlIG1pc3NpbmcgbWlkZGxlIGhhdmUgYSBiZWFyaW5nIG9uIHRoZWlyICAgYWNjZXNzIHRvIGFmZm9yZGFibGUgaGVhbHRoY2FyZSwgYW5kIHVsdGltYXRlbHkgaGVhbHRoIG91dGNvbWVzLiBUaGVpciBlbXBsb3ltZW50IGlzIHByZWNhcmlvdXMsIGluY29tZXMgICBhcmUgdW5zdGFibGUsIGFuZCBtb3N0IHdvcmsgd2l0aG91dCBhbnkgZm9ybWFsIGNvbnRyYWN0LiBGdXJ0aGVyLCB0aGV5IGxhY2sgYW55IHJlcHJlc2VudGF0aW9uIHRocm91Z2ggICB1bmlvbnMgb3IgYXNzb2NpYXRpb25zLiBDb25zZXF1ZW50bHksIHRoZXkgbGFjayBiYXJnYWluaW5nIHBvd2VyIHRvIG5lZ290aWF0ZSBzYWZlciB3b3JraW5nIGNvbmRpdGlvbnMgICBhbmQgYmFzaWMgc29jaWFsIHNlY3VyaXR5IGJlbmVmaXRzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHJlcG9ydCBkb2VzIG5vdCByZWNvbW1lbmQgcGhhc2luZyBvdXQgZ292ZXJubWVudCBzdXBwb3J0ZWQgaGVhbHRoICAgaW5zdXJhbmNlLiBPbiB0aGUgY29udHJhcnksIGl0IGFkdm9jYXRlcyBmb3IgdGhlIGV4cGFuc2lvbiBvZiBQcmFkaGFuIE1hbnRyaSBKYW4gQXJvZ3lhIFlvamFuYSB0byBhICAgd2lkZXIgc2V0IG9mIGJlbmVmaWNpYXJpZXMuICAgSXQgYWxzbyByZWNvbW1lbmRzIGZvY3VzaW5nIG9uIGluY3JlYXNpbmcgY29uc3VtZXIgYXdhcmVuZXNzIG9mIGhlYWx0aCBpbnN1cmFuY2UgYW5kIGRldmVsb3BpbmcgYSAgIG1vZGlmaWVkLCBzdGFuZGFyZGl6ZWQgaGVhbHRoIGluc3VyYW5jZSBwcm9kdWN0IGxpa2UgJ0Fyb2d5YSBTYW5qZWV2YW5pJy4gSXQgaXMgYSBzdGFuZGFyZGlzZWQgaGVhbHRoICAgaW5zdXJhbmNlIHByb2R1Y3QgbGF1bmNoZWQgYnkgdGhlIEluc3VyYW5jZSBSZWd1bGF0b3J5IERldmVsb3BtZW50IEF1dGhvcml0eSBvZiBJbmRpYSwgSVJEQUkpIGluIDIwMjAuICAgU291cmNlOiBOSVRJIEFheW9nIFJlbGVhc2VzIFJlcG9ydCBvbiAnSGVhbHRoIEluc3VyYW5jZSBmb3IgSW5kaWEncyBNaXNzaW5nIE1pZGRsZScgLUZvcnVtSUFTIEJsb2cgICBIZWFsdGhJbnN1cmFuY2UtZm9ySW5kaWFzTWlzc2luZ01pZGRsZV8yOC0xMC0yMDIxLnBkZiAobml0aS5nb3YuaW4pICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3           .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 31,
      "question" : "Which one of the following factors  constitutes the best safeguard of liberty in a  liberal democracy?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IGEpIEEgY29tbWl0dGVkIGp1ZGljaWFyeSAgIGIpIENlbnRyYWxpemF0aW9uIG9mIHBvd2VycyAgIGMpIEVsZWN0ZWQgZ292ZXJubWVudCAgIGQpIFNlcGFyYXRpb24gb2YgcG93ZXJzICAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgT3B0aW9uIGQgaXMgY29ycmVjdC4gVGhlIFNlcGFyYXRpb24gb2YgcG93ZXJzIGJldHdlZW4gdGhlIGxlZ2lzbGF0dXJlLCB0aGUgZXhlY3V0aXZlIGFuZCB0aGUganVkaWNpYXJ5ICAgY29uc3RpdHV0ZSBhbiBpbXBvcnRhbnQgc2FmZWd1YXJkIG9mIGxpYmVydHkgaW4gYSBsaWJlcmFsIGRlbW9jcmFjeS4gIFRoZSBkb2N0cmluZSBvZiBTZXBhcmF0aW9uIG9mIHBvd2VycyAgIGVudGFpbHMgdGhlIGRpdmlzaW9uIG9mIHRoZSBsZWdpc2xhdGl2ZSwgZXhlY3V0aXZlLCBhbmQganVkaWNpYWwgZnVuY3Rpb25zIG9mIGdvdmVybm1lbnQgYW1vbmcgZGlmZmVyZW50ICAgb3JnYW5zLiBUaGlzIHNlcGFyYXRpb24gbWluaW1pc2VzIHRoZSBwb3NzaWJpbGl0eSBvZiBhcmJpdHJhcnkgZXhjZXNzZXMgYnkgdGhlIGdvdmVybm1lbnQsIHNpbmNlIGFsbCB0aGUgICB0aHJlZSBvcmdhbnMgYWN0cyBhcyBjaGVjayBhbmQgYmFsYW5jZSBvbiB0aGUgcG93ZXJzIG9mIGVhY2ggb3RoZXIuIFRoZXJlZm9yZSwgbm9uZSBvZiB0aGUgdGhyZWUgb3JnYW5zICAgY2FuIHVzdXJwIHRoZSBlc3NlbnRpYWwgZnVuY3Rpb25zIG9mIG90aGVyIG9yZ2Fucy4gICBUaGlzIGRlbWFyY2F0aW9uIHByZXZlbnRzIHRoZSBjb25jZW50cmF0aW9uIG9mIGV4Y2Vzc2l2ZSBwb3dlciBieSBhbnkgYnJhbmNoIG9mIHRoZSBHb3Zlcm5tZW50LiBJdCB0aHVzICAgaGVscHMgdG8gc2FmZWd1YXJkIHRoZSBsaWJlcnR5IGFuZCByaWdodHMgb2YgdGhlIHBlb3BsZSBpbiBhIGRlbW9jcmFjeS4gICBTb3VyY2UpIExheG1pa2FudCBDaGFwdGVyIDcgYW5kIDExICAgaHR0cHM6Ly93d3cuY3VzYi5hYy5pbi9pbWFnZXMvY3VzYi0gIGZpbGVzLzIwMjAvZWwvbGF3L3cyL1NlcGFyYXRpb25fb2ZfUG93ZXJzMV9pdl9zZW1lc3Rlci5wZGYgICBTdWJqZWN0KSBVUFNDIENTRSAyMDIxICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "A committed judiciary  ",
        "option2" : "Centralization of powers  ",
        "option3" : "Elected government  ",
        "option4" : "Separation of powers   "
      }
    },
    {
      "index" : 32,
      "question" : "In context to political theory, which of the  following is correct regarding the 'Harm  Principle'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IGEpIEl0IHByb3ZpZGVzIHRoYXQgYSBnb3Zlcm5tZW50IG11c3QgcHJldmVudCBhbnkgcGh5c2ljYWwgaGFybSB0byBpdHMgY2l0aXplbnMsIGFzIGl0IGlzIHJlc3BvbnNpYmxlIHRvICAgcHJvdGVjdCB0aGVpciBsaWZlIGFuZCBwcm9wZXJ0eS4gICBiKSBUaGUgUmlnaHQgdG8gUHJvdGVjdGlvbiBvZiBMaWZlLCBhcyBlbnNocmluZWQgaW4gdGhlIEluZGlhbiBDb25zdGl0dXRpb24sIGlzIHRoZSBkaXJlY3QgcmVmbGVjdGlvbiBvZiB0aGlzICAgcHJpbmNpcGxlLiAgICBjKSBJdCBzYXlzIHRoYXQgdGhlIHBlb3BsZSBzaG91bGQgYmUgZnJlZSB0byBhY3QgYXMgdGhleSB3aXNoLCB1bmxlc3MgdGhlaXIgYWN0aW9ucyBjYXVzZSBoYXJtIHRvIG90aGVycy4gICBkKSBJdCBwcm9wb3NlcyB0aGF0IGlmIHR3byBjaXJjdW1zdGFuY2VzIGFyZSBwdXQgYmVmb3JlIGFuIGluZGl2aWR1YWwsIGhlIHdpbGwgYWx3YXlzIGNob29zZSB0aGUgb3B0aW9uICAgY2F1c2luZyBsZXNzIHBvc3NpYmxlIGhhcm0uICAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCBjIGlzIGNvcnJlY3QgYW5kIFN0YXRlbWVudCBhIGlzIGluY29ycmVjdC4gVGhlIEhhcm0gUHJpbmNpcGxlIHNheXMgdGhhdCBwZW9wbGUgc2hvdWxkIGJlIGZyZWUgICB0byBhY3QgYXMgdGhleSB3aXNoIHVubGVzcyB0aGVpciBhY3Rpb25zIGNhdXNlIGhhcm0gdG8gc29tZWJvZHkgZWxzZS4gIEhhcm0gUHJpbmNpcGxlIG1lYW5zIHRoYXQgdGhlcmUgICBzaG91bGQgYmUgYSBjb25zdHJhaW4gb24gYSBwZXJzb24gZnJvbSBhY3RpbmcgaW4gYSB3YXkgdGhhdCBtYXkgY2F1c2UgaGFybSB0byBvdGhlci4gSXQgd2FzIGZpcnN0IHByb3Bvc2VkICAgYnkgRW5nbGlzaCBwaGlsb3NvcGhlciBKb2huIFN0dWFydCBNaWxsLiBJdCBtZWFucyBwZW9wbGUgc2hvdWxkIGJlIGZyZWUgdG8gYWN0IGluIHRoZSB3YXkgdGhleSB3YW50LCBob3dldmVyICAgdGhlaXIgYWN0aW9ucyBzaG91bGQgbm90IGNhdXNlIGhhcm0gdG8gc29tZWJvZHkgZWxzZS4gUGhyYXNlICdZb3VyIGZyZWVkb20gdG8gc3dpbmcgeW91ciBmaXN0IGVuZHMgd2hlcmUgICBteSBub3NlIGJlZ2lucycgcmVmbGVjdHMgdGhlIHNlbnRpbWVudCBvZiB0aGUgaGFybSBwcmluY2lwbGUuICAgU3RhdGVtZW50IGIgaXMgaW5jb3JyZWN0LiBUaGUgUmlnaHQgdG8gRnJlZWRvbSAoYW5kIG5vdCB0aGUgcmlnaHQgdG8gUHJvdGVjdGlvbiBvZiBMaWZlKSBpcyB0aGUgcmVmbGVjdGlvbiAgIG9mIHRoZSBoYXJtIHByaW5jaXBsZS4gQWxzbywgaW4gdGhlIGNvbnN0aXR1dGlvbmFsIGRpc2N1c3Npb25zIGluIEluZGlhLCAnUmVhc29uYWJsZSBSZXN0cmljdGlvbnMnIGlzIHRoZSB0ZXJtICAgdXNlZCBmb3IganVzdGlmaWFibGUgY29uc3RyYWludHMgb24gdGhlIGZyZWVkb20gb2YgaW5kaXZpZHVhbHMuIEZvciBleGFtcGxlLCBTdGF0ZSBjYW4gaW1wb3NlIHJlYXNvbmFibGUgICByZXN0cmljdGlvbnMgb24gdGhlIGV4ZXJjaXNlIG9mIHJpZ2h0IG9mIGFzc2VtYmx5IG9uIHR3byBncm91bmRzLCBuYW1lbHksIHNvdmVyZWlnbnR5IGFuZCBpbnRlZ3JpdHkgb2YgSW5kaWEgICBhbmQgcHVibGljIG9yZGVyIGluY2x1ZGluZyB0aGUgbWFpbnRlbmFuY2Ugb2YgdHJhZmZpYyBpbiB0aGUgYXJlYSBjb25jZXJuZWQuICAgIFN0YXRlbWVudCBkIGlzIGluY29ycmVjdC4gQWNjb3JkaW5nIHRvICdMb3NzIEF2ZXJzaW9uJyBUaGVvcnksIGlmIHR3byBjaG9pY2VzIGFyZSBwdXQgYmVmb3JlIGFuIGluZGl2aWR1YWwsICAgYm90aCBlcXVhbCwgd2l0aCBvbmUgcHJlc2VudGVkIGluIHRlcm1zIG9mIHBvdGVudGlhbCBnYWlucyBhbmQgdGhlIG90aGVyIGluIHRlcm1zIG9mIHBvc3NpYmxlIGxvc3NlcywgdGhlICAgZm9ybWVyIG9wdGlvbiB3aWxsIGJlIGNob3Nlbi4gICBTb3VyY2U6IE5DRVJUIFhJLCBQb2xpdGljYWwgdGhlb3J5LCBjaGFwdGVyIDIgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It provides that a government must prevent   any physical harm to its citizens, as it is   responsible to protect their life and   property.  ",
        "option2" : " The Right to Protection of Life, as enshrined   in the Indian Constitution, is the direct   reflection of this principle.   ",
        "option3" : " It says that the people should be free to act   as they wish, unless their actions cause   harm to others.  ",
        "option4" : " It proposes that if two circumstances are   put before an individual, he will always   choose the option causing less possible   harm.   "
      }
    },
    {
      "index" : 33,
      "question" : "With reference to the offence of  'untouchability' in India, consider the following  statements:  1. The Constitution has defined  'untouchability' as 'social disabilities  imposed on certain classes of persons by  reason of their birth'.  2. A person convicted of the offence of  'untouchability' is disqualified for election to  the Parliament or state legislature.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IDEuIFRoZSBDb25zdGl0dXRpb24gaGFzIGRlZmluZWQgJ3VudG91Y2hhYmlsaXR5JyBhcyAnc29jaWFsIGRpc2FiaWxpdGllcyBpbXBvc2VkIG9uIGNlcnRhaW4gY2xhc3NlcyBvZiBwZXJzb25zICAgYnkgcmVhc29uIG9mIHRoZWlyIGJpcnRoJy4gICAyLiBBIHBlcnNvbiBjb252aWN0ZWQgb2YgdGhlIG9mZmVuY2Ugb2YgJ3VudG91Y2hhYmlsaXR5JyBpcyBkaXNxdWFsaWZpZWQgZm9yIGVsZWN0aW9uIHRvIHRoZSBQYXJsaWFtZW50IG9yIHN0YXRlICAgbGVnaXNsYXR1cmUuICAgICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIG9ubHkgICBiKSAyIG9ubHkgICBjKSBCb3RoIDEgYW5kIDIgICBkKSBOZWl0aGVyIDEgbm9yIDIgICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgQXJ0aWNsZSAxNyBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uIGFib2xpc2hlcyAndW50b3VjaGFiaWxpdHknIGFuZCBmb3JiaWRzIGl0cyBwcmFjdGljZSBpbiBhbnkgZm9ybS4gVGhlICAgZW5mb3JjZW1lbnQgb2YgYW55IGRpc2FiaWxpdHkgYXJpc2luZyBvdXQgb2YgdW50b3VjaGFiaWxpdHkgc2hhbGwgYmUgYW4gb2ZmZW5jZSBwdW5pc2hhYmxlIGluIGFjY29yZGFuY2UgICB3aXRoIGxhdy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSB0ZXJtICd1bnRvdWNoYWJpbGl0eScgaGFzIG5vdCBiZWVuIGRlZmluZWQgZWl0aGVyIGluIHRoZSBDb25zdGl0dXRpb24gb3IgaW4gICB0aGUgQWN0LiBIb3dldmVyLCB0aGUgTXlzb3JlIEhpZ2ggQ291cnQgaGVsZCB0aGF0IHRoZSBzdWJqZWN0IG1hdHRlciBvZiBBcnRpY2xlIDE3IGlzIG5vdCB1bnRvdWNoYWJpbGl0eSBpbiAgIGl0cyBsaXRlcmFsIG9yIGdyYW1tYXRpY2FsIHNlbnNlIGJ1dCB0aGUgJ3ByYWN0aWNlIGFzIGl0IGhhZCBkZXZlbG9wZWQgaGlzdG9yaWNhbGx5IGluIHRoZSBjb3VudHJ5Jy4gSXQgcmVmZXJzIHRvICAgdGhlIHNvY2lhbCBkaXNhYmlsaXRpZXMgaW1wb3NlZCBvbiBjZXJ0YWluIGNsYXNzZXMgb2YgcGVyc29ucyBieSByZWFzb24gb2YgdGhlaXIgYmlydGggaW4gY2VydGFpbiBjYXN0ZS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0IDE5NTEsIGEgcGVyc29uIHdpbGwgYmUgZGlzcXVhbGlmaWVkICAgZm9yIGVsZWN0aW9uIHRvIHRoZSBQYXJsaWFtZW50IG9yIHN0YXRlIGxlZ2lzbGF0dXJlIGlmIGhlIGNvbnZpY3RlZCBvZiBhbiBvZmZlbmNlIHB1bmlzaGFibGUgdW5kZXIgdGhlICAgUHJvdGVjdGlvbiBvZiBDaXZpbCBSaWdodHMgQWN0LCAxOTU1LiBUaGlzIEFjdCBwcm92aWRlcyBmb3IgcHVuaXNobWVudCBmb3IgdGhlIHByZWFjaGluZyBhbmQgcHJhY3RpY2Ugb2YgICAndW50b3VjaGFiaWxpdHknLCBhbmQgZm9yIHRoZSBlbmZvcmNlbWVudCBvZiBhbnkgZGlzYWJpbGl0eSBhcmlzaW5nIHRoZXJlZnJvbS4gICBUaHVzLCBhIHBlcnNvbiBjb252aWN0ZWQgb2YgdGhlIG9mZmVuY2Ugb2YgJ3VudG91Y2hhYmlsaXR5JyBpcyBkaXNxdWFsaWZpZWQgZm9yIGVsZWN0aW9uIHRvIHRoZSBQYXJsaWFtZW50ICAgb3Igc3RhdGUgbGVnaXNsYXR1cmUuICAgU291cmNlOiAgSW1wb3J0YW5jZSBvZiBQcm92aXNpb25zIHVuZGVyIHRoZSBQcm90ZWN0aW9uIG9mIHRoZSBDaXZpbCBSaWdodHMgQWN0IC0gaVBsZWFkZXJzICAgTGF4bWlrYW50aCBDaGFwdGVyIDcgRnVuZGFtZW50YWwgUmlnaHRzICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 34,
      "question" : "Which among the following Directives to  the State are contained in Part-IV of the  Constitution of India?  1.  To promote the spread of the Hindi  language  2.  To ensure the maintenance of adequate  means of communication in the country  3.  To consider the claims of Scheduled Castes  in making of appointments to services  4.  To raise the level of nutrition and the  standard of living of people  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEluZGlhPyAgIDEuIFRvIHByb21vdGUgdGhlIHNwcmVhZCBvZiB0aGUgSGluZGkgbGFuZ3VhZ2UgICAyLiBUbyBlbnN1cmUgdGhlIG1haW50ZW5hbmNlIG9mIGFkZXF1YXRlIG1lYW5zIG9mIGNvbW11bmljYXRpb24gaW4gdGhlIGNvdW50cnkgICAzLiBUbyBjb25zaWRlciB0aGUgY2xhaW1zIG9mIFNjaGVkdWxlZCBDYXN0ZXMgaW4gbWFraW5nIG9mIGFwcG9pbnRtZW50cyB0byBzZXJ2aWNlcyAgIDQuIFRvIHJhaXNlIHRoZSBsZXZlbCBvZiBudXRyaXRpb24gYW5kIHRoZSBzdGFuZGFyZCBvZiBsaXZpbmcgb2YgcGVvcGxlICAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZSBnaXZlbiBiZWxvdzogICBhKSAxIGFuZCAzIG9ubHkgICBiKSAxIGFuZCAyIG9ubHkgICBjKSAyLCAzIGFuZCA0IG9ubHkgICBkKSA0IG9ubHkgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIgICBBcGFydCBmcm9tIHRoZSBEaXJlY3RpdmVzIGluY2x1ZGVkIGluIFBhcnQuIElWIHRoYXQgYXJlIGNvbnNpZGVyZWQgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgdGhlIFN0YXRlIFBvbGljeSwgICB0aGVyZSBhcmUgc29tZSBvdGhlciBEaXJlY3RpdmVzIGNvbnRhaW5lZCBpbiBvdGhlciBwYXJ0cyBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQXJ0aWNsZSAzNTEgaW4gUGFydCBYVklJIG9mIHRoZSBDb25zdGl0dXRpb24gZXhob3J0cyB0aGUgU3RhdGUgdGhhdCBpdCBzaGFsbCBiZSB0aGUgICBkdXR5IG9mIHRoZSBVbmlvbiB0byBwcm9tb3RlIHRoZSBzcHJlYWQgb2YgdGhlIEhpbmRpIGxhbmd1YWdlIGFuZCB0byBkZXZlbG9wIGl0IHNvIHRoYXQgaXQgbWF5IHNlcnZlIGFzIGEgICBtZWRpdW0gb2YgZXhwcmVzc2lvbiBmb3IgYWxsIHRoZSBlbGVtZW50cyBvZiB0aGUgY29tcG9zaXRlIGN1bHR1cmUgb2YgSW5kaWEuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBBcnRpY2xlIDMzNSBpbiBQYXJ0IFhWSSBtZW50aW9ucyB0aGF0IGNsYWltcyBvZiB0aGUgbWVtYmVycyBvZiB0aGUgU2NoZWR1bGVkICAgQ2FzdGVzIGFuZCB0aGUgU2NoZWR1bGVkIFRyaWJlcyBzaGFsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24sIGNvbnNpc3RlbnRseSB3aXRoIHRoZSBtYWludGVuYW5jZSAgIG9mIGVmZmljaWVuY3kgb2YgYWRtaW5pc3RyYXRpb24sIGluIHRoZSBtYWtpbmcgb2YgYXBwb2ludG1lbnRzIHRvIHNlcnZpY2VzIGFuZCBwb3N0cyBpbiBjb25uZWN0aW9uIHdpdGggICB0aGUgYWZmYWlycyBvZiB0aGUgVW5pb24gb3IgYSBTdGF0ZS4gSXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBhZG1pc3Npb24gaW4gZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zLiBJdCBpcyAgIG1lbnRpb25lZCBpbiBBcnRpY2xlIDQ2IHRoYXQgdGhlIFN0YXRlIHNoYWxsIHByb21vdGUgd2l0aCBzcGVjaWFsIGNhcmUgdGhlIGVkdWNhdGlvbmFsIGFuZCBlY29ub21pYyAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgaW50ZXJlc3RzIG9mIHRoZSB3ZWFrZXIgc2VjdGlvbnMgb2YgdGhlIHBlb3BsZSwgYW5kLCBpbiBwYXJ0aWN1bGFyLCBvZiB0aGUgU2NoZWR1bGVkIENhc3RlcyBhbmQgdGhlICAgU2NoZWR1bGVkIFRyaWJlcywgYW5kIHNoYWxsIHByb3RlY3QgdGhlbSBmcm9tIHNvY2lhbCBpbmp1c3RpY2UgYW5kIGFsbCBmb3JtcyBvZiBleHBsb2l0YXRpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBTdGF0ZW1lbnQgMiBhbmQgNCByZWZlcnMgdG8gZGlyZWN0aW9ucyB3aGljaCB0aGUgQ2VudHJlIGNhbiBnaXZlIHRvIHRoZSBzdGF0ZSAgIGdvdmVybm1lbnQgd2l0aCByZWdhcmQgdG8gdGhlIGV4ZXJjaXNlIG9mIHRoZWlyIGV4ZWN1dGl2ZSBwb3dlci4gICAoMSkgdGhlIGNvbnN0cnVjdGlvbiBhbmQgbWFpbnRlbmFuY2Ugb2YgbWVhbnMgb2YgY29tbXVuaWNhdGlvbiAoZGVjbGFyZWQgdG8gYmUgb2YgbmF0aW9uYWwgb3IgbWlsaXRhcnkgICBpbXBvcnRhbmNlKSBieSB0aGUgc3RhdGU7IChBcnRpY2xlIDI1NyBpbiBQYXJ0IFhJIG9mIHRoZSBDb25zdGl0dXRpb24pICAgKDIpIHRoZSBtZWFzdXJlcyB0byBiZSB0YWtlbiBmb3IgdGhlIHByb3RlY3Rpb24gb2YgdGhlIHJhaWx3YXlzIHdpdGhpbiB0aGUgc3RhdGU7ICAgKDMpIHRoZSBwcm92aXNpb24gb2YgYWRlcXVhdGUgZmFjaWxpdGllcyBmb3IgaW5zdHJ1Y3Rpb24gaW4gdGhlIG1vdGhlci10b25ndWUgYXQgdGhlIHByaW1hcnkgc3RhZ2Ugb2YgICBlZHVjYXRpb24gdG8gY2hpbGRyZW4gYmVsb25naW5nIHRvIGxpbmd1aXN0aWMgbWlub3JpdHkgZ3JvdXBzIGluIHRoZSBzdGF0ZTsgYW5kICAgKDQpIHRoZSBkcmF3aW5nIHVwIGFuZCBleGVjdXRpb24gb2YgdGhlIHNwZWNpZmllZCBzY2hlbWVzIGZvciB0aGUgd2VsZmFyZSBvZiB0aGUgU2NoZWR1bGVkIFRyaWJlcyBpbiB0aGUgICBzdGF0ZSAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiAnVG8gcmFpc2UgdGhlIGxldmVsIG9mIG51dHJpdGlvbiBhbmQgdGhlIHN0YW5kYXJkIG9mIGxpdmluZyBvZiBwZW9wbGUgYW5kIHRvIGltcHJvdmUgICBwdWJsaWMgaGVhbHRoJyBpcyBjb250YWluZWQgaW4gQXJ0aWNsZSA0NyBpbiBQYXJ0IElWIG9mIENvbnN0aXR1dGlvbi4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIDh0aCBDaGFwdGVyICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "4 only   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements:  1.  Atmospheric rivers are systems of rivers  generated due to sudden rainfall in the  region.  2.  The phenomenon of atmospheric rivers is  restricted to desert regions of tropical  areas.  3.  In wet conditions, atmospheric rivers can  negatively impact the local economy by  causing floods.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IDEuIEF0bW9zcGhlcmljIHJpdmVycyBhcmUgc3lzdGVtcyBvZiByaXZlcnMgZ2VuZXJhdGVkIGR1ZSB0byBzdWRkZW4gcmFpbmZhbGwgaW4gdGhlIHJlZ2lvbi4gICAyLiBUaGUgcGhlbm9tZW5vbiBvZiBhdG1vc3BoZXJpYyByaXZlcnMgaXMgcmVzdHJpY3RlZCB0byBkZXNlcnQgcmVnaW9ucyBvZiB0cm9waWNhbCBhcmVhcy4gICAzLiBJbiB3ZXQgY29uZGl0aW9ucywgYXRtb3NwaGVyaWMgcml2ZXJzIGNhbiBuZWdhdGl2ZWx5IGltcGFjdCB0aGUgbG9jYWwgZWNvbm9teSBieSBjYXVzaW5nIGZsb29kcy4gICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIGFuZCAyIG9ubHkgICBiKSAxIG9ubHkgICBjKSAyIGFuZCAzIG9ubHkgICBkKSAzIG9ubHkgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBBbiBhdG1vc3BoZXJpYyByaXZlciAoQVIpIGlzIGEgbmFycm93IGNvcnJpZG9yIG9yIGZpbGFtZW50IG9mIGNvbmNlbnRyYXRlZCAgIG1vaXN0dXJlIGluIHRoZSBhdG1vc3BoZXJlLiBPdGhlciBuYW1lcyBmb3IgdGhpcyBwaGVub21lbm9uIGFyZSB0cm9waWNhbCBwbHVtZSwgdHJvcGljYWwgY29ubmVjdGlvbiwgICBtb2lzdHVyZSBwbHVtZSwgd2F0ZXIgdmFwb3Igc3VyZ2UsIGFuZCBjbG91ZCBiYW5kLiAgIE5vdCBhbGwgYXRtb3NwaGVyaWMgcml2ZXJzIGNhdXNlIGRhbWFnZTsgbW9zdCBhcmUgd2VhayBzeXN0ZW1zIHRoYXQgb2Z0ZW4gcHJvdmlkZSBiZW5lZmljaWFsIHJhaW4gb3Igc25vdyAgIHRoYXQgaXMgY3J1Y2lhbCB0byB0aGUgd2F0ZXIgc3VwcGx5LCBwYXJ0aWN1bGFybHkgaW4gdGhlIHdlc3Rlcm4gVW5pdGVkIFN0YXRlcy4gSG93ZXZlciwgdGhvc2UgYXRtb3NwaGVyaWMgICByaXZlcnMgdGhhdCBjb250YWluIHRoZSBsYXJnZXN0IGFtb3VudHMgb2Ygd2F0ZXIgdmFwb3IgYW5kIHRoZSBzdHJvbmdlc3Qgd2luZHMgKFN0cm9uZyBTeXN0ZW0pIGNhbiBjcmVhdGUgICBleHRyZW1lIHJhaW5mYWxsIGFuZCBmbG9vZHMuICAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBBdG1vc3BoZXJpYyByaXZlcnMgYXJlIGxvbmcsIG5hcnJvdyBiYW5kcyBvZiBtb2lzdHVyZSBpbiB0aGUgYXRtb3NwaGVyZSB0aGF0ICAgZXh0ZW5kIGZyb20gdGhlIHRyb3BpY3MgdG8gaGlnaGVyIGxhdGl0dWRlcy4gVGhlc2Ugcml2ZXJzIGluIHRoZSBza3kgY2FuIHRyYW5zcG9ydCAxNSB0aW1lcyB0aGUgdm9sdW1lIG9mICAgdGhlIE1pc3Npc3NpcHBpIFJpdmVyLiAgIEF0bW9zcGhlcmljIHJpdmVycyBvY2N1ciBnbG9iYWxseSwgYWZmZWN0aW5nIHRoZSB3ZXN0IGNvYXN0cyBvZiB0aGUgd29ybGQncyBtYWpvciBsYW5kbWFzc2VzLCBpbmNsdWRpbmcgICBQb3J0dWdhbCwgV2VzdGVybiBFdXJvcGUsIENoaWxlIGFuZCBTb3V0aCBBZnJpY2EuICAgQSB3ZWxsLWtub3duIGV4YW1wbGUgaXMgdGhlICdQaW5lYXBwbGUgRXhwcmVzcywnIGEgc3Ryb25nIGF0bW9zcGhlcmljIHJpdmVyIHRoYXQgaXMgY2FwYWJsZSBvZiBicmluZ2luZyAgIG1vaXN0dXJlIGZyb20gdGhlIHRyb3BpY3MgbmVhciBIYXdhaWkgb3ZlciB0byB0aGUgVS5TLiBXZXN0IENvYXN0LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluIGRyeSBjb25kaXRpb25zLCBhdG1vc3BoZXJpYyByaXZlcnMgY2FuIHJlcGxlbmlzaCB3YXRlciBzdXBwbGllcyBhbmQgcXVlbmNoICAgZGFuZ2Vyb3VzIHdpbGRmaXJlcy4gSW4gd2V0IGNvbmRpdGlvbnMsIHRoZXkgY2FuIGNhdXNlIGRhbWFnaW5nIGZsb29kcyBhbmQgZGVicmlzIGZsb3dzLCB3cmVha2luZyBoYXZvYyAgIG9uIGxvY2FsIGVjb25vbWllcy4gICBBY2NvcmRpbmcgdG8gYSBzdHVkeSwgQXRtb3NwaGVyaWMgcml2ZXJzIGNhdXNlIGFuIGF2ZXJhZ2Ugb2YgJDEuMSBiaWxsaW9uIGluIGZsb29kIGRhbWFnZXMgeWVhcmx5IGluIHRoZSAgIHdlc3Rlcm4gVS5TLiBUaGUgc3R1ZHkgaGFzIGFsc28gcHJlZGljdGVkIHRoYXQgbGlrZSBodXJyaWNhbmVzLCBhdG1vc3BoZXJpYyByaXZlcnMgYXJlIHByb2plY3RlZCB0byBncm93ICAgbG9uZ2VyLCB3aWRlciBhbmQgd2V0dGVyIGluIGEgd2FybWluZyBjbGltYXRlLiBUaGlzIGNvdWxkIGxlYWQgdG8gc2lnbmlmaWNhbnRseSBsYXJnZXIgZWNvbm9taWMgaW1wYWN0cy4gICBTb3VyY2U6IEF0bW9zcGhlcmljIHJpdmVyIHN0b3JtcyBjYW4gZHJpdmUgY29zdGx5IGZsb29kaW5nIC0gYW5kIGNsaW1hdGUgY2hhbmdlIGlzIG1ha2luZyB0aGVtIHN0cm9uZ2VyICAgLUZvcnVtSUFTIEJsb2cgICBXaGF0IGFyZSBhdG1vc3BoZXJpYyByaXZlcnM/IHwgTmF0aW9uYWwgT2NlYW5pYyBhbmQgQXRtb3NwaGVyaWMgQWRtaW5pc3RyYXRpb24gKG5vYWEuZ292KSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 36,
      "question" : "'To develop scientific temper, humanism  and the spirit of inquiry and reform' is included  under which of the following provisions of the  Constitution of India?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IG9mIHRoZSBmb2xsb3dpbmcgcHJvdmlzaW9ucyBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhPyAgIGEpIFRoZSBQcmVhbWJsZSAgIGIpIEZ1bmRhbWVudGFsIFJpZ2h0cyAgIGMpIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSAgIGQpIEZ1bmRhbWVudGFsIER1dGllcyAgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBGdW5kYW1lbnRhbCBEdXRpZXMgbWVhbnMgdGhhdCB0aGUgY2l0aXplbnMgaW4gYWRkaXRpb24gdG8gdGhlIGVuam95bWVudCBvZiByaWdodHMsIGFsc28gaGF2ZSBjZXJ0YWluICAgb2JsaWdhdGlvbnMgdG8gYmUgcGVyZm9ybWVkIGFzIHdlbGwuICAgIFN0YXRlbWVudCBkIGlzIGNvcnJlY3QuIE9uZSBvZiB0aGUgZnVuZGFtZW50YWwgZHV0aWVzIGluY2x1ZGUgJ3RvIGRldmVsb3Agc2NpZW50aWZpYyB0ZW1wZXIsIGh1bWFuaXNtICAgYW5kIHRoZSBzcGlyaXQgb2YgaW5xdWlyeSBhbmQgcmVmb3JtJy4gICBPdGhlciBGdW5kYW1lbnRhbCBEdXRpZXMgYXJlOiAgIDEpIHRvIGFiaWRlIGJ5IHRoZSBDb25zdGl0dXRpb24gYW5kIHJlc3BlY3QgaXRzIGlkZWFscyBhbmQgaW5zdGl0dXRpb25zLCB0aGUgTmF0aW9uYWwgRmxhZyBhbmQgdGhlIE5hdGlvbmFsICAgQW50aGVtOyAgIDIpIHRvIGNoZXJpc2ggYW5kIGZvbGxvdyB0aGUgbm9ibGUgaWRlYWxzIHRoYXQgaW5zcGlyZWQgdGhlIG5hdGlvbmFsIHN0cnVnZ2xlIGZvciBmcmVlZG9tOyAgICAzKSB0byB1cGhvbGQgYW5kIHByb3RlY3QgdGhlIHNvdmVyZWlnbnR5LCB1bml0eSBhbmQgaW50ZWdyaXR5IG9mIEluZGlhOyAgIDQpIHRvIGRlZmVuZCB0aGUgY291bnRyeSBhbmQgcmVuZGVyIG5hdGlvbmFsIHNlcnZpY2Ugd2hlbiBjYWxsZWQgdXBvbiB0byBkbyBzbzsgICA1KSB0byBwcm9tb3RlIGhhcm1vbnkgYW5kIHRoZSBzcGlyaXQgb2YgY29tbW9uIGJyb3RoZXJob29kIGFtb25nc3QgYWxsIHRoZSBwZW9wbGUgb2YgSW5kaWEgICB0cmFuc2NlbmRpbmcgcmVsaWdpb3VzLCBsaW5ndWlzdGljIGFuZCByZWdpb25hbCBvciBzZWN0aW9uYWwgZGl2ZXJzaXRpZXMgYW5kIHRvIHJlbm91bmNlIHByYWN0aWNlcyAgIGRlcm9nYXRvcnkgdG8gdGhlIGRpZ25pdHkgb2Ygd29tZW47ICAgNikgdG8gdmFsdWUgYW5kIHByZXNlcnZlIHRoZSByaWNoIGhlcml0YWdlIG9mIHRoZSBjb3VudHJ5J3MgY29tcG9zaXRlIGN1bHR1cmU7ICAgNykgdG8gcHJvdGVjdCBhbmQgaW1wcm92ZSB0aGUgbmF0dXJhbCBlbnZpcm9ubWVudCBpbmNsdWRpbmcgZm9yZXN0cywgbGFrZXMsIHJpdmVycyBhbmQgd2lsZGxpZmUgYW5kIHRvIGhhdmUgICBjb21wYXNzaW9uIGZvciBsaXZpbmcgY3JlYXR1cmVzOyAgIDgpIHRvIHNhZmVndWFyZCBwdWJsaWMgcHJvcGVydHkgYW5kIHRvIGFianVyZSB2aW9sZW5jZTsgICA5KSB0byBzdHJpdmUgdG93YXJkcyBleGNlbGxlbmNlIGluIGFsbCBzcGhlcmVzIG9mIGluZGl2aWR1YWwgYW5kIGNvbGxlY3RpdmUgYWN0aXZpdHkgc28gdGhhdCB0aGUgbmF0aW9uICAgY29uc3RhbnRseSByaXNlcyB0byBoaWdoZXIgbGV2ZWxzIG9mIGVuZGVhdm91ciBhbmQgYWNoaWV2ZW1lbnQ7IGFuZCAgIDEwKSB0byBwcm92aWRlIG9wcG9ydHVuaXRpZXMgZm9yIGVkdWNhdGlvbiB0byBoaXMgY2hpbGQgb3Igd2FyZCBiZXR3ZWVuIHRoZSBhZ2Ugb2Ygc2l4IGFuZCBmb3VydGVlbiB5ZWFycy4gICAgU291cmNlOiBNIExheG1pa2FudGgsIFByZWFtYmxlLCBGUiwgRFBTUCBhbmQgRkQgQ2hhcHRlcnMgICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The Preamble  ",
        "option2" : "Fundamental Rights  ",
        "option3" : "Directive Principles of State Policy  ",
        "option4" : "Fundamental Duties   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements with  reference to the 'Right to Property' in the Indian  context:  1.  Presently, it is neither a Constitutional right  nor a legal right.  2.  It protects a person's property against  executive action but not against legislative  action.  3.  If this right is violated, the aggrieved person  can directly move to the High Court for its  enforcement.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IDEuIFByZXNlbnRseSwgaXQgaXMgbmVpdGhlciBhIENvbnN0aXR1dGlvbmFsIHJpZ2h0IG5vciBhIGxlZ2FsIHJpZ2h0LiAgIDIuIEl0IHByb3RlY3RzIGEgcGVyc29uJ3MgcHJvcGVydHkgYWdhaW5zdCBleGVjdXRpdmUgYWN0aW9uIGJ1dCBub3QgYWdhaW5zdCBsZWdpc2xhdGl2ZSBhY3Rpb24uICAgMy4gSWYgdGhpcyByaWdodCBpcyB2aW9sYXRlZCwgdGhlIGFnZ3JpZXZlZCBwZXJzb24gY2FuIGRpcmVjdGx5IG1vdmUgdG8gdGhlIEhpZ2ggQ291cnQgZm9yIGl0cyBlbmZvcmNlbWVudC4gICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIGFuZCAzIG9ubHkgICBiKSAzIG9ubHkgICBjKSAyIGFuZCAzIG9ubHkgICBkKSAxLCAyIGFuZCAzICAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgcmlnaHQgdG8gcHJvcGVydHkgaXMgYSBDb25zdGl0dXRpb25hbCBhcyB3ZWxscyBhcyBsZWdhbCByaWdodCBidXQgbm90IGEgICBGdW5kYW1lbnRhbCBSaWdodC4gT3JpZ2luYWxseSwgdGhlIENvbnN0aXR1dGlvbiBwcm92aWRlZCBmb3Igc2V2ZW4gRnVuZGFtZW50YWwgUmlnaHRzLiBIb3dldmVyLCB0aGUgICBSaWdodCB0byBQcm9wZXJ0eSAoQXJ0aWNsZSAzMSkgd2FzIGRlbGV0ZWQgZnJvbSB0aGUgbGlzdCBvZiBGdW5kYW1lbnRhbCBSaWdodHMgYnkgdGhlIDQ0dGggQW1lbmRtZW50IEFjdCAgIG9mIDE5NzguIEl0IGlzIG1hZGUgYSBsZWdhbCByaWdodCB1bmRlciBBcnRpY2xlIDMwMC1BIGluIFBhcnQgWElJIG9mIHRoZSBjb25zdGl0dXRpb24uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIFJpZ2h0IHRvIFByb3BlcnR5IHByb3RlY3RzIHByaXZhdGUgcHJvcGVydHkgYWdhaW5zdCBleGVjdXRpdmUgYWN0aW9uIGJ1dCBub3QgICBhZ2FpbnN0IGxlZ2lzbGF0aXZlIGFjdGlvbi4gSXQgY2FuIGJlIHJlZ3VsYXRlZCBpLmUuIGN1cnRhaWxlZCwgYWJyaWRnZWQgb3IgbW9kaWZpZWQgd2l0aG91dCBjb25zdGl0dXRpb25hbCAgIGFtZW5kbWVudCBieSBhbiBvcmRpbmFyeSBsYXcgb2YgdGhlIFBhcmxpYW1lbnQuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gSW4gY2FzZSBvZiB2aW9sYXRpb24sIHRoZSBhZ2dyaWV2ZWQgcGVyc29uIGNhbm5vdCBkaXJlY3RseSBtb3ZlIHRoZSBTdXByZW1lIENvdXJ0ICAgdW5kZXIgQXJ0aWNsZSAzMiAocmlnaHQgdG8gY29uc3RpdHV0aW9uYWwgcmVtZWRpZXMgaW5jbHVkaW5nIHdyaXRzKSBmb3IgaXRzIGVuZm9yY2VtZW50LiBIZSBjYW4gbW92ZSB0aGUgICBIaWdoIENvdXJ0IHVuZGVyIEFydGljbGUgMjI2LiAgIFNvdXJjZTogTkNFUlQgWEksIENvbnN0aXR1dGlvbiBhdCB3b3JrLCBDaGFwdGVyIDIgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3       .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 38,
      "question" : "Who among the following enjoys certain  exceptions to the rule of Equality before Law  under the Fundamental Right to Equality in  India?  1. Governor of states  2. Foreign diplomats  3. United Nations agencies  4. Members of Parliament  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZ1bmRhbWVudGFsIFJpZ2h0IHRvIEVxdWFsaXR5IGluIEluZGlhPyAgIDEuIEdvdmVybm9yIG9mIHN0YXRlcyAgIDIuIEZvcmVpZ24gZGlwbG9tYXRzICAgMy4gVW5pdGVkIE5hdGlvbnMgYWdlbmNpZXMgICA0LiBNZW1iZXJzIG9mIFBhcmxpYW1lbnQgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgIGEpIDEgYW5kIDQgb25seSAgIGIpIDIgYW5kIDMgb25seSAgIGMpIDEsIDIgYW5kIDMgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICAgRXhwKSBvcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogR292ZXJub3Igb2Ygc3RhdGVzIGVuam95IHNvbWUgb2YgaW1tdW5pdGllcyBmcm9tIHRoZSBydWxlIG9mIGVxdWFsaXR5IGJlZm9yZSBsYXcuICAgU29tZSBvZiB0aGVzZSBpbW11bml0aWVzIGFyZSAgICAxKSBIZSBpcyBub3QgYW5zd2VyYWJsZSB0byBhbnkgY291cnQgZm9yIHRoZSBleGVyY2lzZSBhbmQgcGVyZm9ybWFuY2Ugb2YgdGhlIHBvd2VycyBhbmQgZHV0aWVzIG9mIGhpcyAgIG9mZmljZS4gICAyKSBObyBjcmltaW5hbCBwcm9jZWVkaW5nIHNoYWxsIGJlIGluc3RpdHV0ZWQgb3IgY29udGludWVkIGFnYWluc3QgaGltIGR1cmluZyBoaXMgdGVybSBvZiBvZmZpY2UuICAgMykgTm8gcHJvY2VzcyBmb3IgYXJyZXN0IG9yIGltcHJpc29ubWVudCBvZiBoaW0gZnJvbSBhbnkgY291cnQgZHVyaW5nIGhpcyB0ZXJtIG9mIG9mZmljZSwgICA0KSBObyBjaXZpbCBwcm9jZWVkaW5ncyBzaGFsbCBiZSBpbnN0aXR1dGVkIGR1cmluZyBoaXMgdGVybSBvZiBvZmZpY2UgaW4gYW55IGNvdXJ0IGluIHJlc3BlY3Qgb2YgYW55IGFjdCBkb25lICAgYnkgaGltIGluIGhpcyBwZXJzb25hbCBjYXBhY2l0eSwgd2hldGhlciBiZWZvcmUgb3IgYWZ0ZXIgaGUgZW50ZXJlZCB1cG9uIGhpcyBvZmZpY2UsIHVudGlsIHRoZSBleHBpcmF0aW9uICAgb2YgdHdvIG1vbnRocyBuZXh0IGFmdGVyIG5vdGljZSBoYXMgYmVlbiBkZWxpdmVyZWQgdG8gaGltICAgICBvZiAzMyAgICAgIC4gIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZm9yZWlnbiBzb3ZlcmVpZ25zIChydWxlcnMpLCBhbWJhc3NhZG9ycyBhbmQgZGlwbG9tYXRlcyBlbmpveSBpbW11bml0eSBmcm9tICAgY3JpbWluYWwgYW5kIGNpdmlsIHByb2NlZWRpbmcuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIFVOTyBhbmQgaXRzIGFnZW5jaWVzIGVuam95IHRoZSBkaXBsb21hdGljIGltbXVuaXR5LiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IE1lbWJlcnMgb2YgcGFybGlhbWVudCBhbmQgc3RhdGUgbGVnaXNsYXR1cmUgYWxzbyBlbmpveSBpbW11bml0eSBmcm9tIGFueXRoaW5nICAgc2FpZCBvciBhbnkgdm90ZSBnaXZlbiBieSBoaW0gaW4gcGFybGlhbWVudC8gc3RhdGUgbGVnaXNsYXR1cmUgb3IgYW55IGNvbW1pdHRlZSB0aGVyZW9mLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBNIExheG1pa2FudGggNXRoIGVkaXRpb24gLSBjaGFwdGVyIDcgLSBGdW5kYW1lbnRhbCByaWdodHMgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following rights has been  made available to the prisoners in India through  various Supreme court judgements?   1. Right to vote   2. Right to life   3. Right to be treated equally before the law   4. Right to speedy trial   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFN1cHJlbWUgY291cnQganVkZ2VtZW50cz8gICAgMS4gUmlnaHQgdG8gdm90ZSAgICAyLiBSaWdodCB0byBsaWZlICAgIDMuIFJpZ2h0IHRvIGJlIHRyZWF0ZWQgZXF1YWxseSBiZWZvcmUgdGhlIGxhdyAgICA0LiBSaWdodCB0byBzcGVlZHkgdHJpYWwgICAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZXMgZ2l2ZW4gYmVsb3c6ICAgIGEpIDEsIDIgYW5kIDMgb25seSAgICBiKSAyIGFuZCAzIG9ubHkgICAgYykgMiwgMyBhbmQgNCBvbmx5ICAgIGQpIDEsIDIsIDMgYW5kIDQgICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGRvZXMgbm90IGV4cHJlc3NseSBwcm92aWRlIHRoZSBwcm92aXNpb25zIHJlbGF0ZWQgdG8gdGhlIHByaXNvbmVycycgcmlnaHRzIGJ1dCBpbiB0aGUgICBjYXNlIG9mIFQuVi4gVmF0aGVlc3dhcmFuIHYuIFN0YXRlIG9mIFRhbWlsIE5hZHUsIGl0IHdhcyBoZWxkIHRoYXQgdGhlIEFydGljbGVzIDE0LCAxOSBhbmQgMjEgYXJlIGF2YWlsYWJsZSB0byAgIHRoZSBwcmlzb25lcnMgYXMgd2VsbCBhcyBmcmVlbWVuLiBQcmlzb24gd2FsbHMgZG8gbm90IGtlZXAgb3V0IGZ1bmRhbWVudGFsIHJpZ2h0cy4gICAgQXJ0aWNsZSAxNCBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIHNheXMgdGhhdCB0aGUgU3RhdGUgc2hhbGwgbm90IGRlbnkgdG8gYW55IHBlcnNvbiBlcXVhbGl0eSBiZWZvcmUgbGF3ICAgb3IgdGhlIGVxdWFsIHByb3RlY3Rpb24gb2YgbGF3cyB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gICAgQXJ0aWNsZSAyMSBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIHNheXMgdGhhdCBObyBwZXJzb24gc2hhbGwgYmUgZGVwcml2ZWQgb2YgaGlzIGxpZmUgb3IgcGVyc29uYWwgbGliZXJ0eSAgIGV4Y2VwdCBhY2NvcmRpbmcgdG8gcHJvY2VkdXJlIGVzdGFibGlzaGVkIGJ5IGxhdy4gVGhpcyBpbmNsdWRlcyByaWdodCB0byBzcGVlZHkgdHJpYWwgYXMgYSBmdW5kYW1lbnRhbCAgIHJpZ2h0IHRvIHRoZSBwcmlzb25lcnMuICAgIFJpZ2h0IHRvIHZvdGUgaXMgbm90IGF2YWlsYWJsZSB0byBwcmlzb25lcnMgaW4gSW5kaWEgYXMgb2YgeWV0LiAgICBTb3VyY2U6ICBMYXhtaWthbnQgRnVuZGFtZW50YWwgUmlnaHRzICAgIFJJR0hUUyBPRiBQUklTT05FUlMgSU4gSU5ESUE6IEEgTEVHQUwgQU5BTFlTSVMgwrsgKGxhd2F1ZGllbmNlLmNvbSkgICAgUmlnaHRzIG9mIFByaXNvbmVycyB1bmRlciBJbmRpYW4gTGF3IChsZWdhbGRlc2lyZS5jb20pICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs:  National Parks/Wildlife  Sanctuaries  Located in states  1. Debrigarh Wildlife  Sanctuary  Chhattisgarh  2. Rani Jhansi Marine  National Park  Andaman and  Nicobar Islands  3. Kanger Valley  National Park  Odisha  How many pairs given above are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IE5hdGlvbmFsIFBhcmtzL1dpbGRsaWZlICAgU2FuY3R1YXJpZXMgICBMb2NhdGVkIGluIHN0YXRlcyAgIDEuIERlYnJpZ2FyaCBXaWxkbGlmZSAgIFNhbmN0dWFyeSAgIENoaGF0dGlzZ2FyaCAgIDIuIFJhbmkgSmhhbnNpIE1hcmluZSAgIE5hdGlvbmFsIFBhcmsgICBBbmRhbWFuIGFuZCAgIE5pY29iYXIgSXNsYW5kcyAgIDMuIEthbmdlciBWYWxsZXkgICBOYXRpb25hbCBQYXJrICAgT2Rpc2hhICAgSG93IG1hbnkgcGFpcnMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3RseSBtYXRjaGVkPyAgICBhKSBOb25lIG9mIHRoZSBwYWlycyAgICBiKSBPbmx5IG9uZSBwYWlyICAgIGMpIE9ubHkgdHdvIHBhaXJzICAgIGQpIEFsbCB0aHJlZSBwYWlycyAgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoaXMgcXVlc3Rpb24gaXMgYmFzZWQgb24gdGhlIGFydGljbGUgJ09kaXNoYSB0byByZWxvY2F0ZSA0MjAgZmFtaWxpZXMgZnJvbSBEZWJyaWdhcmggd2lsZGxpZmUgc2FuY3R1YXJ5ICAgaW4gQmFyZ2FyaCBkaXN0cmljdCcgcHVibGlzaGVkIGluICdEb3duIFRvIEVhcnRoJyBvbiAyMm5kIE9jdG9iZXIgMjAyMS4gICBQYWlyIDEgaXMgaW5jb3JyZWN0LiAgIERlYnJpZ2FyaCB3aWxkbGlmZSBzYW5jdHVhcnkgaXMgbG9jYXRlZCBpbiBPZGlzaGEgKG5vdCBDaGhhdHRpc2dhcmgpLiBBIHRoaXJkIG9mIHRoZSBzYW5jdHVhcnkncyBhcmVhIGlzICAgYm91bmQgYnkgdGhlIEhpcmFrdWQgRGFtLCB0aHVzIGZvcm1pbmcgYSBtaW5pIGNhdGNobWVudCBmb3IgdGhlIHJlc2Vydm9pci4gVGhlIHNhbmN0dWFyeSBpcyBhbHNvIGFuICAgaW1wb3J0YW50IGJpb2dlb2dyYXBoaWMgem9uZSBmcm9tIGJvdGggdGhlIGVjb2xvZ2ljYWwgYW5kIGVudmlyb25tZW50YWwgcG9pbnRzIG9mIHZpZXcuICAgIFRoZSBzYW5jdHVhcnkgZmluZHMgYSBzcGVjaWFsIG1lbnRpb24gYmVjYXVzZSBvZiBub3RlZCBmcmVlZG9tIGZpZ2h0ZXIgVmVlciBTdXJlbmRyYVNhaS4gICBQYWlyIDIgaXMgY29ycmVjdC4gUmFuaSBKaGFuc2kgTWFyaW5lIE5hdGlvbmFsIFBhcmsgaXMgbG9jYXRlZCBpbiB0aGUgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzIGluIHRoZSAgIEJheSBvZiBCZW5nYWwuIEl0IHdhcyBmb3VuZGVkIGluIDE5OTYsIGFuZCBjb3ZlcnMgMjU2IGttLiBJdCBjb21tZW1vcmF0ZXMgTGFrc2htaWJhaSwgdGhlIFJhbmkgb2YgSmhhbnNpICAgKDE4MjgtNTgpLiBJdCBpcyBsb2NhdGVkIGluIHRoZSBSaXRjaGllJ3MgQXJjaGlwZWxhZ28gYW5kIGlzIGFib3V0IDMwIGttIGZyb20gUG9ydCBCbGFpci4gSXQgY29udGFpbnMgY29yYWwgcmVlZnMgICBhbmQgbWFuZ3JvdmUgZm9yZXN0cy4gVGhlIGJpZ2dlc3QgYXR0cmFjdGlvbiBpbiB0aGUgcGFyayBpcyBhIGZydWl0LWVhdGluZyBiYXQuICAgIFBhaXIgMyBpcyBpbmNvcnJlY3QuIEthbmdlciBWYWxsZXkgTmF0aW9uYWwgUGFyayBnZXRzIGl0cyBuYW1lIGZyb20gdGhlIEthbmdhciByaXZlci4gSXQgd2FzIGRlY2xhcmVkIGEgICBuYXRpb25hbCBwYXJrIGluIDE5ODIgYnkgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgYW5kIGxvY2F0ZWQgbmVhciBKYWdkYWxwdXIgaW4gdGhlIEJhc3RhciByZWdpb24gb2YgICBDaGhhdHRpc2dhcmguICAgIFNvdXJjZTogT2Rpc2hhIHRvIHJlbG9jYXRlIDQyMCBmYW1pbGllcyBmcm9tIERlYnJpZ2FyaCB3aWxkbGlmZSBzYW5jdHVhcnkgaW4gQmFyZ2FyaCBkaXN0cmljdCAtRm9ydW1JQVMgICBCbG9nICAgTGlzdCBvZiBpbXBvcnRhbnQgTmF0aW9uYWwgUGFya3MgaW4gSW5kaWEgfEZvcnVtSUFTIEJsb2cgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "None of the pairs   ",
        "option2" : "Only one pair   ",
        "option3" : "Only two pairs   ",
        "option4" : "All three pairs    "
      }
    },
    {
      "index" : 41,
      "question" : "Right to Privacy is protected as an  intrinsic part of Right to Life and Personal  Liberty. Which of the following in the  Constitution of India correctly and  appropriately imply the above statement?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IGZvbGxvd2luZyBpbiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGNvcnJlY3RseSBhbmQgYXBwcm9wcmlhdGVseSBpbXBseSB0aGUgYWJvdmUgc3RhdGVtZW50PyAgICBhKSBBcnRpY2xlIDE0IGFuZCB0aGUgcHJvdmlzaW9ucyB1bmRlciB0aGUgNDJuZCBBbWVuZG1lbnQgdG8gdGhlIENvbnN0aXR1dGlvbiAgICBiKSBBcnRpY2xlIDE3IGFuZCB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5IGluIFBhcnQgSVYgICAgYykgQXJ0aWNsZSAyMSBhbmQgdGhlIGZyZWVkb21zIGd1YXJhbnRlZWQgaW4gUGFydCBJSUkgICAgZCkgQXJ0aWNsZSAyNCBhbmQgdGhlIHByb3Zpc2lvbnMgdW5kZXIgdGhlIDQ0dGggQW1lbmRtZW50IHRvIHRoZSBDb25zdGl0dXRpb24gICAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIEp1c3RpY2UgSy4gUy4gUHV0dGFzd2FteSAoUmV0ZCkgYW5kIG90aGVycyB2cyBVbmlvbiBvZiBJbmRpYSAoMjAxNyksIHRoZSBTdXByZW1lIENvdXJ0IG9ic2VydmVkIHRoYXQgICAnUmlnaHQgdG8gUHJpdmFjeScgaXMgYW4gaW50ZWdyYWwgcGFydCBvZiBSaWdodCB0byBMaWZlIGFuZCBQZXJzb25hbCBMaWJlcnR5IGd1YXJhbnRlZWQgaW4gQXJ0aWNsZSAyMSBvZiB0aGUgICBDb25zdGl0dXRpb24uIEEgbmluZS1qdWRnZSBiZW5jaCBvZiB0aGUgU3VwcmVtZSBDb3VydCBkZWNsYXJlZCB0aGF0IHRoZSByaWdodCB0byBwcml2YWN5IGlzIGEgRnVuZGFtZW50YWwgICBSaWdodCBwcm90ZWN0ZWQgdW5kZXIgUGFydCBJSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYS4gV2hpbGUgcHJpbWFyaWx5IGZvY3VzZWQgb24gdGhlIGluZGl2aWR1YWwncyByaWdodCAgIGFnYWluc3QgdGhlIFN0YXRlIGZvciB2aW9sYXRpb25zIG9mIHRoZWlyIHByaXZhY3ksIHRoaXMgbGFuZG1hcmsganVkZ2VtZW50IGhhZCByZXBlcmN1c3Npb25zIGFjcm9zcyBib3RoICAgU3RhdGUgYW5kIG5vbi1TdGF0ZSBhY3RvcnMgYW5kIGlzIGxpa2VseSB0byByZXN1bHQgaW4gdGhlIGVuYWN0bWVudCBvZiBhIGNvbXByZWhlbnNpdmUgbGF3IG9uIHByaXZhY3kuICAgU291cmNlKSBVUFNDIENTRSAyMDE4ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Article 14 and the provisions under the 42nd   Amendment to the Constitution   ",
        "option2" : " Article 17 and the Directive Principles of   State Policy in Part IV   ",
        "option3" : " Article 21 and the freedoms guaranteed in   Part III   ",
        "option4" : " Article 24 and the provisions under the 44th   Amendment to the Constitution    "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the Freedom of  Movement guaranteed under Article 19 of  Indian constitution, consider the following  statements:  1.  The State can impose reasonable  restrictions on this right for the protection  of the interests of any Scheduled Tribe.  2.  The freedom to move outside the borders of  India is covered under this right.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IGNvbnNpZGVyIHRoZSBmb2xsb3dpbmcgc3RhdGVtZW50czogICAxLiBUaGUgU3RhdGUgY2FuIGltcG9zZSByZWFzb25hYmxlIHJlc3RyaWN0aW9ucyBvbiB0aGlzIHJpZ2h0IGZvciB0aGUgcHJvdGVjdGlvbiBvZiB0aGUgaW50ZXJlc3RzIG9mIGFueSAgIFNjaGVkdWxlZCBUcmliZS4gICAyLiBUaGUgZnJlZWRvbSB0byBtb3ZlIG91dHNpZGUgdGhlIGJvcmRlcnMgb2YgSW5kaWEgaXMgY292ZXJlZCB1bmRlciB0aGlzIHJpZ2h0LiAgIFdoaWNoIG9mIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGlzL2FyZSBjb3JyZWN0PyAgIGEpIDEgb25seSAgIGIpIDIgb25seSAgIGMpIEJvdGggMSBhbmQgMiAgICBkKSBOZWl0aGVyIDEgbm9yIDIgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZXJlIGFyZSAyIGxpbWl0YXRpb25zIGltcG9zZWQgYXMgJ3JlYXNvbmFibGUgcmVzdHJpY3Rpb25zJyB0byB0aGUgZXhlcmNpc2Ugb2YgICBGcmVlZG9tIG9mIE1vdmVtZW50IGd1YXJhbnRlZWQgdW5kZXIgQXJ0aWNsZSAxOSBvZiBJbmRpYW4gY29uc3RpdHV0aW9uOiAgIDEpIGludGVyZXN0cyBvZiBnZW5lcmFsIHB1YmxpYyAgIDIpIGludGVyZXN0cyBvZiBhbnkgc2NoZWR1bGVkIHRyaWJlLiAgIFRoZSBzeXN0ZW0gb2YgSW5uZXIgTGluZSBQZXJtaXRzIGlzIGFuIGV4YW1wbGUgb2YgcmVzdHJpY3Rpb24gb2YgdGhpcyByaWdodCBpbiBvcmRlciB0byBlbnN1cmUgd2VsbC1iZWluZyAgIG9mIHRoZSB0cmliYWxzIGFuZCB0aGUgcHJlc2VydmF0aW9uIG9mIHRoZWlyIHVuaXF1ZSBhbmQgcHJpdmF0ZSBjdWx0dXJlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIGZyZWVkb20gdG8gbGVhdmUgdGhlIGJvcmRlcnMgb2YgSW5kaWEgYXMgcGVyIGFuIGluZGl2aWR1YWwncyB3aWxsIGFuZCByZXR1cm4gICBiYWNrLCBjZWlsaW5nIGEgY2l0aXplbiBoYXZlIGJlZW4gY292ZXJlZCB1bmRlciB0aGUgZXhwYW5kZWQgc2NvcGUgb2YgQXJ0aWNsZSAyMSwgYnkganVkaWNpYWwgYWN0aXZpc20gaW4gICBNYW5la2EgR2FuZGhpIGNhc2UsIDE5NzguICAgVGhpcyBzdWJzZWN0aW9uIG9mIEFydGljbGUgMTkgY292ZXJzIG9ubHkgdGhlIGZyZWVkb20gb2YgSW5kaWFuIGNpdGl6ZW5zIHRvIG1vdmUgZnJlZWx5IGJldHdlZW4gb25lIHN0YXRlICAgdG8gYW5vdGhlciwgbm8gbWF0dGVyIHRoZSBwbGFjZSBvZiBiaXJ0aCwgb3IgcmVzaWRlbmNlIG9yIHdvcmssIHdpdGhvdXQgdGhlIG5lZWQgb2YgYW55IHBlcm1pdHMgb3IgICBkb2N1bWVudHMuIFRoaXMgaGFzIGJlZW4gZG9uZSB0byBwcm9tb3RlIHRoZSBmZWVsaW5ncyBvZiB1bml0eSwgaW50ZWdyaXR5IGFuZCBmcmF0ZXJuaXR5IGFtb25nIEluZGlhbiAgIGNpdGl6ZW5zLiAgICBTb3VyY2U6IFBvbGl0eSBieSBMYXhtaWthbnRoLCA1dGggZWRpdGlvbiwgQ2gtNyAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 43,
      "question" : "The 86th Constitutional Amendment Act  of 2002 made changes to which of the following  provisions?  1. Fundamental Rights   2. Directive Principles of State Policy  3. Fundamental Duties  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IDEuIEZ1bmRhbWVudGFsIFJpZ2h0cyAgICAyLiBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgICAzLiBGdW5kYW1lbnRhbCBEdXRpZXMgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgIGEpIDEgb25seSAgIGIpIDIgYW5kIDMgb25seSAgIGMpIDEgYW5kIDIgb25seSAgIGQpIDEsIDIgYW5kIDMgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIDg2dGggQW1lbmRtZW50IEFjdCBvZiAyMDAyIG1hZGUgZWxlbWVudGFyeSBlZHVjYXRpb24gYSBGdW5kYW1lbnRhbCAgIFJpZ2h0IHVuZGVyIEFydGljbGUgMjEgQS4gVGh1cyA4NnRoIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3Qgb2YgMjAwMiBtYWRlIGNoYW5nZXMgdG8gRnVuZGFtZW50YWwgICBSaWdodC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgODZ0aCBBbWVuZG1lbnQgQWN0IG9mIDIwMDIgY2hhbmdlZCB0aGUgc3ViamVjdC1tYXR0ZXIgb2YgQXJ0aWNsZSA0NS4gVGhlICAgYW1lbmRlZCBkaXJlY3RpdmUgcHJpbmNpcGxlIHJlcXVpcmVzIHRoZSBTdGF0ZSB0byBwcm92aWRlIGVhcmx5IGNoaWxkaG9vZCBjYXJlIGFuZCBlZHVjYXRpb24gZm9yIGFsbCAgIGNoaWxkcmVuIHVudGlsIHRoZXkgY29tcGxldGUgdGhlIGFnZSBvZiBzaXggeWVhcnMuIFRodXMgODZ0aCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0IG9mIDIwMDIgbWFkZSAgIGNoYW5nZXMgdG8gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSA4NnRoIEFtZW5kbWVudCBBY3Qgb2YgMjAwMiBtYWRlIGNoYW5nZXMgdG8gdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cywgICBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgYW5kIEZ1bmRhbWVudGFsIER1dGllcy4gSXQgYWRkZWQgdGhlIEVsZXZlbnRoIEZ1bmRhbWVudGFsIER1dHkgICB3aGljaCBwcm92aWRlcyB0aGF0IHRoZSBjaXRpemVucyBzaG91bGQgcHJvdmlkZSBvcHBvcnR1bml0aWVzIGZvciBlZHVjYXRpb24gdG8gaGlzIGNoaWxkIG9yIHdhcmQgYmV0d2VlbiAgIHRoZSBhZ2Ugb2Ygc2l4IGFuZCBmb3VydGVlbiB5ZWFycy4gICAgU291cmNlOiBNIExheG1pa2FudGggICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements with  respect to the provisions of 'Martial Law' in  India'   1.  The 'Martial Law' can be imposed only on  the ground of 'armed rebellion within India'.  2.  The declaration of Martial Law  automatically results in the suspension of  the writ of Habeas Corpus.  3.  'Martial Law' is defined by the Constitution  as 'military rule under extraordinary  circumstances'.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IDEuIFRoZSAnTWFydGlhbCBMYXcnIGNhbiBiZSBpbXBvc2VkIG9ubHkgb24gdGhlIGdyb3VuZCBvZiAnYXJtZWQgcmViZWxsaW9uIHdpdGhpbiBJbmRpYScuICAgMi4gVGhlIGRlY2xhcmF0aW9uIG9mIE1hcnRpYWwgTGF3IGF1dG9tYXRpY2FsbHkgcmVzdWx0cyBpbiB0aGUgc3VzcGVuc2lvbiBvZiB0aGUgd3JpdCBvZiBIYWJlYXMgQ29ycHVzLiAgIDMuICdNYXJ0aWFsIExhdycgaXMgZGVmaW5lZCBieSB0aGUgQ29uc3RpdHV0aW9uIGFzICdtaWxpdGFyeSBydWxlIHVuZGVyIGV4dHJhb3JkaW5hcnkgY2lyY3Vtc3RhbmNlcycuICAgICAgb2YgMzMgICAgICAuICBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgYSkgMSBvbmx5ICAgYikgMSBhbmQgMyBvbmx5ICAgYykgMiBvbmx5ICAgZCkgTm9uZSAgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBBcnRpY2xlIDM0IHByb3ZpZGVzIGZvciB0aGUgcmVzdHJpY3Rpb25zIG9uIGZ1bmRhbWVudGFsIHJpZ2h0cyB3aGlsZSBtYXJ0aWFsIGxhdyBpcyBpbiBmb3JjZSBpbiBhbnkgYXJlYSAgIHdpdGhpbiB0aGUgdGVycml0b3J5IG9mIEluZGlhLiBIb3dldmVyLCB0aGUgZXhwcmVzc2lvbiAnbWFydGlhbCBsYXcnIGhhcyBub3QgYmVlbiBkZWZpbmVkIGFueXdoZXJlIGluIHRoZSAgIENvbnN0aXR1dGlvbi4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIE1hcnRpYWwgTGF3IGlzIGltcG9zZWQgdG8gcmVzdG9yZSB0aGUgYnJlYWtkb3duIG9mIGxhdyBhbmQgb3JkZXIgZHVlIHRvIGFueSAgIHJlYXNvbi4gVGhlIG1hcnRpYWwgbGF3IGlzIGltcG9zZWQgdW5kZXIgZXh0cmFvcmRpbmFyeSBjaXJjdW1zdGFuY2VzIGxpa2Ugd2FyLCBpbnZhc2lvbiwgaW5zdXJyZWN0aW9uLCAgIHJlYmVsbGlvbiwgcmlvdCBvciBhbnkgdmlvbGVudCByZXNpc3RhbmNlIHRvIGxhdy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgZGVjbGFyYXRpb24gb2YgbWFydGlhbCBsYXcgZG9lcyBub3QgaXBzbyBmYWN0byAgIHJlc3VsdCBpbiB0aGUgc3VzcGVuc2lvbiBvZiB0aGUgd3JpdCBvZiBoYWJlYXMgY29ycHVzLiBIb3dldmVyLCBkdXJpbmcgdGhlIG9wZXJhdGlvbiBvZiBtYXJ0aWFsIGxhdywgdGhlICAgbWlsaXRhcnkgYXV0aG9yaXRpZXMgaW1wb3NlIHJlc3RyaWN0aW9ucyBhbmQgcmVndWxhdGlvbnMgb24gdGhlIHJpZ2h0cyBvZiB0aGUgY2l2aWxpYW5zLCBjYW4gcHVuaXNoIHRoZSAgIGNpdmlsaWFucyBhbmQgZXZlbiBjb25kZW1uIHRoZW0gdG8gZGVhdGguICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiAnTWFydGlhbCBsYXcnIGlzIG5vdCBkZWZpbmVkIGFueXdoZXJlIGluIHRoZSBDb25zdGl0dXRpb24uIEl0IG1lYW5zICdtaWxpdGFyeSBydWxlJy4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCBDaGFwdGVyLTcgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "None       .  SFG 2023 |LEVEL 1 |Test 2 |      "
      }
    },
    {
      "index" : 45,
      "question" : "Recently, which one of the following  became first and only vaccine shown to have  the capability of significantly reducing malaria  and endorsed by the World Health  Organisation?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IHNpZ25pZmljYW50bHkgcmVkdWNpbmcgbWFsYXJpYSBhbmQgZW5kb3JzZWQgYnkgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbmlzYXRpb24/ICAgIGEpIEZhbGNpcGFydW0gICBiKSBQbGFzbW9kZXggICBjKSBNb3NxdWlyaXggICBkKSBBbm9waGVsZXMgICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgVGhlIG5ldyB2YWNjaW5lICdSVFMsUy9BU08xIChSVFMuUyknIHdpdGggaXRzIHRyYWRlIG5hbWUgJ01vc3F1aXJpeCcgd2FzIGVuZG9yc2VkIGJ5IHRoZSBXb3JsZCBIZWFsdGggICBPcmdhbmlzYXRpb24gKFdITykgcmVjZW50bHkuIFRoaXMgaXMgdGhlIGZpcnN0IGFuZCBvbmx5IHZhY2NpbmUgc2hvd24gdG8gaGF2ZSB0aGUgY2FwYWJpbGl0eSBvZiBzaWduaWZpY2FudGx5ICAgcmVkdWNpbmcgbWFsYXJpYSwgYW5kIGxpZmUtdGhyZWF0ZW5pbmcgc2V2ZXJlIG1hbGFyaWEsIGluIHRlc3RzIG9uIHlvdW5nIEFmcmljYW4gY2hpbGRyZW4uICAgTW9zcXVpcml4IGhhcyBiZWVuIGRldmVsb3BlZCBieSBCcml0aXNoIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgR2xheG9TbWl0aEtsaW5lIGluIHBhcnRuZXJzaGlwIHdpdGggICB0aGUgUEFUSCBNYWxhcmlhIFZhY2NpbmUgSW5pdGlhdGl2ZS4gSXQgd2FzIGFwcHJvdmVkIGZvciB0aGUgcGlsb3QgcHJvZ3JhbW1lIGluIDIwMTUuIFRoZSB2YWNjaW5lIGFjdHMgICBhZ2FpbnN0IFAuIGZhbGNpcGFydW0sIHRoZSBkZWFkbGllc3QgbWFsYXJpYSBwYXJhc2l0ZSBnbG9iYWxseSwgYW5kIHRoZSBtb3N0IHByZXZhbGVudCBpbiBBZnJpY2EuIFRoZSBtYWxhcmlhICAgdmFjY2luZSBzaG91bGQgYmUgcHJvdmlkZWQgaW4gYSBzY2hlZHVsZSBvZiA0IGRvc2VzIGluIGNoaWxkcmVuIGZyb20gNSBtb250aHMgb2YgYWdlIGZvciB0aGUgcmVkdWN0aW9uIG9mICAgbWFsYXJpYSBkaXNlYXNlIGFuZCBidXJkZW4uICAgS25vd2xlZGdlIEJhc2U6ICAgIE1hbGFyaWE6IEl0IGlzIGNhdXNlZCBieSB0aGUgYml0ZSBvZiB0aGUgZmVtYWxlIEFub3BoZWxlcyBtb3NxdWl0byAodmVjdG9yKSBpZiB0aGUgbW9zcXVpdG8gaXRzZWxmIGlzIGluZmVjdGVkICAgd2l0aCBhIG1hbGFyaWFsIHBhcmFzaXRlLiBJdCBpcyBwcmV2ZW50YWJsZSBhbmQgY3VyYWJsZS4gVGhlcmUgYXJlIGZpdmUga2luZHMgb2YgbWFsYXJpYWwgcGFyYXNpdGVzIC0gICBQbGFzbW9kaXVtIGZhbGNpcGFydW0sIFBsYXNtb2RpdW0gdml2YXggKHRoZSBjb21tb25lc3Qgb25lcyksIFBsYXNtb2RpdW0gbWFsYXJpYWUsICAgUGxhc21vZGl1bSBvdmFsZSwgYW5kIFBsYXNtb2RpdW0ga25vd2xlc2kuICAgIENoaWxkcmVuIGFnZWQgdW5kZXIgNSB5ZWFycyBhcmUgdGhlIG1vc3QgdnVsbmVyYWJsZSBncm91cCBhZmZlY3RlZCBieSBtYWxhcmlhOyBpbiAyMDE5LCB0aGV5IGFjY291bnRlZCAgIGZvciA2NyUgKDI3NCwwMDApIG9mIGFsbCBtYWxhcmlhIGRlYXRocyB3b3JsZHdpZGUuICAgIEluIDIwMTksIEluZGlhIGhhZCBhbiBlc3RpbWF0ZWQgNS42IG1pbGxpb24gY2FzZXMgb2YgbWFsYXJpYSBjb21wYXJlZCB0byBhYm91dCAyMCBtaWxsaW9uIGNhc2VzIGluIDIwMDAsICAgYWNjb3JkaW5nIHRvIFdITy4gICBTb3VyY2U6IEV4cGxhaW5lZDogV2hhdCBpcyBNb3NxdWlyaXgsIHRoZSBmaXJzdCBtYWxhcmlhIHZhY2NpbmUgdG8gZ2V0IHRoZSBXSE8ncyBiYWNraW5nPyAtRm9ydW1JQVMgQmxvZyAgICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Falciparum  ",
        "option2" : "Plasmodex  ",
        "option3" : "Mosquirix  ",
        "option4" : "Anopheles   "
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following most  accurately reflects the view of Libertarians?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IGEpIFRoZXkgYmVsaWV2ZSB0aGF0IG9wZW4gYW5kIGZhaXIgY29tcGV0aXRpb24gaXMgbmVjZXNzYXJ5IHRvIGFjaGlldmUgZXF1YWxpdHkuICAgYikgVGhleSBiZWxpZXZlIHRoYXQgcHVibGljIGNvbnRyb2wgb3ZlciBlc3NlbnRpYWwgcmVzb3VyY2VzIGlzIG5lY2Vzc2FyeSB0byBhY2hpZXZlIGVxdWFsaXR5LiAgIGMpIFRoZXkgYmVsaWV2ZSB0aGF0IHBvbGl0aWNhbCwgc29jaWFsIGFuZCBlY29ub21pYyBlcXVhbGl0aWVzIGFyZSBpbnRlcmxpbmtlZC4gICBkKSBUaGV5IGJlbGlldmUgdGhhdCBvbmx5IHN0YXRlIGludGVydmVudGlvbiBjYW4gZW5zdXJlIGVxdWFsIG9wcG9ydHVuaXRpZXMgdG8gYWxsLiAgICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBMaWJlcmFscyB1cGhvbGQgdGhlIHByaW5jaXBsZSBvZiBjb21wZXRpdGlvbiBhcyB0aGUgbW9zdCBlZmZpY2llbnQgYW5kIGZhaXIgd2F5IG9mIGRpc3RyaWJ1dGluZyByZXNvdXJjZXMgICBhbmQgcmV3YXJkcyBpbiBzb2NpZXR5LiBUaGV5IGJlbGlldmUgdGhhdCB3aGlsZSBzdGF0ZXMgbWF5IGhhdmUgdG8gaW50ZXJ2ZW5lIHRvIHRyeSBhbmQgZW5zdXJlIGEgbWluaW11bSAgIHN0YW5kYXJkIG9mIGxpdmluZyBhbmQgZXF1YWwgb3Bwb3J0dW5pdGllcyBmb3IgYWxsLCB0aGlzIGNhbm5vdCBieSBpdHNlbGYgYnJpbmcgZXF1YWxpdHkgYW5kIGp1c3RpY2UgdG8gc29jaWV0eS4gICBDb21wZXRpdGlvbiBiZXR3ZWVuIHBlb3BsZSBpbiBmcmVlIGFuZCBmYWlyIGNvbmRpdGlvbnMgaXMgdGhlIG1vc3QganVzdCBhbmQgZWZmaWNpZW50IHdheSBvZiBkaXN0cmlidXRpbmcgICByZXdhcmRzIGluIGEgc29jaWV0eS4gU29jaWFsaXNtIGFkdm9jYXRlcyBzb21lIGtpbmQgb2YgZ292ZXJubWVudCByZWd1bGF0aW9uLCBwbGFubmluZyBhbmQgY29udHJvbCBvdmVyICAgY2VydGFpbiBhcmVhcyBzdWNoIGFzIGVkdWNhdGlvbiBhbmQgaGVhbHRoY2FyZS4gVW5saWtlIFNvY2lhbGlzdHMsIGxpYmVyYWxzIGRvIG5vdCBiZWxpZXZlIHRoYXQgcG9saXRpY2FsLCAgIGVjb25vbWljIGFuZCBzb2NpYWwgaW5lcXVhbGl0aWVzIGFyZSBuZWNlc3NhcmlseSBsaW5rZWQuIFRoZXkgbWFpbnRhaW4gdGhhdCBpbmVxdWFsaXRpZXMgaW4gZWFjaCBvZiB0aGVzZSAgIHNwaGVyZXMgc2hvdWxkIGJlIHRhY2tsZWQgYXBwcm9wcmlhdGVseS4gICBTb3VyY2U6IENoYXB0ZXIgMywgUG9saXRpY2FsIFRoZW9yeSBDbGFzcyBYSSBOQ0VSVCAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They believe that open and fair competition   is necessary to achieve equality.  ",
        "option2" : " They believe that public control over   essential resources is necessary to achieve   equality.  ",
        "option3" : " They believe that political, social and   economic equalities are interlinked.  ",
        "option4" : " They believe that only state intervention can   ensure equal opportunities to all.   "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following statements is/are  correct regarding the Fundamental Duties as  enshrined in the Indian Constitution?  1. Fundamental Duties extend to all persons  whether citizens or foreigners.  2. They are automatically enforceable and  does not need any executive decree.  3. They have been added in Part III of the  Constitution so as to keep them on par with  Fundamental Rights.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uPyAgIDEuIEZ1bmRhbWVudGFsIER1dGllcyBleHRlbmQgdG8gYWxsIHBlcnNvbnMgd2hldGhlciBjaXRpemVucyBvciBmb3JlaWduZXJzLiAgIDIuIFRoZXkgYXJlIGF1dG9tYXRpY2FsbHkgZW5mb3JjZWFibGUgYW5kIGRvZXMgbm90IG5lZWQgYW55IGV4ZWN1dGl2ZSBkZWNyZWUuICAgMy4gVGhleSBoYXZlIGJlZW4gYWRkZWQgaW4gUGFydCBJSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBzbyBhcyB0byBrZWVwIHRoZW0gb24gcGFyIHdpdGggRnVuZGFtZW50YWwgUmlnaHRzLiAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGUgZ2l2ZW4gYmVsb3c6ICAgYSkgMSBvbmx5ICAgYikgMyBvbmx5ICAgYykgMSBhbmQgMiBvbmx5ICAgZCkgTm9uZSAgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBBcnRpY2xlIDUxQSB3YXMgYWRkZWQgdG8gdGhlIEluZGlhbiBDb25zdGl0dXRpb24gZm9yIGluY29ycG9yYXRpb24gb2YgRnVuZGFtZW50YWwgRHV0aWVzLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVW5saWtlIHNvbWUgb2YgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyB3aGljaCBleHRlbmQgdG8gYWxsIHBlcnNvbnMgd2hldGhlciAgIGNpdGl6ZW5zIG9yIGZvcmVpZ25lcnMsIHRoZSBGdW5kYW1lbnRhbCBEdXRpZXMgYXJlIGNvbmZpbmVkIHRvIGNpdGl6ZW5zIG9ubHkgYW5kIGRvIG5vdCBleHRlbmQgdG8gICBmb3JlaWduZXJzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogTGlrZSB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMsIHRoZSBmdW5kYW1lbnRhbCBkdXRpZXMgYXJlIGFsc28gbm9uLWp1c3RpY2lhYmxlLiBUaGUgICBDb25zdGl0dXRpb24gZG9lcyBub3QgcHJvdmlkZSBmb3IgdGhlaXIgZGlyZWN0IGVuZm9yY2VtZW50IGJ5IHRoZSBjb3VydHMuIFRodXMsIHRoZXkgYXJlIG5vdCBhdXRvbWF0aWNhbGx5ICAgZW5mb3JjZWFibGUuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIDQybmQgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCBpbiAxOTc2IGFkZGVkIGEgbmV3IHBhcnQsIG5hbWVseSwgUGFydCAgIElWQSB0byB0aGUgQ29uc3RpdHV0aW9uLiBUaGlzIG5ldyBwYXJ0IGNvbnNpc3RzIG9mIG9ubHkgb25lIEFydGljbGUsIHRoYXQgaXMsIEFydGljbGUgNTFBIHdoaWNoIHNwZWNpZmllcyBhICAgY29kZSBvZiAxMSBmdW5kYW1lbnRhbCBkdXRpZXMgb2YgdGhlIGNpdGl6ZW5zLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBMYXhtaWthbnRoLCA2dGggRWRpdGlvbiwgOXRoIENoYXB0ZXIgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "None   "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following statements are  correct regarding the significance of the  Directive Principles of State Policy in India?    1.  They refer to the goals and objectives which  should be adopted by a society.   2.  They facilitate stability and continuity in  government policies.  3.  They are intended to avoid any type of  conflict between the Centre and the states.   4.  They are supplementary to the fundamental  rights of the citizens.  Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IG9mIFN0YXRlIFBvbGljeSBpbiBJbmRpYT8gICAgIDEuIFRoZXkgcmVmZXIgdG8gdGhlIGdvYWxzIGFuZCBvYmplY3RpdmVzIHdoaWNoIHNob3VsZCBiZSBhZG9wdGVkIGJ5IGEgc29jaWV0eS4gICAgMi4gIFRoZXkgZmFjaWxpdGF0ZSBzdGFiaWxpdHkgYW5kIGNvbnRpbnVpdHkgaW4gZ292ZXJubWVudCBwb2xpY2llcy4gICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIDMuIFRoZXkgYXJlIGludGVuZGVkIHRvIGF2b2lkIGFueSB0eXBlIG9mIGNvbmZsaWN0IGJldHdlZW4gdGhlIENlbnRyZSBhbmQgdGhlIHN0YXRlcy4gICAgNC4gVGhleSBhcmUgc3VwcGxlbWVudGFyeSB0byB0aGUgZnVuZGFtZW50YWwgcmlnaHRzIG9mIHRoZSBjaXRpemVucy4gICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgICBhKSAxLCAyIGFuZCA0IG9ubHkgICAgIGIpIDIgYW5kIDQgb25seSAgICBjKSAxLCAyIGFuZCAzIG9ubHkgICBkKSAxLCAyLCAzIGFuZCA0ICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIERQU1BzIGNvbnRhaW4gdGhlIGdvYWxzIGFuZCBvYmplY3RpdmVzIHRoYXQgd2UgYXMgYSBzb2NpZXR5IHNob3VsZCBhZG9wdC4gRm9yICAgZXhhbXBsZSwgYXJ0aWNsZSAzOCB0byBwcm92aWRlIG1pbmltdW0gaW5lcXVhbGl0aWVzIGluIGluY29tZSwgc3RhdHVzLCBmYWNpbGl0aWVzIGFuZCBvcHBvcnR1bml0aWVzLCBBcnRpY2xlICAgMzkgQS0gdG8gcHJvdmlkZSBlcXVhbCBqdXN0aWNlIGFuZCB0byBwcm92aWRlIGZyZWUgbGVnYWwgYWlkIHRvIHBvb3IgZXRjLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGV5IGZhY2lsaXRhdGUgc3RhYmlsaXR5IGFuZCBjb250aW51aXR5IGluIGRvbWVzdGljIGFuZCBmb3JlaWduIHBvbGljaWVzIGluICAgcG9saXRpY2FsLCBlY29ub21pYyBhbmQgc29jaWFsIHNwaGVyZXMgaW4gc3BpdGUgb2YgdGhlIGNoYW5nZXMgb2YgdGhlIHBhcnR5IGluIHBvd2VyLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gRFBTUCBkb2VzIG5vdCBjb250YWluIGFzIHN1Y2ggcHJvdmlzaW9ucyB0byBhdm9pZCBjb25mbGljdCBiZXR3ZWVuIHRoZSBDZW50cmUgICBhbmQgc3RhdGVzLiBJbnN0ZWFkLCBEUFNQcyBwcm92aXNpb25zIGNhbiBsZWFkIHRvIHNvbWV0aW1lcyB0aGUgY29uZmxpY3QgYmV0d2VlbiB0aGUgQ2VudHJlIGFuZCBzdGF0ZXMuICAgRm9yIGV4YW1wbGUsIHdoZW4gQ2VudHJlIGdpdmVzIGRpcmVjdGlvbiB0byBzdGF0ZSB0byBpbXBsZW1lbnQgc29tZSBwcmluY2lwbGVzLCBidXQgaW4gY2FzZSBvZiBub24tICBjb21wbGlhbmNlLCBpdCBjYW4gZGlzbWlzcyB0aGUgc3RhdGUgZ292ZXJubWVudCBhbmQgdGh1cyBsZWFkaW5nIHRvIGNvbmZsaWN0LiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGV5IGFyZSBzdXBwbGVtZW50YXJ5IHRvIHRoZSBmdW5kYW1lbnRhbCByaWdodHMgb2YgdGhlIGNpdGl6ZW5zLiBUaGV5IGFyZSAgIGludGVuZGVkIHRvIGZpbGwgaW4gdGhlIHZhY3V1bSBpbiBQYXJ0IElJSSBieSBwcm92aWRpbmcgZm9yIHNvY2lhbCBhbmQgZWNvbm9taWMgcmlnaHRzLiAgIFNvdXJjZTogTkNFUlQgQ2xhc3MtWEkgSW5kaWFuIGNvbnN0aXR1dGlvbiBhdCB3b3JrIENoYXB0ZXItMiBwYWdlLTQzICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only    ",
        "option2" : "2 and 4 only   ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 49,
      "question" : "Which of the following statements is  correct about the relationship between rights  and duties of a citizen?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IGNpdGl6ZW4/ICAgYSkgUmlnaHRzIGFyZSBwcm9ncmVzc2l2ZSBpbiBuYXR1cmUgd2hpbGUgZHV0aWVzIGFyZSByZWdyZXNzaXZlLiAgIGIpIEJvdGggcmlnaHRzIGFuZCBkdXRpZXMgb3JpZ2luYXRlIGZyb20gdGhlIGlkZWEgb2YgaW50ZWdyaXR5IG9mIG5hdGlvbi4gICBjKSBUaGVyZSdzIGEgY29tcGxlbWVudGFyeSByZWxhdGlvbnNoaXAgYmV0d2VlbiByaWdodHMgYW5kIGR1dGllcy4gICBkKSBSaWdodHMgYW5kIGR1dGllcyBhcmUgY29tcGxldGVseSBpbmRlcGVuZGVudCBhbmQgZGlzam9pbnRlZCBmcm9tIGVhY2ggb3RoZXIuICAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgUmlnaHRzIGFyZSB3aGF0IG9uZSB3YW50cyBvdGhlcnMgdG8gZG8gZm9yIGhpbS9oZXIsIHdoZXJlYXMgZHV0aWVzIGFyZSB0aG9zZSBhY3RzIHRoYXQgb25lIHNob3VsZCBwZXJmb3JtICAgZm9yIG90aGVycy4gVGh1cywgYSByaWdodCBjb21lcyB3aXRoIGFuIG9ibGlnYXRpb24gdG8gc2hvdyByZXNwZWN0IGZvciB0aGUgcmlnaHRzIG9mIG90aGVycy4gVGhlIG9ibGlnYXRpb25zICAgdGhhdCBhY2NvbXBhbnkgcmlnaHRzIGFyZSBpbiB0aGUgZm9ybSBvZiBkdXRpZXMuIEV2ZXJ5IHJpZ2h0IGltcGxpZXMgYSBjby1yZWxhdGl2ZSBkdXR5IGFuZCB2aWNlLXZlcnNhLiBUaGUgICBTdGF0ZSBwcm90ZWN0cyBhbmQgZW5mb3JjZXMgcmlnaHRzIGFuZCBpdCBpcyB0aGUgZHV0eSBvZiBhbGwgY2l0aXplbnMgdG8gYmUgbG95YWwgdG8gdGhlIHN0YXRlLiBUaHVzLCB0aGUgICByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgcmlnaHRzIGlzIGNvbXBsZW1lbnRhcnkuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cubGVnYWxzZXJ2aWNlaW5kaWEuY29tL2xlZ2FsL2FydGljbGUtODg1My10aGUtcmVsYXRpb25zaGlwLWJldHdlZW4tcmlnaHRzLWFuZC0gIGR1dGllcy5odG1sICAgIE5DRVJUIFhJLCBQb2xpdGljYWwgdGhlb3J5LCBDaGFwdGVyIDUsICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rights are progressive in nature while duties   are regressive.  ",
        "option2" : " Both rights and duties originate from the   idea of integrity of nation.  ",
        "option3" : " There's a complementary relationship   between rights and duties.  ",
        "option4" : " Rights and duties are completely   independent and disjointed from each   other.   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements  regarding 'DigiSaksham' programme:  1.  The focus area of the scheme is to enhance  the employability of youth by imparting  digital skills.  2.  The programme is a joint initiative of Google  India and the Ministry of Skill Development  and Entrepreneurship.  3.  Under the programme, it is mandatory for  all the applicants to get training through  Instructor Led Mode Training (ILT).  4.  The scheme will be implemented in the field  by Aga Khan Rural Support Programme- India.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IDEuIFRoZSBmb2N1cyBhcmVhIG9mIHRoZSBzY2hlbWUgaXMgdG8gZW5oYW5jZSB0aGUgZW1wbG95YWJpbGl0eSBvZiB5b3V0aCBieSBpbXBhcnRpbmcgZGlnaXRhbCBza2lsbHMuICAgMi4gVGhlIHByb2dyYW1tZSBpcyBhIGpvaW50IGluaXRpYXRpdmUgb2YgR29vZ2xlIEluZGlhIGFuZCB0aGUgTWluaXN0cnkgb2YgU2tpbGwgRGV2ZWxvcG1lbnQgYW5kICAgRW50cmVwcmVuZXVyc2hpcC4gICAzLiBVbmRlciB0aGUgcHJvZ3JhbW1lLCBpdCBpcyBtYW5kYXRvcnkgZm9yIGFsbCB0aGUgYXBwbGljYW50cyB0byBnZXQgdHJhaW5pbmcgdGhyb3VnaCBJbnN0cnVjdG9yIExlZCBNb2RlICAgVHJhaW5pbmcgKElMVCkuICAgNC4gVGhlIHNjaGVtZSB3aWxsIGJlIGltcGxlbWVudGVkIGluIHRoZSBmaWVsZCBieSBBZ2EgS2hhbiBSdXJhbCBTdXBwb3J0IFByb2dyYW1tZS1JbmRpYS4gICAgIG9mIDMzICAgICAgLiAgU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgIFdoaWNoIG9mIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGFyZSBjb3JyZWN0PyAgIGEpIDEsIDIgYW5kIDMgb25seSAgIGIpIDIgYW5kIDQgb25seSAgIGMpIDEgYW5kIDQgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQSBkaWdpdGFsIHNraWxscyBwcm9ncmFtbWUgY2FsbGVkIERpZ2lTYWtzaGFtIHNlZWtzIHRvIGVuaGFuY2UgdGhlIGVtcGxveWFiaWxpdHkgICBvZiB5b3V0aCBieSBpbXBhcnRpbmcgZGlnaXRhbCBza2lsbHMgdGhhdCBhcmUgcmVxdWlyZWQgaW4gYW4gaW5jcmVhc2luZ2x5IHRlY2hub2xvZ3ktZHJpdmVuIGVyYS4gVGhlICAgaW5pdGlhdGl2ZSBnaXZlcyBwcmlvcml0eSB0byB0aGUgam9iLXNlZWtlcnMgb2Ygc2VtaS11cmJhbiBhcmVhcyBiZWxvbmdpbmcgdG8gZGlzYWR2YW50YWdlZCBjb21tdW5pdGllcywgICBpbmNsdWRpbmcgdGhvc2Ugd2hvIGhhdmUgbG9zdCB0aGVpciBqb2JzIGR1ZSB0byB0aGUgQ292aWQtMTkgcGFuZGVtaWMuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcHJvZ3JhbW1lIGlzIGEgam9pbnQgaW5pdGlhdGl2ZSBvZiBNaWNyb3NvZnQgSW5kaWEgYW5kIHRoZSBNaW5pc3RyeSBvZiBMYWJvdXIgICAmIEVtcGxveW1lbnQuIFRoZSBKb2JzZWVrZXJzIGNhbiBhY2Nlc3MgdGhlIHRyYWluaW5nIHRocm91Z2ggTmF0aW9uYWwgQ2FyZWVyIFNlcnZpY2UgKE5DUykgUG9ydGFsLiBJdCBpcyAgIGFuIGV4dGVuc2lvbiBvZiB0aGUgR292ZXJubWVudCdzIG9uZ29pbmcgcHJvZ3JhbXMgdG8gc3VwcG9ydCB0aGUgeW91dGggZnJvbSBydXJhbCBhbmQgc2VtaS11cmJhbiBhcmVhcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFVuZGVyIHRoZSBEaWdpU2Frc2hhbSBpbml0aWF0aXZlLCB0aGVyZSB3aWxsIGJlIGJhc2ljYWxseSB0aHJlZSB0eXBlcyBvZiB0cmFpbmluZyAgIHZpei4gRGlnaXRhbCBTa2lsbHMgLSBTZWxmIHBhY2VkIGxlYXJuaW5nLCBWSUxUIG1vZGUgdHJhaW5pbmcgKFZpcnR1YWwgSW5zdHJ1Y3RvciBsZWQpIGFuZCBJTFQgbW9kZSB0cmFpbmluZyAgIChJbnN0cnVjdG9yIGxlZCkuICBUaGUgSUxUIHRyYWluaW5nIHdoaWNoIGlzIGluIHBlcnNvbiB0cmFpbmluZyB3b3VsZCBiZSBjb25kdWN0ZWQgYXQgdGhlIE1vZGVsIENhcmVlciAgIENlbnRyZXMgKE1DQ3MpIGFuZCBOYXRpb25hbCBDYXJlZXIgU2VydmljZSBDZW50cmVzIChOQ1NDKSBmb3IgU0NzL1NUcyBhY3Jvc3MgdGhlIGNvdW50cnkuIEl0IGlzIG5vdCAgIG1hbmRhdG9yeSBmb3IgdGhlIGFwcGxpY2FudHMgdG8gZ2V0IHRyYWluaW5nIHRocm91Z2ggSW5zdHJ1Y3RvciBsZWQgbW9kZSBUcmFpbmluZyAoSUxUKS4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBEaWdpU2Frc2hhbSB3aWxsIGJlIGltcGxlbWVudGVkIGluIHRoZSBmaWVsZCBieSBBZ2EgS2hhbiBSdXJhbCBTdXBwb3J0ICAgUHJvZ3JhbW1lIEluZGlhIChBS1JTUC1JKS4gQWdhIEtoYW4gUnVyYWwgU3VwcG9ydCBQcm9ncmFtbWUgKEluZGlhKSBpcyBhIG5vbi1nb3Zlcm5tZW50ICAgZGV2ZWxvcG1lbnQgb3JnYW5pemF0aW9uLiBBS1JTUChJKSB3b3JrcyBhcyBhIGNhdGFseXN0IGZvciB0aGUgYmV0dGVybWVudCBvZiBydXJhbCBjb21tdW5pdGllcyBieSAgIHByb3ZpZGluZyBkaXJlY3Qgc3VwcG9ydCB0byBsb2NhbCBjb21tdW5pdGllcy4gICBTb3VyY2U6ICBTaHJpIEJodXBlbmRlciBZYWRhdiBsYXVuY2hlcyBEaWdpU2Frc2hhbS0gYSBqb2ludCBpbml0aWF0aXZlIG9mIExhYm91ciBNaW5pc3RyeSB3aXRoIE1pY3Jvc29mdCAgIEluZGlhIHRvIGVuaGFuY2UgdGhlIGVtcGxveWFiaWxpdHkgb2YgeW91dGgtRm9ydW1JQVMgQmxvZyAgIGh0dHBzOi8vcGliLmdvdi5pbi9QcmVzc1JlbGVhc2VJZnJhbWVQYWdlLmFzcHg/UFJJRD0xNzU5Njg0ICAgQWdhIEtoYW4gUnVyYWwgU3VwcG9ydCBQcm9ncmFtbWUgKEluZGlhKSAtIE9yZ2FuaXphdGlvbiBJbmZvcm1hdGlvbiAoYWtyc3BpbmRpYS5vcmcuaW4pICAgd3d3LmVwb25pYy5jb20uYXUvYWR2YW50YWdlcy1vZi12ZXJ0aWNhbC1mYXJtaW5nLyAgICAgb2YgMzMgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "1, 2, 3 and 4    "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
