{
  "testId" : "forum-2023-prelims-sgf-2",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/forum/prelims/forum-2023-prelims-sgf-2.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "A legislation which confers on the executive or administrative authority an unguided and uncontrolled discretionary power in the matter of application of law violates which one of the following Articles of the Constitution of India? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IGRpc2NyZXRpb25hcnkgcG93ZXIgaW4gdGhlIG1hdHRlciBvZiBhcHBsaWNhdGlvbiBvZiBsYXcgdmlvbGF0ZXMgd2hpY2ggb25lIG9mIHRoZSBmb2xsb3dpbmcgQXJ0aWNsZXMgb2YgdGhlICBDb25zdGl0dXRpb24gb2YgSW5kaWE/ICBhKSBBcnRpY2xlIDE0ICBiKSBBcnRpY2xlIDI4ICBjKSBBcnRpY2xlIDMyICAgZCkgQXJ0aWNsZSA0NCAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQXJ0aWNsZSAxNCBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uIHNheXMgdGhhdCB0aGUgU3RhdGUgc2hhbGwgbm90IGRlbnkgdG8gYW55IHBlcnNvbiBlcXVhbGl0eSBiZWZvcmUgdGhlIGxhdyBvciAgdGhlIGVxdWFsIHByb3RlY3Rpb24gb2YgdGhlIGxhd3Mgd2l0aGluIHRoZSB0ZXJyaXRvcnkgb2YgSW5kaWEuIFRoZSBjb25jZXB0IG9mICdlcXVhbGl0eSBiZWZvcmUgbGF3JyBpcyBhbiAgZWxlbWVudCBvZiB0aGUgY29uY2VwdCBvZiAnUnVsZSBvZiBMYXcnLiBUaGlzIGNvbmNlcHQgaGFzIHRoZSBmb2xsb3dpbmcgdGhyZWUgZWxlbWVudHMgb3IgYXNwZWN0czogIDEpIEFic2VuY2Ugb2YgYXJiaXRyYXJ5IHBvd2VyICAyKSBFcXVhbGl0eSBiZWZvcmUgdGhlIGxhdywgdGhhdCBpcywgZXF1YWwgc3ViamVjdGlvbiBvZiBhbGwgY2l0aXplbnMgdG8gdGhlIG9yZGluYXJ5IGxhdyBvZiB0aGUgbGFuZCAgMykgVGhlIGNvbnN0aXR1dGlvbiBpcyB0aGUgcmVzdWx0IG9mIHRoZSByaWdodHMgb2YgdGhlIGluZGl2aWR1YWwgIFRoZSBmaXJzdCBhbmQgdGhlIHNlY29uZCBlbGVtZW50cyBhcmUgYXBwbGljYWJsZSB0byBJbmRpYS4gVGhpcyBtZWFucyAnZXF1YWxpdHkgYmVmb3JlIGxhdycgdW5kZXIgQXJ0aWNsZSAxNCAgY29ubm90ZXMgdGhlIGFic2VuY2Ugb2YgYXJiaXRyYXJ5IHBvd2VyIHdpdGggdGhlIGF1dGhvcml0aWVzLiBUaHVzLCB3aGVuIGEgbGVnaXNsYXRpb24gY29uZmVycyB1bmNvbnRyb2xsZWQgIGRpc2NyZXRpb25hcnkgcG93ZXJzIG9uIGFueSBhdXRob3JpdHksIGl0IHRlbmRzIHRvIHZpb2xhdGUgdGhlIGFydGljbGUgMTQgb2YgdGhlIGNvbnN0aXR1dGlvbi4gIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gQXJ0aWNsZSAyOCBpcyByZWxhdGVkIHRvIHRoZSByaWdodCB0byBmcmVlZG9tIG9mIHJlbGlnaW9uLiBJdCBwcm92aWRlcyB0aGF0IG5vIHJlbGlnaW91cyAgaW5zdHJ1Y3Rpb24gc2hhbGwgYmUgcHJvdmlkZWQgaW4gYW55IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIHdob2xseSBtYWludGFpbmVkIG91dCBvZiBTdGF0ZSBmdW5kcy4gRnVydGhlciwgIG5vIHBlcnNvbiBhdHRlbmRpbmcgYW55IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIHJlY29nbml6ZWQgYnkgdGhlIFN0YXRlIG9yIHJlY2VpdmluZyBhaWQgb3V0IG9mIFN0YXRlIGZ1bmRzICBzaGFsbCBiZSByZXF1aXJlZCB0byBhdHRlbmQgYW55IHJlbGlnaW91cyBpbnN0cnVjdGlvbiBvciB3b3JzaGlwIGluIHRoYXQgaW5zdGl0dXRpb24gd2l0aG91dCBoaXMgY29uc2VudC4gIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gQXJ0aWNsZSAzMiBjb25mZXJzIHRoZSByaWdodCB0byByZW1lZGllcyBmb3IgdGhlIGVuZm9yY2VtZW50IG9mIHRoZSBmdW5kYW1lbnRhbCAgcmlnaHRzIG9mIGFuIGFnZ3JpZXZlZCBjaXRpemVuLiBBcnRpY2xlIDMyIGFmZmlybXMgdGhlIHJpZ2h0IHRvIG1vdmUgdGhlIFN1cHJlbWUgQ291cnQgaWYgYSBmdW5kYW1lbnRhbCAgcmlnaHQgaXMgdmlvbGF0ZWQuIFVuZGVyIHRoaXMgYXJ0aWNsZSwgdGhlIFN1cHJlbWUgQ291cnQgY2FuIGlzc3VlIHdyaXRzIGZvciB0aGUgZW5mb3JjZW1lbnQgb2YgYW55IG9mIHRoZSAgZnVuZGFtZW50YWwgcmlnaHRzIG9mIHRoZSBjaXRpemVucy4gIE9wdGlvbiBkIGlzIGluY29ycmVjdC4gQXJ0aWNsZSA0NCBwcm92aWRlcyBmb3Igb25lIG9mIHRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kuIEFydGljbGUgNDQgc2F5cyAgdGhhdCB0aGUgJ1N0YXRlIHNoYWxsIGVuZGVhdm9yIHRvIHNlY3VyZSBmb3IgdGhlIGNpdGl6ZW5zIGEgdW5pZm9ybSBjaXZpbCBjb2RlIHRocm91Z2hvdXQgdGhlIHRlcnJpdG9yeSBvZiAgSW5kaWEiLiAgU291cmNlKSBVUFNDIENTRSAyMDIxICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 14 ",
        "option2" : "Article 28 ",
        "option3" : "Article 32  ",
        "option4" : "Article 44  "
      }
    },
    {
      "index" : 2,
      "question" : "According to Article 12 of Indian Constitution, which of the following are included in the definition of 'state'? 1. Gram Panchayat 2. Life Insurance Corporation  3. State Legislature 4. Political Parties 5. Judicial proceedings of the Supreme Court Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "ICdzdGF0ZSc/ICAxLiBHcmFtIFBhbmNoYXlhdCAgMi4gTGlmZSBJbnN1cmFuY2UgQ29ycG9yYXRpb24gICAzLiBTdGF0ZSBMZWdpc2xhdHVyZSAgNC4gUG9saXRpY2FsIFBhcnRpZXMgIDUuIEp1ZGljaWFsIHByb2NlZWRpbmdzIG9mIHRoZSBTdXByZW1lIENvdXJ0ICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlcyBnaXZlbiBiZWxvdzogIGEpIDEsIDIgYW5kIDMgb25seSAgYikgMSwgMyBhbmQgNSBvbmx5ICBjKSAyLCAzIGFuZCA0IG9ubHkgIGQpIDEsIDIsIDMsIDQgYW5kIDUgICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBBcnRpY2xlIDEyIG9mIEluZGlhbiBDb25zdGl0dXRpb24gaXMgYSBnYXRld2F5IHByb3Zpc2lvbiBmb3IgUGFydCBJSUkgb24gRnVuZGFtZW50YWwgUmlnaHRzLCBhbmQgZGVmaW5lZCB0aGUgIHRlcm0gJ1N0YXRlJyB1c2VkIHRocm91Z2hvdXQgdGhlIFBhcnQuIFVuZGVyIEluZGlhbiBjb25zdGl0dXRpb24sIHRoZSB0ZXJtICdTdGF0ZScgaGFzIGJlZW4gdXNlZCBpbiBkaWZmZXJlbnQgIHByb3Zpc2lvbnMgY29uY2VybmluZyB0aGUgZnVuZGFtZW50YWwgcmlnaHRzLiBJdCBpcyBkZWZpbmVkIGluIGEgd2lkZXIgc2Vuc2Ugc28gYXMgdG8gaW5jbHVkZSBhbGwgaXRzIGFnZW5jaWVzLiAgSXQgaXMgdGhlIGFjdGlvbnMgb2YgdGhlc2UgYWdlbmNpZXMgdGhhdCBjYW4gYmUgY2hhbGxlbmdlZCBpbiB0aGUgY291cnRzIGFzIHZpb2xhdGluZyB0aGUgRnVuZGFtZW50YWwgUmlnaHRzLiAgT3B0aW9uIDEsIDIgYW5kIDMgYXJlIGNvcnJlY3Q6IEFydGljbGUgMTIgaGFzIGRlZmluZWQgdGhlIHRlcm0gZm9yIHRoZSBwdXJwb3NlcyBvZiBQYXJ0IElJSS4gQWNjb3JkaW5nIHRvIGl0LCAgdGhlIFN0YXRlIGluY2x1ZGVzIHRoZSBmb2xsb3dpbmc6ICAgKGEpIEdvdmVybm1lbnQgYW5kIFBhcmxpYW1lbnQgb2YgSW5kaWEsIHRoYXQgaXMsIGV4ZWN1dGl2ZSBhbmQgbGVnaXNsYXRpdmUgb3JnYW5zIG9mIHRoZSBVbmlvbiBnb3Zlcm5tZW50LiAgIChiKSBHb3Zlcm5tZW50IGFuZCBsZWdpc2xhdHVyZSBvZiBzdGF0ZXMsIHRoYXQgaXMsIGV4ZWN1dGl2ZSBhbmQgbGVnaXNsYXRpdmUgb3JnYW5zIG9mIHN0YXRlIGdvdmVybm1lbnQuICAoSGVuY2UgU3RhdGVtZW50IDMgaXMgY29ycmVjdCkgIChjKSBBbGwgbG9jYWwgYXV0aG9yaXRpZXMsIHRoYXQgaXMsIG11bmljaXBhbGl0aWVzLCBkaXN0cmljdCBib2FyZHMsIGltcHJvdmVtZW50IHRydXN0cywgZ3JhbSBwYW5jaGF5YXRzIGV0Yy4gIChIZW5jZSBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0KSAgKGQpIEFsbCBvdGhlciBhdXRob3JpdGllcywgdGhhdCBpcywgc3RhdHV0b3J5IG9yIG5vbi1zdGF0dXRvcnkgYXV0aG9yaXRpZXMgbGlrZSBMSUMsIE9OR0MsIFNBSUwsIGV0Yy4gKEhlbmNlICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0KSAgT3B0aW9uIDQgYW5kIDUgYXJlIGluY29ycmVjdDogUG9saXRpY2FsIFBhcnRpZXMgYXMgc3VjaCBkbyBub3QgY29tZSB1bmRlciB0aGUgZGVmaW5pdGlvbiBvZiAnc3RhdGUnIHVuZGVyICBhcnRpY2xlIDEyLiBUaGUgSGlnaCBDb3VydCBvZiBNYWRyYXMgaGFzIHNhaWQgdGhhdCAnQSBwb2xpdGljYWwgcGFydHkgaXMgb25seSBhIGdyb3VwIG9mIGluZGl2aWR1YWxzIHdobyBtYXkgIGNvbnRlc3QgdGhlIGVsZWN0aW9uIGFuZCB0aGVyZWFmdGVyLCB3aG8gbWF5IGV2ZW4gZ292ZXJuIHRoZSBTdGF0ZS4gRXZlbiBkdXJpbmcsIHdoZW4gdGhlIHBvbGl0aWNhbCBwYXJ0aWVzICBhcmUgaW4gcG93ZXIsIHRoZSBwb2xpdGljYWwgcGFydHkgYXMgc3VjaCBkb2VzIG5vdCBjb21lIHVuZGVyIHRoZSBkZWZpbml0aW9uIHRoZSAnU3RhdGUnIHdpdGhpbiB0aGUgbWVhbmluZyAgb2YgQXJ0aWNsZSAxMiBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhLicgIEluIFJ1cGEgQXNob2sgSHVycmEgdiBBc2hvayBIdXJyYSwgdGhlIFN1cHJlbWUgQ291cnQgcmVhZmZpcm1lZCBhbmQgcnVsZWQgdGhhdCBubyBqdWRpY2lhbCBwcm9jZWVkaW5nICBjb3VsZCBiZSBzYWlkIHRvIHZpb2xhdGUgYW55IGZ1bmRhbWVudGFsIHJpZ2h0LiAgSXQgd2FzIHNhaWQgdG8gYmUgYSBzZXR0bGVkIHBvc2l0aW9uIG9mIGxhdyB0aGF0IHN1cGVyaW9yICBjb3VydHMgb2YganVzdGljZSBkbyBub3QgZmFsbCB3aXRoaW4gdGhlIGFtYml0IG9mICdTdGF0ZScgb3Igb3RoZXIgYXV0aG9yaXRpZXMgdW5kZXIgQXJ0aWNsZSAxMi4gVGhlcmVmb3JlLCBpdCBjYW4gIHJpZ2h0bHkgYmUgc2FpZCB0aGF0IHdoZW4gdGhleSBnaXZlIGp1ZGljaWFsIGRlY2lzaW9ucywgdGhleSBkbyBub3QgY29tZSB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgU3RhdGUuIEJ1dCwgIHdoaWxlIGNvdXJ0cyBwZXJmb3JtIHRoZWlyIGFkbWluaXN0cmF0aXZlIGZ1bmN0aW9uLCB0aGV5IGFyZSB3aXRoaW4gdGhlIFN0YXRlJ3MgZGVmaW5pdGlvbi4gIFNvdXJjZTogICdTdGF0ZScgdW5kZXIgQXJ0aWNsZSAxMiBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIChpcGxlYWRlcnMuaW4pICBNIExheG1pa2FudC0gQ2gtNyAoRnVuZGFtZW50YWwgcmlnaHRzKSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "1, 3 and 5 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "1, 2, 3, 4 and 5  "
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following is the most appropriate definition of 'Freedom'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IGEpIEZyZWVkb20gaXMgdGhlIGNvbmRpdGlvbiBpbiB3aGljaCBwZW9wbGUgY2FuIGRldmVsb3AgdGhlaXIgY2FwYWJpbGl0aWVzLiAgYikgRnJlZWRvbSBtZWFucyBhYnNlbmNlIG9mIGFueSB0eXBlIG9mIHJ1bGVzIGFuZCByZWd1bGF0aW9ucy4gIGMpIEZyZWVkb20gaXMgdGhlIHByaXZpbGVnZSB0byBkbyB3aGF0ZXZlciBvbmUgbGlrZXMuICBkKSBGcmVlZG9tIG1lYW5zIHRoZSBjb21wbGV0ZSBhYnNlbmNlIG9mIHJlc3RyYWludHMgYW5kIGNvbnN0cmFpbnRzLiAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIHRlcm0gJ0ZyZWVkb20nIG1lYW5zIHRoZSBhYnNlbmNlIG9mIHJlc3RyYWludHMgb24gdGhlIGFjdGl2aXRpZXMgb2YgaW5kaXZpZHVhbHMsIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCAgcHJvdmlkaW5nIG9wcG9ydHVuaXRpZXMgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiBpbmRpdmlkdWFsIHBlcnNvbmFsaXRpZXMuICAgRnJlZWRvbSBvciBMaWJlcnR5LCBhcyBlbGFib3JhdGVkIGluIHRoZSBQcmVhbWJsZSwgaXMgdmVyeSBlc3NlbnRpYWwgZm9yIHRoZSBzdWNjZXNzZnVsIGZ1bmN0aW9uaW5nIG9mIHRoZSAgSW5kaWFuIGRlbW9jcmF0aWMgc3lzdGVtLiBBYnNlbmNlIG9mIGNvbnN0cmFpbnRzIGlzIG9ubHkgb25lIGRpbWVuc2lvbiBvZiBmcmVlZG9tLiBGcmVlZG9tIGlzIGFsc28gIGFib3V0IGV4cGFuZGluZyB0aGUgYWJpbGl0eSBvZiBwZW9wbGUgdG8gZnJlZWx5IGV4cHJlc3MgdGhlbXNlbHZlcyBhbmQgZGV2ZWxvcCB0aGVpciBwb3RlbnRpYWwuIEZyZWVkb20gIGluIHRoaXMgc2Vuc2UgaXMgdGhlIGNvbmRpdGlvbiBpbiB3aGljaCBwZW9wbGUgY2FuIGRldmVsb3AgdGhlaXIgY3JlYXRpdml0eSBhbmQgY2FwYWJpbGl0aWVzLiAgIEhvd2V2ZXIsIEZyZWVkb20gZG9lcyBub3QgbWVhbiAnbGljZW5zZScgdG8gZG8gd2hhdCBvbmUgbGlrZXMgYW5kIGhhcyB0byBiZSBlbmpveWVkIHdpdGhpbiB0aGUgIGxpbWl0YXRpb25zIG1lbnRpb25lZCBpbiB0aGUgQ29uc3RpdHV0aW9uIGl0c2VsZi4gSW4gYnJpZWYsIHRoZSBmcmVlZG9tIGNvbmNlaXZlZCBieSB0aGUgUHJlYW1ibGUgb3IgIGZ1bmRhbWVudGFsIHJpZ2h0cyBpcyBub3QgYWJzb2x1dGUgYnV0IHF1YWxpZmllZC4gICBBbnkgZm9ybSBvZiBzb2NpYWwgbGl2aW5nIHJlcXVpcmVzIHNvbWUgcnVsZXMgYW5kIHJlZ3VsYXRpb24uIFRoZXNlIHJ1bGVzIG1heSByZXF1aXJlIHNvbWUgcmVzdHJhaW50cyB0byAgYmUgaW1wb3NlZCBvbiB0aGUgZnJlZWRvbSBvZiBpbmRpdmlkdWFscyBidXQgaXQgaXMgcmVjb2duaXNlZCB0aGF0IHN1Y2ggY29uc3RyYWludHMgbWF5IGFsc28gZnJlZSB1cyAgZnJvbSBpbnNlY3VyaXR5IGFuZCBwcm92aWRlIHVzIHdpdGggdGhlIGNvbmRpdGlvbnMgaW4gd2hpY2ggd2UgY2FuIGRldmVsb3Agb3Vyc2VsdmVzLiBJbiBwb2xpdGljYWwgdGhlb3J5ICBtdWNoIG9mIHRoZSBkaXNjdXNzaW9uIHJlZ2FyZGluZyBmcmVlZG9tIGhhcyB0aGVyZWZvcmUgZm9jdXNlZCBvbiB0cnlpbmcgdG8gZXZvbHZlIHByaW5jaXBsZXMgYnkgd2hpY2ggICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICB3ZSBjYW4gZGlzdGluZ3Vpc2ggYmV0d2VlbiBzb2NpYWxseSBuZWNlc3NhcnkgY29uc3RyYWludHMgYW5kIG90aGVyIHJlc3RyaWN0aW9ucy4gVG8gdW5kZXJzdGFuZCB3aGljaCAgc29jaWFsIGNvbnN0cmFpbnRzIGFyZSBuZWNlc3NhcnksIGRpc2N1c3Npb25zIG9uIGZyZWVkb20gbmVlZCB0byBsb29rIGF0IHRoZSBjb3JlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSAgaW5kaXZpZHVhbCBhbmQgdGhlIHNvY2lldHkgKG9yIGdyb3VwLCBjb21tdW5pdHksIG9yIHN0YXRlKSB3aXRoaW4gd2hpY2ggc2hlL2hlIGlzIHBsYWNlZC4gICBIZW5jZSwgaW4gdGhlIGFib3ZlIHF1ZXN0aW9uLCB0aGUgbW9zdCBhcHByb3ByaWF0ZSBkZWZpbml0aW9uIG9mIEZyZWVkb20gaXMgdGhlIGNvbmRpdGlvbiBpbiB3aGljaCBwZW9wbGUgIGNhbiBkZXZlbG9wIHRoZWlyIGNyZWF0aXZpdHkgYW5kIGNhcGFiaWxpdGllcy4gIFNvdXJjZTogTkNFUlQgWEksIFBvbGl0aWNhbCB0aGVvcnksIGNoYXB0ZXIgMiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Freedom is the condition in which people  can develop their capabilities. ",
        "option2" : " Freedom means absence of any type of rules  and regulations. ",
        "option3" : " Freedom is the privilege to do whatever one  likes. ",
        "option4" : " Freedom means the complete absence of  restraints and constraints.  "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements regarding the Fundamental Rights enshrined in the Indian Constitution: 1.  Any Fundamental Right can be repealed through the passage of ordinary bills. 2.  Both Parliament and state legislatures have power to make laws to give effect to any Fundamental Right. 3.  Ordinances issued by the President cannot be challenged in the courts as being violative of fundamental rights. Which of the statements given above is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IENvbnN0aXR1dGlvbjogIDEuIEFueSBGdW5kYW1lbnRhbCBSaWdodCBjYW4gYmUgcmVwZWFsZWQgdGhyb3VnaCB0aGUgcGFzc2FnZSBvZiBvcmRpbmFyeSBiaWxscy4gIDIuIEJvdGggUGFybGlhbWVudCBhbmQgc3RhdGUgbGVnaXNsYXR1cmVzIGhhdmUgcG93ZXIgdG8gbWFrZSBsYXdzIHRvIGdpdmUgZWZmZWN0IHRvIGFueSBGdW5kYW1lbnRhbCBSaWdodC4gIDMuIE9yZGluYW5jZXMgaXNzdWVkIGJ5IHRoZSBQcmVzaWRlbnQgY2Fubm90IGJlIGNoYWxsZW5nZWQgaW4gdGhlIGNvdXJ0cyBhcyBiZWluZyB2aW9sYXRpdmUgb2YgIGZ1bmRhbWVudGFsIHJpZ2h0cy4gIFdoaWNoIG9mIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGlzL2FyZSBpbmNvcnJlY3Q/ICBhKSAxIG9ubHkgIGIpIDIgYW5kIDMgb25seSAgYykgMyBvbmx5ICBkKSAxLCAyIGFuZCAzICAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBhcmUgZW5zaHJpbmVkIGluIFBhcnQgSUlJIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIChBcnRpY2xlcyAxMi0zNSkuIFBhcnQgIElJSSBvZiB0aGUgQ29uc3RpdHV0aW9uIGlzIGRlc2NyaWJlZCBhcyB0aGUgTWFnbmEgQ2FydGEgb2YgSW5kaWEuIFRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYXJlIG1lYW50IGZvciAgcHJvbW90aW5nIHRoZSBpZGVhbCBvZiBwb2xpdGljYWwgZGVtb2NyYWN5LiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBcnRpY2xlIDEzIGRlY2xhcmVzIHRoYXQgYWxsIGxhd3MgdGhhdCBhcmUgaW5jb25zaXN0ZW50IHdpdGggb3IgaW4gIGRlcm9nYXRpb24gb2YgYW55IG9mIHRoZSBmdW5kYW1lbnRhbCByaWdodHMgc2hhbGwgYmUgdm9pZC4gQXJ0aWNsZSAxMyAoMikgcHJvdmlkZXMgZm9yIHRoZSBwcm90ZWN0aW9uICBvZiB0aGUgZnVuZGFtZW50YWwgcmlnaHRzIG9mIHRoZSBjaXRpemVuLiBQYXJsaWFtZW50IGFuZCB0aGUgc3RhdGUgbGVnaXNsYXR1cmVzIGFyZSBjbGVhcmx5ICBwcm9oaWJpdGVkIGZyb20gbWFraW5nIGxhd3MgdGhhdCBtYXkgdGFrZSBhd2F5IG9yIGFicmlkZ2UgdGhlIGZ1bmRhbWVudGFsIHJpZ2h0cyBndWFyYW50ZWVkIHRvIHRoZSAgY2l0aXplbi4gVGhlIFBhcmxpYW1lbnQgY2FuIGN1cnRhaWwgb3IgcmVwZWFsIHRoZW0gYnV0IG9ubHkgYnkgYSBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgYWN0IGFuZCBub3QgYnkgIGFuIG9yZGluYXJ5IGFjdC4gTW9yZW92ZXIsIHRoaXMgY2FuIGJlIGRvbmUgd2l0aG91dCBhZmZlY3RpbmcgdGhlICdiYXNpYyBzdHJ1Y3R1cmUnIG9mIHRoZSBDb25zdGl0dXRpb24uICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMzUgbGF5cyBkb3duIHRoYXQgdGhlIHBvd2VyIHRvIG1ha2UgbGF3cyB0byBnaXZlIGVmZmVjdCB0byBjZXJ0YWluIHNwZWNpZmllZCAgZnVuZGFtZW50YWwgcmlnaHRzIHNoYWxsIHZlc3Qgb25seSBpbiB0aGUgUGFybGlhbWVudCBhbmQgbm90IGluIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMuIFBhcmxpYW1lbnQgc2hhbGwgaGF2ZSAgKGFuZCB0aGUgbGVnaXNsYXR1cmUgb2YgYSBzdGF0ZSBzaGFsbCBub3QgaGF2ZSkgcG93ZXJzIHRvIG1ha2UgbGF3cyBmb3IgcHJlc2NyaWJpbmcgcHVuaXNobWVudCBmb3IgdGhvc2UgIGFjdHMgdGhhdCBhcmUgZGVjbGFyZWQgdG8gYmUgb2ZmZW5jZXMgdW5kZXIgdGhlIGZ1bmRhbWVudGFsIHJpZ2h0cy4gVGhlc2UgaW5jbHVkZSB0aGUgZm9sbG93aW5nOiAoYSkgIFVudG91Y2hhYmlsaXR5IChBcnRpY2xlIDE3KS4gKGIpIFRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyIChBcnRpY2xlIDIzKS4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQXJ0aWNsZSAxMyBkZWNsYXJlcyB0aGF0IGFsbCBsYXdzIHRoYXQgYXJlIGluY29uc2lzdGVudCB3aXRoIG9yIGluIGRlcm9nYXRpb24gb2YgYW55ICBvZiB0aGUgZnVuZGFtZW50YWwgcmlnaHRzIHNoYWxsIGJlIHZvaWQuIFRlbXBvcmFyeSBsYXdzIGxpa2Ugb3JkaW5hbmNlcyBpc3N1ZWQgYnkgdGhlIFByZXNpZGVudCBvciB0aGUgIFN0YXRlIEdvdmVybm9ycyBjYW4gYmUgY2hhbGxlbmdlZCBpbiB0aGUgY291cnRzIGFzIHZpb2xhdGlvbiBvZiBGdW5kYW1lbnRhbCBSaWdodCBhbmQgaGVuY2UsIGNhbiBiZSAgZGVjbGFyZWQgYXMgdm9pZC4gIFNvdXJjZTogTSBsYXhtaWthbnQgKGNoYXAgNy0gRnVuZGFtZW50YWwgcmlnaHRzKSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 only ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements: 1.  Disinvestment involves compulsory transfer of more than half of the shareholding of the government in public sector enterprise to private hands.  2.  The main advantage of Disinvestment is lessening of fiscal burden on the government and achieve greater inflow of private capital.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IDEuIERpc2ludmVzdG1lbnQgaW52b2x2ZXMgY29tcHVsc29yeSB0cmFuc2ZlciBvZiBtb3JlIHRoYW4gaGFsZiBvZiB0aGUgc2hhcmVob2xkaW5nIG9mIHRoZSBnb3Zlcm5tZW50IGluICBwdWJsaWMgc2VjdG9yIGVudGVycHJpc2UgdG8gcHJpdmF0ZSBoYW5kcy4gICAyLiBUaGUgbWFpbiBhZHZhbnRhZ2Ugb2YgRGlzaW52ZXN0bWVudCBpcyBsZXNzZW5pbmcgb2YgZmlzY2FsIGJ1cmRlbiBvbiB0aGUgZ292ZXJubWVudCBhbmQgYWNoaWV2ZSBncmVhdGVyICBpbmZsb3cgb2YgcHJpdmF0ZSBjYXBpdGFsLiAgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICBhKSAxIG9ubHkgIGIpIDIgb25seSAgYykgQm90aCAxIGFuZCAyICBkKSBOZWl0aGVyIDEgbm9yIDIgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRGlzaW52ZXN0bWVudCByZWZlcnMgdG8gYSBzdHJhdGVneSBvZiBzZWxsaW5nIG9mZiBvciBsaXF1aWRhdGluZyBzb21lIGFzc2V0cyBsaWtlICBwbGFudCwgZGl2aXNpb24sIHVuaXQsIGV0Yy4gb3duZWQgYnkgdGhlIGdvdmVybm1lbnQgb3IgdGhlIG9yZ2FuaXphdGlvbi4gVGhlIGtleSBkaWZmZXJlbmNlIGJldHdlZW4gIFByaXZhdGl6YXRpb24gYW5kIERpc2ludmVzdG1lbnQgaXMgdGhhdCBpbiBQcml2YXRpemF0aW9uLCB0aGUgZ292ZXJubWVudCBzZWxsIG1vcmUgdGhhbiA1MCAlIG9mIGl0cyAgc2hhcmVob2xkaW5ncywgd2hlcmVhcyBpbiBjYXNlIG9mIERpc2ludmVzdG1lbnQsIHNoYXJlaG9sZGluZ3MgbGVzcyB0aGFuIDUwICUgaXMgc29sZCBieSB0aGUgZ292ZXJubWVudC4gIEhvd2V2ZXIsIGRpdmVzdG1lbnQgZG9lc24ndCBuZWNlc3NhcmlseSBicmluZyB0aGUgZ292ZXJubWVudCBzdGFrZSBiZWxvdyA1MSUuIFRoZSBnb3Zlcm5tZW50IGRpdmVzdHMgIGl0cyBzdGFrZSBpbiBwdWJsaWMgc2VjdG9yIHVuZGVydGFraW5ncyB0byBtYWtlIG1vbmV5LiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG1haW4gYWR2YW50YWdlIG9mIERpc2ludmVzdG1lbnQgaXMgdGhhdCwgaXQgYWltcyBhdCBsZXNzZW5pbmcgdGhlIGZpc2NhbCBidXJkZW4gIG9uIHRoZSBnb3Zlcm5tZW50LiBUaGUgbWFpbiBvYmplY3RpdmVzIG9mIERpc2ludmVzdG1lbnQgYXJlICAxKSBUbyByZWR1Y2UgdGhlIGZpbmFuY2lhbCBidXJkZW4gb2YgdGhlIGdvdmVybm1lbnQgIDIpIFRvIGltcHJvdmUgcHVibGljIGZpbmFuY2VzICAzKSBUbyBpbmNyZWFzZSBncm93dGggb2YgdGhlIGZpcm0gIFRoZSBvdGhlciBhZHZhbnRhZ2VzIGluY2x1ZGUgYWNoaWV2ZSBncmVhdGVyIGluZmxvdyBvZiBwcml2YXRlIGNhcGl0YWwsIGFsbG93IGVudHJ5IGFuZCBleGl0IG9mIG5ldyBmaXJtcyAgaW50byB0aGUgbWFya2V0IHRodXMgaW5jcmVhc2luZyBjb21wZXRpdGlvbi4gIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9wcml2YXRpc2F0aW9uLWlzLWZhci1tb3JlLWRpZmZpY3VsdC10aGFuLWNvbnNvbGlkYXRpb24vICBEaWZmZXJlbmNlIGJldHdlZW4gUHJpdmF0aXphdGlvbiBhbmQgZGlzaW52ZXN0bWVudCB8IFN0ZXJsaW5nIEVkdWNhdGlvbiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 6,
      "question" : "What are the exceptions exclusively mentioned under Article 15 of Indian Constitution that allows the State to make special provisions for certain classes?  1.  Special provision for transgender communities  2.  Special provision for women and children 3.  Special provision for economically weaker sections of citizens 4.  Special provision for physically disabled persons 5.  Special provision for Scheduled Castes and Scheduled Tribes Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IFN0YXRlIHRvIG1ha2Ugc3BlY2lhbCBwcm92aXNpb25zIGZvciBjZXJ0YWluIGNsYXNzZXM/ICAgMS4gU3BlY2lhbCBwcm92aXNpb24gZm9yIHRyYW5zZ2VuZGVyIGNvbW11bml0aWVzICAgMi4gU3BlY2lhbCBwcm92aXNpb24gZm9yIHdvbWVuIGFuZCBjaGlsZHJlbiAgMy4gU3BlY2lhbCBwcm92aXNpb24gZm9yIGVjb25vbWljYWxseSB3ZWFrZXIgc2VjdGlvbnMgb2YgY2l0aXplbnMgIDQuIFNwZWNpYWwgcHJvdmlzaW9uIGZvciBwaHlzaWNhbGx5IGRpc2FibGVkIHBlcnNvbnMgIDUuIFNwZWNpYWwgcHJvdmlzaW9uIGZvciBTY2hlZHVsZWQgQ2FzdGVzIGFuZCBTY2hlZHVsZWQgVHJpYmVzICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgYSkgMSwgMiBhbmQgMyBvbmx5ICBiKSAyLCAzIGFuZCA1IG9ubHkgIGMpIDIgYW5kIDQgb25seSAgZCkgMSwgMiwgNCBhbmQgNSBvbmx5ICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBBcnRpY2xlIDE1IHByb3ZpZGVzIHRoYXQgdGhlIFN0YXRlIHNoYWxsIG5vdCBkaXNjcmltaW5hdGUgYWdhaW5zdCBhbnkgY2l0aXplbiBvbiBncm91bmRzIG9ubHkgb2YgcmVsaWdpb24sIHJhY2UsICBjYXN0ZSwgc2V4IG9yIHBsYWNlIG9mIGJpcnRoLiAgU3RhdGVtZW50cyAyLCAzIGFuZCA1IGFyZSBjb3JyZWN0OiBUaGVyZSBhcmUgZm91ciBleGNlcHRpb25zIHRvIHRoZSBnZW5lcmFsIHJ1bGUgb2Ygbm9uLWRpc2NyaW1pbmF0aW9uICBtZW50aW9uZWQgdW5kZXIgQXJ0aWNsZSAxNSBvZiBJbmRpYW4gQ29uc3RpdHV0aW9uLiAgMSkgVGhlIHN0YXRlIGlzIHBlcm1pdHRlZCB0byBtYWtlIGFueSBzcGVjaWFsIHByb3Zpc2lvbiBmb3Igd29tZW4gYW5kIGNoaWxkcmVuLiBGb3IgZXhhbXBsZSwgcmVzZXJ2YXRpb24gIG9mIHNlYXRzIGZvciB3b21lbiBpbiBsb2NhbCBib2RpZXMgb3IgcHJvdmlzaW9uIG9mIGZyZWUgZWR1Y2F0aW9uIGZvciBjaGlsZHJlbi4gIDIpIFRoZSBzdGF0ZSBpcyBwZXJtaXR0ZWQgdG8gbWFrZSBhbnkgc3BlY2lhbCBwcm92aXNpb24gZm9yIHRoZSBhZHZhbmNlbWVudCBvZiBhbnkgc29jaWFsbHkgYW5kICBlZHVjYXRpb25hbGx5IGJhY2t3YXJkIGNsYXNzZXMgb2YgY2l0aXplbnMgb3IgZm9yIHRoZSBzY2hlZHVsZWQgY2FzdGVzIGFuZCBzY2hlZHVsZWQgdHJpYmVzLiBGb3IgIGV4YW1wbGUsIHJlc2VydmF0aW9uIG9mIHNlYXRzIG9yIGZlZSBjb25jZXNzaW9ucyBpbiBwdWJsaWMgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zLiAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIDMpIFRoZSBzdGF0ZSBpcyBlbXBvd2VyZWQgdG8gbWFrZSBhbnkgc3BlY2lhbCBwcm92aXNpb24gZm9yIHRoZSBhZHZhbmNlbWVudCBvZiBhbnkgZWNvbm9taWNhbGx5IHdlYWtlciAgc2VjdGlvbnMgb2YgY2l0aXplbnMuICBTdGF0ZW1lbnRzIDEgYW5kIDQgYXJlIGluY29ycmVjdDogQ29uc3RpdHV0aW9uIHVuZGVyIEFydGljbGUgMTUgZG9lcyBub3QgcHJvdmlkZSBhbnkgZXhjbHVzaXZlIGV4Y2VwdGlvbiAgZm9yIHRoZSBTcGVjaWFsIHByb3Zpc2lvbiBmb3IgdHJhbnNnZW5kZXIgY29tbXVuaXRpZXMgd2l0aCBleHRlbmRlZCBzY29wZSBhbmQgU3BlY2lhbCBwcm92aXNpb24gZm9yICBwaHlzaWNhbGx5IGRpc2FibGVkIHBlcnNvbnMuICBTb3VyY2U6IExheG1pa2FudGggQ2hhcHRlciA3IEZ1bmRhbWVudGFsIFJpZ2h0cyAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "2, 3 and 5 only ",
        "option3" : "2 and 4 only ",
        "option4" : "1, 2, 4 and 5 only          . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements: 1.  The concept of 'equality before law' is of British origin while the concept of 'equal protection of laws' has been taken from the American Constitution. 2.  Unlike the concept of 'equality before law', the 'equal protection of laws' advocates absence of special privileges in favour of any person. 3.  Indian Constitution has rejected the concept of 'equal protection of laws' in favour of the concept of 'equality before the law'. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IDEuIFRoZSBjb25jZXB0IG9mICdlcXVhbGl0eSBiZWZvcmUgbGF3JyBpcyBvZiBCcml0aXNoIG9yaWdpbiB3aGlsZSB0aGUgY29uY2VwdCBvZiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzJyBoYXMgIGJlZW4gdGFrZW4gZnJvbSB0aGUgQW1lcmljYW4gQ29uc3RpdHV0aW9uLiAgMi4gVW5saWtlIHRoZSBjb25jZXB0IG9mICdlcXVhbGl0eSBiZWZvcmUgbGF3JywgdGhlICdlcXVhbCBwcm90ZWN0aW9uIG9mIGxhd3MnIGFkdm9jYXRlcyBhYnNlbmNlIG9mIHNwZWNpYWwgIHByaXZpbGVnZXMgaW4gZmF2b3VyIG9mIGFueSBwZXJzb24uICAzLiBJbmRpYW4gQ29uc3RpdHV0aW9uIGhhcyByZWplY3RlZCB0aGUgY29uY2VwdCBvZiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzJyBpbiBmYXZvdXIgb2YgdGhlIGNvbmNlcHQgb2YgICdlcXVhbGl0eSBiZWZvcmUgdGhlIGxhdycuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgb25seSAgYikgMiBhbmQgMyBvbmx5ICBjKSAxIGFuZCAzIG9ubHkgIGQpIDEgYW5kIDIgb25seSAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGV4cHJlc3Npb24gJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIHN0ZW1zIGZyb20gdGhlIEVuZ2xpc2ggQ29tbW9uIExhdyAoQnJpdGlzaCkgIGFuZCB0aGUgZXhwcmVzc2lvbiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXcnIHN0ZW1zIGZyb20gdGhlIEFtZXJpY2FuIENvbnN0aXR1dGlvbi4gVGhlIGNvbmNlcHQgb2YgICdlcXVhbGl0eSBiZWZvcmUgbGF3JyBpcyBhbiBlbGVtZW50IG9mIHRoZSBjb25jZXB0IG9mICdSdWxlIG9mIExhdycsIHByb3BvdW5kZWQgYnkgQS5WLiBEaWNleSwgdGhlIEJyaXRpc2ggIGp1cmlzdC4gV2hpbGUsIHRoZSBGb3VydGVlbnRoIEFtZW5kbWVudCdzIEVxdWFsIFByb3RlY3Rpb24gQ2xhdXNlIG9mIFVTIENvbnN0aXR1dGlvbiByZXF1aXJlcyBzdGF0ZXMgdG8gIHByYWN0aWNlIGVxdWFsIHByb3RlY3Rpb24uICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgZXhwcmVzc2lvbiAnZXF1YWxpdHkgYmVmb3JlIGxhdycgaXMgYSBuZWdhdGl2ZSBjb25jZXB0IGFzIGl0IGltcGxpZXMgYW4gIGFic2VuY2Ugb2Ygc3BlY2lhbCBwcml2aWxlZ2VzIHRoYXQgZmF2b3VyIGFueSBpbmRpdmlkdWFsLiBIb3dldmVyLCB0aGUgZXhwcmVzc2lvbiAnZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXcnICBvbiB0aGUgb3RoZXIgaGFuZCwgaXMgYSBwb3NpdGl2ZSBjb25jZXB0IGFzIGl0IHNpbXBseSBtZWFucyB0aGF0IHRoZXJlIHNob3VsZCBiZSBlcXVhbGl0eSBvZiB0cmVhdG1lbnQgb2YgIGluZGl2aWR1YWxzIGluIHNpbWlsYXIgY2lyY3Vtc3RhbmNlcy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluZGlhbiBDb25zdGl0dXRpb24gaGFzIGFjY2VwdGVkIGJvdGggdGhlIGNvbmNlcHQgb2YgJ2VxdWFsaXR5IGJlZm9yZSBsYXcnIGFuZCAgJ2VxdWFsIHByb3RlY3Rpb24gb2YgbGF3cycgdW5kZXIgQXJ0aWNsZSAxNC4gSXQgc2F5cyB0aGF0IHRoZSBTdGF0ZSBzaGFsbCBub3QgZGVueSB0byBhbnkgcGVyc29uIGVxdWFsaXR5IGJlZm9yZSAgdGhlIGxhdyBvciB0aGUgZXF1YWwgcHJvdGVjdGlvbiBvZiB0aGUgbGF3cyB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gV2hlcmV2ZXIgdGhlcmUgaXMgbm8gZXF1YWwgIHByb3RlY3Rpb24gb2YgbGF3LCB0aGVyZSBpcyBubyBlcXVhbGl0eSBiZWZvcmUgbGF3LiBUaGUgQ29uc3RpdHV0aW9uIHBlcm1pdHMgdGhlIFN0YXRlIHRvIGVuYWN0IGxhd3MgdGhhdCAgYXBwbHkgdG8gb25seSBjZXJ0YWluIGNsYXNzZXMgb2YgcGVvcGxlIGZvciBhY2hpZXZpbmcgY2VydGFpbiByZWFzb25hYmxlIG9iamVjdHMuICAgU291cmNlOiAgTGF4bWlrYW50aCBDaGFwdGVyIDcgRnVuZGFtZW50YWwgUmlnaHRzICBFcXVhbGl0eSBiZWZvcmUgbGF3IGFuZCBlcXVhbCBwcm90ZWN0aW9uIG9mIGxhdyAtIGlQbGVhZGVycyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1 and 2 only  "
      }
    },
    {
      "index" : 8,
      "question" : "Which of the following principles constitute the components of 'social justice'? 1.  Principle of treating equals equally 2.  Rewarding people in proportion to their effort 3.  Recognizing special needs of people while distributing rewards Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IDEuIFByaW5jaXBsZSBvZiB0cmVhdGluZyBlcXVhbHMgZXF1YWxseSAgMi4gUmV3YXJkaW5nIHBlb3BsZSBpbiBwcm9wb3J0aW9uIHRvIHRoZWlyIGVmZm9ydCAgMy4gUmVjb2duaXppbmcgc3BlY2lhbCBuZWVkcyBvZiBwZW9wbGUgd2hpbGUgZGlzdHJpYnV0aW5nIHJld2FyZHMgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGUgZ2l2ZW4gYmVsb3c6ICBhKSAxIG9ubHkgIGIpIDEgYW5kIDIgb25seSAgYykgMiBhbmQgMyBvbmx5ICBkKSAxLCAyIGFuZCAzICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIgIEFsbCBvZiB0aGVtIGFyZSBjb3JyZWN0LiBUaGUgdGhyZWUgcHJpbmNpcGxlcyBvZiBzb2NpYWwganVzdGljZSBhcmU6ICAxKSBQcmluY2lwbGUgb2YgdHJlYXRpbmcgZXF1YWxzIGVxdWFsbHk6IEl0IGlzIGNvbnNpZGVyZWQgdGhhdCBhbGwgaW5kaXZpZHVhbHMgc2hhcmUgY2VydGFpbiBjaGFyYWN0ZXJpc3RpY3MgYXMgIGh1bWFuIGJlaW5ncy4gVGhlcmVmb3JlLCB0aGV5IGRlc2VydmUgZXF1YWwgcmlnaHRzIGFuZCBlcXVhbCB0cmVhdG1lbnQuICAyKSBQcm9wb3J0aW9uYWxpdHk6IFByb3ZpZGVkIGV2ZXJ5Ym9keSBzdGFydHMgZnJvbSB0aGUgc2FtZSBiYXNlIGxpbmUgb2YgZXF1YWwgcmlnaHRzLCBqdXN0aWNlIGluIHN1Y2ggY2FzZXMgIHdvdWxkIG1lYW4gcmV3YXJkaW5nIHBlb3BsZSBpbiBwcm9wb3J0aW9uIHRvIHRoZSBzY2FsZSBhbmQgcXVhbGl0eSBvZiB0aGVpciBlZmZvcnQuIEZvciBqdXN0aWNlIGluICBzb2NpZXR5LCB0aGUgcHJpbmNpcGxlIG9mIGVxdWFsIHRyZWF0bWVudCBuZWVkcyB0byBiZSBiYWxhbmNlZCB3aXRoIHRoZSBwcmluY2lwbGUgb2YgcHJvcG9ydGlvbmFsaXR5LiAgMykgUmVjb2duaXRpb24gb2Ygc3BlY2lhbCBuZWVkczogQSBzb2NpZXR5IG5lZWRzIHRvIHRha2UgaW50byBhY2NvdW50IHNwZWNpYWwgbmVlZHMgb2YgcGVvcGxlIHdoaWxlICBkaXN0cmlidXRpbmcgcmV3YXJkcyBvciBkdXRpZXMuIEl0IGRvZXMgbm90IG5lY2Vzc2FyaWx5IGNvbnRyYWRpY3QgdGhlIHByaW5jaXBsZSBvZiBlcXVhbCB0cmVhdG1lbnQgc28gIG11Y2ggYXMgZXh0ZW5kIGl0IGJlY2F1c2UgdGhlIHByaW5jaXBsZSBvZiB0cmVhdGluZyBlcXVhbHMgZXF1YWxseSBjb3VsZCBpbXBseSB0aGF0IHBlb3BsZSB3aG8gYXJlIG5vdCAgZXF1YWwgaW4gY2VydGFpbiBpbXBvcnRhbnQgcmVzcGVjdHMgY291bGQgYmUgdHJlYXRlZCBkaWZmZXJlbnRseS4gIFNvdXJjZTogUG9saXRpY2FsIFRoZW9yeSwgTkNFUlQgWEksIENoYXB0ZXItNCwgUGcuIDU1LTU3ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 9,
      "question" : "Which one of the following statements most appropriately defines the meaning of 'Rights'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IGEpIFRoZXkgYXJlIG1vcmFsIGRlbWFuZHMgb2YgYSBzb2NpZXR5IGZvciBpdHMgb3duIHNlbGYtZGV2ZWxvcG1lbnQuICBiKSBUaGV5IGFyZSBpbmNlbnRpdmVzIGdpdmVuIGJ5IHRoZSBTdGF0ZSB0byB0aGUgcGVvcGxlIGluIHJldHVybiBmb3IgdGhlaXIgb2JlZGllbmNlIHRvd2FyZHMgdGhlIHJ1bGUgb2YgIGxhdy4gIGMpIFRoZXkgYXJlIHJlYXNvbmFibGUgY2xhaW1zIG9mIHBlcnNvbnMgcmVjb2duaXNlZCBieSBzb2NpZXR5IGFuZCBzYW5jdGlvbmVkIGJ5IGxhdy4gIGQpIFRoZXkgYXJlIG9ibGlnYXRpb25zIG1hbmRhdGVkIG9uIHRoZSBTdGF0ZSBpbiBvcmRlciB0byBwcm9tb3RlIHNvY2lhbCB3ZWxmYXJlLiAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUmlnaHRzIGFyZSByZWFzb25hYmxlIGNsYWltcyBvZiBwZXJzb25zIHJlY29nbmlzZWQgYnkgc29jaWV0eSBhbmQgc2FuY3Rpb25lZCBieSBsYXcuICAxKSBSaWdodHMgYXJlIGNsYWltcyBvZiBhIHBlcnNvbiBvdmVyIG90aGVyIGZlbGxvdyBiZWluZ3MsIG92ZXIgdGhlIHNvY2lldHkgYW5kIG92ZXIgdGhlIGdvdmVybm1lbnQuIEEgcmlnaHQgIGlzIHBvc3NpYmxlIHdoZW4geW91IG1ha2UgYSBjbGFpbSB0aGF0IGlzIGVxdWFsbHkgcG9zc2libGUgZm9yIG90aGVycy4gWW91IGNhbm5vdCBoYXZlIGEgcmlnaHQgdGhhdCBoYXJtcyAgb3IgaHVydHMgb3RoZXJzLiBZb3UgY2Fubm90IGhhdmUgYSByaWdodCB0byBwbGF5IGEgZ2FtZSBpbiBzdWNoIGEgd2F5IHRoYXQgaXQgYnJlYWtzIHRoZSBuZWlnaGJvdXIncyAgd2luZG93ICAyKSBSaWdodHMgYWNxdWlyZSBtZWFuaW5nIG9ubHkgaW4gc29jaWV0eS4gRXZlcnkgc29jaWV0eSBtYWtlcyBjZXJ0YWluIHJ1bGVzIHRvIHJlZ3VsYXRlIG91ciBjb25kdWN0LiAgVGhleSB0ZWxsIHVzIHdoYXQgaXMgcmlnaHQgYW5kIHdoYXQgaXMgd3JvbmcuIFdoYXQgaXMgcmVjb2duaXNlZCBieSB0aGUgc29jaWV0eSBhcyByaWdodGZ1bCBiZWNvbWVzIHRoZSAgYmFzaXMgb2YgcmlnaHRzLiBUaGF0IGlzIHdoeSB0aGUgbm90aW9uIG9mIHJpZ2h0cyBjaGFuZ2VzIGZyb20gdGltZSB0byB0aW1lIGFuZCBzb2NpZXR5IHRvIHNvY2lldHkuICAzKSBXaGVuIHRoZSBzb2NpYWxseSByZWNvZ25pc2VkIGNsYWltcyBhcmUgd3JpdHRlbiBpbnRvIGxhdywgdGhleSBhY3F1aXJlIHJlYWwgZm9yY2UuIE90aGVyd2lzZSwgdGhleSAgcmVtYWluIG1lcmVseSBhcyBuYXR1cmFsIG9yIG1vcmFsIHJpZ2h0cy4gV2hlbiBsYXcgcmVjb2duaXNlcyBzb21lIGNsYWltcywgdGhleSBiZWNvbWUgZW5mb3JjZWFibGUuICBXZSBjYW4gdGhlbiBkZW1hbmQgdGhlaXIgYXBwbGljYXRpb24uIFdoZW4gZmVsbG93IGNpdGl6ZW5zIG9yIHRoZSBnb3Zlcm5tZW50IGRvIG5vdCByZXNwZWN0IHRoZXNlICByaWdodHMsIHdlIGNhbGwgaXQgdmlvbGF0aW9uIG9yIGluZnJpbmdlbWVudCBvZiBvdXIgcmlnaHRzLiBJbiBzdWNoIGNpcmN1bXN0YW5jZXMgY2l0aXplbnMgY2FuIGFwcHJvYWNoICBjb3VydHMgdG8gcHJvdGVjdCB0aGVpciByaWdodHMuICBTb3VyY2U6IE5DRVJUIElYLCBEZW1vY3JhdGljIHBvbGl0aWNzIGNoYXB0ZXIgNiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They are moral demands of a society for its  own self-development. ",
        "option2" : " They are incentives given by the State to the  people in return for their obedience  towards the rule of law. ",
        "option3" : " They are reasonable claims of persons  recognised by society and sanctioned by  law. ",
        "option4" : " They are obligations mandated on the State  in order to promote social welfare.  "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to 'International Space Laws', which of the following agreements are signed by India? 1. Rescue Agreement 2. The Outer Space Treaty 3. Artemis Accord 4. Moon Agreement Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IDEuIFJlc2N1ZSBBZ3JlZW1lbnQgIDIuIFRoZSBPdXRlciBTcGFjZSBUcmVhdHkgIDMuIEFydGVtaXMgQWNjb3JkICA0LiBNb29uIEFncmVlbWVudCAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZXMgZ2l2ZW4gYmVsb3c6ICBhKSAxIGFuZCAyIG9ubHkgIGIpIDEsIDIgYW5kIDQgb25seSAgYykgMiBhbmQgNCBvbmx5ICBkKSAxLCAyLCAzIGFuZCA0ICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBPcHRpb24gMSBpcyBjb3JyZWN0LiBBZ3JlZW1lbnQgb24gdGhlIHJlc2N1ZSBvZiBBc3Ryb25hdXRzLCB0aGUgUmV0dXJuIG9mIEFzdHJvbmF1dHMgYW5kIHRoZSByZXR1cm4gb2YgIG9iamVjdHMgbGF1bmNoZWQgaW50byBPdXRlciBTcGFjZSwgYWxzbyByZWZlcnJlZCB0byBhcyB0aGUgUmVzY3VlIEFncmVlbWVudCBpcyBhbiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudCAgc2V0dGluZyBmb3J0aCByaWdodHMgYW5kIG9ibGlnYXRpb25zIG9mIHN0YXRlcyBjb25jZXJuaW5nIHRoZSByZXNjdWUgb2YgcGVyc29ucyBpbiBzcGFjZS4gVGhlIEFncmVlbWVudCAgd2FzIGNyZWF0ZWQgYnkgYSAxOSBEZWNlbWJlciAxOTY3IGNvbnNlbnN1cyB2b3RlIGluIHRoZSBVbml0ZWQgTmF0aW9ucyBHZW5lcmFsIEFzc2VtYmx5IChSZXNvbHV0aW9uICAyMzQ1IChYWElJKSkuIEl0IGNhbWUgaW50byBmb3JjZSBvbiAzIERlY2VtYmVyIDE5NjguIEluZGlhIGhhcyBzaWduZWQgYW5kIHJhdGlmaWVkIHRoZSBSZXNjdWUgQWdyZWVtZW50LiAgT3B0aW9uIDIgaXMgY29ycmVjdC4gVGhlIE91dGVyIFNwYWNlIFRyZWF0eSwgZm9ybWFsbHkgdGhlIFRyZWF0eSBvbiBQcmluY2lwbGVzIEdvdmVybmluZyB0aGUgQWN0aXZpdGllcyBvZiAgU3RhdGVzIGluIHRoZSBFeHBsb3JhdGlvbiBhbmQgVXNlIG9mIE91dGVyIFNwYWNlLCBpbmNsdWRpbmcgdGhlIE1vb24gYW5kIE90aGVyIENlbGVzdGlhbCBCb2RpZXMsIGlzIGEgIG11bHRpbGF0ZXJhbCB0cmVhdHkgdGhhdCBmb3JtcyB0aGUgYmFzaXMgb2YgaW50ZXJuYXRpb25hbCBzcGFjZSBsYXcuIE5lZ290aWF0ZWQgYW5kIGRyYWZ0ZWQgdW5kZXIgdGhlICBhdXNwaWNlcyBvZiB0aGUgVW5pdGVkIE5hdGlvbnMsIGl0IHdhcyBvcGVuZWQgZm9yIHNpZ25hdHVyZSBvbiAyNyBKYW51YXJ5IDE5NjcsIGVudGVyaW5nIGludG8gZm9yY2Ugb24gMTAgIE9jdG9iZXIgMTk2Ny4gSW5kaWEgaGFzIHNpZ25lZCBPdXRlciBTcGFjZSBUcmVhdHkgb24gM3JkIE1hcmNoLCAxOTY3LiAgT3B0aW9uIDMgaXMgaW5jb3JyZWN0LiBUaGUgQXJ0ZW1pcyBBY2NvcmRzIGFyZSBhbiBpbnRlcm5hdGlvbmFsIGFncmVlbWVudCBiZXR3ZWVuIGdvdmVybm1lbnRzICBwYXJ0aWNpcGF0aW5nIGluIHRoZSBBcnRlbWlzIFByb2dyYW0sIGFuIEFtZXJpY2FuLWxlZCBlZmZvcnQgdG8gcmV0dXJuIGh1bWFucyB0byB0aGUgTW9vbiBieSAyMDI0LCB3aXRoICB0aGUgdWx0aW1hdGUgZ29hbCBvZiBleHBhbmRpbmcgc3BhY2UgZXhwbG9yYXRpb24uIEl0IGVuc3VyZXMgdGhhdCBzcGFjZSBleHBsb3JhdGlvbiBpcyBjb25kdWN0ZWQgaW4gYSBzYWZlLCAgc3VzdGFpbmFibGUgYW5kIHRyYW5zcGFyZW50IG1hbm5lciBhbmQgaW4gZnVsbCBjb21wbGlhbmNlIHdpdGggaW50ZXJuYXRpb25hbCBsYXcuIEluZGlhIGhhcyBub3QgeWV0ICBzaWduZWQgQXJ0ZW1pcyBBY2NvcmRzLiBVUyBoYXMgaW52aXRlZCBJbmRpYSB0byBqb2luIHRoZSBhY2NvcmRzIGFuZCBzb21lIHByZWxpbWluYXJ5IG9mZmljaWFsIGRpc2N1c3Npb24gIG9uIHRoZSBpc3N1ZSB0b29rIHBsYWNlIGJldHdlZW4gdGhlIHR3byBzaWRlcyB3aGVuIEluZGlhbiBQTSBtZXQgVVMgUHJlc2lkZW50IGF0IHRoZSBXaGl0ZSBIb3VzZSBmb3IgIHRoZSBiaWxhdGVyYWwgc3VtbWl0IGxhc3QgbW9udGggKFNlcHQgMjAyMSkuICBPcHRpb24gNCBpcyBjb3JyZWN0LiBUaGUgQWdyZWVtZW50IEdvdmVybmluZyB0aGUgQWN0aXZpdGllcyBvZiBTdGF0ZXMgb24gdGhlIE1vb24gYW5kIE90aGVyIENlbGVzdGlhbCAgQm9kaWVzLCBiZXR0ZXIga25vd24gYXMgdGhlIE1vb24gVHJlYXR5IG9yIE1vb24gQWdyZWVtZW50LCBpcyBhIG11bHRpbGF0ZXJhbCB0cmVhdHkgdGhhdCB0dXJucyAganVyaXNkaWN0aW9uIG9mIGFsbCBjZWxlc3RpYWwgYm9kaWVzIChpbmNsdWRpbmcgdGhlIG9yYml0cyBhcm91bmQgc3VjaCBib2RpZXMpIG92ZXIgdG8gdGhlIHBhcnRpY2lwYW50IGNvdW50cmllcy4gIFRodXMsIGFsbCBhY3Rpdml0aWVzIHdvdWxkIGNvbmZvcm0gdG8gaW50ZXJuYXRpb25hbCBsYXcsIGluY2x1ZGluZyB0aGUgVW5pdGVkIE5hdGlvbnMgQ2hhcnRlci4gIEluZGlhIGhhcyBzaWduZWQgdGhpcyAnQWdyZWVtZW50IEdvdmVybmluZyB0aGUgQWN0aXZpdGllcyBvZiBTdGF0ZXMgb24gdGhlIE1vb24gYW5kIE90aGVyIENlbGVzdGlhbCBCb2RpZXMgIGluIDE5ODIsIGJ1dCBuZXZlciByYXRpZmllZCBpdC4gIEFzIG9mIFNlcHRlbWJlciwgMjAyMSwgaXQgaGFzIG5vdCBiZWVuIHJhdGlmaWVkIGJ5IGFueSBzdGF0ZSB0aGF0IGVuZ2FnZXMgaW4gc2VsZi1sYXVuY2hlZCBodW1hbiBzcGFjZWZsaWdodCAgKGUuZy4gdGhlIFVuaXRlZCBTdGF0ZXMsIFJ1c3NpYSAoZm9ybWVyIFNvdmlldCBVbmlvbiksIFBlb3BsZSdzIFJlcHVibGljIG9mIENoaW5hKSBzaW5jZSBpdHMgY3JlYXRpb24gb24gIERlY2VtYmVyIDE4LCAxOTc5LCBhbmQgdGh1cyBpdCBoYXMgbGl0dGxlIHRvIG5vIHJlbGV2YW5jeSBpbiBpbnRlcm5hdGlvbmFsIGxhdy4gQXMgb2YgSmFudWFyeSAyMDE5LCAxOCBzdGF0ZXMgIGFyZSBwYXJ0aWVzIHRvIHRoZSB0cmVhdHkuICBTb3VyY2U6ICAgSW5kaWEgYW5kIHRoZSBnZW9wb2xpdGljcyBvZiB0aGUgbW9vbiAtRm9ydW1JQVMgQmxvZyAgV2hhdCBpcyBBcnRlbWlzIEFjY29yZHM/IC1Gb3J1bUlBUyBCbG9nICBTcGFjZSBMYXcgVHJlYXRpZXMgYW5kIFByaW5jaXBsZXMgKHVub29zYS5vcmcpICBSZXNjdWUgQWdyZWVtZW50ICh1bm9vc2Eub3JnKSAgV2h5IEluZGlhIHNob3VsZCBleGl0IHRoZSBNb29uIEFncmVlbWVudCAtIFRoZSBIaW5kdSBCdXNpbmVzc0xpbmUgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1, 2 and 4 only ",
        "option3" : "2 and 4 only ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 11,
      "question" : "Which of the following are envisaged by the Right against Exploitation in the Constitution of India?  1.  Prohibition of traffic in human beings and forced labour  2.  Abolition of untouchability  3.  Protection of the interests of minorities  4.  Prohibition of employment of children in factories and mines  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IDEuIFByb2hpYml0aW9uIG9mIHRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyICAgMi4gQWJvbGl0aW9uIG9mIHVudG91Y2hhYmlsaXR5ICAgMy4gUHJvdGVjdGlvbiBvZiB0aGUgaW50ZXJlc3RzIG9mIG1pbm9yaXRpZXMgICA0LiBQcm9oaWJpdGlvbiBvZiBlbXBsb3ltZW50IG9mIGNoaWxkcmVuIGluIGZhY3RvcmllcyBhbmQgbWluZXMgICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgIGEpIDEsIDIgYW5kIDQgb25seSAgIGIpIDIsIDMgYW5kIDQgb25seSAgIGMpIDEgYW5kIDQgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICAgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIFRoZSBSaWdodCBhZ2FpbnN0IEV4cGxvaXRhdGlvbiB1bmRlciBBcnRpY2xlcyAyMyBhbmQgMjQgb2YgdGhlIEluZGlhbiBDb25zdGl0dXRpb24gZ3VhcmFudGVlcyB0aGUgZGlnbml0eSAgb2YgdGhlIGluZGl2aWR1YWwuIFVuZGVyIHRoZXNlIC0gICBBcnRpY2xlIDIzIHByb2hpYml0cyB0cmFmZmljIGluIGh1bWFuIGJlaW5ncywgYmVnYXIgKGZvcmNlZCBsYWJvdXIpIGFuZCBvdGhlciBzaW1pbGFyIGZvcm1zIG9mIGZvcmNlZCAgbGFib3VyLiBBbnkgY29udHJhdmVudGlvbiBvZiB0aGlzIHByb3Zpc2lvbiBzaGFsbCBiZSBhbiBvZmZlbmNlIHB1bmlzaGFibGUgaW4gYWNjb3JkYW5jZSB3aXRoIGxhdy4gVGhpcyByaWdodCAgaXMgYXZhaWxhYmxlIHRvIGJvdGggY2l0aXplbnMgYW5kIG5vbi1jaXRpemVucy4gSXQgcHJvdGVjdHMgdGhlIGluZGl2aWR1YWwgbm90IG9ubHkgYWdhaW5zdCB0aGUgU3RhdGUgYnV0IGFsc28gIGFnYWluc3QgcHJpdmF0ZSBwZXJzb25zICBBcnRpY2xlIDI0IHByb2hpYml0cyB0aGUgZW1wbG95bWVudCBvZiBjaGlsZHJlbiBiZWxvdyB0aGUgYWdlIG9mIDE0IHllYXJzIGluIGFueSBmYWN0b3J5LCBtaW5lIG9yIG90aGVyICBoYXphcmRvdXMgYWN0aXZpdGllcyBsaWtlIGNvbnN0cnVjdGlvbiB3b3JrIG9yIHJhaWx3YXkuIEJ1dCBpdCBkb2VzIG5vdCBwcm9oaWJpdCB0aGVpciBlbXBsb3ltZW50IGluIGFueSAgaGFybWxlc3Mgb3IgaW5ub2NlbnQgd29yay4gIEFib2xpdGlvbiBvZiB1bnRvdWNoYWJpbGl0eSBhbmQgcHJvdGVjdGlvbiBvZiB0aGUgaW50ZXJlc3RzIG9mIG1pbm9yaXRpZXMgYXJlIGVudmlzYWdlZCB1bmRlciBBcnRpY2xlIDE3IGFuZCAgQXJ0aWNsZSAyOSBvZiB0aGUgQ29uc3RpdHV0aW9uIHJlc3BlY3RpdmVseS4gICBTb3VyY2UpIFVQU0MgQ1NFIDIwMTcgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to 'Article 20 of Indian Constitution', consider the following statements: 1.  It prohibits the retrospective imposition of any kind of civil liability on a person. 2. The Protection against Double Jeopardy is available in proceedings before departmental authorities. 3.  It protects an individual from any sort of compulsion to give thumb impressions or blood specimens. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IDEuIEl0IHByb2hpYml0cyB0aGUgcmV0cm9zcGVjdGl2ZSBpbXBvc2l0aW9uIG9mIGFueSBraW5kIG9mIGNpdmlsIGxpYWJpbGl0eSBvbiBhIHBlcnNvbi4gIDIuIFRoZSBQcm90ZWN0aW9uIGFnYWluc3QgRG91YmxlIEplb3BhcmR5IGlzIGF2YWlsYWJsZSBpbiBwcm9jZWVkaW5ncyBiZWZvcmUgZGVwYXJ0bWVudGFsIGF1dGhvcml0aWVzLiAgMy4gSXQgcHJvdGVjdHMgYW4gaW5kaXZpZHVhbCBmcm9tIGFueSBzb3J0IG9mIGNvbXB1bHNpb24gdG8gZ2l2ZSB0aHVtYiBpbXByZXNzaW9ucyBvciBibG9vZCBzcGVjaW1lbnMuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgb25seSAgYikgMSBhbmQgMiBvbmx5ICBjKSAyIGFuZCAzIG9ubHkgIGQpIE5vbmUgb2YgdGhlIGFib3ZlICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBBcnRpY2xlIDIwIG9mIEluZGlhbiBDb25zdGl0dXRpb24gZ3JhbnRzIHByb3RlY3Rpb24gYWdhaW5zdCBhcmJpdHJhcnkgYW5kIGV4Y2Vzc2l2ZSBwdW5pc2htZW50IHRvIGFuICBhY2N1c2VkIHBlcnNvbiwgd2hldGhlciBjaXRpemVuIG9yIGZvcmVpZ25lciBvciBsZWdhbCBwZXJzb24gbGlrZSBhIGNvbXBhbnkgb3IgYSBjb3Jwb3JhdGlvbi4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVW5kZXIgQXJ0aWNsZSAyMChhKSwgbm8gcGVyc29uIHNoYWxsIGJlIChpKSBjb252aWN0ZWQgb2YgYW55IG9mZmVuY2UgZXhjZXB0IGZvciAgdmlvbGF0aW9uIG9mIGEgbGF3IGluIGZvcmNlIGF0IHRoZSB0aW1lIG9mIHRoZSBjb21taXNzaW9uIG9mIHRoZSBhY3QsIG5vciAoaWkpIHN1YmplY3RlZCB0byBhIHBlbmFsdHkgZ3JlYXRlciAgdGhhbiB0aGF0IHByZXNjcmliZWQgYnkgdGhlIGxhdyBpbiBmb3JjZSBhdCB0aGUgdGltZSBvZiB0aGUgY29tbWlzc2lvbiBvZiB0aGUgYWN0LiBBbiBleC1wb3N0LWZhY3RvIGxhdyBpcyAgb25lIHRoYXQgaW1wb3NlcyBwZW5hbHRpZXMgcmV0cm9zcGVjdGl2ZWx5IChyZXRyb2FjdGl2ZWx5KSwgdGhhdCBpcywgdXBvbiBhY3RzIGFscmVhZHkgZG9uZSBvciB3aGljaCAgaW5jcmVhc2VzIHRoZSBwZW5hbHRpZXMgZm9yIHN1Y2ggYWN0cy4gVGhlIGVuYWN0bWVudCBvZiBzdWNoIGEgbGF3IGlzIHByb2hpYml0ZWQgYnkgdGhlIGZpcnN0IHByb3Zpc2lvbiBvZiAgQXJ0aWNsZSAyMC4gSG93ZXZlciwgdGhpcyBsaW1pdGF0aW9uIGlzIGltcG9zZWQgb25seSBvbiBjcmltaW5hbCBsYXdzIGFuZCBub3Qgb24gY2l2aWwgbGF3cyBvciB0YXggbGF3cy4gSW4gIG90aGVyIHdvcmRzLCBhIGNpdmlsIGxpYWJpbGl0eSBvciBhIHRheCBjYW4gYmUgaW1wb3NlZCByZXRyb3NwZWN0aXZlbHkuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMjAgc3RhdGVzIHRoYXQtIE5vIHBlcnNvbiBzaGFsbCBiZSBwcm9zZWN1dGVkIGFuZCBwdW5pc2hlZCBmb3IgdGhlIHNhbWUgIG9mZmVuY2UgbW9yZSB0aGFuIG9uY2UuIFRoZSBwcm90ZWN0aW9uIGFnYWluc3QgZG91YmxlIGplb3BhcmR5IGlzIGF2YWlsYWJsZSBvbmx5IGluIHByb2NlZWRpbmdzIGJlZm9yZSBhICBjb3VydCBvZiBsYXcgb3IgYSBqdWRpY2lhbCB0cmlidW5hbC4gSW4gb3RoZXIgd29yZHMsIGl0IGlzIG5vdCBhdmFpbGFibGUgaW4gcHJvY2VlZGluZ3MgYmVmb3JlIGRlcGFydG1lbnRhbCAgb3IgYWRtaW5pc3RyYXRpdmUgYXV0aG9yaXRpZXMgYXMgdGhleSBhcmUgbm90IG9mIGp1ZGljaWFsIG5hdHVyZS4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQXJ0aWNsZSAyMChjKSBzdGF0ZXMgdGhhdCBubyBwZXJzb24gYWNjdXNlZCBvZiBhbnkgb2ZmZW5jZSBzaGFsbCBiZSBjb21wZWxsZWQgdG8gIGJlIGEgd2l0bmVzcyBhZ2FpbnN0IGhpbXNlbGYgKG5vIHNlbGYtaW5jcmltaW5hdGlvbikuIFRoZSBwcm90ZWN0aW9uIGFnYWluc3Qgc2VsZi1pbmNyaW1pbmF0aW9uIGV4dGVuZHMgdG8gIGJvdGggb3JhbCBldmlkZW5jZSBhbmQgZG9jdW1lbnRhcnkgZXZpZGVuY2UuIEhvd2V2ZXIsIGl0IGRvZXMgbm90IGV4dGVuZCB0byAoaSkgY29tcHVsc29yeSBwcm9kdWN0aW9uICBvZiBtYXRlcmlhbCBvYmplY3RzLCAoaWkpIGNvbXB1bHNpb24gdG8gZ2l2ZSB0aHVtYiBpbXByZXNzaW9uLCBzcGVjaW1lbiBzaWduYXR1cmUsIGJsb29kIHNwZWNpbWVucywgYW5kICAoaWlpKSBjb21wdWxzb3J5IGV4aGliaXRpb24gb2YgdGhlIGJvZHkuIEZ1cnRoZXIsIGl0IGV4dGVuZHMgb25seSB0byBjcmltaW5hbCBwcm9jZWVkaW5ncyBhbmQgbm90IHRvIGNpdmlsICBwcm9jZWVkaW5ncyBvciBwcm9jZWVkaW5ncyB3aGljaCBhcmUgbm90IG9mIGNyaW1pbmFsIG5hdHVyZSAgU291cmNlOiAgTGF4bWlrYW50aCBDaGFwdGVyIDcgRnVuZGFtZW50YWwgUmlnaHRzICBQcm90ZWN0aW9uIGluIHJlc3BlY3Qgb2YgQ29udmljdGlvbiBmb3IgT2ZmZW5jZXM6IEEgQ29uc3RpdHV0aW9uYWwgQmxlbmQgKGlwbGVhZGVycy5pbikgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "None of the above       . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements regarding the Cultural and Educational Rights provided under Part III of the Constitution: 1.  The rights guaranteed under Article 29 are extended to both minority as well as majority religious communities. 2.  The right to conserve the language covers the right to agitate for the protection of the language.  3.  The right to establish educational institutions has been extended to religious minorities but not to linguistic minorities. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IElJSSBvZiB0aGUgQ29uc3RpdHV0aW9uOiAgMS4gVGhlIHJpZ2h0cyBndWFyYW50ZWVkIHVuZGVyIEFydGljbGUgMjkgYXJlIGV4dGVuZGVkIHRvIGJvdGggbWlub3JpdHkgYXMgd2VsbCBhcyBtYWpvcml0eSByZWxpZ2lvdXMgIGNvbW11bml0aWVzLiAgMi4gVGhlIHJpZ2h0IHRvIGNvbnNlcnZlIHRoZSBsYW5ndWFnZSBjb3ZlcnMgdGhlIHJpZ2h0IHRvIGFnaXRhdGUgZm9yIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBsYW5ndWFnZS4gICAzLiBUaGUgcmlnaHQgdG8gZXN0YWJsaXNoIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucyBoYXMgYmVlbiBleHRlbmRlZCB0byByZWxpZ2lvdXMgbWlub3JpdGllcyBidXQgbm90IHRvICBsaW5ndWlzdGljIG1pbm9yaXRpZXMuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gICBhKSAxIGFuZCAyIG9ubHkgICBiKSAyIGFuZCAzIG9ubHkgICBjKSAxIG9ubHkgICBkKSAxLCAyIGFuZCAzICAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQXJ0aWNsZSAyOSBhbmQgMzAgb2YgSW5kaWFuIGNvbnN0aXR1dGlvbiBwcm92aWRlcyBmb3IgdGhlIGN1bHR1cmFsIGFuZCBlZHVjYXRpb25hbCByaWdodHMgYXZhaWxhYmxlIHRvIHRoZSAgY2l0aXplbnMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQXJ0aWNsZSAyOSBncmFudHMgcHJvdGVjdGlvbiB0byBib3RoIHJlbGlnaW91cyBtaW5vcml0aWVzIGFzIHdlbGwgYXMgbGluZ3Vpc3RpYyAgbWlub3JpdGllcy4gSG93ZXZlciwgdGhlIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IHRoZSBzY29wZSBvZiB0aGlzIGFydGljbGUgaXMgbm90IG5lY2Vzc2FyaWx5IHJlc3RyaWN0ZWQgdG8gIG1pbm9yaXRpZXMgb25seSwgYXMgaXQgaXMgY29tbW9ubHkgYXNzdW1lZCB0byBiZS4gVGhpcyBpcyBiZWNhdXNlIG9mIHRoZSB1c2Ugb2Ygd29yZHMgJ3NlY3Rpb24gb2YgY2l0aXplbnMnICBpbiB0aGUgQXJ0aWNsZSB0aGF0IGluY2x1ZGUgbWlub3JpdGllcyBhcyB3ZWxsIGFzIG1ham9yaXR5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgcmlnaHQgdG8gY29uc2VydmUgdGhlIGxhbmd1YWdlIGluY2x1ZGVzIHRoZSByaWdodCAgdG8gYWdpdGF0ZSBmb3IgdGhlIHByb3RlY3Rpb24gb2YgdGhlIGxhbmd1YWdlLiBIZW5jZSwgdGhlIHBvbGl0aWNhbCBzcGVlY2hlcyBvciBwcm9taXNlcyBtYWRlIGZvciB0aGUgIGNvbnNlcnZhdGlvbiBvZiB0aGUgbGFuZ3VhZ2Ugb2YgYSBzZWN0aW9uIG9mIHRoZSBjaXRpemVucyBkb2VzIG5vdCBhbW91bnQgdG8gY29ycnVwdCBwcmFjdGljZSB1bmRlciB0aGUgIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0LCAxOTUxLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQXJ0aWNsZSAzMCBncmFudHMgdGhlIGZvbGxvd2luZyByaWdodHMgdG8gbWlub3JpdGllcywgd2hldGhlciByZWxpZ2lvdXMgb3IgIGxpbmd1aXN0aWM6ICAxKSBBbGwgbWlub3JpdGllcyBzaGFsbCBoYXZlIHRoZSByaWdodCB0byBlc3RhYmxpc2ggYW5kIGFkbWluaXN0ZXIgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb25zIG9mIHRoZWlyIGNob2ljZS4gIDIpIFRoZSBjb21wZW5zYXRpb24gYW1vdW50IGZpeGVkIGJ5IHRoZSBTdGF0ZSBmb3IgdGhlIGNvbXB1bHNvcnkgYWNxdWlzaXRpb24gb2YgYW55IHByb3BlcnR5IG9mIGEgIG1pbm9yaXR5IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIHNoYWxsIG5vdCByZXN0cmljdCBvciBhYnJvZ2F0ZSB0aGUgcmlnaHQgZ3VhcmFudGVlZCB0byB0aGVtLiBUaGlzICBwcm92aXNpb24gd2FzIGFkZGVkIGJ5IHRoZSA0NHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3OC4gICAzKSBJbiBncmFudGluZyBhaWQsIHRoZSBTdGF0ZSBzaGFsbCBub3QgZGlzY3JpbWluYXRlIGFnYWluc3QgYW55IGVkdWNhdGlvbmFsIGluc3RpdHV0aW9uIG1hbmFnZWQgYnkgYSAgbWlub3JpdHkuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50IC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDcgLSBGdW5kYW1lbnRhbCBSaWdodHMuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the implementation of Directive Principles of State Policy (DPSPs) in India, consider the following statements: 1.  The 25th Constitutional Amendment Act made all the DPSPs non-justiciable. 2.  There is no moral obligation on the government to implement the DPSPs. 3.  The 73rd Constitutional Amendment Act of 1992 has given effect to one of the Directive Principles. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IHRoZSBmb2xsb3dpbmcgc3RhdGVtZW50czogIDEuIFRoZSAyNXRoIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QgbWFkZSBhbGwgdGhlIERQU1BzIG5vbi1qdXN0aWNpYWJsZS4gIDIuIFRoZXJlIGlzIG5vIG1vcmFsIG9ibGlnYXRpb24gb24gdGhlIGdvdmVybm1lbnQgdG8gaW1wbGVtZW50IHRoZSBEUFNQcy4gIDMuIFRoZSA3M3JkIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3Qgb2YgMTk5MiBoYXMgZ2l2ZW4gZWZmZWN0IHRvIG9uZSBvZiB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgYW5kIDMgb25seSAgYikgMyBvbmx5ICBjKSAyIGFuZCAzIG9ubHkgIGQpIDEgYW5kIDIgb25seSAgIEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQWxsIHRoZSBEUFNQIHNpbmNlIHRoZSBhZG9wdGlvbiBhbmQgZW5mb3JjZW1lbnQgb2YgdGhlIGNvbnN0aXR1dGlvbiBoYXZlIGJlZW4gIG5vbi1qdXN0aWNpYWJsZS4gVGhlIDI1dGggYW1lbmRtZW50IGFjdCBwcm92aWRlZCB0aGF0IGFueSBsYXcgbWFkZSB0byBnaXZlIGVmZmVjdCB0byB0aGUgRGlyZWN0aXZlICBQcmluY2lwbGVzIGNvbnRhaW5lZCBpbiBBcnRpY2xlIDM5IChiKSBvciAoYykgY2Fubm90IGJlIGNoYWxsZW5nZWQgb24gdGhlIGdyb3VuZCBvZiB2aW9sYXRpb24gb2YgdGhlIHJpZ2h0cyAgZ3VhcmFudGVlZCBieSBBcnRpY2xlcyAxNCwgMTkgYW5kIDMxLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaG91Z2ggdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFyZSBub24tanVzdGljaWFibGUsIHRoZSBDb25zdGl0dXRpb24gKEFydGljbGUgIDM3KSBtYWtlcyBpdCBjbGVhciB0aGF0ICd0aGVzZSBwcmluY2lwbGVzIGFyZSBmdW5kYW1lbnRhbCBpbiB0aGUgZ292ZXJuYW5jZSBvZiB0aGUgY291bnRyeSBhbmQgaXQgc2hhbGwgYmUgIHRoZSBkdXR5IG9mIHRoZSBzdGF0ZSB0byBhcHBseSB0aGVzZSBwcmluY2lwbGVzIGluIG1ha2luZyBsYXdzJy4gVGh1cywgdGhleSBpbXBvc2UgYSBtb3JhbCBvYmxpZ2F0aW9uIG9uIHRoZSAgc3RhdGUgYXV0aG9yaXRpZXMgZm9yIHRoZWlyIGFwcGxpY2F0aW9uLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIDczcmQgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCwgMTk5MiwgaW1wbGVtZW50ZWQgdGhlIGNvbnN0aXR1dGlvbmFsICBvYmxpZ2F0aW9uIHN0YXRlZCBpbiBBcnRpY2xlIDQwIChPcmdhbmlzYXRpb24gb2YgdmlsbGFnZSBwYW5jaGF5YXRzKS4gIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBNLiBMYXhtaWthbnRoIDV0aCBlZGl0aW9uICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "3 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1 and 2 only  "
      }
    },
    {
      "index" : 15,
      "question" : "Recently, Indian Scientists has indigenously developed superior multilayer series of LTCC tapes and HTCC substrates. In this context, which of the following is/are the advantages of these technologies? 1.  It will result into reducing the volume and production time of satellite. 2.  It will be useful in building affordable housing for economically backward sections. 3.  It will be less toxic contributing towards environmental sustainability of the country. Select the correct answer using the options given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEhUQ0Mgc3Vic3RyYXRlcy4gSW4gdGhpcyBjb250ZXh0LCB3aGljaCBvZiB0aGUgZm9sbG93aW5nIGlzL2FyZSB0aGUgYWR2YW50YWdlcyBvZiB0aGVzZSB0ZWNobm9sb2dpZXM/ICAxLiBJdCB3aWxsIHJlc3VsdCBpbnRvIHJlZHVjaW5nIHRoZSB2b2x1bWUgYW5kIHByb2R1Y3Rpb24gdGltZSBvZiBzYXRlbGxpdGUuICAyLiBJdCB3aWxsIGJlIHVzZWZ1bCBpbiBidWlsZGluZyBhZmZvcmRhYmxlIGhvdXNpbmcgZm9yIGVjb25vbWljYWxseSBiYWNrd2FyZCBzZWN0aW9ucy4gIDMuIEl0IHdpbGwgYmUgbGVzcyB0b3hpYyBjb250cmlidXRpbmcgdG93YXJkcyBlbnZpcm9ubWVudGFsIHN1c3RhaW5hYmlsaXR5IG9mIHRoZSBjb3VudHJ5LiAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgb3B0aW9ucyBnaXZlbiBiZWxvdzogIGEpIDEgb25seSAgYikgMiBhbmQgMyBvbmx5ICBjKSAxIGFuZCAzIG9ubHkgIGQpIDEsIDIgYW5kIDMgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIENTSVItIE5JSVNUIChOYXRpb25hbCBJbnN0aXR1dGUgZm9yIEludGVyZGlzY2lwbGluYXJ5IFNjaWVuY2UgYW5kIFRlY2hub2xvZ3kpLCB1bmRlciB0aGUgcHVydmlldyBvZiAgJ0FkdmFuY2VkIE1hbnVmYWN0dXJpbmcgVGVjaG5pcXVlcyBzY2hlbWUnIG9mIERlcGFydG1lbnQgb2YgU2NpZW5jZSAmIFRlY2hub2xvZ3kgKERTVCkgaGFzICBpbmRpZ2Vub3VzbHkgZGV2ZWxvcGVkIHRveGljLWZyZWUgYW5kIHN1cGVyaW9yIG11bHRpbGF5ZXIgc2VyaWVzIG9mIExUQ0MgdGFwZXMgYW5kIEhUQ0MgIHN1YnN0cmF0ZXMgd2hpY2ggYXJlIG9uIHBhciB3aXRoIGludGVybmF0aW9uYWwgc3RhbmRhcmRzLiAgIFRoZXNlIHRlY2hub2xvZ2llcyBwYWNrYWdlIHRvZ2V0aGVyIGVsZWN0cm9uaWMgY29tcG9uZW50cyBsaWtlIHJlc2lzdG9ycywgY2FwYWNpdG9ycyB0byBwcm9kdWNlICBtdWx0aWxheWVyIGNpcmN1aXRzLCBhbiBhbGwtZ29sZCBzeXN0ZW0gYXMgYSBzdWJzdGl0dXRlIGZvciB0aGUgaW1wb3J0ZWQgY29tbWVyY2lhbCBMVENDIHRhcGUgc3lzdGVtLiBJdCAgY2FuIHdvcmsgYXMgYSBjb3N0LWVmZmVjdGl2ZSByZXBsYWNlbWVudCB0byB0aGUgY29tbWVyY2lhbCBMVENDIHRhcGVzIHdoaWNoIEluZGlhIGlzIGN1cnJlbnRseSAgaW1wb3J0aW5nLCB0aGVyZWJ5IHNhdmluZyBkcmFpbiBvZiBoZWF2eSBhbW91bnQgZnJvbSBJbmRpYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGVzZSB0ZWNobm9sb2dpZXMgYXJlIGhlbHBmdWwgaW4gbG93IG9yYml0IHNhdGVsbGl0ZSBzeXN0ZW1zIHdoaWNoIGFyZSBpbiBkZW1hbmQgIHRvZGF5LiBJdCB3aWxsIGhlbHAgaW4gc3VwcG9ydGluZyByZWR1Y2VkIHNhdGVsbGl0ZSB2b2x1bWUgYW5kIG1hc3MsIGJlc2lkZXMgcmVkdWNlZCBwcm9kdWN0aW9uIHRpbWUgYW5kICBhZmZvcmRhYmxlIGNvc3QuIFRoZXNlIHRhcGVzIGZpbmQgYXBwbGljYXRpb24gaW4gdmFyaW91cyBzYXRlbGxpdGUgY29tbXVuaWNhdGlvbiBjb21wb25lbnRzIHdoaWNoICByZXF1aXJlIHRob3VzYW5kcyBvZiBtaWNyb3dhdmUgc3Vic3RyYXRlcyBldmVyeSB5ZWFyIGFzIGFsc28gaW4gRGVmZXJlbmNlIFJlc2VhcmNoIGxhYm9yYXRvcmllcyBhbmQgIEJIRUwuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZXNlIHRlY2hub2xvZ2llcyBhcmUgc3BlY2lmaWNhbGx5IHVzZWQgaW4gc2F0ZWxsaXRlIGFuZCBkZWZlbnNlIHRlY2hub2xvZ2llcyBhbmQgIGhhcyBubyB1c2VmdWwgYXBwbGljYXRpb24gYnVpbGRpbmcgYWZmb3JkYWJsZSBob3VzaW5nLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEl0IGlzIGxlc3MgdG94aWMgYW5kIG1vcmUgZW52aXJvbm1lbnQgZnJpZW5kbHkuIEFuIGFxdWVvdXMgdGFwZSBjYXN0aW5nIHRlY2huaXF1ZSAgaGFzIGJlZW4gZGV2ZWxvcGVkLCB3aGljaCBpcyByZWxhdGl2ZWx5IGhlYWx0aCBoYXphcmQgZnJlZSBzaW5jZSBpdCBkb2VzIG5vdCBlbXBsb3kgdm9sYXRpbGUgb3JnYW5pYyAgY29tcG9uZW50cyBsaWtlIHh5bGVuZSBhbmQgbWV0aHlsIGV0aHlsIGtldG9uZS4gVGhlIHRlY2hub2xvZ3kgZGV2ZWxvcGVkIGlzIGEgZ2xhc3MtZnJlZSBMVENDIHRhcGUgIGNhc3RpbmcgY29tcG9zaXRpb24sIHdoaWNoIGNhbiBhZGRyZXNzIHRoZSBicnV0YWxpdHkgaXNzdWVzIG9mIHRhcGVzLiAgU291cmNlOiAgTmV3IHRveGljLWZyZWUsIHN1cGVyaW9yIG11bHRpbGF5ZXIgdGVjaG5vbG9neSB0aGF0IHBhY2thZ2VzIHRvZ2V0aGVyIGVsZWN0cm9uaWMgY29tcG9uZW50cyBjYW4gIGhlbHAgY291bnRyeSdzIHN0cmF0ZWdpYyBzZWN0b3JzLUZvcnVtSUFTIEJsb2cgIE5ldyB0b3hpYy1mcmVlLCBzdXBlcmlvciBtdWx0aWxheWVyIHRlY2hub2xvZ3kgdGhhdCBwYWNrYWdlcyB0b2dldGhlciBlbGVjdHJvbmljIGNvbXBvbmVudHMgY2FuIGhlbHAgIGNvdW50cnkncyBzdHJhdGVnaWMgc2VjdG9ycy1Gb3J1bUlBUyBCbG9nICAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the 'Preventive Detention', consider the following statements:  1.  Preventive Detention means detention of a person without trial and conviction by a court. 2.  The maximum period for which a person can be detained under Preventive Detention is 2 months. 3.  Only the Parliament can make a law regarding Preventive Detention. Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IDEuIFByZXZlbnRpdmUgRGV0ZW50aW9uIG1lYW5zIGRldGVudGlvbiBvZiBhIHBlcnNvbiB3aXRob3V0IHRyaWFsIGFuZCBjb252aWN0aW9uIGJ5IGEgY291cnQuICAyLiBUaGUgbWF4aW11bSBwZXJpb2QgZm9yIHdoaWNoIGEgcGVyc29uIGNhbiBiZSBkZXRhaW5lZCB1bmRlciBQcmV2ZW50aXZlIERldGVudGlvbiBpcyAyIG1vbnRocy4gIDMuIE9ubHkgdGhlIFBhcmxpYW1lbnQgY2FuIG1ha2UgYSBsYXcgcmVnYXJkaW5nIFByZXZlbnRpdmUgRGV0ZW50aW9uLiAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgYSkgMSBvbmx5ICAgYikgMiBvbmx5ICAgYykgMSBhbmQgMiBvbmx5ICAgZCkgMSBhbmQgMyBvbmx5ICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgQXJ0aWNsZSAyMiBncmFudHMgcHJvdGVjdGlvbiB0byBwZXJzb25zIHdobyBhcmUgYXJyZXN0ZWQgb3IgZGV0YWluZWQuIERldGVudGlvbiBpcyBvZiB0d28gdHlwZXMsIG5hbWVseSwgIHB1bml0aXZlIGFuZCBwcmV2ZW50aXZlLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFByZXZlbnRpdmUgZGV0ZW50aW9uIG1lYW5zIGRldGVudGlvbiBvZiBhIHBlcnNvbiB3aXRob3V0IHRyaWFsIGFuZCBjb252aWN0aW9uICBieSBhIGNvdXJ0LiBJdHMgcHVycG9zZSBpcyBub3QgdG8gcHVuaXNoIGEgcGVyc29uIGZvciBhIHBhc3Qgb2ZmZW5jZSBidXQgdG8gcHJldmVudCBoaW0gZnJvbSBjb21taXR0aW5nIGFuICBvZmZlbmNlIGluIHRoZSBuZWFyIGZ1dHVyZS4gSXQgaXMgb25seSBhIHByZWNhdXRpb25hcnkgbWVhc3VyZSBhbmQgYmFzZWQgb24gc3VzcGljaW9uLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIDQ0dGggQW1lbmRtZW50IGFjdCBvZiAxOTc4IGhhcyByZWR1Y2VkIHRoZSBwZXJpb2Qgb2YgZGV0ZW50aW9uIHdpdGhvdXQgIG9idGFpbmluZyB0aGUgb3BpbmlvbiBvZiB0aGUgYWR2aXNvcnkgYm9hcmQgZnJvbSAzIG1vbnRocyB0byAyIG1vbnRocy4gSG93ZXZlciwgdGhpcyBwcm92aXNpb24gaGFzIG5vdCAgeWV0IGJlZW4gYnJvdWdodCBpbnRvIGZvcmNlLCBoZW5jZSwgdGhlIG9yaWdpbmFsIHBlcmlvZCBvZiB0aHJlZSBtb250aHMgc3RpbGwgY29udGludWVzLiAgICAgQWxzbywgaWYgYW4gYWR2aXNvcnkgYm9hcmQgcmVwb3J0cyBzdWZmaWNpZW50IGNhdXNlIGZvciBhbiBleHRlbnNpb24sIGl0cyAzLW1vbnRoIHBlcmlvZCBjYW4gYWxzbyBiZSAgZXh0ZW5kZWQuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6ICBUaGUgQ29uc3RpdHV0aW9uIGhhcyBkaXZpZGVkIHRoZSBsZWdpc2xhdGl2ZSBwb3dlciB3aXRoIHJlZ2FyZCB0byBwcmV2ZW50aXZlICBkZXRlbnRpb24gYmV0d2VlbiB0aGUgUGFybGlhbWVudCBhbmQgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlcy4gVGhlIFBhcmxpYW1lbnQgaGFzIGV4Y2x1c2l2ZSBhdXRob3JpdHkgdG8gIG1ha2UgYSBsYXcgb2YgcHJldmVudGl2ZSBkZXRlbnRpb24gZm9yIHJlYXNvbnMgY29ubmVjdGVkIHdpdGggZGVmZW5jZSwgZm9yZWlnbiBhZmZhaXJzIGFuZCB0aGUgc2VjdXJpdHkgb2YgIEluZGlhLiBCb3RoIHRoZSBQYXJsaWFtZW50IGFzIHdlbGwgYXMgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlcyBjYW4gY29uY3VycmVudGx5IG1ha2UgYSBsYXcgb2YgcHJldmVudGl2ZSAgZGV0ZW50aW9uIGZvciByZWFzb25zIGNvbm5lY3RlZCB3aXRoIHRoZSBzZWN1cml0eSBvZiBhIHN0YXRlLCB0aGUgbWFpbnRlbmFuY2Ugb2YgcHVibGljIG9yZGVyIGFuZCB0aGUgIG1haW50ZW5hbmNlIG9mIHN1cHBsaWVzIGFuZCBzZXJ2aWNlcyBlc3NlbnRpYWwgdG8gdGhlIGNvbW11bml0eSAgU291cmNlOiAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9kaWZmZXJlbmNlLWJldHdlZW4tcHJldmVudGl2ZS1kZXRlbnRpb24tYW5kLXB1bml0aXZlLWRldGVudGlvbi8gICBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBFZGl0aW9uIC0gQ2hhcHRlciA3IC0gRnVuZGFtZW50YWwgUmlnaHRzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1 and 3 only  "
      }
    },
    {
      "index" : 17,
      "question" : "'It is a minimum area that is sacred and in which whatever the individual does, is not to be interfered with. The existence of the 'minimum area of non-interference' is the recognition that human nature and human dignity need an area where the person can act unobstructed by others.'  Which of the following ideals is referred to in the above paragraph?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IHdpdGguIFRoZSBleGlzdGVuY2Ugb2YgdGhlICdtaW5pbXVtIGFyZWEgb2Ygbm9uLWludGVyZmVyZW5jZScgaXMgdGhlIHJlY29nbml0aW9uIHRoYXQgaHVtYW4gbmF0dXJlIGFuZCAgaHVtYW4gZGlnbml0eSBuZWVkIGFuIGFyZWEgd2hlcmUgdGhlIHBlcnNvbiBjYW4gYWN0IHVub2JzdHJ1Y3RlZCBieSBvdGhlcnMuJyAgIFdoaWNoIG9mIHRoZSBmb2xsb3dpbmcgaWRlYWxzIGlzIHJlZmVycmVkIHRvIGluIHRoZSBhYm92ZSBwYXJhZ3JhcGg/ICAgYSkgUG9zaXRpdmUgbGliZXJ0eSAgYikgRXF1YWxpdHkgIGMpIERpc3RyaWJ1dGl2ZSBKdXN0aWNlICBkKSBOZWdhdGl2ZSBsaWJlcnR5ICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBOZWdhdGl2ZSBsaWJlcnR5IChhbmQgbm90IHBvc2l0aXZlIGxpYmVydHkpIHNlZWtzIHRvIGRlZmluZSBhbmQgZGVmZW5kIGFuIGFyZWEgaW4gd2hpY2ggdGhlIGluZGl2aWR1YWwgIHdvdWxkIGJlIGludmlvbGFibGUsIGluIHdoaWNoIGhlIG9yIHNoZSBjb3VsZCAnZG8sIGJlIG9yIGJlY29tZScgd2hhdGV2ZXIgaGUgb3Igc2hlIHdpc2hlZCB0byAnZG8sIGJlIG9yICBiZWNvbWUnLiAgIE5lZ2F0aXZlIGxpYmVydHkgaXMgdGhlIGFic2VuY2Ugb2Ygb2JzdGFjbGVzLCBiYXJyaWVycyBvciBjb25zdHJhaW50cy4gT25lIGhhcyBuZWdhdGl2ZSBsaWJlcnR5IHRvIHRoZSBleHRlbnQgIHRoYXQgYWN0aW9ucyBhcmUgYXZhaWxhYmxlIHRvIG9uZSBpbiB0aGlzIG5lZ2F0aXZlIHNlbnNlLiBQb3NpdGl2ZSBsaWJlcnR5IGlzIHRoZSBwb3NzaWJpbGl0eSBvZiBhY3RpbmcgLSBvciB0aGUgIGZhY3Qgb2YgYWN0aW5nIC0gaW4gc3VjaCBhIHdheSBhcyB0byB0YWtlIGNvbnRyb2wgb2Ygb25lJ3MgbGlmZSBhbmQgcmVhbGl6ZSBvbmUncyBmdW5kYW1lbnRhbCBwdXJwb3Nlcy4gV2hpbGUgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBuZWdhdGl2ZSBsaWJlcnR5IGlzIHVzdWFsbHkgYXR0cmlidXRlZCB0byBpbmRpdmlkdWFsIGFnZW50cywgcG9zaXRpdmUgbGliZXJ0eSBpcyBzb21ldGltZXMgYXR0cmlidXRlZCB0byAgY29sbGVjdGl2aXRpZXMsIG9yIHRvIGluZGl2aWR1YWxzIGNvbnNpZGVyZWQgcHJpbWFyaWx5IGFzIG1lbWJlcnMgb2YgZ2l2ZW4gY29sbGVjdGl2aXRpZXMuICBOZWdhdGl2ZSBsaWJlcnR5IGlzIGFuIGFyZWEgaW4gd2hpY2ggbm8gZXh0ZXJuYWwgYXV0aG9yaXR5IGNhbiBpbnRlcmZlcmUuIFRodXMsIHRoZXJlIGlzIGFuIGFic2VuY2Ugb2YgIHJlc3RyYWludHMgb24gdGhlIGFjdGl2aXRpZXMgb2YgdGhlIGluZGl2aWR1YWxzLiBJdCBpcyBhIG1pbmltdW0gYXJlYSB0aGF0IGlzIHNhY3JlZCBhbmQgaW4gd2hpY2ggd2hhdGV2ZXIgdGhlICBpbmRpdmlkdWFsIGRvZXMsIGlzIG5vdCB0byBiZSBpbnRlcmZlcmVkIHdpdGguICAgS25vd2xlZGdlIEJhc2UpICBUaGUgYXJndW1lbnRzIG9mIHBvc2l0aXZlIGxpYmVydHkgYXJlIGNvbmNlcm5lZCB3aXRoIGV4cGxhaW5pbmcgdGhlIGlkZWEgb2YgJ2ZyZWVkb20gdG8nLiBJdCBpcyBjb25jZXJuZWQgIHdpdGggbG9va2luZyBhdCB0aGUgY29uZGl0aW9ucyBhbmQgbmF0dXJlIG9mIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgaW5kaXZpZHVhbCBhbmQgc29jaWV0eSBhbmQgb2YgIGltcHJvdmluZyB0aGVzZSBjb25kaXRpb25zIHN1Y2ggdGhhdCB0aGVyZSBhcmUgZmV3ZXIgY29uc3RyYWludHMgdG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZSBpbmRpdmlkdWFsICBwZXJzb25hbGl0eS4gUG9zaXRpdmUgbGliZXJ0eSByZWNvZ25pc2VzIHRoYXQgb25lIGNhbiBiZSBmcmVlIG9ubHkgaW4gc29jaWV0eSAobm90IG91dHNpZGUgaXQpIGFuZCBoZW5jZSB0cmllcyAgdG8gbWFrZSB0aGF0IHNvY2lldHkgc3VjaCB0aGF0IGl0IGVuYWJsZXMgdGhlIGRldmVsb3BtZW50IG9mIHRoZSBpbmRpdmlkdWFsLiAgU291cmNlOiBQb2xpdGljYWwgVGhlb3J5LCBOQ0VSVCBYSSwgQ2hhcHRlci0yLCBQZy4gMjYtMjggIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Positive liberty ",
        "option2" : "Equality ",
        "option3" : "Distributive Justice ",
        "option4" : "Negative liberty  "
      }
    },
    {
      "index" : 18,
      "question" : "Which of the following rights are available only against the State and not against a private individual? 1.  Right to Equality Before Law 2.  Prohibition of traffic in human beings and forced labour 3.  Right to Abolition of Untouchability 4.  Right to Protection Against Arrest and Detention Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IDEuIFJpZ2h0IHRvIEVxdWFsaXR5IEJlZm9yZSBMYXcgIDIuIFByb2hpYml0aW9uIG9mIHRyYWZmaWMgaW4gaHVtYW4gYmVpbmdzIGFuZCBmb3JjZWQgbGFib3VyICAzLiBSaWdodCB0byBBYm9saXRpb24gb2YgVW50b3VjaGFiaWxpdHkgIDQuIFJpZ2h0IHRvIFByb3RlY3Rpb24gQWdhaW5zdCBBcnJlc3QgYW5kIERldGVudGlvbiAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZXMgZ2l2ZW4gYmVsb3c6ICBhKSAxIGFuZCAyIG9ubHkgIGIpIDIgYW5kIDMgb25seSAgYykgMyBhbmQgNCBvbmx5ICBkKSAxIGFuZCA0IG9ubHkgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBNb3N0IG9mIEZ1bmRhbWVudGFsIFJpZ2h0cyBpbiBJbmRpYW4gQ29uc3RpdHV0aW9uIGFyZSBhdmFpbGFibGUgYWdhaW5zdCB0aGUgYXJiaXRyYXJ5IGFjdGlvbiBvZiB0aGUgU3RhdGUsICBidXQgc29tZSBhcmUgYWxzbyBhdmFpbGFibGUgYWdhaW5zdCB0aGUgYWN0aW9uIG9mIHByaXZhdGUgaW5kaXZpZHVhbHMuICAgT3B0aW9uIDEgYW5kIDQgYXJlIGNvcnJlY3Q6ICAgMSkgUmlnaHQgdG8gRXF1YWxpdHkgQmVmb3JlIExhdyAoQXJ0aWNsZSAxNCkgb2YgdGhlIEluZGlhbiBDb25zdGl0dXRpb24gZ3VhcmFudGVlcyB0aGF0IG5vIHBlcnNvbiBzaGFsbCBiZSAgZGVuaWVkIHRoZSByaWdodCB0byBlcXVhbGl0eSBiZWZvcmUgbGF3IG9yIHRoZSBlcXVhbCBwcm90ZWN0aW9uIG9mIGxhdyBpbiB0aGUgdGVycml0b3J5IG9mIEluZGlhLiBUaGlzIGlzIGEgIHJpZ2h0IHRoYXQgY2FuIGJlIGNsYWltZWQgYnkgYW55IHBlcnNvbiwgd2hldGhlciBhIGNpdGl6ZW4gb3IgYSBub24tY2l0aXplbiwgb24gSW5kaWFuIHNvaWwuIEl0IGlzIGF2YWlsYWJsZSAgb25seSBhZ2FpbnN0IHRoZSBzdGF0ZSBhbmQgbm90IGFnYWluc3QgdGhlIHByaXZhdGUgaW5kaXZpZHVhbC4gIDIpIEFydGljbGUgMjIgKFJpZ2h0IHRvIFByb3RlY3Rpb24gQWdhaW5zdCBBcnJlc3QgYW5kIERldGVudGlvbikgZGVhbHMgd2l0aCB0aGUgcHJvdGVjdGlvbiBhZ2FpbnN0IGFycmVzdCAgYW5kIGRldGVudGlvbiBpbiBjZXJ0YWluIGNhc2VzLiBUaGlzIGFydGljbGUgaXMgYXBwbGljYWJsZSB0byBib3RoIGNpdGl6ZW5zIGFuZCBub24tY2l0aXplbnMuIFRoaXMgcHJvdmlzaW9uICBleHRlbmRzIGNlcnRhaW4gcHJvY2VkdXJhbCBzYWZlZ3VhcmRzIGZvciBpbmRpdmlkdWFscyBpbiBjYXNlIG9mIGFuIGFycmVzdC4gSXQgaXMgYXZhaWxhYmxlIG9ubHkgYWdhaW5zdCAgdGhlIHN0YXRlIGFuZCBub3QgYWdhaW5zdCB0aGUgaW5kaXZpZHVhbC4gIE9wdGlvbiAyIGFuZCAzIGFyZSBpbmNvcnJlY3Q6ICAgMSkgUHJvaGliaXRpb24gb2YgdHJhZmZpYyBpbiBodW1hbiBiZWluZ3MgYW5kIGZvcmNlZCBsYWJvdXIgKEFydGljbGUgMjMpIGV4cGxpY2l0bHkgcHJvaGliaXRzIGh1bWFuICB0cmFmZmlja2luZywgY2hpbGQgbGFib3IsIHVudG91Y2hhYmlsaXR5LCBhbmQgdmFyaW91cyBvdGhlciBhY3Rpdml0aWVzIHJlbGF0ZWQgdG8gaXQuIEFueW9uZSByZXNpZGluZyBpbiBhbnkgIHBhcnQgb2YgdGhlIGNvdW50cnkgcHJhY3RpY2luZyBhbnkgc3VjaCBraW5kIG9mIGFjdGl2aXR5IHdpbGwgYmUgcHVuaXNoZWQgYWNjb3JkaW5nIHRvIHRoZSBsYXcuIEl0IHByb3RlY3RzICB0aGUgaW5kaXZpZHVhbCBub3Qgb25seSBhZ2FpbnN0IHRoZSBTdGF0ZSBidXQgYWxzbyBhZ2FpbnN0IHByaXZhdGUgcGVyc29ucy4gIDIpIEFib2xpdGlvbiBvZiBVbnRvdWNoYWJpbGl0eSAoQXJ0aWNsZSAxNykgYWJvbGlzaGVzICd1bnRvdWNoYWJpbGl0eScgYW5kIGZvcmJpZHMgaXRzIHByYWN0aWNlIGluIGFueSBmb3JtLiAgVGhlIGVuZm9yY2VtZW50IG9mIGFueSBkaXNhYmlsaXR5IGFyaXNpbmcgb3V0IG9mIHVudG91Y2hhYmlsaXR5IHNoYWxsIGJlIGFuIG9mZmVuY2UgcHVuaXNoYWJsZSBpbiAgYWNjb3JkYW5jZSB3aXRoIGxhdy4gVGhlIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IHRoZSByaWdodCB1bmRlciBBcnRpY2xlIDE3IGlzIGF2YWlsYWJsZSBhZ2FpbnN0ICBwcml2YXRlIGluZGl2aWR1YWxzLiAgU291cmNlOiBNIGxha3NtaWthbnQgKENocCA3LSBGdW5kYW1lbnRhbCByaWdodHMpICBIb3Jpem9udGFsIGFwcGxpY2F0aW9uIG9mIEZ1bmRhbWVudGFsIFJpZ2h0czogSXNzdWVzIGFuZCBDb25jZXJucyAobWFkaGF2dW5pdmVyc2l0eS5lZHUuaW4pICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "3 and 4 only ",
        "option4" : "1 and 4 only          . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to the concept of 'Police State' in polity, consider the following statements:  1.  Its main objective is the establishment of economic and social democracy in a country. 2.  This concept is based on the theory of Laissez-Faire.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IDEuIEl0cyBtYWluIG9iamVjdGl2ZSBpcyB0aGUgZXN0YWJsaXNobWVudCBvZiBlY29ub21pYyBhbmQgc29jaWFsIGRlbW9jcmFjeSBpbiBhIGNvdW50cnkuICAyLiBUaGlzIGNvbmNlcHQgaXMgYmFzZWQgb24gdGhlIHRoZW9yeSBvZiBMYWlzc2V6LUZhaXJlLiAgIFdoaWNoIG9mIHRoZSBzdGF0ZW1lbnRzIGdpdmVuIGFib3ZlIGlzL2FyZSBjb3JyZWN0PyAgIGEpIDEgb25seSAgIGIpIDIgb25seSAgIGMpIEJvdGggMSBhbmQgMiAgIGQpIE5laXRoZXIgMSBub3IgMiAgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBpbiBJbmRpYSBlbWJvZHkgdGhlIGNvbmNlcHQgb2YgYSAnd2VsZmFyZSBzdGF0ZScgYW5kIG5vdCB0aGF0IG9mIGEgJ3BvbGljZSBzdGF0ZScsICB3aGljaCBleGlzdGVkIGR1cmluZyB0aGUgY29sb25pYWwgZXJhLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEEgJ1BvbGljZSBTdGF0ZScgaXMgbWFpbmx5IGNvbmNlcm5lZCB3aXRoIHRoZSBtYWludGVuYW5jZSBvZiBsYXcgYW5kIG9yZGVyIGFuZCAgZGVmZW5jZSBvZiB0aGUgY291bnRyeSBhZ2FpbnN0IGV4dGVybmFsIGFnZ3Jlc3Npb24uIEl0IGlzIGEgY291bnRyeSBpbiB3aGljaCB0aGUgZ292ZXJubWVudCB1c2VzIHRoZSBwb2xpY2UgIHRvIHNldmVyZWx5IGxpbWl0IHBlb3BsZSdzIGZyZWVkb20uICAgVGhlIGNvbmNlcHQgb2YgYSAnd2VsZmFyZSBzdGF0ZScgaXMgaW4gY29udHJhc3QgdG8gdGhhdCBvZiBhICdwb2xpY2Ugc3RhdGUnLiAgQSAnV2VsZmFyZSBTdGF0ZScgc2Vla3MgdG8gZXN0YWJsaXNoICBlY29ub21pYyBhbmQgc29jaWFsIGRlbW9jcmFjeSBpbiB0aGUgY291bnRyeS4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBjb25jZXB0IG9mIFBvbGljZSBzdGF0ZSBpcyBiYXNlZCBvbiB0aGUgbmluZXRlZW50aCBjZW50dXJ5IHRoZW9yeSBvZiAgaW5kaXZpZHVhbGlzbSBvciBsYWlzc2V6LWZhaXJlLiBUaGUgdGhlb3J5IG9mIGxhaXNzZXogZmFpcmUgaW4gdGhlIDE5dGggY2VudHVyeSBlbnZpc2FnZXMgbWF4aW11bSBmcmVlICBlbnRlcnByaXNlIGFuZCBjb250cmFjdHVhbCBmcmVlZG9tLiBUaGUgbGF3IGFuZCBvcmRlciBjaGFyYWN0ZXJpemVkIHRoZSBzaXR1YXRpb24gaW4gdGhlIHN0YXRlLiBJdHMgcm9sZSB3YXMgIGxpbWl0ZWQgdG8gdGhlIHRyYWRpdGlvbmFsIHJvbGUgb2YgZ292ZXJubWVudCBhcyBhIHByb3RlY3Rvci4gICBLbm93bGVkZ2UgQmFzZTogICAgQSB3ZWxmYXJlIHN0YXRlIGlzIGEgZ292ZXJubWVudCBvZiB0aGUgU3RhdGUgdG8gcHJvdGVjdCBhbmQgcHJvbW90ZSB0aGUgZWNvbm9taWMgYW5kIHNvY2lhbCB3ZWxmYXJlIG9mIGl0cyAgY2l0aXplbnMuIEl0IGlzIGEgY29yZSByb2xlLiBJdCBpcyBlcXVhbGl0eSBvZiBvcHBvcnR1bml0eSwgZXF1aXRhYmxlIGRpc3RyaWJ1dGlvbiBvZiB3ZWFsdGgsIGFuZCB0aG9zZSB3aG8gYXJlICB1bmFibGUgdG8gYXZhaWwgdGhlbXNlbHZlcyBvZiBhIGJldHRlciBsaWZlIGZvciBhdCBsZWFzdCBiYXNlZCBvbiB0aGUgcHJpbmNpcGxlIG9mIHRoZSByZXNwb25zaWJpbGl0eSBmb3IgdGhlICBwdWJsaWMuICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the arguments given below justifies the view that India should review One China Policy especially in context of Taiwan? 1.  Repeated Chinese intrusions across the LAC are taking place after Galwan valley clashes in 2020. 2.  Look East policy of India has largely ignored the engagement of India with Taiwan. 3.  Taiwan is the potential supplier of semiconductors which is important for chip manufacturing. Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IGVzcGVjaWFsbHkgaW4gY29udGV4dCBvZiBUYWl3YW4/ICAxLiBSZXBlYXRlZCBDaGluZXNlIGludHJ1c2lvbnMgYWNyb3NzIHRoZSBMQUMgYXJlIHRha2luZyBwbGFjZSBhZnRlciBHYWx3YW4gdmFsbGV5IGNsYXNoZXMgaW4gMjAyMC4gIDIuIExvb2sgRWFzdCBwb2xpY3kgb2YgSW5kaWEgaGFzIGxhcmdlbHkgaWdub3JlZCB0aGUgZW5nYWdlbWVudCBvZiBJbmRpYSB3aXRoIFRhaXdhbi4gIDMuIFRhaXdhbiBpcyB0aGUgcG90ZW50aWFsIHN1cHBsaWVyIG9mIHNlbWljb25kdWN0b3JzIHdoaWNoIGlzIGltcG9ydGFudCBmb3IgY2hpcCBtYW51ZmFjdHVyaW5nLiAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZXMgZ2l2ZW4gYmVsb3c6ICBhKSAxIGFuZCAyIG9ubHkgIGIpIDIgYW5kIDMgb25seSAgYykgMSBhbmQgMyBvbmx5ICBkKSAxLCAyIGFuZCAzICAgRXhwKSBPcHRpb24gYyBpcyBjb3JyZWN0LiAgVW5kZXIgT25lIENoaW5hIHBvbGljeSwgYW55IGNvdW50cnkgd2lsbGluZyB0byBlc3RhYmxpc2ggZGlwbG9tYXRpYyByZWxhdGlvbnMgd2l0aCB0aGUgUGVvcGxlJ3MgUmVwdWJsaWMgb2YgIENoaW5hIG11c3QgYWNrbm93bGVkZ2UgdGhhdCB0aGVyZSBpcyBvbmx5ICdPbmUgQ2hpbmEnLiBBcGFydCBmcm9tIHRoYXQgdGhlIGFjY2VwdGluZyBjb3VudHJ5IGFsc28gaGFzIHRvICBjdXQgZG93biBhbGwgZm9ybWFsIHRpZXMgKGluZm9ybWFsIHRpZXMgY2FuIGJlIG1haW50YWluZWQpIHdpdGggVGFpd2FuLiBNb3Jlb3ZlciwgaXQgY2FuJ3QgcmVjb2duaXplIFRhaXdhbiAgYXMgYW4gaW5kZXBlbmRlbnQgY291bnRyeS4gIEluZGlhIHNob3VsZCByZXZpZXcgaXRzIGFjY2VwdGFuY2Ugb2YgdGhlIE9uZSBDaGluYSBwb2xpY3kgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29ucywgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJbmNyZWFzZWQgQ2hpbmVzZSBpbnRydXNpb25zOiBBZnRlciB0aGUgR2Fsd2FuIHZhbGxleSBjbGFzaGVzIGxhc3QgeWVhciwgcmVwZWF0ZWQgIENoaW5lc2UgaW50cnVzaW9ucyBhY3Jvc3MgdGhlIExBQyBhcmUgdGFraW5nIHBsYWNlLiBSZXZpZXdpbmcgT25lIENoaW5hIHBvbGljeSB3aWxsIGdpdmUgYSBjbGVhciBzaWduYWwgdG8gIENoaW5hIHRoYXQgSW5kaWEgY2FuIHJldGFsaWF0ZSBpbiBjb21tZW5zdXJhdGUgbWFubmVyLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQm9vc3RpbmcgdGllcyB3aXRoIFRhaXdhbiBhbHNvIGhhcyBzdGFuZGFsb25lIGJlbmVmaXRzIGFzIGl0IGlzIGEgc2VtaWNvbmR1Y3RvciAgcG93ZXJob3VzZSBhbmQgcmVwb3J0ZWRseSBiaWxhdGVyYWwgdGFsa3MgYXJlIHVuZGVyd2F5IHRvIGJyaW5nIGNoaXAgbWFudWZhY3R1cmluZyAtIGEga2V5IHN0cmF0ZWdpYyAgc2VjdG9yIC0gdG8gSW5kaWEuIEZ1cnRoZXIsIGNvb3BlcmF0aW9uIGNhbiBhbHNvIGJlIGFjaGlldmVkIGluIGdyZWVuIHRlY2hub2xvZ3ksIElULCBkaWdpdGFsIGhlYWx0aGNhcmUsIGFuZCAgdGVsZWNvbSB3aXRoIFRhaXdhbmVzZSBjb21wYW5pZXMgYXMgdGhleSBhcmUgbG9va2luZyB0byByZWxvY2F0ZSB0aGVpciBvcGVyYXRpb25zIGZyb20gQ2hpbmEuIFNvLCAgZW1icmFjaW5nIFRhaXdhbiBmb3IgdGhlIHN0cmF0ZWdpYyBhbmQgZWNvbm9taWMgaW50ZXJlc3RzIG9mIEluZGlhIHdpbGwgZWxldmF0ZSB0aWVzIGJldHdlZW4gYm90aC4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gTG9vayBFYXN0IHBvbGljeSBvZiBJbmRpYSBoYXMgbm90IGlnbm9yZWQgdGhlIGVuZ2FnZW1lbnQgb2YgSW5kaWEgd2l0aCBUYWl3YW4uICBJbmRpYSdzIExvb2sgRWFzdCBwb2xpY3kgc3RhcnRlZCBzdHJlbmd0aGVuaW5nIHRoZSBlbmdhZ2VtZW50IG9mIEluZGlhIHdpdGggRWFzdCBBc2lhbiBjb3VudHJpZXMsICBpbmNsdWRpbmcgVGFpd2FuLiBJbiAxOTk1IEluZGlhIGFuZCBUYWl3YW4gZXN0YWJsaXNoZWQgY29tcGxlbWVudGFyeSByZXByZXNlbnRhdGl2ZSBvZmZpY2VzLiAgIEluZGlhLVRhaXdhbiByZWxhdGlvbnMgaW1wcm92ZWQgZ3JhZHVhbGx5IGFuZCBzaW5jZSAyMDEwIEluZGlhIGhhcyByZWZ1c2VkIHRvIGVuZG9yc2UgdGhlICdvbmUtQ2hpbmEnICBwb2xpY3kuIEF0IHRoZSBzYW1lIHRpbWUsIEluZGlhIGlzIG5vdCBoYXZpbmcgYW55IGZvcm1hbCBkaXBsb21hdGljIHJlbGF0aW9ucyB3aXRoIFRhaXdhbi4gIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9oZWxsby10YWl3YW4tbmV3LWRlbGhpLXNob3VsZC1ib29zdC10aWVzLXdpdGgtdGFpcGVpLW5vdC1qdXN0LSBiZWNhdXNlLW9mLWNoaW5lc2UtdGhyZWF0LXRoZXJlLWFyZS1vdGhlci1iZW5lZml0cy8gIFdoYXQgaXMgdGhlIGNvcmUgY29uZmxpY3QgYmV0d2VlbiBDaGluYSBhbmQgVGFpd2FuPyAoZm9ydW1pYXMuY29tKSAgQ2hpbmEgYXNrcyBJbmRpYSB0byBhZGhlcmUgdG8gdGhlICdPbmUgQ2hpbmEgcG9saWN5Jywgbm90IHRvIGVudGVyIGludG8gYW55IGFncmVlbWVudCB3aXRoIFRhaXdhbiB8IERlY2NhbiAgSGVyYWxkICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 21,
      "question" : "Which of the following statements is/are true of the Fundamental Duties of an Indian citizen?   1.  A legislative process has been provided to enforce these duties.  2.  They are correlative to legal duties.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IDEuIEEgbGVnaXNsYXRpdmUgcHJvY2VzcyBoYXMgYmVlbiBwcm92aWRlZCB0byBlbmZvcmNlIHRoZXNlIGR1dGllcy4gICAyLiBUaGV5IGFyZSBjb3JyZWxhdGl2ZSB0byBsZWdhbCBkdXRpZXMuICAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZSBnaXZlbiBiZWxvdzogICBhKSAxIG9ubHkgICBiKSAyIG9ubHkgICBjKSBCb3RoIDEgYW5kIDIgICBkKSBOZWl0aGVyIDEgbm9yIDIgICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIHByb3Zpc2lvbiBpbiB0aGUgQ29uc3RpdHV0aW9uIGZvciBkaXJlY3QgZW5mb3JjZW1lbnQgb2YgYW55IG9mIHRoZSAgRnVuZGFtZW50YWwgRHV0aWVzIG5vciBmb3IgYW55IHNhbmN0aW9uIHRvIHByZXZlbnQgdGhlaXIgdmlvbGF0aW9uLiBBbGwgdGhlIEZ1bmRhbWVudGFsIER1dGllcyB1bmRlciAgQXJ0aWNsZSA1MSBBIGFyZSAnbm9uLWp1c3RpY2lhYmxlJy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZXJlIGlzIG5vIGxlZ2lzbGF0aXZlIHByb2Nlc3MgdG8gZW5mb3JjZSBjaXRpemVucyB0byBkbyB0aGVpciBmdW5kYW1lbnRhbCBkdXRpZXMuICBUaGUgbGVnYWwgZHV0eSBpcyBvbmUgd2hpY2ggaXMgcmVxdWlyZWQgdG8gYmUgY2FycmllZCBvdXQgYXMgcGVyIGxhdy4gU28sIHRoZXJlIGlzIG5vIGNvcnJlbGF0aW9uIGJldHdlZW4gIGJvdGggZHV0aWVzLiBJdCBoYXMgYmVlbiBoZWxkIHRoYXQgdGhlc2UgZHV0aWVzIGJlaW5nIGR1dGllcyBvZiBpbmRpdmlkdWFsIGNpdGl6ZW5zIGNhbm5vdCBiZSBlbmZvcmNlZCAgdGhyb3VnaCBtYW5kYW11cy4gIFNvdXJjZSkgVVBTQyBDU0UgMjAxNyAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the comparison between the Fundamental Rights and the Directive Principles of State Policy, consider the following statements:  1.  The focus of Fundamental Rights is at individual level, whereas the focus of Directive Principles is at community level. 2.  Fundamental Rights restrict the power of the state whereas the Directive Principles requires the State to take certain positive steps.  3.  The courts can declare a law as unconstitutional if it violates either the Fundamental Rights or the Directive Principles of State Policy.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IFN0YXRlIFBvbGljeSwgY29uc2lkZXIgdGhlIGZvbGxvd2luZyBzdGF0ZW1lbnRzOiAgIDEuIFRoZSBmb2N1cyBvZiBGdW5kYW1lbnRhbCBSaWdodHMgaXMgYXQgaW5kaXZpZHVhbCBsZXZlbCwgd2hlcmVhcyB0aGUgZm9jdXMgb2YgRGlyZWN0aXZlIFByaW5jaXBsZXMgaXMgYXQgIGNvbW11bml0eSBsZXZlbC4gIDIuIEZ1bmRhbWVudGFsIFJpZ2h0cyByZXN0cmljdCB0aGUgcG93ZXIgb2YgdGhlIHN0YXRlIHdoZXJlYXMgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIHJlcXVpcmVzIHRoZSBTdGF0ZSAgdG8gdGFrZSBjZXJ0YWluIHBvc2l0aXZlIHN0ZXBzLiAgIDMuIFRoZSBjb3VydHMgY2FuIGRlY2xhcmUgYSBsYXcgYXMgdW5jb25zdGl0dXRpb25hbCBpZiBpdCB2aW9sYXRlcyBlaXRoZXIgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBvciB0aGUgIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeS4gICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICAgYSkgMSBvbmx5ICAgYikgMSBhbmQgMiBvbmx5ICBjKSAyIGFuZCAzIG9ubHkgIGQpIDEsIDIgYW5kIDMgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIEZ1bmRhbWVudGFsIFJpZ2h0cyBhcmUgZW51bWVyYXRlZCBpbiBQYXJ0IElJSSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiB0aGF0IGlzIGJvcnJvd2VkIGZyb20gVVMgIENvbnN0aXR1dGlvbi4gVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlcyBQb2xpY3kgYXJlIGVudW1lcmF0ZWQgaW4gUGFydCBJViBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiAgdGhhdCBpcyBib3Jyb3dlZCBmcm9tIHRoZSBJcmlzaCBDb25zdGl0dXRpb24uICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogRnVuZGFtZW50YWwgUmlnaHRzIHByb21vdGUgdGhlIHdlbGZhcmUgb2YgdGhlIGluZGl2aWR1YWwuIFRoZXkgcHJvbW90ZSB0aGUgaWRlYWwgIG9mIHBvbGl0aWNhbCBkZW1vY3JhY3kuIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZXMgUG9saWN5IHByb21vdGVzIHRoZSB3ZWxmYXJlIG9mIHRoZSBjb21tdW5pdHkuICBUaGV5IHByb21vdGUgdGhlIGlkZWFsIG9mIHNvY2lhbCBhbmQgZWNvbm9taWMgZGVtb2NyYWN5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEZ1bmRhbWVudGFsIFJpZ2h0cyBhcmUgbmVnYXRpdmUgYXMgdGhleSByZXN0cmljdCB0aGUgcG93ZXIgb2YgdGhlIHN0YXRlLiBUaGUgIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlcyBQb2xpY3kgYXJlIHBvc2l0aXZlIGFzIHRoZXkgcmVxdWlyZSB0aGUgU3RhdGUgdG8gdGFrZSBjZXJ0YWluIHN0ZXBzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogSnVkaWNpYXJ5IGNhbiBkZWNsYXJlIGEgbGF3IGFzIHVuY29uc3RpdHV0aW9uYWwgYW5kIGludmFsaWQgaWYgaXQgdmlvbGF0ZXMgdGhlICBGdW5kYW1lbnRhbCBSaWdodHMuIFRoZSBjb3VydHMgY2Fubm90IGRlY2xhcmUgYSBsYXcgdmlvbGF0aXZlIG9mIGFueSBvZiB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgYXMgIHVuY29uc3RpdHV0aW9uYWwgYW5kIGludmFsaWQuIEhvd2V2ZXIsIHRoZXkgY2FuIHVwaG9sZCB0aGUgdmFsaWRpdHkgb2YgYSBsYXcgb24gdGhlIGdyb3VuZCB0aGF0IGl0IHdhcyAgZW5hY3RlZCB0byBnaXZlIGVmZmVjdCB0byBhIGRpcmVjdGl2ZS4gICAgS25vd2xlZGdlIEJhc2U6ICAgRnVuZGFtZW50YWwgUmlnaHRzIGFyZSBqdXN0aWNpYWJsZSBpbiBuYXR1cmUgaS5lLjsgdGhleSBhcmUgbGVnYWxseSBlbmZvcmNlYWJsZSBpbiB0aGUgY291cnQgb2YgbGF3IGluIGNhc2Ugb2YgIHRoZWlyIHZpb2xhdGlvbi4gVGhlIERQU1BzIGFyZSBub24tanVzdGljaWFibGUgaW4gbmF0dXJlIGkuZS47IHRoZXkgYXJlIG5vdCBsZWdhbGx5IGVuZm9yY2VhYmxlIGluIHRoZSBjb3VydCBvZiAgbGF3LiAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9kaWZmZXJlbmNlLWJldHdlZW4tZnVuZGFtZW50YWwtcmlnaHRzLWFuZC1kcHNwZGlyZWN0aXZlLXByaW5jaXBsZXMtb2YtIHN0YXRlLXBvbGljeS8gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following statements is correct with reference to the Directive Principles of State Policy?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IGEpIFRoZXkgcHJvbW90ZSBwb2xpdGljYWwgYW5kIGVjb25vbWljIGRlbW9jcmFjeSBpbiB0aGUgY291bnRyeS4gICBiKSBUaGV5IGhhdmUgYmVlbiBib3Jyb3dlZCBmcm9tIHRoZSBSdXNzaWFuIENvbnN0aXR1dGlvbi4gIGMpIFRoZXNlIGhhdmUgYmVlbiBkZXNjcmliZWQgYXMgJ25vdmVsIGZlYXR1cmVzJyBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbi4gIGQpIFRoZXNlIGFyZSBkaXJlY3RpdmVzIG9ubHkgdG8gdGhlIGV4ZWN1dGl2ZSBvcmdhbiBhbmQgbm90IHRvIHRoZSBsZWdpc2xhdGl2ZSBvcmdhbi4gICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIE9wdGlvbiBhIGlzIGluY29ycmVjdDogVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFpbSBhdCByZWFsaXNpbmcgdGhlIGhpZ2ggaWRlYWxzIG9mIGp1c3RpY2UsIGxpYmVydHksIGVxdWFsaXR5ICBhbmQgZnJhdGVybml0eSBhcyBvdXRsaW5lZCBpbiB0aGUgUHJlYW1ibGUgdG8gdGhlIENvbnN0aXR1dGlvbi4gVGhleSBzZWVrIHRvIGVzdGFibGlzaCBlY29ub21pYyBhbmQgc29jaWFsICBkZW1vY3JhY3kgaW4gdGhlIGNvdW50cnkuIEZ1bmRhbWVudGFsIFJpZ2h0cyBhaW0gYXQgcHJvbW90aW5nIHBvbGl0aWNhbCBkZW1vY3JhY3kgaW4gdGhlIGNvdW50cnkuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0OiBUaGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5IGFyZSBlbnVtZXJhdGVkIGluIFBhcnQgSVYgb2YgdGhlIENvbnN0aXR1dGlvbiAgZnJvbSBBcnRpY2xlcyAzNiB0byA1MS4gVGhlIGZyYW1lcnMgb2YgdGhlIENvbnN0aXR1dGlvbiBib3Jyb3dlZCB0aGlzIGlkZWEgZnJvbSB0aGUgSXJpc2ggIENvbnN0aXR1dGlvbiBvZiAxOTM3LCB3aGljaCBoYWQgY29waWVkIGl0IGZyb20gdGhlIFNwYW5pc2ggQ29uc3RpdHV0aW9uICBPcHRpb24gYyBpcyBjb3JyZWN0OiBEci4gQi5SLiBBbWJlZGthciBkZXNjcmliZWQgdGhlc2UgcHJpbmNpcGxlcyBhcyAnbm92ZWwgZmVhdHVyZXMnIG9mIHRoZSBJbmRpYW4gIENvbnN0aXR1dGlvbi4gVGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFsb25nIHdpdGggdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBjb250YWluIHRoZSBwaGlsb3NvcGh5IG9mIHRoZSAgQ29uc3RpdHV0aW9uIGFuZCBpcyB0aGUgc291bCBvZiB0aGUgQ29uc3RpdHV0aW9uLiBHcmFudmlsbGUgQXVzdGluIGhhcyBkZXNjcmliZWQgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIGFuZCAgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBhcyB0aGUgJ0NvbnNjaWVuY2Ugb2YgdGhlIENvbnN0aXR1dGlvbi4gICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3Q6IFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyByZXNlbWJsZSB0aGUgJ0luc3RydW1lbnQgb2YgSW5zdHJ1Y3Rpb25zJyBlbnVtZXJhdGVkIGluICB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBBY3Qgb2YgMTkzNS4gVGhlIG9ubHkgZGlmZmVyZW5jZSBpcyB0aGF0IHRoZXkgYXJlIGluc3RydWN0aW9ucyB0byB0aGUgbGVnaXNsYXR1cmUgYW5kICB0aGUgZXhlY3V0aXZlLiBBY2NvcmRpbmcgdG8gQXJ0aWNsZSAzNiwgdGhlIHRlcm0gJ1N0YXRlJyBpbiBQYXJ0IElWIGhhcyB0aGUgc2FtZSBtZWFuaW5nIGFzIGluIFBhcnQgSUlJIGRlYWxpbmcgIHdpdGggRnVuZGFtZW50YWwgUmlnaHRzLiBUaGVyZWZvcmUsIGl0IGluY2x1ZGVzIHRoZSBsZWdpc2xhdGl2ZSBhbmQgZXhlY3V0aXZlIG9yZ2FucyBvZiB0aGUgY2VudHJhbCBhbmQgc3RhdGUgIGdvdmVybm1lbnRzLCBhbGwgbG9jYWwgYXV0aG9yaXRpZXMgYW5kIGFsbCBvdGhlciBwdWJsaWMgYXV0aG9yaXRpZXMgaW4gdGhlIGNvdW50cnkuICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They promote political and economic  democracy in the country.  ",
        "option2" : " They have been borrowed from the Russian  Constitution. ",
        "option3" : " These have been described as 'novel  features' of the Indian Constitution. ",
        "option4" : " These are directives only to the executive  organ and not to the legislative organ.  "
      }
    },
    {
      "index" : 24,
      "question" : "Under the Constitution, which of the following fundamental rights is not available to an Indian citizen?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IGEpIEZyZWVkb20gdG8gY29udmVydCBhbm90aGVyIHBlcnNvbiB0byBvbmUncyBvd24gcmVsaWdpb24uICAgYikgRnJlZWRvbSB0byBwcm9wYWdhdGUgdGhlIHZpZXdzIG9mIG90aGVycy4gICBjKSBGcmVlZG9tIG9mIHBpY2tldGluZyBhbmQgZGVtb25zdHJhdGlvbi4gIGQpIE5vbmUgb2YgdGhlIGFib3ZlLW1lbnRpb25lZCByaWdodHMgYXJlIGd1YXJhbnRlZWQgdG8gYW4gSW5kaWFuIGNpdGl6ZW4gICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gICBPcHRpb24gYSBpcyBjb3JyZWN0OiBBcnRpY2xlIDI1IHNheXMgdGhhdCBhbGwgcGVyc29ucyBhcmUgZXF1YWxseSBlbnRpdGxlZCB0byBmcmVlZG9tIG9mIGNvbnNjaWVuY2UgYW5kIHRoZSAgcmlnaHQgdG8gZnJlZWx5IHByb2Zlc3MsIHByYWN0aWNlIGFuZCBwcm9wYWdhdGUgcmVsaWdpb24uIE9uZSBvZiBpdHMgaW1wbGljYXRpb25zIGlzOiAgUmlnaHQgdG8gcHJvcGFnYXRlOiBUcmFuc21pc3Npb24gYW5kIGRpc3NlbWluYXRpb24gb2Ygb25lJ3MgcmVsaWdpb3VzIGJlbGllZnMgdG8gb3RoZXJzIG9yIGV4cG9zaXRpb24gb2YgdGhlICB0ZW5ldHMgb2Ygb25lJ3MgcmVsaWdpb24uIEJ1dCwgaXQgZG9lcyBub3QgaW5jbHVkZSBhIHJpZ2h0IHRvIGNvbnZlcnQgYW5vdGhlciBwZXJzb24gdG8gb25lJ3Mgb3duIHJlbGlnaW9uLiAgRm9yY2libGUgY29udmVyc2lvbnMgaW1waW5nZSBvbiB0aGUgJ2ZyZWVkb20gb2YgY29uc2NpZW5jZScgZ3VhcmFudGVlZCB0byBhbGwgdGhlIHBlcnNvbnMgYWxpa2UuIEluIDE5NzcsICBhIGZpdmUtanVkZ2UgQmVuY2ggb2YgdGhlIFN1cHJlbWUgQ291cnQsIGluIFJldi4gU3RhaW5pc2xhdXMgdmVyc3VzIFN0YXRlIG9mIE1hZGh5YSBQcmFkZXNoLCBoYWQgaGVsZCB0aGF0ICB0aGUgd29yZCAncHJvcGFnYXRlJyBpbiBBcnRpY2xlIDI1IGRvZXMgbm90IGdpdmUgJ3RoZSByaWdodCB0byBjb252ZXJ0IGFub3RoZXIgcGVyc29uIHRvIG9uZSdzIG93biByZWxpZ2lvbiwgIGJ1dCB0byB0cmFuc21pdCBvciBzcHJlYWQgb25lJ3MgcmVsaWdpb24gYnkgYW4gZXhwb3NpdGlvbiBvZiBpdHMgdGVuZXRzJy4gVGhlIENvbnN0aXR1dGlvbiBCZW5jaCBoYWQgYWxzbyAgaGVsZCB0aGVyZSB3YXMgJ25vIGZ1bmRhbWVudGFsIHJpZ2h0IHRvIGNvbnZlcnQgYW5vdGhlciBwZXJzb24gdG8gb25lJ3Mgb3duIHJlbGlnaW9uJyAgT3B0aW9uIGIgYW5kIGMgYXJlIGluY29ycmVjdDogRnJlZWRvbSBvZiBTcGVlY2ggYW5kIEV4cHJlc3Npb24gaW1wbGllcyB0aGF0IGV2ZXJ5IGNpdGl6ZW4gaGFzIHRoZSByaWdodCAgdG8gZXhwcmVzcyBoaXMgdmlld3MsIG9waW5pb25zLCBiZWxpZWZzIGFuZCBjb252aWN0aW9ucyBmcmVlbHkgYnkgd29yZCBvZiBtb3V0aCwgd3JpdGluZywgcHJpbnRpbmcsIHBpY3R1cmluZyAgb3IgaW4gYW55IG90aGVyIG1hbm5lci4gVGhlIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IHRoZSBmcmVlZG9tIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbiBpbmNsdWRlcyB0aGUgIGZvbGxvd2luZzogICAoYSkgUmlnaHQgdG8gcHJvcGFnYXRlIG9uZSdzIHZpZXdzIGFzIHdlbGwgYXMgdGhlIHZpZXdzIG9mIG90aGVycy4gIChiKSBGcmVlZG9tIG9mIHRoZSBwcmVzcy4gIChjKSBGcmVlZG9tIG9mIGNvbW1lcmNpYWwgYWR2ZXJ0aXNlbWVudHMuICAoZCkgUmlnaHQgYWdhaW5zdCB0YXBwaW5nIG9mIHRlbGVwaG9uaWMgY29udmVyc2F0aW9uLiAgKGUpIFJpZ2h0IHRvIHRlbGVjYXN0LCB0aGF0IGlzLCBnb3Zlcm5tZW50IGhhcyBubyBtb25vcG9seSBvbiBlbGVjdHJvbmljIG1lZGlhLiAgKGYpIFJpZ2h0IGFnYWluc3QgYmFuZGggY2FsbGVkIGJ5IGEgcG9saXRpY2FsIHBhcnR5IG9yIG9yZ2FuaXNhdGlvbi4gIChnKSBSaWdodCB0byBrbm93IGFib3V0IGdvdmVybm1lbnQgYWN0aXZpdGllcy4gIChoKSBGcmVlZG9tIG9mIHNpbGVuY2UuICAgKGkpIFJpZ2h0IGFnYWluc3QgaW1wb3NpdGlvbiBvZiBwcmUtY2Vuc29yc2hpcCBvbiBhIG5ld3NwYXBlci4gIChqKSBSaWdodCB0byBkZW1vbnN0cmF0aW9uIG9yIHBpY2tldGluZyBidXQgbm90IHJpZ2h0IHRvIHN0cmlrZS4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50IC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDcgLSBGdW5kYW1lbnRhbCBSaWdodHMuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Freedom to convert another person to one's  own religion.  ",
        "option2" : " Freedom to propagate the views of others.  ",
        "option3" : " Freedom of picketing and demonstration. ",
        "option4" : " None of the above-mentioned rights are  guaranteed to an Indian citizen            . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 25,
      "question" : "Which of the following benefits does the 'Vertical Farming' can offers in the future towards agricultural growth in the country? 1.  Increased Crop Yields and production. 2.  Economic viability due to lower cost of investments. 3.  Higher efficiency and conservation of water. 4.  Less labour and skill intensive. Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IGFncmljdWx0dXJhbCBncm93dGggaW4gdGhlIGNvdW50cnk/ICAxLiBJbmNyZWFzZWQgQ3JvcCBZaWVsZHMgYW5kIHByb2R1Y3Rpb24uICAyLiBFY29ub21pYyB2aWFiaWxpdHkgZHVlIHRvIGxvd2VyIGNvc3Qgb2YgaW52ZXN0bWVudHMuICAzLiBIaWdoZXIgZWZmaWNpZW5jeSBhbmQgY29uc2VydmF0aW9uIG9mIHdhdGVyLiAgNC4gTGVzcyBsYWJvdXIgYW5kIHNraWxsIGludGVuc2l2ZS4gICAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgYSkgMSBhbmQgMyBvbmx5ICBiKSAxLCAyIGFuZCA0IG9ubHkgIGMpIDIgYW5kIDMgb25seSAgZCkgMSwgMiwgMyBhbmQgNCAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVmVydGljYWwgZmFybWluZyBpcyB0aGUgcHJhY3RpY2Ugb2YgZ3Jvd2luZyBjcm9wcyBpbmRvb3JzLCBvbiB2ZXJ0aWNhbGx5IGluY2xpbmVkIHN1cmZhY2VzLCB1bmRlciBhcnRpZmljaWFsICBjb25kaXRpb25zIG9mIGxpZ2h0IGFuZCB0ZW1wZXJhdHVyZS4gSXQgaXMgZG9uZSBpbiBhIGNvbnRyb2xsZWQgZW52aXJvbm1lbnQsIHdpdGggdGhlIGFpbSBvZiBvcHRpbWlzaW5nIHBsYW50ICBncm93dGguIEl0IGFpbXMgYXQgaGlnaGVyIHByb2R1Y3Rpdml0eSBpbiBzbWFsbGVyIHNwYWNlcyBhbmQgdXNlcyBzb2lsLWxlc3MgbWV0aG9kcyBzdWNoIGFzIGh5ZHJvcG9uaWNzLCAgYXF1YXBvbmljcyBhbmQgYWVyb3Bvbmljcy4gICBBZHZhbnRhZ2VzIG9mIFZlcnRpY2FsIEZhcm1pbmc6ICBPcHRpb24gMSBpcyBjb3JyZWN0LiBJbmNyZWFzZWQgY3JvcCB5aWVsZDogVGhlIG1haW4gYWR2YW50YWdlIG9mIHV0aWxpemluZyB2ZXJ0aWNhbCBmYXJtaW5nIHRlY2hub2xvZ2llcyBpcyAgdGhlIGluY3JlYXNlZCBjcm9wIHlpZWxkIHRoYXQgY29tZXMgd2l0aCBhIHNtYWxsZXIgdW5pdCBhcmVhIG9mIGxhbmQgcmVxdWlyZW1lbnQuIFRoZSBpbmNyZWFzZWQgYWJpbGl0eSB0byAgY3VsdGl2YXRlIGEgbGFyZ2VyIHZhcmlldHkgb2YgY3JvcHMgYXQgb25jZSBpcyBiZWNhdXNlIGNyb3BzIGRvIG5vdCBzaGFyZSB0aGUgc2FtZSBwbG90cyBvZiBsYW5kLiAgIE9wdGlvbiAyIGlzIGluY29ycmVjdC4gRWNvbm9taWMgVmlhYmlsaXR5OiBUaGlzIHR5cGUgb2YgZmFybSBkZXBlbmRzIGhlYXZpbHkgb24gbW9kZXJuIGVuZ2luZWVyaW5nIGFuZCAgYXJjaGl0ZWN0dXJlLCBhcyB3ZWxsIGFzIHRoZSBhcHBsaWNhdGlvbiBvZiBkaWZmZXJlbnQgdGVjaG5vbG9naWVzLiBCdWlsZGluZyB2ZXJ0aWNhbCBmYXJtcyBpbiBleHBlbnNpdmUgIGJ1aWxkaW5ncyBhZGQgdG8gdGhlIHRvdGFsIGludmVzdG1lbnQgYW5kIG9wZXJhdGlvbmFsIGNvc3RzLiAgT3B0aW9uIDMgaXMgY29ycmVjdC4gV2F0ZXIgY29uc2VydmF0aW9uOiBWZXJ0aWNhbCBmYXJtaW5nIGFsbG93cyB0byBwcm9kdWNlIGNyb3BzIHdpdGggNzAtOTUlIGxlc3Mgd2F0ZXIgIHRoYW4gcmVxdWlyZWQgZm9yIG5vcm1hbCBjdWx0aXZhdGlvbi4gSW4gYWRkaXRpb24sIHdpdGggdGhlIHBsYW50cyBiZWluZyBncm93biBpbiBodWdlIHZlcnRpY2FsIGdyZWVuaG91c2VzLCAgdGhlIHRyYW5zcGlyYXRpb24gdGhhdCB3aWxsIG9jY3VyIG5hdHVyYWxseSB3aWxsIGJlIGhhcm5lc3NlZCBhbmQgcmV1c2VkIGFnYWluIGZvciBpcnJpZ2F0aW9uLiAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0LiBMYWJvdXIgQ29zdHM6IEluIHZlcnRpY2FsIGZhcm1pbmcsIGxhYm91ciBjb3N0cyBjYW4gYmUgZXZlbiBoaWdoZXIgZHVlIHRvIHRoZWlyICBjb25jZW50cmF0aW9uIGluIHVyYmFuIGNlbnRyZXMgd2hlcmUgd2FnZXMgYXJlIGhpZ2hlciwgYXMgd2VsbCBhcyB0aGUgbmVlZCBmb3IgbW9yZSBza2lsbGVkIGxhYm91ci4gIEF1dG9tYXRpb24gaW4gdmVydGljYWwgZmFybXMsIGhvd2V2ZXIsIG1heSBsZWFkIHRvIHRoZSBuZWVkIGZvciBmZXdlciB3b3JrZXJzLiBNYW51YWwgcG9sbGluYXRpb24gbWF5ICBiZWNvbWUgb25lIG9mIHRoZSBtb3JlIGxhYm91ci1pbnRlbnNpdmUgZnVuY3Rpb25zIGluIHZlcnRpY2FsIGZhcm1zLiAgSW50ZXJmZXJlIHdpdGggUG9sbGluYXRpb246IFZlcnRpY2FsIGZhcm1pbmcgdGFrZXMgcGxhY2UgaW4gYSBjb250cm9sbGVkIGVudmlyb25tZW50IHdpdGhvdXQgdGhlIHByZXNlbmNlICBvZiBpbnNlY3RzLiBBcyBzdWNoLCB0aGUgcG9sbGluYXRpb24gcHJvY2VzcyBuZWVkcyB0byBiZSBkb25lIG1hbnVhbGx5LCB3aGljaCB3aWxsIGJlIGxhYm91ciBpbnRlbnNpdmUgYW5kICBjb3N0bHkuICBEaXNydXB0aW9uIHRvIHRoZSBSdXJhbCBTZWN0b3I6IEFub3RoZXIgZm9yZXNlZW4gY2hhbGxlbmdlIGFuZCBkaXNhZHZhbnRhZ2Ugb2YgdmVydGljYWwgZmFybWluZyBpbnZvbHZlcyAgdGhlIHBvdGVudGlhbCBmb3IgZGlzcnVwdGluZyB0aGUgcnVyYWwgc2VjdG9yLCBlc3BlY2lhbGx5IHRob3NlIGNvbW11bml0aWVzIHdpdGggZWNvbm9taWVzIHRoYXQgYXJlICBkZXBlbmRlbnQgb24gYWdyaWN1bHR1cmUuIFZlcnRpY2FsIGZhcm1zIGNhbiByZW5kZXIgdHJhZGl0aW9uYWwgZmFybWluZyBqb2JzIG9ic29sZXRlLiAgS25vd2xlZGdlIEJhc2U6ICAgVGhlIGZ1dHVyZSBvZiB2ZXJ0aWNhbCBmYXJtaW5nIGlzIGJyaWdodGVyIHRoYW4gb25jZSB0aG91Z2h0IC1Gb3J1bUlBUyBCbG9nICBXaGF0IGlzIFZlcnRpY2FsIEZhcm1pbmc/LUZvcnVtSUFTIEJsb2cgIEFkdmFudGFnZXMgb2YgVmVydGljYWwgRmFybWluZyAoZXBvbmljLmNvbS5hdSkgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "1, 2 and 4 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 26,
      "question" : "Suppose the Parliament of India has made a law that seeks to implement the provisions of Article 39(b) and 39(c) of the Indian Constitution. Such a law cannot be declared void by the Courts even if it is in contravention to which of the following Fundamental Rights?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IDM5KGIpIGFuZCAzOShjKSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbi4gU3VjaCBhIGxhdyBjYW5ub3QgYmUgZGVjbGFyZWQgdm9pZCBieSB0aGUgQ291cnRzIGV2ZW4gaWYgaXQgaXMgaW4gIGNvbnRyYXZlbnRpb24gdG8gd2hpY2ggb2YgdGhlIGZvbGxvd2luZyBGdW5kYW1lbnRhbCBSaWdodHM/ICAgYSkgQXJ0aWNsZSAxNCBhbmQgMTUgICBiKSBBcnRpY2xlIDE1IGFuZCAyMSAgIGMpIEFydGljbGUgMTQgYW5kIDE5ICAgZCkgQXJ0aWNsZSAxOSBhbmQgMjEgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IEFydGljbGUgMzFDIHN0YXRlcyB0aGF0IG5vIGxhdyB3aGljaCBzZWVrcyB0byBpbXBsZW1lbnQgdGhlIHNvY2lhbGlzdGljIERpcmVjdGl2ZSAgUHJpbmNpcGxlcyBzcGVjaWZpZWQgaW4gQXJ0aWNsZSAzOSAoYikgYW5kIChjKSBzaGFsbCBiZSB2b2lkIG9uIHRoZSBncm91bmQgb2YgY29udHJhdmVudGlvbiBvZiB0aGUgRnVuZGFtZW50YWwgIFJpZ2h0cyBjb25mZXJyZWQgYnkgQXJ0aWNsZSAxNCAoZXF1YWxpdHkgYmVmb3JlIGxhdyBhbmQgZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzKSBhbmQgQXJ0aWNsZSAxOSAocHJvdGVjdGlvbiAgb2Ygc2l4IHJpZ2h0cyBpbiByZXNwZWN0IG9mIHNwZWVjaCwgYXNzZW1ibHksIG1vdmVtZW50LCBldGMpLiBUaHN1LCBpdCBnaXZlcyBwcmltYWN5IHRvIHRoZSBpbXBsZW1lbnRhdGlvbiAgb2YgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIHNwZWNpZmllZCBpbiBBcnRpY2xlIDM5IChiKSBhbmQgKGMpIG92ZXIgRnVuZGFtZW50YWwgUmlnaHRzIHVuZGVyIGFydGljbGUgMTQgYW5kICAxOS4gQXJ0aWNsZSAzMUMgd2FzIGludHJvZHVjZWQgaW4gdGhlIEluZGlhbiBDb25zdGl0dXRpb24gYnkgdGhlIDI1dGggQW1lbmRtZW50IEFjdCwgMTk3MS4gICBTb3VyY2U6ICBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBlZGl0aW9uIC0gQ2hhcHRlciA4IC0gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Article 14 and 15  ",
        "option2" : "Article 15 and 21  ",
        "option3" : "Article 14 and 19  ",
        "option4" : "Article 19 and 21  "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following Directive Principles of State Policy were added later through various amendments to the Constitution?  1.  To secure opportunities for healthy development of children.  2.  To prevent concentration of wealth and means of production.  3.  To promote equal justice and to provide free legal aid to the poor.  4.  To make provision for just and humane conditions of work and maternity relief.  Select the correct answer from the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IGFtZW5kbWVudHMgdG8gdGhlIENvbnN0aXR1dGlvbj8gICAxLiBUbyBzZWN1cmUgb3Bwb3J0dW5pdGllcyBmb3IgaGVhbHRoeSBkZXZlbG9wbWVudCBvZiBjaGlsZHJlbi4gICAyLiBUbyBwcmV2ZW50IGNvbmNlbnRyYXRpb24gb2Ygd2VhbHRoIGFuZCBtZWFucyBvZiBwcm9kdWN0aW9uLiAgIDMuIFRvIHByb21vdGUgZXF1YWwganVzdGljZSBhbmQgdG8gcHJvdmlkZSBmcmVlIGxlZ2FsIGFpZCB0byB0aGUgcG9vci4gICA0LiBUbyBtYWtlIHByb3Zpc2lvbiBmb3IganVzdCBhbmQgaHVtYW5lIGNvbmRpdGlvbnMgb2Ygd29yayBhbmQgbWF0ZXJuaXR5IHJlbGllZi4gICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIGZyb20gdGhlIGNvZGUgZ2l2ZW4gYmVsb3c6ICAgYSkgMSBhbmQgMiBvbmx5ICAgYikgMiBhbmQgNCBvbmx5ICAgYykgMSBhbmQgMyBvbmx5ICAgZCkgMyBhbmQgNCBvbmx5ICAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgYXJlIGVudW1lcmF0ZWQgaW4gUGFydCBJViBvZiB0aGUgQ29uc3RpdHV0aW9uIGZyb20gQXJ0aWNsZXMgMzYgdG8gIDUxLiBUaGV5IHdlcmUgYW1lbmRlZCBmb3VyIHRpbWVzIHRocm91Z2ggNDJuZCwgNDR0aCwgODZ0aCBhbmQgOTd0aCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0cy4gICBTdGF0ZW1lbnQgMSBhbmQgMyBhcmUgY29ycmVjdDogVGhlIDQybmQgQW1lbmRtZW50IEFjdCBvZiAxOTc2IGFkZGVkIGZvdXIgbmV3IERpcmVjdGl2ZSBQcmluY2lwbGVzIHRvICB0aGUgb3JpZ2luYWwgbGlzdC4gVGhleSByZXF1aXJlIHRoZSBTdGF0ZTogICAxKSBUbyBzZWN1cmUgb3Bwb3J0dW5pdGllcyBmb3IgaGVhbHRoeSBkZXZlbG9wbWVudCBvZiBjaGlsZHJlbiAoQXJ0aWNsZSAzOSkuICAyKSBUbyBwcm9tb3RlIGVxdWFsIGp1c3RpY2UgYW5kIHRvIHByb3ZpZGUgZnJlZSBsZWdhbCBhaWQgdG8gdGhlIHBvb3IgKEFydGljbGUgMzkgQSkuICAzKSBUbyB0YWtlIHN0ZXBzIHRvIHNlY3VyZSB0aGUgcGFydGljaXBhdGlvbiBvZiB3b3JrZXJzIGluIHRoZSBtYW5hZ2VtZW50IG9mIGluZHVzdHJpZXMgKEFydGljbGUgNDMgQSkuICA0KSBUbyBwcm90ZWN0IGFuZCBpbXByb3ZlIHRoZSBlbnZpcm9ubWVudCBhbmQgdG8gc2FmZWd1YXJkIGZvcmVzdHMgYW5kIHdpbGRsaWZlIChBcnRpY2xlIDQ4IEEpLiAgIFN0YXRlbWVudCAyIGFuZCA0IGFyZSBpbmNvcnJlY3Q6IEFydGljbGUgMzkoYykgZGlyZWN0cyB0aGUgc3RhdGUgdG8gcHJldmVudCBjb25jZW50cmF0aW9uIG9mIHdlYWx0aCBhbmQgIG1lYW5zIG9mIHByb2R1Y3Rpb24uIEFydGljbGUgNDIgZGlyZWN0cyB0aGUgc3RhdGUgdG8gbWFrZSBwcm92aXNpb24gZm9yIGp1c3QgYW5kIGh1bWFuZSBjb25kaXRpb25zIG9mIHdvcmsgIGFuZCBtYXRlcm5pdHkgcmVsaWVmLiBUaGVzZSBhcmUgcGFydCBvZiB0aGUgb3JpZ2luYWwgQ29uc3RpdHV0aW9uLiAgIEtub3dsZWRnZSBCYXNlOiAgIE90aGVyIGFtZW5kbWVudCB0byBEUFNQOiAgIDEpIFRoZSA0NHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3OCBhZGRlZCBvbmUgbW9yZSBEaXJlY3RpdmUgUHJpbmNpcGxlLCB3aGljaCByZXF1aXJlcyB0aGUgU3RhdGUgdG8gIG1pbmltaXNlIGluZXF1YWxpdGllcyBpbiBpbmNvbWUsIHN0YXR1cywgZmFjaWxpdGllcyBhbmQgb3Bwb3J0dW5pdGllcyAoQXJ0aWNsZSAzOCkuICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgMikgVGhlIDg2dGggQW1lbmRtZW50IEFjdCBvZiAyMDAyIGNoYW5nZWQgdGhlIHN1YmplY3QtbWF0dGVyIG9mIEFydGljbGUgNDUgYW5kIG1hZGUgZWxlbWVudGFyeSAgZWR1Y2F0aW9uIGEgZnVuZGFtZW50YWwgcmlnaHQgdW5kZXIgQXJ0aWNsZSAyMSBBLiAgIDMpIFRoZSA5N3RoIEFtZW5kbWVudCBBY3Qgb2YgMjAxMSBhZGRlZCBhIG5ldyBEaXJlY3RpdmUgUHJpbmNpcGxlIHJlbGF0aW5nIHRvIGNvb3BlcmF0aXZlIHNvY2lldGllcy4gSXQgIHJlcXVpcmVzIHRoZSBzdGF0ZSB0byBwcm9tb3RlIHZvbHVudGFyeSBmb3JtYXRpb24sIGF1dG9ub21vdXMgZnVuY3Rpb25pbmcsIGRlbW9jcmF0aWMgY29udHJvbCBhbmQgIHByb2Zlc3Npb25hbCBtYW5hZ2VtZW50IG9mIGNvLW9wZXJhdGl2ZSBzb2NpZXRpZXMgKEFydGljbGUgNDNCKS4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50IC0gNnRoIGVkaXRpb24gLSBDaGFwdGVyIDggLSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 and 4 only   "
      }
    },
    {
      "index" : 28,
      "question" : "What was the key ruling of the Supreme Court in the 'State of Madras v. Champakam Dorairajan' case? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IGEpIFRoZSBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3kgaGF2ZSBhIHBvc2l0aW9uIG9mIGxlZ2FsIHByaW1hY3kgYW5kIHN1cHJlbWFjeSBvdmVyIHRoZSAgRnVuZGFtZW50YWwgUmlnaHRzLiAgYikgSW5kaWFuIENvbnN0aXR1dGlvbiBpcyBmb3VuZGVkIG9uIHRoZSBiZWRyb2NrIG9mIGJhbGFuY2UgYmV0d2VlbiB0aGUgRnVuZGFtZW50YWwgUmlnaHRzIGFuZCB0aGUgIERpcmVjdGl2ZSBQcmluY2lwbGVzLiAgYykgVGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBjYW4gbmV2ZXIgYmUgYW1lbmRlZCBieSB0aGUgUGFybGlhbWVudCwgZXZlbiBieSBlbmFjdGluZyBDb25zdGl0dXRpb25hbCAgYW1lbmRtZW50IGFjdHMuICBkKSBUaGUgRnVuZGFtZW50YWwgUmlnaHRzIHdvdWxkIHByZXZhaWwgb3ZlciB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LCBpbiBjYXNlIG9mIGFueSBjb25mbGljdCAgYmV0d2VlbiB0aGUgdHdvLiAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT3B0aW9uIGQgaXMgY29ycmVjdCBhbmQgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiBUaGUgU3RhdGUgb2YgTWFkcmFzIHYuIENoYW1wYWthbSBEb3JhaXJhamFuIGlzIGEgbGFuZG1hcmsgIGRlY2lzaW9uIG9mIHRoZSBTdXByZW1lIENvdXJ0IG9mIEluZGlhLiBUaGlzIGp1ZGdlbWVudCBsZWQgdG8gdGhlIGZpcnN0IGFtZW5kbWVudCBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mICBJbmRpYS4gVGhlIFN1cHJlbWUgY291cnQgaGVsZCB0aGF0IERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSBoYXZlIHRvIGNvbmZvcm0gdG8gYW5kIHJ1biBhcyAgc3Vic2lkaWFyeSB0byB0aGUgQ2hhcHRlciBvZiBGdW5kYW1lbnRhbCBSaWdodHMuIFRoZSBTdXByZW1lIENvdXJ0IHJ1bGVkIHRoYXQgaW4gY2FzZSBvZiBhbnkgY29uZmxpY3QgIGJldHdlZW4gdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBhbmQgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzLCB0aGUgZm9ybWVyIHdvdWxkIHByZXZhaWwuIEJ1dCwgaXQgYWxzbyBoZWxkICB0aGF0IHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgY291bGQgYmUgYW1lbmRlZCBieSB0aGUgUGFybGlhbWVudCBieSBlbmFjdGluZyBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgIGFjdHMuICBPcHRpb24gYSBpcyBpbmNvcnJlY3QuIFRoZSA0Mm5kIEFtZW5kbWVudCBBY3QgYWNjb3JkZWQgdGhlIHBvc2l0aW9uIG9mIGxlZ2FsIHByaW1hY3kgYW5kIHN1cHJlbWFjeSAgdG8gdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIG92ZXIgdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cyBjb25mZXJyZWQgYnkgQXJ0aWNsZXMgMTQsIDE5IGFuZCAzMS4gSG93ZXZlciwgIHRoaXMgZXh0ZW5zaW9uIHdhcyBkZWNsYXJlZCBhcyB1bmNvbnN0aXR1dGlvbmFsIGFuZCBpbnZhbGlkIGJ5IHRoZSBTdXByZW1lIENvdXJ0IGluIHRoZSBNaW5lcnZhIE1pbGxzIGNhc2UgICgxOTgwKS4gSXQgbWVhbnQgdGhhdCB0aGUgRGlyZWN0aXZlIFByaW5jaXBsZXMgd2VyZSBvbmNlIGFnYWluIG1hZGUgc3Vib3JkaW5hdGUgdG8gdGhlIEZ1bmRhbWVudGFsIFJpZ2h0cy4gIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gSW4gdGhlIE1pbmVydmEgTWlsbHMgY2FzZSAoMTk4MCksIHRoZSBTdXByZW1lIENvdXJ0IGFsc28gaGVsZCB0aGF0ICd0aGUgSW5kaWFuICBDb25zdGl0dXRpb24gaXMgZm91bmRlZCBvbiB0aGUgYmVkcm9jayBvZiB0aGUgYmFsYW5jZSBiZXR3ZWVuIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgYW5kIHRoZSAgRGlyZWN0aXZlIFByaW5jaXBsZXMuIFRoZXkgdG9nZXRoZXIgY29uc3RpdHV0ZSB0aGUgY29yZSBvZiBjb21taXRtZW50IHRvIHNvY2lhbCByZXZvbHV0aW9uLiBUaGV5IGFyZSBsaWtlICB0d28gd2hlZWxzIG9mIGEgY2hhcmlvdCwgb25lIG5vIGxlc3MgdGhhbiB0aGUgb3RoZXIuIFRvIGdpdmUgYWJzb2x1dGUgcHJpbWFjeSB0byBvbmUgb3ZlciB0aGUgb3RoZXIgaXMgdG8gIGRpc3R1cmIgdGhlIGhhcm1vbnkgb2YgdGhlIENvbnN0aXR1dGlvbi4gVGhpcyBoYXJtb255IGFuZCBiYWxhbmNlIGJldHdlZW4gdGhlIHR3byBpcyBhbiBlc3NlbnRpYWwgZmVhdHVyZSAgb2YgdGhlIGJhc2ljIHN0cnVjdHVyZSBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgU291cmNlOiAgSW5kaWFuIFBvbGl0eSBieSBMYXhtaWthbnRoLCA2dGggRWRpdGlvbiwgOHRoIENoYXB0ZXIgICBodHRwczovL21haW4uc2NpLmdvdi5pbi9qdWRnbWVudC9qdWRpcy8xMTk0LnBkZiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The Directive Principles of State Policy have  a position of legal primacy and supremacy  over the Fundamental Rights. ",
        "option2" : " Indian Constitution is founded on the  bedrock of balance between the  Fundamental Rights and the Directive  Principles. ",
        "option3" : " The Fundamental Rights can never be  amended by the Parliament, even by  enacting Constitutional amendment acts. ",
        "option4" : " The Fundamental Rights would prevail over  the Directive Principles of State Policy, in  case of any conflict between the two.  "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following is the most appropriate description of the term 'Fabian Socialism'?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IGEpIEFuIGlkZW9sb2d5IHRoYXQgcHJvbW90ZXMgZ3JhZHVhbCBlc3RhYmxpc2htZW50IG9mIGRlbW9jcmF0aWMgc29jaWFsaXNtIHRocm91Z2ggcGVhY2VmdWwgbWVhbnMuICBiKSBBbiBpZGVvbG9neSB0aGF0IGFkdm9jYXRlcyB0aGUgYWR2YW5jZW1lbnQgb2Ygc29jaWFsaXNtIHRocm91Z2ggcmV2b2x1dGlvbmFyeSBvdmVydGhyb3cuICBjKSBBIHR5cGUgb2Ygc29jaWFsaXN0aWMgaWRlb2xvZ3kgdGhhdCBpcyB2ZXJ5IHByb3RlY3RpdmUgb2YgbmF0dXJhbCByZXNvdXJjZXMuICAgZCkgQSBzb2NpYWxpc3RpYyBpZGVvbG9neSB0aGF0IGludm9sdmVzIHRoZSBtYXJrZXQgbWVjaGFuaXNtIGZvciBhbGxvY2F0aW5nIGVjb25vbWljIHJlc291cmNlcy4gICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgU29jaWFsaXNtIGlzIGEgc3lzdGVtIGluIHdoaWNoIGV2ZXJ5IHBlcnNvbiBpbiB0aGUgY29tbXVuaXR5IGhhcyBhbiBlcXVhbCBzaGFyZSBvZiB0aGUgdmFyaW91cyBlbGVtZW50cyAgb2YgcHJvZHVjdGlvbiwgZGlzdHJpYnV0aW9uLCBhbmQgZXhjaGFuZ2Ugb2YgcmVzb3VyY2VzLiBTdWNoIGEgZm9ybSBvZiBvd25lcnNoaXAgaXMgZ3JhbnRlZCB0aHJvdWdoIGEgIGRlbW9jcmF0aWMgc3lzdGVtIG9mIGdvdmVybmFuY2UuICAgT3B0aW9uIGEgaXMgY29ycmVjdDogRmFiaWFuIHNvY2lhbGlzbSBpcyBhIGZvcm0gb2Ygc29jaWFsaXNtIHRoYXQgYWR2YW5jZXMgdGhlIHByaW5jaXBsZXMgb2YgZGVtb2NyYXRpYyAgZnJhbWV3b3JrIHRvIGFjaGlldmUgZ3JhZHVhbCBjb252ZXJzaW9uIHRvIHNvY2lhbGlzbSBieSBwZWFjZWZ1bCBtZWFucyByYXRoZXIgdGhhbiBieSByZXZvbHV0aW9uYXJ5ICBvdmVydGhyb3cuICBUaGUgRmFiaWFuIFNvY2lldHkgaXMgYSBCcml0aXNoIHNvY2lhbGlzdCBvcmdhbmlzYXRpb24gd2hvc2UgcHVycG9zZSBpcyB0byBhZHZhbmNlIHRoZSBwcmluY2lwbGVzIG9mICBkZW1vY3JhdGljIHNvY2lhbGlzbSB2aWEgZ3JhZHVhbGlzdCBhbmQgcmVmb3JtaXN0IGVmZm9ydCBpbiBkZW1vY3JhY2llcywgcmF0aGVyIHRoYW4gYnkgcmV2b2x1dGlvbmFyeSAgb3ZlcnRocm93LiBGYWJpYW5zJyBmdW5kYW1lbnRhbCBhc3N1bXB0aW9uIHdhcyB0aGF0IHNvY2lhbGlzbSB3b3VsZCBiZSBpbnRyb2R1Y2VkIG5vdCB0aHJvdWdoIGNsYXNzICBjb25mbGljdCwgYnV0IGJ5IHdheSBvZiBkZW1vY3JhdGljIHdlbGZhcmUgbGVnaXNsYXRpb24gYWRtaW5pc3RlcmVkIGJ5IGNpdmlsIHNlcnZpY2UuICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0OiBNYXJ4IGJlbGlldmVkIHRoYXQgY2FwaXRhbGlzdCBzeXN0ZW0gb2YgZWNvbm9teSB3YXMgdGhlIGNoaWVmIGNhdXNlIG9mIHRoZSBjb21tb24gIHBlb3BsZSdzIG1pc2VyeS4gSGUgaW5zaXN0ZWQgdXBvbiBjbGFzcyBzdHJ1Z2dsZSBhbmQgYWxzbyBpdHMgaW50ZW5zaWZpY2F0aW9uIHdoaWNoIHdvdWxkIHVsdGltYXRlbHkgbGVhZCB0byAgdGhlIG92ZXJ0aHJvdyBvZiBjYXBpdGFsaXNtLiBUaGlzLCBhY2NvcmRpbmcgdG8gTWFyeCwgaXMgdGhlIG9ubHkgd2F5IG9mIGVtYW5jaXBhdGluZyBvcHByZXNzZWQgcGVvcGxlLiAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogR3JlZW4gc29jaWFsaXNtIGlzIHByb3RlY3RpdmUgb2YgbmF0dXJhbCByZXNvdXJjZXMuIFRoZSBwcm9kdWN0aW9uIHByb2Nlc3MgaXMgIGZvY3VzZWQgb24gZW5zdXJpbmcgdGhhdCBldmVyeSBtZW1iZXIgb2YgdGhlIGNvbW11bml0eSBoYXMgZW5vdWdoIGFjY2VzcyB0byBiYXNpYyBnb29kcy4gTGFyZ2UgIGNvcnBvcmF0aW9ucyBpbiBhIGdyZWVuIHNvY2lhbGlzdGljIHNvY2lldHkgYXJlIG93bmVkIGFuZCBydW4gYnkgdGhlIHB1YmxpYy4gSW4gYWRkaXRpb24sIGdyZWVuIHNvY2lhbGlzbSAgcHJvbW90ZXMgdGhlIGRldmVsb3BtZW50IGFuZCB1c2Ugb2YgcHVibGljIHRyYW5zaXQsIGFzIHdlbGwgYXMgdGhlIHByb2Nlc3NpbmcgYW5kIHNhbGUgb2YgbG9jYWxseSBncm93biAgZm9vZC4gIE9wdGlvbiBkIGlzIGluY29ycmVjdDogTWFya2V0IHNvY2lhbGlzbSByZWZlcnMgdG8gdmFyaW91cyBlY29ub21pYyBzeXN0ZW1zIHRoYXQgaW52b2x2ZSBlaXRoZXIgcHVibGljICBvd25lcnNoaXAgb3Igd29ya2VyIGNvb3BlcmF0aXZlIG93bmVyc2hpcCBvdmVyIHRoZSBtZWFucyBvZiBwcm9kdWN0aW9uLCBvciBhIGNvbWJpbmF0aW9uIG9mIGJvdGguIEl0ICBpbnZvbHZlcyB0aGUgbWFya2V0IG1lY2hhbmlzbSBmb3IgYWxsb2NhdGluZyBlY29ub21pYyBvdXRwdXQsIGRlY2lkaW5nIHdoYXQgdG8gcHJvZHVjZSBhbmQgaW4gd2hhdCAgcXVhbnRpdHkuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnJpdGFubmljYS5jb20vZXZlbnQvRmFiaWFuaXNtICAgaHR0cHM6Ly93d3cuY2FtYnJpZGdlLm9yZy9jb3JlL2pvdXJuYWxzL2pvdXJuYWwtb2YtYnJpdGlzaC1zdHVkaWVzL2FydGljbGUvYWJzL2ZhYmlhbi1zb2NpYWxpc20tYS0gdGhlb3J5LW9mLXJlbnQtYXMtZXhwbG9pdGF0aW9uLzVDNDg3ODYwMDQ1Rjk2MDFCOEM1QUU0M0Q2MURFNkU1ICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " An ideology that promotes gradual  establishment of democratic socialism  through peaceful means. ",
        "option2" : " An ideology that advocates the  advancement of socialism through  revolutionary overthrow. ",
        "option3" : " A type of socialistic ideology that is very  protective of natural resources.  ",
        "option4" : " A socialistic ideology that involves the  market mechanism for allocating economic  resources.   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements regarding NITI Aayog's report 'Health Insurance for India's Missing Middle': 1.  The report states that the bottom thirty percent of the population are not covered under any health insurance schemes in India. 2.  The uncovered sections mostly include self-employed in agriculture and informal sector in rural areas. 3.  The report advocated for phasing out government supported health insurance scheme in favor of standardize health insurance products led by private sector. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IE1pZGRsZSc6ICAxLiBUaGUgcmVwb3J0IHN0YXRlcyB0aGF0IHRoZSBib3R0b20gdGhpcnR5IHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24gYXJlIG5vdCBjb3ZlcmVkIHVuZGVyIGFueSBoZWFsdGggIGluc3VyYW5jZSBzY2hlbWVzIGluIEluZGlhLiAgMi4gVGhlIHVuY292ZXJlZCBzZWN0aW9ucyBtb3N0bHkgaW5jbHVkZSBzZWxmLWVtcGxveWVkIGluIGFncmljdWx0dXJlIGFuZCBpbmZvcm1hbCBzZWN0b3IgaW4gcnVyYWwgYXJlYXMuICAzLiBUaGUgcmVwb3J0IGFkdm9jYXRlZCBmb3IgcGhhc2luZyBvdXQgZ292ZXJubWVudCBzdXBwb3J0ZWQgaGVhbHRoIGluc3VyYW5jZSBzY2hlbWUgaW4gZmF2b3Igb2YgIHN0YW5kYXJkaXplIGhlYWx0aCBpbnN1cmFuY2UgcHJvZHVjdHMgbGVkIGJ5IHByaXZhdGUgc2VjdG9yLiAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICBhKSAxIGFuZCAyIG9ubHkgIGIpIDIgb25seSAgYykgMSBhbmQgMyBvbmx5ICBkKSAxLCAyIGFuZCAzICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBOaXRpIEFheW9nIGhhcyByZWxlYXNlZCBhIHJlcG9ydCB0aXRsZWQgJ0hlYWx0aCBJbnN1cmFuY2UgZm9yIEluZGlhJ3MgTWlzc2luZyBNaWRkbGUnLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgcmVwb3J0IHBvaW50cyBvdXQgdGhlIGZhY3QgdGhhdCBhdCBsZWFzdCAzMCUgb2YgdGhlIHBvcHVsYXRpb24sIG9yIDQwIGNyb3JlICBpbmRpdmlkdWFscyAobm90IHRoZSBib3R0b20gMzAlKSAtIGNhbGxlZCB0aGUgbWlzc2luZyBtaWRkbGUgYXJlIGRldm9pZCBvZiBhbnkgZmluYW5jaWFsIHByb3RlY3Rpb24gZm9yICBoZWFsdGguIEluZmFjdCwgdGhlIEF5dXNobWFuIEJoYXJhdCAtIFByYWRoYW4gTWFudHJpIEphbiBBcm9neWEgWW9qYW5hIChBQi1QTUpBWSkgYW5kIFN0YXRlICBHb3Zlcm5tZW50IHNjaGVtZXMgcHJvdmlkZSBjb21wcmVoZW5zaXZlIGhvc3BpdGFsaXphdGlvbiBjb3ZlciB0byB0aGUgYm90dG9tIDUwJSBvZiB0aGUgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBwb3B1bGF0aW9uLiBBbm90aGVyIDIwJSBvZiB0aGUgcG9wdWxhdGlvbiBhcmUgY292ZXJlZCB0aHJvdWdoIHNvY2lhbCBoZWFsdGggaW5zdXJhbmNlIGFuZCBwcml2YXRlICB2b2x1bnRhcnkgaGVhbHRoIGluc3VyYW5jZS4gICBCdXQgdGhlIHJlbWFpbmluZyAzMCUgb2YgdGhlIHBvcHVsYXRpb24gb3IgNDAgY3JvcmUgaW5kaXZpZHVhbHMgYXJlIHdpdGhvdXQgYW55IGhlYWx0aCBpbnN1cmFuY2UuIFRoaXMgIHVuY292ZXJlZCBwb3B1bGF0aW9uIGlzIHRlcm1lZCBhcyB0aGUgbWlzc2luZyBtaWRkbGUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE1pc3NpbmcgbWlkZGxlICh1bmNvdmVyZWQgc2VjdGlvbnMpIHByZWRvbWluYW50bHkgY29uc3RpdHV0ZXMgdGhlIHNlbGYtZW1wbG95ZWQgIChhZ3JpY3VsdHVyZSBhbmQgbm9uLWFncmljdWx0dXJlKSwgdGhlIGluZm9ybWFsIHNlY3RvciBpbiBydXJhbCBhcmVhcyBhbmQgYSBicm9hZCBhcnJheSBvZiBvY2N1cGF0aW9ucyAtICBpbmZvcm1hbCwgc2VtaS1mb3JtYWwsIGFuZCBmb3JtYWwgLSBpbiB1cmJhbiBhcmVhcy4gICBUaGUgb2NjdXBhdGlvbnMgYW5kIG5hdHVyZSBvZiBlbXBsb3ltZW50IG9mIHRoaXMgc2VnbWVudCBvZiB0aGUgbWlzc2luZyBtaWRkbGUgaGF2ZSBhIGJlYXJpbmcgb24gdGhlaXIgIGFjY2VzcyB0byBhZmZvcmRhYmxlIGhlYWx0aGNhcmUsIGFuZCB1bHRpbWF0ZWx5IGhlYWx0aCBvdXRjb21lcy4gVGhlaXIgZW1wbG95bWVudCBpcyBwcmVjYXJpb3VzLCBpbmNvbWVzICBhcmUgdW5zdGFibGUsIGFuZCBtb3N0IHdvcmsgd2l0aG91dCBhbnkgZm9ybWFsIGNvbnRyYWN0LiBGdXJ0aGVyLCB0aGV5IGxhY2sgYW55IHJlcHJlc2VudGF0aW9uIHRocm91Z2ggIHVuaW9ucyBvciBhc3NvY2lhdGlvbnMuIENvbnNlcXVlbnRseSwgdGhleSBsYWNrIGJhcmdhaW5pbmcgcG93ZXIgdG8gbmVnb3RpYXRlIHNhZmVyIHdvcmtpbmcgY29uZGl0aW9ucyAgYW5kIGJhc2ljIHNvY2lhbCBzZWN1cml0eSBiZW5lZml0cy4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIHJlcG9ydCBkb2VzIG5vdCByZWNvbW1lbmQgcGhhc2luZyBvdXQgZ292ZXJubWVudCBzdXBwb3J0ZWQgaGVhbHRoICBpbnN1cmFuY2UuIE9uIHRoZSBjb250cmFyeSwgaXQgYWR2b2NhdGVzIGZvciB0aGUgZXhwYW5zaW9uIG9mIFByYWRoYW4gTWFudHJpIEphbiBBcm9neWEgWW9qYW5hIHRvIGEgIHdpZGVyIHNldCBvZiBiZW5lZmljaWFyaWVzLiAgSXQgYWxzbyByZWNvbW1lbmRzIGZvY3VzaW5nIG9uIGluY3JlYXNpbmcgY29uc3VtZXIgYXdhcmVuZXNzIG9mIGhlYWx0aCBpbnN1cmFuY2UgYW5kIGRldmVsb3BpbmcgYSAgbW9kaWZpZWQsIHN0YW5kYXJkaXplZCBoZWFsdGggaW5zdXJhbmNlIHByb2R1Y3QgbGlrZSAnQXJvZ3lhIFNhbmplZXZhbmknLiBJdCBpcyBhIHN0YW5kYXJkaXNlZCBoZWFsdGggIGluc3VyYW5jZSBwcm9kdWN0IGxhdW5jaGVkIGJ5IHRoZSBJbnN1cmFuY2UgUmVndWxhdG9yeSBEZXZlbG9wbWVudCBBdXRob3JpdHkgb2YgSW5kaWEsIElSREFJKSBpbiAyMDIwLiAgU291cmNlOiBOSVRJIEFheW9nIFJlbGVhc2VzIFJlcG9ydCBvbiAnSGVhbHRoIEluc3VyYW5jZSBmb3IgSW5kaWEncyBNaXNzaW5nIE1pZGRsZScgLUZvcnVtSUFTIEJsb2cgIEhlYWx0aEluc3VyYW5jZS1mb3JJbmRpYXNNaXNzaW5nTWlkZGxlXzI4LTEwLTIwMjEucGRmIChuaXRpLmdvdi5pbikgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3          . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 31,
      "question" : "Which one of the following factors constitutes the best safeguard of liberty in a liberal democracy? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IGEpIEEgY29tbWl0dGVkIGp1ZGljaWFyeSAgYikgQ2VudHJhbGl6YXRpb24gb2YgcG93ZXJzICBjKSBFbGVjdGVkIGdvdmVybm1lbnQgIGQpIFNlcGFyYXRpb24gb2YgcG93ZXJzICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgT3B0aW9uIGQgaXMgY29ycmVjdC4gVGhlIFNlcGFyYXRpb24gb2YgcG93ZXJzIGJldHdlZW4gdGhlIGxlZ2lzbGF0dXJlLCB0aGUgZXhlY3V0aXZlIGFuZCB0aGUganVkaWNpYXJ5ICBjb25zdGl0dXRlIGFuIGltcG9ydGFudCBzYWZlZ3VhcmQgb2YgbGliZXJ0eSBpbiBhIGxpYmVyYWwgZGVtb2NyYWN5LiAgVGhlIGRvY3RyaW5lIG9mIFNlcGFyYXRpb24gb2YgcG93ZXJzICBlbnRhaWxzIHRoZSBkaXZpc2lvbiBvZiB0aGUgbGVnaXNsYXRpdmUsIGV4ZWN1dGl2ZSwgYW5kIGp1ZGljaWFsIGZ1bmN0aW9ucyBvZiBnb3Zlcm5tZW50IGFtb25nIGRpZmZlcmVudCAgb3JnYW5zLiBUaGlzIHNlcGFyYXRpb24gbWluaW1pc2VzIHRoZSBwb3NzaWJpbGl0eSBvZiBhcmJpdHJhcnkgZXhjZXNzZXMgYnkgdGhlIGdvdmVybm1lbnQsIHNpbmNlIGFsbCB0aGUgIHRocmVlIG9yZ2FucyBhY3RzIGFzIGNoZWNrIGFuZCBiYWxhbmNlIG9uIHRoZSBwb3dlcnMgb2YgZWFjaCBvdGhlci4gVGhlcmVmb3JlLCBub25lIG9mIHRoZSB0aHJlZSBvcmdhbnMgIGNhbiB1c3VycCB0aGUgZXNzZW50aWFsIGZ1bmN0aW9ucyBvZiBvdGhlciBvcmdhbnMuICBUaGlzIGRlbWFyY2F0aW9uIHByZXZlbnRzIHRoZSBjb25jZW50cmF0aW9uIG9mIGV4Y2Vzc2l2ZSBwb3dlciBieSBhbnkgYnJhbmNoIG9mIHRoZSBHb3Zlcm5tZW50LiBJdCB0aHVzICBoZWxwcyB0byBzYWZlZ3VhcmQgdGhlIGxpYmVydHkgYW5kIHJpZ2h0cyBvZiB0aGUgcGVvcGxlIGluIGEgZGVtb2NyYWN5LiAgU291cmNlKSBMYXhtaWthbnQgQ2hhcHRlciA3IGFuZCAxMSAgaHR0cHM6Ly93d3cuY3VzYi5hYy5pbi9pbWFnZXMvY3VzYi0gZmlsZXMvMjAyMC9lbC9sYXcvdzIvU2VwYXJhdGlvbl9vZl9Qb3dlcnMxX2l2X3NlbWVzdGVyLnBkZiAgU3ViamVjdCkgVVBTQyBDU0UgMjAyMSAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "A committed judiciary ",
        "option2" : "Centralization of powers ",
        "option3" : "Elected government ",
        "option4" : "Separation of powers  "
      }
    },
    {
      "index" : 32,
      "question" : "In context to political theory, which of the following is correct regarding the 'Harm Principle'? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IGEpIEl0IHByb3ZpZGVzIHRoYXQgYSBnb3Zlcm5tZW50IG11c3QgcHJldmVudCBhbnkgcGh5c2ljYWwgaGFybSB0byBpdHMgY2l0aXplbnMsIGFzIGl0IGlzIHJlc3BvbnNpYmxlIHRvICBwcm90ZWN0IHRoZWlyIGxpZmUgYW5kIHByb3BlcnR5LiAgYikgVGhlIFJpZ2h0IHRvIFByb3RlY3Rpb24gb2YgTGlmZSwgYXMgZW5zaHJpbmVkIGluIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uLCBpcyB0aGUgZGlyZWN0IHJlZmxlY3Rpb24gb2YgdGhpcyAgcHJpbmNpcGxlLiAgIGMpIEl0IHNheXMgdGhhdCB0aGUgcGVvcGxlIHNob3VsZCBiZSBmcmVlIHRvIGFjdCBhcyB0aGV5IHdpc2gsIHVubGVzcyB0aGVpciBhY3Rpb25zIGNhdXNlIGhhcm0gdG8gb3RoZXJzLiAgZCkgSXQgcHJvcG9zZXMgdGhhdCBpZiB0d28gY2lyY3Vtc3RhbmNlcyBhcmUgcHV0IGJlZm9yZSBhbiBpbmRpdmlkdWFsLCBoZSB3aWxsIGFsd2F5cyBjaG9vc2UgdGhlIG9wdGlvbiAgY2F1c2luZyBsZXNzIHBvc3NpYmxlIGhhcm0uICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBTdGF0ZW1lbnQgYyBpcyBjb3JyZWN0IGFuZCBTdGF0ZW1lbnQgYSBpcyBpbmNvcnJlY3QuIFRoZSBIYXJtIFByaW5jaXBsZSBzYXlzIHRoYXQgcGVvcGxlIHNob3VsZCBiZSBmcmVlICB0byBhY3QgYXMgdGhleSB3aXNoIHVubGVzcyB0aGVpciBhY3Rpb25zIGNhdXNlIGhhcm0gdG8gc29tZWJvZHkgZWxzZS4gIEhhcm0gUHJpbmNpcGxlIG1lYW5zIHRoYXQgdGhlcmUgIHNob3VsZCBiZSBhIGNvbnN0cmFpbiBvbiBhIHBlcnNvbiBmcm9tIGFjdGluZyBpbiBhIHdheSB0aGF0IG1heSBjYXVzZSBoYXJtIHRvIG90aGVyLiBJdCB3YXMgZmlyc3QgcHJvcG9zZWQgIGJ5IEVuZ2xpc2ggcGhpbG9zb3BoZXIgSm9obiBTdHVhcnQgTWlsbC4gSXQgbWVhbnMgcGVvcGxlIHNob3VsZCBiZSBmcmVlIHRvIGFjdCBpbiB0aGUgd2F5IHRoZXkgd2FudCwgaG93ZXZlciAgdGhlaXIgYWN0aW9ucyBzaG91bGQgbm90IGNhdXNlIGhhcm0gdG8gc29tZWJvZHkgZWxzZS4gUGhyYXNlICdZb3VyIGZyZWVkb20gdG8gc3dpbmcgeW91ciBmaXN0IGVuZHMgd2hlcmUgIG15IG5vc2UgYmVnaW5zJyByZWZsZWN0cyB0aGUgc2VudGltZW50IG9mIHRoZSBoYXJtIHByaW5jaXBsZS4gIFN0YXRlbWVudCBiIGlzIGluY29ycmVjdC4gVGhlIFJpZ2h0IHRvIEZyZWVkb20gKGFuZCBub3QgdGhlIHJpZ2h0IHRvIFByb3RlY3Rpb24gb2YgTGlmZSkgaXMgdGhlIHJlZmxlY3Rpb24gIG9mIHRoZSBoYXJtIHByaW5jaXBsZS4gQWxzbywgaW4gdGhlIGNvbnN0aXR1dGlvbmFsIGRpc2N1c3Npb25zIGluIEluZGlhLCAnUmVhc29uYWJsZSBSZXN0cmljdGlvbnMnIGlzIHRoZSB0ZXJtICB1c2VkIGZvciBqdXN0aWZpYWJsZSBjb25zdHJhaW50cyBvbiB0aGUgZnJlZWRvbSBvZiBpbmRpdmlkdWFscy4gRm9yIGV4YW1wbGUsIFN0YXRlIGNhbiBpbXBvc2UgcmVhc29uYWJsZSAgcmVzdHJpY3Rpb25zIG9uIHRoZSBleGVyY2lzZSBvZiByaWdodCBvZiBhc3NlbWJseSBvbiB0d28gZ3JvdW5kcywgbmFtZWx5LCBzb3ZlcmVpZ250eSBhbmQgaW50ZWdyaXR5IG9mIEluZGlhICBhbmQgcHVibGljIG9yZGVyIGluY2x1ZGluZyB0aGUgbWFpbnRlbmFuY2Ugb2YgdHJhZmZpYyBpbiB0aGUgYXJlYSBjb25jZXJuZWQuICAgU3RhdGVtZW50IGQgaXMgaW5jb3JyZWN0LiBBY2NvcmRpbmcgdG8gJ0xvc3MgQXZlcnNpb24nIFRoZW9yeSwgaWYgdHdvIGNob2ljZXMgYXJlIHB1dCBiZWZvcmUgYW4gaW5kaXZpZHVhbCwgIGJvdGggZXF1YWwsIHdpdGggb25lIHByZXNlbnRlZCBpbiB0ZXJtcyBvZiBwb3RlbnRpYWwgZ2FpbnMgYW5kIHRoZSBvdGhlciBpbiB0ZXJtcyBvZiBwb3NzaWJsZSBsb3NzZXMsIHRoZSAgZm9ybWVyIG9wdGlvbiB3aWxsIGJlIGNob3Nlbi4gIFNvdXJjZTogTkNFUlQgWEksIFBvbGl0aWNhbCB0aGVvcnksIGNoYXB0ZXIgMiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It provides that a government must prevent  any physical harm to its citizens, as it is  responsible to protect their life and  property. ",
        "option2" : " The Right to Protection of Life, as enshrined  in the Indian Constitution, is the direct  reflection of this principle.  ",
        "option3" : " It says that the people should be free to act  as they wish, unless their actions cause  harm to others. ",
        "option4" : " It proposes that if two circumstances are  put before an individual, he will always  choose the option causing less possible  harm.  "
      }
    },
    {
      "index" : 33,
      "question" : "With reference to the offence of 'untouchability' in India, consider the following statements: 1. The Constitution has defined 'untouchability' as 'social disabilities imposed on certain classes of persons by reason of their birth'. 2. A person convicted of the offence of 'untouchability' is disqualified for election to the Parliament or state legislature. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IDEuIFRoZSBDb25zdGl0dXRpb24gaGFzIGRlZmluZWQgJ3VudG91Y2hhYmlsaXR5JyBhcyAnc29jaWFsIGRpc2FiaWxpdGllcyBpbXBvc2VkIG9uIGNlcnRhaW4gY2xhc3NlcyBvZiBwZXJzb25zICBieSByZWFzb24gb2YgdGhlaXIgYmlydGgnLiAgMi4gQSBwZXJzb24gY29udmljdGVkIG9mIHRoZSBvZmZlbmNlIG9mICd1bnRvdWNoYWJpbGl0eScgaXMgZGlzcXVhbGlmaWVkIGZvciBlbGVjdGlvbiB0byB0aGUgUGFybGlhbWVudCBvciBzdGF0ZSAgbGVnaXNsYXR1cmUuICAgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICBhKSAxIG9ubHkgIGIpIDIgb25seSAgYykgQm90aCAxIGFuZCAyICBkKSBOZWl0aGVyIDEgbm9yIDIgICBFeHApIE9wdGlvbiBiIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIEFydGljbGUgMTcgb2YgSW5kaWFuIENvbnN0aXR1dGlvbiBhYm9saXNoZXMgJ3VudG91Y2hhYmlsaXR5JyBhbmQgZm9yYmlkcyBpdHMgcHJhY3RpY2UgaW4gYW55IGZvcm0uIFRoZSAgZW5mb3JjZW1lbnQgb2YgYW55IGRpc2FiaWxpdHkgYXJpc2luZyBvdXQgb2YgdW50b3VjaGFiaWxpdHkgc2hhbGwgYmUgYW4gb2ZmZW5jZSBwdW5pc2hhYmxlIGluIGFjY29yZGFuY2UgIHdpdGggbGF3LiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgdGVybSAndW50b3VjaGFiaWxpdHknIGhhcyBub3QgYmVlbiBkZWZpbmVkIGVpdGhlciBpbiB0aGUgQ29uc3RpdHV0aW9uIG9yIGluICB0aGUgQWN0LiBIb3dldmVyLCB0aGUgTXlzb3JlIEhpZ2ggQ291cnQgaGVsZCB0aGF0IHRoZSBzdWJqZWN0IG1hdHRlciBvZiBBcnRpY2xlIDE3IGlzIG5vdCB1bnRvdWNoYWJpbGl0eSBpbiAgaXRzIGxpdGVyYWwgb3IgZ3JhbW1hdGljYWwgc2Vuc2UgYnV0IHRoZSAncHJhY3RpY2UgYXMgaXQgaGFkIGRldmVsb3BlZCBoaXN0b3JpY2FsbHkgaW4gdGhlIGNvdW50cnknLiBJdCByZWZlcnMgdG8gIHRoZSBzb2NpYWwgZGlzYWJpbGl0aWVzIGltcG9zZWQgb24gY2VydGFpbiBjbGFzc2VzIG9mIHBlcnNvbnMgYnkgcmVhc29uIG9mIHRoZWlyIGJpcnRoIGluIGNlcnRhaW4gY2FzdGUuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBY2NvcmRpbmcgdG8gdGhlIFJlcHJlc2VudGF0aW9uIG9mIHRoZSBQZW9wbGUgQWN0IDE5NTEsIGEgcGVyc29uIHdpbGwgYmUgZGlzcXVhbGlmaWVkICBmb3IgZWxlY3Rpb24gdG8gdGhlIFBhcmxpYW1lbnQgb3Igc3RhdGUgbGVnaXNsYXR1cmUgaWYgaGUgY29udmljdGVkIG9mIGFuIG9mZmVuY2UgcHVuaXNoYWJsZSB1bmRlciB0aGUgIFByb3RlY3Rpb24gb2YgQ2l2aWwgUmlnaHRzIEFjdCwgMTk1NS4gVGhpcyBBY3QgcHJvdmlkZXMgZm9yIHB1bmlzaG1lbnQgZm9yIHRoZSBwcmVhY2hpbmcgYW5kIHByYWN0aWNlIG9mICAndW50b3VjaGFiaWxpdHknLCBhbmQgZm9yIHRoZSBlbmZvcmNlbWVudCBvZiBhbnkgZGlzYWJpbGl0eSBhcmlzaW5nIHRoZXJlZnJvbS4gIFRodXMsIGEgcGVyc29uIGNvbnZpY3RlZCBvZiB0aGUgb2ZmZW5jZSBvZiAndW50b3VjaGFiaWxpdHknIGlzIGRpc3F1YWxpZmllZCBmb3IgZWxlY3Rpb24gdG8gdGhlIFBhcmxpYW1lbnQgIG9yIHN0YXRlIGxlZ2lzbGF0dXJlLiAgU291cmNlOiAgSW1wb3J0YW5jZSBvZiBQcm92aXNpb25zIHVuZGVyIHRoZSBQcm90ZWN0aW9uIG9mIHRoZSBDaXZpbCBSaWdodHMgQWN0IC0gaVBsZWFkZXJzICBMYXhtaWthbnRoIENoYXB0ZXIgNyBGdW5kYW1lbnRhbCBSaWdodHMgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 34,
      "question" : "Which among the following Directives to the State are contained in Part-IV of the Constitution of India? 1.  To promote the spread of the Hindi language 2.  To ensure the maintenance of adequate means of communication in the country 3.  To consider the claims of Scheduled Castes in making of appointments to services 4.  To raise the level of nutrition and the standard of living of people Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEluZGlhPyAgMS4gVG8gcHJvbW90ZSB0aGUgc3ByZWFkIG9mIHRoZSBIaW5kaSBsYW5ndWFnZSAgMi4gVG8gZW5zdXJlIHRoZSBtYWludGVuYW5jZSBvZiBhZGVxdWF0ZSBtZWFucyBvZiBjb21tdW5pY2F0aW9uIGluIHRoZSBjb3VudHJ5ICAzLiBUbyBjb25zaWRlciB0aGUgY2xhaW1zIG9mIFNjaGVkdWxlZCBDYXN0ZXMgaW4gbWFraW5nIG9mIGFwcG9pbnRtZW50cyB0byBzZXJ2aWNlcyAgNC4gVG8gcmFpc2UgdGhlIGxldmVsIG9mIG51dHJpdGlvbiBhbmQgdGhlIHN0YW5kYXJkIG9mIGxpdmluZyBvZiBwZW9wbGUgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGUgZ2l2ZW4gYmVsb3c6ICBhKSAxIGFuZCAzIG9ubHkgIGIpIDEgYW5kIDIgb25seSAgYykgMiwgMyBhbmQgNCBvbmx5ICBkKSA0IG9ubHkgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlciAgQXBhcnQgZnJvbSB0aGUgRGlyZWN0aXZlcyBpbmNsdWRlZCBpbiBQYXJ0LiBJViB0aGF0IGFyZSBjb25zaWRlcmVkIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIHRoZSBTdGF0ZSBQb2xpY3ksICB0aGVyZSBhcmUgc29tZSBvdGhlciBEaXJlY3RpdmVzIGNvbnRhaW5lZCBpbiBvdGhlciBwYXJ0cyBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBcnRpY2xlIDM1MSBpbiBQYXJ0IFhWSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBleGhvcnRzIHRoZSBTdGF0ZSB0aGF0IGl0IHNoYWxsIGJlIHRoZSAgZHV0eSBvZiB0aGUgVW5pb24gdG8gcHJvbW90ZSB0aGUgc3ByZWFkIG9mIHRoZSBIaW5kaSBsYW5ndWFnZSBhbmQgdG8gZGV2ZWxvcCBpdCBzbyB0aGF0IGl0IG1heSBzZXJ2ZSBhcyBhICBtZWRpdW0gb2YgZXhwcmVzc2lvbiBmb3IgYWxsIHRoZSBlbGVtZW50cyBvZiB0aGUgY29tcG9zaXRlIGN1bHR1cmUgb2YgSW5kaWEuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMzM1IGluIFBhcnQgWFZJIG1lbnRpb25zIHRoYXQgY2xhaW1zIG9mIHRoZSBtZW1iZXJzIG9mIHRoZSBTY2hlZHVsZWQgIENhc3RlcyBhbmQgdGhlIFNjaGVkdWxlZCBUcmliZXMgc2hhbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLCBjb25zaXN0ZW50bHkgd2l0aCB0aGUgbWFpbnRlbmFuY2UgIG9mIGVmZmljaWVuY3kgb2YgYWRtaW5pc3RyYXRpb24sIGluIHRoZSBtYWtpbmcgb2YgYXBwb2ludG1lbnRzIHRvIHNlcnZpY2VzIGFuZCBwb3N0cyBpbiBjb25uZWN0aW9uIHdpdGggIHRoZSBhZmZhaXJzIG9mIHRoZSBVbmlvbiBvciBhIFN0YXRlLiBJdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIGFkbWlzc2lvbiBpbiBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMuIEl0IGlzICBtZW50aW9uZWQgaW4gQXJ0aWNsZSA0NiB0aGF0IHRoZSBTdGF0ZSBzaGFsbCBwcm9tb3RlIHdpdGggc3BlY2lhbCBjYXJlIHRoZSBlZHVjYXRpb25hbCBhbmQgZWNvbm9taWMgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBpbnRlcmVzdHMgb2YgdGhlIHdlYWtlciBzZWN0aW9ucyBvZiB0aGUgcGVvcGxlLCBhbmQsIGluIHBhcnRpY3VsYXIsIG9mIHRoZSBTY2hlZHVsZWQgQ2FzdGVzIGFuZCB0aGUgIFNjaGVkdWxlZCBUcmliZXMsIGFuZCBzaGFsbCBwcm90ZWN0IHRoZW0gZnJvbSBzb2NpYWwgaW5qdXN0aWNlIGFuZCBhbGwgZm9ybXMgb2YgZXhwbG9pdGF0aW9uLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBTdGF0ZW1lbnQgMiBhbmQgNCByZWZlcnMgdG8gZGlyZWN0aW9ucyB3aGljaCB0aGUgQ2VudHJlIGNhbiBnaXZlIHRvIHRoZSBzdGF0ZSAgZ292ZXJubWVudCB3aXRoIHJlZ2FyZCB0byB0aGUgZXhlcmNpc2Ugb2YgdGhlaXIgZXhlY3V0aXZlIHBvd2VyLiAgKDEpIHRoZSBjb25zdHJ1Y3Rpb24gYW5kIG1haW50ZW5hbmNlIG9mIG1lYW5zIG9mIGNvbW11bmljYXRpb24gKGRlY2xhcmVkIHRvIGJlIG9mIG5hdGlvbmFsIG9yIG1pbGl0YXJ5ICBpbXBvcnRhbmNlKSBieSB0aGUgc3RhdGU7IChBcnRpY2xlIDI1NyBpbiBQYXJ0IFhJIG9mIHRoZSBDb25zdGl0dXRpb24pICAoMikgdGhlIG1lYXN1cmVzIHRvIGJlIHRha2VuIGZvciB0aGUgcHJvdGVjdGlvbiBvZiB0aGUgcmFpbHdheXMgd2l0aGluIHRoZSBzdGF0ZTsgICgzKSB0aGUgcHJvdmlzaW9uIG9mIGFkZXF1YXRlIGZhY2lsaXRpZXMgZm9yIGluc3RydWN0aW9uIGluIHRoZSBtb3RoZXItdG9uZ3VlIGF0IHRoZSBwcmltYXJ5IHN0YWdlIG9mICBlZHVjYXRpb24gdG8gY2hpbGRyZW4gYmVsb25naW5nIHRvIGxpbmd1aXN0aWMgbWlub3JpdHkgZ3JvdXBzIGluIHRoZSBzdGF0ZTsgYW5kICAoNCkgdGhlIGRyYXdpbmcgdXAgYW5kIGV4ZWN1dGlvbiBvZiB0aGUgc3BlY2lmaWVkIHNjaGVtZXMgZm9yIHRoZSB3ZWxmYXJlIG9mIHRoZSBTY2hlZHVsZWQgVHJpYmVzIGluIHRoZSAgc3RhdGUgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiAnVG8gcmFpc2UgdGhlIGxldmVsIG9mIG51dHJpdGlvbiBhbmQgdGhlIHN0YW5kYXJkIG9mIGxpdmluZyBvZiBwZW9wbGUgYW5kIHRvIGltcHJvdmUgIHB1YmxpYyBoZWFsdGgnIGlzIGNvbnRhaW5lZCBpbiBBcnRpY2xlIDQ3IGluIFBhcnQgSVYgb2YgQ29uc3RpdHV0aW9uLiAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCA4dGggQ2hhcHRlciAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "1 and 2 only ",
        "option3" : "2, 3 and 4 only ",
        "option4" : "4 only  "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements: 1.  Atmospheric rivers are systems of rivers generated due to sudden rainfall in the region. 2.  The phenomenon of atmospheric rivers is restricted to desert regions of tropical areas. 3.  In wet conditions, atmospheric rivers can negatively impact the local economy by causing floods. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IDEuIEF0bW9zcGhlcmljIHJpdmVycyBhcmUgc3lzdGVtcyBvZiByaXZlcnMgZ2VuZXJhdGVkIGR1ZSB0byBzdWRkZW4gcmFpbmZhbGwgaW4gdGhlIHJlZ2lvbi4gIDIuIFRoZSBwaGVub21lbm9uIG9mIGF0bW9zcGhlcmljIHJpdmVycyBpcyByZXN0cmljdGVkIHRvIGRlc2VydCByZWdpb25zIG9mIHRyb3BpY2FsIGFyZWFzLiAgMy4gSW4gd2V0IGNvbmRpdGlvbnMsIGF0bW9zcGhlcmljIHJpdmVycyBjYW4gbmVnYXRpdmVseSBpbXBhY3QgdGhlIGxvY2FsIGVjb25vbXkgYnkgY2F1c2luZyBmbG9vZHMuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgYW5kIDIgb25seSAgYikgMSBvbmx5ICBjKSAyIGFuZCAzIG9ubHkgIGQpIDMgb25seSAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBBbiBhdG1vc3BoZXJpYyByaXZlciAoQVIpIGlzIGEgbmFycm93IGNvcnJpZG9yIG9yIGZpbGFtZW50IG9mIGNvbmNlbnRyYXRlZCAgbW9pc3R1cmUgaW4gdGhlIGF0bW9zcGhlcmUuIE90aGVyIG5hbWVzIGZvciB0aGlzIHBoZW5vbWVub24gYXJlIHRyb3BpY2FsIHBsdW1lLCB0cm9waWNhbCBjb25uZWN0aW9uLCAgbW9pc3R1cmUgcGx1bWUsIHdhdGVyIHZhcG9yIHN1cmdlLCBhbmQgY2xvdWQgYmFuZC4gIE5vdCBhbGwgYXRtb3NwaGVyaWMgcml2ZXJzIGNhdXNlIGRhbWFnZTsgbW9zdCBhcmUgd2VhayBzeXN0ZW1zIHRoYXQgb2Z0ZW4gcHJvdmlkZSBiZW5lZmljaWFsIHJhaW4gb3Igc25vdyAgdGhhdCBpcyBjcnVjaWFsIHRvIHRoZSB3YXRlciBzdXBwbHksIHBhcnRpY3VsYXJseSBpbiB0aGUgd2VzdGVybiBVbml0ZWQgU3RhdGVzLiBIb3dldmVyLCB0aG9zZSBhdG1vc3BoZXJpYyAgcml2ZXJzIHRoYXQgY29udGFpbiB0aGUgbGFyZ2VzdCBhbW91bnRzIG9mIHdhdGVyIHZhcG9yIGFuZCB0aGUgc3Ryb25nZXN0IHdpbmRzIChTdHJvbmcgU3lzdGVtKSBjYW4gY3JlYXRlICBleHRyZW1lIHJhaW5mYWxsIGFuZCBmbG9vZHMuICAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQXRtb3NwaGVyaWMgcml2ZXJzIGFyZSBsb25nLCBuYXJyb3cgYmFuZHMgb2YgbW9pc3R1cmUgaW4gdGhlIGF0bW9zcGhlcmUgdGhhdCAgZXh0ZW5kIGZyb20gdGhlIHRyb3BpY3MgdG8gaGlnaGVyIGxhdGl0dWRlcy4gVGhlc2Ugcml2ZXJzIGluIHRoZSBza3kgY2FuIHRyYW5zcG9ydCAxNSB0aW1lcyB0aGUgdm9sdW1lIG9mICB0aGUgTWlzc2lzc2lwcGkgUml2ZXIuICBBdG1vc3BoZXJpYyByaXZlcnMgb2NjdXIgZ2xvYmFsbHksIGFmZmVjdGluZyB0aGUgd2VzdCBjb2FzdHMgb2YgdGhlIHdvcmxkJ3MgbWFqb3IgbGFuZG1hc3NlcywgaW5jbHVkaW5nICBQb3J0dWdhbCwgV2VzdGVybiBFdXJvcGUsIENoaWxlIGFuZCBTb3V0aCBBZnJpY2EuICBBIHdlbGwta25vd24gZXhhbXBsZSBpcyB0aGUgJ1BpbmVhcHBsZSBFeHByZXNzLCcgYSBzdHJvbmcgYXRtb3NwaGVyaWMgcml2ZXIgdGhhdCBpcyBjYXBhYmxlIG9mIGJyaW5naW5nICBtb2lzdHVyZSBmcm9tIHRoZSB0cm9waWNzIG5lYXIgSGF3YWlpIG92ZXIgdG8gdGhlIFUuUy4gV2VzdCBDb2FzdC4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEluIGRyeSBjb25kaXRpb25zLCBhdG1vc3BoZXJpYyByaXZlcnMgY2FuIHJlcGxlbmlzaCB3YXRlciBzdXBwbGllcyBhbmQgcXVlbmNoICBkYW5nZXJvdXMgd2lsZGZpcmVzLiBJbiB3ZXQgY29uZGl0aW9ucywgdGhleSBjYW4gY2F1c2UgZGFtYWdpbmcgZmxvb2RzIGFuZCBkZWJyaXMgZmxvd3MsIHdyZWFraW5nIGhhdm9jICBvbiBsb2NhbCBlY29ub21pZXMuICBBY2NvcmRpbmcgdG8gYSBzdHVkeSwgQXRtb3NwaGVyaWMgcml2ZXJzIGNhdXNlIGFuIGF2ZXJhZ2Ugb2YgJDEuMSBiaWxsaW9uIGluIGZsb29kIGRhbWFnZXMgeWVhcmx5IGluIHRoZSAgd2VzdGVybiBVLlMuIFRoZSBzdHVkeSBoYXMgYWxzbyBwcmVkaWN0ZWQgdGhhdCBsaWtlIGh1cnJpY2FuZXMsIGF0bW9zcGhlcmljIHJpdmVycyBhcmUgcHJvamVjdGVkIHRvIGdyb3cgIGxvbmdlciwgd2lkZXIgYW5kIHdldHRlciBpbiBhIHdhcm1pbmcgY2xpbWF0ZS4gVGhpcyBjb3VsZCBsZWFkIHRvIHNpZ25pZmljYW50bHkgbGFyZ2VyIGVjb25vbWljIGltcGFjdHMuICBTb3VyY2U6IEF0bW9zcGhlcmljIHJpdmVyIHN0b3JtcyBjYW4gZHJpdmUgY29zdGx5IGZsb29kaW5nIC0gYW5kIGNsaW1hdGUgY2hhbmdlIGlzIG1ha2luZyB0aGVtIHN0cm9uZ2VyICAtRm9ydW1JQVMgQmxvZyAgV2hhdCBhcmUgYXRtb3NwaGVyaWMgcml2ZXJzPyB8IE5hdGlvbmFsIE9jZWFuaWMgYW5kIEF0bW9zcGhlcmljIEFkbWluaXN0cmF0aW9uIChub2FhLmdvdikgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1 only ",
        "option3" : "2 and 3 only ",
        "option4" : "3 only  "
      }
    },
    {
      "index" : 36,
      "question" : "'To develop scientific temper, humanism and the spirit of inquiry and reform' is included under which of the following provisions of the Constitution of India? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IG9mIHRoZSBmb2xsb3dpbmcgcHJvdmlzaW9ucyBvZiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhPyAgYSkgVGhlIFByZWFtYmxlICBiKSBGdW5kYW1lbnRhbCBSaWdodHMgIGMpIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSAgZCkgRnVuZGFtZW50YWwgRHV0aWVzICAgRXhwKSBPcHRpb24gZCBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBGdW5kYW1lbnRhbCBEdXRpZXMgbWVhbnMgdGhhdCB0aGUgY2l0aXplbnMgaW4gYWRkaXRpb24gdG8gdGhlIGVuam95bWVudCBvZiByaWdodHMsIGFsc28gaGF2ZSBjZXJ0YWluICBvYmxpZ2F0aW9ucyB0byBiZSBwZXJmb3JtZWQgYXMgd2VsbC4gICBTdGF0ZW1lbnQgZCBpcyBjb3JyZWN0LiBPbmUgb2YgdGhlIGZ1bmRhbWVudGFsIGR1dGllcyBpbmNsdWRlICd0byBkZXZlbG9wIHNjaWVudGlmaWMgdGVtcGVyLCBodW1hbmlzbSAgYW5kIHRoZSBzcGlyaXQgb2YgaW5xdWlyeSBhbmQgcmVmb3JtJy4gIE90aGVyIEZ1bmRhbWVudGFsIER1dGllcyBhcmU6ICAxKSB0byBhYmlkZSBieSB0aGUgQ29uc3RpdHV0aW9uIGFuZCByZXNwZWN0IGl0cyBpZGVhbHMgYW5kIGluc3RpdHV0aW9ucywgdGhlIE5hdGlvbmFsIEZsYWcgYW5kIHRoZSBOYXRpb25hbCAgQW50aGVtOyAgMikgdG8gY2hlcmlzaCBhbmQgZm9sbG93IHRoZSBub2JsZSBpZGVhbHMgdGhhdCBpbnNwaXJlZCB0aGUgbmF0aW9uYWwgc3RydWdnbGUgZm9yIGZyZWVkb207ICAgMykgdG8gdXBob2xkIGFuZCBwcm90ZWN0IHRoZSBzb3ZlcmVpZ250eSwgdW5pdHkgYW5kIGludGVncml0eSBvZiBJbmRpYTsgIDQpIHRvIGRlZmVuZCB0aGUgY291bnRyeSBhbmQgcmVuZGVyIG5hdGlvbmFsIHNlcnZpY2Ugd2hlbiBjYWxsZWQgdXBvbiB0byBkbyBzbzsgIDUpIHRvIHByb21vdGUgaGFybW9ueSBhbmQgdGhlIHNwaXJpdCBvZiBjb21tb24gYnJvdGhlcmhvb2QgYW1vbmdzdCBhbGwgdGhlIHBlb3BsZSBvZiBJbmRpYSAgdHJhbnNjZW5kaW5nIHJlbGlnaW91cywgbGluZ3Vpc3RpYyBhbmQgcmVnaW9uYWwgb3Igc2VjdGlvbmFsIGRpdmVyc2l0aWVzIGFuZCB0byByZW5vdW5jZSBwcmFjdGljZXMgIGRlcm9nYXRvcnkgdG8gdGhlIGRpZ25pdHkgb2Ygd29tZW47ICA2KSB0byB2YWx1ZSBhbmQgcHJlc2VydmUgdGhlIHJpY2ggaGVyaXRhZ2Ugb2YgdGhlIGNvdW50cnkncyBjb21wb3NpdGUgY3VsdHVyZTsgIDcpIHRvIHByb3RlY3QgYW5kIGltcHJvdmUgdGhlIG5hdHVyYWwgZW52aXJvbm1lbnQgaW5jbHVkaW5nIGZvcmVzdHMsIGxha2VzLCByaXZlcnMgYW5kIHdpbGRsaWZlIGFuZCB0byBoYXZlICBjb21wYXNzaW9uIGZvciBsaXZpbmcgY3JlYXR1cmVzOyAgOCkgdG8gc2FmZWd1YXJkIHB1YmxpYyBwcm9wZXJ0eSBhbmQgdG8gYWJqdXJlIHZpb2xlbmNlOyAgOSkgdG8gc3RyaXZlIHRvd2FyZHMgZXhjZWxsZW5jZSBpbiBhbGwgc3BoZXJlcyBvZiBpbmRpdmlkdWFsIGFuZCBjb2xsZWN0aXZlIGFjdGl2aXR5IHNvIHRoYXQgdGhlIG5hdGlvbiAgY29uc3RhbnRseSByaXNlcyB0byBoaWdoZXIgbGV2ZWxzIG9mIGVuZGVhdm91ciBhbmQgYWNoaWV2ZW1lbnQ7IGFuZCAgMTApIHRvIHByb3ZpZGUgb3Bwb3J0dW5pdGllcyBmb3IgZWR1Y2F0aW9uIHRvIGhpcyBjaGlsZCBvciB3YXJkIGJldHdlZW4gdGhlIGFnZSBvZiBzaXggYW5kIGZvdXJ0ZWVuIHllYXJzLiAgIFNvdXJjZTogTSBMYXhtaWthbnRoLCBQcmVhbWJsZSwgRlIsIERQU1AgYW5kIEZEIENoYXB0ZXJzICAgICBvZiAzMyAgICAgLiBTRkcgMjAyMyB8IExFVkVMIDEgfCBUZXN0ICMyIC0gU29sdXRpb25zIHwgICAgUGF0bmEsIEJpaGFyIDgwMDAwMSAgIHwgSHlkZXJhYmFkIC0gMXN0ICYgMm5kIEZsb29yLCBTTSBQbGF6YSwgUlRDIFggUmQsIEluZGlyYSBQYXJrIFJvYWQsIEphd2FoYXIgTmFnYXIsIEh5ZGVyYWJhZCwgVGVsYW5nYW5hIDUwMDAyMCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The Preamble ",
        "option2" : "Fundamental Rights ",
        "option3" : "Directive Principles of State Policy ",
        "option4" : "Fundamental Duties  "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following statements with reference to the 'Right to Property' in the Indian context: 1.  Presently, it is neither a Constitutional right nor a legal right. 2.  It protects a person's property against executive action but not against legislative action. 3.  If this right is violated, the aggrieved person can directly move to the High Court for its enforcement. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IDEuIFByZXNlbnRseSwgaXQgaXMgbmVpdGhlciBhIENvbnN0aXR1dGlvbmFsIHJpZ2h0IG5vciBhIGxlZ2FsIHJpZ2h0LiAgMi4gSXQgcHJvdGVjdHMgYSBwZXJzb24ncyBwcm9wZXJ0eSBhZ2FpbnN0IGV4ZWN1dGl2ZSBhY3Rpb24gYnV0IG5vdCBhZ2FpbnN0IGxlZ2lzbGF0aXZlIGFjdGlvbi4gIDMuIElmIHRoaXMgcmlnaHQgaXMgdmlvbGF0ZWQsIHRoZSBhZ2dyaWV2ZWQgcGVyc29uIGNhbiBkaXJlY3RseSBtb3ZlIHRvIHRoZSBIaWdoIENvdXJ0IGZvciBpdHMgZW5mb3JjZW1lbnQuICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgYW5kIDMgb25seSAgYikgMyBvbmx5ICBjKSAyIGFuZCAzIG9ubHkgIGQpIDEsIDIgYW5kIDMgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlciAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgcmlnaHQgdG8gcHJvcGVydHkgaXMgYSBDb25zdGl0dXRpb25hbCBhcyB3ZWxscyBhcyBsZWdhbCByaWdodCBidXQgbm90IGEgIEZ1bmRhbWVudGFsIFJpZ2h0LiBPcmlnaW5hbGx5LCB0aGUgQ29uc3RpdHV0aW9uIHByb3ZpZGVkIGZvciBzZXZlbiBGdW5kYW1lbnRhbCBSaWdodHMuIEhvd2V2ZXIsIHRoZSAgUmlnaHQgdG8gUHJvcGVydHkgKEFydGljbGUgMzEpIHdhcyBkZWxldGVkIGZyb20gdGhlIGxpc3Qgb2YgRnVuZGFtZW50YWwgUmlnaHRzIGJ5IHRoZSA0NHRoIEFtZW5kbWVudCBBY3QgIG9mIDE5NzguIEl0IGlzIG1hZGUgYSBsZWdhbCByaWdodCB1bmRlciBBcnRpY2xlIDMwMC1BIGluIFBhcnQgWElJIG9mIHRoZSBjb25zdGl0dXRpb24uICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgUmlnaHQgdG8gUHJvcGVydHkgcHJvdGVjdHMgcHJpdmF0ZSBwcm9wZXJ0eSBhZ2FpbnN0IGV4ZWN1dGl2ZSBhY3Rpb24gYnV0IG5vdCAgYWdhaW5zdCBsZWdpc2xhdGl2ZSBhY3Rpb24uIEl0IGNhbiBiZSByZWd1bGF0ZWQgaS5lLiBjdXJ0YWlsZWQsIGFicmlkZ2VkIG9yIG1vZGlmaWVkIHdpdGhvdXQgY29uc3RpdHV0aW9uYWwgIGFtZW5kbWVudCBieSBhbiBvcmRpbmFyeSBsYXcgb2YgdGhlIFBhcmxpYW1lbnQuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBJbiBjYXNlIG9mIHZpb2xhdGlvbiwgdGhlIGFnZ3JpZXZlZCBwZXJzb24gY2Fubm90IGRpcmVjdGx5IG1vdmUgdGhlIFN1cHJlbWUgQ291cnQgIHVuZGVyIEFydGljbGUgMzIgKHJpZ2h0IHRvIGNvbnN0aXR1dGlvbmFsIHJlbWVkaWVzIGluY2x1ZGluZyB3cml0cykgZm9yIGl0cyBlbmZvcmNlbWVudC4gSGUgY2FuIG1vdmUgdGhlICBIaWdoIENvdXJ0IHVuZGVyIEFydGljbGUgMjI2LiAgU291cmNlOiBOQ0VSVCBYSSwgQ29uc3RpdHV0aW9uIGF0IHdvcmssIENoYXB0ZXIgMiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "3 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3      . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 38,
      "question" : "Who among the following enjoys certain exceptions to the rule of Equality before Law under the Fundamental Right to Equality in India? 1. Governor of states 2. Foreign diplomats 3. United Nations agencies 4. Members of Parliament Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEZ1bmRhbWVudGFsIFJpZ2h0IHRvIEVxdWFsaXR5IGluIEluZGlhPyAgMS4gR292ZXJub3Igb2Ygc3RhdGVzICAyLiBGb3JlaWduIGRpcGxvbWF0cyAgMy4gVW5pdGVkIE5hdGlvbnMgYWdlbmNpZXMgIDQuIE1lbWJlcnMgb2YgUGFybGlhbWVudCAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZSBnaXZlbiBiZWxvdzogIGEpIDEgYW5kIDQgb25seSAgYikgMiBhbmQgMyBvbmx5ICBjKSAxLCAyIGFuZCAzIG9ubHkgIGQpIDEsIDIsIDMgYW5kIDQgICBFeHApIG9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEdvdmVybm9yIG9mIHN0YXRlcyBlbmpveSBzb21lIG9mIGltbXVuaXRpZXMgZnJvbSB0aGUgcnVsZSBvZiBlcXVhbGl0eSBiZWZvcmUgbGF3LiAgU29tZSBvZiB0aGVzZSBpbW11bml0aWVzIGFyZSAgIDEpIEhlIGlzIG5vdCBhbnN3ZXJhYmxlIHRvIGFueSBjb3VydCBmb3IgdGhlIGV4ZXJjaXNlIGFuZCBwZXJmb3JtYW5jZSBvZiB0aGUgcG93ZXJzIGFuZCBkdXRpZXMgb2YgaGlzICBvZmZpY2UuICAyKSBObyBjcmltaW5hbCBwcm9jZWVkaW5nIHNoYWxsIGJlIGluc3RpdHV0ZWQgb3IgY29udGludWVkIGFnYWluc3QgaGltIGR1cmluZyBoaXMgdGVybSBvZiBvZmZpY2UuICAzKSBObyBwcm9jZXNzIGZvciBhcnJlc3Qgb3IgaW1wcmlzb25tZW50IG9mIGhpbSBmcm9tIGFueSBjb3VydCBkdXJpbmcgaGlzIHRlcm0gb2Ygb2ZmaWNlLCAgNCkgTm8gY2l2aWwgcHJvY2VlZGluZ3Mgc2hhbGwgYmUgaW5zdGl0dXRlZCBkdXJpbmcgaGlzIHRlcm0gb2Ygb2ZmaWNlIGluIGFueSBjb3VydCBpbiByZXNwZWN0IG9mIGFueSBhY3QgZG9uZSAgYnkgaGltIGluIGhpcyBwZXJzb25hbCBjYXBhY2l0eSwgd2hldGhlciBiZWZvcmUgb3IgYWZ0ZXIgaGUgZW50ZXJlZCB1cG9uIGhpcyBvZmZpY2UsIHVudGlsIHRoZSBleHBpcmF0aW9uICBvZiB0d28gbW9udGhzIG5leHQgYWZ0ZXIgbm90aWNlIGhhcyBiZWVuIGRlbGl2ZXJlZCB0byBoaW0gICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZm9yZWlnbiBzb3ZlcmVpZ25zIChydWxlcnMpLCBhbWJhc3NhZG9ycyBhbmQgZGlwbG9tYXRlcyBlbmpveSBpbW11bml0eSBmcm9tICBjcmltaW5hbCBhbmQgY2l2aWwgcHJvY2VlZGluZy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBVTk8gYW5kIGl0cyBhZ2VuY2llcyBlbmpveSB0aGUgZGlwbG9tYXRpYyBpbW11bml0eS4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IE1lbWJlcnMgb2YgcGFybGlhbWVudCBhbmQgc3RhdGUgbGVnaXNsYXR1cmUgYWxzbyBlbmpveSBpbW11bml0eSBmcm9tIGFueXRoaW5nICBzYWlkIG9yIGFueSB2b3RlIGdpdmVuIGJ5IGhpbSBpbiBwYXJsaWFtZW50LyBzdGF0ZSBsZWdpc2xhdHVyZSBvciBhbnkgY29tbWl0dGVlIHRoZXJlb2YuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTSBMYXhtaWthbnRoIDV0aCBlZGl0aW9uIC0gY2hhcHRlciA3IC0gRnVuZGFtZW50YWwgcmlnaHRzICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1, 2 and 3 only ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following rights has been made available to the prisoners in India through various Supreme court judgements?  1. Right to vote  2. Right to life  3. Right to be treated equally before the law  4. Right to speedy trial  Select the correct answer using the codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IFN1cHJlbWUgY291cnQganVkZ2VtZW50cz8gICAxLiBSaWdodCB0byB2b3RlICAgMi4gUmlnaHQgdG8gbGlmZSAgIDMuIFJpZ2h0IHRvIGJlIHRyZWF0ZWQgZXF1YWxseSBiZWZvcmUgdGhlIGxhdyAgIDQuIFJpZ2h0IHRvIHNwZWVkeSB0cmlhbCAgIFNlbGVjdCB0aGUgY29ycmVjdCBhbnN3ZXIgdXNpbmcgdGhlIGNvZGVzIGdpdmVuIGJlbG93OiAgIGEpIDEsIDIgYW5kIDMgb25seSAgIGIpIDIgYW5kIDMgb25seSAgIGMpIDIsIDMgYW5kIDQgb25seSAgIGQpIDEsIDIsIDMgYW5kIDQgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBkb2VzIG5vdCBleHByZXNzbHkgcHJvdmlkZSB0aGUgcHJvdmlzaW9ucyByZWxhdGVkIHRvIHRoZSBwcmlzb25lcnMnIHJpZ2h0cyBidXQgaW4gdGhlICBjYXNlIG9mIFQuVi4gVmF0aGVlc3dhcmFuIHYuIFN0YXRlIG9mIFRhbWlsIE5hZHUsIGl0IHdhcyBoZWxkIHRoYXQgdGhlIEFydGljbGVzIDE0LCAxOSBhbmQgMjEgYXJlIGF2YWlsYWJsZSB0byAgdGhlIHByaXNvbmVycyBhcyB3ZWxsIGFzIGZyZWVtZW4uIFByaXNvbiB3YWxscyBkbyBub3Qga2VlcCBvdXQgZnVuZGFtZW50YWwgcmlnaHRzLiAgIEFydGljbGUgMTQgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBzYXlzIHRoYXQgdGhlIFN0YXRlIHNoYWxsIG5vdCBkZW55IHRvIGFueSBwZXJzb24gZXF1YWxpdHkgYmVmb3JlIGxhdyAgb3IgdGhlIGVxdWFsIHByb3RlY3Rpb24gb2YgbGF3cyB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gICBBcnRpY2xlIDIxIG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgc2F5cyB0aGF0IE5vIHBlcnNvbiBzaGFsbCBiZSBkZXByaXZlZCBvZiBoaXMgbGlmZSBvciBwZXJzb25hbCBsaWJlcnR5ICBleGNlcHQgYWNjb3JkaW5nIHRvIHByb2NlZHVyZSBlc3RhYmxpc2hlZCBieSBsYXcuIFRoaXMgaW5jbHVkZXMgcmlnaHQgdG8gc3BlZWR5IHRyaWFsIGFzIGEgZnVuZGFtZW50YWwgIHJpZ2h0IHRvIHRoZSBwcmlzb25lcnMuICAgUmlnaHQgdG8gdm90ZSBpcyBub3QgYXZhaWxhYmxlIHRvIHByaXNvbmVycyBpbiBJbmRpYSBhcyBvZiB5ZXQuICAgU291cmNlOiAgTGF4bWlrYW50IEZ1bmRhbWVudGFsIFJpZ2h0cyAgIFJJR0hUUyBPRiBQUklTT05FUlMgSU4gSU5ESUE6IEEgTEVHQUwgQU5BTFlTSVMgwrsgKGxhd2F1ZGllbmNlLmNvbSkgICBSaWdodHMgb2YgUHJpc29uZXJzIHVuZGVyIEluZGlhbiBMYXcgKGxlZ2FsZGVzaXJlLmNvbSkgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs: National Parks/Wildlife Sanctuaries Located in states 1. Debrigarh Wildlife Sanctuary Chhattisgarh 2. Rani Jhansi Marine National Park Andaman and Nicobar Islands 3. Kanger Valley National Park Odisha How many pairs given above are correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IE5hdGlvbmFsIFBhcmtzL1dpbGRsaWZlICBTYW5jdHVhcmllcyAgTG9jYXRlZCBpbiBzdGF0ZXMgIDEuIERlYnJpZ2FyaCBXaWxkbGlmZSAgU2FuY3R1YXJ5ICBDaGhhdHRpc2dhcmggIDIuIFJhbmkgSmhhbnNpIE1hcmluZSAgTmF0aW9uYWwgUGFyayAgQW5kYW1hbiBhbmQgIE5pY29iYXIgSXNsYW5kcyAgMy4gS2FuZ2VyIFZhbGxleSAgTmF0aW9uYWwgUGFyayAgT2Rpc2hhICBIb3cgbWFueSBwYWlycyBnaXZlbiBhYm92ZSBhcmUgY29ycmVjdGx5IG1hdGNoZWQ/ICAgYSkgTm9uZSBvZiB0aGUgcGFpcnMgICBiKSBPbmx5IG9uZSBwYWlyICAgYykgT25seSB0d28gcGFpcnMgICBkKSBBbGwgdGhyZWUgcGFpcnMgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgRXhwKSBPcHRpb24gYiBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBUaGlzIHF1ZXN0aW9uIGlzIGJhc2VkIG9uIHRoZSBhcnRpY2xlICdPZGlzaGEgdG8gcmVsb2NhdGUgNDIwIGZhbWlsaWVzIGZyb20gRGVicmlnYXJoIHdpbGRsaWZlIHNhbmN0dWFyeSAgaW4gQmFyZ2FyaCBkaXN0cmljdCcgcHVibGlzaGVkIGluICdEb3duIFRvIEVhcnRoJyBvbiAyMm5kIE9jdG9iZXIgMjAyMS4gIFBhaXIgMSBpcyBpbmNvcnJlY3QuICBEZWJyaWdhcmggd2lsZGxpZmUgc2FuY3R1YXJ5IGlzIGxvY2F0ZWQgaW4gT2Rpc2hhIChub3QgQ2hoYXR0aXNnYXJoKS4gQSB0aGlyZCBvZiB0aGUgc2FuY3R1YXJ5J3MgYXJlYSBpcyAgYm91bmQgYnkgdGhlIEhpcmFrdWQgRGFtLCB0aHVzIGZvcm1pbmcgYSBtaW5pIGNhdGNobWVudCBmb3IgdGhlIHJlc2Vydm9pci4gVGhlIHNhbmN0dWFyeSBpcyBhbHNvIGFuICBpbXBvcnRhbnQgYmlvZ2VvZ3JhcGhpYyB6b25lIGZyb20gYm90aCB0aGUgZWNvbG9naWNhbCBhbmQgZW52aXJvbm1lbnRhbCBwb2ludHMgb2Ygdmlldy4gICBUaGUgc2FuY3R1YXJ5IGZpbmRzIGEgc3BlY2lhbCBtZW50aW9uIGJlY2F1c2Ugb2Ygbm90ZWQgZnJlZWRvbSBmaWdodGVyIFZlZXIgU3VyZW5kcmFTYWkuICBQYWlyIDIgaXMgY29ycmVjdC4gUmFuaSBKaGFuc2kgTWFyaW5lIE5hdGlvbmFsIFBhcmsgaXMgbG9jYXRlZCBpbiB0aGUgQW5kYW1hbiBhbmQgTmljb2JhciBJc2xhbmRzIGluIHRoZSAgQmF5IG9mIEJlbmdhbC4gSXQgd2FzIGZvdW5kZWQgaW4gMTk5NiwgYW5kIGNvdmVycyAyNTYga20uIEl0IGNvbW1lbW9yYXRlcyBMYWtzaG1pYmFpLCB0aGUgUmFuaSBvZiBKaGFuc2kgICgxODI4LTU4KS4gSXQgaXMgbG9jYXRlZCBpbiB0aGUgUml0Y2hpZSdzIEFyY2hpcGVsYWdvIGFuZCBpcyBhYm91dCAzMCBrbSBmcm9tIFBvcnQgQmxhaXIuIEl0IGNvbnRhaW5zIGNvcmFsIHJlZWZzICBhbmQgbWFuZ3JvdmUgZm9yZXN0cy4gVGhlIGJpZ2dlc3QgYXR0cmFjdGlvbiBpbiB0aGUgcGFyayBpcyBhIGZydWl0LWVhdGluZyBiYXQuICAgUGFpciAzIGlzIGluY29ycmVjdC4gS2FuZ2VyIFZhbGxleSBOYXRpb25hbCBQYXJrIGdldHMgaXRzIG5hbWUgZnJvbSB0aGUgS2FuZ2FyIHJpdmVyLiBJdCB3YXMgZGVjbGFyZWQgYSAgbmF0aW9uYWwgcGFyayBpbiAxOTgyIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGFuZCBsb2NhdGVkIG5lYXIgSmFnZGFscHVyIGluIHRoZSBCYXN0YXIgcmVnaW9uIG9mICBDaGhhdHRpc2dhcmguICAgU291cmNlOiBPZGlzaGEgdG8gcmVsb2NhdGUgNDIwIGZhbWlsaWVzIGZyb20gRGVicmlnYXJoIHdpbGRsaWZlIHNhbmN0dWFyeSBpbiBCYXJnYXJoIGRpc3RyaWN0IC1Gb3J1bUlBUyAgQmxvZyAgTGlzdCBvZiBpbXBvcnRhbnQgTmF0aW9uYWwgUGFya3MgaW4gSW5kaWEgfEZvcnVtSUFTIEJsb2cgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "None of the pairs  ",
        "option2" : "Only one pair  ",
        "option3" : "Only two pairs  ",
        "option4" : "All three pairs   "
      }
    },
    {
      "index" : 41,
      "question" : "Right to Privacy is protected as an intrinsic part of Right to Life and Personal Liberty. Which of the following in the Constitution of India correctly and appropriately imply the above statement?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IGZvbGxvd2luZyBpbiB0aGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGNvcnJlY3RseSBhbmQgYXBwcm9wcmlhdGVseSBpbXBseSB0aGUgYWJvdmUgc3RhdGVtZW50PyAgIGEpIEFydGljbGUgMTQgYW5kIHRoZSBwcm92aXNpb25zIHVuZGVyIHRoZSA0Mm5kIEFtZW5kbWVudCB0byB0aGUgQ29uc3RpdHV0aW9uICAgYikgQXJ0aWNsZSAxNyBhbmQgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSBpbiBQYXJ0IElWICAgYykgQXJ0aWNsZSAyMSBhbmQgdGhlIGZyZWVkb21zIGd1YXJhbnRlZWQgaW4gUGFydCBJSUkgICBkKSBBcnRpY2xlIDI0IGFuZCB0aGUgcHJvdmlzaW9ucyB1bmRlciB0aGUgNDR0aCBBbWVuZG1lbnQgdG8gdGhlIENvbnN0aXR1dGlvbiAgICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIEluIEp1c3RpY2UgSy4gUy4gUHV0dGFzd2FteSAoUmV0ZCkgYW5kIG90aGVycyB2cyBVbmlvbiBvZiBJbmRpYSAoMjAxNyksIHRoZSBTdXByZW1lIENvdXJ0IG9ic2VydmVkIHRoYXQgICdSaWdodCB0byBQcml2YWN5JyBpcyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIFJpZ2h0IHRvIExpZmUgYW5kIFBlcnNvbmFsIExpYmVydHkgZ3VhcmFudGVlZCBpbiBBcnRpY2xlIDIxIG9mIHRoZSAgQ29uc3RpdHV0aW9uLiBBIG5pbmUtanVkZ2UgYmVuY2ggb2YgdGhlIFN1cHJlbWUgQ291cnQgZGVjbGFyZWQgdGhhdCB0aGUgcmlnaHQgdG8gcHJpdmFjeSBpcyBhIEZ1bmRhbWVudGFsICBSaWdodCBwcm90ZWN0ZWQgdW5kZXIgUGFydCBJSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYS4gV2hpbGUgcHJpbWFyaWx5IGZvY3VzZWQgb24gdGhlIGluZGl2aWR1YWwncyByaWdodCAgYWdhaW5zdCB0aGUgU3RhdGUgZm9yIHZpb2xhdGlvbnMgb2YgdGhlaXIgcHJpdmFjeSwgdGhpcyBsYW5kbWFyayBqdWRnZW1lbnQgaGFkIHJlcGVyY3Vzc2lvbnMgYWNyb3NzIGJvdGggIFN0YXRlIGFuZCBub24tU3RhdGUgYWN0b3JzIGFuZCBpcyBsaWtlbHkgdG8gcmVzdWx0IGluIHRoZSBlbmFjdG1lbnQgb2YgYSBjb21wcmVoZW5zaXZlIGxhdyBvbiBwcml2YWN5LiAgU291cmNlKSBVUFNDIENTRSAyMDE4ICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Article 14 and the provisions under the 42nd  Amendment to the Constitution  ",
        "option2" : " Article 17 and the Directive Principles of  State Policy in Part IV  ",
        "option3" : " Article 21 and the freedoms guaranteed in  Part III  ",
        "option4" : " Article 24 and the provisions under the 44th  Amendment to the Constitution   "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the Freedom of Movement guaranteed under Article 19 of Indian constitution, consider the following statements: 1.  The State can impose reasonable restrictions on this right for the protection of the interests of any Scheduled Tribe. 2.  The freedom to move outside the borders of India is covered under this right. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IGNvbnNpZGVyIHRoZSBmb2xsb3dpbmcgc3RhdGVtZW50czogIDEuIFRoZSBTdGF0ZSBjYW4gaW1wb3NlIHJlYXNvbmFibGUgcmVzdHJpY3Rpb25zIG9uIHRoaXMgcmlnaHQgZm9yIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSBpbnRlcmVzdHMgb2YgYW55ICBTY2hlZHVsZWQgVHJpYmUuICAyLiBUaGUgZnJlZWRvbSB0byBtb3ZlIG91dHNpZGUgdGhlIGJvcmRlcnMgb2YgSW5kaWEgaXMgY292ZXJlZCB1bmRlciB0aGlzIHJpZ2h0LiAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgaXMvYXJlIGNvcnJlY3Q/ICBhKSAxIG9ubHkgIGIpIDIgb25seSAgYykgQm90aCAxIGFuZCAyICAgZCkgTmVpdGhlciAxIG5vciAyICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgRXhwKSBPcHRpb24gYSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGVyZSBhcmUgMiBsaW1pdGF0aW9ucyBpbXBvc2VkIGFzICdyZWFzb25hYmxlIHJlc3RyaWN0aW9ucycgdG8gdGhlIGV4ZXJjaXNlIG9mICBGcmVlZG9tIG9mIE1vdmVtZW50IGd1YXJhbnRlZWQgdW5kZXIgQXJ0aWNsZSAxOSBvZiBJbmRpYW4gY29uc3RpdHV0aW9uOiAgMSkgaW50ZXJlc3RzIG9mIGdlbmVyYWwgcHVibGljICAyKSBpbnRlcmVzdHMgb2YgYW55IHNjaGVkdWxlZCB0cmliZS4gIFRoZSBzeXN0ZW0gb2YgSW5uZXIgTGluZSBQZXJtaXRzIGlzIGFuIGV4YW1wbGUgb2YgcmVzdHJpY3Rpb24gb2YgdGhpcyByaWdodCBpbiBvcmRlciB0byBlbnN1cmUgd2VsbC1iZWluZyAgb2YgdGhlIHRyaWJhbHMgYW5kIHRoZSBwcmVzZXJ2YXRpb24gb2YgdGhlaXIgdW5pcXVlIGFuZCBwcml2YXRlIGN1bHR1cmUuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBmcmVlZG9tIHRvIGxlYXZlIHRoZSBib3JkZXJzIG9mIEluZGlhIGFzIHBlciBhbiBpbmRpdmlkdWFsJ3Mgd2lsbCBhbmQgcmV0dXJuICBiYWNrLCBjZWlsaW5nIGEgY2l0aXplbiBoYXZlIGJlZW4gY292ZXJlZCB1bmRlciB0aGUgZXhwYW5kZWQgc2NvcGUgb2YgQXJ0aWNsZSAyMSwgYnkganVkaWNpYWwgYWN0aXZpc20gaW4gIE1hbmVrYSBHYW5kaGkgY2FzZSwgMTk3OC4gIFRoaXMgc3Vic2VjdGlvbiBvZiBBcnRpY2xlIDE5IGNvdmVycyBvbmx5IHRoZSBmcmVlZG9tIG9mIEluZGlhbiBjaXRpemVucyB0byBtb3ZlIGZyZWVseSBiZXR3ZWVuIG9uZSBzdGF0ZSAgdG8gYW5vdGhlciwgbm8gbWF0dGVyIHRoZSBwbGFjZSBvZiBiaXJ0aCwgb3IgcmVzaWRlbmNlIG9yIHdvcmssIHdpdGhvdXQgdGhlIG5lZWQgb2YgYW55IHBlcm1pdHMgb3IgIGRvY3VtZW50cy4gVGhpcyBoYXMgYmVlbiBkb25lIHRvIHByb21vdGUgdGhlIGZlZWxpbmdzIG9mIHVuaXR5LCBpbnRlZ3JpdHkgYW5kIGZyYXRlcm5pdHkgYW1vbmcgSW5kaWFuICBjaXRpemVucy4gICBTb3VyY2U6IFBvbGl0eSBieSBMYXhtaWthbnRoLCA1dGggZWRpdGlvbiwgQ2gtNyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 43,
      "question" : "The 86th Constitutional Amendment Act of 2002 made changes to which of the following provisions? 1. Fundamental Rights  2. Directive Principles of State Policy 3. Fundamental Duties Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IDEuIEZ1bmRhbWVudGFsIFJpZ2h0cyAgIDIuIERpcmVjdGl2ZSBQcmluY2lwbGVzIG9mIFN0YXRlIFBvbGljeSAgMy4gRnVuZGFtZW50YWwgRHV0aWVzICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgYSkgMSBvbmx5ICBiKSAyIGFuZCAzIG9ubHkgIGMpIDEgYW5kIDIgb25seSAgZCkgMSwgMiBhbmQgMyAgIEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIDg2dGggQW1lbmRtZW50IEFjdCBvZiAyMDAyIG1hZGUgZWxlbWVudGFyeSBlZHVjYXRpb24gYSBGdW5kYW1lbnRhbCAgUmlnaHQgdW5kZXIgQXJ0aWNsZSAyMSBBLiBUaHVzIDg2dGggQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCBvZiAyMDAyIG1hZGUgY2hhbmdlcyB0byBGdW5kYW1lbnRhbCAgUmlnaHQuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgODZ0aCBBbWVuZG1lbnQgQWN0IG9mIDIwMDIgY2hhbmdlZCB0aGUgc3ViamVjdC1tYXR0ZXIgb2YgQXJ0aWNsZSA0NS4gVGhlICBhbWVuZGVkIGRpcmVjdGl2ZSBwcmluY2lwbGUgcmVxdWlyZXMgdGhlIFN0YXRlIHRvIHByb3ZpZGUgZWFybHkgY2hpbGRob29kIGNhcmUgYW5kIGVkdWNhdGlvbiBmb3IgYWxsICBjaGlsZHJlbiB1bnRpbCB0aGV5IGNvbXBsZXRlIHRoZSBhZ2Ugb2Ygc2l4IHllYXJzLiBUaHVzIDg2dGggQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCBvZiAyMDAyIG1hZGUgIGNoYW5nZXMgdG8gRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5LiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIDg2dGggQW1lbmRtZW50IEFjdCBvZiAyMDAyIG1hZGUgY2hhbmdlcyB0byB0aGUgRnVuZGFtZW50YWwgUmlnaHRzLCAgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5IGFuZCBGdW5kYW1lbnRhbCBEdXRpZXMuIEl0IGFkZGVkIHRoZSBFbGV2ZW50aCBGdW5kYW1lbnRhbCBEdXR5ICB3aGljaCBwcm92aWRlcyB0aGF0IHRoZSBjaXRpemVucyBzaG91bGQgcHJvdmlkZSBvcHBvcnR1bml0aWVzIGZvciBlZHVjYXRpb24gdG8gaGlzIGNoaWxkIG9yIHdhcmQgYmV0d2VlbiAgdGhlIGFnZSBvZiBzaXggYW5kIGZvdXJ0ZWVuIHllYXJzLiAgIFNvdXJjZTogTSBMYXhtaWthbnRoICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 2 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements with respect to the provisions of 'Martial Law' in India'  1.  The 'Martial Law' can be imposed only on the ground of 'armed rebellion within India'. 2.  The declaration of Martial Law automatically results in the suspension of the writ of Habeas Corpus. 3.  'Martial Law' is defined by the Constitution as 'military rule under extraordinary circumstances'. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IDEuIFRoZSAnTWFydGlhbCBMYXcnIGNhbiBiZSBpbXBvc2VkIG9ubHkgb24gdGhlIGdyb3VuZCBvZiAnYXJtZWQgcmViZWxsaW9uIHdpdGhpbiBJbmRpYScuICAyLiBUaGUgZGVjbGFyYXRpb24gb2YgTWFydGlhbCBMYXcgYXV0b21hdGljYWxseSByZXN1bHRzIGluIHRoZSBzdXNwZW5zaW9uIG9mIHRoZSB3cml0IG9mIEhhYmVhcyBDb3JwdXMuICAzLiAnTWFydGlhbCBMYXcnIGlzIGRlZmluZWQgYnkgdGhlIENvbnN0aXR1dGlvbiBhcyAnbWlsaXRhcnkgcnVsZSB1bmRlciBleHRyYW9yZGluYXJ5IGNpcmN1bXN0YW5jZXMnLiAgICAgb2YgMzMgICAgIC4gU0ZHIDIwMjMgfCBMRVZFTCAxIHwgVGVzdCAjMiAtIFNvbHV0aW9ucyB8ICAgIFBhdG5hLCBCaWhhciA4MDAwMDEgICB8IEh5ZGVyYWJhZCAtIDFzdCAmIDJuZCBGbG9vciwgU00gUGxhemEsIFJUQyBYIFJkLCBJbmRpcmEgUGFyayBSb2FkLCBKYXdhaGFyIE5hZ2FyLCBIeWRlcmFiYWQsIFRlbGFuZ2FuYSA1MDAwMjAgICBXaGljaCBvZiB0aGUgc3RhdGVtZW50cyBnaXZlbiBhYm92ZSBpcy9hcmUgY29ycmVjdD8gIGEpIDEgb25seSAgYikgMSBhbmQgMyBvbmx5ICBjKSAyIG9ubHkgIGQpIE5vbmUgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIEFydGljbGUgMzQgcHJvdmlkZXMgZm9yIHRoZSByZXN0cmljdGlvbnMgb24gZnVuZGFtZW50YWwgcmlnaHRzIHdoaWxlIG1hcnRpYWwgbGF3IGlzIGluIGZvcmNlIGluIGFueSBhcmVhICB3aXRoaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gSG93ZXZlciwgdGhlIGV4cHJlc3Npb24gJ21hcnRpYWwgbGF3JyBoYXMgbm90IGJlZW4gZGVmaW5lZCBhbnl3aGVyZSBpbiB0aGUgIENvbnN0aXR1dGlvbi4gIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTWFydGlhbCBMYXcgaXMgaW1wb3NlZCB0byByZXN0b3JlIHRoZSBicmVha2Rvd24gb2YgbGF3IGFuZCBvcmRlciBkdWUgdG8gYW55ICByZWFzb24uIFRoZSBtYXJ0aWFsIGxhdyBpcyBpbXBvc2VkIHVuZGVyIGV4dHJhb3JkaW5hcnkgY2lyY3Vtc3RhbmNlcyBsaWtlIHdhciwgaW52YXNpb24sIGluc3VycmVjdGlvbiwgIHJlYmVsbGlvbiwgcmlvdCBvciBhbnkgdmlvbGVudCByZXNpc3RhbmNlIHRvIGxhdy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IHRoZSBkZWNsYXJhdGlvbiBvZiBtYXJ0aWFsIGxhdyBkb2VzIG5vdCBpcHNvIGZhY3RvICByZXN1bHQgaW4gdGhlIHN1c3BlbnNpb24gb2YgdGhlIHdyaXQgb2YgaGFiZWFzIGNvcnB1cy4gSG93ZXZlciwgZHVyaW5nIHRoZSBvcGVyYXRpb24gb2YgbWFydGlhbCBsYXcsIHRoZSAgbWlsaXRhcnkgYXV0aG9yaXRpZXMgaW1wb3NlIHJlc3RyaWN0aW9ucyBhbmQgcmVndWxhdGlvbnMgb24gdGhlIHJpZ2h0cyBvZiB0aGUgY2l2aWxpYW5zLCBjYW4gcHVuaXNoIHRoZSAgY2l2aWxpYW5zIGFuZCBldmVuIGNvbmRlbW4gdGhlbSB0byBkZWF0aC4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gJ01hcnRpYWwgbGF3JyBpcyBub3QgZGVmaW5lZCBhbnl3aGVyZSBpbiB0aGUgQ29uc3RpdHV0aW9uLiBJdCBtZWFucyAnbWlsaXRhcnkgcnVsZScuICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCBDaGFwdGVyLTcgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 3 only ",
        "option3" : "2 only ",
        "option4" : "None      . SFG 2023 |LEVEL 1 |Test 2 |     "
      }
    },
    {
      "index" : 45,
      "question" : "Recently, which one of the following became first and only vaccine shown to have the capability of significantly reducing malaria and endorsed by the World Health Organisation?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IHNpZ25pZmljYW50bHkgcmVkdWNpbmcgbWFsYXJpYSBhbmQgZW5kb3JzZWQgYnkgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbmlzYXRpb24/ICAgYSkgRmFsY2lwYXJ1bSAgYikgUGxhc21vZGV4ICBjKSBNb3NxdWlyaXggIGQpIEFub3BoZWxlcyAgIEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIG5ldyB2YWNjaW5lICdSVFMsUy9BU08xIChSVFMuUyknIHdpdGggaXRzIHRyYWRlIG5hbWUgJ01vc3F1aXJpeCcgd2FzIGVuZG9yc2VkIGJ5IHRoZSBXb3JsZCBIZWFsdGggIE9yZ2FuaXNhdGlvbiAoV0hPKSByZWNlbnRseS4gVGhpcyBpcyB0aGUgZmlyc3QgYW5kIG9ubHkgdmFjY2luZSBzaG93biB0byBoYXZlIHRoZSBjYXBhYmlsaXR5IG9mIHNpZ25pZmljYW50bHkgIHJlZHVjaW5nIG1hbGFyaWEsIGFuZCBsaWZlLXRocmVhdGVuaW5nIHNldmVyZSBtYWxhcmlhLCBpbiB0ZXN0cyBvbiB5b3VuZyBBZnJpY2FuIGNoaWxkcmVuLiAgTW9zcXVpcml4IGhhcyBiZWVuIGRldmVsb3BlZCBieSBCcml0aXNoIHBoYXJtYWNldXRpY2FsIGNvbXBhbnkgR2xheG9TbWl0aEtsaW5lIGluIHBhcnRuZXJzaGlwIHdpdGggIHRoZSBQQVRIIE1hbGFyaWEgVmFjY2luZSBJbml0aWF0aXZlLiBJdCB3YXMgYXBwcm92ZWQgZm9yIHRoZSBwaWxvdCBwcm9ncmFtbWUgaW4gMjAxNS4gVGhlIHZhY2NpbmUgYWN0cyAgYWdhaW5zdCBQLiBmYWxjaXBhcnVtLCB0aGUgZGVhZGxpZXN0IG1hbGFyaWEgcGFyYXNpdGUgZ2xvYmFsbHksIGFuZCB0aGUgbW9zdCBwcmV2YWxlbnQgaW4gQWZyaWNhLiBUaGUgbWFsYXJpYSAgdmFjY2luZSBzaG91bGQgYmUgcHJvdmlkZWQgaW4gYSBzY2hlZHVsZSBvZiA0IGRvc2VzIGluIGNoaWxkcmVuIGZyb20gNSBtb250aHMgb2YgYWdlIGZvciB0aGUgcmVkdWN0aW9uIG9mICBtYWxhcmlhIGRpc2Vhc2UgYW5kIGJ1cmRlbi4gIEtub3dsZWRnZSBCYXNlOiAgIE1hbGFyaWE6IEl0IGlzIGNhdXNlZCBieSB0aGUgYml0ZSBvZiB0aGUgZmVtYWxlIEFub3BoZWxlcyBtb3NxdWl0byAodmVjdG9yKSBpZiB0aGUgbW9zcXVpdG8gaXRzZWxmIGlzIGluZmVjdGVkICB3aXRoIGEgbWFsYXJpYWwgcGFyYXNpdGUuIEl0IGlzIHByZXZlbnRhYmxlIGFuZCBjdXJhYmxlLiBUaGVyZSBhcmUgZml2ZSBraW5kcyBvZiBtYWxhcmlhbCBwYXJhc2l0ZXMgLSAgUGxhc21vZGl1bSBmYWxjaXBhcnVtLCBQbGFzbW9kaXVtIHZpdmF4ICh0aGUgY29tbW9uZXN0IG9uZXMpLCBQbGFzbW9kaXVtIG1hbGFyaWFlLCAgUGxhc21vZGl1bSBvdmFsZSwgYW5kIFBsYXNtb2RpdW0ga25vd2xlc2kuICAgQ2hpbGRyZW4gYWdlZCB1bmRlciA1IHllYXJzIGFyZSB0aGUgbW9zdCB2dWxuZXJhYmxlIGdyb3VwIGFmZmVjdGVkIGJ5IG1hbGFyaWE7IGluIDIwMTksIHRoZXkgYWNjb3VudGVkICBmb3IgNjclICgyNzQsMDAwKSBvZiBhbGwgbWFsYXJpYSBkZWF0aHMgd29ybGR3aWRlLiAgIEluIDIwMTksIEluZGlhIGhhZCBhbiBlc3RpbWF0ZWQgNS42IG1pbGxpb24gY2FzZXMgb2YgbWFsYXJpYSBjb21wYXJlZCB0byBhYm91dCAyMCBtaWxsaW9uIGNhc2VzIGluIDIwMDAsICBhY2NvcmRpbmcgdG8gV0hPLiAgU291cmNlOiBFeHBsYWluZWQ6IFdoYXQgaXMgTW9zcXVpcml4LCB0aGUgZmlyc3QgbWFsYXJpYSB2YWNjaW5lIHRvIGdldCB0aGUgV0hPJ3MgYmFja2luZz8gLUZvcnVtSUFTIEJsb2cgICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Falciparum ",
        "option2" : "Plasmodex ",
        "option3" : "Mosquirix ",
        "option4" : "Anopheles  "
      }
    },
    {
      "index" : 46,
      "question" : "Which one of the following most accurately reflects the view of Libertarians?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IGEpIFRoZXkgYmVsaWV2ZSB0aGF0IG9wZW4gYW5kIGZhaXIgY29tcGV0aXRpb24gaXMgbmVjZXNzYXJ5IHRvIGFjaGlldmUgZXF1YWxpdHkuICBiKSBUaGV5IGJlbGlldmUgdGhhdCBwdWJsaWMgY29udHJvbCBvdmVyIGVzc2VudGlhbCByZXNvdXJjZXMgaXMgbmVjZXNzYXJ5IHRvIGFjaGlldmUgZXF1YWxpdHkuICBjKSBUaGV5IGJlbGlldmUgdGhhdCBwb2xpdGljYWwsIHNvY2lhbCBhbmQgZWNvbm9taWMgZXF1YWxpdGllcyBhcmUgaW50ZXJsaW5rZWQuICBkKSBUaGV5IGJlbGlldmUgdGhhdCBvbmx5IHN0YXRlIGludGVydmVudGlvbiBjYW4gZW5zdXJlIGVxdWFsIG9wcG9ydHVuaXRpZXMgdG8gYWxsLiAgIEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgTGliZXJhbHMgdXBob2xkIHRoZSBwcmluY2lwbGUgb2YgY29tcGV0aXRpb24gYXMgdGhlIG1vc3QgZWZmaWNpZW50IGFuZCBmYWlyIHdheSBvZiBkaXN0cmlidXRpbmcgcmVzb3VyY2VzICBhbmQgcmV3YXJkcyBpbiBzb2NpZXR5LiBUaGV5IGJlbGlldmUgdGhhdCB3aGlsZSBzdGF0ZXMgbWF5IGhhdmUgdG8gaW50ZXJ2ZW5lIHRvIHRyeSBhbmQgZW5zdXJlIGEgbWluaW11bSAgc3RhbmRhcmQgb2YgbGl2aW5nIGFuZCBlcXVhbCBvcHBvcnR1bml0aWVzIGZvciBhbGwsIHRoaXMgY2Fubm90IGJ5IGl0c2VsZiBicmluZyBlcXVhbGl0eSBhbmQganVzdGljZSB0byBzb2NpZXR5LiAgQ29tcGV0aXRpb24gYmV0d2VlbiBwZW9wbGUgaW4gZnJlZSBhbmQgZmFpciBjb25kaXRpb25zIGlzIHRoZSBtb3N0IGp1c3QgYW5kIGVmZmljaWVudCB3YXkgb2YgZGlzdHJpYnV0aW5nICByZXdhcmRzIGluIGEgc29jaWV0eS4gU29jaWFsaXNtIGFkdm9jYXRlcyBzb21lIGtpbmQgb2YgZ292ZXJubWVudCByZWd1bGF0aW9uLCBwbGFubmluZyBhbmQgY29udHJvbCBvdmVyICBjZXJ0YWluIGFyZWFzIHN1Y2ggYXMgZWR1Y2F0aW9uIGFuZCBoZWFsdGhjYXJlLiBVbmxpa2UgU29jaWFsaXN0cywgbGliZXJhbHMgZG8gbm90IGJlbGlldmUgdGhhdCBwb2xpdGljYWwsICBlY29ub21pYyBhbmQgc29jaWFsIGluZXF1YWxpdGllcyBhcmUgbmVjZXNzYXJpbHkgbGlua2VkLiBUaGV5IG1haW50YWluIHRoYXQgaW5lcXVhbGl0aWVzIGluIGVhY2ggb2YgdGhlc2UgIHNwaGVyZXMgc2hvdWxkIGJlIHRhY2tsZWQgYXBwcm9wcmlhdGVseS4gIFNvdXJjZTogQ2hhcHRlciAzLCBQb2xpdGljYWwgVGhlb3J5IENsYXNzIFhJIE5DRVJUICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " They believe that open and fair competition  is necessary to achieve equality. ",
        "option2" : " They believe that public control over  essential resources is necessary to achieve  equality. ",
        "option3" : " They believe that political, social and  economic equalities are interlinked. ",
        "option4" : " They believe that only state intervention can  ensure equal opportunities to all.  "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following statements is/are correct regarding the Fundamental Duties as enshrined in the Indian Constitution? 1. Fundamental Duties extend to all persons whether citizens or foreigners. 2. They are automatically enforceable and does not need any executive decree. 3. They have been added in Part III of the Constitution so as to keep them on par with Fundamental Rights. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uPyAgMS4gRnVuZGFtZW50YWwgRHV0aWVzIGV4dGVuZCB0byBhbGwgcGVyc29ucyB3aGV0aGVyIGNpdGl6ZW5zIG9yIGZvcmVpZ25lcnMuICAyLiBUaGV5IGFyZSBhdXRvbWF0aWNhbGx5IGVuZm9yY2VhYmxlIGFuZCBkb2VzIG5vdCBuZWVkIGFueSBleGVjdXRpdmUgZGVjcmVlLiAgMy4gVGhleSBoYXZlIGJlZW4gYWRkZWQgaW4gUGFydCBJSUkgb2YgdGhlIENvbnN0aXR1dGlvbiBzbyBhcyB0byBrZWVwIHRoZW0gb24gcGFyIHdpdGggRnVuZGFtZW50YWwgUmlnaHRzLiAgU2VsZWN0IHRoZSBjb3JyZWN0IGFuc3dlciB1c2luZyB0aGUgY29kZSBnaXZlbiBiZWxvdzogIGEpIDEgb25seSAgYikgMyBvbmx5ICBjKSAxIGFuZCAyIG9ubHkgIGQpIE5vbmUgICBFeHApIE9wdGlvbiBkIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIEFydGljbGUgNTFBIHdhcyBhZGRlZCB0byB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBmb3IgaW5jb3Jwb3JhdGlvbiBvZiBGdW5kYW1lbnRhbCBEdXRpZXMuICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFVubGlrZSBzb21lIG9mIHRoZSBGdW5kYW1lbnRhbCBSaWdodHMgd2hpY2ggZXh0ZW5kIHRvIGFsbCBwZXJzb25zIHdoZXRoZXIgIGNpdGl6ZW5zIG9yIGZvcmVpZ25lcnMsIHRoZSBGdW5kYW1lbnRhbCBEdXRpZXMgYXJlIGNvbmZpbmVkIHRvIGNpdGl6ZW5zIG9ubHkgYW5kIGRvIG5vdCBleHRlbmQgdG8gIGZvcmVpZ25lcnMuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IExpa2UgdGhlIERpcmVjdGl2ZSBQcmluY2lwbGVzLCB0aGUgZnVuZGFtZW50YWwgZHV0aWVzIGFyZSBhbHNvIG5vbi1qdXN0aWNpYWJsZS4gVGhlICBDb25zdGl0dXRpb24gZG9lcyBub3QgcHJvdmlkZSBmb3IgdGhlaXIgZGlyZWN0IGVuZm9yY2VtZW50IGJ5IHRoZSBjb3VydHMuIFRodXMsIHRoZXkgYXJlIG5vdCBhdXRvbWF0aWNhbGx5ICBlbmZvcmNlYWJsZS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSA0Mm5kIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QgaW4gMTk3NiBhZGRlZCBhIG5ldyBwYXJ0LCBuYW1lbHksIFBhcnQgIElWQSB0byB0aGUgQ29uc3RpdHV0aW9uLiBUaGlzIG5ldyBwYXJ0IGNvbnNpc3RzIG9mIG9ubHkgb25lIEFydGljbGUsIHRoYXQgaXMsIEFydGljbGUgNTFBIHdoaWNoIHNwZWNpZmllcyBhICBjb2RlIG9mIDExIGZ1bmRhbWVudGFsIGR1dGllcyBvZiB0aGUgY2l0aXplbnMuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIDl0aCBDaGFwdGVyICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "3 only ",
        "option3" : "1 and 2 only ",
        "option4" : "None  "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following statements are correct regarding the significance of the Directive Principles of State Policy in India?   1.  They refer to the goals and objectives which should be adopted by a society.  2.  They facilitate stability and continuity in government policies. 3.  They are intended to avoid any type of conflict between the Centre and the states.  4.  They are supplementary to the fundamental rights of the citizens. Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IG9mIFN0YXRlIFBvbGljeSBpbiBJbmRpYT8gICAgMS4gVGhleSByZWZlciB0byB0aGUgZ29hbHMgYW5kIG9iamVjdGl2ZXMgd2hpY2ggc2hvdWxkIGJlIGFkb3B0ZWQgYnkgYSBzb2NpZXR5LiAgIDIuICBUaGV5IGZhY2lsaXRhdGUgc3RhYmlsaXR5IGFuZCBjb250aW51aXR5IGluIGdvdmVybm1lbnQgcG9saWNpZXMuICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgMy4gVGhleSBhcmUgaW50ZW5kZWQgdG8gYXZvaWQgYW55IHR5cGUgb2YgY29uZmxpY3QgYmV0d2VlbiB0aGUgQ2VudHJlIGFuZCB0aGUgc3RhdGVzLiAgIDQuIFRoZXkgYXJlIHN1cHBsZW1lbnRhcnkgdG8gdGhlIGZ1bmRhbWVudGFsIHJpZ2h0cyBvZiB0aGUgY2l0aXplbnMuICBTZWxlY3QgdGhlIGNvcnJlY3QgYW5zd2VyIHVzaW5nIHRoZSBjb2RlIGdpdmVuIGJlbG93OiAgIGEpIDEsIDIgYW5kIDQgb25seSAgICBiKSAyIGFuZCA0IG9ubHkgICBjKSAxLCAyIGFuZCAzIG9ubHkgIGQpIDEsIDIsIDMgYW5kIDQgICBFeHApIE9wdGlvbiBhIGlzIHRoZSBjb3JyZWN0IGFuc3dlci4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIERQU1BzIGNvbnRhaW4gdGhlIGdvYWxzIGFuZCBvYmplY3RpdmVzIHRoYXQgd2UgYXMgYSBzb2NpZXR5IHNob3VsZCBhZG9wdC4gRm9yICBleGFtcGxlLCBhcnRpY2xlIDM4IHRvIHByb3ZpZGUgbWluaW11bSBpbmVxdWFsaXRpZXMgaW4gaW5jb21lLCBzdGF0dXMsIGZhY2lsaXRpZXMgYW5kIG9wcG9ydHVuaXRpZXMsIEFydGljbGUgIDM5IEEtIHRvIHByb3ZpZGUgZXF1YWwganVzdGljZSBhbmQgdG8gcHJvdmlkZSBmcmVlIGxlZ2FsIGFpZCB0byBwb29yIGV0Yy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGV5IGZhY2lsaXRhdGUgc3RhYmlsaXR5IGFuZCBjb250aW51aXR5IGluIGRvbWVzdGljIGFuZCBmb3JlaWduIHBvbGljaWVzIGluICBwb2xpdGljYWwsIGVjb25vbWljIGFuZCBzb2NpYWwgc3BoZXJlcyBpbiBzcGl0ZSBvZiB0aGUgY2hhbmdlcyBvZiB0aGUgcGFydHkgaW4gcG93ZXIuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIERQU1AgZG9lcyBub3QgY29udGFpbiBhcyBzdWNoIHByb3Zpc2lvbnMgdG8gYXZvaWQgY29uZmxpY3QgYmV0d2VlbiB0aGUgQ2VudHJlICBhbmQgc3RhdGVzLiBJbnN0ZWFkLCBEUFNQcyBwcm92aXNpb25zIGNhbiBsZWFkIHRvIHNvbWV0aW1lcyB0aGUgY29uZmxpY3QgYmV0d2VlbiB0aGUgQ2VudHJlIGFuZCBzdGF0ZXMuICBGb3IgZXhhbXBsZSwgd2hlbiBDZW50cmUgZ2l2ZXMgZGlyZWN0aW9uIHRvIHN0YXRlIHRvIGltcGxlbWVudCBzb21lIHByaW5jaXBsZXMsIGJ1dCBpbiBjYXNlIG9mIG5vbi0gY29tcGxpYW5jZSwgaXQgY2FuIGRpc21pc3MgdGhlIHN0YXRlIGdvdmVybm1lbnQgYW5kIHRodXMgbGVhZGluZyB0byBjb25mbGljdC4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGV5IGFyZSBzdXBwbGVtZW50YXJ5IHRvIHRoZSBmdW5kYW1lbnRhbCByaWdodHMgb2YgdGhlIGNpdGl6ZW5zLiBUaGV5IGFyZSAgaW50ZW5kZWQgdG8gZmlsbCBpbiB0aGUgdmFjdXVtIGluIFBhcnQgSUlJIGJ5IHByb3ZpZGluZyBmb3Igc29jaWFsIGFuZCBlY29ub21pYyByaWdodHMuICBTb3VyY2U6IE5DRVJUIENsYXNzLVhJIEluZGlhbiBjb25zdGl0dXRpb24gYXQgd29yayBDaGFwdGVyLTIgcGFnZS00MyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only   ",
        "option2" : "2 and 4 only  ",
        "option3" : "1, 2 and 3 only ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 49,
      "question" : "Which of the following statements is correct about the relationship between rights and duties of a citizen? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IGNpdGl6ZW4/ICBhKSBSaWdodHMgYXJlIHByb2dyZXNzaXZlIGluIG5hdHVyZSB3aGlsZSBkdXRpZXMgYXJlIHJlZ3Jlc3NpdmUuICBiKSBCb3RoIHJpZ2h0cyBhbmQgZHV0aWVzIG9yaWdpbmF0ZSBmcm9tIHRoZSBpZGVhIG9mIGludGVncml0eSBvZiBuYXRpb24uICBjKSBUaGVyZSdzIGEgY29tcGxlbWVudGFyeSByZWxhdGlvbnNoaXAgYmV0d2VlbiByaWdodHMgYW5kIGR1dGllcy4gIGQpIFJpZ2h0cyBhbmQgZHV0aWVzIGFyZSBjb21wbGV0ZWx5IGluZGVwZW5kZW50IGFuZCBkaXNqb2ludGVkIGZyb20gZWFjaCBvdGhlci4gICBFeHApIE9wdGlvbiBjIGlzIHRoZSBjb3JyZWN0IGFuc3dlciAgUmlnaHRzIGFyZSB3aGF0IG9uZSB3YW50cyBvdGhlcnMgdG8gZG8gZm9yIGhpbS9oZXIsIHdoZXJlYXMgZHV0aWVzIGFyZSB0aG9zZSBhY3RzIHRoYXQgb25lIHNob3VsZCBwZXJmb3JtICBmb3Igb3RoZXJzLiBUaHVzLCBhIHJpZ2h0IGNvbWVzIHdpdGggYW4gb2JsaWdhdGlvbiB0byBzaG93IHJlc3BlY3QgZm9yIHRoZSByaWdodHMgb2Ygb3RoZXJzLiBUaGUgb2JsaWdhdGlvbnMgIHRoYXQgYWNjb21wYW55IHJpZ2h0cyBhcmUgaW4gdGhlIGZvcm0gb2YgZHV0aWVzLiBFdmVyeSByaWdodCBpbXBsaWVzIGEgY28tcmVsYXRpdmUgZHV0eSBhbmQgdmljZS12ZXJzYS4gVGhlICBTdGF0ZSBwcm90ZWN0cyBhbmQgZW5mb3JjZXMgcmlnaHRzIGFuZCBpdCBpcyB0aGUgZHV0eSBvZiBhbGwgY2l0aXplbnMgdG8gYmUgbG95YWwgdG8gdGhlIHN0YXRlLiBUaHVzLCB0aGUgIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSByaWdodHMgaXMgY29tcGxlbWVudGFyeS4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmxlZ2Fsc2VydmljZWluZGlhLmNvbS9sZWdhbC9hcnRpY2xlLTg4NTMtdGhlLXJlbGF0aW9uc2hpcC1iZXR3ZWVuLXJpZ2h0cy1hbmQtIGR1dGllcy5odG1sICAgTkNFUlQgWEksIFBvbGl0aWNhbCB0aGVvcnksIENoYXB0ZXIgNSwgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Rights are progressive in nature while duties  are regressive. ",
        "option2" : " Both rights and duties originate from the  idea of integrity of nation. ",
        "option3" : " There's a complementary relationship  between rights and duties. ",
        "option4" : " Rights and duties are completely  independent and disjointed from each  other.  "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements regarding 'DigiSaksham' programme: 1.  The focus area of the scheme is to enhance the employability of youth by imparting digital skills. 2.  The programme is a joint initiative of Google India and the Ministry of Skill Development and Entrepreneurship. 3.  Under the programme, it is mandatory for all the applicants to get training through Instructor Led Mode Training (ILT). 4.  The scheme will be implemented in the field by Aga Khan Rural Support Programme-India. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IDEuIFRoZSBmb2N1cyBhcmVhIG9mIHRoZSBzY2hlbWUgaXMgdG8gZW5oYW5jZSB0aGUgZW1wbG95YWJpbGl0eSBvZiB5b3V0aCBieSBpbXBhcnRpbmcgZGlnaXRhbCBza2lsbHMuICAyLiBUaGUgcHJvZ3JhbW1lIGlzIGEgam9pbnQgaW5pdGlhdGl2ZSBvZiBHb29nbGUgSW5kaWEgYW5kIHRoZSBNaW5pc3RyeSBvZiBTa2lsbCBEZXZlbG9wbWVudCBhbmQgIEVudHJlcHJlbmV1cnNoaXAuICAzLiBVbmRlciB0aGUgcHJvZ3JhbW1lLCBpdCBpcyBtYW5kYXRvcnkgZm9yIGFsbCB0aGUgYXBwbGljYW50cyB0byBnZXQgdHJhaW5pbmcgdGhyb3VnaCBJbnN0cnVjdG9yIExlZCBNb2RlICBUcmFpbmluZyAoSUxUKS4gIDQuIFRoZSBzY2hlbWUgd2lsbCBiZSBpbXBsZW1lbnRlZCBpbiB0aGUgZmllbGQgYnkgQWdhIEtoYW4gUnVyYWwgU3VwcG9ydCBQcm9ncmFtbWUtSW5kaWEuICAgIG9mIDMzICAgICAuIFNGRyAyMDIzIHwgTEVWRUwgMSB8IFRlc3QgIzIgLSBTb2x1dGlvbnMgfCAgICBQYXRuYSwgQmloYXIgODAwMDAxICAgfCBIeWRlcmFiYWQgLSAxc3QgJiAybmQgRmxvb3IsIFNNIFBsYXphLCBSVEMgWCBSZCwgSW5kaXJhIFBhcmsgUm9hZCwgSmF3YWhhciBOYWdhciwgSHlkZXJhYmFkLCBUZWxhbmdhbmEgNTAwMDIwICAgV2hpY2ggb2YgdGhlIHN0YXRlbWVudHMgZ2l2ZW4gYWJvdmUgYXJlIGNvcnJlY3Q/ICBhKSAxLCAyIGFuZCAzIG9ubHkgIGIpIDIgYW5kIDQgb25seSAgYykgMSBhbmQgNCBvbmx5ICBkKSAxLCAyLCAzIGFuZCA0ICAgRXhwKSBPcHRpb24gYyBpcyB0aGUgY29ycmVjdCBhbnN3ZXIuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIGRpZ2l0YWwgc2tpbGxzIHByb2dyYW1tZSBjYWxsZWQgRGlnaVNha3NoYW0gc2Vla3MgdG8gZW5oYW5jZSB0aGUgZW1wbG95YWJpbGl0eSAgb2YgeW91dGggYnkgaW1wYXJ0aW5nIGRpZ2l0YWwgc2tpbGxzIHRoYXQgYXJlIHJlcXVpcmVkIGluIGFuIGluY3JlYXNpbmdseSB0ZWNobm9sb2d5LWRyaXZlbiBlcmEuIFRoZSAgaW5pdGlhdGl2ZSBnaXZlcyBwcmlvcml0eSB0byB0aGUgam9iLXNlZWtlcnMgb2Ygc2VtaS11cmJhbiBhcmVhcyBiZWxvbmdpbmcgdG8gZGlzYWR2YW50YWdlZCBjb21tdW5pdGllcywgIGluY2x1ZGluZyB0aG9zZSB3aG8gaGF2ZSBsb3N0IHRoZWlyIGpvYnMgZHVlIHRvIHRoZSBDb3ZpZC0xOSBwYW5kZW1pYy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIHByb2dyYW1tZSBpcyBhIGpvaW50IGluaXRpYXRpdmUgb2YgTWljcm9zb2Z0IEluZGlhIGFuZCB0aGUgTWluaXN0cnkgb2YgTGFib3VyICAmIEVtcGxveW1lbnQuIFRoZSBKb2JzZWVrZXJzIGNhbiBhY2Nlc3MgdGhlIHRyYWluaW5nIHRocm91Z2ggTmF0aW9uYWwgQ2FyZWVyIFNlcnZpY2UgKE5DUykgUG9ydGFsLiBJdCBpcyAgYW4gZXh0ZW5zaW9uIG9mIHRoZSBHb3Zlcm5tZW50J3Mgb25nb2luZyBwcm9ncmFtcyB0byBzdXBwb3J0IHRoZSB5b3V0aCBmcm9tIHJ1cmFsIGFuZCBzZW1pLXVyYmFuIGFyZWFzLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBVbmRlciB0aGUgRGlnaVNha3NoYW0gaW5pdGlhdGl2ZSwgdGhlcmUgd2lsbCBiZSBiYXNpY2FsbHkgdGhyZWUgdHlwZXMgb2YgdHJhaW5pbmcgIHZpei4gRGlnaXRhbCBTa2lsbHMgLSBTZWxmIHBhY2VkIGxlYXJuaW5nLCBWSUxUIG1vZGUgdHJhaW5pbmcgKFZpcnR1YWwgSW5zdHJ1Y3RvciBsZWQpIGFuZCBJTFQgbW9kZSB0cmFpbmluZyAgKEluc3RydWN0b3IgbGVkKS4gIFRoZSBJTFQgdHJhaW5pbmcgd2hpY2ggaXMgaW4gcGVyc29uIHRyYWluaW5nIHdvdWxkIGJlIGNvbmR1Y3RlZCBhdCB0aGUgTW9kZWwgQ2FyZWVyICBDZW50cmVzIChNQ0NzKSBhbmQgTmF0aW9uYWwgQ2FyZWVyIFNlcnZpY2UgQ2VudHJlcyAoTkNTQykgZm9yIFNDcy9TVHMgYWNyb3NzIHRoZSBjb3VudHJ5LiBJdCBpcyBub3QgIG1hbmRhdG9yeSBmb3IgdGhlIGFwcGxpY2FudHMgdG8gZ2V0IHRyYWluaW5nIHRocm91Z2ggSW5zdHJ1Y3RvciBsZWQgbW9kZSBUcmFpbmluZyAoSUxUKS4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIERpZ2lTYWtzaGFtIHdpbGwgYmUgaW1wbGVtZW50ZWQgaW4gdGhlIGZpZWxkIGJ5IEFnYSBLaGFuIFJ1cmFsIFN1cHBvcnQgIFByb2dyYW1tZSBJbmRpYSAoQUtSU1AtSSkuIEFnYSBLaGFuIFJ1cmFsIFN1cHBvcnQgUHJvZ3JhbW1lIChJbmRpYSkgaXMgYSBub24tZ292ZXJubWVudCAgZGV2ZWxvcG1lbnQgb3JnYW5pemF0aW9uLiBBS1JTUChJKSB3b3JrcyBhcyBhIGNhdGFseXN0IGZvciB0aGUgYmV0dGVybWVudCBvZiBydXJhbCBjb21tdW5pdGllcyBieSAgcHJvdmlkaW5nIGRpcmVjdCBzdXBwb3J0IHRvIGxvY2FsIGNvbW11bml0aWVzLiAgU291cmNlOiAgU2hyaSBCaHVwZW5kZXIgWWFkYXYgbGF1bmNoZXMgRGlnaVNha3NoYW0tIGEgam9pbnQgaW5pdGlhdGl2ZSBvZiBMYWJvdXIgTWluaXN0cnkgd2l0aCBNaWNyb3NvZnQgIEluZGlhIHRvIGVuaGFuY2UgdGhlIGVtcGxveWFiaWxpdHkgb2YgeW91dGgtRm9ydW1JQVMgQmxvZyAgaHR0cHM6Ly9waWIuZ292LmluL1ByZXNzUmVsZWFzZUlmcmFtZVBhZ2UuYXNweD9QUklEPTE3NTk2ODQgIEFnYSBLaGFuIFJ1cmFsIFN1cHBvcnQgUHJvZ3JhbW1lIChJbmRpYSkgLSBPcmdhbml6YXRpb24gSW5mb3JtYXRpb24gKGFrcnNwaW5kaWEub3JnLmluKSAgd3d3LmVwb25pYy5jb20uYXUvYWR2YW50YWdlcy1vZi12ZXJ0aWNhbC1mYXJtaW5nLyAgICBvZiAzMyA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "2 and 4 only ",
        "option3" : "1 and 4 only ",
        "option4" : "1, 2, 3 and 4   "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
