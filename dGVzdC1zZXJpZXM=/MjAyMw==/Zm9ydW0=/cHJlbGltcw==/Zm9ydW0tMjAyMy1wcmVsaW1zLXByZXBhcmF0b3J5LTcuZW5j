{
  "testId" : "forum-2023-prelims-preparatory-7",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-7.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Which of the following statements is/are  correct regarding the difference between  recession and depression?  1.  While demand increases at a declining rate  during a recession, there is a general fall in  total demand during a depression.  2. While the inflation rate decreases during a  recession, depression is characterized by  higher inflation.  3.  Both recession and depression are  characterized by a fall in the employment  rate.  4.  While industries may resort to price cuts  during a recession, they may resort to  labour cuts during a depression.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFuIGVjb25vbWljIHJlY2Vzc2lvbiBpcyBvZnRlbiBkZWZpbmVkIGFzIGEgZGVjbGluZSBvZiByZWFsIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgKEdEUCkgZm9yIHR3byAgIGNvbnNlY3V0aXZlIHF1YXJ0ZXJzLiBPbiB0aGUgY29udHJhcnksIGFuIGVjb25vbWljIGRlcHJlc3Npb24gaXMgdHlwaWNhbGx5IHVuZGVyc3Rvb2QgYXMgYW4gZXh0cmVtZSAgIGRvd250dXJuIGluIGVjb25vbWljIGFjdGl2aXR5IGxhc3Rpbmcgc2V2ZXJhbCB5ZWFycy4gQSBkZXByZXNzaW9uIGlzIGEgbW9yZSBzZXZlcmUgcmVjZXNzaW9uLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlcmUgaXMgYSBnZW5lcmFsIGZhbGwgaW4gZGVtYW5kIGFzIGVjb25vbWljIGFjdGl2aXRpZXMgdGFrZXMgYSBkb3dudHVybiAgIGR1cmluZyByZWNlc3Npb24uIFRodXMsIHRoZXJlIGlzIG5vIGluY3JlYXNlIGluIGRlbWFuZCBldmVuIGF0IGEgZGVjcmVhc2luZyByYXRlLiBTaW1pbGFybHksIGR1cmluZyAgIGRlcHJlc3Npb24sIGFuIGV4dHJlbWVseSBsb3cgYWdncmVnYXRlIGRlbWFuZCBpbiB0aGUgZWNvbm9teSBjYXVzZXMgYWN0aXZpdGllcyB0byBkZWNlbGVyYXRlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSW5mbGF0aW9uIHJlbWFpbnMgbG93ZXIgb3IvYW5kIHNob3dzIGZ1cnRoZXIgc2lnbnMgb2YgZmFsbGluZyBkb3duIGR1cmluZyAgIHJlY2Vzc2lvbi4gVGhlIGluZmxhdGlvbiBpcyBjb21wYXJhdGl2ZWx5IGxvd2VyIGR1cmluZyB0aGUgdGltZXMgb2YgZGVwcmVzc2lvbi4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBFbXBsb3ltZW50IHJhdGUgZmFsbHMvdW5lbXBsb3ltZW50IHJhdGUgZ3Jvd3MgZHVyaW5nIGJvdGggcmVjZXNzaW9uIGFuZCAgIGRlcHJlc3Npb24uIFRoZSBlbXBsb3ltZW50IGF2ZW51ZXMgc3RhcnQgc2hyaW5raW5nIGZvcmNpbmcgdW5lbXBsb3ltZW50IHJhdGUgdG8gZ3JvdyBmYXN0IGR1cmluZyAgIHRoZXNlIHRpbWVzLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEluZHVzdHJpZXMgcmVzb3J0IHRvICdwcmljZSBjdXRzJyB0byBzdXN0YWluIHRoZWlyIGJ1c2luZXNzIGR1cmluZyB0aGUgcGVyaW9kIG9mICAgcmVjZXNzaW9uLiBPbiB0aGUgY29udHJhcnksIHRvIGtlZXAgdGhlIGJ1c2luZXNzIGdvaW5nLCBwcm9kdWN0aW9uIGhvdXNlcyBnbyBmb3IgZm9yY2VkIGxhYm91ci1jdXRzIG9yICAgcmV0cmVuY2htZW50ICh0byBjdXQgZG93biBwcm9kdWN0aW9uIGNvc3QgYW5kIGJlIGNvbXBldGl0aXZlIGluIHRoZSBtYXJrZXQpIGV0Yy4gZHVyaW5nIGRlcHJlc3Npb24uICAgU291cmNlOiBodHRwczovL3d3dy5idXNpbmVzc3RvZGF5LmluL21hZ2F6aW5lIHJlbmRzL3N0b3J5L3Nsb3dkb3duLXZzLXJlY2Vzc2lvbi12cy0gIGRlcHJlc3Npb24tMTI3OTM5LTIwMDgtMTEtMTMgICBJbmRpYW4gRWNvbm9teSwgUmFtZXNoIFNpbmdoLCBDaGFwdGVyLTcsIEluZmxhdGlvbiBhbmQgQnVzaW5lc3MgQ3ljbGVzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2 and 4 only   "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following pairs:  Economic Curves Description  1. Kuznets curve Direct relationship  between income  growth and economic  growth  2. Phillips curve Inverse relationship  between inflation and  unemployment rate  3. Laffer curve Relation between tax  rate and tax revenue  Which of the pairs given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IFRoZSBLdXpuZXRzIGN1cnZlIGlzIGEgaHlwb3RoZXRpY2FsIGN1cnZlIHRoYXQgZ3JhcGhzIGVjb25vbWljIGluZXF1YWxpdHkgYWdhaW5zdCAgIGluY29tZSBwZXIgY2FwaXRhIG92ZXIgdGhlIGNvdXJzZSBvZiBlY29ub21pYyBkZXZlbG9wbWVudC4gSXQgaXMgYmFzZWQgb24gdGhlIGh5cG90aGVzaXMgb2YgZWNvbm9taXN0ICAgU2ltb24gS3V6bmV0cy4gVGhlIEt1em5ldHMgY3VydmUgaW1wbGllcyB0aGF0IGFzIGFuIGVjb25vbXkgZGV2ZWxvcHMsIG1hcmtldCBmb3JjZXMgZmlyc3QgaW5jcmVhc2UgdGhlbiAgIGRlY3JlYXNlIHRoZSBvdmVyYWxsIGVjb25vbWljIGluZXF1YWxpdHkgb2YgdGhlIHNvY2lldHksIHdoaWNoIGlzIGlsbHVzdHJhdGVkIGJ5IHRoZSBpbnZlcnRlZCBVLXNoYXBlIG9mICAgdGhlIEt1em5ldHMgY3VydmUuICAgICAgUGFpciAyIGlzIGNvcnJlY3Q6IFBoaWxsaXBzIEN1cnZlIHNob3dzIHRoZSBpbnZlcnNlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHVuZW1wbG95bWVudCByYXRlIGFuZCAgIGluZmxhdGlvbi4gVGhlIGNvbmNlcHQgd2FzIGZpcnN0IHBpb25lZXJlZCBieSBXaWxsaWFtIFBoaWxsaXBzIGluIDE5NTguIFRoZSB0aGVvcnkgc3RhdGVzIHRoYXQgdGhlIGhpZ2hlciAgIHRoZSByYXRlIG9mIGluZmxhdGlvbiwgdGhlIGxvd2VyIHRoZSB1bmVtcGxveW1lbnQgYW5kIHZpY2UtdmVyc2EuIFRodXMsIGhpZ2ggbGV2ZWxzIG9mIGVtcGxveW1lbnQgY2FuIGJlICAgYWNoaWV2ZWQgb25seSBhdCBoaWdoIGxldmVscyBvZiBpbmZsYXRpb24uIEhvd2V2ZXIsIHRoZSBQaGlsbGlwcyBjdXJ2ZSBmYWlscyB0byBqdXN0aWZ5IHRoZSBzaXR1YXRpb25zIG9mICAgc3RhZ2ZsYXRpb24sIHdoZW4gYm90aCBpbmZsYXRpb24gYW5kIHVuZW1wbG95bWVudCBhcmUgYWxhcm1pbmdseSBoaWdoLiAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIFBhaXIgMyBpcyBjb3JyZWN0OiBUaGUgTGFmZmVyIEN1cnZlIGlzIGEgdGhlb3J5IGZvcm1hbGl6ZWQgYnkgc3VwcGx5LXNpZGUgZWNvbm9taXN0IEFydGh1ciBMYWZmZXIgdG8gc2hvdyAgIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiB0YXggcmF0ZXMgYW5kIHRoZSBhbW91bnQgb2YgdGF4IHJldmVudWUgY29sbGVjdGVkIGJ5IGdvdmVybm1lbnRzLiBJZiB0YXhlcyBhcmUgICB0b28gaGlnaCBhbG9uZyB0aGUgTGFmZmVyIGN1cnZlLCB0aGVuIHRoZXkgd2lsbCBkaXNjb3VyYWdlIHRoZSB0YXhlZCBhY3Rpdml0aWVzLCBzdWNoIGFzIHdvcmsgYW5kICAgaW52ZXN0bWVudCwgZW5vdWdoIHRvIGFjdHVhbGx5IHJlZHVjZSB0b3RhbCB0YXggcmV2ZW51ZS4gSW4gdGhpcyBjYXNlLCBjdXR0aW5nIHRheCByYXRlcyB3aWxsIGJvdGggc3RpbXVsYXRlICAgZWNvbm9taWMgaW5jZW50aXZlcyBhbmQgaW5jcmVhc2UgdGF4IHJldmVudWUuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhvdWdodGNvLmNvbS9rdXpuZXRzLWN1cnZlLWluLWVjb25vbWljcy0xMTQ2MTIyICAgaHR0cHM6Ly9tLmVjb25vbWljdGltZXMuY29tL2RlZmluaXRpb24vcGhpbGxpcHMtY3VydmUgICBodHRwczovL3d3dy5pbnZlc3RvcGVkaWEuY29tIGVybXMvbC9sYWZmZXJjdXJ2ZS5hc3AgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 3,
      "question" : "In which of the following circumstances,  the calculation of GDP would be inaccurate?   1.  Including net exports in the Expenditure  method of GDP estimation.   2.  Accounting for depreciation in the Income  method  3.  Including both intermediate and final goods  in the Value Addition method of GDP  estimation.   4.  Subtracting Product subsides in the GDP  estimation.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHcm9zcyBkb21lc3RpYyBwcm9kdWN0IChHRFApIGlzIGFuIGltcG9ydGFudCBtZXRyaWMgZm9yIGFueSBjb3VudHJ5LiBJdCBoZWxwcyBtZWFzdXJlIHRoZSB0b3RhbCAgIG1vbmV0YXJ5IHZhbHVlIG9mIGdvb2RzIGFuZCBzZXJ2aWNlcyBmbG93aW5nIHRocm91Z2ggYW4gZWNvbm9teSBvdmVyIGEgcGFydGljdWxhciBwZXJpb2Qgb2YgdGltZS4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgZXhwZW5kaXR1cmUgYXBwcm9hY2ggb2YgR0RQIGVzdGltYXRpb24gaXMgYmFzZWQgb24gdGhlIG1vbmV5IHNwZW50IGJ5ICAgdmFyaW91cyBncm91cHMgdGhhdCBwYXJ0aWNpcGF0ZSBpbiB0aGUgZWNvbm9teS4gICBHRFAgPSBDICsgRyArIEkgKyBOWCAgIEMgPSBjb25zdW1wdGlvbiBvciBhbGwgcHJpdmF0ZSBjb25zdW1lciBzcGVuZGluZyB3aXRoaW4gYSBjb3VudHJ5J3MgZWNvbm9teSwgaW5jbHVkaW5nLCBkdXJhYmxlIGdvb2RzICAgKGl0ZW1zIHdpdGggYSBsaWZlc3BhbiBncmVhdGVyIHRoYW4gdGhyZWUgeWVhcnMpLCBub24tZHVyYWJsZSBnb29kcyAoZm9vZCAmIGNsb3RoaW5nKSwgYW5kIHNlcnZpY2VzLiAgIEcgPSB0b3RhbCBnb3Zlcm5tZW50IGV4cGVuZGl0dXJlcywgaW5jbHVkaW5nIHNhbGFyaWVzIG9mIGdvdmVybm1lbnQgZW1wbG95ZWVzLCByb2FkICAgY29uc3RydWN0aW9uL3JlcGFpciwgcHVibGljIHNjaG9vbHMsIGFuZCBtaWxpdGFyeSBleHBlbmRpdHVyZS4gICBJID0gc3VtIG9mIGEgY291bnRyeSdzIGludmVzdG1lbnRzIHNwZW50IG9uIGNhcGl0YWwgZXF1aXBtZW50LCBpbnZlbnRvcmllcywgYW5kIGhvdXNpbmcuICAgTlggPSBuZXQgZXhwb3J0cyBvciBhIGNvdW50cnkncyB0b3RhbCBleHBvcnRzIG1pbnVzIHRvdGFsIGltcG9ydHMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSW5jb21lIEFwcHJvYWNoIG9mIEdEUCBlc3RpbWF0aW9uIHRha2VzIHRoZSB0b3RhbCBpbmNvbWUgZ2VuZXJhdGVkIGJ5IHRoZSAgIGdvb2RzIGFuZCBzZXJ2aWNlcyBwcm9kdWNlZC4gICBHRFAgPSBUb3RhbCBOYXRpb25hbCBJbmNvbWUgKyBTYWxlcyBUYXhlcyArIERlcHJlY2lhdGlvbiArIE5ldCBGb3JlaWduIEZhY3RvciBJbmNvbWUgICBUb3RhbCBOYXRpb25hbCBJbmNvbWUgLSB0aGUgc3VtIG9mIGFsbCB3YWdlcywgcmVudCwgaW50ZXJlc3QsIGFuZCBwcm9maXRzLiAgIFNhbGVzIFRheGVzIC0gY29uc3VtZXIgdGF4ZXMgaW1wb3NlZCBieSB0aGUgZ292ZXJubWVudCBvbiB0aGUgc2FsZXMgb2YgZ29vZHMgYW5kIHNlcnZpY2VzLiAgIERlcHJlY2lhdGlvbiAtIGNvc3QgYWxsb2NhdGVkIHRvIGEgdGFuZ2libGUgYXNzZXQgb3ZlciBpdHMgdXNlZnVsIGxpZmUuICAgTmV0IEZvcmVpZ24gRmFjdG9yIEluY29tZSAtIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHRvdGFsIGluY29tZSB0aGF0IGEgY291bnRyeSdzIGNpdGl6ZW5zIGFuZCAgIGNvbXBhbmllcyBnZW5lcmF0ZSBpbiBmb3JlaWduIGNvdW50cmllcywgdmVyc3VzIHRoZSB0b3RhbCBpbmNvbWUgZm9yZWlnbiBjaXRpemVucyBhbmQgY29tcGFuaWVzICAgZ2VuZXJhdGUgaW4gdGhlIGRvbWVzdGljIGNvdW50cnkuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEdyb3NzIHZhbHVlIGFkZGVkIChHVkEpIGlzIGRlZmluZWQgYXMgdGhlIHZhbHVlIG9mIG91dHB1dCBsZXNzIHRoZSB2YWx1ZSBvZiAgIGludGVybWVkaWF0ZSBjb25zdW1wdGlvbi4gU28sIGFjY291bnRpbmcgZm9yIGJvdGggaW50ZXJtZWRpYXRlIGFuZCBmaW5hbCBnb29kcyB3aWxsIGdpdmUgaW5hY2N1cmF0ZSAgIHJlc3VsdHMuICAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogV2hlbiB0aGUgdmFsdWUgb2YgdGF4ZXMgb24gcHJvZHVjdHMgKGxlc3Mgc3Vic2lkaWVzIG9uIHByb2R1Y3RzKSBpcyBhZGRlZCwgdGhlICAgc3VtIG9mIHZhbHVlIGFkZGVkIGZvciBhbGwgcmVzaWRlbnQgdW5pdHMgZ2l2ZXMgdGhlIHZhbHVlIG9mIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgKEdEUCkuICAgIEdEUCA9IEdyb3NzIHZhbHVlIGFkZGVkIChHVkEpIC0gc3Vic2lkaWVzIG9uIHByb2R1Y3RzICsgdGF4ZXMgb24gcHJvZHVjdHMgICAgU291cmNlOiAgaHR0cHM6Ly9jb3Jwb3JhdGVmaW5hbmNlaW5zdGl0dXRlLmNvbS9yZXNvdXJjZXMva25vd2xlZGdlL2Vjb25vbWljcy9nZHAtZm9ybXVsYS8gICAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9ncm9zcy12YWx1ZS1hZGRpdGlvbi1ndmEvICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 and 4 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the Gross Fixed Capital  Formation (GFCF), consider the following  statements:   1.  GFCF as a percent of GDP in India has  declined in the 2010-2020 period.    2.  Public sector GFCF has decreased over the  last five years period.    3. Private sector GFCF has increased over the  last five years period.    Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHcm9zcyBGaXhlZCBDYXBpdGFsIEZvcm1hdGlvbiByZWZlcnMgdG8gdGhlICdhZ2dyZWdhdGUgb2YgZ3Jvc3MgYWRkaXRpb25zIHRvIGZpeGVkIGFzc2V0cyAodGhhdCBpcyBmaXhlZCAgIGNhcGl0YWwgZm9ybWF0aW9uKSBwbHVzIGNoYW5nZSBpbiBzdG9ja3MgZHVyaW5nIHRoZSBjb3VudGluZyBwZXJpb2QuIEZpeGVkIGFzc2V0IHJlZmVycyB0byB0aGUgICBjb25zdHJ1Y3Rpb24sIG1hY2hpbmVyeSBhbmQgZXF1aXBtZW50LiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBHcm9zcyBGaXhlZCBDYXBpdGFsIEZvcm1hdGlvbiBoYXMgZGVjbGluZWQgZnJvbSAzMyUgaW4gMjAxMCB0byAyNyUgaW4gMjAyMC4gICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogUHVibGljIHNlY3RvciBHRkNGIGhhcyBpbmNyZWFzZWQgb3ZlciBsYXN0IGZpdmUgeWVhcnMgcGVyaW9kLiBJdCBoYXMgaW5jcmVhc2VkICAgZnJvbSAxMSBsYWMgY3JvcmUgcnVwZWVzIGluIDIwMTUtMTYgdG8gMTUgbGFraCBjcm9yZXMgaW4gMjAyMC0yMS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBQcml2YXRlIHNlY3RvciBHRkNGIGhhcyBpbmNyZWFzZWQgb3ZlciBsYXN0IGZpdmUgeWVhcnMgcGVyaW9kLiBJdCBoYXMgaW5jcmVhc2VkICAgZnJvbSA2MyBsYWMgY3JvcmUgcnVwZWVzIHRvIDExNSBsYWMgY3JvcmUgcnVwZWVzIGluIDIwMjAtMjEuICAgIFNvdXJjZTogICAgaHR0cHM6Ly93d3cucmJpLm9yZy5pbi9zY3JpcHRzL1B1YmxpY2F0aW9uc1ZpZXcuYXNweD9pZD0yMDQwOSAgICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL2NhcGV4LXB1c2gtdG8tYWlkLWVjb25vbXktY2VhLyAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following is correct with  reference to the Marginal Cost of Production?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb3N0IG9mIFByb2R1Y3Rpb24gaXMgYWxzbyBjYWxsZWQgcHJvZHVjdGlvbiBjb3N0cyBvciBjb3N0IHByaWNlLiBJdCBpcyB0aGUgdG90YWwgY29zdCBzdXN0YWluZWQgYnkgYSAgIGJ1c2luZXNzIHRvIHByb2R1Y2UgYSBzcGVjaWZpYyBxdWFudGl0eSBvZiBhIHByb2R1Y3QuICAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IFRoZSBtYXJnaW5hbCBjb3N0IG9mIHByb2R1Y3Rpb24gaXMgdGhlIGNoYW5nZSBpbiB0b3RhbCBwcm9kdWN0aW9uIGNvc3QgdGhhdCBjb21lcyAgIGZyb20gbWFraW5nIG9yIHByb2R1Y2luZyBvbmUgYWRkaXRpb25hbCB1bml0LiBUbyBjYWxjdWxhdGUgbWFyZ2luYWwgY29zdCwgZGl2aWRlIHRoZSBjaGFuZ2UgaW4gICBwcm9kdWN0aW9uIGNvc3RzIGJ5IHRoZSBjaGFuZ2UgaW4gcXVhbnRpdHkuIFRoZSBwdXJwb3NlIG9mIGFuYWx5c2luZyBtYXJnaW5hbCBjb3N0IGlzIHRvIGRldGVybWluZSBhdCAgIHdoYXQgcG9pbnQgYW4gb3JnYW5pemF0aW9uIGNhbiBhY2hpZXZlIGVjb25vbWllcyBvZiBzY2FsZSB0byBvcHRpbWl6ZSBwcm9kdWN0aW9uIGFuZCBvdmVyYWxsIG9wZXJhdGlvbnMuICAgSWYgdGhlIG1hcmdpbmFsIGNvc3Qgb2YgcHJvZHVjaW5nIG9uZSBhZGRpdGlvbmFsIHVuaXQgaXMgbG93ZXIgdGhhbiB0aGUgYXZlcmFnZSBjb3N0LCB0aGUgcHJvZHVjZXIgaGFzICAgdGhlIHBvdGVudGlhbCB0byBnYWluIGEgcHJvZml0LiAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IFRoZSBhdmVyYWdlIGNvc3Qgb2YgcHJvZHVjdGlvbiBpcyBkZWZpbmVkIGFzIHRoZSB0b3RhbCBjb3N0IG9mIHByb2R1Y3Rpb24gcGVyIHVuaXQgICBwcm9kdWNlZC4gSW4gc2ltcGxlIHdvcmRzLCBhdmVyYWdlIGNvc3QgY29tZXMgd2hlbiB0aGUgdG90YWwgY29zdCBvZiBwcm9kdWN0aW9uIGlzIGRpdmlkZWQgYnkgdGhlICAgbnVtYmVyIG9mIHByb2R1Y3QgdW5pdHMgcHJvZHVjZWQuICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogRml4ZWQgY29zdHMgaW5jbHVkZSB0aG9zZSBwcmljZXMgd2hpY2ggZG9uJ3QgY2hhbmdlIHdpdGggdGltZS4gRml4ZWQgY29zdHMgYXMgdGhlICAgbmFtZSBzaG93cyByZW1haW4gZml4ZWQgdGhyb3VnaG91dCB0aGUgdGltZS4gICBPcHRpb24gZCBpcyBpbmNvcnJlY3Q6IEZpeGVkIGNvc3RzIGRvbid0IGRlcGVuZCBvbiB0aGUgYW1vdW50IG9mIHByb2R1Y3Rpb24uIFByb2R1Y2VycyBoYXZlIHRvIHBheSAgIGZpeGVkIGNvc3RzIGZvciBpdCBldmVuIHdoZW4gdGhlcmUgaXMgemVybyBwcm9kdWN0aW9uIG9yIG5vIHByb2ZpdHMuICAgIFNvdXJjZTogICAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbSBlcm1zL20vbWFyZ2luYWxjb3N0b2Zwcm9kdWN0aW9uLmFzcCMgICAgaHR0cHM6Ly93d3cuYW5hbHl0aWNzc3RlcHMuY29tL2Jsb2dzL2Nvc3QtcHJvZHVjdGlvbi1tZWFuaW5nLXR5cGVzLWhvdy1jYWxjdWxhdGUgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Producer gets profit if marginal cost is less   than the average cost of production.   ",
        "option2" : " It is defined as the total cost of production   per unit produced.   ",
        "option3" : " It remains fixed throughout time.   ",
        "option4" : " Producers have to pay the marginal costs   even when there is zero production.    "
      }
    },
    {
      "index" : 6,
      "question" : "If the Gross Domestic Product (GDP) of a  country is increasing constantly, then which of  the following is definitely true?   1.  The quality and standard of life is increasing  within the middle class and lower class in  the same proportion.  2.  The income inequality is decreasing in the  country.   3.  The resources available to people in the  country are increasing.   4.  The unemployment rate will decline in the  country.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEdyb3NzIGRvbWVzdGljIHByb2R1Y3QsIG9yIEdEUCwgbWVhc3VyZXMgdGhlIHRvdGFsIG91dHB1dCBvZiB0aGUgZWNvbm9teSwgaW5jbHVkaW5nIGFjdGl2aXR5LCBzdGFiaWxpdHksICAgYW5kIGdyb3d0aCBvZiBnb29kcyBhbmQgc2VydmljZXM7IGFzIHN1Y2gsIGl0J3Mgc2VlbiBhcyBhIHByb3h5IGZvciB0aGUgZWNvbm9teS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEVjb25vbWljIGdyb3d0aCBhbmQgZWNvbm9taWMgZGV2ZWxvcG1lbnQgbWF5IG1lYW4gdGhhdCB0aGUgcXVhbGl0eSBvZiBsaWZlICAgaW5jcmVhc2VzIGZhc3RlciB3aXRoaW4gdGhlIG1pZGRsZSBjbGFzcyB0aGFuIHdpdGhpbiB0aGUgbG93ZXIgY2xhc3MuIFRoZSBsb3dlciBjbGFzcyBtYXkgbm90IGdhaW4gaW4gdGhlICAgc2FtZSBwcm9wb3J0aW9uIGFzIGluZGl2aWR1YWxzIHdobyBhcmUgcGxhY2VkIGluIGhpZ2hlciBpbmNvbWUgZ3JvdXBzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHJpc2luZyBHRFAgbWF5IG9yIG1heSBub3QgbGVhZCB0byBkZWNsaW5lIGluIGluZXF1YWxpdHkgZGVwZW5kaW5nIHVwb24gICB0aGUgZGlzdHJpYnV0aW9uIG9mIHRoZSBpbmNvbWUuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFJpc2luZyBHRFAgbWVhbnMgdGhlIGVjb25vbXkgaXMgZ3Jvd2luZywgYW5kIHRoZSByZXNvdXJjZXMgYXZhaWxhYmxlIHRvICAgcGVvcGxlIGluIHRoZSBjb3VudHJ5IC0gZ29vZHMgYW5kIHNlcnZpY2VzLCB3YWdlcyBhbmQgcHJvZml0cyAtIGFyZSBpbmNyZWFzaW5nLiAgICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IEdEUCBhbmQgdW5lbXBsb3ltZW50IHJhdGVzIHVzdWFsbHkgZ28gdG9nZXRoZXIgYmVjYXVzZSBhIGRlY3JlYXNlIGluIHRoZSAgIEdEUCBpcyByZWZsZWN0ZWQgaW4gYSBkZWNyZWFzZSBpbiB0aGUgcmF0ZSBvZiBlbXBsb3ltZW50LiBBIHJpc2UgaW4gZW1wbG95bWVudCBsZXZlbHMgaXMgYSBuYXR1cmFsIHJlc3VsdCBvZiAgIGluY3JlYXNlZCBHRFAgbGV2ZWxzIGNhdXNlZCBieSBhbiBpbmNyZWFzZSBpbiBjb25zdW1lciBkZW1hbmRzIGZvciBnb29kcyBhbmQgc2VydmljZXMuIEJ1dCB3ZSBoYXZlICAgc2VlbiBpbnN0YW5jZXMgb2Ygam9ibGVzcyBncm93dGggaW4gSW5kaWEgKGNvbnN0YW50IHVuZW1wbG95bWVudCBkZXNwaXRlIHJpc2luZyBHRFApLiAgICBTb3VyY2U6ICAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbS9hcnRpY2xlcy9lY29ub21pY3MvMTAvam9ibGVzcy1ncm93dGgtZWNvbm9teS5hc3AgICAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbS9hc2svYW5zd2Vycy8wNjAxMTUvaG93LWRvZXMtZ3Jvc3MtZG9tZXN0aWMtcHJvZHVjdC1nZHAtYWZmZWN0LSAgc3RhbmRhcmQtICBsaXZpbmcuYXNwIzp+OnRleHQ9R3Jvc3MlMjBkb21lc3RpYyUyMHByb2R1Y3QlMkMlMjBvciUyMEdEUCxwZW9wbGUlMjBsaXZpbmclMjBpbiUyMHRoZSUyMCAgY291bnRyeS4gICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "None          "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following is correct with  reference to the National Statistical Office?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE5hdGlvbmFsIFN0YXRpc3RpY2FsIE9mZmljZSBhY3RzIGFzIHRoZSBub2RhbCBhZ2VuY3kgZm9yIHBsYW5uZWQgZGV2ZWxvcG1lbnQgb2YgdGhlIHN0YXRpc3RpY2FsIHN5c3RlbSBpbiAgIHRoZSBjb3VudHJ5LCBsYXlzIGRvd24gYW5kIG1haW50YWlucyBub3JtcyBhbmQgc3RhbmRhcmRzIGluIHRoZSBmaWVsZCBvZiBzdGF0aXN0aWNzLCBpbnZvbHZpbmcgY29uY2VwdHMgICBhbmQgZGVmaW5pdGlvbnMsIG1ldGhvZG9sb2d5IG9mIGRhdGEgY29sbGVjdGlvbiwgcHJvY2Vzc2luZyBvZiBkYXRhIGFuZCBkaXNzZW1pbmF0aW9uIG9mIHJlc3VsdHMuICAgIE9wdGlvbiBhIGlzIGluY29ycmVjdDogTmF0aW9uYWwgU3RhdGlzdGljYWwgT2ZmaWNlIGlzIGFuIGF1dG9ub21vdXMgYm9keSB1bmRlciB0aGUgTWluaXN0cnkgb2YgU3RhdGlzdGljcyAgIGFuZCBQcm9ncmFtbWUgSW1wbGVtZW50YXRpb24uICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdDogTmF0aW9uYWwgU3RhdGlzdGljYWwgT2ZmaWNlIGNvbXBpbGVzIGFuZCByZWxlYXNlcyB0aGUgSW5kZXggb2YgSW5kdXN0cmlhbCAgIFByb2R1Y3Rpb24gKElJUCkgZXZlcnkgbW9udGggaW4gdGhlIGZvcm0gb2YgJ3F1aWNrIGVzdGltYXRlcyc7IGNvbmR1Y3RzIHRoZSBBbm51YWwgU3VydmV5IG9mIEluZHVzdHJpZXMgICAoQVNJKTsgYW5kIHByb3ZpZGVzIHN0YXRpc3RpY2FsIGluZm9ybWF0aW9uIHRvIGFzc2VzcyBhbmQgZXZhbHVhdGUgdGhlIGNoYW5nZXMgaW4gdGhlIGdyb3d0aCwgY29tcG9zaXRpb24gICBhbmQgc3RydWN0dXJlIG9mIHRoZSBvcmdhbml6ZWQgbWFudWZhY3R1cmluZyBzZWN0b3IuICAgIFdob2xlLXNhbGUgcHJpY2UgaW5kZXggKFdQSSkgaW4gSW5kaWEgaXMgcHVibGlzaGVkIGJ5IHRoZSBPZmZpY2Ugb2YgRWNvbm9taWMgQWR2aXNlciwgTWluaXN0cnkgb2YgICBDb21tZXJjZSBhbmQgSW5kdXN0cnkuICAgIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IE5TTyB3YXMgZm9ybWVkIG9uIHRoZSByZWNvbW1lbmRhdGlvbnMgb2YgdGhlIFJhbmdhcmFqYW4gQ29tbWlzc2lvbi4gICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBUaGUgTmF0aW9uYWwgU3RhdGlzdGljYWwgT2ZmaWNlIChOU08pIGNvbnNpc3RzIG9mIHRoZSBDZW50cmFsIFN0YXRpc3RpY2FsIE9mZmljZSAgIChDU08pLCB0aGUgY29tcHV0ZXIgY2VudGVyIGFuZCB0aGUgTmF0aW9uYWwgU2FtcGxlIFN1cnZleSBPZmZpY2UgKE5TU08pLiBDU08gYW5kIE5TU08gd2VyZSBtZXJnZWQgICBpbnRvIE5TTyBpbiAyMDE5LiAgICAgU291cmNlOiBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL25hdGlvbmFsLXN0YXRpc3RpY2FsLW9mZmljZS1uc28vICAgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vd2hvbGVzYWxlLXByaWNlLWluZGV4LXdwaS8gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is an autonomous body under the Ministry   of Commerce and Industry.   ",
        "option2" : " It compiles the Index of Wholesale Price   Index (WPI) every month.  ",
        "option3" : " It was formed on the recommendation of   the Rangarajan Commission.   ",
        "option4" : " It will be merged into National Sample   Survey Office (NSSO) in 2023.     "
      }
    },
    {
      "index" : 8,
      "question" : "Which of the following statements is  incorrect with regard to the Ways and Means  Advances (WMA)?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFdheXMgYW5kIE1lYW5zIEFkdmFuY2VzIChXTUEpIFNjaGVtZSB3YXMgaW50cm9kdWNlZCBpbiAxOTk3LiBJdHMgb2JqZWN0aXZlIGlzIHRvIG1lZXQgbWlzbWF0Y2hlcyBpbiAgIHRoZSByZWNlaXB0cyBhbmQgcGF5bWVudHMgb2YgdGhlIGdvdmVybm1lbnQuICAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IFdheXMgYW5kIE1lYW5zIEFkdmFuY2VzIChXTUEpIFNjaGVtZSB3YXMgaW50cm9kdWNlZCBpbiAxOTk3LiBUaGVzZSBhcmUgICB0ZW1wb3JhcnkgbG9hbiBmYWNpbGl0aWVzIHByb3ZpZGVkIGJ5IHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkgdG8gdGhlIGNlbnRyYWwgYW5kIHN0YXRlICAgZ292ZXJubWVudHMgdG8gbWVldCBtaXNtYXRjaGVzIGluIHRoZSByZWNlaXB0cyBhbmQgcGF5bWVudHMuIFRoZSBsaW1pdHMgZm9yIFdNQSBhcmUgZGVjaWRlZCBieSB0aGUgICBnb3Zlcm5tZW50IGFuZCBSQkkgbXV0dWFsbHkgYW5kIHJldmlzZWQgcGVyaW9kaWNhbGx5LiAgICBPcHRpb24gYiBpcyBjb3JyZWN0OiBXTUEgaXMgY3VycmVudGx5IGF0IHRoZSBleGlzdGluZyByZXBvIHJhdGUgYW5kIHRoZSB0ZW51cmUgaXMgZm9yIHRocmVlIG1vbnRocy4gICBIb3dldmVyLCBpZiB0aGUgdGVudXJlIGlzIGV4dGVuZGVkLCBpdCB3aWxsIGJlIHRyZWF0ZWQgYXMgYW4gb3ZlcmRyYWZ0IHdoaWNoIGlzIGNoYXJnZWQgYWJvdmUgcmVwbyByYXRlLiAgICBPcHRpb24gYyBpcyBjb3JyZWN0OiBUeXBlcyBvZiBXTUE6ICAgIChhKSBTcGVjaWFsIFdNQTogSXQgaXMgZXh0ZW5kZWQgYWdhaW5zdCB0aGUgY29sbGF0ZXJhbCBvZiB0aGUgZ292ZXJubWVudCBzZWN1cml0aWVzIGhlbGQgYnkgdGhlIFN0YXRlICAgR292ZXJubWVudCBhbmQgICAgKGIpIE5vcm1hbCBXTUE6IEl0IGlzIGJhc2VkIG9uIGEgdGhyZWUteWVhciBhdmVyYWdlIG9mIGFjdHVhbCByZXZlbnVlIGFuZCBjYXBpdGFsIGV4cGVuZGl0dXJlIG9mIHRoZSAgIHN0YXRlLiBJdCBpcyBub3QgY29sbGF0ZXJhbCBiYXNlZC4gICAgVGhlIFJCSSBkZXRlcm1pbmVzIGxpbWl0cyBmb3Igbm9ybWFsIGFuZCBzcGVjaWFsIFdNQSBmb3IgZWFjaCBzdGF0ZSBhcyBtdWx0aXBsZXMgb2YgdGhlIHByZXNjcmliZWQgICBtaW5pbXVtIGJhbGFuY2UgcmVxdWlyZWQgdG8gYmUgbWFpbnRhaW5lZCB3aXRoIHRoZSBSQkkgYnkgdGhhdCBzdGF0ZS4gVGhlc2UgbGltaXRzIGhhdmUgYmVlbiByZXZpc2VkICAgcGVyaW9kaWNhbGx5LiAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3Q6IFdNQSBmdW5kaW5nIGlzIG11Y2ggY2hlYXBlciB0aGFuIGJvcnJvd2luZ3MgZnJvbSBtYXJrZXRzIGFzIGl0IGlzIGNoYXJnZWQgYXQgICB0aGUgcmVwbyByYXRlLiBXTUEgY2FuIGJlIGFuIGFsdGVybmF0aXZlIHRvIG90aGVyIHRvb2xzIG9mIGJvcnJvd2luZyBsaWtlIHJhaXNpbmcgbG9uZ2VyLXRlbnVyZSBmdW5kcyAgIGZyb20gdGhlIG1hcmtldHMsIGlzc3VlIG9mIFN0YXRlIGdvdmVybm1lbnQgc2VjdXJpdGllcyBvciBib3Jyb3dpbmcgZnJvbSBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIGZvciBzaG9ydC0gIHRlcm0gZnVuZGluZy4gICAgU291cmNlOiBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL3dheXMtYW5kLW1lYW5zLWFkdmFuY2VzLyAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is a temporary loan facility provided by the   Reserve Bank of India to the State   governments.    ",
        "option2" : " The interest rate charged is at the repo rate.   ",
        "option3" : " Special WMA is extended against the   collateral of the government securities held   by the State Government.   ",
        "option4" : " WMA funding is costlier than borrowings   from markets.   "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following statements:  1.  Capital Adequacy Ratio is the percentage of  cash required to be kept in reserves as  against the bank's total deposits.  2.  Only public sector banks need to maintain  Capital Adequacy Ratio.  3.  Higher capital adequacy ratios ensure that  banks do not become insolvent.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENhcGl0YWwgQWRlcXVhY3kgUmF0aW8gKENBUikgaXMgdGhlIHJhdGlvIG9mIGEgYmFuaydzIGNhcGl0YWwgaW4gcmVsYXRpb24gdG8gaXRzIHJpc2std2VpZ2h0ZWQgYXNzZXRzIGFuZCAgIGN1cnJlbnQgbGlhYmlsaXRpZXMuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBCYXNlZCBvbiB0aGUgcmVjb21tZW5kYXRpb25zIG9mIHRoZSBCYXNlbCBDb21taXR0ZWUgKDE5ODgpLCBiYW5rcyBhcmUgICByZXF1aXJlZCB0byBtYWludGFpbiBhIHNwZWNpZmllZCBtaW5pbXVtIGFtb3VudCBvZiBjYXBpdGFsIHJlbGF0aXZlIHRvIHRoZWlyIGFzc2V0cy4gVGhpcyBpcyBrbm93biBhcyAgIGNhcGl0YWwgYWRlcXVhY3kgcmF0aW8gKENBUikuIFdoaWxlIHRoZSBwZXJjZW50YWdlIG9mIGNhc2ggcmVxdWlyZWQgdG8gYmUga2VwdCBpbiByZXNlcnZlcyBhcyBhZ2FpbnN0IHRoZSAgIGJhbmsncyB0b3RhbCBkZXBvc2l0cywgaXMgY2FsbGVkIHRoZSBDYXNoIFJlc2VydmUgUmF0aW8gKENSUikuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIGluIDE5OTIgaW50cm9kdWNlZCBhIHJpc2sgYXNzZXQgcmF0aW8gc3lzdGVtIGZvciAgIGJhbmtzIChpbmNsdWRpbmcgZm9yZWlnbiBiYW5rcykgaW4gSW5kaWEgYXMgYSBjYXBpdGFsIGFkZXF1YWN5IG1lYXN1cmUgaW4gbGluZSB3aXRoIHRoZSBDYXBpdGFsIEFkZXF1YWN5ICAgTm9ybXMgcHJlc2NyaWJlZCBieSBCYXNlbCBDb21taXR0ZWUuIEFzIHBlciBSQkkgbm9ybXMsIEluZGlhbiBzY2hlZHVsZWQgY29tbWVyY2lhbCBiYW5rcyBhbmQgSW5kaWFuICAgcHVibGljIHNlY3RvciBiYW5rcyBhcmUgZW1waGFzaXplZCB0byBtYWludGFpbiBDQVIuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gTWluaW11bSBjYXBpdGFsIGFkZXF1YWN5IHJhdGlvcyBhcmUgY3JpdGljYWwgaW4gZW5zdXJpbmcgdGhhdCBiYW5rcyBoYXZlIGVub3VnaCAgIGN1c2hpb24gdG8gYWJzb3JiIGEgcmVhc29uYWJsZSBhbW91bnQgb2YgbG9zc2VzIGJlZm9yZSB0aGV5IGJlY29tZSBpbnNvbHZlbnQgYW5kIGNvbnNlcXVlbnRseSBsb3NlICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgZGVwb3NpdG9ycycgZnVuZHMuIEdlbmVyYWxseSwgYSBiYW5rIHdpdGggYSBoaWdoIGNhcGl0YWwgYWRlcXVhY3kgcmF0aW8gaXMgY29uc2lkZXJlZCBzYWZlIGFuZCBsaWtlbHkgdG8gICBtZWV0IGl0cyBmaW5hbmNpYWwgb2JsaWdhdGlvbnMuICAgS25vd2xlZGdlIEJhc2U6ICAgIENhcGl0YWwgQWRlcXVhY3kgUmF0aW8gaXMgPSAoVGllciBJICsgVGllciBJSSArIFRpZXIgSUlJIChDYXBpdGFsIGZ1bmRzKSkgL1Jpc2sgd2VpZ2h0ZWQgYXNzZXRzKSAgIEhlcmUsIFRpZXIgSSBjYXBpdGFsIGlzIGEgYmFuaydzIGNvcmUgY2FwaXRhbCBjb25zaXN0aW5nIG9mIHNoYXJlaG9sZGVycycgZXF1aXR5IGFuZCByZXRhaW5lZCBlYXJuaW5nczsgd2hpbGUgICBUaWVyIElJIGNhcGl0YWwgaW5jbHVkZXMgcmV2YWx1YXRpb24gcmVzZXJ2ZXMsIGh5YnJpZCBjYXBpdGFsIGluc3RydW1lbnRzLCBhbmQgc3Vib3JkaW5hdGVkIHRlcm0gZGVidC4gVGllciAgIElJSSBjYXBpdGFsIGNvbnNpc3RzIG9mIFRpZXIgSUkgY2FwaXRhbCBwbHVzIHNob3J0LXRlcm0gc3Vib3JkaW5hdGVkIGxvYW5zLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3Mtc3RhbmRhcmQuY29tL2Fib3V0L3doYXQtaXMtY2FzaC1yZXNlcnZlLSAgcmF0aW8jOn46dGV4dD1VbmRlciUyMGNhc2glMjByZXNlcnZlJTIwcmF0aW8lMjAoQ1JSLGNhbGxlZCUyMHRoZSUyMENhc2glMjBSZXNlcnZlJTIwUmF0aW8uICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMTQ2Mi8xL1VuaXQtNC5wZGYgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzIzNTUzLzEvVW5pdC0xMC5wZGYgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vbWFya2V0cy9zdG9ja3MvbmV3cy93aGF0LWlzLWNhcGl0YWwtYWRlcXVhY3ktcmF0aW8tZm9yLSAgYmFua3MvYXJ0aWNsZXNob3cvNzI5NzkzOTcuY21zP2Zyb209bWRyICAgaHR0cHM6Ly9lY29ub21pY3RpbWVzLmluZGlhdGltZXMuY29tL2RlZmluaXRpb24vY2FwaXRhbC1hZGVxdWFjeS1yYXRpbyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following is/are the possible  impacts of Currency Swap?  1.  Increase Exports of goods and commodities.  2.  Help in fund and currency risk management  3.  Increases volatility in foreign exchange  markets  4.  Higher depreciation of domestic currency  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEEgY3VycmVuY3kgc3dhcCBpcyB1bmRlcnRha2VuIHdoZW4gYSBwYXJ0eSBoYXMgYSBsaWFiaWxpdHkgaW50byBhbm90aGVyIGN1cnJlbmN5LCBpbiBvcmRlciB0byB0YWtlICAgYWR2YW50YWdlIG9mIGZhdm91cmFibGUgaW50ZXJlc3QgcmF0ZSBvciBpbnRlcmVzdCByYXRlIG1vdmVtZW50LCB3aGVyZWFzIGEgY291bnRlciBwYXJ0eSBoYXMgYSBsaWFiaWxpdHkgaW4gICB0aGUgbGF0dGVyIGN1cnJlbmN5LCB3aGljaCBpdCB3aXNoZXMgdG8gY29udmVydCBpbnRvIGxpYWJpbGl0eSBpbiB0aGUgZm9ybWVyIGN1cnJlbmN5LiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIEN1cnJlbmN5IFN3YXAgYXMgYSBwYWN0IGJldHdlZW4gdHdvIGNvdW50cmllcyBhbGxvd3MgdHJhZGluZyBpbiB0aGVpciBvd24gICBjdXJyZW5jeSBhbmQgcGF5bWVudHMgdG8gaW1wb3J0IGFuZCBleHBvcnQgdHJhZGUgYXQgcHJlLWRldGVybWluZWQgZXhjaGFuZ2UgcmF0ZXMgd2l0aG91dCBicmluZ2luZyAgIGluIGEgdGhpcmQgY3VycmVuY3kuIEl0IGhlbHBzIHRoZSBjb3VudHJpZXMgdG8gc3dhcCBjdXJyZW5jaWVzIHdpdGggdHJhZGUgcGFydG5lciBjb3VudHJpZXMgdGhhdCBtYXkgICBpbmNyZWFzZSBleHBvcnRzIGFuZCBicmluZyBkb3duIHRyYWRlIGRlZmljaXQuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIGN1cnJlbmN5IHN3YXAgYWdyZWVtZW50cyBoZWxwIGluIGZ1bmQgbWFuYWdlbWVudCBhbmQgY3VycmVuY3kgcmlzayAgIG1hbmFnZW1lbnQgYXMgaXQgaG9sZHMgdGhlIGFiaWxpdHkgdG8gaGVkZ2UgY3VycmVuY3kgcmlzay4gSXQgY2FuIHBvdGVudGlhbGx5IGJlbmVmaXQgZnJvbSBhY2Nlc3MgdG8gICBpbnRlcm5hdGlvbmFsIGZpbmFuY2lhbCBtYXJrZXRzIHdpdGhvdXQgY3VycmVuY3kgbWlzbWF0Y2ggaWYgYSBub24tcmVzaWRlbnQgY2FuIHN1Y2Nlc3NmdWxseSBpc3N1ZSBsb2NhbCAgIGN1cnJlbmN5IGRlYnQgdG8gcHJvdmlkZSBhIHN3YXAgY291bnRlcnBhcnR5LiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gQ3VycmVuY3kgU3dhcCBhZ3JlZW1lbnRzIHdoaWNoIGludm9sdmUgZXhjaGFuZ2Ugb2Ygb25lIGN1cnJlbmN5IGZvciAgIGFub3RoZXIgY3VycmVuY3ksIHByb3ZpZGUgY29uZmlkZW5jZSB0byB0aGUgbWFya2V0IGFuZCBwcmV2ZW50IGV4Y2VzcyB2b2xhdGlsaXR5IGluIGZpbmFuY2lhbCBhbmQgZm9yZWlnbiAgIGV4Y2hhbmdlIG1hcmtldHMuICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBBIEN1cnJlbmN5IFN3YXAgYWdyZWVtZW50IGNhbiBoZWxwIGNvdW50cmllcyBpbiBzdXBwb3J0aW5nIHRoZWlyIGRlcHJlY2lhdGVkICAgZG9tZXN0aWMgY3VycmVuY3kgYWdhaW5zdCB0aGUgY3VycmVuY3kgb2Ygb3RoZXIgY291bnRyeSB0aGF0IGNvdWxkIGhlbHAgdG8gaW5jcmVhc2UgdGhlIGZ1bmRpbmcgICByZXF1aXJlbWVudHMgb2YgdGhlIG5hdGlvbiBmb3IgdGhlaXIgZG9tZXN0aWMgZ3Jvd3RoLiBBIGRvbGxhciBzd2FwIGFycmFuZ2VtZW50IG9mIEluZGlhIHdpdGggVVMgY291bGQgICBoZWxwIEluZGlhIGluIHN1cHBvcnRpbmcgdGhlIGRlcHJlY2lhdGluZyBydXBlZSwgYWdhaW5zdCB0aGUgVVMgY3VycmVuY3kuICAgU291cmNlOiBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzEyMTU5LzEvVW5pdC03LnBkZiAgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vbWFya2V0cy9mb3JleC9pbmRpYS1leHBsb3JpbmctYmVuZWZpdHMtb2YtY3VycmVuY3ktc3dhcC0gIGFncmVlbWVudHMvYXJ0aWNsZXNob3cvMjE2Nzg3NTguY21zICAgaHR0cHM6Ly93d3cuYmlzLm9yZy9yZXBvZmZpY2VwdWJsL2FycHJlc2VhcmNoMjAwOTAzLjAyLnBkZiAgIGh0dHBzOi8vd3d3LnNoaXBwaW5nYW5kZnJlaWdodHJlc291cmNlLmNvbS9jdXJyZW5jeS1zd2FwLWFuZC1ob3ctaXQtY2FuLWhlbHAtdHJhZGUvICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "2, 3 and 4 only  "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to the Cash reserve ratio  (CRR) and Statutory liquidity ratio (SLR),  consider the following statements:  1.  Small finance banks and payments banks  need not maintain CRR   2.  The CRR has to be maintained in cash  whereas the SLR can be maintained either in  cash or in assets.  3.  Unlike CRR, the banks don't earn any returns  from the money maintained in the form of  SLR.  4.  The CRR meet short-term liquidity  requirements whereas the SLR controls  excess money flow in the economy.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIENhc2ggcmVzZXJ2ZSByYXRpbyAoQ1JSKSBhbmQgU3RhdHV0b3J5IGxpcXVpZGl0eSByYXRpbyAoU0xSKSBhcmUga25vd24gYXMgUXVhbnRpdGF0aXZlIGluc3RydW1lbnRzIG9mICAgTW9uZXRhcnkgUG9saWN5IHdoZXJlIGNlcnRhaW4gaW50ZXJlc3QgcmF0ZSBpcyBzZXQgYnkgdGhlIGNlbnRyYWwgYmFuayBvZiB0aGUgY291bnRyeSBhbmQgdGhhdCByYXRlIGFwcGxpZXMgICB0byBiYW5raW5nIHN5c3RlbSBvZiB0aGUgY291bnRyeSBhcyBhIHdob2xlLiAgIEEgY2VydGFpbiBmcmFjdGlvbiBvZiB0b3RhbCBhc3NldHMgaXMgYWx3YXlzIGtlcHQgYnkgYmFua3MgaW4gYSBjdXJyZW50IGFjY291bnQgbWFpbnRhaW5lZCBieSB0aGUgY2VudHJhbCAgIGJhbmsgKFJCSSkuIEJhbmtzIGRvIG5vdCBoYXZlIGFjY2VzcyB0byB0aGF0IG1vbmV5IHRvIGNvbXBseSB3aXRoIHRoZSBzdGF0dXRvcnkgcmVzZXJ2ZSByZXF1aXJlbWVudHMgICBhbmQgcGFydGlhbGx5IGZvciBtZWV0aW5nIGRheS10byBkYXkgY2FzaCBwYXltZW50cyBpbiBmb3JtIG9mIENhc2ggUmVzZXJ2ZSBSYXRpby4gV2hpbGUgaW4gU0xSIHRoZSAgIGNvbW1lcmNpYWwgYmFuayBoYXMgdG8gbWFpbnRhaW4gdGhlIGRlcG9zaXRzIGluIHRoZSBmb3JtIG9mIGxpcXVpZCBjYXNoLCBnb2xkIG9yIG90aGVyIHNlY3VyaXRpZXMgd2l0aCAgIHRoZW1zZWx2ZXMgb25seS4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuICAgRXZlcnkgc2NoZWR1bGVkIGJhbmssIHNtYWxsIGZpbmFuY2UgYmFuayBhbmQgcGF5bWVudHMgYmFuayBzaGFsbCBtYWludGFpbiBtaW5pbXVtIENSUi4gRXZlcnkgICBTY2hlZHVsZWQgQ29tbWVyY2lhbCBCYW5rIChpbmNsdWRpbmcgUlJCcyksIExvY2FsIEFyZWEgQmFuaywgU21hbGwgRmluYW5jZSBCYW5rLCBQYXltZW50cyBCYW5rLCAgIFByaW1hcnkgKHVyYmFuKSBjby1vcGVyYXRpdmUgYmFuayBhbmQgU3RhdGUgYW5kIGNlbnRyYWwgY28tb3BlcmF0aXZlIGJhbmtzIHNoYWxsIGNvbnRpbnVlIHRvIG1haW50YWluICAgJ1NMUiBhc3NldHMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQ1JSIGFyZSBhc3NldHMga2VwdCBieSBiYW5rcyBhcyBjYXNoIHBhcnRpYWxseSB0byBjb21wbHkgd2l0aCB0aGUgc3RhdHV0b3J5ICAgcmVzZXJ2ZSByZXF1aXJlbWVudHMgYW5kIHBhcnRpYWxseSBmb3IgbWVldGluZyBkYXktdG8gZGF5IGNhc2ggcGF5bWVudHMuIFdoaWxlIFNMUiBhcmUgdGltZSBhbmQgICBkZW1hbmQgZGVwb3NpdHMgaW4gYXNzZXRzIHNwZWNpZmllZCBieSBSQkkgd2hpY2ggYXJlIG1haW50YWluZWQgaW4gZm9ybSBvZiBnb2xkLCBhbmQgZ292ZXJubWVudCBib25kcyAgIGFuZCBzZWN1cml0aWVzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gQmFua3MgZG9uJ3QgZWFybiBhbnkgcmV0dXJucyBmcm9tIHRoZSBtb25leSBwYXJrZWQgaW4gdGhlIGZvcm0gb2YgQ1JSLiAgIEhvd2V2ZXIsIGJhbmtzIGNhbiBlYXJuIHJldHVybnMgZnJvbSBTTFIgYmVjYXVzZSwgdW5kZXIgU0xSIHJlcXVpcmVtZW50cywgYmFua3MgYXJlIHN1cHBvc2VkIHRvICAgaW52ZXN0IGluIGxpcXVpZCBhc3NldHMgbGlrZSBjZW50cmFsIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IHNlY3VyaXRpZXMvYm9uZHMgYW5kIHRoZXNlIGJvbmRzIGVhcm4gYmFua3MgICBzb21lIGludGVyZXN0LiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuICBUaGUgUkJJIHVzZXMgdGhlIENSUiBhcyBhIHRvb2wgb2YgY29udHJvbGxpbmcgbW9uZXkgc3VwcGx5IGFuZCBtZWV0IHNob3J0IHRlcm0gICBsaXF1aWRpdHkgcmVxdWlyZW1lbnRzLiBJbiBjYXNlIG9mIGluZmxhdGlvbiwgQ1JSIGlzIGluY3JlYXNlZCwgdGh1cyBkZWNyZWFzaW5nIHRoZSBsZW5kaW5nIGFiaWxpdHkgb2YgYmFua3MuICAgQWx0ZXJuYXRlbHksIGJ5IGxvd2VyaW5nIHRoZSBDUlIsIGNyZWRpdCBleHBhbnNpb24gYnkgYmFua3MgaW5jcmVhc2VzLiBXaGlsZSB0aGUgY2VudHJhbCBiYW5rIHVzZXMgU0xSIHRvICAgY2hlY2sgdGhlIG1vbmV5IHN1cHBseSBpbiB0aGUgZWNvbm9teS4gSW5jcmVhc2luZyBTTFIgZGVjcmVhc2VzIGxpcXVpZGl0eSBpbiBlY29ub215IGFuZCB2aWNlLXZlcnNhLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cubGl2ZW1pbnQuY29tLyAgIGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzY3NjYwLzMvVW5pdC02LnBkZiAgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9tYXJrZXRzL3N0b2Nrcy9uZXdzL3doYXQtYXJlLWNyci1zbHItd2l0aC1yZXNwZWN0LXRvLSAgYmFua3MvYXJ0aWNsZXNob3cvNzI5NzkxMzUuY21zP2Zyb209bWRyICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 2 and 4 only   "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements with  reference to the Prompt corrective action  (PCA) framework of the Reserve Bank of India  (RBI):  1.  Recently RBI brought Housing Finance  Companies under the ambit of the PCA  Framework.  2.  The PCA framework is not applicable on  Payments banks and small finance banks  (SFBs).  3.  Capital, Asset Quality and Leverage are the  key areas for monitoring in the PCA  framework.  4.  If a bank is under the PCA framework then  restrictions will be there on  Promoters/Owners to bring in capital.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQcm9tcHQgQ29ycmVjdGl2ZSBBY3Rpb24gb3IgUENBIGlzIGEgZnJhbWV3b3JrIHVuZGVyIHdoaWNoIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMgd2l0aCB3ZWFrIGZpbmFuY2lhbCAgIG1ldHJpY3MgYXJlIHB1dCB1bmRlciB3YXRjaCBieSB0aGUgUkJJLiAgIEVhcmxpZXIgdGhlIFJCSSBoYWQgaW1wb3NlZCBQQ0Egb25seSBvbiBiYW5rcy4gTm93IHRoZSBQQ0EgZnJhbWV3b3JrIGlzIGV4dGVuZGVkIHRvIE5CRkNzLiAgIFRoZSBtb3ZlIGNvbWVzIGluIHRoZSB3YWtlIG9mIGxhcmdlIE5CRkNzIHN1Y2ggYXMgSUwmRlMsIERIRkwsIFNSRUkgR3JvdXAgYW5kIFJlbGlhbmNlIENhcGl0YWwgICBnZXR0aW5nIGludG8gZmluYW5jaWFsIHRyb3VibGUgb3ZlciB0aGUgbGFzdCBmZXcgeWVhcnMuICAgVGhlIFBDQSBmcmFtZXdvcmsgZm9yIE5CRkNzIGNvbWVzIGludG8gZWZmZWN0IGZyb20gT2N0b2JlciAxLCAyMDIyLCBiYXNlZCBvbiB0aGVpciBmaW5hbmNpYWwgcG9zaXRpb24gICBvbiBvciBhZnRlciBNYXJjaCAzMSwgMjAyMi4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBmcmFtZXdvcmsgd2lsbCBhcHBseSB0byBhbGwgZGVwb3NpdC10YWtpbmcgTkJGQ3MsIGV4Y2x1ZGluZyBnb3Zlcm5tZW50ICAgY29tcGFuaWVzLCBhbmQgYWxsIG5vbi1kZXBvc2l0IHRha2luZyBOQkZDcyBpbiB0aGUgbWlkZGxlLCB1cHBlciBhbmQgdG9wIGxheWVycyBhcyB3ZWxsIGFzIEhvdXNpbmcgICBGaW5hbmNlIENvbXBhbmllcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBbGwgU2NoZWR1bGVkIENvbW1lcmNpYWwgQmFua3MgYXJlIHVuZGVyIHRoZSBhbWJpdCBvZiBQQ0EgZnJhbWV3b3JrICAgKEV4Y2x1ZGluZyBTbWFsbCBGaW5hbmNlIEJhbmtzLCBQYXltZW50IEJhbmtzIGFuZCBSZWdpb25hbCBSdXJhbCBCYW5rcykuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gICAgIENhcGl0YWwsIGFzc2V0IHF1YWxpdHkgYW5kIGxldmVyYWdlIHdpbGwgYmUgdGhlIGtleSBhcmVhcyBmb3IgbW9uaXRvcmluZyBpbiB0aGUgICByZXZpc2VkIFBDQSBmcmFtZXdvcmsuICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgSW5kaWNhdG9ycyB0byBiZSB0cmFja2VkIGZvciBjYXBpdGFsLCBhc3NldCBxdWFsaXR5IGFuZCBsZXZlcmFnZSB3b3VsZCBiZSBDUkFSLyBjb21tb24gZXF1aXR5IHRpZXIgSSAgIHJhdGlvLCBuZXQgTlBBIHJhdGlvIGFuZCB0aWVyIEkgbGV2ZXJhZ2UgcmF0aW8sIHJlc3BlY3RpdmVseS4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBJZiBhIGJhbmsgaXMgdW5kZXIgdGhlIFBDQSBmcmFtZXdvcmsgdGhlbiB0aGVyZSB3aWxsIGJlIHRocmVlIHJpc2sgdGhyZXNob2xkcyAgIDEpIHJlc3RyaWN0aW9ucyBvbiBkaXZpZGVuZCBkaXN0cmlidXRpb24vcmVtaXR0YW5jZSBvZiBwcm9maXRzLiBBbHNvLCByZXN0cmljdGlvbnMgd2lsbCBiZSB0aGVyZSBvbiAgIFByb21vdGVycy9Pd25lcnMvIHRvIGJyaW5nIGluIGNhcGl0YWwuICAgMikgcmVzdHJpY3Rpb25zIHdpbGwgYmUgdGhlcmUgb24gYnJhbmNoIGV4cGFuc2lvbjsgZG9tZXN0aWMgYW5kL29yIG92ZXJzZWFzLiAgIDMpICBhcHByb3ByaWF0ZSByZXN0cmljdGlvbnMgb24gY2FwaXRhbCBleHBlbmRpdHVyZSwgb3RoZXIgdGhhbiBmb3IgdGVjaG5vbG9naWNhbCB1cC1ncmFkYXRpb24gd2l0aGluICAgQm9hcmQgYXBwcm92ZWQgbGltaXRzLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cucmJpLm9yZy5pbi9TY3JpcHRzL05vdGlmaWNhdGlvblVzZXIuYXNweD9JZD0xMjIwOCZNb2RlPTAgICBodHRwczovL3JiaS5vcmcuaW4vc2NyaXB0cy9Ob3RpZmljYXRpb25Vc2VyLmFzcHg/TW9kZT0wJklkPTEyMTg2Izp+OnRleHQ9Q29tbWVyY2lhbCUyMEJhbmtzJTBBKCAgLSxFeGNsdWRpbmclMjBTbWFsbCUyMEZpbmFuY2UlMjBCYW5rcywtJTJDJTIwUGF5bWVudCUyMEJhbmtzJTIwYW5kICAgIGh0dHBzOi8vd3d3LnJiaS5vcmcuaW4vU2NyaXB0cy9Ob3RpZmljYXRpb25Vc2VyLmFzcHg/SWQ9MTIxODYjOn46dGV4dD1vZiUyMGZvcmVpZ24lMjBiYW5rcyktICAsdG8lMjBicmluZyUyMGluJTIwY2FwaXRhbCwtQ29tbW9uJTIwbWVudSAgIGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9idXNpbmVzcy9lY29ub215L3BjYS1mcmFtZXdvcmstcmV2aXNlZC1hc3NldC1xdWFsaXR5LWNhcGl0YWwtICBsZXZlcmFnZS1rZXktICA3NjA1MDA0LyM6fjp0ZXh0PUNhcGl0YWwlMkMlMjBhc3NldCUyMHF1YWxpdHklMjBhbmQlMjBsZXZlcmFnZSxhcyUyMHBlciUyMHRoZSUyMHJldmlzZWQlMiAgMGZyYW1ld29yay4gICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2J1c2luZXNzL2JhbmtpbmctYW5kLWZpbmFuY2UvcmJpLWJyaW5ncy1uYmZjcy11bmRlci1wcm9tcHQtICBjb3JyZWN0aXZlLWFjdGlvbi1mcmFtZXdvcmstNzY3MzQwMC8gICAgaHR0cHM6Ly9yYmkub3JnLmluL3NjcmlwdHMvQlNfU3BlZWNoZXNWaWV3LmFzcHg/SWQ9MTA2NSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "2 and 4 only         ",
        "option4" : "1 and 3 only         "
      }
    },
    {
      "index" : 13,
      "question" : "The Factor cost of a good include(s) which  of the following?  1. Payments for raw materials.  2. Wages to labour for production.  3. Taxes.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEZhY3RvciBjb3N0IGluY2x1ZGVzIHRoZSBwYXltZW50IHRvIGZhY3RvcnMgb2YgcHJvZHVjdGlvbiAobGFuZCwgbGFib3VyIGFuZCBjYXBpdGFsICYgICBlbnRyZXByZW5ldXJzaGlwKS4pLiBJdCBkb2VzIG5vdCBpbmNsdWRlIGFueSB0YXguIFRodXMsIGZhY3RvciBjb3N0IG9mIGEgZ29vZCB3aWxsIGluY2x1ZGUgcGF5bWVudCBmb3IgcmF3ICAgbWF0ZXJpYWxzIGFuZCBXYWdlcyB0byBsYWJvdXIgZm9yIHByb2R1Y3Rpb24uICAgSW4gb3JkZXIgdG8gYXJyaXZlIGF0IHRoZSBtYXJrZXQgcHJpY2VzLCB3ZSBoYXZlIHRvIGFkZCB0byB0aGUgZmFjdG9yIGNvc3QgdGhlIHRvdGFsIGluZGlyZWN0IHRheGVzIGxlc3MgdG90YWwgICBzdWJzaWRpZXMuIFRoZSBiYXNpYyBwcmljZXMgbGllIGluIGJldHdlZW46IHRoZXkgaW5jbHVkZSB0aGUgcHJvZHVjdGlvbiB0YXhlcyAobGVzcyBwcm9kdWN0aW9uIHN1YnNpZGllcykgICBidXQgbm90IHByb2R1Y3QgdGF4ZXMgKGxlc3MgcHJvZHVjdCBzdWJzaWRpZXMpLiBUaGVyZWZvcmUsIGluIG9yZGVyIHRvIGFycml2ZSBhdCBtYXJrZXQgcHJpY2VzIHdlIGhhdmUgdG8gICBhZGQgcHJvZHVjdCB0YXhlcyAobGVzcyBwcm9kdWN0IHN1YnNpZGllcykgdG8gdGhlIGJhc2ljIHByaWNlcy4gICBJbiBJbmRpYSwgQ1NPIHVzZXMgR1ZBIGF0IGJhc2ljIHByaWNlcyBhcyBhIG1lYXN1cmUgb2YgbmF0aW9uYWwgaW5jb21lLiAgIFNvdXJjZTogSW50cm9kdWN0b3J5IE1hY3JvZWNvbm9taWNzJyBDbGFzcyAxMi1OQ0VSVCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 14,
      "question" : "Which one is correct with reference to  Central Bank Digital Currency (CBDC)?   1.  CBDC is just a wallet or an electronic purse,  issued by a central bank.  2.  It cannot be exchanged for cash   3.  CBDC will be based on blockchain  technology and will be regulated by the RBI.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENlbnRyYWwgQmFuayBEaWdpdGFsIEN1cnJlbmN5IChDQkRDKSBpcyBhIGRpZ2l0YWwgZm9ybSBvZiBGaWF0IEN1cnJlbmN5IHdoaWNoIGNhbiBiZSB0cmFuc2FjdGVkIHVzaW5nICAgd2FsbGV0cyBiYWNrZWQgYnkgYmxvY2tjaGFpbiBhbmQgaXMgcmVndWxhdGVkIGJ5IHRoZSBjZW50cmFsIGJhbmsuICAgSXQgaXMgdGhlIHNvdmVyZWlnbiBjdXJyZW5jeSBpbiBhbiBlbGVjdHJvbmljIGZvcm0gYW5kIGl0IHdvdWxkIGFwcGVhciBhcyBhIGxpYWJpbGl0eSAoY3VycmVuY3kgaW4gICBjaXJjdWxhdGlvbikgb24gYSBjZW50cmFsIGJhbmsncyBiYWxhbmNlIHNoZWV0LiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIENCREMgaXMganVzdCBhIHdhbGxldCBvciBhbiBlbGVjdHJvbmljIHB1cnNlLCBpc3N1ZWQgYnkgYSBjZW50cmFsIGJhbmsuIFRoZXJlIGFyZSBtYW55ICAgc3VjaCB3YWxsZXRzIG9wZXJhdGluZyBpbiB0aGUgSW5kaWFuIGZpbmFuY2lhbCBzeXN0ZW0uIFRoZSBDQkRDIHdpbGwgYmUgb25lIG9mIHRoZW0sIGJ1dCB3aXRoIGEgZGlmZmVyZW5jZSAgIHRoYXQgaXQgd2lsbCBiZSBpc3N1ZWQgYnkgdGhlIG5hdGlvbidzIGNlbnRyYWwgYmFuay4gICBPcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBkaWdpdGFsIHJ1cGVlIGNvdWxkIGJlIGV4Y2hhbmdlZCBmb3IgY2FzaCBhbmQgd2lsbCBvcGVuIG5ldyBvcHBvcnR1bml0aWVzIGluICAgdGhlIGZpbnRlY2ggc2VjdG9yLiAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIE9wdGlvbiAzIGlzIGNvcnJlY3QuIENCREMgd2lsbCBiZSBiYXNlZCBvbiBibG9ja2NoYWluIHRlY2hub2xvZ3kgYW5kIGluIHRoZSBJbmRpYW4gY29udGV4dCwgaXQgd2lsbCBiZSAgIHJlZ3VsYXRlZCBieSB0aGUgUkJJLiAgIFNvdXJjZTogaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC9leHBsYWluZWQtd2hhdC1pcy10aGUtZGlnaXRhbC1ydXBlZS0gIGFubm91bmNlZC1ieS1zaXRoYXJhbWFuLWluLWJ1ZGdldC03NzUxMTA5LyAgIGh0dHBzOi8vd3d3Lm5ld3NjaWVudGlzdC5jb20vZGVmaW5pdGlvbi9iaXRjb2luLyAgICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL2NlbnRyYWwtYmFuay1kaWdpdGFsLWN1cnJlbmN5LWNiZGMtdGltZWxpbmUvICAgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vZGlnaXRhbC1ydXBlZS1hZHZhbnRhZ2VzLWFuZC1jaGFsbGVuZ2VzLyAgICBodHRwczovL3d3dy5pbnZlc3RvcGVkaWEuY29tIGVybXMvYy9jZW50cmFsLWJhbmstZGlnaXRhbC1jdXJyZW5jeS1jYmRjLmFzcCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 15,
      "question" : "For which of the following goods, the  price elasticity of demand is generally inelastic?  1. Essential medical procedures  2. Coffee  3. Petrol/diesel  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFByaWNlIGVsYXN0aWNpdHkgb2YgZGVtYW5kIGlzIGEgbWVhc3VyZSBvZiB0aGUgcmVzcG9uc2l2ZW5lc3Mgb2YgdGhlIGRlbWFuZCBmb3IgYSBnb29kIHRvIGNoYW5nZXMgaW4gaXRzICAgcHJpY2UuIFByaWNlIGVsYXN0aWNpdHkgb2YgZGVtYW5kIGZvciBhIGdvb2QgaXMgZGVmaW5lZCBhcyB0aGUgcGVyY2VudGFnZSBjaGFuZ2UgaW4gZGVtYW5kIGZvciB0aGUgZ29vZCAgIGRpdmlkZWQgYnkgdGhlIHBlcmNlbnRhZ2UgY2hhbmdlIGluIGl0cyBwcmljZS4gICBPcHRpb24gMSBpcyBjb3JyZWN0LiBFc3NlbnRpYWwgbWVkaWNhbCBwcm9jZWR1cmVzIGFuZCBkcnVncyBoYXZlIGluZWxhc3RpYyBkZW1hbmQuIFRoZSBwYXRpZW50IHdpbGwgcGF5ICAgd2hhdGV2ZXIgaGUgY2FuLiBJbiBnZW5lcmFsLCBwcm9kdWN0cyB0aGF0IHNpZ25pZmljYW50bHkgYWZmZWN0IGhlYWx0aCBhbmQgd2VsbC1iZWluZyBoYXZlIGluZWxhc3RpYyAgIGRlbWFuZC4gICBPcHRpb24gMiBpcyBpbmNvcnJlY3QuIFRoZSBwcmljZSBlbGFzdGljaXR5IG9mIGRlbWFuZCBmb3IgYSBnb29kIGRlcGVuZHMgb24gdGhlIG5hdHVyZSBvZiB0aGUgZ29vZCBhbmQgICB0aGUgYXZhaWxhYmlsaXR5IG9mIGNsb3NlIHN1YnN0aXR1dGVzIG9mIHRoZSBnb29kLiBDb2ZmZWUgaXMgZ2VuZXJhbGx5IHdpZGVseSBhdmFpbGFibGUgYXQgYSBsZXZlbCBvZiBxdWFsaXR5ICAgdGhhdCBtZWV0cyB0aGUgbmVlZHMgb2YgbW9zdCBidXllcnMuIEluIGFkZGl0aW9uLCB0ZWEgaXMgYXZhaWxhYmxlIGFzIGEgc3Vic3RpdHV0ZSBmb3IgY29mZmVlLiBUaGUgICBhdmFpbGFiaWxpdHkgb2Ygc3Vic3RpdHV0ZXMgYW5kIHRoZSBmYWN0IHRoYXQgdGhlIHByb2R1Y3QgaXMgc29sZCBieSBtYW55IGRpZmZlcmVudCBzdXBwbGllcnMgaW4gYSAgIGNvbXBldGl0aXZlIG1hcmtldCwgbWFrZSB0aGUgZGVtYW5kIG9mIGNvZmZlZSBoaWdobHkgZWxhc3RpYy4gICBPcHRpb24gMyBpcyBjb3JyZWN0LiBUaGUgZGVtYW5kIGZvciBwZXRyb2wvZGllc2VsIGdlbmVyYWxseSBpcyBmYWlybHkgaW5lbGFzdGljLCBlc3BlY2lhbGx5IGluIHRoZSBzaG9ydCAgIHJ1bi4gQ2FyIHRyYXZlbCByZXF1aXJlcyBwZXRyb2wgb3IgZGllc2VsIGFuZCB0aGUgc3Vic3RpdHV0ZXMgZm9yIGNhciB0cmF2ZWwgb2ZmZXIgbGVzcyBjb252ZW5pZW5jZSBhbmQgICBjb250cm9sLiBPbmx5IGluIHRoZSBsb25nIHJ1biwgbW9yZSBvcHRpb25zIGFyZSBhdmFpbGFibGUsIHN1Y2ggYXMgcHVyY2hhc2luZyBhIG1vcmUgZnVlbC1lZmZpY2llbnQgY2FyIG9yICAgY2hvb3NpbmcgYSBqb2IgdGhhdCBpcyBjbG9zZXIgdG8gd2hlcmUgeW91IHdvcmsuIFRoZXJlZm9yZSBwZXRyb2wvIGRpZXNlbCBpcyBtb3N0IGxpa2VseSBpbmVsYXN0aWMuICAgU291cmNlOiBNaWNyb2Vjb25vbWljcywgTkNFUlQgWEksIENoYXB0ZXItMiwgUGcuIDMxLCAzMiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3          "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements with  reference to Priority Sector Lending norms:  1.  It is mandatory to provide 10% of the total  net bank credit to agricultural advances.  2.  Small finance bank are exempted from  priority sector lending.  3.  Self Help Groups are considered as Weaker  Sections to avail of Priority sector loans.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQcmlvcml0eSBTZWN0b3IgTGVuZGluZyBtZWFucyB0aG9zZSBzZWN0b3JzIHdoaWNoIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGFuZCBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgICBjb25zaWRlciBhcyBpbXBvcnRhbnQgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgYmFzaWMgbmVlZHMgb2YgdGhlIGNvdW50cnkgYW5kIGFyZSB0byBiZSBnaXZlbiBwcmlvcml0eSAgIG92ZXIgb3RoZXIgc2VjdG9ycy4gVGhlIGJhbmtzIGFyZSBtYW5kYXRlZCB0byBlbmNvdXJhZ2UgdGhlIGdyb3d0aCBvZiBzdWNoIHNlY3RvcnMgd2l0aCBhZGVxdWF0ZSBhbmQgICB0aW1lbHkgY3JlZGl0LiAgIFRoZSBzZWN0b3JzIG1heSBiZSBhZ3JpY3VsdHVyZSBhbmQgYWxsaWVkIGFjdGl2aXRpZXMsIG1pY3JvIGFuZCBzbWFsbCBlbnRlcnByaXNlcywgcG9vciBwZW9wbGUgZm9yIGhvdXNpbmcsICAgc3R1ZGVudHMgZm9yIGVkdWNhdGlvbiBhbmQgb3RoZXIgbG93IGluY29tZSBncm91cHMgYW5kIHdlYWtlciBzZWN0aW9ucy4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFJCSSBndWlkZWxpbmVzIGZvciBQU0wgZm9yIHNjaGVkdWxlZCBjb21tZXJjaWFsIGJhbmtzOiAgIDQwJSBvZiB0aGUgdG90YWwgbmV0IGJhbmsgY3JlZGl0IHNob3VsZCBnbyB0byBhIHByaW9yaXR5IHNlY3RvciBhZHZhbmNlcy4gICAxKSAxMCUgb2YgdGhlIHByaW9yaXR5IHNlY3RvciBhZHZhbmNlcyBvciAxMCUgb2YgdGhlIHRvdGFsIG5ldCBiYW5rIGNyZWRpdCwgd2hpY2hldmVyIGlzIGhpZ2hlciBzaG91bGQgZ28gICB0byB3ZWFrZXIgc2VjdGlvbi4gICAyKSAxOCUgb2YgdGhlIHRvdGFsIG5ldCBiYW5rIGNyZWRpdCBzaG91bGQgZ28gdG8gYWdyaWN1bHR1cmFsIGFkdmFuY2VzLiBXaXRoaW4gdGhlIDE4IHBlcmNlbnQgdGFyZ2V0IGZvciAgIGFncmljdWx0dXJlLCBhIHRhcmdldCBvZiA4IHBlciBjZW50IG9mIEFkanVzdGVkIE5ldCBCYW5rIENyZWRpdCAoQU5CQykgb3IgQ3JlZGl0ICBFcXVpdmFsZW50IEFtb3VudCBvZiAgIE9mZi1CYWxhbmNlIFNoZWV0IEV4cG9zdXJlLCB3aGljaGV2ZXIgaXMgaGlnaGVyIGlzIHByZXNjcmliZWQgZm9yIFNtYWxsIGFuZCBNYXJnaW5hbCBGYXJtZXJzLCB0byBiZSAgIGFjaGlldmVkIGluIGEgcGhhc2VkIG1hbm5lci4gICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAzKSA3LjUlIG9mIEFOQkMgb3IgQ3JlZGl0IEVxdWl2YWxlbnQgQW1vdW50IG9mIE9mZi1CYWxhbmNlIFNoZWV0IEV4cG9zdXJlLCB3aGljaGV2ZXIgaXMgaGlnaGVyIHNob3VsZCAgIGdvIHRvIE1pY3JvIGVudGVycHJpc2VzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gU21hbGwgZmluYW5jZSBiYW5rcyBuZWVkcyB0byBwcm92aWRlIDc1IHBlciBjZW50IG9mIEFkanVzdGVkIE5ldCBCYW5rIENyZWRpdCAgIChBTkJDKSBvciBDcmVkaXQgRXF1aXZhbGVudCBvZiBPZmYtQmFsYW5jZSBTaGVldCBFeHBvc3VyZXMgKENFT0JFKSB3aGljaGV2ZXIgaXMgaGlnaGVyIHRvIFBTTCAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEFzIHBlciB0aGUgUkJJIGNpcmN1bGFyIHJlbGVhc2VkIGluIDIwMTYsIHRoZXJlIGFyZSBlaWdodCBicm9hZCBjYXRlZ29yaWVzIG9mIHRoZSAgIFByaW9yaXR5IFNlY3RvciBMZW5kaW5nLiBUaGV5IGFyZTogKDEpIEFncmljdWx0dXJlICgyKSBNaWNybywgU21hbGwgYW5kIE1lZGl1bSBFbnRlcnByaXNlcyAoMykgRXhwb3J0ICAgQ3JlZGl0ICg0KSBFZHVjYXRpb24gKDUpIEhvdXNpbmcgKDYpIFNvY2lhbCBJbmZyYXN0cnVjdHVyZSAoNykgUmVuZXdhYmxlIEVuZXJneSAoOCkgT3RoZXJzLiAgIFRoZSBvdGhlcnMgY2F0ZWdvcnkgaW5jbHVkZXMgcGVyc29uYWwgbG9hbnMgdG8gd2Vha2VyIHNlY3Rpb24sIGxvYW5zIHRvIGRpc3RyZXNzZWQgcGVyc29ucywgbG9hbnMgdG8gc3RhdGUgICBzcG9uc29yZWQgb3JnYW5pc2F0aW9ucyBmb3IgU0MvU1QuICAgU2VsZiBIZWxwIEdyb3VwcyBhcmUgY29uc2lkZXJlZCBhcyBXZWFrZXIgU2VjdGlvbnMgdG8gYXZhaWwgUHJpb3JpdHkgc2VjdG9yIGxvYW5zLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbS9hcnRpY2xlcy9pbnZlc3RpbmcvMTEyNzE0L3JlZ3VsYXRpb25zLWdvdmVybi1iYW5raW5nLSAgaW5kaWEuYXNwIzp+OnRleHQ9dGFyZ2V0JTIwb2YlMjAzMiUyNSUyMGV4aXN0cyUyMGZvciUyMGZvcmVpZ24lMjBiYW5rcyUyMHdpdGglMjBsZXNzJTIwdGhhICBuJTIwMjAlMjBicmFuY2hlcy4gICBodHRwczovL3d3dy5yYmkub3JnLmluL3NjcmlwdHMvRkFRVmlldy5hc3B4P0lkPTg3Izp+OnRleHQ9U01GJTIwaW5jbHVkZXMlMjBpbmRpdmlkdWFscyUyQy0gICxTSEdzJTJDLC1KTEdzJTJDJTIwRmFybWVycyVFMiU4MCU5OSUyMFByb2R1Y2VyICAgaHR0cHM6Ly92aWthc3BlZGlhLmluL2FncmljdWx0dXJlL2FncmktY3JlZGl0L2NyZWRpdC1pbnN0aXR1dGlvbnMvcHJpb3JpdHktc2VjdG9yLSAgbGVuZGluZyM6fjp0ZXh0PUFncmljdWx0dXJlLSwxOCUyMHBlciUyMGNlbnQlMjBvZiUyMEFOQkMsLW9yJTIwQ3JlZGl0JTIwRXF1aXZhbGVudCAgIGh0dHBzOi8vd3d3Lm5hYmFyZC5vcmcvbmV3cy0gIGFydGljbGUuYXNweD9pZD0yNSZjaWQ9NTUyJk5JRD0xNjAjOn46dGV4dD1yZXF1aXJlZCUyMHRvJTIwbGVuZCUyMDE4JTI1ICAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1YnVzaW5lc3NsaW5lLmNvbS9tb25leS1hbmQtYmFua2luZy9yYmktcmV2aXNlcy1wcmlvcml0eS1zZWN0b3ItbGVuZGluZy0gIG5vcm1zLXRvLWFkZHJlc3MtcmVnaW9uYWwtZGlzcGFyaXRpZXMtaW4tY3JlZGl0LWZsb3cvYXJ0aWNsZTMyNTIyMjY2LmVjZSAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "3 only  ",
        "option3" : "1, 2 and 3   ",
        "option4" : "None   "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements with  reference to the debt instruments used in India:  1.  Treasury bills are short-term securities  issued by the Government of India treasury.   2.  Cash Management Bills are long-term debt  instruments to finance the economic sector.  3.  Unlike cash management bills, treasury bills  are issued at a discount price.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRyZWFzdXJ5IGJpbGxzIGFyZSBzZWN1cml0aWVzIGlzc3VlZCBieSB0aGUgR292ZXJubWVudCB0cmVhc3VyeS4gVGhleSBhcmUgb2YgICBzaG9ydCB0ZXJtIGluIG5hdHVyZS4gSW4gdGhpcyByZWdhcmQsIHRoZXkgZGlmZmVyIGZyb20gbWFya2V0IGxvYW5zLiBNYXJrZXQgbG9hbnMgYXJlIGxvbmcgdGVybSBpbiBuYXR1cmUuICAgVGhleSBhcmUgbm9uLWludGVyZXN0IGJlYXJpbmcgKHplcm8gaW50ZXJlc3QvIHplcm8gY291cG9ucykuIFRoZXNlIGtpbmRzIG9mIGJvbmRzIGFyZSBjYWxsZWQgWmVybyAgIGNvdXBvbiBib25kcy4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBDYXNoIE1hbmFnZW1lbnQgQmlsbHMgKENNQnMpIGFyZSBzaG9ydCB0ZXJtIGRlYnQgaW5zdHJ1bWVudHMgKGFuZCBub3QgICBsb25nIHRlcm0pIGlzc3VlZCB0byBtZWV0IHRoZSB0ZW1wb3JhcnkgbWlzbWF0Y2hlcyBpbiB0aGUgY2FzaCBmbG93IG9mIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhLiBUaGUgICBDTUJzIGhhdmUgdGhlIGdlbmVyaWMgY2hhcmFjdGVyIG9mIFQtYmlsbHMgYnV0IGFyZSBpc3N1ZWQgZm9yIG1hdHVyaXRpZXMgbGVzcyB0aGFuIDkxIGRheXMuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogTGlrZSBUcmVhc3VyeSBiaWxscyBjYXNoIG1hbmFnZW1lbnQgYmlsbHMgYXJlIHplcm8gY291cG9uIGJvbmRzIGlzc3VlZCBhdCBhICAgZGlzY291bnQuIEluIDIwMTAsIEdvdmVybm1lbnQgb2YgSW5kaWEsIGluIGNvbnN1bHRhdGlvbiB3aXRoIFJCSSBpbnRyb2R1Y2VkIGl0LiBUcmVhc3VyeSBiaWxscyBhcmUgaXNzdWVkICAgYXQgYSBkaXNjb3VudCByYXRlLiBGb3IgZXhhbXBsZSwgYSBzZWN1cml0eSB3b3J0aCBvZiAxMDAwIG1heSBiZSBpc3N1ZWQgYWdhaW5zdCByZWNlaXB0IG9mIGFtb3VudCBsb3dlciAgIHRoYW4gMTAwMC4gVGhlIHB1cmNoYXNlciBvZiBzZWN1cml0eSBjYW4gcmVkZWVtIHRoZSBmdWxsIDEsMDAwIGF0IGEgcGFydGljdWxhciBkYXRlIChtYXR1cml0eSBkYXRlKS4gVGhpcyBpcyAgIGNhbGxlZCByZWRlbXB0aW9uIGF0IHBhci4gICBLbm93bGVkZ2UgQmFzZTogVGhlcmUgd2VyZSB0d28gdHlwZXMgb2YgVHJlYXN1cnkgQmlsbHM6ICAgQWQgaG9jIFRyZWFzdXJ5IEJpbGxzOiBJdCB3YXMgaXNzdWVkIGZvciBhIHBhcnRpY3VsYXIgZW5kIG9yIGNhc2UgaW4gaGFuZC4gVGlsbCAxOTkxLTkyLCB0aGVyZSB3YXMgb25seSAgIFRyZWFzdXJ5IGJpbGwgb2YgOTEgZGF5cy4gSXQgd2FzIGNhbGxlZCBhcyBhZC1ob2MgVHJlYXN1cnkgYmlsbC4gSXQgd2FzIGRpc2NvbnRpbnVlZCBmcm9tIDE5OTctOTguIFRvICAgcmVwbGFjZSBpdCB3YXlzIGFuZCBtZWFucyBhZHZhbmNlIHdhcyBpbnRyb2R1Y2VkLiAgIFJlZ3VsYXIgVHJlYXN1cnkgQmlsbHM6IFRoZXNlIGJpbGxzIGFyZSBpc3N1ZWQgcmVndWxhcmx5IHRvIG1lZXQgYnVkZ2V0YXJ5IGV4cGVuZGl0dXJlLiBUaGVyZSBhcmUgYSAgIG51bWJlciBvZiBUcmVhc3VyeSBiaWxscyB3aXRoIGRpZmZlcmluZyBtYXR1cml0eS4gSW4gMTk5OC05OSwgMTgyIGRheXMgVHJlYXN1cnkgYmlsbHMgd2VyZSBpbnRyb2R1Y2VkLiBCdXQgICBpdCB3YXMgcmVwbGFjZWQgYnkgMzY0IGRheXMgVHJlYXN1cnkgYmlsbHMuIEFnYWluIDE4MiBkYXlzIHRyZWFzdXJ5IGJpbGxzIHdlcmUgcmVpbnRyb2R1Y2VkLiBUaGUgMTQtZGF5ICAgVHJlYXN1cnkgYmlsbHMgd2VyZSBpbnRyb2R1Y2VkIGluIDE5OTktMjAwMC4gICBTb3VyY2U6ICBJbmRpYW4gRWNvbm9teSBLZXkgQ29uY2VwdHMgYnkgU2Fua2FyZ2FuZXNoIEthcnVwcGlhaC4gQ2hhcHRlciBuYW1lLSBJbmRpYW4gZmluYW5jaWFsICAgc3lzdGVtIC0gbW9uZXkgbWFya2V0IGFuZCBwdWJsaWMgZmluYW5jZSBQYWdlIG5vLSAyMDggYW5kIDEyMS4gICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to the capital market,  consider the following statements:  1. Hedge fund is a pool of money that takes  both short and long positions in the equity  market.  2.  An exchange-traded fund is a type of pooled  investment security that can be purchased  or sold on a stock exchange.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEhlZGdlIGZ1bmQgaXMgYSBwcml2YXRlIGludmVzdG1lbnQgcGFydG5lcnNoaXAgYW5kIGZ1bmRzIHBvb2wgdGhhdCB1c2VzIHZhcmllZCAgIGFuZCBjb21wbGV4IHByb3ByaWV0YXJ5IHN0cmF0ZWdpZXMgYW5kIGludmVzdHMgb3IgdHJhZGVzIGluIGNvbXBsZXggcHJvZHVjdHMsIGluY2x1ZGluZyBsaXN0ZWQgYW5kICAgdW5saXN0ZWQgZGVyaXZhdGl2ZXMuICAgMSkgQSBoZWRnZSBmdW5kIGlzIGEgcG9vbCBvZiBtb25leSB0aGF0IHRha2VzIGJvdGggc2hvcnQgYW5kIGxvbmcgcG9zaXRpb25zLCBidXlzIGFuZCBzZWxscyBlcXVpdGllcywgICBpbml0aWF0ZXMgYXJiaXRyYWdlLCBhbmQgdHJhZGVzIGJvbmRzLCBjdXJyZW5jaWVzLCBjb252ZXJ0aWJsZSBzZWN1cml0aWVzLCBjb21tb2RpdGllcyBhbmQgZGVyaXZhdGl2ZSAgIHByb2R1Y3RzIHRvIGdlbmVyYXRlIHJldHVybnMgYXQgcmVkdWNlZCByaXNrLiBBcyB0aGUgbmFtZSBzdWdnZXN0cywgdGhlIGZ1bmQgdHJpZXMgdG8gaGVkZ2Ugcmlza3MgdG8gICBpbnZlc3RvcidzIGNhcGl0YWwgYWdhaW5zdCBtYXJrZXQgdm9sYXRpbGl0eSBieSBlbXBsb3lpbmcgYWx0ZXJuYXRpdmUgaW52ZXN0bWVudCBhcHByb2FjaGVzLiAgIDIpIEhlZGdlIGZ1bmQgaW52ZXN0b3JzIHR5cGljYWxseSBpbmNsdWRlIGhpZ2ggbmV0IHdvcnRoIGluZGl2aWR1YWxzIChITklzKSBhbmQgZmFtaWxpZXMsIGVuZG93bWVudHMgICBhbmQgcGVuc2lvbiBmdW5kcywgaW5zdXJhbmNlIGNvbXBhbmllcywgYW5kIGJhbmtzLiBUaGVzZSBmdW5kcyB3b3JrIGVpdGhlciBhcyBwcml2YXRlIGludmVzdG1lbnQgICBwYXJ0bmVyc2hpcHMgb3Igb2Zmc2hvcmUgaW52ZXN0bWVudCBjb3Jwb3JhdGlvbnMuIFRoZXkgYXJlIG5vdCByZXF1aXJlZCB0byBiZSByZWdpc3RlcmVkIHdpdGggdGhlICAgc2VjdXJpdGllcyBtYXJrZXRzIHJlZ3VsYXRvciBhbmQgYXJlIG5vdCBzdWJqZWN0IHRvIHRoZSByZXBvcnRpbmcgcmVxdWlyZW1lbnRzLCBpbmNsdWRpbmcgcGVyaW9kaWMgICBkaXNjbG9zdXJlIG9mIE5BVnMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQW4gZXhjaGFuZ2UtdHJhZGVkIGZ1bmQgKEVURikgaXMgYSB0eXBlIG9mIHBvb2xlZCBpbnZlc3RtZW50IHNlY3VyaXR5IHRoYXQgICBvcGVyYXRlcyBtdWNoIGxpa2UgYSBtdXR1YWwgZnVuZC4gVHlwaWNhbGx5LCBFVEZzIHdpbGwgdHJhY2sgYSBwYXJ0aWN1bGFyIGluZGV4LCBzZWN0b3IsIGNvbW1vZGl0eSwgb3IgICBvdGhlciBhc3NldCwgYnV0IHVubGlrZSBtdXR1YWwgZnVuZHMsIEVURnMgY2FuIGJlIHB1cmNoYXNlZCBvciBzb2xkIG9uIGEgc3RvY2sgZXhjaGFuZ2UgdGhlIHNhbWUgd2F5ICAgdGhhdCBhIHJlZ3VsYXIgc3RvY2sgY2FuLiBBbiBFVEYgY2FuIGJlIHN0cnVjdHVyZWQgdG8gdHJhY2sgYW55dGhpbmcgZnJvbSB0aGUgcHJpY2Ugb2YgYW4gaW5kaXZpZHVhbCAgIGNvbW1vZGl0eSB0byBhIGxhcmdlIGFuZCBkaXZlcnNlIGNvbGxlY3Rpb24gb2Ygc2VjdXJpdGllcy4gRVRGcyBjYW4gZXZlbiBiZSBzdHJ1Y3R1cmVkIHRvIHRyYWNrIHNwZWNpZmljICAgaW52ZXN0bWVudCBzdHJhdGVnaWVzLiAgIFNvdXJjZTogIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9kZWZpbml0aW9uL2hlZGdlLWZ1bmQgICBodHRwczovL3d3dy5zZWMuZ292L2ludmVzdG9yIG9vbHMvbWZjYy9tdXR1YWwtZnVuZC0gIGhlbHAuaHRtIzp+OnRleHQ9QSUyMG11dHVhbCUyMGZ1bmQlMjBpcyUyMGEsYSUyMHBhcnQlMjBvZiUyMHRoZXNlJTIwaG9sZGluZ3MuICAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbSBlcm1zL2UvZXRmLmFzcCM6fjp0ZXh0PUFuJTIwZXhjaGFuZ2UlMkR0cmFkZWQlMjBmdW5kJTIwKEVURikgICUyMGlzJTIwYSUyMHR5cGUlMjBvZix0aGF0JTIwYSUyMHJlZ3VsYXIlMjBzdG9jayUyMGNhbi4gICBJbmRpYW4gRWNvbm9teSBLZXkgQ29uY2VwdHMgYnkgU2Fua2FyZ2FuZXNoIEthcnVwcGlhaC4gQ2hhcHRlciBuYW1lLSBJbmRpYW4gZmluYW5jaWFsIHN5c3RlbSAtICAgQ2FwaXRhbCBtYXJrZXQuIFBhZ2Ugbm8tMjQyIGFuZCAyNDMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "both 1 and 2   ",
        "option4" : "neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 19,
      "question" : "Which of the following pairs are correctly  matched?  List I  Terms   List II  Description   1. Securitization It is the method of  converting existing assets  into securities.  2. Cumulative  shares  Shares that are entitled to  receive dividends of a  particular year in the  coming years.  3. Buy back  The investor buys the  securities without owning  the securities.  4. Short selling  It refers to the issuer buying  the securities again to  accumulate shares in his  hands.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0OiBTZWN1cml0aXNhdGlvbiBpcyB0aGUgbWV0aG9kIG9mIGNvbnZlcnRpbmcgZXhpc3RpbmcgYXNzZXRzIGludG8gc2VjdXJpdGllcy4gRm9yIGV4YW1wbGUsICAgaW4gY2FzZSBvZiBiYW5rcywgdGhlaXIgdW5yZWNvdmVyZWQgbG9hbnMgYXJlIGNvbnNpZGVyZWQgYXMgbm9uLXBlcmZvcm1pbmcgYXNzZXRzIChOUEEpLiBUaGVzZSBhc3NldHMgICBhcmUgc29sZCB0byBBc3NldCBSZWNvbnN0cnVjdGlvbiBDb21wYW5pZXMgKEFSQ3MpLiBUaGUgYXNzZXQgcmVjb25zdHJ1Y3Rpb24gY29tcGFueSBkaXZpZGVzIHRoZSB0b3RhbCAgIGFzc2V0cyBpbnRvIGVxdWFsIHBhcnRzIGFuZCBzZWxscyB0byBpbnZlc3RvcnMuIFRoZSBpbnZlc3RvcnMgYXJlIGVudGl0bGVkIHRvIGZsb3cgb2YgaW50ZXJlc3QgaW5jb21lIGZyb20gICB0aGVzZSBhc3NldHMgYW5kIHByaW5jaXBhbCBhbW91bnQgd2hlbiByZXBhaWQuICAgUGFpciAyIGlzIGNvcnJlY3Q6IEN1bXVsYXRpdmUgU2hhcmVzIGFyZSBzaGFyZXMgdGhhdCBhcmUgZW50aXRsZWQgdG8gcmVjZWl2ZSBkaXZpZGVuZHMgb2YgYSBwYXJ0aWN1bGFyIHllYXIgICBpbiB0aGUgY29taW5nIHllYXJzLCBpbmNsdWRpbmcgdGhvc2UgdGhhdCB3ZXJlIG1pc3NlZCBwcmV2aW91c2x5LCBhcyBhcnJlYXIgaWYgdGhlIGNvbXBhbnkgaGFkIG5vdCBnaXZlbiAgIGRpdmlkZW5kIGluIHRoYXQgcGFydGljdWxhciB5ZWFyLiBOb24tIGN1bXVsYXRpdmUgc2hhcmVzIGRvbid0IGhhdmUgdGhhdCByaWdodC4gICBQYWlyIDMgaXMgaW5jb3JyZWN0LiBBIGJ1eWJhY2ssIGFsc28ga25vd24gYXMgYSBzaGFyZSByZXB1cmNoYXNlLCBpcyB3aGVuIGEgY29tcGFueSBidXlzIGl0cyBvd24gICBvdXRzdGFuZGluZyBzaGFyZXMgdG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2hhcmVzIGF2YWlsYWJsZSBvbiB0aGUgb3BlbiBtYXJrZXQuICAgUGFpciA0IGlzIGluY29ycmVjdDogSW4gc2hvcnQgc2VsbGluZywgdGhlIHNlbGxlciBzZWxscyB0aGUgc2VjdXJpdGllcyB3aXRob3V0IG93bmluZyB0aGUgc2VjdXJpdGllcy4gSXQgICBpbnZvbHZlcyBib3Jyb3dpbmcgYSBzZWN1cml0eSBhbmQgc2VsbGluZyBpdCBvbiB0aGUgb3BlbiBtYXJrZXQuICAgU291cmNlOiAgSW5kaWFuIEVjb25vbXkgS2V5IENvbmNlcHRzIGJ5IFNhbmthcmdhbmVzaCBLYXJ1cHBpYWguIENoYXB0ZXIgbmFtZS0gSW5kaWFuIGZpbmFuY2lhbCAgIHN5c3RlbSAtIENhcGl0YWwgbWFya2V0LiBQYWdlIG5vLTI0MCBhbmQgMjQxLiAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "3 and 4 only   "
      }
    },
    {
      "index" : 20,
      "question" : "With reference to the foreign  investments, consider the following  statements:  1.  Foreign direct investment (FDI) is when a  company in another country takes  controlling ownership of a business entity  without involving in its day-to-day  operations.   2.  Foreign Portfolio Investment (FPI) refers to  investment in various financial instruments  like shares, and debentures of a company  through a secondary market.  3. Both FDI and FPI can easily liquidate their  assets and depart from a nation.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogRm9yZWlnbiBkaXJlY3QgaW52ZXN0bWVudCAoRkRJKSBpcyB3aGVuIGEgY29tcGFueSB0YWtlcyBjb250cm9sbGluZyBvd25lcnNoaXAgICBpbiBhIGJ1c2luZXNzIGVudGl0eSBpbiBhbm90aGVyIGNvdW50cnkuIFdpdGggRkRJLCBmb3JlaWduIGNvbXBhbmllcyBhcmUgZGlyZWN0bHkgaW52b2x2ZWQgd2l0aCBkYXktdG8tICBkYXkgb3BlcmF0aW9ucyBpbiB0aGUgb3RoZXIgY291bnRyeS4gVGhpcyBtZWFucyB0aGV5IGFyZW4ndCBqdXN0IGJyaW5naW5nIG1vbmV5IHdpdGggdGhlbSwgYnV0IGFsc28gICBrbm93bGVkZ2UsIHNraWxscyBhbmQgdGVjaG5vbG9neS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBJbnZlc3RtZW50IHRocm91Z2ggc3RvY2sgZXhjaGFuZ2UgdGhhdCBpcyB0aHJvdWdoIHNlY29uZGFyeSBtYXJrZXQgaXMgY2FsbGVkICAgcG9ydGZvbGlvIGludmVzdG1lbnQuIEZvcmVpZ24gUG9ydGZvbGlvIGludmVzdG1lbnQgcmVmZXJzIHRvIGludmVzdG1lbnQgaW4gdmFyaW91cyBmaW5hbmNpYWwgICBpbnN0cnVtZW50cyBsaWtlIHNoYXJlcywgZGViZW50dXJlcyBvZiBhIGNvbXBhbnkgdGhyb3VnaCBzZWNvbmRhcnkgbWFya2V0LiBUaGVyZSBhcmUgdGhyZWUgbWFqb3IgICB0eXBlcyBvZiBwb3J0Zm9saW8gaW52ZXN0bWVudC4gVGhleSBhcmU6ICAgMSkgRm9yZWlnbiBJbnN0aXR1dGlvbmFsIEludmVzdG1lbnQgKEZJSSkgICAyKSBEZXBvc2l0b3J5IFJlY2VpcHRzICAgMykgT2Zmc2hvcmUgRnVuZHMgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEZESSBpbnZlc3RvcnMgY2Fubm90IGVhc2lseSBsaXF1aWRhdGUgdGhlaXIgYXNzZXRzIGFuZCBkZXBhcnQgZnJvbSBhIG5hdGlvbiwgICBzaW5jZSBzdWNoIGFzc2V0cyBtYXkgYmUgdmVyeSBsYXJnZSBhbmQgcXVpdGUgaWxsaXF1aWQuIE9uIHRoZSBvdGhlciBoYW5kLCBGUEkgaW52ZXN0b3JzIGNhbiBleGl0IGEgbmF0aW9uICAgbGl0ZXJhbGx5IHdpdGggYSBmZXcgbW91c2UgY2xpY2tzLCBhcyBmaW5hbmNpYWwgYXNzZXRzIGFyZSBoaWdobHkgbGlxdWlkIGFuZCB3aWRlbHkgdHJhZGVkLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3Mtc3RhbmRhcmQuY29tL2Fib3V0L3doYXQtaXMtICBmZGkjOn46dGV4dD1Gb3JlaWduJTIwZGlyZWN0JTIwaW52ZXN0bWVudCUyMChGREkpJTIwaXMsYWxzbyUyMGtub3dsZWRnZSUyQyUyMHNraWxscyUyMGFuZCUyICAwdGVjaG5vbG9neS4gICBJbmRpYW4gRWNvbm9teSBLZXkgQ29uY2VwdHMgYnkgU2Fua2FyZ2FuZXNoIEthcnVwcGlhaC4gQ2hhcHRlciBuYW1lLSBFeHRlcm5hbCB0cmFkZSBhbmQgY2FwaXRhbCAgIFBhZ2Ugbm8tMjg4IGFuZCAyODkuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3        "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to Participatory notes (P- notes), consider the following statements:  1.  They are issued by registered foreign  portfolio investors (FPIs) to overseas  investors.  2.  Investments flowing through P-notes are  considered as offshore derivative  investments (ODIs).  3. The investors in P-Notes derive the  economic benefits of investing in the  security without actually holding it.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBQLW5vdGVzIGFyZSBpc3N1ZWQgYnkgcmVnaXN0ZXJlZCBmb3JlaWduIHBvcnRmb2xpbyBpbnZlc3RvcnMgKEZQSXMpLCB0byBvdmVyc2VhcyAgIGludmVzdG9ycyB3aG8gd2lzaCB0byBiZSBwYXJ0IG9mIHRoZSBJbmRpYW4gc3RvY2sgbWFya2V0IHdpdGhvdXQgcmVnaXN0ZXJpbmcgdGhlbXNlbHZlcyBkaXJlY3RseS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW52ZXN0bWVudHMgZmxvd2luZyB0aHJvdWdoIFAtbm90ZXMgYXJlIGNvbnNpZGVyZWQgYXMgb2Zmc2hvcmUgZGVyaXZhdGl2ZSAgIGludmVzdG1lbnRzIChPRElzKS4gSW5kaWFuIHNlY3VyaXRpZXMgbWFya2V0IHJlZ3VsYXRvciwgU0VCSSBpc3N1ZWQgdGhlIG5ldyBSZWd1bGF0aW9ucyBmb3IgRm9yZWlnbiAgIFBvcnRmb2xpbyBJbnZlc3RvcnMsIHBhcnRpY2lwYXRvcnkgbm90ZXMgd2hlcmUgaXQgZ290IGZvcm1hbGx5IGRlZmluZWQgdW5kZXIgdGhlIHRhZyAiT2Zmc2hvcmUgRGVyaXZhdGl2ZSAgIEluc3RydW1lbnQiIChPRElzKSBpbiBTZWN0aW9uIDIoMSkoaikgb2YgdGhlIHNhaWQgcmVndWxhdGlvbi4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgUC1ub3RlcyBob2xkZXIgZG9lcyBub3QgZW5qb3kgYW55IHZvdGluZyByaWdodHMgaW4gcmVsYXRpb24gdG8gICBzZWN1cml0eS9zaGFyZXMgcmVmZXJlbmNlZC4gQWxzbywgdGhlIGludmVzdG9yIGluIFAtbm90ZXMgZG9lcyBub3Qgb3duIHRoZSB1bmRlcmx5aW5nIEluZGlhbiBzZWN1cml0eSwgICB3aGljaCBpcyBoZWxkIGJ5IHRoZSBGSUkgd2hvIGlzc3VlcyB0aGUgUGFydGljaXBhdG9yeSBOb3Rlcy4gVGh1cywgdGhlIGludmVzdG9ycyBpbiBQYXJ0aWNpcGF0b3J5IE5vdGVzICAgZGVyaXZlIHRoZSBlY29ub21pYyBiZW5lZml0cyBvZiBpbnZlc3RpbmcgaW4gdGhlIHNlY3VyaXR5IHdpdGhvdXQgYWN0dWFsbHkgaG9sZGluZyBpdC4gICAgU291cmNlOiBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vbWFya2V0cy9zdG9ja3MvbmV3cy9wLW5vdGVzLWludmVzdG1lbnQtY2xpbWJzLXRvLSAgMzMtbW9udGgtaGlnaC1hdC1ycy05MTY1OC1jcm9yZS1pbi1mZWIvYXJ0aWNsZXNob3cvODE1ODYyNzMuY21zP2Zyb209bWRyICAgIGh0dHA6Ly93d3cuYXJ0aGFwZWRpYS5pbi9pbmRleC5waHA/dGl0bGU9UGFydGljaXBhdG9yeV9Ob3Rlc18oUE5zKSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements:  1.  For inferior goods demand increases with a  decrease in consumer's income  2.  Giffen goods are those goods for which  demand decreases with an increase in price  3.  If demand increases with an increase in  price, then it is Veblen goods  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFuIGluZmVyaW9yIGdvb2QgaXMgb25lIHdob3NlIGRlbWFuZCBkcm9wcyB3aGVuIHBlb3BsZSdzIGluY29tZXMgcmlzZS4gICAgVGhlIGRlbWFuZHMgZm9yIGluZmVyaW9yIGdvb2RzIG1vdmUgaW4gdGhlIG9wcG9zaXRlIGRpcmVjdGlvbiBvZiB0aGUgaW5jb21lIG9mIHRoZSBjb25zdW1lci4gICBFeGFtcGxlcyBvZiBpbmZlcmlvciBnb29kcyBpbmNsdWRlIGxvdyBxdWFsaXR5IGZvb2QgaXRlbXMgbGlrZSBjb2Fyc2UgY2VyZWFscy4gQXMgdGhlIGluY29tZSBvZiB0aGUgICBjb25zdW1lciBpbmNyZWFzZXMsIHRoZSBkZW1hbmQgZm9yIGFuIGluZmVyaW9yIGdvb2QgZmFsbCwgYW5kIGFzIHRoZSBpbmNvbWUgZGVjcmVhc2VzLCB0aGUgZGVtYW5kIGZvciAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIGFuIGluZmVyaW9yIGdvb2QgcmlzZS4gVGhpcyBpcyBiZWNhdXNlIHdoZW4gdGhlIGluY29tZSBvZiB0aGUgY29uc3VtZXIgaW5jcmVhc2VzLCBoZSB3aWxsIHN1YnN0aXR1dGUgICB0aGVzZSBnb29kcyB3aXRoIHN1cGVyaW9yIGdvb2RzIGxpa2Ugd2hlYXQgYW5kIHJpY2UuIEhvd2V2ZXIsIGlmIHRoZSBpbmNvbWUgb2YgdGhlIGNvbnN1bWVyIGRlY2xpbmVzLCBoZSAgIHdpbGwgc3BlbmQgc3Vic3RhbnRpYWwgcGFydCBvZiBoaXMgaW5jb21lIG9uIHRoaXMgZ29vZC4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEEgR2lmZmVuIGdvb2QgaXMgYSBsb3cgaW5jb21lLCBub24tbHV4dXJ5IHByb2R1Y3QgdGhhdCBkZWZpZXMgc3RhbmRhcmQgICBlY29ub21pYyBhbmQgY29uc3VtZXIgZGVtYW5kIHRoZW9yeS4gRGVtYW5kIGZvciBHaWZmZW4gZ29vZHMgcmlzZXMgd2hlbiB0aGUgcHJpY2UgcmlzZXMgYW5kIGZhbGxzICAgd2hlbiB0aGUgcHJpY2UgZmFsbHMuIEluIGVjb25vbWV0cmljcywgdGhpcyByZXN1bHRzIGluIGFuIHVwd2FyZC1zbG9waW5nIGRlbWFuZCBjdXJ2ZSwgY29udHJhcnkgdG8gdGhlICAgZnVuZGFtZW50YWwgbGF3cyBvZiBkZW1hbmQgd2hpY2ggY3JlYXRlIGEgZG93bndhcmQgc2xvcGluZyBkZW1hbmQgY3VydmUuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQSBWZWJsZW4gZ29vZCBpcyBhIGdvb2QgZm9yIHdoaWNoIGRlbWFuZCBpbmNyZWFzZXMgYXMgdGhlIHByaWNlIGluY3JlYXNlcy4gICBWZWJsZW4gZ29vZHMgYXJlIHR5cGljYWxseSBoaWdoLXF1YWxpdHkgZ29vZHMgdGhhdCBhcmUgbWFkZSB3ZWxsLCBhcmUgZXhjbHVzaXZlLCBhbmQgYXJlIGEgc3RhdHVzIHN5bWJvbC4gICBFeGFtcGxlcyBvZiBWZWJsZW4gZ29vZHMgaW5jbHVkZSBkZXNpZ25lciBqZXdlbGxlcnksIHlhY2h0cywgYW5kIGx1eHVyeSBjYXJzLiAgIFNvdXJjZTogTWljcm9lY29ub21pY3MsIE5DRVJUIFhJLCBDaGFwdGVyLTIsIFBnLiAyNCAgIGh0dHBzOi8vd3d3LmludmVzdG9wZWRpYS5jb20gZXJtcy9nL2dpZmZlbi1nb29kLmFzcCAgIGh0dHBzOi8vd3d3LmludmVzdG9wZWRpYS5jb20gZXJtcy92L3ZlYmxlbi1nb29kLmFzcCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 23,
      "question" : "In the context of RBI's Repo operations,  consider the following statements:   1.  For Repo transactions, the Reserve Bank of  India accepts Oil bonds issued by  government as collateral.  2.  A cut in the repo rate will prove beneficial to  depositors and debt mutual fund investors.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFJlcG9zIGFuZCBSZXZlcnNlIFJlcG9zIGNhbiBiZSB1bmRlcnRha2VuIGluIGFsbCBTTFItZWxpZ2libGUgdHJhbnNmZXJhYmxlICAgR292ZXJubWVudCBvZiBJbmRpYSBkYXRlZCBTZWN1cml0aWVzL1RyZWFzdXJ5IEJpbGxzIGFzIGNvbGxhdGVyYWwuIE9pbCBib25kcyBpc3N1ZWQgYnkgdGhlIGdvdmVybm1lbnQgICBhbHNvIHF1YWxpZnkgYXMgZWxpZ2libGUgc2VjdXJpdGllcyBmb3IgcmVwb3MsIHJldmVyc2UgcmVwb3MgYW5kIE1hcmdpbmFsIFN0YW5kaW5nIEZhY2lsaXR5IChNU0YpLiAgIFJlcG8gaXMgYSBtb25leSBtYXJrZXQgaW5zdHJ1bWVudCwgd2hpY2ggZW5hYmxlcyBjb2xsYXRlcmFsaXNlZCBzaG9ydC10ZXJtIGJvcnJvd2luZyBhbmQgbGVuZGluZyAgIHRocm91Z2ggc2FsZS9wdXJjaGFzZSBvcGVyYXRpb25zIGluIGRlYnQgaW5zdHJ1bWVudHMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQSBjdXQgaW4gdGhlIHJlcG8gcmF0ZSBjYW4gbGVhZCB0byB0aGUgYmFua3MgYnJpbmdpbmcgZG93biB0aGVpciBsZW5kaW5nIHJhdGUuICAgVGhpcyBjYW4gcHJvdmUgdG8gYmUgYmVuZWZpY2lhbCBmb3IgcmV0YWlsIGxvYW4gYm9ycm93ZXJzIGJ5IGJyaW5naW5nIGRvd24gdGhlIGxvYW4gRU1Jcy4gRGVwb3NpdG9ycyB3aWxsICAgc3VmZmVyIGR1ZSB0byBkZWNsaW5lIGluIGludGVyZXN0IHJhdGUgYW5kIHNvIHdpbGwgZGVidCBtdXR1YWwgZnVuZCBpbnZlc3RvcnMgYXMgbG9uZy1kYXRlZCBmdW5kcyBtYXkgbm90ICAgZ2FpbiB0aGUgd2F5IHRoZXkgbm9ybWFsbHkgZG8gYWZ0ZXIgYSByYXRlIGN1dCwgYW5kIHNob3J0LXRlcm0gZnVuZHMgd2lsbCBzZWUgdGhlaXIgcmV0dXJucyBmYWxsLiBUaGlzIGlzICAgYmVjYXVzZSB0aGUgcHJpY2VzIG9mIGJvbmRzIHJpc2Ugd2hlbiBpbnRlcmVzdCByYXRlcyBmYWxsLiAgICBSQkkgdXNlcyBSZXBvIFJhdGUgKGFuZCBSZXZlcnNlIFJlcG8gUmF0ZSkgdG8gY29udHJvbCB0aGUgbW9uZXkgc3VwcGx5LiBXaGVuIGl0IHdhbnRzIHRvIGxvd2VyIHRoZSAgIG1vbmV5IHN1cHBseSBpdCByYWlzZXMgdGhlIFJlcG8gUmF0ZSAmIHNpbWlsYXJseSB3aGVuIGl0IHdhbnRzIHRvIGluY3JlYXNlIHRoZSBtb25leSBzdXBwbHkgaXQgcmVkdWNlcyAgIHRoZSBSZXBvIFJhdGUuICAgU291cmNlOiBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL2ZpbmFuY2lhbC1tYXJrZXQtaW4taW5kaWEtY29uY2VwdHMtc2ltcGxpZmllZC1wcmVsaW1zLWNhcHN1bGVzLSAgMjAyMS8gICAgaHR0cHM6Ly93d3cucmJpLm9yZy5pbi9TY3JpcHRzL1B1YmxpY2F0aW9uUmVwb3J0RGV0YWlscy5hc3B4P0lEPTM0ICAgIGh0dHBzOi8vd3d3LmxpdmVtaW50LmNvbS9tb25leS9wZXJzb25hbC1maW5hbmNlL3doYXQtcmJpLXJhdGUtY3V0LW1lYW5zLWZvci10aGUtYm9ycm93ZXItICBpbnZlc3Rvci1kZXBvc2l0b3ItMTE1OTAzMzk3NTg1MDUuaHRtbCAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:  1.  Fiat money is backed by a physical  commodity like gold  2.  If a currency is declared as legal tender then  it is mandatory to accept it as a mode of  settlement  3.  Fiduciary money is backed by trust between  payer and payee  Which of the Statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBGaWF0IG1vbmV5IG9yIGZpYXQgY3VycmVuY3kgaXMgYW55IG1vbmV5IHRoYXQgdGhlIGdvdmVybm1lbnQgZGVjbGFyZXMgYXMgbGVnYWwgICB0ZW5kZXIuIEl0IGlzIGlzc3VlZCBvbiB0aGUgb3JkZXIgb2YgdGhlIGdvdmVybm1lbnQgYW5kIGlzIG5vdCBiYWNrZWQgYnkgYSBwaHlzaWNhbCBjb21tb2RpdHkgc3VjaCBhcyAgIGdvbGQgb3Igc2lsdmVyLiBJbiBvdGhlciB3b3JkcywgZmlhdCBtb25leSBoYXMgbm8gaW50cmluc2ljIHZhbHVlLiBNYXJrZXQgZm9yY2VzIGRldGVybWluZSB0aGUgdmFsdWUgb2YgZmlhdCAgIG1vbmV5LiBUaGVyZSBpcyBubyBvYmxpZ2F0aW9uIG9uIGFueSBwZXJzb24gdG8gYWNjZXB0IHRoaXMgbW9uZXkgYXMgYSBtZWRpdW0gb2YgZXhjaGFuZ2UuIE5vIGxlZ2FsICAgYWN0aW9uIGNhbiBiZSBpbml0aWF0ZWQgaW4gdGhpcyBjYXNlLiBHb3Zlcm5tZW50cyBpbnRyb2R1Y2VkIHRoaXMgdHlwZSBvZiBtb25leSBhcyBhbiBhbHRlcm5hdGl2ZSB0byAgIHJlcHJlc2VudGF0aXZlIGFuZCBjb21tb2RpdHkgbW9uZXkgKGdvbGQgY29pbikuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gTGVnYWwgdGVuZGVyIGlzIHRoZSBtb25leSB0aGF0IGlzIHJlY29nbml6ZWQgYnkgdGhlIGxhdyBvZiB0aGUgbGFuZCwgYXMgdmFsaWQgZm9yICAgcGF5bWVudCBvZiBkZWJ0LiBTaW1pbGFybHksIGl0IG11c3QgYmUgYWNjZXB0ZWQgZm9yIGRpc2NoYXJnZSBvZiBkZWJ0LiBJdCBpcyBjb21wdWxzb3J5IHRvIGFjY2VwdCB0aGlzIHR5cGUgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICBvZiBtb25leSBmb3IgdGhlIHNldHRsZW1lbnQgb2YgYW55IG1vbmV0YXJ5IG9ibGlnYXRpb24uIFRoZSBnb3Zlcm5tZW50IGNhbiBpc3N1ZSBmaWF0IG1vbmV5IGFuZCBjYW4gICBkZWNsYXJlIGl0IHRvIGJlIGEgbGVnYWwgdGVuZGVyLiBUaGUgY29pbnMgaXNzdWVkIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIHVuZGVyIFRoZSBDb2luYWdlIEFjdCwgMjAxMSAgIGFyZSBsZWdhbCB0ZW5kZXIuIFNpbWlsYXJseSwgdGhlIE9uZSBSdXBlZSBub3RlcyBpc3N1ZWQgYnkgdGhlIE1pbmlzdHJ5IG9mIEZpbmFuY2UgKEdvdmVybm1lbnQgb2YgSW5kaWEpICAgdW5kZXIgdGhlIEN1cnJlbmN5IE9yZGluYW5jZSwgMTk0MCBhcmUgbGVnYWwgdGVuZGVyLiBFdmVyeSBiYW5rbm90ZSBpc3N1ZWQgYnkgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhICAgdW5kZXIgUkJJIEFjdCwgMTkzNCB1bmxlc3Mgd2l0aGRyYXduIGZyb20gY2lyY3VsYXRpb24gKGRlbW9uZXRpc2F0aW9uKSwgaXMgYSBsZWdhbCB0ZW5kZXIuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gRmlkdWNpYXJ5IG1vbmV5IHJlZmVycyB0byBtb25leSBiYWNrZWQgdXAgYnkgdHJ1c3QgYmV0d2VlbiB0aGUgcGF5ZXIgYW5kICAgcGF5ZWUuIEV4YW1wbGU6IENoZXF1ZXMgYXJlIGZpZHVjaWFyeSBtb25leSBhcyB0aGVzZSBhcmUgYWNjZXB0ZWQgYXMgYSBtZWFucyBvZiBwYXltZW50IG9uIHRoZSBiYXNpcyAgIG9mIHRydXN0IGJ1dCBub3Qgb24gdGhlIGJhc2lzIG9mIGFueSBvcmRlciBvZiB0aGUgZ292ZXJubWVudC4gICBTb3VyY2U6IE1hY3JvZWNvbm9taWNzLCBOQ0VSVCBYSUksIENoYXB0ZXItMywgTW9uZXkgJiBCYW5raW5nLCBQZy4gMzggICBodHRwczovL3d3dy5idXNpbmVzc2luc2lkZXIuaW4vY3J5cHRvY3VycmVuY3kvbmV3cy9maWF0LW1vbmV5LWN1cnJlbmNpZXMtdGhhdC1kZXJpdmUtdGhlaXItICB2YWx1ZS1sYXJnZWx5LXRocm91Z2gtdHJ1c3QtaW4tdGhlLWdvdmVybm1lbnRzLXRoYXQtaXNzdWUtdGhlbS9hcnRpY2xlc2hvdy84NzgwNDg0OC5jbXMgICBodHRwczovL3d3dy5jZW50cmFsY2hhcnRzLmNvbS9lbi9nbS8xLWxlYXJuLzktZWNvbm9taWNzLzM1LWNlbnRyYWwtYmFuay8xMDEyLWRlZmluaXRpb24tICBmaWR1Y2lhcnktbW9uZXkgICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL21vbmV5LWFuZC1iYW5raW5nLXNpbXBsaWZpZWQtcHJlbGltcy1jYXBzdWxlcy0yMDIxLyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 25,
      "question" : "With reference to the Mutual Funds,  consider the following statements:   1.  Mutual fund managers invest the money  only in debt securities.   2.  They are regulated by the Securities and  Exchange Board of India.   3.  Infrastructure Investment Trust functions  like a mutual fund.  Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIE11dHVhbCBGdW5kIGlzIGFuIGludmVzdG1lbnQgdmVoaWNsZSBtYWRlIHVwIG9mIGEgcG9vbCBvZiBtb25leSBjb2xsZWN0ZWQgICBmcm9tIHB1YmxpYyBpbnZlc3RvcnMuIE11dHVhbCBmdW5kIG1hbmFnZXJzIGludmVzdCB0aGUgbW9uZXkgb24gdGhlaXIgYmVoYWxmIGluIHNlY3VyaXRpZXMgaW5jbHVkaW5nIGJvdGggICBkZWJ0IGFuZCBlcXVpdHkuIFRoZSBwb29sZWQgbW9uZXkgaXMgdXNlZCB0byBidXkgb3RoZXIgc2VjdXJpdGllcyBieSBwcm9mZXNzaW9uYWwgbW9uZXkgbWFuYWdlcnMuIEl0ICAgY2hhcmdlcyBhIHNtYWxsIGZlZSBmb3IgbWFuYWdpbmcgdGhlIG1vbmV5LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBTZWN1cml0aWVzIGFuZCBFeGNoYW5nZSBCb2FyZCBvZiBJbmRpYSBpcyB0aGUgcmVndWxhdG9yeSBib2R5IHRvIGNvbnRyb2wgYW5kICAgcmVndWxhdGUgdGhlIG11dHVhbCBmdW5kcyBpbiBJbmRpYS4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQW4gSW5mcmFzdHJ1Y3R1cmUgSW52ZXN0bWVudCBUcnVzdCAoSW52SVRzKSBpcyBsaWtlIGEgbXV0dWFsIGZ1bmQsIHdoaWNoIGVuYWJsZXMgICBkaXJlY3QgaW52ZXN0bWVudCBvZiBzbWFsbCBhbW91bnRzIG9mIG1vbmV5IGZyb20gcG9zc2libGUgaW5kaXZpZHVhbC9pbnN0aXR1dGlvbmFsIGludmVzdG9ycyBpbiAgIGluZnJhc3RydWN0dXJlIHRvIGVhcm4gYSBzbWFsbCBwb3J0aW9uIG9mIHRoZSBpbmNvbWUgYXMgcmV0dXJuLiBJbnZJVFMgYXJlIGxpa2UgbXV0dWFsIGZ1bmRzIGluIHN0cnVjdHVyZS4gICBTb3VyY2U6IGh0dHBzOi8vZ3Jvd3cuaW4vbXV0dWFsLWZ1bmRzICAgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9kZWZpbml0aW9uL2luZnJhc3RydWN0dXJlLWludmVzdG1lbnQtdHJ1c3RzICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements:   1.  Equity Shares are non-redeemable in  nature.   2.  The date on which the equity is sold by the  investor is the maturity date.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFdoZW4gaW52ZXN0b3JzIGJ1eSBlcXVpdHkgc2hhcmVzLCB0aGV5IHJlY2VpdmUgY2VydGlmaWNhdGVzIG9mIG93bmVyc2hpcCBhcyBwcm9vZiBvZiB0aGVpciBwYXJ0IGFzIG93bmVycyAgIG9mIHRoZSBjb21wYW55LiBFcXVpdHkgc2hhcmVob2xkZXJzIGhhdmUgdGhlIHJpZ2h0IHRvIHZvdGUgb24gdmFyaW91cyBtYXR0ZXJzIG9mIHRoZSBjb21wYW55LiBUaGUgICBtYW5hZ2VtZW50IG9mIHRoZSBjb21wYW55IGlzIGVsZWN0ZWQgYnkgZXF1aXR5IHNoYXJlaG9sZGVycy4gVGhlIGVxdWl0eSBzaGFyZSBjYXBpdGFsIGlzIGhlbGQgICBwZXJtYW5lbnRseSBieSB0aGUgY29tcGFueSBhbmQgcmV0dXJuZWQgb25seSB1cG9uIHdpbmRpbmcgdXAuIEVxdWl0eSBzaGFyZXMgZ2l2ZSB0aGUgcmlnaHQgdG8gdGhlICAgaG9sZGVycyB0byBjbGFpbSBkaXZpZGVuZCBvbiB0aGUgc3VycGx1cyBwcm9maXRzIG9mIHRoZSBjb21wYW55LiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBFcXVpdHkgU2hhcmVzIGhhdmUgbm8gbWF0dXJpdHkgZGF0ZS4gVGhlaXIgbGlmZSBpcyBsaW1pdGVkIGJ5IHRoZSBsZW5ndGggb2YgdGltZSAgIHN0YXRlZCBpbiB0aGUgY29ycG9yYXRlIGNoYXJ0ZXIga25vd24gYXMgJ01lbW9yYW5kdW0gb2YgQXNzb2NpYXRpb24nLiBFcXVpdHkgc2hhcmVzIGFyZSBub24tICByZWRlZW1hYmxlIHNvIHRoZXkgc2VydmUgYXMgYSBsb25nLXRlcm0gc291cmNlIG9mIGZpbmFuY2UgZm9yIGNvbXBhbmllcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBGb3IgaW52ZXN0bWVudCBwdXJwb3NlcywgZXF1aXR5IHNoYXJlcyBjYW4gYmUgcHVyY2hhc2VkIGFuZCBzb2xkIGF0IGFueSB0aW1lLiAgIFRoZSBkYXRlIG9uIHdoaWNoIHRoZSBlcXVpdHkgaXMgc29sZCBieSB0aGUgaW52ZXN0b3IgaXMgdGhlIG1hdHVyaXR5IGRhdGUsIGFuZCB0aGUgcHJpY2UgYXQgd2hpY2ggdGhlICAgZXF1aXR5IGlzIHNvbGQgaXMgdGhlIG1hdHVyaXR5IHByaWNlLiAgIEtub3dsZWRnZSBCYXNlOiBTaGFyZXMgYXJlIHVuaXRzIGludG8gd2hpY2ggdGhlIHRvdGFsIHNoYXJlIGNhcGl0YWwgb2YgYSBjb21wYW55IGlzIGRpdmlkZWQuIE9uZSBzaGFyZSBpcyAgIHRoZSBzbWFsbGVzdCB1bml0IG9mIHRoZSBlbnRpcmUgc2hhcmUgY2FwaXRhbC4gUGVyc29ucyBob2xkaW5nIHNoYXJlcyBhcmUgdGVybWVkLCBzaGFyZWhvbGRlcnMuICAgU2hhcmVob2xkZXJzIGFyZSBwYWlkIGRpdmlkZW5kcyAoYSBzaGFyZSBpbiBwcm9maXQpIGJ5IGEgY29tcGFueS4gICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgUmlnaHRzIElzc3VlIC8gUmlnaHRzIFNoYXJlczogVGhlIGlzc3VlIG9mIG5ldyBzZWN1cml0aWVzIHRvIGV4aXN0aW5nIHNoYXJlaG9sZGVycyBhdCBhIHJhdGlvIHRvIHRob3NlICAgYWxyZWFkeSBoZWxkLiAgIEJvbnVzIFNoYXJlczogU2hhcmVzIGlzc3VlZCBieSB0aGUgY29tcGFuaWVzIHRvIHRoZWlyIHNoYXJlaG9sZGVycyBmcmVlIG9mIGNvc3QgYnkgY2FwaXRhbGl6YXRpb24gb2YgICBhY2N1bXVsYXRlZCByZXNlcnZlcyBmcm9tIHRoZSBwcm9maXRzIGVhcm5lZCBpbiB0aGUgZWFybGllciB5ZWFycy4gICBQcmVmZXJyZWQgU3RvY2sgLyBQcmVmZXJlbmNlIHNoYXJlczogT3duZXJzIG9mIHRoZXNlIGtpbmRzIG9mIHNoYXJlcyBhcmUgZW50aXRsZWQgdG8gYSBmaXhlZCBkaXZpZGVuZCBvciAgIGRpdmlkZW5kIGNhbGN1bGF0ZWQgYXQgYSBmaXhlZCByYXRlLiBCdXQgaW4gdGhlIGV2ZW50IG9mIGxpcXVpZGF0aW9uLCB0aGVpciBjbGFpbXMgcmFuayBiZWxvdyB0aGUgY2xhaW1zIG9mICAgdGhlIGNvbXBhbnkncyBjcmVkaXRvcnMsIGJvbmRob2xkZXJzIC8gZGViZW50dXJlIGhvbGRlcnMuICAgQ3VtdWxhdGl2ZSBQcmVmZXJlbmNlIFNoYXJlczogQSB0eXBlIG9mIHByZWZlcmVuY2Ugc2hhcmVzIG9uIHdoaWNoIGRpdmlkZW5kIGFjY3VtdWxhdGVzIGlmIHJlbWFpbnMgICB1bnBhaWQuICAgIEN1bXVsYXRpdmUgQ29udmVydGlibGUgUHJlZmVyZW5jZSBTaGFyZXM6IEEgdHlwZSBvZiBwcmVmZXJlbmNlIHNoYXJlcyB3aGVyZSB0aGUgZGl2aWRlbmQgcGF5YWJsZSBvbiAgIHRoZSBzYW1lIGFjY3VtdWxhdGVzLCBpZiBub3QgcGFpZC4gQWZ0ZXIgYSBzcGVjaWZpZWQgZGF0ZSwgdGhlc2Ugc2hhcmVzIHdpbGwgYmUgY29udmVydGVkIGludG8gZXF1aXR5IGNhcGl0YWwgICBvZiB0aGUgY29tcGFueS4gICBQYXJ0aWNpcGF0aW5nIFByZWZlcmVuY2UgU2hhcmU6IFRoZSByaWdodCBvZiBjZXJ0YWluIHByZWZlcmVuY2Ugc2hhcmVob2xkZXJzIHRvIHBhcnRpY2lwYXRlIGluIHByb2ZpdHMgICBhZnRlciBhIHNwZWNpZmllZCBmaXhlZCBkaXZpZGVuZCBjb250cmFjdGVkIGZvciBpcyBwYWlkLiAgICBTZWN1cml0eSBSZWNlaXB0czogU2VjdXJpdHkgcmVjZWlwdCBtZWFucyBhIHJlY2VpcHQgb3Igb3RoZXIgc2VjdXJpdHksIGlzc3VlZCBieSBhIHNlY3VyaXRpc2F0aW9uIGNvbXBhbnkgICBvciByZWNvbnN0cnVjdGlvbiBjb21wYW55IHRvIGFueSBxdWFsaWZpZWQgaW5zdGl0dXRpb25hbCBidXllciBwdXJzdWFudCB0byBhIHNjaGVtZSwgZXZpZGVuY2luZyB0aGUgICBwdXJjaGFzZSBvciBhY3F1aXNpdGlvbiBieSB0aGUgaG9sZGVyIHRoZXJlb2YsIG9mIGFuIHVuZGl2aWRlZCByaWdodCwgdGl0bGUgb3IgaW50ZXJlc3QgaW4gdGhlIGZpbmFuY2lhbCBhc3NldCAgIGludm9sdmVkIGluIHNlY3VyaXRpc2F0aW9uLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuc2ViaS5nb3YuaW4vc2ViaV9kYXRhL2ZhcWZpbGVzL2phbi0yMDE3LzE0ODU4NDM0NzY1NjYucGRmICAgIGh0dHBzOi8vd3d3LmluZGlhbml2ZXNoLmluL2tiLWJsb2cvd2hhdC1pcy1lcXVpdHktc2hhcmVzICAgIGh0dHBzOi8vd3d3LnlvdXJhcnRpY2xlbGlicmFyeS5jb20vZWNvbm9taWNzLzgtaW1wb3J0YW50LW5hdHVyZXMtb2YtZXF1aXR5LXNoYXJlcy8xNTQxICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to the Financial Stability  and Development Council (FSDC), consider the  following statements:   1. It is a statutory body established  immediately after the 1991 economic crisis.  2.  It is chaired by the Governor of the Reserve  Bank of India.   3.  It assess the functioning of large-scale  financial conglomerates.  Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIEZpbmFuY2lhbCBTdGFiaWxpdHkgYW5kIERldmVsb3BtZW50IENvdW5jaWwgKEZTREMpIHdhcyBzZXQgdXAgYnkgdGhlICAgR292ZXJubWVudCBhcyB0aGUgYXBleCBsZXZlbCBmb3J1bSBpbiBEZWNlbWJlciAyMDEwLiBJdCBpcyBhIG5vbi1zdGF0dXRvcnkgYm9keS4gICBUaGUgb2JqZWN0aXZlIG9mIEZTREMgaXMgdG8gc3RyZW5ndGhlbiBhbmQgaW5zdGl0dXRpb25hbGl6ZSB0aGUgbWVjaGFuaXNtIGZvciBtYWludGFpbmluZyBmaW5hbmNpYWwgICBzdGFiaWxpdHksIGVuaGFuY2luZyBpbnRlci1yZWd1bGF0b3J5IGNvb3JkaW5hdGlvbiBhbmQgcHJvbW90aW5nIGZpbmFuY2lhbCBzZWN0b3IgZGV2ZWxvcG1lbnQuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIENoYWlycGVyc29uIG9mIEZTREMgaXMgVW5pb24gRmluYW5jZSBNaW5pc3RlciBvZiBJbmRpYS4gICAgVGhlIG1lbWJlcnMgaW5jbHVkZSAoYSkgSGVhZHMgb2YgYWxsIEZpbmFuY2lhbCBTZWN0b3IgUmVndWxhdG9ycyAoUkJJLCBTRUJJLCBQRlJEQSAmIElSREEpICAgIChiKSBGaW5hbmNlIFNlY3JldGFyeSwgRGVwYXJ0bWVudCBvZiBFY29ub21pYyBBZmZhaXJzIChERUEpICAgIChjKSBTZWNyZXRhcnksIERlcGFydG1lbnQgb2YgRmluYW5jaWFsIFNlcnZpY2VzIChERlMpIGFuZCAgICAoZCkgQ2hpZWYgRWNvbm9taWMgQWR2aXNlci4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBGdW5jdGlvbnMgb2YgdGhlIEZTREM6ICAgIDEpIEl0IGZvY3VzZXMgb24gZmluYW5jaWFsIGxpdGVyYWN5IGFuZCBmaW5hbmNpYWwgaW5jbHVzaW9uLiAgIDIpIEl0IGFpbXMgc3RyZW5ndGhlbmluZyBhbmQgaW5zdGl0dXRpb25hbGl6aW5nIHRoZSBtZWNoYW5pc20gb2YgZmluYW5jaWFsIHN0YWJpbGl0eSBhbmQgZGV2ZWxvcG1lbnQuICAgMykgSXQgbW9uaXRvcnMgbWFjcm8tcHJ1ZGVudGlhbCBzdXBlcnZpc2lvbiBvZiB0aGUgZWNvbm9teS4gICAgNCkgSXQgYXNzZXNzZXMgdGhlIGZ1bmN0aW9uaW5nIG9mIGxhcmdlIGZpbmFuY2lhbCBjb25nbG9tZXJhdGVzLiAgIDUpIEl0IGFkZHJlc3NlcyBpbnRyYSByZWd1bGF0b3J5IGNvb3JkaW5hdGlvbiBpc3N1ZXMuICAgIEtub3dsZWRnZSBCYXNlOiBUaGUgRlNEQyB3YXMgZmlyc3QgcHJvcG9zZWQgdW5kZXIgdGhlIHJlY29tbWVuZGF0aW9ucyBvZiBSYWdodXJhbSBSYWphbiAgIGNvbW1pdHRlZSAoMjAwOCkgb24gZmluYW5jaWFsIHNlY3RvciByZWZvcm1zLiAgIEluIDIwMTgsIEdvdmVybm1lbnQgaGFkIHJlY29uc3RpdHV0ZWQgRlNEQyB0byBpbmNsdWRlIChhKSBNaW5pc3RlciBvZiBTdGF0ZSByZXNwb25zaWJsZSBmb3IgdGhlICAgRGVwYXJ0bWVudCBvZiBFY29ub21pYyBBZmZhaXJzIChERUEpIChiKSBTZWNyZXRhcnkgb2YgdGhlIERlcGFydG1lbnQgb2YgRWxlY3Ryb25pY3MgYW5kIEluZm9ybWF0aW9uICAgVGVjaG5vbG9neSAoYykgQ2hhaXJwZXJzb24gb2YgdGhlIEluc29sdmVuY3kgYW5kIEJhbmtydXB0Y3kgQm9hcmQgb2YgSW5kaWEgKElCQkkpIGFuZCAoZCkgUmV2ZW51ZSAgIFNlY3JldGFyeS4gICBTb3VyY2U6IGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vZmluYW5jaWFsLXN0YWJpbGl0eS1hbmQtZGV2ZWxvcG1lbnQtY291bmNpbGZzZGMvICAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 28,
      "question" : "With reference to Marginal Standing  Facility (MSF), consider the following  statements:  1.  Under MSF, banks can borrow overnight up  to 2% of their net demand and time  liabilities (NDTL).  2.  The MSF rate is floated as a penal rate by the  RBI.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1hcmdpbmFsIHN0YW5kaW5nIGZhY2lsaXR5IChNU0YpIGlzIGEgd2luZG93IGZvciBiYW5rcyB0byBib3Jyb3cgZnJvbSB0aGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIGluIGFuICAgZW1lcmdlbmN5IHdoZW4gaW50ZXItYmFuayBsaXF1aWRpdHkgZHJpZXMgdXAgY29tcGxldGVseS4gVGhlIE1hcmdpbmFsIHN0YW5kaW5nIGZhY2lsaXR5IGlzIGEgc2NoZW1lICAgbGF1bmNoZWQgYnkgUkJJIHdoaWxlIHJlZm9ybWluZyB0aGUgbW9uZXRhcnkgcG9saWN5IGluIDIwMTEtMTIuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVW5kZXIgTVNGIHNjaGVtZSwgYmFua3MgY2FuIGJvcnJvdyBvdmVybmlnaHQgdXAgdG8gMiBwZXIgY2VudCBvZiB0aGVpciBuZXQgICBkZW1hbmQgYW5kIHRpbWUgbGlhYmlsaXRpZXMgKE5EVEwpIGZyb20gdGhlIFJCSSwgYXQgdGhlIGludGVyZXN0IHJhdGUgMSBwZXIgY2VudCAoMTAwIGJhc2lzIHBvaW50cykgaGlnaGVyICAgdGhhbiB0aGUgY3VycmVudCByZXBvIHJhdGUuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBNU0YgcmF0ZSBoYXMgYmVlbiBmbG9hdGVkIGFzIGEgcGVuYWwgcmF0ZSBhbmQgc2luY2UgbWlkLTIwMTUgUkJJIGhhcyAgIG1haW50YWluZWQgaXQgMSBwZXIgY2VudCBoaWdoZXIgdGhhbiB0aGUgcHJldmFpbGluZyByZXBvIHJhdGUuIEJ5IGVuZCBNYXJjaCAyMDIwIGl0IGlzIGF0IDQuNjUgcGVyIGNlbnQsICAgZnVsbHkgYWxpZ25lZCB3aXRoIHRoZSBCYW5rIHJhdGUgKGkuZS4sIGVxdWFsIHRvIHRoZSBCYW5rIHJhdGUpLiAgICBTb3VyY2U6ICAxMnRoIEVkaXRpb24gSW5kaWEgRWNvbm9teSBSYW1lc2ggU2luZ2ggcGFnZSAzNTYgKHBkZikgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "both 1 and 2   ",
        "option4" : "neither 1 nor 2   "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to the Public Debt Office,  consider the following statements:   1. It acts as an investment banker to the  government.  2. It raises capital from the markets for the  government.  3.  It formulates the borrowing calendar for the  government.  4.  It helps in the formulation of the monetary  policy of RBI.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEEgcHVibGljIGRlYnQgb2ZmaWNlIG9yIGEgZGVidCBtYW5hZ2VtZW50IG9mZmljZSBpcyBhbiBhdXRvbm9tb3VzIGdvdmVybm1lbnQgICBhZ2VuY3kgd2hpY2ggYWN0cyBhcyB0aGUgaW52ZXN0bWVudCBiYW5rZXIgdG8gdGhlIGdvdmVybm1lbnQuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQSBwdWJsaWMgZGVidCBvZmZpY2UgcmFpc2VzIGNhcGl0YWwgZnJvbSB0aGUgbWFya2V0cyBmb3IgdGhlIGdvdmVybm1lbnQuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQSBwdWJsaWMgZGVidCBvZmZpY2UgZm9ybXVsYXRlcyB0aGUgYm9ycm93aW5nIGNhbGVuZGFyIGZvciB0aGUgZ292ZXJubWVudCBhbmQgICBkZWNpZGVzIHVwb24gdGhlIG1hdHVyaXRpZXMgb2YgdGhlIHNlY3VyaXRpZXMgdG8gYmUgaXNzdWVkIG9uIGJlaGFsZiBvZiB0aGUgZ292ZXJubWVudC4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0LiBBIHB1YmxpYyBkZWJ0IG9mZmljZSB3b3JrcyBzZXBhcmF0ZWx5IGZyb20gdGhlIGNlbnRyYWwgYmFuayBhbmQgaGFzIG5vdGhpbmcgdG8gICBkbyB3aXRoIHRoZSBmb3JtdWxhdGlvbiBvZiB0aGUgbW9uZXRhcnkgcG9saWN5IG9yIHNldHRpbmcgaW50ZXJlc3QgcmF0ZXMuICAgU291cmNlOiBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vbmV3cy9lY29ub215L2ZpbmFuY2UvZXQtaW4tdGhlLWNsYXNzcm9vbS1wdWJsaWMtICBkZWJ0LW9mZmljZS9hcnRpY2xlc2hvdy84MDIzMjUwLmNtcyAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 and 4 only   ",
        "option3" : "1, 2 and 3 only   ",
        "option4" : "1, 3 and 4 only    "
      }
    },
    {
      "index" : 30,
      "question" : "What is Bank Rate, sometimes seen in  news?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gUmV2ZXJzZSByZXBvIHJhdGUgaXMgdGhlIHJhdGUgYXQgd2hpY2ggdGhlIGNlbnRyYWwgYmFuayBvZiBhIGNvdW50cnkgKFJlc2VydmUgQmFuayAgIG9mIEluZGlhIGluIGNhc2Ugb2YgSW5kaWEpIGJvcnJvd3MgbW9uZXkgZnJvbSBjb21tZXJjaWFsIGJhbmtzIHdpdGhpbiB0aGUgY291bnRyeS4gSXQgaXMgYSBtb25ldGFyeSAgIHBvbGljeSBpbnN0cnVtZW50IHdoaWNoIGNhbiBiZSB1c2VkIHRvIGNvbnRyb2wgdGhlIG1vbmV5IHN1cHBseSBpbiB0aGUgY291bnRyeS4gICBPcHRpb24gYiBpcyBpbmNvcnJlY3QuIEJhc2UgUmF0ZSBpcyB0aGUgaW50ZXJlc3QgcmF0ZSBiZWxvdyB3aGljaCBTY2hlZHVsZWQgQ29tbWVyY2lhbCBCYW5rcyAoU0NCcykgd2lsbCAgIGxlbmQgbm8gbG9hbnMgdG8gaXRzIGN1c3RvbWVycy1pdHMgbWVhbnMgaXQgaXMgbGlrZSBwcmltZSBsZW5kaW5nIHJhdGUgKFBMUikgYW5kIHRoZSBiZW5jaG1hcmsgcHJpbWUgICBsZW5kaW5nIFJhdGUgKEJQTFIpIG9mIHRoZSBwYXN0IGFuZCBpcyBiYXNpY2FsbHkgYSBmbG9vciByYXRlIG9mIGludGVyZXN0LiAgICBPcHRpb24gYyBpcyBjb3JyZWN0LiBBIGJhbmsgcmF0ZSBpcyB0aGUgaW50ZXJlc3QgcmF0ZSBhIG5hdGlvbidzIGNlbnRyYWwgYmFuayBjaGFyZ2VzIHRvIGl0cyBkb21lc3RpYyBiYW5rcyAgIHRvIGJvcnJvdyBtb25leS4gVGhlIHJhdGVzIGNlbnRyYWwgYmFua3MgY2hhcmdlIGlzIHNldCB0byBzdGFiaWxpemUgdGhlIGVjb25vbXkuIFRoZSBpbnRlcmVzdCByYXRlIHdoaWNoICAgdGhlIFJCSSBjaGFyZ2VzIG9uIGl0cyBsb25nLXRlcm0gbGVuZGluZydzIGlzIGtub3duIGFzIHRoZSBCYW5rIFJhdGUuIFRoZSBjbGllbnRzIHdobyBib3Jyb3cgdGhyb3VnaCAgIHRoaXMgcm91dGUgYXJlIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhLCBzdGF0ZSBnb3Zlcm5tZW50cywgYmFua3MsIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMsIGNvLW9wZXJhdGl2ZSAgIGJhbmtzLCBOQkZDcywgZXRjLiAgICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIFJldmVyc2UgUmVwbyBSYXRlIGlzIHRoZSByYXRlIG9mIGludGVyZXN0IHRoZSBSQkkgcGF5cyB0byBpdHMgY2xpZW50cyB3aG8gb2ZmZXIgICBzaG9ydC10ZXJtIGxvYW4gdG8gaXQuIEF0IHByZXNlbnQgKE1hcmNoIDIwMjApIHRoZSByYXRlIGlzIGF0IDQuMDAgcGVyIGNlbnQuIEl0IGlzIHJldmVyc2Ugb2YgdGhlIHJlcG8gcmF0ZSAgIGFuZCB0aGlzIHdhcyBzdGFydGVkIGluIE5vdmVtYmVyIDE5OTYgYXMgcGFydCBvZiBMaXF1aWRpdHkgQWRqdXN0bWVudCBGYWNpbGl0eSAoTEFGKSBieSB0aGUgUkJJLiAgIFNvdXJjZTogMTJ0aCBFZGl0aW9uIEluZGlhIEVjb25vbXkgUmFtZXNoIFNpbmdoIHBhZ2UgMzU2IChwZGYpICAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It is the rate at which the RBI borrows   money from commercial banks to control   the money supply.  ",
        "option2" : "It is a rate below which Scheduled   Commercial Banks will not lend to its   customers.  ",
        "option3" : " It is the interest rate that which central bank   charges on domestic banks for borrowing   money.  ",
        "option4" : " It is the rate of interest the RBI pays to its   clients who offer short-term loan to it.    \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to Treasury Bills, consider  the following   1.  Ad hoc treasury bills are not marketable and  are issued to the state governments  2.  The regular treasury bills are sold to the  banks and public and are freely marketable.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRyZWFzdXJ5IEJpbGxzIGFyZSBzaG9ydC10ZXJtIGZpbmFuY2lhbCBpbnN0cnVtZW50cyBvZiBnb3Zlcm5tZW50LiBUaGUgdHJlYXN1cnkgYmlsbCBtYXJrZXQgZGVhbHMgaW4gICB0cmVhc3VyeSBiaWxscyB3aGljaCBhcmUgdGhlIHNob3J0LXRlcm0gKGkuZS4sIDkxLCAxODIgYW5kIDM2NCBkYXlzKSBsaWFiaWxpdHkgb2YgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEuICAgVGhlb3JldGljYWxseSB0aGVzZSBiaWxscyBhcmUgaXNzdWVkIHRvIG1lZXQgdGhlIHNob3J0LXRlcm0gZmluYW5jaWFsIHJlcXVpcmVtZW50cyBvZiB0aGUgZ292ZXJubWVudC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBZCBob2MgdHJlYXN1cnkgYmlsbHMgYXJlIGlzc3VlZCB0byB0aGUgc3RhdGUgZ292ZXJubWVudHMsIHNlbWktIGdvdmVybm1lbnQgICBkZXBhcnRtZW50cyBhbmQgZm9yZWlnbiBjZW50cmFsIGJhbmtzLiBUaGV5IGFyZSBub3Qgc29sZCB0byB0aGUgYmFua3MgYW5kIHRoZSBnZW5lcmFsIHB1YmxpYywgYW5kIGFyZSBub3QgICBtYXJrZXRhYmxlLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSByZWd1bGFyIHRyZWFzdXJ5IGJpbGxzIGFyZSBzb2xkIHRvIHRoZSBiYW5rcyBhbmQgcHVibGljIGFuZCBhcmUgZnJlZWx5ICAgbWFya2V0YWJsZS4gQm90aCB0eXBlcyBvZiBhZCBob2MgYW5kIHJlZ3VsYXIgdHJlYXN1cnkgYmlsbHMgYXJlIHNvbGQgYnkgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIG9uIGJlaGFsZiBvZiAgIHRoZSBDZW50cmFsIEdvdmVybm1lbnQuICAgU291cmNlOiBodHRwczovL3d3dy5lY29ub21pY3NkaXNjdXNzaW9uLm5ldC9pbmRpYS9tb25leS1tYXJrZXQvbW9uZXktbWFya2V0LWluLWluZGlhLSAgZmVhdHVyZXMtc3RydWN0dXJlLWNvbnN0aXR1ZW50cy1wYXJ0aWNpcGFudHMtYW5kLWRlZmVjdHMvMzEzNDggICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "both 1 and 2   ",
        "option4" : "neither 1 nor 2   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statement:  1.  Certificate of Deposit is a type of savings  account issued by a commercial bank.  2. Commercial Paper is a long-term debt  issued by a corporation.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEEgY2VydGlmaWNhdGUgb2YgZGVwb3NpdCAoQ0QpIGlzIGEgdHlwZSBvZiBzYXZpbmdzIGFjY291bnQgdXN1YWxseSBpc3N1ZWQgYnkgICBjb21tZXJjaWFsIGJhbmtzLCB3aGljaCByZXN0cmljdHMgeW91ciBhY2Nlc3MgdG8gdGhlIG1vbmV5IHlvdSBpbnZlc3QgYnV0IG9mZmVycyBtdWNoIGhpZ2hlciBpbnRlcmVzdCAgIHJhdGVzIHRoYW4gdGhvc2UgYXNzb2NpYXRlZCB3aXRoIHJlZ3VsYXIgc2F2aW5ncyBhY2NvdW50cy4gVGhlIGRlcG9zaXQgZ2FpbnMgdmFsdWUgb3ZlciBhbiBhZ3JlZWQtdXBvbiAgIGR1cmF0aW9uLCBidXQgaXQgY291bGQgYmUgc3ViamVjdCB0byBmZWVzIGlmIHdpdGhkcmF3biBiZWZvcmUgdGhlIGVuZCBvZiB0aGF0IHRpbWUuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBDb21tZXJjaWFsIHBhcGVyIGlzIGEgY29tbW9uIGZvcm0gb2YgdW5zZWN1cmVkLCBzaG9ydC10ZXJtIGRlYnQgaXNzdWVkIGJ5ICAgYSBjb3Jwb3JhdGlvbi4gQ29tbWVyY2lhbCBwYXBlciBpcyB0eXBpY2FsbHkgaXNzdWVkIGZvciB0aGUgZmluYW5jaW5nIG9mIHBheXJvbGwsIGFjY291bnRzIHBheWFibGUsICAgaW52ZW50b3JpZXMsIGFuZCBtZWV0aW5nIG90aGVyIHNob3J0LXRlcm0gbGlhYmlsaXRpZXMuIE1hdHVyaXRpZXMgb24gbW9zdCBjb21tZXJjaWFsIHBhcGVyIHJhbmdlcyBmcm9tIGEgICBmZXcgd2Vla3MgdG8gbW9udGhzLiBDb21tZXJjaWFsIHBhcGVyIGlzIHVzdWFsbHkgaXNzdWVkIGF0IGEgZGlzY291bnQgZnJvbSBmYWNlIHZhbHVlIGFuZCByZWZsZWN0cyAgIHByZXZhaWxpbmcgbWFya2V0IGludGVyZXN0IHJhdGVzLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYmFua3JhdGUuY29tL2dsb3NzYXJ5L2MvY2VydGlmaWNhdGUtb2YtZGVwb3NpdC8gICAgaHR0cHM6Ly93d3cuaW52ZXN0b3BlZGlhLmNvbS9hcnRpY2xlcy9pbnZlc3RpbmcvMDcwMzEzL2ludHJvZHVjdGlvbi1jb21tZXJjaWFsLXBhcGVyLmFzcCAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "both 1 and 2   ",
        "option4" : "neither 1 nor 2   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements with  reference to cooperative banks:  1. All the urban cooperative banks come under  the direct supervision of the Reserve Bank of  India (RBI).  2.  Cooperative banks can raise money through  issuance of equity shares and debt  instruments.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFdpdGggcmVjZW50IGFtZW5kbWVudHMgdG8gdGhlIEJhbmtpbmcgUmVndWxhdGlvbiBBY3QsIDE5NDksIGFsbCB1cmJhbiBhbmQgICBtdWx0aS1zdGF0ZSBjby1vcGVyYXRpdmUgYmFua3MgY2FtZSB1bmRlciB0aGUgZGlyZWN0IHN1cGVydmlzaW9uIG9mIHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkuIFRoZSAgIHJ1cmFsIGNvLW9wZXJhdGl2ZSBiYW5rcyB3aWxsIGNvbnRpbnVlIHRvIHJlbWFpbiB1bmRlciB0aGUgZHVhbCByZWd1bGF0aW9uIG9mIFJCSSBhbmQgUmVnaXN0cmFyIG9mIENvLSAgb3BlcmF0aXZlIFNvY2lldGllcy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgcmVjZW50IGFtZW5kbWVudHMgdG8gdGhlIEJhbmtpbmcgUmVndWxhdGlvbiBBY3QsIDE5NDkgYWxzbyBhbGxvdyAgIGNvb3BlcmF0aXZlIGJhbmtzIHRvIHJhaXNlIG1vbmV5IHZpYSBwdWJsaWMgaXNzdWVzIGFuZCBwcml2YXRlIHBsYWNlbWVudHMgb2YgZXF1aXR5IG9yIHByZWZlcmVuY2UgICBzaGFyZXMgYXMgd2VsbCBhcyB1bnNlY3VyZWQgZGViZW50dXJlcywgd2l0aCB0aGUgY2VudHJhbCdzIGJhbmsncyBub2QuICAgIEtub3dsZWRnZSBCYXNlOiAgICBEdWUgdG8gcmVjZW50IGFtZW5kbWVudCwgUHJvdmlzaW9ucyBhcHBsaWNhYmxlIHRvIGJhbmtpbmcgY29tcGFuaWVzIHdpbGwgYWxzbyBiZSBhcHBsaWNhYmxlIHRvICAgY29vcGVyYXRpdmUgYmFua3MuIFRoaXMgZW5zdXJlcyB0aGF0IGNvb3BlcmF0aXZlIGJhbmtzIGFyZSBlcXVhbGx5IHN1YmplY3QgdG8gYmV0dGVyIGdvdmVybmFuY2UgYW5kICAgc291bmQgYmFua2luZyByZWd1bGF0aW9ucyB0aHJvdWdoIHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkuICAgU291cmNlOiBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvYnVzaW5lc3MvYmFua2luZy1hbmQtZmluYW5jZS9nb3Z0LWJyaW5ncy1jby1vcC1iYW5rcy0gIHVuZGVyLXJiaS1zdXBlcnZpc2lvbi1mb3ItYmV0dGVyLXJlZ3VsYXRpb24tNjQ3NDkwNC8gICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following pairs:  Type of ATM Feature  1. Brown label ATM is owned and operated  by the bank itself.  2. White label ATM is owned and operated  by non-banking entities.  3. Pink label ATMs machines that are  provided for women  Which of the above given pairs are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3Q6IEJyb3duIExhYmVsIEFUTS0gYmFua3Mgb3V0c291cmNlIHRoZSBBVE0gb3BlcmF0aW9ucyB0byBhIHRoaXJkIHBhcnR5LiBJbiBCcm93biAgIExhYmVsLCBBVE0gaGFyZHdhcmUgaXMgb3duZWQgYnkgdGhlIHNlcnZpY2UgcHJvdmlkZXIsIGJ1dCBjYXNoIG1hbmFnZW1lbnQgYW5kIG5ldHdvcmsgY29ubmVjdGl2aXR5ICAgYXJlIHByb3ZpZGVkIGJ5IHRoZSBzcG9uc29yIGJhbmsuIEJ1dCB0aGUgQVRNIG1hY2hpbmUgY29udGFpbnMgTG9nbyBvZiBzcG9uc29yIGJhbmsuICAgIFBhaXIgMiBpcyBjb3JyZWN0OiBXaGVuIEF1dG9tYXRlZCBUZWxsZXIgTWFjaGluZXMgKEFUTXMpIGFyZSBzZXQgdXAsIG93bmVkIGFuZCBvcGVyYXRlZCBieSBub24tYmFuayAgIGVudGl0aWVzLWFyZSBjYWxsZWQgIldoaXRlIExhYmVsIEFUTXMiIChXTEFzKS4gICBQYWlyIDMgaXMgY29ycmVjdDogUElOSyBsYWJlbCBBVE0gLSBTdWNoIEFUTSBhcmUgbW9uaXRvcmVkIGJ5IGd1YXJkcyB3aG8gZW5zdXJlIHRoYXQgb25seSB3b21lbiAgIGFjY2VzcyB0aGVzZSBBVE0uIFRoZSBzb2xlIHB1cnBvc2Ugb2Ygc3VjaCBBVE0gaXMgdG8gbWl0aWdhdGUgdGhlIHByb2JsZW0gb2Ygd29tZW4gc3RhbmRpbmcgaW4gbG9uZyAgIHF1ZXVlcyBvZiBBVE0uICAgS25vd2xlZGdlIEJhc2U6ICAgIFNvbWUgb3RoZXIgdHlwZSBvZiBBVE1zOiAgIE9yYW5nZSBMYWJlbCBBVE0gLSBQcm92aWRlZCBmb3IgU2hhcmUgVHJhbnNhY3Rpb25zLiAgICBZZWxsb3cgTGFiZWwgQVRNIC0gU2V0IHVwIGZvciB0aGUgcHVycG9zZSBvZiBFLWNvbW1lcmNlLiAgIEdyZWVuIExhYmVsIEFUTSAtIFByb3ZpZGVkIGZvciBBZ3JpY3VsdHVyYWwgVHJhbnNhY3Rpb24uICAgU291cmNlOiBodHRwczovL3d3dy5saXZlbWludC5jb20vbW9uZXkvcGVyc29uYWwtZmluYW5jZS9hcmUtd2hpdGUtbGFiZWwtYXRtcy1hbnktZGlmZmVyZW50LSAgZnJvbS1iYW5rLWF0bXMtMTE2MzI3NjcwOTA5NDYuaHRtbCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements with  reference to SARFAESI Act and Bankruptcy  Code:  1.  The SARFAESI Act protects only secured  creditors while Insolvency and Bankruptcy  Code guarantees the interests of both  secured and unsecured creditors.  2.  Insolvency and Bankruptcy Code shall  prevail over any provisions of the SARFAESI  if there is any inconsistency between the  two.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBTQVJGQUVTSSBBY3QgcHJvdGVjdHMgZmluYW5jaWFsIGNyZWRpdG9ycyAoU2VjdXJlIGNyZWRpdG9ycyksIHdobyBhcmUgICBtb3N0bHkgYmFua3MgYW5kIG90aGVyIGZpbmFuY2lhbCBpbnN0aXR1dGlvbnMsIGJ5IGFsbG93aW5nIHRoZW0gdG8gaW1wb3NlIHRoZWlyIHNlY3VyaXR5IGludGVyZXN0cyB3aXRob3V0ICAgdGhlIG5lZWQgZm9yIGNvdXJ0IGludGVyZmVyZW5jZS4gVGhlIEluc29sdmVuY3kgYW5kIEJhbmtydXB0Y3kgQ29kZSwgb24gdGhlIG90aGVyIGhhbmQsIGd1YXJhbnRlZXMgdGhlICAgaW50ZXJlc3RzIG9mIGFsbCBmb3JtcyBvZiBjcmVkaXRvcnMgKGluY2x1ZGluZyBib3RoIHNlY3VyZWQgYW5kIHVuc2VjdXJlZCksIHdoaWNoIGFyZSBmdXJ0aGVyIGRpdmlkZWQgICBpbnRvIEZpbmFuY2lhbCBhbmQgT3BlcmF0aW9uYWwgQ3JlZGl0b3JzIGJ5IHRoZSBJQkMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQWNjb3JkaW5nIHRvIE5hdGlvbmFsIENvbXBhbnkgTGF3IEFwcGVsbGF0ZSBUcmlidW5hbCAoTkNMVCksIEluc29sdmVuY3kgYW5kICAgQmFua3J1cHRjeSBDb2RlIHNoYWxsIHByZXZhaWwgb3ZlciBhbnkgcHJvdmlzaW9ucyBvZiB0aGUgU0FSRkFFU0ksIGlmIHRoZXJlIGlzIGFueSBpbmNvbnNpc3RlbmN5ICAgYmV0d2VlbiBJQkMgYW5kIFNBUkZBRVNJLiAgIEtub3dsZWRnZSBCYXNlOiAgICBJbiBsYXJnZSBzaXplIGNhc2VzIHdoZXJlIHRoZXJlIGlzIGEgaGlnaCBkZWJ0IGJ1cmRlbiwgU0FSRkFFU0kgQWN0IGlzIG5vdCBtdWNoIGVmZmVjdGl2ZSBhbmQgdGFraW5nICAgcGh5c2ljYWwgcG9zc2Vzc2lvbiBpbiBzdWNoIGluc3RhbmNlcyBraWxscyB0aGUgYnVzaW5lc3MgYW5kIHRoZXJlIGlzIGxpdHRsZSBzY29wZSBvZiByZXZpdmFsLiBPbiB0aGUgb3RoZXIgICBoYW5kLCByZXNvbHV0aW9uIHBsYW5zIHVuZGVyIElCQyBhcmUgZm9jdXNlZCB0b3dhcmRzIHNlY3VyaW5nIHRoZSBpbnRlcmVzdCBvZiBhbGwgc3Rha2Vob2xkZXJzIGFuZCAgIGRpcmVjdGVkIHRvd2FyZCB0aGUgcmV2aXZhbCBvZiB0aGUgYnVzaW5lc3MgYXMgd2VsbCwgaGVuY2UgaW4gc3VjaCBsYXJnZSBjYXNlcywgSUJDIGlzIGhpZ2hseSBlZmZlY3RpdmUuICAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdWJ1c2luZXNzbGluZS5jb20vYnVzaW5lc3MtbGF3cy9pYmMtcHJldmFpbHMtb3Zlci0gIHNhcmZhZXNpL2FydGljbGUzNDIzOTMxNi5lY2UgICBodHRwczovL3d3dy5idXNpbmVzcy1zdGFuZGFyZC5jb20vYXJ0aWNsZS9lY29ub215LXBvbGljeS9leHBsYWluZWQtd2h5LWxlbmRlcnMtcHJlZmVyLWliYy0gIG92ZXItc2FyZmFlc2ktYWN0LWZvci1yZWNvdmVyeS1vZi1kdWVzLTEyMDAxMTkwMDkxM18xLmh0bWwgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 36,
      "question" : "In the context of banking in India, what is  Special Mention Account?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgb3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3Q6IFNwZWNpYWwgTWVudGlvbiBBY2NvdW50cyBhcmUgdGhvc2UgYXNzZXRzL2FjY291bnRzIHRoYXQgc2hvd3Mgc3ltcHRvbXMgb2YgYmFkICAgYXNzZXQgcXVhbGl0eSBpbiB0aGUgZmlyc3QgOTAgZGF5cyBpdHNlbGYgb3IgYmVmb3JlIGl0IGJlaW5nIGlkZW50aWZpZWQgYXMgTlBBLiBUeXBlcyBvZiBTTUEgLSAgICAxKSBzcGVjaWFsIG1lbnRpb24gYWNjb3VudC0wIChTTUEtMCkgbG9hbnMsIHdoZXJlIHRoZSByZXBheW1lbnQgb3ZlcmR1ZSBpcyBiZXR3ZWVuIDEtMzAgZGF5cyAgICAyKSBTTUEtMSB3aGVyZSB0aGUgcmVwYXltZW50IG92ZXJkdWUgaXMgYmV0d2VlbiAzMS02MCBkYXlzICAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIDMpIFNNQS0yIHdoZXJlIHRoZSByZXBheW1lbnQgb3ZlcmR1ZSBpcyBiZXR3ZWVuIDYxLTkwIGRheXMgICBTb3VyY2U6IGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9pbmR1c3RyeS9iYW5raW5nL2ZpbmFuY2UvYmFua2luZy9yYmktY2xlYXJzLWZvZy1vbi0gIHNwZWNpYWwtcHJvdmlzaW9uaW5nL2FydGljbGVzaG93Lzc1NTYzMjMwLmNtcyAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Loans that are showing early signs of   becoming a bad asset.  ",
        "option2" : " An account comprising only the high-  quality assets of banks.  ",
        "option3" : " A procedure under which money is given to   an employee to spend for a specific purpose.  ",
        "option4" : " Deposit Accounts getting special services   and privileges by the banks.   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following pairs:  NBFC Regulated By  1. Housing  Finance  Companies  Securities and  Exchange Board of  India (SEBI)  2. Systemically  Important Core  Investment  Company  Ministry of Corporate  Affairs  3. Insurance  companies  Insurance Regulatory  and Development  Authority (IRDA)  4. Asset Finance  Company  Reserve Bank of India  (RBI)  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBpbmNvcnJlY3RseSBtYXRjaGVkOiBIb3VzaW5nIEZpbmFuY2UgQ29tcGFuaWVzIGFyZSByZWd1bGF0ZWQgYnkgTmF0aW9uYWwgSG91c2luZyBCYW5rLiAgIFBhaXIgMyBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogSW5zdXJhbmNlIGNvbXBhbmllcyBhcmUgcmVndWxhdGVkIGJ5IEluc3VyYW5jZSBSZWd1bGF0b3J5IGFuZCAgIERldmVsb3BtZW50IEF1dGhvcml0eS4gU2ltaWxhcmx5LCBDaGl0IEZ1bmQgQ29tcGFuaWVzIGFyZSByZWd1bGF0ZWQgYnkgdGhlIHJlc3BlY3RpdmUgU3RhdGUgICBHb3Zlcm5tZW50cyBhbmQgTmlkaGkgQ29tcGFuaWVzIGFyZSByZWd1bGF0ZWQgYnkgTWluaXN0cnkgb2YgQ29ycG9yYXRlIEFmZmFpcnMsIEdvdmVybm1lbnQgb2YgSW5kaWEuICAgQ29tcGFuaWVzIHRoYXQgZG8gZmluYW5jaWFsIGJ1c2luZXNzIGJ1dCBhcmUgcmVndWxhdGVkIGJ5IG90aGVyIHJlZ3VsYXRvcnMgYXJlIGdpdmVuIHNwZWNpZmljIGV4ZW1wdGlvbiAgIGJ5IHRoZSBSZXNlcnZlIEJhbmsgZnJvbSBpdHMgcmVndWxhdG9yeSByZXF1aXJlbWVudHMgZm9yIGF2b2lkaW5nIGR1YWxpdHkgb2YgcmVndWxhdGlvbi4gICBQYWlyIDIgaXMgaW5jb3JyZWN0IGFuZCBwYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQuIE5CRkNzIHJlZ3VsYXRlZCBieSBSQkkgYXJlIC0gQXNzZXQgRmluYW5jZSAgIENvbXBhbnkgKEFGQyksIEludmVzdG1lbnQgQ29tcGFueSAoSUMpLCBJbmZyYXN0cnVjdHVyZSBGaW5hbmNlIENvbXBhbnkgKElGQyk7IFN5c3RlbWljYWxseSBJbXBvcnRhbnQgICBDb3JlIEludmVzdG1lbnQgQ29tcGFueSBldGMuICAgS25vd2xlZGdlIEJhc2U6IEEgTm9uLUJhbmtpbmcgRmluYW5jaWFsIENvcnBvcmF0aW9uIGlzIGEgY29tcGFueSB0aGF0IGlzIHJlZ2lzdGVyZWQgdW5kZXIgdGhlICAgQ29tcGFuaWVzIEFjdCwgMTk1NiBvZiB0aGUgQ29tcGFuaWVzIEFjdCwgMjAxMyBhbmQgaXMgaW52b2x2ZWQgaW4gdGhlIGxlbmRpbmcgYnVzaW5lc3MsIGhpcmUtcHVyY2hhc2UsICAgbGVhc2luZywgaW5zdXJhbmNlIGJ1c2luZXNzLCByZWNlaXZpbmcgZGVwb3NpdHMgaW4gc29tZSBjYXNlcywgY2hpdCBmdW5kcywgc3RvY2tzLCBhbmQgc2hhcmVzIGFjcXVpc2l0aW9uLCAgIGV0Yy4gVGhlIGZ1bmN0aW9ucyBvZiB0aGUgTkJGQ3MgYXJlIG1hbmFnZWQgYnkgYm90aCB0aGUgTWluaXN0cnkgb2YgQ29ycG9yYXRlIEFmZmFpcnMgYW5kIHRoZSBSZXNlcnZlICAgQmFuayBvZiBJbmRpYS4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LnJiaS5vcmcuaW4vU2NyaXB0cy9GQVFWaWV3LmFzcHg/SWQ9OTIgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 and 4 only  ",
        "option3" : "1 and 4 only  ",
        "option4" : "2 and 3 only    \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 38,
      "question" : "Consider the following statements with  reference to deposit insurance facility in India:   1.  It does not apply to foreign banks operating  in India.  2.  Currently small finance banks and payments  banks are not covered under this facility.   3.  The maximum amount insured is Rs 5 lakh  per depositor.   4.  The premium for this insurance is paid by  Reserve Bank of India.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gIEFsbCBjb21tZXJjaWFsIGJhbmtzIGluY2x1ZGluZyBicmFuY2hlcyBvZiBmb3JlaWduIGJhbmtzIGZ1bmN0aW9uaW5nIGluIEluZGlhLCAgIGxvY2FsIGFyZWEgYmFua3MgYW5kIHJlZ2lvbmFsIHJ1cmFsIGJhbmtzIGFyZSBpbnN1cmVkIGJ5IHRoZSBEZXBvc2l0IEluc3VyYW5jZSBhbmQgQ3JlZGl0IEd1YXJhbnRlZSAgIENvcnBvcmF0aW9uIChESUNHQykuICAgT3B0aW9uIDIgaXMgaW5jb3JyZWN0LiBEZXBvc2l0cyBpbiBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9yIGJhbmtzLCBsb2NhbCBhcmVhIGJhbmtzLCBzbWFsbCBmaW5hbmNlIGJhbmtzLCAgIHJlZ2lvbmFsIHJ1cmFsIGJhbmtzLCBjb29wZXJhdGl2ZSBiYW5rcywgSW5kaWFuIGJyYW5jaGVzIG9mIGZvcmVpZ24gYmFua3MsIGFuZCBwYXltZW50cyBiYW5rcyBhcmUgYWxsICAgaW5zdXJlZCBieSB0aGUgRGVwb3NpdCBJbnN1cmFuY2UgQ3JlZGl0IEd1YXJhbnRlZSBDb3Jwb3JhdGlvbi4gICAgUHJpbWFyeSBjb29wZXJhdGl2ZSBzb2NpZXRpZXMgYXJlIG5vdCBpbnN1cmVkIGJ5IHRoZSBESUNHQy4gICBPcHRpb24gMyBpcyBjb3JyZWN0LiBNYXhpbXVtIGNvdmVyIG9mIFJzIDUgbGFraCBwZXIgZGVwb3NpdG9yIGlzIHByb3ZpZGVkIGJ5IHRoZSBEZXBvc2l0IEluc3VyYW5jZSBhbmQgICBDcmVkaXQgR3VhcmFudGVlIENvcnBvcmF0aW9uIChESUNHQykuIEl0IHdpbGwgaGVscCBkZXBvc2l0b3JzIGFjY2VzcyB0aGVpciBkZXBvc2l0cyB1cCB0byBScy41IGxha2ggd2l0aGluICAganVzdCA5MCBkYXlzIGlmIHRoZWlyIGJhbmsgZ2V0cyBpbiB0cm91YmxlLCBhbmQgaXMgcGxhY2VkIHVuZGVyIGEgbW9yYXRvcml1bS4gICAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0LiBUaGUgcHJlbWl1bSBmb3IgdGhpcyBpbnN1cmFuY2UgaXMgcGFpZCBieSBiYW5rcyB0byB0aGUgRElDR0MgYW5kIG5vdCBwYXNzZWQgb24gICB0byBkZXBvc2l0b3JzLiAgIEtub3dsZWRnZSBCYXNlOiAgICBESUNHQyBpbnN1cmVzIGFsbCBiYW5rIGRlcG9zaXRzLCBzdWNoIGFzIHNhdmluZywgZml4ZWQsIGN1cnJlbnQsIGFuZCByZWN1cnJpbmcsIGV0Yy4gZXhjZXB0IHRoZSBmb2xsb3dpbmcgICB0eXBlcyBvZiBkZXBvc2l0cy4gICAxKSBEZXBvc2l0cyBvZiBmb3JlaWduIEdvdmVybm1lbnRzOyAgIDIpIERlcG9zaXRzIG9mIENlbnRyYWwvU3RhdGUgR292ZXJubWVudHM7ICAgMykgSW50ZXItYmFuayBkZXBvc2l0cyAgIDQpIERlcG9zaXRzIG9mIHRoZSBTdGF0ZSBMYW5kIERldmVsb3BtZW50IEJhbmtzIHdpdGggdGhlIFN0YXRlIGNvLW9wZXJhdGl2ZSBiYW5rczsgICA1KSBBbnkgYW1vdW50IGR1ZSBvbiBhY2NvdW50IG9mIGFuZCBkZXBvc2l0IHJlY2VpdmVkIG91dHNpZGUgSW5kaWEgICA2KSBBbnkgYW1vdW50IHdoaWNoIGhhcyBiZWVuIHNwZWNpZmljYWxseSBleGVtcHRlZCBieSB0aGUgY29ycG9yYXRpb24gd2l0aCB0aGUgcHJldmlvdXMgYXBwcm92YWwgb2YgICB0aGUgUkJJLiAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICBTb3VyY2U6IGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vY2hhbmdlcy10by1kZXBvc2l0LWluc3VyYW5jZS8gICAgaHR0cHM6Ly93d3cuZGljZ2Mub3JnLmluL0FVX1Byb2ZpbGUuaHRtbCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 39,
      "question" : "What is Positive Pay Mechanism, seen in  news recently?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFBvc2l0aXZlIFBheSBNZWNoYW5pc20gaXMgYSBwcm9jZXNzIG9mIHJlY29uZmlybWluZyBrZXkgZGV0YWlscyBvZiBsYXJnZS12YWx1ZSAgIGNoZXF1ZXMuIFRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkgd2lsbCBpbnRyb2R1Y2UgdGhlICdQb3NpdGl2ZSBQYXkgU3lzdGVtJyBmb3IgY2hlcXVlIHRyYW5zYWN0aW9ucyAgIGFib3ZlIFJzIDUwLDAwMCBpbiBhIGJpZCB0byBlbmhhbmNlIHNhZmV0eSBhbmQgZWxpbWluYXRlIGZyYXVkcy4gICBUaGUgY29uY2VwdCBvZiBQb3NpdGl2ZSBQYXkgaW52b2x2ZXMgYSBwcm9jZXNzIG9mIHJlY29uZmlybWluZyBrZXkgZGV0YWlscyBvZiBsYXJnZS12YWx1ZSBjaGVxdWVzLiBVbmRlciAgIHRoaXMgcHJvY2VzcywgdGhlIGlzc3VlciBvZiB0aGUgY2hlcXVlIHN1Ym1pdHMgZWxlY3Ryb25pY2FsbHksIHRocm91Z2ggY2hhbm5lbHMgbGlrZSBTTVMsIG1vYmlsZSBhcHAsICAgSW50ZXJuZXQgYmFua2luZyBhbmQgQVRNLCBjZXJ0YWluIG1pbmltdW0gZGV0YWlscyBvZiB0aGF0IGNoZXF1ZSAobGlrZSBkYXRlLCBuYW1lIG9mIHRoZSBiZW5lZmljaWFyeSwgb3IgICBwYXllZSBhbmQgYW1vdW50KSB0byB0aGUgZHJhd2VlIGJhbmssIGRldGFpbHMgb2Ygd2hpY2ggYXJlIGNyb3NzLWNoZWNrZWQgd2l0aCB0aGUgcHJlc2VudGVkIGNoZXF1ZSBieSAgIENoZXF1ZSBUcnVuY2F0aW9uIFN5c3RlbSAoQ1RTKS4gICBLbm93bGVkZ2UgQmFzZTogICAgQ2hlcXVlIExpbWl0czogQmFua3Mgd2lsbCBlbmFibGUgdGhlIG5ldyBzeXN0ZW0gZm9yIGFsbCBhY2NvdW50IGhvbGRlcnMgaXNzdWluZyBjaGVxdWVzIGZvciBhbW91bnRzIG9mICAgUnMgNTAsMDAwIGFuZCBhYm92ZS4gSXQgaXMgbWFuZGF0b3J5IGluIGNhc2Ugb2YgY2hlcXVlcyBmb3IgYW1vdW50cyBvZiBScyA1LDAwLDAwMCBhbmQgYWJvdmUuICAgIERldmVsb3BlZCBieTogTmF0aW9uYWwgUGF5bWVudHMgQ29ycG9yYXRpb24gb2YgSW5kaWEgKE5QQ0kpIHdpbGwgZGV2ZWxvcCB0aGUgZmFjaWxpdHkgb2YgUG9zaXRpdmUgUGF5IGluICAgQ1RTIGFuZCBtYWtlIGl0IGF2YWlsYWJsZSB0byBwYXJ0aWNpcGFudCBiYW5rcy4gICBTb3VyY2U6IGh0dHBzOi8vaW5kaWFuZXhwcmVzcy5jb20vYXJ0aWNsZS9leHBsYWluZWQvcG9zaXRpdmUtcGF5LXN5c3RlbS1iYW5rLWNoZXF1ZS1ycy01MDAwMC0gIDcxMTEyMzkvICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A process of paying balance funds in a   bilateral transaction.  ",
        "option2" : " A system for enhancing the safety of cheque   transactions.  ",
        "option3" : " A process of reconfirming key details of an   RTGS payment.  ",
        "option4" : " A system for the financing of trade   receivables of the MSME sector.   "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the Digital Payment  Index, consider the following statements:   1.  It has been launched by the NITI Aayog.   2.  This index takes into account both the  demand side and supply side factors.   3.  Currently it is covering urban areas only.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSBoYXMgbGF1bmNoZWQgYSBjb21wb3NpdGUgRGlnaXRhbCBQYXltZW50cyBJbmRleCAgIChEUEkpLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIERpZ2l0YWwgUGF5bWVudHMgSW5kZXggdGFrZXMgaW50byBhY2NvdW50IGJvdGggZGVtYW5kIHNpZGUgYW5kIHN1cHBseSBzaWRlICAgZmFjdG9ycyBpbiBQYXltZW50IGluZnJhc3RydWN0dXJlIHBhcmFtZXRlci4gVGhlIGluZGV4IGNvbXByaXNlcyBmaXZlIGJyb2FkIHBhcmFtZXRlcnMgd2l0aCB2YXJ5aW5nICAgd2VpZ2h0cyB0byBtZWFzdXJlIHRoZSBwZW5ldHJhdGlvbiBvZiBkaWdpdGFsIHBheW1lbnRzLiBUaGUgZml2ZSBrZXkgcGFyYW1ldGVycyBpbmNsdWRlOiAgIDEpIFBheW1lbnQgZW5hYmxlcnMgKDI1JSkuICAgMikgUGF5bWVudCBpbmZyYXN0cnVjdHVyZS1kZW1hbmQtc2lkZSBmYWN0b3JzICgxMCUpLiAgIDMpIFBheW1lbnQgaW5mcmFzdHJ1Y3R1cmUtc3VwcGx5LXNpZGUgZmFjdG9ycyAoMTUlKS4gICA0KSBQYXltZW50IHBlcmZvcm1hbmNlICg0NSUpLiAgIDUpIENvbnN1bWVyIGNlbnRyaWNpdHkgKDUlKS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIERpZ2l0YWwgUGF5bWVudHMgSW5kZXgncyBvYmplY3RpdmUgaXMgdG8gY2FwdHVyZSB0aGUgZXh0ZW50IG9mIGRpZ2l0aXNhdGlvbiBvZiAgIHBheW1lbnRzIGFjcm9zcyB0aGUgY291bnRyeSBnaXZlbiB0aGUgc2hhcnAgcGljay11cCBpbiBkaWdpdGFsIHRyYW5zYWN0aW9ucyBzZWVuIGluIHRoZSByZWNlbnQgcGFzdC4gSXQgICB3aWxsIGluY2x1ZGUgYm90aCB1cmJhbiBhbmQgcnVyYWwgYXJlYXMuICAgIEtub3dsZWRnZSBCYXNlOiBUaGUgaW5kZXggc2hhbGwgYmUgcHVibGlzaGVkIG9uIFJCSSdzIHdlYnNpdGUgb24gYSBzZW1pLWFubnVhbCBiYXNpcyBmcm9tIE1hcmNoIDIwMjEgICBvbndhcmRzIHdpdGggYSBsYWcgb2YgNCBtb250aHMuICAgIFRoZSBpbmRleCBoYXMgYmVlbiBjb25zdHJ1Y3RlZCB3aXRoIE1hcmNoIDIwMTggYXMgdGhlIGJhc2UgcGVyaW9kLiBBdCBhIGJhc2Ugb2YgMTAwIGZvciBNYXJjaCAyMDE4LCB0aGUgICBSQkkgaGFzIG1lYXN1cmVkIHRoYXQgdGhlIGluZGV4IHJvc2UgdG8gMTUzLjQ3IGFuZCAyMDcuODQgaW4gMjAxOSBhbmQgMjAyMCByZXNwZWN0aXZlbHkuICAgIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9yYmktbGF1bmNoZXMtZGlnaXRhbC1wYXltZW50cy1pbmRleC10by10cmFjay10cmFuc2FjdGlvbnMvICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 41,
      "question" : "Which of the following statements best  describes a Bank Investment Company?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIEJhbmsgSW52ZXN0bWVudCBDb21wYW55IGlzIHRoZSBwYXJlbnQgaG9sZGluZyBjb21wYW55IG9mIGFsbCBzdGF0ZS1vd25lZCBiYW5rcyBmb3JtZWQgYnkgICB0cmFuc2ZlcnJpbmcgc2hhcmVzIG9mIHRoZSBnb3Zlcm5tZW50IGluIHRoZSBiYW5rcyB0byBpdC4gICAgVGhlIFAgSiBOYXlhayBDb21taXR0ZWUgaGFkIGluIDIwMTUgcmVjb21tZW5kZWQgdGhhdCB0aGUgQmFuayBOYXRpb25hbGlzYXRpb24gQWN0cyBvZiAxOTcwIGFuZCAxOTgwLCAgIHRvZ2V0aGVyIHdpdGggdGhlIFNCSSBBY3QgYW5kIHRoZSBTQkkgKFN1YnNpZGlhcnkgQmFua3MpIEFjdCwgYmUgcmVwZWFsZWQ7IGFsbCBzdGF0ZS1ydW4gYmFua3MgYmUgICBpbmNvcnBvcmF0ZWQgdW5kZXIgdGhlIENvbXBhbmllcyBBY3Q7IGFuZCBhIEJhbmsgSW52ZXN0bWVudCBDb21wYW55IChCSUMpIGJlIGNvbnN0aXR1dGVkIHRvIHdoaWNoICAgdGhlIGdvdmVybm1lbnQgdHJhbnNmZXJzIGl0cyBob2xkaW5ncyBpbiBiYW5rcy4gVGhlIGdvdmVybm1lbnQncyBwb3dlcnMgaW4gcmVsYXRpb24gdG8gdGhlIGdvdmVybmFuY2Ugb2YgICBiYW5rcyBzaG91bGQgYWxzbyBiZSB0cmFuc2ZlcnJlZCB0byBCSUMuICAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gQXNzZXQgUmVjb25zdHJ1Y3Rpb24gQ29tcGFueSAoQVJDKSBpcyBhIHNwZWNpYWxpemVkIGZpbmFuY2lhbCBpbnN0aXR1dGlvbiB0aGF0ICAgYnV5cyB0aGUgTm9uLVBlcmZvcm1pbmcgQXNzZXRzIChOUEFzKSBmcm9tIGJhbmtzIGFuZCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zLiBJdCBoZWxwcyBiYW5rcyBpbiBjbGVhbmluZyAgIHVwIHRoZWlyIGJhbGFuY2Ugc2hlZXRzIGJ5IGJ1eWluZyB0aGVpciBiYWQgbG9hbnMuICAgIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gTmF0aW9uYWwgUGF5bWVudHMgQ29ycG9yYXRpb24gb2YgSW5kaWEgKE5QQ0kpLCBhbiB1bWJyZWxsYSBvcmdhbmlzYXRpb24gZm9yICAgb3BlcmF0aW5nIHJldGFpbCBwYXltZW50cyBhbmQgc2V0dGxlbWVudCBzeXN0ZW1zIGluIEluZGlhLCBpcyBhbiBpbml0aWF0aXZlIG9mIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSAgIGFuZCBJbmRpYW4gQmFua3MnIEFzc29jaWF0aW9uIChJQkEpIHVuZGVyIHRoZSBwcm92aXNpb25zIG9mIHRoZSBQYXltZW50IGFuZCBTZXR0bGVtZW50IFN5c3RlbXMgQWN0LCAgIDIwMDcsIGZvciBjcmVhdGluZyBhIHJvYnVzdCBQYXltZW50ICYgU2V0dGxlbWVudCBJbmZyYXN0cnVjdHVyZSBpbiBJbmRpYS4gICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIE5vbmJhbmsgZmluYW5jaWFsIGNvbXBhbmllcyAoTkJGQ3MpIGFyZSBmaW5hbmNpYWwgaW5zdGl0dXRpb25zIHRoYXQgb2ZmZXIgdmFyaW91cyAgIGJhbmtpbmcgc2VydmljZXMgYnV0IGRvIG5vdCBoYXZlIGEgYmFua2luZyBsaWNlbnNlLiBHZW5lcmFsbHksIHRoZXNlIGluc3RpdHV0aW9ucyBhcmUgbm90IGFsbG93ZWQgdG8gdGFrZSAgIHRyYWRpdGlvbmFsIGRlbWFuZCBkZXBvc2l0cyBmcm9tIHRoZSBwdWJsaWMuICAgIFNvdXJjZTogaHR0cHM6Ly93d3cuYnVzaW5lc3N0b2RheS5pbi9idXNpbmVzcy9leHBlY3RhdGlvbnMvc3RvcnkvYnVkZ2V0LTIwMjEtd2hhdC1pcy1iYW5rLSAgaW52ZXN0bWVudC1jb21wYW55LTI4NjMxMS0yMDIxLTAyLTAxICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A specialized financial institution that buys   the Non-Performing Assets (NPAs) from   banks and financial institutions.  ",
        "option2" : " Parent holding company of all state-owned   banks formed by transferring shares of the   government to it.   ",
        "option3" : " An umbrella organisation for operating   retail payments and settlement systems in   India.  ",
        "option4" : " A financial entity that offers various banking   services but does not have a banking license.    "
      }
    },
    {
      "index" : 42,
      "question" : "Which of the statements given below is  incorrect, with reference to the Asset  Reconstruction Companies (ARCs) in India?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3QuIFRoZSBTZWN1cml0aXNhdGlvbiBhbmQgUmVjb25zdHJ1Y3Rpb24gb2YgRmluYW5jaWFsIEFzc2V0cyBhbmQgRW5mb3JjZW1lbnQgb2YgICBTZWN1cml0eSBJbnRlcmVzdCAoU0FSRkFFU0kpIEFjdCwgMjAwMiBwcm92aWRlcyB0aGUgbGVnYWwgYmFzaXMgdG8gc2V0IHVwIHRoZSBBc3NldCBSZWNvbnN0cnVjdGlvbiAgIENvbXBhbnkuICAgIEFzc2V0IFJlY29uc3RydWN0aW9uIENvbXBhbnkgKEFSQykgaXMgYSBjb21wYW55IHJlZ2lzdGVyZWQgdW5kZXIgdGhlIENvbXBhbmllcyBBY3QgYW5kIHJlZ2lzdGVyZWQgICB3aXRoIFJlc2VydmUgQmFuayBvZiBJbmRpYSB1bmRlciBzZWN0aW9uIDMgb2YgVGhlIFNlY3VyaXRpc2F0aW9uIGFuZCBSZWNvbnN0cnVjdGlvbiBvZiBGaW5hbmNpYWwgQXNzZXRzICAgYW5kIEVuZm9yY2VtZW50IG9mIFNlY3VyaXR5IEludGVyZXN0IChTQVJGQUVTSSkgQWN0LCAyMDAyLiAgICBPcHRpb24gYiBpcyBjb3JyZWN0LiBBcyBwZXIgdGhlIFNBUkZBRVNJIEFjdCwgQVJDcyBzaG91bGQgaGF2ZSBtaW5pbXVtIG5ldCBvd25lZCBmdW5kcyBvZiBScy4gMTAwIENyLiAgIE9wdGlvbiBjIGlzIGNvcnJlY3QuIEFSQ3MgYXJlIG5vdCBwZXJtaXR0ZWQgdG8gdW5kZXJ0YWtlIGxlbmRpbmcgYWN0aXZpdGllcy4gT25lIEFSQyBjYW4gYmUgYSBzcG9uc29yICAgb3IgaW52ZXN0b3IgaW4gYW5vdGhlciBBUkMgb3IgaXQgY2FuIGFjcXVpcmUgZGVidCBmcm9tIGFub3RoZXIgQVJDLiAgIE9wdGlvbiBkIGlzIGNvcnJlY3QuIDEwMCUgZm9yZWlnbiBkaXJlY3QgaW52ZXN0bWVudCAoRkRJKSB1bmRlciB0aGUgYXV0b21hdGljIHJvdXRlIGluIGFzc2V0ICAgcmVjb25zdHJ1Y3Rpb24gY29tcGFuaWVzIChBUkNzKSBpcyBhbGxvd2VkLiAgICBLbm93bGVkZ2UgQmFzZTogICAgQXNzZXQgUmVjb25zdHJ1Y3Rpb24gQ29tcGFueSAoQVJDKSBpcyBhIHNwZWNpYWxpemVkIGZpbmFuY2lhbCBpbnN0aXR1dGlvbiB0aGF0IGJ1eXMgdGhlIE5vbi1QZXJmb3JtaW5nICAgQXNzZXRzIChOUEFzKSBmcm9tIGJhbmtzIGFuZCBmaW5hbmNpYWwgaW5zdGl0dXRpb25zLiBJdCBoZWxwcyBiYW5rcyBpbiBjbGVhbmluZyB1cCB0aGVpciBiYWxhbmNlIHNoZWV0cyBieSAgIGJ1eWluZyB0aGVpciBiYWQgbG9hbnMuICAgIFNlY3VyaXRpemF0aW9uIHJlZmVycyB0byB0aGUgY29udmVyc2lvbiBvZiBsb2FucyBzdWNoIGFzIGF1dG8sIGhvdXNlLCBjcmVkaXQgY2FyZHMsIGV0Yy4gb2YgYmFua3MgYW5kICAgbGVuZGVycyBpbnRvIGRlYnQgaW5zdHJ1bWVudHMuICAgIFRoZSBBUkNzIGFsc28gaGF2ZSB0byBtYWludGFpbiBhIGNhcGl0YWwgYWRlcXVhY3kgcmF0aW8gKENBUikgb2YgMTUlIG9mIGl0cyByaXNrLXdlaWdodGVkIGFzc2V0cy4gICBDYXBpdGFsIEFkZXF1YWN5IFJhdGlvIGlzIGFsc28ga25vd24gYXMgQ2FwaXRhbCB0byBSaXNrIChXZWlnaHRlZCkgQXNzZXRzIFJhdGlvIChDUkFSKSAgIEEgaGlnaCBDQVIgaW5kaWNhdGVzIHRoYXQgYSBiYW5rIGhhcyBhbiBhZGVxdWF0ZSBhbW91bnQgb2YgY2FwaXRhbCB0byBkZWFsIHdpdGggdW5leHBlY3RlZCBsb3NzZXMuIEEgICBsb3dlciBDQVIgbWVhbnMsIGEgYmFuayBpcyBhdCBhIGhpZ2hlciByaXNrIG9mIGZhaWx1cmUuICAgIEFSQ3MgYXJlIHJlZ3VsYXRlZCBieSBSQkkgYXMgYSBOb24tQmFua2luZyBGaW5hbmNpYWwgQ29tcGFueSBbTkJGQ10gKHVuZGVyIFJCSSBBY3QsIDE5MzQpLiBUaGV5ICAgZnVuY3Rpb24gdW5kZXIgdGhlIHN1cGVydmlzaW9uIGFuZCBjb250cm9sIG9mIHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkuICAgIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9hc3NldC1yZWNvbnN0cnVjdGlvbi1jb21wYW55LWNvbmNlcHRzLXNpbXBsaWZpZWQtcHJlbGltcy0gIGNhcHN1bGVzLTIwMjEvICAgICAgb2YgMjUgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Banking Regulations Act, 1949 provides the   legal basis to set up the ARC.   ",
        "option2" : " ARCs should have minimum net owned   funds of Rs.100 Cr.  ",
        "option3" : "ARCs are not permitted to undertake   lending activities.  ",
        "option4" : " 100% foreign direct investment (FDI) under   the automatic route is allowed in ARCs.   "
      }
    },
    {
      "index" : 43,
      "question" : "With reference to the Payment  Infrastructure Development Fund, which of the  following statements is incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGluY29ycmVjdC4gUGF5bWVudHMgSW5mcmFzdHJ1Y3R1cmUgRGV2ZWxvcG1lbnQgRnVuZCAoUElERikgaXMgc2V0dXAgYnkgdGhlIFJlc2VydmUgQmFuayBvZiAgIEluZGlhIChSQkkpLiBUaGUgZnVuZCB3aWxsIGJlIG1hbmFnZWQgYnkgYW4gYWR2aXNvcnkgY291bmNpbCB3aGljaCBoYXMgbWVtYmVycyBmcm9tIHRoZSBSQkksIGluZHVzdHJ5ICAgYXMgd2VsbCBhcyB0aGUgY2FyZCBuZXR3b3JrcyBhbmQgd2lsbCBiZSBvcGVyYXRpb25hbCBmcm9tIHRocmVlIHllYXJzIGZyb20gSmFudWFyeSAxLCAyMDIxLiAgICBPcHRpb24gYiBpcyBjb3JyZWN0LiBQYXltZW50cyBJbmZyYXN0cnVjdHVyZSBEZXZlbG9wbWVudCBGdW5kIGhhcyBhIGNvcnB1cyBvZiBScy4gMzQ1IGNyb3JlIHdpdGggUnMuICAgMjUwIGNyb3JlIGNvbnRyaWJ1dGVkIGJ5IHRoZSBSQkkgYW5kIFJzLiA5NSBjcm9yZSBieSB0aGUgbWFqb3IgYXV0aG9yaXNlZCBjYXJkIG5ldHdvcmtzIGluIHRoZSAgIGNvdW50cnkuIFRoZSB0YXJnZXQgaXMgdG8gbWFuYWdlIGFuIFJzIDUwMCBjcm9yZSBmdW5kIGF0IGFsbCB0aW1lcy4gQmVzaWRlcyB0aGUgaW5pdGlhbCBjb3JwdXMsIFBJREYgc2hhbGwgICBhbHNvIHJlY2VpdmUgYW5udWFsIGNvbnRyaWJ1dGlvbnMgZnJvbSBjYXJkIG5ldHdvcmtzIGFuZCBjYXJkIGlzc3VpbmcgYmFua3MuICAgT3B0aW9uIGMgaXMgY29ycmVjdC4gVGhlIGZ1bmQgd2lsbCBiZSB1c2VkIHRvIHN1YnNpZGl6ZSBiYW5rcyBhbmQgbm9uLWJhbmtzIHRvIGVuc3VyZSBzdWJzaWRpc2VkICAgZGVwbG95bWVudCBvZiBQb2ludHMgb2YgU2FsZSAoUG9TKSBpbmZyYXN0cnVjdHVyZSAoYm90aCBwaHlzaWNhbCBhbmQgZGlnaXRhbCBtb2RlcykgaW4gdGllci0zIHRvIHRpZXItNiAgIGNlbnRyZXMgYW5kIG5vcnRoLWVhc3Rlcm4gc3RhdGVzLiAgIE9wdGlvbiBkIGlzIGNvcnJlY3QuIFRoZSBmdW5kIHdpbGwgYmUgb3BlcmF0aW9uYWwgZm9yIHRocmVlIHllYXJzIGVmZmVjdGl2ZSBmcm9tIDFzdCBKYW51YXJ5LCAyMDIxIGFuZCBtYXkgICBiZSBleHRlbmRlZCBmb3IgdHdvIG1vcmUgeWVhcnMuICAgS25vd2xlZGdlIEJhc2U6ICAgICBNZXJjaGFudHMgZW5nYWdlZCBpbiBzZXJ2aWNlcyBzdWNoIGFzIHRyYW5zcG9ydCBhbmQgaG9zcGl0YWxpdHksIGdvdmVybm1lbnQgcGF5bWVudHMsIHB1YmxpYyAgIGRpc3RyaWJ1dGlvbiBzeXN0ZW0gKFBEUykgc2hvcHM7IGhlYWx0aGNhcmUgbWF5IGJlIGluY2x1ZGVkIGVzcGVjaWFsbHkgaW4gdGFyZ2V0ZWQgZ2VvZ3JhcGhpZXMuICAgIEFuIEFkdmlzb3J5IENvdW5jaWwgKEFDKSB1bmRlciB0aGUgY2hhaXJtYW5zaGlwIG9mIFJCSSBkZXB1dHkgZ292ZXJub3IgQlAgS2FudW5nbyBoYXMgYmVlbiAgIGNvbnN0aXR1dGVkIGZvciBtYW5hZ2luZyB0aGUgUElERi4gVGhlIGNvdW5jaWwgd2lsbCBkZXZpc2UgYSB0cmFuc3BhcmVudCBtZWNoYW5pc20gZm9yIGFsbG9jYXRpb24gb2YgICB0YXJnZXRzIHRvIGFjcXVpcmluZyBiYW5rcyBhbmQgbm9uLWJhbmtzIGluIGRpZmZlcmVudCBzZWdtZW50cyBhbmQgbG9jYXRpb25zLiAgIEltcGxlbWVudGF0aW9uIG9mIHRhcmdldHMgdW5kZXIgUElERiBzaGFsbCBiZSBtb25pdG9yZWQgYnkgUkJJJ3MgUmVnaW9uYWwgT2ZmaWNlIE11bWJhaSB3aXRoICAgYXNzaXN0YW5jZSBmcm9tIGNhcmQgbmV0d29ya3MsIHRoZSBJbmRpYW4gQmFua3MnIEFzc29jaWF0aW9uLCBhbmQgdGhlIFBheW1lbnRzIENvdW5jaWwgb2YgSW5kaWEuICAgU291cmNlOiBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL3JiaS11bnZlaWxzLWd1aWRlbGluZXMtZm9yLXBheW1lbnQtaW5mcmFzdHJ1Y3R1cmUtZGV2ZWxvcG1lbnQtICBmdW5kLyAgICBodHRwczovL3d3dy5tb25leWNvbnRyb2wuY29tL25ld3MvYnVzaW5lc3MvZXhwbGFpbmVkLWV2ZXJ5dGhpbmcteW91LW5lZWQtdG8ta25vdy1hYm91dC0gIHJiaXMtcGF5bWVudHMtaW5mcmFzdHJ1Y3R1cmUtZGV2ZWxvcG1lbnQtZnVuZC02MzE3NTQxLmh0bWwgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " It has been setup by the National Payments   Corporation of India.   ",
        "option2" : " The major corpus of the fund is contributed   by the Reserve Bank of India.  ",
        "option3" : " The fund will be used to subsidise the   deployment of Points of Sale (PoS)   infrastructure in tier-3 to tier-6 centres.  ",
        "option4" : " The fund will be operational for three years   effective from 1st January, 2021   "
      }
    },
    {
      "index" : 44,
      "question" : "Regarding the currency deposit ratio,  which of the following statements is correct?  1. It shows the amount of currency held by the  public as a proportion of bank deposits.  2.  It reflects people's preference for savings in  banks.  3.  An increase in the currency deposit ratio  will lead to a decrease in the money  multiplier.  4.  Currency deposit ratio depends on the  seasonal pattern of expenditure.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBjdXJyZW5jeSBkZXBvc2l0IHJhdGlvIHNob3dzIHRoZSBhbW91bnQgb2YgbW9uZXkgdGhhdCBwZW9wbGUgaG9sZCBhcyBhICAgcHJvcG9ydGlvbiBvZiBhZ2dyZWdhdGUgZGVwb3NpdHMgKGJhbmsgZGVwb3NpdHMpLiBJdCBpcyB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gdGhlIGFtb3VudCBvZiBjYXNoIGEgICBwZXJzb24gaG9sZHMgYW5kIHRoZSBhbW91bnQgb2YgbW9uZXkgc2hlIG1haW50YWlucyBpbiByZWFkaWx5IGFjY2Vzc2libGUgYmFuayBhY2NvdW50cywgc3VjaCBhcyAgIGNoZWNraW5nIGFjY291bnRzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIGN1cnJlbmN5IGRlcG9zaXQgcmF0aW8gZG9lcyBub3QgcmVmbGVjdCBwZW9wbGUncyBwcmVmZXJlbmNlIGZvciBzYXZpbmdzLiAgIE9uIHRoZSBjb250cmFyeSwgaXQgc2hvd3MgcGVvcGxlJ3MgcHJlZmVyZW5jZSBmb3IgbGlxdWlkaXR5IGkuZS4gdGhlIGFtb3VudCB0aGV5IHdvdWxkIGhvbGQgaW4gZm9ybSBvZiAgIGN1cnJlbmN5IGluIHByb3BvcnRpb24gdG8gYmFuayBkZXBvc2l0cy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBbiBpbmNyZWFzZSBpbiBjYXNoIGRlcG9zaXQgcmF0aW8gbGVhZHMgdG8gYSBkZWNyZWFzZSBpbiBtb25leSBtdWx0aXBsaWVyLiBBbiAgIGluY3JlYXNlIGluIGNhc2ggZGVwb3NpdCByYXRpbyBtZWFuIHBlb3BsZSBob2xkaW5nIGNhc2ggbW9yZSBpbiBoYW5kIGFuZCBkZXBvc2l0aW5nIGxlc3MgdGh1cyBsZWFkaW5nIHRvICAgZGVjcmVhc2UgaW4gbW9uZXkgbXVsdGlwbGllci4gICBXaGlsZSBhbiBpbmNyZWFzZSBpbiBkZXBvc2l0IHJhdGVzIHdpbGwgaW5kdWNlIGRlcG9zaXRvcnMgdG8gZGVwb3NpdCBtb3JlLCB0aGVyZWJ5IGxlYWRpbmcgdG8gYSBkZWNyZWFzZSAgIGluIENhc2ggRGVwb3NpdCByYXRpby4gVGhpcyB3aWxsIGluIHR1cm4gbGVhZCB0byBhIHJpc2UgaW4gTW9uZXkgTXVsdGlwbGllci4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGUgY3VycmVuY3kgZGVwb3NpdCByYXRpbyBpcyBhIHB1cmVseSBiZWhhdmlvdXJhbCBwYXJhbWV0ZXIgd2hpY2ggZGVwZW5kcywgICBhbW9uZyBvdGhlciB0aGluZ3MsIG9uIHRoZSBzZWFzb25hbCBwYXR0ZXJuIG9mIGV4cGVuZGl0dXJlLiBGb3IgZXhhbXBsZSwgQ0RSIGluY3JlYXNlcyBkdXJpbmcgdGhlICAgZmVzdGl2ZSBzZWFzb24gYXMgcGVvcGxlIGNvbnZlcnQgZGVwb3NpdHMgdG8gY2FzaCBiYWxhbmNlIGZvciBtZWV0aW5nIGV4dHJhIGV4cGVuZGl0dXJlIGR1cmluZyBzdWNoICAgcGVyaW9kcy4gICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICBTb3VyY2U6IE1hY3JvZWNvbm9taWNzLCBOQ0VSVCBYSUksIENoYXB0ZXItMywgTW9uZXkgJiBCYW5raW5nLCBQZy4gMzkgICBodHRwczovL2Vjb25vbWljdGltZXMuaW5kaWF0aW1lcy5jb20vZGVmaW5pdGlvbi9jdXJyZW5jeS1kZXBvc2l0LXJhdGlvICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1,2 and 3 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1 and 3 only      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements with  reference to Purchasing Power Parity (PPP):  1.  PPP are the price relatives that show the  ratio of the prices in national currencies of  the same good or service in different  countries.  2.  India has the second largest GDP in the  world at Purchasing Power Parity.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFB1cmNoYXNpbmcgUG93ZXIgUGFyaXRpZXMgYXJlIHRoZSByYXRlcyBvZiBjdXJyZW5jeSBjb252ZXJzaW9uIHRoYXQgZXF1YWxpemUgdGhlICAgcHVyY2hhc2luZyBwb3dlciBvZiBkaWZmZXJlbnQgY3VycmVuY2llcyBieSBlbGltaW5hdGluZyB0aGUgZGlmZmVyZW5jZXMgaW4gcHJpY2UgbGV2ZWxzIGJldHdlZW4gY291bnRyaWVzLiAgIEluIHRoZWlyIHNpbXBsZXN0IGZvcm0sIFBQUHMgYXJlIHNpbXBseSBwcmljZSByZWxhdGl2ZXMgdGhhdCBzaG93IHRoZSByYXRpbyBvZiB0aGUgcHJpY2VzIGluIG5hdGlvbmFsICAgY3VycmVuY2llcyBvZiB0aGUgc2FtZSBnb29kIG9yIHNlcnZpY2UgaW4gZGlmZmVyZW50IGNvdW50cmllcy4gSXQgaXMgYSBwb3B1bGFyIG1ldHJpYyB1c2VkIGJ5ICAgbWFjcm9lY29ub21pYyBhbmFseXN0cyB0aGF0IGNvbXBhcmVzIGRpZmZlcmVudCBjb3VudHJpZXMnIGN1cnJlbmNpZXMgdGhyb3VnaCBhICJiYXNrZXQgb2YgZ29vZHMiICAgYXBwcm9hY2ggICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEluZGlhJ3MgR0RQIGlzIHRvZGF5IDNyZCBsYXJnZXN0IGluIHRoZSB3b3JsZCBhdCBQUFAgKGFmdGVyIENoaW5hIGFuZCB0aGUgVVNBKS4gICBXaGlsZSBhdCB0aGUgcHJldmFpbGluZyBleGNoYW5nZSByYXRlIG9mIFJ1cGVlIChpbnRvIHRoZSBVUyBkb2xsYXJzKSBJbmRpYSdzIEdEUCBpcyByYW5rZWQgNnRoIGxhcmdlc3QgaW4gICB0aGUgd29ybGQuICAgU291cmNlOiBQdXJjaGFzaW5nIFBvd2VyIFBhcml0aWVzIC0gRnJlcXVlbnRseSBBc2tlZCBRdWVzdGlvbnMgKEZBUXMpIC0gT0VDRCAgIFJhbWVzaCBTaW5naCAxMkVkaXRpb24gQ2hhcHRlciAxIEludHJvZHVjdGlvbiAgIGh0dHBzOi8vZWNvbm9taWN0aW1lcy5pbmRpYXRpbWVzLmNvbS9uZXdzL2Vjb25vbXkvaW5kaWNhdG9ycy9pbmRpYS10by1iZWNvbWUtNXRoLWxhcmdlc3QtICBlY29ub215LWluLTIwMjUtM3JkLWxhcmdlc3QtYnktMjAzMC9hcnRpY2xlc2hvdy83OTk2NDc1MC5jbXMgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements:  1.  Opportunity cost is the forgone benefit that  would have been derived by an option not  chosen.  2.  A firm's expense in issuing both debt and  equity capital carries an opportunity cost.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE9wcG9ydHVuaXR5IGNvc3QgaXMgdGhlIGZvcmdvbmUgYmVuZWZpdCB0aGF0IHdvdWxkIGhhdmUgYmVlbiBkZXJpdmVkIGJ5IGFuICAgb3B0aW9uIG5vdCBjaG9zZW4uIEFub3RoZXIgd2F5IHRvIHNheSB0aGlzIGlzOiBpdCBpcyB0aGUgdmFsdWUgb2YgdGhlIG5leHQgYmVzdCBvcHBvcnR1bml0eS4gICAgVGhlIG9wcG9ydHVuaXR5IGNvc3Qgb2YgYW4gYWN0aW9uIGlzIHdoYXQgeW91IG11c3QgZ2l2ZSB1cCB3aGVuIHlvdSBtYWtlIHRoYXQgY2hvaWNlLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBPcHBvcnR1bml0eSBjb3N0IGFuYWx5c2lzIHBsYXlzIGEgY3J1Y2lhbCByb2xlIGluIGRldGVybWluaW5nIGEgYnVzaW5lc3MncyBjYXBpdGFsICAgc3RydWN0dXJlLiBBIGZpcm0gaW5jdXJzIGFuIGV4cGVuc2UgaW4gaXNzdWluZyBib3RoIGRlYnQgYW5kIGVxdWl0eSBjYXBpdGFsIHRvIGNvbXBlbnNhdGUgbGVuZGVycyBhbmQgICBzaGFyZWhvbGRlcnMgZm9yIHRoZSByaXNrIG9mIGludmVzdG1lbnQsIHlldCBlYWNoIGFsc28gY2FycmllcyBhbiBvcHBvcnR1bml0eSBjb3N0LiAgIEZ1bmRzIHVzZWQgdG8gbWFrZSBwYXltZW50cyBvbiBsb2FucywgZm9yIGV4YW1wbGUsIGNhbm5vdCBiZSBpbnZlc3RlZCBpbiBzdG9ja3Mgb3IgYm9uZHMsIHdoaWNoIG9mZmVyICAgdGhlIHBvdGVudGlhbCBmb3IgaW52ZXN0bWVudCBpbmNvbWUuIFRoZSBjb21wYW55IG11c3QgZGVjaWRlIGlmIHRoZSBleHBhbnNpb24gbWFkZSBieSB0aGUgbGV2ZXJhZ2luZyAgIHBvd2VyIG9mIGRlYnQgd2lsbCBnZW5lcmF0ZSBncmVhdGVyIHByb2ZpdHMgdGhhbiBpdCBjb3VsZCBtYWtlIHRocm91Z2ggaW52ZXN0bWVudHMuICAgS25vd2xlZGdlIEJhc2U6IElmIHdlIHdhbnQgdG8gaGF2ZSBtb3JlIG9mIG9uZSBvZiB0aGUgZ29vZHMsIHdlIHdpbGwgaGF2ZSBsZXNzIG9mIHRoZSBvdGhlciBnb29kLiBUaGlzICAgY29uY2VwdCBvZiBzY2FyY2l0eSBsZWFkcyB0byB0aGUgaWRlYSBvZiBvcHBvcnR1bml0eSBjb3N0LiBUaHVzLCB0aGVyZSBpcyBhbHdheXMgYSBjb3N0IG9mIGhhdmluZyBhIGxpdHRsZSAgIG1vcmUgb2Ygb25lIGdvb2QgaW4gdGVybXMgb2YgdGhlIGFtb3VudCBvZiB0aGUgb3RoZXIgZ29vZCB0aGF0IGhhcyB0byBiZSBmb3Jnb25lLiBUaGlzIGlzIGtub3duIGFzIHRoZSAgIG9wcG9ydHVuaXR5IGNvc3Qgb2YgYW4gYWRkaXRpb25hbCB1bml0IG9mIHRoZSBnb29kcy4gICAgVGhlIGNvbmNlcHQgb2Ygb3Bwb3J0dW5pdHkgY29zdCBpcyBhcHBsaWNhYmxlIHRvIHRoZSBpbmRpdmlkdWFsIGFzIHdlbGwgYXMgdGhlIHNvY2lldHkuICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9sZWVjMjAxLnBkZiAgICBodHRwczovL21hcmtldGJ1c2luZXNzbmV3cy5jb20vZmluYW5jaWFsLWdsb3NzYXJ5L2Vjb25vbWljLWNvc3QvICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements:   1.  Law of Demand states that there is a positive  relation between demand for a commodity  and its price.   2.  The Income Effect states that the  consumers will generally spend more if they  experience an increase in income.   3.  Retailers who generally sell cheaper items  benefit from the substitution effect.  Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gTGF3IG9mIERlbWFuZCBzdGF0ZXMgdGhhdCBvdGhlciB0aGluZ3MgYmVpbmcgZXF1YWwsIHRoZXJlIGlzIGEgbmVnYXRpdmUgcmVsYXRpb24gICBiZXR3ZWVuIGRlbWFuZCBmb3IgYSBjb21tb2RpdHkgYW5kIGl0cyBwcmljZS4gSW4gb3RoZXIgd29yZHMsIHdoZW4gcHJpY2Ugb2YgdGhlIGNvbW1vZGl0eSBpbmNyZWFzZXMsICAgZGVtYW5kIGZvciBpdCBmYWxscyBhbmQgd2hlbiBwcmljZSBvZiB0aGUgY29tbW9kaXR5IGRlY3JlYXNlcywgZGVtYW5kIGZvciBpdCByaXNlcyBvdGhlciBmYWN0b3JzICAgcmVtYWluaW5nIHRoZSBzYW1lLiAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgaW5jb21lIGVmZmVjdCBpcyB0aGUgY2hhbmdlIGluIHRoZSBjb25zdW1wdGlvbiBvZiBnb29kcyBiYXNlZCBvbiBpbmNvbWUuICAgVGhpcyBtZWFucyBjb25zdW1lcnMgd2lsbCBnZW5lcmFsbHkgc3BlbmQgbW9yZSBpZiB0aGV5IGV4cGVyaWVuY2UgYW4gaW5jcmVhc2UgaW4gaW5jb21lLCBhbmQgdGhleSBtYXkgICBzcGVuZCBsZXNzIGlmIHRoZWlyIGluY29tZSBkcm9wcy4gQnV0IHRoZSBlZmZlY3QgZG9lc24ndCBkaWN0YXRlIHdoYXQga2luZCBvZiBnb29kcyBjb25zdW1lcnMgd2lsbCBidXkuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFJldGFpbGVycyB3aG8gZ2VuZXJhbGx5IHNlbGwgY2hlYXBlciBpdGVtcyB0eXBpY2FsbHkgYmVuZWZpdCBmcm9tIHRoZSAgIHN1YnN0aXR1dGlvbiBlZmZlY3QuIFRoZSBzdWJzdGl0dXRpb24gbWF5IG9jY3VyIHdoZW4gYSBjb25zdW1lciByZXBsYWNlcyBjaGVhcGVyIG9yIG1vZGVyYXRlbHkgcHJpY2VkICAgaXRlbXMgd2l0aCBvbmVzIHRoYXQgYXJlIG1vcmUgZXhwZW5zaXZlIHdoZW4gYSBjaGFuZ2UgaW4gZmluYW5jZXMgb2NjdXJzLiAgICBUaGUgaW52ZXJzZSBpcyB0cnVlIHdoZW4gaW5jb21lcyBkZWNyZWFzZS4gICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlZWMyMDIucGRmICAgIGh0dHBzOi8vd3d3LmludmVzdG9wZWRpYS5jb20vYXNrL2Fuc3dlcnMvMDQxNDE1L3doYXRzLWRpZmZlcmVuY2UtYmV0d2Vlbi1pbmNvbWUtZWZmZWN0LWFuZC0gIHN1YnN0aXR1dGlvbi1lZmZlY3QuYXNwICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3          "
      }
    },
    {
      "index" : 48,
      "question" : "Which among the following are features  of perfect competition?   1.  The market consists of a large number of  buyers and sellers.   2.  Each firm produces and sells a homogenous  product.  3.  Entry into the market as well as exit from  the market are free for firms.  4.  Buyers and sellers are completely informed  about the price of the product, as well as the  market.  Select the correct answer using the code give  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBIHBlcmZlY3RseSBjb21wZXRpdGl2ZSBtYXJrZXQgaGFzIHRoZSBmb2xsb3dpbmcgZGVmaW5pbmcgZmVhdHVyZXM6ICAgIDEpIFRoZSBtYXJrZXQgY29uc2lzdHMgb2YgYSBsYXJnZSBudW1iZXIgb2YgYnV5ZXJzIGFuZCBzZWxsZXJzICAgIDIpIEVhY2ggZmlybSBwcm9kdWNlcyBhbmQgc2VsbHMgYSBob21vZ2Vub3VzIHByb2R1Y3QuIGkuZS4sIHRoZSBwcm9kdWN0IG9mIG9uZSBmaXJtIGNhbm5vdCBiZSAgIGRpZmZlcmVudGlhdGVkIGZyb20gdGhlIHByb2R1Y3Qgb2YgYW55IG90aGVyIGZpcm0uICAgIDMpIEVudHJ5IGludG8gdGhlIG1hcmtldCBhcyB3ZWxsIGFzIGV4aXQgZnJvbSB0aGUgbWFya2V0IGFyZSBmcmVlIGZvciBmaXJtcy4gICAgNCkgSW5mb3JtYXRpb24gaXMgcGVyZmVjdC4gICAgYS4gVGhlIGV4aXN0ZW5jZSBvZiBhIGxhcmdlIG51bWJlciBvZiBidXllcnMgYW5kIHNlbGxlcnMgbWVhbnMgdGhhdCBlYWNoIGluZGl2aWR1YWwgYnV5ZXIgYW5kIHNlbGxlciBpcyAgIHZlcnkgc21hbGwgY29tcGFyZWQgdG8gdGhlIHNpemUgb2YgdGhlIG1hcmtldC4gVGhpcyBtZWFucyB0aGF0IG5vIGluZGl2aWR1YWwgYnV5ZXIgb3Igc2VsbGVyIGNhbiAgIGluZmx1ZW5jZSB0aGUgbWFya2V0IGJ5IHRoZWlyIHNpemUuICAgIGIuIEhvbW9nZW5vdXMgcHJvZHVjdHMgZnVydGhlciBtZWFuIHRoYXQgdGhlIHByb2R1Y3Qgb2YgZWFjaCBmaXJtIGlzIGlkZW50aWNhbC4gU28sIGEgYnV5ZXIgY2FuICAgY2hvb3NlIHRvIGJ1eSBmcm9tIGFueSBmaXJtIGluIHRoZSBtYXJrZXQsIGFuZCBzaGUgZ2V0cyB0aGUgc2FtZSBwcm9kdWN0LiAgICBjLiBGcmVlIGVudHJ5IGFuZCBleGl0IG1lYW4gdGhhdCBpdCBpcyBlYXN5IGZvciBmaXJtcyB0byBlbnRlciB0aGUgbWFya2V0LCBhcyB3ZWxsIGFzIHRvIGxlYXZlIGl0LiBUaGlzICAgY29uZGl0aW9uIGlzIGVzc2VudGlhbCBmb3IgdGhlIGxhcmdlIG51bWJlcnMgb2YgZmlybXMgdG8gZXhpc3QuIElmIGVudHJ5IHdhcyBkaWZmaWN1bHQsIG9yIHJlc3RyaWN0ZWQsICAgdGhlbiB0aGUgbnVtYmVyIG9mIGZpcm1zIGluIHRoZSBtYXJrZXQgY291bGQgYmUgc21hbGwuICAgIGQuIFBlcmZlY3QgaW5mb3JtYXRpb24gaW1wbGllcyB0aGF0IGFsbCBidXllcnMgYW5kIGFsbCBzZWxsZXJzIGFyZSBjb21wbGV0ZWx5IGluZm9ybWVkIGFib3V0IHRoZSBwcmljZSwgICBxdWFsaXR5IGFuZCBvdGhlciByZWxldmFudCBkZXRhaWxzIGFib3V0IHRoZSBwcm9kdWN0LCBhcyB3ZWxsIGFzIHRoZSBtYXJrZXQuICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWVjMjA0LnBkZiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 49,
      "question" : "It is the total value of finished goods and  services produced by a country's citizens  overseas and domestically, minus depreciation.  It is considered as the purest form of income. It  is used in finding per capita income of a nation.   Which of the following income accounting  method is described in the above given  paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBOZXQgbmF0aW9uYWwgcHJvZHVjdCAoTk5QKSBpcyB0aGUgbW9uZXRhcnkgdmFsdWUgb2YgZmluaXNoZWQgZ29vZHMgYW5kIHNlcnZpY2VzIHByb2R1Y2VkIGJ5IGEgICBjb3VudHJ5J3MgY2l0aXplbnMsIG92ZXJzZWFzIGFuZCBkb21lc3RpY2FsbHksIGluIGEgZ2l2ZW4gcGVyaW9kLiBJdCBpcyB0aGUgZXF1aXZhbGVudCBvZiBncm9zcyBuYXRpb25hbCAgIHByb2R1Y3QgKEdOUCksIHRoZSB0b3RhbCB2YWx1ZSBvZiBhIG5hdGlvbidzIGFubnVhbCBvdXRwdXQsIG1pbnVzIHRoZSBhbW91bnQgb2YgR05QIHJlcXVpcmVkIHRvIHB1cmNoYXNlICAgbmV3IGdvb2RzIHRvIG1haW50YWluIGV4aXN0aW5nIHN0b2NrLCBvdGhlcndpc2Uga25vd24gYXMgZGVwcmVjaWF0aW9uLiAgICBIb3dldmVyLCB0aGUgQ2VudHJhbCBTdGF0aXN0aWNzIE9mZmljZSAoQ1NPKSB1bmRlciB0aGUgTWluaXN0cnkgb2YgU3RhdGlzdGljcyBhbmQgUHJvZ3JhbSBJbXBsZW1lbnRhdGlvbiAgIGRlZmluZXMgTmF0aW9uYWwgSW5jb21lIG9mIEluZGlhIGFzIE5ldCBOYXRpb25hbCBJbmNvbWUgYXQgTWFya2V0IFByaWNlLiAgICBOZXQgTmF0aW9uYWwgUHJvZHVjdCAoTk5QKSDiiaEgR05QIG1pbnVzIGRlcHJlY2lhdGlvbi4gICBJdCBpcyBjb25zaWRlcmVkIGFzIHRoZSBwdXJlc3QgZm9ybSBvZiBpbmNvbWUgZHVlIHRvIHN1YnRyYWN0aW9uIG9mIGRlcHJlY2lhdGlvbi4gICAgTmV0IE5hdGlvbmFsIFByb2R1Y3QgZGl2aWRlZCBieSB0aGUgcG9wdWxhdGlvbiBvZiB0aGUgY291bnRyeSBnaXZlcyBwZXIgY2FwaXRhIGluY29tZSBvZiBhIG5hdGlvbi4gICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbiBleHRib29rL3BkZi9sZWVjMTAyLnBkZiAgICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL2Vjby0xMDEtYmFzaWNzLW9mLWluZGlhcy1uYXRpb25hbC1pbmNvbWUtZ2RwLWducC1ubnAtZ3ZhLWV0Yy0gIGV4cGxhaW5lZC8gICAgICBvZiAyNSAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Net Domestic Product   ",
        "option2" : "Gross National Product   ",
        "option3" : "Net National Product   ",
        "option4" : "Gross Domestic product   "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following statements with  reference to Gross Value Added (GVA) method  is/ are correct?  1.  GVA at factor cost is generally lesser than  GVA at basic price.  2.  GVA at basic prices is calculated using  production taxes and subsidies.  3.  GVA at market price is calculated using  product taxes and subsidies.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEdyb3NzIFZhbHVlIEFkZGVkIChHVkEpIGF0IGZhY3RvciBjb3N0IGlzIGdlbmVyYWxseSBsZXNzZXIgdGhhbiBHVkEgYXQgYmFzaWMgICBwcmljZSwgYXMgR1ZBIGF0IEJhc2ljIFByaWNlIGluY2x1ZGVzIHRheGVzIG5ldCBvZiBzdWJzaWRpZXMsIHdoaWNoIGluY3JlYXNlcyB0aGUgZW5kIHZhbHVlLiAgIEdWQSBhdCBCYXNpYyBQcmljZXMgPSBHVkEgYXQgZmFjdG9yIGNvc3QgKyAoUHJvZHVjdGlvbiB0YXhlcyBsZXNzIFByb2R1Y3Rpb24gc3Vic2lkaWVzKSAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEdWQSBhdCBCYXNpYyBQcmljZXMgaXMgY2FsY3VsYXRlZCB1c2luZyBwcm9kdWN0aW9uIHRheGVzIGFuZCBzdWJzaWRpZXMuIEl0IGlzIHRoZSAgIEdEUCBjYWxjdWxhdGlvbiB3aGljaCB1c2VzIFByb2R1Y3QgdGF4ZXMgYW5kIHN1YnNpZGllcy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBHRFAgYXQgbWFya2V0IHByaWNlcyA9IEdWQSBhdCBiYXNpYyBwcmljZXMgKyBQcm9kdWN0IHRheGVzLSBQcm9kdWN0IHN1YnNpZGllcyAgIFNvdXJjZTogICBodHRwOi8vd3d3LmFydGhhcGVkaWEuaW4vaW5kZXgucGhwJTNGdGl0bGUlM0RHcm9zc19WYWx1ZV9BZGRlZF8oR1ZBKV9hdF9iYXNpY19wcmljZXNfYW5kX0cgIFZBX2F0X0ZhY3Rvcl9Db3N0cyAgICAgIG9mIDI1ICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
