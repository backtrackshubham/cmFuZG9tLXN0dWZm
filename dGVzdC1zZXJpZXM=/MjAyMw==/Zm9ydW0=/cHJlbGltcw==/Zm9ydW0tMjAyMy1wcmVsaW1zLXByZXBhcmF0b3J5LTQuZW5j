{
  "testId" : "forum-2023-prelims-preparatory-4",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-preparatory-4.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with  reference to the amendment of the Indian  Constitution:   1.  India has no provision for special body like  Constitutional Convention in United States  of America for amending the Constitution.   2. Unlike United States of America, the power  to initiate amendment lies only with the  Parliament in India.   Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBMaWtlIGFueSBvdGhlciB3cml0dGVuIENvbnN0aXR1dGlvbiwgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBhbHNvIHByb3ZpZGVzIGZvciBpdHMgYW1lbmRtZW50IGluIG9yZGVyIHRvICAgYWRqdXN0IGl0c2VsZiB0byB0aGUgY2hhbmdpbmcgY29uZGl0aW9ucyBhbmQgbmVlZHMuIEhvd2V2ZXIsIHRoZSBwcm9jZWR1cmUgbGFpZCBkb3duIGZvciBpdHMgYW1lbmRtZW50ICAgaXMgbmVpdGhlciBhcyBlYXN5IGFzIGluIEJyaXRhaW4gbm9yIGFzIGRpZmZpY3VsdCBhcyBpbiBVU0EuIEluIG90aGVyIHdvcmRzLCB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBpcyBuZWl0aGVyICAgZmxleGlibGUgbm9yIHJpZ2lkIGJ1dCBhIHN5bnRoZXNpcyBvZiBib3RoLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGVyZSBpcyBubyBwcm92aXNpb24gZm9yIGEgc3BlY2lhbCBib2R5IGxpa2UgQ29uc3RpdHV0aW9uYWwgQ29udmVudGlvbiBsaWtlIGluICAgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIG9yIENvbnN0aXR1dGlvbmFsIEFzc2VtYmx5IGZvciBhbWVuZGluZyB0aGUgQ29uc3RpdHV0aW9uLiBUaGUgY29uc3RpdHVlbnQgICBwb3dlciBpcyB2ZXN0ZWQgaW4gdGhlIFBhcmxpYW1lbnQgYW5kIG9ubHkgaW4gZmV3IGNhc2VzLCBpbiB0aGUgc3RhdGUgbGVnaXNsYXR1cmVzLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgcG93ZXIgdG8gaW5pdGlhdGUgYW4gYW1lbmRtZW50IHRvIHRoZSBDb25zdGl0dXRpb24gbGllcyB3aXRoIHRoZSAgIFBhcmxpYW1lbnQgaW4gSW5kaWEuIEluIFVuaXRlZCBzdGF0ZXMgb2YgQW1lcmljYSwgYm90aCBGZWRlcmFsIGxlZ2lzbGF0dXJlIGFuZCBTdGF0ZSBsZWdpc2xhdHVyZSBoYXZlIHRoZSAgIHJpZ2h0IHRvIGluaXRpYXRlIHRoZSBhbWVuZG1lbnQgb2YgdGhlIGNvbnN0aXR1dGlvbi4gSG93ZXZlciwgaW4gSW5kaWEsIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMgY2Fubm90ICAgaW5pdGlhdGUgYW55IGJpbGwgb3IgcHJvcG9zYWwgZm9yIGFtZW5kaW5nIHRoZSBDb25zdGl0dXRpb24gZXhjZXB0IGluIG9uZSBjYXNlIHRoYXQgaXMsIHBhc3NpbmcgYSByZXNvbHV0aW9uICAgcmVxdWVzdGluZyB0aGUgUGFybGlhbWVudCBmb3IgdGhlIGNyZWF0aW9uIG9yIGFib2xpdGlvbiBvZiBsZWdpc2xhdGl2ZSBjb3VuY2lscyBpbiB0aGUgc3RhdGVzLiBIZXJlIGFsc28sIHRoZSAgIFBhcmxpYW1lbnQgY2FuIGVpdGhlciBhcHByb3ZlIG9yIGRpc2FwcHJvdmUgc3VjaCBhIHJlc29sdXRpb24gb3IgbWF5IG5vdCB0YWtlIGFueSBhY3Rpb24gb24gaXQuICAgIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTSBMYXhtaWthbnRoIDZ0aCBlZGl0aW9uIHBkZi4gQ2hhcHRlciBuYW1lLUFtZW5kbWVudCBvZiB0aGUgY29uc3RpdHV0aW9uLiAgIFBhZ2Ugbm8tIDI4My4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 2,
      "question" : "Before entering upon his office, the  President has to subscribe to an oath or  affirmation, which of the following is correct  with reference to presidents' oath or  affirmation?  1.  To faithfully execute the office   2.  To preserve, protect and defend the  Constitution and the law   3.  To devote himself to the service and well- being of the people of India  Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgQmVmb3JlIGVudGVyaW5nIHVwb24gaGlzIG9mZmljZSwgdGhlIFByZXNpZGVudCBoYXMgdG8gbWFrZSBhbmQgc3Vic2NyaWJlIHRvIGFuIG9hdGggb3IgYWZmaXJtYXRpb24uIEluICAgaGlzIG9hdGgsIHRoZSBQcmVzaWRlbnQgc3dlYXJzOiAgICAxKSBUbyBmYWl0aGZ1bGx5IGV4ZWN1dGUgdGhlIG9mZmljZTsgICAgMikgVG8gcHJlc2VydmUsIHByb3RlY3QgYW5kIGRlZmVuZCB0aGUgQ29uc3RpdHV0aW9uIGFuZCB0aGUgbGF3OyBhbmQgICAgMykgVG8gZGV2b3RlIGhpbXNlbGYgdG8gdGhlIHNlcnZpY2UgYW5kIHdlbGwtYmVpbmcgb2YgdGhlIHBlb3BsZSBvZiBJbmRpYS4gICAgVGhlIG9hdGggb2Ygb2ZmaWNlIHRvIHRoZSBQcmVzaWRlbnQgaXMgYWRtaW5pc3RlcmVkIGJ5IHRoZSBDaGllZiBKdXN0aWNlIG9mIEluZGlhIGFuZCBpbiBoaXMgYWJzZW5jZSwgdGhlICAgc2VuaW9yIG1vc3QganVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQgYXZhaWxhYmxlLiBBbnkgb3RoZXIgcGVyc29uIGFjdGluZyBhcyBQcmVzaWRlbnQgb3IgZGlzY2hhcmdpbmcgICB0aGUgZnVuY3Rpb25zIG9mIHRoZSBQcmVzaWRlbnQgYWxzbyB1bmRlcnRha2VzIHRoZSBzaW1pbGFyIG9hdGggb3IgYWZmaXJtYXRpb24uICAgIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTSBMYXhtaWthbnRoIDZ0aCBlZGl0aW9uIHBkZi4gQ2hhcHRlciBuYW1lLVByZXNpZGVudC4gUGFnZSBuby0gNDEyLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements with  reference to the veto powers of president:   1.  Absolute veto can be used by President with  respect to the bills introduced by any  Member of Parliament who is not a minister.   2.  Absolute veto can be exercised with respect  to the government bills when the cabinet  resigns.   3.  President of India is vested with pocket veto  and qualified veto.   Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBYnNvbHV0ZSB2ZXRvIHJlZmVycyB0byB0aGUgcG93ZXIgb2YgdGhlIFByZXNpZGVudCB0byB3aXRoaG9sZCBoaXMgYXNzZW50IHRvIGEgYmlsbCAgIHBhc3NlZCBieSB0aGUgUGFybGlhbWVudC4gVGhlIGJpbGwgdGhlbiBlbmRzIGFuZCBkb2VzIG5vdCBiZWNvbWUgYW4gYWN0LiBVc3VhbGx5LCBhbiBhYnNvbHV0ZSB2ZXRvIGlzICAgZXhlcmNpc2VkIHdpdGggcmVzcGVjdCB0byBwcml2YXRlIG1lbWJlcnMnIGJpbGxzIChpLmUuLCBiaWxscyBpbnRyb2R1Y2VkIGJ5IGFueSBtZW1iZXIgb2YgUGFybGlhbWVudCAgIHdobyBpcyBub3QgYSBtaW5pc3RlcikuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFic29sdXRlIHZldG8gY2FuIGJlIGV4ZXJjaXNlZCB3aXRoIHJlc3BlY3QgdG8gdGhlIGdvdmVybm1lbnQgYmlsbHMgd2hlbiB0aGUgICBjYWJpbmV0IHJlc2lnbnMgKGFmdGVyIHRoZSBwYXNzYWdlIG9mIHRoZSBiaWxscyBidXQgYmVmb3JlIHRoZSBhc3NlbnQgYnkgdGhlIFByZXNpZGVudCkgYW5kIHRoZSBuZXcgICBjYWJpbmV0IGFkdmlzZXMgdGhlIFByZXNpZGVudCBub3QgdG8gZ2l2ZSBoaXMgYXNzZW50IHRvIHN1Y2ggYmlsbHMuIEluIDE5NTQsIFByZXNpZGVudCBEci4gUmFqZW5kcmEgUHJhc2FkICAgd2l0aGhlbGQgaGlzIGFzc2VudCB0byB0aGUgUEVQU1UgQXBwcm9wcmlhdGlvbiBCaWxsLiBUaGUgYmlsbCB3YXMgcGFzc2VkIGJ5IHRoZSBQYXJsaWFtZW50IHdoZW4gdGhlICAgUHJlc2lkZW50J3MgUnVsZSB3YXMgaW4gb3BlcmF0aW9uIGluIHRoZSBzdGF0ZSBvZiBQRVBTVS4gQnV0LCB3aGVuIHRoZSBiaWxsIHdhcyBwcmVzZW50ZWQgdG8gdGhlIFByZXNpZGVudCAgIGZvciBoaXMgYXNzZW50LCB0aGUgUHJlc2lkZW50J3MgUnVsZSB3YXMgcmV2b2tlZC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgdmV0byBwb3dlciBlbmpveWVkIGJ5IHRoZSBleGVjdXRpdmUgaW4gbW9kZXJuIHN0YXRlcyBjYW4gYmUgY2xhc3NpZmllZCBpbnRvICAgdGhlIGZvbGxvd2luZyBmb3VyIHR5cGVzOiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgMSkgQWJzb2x1dGUgdmV0byB3aGljaCBpcywgd2l0aGhvbGRpbmcgb2YgYXNzZW50IHRvIHRoZSBiaWxsIHBhc3NlZCBieSB0aGUgbGVnaXNsYXR1cmUuICAgIDIpICBRdWFsaWZpZWQgdmV0bywgd2hpY2ggY2FuIGJlIG92ZXJyaWRkZW4gYnkgdGhlIGxlZ2lzbGF0dXJlIHdpdGggYSBoaWdoZXIgbWFqb3JpdHkuICAgIDMpIFN1c3BlbnNpdmUgdmV0bywgd2hpY2ggY2FuIGJlIG92ZXJyaWRkZW4gYnkgdGhlIGxlZ2lzbGF0dXJlIHdpdGggYW4gb3JkaW5hcnkgbWFqb3JpdHkuICAgIDQpICBQb2NrZXQgdmV0byB3aGljaCBpcywgdGFraW5nIG5vIGFjdGlvbiBvbiB0aGUgYmlsbCBwYXNzZWQgYnkgdGhlIGxlZ2lzbGF0dXJlLiAgICBPZiB0aGUgYWJvdmUgZm91ciwgdGhlIFByZXNpZGVudCBvZiBJbmRpYSBpcyB2ZXN0ZWQgd2l0aCB0aHJlZS0gYWJzb2x1dGUgdmV0bywgc3VzcGVuc2l2ZSB2ZXRvIGFuZCAgIHBvY2tldCB2ZXRvLiBUaGVyZSBpcyBubyBxdWFsaWZpZWQgdmV0byBpbiB0aGUgY2FzZSBvZiBJbmRpYW4gUHJlc2lkZW50OyBpdCBpcyBwb3NzZXNzZWQgYnkgdGhlIEFtZXJpY2FuICAgUHJlc2lkZW50LiAgICBTb3VyY2U6ICBJbmRpYW4gcG9saXR5IGJ5IE0gTGF4bWlrYW50aCA2dGggZWRpdGlvbiBwZGYuIENoYXB0ZXIgbmFtZS1QcmVzaWRlbnQuIFBhZ2Ugbm8tIDQyMS4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 4,
      "question" : "The ordinance-making power is the most  important legislative power of the President in  Indian Polity. In this context, consider the  following statements:   1.  An ordinance can be issued by the President  when only one House of the Parliament is in  session.   2.  The President can make an ordinance only  when he is satisfied that the circumstances  exist that render it necessary for him to take  immediate action.   3.  The President's decision to issue an  ordinance cannot be questioned in a court  under any circumstances.   4.  The President can also withdraw an  ordinance at any time as it falls under his  discretionary power.   Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcnRpY2xlIDEyMyBvZiB0aGUgQ29uc3RpdHV0aW9uIGVtcG93ZXJzIHRoZSBQcmVzaWRlbnQgdG8gcHJvbXVsZ2F0ZSBvcmRpbmFuY2VzIGR1cmluZyB0aGUgcmVjZXNzIG9mICAgUGFybGlhbWVudC4gVGhlc2Ugb3JkaW5hbmNlcyBoYXZlIHRoZSBzYW1lIGZvcmNlIGFuZCBlZmZlY3QgYXMgYW4gYWN0IG9mIFBhcmxpYW1lbnQsIGJ1dCBhcmUgaW4gdGhlIG5hdHVyZSAgIG9mIHRlbXBvcmFyeSBsYXdzLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBIZSBjYW4gcHJvbXVsZ2F0ZSBhbiBvcmRpbmFuY2Ugb25seSB3aGVuIGJvdGggdGhlIEhvdXNlcyBvZiBQYXJsaWFtZW50IGFyZSAgIG5vdCBpbiBzZXNzaW9uIG9yIHdoZW4gZWl0aGVyIG9mIHRoZSB0d28gSG91c2VzIG9mIFBhcmxpYW1lbnQgaXMgbm90IGluIHNlc3Npb24uIEFuIG9yZGluYW5jZSBjYW4gYWxzbyBiZSAgIGlzc3VlZCB3aGVuIG9ubHkgb25lIEhvdXNlIGlzIGluIHNlc3Npb24gYmVjYXVzZSBhIGxhdyBjYW4gYmUgcGFzc2VkIGJ5IGJvdGggdGhlIEhvdXNlcyBhbmQgbm90IGJ5ICAgb25lIEhvdXNlIGFsb25lLiBBbiBvcmRpbmFuY2UgbWFkZSB3aGVuIGJvdGggdGhlIEhvdXNlcyBhcmUgaW4gc2Vzc2lvbiBpcyB2b2lkLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBIZSBjYW4gbWFrZSBhbiBvcmRpbmFuY2Ugb25seSB3aGVuIGhlIGlzIHNhdGlzZmllZCB0aGF0IHRoZSBjaXJjdW1zdGFuY2VzIGV4aXN0ICAgdGhhdCByZW5kZXIgaXQgbmVjZXNzYXJ5IGZvciBoaW0gdG8gdGFrZSBpbW1lZGlhdGUgYWN0aW9uLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluIENvb3BlciBjYXNlLCAoMTk3MCksIHRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgUHJlc2lkZW50J3Mgc2F0aXNmYWN0aW9uICAgY2FuIGJlIHF1ZXN0aW9uZWQgaW4gYSBjb3VydCBvbiB0aGUgZ3JvdW5kIG9mIG1hbGFmaWRlLiBUaGlzIG1lYW5zIHRoYXQgdGhlIGRlY2lzaW9uIG9mIHRoZSBQcmVzaWRlbnQgdG8gICBpc3N1ZSBhbiBvcmRpbmFuY2UgY2FuIGJlIHF1ZXN0aW9uZWQgaW4gYSBjb3VydCBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhlIFByZXNpZGVudCBoYXMgcHJvcm9ndWVkIG9uZSAgIEhvdXNlIG9yIGJvdGggSG91c2VzIG9mIFBhcmxpYW1lbnQgZGVsaWJlcmF0ZWx5IHdpdGggYSB2aWV3IHRvIHByb211bGdhdGUgYW4gb3JkaW5hbmNlIG9uIGEgICBjb250cm92ZXJzaWFsIHN1YmplY3QsIHNvIGFzIHRvIGJ5cGFzcyB0aGUgcGFybGlhbWVudGFyeSBkZWNpc2lvbiBhbmQgdGhlcmVieSBjaXJjdW12ZW50aW5nIHRoZSBhdXRob3JpdHkgICBvZiB0aGUgUGFybGlhbWVudC4gICAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBUaGUgUHJlc2lkZW50IGNhbiBhbHNvIHdpdGhkcmF3IGFuIG9yZGluYW5jZSBhdCBhbnkgdGltZS4gSG93ZXZlciwgaGlzICAgcG93ZXIgb2Ygb3JkaW5hbmNlLW1ha2luZyBpcyBub3QgYSBkaXNjcmV0aW9uYXJ5IHBvd2VyLCBhbmQgaGUgY2FuIHByb211bGdhdGUgb3Igd2l0aGRyYXcgYW4gICBvcmRpbmFuY2Ugb25seSBvbiB0aGUgYWR2aWNlIG9mIHRoZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBoZWFkZWQgYnkgdGhlIHByaW1lIG1pbmlzdGVyLiAgICBTb3VyY2U6ICBDaC0xNyBMYXhtaWthbnQgNnRoIEVkaXRpb24ucGRmICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1, 2 and 4 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements:   1.  A semi-presidential system is a form of  government that combines elements of  presidential democracy with parliamentary  democracy.   2.  A presidential system is a form of  government in which the president is the  chief executive and is elected directly by the  people.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBIHNlbWktcHJlc2lkZW50aWFsIHN5c3RlbSBpcyByZXB1YmxpY2FuIHN5c3RlbSBvZiBnb3Zlcm5hbmNlIHRoYXQgY29tYmluZXMgICBlbGVtZW50cyBvZiBwcmVzaWRlbnRpYWwgZGVtb2NyYWN5IHdpdGggcGFybGlhbWVudGFyeSBkZW1vY3JhY3kuIFR5cGljYWxseSwgdGhlIGhlYWQgb2Ygc3RhdGUgaXMgdGhlICAgcHJlc2lkZW50LCBkaXJlY3RseSBlbGVjdGVkIGJ5IHRoZSBwZW9wbGUgd2l0aCBhIGxhcmdlIGRlZ3JlZSBvZiBwb3dlciBvdmVyIHRoZSBnb3Zlcm5tZW50LCB3aGlsc3QgdGhlICAgaGVhZCBvZiBnb3Zlcm5tZW50IGlzIHRoZSBwcmltZSBtaW5pc3RlciBub21pbmF0ZWQgYnkgdGhlIHByZXNpZGVudCBidXQgd2hvIGNhbiBiZSBkaXNtaXNzZWQgYnkgdGhlICAgbGVnaXNsYXR1cmUuIEFuIGFncmVlbWVudCBpcyByZWFjaGVkIG92ZXIgd2hpY2ggb2YgdGhlIHR3byBoZWFkcyAoc3RhdGUgYW5kIGdvdmVybm1lbnQpIHdpbGwgaGF2ZSB0aGUgICBsZWFkIGluIHBvbGljeSBhcmVhcy4gRm9yIGV4YW1wbGUsIGluIEZyYW5jZSwgYSB3ZWxsLWtub3duIGV4YW1wbGUgb2Ygc2VtaSBwcmVzaWRlbnRpYWwgZGVtb2NyYWN5LCB0aGUgICBwcmVzaWRlbnQgbGVhZHMgZm9yZWlnbiBwb2xpY3kgYW5kIHRoZSBwcmltZSBtaW5pc3RlciBsZWFkcyBkb21lc3RpYyBwb2xpY3kuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBwcmVzaWRlbnRpYWwgc3lzdGVtIGlzIGEgZm9ybSBvZiBnb3Zlcm5tZW50IGluIHdoaWNoIHRoZSBwcmVzaWRlbnQgaXMgdGhlICAgY2hpZWYgZXhlY3V0aXZlIGFuZCBpcyBlbGVjdGVkIGRpcmVjdGx5IGJ5IHRoZSBwZW9wbGUuICBUaGUgcHJlc2lkZW50IG5vcm1hbGx5IHNlcnZlcyBhcyBib3RoIHRoZSBoZWFkIG9mICAgc3RhdGUgYW5kIHRoZSBoZWFkIG9mIGdvdmVybm1lbnQuIFVzdWFsbHksIHRoZSB0ZXJtIG9mIG9mZmljZSBvZiB0aGUgcHJlc2lkZW50IGlzIGZpeGVkLCB3aXRoIG5vIHBvbGl0aWNhbCAgIGFjY291bnRhYmlsaXR5IHRvIHRoZSBsZWdpc2xhdHVyZSAob3IgZGVwZW5kZW5jZSBvbiB0aGUgc3VwcG9ydCBvZiB0aGUgcG9saXRpY2FsIHBhcnRpZXMpLCBpbmNsdWRpbmcgdGhlICAgY2FiaW5ldCB3aG9zZSBhdXRob3JpdHkgZGVyaXZlcyBleGNsdXNpdmVseSBmcm9tIHRoZSBwcmVzaWRlbnQuICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBLbm93bGVkZ2UgQmFzZTogRXhhbXBsZXMgb2YgY291bnRyaWVzIHRoYXQgcHJhY3RpY2UgYSBzZW1pLXByZXNpZGVudGlhbCBzeXN0ZW0gb2YgZ292ZXJuYW5jZSBhcmUgICBJcmVsYW5kLCBQb2xhbmQsIFNsb3ZlbmlhLCBBdXN0cmlhLCBQb3J0dWdhbCwgUm9tYW5pYSwgTW9uZ29saWEsIFNvdXRoIEtvcmVhLCBVa3JhaW5lLCBCdWxnYXJpYSwgRmlubGFuZCwgICBSdXNzaWEsIExpdGh1YW5pYSwgU3JpIExhbmthLCBIYWl0aSwgTmFtaWJpYSwgYW5kIEd1eWFuYS4gICAgIEF0IHByZXNlbnQgY291bnRyaWVzIGxpa2UgVVNBLCBCcmF6aWwsIFNyaSBMYW5rYSBldGMuIGFyZSBoYXZpbmcgUHJlc2lkZW50aWFsIGZvcm0gb2YgZ292ZXJubWVudC4gICAgU291cmNlOiBodHRwczovL3d3dy53b3JsZGF0bGFzLmNvbS9hcnRpY2xlcy93aGF0LWlzLWEtc2VtaS1wcmVzaWRlbnRpYWwtc3lzdGVtLW9mLSAgZ292ZXJubWVudC5odG1sICAgIGh0dHBzOi8vd3d3Lm9lY2QtaWxpYnJhcnkub3JnL3NpdGVzLzAyNWMzOTA5LSAgZW4vaW5kZXguaHRtbD9pdGVtSWQ9L2NvbnRlbnQvY29tcG9uZW50LzAyNWMzOTA5LWVuICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 6,
      "question" : "All doubts and disputes in connection with  his election are inquired into and decided by  the Supreme Court whose decision is final. His  election cannot be challenged on the ground  that the electoral college was incomplete. If his  election is declared void by the Supreme Court,  acts done by him before the date of such  declaration of the Supreme Court are not  invalidated.     The above paragraph refers to the election of:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgVmljZS1QcmVzaWRlbnQgb2YgSW5kaWEgaXMgZWxlY3RlZCBub3QgZGlyZWN0bHkgYnkgdGhlIHBlb3BsZSBidXQgYnkgdGhlIG1ldGhvZCBvZiBpbmRpcmVjdCBlbGVjdGlvbi4gICBIZSBpcyBlbGVjdGVkIGJ5IHRoZSBtZW1iZXJzIG9mIGFuIGVsZWN0b3JhbCBjb2xsZWdlIGNvbnNpc3Rpbmcgb2YgdGhlIG1lbWJlcnMgb2YgYm90aCBIb3VzZXMgb2YgICBQYXJsaWFtZW50LiAgICBPcHRpb24gYSBpcyBjb3JyZWN0OiBBbGwgZG91YnRzIGFuZCBkaXNwdXRlcyBpbiBjb25uZWN0aW9uIHdpdGggZWxlY3Rpb24gb2YgdGhlIFZpY2UtIFByZXNpZGVudCBhcmUgICBpbnF1aXJlZCBpbnRvIGFuZCBkZWNpZGVkIGJ5IHRoZSBTdXByZW1lIENvdXJ0IHdob3NlIGRlY2lzaW9uIGlzIGZpbmFsLiBUaGUgZWxlY3Rpb24gb2YgYSBwZXJzb24gYXMgICBWaWNlLVByZXNpZGVudCBjYW5ub3QgYmUgY2hhbGxlbmdlZCBvbiB0aGUgZ3JvdW5kIHRoYXQgdGhlIGVsZWN0b3JhbCBjb2xsZWdlIHdhcyBpbmNvbXBsZXRlIChpLmUuLCAgIGV4aXN0ZW5jZSBvZiBhbnkgdmFjYW5jeSBhbW9uZyB0aGUgbWVtYmVycyBvZiBlbGVjdG9yYWwgY29sbGVnZSkuICAgICBJZiB0aGUgZWxlY3Rpb24gb2YgYSBwZXJzb24gYXMgVmljZSBQcmVzaWRlbnQgaXMgZGVjbGFyZWQgdm9pZCBieSB0aGUgU3VwcmVtZSBDb3VydCwgYWN0cyBkb25lIGJ5IGhpbSAgIGJlZm9yZSB0aGUgZGF0ZSBvZiBzdWNoIGRlY2xhcmF0aW9uIG9mIHRoZSBTdXByZW1lIENvdXJ0IGFyZSBub3QgaW52YWxpZGF0ZWQgKGkuZS4sIHRoZXkgY29udGludWUgdG8gcmVtYWluICAgaW4gZm9yY2UpLiAgICAgICBTb3VyY2U6ICBDaC0xOCBMYXhtaWthbnQgNnRoIEVkaXRpb24ucGRmICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Vice President of India   ",
        "option2" : "Governor of a State   ",
        "option3" : "Leader of the Opposition in the Lok Sabha   ",
        "option4" : "Deputy Speaker of the Rajya Sabha           "
      }
    },
    {
      "index" : 7,
      "question" : "With reference to the powers and  functions of Prime Minister in relation to  council of ministers, consider the following  statements:   1.  S/he appoints the ministers from the  candidates elected to Parliament.     2.  S/he allocates and reshuffles various  portfolios among the ministers.    3.  S/he can dismiss a minister in case of  difference of opinion.    4.  S/he can bring about the collapse of the  council of ministers by resigning from  office.    Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBJbiB0aGUgc2NoZW1lIG9mIHBhcmxpYW1lbnRhcnkgc3lzdGVtIG9mIGdvdmVybm1lbnQgcHJvdmlkZWQgYnkgdGhlIGNvbnN0aXR1dGlvbiwgdGhlIFByZXNpZGVudCBpcyB0aGUgICBub21pbmFsIGV4ZWN1dGl2ZSBhdXRob3JpdHkgKGRlIGp1cmUgZXhlY3V0aXZlKSBhbmQgUHJpbWUgTWluaXN0ZXIgaXMgdGhlIHJlYWwgZXhlY3V0aXZlIGF1dGhvcml0eSAoZGUgZmFjdG8gICBleGVjdXRpdmUpLiBJbiBvdGhlciB3b3JkcywgcHJlc2lkZW50IGlzIHRoZSBoZWFkIG9mIHRoZSBTdGF0ZSB3aGlsZSBQcmltZSBNaW5pc3RlciBpcyB0aGUgaGVhZCBvZiB0aGUgICBnb3Zlcm5tZW50LiAgICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogUHJpbWUgTWluaXN0ZXIgb25seSByZWNvbW1lbmRzIHBlcnNvbnMgd2hvIGNhbiBiZSBhcHBvaW50ZWQgYXMgbWluaXN0ZXJzICAgYnkgdGhlIFByZXNpZGVudC4gVGhlIFByZXNpZGVudCBjYW4gYXBwb2ludCBvbmx5IHRob3NlIHBlcnNvbnMgYXMgbWluaXN0ZXJzIHdobyBhcmUgcmVjb21tZW5kZWQgYnkgICB0aGUgUHJpbWUgTWluaXN0ZXIuICAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQcmltZSBNaW5pc3RlciBhbGxvY2F0ZXMgYW5kIHJlc2h1ZmZsZXMgdmFyaW91cyBwb3J0Zm9saW9zIGFtb25nIHRoZSBtaW5pc3RlcnMuICAgSGUgcHJlc2lkZXMgb3ZlciB0aGUgbWVldGluZyBvZiBjb3VuY2lsIG9mIG1pbmlzdGVycyBhbmQgaW5mbHVlbmNlcyBpdHMgZGVjaXNpb25zLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBQcmltZSBNaW5pc3RlciBjYW4gYXNrIGEgbWluaXN0ZXIgdG8gcmVzaWduIG9yIGFkdmlzZSB0aGUgUHJlc2lkZW50IHRvIGRpc21pc3MgICBoaW0gaW4gY2FzZSBvZiBkaWZmZXJlbmNlIG9mIG9waW5pb24uICAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBQcmltZSBNaW5pc3RlciBjYW4gYnJpbmcgYWJvdXQgdGhlIGNvbGxhcHNlIG9mIHRoZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBieSAgIHJlc2lnbmluZyBmcm9tIG9mZmljZS4gU2luY2UgdGhlIFByaW1lIE1pbmlzdGVyIHN0YW5kcyBhdCB0aGUgaGVhZCBvZiB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMsIHRoZSBvdGhlciAgIG1pbmlzdGVycyBjYW5ub3QgZnVuY3Rpb24gd2hlbiB0aGUgUHJpbWUgTWluaXN0ZXIgcmVzaWducyBvciBkaWVzLiBJbiBvdGhlciB3b3JkcywgdGhlIHJlc2lnbmF0aW9uIG9yICAgZGVhdGggb2YgYW4gaW5jdW1iZW50IFByaW1lIE1pbmlzdGVyIGF1dG9tYXRpY2FsbHkgZGlzc29sdmVzIHRoZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBhbmQgdGhlcmVieSAgIGdlbmVyYXRlcyBhIHZhY3V1bS4gICAgIFNvdXJjZTogIENoLTE4IExheG1pa2FudCA2dGggRWRpdGlvbi5wZGYgICAgICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4     "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to the 'appointment of the  Prime Minister', consider the following  statements:   1.  A person who is not a member of Parliament  can't be appointed as Prime Minister.   2.  A person has to prove his majority in the Lok  Sabha before he is appointed as the Prime  Minister.     3.  When no party has a clear majority in the  Lok Sabha, then the President may exercise  his personal discretion to appoint the Prime  Minister.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBcHBvaW50bWVudCBvZiB0aGUgUHJpbWUgTWluaXN0ZXIgICAgICBUaGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IGNvbnRhaW4gYW55IHNwZWNpZmljIHByb2NlZHVyZSBmb3IgdGhlIHNlbGVjdGlvbiBhbmQgYXBwb2ludG1lbnQgb2YgdGhlIFByaW1lICAgTWluaXN0ZXIuIEFydGljbGUgNzUgc2F5cyBvbmx5IHRoYXQgdGhlIFByaW1lIE1pbmlzdGVyIHNoYWxsIGJlIGFwcG9pbnRlZCBieSB0aGUgcHJlc2lkZW50LiBIb3dldmVyLCB0aGlzICAgZG9lcyBub3QgaW1wbHkgdGhhdCB0aGUgcHJlc2lkZW50IGlzIGZyZWUgdG8gYXBwb2ludCBhbnkgb25lIGFzIHRoZSBQcmltZSBNaW5pc3Rlci4gICAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEluIDE5ODAsIHRoZSBEZWxoaSBIaWdoIENvdXJ0IGhlbGQgdGhhdCB0aGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IHJlcXVpcmUgdGhhdCAgIGEgcGVyc29uIG11c3QgcHJvdmUgaGlzIG1ham9yaXR5IGluIHRoZSBMb2sgU2FiaGEgYmVmb3JlIGhlIGlzIGFwcG9pbnRlZCBhcyB0aGUgUHJpbWUgTWluaXN0ZXIuIFRoZSAgIFByZXNpZGVudCBtYXkgZmlyc3QgYXBwb2ludCBoaW0gdGhlIFByaW1lIE1pbmlzdGVyIGFuZCB0aGVuIGFzayBoaW0gdG8gcHJvdmUgaGlzIG1ham9yaXR5IGluIHRoZSBMb2sgICBTYWJoYSB3aXRoaW4gYSByZWFzb25hYmxlIHBlcmlvZC4gRm9yIGV4YW1wbGUsIENoYXJhbiBTaW5naCAoMTk3OSksIFYuUC4gU2luZ2ggKDE5ODkpLCBDaGFuZHJhc2VraGFyICAgKDE5OTApLCBQLlYuIE5hcmFzaW1oYSBSYW8gKDE5OTEpLCBBLkIuIFZhanlhcGVlICgxOTk2KSwgRGV2ZSBHb3dkYSAoMTk5NiksIEkuSy4gR3VqcmFsICgxOTk3KSBhbmQgYWdhaW4gQS5CLiAgIFZhanBheWVlICgxOTk4KSB3ZXJlIGFwcG9pbnRlZCBhcyBQcmltZSBNaW5pc3RlcnMgaW4gdGhpcyB3YXkuICAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJbiAxOTk3LCB0aGUgU3VwcmVtZSBDb3VydCBoZWxkIHRoYXQgYSBwZXJzb24gd2hvIGlzIG5vdCBhIG1lbWJlciBvZiBlaXRoZXIgICBIb3VzZSBvZiBQYXJsaWFtZW50IGNhbiBiZSBhcHBvaW50ZWQgYXMgUHJpbWUgTWluaXN0ZXIgZm9yIHNpeCBtb250aHMsIHdpdGhpbiB3aGljaCwgaGUgc2hvdWxkICAgYmVjb21lIGEgbWVtYmVyIG9mIGVpdGhlciBIb3VzZSBvZiBQYXJsaWFtZW50OyBvdGhlcndpc2UsIGhlIGNlYXNlcyB0byBiZSB0aGUgUHJpbWUgTWluaXN0ZXIuICAgQ29uc3RpdHV0aW9uYWxseSwgdGhlIFByaW1lIE1pbmlzdGVyIG1heSBiZSBhIG1lbWJlciBvZiBhbnkgb2YgdGhlIHR3byBIb3VzZXMgb2YgcGFybGlhbWVudC4gRm9yICAgZXhhbXBsZSwgdGhyZWUgUHJpbWUgTWluaXN0ZXJzLCBJbmRpcmEgR2FuZGhpICgxOTY2KSwgRGV2ZSBHb3dkYSAoMTk5NikgYW5kIE1hbm1vaGFuIFNpbmdoICgyMDA0KSwgICB3ZXJlIG1lbWJlcnMgb2YgdGhlIFJhanlhIFNhYmhhLiAgICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEluIGFjY29yZGFuY2Ugd2l0aCB0aGUgY29udmVudGlvbnMgb2YgdGhlIHBhcmxpYW1lbnRhcnkgc3lzdGVtIG9mIGdvdmVybm1lbnQsICAgdGhlIFByZXNpZGVudCBoYXMgdG8gYXBwb2ludCB0aGUgbGVhZGVyIG9mIHRoZSBtYWpvcml0eSBwYXJ0eSBpbiB0aGUgTG9rIFNhYmhhIGFzIHRoZSBQcmltZSBNaW5pc3Rlci4gQnV0LCAgIHdoZW4gbm8gcGFydHkgaGFzIGEgY2xlYXIgbWFqb3JpdHkgaW4gdGhlIExvayBTYWJoYSwgdGhlbiB0aGUgUHJlc2lkZW50IG1heSBleGVyY2lzZSBoaXMgcGVyc29uYWwgICBkaXNjcmV0aW9uIGluIHRoZSBzZWxlY3Rpb24gYW5kIGFwcG9pbnRtZW50IG9mIHRoZSBQcmltZSBNaW5pc3Rlci4gSW4gc3VjaCBhIHNpdHVhdGlvbiwgdGhlIFByZXNpZGVudCAgIHVzdWFsbHkgYXBwb2ludHMgdGhlIGxlYWRlciBvZiB0aGUgbGFyZ2VzdCBwYXJ0eSBvciBjb2FsaXRpb24gaW4gdGhlIExvayBTYWJoYSBhcyB0aGUgUHJpbWUgTWluaXN0ZXIgYW5kICAgYXNrcyBoaW0gdG8gc2VlayBhIHZvdGUgb2YgY29uZmlkZW5jZSBpbiB0aGUgSG91c2Ugd2l0aGluIGEgbW9udGguICAgICAgU291cmNlOiAgQ2gtMTggTGF4bWlrYW50IDZ0aCBFZGl0aW9uLnBkZiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only   ",
        "option3" : "3 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 9,
      "question" : "Who among the following remains in office  during the pleasure of the President of India?   1. The Prime Minister   2. Comptroller and Auditor General of India   3. Attorney General for India   4. Chief Election Commissioner    Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgdGVybSAnaG9sZGluZyBvZmZpY2UgYXQgdGhlIHBsZWFzdXJlIG9mIHRoZSBQcmVzaWRlbnQnIG1lYW5zIHRoYXQgdGhlcmUncyBubyBzZWN1cml0eSBvZiB0ZW51cmUgYW5kIG5vICAgdGVudXJlIGhhcyBiZWVuIGZpeGVkIGJ5IHRoZSBDb25zdGl0dXRpb24uICAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IFRoZSB0ZXJtIG9mIHRoZSBQcmltZSBNaW5pc3RlciBpcyBub3QgZml4ZWQgYW5kIGhlIGhvbGRzIG9mZmljZSBkdXJpbmcgdGhlIHBsZWFzdXJlICAgb2YgdGhlIHByZXNpZGVudC4gSG93ZXZlciwgdGhpcyBkb2VzIG5vdCBtZWFuIHRoYXQgdGhlIHByZXNpZGVudCBjYW4gZGlzbWlzcyB0aGUgUHJpbWUgTWluaXN0ZXIgYXQgYW55ICAgdGltZS4gU28gbG9uZyBhcyB0aGUgUHJpbWUgTWluaXN0ZXIgZW5qb3lzIHRoZSBtYWpvcml0eSBzdXBwb3J0IGluIHRoZSBMb2sgU2FiaGEsIGhlIGNhbm5vdCBiZSAgIGRpc21pc3NlZCBieSB0aGUgUHJlc2lkZW50LiAgICAgT3B0aW9ucyAyIGlzIGluY29ycmVjdDogVGhlIENBRyBpcyBhcHBvaW50ZWQgYnkgdGhlIHByZXNpZGVudCBvZiBJbmRpYSBieSBhIHdhcnJhbnQgdW5kZXIgaGlzIGhhbmQgYW5kICAgc2VhbC4gSG93ZXZlciwgaGUgZG9lcyBub3QgaG9sZCBvZmZpY2UgYXQgdGhlIHBsZWFzdXJlIG9mIHRoZSBQcmVzaWRlbnQuIEhlIGhvbGRzIG9mZmljZSBmb3IgYSBwZXJpb2Qgb2YgICBzaXggeWVhcnMgb3IgdXAgdG8gdGhlIGFnZSBvZiA2NSB5ZWFycywgd2hpY2hldmVyIGlzIGVhcmxpZXIuIEhlIGNhbiByZXNpZ24gYW55IHRpbWUgZnJvbSBoaXMgb2ZmaWNlIGJ5ICAgYWRkcmVzc2luZyB0aGUgcmVzaWduYXRpb24gbGV0dGVyIHRvIHRoZSBwcmVzaWRlbnQuIEhlIGNhbiBhbHNvIGJlIHJlbW92ZWQgYnkgdGhlIHByZXNpZGVudCBvbiBzYW1lICAgZ3JvdW5kcyBhbmQgaW4gdGhlIHNhbWUgbWFubmVyIGFzIGEganVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQuICAgIE9wdGlvbiAzIGlzIGNvcnJlY3Q6IFRoZSB0ZXJtIG9mIG9mZmljZSBvZiB0aGUgQXR0b3JuZXkgR2VuZXJhbCBpcyBub3QgZml4ZWQgYnkgdGhlIENvbnN0aXR1dGlvbi4gRnVydGhlciwgICB0aGUgQ29uc3RpdHV0aW9uIGRvZXMgbm90IGNvbnRhaW4gdGhlIHByb2NlZHVyZSBhbmQgZ3JvdW5kcyBmb3IgaGlzIHJlbW92YWwuIEhlIGhvbGRzIG9mZmljZSBkdXJpbmcgICB0aGUgcGxlYXN1cmUgb2YgdGhlIHByZXNpZGVudC4gVGhpcyBtZWFucyB0aGF0IGhlIG1heSBiZSByZW1vdmVkIGJ5IHRoZSBwcmVzaWRlbnQgYXQgYW55IHRpbWUuICAgIE9wdGlvbiA0IGlzIGluY29ycmVjdDogVGhlIENoaWVmIEVsZWN0aW9uIENvbW1pc3Npb25lciBkb2VzIG5vdCBob2xkIG9mZmljZSBhdCB0aGUgcGxlYXN1cmUgb2YgdGhlICAgUHJlc2lkZW50LiBIZSBob2xkcyBvZmZpY2UgZm9yIGEgdGVybSBvZiBzaXggeWVhcnMgb3IgdW50aWwgdGhleSBhdHRhaW4gdGhlIGFnZSBvZiA2NSB5ZWFycywgd2hpY2hldmVyIGlzICAgZWFybGllci4gQXMgcGVyIEFydGljbGUgMzI0LCB0aGUgY2hpZWYgZWxlY3Rpb24gY29tbWlzc2lvbmVyIGlzIHByb3ZpZGVkIHdpdGggdGhlIHNlY3VyaXR5IG9mIHRlbnVyZS4gSGUgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgY2Fubm90IGJlIHJlbW92ZWQgZnJvbSBoaXMgb2ZmaWNlIGV4Y2VwdCBpbiBzYW1lIG1hbm5lciBhbmQgb24gdGhlIHNhbWUgZ3JvdW5kcyBhcyBhIGp1ZGdlIG9mIHRoZSAgIFN1cHJlbWUgQ291cnQuICAgIFNvdXJjZTogIEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24gQ2hhcHRlci0gMTcsIDE5LCA0MiwgNTEsIDUyICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "3 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2 and 4 only    "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements with  reference to the Union Cabinet and Council of  Ministers:   1.  The Council of Ministers meets almost daily  to consider the day-to-day administration  of the government.   2.  The original Constitution did not have the  mention of the term 'Union Cabinet'.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgQ291bmNpbCBvZiBNaW5pc3RlcnMgaXMgYSB3aWRlciBib2R5IGNvbnNpc3Rpbmcgb2Ygcm91Z2hseSA2MC03MCBtaW5pc3RlcnMgd2hpbGUgdGhlIFVuaW9uIENhYmluZXQgICBpcyBhIHNtYWxsZXIgYm9keSB0aGF0IGNvbnNpc3RzIG9mIHJvdWdobHkgMTUtMjAgbWVtYmVycy4gICAgU3RhdGVtZW50cyAxIGlzIGluY29ycmVjdCBUaGUgQ291bmNpbCBvZiBNaW5pc3RlcnMgZG9lcyBub3QgbWVldCwgYXMgYSBib2R5LCB0byB0cmFuc2FjdCBnb3Zlcm5tZW50ICAgYnVzaW5lc3MuIEl0IGhhcyBubyBjb2xsZWN0aXZlIGZ1bmN0aW9ucy4gSXQgaXMgdmVzdGVkIHdpdGggYWxsIHBvd2VycyBidXQgb25seSBpbiB0aGVvcnkuIEl0cyBmdW5jdGlvbnMgYXJlICAgZGV0ZXJtaW5lZCBieSB0aGUgY2FiaW5ldC4gQXJ0aWNsZSA3NCBvZiB0aGUgQ29uc3RpdHV0aW9uIHByb3ZpZGVzIHRoYXQgJ1RoZXJlIHNoYWxsIGJlIGEgQ291bmNpbCBvZiAgIE1pbmlzdGVycyB3aXRoIHRoZSBQcmltZSBNaW5pc3RlciBhdCB0aGUgaGVhZCB0byBhaWQgYW5kIGFkdmlzZSB0aGUgUHJlc2lkZW50Jy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHRlcm0gJ1VuaW9uIENhYmluZXQnIHdhcyBpbnNlcnRlZCBpbiBBcnRpY2xlIDM1MiBvZiB0aGUgQ29uc3RpdHV0aW9uIGluIDE5NzggICBieSB0aGUgNDR0aCBDb25zdGl0dXRpb25hbCBBbWVuZG1lbnQgQWN0LiBUaHVzLCBpdCBkaWQgbm90IGZpbmQgYSBwbGFjZSBpbiB0aGUgb3JpZ2luYWwgdGV4dCBvZiB0aGUgICBDb25zdGl0dXRpb24uIE5vdyBhbHNvLCBBcnRpY2xlIDM1MiBvbmx5IGRlZmluZXMgdGhlIGNhYmluZXQgc2F5aW5nIHRoYXQgaXQgaXMgJ3RoZSBjb3VuY2lsIGNvbnNpc3Rpbmcgb2YgICB0aGUgcHJpbWUgbWluaXN0ZXIgYW5kIG90aGVyIG1pbmlzdGVycyBvZiBjYWJpbmV0IHJhbmsgYXBwb2ludGVkIHVuZGVyIEFydGljbGUgNzUnIGFuZCBkb2VzIG5vdCAgIGRlc2NyaWJlIGl0cyBwb3dlcnMgYW5kIGZ1bmN0aW9ucy4gSW4gb3RoZXIgd29yZHMsIGl0cyByb2xlIGluIG91ciBwb2xpdGljby1hZG1pbmlzdHJhdGl2ZSBzeXN0ZW0gaXMgYmFzZWQgICBvbiB0aGUgY29udmVudGlvbnMgb2YgcGFybGlhbWVudGFyeSBnb3Zlcm5tZW50IGFzIGRldmVsb3BlZCBpbiBCcml0YWluLiAgICAgIFNvdXJjZTogIEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24gQ2hhcHRlci0yMCAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 11,
      "question" : "Which among the following would be  included in the composition of the Council of  Ministers?   1. Cabinet Ministers   2. Ministers of State   3. Deputy Ministers   4. Parliamentary Secretaries   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIHByb3ZpZGVzIGZvciBhIHN5c3RlbSBvZiAgUGFybGlhbWVudGFyeSBnb3Zlcm5tZW50IG1vZGVsZWQgb24gdGhlIEJyaXRpc2ggICBwYXR0ZXJuLCB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMgaGVhZGVkIGJ5IHRoZSBwcmltZSBtaW5pc3RlciBpcyB0aGUgcmVhbCBleGVjdXRpdmUgYXV0aG9yaXR5IGluIG91ciAgIHBvbGl0aWNvLWFkbWluaXN0cmF0aXZlIHN5c3RlbS4gQXJ0aWNsZSA3NCBkZWFscyB3aXRoIHRoZSBzdGF0dXMgb2YgdGhlIGNvdW5jaWwgb2YgbWluaXN0ZXJzLiBUaGUgY291bmNpbCAgIG9mIG1pbmlzdGVycyB1c3VhbGx5IGNvbnNpc3RzIG9mIHRocmVlIGNhdGVnb3JpZXMgb2YgbWluaXN0ZXJzLCBuYW1lbHksIGNhYmluZXQgbWluaXN0ZXJzLCBtaW5pc3RlcnMgb2YgICBzdGF0ZSwgYW5kIGRlcHV0eSBtaW5pc3RlcnMuIFRoZSBjYWJpbmV0IG1pbmlzdGVycyBoZWFkIHRoZSBpbXBvcnRhbnQgbWluaXN0cmllcyBvZiB0aGUgQ2VudHJhbCAgIGdvdmVybm1lbnQgbGlrZSBob21lLCBkZWZlbmNlLCBmaW5hbmNlLCBleHRlcm5hbCBhZmZhaXJzIGFuZCBzbyBmb3J0aC4gVGhleSBhcmUgbWVtYmVycyBvZiB0aGUgY2FiaW5ldC4gICBUaGUgbWluaXN0ZXJzIG9mIHN0YXRlIGNhbiBlaXRoZXIgYmUgZ2l2ZW4gaW5kZXBlbmRlbnQgY2hhcmdlIG9mIG1pbmlzdHJpZXMvIGRlcGFydG1lbnRzIG9yIGNhbiBiZSAgIGF0dGFjaGVkIHRvIGNhYmluZXQgbWluaXN0ZXJzLiBEZXB1dHkgbWluaXN0ZXJzIGFyZSBub3QgZ2l2ZW4gaW5kZXBlbmRlbnQgY2hhcmdlIG9mICAgbWluaXN0cmllcy9kZXBhcnRtZW50cy4gVGhleSBhcmUgYXR0YWNoZWQgdG8gdGhlIGNhYmluZXQgbWluaXN0ZXJzIG9yIG1pbmlzdGVycyBvZiBzdGF0ZSBhbmQgYXNzaXN0IHRoZW0gICBpbiB0aGVpciBhZG1pbmlzdHJhdGl2ZSwgcG9saXRpY2FsLCBhbmQgcGFybGlhbWVudGFyeSBkdXRpZXMuIFRoZXJlIGlzIG9uZSBtb3JlIGNhdGVnb3J5IG9mIG1pbmlzdGVycywgICBjYWxsZWQgcGFybGlhbWVudGFyeSBzZWNyZXRhcmllcy4gVGhleSBhcmUgdGhlIG1lbWJlcnMgb2YgdGhlIGxhc3QgY2F0ZWdvcnkgb2YgdGhlIGNvdW5jaWwgb2YgbWluaXN0ZXJzICAgKHdoaWNoIGlzIGFsc28ga25vd24gYXMgdGhlICdtaW5pc3RyeScpLiBUaGV5IGhhdmUgbm8gZGVwYXJ0bWVudCB1bmRlciB0aGVpciBjb250cm9sLiBUaGV5IGFyZSBhdHRhY2hlZCAgIHRvIHRoZSBzZW5pb3IgbWluaXN0ZXJzIGFuZCBhc3Npc3QgdGhlbSBpbiB0aGUgZGlzY2hhcmdlIG9mIHRoZWlyIHBhcmxpYW1lbnRhcnkgZHV0aWVzLiAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24gQ2hhcHRlci0yMCAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements with  reference to the Groups of Ministers (GoMs) in  the Union government:   1.  They are ad hoc bodies and are not  permanent in nature.   2.  They are not empowered to take decisions  on behalf of the Cabinet.   3.  All the GoMs are headed by the Home  Minister of India.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBHcm91cHMgb2YgTWluaXN0ZXJzIChHb01zKSBhcmUgY29uc3RpdHV0ZWQgdG8gbG9vayBpbnRvIGRpZmZlcmVudCBpc3N1ZXMgLyBzdWJqZWN0cy4gVGhlIGluc3RpdHV0aW9uIG9mICAgR29NcyBoYXMgYmVjb21lIGEgdmlhYmxlIGFuZCBlZmZlY3RpdmUgaW5zdHJ1bWVudCBvZiBjb29yZGluYXRpb24gYW1vbmcgdGhlIG1pbmlzdHJpZXMuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEdvTXMgYXJlIGFkIGhvYyBib2RpZXMgZm9ybWVkIHRvIGdpdmUgcmVjb21tZW5kYXRpb25zIHRvIHRoZSBjYWJpbmV0IG9uICAgY2VydGFpbiBlbWVyZ2VudCBpc3N1ZXMgYW5kIGNyaXRpY2FsIHByb2JsZW0gYXJlYXMuIE1pbmlzdGVycyBoZWFkaW5nIHRoZSBjb25jZXJuZWQgbWluaXN0cmllcyBhcmUgICBpbmR1Y3RlZCBpbnRvIHRoZSByZWxldmFudCBHb01zIGFuZCB3aGVuIHRoZSBhZHZpY2UgaXMgY3J5c3RhbGxpemVkIHRoZXkgYXJlIGRpc2JhbmRlZC4gICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFNvbWUgb2YgdGhlIEdvTXMgYXJlIGVtcG93ZXJlZCB0byB0YWtlIGRlY2lzaW9ucyBvbiBiZWhhbGYgb2YgdGhlIENhYmluZXQgICB3aGVyZWFzIHRoZSBvdGhlcnMgbWFrZSByZWNvbW1lbmRhdGlvbnMgdG8gdGhlIENhYmluZXQuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlcmUgaXMgbm8gcHJvdmlzaW9uIG9mIG9ubHkgaG9tZSBtaW5pc3RlciBoZWFkaW5nIHRoZSBHb01zLiBJdCBjYW4gYmUgICBoZWFkZWQgYnkgYW55IHJlbGV2YW50IG1pbmlzdGVyLiAgICBTb3VyY2U6ICBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudGgsIDZ0aCBFZGl0aW9uIENoYXB0ZXItMjEgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "1 and 3 only                "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements with  reference to imposition of financial emergency:   1. It can be imposed if there's financial  instability even in only a part of India's  territory.   2. Repeated parliamentary approval is not  required for the continuation of a financial  emergency.   3.  India has never declared a Financial  Emergency till date.    Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFydGljbGUgMzYwIGRlYWxzIHdpdGggdGhlIGRlY2xhcmF0aW9uIG9mIHRoZSBGaW5hbmNpYWwgRW1lcmdlbmN5LiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBcnRpY2xlIDM2MCBlbXBvd2VycyB0aGUgcHJlc2lkZW50IHRvIHByb2NsYWltIGEgRmluYW5jaWFsIEVtZXJnZW5jeSBpZiBoZSBpcyAgIHNhdGlzZmllZCB0aGF0IGEgc2l0dWF0aW9uIGhhcyBhcmlzZW4gZHVlIHRvIHdoaWNoIHRoZSBmaW5hbmNpYWwgc3RhYmlsaXR5IG9yIGNyZWRpdCBvZiBJbmRpYSBvciBhbnkgcGFydCBvZiAgIGl0cyB0ZXJyaXRvcnkgaXMgdGhyZWF0ZW5lZC4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IE9uY2UgYXBwcm92ZWQgYnkgYm90aCB0aGUgSG91c2VzIG9mIFBhcmxpYW1lbnQsIHRoZSBGaW5hbmNpYWwgRW1lcmdlbmN5ICAgY29udGludWVzIGluZGVmaW5pdGVseSB0aWxsIGl0IGlzIHJldm9rZWQuIFRoZXJlIGlzIG5vIG1heGltdW0gcGVyaW9kIHByZXNjcmliZWQgZm9yIGl0cyBvcGVyYXRpb24sIGFuZCAgIHJlcGVhdGVkIHBhcmxpYW1lbnRhcnkgYXBwcm92YWwgaXMgbm90IHJlcXVpcmVkIGZvciBpdHMgY29udGludWF0aW9uLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBObyBGaW5hbmNpYWwgRW1lcmdlbmN5IGhhcyBiZWVuIGRlY2xhcmVkIHNvIGZhciBpbiB0aGUgY291bnRyeSwgZXZlbiB0aG91Z2ggICB0aGVyZSB3YXMgYSBmaW5hbmNpYWwgY3Jpc2lzIGluIDE5OTEuICAgIFNvdXJjZTogIEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24gQ2hhcHRlci0xNiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3     "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements with  reference to the national emergency:   1.  It has been declared three times so far since  independence.   2.  It has never been declared on the ground of  internal disturbance.   Which of the above statements is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE5hdGlvbmFsIEVtZXJnZW5jeSBoYXMgYmVlbiBwcm9jbGFpbWVkIHRocmVlIHRpbWVzIHNvIGZhci0gaW4gMTk2MiwgMTk3MSBhbmQgICAxOTc1LiBUaGUgZmlyc3QgcHJvY2xhbWF0aW9uIG9mIE5hdGlvbmFsIEVtZXJnZW5jeSB3YXMgaXNzdWVkIGluIE9jdG9iZXIgMTk2MiBvbiBhY2NvdW50IG9mIENoaW5lc2UgICBhZ2dyZXNzaW9uLiB3YXMgaW4gZm9yY2UgdGlsbCBKYW51YXJ5IDE5NjguIEhlbmNlLCBhIGZyZXNoIHByb2NsYW1hdGlvbiB3YXMgbm90IG5lZWRlZCBhdCB0aGUgdGltZSBvZiB3YXIgICBhZ2FpbnN0IFBha2lzdGFuIGluIDE5NjUuIFRoZSBzZWNvbmQgcHJvY2xhbWF0aW9uIG9mIG5hdGlvbmFsIGVtZXJnZW5jeSB3YXMgbWFkZSBpbiBEZWNlbWJlciAxOTcxIGluICAgdGhlIHdha2Ugb2YgYXR0YWNrIGJ5IFBha2lzdGFuLiBUaGUgdGhpcmQgcHJvY2xhbWF0aW9uIG9mIE5hdGlvbmFsIEVtZXJnZW5jeSB3YXMgbWFkZSBpbiBKdW5lIDE5NzUgYnkgICBJbmRpcmEgR2FuZGhpLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBmaXJzdCB0d28gcHJvY2xhbWF0aW9ucyAoMTk2MiBhbmQgMTk3MSkgd2VyZSBtYWRlIG9uIHRoZSBncm91bmQgb2YgICAnZXh0ZXJuYWwgYWdncmVzc2lvbicsIHdoaWxlIHRoZSB0aGlyZCBwcm9jbGFtYXRpb24gKDE5NzUpIHdhcyBtYWRlIG9uIHRoZSBncm91bmQgb2YgJ2ludGVybmFsICAgZGlzdHVyYmFuY2UnLCB0aGF0IGlzLCBjZXJ0YWluIHBlcnNvbnMgaGF2ZSBiZWVuIGluY2l0aW5nIHRoZSBwb2xpY2UgYW5kIHRoZSBhcm1lZCBmb3JjZXMgYWdhaW5zdCB0aGUgICBkaXNjaGFyZ2Ugb2YgdGhlaXIgZHV0aWVzIGFuZCB0aGVpciBub3JtYWwgZnVuY3Rpb25pbmcuICAgIFNvdXJjZTogIEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24gQ2hhcHRlci0xNiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following statements  regarding Governor are incorrect?   1.  He holds his office during the pleasure of the  President of India.   2.  The oath of the office of Governor is  administered by the Chief Justice of High  Court.   3.  He can be removed from his office on  grounds of proved misbehavior and  incapacity.   4.  He is immune from criminal and civil  proceedings during his term of office.   Select the correct answer using the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBBY2NvcmRpbmcgdG8gdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgdGhlcmUgaGFzIHRvIGJlIGEgR292ZXJub3IgZm9yIGVhY2ggU3RhdGUgb3Igb25lIHBlcnNvbiBtYXkgYmUgICBhcHBvaW50ZWQgR292ZXJub3IgZm9yIGV2ZW4gdHdvIG9yIG1vcmUgU3RhdGVzIHdobyBpcyB0aGUgZXhlY3V0aXZlIGF1dGhvcml0eSBvZiBldmVyeSBTdGF0ZS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQWNjb3JkaW5nIHRvIEFydGljbGUgMTU2IG9mIEluZGlhbiBDb25zdGl0dXRpb24sIGEgR292ZXJub3IgaG9sZHMgb2ZmaWNlIGZvciB0ZXJtICAgb2YgZml2ZSB5ZWFycyBmcm9tIHRoZSBkYXRlIG9uIHdoaWNoIGhlIGVudGVycyB1cG9uIGhpcyBvZmZpY2Ugd2hpY2ggaXMgc3ViamVjdGVkIHRvIHRoZSBwbGVhc3VyZSBvZiB0aGUgICBQcmVzaWRlbnQuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFydGljbGUgMTU5IG9mIEluZGlhbiBDb25zdGl0dXRpb24gc3RhdGVzIHRoYXQgZXZlcnkgR292ZXJub3IgYW5kIGV2ZXJ5IHBlcnNvbiAgIGRpc2NoYXJnaW5nIHRoZSBmdW5jdGlvbnMgb2YgdGhlIEdvdmVybm9yIHNoYWxsLCBiZWZvcmUgZW50ZXJpbmcgdXBvbiBoaXMgb2ZmaWNlLCBtYWtlIGFuZCBzdWJzY3JpYmUgaW4gICB0aGUgcHJlc2VuY2Ugb2YgdGhlIENoaWVmIEp1c3RpY2Ugb2YgdGhlIEhpZ2ggQ291cnQgZXhlcmNpc2luZyBqdXJpc2RpY3Rpb24gaW4gcmVsYXRpb24gdG8gdGhlIFN0YXRlIG9yIGluICAgaGlzIGFic2VuY2UsIHRoZSBzZW5pb3Jtb3N0IEp1ZGdlIG9mIHRoYXQgQ291cnQgYXZhaWxhYmxlLiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIGRvZXMgbm90IGxheSBkb3duIGFueSBncm91bmRzIHVwb24gd2hpY2ggdGhlICAgR292ZXJub3Igb2YgYW55IHN0YXRlIGNhbiBiZSByZW1vdmVkLiBUaG91Z2gsIHRoZSBQcmVzaWRlbnQgbWF5IHRyYW5zZmVyIGEgR292ZXJub3IgYXBwb2ludGVkIHRvIG9uZSAgIHN0YXRlIHRvIGFub3RoZXIgc3RhdGUgZm9yIHRoZSByZXN0IG9mIHRoZSB0ZXJtIG9yIGEgR292ZXJub3Igd2hvc2UgdGVybSBoYXMgZXhwaXJlZCBtYXkgYmUgcmVhcHBvaW50ZWQgICBpbiB0aGUgc2FtZSBzdGF0ZSBvciBhbnkgb3RoZXIgc3RhdGUuICAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gQXJ0aWNsZSAzNjEgb2YgSW5kaWFuIGNvbnN0aXR1dGlvbiB3aGljaCBkZWFscyB3aXRoIFByb3RlY3Rpb24gb2YgUHJlc2lkZW50ICAgYW5kIEdvdmVybm9ycyBoaWdobGlnaHRzIHRoYXQgbm8gY3JpbWluYWwgcHJvY2VlZGluZ3Mgd2hhdHNvZXZlciBzaGFsbCBiZSBpbnN0aXR1dGVkIG9yIGNvbnRpbnVlZCAgICAgYWdhaW5zdCB0aGUgUHJlc2lkZW50LCBvciB0aGUgR292ZXJub3Igb2YgYSBTdGF0ZSwgaW4gYW55IGNvdXJ0IGR1cmluZyBoaXMgdGVybSBvZiBvZmZpY2UuIEhvd2V2ZXIsIGFmdGVyICAgZ2l2aW5nIDItbW9udGggbm90aWNlLCBjaXZpbCBwcm9jZWVkaW5ncyBjYW4gYmUgaW5zdGl0dXRlZCBhZ2FpbnN0IGhpbSBkdXJpbmcgaGlzIHRlcm0gb2Ygb2ZmaWNlIGluICAgcmVzcGVjdCBvZiBoaXMgcGVyc29uYWwgYWN0cy4gSGVuY2UsIGhlIGlzIGltbXVuZSBmcm9tIGFueSBjcmltaW5hbCBwcm9jZWVkaW5ncyBub3QgY2l2aWwgb25lcy4gICAgU291cmNlOiAgTEFYTUlLQU5UKENILUdvdmVybm9yKSAgICBodHRwOi8vdXBnb3Zlcm5vci5nb3YuaW4vZW4vcGFnZS9jb25zdGl0dXRpb25hbC1yb2xlLW9mLXRoZS0gIGdvdmVybm9yIzp+OnRleHQ9RGlzY2hhcmdlJTIwb2YlMjB0aGUlMjBmdW5jdGlvbnMlMjBvZixBcnRpY2xlJTIwMTYxLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "1 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "3 and 4 only      "
      }
    },
    {
      "index" : 16,
      "question" : "Which of the following statements is/are  correct regarding the judicial powers of the  Governor?   1.  He makes appointments of the persons to  Judicial services of the state.   2.  He can seek advice from Supreme Court on  questions of law.   3.  He can grant remissions of punishment to  any person convicted of any offense against  state law.   Select the correct answer using the code given  below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgcG93ZXJzIGFuZCBmdW5jdGlvbnMgb2YgdGhlIEdvdmVybm9yIGNhbiBicm9hZGx5IGJlIGNhdGVnb3Jpc2VkIHVuZGVyIHR3byBoZWFkcy0gYXMgdGhlIGhlYWQgb2YgICB0aGUgU3RhdGUsIGFuZCBhcyB0aGUgcmVwcmVzZW50YXRpdmUgb2YgdGhlIFVuaW9uIEdvdmVybm1lbnQuIFVuZGVyIHRoZSBoZWFkIG9mIHRoZSBTdGF0ZSBleGVjdXRpdmUsICAgbGVnaXNsYXRpdmUsIGZpbmFuY2lhbDsgSnVkaWNpYWwgYXMgd2VsbCBhcyB0aGUgcG93ZXIgdG8gZ3JhbnQgcGFyZG9uIGlzIGRlYWx0IHdpdGguICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFzIHBlciBBcnRpY2xlIDIzNCB0aGUgR292ZXJub3IgaG9sZHMgcG93ZXIgdG8gbWFrZSBhcHBvaW50bWVudHMgb2YgcGVyc29ucyAgIG90aGVyIHRoYW4gZGlzdHJpY3QganVkZ2VzIHRvIHRoZSBqdWRpY2lhbCBzZXJ2aWNlIG9mIGEgU3RhdGUgc2hhbGwgYmUgbWFkZSBieSB0aGUgR292ZXJub3Igb2YgdGhlIFN0YXRlIGluICAgYWNjb3JkYW5jZSB3aXRoIHJ1bGVzIG1hZGUgYnkgaGltIGluIHRoYXQgYmVoYWxmIGFmdGVyIGNvbnN1bHRhdGlvbiB3aXRoIHRoZSBTdGF0ZSBQdWJsaWMgU2VydmljZSAgIENvbW1pc3Npb24gYW5kIHdpdGggdGhlIEhpZ2ggQ291cnQgZXhlcmNpc2luZyBqdXJpc2RpY3Rpb24gaW4gcmVsYXRpb24gdG8gc3VjaCBTdGF0ZS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgUHJlc2lkZW50IGNhbiBzZWVrIGFkdmljZSBmcm9tIHRoZSBTdXByZW1lIENvdXJ0IG9uIGFueSBxdWVzdGlvbiBvZiBsYXcgICBvciBmYWN0LiBIb3dldmVyLCB0aGUgYWR2aWNlIHRlbmRlcmVkIGJ5IHRoZSBTdXByZW1lIENvdXJ0IGlzIG5vdCBiaW5kaW5nIG9uIHRoZSBQcmVzaWRlbnQuIFdoaWxlIHRoZSAgIEdvdmVybm9yIGNhbiBzZWVrIGFkdmljZSBvZiB0aGUgU3RhdGUgSGlnaCBDb3VydCBvbiBhbnkgcXVlc3Rpb24gb2YgbGF3IG9yIGZhY3QuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFVuZGVyIEFydGljbGUgMTYxIHRoZSBHb3Zlcm5vciBvZiBhIFN0YXRlIGhvbGRzIHRoZSBwb3dlciB0byBncmFudCBwYXJkb25zLCAgIHJlcHJpZXZlcywgcmVzcGl0ZXMgb3IgcmVtaXNzaW9ucyBvZiBwdW5pc2htZW50IG9yIHRvIHN1c3BlbmQsIHJlbWl0IG9yIGNvbW11dGUgdGhlIHNlbnRlbmNlIG9mIGFueSAgIHBlcnNvbiBjb252aWN0ZWQgb2YgYW55IG9mZmVuY2UgYWdhaW5zdCBhbnkgbGF3IHJlbGF0aW5nIHRvIGEgbWF0dGVyIHRvIHdoaWNoIHRoZSBleGVjdXRpdmUgcG93ZXIgb2YgdGhlICAgU3RhdGUgZXh0ZW5kcy4gICAgU291cmNlOiBodHRwOi8vdXBnb3Zlcm5vci5nb3YuaW4vZW4vcGFnZS9jb25zdGl0dXRpb25hbC1yb2xlLW9mLXRoZS0gIGdvdmVybm9yIzp+OnRleHQ9RGlzY2hhcmdlJTIwb2YlMjB0aGUlMjBmdW5jdGlvbnMlMjBvZixBcnRpY2xlJTIwMTYxLiAgICBMQVhNSUtBTlQgKENILUdPVkVSTk9SIDsgUFJFU0lERU5UKSAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to the Constitutional  position of President and Governor in India,  consider the following statements:    1.  The Constitution provides no discretionary  powers to the President unlike the  Governor.    2.  The discretionary power of the Governor  was restricted when the 42nd Constitutional  Amendment Act made the ministerial advice  binding.     Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgVGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBwcm92aWRlcyBmb3IgYSBwYXJsaWFtZW50YXJ5IGZvcm0gb2YgZ292ZXJubWVudCBpbiB0aGUgc3RhdGVzIGFzIGluIHRoZSBDZW50cmUuICAgVGhlIEdvdmVybm9yIGhhcyBiZWVuIG1hZGUgb25seSBhIG5vbWluYWwgZXhlY3V0aXZlIGxpa2UgdGhlIFByZXNpZGVudCBidXQgdGhlcmUgYXJlIGRpZmZlcmVuY2VzIGluICAgdGhlaXIgQ29uc3RpdHV0aW9uYWwgcG9zaXRpb25zLiAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogV2hpbGUgdGhlIENvbnN0aXR1dGlvbiBlbnZpc2FnZXMgdGhlIHBvc3NpYmlsaXR5IG9mIHRoZSBHb3Zlcm5vciBhY3RpbmcgYXQgdGltZXMgaW4gICBoaXMgZGlzY3JldGlvbiwgbm8gc3VjaCBwb3NzaWJpbGl0eSBoYXMgYmVlbiBlbnZpc2FnZWQgZm9yIHRoZSBQcmVzaWRlbnQuIFRoZSBDb25zdGl0dXRpb24gcHJvdmlkZXMgbm8gICBkaXNjcmV0aW9uYXJ5IHBvd2VycyB0byB0aGUgUHJlc2lkZW50IGFuZCBoZSBoYXMgb25seSBzaXR1YXRpb25hbCBkaXNjcmV0aW9uYXJ5IHBvd2Vycy4gVW5saWtlIHRoZSAgIFByZXNpZGVudCwgdGhlIEdvdmVybm9yIGhhcyBib3RoIHRoZSBDb25zdGl0dXRpb25hbCBkaXNjcmV0aW9uIChpLmUuLCB0aGUgZXhwcmVzcyBkaXNjcmV0aW9uIG1lbnRpb25lZCBpbiAgIHRoZSBDb25zdGl0dXRpb24pIGFuZCB0aGUgc2l0dWF0aW9uYWwgZGlzY3JldGlvbiAoaS5lLiwgdGhlIGhpZGRlbiBkaXNjcmV0aW9uIGRlcml2ZWQgZnJvbSB0aGUgZXhpZ2VuY2llcyBvZiAgIGEgcHJldmFpbGluZyBwb2xpdGljYWwgc2l0dWF0aW9uKS4gICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSA0Mm5kIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QsIDE5NzYgbWFkZSB0aGUgbWluaXN0ZXJpYWwgYWR2aWNlICAgYmluZGluZyBvbiB0aGUgUHJlc2lkZW50LCBidXQgbm8gc3VjaCBwcm92aXNpb24gaGFzIGJlZW4gbWFkZSB3aXRoIHJlc3BlY3QgdG8gdGhlIEdvdmVybm9yLiAgICAgU291cmNlOiAgICBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIDZ0aCBFZGl0aW9uIC0gQ2hhcHRlciAzMCBHb3Zlcm5vci4gICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to the appointment of the  Chief Minister of a state, which of the following  statements is/are correct?  1. The governor will exercise his personal  discretion in the appointment of new Chief  Minister when the Chief Minister in office  dies suddenly.  2. A person who is not a member of the state  legislature cannot be appointed as Chief  Minister of that state.  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIGdvdmVybm9yIG1heSBleGVyY2lzZSBoaXMgcGVyc29uYWwgZGlzY3JldGlvbiBpbiB0aGUgc2VsZWN0aW9uIGFuZCAgIGFwcG9pbnRtZW50IG9mIHRoZSBDaGllZiBNaW5pc3RlciB3aGVuIHRoZSBDaGllZiBNaW5pc3RlciBpbiBvZmZpY2UgZGllcyBzdWRkZW5seSBhbmQgdGhlcmUgaXMgbm8gb2J2aW91cyAgIHN1Y2Nlc3Nvci4gSG93ZXZlciwgb24gdGhlIGRlYXRoIG9mIGEgQ2hpZWYgTWluaXN0ZXIsIHRoZSBydWxpbmcgcGFydHkgdXN1YWxseSBlbGVjdHMgYSBuZXcgbGVhZGVyIGFuZCAgIHRoZSBnb3Zlcm5vciBoYXMgbm8gY2hvaWNlIGJ1dCB0byBhcHBvaW50IGhpbSBhcyBDaGllZiBNaW5pc3Rlci4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEEgcGVyc29uIHdobyBpcyBub3QgYSBtZW1iZXIgb2YgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlIGNhbiBiZSBhcHBvaW50ZWQgYXMgICBDaGllZiBNaW5pc3RlciBmb3Igc2l4IG1vbnRocywgd2l0aGluIHdoaWNoIHRpbWUsIGhlIHNob3VsZCBiZSBlbGVjdGVkIHRvIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSwgZmFpbGluZyAgIHdoaWNoIGhlIGNlYXNlcyB0byBiZSB0aGUgQ2hpZWYgTWluaXN0ZXIuICAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCBDaGFwdGVyLSAzMCBhbmQgMzEgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to the Parliament of India,  which of the following includes the Union  executive?  1. The President   2. The Vice- President   3. The Prime Minister   4. Council of ministers   5. The attorney general of India.   Select the correct answer using the codes given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIEFydGljbGVzIDUyIHRvIDc4IGluIFBhcnQgViBvZiB0aGUgQ29uc3RpdHV0aW9uIGRlYWwgd2l0aCB0aGUgVW5pb24gZXhlY3V0aXZlLiBUaGUgVW5pb24gZXhlY3V0aXZlIGNvbnNpc3RzICAgb2YgdGhlIFByZXNpZGVudCwgdGhlIFZpY2UtIFByZXNpZGVudCwgdGhlIFByaW1lIE1pbmlzdGVyLCB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMgYW5kIHRoZSBhdHRvcm5leSAgIGdlbmVyYWwgb2YgSW5kaWEuICAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IFRoZSBQcmVzaWRlbnQgaXMgdGhlIGhlYWQgb2YgdGhlIEluZGlhbiBTdGF0ZS4gSGUgaXMgdGhlIGZpcnN0IGNpdGl6ZW4gb2YgSW5kaWEgYW5kICAgYWN0cyBhcyB0aGUgc3ltYm9sIG9mIHVuaXR5LCBpbnRlZ3JpdHkgYW5kIHNvbGlkYXJpdHkgb2YgdGhlIG5hdGlvbi4gVGhlIFByZXNpZGVudCBob2xkcyBvZmZpY2UgZm9yIGEgdGVybSAgIG9mIGZpdmUgeWVhcnMgZnJvbSB0aGUgZGF0ZSBvbiB3aGljaCBoZSBlbnRlcnMgdXBvbiBoaXMgb2ZmaWNlLiBIb3dldmVyLCBoZSBjYW4gcmVzaWduIGZyb20gaGlzIG9mZmljZSBhdCAgIGFueSB0aW1lIGJ5IGFkZHJlc3NpbmcgdGhlIHJlc2lnbmF0aW9uIGxldHRlciB0byB0aGUgVmljZS0gUHJlc2lkZW50LiAgICBPcHRpb24gMiBpcyBjb3JyZWN0OiBUaGUgVmljZS1QcmVzaWRlbnQgb2NjdXBpZXMgdGhlIHNlY29uZCBoaWdoZXN0IG9mZmljZSBpbiB0aGUgY291bnRyeS4gSGUgaXMgICBhY2NvcmRlZCBhIHJhbmsgbmV4dCB0byB0aGUgUHJlc2lkZW50IGluIHRoZSBvZmZpY2lhbCB3YXJyYW50IG9mIHByZWNlZGVuY2UuIFRoaXMgb2ZmaWNlIGlzIG1vZGVsbGVkIG9uICAgdGhlIGxpbmVzIG9mIHRoZSBBbWVyaWNhbiBWaWNlLVByZXNpZGVudC4gVGhlIFZpY2UtUHJlc2lkZW50LCBsaWtlIHRoZSBwcmVzaWRlbnQsIGlzIGVsZWN0ZWQgbm90IGRpcmVjdGx5IGJ5ICAgdGhlIHBlb3BsZSBidXQgYnkgdGhlIG1ldGhvZCBvZiBpbmRpcmVjdCBlbGVjdGlvbi4gSGUgaXMgZWxlY3RlZCBieSB0aGUgbWVtYmVycyBvZiBhbiBlbGVjdG9yYWwgY29sbGVnZSAgIGNvbnNpc3Rpbmcgb2YgdGhlIG1lbWJlcnMgb2YgYm90aCBIb3VzZXMgb2YgUGFybGlhbWVudC4gICAgT3B0aW9uIDMgaXMgY29ycmVjdDogSW4gdGhlIHNjaGVtZSBvZiBwYXJsaWFtZW50YXJ5IHN5c3RlbSBvZiBnb3Zlcm5tZW50IHByb3ZpZGVkIGJ5IHRoZSAgIGNvbnN0aXR1dGlvbiwgdGhlIFByZXNpZGVudCBpcyB0aGUgbm9taW5hbCBleGVjdXRpdmUgYXV0aG9yaXR5IChkZSBqdXJlIGV4ZWN1dGl2ZSkgYW5kIFByaW1lIE1pbmlzdGVyICAgaXMgdGhlIHJlYWwgZXhlY3V0aXZlIGF1dGhvcml0eSAoZGUgZmFjdG8gZXhlY3V0aXZlKS4gSW4gb3RoZXIgd29yZHMsIHByZXNpZGVudCBpcyB0aGUgaGVhZCBvZiB0aGUgU3RhdGUgICB3aGlsZSBQcmltZSBNaW5pc3RlciBpcyB0aGUgaGVhZCBvZiB0aGUgZ292ZXJubWVudC4gVGhlIENvbnN0aXR1dGlvbiBkb2VzIG5vdCBjb250YWluIGFueSBzcGVjaWZpYyAgIHByb2NlZHVyZSBmb3IgdGhlIHNlbGVjdGlvbiBhbmQgYXBwb2ludG1lbnQgb2YgdGhlIFByaW1lIE1pbmlzdGVyLiBBcnRpY2xlIDc1IHNheXMgb25seSB0aGF0IHRoZSBQcmltZSAgIE1pbmlzdGVyIHNoYWxsIGJlIGFwcG9pbnRlZCBieSB0aGUgcHJlc2lkZW50LiAgICBPcHRpb24gNCBpcyBjb3JyZWN0OiBUaGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIHByb3ZpZGVzIGZvciBhIHBhcmxpYW1lbnRhcnkgc3lzdGVtIG9mIGdvdmVybm1lbnQgICBtb2RlbGxlZCBvbiB0aGUgQnJpdGlzaCBwYXR0ZXJuLCB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMgaGVhZGVkIGJ5IHRoZSBwcmltZSBtaW5pc3RlciBpcyB0aGUgcmVhbCAgIGV4ZWN1dGl2ZSBhdXRob3JpdHkgaXMgb3VyIHBvbGl0aWNvLWFkbWluaXN0cmF0aXZlIHN5c3RlbS4gVGhlIHByaW5jaXBsZXMgb2YgcGFybGlhbWVudGFyeSBzeXN0ZW0gb2YgICBnb3Zlcm5tZW50IGFyZSBub3QgZGV0YWlsZWQgaW4gdGhlIENvbnN0aXR1dGlvbiwgYnV0IHR3byBBcnRpY2xlcyAoNzQgYW5kIDc1KSBkZWFsIHdpdGggdGhlbSBpbiBhIGJyb2FkLCAgIHNrZXRjaHkgYW5kIGdlbmVyYWwgbWFubmVyLiBBcnRpY2xlIDc0IGRlYWxzIHdpdGggdGhlIHN0YXR1cyBvZiB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMgd2hpbGUgQXJ0aWNsZSA3NSAgIGRlYWxzIHdpdGggdGhlIGFwcG9pbnRtZW50LCB0ZW51cmUsIHJlc3BvbnNpYmlsaXR5LCBxdWFsaWZpY2F0aW9uLCBvYXRoIGFuZCBzYWxhcmllcyBhbmQgYWxsb3dhbmNlcyBvZiB0aGUgICBtaW5pc3RlcnMuICAgIFRoZSBjb3VuY2lsIG9mIG1pbmlzdGVycyBjb25zaXN0cyBvZiB0aHJlZSBjYXRlZ29yaWVzIG9mIG1pbmlzdGVycywgbmFtZWx5LCBjYWJpbmV0IG1pbmlzdGVycywgbWluaXN0ZXJzIG9mICAgc3RhdGUsIGFuZCBkZXB1dHkgbWluaXN0ZXJzLiAgICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIE9wdGlvbiA1IGlzIGNvcnJlY3Q6IFRoZSBDb25zdGl0dXRpb24gKEFydGljbGUgNzYpIGhhcyBwcm92aWRlZCBmb3IgdGhlIG9mZmljZSBvZiB0aGUgQXR0b3JuZXkgR2VuZXJhbCBmb3IgICBJbmRpYS4gSGUgaXMgdGhlIGhpZ2hlc3QgbGF3IG9mZmljZXIgaW4gdGhlIGNvdW50cnkuIFRoZSBBdHRvcm5leSBHZW5lcmFsIChBRykgaXMgYXBwb2ludGVkIGJ5IHRoZSAgIHByZXNpZGVudC4gSGUgbXVzdCBiZSBhIHBlcnNvbiB3aG8gaXMgcXVhbGlmaWVkIHRvIGJlIGFwcG9pbnRlZCBhIGp1ZGdlIG9mIHRoZSBTdXByZW1lIENvdXJ0LiBJbiBvdGhlciAgIHdvcmRzLCBoZSBtdXN0IGJlIGEgY2l0aXplbiBvZiBJbmRpYSBhbmQgaGUgbXVzdCBoYXZlIGJlZW4gYSBqdWRnZSBvZiBzb21lIGhpZ2ggY291cnQgZm9yIGZpdmUgeWVhcnMgb3IgYW4gICBhZHZvY2F0ZSBvZiBzb21lIGhpZ2ggY291cnQgZm9yIHRlbiB5ZWFycyBvciBhbiBlbWluZW50IGp1cmlzdCwgaW4gdGhlIG9waW5pb24gb2YgdGhlIHByZXNpZGVudC4gICAgU291cmNlOiAgSW5kaWFuIHBvbGl0eSBieSBNIGxheG1pa2FudGggNnRoIGVkaXRpb24gcGRmLiBDaGFwdGVyIG5hbWVzLSBQcmVzaWRlbnQsIHRoZSBWaWNlLSBQcmVzaWRlbnQsIHRoZSAgIFByaW1lIE1pbmlzdGVyLCB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMgYW5kIHRoZSBhdHRvcm5leSBnZW5lcmFsIG9mIEluZGlhLiAgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4 only   ",
        "option2" : "1, 3, 4 and 5 only   ",
        "option3" : "1, 2, 3 and 5 only   ",
        "option4" : "1, 2, 3, 4 and 5    "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements with  reference to the Attorney general of India:   1.  S/he is appointed by President to perform  such duties of a legal character that are  assigned to him by the President.   2.  S/he has the right of audience in all courts  in the territory of India.   3.  S/he is a fulltime counsel for the  Government of India.   Which of the statements given above is/are  correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gKEFydGljbGUgNzYpIGhhcyBwcm92aWRlZCBmb3IgdGhlIG9mZmljZSBvZiB0aGUgQXR0b3JuZXkgR2VuZXJhbCBmb3IgSW5kaWEuIEhlIGlzIHRoZSAgIGhpZ2hlc3QgbGF3IG9mZmljZXIgaW4gdGhlIGNvdW50cnkuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBBdHRvcm5leSBHZW5lcmFsIChBRykgaXMgYXBwb2ludGVkIGJ5IHRoZSBwcmVzaWRlbnQuIEhlIG11c3QgYmUgYSBwZXJzb24gICB3aG8gaXMgcXVhbGlmaWVkIHRvIGJlIGFwcG9pbnRlZCBhIGp1ZGdlIG9mIHRoZSBTdXByZW1lIENvdXJ0LiBBcyB0aGUgY2hpZWYgbGF3IG9mZmljZXIgb2YgdGhlIEdvdmVybm1lbnQgICBvZiBJbmRpYSwgQXR0b3JuZXkgZ2VuZXJhbCBvZiBJbmRpYSBoYXMgdGhlIGR1dHkgdG8gcGVyZm9ybSBzdWNoIG90aGVyIGR1dGllcyBvZiBhIGxlZ2FsIGNoYXJhY3RlciB0aGF0IGFyZSAgIGFzc2lnbmVkIHRvIGhpbSBieSB0aGUgUHJlc2lkZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBJbiB0aGUgcGVyZm9ybWFuY2Ugb2YgaGlzIG9mZmljaWFsIGR1dGllcywgdGhlIEF0dG9ybmV5IEdlbmVyYWwgaGFzIHRoZSByaWdodCBvZiAgIGF1ZGllbmNlIGluIGFsbCBjb3VydHMgaW4gdGhlIHRlcnJpdG9yeSBvZiBJbmRpYS4gRnVydGhlciwgaGUgaGFzIHRoZSByaWdodCB0byBzcGVhayBhbmQgdG8gdGFrZSBwYXJ0IGluIHRoZSAgIHByb2NlZWRpbmdzIG9mIGJvdGggdGhlIEhvdXNlcyBvZiBQYXJsaWFtZW50IG9yIHRoZWlyIGpvaW50IHNpdHRpbmcgYW5kIGFueSBjb21taXR0ZWUgb2YgdGhlIFBhcmxpYW1lbnQgICBvZiB3aGljaCBoZSBtYXkgYmUgbmFtZWQgYSBtZW1iZXIsIGJ1dCB3aXRob3V0IGEgcmlnaHQgdG8gdm90ZS4gSGUgZW5qb3lzIGFsbCB0aGUgcHJpdmlsZWdlcyBhbmQgICBpbW11bml0aWVzIHRoYXQgYXJlIGF2YWlsYWJsZSB0byBhIG1lbWJlciBvZiBQYXJsaWFtZW50LiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IHRoZSBBdHRvcm5leSBHZW5lcmFsIGlzIG5vdCBhIGZ1bGx0aW1lIGNvdW5zZWwgZm9yIHRoZSBHb3Zlcm5tZW50LiBIZSBkb2VzICAgbm90IGZhbGwgaW4gdGhlIGNhdGVnb3J5IG9mIGdvdmVybm1lbnQgc2VydmFudHMuIEhlIGlzIGFsc28gbm90IGRlYmFycmVkIGZyb20gcHJpdmF0ZSBsZWdhbCBwcmFjdGljZS4gICAgU291cmNlOiAgSW5kaWFuIHBvbGl0eSBieSBNIGxheG1pa2FudGggNnRoIGVkaXRpb24gcGRmLiBDaGFwdGVyIG5hbWUtIEF0dG9ybmV5IGdlbmVyYWwgb2YgSW5kaWEuIFBhZ2Ugbm8tICAgOTczIHRvIDk3Ny4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only    ",
        "option4" : "3 only    "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the President rule in  states, consider the following statements:   1.  The President's rule can be established in a  state where no party is able to form a  government after the elections.   2.  Whenever a state fails to comply with any  direction from the Centre, the President's  rule can be established.   Which of the statements given above is/are  correct:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJbXBvc2l0aW9uIG9mIFByZXNpZGVudCdzIFJ1bGUgaW4gYSBzdGF0ZSB3b3VsZCBiZSBwcm9wZXIgd2hlcmUgYWZ0ZXIgZ2VuZXJhbCAgIGVsZWN0aW9ucyB0byB0aGUgYXNzZW1ibHksIG5vIHBhcnR5IHNlY3VyZXMgYSBtYWpvcml0eSwgYW5kIG5vIHBhcnR5IGlzIGFibGUgdG8gZm9ybSBhIGdvdmVybm1lbnQuIEl0IGlzICAgY29tbW9ubHkga25vd24gYXMgYSAnSHVuZyBBc3NlbWJseScuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIEFydGljbGUgMzY1IHNheXMgdGhhdCB3aGVuZXZlciBhIHN0YXRlIGZhaWxzIHRvIGNvbXBseSB3aXRoIG9yIHRvIGdpdmUgZWZmZWN0IHRvIGFueSAgIGRpcmVjdGlvbiBmcm9tIHRoZSBDZW50cmUsIGl0IHdpbGwgYmUgbGF3ZnVsIGZvciB0aGUgcHJlc2lkZW50IHRvIGhvbGQgdGhhdCBhIHNpdHVhdGlvbiBoYXMgYXJpc2VuIGluIHdoaWNoICAgdGhlIGdvdmVybm1lbnQgb2YgdGhlIHN0YXRlIGNhbm5vdCBiZSBjYXJyaWVkIG9uIGluIGFjY29yZGFuY2Ugd2l0aCB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgIEluIHN1Y2ggY2lyY3Vtc3RhbmNlcywgdGhlIFByZXNpZGVudCdzIFJ1bGUgY2FuIGJlIHByb2NsYWltZWQgdW5kZXIgQXJ0aWNsZSAzNTYgb2YgdGhlIENvbnN0aXR1dGlvbi4gICAgU291cmNlOiBNLiBMYXhtaWthbnRoIENoYXB0ZXIgMTYgRW1lcmdlbmN5IFByb3Zpc2lvbnMgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2          "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements:   1.  A person must be a citizen born in India to  hold the office of Prime Minister of India.   2. The Constitution under Article 75 provides  for the specific procedure for the  appointment of the Prime Minister.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgZWxpZ2liaWxpdHkgY29uZGl0aW9uIGZvciB0aGUgb2ZmaWNlIG9mIFByaW1lIE1pbmlzdGVyIG9mIEluZGlhIHN0aXB1bGF0ZXMgdGhhdCAgIGhlL3NoZSBzaG91bGQgYmUgYSBjaXRpemVuIG9mIEluZGlhLiBJdCBpcyBub3QgYSBtYW5kYXRvcnkgY29uZGl0aW9uIHRoYXQgYSBwZXJzb24gbXVzdCBiZSBhIGNpdGl6ZW4gYm9ybiAgIGluIEluZGlhLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFRoZSBDb25zdGl0dXRpb24gZG9lcyBub3QgY29udGFpbiBhbnkgc3BlY2lmaWMgcHJvY2VkdXJlIGZvciB0aGUgc2VsZWN0aW9uIGFuZCAgIGFwcG9pbnRtZW50IG9mIHRoZSBQcmltZSBNaW5pc3Rlci4gQXJ0aWNsZSA3NSBzYXlzIG9ubHkgdGhhdCB0aGUgUHJpbWUgTWluaXN0ZXIgc2hhbGwgYmUgYXBwb2ludGVkIGJ5IHRoZSAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBwcmVzaWRlbnQuIEluIGFjY29yZGFuY2Ugd2l0aCB0aGUgY29udmVudGlvbnMgb2YgdGhlIHBhcmxpYW1lbnRhcnkgc3lzdGVtIG9mIGdvdmVybm1lbnQsIHRoZSBQcmVzaWRlbnQgICBoYXMgdG8gYXBwb2ludCB0aGUgbGVhZGVyIG9mIHRoZSBtYWpvcml0eSBwYXJ0eSBpbiB0aGUgTG9rIFNhYmhhIGFzIHRoZSBQcmltZSBNaW5pc3Rlci4gICAgIFNvdXJjZTogTGF4bWlrYW50aCBDaGFwdGVyIDE5dGggUHJpbWUgTWluaXN0ZXIgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements with  reference to the relationship between the  President and Prime Minister of India?   1.  Prime Minister is the principal channel of  communication between the President and  the council of ministers.   2.  President cannot direct the Prime Minister  to submit any matter for consideration of  the council of ministers.   3.  President can call Prime Minister to furnish  information relating to the administration of  the affairs of the Union.   4.  Prime Minister can recommend dissolution  of the Lok Sabha to President at any time.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gUHJlc2lkZW50IGNhbiBkaXJlY3QgdGhlIFByaW1lIE1pbmlzdGVyIHRvIHN1Ym1pdCwgZm9yIGNvbnNpZGVyYXRpb24gb2YgdGhlICAgY291bmNpbCBvZiBtaW5pc3RlcnMsIGFueSBtYXR0ZXIgb24gd2hpY2ggYSBkZWNpc2lvbiBoYXMgYmVlbiB0YWtlbiBieSBhIG1pbmlzdGVyIGJ1dCwgd2hpY2ggaGFzIG5vdCBiZWVuICAgY29uc2lkZXJlZCBieSB0aGUgY291bmNpbC4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIFByaW1lIE1pbmlzdGVyIGlzIHRoZSBwcmluY2lwYWwgY2hhbm5lbCBvZiBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlICAgUHJlc2lkZW50IGFuZCB0aGUgY291bmNpbCBvZiBtaW5pc3RlcnMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEl0IGlzIHRoZSBkdXR5IG9mIHRoZSBQcmltZSBNaW5pc3RlciB0byBmdXJuaXNoIHN1Y2ggaW5mb3JtYXRpb24gcmVsYXRpbmcgdG8gdGhlICAgYWRtaW5pc3RyYXRpb24gb2YgdGhlIGFmZmFpcnMgb2YgdGhlIFVuaW9uIGFuZCBwcm9wb3NhbHMgZm9yIGxlZ2lzbGF0aW9uIGFzIHRoZSBQcmVzaWRlbnQgbWF5IGNhbGwgZm9yLiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGUgUHJpbWUgTWluaXN0ZXIgaXMgdGhlIGxlYWRlciBvZiB0aGUgTG93ZXIgSG91c2UuIEluIHRoaXMgY2FwYWNpdHksIGhlIGNhbiAgIHJlY29tbWVuZCBkaXNzb2x1dGlvbiBvZiB0aGUgTG9rIFNhYmhhIHRvIFByZXNpZGVudCBhdCBhbnkgdGltZS4gICAgU291cmNlOiBMYXhtaWthbnRoIENoYXB0ZXIgMjl0aCBQcmltZSBNaW5pc3RlciAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements:   1. The advice tendered by Council of Ministers  is not binding on the President of India.   2.  The advice tendered by Ministers to the  President cannot be inquired into in any  court.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQXJ0aWNsZSA3NCBwcm92aWRlcyBmb3IgYSBjb3VuY2lsIG9mIG1pbmlzdGVycyB3aXRoIHRoZSBQcmltZSBNaW5pc3RlciBhdCB0aGUgaGVhZCAgIHRvIGFpZCBhbmQgYWR2aXNlIHRoZSBQcmVzaWRlbnQgaW4gdGhlIGV4ZXJjaXNlIG9mIGhpcyBmdW5jdGlvbnMuIFRoZSA0Mm5kIGFuZCA0NHRoIENvbnN0aXR1dGlvbmFsICAgQW1lbmRtZW50IEFjdHMgaGF2ZSBtYWRlIHRoZSBhZHZpY2UgYmluZGluZyBvbiB0aGUgUHJlc2lkZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgbmF0dXJlIG9mIGFkdmljZSB0ZW5kZXJlZCBieSBtaW5pc3RlcnMgdG8gdGhlIFByZXNpZGVudCBjYW5ub3QgYmUgZW5xdWlyZWQgICBieSBhbnkgY291cnQuIFRoaXMgcHJvdmlzaW9uIGVtcGhhc2lzZXMgdGhlIGludGltYXRlIGFuZCB0aGUgY29uZmlkZW50aWFsIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHRoZSAgIFByZXNpZGVudCBhbmQgdGhlIG1pbmlzdGVycy4gICAgU291cmNlOiBMYXhtaWthbnRoIENoYXB0ZXIgMjAgQ2VudHJhbCBDb3VuY2lsIG9mIE1pbmlzdGVycyAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 25,
      "question" : "'It is an extra-constitutional body  consisting of the Prime Minister and two to four  influential colleagues with whom Prime  Minister can discuss every problem. It is  composed of not only cabinet ministers but also  outsiders. It helps the Prime Minister in  maintaining secrecy in making decisions on  important political issues'.   Which one of the bodies/organizations has  been described in the above given paragraph?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICdLaXRjaGVuIENhYmluZXQgaXMgYW4gaW5mb3JtYWwsIGV4dHJhLWNvbnN0aXR1dGlvbmFsIGJvZHkgY29uc2lzdHMgb2YgdGhlIFByaW1lIE1pbmlzdGVyIGFuZCB0d28gdG8gZm91ciAgIGluZmx1ZW50aWFsIGNvbGxlYWd1ZXMgaW4gd2hvbSBoZSBoYXMgZmFpdGggYW5kIHdpdGggd2hvbSBoZSBjYW4gZGlzY3VzcyBldmVyeSBwcm9ibGVtLiBJdCBhZHZpc2VzIHRoZSAgIHByaW1lIG1pbmlzdGVyIG9uIGltcG9ydGFudCBwb2xpdGljYWwgYW5kIGFkbWluaXN0cmF0aXZlIGlzc3VlcyBhbmQgYXNzaXN0cyBoaW0gaW4gbWFraW5nIGNydWNpYWwgICBkZWNpc2lvbnMuIEl0IGlzIGNvbXBvc2VkIG9mIG5vdCBvbmx5IGNhYmluZXQgbWluaXN0ZXJzIGJ1dCBhbHNvIG91dHNpZGVycyBsaWtlIGZyaWVuZHMgYW5kIGZhbWlseSAgIG1lbWJlcnMgb2YgdGhlIHByaW1lIG1pbmlzdGVyLiAgICBFdmVyeSBwcmltZSBtaW5pc3RlciBpbiBJbmRpYSBoYXMgaGFkIGhpcyAnSW5uZXIgQ2FiaW5ldCctYSBjaXJjbGUgd2l0aGluIGEgY2lyY2xlLiBEdXJpbmcgdGhlIGVyYSBvZiBJbmRpcmEgICBHYW5kaGksIHRoZSAnSW5uZXIgQ2FiaW5ldCcgd2hpY2ggY2FtZSB0byBiZSBjYWxsZWQgdGhlICdLaXRjaGVuIENhYmluZXQnIHdhcyBwYXJ0aWN1bGFybHkgcG93ZXJmdWwuICAgICBTb3VyY2U6IExheG1pa2FudGggQ2hhcHRlciAyMCBDZW50cmFsIENvdW5jaWwgb2YgTWluaXN0ZXJzICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Niti Aayog   ",
        "option2" : "Council of Ministers   ",
        "option3" : "Kitchen Cabinet   ",
        "option4" : "Cabinet Committee of Security   "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements with  reference to the Constitution of India:   1.  For the disqualification of a member of  parliament, the President obtains the  opinion of the Chief Justice of India and acts  accordingly.  2.  President's decision is final with respect to  disqualification of a member of parliament  under the Constitution.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIENvbnN0aXR1dGlvbiBhbmQgdGhlIHBhcmxpYW1lbnQgdGhyb3VnaCBSZXByZXNlbnRhdGlvbiBvZiBwZW9wbGUgYWN0ICgxOTUxKSAgIGhhcyBsYWlkIGRvd24gdGhlIGdyb3VuZHMgZm9yIGRpc3F1YWxpZmljYXRpb24gb2YgdGhlIG1lbWJlcnMgb2YgcGFybGlhbWVudC4gVGhlIFByZXNpZGVudCwgc2hvdWxkICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIGhvd2V2ZXIsIG9idGFpbiB0aGUgb3BpbmlvbiBvZiB0aGUgRWxlY3Rpb24gQ29tbWlzc2lvbiBvZiBJbmRpYSBhbmQgYWN0IGFjY29yZGluZ2x5LiBUaGUgQ2hpZWYgSnVzdGljZSAgIG9mIEluZGlhIGRvZXNuJ3QgcGxheSBhIHJvbGUgaW4gdGhpcyB0eXBlIG9mIGRpc3F1YWxpZmljYXRpb24gb2YgbWVtYmVycyBvZiBQYXJsaWFtZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgUHJlc2lkZW50J3MgZGVjaXNpb24gcmVnYXJkaW5nIHdoZXRoZXIgYSBtZW1iZXIgb2YgcGFybGlhbWVudCBpcyBzdWJqZWN0ZWQgICB0byBkaXNxdWFsaWZpY2F0aW9uIGlzIGZpbmFsLiAgICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IE0uIExheG1pa2FudCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following reports are laid  before the Parliament by the President of  India?   1.  Report of Union Public Service Commission   2.  Report of Comptroller and Auditor General  of India   3.  Report of Special officer for linguistic  minorities   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFByZXNpZGVudCBsYXlzIHRoZSByZXBvcnRzIG9mIHRoZSBDb21wdHJvbGxlciBhbmQgQXVkaXRvciBHZW5lcmFsLCBVbmlvbiBQdWJsaWMgU2VydmljZSBDb21taXNzaW9uLCAgIEZpbmFuY2UgQ29tbWlzc2lvbiwgU3BlY2lhbCBPZmZpY2VyIGZvciBsaW5ndWlzdGljIG1pbm9yaXRpZXMgYW5kIG90aGVycywgYmVmb3JlIHRoZSBQYXJsaWFtZW50LiAgICBPcHRpb24gMSBpcyBjb3JyZWN0LiBVbmlvbiBQdWJsaWMgU2VydmljZSBDb21taXNzaW9uOiBUaGUgVVBTQyBwcmVzZW50cywgYW5udWFsbHksIHRvIHRoZSBwcmVzaWRlbnQgYSAgIHJlcG9ydCBvbiBpdHMgcGVyZm9ybWFuY2UuIFRoZSBQcmVzaWRlbnQgcGxhY2VzIHRoaXMgcmVwb3J0IGJlZm9yZSBib3RoIHRoZSBIb3VzZXMgb2YgUGFybGlhbWVudCwgYWxvbmcgICB3aXRoIGEgbWVtb3JhbmR1bSBleHBsYWluaW5nIHRoZSBjYXNlcyB3aGVyZSB0aGUgYWR2aWNlIG9mIHRoZSBDb21taXNzaW9uIHdhcyBub3QgYWNjZXB0ZWQgYW5kIHRoZSAgIHJlYXNvbnMgZm9yIHN1Y2ggbm9uLWFjY2VwdGFuY2UuICAgICBPcHRpb24gMiBpcyBjb3JyZWN0LiBDb21wdHJvbGxlciBhbmQgQXVkaXRvciBHZW5lcmFsIG9mIEluZGlhIHN1Ym1pdHMgaGlzIGF1ZGl0IHJlcG9ydHMgcmVsYXRpbmcgdG8gdGhlICAgYWNjb3VudHMgb2YgdGhlIENlbnRyZSB0byBQcmVzaWRlbnQsIHdobyBzaGFsbCwgaW4gdHVybiwgcGxhY2UgdGhlbSBiZWZvcmUgYm90aCB0aGUgSG91c2VzIG9mIFBhcmxpYW1lbnQgICAoQXJ0aWNsZSAxNTEpLiAgICBPcHRpb24gMyBpcyBjb3JyZWN0LiBTcGVjaWFsIE9mZmljZXIgZm9yIExpbmd1aXN0aWMgTWlub3JpdGllczogQXQgdGhlIENlbnRyYWwgbGV2ZWwsIHRoZSBDb21taXNzaW9uZXIgZmFsbHMgICB1bmRlciB0aGUgTWluaXN0cnkgb2YgTWlub3JpdHkgQWZmYWlycy4gSGVuY2UsIGhlIHN1Ym1pdHMgdGhlIGFubnVhbCByZXBvcnRzIG9yIG90aGVyIHJlcG9ydHMgdG8gdGhlICAgUHJlc2lkZW50IHRocm91Z2ggdGhlIFVuaW9uIE1pbm9yaXR5IEFmZmFpcnMgTWluaXN0ZXIuICAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTS4gTGF4bWlrYW50ICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3         "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements:    1.  The total number of ministers in the Union  Council of Ministers shall not exceed 15% of  the total strength of the Parliament.   2.  The salaries and allowances of Union  ministers are determined by the President  of India.   3.  The President administers the oaths of  office and secrecy to a minister.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIHRvdGFsIG51bWJlciBvZiBtaW5pc3RlcnMsIGluY2x1ZGluZyB0aGUgUHJpbWUgTWluaXN0ZXIsIGluIHRoZSBDb3VuY2lsIG9mICAgTWluaXN0ZXJzIHNoYWxsIG5vdCBleGNlZWQgMTUlIG9mIHRoZSB0b3RhbCBzdHJlbmd0aCBvZiB0aGUgTG9rIFNhYmhhIChhbmQgbm90IFBhcmxpYW1lbnQpLiBUaGlzIHByb3Zpc2lvbiAgIHdhcyBhZGRlZCBieSB0aGUgOTFzdCBBbWVuZG1lbnQgQWN0IG9mIDIwMDMuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHNhbGFyaWVzIGFuZCBhbGxvd2FuY2VzIG9mIG1pbmlzdGVycyBzaGFsbCBiZSBkZXRlcm1pbmVkIGJ5IHRoZSBQYXJsaWFtZW50LiAgIEEgbWluaXN0ZXIgZ2V0cyB0aGUgc2FsYXJ5IGFuZCBhbGxvd2FuY2VzIHRoYXQgYXJlIHBheWFibGUgdG8gYSBtZW1iZXIgb2YgUGFybGlhbWVudC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIFByZXNpZGVudCBhZG1pbmlzdGVycyB0aGUgb2F0aHMgb2Ygb2ZmaWNlIGFuZCBzZWNyZWN5IHRvIGEgbWluaXN0ZXIuICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IE0uIExheG1pa2FudGggICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to the Council of  Ministers, which of the following statements  is/are correct?   1.  Every minister has the right to speak and to  vote in either house of the parliament.   2.  They cease to hold office as soon as the Lok  Sabha is dissolved.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQSBtaW5pc3RlciB3aG8gaXMgYSBtZW1iZXIgb2Ygb25lIEhvdXNlIG9mIFBhcmxpYW1lbnQgaGFzIHRoZSByaWdodCB0byBzcGVhayAgIGFuZCB0byB0YWtlIHBhcnQgaW4gdGhlIHByb2NlZWRpbmdzIG9mIHRoZSBvdGhlciBIb3VzZSBhbHNvLCBidXQgaGUgY2FuIHZvdGUgb25seSBpbiB0aGUgSG91c2Ugb2Ygd2hpY2ggaGUgICBpcyBhIG1lbWJlci4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBJbiAxOTcxLCB0aGUgU3VwcmVtZSBDb3VydCBoZWxkIHRoYXQsIGV2ZW4gYWZ0ZXIgdGhlIGRpc3NvbHV0aW9uIG9mIHRoZSBMb2sgICBTYWJoYSwgdGhlIGNvdW5jaWwgb2YgbWluaXN0ZXJzIGRvZXMgbm90IGNlYXNlIHRvIGhvbGQgb2ZmaWNlLiBBcnRpY2xlIDc0IHNheXMgdGhhdCB0aGUgcHJlc2lkZW50IGNhbm5vdCAgIGV4ZXJjaXNlIHRoZSBleGVjdXRpdmUgcG93ZXIgd2l0aG91dCB0aGUgYWlkIGFuZCBhZHZpc2Ugb2YgdGhlIGNvdW5jaWwgb2YgbWluaXN0ZXJzLiBBbnkgZXhlcmNpc2Ugb2YgICBleGVjdXRpdmUgcG93ZXIgd2l0aG91dCB0aGUgYWlkIGFuZCBhZHZpY2Ugd2lsbCBiZSB1bmNvbnN0aXR1dGlvbmFsIGFzIGJlaW5nIHZpb2xhdGl2ZSBvZiBBcnRpY2xlIDc0LiBIZW5jZSwgICB0aGUgbWluaXN0ZXJzIGNvbnRpbnVlIHRvIGJlIGluIHRoZSBvZmZpY2UgdW50aWwgdGhlIG5ldyBjb3VuY2lsIG9mIG1pbmlzdGVycyBpcyBmb3JtZWQuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBNLiBMYXhtaWthbnRoICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 30,
      "question" : "In which of the following ways the office  of Attorney General of India different from the  office of Solicitor General of India?   1.  Unlike Attorney General, the Constitution of  India does not mention about the office of  solicitor general.   2.  Unlike Attorney general, Solicitor General  has the right to speak and participate in the  proceedings of the Parliament.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBDb25zdGl0dXRpb24gKEFydGljbGUgNzYpIGhhcyBwcm92aWRlZCBmb3IgdGhlIG9mZmljZSBvZiB0aGUgQXR0b3JuZXkgR2VuZXJhbCAgIGZvciBJbmRpYS4gSGUgaXMgdGhlIGhpZ2hlc3QgbGF3IG9mZmljZXIgaW4gdGhlIGNvdW50cnkuIEhvd2V2ZXIsIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgZG9lcyBub3QgICBtZW50aW9uIGFib3V0IHRoZSBzb2xpY2l0b3IgZ2VuZXJhbCBhbmQgYWRkaXRpb25hbCBzb2xpY2l0b3IgZ2VuZXJhbC4gU29saWNpdG9yIEdlbmVyYWwgYW5kIEFkZGl0aW9uYWwgICBTb2xpY2l0b3IgR2VuZXJhbCdzIG9mZmljZSBhcmUgZ292ZXJuZWQgYnkgTGF3IE9mZmljZXJzIChDb25kaXRpb25zIG9mIFNlcnZpY2UpIFJ1bGVzLCAxOTg3LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEluIHRoZSBwZXJmb3JtYW5jZSBvZiBoaXMgb2ZmaWNpYWwgZHV0aWVzLCB0aGUgQXR0b3JuZXkgR2VuZXJhbCBoYXMgdGhlIHJpZ2h0IHRvICAgc3BlYWsgYW5kIHRvIHRha2UgcGFydCBpbiB0aGUgcHJvY2VlZGluZ3Mgb2YgYm90aCB0aGUgSG91c2VzIG9mIFBhcmxpYW1lbnQgb3IgdGhlaXIgam9pbnQgc2l0dGluZyBhbmQgYW55ICAgY29tbWl0dGVlIG9mIHRoZSBQYXJsaWFtZW50IG9mIHdoaWNoIGhlIG1heSBiZSBuYW1lZCBhIG1lbWJlciwgYnV0IHdpdGhvdXQgYSByaWdodCB0byB2b3RlLiBIZSBlbmpveXMgICBhbGwgdGhlIHByaXZpbGVnZXMgYW5kIGltbXVuaXRpZXMgdGhhdCBhcmUgYXZhaWxhYmxlIHRvIGEgbWVtYmVyIG9mIFBhcmxpYW1lbnQuIFNvbGljaXRvciBnZW5lcmFsIGhhcyBubyAgIHJpZ2h0IHRvIHNwZWFrIGFuZCBwYXJ0aWNpcGF0ZSBpbiB0aGUgcHJvY2VlZGluZ3Mgb2YgdGhlIHBhcmxpYW1lbnQuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBNLiBMYXhtaWthbnQgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2      \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to election of President of  India, consider the following statements:   1.  The elected members of the legislative  assemblies of the Union Territory of  Puducherry participate in the election of  President.   2.  The elected members of legislative council  cannot participate in the election of  President.   3.  The members of a legislative assembly  which has been dissolved can vote if fresh  elections to the dissolved assembly are not  held before the presidential election.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBQcmVzaWRlbnQgb2YgSW5kaWEgaXMgZWxlY3RlZCBub3QgZGlyZWN0bHkgYnkgdGhlIHBlb3BsZSBidXQgYnkgbWVtYmVycyBvZiAgIGVsZWN0b3JhbCBjb2xsZWdlIGNvbnNpc3Rpbmcgb2Y6ICAgICBUaGUgZWxlY3RlZCBtZW1iZXJzIG9mIGJvdGggdGhlIEhvdXNlcyBvZiBQYXJsaWFtZW50OyAgICBUaGUgZWxlY3RlZCBtZW1iZXJzIG9mIHRoZSBsZWdpc2xhdGl2ZSBhc3NlbWJsaWVzIG9mIHRoZSBzdGF0ZXM7IGFuZCAgICBUaGUgZWxlY3RlZCBtZW1iZXJzIG9mIHRoZSBsZWdpc2xhdGl2ZSBhc3NlbWJsaWVzIG9mIHRoZSBVbmlvbiBUZXJyaXRvcmllcyBvZiBEZWxoaSBhbmQgUHVkdWNoZXJyeS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG1lbWJlcnMgKGJvdGggZWxlY3RlZCBhbmQgbm9taW5hdGVkKSBvZiB0aGUgc3RhdGUgbGVnaXNsYXRpdmUgY291bmNpbHMgKGluICAgY2FzZSBvZiB0aGUgYmljYW1lcmFsIGxlZ2lzbGF0dXJlKSBkbyBub3QgcGFydGljaXBhdGUgaW4gdGhlIGVsZWN0aW9uIG9mIHRoZSBQcmVzaWRlbnQuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gSWYgdGhlIGFzc2VtYmx5IGlzIGRpc3NvbHZlZCwgdGhlIG1lbWJlcnMgY2Vhc2UgdG8gYmUgcXVhbGlmaWVkIHRvIHZvdGUgaW4gICBwcmVzaWRlbnRpYWwgZWxlY3Rpb24sIGV2ZW4gaWYgZnJlc2ggZWxlY3Rpb25zIHRvIHRoZSBkaXNzb2x2ZWQgYXNzZW1ibHkgYXJlIG5vdCBoZWxkIGJlZm9yZSB0aGUgcHJlc2lkZW50aWFsICAgZWxlY3Rpb24uICAgIFNvdXJjZTogTSBMYXhtaWthbnRoIFBvbGl0eS4gQ2hhcHRlciAxNy4gUHJlc2lkZW50ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 32,
      "question" : "With reference to pardoning powers of  President of India, consider the following pairs:   Power           Explanation    1. Remission Reducing the period of  sentence without changing its  character.   2. Respite Awarding a lesser sentence  due to physical disability.   3. Reprieve It absolves the convict from  all sentences and  punishments.   Which of the pairs given above is/are correctly  matched?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFBhaXIgMSBpcyBjb3JyZWN0LiBSZW1pc3Npb24gaW1wbGllcyByZWR1Y2luZyB0aGUgcGVyaW9kIG9mIHNlbnRlbmNlIHdpdGhvdXQgY2hhbmdpbmcgaXRzIGNoYXJhY3Rlci4gRm9yICAgZXhhbXBsZSwgYSBzZW50ZW5jZSBvZiByaWdvcm91cyBpbXByaXNvbm1lbnQgZm9yIHR3byB5ZWFycyBtYXkgYmUgcmVtaXR0ZWQgdG8gcmlnb3JvdXMgaW1wcmlzb25tZW50ICAgZm9yIG9uZSB5ZWFyLiAgICBQYWlyIDIgaXMgY29ycmVjdC4gUmVzcGl0ZSBkZW5vdGVzIGF3YXJkaW5nIGEgbGVzc2VyIHNlbnRlbmNlIGluIHBsYWNlIG9mIG9uZSBvcmlnaW5hbGx5IGF3YXJkZWQgZHVlIHRvICAgc29tZSBzcGVjaWFsIGZhY3QsIHN1Y2ggYXMgdGhlIHBoeXNpY2FsIGRpc2FiaWxpdHkgb2YgYSBjb252aWN0IG9yIHRoZSBwcmVnbmFuY3kgb2YgYSB3b21hbiBvZmZlbmRlci4gICAgUGFpciAzIGlzIGluY29ycmVjdC4gUmVwcmlldmUgaW1wbGllcyBhIHN0YXkgb2YgdGhlIGV4ZWN1dGlvbiBvZiBhIHNlbnRlbmNlIChlc3BlY2lhbGx5IHRoYXQgb2YgZGVhdGgpIGZvciBhICAgdGVtcG9yYXJ5IHBlcmlvZC4gSXRzIHB1cnBvc2UgaXMgdG8gZW5hYmxlIHRoZSBjb252aWN0IHRvIGhhdmUgdGltZSB0byBzZWVrIHBhcmRvbiBvciBjb21tdXRhdGlvbiBmcm9tICAgdGhlIFByZXNpZGVudC4gICAgUGFyZG9uIHJlbW92ZXMgYm90aCB0aGUgc2VudGVuY2UgYW5kIHRoZSBjb252aWN0aW9uIGFuZCBjb21wbGV0ZWx5IGFic29sdmVzIHRoZSBjb252aWN0IGZyb20gYWxsICAgc2VudGVuY2VzLCBwdW5pc2htZW50cyBhbmQgZGlzcXVhbGlmaWNhdGlvbnMuICAgU291cmNlOiBNIExheG1pa2FudGggUG9saXR5LiBDaGFwdGVyIDE3LiBQcmVzaWRlbnQgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 33,
      "question" : "With reference to the election of  President, which of the following terms is not  referred to in the Constitution of India?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgT3B0aW9uIGMgaXMgaW5jb3JyZWN0LiBBcnRpY2xlIDU1IG9mIHRoZSBjb25zdGl0dXRpb24gc2F5cyB0aGF0ICdUaGUgZWxlY3Rpb24gb2YgdGhlIFByZXNpZGVudCBzaGFsbCBiZSBoZWxkIGluICAgYWNjb3JkYW5jZSB3aXRoIHRoZSBzeXN0ZW0gb2YgcHJvcG9ydGlvbmFsIHJlcHJlc2VudGF0aW9uIGJ5IG1lYW5zIG9mIHRoZSBzaW5nbGUgdHJhbnNmZXJhYmxlIHZvdGUgICBhbmQgdGhlIHZvdGluZyBhdCBzdWNoIGVsZWN0aW9uIHNoYWxsIGJlIGJ5IHNlY3JldCBiYWxsb3QnLiBUaGUgdGVybSBwcmVmZXJlbnRpYWwgb3IgYWx0ZXJuYXRpdmUgdm90ZSAgIHN5c3RlbSBpcyBub3QgdXNlZCBmb3IgdGhlIGVsZWN0aW9uIG9mIHByZXNpZGVudCBpbiBJbmRpYS4gSG93ZXZlciwgaXQgd2FzIHBvaW50ZWQgb3V0IGluIHRoZSBDb25zdGl0dWVudCAgIEFzc2VtYmx5IHRoYXQgdGhlIGV4cHJlc3Npb24gJ3Byb3BvcnRpb25hbCByZXByZXNlbnRhdGlvbicgaW4gdGhlIGNhc2Ugb2YgcHJlc2lkZW50aWFsIGVsZWN0aW9uIGlzIGEgICBtaXNub21lci4gUHJvcG9ydGlvbmFsIHJlcHJlc2VudGF0aW9uIHRha2VzIHBsYWNlIHdoZXJlIHR3byBvciBtb3JlIHNlYXRzIGFyZSB0byBiZSBmaWxsZWQuIEluIGNhc2Ugb2YgdGhlICAgUHJlc2lkZW50LCB0aGUgdmFjYW5jeSBpcyBvbmx5IG9uZS4gSXQgY291bGQgYmV0dGVyIGJlIGNhbGxlZCBhIHByZWZlcmVudGlhbCBvciBhbHRlcm5hdGl2ZSB2b3RlIHN5c3RlbS4gICBTaW1pbGFybHksIHRoZSBleHByZXNzaW9uICdzaW5nbGUgdHJhbnNmZXJhYmxlIHZvdGUnIHdhcyBhbHNvIG9iamVjdGVkIG9uIHRoZSBncm91bmQgdGhhdCBubyB2b3RlciBoYXMgYSAgIHNpbmdsZSB2b3RlOyBldmVyeSB2b3RlciBoYXMgcGx1cmFsIHZvdGVzLiAgICBTb3VyY2U6IE0gTGF4bWlrYW50aCBQb2xpdHkuIENoYXB0ZXIgMTcuIFByZXNpZGVudCAgICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Single transferable vote   ",
        "option2" : "Secret ballot   ",
        "option3" : "Preferential vote system   ",
        "option4" : "Proportional representation       "
      }
    },
    {
      "index" : 34,
      "question" : "Which of the following can occur in case  of a vacancy in the President's office in India?   1. When a vacancy is caused by the expiration  of his term, then it must be filled within 6  months after expiration.   2.  When a vacancy occurs due to his  resignation, the Chief Justice of India will act  as the President.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gV2hlbiB0aGUgdmFjYW5jeSBpcyBnb2luZyB0byBiZSBjYXVzZWQgYnkgdGhlIGV4cGlyYXRpb24gb2YgdGhlIHRlcm0gb2YgdGhlICAgc2l0dGluZyBQcmVzaWRlbnQsIGFuIGVsZWN0aW9uIHRvIGZpbGwgdGhlIHZhY2FuY3kgbXVzdCBiZSBoZWxkIGJlZm9yZSB0aGUgZXhwaXJhdGlvbiBvZiB0aGUgdGVybS4gSW4gY2FzZSBvZiAgIGFueSBkZWxheSBpbiBjb25kdWN0aW5nIHRoZSBlbGVjdGlvbiBvZiBuZXcgUHJlc2lkZW50IGJ5IGFueSByZWFzb24sIHRoZSBvdXRnb2luZyBQcmVzaWRlbnQgY29udGludWVzIHRvICAgaG9sZCBvZmZpY2UgKGJleW9uZCBoaXMgdGVybSBvZiBmaXZlIHllYXJzKSB1bnRpbCBoaXMgc3VjY2Vzc29yIGFzc3VtZXMgY2hhcmdlLiAgICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBXaGVuIGEgdmFjYW5jeSBvY2N1cnMgaW4gdGhlIG9mZmljZSBvZiB0aGUgUHJlc2lkZW50IGR1ZSB0byBoaXMgcmVzaWduYXRpb24sICAgcmVtb3ZhbCwgZGVhdGggb3Igb3RoZXJ3aXNlLCB0aGUgVmljZS1QcmVzaWRlbnQgYWN0cyBhcyB0aGUgUHJlc2lkZW50IHVudGlsIGEgbmV3IFByZXNpZGVudCBpcyBlbGVjdGVkLiAgIEZ1cnRoZXIsIHdoZW4gdGhlIHNpdHRpbmcgUHJlc2lkZW50IGlzIHVuYWJsZSB0byBkaXNjaGFyZ2UgaGlzIGZ1bmN0aW9ucyBkdWUgdG8gYWJzZW5jZSwgaWxsbmVzcyBvciBhbnkgICBvdGhlciBjYXVzZSwgdGhlIFZpY2UtUHJlc2lkZW50IGRpc2NoYXJnZXMgaGlzIGZ1bmN0aW9ucyB1bnRpbCB0aGUgUHJlc2lkZW50IHJlc3VtZXMgaGlzIG9mZmljZS4gSW4gY2FzZSAgIHRoZSBvZmZpY2Ugb2YgVmljZS1QcmVzaWRlbnQgaXMgdmFjYW50LCB0aGUgQ2hpZWYgSnVzdGljZSBvZiBJbmRpYSAob3IgaWYgaGlzIG9mZmljZSBpcyBhbHNvIHZhY2FudCwgdGhlIHNlbmlvciAgIG1vc3QganVkZ2Ugb2YgdGhlIFN1cHJlbWUgQ291cnQgYXZhaWxhYmxlKSBhY3RzIGFzIHRoZSBQcmVzaWRlbnQgb3IgZGlzY2hhcmdlcyB0aGUgZnVuY3Rpb25zIG9mIHRoZSAgIFByZXNpZGVudC4gICAgU291cmNlOiBNIExheG1pa2FudGggUG9saXR5LiBDaGFwdGVyIDE3LiBQcmVzaWRlbnQgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements with  respect to Cabinet Committees in India:   1.  The Prime Minister heads all the Cabinet  Committees.   2.  Cabinet Committee is an extra- constitutional body.   3.  The Cabinet Committees are only advisory  bodies and cannot take any decision.    4.  Non-Cabinet ministers can be included as  members of Cabinet Committees.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gQWxsIENvbW1pdHRlZXMgZXhjZXB0IENhYmluZXQgQ29tbWl0dGVlIG9uIEFjY29tbW9kYXRpb24gYW5kIENhYmluZXQgICBDb21taXR0ZWUgb24gUGFybGlhbWVudGFyeSBBZmZhaXJzIGFyZSBoZWFkZWQgYnkgUHJpbWUgTWluaXN0ZXIuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIENhYmluZXQgQ29tbWl0dGVlcyBhcmUgZXh0cmEtY29uc3RpdHV0aW9uYWwgaW4gZW1lcmdlbmNlLCB3aGljaCBtZWFucywgdGhleSAgIGFyZSBub3QgbWVudGlvbmVkIGluIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uLiBCdXQsIHRoZSBSdWxlcyBvZiBCdXNpbmVzcyBwcm92aWRlIGZvciB0aGVpciBmb3JtYXRpb24uIFRoZXkgICBhcmUgZXN0YWJsaXNoZWQgYnkgdGhlIFBNIGFzIHBlciB0aGUgZXhpZ2VuY2llcyBvZiB0aGUgdGltZSBhbmQgbmVlZHMgb2YgdGhlIHNpdHVhdGlvbi4gSGVuY2UsIHRoZWlyICAgbnVtYmVyLCBub21lbmNsYXR1cmUsIGFuZCBjb21wb3NpdGlvbiB2YXJ5IGZyb20gdGltZSB0byB0aW1lLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBDYWJpbmV0IENvbW1pdHRlZXMgbm90IG9ubHkgc29ydCBvdXQgaXNzdWVzIGFuZCBmb3JtdWxhdGUgcHJvcG9zYWxzIGZvciAgIHRoZSBjb25zaWRlcmF0aW9uIG9mIHRoZSBDYWJpbmV0LCBidXQgYWxzbyB0YWtlIGRlY2lzaW9ucy4gSG93ZXZlciwgdGhlIENhYmluZXQgY2FuIHJldmlldyB0aGVpciAgIGRlY2lzaW9ucy4gICAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIE5vbi1jYWJpbmV0IG1pbmlzdGVycyBjYW4gYWxzbyBiZSBpbmNsdWRlZCBhcyBtZW1iZXJzLiBBcGFydCBmcm9tIHRoZSBtaW5pc3RlcnMgICBpbiBjaGFyZ2Ugb2YgdGhlIHN1YmplY3RzIGNvdmVyZWQsIG90aGVyIHNlbmlvciBtaW5pc3RlcnMgY2FuIGFsc28gYmUgaW5jbHVkZWQgYXMgbWVtYmVycy4gU3VjaCAgIENvbW1pdHRlZXMgYXJlIHVzdWFsbHkgY2hhaXJlZCBieSB0aGUgUE0uIEF0IHRpbWVzLCBvdGhlciBDYWJpbmV0IG1pbmlzdGVycyBsaWtlIEhvbWUsIEZpbmFuY2UsIGV0Yy4gY2FuICAgYWxzbyBiZSB0aGUgY2hhaXJwZXJzb24uIEJ1dCwgaWYgdGhlIFByaW1lIE1pbmlzdGVyIGlzIGEgbWVtYmVyIG9mIHRoZSBjb21taXR0ZWUsIHRoZW4sIGhlIG9yIHNoZSBpcyB0aGUgICBoZWFkIG9mIHRoZSBjb21taXR0ZWUuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSAtIDZ0aCBFZGl0aW9uIExheG1pa2FudCAgICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "2 and 4 only   ",
        "option2" : "1, 2 and 3 only   ",
        "option3" : "3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 36,
      "question" : "Which one of the following actions of the  Parliament does not require an amendment of  the Constitution?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICBTZXR0bGVtZW50IG9mIGEgYm91bmRhcnkgZGlzcHV0ZSBkb2VzIG5vdCByZXF1aXJlIGEgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50LiBJbiAxOTY5LCB0aGUgU3VwcmVtZSAgIENvdXJ0IHJ1bGVkIHRoYXQgdGhlIHNldHRsZW1lbnQgb2YgYSBib3VuZGFyeSBkaXNwdXRlIGJldHdlZW4gSW5kaWEgYW5kIGFub3RoZXIgY291bnRyeSBjYW4gYmUgZG9uZSBieSAgIGV4ZWN1dGl2ZSBhY3Rpb24gYXMgaXQgZG9lcyBub3QgaW52b2x2ZSBjZXNzaW9uIG9mIEluZGlhbiB0ZXJyaXRvcnkgdG8gYSBmb3JlaWduIGNvdW50cnkuICAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3QuIEFib2xpdGlvbiBvciBjcmVhdGlvbiBvZiBsZWdpc2xhdGl2ZSBjb3VuY2lscyBpbiBzdGF0ZXMgY2FuIGJlIGRvbmUgYnkgYW1lbmRpbmcgdGhlICAgQ29uc3RpdHV0aW9uIGJ5IGEgc2ltcGxlIG1ham9yaXR5IG9mIHRoZSB0d28gSG91c2VzIG9mIFBhcmxpYW1lbnQuIEJ1dCBpdCBpcyBvdXRzaWRlIHRoZSBzY29wZSBvZiBBcnRpY2xlICAgMzY4LiAgICAgIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gU2FsYXJpZXMgYW5kIGFsbG93YW5jZXMgb2YgdGhlIG1lbWJlcnMgb2YgUGFybGlhbWVudCBjYW4gYmUgYWx0ZXJlZCBieSAgIGFtZW5kaW5nIHRoZSBDb25zdGl0dXRpb24gYnkgYSBzaW1wbGUgbWFqb3JpdHkgb2YgdGhlIHR3byBIb3VzZXMgb2YgUGFybGlhbWVudC4gQnV0IGl0IGlzIG91dHNpZGUgdGhlICAgc2NvcGUgb2YgQXJ0aWNsZSAzNjguICAgICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0LiBJbmRpYW4gdGVycml0b3J5IGNhbiBiZSBjZWRlZCB0byBhIGZvcmVpZ24gc3RhdGUgb25seSBieSBhbWVuZGluZyB0aGUgQ29uc3RpdHV0aW9uICAgdW5kZXIgQXJ0aWNsZSAzNjguIFRoZSBTdXByZW1lIENvdXJ0IGhlbGQgdGhhdCB0aGUgcG93ZXIgb2YgUGFybGlhbWVudCB0byBkaW1pbmlzaCB0aGUgYXJlYSBvZiBhIHN0YXRlICAgZG9lcyBub3QgY292ZXIgY2Vzc2lvbiBvZiBJbmRpYW4gdGVycml0b3J5IHRvIGEgZm9yZWlnbiBjb3VudHJ5LiAgICAgS25vd2xlZGdlIEJhc2U6IFRoZSBDb25zdGl0dXRpb24gY2FuIGJlIGFtZW5kZWQgaW4gdGhyZWUgd2F5czogICAgKGEpIEFtZW5kbWVudCBieSBzaW1wbGUgbWFqb3JpdHkgb2YgdGhlIFBhcmxpYW1lbnQuIE9wdGlvbiBhIGFuZCBiIGFyZSBpdHMgZXhhbXBsZS4gVGhlc2UgYW1lbmRtZW50cyAgIGFyZSBub3QgZGVlbWVkIHRvIGJlIGFtZW5kbWVudHMgb2YgdGhlIENvbnN0aXR1dGlvbiBmb3IgdGhlIHB1cnBvc2VzIG9mIEFydGljbGUgMzY4LiAgICAgKGIpIEFtZW5kbWVudCBieSBzcGVjaWFsIG1ham9yaXR5IG9mIHRoZSBQYXJsaWFtZW50LiAgICAgKGMpIEFtZW5kbWVudCBieSBzcGVjaWFsIG1ham9yaXR5IG9mIHRoZSBQYXJsaWFtZW50IGFuZCB0aGUgcmF0aWZpY2F0aW9uIG9mIGhhbGYgb2YgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlcy4gICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIFVuaW9uIGFuZCBUZXJyaXRvcnksIEFtZW5kbWVudCBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Creation of legislative councils in states   ",
        "option2" : " Increase in allowances of the members of   Parliament   ",
        "option3" : " Settlement of a boundary dispute   ",
        "option4" : " Cession of Indian territory to a foreign   country       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 37,
      "question" : "The Forty-Second Amendment Act, 1976,  is sometimes considered as the most  comprehensive amendment made so far to the  Constitution of India. Which of the following  changes were made by it?   1.  Deleted the right to property from the list of  Fundamental Rights    2.  Made the President bound by the advice of  the Cabinet   3.  Shifted five subjects from the state list to the  concurrent list   4.  Provided for administrative tribunals    5.  Curtailed the power of judicial review of the  High Courts  6.  Did away with the requirement of quorum in  the Parliament.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudHMgMiwgMywgNCwgNSBhbmQgNiBhcmUgY29ycmVjdC4gICAgIFRoZSBwcm92aXNpb25zIG9mIEZvcnR5LVNlY29uZCBBbWVuZG1lbnQgQWN0LCAxOTc2OiAgICAxKSBBZGRlZCB0aHJlZSBuZXcgd29yZHMgKGkuZS4sIHNvY2lhbGlzdCwgc2VjdWxhciBhbmQgaW50ZWdyaXR5KSBpbiB0aGUgUHJlYW1ibGUuICAgIDIpIEFkZGVkIEZ1bmRhbWVudGFsIER1dGllcyBieSB0aGUgY2l0aXplbnMgKG5ldyBQYXJ0IElWIEEpLiAgICAzKSBNYWRlIHRoZSBQcmVzaWRlbnQgYm91bmQgYnkgdGhlIGFkdmljZSBvZiB0aGUgQ2FiaW5ldC4gICAgNCkgUHJvdmlkZWQgZm9yIGFkbWluaXN0cmF0aXZlIHRyaWJ1bmFscyBhbmQgdHJpYnVuYWxzIGZvciBvdGhlciBtYXR0ZXJzIChBZGRlZCBQYXJ0IFhJViBBKS4gICAgNSkgRnJvemUgdGhlIHNlYXRzIGluIHRoZSBMb2sgU2FiaGEgYW5kIHN0YXRlIGxlZ2lzbGF0aXZlIGFzc2VtYmxpZXMgb24gdGhlIGJhc2lzIG9mIDE5NzEgY2Vuc3VzIHRpbGwgMjAwMS4gICAgNikgTWFkZSB0aGUgY29uc3RpdHV0aW9uYWwgYW1lbmRtZW50cyBiZXlvbmQganVkaWNpYWwgc2NydXRpbnkuICAgIDcpIEN1cnRhaWxlZCB0aGUgcG93ZXIgb2YganVkaWNpYWwgcmV2aWV3IGFuZCB3cml0IGp1cmlzZGljdGlvbiBvZiB0aGUgU3VwcmVtZSBDb3VydCBhbmQgaGlnaCAgIGNvdXJ0cy4gICAgOCkgUmFpc2VkIHRoZSB0ZW51cmUgb2YgTG9rIFNhYmhhIGFuZCBzdGF0ZSBsZWdpc2xhdGl2ZSBhc3NlbWJsaWVzIGZyb20gNSB0byA2IHllYXJzLiAgICA5KSBQcm92aWRlZCB0aGF0IHRoZSBsYXdzIG1hZGUgZm9yIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBEaXJlY3RpdmUgUHJpbmNpcGxlcyBjYW5ub3QgYmUgZGVjbGFyZWQgICBpbnZhbGlkIGJ5IHRoZSBjb3VydHMgb24gdGhlIGdyb3VuZCBvZiB2aW9sYXRpb24gb2Ygc29tZSBGdW5kYW1lbnRhbCBSaWdodHMuICAgIDEwKSBFbXBvd2VyZWQgdGhlIFBhcmxpYW1lbnQgdG8gbWFrZSBsYXdzIHRvIGRlYWwgd2l0aCBhbnRpbmF0aW9uYWwgYWN0aXZpdGllcyBhbmQgc3VjaCBsYXdzIGFyZSB0byAgIHRha2UgcHJlY2VkZW5jZSBvdmVyIEZ1bmRhbWVudGFsIFJpZ2h0cy4gICAgMTEpIEFkZGVkIHRocmVlIG5ldyBEaXJlY3RpdmUgUHJpbmNpcGxlcyB2aXouLCBlcXVhbCBqdXN0aWNlIGFuZCBmcmVlLWxlZ2FsIGFpZCwgcGFydGljaXBhdGlvbiBvZiB3b3JrZXJzIGluICAgdGhlIG1hbmFnZW1lbnQgb2YgaW5kdXN0cmllcyBhbmQgcHJvdGVjdGlvbiBvZiBlbnZpcm9ubWVudCwgZm9yZXN0cyBhbmQgd2lsZCBsaWZlLiAgICAxMikgRmFjaWxpdGF0ZWQgdGhlIHByb2NsYW1hdGlvbiBvZiBuYXRpb25hbCBlbWVyZ2VuY3kgaW4gYSBwYXJ0IG9mIHRlcnJpdG9yeSBvZiBJbmRpYS4gICAgMTMpIEV4dGVuZGVkIHRoZSBvbmUtdGltZSBkdXJhdGlvbiBvZiB0aGUgUHJlc2lkZW50J3MgcnVsZSBpbiBhIHN0YXRlIGZyb20gNiBtb250aHMgdG8gb25lIHllYXIuICAgIDE0KSBFbXBvd2VyZWQgdGhlIENlbnRyZSB0byBkZXBsb3kgaXRzIGFybWVkIGZvcmNlcyBpbiBhbnkgc3RhdGUgdG8gZGVhbCB3aXRoIGEgZ3JhdmUgc2l0dWF0aW9uIG9mIGxhdyAgIGFuZCBvcmRlci4gICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIDE1KSBTaGlmdGVkIGZpdmUgc3ViamVjdHMgZnJvbSB0aGUgc3RhdGUgbGlzdCB0byB0aGUgY29uY3VycmVudCBsaXN0LCB2aXosIGVkdWNhdGlvbiwgZm9yZXN0cywgcHJvdGVjdGlvbiBvZiAgIHdpbGQgYW5pbWFscyBhbmQgYmlyZHMsIHdlaWdodHMgYW5kIG1lYXN1cmVzIGFuZCBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlLCBjb25zdGl0dXRpb24gYW5kICAgb3JnYW5pc2F0aW9uIG9mIGFsbCBjb3VydHMgZXhjZXB0IHRoZSBTdXByZW1lIENvdXJ0IGFuZCB0aGUgaGlnaCBjb3VydHMuICAgIDE2KSBEaWQgYXdheSB3aXRoIHRoZSByZXF1aXJlbWVudCBvZiBxdW9ydW0gaW4gdGhlIFBhcmxpYW1lbnQgYW5kIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMuICAgIDE3KSBFbXBvd2VyZWQgdGhlIFBhcmxpYW1lbnQgdG8gZGVjaWRlIGZyb20gdGltZSB0byB0aW1lIHRoZSByaWdodHMgYW5kIHByaXZpbGVnZXMgb2YgaXRzIG1lbWJlcnMgYW5kICAgY29tbWl0dGVlcy4gICAgMTgpIFByb3ZpZGVkIGZvciB0aGUgY3JlYXRpb24gb2YgdGhlIEFsbC1JbmRpYSBKdWRpY2lhbCBTZXJ2aWNlLiAgICAxOSkgU2hvcnRlbmVkIHRoZSBwcm9jZWR1cmUgZm9yIGRpc2NpcGxpbmFyeSBhY3Rpb24gYnkgdGFraW5nIGF3YXkgdGhlIHJpZ2h0IG9mIGEgY2l2aWwgc2VydmFudCB0byBtYWtlICAgcmVwcmVzZW50YXRpb24gYXQgdGhlIHNlY29uZCBzdGFnZSBhZnRlciB0aGUgaW5xdWlyeSAoaS5lLiwgb24gdGhlIHBlbmFsdHkgcHJvcG9zZWQpLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFRoZSBGb3J0eS1Gb3VydGggQW1lbmRtZW50IEFjdCwgMTk3OCBkZWxldGVkIHRoZSByaWdodCB0byBwcm9wZXJ0eSBmcm9tIHRoZSAgIGxpc3Qgb2YgRnVuZGFtZW50YWwgUmlnaHRzIGFuZCBtYWRlIGl0IG9ubHkgYSBsZWdhbCByaWdodC4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1,2 4 and 5 only   ",
        "option2" : "1, 2, 3 and 4 only   ",
        "option3" : "2, 3, 4, 5 and 6 only   ",
        "option4" : "1, 2, 3, 4, 5 and 6   "
      }
    },
    {
      "index" : 38,
      "question" : "With reference to the provisions for  National emergency in India, consider the  following statements:   1.  The President can issue a proclamation of  national emergency even if some other  proclamation is already in operation.   2.  The President can proclaim an emergency  on the advice of Prime minister but has to  take approval of Council of Ministers later  on.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFVuZGVyIEFydGljbGUgMzUyLCB0aGUgUHJlc2lkZW50IGNhbiBhbHNvIGlzc3VlIGRpZmZlcmVudCBwcm9jbGFtYXRpb25zIG9uICAgZ3JvdW5kcyBvZiB3YXIsIGV4dGVybmFsIGFnZ3Jlc3Npb24sIGFybWVkIHJlYmVsbGlvbiwgb3IgaW1taW5lbnQgZGFuZ2VyLiBIZS9zaGUgY2FuIGlzc3V1ZSBzdWNoICAgcHJvY2xhbWF0aW9uIHdoZXRoZXIgb3Igbm90IHRoZXJlIGlzIGEgcHJvY2xhbWF0aW9uIGFscmVhZHkgaXNzdWVkIGJ5IGhpbSBlYXJsaWVyIGFuZCBzdWNoIHByb2NsYW1hdGlvbiAgIGlzIGluIG9wZXJhdGlvbi4gVGhpcyBwcm92aXNpb24gd2FzIGFkZGVkIGJ5IHRoZSAzOHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3NS4gVGhlIHNlY29uZCBuYXRpb25hbCAgIGVtZXJnZW5jeSB3YXMgbWFkZSBpbiBEZWNlbWJlciAxOTcxIGluIHRoZSB3YWtlIG9mIGF0dGFjayBieSBQYWtpc3Rhbi4gRXZlbiB3aGVuIHRoaXMgRW1lcmdlbmN5IHdhcyAgIGluIG9wZXJhdGlvbiwgYSB0aGlyZCBwcm9jbGFtYXRpb24gb2YgTmF0aW9uYWwgRW1lcmdlbmN5IHdhcyBtYWRlIGluIEp1bmUgMTk3NS4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgUHJlc2lkZW50IGNhbiBwcm9jbGFpbSBhIG5hdGlvbmFsIGVtZXJnZW5jeSBvbmx5IGFmdGVyIHJlY2VpdmluZyBhICAgd3JpdHRlbiByZWNvbW1lbmRhdGlvbiBmcm9tIHRoZSBDYWJpbmV0LiBUaGlzIG1lYW5zIHRoYXQgdGhlIGVtZXJnZW5jeSBjYW4gYmUgZGVjbGFyZWQgb25seSBvbiB0aGUgICBjb25jdXJyZW5jZSBvZiB0aGUgY2FiaW5ldCBhbmQgbm90IG1lcmVseSBvbiB0aGUgYWR2aWNlIG9mIHRoZSBwcmltZSBtaW5pc3Rlci4gVGhlIDQ0dGggQW1lbmRtZW50ICAgQWN0IG9mIDE5NzggaW50cm9kdWNlZCB0aGlzIHNhZmVndWFyZCB0byBlbGltaW5hdGUgYW55IHBvc3NpYmlsaXR5IG9mIHRoZSBwcmltZSBtaW5pc3RlciBhbG9uZSB0YWtpbmcgYSAgIGRlY2lzaW9uIGluIHRoaXMgcmVnYXJkLiAgICAgU291cmNlOiBNLiBMYXhtaWthbnRoIENoYXB0ZXIgMTYgRW1lcmdlbmN5IFByb3Zpc2lvbnMgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following constitutional  amendments are passed by a special majority of  the Parliament and also with the consent of half  of the state legislatures?   1.  Representation of states in Parliament   2.  Elections to Parliament and state  legislatures   3.  Goods and Services Tax Council   4. Extent of the executive power of the Union  and the states   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxLCAzIGFuZCA0IGFyZSBjb3JyZWN0OiBUaG9zZSBwcm92aXNpb25zIG9mIHRoZSBDb25zdGl0dXRpb24gd2hpY2ggYXJlIHJlbGF0ZWQgdG8gdGhlIGZlZGVyYWwgICBzdHJ1Y3R1cmUgb2YgdGhlIHBvbGl0eSBjYW4gYmUgYW1lbmRlZCBieSBhIHNwZWNpYWwgbWFqb3JpdHkgb2YgdGhlIFBhcmxpYW1lbnQgYW5kIGFsc28gd2l0aCB0aGUgY29uc2VudCAgIG9mIGhhbGYgb2YgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlcyBieSBhIHNpbXBsZSBtYWpvcml0eS4gVGhlIGZvbGxvd2luZyBwcm92aXNpb25zIGNhbiBiZSBhbWVuZGVkIHRoaXMgd2F5OiAgICAgMSkgRWxlY3Rpb24gb2YgdGhlIFByZXNpZGVudCBhbmQgaXRzIG1hbm5lci4gICAgIDIpIEV4dGVudCBvZiB0aGUgZXhlY3V0aXZlIHBvd2VyIG9mIHRoZSBVbmlvbiBhbmQgdGhlIHN0YXRlcy4gICAgIDMpIFN1cHJlbWUgQ291cnQgYW5kIGhpZ2ggY291cnRzLiAgICAgNCkgRGlzdHJpYnV0aW9uIG9mIGxlZ2lzbGF0aXZlIHBvd2VycyBiZXR3ZWVuIHRoZSBVbmlvbiBhbmQgdGhlIHN0YXRlcy4gICAgIDUpIEdvb2RzIGFuZCBTZXJ2aWNlcyBUYXggQ291bmNpbC4gICAgICA2KSBBbnkgb2YgdGhlIGxpc3RzIGluIHRoZSBTZXZlbnRoIFNjaGVkdWxlLiAgICAgNykgUmVwcmVzZW50YXRpb24gb2Ygc3RhdGVzIGluIFBhcmxpYW1lbnQuICAgICA4KSBQb3dlciBvZiBQYXJsaWFtZW50IHRvIGFtZW5kIHRoZSBDb25zdGl0dXRpb24gYW5kIGl0cyBwcm9jZWR1cmUgKEFydGljbGUgMzY4IGl0c2VsZikuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogUHJvdmlzaW9ucyByZWxhdGVkIHRvICdFbGVjdGlvbnMgdG8gUGFybGlhbWVudCBhbmQgc3RhdGUgbGVnaXNsYXR1cmVzJyBjYW4gYmUgICBhbWVuZGVkIGJ5IGEgc2ltcGxlIG1ham9yaXR5IGluIHRoZSBwYXJsaWFtZW50LiAgICBLbm93bGVkZ2UgQmFzZTogICAgIFRoZSBDb25zdGl0dXRpb24gY2FuIGJlIGFtZW5kZWQgaW4gdGhyZWUgd2F5czogICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIDEpIEFtZW5kbWVudCBieSBzaW1wbGUgbWFqb3JpdHkgb2YgdGhlIFBhcmxpYW1lbnQgLSBBIG51bWJlciBvZiBwcm92aXNpb25zIGluIHRoZSBDb25zdGl0dXRpb24gY2FuIGJlICAgYW1lbmRlZCBieSBhIHNpbXBsZSBtYWpvcml0eSBvZiB0aGUgdHdvIEhvdXNlcyBvZiBQYXJsaWFtZW50IG91dHNpZGUgdGhlIHNjb3BlIG9mIEFydGljbGUgMzY4LiBGb3IgICBleGFtcGxlIC0gQWRtaXNzaW9uIG9yIGVzdGFibGlzaG1lbnQgb2YgbmV3IHN0YXRlczsgRm9ybWF0aW9uIG9mIG5ldyBzdGF0ZXMgYW5kIGFsdGVyYXRpb24gb2YgYXJlYXMsICAgYm91bmRhcmllcyBvciBuYW1lcyBvZiBleGlzdGluZyBzdGF0ZXM7IEFib2xpdGlvbiBvciBjcmVhdGlvbiBvZiBsZWdpc2xhdGl2ZSBjb3VuY2lscyBpbiBzdGF0ZXMgZXRjLiAgICAyKSBBbWVuZG1lbnQgYnkgc3BlY2lhbCBtYWpvcml0eSBvZiB0aGUgUGFybGlhbWVudCAtIFRoZSBwcm92aXNpb25zIHdoaWNoIGNhbiBiZSBhbWVuZGVkIGJ5IHRoaXMgd2F5ICAgaW5jbHVkZXM6IChpKSBGdW5kYW1lbnRhbCBSaWdodHM7IChpaSkgRGlyZWN0aXZlIFByaW5jaXBsZXMgb2YgU3RhdGUgUG9saWN5OyBhbmQgKGlpaSkgQWxsIG90aGVyIHByb3Zpc2lvbnMgICB3aGljaCBhcmUgbm90IGNvdmVyZWQgYnkgdGhlIGZpcnN0IGFuZCB0aGlyZCBjYXRlZ29yaWVzLiAgICAzKSBBbWVuZG1lbnQgYnkgc3BlY2lhbCBtYWpvcml0eSBvZiB0aGUgUGFybGlhbWVudCBhbmQgdGhlIHJhdGlmaWNhdGlvbiBvZiBoYWxmIG9mIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMgICAtIE1hdHRlciByZWxhdGVkIHRvIGZlZGVyYWwgc3RydWN0dXJlOyB1bmRlciB0aGlzIElmIG9uZSBvciBzb21lIG9yIGFsbCB0aGUgcmVtYWluaW5nIHN0YXRlcyB0YWtlIG5vICAgYWN0aW9uIG9uIHRoZSBiaWxsLCBpdCBkb2VzIG5vdCBtYXR0ZXI7IHRoZSBtb21lbnQgaGFsZiBvZiB0aGUgc3RhdGVzIGdpdmUgdGhlaXIgY29uc2VudCwgdGhlIGZvcm1hbGl0eSBpcyAgIGNvbXBsZXRlZC4gVGhlcmUgaXMgbm8gdGltZSBsaW1pdCB3aXRoaW4gd2hpY2ggdGhlIHN0YXRlcyBzaG91bGQgZ2l2ZSB0aGVpciBjb25zZW50IHRvIHRoZSBiaWxsLiAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgLSBNIExheG1pa2FudGggLSA2dGggZWRpdGlvbiAtIGNoYXB0ZXIgMTAgLSBBbWVuZG1lbnQgb2YgdGhlIENvbnN0aXR1dGlvbiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only    ",
        "option2" : "1, 3 and 4 only   ",
        "option3" : "2, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs:   Constitutional  Amendment   Related to   1. 101st  Amendment   Constitutional status  to National  Commission for  Backward Classes  (NCBC)    2. 102nd  Amendment   Goods and Services  Tax (GST)  3. 103rd  Amendment   Reservation to the  Economically Weaker  Section (EWS)   4. 104th  Amendment   Reservation of seats  in the Lok Sabha and  state legislative  assemblies for  members of SCs and  STs.   Which of the pairs given above are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgICBQYWlyIDEgaXMgaW5jb3JyZWN0OiBUaGUgQ29uc3RpdHV0aW9uIChPbmUgSHVuZHJlZCBhbmQgRmlyc3QgQW1lbmRtZW50KSBBY3QsIDIwMTYsIGludHJvZHVjZWQgYSBuYXRpb25hbCAgIEdvb2RzIGFuZCBTZXJ2aWNlcyBUYXggKEdTVCkgaW4gSW5kaWEgZnJvbSAxIEp1bHkgMjAxNy4gICAgUGFpciAyIGlzIGluY29ycmVjdDogVGhlIDEwMm5kIENvbnN0aXR1dGlvbiBBbWVuZG1lbnQgQWN0IG9mIDIwMTggaW5zZXJ0ZWQgYXJ0aWNsZXMgMzM4Qiwgd2hpY2ggZGVhbHMgICB3aXRoIHRoZSBzdHJ1Y3R1cmUsIGR1dGllcyBhbmQgcG93ZXJzIG9mIHRoZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciBCYWNrd2FyZCBDbGFzc2VzLCBhbmQgMzQyQSB0aGF0ICAgZGVhbHMgd2l0aCB0aGUgcG93ZXJzIG9mIHRoZSBwcmVzaWRlbnQgdG8gbm90aWZ5IGEgcGFydGljdWxhciBjYXN0ZSBhcyBhbiBTRUJDIGFuZCB0aGUgcG93ZXIgb2YgICBQYXJsaWFtZW50IHRvIGNoYW5nZSB0aGUgbGlzdC4gICAgIFBhaXIgMyBpcyBjb3JyZWN0OiBUaGUgMTAzcmQgQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCwgMjAxOSB3YXMgcGFzc2VkIHRvIHByb3ZpZGUgcmVzZXJ2YXRpb24gdG8gdGhlICAgRWNvbm9taWNhbGx5IFdlYWtlciBTZWN0aW9uIChFV1MpIGluIGFwcG9pbnRtZW50IHRvIGdvdmVybm1lbnQgam9icyBhbmQgYWRtaXNzaW9uIHRvIGdvdmVybm1lbnQgICBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMsIGFzIHBlciBwcm92aXNpb25zIG9mIHRoZSBuZXdseSBpbnNlcnRlZCBBcnRpY2xlcyAxNSg2KSBhbmQgMTYoNikuICAgIFBhaXIgNCBpcyBjb3JyZWN0OiBUaGUgMTA0dGggQW1lbmRtZW50IG9mIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEsIGV4dGVuZHMgdGhlIGRlYWRsaW5lIGZvciB0aGUgICBjZXNzYXRpb24gZm9yIHRoZSByZXNlcnZhdGlvbiBvZiBzZWF0cyBmb3IgbWVtYmVycyBmcm9tIFNjaGVkdWxlZCBDYXN0ZXMgYW5kIFNjaGVkdWxlZCBUcmliZXMgaW4gdGhlICAgTG9rIFNhYmhhIGFuZCBTdGF0ZSBMZWdpc2xhdGl2ZSBBc3NlbWJsaWVzIGJ5IGEgcGVyaW9kIG9mIDEwIHllYXJzLiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "3 and 4 only   ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements about  effects of National emergency on fundamental  rights:   1.  When a proclamation of national emergency  is made, the Fundamental Rights under  Article 19 of the Constitution are  automatically suspended.   2.  The enforcement of the right to life and  liberty cannot be suspended during national  emergency.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFjY29yZGluZyB0byBBcnRpY2xlIDM1OCwgd2hlbiBhIHByb2NsYW1hdGlvbiBvZiBuYXRpb25hbCBlbWVyZ2VuY3kgaXMgbWFkZSwgdGhlICAgc2l4IEZ1bmRhbWVudGFsIFJpZ2h0cyB1bmRlciBBcnRpY2xlIDE5IG9mIHRoZSBDb25zdGl0dXRpb24gYXJlIGF1dG9tYXRpY2FsbHkgc3VzcGVuZGVkLiBObyBzZXBhcmF0ZSAgIG9yZGVyIGZvciB0aGVpciBzdXNwZW5zaW9uIGlzIHJlcXVpcmVkLiBUaGUgc3RhdGUgY2FuIG1ha2UgYW55IGxhdyBvciBjYW4gdGFrZSBhbnkgZXhlY3V0aXZlIGFjdGlvbiAgIGFicmlkZ2luZyBvciB0YWtpbmcgYXdheSB0aGUgc2l4IEZ1bmRhbWVudGFsIFJpZ2h0IGd1YXJhbnRlZWQgYnkgQXJ0aWNsZSAxOS4gICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSA0NHRoIEFtZW5kbWVudCBBY3Qgb2YgMTk3OCByZXN0cmljdGVkIHRoZSBzY29wZSBvZiBBcnRpY2xlIDM1OSBieSBub3QgICBhbGxvd2luZyBQcmVzaWRlbnQgdG8gc3VzcGVuZCB0aGUgcmlnaHQgdG8gbW92ZSB0aGUgQ291cnQgZm9yIHRoZSBlbmZvcmNlbWVudCBvZiBmdW5kYW1lbnRhbCByaWdodHMgICBndWFyYW50ZWVkIGJ5IEFydGljbGVzIDIwIHRvIDIxLiBJbiBvdGhlciB3b3JkcywgdGhlIHJpZ2h0IHRvIHByb3RlY3Rpb24gaW4gcmVzcGVjdCBvZiBjb252aWN0aW9uIGZvciAgIG9mZmVuY2VzIChBcnRpY2xlIDIwKSBhbmQgdGhlIHJpZ2h0IHRvIGxpZmUgYW5kIHBlcnNvbmFsIGxpYmVydHkgKEFydGljbGUgMjEpIHJlbWFpbiBlbmZvcmNlYWJsZSBldmVuIGR1cmluZyAgIGVtZXJnZW5jeS4gICAgU291cmNlOiBNLiBMYXhtaWthbnRoIENoYXB0ZXIgMTYgRW1lcmdlbmN5IFByb3Zpc2lvbnMgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2         \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to duration and approval  of the President's rule, consider the following  statements:   1.  A proclamation imposing President's Rule  must be approved by the Lok Sabha within  two months from the date of its issue.   2.  Once approved by Parliament the  President's Rule continues for six months.   3. The 44th Constitutional Amendment Act  restricted the maximum duration of  President's Rule to one year.   Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBIHByb2NsYW1hdGlvbiBpbXBvc2luZyBQcmVzaWRlbnQncyBSdWxlIG11c3QgYmUgYXBwcm92ZWQgYnkgYm90aCB0aGUgSG91c2VzICAgb2YgUGFybGlhbWVudCB3aXRoaW4gdHdvIG1vbnRocyBmcm9tIHRoZSBkYXRlIG9mIGl0cyBpc3N1ZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gT25jZSBhcHByb3ZlZCBieSBib3RoIHRoZSBIb3VzZXMgb2YgUGFybGlhbWVudCwgdGhlIFByZXNpZGVudCdzIFJ1bGUgY29udGludWVzICAgZm9yIHNpeCBtb250aHMuIEl0IGNhbiBiZSBleHRlbmRlZCBmb3IgYSBtYXhpbXVtIHBlcmlvZCBvZiB0aHJlZSB5ZWFycyB3aXRoIHRoZSBhcHByb3ZhbCBvZiB0aGUgICBQYXJsaWFtZW50LCBldmVyeSBzaXggbW9udGhzLiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgNDR0aCBBbWVuZG1lbnQgQWN0IG9mIDE5NzggZG9lcyBub3QgcmVzdHJpY3QgZHVyYXRpb24gb2YgUHJlc2lkZW50aWFsIHJ1bGUgICBmb3Igb25lIHllYXIuIEhvd2V2ZXIsIGl0IGludHJvZHVjZWQgYSBuZXcgcHJvdmlzaW9uIHRvIHB1dCByZXN0cmFpbnQgb24gdGhlIHBvd2VyIG9mIFBhcmxpYW1lbnQgdG8gICBleHRlbmQgYSBwcm9jbGFtYXRpb24gb2YgUHJlc2lkZW50J3MgUnVsZSBiZXlvbmQgb25lIHllYXIuIFRodXMsIGl0IHByb3ZpZGVkIHRoYXQsIGJleW9uZCBvbmUgeWVhciwgdGhlICAgUHJlc2lkZW50J3MgUnVsZSBjYW4gYmUgZXh0ZW5kZWQgYnkgc2l4IG1vbnRocyBhdCBhIHRpbWUgb25seSB3aGVuICAgIDEpIGEgcHJvY2xhbWF0aW9uIG9mIE5hdGlvbmFsIEVtZXJnZW5jeSBzaG91bGQgYmUgaW4gb3BlcmF0aW9uIGluIHRoZSB3aG9sZSBvZiBJbmRpYSwgb3IgaW4gdGhlIHdob2xlIG9yICAgYW55IHBhcnQgb2YgdGhlIHN0YXRlOyBhbmQgICAgMikgdGhlIEVsZWN0aW9uIENvbW1pc3Npb24gbXVzdCBjZXJ0aWZ5IHRoYXQgdGhlIGdlbmVyYWwgZWxlY3Rpb25zIHRvIHRoZSBsZWdpc2xhdGl2ZSBhc3NlbWJseSBvZiB0aGUgICBjb25jZXJuZWQgc3RhdGUgY2Fubm90IGJlIGhlbGQgb24gYWNjb3VudCBvZiBkaWZmaWN1bHRpZXMuICAgIFNvdXJjZTogTS4gTGF4bWlrYW50aCBDaGFwdGVyIDE2IEVtZXJnZW5jeSBQcm92aXNpb25zICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 only   ",
        "option3" : "1 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 43,
      "question" : "A Bill contains a borrowing clause, but  does not exclusively deal with borrowing. The  President's recommendation is necessary for  the introduction of the bill. It can be introduced  only in the Lok Sabha and not in the Rajya  Sabha. It can be either rejected or amended by  the Rajya Sabha.  Which one of the following bills is best  described in the above paragraph?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICBBIEZpbmFuY2lhbCBCaWxsIChJKSBpcyBhIGJpbGwgdGhhdCBjb250YWlucyBub3Qgb25seSBhbnkgb3IgYWxsIHRoZSBtYXR0ZXJzIG1lbnRpb25lZCBpbiBBcnRpY2xlIDExMCwgYnV0IGFsc28gICBvdGhlciBtYXR0ZXJzIG9mIGdlbmVyYWwgbGVnaXNsYXRpb24uIEZvciBleGFtcGxlLCBhIGJpbGwgdGhhdCBjb250YWlucyBhIGJvcnJvd2luZyBjbGF1c2UsIGJ1dCBkb2VzIG5vdCAgIGV4Y2x1c2l2ZWx5IGRlYWwgd2l0aCBib3Jyb3dpbmcuIEluIHR3byByZXNwZWN0cywgYSBmaW5hbmNpYWwgYmlsbCAoSSkgaXMgc2ltaWxhciB0byBhIG1vbmV5IGJpbGwtKGEpIGJvdGggb2YgICB0aGVtIGNhbiBiZSBpbnRyb2R1Y2VkIG9ubHkgaW4gdGhlIExvayBTYWJoYSBhbmQgbm90IGluIHRoZSBSYWp5YSBTYWJoYSwgYW5kIChiKSBib3RoIG9mIHRoZW0gY2FuIGJlICAgaW50cm9kdWNlZCBvbmx5IG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiB0aGUgcHJlc2lkZW50LiBJbiBhbGwgb3RoZXIgcmVzcGVjdHMsIGEgZmluYW5jaWFsIGJpbGwgKEkpIGlzICAgZ292ZXJuZWQgYnkgdGhlIHNhbWUgbGVnaXNsYXRpdmUgcHJvY2VkdXJlIGFwcGxpY2FibGUgdG8gYW4gb3JkaW5hcnkgYmlsbC4gSGVuY2UsIGl0IGNhbiBiZSBlaXRoZXIgcmVqZWN0ZWQgICBvciBhbWVuZGVkIGJ5IHRoZSBSYWp5YSBTYWJoYS4gV2hlbiB0aGUgYmlsbCBpcyBwcmVzZW50ZWQgdG8gdGhlIFByZXNpZGVudCwgaGUgY2FuIGVpdGhlciBnaXZlIGhpcyBhc3NlbnQgICB0byB0aGUgYmlsbCBvciB3aXRoaG9sZCBoaXMgYXNzZW50IHRvIHRoZSBiaWxsIG9yIHJldHVybiB0aGUgYmlsbCBmb3IgcmVjb25zaWRlcmF0aW9uIG9mIHRoZSBIb3VzZXMuICAgU291cmNlOiAgTGF4bWlrYW50IFBhcmxpYW1lbnQgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Constitutional Amendment Bill  ",
        "option2" : "Financial Bill (I)  ",
        "option3" : "Financial Bill (II)  ",
        "option4" : "Money Bill   "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements about  the Constitutional Amendment procedure In  India:   1.  Prior approval of the President is not  required to introduce a constitutional  amendment bill in the parliament.   2.  There is provision for joint sitting of the two  houses of parliament in case of  disagreement over an amendment bill.   3.  A Constitutional amendment bill cannot be  introduced by a private member.   4.  The President cannot return Constitutional  amendment bill for the reconsideration of  Parliament.   Which of the statements given above are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFjY29yZGluZyB0byB0aGUgcHJvY2VkdXJlIGZvciB0aGUgYW1lbmRtZW50IG9mIHRoZSBDb25zdGl0dXRpb24gYXMgbGFpZCBkb3duICAgaW4gQXJ0aWNsZSAzNjggb2YgdGhlIENvbnN0aXR1dGlvbiwgdGhlcmUgaXMgbm8gcmVxdWlyZW1lbnQgb2YgcHJpb3IgYXBwcm92YWwgb2YgdGhlIHByZXNpZGVudC4gICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogRWFjaCBIb3VzZSBtdXN0IHBhc3MgdGhlIGJpbGwgc2VwYXJhdGVseS4gSW4gY2FzZSBvZiBhIGRpc2FncmVlbWVudCBiZXR3ZWVuIHRoZSAgIHR3byBIb3VzZXMsIHRoZXJlIGlzIG5vIHByb3Zpc2lvbiBmb3IgaG9sZGluZyBhIGpvaW50IHNpdHRpbmcgb2YgdGhlIHR3byBIb3VzZXMgZm9yIHRoZSBwdXJwb3NlIG9mICAgZGVsaWJlcmF0aW9uIGFuZCBwYXNzYWdlIG9mIHRoZSBhbWVuZG1lbnQgYmlsbC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgY29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IGJpbGwgY2FuIGJlIGludHJvZHVjZWQgZWl0aGVyIGJ5IGEgbWluaXN0ZXIgb3IgYnkgICBhIHByaXZhdGUgbWVtYmVyLiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgcHJlc2lkZW50IG11c3QgZ2l2ZSBoaXMgYXNzZW50IHRvIHRoZSBjb25zdGl0dXRpb25hbCBiaWxsLiBIZSBjYW4gbmVpdGhlciAgIHdpdGhob2xkIGhpcyBhc3NlbnQgdG8gdGhlIGJpbGwgbm9yIHJldHVybiB0aGUgYmlsbCBmb3IgcmVjb25zaWRlcmF0aW9uIG9mIHRoZSBQYXJsaWFtZW50LiAgICBLbm93bGVkZ2UgQmFzZTogICAgIFNvbWUgb3RoZXIgcHJvdmlzaW9uIHVuZGVyIHRoZSBhcnRpY2xlIDM2OCBmb3IgdGhlIGFtZW5kaW5nIHByb2NlZHVyZSBhcmU6ICAgIDEpIEFuIGFtZW5kbWVudCBvZiB0aGUgQ29uc3RpdHV0aW9uIGNhbiBiZSBpbml0aWF0ZWQgb25seSBieSB0aGUgaW50cm9kdWN0aW9uIG9mIGEgYmlsbCBmb3IgdGhlIHB1cnBvc2UgaW4gICBlaXRoZXIgSG91c2Ugb2YgUGFybGlhbWVudCBhbmQgbm90IGluIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZXMuICAgIDIpIFRoZSBiaWxsIG11c3QgYmUgcGFzc2VkIGluIGVhY2ggSG91c2UgYnkgYSBzcGVjaWFsIG1ham9yaXR5LCB0aGF0IGlzLCBhIG1ham9yaXR5IG9mIHRoZSB0b3RhbCBtZW1iZXJzaGlwICAgb2YgdGhlIEhvdXNlIGFuZCBhIG1ham9yaXR5IG9mIHR3by10aGlyZHMgb2YgdGhlIG1lbWJlcnMgb2YgdGhlIEhvdXNlIHByZXNlbnQgYW5kIHZvdGluZy4gICAgICBvZiAyMCAgDw8gIA8BICAOICAMAyAgAiAgIAsgIAUCBiAgAQkIICAGBQggICAgICAgIDMpIElmIHRoZSBiaWxsIHNlZWtzIHRvIGFtZW5kIHRoZSBmZWRlcmFsIHByb3Zpc2lvbnMgb2YgdGhlIENvbnN0aXR1dGlvbiwgaXQgbXVzdCBhbHNvIGJlIHJhdGlmaWVkIGJ5IHRoZSAgIGxlZ2lzbGF0dXJlcyBvZiBoYWxmIG9mIHRoZSBzdGF0ZXMgYnkgYSBzaW1wbGUgbWFqb3JpdHksIHRoYXQgaXMsIGEgbWFqb3JpdHkgb2YgdGhlIG1lbWJlcnMgb2YgdGhlIEhvdXNlICAgcHJlc2VudCBhbmQgdm90aW5nLiAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgLSBNIExheG1pa2FudGggLSA2dGggZWRpdGlvbiAtIGNoYXB0ZXIgMTAgLSBBbWVuZG1lbnQgb2YgdGhlIENvbnN0aXR1dGlvbiAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1, 3 and 4 only   ",
        "option4" : "1, 2, 3 and 4  "
      }
    },
    {
      "index" : 45,
      "question" : "Which of the following consequences  would be there if financial emergency is  declared in India?   1.  The Centre can give directions to any state  to observe appropriate financial propriety  as specified to them.   2.  All money bills passed by a state legislature  can be reserved for the consideration of the  President.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIEFydGljbGUgMzYwIGVtcG93ZXJzIFVuaW9uIGdvdnQgdG8gdGFrZSBjb250cm9sIG92ZXIgc3RhdGUgZ292dCBvbiBldmVyeSBmaW5hbmNpYWwgbWF0dGVyIGRlYWwgYnkgYSAgIHN0YXRlLiAgIE5vIEZpbmFuY2lhbCBFbWVyZ2VuY3kgaGFzIGJlZW4gZGVjbGFyZWQgc28gZmFyLCB0aG91Z2ggdGhlcmUgd2FzIGEgZmluYW5jaWFsIGNyaXNpcyBpbiAxOTkxLiAgIFRoZSBjb25zZXF1ZW5jZXMgb2YgdGhlIHByb2NsYW1hdGlvbiBvZiBhIEZpbmFuY2lhbCBFbWVyZ2VuY3kgYXJlIGFzIGZvbGxvd3M6ICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBUaGUgZXhlY3V0aXZlIGF1dGhvcml0eSBvZiB0aGUgQ2VudHJlIGV4dGVuZHMgdG8gdGhlIGdpdmluZyBvZiAgICAoYSkgZGlyZWN0aW9ucyB0byBhbnkgc3RhdGUgdG8gb2JzZXJ2ZSBzdWNoIGNhbm9ucyBvZiBmaW5hbmNpYWwgcHJvcHJpZXR5IGFzIG1heSBiZSBzcGVjaWZpZWQgaW4gdGhlICAgZGlyZWN0aW9uczsgYW5kICAgIChiKSBzdWNoIG90aGVyIGRpcmVjdGlvbnMgdG8gYW55IHN0YXRlIGFzIHRoZSBQcmVzaWRlbnQgbWF5IGRlZW0gbmVjZXNzYXJ5IGFuZCBhZGVxdWF0ZSBmb3IgdGhlICAgcHVycG9zZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gIEFueSBzdWNoIGRpcmVjdGlvbiBtYXkgaW5jbHVkZSBhIHByb3Zpc2lvbiByZXF1aXJpbmcgICAgKGEpIHRoZSByZWR1Y3Rpb24gb2Ygc2FsYXJpZXMgYW5kIGFsbG93YW5jZXMgb2YgYWxsIG9yIGFueSBjbGFzcyBvZiBwZXJzb25zIHNlcnZpbmcgaW4gdGhlIHN0YXRlOyBhbmQgICAgIChiKSB0aGUgcmVzZXJ2YXRpb24gb2YgYWxsIG1vbmV5IGJpbGxzIG9yIG90aGVyIGZpbmFuY2lhbCBiaWxscyBmb3IgdGhlIGNvbnNpZGVyYXRpb24gb2YgdGhlIFByZXNpZGVudCBhZnRlciAgIHRoZXkgYXJlIHBhc3NlZCBieSB0aGUgbGVnaXNsYXR1cmUgb2YgdGhlIHN0YXRlLiAgICBTb3VyY2U6IEluZGlhbiBQb2xpdHk7IExha3NobWlrYW50ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 46,
      "question" : "Which of the following statements are  correct with reference to the functions of  Cabinet Secretariat?  1. It prepares agenda for meetings of the  Cabinet.  2. It provides secretarial assistance to the  Cabinet Committees.  3. It keeps the President and Vice-President  informed of the main activities of the  Central Government.  4. It implements the decisions taken by the  cabinet.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIFRoZSBDYWJpbmV0IFNlY3JldGFyaWF0IGlzIGEgc3RhZmYgYWdlbmN5IHRvIHRoZSBVbmlvbiBDYWJpbmV0LiBJdCBvcGVyYXRlcyB1bmRlciB0aGUgZGlyZWN0aW9uIGFuZCAgIGxlYWRlcnNoaXAgb2YgdGhlIFByaW1lIE1pbmlzdGVyIG9mIEluZGlhLiBJdCBoYXMgYW4gaW1wb3J0YW50IGNvb3JkaW5hdGluZyByb2xlIGluIHRoZSBwcm9jZXNzIG9mIHBvbGljeS0gIG1ha2luZyBhdCB0aGUgaGlnaGVzdCBsZXZlbCBpbiB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50LiAgICBUaGUgZm9sbG93aW5nIGZ1bmN0aW9ucyBhcmUgcGVyZm9ybWVkIGJ5IHRoZSBDYWJpbmV0IFNlY3JldGFyaWF0LiAgIDEpIEl0IHByZXBhcmVzIGFnZW5kYSBmb3IgbWVldGluZ3Mgb2YgdGhlIENhYmluZXQgYW5kIHByb3ZpZGVzIG5lY2Vzc2FyeSBpbmZvcm1hdGlvbiBhbmQgbWF0ZXJpYWwgZm9yICAgaXRzIGRlbGliZXJhdGlvbnMuIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICAgMikgSXQga2VlcHMgYSByZWNvcmQgb2YgdGhlIGRpc2N1c3Npb25zIGFuZCBkZWNpc2lvbnMgb2YgdGhlIENhYmluZXQgYW5kIENhYmluZXQgQ29tbWl0dGVlcyBhbmQgICBjaXJjdWxhdGVzIHRoZW0gdG8gYWxsIHRoZSBjb25jZXJuZWQgbWluaXN0cmllcy4gICAzKSBJdCBwcm92aWRlcyBzZWNyZXRhcmlhbCBhc3Npc3RhbmNlIHRvIHRoZSBDYWJpbmV0IENvbW1pdHRlZXMuIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICAgNCkgSXQga2VlcHMgdGhlIFByZXNpZGVudCwgVmljZS1QcmVzaWRlbnQgYW5kIGFsbCB0aGUgQ2VudHJhbCBNaW5pc3RyaWVzIGluZm9ybWVkIG9mIHRoZSBtYWluIGFjdGl2aXRpZXMgICBvZiB0aGUgQ2VudHJhbCBHb3Zlcm5tZW50LiBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgIDUpIEl0IHByZXBhcmVzIGFuZCBmaW5hbGlzZXMgdGhlIHJ1bGVzIG9mIGJ1c2luZXNzIG9mIHRoZSBnb3Zlcm5tZW50IGFuZCBhbGxvdHMgdGhlIGJ1c2luZXNzIG9mIHRoZSAgIEdvdmVybm1lbnQgYW1vbmcgTWluaXN0cmllcy9kZXBhcnRtZW50cyBvZiB0aGUgVW5pb24gR292ZXJubWVudCB3aXRoIHRoZSBQcmVzaWRlbnQncyBhcHByb3ZhbC4gICA2KSBJdCBmdW5jdGlvbnMgYXMgdGhlIGNoaWVmIGNvb3JkaW5hdGluZyBhZ2VuY3kgaW4gdGhlIENlbnRyYWwgR292ZXJubWVudC4gSW4gdGhpcyByZXNwZWN0LCBpdCBzZXR0bGVzICAgZGlzcHV0ZXMgYmV0d2VlbiB0aGUgbWluaXN0cmllcy4gICA3KSBJdCB3YXRjaGVzIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiBDYWJpbmV0IGRlY2lzaW9ucyBieSB0aGUgY29uY2VybmVkIG1pbmlzdHJpZXMvZGVwYXJ0bWVudHMgYW5kICAgb3RoZXIgZXhlY3V0aXZlIGFnZW5jaWVzLiAgIDgpIEl0IGhhbmRsZXMgdGhlIHdvcmsgcGVydGFpbmluZyB0byBhcHBvaW50bWVudCBhbmQgcmVzaWduYXRpb24gb2YgbWluaXN0ZXJzLCBhbGxvdG1lbnQgb2YgcG9ydGZvbGlvcyB0byAgIHRoZSBtaW5pc3RlcnMsIGFuZCBvcmdhbmlzYXRpb24gYW5kIHJlLW9yZ2FuaXNhdGlvbiBvZiBtaW5pc3RyaWVzLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gQ2FiaW5ldCBzZWNyZXRhcmlhdCBpcyBub3QgYW4gaW1wbGVtZW50aW5nIGFnZW5jeS4gQnV0IGl0IG1vbml0b3JzICAgaW1wbGVtZW50YXRpb24gb2YgZGVjaXNpb25zIHRha2VuIGJ5IHRoZSBDYWJpbmV0IGFuZCBpdHMgQ29tbWl0dGVlcy4gVGhlIGRlY2lzaW9ucyBvZiBjYWJpbmV0IGFyZSAgIGltcGxlbWVudGVkIGJ5IHRoZSBpbmRpdmlkdWFsIG1pbmlzdHJpZXMuICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICAgICAgICBTb3VyY2U6IExheG1pa2FudGggZ292ZXJuYW5jZS1jaCAzIGNlbnRyYWwgYWRtaW5pc3RyYXRpb24gICBodHRwczovL2NhYnNlYy5nb3YuaW4vYWJvdXR1cy9mdW5jdGlvbnMvICAgaHR0cHM6Ly9jYWJzZWMuZ292LmluL3dyaXRlcmVhZGRhdGEvcnRpL2ZhcS9lbmdsaXNoLzFfVXBsb2FkXzE4MjIucGRmICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1, 2 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following type(s) of  responsibility is enforced by the Constitution  on the Council of Ministers?  1. Collective Responsibility  2. Individual Responsibility  3. Legal Responsibility  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFydGljbGUgNzUgc3RhdGVzIHRoYXQgdGhlIENvdW5jaWwgb2YgTWluaXN0ZXJzIGFyZSBjb2xsZWN0aXZlbHkgcmVzcG9uc2libGUgdG8gdGhlICAgTG9rIFNhYmhhLiBXaGVuIHRoZSBMb2sgU2FiaGEgcGFzc2VzIGEgbm8tY29uZmlkZW5jZSBtb3Rpb24gYWdhaW5zdCB0aGUgQ291bmNpbCBvZiBNaW5pc3RlcnMsIGFsbCB0aGUgICBtaW5pc3RlcnMgaGF2ZSB0byByZXNpZ24gaW5jbHVkaW5nIHRob3NlIG1pbmlzdGVycyB3aG8gYXJlIGZyb20gUmFqeWEgU2FiaGEuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXJ0aWNsZSA3NSBhbHNvIGNvbnRhaW5zIHByaW5jaXBsZSBvZiBJbmRpdmlkdWFsIHJlc3BvbnNpYmlsaXR5LiBJdCBzdGF0ZXMgdGhhdCAgIG1pbmlzdGVycyBob2xkIG9mZmljZSBkdXJpbmcgdGhlIHBsZWFzdXJlIG9mIFByZXNpZGVudC4gVGhlIFByZXNpZGVudCBjYW4gcmVtb3ZlIHRoZSBtaW5pc3RlciBvbmx5IG9uIHRoZSAgIGFkdmljZSBvZiBQcmltZSBNaW5pc3Rlci4gSW4gY2FzZSBvZiBkaWZmZXJlbmNlIG9mIG9waW5pb24sIHRoZSBQcmltZSBNaW5pc3RlciBjYW4gYXNrIFByZXNpZGVudCB0byByZW1vdmUgICBhIG1pbmlzdGVyLiBUaGlzIHByb3Zpc2lvbiBoZWxwcyBpbiByZWFsaXNhdGlvbiBvZiBjb2xsZWN0aXZlIHJlc3BvbnNpYmlsaXR5LiAgICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBJbiBCcml0YWluLCBldmVyeSBvcmRlciBvZiB0aGUgS2luZyBpcyBjb3VudGVyc2lnbmVkIGJ5IGEgbWluaXN0ZXIsIHRodXMgbWFraW5nICAgdGhlIG1pbmlzdGVyIGxlZ2FsbHkgcmVzcG9uc2libGUgZm9yIHRoZSBhY3Rpb24uIEJ1dCBpbiBJbmRpYSwgYWxsIG9yZGVycyBhcmUgaXNzdWVkIGluIHRoZSBuYW1lIG9mIHRoZSAgIFByZXNpZGVudCwgaGVuY2UgdGhlcmUgaXMgbm8gcHJvdmlzaW9uIGZvciBsZWdhbCByZXNwb25zaWJpbGl0eS4gICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgLSBNIExheG1pa2FudGggLSBGaWZ0aCBFZGl0aW9uLCBQYWdlIC0gMjAuMywgMjAuNCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 2 only       \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b      "
      }
    },
    {
      "index" : 48,
      "question" : "'It is the premier executive body tasked  with a shared vision of national development  priorities, sectors and strategies with the active  involvement of States. Its chairperson is Prime  Minister of India. It presents a platform to  discuss inter-sectoral, inter-departmental and  federal issues.'  Which one of the following  bodies/organizations is described in the above  given paragraph?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE5JVEkgQWF5b2cncyBHb3Zlcm5pbmcgQ291bmNpbDogSXQgaXMgdGhlIHByZW1pZXIgZXhlY3V0aXZlIGJvZHkgdGFza2VkIHdpdGggYSBzaGFyZWQgdmlzaW9uIG9mIG5hdGlvbmFsICAgZGV2ZWxvcG1lbnQgcHJpb3JpdGllcywgc2VjdG9ycyBhbmQgc3RyYXRlZ2llcyB3aXRoIHRoZSBhY3RpdmUgaW52b2x2ZW1lbnQgb2YgU3RhdGVzLiAgIFRoZSBnb3Zlcm5pbmcgY291bmNpbCBwcmVzZW50cyBhIHBsYXRmb3JtIHRvIGRpc2N1c3MgaW50ZXItc2VjdG9yYWwsIGludGVyLWRlcGFydG1lbnRhbCBhbmQgZmVkZXJhbCAgIGlzc3Vlcy4gSXRzIGNoYWlycGVyc29uIGlzIFByaW1lIE1pbmlzdGVyLiBUaGUgZnVsbC10aW1lIG1lbWJlcnMgdG8gdGhlIGNvdW5jaWwgYXJlIENoaWVmIG1pbmlzdGVycyBvZiBhbGwgICBzdGF0ZXMgYW5kIG9mIHRoZSBVbmlvbiBUZXJyaXRvcmllcyBvZiBKYW1tdSBhbmQgS2FzaG1pciwgRGVsaGkgYW5kIFB1ZHVjaGVycnkuICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0LiAgIFRoZSBJbnRlci1TdGF0ZSBDb3VuY2lsIGlzIGEgY29uc3RpdHV0aW9uYWwgYm9keSB0byBmYWNpbGl0YXRlIGNvb3JkaW5hdGlvbiBiZXR3ZWVuIHN0YXRlcyBhbmQgdGhlIGNlbnRyZS4gICBJdCBpcyBoZWFkZWQgYnkgUHJpbWUgTWluaXN0ZXIgKENoYWlybWFuKS4gICBPcHRpb24gYiBpcyBpbmNvcnJlY3QuICAgVGhlIE1pbmlzdHJ5IG9mIFBlcnNvbm5lbCwgUHVibGljIEdyaWV2YW5jZXMgYW5kIFBlbnNpb25zIGlzIHRoZSBjb29yZGluYXRpbmcgYWdlbmN5IG9mIHRoZSBDZW50cmFsICAgR292ZXJubWVudCBpbiBwZXJzb25uZWwgbWF0dGVycyBzcGVjaWFsbHkgaXNzdWVzIGNvbmNlcm5pbmcgcmVjcnVpdG1lbnQsIHRyYWluaW5nLCBjYXJlZXIgZGV2ZWxvcG1lbnQsICAgc3RhZmYgd2VsZmFyZSBhcyB3ZWxsIGFzIHRoZSBwb3N0IHJldGlyZW1lbnQgZGlzcGVuc2F0aW9uLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdC4gICBUaGUgQ2FiaW5ldCBTZWNyZXRhcmlhdCBpcyByZXNwb25zaWJsZSBmb3IgdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIChUcmFuc2FjdGlvbiBvZiAgIEJ1c2luZXNzKSBSdWxlcywgMTk2MSBhbmQgdGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgKEFsbG9jYXRpb24gb2YgQnVzaW5lc3MpIFJ1bGVzIDE5NjEsIGZhY2lsaXRhdGluZyBzbW9vdGggICB0cmFuc2FjdGlvbiBvZiBidXNpbmVzcyBpbiBNaW5pc3RyaWVzLyBEZXBhcnRtZW50cyBvZiB0aGUgR292ZXJubWVudC4gICBUaGUgQ2FiaW5ldCBTZWNyZXRhcmlhdCBmdW5jdGlvbnMgZGlyZWN0bHkgdW5kZXIgdGhlIFByaW1lIE1pbmlzdGVyLiBUaGUgYWRtaW5pc3RyYXRpdmUgaGVhZCBvZiB0aGUgICBTZWNyZXRhcmlhdCBpcyB0aGUgQ2FiaW5ldCBTZWNyZXRhcnkgd2hvIGlzIGFsc28gdGhlIGV4LW9mZmljaW8gQ2hhaXJtYW4gb2YgdGhlIENpdmlsIFNlcnZpY2VzIEJvYXJkLiAgIFNvdXJjZTogaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9uaXRpLWFheW9ncy1nb3Zlcm5pbmctY291bmNpbC1yZWNvbnN0aXR1dGVkLyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Inter-State Council  ",
        "option2" : "Ministry of Personnel, Public Grievances  ",
        "option3" : "NITI Aayog's Governing Council  ",
        "option4" : "Cabinet Secretariat   "
      }
    },
    {
      "index" : 49,
      "question" : "Who among the following participate in  the election of the Vice President of India?  1.  Elected members of the Lok Sabha   2.  Elected members of the Rajya Sabha   3.  Nominated members of the Rajya Sabha  4.  Elected members of the State assemblies.   5.  Elected members of the assemblies in Union  Territories.   Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgIG9mIDIwICAPDyAgDwEgIA4gIAwDICACICAgCyAgBQIGICABCQggIAYFCCAgICAgICAgT3B0aW9ucyAxLCAyIGFuZCAzIGlzIGNvcnJlY3QuIFRoZSBWaWNlLVByZXNpZGVudCBpcyBlbGVjdGVkIGJ5IHRoZSBtZW1iZXJzIG9mIGFuIGVsZWN0b3JhbCBjb2xsZWdlICAgY29uc2lzdGluZyBvZiB0aGUgbWVtYmVycyBvZiBib3RoIEhvdXNlcyBvZiBQYXJsaWFtZW50LiBUaGUgZWxlY3RvcmFsIGNvbGxlZ2UgY29uc2lzdHMgb2YgYm90aCBlbGVjdGVkICAgYW5kIG5vbWluYXRlZCBtZW1iZXJzIG9mIHRoZSBQYXJsaWFtZW50LiAgICBPcHRpb25zIDQgYW5kIDUgYXJlIGluY29ycmVjdC4gSXQgZG9lcyBub3QgaW5jbHVkZSB0aGUgbWVtYmVycyBvZiB0aGUgc3RhdGUgbGVnaXNsYXRpdmUgYXNzZW1ibGllcyBhbmQgICB0aGUgdW5pb24gdGVycml0b3JpZXMuICAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IExheG1pa2FudCAtIFZpY2UgUHJlc2lkZW50LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "1, 2 and 4 only   ",
        "option3" : "2, 3 and 5 only   ",
        "option4" : "1, 2, 3, 4 and 5    "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following statements is/are  correct regarding the Governor of a state?   1.  The emoluments, allowances and privileges  of Governor are determined by the  Parliament.   2.  His oath is administered by the President.   3.  A governor can function as a member of the  state legislature while discharging his duties  as governor.   Select the correct answer using the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBlbW9sdW1lbnRzLCBhbGxvd2FuY2VzIGFuZCBwcml2aWxlZ2VzIG9mIEdvdmVybm9yIGlzIGRldGVybWluZWQgYnkgICBQYXJsaWFtZW50LiBIb3dldmVyLCB3aGVuIGhlIGFwcG9pbnRlZCBhcyBnb3Zlcm5vciBvZiAyIG9yIG1vcmUgc3RhdGVzLCB0aGVuIHRoZSBlbW9sdW1lbnRzIGFuZCAgIGFsbG93YW5jZXMgYXJlIGRldGVybWluZSBieSB0aGUgUHJlc2lkZW50LiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIEhpcyBvYXRoIGlzIGFkbWluaXN0ZXJlZCBieSBjaGllZiBqdXN0aWNlIG9mIGNvbmNlcm5lZCBzdGF0ZSBoaWdoIGNvdXJ0IGFuZCBpbiAgIGhpcyBhYnNlbmNlLCB0aGUgc2VuaW9yIG1vc3QganVkZ2Ugb2Ygc3VwcmVtZSBjb3VydC4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBXaGlsZSBkaXNjaGFyZ2luZyB0aGUgZHV0aWVzIGFzIGdvdmVybm9yLCBhIHBlcnNvbiBjYW4ndCBmdW5jdGlvbiBhcyBhIG1lbWJlciAgIG9mIGVpdGhlciBob3VzZSBvZiBQYXJsaWFtZW50IG9yIHRoZSBob3VzZSBvZiB0aGUgc3RhdGUgbGVnaXNsYXR1cmUuICAgIFNvdXJjZTogTGF4bWlrYW50aCByZXZpc2VkIGVkaXRpb24gY2hhcHRlci0zMCBwYWdlLSAzMC40ICAgICAgb2YgMjAgIA8PICAPASAgDiAgDAMgIAIgICALICAFAgYgIAEJCCAgBgUIICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1,2 and 3     \u000f\u000f  \u000f\u0001  \u000e  \f\u0003  \u0002   \u000b  \u0005\u0002\u0006  \u0001\t\b  \u0006\u0005\b  "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
