{
  "testId" : "forum-2023-prelims-pts-6",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\forum\\prelims\\forum-2023-prelims-pts-6.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to the Indian freedom  struggle, consider the following statements:  1.  Swarajists led by C.R. Das advocated council  entry after the withdrawal of Non-  Cooperation Movement.  2.  No-changers advocated constructive work  during transition period for the next phase  of civil disobedience programme.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEFmdGVyIEdhbmRoaSdzIGFycmVzdCAoTWFyY2ggMTkyMikgYWZ0ZXIgdGhlIEtoaWxhZmF0IG5vbi0gY29vcGVyYXRpb24gbW92ZW1lbnQsIEEgZGViYXRlIHN0YXJ0ZWQgYW1vbmcgICBDb25ncmVzc21lbiBvbiB3aGF0IHRvIGRvIGR1cmluZyB0aGUgdHJhbnNpdGlvbiBwZXJpb2QsIGkuZS4sIHRoZSBwYXNzaXZlIHBoYXNlIG9mIHRoZSBtb3ZlbWVudC4gbGVkIGJ5ICAgQy5SLiBEYXMsIE1vdGlsYWwgTmVocnUgYW5kIEFqbWFsIEtoYW4gd2FudGVkIGFuIGVuZCB0byB0aGUgYm95Y290dCBvZiBsZWdpc2xhdGl2ZSBjb3VuY2lscyBhbmQgdXNlIHRoZXNlICAgY291bmNpbHMgdG8gYXJvdXNlIHBvcHVsYXIgZW50aHVzaWFzbS4gVGhvc2UgYm95Y290dGluZyBlbnRyeSBpbnRvIGxlZ2lzbGF0aXZlIGNvdW5jaWxzIGNhbWUgdG8gYmUgICBrbm93biBhcyB0aGUgJ05vIENoYW5nZXJzJyAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBTd2FyYWppc3QgbGVkIGJ5IEMuUi4gRGFzIGFkdm9jYXRlZCBjb3VuY2lsIGVudHJ5IGFmdGVyIHdpdGhkcmF3YWwgb2YgTm9uLSAgQ29vcGVyYXRpb24gTW92ZW1lbnQgd2l0aCBhbiBhaW0gdG8gZW5kIG9yIG1lbmQgdGhlIGNvdW5jaWxzLiBUaGV5IHdhbnRlZCB0aGF0IHRoZSBuYXRpb25hbGlzdHMgY2FuICAgdXNlIGVudHJ5IGludG8gY291bmNpbHMgdG8gZXhwb3NlIHRoZSBiYXNpYyB3ZWFrbmVzc2VzIG9mIHRoZXNlIGFzc2VtYmxpZXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogTm8tY2hhbmdlcnMgYWR2b2NhdGVkIGNvbnN0cnVjdGl2ZSB3b3JrIGR1cmluZyB0cmFuc2l0aW9uIHBlcmlvZC4gVGhpcyBzY2hvb2wgICBvZiB0aG91Z2h0IHdhcyBsZWQgYnkgQy4gUmFqYWdvcGFsYWNoYXJpLCBWYWxsYWJoYmhhaSBQYXRlbCwgUmFqZW5kcmEgUHJhc2FkIGFuZCBNLkEuIEFuc2FyaSBjYW1lIHRvIGJlICAga25vd24gYXMgdGhlICdOby0gY2hhbmdlcnMnLiBUaGUgJ05vLWNoYW5nZXJzJyBvcHBvc2VkIGNvdW5jaWwgZW50cnksIGFkdm9jYXRlZCBjb25jZW50cmF0aW9uIG9uICAgY29uc3RydWN0aXZlIHdvcmssIGFuZCBjb250aW51YXRpb24gb2YgYm95Y290dCBhbmQgbm9uLWNvb3BlcmF0aW9uLCBhbmQgcXVpZXQgcHJlcGFyYXRpb24gZm9yICAgcmVzdW1wdGlvbiBvZiB0aGUgc3VzcGVuZGVkIGNpdmlsIGRpc29iZWRpZW5jZSBwcm9ncmFtbWUuICAgS25vd2xlZGdlIGJhc2U6IFRoZSBTd2FyYWppc3RzIHdlcmUgYWxsb3dlZCB0byBjb250ZXN0IGVsZWN0aW9ucyBhcyBhIGdyb3VwIHdpdGhpbiB0aGUgQ29uZ3Jlc3MuIFRoZSAgIFN3YXJhamlzdHMgYWNjZXB0ZWQgdGhlIENvbmdyZXNzIHByb2dyYW1tZSB3aXRoIG9ubHkgb25lIGRpZmZlcmVuY2UtdGhhdCB0aGV5IHdvdWxkIGpvaW4gbGVnaXNsYXRpdmUgICBjb3VuY2lscy4gICAgU291cmNlOiBIaXN0b3J5IGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyNzctNzggICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 2,
      "question" : "In the context of modern history, which of  the following are the reasons for the Bengal  famine of 1943?   1.  Due to serious hydrological drought in the  region.   2.  The need to feed a vast British army diverted  foodstuffs.   3.  Import of rice from South-East Asia had  been stopped.   4.  Rationing methods to tackle the drought  were confined to big cities only.   Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgd29yc3QtYWZmZWN0ZWQgYXJlYXMgaW4gZmFtaW5lIG9mIDE5NDMgd2VyZSBzb3V0aC13ZXN0IEJlbmdhbCBjb21wcmlzaW5nIHRoZSBUYW1sdWstQ29udGFpLSAgRGlhbW9uZCBIYXJib3VyIHJlZ2lvbiwgRGFjY2EsIEZhcmlkcHVyLCBUaXBwZXJhLCBhbmQgTm9ha2hhbGkuIEFyb3VuZCAxLjUgdG8gMyBtaWxsaW9uIHBlb3BsZSBwZXJpc2hlZCAgIGluIHRoaXMgYmFzaWNhbGx5IG1hbi1tYWRlIGZhbWluZS4gICAgVGhlIGZ1bmRhbWVudGFsIGNhdXNlcyBvZiB0aGUgZmFtaW5lIHdlcmUgYXMgZm9sbG93czogICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgQmVuZ2FsIGZhbWluZSBvZiAxOTQzIHdhcyB0aGUgb25seSBvbmUgaW4gbW9kZXJuIEluZGlhbiBoaXN0b3J5IG5vdCB0byAgIG9jY3VyIGFzIGEgcmVzdWx0IG9mIHNlcmlvdXMgZHJvdWdodCwgYWNjb3JkaW5nIHRvIGEgc3R1ZHkgdGhhdCBwcm92aWRlcyBzY2llbnRpZmljIGJhY2tpbmcgZm9yIGFyZ3VtZW50cyAgIHRoYXQgQ2h1cmNoaWxsLWVyYSBCcml0aXNoIHBvbGljaWVzIHdlcmUgYSBzaWduaWZpY2FudCBmYWN0b3IgY29udHJpYnV0aW5nIHRvIHRoZSBjYXRhc3Ryb3BoZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIG5lZWQgdG8gZmVlZCBhIHZhc3QgYXJteSBkaXZlcnRlZCBmb29kc3R1ZmZzLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBSaWNlIGltcG9ydHMgZnJvbSBCdXJtYSBhbmQgU291dGgtRWFzdCBBc2lhIGhhZCBiZWVuIHN0b3BwZWQgYmVjYXVzZSBvZiB0aGUgICBvY2N1cGF0aW9uIG9mIEJ1cm1hIGJ5IEphcGFuLiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0LiBUaGUgZmFtaW5lIGdvdCBhZ2dyYXZhdGVkIGJ5IGdyb3NzIG1pc21hbmFnZW1lbnQgYW5kIGRlbGliZXJhdGUgcHJvZml0ZWVyaW5nOyAgIHJhdGlvbmluZyBtZXRob2RzIHdlcmUgYmVsYXRlZCBhbmQgd2VyZSBjb25maW5lZCB0byBiaWcgY2l0aWVzLiAgIFNvdXJjZTogaHR0cHM6Ly9uY2VydC5uaWMuaW4vbmNlcnRzL2wvaWVzczIwNC5wZGYgICBOQ0VSVCAgICBodHRwczovL3d3dy5nb29nbGUuY29tL2FtcC9zL2FtcC50aGVndWFyZGlhbi5jb20vd29ybGQvMjAxOS9tYXIvMjkvd2luc3Rvbi1jaHVyY2hpbGwtICBwb2xpY2llcy1jb250cmlidXRlZC10by0xOTQzLWJlbmdhbC1mYW1pbmUtc3R1ZHkgICAgQSBCcmllZiBIaXN0b3J5IG9mIE1vZGVybiBJbmRpYS0gU3BlY3RydW0tIENoYXB0ZXIgMjMsIHBnIG5vLiA0NzIgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only   ",
        "option2" : "2, 3 and 4 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "2 and 4 only    "
      }
    },
    {
      "index" : 3,
      "question" : "Which of the following events in Punjab  contributed towards the spread of  revolutionary activities during the struggle for  Indian Independence?  1.  Lala Lajpat Rai brought out the 'Punjabee' to  spread revolutionary thought.  2.  Ajit Singh organised Anjuman-i-Mohisban- i-Watan in Lahore to promote extremism.  3.  Rashbehari Bose founded the Ghadr Party in  Punjab.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQdW5qYWIgZXh0cmVtaXNtIHdhcyBmdWVsbGVkIGJ5IGlzc3VlcyBzdWNoIGFzIGZyZXF1ZW50IGZhbWluZXMgY291cGxlZCB3aXRoIHJpc2UgaW4gbGFuZCByZXZlbnVlICAgYW5kIGlycmlnYXRpb24gdGF4LCBwcmFjdGljZSBvZiAnYmVnYXInIGJ5IHphbWluZGFycyBhbmQgYnkgdGhlIGV2ZW50cyBpbiBCZW5nYWwuICAgICAgb2YgMjIgIC4gICAgICAgICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQW1vbmcgdGhvc2UgYWN0aXZlIGhlcmUgd2VyZSBMYWxhIExhanBhdCBSYWkgd2hvIGJyb3VnaHQgb3V0IFB1bmphYmVlICh3aXRoIGl0cyAgIG1vdHRvIG9mIHNlbGYtaGVscCBhdCBhbnkgY29zdCkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQWppdCBTaW5naCAoQmhhZ2F0IFNpbmdoJ3MgdW5jbGUpIHdobyBvcmdhbmlzZWQgdGhlIGV4dHJlbWlzdCBBbmp1bWFuLWktICBNb2hpc2Jhbi1pLVdhdGFuIGluIExhaG9yZSB3aXRoIGl0cyBqb3VybmFsLCBCaGFyYXQgTWF0YS4gQmVmb3JlIEFqaXQgU2luZ2gncyBncm91cCB0dXJuZWQgdG8gICBleHRyZW1pc20sIGl0IHdhcyBhY3RpdmUgaW4gdXJnaW5nIG5vbi1wYXltZW50IG9mIHJldmVudWUgYW5kIHdhdGVyIHJhdGVzIGFtb25nIENoZW5hYiBjb2xvbmlzdHMgYW5kICAgQmFyaSBEb2FiIHBlYXNhbnRzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBHaGFkYXIgUGFydHksIGluaXRpYWxseSBuYW1lZCB0aGUgUGFjaWZpYyBDb2FzdCBIaW5kdXN0YW4gQXNzb2NpYXRpb24gd2FzICAgZm9ybWVkIGluIHdhcyBmb3JtZWQgb24gMTUgSnVseSAxOTEzIGluIHRoZSBVbml0ZWQgU3RhdGVzIHVuZGVyIHRoZSBsZWFkZXJzaGlwIG9mIExhbGEgSGFyIERheWFsLCBTYW50ICAgQmFiYSBXYXNha2hhIFNpbmdoIERhZGVoYXIsIEJhYmEgSmF3YWxhIFNpbmdoLCBTYW50b2toIFNpbmdoIGFuZCBTb2hhbiBTaW5naCBCaGFrbmEgYXMgaXRzIHByZXNpZGVudC4gICAgS25vd2xlZGdlIEJhc2U6ICAgIE90aGVyIHJldm9sdXRpb25hcnkgbGVhZGVycyBpbiBQdW5qYWIgaW5jbHVkZWQgQWdhIEhhaWRhciwgU3llZCBIYWlkZXIgUmF6YSwgQmhhaSBQYXJtYW5hbmQgYW5kIHRoZSAgIHJhZGljYWwgVXJkdSBwb2V0LCBMYWxjaGFuZCAnRmFsYWsnLiBFeHRyZW1pc20gaW4gdGhlIFB1bmphYiBkaWVkIGRvd24gcXVpY2tseSBhZnRlciB0aGUgZ292ZXJubWVudCAgIHN0cnVjayBpbiBNYXkgMTkwNyB3aXRoIGEgYmFuIG9uIHBvbGl0aWNhbCBtZWV0aW5ncyBhbmQgdGhlIGRlcG9ydGF0aW9uIG9mIExhanBhdCBSYWkgYW5kIEFqaXQgU2luZ2guIEFmdGVyICAgdGhpcywgQWppdCBTaW5naCBhbmQgYSBmZXcgb3RoZXIgYXNzb2NpYXRlcy1TdWZpIEFtYmFwcmFzYWQsIExhbGNoYW5kLCBCaGFpIFBhcm1hbmFuZCwgTGFsYSBIYXJkYXlhbC0gICBkZXZlbG9wZWQgaW50byBmdWxsLXNjYWxlIHJldm9sdXRpb25hcmllcy4gICAgU291cmNlOiBIaXN0b3J5IGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyNTUtNTYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 4,
      "question" : "In context of Modern Indian History, which  among the following were the reasons for the  failure of the Cripps mission?  1.  It offered dominion status for Indian Union  instead of a provision for complete  independence.  2.  It lacked any plan for immediate transfer of  power to the Indian representatives.  3.  The demand of the congress that the  governor-general should be only the  constitutional head was not accepted.  4.  The Muslim league thought that the  proposals denied the Muslims the right to  self-determination.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIE1hcmNoIDE5NDIsIGEgbWlzc2lvbiBoZWFkZWQgYnkgU3RhZmZvcmQgQ3JpcHBzIHdhcyBzZW50IHRvIEluZGlhIHdpdGggY29uc3RpdHV0aW9uYWwgcHJvcG9zYWxzIHRvICAgc2VlayBJbmRpYW4gc3VwcG9ydCBmb3IgdGhlIHdhci4gVGhlIENyaXBwcyBNaXNzaW9uIHByb3Bvc2FscyBmYWlsZWQgdG8gc2F0aXNmeSBJbmRpYW4gbmF0aW9uYWxpc3RzIGFuZCAgIHR1cm5lZCBvdXQgdG8gYmUgbWVyZWx5IGEgcHJvcGFnYW5kYSBkZXZpY2UgZm9yIHRoZSBjb25zdW1wdGlvbiBvZiB0aGUgVVMgYW5kIHRoZSBDaGluZXNlLiBOZWhydSBhbmQgICBNYXVsYW5hIEF6YWQgd2VyZSB0aGUgb2ZmaWNpYWwgbmVnb3RpYXRvcnMgZm9yIHRoZSBDb25ncmVzcy4gVmFyaW91cyBwYXJ0aWVzIGFuZCBncm91cHMgaGFkIG9iamVjdGlvbnMgdG8gICB0aGUgcHJvcG9zYWxzIG9uIGRpZmZlcmVudCBwb2ludHMtICAgIFRoZSBDb25ncmVzcyBvYmplY3RlZCB0bzogICAoMSkgdGhlIG9mZmVyIG9mIGRvbWluaW9uIHN0YXR1cyBpbnN0ZWFkIG9mIGEgcHJvdmlzaW9uIGZvciBjb21wbGV0ZSBpbmRlcGVuZGVuY2U7IChIZW5jZSwgU3RhdGVtZW50IDEgICBpcyBjb3JyZWN0KSAgICgyKSAgcmVwcmVzZW50YXRpb24gb2YgdGhlIHByaW5jZWx5IHN0YXRlcyBieSBub21pbmVlcyBhbmQgbm90IGJ5IGVsZWN0ZWQgcmVwcmVzZW50YXRpdmVzOyAgICAoMykgIHJpZ2h0IHRvIHByb3ZpbmNlcyB0byBzZWNlZGUgYXMgdGhpcyB3ZW50IGFnYWluc3QgdGhlIHByaW5jaXBsZSBvZiBuYXRpb25hbCB1bml0eTsgYW5kICAgICg0KSAgYWJzZW5jZSBvZiBhbnkgcGxhbiBmb3IgaW1tZWRpYXRlIHRyYW5zZmVyIG9mIHBvd2VyIGFuZCBhYnNlbmNlIG9mIGFueSByZWFsIHNoYXJlIGluIGRlZmVuY2U7IHRoZSAgIGdvdmVybm9yLWdlbmVyYWwncyBzdXByZW1hY3kgaGFkIGJlZW4gcmV0YWluZWQsIChIZW5jZSwgU3RhdGVtZW50IDIgaXMgY29ycmVjdCkgICAoNSkgdGhlIGRlbWFuZCB0aGF0IHRoZSBnb3Zlcm5vci1nZW5lcmFsIGJlIG9ubHkgdGhlIGNvbnN0aXR1dGlvbmFsIGhlYWQgaGFkIG5vdCBiZWVuIGFjY2VwdGVkLiAgIChIZW5jZSwgU3RhdGVtZW50IDMgaXMgY29ycmVjdCkgICBUaGUgTXVzbGltIExlYWd1ZSByYWlzZWQgdGhlIGZvbGxvd2luZyBwb2ludHM6ICAgKDEpIGNyaXRpY2lzZWQgdGhlIGlkZWEgb2YgYSBzaW5nbGUgSW5kaWFuIFVuaW9uOyAgICAoMikgIGRpZCBub3QgbGlrZSB0aGUgbWFjaGluZXJ5IGZvciB0aGUgY3JlYXRpb24gb2YgYSBjb25zdGl0dWVudCBhc3NlbWJseSBhbmQgdGhlIHByb2NlZHVyZSB0byBkZWNpZGUgb24gICB0aGUgYWNjZXNzaW9uIG9mIHByb3ZpbmNlcyB0byB0aGUgVW5pb247IGFuZCAgICAoMykgIHRob3VnaHQgdGhhdCB0aGUgcHJvcG9zYWxzIGRlbmllZCB0aGUgTXVzbGltcyB0aGUgcmlnaHQgdG8gc2VsZi1kZXRlcm1pbmF0aW9uIGFuZCB0aGUgY3JlYXRpb24gb2YgICBQYWtpc3Rhbi4gKEhlbmNlLCBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0KSAgIFNvdXJjZTogIEhpc3RvcnkgYnkgQmlwaW4gQ2hhbmRyYSBwYWdlIDI5NyAgIE5DRVJUIFRoZW1lcyBvZiBJbmRpYW4gSGlzdG9yeSBJSUkgcGFnZSAzNjIgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1, 2 and 3 only  ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 5,
      "question" : "Economically, one of the results of the  British rule in India in the 19th century was the  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgIC4gICAgICAgICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0LiBBZnRlciAxODIwLCBFdXJvcGVhbiBtYXJrZXRzIHdlcmUgdmlydHVhbGx5IGNsb3NlZCB0byBJbmRpYW4gaGFuZGljcmFmdHMsIGFzIGEgcmVzdWx0ICAgSW5kaWFuIGV4cG9ydCBvZiBoYW5kaWNyYWZ0cyBmZWxsIGRyYXN0aWNhbGx5LiBDaGVhcCBhbmQgbWFjaGluZS1tYWRlIGltcG9ydHMgZmxvb2RlZCB0aGUgSW5kaWFuICAgbWFya2V0IGR1ZSB0byBvbmUtd2F5IGZyZWUgdHJhZGUgZm9yIHRoZSBCcml0aXNoZXJzIGFuZCBpbXBvc2l0aW9uIG9mIGhlYXZ5IHRhcmlmZnMgb2YgbmVhcmx5IDgwIHBlciAgIGNlbnQgb24gSW5kaWFuIHByb2R1Y3RzLiAgICAgT3B0aW9uIGIgaXMgaW5jb3JyZWN0LiBUaGVyZSB3YXMgYSByYXBpZCBkZWNyZW1lbnQgaW4gdGhlIG51bWJlciBvZiBJbmRpYW4gb3duZWQgaW5kdXN0cmllcy4gSW5kaWFuICAgaW5kdXN0cnkgd2FzIHN0ZWFkaWx5IGRlc3Ryb3llZC4gVGhlIGRlbWFuZCBmcm9tIEluZGlhbiB0ZXh0aWxlIGluZHVzdHJ5IHdhcyByZXBsYWNlZCBieSBCcml0aXNoIG1hZGUgICBjbG90aGVzLiBBIHRocml2aW5nIHNoaXAtYnVpbGRpbmcgaW5kdXN0cnkgd2FzIGNydXNoZWQuIFRoZSBCcml0aXNoIHNoaXBzIGNvbnRyYWN0ZWQgYnkgdGhlIENvbXBhbnkgd2VyZSAgIGdpdmVuIGEgbW9ub3BvbHkgb3ZlciB0cmFkZSByb3V0ZXMsIHdoaWxlIGV2ZW4gdGhlIEluZGlhbiBtZXJjaGFudCBzaGlwcyBwbHlpbmcgYWxvbmcgdGhlIGNvYXN0IHdlcmUgICBtYWRlIHRvIGZhY2UgaGVhdnkgZHV0aWVzLiBBbHNvLCBUaGUgQnJpdGlzaCBkaWQgbm90IGFsbG93IHRoZSBJbmRpYW4gc3RlZWwgaW5kdXN0cnkgdG8gZ3Jvdy4gICAgICBPcHRpb24gYyBpcyBjb3JyZWN0LiBPbmUgb2YgdGhlIHJlc3VsdHMgb2YgdGhlIEJyaXRpc2ggcnVsZSBpbiBJbmRpYSBpbiB0aGUgMTl0aCBjZW50dXJ5IHdhcyB0aGUgICBlbWVyZ2VuY2Ugb2YgdGhlIGNvbW1lcmNpYWxpc2F0aW9uIG9mIGFncmljdWx0dXJlLiBTbyBmYXIsIGFncmljdWx0dXJlIGhhZCBiZWVuIGEgd2F5IG9mIGxpZmUgcmF0aGVyIHRoYW4gICBhIGJ1c2luZXNzIGVudGVycHJpc2UuIE5vdyBhZ3JpY3VsdHVyZSBiZWdhbiB0byBiZSBpbmZsdWVuY2VkIGJ5IGNvbW1lcmNpYWwgY29uc2lkZXJhdGlvbnMuIENlcnRhaW4gICBzcGVjaWFsaXNlZCBjcm9wcyBiZWdhbiB0byBiZSBncm93biBub3QgZm9yIGNvbnN1bXB0aW9uIGluIHRoZSB2aWxsYWdlIGJ1dCBmb3Igc2FsZSBpbiB0aGUgbmF0aW9uYWwgYW5kICAgZXZlbiBpbnRlcm5hdGlvbmFsIG1hcmtldHMuIENvbW1lcmNpYWwgY3JvcHMgbGlrZSBjb3R0b24sIGp1dGUsIGdyb3VuZG51dCwgb2lsc2VlZHMsIHN1Z2FyY2FuZSwgdG9iYWNjbywgICBldGMuLCB3ZXJlIG1vcmUgcmVtdW5lcmF0aXZlIHRoYW4gZm9vZGdyYWlucy4gICAgIE9wdGlvbiBkIGlzIGluY29ycmVjdC4gQW5vdGhlciBpbXBvcnRhbnQgZmVhdHVyZSBvZiBCcml0aXNoIHJ1bGUgaW4gSW5kaWEgd2FzIGRldXJiYW5pc2F0aW9uIGkuZS4gdGhlICAgZGVjbGluZSBvZiBtYW55IGNpdGllcyBhbmQgYSBwcm9jZXNzIG9mIHJ1cmFsaXNhdGlvbiBvZiBJbmRpYS4gTWFueSBhcnRpc2FucywgZmFjZWQgd2l0aCBkaW1pbmlzaGluZyAgIHJldHVybnMgYW5kIHJlcHJlc3NpdmUgcG9saWNpZXMgYWJhbmRvbmVkIHRoZWlyIHByb2Zlc3Npb25zLCBtb3ZlZCB0byB2aWxsYWdlcyBhbmQgdG9vayB0byBhZ3JpY3VsdHVyZS4gICAgIFNvdXJjZTogVVBTQyBDU0UgcHJlbGltcyAyMDE4ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " increase in the export of Indian handicrafts    ",
        "option2" : " growth in the number of Indian owned   factories    ",
        "option3" : " commercialization of Indian agriculture    ",
        "option4" : " rapid increase in the urban population   "
      }
    },
    {
      "index" : 6,
      "question" : "In the context of modern history, consider  the following pairs:  Conspiracy                   Related Issue  1. Kanpur Bolshevik     To achieve complete  separation of India  from imperialistic  Britain through  violent revolution.  2. Muzaffarpur              To kill the Chief  Presidency  Magistrate Kingsford  of Muzaffarpur.  3. Meerut                      It was a train robbery  against the British  Indian Government.  Which of the pair(s) given above is/are paired  correctly?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFBhaXIgMSBpcyBjb3JyZWN0LiBLYW5wdXIgQm9sc2hldmlrIENvbnNwaXJhY3kgY2FzZTogT24gMTcgTWFyY2ggMTkyNCwgUy5BLiBEYW5nZSwgTS5OLiBSb3ksIE11emFmZmFyICAgQWhtZWQsIE5hbGluaSBCaHVzaGFuIERhc2d1cHRhLCBTaGF1a2F0IFVzbWFuaSwgU2luZ2FyYXZlbHUgQ2hldHRpYXIsIEdodWxhbSBIdXNzYWluIGFuZCBvdGhlcnMgICB3ZXJlIGNoYXJnZWQgdGhhdCB0aGV5IGFzIGNvbW11bmlzdHMgd2VyZSBzZWVraW5nICJ0byBkZXByaXZlIHRoZSBLaW5nIEVtcGVyb3Igb2YgaGlzIHNvdmVyZWlnbnR5IG9mICAgQnJpdGlzaCBJbmRpYSwgYnkgY29tcGxldGUgc2VwYXJhdGlvbiBvZiBJbmRpYSBmcm9tIGltcGVyaWFsaXN0aWMgQnJpdGFpbiBieSBhIHZpb2xlbnQgcmV2b2x1dGlvbiIgaW4gICB3aGF0IHdhcyBjYWxsZWQgdGhlIENhd25wb3JlIChub3cgc3BlbHQgS2FucHVyKSBCb2xzaGV2aWsgQ29uc3BpcmFjeSBjYXNlLiAgIFBhaXIgMiBpcyBjb3JyZWN0LiBNdXphZmZhcnB1ciBDb25zcGlyYWN5IENhc2UgKDE5MDggQUQpOiBJdCB3YXMgYSByZXZvbHV0aW9uYXJ5IGNvbnNwaXJhY3kgYnkgICB0aGUgS2h1ZGlyYW0gQm9zZSBhbmQgUHJhZmZ1bGEgQ2hha2kgdG8ga2lsbCB0aGUgQ2hpZWYgUHJlc2lkZW5jeSBNYWdpc3RyYXRlIERIIEtpbmdzZm9yZCBvZiAgIE11emFmZmFycHVyLiBUaGV5IHRocmV3IGJvbWJzIG9uIGEgdmVoaWNsZSBvZiBESCBLaW5nc2ZvcmQgYnV0IGhlIGVzY2FwZWQgdGhlIGF0dGFjayBhbmQgICB1bmZvcnR1bmF0ZWx5LCB0d28gQnJpdGlzaCB3b21lbiB3ZXJlIGtpbGxlZC4gUHJhZnVsbGEgQ2hha2kgY29tbWl0dGVkIHN1aWNpZGUgd2hlbiBoZSB3YXMgYWJvdXQgdG8gYmUgICBhcnJlc3RlZCBieSB0aGUgUG9saWNlLiBLaHVkaXJhbSBCb3NlIHdhcyB0aGUgeW91bmdlc3QgSW5kaWFuIHdobyB3YXMgaGFuZ2VkIGJ5IHRoZSBCcml0aXNoLiAgIFBhaXIgMyBpcyBpbmNvcnJlY3Q6IE1lZXJ1dCBDb25zcGlyYWN5IENhc2UgKDE5MjkgQUQpOiBUaGlzIHdhcyB0aGUgaW1tZW5zZSBwb2xpdGljYWwgc2lnbmlmaWNhbmNlIGZvciAgIHRoZSBJbmRpYW4gd29ya2luZy1jbGFzcyBtb3ZlbWVudCBiZWNhdXNlIGl0IHdhcyBhIGNvbnNwaXJhY3kgb2YgQnJpdGlzaCBHb3Zlcm5tZW50IGFnYWluc3QgdGhlIHJpc2Ugb2YgICBDb21tdW5pc20gaW4gSW5kaWEuIER1cmluZyB0aGlzIGNhc2UsIDMxIGxhYm9yIGxlYWRlcnMgaW5jbHVkZWQgdGhyZWUgRW5nbGlzaG1lbiB3ZXJlIGFycmVzdGVkIG9uIHRoZSAgIGNoYXJnZSBvZiBjb25zcGlyYWN5LiBNdXphZnIgQWhhbWVkLCBTLkEgRGFuZ2UsIFMuViBHaGF0ZSwgRHIuIEcgQWRoaWthcmksIFAuQy5Kb3NoaSwgUy5TLk1pcmFqa2FyLCAgIFNoYXVrYXQgVXNtYW5pLCBQaGlsaXAgU3RyYXR0IGV0Yy4gd2VyZSBhcnJlc3RlZCBvbiB0aGUgY2hhcmdlIG9mIGNvbnNwaXJhY3kgdG8gb3ZlcnRocm93IHRoZSBCcml0aXNoICAgR292ZXJubWVudCBvZiBJbmRpYSB0aHJvdWdoIHN0cmlrZXMgYW5kIG90aGVyIG1pbGl0YW50IG1ldGhvZHMuICAgIEtha29yaSB0cmFpbiByb2JiZXJ5IG9yIEtha29yaSBDYXNlIHdhcyBhIHRyYWluIHJvYmJlcnkgYWdhaW5zdCB0aGUgQnJpdGlzaCBJbmRpYW4gR292ZXJubWVudC4gSXQgd2FzICAgb3JnYW5pemVkIGJ5IGEgcmV2b2x1dGlvbmFyeSBvcmdhbml6YXRpb24gaS5lLiwgSGluZHVzdGFuIFJlcHVibGljYW4gQXNzb2NpYXRpb24gKEhSQSkgdW5kZXIgdGhlICAgbGVhZGVyc2hpcCBvZiBSYW0gUHJhc2FkIEJpc21pbCBhbmQgc3VwcG9ydGVkIGJ5IEFzaGZhcXVsbGEgS2hhbiwgUmFqZW5kcmEgTGFoaXJpLCBDaGFuZHJhc2hla2hhciAgIEF6YWQuICAgU291cmNlOiBIaXN0b3J5IGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyODAgICBOQ0VSVCBUaGVtZXMgb2YgSW5kaWFuIEhpc3RvcnkgSUlJIHBhZ2UgMzYyICAgaHR0cHM6Ly9lbi5iaGFyYXRwZWRpYS5vcmcvd2lraS9LYW5wdXJfQm9sc2hldmlrX0NvbnNwaXJhY3lfQ2FzZSAgICAgIG9mIDIyICAuICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "2 only     .       "
      }
    },
    {
      "index" : 7,
      "question" : "With reference to the stages of colonialism  in India, consider the following pairs:  Stages of Colonialism  Feature  1. First Stage                    Colonialism of Free  Trade  2. Second Stage             Period of Merchant  Capital  3. Third Stage                  Era of Foreign  Investments   Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJham5pIFBhbG1lIER1dHQsIGlkZW50aWZpZWQgdGhyZWUgb3ZlcmxhcHBpbmcgc3RhZ2VzIGluIHRoZSBoaXN0b3J5IG9mIGltcGVyaWFsaXN0IHJ1bGUgaW4gSW5kaWEuIEhlICAgcG9pbnRzIG91dCB0aGF0IGVhY2ggc3RhZ2UgZGV2ZWxvcGVkIG91dCBvZiB0aGUgY29uZGl0aW9ucyBvZiB0aGUgcHJldmlvdXMgc3RhZ2UgYW5kIHRoZSBkaWZmZXJlbnQgbW9kZXMgICBvZiBjb2xvbmlhbCBleHBsb2l0YXRpb24gb3ZlcmxhcHBlZC1vbGQgZm9ybXMgb2YgY29sb25pYWwgZXhwbG9pdGF0aW9uIG5ldmVyIGVudGlyZWx5IGNlYXNlZCBidXQgZ290ICAgaW50ZWdyYXRlZCBpbnRvIG5ldyBwYXR0ZXJucyBvZiBleHBsb2l0YXRpb24uIFRoZXNlIHN0YWdlcyBhcmUsIGhvd2V2ZXIsIG1hcmtlZCBieSBkaXN0aW5jdCBkb21pbmFudCAgIGZlYXR1cmVzIGkuZS4sIHF1YWxpdGF0aXZlIGNoYW5nZXMgZnJvbSBvbmUgc3RhZ2UgdG8gYW5vdGhlci4gICBGaXJzdCBTdGFnZTogVGhlIFBlcmlvZCBvZiBNZXJjaGFudCBDYXBpdGFsIChNZXJjYW50aWxpc20pLCBvZnRlbiBkZXNjcmliZWQgYXMgdGhlIFBlcmlvZCBvZiBNb25vcG9seSAgIFRyYWRlIGFuZCBEaXJlY3QgQXBwcm9wcmlhdGlvbiAob3IgdGhlIFBlcmlvZCBvZiBFYXN0IEluZGlhIENvbXBhbnkncyBEb21pbmF0aW9uLCAxNzU3LTE4MTMpLCB3YXMgYmFzZWQgICBvbiB0d28gYmFzaWMgb2JqZWN0aXZlczogKGkpIHRvIGFjcXVpcmUgYSBtb25vcG9seSBvZiB0cmFkZSB3aXRoIEluZGlhLCBhZ2FpbnN0IG90aGVyIEVuZ2xpc2ggb3IgRXVyb3BlYW4gICBtZXJjaGFudHMgb3IgdHJhZGluZyBjb21wYW5pZXMgYXMgd2VsbCBhcyBhZ2FpbnN0IHRoZSBJbmRpYW4gbWVyY2hhbnRzOyAoaWkpIHRvIGRpcmVjdGx5IGFwcHJvcHJpYXRlIG9yICAgdGFrZSBvdmVyIGdvdmVybm1lbnRhbCByZXZlbnVlcyB0aHJvdWdoIGNvbnRyb2wgb3ZlciBTdGF0ZSBwb3dlci4gSGVuY2UgcGFpciAxIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuICAgU3RhZ2UgMjogT3dpbmcgdG8gaXRzIG1vZGUgb2YgZXhwbG9pdGF0aW9uIGJlaW5nIHRyYWRlLCB0aGlzIHN0YWdlIGlzIGFsc28gdGVybWVkIGFzIENvbG9uaWFsaXNtIG9mIEZyZWUgICBUcmFkZS4gSXQgc3RhcnRlZCB3aXRoIHRoZSBDaGFydGVyIEFjdCBvZiAxODEzIGFuZCBjb250aW51ZWQgdGlsbCAxODYwcy4gU29vbiBhZnRlciB0aGUgRWFzdCBJbmRpYSBDb21wYW55ICAgYmVjYW1lIHRoZSBydWxlciBvdmVyIG1vc3QgcGFydHMgb2YgSW5kaWEsIHRoZXJlIHdhcyBhIGRlYmF0ZSBpbiBCcml0YWluIGFzIHRvIHdob3NlIGludGVyZXN0cyB0aGUgbmV3bHkgICBhY3F1aXJlZCBjb2xvbnkgd291bGQgc2VydmUuIFRoZSBuZXdseSBlbWVyZ2luZyBpbmR1c3RyaWFsIGNhcGl0YWxpc3RzIGJlZ2FuIHRvIGNyaXRpY2lzZSB0aGUgRWFzdCBJbmRpYSAgIENvbXBhbnkgYW5kIGl0cyBleHBsb2l0YXRpb24gb2YgSW5kaWEuIFRoZXkgZGVtYW5kZWQgdGhhdCBjb2xvbmlhbCBhZG1pbmlzdHJhdGlvbiBhbmQgcG9saWN5IGluIEluZGlhICAgc2hvdWxkIG5vdyBzZXJ2ZSBCcml0aXNoIGNhcGl0YWxpc3QgaW50ZXJlc3RzIHdoaWNoIHdlcmUgdmVyeSBkaWZmZXJlbnQgZnJvbSB0aG9zZSBvZiB0aGUgRWFzdCBJbmRpYSAgIENvbXBhbnkuIEhlbmNlIHBhaXIgMiBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiAgIFN0YWdlIDM6IFRoZSB0aGlyZCBzdGFnZSBpcyBvZnRlbiBkZXNjcmliZWQgYXMgdGhlIEVyYSBvZiBGb3JlaWduIEludmVzdG1lbnRzIGFuZCBJbnRlcm5hdGlvbmFsICAgQ29tcGV0aXRpb24gZm9yIENvbG9uaWVzLiBJdCBiZWdhbiBhcm91bmQgdGhlIDE4NjBzIGluIEluZGlhIG93aW5nIHRvIHNldmVyYWwgY2hhbmdlcyBpbiB0aGUgd29ybGQgICBlY29ub215LiBEdXJpbmcgdGhpcyBzdGFnZSwgQnJpdGFpbiBtYWRlIHN0cmVudW91cyBlZmZvcnRzIHRvIGNvbnNvbGlkYXRlIGl0cyBjb250cm9sIG92ZXIgSW5kaWEuIExpYmVyYWwgICBpbXBlcmlhbGlzdCBwb2xpY2llcyBnb3QgcmVwbGFjZWQgd2l0aCByZWFjdGlvbmFyeSBpbXBlcmlhbGlzdCBwb2xpY2llcywgd2hpY2ggd2VyZSByZWZsZWN0ZWQgaW4gdGhlICAgdmljZXJveWFsdGllcyBvZiBMeXR0b24sIER1ZmZlcmluLCBMYW5zZG93bmUsIGFuZCBDdXJ6b24uIFRoZSBzdHJlbmd0aGVuaW5nIG9mIGNvbG9uaWFsIHJ1bGUgb3ZlciBJbmRpYSAgIHdhcyBtZWFudCB0byBrZWVwIG91dCB0aGUgcml2YWxzIGFzIHdlbGwgYXMgdG8gYXR0cmFjdCBCcml0aXNoIGNhcGl0YWwgdG8gSW5kaWEgYW5kIHByb3ZpZGUgaXQgc2VjdXJpdHkuIEFzIGEgICByZXN1bHQsIGEgdmVyeSBsYXJnZSBhbW91bnQgb2YgQnJpdGlzaCBjYXBpdGFsIGdvdCBpbnZlc3RlZCBpbiByYWlsd2F5cywgbG9hbnMgKHRvIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhKSwgICB0cmFkZSBhbmQsIHRvIGEgbGVzc2VyIGV4dGVudCwgaW4gcGxhbnRhdGlvbnMsIGNvYWwgbWluaW5nLCBqdXRlIG1pbGxzLCBzaGlwcGluZywgYW5kIGJhbmtpbmcgaW4gSW5kaWEuIEhlbmNlICAgcGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkLiAgIFNvdXJjZTogQSBCcmllZiBIaXN0b3J5IG9mIE1vZGVybiBJbmRpYS0gU3BlY3RydW0tIENoYXB0ZXIgMjgsIHBnIG5vLiA1ODItNTg2ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to the Desai-Liaqat Pact,  which of the following statement(s) is/are  correct?  1.  It proposed that an equal number of persons  will be nominated by the Congress and the  League in the central legislature.  2.  It proposed for a minimum of 40 percent  reserved seats for minorities in interim  government.  3.  No settlement could be reached between  the Congress and the League on the Pact.  Select the correct answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJodWxhYmhhaSBEZXNhaSwgbGVhZGVyIG9mIHRoZSBDb25ncmVzcyBQYXJ0eSBpbiB0aGUgQ2VudHJhbCBMZWdpc2xhdGl2ZSBBc3NlbWJseSwgbWV0IExpYXFhdCBBbGkgS2hhbiwgICBkZXB1dHkgbGVhZGVyIG9mIHRoZSBNdXNsaW0gTGVhZ3VlIGluIHRoYXQgQXNzZW1ibHksIGFuZCBib3RoIG9mIHRoZW0gY2FtZSB1cCB3aXRoIHRoZSBkcmFmdCBwcm9wb3NhbCAgIGZvciB0aGUgZm9ybWF0aW9uIG9mIGFuIGludGVyaW0gZ292ZXJubWVudCBhdCB0aGUgY2VudHJlLiBUaGlzIGRyYWZ0IGNhbWUgdG8ga25vd24gYXMgRGVzYWktTGlhcWF0IFBhY3QuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gUGFjdCBoYXMgcHJvdmlzaW9uIHRoYXQgYW4gZXF1YWwgbnVtYmVyIG9mIHBlcnNvbnMgd2lsbCBiZSBub21pbmF0ZWQgYnkgdGhlICAgQ29uZ3Jlc3MgYW5kIHRoZSBMZWFndWUgaW4gdGhlIGNlbnRyYWwgbGVnaXNsYXR1cmUuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBQYWN0IHByb3ZpZGVzIGZvciAyMCBwZXJjZW50IHJlc2VydmVkIHNlYXRzIGZvciBtaW5vcml0aWVzIGluIGludGVyaW0gICBnb3Zlcm5tZW50LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIE5vIHNldHRsZW1lbnQgY291bGQgYmUgcmVhY2hlZCBiZXR3ZWVuIHRoZSBDb25ncmVzcyBhbmQgdGhlIExlYWd1ZSBvbiB0aGVzZSAgIGxpbmVzLCBidXQgdGhlIGZhY3QgdGhhdCBhIHNvcnQgb2YgcGFyaXR5IGJldHdlZW4gdGhlIENvbmdyZXNzIGFuZCB0aGUgTGVhZ3VlIHdhcyBkZWNpZGVkIHVwb24gaGFkIGZhci0gIHJlYWNoaW5nIGNvbnNlcXVlbmNlcy4gICBTb3VyY2U6IEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEtIFNwZWN0cnVtLSBDaGFwdGVyIDIzLCBwZyBuby4gNDczICAgICAgIG9mIDIyICAuICAgICAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to the 'Poona Pact',  consider the following statements:  1.  It was accepted by the government as an  amendment to the Communal Award.  2.  Seats reserved for the depressed classes  were decreased in provincial legislatures  but increased in the Central Legislature.   3.  It pre-empted the rights and safeguards for  the Dalits in the Constitution of  independent India.  4.  The pact achieved the desired goal of  emancipation of the depressed class.  Which of the statement(s) given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBQb29uYSBQYWN0IHdhcyBTaWduZWQgYnkgQi5SLiBBbWJlZGthciBvbiBiZWhhbGYgb2YgdGhlIGRlcHJlc3NlZCBjbGFzc2VzIGFuZCBNYWhhdG1hIEdhbmRoaSBvbiAgIFNlcHRlbWJlciAyNCwgMTkzMi4gVGhlIGJhY2tncm91bmQgdG8gdGhlIFBvb25hIFBhY3Qgd2FzIHRoZSBDb21tdW5hbCBBd2FyZCBvZiBBdWd1c3QgMTkzMiwgd2hpY2gsICAgYW1vbmcgb3RoZXIgdGhpbmdzLCByZXNlcnZlZCA3MSBzZWF0cyBpbiB0aGUgY2VudHJhbCBsZWdpc2xhdHVyZSBmb3IgdGhlIGRlcHJlc3NlZCBjbGFzc2VzLiBHYW5kaGksIHdobyAgIHdhcyBvcHBvc2VkIHRvIHRoZSBDb21tdW5hbCBBd2FyZCwgc2F3IGl0IGFzIGEgQnJpdGlzaCBhdHRlbXB0IHRvIHNwbGl0IEhpbmR1cywgYW5kIGJlZ2FuIGEgZmFzdCB1bnRvICAgZGVhdGggdG8gaGF2ZSBpdCByZXBlYWxlZC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgUG9vbmEgUGFjdCB3YXMgYWNjZXB0ZWQgYnkgdGhlIGdvdmVybm1lbnQgYXMgYW4gYW1lbmRtZW50IHRvIHRoZSAgIENvbW11bmFsIEF3YXJkLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIFBvb25hIFBhY3QgYWJhbmRvbmVkIHRoZSBpZGVhIG9mIHNlcGFyYXRlIGVsZWN0b3JhdGVzIGZvciB0aGUgZGVwcmVzc2VkICAgY2xhc3Nlcy4gQnV0IHRoZSBzZWF0cyByZXNlcnZlZCBmb3IgdGhlIGRlcHJlc3NlZCBjbGFzc2VzIHdlcmUgaW5jcmVhc2VkIGZyb20gNzEgdG8gMTQ3IGluIHByb3ZpbmNpYWwgICBsZWdpc2xhdHVyZXMgYW5kIHRvIDE4IHBlciBjZW50IG9mIHRoZSB0b3RhbCBpbiB0aGUgQ2VudHJhbCBMZWdpc2xhdHVyZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBCeSBkZW55aW5nIHRvIHJlY29nbmlzZSB0aGUgRGFsaXRzIGFzIGEgc2VwYXJhdGUgYW5kIGRpc3RpbmN0IGVsZW1lbnQgaW4gdGhlICAgbmF0aW9uYWwgbGlmZSwgaXQgcHJlLWVtcHRlZCB0aGUgcmlnaHRzIGFuZCBzYWZlZ3VhcmRzIGZvciB0aGUgRGFsaXRzIGluIHRoZSBDb25zdGl0dXRpb24gb2YgaW5kZXBlbmRlbnQgICBJbmRpYS4gICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3QuIFRoZSBQb29uYSBQYWN0LCBkZXNwaXRlIGdpdmluZyBjZXJ0YWluIHBvbGl0aWNhbCByaWdodHMgdG8gdGhlIGRlcHJlc3NlZCBjbGFzc2VzLCAgIGNvdWxkIG5vdCBhY2hpZXZlIHRoZSBkZXNpcmVkIGdvYWwgb2YgZW1hbmNpcGF0aW9uIG9mIHRoZSBkZXByZXNzZWQgY2xhc3MuIEl0IGVuYWJsZWQgdGhlIHNhbWUgb2xkICAgSGluZHUgc29jaWFsIG9yZGVyIHRvIGNvbnRpbnVlIGFuZCBnYXZlIGJpcnRoIHRvIG1hbnkgcHJvYmxlbXMuICAgS25vd2xlZGdlIEJhc2U6IEFkZGl0aW9uYWwgSW5mb3JtYXRpb24gICBPdGhlciBJbXBhY3RzIG9mIFBvb25hIFBhY3Qgb24gRGFsaXRzICAgMSkgVGhlIFBhY3QgbWFkZSB0aGUgZGVwcmVzc2VkIGNsYXNzZXMgcG9saXRpY2FsIHRvb2xzIHdoaWNoIGNvdWxkIGJlIHVzZWQgYnkgdGhlIG1ham9yaXRhcmlhbiBjYXN0ZSAgIEhpbmR1IG9yZ2FuaXNhdGlvbnMuICAgMikgIEl0IG1hZGUgdGhlIGRlcHJlc3NlZCBjbGFzc2VzIGxlYWRlcmxlc3MgYXMgdGhlIHRydWUgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBjbGFzc2VzIHdlcmUgdW5hYmxlIHRvIHdpbiAgIGFnYWluc3QgdGhlIHN0b29nZXMgd2hvIHdlcmUgY2hvc2VuIGFuZCBzdXBwb3J0ZWQgYnkgdGhlIGNhc3RlIEhpbmR1IG9yZ2FuaXNhdGlvbnMuICAgMykgIFRoaXMgbGVkIHRvIHRoZSBkZXByZXNzZWQgY2xhc3NlcyB0byBzdWJtaXQgdG8gdGhlIHN0YXR1cyBxdW8gaW4gcG9saXRpY2FsLCBpZGVvbG9naWNhbCwgYW5kIGN1bHR1cmFsICAgZmllbGRzIGFuZCBub3QgYmVpbmcgYWJsZSB0byBkZXZlbG9wIGluZGVwZW5kZW50IGFuZCBnZW51aW5lIGxlYWRlcnNoaXAgdG8gZmlnaHQgdGhlIEJyYWhtaW5pY2FsICAgb3JkZXIuICAgNCkgVGhlIFBvb25hIFBhY3QgcGVyaGFwcyBwdXQgb2JzdHJ1Y3Rpb25zIGluIHRoZSB3YXkgb2YgYW4gaWRlYWwgc29jaWV0eSBiYXNlZCBvbiBlcXVhbGl0eSwgbGliZXJ0eSwgICBmcmF0ZXJuaXR5LCBhbmQganVzdGljZS4gICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluL25jZXJ0cy9sL2plc3MzMDMucGRmICAgIGh0dHBzOi8vd3d3LnRoZWhpbmR1LmNvbS9vcGluaW9uL29wLWVkL2FtYmVka2FyLWFuZC10aGUtcG9vbmEtcGFjdC9hcnRpY2xlMzEzMzM2ODQuZWNlICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to the period of colonial  rule in India, 'Home Charges' formed an  important part of drain of wealth from India.  Which of the following funds constituted  'Home Charges''?      1.  Funds used to support the India office in  London.     2.  Funds used to pay salaries and pensions of  British personnel engaged in India.    3.  Funds used for waging wars outside India by  the British    Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgSG9tZSBDaGFyZ2VzIHJlZmVycmVkIHRvIHRoZSBleHBlbmRpdHVyZSBpbmN1cnJlZCBpbiBFbmdsYW5kIGJ5IHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgb24gYmVoYWxmIG9mICAgSW5kaWEuICAgICBUaGUgZm9sbG93aW5nIGNvbnN0aXR1dGVkIHRoZSBIb21lIENoYXJnZXM6ICAgICBEaXZpZGVuZHMgb24gRWFzdCBJbmRpYSBTdG9jaywgSW50ZXJlc3Qgb24gUHVibGljIGRlYnQgcmFpc2VkIGFicm9hZCwgdGhlIHNhbGFyaWVzIG9mIHRoZSBvZmZpY2VycywgICBlc3RhYmxpc2htZW50cyBvZiB0aGUgYW5kIGJ1aWxkaW5nIGNvbm5lY3RlZCB3aXRoIHRoZSBIb21lIERlcGFydG1lbnQgb2YgSW5kaWFuICAgR292ZXJubWVudCwgZnVybG91Z2ggYW5kIHBlbnNpb25zIHRvIEJyaXRpc2ggb2ZmaWNlcnMgaW4gTWlsaXRhcnkgYW5kIENpdmlsIGRlcGFydG1lbnRzIGluIEluZGlhLiAgIENoYXJnZXMgb2YgYWxsIGRlc2NyaXB0aW9ucyBwYWlkIHRvIHRoZSBCcml0aXNoIHRyb29wcyBzZXJ2aW5nIGluIEluZGlhIGFuZCBwb3J0aW9uIG9mIHRoZSBjb3N0IG9mICAgdHJhbnNwb3J0aW5nIHRoZSBCcml0aXNoIHRyb29wcyB0byBhbmQgZnJvbSBJbmRpYS4gICAgIFNvdXJjZTogVVBTQyBDU0UgcHJlbGltcyAyMDIxICAgICAgIG9mIDIyICAuICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only     ",
        "option2" : "1 and 2 only     ",
        "option3" : "2 and 3 only     ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to ideological views of  Mahatma Gandhi and Ambedkar, consider the  following statements:  1.  In politics Ambedkar opted for rights-based  approach whereas Gandhi's approach was  based on faith and spirituality.  2.  Ambedkar's views on untouchability were  shaped by his political views whereas  Mahatma Gandhi's views were shaped by his  personal experiences.  3.  Unlike Ambedkar, Gandhi did not support  the abolition of the caste system.  Which of the statements given above is/are  correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE1haGF0bWEgR2FuZGhpJyBhbmQgQmFiYXNhaGViIEFtYmVka2FyIGFyZSB3ZWxsIGtub3duIHNvY2lhbCBhY3RpdmlzdHMsIG5hdGlvbiBidWlsZGVycyBhbmQgc29jaWFsICAgcmVmb3JtZXJzIHdob3NlIHJvbGVzIGZvciBtYWtpbmcgYSBmcmFtZXdvcmsgZm9yIGluY2x1c2l2ZSBhbmQgZWdhbGl0YXJpYW4gc29jaWFsIHN0cnVjdHVyZSBoYXZlIGJlZW4gICBnbG9iYWxseSBhcHByZWNpYXRlZC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJbiBQb2xpdGljYWwgc3BoZXJlLCBHYW5kaGkgZmVsdCB0aGF0IGFueSBleHBsb2l0YXRpdmUgcmVsYXRpb25zaGlwIGNvdWxkIGJlIHJlY3RpZmllZCAgIG9ubHkgd2hlbiB0aGUgZXhwbG9pdGVyIGhhZCBhIGNoYW5nZSBvZiBoZWFydC4gU28sIGhpcyBhcHByb2FjaCB3YXMgdGhyb3VnaCBmYWl0aCBhbmQgc3Bpcml0dWFsaXR5IGhlICAgd29ya2VkIHdpdGggdXBwZXIgY2FzdGVzIHRvIGNoYW5nZSB0aGVpciBtaW5kc2V0LiBXaGlsZSBBbWJlZGthciBhZHZvY2F0ZWQgdGhhdCBhbGwgdGhlIHBlb3BsZSBzaG91bGQgICBlbmpveSB0aGVpciBmdW5kYW1lbnRhbCByaWdodHMgYW5kIGZ1bGZpbCB0aGVpciBvYmxpZ2F0aW9ucyBpbiBldmVyeSBzcGhlcmUuIEhlbmNlIGhpcyBhcHByb2FjaCB3YXMgcmlnaHQgICBiYXNlZCBhcHByb2FjaC4gICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBHYW5kaGkgYW5kIEFtYmVka2FyIGxvb2tlZCBhdCB0aGUgcHJvYmxlbSBvZiB1bnRvdWNoYWJpbGl0eSBmcm9tIHR3byB2ZXJ5ICAgZGlmZmVyZW50IHBlcnNwZWN0aXZlcy4gR2FuZGhpIGhhZCBhIHZlcnkga2VlbiBzZW5zZSBvZiBqdXN0aWNlIGFuZCBodW1hbiBkaWduaXR5LCBidXQgaXQgd2FzIGNvbmRpdGlvbmVkICAgYnkgaGlzIHJlbGlnaW91cyBjb252aWN0aW9ucy4gQW1iZWRrYXIncyB2aWV3cyB3ZXJlIHNoYXBlZCBieSBwZXJzb25hbCBleHBlcmllbmNlIG9mIHRoZSBpbmVxdWl0aWVzIG9mICAgdGhlIGNhc3RlIHN5c3RlbSBub3QgYnkgcG9saXRpY2FsIHZpZXdzOyBoZSBoYWQgcGVyc29uYWxseSBzdWZmZXJlZCB0aGUgaHVtaWxpYXRpb25zIGFuZCBpbnN1bHRzIG1ldGVkIG91dCAgIHRvIGFuIHVudG91Y2hhYmxlIGJ5IGEgY2FzdGUgcmlkZGVuIHNvY2lldHkuIEhlIGRlZmluZWQgdGhlIHByb2JsZW0gaW4gdGVybXMgb2YgYnVpbGRpbmcgYW4gaW5kZXBlbmRlbnQgICBwb2xpdGljYWwgaWRlbnRpdHkgZm9yIERhbGl0cyBpbiB0aGUgc3RydWN0dXJlcyBvZiBzb2NpYWwsIGVjb25vbWljLCBhbmQgcG9saXRpY2FsIHBvd2Vycywgd2hlcmVhcyBmb3IgR2FuZGhpICAgaXQgd2FzIHB1cmVseSBhIHJlbGlnaW91cyBxdWVzdGlvbiwgdGhhdCB0b28gYW4gaW50ZXJuYWwgb25lIGZvciBIaW5kdWlzbS4gICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIEFtYmVka2FyIGRlbm91bmNlZCB0aGUgY2FzdGUgc3lzdGVtIGFuZCBmb3VnaHQgcmVsZW50bGVzc2x5IHRvIGVzdGFibGlzaCBhICAgc29jaWV0eSBiYXNlZCBvbiB0aGUgZGVtb2NyYXRpYyBpZGVhbHMgb2YgbGliZXJ0eSwgZXF1YWxpdHkgYW5kIGZyYXRlcm5pdHkuIEhlIGZpcm1seSBiZWxpZXZlZCB0aGF0ICAgZGVtb2NyYXRpYyBzb2NpZXR5IGluIEluZGlhIHdvdWxkIGJlIHBvc3NpYmxlIG9ubHkgd2hlbiB0aGUgaGllcmFyY2hpY2FsIHN0cnVjdHVyZSBvZiBWYXJuYSBzeXN0ZW0gaXMgICBkaXNtYW50bGVkLiBXaGlsZSBHYW5kaGkgYmVsaWV2ZWQgdGhhdCBjYXN0ZSBvcmdhbmlzYXRpb24gb3IgVmFybmFzaHJhbWEgd2FzIGJhc2ljIHRvIHRoZSBzdHJ1Y3R1cmUgb2YgICBJbmRpYW4gc29jaWV0eSwgYnV0IGhlIHN0cm9uZ2x5IGNvbmRlbW5lZCBkaXNjcmltaW5hdGlvbiwgZG9taW5hdGlvbiwgYW5kIGh1bWlsaWF0aW9uIGJhc2VkIG9uIGNhc3RlICAgYW5kIHVudG91Y2hhYmlsaXR5LiAgIFNvdXJjZTogSGlzdG9yeSBieSBCaXBpbiBDaGFuZHJhIHBhZ2UgMjMxLTMyICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8zNTcxMi8xL1VuaXQtMy5wZGYgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzYzODIwLzEvVW5pdC0xNS5wZGYgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzYzODIzLzEvVW5pdC0xLnBkZiAgIGh0dHBzOi8vd3d3LmhpbmR1c3RhbnRpbWVzLmNvbS9pbmRpYS1uZXdzL2dhbmRoaS1hbWJlZGthci1hbmQtdGhlLTE5MzItcG9vbmEtcGFjdC9zdG9yeS0gIDVXdXlycGhCOE93dFJwNWxDOVhRR1AuaHRtbCAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following Judicial  developments were made in India under British  rule?  1.  Introduction of stamp duty on judicial cases  2.  Separation of judiciary and executive  functions  3.  Codification of old laws  4.  Equal protection of law  Select the correct answer using the code given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBnb3Zlcm5tZW50IG9mIEluZGlhIHVuZGVyIHRoZSBwYXJsaWFtZW50YXJ5IGNvbnRyb2wgb2YgdGhlIEJyaXRpc2ggICBpbnRyb2R1Y2VkIHRoZSBzdGFtcCBkdXR5IG9uIHRoZSBqdWRpY2lhbCBjYXNlcyBpbiAxODk5LlRoZSBjb25jZXB0IG9mIHN0YW1wIGR1dHkgZXhpc3RzIHRpbGwgZGF0ZSwgYW5kIGl0ICAgaXMgYSBkdXR5IHBheWFibGUgb24gY2VydGFpbiBzcGVjaWZpZWQgaW5zdHJ1bWVudHMgb3IgZG9jdW1lbnRzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE9uZSBvZiB0aGUgbWFqb3IgZGV2ZWxvcG1lbnRzIGluIGp1ZGljaWFyeSBkdXJpbmcgdGhlIEJyaXRpc2ggZXJhIHdhcyB0aGUgICBzZXBhcmF0aW9uIG9mIGp1ZGljaWFyeSBhbmQgZXhlY3V0aXZlIGZ1bmN0aW9ucy4gSXQgbWVhbnQgdGhhdCB0aGUgY29sbGVjdG9yIHdobyB3YXMgdGhlIGhvbGRlciBvZiAgIGp1ZGljaWFsIGFuZCByZXZlbnVlIHJlc3BvbnNpYmlsaXRpZXMgd2FzIG5vdyBkZXByaXZlZCBvZiBoaXMganVkaWNpYWwgZnVuY3Rpb25zIGFuZCBjb25jZXJuZWQgd2l0aCAgIHJldmVudWUuIFRoZSBjb2xsZWN0aW9uIG9mIHJldmVudWUgYW5kIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlIHdlcmUgbm93IHRvIGJlIGNhcnJpZWQgb3V0IGJ5ICAgc2VwYXJhdGUgb2ZmaWNpYWxzIGFwcG9pbnRlZCBmb3IgdGhlIHB1cnBvc2UuIFRoZXJlIHdhcyBub3cgYSBjb2xsZWN0b3IgcmVzcG9uc2libGUgZm9yIHRoZSBjb2xsZWN0aW9uIG9mICAgcmV2ZW51ZSBhbmQgSnVkZ2UgTWFnaXN0cmF0ZSB3aXRoIGNpdmlsIGFuZCBjcmltaW5hbCBqdXJpc2RpY3Rpb24uICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gQW5vdGhlciBmZWF0dXJlIG9mIHRoZSBuZXcganVkaWNpYWwgc3lzdGVtIHdhcyB0aGUgZXN0YWJsaXNobWVudCBvZiBhIHdob2xlICAgbmV0d29yayBvZiBsYXdzIHRocm91Z2ggdGhlIHByb2Nlc3Mgb2YgZW5hY3RtZW50IG9mIGxhd3MgYW5kIGNvZGlmaWNhdGlvbiBvZiBvbGQgbGF3cy4gQnJpdGlzaGVycyAgIGludHJvZHVjZWQgcmVndWxhdGlvbnMsIGNvZGlmaWVkIGFuZCBzeXN0ZW1hdGl6ZWQgdGhlIGV4aXN0aW5nIGN1c3RvbWFyeSBsYXdzLCByZWxpZ2lvdXMgbGF3cyBhbmQgbGF3cyAgICAgb2YgMjIgIC4gICAgICAgICAgZmxvd2luZyBmcm9tIHRoZSB3aWxsIGFuZCBhdXRob3JpdHkgb2YgdGhlIHJ1bGVycyBhbmQgdGhlIGxhd3Mgd2VyZSBub3cgb3BlbiB0byBqdWRpY2lhbCBpbnRlcnByZXRhdGlvbnMgICBhbmQgc3Vic2VxdWVudCBhbWVuZG1lbnRzLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdC4gRXF1YWwgcHJvdGVjdGlvbiBvZiBsYXcgaXMgbm90IGEgQnJpdGlzaCBjb25jZXB0IGJ1dCBhbiBBbWVyaWNhbiBjb25jZXB0IHdoaWNoICAgbWVhbnMgdGhlIHJpZ2h0IHRvIGVxdWFsIHRyZWF0bWVudCBpbiBzaW1pbGFyIGNpcmN1bXN0YW5jZXMsIGJvdGggaW4gdGhlIHByaXZpbGVnZXMgY29uZmVycmVkIGFuZCwgaW4gdGhlICAgbGlhYmlsaXRpZXMsIGltcG9zZWQuIFdoaWxlIEVxdWFsaXR5IGJlZm9yZSBsYXcgd2FzIGEgZmVhdHVyZSBvZiBCcml0aXNoIGp1ZGljaWFsIHN5c3RlbSB3aGljaCBtZWFudCB0aGF0ICAgaW4gdGhlb3J5IGFsbCB0aGUgY2l0aXplbnMgaXJyZXNwZWN0aXZlIG9mIHRoZWlyIGNhc3RlLCBzdGF0dXMgZXRjLiB3ZXJlIG5vdyBwbGFjZWQgYXQgYW4gZXF1YWwgZm9vdGluZyBpbiB0aGUgICBleWVzIG9mIHRoZSBsYXcgICBTb3VyY2U6IGh0dHBzOi8vY2JzZWFjYWRlbWljLm5pYy5pbi93ZWJfbWF0ZXJpYWwvZG9jL0xlZ2FsX1N0dWRpZXMvWElfVTNfTGVnYWxfU3R1ZGllcy5wZGYgICAgaHR0cHM6Ly93d3cuZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNzY0ODMvMS9Vbml0LTYucGRmICAgaHR0cDovL3d3dy5sZWdhbHNlcnZpY2VzaW5kaWEuY29tL2FydGljbGUvMTEzOC9KdWRpY2lhbC1TeXN0ZW0tQmVmb3JlLSAgMTk0Ny5odG1sIzp+OnRleHQ9JTJEJTIwVGhlJTIwZ292ZXJubWVudCUyMG9mJTIwSW5kaWElMjB1bmRlcixyZWZvcm1zJTIwaW4lMjB0aGUlMjBqdWRpYyAgaWFsJTIwc3lzdGVtLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1, 2, 3 and 4    .       "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following statements are  correct regarding the issues associated with  the Radcliffe Boundary Commission?  1.  The commission used outdated surveys and  maps for demarcation.  2.  The partition was based on religious  demography while completely ignoring  other considerations such as strategic roads  and irrigation patterns.  3.  The time span allocated to the Radcliffe  commission for demarcation was very less.  4.  Lack of knowledge about the demographics  of India.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEJvdW5kYXJ5IENvbW1pc3Npb24gd2FzIGEgY29uc3VsdGF0aXZlIGNvbW1pdHRlZSBjcmVhdGVkIGluIEp1bHkgMTk0NyB0byByZWNvbW1lbmQgaG93IHRoZSBQdW5qYWIgICBhbmQgQmVuZ2FsIHJlZ2lvbnMgb2YgdGhlIEluZGlhbiBzdWJjb250aW5lbnQgd2VyZSB0byBiZSBkaXZpZGVkIGJldHdlZW4gSW5kaWEgYW5kIFBha2lzdGFuIHNob3J0bHkgICBiZWZvcmUgZWFjaCB3YXMgdG8gYmVjb21lIGluZGVwZW5kZW50IGZyb20gQnJpdGFpbi4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgUmFkY2xpZmZlIGJvdW5kYXJ5IGNvbW1pc3Npb24gdXNlZCB0aGUgb3V0ZGF0ZWQgQ2Vuc3VzIHJlY29yZHMgYW5kIG1hcHMgICBmb3IgZGVtYXJjYXRpbmcgdGhlIGludGVybmF0aW9uYWwgYm9yZGVycyBiZWNhdXNlIHRoZSBCcml0aXNoIGNvdWxkIG5vdCBnZXQgYSBmcmVzaCBzdXJ2ZXkgZG9uZSBpbiB0aGUgICBKdW5lIGhlYXQgb2YgdGhlIHRyb3BpY2FsIG5hdGlvbiB0aGV5IGhhZCBydWxlZCBzbyBsb25nLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIFJhZGNsaWZmZSdzIGNvbW1pc3Npb24gZGVtYXJjYXRlZCB0aGUgYm9yZGVyIGJhc2VkIG9uIHJlbGlnaW91cyAgIGRlbW9ncmFwaHkgd2hpbGUgb3RoZXIgY29uc2lkZXJhdGlvbnMsIHN1Y2ggYXMgc3RyYXRlZ2ljIHJvYWRzIGFuZCBpcnJpZ2F0aW9uIHBhdHRlcm5zIHdlcmUgYWxzbyAgIHNvbWV0aW1lcyBjb25zaWRlcmVkLiBGb3IgZXhhbXBsZSwgdGhlIE11c2xpbSBtYWpvcml0eSBkaXN0cmljdCBvZiBNdXJzaGlkYWJhZCBpbiBCZW5nYWwgd2FzIGdpdmVuIHRvICAgSW5kaWEgaW4gb3JkZXIgdG8ga2VlcCB0aGUgd2F0ZXIgcm91dGUgZnJvbSBDYWxjdXR0YSB0byB0aGUgR2FuZ2VzIGluIEluZGlhLiBUbyBtYWtlIHVwIGZvciB0aGlzLCB0aGUgICBIaW5kdSBtYWpvcml0eSBkaXN0cmljdCBvZiBLaHVsbmEgd2FzIGluY2x1ZGVkIGluIHdoYXQgaXMgdG9kYXkgQmFuZ2xhZGVzaC4gICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIHRpbWUgc3BhbiBhbGxvY2F0ZWQgdG8gdGhlIFJhZGNsaWZmZSBjb21taXNzaW9uIGZvciBkZW1hcmNhdGlvbiB3YXMgdmVyeSAgIGxlc3MsIG9ubHkgbGl0dGxlIG1vcmUgdGhhbiBhIG1vbnRoIHRvIGRyYXcuIFRoaXMgd2FzIGNyaXRpY2l6ZWQgYXMgdGhpcyBzZXZlcmVseSBsaW1pdGVkIHRoZSBkZWxpYmVyYXRpb25zICAgb2YgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIHRoYXQgZ3VpZGVkIHRoZSBjb21taXNzaW9uLiAgIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIFRoZSB0YXNrIG9mIGRlbWFyY2F0aW5nIHRoZSBib3VuZGFyeSBiZXR3ZWVuIEluZGlhIGFuZCBQYWtpc3RhbiB3YXMgZ2l2ZW4gdG8gYSAgIEJyaXRpc2ggbGF3eWVyLCBTaXIgQ3lyaWwgUmFkY2xpZmZlLCB3aG8gaGFkIGluIGZhY3QgbmV2ZXIgYmVlbiB0byBJbmRpYSwgb3IgYW55d2hlcmUgZWxzZSBpbiBBc2lhLCBhbmQgd2FzICAgbm90IGZhbWlsaWFyIHdpdGggdGhlIGRlbW9ncmFwaGljcyBvZiBJbmRpYS4gVGhpcyB3YXMgc2VlbiBhcyBhIHBvc2l0aXZlLCBiZWNhdXNlIHRoZSBhc3N1bXB0aW9uIHdhcyAgIHRoYXQgUmFkY2xpZmZlIHdvdWxkIGJlIGFuIGltcGFydGlhbCBmaWd1cmUuICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9sZWhzMzA1LnBkZiAgICBwYXJ0aXRpb24vICAgaHR0cHM6Ly93d3cudGltZXNub3duZXdzLmNvbS9pbmRpYS9hcnRpY2xlL2hlcmVzLXdoeS10aGUtbWFuLXdoby1kcmV3LXRoZS1wYXJ0aXRpb24tbWFwLW9mLSAgaW5kaWEtbmV2ZXItcmV0dXJuZWQtZm9yLWEtdmlzaXQvNjM1NTYzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1 and 4 only  ",
        "option3" : "2 and 4 only  ",
        "option4" : "1, 3 and 4 only   "
      }
    },
    {
      "index" : 14,
      "question" : "Which among the following is correct  regarding the purpose of Muddiman  committee?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBPcHRpb24gYSBpcyBpbmNvcnJlY3Q6IFRoZSBwdXJwb3NlIG9mIHRoZSBSb3dsYXR0IGNvbW1pdHRlZSB3YXMgdG8gaW52ZXN0aWdhdGUgdGhlICdzZWRpdGlvdXMgICBjb25zcGlyYWN5JyBvZiB0aGUgSW5kaWFuIHBlb3BsZS4gVGhlIGNvbW1pdHRlZSBoYWQgcmVjb21tZW5kZWQgdGhhdCBhY3RpdmlzdHMgc2hvdWxkIGJlIGRlcG9ydGVkIG9yICAgaW1wcmlzb25lZCB3aXRob3V0IHRyaWFsIGZvciB0d28geWVhcnMsIGFuZCB0aGF0IGV2ZW4gcG9zc2Vzc2lvbiBvZiBzZWRpdGlvdXMgbmV3c3BhcGVycyB3b3VsZCBiZSAgICAgb2YgMjIgIC4gICAgICAgICAgYWRlcXVhdGUgZXZpZGVuY2Ugb2YgZ3VpbHQuIEl0IHJlY29tbWVuZGVkIGZvciB0aGUgUm93bGF0dCBBY3QgdGhhdCB3YXMgb2ZmaWNpYWxseSBjYWxsZWQgdGhlIEFuYXJjaGljYWwgICBhbmQgUmV2b2x1dGlvbmFyeSBDcmltZXMgQWN0LiAgICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IFRoZSBTZWNyZXRhcnkgb2YgU3RhdGUgZm9yIEluZGlhLCBFZHdpbiBNb250YWd1LCBvcmRlcmVkIHRoYXQgYSBjb21taXR0ZWUgb2YgICBpbnF1aXJ5IGJlIGZvcm1lZCB0byBpbnZlc3RpZ2F0ZSB0aGUgbWF0dGVyIG9mIEphbGxpYW53YWxsYSBCYWdoIG1hc3NhY3JlLiBJdCB3YXMgY2FsbGVkIHRoZSBEaXNvcmRlcnMgICBJbnF1aXJ5IENvbW1pdHRlZSBvciBIdW50ZXIgQ29tbWl0dGVlL0NvbW1pc3Npb24gYWZ0ZXIgdGhlIG5hbWUgb2YgaXRzIGNoYWlybWFuLCBMb3JkIFdpbGxpYW0gICBIdW50ZXIuIFRoZSBwdXJwb3NlIG9mIHRoZSBjb21taXNzaW9uIHdhcyB0byAnaW52ZXN0aWdhdGUgdGhlIHJlY2VudCBkaXN0dXJiYW5jZXMgaW4gQm9tYmF5LCBEZWxoaSAgIGFuZCBQdW5qYWIsIGFib3V0IHRoZWlyIGNhdXNlcywgYW5kIHRoZSBtZWFzdXJlcyB0YWtlbiB0byBjb3BlIHdpdGggdGhlbScuIFRoZXJlIHdlcmUgdGhyZWUgSW5kaWFucyAgIGFtb25nIHRoZSBtZW1iZXJzLCBuYW1lbHksIFNpciBDaGltYW5sYWwgSGFyaWxhbCBTZXRhbHZhZCwgVmljZS1DaGFuY2VsbG9yIG9mIEJvbWJheSBVbml2ZXJzaXR5IGFuZCAgIGFkdm9jYXRlIG9mIHRoZSBCb21iYXkgSGlnaCBDb3VydDsgUGFuZGl0IEphZ2F0IE5hcmF5YW4sIGxhd3llciBhbmQgTWVtYmVyIG9mIHRoZSBMZWdpc2xhdGl2ZSBDb3VuY2lsICAgb2YgdGhlIFVuaXRlZCBQcm92aW5jZXM7IGFuZCBTYXJkYXIgU2FoaWJ6YWRhIFN1bHRhbiBBaG1hZCBLaGFuLCBsYXd5ZXIgZnJvbSBHd2FsaW9yIFN0YXRlLiAgICBPcHRpb24gYyBpcyBjb3JyZWN0OiBUaGUgTXVkZGltYW4gQ29tbWl0dGVlIHdhcyBmb3JtZWQgdG8gcmV2aWV3IHRoZSB3b3JraW5nIG9mIHRoZSBzZXJ2aWNlcyB1bmRlciAgIER5YXJjaHkgaW4gMTkyNC4gVGhlIG1ham9yaXR5IG9mIHRoZSBDb21taXR0ZWUsIHdoaWNoIGNvbnNpc3RlZCBvZiBFdXJvcGVhbnMgYW5kIEdvdmVybm1lbnQgb2ZmaWNpYWxzLCAgIGNhbWUgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCB0aGUgc3VwZXJpb3Igc2VydmljZXMgaGFkIGxveWFsbHkgY28tb3BlcmF0ZWQgd2l0aCB0aGUgcG9wdWxhciBNaW5pc3RlcnMgaW4gICBjYXJyeWluZyBvbiB0aGUgYWRtaW5pc3RyYXRpb24uIFRoZSBtZW1iZXJzIGFsc28gaW5jbHVkZWQgTXIgTi5BLiBKaW5uYWggYW5kIFNpciBUZWogQmFoYWR1ciBTYXBydS4gICAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBBcHBvaW50bWVudCBvZiBQb2xpY2UgQ29tbWlzc2lvbiAoMTkwMikgdW5kZXIgU2lyIEFuZHJldyBGcmF6ZXIgdG8gcmV2aWV3ICAgcG9saWNlIGFkbWluaXN0cmF0aW9uLiBJdCB3YXMgc2V0IHVwIGJ5IExvcmQgQ3Vyem9uLiBJdCByZWNvbW1lbmRlZCB0aGUgYXBwb2ludG1lbnQgb2YgSW5kaWFucyBhdCAgIG9mZmljZXIgbGV2ZWwgaW4gdGhlIHBvbGljZS4gICAgU291cmNlOiBBIEJyaWVmIEhpc3Rvcnkgb2YgTW9kZXJuIEluZGlhIGJ5IFJhaml2IEFoaXIgLSBDaGFwdGVyIDE1IEVtZXJnZW5jZSBvZiBHYW5kaGkgLSBQIDMyMCwzMjQsICAgQXBwZW5kaWNlcyAtIFAgODIwLiAgICBodHRwczovL2RkY2V1dGthbC5hYy5pbi9TeWxsYWJ1cy9NQV9oaXN0b3J5L1BhcGVyXzIwLnBkZiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " To investigate the seditious conspiracy of   the Indian people.  ",
        "option2" : " To investigate the disturbances in Bombay,   Delhi and Punjab during late 1910s.   ",
        "option3" : " To review the working of the services under   Dyarchy system.   ",
        "option4" : " To review the police administration.    "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following statements:     The most effective contribution made by  Dadabhai Naoroji to the cause of Indian  National Movement was that he    1.  Exposed the economic exploitation of India  by the British     2.  Interpreted the ancient Indian texts and  restored the self-confidence of Indians     3.  Stressed the need for eradication of all the  social evils before anything else     Which of the statements given above is/are  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgTmFvcm9qaSdzIG1ham9yIGNvbnRyaWJ1dGlvbiB0byB0aGUgSW5kaWFuIGluZGVwZW5kZW5jZSBtb3ZlbWVudCB3YXMgaGlzICdEcmFpbiBvZiBXZWFsdGgnIHRoZW9yeSwgYSAgIGRldGFpbGVkIGFuYWx5dGljYWwgc3R1ZHkgb2YgaG93IHRoZSBjb2xvbmlhbCBydWxlcnMgb2YgdGhlIHN1YmNvbnRpbmVudCBwaWxsYWdlZCBpdHMgZWNvbm9taWMgcmVzb3VyY2VzICAgYW5kIHNoYXR0ZXJlZCBpdHMgaW5kdXN0cmlhbCBjYXBhY2l0eS4gVGhlIHRoZW9yeSB3YXMgbW9zdCBjb2dlbnRseSBkZW1vbnN0cmF0ZWQgaW4gaGlzIDE5MDEgICB3b3JrIFBvdmVydHkgYW5kIFVuLUJyaXRpc2ggUnVsZSBpbiBJbmRpYS4gICAgIE5hb3JvamkgdXNlZCB0aGUgQnJpdGlzaCBpbXBlcmlhbCBzdGF0ZSdzIG93biBkYXRhIHRvIHByb3ZlIGl0cyBoaXN0b3JpY2FsIGltcG92ZXJpc2htZW50IG9mIHRoZSAgIHN1YmNvbnRpbmVudCBieSBtYXBwaW5nIEluZGlhbiBuZXQgcHJvZml0IGFsb25nc2lkZSBkaWZmZXJlbnQgdmVudHVyZXMgYmVpbmcgdW5kZXJ0YWtlbiBieSB0aGUgQnJpdGlzaCAgIFJhai4gSGUgY2FsY3VsYXRlZCB0aGF0IGRyYWluIG9mIEluZGlhJ3Mgd2VhbHRoLCByZXN1bHRlZCBpbiBhIHllYXJseSBsb3NzIG9mIGFwcHJveGltYXRlbHkgwqMzMC00MCBtaWxsaW9uICAgd2l0aCBvbmx5IMKjMjUwLDAwMCdzIHdvcnRoIG9mIGNhcGl0YWwgaW5qZWN0ZWQgYmFjayBpbnRvIEluZGlhIHBlciBhbm51bS4gICBTb3VyY2U6IFVQU0MgQ1NFIFByZWxpbXMgMjAxMiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 and 3 only     ",
        "option3" : "1 and 3 only    ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 16,
      "question" : "Which among the following are the  correct reasons for the growth of  communalism in India during British rule?  1.  Biased interpretation of ancient and  medieval history.   2.  Lack of good employment opportunities.   3.  Growth of communist parties.   4.  Influence of zamindars over the local  people.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIENvbW11bmFsaXNtIGlzIGJhc2ljYWxseSBhbiBpZGVvbG9neSwgd2hpY2ggZ2l2ZXMgbW9yZSBpbXBvcnRhbmNlIHRvIG9uZSdzIG93biBldGhuaWMvcmVsaWdpb3VzIGdyb3VwICAgcmF0aGVyIHRoYW4gdG8gdGhlIHdpZGVyIHNvY2lldHkgYXMgYSB3aG9sZSwgZXZvbHZlZCB0aHJvdWdoIHRocmVlIGJyb2FkIHN0YWdlcyBpbiBJbmRpYS4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogSW5pdGlhbGx5IHN1Z2dlc3RlZCBieSBpbXBlcmlhbGlzdCBoaXN0b3JpYW5zIGFuZCBsYXRlciBhZG9wdGVkIGJ5IHNvbWUgY2hhdXZpbmlzdCAgIEluZGlhbiBoaXN0b3JpYW5zLCB0aGUgY29tbXVuYWwgaW50ZXJwcmV0YXRpb24gb2YgSW5kaWFuIGhpc3RvcnkgcG9ydHJheWVkIHRoZSBhbmNpZW50IHBoYXNlIGFzIHRoZSAgIEhpbmR1IHBoYXNlIGFuZCB0aGUgbWVkaWV2YWwgcGhhc2UgYXMgdGhlIE11c2xpbSBwaGFzZS4gVGhlIGNvbmZsaWN0cyBvZiBydWxpbmcgY2xhc3NlcyBkdXJpbmcgdGhlICAgbWVkaWV2YWwgcGhhc2Ugd2VyZSBkaXN0b3J0ZWQgYW5kIGV4YWdnZXJhdGVkIGFzIEhpbmR1IE11c2xpbSBjb25mbGljdHMuIEhpc3RvcmlhbnMgaWdub3JlZCB0aGUgZmFjdCAgIHRoYXQgcG9saXRpY3MsIGFuY2llbnQgYW5kIG1lZGlldmFsIGFzIG9mIGFsbCB0aW1lcyBhbmQgYW55d2hlcmUsIHdhcyBiYXNlZCBvbiBlY29ub21pYyBhbmQgcG9saXRpY2FsICAgaW50ZXJlc3RzIGFuZCBub3Qgb24gcmVsaWdpb3VzIGNvbnNpZGVyYXRpb25zLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBcyBhIHJlc3VsdCBvZiB0aGUgdW5kZXJkZXZlbG9wbWVudCBkdWUgdG8gY29sb25pYWwgcG9saWNpZXMsIHRoZXJlIHdhcyBhIGxhY2sgb2YgICBpbmR1c3RyaWFsIGRldmVsb3BtZW50LiBTbywgdW5lbXBsb3ltZW50IHdhcyBhbiBhY3V0ZSBwcm9ibGVtIGluIEluZGlhLCBlc3BlY2lhbGx5IGZvciB0aGUgZWR1Y2F0ZWQuIEluICAgICBvZiAyMiAgLiAgICAgICAgICB0aGUgY2lyY3Vtc3RhbmNlcyB0aGVyZSB3ZXJlIGFkdm9jYXRlcyBvZiBzaG9ydC1zaWdodGVkIGFuZCBzaG9ydC10ZXJtIHNvbHV0aW9ucyBzdWNoIGFzIHJlc2VydmF0aW9uIGluICAgam9icyBvbiBjb21tdW5hbCwgcHJvdmluY2lhbCBvciBjYXN0ZSBsaW5lcy4gVGhlc2UgcGVyc29ucyBhcm91c2VkIGNvbW11bmFsIGFuZCByZWxpZ2lvdXMgcGFzc2lvbnMgaW4gICBhbiBhdHRlbXB0IHRvIGdldCBhIGxhcmdlciBzaGFyZSBvZiB0aGUgZXhpc3RpbmcsIGxpbWl0ZWQgZW1wbG95bWVudCBvcHBvcnR1bml0aWVzLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IENvbW11bmlzdCBwYXJ0aWVzIGZvcm1lZCBkdXJpbmcgMTkyMHMgd2VyZSBzZWN1bGFyIGluIG5hdHVyZS4gVGhlaXIgbWFpbiAgIG9iamVjdGl2ZSB3YXMgdG8gZGV2ZWxvcCBjbGFzcyBjb25zY2lvdXNuZXNzIGFtb25nIHRoZSBwZW9wbGUgdG8gZmlnaHQgZm9yIHRoZWlyIHJpZ2h0cy4gICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogTW9kZXJuIFdlc3Rlcm4gdGhvdWdodCBhbmQgc2NpZW50aWZpYyBpZGVhcyB3ZXJlIG5vdCBhYnNvcmJlZCBieSBNdXNsaW0gICBpbnRlbGxlY3R1YWxzLCB3aG8gcmVtYWluZWQgdHJhZGl0aW9uYWwgYW5kIGJhY2t3YXJkLiBTbywgaXQgd2FzIGVhc3kgZm9yIHRoZSByZWFjdGlvbmFyeSBiaWcgbGFuZGxvcmRzICAgYW5kIHRoZSByaWNoZXIgY2xhc3NlcyB0byBjb250aW51ZSB0byB3aWVsZCBpbmZsdWVuY2Ugb3ZlciB0aGUgTXVzbGltIG1hc3Nlcy4gTGFuZGxvcmRzIGFuZCB6YW1pbmRhcnMsICAgd2hldGhlciBIaW5kdSBvciBNdXNsaW0sIHN1cHBvcnRlZCB0aGUgQnJpdGlzaCBydWxlIG91dCBvZiBzZWxmLWludGVyZXN0LiAgICBUaGUgbWlub3JpdHkgY29tbXVuYWxpc20gbWV0IHdpdGggYSByZWFjdGlvbiBmcm9tIHRoZSBtYWpvcml0eSBjb21tdW5pdHkuIEZyb20gdGhlIDE4NzBzIGl0c2VsZiwgICBzb21lIEhpbmR1IHphbWluZGFycywgbW9uZXlsZW5kZXJzIGFuZCBtaWRkbGUtY2xhc3MgcHJvZmVzc2lvbmFscyBiZWdhbiB0byBnaXZlIGV4cHJlc3Npb24gdG8gYW50aS0gIE11c2xpbSBzZW50aW1lbnRzLiBUaGV5IHdlbnQgdG8gdGhlIGV4dGVudCBvZiBkZWNsYXJpbmcgdGhhdCB0aGUgQnJpdGlzaCBoYWQgbGliZXJhdGVkIHRoZSBsYW5kIGZyb20gICBNdXNsaW0gdHlyYW5ueSBhbmQgc2F2ZWQgdGhlIEhpbmR1cyBmcm9tIHRoZSBvcHByZXNzaW9uIGJ5IE11c2xpbXMuIFRoZSBjYXVzZSBvZiBIaW5kaSB3YXMgZ2l2ZW4gYSAgIGNvbW11bmFsIGNvbG91ciBieSBzYXlpbmcgdGhhdCBVcmR1IHdhcyB0aGUgbGFuZ3VhZ2Ugb2YgdGhlIE11c2xpbXMuICAgIEtub3dsZWRnZSBCYXNlOiBPdGhlciByZWFzb25zIHdlcmUgZm9yIGNvbW11bmFsaXNtIHdlcmU6ICAgIDEuIEJyaXRpc2ggUG9saWN5IG9mIERpdmlkZSBhbmQgUnVsZSAgIE11c2xpbXMgd2VyZSBnZW5lcmFsbHkgbG9va2VkIHVwb24gd2l0aCBzdXNwaWNpb24gaW5pdGlhbGx5LCBlc3BlY2lhbGx5IGFmdGVyIHRoZSBXYWhhYmkgYW5kIDE4NTcgcmV2b2x0cywgICBhbmQgd2VyZSBzdWJqZWN0ZWQgdG8gcmVwcmVzc2lvbiBhbmQgZGlzY3JpbWluYXRpb24gYnkgdGhlIEJyaXRpc2ggZ292ZXJubWVudC4gQWZ0ZXIgdGhlIDE4NzBzLCB0aGUgICBnb3Zlcm5tZW50IHJldmVyc2VkIGl0cyBwb2xpY3kgb2YgcmVwcmVzc2lvbiBvZiBNdXNsaW1zIGFuZCBkZWNpZGVkIHRvIHJhbGx5IHRoZW0gYmVoaW5kIHRoZSAgIGdvdmVybm1lbnQgdGhyb3VnaCBjb25jZXNzaW9ucywgZmF2b3VycyBhbmQgcmVzZXJ2YXRpb25zLCBhbmQgdXNlZCB0aGVtIGFnYWluc3QgbmF0aW9uYWxpc3QgZm9yY2VzLiAgICAyLiBTaWRlLWVmZmVjdHMgb2YgU29jaW8tcmVsaWdpb3VzIFJlZm9ybSBNb3ZlbWVudHMgICAgUmVmb3JtIG1vdmVtZW50cyBzdWNoIGFzIHRoZSBXYWhhYmkgTW92ZW1lbnQgYW1vbmcgTXVzbGltcyBhbmQgU2h1ZGRoaSBhbW9uZyBIaW5kdXMgd2l0aCB0aGVpciAgIG1pbGl0YW50IG92ZXJ0b25lcyBtYWRlIHRoZSByb2xlIG9mIHJlbGlnaW9uIG1vcmUgdnVsbmVyYWJsZSB0byBjb21tdW5hbGlzbS4gUmVmb3JtcywgYXQgdGltZXMsIHdlcmUgICBzZWVuIGFzIGEgcHJvY2VzcyBvZiBpbnN1bGF0aW5nIG9uZSBjb21tdW5pdHkgZnJvbSB0aGUgaW5mbHVlbmNlIG9mIGFub3RoZXIgcmVsaWdpb3VzIGNvbW11bml0eS4gICAzLiBTaWRlLWVmZmVjdHMgb2YgTWlsaXRhbnQgTmF0aW9uYWxpc20gICBUaWxhaydzIEdhbmFwYXRpIGFuZCBTaGl2YWppIGZlc3RpdmFscyBhbmQgYW50aS1jb3cgc2xhdWdodGVyIGNhbXBhaWducyBjcmVhdGVkIG11Y2ggc3VzcGljaW9uLiAgIEF1cm9iaW5kbydzIHZpc2lvbiBvZiBhbiBBcnlhbmlzZWQgd29ybGQsIHRoZSBTd2FkZXNoaSBNb3ZlbWVudCB3aXRoIGVsZW1lbnRzIGxpa2UgZGlwcyBpbiB0aGUgR2FuZ2EgICBhbmQgcmV2b2x1dGlvbmFyeSBhY3Rpdml0eSB3aXRoIG9hdGgtdGFraW5nIGJlZm9yZSBnb2RkZXNzZXMgd2VyZSBoYXJkbHkgbGlrZWx5IHRvIGVudGh1c2UgTXVzbGltcyBpbnRvICAgdGhlc2UgY2FtcGFpZ25zIGluIGEgYmlnIHdheS4gV2hlbiB0aGUgS2hpbGFmYXQgcXVlc3Rpb24gY2FtZSB1cCwgdGhlcmUgd2FzIHVuZWFzZSBhbW9uZyBzb21lICAgQ29uZ3Jlc3NtZW4gd2hvIGZlbHQgdGhhdCB0aGUgaXNzdWUgd2FzIG5vdCByZWFsbHkgbmF0aW9uYWxpc3RpYy4gICAgNC4gQ29tbXVuYWwgUmVhY3Rpb24gYnkgTWFqb3JpdHkgQ29tbXVuaXR5ICAgTWFueSBvcmdhbmlzYXRpb25zIHdlcmUgZm9ybWVkIHRvIHByb21vdGUgYSBjb21tdW5hbCBvdXRsb29rLiBUaGUgUHVuamFiIEhpbmR1IFNhYmhhLCBmb3VuZGVkIGluICAgMTkwOSBieSBVLk4uIE11a2hlcmplZSBhbmQgTGFsIENoYW5kLCBvcHBvc2VkIHRoZSBDb25ncmVzcyBmb3IgdHJ5aW5nIHRvIHVuaXRlIEluZGlhbnMgb2YgYWxsIGNvbG91cnMgICBpbnRvIGEgc2luZ2xlIG5hdGlvbi4gSG93ZXZlciwgSGluZHUgY29tbXVuYWxpc20gd2FzIG5vdCBhIHN0cm9uZyBmb3JjZSBmb3IgYSBsb25nIHRpbWUgYXMgdGhlIG1vZGVybiAgIHNlY3VsYXIgaW50ZWxsaWdlbnRzaWEgYW5kIG1pZGRsZSBjbGFzcyBhbW9uZyBIaW5kdXMgd2llbGRlZCBhIGdyZWF0ZXIgaW5mbHVlbmNlLiBUaGlzIHdhcyBub3QgdGhlIGNhc2UgICB3aXRoIHRoZSBNdXNsaW1zOyB0aGUgTXVzbGltIGNvbW11bmFsIGVsZW1lbnRzIC0gbGFuZGxvcmRzLCB0cmFkaXRpb25hbCByZWxpZ2lvdXMgbGVhZGVycyBhbmQgICBidXJlYXVjcmF0cyAtIGV4ZXJjaXNlZCBhIGxvdCBvZiBpbmZsdWVuY2Ugb24gdGhlIE11c2xpbXMuICAgU291cmNlOiBIaXN0b3J5IGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyOTcgICBBIEJyaWVmIEhpc3Rvcnkgb2YgTW9kZXJuIEluZGlhIGJ5IFJhaml2IEFoaXIgLSBDaGFwdGVyIDI0IFBvc3QtV2FyIE5hdGlvbmFsIFNjZW5hcmlvIC0gUCA0ODAtNDg1LiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1,2 and 4 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 17,
      "question" : "Which among the following is/are the  recommendations of the Saddler University  Commission set up to study the problems of  Calcutta University?   1.  Five lakh rupees to be sanctioned per annum  for five years for improvement of higher  education and universities.   2.  A separate board of secondary and  intermediate education should be set up for  administration of school education.   3.  The Government was to have powers to veto  universities' senate regulations.   Select the correct answer from the code given  below:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUaGUgU2FkZGxlciBVbml2ZXJzaXR5IENvbW1pc3Npb24gKDE5MTctMTkpIHdhcyBzZXQgdXAgdG8gc3R1ZHkgYW5kIHJlcG9ydCBvbiBwcm9ibGVtcyBvZiBDYWxjdXR0YSAgIFVuaXZlcnNpdHkgYnV0IGl0cyByZWNvbW1lbmRhdGlvbnMgd2VyZSBhcHBsaWNhYmxlIG1vcmUgb3IgbGVzcyB0byBvdGhlciB1bml2ZXJzaXRpZXMgYWxzby4gSXQgcmV2aWV3ZWQgICB0aGUgZW50aXJlIGZpZWxkIGZyb20gc2Nob29sIGVkdWNhdGlvbiB0byB1bml2ZXJzaXR5IGVkdWNhdGlvbi4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBSYWxlaWdoIENvbW1pc3Npb24gcmVjb21tZW5kZWQgZm9yIHRoZSBzYW5jdGlvbmluZyBvZiBmaXZlIGxha2ggcnVwZWVzIHBlciAgIGFubnVtIGZvciBmaXZlIHllYXJzIGZvciBpbXByb3ZlbWVudCBvZiBoaWdoZXIgZWR1Y2F0aW9uIGFuZCB1bml2ZXJzaXRpZXMuICAgICAgb2YgMjIgIC4gICAgICAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogU2FkZGxlciBjb21taXNzaW9uIHJlY29tbWVuZGF0aW9uOiAgICAxKSBTY2hvb2wgY291cnNlIHNob3VsZCBjb3ZlciAxMiB5ZWFycy4gU3R1ZGVudHMgc2hvdWxkIGVudGVyIHVuaXZlcnNpdHkgYWZ0ZXIgYW4gaW50ZXJtZWRpYXRlIHN0YWdlICAgKHJhdGhlciB0aGFuIG1hdHJpYykgZm9yIGEgdGhyZWUteWVhciBkZWdyZWUgY291cnNlIGluIHVuaXZlcnNpdHkuICAgIDIpIEEgc2VwYXJhdGUgYm9hcmQgb2Ygc2Vjb25kYXJ5IGFuZCBpbnRlcm1lZGlhdGUgZWR1Y2F0aW9uIHNob3VsZCBiZSBzZXQgdXAgZm9yIGFkbWluaXN0cmF0aW9uIGFuZCAgIGNvbnRyb2wgb2Ygc2Vjb25kYXJ5IGFuZCBpbnRlcm1lZGlhdGUgZWR1Y2F0aW9uLiAgICAzKSBUaGVyZSBzaG91bGQgYmUgbGVzcyByaWdpZGl0eSBpbiBmcmFtaW5nIHVuaXZlcnNpdHkgcmVndWxhdGlvbnMuICAgNCkgQSB1bml2ZXJzaXR5IHNob3VsZCBmdW5jdGlvbiBhcyBjZW50cmFsaXNlZCwgdW5pdGFyeSByZXNpZGVudGlhbC10ZWFjaGluZyBhdXRvbm9tb3VzIGJvZHksIHJhdGhlciB0aGFuICAgYXMgc2NhdHRlcmVkLCBhZmZpbGlhdGVkIGNvbGxlZ2VzLiAgIDUpIEZlbWFsZSBlZHVjYXRpb24sIGFwcGxpZWQgc2NpZW50aWZpYyBhbmQgdGVjaG5vbG9naWNhbCBlZHVjYXRpb24sICAgIDYpIFRlYWNoZXJzJyB0cmFpbmluZyBpbmNsdWRpbmcgdGhvc2UgZm9yIHByb2Zlc3Npb25hbCBhbmQgdm9jYXRpb25hbCBjb2xsZWdlcyBzaG91bGQgYmUgZXh0ZW5kZWQuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBSYWxlaWdoIENvbW1pc3Npb24gcmVjb21tZW5kZWQgdGhhdCB0aGUgR292ZXJubWVudCB3YXMgdG8gaGF2ZSBwb3dlcnMgICB0byB2ZXRvIHVuaXZlcnNpdGllcycgc2VuYXRlIHJlZ3VsYXRpb25zIGFuZCBjb3VsZCBhbWVuZCB0aGVzZSByZWd1bGF0aW9ucyBvciBwYXNzIHJlZ3VsYXRpb25zIG9uIGl0cyAgIG93bi4gICAgS25vd2xlZGdlIEJhc2U6IEluIDE5MDIsIFJhbGVpZ2ggQ29tbWlzc2lvbiB3YXMgc2V0IHVwIHRvIGdvIGludG8gY29uZGl0aW9ucyBhbmQgcHJvc3BlY3RzIG9mICAgdW5pdmVyc2l0aWVzIGluIEluZGlhIGFuZCB0byBzdWdnZXN0IG1lYXN1cmVzIGZvciBpbXByb3ZlbWVudCBpbiB0aGVpciBjb25zdGl0dXRpb24gYW5kIHdvcmtpbmcuIFRoZSAgIGNvbW1pc3Npb24gcHJlY2x1ZGVkIGZyb20gcmVwb3J0aW5nIG9uIHByaW1hcnkgb3Igc2Vjb25kYXJ5IGVkdWNhdGlvbi4gQmFzZWQgb24gaXRzICAgcmVjb21tZW5kYXRpb25zLCB0aGUgSW5kaWFuIFVuaXZlcnNpdGllcyBBY3Qgd2FzIHBhc3NlZCBpbiAxOTA0LiBJdHMgcmVjb21tZW5kYXRpb25zIHdlcmU6ICAgICgxKSB1bml2ZXJzaXRpZXMgd2VyZSB0byBnaXZlIG1vcmUgYXR0ZW50aW9uIHRvIHN0dWR5IGFuZCByZXNlYXJjaDsgICAoMikgdGhlIG51bWJlciBvZiBmZWxsb3dzIG9mIGEgdW5pdmVyc2l0eSBhbmQgdGhlaXIgcGVyaW9kIGluIG9mZmljZSB3ZXJlIHJlZHVjZWQgYW5kIG1vc3QgZmVsbG93cyAgIHdlcmUgdG8gYmUgbm9taW5hdGVkIGJ5IHRoZSBHb3Zlcm5tZW50OyAgICgzKSBjb25kaXRpb25zIHdlcmUgdG8gYmUgbWFkZSBzdHJpY3RlciBmb3IgYWZmaWxpYXRpb24gb2YgcHJpdmF0ZSBjb2xsZWdlcy4gICAgICBTb3VyY2U6ICAgIEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEgYnkgUmFqaXYgQWhpciAtIENoYXB0ZXIgMzAgRGV2ZWxvcG1lbnQgb2YgRWR1Y2F0aW9uIC0gUCA1NjctICA1NjkuICAgIGh0dHBzOi8vd3d3Lm5pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL2RsZWQvQmxvY2sxXzUwMS5wZGYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "2 and 3 only    "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to the Telangana  movement, consider the following statements:   1.  It was a peasant movement against illegal  land revenue exactions by the British.   2.  The demand was to increase the share of the  share-croppers from one-half to two-third  of the total production.   3.  The peasants formed associations and took  the violent route.    4.  It resulted into land ceiling fixation and  redistribution of land.  Which of the statements given above is/are  correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBUZWxhbmdhbmEgbW92ZW1lbnQgd2FzIHRoZSByZXN1bHQgb2YgdGhlIGxvY2FsIHN0cnVnZ2xlcyBvbiBpc3N1ZXMgc3VjaCBhcyB3YXJ0aW1lIGV4YWN0aW9ucywgYWJ1c2Ugb2YgICByYXRpb25pbmcsIGV4Y2Vzc2l2ZSByZW50IGFuZCB2ZXRoaSBjYXJyaWVkIG91dCBieSB0aGUgY29tbXVuaXN0LWxlZCBndWVycmlsbGFzIGR1cmluZyB0aGUgU2Vjb25kIFdvcmxkICAgV2FyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRlbGFuZ2FuYSBNb3ZlbWVudCB3YXMgdGhlIGJpZ2dlc3QgcGVhc2FudCBndWVycmlsbGEgd2FyIG9mIG1vZGVybiBJbmRpYW4gICBoaXN0b3J5IHRoYXQgdG9vayBwbGFjZSBpbiBwcmluY2VseSBzdGF0ZSBvZiBIeWRlcmFiYWQgdW5kZXIgQXNhamFoaSBOaXphbXMuIEl0IHdhcyBub3QgYWdhaW5zdCBpbGxlZ2FsICAgbGFuZCByZXZlbnVlIGV4YWN0aW9ucyBieSB0aGUgQnJpdGlzaCBidXQgd2FzIGFnYWluc3QgYWJ1c2Ugb2YgcmF0aW9uaW5nLCBleGNlc3NpdmUgcmVudCBhbmQgdmV0aGkgY2FycmllZCAgIG91dCBieSB0aGUgY29tbXVuaXN0LWxlZCBndWVycmlsbGFzIGR1cmluZyB0aGUgU2Vjb25kIFdvcmxkIFdhci4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBtYWpvciByZWFzb25zIGZvciBUZWxhbmdhbmEgbW92ZW1lbnQgaW5jbHVkZXMgYSBjb21iaW5hdGlvbiBvZiAgIHJlbGlnaW91cy1saW5ndWlzdGljIGRvbWluYXRpb24gKGJ5IGEgVXJkdS1zcGVha2luZyBNdXNsaW0gZWxpdGUgcnVsaW5nIG92ZXIgcHJlZG9taW5hbnRseSBIaW5kdS0gIFRlbHVndSwgTWFyYXRoaSwgS2FubmFkYS1zcGVha2luZyBncm91cHMpLCB0b3RhbCBsYWNrIG9mIHBvbGl0aWNhbCBhbmQgY2l2aWwgbGliZXJ0aWVzLCBmb3JjZWQgZXhwbG9pdGF0aW9uICAgYnkgbGFuZGxvcmRzIGluIGZvcm1zIG9mIGZvcmNlZCBsYWJvdXIgKHZldGhpKSBhbmQgaWxsZWdhbCBleGFjdGlvbnMuICAgIFRoZSBUZWJoYWdhIG1vdmVtZW50IGRlbWFuZGVkIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgRmxvb2QgQ29tbWlzc2lvbiByZWNvbW1lbmRhdGlvbnMgb2YgICB0ZWJoYWdhICh0d28tdGhpcmRzJyBzaGFyZSB0byB0aGUgc2hhcmUtY3JvcHBlcnMgaW5zdGVhZCBvZiB0aGUgb25lLWhhbGYgc2hhcmUpLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBEdXJpbmcgdGhlIFRlbGFuZ2FuYSBtb3ZlbWVudCwgdGhlIHBlYXNhbnRzIG9yZ2FuaXNlZCB0aGVtc2VsdmVzIGludG8gdmlsbGFnZSAgIHNhbmdoYW1zIGFuZCBhdHRhY2tlZCB1c2luZyBsYXRoaXMsIHN0b25lIHNsaW5ncyBhbmQgY2hpbGxpIHBvd2Rlci4gVGhlIG1vdmVtZW50IHdhcyBhdCBpdHMgZ3JlYXRlc3QgICBpbnRlbnNpdHkgYmV0d2VlbiBBdWd1c3QgMTk0NyBhbmQgU2VwdGVtYmVyIDE5NDguIFRoZSBwZWFzYW50cyBicm91Z2h0IGFib3V0IGEgcm91dCBvZiB0aGUgUmF6YXFhcnMtICB0aGUgTml6YW0ncyBzdG9ybXRyb29wZXJzLiBPbmNlIHRoZSBJbmRpYW4gc2VjdXJpdHkgZm9yY2VzIHRvb2sgb3ZlciBIeWRlcmFiYWQsIHRoZSBtb3ZlbWVudCBmaXp6bGVkICAgb3V0LiAgICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgVGVsYW5nYW5hIG1vdmVtZW50IGhhZCBtYW55IHBvc2l0aXZlIGFjaGlldmVtZW50cyB0byBpdHMgY3JlZGl0OiAgICAgIG9mIDIyICAuICAgICAgICAgIO+CtyBJbiB0aGUgdmlsbGFnZXMgY29udHJvbGxlZCBieSBndWVycmlsbGFzLCB2ZXRoaSBhbmQgZm9yY2VkIGxhYm91ciBkaXNhcHBlYXJlZC4gICDvgrcgQWdyaWN1bHR1cmFsIHdhZ2VzIHdlcmUgcmFpc2VkLiAgIO+CtyBJbGxlZ2FsbHkgc2VpemVkIGxhbmRzIHdlcmUgcmVzdG9yZWQuICAg74K3IFN0ZXBzIHdlcmUgdGFrZW4gdG8gZml4IGNlaWxpbmdzIGFuZCByZWRpc3RyaWJ1dGUgbGFuZHMuICAg74K3IE1lYXN1cmVzIHdlcmUgdGFrZW4gdG8gaW1wcm92ZSBpcnJpZ2F0aW9uIGFuZCBmaWdodCBjaG9sZXJhLiAgIO+CtyBBbiBpbXByb3ZlbWVudCBpbiB0aGUgY29uZGl0aW9uIG9mIHdvbWVuIHdhcyB3aXRuZXNzZWQuICAg74K3IFRoZSBhdXRvY3JhdGljLWZldWRhbCByZWdpbWUgb2YgSW5kaWEncyBiaWdnZXN0IHByaW5jZWx5IHN0YXRlIHdhcyBzaGFrZW4gdXAsIGNsZWFyaW5nIHRoZSB3YXkgZm9yIHRoZSAgIGZvcm1hdGlvbiBvZiBBbmRocmEgUHJhZGVzaCBvbiBsaW5ndWlzdGljIGxpbmVzIGFuZCByZWFsaXNpbmcgYW5vdGhlciBhaW0gb2YgdGhlIG5hdGlvbmFsIG1vdmVtZW50IGluICAgdGhpcyByZWdpb24uICAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4vcGRmL2ZvY3VzLWdyb3VwL3dvcmtlZHVjYXRpb24ucGRmICAgQSBCcmllZiBIaXN0b3J5IG9mIE1vZGVybiBJbmRpYSBieSBSYWppdiBBaGlyIC0gQ2hhcHRlciAzMSBQZWFzYW50IE1vdmVtZW50cyAxODU3LTE5NDcgLSBQIDU4Myw1ODQuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "3 and 4 only   ",
        "option3" : "2,3 and 4 only   ",
        "option4" : "1,2,3 and 4      .       "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements with  respect to the development of vernacular  education in India:  1.  Wood's Dispatch provided for the  supervision of vernacular education by a  government agency.  2.  The Hunter Commission recommended  mass education through vernaculars.  3.  The Hartog Committee provided for  compulsory primary education through  vernaculars.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIER1cmluZyB0aGUgZWFybHkgMTl0aCBjZW50dXJ5IHZlcm5hY3VsYXIgZWR1Y2F0aW9uIHdhcyBpbiBhIHNvcnJ5IHN0YXRlIG9mIGFmZmFpcnMuIEl0IHdhcyBtb3N0bHkgZGVwZW5kZW50ICAgb24gY29udHJpYnV0aW9ucyBmcm9tIHdlYWx0aHkgemFtaW5kYXJzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFdvb2QncyBEZXNwYXRjaCAoMTg1NCkgbWFkZSB0aGUgZm9sbG93aW5nIHByb3Zpc2lvbnMgZm9yIHZlcm5hY3VsYXIgZWR1Y2F0aW9uICAgdG8gZ2l2ZSBpbXBldHVzIHRvIHRoZSBjYXVzZSBvZiB2ZXJuYWN1bGFyIGVkdWNhdGlvbiAgIDEpIEltcHJvdmVtZW50IG9mIHN0YW5kYXJkcyAgIDIpIFN1cGVydmlzaW9uIGJ5IGdvdmVybm1lbnQgYWdlbmN5ICAgMykgTm9ybWFsIHNjaG9vbHMgdG8gdHJhaW4gdGVhY2hlcnMgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgSHVudGVyIENvbW1pc3Npb24gKDE4ODIpIGhlbGQgdGhhdCBTdGF0ZSBzaG91bGQgbWFrZSBzcGVjaWFsIGVmZm9ydHMgZm9yICAgZXh0ZW5zaW9uIGFuZCBpbXByb3ZlbWVudCBvZiB2ZXJuYWN1bGFyIGVkdWNhdGlvbi4gTWFzcyBlZHVjYXRpb24gd2FzIHRvIGJlIHNlZW4gYXMgaW5zdHJ1Y3RpbmcgICBtYXNzZXMgdGhyb3VnaCB2ZXJuYWN1bGFycy4gVGhlIGNvbW1pc3Npb24gZW1waGFzaXNlZCB0aGF0IHN0YXRlJ3Mgc3BlY2lhbCBjYXJlIGlzIHJlcXVpcmVkIGZvciAgIGV4dGVuc2lvbiBhbmQgaW1wcm92ZW1lbnQgb2YgcHJpbWFyeSBlZHVjYXRpb24sIGFuZCB0aGF0IHByaW1hcnkgZWR1Y2F0aW9uIHNob3VsZCBiZSBpbXBhcnRlZCAgIHRocm91Z2ggdmVybmFjdWxhci4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEhhcnRvZyBDb21taXR0ZWUgKDE5MjkpIHdhcyBzZXQgdXAgdG8gcmVwb3J0IG9uIGRldmVsb3BtZW50IG9mIGVkdWNhdGlvbi4gSXQgICByZWNvbW1lbmRlZCB0aGF0IGVtcGhhc2lzIHNob3VsZCBiZSBnaXZlbiB0byBwcmltYXJ5IGVkdWNhdGlvbiBidXQgdGhlcmUgbmVlZCBiZSBubyBoYXN0eSBleHBhbnNpb24gICBvciBjb21wdWxzaW9uIGluIGVkdWNhdGlvbi4gT25seSBkZXNlcnZpbmcgc3R1ZGVudHMgc2hvdWxkIGdvIGluIGZvciBoaWdoIHNjaG9vbCBhbmQgaW50ZXJtZWRpYXRlIHN0YWdlLCAgIHdoaWxlIGF2ZXJhZ2Ugc3R1ZGVudHMgc2hvdWxkIGJlIGRpdmVydGVkIHRvIHZvY2F0aW9uYWwgY291cnNlcyBhZnRlciBWSUlJIHN0YW5kYXJkLiBJdCBhbHNvIHJlY29tbWVuZGVkICAgdGhhdCBmb3IgaW1wcm92ZW1lbnRzIGluIHN0YW5kYXJkcyBvZiB1bml2ZXJzaXR5IGVkdWNhdGlvbiwgYWRtaXNzaW9ucyBzaG91bGQgYmUgcmVzdHJpY3RlZC4gICBTb3VyY2U6IGh0dHBzOi8vbmNlcnQubmljLmluL3BkZi9mb2N1cy1ncm91cC93b3JrZWR1Y2F0aW9uLnBkZiAgIE1vZGVybiBIaXN0b3J5LCBTcGVjdHJ1bSwgQ2hhcHRlci0zMCwgRGV2ZWxvcG1lbnQgb2YgRWR1Y2F0aW9uLCBQZy4gNTY5LTU3MSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 20,
      "question" : "Mahatma Gandhi said that some of his  deepest convictions were reflected in a book  titled, 'Unto this Last'' and the book  transformed his life. What was the message  from the book that transformed  Mahatma Gandhi?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICAgIE1vaGFuZGFzIEdhbmRoaSB0cmFuc2xhdGVkIFVudG8gVGhpcyBMYXN0IGludG8gR3VqYXJhdGkgaW4gMTkwOCB1bmRlciB0aGUgdGl0bGUgb2YgU2Fydm9kYXlhIChXZWxsIEJlaW5nICAgb2YgQWxsKSAuICAgICBIZSBzdW1tYXJpc2VkIFVudG8gVGhpcyBMYXN0J3MgdGVhY2hpbmdzIGluIHRoZXNlIHRocmVlIHBvaW50czogICAgIDEpIFRoYXQgdGhlIGdvb2Qgb2YgdGhlIGluZGl2aWR1YWwgaXMgY29udGFpbmVkIGluIHRoZSBnb29kIG9mIGFsbC4gICAgIDIpIFRoYXQgYSBsYXd5ZXIncyB3b3JrIGhhcyB0aGUgc2FtZSB2YWx1ZSBhcyB0aGUgYmFyYmVyJ3MsIGluYXNtdWNoIGFzIGFsbCBoYXZlIHRoZSBzYW1lIHJpZ2h0IG9mIGVhcm5pbmcgICB0aGVpciBsaXZlbGlob29kIGZyb20gdGhlaXIgd29yay4gICAgIDMpIFRoYXQgYSBsaWZlIG9mIGxhYm91ciwgaS5lLiwgdGhlIGxpZmUgb2YgdGhlIHRpbGxlciBvZiB0aGUgc29pbCBhbmQgdGhlIGhhbmRpY3JhZnRzbWFuLCBpcyB0aGUgbGlmZSB3b3J0aCBsaXZpbmcuICAgIFNvdXJjZTogVVBTQyBDU1AgcHJlbGltcyAyMDExICAgICAgIG9mIDIyICAuICAgICAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Uplifting the oppressed and poor is the   moral responsibility of an educated man     ",
        "option2" : " The good of individual is contained in the   good of all     ",
        "option3" : " The life of celibacy and spiritual pursuit are   essential for a noble life     ",
        "option4" : " All the statements (a), (b) and (c) are correct   in this context     "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the Nehru Report,  consider the following statements:  1.  It was prepared in response to Lord  Birkenhead challenge to produce a  constitution.  2.  It rejected the demand for joint electorates  for Muslims.  3.  It proposed a unitary political structure.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE5laHJ1IFJlcG9ydCAoMTkyOCkgd2FzIHRoZSBmaXJzdCBtYWpvciBhdHRlbXB0IGJ5IHRoZSBJbmRpYW5zIHRvIGRyYWZ0IGEgY29uc3RpdHV0aW9uYWwgZnJhbWV3b3JrIGZvciAgIHRoZSBjb3VudHJ5LiBUaGUgY29tbWl0dGVlIGluY2x1ZGVkIFRlaiBCYWhhZHVyIFNhcHJ1LCBTdWJoYXNoIEJvc2UsIE0uUy4gQW5leSwgTWFuZ2FsIFNpbmdoLCBBbGkgICBJbWFtLCBTaHVhYiBRdXJlc2hpIGFuZCBHLlIuIFByYWRoYW4gYXMgaXRzIG1lbWJlcnMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIENvbnNlcnZhdGl2ZSBTZWNyZXRhcnkgb2YgU3RhdGUgZm9yIEluZGlhLCBMb3JkIEJpcmtlbmhlYWQsIGhhZCBjb25zdGFudGx5ICAgdGFsa2VkIG9mIHRoZSBpbmFiaWxpdHkgb2YgSW5kaWFucyB0byBmb3JtdWxhdGUgYSBjb25jcmV0ZSBzY2hlbWUgb2YgY29uc3RpdHV0aW9uYWwgcmVmb3JtcyB3aGljaCBoYWQgICB0aGUgc3VwcG9ydCBvZiB3aWRlIHNlY3Rpb25zIG9mIEluZGlhbiBwb2xpdGljYWwgb3Bpbmlvbi4gQXMgYW4gYW5zd2VyIHRvIExvcmQgQmlya2VuaGVhZCdzIGNoYWxsZW5nZSwgYW4gICBBbGwgUGFydGllcyBDb25mZXJlbmNlIG1ldCBpbiBGZWJydWFyeSAxOTI4IGFuZCBhcHBvaW50ZWQgYSBzdWJjb21taXR0ZWUgdW5kZXIgdGhlIGNoYWlybWFuc2hpcCBvZiAgIE1vdGlsYWwgTmVocnUgdG8gZHJhZnQgYSBjb25zdGl0dXRpb24uIFRodXMsIE5laHJ1IHJlcG9ydCB3YXMgcHJlcGFyZWQgaW4gcmVzcG9uc2UgdG8gTG9yZCBCaXJrZW5oZWFkICAgY2hhbGxlbmdlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogTmVocnUgUmVwb3J0IHJlamVjdGVkIHNlcGFyYXRlIGVsZWN0b3JhdGVzIHdoaWNoIGhhZCBiZWVuIHRoZSBiYXNpcyBvZiAgIGNvbnN0aXR1dGlvbmFsIHJlZm9ybXMgc28gZmFyLiBJbnN0ZWFkLCBhIGRlbWFuZCBmb3Igam9pbnQgZWxlY3RvcmF0ZXMgd2FzIG1hZGUgd2l0aCByZXNlcnZhdGlvbiBvZiBzZWF0cyAgIGZvciBNdXNsaW1zIGF0IHRoZSBDZW50cmUgYW5kIGluIHByb3ZpbmNlcyB3aGVyZSB0aGV5IHdlcmUgaW4gbWlub3JpdHkgKGFuZCBub3QgaW4gdGhvc2Ugd2hlcmUgICBNdXNsaW1zIHdlcmUgaW4gbWFqb3JpdHksIHN1Y2ggYXMgUHVuamFiIGFuZCBCZW5nYWwpIGluIHByb3BvcnRpb24gdG8gdGhlIE11c2xpbSBwb3B1bGF0aW9uIHRoZXJlIHdpdGggICByaWdodCB0byBjb250ZXN0IGFkZGl0aW9uYWwgc2VhdHMuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIEhpbmR1IE1haGFzYWJoYSBkZW1hbmRlZCBhIHN0cmljdGx5IHVuaXRhcnkgc3RydWN0dXJlLiBUaGUgY29uY2Vzc2lvbnMgICBtYWRlIGluIHRoZSBOZWhydSBSZXBvcnQgdG8gSGluZHUgY29tbXVuYWxpc3RzIGluY2x1ZGVkIHRoZSBmb2xsb3dpbmc6ICAgMSkgSm9pbnQgZWxlY3RvcmF0ZXMgcHJvcG9zZWQgZXZlcnl3aGVyZSBidXQgcmVzZXJ2YXRpb24gZm9yIE11c2xpbXMgb25seSB3aGVyZSBpbiBtaW5vcml0eTsgICAyKSBTaW5kaCB0byBiZSBkZXRhY2hlZCBmcm9tIEJvbWJheSBvbmx5IGFmdGVyIGRvbWluaW9uIHN0YXR1cyB3YXMgZ3JhbnRlZCBhbmQgc3ViamVjdCB0byB3ZWlnaHRhZ2UgICBnaXZlbiB0byBIaW5kdSBtaW5vcml0eSBpbiBTaW5kaDsgICAzKSBQb2xpdGljYWwgc3RydWN0dXJlIHByb3Bvc2VkIGJyb2FkbHkgdW5pdGFyeSwgYXMgcmVzaWR1YWwgcG93ZXJzIHJlc3RlZCB3aXRoIHRoZSBjZW50cmUuICAgU291cmNlOiBIaXN0b3J5IGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyODQgICBNb2Rlcm4gSGlzdG9yeSwgU3BlY3RydW0sIENoYXB0ZXItMTgsIFNpbW9uIENvbW1pc3Npb24gYW5kIHRoZSBOZWhydSBSZXBvcnQsIFBnLiAzNTgsIDM2MS0zNjMgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the provisions of  Gandhi-Irwin Pact, consider the following  statements:  1.  All political prisoners were to be  immediately released.  2.  Mahatma Gandhi agreed to suspend the civil  disobedience movement.  3.  A public inquiry to be conducted on police  excess violence during the civil  disobedience movement.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEdhbmRoaS1JcndpbiBQYWN0IHdhcyBzaWduZWQgYmV0d2VlbiB0aGUgdmljZXJveSBMb3JkIElyd2luLCByZXByZXNlbnRpbmcgdGhlIEJyaXRpc2ggSW5kaWFuICAgR292ZXJubWVudCwgYW5kIEdhbmRoaSwgcmVwcmVzZW50aW5nIHRoZSBJbmRpYW4gcGVvcGxlLCBpbiBEZWxoaSBvbiBGZWJydWFyeSAxNCwgMTkzMS4gVGhlIHBhY3QsIGFsc28gICBrbm93biBhcyBEZWxoaSBQYWN0LCBwbGFjZWQgdGhlIENvbmdyZXNzIG9uIGFuIGVxdWFsIGZvb3Rpbmcgd2l0aCB0aGUgZ292ZXJubWVudC4gICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IElyd2luIG9uIGJlaGFsZiBvZiB0aGUgZ292ZXJubWVudCBhZ3JlZWQgb24gaW1tZWRpYXRlIHJlbGVhc2Ugb2YgYWxsIHBvbGl0aWNhbCAgIHByaXNvbmVycyBub3QgY29udmljdGVkIG9mIHZpb2xlbmNlIChub3QgYWxsIHBvbGl0aWNhbCBwcmlzb25lcnMpLiBIZSBhbHNvIGFncmVlZCBvbjogICAxKSByZW1pc3Npb24gb2YgYWxsIGZpbmVzIG5vdCB5ZXQgY29sbGVjdGVkOyAgIDIpIHJldHVybiBvZiBhbGwgbGFuZHMgbm90IHlldCBzb2xkIHRvIHRoaXJkIHBhcnRpZXM7ICAgMykgbGVuaWVudCB0cmVhdG1lbnQgdG8gdGhvc2UgZ292ZXJubWVudCBzZXJ2YW50cyB3aG8gaGFkIHJlc2lnbmVkOyAgIDQpIHJpZ2h0IHRvIG1ha2Ugc2FsdCBpbiBjb2FzdGFsIHZpbGxhZ2VzIGZvciBwZXJzb25hbCBjb25zdW1wdGlvbiAobm90IGZvciBzYWxlKTsgICA1KSByaWdodCB0byBwZWFjZWZ1bCBhbmQgbm9uLWFnZ3Jlc3NpdmUgcGlja2V0aW5nOyBhbmQgICA2KSB3aXRoZHJhd2FsIG9mIGVtZXJnZW5jeSBvcmRpbmFuY2VzLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEdhbmRoaSBvbiBiZWhhbGYgb2YgdGhlIENvbmdyZXNzIGFncmVlZCB0byBzdXNwZW5kIHRoZSBjaXZpbCBkaXNvYmVkaWVuY2UgICBtb3ZlbWVudCwgYW5kIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBuZXh0IFJvdW5kIFRhYmxlIENvbmZlcmVuY2UuIFRoZSBjb25mZXJlbmNlIHdhcyBvbiB0aGUgICBjb25zdGl0dXRpb25hbCBxdWVzdGlvbiBhcm91bmQgdGhlIHRocmVlIGx5bmNoLXBpbnMgb2YgZmVkZXJhdGlvbiwgSW5kaWFuIHJlc3BvbnNpYmlsaXR5LCBhbmQgICByZXNlcnZhdGlvbnMgYW5kIHNhZmVndWFyZHMgdGhhdCBtYXkgYmUgbmVjZXNzYXJ5IGluIEluZGlhJ3MgaW50ZXJlc3RzIChjb3ZlcmluZyBzdWNoIGFyZWFzIGFzIGRlZmVuY2UsICAgZXh0ZXJuYWwgYWZmYWlycywgcG9zaXRpb24gb2YgbWlub3JpdGllcywgZmluYW5jaWFsIGNyZWRpdCBvZiBJbmRpYSBhbmQgZGlzY2hhcmdlIG9mIG90aGVyIG9ibGlnYXRpb25zKS4gICAgIG9mIDIyICAuICAgICAgICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlIHZpY2Vyb3ksIExvcmQgSXJ3aW4sIHR1cm5lZCBkb3duIE1haGF0bWEgR2FuZGhpJ3MgZGVtYW5kIG9mIHB1YmxpYyAgIGlucXVpcnkgaW50byBwb2xpY2UgZXhjZXNzZXMuIEhlIGFsc28gcmVqZWN0ZWQgdGhlIGNvbW11dGF0aW9uIG9mIEJoYWdhdCBTaW5naCBhbmQgaGlzIGNvbXJhZGVzJyAgIGRlYXRoIHNlbnRlbmNlIHRvIGxpZmUgc2VudGVuY2UuICAgIFNvdXJjZTogSGlzdG9yeSBieSBCaXBpbiBDaGFuZHJhIHBhZ2UgMjg5ICAgTkNFUlQgVGhlbWVzIG9mIEluZGlhbiBIaXN0b3J5IElJSSBwYWdlIDM1Ny01OCAgIE1vZGVybiBIaXN0b3J5LCBTcGVjdHJ1bSwgQ2hhcHRlci0xOSwgQ2l2aWwgRGlzb2JlZGllbmNlIE1vdmVtZW50IGFuZCBSb3VuZCBUYWJsZSBDb25mZXJlbmNlcywgUGcuICAgMzc5LTM4MCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following were the  provisions of C. Rajagopalachari formula of  1944?   1.  Only the Muslim population in Muslim  majority areas of North-west India was to  decide whether to form a separate  sovereign state.  2.  Muslim League to cooperate with Congress  to form provisional government at Centre.  3.  A joint agreement on defense and  communication will be prepared by the two  nations in case of partition.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEMuIFJhamFnb3BhbGFjaGFyaSAoQ1IpIHByZXBhcmVkIGEgZm9ybXVsYSBmb3IgQ29uZ3Jlc3MtTGVhZ3VlIGNvb3BlcmF0aW9uIGluIDE5NDQuIEl0IHdhcyBhIHRhY2l0ICAgYWNjZXB0YW5jZSBvZiB0aGUgTGVhZ3VlJ3MgZGVtYW5kIGZvciBQYWtpc3Rhbi4gR2FuZGhpIHN1cHBvcnRlZCB0aGUgZm9ybXVsYS4gICBPcHRpb24gMSBpcyBpbmNvcnJlY3Q6IEFmdGVyIHRoZSBlbmQgb2YgdGhlIHdhciwgdGhlIGVudGlyZSBwb3B1bGF0aW9uIG9mIE11c2xpbSBtYWpvcml0eSBhcmVhcyBpbiB0aGUgICBOb3J0aC1XZXN0IGFuZCBOb3J0aC1FYXN0IEluZGlhIHRvIGRlY2lkZSBieSBhIHBsZWJpc2NpdGUsIHdoZXRoZXIgb3Igbm90IHRvIGZvcm0gYSBzZXBhcmF0ZSBzb3ZlcmVpZ24gICBzdGF0ZS4gVGhpcyBwcm92aXNpb24gZHJldyBtYWpvciBjcml0aWNpc20gZnJvbSBKaW5uYWgsIHdobyB3YW50ZWQgdGhlIENvbmdyZXNzIHRvIGFjY2VwdCB0aGUgdHdvLSAgbmF0aW9uIHRoZW9yeS4gSGUgd2FudGVkIG9ubHkgdGhlIE11c2xpbXMgb2YgTm9ydGgtV2VzdCBhbmQgTm9ydGgtRWFzdCB0byB2b3RlIGluIHRoZSBwbGViaXNjaXRlIGFuZCAgIG5vdCB0aGUgZW50aXJlIHBvcHVsYXRpb24uICAgT3B0aW9uIDIgaXMgY29ycmVjdDogTXVzbGltIExlYWd1ZSBzaG91bGQgZW5kb3JzZSBDb25ncmVzcyBkZW1hbmQgZm9yIGluZGVwZW5kZW5jZSBhbmQgY29vcGVyYXRlICAgd2l0aCBDb25ncmVzcyBpbiBmb3JtaW5nIGEgcHJvdmlzaW9uYWwgZ292ZXJubWVudCBhdCBjZW50cmUuICAgT3B0aW9uIDMgaXMgY29ycmVjdDogSW4gY2FzZSBvZiBhY2NlcHRhbmNlIG9mIHBhcnRpdGlvbiwgYWdyZWVtZW50IHRvIGJlIG1hZGUgam9pbnRseSBmb3Igc2FmZWd1YXJkaW5nICAgZGVmZW5jZSwgY29tbWVyY2UsIGNvbW11bmljYXRpb25zLCBldGMuICAgS25vd2xlZGdlIEJhc2U6ICAgIFRoZSB0ZXJtcyBvZiBSYWphZ29wYWxhY2hhcmkgZm9ybXVsYSB3aWxsIGJlIG9wZXJhdGl2ZSBvbmx5IGlmIEVuZ2xhbmQgdHJhbnNmZXJyZWQgZnVsbCBwb3dlcnMgdG8gSW5kaWEuICAgU291cmNlOiBodHRwczovL25jZXJ0Lm5pYy5pbi9uY2VydHMvbC9oZXNzMjA1LnBkZiAgIE1vZGVybiBIaXN0b3J5LCBTcGVjdHJ1bSwgQ2hhcHRlci0yMywgUXVpdCBJbmRpYSBNb3ZlbWVudCBhbmQgSU5BLCBQZy4gNDUzLTQ1NCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 24,
      "question" : "With reference to the nationalist's  response to Second World War, consider the  following statements:  1.  The Congress decided to support the British  government in the war if a responsible  government was established in India.  2.  Mahatma Gandhi advocated unconditional  support to the British government.  3.  Jawaharlal Nehru proposed the launch of  civil disobedience movement to take  advantage of British government.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9uIFNlcHRlbWJlciAxLCAxOTM5LCBHZXJtYW55IGF0dGFja2VkIFBvbGFuZCAtIHRoZSBhY3Rpb24gdGhhdCBsZWQgdG8gdGhlIFNlY29uZCBXb3JsZCBXYXIuIE9uICAgU2VwdGVtYmVyIDMsIDE5MzksIEJyaXRhaW4gZGVjbGFyZWQgd2FyIGFnYWluc3QgR2VybWFueSBhbmQgdGhlIEJyaXRpc2ggR292ZXJubWVudCBvZiBJbmRpYSBkZWNsYXJlZCAgIEluZGlhJ3Mgc3VwcG9ydCBmb3IgdGhlIHdhciB3aXRob3V0IGNvbnN1bHRpbmcgSW5kaWFuIG9waW5pb24uICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhvdWdoIHRoZSBDb25ncmVzcyBkaWQgbm90IGxpa2UgdGhlIHVuaWxhdGVyYWwgYWN0aW9uIG9mIHRoZSBCcml0aXNoIG9mIGRyYXdpbmcgICBJbmRpYSBpbnRvIHRoZSB3YXIgd2l0aG91dCBjb25zdWx0aW5nIHRoZSBJbmRpYW5zLCBpdCBkZWNpZGVkIHRvIHN1cHBvcnQgdGhlIHdhciBlZmZvcnQgY29uZGl0aW9uYWxseS4gVGhlICAgSW5kaWFuIG9mZmVyIHRvIGNvb3BlcmF0ZSBpbiB0aGUgd2FyIGVmZm9ydCBoYWQgdHdvIGJhc2ljIGNvbmRpdGlvbnM6ICAgMSkgQWZ0ZXIgdGhlIHdhciwgYSBjb25zdGl0dWVudCBhc3NlbWJseSBzaG91bGQgYmUgY29udmVuZWQgdG8gZGV0ZXJtaW5lIHBvbGl0aWNhbCBzdHJ1Y3R1cmUgb2YgYSBmcmVlICAgSW5kaWEuICAgMikgSW1tZWRpYXRlbHksIHNvbWUgZm9ybSBvZiBhIGdlbnVpbmVseSByZXNwb25zaWJsZSBnb3Zlcm5tZW50IHNob3VsZCBiZSBlc3RhYmxpc2hlZCBhdCB0aGUgQ2VudHJlLiAgICBUaGUgb2ZmZXIgd2FzIHJlamVjdGVkIGJ5IExpbmxpdGhnb3csIHRoZSB2aWNlcm95LiBUaGUgQ29uZ3Jlc3MgYXJndWVkIHRoYXQgdGhlc2UgY29uZGl0aW9ucyB3ZXJlICAgbmVjZXNzYXJ5IHRvIHdpbiBwdWJsaWMgb3BpbmlvbiBmb3Igd2FyLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IE1haGF0bWEgR2FuZGhpIGhhZCBhbGwgc3ltcGF0aHkgZm9yIEJyaXRhaW4gaW4gdGhpcyB3YXIgYmVjYXVzZSBvZiBoaXMgdG90YWwgICBkaXNsaWtlIG9mIHRoZSBmYXNjaXN0IGlkZW9sb2d5LiBIZSBhZHZvY2F0ZWQgYW4gdW5jb25kaXRpb25hbCBzdXBwb3J0IHRvIHRoZSBBbGxpZWQgcG93ZXJzLiBIZSBtYWRlIGEgICBjbGVhciBkaXN0aW5jdGlvbiBiZXR3ZWVuIHRoZSBkZW1vY3JhdGljIG5hdGlvbnMgb2YgV2VzdGVybiBFdXJvcGUgYW5kIHRoZSB0b3RhbGl0YXJpYW4gTmF6aXMgYW5kICAgZmFzY2lzdHMuIEhlIHNhaWQgdGhhdCBoZSB3YXMgbm90IHdpbGxpbmcgdG8gZW1iYXJyYXNzIHRoZSBCcml0aXNoIGdvdmVybm1lbnQgZHVyaW5nIHRoZSB3YXIuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBTdWJoYXMgQm9zZSBhbmQgb3RoZXIgc29jaWFsaXN0cywgc3VjaCBhcyBBY2hhcnlhIE5hcmVuZHJhIERldiBhbmQgICBKYXlhcHJha2FzaCBOYXJheWFuLCBoYWQgbm8gc3ltcGF0aHkgZm9yIGVpdGhlciBzaWRlIGluIHRoZSB3YXIuIEluIHRoZWlyIG9waW5pb24sIHRoZSB3YXIgd2FzIGJlaW5nICAgICBvZiAyMiAgLiAgICAgICAgICBmb3VnaHQgYnkgaW1wZXJpYWxpc3RzIG9uIGJvdGggc2lkZXM7IGVhY2ggc2lkZSB3YW50ZWQgdG8gcHJvdGVjdCBpdHMgY29sb25pYWwgcG9zc2Vzc2lvbnMgYW5kIGdhaW4gbW9yZSAgIHRlcnJpdG9yaWVzIHRvIGNvbG9uaXNlLCBzbyBuZWl0aGVyIHNpZGUgc2hvdWxkIGJlIHN1cHBvcnRlZCBieSB0aGUgbmF0aW9uYWxpc3RzLiBJbiBmYWN0LCB0aGV5IHRob3VnaHQgaXQgd2FzICAgdGhlIGlkZWFsIHRpbWUgdG8gbGF1bmNoIGEgY2l2aWwgZGlzb2JlZGllbmNlIG1vdmVtZW50LCB0byB0aHVzIHRha2UgYWR2YW50YWdlIG9mIHRoZSBzaXR1YXRpb24gYW5kICAgc25hdGNoIGZyZWVkb20gZnJvbSBCcml0YWluLiBKYXdhaGFybGFsIE5laHJ1IHdhcyBub3QgcmVhZHkgdG8gYWNjZXB0IHRoZSBvcGluaW9uIG9mIGVpdGhlciBHYW5kaGkgb3IgICBvZiB0aGUgc29jaWFsaXN0cy4gSGUgd2FzIGNsZWFyIGluIGhpcyBtaW5kIGFib3V0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gZGVtb2NyYXRpYyB2YWx1ZXMgYW5kIGZhc2Npc20uICAgSGUsIHRoZXJlZm9yZSwgYWR2b2NhdGVkIG5vIEluZGlhbiBwYXJ0aWNpcGF0aW9uIHRpbGwgSW5kaWEgaXRzZWxmIHdhcyBmcmVlLiBIb3dldmVyLCBhdCB0aGUgc2FtZSB0aW1lLCBubyAgIGFkdmFudGFnZSB3YXMgdG8gYmUgdGFrZW4gb2YgQnJpdGFpbidzIGRpZmZpY3VsdHkgYnkgc3RhcnRpbmcgYW4gaW1tZWRpYXRlIGNpdmlsIGRpc29iZWRpZW5jZSBtb3ZlbWVudC4gICBTb3VyY2U6IEhpc3RvcnkgYnkgQmlwaW4gQ2hhbmRyYSBwYWdlIDI5Ni0zMDUgICBNb2Rlcm4gSGlzdG9yeSwgU3BlY3RydW0sIENoYXB0ZXItMjIsIE5hdGlvbmFsaXN0IFJlc3BvbnNlIGluIHRoZSBXYWtlIG9mIFdvcmxkIFdhciBJSSwgUGcuIDQzNC00MzYgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3      .       "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following statements   1.  The first woman President of the Indian  National Congress was Sarojini Naidu.     2.  The first Muslim President of the Indian  National Congress was Badruddin Tyabji.     Which of the statements given above is / are  correct?     ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBbm5pZSBCZXNhbnQgd2hvIHdhcyBpbnN0cnVtZW50YWwgaW4gY3JlYXRpb24gb2YgSG9tZSBSdWxlIExlYWd1ZSBwcmVzaWRlZCAgIG92ZXIgdGhlIDE5MTcgc2Vzc2lvbiBpbiBDYWxjdXR0YSBhbmQgYmVjYW1lIHRoZSBmaXJzdCB3b21hbiBwcmVzaWRlbnQgb2YgSU5DLiAgICAgIFNhcm9qaW5pIE5haWR1IGpvaW5lZCB0aGUgSW5kaWFuIE5hdGlvbmFsIE1vdmVtZW50IGluIHRoZSB3YWtlIG9mIHRoZSAxOTA1IHBhcnRpdGlvbiBvZiBCZW5nYWwuIFNoZSB3YXMgICBlbGVjdGVkIGFzIHRoZSBQcmVzaWRlbnQgb2YgdGhlIEluZGlhbiBOYXRpb25hbCBDb25ncmVzcyBQYXJ0eSBpbiAxOTI1LCBLYW5wdXIgU2Vzc2lvbi4gVGh1cywgU2Fyb2ppbmkgICBOYWlkdSB3YXMgdGhlIGZpcnN0IEluZGlhbiB3b21lbiBQcmVzaWRlbnQgb2YgSU5DLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQmFkcnVkZGluIFR5YWJqaSBjYW1lIGJhY2sgdG8gSW5kaWEgZnJvbSBFbmdsYW5kIGluIERlY2VtYmVyIDE4NjcgYW5kIGJlY2FtZSAgIHRoZSBmaXJzdCBJbmRpYW4gYmFycmlzdGVyIGluIHRoZSBIaWdoIENvdXJ0IG9mIEJvbWJheS4gICAgIEJhZHJ1ZGRpbiBUeWFiamkgYmVjYW1lIHRoZSBmaXJzdCBNdXNsaW0gcHJlc2lkZW50IG9mIHRoZSBJbmRpYW4gTmF0aW9uYWwgQ29uZ3Jlc3MuIE92ZXJhbGwsIGhlIHdhcyAgIHRoZSB0aGlyZCBQcmVzaWRlbnQgb2YgdGhlIENvbmdyZXNzIGFmdGVyIFdDIEJhbm5lcmplZSBhbmQgRGFkYWJoYWkgTmFvcm9qaSAoMTg4NikgLiAgICAgU291cmNlOiBVUFNDIENTUCBwcmVsaW1zIDIwMTUgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2     ",
        "option4" : "Neither 1 nor 2     "
      }
    },
    {
      "index" : 26,
      "question" : "According to Mahatma Gandhi, what is  the role of 'charkha' in India's freedom struggle?  1.  It will control the uncontrolled growth of  modern machinery and mechanization.  2.  It would liberate people from exploitation of  colonialism and capitalism.  3.  The act of spinning focused on decreasing  the role of manual labour.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEdhbmRoaSBqaSwgaW4gaGlzIGpvdXJuYWwgWW91bmcgSW5kaWEsIG1lbnRpb25lZCB0aGF0IHRoZSBDaGFya2hhIGRvZXMgbm90IHNlZWsgdG8gICBkZXN0cm95IGFsbCBtYWNoaW5lcnkgYnV0IGl0IGRvZXMgcmVndWxhdGUgaXRzIHVzZSBhbmQgY2hlY2sgaXRzIHVuY29udHJvbGxlZCBncm93dGguIEhlIHRvbGQgdGhhdCBpdCAgIHVzZXMgbWFjaGluZXJ5IGZvciB0aGUgc2VydmljZSBvZiB0aGUgcG9vcmVzdCBpbiB0aGVpciBvd24gY290dGFnZXMuIEluIGZhY3Qgd2hlZWwgaXMgaXRzZWxmIGEgbWFjaGluZXJ5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBjaGFya2EsIGNvdWxkIHByb3ZpZGUgdGhlIHBvb3Igd2l0aCBzdXBwbGVtZW50YXJ5IGluY29tZSBhbmQgbWFrZSB0aGVtICAgc2VsZi1yZWxpYW50IGFuZCB0aHVzIGxpYmVyYXRlIHBlb3BsZSBmcm9tIGV4cGxvaXRhdGl2ZSBjb2xvbmlhbGlzbSBhbmQgY2FwaXRhbGlzbS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIENoYXJraGEgZm9jdXNlcyBvbiBpbmNyZWFzaW5nIHRoZSByb2xlIG9mIG1hbnVhbCBsYWJvdXIgZm9yIGEgc2VsZi1yZWxpYW50ICAgc29jaWV0eSwgYnV0IGFjY29yZGluZyB0byBHYW5kaGkgamksIHRoZSBzcGlubmluZyBvZiB3aGVlbCB3YXMgYSBwcm90ZWN0aW9uIGFnYWluc3QgcGFzc2lvbiBhbmQgYW5nZXIuIEl0ICAgd2FzIGEgc2hpZWxkIGFnYWluc3QgdG94aWMgZW1vdGlvbnMuIFRoZSBzcGlubmluZyB3aGVlbCB3YXMgYW4gJ2VtYmxlbSBvZiBodW1hbiBkaWduaXR5IGFuZCBlcXVhbGl0eScsICAgdGhlICdoYW5kbWFpZCBvZiBhZ3JpY3VsdHVyZScuIFRodXMsIGl0IHdhcyBub3Qgb25seSBsaW1pdGVkIHRvIG1hbnVhbCBsYWJvdXIgYnV0IGFsc28gdG8gbWVudGFsIGxhYm91ci4gICBTb3VyY2U6IE5DRVJUIENsYXNzLVhJSSBUaGVtZXMgaW4gSW5kaWFuIGhpc3RvcnkgcGFydC1JSUkgY2hhcHRlci0xMyBNYWhhdG1hIEdhbmRoaSBhbmQgTmF0aW9uYWwgICBtb3ZlbWVudCBwYWdlIC0zNTIgICAgaHR0cHM6Ly93d3cubWtnYW5kaGkub3JnL2FydGljbGVzL2Vjb25vbWljcy1vZi1raGFkaS5odG1sICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following was included in the  programme of Non-cooperation movement by  the Congress?  1.  Boycott of government schools and colleges  2.  Government servants were asked not to  resign  3.  Boycott of law courts by lawyers  4.  Renunciation of government honours and  titles  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBOb24tY29vcGVyYXRpb24gcHJvZ3JhbSB3YXMgYXBwcm92ZWQgYXQgYSBzcGVjaWFsIHNlc3Npb24gb2YgQ29uZ3Jlc3MgaW4gQ2FsY3V0dGEgaW4gU2VwdGVtYmVyIDE5MjAuICAgTm9uLWNvb3BlcmF0aW9uIGhhZCBpbmNsdWRlZCB0aGUgZm9sbG93aW5nIHByb2dyYW1tZXM6ICAgMSkgU3R1ZGVudHMgd2VyZSBhc2tlZCB0byBib3ljb3R0IGdvdmVybm1lbnQgc2Nob29scyBhbmQgY29sbGVnZXMuICAgMikgTGF3eWVycyB3ZXJlIGFza2VkIHRvIGJveWNvdHQgbGF3IGNvdXJ0cy4gQW5kIEp1c3RpY2Ugc2hvdWxkIGJlIGRpc3BlbnNlZCB0aHJvdWdoIFBhbmNoYXlhdHMgICAgIG9mIDIyICAuICAgICAgICAgIDMpIFJlbnVuY2lhdGlvbiBvZiBnb3Zlcm5tZW50IGhvbm91cnMgYW5kIHRpdGxlcy4gICA0KSBib3ljb3R0IG9mIGxlZ2lzbGF0aXZlIGNvdW5jaWxzICAgNSkgYm95Y290dCBvZiBmb3JlaWduIGNsb3RoIGFuZCB1c2Ugb2Yga2hhZGkgaW5zdGVhZDsgICA2KSBBIGNhbGwgd2FzIGdpdmVuIGZvciByZXNpZ25hdGlvbiBmcm9tIHRoZSBnb3Zlcm5tZW50IHNlcnZpY2UgICBTb3VyY2U6IE5DRVJUIENsYXNzLVhJSSBUaGVtZXMgaW4gSW5kaWFuIGhpc3RvcnkgcGFydC1JSUkgY2hhcHRlci0xMyBNYWhhdG1hIEdhbmRoaSBhbmQgTmF0aW9uYWwgICBtb3ZlbWVudCBwYWdlIC0gMzUwLCAzNTEgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 3 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 28,
      "question" : "Which of the following statements is/are  correct about Gandhi's first major public  appearance in Banaras in 1916?  1.  Gandhiji said neither the lawyers, nor the  doctors, are going to secure growth or  salvation for us.  2.  Peasants and workers were not represented  in the audience.  3.  Gandhi accused the urban elite of apathy  towards the laboring poor.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIER1cmluZyBHYW5kaGkncyBmaXJzdCBtYWpvciBwdWJsaWMgYXBwZWFyYW5jZSBpbiBCYW5hcmFzIGluIDE5MTYsIGhlIHNhaWQgbmVpdGhlciAgIHRoZSBsYXd5ZXJzLCBub3IgdGhlIGRvY3RvcnMsIG5vciB0aGUgcmljaCBsYW5kbG9yZHMgYXJlIGdvaW5nIHRvIHNlY3VyZSBncm93dGggb3Igc2FsdmF0aW9uIGZvciB1cy4gSGUgICB0b2xkIG91ciBzYWx2YXRpb24gY2FuIG9ubHkgY29tZSB0aHJvdWdoIHRoZSBmYXJtZXJzLiBHYW5kaGlqaSBhbHNvIHRvbGQgdGhlIHByaXZpbGVnZWQgYW5kIHJpY2ggbm9ibGVzICAgcHJlc2VudCBhdCB0aGF0IG1lZXRpbmcgdGhhdCAndGhlcmUgaXMgbm8gc2FsdmF0aW9uIGZvciBJbmRpYSB1bmxlc3MgeW91IHN0cmlwIHlvdXJzZWxmIG9mIHRoaXMgamV3ZWxsZXJ5ICAgYW5kIGhvbGQgaXQgaW4gdHJ1c3QgZm9yIHlvdXIgY291bnRyeW1lbiBpbiBJbmRpYSAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFBlYXNhbnRzIGFuZCB3b3JrZXJzIHdlcmUgbm90IHJlcHJlc2VudGVkIGluIHRoZSBhdWRpZW5jZS4gR2FuZGhpIGppICAgYWRkcmVzc2VkIHRvIHRoZSBmYXJtZXJzIGluIGhpcyBmaXJzdCBzcGVlY2ggYnV0IG5vdCBiZWNhdXNlIHRoYXQgdGhleSBjYW1lIGluIGxhcmdlIG51bWJlciB0byBsaXN0ZW4gaGltLiAgIEluIGZhY3QsIGhlIHJlbWluZHMgdGhvc2UgcHJlc2VudCAoaS5lIGxlYWRlcnMgYW5kIHJpY2ggZWxpdGVzKSBvZiB0aGUgcGVhc2FudHMgYW5kIHdvcmtlcnMgd2hvIGNvbnN0aXR1dGVkICAgYSBtYWpvcml0eSBvZiB0aGUgSW5kaWFuIHBvcHVsYXRpb24sIGJ1dCB0aGV5IHdlcmUgbm90IHJlcHJlc2VudGVkIGluIHRoZSBhdWRpZW5jZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBHYW5kaGkgamkgYWNjdXNlZCB0aGUgdXJiYW4gZWxpdGUgb2YgYXBhdGh5IHRvd2FyZHMgdGhlIGxhYm9yaW5nIHBvb3IuIEhlIHNhaWQgICB0aGF0IHRoZXkgaGF2ZSBsYWNrIG9mIGNvbmNlcm4gZm9yIHRoZSBsYWJvcmluZyBwb29yLiAgIFNvdXJjZTogTkNFUlQgQ2xhc3MtWElJIFRoZW1lcyBpbiBJbmRpYW4gaGlzdG9yeSBwYXJ0LUlJSSBjaGFwdGVyLTEzIE1haGF0bWEgR2FuZGhpIGFuZCBOYXRpb25hbCAgIG1vdmVtZW50IHBhZ2UtMzQ3LCAzNDggICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 29,
      "question" : "Which of the following economic  demands were made by the early Indian  National Congress nationalists?  1. Complete abolition of land revenue   2. More funds for irrigation  3. Abolition of salt tax  4. Tariff protection to modern industry  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gVGhlIG5hdGlvbmFsaXN0cyBkaWQgbm90IGFzayBmb3IgdGhlIGFib2xpdGlvbiBvZiBsYW5kIHJldmVudWUgaW4gZHJvdWdodCAgIGFmZmVjdGVkIGFyZWFzIGJ1dCBpbnN0ZWFkIGFza2VkIGZvciByZWR1Y3Rpb24gaW4gbGFuZCByZXZlbnVlLiAgICBTdGF0ZW1lbnQgMiwgMyBhbmQgNCBhcmUgY29ycmVjdC4gVGhlIGVhcmx5IENvbmdyZXNzIHJhaXNlZCBhIG51bWJlciBvZiBlY29ub21pYyBpc3N1ZXMuIEl0IGRlY2xhcmVkICAgdGhhdCBCcml0aXNoIHJ1bGUgaGFkIGxlZCB0byBwb3ZlcnR5IGFuZCBmYW1pbmVzLiBJbmNyZWFzZSBpbiB0aGUgbGFuZCByZXZlbnVlIGhhZCBpbXBvdmVyaXNoZWQgICBwZWFzYW50cyBhbmQgemFtaW5kYXJzLCBhbmQgZXhwb3J0cyBvZiBncmFpbnMgdG8gRXVyb3BlIGhhZCBjcmVhdGVkIGZvb2Qgc2hvcnRhZ2VzLiBUaGV5IGFsc28gICBkZW1hbmRlZCByZWR1Y3Rpb24gaW4gbGFuZCByZXZlbnVlLCBhYm9saXRpb24gb2Ygc2FsdCB0YXgsIGltcHJvdmVtZW50IGluIHdvcmtpbmcgY29uZGl0aW9ucyBvZiAgIHBsYW50YXRpb24gbGFib3VyLCByZWR1Y3Rpb24gaW4gbWlsaXRhcnkgZXhwZW5kaXR1cmUsIG1vcmUgZnVuZHMgZm9yIGlycmlnYXRpb24gYW5kIGVuY291cmFnZW1lbnQgdG8gICBtb2Rlcm4gaW5kdXN0cnkgdGhyb3VnaCB0YXJpZmYgcHJvdGVjdGlvbiBhbmQgZGlyZWN0IGdvdmVybm1lbnQgYWlkLiBJdCBhbHNvIHBhc3NlZCByZXNvbHV0aW9uIG9uIHRoZSAgIHN1ZmZlcmluZ3Mgb2YgZm9yZXN0IGR3ZWxsZXJzIC0gY2F1c2VkIGJ5IGFuIGludGVyZmVyaW5nIGZvcmVzdCBhZG1pbmlzdHJhdGlvbi4gICAgU291cmNlOiBPdXIgUGFzdC1JSUksIE5DRVJULVZJSUksIENoYXB0ZXItOSwgUGcuIDExMiAgIE1vZGVybiBIaXN0b3J5LCBTcGVjdHJ1bSwgQ2hhcHRlci0xMSwgUGcuIDI1MSwgMjUzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 30,
      "question" : "With reference to Madanapalle of Andhra  Pradesh, which one of the following statements  is correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgY29ycmVjdC4gICBUaGUgTmF0aW9uYWwgYW50aGVtIHdhcyBmaXJzdCBzdW5nIG91dHNpZGUgdGhlIENhbGN1dHRhIGJ5IHRoZSBSYWJuZHJhbmF0aCBUYWdvcmUgaGltc2VsZiBkdXJpbmcgYSAgIHNlc3Npb24gYXQgdGhlIEJlc2FudCBUaGVvc29waGljYWwgQ29sbGVnZSBpbiBNYWRhbmFwYWxsZSwgQW5kaHJhIFByYWRlc2gsIG9uIDI4dGggRmViIDE5MTksIHdoZW4gICBUYWdvcmUgd2VudCB0byBjb2xsZWdlIGFuZCBzYW5nIHRoZSBzb25nLiBUaGVuIGRlcHV0eSBkaXJlY3RvciBvZiB0aGUgdW5pdmVyc2l0eSAoYWxzbyBhbiBleHBlcnQgaW4gICBFdXJvcGVhbiBtdXNpYyBhbmQgd2lmZSBvZiB0aGUgSXJpc2ggcG9ldCBKYW1lcyBDb3VzaW5zKSwgYXNrZWQgVGFnb3JlIHRvIGNyZWF0ZSBhbiBFbmdsaXNoIHRyYW5zbGF0aW9uICAgICBvZiAyMiAgLiAgICAgICAgICBvZiB0aGUgc29uZyBhbmQgZXN0YWJsaXNoIHRoZSBtdXNpY2FsIG5vdGF0aW9uLiBUYWdvcmUgdGhlbiB0cmFuc2xhdGVkIHRoZSBCZW5nYWxpIHNvbmcgdG8gRW5nbGlzaCBhbmQgdGhlICAgdHVuZSB3YXMgY29tcG9zZWQgYnkgTWFyZ2FyZXQgd2l0aCB0aGUgZ2lybHMgaW4gdGhlIGNvbGxlZ2Ugc2luZ2luZyB0aGUgY2hvcnVzLiAgICAgICBTb3VyY2UpICAgIGh0dHBzOi8vd3d3LmphYm9yZWpvYi5jb20vbmF0aW9uYWwtYW50aGVtLW9mLWluZGlhLWphbmEtZ2FuYS1tYW5hLXdyaXR0ZW4tYnktcG9ldC1yYWJpbmRyYW5hdGgtICB0YWdvcmUvICAgIGh0dHBzOi8vd3d3LmRlY2NhbmNocm9uaWNsZS5jb20vbmF0aW9uL2N1cnJlbnQtYWZmYWlycy8xNTA4MTcvYW5kaHJhLXByYWRlc2gtbmF0aW9uYWwtYW50aGVtLSAgdHVuZS13YXMtY29tcG9zZWQtaW4tbWFkYW5hcGFsbGUuaHRtbCAgICBTb3VyY2U6IFVQU0MgQ1NQIHByZWxpbXMgMjAyMSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Pingali Venkayya designed the tricolour   Indian National Flag here.   ",
        "option2" : " Pattabhi Sitaramaiah led the Quit India   Movement of Andhra region from here.   ",
        "option3" : " Rabindranath Tagore translated the   National Anthem from Bengali to English   here.   ",
        "option4" : " Madame Blavatsky and Colonel Olcott set up   headquarters of Theosophical Society first   here.   "
      }
    },
    {
      "index" : 31,
      "question" : "In the context of 18th and 19th century  India, consider the following statements:  1.  Bargadars were rich traders who used to  lend long-term money to farmers.  2.  A Sahukar were sharecroppers who used to  cultivate jotedars land.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogIEJhcmdhZGFycyB3ZXJlIHNoYXJlY3JvcHBlcnMuIEEgbGFyZ2UgcGFydCBvZiBqb3RlZGFycyBsYW5kIHdhcyBjdWx0aXZhdGVkICAgdGhyb3VnaCBzaGFyZWNyb3BwZXJzIGNhbGxlZCBhZGhpeWFycyBvciBiYXJnYWRhcnMuIFRoZXkgYnJvdWdodCB0aGVpciBvd24gcGxvdWdocywgbGFib3VyZWQgaW4gdGhlICAgZmllbGQsIGFuZCBoYW5kZWQgb3ZlciBoYWxmIHRoZSBwcm9kdWNlIHRvIHRoZSBqb3RlZGFycyBhZnRlciB0aGUgaGFydmVzdC4gICBSeW90cyBjdWx0aXZhdGVkIHNvbWUgbGFuZCBhbmQgZ2F2ZSBvdXQgdGhlIHJlc3QgdG8gdW5kZXItcnlvdHMgcmVudC4gVW5kZXItIHJ5b3RzIHBhaWQgcmVudCB0byB0aGUgICByeW90cy4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEEgU2FodWthciB3YXMgc29tZW9uZSB3aG8gYWN0ZWQgYXMgYm90aCBhIG1vbmV5bGVuZGVyIGFuZCBhICAgdHJhZGVyLiBUaGV5IGV4dGVuZGVkIGxvbmcgdGVybSBsb2FucyB0byBmYXJtZXJzLiBUaGV5IHdlcmUgbWFpbmx5IGZvdW5kIGluIE1haGFyYXNodHJhLiBEdXJpbmcgICB0aGUgRGVjY2FuIHJpb3RzLCBtYW55IFNhaHVrYXJzIHdlcmUgYXR0YWNrZWQgYnkgdGhlIHBlb3BsZS4gICBTb3VyY2U6IE5DRVJUIENsYXNzLVhJSSBUaGVtZXMgaW4gSW5kaWFuIGhpc3RvcnkgcGFydC1JSUkgY2hhcHRlci0xMSBwYWdlLTI5NiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      .       "
      }
    },
    {
      "index" : 32,
      "question" : "Regarding the Rowlatt Satyagraha,  consider the following statements:  1.  All the elected Indian members voted  against the Rowlatt bill in the Imperial  Legislative Council.  2.  Satyagraha Sabha with members from Home  Rule Leagues was set up to launch the  movement.  3.  The movement remained confined to cities  and upper middle class.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIEFsbCB0aGUgZWxlY3RlZCBJbmRpYW4gbWVtYmVycyB2b3RlZCBhZ2FpbnN0IHRoZSBSb3dsYXR0IGJpbGwgaW4gSW1wZXJpYWwgICBMZWdpc2xhdGl2ZSBDb3VuY2lsIGluIE1hcmNoIDE5MTkuIFRoZSBlbGVjdGVkIG1lbWJlcnMgbGlrZSBNb2hhbW1hZCBBbGkgSmlubmFoLCBNYWRhbiBNb2hhbiAgIE1hbHZpeWEgYW5kIE1hemhhciBVbCBIYXEgcmVzaWduZWQgaW4gcHJvdGVzdC4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBHYW5kaGkgY2FsbGVkIGZvciBhIG1hc3MgcHJvdGVzdCBhdCBhbGwgSW5kaWEgbGV2ZWwuIEJ1dCBzb29uLCBoYXZpbmcgc2VlbiB0aGUgICBjb25zdGl0dXRpb25hbCBwcm90ZXN0IG1lZXQgd2l0aCBydXRobGVzcyByZXByZXNzaW9uLCBHYW5kaGkgb3JnYW5pc2VkIGEgU2F0eWFncmFoYSBTYWJoYSBhbmQgcm9wZWQgaW4gICB5b3VuZ2VyIG1lbWJlcnMgb2YgSG9tZSBSdWxlIExlYWd1ZXMgYW5kIHRoZSBQYW4gSXNsYW1pc3RzLiBUaGUgZm9ybXMgb2YgcHJvdGVzdCBmaW5hbGx5IGNob3NlbiAgIGluY2x1ZGVkIG9ic2VydmFuY2Ugb2YgYSBuYXRpb253aWRlIGhhcnRhbCAoc3RyaWtlKSBhY2NvbXBhbmllZCBieSBmYXN0aW5nIGFuZCBwcmF5ZXIsIGFuZCBjaXZpbCAgIGRpc29iZWRpZW5jZSBhZ2FpbnN0IHNwZWNpZmljIGxhd3MsIGFuZCBjb3VydGluZyBhcnJlc3QgYW5kIGltcHJpc29ubWVudC4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZXJlIHdhcyBhIHJhZGljYWwgY2hhbmdlIGluIHRoZSBzaXR1YXRpb24gYnkgdGhlIHRpbWUgdGhpcyBzYXR5YWdyYWhhIHdhcyAgIGxhdW5jaGVkLiBUaGUgbWFzc2VzIGhhZCBmb3VuZCBhIGRpcmVjdGlvbjsgbm93IHRoZXkgY291bGQgJ2FjdCcgaW5zdGVhZCBvZiBqdXN0IGdpdmluZyB2ZXJiYWwgZXhwcmVzc2lvbiAgIHRvIHRoZWlyIGdyaWV2YW5jZXMuIEZyb20gbm93IG9ud2FyZHMsIHBlYXNhbnRzLCBhcnRpc2FucyBhbmQgdGhlIHVyYmFuIHBvb3Igd2VyZSB0byBwbGF5IGFuICAgaW5jcmVhc2luZ2x5IGltcG9ydGFudCBwYXJ0IGluIHRoZSBzdHJ1Z2dsZS4gT3JpZW50YXRpb24gb2YgdGhlIG5hdGlvbmFsIG1vdmVtZW50IHR1cm5lZCB0byB0aGUgbWFzc2VzICAgcGVybWFuZW50bHkuICAgIFNvdXJjZTogT3VyIFBhc3QtSUlJLCBOQ0VSVC1WSUlJLCBDaGFwdGVyLTksIFBnLiAxMTIgICBNb2Rlcm4gSGlzdG9yeSwgU3BlY3RydW0sIENoYXB0ZXItMTUsIFBnLiAzMjEgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following statements with  reference to the Constituent Assembly of India:  1.  It was constituted under the scheme  formulated by August offer.  2.  Initially, the Socialists were unwilling to join  the Constituent Assembly.  3.  The idea of Constituent Assembly was put  forward for the first time by J.L. Nehru.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIENvbnN0aXR1ZW50IEFzc2VtYmx5IHdhcyBjb25zdGl0dXRlZCBpbiBOb3ZlbWJlciAxOTQ2ICAgdW5kZXIgdGhlIHNjaGVtZSBmb3JtdWxhdGVkIGJ5IHRoZSBDYWJpbmV0IE1pc3Npb24gUGxhbi4gICAgIG9mIDIyICAuICAgICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBTb2NpYWxpc3RzIHdlcmUgaW5pdGlhbGx5IHVud2lsbGluZyB0byBqb2luLCBmb3IgdGhleSBiZWxpZXZlZCB0aGUgQ29uc3RpdHVlbnQgICBBc3NlbWJseSB3YXMgYSBjcmVhdGlvbiBvZiB0aGUgQnJpdGlzaCwgYW5kIHRoZXJlZm9yZSBpbmNhcGFibGUgb2YgYmVpbmcgdHJ1bHkgYXV0b25vbW91cy4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IEluIDE5MzQgdGhlIGlkZWEgb2YgYSBDb25zdGl0dWVudCBBc3NlbWJseSBmb3IgSW5kaWEgd2FzIHB1dCBmb3J3YXJkIGZvciB0aGUgICBmaXJzdCB0aW1lIGJ5IE0uTi4gUm95LiAgIEtub3dsZWRnZSBCYXNlOiBUaGUgZmlyc3QgbWVldGluZyBvZiB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgdG9vayBwbGFjZSBvbiBEZWNlbWJlciA5LCAxOTQ2IGF0IE5ldyAgIERlbGhpIHdpdGggRHIgU2FjaGlkYW5hbmQgYmVpbmcgZWxlY3RlZCBhcyB0aGUgaW50ZXJpbSBQcmVzaWRlbnQgb2YgdGhlIEFzc2VtYmx5LiBIb3dldmVyLCBvbiAgIERlY2VtYmVyIDExLCAxOTQ2LCBEci4gUmFqZW5kcmEgUHJhc2FkIHdhcyBlbGVjdGVkIGFzIHRoZSBQcmVzaWRlbnQgYW5kIEguQy4gTXVraGVyamVlIGFzIHRoZSBWaWNlLSAgUHJlc2lkZW50IG9mIHRoZSBDb25zdGl0dWVudCBBc3NlbWJseS4gICAgQ29uc3RpdHVlbnQgQXNzZW1ibHkgd2FzIHRvIGJlIGEgcGFydGx5IGVsZWN0ZWQgYW5kIHBhcnRseSBub21pbmF0ZWQgYm9keS4gTW9yZW92ZXIsIHRoZSBtZW1iZXJzICAgd2VyZSB0byBiZSBpbmRpcmVjdGx5IGVsZWN0ZWQgYnkgdGhlIG1lbWJlcnMgb2YgdGhlIHByb3ZpbmNpYWwgYXNzZW1ibGllcywgd2hvIHRoZW1zZWx2ZXMgd2VyZSBlbGVjdGVkICAgb24gYSBsaW1pdGVkIGZyYW5jaGlzZS4gICBTb3VyY2U6IEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEtIHNwZWN0cnVtIFBnIDcxMiAgIExheG1pa2FudGgtQ2gyLW1ha2luZyBvZiB0aGUgY29uc3RpdHV0aW9uLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 only   ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements  regarding the Unionist Party:  1.  It was primarily active in United Province.  2.  Fazli Hussain and Sikandar Hayat Khan were  among its founders.  3.  It was a secular party bringing together  Muslims, Hindus, Sikhs and other  communities.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBVbmlvbmlzdCBwYXJ0eSB3YXMgZm9ybWVkIGJ5IGxlYWRlcnMgb2YgUHVuamFiLiBUaGUgcGFydHkgd2FzIHBhcnRpY3VsYXJseSAgIHBvd2VyZnVsIGR1cmluZyB0aGUgcGVyaW9kIDE5MjMtNDcuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVW5pb25pc3QgUGFydHkgd2FzIGZvdW5kZWQgYnkgU2lyIEZhemxpIEh1c2FpbiwgU2lyIENob3R1IFJhbSBhbmQgU2lyIFNpa2FuZGFyICAgSGF5YXQgS2hhbiBpbiAxOTIzIGFuZCBiYXNpY2FsbHkgcmVwcmVzZW50ZWQgdGhlIGludGVyZXN0cyBvZiBQdW5qYWJpIHphbWluZGFyIChydXJhbC9hZ3JhcmlhbikuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSXQgd2FzIG5vdCBhIGNvbW11bmFsIHBhcnR5LiBpdCB3YXMgc2VjdWxhciBpbiBuYXR1cmUgYW5kIGJlbGlldmVkIGluIGEgc3Ryb25nICAgYW5kIHVuaXRlZCBQdW5qYWJpIGVudGl0eSwgYnJpbmdpbmcgdG9nZXRoZXIgTXVzbGltcywgSGluZHVzLCBTaWtocyBhbmQgb3RoZXIgY29tbXVuaXRpZXMuICAgS25vd2xlZGdlIEJhc2U6ICAgIFBhcnR5IHdvbiBnZW5lcmFsIGVsZWN0aW9ucyBpbiAxOTM2IGFuZCBmb3JtZWQgZ292ZXJubWVudCBpbiBjb2FsaXRpb24gd2l0aCBjb25ncmVzcyBhbmQgU2lraCBBa2FsaSBEYWwgICBmcm9tIDE5Mzcgb253YXJkcy4gICBTb3VyY2U6IE5DRVJUIC0gVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5LUlJSSwgQ2hhcHRlciA1ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 35,
      "question" : "Who among the following were the  founders of the \"Hind Mazdoor Sabha\"  established in 1948?    ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgVGlsbCBpbmRlcGVuZGVuY2UsIHRoZXJlIHdhcyBvbmx5IG9uZSBjZW50cmFsIHRyYWRlIHVuaW9uIG9yZ2FuaXNhdGlvbiwgdGhlIEFsbCBJbmRpYSBUcmFkZSBVbmlvbiAgIENvbmdyZXNzIChBSVRVQykgd2hpY2ggd2FzIGZvcm1lZCBpbiAxOTIwIGFuZCBjcmVhdGVkIGxvdCBvZiBpbmR1c3RyaWFsIHN0cmlmZS4gVGhlIENvbmdyZXNzIFBhcnR5ICAgdGhlcmVmb3JlIHRvb2sgdGhlIGluaXRpYXRpdmUgaW4gZm9ybWluZyBhIHRyYWRlIHVuaW9uIGNlbnRyZSAoSU5UVUMpIC4gVGhlIHNvY2lhbGlzdHMgaW4gSU5UVUMgd2VyZSAgIGRpc3NhdGlzZmllZCB3aXRoIHRoZSBmdW5jdGlvbmluZyBvZiBJTlRVQyBhbmQgZm91bmRlZCBIaW5kIE1hemRvb3IgU2FiaGEgKEhNUykgaW4gSG93cmFoIGFzIGEgICBOYXRpb25hbCBUcmFkZSBVbmlvbiBDZW50cmUgaW4gSW5kaWEuIEl0cyBmb3VuZGVycyBpbmNsdWRlZCBCYXNhd2FuIFNpbmdoIChTaW5oYSkgLCBBc2hvayBNZWh0YSwgICBSLlMuIFJ1aWthciwgTWFuaSBCZW5rYXJhLCBTaGlibmF0aCBCZW5lcmFqZWUsIFQuUy4gUmFtYW51amFtLCBWUy4gTWF0aHVyLCBHLkcuIE1laHRhLiBNci4gICBSLlMuIFJ1aWthciB3YXMgZWxlY3RlZCBwcmVzaWRlbnQgYW5kIEFzaG9rIE1laHRhIGFzIGl0cyBHZW5lcmFsIFNlY3JldGFyeS4gSXQgYWN0ZWQgYXMgYSBiYWxhbmNpbmcgZm9yY2UgICBiZXR3ZWVuIHRoZSBJTlRVQyBhbmQgQUlUVUMuICAgICBTb3VyY2U6IFVQU0MgQ1NQIHByZWxpbXMgMjAxOCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " B. Krishna Pillai, E.M.S. Namboodiripad and   K.C. George    ",
        "option2" : " Jayaprakash Narayan, Deen Dayal Upadhyay   and M.N. Roy    ",
        "option3" : " C.P. Ramaswamy Iyer, K. Kamaraj   and Veeresalingam Pantulu    ",
        "option4" : " Ashok Mehta, T.S. Ramanujam and G.G.   Mehta     "
      }
    },
    {
      "index" : 36,
      "question" : "Which among the following personalities  participated in protest against the Simon  Commission?  1. Lala Lajpat Rai  2. Govind Ballabh Pant  3. Mahatma Gandhi  4. Jawahar Lal Nehru  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3Q6IExhbGEgTGFqcGF0IFJhaSBkaWVkIGluIExhaG9yZSBhZnRlciBiZWluZyBicnV0YWxseSBhc3NhdWx0ZWQgYnkgcG9saWNlIHdoaWxlIGxlYWRpbmcgYSAgIHByb3Rlc3QgYWdhaW5zdCB0aGUgU2ltb24gY29tbWlzc2lvbi4gICAgIG9mIDIyICAuICAgICAgICAgIE9wdGlvbiAzIGlzIGluY29ycmVjdDogTWFoYXRtYSBHYW5kaGkgZGlkIG5vdCBwYXJ0aWNpcGF0ZSBpbiBwcm90ZXN0cyBhZ2FpbnN0IFNpbW9uIENvbW1pc3Npb24sICAgYWx0aG91Z2ggaGUgZ2F2ZSBoaXMgYmxlc3NpbmdzIHRvIGl0LiBIZSB3YXMgb3Bwb3NlZCB0byB0aGUgQ29tbWlzc2lvbiBhcyBpdCBkaWQgbm90IGhhdmUgYW55IEluZGlhbiAgIG1lbWJlcnMuICAgT3B0aW9uIDIgYW5kIDQgYXJlIGNvcnJlY3Q6IEphd2FoYXIgbGFsIE5laHJ1IGxlZCBhIGRlbW9uc3RyYXRpb24gYWdhaW5zdCB0aGUgY29tbWlzc2lvbiBpbiB0aGUgICBMdWNrbm93IGNpdHkuIEdvdmluZCBCYWxsYWJoIFBhbnQgYWxzbyBwcm90ZXN0ZWQgYWdhaW5zdCB0aGUgU2ltb24gQ29tbWlzc2lvbi4gV2hpbGUgcHJvdGVzdGluZyAgIGFnYWluc3QgdGhlIFNpbW9uIENvbW1pc3Npb24sIFBhbnQgc3VzdGFpbmVkIHNldmVyZSBpbmp1cmllcy4gICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeS1JSUksIENoYXB0ZXIgNCBwYWdlIDM1NSAgICBzdHVkZW50cy9hcnRpY2xlc2hvdy80NTE0MDY5Mi5jbXMgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "2, 3 and 4 only   "
      }
    },
    {
      "index" : 37,
      "question" : "Which of the following was a contribution  of Mahatma Gandhi in the area of social  reforms?  1.  His participation in Khilafat movement  supported Hindu - Muslim unity.  2.  Mahatma Gandhi saw woman not as objects  of reform but as self-conscious subjects.  3.  He founded Harijan Sevak Sangh to  eradicate untouchability.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE1haGF0bWEgR2FuZGhpIGFjdGl2ZWx5IHByb21vdGVkIEhpbmR1LU11c2xpbSB1bml0eS4gSGUgYmVsaWV2ZWQgaW4gcmVsaWdpb3VzICAgcGx1cmFsaXNtLiBIZSBhY3RpdmVseSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIEtoaWxhZmF0IG1vdmVtZW50IGp1c3QgdG8gaW5jcmVhc2UgSGluZHUtTXVzbGltIHVuaXR5LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEFjY29yZGluZyB0byBNYWhhdG1hIEdhbmRoaSwgd29tZW4gd2VyZSBub3Qgb2JqZWN0cyBvZiByZWZvcm0gYW5kICAgaHVtYW5pdGFyaWFuaXNtIGJ1dCBzZWxmLWNvbnNjaW91cyBzdWJqZWN0cyB3aG8gY291bGQgYmVjb21lIGFyYml0ZXJzIG9mIHRoZWlyIG93biBkZXN0aW55LiBNYWhhdG1hICAgR2FuZGhpIHJlcHJlc2VudHMgYSBjcnVjaWFsIGJyZWFrIGZyb20gdGhlIGF0dGl0dWRlIG9mIG1hbnkgb2YgdGhlIGxlYWRlcnMgb2YgdGhlIHJlZm9ybSBtb3ZlbWVudHMgb2YgICB0aGUgbGF0ZSBuaW5ldGVlbnRoIGNlbnR1cnksIHdobyB0ZW5kZWQgdG8gc2VlIHdvbWVuIGFzIHBhc3NpdmUgcmVjaXBpZW50cyBvZiBtb3JlIGh1bWFuZSB0cmVhdG1lbnQgICB0aHJvdWdoIHRoZSBpbml0aWF0aXZlIG9mIGVubGlnaHRlbmVkIG1hbGUgZWZmb3J0LiAgICBNYWhhdG1hIEdhbmRoaSBiZWxpZXZlZCB0aGF0IHdvbWVuIG11c3QgcmVhbGl6ZSB0aGVpciBmdWxsIHN0YXR1cyBhbmQgcGxheSB0aGVpciBwYXJ0IGFzIGVxdWFscyB0byBtZW4uICAgVGhlcmUgd2FzIGhpZ2ggcGFydGljaXBhdGlvbiBvZiB3b21lbiBpbiBOb24tY29vcGVyYXRpb24sIENpdmlsIGRpc29iZWRpZW5jZSBtb3ZlbWVudCwgRGFuZGkgTWFyY2ggICBhbmQgaW4gUXVpdCBJbmRpYSBtb3ZlbWVudC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBIYXJpamFuIFNldmFrIFNhbmdoIGlzIGEgbm9uLXByb2ZpdCBvcmdhbmlzYXRpb24gZm91bmRlZCBieSBNYWhhdG1hIEdhbmRoaSBpbiAgIDE5MzIuIEl0IHdhcyBmb3VuZGVkIHRvIGVyYWRpY2F0ZSB1bnRvdWNoYWJpbGl0eSBpbiBJbmRpYSwgd29ya2luZyBmb3IgSGFyaWphbiBvciBEYWxpdCBwZW9wbGUgYW5kICAgdXBsaWZ0bWVudCBvZiBEZXByZXNzZWQgQ2xhc3Mgb2YgSW5kaWEuICAgIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5LUlJSSwgQ2hhcHRlciA0IHBhZ2UgMzU1ICAgaHR0cHM6Ly93d3cuanN0b3Iub3JnL3N0YWJsZS80Mzc0ODk3ICAgU3BlY3RydW0gTW9kZXJuIEluZGlhLCBQYWdlLiAzOTMsIDgzNSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3        .  .  "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the following arguments were made against the 'Orientalists'vision of learning given by the Europeans? 1. The knowledge of the East was unscientific in nature. 2. The Oriental knowledge was not useful and practical. 3. There was lack of poetry and sacred literature in Oriental books. 4. Western education will make the natives more civilized. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBNYW55IEJyaXRpc2ggb2ZmaWNpYWxzIGNyaXRpY2l6ZWQgdGhlIE9yaWVudGFsaXN0IHZpc2lvbiBvZiBsZWFybmluZy4gVGhleSBzYWlkIHRoYXQgICBrbm93bGVkZ2Ugb2YgdGhlIEVhc3Qgd2FzIGZ1bGwgb2YgZXJyb3JzIGFuZCB1bnNjaWVudGlmaWMgaW4gbmF0dXJlLiBUaGV5IHNhaWQgdGhhdCB0aGUgRWFzdGVybiBsaXRlcmF0dXJlICAgd2FzIG5vbi1zZXJpb3VzIGFuZCBsaWdodC1oZWFydGVkLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEphbWVzIE1pbGwgYXR0YWNrZWQgdGhlIE9yaWVudGFsaXN0cyBieSBzYXlpbmcgdGhhdCB0aGUgYWltIG9mIGVkdWNhdGlvbiBvdWdodCB0byAgIGJlIHRvIHRlYWNoIHdoYXQgd2FzIHVzZWZ1bCBhbmQgcHJhY3RpY2FsIHdoaWNoIHdhcyBsYWNraW5nIGluIE9yaWVudGFsaXN0IHZpc2lvbiBvZiBsZWFybmluZy4gVGhvbWFzICAgQmFiaW5ndG9uIE1hY2F1bGF5IHVyZ2VkIHRoYXQgdGhlIEJyaXRpc2ggZ292ZXJubWVudCBpbiBJbmRpYSBzdG9wIHdhc3RpbmcgcHVibGljIG1vbmV5IGluIHByb21vdGluZyAgIE9yaWVudGFsIGxlYXJuaW5nLCBmb3IgaXQgd2FzIG9mIG5vIHByYWN0aWNhbCB1c2UuICAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQWNjb3JkaW5nIHRvIEV1cm9wZWFucywgdGhlIE9yaWVudCBib29rcyB3ZXJlIGZ1bGwgb2YgcG9ldHJ5IGFuZCBzYWNyZWQgICBsaXRlcmF0dXJlLiBUaGF0J3Mgd2h5IHRoZXkgY2FsbGVkIGl0IG5vbi1wcmFjdGljYWwuIFRoZXkgc2FpZCB0aGF0IHRoZSBJbmRpYW5zIHNob3VsZCBiZSBtYWRlIGZhbWlsaWFyICAgd2l0aCB0aGUgc2NpZW50aWZpYyBhbmQgdGVjaG5pY2FsIGFkdmFuY2VzIHRoYXQgdGhlIFdlc3QuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogVGhvbWFzIEJhYmluZ3RvbiBNYWNhdWxheSBzYXcgSW5kaWEgYXMgYW4gdW5jaXZpbGl6ZWQgY291bnRyeSB0aGF0IG5lZWRlZCB0byAgIGJlIGNpdmlsaXplZC4gQWNjb3JkaW5nIHRvIE1hY2F1bGF5LCB0aGUga25vd2xlZGdlIG9mIEVuZ2xpc2ggd291bGQgbWFrZSB0aGVtIGF3YXJlIG9mIHRoZSAgIGRldmVsb3BtZW50cyBpbiBXZXN0ZXJuIHNjaWVuY2UgYW5kIHBoaWxvc29waHkuIFdlc3Rlcm4gZWR1Y2F0aW9uIHdvdWxkIGJlIGEgd2F5IHRvIGNpdmlsaXplIHBlb3BsZS4gICBTb3VyY2U6IE5DRVJUIENsYXNzIFZJSUkgT3VyIFBhc3RzIElJSSAtIENpdmlsaXNpbmcgdGhlIE5hdGl2ZSBlZHVjYXRpbmcgdGhlIG5hdGlvbi4gICAgICBvZiAyMiAgLiAgICAgICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "1, 2 and 4 only ",
        "option3" : "1, 3 and 4 only ",
        "option4" : "2, 3 and 4 only "
      }
    },
    {
      "index" : 41,
      "question" : "With reference to Taluqdars during annexation of Awadh region by British, consider the following statements: 1. Taluqdars enjoyed a degree of autonomy before the annexation of the Awadh by British. 2. After annexation Taluqdars were provided with wide powers for the purpose of maximizing the land revenue. 3. The Summary settlement of 1856 increased the number of villages controlled by Taluqdars. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSB0YWx1cWRhcnMgd2VyZSBsYW5kaG9sZGVycyBvZiBBd2FkaC4gV2hlbiB0aGUgQnJpdGlzaCBhbm5leGVkIHRoZSB0ZXJyaXRvcnkgb2YgQXdhZGgsIHRoZXkgICB1bmRlcm1pbmVkIHRoZSBwb3NpdGlvbiBvZiB0YWx1cWRhcnMuICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gQmVmb3JlIHRoZSBjb21pbmcgb2YgdGhlIEJyaXRpc2gsIHRhbHVxZGFycyBtYWludGFpbmVkIGFybWVkIHNlcnZhbnQsIGJ1aWx0IGZvcnRzLCAgIGFuZCBlbmpveWVkIGEgZGVncmVlIG9mIGF1dG9ub215LCBhcyBsb25nIGFzIHRoZXkgYWNjZXB0ZWQgdGhlIHN1emVyYWludHkgb2YgdGhlIE5hd2FiIGFuZCBwYWlkIHRoZSAgIHJldmVudWUgb2YgdGhlaXIgdGFsdXFzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gQWZ0ZXIgYW5uZXhpbmcgQXdhZGgsIEJyaXRpc2ggaGFkIGRpc3Bvc3Nlc3NlZCB0aGUgVGFsdXFkYXJzIG9mIHRoZWlyIGZvcnRzLCAgIGFybXMsIGFuZCBhdXRvbm9teSB3aGljaCB0aGV5IGVuam95ZWQgYmVmb3JlIHRoZSBhbm5leGF0aW9uIG9mIEF3YWRoLiBCcml0aXNoIHdlcmUgbm90IHdpbGxpbmcgdG8gICBhY2NlcHQgdGhlIHBvd2VyIG9mIFRhbHVxZGFycy4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBUaGUgU3VtbWFyeSBzZXR0bGVtZW50IG9mIDE4NTYgd2FzIHRoZSBmaXJzdCByZXZlbnVlIHNldHRsZW1lbnQgb2YgQnJpdGlzaCAgIHdoaWNoIGZ1cnRoZXIgcmVtb3ZlZCB0aGUgVGFsdXFkYXJzIHdoZXJldmVyIHBvc3NpYmxlLiBUaGlzIHNldHRsZW1lbnQgd2FzIGJhc2VkIG9uIHRoZSBhc3N1bXB0aW9uICAgdGhhdCB0aGUgdGFsdXFkYXJzIHdlcmUgaW50ZXJsb3BlcnMgd2l0aCBubyBwZXJtYW5lbnQgc3Rha2VzIGluIGxhbmQuIFRoZXkgaGFkIGVzdGFibGlzaGVkIHRoZWlyIGhvbGQgICBvdmVyIGxhbmQgdGhyb3VnaCBmb3JjZSBhbmQgZnJhdWQuIFNvLCB0aGUgbnVtYmVyIG9mIHZpbGxhZ2VzIGhlbGQgdW5kZXIgdGhlIFRhbHVxZGFycyBoYWQgZ3JlYXRseSAgIHJlZHVjZWQuICAgU291cmNlOiBOQ0VSVCBDbGFzcy1YSUkgVGhlbWVzIGluIEluZGlhbiBoaXN0b3J5IHBhcnQtSUlJIGNoYXB0ZXItMTEgcGFnZS0yOTgsIDI5OSAgICAgICBvZiAyMiAgLiAgLiAgICBvZiAyMiAgSUFTIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1only ",
        "option2" : "2 and 3 only ",
        "option3" : "2 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following were the reasons for choosing salt as a theme in Civil Disobedience Movement? 1. It was one the highest taxed item. 2. Prohibition on manufacturing of salt for any purpose other than domestic use. 3. Destroying of naturally manufactured salt by the Britishers. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFNhbHQgd2FzIG9uZSB0aGUgaGlnaGVzdCB0YXhlZCBpdGVtLiBUYXggcmF0ZXMgcmVhY2hlZCBhdCBtb3JlIHRoYW4gMSwwMDAgICBwZXJjZW50LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQnJpdGlzaGVycyBoYWQgYSBtb25vcG9seSBpbiBzYWx0IG1hbnVmYWN0dXJpbmcuIEV2ZW4gc2FsdCBwcm9kdWN0aW9uIGZvciAgIGRvbWVzdGljIHB1cnBvc2Ugd2FzIHByb2hpYml0ZWQuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEV2ZW4gbmF0dXJhbGx5IG1hbnVmYWN0dXJlZCBzYWx0IHdhcyBub3QgYWxsb3dlZCB0byBiZSB1c2VkIGJ5IHRoZSBwZW9wbGUuICAgQnJpdGlzaCBvZmZpY2lhbCB1c2VkIHRvIGRlc3Ryb3kgdGhlIG5hdHVyYWxseSBtYW51ZmFjdHVyZWQgc2FsdC4gVGhpcyBmb3JjZWQgcGVvcGxlIHRvIGJ1eSB0aGUgaGlnaGx5ICAgdGF4ZWQgc2FsdC4gVGhlIEdvdmVybm1lbnQgZGVzdHJveXMgdGhlIHNhbHQgaXQgY2Fubm90IHNlbGwgcHJvZml0YWJseS4gSXQgcHJldmVudHMgdGhlIHB1YmxpYyBmcm9tICAgbWFudWZhY3R1cmluZyBzYWx0LiBUaHVzLCBpdCBkZXByaXZlcyB0aGUgcGVvcGxlIG9mIGEgdmFsdWFibGUgZWFzeSB2aWxsYWdlIGluZHVzdHJ5LiAgIEtub3dsZWRnZSBCYXNlOiBTYWx0IHdhcyBzZWVuIGFzIGEgcG93ZXJmdWwgd2VhcG9uIGJ5IEdhbmRoaWppIHRvIHVuaXRlIHBlb3BsZSBpbiB0aGUgbWFzcyBzdHJ1Z2dsZS4gICBTb3VyY2U6IE5DRVJUIFRoZW1lcyBpbiBJbmRpYW4gSGlzdG9yeS1JSUksIENoYXB0ZXIgNCBwYWdlIDM1NyAgIFNwZWN0cnVtJ3MgQSBCcmllZiBIaXN0b3J5IG9mIE1vZGVybiBJbmRpYSwgQ2ggOSBwYWdlIDMyOSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 42,
      "question" : "Which among the following participated in the second-round table conference? 1. All India Muslim League 2. The Princely states 3. Tej Bahadur Sapru 4. M.K. Gandhi Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIHNlY29uZCBSb3VuZCBUYWJsZSBDb25mZXJlbmNlIHdhcyBoZWxkIGluIExvbmRvbiBmcm9tIFNlcHRlbWJlciA3LCAxOTMxIHRvIERlY2VtYmVyMSwgMTkzMS4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE11c2xpbSBMZWFndWUgd2FzIHJlcHJlc2VudGVkIGJ5IEFnYSBLaGFuIElJSSwgTWF1bGFuYSBTaGF1a2F0IEFsaSwgIE11aGFtbWFkIEFsaSBKaW5uYWgsIEEuSy4gRmF6bHVsIEh1cSwgTXVoYW1tYWQgSXFiYWwsIE11aGFtbWFkIFNoYWZpIGFtb25nIG90aGVycy4gIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBwcmluY2VseSBzdGF0ZXMgd2VyZSByZXByZXNlbnRlZCBieSBNYWhhcmFqYSBvZiBBbHdhciwgTWFoYXJhamEgb2YgQmFyb2RhLCAgTmF3YWIgb2YgQmhvcGFsLCBNYWhhcmFqYSBvZiBCaWthbmVyIGFtb25nIG1hbnkgb3RoZXJzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGVqIEJhaGFkdXIgU2FwcnUgcGFydGljaXBhdGVkIGluIHNlY29uZCByb3VuZCB0YWJsZSBhcyBsaWJlcmFsLiBUaGUgb3RoZXIgIGxpYmVyYWxzIGF0IHRoZSBjb25mZXJlbmNlIHdlcmUgSi4gTi4gQmFzdSwgQy5ZLiBDaGludGFtYW5pLCBWLlMuIFNyaW5pdmFzYSBTYXN0cmksIGFuZCBDaGltYW5sYWwgSGFyaWxhbCAgU2V0YWx2YWQuICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgSW5kaWFuIE5hdGlvbmFsIENvbmdyZXNzIG5vbWluYXRlZCBHYW5kaGkgYXMgaXRzIHNvbGUgcmVwcmVzZW50YXRpdmUuIEEuICBSYW5nYXN3YW1pIEl5ZW5nYXIgYW5kIE1hZGFuIE1vaGFuIE1hbGF2aXlhIHdlcmUgYWxzbyB0aGVyZS4gT3V0IG9mIHRoZSB0aHJlZSByb3VuZCB0YWJsZSAgY29uZmVyZW5jZXMgQ29uZ3Jlc3MgYXR0ZW5kZWQgb25seSB0aGUgMm5kIFJUQy4gIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5LUlsbCwgQ2hhcHRlciA0IHBhZ2UgMzYwICBTcGVjdHJ1bSdzIEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEsIENoIDkgcGFnZSAzMzkg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "1, 2, 3 and 4 ",
        "option4" : "1, 2 and 3 only "
      }
    },
    {
      "index" : 43,
      "question" : "Which of the following statements is correct regarding 'Prati Sarkar' during Quit India Movement? 1. It was a parallel government in Satara-Sangli region of Maharashtra. 2. The armed wing of the Prati Sarkar was called The Toofan Sena. 3. Congress was not in support of Prati Sarkar formed during Quit India Movement. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogJ1ByYXRpIFNhcmthcicgd2FzIGEgcGFyYWxsZWwgZ292ZXJubWVudCBiZWluZyBydW4gaW4gMTUwIHZpbGxhZ2VzIG9mIHByZXNlbnQtZGF5ICBTYXRhcmEtU2FuZ2xpIHJlZ2lvbiBvZiBNYWhhcmFzaHRyYSBmb3IgbmVhcmx5IGZvdXIgYW5kIGhhbGYgeWVhcnMgZHVyaW5nIHRoZSBRdWl0IEluZGlhLiBQcmF0aSBTYXJrYXIgd2FzICBvcmdhbml6ZWQgdW5kZXIgdGhlIGxlYWRlcnMgbGlrZSBOYW5hIFBhdGlsLCBZLkIuIENoYXZhbiBldGMuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgVG9vZmFuIFNlbmEgKHdoaXJsd2luZCBvciB0eXBob29uIGFybXkpIHdhcyB0aGUgYXJtZWQgd2luZyBvZiB0aGUgcHJhdGkgIFNhcmthci4gSW4gMTk0MyB3aGVuIHRoZXkgYXR0YWNrZWQgYSB0cmFpbiBjYXJyeWluZyB0aGUgc2FsYXJpZXMgb2Ygb2ZmaWNpYWxzIG9mIHRoZSBCcml0aXNoIFJhaiBhdCBTaGVub2xpICB2aWxsYWdlIGluIFNhdGFyYSBhbmQgZ2F2ZSB0aGUgbW9uZXkgdG8gcnVuIHRoZSBQcmF0aSBTYXJrYXIuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBDb25ncmVzcywgZXNwZWNpYWxseSBpbiBsYXRlciBzdGFnZXMgb2YgUXVpdCBJbmRpYSBtb3ZlbWVudCwgd2FzIG5vdCBpbiBzdXBwb3J0ICBvZiB0aGVzZSBmb3JtcyBvZiBuZXcgZ292ZXJubWVudHMuICBLbm93bGVkZ2UgQmFzZTogVW5kZXIgJ1ByYXRpIFNhcmthcicgcHJvaGliaXRpb24gY2FtcGFpZ25zIGFuZCAnR2FuZGhpIG1hcnJpYWdlcycgd2VyZSBhbHNvIG9yZ2FuaXplZC4gIFNvdXJjZTogTkNFUlQgVGhlbWVzIGluIEluZGlhbiBIaXN0b3J5LUlJSSwgQ2hhcHRlciA0IHBhZ2UgMzYzICBTcGVjdHJ1bSdzIEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEsIENoIDEwIHBhZ2UgMzc5ICBodHRwczovL3d3dy5hc2lhbi12b2ljZS5jb20vT3Bpbmlvbi9Db2x1bW5pc3RzL1BhdHJpLVNhcmthci1hZ2FpbnN0LUJyaXRpc2gtaW4tTWFoYXJhc2h0cmEgIGh0dHBzOi8vcnVyYWxpbmRpYW9ubGluZS5vcmcvZW4vYXJ0aWNsZXMgaGUtbGFzdC1odXJyYWgtb2YtdGhlLXByYXRpLXNhcmthci8g",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "2 only ",
        "option4" : "1, 2 and 3 "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements: 1. The Factories Act, 1881 was passed with a view to fix the wages of industrial workers and to allow the workers to form trade unions. 2. N.M. Lokhande was a pioneer in organizing the labour movement in British India. Which of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgRmFjdG9yeSBBY3Qgb2YgMTg4MSB3YXMgaW50cm9kdWNlZCBieSBMb3JkIFJpcG9uIHRvIGltcHJvdmUgdGhlIHNlcnZpY2UgICBjb25kaXRpb24gb2YgdGhlIGZhY3Rvcnkgd29ya2VycyBpbiBJbmRpYS4gSXQgZGVhbHQgcHJpbWFyaWx5IHdpdGggdGhlIHByb2JsZW0gb2YgY2hpbGQgbGFib3VyLiBUaGUgQWN0ICAgYmFubmVkIHRoZSBhcHBvaW50bWVudCBvZiBjaGlsZHJlbiBiZWxvdyB0aGUgYWdlIG9mIHNldmVuIGluIGZhY3Rvcmllcy4gSXQgcmVzdHJpY3RlZCB0aGUgd29ya2luZyBob3VycyAgIGZvciBjaGlsZHJlbiB0byA5IGhvdXJzIHBlciBkYXkuIEl0IG1hZGUgY29tcHVsc29yeSBmb3IgYWxsIGRhbmdlcm91cyBtYWNoaW5lcyBpbiB0aGUgZmFjdG9yaWVzIHRvIGJlICAgcHJvcGVybHkgZmVuY2VkIHRvIGVuc3VyZSBzZWN1cml0eSB0byB0aGUgd29ya2Vycy4gSXQgcHJvdmlkZWQgZm9yIGZvdXIgaG9saWRheXMgdG8gY2hpbGRyZW4gcGVyIG1vbnRoLiAgICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gTi5NLiBMb2toYW5kZSB3YXMgYSBwaW9uZWVyIGluIG9yZ2FuaXppbmcgdGhlIGxhYm91ciBtb3ZlbWVudCBpbiBCcml0aXNoIEluZGlhLiAgIEhlIGlzIGNvbnNpZGVyZWQgYXMgdGhlIEZhdGhlciBvZiBUcmFkZSBVbmlvbiBNb3ZlbWVudCBpbiBJbmRpYS4gSW4gMTg4MCwgaGUgc3RhcnRlZCB0aGUgbmV3c3BhcGVyICAgRGVlbmJhbmRodSAoZmlyc3QgbGFib3VyIGpvdXJuYWwgaW4gdGhlIGNvdW50cnkpIGFuZCBzZXQgdXAgdGhlIEJvbWJheSBNaWxsIGFuZCBNaWxsaGFuZHMgQXNzb2NpYXRpb24uICAgICBTb3VyY2U6IFVQU0MgQ1NFIFByZWxpbXMgMjAxNyAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither1 nor 2       "
      }
    },
    {
      "index" : 44,
      "question" : "Which of the following statements is/are  correct about the Non-cooperation  movement?  1.  Some of Indian business class supported the  movement.  2.  Unlike peasants, workers and artisans  participated in this movement.  3.  Attainment of self-government through  extra-constitutional means was the aim of  the movement.  Select the correct answer using the code given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGQgdGhlIGlzIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gU29tZSBJbmRpYW4gYnVzaW5lc3MgZ3JvdXBzIHN1cHBvcnRlZCB0aGlzIG1vdmVtZW50IGJlY2F1c2UgdGhleSBoYWQgIGJlbmVmaXR0ZWQgZnJvbSB0aGUgbmF0aW9uYWxpc3QgZW1waGFzaXMgb24gdGhlIHVzZSBvZiBzd2FkZXNoaS4gQnV0IGEgc2VjdGlvbiBvZiBiaWcgYnVzaW5lc3NtZW4gIHJlbWFpbmVkIHNrZXB0aWNhbCB0b3dhcmRzIHRoZSBtb3ZlbWVudC4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSW4gTm9uLWNvb3BlcmF0aW9uIG1vdmVtZW50LCBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgcGVhc2FudHMsIHdvcmtlcnMgIGFuZCBhcnRpc2FucyBwYXJ0aWNpcGF0ZWQgd2hpY2ggd2VyZSBlYXJsaWVyIGFic2VudCBpbiB0aGUgbmF0aW9uYWxpc3QgbW92ZW1lbnQuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBBdHRhaW5tZW50IG9mIHN3YXJhaiB0aHJvdWdoIGV4dHJhLWNvbnN0aXR1dGlvbmFsIG1lYW5zIHdhcyBhZG9wdGVkIGF0IE5hZ3B1ciAgc2Vzc2lvbiBvZiBjb25ncmVzcyBpbiBEZWNlbWJlcjE5MjAuIEFuIGltcG9ydGFudCBjaGFuZ2Ugd2FzIG1hZGUgaW4gdGhlIENvbmdyZXNzICBjcmVlZDogbm93LCBpbnN0ZWFkIG9mIGhhdmluZyB0aGUgYXR0YWlubWVudCBvZiBzZWxmLWdvdmVybm1lbnQgdGhyb3VnaCBjb25zdGl0dXRpb25hbCBtZWFucyBhcyBpdHMgZ29hbCwgIHRoZSBDb25ncmVzcyBkZWNpZGVkIHRvIGhhdmUgdGhlIGF0dGFpbm1lbnQgb2Ygc3dhcmFqIHRocm91Z2ggcGVhY2VmdWwgYW5kIGxlZ2l0aW1hdGUgbWVhbnMsIHRodXMgIGNvbW1pdHRpbmcgaXRzZWxmIHRvIGFuIGV4dHJhY29uc3RpdHV0aW9uYWwgbWFzcyBzdHJ1Z2dsZS4gICAgICAgICAgU291cmNlOiBOQ0VSVCBDbGFzcy1YSUkgVGhlbWVzIGluIEluZGlhbiBoaXN0b3J5IHBhcnQtSUlJIGNoYXB0ZXItMTMgTWFoYXRtYSBHYW5kaGkgYW5kIE5hdGlvbmFsICAgbW92ZW1lbnQgcGFnZSAtIDM1MSwgMzUyICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 45,
      "question" : "In the context of Colonial India, Shah  Nawaz Khan, Prem Kumar Sehgal and Gurbaksh  Singh Dhillon are remembered as:   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQcmVtIEt1bWFyIFNlaGdhbCwgU2hhaCBOYXdheiBLaGFuIGFuZCBHdXJ1YmFrc2ggU2luZ2ggRGhpbGxvbiB3ZXJlIG9mZmljZXJzIG9mIEluZGlhbiBOYXRpb25hbCAgIEFybXkgd2hvc2UgdHJpYWwgd2VyZSBoZWxkIGluIDE5NDUgYXQgdGhlIFJlZCBGb3J0IGluIERlbGhpLiBUaGlzIHdhcyB0aGUgZmlyc3QgdHJpYWwgb2YgSU5BIFByaXNvbmVycyBvZiAgIHdhcnMuICAgIFNvdXJjZTogVVBTQyBDU0UgUHJlbGltcyAyMDIxICAgU3BlY3RydW0gUmV2aXNlZCBlZGl0aW9uIGNoYXB0ZXItMjQgcGFnZS00NjUgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "  leaders of Swadeshi and Boycott   Movement    ",
        "option2" : " members of the Interim Government in   1946    ",
        "option3" : " members of the Drafting Committee in the   Constituent Assembly    ",
        "option4" : " officers of the Indian National Army   "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the 'Pakistan  resolution', consider the following statements:   1.  The resolution advocated for partition and  creation of new nation Pakistan.  2.  It was drafted by Sikander Hayat Khan who  was the leader of Unionist party.  3.  It is also known as the Lahore resolution.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIFBha2lzdGFuIHJlc29sdXRpb24gd2FzIGFtYmlndW91cyBhcyBpdCBuZXZlciBtZW50aW9uZWQgcGFydGl0aW9uIG9yICAgUGFraXN0YW4uIEluIGZhY3QsIFNpa2FuZGFyIEhheWF0IEtoYW4sIHdobyBoYWQgZHJhZnRlZCB0aGUgcmVzb2x1dGlvbiwgZGVjbGFyZWQgaW4gYSBQdW5qYWIgYXNzZW1ibHkgICBzcGVlY2ggb24gMSBNYXJjaCAxOTQxIHRoYXQgaGUgd2FzIG9wcG9zZWQgdG8gYSBQYWtpc3RhbiB0aGF0IHdvdWxkIG1lYW4gJ011c2xpbSBSYWogaGVyZSBhbmQgSGluZHUgICBSYWogZWxzZXdoZXJlJy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgJ1Bha2lzdGFuJyByZXNvbHV0aW9uIHdhcyBkcmFmdGVkIGJ5IFNpa2FuZGVyIEhheWF0IEtoYW4sIFB1bmphYiBQcmVtaWVyLCAgIGFuZCBsZWFkZXIgb2YgdGhlIFVuaW9uaXN0IHBhcnR5LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFBha2lzdGFuIHJlc29sdXRpb24gd2FzIHBhc3NlZCBpbiBNYXJjaCAxOTQwIGFuZCBpdCBpcyBhbHNvIGtub3duIGFzIExhaG9yZSAgIHJlc29sdXRpb24sIGFzIGl0IHdhcyBwYXNzZWQgaW4gTXVzbGltIGxlYWd1ZSdzIHNlc3Npb24gaW4gTGFob3JlLiAgIFNvdXJjZTogTkNFUlQgLSBUaGVtZXMgaW4gSW5kaWFuIEhpc3RvcnktSUlJLCBDaGFwdGVyIDUgICBTcGVjdHJ1bSdzIEEgQnJpZWYgSGlzdG9yeSBvZiBNb2Rlcm4gSW5kaWEsIENoLiAxMCAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 47,
      "question" : "With reference to the Simon Commission  in 1928, consider the following statements:   1.  B. R. Ambedkar was appointed by the  Congress to work with the Simon  Commission.  2.  Ambedkar argued for universal adult  franchise for both males and females.   Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gRHIuIEIuIFIuIEFtYmVka2FyIHdhcyBhcHBvaW50ZWQgYnkgdGhlIEJvbWJheSBMZWdpc2xhdGl2ZSBDb3VuY2lsIChub3QgYnkgICBjb25ncmVzcykgdG8gd29yayB3aXRoIHRoZSBTaW1vbiBDb21taXNzaW9uLiBJbiBPY3RvYmVyIDE5MjgsIEFtYmVka2FyIHdlbnQgYmVmb3JlIHRoZSBjb21taXNzaW9uLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuICBBbWJlZGthciBhcmd1ZWQgZm9yIHVuaXZlcnNhbCBhZHVsdCBmcmFuY2hpc2UgZm9yIGJvdGggbWFsZXMgYW5kIGZlbWFsZXMgYWxpa2U7ICAgZm9yIHByb3ZpbmNpYWwgYXV0b25vbXkgaW4gdGhlIHByb3ZpbmNlcyBhbmQgZHlhcmNoeSBhdCB0aGUgY2VudHJlLiBPbiBiZWhhbGYgb2YgdGhlIEJhaGlzaGtyaXRhICAgSGl0YWthcmluaSBTYWJoYSwgaGUgc3VibWl0dGVkIGEgbWVtb3JhbmR1bSBvbiB0aGUgcmlnaHRzIGFuZCBzYWZlZ3VhcmRzIHJlcXVpcmVkIGZvciB0aGUgZGVwcmVzc2VkICAgY2xhc3Nlcy4gSGUgZGVtYW5kZWQgcG9saXRpY2FsIHByb3RlY3Rpb24gb2YgdGhlIGRlcHJlc3NlZCBjbGFzc2VzIGFuZCByZXByZXNlbnRhdGlvbiBvbiB0aGUgc2FtZSBiYXNpcyAgIGFzIHRoZSBNb2hhbW1lZGFuIG1pbm9yaXR5LiAgICBTb3VyY2U6IE1vZGVybiBIaXN0b3J5LCBTcGVjdHJ1bSwgNnRoIEVkaXRpb24sIENoYXB0ZXItMTgsIFBnLiAzNTkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 48,
      "question" : "With reference to the provisions  regarding separate electorates, consider the  following statements:  1.  Separate electorates were introduced for  the first time under the Indian Councils Act  1909.  2.  The Communal award gave separate  electorates even to the Marathas.  Which of the statements given above are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEZvciB0aGUgZmlyc3QgdGltZSwgc2VwYXJhdGUgZWxlY3RvcmF0ZXMgb24gcmVsaWdpb3VzIGxpbmVzIGZvciB0aGUgTXVzbGltcyB3YXMgICBpbnRyb2R1Y2VkIGJ5IHRoZSBJbmRpYW4gQ291bmNpbHMgQWN0IDE5MDkuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIENvbW11bmFsIGF3YXJkIHByb3Bvc2VkIHNlcGFyYXRlIGVsZWN0b3JhdGVzIHRvIE11c2xpbXMsIEV1cm9wZWFucywgICBTaWtocywgSW5kaWFuIENocmlzdGlhbnMsIEFuZ2xvIEluZGlhbnMsIGRlcHJlc3NlZCBjbGFzc2VzLCB3b21lbiwgYW5kIGV2ZW4gdGhlIE1hcmF0aGFzLiBJbiB0aGUgICBwcm92aW5jZSBvZiBCb21iYXksIDcgc2VhdHMgd2VyZSB0byBiZSBhbGxvY2F0ZWQgZm9yIHRoZSBNYXJhdGhhcy4gICAgICBvZiAyMiAgLiAgICAgICAgICBLbm93bGVkZ2UgQmFzZTogQW4gZWxlY3RvcmF0ZSBpcyBhIGdyb3VwIG9mIHZvdGVycyBlbmNvbXBhc3NpbmcgYWxsIHRoZSBvZmZpY2lhbGx5IHF1YWxpZmllZCB2b3RlcnMgd2l0aGluIGEgICBwYXJ0aWN1bGFyIGNvdW50cnkgb3IgYXJlYSBvciBmb3IgYSBwYXJ0aWN1bGFyIGVsZWN0aW9uLiBGb3IgZXhhbXBsZSwgYSBzZXBhcmF0ZSBlbGVjdG9yYXRlIGZvciBNdXNsaW1zICAgbWVhbnMgdGhhdCBNdXNsaW1zIHdpbGwgY2hvb3NlIHRoZWlyIHNlcGFyYXRlIGxlYWRlciBieSBzZXBhcmF0ZSBlbGVjdGlvbnMgZm9yIE11c2xpbXMuICAgU291cmNlOiBBIEJyaWVmIEhpc3Rvcnkgb2YgTW9kZXJuIEluZGlhLSBTcGVjdHJ1bTsgUGcgMzA5OyAzMzU7IDQwMyAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to Government of India  Act, 1935, consider the following statements:  1.  Members of Council of States could move a  vote of no-confidence against ministers.   2.  Provincial Governor was to have special  powers regarding princely states.   3.  The act provided residuary powers to the  provinces.  Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIEdvdmVybm1lbnQgb2YgSW5kaWEgQWN0LCAxOTM1IGVtcG93ZXJlZCB0aGUgTWVtYmVycyBvZiBGZWRlcmFsICAgQXNzZW1ibHkgdG8gbW92ZSBhIHZvdGUgb2Ygbm8tY29uZmlkZW5jZSBhZ2FpbnN0IG1pbmlzdGVycy4gQ291bmNpbCBvZiBTdGF0ZXMgY291bGQgbm90IG1vdmUgYSB2b3RlIG9mICAgbm8tY29uZmlkZW5jZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogUHJvdmluY2lhbCBHb3Zlcm5vciB3YXMgdG8gYmUgdGhlIENyb3duJ3Mgbm9taW5lZSBhbmQgcmVwcmVzZW50YXRpdmUgdG8gICBleGVyY2lzZSBhdXRob3JpdHkgb24gdGhlIGtpbmcncyBiZWhhbGYgaW4gYSBwcm92aW5jZS4gSGUgd2FzIHRvIGhhdmUgc3BlY2lhbCBwb3dlcnMgcmVnYXJkaW5nICAgbWlub3JpdGllcywgcmlnaHRzIG9mIGNpdmlsIHNlcnZhbnRzLCBsYXcgYW5kIG9yZGVyLCBCcml0aXNoIGJ1c2luZXNzIGludGVyZXN0cywgcGFydGlhbGx5IGV4Y2x1ZGVkIGFyZWFzLCAgIHByaW5jZWx5IHN0YXRlcywgZXRjLiAgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBBY3QgZGl2aWRlZCB0aGUgcG93ZXJzIGJldHdlZW4gdGhlIENlbnRyZSBhbmQgdW5pdHMgaW4gdGVybXMgb2YgdGhyZWUgbGlzdHMgICAtIEZlZGVyYWwgTGlzdCAoZm9yIENlbnRyZSksIFByb3ZpbmNpYWwgTGlzdCAoZm9yIHByb3ZpbmNlcykgYW5kIHRoZSBDb25jdXJyZW50IExpc3QgKGZvciBib3RoKS4gUmVzaWR1YXJ5ICAgcG93ZXJzIHdlcmUgZ2l2ZW4gdG8gdGhlIFZpY2Vyb3kuIChUaGUgVmljZXJveSB3YXMgYWxzbyB0aGUgR292ZXJub3ItR2VuZXJhbCBvZiBJbmRpYSkgICBTb3VyY2U6IEhpc3Rvcnkgb2YgbW9kZXJuIEluZGlhIGJ5IEJpcGluIENoYW5kcmEgcGFnZSAyOTAgICBBIGJyaWVmIGhpc3Rvcnkgb2YgTW9kZXJuIEhpc3RvcnktIFNwZWN0cnVtOyBwZyA1NzUgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:   1.  The Montagu-Chelmsford Reforms of 1919  recommended granting voting rights to all  the women above the age of 21.    2.  The Government of India Act of 1935 gave  women reserved seats in legislature.    Which of the statements given above is/are  correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgY29ycmVjdC4gICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgTW9udGFndWUgQ2hlbG1zZm9yZCByZWZvcm1zIG9mIDE5MTkgZGlkIG5vdCByZWNvbW1lbmQgZ3JhbnRpbmcgdm90aW5nICAgcmlnaHRzIHRvIGFsbCB3b21lbiBhYm92ZSB0aGUgYWdlIG9mIDIxLiBBbHRob3VnaCBpdCByZWNvbW1lbmRlZCB0aGUgdm90aW5nIHJpZ2h0cyB0byB3b21lbiBpbiAgIGxpbWl0ZWQgbnVtYmVycyB0byBiZSBleHRlbmRlZCBvbiB0aGUgYmFzaXMgb2YgcHJvcGVydHksIHRheCBvciBlZHVjYXRpb24uICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCwgMTkzNSwgYXMgZmluYWxseSBhZG9wdGVkLCBtYWRlIHR3ZW50eSBuaW5lIG1pbGxpb24gICBtZW4gYW5kIHNpeCBtaWxsaW9uIHdvbWVuIGVsaWdpYmxlIHRvIHZvdGUuIFNlYXRzIHdlcmUgcmVzZXJ2ZWQgZm9yIHdvbWVuIG9uIGEgY29tbXVuYWwgYmFzaXMgd2hpbGUgICB3b21lbiBjb3VsZCBjb250ZXN0IGZyb20gYW55IGdlbmVyYWwgc2VhdCBhcyB3ZWxsLiBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCBvZiAxOTM1IGdyYW50ZWQgd29tZW4gICBmb3J0eS1vbmUgcmVzZXJ2ZWQgc2VhdHMgaW4gdGhlIHByb3ZpbmNpYWwgbGVnaXNsYXR1cmVzLCBhcyB3ZWxsIGFzIGxpbWl0ZWQgcmVzZXJ2YXRpb25zIGluIGEgY2VudHJhbCAgIGxlZ2lzbGF0dXJlLiAgIFNvdXJjZTogVVBTQyBDU0UgUHJlbGltcyAyMDIxICAgaHR0cHM6Ly93d3cuY2FtYnJpZGdlLm9yZy9jb3JlL3NlcnZpY2VzL2FvcC1jYW1icmlkZ2UtICBjb3JlL2NvbnRlbnQvdmlldy84N0U5MDc3MUY3NjVGQjExOTA3MzQ2REVBODE5NjUyNC9TMDAyMDg1OTAwMDExNTE5NmEucGRmL2Rpdi1jbGFzcy10aXRsZS0gIGNvbXBldGluZy1pbmVxdWFsaXRpZXMtdGhlLXN0cnVnZ2xlLW92ZXItcmVzZXJ2ZWQtbGVnaXNsYXRpdmUtc2VhdHMtZm9yLXdvbWVuLWluLWluZGlhLWEtaHJlZi1mbjAxLSAgcmVmLXR5cGUtZm4tYS1kaXYucGRmICAgaHR0cHM6Ly93d3cubmV3c2xhdW5kcnkuY29tLzIwMTQvMDcvMjUgaGUtc2Fib3RhZ2Utb2YtdGhlLXdvbWVucy1yZXNlcnZhdGlvbi1iaWxsICAgTGF4bWlrYW50aCBDaGFwdGVyLTEgcGFnZS0xLjgsIDEuOSAgICBodHRwczovL2Jsb2cuaXBsZWFkZXJzLmluL2dvdmVybm1lbnQtb2YtaW5kaWEtYWN0LTE5MzUtMi8gICAgIG9mIDIyICAuIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only    ",
        "option2" : "2 only    ",
        "option3" : "Both 1 and 2    ",
        "option4" : "Neither 1 nor 2      . "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
