{
  "testId" : "forum-2023-prelims-preparatory-24",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2023/forum/prelims/forum-2023-prelims-preparatory-24.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following statements with reference to the Military of Vijayanagar Empire:  1. The military chiefs or warriors held the title of Amara nayaka.  2. Soldiers were usually paid in cash.  3. High-breed horses were procured from foreign traders of Arabia, Syria and Turkey.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICBUaGUgTmF5YW5rYXJhIHN5c3RlbSB3YXMgYW4gaW1wb3J0YW50IGNoYXJhY3RlcmlzdGljIG9mIHRoZSBWaWpheWFuYWdhciAgcG9saXRpY2FsIG9yZ2FuaXNhdGlvbi4gVGhlIG1pbGl0YXJ5IGNoaWVmcyBvciB3YXJyaW9ycyBoZWxkIHRoZSB0aXRsZSBvZiBuYXlha2Egb3IgQW1hcmEgbmF5YWthLiBJdCBpcyAgZGlmZmljdWx0eSB0byBjbGFzc2lmeSB0aGVzZSB3YXJyaW9ycyBvbiB0aGUgYmFzaXMgb2YgZGVmaW5pdGUgb2ZmaWNlLCBldGhuaWMgaWRlbnRpdHksIHNldCBvZiBkdXRpZXMgb3IgcmlnaHRzIGFuZCAgcHJpdmlsZWdlcy4gVGhlIGluc3RpdHV0aW9uIG9mIG5heWFrYSB3YXMgc3R1ZGllZCBpbiBkZXRhaWwgYnkgdHdvIFBvcnR1Z3Vlc2UtRmVybmFvIE51bml6IGFuZCBEb21pbmdvICBQYWVzLCB3aG8gdmlzaXRlZCBJbmRpYSBkdXJpbmcgdGhlIHJlaWducyBvZiBLcmlzaG5hZGV2YSBSYXlhIGFuZCBBY2h5dXQgUmF5YSBvZiBUdWx1dmEgZHluYXN0eSBkdXJpbmcgIHRoZSBzaXh0ZWVudGggY2VudHVyeS4gVGhleSByZWdhcmQgdGhlIG5heWFrYXMgc2ltcGx5IGFzIGFnZW50cyBvZiBSYXlhcyAoY2VudHJhbCBnb3Zlcm5tZW50KS4gVGhlICBldmlkZW5jZSBvZiBOdW5peiBmb3IgdGhlIHBheW1lbnRzIG1hZGUgYnkgdGhlIG5heWFrcyB0byB0aGUgUmF5YXMgYnJpbmdzIHVwIHRoZSBxdWVzdGlvbiBvZiBmZXVkYWwgIG9ibGlnYXRpb25zLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFNvbGRpZXJzIHdlcmUgdXN1YWxseSBwYWlkIGluIGNhc2ggdW5kZXIgdGhlIG1pbGl0YXJ5IG9mIFZpamF5YW5hZ2FyYSBFbXBpcmUuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSGlnaC1icmVlZCBob3JzZXMgd2VyZSBwcm9jdXJlZCBmcm9tIGZvcmVpZ24gdHJhZGVycyBvZiBBcmFiaWEsIFN5cmlhIGFuZCAgVHVya2V5LiBUaGUgQXJhYnMgYW5kIGxhdGVyIHRoZSBQb3J0dWd1ZXNlIGNvbnRyb2xsZWQgaG9yc2UgdHJhZGUuIEhvcnNlcyB3ZXJlIEJyb3VnaHQgZnJvbSBBcmFiaWEsICBTeXJpYSBhbmQgVHVya2V5IHRvIHRoZSB3ZXN0LWNvYXN0IHBvcnRzLiBHb2Egc3VwcGxpZWQgaG9yc2VzIHRvIFZpamF5YW5hZ2FyIGFzIHdlbGwgYXMgdGhlIERlY2NhbiAgU3VsdGFuYXRlcy4gSW1wb3J0YXRpb24gb2YgaG9yc2VzIHdhcyBvZiBncmVhdCBtaWxpdGFyeSBpbXBvcnRhbmNlJyBmb3IgdGhlIHNvdXRoZXJuIHN0YXRlcyBhcyBnb29kIGhvcnNlcyAgd2VyZSBub3QgYnJlZCBpbiBJbmRpYS4gQmVzaWRlcywgVmlqYXlhbmFnYXIncyBjb25mbGljdCB3aXRoIHRoZSBub3J0aGVybiBEZWNjYW4gTXVzbGltIHN0YXRlcyByZXN0cmljdGVkICB0aGUgc3VwcGx5IG9mIGhvcnNlcyBmcm9tIG5vcnRoIEluZGlhIHRoYXQgd2VyZSBpbXBvcnRlZCBmcm9tIENlbnRyYWwgQXNpYS4gICBTb3VyY2U6IENsYXNzIDExdGggTkNFUlQgVGFtbGluYWR1IGJvYXJkLiBDaGFwdGVyIG5hbWUtIFZJSkFZQU5BR0FSIEFORCBCQUhNQU5JIEtJTkdET01TLiBQYWdlICBuby0gMjEzLiAgIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMjAxOTAvMS9Vbml0LTI3LnBkZiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements with reference to Mahmud Gawan:  1. Mahmud Gawan's administrative reforms were aimed at increasing the control of Sultan over the nobles and provinces.  2. His annexations of ports of Goa and Dabhol led to further expansion of the Bahmani overseas trade with Iran and Iraq.   Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBCYWhtYW5pIGtpbmdkb20gZ3JhZHVhbGx5IGV4cGFuZGVkIGFuZCByZWFjaGVkIGl0cyBoZWlnaHQgb2YgcG93ZXIgYW5kIHRlcnJpdG9yaWFsIGxpbWl0cyBkdXJpbmcgdGhlICBwcmltZSBtaW5pc3RlciBzaGlwIG9mIE1haG11ZCBHYXdhbi4gVGhlIGVhcmx5IGxpZmUgb2YgTWFobXVkIEdhd2FuIGlzIG9ic2N1cmUuIEhlIHdhcyBhbiBJcmFuaWFuIGJ5ICBiaXJ0aCBhbmQgd2FzIGF0IGZpcnN0IGEgdHJhZGVyLiBIZSB3YXMgaW50cm9kdWNlZCB0byB0aGUgc3VsdGFuIGFuZCBzb29uIGJlY2FtZSBhIGZhdm9yaXRlIGFuZCBoZSB3YXMgIGdyYW50ZWQgdGhlIHRpdGxlIG9mIE1hbGlrLXV0LVR1amphci4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgTWFobXVkIEdhd2FuJ3MgYWRtaW5pc3RyYXRpdmUgcmVmb3JtcyB3ZXJlIGFsc28gaW1wb3J0YW50LiBUaGV5IHdlcmUgIGFpbWVkIHRvIGluY3JlYXNlIHRoZSBjb250cm9sIG9mIFN1bHRhbiBvdmVyIHRoZSBub2JsZXMgYW5kIHByb3ZpbmNlcy4gUm95YWwgb2ZmaWNlcnMgd2VyZSBhcHBvaW50ZWQgaW4gIGVhY2ggcHJvdmluY2UgZm9yIHRoaXMgcHVycG9zZS4gTW9zdCBvZiB0aGUgZm9ydHMgd2VyZSB1bmRlciB0aGUgY29udHJvbCBvZiB0aGVzZSBvZmZpY2Vycy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBGb3IgYWxtb3N0IDIwIHllYXJzLCBNYWhtdWQgR2F3YW4gZG9taW5hdGVkIHRoZSBhZmZhaXJzIG9mIHRoZSBzdGF0ZS4gSGUgIGV4dGVuZGVkIHRoZSBCYWhtYW5pIGtpbmdkb20gYnkgbWFraW5nIGZ1cnRoZXIgYW5uZXhhdGlvbnMgaW4gdGhlIGVhc3QuIEEgZGVlcCByYWlkIGluIHRoZSBWaWpheWFuYWdhcmEgIHRlcnJpdG9yaWVzIHVwIHRvIEthbmNoaSBkZW1vbnN0cmF0ZWQgdGhlIHN0cmVuZ3RoIG9mIHRoZSBCYWhtYW5pIGFybXkuIE1haG11ZCBHYXdhbidzIG1ham9yIG1pbGl0YXJ5ICBjb250cmlidXRpb24sIGhvd2V2ZXIsIHdhcyB0aGUgb3ZlcnJ1bm5pbmcgb2YgdGhlIHdlc3Rlcm4gY29hc3RhbCBhcmVhcywgaW5jbHVkaW5nIERhYmhvbCBhbmQgR29hLiBUaGUgIGxvc3Mgb2YgdGhlc2UgcG9ydHMgd2FzIGEgaGVhdnkgYmxvdyB0byBWaWpheWFuYWdhcmEuIENvbnRyb2wgb2YgR29hIGFuZCBEYWJob2wgbGVkIHRvIGZ1cnRoZXIgZXhwYW5zaW9uICBvZiB0aGUgQmFobWFuaSBvdmVyc2VhcyB0cmFkZSB3aXRoIElyYW4gYW5kIElyYXEuICAgU291cmNlOiAgSGlzdG9yeSBvZiBtZWRpZXZhbCBJbmRpYSBieSBTYXRpc2ggQ2hhbmRyYS4gQ2hhcHRlciBuYW1lLSBUaGUgQWdlIG9mIFZpamF5YW5hZ2FyYSBhbmQgdGhlICBCYWhtYW5pZHMsIGFuZCB0aGUgQ29taW5nIG9mIHRoZSBQb3J0dWd1ZXNlLiBQYWdlIG5vLSAxNjMgYW5kIDE2NC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements with reference to the administration in the Maratha empire:  1. The offices of the council of ministers during Shivaji's rule were hereditary.  2. In matters of administration, Shivaji gave superior position to his civil officers as compared to military officers. Which of the above given statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgVGhlIGFkbWluaXN0cmF0aXZlIHN5c3RlbSBvZiB0aGUgTWFyYXRoYXMgdW5kZXIgS2luZyBTaGl2YWppIHdhcyBlZmZpY2llbnRseSBvcmdhbmlzZWQuICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIE1hcmF0aGEgS2luZ2RvbSB3YXMga25vd24gYXMgU3dhcmFqeWEuIFRoZSBraW5nIHdhcyB0aGUgcGl2b3Qgb2YgdGhlICBnb3Zlcm5tZW50LCB3aG8gd2FzIGFzc2lzdGVkIGJ5IGEgY291bmNpbCBvZiBtaW5pc3RlcnMgY2FsbGVkIHRoZSBBc2h0YXByYWRoYW4uIFVuZGVyIEtpbmcgU2hpdmFqaSwgdGhlICBhZG1pbmlzdHJhdGl2ZSBvZmZpY2VzIHdlcmUgbmVpdGhlciBoZXJlZGl0YXJ5IG5vciBwZXJtYW5lbnQgYW5kIHdlcmUgYWxzbyBmcmVxdWVudGx5IHRyYW5zZmVycmVkLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6ICAgSW4gbWF0dGVycyBvZiBhZG1pbmlzdHJhdGlvbiwgaGUgZ2F2ZSBzdXBlcmlvciBwb3NpdGlvbiB0byBoaXMgY2l2aWwgb2ZmaWNlcnMgYXMgIGNvbXBhcmVkIHRvIG1pbGl0YXJ5IG9mZmljZXJzLiBIZSBlc3RhYmxpc2hlZCBhIGtpbmQgb2YgUnlvdHdhcmkgc3lzdGVtIGluIHJldmVudWUgYWRtaW5pc3RyYXRpb24uIFRoZSAgc3RhdGUga2VwdCBkaXJlY3QgY29udGFjdCB3aXRoIHRoZSBmYXJtZXJzLiBTaGl2YWppIHRvb2sgc3BlY2lhbCBjYXJlIHRvIG1ha2UgaGlzIGFkbWluaXN0cmF0aXZlIHN5c3RlbSAgcmVzcG9uc2l2ZSB0byB0aGUgbmVlZHMgb2YgdGhlIHBlb3BsZS4gIFNvdXJjZTogIGh0dHBzOi8vZ2FjYmUuYWMuaW4vcGRmL2VtYXRlcmlhbC8xOEJEUzMzQy1VMS5wZGYgICAgaHR0cHM6Ly9vbGQuYW11LmFjLmluL2VtcC9zdHVkeW0vOTk5OTY2ODguUERGLnBkZiAgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzIwMjI2LzEvVW5pdC0xMC5wZGYgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to Maratha empire, 'Saranajam' land grants were related to which of the following?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgU2FyYW5qYW0gd2FzIGEgZ3JhbnQgb2YgbGFuZCBydWxlZCBieSBhIFNhcmFuamFtZGFyIGFtb25nIHRoZSBmb3JtZXIgTWFyYXRoYSBvY2N1cGllZCByZWdpb25zIG9mICBJbmRpYS4gIEEgU2FyYW5qYW0gaXMgYSBncmFudCBvZiBsYW5kIChpbml0aWFsbHkgbm9uLWhlcmVkaXRhcnkpIGZvciBtYWludGVuYW5jZSBvZiB0cm9vcHMgb3IgZm9yIG1pbGl0YXJ5ICBzZXJ2aWNlLiAgVGhlIGdyYW50IHdhcyBiZXN0b3dlZCBieSBhIGtpbmcgb3IgcmVnaW9uYWwgcnVsZXIgb2YgYSBwcmluY2VseSBzdGF0ZS4gVGhlIFNhcmFuamFtIHN5c3RlbSBtYXkgIGJlIGEgZm9ybSBvZiB0byB0aGUgSmFnaXIgKGZldWRhdG9yeSBlc3RhdGUpIHN5c3RlbS4gVGhlIGxhbmQgd2FzIG1vc3RseSBpbiB0aGUgZm9ybSBvZiBhIHJ1cmFsIFdhdGFuIChyaWdodHMgIGdpdmVuIGluIHJld2FyZCBmb3IgcHJldmlvdXMgc2VydmljZSBvciBtZXJpdCkgb3IgSmFnaXIsIGl0cyBvd25lciBiZWluZyBlbnRpdGxlZCB0byBleHRyYWN0IHJldmVudWUgZnJvbSB0aGUgIHZpbGxhZ2VzIGluY2x1ZGVkIGluIHRoZSB0ZXJyaXRvcnkuIFJhamFyYW0gQmhvbnNsZSAoMTY3MCAtIDE3MDApIGFkb3B0ZWQgdGhlIFNhcmFuamFtIHN5c3RlbSBhcyBhIHBvbGl0aWNhbCAgbWVhc3VyZSB0byBlbnN1cmUgdGhlIGxveWFsdHkgb2Yga2V5IHBlcnNvbnMgdG8gdGhlIHNpZGUgb2YgdGhlIE1hcmF0aGEgRW1waXJlLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LnNjcmliZC5jb20vZG9jdW1lbnQvNDkwMDAwNjMzL1NhcmFuamFtLVN5c3RlbS1wZGYgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Maintenance of troops or for military  service  ",
        "option2" : " Establishment of resting places for religious  travellers  ",
        "option3" : "  Creation of religious and praying sites for  minorities  ",
        "option4" : " land given to widowed women without any  heirs   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements with reference to the state of Awadh during the medieval Indian history:  1. Awadh was a prosperous region as it controlled fertile Ganga valley.  2. Under Wajid Ali Shah's patronage, Awadh region saw the golden age of Kathak. 3. Awadh was made a suba under the rule of Akbar.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgQXdhZGggd2FzIGVzdGFibGlzaGVkIGFzIG9uZSBvZiB0aGUgdHdlbHZlIG9yaWdpbmFsIHN1YmFocyAodG9wLWxldmVsIGltcGVyaWFsIHByb3ZpbmNlcykgdW5kZXIgTXVnaGFsICBlbXBlcm9yIEFrYmFyIGluIHRoZSAxNnRoIGNlbnR1cnkgYW5kIGJlY2FtZSBhIGhlcmVkaXRhcnkgdHJpYnV0YXJ5IHBvbGl0eSBhcm91bmQgMTcyMi4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBd2FkaCB3YXMgYSBwcm9zcGVyb3VzIHJlZ2lvbiBvdmVyIHRoZSByaWNoIGFsbHV2aWFsIEdhbmdhIHBsYWluIGFuZCB0aGUgbWFpbiAgdHJhZGUgcm91dGUgY29ubmVjdGluZyBub3J0aCBJbmRpYSBhbmQgQmVuZ2FsLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFdhamlkIEFsaSBTaGFoIHdhcyBhIG11bmlmaWNlbnQgcGF0cm9uIG9mIG11c2ljLCBkYW5jZSwgZHJhbWEsIGFuZCBwb2V0cnkuIFVuZGVyICBoaXMgcGF0cm9uYWdlLCBBd2FkaCByZWdpb24gc2F3IHRoZSBnb2xkZW4gYWdlIG9mIEthdGhhay4gVG9nZXRoZXIgd2l0aCBtdXNpYywgZGFuY2UgaW4gTHVja25vdyAgZGV2ZWxvcGVkIHN0cm9uZ2x5IGFuZCBiZWNhbWUgYSBwcmUtZW1pbmVudCBhcnQgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBXYWppZCBBbGkgU2hhaC4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBJbiB0aGUgbWlkIDE2dGggY2VudHVyeSwgYWZ0ZXIgc3VjY2Vzc2lvbiBvZiBtYW55IHNtYWxsIGFuZCBiaWcgTXVzbGltIGR5bmFzdGllcywgIHRoZSBNdWdoYWxzIHRvb2sgb3ZlciBBd2FkaCB1bmRlciBIdW1heXVuIGFuZCBoaXMgaWxsdXN0cmlvdXMgc29uIEFrYmFyIG1hZGUgQXdhZGggYSBwcm92aW5jZSBvciAgU3ViYSwgYXMgcGFydCBvZiBoaXMgc3ViZWRhcmkgc3lzdGVtLiAgU291cmNlOiAgaHR0cHM6Ly9uY2VydC5uaWMuaW4gZXh0Ym9vay9wZGYvbGVoczMwMi5wZGYgICAgaHR0cDovL2VwZ3AuaW5mbGlibmV0LmFjLmluL2VwZ3BkYXRhL3VwbG9hZHMvZXBncF9jb250ZW50L1MwMDA0NTFQQS9QMDAxNTMwL00wMTc3OTcvRVQvMTQ4MTEgODY1MTVQNE0xMFRFWFQucGRmICAgIGh0dHBzOi8vbGlmZXN0eWxlLmxpdmVtaW50LmNvbS9uZXdzIGFsa2luZy1wb2ludCBoZS1zdG9yeS1vZi13YWppZC1hbGktc2hhaC1mcm9tLXJpY2hlcy10by1yYWdzLSAxMTE2NDY5Nzk0MTA2MjAuaHRtbCAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 6,
      "question" : "Which one of the following statements regarding 'Economy under Maratha Empire' is incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFVuZGVyIHRoZSBNYXJhdGhhcyBydWxlLCB0aGVyZSB3ZXJlIG5vIGZvcm1hbCBpbnN0aXR1dGlvbnMgZm9yIHRyYWluaW5nIHRoZSBhcnRpc2Fucy4gVGhlIGFydGlzYW5zIGxpa2UgIFRhZ2F0aXMsIE1vbWlucywgUGFkbWFzaGFsaXMsIEtoZXRyaXMgYW5kIE5pcmFsYXMsIHdlcmUgaW4gY29uc3RhbnQgZGVtYW5kLiBUaGVzZSBhcnRpc2FucyB3ZXJlIHJlcXVpcmVkICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgZm9yIHZhcmlvdXMgaW5kdXN0cmllcyBhbmQgaGFuZGljcmFmdHMgbW9zdGx5IHRleHRpbGUgaW5kdXN0cnkuIFRoZSBNYXJhdGhhIEdvdmVybm1lbnQgdXNlZCB0byBpbmR1Y2UgIHRoZW0gdG8gbWlncmF0ZSBhbmQgc2V0dGxlIGluIHRoZWlyIHRlcnJpdG9yaWVzLiBUaGUgTWFyYXRoYXMgYWxzbyBoZWxwZWQgdGhlbSB2YXJpb3VzbHkgYnkgcHJvdmlkZWQgdGhlbSAgd2l0aCBhIHBsYWNlIHRvIGxpdmUsIGV4dGVuZGVkIHN0YXRlIHBhdHJvbmFnZSwgZXhlbXB0ZWQgdGhlbSBmcm9tIGhvdXNlIHRheGVzLCBwYWlkIHRoZW0gbW9udGhseSBzYWxhcnkgIGFuZCBhZHZhbmNlZCBmaW5hbmNpYWwgYXNzaXN0YW5jZS4gICBTdGF0ZW1lbnQgYSBpcyBjb3JyZWN0LiBUaGUgdW5pdCBvZiB0aGUgZWNvbm9teSB3YXMgdGhlIHZpbGxhZ2UgYW5kIGxhbmQgcmV2ZW51ZSB3ZXJlIGFuIGltcG9ydGFudCAgc291cmNlIG9mIHJldmVudWUgZm9yIHRoZSBNYXJhdGhhcy4gICAgU3RhdGVtZW50IGIgaXMgaW5jb3JyZWN0LiBUaGUgYXJ0aXNhbnMgb2YgdGhlIHZpbGxhZ2UgbWFudWZhY3R1cmVkIHRoZSBhcnRpY2xlcywgd2hpY2ggd2VyZSBjb25zdW1lZCAgbG9jYWxseSwgdGhleSBnZW5lcmFsbHkgbmV2ZXIgbmVlZGVkIGFueSBtYXJrZXQgZm9yIHRoZWlyIGZpbmlzaGVkIHByb2R1Y3RzLiBUaGVyZWZvcmUsIHRoZSB2aWxsYWdlcyB3ZXJlICBvZnRlbiBpbiBzZWFyY2ggb2Ygc3VjaCBza2lsbGVkIGFydGlzYW5zLiBUaGUgcGVvcGxlIG9mIEthc2JhLCB3aGVyZSBiaWdnZXIgbWFya2V0IHdhcyBoZWxkIHdlZWtseSBhbmQgIGluZHVzdHJpYWwgcHJvZHVjdHMgd2VyZSBleGNoYW5nZWQgYWxzbyBzZWFyY2hlZCBvdXQgZm9yIGFydGlzYW5zLiAgIFN0YXRlbWVudCBjIGlzIGNvcnJlY3QuIEluIG9yZGVyIHRvIGd1YXJkIHRoZSBpbnRlcmVzdCBvZiBjb21tb24gbWFuLCB0byBpbmNyZWFzZSBwcm9kdWN0aW9uIG9mIGluZHVzdHJpZXMgIGFuZCBjaGVjayBzb21lIHVuaGVhbHRoeSBwcmFjdGljZXMgaW4gaW5kdXN0cnksIHRoZSBNYXJhdGhhIEdvdmVybm1lbnQgbW9zdGx5IHRoZSBQZXNod2FzIGJyb3VnaHQgIGNlcnRhaW4gaW5kdXN0cmllcyB1bmRlciB0aGUgc3RhdGUgY29udHJvbC4gRGlhbW9uZCBJbmR1c3RyeSwgU2FsdCBJbmR1c3RyeSwgVG9iYWNjbyBhbmQgTWludCB3ZXJlIHNvbWUgIG9mIGluZHVzdHJpZXMgdW5kZXIgc3RhdGUgY29udHJvbC4gICBTdGF0ZW1lbnQgZCBpcyBjb3JyZWN0LiBTaGlwIEJ1aWxkaW5nIGluZHVzdHJ5IHdhcyBvbmUgb2YgdGhlIGJpZ2dlc3QgdXJiYW4gaW5kdXN0cmllcyBmdW5jdGlvbmluZyB1bmRlciAgdGhlIE1hcmF0aGFzLiBJbiB0aGUgc2V2ZW50ZWVudGggY2VudHVyeSwgaW4gdGhlIGVhc3Rlcm4gRGVjY2FuLCBwbGFjZXMgbGlrZSBOYXJhc3B1ciBhbmQgTWFzdWxpcGF0YW5hbSAgYmVjYW1lIHZlcnkgcG9wdWxhciBjZW50cmVzIG9mIHNoaXBidWlsZGluZy4gQmVjYXVzZSwgdGhlIHJhdyBtYXRlcmlhbHMgbGlrZSB0aW1iZXIsIGlyb24gYW5kIG90aGVyICBuZWNlc3NhcnkgaXRlbXMgd2VyZSBmb3VuZCBpbiBhYnVuZGFudCBudW1iZXIgdGhlcmUgICBTb3VyY2U6ICBNLkEuIC0gSUkgLSBIaXN0b3J5IC0gVklJSS5wZGYgKG11LmFjLmluKSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The unit of the economy was the village and  land revenue were an important source of  revenue for the Marathas   ",
        "option2" : "Maratha rulers created many formal  institutions for training the artisans to boost  exports of handicraft items.  ",
        "option3" : "Certain industries were brought under the  Maratha government in order to guard  interest of common man.  ",
        "option4" : "Ship Building was one of the biggest urban  industries functioning under the Maratha  empire.   "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements:  1. Sikhs were organised by Guru Arjun Dev into a well-coordinated military force called Khalsa.  2. Only after the removal of the threat of Afghan invasion, Misls became democratic in nature.  Which of the statement(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3Qgc3RhdGVtZW50LiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gV2l0aCBLaGFsc2Egc2VydmluZyBhcyBpdHMgb3JnYW5pc2F0aW9uYWwgY2VudHJlLCBHdXJ1IEdvdmluZCBTaW5naCBvcmdhbmlzZWQgIHRoZSBTaWtocyBpbnRvIGEgd2VsbC1vcmdhbml6ZWQgbWlsaXRhcnkgZm9yY2UuICAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIGZvdW5kaW5nIGlkZWEgb2YgTWlzbHMgd2FzIGVxdWFsaXR5LCB3aGVyZSBlYWNoIG1lbWJlciBoYWQgYW4gZXF1YWwgdm9pY2UgIGluIHJlc29sdmluZyB0aGUgYWZmYWlycyBvZiB0aGVpciBpbmRpdmlkdWFsIE1pc2xzIGFuZCBlbGVjdGluZyB0aGUgQ2hpZWYgYW5kIG90aGVyIG9mZmljZXJzLiBXaXRoIHRoZSBwcm9zcGVjdCAgb2YgdGhlIEFmZ2hhbiBpbnZhc2lvbiBubyBsb25nZXIgcHJlc2VudCwgdGhlIE1pc2xzJyBvcmlnaW5hbCBzZW5zZSBvZiB0b2dldGhlcm5lc3MgYW5kIGRlbW9jcmF0aWMgIG5hdHVyZSBncmFkdWFsbHkgZmFkZWQuICAgU291cmNlOiAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS83Mzg1My8xL1VuaXQtMi5wZGYgICBodHRwczovL3d3dy5pbmRpYXRvZGF5LmluL2VkdWNhdGlvbi10b2RheS9nay1jdXJyZW50LWFmZmFpcnMvc3RvcnkvbGlvbi1vZi1wdW5qYWItbWFoYXJhamEtcmFuaml0LSBzaW5naC1zaWtoLWVtcGlyZS1nb2xkZW4tdGVtcGxlLTEzODc0NjMtMjAxOC0xMS0xMyAgIGh0dHBzOi8vd3d3LnNhbnNhcmxvY2hhbi5pbi9lbi9tYWhhcmFqYS1yYW5qaXQtc2luZ2gtY2FyZWVyLSBhY2hpZXZlbWVudHMvIzp+OnRleHQ9UmFuaml0JTIwU2luZ2glMjBjb25xdWVyZWQlMjBLYW5ncmElMjBWYWxsZXksMTgyMSUyQyUyMGFuZCUyMFBlc2hhIHdhciUyMGluJTIwMTgyMy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2        "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements:  1. Nadir Shah invaded India because the Mughals gave asylum to the Afghans.  2. Both invasion of Nadir Shah and Ahmad Shah Abdali paved the way for British to strengthen their foothold in India.   Which of the statement(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFdoZW4gTmFkaXIgU2hhaCB3YXMgd2FnaW5nIHdhciBpbiBBZmdoYW5pc3RhbiwgaGUgbWFkZSBpdCBjbGVhciB0byB0aGUgTXVnaGFscyAgdGhhdCBubyBmdWdpdGl2ZSBmcm9tIHRoYXQgY291bnRyeSBzaG91bGQgYmUgYWxsb3dlZCB0byBzZWVrIHJlZnVnZSB0aGVyZS4gTmFkaXIgU2hhaCwgaG93ZXZlciwgdG9vayAgb2ZmZW5jZSB3aGVuIGhlIGxlYXJuZWQgdGhhdCBtYW55IEFmZ2hhbnMgaGFkIHNvdWdodCByZWZ1Z2Ugd2l0aGluIHRoZSBNdWdoYWwgRW1waXJlLiBUaGUgdGhpcmQgdGltZSwgIE5hZGlyIFNoYWggZGlzcGF0Y2hlZCBvbmUgb2YgaGlzIGVudm95cyB0byBEZWxoaSBidXQgdGhlIE11Z2hhbHMgaW4gRGVsaGkgZGlkIG5vdCBnYXZlIGFueSBpbXBvcnRhbmNlIHRvICBpdC4gTmFkaXIgU2hhaCBjb25zaWRlcmVkIHRoaXMgYXMgYW4gaW5zdWx0IGFuZCBpbnZhZGVkIEluZGlhLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIE5hZGlyIFNoYWggaGFkIHBsdW5kZXJlZCBJbmRpYSBvZiBzbyBtdWNoIG1vbmV5IHRoYXQgaGUgZXhlbXB0ZWQgaGlzICBjb3VudHJ5bWVuIGZyb20gcGF5aW5nIHRheGVzIGZvciB0aHJlZSB5ZWFycy4gVGhvdXNhbmRzIG9mIGVsZXBoYW50cywgY2FtZWxzLCBhbmQgaG9yc2VzIHdlcmUgYWxzbyB0YWtlbiAgYnkgaGltLiBBbiBpbXBvdmVyaXNoZWQsIGFuZCB3ZWFrZW5lZCBNdWdoYWwgcmVnaW1lIHRoZW4gYmVjYW1lIGFuIGVhc3kgdGFyZ2V0IGZvciB0aGUgQnJpdGlzaC4gICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFRoZSBNYXJhdGhhIGF0dGVtcHQgdG8gc3VjY2VlZCB0aGUgTXVnaGFscyBhcyBJbmRpYSdzIHJ1bGVycyB3YXMgdmFucXVpc2hlZCBpbiB0aGUgdGhpcmQgYmF0dGxlIG9mIFBhbmlwYXQsICB3aGljaCBhbHNvIGVzc2VudGlhbGx5IGJyb3VnaHQgYW4gZW5kIHRvIHRoZSBNdWdoYWwgZW1waXJlLiBBZnRlciB0aGlzIGJhdHRsZSBjb2xvbmlhbCBydWxlIHN0YXJ0ZWQuICAgU291cmNlOiAgaHR0cHM6Ly93d3cub3BpbmRpYS5jb20vMjAyMi8wNS9ob3ctbXVnaGFscy1sb3N0LXRvLW5hZGlyLXNoYWgtYW5kLXN1cnJlbmRlcmVkLSBhZmdoYW5pc3Rhbi1wZWFjb2NrLXRocm9uZS13ZWFsdGgtaW5kdXMvICAgaHR0cDovL3d3dy5hY2FkZW1pY2pvdXJuYWwuaW4vZG93bmxvYWQvMTU1Mi8zLTItMTUtOTY3LnBkZiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 9,
      "question" : "Despite emerging as a great power in India, why Marathas could not succeed in preventing the establishment of British power in India?  1. Due to lack of unity among Maratha chief.  2. They failed to perfect the European means of warfare adopted by them.  3. Jagirdari system grew during the Maratha reign.  Select the correct answer using the codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBUaGUgTWFyYXRoYSBlbXBpcmUgd2FzIG5vdCBhIGNsb3NlLWtuaXQgZW1waXJlIHJ1bGVkIGJ5IGEgc2luZ2xlIHJ1bGVyLiBGaXZlICBNYXJhdGhhIGNoaWVmcyBmb3JtZWQgYSBjb25mZWRlcmFjeTsgdGhleSBmcmVxdWVudGx5IGVuZ2FnZWQgaW4gY29uZmxpY3Qgd2l0aCBvbmUgYW5vdGhlci4gVGhlIG5vbWluYWwgIHVuaXR5IG9mIHRoZSBNYXJhdGhhcyByZW1haW5lZCBvbmx5IHVwIHRvIHRoZSBwZXJpb2Qgb2YgdGhlIHJ1bGUgb2YgUGVzaHdhIE1hZGhhdiBSYW8gSS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBTaW5jZSB0aGUgTWFyYXRoYXMgYWRvcHRlZCBFdXJvcGVhbiBtZXRob2RzIG9mIHdhcmZhcmUgd2l0aG91dCBwZXJmZWN0aW5nICB0aGVtLCBtb3N0IGhpc3RvcmlhbnMgYWdyZWUgdGhhdCB0aGlzIHdhcyB0aGUgbWFpbiByZWFzb24gZm9yIHRoZWlyIG1pbGl0YXJ5IGluZWZmaWNpZW5jeS4gVGhlIGZhY3RvcmllcyAgIGJ1aWx0IGJ5IFBlc2h3YSBhbmQgU2NpbmRoaWEgdG8gbWFrZSB3ZWFwb25zIGFuZCBhcnNlbmFscyBkaWQgbm90IHByb2R1Y2UgZW5vdWdoIGhpZ2gtIHF1YWxpdHkgbWF0ZXJpYWxzLiAgVGhlIE1hcmF0aGEgc29sZGllcnMgdHJhaW5lZCBieSB0aGUgRnJlbmNoIHVzaW5nIEV1cm9wZWFuIHRlY2huaXF1ZXMgd2VyZSBub3QgIHBlcmZlY3RseSB0cmFpbmVkLiBUaGUgTWFyYXRoYXMnIHJlbGlhbmNlIG9uIHRoZSBGcmVuY2ggZm9yIG1pbGl0YXJ5IGluc3RydWN0aW9uIGFuZCBhcm15IGxlYWRlcnNoaXAgYWxzbyAgdHVybmVkIG91dCB0byBiZSBhIHdlYWtuZXNzIGJlY2F1c2UgdGhlIEZyZW5jaCBsYXJnZWx5IGFiYW5kb25lZCB0aGVtIHdoZW4gdGhleSBuZWVkZWQgdGhlbSBtb3N0LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBKYWdpcmRhcmkgc3lzdGVtIGRldmVsb3BlZCBhbW9uZyB0aGUgTWFyYXRoYXMgZHVyaW5nIHRoZSBNYXJhdGhhIGJhdHRsZSAgb2YgaW5kZXBlbmRlbmNlIGFnYWluc3QgQXVyYW5nemViLCB3aGVuIGVhY2ggTWFyYXRoYSBjb21tYW5kZXIgd2FzIHBlcm1pdHRlZCB0byByZXRhaW4gYXMgaGlzIG93biAgamFnaXIgdGhlIGxhbmQgY29ucXVlcmVkIHRocm91Z2ggaGlzIG93biBlZmZvcnRzLiBBcyBhIHJlc3VsdCwgdGhlIE1hcmF0aGEgZW1waXJlIGV2ZW50dWFsbHkgZGlzaW50ZWdyYXRlZCAgYW5kIHRoZSBNYXJhdGhhIGNvbmZlZGVyYWN5IHdhcyBjcmVhdGVkLiBJbiBhZGRpdGlvbiwgTWFyYXRoYSBsZWFkZXJzIGdhdmUgdGhlaXIgb2ZmaWNlcnMgamFnaXJzIHRvIG1ha2UgaXQgIGVhc2llciBmb3IgdGhlbSB0byBjb2xsZWN0IENoYXV0aCBhbmQgU2FyZGVzaG11a2hpLCB3aGljaCBwcm9tb3RlZCB0aGUgZXhwYW5zaW9uIG9mIHRoZSBqYWdpcmRhcmkgc3lzdGVtLiAgVGhlIGFycmFuZ2VtZW50IGZvcmJhZGUgTWFyYXRoYSBjaGllZnMgZnJvbSBjZW50cmFsaXNpbmcgdGhlaXIgZWNvbm9taWMgcmVzb3VyY2VzLCB3aGljaCB3b3VsZCBoYXZlICBhbHNvIGluY2x1ZGVkIHRoZWlyIG1pbGl0YXJ5IHJlc291cmNlcy4gSW4gZXZlcnkgd2F5LCBpdCBtYWRlIE1hcmF0aGEgbGVhZGVycyB3ZWFrZXIuICAgU291cmNlOiAgaHR0cHM6Ly93d3cuc2Fuc2FybG9jaGFuLmluL2VuL2Rvd25mYWxsLW9mLW1hcmF0aGFzLWNhdXNlcy8gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 only  ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to the Maratha confederacy, consider the following statements:  1. Originally the Peshwa was a non-hereditary prime minister.  2. The entire Maratha confederacy was a centralised system with less autonomy to the regional chiefs.  Which of the statement(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIE9yaWdpbmFsbHkgdGhlIFBlc2h3YSB3YXMgb25seSBhIG11a2h5YXByYWRoYW4gb3IgcHJpbWUgbWluaXN0ZXIgYW5kIGhpcyBwb3N0ICB3YXMgbm90IGhlcmVkaXRhcnkuIFdoZW4gQmFqaSBSYW8sIEJhbGFqaSBWaXNod2FuYXRoJ3Mgc29uLCBiZWNhbWUgUGVzaHdhIGluIDE3MjAsIHRoZSBvZmZpY2UgYmVjYW1lICBoZXJlZGl0YXJ5LiBJbiAxNzQwIEJhbGFqaSBCYWppIFJhbyAoTmFuYSBTYWhlYikgYmVjYW1lIFBlc2h3YS4gVGlsbCBTaGFodSdzIGRlYXRoIGluIDE3NDkgaGUgd2FzIHN0aWxsIHVuZGVyICB0aGUgcmVzdHJhaW50IG9mIHRoZSBSYWphIG9mIFNhdHJhLiBUaGVyZWFmdGVyIGhlIHZpcnR1YWxseSBkaXNsb2RnZWQgdGhlIEtpbmcgZnJvbSBzb3ZlcmVpZ24gcG93ZXIuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBNYXJhdGhhIGRvbWluaW9uIGNhbiBiZSBicm9hZGx5IGRpdmlkZWQgaW50byB3aGF0IGhhdmUgYmVlbiBjYWxsZWQgbm9uLSByZWd1bGF0aW9uIGFuZCByZWd1bGF0aW9uIGFyZWFzLiAgICBJbiB0aGUgbm9uLXJlZ3VsYXRpb24gYXJlYXMsIHphbWluZGFycywgYXV0b25vbW91cyBhbmQgc2VtaS1hdXRvbm9tb3VzIGNoaWVmcyB3ZXJlIGxlZnQgd2l0aCBpbnRlcm5hbCAgYWRtaW5pc3RyYXRpdmUgYXV0b25vbXkuIFRoZSBraW5nJ3MgdHJpYnV0ZSBkZW1hbmQgZnJvbSB0aGVzZSBhcmVhcywgaW4gY29udHJhc3Qgd2l0aCB0aGUgbGFuZCByZXZlbnVlICBkZW1hbmQgZnJvbSByZWd1bGF0aW9uIGFyZWFzLCB3YXMgbm90IGJhc2VkIG9uIGFuIGFzc2Vzc21lbnQgb2YgdGhlIGNoaWVmcyByZXNvdXJjZXMgYnV0IG1vcmUgaW4gIHByb3BvcnRpb24gdG8gdGhlaXIgcG93ZXIgb2YgcmVzaXN0YW5jZSwgdGhlIHdlYWtlciBvbmVzIHBheWluZyBtb3JlIHRoYW4gdGhlIHN0cm9uZ2VyLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LnN0dWRvY3UuY29tL2luL2RvY3VtZW50L2FsaWdhcmgtbXVzbGltLXVuaXZlcnNpdHkvbW9kZXJuLWluZGlhbi0gaGlzdG9yeSBoZS1jb25mZWRlcmFjeS1vZi1tYXJhdGhhcy8yMTQ0MDQ2OSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1 and 2 only   "
      }
    },
    {
      "index" : 11,
      "question" : "Arrange the following events in correct chronological order  1. Declaration of Shivaji as the ruler of Maratha kingdom.  2. Third battle of Panipat  3. Balaji Vishwanath signed 'Treaty of Lonavala' with Kanhoji Angre.  4. Appointment of Baji Rao I as Peshwa.  Select the correct answer using the codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFNoaXZhamkgd2FzIGRlY2xhcmVkIHRoZSBydWxlciBvZiB0aGUgTWFyYXRoYSBraW5nZG9tIG9uIEp1bmUgNiwgMTY3NC4gU2hpdmFqaSdzIGNvcm9uYXRpb24gd2FzIGNvbmR1Y3RlZCAgaW4gc3VjaCBhIHdheSB0aGF0IGl0IHNlcnZlZCBhcyBhIHdhcm5pbmcgdG8gYWxsIHRoZSBub24tSGluZHUga2luZ3MuIFRoZSBNdWdoYWxzIHdlcmUgaW1tZWRpYXRlbHkgd2FybmVkICB3aGVuIFNoaXZhamkgbWFkZSBoaW1zZWxmIGtub3duIG9uIHRoZSBsYXJnZSBzdGFnZS4gSW4gYWRkaXRpb24sIFNoaXZhamkgd2FzIGdpdmVuIHRoZSB0aXRsZSAiQ2hoYXRyYXBhdGksIiAgbWFraW5nIGhpbSB0aGUgcnVsZXIgb2YgdGhlIG5ldyBNYXJhdGhhIGVtcGlyZS4gICBTdGF0ZW1lbnQgMyAgIFRoZSBzaWduaW5nIG9mIHRoZSAnVHJlYXR5IG9mIExvbmF2YWxhJyBiZXR3ZWVuIEJhbGFqaSBWaXNod2FuYXRoIGFuZCBLYW5ob2ppIEFuZ3JlIGluIDE3MTQsIHByb3ZpZGVkICB0aGUgTWFyYXRoYXMgYWNjZXNzIHRvIGEgbmF2eS4gVGhlIE1hcmF0aGFzJyBhcm15IGNvbnRpbnVlZCB0byBleHBhbmQsIHdoaWNoIGdhdmUgdGhlbSB0aGUgY29uZmlkZW5jZSAgdG8gYWR2YW5jZSB0byBEZWxoaSBpbiAxNzE5LCB3aGVyZSB0aGV5IHdlcmUgYWJsZSB0byBvdmVydGhyb3cgdGhlIE11Z2hhbCBnb3Zlcm5vciBTYXl5aWQgSHVzc2FpbiBBbGkgIGJlZm9yZSB0b3BwbGluZyB0aGUgcmVpZ25pbmcgTXVnaGFsIGVtcGVyb3IuIFRoZSBhbHJlYWR5IGZyYWdpbGUgTXVnaGFsIEVtcGlyZSBiZWdhbiB0byB3b3JyeSB0aGUgIE1hcmF0aGFzIGZyb20gdGhpcyBtb21lbnQuICAgU3RhdGVtZW50IDQgICBGb2xsb3dpbmcgdGhlIGRlYXRoIG9mIGhpcyBmYXRoZXIgQmFsYWppIFZpc2h3YW5hdGgsIEJhamkgUmFvIEkgd2FzIGFwcG9pbnRlZCBhcyB0aGUgbmV4dCBQZXNod2Egb2YgdGhlICBlbXBpcmUgaW4gMTcyMC4gQmFqaSBSYW8gd2FzIGluc3RydW1lbnRhbCBpbiB0aGUgTWFyYXRoYSBFbXBpcmUncyByYXBpZCBleHBhbnNpb24gYmV0d2VlbiAxNzIwIGFuZCAxNzQwLCAgYW5kIGhlIGxhdGVyIHJvc2UgdG8gcHJvbWluZW5jZSBhcyBhIFBlc2h3YS4gQmFqaSBSYW8gSSBsZWQgdGhlIE1hcmF0aGEgYXJtaWVzIGluIG92ZXIgNDAgZW5nYWdlbWVudHMsICB3aW5uaW5nIHRoZSBtYWpvcml0eSBvZiB0aGVtLiAgIFN0YXRlbWVudCAyICAgVGhlIGdyb3d0aCBvZiBNYXJhdGhhIGRvbWluYW5jZSBpbiB0aGUgbm9ydGhlcm4gcmVnaW9ucyBvZiB0aGUgSW5kaWFuIHN1YmNvbnRpbmVudCByYWlzZWQgc2VyaW91cyAgY29uY2VybnMgaW4gdGhlIGNvdXJ0IG9mIEFobWFkIFNoYWggRHVycmFuaS4gRHVycmFuaSBqb2luZWQgZm9yY2VzIHdpdGggdGhlIE5hd2FiIG9mIE91ZGggYW5kIHRoZSAgUm9oaWxsYXMgYW5kIGNoYWxsZW5nZWQgdGhlIE1hcmF0aGFzIHRvIGEgZmlnaHQgaW4gYW4gZWZmb3J0IHRvIHJlbW92ZSB0aGVtIGZyb20gTm9ydGggSW5kaWEuIFRoZSAgc3Vic2VxdWVudCBjb25mbGljdCwgd2hpY2ggb2NjdXJyZWQgb24gSmFudWFyeSAxNCwgMTc2MSwgY2FtZSB0byBiZSBrbm93biBhcyB0aGUgIlRoaXJkIEJhdHRsZSBvZiAgUGFuaXBhdC4iICAgU291cmNlOiAgaHR0cHM6Ly9sZWFybi5jdWx0dXJhbGluZGlhLm5ldCBoZS1tYXJhdGhhLWVtcGlyZS5odG1sICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-3-4-2  ",
        "option2" : "1-2-3-4  ",
        "option3" : "2-3-1-4  ",
        "option4" : "2-4-1-3   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to the tax system during Marathas, consider the following statements:  1. Sardeshmukhi was the land revenue paid to the Marathas in order to avoid the Maratha raids.   2. Chauth was nominally levied at 25% on revenue or produce.  Which of the statement(s) given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIHRoZSBsYXRlciBzZXZlbnRlZW50aCBjZW50dXJ5LCBTaGl2YWppIGNsYWltZWQgdG8gaGF2ZSB0aGUgYXV0aG9yaXR5IHRvIGFzc2VzcyBhbmQgY29sbGVjdCB0aGlzIGxldnkgb24gdGhlICBmaWN0aXRpb3VzIGdyb3VuZHMgdGhhdCBoaXMgZmFtaWx5IGhhZCBiZWVuIE1haGFyYXNodHJhJ3MgdHJhZGl0aW9uYWwgdGF4IGNvbGxlY3RvcnMuIFRoZSB0YXhlcyBrbm93biBhcyAgY2hhdXRoIGFuZCBzYXJkZXNobXVraGkgd2VyZSBsZXZpZWQgaW4gdGhlIG5laWdoYm91cmluZyBNdWdoYWwgRW1waXJlIG9yIERlY2NhbiBTdWx0YW5hdGVzIGFuZCBub3QgIG9uIHRoZSBNYXJhdGhhIGtpbmdkb20uICAgU2FyZGVzaG11a2hpIHdhcyBpbXBvc2VkIGJ5IFNoaXZhamkgaW4gaGlzIG93biBkb21pbmlvbiAoc3dhcmFqKSBvbiB0aGUgYmFzaXMgb2YgaGlzIGNsYWltIGFzIGhlcmVkaXRhcnkgIHNhcmRlc2htdWtoIG9mIHRoZSBkb21pbmlvbi4gVGh1cywgaXQgd2FzIGNsYWltZWQgYnkgU2hpdmFqaSBhcyBhIG1hdHRlciBvZiByaWdodCB1bmxpa2UgY2hhdXRoLiBJdCB3YXMgMTAgIHBlciBjZW50IG9mIHRoZSB0b3RhbCByZXZlbnVlIHJlYWxpemVkLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QuIFNhcmRlc2htdWtoaSB3YXMgYW4gYWRkaXRpb25hbCBsZXZ5IG9mIHRlbiBwZXJjZW50IG9uIHRob3NlIGxhbmRzIHdoaWNoIHRoZSAgTWFyYXRoYXMgY2xhaW1lZCBoZXJlZGl0YXJ5IHJpZ2h0cy4gVGhpcyB3YXMgYW4gYWRkaXRpb25hbCAxMCUgbGV2eSBvbiB0b3Agb2YgdGhlIGNoYXV0aC4gQ2hhdXRoIChhbmQgbm90ICBzYXJkZXNobXVraGkpIHdhcyBwYWlkIHRvIHRoZSBNYXJhdGhhcyBpbiBvcmRlciB0byBhdm9pZCB0aGUgTWFyYXRoYSByYWlkcy4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVGhlIE1hcmF0aGEgRW1waXJlIGluIEluZGlhIGxldmllZCB0aGUgY2hhdXRoLCBhIHRheCBvciB0cmlidXRlLCBiZWdpbm5pbmcgaW4gdGhlICBlYXJseSBlaWdodGVlbnRoIGNlbnR1cnkuIEl0IHdhcyBvZnRlbiBhc3Nlc3NlZCBhdCBhIHJhdGUgb2YgMjUlIG9uIHJldmVudWUgb3IgcHJvZHVjZS4gVGhpcyB3YXMgcGFpZCB0byAgdGhlIE1hcmF0aGFzIGluIG9yZGVyIHRvIGF2b2lkIHRoZSBNYXJhdGhhIHJhaWRzLiAgIFNvdXJjZTogIGh0dHBzOi8vd3d3LnlvdXJhcnRpY2xlbGlicmFyeS5jb20vaGlzdG9yeSBoZS1zeXN0ZW0tb2YtdGhlLWNvbGxlY3Rpb24tb2YtY2hhdXRoLWFuZC0gc2FyZGVzaG11a2hpLWJ5LXRoZS1tYXJhdGhhLXJ1bGVycy80MzQ1ICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to Lepakshi temple, consider the following statements:  1.  It was built by the Cholas of the south India.  2.  Its presiding deity is a fiery god created by Shiva in his rage.  3.  It has some of the finest specimens of mural paintings.  Which of the statements given above are correct?  Options:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBMZXBha3NoaSB0ZW1wbGUgaXMgYWxzbyBrbm93biBhcyBWZWVyYWJoYWRyYSB0ZW1wbGUuIEl0IGlzIHNpdHVhdGVkIGluIExlcGFrc2hpLCBpbiB0aGUgQW5hbnRwdXIgRGlzdHJpY3Qgb2YgIEFuZGhyYSBQcmFkZXNoLiBUaGUgdGVtcGxlIGNhbiBiZSBkaXZpZGVkIGludG8gdmFyaW91cyBzZWN0aW9ucyAnTXVraGFNYW5kYXBhJywgJ0FydGhhTWFuZGFwYScgYW5kICAnR2FyYmhhR3JpaGEnLCBhbmQgdGhlICdLYWx5YW5hTWFuZGFwYScuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogTGVwYWtzaGkgdGVtcGxlIHdhcyBidWlsdCBieSBWaXJ1cGFubmEgYW5kIFZlZXJhbm5hIHVuZGVyIHRoZSBydWxlIG9mICBWaWpheWFuYWdhcmEga2luZyBBY2h5dXRhIERldmFyYXlhLiBUaGUgb3JpZ2luYWwgc3RydWN0dXJlIGlzIHNhaWQgdG8gaGF2ZSBiZWVuIGJ1aWx0IGJ5IFNhZ2UgQWdhc3R5YSwgYW5kICBmaW5kcyBtZW50aW9uIGluIHRoZSBTa2FuZGEgUHVyYW5hIGFzIG9uZSBvZiB0aGUgMTA4IFNhaXZhaXRlIHBpbGdyaW1hZ2UgY2VudHJlcyBvZiBhbmNpZW50IEluZGlhLiAgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgdGVtcGxlJ3MgbWFpbiBkZWl0eSBpcyBWZWVyYWJoYWRyYSwgdGhlIGZpZXJ5IGdvZCBjcmVhdGVkIGJ5IFNoaXZhIGluIGhpcyByYWdlICBhZnRlciB0aGUgRGFrc2hhIFlhZ25hIGFuZCB0aGUgaW1tb2xhdGlvbiBvZiBQYXJ2YXRoaS4gIEEgbGlmZS1zaXplIGltYWdlIG9mIExvcmQgVmVlcmFiaGFkcmEsIHdpZWxkaW5nICBhcm1zIGFuZCBkZWNvcmF0ZWQgd2l0aCBza3VsbHMgaXMgaW5zdGFsbGVkIGluIHRoZSBTYW5jdHVtIFNhbmN0b3J1bS4gQXBhcnQgZnJvbSBWZWVyYWJoYWRyYSwgdGhlcmUgYXJlICBzaHJpbmVzIGRlZGljYXRlZCB0byBEdXJnYSwgUGFwYW5hc2VzdmFyYSwgUmFnaHVuYXRoYSwgUGFydmF0aSwgUmFtYWxpbmdhLCBhbmQgSGFudW1hbGluZ2EuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlIExlcGFrc2hpIHRlbXBsZSBhbHNvIGhhcyB0aGUgZmluZXN0IHNwZWNpbWVucyBvZiBtdXJhbCBwYWludGluZ3Mgb2YgdGhlICBWaWpheWFuYWdhciBraW5ncy4gIFRoZSB0ZW1wbGUgaXMgZmFtb3VzIGZvciBpdHMgbG9uZy1waWxsYXJlZCBoYWxscy4gSW50cmljYXRlIGNhcnZpbmdzIG9mIHlhbGlzLCBmbG93ZXJzLCB0cmVlcywgIGFuaW1hbHMsIHlha3NoYXMgYW5kIHlha3NoaXMgY2FuIGJlIHNlZW4gb24gZWFjaCBwaWxsYXIuICAgU291cmNlOiAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL3NvY2lldHkvaGlzdG9yeS1hbmQtY3VsdHVyZS9sZXBha3NoaS10ZW1wbGUtYS1tYXJ2ZWwtaW4tIHN0b25lL2FydGljbGU2NTM4NDkzNy5lY2UgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vZmVhdHVyZXMvbWV0cm9wbHVzIHJhdmVsL1RoZS1oYW5naW5nLXBpbGxhci1hbmQtb3RoZXItd29uZGVycy1vZi0gTGVwYWtzaGkvYXJ0aWNsZTEzMzgzMTc5LmVjZSAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 14,
      "question" : "Consider the following statements regarding the Shivaji's system of administration: 1.  He allowed women or dancing girls to accompany the army. 2.  He abolished the hereditary position of mirasdars.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU2hpdmFqaSdzIHN5c3RlbSBvZiBhZG1pbmlzdHJhdGlvbiB3YXMgbGFyZ2VseSBib3Jyb3dlZCBmcm9tIHRoZSBhZG1pbmlzdHJhdGl2ZSBwcmFjdGljZXMgb2YgdGhlIERlY2NhbmkgIHN0YXRlcy4gQWx0aG91Z2ggaGUgZGVzaWduYXRlZCBlaWdodCBtaW5pc3RlcnMsIHNvbWV0aW1lcyBjYWxsZWQgdGhlIEFzaHRhcHJhZGhhbiwgaXQgd2FzIG5vdCBpbiB0aGUgbmF0dXJlICBvZiBhIGNvdW5jaWwgb2YgbWluaXN0ZXJzLCBlYWNoIG1pbmlzdGVyIGJlaW5nIGRpcmVjdGx5IHJlc3BvbnNpYmxlIHRvIHRoZSBydWxlci4gVGhlIHJldmVudWUgc3lzdGVtIHNlZW1zICB0byBoYXZlIGJlZW4gcGF0dGVybmVkIG9uIHRoZSBzeXN0ZW0gb2YgTWFsaWsgQW1iYXIuICBDdXJyZW5jeSwgdHJhZGUgdGF4IGFuZCBsYW5kIHJldmVudWUgd2VyZSB0aGUgIG1vc3QgaW1wb3J0YW50IHNvdXJjZXMgb2YgdGhlIGZpeGVkIGluY29tZSBvZiBTaGl2YWppLiBTaGl2YWppIGNvbGxlY3RlZCB0aGUgY2hhdXRoIGFuZCBzYXJkZXNobXVraGkgZnJvbSAgdGhlIHRlcnJpdG9yeSB3aGljaCB3YXMgZWl0aGVyIHVuZGVyIGhpcyBlbmVtaWVzIG9yIHVuZGVyIGhpcyBvd24gaW5mbHVlbmNlLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBTdHJpY3QgZGlzY2lwbGluZSB3YXMgbWFpbnRhaW5lZCBpbiB0aGUgYXJteS4gTm8gd29tZW4gb3IgZGFuY2luZyBnaXJscyBiZWluZyAgYWxsb3dlZCB0byBhY2NvbXBhbnkgdGhlIGFybXkuIFRoZSBwbHVuZGVyIHRha2VuIGJ5IGVhY2ggc29sZGllciBkdXJpbmcgY2FtcGFpZ25zIHdhcyBzdHJpY3RseSAgYWNjb3VudGVkIGZvci4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogU2hpdmFqaSBkaWQgbm90IGFib2xpc2ggdGhlIGhlcmVkaXRhcnkgcG9zaXRpb24gb2YgbWlyYXNkYXJzLiBNaXJhc2RhciB3YXMgYSAgaGVyZWRpdGFyeSBvd25lciwgZXNwZWNpYWxseSBvZiBsYW5kLiBUaGVzZSBzZWN0aW9ucyBwYWlkIHRvIHRoZSBnb3Zlcm5tZW50IG9ubHkgYSBzbWFsbCBwYXJ0IG9mIHRoZWlyICBjb2xsZWN0aW9ucy4gJ0luIGNvbnNlcXVlbmNlLCB0aGUgbWlyYXNkYXJzIGdyZXcgYW5kIHN0cmVuZ3RoZW5lZCB0aGVtc2VsdmVzIGJ5IGJ1aWxkaW5nIGJhc3Rpb25zLCBjYXN0bGVzICBhbmQgc3Ryb25naG9sZHMgaW4gdGhlIHZpbGxhZ2VzLCBlbmxpc3RpbmcgZm9vdG1lbiBhbmQgbXVza2V0ZWVycy4gVGhpcyBjbGFzcyBoYWQgYmVjb21lIHVucnVseSBhbmQgc2VpemVkICB0aGUgY291bnRyeS4nIFNoaXZhamkgIHN0cmljdGx5IHN1cGVydmlzZWQgdGhlIG1pcmFzZGFycywgU2hpdmFqaSBkZXN0cm95ZWQgdGhlaXIgYmFzdGlvbnMgYW5kIGZvcmNlZCB0aGVtICB0byBzdWJtaXQuICAgU291cmNlOiBTYXRpc2ggQ2hhbmRyYSBNZWRpZXZhbCBJbmRpYSBwZGYgcGFnZS0zNzQgIGh0dHBzOi8vd3d3LmluZGlhbmV0em9uZS5jb20vNDcvYWRtaW5pc3RyYXRpb25fc2hpdmFqaS5odG0gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2         "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following Pairs with reference to different types of land in ancient and medieval history and their description: Types of land  Description  1. Amaram Crown village  2. Bhandaravada  Tax-free land  3. Manya   Land under heavy taxation 4. Brahmadeya Land donated to Brahmins  Which of the above Pairs is/are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBMYW5kLXJldmVudWUgd2FzIHRoZSBtYWpvciBzb3VyY2Ugb2Ygc3RhdGVzJyBpbmNvbWUgaW4gYW5jaWVudCBhbmQgTWVkaWV2YWwgZXJhIG9mIEluZGlhbiBIaXN0b3J5LiAgIFRoZXJlIHdlcmUgcmVmZXJlbmNlcyB0byB0aHJlZSBtYWpvciBjYXRlZ29yaWVzIG9mIGxhbmQgdGVudXJlIGluIFZpamF5YW5hZ2FyYSBFbXBpcmUgd2hpY2ggaW5kaWNhdGUgdGhlICB3YXkgaW4gd2hpY2ggdGhlIHZpbGxhZ2UgaW5jb21lIHdhcyBkaXN0cmlidXRlZC4gICBQYWlyIDEgaXMgaW5jb3JyZWN0bHkgbWF0Y2hlZC4gVGhlIGxhcmdlc3QgY2F0ZWdvcnkgd2FzIG9mIHRoZSBhbWFyYSB2aWxsYWdlcyBnaXZlbiBieSB0aGUgVmlqYXluYWdhciBydWxlcnMgIHRvIHRoZSBhbWFyYW5heWFrYXMuIFRoZWlyIGhvbGRlcnMgZGlkIG5vdCBwb3NzZXNzIHByb3ByaWV0YXJ5IHJpZ2h0cyBpbiBsYW5kIGJ1dCBlbmpveWVkIC1wcml2aWxlZ2VzIG92ZXIgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBpdHMgaW5jb21lIG9ubHkuIFRoZSBhbWFyYSB0ZW51cmUgd2FzIHByaW1hcmlseSByZXNpZHVhbCBpbiB0aGUgc2Vuc2UgdGhhdCBpdHMgaW5jb21lIHdhcyBkaXN0cmlidXRlZCBhZnRlciAgZGVkdWN0aW9ucyBoYWQgYmVlbiBtYWRlIGZvciBzdXBwb3J0IG9mIHRoZSBCcmFobWFucyBhbmQgZm9ydHMuICAgUGFpciAyIGlzIGluY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBiaGFuZGFydmFkYSB3YXMgYSBjcm93biB2aWxsYWdlIGNvbXByaXNpbmcgdGhlIHNtYWxsZXN0IGNhdGVnb3J5LiBBICBwYXJ0IG9mIGl0cyBpbmNvbWUgd2FzIHV0aWxpc2VkIHRvIG1haW50YWluIHRoZSBWaWpheW5hZ2FyIGZvcnRzLiAgIFBhaXIgMyBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBJbmNvbWUgZnJvbSB0aGUgbWFueWEgKHRheC1mcmVlKSB2aWxsYWdlcyB3YXMgdXNlZCB0byBtYWludGFpbiB0aGUgIEJyYWhtYW5zLCB0ZW1wbGVzLCBhbmQgbWF0aGFzLiBUaGUgbWFueWEgcmlnaHRzIHVuZGVyd2VudCBhIHRyYW5zZm9ybWF0aW9uIGR1cmluZyB0aGlzIHBlcmlvZC4gTGFuZCAgdGVudXJlcyBjb250aW51ZWQgdG8gYmUgZ2l2ZW4gYnkgdGhlIHN0YXRlIHRvIGluZGl2aWR1YWwgKGVrYWJob2dhbikgQnJhaG1hbnMgYW5kIGdyb3VwcyBvZiBCcmFobWFucyBhcyAgd2VsbCBhcyB0byBtYXRoYXMgaW5jbHVkaW5nIHRoZSBub24tIEJyYWhtYW4gU2FpdmEgU2lkZGhhbnRhIGFuZCBWYWlzaG5hdmEgZ3VydXMuICAgUGFpciA0IGlzIGNvcnJlY3RseSBtYXRjaGVkLiBJbiB0aGUgR3VwdGEgcGVyaW9kIHRoZXJlIHdhcyBwcmFjdGljZSBvZiBncmFudGluZyBsYW5kcyB0byBicmFobWFuYXMgIChicmFobWFkZXlhcykuIExhbmRzIHdlcmUgZ2l2ZW4gYXMgYnJhaG1hZGV5YSBlaXRoZXIgdG8gYSBzaW5nbGUgQnJhaG1hbmEgb3IgdG8gc2V2ZXJhbCBCcmFobWFuYSAgZmFtaWxpZXMuIEJyYWhtYWRleWFzIHdlcmUgaW52YXJpYWJseSBsb2NhdGVkIG5lYXIgbWFqb3IgaXJyaWdhdGlvbiB3b3JrcyBzdWNoIGFzIHRhbmtzIG9yIGxha2VzLiBTaW5jZSB0aGUgIGJyYWhtYWRleWEgbGFuZCB3YXMgZ2l2ZW4gYWxvbmcgd2l0aCBhZG1pbmlzdHJhdGl2ZSByaWdodHMgYW5kIHRheCBleGVtcHRpb25zLCBpdCByZXN1bHRlZCBpbiBjcmVhdGlvbiBvZiAgYSBuZXcgY2xhc3Mgb2YgYnJhaG1hbmEgbGFuZGxvcmRzLiAgU291cmNlOiAgQU5DSUVOVCBBTkQgTUVESUVWQUwgSU5ESUEsIEF1dGhvci0gUG9vbmFtIERhbGFsIERhaGl5YSwgICAgIEhpc3Rvcnkgb2YgTWVkaWV2YWwgSW5kaWEgKDgwMC0xNzAwKSBieSBTQVRJU0ggQ0hBTkRSQSBwYWdlIDE1Mi01MyAgIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMjAxOTAvMS9Vbml0LTI3LnBkZiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only ",
        "option2" : "4 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 3 and 4 only  "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements with reference to society of Vijayanagar Empire in medieval Indian history:  1. Regular and periodic fairs took place under the supervision of Pattanaswami.  2. Kudirai chettis was a local community of horse traders.  3. The king was the supreme judge and the law of the land was based on traditional regulations and customs. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBGb3JlaWduIHRyYXZlbGxlcnMgbGVmdCB2aXZpZCBhY2NvdW50cyBvbiB0aGUgc3BsZW5kb3VyIG9mIGJ1aWxkaW5ncyBhbmQgbHV4dXJpb3VzIHNvY2lhbCBsaWZlIGluIHRoZSBjaXR5IG9mICBWaWpheWFuYWdhci4gUGFlcyBtZW50aW9ucyB0aGUgYmVhdXRpZnVsIGhvdXNlcyBvZiB0aGUgcmljaCBhbmQgdGhlIGxhcmdlIG51bWJlciBvZiB0aGVpciBob3VzZWhvbGQgIHNlcnZhbnRzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBjb250ZW1wb3JhcnkgZm9yZWlnbiBhY2NvdW50cyBzaG93IHRoYXQgbG9jYWwgYW5kIGxvbmctZGlzdGFuY2UgdHJhZGUgIGluY3JlYXNlZC4gUmVndWxhciBhbmQgcGVyaW9kaWMgZmFpcnMgdG9vayBwbGFjZSBhbG9uZyB0aGUgbWFpbiByb2FkcyBsZWFkaW5nIHRvIGJpZyB0ZW1wbGVzIGR1cmluZyAgZmVzdGl2YWwgdGltZXMuIFRoZXNlIGZhaXJzIHdlcmUgY29uZHVjdGVkIGJ5IHRyYWRlIGFzc29jaWF0aW9ucyBvZiBhIG5lYXJieSB0b3duIGFuZCB1bmRlciB0aGUgIHN1cGVydmlzaW9uIG9mIHRoZSBsZWFkZXIgb2YgdHJhZGUgYXNzb2NpYXRpb24gY2FsbGVkIFBhdHRhbmFzd2FtaS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBBcyB3YXJmYXJlIGR1cmluZyB0aGVzZSB0aW1lcyBkZXBlbmRlZCB1cG9uIGVmZmVjdGl2ZSBjYXZhbHJ5LCB0aGUgaW1wb3J0IG9mICBob3JzZXMgZnJvbSBBcmFiaWEgYW5kIENlbnRyYWwgQXNpYSB3YXMgdmVyeSBpbXBvcnRhbnQgZm9yIHJpdmFsIGtpbmdkb21zLiBUaGlzIHRyYWRlIHdhcyBpbml0aWFsbHkgIGNvbnRyb2xsZWQgYnkgQXJhYiB0cmFkZXJzLiBMb2NhbCBjb21tdW5pdGllcyBvZiBtZXJjaGFudHMga25vd24gYXMga3VkaXJhaSBjaGV0dGlzIG9yIGhvcnNlIG1lcmNoYW50cyAgYWxzbyBwYXJ0aWNpcGF0ZWQgaW4gdGhlc2UgZXhjaGFuZ2VzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBraW5nIHdhcyB0aGUgc3VwcmVtZSBqdWRnZSwgYnV0IHRoZXJlIHdlcmUgcmVndWxhciBjb3VydHMgYW5kIHNwZWNpYWwganVkaWNpYWwgIG9mZmljZXJzIGZvciB0aGUgYWRtaW5pc3RyYXRpb24gb2YganVzdGljZS4gU29tZXRpbWVzLCBkaXNwdXRlcyB3ZXJlIHNldHRsZWQgYnkgdGhlIFN0YXRlIG9mZmljaWFscyB3aXRoIHRoZSAgY28tb3BlcmF0aW9uIG9mIHRoZSBsb2NhbCBib2RpZXMuIFRoZSBvbmx5IGxhdyBvZiB0aGUgbGFuZCB3YXMgbm90IHRoZSBsYXcgb2YgdGhlIEJyYWhtYW5hcywgYnV0IHdhcyBiYXNlZCAgb24gdHJhZGl0aW9uYWwgcmVndWxhdGlvbnMgYW5kIGN1c3RvbXMgc3RyZW5ndGhlbmVkIGJ5IHRoZSBjb25zdGl0dXRpb25hbCB1c2FnZSBvZiB0aGUgY291bnRyeSwgYW5kIGl0cyAgb2JzZXJ2YW5jZSB3YXMgc3RyaWN0bHkgZW5mb3JjZWQuIFNldmVyZSBwdW5pc2htZW50IHdhcyBpbmZsaWN0ZWQgb24gZ3VpbHR5IHBlcnNvbnMuIFRoZXNlIHBlbmFsdGllcyB3ZXJlICBjaGllZmx5IG9mIGZvdXIga2luZHMtIGZpbmVzLCBjb25maXNjYXRpb24gb2YgcHJvcGVydHksIG9yZGVhbHMgYW5kIGRlYXRoLiAgIFNvdXJjZTogIEFOQ0lFTlQgQU5EIE1FRElFVkFMIElORElBLCBBdXRob3ItIFBvb25hbSBEYWxhbCBEYWhpeWEsICAtNjAwICAgaHR0cHM6Ly95a2NvbGxlZ2UuYWMuaW4vd3AtY29udGVudC91cGxvYWRzLzIwMjAvMDQvQURNSU5TVFJBVElPTi1PRi1WSUFKQU5BR0FSLSBjb252ZXJ0ZWQucGRmICAgIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlaHMyMDMucGRmICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 3 only ",
        "option2" : "2 only ",
        "option3" : "1 and 2 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements with respect to the literature of the Chola period:  1. Writing of Saivite saints were collected in Tirumurai volumes during this period.  2. Kamban's Ramayana was prepared during the reign of Chola rulers.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgd3JpdGluZ3Mgb2YgdGhlIFNhaXZpdGUgc2FpbnRzLCB3aGljaCB3ZXJlIGNvbGxlY3RlZCBpbnRvIGVsZXZlbiB2b2x1bWVzIHVuZGVyICB0aGUgbmFtZSBUaXJ1bXVyYWkgaW4gdGhlIGVhcmx5IHBhcnQgb2YgdGhlIHR3ZWxmdGggY2VudHVyeSwgYXJlIGNvbnNpZGVyZWQgc2FjcmVkIGFuZCBhcmUgbG9va2VkIHVwb24gYXMgIHRoZSBmaWZ0aCBWZWRhLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBhZ2Ugb2YgS2FtYmFuIHdobyBpcyBwbGFjZWQgaW4gdGhlIHNlY29uZCBoYWxmIG9mIHRoZSBlbGV2ZW50aCBhbmQgdGhlIGVhcmx5ICBwYXJ0IG9mIHRoZSB0d2VsZnRoIGNlbnR1cnkgaXMgcmVnYXJkZWQgYXMgYSBnb2xkZW4gYWdlIGluIFRhbWlsIGxpdGVyYXR1cmUuIEthbWJhbidzIFJhbWF5YW5hIGlzIGNvbnNpZGVyZWQgIGEgY2xhc3NpYyBpbiBUYW1pbCBsaXRlcmF0dXJlLiBLYW1iYW4gaXMgYmVsaWV2ZWQgdG8gaGF2ZSBsaXZlZCBhdCB0aGUgY291cnQgb2YgYSBDaG9sYSBraW5nLiAgICAgS25vd2xlZGdlIEJhc2U6ICAgIFRob3VnaCB5b3VuZ2VyIHRoYW4gVGFtaWwsIEthbm5hZGEgYWxzbyBiZWNhbWUgYSBsaXRlcmFyeSBsYW5ndWFnZSBkdXJpbmcgdGhlIENob2xhIHBlcmlvZC4gVGhlICBSYXNodHJha3V0YSwgdGhlIENoYWx1a3lhIGFuZCB0aGUgSG95c2FsYSBydWxlcnMgcGF0cm9uaXplZCBLYW5uYWRhIGFzIHdlbGwgYXMgVGVsdWd1LiAgICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTMsIFNvdXRoIEluZGlhOiBUaGUgQ2hvbGEgRW1waXJlICg5MDAtMTIwMCkgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 18,
      "question" : "With reference to the Chola sculpture, consider the following statements:  1. The earliest known Nataraja sculpture was made during this period.  2. The bronze Nataraja figures of this period reached its peak.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBhcnQgb2Ygc2N1bHB0dXJlIGF0dGFpbmVkIGEgaGlnaCBzdGFuZGFyZCBpbiBzb3V0aCBJbmRpYSBkdXJpbmcgQ2hvbGEgcGVyaW9kLiBPbmUgZXhhbXBsZSBvZiB0aGlzIHdhcyAgdGhlIGdpYW50IHN0YXR1ZSBvZiBHb21hdGVzd2FyYSBhdCBTcmF2YW5hIEJlbGdvbGEuICAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIGVhcmxpZXN0IGtub3duIE5hdGFyYWphIHNjdWxwdHVyZSwgd2hpY2ggaGFzIGJlZW4gZXhjYXZhdGVkIGF0IFJhdmFuYSBQaGFkaSAgQ2F2ZSBhdCBBaWhvbGUsIHdhcyBtYWRlIGR1cmluZyB0aGUgZWFybHkgQ2hhbHVreWEgcnVsZSAobm90IENob2xhIHJ1bGUpLiBIb3dldmVyLCB0aGUgc2N1bHB0dXJlIHJlYWNoZWQgIGl0cyBwZWFrIHVuZGVyIHRoZSBDaG9sYXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogSW1hZ2UtbWFraW5nIG9mIGRhbmNpbmcgZmlndXJlIG9mIHRoZSBTaXZhLCBjYWxsZWQgTmF0YXJhamEgcmVhY2hlZCBpdHMgemVuaXRoICBkdXJpbmcgQ2hvbGEgcnVsZS4gVGhlIE5hdGFyYWphIGZpZ3VyZXMgb2YgdGhpcyBwZXJpb2QsIHBhcnRpY3VsYXJseSB0aG9zZSBpbiBicm9uemUsIGFyZSBjb25zaWRlcmVkICBtYXN0ZXJwaWVjZXMuICAgICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTMsIFNvdXRoIEluZGlhOiBUaGUgQ2hvbGEgRW1waXJlICg5MDAtMTIwMCkgICBJbmRpYW4gQ3VsdHVyZSwgTml0aW4gU2luZ2hhbmlhLCBDaGFwdGVyLTEsIEluZGlhbiBBcmNoaXRlY3R1cmUsIFNjdWxwdHVyZSAmIFBvdHRlcnkgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements with respect to the local self-government during Chola rule:  1. Nagarattar decided all the disputes and issues pertaining to Nadu.  2. Urar functioned as spokesmen in the villages.  3. Sabhaiyar performed financial, and judicial functions in Brahman villages.  4. Nattar were the officials in charge of trade settlements.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBsb2NhbCBhZG1pbmlzdHJhdGlvbiB3YXMgc3VwcG9ydGVkIGJ5IHNldmVyYWwgb3JnYW5pc2F0aW9ucywgaW5jbHVkaW5nIFVyYXIsIFNhYmhhaXlhciwgTmFnYXJhdHRhciwgYW5kICBOYXR0YXIuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBOYXR0YXIgKCBhbmQgbm90IE5hZ2FyYXR0YXIpIHdlcmUgdGhlIGltcG9ydGFudCBtZW1iZXJzIChsYW5kIGhvbGRlcnMpIG9mIHRoZSAgTmFkdSAobG9jYWxpdHkpLiBOYXR0YXIgZnVuY3Rpb25lZCBhcyBhbiBhc3NlbWJseSBvZiBOYWR1IGFuZCBkZWNpZGVkIGFsbCB0aGUgZGlzcHV0ZXMgYW5kIGlzc3VlcyAgcGVydGFpbmluZyB0byBOYWR1LiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBVcmFyLCB3aG8gd2VyZSBsYW5kb3duZXJzLCBzZXJ2ZWQgYXMgdGhlIHNwb2tlc21lbiBpbiB0aGUgdmlsbGFnZXMuICAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFNhYmhhaXlhciBhbHNvIHBlcmZvcm1lZCBhZG1pbmlzdHJhdGl2ZSwgZmluYW5jaWFsLCBhbmQganVkaWNpYWwgZnVuY3Rpb25zIGluICBCcmFobWFuIHZpbGxhZ2VzLiAgIFN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogTmFnYXJhdHRhciAoYW5kIG5vdCBOYXR0YXIpIHdhcyBpbiBjaGFyZ2Ugb2YgdHJhZGUgc2V0dGxlbWVudHMuIE5hZ2FyYW0gZGlkICBoYXZlIHNraWxsZWQgYXJ0aXNhbnMgc3VjaCBhcyBtYXNvbnMsIGJsYWNrc21pdGhzLCBnb2xkc21pdGhzLCB3ZWF2ZXJzLCBhbmQgcG90dGVycy4gICAgU291cmNlOiBodHRwczovL3d3dy5lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMjAyNy8xL1VuaXQtMTgucGRmIChQZy4gMTUtMTYpICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "1 and 4 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements with respect to the Chola administration:  1. Nadu, consisting of a number of villages, was the basic unit of administration under Chola rule.  2. The entire Chola state was divided into five valanadus.   Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENob2xhIHN0YXRlIGluY2x1ZGVkIGFyZWEgb2YgY2VudHJhbCBjb250cm9sLCBhbmQgbG9vc2VseSBhZG1pbmlzdGVyZWQgYXJlYXMgdW5kZXIgZGlmZmVyZW50IHR5cGVzIG9mICBsb2NhbCBjb250cm9sLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBiYXNpYyB1bml0IG9mIGFkbWluaXN0cmF0aW9uIHdhcyB0aGUgbmFkdSB3aGljaCBjb25zaXN0ZWQgb2YgYSBudW1iZXIgb2YgIHZpbGxhZ2VzIGhhdmluZyBjbG9zZSBraW5zaGlwIHRpZXMgYW5kIG90aGVyIGNsb3NlIGFzc29jaWF0aW9ucy4gVGhlIG51bWJlciBvZiBuYWR1cyBpbmNyZWFzZWQgYXMgZnJlc2ggbGFuZHMgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICB3ZXJlIGJyb3VnaHQgdW5kZXIgY3VsdGl2YXRpb24gYnkgbWVhbnMgb2YgaXJyaWdhdGlvbiB3b3JrcyBzdWNoIGFzIHBvbmRzLCB3ZWxscywgZXRjLiwgYW5kIGJ5IGNvbnZlcnRpbmcgIGhpbGwgb3IgdHJpYmFsIHBlb3BsZSBpbnRvIGFncmljdWx0dXJpc3RzLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBDaG9sYSBzdGF0ZSB3YXMgZGl2aWRlZCBpbnRvIGZvdXIgbWFuZGFsYW1zIG9yIHByb3ZpbmNlcy4gU29tZXRpbWVzLCAgcHJpbmNlcyBvZiB0aGUgcm95YWwgZmFtaWx5IHdlcmUgYXBwb2ludGVkIGdvdmVybm9ycyBvZiBwcm92aW5jZXMuIE9mZmljaWFscyB3ZXJlIGdlbmVyYWxseSBwYWlkIGJ5IGdpdmluZyAgdGhlbSBhc3NpZ25tZW50cyBvZiByZXZlbnVlLSBiZWFyaW5nIGxhbmRzLiBJbiB0aGUgQ2hvbGEga2luZ2RvbSwgbmFkdXMgd2VyZSBncm91cGVkIGludG8gdmFsYW5hZHVzLiAgICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTMsIFNvdXRoIEluZGlhOiBUaGUgQ2hvbGEgRW1waXJlICg5MDAtMTIwMCkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2      \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 21,
      "question" : "With reference to Nayaka system of Vijayanagara Empire, consider the following statements:  1. Nayaka was responsible for expansion of agricultural activities in their area of administration.  2. They were provided with special allocation of income from land and specific cash payments for holding a particular office.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBuYXlhbmthcmEgc3lzdGVtIHdhcyBhbiBpbXBvcnRhbnQgY2hhcmFjdGVyaXN0aWMgb2YgdGhlIFZpamF5bmFnYXIgcG9saXRpY2FsIG9yZ2FuaXphdGlvbiB0aGF0IGJyb3VnaHQgIGFib3V0IHNvbWUgY2hhbmdlcyBpbiB0aGUgc3RhdHVzIG9mIHRoZSByYWp5YXMgb3IgcHJvdmluY2VzLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBjb21tYW5kZXIgb2YgdGhlIFZpamF5YW5hZ2FyIGFybXkgYW5kIGZvcnRzIHdhcyBjYWxsZWQgdGhlIG5heWFrYS4gRWFjaCAgbmF5YWthIHdhcyBnaXZlbiBhbiBhcmVhIGZvciBhZG1pbmlzdHJhdGlvbi4gVGhleSB3ZXJlIGFzc29jaWF0ZWQgd2l0aCBjZXJ0YWluIHNldCBvZiBmdW5jdGlvbnMtICAgMSkgVGhleSB3ZXJlIHJlc3BvbnNpYmxlIGZvciBleHBhbmRpbmcgYWdyaWN1bHR1cmFsIGFjdGl2aXRpZXMgaW4gdGhlaXIgYXJlYS4gICAyKSBUaGV5IGNvbGxlY3RlZCB0YXhlcyBpbiB0aGVpciBhcmVhIG9mIGFkbWluaXN0cmF0aW9uIGFuZCB3aXRoIHRoaXMgaW5jb21lIG1haW50YWluZWQgaGlzIGFybXksIGhvcnNlcywgIGVsZXBoYW50cyBhbmQgd2VhcG9ucyBvZiB3YXJmYXJlIHRoYXQgaGUgaGFkIHRvIHN1cHBseSB0byB0aGUgcmF5YSBvciB0aGUgVmlqYXlhbmFnYXJhIHJ1bGVyLiAgICAzKSBUaGUgZmV1ZGFsIE5heWFua2FyYXMgdXNlZCB0byBtYWludGFpbiB0aGVpciBvd24gc29sZGllcnMsIGZvcmNlcyBhbmQgZWxlcGhhbnRzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVW5kZXIgdGhlIGF5YWdhcnMgc3lzdGVtIG9mIFZpamF5YW5hZ2FyYSBFbXBpcmUsIHRoZSB2aWxsYWdlIHNlcnZhbnRzIChheWFnYXJzKSAgd2VyZSBoZWFkbWVuIChyZWRkaSBvciBnYXVkYSwgbWFuaXlhbSksIGFjY291bnRhbnQgKGthcm5hbSBzZW5hYmhvdmEpIGFuZCB3YXRjaG1lbiAodGFsYWl5YXJpKSB3aG8gIHdlcmUgZ2l2ZW4gYSBwb3J0aW9uIG9mIG9yIHBsb3QgaW4gYSB2aWxsYWdlIHRoYXQgd2FzIHRheCBmcmVlLiBUaGUgc3BlY2lhbCBhbGxvY2F0aW9uIG9mIGluY29tZSBmcm9tIGxhbmQgYW5kICBzcGVjaWZpYyBjYXNoIHBheW1lbnRzIHdlcmUgcHJvdmlkZWQgdG8gdmlsbGFnZSBzZXJ2YW50cyAoYXlhZ2FycykgaG9sZGluZyBhIHBhcnRpY3VsYXIgb2ZmaWNlLiAgICAgU291cmNlOiAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDE5MC8xL1VuaXQtMjcucGRmICAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TclNlYzMxNU5FVy9IaXN0b3J5X01vZHVsZTIucGRmICAgaHR0cHM6Ly93d3cuZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMjIwNzQvMS9Vbml0LTIwLnBkZiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements with reference to the relations between Maratha empire and Mughal Empire:  1.  Mughals faced a defeat by Marathas in the Battle of Surat fought in 1664.  2.  Under the Treaty of Purandar, Maratha ruler committed to fight for Mughals whenever required. 3.  Marathas were able to uproot the Mughal authority from Malwa and Gujarat. Which of the above given statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIG1vc3QgZm9ybWlkYWJsZSBwcm92aW5jZSB0byBlbWVyZ2UgYWdhaW5zdCBNdWdoYWxzIHdlcmUgdGhhdCBvZiB0aGUgTWFyYXRoYXMuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBCYXR0bGUgb2YgU3VyYXQsIGFsc28ga25vd24gYXMgdGhlIFNhY2sgb2YgU3VyYXQsIHdhcyBhIGxhbmQgYmF0dGxlIHRoYXQgdG9vayBwbGFjZSAgb24gSmFudWFyeSA1LCAxNjY0LCBuZWFyIHRoZSBjaXR5IG9mIFN1cmF0LCBHdWphcmF0LCBJbmRpYSBiZXR3ZWVuIE1hcmF0aGEgcnVsZXIgU2hpdmFqaSBhbmQgSW5heWF0IEtoYW4sICBhIE11Z2hhbCBjYXB0YWluLiBUaGUgTWFyYXRoYXMgZGVmZWF0ZWQgdGhlIE11Z2hhbCBmb3JjZSwgYW5kIHNhY2tlZCB0aGUgY2l0eSBvZiBTdXJhdCBmb3Igc2l4IGRheXMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIFRyZWF0eSBvZiBQdXJhbmRhciB3YXMgc2lnbmVkIGJldHdlZW4gQ2hoYXRyYXBhdGkgU2hpdmFqaSBNYWhhcmFqIGFuZCBSYWphICBKYWkgU2luZ2ggKG9uIGJlaGFsZiBvZiBNdWdoYWwgRW1wZXJvciBBdXJhbmd6ZWIpLiBUaGUgdHJlYXR5IHdhcyBzaWduZWQgb24gMTF0aCBKdW5lLCAxNjY1LiBXaGVuICBTaGl2YWppIHJlYWxpemVkIHRoYXQgd2FyIHdpdGggTXVnaGFsIGVtcGlyZSB3b3VsZCBvbmx5IGNhdXNlIGRhbWFnZSB0byBlbXBpcmUgYW5kIHRoYXQgaGlzIG1lbiB3b3VsZCAgc3VmZmVyIGhlYXZ5IGxvc3NlcywgaGUgY2hvb3NlIHRvIG1ha2UgYSB0cmVhdHkgaW5zdGVhZCBvZiBsaXZpbmcgaGlzIG1lbiB1bmRlciB0aGUgTXVnaGFscy4gQW1vbmcgdGhlIGtleSAgcG9pbnRzIG9mIHRoZSB0cmVhdHkgd2FzIHRoYXQgU2hpdmFqaSB3YXMgcmVxdWlyZWQgdG8gaGVscCB0aGUgTXVnaGFscyB3aGVuZXZlciBhbmQgd2hlcmV2ZXIgcmVxdWlyZWQuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVW5kZXIgdGhlIGNhcGFibGUgbGVhZGVyc2hpcCBvZiB0aGUgUGVzaHdhcywgdGhlIE1hcmF0aGFzIHVwcm9vdGVkIHRoZSBNdWdoYWwgIGF1dGhvcml0eSBmcm9tIE1hbHdhIGFuZCBHdWphcmF0IGFuZCBlc3RhYmxpc2hlZCB0aGVpciBydWxlLiBBdCBvbmUgdGltZSB0aGV5IGNsYWltZWQgdGhlIHJpZ2h0IHRvIGJlIHRoZSAgY2hpZWYgaW5oZXJpdG9ycyBvZiB0aGUgTXVnaGFsIGRvbWluaW9uLiAgU291cmNlOiBodHRwOi8vb2xkZ3J0LmxicC53b3JsZC9VcGxvYWRlZERhdGEvMTAwMi5wZGYgICBBIEJyaWVmIEhpc3Rvcnkgb2YgTW9kZXJuIEluZGlhIGJ5IFJhaml2IEFoaXIgKFNwZWN0cnVtKSBQYWdlIG5vLiA3MywgMjAyMHRoIEVkaXRpb24gICBodHRwczovL2FyY2hpdmUub3JnL2RldGFpbHMvb3hmb3JkaGlzdG9yeW9maTAwc21pdHVvZnQvcGFnZS80MzQvbW9kZS8ydXA/dmlldz10aGVhdGVyICAgaHR0cHM6Ly93d3cuZG5haW5kaWEuY29tL2FuYWx5c2lzL2NvbHVtbi1jaGhhdHJhcGF0aS1zaGl2YWppLWFuZC10aGUtc2Fja2luZy1vZi1zdXJhdC0yNjA3MzI0ICAgICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements:  1. Abdur Razzaq visited India during the reign of Vijayanagara ruler Deva Raya II.  2.  The unique fortification of the Vijayanagara Empire not only encircled the city but also its agricultural land and forests.  Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFNldmVyYWwgZm9yZWlnbiB0cmF2ZWxlcnMgZnJvbSBQZXJzaWEgYW5kIEV1cm9wZSB2aXNpdGVkIHRoZSBjaXR5IG9mIFZpamF5YW5hZ2FyYSBpbiB0aGUgZmlmdGVlbnRoIGFuZCAgc2l4dGVlbnRoIGNlbnR1cmllcy4gVGhleSB3ZXJlIGltcHJlc3NlZCB3aXRoIHRoZSBjaXR5IGFuZCB0aGVpciBhY2NvdW50cyBvbiBhZG1pbmlzdHJhdGlvbiwgbGF5b3V0LCAgYmF6YWFycywgdGVtcGxlcyBhbmQgcGFsYWNlczsgbG9jYWwgaGlzdG9yaWNhbCB0cmFkaXRpb25zIGhhdmUgYmVlbiB1c2VmdWwgZm9yIHRoZSBoaXN0b3JpYW5zIGFuZCAgYXJjaGFlb2xvZ2lzdHMgdG8gY29uc3RydWN0IHRoZSBwaWN0dXJlIG9mIFZpamF5YW5hZ2FyYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBBYmR1ciBSYXp6YXEsIGFuIGFtYmFzc2Fkb3IgZnJvbSBQZXJzaWEgdmlzaXRlZCB0aGUgVmlqYXlhbmFnYXJhIEVtcGlyZSBpbiBJbmRpYSAgYXMgYW4gYW1iYXNzYWRvciBhdCB0aGUgY291cnQgb2YgRGV2YSBSYXlhIElJICgxNDIzLTQ2KS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgVmlqYXlhbmFnYXJhIEVtcGlyZSB3YXMgZ3JlYXRseSBrbm93biBmb3IgaXRzIGZvcnRpZmljYXRpb25zLiBUaGUgZm9ydGlmaWNhdGlvbnMgIGVuY2lyY2xlZCBub3Qgb25seSB0aGUgY2l0eSBidXQgYWxzbyBpdHMgYWdyaWN1bHR1cmFsIGhpbnRlcmxhbmQgYW5kIGZvcmVzdHMuIFRoZSBvdXRlcm1vc3Qgd2FsbCBsaW5rZWQgdGhlICBoaWxscyBzdXJyb3VuZGluZyB0aGUgY2l0eS4gVGhlIG1hc3NpdmUgbWFzb25yeSBjb25zdHJ1Y3Rpb24gd2FzIHNsaWdodGx5IHRhcGVyZWQuIE5vIG1vcnRhciBvciBjZW1lbnRpbmcgIGFnZW50IHdhcyBlbXBsb3llZCBhbnl3aGVyZSBpbiB0aGUgY29uc3RydWN0aW9uLiBUaGUgc3RvbmUgICBibG9ja3Mgd2VyZSB3ZWRnZSBzaGFwZWQsIHdoaWNoIGhlbGQgdGhlbSBpbiBwbGFjZSwgYW5kIHRoZSBpbm5lciBwb3J0aW9uIG9mIHRoZSB3YWxscyB3YXMgb2YgZWFydGggcGFja2VkICB3aXRoIHJ1YmJsZS4gQmV0d2VlbiB0aGUgZmlyc3QsIHNlY29uZCBhbmQgdGhlIHRoaXJkIHdhbGxzIHRoZXJlIGFyZSBjdWx0aXZhdGVkIGZpZWxkcywgZ2FyZGVucyBhbmQgaG91c2VzLiAgIFNvdXJjZTogIGh0dHBzOi8vbmNlcnQubmljLmluIGV4dGJvb2svcGRmL2xlaHMyMDMucGRmICAgaHR0cDovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzQ0NDMyLzEvQmxvY2stNCUyMFBhcnQtSUkucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 24,
      "question" : "Arrange the following events related with the Vijayanagara empire in the correct chronological order: 1.  Battle of Raichur between Krishnadevaraya and Ismail Adil Shah of Bijapur 2.  Arrival of Portuguese traveller Nuniz in Vijayanagar Empire. 3.  Reign of famous Vijayanagara ruler Deva Raya II 4.  Battle of Talikota  Select the correct answer using the code given below ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgRXN0YWJsaXNoZWQgaW4gdGhlIG1pZCAxNHRoIGNlbnR1cnkgQ0UsIHRoZSBWaWpheWFuYWdhcmEgZW1waXJlIHdhcyBvbmUgb2YgdGhlIGJpZ2dlc3QgYW5kIG1vc3QgIHByb3NwZXJvdXMgYW5kIGN1bHR1cmFsbHkgb3V0c3RhbmRpbmcgZW1waXJlcyBvZiBtZWRpYWV2YWwgU291dGggSW5kaWEgIEV2ZW50IDEuIFJlaWduIG9mIERldmEgUmF5YSBJSTogS25vd24gYXMgb25lIG9mIHRoZSBncmVhdGVzdCBydWxlcnMgb2YgVmlqYXlhbmFnYXJhIGVtcGlyZSwgdGhlIHJlaWduIG9mICBEZXZhIFJheWEgSUkgb2YgU2FuZ2FtIGR5bmFzdHkgc3RhcnRlZCBpbiAxNDI1IGFuZCBsYXN0ZWQgdGlsbCAxNDQ2LiBIZSBzdHJlbmd0aGVuZWQgdGhlIGFybXksIGVzcGVjaWFsbHkgIHRoZSBjYXZhbHJ5IHVuaXQgb2YgdGhlIFZpamF5YW5hZ2FyYSBlbXBpcmUgYnkgaW1wb3J0aW5nIEFyYWIgaG9yc2VzIGFuZCBoaXJpbmcgTXVzbGltIGhvcnNlcmlkZXJzIGFuZCAgYXJjaGVyZXJzIGZyb20gbmVpZ2hib3VyaW5nIGtpbmdkb21zLiBUaGlzIGhlbHBlZCB0aGUgVmlqYXlhbmFnYXJhIGVtcGlyZSBlZmZlY3RpdmVseSBmaWdodCBhbmQgc2xvd2x5ICBiZWdpbiB0byBvdmVydGFrZSB0aGUgQmFobWFuaSBraW5nZG9tIHdoaWNoIHdhcyBzdHJvbmdlciBiYWNrIHRoZW4uICBFdmVudCAyLiBJbiAxNTIwLCBLcmlzaG5hZGV2YXJheWEgb2YgdGhlIFZpamF5YW5hZ2FyYSBFbXBpcmUgKDE1MDktMTUyOSkgYW5kIFN1bHRhbiBJc21haWwgQWRpbCBTaGFoIG9mICBCaWphcHVyIHdlbnQgdG8gYmF0dGxlLiBUaGlzIHdhcyB0aGUgQmF0dGxlIG9mIFJhaWNodXIuIFJhaWNodXIgaGFkIG51bWVyb3VzIGlyb24gYW5kIGRpYW1vbmQgZGVwb3NpdHMgIGFuZCBsYXkgYmV0d2VlbiB0aGUgS3Jpc2huYSBhbmQgVHVuZ2FiaGFkcmEgcml2ZXJzLiAgS3Jpc2huYWRldmFyYXlhIGhhZCBhbiBlYXN5IHZpY3RvcnkuICBFdmVudCAzLiBBcnJpdmFsIG9mIFBvcnR1Z3Vlc2UgdHJhdmVsbGVyIE51bml6OiBQb3J0dWd1ZXNlIHRyYXZlbGxlciBGZXJuYW8gTnVuaXogYXJyaXZlZCBpbiB0aGUgIFZpamF5YW5hZ2FyYSBlbXBpcmUgc29tZXRpbWUgaW4gdGhlIDE1MzBzIGR1cmluZyB0aGUgcmVpZ24gb2YgQWNoeXV0YSBSYXlhIG9mIFR1bHV2YSBkeW5hc3R5IChicm90aGVyICBhbmQgc3VjY2Vzc29yIG9mIEtyaXNobmFkZXZhcmF5YSkuIEhlIGlzIG9uZSBvZiB0aGUgZmFtb3VzIGZvcmVpZ24gdHJhdmVsbGVycyB3aG8gbGVmdCBhIHZpdmlkIGFjY291bnQgb2YgIHRoZWlyIHRyYXZlbHMgaW4gdGhlIFZpamF5YW5hZ2FyYSBlbXBpcmUuIFRoZXNlIGFjY291bnRzIGhlbHBlZCB0byByZWNyZWF0ZSB0aGUgc29jaWFsLCBlY29ub21pYyBhbmQgIHBvbGl0aWNhbCBsaWZlIG9mIHRoZSBlbXBpcmUuICBFdmVudCA0LiBCYXR0bGUgb2YgVGFsaWtvdGE6IFRoZSBCYXR0bGUgb2YgVGFsaWtvdGEgdG9vayBwbGFjZSBpbiB0aGUgeWVhciAxNTY1IGR1cmluZyB0aGUgcmVpZ24gb2YgUmFtYSAgUmF5YSBvZiBUdWx1dmEgZHluYXN0eS4gSXQgd2FzIGEgdHVybmluZyBwb2ludCBpbiB0aGUgaGlzdG9yeSBvZiB0aGUgVmlqYXlhbmFnYXJhIGVtcGlyZSBhcyBpdCBtYXJrZWQgdGhlICBlbmQgb2YgdGhlIHByb3NwZXJpdHkgYW5kIGRvbWluYW5jZSBvZiB0aGlzIGVtcGlyZS4gVGhlIHN1Y2Nlc3NvcnMgb2YgS3Jpc2huYWRldmFyYXlhIHdlcmUgd2VhayBhbmQgIGNvdWxkIG5vdCBoYW5kbGUgdGhlIGVtcGlyZSBjb21wZXRlbnRseS4gVGhlIGVtcGlyZSdzIGVuZW1pZXMgLSBEZWNjYW5pIFN1bHRhbmF0ZXMgb2YgQmlqYXB1ciwgIEdvbGNvbmRhLCBBaG1lZG5hZ2FyIGFuZCBCaWRhciBjb21iaW5lZCBmb3JjZXMgYW5kIGF0dGFja2VkIFZpamF5YW5hZ2FyYSwgZGVmZWF0aW5nIFJhbWEgUmF5YS4gIE1hbnkgdGVycml0b3JpZXMgYW5kIGltcG9ydGFudCBwb3J0cyBvZiB0aGUgZW1waXJlIHdlcmUgbG9zdCBhbmQgdGhlIGNhcGl0YWwgd2FzIHBpbGxhZ2VkIGFuZCBsb290ZWQuICBBbHRob3VnaCB0aGUgZW1waXJlIHN1cnZpdmVkIGluIHNtYWxsZXIgdGVycml0b3JpZXMgY29udHJvbGxlZCBieSB0aGUgbmV3IEFyYXZpZHUgZHluYXN0eSwgaXRzIGZvcm1lciAgZWNvbm9taWMgYW5kIG1pbGl0YXJ5IHBvd2VyIGFuZCBnbG9yeSB3ZXJlIGxvc3QuICBTb3VyY2U6ICBNZWRpZXZhbCBJbmRpYW4gSGlzdG9yeSBieSBTYXRpc2ggQ2hhbmRyYSwgOXRoIEVkaXRpb24sIENoLTksIFBnIDkuNiwgOSwxNDsgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBodHRwczovL3d3dy50aGVoaW5kdS5jb20vbmV3cy9uYXRpb25hbC9rYXJuYXRha2Evd2hlbi1tZWRpZXZhbC10cmF2ZWxsZXJzLXdhdGNoZWQtdGhlLWdyZWF0LSBmZWFzdC9hcnRpY2xlMzI4ODc2MTMuZWNlIzp+OnRleHQ9Q0UlMkMlMjBhbmQlMjBGZXJuYW8tLE51bml6LC13aG8lMjB3YXMlMjBpbiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1-2-3-4 ",
        "option2" : "3-2-4-1 ",
        "option3" : "1-3-2-4 ",
        "option4" : "3-1-2-4  "
      }
    },
    {
      "index" : 25,
      "question" : "With respect to the condition of women in the Vijayanagar empire, consider the following statements: 1.  They were literate and often composed various literary works 2.  The Devadasi system was abolished in this empire 3.  They participated in physical activities like wrestling, guarding, horse-riding, etc Which of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIFZpamF5YW5hZ2FyYSBlbXBpcmUgd2FzIG9uZSBvZiB0aGUgbW9zdCBleHRlbnNpdmUgZW1waXJlcyBwcmVzZW50IGluIFNvdXRoIEluZGlhIGZyb20gMTR0aCB0byB0aGUgIDE3dGggY2VudHVyeS4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFdvbWVuIG9mIHRoZSBWaWpheWFuYWdhciBlbXBpcmUsIGVzcGVjaWFsbHkgdGhvc2Ugb2YgdGhlIHJveWFsIG9yIG5vYmxlIGhvdXNlaG9sZHMgIHdlcmUgb2Z0ZW4gbGl0ZXJhdGUgYW5kIGNvbXBvc2VkIG1hbnkgbGl0ZXJhcnkgdGV4dHMuIEZvciBleGFtcGxlLCBRdWVlbiBUaXJ1bWFsYW1iYSB3YXMgYSBwb2V0ZXNzICB3aG8gYXV0aG9yZWQgVmFyYWRhbWJpa2EgUGFyaW5heWFtLCB3aGlsZSBHYW5nYWRldmksIHdpZmUgb2YgS3VtYXJha2FtcGFuYSBhdXRob3JlZCB0aGUgZmFtb3VzICB3b3JrIE1hZGh1cmF2aWpheWFtLiBUYWxsYXBha2EgVGltbWFra2EsIEhhbm5hbWFtIGFuZCBBdHVrdXJpIE1vbGxhIHdlcmUgVGVsdWd1IHdvbWVuIHBvZXRzICB3aG8gZ2FpbmVkIHBvcHVsYXJpdHkgZHVyaW5nIHRoaXMgcGVyaW9kLiBIb3dldmVyLCB0aGUgbWFqb3JpdHkgb2YgdGhlIG9yZGluYXJ5IHdvbWVuIHdlcmUgbm90IGxpdGVyYXRlLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGlzIHN0YXRlbWVudCBpcyBpbmNvcnJlY3QgYmVjYXVzZSB0aGUgRGV2YWRhc2kgc3lzdGVtIGZsb3VyaXNoZWQgKG5vdCAgYWJvbGlzaGVkKSBpbiB0aGUgVmlqYXlhbmFnYXJhIGVtcGlyZS4gQWx0aG91Z2ggbGF0ZXIgd2lkZWx5IGNvbnNpZGVyZWQgYXMgYSBzb2NpYWwgZXZpbCB3aGVyZSB3b21lbiB3ZXJlICBkcmF3biBpbnRvIHNsYXZlcnkgaW4gdGhlIG5hbWUgb2YgbWFycmlhZ2UgYW5kIHNlcnZpY2UgdG8gYSBkZWl0eSwgaXQgd2FzIGEgY29tbW9uIHByYWN0aWNlIHRocm91Z2hvdXQgIHRoZSBtZWRpZXZhbCBhZ2VzIGluIFNvdXRoIEluZGlhLCBpbmNsdWRpbmcgaW4gdGhlIFZpamF5YW5hZ2FyYSBlbXBpcmUuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBBY2NvdW50cyBvZiBmb3JlaWduIHRyYXZlbGxlcnMgbGlrZSBOdW5peiBhcyB3ZWxsIGFzIHNjdWxwdHVyYWwgZGVzY3JpcHRpb25zIGluICBidWlsZGluZ3MgbGlrZSB0aGUgTWFoYW5hdm1pIERpYmJhIHNob3cgdGhhdCB0aGUgd29tZW4gcGFydGljaXBhdGVkIGluIG1hbnkgcGh5c2ljYWwgYWN0aXZpdGllcyAgZ2VuZXJhbGx5IHJlc2VydmVkIGZvciBtYWxlcywgbGlrZSB3cmVzdGxpbmcsIGhvcnNlIHRhbWluZy8gcmlkaW5nLCBlbGVwaGFudCByaWRpbmcsIGFyY2hlcnksIHN3b3JkICBmaWdodGluZywgaHVudGluZywgZXRjLiAgS25vd2xlZGdlIEJhc2U6ICAgMSkgU29tZSB3b21lbiB3ZXJlIGFsc28gc2FpZCB0byBwcmFjdGljZSBwcm9mZXNzaW9ucyBsaWtlIGFzdHJvbG9neSwgc29vdGhzYXlpbmcgYW5kIGFjY291bnRpbmcgdGh1cyAgcGFydGljaXBhdGluZyBhY3RpdmVseSBpbiB0aGUgcG9saXRpY2FsLCBqdWRpY2lhbCwgYWRtaW5pc3RyYXRpdmUgYW5kIGxpdGVyYXJ5IGxpZmUuICAyKSBNb3N0IG9mIHRoZSB3b21lbiBmb2xsb3dlZCByb3V0aW5lIHJvbGVzIGFzIHNlZW4gdGhyb3VnaG91dCBtZWRpYWV2YWwgSW5kaWFuIHNvY2lldGllcy4gVGhleSBtb3N0bHkgIHN0YXllZCBhdCBob21lIGFuZCBwZXJmb3JtZWQgY2FyZWdpdmluZyBhbmQgaG91c2VrZWVwaW5nIGZ1bmN0aW9ucy4gIDMpIE51bml6IHNheXMgbWFueSB3b21lbiB3ZXJlIGVtcGxveWVkIGFzIGRhbmNlcnMsIG11c2ljaWFucywgZG9tZXN0aWMgc2VydmFudHMsIHBhbGFucXVpbiBiZWFyZXJzICBhbmQgY291cnRlc2FucyBieSB0aGUgcGFsYWNlLiAgNCkgU2F0aSBzeXN0ZW0gd2FzIHdpZGVseSBhY2NlcHRlZCBhbmQgcHJldmFsZW50LiAgNSkgUG9seWdhbXkgd2FzIHByYWN0aXNlZCBhbW9uZyB0aGUgcm95YWwvIG5vYmxlIGZhbWlsaWVzLiAgU291cmNlOiBodHRwczovL3d3dy50aGVoaW5kdWJ1c2luZXNzbGluZS5jb20vbmV3cy92YXJpZXR5L0FscGhhLXdvbWVuLW9mLSBIYW1waS9hcnRpY2xlMjAzOTY3NzkuZWNlICBodHRwczovL2Jsb2cuZm9ydW1pYXMuY29tL3F1ZXN0aW9uL2FjY29yZGluZy10by1wb3J0dWd1ZXNlLXdyaXRlci1udW5pei10aGUtd29tZW4taW4tIHZpamF5YW5hZ2FyYS1lbXBpcmUtd2VyZS1leHBlcnQtaW4td2hpY2gtb2YtdGhlLWZvbGxvd2luZy1hcmVhczEtd3Jlc3RsaW5nLTItYXN0cm9sb2d5LTMtIGFjY291bnRpbmctNC1zb290aHNheWluZy1zZWxlY3QtdGhlLWNvcnJlY3QtYW5zd2VyLXVzaW4vICAgVE4gQm9hcmQgU0NFUlQgQ2xhc3MgMTEsIDFzdCBlZGl0aW9uLCBDaC0xOSwgUGcyMTQgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 26,
      "question" : "Which of the statements is/are correct regarding the 'Vakatakas'?  1. The Vakatakas were followers of Brahmanism but also patronized the Buddhist shrines.  2. They were in a matrimonial alliance with the Gupta empire.  3. Women were given high social positions and political freedom in the Vakataka empire after the rise of Vakataka queen Prabhavatigupta.  Select the correct answer using the code given below.   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBWYWthdGFrYSBFbXBpcmUgd2FzIGEgZHluYXN0eSBmcm9tIHRoZSBJbmRpYW4gc3ViY29udGluZW50IHRoYXQgb3JpZ2luYXRlZCBmcm9tIHRoZSBEZWNjYW4gaW4gdGhlICBtaWQtM3JkIGNlbnR1cnkgQ0UgdW5kZXIgcnVsZXIgVmluZGh5YXNoYWt0aS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgVmFrYXRha2EgZHluYXN0eSB3YXMgYSBCcmFobWluIGR5bmFzdHkuIFRoZXkgd2VyZSBmb2xsb3dlcnMgb2YgQnJhaG1hbmlzbSwgIGJ1dCBhbHNvIHBhdHJvbml6ZWQgdGhlIEJ1ZGRoaXN0IHNocmluZXMuIFRoZSBzZWNvbmQgcGhhc2Ugb2YgYWphbnRhIGNhdmVzIGJldHdlZW4gdGhlIDR0aCBhbmQgdGhlIDZ0aCAgY2VudHVyaWVzIEEuRCB3YXMgYnVpbHQgZHVyaW5nIHRoZSBydWxlIG9mIHRoZSBWYWthdGFrYSBraW5ncyB3aG8gYWxzbyB3b3JzaGlwZWQgdGhlIGhpbmR1IGRlaXRpZXMuICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBHdXB0YXMgZW50ZXJlZCBpbnRvIG1hdHJpbW9uaWFsIGFsbGlhbmNlcyB3aXRoIHRoZSBOYWdhcyBieSBtYXJyeWluZyAgcHJpbmNlc3MgS3ViZXJhbmFnYSB3aG9zZSBkYXVnaHRlciBQcmFiaGF2YXRpIHdhcyBsYXRlciBvbiBtYXJyaWVkIHRvIFJ1ZHJhc2VuYS1JSSBvZiB0aGUgVmFrYXRha2EgIGZhbWlseS4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0LiBEdXJpbmcgdGhlIFZha2F0YWthIGR5bmFzdHksIHRoZSBwb3NpdGlvbiBvZiB3b21lbiBvciBoaWdoZXIgdmFybmFzIHdhcyBsb3cuICBBbHRob3VnaCB0aGVyZSB3ZXJlIHBlcnNvbmFsaXRpZXMgbGlrZSB0aGUgVmFrYXRha2EgcXVlZW4gUHJhYmhhdmF0aWd1cHRhIHdobyB3aWVsZGVkIGNvbnNpZGVyYWJsZSAgcG93ZXIsIG5vdCBhbGwgd29tZW4gd2VyZSBzbyBwcml2aWxlZ2VkLiBUaGUgVmFrYXRha2Ega2luZ3Mgd2hvIGZvbGxvd2VkIGJyYWhtYW5hIHRleHRzIHNldCBkb3duICBub3JtcyB3aGljaCB3b21lbiB3ZXJlIGV4cGVjdGVkIHRvIGZvbGxvdyBhbmQgd29tZW4gd2VyZSBleHBlY3RlZC4gaW4gdGhlIGZhbWlseSwgdG8gZnVuY3Rpb24gbWFpbmx5ICBhcyBhbiBpZGVhbCB3aWZlIGFuZCBpZGVhbCBtb3RoZXIuIEluIG1hbnkgQnJhaG1hbmEgdGV4dHMsIHdvbWVuIHdlJ3JlIGV2ZW4gY29uc2lkZXJlZCxmb3IgdmFyaW91cyAgcmVhc29ucywgdG8gYmUgb2YgdGhlIHNhbWUgY2F0ZWdvcnkgYXMgdGhlIFN1ZHJhcy4gICAgU291cmNlOiAgaHR0cHM6Ly93d3cubmV3d29ybGRlbmN5Y2xvcGVkaWEub3JnL2VudHJ5L0FqYW50YV9DYXZlcyAgIGh0dHBzOi8vYXJ0c2FuZGN1bHR1cmUuZ29vZ2xlLmNvbS9lbnRpdHkvdmFrYXRha2EtZHluYXN0eS9tMDlid3o3P2hsPWVuICAgaHR0cHM6Ly9mcm9udGxpbmUudGhlaGluZHUuY29tL290aGVyL2FydGljbGUzMDE5NzcyMS5lY2UgICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzYyODY0LzEvQmxvY2stOC5wZGYgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3      \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to political and cultural invasion by Chola's in South and Southeast Asia, consider the following statements:  1. The naval raids on the Srivijaya empire in Southeast Asia were launched under the chola ruler Rajendra I.  2. The rulers of the Shailendra empire were patrons of Hinayana Buddhism.  3. The northern part of Sri Lanka was incorporated into the Chola kingdom under the Chola ruler Raja Raja.  4. The dominance of Tamil trade guilds in major trading centers in Southeast Asia  led to a matrimonial alliance between the Cholas and the Srivijayas.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDaG9sYXMgcnVsZWQgaW4gdGhlIFNhbmdhbSBhZ2UgZnJvbSAzMDAgQkNFIHRvIDYwMCBDRS4gVGhlIGltcGVyaWFsIENob2xhIGtpbmdkb20gZXhwYW5kZWQgIGV4cG9uZW50aWFsbHkgdW5kZXIgdGhlIHJlaWducyBvZiBSYWphcmFqYSBDaG9sYSBhbmQgaGlzIHNvbiwgUmFqZW5kcmEgQ2hvbGEuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBuYXZhbCByYWlkcyBvbiB0aGUgU3JpdmlqYXlhIEVtcGlyZSAgaW4gU291dGhlYXN0IEFzaWEgIHdlcmUgbGF1bmNoZWQgYnkgIHRoZSAgQ2hvbGEgRW1wZXJvciBSYWplbmRyYSBJIGluIDEwMjUuIFRoZSBldmVudCB3YXMgIG1lbnRpb25lZCBpbiBhbiBpbnNjcmlwdGlvbiBhdCBhIHRlbXBsZSBhdCBUaGFuamF2dXIuICBUaGUgaW5jaWRlbnQgaXMgYWxzbyByZWNvcmRlZCBpbiBvbmUgb2YgdGhlIG1vc3Qgc2lnbmlmaWNhbnQgTWFsYXkgbGl0ZXJhcnkgd29ya3MsIFNlamFyYWggTWFsYXl1LiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gVGhlIFNoYWlsZW5kcmEgcnVsZXJzIHdobyBydWxlZCBmcm9tIGNlbnRyYWwgSmF2YSBhbmQgU3VtYXRyYSBiZXR3ZWVuIDc1MCB0byAgODUwIENFLCB3ZXJlIHRoZSBmb2xsb3dlcnMgb2YgTWFoYXlhbmEgQnVkZGhpc20gYW5kIGNvbW1pc3Npb25lZCB0aGUgY29uc3RydWN0aW9uIG9mIHNvbWUgIG1hZ25pZmljZW50IEJ1ZGRoaXN0IHN0cnVjdHVyZXMuIFdoaWxlIE15YW5tYXIgcnVsZXJzIHByZWRvbWluYW50YWx5IHBhdHJvbml6ZWQgSGluYXlhbmEgQnVkZGhpc20uICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIEFudXJhZGhhcHVyYSBLaW5nZG9tIG9mIFNyaSBMYW5rYSB3YXMgaW52YWRlZCBieSBSYWphIFJhamEgQ2hvbGEgYmV0d2VlbiAgOTkxIGFuZCA5OTMgQUQgYW5kIGhlIGNvbnF1ZXJlZCB0aGUgbm9ydGhlcm4gcGFydCBvZiB0aGUgY291bnRyeSAuIEl0IHdhcyBsYXRlciBpbmNvcnBvcmF0ZWQgaW50byBoaXMgIGtpbmdkb20gYXMgYSBwcm92aW5jZSBuYW1lZCAiTXVtbXVkaS1zb2xhLW1hbmRhbGFtIi4gVGhlIGNvbXBsZXRlIGNvbnF1ZXN0IG9mIEFudXJhZGhhcHVyYSB3YXMgIGNvbXBsZXRlZCBieSBoaXMgc29uIFJhamVuZHJhIENob2xhIEkuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gVGhlIGluZmx1eCBhbmQgZG9taW5hbmNlIG9mIFRhbWlsIHRyYWRlIGd1aWxkcyBpbiBtYWpvciB0cmFkaW5nIGNlbnRlcnMgaW4gIFNvdXRoZWFzdCBBc2lhIGxlZCB0byBhIG1hdHJpbW9uaWFsIGFsbGlhbmNlIGJldHdlZW4gdGhlIENob2xhcyBhbmQgdGhlIFNyaXZpamF5YXMgKFJhamVuZHJhIENob2xhIG1hcnJpZWQgIE9uYW5nIEtpdSwgdGhlIGRhdWdodGVyIG9mIFZpamF5b3R0dW5nYXZhcm1hbikuIFRoZSBpbmNyZWFzaW5nIHByZXNlbmNlIG9mIFRhbWlsIG1lcmNoYW50IGFzc29jaWF0aW9ucyAgYW5kIHRoZSBtYXRyaW1vbmlhbCBhbGxpYW5jZSBjZW1lbnRlZCB0aGUgcmVsYXRpb25zIGJldHdlZW4gU3JpdmlqYXlhIGFuZCB0aGUgQ2hvbGFzLiAgICBTb3VyY2U6IGh0dHBzOi8vd3d3LmVneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzczODkzLzEvVW5pdC05LnBkZiAgIGh0dHBzOi8vbmlvcy5hYy5pbi9tZWRpYS9kb2N1bWVudHMvU3JTZWMzMTVORVcvMzE1X0hpc3RvcnlfRW5nLzMxNV9IaXN0b3J5X0VuZ19MZXNzb244LnBkZiAgaHR0cHM6Ly9taWxpdGFyeS1oaXN0b3J5LmZhbmRvbS5jb20vd2lraS9DaG9sYV9ydWxlX2luX1NyaV9MYW5rYSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "1, 3 and 4 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 28,
      "question" : "Consider the following statements:  1. The performance of Vedic sacrifices by Brahmans was the earliest evidence of the spread of Hinduism in Southeast Asia.  2. The largest Hindu temple in Cambodia is the most significant specimen of Dravidian architecture in Southeast Asia.  3. The Kingdoms of Southeast Asia opted Sanskrit as a language of court and religion.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBjdWx0dXJhbCBpbmZsdWVuY2Ugb2YgSW5kaWEgb24gU291dGhFYXN0IEFzaWEgY2FuIGJlIGF0dGVzdGVkIGJ5IHN0dWR5aW5nIHRoZSBkZXZlbG9wbWVudCBvZiBhcnRpc3RpYyAgdHJhZGl0aW9ucyBhbmQgY29uY2VwdHMgaW4gU291dGhlYXN0IEFzaWEgd2hpY2ggcmVmbGVjdCBhbiBpbnRlcmNoYW5nZSBvZiBpZGVhcyBib3RoIGludHJhLXJlZ2lvbmFsIGFuZCAgaW50ZXItcmVnaW9uYWwuICAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBlYXJsaWVzdCBtYXRlcmlhbCBldmlkZW5jZSBvZiBIaW5kdWlzbSBpbiBTb3V0aGVhc3QgQXNpYSBjb21lcyBmcm9tIEJvcm5lbywgIHdoZXJlIGxhdGUgNHRoLWNlbnR1cnkgU2Fuc2tyaXQgaW5zY3JpcHRpb25zIHRlc3RpZnkgdG8gdGhlIHBlcmZvcm1hbmNlIG9mIFZlZGljIHNhY3JpZmljZXMgYnkgQnJhaG1hbnMgIGF0IHRoZSBiZWhlc3Qgb2YgbG9jYWwgY2hpZWZzLiBUaGUgZG9taW5hbnQgZm9ybSBvZiBIaW5kdWlzbSBleHBvcnRlZCB0byBTb3V0aGVhc3QgQXNpYSB3YXMgU2hhaXZpc20sICB0aG91Z2ggc29tZSBWYWlzaG5hdmlzbSB3YXMgYWxzbyBrbm93biB0aGVyZS4gICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3QuIFRoZSBLaG1lciBydWxlcnMgYnVpbHQgdGhlaXIgdGVtcGxlcyAod2F0KSBpbiB0aGUgRHJhdmlkaWFuIHN0eWxlLiBUaGUgbW9zdCAgc2lnbmlmaWNhbnQgb25lIHdhcyBBbmdrb3J3YXQgYnVpbHQgYnkgU3VyeWF2YXJtYW4gSUkgaW4gaGlzIGNhcGl0YWwgY2l0eSwgQW5na29yIGluIENhbWJvZGlhLiBUaGUgcmVsaWVmcyAgb24gdGhlIHdhbGxzIG9mIHRoZSBtYWluIHRlbXBsZSwgZ2FsbGVyaWVzIGFuZCBjYXVzZXdheXMgZGVwaWN0IHN0b3JpZXMgZnJvbSB0aGUgdHdvIG1ham9yIEhpbmR1IEVwaWNzLHRoZSAgUmFtYXlhbmEgYW5kIHRoZSBNYWhhYmhhcmF0YS4gSXQgaXMgZGVkaWNhdGVkIHRvIFZpc2hudSBhbmQgaXMgdGhlIGxhcmdlc3QgSGluZHUgdGVtcGxlLiAgICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgY29udGFjdCBvZiBJbmRpYSB3aXRoIHRoZSBTb3V0aGVhc3Qgd2FzIGxhcmdlbHkgb24gYWNjb3VudCBvZiB0cmFkZS4gQWxvbmcgd2l0aCAgdGhlIEluZGlhbiB0cmFkZXJzIGNhbWUgdGhlIHByaWVzdHMsIHBhcnRpY3VsYXJseSB0aGUgQnVkZGhpc3QgYW5kIGJyYWhtYW5hcywgdG8gbWVldCB0aGUgcml0dWFsICByZXF1aXJlbWVudHMgb2YgdGhlIEluZGlhbiBzZXR0bGVycy4gSXQgdGh1cyBjcmVhdGVkIGEgc2l0dWF0aW9uIGZvciB0aGUgc3ByZWFkIG9mIEluZGlhbiBzb2NpYWwgICBhbmQgY3VsdHVyYWwgaWRlYXMgaW4gU291dGggZWFzdCBBc2lhLiBJdCByZXN1bHRlZCBpbiBwZWFjZWZ1bCBpbnRlcm1peGluZyBvZiBJbmRpYW4gY29uY2VwdHMgd2l0aCBsb2NhbCAgY3VsdHVyYWwgZmVhdHVyZXMuIFNhbnNrcml0IHdhcyBhY2NlcHRlZCBhcyBhIGxhbmd1YWdlIG9mIGNvdXJ0IGFuZCByZWxpZ2lvbiBpbiBTb3V0aGVhc3QgQXNpYSB0aGUgcmVnaW9uYWwgIGxhbmd1YWdlcyBjb250aW51ZWQgdG8gYmUgdXNlZCBzaWRlIGJ5IHNpZGUuICAgU291cmNlOiAgaHR0cHM6Ly9uaW9zLmFjLmluL21lZGlhL2RvY3VtZW50cy9TclNlYzMxNU5FVy8zMTVfSGlzdG9yeV9FbmcvMzE1X0hpc3RvcnlfRW5nX0xlcyBzb244LnBkZiAgIGh0dHBzOi8vd3d3LmJyaXRhbm5pY2EuY29tIG9waWMvSGluZHVpc20vVGhlLXNwcmVhZC1vZi1IaW5kdWlzbS1pbi1Tb3V0aGVhc3QtQXNpYS1hbmQtdGhlLSBQYWNpZmljICAgaHR0cHM6Ly93d3cuZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNzM4OTMvMS9Vbml0LTkucGRmICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 29,
      "question" : "Regarding the Chola reign, which of the following statements correctly mentions the significance of Uttaramerur inscriptions?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IFV0dGFyYW1lcnVyIGluc2NyaXB0aW9ucyBnaXZlcyBhIHBlZWsgaW50byBmdW5jdGlvbmluZyBpbiB0aGUgQ2hvbGEgYWRtaW5pc3RyYXRpb24uICBJbnNjcmlwdGlvbnMgZnJvbSBVdHRhcmFtZXJ1ciBpbiBDaGluZ2xlcHV0IGRpc3RyaWN0LCBUYW1pbCBOYWR1LCBwcm92aWRlIGRldGFpbHMgb2YgdGhlIHdheSBpbiB3aGljaCB0aGUgIHNhYmhhIHdhcyBvcmdhbmlzZWQuIFRoZSBzYWJoYSBoYWQgc2VwYXJhdGUgY29tbWl0dGVlcyB0byBsb29rIGFmdGVyIGlycmlnYXRpb24gd29ya3MsIGdhcmRlbnMsICB0ZW1wbGVzLCBldGMuIE5hbWVzIG9mIHRob3NlIGVsaWdpYmxlIHRvIGJlIG1lbWJlcnMgb2YgdGhlc2UgY29tbWl0dGVlcyB3ZXJlIHdyaXR0ZW4gb24gc21hbGwgdGlja2V0cyBvZiAgcGFsbSBsZWFmIGFuZCBrZXB0IGluIGFuIGVhcnRoZW53YXJlIHBvdCwgZnJvbSB3aGljaCBhIHlvdW5nIGJveSB3YXMgYXNrZWQgdG8gcGljayB0aGUgdGlja2V0cywgb25lIGJ5ICBvbmUgZm9yIGVhY2ggY29tbWl0dGVlLiAgIFNvdXJjZTogSGlzdG9yeSwgTkNFUlQgVklJLCBDaGFwdGVyLTIsIE5ldyBLaW5ncyBhbmQgS2luZ2RvbXMsIFBnLiAyNiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "It speaks about various expeditions of  different Chola rulers.  ",
        "option2" : "It gives the details about the temples  constructed by different Chola rulers.  ",
        "option3" : "It provide details of the way in which the  sabha was organised.  ",
        "option4" : "It provides evidence of the Chola's attack on  Kerala and nearby regions.    "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements with reference to taxation and revenue system of Vijayanagar Empire in medieval Indian history:  1. The Vijayanagar rulers levied taxes according to the relative fertility of the lands.  2. Though the principal source of revenue was land tax, there was no tax on marriage.  3. The officers of Vijayanagar Empire were harsh in tax collection, which led the people to rise in revolt.   4. The dasavanda/Kattu-Kodage was a share in the increased productivity of the land.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQWNjb3JkaW5nIHRvIHRoZSBhY2NvdW50cyBvZiB0aGUgZm9yZWlnbiB0cmF2ZWxlcnMsIHRoZSBWaWpheWFuYWdhciBraW5nZG9tIHdhcyBvbmUgb2YgdGhlIHdlYWx0aGllc3QgIGtpbmdkb21zIG9mIHRoZSB3b3JsZCBhdCB0aGF0IHRpbWUuIFRoZXJlIHdlcmUgbnVtZXJvdXMgaW5kdXN0cmllcyBhbmQgdGhleSB3ZXJlIG9yZ2FuaXNlZCBpbnRvIGd1aWxkcy4gIE1ldGFsIHdvcmtlcnMgYW5kIG90aGVyIGNyYWZ0c21lbiBmbG91cmlzaGVkIGR1cmluZyB0aGlzIHBlcmlvZC4gQWdyaWN1bHR1cmUgY29udGludWVkIHRvIGJlIHRoZSBjaGllZiAgb2NjdXBhdGlvbiBvZiB0aGUgcGVvcGxlLiAgIExhbmQgcmV2ZW51ZSBrbm93biBhcyBzaXN0LCB3YXMgdGhlIHByaW5jaXBhbCBzb3VyY2Ugb2YgaW5jb21lIG9mIHRoZSBWaWpheW5hZ2FyIFN0YXRlLiBJdCBoYWQgYW4gZWZmaWNpZW50ICBzeXN0ZW0gb2YgbGFuZCByZXZlbnVlIGFkbWluaXN0cmF0aW9uLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuICBUbyBtZWV0IHRoZSBoZWF2eSBidXJkZW4gb2YgdGhlIFN0YXRlIGFuZCBzb2x2ZSB0aGUgcHJvYmxlbSBvZiBvYnRhaW5pbmcgbWVuIGFuZCAgbW9uZXkgdG8gd2l0aHN0YW5kIGl0cyBlbmVtaWVzLCB0aGUgVmlqYXluYWdhciBlbXBlcm9ycyBnYXZlIHVwIHRoZSB0cmFkaXRpb25hbCByYXRlIG9mIGFzc2Vzc21lbnRzIGF0ICBvbmUtc2l4dGggb2YgdGhlIHByb2R1Y2UgYW5kIGluY3JlYXNlZCBpdCB0byBzb21lIGV4dGVudC4gVGhlIFZpamF5bmFnYXIgcnVsZXJzIGFkb3B0ZWQgdGhlICdwcmluY2lwbGUgb2YgIGRpZmZlcmVudGlhbCB0YXhhdGlvbicsIHRoYXQgaXMsIGxldmllZCB0YXhlcyBhY2NvcmRpbmcgdG8gdGhlIHJlbGF0aXZlIGZlcnRpbGl0eSBvZiB0aGUgbGFuZHMuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBCZXNpZGVzIHRoZSBsYW5kIHRheGUsIHRoZSByeW90cyBoYWQgdG8gcGF5IG90aGVyIGtpbmRzIG9mIHRheGVzIGxpa2UgZ3JhemluZyB0YXgsICBtYXJyaWFnZSB0YXggZXRjLiBvdGhlciBzb3VyY2Ugb2YgaW5jb21lIG9mIHRoZSBTdGF0ZSB3ZXJlIHRoZSByZXZlbnVlIGZyb20gY3VzdG9tcyBkdXRpZXM7IHRvbGxzIG9uIHJvYWRzLCAgcmV2ZW51ZSBmcm9tIGdhcmRlbmluZyBhbmQgcGxhbnRhdGlvbnM7IGFuZCB0YXhhdGlvbjsgYW5kIHRheGVzIGxldmllZCBvbiBkZWFsZXJzIGluIGdvb2RzIG9mIGNvbW1vbiAgY29uc3VtcHRpb24sIE1hbnVmYWN0dXJlcnMgYW5kIGNyYWZ0c21lbiwgcG90dGVycywgd2FzaGVybWVuLCBzaG9lbWFrZXJzLCBiYXJiZXJzLCBtZW5kaWNhbnRzLCAgdGVtcGxlcyBhbmQgcHJvc3RpdHV0ZXMuIFRheGVzIHdlcmUgcGFpZCBib3RoIGluIGNhc2ggYW5kIGtpbmQuICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gSXQgaXMgZm91bmQgdGhhdCBkdXJpbmcgdGhlIFNhbmdhbWEgZHluYXN0eSB3aGVuIHRoZSBWaWpheWFuYWdhciBydWxlIHdhcyAgZXh0ZW5kZWQgdG8gbmV3IGFyZWFzLCB0aGVpciBvZmZpY2VycyB3ZXJlIGhhcnNoIGluIHRheCBjb2xsZWN0aW9uLCB3aGljaCBwcm92b2tlZCB0aGUgdG9pbGluZyBwZW9wbGUgdG8gICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICByaXNlIGluIHJldm9sdC4gT25lIHN1Y2ggcmV2b2x0IHRvb2sgcGxhY2UgaW4gMTQzMCBpbiBjZW50cmFsIHBhcnRzIG9mIFRhbWlsIE5hZHUuIFRoaXMgd2FzIHRoZSByZXZvbHQgaW4gd2hpY2ggIGFsbCB0aGUgYmFzaWMgcHJvZHVjZXJzIGpvaW5lZCBmb3JnZXR0aW5nIHRoZWlyIGNhc3RlIGRpZmZlcmVuY2VzLiBUaGUgcmV2b2x0IHRvb2sgcGxhY2UgZHVlIHRvIHRoZSB1bmp1c3QgIGFuZCBhcmJpdHJhcnkgdGF4IGRlbWFuZHMgb2YgdGhlIGdvdmVybm1lbnQgaW5jbHVkaW5nIHRoZSBwcmFkaGFuaSAoZ292ZXJub3IpLCBoaXMgbWlsaXRhcnkgYm9kaWVzLCBhbmQgIHRoZSBsYW5kbG9yZHMuICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdC4gQW5vdGhlciBjYXRlZ29yeSBvZiBsYW5kIHJpZ2h0IHRocm91Z2ggd2hpY2ggaW5jb21lIHdhcyBkZXJpdmVkIHdhcyBhIHJlc3VsdCBvZiAgaW52ZXN0bWVudCBpbiBpcnJpZ2F0aW9uLiBJdCB3YXMgY2FsbGVkIGRhc2F2YW5kYSBpbiBUYW1pbCBjb3VudHJ5OyBhbmQgS2F0aHUtS29kYWdlIGluIEFuZGhyYSBhbmQgIEthcm5hdGFrYS4gVGhlIGRhc2F2YW5kYSBvciBLYXR0dS1Lb2RhZ2Ugd2FzIGEgc2hhcmUgaW4gdGhlIGluY3JlYXNlZCBwcm9kdWN0aXZpdHkgb2YgdGhlIGxhbmQgZWFybmVkICBieSB0aGUgcGVyc29uIHdobyB1bmRlcnRha2Ugc3VjaCBkZXZlbG9wbWVudGFsIHdvcmsuIEEgcG9ydGlvbiBvZiBpbmNvbWUgYWNjcnVpbmcgZnJvbSB0aGUgaW5jcmVhc2VkICBwcm9kdWN0aXZpdHkgYWxzbyB3ZW50IHRvIHRoZSBjdWx0aXZhdG9ycyBvZiB0aGUgdmlsbGFnZSB3aGVyZSB0aGUgZGV2ZWxvcG1lbnRhbCB3b3JrIHdhcyB1bmRlcnRha2VuLiAgIFNvdXJjZTogSGlzdG9yeSBvZiBNZWRpZXZhbCBJbmRpYSAoODAwLTE3MDApIGJ5IFNBVElTSCBDSEFORFJBIHBhZ2UgMTUzICAgQU5DSUVOVCBBTkQgTUVESUVWQUwgSU5ESUEsIEF1dGhvci0gUG9vbmFtIERhbGFsIERhaGl5YSAgLTYwMCAgIGh0dHBzOi8veWtjb2xsZWdlLmFjLmluL3dwLWNvbnRlbnQvdXBsb2Fkcy8yMDIwLzA0L0FETUlOU1RSQVRJT04tT0YtVklBSkFOQUdBUi0gY29udmVydGVkLnBkZiAgIGh0dHBzOi8vZWd5YW5rb3NoLmFjLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvNDQ0MjUvMS9Vbml0LTIwLnBkZiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 4  ",
        "option2" : "1 and 4 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 3 and 4 only  "
      }
    },
    {
      "index" : 31,
      "question" : "Consider the following statements with reference to trade and commerce during Medieval Chola Empire:  1.  Chola rulers brought South East Asia and China under their network of trade.  2.  Manigramam, Nanadesi and Ayyavole were some prominent Trade guilds.  3.  Barter system was not used in trade.   Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgVHJhZGUgYW5kIGNvbW1lcmNlIGZsb3VyaXNoZWQgdW5kZXIgdGhlIHBhdHJvbmFnZSBvZiBDaG9sYSBlbXBlcm9ycy4gVGhlIENob2xhcyAgZGV2ZWxvcGVkIGxpbmtzIGFsbCBvdmVyIHNvdXRoIEluZGlhLiBUaGV5IHRoZW4gYnJvdWdodCBTcmlsYW5rYSwgU291dGgtIEVhc3QgQXNpYSBhbmQgZXZlbiBDaGluYSB1bmRlciAgdGhlaXIgbmV0d29yayBvZiB0cmFkZS4gICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gUmVnYXJkaW5nIE1lZGlldmFsIENob2xhcywgdGhlcmUgYXJlIHJlZmVyZW5jZXMgdG8gNzIgbmFnYXJhbXMgYW5kIG1hbnkgdHJhZGUgIGd1aWxkcy4gTW9zdCBpbXBvcnRhbnQgb2YgdGhlc2UgdHJhZGUgZ3VpbGRzIHdlcmUgbWFuaWdyYW1hbSwgQXl5YXZvbHUsIE5hbmFkZXNpLCBWaXJhIFZhbGFuaml5YXIsIFZpcmEgIEJhbGFuanUgYW5kIEFuanV2YW5uYW4uICAgIFRyYWRpbmcgb3JnYW5pc2F0aW9ucyBmb3JtZWQgZm9ydGlmaWVkIHNldHRsZW1lbnRzIGNhbGxlZCBFcml2aXJwYXR0aW5hbXMgb24gdHJ1bmsgcm9hZHMgYW5kIHdlcmUgIHByb3RlY3RlZCBieSBhcm15IGNhbnRvbm1lbnRzIGNhbGxlZCBOaWxhaXBwYWRhaS4gICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgTW9zdGx5IGJhcnRlciBzeXN0ZW0gd2FzIGVtcGxveWVkIGluIHRyYWRlIGFuZCBjb21tZXJjZSBkdXJpbmcgQ2hvbGEgUGVyaW9kLiAgRXZlbiBwYWRkeSB3YXMgdXNlZCBhcyBhIHVuaXQgb2YgZXhjaGFuZ2VzLiBHb2xkIGNvaW5zIHN1Y2ggYXMgcG9uLCBrYXN1LCBrYWxhbmp1IHdlcmUgdXNlZC4gQWxzbywgc2lsdmVyICBjb2lucyB3ZXJlIHVzZWQuICAgU291cmNlOiAgQm9vay0gSGlzdG9yeSBvZiBNZWRpZXZhbCBJbmRpYSwgQXV0aG9yLSBTQVRJU0ggQ0hBTkRSQSwgUC5OLiAtIDQxLTQzICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only  ",
        "option3" : "1, 2 and 3   ",
        "option4" : "1 and 3 only  "
      }
    },
    {
      "index" : 32,
      "question" : "With respect to the Imperial Chola period, consider the following statements:  1.  Rajaraja I entered into matrimonial alliance with the Eastern Chalukyas.   2.  Despite their continuous efforts, the Cholas could never capture the Raichur Doab,  Which of the above statements is/are correct in the above context?   ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFJhamFyYWphIEkgKDk4NSAtIDEwMTQgQS5ELikgICBJdCB3YXMgdW5kZXIgUmFqYXJhamEgSSBhbmQgaGlzIHNvbiBSYWplbmRyYSBJIHRoYXQgdGhlIENob2xhIHBvd2VyIHJlYWNoZWQgaXRzIGhpZ2hlc3QgcG9pbnQgb2YgZ2xvcnkuICAgVGhlIERlY2NhbiB3YXMgcnVsZWQgYnkgdHdvIENoYWx1a3lhbiBkeW5hc3RpZXMsIHRoZSB3ZXN0ZXJuIGZyb20gS2FseWFuaSBhbmQgdGhlIGVhc3Rlcm4gZnJvbSBWZW5naS4gIFRoZSByZWxhdGlvbnMgYmV0d2VlbiB0aGUgd2VzdGVybiBhbmQgdGhlIGVhc3Rlcm4gQ2hhbHVreWFuIGtpbmdkb21zIHdlcmUgbm90IGFsd2F5cyBjb3JkaWFsLCBpbiBmYWN0ICB3ZXJlIG1vc3RseSBpbmltaWNhbC4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiAgIFJhamFyYWphIGVudGVyZWQgaW50byBtYXRyaW1vbmlhbCBhbGxpYW5jZSB3aXRoIHRoZSBFYXN0ZXJuIENoYWx1a3lhcy4gUmFqYXJhamEgZ2F2ZSBoaXMgZGF1Z2h0ZXIgIEt1bmRhdmFpIGluIG1hcnJpYWdlIHRvIFZpbWFsYWRpdHlhIGFuZCB0aGlzIHdhcyBidXQgYSBiZWdpbm5pbmcgb2Ygc2VyaWVzIG9mIGRpcGxvbWF0aWMgbWFycmlhZ2VzICBiZXR3ZWVuIHRoZXNlIHR3byBkeW5hc3RpZXMuICAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0IFRoZSBDaG9sYSBnb3QgdmljdG9yeSBvdmVyIHRoZSBncm93aW5nIHBvd2VyIG9mIHRoZSBXZXN0ZXJuIENoYWx1a3lhcyBvZiAgS2FseWFuaS4gIFNhdHlhc3JheWEgd2FzIGRlZmVhdGVkIGFuZCBSYWphcmFqYSBJIGNhcHR1cmVkIFJhaWNodXIgRG9hYiwgQmFuYXZhc2kgYW5kIG90aGVyIHBsYWNlcy4gSGVuY2UgIHRoZSBDaG9sYSBwb3dlciBleHRlbmRlZCB1cCB0byB0aGUgcml2ZXIgVHVuZ2FiYWRocmEuICAgICBvZiAyMiAPDyAPASAOICAMAyACICALIAUCBiABCQggBgUIICAgICAgIEF0IHRoZSBkZWF0aCBvZiBSYWplbmRyYSBJLCB0aGUgZXh0ZW50IG9mIHRoZSBDaG9sYSBFbXBpcmUgd2FzIGF0IGl0cyBwZWFrLiBUaGUgcml2ZXIgVHVuZ2FiYWRocmEgd2FzIHRoZSAgbm9ydGhlcm4gYm91bmRhcnkuIFRoZSBQYW5keWEsIEtlcmFsYSBhbmQgTXlzb3JlIHJlZ2lvbnMgYW5kIGFsc28gU3JpIExhbmthIGZvcm1lZCBwYXJ0IG9mIHRoZSBlbXBpcmUuICBIZSBnYXZlIGhpcyBkYXVnaHRlciBNYW5nYXJldmEgdG8gdGhlIFZlbmdpIENoYWx1a3lhIHByaW5jZSBhbmQgZnVydGhlciBjb250aW51ZWQgdGhlIG1hdHJpbW9uaWFsICBhbGxpYW5jZSBpbml0aWF0ZWQgYnkgaGlzIGZhdGhlci4gICAgU291cmNlOiAgQm9vay0gQU5DSUVOVCBBTkQgTUVESUVWQUwgSU5ESUEsIEF1dGhvci0gUG9vbmFtIERhbGFsIERhaGl5YSwgUC5OLiAtIDQzMCAtIDQzMiAgIGh0dHBzOi8vd3d3LnByZXNlcnZlYXJ0aWNsZXMuY29tL2hpc3Rvcnkvc2hvcnQtZXNzYXktb24tdGhlLWNob2xhLWVhc3Rlcm4tY2hhbHVreWFuLSByZWxhdGlvbi8xMTkxNiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2          \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 33,
      "question" : "With respect to the history of Medieval India, the term 'Illamandalam' refers to:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBsbGFtYW5kYWxhbScgd2FzIGFuIG9sZCBUYW1pbCB3b3JkIGZvciBTcmkgTGFua2EuICAgVGhlcmUgaGFkIGJlZW4gcmVwZWF0ZWQgaW52YXNpb25zIG9mIFNyaSBMYW5rYSBieSB0aGUgQ2hvbGFzLiBUaGUgZmlyc3QgQ2hvbGEga2luZyB0byBpbnZhZGUgdGhlIGlzbGFuZCB3YXMgIEVsbGFsYW4sIGFsc28ga25vd24gYXMgJ01hbnUgTmVlZGhpIENob2xhbicuIEhlIHJ1bGVkIHRoZSBBbnVyYWRoYXB1cmEgS2luZ2RvbSBmcm9tIDIwNS0xNjEgQkNFLiBSYWphICBSYWphIENob2xhIEkgY29ucXVlcmVkIHRoZSBub3J0aGVybiBoYWxmIG9mIHRoZSBpc2xhbmQgd2hpY2ggYmVjYW1lIGEgcHJvdmluY2Ugb2YgdGhlIENob2xhIGtpbmdkb20gaW4gIDk5MyBDRS4gSGlzIHNvbiwgUmFqZW5kcmEgQ2hvbGEgSSwgYW5uZXhlZCB0aGUgZW50aXJlIGlzbGFuZCBpbiAxMDE3IENFIGFuZCBydWxlZCB1bnRpbCAxMDc3IENFLiBBY2NvcmRpbmcgIHRvIHRoZSBlcGlncmFwaGljYWwgZXZpZGVuY2UgZnJvbSB0aGlzIHRpbWUsIHRoZSBDaG9sYSBraW5ncyBjbGFpbWVkIGFubmV4YXRpb24gb2YgaWxsYW1hbmRhbGFtLCBhbiBvbGQgIFRhbWlsIHdvcmQgZm9yIHRoZSBpc2xhbmQgICBSYWphcmFqYSAoOTg1LTEwMTQpIGJlZ2FuIGVzdGFibGlzaGluZyBwb3dlciB3aXRoIGF0dGFja3MgYWdhaW5zdCB0aGUgUGFuZHlhcyBhbmQgSWxsYW1hbmRhbGFtIChTcmkgIExhbmthKS4gTm9ydGhlcm4gU3JpIExhbmthIGJlY2FtZSBhIHByb3ZpbmNlIG9mIHRoZSBDaG9sYSBraW5nZG9tLiAgICBTb3VyY2U6ICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NyU2VjMzE1TkVXLzMxNV9IaXN0b3J5X0VuZy8zMTVfSGlzdG9yeV9FbmdfTGVzc29uMzBBLiBwZGYgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sri Lanka  ",
        "option2" : "China  ",
        "option3" : "The Maldives  ",
        "option4" : "Indonesia   "
      }
    },
    {
      "index" : 34,
      "question" : "With reference to the medieval history of India, the term 'tarafdar' refers to ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT3B0aW9uIGQgaXMgY29ycmVjdDogVGFyYWZkYXIgd2FzIHRoZSBvZmZpY2VycyByZXNwb25zaWJsZSBmb3IgdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRhcmFmcyBvciBwcm92aW5jZXMuICBNYWhtdWQgR2F3YW4gb2YgdGhlIEJoYW1hbmkga2luZ2RvbSBkaXZpZGVkIHRoZSBraW5nZG9tIGludG8gZWlnaHQgcHJvdmluY2VzIG9yIHRhcmFmcy4gRWFjaCB0YXJhZiAgd2FzIGdvdmVybmVkIGJ5IGEgdGFyYWZkYXIuIFRoZSBzYWxhcmllcyBhbmQgb2JsaWdhdGlvbnMgb2YgZWFjaCBub2JsZSB3ZXJlIGZpeGVkLiBGb3IgbWFpbnRhaW5pbmcgYSAgY29udGluZ2VudCBvZiA1MDAgaG9yc2VzLCBhIG5vYmxlIHJlY2VpdmVkIGEgc2FsYXJ5IG9mIDEsMDAsMDAwIGh1bnMgcGVyIHllYXIuIFRoZSBzYWxhcnkgY291bGQgYmUgcGFpZCBpbiAgY2FzaCBvciBieSBhc3NpZ25pbmcgYSBqYWdpci4gVGhvc2Ugd2hvIHdlcmUgcGFpZCBieSBtZWFucyBvZiBhIGphZ2lyIHdlcmUgYWxsb3dlZCBleHBlbnNlcyBmb3IgdGhlICBjb2xsZWN0aW9uIG9mIGxhbmQgcmV2ZW51ZS4gICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTksIFRoZSBBZ2Ugb2YgVmlqYXlhbmFnYXJhIGFuZCB0aGUgQmFobWFuaXMgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Militia men employed at fixed payment for  external defence ",
        "option2" : " Head of royal correspondence ",
        "option3" : " Officer in charge of measuring the land and  fixing land revenue ",
        "option4" : " Official responsible for administration of  provinces  "
      }
    },
    {
      "index" : 35,
      "question" : "Which of the following factors was/were responsible for the disintegration of the Bahmani kingdom? 1.  Strife among the Deccanis and Afaqis nobles. 2.  Timur's attack in 1398 weakened the central authority. 3.  Rise of the Portuguese power in the Deccan. Select the correct answer using the code given below' ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgQmhhbWFuaSBFbXBpcmUgY2FtZSB0byBhbiBlbmQgYnkgMTUzOCBhbmQgdGhlIGtpbmdkb20gYnJva2UgdXAgaW50byA1IHN0YXRlcy1CZXJhciwgQmlkYXIsICBBaG1hZG5hZ2FyLCBCaWphcHVyIGFuZCBHb2xjb25kYS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBPbmUgb2YgdGhlIG1vc3QgZGlmZmljdWx0IHByb2JsZW1zIHdoaWNoIGZhY2VkIHRoZSBCYWhtYW5pIGtpbmdkb20gd2FzIHN0cmlmZSAgYW1vbmcgdGhlIG5vYmxlcy4gVGhlIG5vYmxlcyB3ZXJlIGRpdmlkZWQgaW50byB0aGUgbG9uZy1lc3RhYmxpc2hlZCBEZWNjYW5pcyBhbmQgdGhlIG5ldy1jb21lcnMgd2hvICB3ZXJlIGZvcmVpZ25lcnMgKGFmYXFpcywgYWxzbyBjYWxsZWQgZ2hhcmlicykuIE1haG11ZCBHYXdhbiBiZWNhbWUgdGhlIFByaW1lIE1pbmlzdGVyIG9yIHRoZSBQZXNod2EgaW4gIHRoZSBCaGFtYW5pIGtpbmdkb20gYW5kIHdlbnQgb24gdG8gZG9taW5hdGUgc3RhdGUgb2YgYWZmYWlycyBpbiB0aGUgS2luZ2RvbWUgZm9yIDIwIHllYXJzLiBBcyBhICBuZXdjb21lciwgTWFobXVkIEdhd2FuIHdhcyBoYXJkIHB1dCB0byB3aW4gdGhlIGNvbmZpZGVuY2Ugb2YgdGhlIERlY2NhbmlzLiBUaG91Z2ggaGUgYWRvcHRlZCBhICBicm9hZCBwb2xpY3kgb2YgY29uY2lsaWF0aW9uLCB0aGUgcGFydHkgc3RyaWZlIGNvdWxkIG5vdCBiZSBzdG9wcGVkLiBIaXMgb3Bwb25lbnRzIG1hbmFnZWQgdG8gcG9pc29uIHRoZSAgZWFycyBvZiB0aGUgeW91bmcgc3VsdGFuIHdobyBoYWQgaGltIGV4ZWN1dGVkIGluIDE0ODIuIEFmdGVyIHRoYXQsIHRoZSBwYXJ0eSBzdHJpZmUgYmVjYW1lIGV2ZW4gbW9yZSAgaW50ZW5zZS4gICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRpbXVyJ3MgYXR0YWNrIGluIDEzOTggcHJlY2lwaXRhdGVkIHRoZSBkaXNpbnRlZ3JhdGlvbiBvZiB0aGUgRGVsaGkgU3VsdGFuYXRlIChhbmQgIG5vdCBCYWhtYW5pIGtpbmdkb20pLiBUaW11ciB3YXMgYSBzb24gb2YgdGhlIENoaWVmIG9mIENoYWd0YWkgYnJhbmNoIG9mIFR1cmtzLiBUaW11ciBlbnRlcmVkIERlbGhpIGFuZCAgc3RheWVkIGZvciAxNSBkYXlzLiBIZSBvcmRlcmVkIGdlbmVyYWwgbWFzc2FjcmUgYW5kIGxhcmdlIG51bWJlciBvZiBIaW5kdSBhbmQgTXVzbGltIGluY2x1ZGluZyB3b21lbiAgYW5kIGNoaWxkcmVuIHdlcmUgbXVyZGVyZWQuIEJlZm9yZSBsZWF2aW5nIEluZGlhIFRpbXVyJ3MgaW52YXNpb24gaW5kaWNhdGVkIHRoZSBkb3duZmFsbCBvZiBEZWxoaSAgU3VsdGFuYXRlLiBEZWxoaSBTdWx0YW5hdGUgbG9zdCBjb250cm9sIG92ZXIgUHVuamFiLiBUaW11ciBhcHBvaW50ZWQgS2hpenIgS2hhbiwgdGhlIHJ1bGVyIGZvciBNdWx0YW4gd2hvICBjb250cm9sbGVkIFB1bmphYiBhbHNvLiBBZnRlciB0aGUgZmFsbCBvZiBUdWdobGFxIGR5bmFzdHkgaGUgb2NjdXBpZWQgRGVsaGkgYW5kIGJlY2FtZSB0aGUgcnVsZXIgb2YgRGVsaGkgIFN1bHRhbmF0ZS4gSGUgbGFpZCB0aGUgZm91bmRhdGlvbiBvZiBTYWl5eWlkIER5bmFzdHkuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFZpamF5YW5hZ2FyYSBFbXBpcmUgKGFuZCBub3QgQmFobWFuaSBLaW5nZG9tKSBoYWQgdG8gY29udGVuZCB3aXRoIHRoZSAgUG9ydHVndWVzZSB3aG9zZSBwb3dlciB3YXMgc2xvd2x5IGdyb3dpbmcuIFRoZXkgd2VyZSB1c2luZyB0aGVpciBjb250cm9sIG92ZXIgdGhlIHNlYXMgdG8gYnJvd2JlYXQgdGhlICBzbWFsbGVyIHZhc3NhbCBzdGF0ZXMgb2YgVmlqYXlhbmFnYXJhIGluIHRoZSBjb2FzdGFsIGFyZWFzIGluIG9yZGVyIHRvIGdhaW4gZWNvbm9taWMgYW5kIHBvbGl0aWNhbCAgY29uY2Vzc2lvbnMuICAgIFNvdXJjZTogTWVkaWV2YWwgSGlzdG9yeSwgTkNFUlQgWEksIENoYXB0ZXItOSwgVGhlIEFnZSBvZiBWaWpheWFuYWdhcmEgYW5kIHRoZSBCYWhtYW5pcyAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDE4OS8xL1VuaXQtMjgucGRmICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NyU2VjMzE1TkVXLzMxNV9IaXN0b3J5X0VuZy8zMTVfSGlzdG9yeV9FbmdfTGVzc29uOS5wZGYgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1 only ",
        "option3" : "2 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 36,
      "question" : "With reference to the judicial system in the Chola Empire, consider the following statements:  1.  Segregation of cases as civil and criminal apparently did not exist.  2.  There was regular interference of king in the process of justice leading to delay in the process.   3.  Corporal punishment or death penalty were popular practices.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QgLSBBbGwgdGhlIHRyaWFscyB3ZXJlIGNvbmR1Y3RlZCB0b2dldGhlciBpbiB0aGUgc2FtZSBzZXRzIHVubGlrZSB0b2RheSBhcyB0aGVyZSBhcmUgIHNlcGFyYXRlIGNpdmlsIGFuZCBjcmltaW5hbCBjb3VydHMuIFByYWN0aWNlIG9mIHNlcGFyYXRpb24gb2YgY2FzZXMgZGlkbid0IGV4aXN0IGluIHRoZSBlbXBpcmUuIFRoZXJlIHdlcmUgIG5vIGxhd3llcnMgdG8gYXJndWUgY2FzZXMgYW5kIGluZGl2aWR1YWxzIHdlcmUgYWxsb3dlZCB0byBkZWZlbmQgdGhlbXNlbHZlcyBpbiB0aGUgQ2hvbGEganVkaWNpYWwgc3lzdGVtLiAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QgLSBJbnZvbHZlbWVudCBvZiB0aGUga2luZyBvciBvdGhlciBwcm9taW5lbnQgcGVvcGxlIGluIHBvd2VyIHNlZW1zIHRvIGhhdmUgIGJlZW4gcmFyZSwgZGVwZW5kaW5nIG9uIHRoZSBzZXZlcml0eSBvZiB0aGUgY3JpbWUgYW5kIGl0cyBjb25zZXF1ZW5jZXMuIFRoZSBjb25jZXB0IG9mIGFwcGVhbGluZyB0byBoaWdoZXIgIGNvdXJ0cyB3YXMgbW9zdGx5IHVuaGVhcmQgb2YgYW5kIHRoZSB3b3JkIG9mIHRoZSBsb2NhbCBzYWJoYSB3YXMgYWNjZXB0ZWQgYXMgZmluYWwuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0IC0gSW1wcmlzb25tZW50LCBjb3Jwb3JhbCBwdW5pc2htZW50IG9yIGRlYXRoIHBlbmFsdHkgZG9uJ3Qgc2VlbSB0byBoYXZlIGJlZW4gIHBvcHVsYXIgcHJhY3RpY2VzIGF0IHRoZXNlIHZpbGxhZ2Ugb3IgZGlzdHJpY3QtbGV2ZWwgY291cnRzLiBTZXJpb3VzIG9mZmVuY2VzIGxpa2UgaGFybWluZyBtZW1iZXJzIG9mIHRoZSAgcm95YWwgZmFtaWx5LCBpbmR1bGdpbmcgaW4gYWN0cyB0aGF0IGNhdXNlIHJpb3RzIG9yIGluc3RpZ2F0aW5nIHJlYmVscyBhZ2FpbnN0IHRoZSBnb3Zlcm5tZW50IGhhdmUgbGVkIHRvICBjb25maXNjYXRpb24gb2YgcHJvcGVydHkgb2YgdGhlIG9mZmVuZGVyIGFuZCBoaXMgZmFtaWx5LCBhbmQgc29tZXRpbWVzIHRoZSBleHRlbmRlZCBmYW1pbHkgdG9vLiBUaGUgIHByb3BlcnR5IHdhcyB0aGVuIGF1Y3Rpb25lZCBpbiBwdWJsaWMgYW5kIHRoZSBtb25leSBkZXBvc2l0ZWQgaW4gdGhlIGNvZmZlcnMuICAgS25vd2xlZGdlIEJhc2U6ICAgIFNpbXBsZSBhbmQgZWFzaWx5IGFjY2Vzc2libGUganVkaWNpYXJ5IHByb2NlZHVyZXMgc2VlbSB0byBoYXZlIGhlbHBlZCB0aGUgQ2hvbGEgbW9uYXJjaHMgaW4gbWFpbnRhaW5pbmcgIGxhdyBhbmQgb3JkZXIgYWNyb3NzIHRoZWlyIGJ1cmdlb25pbmcga2luZ2RvbS4gVXBob2xkaW5nIGRoYXJtYSwgYXMgZGVzY3JpYmVkIGluIHRyYWRpdGlvbmFsIEluZGlhbiB0ZXh0cywgIHNlZW1zIHRvIGJlIHRoZSB2aXJ0dWUgaGVsZCBmb3JlbW9zdCBieSB0aGUgQ2hvbGFzLiBDaXRpbmcgTWFudSBhbmQgU2liaSBDaGFrcmF2YXJ0aSBpbiB0aGVpciBpbGx1c3RyaW91cyBsaXN0ICBvZiBhbmNlc3RvcnMsIHRoZXkgdW5hYmFzaGVkbHkgYm9hc3RlZCBvZiB0aGVpciB0cmFkaXRpb24gb2YgdXBob2xkaW5nIGp1c3RpY2UgYXQgYWxsIHRpbWVzIGFuZCBlbnN1cmluZyBmYWlyICB0cmlhbHMuICAgIExvY2FsIGNvdXJ0cyB3ZXJlIGFzIHBvd2VyZnVsIGFzIHRoZSBsb2NhbCBhZG1pbmlzdHJhdGlvbiBjb25zaXN0aW5nIG9mIGxlYXJuZWQgc2Nob2xhcnMuIFRob3NlIHdlbGwgdmVyc2VkICBpbiBzbXJpdGkgdGV4dHMgYW5kIGRoYXJtYWFzYW5hIGJoYXR0YXMgd2VyZSBpZGVudGlmaWVkIGFuZCBhcHBvaW50ZWQgYXMgaW50ZXJwcmV0ZXJzIG9mIHRoZSBjb2RpZmllZCAgbWFudWFscyBvbiBkaGFybWEgYW5kIGl0cyBwcmFjdGljZS4gVGhlIGxvY2FsIGp1cnkgaW4gY29uY3VycmVuY2Ugd2l0aCB0aGUgaW50ZXJwcmV0ZXJzICh0aG91Z2ggdGhpcyBkb2VzICBub3Qgc2VlbSB0byBiZSBhIG1hbmRhdGUpIG9mIGRoYXJtYSBzYXN0cmFzIHdvdWxkIGhlYXIgdGhlIHBsZWEgYW5kIGV4YW1pbmUgd2l0bmVzc2VzIGFuZCB0ZXN0aW1vbmllcyAgaWYgYW55IGJlZm9yZSBwYXNzaW5nIGEgdmVyZGljdC4gICBTb3VyY2U6IGh0dHBzOi8vd3d3Lm5ld2luZGlhbmV4cHJlc3MuY29tL29waW5pb25zL2NvbHVtbnMvMjAyMS9qdW4vMjUvanVzdGljZS1pbi1jaG9sYS1hZ2UtIHJlcGVudGFuY2Utbm90LXJldHJpYnV0aW9uLTIzMjEwNDcuaHRtbCAgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 Only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3 only     "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the Chola administration, consider the following statements:  1.  It represented a harmonious balance between the central authority and the local self-government.  2.  Sabha and Ur were village assemblies predominantly inhabited by the Brahmanas.  3.  Local public works and tax collection were looked after by the village assemblies.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgQ2hvbGEgYWRtaW5pc3RyYXRpb24gZW5jb3VyYWdlZCBsb2NhbCBzZWxmLWdvdmVybm1lbnQgaW4gdGhlIHZpbGxhZ2VzIGFsbCBvdmVyICB0aGVpciBlbXBpcmUuIFRoaXMgd2FzIGEgdW5pcXVlIGZlYXR1cmUgb2YgdGhlIENob2xhIGFkbWluaXN0cmF0aW9uIGFzIGl0IHJlcHJlc2VudGVkIGEgaGFybW9uaW91cyBiYWxhbmNlICBiZXR3ZWVuIHRoZSBjZW50cmFsIGF1dGhvcml0eSBhbmQgdGhlIGxvY2FsIHNlbGYtZ292ZXJubWVudC4gQXQgdGhlIHZpbGxhZ2UgbGV2ZWwsIGEgZ3JlYXQgYW1vdW50IG9mICBhdXRvbm9teSB3YXMgZW5qb3llZCBieSB0aGUgbG9jYWwgcGVvcGxlLiBUaGV5IGxvb2tlZCBhZnRlciB0aGVpciBhZG1pbmlzdHJhdGlvbiB3aXRoIHRoZSBoZWxwIG9mIHNlbGYtIGVsZWN0ZWQgbG9jYWwgYm9kaWVzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gU2FiaGEgYW5kIFVyIHdlcmUgdGhlIHR3byB0eXBlcyBvZiB2aWxsYWdlIGFzc2VtYmxpZXMgd2hpY2ggYXJlIG1lbnRpb25lZCBpbiAgdGhlIHJlY29yZHMuIFNhYmhhIHdhcyB0aGUgYXNzZW1ibHkgaW4gdGhlIHZpbGxhZ2VzIHdoaWNoIHdlcmUgaW5oYWJpdGVkIHByZWRvbWluYW50bHkgYnkgdGhlICBicmFobWFuYXMuIFRoaXMgd2FzIGEgZ2F0aGVyaW5nIG9mIHRoZSBhZHVsdCBtZW4gaW4gdGhlIEJyYWhtYW4gdmlsbGFnZXMgd2hpY2ggd2VyZSBjYWxsZWQgYWdyYWhhcmFtcy4gIFRoZXNlIHdlcmUgdmlsbGFnZXMgd2l0aCBCcmFobWFuIHNldHRsZW1lbnRzIGluIHdoaWNoIG1vc3Qgb2YgdGhlIGxhbmQgd2FzIHJlbnQtZnJlZS4gSG93ZXZlciwgVXIgd2FzICBpbiB0aGUgbm9uIGJyYWhtYW5pY2FsIHNldHRsZW1lbnRzLiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSB2aWxsYWdlIGFzc2VtYmxpZXMgZW5qb3llZCBhIGxhcmdlIG1lYXN1cmUgb2YgYXV0b25vbXkuIFRoZXkgbG9va2VkIGFmdGVyIHRoZSAgbG9jYWwgcHVibGljIHdvcmtzLCB0YXggY29sbGVjdGlvbiwgdGVtcGxlIG1hbmFnZW1lbnQgZXRjLiwgd2l0aCB0aGUgaGVscCBvZiB0aGUgbWVtYmVycyAoZXhlY3V0aXZlICBjb21taXR0ZWUpIGVsZWN0ZWQgdGhyb3VnaCBhIHByb2NlZHVyZSBzZXQgYnkgdGhlIHZpbGxhZ2Vycy4gVGhlcmUgd2VyZSBvdGhlciBjb21taXR0ZWVzIGZvciBoZWxwaW5nIGluICB0aGUgYXNzZXNzbWVudCBhbmQgY29sbGVjdGlvbiBvZiBsYW5kIHJldmVudWUsIGZvciBtYWludGVuYW5jZSBvZiBsYXcgYW5kIG9yZGVyLCBqdXN0aWNlLCBldGMuIE9uZSBvZiB0aGUgIGltcG9ydGFudCBjb21taXR0ZWVzIHdhcyB0aGUgdGFuayBjb21taXR0ZWUgd2hpY2ggbG9va2VkIGFmdGVyIHRoZSBkaXN0cmlidXRpb24gb2Ygd2F0ZXIgdG8gdGhlIGZpZWxkcy4gIFRoZSBtYWhhc2FiaGEgY291bGQgZGlzdHJpYnV0ZSBuZXcgbGFuZHMsIGFuZCBleGVyY2lzZSBvd25lcnNoaXAgcmlnaHRzIG92ZXIgdGhlbS4gSXQgY291bGQgYWxzbyByYWlzZSAgbG9hbnMgZm9yIHRoZSB2aWxsYWdlIGFuZCBsZXZ5IHRheGVzLiAgIFNvdXJjZTogTWVkaWV2YWwgSGlzdG9yeSwgT2xkIE5DRVJUIFhJLCBDaGFwdGVyLTMgICBodHRwczovL25pb3MuYWMuaW4vbWVkaWEvZG9jdW1lbnRzL1NyU2VjMzE1TkVXLzMxNV9IaXN0b3J5X0VuZy8zMTVfSGlzdG9yeV9FbmdfTGVzc29uOC5wZGYgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 38,
      "question" : "In the context of Chola empire, consider the following statements:  1.  Rajaraja made Gangaikondacholapuram as the new empire capital after victory over Cheras.  2.  Rajendra I assumed the title of Gangaikondachola after his successful venture over banks of Ganga.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdC4gUmFqZW5kcmEgSSBhc3N1bWVkIHRoZSB0aXRsZSBvZiBHYW5nYWlrb25kYWNob2xhIGFmdGVyIGhpcyBzdWNjZXNzZnVsIHZlbnR1cmUgIG92ZXIgYmFua3Mgb2YgR2FuZ2EuIEl0IHdhcyBvbmUgb2YgdGhlIG1vc3QgcmVtYXJrYWJsZSBleHBsb2l0cyBpbiB0aGUgcmVpZ24gb2YgUmFqZW5kcmEgSSB3aGVyZSBoZSBtYXJjaGVkICBhY3Jvc3MgS2FsaW5nYSB0byBCZW5nYWwgaW4gd2hpY2ggdGhlIENob2xhIGFybWllcyBjcm9zc2VkIHRoZSByaXZlciBHYW5nYSwgYW5kIGRlZmVhdGVkIHR3byBsb2NhbCBraW5ncy4gIFRoaXMgZXhwZWRpdGlvbiB0b29rIHBsYWNlIGluIDEwMjIgYW5kIGZvbGxvd2VkIGluIHJldmVyc2UgdGhlIHNhbWUgcm91dGUgd2hpY2ggdGhlIGdyZWF0IGNvbnF1ZXJvciAgU2FtdWRyYWd1cHRhIGhhZCBmb2xsb3dlZC4gUmFqZW5kcmEgSSBtYWRlIEdhbmdhaWtvbmRhY2hvbGFwdXJhbSBhcyB0aGUgbmV3IGVtcGlyZSBjYXBpdGFsLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gVG8gY29tbWVtb3JhdGUgdGhpcyBvY2Nhc2lvbiwgUmFqZW5kcmEgSSBhc3N1bWVkIHRoZSB0aXRsZSBvZiBHYW5nYWlrb25kYWNob2xhICAoJ3RoZSBDaG9sYSB3aG8gY29ucXVlcmVkIHRoZSBHYW5nYScpLiBIZSBidWlsdCBhIG5ldyBjYXBpdGFsIG5lYXIgdGhlIG1vdXRoIG9mIHRoZSBLYXZlcmkgUml2ZXIgYW5kIGNhbGxlZCAgaXQgR2FuZ2Fpa29uZGFjaG9sYXB1cmFtICgndGhlIGNpdHkgb2YgdGhlIENob2xhIHdobyBjb25xdWVyZWQgdGhlIEdhbmdhJykuIFRoaXMgcGVyaW9kIGlzIHJlZmVycmVkIHRvICBhcyB0aGUgZ29sZGVuIGFnZSBvZiB0aGUgQ2hvbGFzLiBBZnRlciBoaXMgcnVsZSwgdGhlIGtpbmdkb20gd2l0bmVzc2VkIGEgd2lkZXNwcmVhZCBkb3duZmFsbC4gICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE9sZCBOQ0VSVCBYSSwgQ2hhcHRlci0zICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following pairs:  Term Description 1. Baghayat Garden land 2. Kunbis Cultivating Class in Maratha Kingdom 3. Ghurab Guerilla warfare technique Which of the pairs given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBQYWlyIDEgaXMgY29ycmVjdC4gTWFsaWsgQW1iYXIgY2xhc3NpZmllZCB0aGUgbGFuZCBicm9hZGx5IGludG8gdHdvIGNhdGVnb3JpZXM6IGJhZ2hheWF0IChnYXJkZW4gbGFuZCkgYW5kICB6aXJheWF0IChjdWx0aXZhdGVkIGxhbmQpLiBUaGUgbGF0dGVyIHdhcyBmdXJ0aGVyIGRpdmlkZWQgaW50byBmb3VyIGNhdGVnb3JpZXMuIEluIFNoaXZhamkncyB0aW1lIHRoaXMgbnVtYmVyICBpbmNyZWFzZWQgdG8gdHdlbHZlLiAgICBQYWlyIDIgaXMgY29ycmVjdC4gS3VuYmlzIHdlcmUgY3VsdGl2YXRpbmcgcGVhc2FudCBjbGFzcyBpbiBNYXJhdGhhIGtpbmdkb20uIFNoaXZhamkgbGF0ZXIgYnJvdWdodCBzb2NpYWwgIG1vdmVtZW50IHdoaWNoIGludHJvZHVjZWQgbWF0cmltb25pYWwgYWxsaWFuY2VzIGJldHdlZW4ga3NoYXRyaXlhcywgZGVzaG11a2hzIGFuZCBrdW5iaXMgd2l0aCAgZXNzZW5jZSB0byB3ZWxkIHRvZ2V0aGVyIHRoZSBNYXJhdGhhcyBhbmQgdGhlIGt1bmJpcy4gICBQYWlyIDMgaXMgaW5jb3JyZWN0LiBBZnRlciB0aGUgY29ucXVlc3Qgb2YgS29ua2FuIFNoaXZhamkgYnVpbHQgYSBzdHJvbmcgbmF2eSBhcyB3ZWxsLiBIaXMgZmxlZXQgd2FzIGVxdWlwcGVkICB3aXRoIGdodXJhYnMgKGd1bmJvYXRzKSBhbmQgZ2FsbGl2YXRzIChyb3cgYm9hdHMgd2l0aCAyIG1hc3RzIGFuZCA0MC01MCBJb2FycykuIEhpcyBmbGVldCB3YXMgbWFpbmx5ICBtYW5uZWQgYnkgdGhlIEtvbGkgc2VhLWZlYXJpbmcgdHJpYmUgb2YgTWFsYWJhciBjb2FzdC4gICBTb3VyY2U6ICBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzIwMjI2LzEvVW5pdC0xMC5wZGYgICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgQSBoaXN0b3J5IG9mIE1hcmF0aGFzIFZvbHVtZS0xIGJ5IEphbWVzIEdyYW50IER1ZmYgKCApICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMDI0OC8xL1VuaXQtMTgucGRmICAgaHR0cHM6Ly9pbmRpYW5leHByZXNzLmNvbS9hcnRpY2xlL2V4cGxhaW5lZC93aGF0LXRtYy1tZWFucy13aGVuLWl0LWNhbGxzLXRoZS1ianAtYmFyZ2lzLTcxNjg5MTcvICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 only  ",
        "option4" : "1, 2 and 3       \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 40,
      "question" : "With reference to the slavery during the medieval period, consider the following statements: 1.  The slave markets existed in India during the Delhi Sultanate period. 2.  The slaves were not allowed to own personal property. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU2xhdmVyeSBoYWQgZXhpc3RlZCBpbiBJbmRpYSBhcyB3ZWxsIGFzIGluIFdlc3QgQXNpYSBhbmQgRXVyb3BlIGZvciBhIGxvbmcgdGltZS4gVGhlIHBvc2l0aW9uIG9mIGRpZmZlcmVudCAgdHlwZXMgb2Ygc2xhdmVzLW9uZSBib3JuIGluIHRoZSBob3VzZWhvbGQsIG9uZSBwdXJjaGFzZWQsIG9uZSBhY3F1aXJlZCBhbmQgb25lIGluaGVyaXRlZCBpcyBtZW50aW9uZWQgaW4gIHRoZSBIaW5kdSBzaGFzdHJhcy4gICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2xhdmUgbWFya2V0cyBmb3IgbWVuIGFuZCB3b21lbiBleGlzdGVkIGluIFdlc3QgQXNpYSBhcyB3ZWxsIGFzIGluIEluZGlhLiBUaGUgIFR1cmtpc2gsIENhdWNhc2lhbiwgR3JlZWsgYW5kIEluZGlhbiBzbGF2ZXMgd2VyZSB2YWx1ZWQgYW5kIHdlcmUgc291Z2h0IGFmdGVyLiAgVGhlIHByaWNlcyBmb3IgdGhlIHNsYXZlcyAgd2FzIGFsc28gcmVndWxhdGVkLiBFeGFtcGxlOiBJbmQgLVBlcnNpYW4gaGlzdG9yaWFuIEJhcmFuaSBtZW50aW9ucyB0aGF0IHRoZSBwcmljZXMgb2YgY2F0dGxlIGFzIHdlbGwgYXMgb2YgIHNsYXZlcyB3ZXJlIHN0cmljdGx5IHJlZ3VsYXRlZCBkdXJpbmcgdGhlIHJlaWduIG9mIEFsYXVkZGluIEtoaWxqaS4gVGhpcyBzaG93cyB0aGF0IHNsYXZlcnkgd2FzIGFjY2VwdGVkICBpbiBtZWRpZXZhbCBJbmRpYSBhcyBhIG5vcm1hbCBmZWF0dXJlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogU2xhdmVzIHdlcmUgYWxsb3dlZCB0byBtYXJyeSwgYW5kIHRvIG93biBzb21lIHBlcnNvbmFsIHByb3BlcnR5LiBJdCBjYW4gYmUgIGFyZ3VlZCB0aGF0IHRoZSBjb25kaXRpb24gb2Ygc2xhdmUgd2FzIGJldHRlciB0aGFuIHRoYXQgb2YgYSBkb21lc3RpYyBzZXJ2YW50IGJlY2F1c2UgdGhlIG1hc3RlciBvZiB0aGUgIGZvcm1lciB3YXMgb2JsaWdlZCB0byBwcm92aWRlIGhpbSBmb29kIGFuZCBzaGVsdGVyLCB3aGlsZSBhIGZyZWUgcGVyc29uIG1heSBzdGFydmUgdG8gZGVhdGguIEhvd2V2ZXIsIGl0ICB3YXMgd2lkZWx5IGFjY2VwdGVkIHRoYXQgc2xhdmVyeSB3YXMgZGVncmFkaW5nLiAgICBTb3VyY2U6IE1lZGlldmFsIEhpc3RvcnksIE5DRVJUIFhJLCBDaGFwdGVyLTQsIEVjb25vbWljIGFuZCBTb2NpYWwgTGlmZSwgRWR1Y2F0aW9uIGFuZCBSZWxpZ2lvdXMgQmVsaWVmcywgIENoYXB0ZXItNywgVGhlIERlbGhpIFN1bHRhbmF0ZSwgQ2hhcHRlci04LCBFY29ub21pYyBhbmQgU29jaWFsIExpZmUgdW5kZXIgdGhlIERlbGhpIFN1bHRhbmF0ZSAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 41,
      "question" : "With reference to the political setup of 18th century India, consider the following statements:  1.  Like the Mughal administration, the Sikh kingdoms too paid its officers through grant of jagirs.  2.  Like the Mughals, the Maratha polity too had a unified civilian cum military administration.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSAxOHRoIGNlbnR1cnkgc2F3IHRoZSBkZWNheSBvZiB0aGUgTXVnaGFsIEVtcGlyZSBhbmQgdGhlIHJpc2Ugb2YgcmVnaW9uYWwgc3RhdGVzIG9mIDMga2luZHMgLSAgU3VjY2Vzc29yIFN0YXRlcyAoQXdhZGgsIEJlbmdhbCwgSHlkZXJhYmFkKSwgTmV3IEluc3VyZ2VudCBTdGF0ZXMgKE1hcmF0aGFzLCBTaWtocywgSmF0cykgYW5kICBJbmRlcGVuZGVudCBTdGF0ZXMgKE15c29yZSwgVHJhdmFuY29yZSwgZXRjKS4gVGhvdWdoIHNsaWdodGx5IGRpZmZlcmVudCwgdGhlIGVjb25vbWljLCBwb2xpdGljYWwgYW5kICBhZG1pbmlzdHJhdGl2ZSBzZXR1cCBvZiB0aGVzZSBzdGF0ZXMgY2xvc2VseSByZXNlbWJsZWQgdGhhdCBvZiB0aGUgTXVnaGFsIEVtcGlyZS4gICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgbmV3bHkgaW5kZXBlbmRlbnQgU2lraCBraW5nZG9tcyByZXRhaW5lZCBhZG1pbmlzdHJhdGl2ZSBzdHJ1Y3R1cmUgYW5kICBwb3N0cyBvZiB0aGUgTXVnaGFsIGFkbWluaXN0cmF0aW9uIC0gbGlrZSBEaXdhbnMsIEthcmRhcnMsIGV0Yy4gVGhleSB3ZXJlIHBhaWQgZm9yIHRoZWlyIHNlcnZpY2VzIGJ5ICByZXZlbnVlIGFzc2lnbm1lbnRzLCBqdXN0IGxpa2UgdGhlIE11Z2hhbCBzeXN0ZW0gb2YgYXNzaWduaW5nIEphZ2lycyB0byBNYW5zYWJkYXJzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQWx0aG91Z2ggc2ltaWxhciBpbiBzdHJ1Y3R1cmUgdG8gTXVnaGFsIGFkbWluaXN0cmF0aW9uLCBlc3BlY2lhbGx5IGluIHJldmVudWUgIGFzc2Vzc21lbnQsIGV0YywgdGhlcmUgd2FzIGEgc2lnbmlmaWNhbnQgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSBhZG1pbmlzdHJhdGlvbiBvZiBNYXJhdGhhcyBhbmQgdGhlICBNdWdoYWxzLiBJbiB0aGUgTWFyYXRoYSBwb2xpdHksIGxvY2FsIGFkbWluaXN0cmF0aW9uIGFuZCBjZW50cmFsIGJ1cmVhdWNyYWN5IHdhcyBtYW5uZWQgYnkgdGFsZW50ZWQgIEJyYWhtYW4gZWxpdGVzIGZyb20gQ2hpdHBhdmFuLCBTYXJhc3dhdCBhbmQgRGVzaGF0aCBncm91cHMuIFRoZXkgaGVsZCBubyBtaWxpdGFyeSByYW5rcyBhbmQgaGFkIG5vICBvYmxpZ2F0aW9ucyB0byBwcm92aWRlIG1pbGl0YXJ5IGFzc2lzdGFuY2UgdG8gdGhlIFBlc2h3YSBpbiB0aW1lcyBvZiB3YXIsIGFzIHdhcyB0aGUgY2FzZSBpbiBNdWdoYWwgIGFkbWluaXN0cmF0aW9uLCB3aGVyZSB0aGUgbWFuc2FiZGFyIGhhZCBidXJlYXVjcmF0aWMgZnVuY3Rpb25zIChsaWtlIHJldmVudWUgLSBEaXdhbiksIHdoaWxlIGFsc28gYmVpbmcgIG9ibGlnYXRlZCB0byBtYWludGFpbiBhcm15IGFuZCBzdXBwbHkgb25lIHRvIHRoZSBNdWdoYWwgRW1wZXJvciBkdXJpbmcgdGhlIHdhci4gICAgU291cmNlOiAgSUdOT1UgTUEgLSBNSEkgMDQgLSBCbG9jayA0LCBVbml0IDEyICAgaHR0cHM6Ly9lZ3lhbmtvc2guYWMuaW4vYml0c3RyZWFtLzEyMzQ1Njc4OS8yMjAyNS8xL1VuaXQtMTIucGRmICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 42,
      "question" : "Which of the following were Chief items of export by the Vijayanagar kingdom?  1. Horses  2. Saltpetre  3. velvet clothes  4. Sugar  5. Cotton and silk clothes  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBjaGllZiBpdGVtcyBvZiBleHBvcnRzIHdlcmUgY290dG9uIGFuZCBzaWxrIGNsb3RoZXMsIHNwaWNlcywgcmljZSwgaXJvbiwgc2FsdHBldGVyIGFuZCBzdWdhci4gVGhlIFRoZSAgY2hpZWYgaXRlbXMgb2YgaW1wb3J0cyB3ZXJlIGhvcnNlcywgcGVhcmxzLCBjb3BwZXIsIGNvcmFsLCBtZXJjdXJ5LCBDaGluYSBzaWxrIGFuZCB2ZWx2ZXQgY2xvdGhlcy4gIFRyYWRlICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICAgY2FycmllZCBvdXQgdGhyb3VnaCBhIG51bWJlciBvZiBzZWFwb3J0cyBvbiB0aGUgTWFsYWJhciBjb2FzdCwgdGhlIGNoaWVmIGJlaW5nIENhbm5hbm9yZS4gQ29tbWVyY2lhbCAgY29udGFjdHMgd2l0aCBBcmFiaWEsIFBlcnNpYSwgU291dGggQWZyaWNhIGFuZCBQb3J0dWdhbCBvbiB0aGUgd2VzdCBhbmQgd2l0aCBCdXJtYSwgTWFsYXkgcGVuaW5zdWxhIGFuZCAgQ2hpbmEgb24gdGhlIGVhc3QgZmxvdXJpc2hlZC4gICBTb3VyY2U6ICBUYW1pbCBOYWR1IE5DRVJUIGNsYXNzLSBYSSBjaGFwdGVyLTE5IHBhZ2UtMjE1ICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 5 only  ",
        "option2" : "2, 3 and 5 only  ",
        "option3" : "2, 4 and 5 only   ",
        "option4" : "1, 2 and 3 only  "
      }
    },
    {
      "index" : 43,
      "question" : "'Silahdars and bargirs' often used in Indian history is used for:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBjYXZhbHJ5IG9mIFNoaXZhamkgd2FzIHN1cGVydmlzZWQgYnkgaGF2YWlsZGFycy4gVGhlcmUgd2VyZSB0d28gZGl2aXNpb25zIGluIHRoZSBNYXJhdGhhIGNhdmFscnkgIG9mICBTaGl2YWppLSAgMSkgYmFyZ2lycywgZXF1aXBwZWQgYW5kIHBhaWQgYnkgdGhlIHN0YXRlOyBhbmQgICAyKSBzaWxhaGRhcnMsIG1haW50YWluZWQgYnkgdGhlIG5vYmxlcy4gICBJbiB0aGUgaW5mYW50cnksIHRoZSBNYXZsaSBmb290IHNvbGRpZXJzIHBsYXllZCBhbiBpbXBvcnRhbnQgcm9sZS4gU2hpdmFqaSBhbHNvIG1haW50YWluZWQgYSBuYXZ5LiAgIEtub3dsZWRnZSBCYXNlOiAgICBUaGUgd29yZCBiYXJnaSByZWZlcnJlZCB0byBjYXZhbHJ5bWVuIGluIE1hcmF0aGEgYW5kIE11Z2hhbCBhcm1pZXMuIFRoZSB3b3JkIGNvbWVzIGZyb20gdGhlIFBlcnNpYW4gICdiYXJnaXInLCBsaXRlcmFsbHkgbWVhbmluZyAnYnVyZGVuIHRha2VyJywgbm90ZXMgaGlzdG9yaWFuIFN1cmVuZHJhIE5hdGggU2VuIGluIGhpcyAxOTI4IHdvcmsgVGhlIE1pbGl0YXJ5ICBTeXN0ZW0gT2YgVGhlIE1hcmF0aGFzLiBCdXQgaW4gdGhlIHR3byBpbXBlcmlhbCBhcm1pZXMsIHRoZSB0ZXJtIHNpZ25pZmllZCAnYSBzb2xkaWVyIHdobyByb2RlIGEgaG9yc2UgIGZ1cm5pc2hlZCBieSBoaXMgZW1wbG95ZXIsJyBTZW4gd3JpdGVzLiAgIFNvdXJjZTogVGFtaWwgTmFkdSBOQ0VSVCBjbGFzcy0gWEkgY2hhcHRlci0yMiBwYWdlLTI1MiAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " The class of Revenue Officers who  exercised general superintendence and  control over all the other revenue officials.  ",
        "option2" : " The Maratha cavalry maintained by the  states and nobles.  ",
        "option3" : " The accountants who were in charge of the  administration of pargana.  ",
        "option4" : " The council of ministers to advise the king  in Vijayanagar empire.  "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements with reference to the administration of Vijayanagar empire:  1.  King enjoyed absolute authority in executive, judicial and legislative matters.  2.  Succession to the throne was not on the principle of hereditary.  3.  The King was the highest court of appeal.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZXJlIHdhcyBhIHdlbGwtb3JnYW5pemVkIGFkbWluaXN0cmF0aW9uIHVuZGVyIHRoZSBWaWpheWFuYWdhciBraW5nZG9tLiBUaGUgIFJheWFzIChraW5nKSBlbmpveWVkIGFic29sdXRlIGF1dGhvcml0eSBpbiBleGVjdXRpdmUsIGp1ZGljaWFsIGFuZCBsZWdpc2xhdGl2ZSBtYXR0ZXJzLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gU3VjY2Vzc2lvbiB0byB0aGUgdGhyb25lIHdhcyBtb3N0bHkgb24gdGhlIHByaW5jaXBsZSBvZiBoZXJlZGl0YXJ5LCBidXQgIHNvbWV0aW1lcyB1c3VycGF0aW9uIHRvIHRoZSB0aHJvbmUgYWxzbyBvY2N1cnJlZCwgc3VjaCBhcyB3aGVuIFNhbHV2YSBOYXJhc2ltaGEgY2FtZSB0byBwb3dlciBieSAgZW5kaW5nIHRoZSBTYW5nYW1hIGR5bmFzdHkuIFRoZSBraW5nIHdhcyBhc3Npc3RlZCBieSBhIGNvdW5jaWwgb2YgbWluaXN0ZXJzIGluIGhpcyBkYXktdG8tZGF5ICBhZG1pbmlzdHJhdGlvbi4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBLaW5nIG9mIGVtcGlyZSB3YXMgdGhlIGhpZ2hlc3QgY291cnQgb2YgYXBwZWFsLiBJbiB0aGUgbWF0dGVyIG9mIGp1c3RpY2UsIGhhcnNoICBwdW5pc2htZW50cyBzdWNoIGFzIG11dGlsYXRpb24gYW5kIHRocm93aW5nIHRvIGVsZXBoYW50cyB3ZXJlIGdpdmVuIGluIFZpamF5YW5hZ2FyIGVtcGlyZSBieSB0aGUga2luZy4gICBLbm93bGVkZ2UgQmFzZTogICAgQWRtaW5pc3RyYXRpb24gb2YgdmlqYXluYWdhcmEgZW1waXJlOiAgIDEpIFRoZSBncm93dGggb2YgaGVyZWRpdGFyeSBuYXlha3NoaXBzIHRlbmRlZCB0byBjdXJiIHRoZWlyIGZyZWVkb20gYW5kIGluaXRpYXRpdmUuIFRoZSBnb3Zlcm5vcnMgb2YgdGhlICBwcm92aW5jZXMgd2VyZSByb3lhbCBwcmluY2VzIGF0IGZpcnN0LiBMYXRlciwgcGVyc29ucyBiZWxvbmdpbmcgdG8gdmFzc2FscyBvZiB0aGUgcnVsaW5nIGZhbWlsaWVzIGFuZCBub2JsZXMgIHdlcmUgYWxzbyBhcHBvaW50ZWQgYXMgZ292ZXJub3JzLiBUaGUgcHJvdmluY2lhbCBnb3Zlcm5vcnMgaGFkIGEgbGFyZ2UgbWVhc3VyZSBvZiBhdXRvbm9teSBhcyB0aGV5ICBoZWxkIHRoZWlyIG93biBjb3VydHMsIGFwcG9pbnRlZCB0aGVpciBvd24gb2ZmaWNlcnMsIGFuZCBtYWludGFpbmVkIHRoZWlyIG93biBhcm1pZXMuIEF0IHRpbWVzLCB0aGV5ICBldmVuIGlzc3VlZCB0aGVpciBvd24gY29pbnMgKHRob3VnaCBpbiBzbWFsbCBkZW5vbWluYXRpb25zKS4gICAyKSBUaGUgdGVybSBmb3IgdGhlIHByb3ZpbmNpYWwgZ292ZXJub3Igd2FzIG5vdCBmaXhlZCBhbmQgaXQgZGVwZW5kZWQgb24gaGlzIGFiaWxpdHkgYW5kIHN0cmVuZ3RoLiBFYWNoICBnb3Zlcm5vciBwYWlkIGEgZml4ZWQgY29udHJpYnV0aW9uIGluIG1lbiBhbmQgbW9uZXkgdG8gdGhlIGNlbnRyYWwgZ292ZXJubWVudC4gVGh1cywgaXQgd291bGQgbm90IGJlICB0b3RhbGx5IHdyb25nIHRvIGFzc3VtZSB0aGF0IFZpamF5YW5hZ2FyIHdhcyBtb3JlIGEgY29uZmVkZXJhY3kgdGhhbiBhIGNlbnRyYWxpemVkIGVtcGlyZS4gICBTb3VyY2U6IGFuY2llbnQgYW5kIG1lZGlldmFsIGhpc3RvcnkgYnkgcG9vbmFtIGRhbGFsIGRhaGl5YS4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements with reference to the architecture of Vijayanagar empire:  1.  Chief characteristics of Vijayanagar architecture was the construction of tall Raya Gopurams.   2.   Kalyanamandapas with carved pillars were present in the temple premises.   3.  The horse was the most common motif found on the pillar of architecture.  Which of the statements given above are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBUaGUgbW9zdCBpbXBvcnRhbnQgdGVtcGxlcyBvZiB0aGUgVmlqYXlhbmFnYXIgc3R5bGUgd2VyZSBmb3VuZCBpbiB0aGUgSGFtcGkgcnVpbnMgb3IgdGhlIGNpdHkgb2YgIFZpamF5YW5hZ2FyLiAgICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBUaGUgdGVtcGxlIGJ1aWxkaW5nIGFjdGl2aXR5IGZ1cnRoZXIgZ2FpbmVkIG1vbWVudHVtIGR1cmluZyB0aGUgVmlqYXlhbmFnYXIgcnVsZS4gIFRoZSBjaGllZiBjaGFyYWN0ZXJpc3RpY3Mgb2YgdGhlIFZpamF5YW5hZ2FyIGFyY2hpdGVjdHVyZSB3ZXJlIHRoZSBjb25zdHJ1Y3Rpb24gb2YgdGFsbCBSYXlhIEdvcHVyYW1zICBvciBnYXRld2F5cy4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBUaGUgS2FseWFuYW1hbmRhcGFtIHdpdGggY2FydmVkIHBpbGxhcnMgaW4gdGhlIHRlbXBsZSBwcmVtaXNlcyB3ZXJlIGFsc28gdGhlICBmZWF0dXJlIG9mIHZpamF5bmFnYXJhIGVtcGlyZS4gVGhlIHNjdWxwdHVyZXMgb24gdGhlIHBpbGxhcnMgd2VyZSBjYXJ2ZWQgd2l0aCBkaXN0aW5jdGl2ZSBmZWF0dXJlcy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiBUaGUgSG9yc2Ugd2FzIHRoZSBtb3N0IGNvbW1vbiBtb3RpZiBmb3VuZCBvbiB0aGVzZSBwaWxsYXJzLiBMYXJnZSBtYW5kYXBhbXMgIGNvbnRhaW4gb25lIGh1bmRyZWQgcGlsbGFycyBhcyB3ZWxsIGFzIG9uZSB0aG91c2FuZCBwaWxsYXJzIGluIHNvbWUgYmlnIHRlbXBsZXMuIFRoZXNlIG1hbmRhcGFtcyB3ZXJlICB1c2VkIGZvciBzZWF0aW5nIHRoZSBkZWl0eSBvbiBmZXN0aXZhbCBvY2Nhc2lvbnMuIEFsc28sIG1hbnkgQW1tYW4gc2hyaW5lcyB3ZXJlIGFkZGVkIHRvIHRoZSBhbHJlYWR5ICBleGlzdGluZyB0ZW1wbGVzIGR1cmluZyB0aGlzIHBlcmlvZC4gICAgS25vd2xlZGdlIEJhc2U6IFZpdHRhbGFzd2FteSBhbmQgSGF6YXJhIFJhbWFzd2FteSB0ZW1wbGVzIHdlcmUgdGhlIGJlc3QgZXhhbXBsZXMgb2YgdGhpcyBzdHlsZS4gIFRoZSBWYXJhZGhhcmFqYSBhbmQgRWthbXBhcmFuYXRoYSB0ZW1wbGVzIGF0IEthbmNoaXB1cmFtIHN0YW5kIGFzIGV4YW1wbGVzIGZvciB0aGUgbWFnbmlmaWNlbmNlIG9mICB0aGUgVmlqYXlhbmFnYXJhIHN0eWxlIG9mIHRlbXBsZSBBcmNoaXRlY3R1cmUuIFRoZSBSYXlhIEdvcHVyYW1zIGF0IFRoaXJ1dmFubmFtYWxhaSBhbmQgICBDaGlkYW1iYXJhbSBzcGVhayBvZiB0aGUgZ2xvcmlvdXMgZXBvY2ggb2YgVmlqYXlhbmFnYXIuIFRoZXkgd2VyZSBjb250aW51ZWQgYnkgdGhlIE5heWFrIHJ1bGVycyBpbiB0aGUgIGxhdGVyIHBlcmlvZC4gVGhlIG1ldGFsIGltYWdlcyBvZiBLcmlzaG5hIERldmEgUmF5YSBhbmQgaGlzIHF1ZWVucyBhdCBUaXJ1cGF0aSBhcmUgZXhhbXBsZXMgZm9yIGNhc3Rpbmcgb2YgIG1ldGFsIGltYWdlcy4gTXVzaWMgYW5kIGRhbmNpbmcgd2VyZSBhbHNvIHBhdHJvbmlzZWQgYnkgdGhlIHJ1bGVycyBvZiBWaWpheWFuYWdhci4gICBTb3VyY2U6IGFuY2llbnQgYW5kIG1lZGlldmFsIGhpc3RvcnkgYnkgcG9vbmFtIGRhbGFsIGRhaGl5YS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 46,
      "question" : "In Deccan, the Vakatakas succeeded which of the following dynasty?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT3B0aW9uIGEgaXMgY29ycmVjdC4gSW4gcGVuaW5zdWxhciBJbmRpYSwgZXNwZWNpYWxseSBpbiBub3J0aGVybiBNYWhhcmFzaHRyYSBhbmQgVmlkYXJiaGEsIHRoZSAgU2F0YXZhaGFuYXMgd2VyZSBzdWNjZWVkZWQgYnkgYSBsb2NhbCBwb3dlciBrbm93biBhcyB0aGUgVmFrYXRha2FzLCB3aG8gcGxheWVkIGFuIGVmZmVjdGl2ZSByb2xlIGluICB0aGUgcG9saXRpY2FsIGdhbWUgb2YgdGhlIERlY2NhbiBmb3IgbW9yZSB0aGFuIHR3byBhbmQgYSBoYWxmIGNlbnR1cmllcy4gVGhlIFZha2F0YWthcyB3ZXJlICBDb250ZW1wb3JhbmVvdXMgb2YgdGhlIEd1cHRhcyBpbiBub3J0aGVybiBJbmRpYS4gVGhlIFB1cmFuYXMgcmVmZXIgdG8gdGhlIGR5bmFzdHkgYXMgdGhlIFZpbmRoeWFrYXMuICBUaGUgVmFrYXRha2FzLCB3aG8gd2VyZSBCcmFobWluIHRoZW1zZWx2ZXMgKGJlbG9uZ2luZyB0byB0aGUsIFZpc2hudXZyaWRkaGEgZ290cmEpIHdlcmUgZ3JlYXQgIGNoYW1waW9ucyBvZiB0aGUgQnJhaG1hbmljYWwgcmVsaWdpb24gYW5kIHBlcmZvcm1lZCBudW1lcm91cyBWZWRpYyBzYWNyaWZpY2VzLiAgIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gVGhlIFBhbGxhdmFzIGVtZXJnZWQgYXMgYSBmb3JtaWRhYmxlIHBvd2VyIGluIHRoZSBTb3V0aCBhcm91bmQgdGhlIDR0aCBjZW50dXJ5ICBBRCBhbmQgd2VyZSBhdCB0aGUgaGVpZ2h0IG9mIHRoZWlyIHBvd2VyIGluIHRoZSBzZXZlbnRoIGNlbnR1cnkgQUQuIFRoZXkgd2VyZSBhYmxlIHRvIHN1c3RhaW4gdGhlaXIgcnVsZSAgZm9yIGFib3V0IDUwMCB5ZWFycy4gVGhleSBidWlsdCBncmVhdCBjaXRpZXMsIGNlbnRyZXMgb2YgbGVhcm5pbmcsIHRlbXBsZXMsIGFuZCBzY3VscHR1cmVzIGFuZCBpbmZsdWVuY2VkIGEgIGxhcmdlIHBhcnQgb2YgU291dGhlYXN0IEFzaWEgaW4gY3VsdHVyZS4gVGhlIFBhbGxhdmEgY2FwaXRhbCB3YXMgS2FuY2hpcHVyYW0uIFRoZWlyIHRlcnJpdG9yaWVzIGF0IHRoZSBoZWlnaHQgIG9mIHRoZWlyIHBvd2VycyBleHRlbmRlZCBmcm9tIHRoZSBub3J0aGVybiBwYXJ0IG9mIEFuZGhyYSBQcmFkZXNoIHRvIFJpdmVyIEthdmVyaSBpbiB0aGUgU291dGguIER1cmluZyAgdGhlIHNldmVudGggY2VudHVyeSwgdGhlIENob2xhcyB3ZXJlIHJlZHVjZWQgdG8gYSBtYXJnaW5hbCBzdGF0ZSBieSB0aGUgYXV0aG9yaXR5IG9mIHRoZSBQYWxsYXZhcyAgIE9wdGlvbiBjIGlzIGluY29ycmVjdC4gVGhlIENoYWx1a3lhcyBydWxlZCBwYXJ0cyBvZiBTb3V0aGVybiBhbmQgQ2VudHJhbCBJbmRpYSBiZXR3ZWVuIHRoZSA2dGggY2VudHVyeSAgYW5kIHRoZSAxMnRoIGNlbnR1cnkuVGhlIENoYWx1a3lhIGR5bmFzdHkgcmVhY2hlZCBpdHMgcGVhayBkdXJpbmcgdGhlIHJlaWduIG9mIFB1bGFrZXNpbiBJSS4gSGlzIGdyYW5kZmF0aGVyICBQdWxha2VzaW4gSSBoYWQgY3JlYXRlZCBhbiBlbXBpcmUgYXJvdW5kIFZhdGFwaS4gUHVsYWtlc2luIElJIHN1Ymp1Z2F0ZWQgdGhlIEthZGFtYmFzLCB0aGUgR2FuZ2FzIG9mICBNeXNvcmUsIGFuZCB0aGUgTWF1cmF2YXMgb2YgTm9ydGggS29ua2FuLCB0aGUgTGF0YXMgb2YgR3VqYXJhdCwgdGhlIE1hbGF2YXMgYW5kIHRoZSBHdXJqYXJzLiBIZSBhbHNvICBzdWNjZWVkZWQgaW4gZ2V0dGluZyBhIHN1Ym1pc3Npb24gZnJvbSB0aGUgQ2hvbGEsIENoZXJhIGFuZCBQYW5keWEga2luZ3MuIEhlIGhhZCBhbHNvIGRlZmVhdGVkIEtpbmcgIEhhcnNoYSBvZiBLYW5uYXVqIGFuZCB0aGUgUGFsbGF2YSBraW5nIE1haGVuZHJhdmFybWFuLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdC4gVGhlIFJhc2h0cmFrdXRhcyBjb25zaWRlcmVkIHRoZW1zZWx2ZXMgZGVzY2VuZGFudHMgb2YgU2F0eWFraS4gSGlzdG9yaWFucyBkaWZmZXIgIG9uIHRoZSBxdWVzdGlvbiBvZiB0aGVpciBvcmlnaW5zLiBJdCBpcyBldmlkZW50IGZyb20gYSBmZXcgQ2hhbHVreWEga2luZ3MnIGluc2NyaXB0aW9ucyB0aGF0IHRoZXkgd2VyZSB2YXNzYWxzICBvZiB0aGUgQ2hhbHVreWFzLiBSYXNodHJha3V0YXMgd2VyZSBvZiBLYW5uYWRhIG9yaWdpbiBhbmQgdGhlaXIgbW90aGVyIHRvbmd1ZSB3YXMgS2FubmFkYS4gICBTb3VyY2U6ICBBbmNpZW50IGFuZCBtZWRpZXZhbCBoaXN0b3J5IGJ5IHBvb25hbSBkYWxhbCBkYWhpeWEuICAgICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQggICAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Satavahanas  ",
        "option2" : "chalukyas   ",
        "option3" : "pallavas   ",
        "option4" : "rashtrakutas    \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b     "
      }
    },
    {
      "index" : 47,
      "question" : "Vakataka dynasty were known for which of the following?  1.  Large numbers of copper-plate grants during their rule.  2.  New style by name Vaidharbhariti was developed in Sanskrit during their rule.  3.  Remarkable contribution in field of painting during their rule.  Select the correct answer using the codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGNvcnJlY3QuIExhcmdlc3QgbnVtYmVyIG9mIFZha2F0YWthIGluc2NyaXB0aW9ucyBiZWxvbmdzIHRvIFByYXZhcmFzZW5hIElJIHJlaWduLiBBIGRvemVuICBjb3BwZXItcGxhdGUgZ3JhbnRzIG9mIGhpcyB3ZXJlIGRpc2NvdmVyZWQgaW4gZGlmZmVyZW50IHBhcnRzIG9mIFZpZGFyYmhhLCB0aG91Z2ggUHJhYmhhdmF0aWd1cHRhICBjb250aW51ZWQgdG8gaXNzdWUgaW5zY3JpcHRpb25zIGluIGhlciBvd24gcmlnaHQgYW5kIGRpZWQgZHVyaW5nIHRoZSBsYXRlciBwYXJ0IG9mIGhlciBzb24ncyByZWlnbi4gVGhlaXIgIGhpc3RvcnkgY2FuIGJlIHJlY29uc3RydWN0ZWQgb24gdGhlIGJhc2lzIG9mIGEgbGFyZ2UgbnVtYmVyIG9mIGNvcHBlci1wbGF0ZSBsYW5kIGdyYW50IGNoYXJ0ZXJzIGlzc3VlZCB0byAgdGhlIEJyYWhtYW5zLiAgIE9wdGlvbiAyIGlzIGNvcnJlY3QuICBWYWthdGFrYSBLaW5ncyBsaWtlIFByYXZhcmFzZW5hIElJIChhdXRob3Igb2YgdGhlIFNldHViYW5kaGFrYXZ5YSkgYW5kIFNhcnZhc2VuYSAgKGF1dGhvciBvZiB0aGUgSGFyaXZpamF5YSkgd2VyZSB0aGVtc2VsdmVzIHBvZXRzIG9mIGdyZWF0IHJlcHV0ZSBpbiBQcmFrcml0LiBBIHN0eWxlIGJ5IG5hbWUgVmFpZGhhcmJoYXJpdGkgIHdhcyBkZXZlbG9wZWQgaW4gU2Fuc2tyaXQgZHVyaW5nIHRoZWlyIHJ1bGUsIHdoaWNoIHdhcyBwcmFpc2VkIGJ5IHRoZSBwb2V0cyBvZiB0aGUgbGlrZXMgb2YgS2FsaWRhc2EsICBCYW5hYmhhdHRhLCBhbmQgRGFuZGluLiBUaGUgVmFrYXRha2FzIGhhZCBhIHN0YW1wIG9mIHRoZWlyIG93biBpbiB0aGVpciBydWxlcnNoaXAsIHdoaWNoIGlzIHRydWx5ICB1bm1hdGNoZWQuICAgT3B0aW9uIDMgaXMgY29ycmVjdC4gVGhleSBtYWRlIGEgcmVtYXJrYWJsZSBjb250cmlidXRpb24gaW4gdGhlIGZpZWxkIG9mIHBhaW50aW5nLiBBamFudGEgY2F2ZSBudW1iZXJzICBYVkksIFhWSUkgYW5kIFhJWCBhcmUgdGhlIGJlc3QgZXhhbXBsZXMgb2YgVmFrYXRha2EgZXhjZWxsZW5jZSBpbiB0aGUgZmllbGQgb2YgcGFpbnRpbmcsIGluIHBhcnRpY3VsYXIgdGhlICBwYWludGluZyB0aXRsZWQgTWFoYWJoaW5pc2hrcmFtYW5hLiBOb3Qgb25seSB0aGUgVmFrYXRha2EgcnVsZXJzLCBidXQgdGhlaXIgbWluaXN0ZXJzIG9yIGdvdmVybm9ycyBsaWtlICBIYXN0aWJob2phIGFuZCBWYXJhaGFkZXZhIGFsc28gZXh0ZW5kZWQgdGhlaXIgYmVuZXZvbGVudCBwYXRyb25hZ2UgdG8gdGhlIEFqYW50YSBjYXZlIHBhaW50ZXJzLiAgIFNvdXJjZTogIGFuY2llbnQgYW5kIG1lZGlldmFsIGhpc3RvcnkgYnkgcG9vbmFtIGRhbGFsIGRhaGl5YS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 48,
      "question" : "Which of the following foreign travellers was awarded the title of 'Malik-ul-Tujjar' by the Bahmani Kingdom? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQm9ybiBpbiB0aGUgQ2FzcGlhbiBTZWEgcHJvdmluY2Ugb2YgR2lsYW4gaW4gbm9ydGhlcm4gSXJhbiwgTWFobW91ZCBHYXdhbiB3YXMgYSBtYW4gb2YgbGV0dGVycyBhbmQgYSAgc3VjY2Vzc2Z1bCBtZXJjaGFudCBwbHlpbmcgdGhlIGx1Y3JhdGl2ZSByb3V0ZSBmcm9tIHRoZSBQZXJzaWFuIEd1bGYgcG9ydCBvZiBHb21icm91biAocHJlc2VudGx5IEJhbmRhciAgQWJiYXMpIHRvIHRoZSBLb25rYW4gY29hc3Qgb2YgSW5kaWEgd2l0aCBjYXJnb3Mgb2Ygc2lsa2VuIGZhYnJpY3MsIHBlYXJscywgQXJhYmlhbiBob3JzZXMsIGV0YywgZm9yIHRoZSAgQmFobWFuaSBjYXBpdGFsIG9mIEJpZGFyIC0gd2hlcmUgUGVyc2lhbiBjdWx0dXJlIHdhcyBwcmV2YWxlbnQuICAgT24gb25lIHN1Y2ggdmlzaXQgYXQgdGhlIGFnZSBvZiA0MiwgaGUgd2FzIGdpdmVuIHRoZSB0aXRsZSBvZiAnTWFsaWstdXQtVHVqamFyJyAoS2luZyBvZiBUcmFkZXJzKSBieSBGZXJvemUgIFNoYWggYW5kIG9mZmVyZWQgYSBwb3N0IGF0IHRoZSBjb3VydC4gSGUgc3RheWVkIGluIEluZGlhLCBhbmQgaW4gdGhlIHJlaWducyBvZiB0aGUgc3Vic2VxdWVudCBraW5ncywgaGUgIHN0ZWFkaWx5IHJvc2UgaW4gdGhlIGFkbWluaXN0cmF0aXZlIGhpZXJhcmNoeSBiZWNhdXNlIG9mIGhpcyBlZmZpY2llbnQgbWFuYWdlbWVudCwgZWFybmluZyB0aGUgdGl0bGVzICAnV2FrZWVsIHVzLVN1bHRhbmEnIGFuZCAnS2h3YWphLWUgSmFoYW4nIG9yIFByaW1lIE1pbmlzdGVyIC0gYSBwb3N0IHRoYXQgaGUgaGVsZCBmb3IgYWxtb3N0IHR3byAgZGVjYWRlcywgZHVyaW5nIHdoaWNoIGhlIGNhcnJpZWQgb3V0IG1hbnkgcmVmb3Jtcywgc3RyZW5ndGhlbmVkIHRoZSBtaWxpdGFyeSwgaW5jcmVhc2VkIHRoZSByZXZlbnVlcyAgdGhyb3VnaCBwcm9wZXIgdXRpbGl6YXRpb24gb2YgdGhlIGFncmljdWx0dXJhbCBsYW5kcywgYW5kIGVyYWRpY2F0ZWQgY29ycnVwdGlvbi4gIEhlIGF1dGhvcmVkIHNldmVyYWwgYm9va3Mgc3VjaCBhcyAnUml5YXogYWwtSW5zaGEnIGFuZCBidWlsdCBhIG1hZ25pZmljZW50IGNvbGxlZ2UgZmFtb3VzIGFzIE1hZHJhc2EgIE1haG11ZCBHYXdhbiBpbiBCaWRhciwgd2hlcmUgc2Nob2xhcnMgZnJvbSBJcmFuLCBJcmFxLCBhbmQgQXJhYmlhIHVzZWQgdG8gdGVhY2guICAgU291cmNlOiBodHRwczovL3d3dy5pbWFtcmV6YS5uZXQvb2xkL2VuZy9pbWFtcmV6YS5waHA/aWQ9MTA0MzQgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Abdul Razzak ",
        "option2" : "Ibn-e-Batuta ",
        "option3" : "Eduardo Barbosa ",
        "option4" : "Mahmoud Gawan  "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to the difference in political system of Vijayanagar empire and that of medieval cholas, which of the following statements is/are correct?  1.  The urban affairs of medieval cholas were controlled by the local Governors while that of Vijayanagar empire were controlled by assemblies comprising of various castes.  2.  As in the times of Cholas the village assemblies under Vijayanagar empire continued to flourish.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgbG9jYWwgR292ZXJub3JzIGFwcG9pbnRlZCBieSB0aGUgY2VudHJhbCBhZG1pbmlzdHJhdGlvbiBjb250cm9sbGVkIHRoZSAgdXJiYW4gYWZmYWlycyBvZiBWaWpheW5hZ2FyIGVtcGlyZS4gVGhlIGdvdmVybm9ycyBvZiB0aGUgcHJvdmluY2VzIHdlcmUgcm95YWwgcHJpbmNlcyBhdCBmaXJzdC4gTGF0ZXIsICBwZXJzb25zIGJlbG9uZ2luZyB0byB2YXNzYWwgcnVsaW5nIGZhbWlsaWVzIGFuZCBub2JsZXMgd2VyZSBhbHNvIGFwcG9pbnRlZCBhcyBnb3Zlcm5vcnMuIFRoZSBwcm92aW5jaWFsICBnb3Zlcm5vcnMgaGFkIGEgbGFyZ2UgbWVhc3VyZSBvZiBhdXRvbm9teS4gVGhleSBoZWxkIHRoZWlyIG93biBjb3VydHMsIGFwcG9pbnRlZCB0aGVpciBvd24gb2ZmaWNlcnMsIGFuZCAgbWFpbnRhaW5lZCB0aGVpciBvd24gYXJtaWVzLiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlIGFzc2VtYmxpZXMgYXR0ZW5kZWQgYnkgbWVtYmVycyBvZiB2YXJpb3VzIGNhc3RlcyAgY29udHJvbGxlZCB0aGUgdXJiYW4gYWZmYWlycyBvZiBtZWRpZXZhbCBjaG9sYXMuIFV0dGlyYW1lcnVyIGluc2NyaXB0aW9ucyBwcm92aWRlIGRldGFpbHMgb2YgdGhlIGZvcm1hdGlvbiAgYW5kIGZ1bmN0aW9ucyBvZiB2aWxsYWdlIGNvdW5jaWxzLiAgICAgb2YgMjIgDw8gDwEgDiAgDAMgAiAgCyAFAgYgAQkIIAYFCCAgICAgICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3QuIFVubGlrZSBpbiB0aGUgdGltZXMgb2YgQ2hvbGFzIHRoZSB2aWxsYWdlIGFzc2VtYmxpZXMgdW5kZXIgVmlqYXlhbmFnYXIgZW1waXJlICBzdGFydGVkIHRvIHdlYWtlbi4gVGhlIENob2xhIHRyYWRpdGlvbnMgb2YgdmlsbGFnZSBzZWxmLWdvdmVybm1lbnQgd2VyZSBjb25zaWRlcmFibHkgd2Vha2VuZWQgdW5kZXIgIFZpamF5YW5hZ2FyYSBydWxlLiBUaGUgZ3Jvd3RoIG9mIGhlcmVkaXRhcnkgbmF5YWtzaGlwcyB3YXMgd2l0bmVzc2VkIHdoaWNoIHRlbmRlZCB0byBjdXJiIHRoZWlyICBmcmVlZG9tIGFuZCBpbml0aWF0aXZlLiAgIEtub3dsZWRnZSBCYXNlOiBJbiB0aGUgVmlqYXlhbmFnYXJhIGtpbmdkb20gdGhlIGtpbmcgd2FzIGFkdmlzZWQgYnkgYSBjb3VuY2lsIG9mIG1pbmlzdGVycyB3aGljaCAgY29uc2lzdGVkIG9mIHRoZSBncmVhdCBub2JsZXMgb2YgdGhlIGtpbmdkb20uIFRoZSBraW5nZG9tIHdhcyBkaXZpZGVkIGludG8gcmFqeWFzIG9yIG1hbmRhbGFtIChwcm92aW5jZXMpICBiZWxvdyB3aGljaCB3ZXJlIG5hZHUgKGRpc3RyaWN0KSwgc3RoYWxhIChzdWItZGlzdHJpY3QpIGFuZCBncmFtYSAodmlsbGFnZSkuICAgU291cmNlOiBodHRwczovL2VneWFua29zaC5hYy5pbi9iaXRzdHJlYW0vMTIzNDU2Nzg5LzIyMDA1LzEvVW5pdC05LnBkZiBwYWdlLTYgICAgSGlzdG9yeSBvZiBNZWRpZXZhbCBJbmRpYSBzYXRpc2ggY2hhbmRyYSBPcmllbnQgcHVibGljYXRpb24gbmV3IGVkaXRpb24gY2hhcHRlci05IHBhZzE1MiAgIFRhbWlsIG5hZHUgTkNFUlQgQ2hhdHBlci0xMyBwYWdlLTE0NyAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : " Both 1 and 2  ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 50,
      "question" : "Which of the following inscriptions give information about the Vijaynagara kingdom?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiBhIGlzIGNvcnJlY3QuIEthbGFoYXN0aSBpbnNjcmlwdGlvbiBwcm92aWRlcyB0aGUgZmlyc3QtZXZlciBlcGlncmFwaGljYWwgcmVmZXJlbmNlIHRvIHRoZSBkYXRlIG9mICBkZWF0aCBvZiBWaWpheWFuYWdhciBraW5nIEtyaXNobmFkZXZhcmF5YS4gQXMgcGVyIHRoZSBpbnNjcmlwdGlvbiwgS3Jpc2huYWRldmFyYXlhLCBvbmUgb2YgdGhlIGdyZWF0ZXN0ICBlbXBlcm9ycyBvZiBJbmRpYSB3aG8gcnVsZWQgZnJvbSB0aGUgU291dGgsIGRpZWQgb24gT2N0b2JlciAxNywgMTUyOS4gSXQgaXMgd3JpdHRlbiBpbiBLYW5uYWRhLiAgIE9wdGlvbiBiIGlzIGluY29ycmVjdC4gVXR0aXJhbWVydXIgaW5zY3JpcHRpb24gbWVudGlvbnMgYWJvdXQgdGhlIHZpbGxhZ2UgYXNzZW1ibHkgJ1VyJyBhbmQgJ3NhYmhhJyBvZiAgY2hvbGEgZW1waXJlLiBUaGUgdmlsbGFnZSBnZW5lcmFsIGFzc2VtYmx5IG1ldCBhbmQgcmVzb2x2ZWQgYWJvdXQgdGhlIHF1YWxpZmljYXRpb24gZm9yIHRoZSBtZW1iZXJzIG9mICB0aGUgc2FiaGEsIGVsZWN0aW9uIHByb2NlZHVyZXMgZm9yIHRoZSAzMCB3YXJkcyBvZiBVdHRhcmFtZXJ1ciBDaGF0dXJ2ZWRoaSBNYW5nYWxhbS4gICBPcHRpb24gYyBpcyBpbmNvcnJlY3QuIEFsbGFoYWJhZCBQaWxsYXIgaW5zY3JpcHRpb24gdGFsa3MgYWJvdXQgdGhlIGNvbnF1ZXN0cyBvZiBTYW11ZHJhZ3VwdGEgYW5kICBib3VuZGFyaWVzIG9mIHRoZSBHdXB0YSBFbXBpcmUgICBPcHRpb24gZCBpcyBpbmNvcnJlY3QuIEhhdGhpZ3VtcGhhIGluc2NyaXB0aW9uIGdpdmVzIHRoZSBkZXRhaWxzIG9mIHRoZSB5ZWFyLXdpc2UgYWNoaWV2ZW1lbnRzIG9mIEFzaG9rYSAgYW5kIFNhbXVkYWd1cHRhLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwva2FybmF0YWthL2luc2NyaXB0aW9uLW9uLXZpamF5YW5hZ2FyLWtpbmdzLSBkZWF0aC1kaXNjb3ZlcmVkL2FydGljbGUzMzkzNzg5Mi5lY2UgICAgIG9mIDIyIA8PIA8BIA4gIAwDIAIgIAsgBQIGIAEJCCAGBQgg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Kalahasti inscription   ",
        "option2" : "Uttiramerur inscription  ",
        "option3" : "Allahabad Pillar inscription  ",
        "option4" : "Hathigumpha inscription     \u000f\u000f \u000f\u0001 \u000e  \f\u0003 \u0002  \u000b \u0005\u0002\u0006 \u0001\t\b \u0006\u0005\b "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2023"
}
