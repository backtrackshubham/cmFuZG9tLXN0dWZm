{
  "testId" : "only-ias-2023-prelims-prelims-8",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2023\\only-ias\\prelims\\only-ias-2023-prelims-prelims-8.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "Consider the following pairs:           Relief                                   Description  1. Continental Slope    -    marginal area submerged in  the water   2. Oceanic ridge            -   steep slope from continental  shelf to abyssal plain  3. Abyssal Hills             -    underwater hills more than  1000 m high  Which of the following pairs are correctly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE=",
      "description" : "IEV4cDogICAgKC0pUGFpciAxIGlzIGluY29ycmVjdDogVGhlIGNvbnRpbmVudGFsIHNsb3BlIGNvbm5lY3RzICAgdGhlIGNvbnRpbmVudGFsIHNoZWxmIGFuZCB0aGUgb2NlYW4gYmFzaW5zLiBJdCAgIGJlZ2lucyB3aGVyZSB0aGUgYm90dG9tIG9mIHRoZSBjb250aW5lbnRhbCBzaGVsZiAgIHNoYXJwbHkgZHJvcHMgb2ZmIGludG8gYSBzdGVlcCBzbG9wZS4gVGhlIGdyYWRpZW50ICAgb2YgdGhlIHNsb3BlIHJlZ2lvbiB2YXJpZXMgYmV0d2VlbiAyLTXCsC4gVGhlIGRlcHRoICAgb2YgdGhlIHNsb3BlIHJlZ2lvbiB2YXJpZXMgYmV0d2VlbiAyMDAgYW5kIDMsMDAwICAgbS4gVGhlIHNsb3BlIGJvdW5kYXJ5IGluZGljYXRlcyB0aGUgZW5kIG9mIHRoZSAgIGNvbnRpbmVudHMuIENhbnlvbnMgYW5kIHRyZW5jaGVzIGFyZSBvYnNlcnZlZCBpbiAgIHRoaXMgcmVnaW9uLiAgICgtKVBhaXIgMiBpcyBpbmNvcnJlY3Q6IEEgbWlkLW9jZWFuaWMgcmlkZ2UgaXMgICBjb21wb3NlZCBvZiB0d28gY2hhaW5zIG9mIG1vdW50YWlucyBzZXBhcmF0ZWQgICBieSBhIGxhcmdlIGRlcHJlc3Npb24uIFRoZSBtb3VudGFpbiByYW5nZXMgY2FuICAgaGF2ZSBwZWFrcyBhcyBoaWdoIGFzIDIsNTAwIG0gYW5kIHNvbWUgZXZlbiAgIHJlYWNoIGFib3ZlIHRoZSBvY2VhbidzIHN1cmZhY2UuIEljZWxhbmQsIGEgcGFydCBvZiAgIHRoZSBtaWQtQXRsYW50aWMgUmlkZ2UsIGlzIGFuIGV4YW1wbGUuICAgKC0pUGFpciAzIGlzIGNvcnJlY3Q6IEFieXNzYWwgaGlsbCwgc21hbGwsICAgdG9wb2dyYXBoaWNhbGx5IHdlbGwtZGVmaW5lZCBzdWJtYXJpbmUgaGlsbCB0aGF0ICAgbWF5IHJpc2UgZnJvbSBzZXZlcmFsIG1ldHJlcyB0byBzZXZlcmFsIGh1bmRyZWQgICBtZXRyZXMgYWJvdmUgdGhlIGFieXNzYWwgc2VhZmxvb3IsIGluIHdhdGVyIDMsMDAwICAgdG8gNiwwMDAgbWV0cmVzICgxMCwwMDAgdG8gMjAsMDAwIGZlZXQpIGRlZXAuICAgVHlwaWNhbCBhYnlzc2FsIGhpbGxzIGhhdmUgZGlhbWV0ZXJzIG9mIHNldmVyYWwgdG8gICBzZXZlcmFsIGh1bmRyZWQgbWV0cmVzLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "3 only  ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements:  1. The deep sea plain has an optimum amount of clay  and silt.   2. Oceanic deeps are very sensitive to earthquakes  and volcanoes.  3. The largest number of deeps and trenches found in  the Pacific Ocean.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI=",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBEZWVwIFNlYSBwbGFpbnMgYXJlIGdlbnRseSAgIHNsb3BpbmcgYXJlYXMgb2YgdGhlIG9jZWFuIGJhc2lucy4gVGhlc2UgYXJlIHRoZSAgIGZsYXR0ZXN0IGFuZCBzbW9vdGhlc3QgcmVnaW9ucyBvZiB0aGUgd29ybGQuIFRoZSAgIGRlcHRocyB2YXJ5IGJldHdlZW4gMywwMDAgYW5kIDYsMDAwbS4gVGhlc2UgICBwbGFpbnMgYXJlIGNvdmVyZWQgd2l0aCBmaW5lLWdyYWluZWQgc2VkaW1lbnRzICAgbGlrZSBjbGF5IGFuZCBzaWx0LiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBPY2VhbmljIGRlZXAgb3IgICB0cmVuY2hlcyBhcmUgdGhlIGRlZXBlc3QgcGFydHMgb2YgdGhlIG9jZWFucy4gVGhlICAgdHJlbmNoZXMgYXJlIHJlbGF0aXZlbHkgc3RlZXAgc2lkZWQsIG5hcnJvdyBiYXNpbnMuICAgVGhleSBhcmUgc29tZSAzLTUga20gZGVlcGVyIHRoYW4gdGhlICAgc3Vycm91bmRpbmcgb2NlYW4gZmxvb3IuIFRoZXkgb2NjdXIgYXQgdGhlIGJhc2VzICAgb2YgY29udGluZW50YWwgc2xvcGVzIGFuZCBhbG9uZyBpc2xhbmQgYXJjcyBhbmQgYXJlICAgYXNzb2NpYXRlZCB3aXRoIGFjdGl2ZSB2b2xjYW5vZXMgYW5kIHN0cm9uZyAgIGVhcnRocXVha2VzLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBsYXJnZXN0IG51bWJlciAgIG9mIGRlZXBzIGFuZCB0cmVuY2hlcyBhcmUgZm91bmQgaW4gdGhlIFBhY2lmaWMgICBPY2Vhbi4gVGhlcmUgaXMgYSBsb25nIGNoYWluIG9mIGRlZXBzIGFuZCB0cmVuY2hlcyAgIGFsb25nIHRoZSBlYXN0ZXJuIGFuZCB3ZXN0ZXJuIG1hcmdpbnMgb2YgdGhlICAgUGFjaWZpYyBPY2Vhbi4gVGhlIGdyZWF0ZXN0IGtub3duIE9jZWFuIERlZXAgaXMgICB0aGUgTWFyaWFuYSBUcmVuY2ggbmVhciBHdWxhbSBpc2xhbmQsIHdoaWNoIGlzICAgbW9yZSB0aGFuIDM2LDAwMCBmZWV0IGRlZXAuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 3,
      "question" : "With the reference to minor relief features of  oceans, consider the following statements:   1. Seamount is mountain and volcanic in origin.   2. The Pacific Ocean has the highest guyots.  3. Hudson canyon is the best-known submarine  canyon in the world.   4. Atolls are low islands found in temperate oceans.   Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2VhbW91bnQgaXMgYSBtb3VudGFpbiAgIHdpdGggcG9pbnRlZCBzdW1taXRzLCByaXNpbmcgZnJvbSB0aGUgc2VhZmxvb3IgICB0aGF0IGRvZXMgbm90IHJlYWNoIHRoZSBzdXJmYWNlIG9mIHRoZSBvY2Vhbi4gICBTZWFtb3VudHMgYXJlIHZvbGNhbmljIGluIG9yaWdpbi4gVGhlc2UgY2FuICAgYmUgMywwMDAtNCw1MDAgbSB0YWxsLiBUaGUgZW1wZXJvciBzZWFtb3VudCwgYW4gICBleHRlbnNpb24gb2YgdGhlIEhhd2FpaWFuIElzbGFuZHMgaW4gdGhlIFBhY2lmaWMgICBPY2VhbiwgaXMgYSBnb29kIGV4YW1wbGUuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogR3V5b3QgaXMgYSBmbGF0LXRvcHBlZCAgIHNlYW1vdW50LiBUaGV5IHNob3cgZXZpZGVuY2Ugb2YgZ3JhZHVhbCAgIHN1YnNpZGVuY2UgdGhyb3VnaCBzdGFnZXMgdG8gYmVjb21lIGZsYXQgdG9wcGVkICAgc3VibWVyZ2VkIG1vdW50YWlucy4gSXQgaXMgZXN0aW1hdGVkIHRoYXQgbW9yZSAgIHRoYW4gMTAsMDAwIHNlYW1vdW50cyBhbmQgZ3V5b3RzIGV4aXN0IGluICAgdGhlIFBhY2lmaWMgT2NlYW4gYWxvbmUuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogVGhlc2UgYXJlIGRlZXAgdmFsbGV5cywgICBzb21lIGNvbXBhcmFibGUgdG8gdGhlIEdyYW5kIENhbnlvbiBvZiB0aGUgICBDb2xvcmFkbyByaXZlci4gVGhleSBhcmUgc29tZXRpbWVzIGZvdW5kIGN1dHRpbmcgICBhY3Jvc3MgdGhlIGNvbnRpbmVudGFsIHNoZWx2ZXMgYW5kIHNsb3Blcywgb2Z0ZW4gICBleHRlbmRpbmcgZnJvbSB0aGUgbW91dGhzIG9mIGxhcmdlIHJpdmVycy4gICBUaGUgSHVkc29uIENhbnlvbiBpcyB0aGUgYmVzdC1rbm93biBzdWJtYXJpbmUgICBjYW55b24gaW4gdGhlIHdvcmxkLiAgICgtKVN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogIEF0b2xscyBhcmUgbG93IGlzbGFuZHMgICBmb3VuZCBpbiB0aGUgdHJvcGljYWwgb2NlYW5zIGNvbnNpc3Rpbmcgb2YgY29yYWwgICByZWVmcyBzdXJyb3VuZGluZyBhIGNlbnRyYWwgZGVwcmVzc2lvbi4gSXQgbWF5IGJlIGEgICBwYXJ0IG9mIHRoZSBzZWEgKGxhZ29vbiksIG9yIHNvbWV0aW1lcyBmb3JtICAgZW5jbG9zaW5nIGEgYm9keSBvZiBmcmVzaCwgYnJhY2tpc2gsIG9yIGhpZ2hseSBzYWxpbmUgICB3YXRlci4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only   ",
        "option2" : "2 and 4 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2, 3 and 4    "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements:  1. Continental shelves are the source of fossil fuels.  2. Coast of Chile and the West coast of Sumatra has a  very wide range of continental shelves.   3. About one-fourth of the world's petroleum and  natural gas is extracted from the continental shelves.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGNvbnRpbmVudGFsIHNoZWxmIGlzICAgdGhlIGV4dGVuZGVkIG1hcmdpbiBvZiBlYWNoIGNvbnRpbmVudCBvY2N1cGllZCAgIGJ5IHJlbGF0aXZlbHkgc2hhbGxvdyBzZWFzIGFuZCBndWxmcy4gVGhlICAgY29udGluZW50YWwgc2hlbHZlcyBhcmUgY292ZXJlZCB3aXRoIHZhcmlhYmxlICAgdGhpY2tuZXNzZXMgb2Ygc2VkaW1lbnRzIGJyb3VnaHQgZG93biBieSByaXZlcnMsICAgZ2xhY2llcnMsIHdpbmQsIGZyb20gdGhlIGxhbmQgYW5kIGRpc3RyaWJ1dGVkIGJ5ICAgd2F2ZXMgYW5kIGN1cnJlbnRzLiBNYXNzaXZlIHNlZGltZW50YXJ5ICAgZGVwb3NpdHMgcmVjZWl2ZWQgb3ZlciBhIGxvbmcgdGltZSBieSB0aGUgICBjb250aW5lbnRhbCBzaGVsdmVzLCBiZWNvbWUgdGhlIHNvdXJjZSBvZiBmb3NzaWwgICBmdWVscy4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSB3aWR0aCBvZiB0aGUgICBjb250aW5lbnRhbCBzaGVsdmVzIHZhcmllcyBmcm9tIG9uZSBvY2VhbiB0byAgIGFub3RoZXIuIFRoZSBhdmVyYWdlIHdpZHRoIG9mIGNvbnRpbmVudGFsIHNoZWx2ZXMgICBpcyBhYm91dCA4MCBrbS4gVGhlIHNoZWx2ZXMgYXJlIGFsbW9zdCBhYnNlbnQgb3IgICB2ZXJ5IG5hcnJvdyBhbG9uZyBzb21lIG9mIHRoZSBtYXJnaW5zIGxpa2UgdGhlICAgY29hc3RzIG9mIENoaWxlLCB0aGUgd2VzdCBjb2FzdCBvZiBTdW1hdHJhLCBldGMuIE9uICAgdGhlIGNvbnRyYXJ5LCB0aGUgU2liZXJpYW4gc2hlbGYgaW4gdGhlIEFyY3RpYyBPY2VhbiwgICB0aGUgbGFyZ2VzdCBpbiB0aGUgd29ybGQsIHN0cmV0Y2hlcyB0byAxLDUwMCBrbSBpbiAgIHdpZHRoLiBUaGUgZGVwdGggb2YgdGhlIHNoZWx2ZXMgYWxzbyB2YXJpZXMuIEl0IG1heSAgIGJlIGFzIHNoYWxsb3cgYXMgMzAgbSBpbiBzb21lIGFyZWFzIHdoaWxlIGluIHNvbWUgICBhcmVhcyBpdCBpcyBhcyBkZWVwIGFzIDYwMCBtLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEFib3V0IG9uZS1mb3VydGggb2YgdGhlICAgd29ybGQncyBwZXRyb2xldW0gYW5kIG5hdHVyYWwgZ2FzIGlzIGV4dHJhY3RlZCAgIGZyb20gdGhlIGNvbnRpbmVudGFsIHNoZWx2ZXMuIE1hcmluZSB3YXZlcyBhbmQgICBjdXJyZW50IGVyb2RlIHRoZSBjb250aW5lbnRhbCBtYXJnaW5zIHRodXMgICBmcm9tIGV4dGVuc2l2ZSBsYW5kZm9ybXMgd2hpY2ggcmVjZWl2ZSBkZXBvc2l0cyAgICAgIC4gICAgICAgICAgb2Ygc2VkaW1lbnRzIGJyb3VnaHQgZG93biBieSB0aGUgcml2ZXIgYW5kIHNlYSAgIHdhdmVzLiBDb250aW5lbnRhbCBzaGVsdmVzIGNvdmVyIGFib3V0IDcuNSUgb2YgICB0aGUgYXJlYSBvZiB0aGUgb2NlYW5zLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "3 only    "
      }
    },
    {
      "index" : 5,
      "question" : "With the reference to the Bottom Relief features  of the Pacific Ocean, Consider the following  statements:  1. The highest number of islands found in the Pacific  oceans are dissected as part of the mainland.   2. The northern part of the Pacific Ocean is the  deepest and the Atacama and Tonga trenches are  located in this part.   3. Most of the trenches are located far from the  islands.   Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIFBhY2lmaWMgT2NlYW4sICAgdGhlIGxhcmdlc3Qgb2NlYW4gb2YgdGhlIHdvcmxkIGhhdmluZyBvbmUtdGhpcmQgICBhcmVhIG9mIHRoZSBnbG9iZSwgZXh0ZW5kcyBmcm9tIGVhc3QgdG8gd2VzdCBmb3IgICAxNiwwMDAga20gZnJvbSB0aGUgZWFzdCBjb2FzdCBvZiBBc2lhIGluIHRoZSB3ZXN0ICAgdG8gdGhlIHdlc3QgY29hc3RzIG9mIEFtZXJpY2FzIGluIHRoZSBlYXN0IGFuZCBmb3IgICAxNCw4ODAga20gZnJvbSBub3J0aCB0byBzb3V0aCBiZXR3ZWVuIEJlcmluZyAgIFN0cmFpdCBpbiB0aGUgbm9ydGggdG8gQ2FwZSBBZHJlIChBbnRhcmN0aWNhKSBpbiB0aGUgICBzb3V0aC4gVGhlIG92ZXJhbGwgc2hhcGUgb2YgdGhlIG9jZWFuIGlzIHRyaWFuZ3VsYXIgICBpZiBpdHMgZXh0ZW50IGluIGJvdGggdGhlIGhlbWlzcGhlcmVzIGlzIGNvbnNpZGVyZWQgICBzZXBhcmF0ZWx5LiBBdmVyYWdlIGRlcHRoIG9mIHRoZSBvY2VhbiBpcyA0LDU3Mm0uICAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQm90aCB0aGUgY29hc3RzIChlYXN0IGFuZCAgIHdlc3QpIG9mIHRoZSBQYWNpZmljIGFyZSBwYXJhbGxlbGVkIGJ5IHRoZSBjaGFpbnMgb2YgICBmb2xkZWQgbW91bnRhaW5zIGFuZCB0aGVyZWZvcmUgdGhlIGRlc2NlbnQgZnJvbSAgIHRoZSBjb2FzdCB0byB0aGUgYWJ5c3NhbCBwbGFpbnMgaXMgdmVyeSAgIHN0ZWVwLiBOb3J0aGVybiBwYXJ0IG9mIHRoZSBvY2VhbiBpcyB0aGUgZGVlcGVzdCAgIHBhcnQuIFRoaXMgcmVnaW9uIGhhcyBtYW55IHRyZW5jaGVzIGFuZCBpc2xhbmRzICAgd2hpY2ggaGF2ZSBvcmlnaW5hdGVkIHRlY3RvbmljYWxseS4gVGhlIHNvdXRoIGVhc3QgICBwYXJ0IG9mIHRoZSBvY2VhbiBoYXMgZXh0ZW5zaXZlIGFuZCB3aWRlICAgc3VibWFyaW5lIHJpZGdlcyBhbmQgcGxhdGVhdXguIEF0YWNhbWEgYW5kICAgVG9uZ2EgdHJlbmNoZXMgd2l0aCBkZXB0aHMgb2YgODAwMCBhbmQgICA5MDAgcmVzcGVjdGl2ZWx5IGFyZSBsb2NhdGVkIGluIHRoaXMgcGFydC4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IE1vc3Qgb2YgdGhlIHRyZW5jaGVzICAgYXJlIGxvY2F0ZWQgYWxvbmcgdGhlIGlzbGFuZHMuIEluIHRoZSBtaWRkbGUgcGFydCBvZiAgIHRoZSBvY2Vhbiwgc2V2ZXJhbCBhYnlzc2FsIGhpbGxzLCBtb3VudGFpbnMgYW5kICAgZ3V5b3RzIGFyZSBmb3VuZC4gVGhlIHNvdXRoIHdlc3Rlcm4gcGFydCBvZiAgIHRoZSBQYWNpZmljIE9jZWFuIGNvbnNpc3RzIG9mIHZhcmlvdXMgaXNsYW5kcywgICBjb2FzdGFsIHNlYXMsIGNvbnRpbmVudGFsIHNoZWx2ZXMgYW5kIHRyZW5jaGVzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "1 and 2 only   ",
        "option4" : "1 and 3 only    "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following statements is/are  correct?  1. Shoals are formed by erosional activity and coasts  are formed by depositional activity.  2. Reefs are associated with organic depositions of  corals.   3. Coast is the bank of the ocean that consists of  unconsolidated material.  Select the correct answer using the code given below.  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBDb2FzdHMsIHNob2FscyBhbmQgUmlkZ2VkICAgUmVlZnMgYXJlIGZvcm1lZCBieSBlcm9zaW9uYWwsIGRlcG9zaXRpb25hbCBhbmQgICBvcmdhbmljIGFjdGl2aXRpZXMsIHJlc3BlY3RpdmVseS4gU2hvYWxzIGlzICAgYSBuYXR1cmFsbHkgc3VibWVyZ2VkIHJpZGdlLCBiYWsgb3IgYmFyIHRoYXQgICBjb25zaXN0cyBvZiwgb3IgaXMgY292ZXJlZCBieSBzYW5kIG9yIG90aGVyICAgdW5jb25zb2xpZGF0ZWQgbWF0ZXJpYWwgYW5kIHJpc2VzIGZyb20gdGhlIGJlZCBvZiAgIGEgYm9keSB0byBuZWFyIHRoZSBzdXJmYWNlLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFJlZWZzIGFyZSBhc3NvY2lhdGVkIHdpdGggICB0aGUgb3JnYW5pYyBkZXBvc2l0aW9ucy4gQ29yYWwgcmVlZnMgYXJlIHRoZSAgIGNoYXJhY3RlcmlzdGljIGZlYXR1cmUgb2YgdGhlIFBhY2lmaWMgT2NlYW4uICAgVGhlIGxhcmdlc3QgY29yYWwgcmVlZnMgYXJlIGRhbmdlcm91cyBmb3IgICBuYXZpZ2F0aW9uIGFzIHRoZXkgcmlzZSB1cCB0byBvciBvdmVyIHRoZSB3YXRlciAgIHN1cmZhY2UuICAgKC0pU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBDb2FzdHMgYXJlIGVtZXJnaW5nICAgbGFuZGZvcm1zIHdpdGggZmxhdCB0b3BzIGFuZCBhcmUgbG9jYXRlZCBhbG9uZyB0aGUgICBjb250aW5lbnRhbCBtYXJnaW5zLiBUaGVzZSBhcmUgbWFqb3IgZmlzaCBncm91bmQgICBlLmcuIEdyYW5kIEJhbmssIERvZ2dlciBCYW5rIGV0Yy4gU2hvYWxzIGlzIHRoZSAgIHNlcGFyYXRlZCBwYXJ0IG9mIHRoZSB1bmRlcndhdGVyIHVwbGl0ZWQgbGFuZC4gICBIZXJlLCB0aGUgd2F0ZXIgaXMgc2hhbGxvdyBhbmQgdGhlcmVmb3JlIHBvc2VzICAgZGlmZmljdWx0eSBpbiBuYXZpZ2F0aW9uLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only   ",
        "option2" : "2 only   ",
        "option3" : "2 and 3 only   ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 7,
      "question" : "With reference to the bottom Relief features of  the Atlantic Ocean, Consider the following  statements:   1. Cape Verde Island, Bermuda island is volcanic in  origin and St. Helena is coral in origin.   2. The highest of trenches found in the Atlantic  Ocean.   Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaG91Z2ggYSBtYWpvciBwYXJ0IG9mICAgdGhlIG1pZC1BdGxhbnRpYyByaWRnZSBpcyBzdWJtZXJnZWQgdW5kZXIgb2NlYW5pYyAgIHdhdGVyLCBhIGdyb3VwIG9mIHBlYWtzIGFuZCBTZWFtb3VudHMgcHJvamVjdGVkICAgd2VsbCBhYm92ZSB0aGUgd2F0ZXIgc3VyZmFjZSBhbmQgZm9ybSBpc2xhbmRzLiAgIFRoZSBQaWNvIElzbGFuZCBvZiBBem9yZXMgaXMgdGhlIGhpZ2hlc3QgcGVhay4gQ2FwZSAgIFZlcmRlIElzbGFuZHMsIEJlcm11ZGEgSXNsYW5kcyBhcmUgY29yYWwgaW4gICBvcmlnaW4gd2hlcmVhcyBBc2NlbnNpb24sIFN0IEhlbGVuYSwgVHJpc3RhbiBkYSAgIEN1bmhhIGFuZCBHb3VnaCBhcmUgdm9sY2FuaWMuICAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIHNoYXBlIG9mIHRoZSBBdGxhbnRpYyAgIE9jZWFuIHJlc2VtYmxlcyB0aGUgYWxwaGFiZXQgUy4gSXQgaXMgc3Vycm91bmRlZCAgIGJ5IGNvbnRpbmVudGFsIHNoZWx2ZXMgb2YgdmFyeWluZyB3aWR0aC4gICBUaGUgdHJlbmNoZXMgd2hpY2ggYXJlIHRoZSBjaGFyYWN0ZXJpc3RpYyBmZWF0dXJlcyAgIG9mIHRoZSBQYWNpZmljIE9jZWFuIGFyZSBhbG1vc3QgYWJzZW50IGluIHRoZSAgIEF0bGFudGljIE9jZWFuLiBSb21hbmNoZSwgU291dGggU2FuZHdpY2gsIE5hcmVzICAgRGVlcCwgTm9ydGggQ2FueW1lbiwgUHVlcnRvIFJpY28gRGVlLCBDb2x1bWJpYSAgIGRlZXAgZXRjIGFyZSBpbXBvcnRhbnQgZGVlcHMgaW4gdGhlIG9jZWFuLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only   ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to submarine Canyon, Consider  the following statements:  1. Submarine Canyon is generally found transverse to  the coasts and in front of the mouth.  2. The gradient of submarine Canyon is shallower  than the Continental Canyons.  3. Canyons found in the Indian Ocean are believed to  be formed during the Cenozoic and Neozoic era.  Which of the following statements given above is/are  correct?  . ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg=",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQSBzdWJtYXJpbmUgQ2FueW9uIGlzICAgYSBzdGVlcC1zaWRlZCB2YWxsZXkgY3V0IGludG8gdGhlIHNlYWJlZCBvZiB0aGUgICBjb250aW5lbnRhbCBzbG9wZSwgc29tZXRpbWVzIGV4dGVuZGluZyB3ZWxsIG9uICAgdGhlIGNvbnRpbmVudGFsIHNoZWxmLCBoYXZpbmcgbmVhcmx5IHZlcnRpY2FsIHdhbGxzLiAgIFRoZXNlIGNhbnlvbnMgYXJlIGdlbmVyYWxseSBmb3VuZCB0cmFuc3ZlcnNlIHRvICAgdGhlIGNvYXN0cyBhbmQgaW4gZnJvbnQgb2YgdGhlIG1vdXRocyBvZiBtYWpvciAgIHJpdmVycy4gVGhlc2UgY2FueW9ucyBhcmUgc2ltaWxhciB0byB0aGUgdmFsbGV5cyAgIGZvcm1lZCBieSBhIHlvdXRoZnVsIHJpdmVyLCBleGNlcHQgdGhhdCB0aGV5IGFyZSAgIGRlZXBlciB0aGFuIHRoZSBjb250aW5lbnRhbCB2YWxsZXkuICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBTdWJtYXJpbmUgY2FueW9ucyBhcmUgICBzaW1pbGFyIHRvIHRoZSBjb250aW5lbnRhbCBjYW55b24gYnV0IGR1ZSB0byB0aGVpciAgIGxvY2F0aW9uIGZvdW5kIHVuZGVyIHdhdGVyLCB0aGV5IGFyZSAgIGNhbGxlZCBzdWJtYXJpbmUgY2FueW9ucy4gVGhlIGdyYWRpZW50IG9mICAgc3VibWFyaW5lIENhbnlvbiBpcyBzdGVlcGVyIHRoYW4gdGhlIGNvbnRpbmVudGFsICAgQ2FueW9uLiBUaGUgc3VibWFyaW5lIGNhbnlvbnMgbG9jYXRlZCBpbiBmcm9udCBvZiAgIHRoZSBtb3V0aCBvZiB0aGUgcml2ZXJzIGFyZSBsb25nZXIgYnV0IHdpdGggZ2VudGxlICAgc2xvcGUgZS5nLiBDb25nbyBDYW55b24sIEh1ZHNvbiBDYW55b24gZXRjLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IENhbnlvbnMgYWxzbyBmb3VuZCBpbiAgIHRoZSBJbmRpYW4gT2NlYW4gYXQgdGhlIG1vdXRocyBvZiB0aGUgR2FuZ2EgYW5kICAgSW5kaWEuIFRoZXNlIHN1Ym1hcmluZSBjYW55b25zIGFyZSBiZWxpZXZlZCB0byBiZSAgIGZvcm1lZCBkdXJpbmcgdGhlIENlbm96b2ljIGFuZCBOZW96b2ljICAgZXJhICh0ZXJ0aWFyeSBhbmQgUXVhdGVybmFyeSBwZXJpb2QpLiBUaGVzZSBhcmUgICBiZWxpZXZlZCB0byBiZSBmb3JtZWQgZHVlIHRvIHN1YnNpZGVuY2UgYW5kICAgZHJvd2luZyBvZiByaXZlciB2YWxsZXlzIG9yIGJ5IHRoZSBlbWVyZ2VuY2UgYW5kICAgc3VibWVyZ2VuY2Ugb2YgZXJvZGVkIHZhbGxleXMgb2YgdGhlIFBsZWlzdG9jZW5lICAgZ2xhY2lhdGlvbiBwZXJpb2QuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2 and 3  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1 and 3 only   "
      }
    },
    {
      "index" : 9,
      "question" : "Consider the following statements:   1. The continental shelf has a rich amount of plankton  because of shallowness.  2. The high depth and steep slope keep increasing the  height of the tide.  Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk=",
      "description" : "ICAgIC4gICAgICAgICAgRXhwOiAgICAoLSlUaGUgQ29udGluZW50YWwgc2hlbHZlcyBhcmUgb2YgZ3JlYXQgZ2VvZ3JhcGhpY2FsICAgc2lnbmlmaWNhbmNlIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbnMuICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2hhbGxvd25lc3Mgb2YgY29udGluZW50YWwgICBzaGVsdmVzIGVuYWJsZXMgc3VubGlnaHQgdG8gcGVuZXRyYXRlIHRocm91Z2ggdGhlICAgd2F0ZXIsIHdoaWNoIGVuY291cmFnZXMgdGhlIGdyb3d0aCBvZiBtaW51dGUgICBwbGFudHMgYW5kIG90aGVyIG1pY3Jvc2NvcGljIG9yZ2FuaXNtcy4gVGhleSBhcmUgICB0aHVzIHJpY2ggaW4gcGxhbmt0b24gb24gd2hpY2ggbWlsbGlvbnMgb2Ygc3VyZmFjZSAgIGFuZCBib3R0b20gZmVlZGluZyBmaXNoZXMgdGhyaXZlLiAgICAoLSlUaGUgY29udGluZW50YWwgc2hlbHZlcyBhcmUgdGhlcmVmb3JlIHRoZSByaWNoZXN0ICAgZmlzaGluZyBncm91bmRzIGluIHRoZSB3b3JsZCwgZS5nLiB0aGUgR3JhbmQgQmFua3MgICBvZmYgTmV3Zm91bmRsYW5kLCB0aGUgTm9ydGggc2VhIGFuZCB0aGUgU3VuZGEgICBzaGVsZi4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZWlyIGxpbWl0ZWQgZGVwdGggYW5kICAgZ2VudGxlIHNsb3BlIGtlZXAgdGlkZXMuIFRoaXMgc29tZXRpbWVzIGhpbmRlcnMgICBzaGlwcGluZyBhbmQgb3RoZXIgbWFyaW5lIGFjdGl2aXRpZXMgc2luY2UgaXQgY2FuICAgb25seSBlbnRlciBhbmQgbGVhdmUgcG9ydCBvbiB0aGUgdGlkZS4gTW9zdCBvZiB0aGUgICB3b3JsZCdzIGdyZWF0ZXN0IHNlYXBvcnRzIGluY2x1ZGluZyBTb3V0aGFtcHRvbiwgICBMb25kb24sIEh1bWJ1cmcsIFJvdHRlcmRhbSwgSG9uZ2tvbmcgYW5kICAgU2luZ2Fwb3JlIGFyZSBsb2NhdGVkIG9uIHRoZSBDb250aW5lbnRhbCBTaGVsdmVzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements regarding Jet  Streams:  1. They are formed near the boundaries of air masses  with different temperatures and humidity.  2. The rotation of the Earth and its uneven heating by  the sun also contribute to the formation of high- altitude jet streams.  3. Jet streams blow through a layer of the  atmosphere called the troposphere.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDEw",
      "description" : "IEV4cDogICAgQWJvdXQgSmV0IHN0cmVhbXM6ICAgKC0pSmV0IHN0cmVhbXMgYXJlIGdlb3N0cm9waGljIHdpbmRzIHRoYXQgZm9ybSBuZWFyICAgdGhlIGJvdW5kYXJpZXMgb2YgYWlyIG1hc3NlcyB3aXRoIGRpZmZlcmVudCAgIHRlbXBlcmF0dXJlcyBhbmQgaHVtaWRpdHkuICAgIG8gVGhlIGZvcm1hdGlvbiBvZiBoaWdoLWFsdGl0dWRlIGpldCBzdHJlYW1zIGlzIGR1ZSAgIHRvIHRoZSByb3RhdGlvbiBvZiB0aGUgRWFydGggYW5kIGl0cyB1bmV2ZW4gICBoZWF0aW5nIGJ5IHRoZSBzdW4uICAgKC0pVGhlc2Ugd2luZHMgYXJlIHN0cm9uZyBhbmQgYmxvdyBmYXN0IGluIHRoZSB1cHBlciAgIGF0bW9zcGhlcmUgYW5kIGNhbiBibG93IDQ4MCBrcGggKDI5OCBtcGgpLiBKZXQgICBzdHJlYW1zIGJsb3cgYXQgYWx0aXR1ZGVzIG9mIDggdG8gMTQga2lsb21ldGVycyAoNSAgIHRvIDkgbWlsZXMpIGFib3ZlIEVhcnRoJ3Mgc3VyZmFjZSBpLmUgdGhyb3VnaCBhIGxheWVyICAgb2YgdGhlIGF0bW9zcGhlcmUgY2FsbGVkIHRoZSBzdHJhdG9zcGhlcmUuICAgKC0pQ29tbWVyY2lhbCBhaXJsaW5lIHBpbG90cyBsaWtlIHRvIGZseSBpbiB0aGlzIGxheWVyICAgYmVjYXVzZSB0aGVyZSBpcyBsaXR0bGUgdHVyYnVsZW5jZSBpbiB0aGUgICBzdHJhdG9zcGhlcmUuIFRoZXJlZm9yZSwgcmlkaW5nIHdpdGggamV0IHN0cmVhbXMgICBzYXZlcyB0aW1lIGFuZCBmdWVsLiAgICAoLSlJbiB0aGUgY29udGV4dCBvZiBhIGhlYWR3aW5kIG9yIHRhaWx3aW5kIGFib3V0ICAgYWlycGxhbmVzLCB0aGVzZSBhcmUgamV0IHN0cmVhbXMuICAgIG8gVGFpbHdpbmRzIGJsb3cgYmVoaW5kIHRoZSBwbGFuZSwgcHVzaGluZyBpdCAgIGZvcndhcmQuIFRoZXkgY2FuIGhlbHAgdXMgZ2V0IHRvIG91ciBkZXN0aW5hdGlvbiAgIG1vcmUgcXVpY2tseS4gICAgbyBIZWFkd2luZHMgYmxvdyBpbiBmcm9udCBvZiB0aGUgcGxhbmUsIHB1c2hpbmcgICBpdCBiYWNrLiBTdHJvbmcgaGVhZHdpbmRzIGNhbiBjYXVzZSBmbGlnaHQgICBkZWxheXMuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to Typhoons, Consider the  following statements:  1. Typhoons are tropical storms and their  formation is identical to hurricanes.  2. Typhoons form as equatorial winds and blow  westward before turning north and merging  with westerlies around the mid-latitudes.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDEx",
      "description" : "IEV4cDogICAgQWJvdXQgVHlwaG9vbnM6ICAgKC0pVHJvcGljYWwgc3Rvcm1zIHRoYXQgZGV2ZWxvcCBvdmVyIHRoZSBub3J0aHdlc3QgICBQYWNpZmljIE9jZWFuIGFyZSBrbm93biBhcyBUeXBob29ucy4gVGhlaXIgICBmb3JtYXRpb24gaXMgaWRlbnRpY2FsIHRvIGh1cnJpY2FuZXMgYW5kIGN5Y2xvbmVzLiAgICAoLSlUeXBob29ucyBmb3JtIGFzIGVxdWF0b3JpYWwgd2luZHMgYW5kIGJsb3cgICB3ZXN0d2FyZCBiZWZvcmUgdHVybmluZyBub3J0aCBhbmQgbWVyZ2luZyB3aXRoICAgd2VzdGVybGllcyBhcm91bmQgdGhlIG1pZC1sYXRpdHVkZXMuICAgbyBBIHdpZGUgYXJlYSBvZiB0aGUgZWFzdGVybiBQYWNpZmljIGlzIGFmZmVjdGVkIGJ5ICAgdGhlIFR5cGhvb25zLiAgIG8gTW9zdCBhZmZlY3RlZCBhcmVhcyBhcmUgdGhlIGlzbGFuZHMgb2YgdGhlICAgUGhpbGlwcGluZXMsIENoaW5hLCBWaWV0bmFtLCBhbmQgSmFwYW4uICAgbyBIb3dldmVyLCB0eXBob29ucyBoYXZlIGFsc28gYmVlbiByZWNvcmRlZCBhcyAgIGZhciBhcyB0aGUgVS5TLiBzdGF0ZXMgb2YgSGF3YWlpIGFuZCBldmVuIEFsYXNrYS4gICAoLSlFeHRyZW1lbHkgaGVhdnkgcmFpbmZhbGwgaXMgYXNzb2NpYXRlZCB3aXRoICAgVHlwaG9vbnMuICAgKC0pVGhlIHdldHRlc3QgdHlwaG9vbiBldmVyIHJlY29yZGVkIHdhcyBUeXBob29uICAgTW9yYWtvdCBpbiAyMDA5LiAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements regarding  Trade Winds:  1. Trade winds that form over land are warmer and  drier.  2. Trade winds are the powerful prevailing winds that  blow from the east across the tropics.   3. Most tropical storms, including hurricanes,  cyclones, and typhoons, develop as trade winds.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDEy",
      "description" : "IEV4cDogICAgQWJvdXQgRWFzdGVybGllczogICAoLSlUaGUgcG93ZXJmdWwgcHJldmFpbGluZyB3aW5kcyB0aGF0IGJsb3cgZnJvbSB0aGUgICBlYXN0IGFjcm9zcyB0aGUgdHJvcGljcyBhcmUga25vd24gYXMgVHJhZGUgICB3aW5kcy4gVHJhZGUgd2luZHMgYXJlIGdlbmVyYWxseSB2ZXJ5ICAgcHJlZGljdGFibGUuICAgIG8gSW4gdGhlIGhpc3Rvcnkgb2YgZXhwbG9yYXRpb24sIGNvbW11bmljYXRpb24sICAgYW5kIHRyYWRlIHRoZXkgaGF2ZSBiZWVuIGluc3RydW1lbnRhbC4gU2hpcHMgICByZWxpZWQgb24gdHJhZGUgd2luZHMgdG8gZXN0YWJsaXNoIHF1aWNrLCAgIHJlbGlhYmxlIHJvdXRlcyBhY3Jvc3MgdGhlIHZhc3QgQXRsYW50aWMgYW5kLCAgIGxhdGVyLCBQYWNpZmljIE9jZWFucy4gRXZlbiBub3dhZGF5cywgc2hpcHBpbmcgICBkZXBlbmRzIG9uIHRyYWRlIHdpbmRzIGFuZCB0aGUgb2NlYW4gY3VycmVudHMgICB0aGV5IGRyaXZlLiAgICAgIC4gICAgICAgICAgKC0pIFRyYWRlIHdpbmRzIHRoYXQgZm9ybSBvdmVyIGxhbmQgYW5kIGFyZSB3YXJtZXIgICBhbmQgZHJpZXIgdGhhbiB0aG9zZSB0aGF0IGZvcm0gb3ZlciB0aGUgb2NlYW4gYXJlICAga25vd24gYXMgbWFyaXRpbWUgdHJhZGUgd2luZHMuIFRoZSByZWxhdGlvbnNoaXAgICBiZXR3ZWVuIGNvbnRpbmVudGFsIGFuZCBtYXJpdGltZSB0cmFkZSB3aW5kcyBjYW4gICBiZSB2aW9sZW50LiAgICgtKU1vc3QgdHJvcGljYWwgc3Rvcm1zLCBpbmNsdWRpbmcgaHVycmljYW5lcywgICBjeWNsb25lcywgYW5kIHR5cGhvb25zLCBkZXZlbG9wIGFzIHRyYWRlICAgd2luZHMuIFRoZXNlIHN0b3JtcyBkZXZlbG9wIG92ZXIgdGhlIG9jZWFucyAgIGJlY2F1c2Ugb2YgdGhlIGRpZmZlcmVuY2VzIGluIGFpciBwcmVzc3VyZS4gICBvIEFzIHRoZSBkZW5zZSwgbW9pc3Qgd2luZHMgb2YgdGhlIHN0b3JtICAgZW5jb3VudGVyIHRoZSBkcmllciB3aW5kcyBvZiB0aGUgY29hc3QsIHRoZSAgIHN0b3JtIGNhbiBpbmNyZWFzZSBpbiBpbnRlbnNpdHkuICAgKC0pU3Ryb25nIHRyYWRlIHdpbmRzIGFyZSBhc3NvY2lhdGVkIHdpdGggYSBsYWNrIG9mICAgcHJlY2lwaXRhdGlvbiwgd2hlcmVhcyB3ZWFrIHRyYWRlICAgd2luZHMgY2FycnkgcmFpbmZhbGwgZmFyIGlubGFuZC4gICAgbyBUaGUgbW9zdCBmYW1vdXMgcmFpbiBwYXR0ZXJuIGluIHRoZSB3b3JsZCwgdGhlICAgU291dGhlYXN0IEFzaWFuIG1vbnNvb24sIGlzIGEgc2Vhc29uYWwsICAgbW9pc3R1cmUtbGFkZW4gdHJhZGUgd2luZC4gICAoLSlBcGFydCBmcm9tIHNhbmQgYW5kIGR1c3QgcGFydGljbGVzIHRyYWRlIHdpbmRzICAgYWxzbyBjYXJyeSBzaGlwcyBhbmQgcmFpbmZhbGwgZm9yIHRob3VzYW5kcyBvZiAgIGtpbG9tZXRlcnMuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 13,
      "question" : "Which of the following forms near the  boundaries of air masses with different temperatures  and humidity?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDEz",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgcG93ZXJmdWwgcHJldmFpbGluZyAgIHdpbmRzIHRoYXQgYmxvdyBmcm9tIHRoZSBlYXN0IGFjcm9zcyB0aGUgdHJvcGljcyAgIGFyZSBrbm93biBhcyBUcmFkZSB3aW5kcy4gVHJhZGUgd2luZHMgYXJlICAgZ2VuZXJhbGx5IHZlcnkgcHJlZGljdGFibGUuICAgIG8gVHJhZGUgd2luZHMgdGhhdCBmb3JtIG92ZXIgbGFuZCBhcmUgd2FybWVyICAgYW5kIGRyaWVyIHRoYW4gdGhvc2UgdGhhdCBmb3JtIG92ZXIgdGhlIG9jZWFuICAgYXJlIGtub3duIGFzIG1hcml0aW1lIHRyYWRlIHdpbmRzLiAgICgtKVRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBjb250aW5lbnRhbCBhbmQgICBtYXJpdGltZSB0cmFkZSB3aW5kcyBjYW4gYmUgdmlvbGVudC4gICAoLSlNb3N0IHRyb3BpY2FsIHN0b3JtcywgaW5jbHVkaW5nIGh1cnJpY2FuZXMsICAgY3ljbG9uZXMsIGFuZCB0eXBob29ucywgZGV2ZWxvcCBhcyB0cmFkZSAgIHdpbmRzLiBUaGVzZSBzdG9ybXMgZGV2ZWxvcCBvdmVyIHRoZSAgIG9jZWFucyBiZWNhdXNlIG9mIHRoZSBkaWZmZXJlbmNlcyBpbiBhaXIgcHJlc3N1cmUuICAgbyBTdHJvbmcgdHJhZGUgd2luZHMgYXJlIGFzc29jaWF0ZWQgd2l0aCBhIGxhY2sgb2YgICBwcmVjaXBpdGF0aW9uLCB3aGVyZWFzIHdlYWsgdHJhZGUgd2luZHMgY2FycnkgICByYWluZmFsbCBmYXIgaW5sYW5kLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFByZXZhaWxpbmcgd2luZHMgdGhhdCAgIGJsb3cgZnJvbSB0aGUgd2VzdCBhdCBtaWRsYXRpdHVkZXMgYXJlIGtub3duIGFzICAgd2VzdGVybGllcy4gICAoLSlUaGV5IGFyZSBmZWQgYnkgcG9sYXIgZWFzdGVybGllcyBhbmQgd2luZHMgZnJvbSAgIHRoZSBoaWdoLXByZXNzdXJlIGhvcnNlIGxhdGl0dWRlcywgd2hpY2ggZW5jbG9zZWQgICB0aGVtIG9uIGVpdGhlciBzaWRlLiAgICBvIFdoZW4gdGhlIHByZXNzdXJlIG92ZXIgdGhlIHBvbGUgaXMgICBsb3csIFdlc3RlcmxpZXMgYXJlIHN0cm9uZ2VzdCBpbiB0aGUgICB3aW50ZXIgYW5kIFdlc3RlcmxpZXMgYXJlIHdlYWtlc3QgaW4gICBzdW1tZXIgd2hlbiB0aGUgcG9sYXIgaGlnaCBjcmVhdGVzIHN0cm9uZ2VyICAgcG9sYXIgZWFzdGVybGllcy4gICAoLSlBIHdpbmQgem9uZSBiZXR3ZWVuIDQwLSBhbmQgNTAtZGVncmVlcyBsYXRpdHVkZSAgIGluIHRoZSBTb3V0aGVybiBIZW1pc3BoZXJlIHdoZXJlIHRoZSBzdHJvbmdlc3QgICBXZXN0ZXJsaWVzIGZsb3cuIFRocm91Z2hvdXQgdGhlIFJvYXJpbmcgICBGb3J0aWVzLCB0aGVyZSBhcmUgZmV3IGxhbmRtYXNzZXMgdG8gc2xvdyB3aW5kcy4gICAoLSlTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBKZXQgc3RyZWFtcyBhcmUgICBnZW9zdHJvcGhpYyB3aW5kcyB0aGF0IGZvcm0gbmVhciB0aGUgYm91bmRhcmllcyAgIG9mIGFpciBtYXNzZXMgd2l0aCBkaWZmZXJlbnQgdGVtcGVyYXR1cmVzIGFuZCAgIGh1bWlkaXR5LiAgICAoLSlUaGUgZm9ybWF0aW9uIG9mIGhpZ2gtYWx0aXR1ZGUgamV0IHN0cmVhbXMgYXJlIGR1ZSAgIHRvIHRoZSByb3RhdGlvbiBvZiB0aGUgRWFydGggYW5kIGl0cyB1bmV2ZW4gaGVhdGluZyAgIGJ5IHRoZSBzdW4uICAgbyBUaGVzZSB3aW5kcyBhcmUgc3Ryb25nIGFuZCBibG93IGZhc3QgaW4gdGhlICAgdXBwZXIgYXRtb3NwaGVyZSBhbmQgY2FuIGJsb3cgNDgwIGtwaCAoMjk4ICAgbXBoKS4gSmV0IHN0cmVhbXMgYmxvdyBhdCBhbHRpdHVkZXMgb2YgOCB0byAxNCAgIGtpbG9tZXRlcnMgKDUgdG8gOSBtaWxlcykgYWJvdmUgRWFydGgncyBzdXJmYWNlICAgaS5lIHRocm91Z2ggYSBsYXllciBvZiB0aGUgYXRtb3NwaGVyZSBjYWxsZWQgdGhlICAgc3RyYXRvc3BoZXJlLiAgICgtKVN0YXRlbWVudCA0IGlzIGluY29ycmVjdDogUG9sYXIgZWFzdGVybGllcyBhcmUgZHJ5LCAgIGNvbGQgcHJldmFpbGluZyB3aW5kcyB0aGF0IGJsb3cgZnJvbSB0aGUgZWFzdC4gICAgbyBUaGV5IGVtYW5hdGUgZnJvbSB0aGUgcG9sYXIgaGlnaHMsIGFyZWFzIG9mICAgaGlnaCBwcmVzc3VyZSBhcm91bmQgdGhlIE5vcnRoIGFuZCBTb3V0aCAgIFBvbGVzLiBQb2xhciBlYXN0ZXJsaWVzIGZsb3cgdG8gbG93LXByZXNzdXJlICAgYXJlYXMgaW4gc3VicG9sYXIgcmVnaW9ucy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Trade winds  ",
        "option2" : "Westerlies  ",
        "option3" : "Jet streams  ",
        "option4" : "Polar Easterlies   "
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following is/are Hot winds?  1. Sirocco  2. The Santa Ana  3. Foehn  4. Mistral  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE0",
      "description" : "IEV4cDogICAgKC0pQWJvdXQgU2lyb2NjbzogQSBob3QsIGRyeSBzb3V0aGVybHkgICB3aW5kIHdoaWNoIGJsb3dzIGZyb20gdGhlIFNhaGFyYSBpbiBub3J0aGVybiAgIEFmcmljYSBpbnRvIHRoZSBzb3V0aGVybiBNZWRpdGVycmFuZWFuLiAgICBvIEl0IHBpY2tzIHVwIG1vaXN0dXJlIGFzIGl0IGNyb3NzZXMgdGhlICAgTWVkaXRlcnJhbmVhbiBhbmQgY2FuIHJlYWNoIFNwYWluLCBGcmFuY2UsICAgSXRhbHkgYW5kIEdyZWVjZSBicmluZ2luZyBTYWhhcmFuIGR1c3QgYW5kIGhvdCwgICB3aW5keSwgZGFtcCB3ZWF0aGVyLCBvZnRlbiB3aXRoIGZvZyBvciBsb3cgICBzdHJhdHVzIGNsb3VkICAgKC0pQWJvdXQgU2FudGEgQW5hOiBBIGhvdCwgZHJ5LCBzdHJvbmcsIGJsdXN0ZXJ5LCAgIGZvaG4tdHlwZSB3aW5kIHdoaWNoIGJsb3dzIGZyb20gdGhlIG5vcnRoLWVhc3QgICBvciBlYXN0IG92ZXIgc291dGhlcm4gQ2FsaWZvcm5pYSBhbmQgY2FycmllcyB3aXRoIGl0ICAgbGFyZ2UgcXVhbnRpdGllcyBvZiBkdXN0LiAgICBvIEl0IGlzIG1vc3QgZnJlcXVlbnQgaW4gd2ludGVyIGJ1dCBtYXkgYWxzbyBvY2N1ciAgIGluIHNwcmluZyBvciBhdXR1bW4uICAgICgtKUFib3V0IEZvZWhuOiBUaGUgRm9laG4gaXMgYSB3YXJtLCBkcnksIGd1c3R5ICAgd2luZCB3aGljaCBvY2N1cnMgb3ZlciB0aGUgbG93ZXIgc2xvcGVzIG9uIHRoZSAgIGxlZSBzaWRlICh0aGUgc2lkZSB3aGljaCBpcyBub3QgZGlyZWN0bHkgZXhwb3NlZCB0byAgIHdpbmQgYW5kIHdlYXRoZXIpIG9mIGEgbW91bnRhaW4gYmFycmllci4gSXQgaXMgYSAgIHJlc3VsdCBvZiBmb3JjaW5nIHN0YWJsZSBhaXIgb3ZlciBhIG1vdW50YWluIGJhcnJpZXIuICAgIG8gVGhlIG9uc2V0IG9mIGEgRm9laG4gaXMgZ2VuZXJhbGx5IHN1ZGRlbi4gICAoLSlGb2VobiB3aW5kcyBvY2N1ciBxdWl0ZSBvZnRlbiBpbiB0aGUgQWxwcyAod2hlcmUgICB0aGUgbmFtZSBGb2VobiBvcmlnaW5hdGVkKSBhbmQgaW4gdGhlIFJvY2tpZXMgICAod2hlcmUgdGhlIG5hbWUgY2hpbm9vayBpcyB1c2VkKS4gICAgKC0pQWJvdXQgTWlzdHJhbDogVGhlIG1pc3RyYWwgaXMgYWxzbyBhIHN0cm9uZyBjb2xkIGFuZCAgIG9mdGVuIHZpb2xlbnQgd2luZC4gSXQgYmxvd3MgZnJvbSB0aGUgbm9ydGggb3IgICBub3J0aC13ZXN0IGRvd24gdGhlIFJoaW5lIFZhbGxleSBvZiBzb3V0aGVybiAgIEZyYW5jZSBhbmQgYWNyb3NzIHRoZSBSaG9uZSBEZWx0YSB0byB0aGUgR3VsZiBvZiAgIExpb24gYW5kIHNvbWV0aW1lcyBiZXlvbmQuICAgICAgIC4gICAgICAgICAgbyBUaG91Z2ggc3Ryb25nZXN0IGFuZCBtb3N0IGZyZXF1ZW50IGluIHdpbnRlciwgICBpdCBtYXkgYmxvdyBhdCBhbnkgdGltZSBvZiB5ZWFyIGFuZCBkZXZlbG9wICAgd2hlbiBzdGFibGUgYWlyIGlzIGZvcmNlZCB0aHJvdWdoIHRoZSBSaGluZSAgIFZhbGxleS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1, 2 and 4 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 15,
      "question" : "Consider the following statements regarding  Anabatic Winds:  1. Anabatic wind is caused by thermal/heat  processes.  2. Anabatic (upslope) winds occur over slopes which  are heated by the sun.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE1",
      "description" : "IEV4cDogICAgQWJvdXQgQW5hYmF0aWMgd2luZHM6ICAgKC0pVGhlIHdpbmRzIGNhdXNlZCBieSB0aGVybWFsIChoZWF0KSBwcm9jZXNzZXMgYXJlICAga25vd24gYXMgQW5hYmF0aWMgd2luZHMuICAgKC0pIEFuYWJhdGljICh1cHNsb3BlKSB3aW5kcyB0aGF0IG9jY3VyIG92ZXIgc2xvcGVzICAgd2hpY2ggYXJlIGhlYXRlZCBieSB0aGUgc3VuLiAgICAoLSlBaXIgd2hpY2ggaXMgaW4gY29udGFjdCB3aXRoIHNsb3BlcyB0aGF0IGFyZSB3YXJtZWQgICBleHBhbmRzIHVwd2FyZCBhbmQgY29vbCBhbmQgc2lua3Mgb3ZlciAgIG5laWdoYm91cmluZyB2YWxsZXlzLiAgICgtKSBBbmFiYXRpYyB3aW5kcyBhcmUgdXN1YWxseSBzbG93LCBhdCBvbmx5IDEtMm0vcyAgIGFuZCBhcmUgcmFyZWx5IGltcG9ydGFudCBleGNlcHQgbmVhciBjb2FzdHMgd2hlcmUgICB0aGV5IGNhbiBpbmNyZWFzZSB0aGUgc3RyZW5ndGggb2Ygc2VhIGJyZWV6ZXMuICAgIEZpZzogU2hvd2luZyBBbmFiYXRpYyBXaW5kcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to Katabatic winds, Consider the  following statements:  1. Katabatic winds are those which occur over slopes  which are cooled.  2. Katabatic winds are nocturnal phenomena in most  parts of the world, especially when there is little  cloud and due to lack of heating by the sun.  3. Katabatic winds may lead to the formation of frost,  mist and fog in valleys.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE2",
      "description" : "IEV4cDogICAgQWJvdXQgS2F0YWJhdGljIHdpbmRzOiAgICgtKUthdGFiYXRpYyB3aW5kcywgYWxzbyBrbm93biBhcyBkb3duc2xvcGUgd2luZHMsICAgb2NjdXIgb3ZlciBzbG9wZXMgd2hpY2ggYXJlIGNvb2xlZC4gT2NjdXJyZW5jZSBvZiAgIEthdGFiYXRpYyB3aW5kcyB0YWtlcyBwbGFjZSB3aGVuIGFpciBpbiBjb250YWN0ICAgd2l0aCBzbG9waW5nIGdyb3VuZCBpcyBjb2xkZXIgdGhhbiBhaXIgYXQgdGhlIHNhbWUgICBsZXZlbCBhd2F5IGZyb20gdGhlIGhpbGxzaWRlIG92ZXIgdGhlIHZhbGxleSAoc2VlICAgZGlhZ3JhbSkuICAgIG8gSW4gbW9zdCBwYXJ0cyBvZiB0aGUgd29ybGQsIEthdGFiYXRpYyB3aW5kcyBhcmUgICBub2N0dXJuYWwgcGhlbm9tZW5hIGluIG1vc3QgcGFydHMgb2YgdGhlIHdvcmxkICAgKGkuZS4gdGhleSB0ZW5kIHRvIGhhcHBlbiBhdCBuaWdodCkgYXMgdGhlcmUgaXMgICBzdXJmYWNlIGNvb2xpbmcsIGVzcGVjaWFsbHkgd2hlbiB0aGVyZSBpcyBsaXR0bGUgICBjbG91ZCBhbmQgZHVlIHRvIGxhY2sgb2YgaGVhdGluZyBieSB0aGUgc3VuLiAgICgtKUthdGFiYXRpYyB3aW5kIHNwZWVkcyBkbyBub3QgdHlwaWNhbGx5IG5vdCAgIGV4Y2VlZCAzIG9yIDQgbS9zLiAgICBvIEhvd2V2ZXIsIEthdGFiYXRpYyB3aW5kcyBjYW4gb2NjdXIgYXQgYW55IHRpbWUgICBvZiBkYXkgb3IgbmlnaHQgd2hlbiB0aGUgZ3JvdW5kIGlzIGNvdmVyZWQgd2l0aCAgIHNub3cgb3IgaWNlLCB3aXRoIHNwZWVkcyBvZnRlbiByZWFjaGluZyAxMCBtL3MsICAgb3IgZXZlbiBtb3JlIGlmIGZ1bm5lbGluZyB0aHJvdWdoIG5hcnJvdyB2YWxsZXlzICAgb2NjdXJzLiAgICgtKUthdGFiYXRpYyB3aW5kcyBtYXkgbGVhZCB0byB0aGUgZm9ybWF0aW9uIG9mICAgZnJvc3QsIG1pc3QgYW5kIGZvZyBpbiB2YWxsZXlzLiAgICBGaWc6IFNob3dpbmcgS2F0YWJhdGljIFdpbmRzICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "1 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3       .         "
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following are fed by polar  easterlies and winds from the high-pressure horse  latitudes?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE3",
      "description" : "IEV4cDogICAgIEFib3V0IFdlc3RlcmxpZXM6ICAgKC0pUHJldmFpbGluZyB3aW5kcyB0aGF0IGJsb3cgZnJvbSB0aGUgICB3ZXN0IGF0IG1pZGxhdGl0dWRlcyBhcmUga25vd24gYXMgd2VzdGVybGllcy4gICAoLSlUaGV5IGFyZSBmZWQgYnkgcG9sYXIgZWFzdGVybGllcyBhbmQgd2luZHMgZnJvbSAgIHRoZSBoaWdoLXByZXNzdXJlIGhvcnNlIGxhdGl0dWRlcywgd2hpY2ggZW5jbG9zZWQgICB0aGVtIG9uIGVpdGhlciBzaWRlLiAgICBvIFdoZW4gdGhlIHByZXNzdXJlIG92ZXIgdGhlIHBvbGUgaXMgbG93LCAgIFdlc3RlcmxpZXMgYXJlIHN0cm9uZ2VzdCBpbiB0aGUgICB3aW50ZXIgYW5kIFdlc3RlcmxpZXMgYXJlIHdlYWtlc3QgaW4gc3VtbWVyICAgd2hlbiB0aGUgcG9sYXIgaGlnaCBjcmVhdGVzIHN0cm9uZ2VyIHBvbGFyICAgZWFzdGVybGllcy4gICAoLSlBIHdpbmQgem9uZSBiZXR3ZWVuIDQwLSBhbmQgNTAtZGVncmVlcyAgIGxhdGl0dWRlIGluIHRoZSBTb3V0aGVybiBIZW1pc3BoZXJlIHdoZXJlIHRoZSAgIHN0cm9uZ2VzdCBXZXN0ZXJsaWVzIGZsb3cuIFRocm91Z2hvdXQgdGhlIFJvYXJpbmcgICBGb3J0aWVzLCB0aGVyZSBhcmUgZmV3IGxhbmRtYXNzZXMgdG8gc2xvdyB3aW5kcy4gICAgbyBUaGUgb25seSBsYXJnZSBsYW5kbWFzc2VzIHRvIHBlbmV0cmF0ZSB0aGUgICBSb2FyaW5nIEZvcnRpZXMgYXJlIHRoZSB0aXAgb2YgU291dGggQW1lcmljYSBhbmQgICBBdXN0cmFsaWEsIGFzIHdlbGwgYXMgdGhlIGlzbGFuZHMgb2YgTmV3IFplYWxhbmQgICBvIER1cmluZyB0aGUgQWdlIG9mIEV4cGxvcmF0aW9uLCB0aGUgd2VzdGVybGllcyBvZiAgIHRoZSBSb2FyaW5nIEZvcnRpZXMgd2VyZSB2ZXJ5IGltcG9ydGFudCB0byAgIHNhaWxvcnMgd2hlbiBleHBsb3JlcnMgYW5kIHRyYWRlcnMgZnJvbSBFdXJvcGUgICBhbmQgd2VzdGVybiBBc2lhIHVzZWQgdGhlIHN0cm9uZyB3aW5kcyB0byByZWFjaCAgIHRoZSBzcGljZSBtYXJrZXRzIG9mIFNvdXRoZWFzdCBBc2lhIGFuZCAgIEF1c3RyYWxpYS4gICAoLSlXZXN0ZXJsaWVzIGhhdmUgYW4gZW5vcm1vdXMgaW1wYWN0IG9uIG9jZWFuICAgY3VycmVudHMsIGVzcGVjaWFsbHkgaW4gdGhlIFNvdXRoZXJuICAgICAgLiAgICAgICAgICBIZW1pc3BoZXJlLiBUaGUgcG93ZXJmdWwgQW50YXJjdGljIENpcmN1bXBvbGFyICAgQ3VycmVudCAoQUNDKSBpcyBkcml2ZW4gYnkgdGhlIHdlc3RlcmxpZXMsIHdoaWNoICAgcnVzaGVzIGFyb3VuZCB0aGUgY29udGluZW50IChmcm9tIHdlc3QgdG8gZWFzdCkgYXQgICBhYm91dCA0IGtpbG9tZXRyZXMgcGVyIGhvdXIgKDIuNSBtaWxlcyBwZXIgaG91cikuICAgICgtKVRoZSBvdGhlciBuYW1lIGZvciB0aGUgQW50YXJjdGljIENpcmN1bXBvbGFyICAgQ3VycmVudCBpcyB0aGUgV2VzdCBXaW5kIERyaWZ0LiAgICAoLSlUaGUgbGFyZ2VzdCBvY2VhbiBjdXJyZW50IGluIHRoZSB3b3JsZCBpcyB0aGUgICBBbnRhcmN0aWMgQ2lyY3VtcG9sYXIgQ3VycmVudCBhbmQgaXMgcmVzcG9uc2libGUgICBmb3IgdHJhbnNwb3J0aW5nIGVub3Jtb3VzIHZvbHVtZXMgb2YgY29sZCwgICBudXRyaWVudC1yaWNoIHdhdGVyIHRvIHRoZSBvY2VhbiwgY3JlYXRpbmcgaGVhbHRoeSAgIG1hcmluZSBlY29zeXN0ZW1zIGFuZCBmb29kIHdlYnMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Polar Easterlies  ",
        "option2" : "Jet Streams  ",
        "option3" : "Westerlies  ",
        "option4" : "Easterlies   "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following pairs regarding local  winds:      Local Name                                     Region/Area  1. Harmattan                                      Southern Africa  2. Khamsin                                          Red Sea  3. Levanter                                          Strait of Gibraltar  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE4",
      "description" : "IEV4cDogICAgKC0pUGFpciAxIGlzIGluY29ycmVjdDogSGFybWF0dGFuIGlzIGRyeSBhbmQgICBjb21wYXJhdGl2ZWx5IGNvb2wgd2luZCB3aGljaCBibG93cyBmcm9tIHRoZSAgIGVhc3Qgb3Igbm9ydGgtZWFzdCBvbiB0aGUgY29hc3Qgb2YgTm9ydGggICBBZnJpY2EgYmV0d2VlbiBDYWJvIFZlcmRlIGFuZCB0aGUgR3VsZiBvZiBHdWluZWEgICBkdXJpbmcgdGhlIGRyeSBzZWFzb24gKE5vdmVtYmVyIHRvIE1hcmNoKS4gICBvIEZyb20gdGhlIFNhaGFyYSBEZXNlcnQsIGl0IGJyaW5ncyBkdXN0IGFuZCAgIHNhbmQgaW4gc3VmZmljaWVudCBxdWFudGl0aWVzIHRvIGZvcm0gYSB0aGljayBoYXplICAgd2hpY2ggaGluZGVycyBuYXZpZ2F0aW9uIG9uIHJpdmVycy4gU29tZXRpbWVzICAgc2FuZCBhbmQgZHVzdCBhcmUgY2FycmllZCBtYW55IGh1bmRyZWRzIG9mICAga2lsb21ldHJlcyBvdXQgdG8gc2VhLiAgICgtKVBhaXIgMiBpcyBjb3JyZWN0OiBLaGFtc2luIGlzIGEgaG90LCBkcnksIGR1c3QtbGFkZW4sICAgc291dGhlcmx5IHdpbmQgb3ZlciBFZ3lwdCwgdGhlIFJlZCBTZWEgYW5kICAgZWFzdGVybiBwYXJ0cyBvZiB0aGUgTWVkaXRlcnJhbmVhbiBTZWEgYWhlYWQgb2YgICBlYXN0d2FyZC1tb3ZpbmcgZGVwcmVzc2lvbnMuICAgIG8gSXQgT2NjdXJyZW5jZSBwZXJpb2QgaXMgZnJvbSBGZWJydWFyeSB0byBKdW5lLCAgIGJlaW5nIG1vc3QgZnJlcXVlbnQgaW4gTWFyY2ggYW5kIEFwcmlsLiAgICAoLSlQYWlyIDMgaXMgY29ycmVjdDogIExldmFudGVyIGlzIG1vaXN0IHdpbmQgd2hpY2ggICBibG93cyBmcm9tIHRoZSBlYXN0IG92ZXIgdGhlIFN0cmFpdCBvZiAgIEdpYnJhbHRhci4gR2VuZXJhbGx5LCBpdCBpcyBhY2NvbXBhbmllZCBieSBoYXplIG9yICAgZm9nIGFuZCBtYXkgb2NjdXIgYXQgYW55IHRpbWUgb2YgeWVhciwgdGhvdWdoIGl0ICAgaXMgbW9zdCBjb21tb24gaW4gdGhlIHBlcmlvZCBKdW5lIHRvIE9jdG9iZXIuICAgIG8gSXQgZm9ybXMgYSBmZWF0dXJlIGtub3duIGFzIHRoZSBPY2N1cnJlbmNlIG9mIGEgICAnYmFubmVyIGNsb3VkJyBleHRlbmRpbmcgYSBraWxvbWV0cmUgb3IgbW9yZSAgIGRvd253aW5kIGZyb20gdGhlIHN1bW1pdCBvZiB0aGUgUm9jayBvZiAgIEdpYnJhbHRhci4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements regarding  Subtropical Steppe and Subtropical Desert Climate:  1. Subtropical Steppe receives slightly more rainfall  than the desert.  2. Variability of rainfall is more in subtropical steppe  than in deserts.  3. In deserts, Rain occurs in short intense  thunderstorms and is ineffective in building soil  moisture.  Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDE5",
      "description" : "IEV4cDogICBBYm91dCBTdWJ0cm9waWNhbCBTdGVwcGVzIGFuZCBTdWJ0cm9waWNhbCBEZXNlcnQ6ICAgKC0pU3VidHJvcGljYWwgc3RlcHBlIGFuZCBzdWJ0cm9waWNhbCBkZXNlcnQgaGF2ZSAgIGNvbW1vbiBwcmVjaXBpdGF0aW9uIGFuZCAgIHRlbXBlcmF0dXJlIGNoYXJhY3RlcmlzdGljcy4gVGhleSBhcmUgbG9jYXRlZCBpbiAgIHRoZSB0cmFuc2l0aW9uIHpvbmUgYmV0d2VlbiBodW1pZCBhbmQgZHJ5ICAgY2xpbWF0ZXMuICAgKC0pU3VidHJvcGljYWwgc3RlcHBlIHJlY2VpdmVzIHNsaWdodGx5IG1vcmUgcmFpbmZhbGwgICB0aGFuIHRoZSBkZXNlcnQsIGFkZXF1YXRlIGVub3VnaCBmb3IgdGhlIGdyb3d0aCAgIG9mIHNwYXJzZSBncmFzc2xhbmRzLiAgICBvIEhpZ2ggdmFyaWFiaWxpdHkgaXMgcHJlc2VudCBpbiBib3RoICAgY2xpbWF0ZXMuIFRoZSB2YXJpYWJpbGl0eSBpbiB0aGUgcmFpbmZhbGwgYWZmZWN0cyBsaWZlICAgaW4gdGhlIHN0ZXBwZSBtdWNoIG1vcmUgdGhhbiBpbiB0aGUgICBkZXNlcnQsIG1vcmUgb2Z0ZW4gY2F1c2luZyBmYW1pbmUuICAgICgtKVJhaW4gb2NjdXJzIGluIHNob3J0IGludGVuc2UgdGh1bmRlcnN0b3JtcyBpbiAgIGRlc2VydHMgYW5kIGlzIGluZWZmZWN0aXZlIGluIGJ1aWxkaW5nIHNvaWwgICBtb2lzdHVyZS4gRm9nIGlzIGNvbW1vbiBpbiBjb2FzdGFsIGRlc2VydHMgICBib3JkZXJpbmcgY29sZCBjdXJyZW50cy4gICAgbyBNYXhpbXVtIHRlbXBlcmF0dXJlIGluIHRoZSBzdW1tZXIgaXMgdmVyeSAgIGhpZ2guIFRoZSBoaWdoZXN0IHNoYWRlIHRlbXBlcmF0dXJlIG9mIDU4wrAgQyB3YXMgICByZWNvcmRlZCBhdCBBbCBBeml6aXlhaCwgTGlieWEgb24gMTMgU2VwdGVtYmVyICAgMTkyMi4gICAoLSlUaGUgYW5udWFsIGFuZCBkaXVybmFsIHJhbmdlcyBvZiB0ZW1wZXJhdHVyZSBhcmUgICBhbHNvIGhpZ2guICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 20,
      "question" : "In the context of Ocean Reliefs, which of the  following is/are the advantages of Continental  shelves?  1. Provide Richest fishing Grounds  2. Site for fossil fuel reserves  3. Good source of Polymetallic  4. Increases the height of tides  Select the correct Answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDIw",
      "description" : "IEV4cDogICAgSW1wb3J0YW5jZSBvZiBDb250aW5lbnRhbCBTaGVsdmVzICAgKC0pTWFyaW5lIGZvb2QgY29tZXMgYWxtb3N0IGVudGlyZWx5IGZyb20gICBjb250aW5lbnRhbCBzaGVsdmVzIGFzIHRoZXkgcHJvdmlkZSB0aGUgcmljaGVzdCAgIGZpc2hpbmcgZ3JvdW5kcy4gICAoLSlUaGV5IGFyZSBwb3RlbnRpYWwgc2l0ZXMgZm9yIGZvc3NpbCBmdWVsIHJlc2VydmVzIGxpa2UgICBwZXRyb2xldW0gYW5kIGdhcyBoeWRyYXRlcy4gICAoLSlQb2x5bWV0YWxsaWMgbm9kdWxlcyAobWFuZ2FuZXNlIG5vZHVsZXM7ICAgY29uY2VudHJpYyBsYXllcnMgb2YgaXJvbiBhbmQgbWFuZ2FuZXNlICAgaHlkcm94aWRlcyksIHdoaWNoIGFyZSBmb3VuZCBvdmVyIHNvbWUgb2YgdGhlICAgY29udGluZW50YWwgc2hlbHZlcywgYXJlIGdvb2Qgc291cmNlcyBvZiB2YXJpb3VzICAgbWluZXJhbCBvcmVzIGxpa2UgbWFuZ2FuZXNlLCBpcm9uIGNvcHBlciwgZ29sZCBldGMuICAgVGhlaXIgbGltaXRlZCBkZXB0aCBhbmQgZ2VudGxlIHNsb3BlIGtlZXAgb3V0IGNvbGQgICB1bmRlcmN1cnJlbnRzIGFuZCB0aGVyZWJ5IGluY3JlYXNlIHRoZSBoZWlnaHQgb2YgICB0aWRlcy4gVGhpcyBzb21ldGltZXMgaGluZGVycyBzaGlwcGluZyBhbmQgb3RoZXIgICBtYXJpbmUgYWN0aXZpdGllcyBzaW5jZSBzaGlwcyBjYW4gb25seSBlbnRlciBhbmQgICBsZWF2ZSBwb3J0IG9uIHRoZSB0aWRlIHR5cGljYWxseSBlbmRzIGF0IGEgdmVyeSBzdGVlcCAgIHNsb3BlLCBjYWxsZWQgdGhlIHNoZWxmIGJyZWFrLiAgICgtKVRoZSBjb250aW5lbnRhbCBzaGVsdmVzIGFyZSBjb3ZlcmVkIHdpdGggdmFyaWFibGUgICB0aGlja25lc3NlcyBvZiBzZWRpbWVudHMgYnJvdWdodCBkb3duIGJ5IHJpdmVycywgICBnbGFjaWVycyBldGMuICAgKC0pTWFzc2l2ZSBzZWRpbWVudGFyeSBkZXBvc2l0cyByZWNlaXZlZCBvdmVyIGEgbG9uZyAgIHRpbWUgYnkgdGhlIGNvbnRpbmVudGFsIHNoZWx2ZXMsIGJlY29tZSB0aGUgICBzb3VyY2Ugb2YgZm9zc2lsIGZ1ZWxzIFtQZXRyb2xldW1dLiAgICgtKVRoZSBzaGVsZiBpcyBmb3JtZWQgbWFpbmx5IGR1ZSB0byBzdWJtZXJnZW5jZSBvZiAgIGEgcGFydCBvZiBhIGNvbnRpbmVudCByZWxhdGl2ZSByaXNlIGluIHNlYSBsZXZlbCAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only  ",
        "option2" : "2, 3 and 4 only  ",
        "option3" : "1, 2 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 21,
      "question" : "These are deep valleys. some comparable to the  Grand Canyon of the Colorado river  They are sometimes found cutting across the  continental shelves and slopes, often extending from  the mouths of large rivers. Identify the above oceanic  feature   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDIx",
      "description" : "IEV4cDogICAoLSlTdWJtYXJpbmUgQ2FueW9ucyAgIG8gVGhlc2UgYXJlIGRlZXAgdmFsbGV5cywgc29tZSBjb21wYXJhYmxlIHRvIHRoZSAgIEdyYW5kIENhbnlvbiBvZiB0aGUgQ29sb3JhZG8gcml2ZXIuIFRoZXkgYXJlICAgc29tZXRpbWVzIGZvdW5kIGN1dHRpbmcgYWNyb3NzIHRoZSBjb250aW5lbnRhbCAgIHNoZWx2ZXMgYW5kIHNsb3Blcywgb2Z0ZW4gZXh0ZW5kaW5nIGZyb20gdGhlICAgbW91dGhzIG9mIGxhcmdlIHJpdmVycy4gVGhlIEh1ZHNvbiBDYW55b24gaXMgdGhlICAgYmVzdCBrbm93biBzdWJtYXJpbmUgY2FueW9uIGluIHRoZSB3b3JsZCAgICgtKVNlYW1vdW50ICAgICAgLiAgICAgICAgICBvIEl0IGlzIGEgbW91bnRhaW4gd2l0aCBwb2ludGVkIHN1bW1pdHMsIHJpc2luZyAgIGZyb20gdGhlIHNlYWZsb29yIHRoYXQgZG9lcyBub3QgcmVhY2ggdGhlIHN1cmZhY2UgICBvZiB0aGUgb2NlYW4uIFNlYW1vdW50cyBhcmUgdm9sY2FuaWMgaW4gb3JpZ2luLiAgIFRoZXNlIGNhbiBiZSAzLDAwMC00LDUwMCBtIHRhbGwuIFRoZSBFbXBlcm9yICAgc2VhbW91bnQsIGFuIGV4dGVuc2lvbiBvZiB0aGUgSGF3YWlpYW4gSXNsYW5kcyAgIGluIHRoZSBQYWNpZmljIE9jZWFuLCBpcyBhIGdvb2QgZXhhbXBsZSAgICgtKUd1eW90cyAgIG8gSXQgaXMgYSBmbGF0IHRvcHBlZCBzZWFtb3VudC4gVGhleSBzaG93IGV2aWRlbmNlICAgb2YgZ3JhZHVhbCBzdWJzaWRlbmNlIHRocm91Z2ggc3RhZ2VzIHRvIGJlY29tZSAgIGZsYXQgdG9wcGVkIHN1Ym1lcmdlZCBtb3VudGFpbnMuIEl0IGlzICAgZXN0aW1hdGVkIHRoYXQgbW9yZSB0aGFuIDEwLDAwMCBzZWFtb3VudHMgYW5kICAgZ3V5b3RzIGV4aXN0IGluIHRoZSBQYWNpZmljIE9jZWFuIGFsb25lICAgKC0pVHJlbmNoZXMgICAgbyBUaGVzZSBhcmVhcyBhcmUgdGhlIGRlZXBlc3QgcGFydHMgb2YgdGhlIG9jZWFucy4gICBUaGUgdHJlbmNoZXMgYXJlIHJlbGF0aXZlbHkgc3RlZXAgc2lkZWQsIG5hcnJvdyAgIGJhc2lucy4gVGhleSBhcmUgc29tZSAzLTUga20gZGVlcGVyIHRoYW4gdGhlICAgc3Vycm91bmRpbmcgb2NlYW4gZmxvb3IuIFRoZXkgb2NjdXIgYXQgdGhlIGJhc2VzICAgb2YgY29udGluZW50YWwgc2xvcGVzIGFuZCBhbG9uZyBpc2xhbmQgYXJjcyBhbmQgICBhcmUgYXNzb2NpYXRlZCB3aXRoIGFjdGl2ZSB2b2xjYW5vZXMgYW5kIHN0cm9uZyAgIGVhcnRocXVha2VzLiBUaGF0IGlzIHdoeSB0aGV5IGFyZSB2ZXJ5IHNpZ25pZmljYW50ICAgaW4gdGhlIHN0dWR5IG9mIHBsYXRlIG1vdmVtZW50cy4gQXMgbWFueSBhcyA1NyAgIGRlZXBzIGhhdmUgYmVlbiBleHBsb3JlZCBzbyBmYXI7IG9mIHdoaWNoIDMyIGFyZSAgIGluIHRoZSBQYWNpZmljIE9jZWFuOyAxOSBpbiB0aGUgQXRsYW50aWMgT2NlYW4gYW5kICAgNiBpbiB0aGUgSW5kaWFuIE9jZWFuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Seamount  ",
        "option2" : "Submarine Canyons  ",
        "option3" : "Trenches  ",
        "option4" : "Guyots   "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements:  1. Cold Currents are usually found on the east coast  of continents at higher latitudes in the Northern  hemisphere.  2. Warm Currents are usually found on the east coast  of continents in the low and middle latitudes.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDIy",
      "description" : "IEV4cDogICAgKC0pT2NlYW4gY3VycmVudHMgY2FuIGFsc28gYmUgY2xhc3NpZmllZCBiYXNlZCBvbiAgIHRlbXBlcmF0dXJlIDogYXMgY29sZCBjdXJyZW50cyBhbmQgd2FybSBjdXJyZW50cy4gICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBjb2xkIGN1cnJlbnRzIGJyaW5nIGNvbGQgICB3YXRlciBpbnRvIHdhcm0gd2F0ZXIgYXJlYXMuIFRoZXNlIGN1cnJlbnRzIGFyZSAgIHVzdWFsbHkgZm91bmQgb24gdGhlIHdlc3QgY29hc3Qgb2YgdGhlIGNvbnRpbmVudHMgICBpbiB0aGUgbG93IGFuZCBtaWRkbGUgbGF0aXR1ZGVzICh0cnVlIGluIGJvdGggICBoZW1pc3BoZXJlcykgYW5kIG9uIHRoZSBlYXN0IGNvYXN0IGluIHRoZSBoaWdoZXIgICBsYXRpdHVkZXMgaW4gdGhlIE5vcnRoZXJuIEhlbWlzcGhlcmUgICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0Oldhcm0gY3VycmVudHMgYnJpbmcgd2FybSAgIHdhdGVyIGludG8gY29sZCB3YXRlciBhcmVhcyBhbmQgYXJlIHVzdWFsbHkgICBvYnNlcnZlZCBvbiB0aGUgZWFzdCBjb2FzdCBvZiBjb250aW5lbnRzIGluIHRoZSBsb3cgICBhbmQgbWlkZGxlIGxhdGl0dWRlcyAodHJ1ZSBpbiBib3RoIGhlbWlzcGhlcmVzKS4gSW4gICB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZSB0aGV5IGFyZSBmb3VuZCBvbiB0aGUgICB3ZXN0IGNvYXN0cyBvZiBjb250aW5lbnRzIGluIGhpZ2ggbGF0aXR1ZGVzLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2 only  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 23,
      "question" : "Ocean Bottom floor is an outcome of  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDIz",
      "description" : "IEV4cDogICAoLSlPY2VhbiBib3R0b20gZmxvb3IgaXMgYW4gb3V0Y29tZSBvZiB2b2xjYW5pYywgICB0ZWN0b25pYywgZXJvc2lvbmFsLCBkZXBvc2l0aW9uYWwgcHJvY2VzcyBhbmQgdGhlaXIgICBpbnRlcmFjdGlvbi4gSGVuY2Ugb3B0aW9uIEQgaXMgY29ycmVjdC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Volcanic process.  ",
        "option2" : "Volcanic and Tectonic processes only.  ",
        "option3" : "Volcanic and Erosional processes only.  ",
        "option4" : "Volcanic, tectonic and Erosional processes   "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements  1. Continental Shelf is the shallowest part of the  ocean.  2. The width of the continental shelves remains the  same in almost all the oceans  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI0",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogQSBjb250aW5lbnRhbCBzaGVsZiBpcyBhICAgcG9ydGlvbiBvZiBhIGNvbnRpbmVudCB0aGF0IGlzIHN1Ym1lcmdlZCB1bmRlciBhbiAgIGFyZWEgb2YgcmVsYXRpdmVseSBzaGFsbG93IHdhdGVyIGtub3duIGFzIGEgc2hlbGYgICBzZWEuIE11Y2ggb2YgdGhlc2Ugc2hlbHZlcyBoYXMgYmVlbiBleHBvc2VkICAgZHVyaW5nIGdsYWNpYWwgcGVyaW9kcyBhbmQgaW50ZXJnbGFjaWFsIHBlcmlvZHMuIEl0IGlzICAgdGhlIHNoYWxsb3dlc3QgcGFydCBvZiB0aGUgb2NlYW4gc2hvd2luZyBhbiAgIGF2ZXJhZ2UgZ3JhZGllbnQgb2YgMcKwIG9yIGV2ZW4gbGVzcy4gICAoLSkgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgd2lkdGggb2YgdGhlICAgY29udGluZW50YWwgc2hlbHZlcyB2YXJpZXMgZnJvbSBvbmUgb2NlYW4gdG8gICBhbm90aGVyLiBUaGUgYXZlcmFnZSB3aWR0aCBvZiBjb250aW5lbnRhbCBzaGVsdmVzICAgaXMgYWJvdXQgODAga20uICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 25,
      "question" : "Which statements among the following about  minor ocean relief features are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI1",
      "description" : "IEV4cDogICAoLSlBIGlzIGluY29ycmVjdDogUmlkZ2VzIGFyZSBmb3JtZWQgYWxvbmcgYSBkaXZlcmdlbnQgICBib3VuZGFyeSBub3QgY29udmVyZ2VudCBib3VuZGFyeS4gICAoLSkgQiBpcyBpbmNvcnJlY3QuVHJlbmNoZXMgYXJlIGZvcm1lZCBhbG9uZyBhICAgY29udmVyZ2VudCBib3VuZGFyeSBub3QgZGl2ZXJnZW50IGJvdW5kYXJ5LiAgICgtKUMgaXMgaW5jb3JyZWN0OiBDYW55b25zIGFyZSBhIHJlc3VsdCBvZiBlcm9zaW9uYWwgICBsYW5kZm9ybS4gICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Ridges are formed along a convergent boundary   ",
        "option2" : "Trenches are formed along a divergent boundary  ",
        "option3" : "Canyons are a result of depositional landform.  ",
        "option4" : "None of the above   "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following statements:  1. The outgoing tide along the coast and from the  bays and estuaries during the time between low  tide and high tide is called a flood current.  2. The incoming tide during the time between high  tide and low tide is called an ebb current.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI2",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBIGhvcml6b250YWwgbW92ZW1lbnQgICBvZiB3YXRlciBvZnRlbiBhY2NvbXBhbmllcyB0aGUgcmlzaW5nIGFuZCBmYWxsaW5nIG9mICAgdGhlIHRpZGUuIFRoaXMgaXMgY2FsbGVkIHRoZSB0aWRhbCBjdXJyZW50LiBUaGUgICBpbmNvbWluZyB0aWRlIGFsb25nIHRoZSBjb2FzdCBhbmQgaW50byB0aGUgYmF5cyBhbmQgICBFc3R1YXJpZXMgYXJlIGNhbGxlZCBhIGZsb29kIGN1cnJlbnQuICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBUaGUgb3V0Z29pbmcgdGlkZSBpcyAgIGNhbGxlZCBhbiBlYmIgY3VycmVudC4gVGhlIHN0cm9uZ2VzdCBmbG9vZCBhbmQgZWJiICAgY3VycmVudHMgdXN1YWxseSBvY2N1ciBiZWZvcmUgb3IgbmVhciB0aGUgdGltZSBvZiAgIHRoZSBoaWdoIGFuZCBsb3cgdGlkZXMgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2      .         ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the following factors affect the  distribution of insolation:  1. Absorption.  2. Distance between the earth and the sun.  3. Reflection.  4. Angle of the sun's rays.  5. Length of the day.  Select the correct Answer from the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI3",
      "description" : "IEV4cDogICAoLSlQb2ludCAxIGlzIGNvcnJlY3Q6IEJlZm9yZSByZWFjaGluZyB0aGUgZWFydGgncyAgIHN1cmZhY2UgYWJvdXQgMTQlIG9mIHRoZSBpbmNvbWluZyBzb2xhciByYWRpYXRpb24gICBpcyBhYnNvcmJlZCBtYWlubHkgYnkgb3pvbmUgZm9sbG93ZWQgYnkgd2F0ZXIgICB2YXBvdXIsIGNhcmJvbiBkaW94aWRlICwgZXRjLiBQcmVzZW5jZSBvZiBjbG91ZHMsICAgZHVzdCBwYXJ0aWNsZXMgaW4gdGhlIGF0bW9zcGhlcmUgYWZmZWN0IHRoZSAgIGRpc3RyaWJ1dGlvbiBvZiBpbnNvbGF0aW9uIG9uIHRoZSBlYXJ0aCdzIHN1cmZhY2UuICAgKC0pUG9pbnQgMiBpcyBjb3JyZWN0OiBEdWUgdG8gcmV2b2x1dGlvbiBvZiB0aGUgZWFydGgsICAgdGhlIGVhcnRoIGlzIGZhcnRoZXN0IGZyb20gdGhlIFN1biBvbiA0dGggICBqdWx5KGFwaGVsaW9uKSBhbmQgbmVhcmVzdCB0byB0aGUgZWFydGggb24gM3JkICAgamFudWFyeShwZXJpaGVsaW9uKSwgdGhlcmVmb3JlIHRoZSBhbm51YWwgICAgICAuICAgICAgICAgIGluc29sYXRpb24gcmVjZWl2ZWQgYnkgdGhlIGVhcnRoIG9uIDNyZCBqYW51YXJ5IGlzICAgc2xpZ2h0bHkgbW9yZSB0aGFuIHRoZSBhbW91bnQgb24gNHRoIGp1bHkuICAgSG93ZXZlciwgdGhpcyB2YXJpYXRpb24gaW4gdGhlIHNvbGFyIG91dHB1dCBkb2VzICAgbm90IGhhdmUgYSBub3RlZCBlZmZlY3Qgb24gZGFpbHkgd2VhdGhlciBjaGFuZ2VzICAgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIGVhcnRoLiAgICAoLSlQb2ludCAzIGlzIGNvcnJlY3Q6IFRoZSBjYXBhY2l0eSBvZiBhIHN1cmZhY2UgdG8gICByZWZsZWN0IHRoZSBzdW4ncyBlbmVyZ3kgaXMgY2FsbGVkIGFsYmVkby4gSGlnaCAgIGFsYmVkbyBoYXMgYSBoaWdoIHBlcmNlbnRhZ2Ugb2YgcmVmbGVjdGlvbiAoc25vdyAgIGFuZCBpY2UgYXJlIGdvb2QgcmVmbGVjdG9ycykuIFRlbXBlcmF0dXJlIHdpbGwgYmUgICBoaWdoZXIgYXQgYSBnaXZlbiBsb2NhdGlvbiBpZiBpdHMgc3VyZmFjZSBoYXMgYSBsb3cgICBhbGJlZG8gcmF0aGVyIHRoYW4gYSBoaWdoIGFsYmVkby4gICAgKC0pU2ltaWxhcmx5IHdoZW4gdGhlIGRpYW1ldGVyIG9mICB0aGUgZHVzdCBwYXJ0aWNsZXMgICBvciB0aGUgdmFwb3VyIGRyb3BsZXRzIGlzIGxhcmdlciB0aGFuIHRoZSAgIHdhdmVsZW5ndGhzIG9mIHRoZSBpbmNvbWluZyBzb2xhciByYWRpYXRpb24sIHNvbWUgICBwb3J0aW9uIG9mIHRoZSBpbmNvbWluZyBzb2xhciByYWRpYXRpb24gaXMgcmVmbGVjdGVkICAgYmFjayB0byBzcGFjZSwgdGhpcyBpcyBjYWxsZWQgZGlmZnVzZWQgcmVmbGVjdGlvbi4gICAoLSlQb2ludCA0IGFuZCA1IGFyZSBjb3JyZWN0OiBUcm9waWNhbCBhbmQgc3VidHJvcGljYWwgICBhcmVhcyBoYXZpbmcgdmVydGljYWwgcmF5cyBvZiB0aGUgc3VuIGFuZCBsb25nZXIgICBsZW5ndGggb2YgdGhlIGRheSByZWNlaXZlIG1heGltdW0gaW5zb2xhdGlvbi4gT24gICB0aGUgb3RoZXIgaGFuZCAsIG1pZGRsZSBhbmQgaGlnaCBsYXRpdHVkZSBhcmVhcyBnZXQgICBsZXNzIGluc29sYXRpb24sIGR1ZSB0byBvYmxpcXVlIGFuZ2xlIG9mIHRoZSBzdW4ncyAgIHJheXMgYW5kIHNob3J0ZXIgZHVyYXRpb24gb2YgdGhlIGRheS4gT2JsaXF1ZSByYXlzICAgbG9zZSBtb3JlIGVuZXJneSwgdGhyb3VnaCB0aGUgbWVjaGFuaXNtIG9mICAgc2NhdHRlcmluZyAsIHJlZmxlY3Rpb24sIGFic29ycHRpb24sIGFzIHRoZXkgdHJhdmVyc2UgICBsYXJnZXIgZGlzdGFuY2UgdGhhbiB2ZXJ0aWNhbCByYXlzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2, 4 and 5  ",
        "option2" : "2, 3 and 5  ",
        "option3" : "1, 2, 3 and 4  ",
        "option4" : "1, 2, 3, 4 and 5   "
      }
    },
    {
      "index" : 28,
      "question" : "Match the following local winds with the area  of occurrence:  List-I (Local Winds Names):   List-II(Region)  A- Fohn                                 1- Alps (Europe)  B- Chinook                            2- Rockies (North America)  C- Berg                                  3- South Africa.  D- Khamsin                           4- Egypt.  E- Harmattan                         5- Guinea Coast/Eastern  part of Sahara.  F- Samun                               6- Iran.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI4",
      "description" : "IEV4cDogICAoLSlCZXNpZGVzIG1ham9yIHdpbmQgc3lzdGVtcyBvZiB0aGUgZWFydGgncyBzdXJmYWNlLCAgIHRoZXJlIGFyZSBjZXJ0YWluIHR5cGVzIG9mIHdpbmRzLCBldmVuIG9uIGEgbXVjaCAgIHNtYWxsZXIgc2NhbGUsIHdoaWNoIGFyZSBwcm9kdWNlZCBieSB0aGUgICB0b3BvZ3JhcGhpY2FsIHBlY3VsaWFyaXRpZXMgb3IgbG9jYWwgdGVtcGVyYXR1cmUgICBkaWZmZXJlbmNlcy4gU2luY2UgdGhlc2Ugd2luZCBzeXN0ZW1zIGFyZSAgIGdlbmVyYXRlZCBieSBwdXJlbHkgbG9jYWwgZmFjdG9ycyBhbmQgdGhlaXIgem9uZSBvZiAgIGluZmx1ZW5jZSBpcyBxdWl0ZSBsaW1pdGVkLCB0aGV5IGFyZSB0ZXJtZWQgYXMgbG9jYWwgICB3aW5kcy4gVGhleSBwbGF5IGFuIGltcG9ydGFudCByb2xlIGluIHRoZSB3ZWF0aGVyICAgYW5kIGNsaW1hdGUgb2YgYSBwYXJ0aWN1bGFyIGxvY2FsaXR5LiBUaGVpciAgIG5vbWVuY2xhdHVyZSBpcyBkZXJpdmVkIGZyb20gdGhlIHJlZ2lvbmFsICAgbGFuZ3VhZ2UuICAgKC0pU29tZSBvZiB0aGUgaW1wb3J0YW50IGxvY2FsIHdpbmRzIHdpdGggdGhlaXIgICBuYXR1cmUgYW5kIHJlZ2lvbiBvZiBvY2N1cnJlbmNlOiAgICBOYW1lczogICAgIE5hdHVyZTogIFJlZ2lvbjogICBGb2huICAgICAgICAgIFdhcm0gICAgIEFscHMuICAgQ2hpbm9vayAgICAgV2FybSAgICAgUm9ja2llcy4gICBCZXJnICAgICAgICAgICBXYXJtICAgIFNvdXRoIEFmcmljYS4gICBab25kYSAgICAgICAgV2FybSAgICAgQW5kZXMuICAgU2FudGEgQW5hICAgV2FybSAgICBDb2FzdGFsIHNvdXRoZXJuIENhbGlmb3JuaWEuICAgS2hhbXNpbiAgICAgV2FybSAgICBFZ3lwdC4gICBIYXJtYXR0YW4gICBXYXJtICAgIEd1aW5lYSBjb2FzdC4gICBNaXN0cmFsICAgICAgICBDb2xkICAgICAgU291dGggRWFzdCBGcmFuY2UuICAgU2FtdW4gICAgICAgIFdhcm0gICBJcmFuLiAgIFB1cmdhICAgICAgICAgIENvbGQgICAgIFJ1c3NpYS4gICBMZXZhbnRlciAgICAgQ29sZCAgICAgIEZyYW5jZS4gICBQYW1wZXJvICAgICBDb2xkICAgICBTb3V0aCBBbWVyaWNhLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "A-1, B-2, C-3, D-4, E-5, F-6.  ",
        "option2" : "A-2, B-1, C-3, D-4, E-5, F-6.  ",
        "option3" : "A-1, B-2, C-5, D-4, E-4, F-6  ",
        "option4" : "A-2, B-1, C-5, D-4, E-6, F-3.   "
      }
    },
    {
      "index" : 29,
      "question" : "Match the following cyclones with their area of  occurrence.         List-I (Cyclones)           List-II(Regions)  A- Typhoons                       1- China sea.  B- Hurricanes                     2- USA.  C- Tornadoes                     3- Caribbean sea.  D- Baguio                           4- Japan.  E- Taifu                               5- Philippines.  F- Willy Willies                    6- Northern Australia.  Select the correct Answer from the codes given  below.  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDI5",
      "description" : "IEV4cDogICAgKC0pQ3ljbG9uZXMsIGh1cnJpY2FuZXMgYW5kIHR5cGhvb25zLCBkaWZmZXJpbmcgb25seSAgIGluIG5hbWUsIHRyYW5zZmVyIGVuZXJnaWVzIGVxdWFsIHRvIHNldmVyYWwgICBtZWdhdG9uIG51Y2xlYXIgYm9tYnMsIGZyb20gdGhlIG9jZWFuIHRvIHRoZSAgIGF0bW9zcGhlcmUgZXZlcnkgeWVhci4gVGhlY29yaW9saXMgZm9yY2UsIHRoZSAgIGRlZmxlY3RpbmcgZm9yY2UgY2F1c2VkIGJ5IHRoZSByb3RhdGlvbiBvZiB0aGUgZWFydGggICBhYm91dCBpdHMgb3duIGF4aXMsIGlzIG1heGltdW0gYXQgdGhlIHBvbGVzIGFuZCAgIHByb2dyZXNzaXZlbHkgZGVjcmVhc2VzIHRvIHplcm8gYXQgdGhlIGVxdWF0b3IuSXQgaXMgICB0aGlzIGZvcmNlIHRoYXQgY29tcGVscyB0aGUgc3VyZmFjZSB3aW5kcyB0byBzcGlyYWwgICB0b3dhcmRzIHRoZSBsb3cgcHJlc3N1cmUgc3lzdGVtLlRyb3BpY2FsIGN5Y2xvbmVzICAgYXJlIHRoZSBtb3N0IGRlc3RydWN0aXZlIGFuZCB2aW9sZW50IHR5cGUgb2YgICBzdG9ybXMuICAgIEN5Y2xvbmVzOiAgICAgICAgICAgIFJlZ2lvbnM6ICAgVHlwaG9vbnMgICAgICAgICAgICAgQ2hpbmEgc2VhLiAgIFRyb3BpY2FsIGN5Y2xvbmVzIEluZGlhbiBvY2Vhbi4gICBIdXJyaWNhbmVzICAgICAgICAgICBDYXJyaWJlYW4gU2VhLiAgIFRvcm5hZG9lcyAgICAgICAgICAgIFVTQSwgICBXaWxseSBXaWxsaWVzICAgICAgICAgIE5vcnRoZXJuIEF1c3RyYWxpYS4gICBCYWd1aW8gICAgICAgICAgICAgICAgIFBoaWxpcHBpbmVzLiAgIFRhaWZ1ICAgICAgICAgICAgICAgICAgICAgSmFwYW4uICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "A-1, B-2, C-3, D-4, E-5, F-6.  ",
        "option2" : "A-1, B-3, C-2, D-5, E-4, F-6.  ",
        "option3" : "A-2, B-1, C-2, D-5, E-4, F-6.  ",
        "option4" : "A-2, B-1, C-3, D-4, E-5, F-6.   "
      }
    },
    {
      "index" : 30,
      "question" : "Consider the following statements regarding  the Jet streams:  1. The greater the horizontal temperature difference,  the stronger the Jet Streams.  2. Determines local weather conditions.  3. It plays an important role in the onset and  withdrawal of Indian monsoon.  4. It acts as a transporter of the radioactive dust and  other pollutants.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDMw",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgcG9zaXRpb24gb2YgdGhlIGpldCAgIHN0cmVhbSBkZW5vdGVzIHRoZSBsb2NhdGlvbiBvZiB0aGUgc3Ryb25nZXN0ICAgdGVtcGVyYXR1cmUgY29udHJhc3RzIGJldHdlZW4gdGhlIGRpZmZlcmVudCAgIGxhdGl0dWRlcyBvbiB0aGUgRWFydGggc3VyZmFjZS4gVGhlIGpldCBzdHJlYW0gICByZXN1bHRzIGZyb20gdGhlIGhvcml6b250YWwgZGlmZmVyZW5jZXMgaW4gICB0ZW1wZXJhdHVyZSB0aGF0IG9jY3VycyB0aHJvdWdoIGEgc3Vic3RhbnRpYWwgICBkaXN0YW5jZSBpbiB0aGUgdHJvcG9zcGhlcmUuIFRoZSByZXN1bHRpbmcgICB0ZW1wZXJhdHVyZSBkaWZmZXJlbmNlcyBwcm9kdWNlIGEgaG9yaXpvbnRhbCAgIHByZXNzdXJlIGdyYWRpZW50IHRoYXQgZHJpdmVzIGdlb3N0cm9waGljIGFuZCAgIGdyYWRpZW50IHdpbmRzLiBUaGV5IGFyZSBtYXJrZWQgYnkgc3Ryb25nICAgdGVtcGVyYXR1cmUgZ3JhZGllbnRzIGluIHRoZSB0cm9wb3NwaGVyZSByYXRoZXIgICB0aGFuIHN1cmZhY2UgdGVtcGVyYXR1cmUgY29udHJhc3RzLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEpldCBTdHJlYW1zIHBsYXlzIGFuICAgaW1wb3J0YW50IHJvbGUgaW4gZGV0ZXJtaW5pbmcgbG9jYWwgd2VhdGhlciAgIHBoZW5vbWVub25zIGR1ZSB0byB0aGVpciBhYmlsaXR5IHRvIHNlcGFyYXRlICAgY29sZGVyIGFpciBhbmQgd2FybWVyIGFpci4gVGhlIHZlcnRpY2FsIG1vdmVtZW50cyAgIG9mIHRoZSB3YXJtZXIgamV0IHN0cmVhbXMgYXJlIG1vcmUgcHJvbm91bmNlZCAgIGFuZCBhcyBhIHJlc3VsdCBicmluZ3MgdmFyaWVkIHR5cGVzIG9mIHdlYXRoZXIgICBjb25kaXRpb25zIHRvIHRoZSBhcmVhLiBKZXQgc3RyZWFtcyBnZW5lcmFsbHkgcHVzaCAgIGFpciBtYXNzZXMgYWxvbmcgd2l0aCB0aGVtLCB0aHVzIGluZmx1ZW5jaW5nIHRoZSAgIGxvY2FsIHdlYXRoZXIgY29uZGl0aW9ucy4gRm9yIGV4YW1wbGUsIHdoZW4gdGhlICAgamV0IHN0cmVhbSBleHRlbmRzIHNvdXRod2FyZHMgaW4gdGhlIHdpbnRlciAgICAgIC4gICAgICAgICAgKGVxdWF0b3J3YXJkKSwgaXQgdGFrZXMgdGhlIGNvbGQgcG9sYXIgYWlyIG1hc3NlcyAgIHdpdGggaXQuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSXQgcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gICB0aGUgb25zZXQsIGRldmVsb3BtZW50IGFuZCB3aXRoZHJhd2FsIG9mIEluZGlhbiAgIG1vbnNvb25zLiBPbnNldCBvZiBzb3V0aC13ZXN0IG1vbnNvb25zIGluICAgc291dGggYXNpYSBpcyBiZWNhdXNlIG9mICB0aGUgd2l0aGRyYXdhbCBvZiB0aGUgICBzb3V0aGVybiBicmFuY2ggb2YgdGhlIHN1YnRyb3BpY2FsIGpldCBzdHJlYW0gdG8gICBub3J0aCBvZiBoaW1hbGF5YXMsIGR1ZSB0byB0aGUgaGVhdGluZyBvZiBsYW5kIGFuZCAgIGF0bW9zcGhlcmUgaW4gc3VtbWVyLiBTaW1pbGFybHkgdGhlIGVhc3Rlcm4gamV0ICAgc3RyZWFtIGVuaGFuY2VzIHRoZSByYWluZmFsbCBpbiBzb3V0aC1lYXN0IEFzaWEgYW5kICAgQXJhYmlhbiBzZWEgYXMgc3VtbWVyIGhlYXRpbmcgY2F1c2VzICAgZGV2ZWxvcG1lbnQgb2YgZWFzdGVybHkgamV0IHN0cmVhbXMgYXJvdW5kIDI1ICAgZGVncmVlIE5vcnRoIGxhdGl0dWRlLiAgICgtKVN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IEpldCBzdHJlYW1zIGNhcnJ5IHBvbGx1dGFudHMgICBhbmQgb3RoZXIgd2FzdGVzIG92ZXIgZ3JlYXQgZGlzdGFuY2VzIHdpdGggYSByYXBpZCAgIHNwZWVkLiBJdCB0cmFuc3BvcnRzIGEgd2lkZSByYW5nZSBvZiBwb2xsdXRhbnRzICAgcmFuZ2luZyBmcm9tIHJhZGlvYWN0aXZlIGFuZCB2b2xjYW5pYyBkdXN0IHRvICAgaW5kdXN0cmlhbCBhbmQgb3RoZXIgY29tbW9uIHBvbGx1dGFudHMuIFBpbG90cyBhbHNvICAgZmx5IGVhc3R3YXJkIHRvIHRha2UgYWR2YW50YWdlIG9mIHRoZSBqZXQgc3RyZWFtICAgYW5kIHJlZHVjZXMgdHJhdmVsIHRpbWUgYW5kIGZ1ZWwgdXNhZ2UuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only  ",
        "option3" : "2, 3 and 4  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to the Life cycle of a Temperate  cyclone,match the following lists:             List-I(Stages)                        List-II(Characteristics)  A- First stage                       1) Warm and cold air masses  penetrate into each other.  B- Second stage                  2) Convergence of two air  masses of contrasting direction and nature.  C- Third stage                     3) Cyclone fully developed.  D- Fourth stage                  4) Warm sector is narrowed.  E- Fifth stage                      5) Warm sector completely  disappears.  F- Sixth stage                     6) Occlusion of cyclone starts.  Select the correct Answer from the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDMx",
      "description" : "IEV4cDogICAgKC0pUGFpciAxIGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZDogRmlyc3Qgc3RhZ2UgaXMgICBjaGFyYWN0ZXJpemVkIGJ5IGNvbnZlcmdlbmNlIG9mIHR3byBhaXIgbWFzc2VzIG9mICAgY29udHJhc3RpbmcgcGh5c2ljYWwgcHJvcGVydGllcyBhbmQgZGlyZWN0aW9ucy4gSXQgaXMgICBhbHNvIGtub3duIGFzIHRoZSBpbml0aWFsIHN0YWdlIHdoZW4gdGhlIHdhcm0gYW5kICAgY29sZCBhaXIgbWFzc2VzIG1vdmUgcGFyYWxsZWwgdG8gZWFjaCBvdGhlciBhbmQgYSAgIHN0YXRpb25hcnkgZnJvbnQgaXMgZm9ybWVkLiAgICgtKVBhaXIgMiBpcyBub3QgY29ycmVjdGx5IG1hdGNoZWQ6IFNlY29uZCBzdGFnZSBpcyAgIGtub3duIGFzIHRoZSBpbmNpcGllbnQgc3RhZ2UgYW5kIGR1cmluZyB0aGlzIHN0YWdlICAgdGhlIHdhcm0gYW5kIGNvbGQgYWlyIG1hc3NlcyBwZW5ldHJhdGUgaW50byB0aGUgICB0ZXJyaXRvcmllcyBvZiBlYWNoIG90aGVyIGFuZCBhIHdhdmUtbGlrZSBmcm9udCBpcyAgIGZvcm1lZC4gICAoLSlQYWlyIDMgaXMgY29ycmVjdGx5IG1hdGNoZWQ6IFRoaXJkIHN0YWdlIGlzIGFsc28gICBrbm93biBhcyB0aGUgbWF0dXJlIHN0YWdlLCBiZWNhdXNlIHRoZSBjeWNsb25lIGlzICAgZnVsbHkgZGV2ZWxvcGVkIGFuZCB0aGUgaXNvYmFycyBhcHBlYXIgdG8gaGF2ZSBhICAgY2lyY3VsYXIgc2hhcGUuICAgKC0pUGFpciA0IGlzIGNvcnJlY3RseSBtYXRjaGVkOiBGb3VydGggc3RhZ2UgaXMgICBjaGFyYWN0ZXJpemVkIGJ5IG5hcnJvd2luZyBvZiB0aGUgd2FybSBzZWN0b3IgZHVlICAgdG8gcHJvZ3Jlc3Npb24gZHVlIHRvIHRoZSBjb2xkIGZyb250IGNvbWluZyBuZWFyZXIgICB0byB0aGUgd2FybSBmcm9udC4gICAoLSlQYWlyIDUgaXMgbm90IGNvcnJlY3RseSBtYXRjaGVkOiBGaWZ0aCBzdGFnZSBzdGFydHMgICB3aXRoIHRoZSBvY2NsdXNpb24gb2YgYSBjeWNsb25lIHdoZW4gdGhlIGFkdmFuY2luZyAgIGNvbGQgZnJvbnQgb3ZlcnRha2VzIGEgd2FybSBmcm9udCBhbmQgYW4gb2NjbHVkZWQgICBmcm9udCBpcyBmb3JtZWQuICAgKC0pUGFpciA2IGlzIG5vdCBjb3JyZWN0bHkgbWF0Y2hlZDogSW4gdGhlIHNpeHRoIHN0YWdlICAgdGhlIHdhcm0gc2VjdG9yIGRpc2FwcGVhcnMgY29tcGxldGVseSBhbmQgdGhlICAgY3ljbG9uZSBkaWVzIG91dCBkdWUgdG8gdGhlIGRlc3RydWN0aW9uIG9mIHRoZSAgIG9jY2x1ZGVkIGZyb250LCBUaGlzIHN0YWdlIGlzIGFsc28ga25vd24gYXMgICBmcm9udG9seXNpcy4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "A-1, B-2, C-3, D-4, E-5, F-6.  ",
        "option2" : "A-2, B-1, C-3, D-4, E-6, F-5.  ",
        "option3" : "A-1, B-2, C-4, D-3, E-5, F-6.  ",
        "option4" : "A-2, B-1, C-4, D-3, E-5, F-6.   "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statement with respect  to weather system, fronts :  1. They are mostly developed in the middle latitudes  and bring abrupt changes in temperature.  2. The gradient of the cold front is much steeper than  that of the warm front.  3. Cold fronts move faster than the warm fronts.  4. On weather maps cold fronts are illustrated by blue  lines, whereas red fronts are illustrated by red  lines.  Which of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDMy",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBGcm9udHMgYXJlIG1vc3QgY2xlYXJseSAgIGRldmVsb3BlZCBpbiB0aGUgbWlkZGxlIGxhdGl0dWRlcyB3aGVyZSB0d28gYWlyICAgbWFzc2VzLCB0aGUgcG9sYXIgY29sZCBhaXIgbWFzcyBhbmQgdGhlIHRyb3BpY2FsICAgd2FybSBhaXIgbWFzcyBjb252ZXJnZS4gVGhleSBhcmUgY2hhcmFjdGVyaXplZCBieSAgIHN0ZWVwIGdyYWRpZW50IGluIHRlbXBlcmF0dXJlIGFuZCBwcmVzc3VyZS4gVGhleSAgIGFyZSBhbHNvIHJlc3BvbnNpYmxlIGZvciBicmluZ2luZyBhYnJ1cHQgY2hhbmdlcyBpbiAgIHRlbXBlcmF0dXJlIGFuZCBjYXVzZSB0aGUgYWlyIHRvIHJpc2UgdG8gZm9ybSAgIGNsb3VkcyBhbmQgY2F1c2UgcHJlY2lwaXRhdGlvbi4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgY2xlYXJseSBkZWZpbmVkICAgYm91bmRhcnkgYmV0d2VlbiBhIHdhcm0gYW5kIGEgY29sZCBhaXIgbWFzcywgICB3aGVyZSB0aGUgbGF0dGVyIGlzIGFkdmFuY2luZyBhbmQgdW5kZXJjdXR0aW5nIHRoZSAgIHdhcm0gYWlyLiBUaGUgZ3JhZGllbnQgb2YgdGhlIGNvbGQgZnJvbnQgaXMgdXN1YWxseSAgIG11Y2ggc3RlZXBlciB0aGFuIHRoYXQgb2YgYSB3YXJtIGZyb250LiBUaGUgcmFwaWQgICBhc2NlbnQgb2Ygd2FybSBtb2lzdCBhaXIgYXQgdGhlIGZyb250IHJlc3VsdHMgaW4gICByYXBpZCBjb29saW5nLCBjb25kZW5zYXRpb24gYW5kIHRoZSBkZXZlbG9wbWVudCAgIG9mIGN1bXVsb25pbWJ1cyBjbG91ZHMuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQ29sZCBmcm9udHMgbW92ZSBmYXN0ZXIgICB0aGFuIHdhcm0gZnJvbnRzIGJlY2F1c2UgY29sZCBhaXIgaXMgZGVuc2VyLCAgIG1lYW5pbmcgdGhlcmUgYXJlIG1vcmUgbW9sZWN1bGVzIG9mIG1hdGVyaWFsIGluICAgY29sZCBhaXIgdGhhbiBpbiB3YXJtIGFpLiBTdHJvbmcsIHBvd2VyZnVsIGNvbGQgICBmcm9udHMgb2Z0ZW4gdGFrZSBvdmVyIHdhcm0gYWlyIHRoYXQgbWlnaHQgYmUgICBuZWFybHkgbW90aW9ubGVzcyBpbiB0aGUgYXRtb3NwaGVyZS4gQXMgdGhlIGNvbGQgICBmcm9udCBub3JtYWxseSB0cmF2ZWxzIG1vcmUgcXVpY2tseSB0aGFuIHRoZSB3YXJtICAgZnJvbnQsIGl0IHNsb3dseSByZWR1Y2VzIHRoZSBhcmVhIG9mIHRoZSB3YXJtICAgc2VjdG9yLCB1bnRpbCBpdCBtZXJnZXMgd2l0aCB0aGUgcHJlY2VkaW5nIGZyb250IHRvICAgY29tcGxldGUgdGhlIG9jY2x1c2lvbiBwcm9jZXNzLiAgICAoLSlTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBPbiB3ZWF0aGVyIG1hcHMsIGNvbGQgICBmcm9udHMgYXJlIGlsbHVzdHJhdGVkIGJ5IGJsdWUgbGluZXMgd2l0aCBzaGFycCAgICd0ZWV0aCcgcG9pbnRpbmcgaW4gdGhlIGRpcmVjdGlvbiBvZiB0aGUgd2luZC4gV2FybSAgIGZyb250cyBhcmUgaWxsdXN0cmF0ZWQgYnkgcmVkIGxpbmVzIHdpdGggcm91bmRlZCAgIGJ1bXBzIHBvaW50aW5nIGluIHRoZSBkaXJlY3Rpb24gb2YgdGhlIHdpbmQuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2 and 4 only  ",
        "option2" : "2 only  ",
        "option3" : "2, 3 and 4 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 33,
      "question" : "Which of the following is/are the characteristics  of anticyclone?  1. Anticyclone moves clockwise in the Northern  Hemisphere and anticlockwise in the Southern  Hemisphere.  2. Weather becomes rainless, with clear skies.  . 3. Temperature of anticyclone is directly proportional  to the local weather.  Select the correct Answer from the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDMz",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBbnRpY3ljbG9uZXMgaXMgYSBoaWdoICAgcHJlc3N1cmUgYXJlYSBzdXJyb3VuZGVkIGJ5IGxvdyBwcmVzc3VyZSBhcmVhcyBvbiAgIGFsbCBzaWRlcy4gV2luZCBibG93cyBmcm9tIHRoZSBjZW50cmUgdG8gdGhlICAgb3V0d2FyZCByZWdpb25zLiBUaGUgcm90YXRpb24gb2YgdGhlIGVhcnRoIGFuZCB0aGUgICBibG93aW5nIG9mIHdpbmRzIGZyb20gdGhlIGNlbnRyZSBjYXVzZXMgdGhlICAgYW50aWN5Y2xvbmVzIHRvIG1vdmUgaW4gY2xvY2t3aXNlIGRpcmVjdGlvbiBpbiB0aGUgICBub3J0aGVybiBoZW1pc3BoZXJlIGFuZCBhbnRpLWNsb2Nrd2lzZSBkaXJlY3Rpb24gICBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZS4gVGhlIGlzb2JhcnMgaW4gYW4gICBhbnRpY3ljbG9uZSBhcmUgbW9yZSBvciBsZXNzIGNpcmN1bGFyIGluIHNoYXBlLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEhpZ2ggcHJlc3N1cmUgc3lzdGVtcyBhcmUgICBnZW5lcmFsbHkgYXNzb2NpYXRlZCB3aXRoIGxpZ2h0IHdpbmRzIGF0IHRoZSBzdXJmYWNlICAgYW5kIHN1YnNpZGVuY2Ugb2YgYWlyIGZyb20gaGlnaGVyIHBvcnRpb25zIG9mIHRoZSAgIHRyb3Bvc3BoZXJlLiBTdWJzaWRlbmNlIHdpbGwgZ2VuZXJhbGx5IHdhcm0gYW4gYWlyICAgbWFzcyBieSBhZGlhYmF0aWMgaGVhdGluZy4gVGh1cyByZXN1bHRpbmcgaW4gY2xlYXIgICBza2llcyBhbmQgcmFpbmxlc3MgYmVjYXVzZSB0aGUgZGVzY2VuZGluZyB3aW5kcyAgIGNhdXNlIGF0bW9zcGhlcmljIHN0YWJpbGl0eS4gICAgICAuICAgICAgICAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRlbXBlcmF0dXJlIGluICAgYW50aWN5Y2xvbmVzIGRlcGVuZHMgb24gd2VhdGhlciwgbmF0dXJlIG9mIGFpciAgIG1hc3MgYW5kIGh1bWlkaXR5IGluIHRoZSBhaXIuIFRoZXkgcmVjb3JkIGhpZ2ggICB0ZW1wZXJhdHVyZXMgZHVyaW5nIHRoZSBzdW1tZXIgc2Vhc29uIGR1ZSB0byAgIGRldmVsb3BtZW50IG9mIHdhcm0gYWlyIG1hc3Nlcy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 34,
      "question" : "With respect to the retreating monsoons,  consider the following statements:  1. It is marked by high temperature and humidity and  occurs in the months of October and November.  2. The Punjab plains experience the withdrawal of  monsoons first.  Which of the above given statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM0",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgVGhlIGFtb3VudCBhbmQgZnJlcXVlbmN5ICAgb2YgcmFpbiBkZWNyZWFzZXMgdG93YXJkcyB0aGUgZW5kIG9mIHRoZSByYWlueSAgIHNlYXNvbiBhbmQgdGhlIHJldHJlYXRpbmcgbW9uc29vbiBhcmUgbWFya2VkIGJ5ICAgY2xlYXIgc2tpZXMgYW5kIHJpc2UgaW4gdGVtcGVyYXR1cmUsIGRyeSBzZWFzb24gICByZXR1cm5zIGluIE9jdG9iZXIsIHdpdGggdGhlIG91dCBibG93aW5nIE5vcnRoIEVhc3QgICBtb25zb29uLiBUaGlzIHBoZW5vbWVub24gaXMgYWxzbyBrbm93biBhcyAgIE9jdG9iZXIgaGVhdC4gSW4gdGhlIHNlY29uZCBoYWxmIG9mIE9jdG9iZXIgdGhlICAgdGVtcGVyYXR1cmUgZHJvcHMgcmFwaWRseS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBSZXRyZWF0aW5nIG1vbnNvb24gaXMgICBjaGFyYWN0ZXJpemVkIGJ5IHJldHJlYXRpbmcgZ3JhZHVhbGx5IHNvdXRod2FyZHMgICBhZnRlciBtaWQtc2VwdGVtYmVyIHVudGlsIGl0IGxlYXZlcyB0aGUgc3ViICAgY29udGluZW50IGNvbXBsZXRlbHkuIFRoZSBQdW5qYWIgcGxhaW5zIHdoaWNoICAgcmVjZWl2ZSB0aGUgc291dGgtd2VzdCBtb25zb29uIGVhcmxpZXN0IGFyZSB0aGUgICBmaXJzdCB0byBzZWUgdGhlIHdpdGhkcmF3YWwgb2YgdGhlIG1vbnNvb24uICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 35,
      "question" : "Consider the following statements:  1. Earth's atmosphere is heated directly by the  insolation of the sun.  2. Normal lapse rate is responsible for lesser  temperature at higher altitudes.  3. Land portions of the Earth are subjected to greater  temperature changes.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM1",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBoZWF0aW5nIG9mIHRoZSBFYXJ0aCdzICAgYXRtb3NwaGVyZSBvY2N1cnMgaW5kaXJlY3RseSBieSB0aGUgdGVycmVzdHJpYWwgICByYWRpYXRpb24gKHJlZmxlY3RlZCByYWRpYXRpb24gZnJvbSB0aGUgRWFydGgncyAgIHN1cmZhY2UpLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFRoZSBoZWF0aW5nIG9mIHRoZSBFYXJ0aCdzICAgYXRtb3NwaGVyZSB0aHJvdWdoIHRlcnJlc3RyaWFsIHJhZGlhdGlvbiBpcyAgIHJlc3BvbnNpYmxlIGZvciB0aGUgZGVjcmVhc2UgaW4gdGVtcGVyYXR1cmUgYXMgb25lICAgbW92ZXMgdXAgdGhlIHN1cmZhY2Ugb2YgRWFydGguIEhlbmNlLCBhcyB0aGUgICBkaXN0YW5jZSBmcm9tIHRoZSBzZWEgbGV2ZWwgaW5jcmVhc2VzLCB0aGVyZSBvY2N1cnMgICBhIGZhbGwgaW4gdGVtcGVyYXR1cmUuIFRoaXMgZmFsbCBpbiB0ZW1wZXJhdHVyZSBpcyAgIGRlZmluZWQgYXMgdGhlIG5vcm1hbCBsYXBzZSByYXRlLiBUaGUgYXJlYXMgICBzaXR1YXRlZCBhdCB0aGUgaGlnaGVyIGFsdGl0dWRlcyBleHBlcmllbmNlIGxvd2VyICAgdGVtcGVyYXR1cmUgZHVlIHRvIHRoaXMuIFRoZSBub3JtYWwgbGFwc2UgcmF0ZSBpcyAgIDYuNcKwQyBmYWxsIGluIHRoZSB0ZW1wZXJhdHVyZSB3aXRoIGV2ZXJ5IDEga20gICBpbmNyZWFzZSBpbiBoZWlnaHQuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogU2luY2UgbGFuZCBnZXRzIGhlYXRlZCB1cCAgIHF1aWNrbHkgYW5kIGNvb2xzIGRvd24gZmFzdGVyIGNvbXBhcmVkIHRvIHRoZSAgIG9jZWFucy4gVGhlIGxhbmQgYXJlYXMgYXJlIHN1YmplY3RlZCB0byBncmVhdGVyICAgdGVtcGVyYXR1cmUgY2hhbmdlcy4gU3VkZGVuIGluY3JlYXNlIG9yICAgZGVjcmVhc2UgaW4gdGhlIHRlbXBlcmF0dXJlIG9mIGxhbmQgaXMgcXVpY2tseSAgIHJlZmxlY3RlZC4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2, and 3   "
      }
    },
    {
      "index" : 36,
      "question" : "Consider the following statements:  1. The isotherms of the Southern Hemisphere show  greater deviation compared to the Northern  hemisphere.  2. During winters in the Northern Hemisphere, the  isotherms bend southwards along the continents.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM2",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBNb3N0IG9mIHRoZSBhcmVhIG9mIHRoZSAgIFNvdXRoZXJuIEhlbWlzcGhlcmUgaXMgY292ZXJlZCBieSB0aGUgb2NlYW5zIGFuZCAgIHRoZXJlIGlzIGxlc3NlciBhcmVhIGNvdmVyZWQgYnkgbGFuZC4gSGVuY2UsICAgaXNvdGhlcm1zIChsaW5lIGpvaW5pbmcgdGhlIHBsYWNlcyB3aXRoIHNhbWUgICB0ZW1wZXJhdHVyZSkgYXJlIG1vcmUgcGFyYWxsZWwgYW5kIHNob3cgbGVzc2VyICAgZGV2aWF0aW9uIGFzIGNvbXBhcmVkIHRvIHRoZSBOb3J0aGVybiAgIEhlbWlzcGhlcmUuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRHVyaW5nIHdpbnRlcnMgaW4gdGhlICAgTm9ydGhlcm4gSGVtaXNwaGVyZSwgdGhlIGxhbmRtYXNzIGluIHRoZSBOb3J0aCAgIGdldHMgY29vbGVkIHF1aWNrbHkgYW5kIGhlbmNlIGlzb3RoZXJtcyBzaG93IGEgICBiZW5kIHRvd2FyZHMgdGhlIHNvdXRoIHdoaWxlIGl0IGJlbmRzIHRvd2FyZHMgdGhlICAgbm9ydGggaW4gdGhlIG9jZWFucy4gVGhlIG1vc3QgcHJvZm91bmQgc291dGh3YXJkICAgYmVuZGluZyBpcyB2aXNpYmxlIGluIFNpYmVyaWFuIHJlZ2lvbi4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 37,
      "question" : "Consider the following conditions:  1. Fogs in winters.  2. Air drainage  3. Distance from sea level  4. Winter nights with clear sky  Which of the above conditions are ideal for  temperature inversion to take place?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM3",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBCZW5lYXRoIHRoZSBsYXllciBvZiAgIHRlbXBlcmF0dXJlIGludmVyc2lvbiwgdGhlcmUgb2NjdXJzIGEgY29sbGVjdGlvbiBvZiAgIGR1c3QgcGFydGljbGVzIGFuZCBzbW9rZSB3aGljaCBjYXVzZXMgZGVuc2UgZm9ncyAgIGluIHRoZSBtb3JuaW5nIGR1cmluZyB0aGUgd2ludGVyIHNlYXNvbnMuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDpBaXIgZHJhaW5hZ2UgaXMgdmlzaWJsZSBhbG9uZyAgIHRoZSBtb3VudGFpbnMgYW5kIGhpbGxzIHdoZXJlIHRoZSBjb2xkIGFpciBiZWluZyAgIGRlbnNlciBmbG93cyBkb3duIHRoZSBtb3VudGFpbnMgYW5kICAgYWNjdW11bGF0ZXMgaW4gdGhlIGJvdHRvbSBhcmVhcyB3aGVyZWFzIHRoZSBhcmVhICAgaW4gdGhlIHVwcGVyIGF0bW9zcGhlcmUgaXMgd2FybWVyLiAgICgtKVN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQXMgdGhlIEVhcnRoJ3MgICBhdG1vc3BoZXJlIGlzIGhlYXRlZCBpbmRpcmVjdGx5IGJ5IHRoZSB0ZXJyZXN0cmlhbCAgIHJhZGlhdGlvbiBvZiB0aGUgRWFydGgsIHRoZSBpbmNyZWFzZSBpbiBkaXN0YW5jZSAgIGZyb20gdGhlIHNlYSBsZXZlbCBjYXVzZXMgcmVkdWNlZCB0ZW1wZXJhdHVyZSAgIGNvbmRpdGlvbnMgYXMgZGVmaW5lZCBieSB0aGUgbm9ybWFsIGxhcHNlIHJhdGUgKGZhbGwgICBvZiA2LjUgQyB3aXRoIGV2ZXJ5IDEga20gaW5jcmVhc2UgaW4gaGVpZ2h0KS4gICAoLSlTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBPbiBhIHdpbnRlciBuaWdodCB3aXRoIGNsZWFyICAgc2t5IHRoZSBjb25kaXRpb24gb2YgdGVtcGVyYXR1cmUgaW52ZXJzaW9uIGlzIGJlc3QgICBkZXZlbG9wZWQgYXMgdGhlIGhlYXQgaXMgcmFkaWF0ZWQgYnkgdGhlIEVhcnRoJ3MgICBzdXJmYWNlIGFuZCB0aGUgbG93ZXIgbGF5ZXJzIG9mIHRoZSBhdG1vc3BoZXJlICAgZ2V0cyB3YXJtZXIgd2hpbGUgdGhlIEVhcnRoJ3Mgc3VyZmFjZSBpcyBjb29sZXIuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2, and 4 only  ",
        "option2" : "1, 2, and 3 only  ",
        "option3" : "2, 3, and 4 only  ",
        "option4" : "1, 2, 3, and 4   "
      }
    },
    {
      "index" : 38,
      "question" : "Which of the statements given below is most  appropriate regarding the forces acting on the air?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM4",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IElzb2JhcnMgYXJlIHRoZSBsaW5lcyAgIGpvaW5pbmcgdGhlIGFyZWFzIG9mIHNhbWUgcHJlc3N1cmUuIFRoZSBjaGFuZ2VzIGluICAgUHJlc3N1cmUgd2l0aCByZXNwZWN0IHRvIGRpc3RhbmNlIGlzIHJlZmVycmVkIHRvIGFzICAgdGhlIFByZXNzdXJlIEdyYWRpZW50IEZvcmNlLiBJbiBjYXNlcyB3aGVyZSB0aGUgICBpc29iYXJzIGFyZSB2ZXJ5IGNsb3NlIHRvZ2V0aGVyLCB0aGUgcHJlc3N1cmUgICBncmFkaWVudCBmb3JjZSBpcyBzdHJvbmcgd2hlcmVhcyBpdCBpcyB3ZWFrIGluIHRoZSAgIGFyZWFzIHdoZXJlIGlzb2JhcnMgYXJlIGZhciBhcGFydC4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEZyaWN0aW9uYWwgZm9yY2UgaXMgYWN0aW5nICAgY2xvc2VyIHRvIHRoZSBzdXJmYWNlLiBJdHMgZWZmZWN0IHJlZHVjZXMgYmV5b25kIHRoZSAgIGRpc3RhbmNlIG9mIDEtMyBrbSBmcm9tIHRoZSBzdXJmYWNlIG9mIHRoZSBFYXJ0aC4gSXQgICBoYXMgYSBncmVhdGVyIGVmZmVjdCBvdmVyIHRoZSBsYW5kIHN1cmZhY2UgYXMgICBjb21wYXJlZCB0byB0aGUgc2VhIHN1cmZhY2UuICAgKC0pU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgQ29yaW9saXMgZm9yY2UgZXhpc3RzICAgb24gYWNjb3VudCBvZiB0aGUgcm90YXRpb24gb2YgdGhlIEVhcnRoLiBJbiB0aGUgICBTb3V0aGVybiBIZW1pc3BoZXJlLCB0aGlzIGZvcmNlIGRlZmxlY3RzIHRoZSB3aW5kICAgdG93YXJkcyB0aGUgbGVmdCB3aGlsZSBpdCBkZWZsZWN0cyB0aGVtIG92ZXIgcmlnaHQgaW4gICAgICAuICAgICAgICAgIHRoZSBOb3J0aGVybiBIZW1pc3BoZXJlLiBHcmVhdGVyIHRoZSBzcGVlZCBvZiAgIHRoZSB3aW5kLCBtb3JlIGlzIHRoZSBDb3Jpb2xpcyBmb3JjZSBhY3Rpbmcgb24gaXQuICAgKC0pU3RhdGVtZW50IDQgaXMgY29ycmVjdDogVGhlIG1hZ25pdHVkZSBvZiBDb3Jpb2xpcyAgIGZvcmNlIGlzIGRpcmVjdGx5IHByb3BvcnRpb25hbCB0byB0aGUgYW5nbGUgb2YgICBsYXRpdHVkZS4gTmVhciB0aGUgRXF1YXRvciwgaXQgaXMgcHJhY3RpY2FsbHkgemVybyBhbmQgICBoZW5jZSBDb3Jpb2xpcyBmb3JjZSBpcyBhYnNlbnQgYXQgdGhlIEVxdWF0b3Igd2hpbGUgICBpdCBpcyBtYXhpbXVtIGF0IHRoZSBwb2xlcy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Pressure gradient force is weak in places of closer   isobars.  ",
        "option2" : "Frictional force does not cause any effect in the   speed of the winds over landmasses.  ",
        "option3" : "The Coriolis force deflects the wind to the right in   the southern hemisphere.  ",
        "option4" : "The magnitude of Coriolis force is directly   proportional to the latitudinal angle.    "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements:  1. Geostrophic winds flow in the absence of the force  of friction.  2. Pressure gradient, Coriolis, and frictional force are  the only forces acting on the wind.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDM5",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgdXBwZXIgYXRtb3NwaGVyZSBpcyAgIHJhcmVmaWVkIGluIG5hdHVyZSBhbmQgdGhpcyBjYXVzZXMgYWJzZW5jZSBvZiAgIGZyaWN0aW9uYWwgZm9yY2UuIEluIHRoZSBhYnNlbmNlIG9mIGZvcmNlIG9mIGZyaWN0aW9uLCAgIHRoZSBQcmVzc3VyZSBHcmFkaWVudCBGb3JjZSBhbmQgdGhlIENvcmlvbGlzIEZvcmNlICAgYXJlIHRoZSBzb2xlIGZvcmNlcyBhY3Rpbmcgb24gdGhlIGFpci4gVGhlIGVmZmVjdCBvZiAgIHRoZXNlIHR3byBmb3JjZXMgaXMgc3VjaCB0aGF0IHRoZSByZXN1bHRpbmcgYWlyICAgbW92aW5nIGZyb20gaGlnaCBwcmVzc3VyZSB0byBsb3cgcHJlc3N1cmUgYXJlYSBpcyAgIGRlZmxlY3RlZCBpbiB0aGUgZGlyZWN0aW9uIHBlcnBlbmRpY3VsYXIgdG8gdGhlICAgUHJlc3N1cmUgR3JhZGllbnQgRm9yY2UuIFRoaXMgd2luZCBpcyB0ZXJtZWQgYXMgICB0aGUgR2Vvc3Ryb3BoaWMgd2luZC4gSXQgYmVuZHMgaW4gdGhlIGNsb2Nrd2lzZSAgIGRpcmVjdGlvbiBpbiB0aGUgTm9ydGhlcm4gSGVtaXNwaGVyZS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJlc2lkZXMgdGhlIFByZXNzdXJlICAgR3JhZGllbnQgRm9yY2UsIENvcmlvbGlzIEZvcmNlLCBhbmQgdGhlIEZyaWN0aW9uYWwgICBGb3JjZSwgdGhlcmUgYWxzbyBleGlzdHMgZ3Jhdml0YXRpb25hbCBmb3JjZSBhY3RpbmcgaW4gICB0aGUgZG93bndhcmQgZGlyZWN0aW9uLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following events:  1. Rotation of Earth.  2. Oscillating pressure belts.  3. Distribution of land and sea.  4. Gravitational pull of the moon.  5. Sunspot cycle.  Which of the above factors is/are responsible for the  distribution of the planetary winds?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQw",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgQyBpcyBjb3JyZWN0OiBUaGUgZmFjdG9ycyB0aGF0IGFyZSAgIHJlc3BvbnNpYmxlIGZvciB0aGUgZGlzdHJpYnV0aW9uIG9mIHBsYW5ldGFyeSB3aW5kcyAgIGFyZTogICBvIFRoZSByb3RhdGlvbiBvZiB0aGUgRWFydGguICAgbyBMYXRpdHVkaW5hbCB2YXJpYXRpb25zIGluIGF0bW9zcGhlcmljIGhlYXRpbmcuICAgbyBMYW5kIGFuZCBvY2VhbiBjb25maWd1cmF0aW9ucyBvZiB0aGUgc3VyZmFjZSBvZiAgIHRoZSBFYXJ0aC4gICBvIEVtZXJnZW5jZSBvZiBwcmVzc3VyZSBiZWx0cy4gICBvIFRoZSBvc2NpbGxhdGlvbiBvZiBwcmVzc3VyZSBiZWx0cyBpbiBhY2NvcmRhbmNlICAgd2l0aCB0aGUgcG9zaXRpb24gb2YgdGhlIHN1bi4gICAoLSlUaGUgZmFjdG9ycyBsaWtlIHRoZSBncmF2aXRhdGlvbmFsIHB1bGwgb2YgdGhlIG1vb24gICBhbmQgdGhlIHN1bnNwb3QgY3ljbGUgYXJlIG5vdCBrbm93biB0byBhZmZlY3QgdGhlICAgZGlzdHJpYnV0aW9uIG9mIHBsYW5ldGFyeSB3aW5kcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2, and 4 only  ",
        "option2" : "2, 4, and 5 only  ",
        "option3" : "1, 2, and 3 only  ",
        "option4" : "2, 3, and 5 only    "
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements:  1. The Trade winds blow towards the Equator while  the westerlies blow towards the poles.  2. Inter-Tropical Convergence zone is created at the  convergence of Westerlies and the Trade winds.  3. The air flow around the equator is the Easterlies.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQx",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUcmFkZSB3aW5kcyBibG93IG9uIGJvdGggICB0aGUgc2lkZXMgb2YgdGhlIEVxdWF0b3IuIFRoZXkgYmxvdyB0b3dhcmRzICAgdGhlIEVxdWF0b3JpYWwgbG93IHByZXNzdXJlLiBUaGUgd2VzdGVybGllcyBibG93ICAgYXQgdGhlIGhpZ2hlciBsYXRpdHVkZXMuIFRoZXkgYmxvdyBmcm9tIHRoZSAgIHN1YnRyb3BpY2FsIGhpZ2ggdG8gdGhlIHBvbGFyIGxvdy1wcmVzc3VyZSBiZWx0cy4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEludGVyLVRyb3BpY2FsICAgQ29udmVyZ2VuY2UgWm9uZSBpcyBjcmVhdGVkIGF0IHRoZSBwb2ludCB3aGVyZSAgIHRoZSBOb3J0aCBhbmQgdGhlIFNvdXRoIEVhc3QgdHJhZGUgd2luZHMgY29udmVyZ2UgICBuZWFyIHRoZSBFcXVhdG9yLiBJdCBpcyBhbiBhcmVhIG9mIGxvdyBwcmVzc3VyZS4gICAoLSlTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgYWlyIGZsb3dpbmcgYXJvdW5kIHRoZSAgIEVxdWF0b3IgYXJlIHRoZSB0cmFkZSB3aW5kcyB3aGljaCBhcmUgRWFzdGVybGllcyBpbiAgIG5hdHVyZS4gVGhleSBvcmlnaW5hdGUgZnJvbSB0aGUgTm9ydGggRWFzdCBhbmQgICBTb3V0aCBFYXN0IGRpcmVjdGlvbi4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "3 only  ",
        "option2" : "1 and 2 only      .         ",
        "option3" : "1 and 3 only  ",
        "option4" : "2 and 3 only   "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following pairs:  Pressure cells            Location  1. Hadley Cell           Subtropical high  2. Ferrel Cell             Tropical low  3. Polar Cell               Polar High  Which of the above pairs is/are incorrectly matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQy",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6SGFkbGV5IGNlbGwgaXMgY3JlYXRlZCBkdWUgICB0byB0aGUgY2lyY3VsYXRpb24gb2YgYWlyIGZyb20gdGhlIEVxdWF0b3JpYWwgbG93LSAgcHJlc3N1cmUgYmVsdCB0byBTdWJ0cm9waWNhbCBoaWdoLXByZXNzdXJlIGJlbHQuIEl0IGlzICAgbG9jYXRlZCBpbiB0aGUgdHJvcGljcy4gICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiBGZXJyZWwgY2VsbHMgYXJlIGNyZWF0ZWQgICBkdWUgdG8gdGhlIGNpcmN1bGF0aW9uIG9mIGFpciBmcm9tIHRoZSBTdWJ0cm9waWNhbCAgIGhpZ2ggdG8gdGhlIHN1YnBvbGFyIGxvdy1wcmVzc3VyZSBiZWx0LiBTdWNoIGEgY2VsbCAgIGlzIGNyZWF0ZWQgbmVhciB0aGUgc3VidHJvcGljYWwgaGlnaC1wcmVzc3VyZSBhcmVhcy4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBjb2xkIGFpciBmcm9tIHRoZSAgIHBvbGVzIGRlc2NlbmRzIGFuZCBmbG93cyB0b3dhcmRzIHRoZSBzdWJwb2xhciAgIGxvdy1wcmVzc3VyZSBiZWx0LiBIZW5jZSwgdGhlIHBvbGFyIGNlbGwgaXMgY3JlYXRlZCAgIGFyb3VuZCB0aGUgc3VicG9sYXIgbG93LXByZXNzdXJlIGJlbHRzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2, and 3   "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements:  1. The atmospheric air circulation plays an important  role in the transfer of energy to oceans.  2. There is a unidirectional transfer of energy from  the atmospheric air to the ocean currents.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQz",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgZ2VuZXJhbCBhaXIgY2lyY3VsYXRpb24gICBvZiB0aGUgYXRtb3NwaGVyZSBhbHNvIGRyaXZlcyB0aGUgY2lyY3VsYXRpb24gb2YgICBvY2VhbiB3YXRlcnMgYW5kIGhlbmNlIHBsYXlzIGFuIGltcG9ydGFudCByb2xlIGluICAgY2lyY3VsYXRpbmcgdGhlIGhlYXQgdG8gdGhlIGVudGlyZSBzdXJmYWNlIG9mIHRoZSAgIEVhcnRoLiBJdCBtYWludGFpbnMgdGhlIGNpcmN1bGF0aW9uIG9mIGNvbGQgYWlyIGZyb20gICBoaWdoIHRvIGxvdyBsYXRpdHVkZXMgYW5kIHZpY2UgdmVyc2EgdGhlcmVieSAgIGNyZWF0aW5nIGEgYmFsYW5jZWQgY29uZGl0aW9uLiAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIGludGVyYWN0aW9uIGJldHdlZW4gICB0aGUgb2NlYW4gYW5kIHRoZSBhaXIgaW4gdGhlIGF0bW9zcGhlcmUgaXMgbm90ICAgdW5pZGlyZWN0aW9uYWwuIFRoZSBvY2VhbnMgYWxzbyBwbGF5IGEgcm9sZSBpbiB0aGUgICB0cmFuc2ZlciBvZiBlbmVyZ3kgYW5kIHdhdGVyIHZhcG9yIHRvIHRoZSBhaXIgbWFzcy4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements:  1. The El Nino event is marked by the absence of cool  Peruvian currents.  2. Strong Tropical Jet streams over Tibet are  responsible for strong monsoons in India.  3. Southern Oscillations are marked by the changes  around Indian Ocean north of Australia.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ0",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBFbCBOaW5vIGlzIGFzc29jaWF0ZWQgd2l0aCAgIHRoZSB3YXJtaW5nIGFuZCBjb29saW5nIG9mIHRoZSB3YXRlcnMgb2YgdGhlICAgUGFjaWZpYyBPY2Vhbi4gVGhlIHdhcm0gcGFjaWZpYyB3YXRlciBtb3ZlcyAgIHRvd2FyZHMgdGhlIFBlcnV2aWFuIGNvYXN0IG9mIFNvdXRoIEFtZXJpY2EgYW5kICAgcmVwbGFjZXMgaXRzIGNvbGQgY29hc3RhbCB3YXRlcnMgd2l0aCB0aGUgd2FybSAgIHdhdGVycyBvZmYgdGhlIGNvYXN0IG9mIFBlcnUuIFRoaXMgZXZlbnQgaXMgcmVmZXJyZWQgICB0byBhcyBFbCBOaW5vLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBOb3J0aGVybiBtb3ZlbWVudCBvZiBzdW4gICB0byB0aGUgVHJvcGljIG9mIENhbmNlciBpbiBzdW1tZXJzIGlzIHJlc3BvbnNpYmxlICAgZm9yIHRoZSBoZWF0aW5nIG9mIHRoZSBUaWJldGFuIFBsYXRlYXUgYW5kIGNyZWF0aW9uICAgb2YgTG93IHByZXNzdXJlIHdoaWNoIGNhdXNlcyB0aGUgYWlyIHRvIHJpc2UgYWJvdmUuICAgVGhpcyBjcmVhdGVzIGEgc3Ryb25nIFRyb3BpY2FsIEpldCBTdHJlYW0gb3ZlciBUaWJldCAgIHdoaWNoIGlzIHRlbXBvcmFyeS4gVGhlIHN0cm9uZ2VyIHRoZSBUcm9waWNhbCBKZXQgICAgICAuICAgICAgICAgIFN0cmVhbXMgdGhlIG1vcmUgcHJvbm91bmNlZCBpcyB0aGUgSW5kaWFuICAgTW9uc29vbi4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6VGhlIEVsIE5pbm8gZXZlbnQgaXMgdmVyeSAgIGNsb3NlbHkgcmVsYXRlZCB0byB0aGUgZXZlbnQgb2YgU291dGhlcm4gICBPc2NpbGxhdGlvbnMuIEl0IGlzIGFzc29jaWF0ZWQgd2l0aCBjaGFuZ2VzIGFyb3VuZCAgIHRoZSBDZW50cmFsIFBhY2lmaWMgT2NlYW4gYW5kIEF1c3RyYWxpYS4gVGhlICAgY29tYmluZWQgZWZmZWN0IG9mIEVsIE5pbm8gYW5kIHNvdXRoZXJuICAgT3NjaWxsYXRpb24gKEVOU08pIGlzIHJlc3BvbnNpYmxlIGZvciBjYXVzaW5nIHJhaW5zICAgaW4gU291dGggQW1lcmljYSwgZmxvb2RzIGluIENoaW5hLCBhbmQgZHJvdWdodHMgb3IgICBsYWNrIG9mIG1vbnNvb24gaW4gQXVzdHJhbGlhIGFuZCBJbmRpYS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 only  ",
        "option4" : "3 only   "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements:  1. During afternoons, pressure gradient exists from  land to sea.  2. Warm dry winds along the leeward side of the  mountains are referred to as Katabatic winds.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ1",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IExhbmQgaGFzIGEgcHJvcGVydHkgb2YgICBnZXR0aW5nIGhlYXRlZCBhbmQgY29vbGVkIGZhc3RlciBhcyBjb21wYXJlZCB0byAgIHNlYS4gSGVuY2UsIGR1cmluZyB0aGUgZGF5dGltZSwgdGhlIGxhbmQgZ2V0cyAgIHF1aWNrbHkgaGVhdGVkIHVwIGFuZCBjcmVhdGVzIGEgbG93IHByZXNzdXJlICAgd2hlcmVhcyB0aGUgc2VhIGhhcyBoaWdoIHByZXNzdXJlLiBUaGVyZWZvcmUsIHRoZSAgIGFpciB0ZW5kcyB0byBibG93IGZyb20gdGhlIHNlYSB0byBsYW5kIGFzIHRoZSAgIHByZXNzdXJlIGdyYWRpZW50IGV4aXN0cyBmcm9tIHNlYSB0byBsYW5kLiBXaGVyZWFzICAgb24gdGhlIG90aGVyIGhhbmQsIGR1cmluZyB0aGUgbmlnaHQsIHRoZSBsYW5kIGdldHMgICBjb29sZWQgdmVyeSBxdWlja2x5IGNhdXNpbmcgdGhlIGFpciB0byBmbG93IGZyb20gICBsYW5kIHRvIHNlYS4gICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OkthdGFiYXRpYyB3aW5kcyBhcmUgY29sZCAgIGRlbnNlIGFpciB3aGljaCBmbG93IGRvd24gdGhlIHZhbGxleXMgb3IgICBtb3VudGFpbnMgZHVyaW5nIHRoZSBuaWdodC4gVGhlIG1vaXN0dXJlIGxhZGVuICAgd2luZHMgd2hlbiBjcm9zc2luZyBhIG1vdW50YWluIGNhdXNlICAgY29uZGVuc2F0aW9uIGFuZCBwcmVjaXBpdGF0aW9uLiBPbiB0aGUgbGVld2FyZCAgIHNpZGUgdGhlc2Ugd2luZHMgYXJlIGRyeSBhbmQgd2hpbGUgZGVzY2VuZGluZyB0aGV5ICAgYXJlIHdhcm1lZCB1cCBieSB0aGUgYWRpYWJhdGljIHByb2Nlc3MuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements regarding  fronts:  1. Warm fronts are formed when a warm air mass  pushes and uplifts the colder one.  2. Fronts are the areas of sharp changes in  temperature and pressure.  3. Occluded fronts are formed when two cold air  masses uplift a comparatively cooler air mass.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ2",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IEZyb250cyBhcmUgZm9ybWVkIHdoZW4gICB0d28gYWlyIG1hc3NlcyBtZWV0IGVhY2ggb3RoZXIuIEF0IHRoZSB6b25lIG9mICAgdGhlaXIgbWVldGluZyBmcm9udHMgYXJlIGZvcm1lZC4gRnJvbnRzIGNvdWxkIGJlICAgZWl0aGVyIGNvbGQgb3Igd2FybS4gV2FybSBmcm9udHMgYXJlIGZvcm1lZCB3aGVuICAgYSB3YXJtIGFpciBtYXNzIHB1c2hlcyBhIGNvbGQgYWlyIG1hc3MgYW5kIGNhdXNlcyAgIHRoZSB1cGxpZnRtZW50IG9mIHRoZSB3YXJtIGFpciBtYXNzLiBBIGNvbGQgZnJvbnQgaXMgICBmb3JtZWQgd2hlbiBhIGNvbGQgYWlyIG1hc3MgcHVzaGVzIGFuZCB1cGxpZnRzIHRoZSAgIHdhcm0gYWlyIG1hc3MuIEZyb250cyBhcmUgZm9ybWVkIGluIHRoZSBtaWQgICBsYXRpdHVkZXMuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXQgdGhlIGZyb250cywgdGhlcmUgb2NjdXJzICAgc2hhcnAgY2hhbmdlcyBpbiB0ZW1wZXJhdHVyZSBhbmQgcHJlY2lwaXRhdGlvbi4gICBUaGUgcmlzaW5nIHdhcm0gYWlyIGZvcm1zIGNsb3VkcyBhbmQgY2F1c2VzICAgcHJlY2lwaXRhdGlvbi4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IE9jY2x1ZGVkIGZyb250cyBhcmUgICBmb3JtZWQgd2hlbiB0d28gY29sZCBhaXIgbWFzc2VzIGNvbWUgdG9nZXRoZXIgICBhbmQgcHVzaCB3YXJtIGFpciBtYXNzZXMgaW4gYmV0d2VlbiB0aGVtICAgY2F1c2luZyByaXNpbmcgYWlyIGFuZCBwcmVjaXBpdGF0aW9uLiBIZW5jZSwgaW4gY2FzZSAgIG9mIGFuIG9jY2x1ZGVkIGZyb250LCB0aGUgYWlyIG1hc3MgaXMgbGlmdGVkIGZ1bGx5ICAgYWJvdmUgdGhlIGdyb3VuZC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 47,
      "question" : "Which among the following statements is most  appropriate regarding the Extra tropical cyclones?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ3",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgQSBpcyBpbmNvcnJlY3Q6IFRoZSBleHRyYSB0cm9waWNhbCAgIGN5Y2xvbmVzIGFyZSBvZiBmcm9udGFsIG9yaWdpbiBhbmQgYXJlIGR5bmFtaWNhbGx5ICAgaW5kdWNlZC4gVGhleSBhcmUgZm9ybWVkIGluIHRoZSBtaWQgbGF0aXR1ZGVzICAgd2hlbiBkaWZmZXJlbnQgYWlyIG1hc3NlcyBtZWV0IGVhY2ggb3RoZXIuIFRoZXkgICBtb3ZlIGluIHRoZSBkaXJlY3Rpb24gZnJvbSB3ZXN0IHRvIGVhc3QuICAgKC0pU3RhdGVtZW50IEIgaXMgaW5jb3JyZWN0OiBBdCB0aGUgaW5pdGlhbCBzdGFnZSwgdGhlcmUgICBpcyBhIGZvcm1hdGlvbiBvZiBzdGF0aW9uYXJ5IGZyb250cy4gT2NjbHVkZWQgZnJvbnRzICAgYXJlIGZvcm1lZCBub3QgaW5pdGlhbGx5IGJ1dCB0b3dhcmRzIGEgbGF0ZXIgc3RhZ2UuICAgKC0pU3RhdGVtZW50IEMgaXMgaW5jb3JyZWN0OiBUaGUgZXh0cmEgdHJvcGljYWwgICBjeWNsb25lcyBhcmUga25vd24gdG8gY292ZXIgYSBncmVhdGVyIGdlb2dyYXBoaWNhbCAgIGFyZWEgYW5kIGFyZSBsZXNzIGRlc3RydWN0aXZlIGNvbXBhcmVkIHRvIHRoZSAgIHRyb3BpY2FsIGN5Y2xvbmVzLiAgICgtKVN0YXRlbWVudCBEIGlzIGNvcnJlY3Q6IFRoZSBleHRyYSB0cm9waWNhbCBjeWNsb25lcyAgIG93aW5nIHRvIHRoZWlyIGZyb250YWwgb3JpZ2luIGNhbiBvcmlnaW5hdGUgZWl0aGVyIG9uICAgdGhlIGxhbmQgb3Igb24gdGhlIHNlYS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "They are thermally induced low pressure areas   which move from west to east.  ",
        "option2" : "They are initiated with the creation of an occluded   front in the mid latitudes.  ",
        "option3" : "They cover a small geographical area and inflict   maximum damage to it.  ",
        "option4" : "These cyclones have the capacity to originate on   the land surface.   "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements regarding  tropical cyclones:  1. They are thermally induced low-pressure systems  travelling in the eastward direction.  2. They can originate on the surface of a water body  only.  3. They do not require any prior low pressure in the  region of their formation.  4. The tropical cyclones formed at the Equator are  most destructive in nature.  Select the incorrect Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ4",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSB0cm9waWNhbCBjeWNsb25lcyAgIGFyZSB0aGVybWFsbHkgaW5kdWNlZCBsb3cgcHJlc3N1cmUgc3lzdGVtcy4gVGhleSAgIHRyYXZlbCBpbiB0aGUgRWFzdCB0byB3ZXN0IGRpcmVjdGlvbi4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZXNzZW50aWFsIHByZXJlcXVpc2l0ZSAgIGZvciB0aGUgZm9ybWF0aW9uIG9mIHRoZSB0cm9waWNhbCBjeWNsb25lcyBpcyB0aGUgICBsYXJnZSBzZWEgc3VyZmFjZSB3aXRoIGEgdGVtcGVyYXR1cmUgZ3JlYXRlciB0aGFuICAgMjdkZWcgQ2VsY2l1cy4gVGhleSBhcmUgbm90IGZvcm1lZCBvbiBsYW5kIGFuZCBvbiByZWFjaGluZyAgIHRoZSBsYW5kIHN1cmZhY2UsIHRoZXkgZGllIG91dCBhbmQgbG9zZSB0aGVpciBlbmVyZ3kuICAgKC0pU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBBIHByaW9yIGxvdyBwcmVzc3VyZSBhaXIgICBvciBhIHdlYWsgcHJlLWV4aXN0aW5nIGN5Y2xvbmljIHN5c3RlbSBpcyByZXF1aXJlZCAgIGZvciB0aGVpciBmb3JtYXRpb24uIFRoZXkgYWxzbyByZXF1aXJlIHRoZSB1cHBlciAgIGRpdmVyZ2VuY2UgYWJvdmUgdGhlIHNlYSBzeXN0ZW0uICAgKC0pU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBUcm9waWNhbCBjeWNsb25lcyBjYW5ub3QgICBiZSBmb3JtZWQgYXQgdGhlIEVxdWF0b3IgYXMgQ29yaW9saXMgZm9yY2UgaXMgemVybyBhdCAgIHRoZSBFcXVhdG9yLiBIZW5jZSwgcHJlc2VuY2Ugb2YgQ29yaW9saXMgZm9yY2UgaXMgICBhbm90aGVyIGNvbmRpdGlvbiBmb3IgdGhlaXIgZm9ybWF0aW9uLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "2, 3 and 4 only  ",
        "option2" : "1, 3, and 4 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements regarding  cyclones in India:  1. Frequency of cyclones is more in the Bay of Bengal  while destructivity is more of the Arabian sea  cyclones.  2. The lack of influx of freshwater on the Arabian Sea  is an important reason for its low cyclonic activity.  3. Occurrence of Simultaneous cyclones is  responsible for the rise in the Accumulated Cyclone  Energy.  . Select the correct statements using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDQ5",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBGcmVxdWVuY3kgYW5kICAgZGVzdHJ1Y3Rpdml0eSBvZiBjeWNsb25lcyBhcmUgZ3JlYXRlciBpbiB0aGUgQmF5IG9mICAgQmVuZ2FsIGFzIGFnYWluc3QgdGhlIEFyYWJpYW4gU2VhLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFNpbmNlIG1vc3Qgb2YgdGhlIHJpdmVycyBhcmUgICBlYXN0IGZsb3dpbmcgaW4gdGhlIHBlbmluc3VsYXIgcGFydC4gVGhlcmUgaXMgYSAgIGNvbnRpbnVvdXMgbWl4aW5nIG9mIHRoZSBmcmVzaHdhdGVyIG9mIHRoZSByaXZlcnMgICB3aXRoIHRoYXQgb2YgdGhlIG9jZWFuIHdhdGVyIGluIHRoZSBCYXkgb2YgQmVuZ2FsICAgcmVnaW9uIGFuZCBoZW5jZSBtaXhpbmcgd2l0aCB0aGUgY29sZCBib3R0b20gICB3YXRlciBpcyBwcmV2ZW50ZWQgdG8gc29tZSBleHRlbnQuIFRoaXMga2VlcHMgdGhlICAgc3VyZmFjZSB3YXRlciB3YXJtZXIgZm9yIHRoZSBjeWNsb25lIGZvcm1hdGlvbi4gICAoLSlTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OkFjY3VtdWxhdGVkIEN5Y2xvbmUgICBFbmVyZ3kgKEFDRSkgaXMgdGhlIG1lYXN1cmUgb2YgdGhlIGRlc3RydWN0aXZlbmVzcyAgIG9mIGEgY3ljbG9uZS4gVHdvIG9yIG1vcmUgY3ljbG9uZXMgb2NjdXJyaW5nICAgICAgLiAgICAgICAgICB0b2dldGhlciBoYXZlIGdyZWF0ZXIgQUNFIGFuZCBhcmUgbW9yZSAgIGRlc3RydWN0aXZlLiBFdmVudHMgb2Ygc2ltdWx0YW5lb3VzIGN5Y2xvbmVzIHdlcmUgICB3aXRuZXNzZWQgaW4gdGhlIEFyYWJpYW4gU2VhIHJlY2VudGx5LiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "None of the Above   "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements:  1. The World Meteorological Organization and the  UNESCAP initiated the system for naming cyclones.  2. Arabian sea is a closed sea with favourable  conditions for cyclogenesis.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDUw",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBXb3JsZCBNZXRlb3JvbG9naWNhbCAgIE9yZ2FuaXphdGlvbiBhbmQgdGhlIFVuaXRlZCBOYXRpb25zIEVjb25vbWljICAgYW5kIFNvY2lhbCBDb21taXNzaW9uIGZvciBBc2lhIGFuZCBQYWNpZmljIGFyZSAgIHJlc3BvbnNpYmxlIGZvciBpbml0aWF0aW5nIGEgc3lzdGVtIGZvciB0aGUgbmFtaW5nICAgb2YgdGhlIEN5Y2xvbmUuIEFzIHBlciB0aGlzIHN5c3RlbSwgZWlnaHQgY291bnRyaWVzICAgKEJhbmdsYWRlc2gsIEluZGlhLCBNYWxkaXZlcywgTXlhbm1hciwgVGhhaWxhbmQsICAgU3JpIExhbmthLCBQYWtpc3RhbiwgYW5kIE9tYW4pIGFyb3VuZCB0aGUgSW5kaWFuICAgT2NlYW4gZ2l2ZSBhIGxpc3Qgb2YgbmFtZXMgd2hpY2ggYXJlIHVzZWQgZm9yICAgbmFtaW5nIG9mIHRoZSBjeWNsb25lcy4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBcmFiaWFuIFNlYSBpcyBjb25zaWRlcmVkICAgYXMgYSBjbG9zZWQgc2VhIGFuZCBpcyBoZW5jZSBmYXZvdXJhYmxlIGZvciB0aGUgICBmb3JtYXRpb24gb2YgY3ljbG9uZXMuIEJheSBvZiBCZW5nYWwgaXMgcmVnYXJkZWQgYXMgICBhbiBvcGVuIHNlYS4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 51,
      "question" : "Consider the following statements:  1. Warm air fronts are more frequent in the areas  around the Equatorial forests.  2. The eye of a cyclone is an intense high-pressure  area with subsiding air.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDUx",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBGcm9udHMgYXJlIG5vdCBmb3JtZWQgYXQgICB0aGUgbG93ZXIgbGF0aXR1ZGVzLiBUaGV5IGFyZSBmb3JtZWQgb25seSBpbiB0aGUgICBtaWQgbGF0aXR1ZGVzLiBIZW5jZSwgd2FybSBmcm9udHMgY2Fubm90IGJlICAgZm9ybWVkIGFyb3VuZCB0aGUgRXF1YXRvcmlhbCBmb3Jlc3RzLiAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlIGNlbnRlciBvZiBhIGN5Y2xvbmljICAgc3lzdGVtIGNvbnRhaW5zIGEgcmVnaW9uIG9mIGludGVuc2UgY2FsbSBhbmQgICBzdWJzaWRpbmcgYWlyLiBUaGlzIGlzIGEgbmFycm93IGxvdyBwcmVzc3VyZSBhcmVhLiAgIFRoaXMgYXJlYSBpcyBvZnRlbiBjb25mdXNlZCB3aXRoIHRoZSBlbmQgb2YgdGhlICAgY3ljbG9uZSB3aGlsZSB0aGUgb3RoZXIgaGFsZiBzdGlsbCByZW1haW5zLiAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 52,
      "question" : "Consider the following statements:  1. The anticyclonic winds in the Southern hemisphere  move in the anticlockwise direction.  2. The pressure gradient force is greater horizontally  than vertically.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDUy",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgYW50aWN5Y2xvbmljIHByZXNzdXJlICAgc3lzdGVtcyBhcmUgY2hhcmFjdGVyaXplZCBieSB3aW5kcyBtb3ZpbmcgICBjbG9ja3dpc2UgaW4gdGhlIE5vcnRoZXJuIEhlbWlzcGhlcmUgYW5kICAgYW50aWNsb2Nrd2lzZSBpbiB0aGUgc291dGhlcm4gSGVtaXNwaGVyZS4gICBUaGUgY3ljbG9uaWMgcHJlc3N1cmUgc3lzdGVtcyBhcmUgY2hhcmFjdGVyaXplZCAgIGJ5IGFudGljbG9ja3dpc2Ugd2luZHMgaW4gdGhlIE5vcnRoZXJuICAgSGVtaXNwaGVyZSBhbmQgY2xvY2t3aXNlIHdpbmRzIGluIHRoZSBTb3V0aGVybiAgIEhlbWlzcGhlcmUuICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OlRoZSB2ZXJ0aWNhbCBwcmVzc3VyZSAgIGdyYWRpZW50IGlzIGFsd2F5cyBtb3JlIHByb25vdW5jZWQgYXMgY29tcGFyZWQgICB0byB0aGUgaG9yaXpvbnRhbCBwcmVzc3VyZSBncmFkaWVudC4gSG93ZXZlciwgdGhlICAgdmVydGljYWwgcHJlc3N1cmUgZ3JhZGllbnQgaXMgYmFsYW5jZWQgYnkgdGhlICAgcHJlc2VuY2Ugb2YgZ3Jhdml0eS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 53,
      "question" : "Consider the following statements:  1. Tide is a periodic rise and fall of sea level once or  twice a day, mainly because of the pull of the moon  or the sun.  2. Surges are movement of water caused by winds  and atmospheric pressure changes.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDUz",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgbW9vbidzIGdyYXZpdGF0aW9uYWwgICBwdWxsIHRvIGEgZ3JlYXQgZXh0ZW50IGFuZCB0byBhIGxlc3NlciBleHRlbnQsIHRoZSAgIHN1bidzIGdyYXZpdGF0aW9uYWwgcHVsbCBhcmUgdGhlIG1haW4gcmVhc29ucyAgIGJlaGluZCB0aWRlcy4gQW5vdGhlciBmYWN0b3IgaXMgdGhlIGNlbnRyaWZ1Z2FsIGZvcmNlICAgd2hpY2ggYWN0cyB0byBjb3VudGVyIHRoZSBncmF2aXRhdGlvbmFsIHB1bGwsIGFuZCAgIHRoZSB0d28gdG9nZXRoZXIgYXJlIHJlc3BvbnNpYmxlIGZvciBjcmVhdGluZyB0d28gICBtYWpvciB0aWRhbCBidWxnZXMuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogTW92ZW1lbnQgb2Ygd2F0ZXIgY2F1c2VkICAgYnkgbWV0ZW9yb2xvZ2ljYWwgZWZmZWN0cyBhcmUgY2FsbGVkIFN1cmdlcy4gVGhleSAgIGFyZSBkaWZmZXJlbnQgZnJvbSB0aWRlcyBiZWNhdXNlIHRoZXkgZG8gbm90ICAgb3JpZ2luYXRlIGZyb20gZ3Jhdml0YXRpb25hbCBwdWxsLiBUaGV5IGFyZSB0aGUgICByZXN1bHQgb2Ygd2luZHMgYW5kIHByZXNzdXJlIGNoYW5nZXMgaW4gdGhlICAgYXRtb3NwaGVyZS4gVGhleSBhcmUgbm90IHJlZ3VsYXIgbGlrZSB0aWRlcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 54,
      "question" : "Which of the following factors can affect the  temperature distribution in the oceans?  1. Latitude  2. Distribution of sea and water  3. Prevailing wind  4. Ocean current  Select the correct Answer using the codes given  below:    ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU0",
      "description" : "IEV4cDogICAgKC0pTGF0aXR1ZGUgLSBUaGUgdGVtcGVyYXR1cmUgb2Ygb2NlYW4gd2F0ZXIgICBkZWNyZWFzZXMgZnJvbSB0aGUgZXF1YXRvciB0b3dhcmRzIHRoZSAgIHBvbGVzIGJlY2F1c2UgdGhlIGFtb3VudCBvZiBpbnNvbGF0aW9uIGRlY3JlYXNlcyAgIGFzIHdlIG1vdmUgcG9sZXdhcmQuIFRoZSBvY2VhbnMgaW4gdGhlIG5vcnRoZXJuICAgaGVtaXNwaGVyZSByZWNvcmQgcmVsYXRpdmVseSBoaWdoZXIgdGVtcGVyYXR1cmVzICAgdGhhbiBpbiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZSBiZWNhdXNlIG9mIHRoZSAgIGNvbmNlbnRyYXRpb24gb2YgbGFuZG1hc3MgaW4gdGhlIG5vcnRoLiAgIFRoZSBoaWdoZXN0IHRlbXBlcmF0dXJlIGlzIHJlY29yZGVkIG5vdCBhdCB0aGUgICBlcXVhdG9yIGJ1dCBzbGlnaHRseSBub3J0aCBvZiBpdC4gICAoLSlMYW5kLXdhdGVyIGRpc3RyaWJ1dGlvbiAtIEluIHRoZSBub3J0aGVybiAgIGhlbWlzcGhlcmUgdGhlIG9jZWFucyByZWNlaXZlIG1vcmUgaGVhdCBkdWUgdG8gICB0aGVpciBjb250YWN0IHdpdGggYSBsYXJnZXIgZXh0ZW50IG9mIGxhbmQgdGhhbiB0aGUgICBvY2VhbnMgaW4gdGhlIHNvdXRoZXJuIGhlbWlzcGhlcmUuIEFzIGxhbmQgaGVhdHMgICBmYXN0ZXIgYW5kIGNvb2xzIGRvd24gZmFzdGVyIHRoYW4gd2F0ZXIsIHRoZSAgIHN1cnJvdW5kaW5nIHdhdGVycyBhcmUgaW1wYWN0ZWQgYWNjb3JkaW5nbHkuICAgKC0pUHJldmFpbGluZyB3aW5kcyAtIFRoZSB3aW5kcyBibG93aW5nIGZyb20gdGhlICAgbGFuZCB0b3dhcmRzIHRoZSBvY2VhbnMgZHJpdmUgd2FybSBzdXJmYWNlIHdhdGVyICAgYXdheSBmcm9tIHRoZSBjb2FzdCByZXN1bHRpbmcgaW4gdGhlIHVwd2VsbGluZyBvZiAgIGNvbGQgd2F0ZXIgZnJvbSBiZWxvdy4gSXQgcmVzdWx0cyBpbiBsb25naXR1ZGluYWwgICB2YXJpYXRpb24gaW4gdGhlIHRlbXBlcmF0dXJlLiAgQ29udHJhcnkgdG8gICB0aGlzIG9uc2hvcmUgd2luZHMgcGlsZSB1cCB3YXJtIHdhdGVyIG5lYXIgdGhlICAgY29hc3QgYW5kIHRoaXMgcmFpc2VzIHRlbXBlcmF0dXJlLiAgICAoLSlPY2VhbiBjdXJyZW50cyAtICBXYXJtIG9jZWFuIGN1cnJlbnRzIHJhaXNlIHRoZSAgIHRlbXBlcmF0dXJlIGluIGNvbGQgYXJlYXMgd2hpbGUgY29sZCBjdXJyZW50cyAgIGRlY3JlYXNlIHRoZSB0ZW1wZXJhdHVyZSBpbiB3YXJtIG9jZWFuICAgd2F0ZXJzLiBUaGUgR3VsZiBzdHJlYW0gZW5zdXJlcyBjb3VudHJpZXMgb2YgICB3ZXN0ZXJuIEV1cm9wZSBoYXZlIGFjY2VzcyB0byB3YXJtIHdhdGVyIHBvcnRzICAgdGhyb3VnaG91dCB0aGUgeWVhci4gV2hpbGUgdGhlIG95YXNoaW8gY3VycmVudCAgIGZyZWV6ZXMgdGhlIHdhdGVycyBpbiBFYXN0ZXJuIFJ1c3NpYS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "3 and 4 only  ",
        "option3" : "1,3, and 4 only  ",
        "option4" : "1, 2,3 and 4   "
      }
    },
    {
      "index" : 55,
      "question" : "With reference to the vertical and horizontal  distribution of water, consider the following  statements:  1. Thermocline is a layer of water in the ocean where  the temperature decreases rapidly with increase in  depth.  2. The highest surface temperature of the ocean is  recorded at the equator as it is directly under the  sun.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU1",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IC0gVGhlcmUgaXMgYSBib3VuZGFyeSBsYXllciAgIG9mIHdhdGVyIGJldHdlZW4gdGhlIHN1cmZhY2UgYW5kIHRoZSBkZWVwZXIgICBsYXllcnMuIFRoaXMgYm91bmRhcnkgbGF5ZXIgb2Ygd2F0ZXIgd2l0bmVzc2VzICAgcmFwaWQgZGVjcmVhc2Ugb2YgdGVtcGVyYXR1cmUgYW5kIGlzIGNhbGxlZCAgIFRIRVJNT0NMSU5FLiBUaGUgYm91bmRhcnkgYmVnaW5zIGFyb3VuZCAxMDAtICA0MDBtIGJlbG93IHRoZSBzZWEgc3VyZmFjZSBhbmQgZXh0ZW5kcyBzZXZlcmFsICAgICAgLiAgICAgICAgICBtZXRlcnMgZG93bi4gVGhlIHJhdGUgb2YgZGVjcmVhc2Ugb2YgdGVtcGVyYXR1cmUgICB3aXRoIGluY3JlYXNpbmcgbGF0aXR1ZGUgaXMgMC41IGRlZ3JlZXMgcGVyIGxhdGl0dWRlLiAgIFRoZSBhdmcgdGVtcGVyYXR1cmUgb2Ygc3VyZmFjZSB3YXRlcnMgaXMgYXJvdW5kICAgMjcgZGVncmVlcy4gICAoLSlTdGF0ZW1lbnQgMiBpcyBJbmNvcnJlY3QgLSBBdCB0aGUgZXF1YXRvciB0aGVyZSBpcyAgIHN0cm9uZyBldmFwb3JhdGlvbiwgY2xvdWQgZm9ybWF0aW9uIGFuZCByYWluICAgd2hpY2ggYnJpbmdzIHRoZSB0ZW1wZXJhdHVyZSBkb3duLiBQbHVzLCB0aGVyZSBpcyAgIHVwd2VsbGluZyBkdWUgdG8gZXZhcG9yYXRpb24gd2hpY2ggYnJpbmdzIGNvbGRlciAgIHNlYSB3YXRlciB0byB0aGUgc3VyZmFjZSBmcm9tIHRoZSBkZWVwLiBIZW5jZSAgIHRyb3BpY2FsIHdhdGVycyB3aXRoIGxpdHRsZSBjbG91ZCBjb3ZlciBhbmQgICB1cHdlbGxpbmcgYXJlIHdhcm1lciB0aGFuIGVxdWF0b3JpYWwgd2F0ZXJzLiAgIChVbmRlcnN0YW5kIGVxdWF0b3JpYWwgYXMgYmV0d2VlbiAwIHRvIDEwIGRlZ3JlZXMgICBOL1Mgd2hpbGUgdHJvcGljYWwgYXMgYmV0d2VlbiB0aGUgdHdvIHRyb3BpY3MuKSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 56,
      "question" : "With reference to salinity of water, which of the  following statements is/are incorrect?  1. Salinity at the surface increases by the loss of water  to ice or evaporation.  2. Any change in the temperature or density  influences the salinity of water in an area.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU2",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBDb3JyZWN0OiBTYWxpbml0eSBpcyBtZWFzdXJlZCBpbiAgICdwYXJ0cyBwZXIgdGhvdXNhbmQnLiBJdCBpcyBjYWxjdWxhdGVkIGFzIHRoZSBhbW91bnQgICBvZiBzYWx0IGRpc3NvbHZlZCBpbiAxMDAwZ20gb2Ygc2Vhd2F0ZXIuIFRoZSAgIHNhbGluaXR5IG9mIHdhdGVyIGluIHRoZSBzdXJmYWNlIGxheWVycyBvZiB0aGUgb2NlYW4gICBkZXBlbmQgbWFpbmx5IG9uIGV2YXBvcmF0aW9uIGFuZCBwcmVjaXBpdGF0aW9uLiAgIEFzIHRoZSB3YXRlciBldmFwb3JhdGVzIG9yIHR1cm5zIGludG8gaWNlLCB0aGUgc2FsdCAgIHBhcnRpY2xlcyByZW1haW4gZnJlZSBvZiB3YXRlciBtb2xlY3VsZXMgYW5kIHRodXMgICB0aGUgc2FsaW5pdHkgaW5jcmVhc2VzLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBDb3JyZWN0OiBUaGUgb2NlYW4gY3VycmVudHMgICBjb250cmlidXRlIHRvIHRoZSBzYWxpbml0eSB2YXJpYXRpb25zLiBTYWxpbnVpdHksICAgdGVtcGVyYXR1cmUgYW5kIGRlbnNpdHkgb2Ygd2F0ZXIgYXJlIGludGVycmVsYXRlZC4gICBIZW5jZSwgQW55IGNoYW5nZSBpbiB0aGUgdGVtcGVyYXR1cmUgb3IgZGVuc2l0eSAgIGluZmx1ZW5jZXMgdGhlIHNhbGluaXR5IG9mIHdhdGVyIGluIGFuIGFyZWEuIFNhbGluaXR5ICAgdXN1YWxseSBpbmNyZWFzZXMgd2l0aCBkZW5zaXR5IGllLiwgdGhlcmUgaXMgYSBwb3NpdGl2ZSAgIGNvcnJlbGF0aW9uIGJldHdlZW4gdGhlIHR3by4gSW4gYSB6b25lIGNhbGxlZCAgIEhBTE9DTElORSwgc2FsaW5pdHkgaW5jcmVhc2VzIHZlcnkgc2hhcnBseS4gVGhlICAgZGVuc2VyIGxheWVycyBvZiB3YXRlciBzaW5rIGFuZCB0aGlzIG1lYW5zIHRoYXQgICB3aXRoIGRlcHRoLCBzYWxpbml0eSB3aWxsIGluY3JlYXNlLiBUaGlzIGxlYWRzIHRvICAgc3RyYXRpZmljYXRpb24gYnkgc2FsaW5pdHkuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 57,
      "question" : "In the context of ocean salinity, consider the  following factors:  1. Evaporation and precipitation  2. Freezing and thawing of ice  3. Inflow of fresh water  4. Wind  5. Ocean currents  Which of the above factors can affect the salinity  distribution in the oceans?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU3",
      "description" : "IEV4cDogICAoLSlGYWN0b3JzIEFmZmVjdGluZyBPY2VhbiBTYWxpbml0eSAgICAoLSlFdmFwb3JhdGlvbiBhbmQgcHJlY2lwaXRhdGlvbiAtIEV2YXBvcmF0aW9uIGFuZCAgIHByZWNpcGl0YXRpb24gc2ltdWx0YW5lb3VzbHkgYWRkcyBvciByZWR1Y2VzIHRoZSAgIHNhbHQgY29udGVudCBpbiB0aGUgb2NlYW5zIHRodXMgaW5jcmVhc2luZyBvciAgIHJlZHVjaW5nIHRoZSBzYWxpbml0eS4gRHVlIHRvIGV2YXBvcmF0aW9uLCBzYWx0ICAgcGFydGljbGVzIGFyZSBsZWZ0IGJlaGluZCBpbiB0aGUgb2NlYW4gYW5kIHRodXMgICBzYWxpbml0eSBpbmNyZWFzZXMuIFdoaWxlIHByZWNpcGl0YXRpb24gaW5jcmVhc2VzIHRoZSAgIGFtb3VudCBvZiBmcmVzaHdhdGVyLCB0aHVzIHJlZHVjaW5nIHNhbGluaXR5LiAgICgtKUZyZWV6aW5nIGFuZCB0aGF3aW5nIG9mIGljZSAtIEZyZWV6aW5nIGFuZCB0aGF3aW5nICAgb2YgaWNlIHNpbXVsdGFuZW91c2x5IGluY3JlYXNlcyBhbmQgcmVkdWNlcyB0aGUgICBzYWx0IGNvbnRlbnQgaW4gdGhlIGxpcXVpZCB3YXRlciwgdGh1cyBhZmZlY3RpbmcgICBzYWxpbml0eS4gV2hlbiBvY2VhbiB3YXRlciBmcmVlemVzLCB0aGUgc2FsdCAgIHBhcnRpY2xlcyByZW1haW4gZnJlZSBvZiBpY2UgYW5kIHRoZSB3YXRlciB0aGF0IGlzICAgZnJvemVuIGlzIG1vc3RseSBmcmVzaHdhdGVyLiBGcmVlemluZyBpbmNyZWFzZXMgdGhlICAgc2FsdCBjb250ZW50IHdoaWxlIHRoYXdpbmcgYWRkcyBmcmVzaHdhdGVyIGFuZCAgIHJlZHVjZXMgc2FsaW5pdHkuICAgKC0pSW5mbG93IG9mIGZyZXNoIHdhdGVyIC0gSXQgcmVkdWNlcyB0aGUgc2FsaW5pdHkgYXMgaXMgICB3aXRuZXNzZWQgaW4gdGhlIGNhc2Ugb2YgQmxhY2sgc2VhIChWb2xnYSwgRG5pZXBlciAgIGV0YyBkcmFpbiBpbnRvIGl0KSBhbmQgQmF5IG9mIEJlbmdhbC4gVGhlc2Ugd2F0ZXIgICBib2RpZXMgb3RoZXJ3aXNlIHdvdWxkIGhhdmUgYmVlbiBoaWdoIGluIHNhbGluaXR5ICAgZHVlIHRvIGJlaW5nIGVuY2xvc2VkIGFuZCBoZW5jZSBub3QgaGF2aW5nICAgaW50ZXJtaXhpbmcgb2Ygd2F0ZXIgbGF5ZXJzIGFuZCBtYXNzZXMuICAgKC0pV2luZCAtIFdpbmQgaW5mbHVlbmNlcyBzYWxpbml0eSBvZiBhbiBhcmVhIGJ5ICAgdHJhbnNmZXJyaW5nIHdhdGVyIHRvIG90aGVyIG9jZWFuIHpvbmVzIGFuZCAgIGhlbHBpbmcgaW4gaW50ZXJtaXhpbmcuIFRoZSB3aW5kIGFsc28gaW1wYWN0cyAgIHNhbGluaXR5IGluZGlyZWN0bHkgYnkgb2NlYW4gY3VycmVudHMsIHN3ZWxscywgICBwcmVjaXBpdGF0aW9uIGV0Yy4gICAoLSlPY2VhbiBDdXJyZW50IC0gSW5kaXJlY3RseSwgdGhlIHdpbmRzIHRocm91Z2ggdGhlICAgb2NlYW4gY3VycmVudCBkZXRlcm1pbmUgdGhlIGluZmxvdyBhbmQgb3V0ZmxvdyBvZiAgIG9jZWFuIHdhdGVyIHdpdGggZGlmZmVyZW50IHNhbGluaXR5IGFuZCBoZW5jZSAgIGludGVybWl4aW5nIG9mIHdhdGVyIG1hc3NlcywgdGh1cyBpbXBhY3RpbmcgICBzYWxpbml0eS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1, 2, 3 and 5      .         ",
        "option2" : "2, 3, 4 and 5  ",
        "option3" : "1, 3, 4 and 5  ",
        "option4" : "1, 2, 3, 4, 5   "
      }
    },
    {
      "index" : 58,
      "question" : "With reference to the formation of tides,  Consider the following pairs:                 Types of Tides            Features  1. Semi-diurnal Tide - One high tide and one low tide  per day.  2. Diurnal Tide          - Two high and two low Tides per  day.  3. Spring Tide              - Occur when the sun, the moon  and the earth are in a straight line.  4. Neap Tide                - Occur when the Sun and the  Moon are at right angles to each other.  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU4",
      "description" : "IEV4cDogICAoLSlQYWlyIDEgaXMgSW5jb3JyZWN0IC0gU2VtaS1kaXVybmFsIHRpZGUgaXMgdGhlIG1vc3QgICBjb21tb24gdGlkYWwgcGF0dGVybiB3aGVyZSB0aGVyZSBhcmUgdHdvIGhpZ2ggICB0aWRlcyBhbmQgdHdvIGxvdyB0aWRlcyBlYWNoIGRheS4gVGhlIGludGVydmFsIGlzIG5vdCAgIGV4YWN0bHkgMTIgaHJzOyBpbnN0ZWFkLCB0aGF0IG9mIDEyIGhycyAyNSBtaW51dGVzLiAgIFRoZXNlIGFyZSBvYnNlcnZlZCBpbiBtb3N0IGFyZWFzIGFuZCBhcmUgYWxzbyAgIGNhbGxlZCBzZW1pLWRheSB0aWRlcy4gSW4gcmFyZSBjYXNlcyB0aGVyZSBjYW4gYmUgMy0gIDQgdGlkZXMuICAgKC0pUGFpciAyIGlzIEluY29ycmVjdCAtIERpdXJuYWwgdGlkZSBpcyB3aGVuIHRoZXJlIGlzICAgb25seSBvbmUgaGlnaCB0aWRlIGFuZCBvbmUgbG93IHRpZGUgZWFjaCBkYXkuIEVnIGlzICAgdGhlIHRpZGUgZXhwZXJpZW5jZWQgaW4gdGhlIGFyZWFzIGFyb3VuZCB0aGUgR3VsZiAgIG9mIE1leGljby4gICAoLSlQYWlyIDMgaXMgQ29ycmVjdCAtIFNwcmluZyB0aWRlIGlzIHdoZW4gdGhlIHN1biwgbW9vbiAgIGFuZCBlYXJ0aCBhcmUgaW4gYSBzdHJhaWdodCBsaW5lLiBUaGUgaGVpZ2h0IG9mIHRoZSAgIHRpZGVzIGFyZSBoaWdoZXIuU3ByaW5nIHRpZGVzIGhhcHBlbiB3aGVuZXZlciAgIHRoZXJlIGlzIGEgbmV3IG1vb24gb3IgYSBmdWxsIG1vb24gYW5kIGhhdmUgICBub3RoaW5nIHRvIGRvIHdpdGggdGhlIHNlYXNvbiBvZiBzcHJpbmcuICAgKC0pUGFpciA0IGlzIGNvcnJlY3QgLSBOZWFwIHRpZGUgaXMgd2hlbiB0aGUgc3VuLCB0aGUgICBtb29uIGFuZCB0aGUgZWFydGggYXJlIGFsaWduZWQgaW4gcmlnaHQgYW5nbGVzIHN1Y2ggICB0aGF0IHRoZSBwdWxsIG9mIGJvdGggdGhlIGhlYXZlbmx5IGJvZGllcyBjYW5jZWwgICBlYWNoIG90aGVyIG91dCBhbmQgdGlkZXMgYXJlIHdlYWsuIEluIHRoZSBwZXJpb2QgICBiZXR3ZWVuIHRoZSB0d28gc3ByaW5nIHRpZGVzLCB0aGUgbW9vbiBmYWNlcyB0aGUgICBFYXJ0aCBhdCBhIHJpZ2h0IGFuZ2xlIHRvIHRoZSBzdW4uIFdoZW4gdGhpcyAgIGhhcHBlbnMsIHRoZSBwdWxsIG9mIHRoZSBzdW4gYW5kIHRoZSBtb29uIGFyZSAgIHdlYWsuIFRoaXMgY2F1c2VzIHRpZGVzIHRoYXQgYXJlIGxvd2VyIHRoYW4gdXN1YWwuICAgVGhlc2UgdGlkZXMgYXJlIGtub3duIGFzIG5lYXAgdGlkZXMuICAgRXh0cmEgRWRnZSBieSBPbmx5IElBUyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSW5mb3JtYXRpb24gYWJvdXQgICBzaW1pbGFyIGV2ZW50cyAgICgtKUViYiB0aWRlOiBPbmUgaGlnaCB0aWRlIGFsd2F5cyBmYWNlcyB0aGUgbW9vbiwgICB3aGlsZSB0aGUgb3RoZXIgZmFjZXMgYXdheSBmcm9tIGl0LiBCZXR3ZWVuICAgICAgLiAgICAgICAgICB0aGVzZSBoaWdoIHRpZGVzIGFyZSBhcmVhcyBvZiBsb3dlciB3YXRlciAgIGxldmVscy1sb3cgdGlkZXMuIFRoZSBmbG93IG9mIHdhdGVyIGZyb20gaGlnaCAgIHRpZGUgdG8gbG93IHRpZGUgaXMgY2FsbGVkIGFuIGViYiB0aWRlLiAgICgtKVRpZGFsIEJvcmU6IEEgdGlkYWwgYm9yZSBvY2N1cnMgYWxvbmcgYSBjb2FzdCAgIHdoZXJlIGEgcml2ZXIgZW1wdGllcyBpbnRvIHRoZSBvY2VhbiBvciBzZWEuICAgVGhlIHRpZGFsIGJvcmUgaXMgYSBzdHJvbmcgdGlkZSB0aGF0IHB1c2hlcyB1cCAgIHRoZSByaXZlciwgYWdhaW5zdCB0aGUgcml2ZXIncyBjdXJyZW50LiBJdCBpcyBjYWxsZWQgICBQb3Jvcm9jYSBpbiB0aGUgQW1hem9uIHJpdmVyLiAgICgtKVJpcCB0aWRlOiBSaXAgdGlkZXMgYXJlIHN0cm9uZyBvY2VhbiBjdXJyZW50cyAgIHJ1bm5pbmcgYWxvbmcgdGhlIHN1cmZhY2Ugb2YgdGhlIHdhdGVyLiBBIHJpcCAgIHRpZGUgcnVucyBmcm9tIHRoZSBzaG9yZSBiYWNrIHRvIHRoZSBvcGVuICAgb2NlYW4uVGhleSBjYW4gYmUgdmVyeSBkYW5nZXJvdXMgdG8gICBzd2ltbWVycywgd2hvIGNhbiBiZSBzd2VwdCBvdXQgdG8gc2VhLiBUaGV5ICAgYXJlIG5vdCB0aWRhbCBmZWF0dXJlcy4gICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "3 and 4 only  ",
        "option4" : "1 and 4 only   "
      }
    },
    {
      "index" : 59,
      "question" : "Consider the following statements about the  movement of ocean water:  1. Oceanic circulation pattern roughly corresponds to  earth's atmospheric circulation pattern.  2. A current is usually strongest at the surface and  decreases in strength with depth.  3. Warm currents are usually observed on the West  coast of continents in the low and middle latitudes.  Select the correct Answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDU5",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0IC0gVGhlcmUgaXMgYSBzdHJvbmcgICBjb3JyZWxhdGlvbiBpbiB0aGUgcGF0dGVybnMgb2Ygd2luZHMgYW5kIHRoZSAgIG1vdmVtZW50IG9mIG9jZWFuIHdhdGVyLiBNYWpvciBvY2VhbiBjdXJyZW50cyAgIGFyZSBncmVhdGx5IGluZmx1ZW5jZWQgYnkgc3RyZXNzZXMgZXhlcnRlZCBieSAgIHByZXZhaWxpbmcgd2luZHMgYW5kIGNvcmlvbGlzIGZvcmNlLiBUaGUgYWlyICAgY2lyY3VsYXRpb24gaW4gdGhlIG1pZC1sYXRpdHVkZXMgaXMgbWFpbmx5ICAgYW50aWN5Y2xvbmljIGFuZCBpbiB0aGUgbG93ZXIgbGF0aXR1ZGVzIGl0J3MgY3ljbG9uaWMuICAgVGhlIG9jZWFuaWMgY2lyY3VsYXRpb24gcGF0dGVybiBhbHNvIGNvcnJlc3BvbmRzICAgd2l0aCB0aGUgc2FtZS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0IC0gIFRoZSBDdXJyZW50J3Mgc3BlZWQgaXMgICBjYWxsZWQgJ2RyaWZ0JyBhbmQgaXQgaXMgbWVhc3VyZWQgaW4gdGVybXMgb2YgICBrbm90cy4gIEEgY3VycmVudCBpcyB1c3VhbGx5IHN0cm9uZ2VzdCBhdCB0aGUgc3VyZmFjZSAgIGFuZCBkZWNyZWFzZXMgaW4gc3RyZW5ndGggd2l0aCBkZXB0aC4gIEF0IGEgc3VyZmFjZSAgIGEgY3VycmVudCBtYXkgYXR0YWluIHNwZWVkcyBvdmVyIDUga25vdHMgd2hlcmVhcyAgIGF0IGRlcHRzIHNwZWVkIGlzIGxlc3MgdGhhbiAwLjUga25vdHMuIFRoaXMgaXMgZHVlIHRvICAgaW5jcmVhc2VkIGV4cG9zdXJlIG9mIHRoZSBzdXJmYWNlIGxheWVyIHRvIHRoZSAgIHdpbmRzLiBFc3BlY2lhbGx5IGluIHRoZSBzb3V0aGVybiBoZW1pc3BoZXJlICAgYmV5b25kIDQwIGRlZ3JlZSBsYXRpdHVkZSwgdGhlIGltcGFjdCBvZiB3aW5kcyBjYW4gICBiZSBjbGVhcmx5IG9ic2VydmVkLiAgICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgLSBDT0xEIENVUlJFTlRTIGJyaW5nICAgY29sZCB3YXRlciBpbnRvIHdhcm0gd2F0ZXIgYXJlYXMuIFRoZXNlIGN1cnJlbnRzICAgYXJlIHVzdWFsbHkgZm91bmQgb24gdGhlIHdlc3QgY29hc3Qgb2YgY29udGluZW50cyAgIGluIHRoZSBsb3cgJiBtaWRkbGUgbGF0aXR1ZGVzIGFuZCBvbiB0aGUgZWFzdCBjb2FzdCAgIG9mIGhpZ2hlciBsYXRpdHVkZXMuIFRoZXkgaW1wYWN0IHRoZSBmb3JtYXRpb24gYW5kICAgZXhwYW5zaW9uIG9mIGRlc2VydHMgb24gZWFjaCBjb250aW5lbnQsIHdoaWNoIGFyZSAgIG1vc3RseSBmb3VuZCBvbiB0aGUgd2VzdGVybiBjb2FzdCBvZiBjb250aW5lbnRzLiAgIE9uIFRoZSBBdGxhcyBpdCBjYW4gYmUgb2JzZXJ2ZWQgdGhhdCBtYWpvciBjb2xkICAgY3VycmVudHMgYXJlIGxvY2F0ZWQgbmVhciB0aGUgbWFqb3IgZGVzZXJ0cyBvZiB0aGUgICB3b3JsZC4gVGhpcyBpcyBkdWUgdG8gdGhlIGRyeW5lc3Mgb2YgYWlyIGluIHRoZSAgIGNvcnJlc3BvbmRpbmcgYXJlYXMgYWxvbmcgd2l0aCBvdGhlciBmYWN0b3JzLiAgIEV4dHJhIEVkZ2UgYnkgT25seSBJQVMgICAgKC0pQ3VycmVudHMgYmFzZWQgb24gdGVtcGVyYXR1cmUgY2FuIGJlICAgY2xhc3NpZmllZCBpbnRvIC0gd2FybSBjdXJyZW50cyAmIENvbGQgQ3VycmVudHMgICAoLSlXYXJtIEN1cnJlbnRzIGJyaW5nIHdhcm0gd2F0ZXIgaW50byBjb2xkICAgd2F0ZXIgYXJlYXMgYW5kIGFyZSB1c3VhbGx5IGZvdW5kIG9uIHRoZSBlYXN0ICAgY29hc3Qgb2YgY29udGluZW50cyBpbiB0aGUgbG93IGFuZCBtaWRkbGUgICBsYXRpdHVkZXMgYW5kIHdlc3QgY29hc3Qgb2YgY29udGluZW50cyBpbiBoaWdoZXIgICBsYXRpdHVkZXMuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 60,
      "question" : "Consider the following statements about the  composition of atmosphere:  1. It consists of gases only.  2. It consists of water vapour and gases only.  3. It consists of gases, water vapour, and particles of  dust (solid and liquid).  4. The proportion of gases remains the same  throughout all the layers of the atmosphere.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDYw",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudHMgMSAmIDIgYXJlIGluY29ycmVjdCAgICAoLSlTdGF0ZW1lbnQgMyBpcyBDb3JyZWN0IC0gVGhlIGF0bW9zcGhlcmUgaXMgICBjb21wb3NlZCBvZiBnYXNlcywgd2F0ZXIgdmFwb3VyIGFuZCBkdXN0ICAgcGFydGljbGVzLiBJbiBhZGRpdGlvbiwgaXQgY29udGFpbnMgc29saWQgYW5kIGxpcXVpZCAgIHBhcnRpY2xlcywgY29sbGVjdGl2ZWx5IGNhbGxlZCAnYWVyb3NvbHMgaW4gbGFyZ2UgICBudW1iZXJzJy4gVGhlIGFpciBpcyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIHRoZSBlYXJ0aCdzICAgbWFzcyAmOTkgJSBvZiB0aGUgbWFzcyBvZiB0aGUgYXRtb3NwaGVyZSBpcyAgIGNvbmZpbmVkIHRvIHRoZSBoZWlnaHQgb2YgMzIgS20gZnJvbSB0aGUgZWFydGggICBzdXJmYWNlLiAgICAoLSlTdGF0ZW1lbnQgNCBpcyBJbmNvcnJlY3QgLSBUaGUgcHJvcG9ydGlvbiBvZiBnYXNlcyAgIGFyZSBub3QgdGhlIHNhbWUgdGhyb3VnaG91dCBhbGwgdGhlIGxheWVycyBvZiAgIGF0bW9zcGhlcmUuIEl0IGNoYW5nZXMgaW4gdGhlIGhpZ2hlciBsYXllcnMgb2YgdGhlICAgYXRtb3NwaGVyZS4gQXQgdGhlIGhlaWdodCBvZiAxMjAga20gdGhlIG94eWdlbiBpcyAgIGZvdW5kIGluIGFsbW9zdCBuZWdsaWdpYmxlIHF1YW50aXR5LiBXYXRlciB2YXBvdXIgICBhbmQgY2FyYm9uIGRpb3hpZGUgYXJlIGFsc28gZm91bmQgb25seSB1cCB0byA5MCBrbSAgIGZyb20gdGhlIHN1cmZhY2Ugb2YgdGhlIGVhcnRoLiAgIEV4dHJhIEVkZ2UgYnkgT25seSBJQVMgICAgKC0pVGhlIGF0bW9zcGhlcmUgb2YgRWFydGggaXMgY29tcG9zZWQgb2YgICBuaXRyb2dlbiAoIDc4LjA4JSksIG94eWdlbiAoIDIwLjk1JSksIGFyZ29uICggICAwLjkzJSksIGNhcmJvbiBkaW94aWRlICgwLjAzNiUpIGFuZCBvdGhlciAgIGdhc2VzIHN1Y2ggYXMgbmVvbiwgaGVsaXVtLCBoeWRyb2dlbiBldGMuICAgKC0pV2F0ZXIgdmFwb3VycyBkZWNyZWFzZSB3aXRoIGFsdGl0dWRlLiBUaGV5ICAgYWxzbyBkZWNyZWFzZSBmcm9tIHRoZSBlcXVhdG9yIHRvd2FyZHMgdGhlICAgcG9sZXMuICBJdCBhbHNvIGFic29yYnMgcGFydHMgb2YgdGhlIGluc29sYXRpb24gICAgICAuICAgICAgICAgIGZyb20gdGhlIHN1biBhbmQgcHJlc2VydmVzIHRoZSBlYXJ0aCdzIHJhZGlhdGVkICAgaGVhdC4gIFRodXMgd2F0ZXIgdmFwb3VycyBhY3QgbGlrZSBhIGJsYW5rZXQgICBhbGxvd2luZyB0aGUgZWFydGggbmVpdGhlciB0byBiZWNvbWUgdG9vIGNvbGQgICBub3IgdG9vIGhvdC4gICAgKC0pRHVzdCBwYXJ0aWNsZXMgYXJlIGdlbmVyYWxseSBjb25jZW50cmF0ZWQgaW4gdGhlICAgbG93ZXIgbGF5ZXJzIG9mIHRoZSBhdG1vc3BoZXJlLiAgVGhlaGlnaGVyICAgY29uY2VudHJhdGlvbiBvZiBkdXN0IHBhcnRpY2xlcyBpcyBmb3VuZCBpbiAgIHN1YnRyb3BpY2FsIGFuZCB0ZW1wZXJhdGUgcmVnaW9ucyBkdWUgdG8gZHJ5ICAgd2luZHMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 4 only  ",
        "option2" : "2 and 4 only  ",
        "option3" : "3 only  ",
        "option4" : "3 and 4 only   "
      }
    },
    {
      "index" : 61,
      "question" : "Consider the following statements about  Carbon dioxide:  1. Carbon dioxide is opaque to the incoming solar  radiation but transparent to the outgoing  terrestrial radiation.  2. The volume of other gases along with the volume  of carbon dioxide has been rising in the past few  decades mainly because of the burning of fossil  fuels.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDYx",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBJbmNvcnJlY3QgLSBDYXJib24gZGlveGlkZSAgIGlzIHRyYW5zcGFyZW50IHRvIHRoZSBpbmNvbWluZyBzb2xhciByYWRpYXRpb24gICBidXQgb3BhcXVlIHRvIHRoZSBvdXRnb2luZyB0ZXJyZXN0cmlhbCByYWRpYXRpb24uIEl0ICAgYWJzb3JicyBhIHBhcnQgb2YgdGVycmVzdHJpYWwgcmFkaWF0aW9uIGFuZCByZWZsZWN0cyAgIGJhY2sgc29tZSBwYXJ0IG9mIGl0IHRvd2FyZHMgdGhlIGVhcnRoIHN1cmZhY2UuIEl0IGlzICAgbGFyZ2VseSByZXNwb25zaWJsZSBmb3IgdGhlIGdyZWVuaG91c2UgZWZmZWN0LiAgICgtKVN0YXRlbWVudCAzIGlzIEluY29ycmVjdCAgLSBUaGUgdm9sdW1lIG9mIG90aGVyICAgZ2FzZXMgaXMgY29uc3RhbnQgYnV0IHRoZSB2b2x1bWUgb2YgY2FyYm9uIGRpb3hpZGUgICBoYXMgYmVlbiByaXNpbmcgaW4gdGhlIHBhc3QgZmV3IGRlY2FkZXMgbWFpbmx5IGR1ZSAgIHRvIHRoZSBidXJuaW5nIG9mIGZvc3NpbCBmdWVscy4gSXQgaGFzIGFsc28gaW5jcmVhc2VkICAgdGhlIHRlbXBlcmF0dXJlIG9mIHRoZSBhaXIuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only   ",
        "option2" : "2 only  ",
        "option3" : "Both   1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 62,
      "question" : "Consider the following statements:  1. Nitrogen and carbon dioxide make up nearly 99%  of the atmosphere and the remaining gases  constitute about 1% of the atmosphere.  2. Ozone is found between 10 and 50 km above the  earth's surface and acts as a filter and absorbs the  infrared from the sun and prevents them from  reaching the surface of the earth.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDYy",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiAgTml0cm9nZW4gYW5kICAgb3h5Z2VuIG1ha2UgdXAgbmVhcmx5IDk5JSBvZiB0aGUgY2xlYW4sIGRyeSBhaXIuICAgVGhlIHJlbWFpbmluZyBnYXNlcyBhcmUgbW9zdGx5IGluZXJ0IGFuZCAgIGNvbnN0aXR1dGUgYWJvdXQgMSUgb2YgdGhlIGF0bW9zcGhlcmUgICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LSBPem9uZSBpcyBhbiBpbXBvcnRhbnQgICBjb21wb25lbnQgb2YgdGhlIGF0bW9zcGhlcmUgZm91bmQgYmV0d2VlbiAxMCAgIGFuZCA1MCBrbSBhYm92ZSB0aGUgZWFydGgncyBzdXJmYWNlIGFuZCBhY3RzIGFzIGEgICBmaWx0ZXIgYW5kIGFic29yYnMgdGhlIHVsdHJhdmlvbGV0IHJheXMgKG5vdCBpbmZyYXJlZCAgIHJheXMpIHJhZGlhdGluZyBmcm9tIHRoZSBzdW4gYW5kIHByZXZlbnRzIHRoZW0gICBmcm9tIHJlYWNoaW5nIHRoZSBzdXJmYWNlIG9mIHRoZSBlYXJ0aC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Only 1  ",
        "option2" : "Only 2  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 and 2   "
      }
    },
    {
      "index" : 63,
      "question" : "Consider the following statement about the  composition of atmosphere:  1. Water vapour decreases with respect to altitude  and increases from equator to poles.  2. Dust particles are concentrated in the lower layers  of the atmosphere and they are not found at great  heights.  3. The higher concentration of dust particles is found  in subtropical and temperate regions as compared  to equatorial and polar regions.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDYz",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBJbmNvcnJlY3QgLSBXYXRlciB2YXBvdXJzIGFyZSBub3QgICBmaXhlZCBpbiB0aGUgYXRtb3NwaGVyZS4gVGhleSAgZGVjcmVhc2Ugd2l0aCAgIGFsdGl0dWRlLiBJbiB0aGUgd2FybSBhbmQgd2V0IHRyb3BpY3MsIGl0IGFjY291bnRzICAgZm9yIGFib3V0IDQgJSBvZiB0aGUgYWlyIGJ5IHZvbHVtZSwgd2hlcmVhcyBpbiB0aGUgICBkcnkgYW5kIGNvbGQgYXJlYXMgb2YgZGVzZXJ0IGFuZCBwb2xhciByZWdpb25zLCBpdCAgIG1heSBiZSBsZXNzIHRoYW4gMSAlIG9mIHRoZSBhaXIuIFdhdGVyIHZhcG91ciAgIGRlY3JlYXNlcyBmcm9tIHRoZSBlcXVhdG9yIHRvd2FyZHMgdGhlIHBvbGVzLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBJbmNvcnJlY3QgLSBEdXN0IHBhcnRpY2xlcyBhcmUgICBnZW5lcmFsbHkgY29uY2VudHJhdGVkIGluIHRoZSBsb3dlciBsYXllcnMgb2YgdGhlICAgYXRtb3NwaGVyZTsgeWV0LCBjb252ZWN0aW9uICBhaXIgY3VycmVudHMgbWF5ICAgdHJhbnNwb3J0IHRoZW0gdG8gZ3JlYXQgaGVpZ2h0cy4gICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdCAtIFRoZSBoaWdoZXIgY29uY2VudHJhdGlvbiAgIG9mIGR1c3QgcGFydGljbGVzIGlzIGZvdW5kIGluIHN1YnRyb3BpY2FsIGFuZCAgIHRlbXBlcmF0ZSByZWdpb25zIGR1ZSB0byBkcnkgd2luZHMgYXMgY29tcGFyZWQgICB0byB0aGUgZXF1YXRvcmlhbCBhbmQgcG9sYXIgcmVnaW9ucy4gRHVzdCBhbmQgc2FsdCAgIHBhcnRpY2xlcyBhY3QgYXMgaHlncm9zY29waWMgbnVjbGVpIGFyb3VuZCB3aGljaCAgIHdhdGVyIHZhcG91ciBjb25kZW5zZXMgdG8gcHJvZHVjZSBjbG91ZHMuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Only 1 and 3  ",
        "option2" : "Only 2  ",
        "option3" : "Only 1 and 2  ",
        "option4" : "Only 3    "
      }
    },
    {
      "index" : 64,
      "question" : "Consider the following statement with respect  to structure of atmosphere:   1. Density is highest near the surface of the earth and  increases with increasing altitude.  2. The column of atmosphere is divided into seven  different layers depending upon the temperature  condition.  Which of the statements given above is/are correct?    ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY0",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgSW5jb3JyZWN0IC0gVGhlIGF0bW9zcGhlcmUgY29uc2lzdHMgICBvZiBkaWZmZXJlbnQgbGF5ZXJzIHdpdGggdmFyeWluZyBkZW5zaXR5IGFuZCAgIHRlbXBlcmF0dXJlLiBEZW5zaXR5IGlzIGhpZ2hlc3QgbmVhciB0aGUgc3VyZmFjZSBvZiAgIHRoZSBlYXJ0aCBhbmQgZGVjcmVhc2VzIHdpdGggaW5jcmVhc2luZyBhbHRpdHVkZS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBJbmNvcnJlY3QgLSBUaGUgY29sdW1uIG9mICAgYXRtb3NwaGVyZSBpcyBkaXZpZGVkIGludG8gZml2ZSBkaWZmZXJlbnQgbGF5ZXJzICAgZGVwZW5kaW5nIHVwb24gdGhlIHRlbXBlcmF0dXJlIGNvbmRpdGlvbiAtICAgVHJvcG9zcGhlcmUsIFN0cmF0b3NwaGVyZSwgTWVzb3NwaGVyZSwgICBUaGVybW9zcGhlcmUgYW5kIEV4b3NwaGVyZS4gVGhlIHRyb3Bvc3BoZXJlIGlzICAgdGhlIGxvd2VybW9zdCBsYXllciBhbmQgdGhlIGV4b3NwaGVyZSBpcyB0aGUgICBoaWdoZXN0IGxheWVyIG9mIHRoZSBhdG1vc3BoZXJlLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Only 1  ",
        "option2" : "Only 2      .         ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor or 2   "
      }
    },
    {
      "index" : 65,
      "question" : "Which of the following statements is/are  correct about the Troposphere?  1. It is the lowermost layer of the atmosphere and  temperature increases with increasing height.  2. All changes in climate and weather take place in  the Troposphere.  Select the correct Answer using the codes given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY1",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgSW5jb3JyZWN0IC0gVGhlIHRyb3Bvc3BoZXJlIGlzIHRoZSAgIGxvd2VybW9zdCBsYXllciBvZiB0aGUgYXRtb3NwaGVyZS4gVGhlIGF2ZXJhZ2UgICBoZWlnaHQgb2YgdGhpcyBsYXllciBpcyAxMyAga20uIEl0IGV4dGVuZHMgYnJvYWRseSB0byAgIGEgaGVpZ2h0IG9mIDgga20gbmVhciB0aGUgcG9sZXMgJiBhYm91dCAxOCBrbSBhdCAgIHRoZSBlcXVhdG9yLiBUaGlja25lc3Mgb2YgdGhlIHRyb3Bvc3BoZXJlIGlzICAgICAgLiAgICAgICAgICBncmVhdGVzdCBhdCB0aGUgZXF1YXRvciBiZWNhdXNlIGhlYXQgaXMgICB0cmFuc3BvcnRlZCB0byBncmVhdCBoZWlnaHRzIGJ5IHN0cm9uZyAgIGNvbnZlY3Rpb25hbCBjdXJyZW50cy4gVGhlIHRlbXBlcmF0dXJlIGluIHRoZSAgIHRyb3Bvc3BoZXJlIGRlY3JlYXNlcyBhdCB0aGUgcmF0ZSBvZiAxwrBDIGZvciBldmVyeSAgIDE2NW0gb2YgaGVpZ2h0LCB0aGUgZmFsbCBpbiB0ZW1wZXJhdHVyZSBpcyBjYWxsZWQgICAnbGFwc2UgcmF0ZScuICAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3QgLSBUcm9wb3NwaGVyZSBjb250YWlucyBkdXN0ICAgcGFydGljbGVzIGFuZCB3YXRlciB2YXBvdXIuIEFsbCB0aGUgY2hhbmdlcyBpbiAgIGNsaW1hdGUgYW5kIHdlYXRoZXIgdGFrZSBwbGFjZSBpbiB0aGlzIGxheWVyLiAgIFRyb3Bvc3BoZXJlIGlzIHRoZSBtb3N0IGltcG9ydGFudCBsYXllciBmb3IgYWxsICAgYmlvbG9naWNhbCBhY3Rpdml0eS4gIFRyb3BvcGF1c2UgaXMgdGhlIHpvbmUgd2hpY2ggICBzZXBhcmF0ZXMgdGhlIHRyb3Bvc3BoZXJlIGZyb20gdGhlIHN0cmF0b3NwaGVyZS4gICBUaGUgdGVtcGVyYXR1cmUgaGVyZSBpcyBuZWFybHkgY29uc3RhbnQsIGhlbmNlLCBpdCAgIGlzIGNhbGxlZCB0aGUgdHJvcG9wYXVzZS4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2   ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 66,
      "question" : "Which are the layers of atmosphere where  temperature starts increasing with increasing height?  1. Thermosphere  2. Stratosphere  3. Troposphere   4. Mesosphere  Select the correct Answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY2",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBDb3JyZWN0IC0gICBJbiBUaGVybW9zcGhlcmUgdGVtcGVyYXR1cmUgaW5jcmVhc2VzIHdpdGggICBoZWlnaHQuIEl0IGlzIGxvY2F0ZWQgYmV0d2VlbiA4MCBhbmQgNDAwIGttIGFib3ZlICAgdGhlIG1lc29wYXVzZS4gSXQgY29udGFpbnMgZWxlY3RyaWNhbGx5IGNoYXJnZWQgICBwYXJ0aWNsZXMga25vd24gYXMgaW9ucywgYW5kIGhlbmNlLCBpdCBpcyBrbm93biBhcyAgIGlvbm9zcGhlcmUuIFJhZGlvIHdhdmVzIHRyYW5zbWl0dGVkIGZyb20gdGhlICAgZWFydGggYXJlIHJlZmxlY3RlZCBiYWNrIHRvIHRoZSBlYXJ0aCBieSB0aGlzIGxheWVyLiAgIFRoZSBJbnRlcm5hdGlvbmFsIFNwYWNlIFN0YXRpb24gYW5kIHNhdGVsbGl0ZXMgb3JiaXQgICBpbiB0aGlzIGxheWVyLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBDb3JyZWN0IC0gVGhlIHN0cmF0b3NwaGVyZSBpcyAgIGxvY2F0ZWQgYWJvdmUgdGhlIHRyb3Bvc3BoZXJlIGFuZCBiZWxvdyB0aGUgICBtZXNvc3BoZXJlLiBJbiB0aGlzIGxheWVyIHRlbXBlcmF0dXJlIGluY3JlYXNlcyAgIHdpdGggYWx0aXR1ZGUuIEl0IGlzIHRoZSByZXN1bHQgb2YgdGhlIGFic29ycHRpb24gb2YgICB0aGUgU3VuJ3MgdWx0cmF2aW9sZXQgcmFkaWF0aW9uIGJ5IHRoZSBvem9uZSAgIGxheWVyLiAgT3pvbmUgbGF5ZXIgcmVmbGVjdHMgdGhlIGhhcm1mdWwgdWx0cmF2aW9sZXQgICByYWRpYXRpb24uIFRoZSBvem9ub3NwaGVyZSBpcyBhbHNvIGNhbGxlZCBhICAgY2hlbW9zcGhlcmUgYmVjYXVzZSBhIGxvdCBvZiBjaGVtaWNhbCBhY3Rpdml0eSAgIGdvZXMgb24gaGVyZS4gICAoLSlTdGF0ZW1lbnQgMyBpcyBJbmNvcnJlY3QgLSBUaGUgdHJvcG9zcGhlcmUgaXMgdGhlICAgbG93ZXJtb3N0IGxheWVyIG9mIHRoZSBhdG1vc3BoZXJlLiBUaGUgYXZlcmFnZSAgIGhlaWdodCBvZiB0aGlzIGxheWVyIGlzIDEzIGttLiBJdCBleHRlbmRzIGJyb2FkbHkgdG8gYSAgIGhlaWdodCBvZiA4IGttIG5lYXIgdGhlIHBvbGVzICYgYWJvdXQgMTgga20gYXQgdGhlICAgZXF1YXRvci4gVGhlIHRlbXBlcmF0dXJlIGluIHRoZSB0cm9wb3NwaGVyZSAgIGRlY3JlYXNlcyBhdCB0aGUgcmF0ZSBvZiAxwrBDIGZvciBldmVyeSAxNjVtIG9mICAgaGVpZ2h0LCB0aGUgZmFsbCBpbiB0ZW1wZXJhdHVyZSBpcyBjYWxsZWQgJ2xhcHNlIHJhdGUnLiAgICAoLSlTdGF0ZW1lbnQgNCBpcyBJbmNvcnJlY3QgLSBNZXNvc3BoZXJlIGxpZXMgYWJvdmUgICB0aGUgc3RyYXRvc3BoZXJlLCB3aGljaCBleHRlbmRzIHVwdG8gYSBoZWlnaHQgb2YgICA4MCBLbS4gIEluIHRoZSBNZXNvc3BoZXJlIHRlbXBlcmF0dXJlIHN0YXJ0cyAgIGRlY3JlYXNpbmcgd2l0aCB0aGUgaW5jcmVhc2UgaW4gYWx0aXR1ZGUgYW5kICAgcmVhY2hlcyB1cCB0byBtaW51cyAxMDDCsEMgYXQgdGhlIGhlaWdodCBvZiA4MCBrbS4gICBNZXNvcGF1c2UgaXMgdGhlIHVwcGVybW9zdCBsaW1pdCBvZiB0aGUgICBNZXNvc3BoZXJlLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only   ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "3 and 4 only   "
      }
    },
    {
      "index" : 67,
      "question" : "Consider the following statements about  Exosphere:  1. It is the upper most layer of the atmosphere. Light  gases like helium and hydrogen float into space  from here.  2. It is located between 80-400 km above the  mesopause.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY3",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgQ29ycmVjdCAtIEV4b3NwaGVyZSBpcyB0aGUgICB1cHBlcm1vc3QgbGF5ZXIgb2YgdGhlIGF0bW9zcGhlcmUuIEl0IGdyYWR1YWxseSAgIG1lcmdlcyB3aXRoIG91dGVyIHNwYWNlLiBMaWdodCBnYXNlcyBsaWtlIGhlbGl1bSAgIGFuZCBoeWRyb2dlbiBmbG9hdCBpbnRvIHNwYWNlIGZyb20gaGVyZS4gVmVyeSBsaXR0bGUgICBpcyBrbm93biBhYm91dCBpdCBkdWUgdG8gbGFjayBvZiByZXNlYXJjaC4gICAoLSlTdGF0ZW1lbnQgMiBpcyBJbmNvcnJlY3QgLSBUaGUgdGhlcm1vc3BoZXJlICAgZXh0ZW5kcyBmcm9tIDgwLTQwMCBrbSBub3QgZXhvc3BoZXJlLiBFeG9zcGhlcmUgICBleHRlbmRzIGZyb20gNDAwIEttIGFuZCBsaWVzIGFib3ZlIHRoZSAgIHRoZXJtb3NwaGVyZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 68,
      "question" : "With reference to revolution of earth around  the sun consider the following statements:  1. During revolution around the sun, the earth is  nearest to the sun on 4th July and it is called  aphelion  2. On 3rd January earth is farthest from the sun and it  is called perihelion.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY4",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgSW5jb3JyZWN0IC0gRHVyaW5nIGl0cyByZXZvbHV0aW9uICAgYXJvdW5kIHRoZSBzdW4sIHRoZSBlYXJ0aCBpcyBmYXJ0aGVzdCBmcm9tIHRoZSBzdW4gICAoMTUyIG1pbGxpb24ga20pIG9uIDR0aCBKdWx5LiBUaGlzIHBvc2l0aW9uIG9mIHRoZSAgIGVhcnRoIGlzIGNhbGxlZCBhcGhlbGlvbi4gICAoLSlTdGF0ZW1lbnQgMiBpcyBJbmNvcnJlY3QgLSBPbiAzcmQgSmFudWFyeSwgdGhlICAgZWFydGggaXMgdGhlIG5lYXJlc3QgdG8gdGhlIHN1biAoMTQ3IG1pbGxpb24ga20pLiAgIFRoaXMgcG9zaXRpb24gaXMgY2FsbGVkIHBlcmloZWxpb24uICAgRXh0cmEgRWRnZSBieSBPbmx5IElBUyAgICAoLSlUaGUgc29sYXIgb3V0cHV0IHJlY2VpdmVkIGF0IHRoZSB0b3Agb2YgdGhlICAgYXRtb3NwaGVyZSB2YXJpZXMgc2xpZ2h0bHkgaW4gYSB5ZWFyIGR1ZSB0byB0aGUgICB2YXJpYXRpb25zIGluIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBlYXJ0aCAgIGFuZCB0aGUgc3VuLiBUaGVyZWZvcmUsIHRoZSBhbm51YWwgaW5zb2xhdGlvbiAgIHJlY2VpdmVkIGJ5IHRoZSBlYXJ0aCBvbiAzcmQgSmFudWFyeSBpcyBzbGlnaHRseSAgIG1vcmUgdGhhbiB0aGUgYW1vdW50IHJlY2VpdmVkIG9uIDR0aCBKdWx5LiAgICAoLSlIb3dldmVyLCB0aGUgZWZmZWN0IG9mIHRoaXMgdmFyaWF0aW9uIGluIHRoZSBzb2xhciAgIG91dHB1dCBpcyBtYXNrZWQgYnkgb3RoZXIgZmFjdG9ycyBsaWtlIHRoZSAgIGRpc3RyaWJ1dGlvbiBvZiBsYW5kIGFuZCBzZWEgYW5kIHRoZSAgIGF0bW9zcGhlcmljIGNpcmN1bGF0aW9uLiBIZW5jZSwgdGhpcyB2YXJpYXRpb24gICBpbiB0aGUgc29sYXIgb3V0cHV0IGRvZXMgbm90IGhhdmUgYSBncmVhdCBlZmZlY3QgICBvbiBkYWlseSB3ZWF0aGVyIGNoYW5nZXMgb24gdGhlIHN1cmZhY2Ugb2YgdGhlICAgZWFydGguICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Only 1  ",
        "option2" : "Only 2  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 69,
      "question" : "With reference to heating and cooling of the  atmosphere, which of the following statements are  Incorrect?  1. Conduction takes place when two bodies of  unequal temperature are in contact with one  another, there is a flow of energy from the cooler  to warmer body.  2. The process of horizontal heating of the  atmosphere is called convection.  3. The process of vertical heating is called advection  Select the correct Answer using the options given  below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDY5",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3QgLSBDb25kdWN0aW9uIHRha2VzIHBsYWNlICAgd2hlbiB0d28gYm9kaWVzIG9mIHVuZXF1YWwgdGVtcGVyYXR1cmUgYXJlIGluICAgY29udGFjdCB3aXRoIG9uZSBhbm90aGVyLCB0aGVyZSBpcyBhIGZsb3cgb2YgZW5lcmd5ICAgZnJvbSB0aGUgd2FybWVyIHRvIGNvb2xlciBib2R5LiAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdCAtIFRoZSBhaXIgaW4gY29udGFjdCB3aXRoICAgdGhlIGVhcnRoIHJpc2VzIHZlcnRpY2FsbHkgb24gaGVhdGluZyBpbiB0aGUgZm9ybSBvZiAgIGN1cnJlbnRzIGFuZCBmdXJ0aGVyIHRyYW5zbWl0cyB0aGUgaGVhdCBvZiB0aGUgICBhdG1vc3BoZXJlLiBUaGlzIHByb2Nlc3Mgb2YgdmVydGljYWwgaGVhdGluZyBvZiB0aGUgICBhdG1vc3BoZXJlIGlzIGtub3duIGFzIGNvbnZlY3Rpb24uIFRoZSAgIGNvbnZlY3RpdmUgdHJhbnNmZXIgb2YgZW5lcmd5IGlzIGNvbmZpbmVkIG9ubHkgdG8gICB0aGUgdHJvcG9zcGhlcmUgICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QgLSBUaGUgdHJhbnNmZXIgb2YgaGVhdCAgIHRocm91Z2ggaG9yaXpvbnRhbCBtb3ZlbWVudCBvZiBhaXIgaXMgICBjYWxsZWQgYWR2ZWN0aW9uLiBIb3Jpem9udGFsIG1vdmVtZW50IG9mIHRoZSBhaXIgaXMgICByZWxhdGl2ZWx5IG1vcmUgaW1wb3J0YW50IHRoYW4gdGhlIHZlcnRpY2FsICAgICAgLiAgICAgICAgICBtb3ZlbWVudC4gSW4gbWlkZGxlIGxhdGl0dWRlcywgbW9zdCBvZiBkaXVybmFsICAgKGRheSBhbmQgbmlnaHQpIHZhcmlhdGlvbiBpbiBkYWlseSB3ZWF0aGVyIGFyZSAgIGNhdXNlZCBieSBhZHZlY3Rpb24gYWxvbmUuIEluIHRyb3BpY2FsIHJlZ2lvbnMgICBwYXJ0aWN1bGFybHkgaW4gbm9ydGhlcm4gSW5kaWEgZHVyaW5nIHN1bW1lciAgIHNlYXNvbiBsb2NhbCB3aW5kcyBjYWxsZWQgJ2xvbycgaXMgdGhlIG91dGNvbWUgb2YgICBhZHZlY3Rpb24gcHJvY2Vzcy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "1 and 2 only  ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 70,
      "question" : "With reference to heat budget of the earth  consider the following statements:  1. The amount of heat received in the form of  insolation equals the amount lost by the earth  through terrestrial radiation.  2. Due to the heat budget earth neither warms up nor  cools down despite the huge transfer of heat that  takes place.  Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDcw",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBDb3JyZWN0IC0gVGhlIGVhcnRoIGFzIGEgd2hvbGUgZG9lcyAgIG5vdCBhY2N1bXVsYXRlIG9yIGxvb3NlIGhlYXQuIEl0IG1haW50YWlucyBpdHMgICB0ZW1wZXJhdHVyZS4gVGhpcyBjYW4gaGFwcGVuIG9ubHkgaWYgdGhlIGFtb3VudCAgIG9mIGhlYXQgcmVjZWl2ZWQgaW4gdGhlIGZvcm0gb2YgaW5zb2xhdGlvbiBlcXVhbHMgICB0aGUgYW1vdW50IGxvc3QgYnkgdGhlIGVhcnRoIHRocm91Z2ggdGVycmVzdHJpYWwgICByYWRpYXRpb24uICAgKC0pU3RhdGVtZW50IDIgaXMgQ29ycmVjdCAtIEhlYXQgQnVkZ2V0OiBPdXQgb2YgdGhlICAgMTAwIHVuaXRzIG9mIGluY29taW5nIHNvbGFyIHJhZGlhdGlvbiwgMzUgdW5pdHMgKDI3LSAgY2xvdWRzLCAyLXNub3csIDYtYXRtb3NwaGVyZSB0b3ApIGFyZSByZWZsZWN0ZWQgICBiYWNrIGFzIGFsYmVkby4gT3V0IG9mIHRoZSByZW1haW5pbmcgNjUgdW5pdHMsIDE0ICAgdW5pdHMgYXJlIGFic29yYmVkIGJ5IHRoZSBhdG1vc3BoZXJlICYgNTEgdW5pdHMgICBieSBlYXJ0aCBzdXJmYWNlLiAgICAoLSlUaGUgZWFydGggcmFkaWF0ZXMgYmFjayAxNyB1bml0cyBkaXJlY3RseSBpbnRvIHNwYWNlICAgJiB0aGUgcmVtYWluaW5nIDM0IHVuaXRzIGFyZSBhYnNvcmJlZCBieSB0aGUgICBhdG1vc3BoZXJlLiBUaGUgYXRtb3NwaGVyZSB0aGVuIHJhZGlhdGVzIGJhY2sgICB0aGUgNDggdW5pdHMgYWJzb3JiZWQgYnkgaXQuIFRodXMsIHRoZSB0b3RhbCAgIHJhZGlhdGlvbiByZXR1cm5pbmcgZnJvbSB0aGUgZWFydGggYW5kIHRoZSAgIGF0bW9zcGhlcmUgcmVzcGVjdGl2ZWx5IGlzIDE3KzQ4PTY1IHVuaXRzIHdoaWNoICAgYmFsYW5jZSB0aGUgdG90YWwgb2YgNjUgdW5pdHMgcmVjZWl2ZWQgZnJvbSB0aGUgc3VuLiAgICAoLSlUaGlzIGlzIHRlcm1lZCBhcyB0aGUgaGVhdCBidWRnZXQgb3IgaGVhdCBiYWxhbmNlICAgb2YgdGhlIGVhcnRoLiBUaGlzIGV4cGxhaW5zIHdoeSB0aGUgZWFydGggbmVpdGhlciAgIHdhcm1zIHVwIG5vciBjb29scyBkb3duIGRlc3BpdGUgdGhlIGh1Z2UgICB0cmFuc2ZlciBvZiBoZWF0IHRoYXQgdGFrZXMgcGxhY2UuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgSGVhdCBidWRnZXQgb2YgdGhlIGVhcnRoICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 71,
      "question" : "The term Most Favoured Nation is associated  with which of the following organizations?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDcx",
      "description" : "IEV4cDogICAgICgtKU9wdGlvbiBCIGlzIGNvcnJlY3Q6IFRoZSBXb3JsZCBUcmFkZSAgIE9yZ2FuaXphdGlvbidzIDE2NCBtZW1iZXJzIGNvbW1pdCB0byB0cmVhdGluZyAgIG90aGVyIG1lbWJlcnMgZXF1YWxseSBzbyB0aGV5IGNhbiBhbGwgYmVuZWZpdCBmcm9tICAgZWFjaCBvdGhlcidzIGxvd2VzdCB0YXJpZmZzLCBoaWdoZXN0IGltcG9ydCBxdW90YXMgICBhbmQgZmV3ZXN0IHRyYWRlIGJhcnJpZXJzIGZvciBnb29kcyBhbmQgc2VydmljZXMuICAgVGhpcyBzaWduaWZpY2FudCBwcmluY2lwbGUgb2Ygbm9uLWRpc2NyaW1pbmF0aW9uIGlzICAga25vd24gYXMgbW9zdCBmYXZvdXJlZCBuYXRpb24gKE1GTikgdHJlYXRtZW50LiAgICAgKC0pVGhlcmUgYXJlIHNvbWUgZXhjZXB0aW9ucywgc3VjaCBhcyB3aGVuICAgbWVtYmVycyBzdHJpa2UgYmlsYXRlcmFsIHRyYWRlIGFncmVlbWVudHMgb3IgICB3aGVuIG1lbWJlcnMgb2ZmZXIgZGV2ZWxvcGluZyBjb3VudHJpZXMgc3BlY2lhbCAgIGFjY2VzcyB0byB0aGVpciBtYXJrZXRzLiAgICgtKVJlbW92YWwgb2YgTUZOIHN0YXR1czogICAgbyBUaGVyZSBpcyBubyBmaWd1cmF0aXZlIHByb2NlZHVyZSBmb3Igc3VzcGVuZGluZyAgIE1GTiB0cmVhdG1lbnQgYW5kIGl0IGlzIG5vdCBjbGVhciB3aGV0aGVyICAgbWVtYmVycyBhcmUgb2JsaWdlZCB0byBpbmZvcm0gdGhlIFdUTyBpZiB0aGV5ICAgZG8gc28uICAgbyBJbmRpYSBwZW5kZW50IFBha2lzdGFuJ3MgTUZOIHN0YXR1cyBpbiAyMDE5ICAgYWZ0ZXIgYSBzdWljaWRlIGF0dGFjayBieSBhIFBha2lzdGFuLWJhc2VkIElzbGFtaXN0ICAgZ3JvdXAga2lsbGVkIDQwIHBvbGljZS4gUGFraXN0YW4gbmV2ZXIgZ2VybWFuZSAgIE1GTiBzdGF0dXMgdG8gSW5kaWEuICAgKC0pQ2FuY2VsbGluZyBSdXNzaWEncyBNRk4gc3RhdHVzIHNlbmRzIGEgc3Ryb25nICAgc2lnbmFsIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGl0cyBXZXN0ZXJuIGFsbGllcyAgIGRvIG5vdCBjb25zaWRlciBSdXNzaWEgYSBlY29ub21pYyBwYXJ0bmVyIGluIGFueSAgIHdheSwgYnV0IGl0IGRvZXMgbm90IGluIGl0c2VsZiBjaGFuZ2UgY29uZGl0aW9ucyBmb3IgICB0cmFkZS4gSXQgZG9lcyBmb3JtYWxseSBwZXJtaXQgdGhlIFdlc3Rlcm4gYWxsaWVzIHRvICAgaW5jcmVhc2UgaW1wb3J0IHRhcmlmZnMgb3IgaW1wb3NlIHF1b3RhcyBvbiBSdXNzaWFuICAgZ29vZHMsIG9yIGV2ZW4gYmFuIHRoZW0sIGFuZCB0byByZXN0cmljdCBzZXJ2aWNlcyAgIG91dCBvZiB0aGUgY291bnRyeS4gVGhleSBjb3VsZCBhbHNvIG92ZXJsb29rICAgUnVzc2lhbiBpbnRlbGxlY3R1YWwgcHJvcGVydHkgcmlnaHRzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "World Health Organization  ",
        "option2" : "World trade organization  ",
        "option3" : "World economic forum   ",
        "option4" : "World Bank    "
      }
    },
    {
      "index" : 72,
      "question" : "Which of the following Inland seas is found  between southeaster Europe and the Anatolian  peninsula?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDcy",
      "description" : "IEV4cDogICAgICgtKVRoZSBCbGFjayBTZWEsIGFsc28ga25vd24gYXMgdGhlIEV1eGluZSBTZWEsIGlzIG9uZSAgIG9mIHRoZSBpbXBvcnRhbnQgd2F0ZXIgYm9kaWVzIGFuZCBhIGZhbW91cyBpbmxhbmQgICBzZWEgb2YgdGhlIHdvcmxkLiBUaGlzIG1hcmdpbmFsIHNlYSBvZiB0aGUgQXRsYW50aWMgICBPY2VhbiwgbG9jYXRlZCBiZXR3ZWVuIEVhc3Rlcm4gRXVyb3BlIGFuZCAgIFdlc3Rlcm4gQXNpYSBhbmQgc3Vycm91bmRlZCBieSB0aGUgUG9udGljLCAgIENhdWNhc3VzLCBhbmQgQ3JpbWVhbiBNb3VudGFpbnMgaW4gdGhlIHNvdXRoLCAgIGVhc3QgYW5kIG5vcnRoIHJlc3BlY3RpdmVseS4gICAoLSlUaGUgVHVya2lzaCBzdHJhaXRzIHN5c3RlbTogLSBBIHRyYW5zaXRpb25hbCB6b25lICAgYmV0d2VlbiB0aGUgTWVkaXRlcnJhbmVhbiBhbmQgdGhlIEJsYWNrIFNlYSAgIGZvcm1zIGJ5IHRoZSBEYXJkYW5lbGxlcywgQm9zcG9ydXMgYW5kIE1hcm1hcmEgICBTZWEgIGZvcm1zLiAgICgtKVRoZSBCbGFjayBTZWEgaXMgYWxzbyBjb25uZWN0ZWQgdG8gdGhlIFNlYSBvZiBBem92ICAgYnkgdGhlIFN0cmFpdCBvZiBLZXJjaC4gVGhlIGJvcmRlcmluZyBvciAgIG5laWdoYm9yaW5nIGNvdW50cmllcyBvZiBCbGFjayBTZWEgYXJlOiBSdXNzaWEsICAgVWtyYWluZSwgR2VvcmdpYSwgVHVya2V5LCBCdWxnYXJpYSBhbmQgUm9tYW5pYS4gICAgICAuICAgICAgICAgICAoLSlUaGUgQW5hdG9saWFuIHBlbmluc3VsYSwga25vd24gYXMgQXNpYSBNaW5vciwgaXMgICBhIGxhcmdlIHBlbmluc3VsYSBpbiBXZXN0ZXJuIEFzaWEuIEl0IGlzIHRoZSAgIHdlc3Rlcm5tb3N0IHByb3RydXNpb24gb2YgdGhlIEFzaWFuIGNvbnRpbmVudCBhbmQgICBjb25zdGl0dXRlcyB0aGUgbWFqb3IgcGFydCBvZiBtb2Rlcm4tZGF5ICAgVHVya2V5LiBUaGlzIHJlZ2lvbiBpcyBib3VuZGVkIGJ5IHRoZSBUdXJraXNoICAgU3RyYWl0cyB0byB0aGUgbm9ydGh3ZXN0LCB0aGUgQmxhY2sgU2VhIHRvIHRoZSBub3J0aCwgICB0aGUgTWVkaXRlcnJhbmVhbiBTZWEgdG8gdGhlIHNvdXRoLCB0aGUgQXJtZW5pYW4gICBIaWdobGFuZHMgdG8gdGhlIGVhc3QsIGFuZCB0aGUgQWVnZWFuIFNlYSB0byB0aGUgICB3ZXN0LiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Red sea    ",
        "option2" : "Mediterranean Sea  ",
        "option3" : "Caspian Sea   ",
        "option4" : "Black sea    "
      }
    },
    {
      "index" : 73,
      "question" : "Consider the following statements regarding  the Financial Action Task Force (FATF):   1. The Financial Action Task Force on Money  Laundering (FATF) was established by the G-20  Summit which was held in New York in 1982.   . 2. The FATF help authorities to eliminate crime  related human trafficking and also works to stop  funding for weapons of mass destruction.   3. UAE has been placed in the gray list.   Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDcz",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIEZpbmFuY2lhbCBBY3Rpb24gVGFzayAgIEZvcmNlIChGQVRGKSBpcyB0aGUgZ2xvYmFsIG1vbmV5IGxhdW5kZXJpbmcgYW5kICAgdGVycm9yaXN0IGZpbmFuY2luZyB3YXRjaGRvZy4gVGhlIGludGVyLSAgZ292ZXJubWVudGFsIGJvZHkgc2V0cyBpbnRlcm5hdGlvbmFsIHN0YW5kYXJkcyAgIHRoYXQgYWltIHRvIGluaGliaXQgdGhlc2UgaWxsZWdhbCBhY3Rpdml0aWVzIGFuZCB0aGUgICBoYXJtIHRoZXkgY2F1c2UgdG8gc29jaWV0eS4gQXMgYSBwb2xpY3ktbWFraW5nICAgYm9keSwgdGhlIEZBVEYgd29ya3MgdG8gZ2VuZXJhdGUgdGhlIGVzc2VudGlhbCAgIHBvbGl0aWNhbCB3aWxsIHRvIGJyaW5nIGFib3V0IG5hdGlvbmFsIGxlZ2lzbGF0aXZlIGFuZCAgIHJlZ3VsYXRvcnkgcmVmb3JtcyBpbiB0aGVzZSBhcmVhcy4gICAgKC0pSXQgd2FzIGVzdGFibGlzaGVkIGJ5IHRoZSBHLTcgU3VtbWl0IHRoYXQgd2FzIGhlbGQgICBpbiBQYXJpcyBpbiAxOTg5LiBEdXJpbmcgMTk5MSBhbmQgMTk5MiwgdGhlIEZBVEYgICBleHBhbmRlZCBpdHMgbWVtYmVyc2hpcCBmcm9tIHRoZSBvcmlnaW5hbCAxNiB0byAgIDI4IG1lbWJlcnMuIEluIDIwMDAgdGhlIEZBVEYgZXhwYW5kZWQgdG8gMzEgICBtZW1iZXJzLCBhbmQgaGFzIHNpbmNlIGV4cGFuZGVkIHRvIGl0cyBjdXJyZW50IDM5ICAgbWVtYmVycy4gICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogRkFURiBTdGFuZGFyZHMsIHdoaWNoICAgZW5zdXJlIGEgY28tb3JkaW5hdGVkIGdsb2JhbCByZXNwb25zZSB0byBwcmV2ZW50ICAgb3JnYW5pc2VkIGNyaW1lLCBjb3JydXB0aW9uIGFuZCB0ZXJyb3Jpc20uIFRoZXkgICBoZWxwIGF1dGhvcml0aWVzIGdvIGFmdGVyIHRoZSBtb25leSBvZiBjcmltaW5hbHMgICBkZWFsaW5nIGluIGlsbGVnYWwgZHJ1Z3MsIGh1bWFuIHRyYWZmaWNraW5nIGFuZCBvdGhlciAgIGNyaW1lcy4gVGhlIEZBVEYgYWxzbyB3b3JrcyB0byBzdG9wIGZ1bmRpbmcgZm9yICAgd2VhcG9ucyBvZiBtYXNzIGRlc3RydWN0aW9uLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEZBVEYgaXNzdWVzIHR3byAgIGxpc3RzOi0gIEJsYWNrIGxpc3QgKGFzIEhpZ2gtUmlzayBKdXJpc2RpY3Rpb25zIHN1YmplY3QgICB0byBhIENhbGwgZm9yIEFjdGlvbiksIEdyZXkgbGlzdCAocmVmZXJyZWQgdG8gYXMgICBKdXJpc2RpY3Rpb25zIFVuZGVyIEluY3JlYXNlZCBNb25pdG9yaSBGQVRGIGhhcyAgIHJldGFpbmVkIFBha2lzdGFuIG9uIGl0cyB0ZXJyb3Jpc20gZmluYW5jaW5nICAnZ3JleSAgIGxpc3QnLiBQYWtpc3RhbiBoYXMgYmVlbiBvbiB0aGUgZ3JleSBsaXN0IHNpbmNlIEp1bmUgICAyMDE4IGZvciBmYWlsaW5nIHRvIGNoZWNrIG1vbmV5IGxhdW5kZXJpbmcsIGxlYWRpbmcgICB0byAgdGVycm9yIGZpbmFuY2luZy4gQWxzbywgVUFFIGhhcyBiZWVuIHBsYWNlZCBpbiAgIHRoZSBncmV5IGxpc3QgaW4gbWFyY2ggMjAyMi4gIFNvbWUgb2YgdGhlIG90aGVyICAgbm90YWJsZSBjb3VudHJpZXMgaW4gdGhlIEZBVEYgZ3JheSBsaXN0IGFyZSBQYW5hbWEgICBhbmQgVHVya2V5ICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 74,
      "question" : "With reference to the India- Japan relations,  consider the following statements:  1. India and Japan are both countries that are part of  the Quad, G-20 and G-4.  2. Japan is the largest Official Development  Assistance (ODA) partner for India.  3. Dharma Guardian, Shinyuu-Maitri, JIMEX are the  bilateral Military exercises conducted by both  countries.   Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc0",
      "description" : "IEV4cDogICAgIEluZGlhLSBKYXBhbiByZWxhdGlvbjogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBJbmRpYSBpcyB0aGUgbGFyZ2VzdCAgIGRlbW9jcmFjeSBpbiB0aGUgd29ybGQgYW5kIHRoZSBzZXZlbnRoLWxhcmdlc3QgICBjb3VudHJ5IGJ5IGFyZWEsIHRoZSBzZWNvbmQtbW9zdCBwb3B1bG91cyAgIGNvdW50cnkgYW5kICBKYXBhbiBpcyBhbiBpc2xhbmQgY291bnRyeSBpbiBFYXN0IEFzaWEgICBhbmQgIEphcGFuIGlzIHRoZSBlbGV2ZW50aCBtb3N0IHBvcHVsb3VzIGNvdW50cnkgICBpbiB0aGUgd29ybGQsIGFzIHdlbGwgYXMgb25lIG9mIHRoZSBtb3N0IGRlbnNlbHkgICBwb3B1bGF0ZWQgYW5kIHVyYmFuaXplZC4gQm90aCBjb3VudHJpZXMgICBhcmUgRGVtb2NyYXRpYyBjb3VudHJpZXMgYW5kIGhhdmUgZnJpZW5kbHkgICByZWxhdGlvbnMgYW5kIGFyZSBwYXJ0IG9mIHRoZSBRdWFkLCBHLTIwIGFuZCBHLSAgNCBhbmQgZXhwcmVzc2VkIHRoZWlyIGNvbW1pdG1lbnQgdG8gcHJvbW90ZSAgIHBlYWNlLCBzZWN1cml0eSwgYW5kIHByb3NwZXJpdHkgYXQgZ2xvYmFsIGxldmVsLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6ICBKYXBhbiBpcyB0aGUgbGFyZ2VzdCBPZmZpY2lhbCAgIERldmVsb3BtZW50IEFzc2lzdGFuY2UgKE9EQSkgcGFydG5lciBmb3IgSW5kaWEuIEluICAgMjAxMSwgdHdvIGNvdW50cmllcyBzaWduZWQgYSBDb21wcmVoZW5zaXZlICAgRWNvbm9taWMgUGFydG5lcnNoaXAgQWdyZWVtZW50IChDRVBBKSB0byAgIGZhY2lsaXRhdGUgZ3Jvd3RoIGluIGJpbGF0ZXJhbCB0cmFkZS4gRHVyaW5nIDIwMTktMjAsICAgYmlsYXRlcmFsIHRyYWRlIGJldHdlZW4gYm90aCBjb3VudHJpZXMgdG90YWxsZWQgICBVUyQgMTEuODcgYmlsbGlvbi4gSW4gMjAyMCwgSW5kaWEgd2FzIHRoZSAxOHRoICAgbGFyZ2VzdCB0cmFkaW5nIHBhcnRuZXIgZm9yIEphcGFuLCBhbmQgSmFwYW4gd2FzICAgMTJ0aCBsYXJnZXN0IHRyYWRpbmcgcGFydG5lciBmb3IgSW5kaWEuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogIEJvdGggSW5kaWEgYW5kIEphcGFuICAgZW5nYWdlIGluIGJpbGF0ZXJhbCBleGVyY2lzZXMtIERoYXJtYSBHdWFyZGlhbiAgIChBcm15KSwgU2hpbnl1dS1NYWl0cmkgKEFpcmZvcmNlKSwgSklNRVggICAoTmF2eSkuIFNpbmNlIDIwMTUsIGluIE1hbGFiYXIgZXhlcmNpc2VzLCBKYXBhbiAgIGhhcyBhbHNvIGJlY29tZSBhIHBlcm1hbmVudCBwYXJ0aWNpcGFudCBhbG9uZyAgIHdpdGggSW5kaWEgYW5kIHRoZSBVUy4gICAoLSlKYXBhbiB3ZWxjb21lcyB0aGUgSW5kby1QYWNpZmljIE9jZWFuJ3MgSW5pdGlhdGl2ZSAgIChJUE9JKSBhbm5vdW5jZWQgaW4gMjAxOSBhdCBFYXN0IEFzaWEgU3VtbWl0IChFQVMpICAgaW4gQmFuZ2tvayBmb3IgcHJvbW90aW5nIHNhZmUsIHNlY3VyZSwgYW5kIHN0YWJsZSAgIG1hcml0aW1lIGRvbWFpbiwgc3VzdGFpbmFibGUgdXNlIG9mIG1hcmluZSAgIHJlc291cmNlcywgYW5kIGRpc2FzdGVyIHByZXZlbnRpb24gYW5kICAgbWFuYWdlbWVudC4gICBvIFRvIGNvdW50ZXIgQ2hpbmEncyBkb21pbmFuY2Ugb2YgdGhlIHN1cHBseSAgIGNoYWluIGluIHRoZSBJbmRvLVBhY2lmaWMgcmVnaW9uLCBib3RoIGNvdW50cmllcyAgIGxhdW5jaGVkIHRoZSBTdXBwbHkgQ2hhaW4gUmVzaWxpZW5jZSBJbml0aWF0aXZlICAgKFNDUkkpLiAgICBvICBUaGUgQXNpYS1BZnJpY2EgR3Jvd3RoIENvcnJpZG9yIChBQUdDKSAgIGJldHdlZW4gYm90aCBjb3VudHJpZXMgaXMgY2hhcmFjdGVyaXplZCBhcyBhICAgcmVzcG9uc2UgdG8gQ2hpbmEncyBCZWx0IGFuZCBSb2FkIEluaXRpYXRpdmUgKEJSSSkuICAgRXRjLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBFeHRyYSBlZGdlIGJ5IG9ubHkgaWFzICAgICgtKUcyMCBtZW1iZXJzOiBBcmdlbnRpbmEsIEF1c3RyYWxpYSwgQnJhemlsLCAgIENhbmFkYSwgQ2hpbmEsIEVVLCBGcmFuY2UsIEdlcm1hbnksIEluZGlhLCAgICAgIC4gICAgICAgICAgSW5kb25lc2lhLCBJdGFseSwgSmFwYW4sIE1leGljbywgUnVzc2lhLCBTYXVkaSAgIEFyYWJpYSwgU291dGggQWZyaWNhLCBTb3V0aCBLb3JlYSwgVHVya2V5LCBVSywgICBhbmQgVVNBLiAgICgtKUc0IG1lbWJlcnM6IEJyYXppbCwgR2VybWFueSwgSW5kaWEsIGFuZCAgIEphcGFuLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "2 only  ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 75,
      "question" : "Consider the following statements regarding  India's Arctic Policy:  1. India's Arctic policy released by the Ministry of  Science and Technology.  2. It can increase cooperation between India and  countries of the Arctic region under various Arctic  forums.  3. National Centre for Polar and Ocean Research  (NCPOR) is the nodal institution for India's Polar  research programme which includes arctic studies.  Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc1",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIE1pbmlzdHJ5IG9mIEVhcnRoICAgU2NpZW5jZSAoTW9FUykgaGFzIHJlbGVhc2VkIEluZGlhJ3MgQXJjdGljIHBvbGljeSAgIHRpdGxlZCAnSW5kaWEgYW5kIHRoZSBBcmN0aWM6IGJ1aWxkaW5nIGEgcGFydG5lcnNoaXAgICBmb3IgIHN1c3RhaW5hYmxlIGRldmVsb3BtZW50Jy4gICAgIEluZGlhJ3MgQXJjdGljIHBvbGljeSBhcHByb2FjaDogICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgRGVlcGVuIGNvb3BlcmF0aW9uICAgYmV0d2VlbiBJbmRpYSBhbmQgY291bnRyaWVzIG9mIEFyY3RpYyByZWdpb24gdW5kZXIgICB2YXJpb3VzIEFyY3RpYyBmb3J1bXMgYW5kIEluY3JlYXNlIEluZGlhJ3MgICBwYXJ0aWNpcGF0aW9uIGluIHRoZSBBcmN0aWMgQ291bmNpbC4gICBvIEhhcm1vbml6ZSBwb2xhciByZXNlYXJjaCB3aXRoIHRoZSB0aGlyZCBwb2xlLSAgIHRoZSBIaW1hbGF5YXMuICAgbyBDb250cmlidXRlIGJldHRlciBhbmFseXNpcywgcHJlZGljdGlvbiwgYW5kICAgY29vcmRpbmF0ZWQgcG9saWN5bWFraW5nIG9uIHRoZSBpbXBsaWNhdGlvbnMgb2YgICBpY2UgbWVsdGluZyBpbiB0aGUgQXJjdGljIG9uIEluZGlhJ3MgZWNvbm9taWMsICAgbWlsaXRhcnksIGFuZCBzdHJhdGVnaWMgaW50ZXJlc3RzLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6ICBUaGUgcG9saWN5IHdpbGwgaW52b2x2ZSAgIG11bHRpcGxlIHN0YWtlaG9sZGVycywgaW5jbHVkaW5nIGFjYWRlbWlhLCAgIHJlc2VhcmNoIGNvbW11bml0eSwgYnVzaW5lc3MsIGFuZCAgIGluZHVzdHJ5LiBOYXRpb25hbCBDZW50ZXIgZm9yIFBvbGFyIGFuZCBPY2VhbiAgIFJlc2VhcmNoIChOQ1BPUikgaW4gR29hLCBhbiBhdXRvbm9tb3VzICAgaW5zdGl0dXRlIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBFYXJ0aCBTY2llbmNlcywgaXMgICB0aGUgbm9kYWwgaW5zdGl0dXRpb24gZm9yIEluZGlhJ3MgUG9sYXIgcmVzZWFyY2ggICBwcm9ncmFtbWUsIHdoaWNoIGluY2x1ZGVzIEFyY3RpYyBzdHVkaWVzLiAgICgtKU5lZWQgb2YgQXJjdGljIHBvbGljeSBpcyBnaXZlbiBiZWxvdy0gICBvIFJpc2luZyBTZWEgTGV2ZWw6IFRoZSBsYW5kIGljZSBsb3NzIGR1ZSB0byBnbG9iYWwgICB3YXJtaW5nIGlzIGEgbWFqb3IgY29udHJpYnV0b3IgdG8gZ2xvYmFsIHNlYS0gIGxldmVsIHJpc2UsIGl0IGNhbiBoYXZlIGEgc2lnbmlmaWNhbnQgaW1wYWN0IG9uICAgbWFyaW5lIGJpb2RpdmVyc2l0eS4gRnJvbSAxOTcxIHRpbGwgMjAxOSwgQXJjdGljICAgc25vdyBjb3ZlciBhbmQgZXh0ZW50IG9mIEFyY3RpYy1zZWEgaWNlIGhhdmUgICBzaHJ1bmsgYnkgMjEgcGVyY2VudCBhbmQgNDMgcGVyY2VudCAgIHJlc3BlY3RpdmVseS4gICBvIE1vbnNvb25zOiBDaGFuZ2VzIGluIHRoZSBBcmN0aWMgaGF2ZSBhIGh1Z2UgICBpbXBhY3Qgb24gZ2xvYmFsIHdlYXRoZXIsIGNsaW1hdGUgYW5kICAgZWNvc3lzdGVtcyBpbmNsdWRpbmcgSW5kaWFuIG1vbnNvb25zIHdoaWNoICAgaW1wYWN0cyBhZ3JpY3VsdHVyZSwgcHJpbWFyeSBzb3VyY2Ugb2YgbGl2ZWxpaG9vZCAgIGZvciBhYm91dCA1OCBwZXJjZW50IG9mIHBvcHVsYXRpb24gYW5kICAgY29udHJpYnV0ZXMgYXJvdW5kIDIwIHBlcmNlbnQgdG8gdGhlIEdEUC4gICBvIEdsYWNpYWwgbWVsdCBpbiBIaW1hbGF5YXM6IEl0J2xsIGhlbHAgdGhlIHNjaWVudGlmaWMgICBjb21tdW5pdHkgdG8gYmV0dGVyIHVuZGVyc3RhbmQgdGhlIGdsYWNpYWwgbWVsdCAgIGluIEhpbWFsYXlhcywgd2hpY2ggaXMgdGhlIHNvdXJjZSBvZiBHYW5nYSBhbmQgICBCcmFobWFwdXRyYSByaXZlcnMsIGJhc2lucyBvZiB3aGljaCBzdXBwb3J0IGEgICBwb3B1bGF0aW9uIG9mIGFib3V0IDYwMCBtaWxsaW9uLiBFdGMuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 76,
      "question" : "Consider the following statements:   1. Intellectual property (IP) pertains to any original  creation of the human intellect such as artistic,  literary, technical, or scientific creation.  2. The Agreement on Trade-Related Investment  Measures of The World Trade Organization (WTO)  is the most comprehensive multilateral agreement  on IP.  3. Earlier, India and Australia had proposed a  temporary waiver on IP rights for Covid-19 vaccines  and covid related technology.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc2",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEludGVsbGVjdHVhbCBQcm9wZXJ0eSAgIFJpZ2h0cyAoSVBScykgcGVydGFpbnMgdG8gYW55IG9yaWdpbmFsIGNyZWF0aW9uIG9mICAgdGhlIGh1bWFuIGludGVsbGVjdCBzdWNoIGFzIGFydGlzdGljLCBsaXRlcmFyeSwgICB0ZWNobmljYWwsIG9yIHNjaWVudGlmaWMgY3JlYXRpb24uIEludGVsbGVjdHVhbCAgIFByb3BlcnR5IFJpZ2h0cyAoSVBScykgYXJlIHRoZSByaWdodHMgZ2l2ZW4gdG8gICBwZXJzb25zIG92ZXIgdGhlIGNyZWF0aW9ucyBvZiB0aGVpciBtaW5kcy4gVGhleSAgIHVzdWFsbHkgZ2l2ZSB0aGUgY3JlYXRvciBhbiBleGNsdXNpdmUgcmlnaHQgb3ZlciB0aGUgICB1c2Ugb2YgaGlzL2hlciBjcmVhdGlvbiBmb3IgYSBjZXJ0YWluIHBlcmlvZCBvZiB0aW1lLiAgIFRoZSBwcm90ZWN0aW9uIGlzIHVzdWFsbHkgZ2l2ZW4gZm9yIGEgZmluaXRlIHRlcm0gICAodHlwaWNhbGx5IDIwIHllYXJzIGluIHRoZSBjYXNlIG9mIHBhdGVudHMpLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBXb3JsZCBUcmFkZSAgIE9yZ2FuaXphdGlvbiAoV1RPKSBBZ3JlZW1lbnQgb24gVHJhZGUtUmVsYXRlZCAgIEFzcGVjdHMgb2YgSW50ZWxsZWN0dWFsIFByb3BlcnR5IFJpZ2h0cyAgIChUUklQUyksIHdoaWNoIGNhbWUgaW50byBlZmZlY3QgaW4gMTk5NSwgaXMgdGhlIG1vc3QgICBjb21wcmVoZW5zaXZlIG11bHRpbGF0ZXJhbCBhZ3JlZW1lbnQgb24gICBJUC4gIFRyYWRlLVJlbGF0ZWQgQXNwZWN0cyBvZiBJbnRlbGxlY3R1YWwgUHJvcGVydHkgICBSaWdodHMgcGxheXMgYSBjcnVjaWFsIHJvbGUgaW4gZmFjaWxpdGF0aW5nIHRyYWRlIGluICAga25vd2xlZGdlIGFuZCBjcmVhdGl2aXR5LCBpbiByZXNvbHZpbmcgdHJhZGUgICBkaXNwdXRlcyBvdmVyIEludGVsbGVjdHVhbCBwcm9wZXJ0eSBsUCwgYW5kIGluICAgYXNzdXJpbmcgV29ybGQgdHJhZGUgb3JnYW5pemF0aW9uIFdUTyBtZW1iZXJzICAgdGhlIGxhdGl0dWRlIHRvIGFjaGlldmUgdGhlaXIgZG9tZXN0aWMgcG9saWN5ICAgb2JqZWN0aXZlcy4gICAgKC0pU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBFYXJsaWVyLCBJbmRpYSBhbmQgU291dGggICBBZnJpY2EgaGFkIHByb3Bvc2VkIGEgdGVtcG9yYXJ5IHdhaXZlciBvbiBJUCAgIHJpZ2h0cyBmb3IgQ292aWQtMTkgdmFjY2luZXMgYW5kIG90aGVyIENvdmlkLSAgIHJlbGF0ZWQgdGVjaG5vbG9naWVzIGF0IHRoZSBXb3JsZCBUcmFkZSAgIE9yZ2FuaXphdGlvbiAoV1RPKSB1bnRpbCBnbG9iYWwgaGVyZCBpbW11bml0eSAgIHdhcyBhY2hpZXZlZC4gVGhpcyBwcm9wb3NhbCBoYXMgY29tZSB0byBiZSBrbm93biAgIGFzIHRoZSBUUklQUyB3YWl2ZXIuICAgKC0pVGhlIHdhaXZlciB3b3VsZCBlbmFibGUgdGhlIG1hbnVmYWN0dXJpbmcgb2YgICBnZW5lcmljIHZlcnNpb25zIG9mIENvdmlkLTE5IHZhY2NpbmVzLiBJdCAgIHRlbXBvcmFyaWx5ICdyZW1vdmVzJyB0aGUgcHJvdGVjdGlvbnMgcHJvdmlkZWQgICBieSB0aGUgV1RPLiAgIG8gQWJvdXQgMTAwIG9mIHRoZSBXVE8ncyAxNjQgY291bnRyaWVzIGhhdmUgICBzdXBwb3J0ZWQgSW5kaWEncyBwcm9wb3NhbCwgaW5jbHVkaW5nIHRoZSBVbml0ZWQgICBTdGF0ZXMuICAgbyBIb3dldmVyLCB0byBjb21lIGludG8gZm9yY2UsIHRoZSBwcm9wb3NhbCBtdXN0ICAgYmUgYXBwcm92ZWQgYnkgYWxsIG9mIFdUTydzIG1lbWJlciBuYXRpb25zLCBhcyAgIFdUTyB3b3JrcyBvbiBjb25zZW5zdXMuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 77,
      "question" : "Consider the following statements regarding  Colombo Security Conclave (CSC):  1. It helps member nations to build capacity on  common security threats.  2. Mauritius, India and Sri Lanka are the founding  members and Maldives is added as the newest  member.  3. It provides Maritime safety and security and  Bangladesh and Seychelles have observer status in  the 5th meeting.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc3",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IENvbG9tYm8gU2VjdXJpdHkgICBDb25jbGF2ZSAoQ1NDKSwgcmVuYW1lZCB2ZXJzaW9uIG9mIE5hdGlvbmFsICAgU2VjdXJpdHkgQWR2aXNvciAoTlNBKSBMZXZlbCBUcmlsYXRlcmFsIHNlY3VyaXR5ICAgZ3JvdXBpbmcgb24gTWFyaXRpbWUgU2VjdXJpdHkgKGZvcm1lZCBpbiAyMDExKSAgIGFuZCBpdCBoZWxwcyBtZW1iZXIgbmF0aW9ucyB0byBidWlsZCBjYXBhY2l0eSBvbiAgIGNvbW1vbiBzZWN1cml0eSB0aHJlYXRzLlRoZSBmaWZ0aCBtZWV0aW5nIG9mICAgbmF0aW9uYWwgc2VjdXJpdHkgYWR2aXNlcnMgb2YgdGhlIENTQyBpZGVudGlmaWVkIGtleSAgIGFyZWFzIG9mIGNvb3BlcmF0aW9uIHRvIGVuaGFuY2UgYW5kIHN0cmVuZ3RoZW4gICByZWdpb25hbCBzZWN1cml0eSBpbiB0aGUgZm9sbG93aW5nIGZpdmUgcGlsbGFyczogICAgICAuICAgICAgICAgIG8gTWFyaXRpbWUgU2FmZXR5IGFuZCBTZWN1cml0eSAgIG8gQ291bnRlcmluZyBUZXJyb3Jpc20gYW5kIFJhZGljYWxpemF0aW9uICAgbyBDb21iYXRpbmcgVHJhZmZpY2tpbmcgYW5kIFRyYW5zbmF0aW9uYWwgICBPcmdhbml6ZWQgQ3JpbWUgICBvIEN5YmVyIFNlY3VyaXR5LCBQcm90ZWN0aW9uIG9mIENyaXRpY2FsIEluZnJhc3RydWN0dXJlICAgYW5kIFRlY2hub2xvZ3kgICBvIEh1bWFuaXRhcmlhbiBBc3Npc3RhbmNlIGFuZCBEaXNhc3RlciBSZWxpZWYgICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE1hbGRpdmVzLCBJbmRpYSBhbmQgU3JpICAgTGFua2EgYXJlIHRoZSBGb3VuZGluZyBtZW1iZXJzIG9mIHRoZSBDb2xvbWJvICAgc2VjdXJpdHkgQ29uY2xhdmUuIE1hdXJpdGl1cyBpcyBhZGRlZCBhcyB0aGUgICBuZXdlc3QgbWVtYmVyIGluIHRoZSByZWNlbnRseSBjb25jbHVkZWQgICBtZWV0aW5nICAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEJhbmdsYWRlc2ggYW5kICAgU2V5Y2hlbGxlcyBoYXZlIG9ic2VydmVyIHN0YXR1cyBpbiB0aGUgNXRoICAgbWVldGluZy4gICAoLSlDU0MgaXMgc2VlbiBhcyBvdGhlciBzdGVwIGJ5IEluZGlhIHRvIGVuaGFuY2UgaXRzICAgbWFyaXRpbWUgc2VjdXJpdHkuIE1hcml0aW1lIHNlY3VyaXR5IGJyb2FkbHkgICBjbGFzc2lmaWVkIGlzc3VlcyBpbiB0aGUgbWFyaXRpbWUgZG9tYWluIGNvbXByaXNpbmcgICBuYXRpb25hbCBzZWN1cml0eSwgbWFyaW5lIGVudmlyb25tZW50LCBlY29ub21pYyAgIGRldmVsb3BtZW50LCBhbmQgaHVtYW4gc2VjdXJpdHkuIENTQyBpcyBiZWluZyAgIHNlZW4gYXMgSW5kaWEncyBvdXRyZWFjaCB0byB0aGUgSW5kaWFuIE9jZWFuIHRvICAgdW5kZXJsaW5lIHJlZ2lvbmFsIGNvb3BlcmF0aW9uIGFuZCBzaGFyZWQgc2VjdXJpdHkgICBvYmplY3RpdmVzLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "1 and 3 only   ",
        "option3" : "2 only  ",
        "option4" : "1, 2 and 3 only   "
      }
    },
    {
      "index" : 78,
      "question" : "Consider the following statements regarding  the Council of Europe:  1. It is an international organization founded in the  wake of World War II to uphold human rights,  democracy and the rule of law in Europe.  2. The Council makes binding laws and has the power  to enforce select international agreements  reached by European states on various topics.  3. The Council is an official United Nations Observer.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc4",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IENvdW5jaWwgb2YgICBFdXJvcGUgZXN0YWJsaXNoZWQgaW4gMTk0OSBieSB0aGUgVHJlYXR5IG9mICAgTG9uZG9uIGFuZCBpbnRlcm5hdGlvbmFsIG9yZ2FuaXphdGlvbiBmb3VuZGVkIGluICAgdGhlIHdha2Ugb2YgV29ybGQgV2FyIElJIHRvIHVwaG9sZCBodW1hbiByaWdodHMsICAgZGVtb2NyYWN5IGFuZCB0aGUgcnVsZSBvZiBsYXcgaW4gRXVyb3BlLiAgVGhlICAgY291bmNpbCBpcyBkaXN0aW5jdCBmcm9tIHRoZSBFdXJvcGVhbiBVbmlvbiAoRVUpLiAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSXQgaW5jbHVkZXMgNDcgbWVtYmVyICAgc3RhdGVzICgyNyBvZiB3aGljaCBhcmUgRVUgbWVtYmVycykuIFRoZSBDb3VuY2lsICAgY2Fubm90IG1ha2UgYmluZGluZyBsYXdzLCBidXQgaXQgZG9lcyBoYXZlIHRoZSAgIHBvd2VyIHRvIGVuZm9yY2Ugc2VsZWN0IGludGVybmF0aW9uYWwgYWdyZWVtZW50cyAgIHJlYWNoZWQgYnkgRXVyb3BlYW4gc3RhdGVzIG9uIHZhcmlvdXMgdG9waWNzLiAgICAoLSlTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgQ291bmNpbCBpcyBhbHNvICAgYW4gb2ZmaWNpYWwgVW5pdGVkIE5hdGlvbnMgT2JzZXJ2ZXIuIEFuZCBpdHMgICBoZWFkcXVhcnRlcnMgd2VyZSBlc3RhYmxpc2hlZCBpbiBTdHJhc2JvdXJnLCAgIEZyYW5jZS4gVGhlIGJvZHkgb2YgdGhlIENvdW5jaWwgb2YgRXVyb3BlIGlzIHRoZSAgIEV1cm9wZWFuIENvdXJ0IG9mIEh1bWFuIFJpZ2h0cywgd2hpY2ggZnVuY3Rpb25zICAgb24gdGhlIGJhc2lzIG9mIHRoZSBFdXJvcGVhbiBDb252ZW50aW9uIG9uICAgSHVtYW4gUmlnaHRzLiAgICgtKVRoZSBjb3VuY2lsIGhhcyB0d28gc3RhdHV0b3J5IGJvZGllcyBhcmUgICB0aGUgQ29tbWl0dGVlIG9mIE1pbmlzdGVycywgY29tcHJpc2luZyAgIHRoZSBmb3JlaWduIG1pbmlzdGVycyBvZiBlYWNoIG1lbWJlciBzdGF0ZSwgYW5kICAgdGhlIFBhcmxpYW1lbnRhcnkgQXNzZW1ibHksIGNvbXBvc2VkIG9mICAgbWVtYmVycyBvZiB0aGUgbmF0aW9uYWwgcGFybGlhbWVudHMgb2YgZWFjaCAgIG1lbWJlciBzdGF0ZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 only   ",
        "option3" : "1 and 3 only   ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 79,
      "question" : "Which one of the following was the theme of  international women day 2022?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDc5",
      "description" : "IEV4cDogICAgICgtKU9wdGlvbiBBIGlzIGNvcnJlY3Q6IEludGVybmF0aW9uYWwgV29tZW4ncyBEYXkgICAoSVdEKSAyMDIyIENlbGVicmF0ZWQgZXZlcnkgeWVhciBhcm91bmQgdGhlICAgd29ybGQgb24gTWFyY2ggOCBhbmQgVGhlbWUgZm9yIEludGVybmF0aW9uYWwgICBXb21lbidzIERheSwgMjAyMiAoSVdEIDIwMjIpIGlzICdHZW5kZXIgZXF1YWxpdHkgICB0b2RheSBmb3IgYSBzdXN0YWluYWJsZSB0b21vcnJvdycuICAgKC0pIElXRCAyMDIyIGNhbXBhaWduIHRoZW1lIGlzICcjQnJlYWtUaGVCaWFzJzotIEl0ICAgaW50ZW5kcyB0byBwcm9tb3RlIGEgJ2dlbmRlciBlcXVhbCB3b3JsZCcsIHdoaWNoICAgaXMgJ2ZyZWUgb2YgYmlhcywgc3RlcmVvdHlwZXMsIGFuZCBkaXNjcmltaW5hdGlvbicuICAgJ0Egd29ybGQgdGhhdCBpcyBkaXZlcnNlLCBlcXVpdGFibGUsIGFuZCBpbmNsdXNpdmUnLCAgIGFuZCB3aGVyZSAnZGlmZmVyZW5jZSBpcyB2YWx1ZWQgYW5kIGNlbGVicmF0ZWQnLiAgICgtKUlXRCBoYXMgYmVlbiBjZWxlYnJhdGVkIGZvciBvdmVyIGEgY2VudHVyeSBub3csICAgYnV0ICBidXQgbWFueSBwZW9wbGUgdGhpbmsgb2YgaXQgcHVyZWx5IGFzIGEgZmVtaW5pc3QgICBwZXJzcGVjdGl2ZS4gSG93ZXZlciwgaXRzIHJvb3RzIGFyZSBmb3VuZCBpbiB0aGUgICBsYWJvdXIgbW92ZW1lbnQsIHdoZXJlaW4gaXQgd2FzIGZpcnN0IG9yZ2FuaXNlZCBpbiAgIDE5MTEgYnkgdGhlIGVhcmx5IDIwdGggY2VudHVyeSBNYXJ4aXN0IGZyb20gICBHZXJtYW55IENsYXJhIFpldGtpbi4gICAoLSlDb2xvcnMgc3ltYm9saXplIEludGVybmF0aW9uYWwgV29tZW4ncyBEYXkgICBQdXJwbGUsIGdyZWVuIGFuZCB3aGl0ZSBhcmUgdGhlIGNvbG9ycyBvZiAgIEludGVybmF0aW9uYWwgV29tZW4ncyBEYXkuICAgbyBQdXJwbGUgc2lnbmlmaWVzIGp1c3RpY2UgYW5kIGRpZ25pdHkuICAgbyBHcmVlbiBzeW1ib2xpemVzIGhvcGUuICAgbyAgV2hpdGUgcmVwcmVzZW50cyBwdXJpdHksIGFsYmVpdCBhIGNvbnRyb3ZlcnNpYWwgICBjb25jZXB0LiAgICgtKVRoZSBjb2xvcnMgb3JpZ2luYXRlZCBmcm9tIHRoZSBXb21lbidzIFNvY2lhbCBhbmQgICBQb2xpdGljYWwgVW5pb24gKFdTUFUpIGluIHRoZSBVSyBpbiAxOTA4LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Break The Bias  ",
        "option2" : "Each for Equal  ",
        "option3" : "Gender equality today for a sustainable tomorrow  ",
        "option4" : "Think equal, build smart, innovate for change   "
      }
    },
    {
      "index" : 80,
      "question" : "Which of the following organizations published  the World Happiness Report 2014?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDgw",
      "description" : "IEV4cDogICAgICgtKVRoZSBVbml0ZWQgTmF0aW9ucyBTdXN0YWluYWJsZSBEZXZlbG9wbWVudCAgIFNvbHV0aW9ucyBOZXR3b3JrIHJlbGVhc2VkIHRoZSB3b3JsZCBoYXBwaW5lc3MgICByZXBvcnQgYW5kIHB1Ymxpc2hlZCBzaW5jZSAyMDEyLCB0aGUgV29ybGQgICBIYXBwaW5lc3MgUmVwb3J0IGlzIGJhc2VkIG9uIHR3byBrZXkgaWRlYXM6IC0gICBIYXBwaW5lc3Mgb3IgbGlmZSBldmFsdWF0aW9uIG1lYXN1cmVkIHRocm91Z2ggICBvcGluaW9uIHN1cnZleXMgYW5kIGlkZW50aWZ5aW5nIGtleSBlbGVtZW50cyB0aGF0ICAgZGV0ZXJtaW5lIHdlbGwtYmVpbmcgYW5kIGxpZmUgZXZhbHVhdGlvbiBhY3Jvc3MgICBjb3VudHJpZXMuICAgKC0pUGFyYW1ldGVyczogIFRoZSByZXBvcnQgdXN1YWxseSByYW5rcyAxNTAgICBjb3VudHJpZXMgYmFzZWQgb24gc2V2ZXJhbCBmYWN0b3JzIHN1Y2ggYXMgcmVhbCBHRFAgICBwZXIgY2FwaXRhLCBzb2NpYWwgc3VwcG9ydCwgaGVhbHRoeSBsaWZlIGV4cGVjdGFuY3ksICAgZnJlZWRvbSB0byBtYWtlIGxpZmUgY2hvaWNlcywgZ2VuZXJvc2l0eSBhbmQgICBwZXJjZXB0aW9ucyBvZiBjb3JydXB0aW9uLiAgICgtKVRoaXMgeWVhciwgdGhlIHJlcG9ydCByYW5rZWQgMTQ2IGNvdW50cmllcy4gUGVyICAgYW5udW0sIGVhY2ggdmFyaWFibGUgbWVhc3VyZXMgYSBwb3B1bGF0ZWQtICB3ZWlnaHRlZCBhdmVyYWdlIHNjb3JlIG9uIGEgc2NhbGUgb2YgMC0xMCB0aGF0IGlzICAgdHJhY2tlZCBvdmVyIGEgcGVyaW9kIG9mIHRpbWUgYW5kIGZ1cnRoZXIgICBjb21wYXJlZCB3aXRoIG90aGVyIGNvdW50cmllcy4gVGhpcyB5ZWFyLCAgIGNvdW50cmllcyB3aGljaCByYW5rZWQgaW4gdGhlIHRvcCAxMCBsYXN0IHllYXIsICAgbW92ZWQgdXB3YXJkcyBhbmQgZG93bndhcmRzLiAgICgtKUtleSBGaW5kaW5nIG9mIHRoZSByZXBvcnQ6ICAgICBvIEZpbmxhbmQgaGFzIGJlZW4gbmFtZWQgdGhlIHdvcmxkJ3MgaGFwcGllc3QgICBjb3VudHJ5IGZvciB0aGUgZmlmdGggeWVhciBydW5uaW5nIGZvbGxvd2VkIGJ5ICAgRGVubWFyayAgICAgIC4gICAgICAgICAgbyAuIEluZGlhIHNhdyBhIG1hcmdpbmFsIGltcHJvdmVtZW50IGluIGl0cyAgIHJhbmtpbmcsIGp1bXBpbmcgdGhyZWUgc3BvdHMgdG8gMTM2LCBmcm9tIDEzOSBhICAgeWVhciBhZ28uICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "United Nations Sustainable Development Solutions   Network.  ",
        "option2" : "World Bank   ",
        "option3" : "World economic forum  ",
        "option4" : "World Health organization   "
      }
    },
    {
      "index" : 81,
      "question" : "Consider the following pair:      Exercise                        Country   . 1. SLINEX            -           Sri Lanka - India  2. LAMITIYE       -           Seychelles - India  3. DUSTLIK        -            Uzbekistan - India  Which of the pairs given above is/are correctly  matched?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDgx",
      "description" : "IEV4cDogICAgICgtKVBhaXIgMSBpcyBjb3JyZWN0OiBTTElORVggaXMgYSBzZXJpZXMgb2YgbmF2YWwgICBleGVyY2lzZXMgYmV0d2VlbiB0aGUgSW5kaWFuIE5hdnkgYW5kIHRoZSBTcmkgICBMYW5rYSBOYXZ5LiAgU0xJTkVYIGV4ZXJjaXNlIGlzIGNvbmR1Y3RlZCBieSB0aGUgICBTcmlsYW5rYSBOYXZ5LiBUaGUgZXhlcmNpc2UgYWltcyB0byBlbmhhbmNlICAgaW50ZXJvcGVyYWJpbGl0eSwgaW1wcm92ZSBtdXR1YWwgdW5kZXJzdGFuZGluZyAgIGFuZCBleGNoYW5nZSBiZXN0IHByYWN0aWNlcyBhbmQgcHJvY2VkdXJlcyBmb3IgICBtdWx0aS1mYWNldGVkIG1hcml0aW1lIG9wZXJhdGlvbnMgYmV0d2VlbiBib3RoICAgbmF2aWVzLiBTTElORVggaXMgaW4gY29uc29uYW5jZSB3aXRoIEluZGlhJ3MgcG9saWN5ICAgb2YgJ05laWdoYm91cmhvb2QgRmlyc3QnIGFuZCBQTSBNb2RpJ3MgdmlzaW9uIG9mICAgJ1NlY3VyaXR5IGFuZCBHcm93dGggZm9yIEFsbCBpbiB0aGUgUmVnaW9uIChTQUdBUiknLiAgICgtKVBhaXIgMiBpcyBjb3JyZWN0OiBJbmRpYS0gU2V5Y2hlbGxlcyBKb2ludCBNaWxpdGFyeSAgIEV4ZXJjaXNlIExBTUlUSVlFIENvbmNsdWRlcyBhdCBTZXljaGVsbGVzLCAgIEV4ZXJjaXNlIExBTUlUSVlFIHdpdGggU2V5Y2hlbGxlcyBpcyBzaWduaWZpY2FudCBpbiAgIHRlcm1zIG9mIGdyb3dpbmcgc2VjdXJpdHkgY29uY2VybnMgaW4gdGhlIEluZGlhbiAgIE9jZWFuIFJlZ2lvbi4gIFNleWNoZWxsZXMgaXMgYW4gYXJjaGlwZWxhZ2ljIGlzbGFuZCAgIGNvdW50cnkgY29uc2lzdGluZyBvZiAxMTUgaXNsYW5kcyBpbiB0aGUgSW5kaWFuICAgT2NlYW4gYXQgdGhlIGVhc3Rlcm4gZWRnZSBvZiB0aGUgU29tYWxpIFNlYS4gICAoLSlQYWlyIDMgaXMgY29ycmVjdDogRVgtRFVTVExJSyBiZXR3ZWVuIHRoZSBJbmRpYW4gICBhcm15IGFuZCBVemJla2lzdGFuIGFybXkgYmVnaW5zICAgYXQgWWFuZ2lhcmlrLiAgVGhlIHRyYWluaW5nIHNjaGVkdWxlIHdpbGwgZm9jdXMgICBwcmltYXJpbHkgb24gc2hhcmluZyB0YWN0aWNhbCBsZXZlbCBkcmlsbHMgYW5kIGxlYXJuaW5nICAgb2YgYmVzdCBwcmFjdGljZXMgZnJvbSBlYWNoIG90aGVyLiBJdCBhaW1zIGF0ICAgZW5oYW5jaW5nIHVuZGVyc3RhbmRpbmcsIGNvb3BlcmF0aW9uIGFuZCAgIGludGVyb3BlcmFiaWxpdHkgYmV0d2VlbiB0d28gYXJtaWVzLiBUaGUgbGFzdCAgIGVkaXRpb24gb2YgRFVTVExJSyB3YXMgY29uZHVjdGVkIGluIFJhbmlraGV0ICAgKFV0dGFyYWtoYW5kKSBpbiBNYXJjaCAyMDIxLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 82,
      "question" : "With reference to Biological and Toxin Weapons  Convention BTWC, consider the following  statements:   1. It is the first multilateral disarmament treaty  banning an entire category of weapons of  mass destruction.  2. In this convention, 183 States Parties and India are  a party to the convention.  3. BTWC has no implementation body but there is a  review conference mechanism every 10 years to  review the convention's implementation.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDgy",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBCaW9sb2dpY2FsIFdlYXBvbnMgICBDb252ZW50aW9uIChCV0MpIHdhcyBuZWdvdGlhdGVkIGJ5IHRoZSAgIENvbmZlcmVuY2Ugb2YgdGhlIENvbW1pdHRlZSBvbiBEaXNhcm1hbWVudCBpbiAgIEdlbmV2YSwgU3dpdHplcmxhbmQuIEJXQyBvcGVuZWQgZm9yIHNpZ25hdHVyZSBpbiAgIDE5NzIgYW5kIGVudGVyZWQgaW50byBmb3JjZSBpbiAxOTc1IGFuZCBCV0MgaXMgdGhlICAgZmlyc3QgbXVsdGlsYXRlcmFsIGRpc2FybWFtZW50IHRyZWF0eSBiYW5uaW5nIGFuICAgZW50aXJlIGNhdGVnb3J5IG9mIHdlYXBvbnMgb2YgbWFzcyBkZXN0cnVjdGlvbiAgIChXTUQpLiAgICAgKC0pVGhlIGNvbnZlbnRpb24gZWZmZWN0aXZlbHkgcHJldmVudHMgICB0aGUgZGV2ZWxvcG1lbnQsIHByb2R1Y3Rpb24sIGFjcXVpc2l0aW9uLCAgIHRyYW5zZmVyLCBzdG9ja3BpbGluZyBhbmQgdXNlIG9mIGJpb2xvZ2ljYWwgYW5kIHRveGluICAgd2VhcG9ucy4gSWYgYSBzdGF0ZSBwb3NzZXNzZXMgYW55IGFnZW50LCB0b3hpbiwgb3IgICBkZWxpdmVyeSBzeXN0ZW0gZm9yIHRoZW0sIHRoZXkgaGF2ZSBuaW5lIG1vbnRocyAgIGZyb20gZW50cnkgaW50byBmb3JjZSBvZiB0aGUgdHJlYXR5IHRvIGRlc3Ryb3kgdGhlaXIgICBzdG9ja3BpbGVzIG9yIGRpdmVydCB0aGVtIGZvciBwZWFjZWZ1bCB1c2UuICAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEluIHRoZSBjb252ZW50aW9uIDE4MyAgIFN0YXRlcyBQYXJ0aWVzIGFuZCA0IFNpZ25hdG9yeSBTdGF0ZXMgYW5kIEluZGlhIGlzICAgYWxzbyBhIHBhcnR5IHRvIHRoZSBjb252ZW50aW9uLiBUZW4gc3RhdGVzIGhhdmUgICBuZWl0aGVyIHNpZ25lZCBub3IgcmF0aWZpZWQgdGhlIEJUV0M6IENoYWQsICAgQ29tb3JvcywgRGppYm91dGksIEVyaXRyZWEsIElzcmFlbCwgS2lyaWJhdGksICAgTWljcm9uZXNpYSwgTmFtaWJpYSwgU291dGggU3VkYW4sIGFuZCBUdXZhbHUuICAgKC0pU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiAgVGhlcmUgaXMgbm8gICBpbXBsZW1lbnRhdGlvbiBib2R5IG9mIHRoZSBCaW9sb2dpY2FsIFdlYXBvbnMgICBDb252ZW50aW9uIChCV0MpIGFsbG93aW5nIGZvciBibGF0YW50IHZpb2xhdGlvbnMgICBhcyBzZWVuIGluIHRoZSBwYXN0LiBUaGVyZSBpcyBhIHJldmlldyBjb25mZXJlbmNlICAgZXZlcnkgNSB5ZWFycyB0byByZXZpZXcgdGhlIGNvbnZlbnRpb24ncyAgIGltcGxlbWVudGF0aW9uIGFuZCBlc3RhYmxpc2ggY29uZmlkZW5jZS1idWlsZGluZyAgIG1lYXN1cmVzLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 and 3 only   ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 83,
      "question" : "Consider the following statements regarding  'hypersonic missile':  1. A hypersonic missile is a weapon system that has  five times the speed of light and 7 times more than  sound.  2. Hypersonic missiles do not follow a ballistic  trajectory and can be maneuvered to the intended  target.  3. Hypersonic weapons cannot challenge detection  and defence due to their speed, manoeuvrability  and high altitude of flight.  Which of the statements given above is/are  incorrect?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDgz",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudC4gMSBpcyBpbmNvcnJlY3Q6IEEgaHlwZXJzb25pYyBtaXNzaWxlIGlzIGEgICB3ZWFwb24gc3lzdGVtIHdoaWNoIGZsaWVzIGF0IGxlYXN0IGF0IHRoZSBzcGVlZCBvZiAgIE1hY2ggNSBpLmUuIDUgdGltZXMgdGhlIHNwZWVkIG9mIHNvdW5kIGFuZCBpcyAgIG1hbmV1dmVyYWJsZS4gVGhlIG1hbmV1dmVyYWJpbGl0eSBvZiB0aGUgICBoeXBlcnNvbmljIG1pc3NpbGUgaXMgd2hhdCBzZXRzIGl0IGFwYXJ0IGZyb20gYSAgIGJhbGxpc3RpYyBtaXNzaWxlIGFzIHRoZSBsYXR0ZXIgZm9sbG93cyBhIHNldCBjb3Vyc2Ugb3IgICBhIGJhbGxpc3RpYyB0cmFqZWN0b3J5LiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaHVzLCB1bmxpa2UgYmFsbGlzdGljICAgbWlzc2lsZXMsIGh5cGVyc29uaWMgbWlzc2lsZXMgZG8gbm90IGZvbGxvdyBhICAgYmFsbGlzdGljIHRyYWplY3RvcnkgYW5kIGNhbiBiZSBtYW5ldXZlcmVkIHRvIHRoZSAgIGludGVuZGVkIHRhcmdldC4gVGhlIDIgdHlwZXMgb2YgaHlwZXJzb25pYyAgIHdlYXBvbnMgc3lzdGVtcyBhcmUgSHlwZXJzb25pYyBHbGlkZSBWZWhpY2xlcyAgIChIR1YpIGFuZCBIeXBlcnNvbmljIENydWlzZSBNaXNzaWxlcy4gICAgKC0pVGhlIEhHViBhcmUgbGF1bmNoZWQgZnJvbSBhIHJvY2tldCBiZWZvcmUgZ2xpZGluZyAgIHRvIHRoZSBpbnRlbmRlZCB0YXJnZXQgd2hpbGUgdGhlIGh5cGVyc29uaWMgY3J1aXNlICAgbWlzc2lsZSBpcyBwb3dlcmVkIGJ5IGFpciBicmVhdGhpbmcgaGlnaCBzcGVlZCAgIGVuZ2luZXMgb3IgJ3NjcmFtamV0cycgYWZ0ZXIgYWNxdWlyaW5nIHRoZWlyIHRhcmdldCAgICgtKUFkdmFudGFnZXMgb2YgaHlwZXJzb25pYyBtaXNzaWxlcyAgIG8gVGhleSBjYW4gZW5hYmxlIHJlc3BvbnNpdmUsIGxvbmcgcmFuZ2Ugc3RyaWtlICAgb3B0aW9ucyBhZ2FpbnN0IGRpc3RhbnQsIGRlZmVuZGVkIG9yIHRpbWUgY3JpdGljYWwgICB0aHJlYXRzICAgbyBDb252ZW50aW9uYWwgaHlwZXJzb25pYyB3ZWFwb25zIHVzZSBvbmx5ICAga2luZXRpYyBlbmVyZ3kgaS5lLiBlbmVyZ3kgZGVyaXZlZCBmcm9tIG1vdGlvbiwgICB0byBkZXN0cm95IHVuaGFyZGVuZWQgdGFyZ2V0cyBvciBldmVuICAgdW5kZXJncm91bmQgZmFjaWxpdGllcy4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6ICBIeXBlcnNvbmljIHdlYXBvbnMgY2FuICAgY2hhbGxlbmdlIGRldGVjdGlvbiBhbmQgZGVmZW5zZSBkdWUgdG8gICB0aGVpciBzcGVlZCwgbWFuZXV2ZXJhYmlsaXR5IGFuZCBsb3cgYWx0aXR1ZGUgb2YgICBmbGlnaHQuIEdyb3VuZCBiYXNlZCByYWRhcnMgb3IgdGVycmVzdHJpYWwgcmFkYXJzICAgY2Fubm90IGRldGVjdCBoeXBlcnNvbmljIG1pc3NpbGVzIHVudGlsIGxhdGUgaW4gdGhlICAgZmxpZ2h0IG9mIHRoZSB3ZWFwb24uIFRoaXMgZGVsYXllZCBkZXRlY3Rpb24gbWFrZXMgICBpdCBkaWZmaWN1bHQgZm9yIHRoZSByZXNwb25kZXJzIHRvIHRoZSBtaXNzaWxlIGF0dGFjayAgIHRvIGFzc2VzcyB0aGVpciBvcHRpb25zIGFuZCB0byBhdHRlbXB0IHRvIGludGVyY2VwdCAgIHRoZSBtaXNzaWxlLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 3 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1, 2 and 3  ",
        "option4" : "2 only    "
      }
    },
    {
      "index" : 84,
      "question" : "Which of the following three countries are  members of the Bucharest Nine?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg0",
      "description" : "IEV4cDogICAgKC0pVGhlIEJ1Y2hhcmVzdCBOaW5lIGlzIGEgZ3JvdXAgb2YgOSBOQVRPIGNvdW50cmllcyAgIGluIEVhc3Rlcm4gRXVyb3BlIHRoYXQgYmVjYW1lIHBhcnQgb2YgdGhlIFVTLWxlZCAgIG1pbGl0YXJ5IGFsbGlhbmNlIGFmdGVyIHRoZSBlbmQgb2YgdGhlIENvbGQgV2FyLiBUaGUgICAgICAuICAgICAgICAgIEJ1Y2hhcmVzdCBGb3JtYXQsIG9mdGVuIGFiYnJldmlhdGVkIGFzIEI5LCB3YXMgICBmb3VuZGVkIG9uIE5vdmVtYmVyIDQsIDIwMTUuICAgKC0pSXRzIG5hbWUgY29tZXMgZnJvbSBCdWNoYXJlc3QsIHRoZSBjYXBpdGFsIG9mICAgUm9tYW5pYS4gQjksIGl0IGlzIGFsc28gcmVnYXJkZWQgYXMgdGhlICd2b2ljZSBvZiB0aGUgICBFYXN0ZXJuIEZsYW5rJyBpbiB0aGUgTkFUTyBhbGxpYW5jZS4gVGhlIGdyb3VwICAgd2FzIGZvcm1lZCBvbiB0aGUgaW5pdGlhdGl2ZSBvZiBLbGF1cyBJb2hhbm5pcywgd2hvICAgaGFzIGJlZW4gUHJlc2lkZW50IG9mIFJvbWFuaWEgYW5kIEFuZHJ6ZWogRHVkYSwgICB3aG8gYmVjYW1lIFByZXNpZGVudCBvZiBQb2xhbmQgaW4gQXVndXN0IDIwMTUuICAgKC0pVGhlIG1lbWJlcnMgb2YgQnVjaGFyZXN0J3MgOSBjb3VudHJpZXMgYXJlICAgUm9tYW5pYSBhbmQgUG9sYW5kLCBIdW5nYXJ5LCBCdWxnYXJpYSwgdGhlIEN6ZWNoICAgUmVwdWJsaWMsIFNsb3Zha2lhLCBhbmQgdGhlIHRocmVlIEJhbHRpYyByZXB1YmxpY3MgICBvZiBFc3RvbmlhLCBMYXR2aWEsIGFuZCBMaXRodWFuaWEuICBCOSBwcm92aWRlcyBhICAgcGxhdGZvcm0gZm9yIGRlZXBlbmluZyB0aGUgZGlhbG9ndWUgYW5kICAgY29uc3VsdGF0aW9uIGFtb25nIHRoZSBwYXJ0aWNpcGFudCBhbGxpZWQgc3RhdGVzICAgYWNyb3NzIHRoZSBtZW1iZXJzIG9mIE5BVE8uICAgKC0pQWxsIDkgTmF0byBjb3VudHJpZXMgd2VyZSBvbmNlIGNsb3NlbHkgYWxpZ25lZCB3aXRoICAgdGhlIG5vdyBkaXNzb2x2ZWQgU292aWV0IFVuaW9uLCBidXQgbGF0ZXIgY2hvc2UgICB0aGUgcGF0aCBvZiBkZW1vY3JhY3kuIEFsbCBtZW1iZXJzIG9mIHRoZSBCOSBhcmUgICBwYXJ0IG9mIHRoZSBFdXJvcGVhbiBVbmlvbiAoRVUpIGFuZCBOQVRPLiAgVGhlICAgQnVjaGFyZXN0IDkgY291bnRyaWVzIGhhdmUgYmVlbiBjcml0aWNhbCBvZiBSdXNzaWEncyAgIGFnZ3Jlc3Npb24gYWdhaW5zdCBVa3JhaW5lIHNpbmNlIDIwMTQsIHdoZW4gdGhlICAgd2FyIGluIHRoZSBEb25iYXMgc3RhcnRlZCBhbmQgUnVzc2lhIGFubmV4ZWQgdGhlICAgQ3JpbWVhbiBQZW5pbnN1bGEuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Romania and Poland and Finland  ",
        "option2" : "Republic of Estonia, Latvia and Lithuania  ",
        "option3" : "Bulgaria, the Czech Republic and Slovakia  ",
        "option4" : "Bulgaria, Hungary and Germany   "
      }
    },
    {
      "index" : 85,
      "question" : "With reference to Tuberculosis disease,  consider the following statements:  1. Tuberculosis is caused by Mycobacterium  Tuberculosis, affecting only in the lungs of humans.  2. World Tuberculosis (TB) Day is observed every year  on 24th March.  3. India accounts for around 26% of the total TB cases  across the world.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg1",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVHViZXJjdWxvc2lzIChUQikgaXMgICBjYXVzZWQgYnkgYSBiYWN0ZXJpdW0gY2FsbGVkIE15Y29iYWN0ZXJpdW0gICB0dWJlcmN1bG9zaXMsIGJlbG9uZ2luZyB0byB0aGUgTXljb2JhY3RlcmlhY2VhZSAgIGZhbWlseSBjb25zaXN0aW5nIG9mIGFib3V0IDIwMCBtZW1iZXJzLiBUQiBhZmZlY3RzICAgdGhlIGx1bmdzIG9mIGh1bWFucyAocHVsbW9uYXJ5IFRCKSwgYnV0IGl0IGNhbiAgIGFsc28gYWZmZWN0IG90aGVyIG9yZ2FucyAoZXh0cmEtcHVsbW9uYXJ5IFRCKS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBXb3JsZCBUdWJlcmN1bG9zaXMgKFRCKSAgIERheSBpcyBjZWxlYnJhdGVkIG9uIDI0dGggTWFyY2ggdG8gc3ByZWFkICAgYXdhcmVuZXNzIGFib3V0IHRoZSBkaXNhc3Ryb3VzIGhlYWx0aCwgc29jaWFsLCBhbmQgICBlY29ub21pYyBjb25zZXF1ZW5jZXMgb2YgVHViZXJjdWxvc2lzLiBJdCB0YWtlcyAgIGVmZm9ydHMgdG8gZW5kIHRoZSBUQiBlcGlkZW1pYyBnbG9iYWxseS4gVGhlIHRoZW1lICAgb2YgdGhlIHllYXIgMjAyMiBpcyAnSW52ZXN0IHRvIEVuZCBUQi4gU2F2ZSBMaXZlcy4nICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogQWNjb3JkaW5nIHRvIHRoZSBXb3JsZCAgIGhlYWx0aCBvcmdhbml6YXRpb24sIGluIDIwMjAsIGFyb3VuZCA5LDkwMCwwMDAgICBwZW9wbGUgd2lsbCBmYWxsIGlsbCB3aXRoIFRCIGFuZCBkaWUsIGFyb3VuZCAgIDEsNTAwLDAwMC4gU2luY2UgdGhlIDIwMDAgeWVhciwgNjYsMDAwLDAwMCBsaXZlcyAgIGhhdmUgYmVlbiBzYXZlZCBieSBlZmZvcnRzIHRha2VuIGdsb2JhbGx5IHRvIGVuZCAgIFRCLiBJbmRpYSBhY2NvdW50cyBmb3IgYXJvdW5kIDI2JSBvZiB0aGUgdG90YWwgVEIgICBjYXNlcyBhY3Jvc3MgdGhlIHdvcmxkLiBUaGVyZWZvcmUsIFdvcmxkIFRCIERheSBpcyAgIG9ic2VydmVkIHRvIGVkdWNhdGUgcGVvcGxlIGFyb3VuZCB0aGUgd29ybGQgICBhYm91dCB0aGUgZGlzZWFzZSBUQiBhbmQgSXRzIGltcGFjdCAgICAgR2xvYmFsIEVmZm9ydHM6ICAgKC0pVGhlIFdITyBoYXMgbGF1bmNoZWQgYSBqb2ludCBpbml0aWF0aXZlICdGaW5kLiAgIFRyZWF0LiBBbGwuICNFbmRUQicgd2l0aCB0aGUgR2xvYmFsIEZ1bmQgYW5kIFN0b3AgICBUQiBQYXJ0bmVyc2hpcC4gICAoLSlXSE8gYWxzbyByZWxlYXNlcyB0aGUgR2xvYmFsIFR1YmVyY3Vsb3NpcyBSZXBvcnQuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "3 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 86,
      "question" : "With reference to Man-Portable Air-Defense  Systems (MANPADS), consider the following  statements:   1. MANPADS are short-range portable surface-to-air  missiles fired only by helicopters and recently used  by Russia in the Ukraine war.  2. They help shield troops from aerial attacks and are  used to destroy or incapacitate military tanks.  3. MANPADS have a maximum range of 8 kilometres  and can engage targets at altitudes of 4.5 km.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg2",
      "description" : "IEV4cDogICAgICgtKVN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogVGhlIFVuaXRlZCBTdGF0ZXMgYW5kICAgTm9ydGggQXRsYW50aWMgVHJlYXR5IE9yZ2FuaXphdGlvbiAoTkFUTykgYXJlICAgc2hpcHBpbmcgd2VhcG9ucyBpbnRvIFVrcmFpbmUsIGluY2x1ZGluZyBoaWdobHkgICBzZW5zaXRpdmUgaXRlbXMgc3VjaCBhcyBzaG91bGRlci1maXJlZCBtaXNzaWxlcyAgIGNhbGxlZCBNYW4tUG9ydGFibGUgQWlyLURlZmVuc2UgU3lzdGVtcyAgIChNQU5QQURTKSB0aGF0IGNhbiB0YWtlIGRvd24gYWlyY3JhZnQuIE1BTlBBRFMgICBhcmUgc2hvcnQtcmFuZ2UsIGxpZ2h0d2VpZ2h0IGFuZCBwb3J0YWJsZSBzdXJmYWNlLSAgdG8tYWlyIG1pc3NpbGVzIHRoYXQgY2FuIGJlIGZpcmVkIGJ5IGluZGl2aWR1YWxzIG9yICAgc21hbGwgZ3JvdXBzIHRvIGRlc3Ryb3kgYWlyY3JhZnQgb3IgaGVsaWNvcHRlcnMuICAgQ291bnRyaWVzIHN1Y2ggYXMgSW5kaWEsIFBha2lzdGFuLCBHZXJtYW55LCBVSywgICAgKC0pU3RhdGVtZW50IDIgY29ycmVjdDogIFR1cmtleSBhbmQgSXNyYWVsIGhhdmUgYWxzbyAgIHVzZWQgTUFOUEFEUyBpbiB0aGVpciBkZWZlbnNlIGVmZm9ydHMuIFJ1c3NpYSBpcyAgIGJ5IGZhciB0aGUgYmlnZ2VzdCBleHBvcnRlciBvZiBNQU5QQURzLGhhdmluZyAgIHNvbGQgb3ZlciAxMCwwMDAgc3VjaCBzeXN0ZW1zIGJldHdlZW4gMjAxMCBhbmQgICAyMDE4IHRvIHZhcmlvdXMgY291bnRyaWVzIGluY2x1ZGluZyBJcmFxLCBRYXRhciwgICBLYXpha2hzdGFuLCBWZW5lenVlbGEsIGFuZCBMaWJ5YS4gVGhleSBoZWxwICAgc2hpZWxkIHRyb29wcyBmcm9tIGFlcmlhbCBhdHRhY2tzIGFuZCBhcmUgbW9zdCAgIGVmZmVjdGl2ZSBpbiB0YXJnZXRpbmcgbG93LWZseWluZyBhaXJjcmFmdHMuICAgTUFOUEFEcyBvciBNYW4tUG9ydGFibGUgQW50aS1UYW5rIFN5c3RlbXMgICB3b3JrIGluIGEgc2ltaWxhciBtYW5uZXIgYnV0IGFyZSB1c2VkIHRvIGRlc3Ryb3kgb3IgICBpbmNhcGFjaXRhdGUgbWlsaXRhcnkgdGFua3MuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogIE1BTlBBRFMgaGF2ZSAgIGEgbWF4aW11bSByYW5nZSBvZiA4IGtpbG9tZXRlcnMgYW5kIGNhbiBlbmdhZ2UgICB0YXJnZXRzIGF0IGFsdGl0dWRlcyBvZiA0LjUga20uIFRoZSBmaXJzdCBNQU5QQURTICAgd2VyZSBpbnRyb2R1Y2VkIGJ5IHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBTb3ZpZXQgICBVbmlvbiBpbiB0aGUgMTk2MHMuIE1vc3Qgb2YgdGhlbSBoYXZlIHBhc3NpdmUgICBvciAnZmlyZSBhbmQgZm9yZ2V0JyBndWlkYW5jZSBzeXN0ZW1zLCBtZWFuaW5nICAgdGhhdCB0aGUgb3BlcmF0b3IgaXMgbm90IHJlcXVpcmVkIHRvIGd1aWRlIHRoZSAgIG1pc3NpbGUgdG8gaXRzIHRhcmdldCwgZW5hYmxpbmcgdGhlbSB0byBydW4gYW5kICAgcmVsb2NhdGUgaW1tZWRpYXRlbHkgYWZ0ZXIgZmlyaW5nLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "2 and 3 only  ",
        "option2" : "3 only  ",
        "option3" : "1 and 2 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 87,
      "question" : "Which one of the following country/ies is  bordered by Russia to the northeast, Ukraine to the  south, Poland to the west, and Lithuania and Latvia to  the northwest?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg3",
      "description" : "IEV4cDogICAgICgtKU9wdGlvbiBDIGlzIGNvcnJlY3Q6IEJlbGFydXMgaXMgYSBsYW5kbG9ja2VkIGNvdW50cnkgICBpbiBFYXN0ZXJuIEV1cm9wZS4gIEl0IGlzIGJvcmRlcmVkIGJ5IFJ1c3NpYSB0byB0aGUgICBub3J0aGVhc3QsIFVrcmFpbmUgdG8gdGhlIHNvdXRoLCBQb2xhbmQgdG8gdGhlICAgd2VzdCwgYW5kIExpdGh1YW5pYSBhbmQgTGF0dmlhIHRvIHRoZSBub3J0aHdlc3QuICAgICAoLSlDYXBpdGFsIG9mIEJlbGFydXMgaXMgTWluc2suIEFmdGVyIHRoZSBkaXNpbnRlZ3JhdGlvbiAgIG9mIHRoZSBTb3ZpZXQgVW5pb24gaW4gMTk5MSwgQmVsYXJ1cyBiZWNhbWUgYSAgIHNvdmVyZWlnbiBuYXRpb24sIGFuZCBpdHMgZmlyc3QgcHJlc2lkZW50aWFsIGVsZWN0aW9ucyAgIHdlcmUgaGVsZCBpbiAxOTk0LiAgICAoLSlBbGV4YW5kZXIgTHVrYXNoZW5rbyBoYXMgc2VydmVkIGFzIHRoZSBjb3VudHJ5J3MgICBmaXJzdCBwcmVzaWRlbnQgc2luY2UgMTk5NC4gQmVsYXJ1cyBoYXMgYmVlbiAgIGxhYmVsZWQgIkV1cm9wZSdzIGxhc3QgZGljdGF0b3JzaGlwIiBieSBzb21lICAgV2VzdGVybiBqb3VybmFsaXN0cywgb24gYWNjb3VudCBvZiB0aGUgY291bnRyeSdzICAgcG9vciBodW1hbiByaWdodHMgcmVjb3JkIGFuZCBMdWthc2hlbmtvJ3Mgc2VsZi0gIGRlc2NyaWJlZCBhdXRob3JpdGFyaWFuIHN0eWxlIG9mIGdvdmVybm1lbnQuICAgICAgLiAgICAgICAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Estonia  ",
        "option2" : "Romania  ",
        "option3" : "Belarus   ",
        "option4" : "Hungary    "
      }
    },
    {
      "index" : 88,
      "question" : "Consider the following statements with  reference to the Sagar Parikrama:  1. It is a navigation journey to be conducted in all  coastal states/UTs to demonstrate solidarity with  all fisherfolk, fish farmers and concerned  stakeholders.  2. It is organized by the Ministry of Fisheries, National  Fisheries Development Board with the  Government of Andhra Pradesh.  3. It has been launched as a part of 'Azadi Ka Amrit  Mahotsava'.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg4",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU2FnYXIgUGFyaWtyYW1hIGlzICAgYSBuYXZpZ2F0aW9uIGpvdXJuZXkgdG8gYmUgY29uZHVjdGVkIGluIGFsbCBjb2FzdGFsICAgc3RhdGVzL1VUcyB0byBkZW1vbnN0cmF0ZSBzb2xpZGFyaXR5IHdpdGggYWxsICAgZmlzaGVyZm9saywgZmlzaCBmYXJtZXJzIGFuZCBjb25jZXJuZWQgICBzdGFrZWhvbGRlcnMuIFRoZSBuYXZpZ2F0aW9uIGpvdXJuZXkgc2hhbGwgZm9jdXMgb24gICB0aGUgc3VzdGFpbmFibGUgYmFsYW5jZSBiZXR3ZWVuIHRoZSB1dGlsaXphdGlvbiBvZiAgIG1hcmluZSBmaXNoZXJpZXMgcmVzb3VyY2VzIGZvciBmb29kIHNlY3VyaXR5IG9mIHRoZSAgIG5hdGlvbiBhbmQgbGl2ZWxpaG9vZHMgb2YgY29hc3RhbCBmaXNoZXIgICBjb21tdW5pdGllcyBhbmQgcHJvdGVjdGlvbiBvZiBtYXJpbmUgICBlY29zeXN0ZW1zLiAgICgtKVN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogU2FnYXIgUGFyaWtyYW1hIGlzICAgb3JnYW5pemVkIGJ5IHRoZSBNaW5pc3RyeSBvZiBGaXNoZXJpZXMsIE5hdGlvbmFsICAgRmlzaGVyaWVzIERldmVsb3BtZW50IEJvYXJkIGFsb25nIHdpdGggdGhlICAgR292ZXJubWVudCBvZiBHdWphcmF0LCBJbmRpYW4gQ29hc3QgR3VhcmQsICAgRmlzaGVyeSBTdXJ2ZXkgb2YgSW5kaWEgYW5kIEd1amFyYXQgTWFyaXRpbWUgICBCb2FyZC4gSXQgd2lsbCBzdGFydCBmcm9tIE1hbmR2aSAoR3VqYXJhdCkgaW4gaXRzIGZpcnN0ICAgcGhhc2UgYW5kIHdpbGwgYmUgb3JnYW5pemVkIGluIG90aGVyIGRpc3RyaWN0cyBvZiAgIEd1amFyYXQgYW5kIG90aGVyIFN0YXRlcy9VVHMgaW4gdGhlIHN1YnNlcXVlbnQgICBwaGFzZS4gICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogU2FnYXIgUGFyaWtyYW1hIGhhcyBiZWVuICAgbGF1bmNoZWQgYXMgYSBwYXJ0IG9mICdBemFkaSBLYSBBbXJpdCAgIE1haG90c2F2YScgc2FsdXRpbmcgb3VyIGdyZWF0IGZyZWVkb20gZmlnaHRlcnMsICAgc2FpbG9ycyBhbmQgZmlzaGVybWVuLiBBemFkaSBLYSBBbXJpdCBNYWhvdHNhdmEgaXMgICBvbmUgb2YgdGhlIHNpZ25pZmljYW50IGluaXRpYXRpdmVzIG9mIHRoZSBHb3Zlcm5tZW50ICAgb2YgSW5kaWEgdG8gY2VsZWJyYXRlIGFuZCBjb21tZW1vcmF0ZSA3NSB5ZWFycyBvZiAgIGluZGVwZW5kZW5jZSBhbmQgdGhlIGdsb3Jpb3VzIGhpc3Rvcnkgb2YgaXRzICAgcGVvcGxlLCBjdWx0dXJlIGFuZCBhY2hpZXZlbWVudHMuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only      .         ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 89,
      "question" : "Which of the following statements is/are  incorrect regarding the Monetary Policy Committee?  1. The committee has all six nominated members.  2. Members of the committee are appointed for a  period of 5 years and are eligible for  reappointment.  3. The Committee is chaired by the Governor of the  Reserve Bank of India.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDg5",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBNb25ldGFyeSBQb2xpY3kgaXMgICBkZXNjcmliZWQgYXMgdGhlIHBvbGljeSBvZiB0aGUgY2VudHJhbCBiYW5rIHdpdGggICByZWdhcmQgdG8gdGhlIHVzZSBvZiBtb25ldGFyeSBpbnN0cnVtZW50cyB1bmRlciAgIGl0cyBjb250cm9sIHRvIGFjaGlldmUgdGhlIGdvYWxzIHNwZWNpZmllZCBpbiB0aGUgICBBY3QuIFRoZSBNb25ldGFyeSBQb2xpY3kgQ29tbWl0dGVlIChNUEMpIGlzICAgZW50cnVzdGVkIHdpdGggdGhlIHJlc3BvbnNpYmlsaXR5IHRvIG1haW50YWluIHByaWNlICAgc3RhYmlsaXR5IHdoaWxlIGtlZXBpbmcgaW4gbWluZCB0aGUgb2JqZWN0aXZlIG9mICAgZ3Jvd3RoLiBUaGUgY29tbWl0dGVlIGhhcyBzaXggbWVtYmVycy4gVGhyZWUgICBtZW1iZXJzIGFyZSBub21pbmF0ZWQgYnkgdGhlIENlbnRyYWwgICBHb3Zlcm5tZW50IGFuZCBvdGhlciB0aHJlZSBtZW1iZXJzIHdvdWxkIGJlICAgZnJvbSB0aGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIChSQkkpIHdpdGggdGhlICAgZ292ZXJub3Igb2YgUkJJIGJlaW5nIHRoZSBleC1vZmZpY2lvIGNoYWlycGVyc29uLiAgICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBnb3Zlcm5tZW50ICAgbm9taW5hdGVkIG1lbWJlcnMgd2lsbCBiZSBzZWxlY3RlZCBieSBhIFNlYXJjaC0gIGN1bS1TZWxlY3Rpb24gQ29tbWl0dGVlIHVuZGVyIENhYmluZXQgU2VjcmV0YXJ5ICAgd2l0aCB0aGUgUkJJIEdvdmVybm9yIGFuZCBFY29ub21pYyBBZmZhaXJzICAgU2VjcmV0YXJ5LiBNZW1iZXJzIG9mIHRoZSBNUEMgYXJlIGFwcG9pbnRlZCBmb3IgICBhIHBlcmlvZCBvZiBmb3VyIHllYXJzLiBUaGV5IHdpbGwgbm90IGJlIGVsaWdpYmxlIGZvciAgIHJlYXBwb2ludG1lbnQuICAgKC0pU3RhdGVtZW50IDMgaXMgY29ycmVjdDogTVBDIGlzIGNoYWlyZWQgYnkgdGhlICAgR292ZXJub3Igb2YgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhLiBEZWNpc2lvbnMgd2lsbCAgIGJlIHRha2VuIGJ5IG1ham9yaXR5IHZvdGUgd2l0aCBlYWNoIG1lbWJlciAgIGhhdmluZyBhIHZvdGUuIFRoZSBnb3Zlcm5vciwgaG93ZXZlciwgd2lsbCBub3QgICBlbmpveSBhIHZldG8gcG93ZXIgdG8gb3ZlcnJ1bGUgdGhlIG90aGVyIHBhbmVsICAgbWVtYmVycywgYnV0IGhlL3NoZSBzaGFsbCBoYXZlIGEgY2FzdGluZyB2b3RlIGluICAgY2FzZSBvZiBhIHRpZS4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 90,
      "question" : "Consider the following statements with  reference to the Katchatheevu Island:  1. It is an uninhabited islet in the Palk Strait, formed  due to volcanic eruption.  2. Prime Minister of India, Rajeev Gandhi ceded  Katchatheevu island to Sri Lanka under the \"Indo- Sri Lankan Maritime agreement\".  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDkw",
      "description" : "IEV4cDogICAoLSlTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBLYXRjaGF0aGVldnUgSXNsYW5kIGlzIGFuICAgdW5pbmhhYml0ZWQgaXNsZXQgaW4gdGhlIFBhbGsgU3RyYWl0LCBmb3JtZWQgZHVlIHRvICAgdm9sY2FuaWMgZXJ1cHRpb24gaW4gdGhlIDE0dGggY2VudHVyeS4gSXQgd2FzICAgYWRtaW5pc3RlcmVkIGpvaW50bHkgYnkgSW5kaWEgYW5kIFNyaSBMYW5rYSBkdXJpbmcgICBCcml0aXNoIHJ1bGUuIEl0IGlzIHN0cmF0ZWdpY2FsbHkgaW1wb3J0YW50IGZvciBmaXNoaW5nICAgYWN0aXZpdGllcy4gICAoLSlTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJvdGggU3JpIExhbmthIGFuZCBJbmRpYSAgIGNsYWltZWQgdGhpcyBpc2xhbmQgZm9yIGZpc2hpbmcgYW5kIHRoZSBkaXNwdXRlICAgcmVtYWluZWQgdW5zZXR0bGVkIHRpbGwgMTk3NC4gSW4gMTk3NCwgdGhlbiBQcmltZSAgIE1pbmlzdGVyIG9mIEluZGlhLCBJbmRpcmEgR2FuZGhpIGNlZGVkICAgS2F0Y2hhdGhlZXZ1IHRvIFNyaSBMYW5rYSB1bmRlciB0aGUgIkluZG8tU3JpICAgTGFua2FuIE1hcml0aW1lIGFncmVlbWVudCIuIEFub3RoZXIgICBhZ3JlZW1lbnQgc2lnbmVkIGluIDE5NzYgcmVzdHJpY3RlZCBib3RoIHRoZSAgIGNvdW50cmllcycgZmlzaGVybWVuIGZyb20gZmlzaGluZyBpbiB0aGUgb3RoZXIncyAgIGV4Y2x1c2l2ZSBlY29ub21pYyB6b25lcy4gICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 91,
      "question" : "Which of the following statements is/are  correct regarding the PM- Shram Yogi Maan-Dhan  Scheme?  1. It is a 50:50 voluntary and contributory pension  scheme in which the beneficiary makes a stipulated  age-specific contribution and the Central  Government matches it.  2. Unorganised sector workers in the age group of 18- 40 years will be eligible for the scheme.  3. After attaining the age of 60 years, registered  workers will receive the minimum assured pension  of Rs 5000 per month.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDkx",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUE0tIFNocmFtIFlvZ2kgTWFhbi0gIERoYW4gU2NoZW1lIGlzIGEgNTA6NTAgdm9sdW50YXJ5IGFuZCBjb250cmlidXRvcnkgICBwZW5zaW9uIHNjaGVtZSBpbiB3aGljaCB0aGUgYmVuZWZpY2lhcnkgbWFrZXMgYSAgIHN0aXB1bGF0ZWQgYWdlLXNwZWNpZmljIGNvbnRyaWJ1dGlvbiBhbmQgdGhlICAgQ2VudHJhbCBHb3Zlcm5tZW50IG1hdGNoZXMgaXQuIFRoZSBNaW5pc3RyeSBvZiAgIExhYm91ciBhbmQgRW1wbG95bWVudCB3aWxsIG92ZXJzZWUgUE0tICBTWU0sIHdoaWNoIHdpbGwgYmUgaW1wbGVtZW50ZWQgYnkgTGlmZSBJbnN1cmFuY2UgICBDb3Jwb3JhdGlvbiBvZiBJbmRpYSBhbmQgQ1NDIGVHb3Zlcm5hbmNlIFNlcnZpY2VzICAgSW5kaWEgTGltaXRlZC4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBXb3JrZXJzIHdvcmtpbmcgaW4gdGhlICAgdW5vcmdhbml6ZWQgc2VjdG9yIGluIHRoZSBhZ2UgZ3JvdXAgb2YgMTgtNDAgeWVhcnMgICB3aWxsIGJlIGVsaWdpYmxlIGFuZCBjYW4gcmVnaXN0ZXIgdGhlbXNlbHZlcyBhbmQgICAgICAuICAgICAgICAgIGRlcG9zaXQgYSBtaW5pbXVtIGFtb3VudCBvZiBScyA2NjAgdG8gMjQwMCAgIGV2ZXJ5IHllYXIgZGVwZW5kaW5nIG9uIHRoZWlyIGFnZS4gVGhleSBzaG91bGQgbm90ICAgYmUgY292ZXJlZCB1bmRlciB0aGUgTmV3IFBlbnNpb24gU2NoZW1lIChOUFMpLCAgIEVtcGxveWVlcycgU3RhdGUgSW5zdXJhbmNlIENvcnBvcmF0aW9uIChFU0lDKSAgIHNjaGVtZSBvciBFbXBsb3llZXMnIFByb3ZpZGVudCBGdW5kICAgT3JnYW5pemF0aW9uIChFUEZPKS4gSGUvU2hlIHNob3VsZCBub3QgYmUgYW4gICBpbmNvbWUgdGF4IHBheWVyLiAgICgtKVN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogQWZ0ZXIgYXR0YWluaW5nIHRoZSBhZ2Ugb2YgICA2MCB5ZWFycywgZWFjaCByZWdpc3RlcmVkIHdvcmtlciBzaGFsbCByZWNlaXZlIHRoZSAgIG1pbmltdW0gYXNzdXJlZCBwZW5zaW9uIG9mIFJzIDMsMDAwIHBlciBtb250aC4gICBUaGlzIHNjaGVtZSBzZWVrcyB0byBiZW5lZml0IGFyb3VuZCA0MiBjcm9yZSAgIHVub3JnYW5pemVkIHNlY3RvciB3b3JrZXJzIG9mIHRoZSBjb3VudHJ5LiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 92,
      "question" : "Which one of the following ministries is the  parent organization of Agricultural and Processed  Food Products Export Development Authority  (APEDA)?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDky",
      "description" : "IEV4cDogICAgKC0pT3B0aW9uIEQgaXMgY29ycmVjdDogQWdyaWN1bHR1cmFsIGFuZCBQcm9jZXNzZWQgICBGb29kIFByb2R1Y3RzIEV4cG9ydCBEZXZlbG9wbWVudCAgIEF1dGhvcml0eSAoQVBFREEpIHdhcyBzZXQtdXAgYnkgdGhlIEdvdmVybm1lbnQgICBvZiBJbmRpYSB1bmRlciB0aGUgQWdyaWN1bHR1cmFsIGFuZCBQcm9jZXNzZWQgRm9vZCAgIFByb2R1Y3RzIEV4cG9ydCBEZXZlbG9wbWVudCBBdXRob3JpdHkgQWN0LCAxOTg1LiAgIEFQRURBIHByb21vdGVzIGV4cG9ydHMgb2YgYWdyaWN1bHR1cmFsICAgY29tbW9kaXRpZXMgYW5kIGZyZXNoIGFuZCBwcm9jZXNzZWQgcHJvZHVjdHMgYnkgICBzZXR0aW5nIHN0YW5kYXJkcyBhbmQgc3BlY2lmaWNhdGlvbnMuIEl0IGhhcyAgIGJlZW4gZW50cnVzdGVkIHdpdGggdGhlIHJlc3BvbnNpYmlsaXR5IHRvIG1vbml0b3IgICB0aGUgaW1wb3J0IG9mIHN1Z2FyLiBUaGUgTWluaXN0cnkgb2YgQ29tbWVyY2UgYW5kICAgSW5kdXN0cnkgaXMgdGhlIHBhcmVudCBvcmdhbml6YXRpb24gb2YgQVBFREEuIFRoZSAgIEhlYWRxdWFydGVycyBvZiBBUEVEQSBpcyBpbiBOZXcgRGVsaGkuICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Ministry of Agriculture and Farmers Welfare  ",
        "option2" : "Ministry of Food Processing Industries  ",
        "option3" : "Ministry of Consumer Affairs, Food and Public   Distribution  ",
        "option4" : "Ministry of Commerce and Industry   "
      }
    },
    {
      "index" : 93,
      "question" : "Consider the following statements with  reference to the Start-Up Village Entrepreneurship  Programme (SVEP):  1. It is a sub-scheme under the Deendayal Antyodaya  Yojana-National Rural Livelihoods Mission.  2. It promotes only group enterprises set-up and  promotes enterprises majorly in agriculture  sectors.   Which of the statements given above is/are incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDkz",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogU3RhcnQtVXAgVmlsbGFnZSAgIEVudHJlcHJlbmV1cnNoaXAgUHJvZ3JhbW1lIChTVkVQKSB3YXMgICBsYXVuY2hlZCBpbiAyMDE2IGJ5IHRoZSBNaW5pc3RyeSBvZiBSdXJhbCAgIERldmVsb3BtZW50IGFzIGEgc3ViLXNjaGVtZSB1bmRlciB0aGUgICBEZWVuZGF5YWwgQW50eW9kYXlhIFlvamFuYSAtIE5hdGlvbmFsIFJ1cmFsICAgTGl2ZWxpaG9vZHMgTWlzc2lvbi4gRGVlbmRheWFsIEFudHlvZGF5YSBZb2phbmEtICBOYXRpb25hbCBSdXJhbCBMaXZlbGlob29kcyBNaXNzaW9uIGlzIGEgY2VudHJhbGx5ICAgc3BvbnNvcmVkIHByb2dyYW1tZSB3aXRoIHRoZSBhaW0gdG8gZWxpbWluYXRlICAgcnVyYWwgcG92ZXJ0eSB0aHJvdWdoIHRoZSBwcm9tb3Rpb24gb2YgbXVsdGlwbGUgICBsaXZlbGlob29kcyBhbmQgaW1wcm92ZWQgYWNjZXNzIHRvIGZpbmFuY2lhbCAgIHNlcnZpY2VzIGZvciB0aGUgcnVyYWwgcG9vciBob3VzZWhvbGRzIGFjcm9zcyB0aGUgICBjb3VudHJ5LiAgICgtKVN0YXRlbWVudCAyICBpcyBpbmNvcnJlY3Q6IFN0YXJ0LVVwIFZpbGxhZ2UgICBFbnRyZXByZW5ldXJzaGlwIFByb2dyYW1tZSAoU1ZFUCkgcHJvbW90ZXMgICBib3RoIGluZGl2aWR1YWwgYW5kIGdyb3VwIGVudGVycHJpc2VzIHNldC11cCBhbmQgICBwcm9tb3RlcyBlbnRlcnByaXNlcyBtYWpvcmx5IGluIG1hbnVmYWN0dXJpbmcsICAgdHJhZGluZyBhbmQgc2VydmljZSBzZWN0b3JzLiBFbnRyZXByZW5ldXJzaGlwICAgRGV2ZWxvcG1lbnQgSW5zdGl0dXRlIG9mIEluZGlhIChFRElJKSwgQWhtZWRhYmFkICAgaXMgdGhlIHRlY2huaWNhbCBzdXBwb3J0IHBhcnRuZXIgb2YgU1ZFUC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 94,
      "question" : "Which of the following statements is/are  correct regarding the UPI123Pay?   1. It is a two-step method to initiate and execute  services for users.  2. It will work on simple phones and doesn't need an  internet connection for transactions.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk0",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgICBsYXVuY2hlZCBhIG5ldyBVbmlmaWVkIFBheW1lbnRzIEludGVyZmFjZSAoVVBJKSAgIHBheW1lbnRzIHNvbHV0aW9uIGZvciBmZWF0dXJlIHBob25lIHVzZXJzIGR1YmJlZCAgICdVUEkxMjNQYXknIGFuZCBpdCBpcyBhIHRocmVlLXN0ZXAgbWV0aG9kIHRvICAgaW5pdGlhdGUgYW5kIGV4ZWN1dGUgc2VydmljZXMgZm9yIHVzZXJzIHdoaWNoIHdpbGwgICB3b3JrIG9uIHNpbXBsZSBwaG9uZXMuICAgKC0pU3RhdGVtZW50IDIgaXMgY29ycmVjdDogIFVQSTEyM1BheSB3aWxsIGFsbG93ICAgY3VzdG9tZXJzIHRvIHVzZSBmZWF0dXJlIHBob25lcyBmb3IgYWxtb3N0IGFsbCAgIHRyYW5zYWN0aW9ucyBleGNlcHQgc2NhbiBhbmQgcGF5IGFuZCBkb2Vzbid0IG5lZWQgICBhbiBpbnRlcm5ldCBjb25uZWN0aW9uIGZvciB0cmFuc2FjdGlvbnMuIEN1c3RvbWVycyAgIHdpbGwgaGF2ZSB0byBsaW5rIHRoZWlyIGJhbmsgYWNjb3VudCB3aXRoIGZlYXR1cmUgICBwaG9uZXMgdG8gdXNlIHRoaXMgZmFjaWxpdHkuIFRoZSBuZXcgVVBJIHBheW1lbnRzICAgc3lzdGVtIG9mZmVycyB1c2VycyBmb3VyIG9wdGlvbnMgdG8gbWFrZSBwYXltZW50cyAgIGkuZS4gSW50ZXJhY3RpdmUgVm9pY2UgUmVzcG9uc2U7IEFwcC1iYXNlZCAgIGZ1bmN0aW9uYWxpdHk7IE1pc3NlZCBjYWxsIGZhY2lsaXR5IGFuZCBQcm94aW1pdHkgICBzb3VuZC1iYXNlZCBwYXltZW50cy4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 95,
      "question" : "Which one of the following states has topped  the Niti Aayog's Export Preparedness Index, 2021?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk1",
      "description" : "IEV4cDogICAgKC0pT3B0aW9uIEIgaXMgY29ycmVjdDogRXhwb3J0IFByZXBhcmVkbmVzcyBJbmRleCwgICAyMDIxIGlzIHJlbGVhc2VkIGJ5IE5JVEkgQWF5b2cgaW4gY29sbGFib3JhdGlvbiAgIHdpdGggdGhlIEluc3RpdHV0ZSBvZiBDb21wZXRpdGl2ZW5lc3MuIEl0IGlzIGEgICBjb21wcmVoZW5zaXZlIGFuYWx5c2lzIG9mIEluZGlhJ3MgZXhwb3J0ICAgYWNoaWV2ZW1lbnRzLiBJdCBhaW1zIHRvIGlkZW50aWZ5IHRoZSBmdW5kYW1lbnRhbCAgIGFyZWFzIGNyaXRpY2FsIGZvciBzdWJuYXRpb25hbCBleHBvcnQgcHJvbW90aW9uLiAgIFRoZSBjb2FzdGFsIHN0YXRlcyBoYXZlIGJlZW4gYWRqdWRnZWQgYXMgdGhlIGJlc3QgICBwZXJmb3JtZXJzIGluIHRoZSBpbmRleC4gR3VqYXJhdCBoYXMgdG9wcGVkIE5JVEkgICBBYXlvZydzIEV4cG9ydCBQcmVwYXJlZG5lc3MgSW5kZXggKEVQSSkgICAyMDIxLCBNYWhhcmFzaHRyYSBoYXMgYmVlbiByYW5rZWQgc2Vjb25kIGFuZCAgIEthcm5hdGFrYSBoYXMgYmVlbiByYW5rZWQgdGhpcmQuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "Maharashtra  ",
        "option2" : "Gujarat  ",
        "option3" : "Telangana  ",
        "option4" : "Karnataka   "
      }
    },
    {
      "index" : 96,
      "question" : "Consider the following statements with  reference to the Pradhan Mantri Garib Kalyan Anna  Yojana:  1. It was launched by the Department of Food and  Public Distribution under the Ministry of Consumer  Affairs, Food and Public Distribution.  2. It is aimed to ensure sufficient food for poor and  needy people during the coronavirus crisis.  3. It would be funded by the Central and State  Government both.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk2",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogUHJhZGhhbiBNYW50cmkgR2FyaWIgICBLYWx5YW4gQW5uYSBZb2phbmEgd2FzIGxhdW5jaGVkIGJ5ICAgdGhlIERlcGFydG1lbnQgb2YgRm9vZCBhbmQgUHVibGljICAgRGlzdHJpYnV0aW9uIHVuZGVyIHRoZSBNaW5pc3RyeSBvZiBDb25zdW1lciAgIEFmZmFpcnMsIEZvb2QgYW5kIFB1YmxpYyBEaXN0cmlidXRpb24gaW4gQXByaWwgMjAyMC4gICBUaGUgdW5pb24gY2FiaW5ldCBoYXMgZXh0ZW5kZWQgdGhlIFBNLUdLQVkgICBzY2hlbWUgZm9yIGFub3RoZXIgc2l4IG1vbnRocyB0aWxsIFNlcHRlbWJlciAgIDIwMjIuIFRoaXMgd2lsbCBiZSB0aGUgc2l4dGggcGhhc2Ugb2YgUE0tR0tBWS4gICAoLSlTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBQcmFkaGFuIE1hbnRyaSBHYXJpYiAgIEthbHlhbiBBbm5hIFlvamFuYSBpcyBhaW1lZCB0byBlbnN1cmUgc3VmZmljaWVudCAgIGZvb2QgZm9yIHBvb3IgYW5kIG5lZWR5IHBlb3BsZSBkdXJpbmcgdGhlICAgY29yb25hdmlydXMgY3Jpc2lzLiBVbmRlciB0aGUgc2NoZW1lLCBlYWNoICAgYmVuZWZpY2lhcnkgd2lsbCBnZXQgYW4gYWRkaXRpb25hbCA1IGtnIGZyZWUgcmF0aW9uICAgcGVyIHBlcnNvbiBwZXIgbW9udGggaW4gYWRkaXRpb24gdG8gaGlzIG5vcm1hbCAgIHF1b3RhIG9mIGZvb2RncmFpbnMgdW5kZXIgdGhlIE5hdGlvbmFsIEZvb2QgICBTZWN1cml0eSBBY3QgKE5GU0EpLlRoaXMgbWVhbnMgdGhhdCBldmVyeSBwb29yICAgaG91c2Vob2xkIHdvdWxkIGdldCBuZWFybHkgZG91YmxlIHRoZSBub3JtYWwgICBxdWFudGl0eSBvZiByYXRpb24uICAgICAgLiAgICAgICAgICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBzY2hlbWUgd2lsbCBjb3ZlciAgIG5lYXJseSA4MCBjcm9yZSBiZW5lZmljaWFyaWVzIGFjcm9zcyBJbmRpYSBhbmQgICB3b3VsZCBiZSBmdWxseSBmdW5kZWQgYnkgdGhlIEdvdmVybm1lbnQgb2YgICBJbmRpYS4gVGhlIGJlbmVmaXQgb2YgdGhlIGZyZWUgcmF0aW9uIGNhbiBhbHNvIGJlICAgYXZhaWxlZCB0aHJvdWdoIHBvcnRhYmlsaXR5IGJ5IGFueSBtaWdyYW50IGxhYm9yIG9yICAgYmVuZWZpY2lhcnkgdW5kZXIgdGhlIE9uZSBOYXRpb24gT25lIFJhdGlvbiBDYXJkICAgKE9OT1JDKSBwbGFuIGZyb20gbmVhcmx5IDUgbGFraCByYXRpb24gc2hvcHMgICBhY3Jvc3MgdGhlIGNvdW50cnkuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3       .         "
      }
    },
    {
      "index" : 97,
      "question" : "Which of the following statements is/are  correct regarding the Zoji La Pass?  1. It connects Leh and Srinagar and provides  important links between Union Territories of  Ladakh and Kashmir.  2. It is known as the 'Mountain Pass of Blizzards'.  3. It is a high mountain pass located in Leh district of  Ladakh.  Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk3",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogWm9qaSBMYSBQYXNzIGNvbm5lY3RzIExlaCAgIGFuZCBTcmluYWdhciBhbmQgcHJvdmlkZXMgaW1wb3J0YW50IGxpbmtzIGJldHdlZW4gICBVbmlvbiBUZXJyaXRvcmllcyBvZiBMYWRha2ggYW5kIEthc2htaXIuIFRoZSBab2ppICAgTGEgVHVubmVsIFByb2plY3Qgd2FzIGxhdW5jaGVkIGluIDIwMTguIEl0IGlzIEFzaWEncyAgIGxvbmdlc3QgYW5kIHN0cmF0ZWdpYyBiaS1kaXJlY3Rpb25hbCB0dW5uZWwsIHdoaWNoICAgd2lsbCBwcm92aWRlIGFsbCB3ZWF0aGVyIGNvbm5lY3Rpdml0eSBiZXR3ZWVuICAgU3JpbmFnYXIsIEthcmdpbCBhbmQgTGVoLiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IFpvamkgTGEgUGFzcyBpcyBrbm93biBhcyB0aGUgICAnTW91bnRhaW4gUGFzcyBvZiBCbGl6emFyZHMnLiBJdCByZW1haW5zIGNsb3NlZCAgIGR1cmluZyB3aW50ZXJzIGR1ZSB0byBoZWF2eSBzbm93ZmFsbCwgY3V0dGluZyBvZmYgICBMYWRha2ggcmVnaW9uIGZyb20gS2FzaG1pci4gVGhlIFZpamF5YWsgRm9yY2UgdW5pdCAgIGFuZCB0aGUgQmVhY29uIEZvcmNlIFVuaXQgb2YgdGhlIEJvcmRlciBSb2FkICAgT3JnYW5pemF0aW9uIChCUk8pIGFyZSByZXNwb25zaWJsZSBmb3IgdGhlICAgbWFpbnRlbmFuY2UgYW5kIGNsZWFyaW5nIG9mIHRoZSByb2FkIGR1cmluZyAgIHdpbnRlci4gICAoLSlTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6ICBab2ppIExhIFBhc3MgaXMgYSBoaWdoICAgbW91bnRhaW4gcGFzcyBsb2NhdGVkIGluIEthcmdpbCBkaXN0cmljdCBvZiAgIExhZGFraC4gUGFraXN0YW5pIHJhaWRlcnMgc2VpemVkIHRoaXMgcGFzcyBkdXJpbmcgICB0aGUgSW5kby1QYWtpc3Rhbmkgd2FyIG9mIDE5NDctNDggYXMgcGFydCBvZiB0aGVpciAgIGNhbXBhaWduIHRvIGNhcHR1cmUgTGFkYWtoLiBUaGUgSW5kaWFuIGZvcmNlcyAgIHJlY2FwdHVyZWQgdGhpcyBwYXNzIGluIGFuIGFzc2F1bHQgICBjb2RlbmFtZWQgT3BlcmF0aW9uIEJpc29uLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 98,
      "question" : "Consider the following statements regarding  the Karewa Sediments:  1. It means 'elevated table land' in kashmiri dialect.   2. It is ideal for the cultivation of saffron, almonds,  apples and several other cash crops.  3. It is found primarily in the Valley of Kashmir and in  Bhaderwah Valley of the Jammu Division.  Which of the statements given above is/are correct?   ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk4",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogOiBLYXJld2FzIGFyZSBsYWN1c3RyaW5lICAgZGVwb3NpdHMgKGRlcG9zaXRzIGluIGxha2UpLiBJdCBpcyBhbiBpbnRlcm1vdW50YWluICAgdmFsbGV5IGZpbGwsIGNvbnNpc3Rpbmcgb2YgdGhpY2sgZGVwb3NpdHMgb2YgZ2xhY2lhbCBjbGF5ICAgYW5kIG90aGVyIG1hdGVyaWFscyBlbWJlZGRlZCB3aXRoICAgbW9yYWluZXMuIEthcmV3YSBtZWFucyAnZWxldmF0ZWQgdGFibGUgbGFuZCcgaW4gICBrYXNobWlyaSBkaWFsZWN0LiAgICgtKVN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEthcmV3YXMgYXJlIDEzLDAwMC0gIDE4LDAwMC1tZXRlci10aGljayBkZXBvc2l0cyBvZiBhbGx1dmlhbCBzb2lsIGFuZCAgIHNlZGltZW50cyBsaWtlIHNhbmRzdG9uZSBhbmQgbXVkc3RvbmUuIFRoaXMgICBtYWtlcyB0aGVtIGlkZWFsIGZvciB0aGUgY3VsdGl2YXRpb24gb2Ygc2FmZnJvbiwgICBhbG1vbmRzLCBhcHBsZXMgYW5kIHNldmVyYWwgb3RoZXIgY2FzaCAgIGNyb3BzLiBLYXNobWlyaSBzYWZmcm9uIHJlY2VpdmVkIGEgR2VvZ3JhcGhpY2FsICAgSW5kaWNhdGlvbiAoR0kpIHRhZyBpbiAyMDIwIGZvciBpdHMgbG9uZ2VyIGFuZCB0aGlja2VyICAgc3RpZ21hcywgZGVlcC1yZWQgY29sb3VyLCBoaWdoIGFyb21hIGFuZCBiaXR0ZXIgICBmbGF2b3VyLiAgICgtKVN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEthcmV3YXMgYXJlIGZvdW5kICAgcHJpbWFyaWx5IGluIHRoZSBWYWxsZXkgb2YgS2FzaG1pciBhbmQgaW4gICBCaGFkZXJ3YWggVmFsbGV5IG9mIHRoZSBKYW1tdSBEaXZpc2lvbi4gJ1Z1ZHInIGlzICAgdGhlIGxvY2FsIG5hbWUgZm9yIEthcmV3YXMgaW4gS2FzaG1pcmkgbGFuZ3VhZ2UuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 and 2 only  ",
        "option2" : "2 and 3 only  ",
        "option3" : "1 and 3 only  ",
        "option4" : "1, 2 and 3   "
      }
    },
    {
      "index" : 99,
      "question" : "Consider the following statements with  reference to the Asani Cyclone:  1. It is formed over the Arabian Sea and hits the  coastal region of Gujarat and Maharashtra.  2. The name of the cyclone 'Asani', has been  suggested by Oman.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDk5",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBc2FuaSwgdGhlIGZpcnN0IGN5Y2xvbmUgdG8gICBoaXQgSW5kaWEgaW4gMjAyMiwgaXMgZm9ybWVkIG92ZXIgdGhlIHNvdXRoZWFzdCBCYXkgICBvZiBCZW5nYWwuIEl0IGlzIGV4cGVjdGVkIHRvIHRyYXZlbCBhbG9uZyBhbmQgb2ZmIHRoZSAgIGNvYXN0IG9mIHRoZSBBbmRhbWFuIGFuZCBOaWNvYmFyIElzbGFuZHMgYmVmb3JlICAgaXQgaW50ZW5zaWZpZXMgaW50byBhIGRlcHJlc3Npb24uIEEgQ3ljbG9uZSBpcyBhIGxhcmdlLSAgc2NhbGUgYWlyIG1hc3MgdGhhdCByb3RhdGVzIGFudGktY2xvY2t3aXNlIGluICAgbm9ydGhlcm4gaGVtaXNwaGVyZSBhbmQgY2xvY2t3aXNlIGluIHRoZSAgIHNvdXRoZXJuIGhlbWlzcGhlcmUgYXJvdW5kIGEgc3Ryb25nIGNlbnRlciBvZiAgIGxvdyBhdG1vc3BoZXJpYyBwcmVzc3VyZS4gV2V0IGFuZCB3YXJtIGFpciBhdCAgIHRoZSBzdXJmYWNlIG9mIHRoZSBvY2VhbiByaXNlcyBoaWdoZXIuIFRoaXMgY2F1c2VzIGEgICB6b25lIG9mIGxvdyBwcmVzc3VyZSBuZWFyIHRoZSBzdXJmYWNlLiBEdWUgdG8gdGhpcywgICBjb2xkIGFpciBmcm9tIHRoZSBzdXJyb3VuZGluZyBhcmVhcyBmbG93cyBpbnRvIHRoZSAgIGFyZWEgb2YgbG93IHByZXNzdXJlIHdoaWNoIGNhdXNlcyB0aGUgY29sZCBhaXIgdG8gICB0dXJuIHdhcm0gYW5kIHdldCBjYXVzaW5nIGl0IHRvIHJpc2UuIFRoZSBjeWNsZSAgIGNvbnRpbnVlcyB3aGljaCByZXN1bHRzIGluIGNsb3VkIGRldmVsb3BtZW50LiBUaGlzICAgd2luZCBhbmQgY2xvdWQgc3lzdGVtIHRoZW4gZXhwYW5kcyBhcyB3ZWxsIGFzICAgcm90YXRlcyB3aGljaCBjdWxtaW5hdGVzIGludG8gYSBjeWNsb25lLiAgICgtKVN0YXRlbWVudCAyICBpcyBpbmNvcnJlY3Q6IFRoZSBuYW1lIG9mIHRoZSBjeWNsb25lICAgJ0FzYW5pJywgaGFzIGJlZW4gc3VnZ2VzdGVkIGJ5IFNyaWxhbmthICdBc2hhbmknICAgdHJhbnNsYXRlcyB0byAnV3JhdGgnIGluIHRoZSBTaW5oYWxhIGxhbmd1YWdlLi4gICBUaGVyZSBhcmUgc2l4IHJlZ2lvbmFsIG1ldGVvcm9sb2dpY2FsIGNlbnRyZXMgICBhY3Jvc3MgdGhlIHdvcmxkIHdpdGggdGhlIG1hbmRhdGUgb2YgbmFtaW5nICAgdHJvcGljYWwgY3ljbG9uZXMgYW5kIHRoZSBJbmRpYW4gTWV0ZW9yb2xvZ2ljYWwgICBEZXBhcnRtZW50IGlzIG9uZSBvZiB0aGVtLiBOZXcgRGVsaGkgaXMgbWFuZGF0ZWQgICB0byBuYW1lIHRyb3BpY2FsIGN5Y2xvbmVzIHRoYXQgZGV2ZWxvcCBvdmVyIHRoZSAgIG5vcnRoIEluZGlhbiBPY2VhbiBpbmNsdWRpbmcgdGhlIEJheSBvZiBCZW5nYWwgYW5kICAgdGhlIEFyYWJpYW4gU2VhLiAgICgtKVRoZSBuYW1lcyBhbmQgbGlzdHMgb2YgY3ljbG9uZXMgYXJlIG1haW50YWluZWQgYnkgICB0aGUgV29ybGQgTWV0ZW9yb2xvZ2ljYWwgT3JnYW5pemF0aW9uJ3MgKFdNTykgICBpbnRlcm5hdGlvbmFsIGNvdW5jaWwuIFRoZXkgYWxzbyB1cGRhdGUgdGhpcyBsaXN0IG9mICAgbmFtZXMuIEluIHRoZSBvcmlnaW5hbCBsaXN0LCBvbmx5IGZlbWFsZSBuYW1lcyB3ZXJlICAgYWRkZWQuIEluIDE5NzksIG1hbGUgbmFtZXMgd2VyZSBhZGRlZCB0byBiZSB1c2VkICAgZm9yIHRoZSBuYW1pbmcgb2YgY3ljbG9uZXMuIFRoZSBuYW1pbmcgbGlzdHMgYXJlICAgdXNlZCBhbHRlcm5hdGl2ZWx5LiBJbiBhIHJvdGF0aW5nIGZhc2hpb24sIHNpeCAgIGRpZmZlcmVudCBsaXN0cyBhcmUgYmVpbmcgdXRpbGlzZWQgdG8gbmFtZSB0aGUgICBjeWNsb25lcy4gTmFtZXMgYXJlIHByb3Bvc2VkIGJ5IHRoaXJ0ZWVuICAgbWVtYmVyIGNvdW50cmllcyAtIEJhbmdsYWRlc2gsIEluZGlhLCBNYWxkaXZlcywgICBNeWFubWFyLCBPbWFuLCBQYWtpc3RhbiwgU3JpIExhbmthLCBUaGFpbGFuZCwgICBJcmFuLCBRYXRhciwgU2F1ZGkgQXJhYmlhLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyBhbmQgICBZZW1lbi4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 100,
      "question" : "Which of the following statements is/are  correct regarding the Deep Ocean Mission?   1. It aims to explore the deep oceans for resources  and the technology and expertise needed in such  missions are available in only five countries - the  US, Russia, France, Japan and China. India will now  be the sixth country to have it.  2. The Ministry of Fisheries, Animal Husbandry and  Dairying will be the nodal ministry for  implementing this mission.   Select the correct answer using the code given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxsfDEwMA==",
      "description" : "IEV4cDogICAgKC0pU3RhdGVtZW50IDEgaXMgY29ycmVjdDogRGVlcCBPY2VhbiBNaXNzaW9uIGFpbXMgICB0byBleHBsb3JlIHRoZSBkZWVwIG9jZWFuIGZvciByZXNvdXJjZXMsICAgICAgLiAgICAgICAgICBzdXN0YWluYWJsZSB1c2Ugb2Ygb2NlYW4gcmVzb3VyY2VzIGFuZCBkZXZlbG9wICAgZGVlcC1zZWEgdGVjaG5vbG9naWVzLiBJdCB3aWxsIGJlIGEgbWlzc2lvbiBtb2RlICAgcHJvamVjdCB0byBzdXBwb3J0IHRoZSBCbHVlIEVjb25vbXkgSW5pdGlhdGl2ZXMgb2YgICB0aGUgR292ZXJubWVudCBvZiBJbmRpYS4gQmx1ZSBFY29ub215IGlzIHRoZSAgIHN1c3RhaW5hYmxlIHVzZSBvZiBvY2VhbiByZXNvdXJjZXMgZm9yIGVjb25vbWljICAgZ3Jvd3RoLCBpbXByb3ZlZCBvY2VhbiBlY29zeXN0ZW0gaGVhbHRoIGFuZCAgIGJldHRlciBsaXZlbGlob29kcyBhbmQgam9icy4gVGhyZWUgc2lkZXMgb2YgSW5kaWEgYXJlICAgc3Vycm91bmRlZCBieSB0aGUgb2NlYW5zIGFuZCBhcm91bmQgMzAlIG9mIHRoZSAgIGNvdW50cnkncyBwb3B1bGF0aW9uIGxpdmVzIGluIGNvYXN0YWwgYXJlYXMsIHRoZSAgIG9jZWFuIGlzIGEgbWFqb3IgZWNvbm9taWMgZmFjdG9yIHN1cHBvcnRpbmcgICBmaXNoZXJpZXMgYW5kIGFxdWFjdWx0dXJlLCB0b3VyaXNtLCBsaXZlbGlob29kcyBhbmQgICBibHVlIHRyYWRlLiBUaGUgdGVjaG5vbG9neSBhbmQgZXhwZXJ0aXNlIG5lZWRlZCAgIGluIHN1Y2ggbWlzc2lvbnMgYXJlIG5vdyBhdmFpbGFibGUgaW4gb25seSBmaXZlICAgY291bnRyaWVzIC0gdGhlIFVTLCBSdXNzaWEsIEZyYW5jZSwgSmFwYW4gYW5kIENoaW5hLiAgIEluZGlhIHdpbGwgbm93IGJlIHRoZSBzaXh0aCBjb3VudHJ5IHRvIGhhdmUgaXQuICAgKC0pU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0OiAgTWluaXN0cnkgb2YgRWFydGggICBTY2llbmNlcyhNb0VTKSB3aWxsIGJlIHRoZSBub2RhbCBNaW5pc3RyeSBmb3IgICBpbXBsZW1lbnRpbmcgdGhlIERlZXAgT2NlYW4gTWlzc2lvbi4gSW5kaWEgaGFzIGEgICB1bmlxdWUgbWFyaXRpbWUgcG9zaXRpb24sIGhhdmluZyA3NTE3IGttIG9mICAgY29hc3RsaW5lIGFuZCAxMzgyIGlzbGFuZHMuIENvbnNpZGVyaW5nIHRoZSAgIGltcG9ydGFuY2Ugb2YgdGhlIG9jZWFucyBvbiBzdXN0YWluYWJpbGl0eSwgdGhlICAgVW5pdGVkIE5hdGlvbiBoYXMgZGVjbGFyZWQgdGhlIDIwMjEtMjAzMCBhcyB0aGUgICBkZWNhZGUgb2YgT2NlYW4gU2NpZW5jZSBmb3IgU3VzdGFpbmFibGUgICBEZXZlbG9wbWVudC4gICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHZW9ncmFwaHl8YWxs",
      "year" : 2023,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Geography",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2     "
      }
    }
  ],
  "subject" : "Geography",
  "topic" : "all",
  "year" : "2023"
}