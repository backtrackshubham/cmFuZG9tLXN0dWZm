{
  "testId" : "raus-2024-prelims-2-prelims-5",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2024/raus/prelims/raus-2024-prelims-2-prelims-5.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to the archaeological sites found in the Indian sub-continent, consider the following statements:  1. Mehrgarh is the earliest known Mesolithic site, where evidence of farming and herding has been found.  2. Koldihwa, situated along the Belan River, is one of the few Neolithic sites in Uttar Pradesh. 3. The cave paintings at Bhimbetka are dated to the Indian Mesolithic period.  How many of the above statements is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwx",
      "description" : "ICBFeHBsYW5hdGlvbjogIFN0b25lIEFnZSAtIFBhbGFlb2xpdGhpYywgTWVzb2xpdGhpYyBhbmQgIE5lb2xpdGhpYzogVGhlIFBhbGFlb2xpdGhpYyBBZ2UgaXMgYWxzbyAga25vd24gYXMgdGhlIE9sZCBTdG9uZSBBZ2UuIEl0IGRhdGVzIGZyb20gIDUwMCwwMC0xMCwwMDAgQkNFLiBEdXJpbmcgdGhpcyBwZXJpb2QsICB0aGUgSW5kaWFucyBiZWxvbmdlZCB0byB0aGUgJ05lZ3JpdG8nIHJhY2UuICBUaGUgT2xkIFN0b25lIEFnZSBjYW4gYmUgZGl2aWRlZCBpbnRvIHRocmVlICBwYXJ0cyA6IFRoZSBMb3dlciBQYWxhZW9saXRoaWMgQWdlOyB0aGUgIE1pZGRsZSBQYWxhZW9saXRoaWMgQWdlOyBhbmQgdGhlIFVwcGVyICBQYWxhZW9saXRoaWMgQWdlLiAgIFRoZSBNZXNvbGl0aGljIEFnZSwgYWxzbyBrbm93biBhcyB0aGUgIE1pZGRsZSBTdG9uZSBBZ2UsIHdhcyB0aGUgc2Vjb25kIHBhcnQgb2YgIHRoZSBTdG9uZSBBZ2UuIEluIEluZGlhLCBpdCBzcGFubmVkIGZyb20gIDksMDAwIEJDRSB0byA0LDAwMCBCQ0UuIFRoaXMgQWdlIGlzICBjaGFyYWN0ZXJpemVkIGJ5IHRoZSBhcHBlYXJhbmNlIG9mICBNaWNyb2xpdGhzIChzbWFsbC1ibGFkZWQgc3RvbmUgdG9vbHMpLiBUaGUgIE1lc29saXRoaWMgQWdlIHdhcyBhIHRyYW5zaXRpb25hbCBwaGFzZSAgYmV0d2VlbiB0aGUgUGFsYWVvbGl0aGljIEFnZSBhbmQgdGhlICBOZW9saXRoaWMgQWdlLiBUaGUgcGVvcGxlIG9mIHRoaXMgYWdlIGxpdmVkICBvbiBodW50aW5nLCBmaXNoaW5nIGFuZCBmb29kIGdhdGhlcmluZy4gIExhdGVyIG9uLCB0aGV5IGFsc28gZG9tZXN0aWNhdGVkIGFuaW1hbHMuICBUaGUgTmVvbGl0aGljIEFnZSwgd2hpY2ggbWVhbnMgdGhlIE5ldyAgU3RvbmUgQWdlLCB3YXMgdGhlIGxhc3QgYW5kIHRoZSB0aGlyZCBwYXJ0ICBvZiB0aGUgU3RvbmUgQWdlLiBJbiBJbmRpYSwgaXQgc3Bhbm5lZCBmcm9tICBhcm91bmQgNywwMDAgQkNFIHRvIDEsMDAwIEJDRS4gVGhlICBOZW9saXRoaWMgQWdlIGlzIG1haW5seSBjaGFyYWN0ZXJpemVkIGJ5IHRoZSAgZGV2ZWxvcG1lbnQgb2Ygc2V0dGxlZCBhZ3JpY3VsdHVyZSwgYW5kIHRoZSAgdXNlIG9mIHRvb2xzIGFuZCB3ZWFwb25zIG1hZGUgb2YgcG9saXNoZWQgIHN0b25lcy4gVGhlIG1ham9yIGNyb3BzIGdyb3duIGR1cmluZyB0aGlzICBwZXJpb2Qgd2VyZSByYWdpLCBob3JzZSBncmFtLCBjb3R0b24sIHJpY2UsICB3aGVhdCBhbmQgYmFybGV5LiBQb3R0ZXJ5IGZpcnN0IGFwcGVhcmVkIGF0ICB0aGlzIEFnZS4gIFNvbWUgaW1wb3J0YW50IHNpdGVzOiAgMS4gTWVocmdhcmg6IE1laHJnYXJoIHdhcyBwcm9iYWJseSBvbmUgIG9mIHRoZSBwbGFjZXMgd2hlcmUgdGhlIHBlb3BsZSBsZWFybmVkICB0byBncm93IGJhcmxleSBhbmQgd2hlYXQsIGFuZCByZWFyICBzaGVlcCBhbmQgZ29hdHMgZm9yIHRoZSBmaXJzdCB0aW1lIGluIHRoaXMgIGFyZWEuIEl0IGlzIG9uZSBvZiB0aGUgZWFybGllc3QgdmlsbGFnZXMuIEl0ICBpcyBhIE5lb2xpdGhpYyBhcmNoYWVvbG9naWNhbCBzaXRlICAoZGF0ZWQgYy7igIk3LDAwMCBCQ0UgLSBjLuKAiTIsNTAwLzIsMDAwICBCQ0UpLCBzaXR1YXRlZCBvbiB0aGUgS2FjY2hpIFBsYWluIG9mICBCYWx1Y2hpc3RhbiBpbiBQYWtpc3Rhbi4gSXQgaXMgbG9jYXRlZCAgbmVhciB0aGUgQm9sYW4gUGFzcywgdG8gdGhlIHdlc3Qgb2YgIHRoZSBJbmR1cyBSaXZlci4gTWVocmdhcmgsIHRoZSBlYXJsaWVzdCAga25vd24gc2l0ZSBpbiB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQsICBwcm92aWRlcyBldmlkZW5jZSBvZiBmYXJtaW5nIGFuZCAgaGVyZGluZyBwcmFjdGljZXMuICAgMi4gS29sZGlod2E6IEl0IGlzIGFuIGFyY2hhZW9sb2dpY2FsICBzaXRlIGluIFV0dGFyIFByYWRlc2ggKEluZGlhKS4gSXQgaXMgIHNpdHVhdGVkIGluIHRoZSB2YWxsZXlzIG9mIHRoZSBCZWxhbiAgUml2ZXIuIEFsb25nIHdpdGggTWFoYWdhcmEsIGl0IGlzIG9uZSBvZiAgdGhlIGZldyBOZW9saXRoaWMgc2l0ZXMgaW4gVXR0YXIgUHJhZGVzaC4gIERhdGluZyBiYWNrIHRvIDYsNTAwIEJDRSwgaXQgc3RhbmRzIGFzICB0aGUgZWFybGllc3Qga25vd24gc2l0ZSBwcm92aWRpbmcgIGV2aWRlbmNlIG9mIHJpY2UgZG9tZXN0aWNhdGlvbi4gVGhlICBhZ3JpY3VsdHVyYWwgcHJhY3RpY2VzIGluIHRoZSBCZWxhbiAgVmFsbGV5IGNvbW1lbmNlZCBhcm91bmQgdGhlIHNhbWUgIHRpbWUsIGVuY29tcGFzc2luZyBub3Qgb25seSByaWNlICBjdWx0aXZhdGlvbiwgYnV0IGFsc28gdGhlIGdyb3dpbmcgb2YgIGJhcmxleSwgYXMgZXZpZGVuY2VkIGF0IE1haGdhcmEuICAzLiBCaGltYmV0a2EsIGluIHRoZSBwcmVzZW50LWRheSAgTWFkaHlhIFByYWRlc2g6IFRoaXMgaXMgYW4gb2xkIHNpdGUgIHdpdGggY2F2ZXMgYW5kIHJvY2sgc2hlbHRlcnMuIFRoZSAgcGVvcGxlIGNob3NlIHRoZXNlIG5hdHVyYWwgY2F2ZXMgIGJlY2F1c2UgdGhleSBwcm92aWRlZCBzaGVsdGVyIGZyb20gcmFpbiwgIGhlYXQgYW5kIHdpbmQuIFRoZXNlIHJvY2sgc2hlbHRlcnMgYXJlICBjbG9zZSB0byB0aGUgTmFybWFkYSBWYWxsZXkuIFNvbWUgb2YgIHRoZSBCaGltYmV0a2Egcm9jayBzaGVsdGVycyBmZWF0dXJlICBwcmUtaGlzdG9yaWMgY2F2ZSBwYWludGluZ3MgYW5kIHRoZSAgZWFybGllc3QgYXJlIGRhdGVkIHRvIDEwLDAwMCBCQ0UsICBjb3JyZXNwb25kaW5nIHRvIHRoZSBJbmRpYW4gTWVzb2xpdGhpYyAgcGVyaW9kLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one  ",
        "option2" : " Only two ",
        "option3" : " All three  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements regarding the cities of the Indus Valley Civilization: 1. The Great Bath, found at Mohenjo-Daro, was plastered and made watertight with the use of natural tar.  2. Kalibangan is the only site where evidence of fire altars has been found.  3. The people of the Indus Valley Civilization were aware of silver, but gold was not known to them.  4. Unlike some of the other Harappan cities, which were divided into two parts, Dholavira was divided into three parts.  How many of the above statements is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwy",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBJbmR1cyBWYWxsZXkgQ2l2aWxpemF0aW9uIChJVkMpLCBhbHNvICByZWZlcnJlZCB0byBhcyB0aGUgSGFyYXBwYW4gQ2l2aWxpemF0aW9uLCAgdGhyaXZlZCBkdXJpbmcgdGhlIEJyb256ZSBBZ2UgaW4gdGhlIG5vcnRoLSB3ZXN0ZXJuIHJlZ2lvbnMgb2YgU291dGggQXNpYS4gSXQgZXhpc3RlZCAgZnJvbSAzLDMwMCBCQ0UgdG8gMSwzMDAgQkNFLCB3aXRoIGl0cyAgbWF0dXJlIHBoYXNlIHNwYW5uaW5nIGZyb20gMiw2MDAgQkNFIHRvICAxLDkwMCBCQ0UuICBJbiBNb2hlbmpvLURhcm8sIGEgdmVyeSBzcGVjaWFsIHRhbmssICB3aGljaCB0aGUgYXJjaGFlb2xvZ2lzdHMgY2FsbCB0aGUgR3JlYXQgIEJhdGgsIHdhcyBidWlsdC4gVGhpcyB3YXMgbGluZWQgd2l0aCBicmlja3MsICBjb2F0ZWQgd2l0aCBwbGFzdGVyIGFuZCBtYWRlIHdhdGVydGlnaHQgIHdpdGggYSBsYXllciBvZiBuYXR1cmFsIHRhci4gVGhlcmUgd2VyZSBzdGVwcyAgbGVhZGluZyBkb3duIHRvIGl0IGZyb20gdHdvIHNpZGVzLCB3aGlsZSAgdGhlcmUgd2VyZSByb29tcyBvbiBhbGwgc2lkZXMuIFdhdGVyIHdhcyAgcHJvYmFibHkgYnJvdWdodCBpbiBmcm9tIGEgd2VsbCBhbmQgIGRyYWluZWQgb3V0IGFmdGVyIHVzZS4gUGVyaGFwcyBpbXBvcnRhbnQgIHBlb3BsZSB0b29rIGEgZGlwIGluIHRoaXMgdGFuayBvbiBzcGVjaWFsICBvY2Nhc2lvbnMuICBPdGhlciBjaXRpZXMsIHN1Y2ggYXMgS2FsaWJhbmdhbiBhbmQgIExvdGhhbCwgaGFkIGZpcmUgYWx0YXJzLCB3aGVyZSBzYWNyaWZpY2VzICBtYXkgaGF2ZSBiZWVuIHBlcmZvcm1lZC4gQW5kIHNvbWUgY2l0aWVzLCAgbGlrZSBNb2hlbmpvLURhcm8sIEhhcmFwcGEgYW5kIExvdGhhbCwgIGhhZCBlbGFib3JhdGUgc3RvcmVob3VzZXMuICBUaGUgSGFyYXBwYW4gY2l0eSB3YXMgYSB2ZXJ5IGJ1c3kgcGxhY2UuICBUaGVyZSB3ZXJlIHBlb3BsZSB3aG8gcGxhbm5lZCB0aGUgIGNvbnN0cnVjdGlvbiBvZiBzcGVjaWFsIGJ1aWxkaW5ncyBpbiB0aGUgY2l0eS4gIFRoZXNlIHdlcmUgcHJvYmFibHkgdGhlIHJ1bGVycy4gVGhlIHJ1bGVycyAgbGlrZWx5IHNlbnQgcGVvcGxlIHRvIGRpc3RhbnQgbGFuZHMgdG8gZ2V0ICBtZXRhbCwgcHJlY2lvdXMgc3RvbmVzIGFuZCBvdGhlciB0aGluZ3MgIHRoYXQgdGhleSB3YW50ZWQuIFRoZXkgbWF5IGhhdmUga2VwdCAgdGhlIG1vc3QgdmFsdWFibGUgb2JqZWN0cywgc3VjaCBhcyB0aGUgIG9ybmFtZW50cyBvZiBnb2xkIGFuZCBzaWx2ZXIsIG9yICBiZWF1dGlmdWwgYmVhZHMsIGZvciB0aGVtc2VsdmVzLiBNb3N0IG9mICB0aGUgdGhpbmdzLCB0aGF0IGhhdmUgYmVlbiBmb3VuZCBieSB0aGUgIGFyY2hhZW9sb2dpc3RzLCBhcmUgbWFkZSBvZiBzdG9uZSwgc2hlbGwgIGFuZCBtZXRhbCwgaW5jbHVkaW5nIGNvcHBlciwgYnJvbnplLCAgZ29sZCBhbmQgc2lsdmVyLiBHb2xkIGFuZCBzaWx2ZXIgd2VyZSAgdXNlZCB0byBtYWtlIG9ybmFtZW50cyBhbmQgdmVzc2Vscy4gICBUaGUgY2l0eSBvZiBEaG9sYXZpcmEgd2FzIGxvY2F0ZWQgb24gS2hhZGlyICBCZXl0IChhbHNvIHNwZWxsZWQgYXMgQmV0KSBpbiB0aGUgUmFubiBvZiAgS3V0Y2gsIHdoZXJlIHRoZXJlIHdhcyBmcmVzaCB3YXRlciBhbmQgIGZlcnRpbGUgc29pbC4gVW5saWtlIHNvbWUgb2YgdGhlIG90aGVyICBIYXJhcHBhbiBjaXRpZXMsIHdoaWNoIHdlcmUgZGl2aWRlZCBpbnRvICB0d28gcGFydHMsIERob2xhdmlyYSB3YXMgZGl2aWRlZCBpbnRvICB0aHJlZSBwYXJ0cywgYW5kIGVhY2ggcGFydCB3YXMgIHN1cnJvdW5kZWQgYnkgbWFzc2l2ZSBzdG9uZSB3YWxscywgd2l0aCAgZW50cmFuY2VzIHRocm91Z2ggZ2F0ZXdheXMuIFRoZXJlIHdhcyAgYWxzbyBhIGxhcmdlIG9wZW4gYXJlYSBpbiB0aGUgc2V0dGxlbWVudCwgIHdoZXJlIHB1YmxpYyBjZXJlbW9uaWVzIGNvdWxkIGJlIGhlbGQuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one  ",
        "option2" : " Only two ",
        "option3" : " Only three ",
        "option4" : " All four   "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following pairs:  S.N. Early Harappan Harappan sites Well known for 1. Mohenjo-Daro Evidence of lost-wax technique in craft making  2. Lothal Important centre for stone and metal working  3. Rakhigarhi Earliest known site for cotton cultivation  How many of the above pairs is/are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwz",
      "description" : "ICBFeHBsYW5hdGlvbjogIEJyb256ZSBjYXN0aW5nIHdhcyBwcmFjdGlzZWQgb24gYSB3aWRlICBzY2FsZSBpbiBhbG1vc3QgYWxsIG1ham9yIHNpdGVzIG9mIHRoZSAgSGFyYXBwYW4gY2l2aWxpemF0aW9uLiBUaGUgdGVjaG5pcXVlIHVzZWQgIGZvciBicm9uemUgY2FzdGluZyB3YXMgdGhlIGxvc3Qtd2F4ICB0ZWNobmlxdWUgKGNpcmUtcGVyZHVlKS4gIFRoZSAnRGFuY2luZyBHaXJsJywgZm91bmQgaW4gTW9oZW5qby1EYXJvLCAgd2FzIG1hZGUgdXAgb2YgYnJvbnplLCB1c2luZyB0aGUgbG9zdC13YXggIHRlY2huaXF1ZS4gICBUaGUgZmlyc3QgZXZpZGVuY2Ugb2YgY290dG9uIGN1bHRpdmF0aW9uICBpbiB0aGUgSW5kaWFuIHN1Yi1jb250aW5lbnQgY29tZXMgZnJvbSAgNywwMDAgeWVhcnMgYWdvIGZyb20gYSBzaXRlIGtub3duIGFzICBNZWhyZ2FyaC4gQWN0dWFsIHBpZWNlcyBvZiBjbG90aCB3ZXJlICBmb3VuZCBhdHRhY2hlZCB0byB0aGUgbGlkIG9mIGEgc2lsdmVyIHZhc2UgIGFuZCBzb21lIGNvcHBlciBvYmplY3RzIGF0IE1vaGVuam8tRGFyby4gIFRoZSBhcmNoYWVvbG9naXN0cyBoYXZlIGFsc28gZm91bmQgc3BpbmRsZSAgd2hvcmxzLCBtYWRlIG9mIHRlcnJhY290dGEgYW5kIGZhaWVuY2UuICBUaGVzZSB3ZXJlIHVzZWQgdG8gc3BpbiB0aHJlYWQuICAgVGhlIGNpdHkgb2YgTG90aGFsIHN0b29kIGJlc2lkZSBhIHRyaWJ1dGFyeSAgb2YgdGhlIFNhYmFybWF0aSBSaXZlciwgaW4gR3VqYXJhdCwgY2xvc2UgdG8gIHRoZSBHdWxmIG9mIEtoYW1iYXQuIEl0IHdhcyBzaXR1YXRlZCBuZWFyICB0aGUgYXJlYXMgd2hlcmUgcmF3IG1hdGVyaWFscywgc3VjaCBhcyAgc2VtaS1wcmVjaW91cyBzdG9uZXMsIHdlcmUgZWFzaWx5IGF2YWlsYWJsZS4gIFRoaXMgd2FzIGFuIGltcG9ydGFudCBjZW50cmUgZm9yIG1ha2luZyAgb2JqZWN0cyBvdXQgb2Ygc3RvbmUsIHNoZWxsIGFuZCBtZXRhbC4gVGhlcmUgIHdhcyBhbHNvIGEgc3RvcmVob3VzZSBpbiB0aGUgY2l0eS4gTWFueSAgc2VhbHMgYW5kIHNlYWxpbmdzICh0aGUgaW1wcmVzc2lvbiBvZiBzZWFscyAgb24gY2xheSkgd2VyZSBmb3VuZCBpbiB0aGlzIHN0b3JlaG91c2UuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one  ",
        "option2" : " Only two  ",
        "option3" : " All three  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 4,
      "question" : "Consider the following statements with reference to the Indus Valley Civilization: 1. Some of the raw materials for craft-making, such as gold, silver and precious stones were locally available in abundance.  2. Tin was imported from Afghanistan and Iran to the cities of the Harappan Civilization, where it was combined with copper to create bronze.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0",
      "description" : "ICBFeHBsYW5hdGlvbjogIFdoaWxlIHNvbWUgb2YgdGhlIHJhdyBtYXRlcmlhbHMgdGhhdCB0aGUgIEhhcmFwcGFucyB1c2VkIHdlcmUgYXZhaWxhYmxlIGxvY2FsbHksICBtYW55IGl0ZW1zLCBzdWNoIGFzIGNvcHBlciwgdGluLCBnb2xkLCAgc2lsdmVyIGFuZCBwcmVjaW91cyBzdG9uZXMsIGhhZCB0byBiZSAgYnJvdWdodCBmcm9tIGRpc3RhbnQgcGxhY2VzLiBUaGUgIEhhcmFwcGFucyBwcm9iYWJseSBnb3QgY29wcGVyIGZyb20gdGhlICBwcmVzZW50LWRheSBSYWphc3RoYW4sIGFuZCBldmVuIGZyb20gIE9tYW4gaW4gV2VzdCBBc2lhLiBHb2xkIGNvdWxkIGhhdmUgY29tZSAgZnJvbSB0aGUgcHJlc2VudC1kYXkgS2FybmF0YWthLCBhbmQgIHByZWNpb3VzIHN0b25lcyBmcm9tIHRoZSBwcmVzZW50LWRheSAgR3VqYXJhdCwgSXJhbiBhbmQgQWZnaGFuaXN0YW4uICBUaW4sIHdoaWNoIHdhcyBtaXhlZCB3aXRoIGNvcHBlciB0byAgcHJvZHVjZSBicm9uemUsIG1heSBoYXZlIGJlZW4gYnJvdWdodCAgZnJvbSB0aGUgcHJlc2VudC1kYXkgQWZnaGFuaXN0YW4gYW5kICBJcmFuLiAgIFRoZSBDaXZpbGl6YXRpb24ncyBlY29ub215IGFwcGVhcnMgdG8gaGF2ZSAgZGVwZW5kZWQgc2lnbmlmaWNhbnRseSBvbiB0cmFkZSwgd2hpY2ggd2FzICBmYWNpbGl0YXRlZCBieSBtYWpvciBhZHZhbmNlcyBpbiB0cmFuc3BvcnQgIHRlY2hub2xvZ3kuIFRoZSBIYXJhcHBhbiBDaXZpbGl6YXRpb24gbWF5ICBoYXZlIGJlZW4gdGhlIGZpcnN0IHRvIHVzZSB3aGVlbGVkICB0cmFuc3BvcnQsIGluIHRoZSBmb3JtIG9mIGJ1bGxvY2sgY2FydHMgdGhhdCAgYXJlIGlkZW50aWNhbCB0byB0aG9zZSBzZWVuIHRocm91Z2hvdXQgIFNvdXRoIEFzaWEgdG9kYXkuICBJdCBhbHNvIGFwcGVhcnMgdGhhdCB0aGV5IGJ1aWx0IGJvYXRzIGFuZCAgd2F0ZXJjcmFmdHMgLSBhIGNsYWltIHN1cHBvcnRlZCBieSB0aGUgIGFyY2hhZW9sb2dpY2FsIGRpc2NvdmVyaWVzIG9mIGEgbWFzc2l2ZSwgIGRyZWRnZWQgY2FuYWwsIGFuZCB3aGF0IGlzIHJlZ2FyZGVkIGFzIGEgIGRvY2tpbmcgZmFjaWxpdHkgYXQgdGhlIGNvYXN0YWwgY2l0eSBvZiBMb3RoYWwuICBUaGVyZSB3YXMgYW4gZXh0ZW5zaXZlIG1hcml0aW1lIHRyYWRlICBuZXR3b3JrIG9wZXJhdGluZyBiZXR3ZWVuIHRoZSBIYXJhcHBhbiAgYW5kIHRoZSBNZXNvcG90YW1pYW4gQ2l2aWxpemF0aW9ucywgYXMgIGVhcmx5IGFzIHRoZSBtaWRkbGUgSGFyYXBwYW4gUGhhc2UsIHdpdGggIG11Y2ggY29tbWVyY2UgYmVpbmcgaGFuZGxlZCBieSAidGhlICBtaWRkbGVtZW4gbWVyY2hhbnRzIGZyb20gRGlsbXVuIiAgKG1vZGVybiBCYWhyYWluKS4gU3VjaCBsb25nLWRpc3RhbmNlIHNlYSAgdHJhZGUgYmVjYW1lIGZlYXNpYmxlIHdpdGggdGhlIGRldmVsb3BtZW50ICBvZiBwbGFuay1idWlsdCB3YXRlcmNyYWZ0LCBlcXVpcHBlZCB3aXRoIGEgIHNpbmdsZSBjZW50cmFsIG1hc3Qgc3VwcG9ydGluZyBhIHNhaWwgb2YgIHdvdmVuIHJ1c2hlcyBvciBjbG90aC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 5,
      "question" : "Consider the following statements: Statement-I: The people of the Harappan Civilization were aware of drought-resistant crops, such as wheat and barley, as the region did not receive heavy rainfall.  Statement-II: The Harappan Civilization relied solely on rain-fed agriculture, as they lacked the knowledge and practice of irrigation. Which one of the following is correct in respect of the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw1",
      "description" : "ICBFeHBsYW5hdGlvbjogIEFncmljdWx0dXJlIHNlcnZlZCBhcyB0aGUgc29sZSBtZWFucyBvZiAgc3VzdGVuYW5jZSBmb3IgdGhlIHBlb3BsZSBvZiB0aGUgSGFyYXBwYW4gIENpdmlsaXphdGlvbiwgd2l0aCBmYXJtaW5nIGFuZCBhZ3JpY3VsdHVyZSAgYmVjb21pbmcgdGhlIHByaW1hcnkgb2NjdXBhdGlvbiBmb3IgdGhvc2UgIHdobyB3ZXJlIHVuYWJsZSB0byBlbmdhZ2UgaW4gdHJhZGUuIEZyb20gIHRoZSByZW1haW5zLCB3ZSBnZXQgdGhlIGV2aWRlbmNlIG9mIHRoZSAgcGxhbnRzIHRoYXQgdGhlIEhhcmFwcGFucyBncmV3LiBJbiB3aW50ZXJzLCAgY3JvcHMsIHN1Y2ggYXMgd2hlYXQsIGJhcmxleSwgcGVhcywgbGVudGlscywgIGxpbnNlZWQgYW5kIG11c3RhcmQgc2VlZHMgd2VyZSBzb3duLCAgd2hpbGUgbWlsbGV0LCBzZXNhbWUgYW5kIHJpY2Ugd2VyZSBwbGFudGVkICBkdXJpbmcgdGhlIHN1bW1lciBzZWFzb24uICAgQSBuZXcgdG9vbCwgdGhlIHBsb3VnaCwgd2FzIHVzZWQgdG8gZGlnIHRoZSAgZWFydGggZm9yIHR1cm5pbmcgdGhlIHNvaWwgYW5kIHBsYW50aW5nICBzZWVkcy4gV2hpbGUgcmVhbCBwbG91Z2hzLCB3aGljaCB3ZXJlICBwcm9iYWJseSBtYWRlIG9mIHdvb2QsIGhhdmUgbm90IHN1cnZpdmVkLCAgdG95IG1vZGVscyBoYXZlIGJlZW4gZm91bmQuIEFzIHRoaXMgIHJlZ2lvbiBkb2VzIG5vdCByZWNlaXZlIGhlYXZ5IHJhaW5mYWxsLCAgc29tZSBmb3JtIG9mIGlycmlnYXRpb24gbWF5IGhhdmUgYmVlbiAgdXNlZC4gVGhpcyBtZWFucyB0aGF0IHdhdGVyIHdhcyBzdG9yZWQgIGFuZCBzdXBwbGllZCB0byB0aGUgZmllbGRzIHdoZW4gdGhlICBwbGFudHMgd2VyZSBncm93aW5nLiBUaGUgSW5kdXMgcGVvcGxlICBlbXBsb3llZCBhbiBpcnJpZ2F0aW9uIHN5c3RlbSB0byAgY3VsdGl2YXRlIHRoZWlyIGNyb3BzLCBlbmFibGluZyB0aGVtIHRvICBtZWV0IHRoZSBuZWVkcyBvZiB0aGVpciBwb3B1bGF0aW9uIGJ5ICBkZXBhcnRpbmcgZnJvbSB0aGUgYW5jaWVudCBub21hZGljICBwcmFjdGljZXMgYW5kIGVtYnJhY2luZyB0aGUgIGNvbnRlbXBvcmFyeSB0ZWNobm9sb2dpZXMuICBUaGUgSGFyYXBwYW5zIHJlYXJlZCBjYXR0bGUsIHNoZWVwLCBnb2F0ICBhbmQgYnVmZmFsby4gV2F0ZXIgYW5kIHBhc3R1cmVzIHdlcmUgIGF2YWlsYWJsZSBhcm91bmQgdGhlIHNldHRsZW1lbnRzLiBIb3dldmVyLCAgaW4gdGhlIGRyeSBzdW1tZXIgbW9udGhzLCBsYXJnZSBoZXJkcyBvZiAgYW5pbWFscyB3ZXJlIHByb2JhYmx5IHRha2VuIHRvIGdyZWF0ZXIgIGRpc3RhbmNlcyBpbiBzZWFyY2ggb2YgZ3Jhc3MgYW5kIHdhdGVyLiAgIE1vaGVuam8tRGFybywgSGFyYXBwYSBhbmQgTG90aGFsIGFsc28gIGhhZCBodWdlIHN0b3JlaG91c2VzIHVzZWQgZm9yIHN0b3JpbmcgIGdyYWlucyBhbmQgaGVuY2UsIHdlcmUgY2FsbGVkIGdyYW5hcmllcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Both Statement-I and Statement-II are  correct and Statement-II is the correct  explanation for Statement-I. ",
        "option2" : " Both Statement-I and Statement-II are  correct and Statement-II is not the  correct explanation for Statement-I.  ",
        "option3" : " Statement-I is correct but Statement-II  is incorrect.  ",
        "option4" : " Statement-I is incorrect but Statement- II is correct.   "
      }
    },
    {
      "index" : 6,
      "question" : "Among the listed ancient towns, which of the following pairs is renowned for having an intricate signboard written in the Harappan script and a tidal dockyard, respectively?  ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw2",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBjaXR5IG9mIERob2xhdmlyYSB3YXMgbG9jYXRlZCBvbiAgS2hhZGlyIEJleXQgKGFsc28gc3BlbGxlZCBhcyBCZXQpIGluIHRoZSAgUmFubiBvZiBLdXRjaCwgd2hlcmUgdGhlcmUgd2FzIGZyZXNoICB3YXRlciBhbmQgZmVydGlsZSBzb2lsLiBVbmxpa2Ugc29tZSBvZiB0aGUgIG90aGVyIEhhcmFwcGFuIGNpdGllcywgd2hpY2ggd2VyZSBkaXZpZGVkICBpbnRvIHR3byBwYXJ0cywgRGhvbGF2aXJhIHdhcyBkaXZpZGVkIGludG8gIHRocmVlIHBhcnRzLCBhbmQgZWFjaCBwYXJ0IHdhcyBzdXJyb3VuZGVkICB3aXRoIG1hc3NpdmUgc3RvbmUgd2FsbHMsIHdpdGggZW50cmFuY2VzICB0aHJvdWdoIGdhdGV3YXlzLiBUaGVyZSB3YXMgYWxzbyBhIGxhcmdlICBvcGVuIGFyZWEgaW4gdGhlIHNldHRsZW1lbnQsIHdoZXJlIHB1YmxpYyAgY2VyZW1vbmllcyBjb3VsZCBiZSBoZWxkLiBPdGhlciBmaW5kcyAgaW5jbHVkZSBsYXJnZSBsZXR0ZXJzIG9mIHRoZSBIYXJhcHBhbiAgc2NyaXB0IHRoYXQgd2VyZSBjYXJ2ZWQgb3V0IG9mIHdoaXRlICBzdG9uZSBhbmQgcGVyaGFwcyBpbmxhaWQgaW4gd29vZC4gVGhpcyBpcyAgYSB1bmlxdWUgZmluZCBhcyBnZW5lcmFsbHkgdGhlIEhhcmFwcGFuICB3cml0aW5nIGhhcyBiZWVuIGZvdW5kIG9uIHNtYWxsIG9iamVjdHMsICBzdWNoIGFzIHNlYWxzLiBUaGVyZSBhcmUgMTAgc3ltYm9scyBpbiAgdGhlIHBhbmVsLiAgIFRoZSBjaXR5IG9mIExvdGhhbCBzdG9vZCBiZXNpZGUgYSAgdHJpYnV0YXJ5IG9mIHRoZSBTYWJhcm1hdGkgUml2ZXIsIGluICBHdWphcmF0LCBjbG9zZSB0byB0aGUgR3VsZiBvZiBLaGFtYmF0LiBJdCAgd2FzIHNpdHVhdGVkIG5lYXIgdGhlIGFyZWFzIHdoZXJlIHJhdyAgbWF0ZXJpYWxzLCBzdWNoIGFzIHNlbWktcHJlY2lvdXMgc3RvbmVzLCAgd2VyZSBlYXNpbHkgYXZhaWxhYmxlLiBUaGlzIHdhcyBhbiAgaW1wb3J0YW50IGNlbnRyZSBmb3IgbWFraW5nIG9iamVjdHMgb3V0IG9mICBzdG9uZSwgc2hlbGwgYW5kIG1ldGFsLiBBIGJ1aWxkaW5nLCB0aGF0IHdhcyAgZm91bmQgaGVyZSwgd2FzIHByb2JhYmx5IGEgd29ya3Nob3AgZm9yICBtYWtpbmcgYmVhZHM6IHBpZWNlcyBvZiBzdG9uZSwgaGFsZi1tYWRlICBiZWFkcywgdG9vbHMgZm9yIGJlYWQgbWFraW5nIGFuZCBmaW5pc2hlZCAgYmVhZHMgaGF2ZSBhbGwgYmVlbiBmb3VuZCBoZXJlLiBJbiBjbG9zZSAgcHJveGltaXR5IHRvIHRoZSBlbmNsb3N1cmUgaWRlbnRpZmllZCBhcyAgYSB3YXJlaG91c2UsIGlzIGEgYmFzaW4gaWRlbnRpZmllZCBhcyBhICB0aWRhbCBkb2NreWFyZC4gQXQgdGhlIG5vcnRoIGFuZCB0aGUgc291dGggIGVuZHMgb2YgdGhlIGJhc2luIGFyZSBpZGVudGlmaWVkIGFuIGlubGV0IGFuZCAgYW4gb3V0bGV0IHdoaWNoIHdvdWxkIGhhdmUgYWlkZWQgaW4gIG1haW50YWluaW5nIGFkZXF1YXRlIHdhdGVyIGxldmVsIHRvICBmYWNpbGl0YXRlIHNhaWxpbmcuICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Surkotada and Dholavira  ",
        "option2" : " Dholavira and Ropar  ",
        "option3" : " Kuntasi and Dholavira ",
        "option4" : " Dholavira and Lothal  "
      }
    },
    {
      "index" : 7,
      "question" : "Which one of the following is not an early Harappan site? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw3",
      "description" : "ICBFeHBsYW5hdGlvbjogICBTb2hhZ2F1cmEgaXMgYW4gYW5jaWVudCB2aWxsYWdlIG9mIFV0dGFyICBQcmFkZXNoLCBsb2NhdGVkIGF0IHRoZSBiYW5rIG9mIHRoZSBTYW5nYW0gIChtZWV0aW5nIHBvaW50KSBvZiB0d28gZmFtb3VzIFJpdmVyIFJhcHRpICBhbmQgQWFtaS4gSXQgaXMgYW4gQXNob2thbi1lcmEgQ29wcGVyICBQbGF0ZSBJbnNjcmlwdGlvbi4gVGhlIFNvaGdhdXJhIENvcHBlciAgUGxhdGUgSW5zY3JpcHRpb24gaXMgYW4gSW5kaWFuIENvcHBlciBQbGF0ZSAgSW5zY3JpcHRpb24gd3JpdHRlbiBpbiBQcmFrcml0IGluIHRoZSBCcmFobWkgIHNjcmlwdC4gIFNpc3dhbCBpcyBhIHZpbGxhZ2UgaW4gSGlzYXIgZGlzdHJpY3QsICBIYXJ5YW5hLiBJdCBpcyBhIHNpdGUgb2YgQ2hhbGNvbGl0aGljIEFnZSAvICBFYXJseSBIYXJhcHBhIEFnZS4gIERhbWIgU2FkYXQgaXMgYW4gYXJjaGFlb2xvZ2ljYWwgbW91bmQgIGFuZCBhbmNpZW50IHNldHRsZW1lbnQgaW4gdGhlIEJhbHVjaGlzdGFuICByZWdpb24gb2YgUGFraXN0YW4uIEl0IGlzIHJlbGF0ZWQgdG8gdGhlIGVhcmx5ICBwaGFzZXMgb2YgdGhlIEluZHVzIFZhbGxleSBDaXZpbGl6YXRpb24uICBBbXJpIGlzIGFuIGFuY2llbnQgc2V0dGxlbWVudCBpbiBtb2Rlcm4tIGRheSBTaW5kaCAoUGFraXN0YW4pLiBUaGUgSW5kdXMgVmFsbGV5IHNpdGUgIGlzIGxvY2F0ZWQgc291dGggb2YgTW9oZW5qbyBEYXJvLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Siswal ",
        "option2" : " Damb Sadat ",
        "option3" : " Amri ",
        "option4" : " Sohgaura  "
      }
    },
    {
      "index" : 8,
      "question" : "With reference to the agricultural technologies of the Indus Valley Civilization, consider the following statements: 1. Most Harappan sites are located in the semi-arid lands, where irrigation was probably required for agriculture, so traces of canals have been found in Punjab and Sind. 2. Terracotta models of plough have been found at sites in Cholistan. 3. The evidence of a ploughed field found at Kalibangan had two sets of furrows at right angles to each other, suggesting that two different crops were grown together. How many of the above statements is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw4",
      "description" : "ICBFeHBsYW5hdGlvbjogIE1vc3QgSGFyYXBwYW4gc2l0ZXMgYXJlIGxvY2F0ZWQgaW4gdGhlICBzZW1pLWFyaWQgbGFuZHMsIHdoZXJlIGlycmlnYXRpb24gd2FzICBwcm9iYWJseSByZXF1aXJlZCBmb3IgYWdyaWN1bHR1cmUuIFRyYWNlcyBvZiAgY2FuYWxzIGhhdmUgYmVlbiBmb3VuZCBhdCB0aGUgSGFyYXBwYW4gIHNpdGUgb2YgU2hvcnR1Z2hhaSBpbiBBZmdoYW5pc3RhbiwgYnV0ICBub3QgaW4gUHVuamFiIG9yIFNpbmQuICBUZXJyYWNvdHRhIG1vZGVscyBvZiBwbG91Z2ggaGF2ZSBiZWVuICBmb3VuZCBhdCBzaXRlcyBpbiBDaG9saXN0YW4gYW5kIGF0IEJhbmF3YWxpICAoSGFyeWFuYSkuICBUaGUgYXJjaGFlb2xvZ2lzdHMgaGF2ZSBhbHNvIGZvdW5kICBldmlkZW5jZSBvZiBhIHBsb3VnaGVkIGZpZWxkIGF0IEthbGliYW5nYW4gIChSYWphc3RoYW4pLCBhc3NvY2lhdGVkIHdpdGggdGhlIGVhcmx5ICBIYXJhcHBhbiBsZXZlbHMuIFRoZSBmaWVsZCBoYWQgdHdvIHNldHMgb2YgIGZ1cnJvd3MgYXQgcmlnaHQgYW5nbGVzIHRvIGVhY2ggb3RoZXIsICBzdWdnZXN0aW5nIHRoYXQgdHdvIGRpZmZlcmVudCBjcm9wcyB3ZXJlICBncm93biB0b2dldGhlci4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two  ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to craft production of the Indus Valley Civilization, consider the following statements: 1. Chanhudaro were devoted to craft production, including bead-making, shell-cutting. 2. Nageshwar and Balakot were the specialized centres for making shell objects - including bangles, ladles. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw5",
      "description" : "ICBFeHBsYW5hdGlvbjogIENoYW5odWRhcm8gd2VyZSBkZXZvdGVkIHRvIGNyYWZ0ICBwcm9kdWN0aW9uLCBpbmNsdWRpbmcgYmVhZC1tYWtpbmcsICBzaGVsbC1jdXR0aW5nLCBtZXRhbC13b3JraW5nLCBzZWFsLSBtYWtpbmcgYW5kIHdlaWdodC1tYWtpbmcuICBUaGUgdmFyaWV0eSBvZiBtYXRlcmlhbHMgdXNlZCB0byBtYWtlICBiZWFkcyBpcyByZW1hcmthYmxlOiBTdG9uZXMgbGlrZSBjYXJuZWxpYW4gIChvZiBhIGJlYXV0aWZ1bCByZWQgY29sb3VyKSwgamFzcGVyLCBjcnlzdGFsICBhbmQgbWV0YWxzLCBsaWtlIGNvcHBlciwgYnJvbnplIGFuZCBnb2xkOyAgYW5kIHNoZWxsLCBmYWllbmNlIGFuZCB0ZXJyYWNvdHRhIG9yIGJ1cm50ICBjbGF5LiAgU29tZSBiZWFkcyB3ZXJlIG1hZGUgb2YgdHdvIG9yIG1vcmUgIHN0b25lcywgY2VtZW50ZWQgdG9nZXRoZXIsIHNvbWUgb2Ygc3RvbmUgIHdpdGggZ29sZCBjYXBzLiAgVGhlIHNoYXBlcyB3ZXJlIG51bWVyb3VzIC0gZGlzYy1zaGFwZWQsICBjeWxpbmRyaWNhbCwgc3BoZXJpY2FsLCBiYXJyZWwtc2hhcGVkLCAgc2VnbWVudGVkLiBTb21lIHdlcmUgZGVjb3JhdGVkIGJ5ICBpbmNpc2luZyBvciBwYWludGluZyBhbmQgc29tZSBoYWQgZGVzaWducyAgZXRjaGVkIG9udG8gdGhlbS4gIFRlY2huaXF1ZXMgZm9yIG1ha2luZyBiZWFkcyBkaWZmZXJlZCAgYWNjb3JkaW5nIHRvIHRoZSBtYXRlcmlhbC4gIE5hZ2VzaHdhciBhbmQgQmFsYWtvdCB3ZXJlIHRoZSAgc3BlY2lhbGl6ZWQgY2VudHJlcyBmb3IgbWFraW5nIHNoZWxsICBvYmplY3RzIC0gaW5jbHVkaW5nIGJhbmdsZXMsIGxhZGxlcyBhbmQgIGlubGF5IC0gd2hpY2ggd2VyZSB0YWtlbiB0byBvdGhlciAgc2V0dGxlbWVudHMuICAgVGhlIGZpbmlzaGVkIHByb2R1Y3RzIChzdWNoIGFzIGJlYWRzKSBmcm9tICBDaGFuaHVkYXJvIGFuZCBMb3RoYWwgd2VyZSB0YWtlbiB0byB0aGUgIGxhcmdlIHVyYmFuIGNlbnRyZXMsIHN1Y2ggYXMgTW9oZW5qby1EYXJvICBhbmQgSGFyYXBwYS4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only  ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 10,
      "question" : "With reference to the Mesopotamian texts, consider the following statements: 1. This text refers that copper coming to the Harappan region from a place called Dilmun. 2. This text also refers to Meluhha possibly the Harappan region as a land of the sea-farers. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxMA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFJlY2VudCBhcmNoYWVvbG9naWNhbCBmaW5kcyBzdWdnZXN0IHRoYXQgIGNvcHBlciB3YXMgYWxzbyBwcm9iYWJseSBicm91Z2h0IGZyb20gIE9tYW4sIG9uIHRoZSBzb3V0aC1lYXN0ZXJuIHRpcCBvZiB0aGUgIEFyYWJpYW4gUGVuaW5zdWxhLiBDaGVtaWNhbCBhbmFseXNlcyBoYXZlICBzaG93biB0aGF0IGJvdGggdGhlIE9tYW5pIGNvcHBlciBhbmQgdGhlICBIYXJhcHBhbiBhcnRlZmFjdHMgaGF2ZSB0cmFjZXMgb2Ygbmlja2VsLCAgc3VnZ2VzdGluZyBhIGNvbW1vbiBvcmlnaW4uIFRoZXJlIGFyZSAgb3RoZXIgdHJhY2VzIG9mIGNvbnRhY3QgYXMgd2VsbC4gQSBkaXN0aW5jdGl2ZSAgdHlwZSBvZiB2ZXNzZWwsIGEgbGFyZ2UgSGFyYXBwYW4gamFyIGNvYXRlZCAgd2l0aCBhIHRoaWNrIGxheWVyIG9mIGJsYWNrIGNsYXksIGhhcyBiZWVuICBmb3VuZCBhdCBPbWFuaSBzaXRlcy4gU3VjaCB0aGljayBjb2F0aW5ncyAgcHJldmVudCB0aGUgcGVyY29sYXRpb24gb2YgbGlxdWlkcy4gICBNZXNvcG90YW1pYW4gdGV4dHMsIGRhdGFibGUgdG8gdGhlIHRoaXJkICBtaWxsZW5uaXVtIEJDRSwgcmVmZXIgdG8gY29wcGVyIGNvbWluZyAgZnJvbSBhIHJlZ2lvbiBjYWxsZWQgTWFnYW4sIHBlcmhhcHMgYSAgbmFtZSBmb3IgT21hbiwgYW5kIGludGVyZXN0aW5nbHkgIGVub3VnaCBjb3BwZXIgd2FzIGZvdW5kIGF0IHRoZSAgTWVzb3BvdGFtaWFuIHNpdGVzIGFsc28gY29udGFpbiB0cmFjZXMgIG9mIG5pY2tlbC4gICBUaGUgTWVzb3BvdGFtaWFuIHRleHRzIG1lbnRpb24gY29udGFjdHMgIHdpdGggdGhlIHJlZ2lvbnMgbmFtZWQgRGlsbXVuIChwcm9iYWJseSAgdGhlIGlzbGFuZCBvZiBCYWhyYWluKSwgTWFnYW4gYW5kICBNZWx1aGhhLCBwb3NzaWJseSB0aGUgSGFyYXBwYW4gcmVnaW9uLiAgVGhleSBtZW50aW9uIHRoZSBwcm9kdWN0cyBmcm9tIE1lbHVoaGE6ICBDYXJuZWxpYW4sIGxhcGlzIGxhenVsaSwgY29wcGVyLCBnb2xkIGFuZCAgdmFyaWV0aWVzIG9mIHdvb2QuIFRoaXMgdGV4dCBhbHNvIHJlZmVycyB0byAgTWVsdWhoYSBhcyBhIGxhbmQgb2YgdGhlIHNlYS1mYXJlcnMuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to the Rig Vedic period, consider the following statements: 1. The Rig Veda is the earliest text of the Indo-European languages and contains the collection of prayers offered to various gods. 2. Women were not allowed to participate in the assemblies during this period. 3. Naditama, another name of the Indus River, is mentioned in the Rig Veda. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxMQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgUmlnIFZlZGEgaXMgdGhlIGVhcmxpZXN0IHRleHQgb2YgdGhlICBJbmRvLUV1cm9wZWFuIGxhbmd1YWdlcy4gSXQgaXMgd3JpdHRlbiAgaW4gU2Fuc2tyaXQsIGJ1dCBhbHNvIGluY2x1ZGVzIG1hbnkgIE11bmRhIGFuZCBEcmF2aWRpYW4gd29yZHMuIEl0IGlzIGEgIGNvbGxlY3Rpb24gb2YgcHJheWVycyBvZmZlcmVkIHRvIEFnbmksICBJbmRyYSwgTWl0cmEsIFZhcnVuYSBhbmQgb3RoZXIgZ29kcyBieSAgdmFyaW91cyBmYW1pbGllcyBvZiBwb2V0cyBvciBzYWdlcy4gIO+CtyBTZXZlcmFsIHRyaWJhbCBvciBraW4tYmFzZWQgYXNzZW1ibGllcywgIHN1Y2ggYXMgdGhlIFNhYmhhLCB0aGUgU2FtaXRpLCB0aGUgIFZpZGF0aGEgYW5kIHRoZSBHYW5hLCBhcmUgbWVudGlvbmVkIGluICB0aGUgUmlnIFZlZGEuIFRoZXkgZXhlcmNpc2VkICBkZWxpYmVyYXRpdmUsIG1pbGl0YXJ5IGFuZCByZWxpZ2lvdXMgIGZ1bmN0aW9ucy4gRXZlbiB3b21lbiBhdHRlbmRlZCB0aGUgIFNhYmhhIGFuZCB0aGUgVmlkYXRoYSBpbiB0aGUgUmlnICBWZWRpYyB0aW1lcy4gVGhlIFNhYmhhIGFuZCB0aGUgU2FtaXRpICBtYXR0ZXJlZCBhIGdyZWF0IGRlYWwgaW4gdGhlIGVhcmx5IFZlZGljICB0aW1lcywgc28gbXVjaCBzbyB0aGF0IHRoZSBjaGllZnMgb3IgdGhlICBraW5ncyBzaG93ZWQgYW4gZWFnZXJuZXNzIHRvIHdpbiB0aGVpciAgc3VwcG9ydC4gIO+CtyBOYWRpdGFtYSwgYW5vdGhlciBuYW1lIG9mIHRoZSAgU2FyYXN2YXRpIFJpdmVyLCBpcyBtZW50aW9uZWQgaW4gdGhlICBSaWcgVmVkYS4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None   "
      }
    },
    {
      "index" : 12,
      "question" : "With reference to the ancient history of India, consider the following statements: 1. The Battle of Ten Kings was fought on river Parushni, and it established the supremacy of the Bharatas. 2. Tribal conflicts during the Rig Vedic period were mainly religious in nature, arising from disagreements over rituals and sacrifices to appease the gods. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxMg==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgQmhhcmF0YSBydWxpbmcgY2xhbiB3YXMgb3Bwb3NlZCBieSAgYSBob3N0IG9mIHRlbiBjaGllZnMsIGZpdmUgb2Ygd2hvbSB3ZXJlICB0aGUgaGVhZHMgb2YgdGhlIEFyeWFuIHRyaWJlcyBhbmQgdGhlICByZW1haW5pbmcgZml2ZSBvZiB0aGUgbm9uLUFyeWFuIHBlb3BsZS4gIFRoZSBiYXR0bGUgdGhhdCB0aGUgQmhhcmF0YXMgZm91Z2h0ICB3aXRoIHRoZSBob3N0IG9mIHRlbiBjaGllZnMgaXMga25vd24gYXMgIHRoZSBCYXR0bGUgb2YgVGVuIEtpbmdzLiBJdCB3YXMgZm91Z2h0IG9uICByaXZlciBQYXJ1c2huaSwgY290ZXJtaW5vdXMgd2l0aCByaXZlciAgUmF2aSwgYW5kIGl0IGdhdmUgdmljdG9yeSB0byB0aGUgU3VkYXMgIGFuZCBlc3RhYmxpc2hlZCB0aGUgc3VwcmVtYWN5IG9mIHRoZSAgQmhhcmF0YXMuICDvgrcgVHJpYmFsIGNvbmZsaWN0cyBkdXJpbmcgdGhlIFJpZyBWZWRpYyAgcGVyaW9kIHdlcmUgbWFpbmx5IG92ZXIgdGhlIGNvbnRyb2wgIG9mIGxhbmQgYW5kIHJlc291cmNlcy4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 13,
      "question" : "With reference to the Rig Vedic period, consider the following statements: 1. The Rig Vedic people were predominantly called the nomadic people. 2. 'Gavisthi', a term often mentioned, is associated with the sowing and harvesting practices. 3. The Rig Vedic people had very little knowledge about agriculture and were mainly dependent on hunting and gathering. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxMw==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgUmlnIFZlZGljIHBlb3BsZSBoYWQgYSBzdXBlcmlvciAga25vd2xlZGdlIG9mIGFncmljdWx0dXJlLiBUaGUgIHBsb3VnaHNoYXJlIGlzIG1lbnRpb25lZCBpbiB0aGUgZWFybGllc3QgIHBhcnQgb2YgdGhlIFJpZyBWZWRhLCB0aG91Z2ggc29tZSAgY29uc2lkZXIgaXQgdG8gYmUgYW4gaW50ZXJwb2xhdGlvbiwgYW5kICB3YXMgcG9zc2libHkgbWFkZSBvZiB3b29kLiBUaGV5IHdlcmUgIGFjcXVhaW50ZWQgd2l0aCBzb3dpbmcsIGhhcnZlc3RpbmcgYW5kICB0aHJlc2hpbmcsIGFuZCBrbmV3IGFib3V0IHRoZSBkaWZmZXJlbnQgIHNlYXNvbnMuIEFncmljdWx0dXJlIHdhcyBhbHNvIHdlbGwgIGtub3duIHRvIHRoZSBwcmUtQXJ5YW5zLCB3aG8gbGl2ZWQgaW4gIHRoZSBhcmVhIGFzc29jaWF0ZWQgd2l0aCB0aGUgVmVkaWMgIHBlb3BsZSwgYnV0IHdhcyBwZXJoYXBzIHVzZWQgcHJpbWFyaWx5ICB0byBwcm9kdWNlIGZvZGRlci4gICDvgrcgSG93ZXZlciwgdGhlcmUgYXJlIHNvIG1hbnkgIHJlZmVyZW5jZXMgdG8gdGhlIGNvdyBhbmQgdGhlIGJ1bGwgaW4gIHRoZSBSaWcgVmVkYSB0aGF0IHRoZSBSaWcgVmVkaWMgIHBlb3BsZSBjYW4gYmUgY2FsbGVkIHRoZSAgcHJlZG9taW5hbnRseSBwYXN0b3JhbCBwZW9wbGUuIE1vc3QgIG9mIHRoZWlyIHdhcnMgd2VyZSBmb3VnaHQgb3ZlciBjb3dzLiAgVGhlIHRlcm0gZm9yIHdhciBpbiB0aGUgUmlnIFZlZGEgaXMgIEdhdmlzaHRoaSwgb3Igc2VhcmNoIGZvciBjb3dzLCBhbmQgIGNvdyBzZWVtcyB0byBoYXZlIGJlZW4gdGhlIG1vc3QgIGltcG9ydGFudCBmb3JtIG9mIHdlYWx0aC4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to the Rig Vedic period, consider the following statements: 1. The King's post had become hereditary during the Rig Vedic period. 2. The Sabha, the Samiti and the Vidatha were the kin-based assemblies, which exercised deliberative, military and religious functions. 3. The King appointed an officer for administration of justice, after consultation with the priests. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxNA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgYWRtaW5pc3RyYXRpdmUgbWFjaGluZXJ5IG9mIHRoZSAgQXJ5YW5zIGluIHRoZSBSaWcgVmVkaWMgcGVyaW9kICBmdW5jdGlvbmVkIHdpdGggdGhlIHRyaWJhbCBjaGllZiwgZm9yIGhpcyAgc3VjY2Vzc2Z1bCBsZWFkZXJzaGlwIGluIHdhciwgYXQgdGhlICBjZW50cmUuIEhlIHdhcyBjYWxsZWQgYWJvdmUgUmFqYW4uIEl0ICBzZWVtcyB0aGF0IGluIHRoZSBSaWcgVmVkaWMgcGVyaW9kLCB0aGUgIEtpbmcncyBwb3N0IGhhZCBiZWNvbWUgaGVyZWRpdGFyeS4gICDvgrcgU2V2ZXJhbCB0cmliYWwgb3Iga2luLWJhc2VkIGFzc2VtYmxpZXMsICBzdWNoIGFzIHRoZSBTYWJoYSwgdGhlIFNhbWl0aSwgdGhlICBWaWRhdGhhIGFuZCB0aGUgR2FuYSBhcmUgbWVudGlvbmVkIGluICB0aGUgUmlnIFZlZGEuIFRoZXkgZXhlcmNpc2VkICBkZWxpYmVyYXRpdmUsIG1pbGl0YXJ5IGFuZCByZWxpZ2lvdXMgIGZ1bmN0aW9ucy4gICDvgrcgVGhlIFJpZyBWZWRhIGRvZXMgbm90IG1lbnRpb24gYW55ICBvZmZpY2VyIGZvciBhZG1pbmlzdHJhdGlvbiBvZiBqdXN0aWNlLiAgSXQgd2FzIG5vdCwgaG93ZXZlciwgYW4gaWRlYWwgc29jaWV0eSwgIGJ1dCBvbmUgaW4gd2hpY2ggdGhlcmUgd2VyZSBjYXNlcyBvZiAgdGhlZnQgYW5kIGJ1cmdsYXJ5LCBhbmQgdGhlIHBlb3BsZSBzdG9sZSAgY293cy4gU3BpZXMgd2VyZSBlbXBsb3llZCB0byBrZWVwIGFuICBleWUgb24gc3VjaCBhbnRpLXNvY2lhbCBhY3Rpdml0aWVzLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 15,
      "question" : "With reference to the Later Vedic period, consider the following statements: 1. In the later Vedic times, the Rig Vedic tribal assemblies lost importance and royal power increased at their cost. 2. Women were not permitted to sit in the assemblies. 3. The King's post remain hereditary during this period and there were no traces of election. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxNQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUcmFjZXMgb2YgdGhlIGVsZWN0aW9uIG9mIHRoZSBLaW5nICBhcHBlYXIgaW4gbGF0ZXIgVmVkaWMgdGV4dHMuIFRoZSAgaW5kaXZpZHVhbCBjb25zaWRlcmVkIHRvIGhhdmUgdGhlIGJlc3QgIGluIHBoeXNpY2FsIGFuZCBvdGhlciBhdHRyaWJ1dGVzIHdhcyAgZWxlY3RlZCB0aGUgUmFqYS4gIO+CtyBJbiB0aGUgbGF0ZXIgVmVkaWMgdGltZXMsIHRoZSBSaWcgVmVkaWMgIHRyaWJhbCBhc3NlbWJsaWVzIGxvc3QgdGhlaXIgaW1wb3J0YW5jZSAgYW5kIHJveWFsIHBvd2VyIGluY3JlYXNlZCBhdCB0aGVpciBjb3N0LiAgIO+CtyBUaGUgU2FiaGEgYW5kIHRoZSBTYW1pdGkgY29udGludWVkIHRvICBob2xkIHRoZWlyIGdyb3VuZCwgYnV0IHRoZWlyIGNoYXJhY3RlciAgY2hhbmdlZC4gVGhleSB3ZXJlIG5vdyBjb250cm9sbGVkIGJ5ICB0aGUgY2hpZWZzIGFuZCB0aGUgcmljaCBub2JsZXMsIGFuZCAgd29tZW4gd2VyZSBubyBsb25nZXIgcGVybWl0dGVkIHRvIHNpdCAgaW4gdGhlIFNhYmhhLCB3aGljaCB3YXMgbm93ICBkb21pbmF0ZWQgYnkgdGhlIHdhcnJpb3JzIGFuZCB0aGUgIEJyYWhtYW5hcy4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 16,
      "question" : "With reference to the Later Vedic period, consider the following statements: 1. During this period, the society came to be divided into four Varnas. 2. The Shudras were deprived of the sacred thread ceremony and the recitation of the Gayatri mantra. 3. The position of women improved during the Later Vedic period and they were allowed to recite the Gayatri Mantra. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxNg==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgbGF0ZXIgVmVkaWMgc29jaWV0eSBjYW1lIHRvIGJlICBkaXZpZGVkIGludG8gZm91ciBWYXJuYXMsIGNhbGxlZCB0aGUgIEJyYWhtYW5hLCBSYWphbnlhIG9yIEtzaGF0cml5YSwgIFZhaXNoeWEgYW5kIFNodWRyYS4gVGhlIGdyb3dpbmcgY3VsdCAgb2Ygc2FjcmlmaWNlcyBlbm9ybW91c2x5IGFkZGVkIHRvIHRoZSAgcG93ZXIgb2YgdGhlIEJyYWhtYW5hcy4gIO+CtyBBbGwgdGhlIHRocmVlIGhpZ2hlciBWYXJuYXMgc2hhcmVkIG9uZSAgY29tbW9uIGZlYXR1cmU6IFRoZXkgd2VyZSBlbnRpdGxlZCB0byAgVXBhbmF5YW5hLCBvciBpbnZlc3RpdHVyZSB3aXRoIHRoZSAgc2FjcmVkIHRocmVhZCBhY2NvcmRpbmcgdG8gdGhlIFZlZGljICBNYW50cmFzLiBVcGFuYXlhbmEgaGVyYWxkZWQgdGhlICBiZWdpbm5pbmcgb2YgZWR1Y2F0aW9uIGluIHRoZSBWZWRhcy4gICDvgrcgVGhlIGZvdXJ0aCBWYXJuYSAoU2h1ZHJhKSB3YXMgZGVwcml2ZWQgIG9mIHRoZSBzYWNyZWQgdGhyZWFkIGNlcmVtb255IGFuZCB0aGUgIHJlY2l0YXRpb24gb2YgdGhlIEdheWF0cmkgTWFudHJhLiBUaGUgIEdheWF0cmkgd2FzIGEgVmVkaWMgTWFudHJhIHRoYXQgY291bGQgIG5vdCBiZSByZWNpdGVkIGJ5IGEgU2h1ZHJhLCB0aGVyZWJ5ICBkZXByaXZpbmcgaGltIG9mIHRoZSBWZWRpYyBlZHVjYXRpb24uICAg74K3IFNpbWlsYXJseSwgd29tZW4gd2VyZSBhbHNvIGRlbmllZCAgYm90aCB0aGUgR2F5YXRyaSBhbmQgdGhlIFVwYW5heWFuYS4gIFRodXMsIHRoZSBpbXBvc2l0aW9uIG9mIGRpc2FiaWxpdGllcyAgb24gdGhlIFNodWRyYXMgYW5kIHdvbWVuIGJlZ2FuICB0b3dhcmRzIHRoZSBlbmQgb2YgdGhlIFZlZGljIHBlcmlvZC4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None   "
      }
    },
    {
      "index" : 17,
      "question" : "With reference to the ancient Indian period of the 6th century BCE, consider the following statements: 1. Mahapadma Nanda, from the Nanda dynasty, expanded the Magadha empire towards the north-western region of the Indian sub-continent. 2. The 6th century BCE is renowned for its ochre coloured pottery ware culture. 3. In this era, the republic of Vajji implemented a democratic structure that allowed both women and the \"Kammakaras\" to participate in the assemblies. 4. By the end of his rule, Mahapadma Nanda successfully subjugated all the Ganas/republics. How many of the above statements is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxNw==",
      "description" : "ICBFeHBsYW5hdGlvbjogIE1hZ2FkaGEgYmVjYW1lIHRoZSBtb3N0IGltcG9ydGFudCAgTWFoYWphbmFwYWRhIGluIGFib3V0IHR3byBodW5kcmVkIHllYXJzLiAgTWFueSByaXZlcnMsIHN1Y2ggYXMgdGhlIEdhbmdhIGFuZCB0aGUgIFNvbiwgZmxvd2VkIHRocm91Z2ggTWFnYWRoYS4gVGhpcyB3YXMgIGltcG9ydGFudCBmb3IgdHJhbnNwb3J0LCB3YXRlciBzdXBwbGllcyBhbmQgIG1ha2luZyB0aGUgbGFuZCBmZXJ0aWxlLiBQYXJ0cyBvZiBNYWdhZGhhICB3ZXJlIGZvcmVzdGVkLiBFbGVwaGFudHMsIHdoaWNoIGxpdmVkIGluIHRoZSAgZm9yZXN0cywgY291bGQgYmUgY2FwdHVyZWQgYW5kIHRyYWluZWQgZm9yICB0aGUgYXJteS4gTWFnYWRoYSBoYWQgdHdvIHZlcnkgcG93ZXJmdWwgIHJ1bGVycywgQmltYmlzYXJhIGFuZCBBamF0YXNhdHR1LCB3aG8gdXNlZCAgYWxsIHBvc3NpYmxlIG1lYW5zIHRvIGNvbnF1ZXIgb3RoZXIgIEphbmFwYWRhcy4gIE1haGFwYWRtYSBOYW5kYSB3YXMgYW5vdGhlciBpbXBvcnRhbnQgIHJ1bGVyLiBIZSBleHRlbmRlZCBoaXMgY29udHJvbCB1cCB0byB0aGUgIG5vcnRoLXdlc3QgcGFydCBvZiB0aGUgc3ViLWNvbnRpbmVudC4gIFJhamFncmloYSAodGhlIHByZXNlbnQtZGF5IFJhamdpcikgaW4gQmloYXIgIHdhcyB0aGUgY2FwaXRhbCBvZiBNYWdhZGhhIGZvciBzZXZlcmFsICB5ZWFycy4gTGF0ZXIsIHRoZSBjYXBpdGFsIHdhcyBzaGlmdGVkIHRvICBQYXRhbGlwdXRyYSAodGhlIHByZXNlbnQtZGF5IFBhdG5hKS4gICBWYWpqaTogV2hpbGUgTWFnYWRoYSBiZWNhbWUgYSBwb3dlcmZ1bCAga2luZ2RvbSwgVmFqamksIHdpdGggaXRzIGNhcGl0YWwgYXQgVmFpc2hhbGkgIChCaWhhciksIHdhcyB1bmRlciBhIGRpZmZlcmVudCBmb3JtIG9mICBnb3Zlcm5tZW50LCBrbm93biBhcyBHYW5hIG9yIFNhbmdoYSAgKFJlcHVibGljKS4gSW4gYSBHYW5hIG9yIGEgU2FuZ2hhIHRoZXJlICB3YXMgbm90IG9uZSwgYnV0IG1hbnkgcnVsZXJzLCBhbmQgZWFjaCAgb25lIHdhcyBrbm93biBhcyBhIFJhamEuIFRoZXkgbWV0IGluICBhc3NlbWJsaWVzIGFuZCBkZWNpZGVkIHdoYXQgaGFkIHRvIGJlICBkb25lIGFuZCBob3csIHRocm91Z2ggZGlzY3Vzc2lvbiBhbmQgIGRlYmF0ZS4gSG93ZXZlciwgd29tZW4sIERhc2FzIGFuZCAgS2FtbWFrYXJhcyBjb3VsZCBub3QgcGFydGljaXBhdGUgaW4gIHRoZXNlIGFzc2VtYmxpZXMuICAgVGhlIFJhamFzIG9mIHBvd2VyZnVsIGtpbmdkb21zIHRyaWVkIHRvICBjb25xdWVyIHRoZSBTYW5naGFzLiBOZXZlcnRoZWxlc3MsICB0aGVzZSBsYXN0ZWQgZm9yIGEgdmVyeSBsb25nIHRpbWUsIHRpbGwgIGFib3V0IDEsNTAwIHllYXJzIGFnbywgd2hlbiB0aGUgbGFzdCBvZiAgdGhlIEdhbmFzIG9yIFNhbmdoYXMgd2VyZSBjb25xdWVyZWQgYnkgIHRoZSBHdXB0YSBydWxlcnMuICBLYW1tYWthcmFzIHdlcmUgbGFuZGxlc3MgYWdyaWN1bHR1cmFsICBsYWJvdXJlcnMgd2hvIHdvcmtlZCBvbiBvdGhlcidzIGxhbmQuICBPY2hyZSBjb2xvdXJlZCBwb3R0ZXJ5IChPQ1ApIGN1bHR1cmUgaXMgIGEgQnJvbnplIEFnZSBjdWx0dXJlIChyb3VnaGx5IDIsNjAwIEJDRSAgdG8gMSwyMDAgQkNFKSBvZiB0aGUgSW5kby1HYW5nZXRpYyAgUGxhaW4sIGV4dGVuZGluZyBmcm9tIGVhc3Rlcm4gUHVuamFiIHRvICBub3J0aC1lYXN0ZXJuIFJhamFzdGhhbiBhbmQgd2VzdGVybiAgVXR0YXIgUHJhZGVzaC4gIFRoZSAncGFpbnRlZCBncmV5IHdhcmUnIChQV0cpIGN1bHR1cmUgaXMgIGFuIElyb24gQWdlIGN1bHR1cmUgb2YgdGhlIHdlc3Rlcm4gR2FuZ2V0aWMgIHBsYWluIGFuZCB0aGUgR2hhZ2dhci1IYWtyYSB2YWxsZXksIGxhc3RpbmcgIGZyb20gcm91Z2hseSAxLDIwMCBCQ0UgdG8gNjAwIEJDRSwgd2hpY2ggIHByb2JhYmx5IGNvcnJlc3BvbmRzIHRvIHRoZSBtaWRkbGUgYW5kIHRoZSAgbGF0ZSBWZWRpYyBwZXJpb2QsIGkuZS4sIHRoZSBLdXJ1LSBQYW5jaGFsYSBraW5nZG9tLCB0aGUgZmlyc3QgbGFyZ2Ugc3RhdGUgaW4gIFNvdXRoIEFzaWEgYWZ0ZXIgdGhlIGRlY2xpbmUgb2YgdGhlIEluZHVzICBWYWxsZXkgQ2l2aWxpemF0aW9uLiBUaGUgcGFpbnRlZCBncmV5IHdhcmUgIGN1bHR1cmFsIHBoYXNlIGlzIGZvbGxvd2VkIGJ5IHRoZSAnbm9ydGhlcm4gIGJsYWNrIHBvbGlzaGVkIHdhcmUnIChOQlBXKSBjdWx0dXJlLCB3aGljaCAgaXMgYXNzb2NpYXRlZCB3aXRoIHRoZSBNYWhhamFuYXBhZGEgYW5kICB0aGUgTWF1cnlhbiBwZXJpb2RzLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " Only three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 18,
      "question" : "'People perform a variety of rituals when they fall ill, when their children get married, when children are born, or when they go on a journey. These rituals are not useful. If instead, people observe other practices, this would be more fruitful, like treating all creatures with compassion.' The above statements, reflecting belief in humanity, are associated with which of the following ancient figures? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxOA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIEFzaG9rYSB3YXMgb25lIG9mIHRoZSBncmVhdGVzdCBydWxlcnMgIGtub3duIHRvIHRoZSBoaXN0b3J5LCBhbmQgb24gaGlzICBpbnN0cnVjdGlvbnMgaW5zY3JpcHRpb25zIHdlcmUgaW5zY3JpYmVkIG9uICBwaWxsYXJzLCBhcyB3ZWxsIGFzIG9uIHJvY2sgc3VyZmFjZXMuIFRoZSAgZW1waXJlIHRoYXQgQXNob2thIHJ1bGVkIHdhcyBmb3VuZGVkIGJ5ICBoaXMgZ3JhbmRmYXRoZXIsIENoYW5kcmFndXB0YSBNYXVyeWEsICBtb3JlIHRoYW4gMiwzMDAgeWVhcnMgYWdvLiAgQXNob2thJ3MgRGhhbW1hOiBJdCBkaWQgbm90IGludm9sdmUgdGhlICB3b3JzaGlwIG9mIGEgZ29kLCBvciB0aGUgcGVyZm9ybWFuY2Ugb2YgYSAgc2FjcmlmaWNlLiBIZSBmZWx0IHRoYXQganVzdCBhcyBhIGZhdGhlciB0cmllcyAgdG8gdGVhY2ggaGlzIGNoaWxkcmVuLCBoZSBoYWQgYSBkdXR5IHRvICBpbnN0cnVjdCBoaXMgc3ViamVjdHMuIEhlIHdhcyBhbHNvIGluc3BpcmVkICBieSB0aGUgdGVhY2hpbmdzIG9mIHRoZSBCdWRkaGEuIEhlICBhcHBvaW50ZWQgb2ZmaWNpYWxzLCBrbm93biBhcyB0aGUgRGhhbW1hICBNYWhhbWF0dGEsIHdobyB3ZW50IGZyb20gcGxhY2UgdG8gcGxhY2UgIHRlYWNoaW5nIHBlb3BsZSBhYm91dCBEaGFtbWEuIEFzaG9rYSAgYWxzbyBzZW50IG1lc3NlbmdlcnMgdG8gc3ByZWFkIGlkZWFzIGFib3V0ICBEaGFtbWEgdG8gb3RoZXIgbGFuZHMsIHN1Y2ggYXMgU3lyaWEsICBFZ3lwdCwgR3JlZWNlLCBhbmQgaGlzIHNvbiBNYWhlbmRyYSBhbmQgIGRhdWdodGVyIFNhbmdobWl0cmEgdG8gU3JpIExhbmthLiAgIEFzaG9rYSdzIG1lc3NhZ2UgdG8gaGlzIHN1YmplY3RzOiAnUGVvcGxlICBwZXJmb3JtIGEgdmFyaWV0eSBvZiByaXR1YWxzIHdoZW4gdGhleSBmYWxsICBpbGwsIHdoZW4gdGhlaXIgY2hpbGRyZW4gZ2V0IG1hcnJpZWQsIHdoZW4gIGNoaWxkcmVuIGFyZSBib3JuLCBvciB3aGVuIHRoZXkgZ28gb24gYSAgam91cm5leS4gVGhlc2Ugcml0dWFscyBhcmUgbm90IHVzZWZ1bC4gSWYgIGluc3RlYWQsIHBlb3BsZSBvYnNlcnZlIG90aGVyIHByYWN0aWNlcywgdGhpcyAgd291bGQgYmUgbW9yZSBmcnVpdGZ1bC4gV2hhdCBhcmUgdGhlc2UgIG90aGVyIHByYWN0aWNlcz8gVGhlc2UgYXJlOiBiZWluZyBnZW50bGUgIHdpdGggc2xhdmVzIGFuZCBzZXJ2YW50cy4gUmVzcGVjdGluZyBvbmUncyAgZWxkZXJzLiBUcmVhdGluZyBhbGwgY3JlYXR1cmVzIHdpdGggIGNvbXBhc3Npb24uIEdpdmluZyBnaWZ0cyB0byBicmFobWlucyBhbmQgIG1vbmtzLicgICdJdCBpcyBib3RoIHdyb25nIHRvIHByYWlzZSBvbmUncyBvd24gIHJlbGlnaW9uIG9yIGNyaXRpY2lzZSBhbm90aGVyJ3MuIEVhY2ggb25lICBzaG91bGQgcmVzcGVjdCB0aGUgb3RoZXIncyByZWxpZ2lvbi4gSWYgb25lICBwcmFpc2VzIG9uZSdzIG93biByZWxpZ2lvbiB3aGlsZSBjcml0aWNpc2luZyAgYW5vdGhlcidzLCBvbmUgaXMgYWN0dWFsbHkgZG9pbmcgZ3JlYXRlciAgaGFybSB0byBvbmUncyBvd24gcmVsaWdpb24uIFRoZXJlZm9yZSwgb25lICBzaG91bGQgdHJ5IHRvIHVuZGVyc3RhbmQgdGhlIG1haW4gaWRlYXMgb2YgIGFub3RoZXIncyByZWxpZ2lvbiwgYW5kIHJlc3BlY3QgaXQuJyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Rishabhadeva, the founder of Jainism ",
        "option2" : " Gautam Buddha, the founder of  Buddhism ",
        "option3" : " Mauryan Emperor Ashoka  ",
        "option4" : " Makkhali Gosala  "
      }
    },
    {
      "index" : 19,
      "question" : "With reference to the societal structure of the ancient India, consider the following statements:  1. 'Kadaisiyar' and 'Adimai' were the terms used for landless labourers and slaves.  2. The position of 'Bhojaka', the village headman, was passed down through generations, making it a hereditary role. 3. The 'Grihapatis' were prominent landowners who held the dual responsibilities of serving as judges and policemen. How many of the above statements is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwxOQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIEluIHRoZSBUYW1pbCByZWdpb24sIGxhcmdlIGxhbmRvd25lcnMgd2VyZSAga25vd24gYXMgVmVsbGFsYXIsIG9yZGluYXJ5IHBsb3VnaG1lbiAgd2VyZSBrbm93biBhcyBVemhhdmFyIGFuZCBsYW5kbGVzcyAgbGFib3VyZXJzLCBpbmNsdWRpbmcgc2xhdmVzLCB3ZXJlIGtub3duIGFzICBLYWRhaXNpeWFyIGFuZCBBZGltYWkuICBJbiB0aGUgbm9ydGhlcm4gcGFydCBvZiB0aGUgY291bnRyeSwgdGhlICB2aWxsYWdlIGhlYWRtYW4gd2FzIGtub3duIGFzIHRoZSAgR3JhbWEgQmhvamFrYS4gVXN1YWxseSwgbWVuIGZyb20gdGhlICBzYW1lIGZhbWlseSBoZWxkIHRoZSBwb3NpdGlvbiBmb3IgIGdlbmVyYXRpb25zLiBJbiBvdGhlciB3b3JkcywgdGhlIHBvc3Qgd2FzICBoZXJlZGl0YXJ5LiBUaGUgR3JhbWEgQmhvamFrYSB3YXMgb2Z0ZW4gIHRoZSBsYXJnZXN0IGxhbmRvd25lci4gR2VuZXJhbGx5LCBoZSBoYWQgIHNsYXZlcyBhbmQgaGlyZWQgd29ya2VycyB0byBjdWx0aXZhdGUgdGhlICBsYW5kLiBCZXNpZGVzLCBhcyBoZSB3YXMgcG93ZXJmdWwsIHRoZSAga2luZyBvZnRlbiB1c2VkIGhpbSB0byBjb2xsZWN0IHRheGVzICBmcm9tIHRoZSB2aWxsYWdlLiBIZSBhbHNvIGZ1bmN0aW9uZWQgYXMgYSAganVkZ2UsIGFuZCBzb21ldGltZXMgYXMgYSBwb2xpY2VtYW4uICBBcGFydCBmcm9tIHRoZSBHcmFtYSBCaG9qYWthLCB0aGVyZSAgd2VyZSBvdGhlciBpbmRlcGVuZGVudCBmYXJtZXJzLCBrbm93biAgYXMgR3JpaGFwYXRpcywgbW9zdCBvZiB3aG9tIHdlcmUgIHNtYWxsZXIgbGFuZG93bmVycy4gIFRoZXJlIHdlcmUgbWVuIGFuZCB3b21lbiwgc3VjaCBhcyB0aGUgIERhc2EgS2FybWFrYXJhLCB3aG8gZGlkIG5vdCBvd24gbGFuZCAgYW5kIGhhZCB0byBlYXJuIGEgbGl2aW5nIHdvcmtpbmcgb24gdGhlICBmaWVsZHMgb3duZWQgYnkgb3RoZXJzLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one  ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements: 1. The Prashasti provides information regarding the rulers of Aryavarta, the rulers of Dakshinapatha and the lineage of the Shakas in the north-west. 2. The Prashasti portrays that the patron king as a skilled warrior and a knowledgeable poet. The statements given above are sourced from which of the following 'Prashastis', belonging to the ancient Indian period? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwyMA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFNhbXVkcmFndXB0YSdzIFByYXNoYXN0aSwgaW5zY3JpYmVkIG9uICB0aGUgQXNob2thbiBwaWxsYXIgYXQgQWxsYWhhYmFkIC8gIFByYXlhZ3Jhai4gIEl0IHdhcyBjb21wb3NlZCBhcyBhIEthdnlhIGJ5ICBIYXJpc2hlbmEsIHdobyB3YXMgYSBwb2V0IGFuZCBhICBtaW5pc3RlciBhdCB0aGUgY291cnQgb2YgU2FtdWRyYWd1cHRhLiAgVGhpcyBpbnNjcmlwdGlvbiBpcyBvZiBhIHNwZWNpYWwga2luZCwga25vd24gIGFzIGEgUHJhc2hhc3RpLCBhIFNhbnNrcml0IHdvcmQsIG1lYW5pbmcgICdpbiBwcmFpc2Ugb2YnLiBUaGUgcG9ldCBwcmFpc2VkIHRoZSBraW5nIGluICBnbG93aW5nIHRlcm1zIC0gYXMgYSB3YXJyaW9yLCBhcyBhIGtpbmcgd2hvICB3b24gdmljdG9yaWVzIGluIGJhdHRsZSwgd2hvIHdhcyBsZWFybmVkLCAgYW5kIHRoZSBiZXN0IG9mIHBvZXRzLiBIZSBpcyBhbHNvIGRlc2NyaWJlZCAgYXMgZXF1YWwgdG8gdGhlIGdvZHMuICdTYW11ZHJhZ3VwdGEgdGhlICB3YXJyaW9yLCB3aG9zZSBib2R5IHdhcyBtb3N0IGNoYXJtaW5nLCAgYmVpbmcgY292ZXJlZCB3aXRoIHRoZSBwbGVudGVvdXMgYmVhdXR5IG9mICB0aGUgbWFya3Mgb2YgaHVuZHJlZHMgb2Ygc2NhcnMgY2F1c2VkIGJ5ICBiYXR0bGUtYXhlcywgYXJyb3dzLCBzcGlrZXMsIHNwZWFycywgYmFyYmVkICBkYXJ0cywgc3dvcmRzLCBpcm9uIGNsdWJzLCBqYXZlbGlucywgYmFyYmVkICBhcnJvd3MsIGxvbmcgYXJyb3dzLCBhbmQgbWFueSBvdGhlciAgd2VhcG9ucycuICAgSGFyaXNoZW5hLCBpbiB0aGUgUHJhc2hhc3RpLCBhbHNvIGRlc2NyaWJlcyAgZm91ciBkaWZmZXJlbnQga2luZHMgb2YgcnVsZXJzLCBhbmQgdGVsbHMgdXMgIGFib3V0IFNhbXVkcmFndXB0YSdzIHBvbGljaWVzIHRvd2FyZHMgIHRoZW06ICAxLiBUaGUgcnVsZXJzIG9mIEFyeWF2YXJ0YS4gVGhlcmUgd2VyZSAgbmluZSBydWxlcnMgd2hvIHdlcmUgdXByb290ZWQsIGFuZCAgdGhlaXIga2luZ2RvbXMgd2VyZSBtYWRlIGEgcGFydCBvZiAgU2FtdWRyYWd1cHRhJ3MgZW1waXJlLiAgMi4gVGhlIHJ1bGVycyBvZiBEYWtzaGluYXBhdGhhLiBUaGVyZSAgd2VyZSB0d2VsdmUgcnVsZXJzLCB3aG8gc3VycmVuZGVyZWQgdG8gIFNhbXVkcmFndXB0YSBhZnRlciBiZWluZyBkZWZlYXRlZCBhbmQgIGhlIHRoZW4gYWxsb3dlZCB0aGVtIHRvIHJ1bGUgYWdhaW4uICAgMy4gVGhlIG5laWdoYm91cmluZyBzdGF0ZXMsIGluY2x1ZGluZyAgQXNzYW0sIGNvYXN0YWwgQmVuZ2FsLCBOZXBhbCwgYW5kIGEgIG51bWJlciBvZiBHYW5hIFNhbmdoYXMgaW4gdGhlICBub3J0aC13ZXN0LiBUaGV5IGJyb3VnaHQgdHJpYnV0ZSwgIGZvbGxvd2VkIGhpcyBvcmRlcnMgYW5kIGF0dGVuZGVkIGhpcyAgY291cnQuICA0LiBUaGUgcnVsZXJzIG9mIHRoZSBvdXRseWluZyBhcmVhcywgIHBlcmhhcHMgdGhlIGRlc2NlbmRhbnRzIG9mIHRoZSAgS3VzaGFuYXMgYW5kIHRoZSBTaGFrYXMsIGFuZCB0aGUgIHJ1bGVyIG9mIFNyaSBMYW5rYSwgd2hvIHN1Ym1pdHRlZCB0byAgaGltIGFuZCBvZmZlcmVkIGRhdWdodGVycyBpbiBtYXJyaWFnZS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Prashasti by Ravikirti, Chalukyan  period. ",
        "option2" : "  Prashasti in the Junagadh inscription  of Rudradaman.  ",
        "option3" : "  Nashik Prashasti, Satavahana dynasty. ",
        "option4" : "  Prayaga Prashasti by Harishena, Gupta  period.  "
      }
    },
    {
      "index" : 21,
      "question" : "At which of the following locations, the Major Rock Edicts of Ashoka were found? 1. Shahbazgarhi 2. Maneshra 3. Siddapura 4. Rupnath 5. Maski How many of the above mentioned locations are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwyMQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGVyZSBhcmUgZm91cnRlZW4gTWFqb3IgUm9jayAgRWRpY3RzLCBzZXZlbiBQaWxsYXIgRWRpY3RzIGFuZCBzb21lICBNaW5vciBSb2NrIEluc2NyaXB0aW9ucywgd2hpY2ggZ2l2ZSAgdXMgdGhpcyBpbmZvcm1hdGlvbi4gICDvgrcgVGhlIE1ham9yIFJvY2sgRWRpY3RzIGFyZSBsb2NhdGVkIGF0ICBTaGFoYmF6Z2FyaGkgYW5kIE1hbmVzaHJhIG5lYXIgIFBlc2hhd2FyLCBLYWxzaSBuZWFyIERlaHJhIER1biwgIFNvcGFyYSBpbiBUaGFuYSBkaXN0cmljdCwgR2lybmFyIG5lYXIgIEp1bmFnYXJoIGluIEthdGhpYXdhciwgRGhhdWxpIG5lYXIgIEJodWJhbmVzaHdhciBhbmQgSmF1Z2FkYSBpbiBHYW5qYW0gIGRpc3RyaWN0IG9mIE9kaXNoYS4gICDvgrcgSW4gS2FybmF0YWthLCB0aGUgTWlub3IgUm9jayBFZGljdHMgIGFwcGVhciBhbW9uZyBvdGhlciBwbGFjZXMgYXQgIFNpZGRhcHVyYSwgSmF0aW5nYS1SYXJuZXNod2FyYSBhbmQgIEJyYWhtYWdpcmkuICAg74K3IE90aGVyIE1pbm9yIFJvY2sgRWRpY3RzIGFyZSBmb3VuZCBhdCAgUnVwbmF0aCBuZWFyIEphYmFscHVyIGluIE1hZGh5YSAgUHJhZGVzaCwgU2FoYXNyYW0gaW4gQmloYXIsIEJhaXJhdCAgbmVhciBKYWlwdXIgaW4gUmFqYXN0aGFuIGFuZCBNYXNraSBpbiAgS2FybmF0YWthLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only two ",
        "option2" : " Only three ",
        "option3" : " Only four ",
        "option4" : " None   "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to the land revenue system during the Mauryan Age, consider the following statements: 1. Samharta was the officer in charge for the assessment of land revenue. 2. Sannidhata was the chief custodian of the state treasury. 3. Tax was collected only in the form of kind. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHwyMg==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBlc3NlbnRpYWwgcmVzb3VyY2VzIG5lZWRlZCBmb3IgdGhlICBNYXVyeWFuIHN0YXRlIGNvdWxkIG9ubHkgYmUgZ290IGZyb20gbGFuZCAgcmV2ZW51ZS4gVGhlcmVmb3JlLCB0aGUgbGFuZCByZXZlbnVlICBjb2xsZWN0aW9uIGhhZCB0byBiZSBlZmZpY2llbnRseSBvcmdhbml6ZWQsIHNvICBhcyB0byBleHByb3ByaWF0ZSB0aGUgbWF4aW11bSBwb3NzaWJsZSAgc3VycGx1cyBmcm9tIHRoZSBwZW9wbGUuIEl0IGlzIGdlbmVyYWxseSAgc3RhdGVkIHRoYXQgdGhlIE1hdXJ5YW4gcnVsZSBjb25zdGl0dXRlcyBhICBsYW5kbWFyayBpbiB0aGUgaGlzdG9yeSBvZiB0aGUgaW1wcm92ZW1lbnQgIG9mIHRoZSBzeXN0ZW0gb2YgdGF4YXRpb24gaW4gYW5jaWVudCBJbmRpYS4gIFRoZSBNYXVyeWFzLCBpbiBmYWN0LCBhdHRhY2hlZCBncmVhdCAgaW1wb3J0YW5jZSB0byB0aGUgYXNzZXNzbWVudCBvZiBsYW5kICByZXZlbnVlIGFuZCB0aGUgaGlnaGVzdCBvZmZpY2VyIGluIGNoYXJnZSBvZiAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1. It is a compilation of poems sung by women in the ancient Indian society.  2. It is classified as part of the Khuddaka Nikaya, the collection of short books in the Sutta Pitaka. 3. Originally, the texts were orally composed and transmitted in Magadhi, but they were subsequently written in Pali. 4. It represents the earliest surviving text within Theravada Buddhism that portrays the spiritual experiences of women. The statements given above relate to which of the following texts reatises?  ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0NQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBUaGVyaWdhdGhhIGlzIHRyYW5zbGF0ZWQgYXMgdGhlICdWZXJzZXMgIG9mIHRoZSBFbGRlciBOdW5zJy4gSXQgaXMgYSBCdWRkaGlzdCB0ZXh0LCBhICBjb2xsZWN0aW9uIG9mIHNob3J0IHBvZW1zIG9mIGVhcmx5ICBlbmxpZ2h0ZW5lZCB3b21lbiB3aG8gd2VyZSBlbGRlciBudW5zLiAgVGhlIFRoZXJpZ2F0aGEgaXMgdGhlIGVhcmxpZXN0IGV4dGFudCB0ZXh0ICBkZXBpY3Rpbmcgd29tZW4ncyBzcGlyaXR1YWwgZXhwZXJpZW5jZXMgaW4gIFRoZXJhdmFkYSBCdWRkaGlzbS4gIEluIHRoZSBQYWxpIENhbm9uLCB0aGUgVGhlcmlnYXRoYSBpcyAgY2xhc3NpZmllZCBhcyBwYXJ0IG9mIHRoZSBLaHVkZGFrYSBOaWtheWEsICB0aGUgY29sbGVjdGlvbiBvZiBzaG9ydCBib29rcyBpbiB0aGUgU3V0dGEgIFBpdGFrYS4gSXQgaXMgdGhlIGNvbXBhbmlvbiB0ZXh0IHRvICB0aGUgVGhlcmFnYXRoYSwgdmVyc2VzIGF0dHJpYnV0ZWQgdG8gdGhlICBzZW5pb3IgbW9ua3MuICAgVGhlIHBvZW1zIGluIFRoZXJpZ2F0aGEgd2VyZSBjb21wb3NlZCAgb3JhbGx5IGluIHRoZSBNYWdhZGhpIGxhbmd1YWdlIGFuZCB3ZXJlICBwYXNzZWQgb24gb3JhbGx5IHVudGlsIGFib3V0IDgwIEJDRSwgd2hlbiAgdGhleSB3ZXJlIHdyaXR0ZW4gZG93biBpbiBQYWxpLiAgIFRoZXJpZ2F0aGEgaXMgYSB2ZXJ5IHNpZ25pZmljYW50IGRvY3VtZW50ICBpbiB0aGUgc3R1ZHkgb2YgZWFybHkgQnVkZGhpc20uIEl0IGNvbnRhaW5zICBwYXNzYWdlcyByZWFmZmlybWluZyB0aGUgdmlldyB0aGF0IHdvbWVuICBhcmUgdGhlIGVxdWFsIG9mIG1lbiBpbiB0ZXJtcyBvZiBzcGlyaXR1YWwgIGF0dGFpbm1lbnQsIGFzIHdlbGwgYXMgdmVyc2VzIHRoYXQgYWRkcmVzcyAgdGhlIGlzc3VlcyBvZiBwYXJ0aWN1bGFyIGludGVyZXN0IHRvIHdvbWVuICBpbiB0aGUgYW5jaWVudCBzb2NpZXR5LiAgU3VtYW5nYWxhLVZpbGFzaW5pOiBCdWRkaGFnaG9zaGEncyAgY29tbWVudGFyeSBvbiB0aGUgRGlnaGEgTmlrYXlhLiAgU3RyaWRoYXJtYXBhZGRoYXRpOiBTYW5za3JpdC1sYW5ndWFnZSAgdGV4dCB3cml0dGVuIGluIHRoZSBjb3VydCBvZiBUaGFuamF2dXIsIHRoZSAgTWFyYXRoYSBraW5nZG9tIG9mIHRoZSBwcmVzZW50LWRheSBUYW1pbCAgTmFkdS4gSXQgb3V0bGluZXMgdGhlIGR1dGllcyBvZiB3b21lbiBmcm9tICBhbiBvcnRob2RveCBIaW5kdSBwb2ludCBvZiB2aWV3LCBiYXNlZCBvbiAgc2V2ZXJhbCBTaHJ1dGksIFNtcml0aSBhbmQgUHVyYW5pYyB0ZXh0cy4gIERpdnlhdmFkYW5hOiBTYW5za3JpdCBhbnRob2xvZ3kgb2YgIEJ1ZGRoaXN0IEF2YWRhbmEgdGFsZXMuIEl0IG1heSBiZSBkYXRlZCB0byAgdGhlIDJuZCBjZW50dXJ5IENFLiBUeXBpY2FsbHksIHRoZSBzdG9yaWVzICBpbnZvbHZlIHRoZSBCdWRkaGEgZXhwbGFpbmluZyB0byBhIGdyb3VwIG9mICBkaXNjaXBsZXMgaG93IGEgcGFydGljdWxhciBpbmRpdmlkdWFsLCAgdGhyb3VnaCBhY3Rpb25zIGluIGEgcHJldmlvdXMgbGlmZSwgY2FtZSB0byAgaGF2ZSBhIHBhcnRpY3VsYXIga2FybWljIHJlc3VsdCBpbiB0aGUgIHByZXNlbnQuICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Sumangala-Vilasini ",
        "option2" : " Stridharmapaddhati ",
        "option3" : " Divyavadana ",
        "option4" : " Therigatha   "
      }
    },
    {
      "index" : 46,
      "question" : "With reference to the religious history of India, consider the following statements: 1. The Buddhist Chaitya situated at Kushinagar is associated with the 'Dharmachakrapravartana' stage of Gautama Buddha's life.  2. The Mauryan emperor Ashoka erected a pillar at Lumbini to mark the commencement of the Third Buddhist Council at the place.  3. The emergence of 'Stupas' during ancient times in India initiated the practice of idol worship within Buddhism. How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0Ng==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBEaGFybWFjYWtyYXByYXZhcnRhbmEgU3V0dGEgaXMgIGEgQnVkZGhpc3Qgc2NyaXB0dXJlIHRoYXQgaXMgY29uc2lkZXJlZCAgYnkgdGhlIEJ1ZGRoaXN0cyB0byBiZSBhIHJlY29yZCBvZiB0aGUgIEZpcnN0IFNlcm1vbiBnaXZlbiBieSBHYXV0YW1hIEJ1ZGRoYSwgIHRoZSBTZXJtb24gaW4gdGhlIERlZXIgUGFyayBhdCBTYXJuYXRoLiAgU2FybmF0aCBpcyB3aGVyZSwgY2lyY2EgNTI4IEJDRSwgYXQgMzUgIHllYXJzIG9mIGFnZSwgR2F1dGFtYSBCdWRkaGEgdGF1Z2h0IGhpcyAgRmlyc3QgU2VybW9uIGFmdGVyIGF0dGFpbmluZyBlbmxpZ2h0ZW5tZW50ICBhdCBCb2RoIEdheWEuICAgQWNjb3JkaW5nIHRvIHRoZSBNYWhhcGFyaW5pYmJhbmEgU3V0dGEsICB0aGUgQnVkZGhhIG1lbnRpb25lZCBTYXJuYXRoIGFzIG9uZSBvZiAgdGhlIGZvdXIgcGxhY2VzIG9mIHBpbGdyaW1hZ2UgaGlzIGRldm91dCAgZm9sbG93ZXJzIHNob3VsZCB2aXNpdCBhbmQgbG9vayB1cG9uICB3aXRoIGZlZWxpbmdzIG9mIHJldmVyZW5jZS4gVGhlIG90aGVyIHRocmVlICBzaXRlcyBhcmUgTHVtYmluaSAodGhlIGJpcnRocGxhY2Ugb2YgdGhlICBCdWRkaGEpOyBCb2RoIEdheWEgKHdoZXJlIHRoZSBCdWRkaGEgIGFjaGlldmVkIGVubGlnaHRlbm1lbnQpOyAgYW5kIEt1c2hpbmFnYXIgKHdoZXJlIHRoZSBCdWRkaGEgIGF0dGFpbmVkIFBhcmluaXJ2YW5hKS4gIEFib3V0IDIwMCB5ZWFycyBhZnRlciB0aGUgdGltZSBvZiB0aGUgIEJ1ZGRoYSwgQXNob2thIGVyZWN0ZWQgYSBwaWxsYXIgYXQgIEx1bWJpbmkgdG8gbWFyayB0aGUgZmFjdCB0aGF0IGhlIGhhZCAgdmlzaXRlZCB0aGUgcGxhY2UuIFRoZSBUaGlyZCBCdWRkaGlzdCAgQ291bmNpbCB3YXMgY29udmVuZWQgaW4gYWJvdXQgMjUwIEJDRSAgaW4gUGF0YWxpcHV0cmEsIHVuZGVyIHRoZSBwYXRyb25hZ2Ugb2YgIEVtcGVyb3IgQXNob2thLiBJdCB3YXMgcHJlc2lkZWQgb3ZlciBieSAgdGhlIGVsZGVyIG1vbmsgTW9nZ2FsaXB1dHRhIFRpc3NhLiBUaGUgIENvdW5jaWwgaXMgcmVjb2duaXplZCBhbmQga25vd24gdG8gYm90aCAgdGhlIFRoZXJhdmFkYSBhbmQgdGhlIE1haGF5YW5hIHNjaG9vbHMsICB0aG91Z2ggaXRzIGltcG9ydGFuY2UgaXMgY2VudHJhbCBvbmx5IHRvIHRoZSAgVGhlcmF2YWRhLiAgIFRoZSBCdWRkaGlzdCBTdHVwYXMgd2VyZSBvcmlnaW5hbGx5ICBidWlsdCB0byBob3VzZSB0aGUgZWFydGhseSByZW1haW5zIG9mIHRoZSAgaGlzdG9yaWNhbCBCdWRkaGEgYW5kIGhpcyBhc3NvY2lhdGVzLCBhbmQgIGFyZSBhbG1vc3QgaW52YXJpYWJseSBmb3VuZCBhdCB0aGUgc2l0ZXMgIHNhY3JlZCB0byBCdWRkaGlzbS4gICBUaGUgY29uY2VwdCBvZiBpZG9sIHdvcnNoaXAgaW4gQnVkZGhpc20gIGNhbWUgbXVjaCBsYXRlciB3aXRoIHRoZSBlc3RhYmxpc2htZW50IG9mICB0aGUgTWFoYXlhbmEgc2VjdCB3aXRoaW4gQnVkZGhpc20uICBNYWhheWFuYSBCdWRkaGlzbSBkZXZlbG9wZWQgaW4gYW5jaWVudCAgSW5kaWEgKGMuIDFzdCBjZW50dXJ5IEJDRSBvbndhcmRzKS4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one  ",
        "option2" : " Only two  ",
        "option3" : " All three  ",
        "option4" : " None   "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements with reference to the cultural history of India:  1. 'Yashti' and 'Harmika' are the terms associated with women mendicants in Jainism.  2. The inscriptions at several Stupas bear the evidence of donations made by the 'Bhikkhunis' to the construction of these structures.  3. The present elaborate structures at the Sanchi Stupa were commissioned during the reign of the Mauryan emperor Ashoka.  How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0Nw==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBpbnNjcmlwdGlvbnMgZm91bmQgb24gdGhlIHJhaWxpbmdzIGFuZCAgcGlsbGFycyBvZiB0aGUgU3R1cGFzIHJlY29yZCBkb25hdGlvbnMgbWFkZSAgZm9yIGJ1aWxkaW5nIGFuZCBkZWNvcmF0aW5nIHRoZW0uIFNvbWUgIGRvbmF0aW9ucyB3ZXJlIG1hZGUgYnkgdGhlIGtpbmdzLCBzdWNoIGFzICB0aGUgU2F0YXZhaGFuYXMsIHdoaWxlIG90aGVycyB3ZXJlIG1hZGUgIGJ5IHRoZSBndWlsZHMsIHN1Y2ggYXMgdGhhdCBvZiB0aGUgaXZvcnkgIHdvcmtlcnMgd2hvIGZpbmFuY2VkIHBhcnQgb2Ygb25lIG9mIHRoZSAgZ2F0ZXdheXMgYXQgU2FuY2hpLiBIdW5kcmVkcyBvZiBkb25hdGlvbnMgIHdlcmUgbWFkZSBieSB3b21lbiBhbmQgbWVuIHdobyAgbWVudGlvbiB0aGVpciBuYW1lcywgc29tZXRpbWVzIGFkZGluZyAgdGhlIG5hbWUgb2YgdGhlIHBsYWNlIGZyb20gd2hlcmUgdGhleSAgY2FtZSwgYXMgd2VsbCBhcyB0aGVpciBvY2N1cGF0aW9ucyBhbmQgIG5hbWVzIG9mIHRoZWlyIHJlbGF0aXZlcy4gVGhlIEJoaWtraHVzIGFuZCAgdGhlIEJoaWtraHVuaXMgYWxzbyBjb250cmlidXRlZCB0b3dhcmRzICBidWlsZGluZyB0aGVzZSBtb251bWVudHMuICAgVGhlIFN0dXBhIG9yaWdpbmF0ZWQgYXMgYSBzaW1wbGUgc2VtaS0gY2lyY3VsYXIgbW91bmQgb2YgZWFydGgsIGxhdGVyIGNhbGxlZCBBbmRhLiAgR3JhZHVhbGx5LCBpdCBldm9sdmVkIGludG8gYSBtb3JlIGNvbXBsZXggIHN0cnVjdHVyZSwgYmFsYW5jaW5nIHJvdW5kIGFuZCBzcXVhcmUgIHNoYXBlcy4gQWJvdmUgdGhlIEFuZGEgd2FzIHRoZSAgSGFybWlrYSwgYSBiYWxjb255IGxpa2Ugc3RydWN0dXJlIHRoYXQgIHJlcHJlc2VudGVkIHRoZSBhYm9kZSBvZiB0aGUgZ29kcy4gIEFyaXNpbmcgZnJvbSB0aGUgSGFybWlrYSB3YXMgYSBtYXN0ICBjYWxsZWQgdGhlIFlhc2h0aSwgb2Z0ZW4gc3VybW91bnRlZCBieSBhICBDaGhhdHJpIG9yIGFuIHVtYnJlbGxhLiBBcm91bmQgdGhlICBtb3VuZCB3YXMgYSByYWlsaW5nLCBzZXBhcmF0aW5nIHRoZSBzYWNyZWQgIHNwYWNlIGZyb20gdGhlIHNlY3VsYXIgd29ybGQuICBUaGUgZWFybHkgU3R1cGFzIGF0IFNhbmNoaSBhbmQgQmhhcmh1dCAgd2VyZSBwbGFpbiwgZXhjZXB0IGZvciB0aGUgc3RvbmUgcmFpbGluZ3MsICB3aGljaCByZXNlbWJsZWQgYSBiYW1ib28gb3Igd29vZGVuICBmZW5jZSwgYW5kIHRoZSBnYXRld2F5cywgd2hpY2ggd2VyZSByaWNobHkgIGNhcnZlZCBhbmQgaW5zdGFsbGVkIGF0IHRoZSBmb3VyIGNhcmRpbmFsICBwb2ludHMuICAgVGhlIG1vbnVtZW50cyBhdCBTYW5jaGkgdG9kYXkgY29tcHJpc2UgIGEgc2VyaWVzIG9mIEJ1ZGRoaXN0IG1vbnVtZW50cyBzdGFydGluZyAgZnJvbSB0aGUgTWF1cnlhbiBFbXBpcmUgcGVyaW9kICgzcmQgIGNlbnR1cnkgQkNFKSwgY29udGludWluZyB3aXRoIHRoZSBHdXB0YSAgRW1waXJlIHBlcmlvZCAoNXRoIGNlbnR1cnkgQ0UpLCBhbmQgZW5kaW5nICBhcm91bmQgdGhlIDEydGggY2VudHVyeSBDRS4gVGhlIG9sZGVzdCwgIGFuZCBhbHNvIHRoZSBsYXJnZXN0IG1vbnVtZW50LCBpcyB0aGUgIEdyZWF0IFN0dXBhLCBhbHNvIGNhbGxlZCBTdHVwYSBOby4gMSwgIGluaXRpYWxseSBidWlsdCB1bmRlciB0aGUgTWF1cnlhbnMsIGFuZCAgYWRvcm5lZCB3aXRoIG9uZSBvZiB0aGUgUGlsbGFycyBvZiBBc2hva2EuICBEdXJpbmcgdGhlIGZvbGxvd2luZyBjZW50dXJpZXMsIGVzcGVjaWFsbHkgIHVuZGVyIHRoZSBTaHVuZ2FzIGFuZCB0aGUgU2F0YXZhaGFuYXMsICB0aGUgR3JlYXQgU3R1cGEgd2FzIGVubGFyZ2VkIGFuZCAgZGVjb3JhdGVkIHdpdGggZ2F0ZXMgYW5kIHJhaWxpbmdzLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two  ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements:  1. Walter Elliot led the excavation at the Sanchi Stupa, hence the sculptures found here were named 'Elliot Marbles'.  2. In the Buddhist text Ashokavadana, the foundation of Mahachatiya at the Amaravati Stupa has been attributed to Ashoka. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0OA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIEluIDE4NTQsIFdhbHRlciBFbGxpb3QsIHRoZSBDb21taXNzaW9uZXIgIG9mIEd1bnR1ciAoQW5kaHJhIFByYWRlc2gpLCB2aXNpdGVkIHRoZSAgQW1hcmF2YXRpIFN0dXBhIHNpdGUgYW5kIGNvbGxlY3RlZCAgc2V2ZXJhbCBzY3VscHR1cmUgcGFuZWxzLCBhbmQgdG9vayB0aGVtICBhd2F5IHRvIE1hZHJhcy4gKFRoZXNlIGNhbWUgdG8gYmUgIGNhbGxlZCB0aGUgRWxsaW90IE1hcmJsZXMgYWZ0ZXIgaGltKS4gSGUgIGFsc28gZGlzY292ZXJlZCB0aGUgcmVtYWlucyBvZiB0aGUgd2VzdGVybiAgZ2F0ZXdheSBhbmQgY2FtZSB0byB0aGUgY29uY2x1c2lvbiB0aGF0ICB0aGUgc3RydWN0dXJlIGF0IEFtYXJhdmF0aSB3YXMgb25lIG9mIHRoZSAgbGFyZ2VzdCBhbmQgbW9zdCBtYWduaWZpY2VudCBCdWRkaGlzdCAgc3R1cGFzIGV2ZXIgYnVpbHQuICBUaGUgTWFoYWNoYWl0eWEgYXQgQW1hcmF2YXRpIHdhcyAgcG9zc2libHkgZm91bmRlZCBpbiB0aGUgdGhpcmQgY2VudHVyeSAgQkNFIGluIHRoZSB0aW1lIG9mIEFzaG9rYSwgYnV0IHRoZXJlIGlzICBubyBkZWNpc2l2ZSBldmlkZW5jZSBmb3IgdGhlIGRhdGUgb2YgIGZvdW5kYXRpb24uICAgVGhlIGVhcmxpZXN0IGluc2NyaXB0aW9uIGZyb20gdGhlIHNpdGUgIGJlbG9uZ3MgdG8gdGhlIGVhcmx5IGNlbnR1cmllcyBCQ0UsIGJ1dCAgaXQgY2Fubm90IGJlIGFzc2lnbmVkIHRvIEFzaG9rYSB3aXRoICBjZXJ0YWludHkuIFRoZSBlYXJsaWVzdCBwaGFzZSBmcm9tIHdoaWNoICB3ZSBoYXZlIGFyY2hpdGVjdHVyYWwgb3Igc2N1bHB0ZWQgIHJlbWFpbnMgc2VlbXMgdG8gYmUgcG9zdC1NYXVyeWFuLCBmcm9tICB0aGUgMm5kIGNlbnR1cnkgQkNFLiAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2    "
      }
    },
    {
      "index" : 49,
      "question" : "With reference to the religious and cultural history of India, consider the following statements: 1. The sculptures at the Sanchi Stupa depict a scene from the 'Vessantara Jataka', where a prince donates everything and embraces the life of an ascetic. 2. The symbol of 'Stupa' in Buddhism is associated with the 'Mahaparinibbana' of Gautama Buddha.  3. The deliverance of the first sermon by Buddha is depicted with the symbol of the 'Wheel' in Buddhism.  How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw0OQ==",
      "description" : "ICBFeHBsYW5hdGlvbjogIEEgc2N1bHB0dXJlIGF0IFNhbmNoaSBkZXBpY3RzIGEgc2NlbmUgZnJvbSAgdGhlIFZlc3NhbnRhcmEgSmF0YWthLiBUaGlzIGlzIGEgc3RvcnkgIGFib3V0IGEgZ2VuZXJvdXMgcHJpbmNlIHdobyBnYXZlIGF3YXkgIGV2ZXJ5dGhpbmcgdG8gYSBCcmFobWFuYSBhbmQgd2VudCB0byBsaXZlICBpbiB0aGUgZm9yZXN0IHdpdGggaGlzIHdpZmUgYW5kIGNoaWxkcmVuLiAgVGhlIGFydCBoaXN0b3JpYW5zIGhhZCB0byBhY3F1aXJlIGZhbWlsaWFyaXR5ICB3aXRoIHRoZSBoYWdpb2dyYXBoaWVzIG9mIHRoZSBCdWRkaGEgaW4gIG9yZGVyIHRvIHVuZGVyc3RhbmQgdGhlIEJ1ZGRoaXN0ICBzY3VscHR1cmUuIEFjY29yZGluZyB0byB0aGUgaGFnaW9ncmFwaGllcywgIHRoZSBCdWRkaGEgYXR0YWluZWQgZW5saWdodGVubWVudCB3aGlsZSAgbWVkaXRhdGluZyB1bmRlciBhIHRyZWUuIE1hbnkgZWFybHkgIHNjdWxwdG9ycyBkaWQgbm90IHNob3cgdGhlIEJ1ZGRoYSBpbiAgaHVtYW4gZm9ybSAtIGluc3RlYWQsIHRoZXkgc2hvd2VkIGhpcyAgcHJlc2VuY2UgdGhyb3VnaCBzeW1ib2xzLiBUaGUgZW1wdHkgc2VhdCAgd2FzIG1lYW50IHRvIGluZGljYXRlIHRoZSBtZWRpdGF0aW9uIG9mIHRoZSAgQnVkZGhhLCBhbmQgdGhlIFN0dXBhIHdhcyBtZWFudCB0byAgcmVwcmVzZW50IHRoZSBNYWhhcGFyaW5pYmJhbmEuIEFub3RoZXIgIGZyZXF1ZW50bHkgdXNlZCBzeW1ib2wgd2FzIHRoZSAnd2hlZWwnLCAgd2hpY2ggc3Rvb2QgZm9yIHRoZSBmaXJzdCBzZXJtb24gb2YgdGhlICBCdWRkaGEsIGRlbGl2ZXJlZCBhdCBTYXJuYXRoLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements about the sculptures found at Sanchi: 1. The representation of Shalabhanjika can be found in certain sculptures. 2. The Shalabhanjika motif is directly associated with the Buddhist beliefs and ideas.  3. The Shalabhanjika motif is representing Maya, the mother of Gautama Buddha, who is surrounded by lotuses and elephants.  How many of the above statements is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbHw1MA==",
      "description" : "ICBFeHBsYW5hdGlvbjogIFNvbWUgc2N1bHB0dXJlcyBhdCBTYW5jaGkgd2VyZSBub3QgIGRpcmVjdGx5IGluc3BpcmVkIGJ5IHRoZSBCdWRkaGlzdCBpZGVhcy4gIFRoZXNlIGluY2x1ZGUgYmVhdXRpZnVsIHdvbWVuIHN3aW5naW5nICBmcm9tIHRoZSBlZGdlIG9mIHRoZSBnYXRld2F5LCBob2xkaW5nIG9udG8gIGEgdHJlZS4gSW5pdGlhbGx5LCB0aGUgc2Nob2xhcnMgd2VyZSBhIGJpdCAgaW50cmlndWVkIGFib3V0IHRoaXMgaW1hZ2UsIHdoaWNoIHNlZW1lZCAgdG8gaGF2ZSBsaXR0bGUgdG8gZG8gd2l0aCByZW51bmNpYXRpb24uICBIb3dldmVyLCBhZnRlciBleGFtaW5pbmcgb3RoZXIgbGl0ZXJhcnkgIHRyYWRpdGlvbnMsIHRoZXkgcmVhbGl6ZWQgdGhhdCBpdCBjb3VsZCBiZSAgYSByZXByZXNlbnRhdGlvbiBvZiB3aGF0IGlzIGRlc2NyaWJlZCBpbiAgU2Fuc2tyaXQgYXMgYSBTaGFsYWJoYW5qaWthLiBBY2NvcmRpbmcgdG8gIGEgcG9wdWxhciBiZWxpZWYsIHRoaXMgd2FzIGEgd29tYW4gd2hvc2UgIHRvdWNoIGNhdXNlZCB0aGUgdHJlZXMgdG8gZmxvd2VyIGFuZCBiZWFyICBmcnVpdC4gSXQgaXMgbGlrZWx5IHRoYXQgdGhpcyB3YXMgcmVnYXJkZWQgYXMgIGFuIGF1c3BpY2lvdXMgc3ltYm9sIGFuZCBpbnRlZ3JhdGVkIGludG8gIHRoZSBkZWNvcmF0aW9uIG9mIHRoZSBTdHVwYS4gVGhlICBTaGFsYWJoYW5qaWthIG1vdGlmIHN1Z2dlc3RzIHRoYXQgbWFueSAgcGVvcGxlLCB3aG8gdHVybmVkIHRvIEJ1ZGRoaXNtLCBlbnJpY2hlZCAgaXQgd2l0aCB0aGVpciBvd24gcHJlLUJ1ZGRoaXN0IGFuZCBldmVuICBub24tQnVkZGhpc3QgYmVsaWVmcywgcHJhY3RpY2VzIGFuZCBpZGVhcy4gICBBbm90aGVyIG1vdGlmIGlzIHRoYXQgb2YgYSB3b21hbiAgc3Vycm91bmRlZCBieSBsb3R1c2VzIGFuZCBlbGVwaGFudHMsICB3aGljaCBzZWVtIHRvIGJlIHNwcmlua2xpbmcgd2F0ZXIgb24gIGhlciBhcyBpZiBwZXJmb3JtaW5nIGFuIEFiaGlzaGVrYSBvciAgY29uc2VjcmF0aW9uLiBXaGlsZSBzb21lIGhpc3RvcmlhbnMgIGlkZW50aWZ5IHRoZSBmaWd1cmUgYXMgTWF5YSwgdGhlIG1vdGhlciAgb2YgdGhlIEJ1ZGRoYSwgb3RoZXJzIGlkZW50aWZ5IGhlciB3aXRoIGEgIHBvcHVsYXIgZ29kZGVzcywgR2FqYWxha3NobWkgLSBsaXRlcmFsbHksICB0aGUgZ29kZGVzcyBvZiBnb29kIGZvcnR1bmUgLSB3aG8gaXMgIGFzc29jaWF0ZWQgd2l0aCBlbGVwaGFudHMuIEl0IGlzIGFsc28gIHBvc3NpYmxlIHRoYXQgdGhlIGRldm90ZWVzIHdobyBzYXcgIHRoZXNlIHNjdWxwdHVyZXMgaWRlbnRpZmllZCB0aGUgZmlndXJlICB3aXRoIGJvdGggTWF5YSBhbmQgR2FqYWxha3NobWkuICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxBbmNpZW50IEluZGlhfGFsbA==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Ancient India",
      "questionOptions" : {
        "option1" : " Only one ",
        "option2" : " Only two ",
        "option3" : " All three ",
        "option4" : " None  "
      }
    }
  ],
  "subject" : "Ancient India",
  "topic" : "all",
  "year" : "2024"
}
