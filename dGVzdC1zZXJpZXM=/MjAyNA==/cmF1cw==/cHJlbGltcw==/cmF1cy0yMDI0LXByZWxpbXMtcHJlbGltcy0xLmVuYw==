{
  "testId" : "raus-2024-prelims-prelims-1",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2024/raus/prelims/raus-2024-prelims-prelims-1.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to Subhash Chandra Bose, consider the following statements: 1. The newspaper 'Swaraj' was started by Subhash Chandra Bose. 2. Jawaharlal Nehru constituted a National Planning Committee under the chairmanship of Subhash Chandra Bose.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE=",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBTdWJoYXNoIENoYW5kcmEgQm9zZSB3YXMgb25lIG9mIHRoZSAgbW9zdCBjZWxlYnJhdGVkIGZyZWVkb20gZmlnaHRlcnMgYW5kICBjaGFyaXNtYXRpYyBpbmZsdWVuY2VycyBvZiB0aGUgeW91dGggb2YgIEluZGlhLiAg74K3IEluIDE5MjEsIEJvc2Ugd29ya2VkIHVuZGVyICBDaGl0dGFyYW5qYW4gRGFzLCBhIHBvd2VyZnVsIHBvbGl0aWNpYW4gIGluIEJlbmdhbC4gSGUgd29ya2VkIGFzIHRoZSBlZGl0b3IgZm9yICBEYXMncyBuZXdzcGFwZXIsIGZvcndhcmQsIGFuZCBsYXRlciAgc3RhcnRlZCBoaXMgbmV3c3BhcGVyLCBTd2FyYWouICDvgrcgSGUgam9pbmVkIHRoZSBJbmRpYW4gTmF0aW9uYWwgQ29uZ3Jlc3MgIGluIDE5MjcgYW5kIHN1cHBvcnRlZCB0aGUgaWRlYSBvZiAgY29tcGxldGUgaW5kZXBlbmRlbmNlIChQdXJuYSBTd2FyYWopLiAgV2l0aCBoaXMgc3VwcG9ydCwgSmF3YWhhcmxhbCBOZWhydSAgcGFzc2VkIHRoZSByZXNvbHV0aW9uIG9mIFB1cm5hIFN3YXJhaiAgaW4gMTkyOS4gIO+CtyBIZSB3YXMgZWxlY3RlZCBhcyB0aGUgQ29uZ3Jlc3MgIFByZXNpZGVudCBpbiAxOTM4LCB3aGVuIHRoZSBhbm51YWwgIHNlc3Npb24gd2FzIGNvbnZlbmVkIGF0IEhhcmlwdXIgaW4gIEJlbmdhbC4gICDvgrcgSW4gMTkzOCwgdGhlIFByZXNpZGVudCBvZiB0aGUgSW5kaWFuICBOYXRpb25hbCBDb25ncmVzcywgU3ViaGFzaCBDaGFuZHJhICBCb3NlLCBjb25zdGl0dXRlZCBhIE5hdGlvbmFsIFBsYW5uaW5nICBDb21taXR0ZWUgdW5kZXIgdGhlIGNoYWlybWFuc2hpcCAgb2YgSmF3YWhhcmxhbCBOZWhydS4gIO+CtyBIZSBzZXQgdXAgdGhlIENvbW1pdHRlZSB0byBlbnN1cmUgIGVxdWFsIGRpc3RyaWJ1dGlvbiBvZiB3ZWFsdGggYW1vbmcgdGhlICBkaXZlcnNlIHNlY3Rpb25zLiAg74K3IEhlIHJlc2lnbmVkIGluIDE5MzkgZHVlIHRvIGRpZmZlcmVuY2VzICB3aXRoIE1haGF0bWEgR2FuZGhpIGFuZCBzZXQgdXAgdGhlICBBbGwgSW5kaWEgRm9yd2FyZCBCbG9jLiAg74K3IEluIDE5NDIsIGhlIGVhcm5lZCB0aGUgdGl0bGUgJ05ldGFqaScsIGluICBHZXJtYW55IGZyb20gdGhlIEluZGlhbiBzb2xkaWVycyBvZiB0aGUgIEF6YWQgSGluZCBGYXVqLiAg74K3IEhlIGlzIGFsc28gYWNjcmVkaXRlZCB0byBiZSB0aGUgZmlyc3QgbWFuICB0byBjYWxsIE1haGF0bWEgR2FuZGhpICdGYXRoZXIgb2YgdGhlICBOYXRpb24nLCBpbiBoaXMgYWRkcmVzcyBmcm9tIFNpbmdhcG9yZS4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 2,
      "question" : "With reference to the Indian National Army (INA), which of the following statements are correct? 1. It was formed with the Indians in the South-east Asian countries. 2. Rash Behari Bose was entrusted with the responsibility of raising the Army. 3. Colonel Shah Nawaz, Major G.S. Dhillon and Captain Prem Sehgal were the leaders of the INA. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDI=",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBXaGVuIE5ldGFqaSBTdWJoYXNoIENoYW5kcmEgQm9zZSAgd2FzIGluIEdlcm1hbnksIFJhc2ggQmVoYXJpIEJvc2Ugd2FzICBidXN5IG9yZ2FuaXppbmcgdGhlIEluZGlhbiAgSW5kZXBlbmRlbmNlIExlYWd1ZSBpbiBKYXBhbi4gRm9yIHRoaXMgIHB1cnBvc2UsIGhlIGNvbnZlbmVkIHR3byBjb25mZXJlbmNlcyAgaW4gMTk0Mjogb25lIGluIFRva3lvIGFuZCB0aGUgc2Vjb25kIGluICBCYW5na29rLiBUaGUgcmV2b2x1dGlvbmFyaWVzLCB3aG8gaGFkICBhc3NlbWJsZWQgaW4gdGhlIGNvbmZlcmVuY2VzLCB3YW50ZWQgIHRvIGZvcm0gYW4gSW5kaWFuIE5hdGlvbmFsIEFybXkgKElOQSkgIChBemFkIEhpbmQgRmF1aikgZm9yIHRoZSBsaWJlcmF0aW9uIG9mICBJbmRpYSBmcm9tIHRoZSBCcml0aXNoIHJ1bGUuICDvgrcgVGhlIEFybXkgd2FzIGZvcm1lZCB3aXRoIHRoZSBJbmRpYW5zICBpbiB0aGUgU291dGgtZWFzdCBBc2lhbiBjb3VudHJpZXMgYW5kICB0aGUgSW5kaWFuIHNvbGRpZXJzIG9mIHRoZSBCcml0aXNoIEFybXkgIGNhcHR1cmVkIGJ5IHRoZSBKYXBhbmVzZS4gQ2FwdGFpbiAgTW9oYW4gU2luZ2ggd2FzIGVudHJ1c3RlZCB3aXRoIHRoZSAgcmVzcG9uc2liaWxpdHkgb2YgcmFpc2luZyB0aGUgQXJteSBhbmQgIFJhc2ggQmVoYXJpIEJvc2Ugd2FzIG1hZGUgdGhlICBQcmVzaWRlbnQgb2YgdGhlIENvdW5jaWwgb2YgQWN0aW9uLiAg74K3IEFmdGVyIHRoaXMsIFJhc2ggQmVoYXJpIGludml0ZWQgU3ViaGFzaCAgQm9zZSB0byBhY2NlcHQgdGhlIGxlYWRlcnNoaXAgb2YgdGhlIElOQSAgaW4gMTk0My4gQWZ0ZXIgdGFraW5nIG92ZXIgdGhlIGNvbW1hbmQgIG9mIHRoZSBJTkEsIGhlIGdhdmUgaGlzIGZhbW91cyBiYXR0bGUgIHNsb2dhbiwgJ0RlbGhpIENoYWxvJyAob24gdG8gRGVsaGkpLiAg74K3IFRoZSBJTkEgc29sZGllcnMgd2VyZSB0cmllZCBhdCB0aGUgUmVkICBGb3J0LCBmb3IgdmFyaW91cyBjaGFyZ2VzLCBsaWtlIHRyZWFzb24sICBhdHJvY2l0aWVzLCBhYmV0bWVudCB0byBtdXJkZXIgYW5kICBtdXJkZXIuIEZvciB0aGlzLCB0aGVzZSB0cmlhbHMgd2VyZSBhbHNvICBjYWxsZWQgdGhlIFJlZCBGb3J0IFRyaWFscy4gSW5mbHVlbnRpYWwgIElOQSBsZWFkZXJzLCBsaWtlIENvbG9uZWwgU2hhaCBOYXdheiwgIE1ham9yIEcuUy4gRGhpbGxvbiBhbmQgQ2FwdGFpbiBQcmVtICBTZWhnYWwgd2VyZSBpbml0aWFsbHkgY29udmljdGVkLCBidXQgbGF0ZXIgIHJlbGVhc2VkLCB0aHVzIG1ha2luZyBpdCBhIGNsZWFyIHZpY3RvcnkgIGZvciB0aGVtLiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 3,
      "question" : "With reference to Purana Qila, consider the following statements: 1. Purana Qila is made up of grey sandstone. 2. It was built by the Mughal emperor Humayun, as a part of his new city of Din Panah. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDM=",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBQdXJhbmEgUWlsYSBpcyBvbmUgb2YgdGhlIGF0dHJhY3Rpb25zIG9mICB0aGUgRzIwIG1lZXRpbmcgYW5kIGl0cyB2aXNpdG9ycy4gIO+CtyBIdW1heXVuIHN0YXJ0ZWQgYnVpbGRpbmcgdGhlIFB1cmFuYSAgUWlsYSBpbiAxNTMzIENFLCBhcyBhIHBhcnQgb2YgaGlzIG5ldyAgZm9ydGlmaWVkIGNpdHksIG5hbWVkIERpbiBQYW5haCwgb3IgdGhlICAnU2FuY3R1YXJ5IG9mIEZhaXRoJy4gQnkgMTUzNCBDRSwgdGhlICB3YWxscywgYmFzdGlvbnMsIHJhbXBhcnRzIGFuZCBnYXRlcyBvZiAgdGhlIGNpdGFkZWwgd2VyZSBhbG1vc3QgY29tcGxldGUuICDvgrcgU2hlciBTaGFoIHJlbmFtZWQgRGluIFBhbmFoIFNoZXIgIEdhcmggYW5kIGJ1aWx0IHZhcmlvdXMgaW1wb3J0YW50ICBzdHJ1Y3R1cmVzIHdpdGhpbiBpdC4gIO+CtyBJdCBoYXMgdGhyZWUgbWFqZXN0aWMgZ2F0ZXdheXM6IEJhZGEgIERhcndhemEgKFRoZSBsYXJnZSBhcmNoKTsgSHVtYXl1biAgRGFyd2F6YTsgYW5kIFRhbGFxaSBEYXJ3YXphLCBhbmQgIG1hZGUgdXAgb2YgcmVkIHNhbmRzdG9uZS4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 4,
      "question" : "She was the first queen to fight against the British colonial power in India. In collaboration with Hyder Ali and Gopala Nayaker, she waged a war against the British and emerged victorious. She went on to produce the first human bomb, as well as establish the first army of trained women soldiers in the late 1700s. She was  ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ=",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBSYW5pIFZlbHUgTmFjaGl5YXIgd2FzIGtub3duIGZvciBoZXIgIGZpZXJjZSByZXNpc3RhbmNlIGFnYWluc3QgY29sb25pYWxpc20uICBTaGUgYWxzbyB3b3JrZWQgZm9yIHRoZSB3ZWxmYXJlIG9mIHRoZSAgc29jaWV0eS4gU2hlIGlzIGtub3duIGFzICdWZWVyYW1hbmdhaScgIGFtb25nIHRoZSBUYW1pbHMuICDvgrcgU2hlIHdhcyB0aGUgZmlyc3QgcXVlZW4gdG8gZmlnaHQgYWdhaW5zdCAgdGhlIEJyaXRpc2ggY29sb25pYWwgcG93ZXIgaW4gSW5kaWEuIFNoZSAgZm91Z2h0IGFnYWluc3QgdGhlIGNvbG9uaWFsIHJ1bGVycyBtYW55ICB5ZWFycyBiZWZvcmUgdGhlIFNlcG95IE11dGlueS4gSW4gIGNvbGxhYm9yYXRpb24gd2l0aCBIeWRlciBBbGkgYW5kIEdvcGFsYSAgTmF5YWtlciwgc2hlIHdhZ2VkIGEgd2FyIGFnYWluc3QgdGhlICBCcml0aXNoIGFuZCBlbWVyZ2VkIHZpY3RvcmlvdXMuICDvgrcgU2hlIHdlbnQgb24gdG8gcHJvZHVjZSB0aGUgZmlyc3QgaHVtYW4gIGJvbWIsIGFzIHdlbGwgYXMgZXN0YWJsaXNoIHRoZSBmaXJzdCAgYXJteSBvZiB0cmFpbmVkIHdvbWVuIHNvbGRpZXJzIGluIHRoZSAgbGF0ZSAxNzAwcy4gIO+CtyBTaGUgd2FzIGEgc2Nob2xhciBpbiBtYW55IGxhbmd1YWdlcywgIGhhdmluZyBwcm9maWNpZW5jeSB3aXRoIGxhbmd1YWdlcyBsaWtlICBGcmVuY2gsIEVuZ2xpc2ggYW5kIFVyZHUsIGFuZCB3YXMgIHRyYWluZWQgaW4gbWFydGlhbCBhcnRzIGxpa2UgVmFsYXJpLCAgU2lsYW1iYW0gKGZpZ2h0aW5nIHVzaW5nIGEgc3RpY2spLCBob3JzZSAgcmlkaW5nIGFuZCBhcmNoZXJ5LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " Bhima Bai Holkar ",
        "option2" : " Rani Velu Nachiyar ",
        "option3" : " Rukmini Lakshmipathi ",
        "option4" : " Kittur Chennamma  "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following pairs is/are correctly matched? S.N. Dance/Martial Art Region 1. Khukuri Manipur 2. Thang-ta Sikkim 3. Kalaripayattu Kerala  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDU=",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBUaGUgbmFtZSBLaHVrdXJpIG1lYW5zIGJyYXZlcnkgaW4gIFNpa2tpbS4gSW4gdGhlIEdvcmtoYSBjdWx0dXJlLCAgJ0todWt1cmknIGlzIGEgc21hbGwga25pZmUsIHdoaWNoICBzeW1ib2xpemVzIHZpY3RvcnksIHJvYnVzdG5lc3MgYW5kICBwb3dlci4gVGhlIGRhbmNlIGlzIGFsc28gcGVyZm9ybWVkIGFzIGEgIHRyaWJ1dGUgdG8gdGhlIHNvbGRpZXJzIGZvciB0aGUgc2VjdXJpdHkgIHRoZXkgcHJvdmlkZS4gICDvgrcgQ3JlYXRlZCBieSB0aGUgTWVpdGVpIHBlb3BsZSBvZiAgTWFuaXB1ciwgVGhhbmctdGEgaXMgYW4gYXJtZWQgIG1hcnRpYWwgYXJ0IHRoYXQgZmluZHMgaXRzIG1lbnRpb24gaW4gdGhlICBtb3N0IGxldGhhbCBjb21iYXQgZm9ybXMuIEl0IGlzICBwcmFjdGlzZWQgaW4gdGhyZWUgZGlmZmVyZW50IHdheXM6IFRoZSAgZmlyc3QgaXMgY29tcGxldGVseSByaXR1YWxpc3RpYyBpbiBuYXR1cmUsICBsaW5rZWQgd2l0aCB0aGUgdGFudHJpYyBwcmFjdGljZXMuIFRoZSAgc2Vjb25kIGNvbnNpc3RzIG9mIGEgbWVzbWVyaXNpbmcgIHBlcmZvcm1hbmNlIG9mIHNwZWFyIGFuZCBzd29yZCAgZGFuY2VzLiBUaGUgdGhpcmQgYW5kIGxhc3QgaW52b2x2ZXMgdGhlICBhY3R1YWwgdGVjaG5pcXVlcyBvZiBmaWdodGluZy4gIO+CtyBPbmUgb2YgdGhlIG9sZGVzdCBtYXJ0aWFsIGFydHMgaW4gSW5kaWEsICBLYWxhcmlwYXlhdHR1LCBhbHRob3VnaCBwcmFjdGlzZWQgaW4gIG1vc3QgcGFydHMgb2Ygc291dGhlcm4gSW5kaWEsIG9yaWdpbmF0ZWQgIGluIHRoZSBzdGF0ZSBvZiBLZXJhbGEgaW4gdGhlIDR0aCBjZW50dXJ5ICBBRC4gS2FsYXJpcGF5YXR0dSBpbmNsdWRlcyBzZXZlcmFsICB0ZWNobmlxdWVzIGFuZCBhc3BlY3RzLiBGaWdodGluZyB3aXRoICBPdHRhIChhbiBTLXNoYXBlZCBzdGljayksIE1haXBheWF0dHUgb3IgIGJvZHkgZXhlcmNpc2VzLCBQdWxpeWFua2FtIG9yIHN3b3JkICBmaWdodCwgVmVydW1rYWkgb3IgYmFyZS1oYW5kZWQgZmlnaHQsICBBbmdhIFRoYXJpIG9yIHVzZSBvZiBtZXRhbCB3ZWFwb25zIGFuZCAgc3RpY2tzIG9mIEtvbHRoYXJpLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 6,
      "question" : "Which of the following pairs is/are correctly matched? S.N. Petroglyphs Site Region 1. Kupgal Karnataka 2. Sindhudurg  Tamil Nadu 3. Unakoti  Maharashtra  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDY=",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSByb2NrIGFydHMsIG9yIHBldHJvZ2x5cGhzLCBlc3RpbWF0ZWQgdG8gIGJlIDIwLDAwMCB5ZWFycyBvbGQsIGFyZSBjbGFzc2lmaWVkIGFzICBwcm90ZWN0ZWQgbW9udW1lbnRzIGJ5IHRoZSBTdGF0ZSAgQXJjaGFlb2xvZ3kgRGVwYXJ0bWVudCBhbmQgdGhlICBBcmNoYWVvbG9naWNhbCBTdXJ2ZXkgb2YgSW5kaWEsIGFuZCBoYXZlICBiZWVuIGFkZGVkIHRvIHRoZSB0ZW50YXRpdmUgbGlzdCBvZiAgVU5FU0NPJ3MgV29ybGQgSGVyaXRhZ2UgU2l0ZXMuICBQZXRyb2dseXBocyBTaXRlcyBpbiBJbmRpYTogIO+CtyBSYXRuYWdpcmk6IE1haGFyYXNodHJhICDvgrcgS3VwZ2FsOiBLYXJuYXRha2EgIO+CtyBLYW5kYW5hdGhpOiBBbmRocmEgUHJhZGVzaCAg74K3IFNpbmRodWR1cmc6IE1haGFyYXNodHJhICDvgrcgRGluZGlndWw6IFRhbWlsIE5hZHUgIO+CtyBOaWxnaXJpOiBUYW1pbCBOYWR1ICDvgrcgQmhpbWJlZHRrYTogTWFkaHlhIFByYWRlc2ggIO+CtyBFZGFra2FsIENhdmVzOiBLZXJhbGEgIO+CtyBVbmFrb3RpOiBUcmlwdXJhICDvgrcgRGhvbWtoYXIgYW5kIFRhbmd0c2U6IExhZGFraCAgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 2 only ",
        "option4" : " 1, 2 and 3   "
      }
    },
    {
      "index" : 7,
      "question" : "Which of the following statements is / are correct regarding Millets? 1. They are generally grown in the tropical and the sub-tropical climates, and have wide adaptability to different types of soil. 2. They can withstand high temperature and long periods of droughts. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDc=",
      "description" : "ICBFeHBsYW5hdGlvbjogIEdlbmVyYWxseSwgTWlsbGV0IGlzIGdyb3duIGluIHRoZSB0cm9waWNhbCAgYW5kIHRoZSBzdWItdHJvcGljYWwgcmVnaW9ucywgdXB0byBhbiAgYWx0aXR1ZGUgb2YgMiwxMDAgbS4gSXQgaXMgYSBoZWF0IGxvdmluZyBwbGFudCAgYW5kIGZvciBpdHMgZ2VybWluYXRpb24gbWluaW11bSAgdGVtcGVyYXR1cmUgcmVxdWlyZWQgaXMgOMKwYyAtIDEwwrBjLiBBIG1lYW4gIHRlbXBlcmF0dXJlIHJhbmdlIG9mIDI2wrBjIC0gMjnCsGMgZHVyaW5nIHRoZSAgZ3Jvd3RoIGlzIGJlc3QgZm9yIHByb3BlciBkZXZlbG9wbWVudCBhbmQgIGdvb2QgY3JvcCB5aWVsZC4gICBNaWxsZXQgaGFzIHdpZGUgYWRhcHRhYmlsaXR5IHRvIGRpZmZlcmVudCAgc29pbHMsIGZyb20gdmVyeSBwb29yIHRvIHZlcnkgZmVydGlsZSBhbmQgY2FuICB0b2xlcmF0ZSBhIGNlcnRhaW4gZGVncmVlIG9mIGFsa2FsaW5pdHkuICAgVGhlIGJlc3Qgc29pbHMgYXJlIGFsbHV2aWFsLCBsb2FteSBhbmQgc2FuZHkgIHNvaWxzIHdpdGggZ29vZCBkcmFpbmFnZS4gICBJbmRpYSwgTmlnZXJpYSBhbmQgQ2hpbmEgYXJlIHRoZSBsYXJnZXN0ICBwcm9kdWNlcnMgb2YgTWlsbGV0cyBpbiB0aGUgd29ybGQsICBhY2NvdW50aW5nIGZvciBtb3JlIHRoYW4gNTUlIG9mIHRoZSBnbG9iYWwgIHByb2R1Y3Rpb24uIEluZGlhIHByb2R1Y2VzIGFyb3VuZCAzOCUgb2YgIHRoZSBnbG9iYWwgTWlsbGV0cy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2   "
      }
    },
    {
      "index" : 8,
      "question" : "Which of the following statements is/are correct regarding the Deepwater Circulations? 1. Temperature and density difference are the main factors which drive these circulations. 2. In the Northern Hemisphere, the primary region of deepwater formation is the Central Atlantic. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDg=",
      "description" : "ICBFeHBsYW5hdGlvbjogIFN1cmZhY2UgY3VycmVudHMgYXJlIGluZmx1ZW5jZWQgYnkgdGhlICB3aW5kLiBIb3dldmVyLCBvdGhlcnMsIG11Y2ggc2xvd2VyIGFuZCAgZGVlcGVyIGN1cnJlbnRzIHRoYXQgb2NjdXIgZnJvbSB0aGUgc3VyZmFjZSAgdG8gdGhlIHNlYWZsb29yLCBhcmUgZHJpdmVuIGJ5IGNoYW5nZXMgaW4gdGhlICBzYWx0aW5lc3MgYW5kIG9jZWFuIHRlbXBlcmF0dXJlLCBhIHByb2Nlc3MgIGNhbGxlZCAnVGhlcm1vaGFsaW5lIENpcmN1bGF0aW9uJy4gVGhlc2UgIGN1cnJlbnRzIGFyZSBjYXJyaWVkIGluIGEgbGFyZ2UgIkdsb2JhbCAgQ29udmV5b3IgQmVsdCcuICAgVGhlIGJhc2ljIERlZXB3YXRlciBDaXJjdWxhdGlvbnMgLyAgVGhlcm1vaGFsaW5lIENpcmN1bGF0aW9uIGlzIG9uZSBvZiBzaW5raW5nICBvZiBjb2xkIHdhdGVyIGluIHRoZSBQb2xhciBSZWdpb25zLCBjaGllZmx5IGluICB0aGUgTm9ydGhlcm4gTm9ydGggQXRsYW50aWMgYW5kIG5lYXIgIEFudGFyY3RpY2EuIFRoZXNlIGRlbnNlIHdhdGVyIG1hc3NlcyAgc3ByZWFkIGludG8gdGhlIGZ1bGwgZXh0ZW50IG9mIHRoZSBvY2VhbiBhbmQgIGdyYWR1YWxseSB1cHdlbGwgdG8gZmVlZCBhIHNsb3cgcmV0dXJuIGZsb3cgIHRvIHRoZSBzaW5raW5nIHJlZ2lvbnMuICAgSW4gdGhlIE5vcnRoZXJuIEhlbWlzcGhlcmUsIHRoZSAgcHJpbWFyeSByZWdpb24gb2YgZGVlcHdhdGVyIGZvcm1hdGlvbiBpcyAgdGhlIE5vcnRoIEF0bGFudGljLiAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 9,
      "question" : "Which of the following statements are correct regarding the 'Asian Elephants'? 1. Their society is organized into well-defined, matrilineal communities.  2. The IUCN classified them as 'Vulnerable' species. 3. They are categorized as the 'Umbrella Species', as well as the 'Keystone Species.' Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDk=",
      "description" : "ICBFeHBsYW5hdGlvbjogIEtleSBGYWN0cyByZWxhdGVkIHRvIHRoZSBBc2lhbiAgRWxlcGhhbnRzOiAg74K3IElVQ04gKFRoZSBJbnRlcm5hdGlvbmFsIFVuaW9uIGZvciAgQ29uc2VydmF0aW9uIG9mIE5hdHVyZSkgU3RhdHVzOiAgRW5kYW5nZXJlZC4gICDvgrcgVGhlIEFzaWFuIEVsZXBoYW50cyBpbmhpYml0IGdyYXNzbGFuZHMsICB0cm9waWNhbCBldmVyZ3JlZW4gZm9yZXN0cywgc2VtaS0gZXZlcmdyZWVuIGZvcmVzdHMsIG1vaXN0IGRlY2lkdW91cyAgZm9yZXN0cywgZHJ5IGRlY2lkdW91cyBmb3Jlc3RzIGFuZCBkcnkgIHRob3JuIGZvcmVzdHMsIGluIGFkZGl0aW9uIHRvIGN1bHRpdmF0ZWQgIGFuZCBzZWNvbmRhcnkgZm9yZXN0cyBvciBzY3J1YmxhbmRzLiAgIO+CtyBUaGUgQXNpYW4gRWxlcGhhbnRzIGNhbiByYW5nZSBvdmVyICBsYXJnZSBhcmVhcyBhbmQgdGhlcmVmb3JlLCB0aGUgZWxlcGhhbnRzICBkaXNwZXJzZSBzZWVkcyBvdmVyIGxvbmdlciBkaXN0YW5jZXMgIHRoYW4gbW9zdCBvdGhlciBoZXJiaXZvcmVzIGFuZCwgdGh1cywgIGFyZSByZXNwb25zaWJsZSBmb3Igc3RydWN0dXJpbmcgYW5kICBtYWludGFpbmluZyBwbGFudCBkaXZlcnNpdHkgd2l0aGluIHRoZSAgZWNvc3lzdGVtcy4gICDvgrcgR2l2ZW4gdGhlaXIgbGFyZ2UgYXJlYSByZXF1aXJlbWVudHMsIHRoZSAgZWxlcGhhbnRzIGFyZSByZWdhcmRlZCBhcyBhbiAnVW1icmVsbGEgIFNwZWNpZXMnLCBiZWNhdXNlIHRoZWlyIGNvbnNlcnZhdGlvbiAgd2lsbCBhbHNvIHByb3RlY3QgYSBsYXJnZSBudW1iZXIgb2Ygb3RoZXIgIHNwZWNpZXMgb2NjdXB5aW5nIHRoZSBzYW1lIGFyZWEuIFRoZXkgIG1heSBhbHNvIGJlIGNvbnNpZGVyZWQgdGhlICdGbGFnc2hpcCAgU3BlY2llcycgYmVjYXVzZSBvZiB0aGVpciBpY29uaWMgb3IgIGN1bHR1cmFsIHZhbHVlLCBhbmQgdGhlICdLZXlzdG9uZSAgU3BlY2llcycgYmVjYXVzZSBvZiB0aGVpciBpbXBvcnRhbnQgIGVjb2xvZ2ljYWwgcm9sZSBhbmQgaW1wYWN0IG9uIHRoZSAgZW52aXJvbm1lbnQuICAg74K3IFRoZSBBc2lhbiBFbGVwaGFudCBzb2NpZXR5IGlzIG9yZ2FuaXplZCAgaW50byB3ZWxsLWRlZmluZWQsIG1hdHJpbGluZWFsICBjb21tdW5pdGllcyBvciBjbGFucywgY29tcHJpc2luZyBhZHVsdCAgZmVtYWxlcywgYXMgd2VsbCBhcyBzdWItYWR1bHQgYW5kICBqdXZlbmlsZSBtYWxlcyBhbmQgZmVtYWxlcy4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 10,
      "question" : "Which of the following statements is/are correct? 1. High concentration of Ozone is found in the layer of the atmosphere between 10-50 km altitude. 2. Ozone depletion is directly related to the formation of the Polar Vortex. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDEw",
      "description" : "ICBFeHBsYW5hdGlvbjogIE96b25lIGxheWVyIGlzIGEgY29tbW9uIHRlcm0gZm9yIHRoZSBoaWdoICBjb25jZW50cmF0aW9uIG9mIE96b25lIHRoYXQgaXMgZm91bmQgaW4gdGhlICBzdHJhdG9zcGhlcmUgKGxheWVyIG9mIHRoZSBhdG1vc3BoZXJlICBiZXR3ZWVuIGFyb3VuZCAxMCAtIDUwIGttIGFsdGl0dWRlKS4gVGhlICBBdG1vc3BoZXJpYyBPem9uZSBhYnNvcmJzIHVsdHJhdmlvbGV0IChVVikgIHJhZGlhdGlvbiBmcm9tIHRoZSBTdW4sIHBhcnRpY3VsYXJseSB0aGUgIGhhcm1mdWwgVVYtQiB0eXBlIHJheXMuICAg74K3IE96b25lIEhvbGUgcmVmZXJzIHRvIGEgcmVnaW9uIGluICBzdHJhdG9zcGhlcmUgd2hlcmUgdGhlIGNvbmNlbnRyYXRpb24gb2YgIE96b25lIGJlY29tZXMgZXh0cmVtZWx5IGxvdy4gICBvIFN1Y2ggSG9sZXMgYXJlIHNwb3R0ZWQgb3ZlciBib3RoICB0aGUgUG9sZXMuICAgbyBPem9uZSBkZXBsZXRpb25zIGF0IHRoZSBOb3J0aCBQb2xlICBhcmUgbXVjaCBzbWFsbGVyIGluIHNpemUsIG93aW5nIHRvICB3YXJtZXIgdGVtcGVyYXR1cmVzIGF0IHRoZSBOb3J0aCAgUG9sZSwgdGhhbiBhdCB0aGUgU291dGggUG9sZS4gICBvIE96b25lIGRlcGxldGlvbiBpcyBkaXJlY3RseSByZWxhdGVkIHRvICB0aGUgZm9ybWF0aW9uIG9mIHRoZSBQb2xhciBWb3J0ZXggKGluICB0aGUgc3RyYXRvc3BoZXJlKS4gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only  ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 11,
      "question" : "Consider the following statements regarding the Indian Skimmers:  1. They are classified as 'Critically Endangered' by the IUCN. 2. They are more widespread in the winter season. 3. Coastal estuaries and wetlands are their favourable habitats. Which of the statements given above is/are incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDEx",
      "description" : "ICBFeHBsYW5hdGlvbjogIEtleSBGYWN0cyByZWdhcmRpbmcgdGhlIEluZGlhbiAgU2tpbW1lcjogICDvgrcgSVVDTiBzdGF0dXM6IEVuZGFuZ2VyZWQuICDvgrcgRGlzdHJpYnV0aW9uOiBNb3JlIHdpZGVzcHJlYWQgaW4gIHdpbnRlciwgdGhlIEluZGlhbiBTa2ltbWVyIGlzIGZvdW5kIGluICB0aGUgY29hc3RhbCBlc3R1YXJpZXMgb2Ygd2VzdGVybiBhbmQgIGVhc3Rlcm4gSW5kaWEuIEl0IG9jY3VycyBwcmltYXJpbHkgb24gIGxhcmdlciwgc2FuZHksIGxvd2xhbmQgcml2ZXJzLCBhcm91bmQgIGxha2VzIGFuZCBhZGphY2VudCBtYXJzaGVzIGFuZCwgaW4gdGhlICBub24tYnJlZWRpbmcgc2Vhc29uLCBpbiB0aGUgZXN0dWFyaWVzICBhbmQgdGhlIGNvYXN0cy4gICDvgrcgVGhlIEluZGlhbiBTa2ltbWVyIGdyb3dzIHRvIGEgbGVuZ3RoICBvZiA0MC00MyBjbS4gICDvgrcgSXQgYnJlZWRzIGNvbG9uaWFsbHkgb24gbGFyZ2UsIGV4cG9zZWQgIHNhbmRiYXJzIGFuZCBpc2xhbmRzLiAgIO+CtyBJdCBmZWVkcyBvbiBzdXJmYWNlLWR3ZWxsaW5nIGZpc2gsIHNtYWxsICBjcnVzdGFjZWFucyBhbmQgaW5zZWN0IGxhcnZhZS4gIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1 and 2 only  "
      }
    },
    {
      "index" : 12,
      "question" : "Which of the following statements are correct regarding the Deepor Beel?  1. It is a brackish water lake in Assam. 2. It is famous for the species, like the Spot-Billed Pelican and the Baer's Pochard. 3. It is a Ramsar Site.  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDEy",
      "description" : "ICBFeHBsYW5hdGlvbjogIEFib3V0IHRoZSBEZWVwb3IgQmVlbDogIO+CtyBJdCBpcyBhIHBlcm1hbmVudCBmcmVzaHdhdGVyIGxha2UgIGxvY2F0ZWQgaW4gdGhlIEthbXJ1cCBNZXRyb3BvbGl0YW4gIGRpc3RyaWN0IG9mIEFzc2FtLiAgIO+CtyBJdCBpcyBjb25zaWRlcmVkIGFzIG9uZSBvZiB0aGUgbGFyZ2VzdCAgQmVlbHMgKGxha2VzKSBpbiB0aGUgQnJhaG1hcHV0cmEgVmFsbGV5LiAgIO+CtyBJdCBpcyB0aGUgc3RhdGUncyBvbmx5IFJhbXNhciBTaXRlLCAgYmVzaWRlcyBiZWluZyBhbiAnSW1wb3J0YW50IEJpcmQgQXJlYScgIGJ5IEJpcmRMaWZlIEludGVybmF0aW9uYWwuICAg74K3IFNvbWUgb2YgdGhlIHNwZWNpZXMgaW4gdGhlIERlZXBvciAgV2V0bGFuZHMgYXJlIHRoZSBMZXNzZXIgQWRqdXRhbnQgU3RvcmsgIChJVUNOLSBWdWxuZXJhYmxlKSwgdGhlIEdyZWF0ZXIgIEFkanV0YW50IFN0b3JrIChJVUNOLSBFbmRhbmdlcmVkKSwgdGhlICBTcG90LUJpbGxlZCBQZWxpY2FuIChJVUNOLSBOZWFyICB0aHJlYXRlbmVkKSBhbmQgdGhlIEJhZXIncyBQb2NoYXJkICAoSVVDTi0gQ3JpdGljYWxseSBFbmRhbmdlcmVkKS4g",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only  ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only  ",
        "option4" : " 1, 2 and 3    "
      }
    },
    {
      "index" : 13,
      "question" : "Consider the following statements:1. The Ganges River Dolphin is anumbrella species of the Ganga andBrahmaputra river system.2. The species is listed under the'Endangered' category of the International Union for the Conservation of Nature. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDEz",
      "description" : "IEV4cGxhbmF0aW9uOiAgVGhlIEdhbmdlcyBSaXZlciBEb2xwaGluIChQbGF0ZW5pc3RhICBnYW5nZXRpY2EpIG9yIEdhbmdldGljIERvbHBoaW4sIGtub3duIGFzICBTYXVucyBpbiBVdHRhciBQcmFkZXNoIGFuZCBCaWhhciwgaXMgdGhlICBuYXRpb25hbCBhcXVhdGljIGFuaW1hbCBvZiBJbmRpYS4gICBUaGUgZWx1c2l2ZSBmcmVzaHdhdGVyIGNldGFjZWFuIGlzIGFuICB1bWJyZWxsYSBzcGVjaWVzIG9mIHRoZSBHYW5nYSBhbmQgIEJyYWhtYXB1dHJhIHJpdmVyIHN5c3RlbSBhbmQgaGFzIGEgIHNpZ25pZmljYW50IGVjb2xvZ2ljYWwgaW1wb3J0YW5jZSBhcyBpdHMgIHByZXNlbmNlIGluZGljYXRlcyB0aGUgZ29vZCBoZWFsdGggb2YgYW4gIGFyZWEuICBUaGUgc3BlY2llcyBpcyBsaXN0ZWQgdW5kZXIgdGhlICAnRW5kYW5nZXJlZCcgY2F0ZWdvcnkgb2YgdGhlIEludGVybmF0aW9uYWwgIFVuaW9uIGZvciB0aGUgQ29uc2VydmF0aW9uIG9mIE5hdHVyZSBhcyBpdCAgaXMgbG9zaW5nIGl0cyBoYWJpdGF0IGR1ZSB0byBhbnRocm9wb2dlbmljICBhY3Rpdml0aWVzLiAgIFRoZSBWaWtyYW1zaGlsYSBHYW5nZXRpYyBEb2xwaGluICBTYW5jdHVhcnkgaW4gQmloYXIncyBCaGFnYWxwdXIgZGlzdHJpY3QsICB0aGUgb25seSBzYW5jdHVhcnkgZm9yIG91ciBuYXRpb25hbCBhcXVhdGljICBhbmltYWwsIGlzIGZhY2luZyBhIGRlY2xpbmUgaW4gaXRzIGRvbHBoaW4gIHBvcHVsYXRpb24uICAgR2FuZ2VzIHJpdmVyIGRvbHBoaW5zIGFyZSBwcm90ZWN0ZWQgdW5kZXIgIFNjaGVkdWxlIEkgb2YgV2lsZGxpZmUgUHJvdGVjdGlvbiBBY3QgKDE5NzIpLiAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 14,
      "question" : "Which of the following statements is/arecorrect regarding the Noble's Helen?1. It is a type of butterfly species havingadditional white spot in the dorsum ofthe forewing.2. Recently, it has been found in theNamdapha National Park.Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE0",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBOb2JsZSdzIEhlbGVuIGJ1dHRlcmZseSwgYSByYXJlIHNwZWNpZXMsICB3YXMgZGlzY292ZXJlZCBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gSW5kaWEgYXQgIHRoZSBOYW1kYXBoYSBOYXRpb25hbCBQYXJrIGluIEFydW5hY2hhbCAgUHJhZGVzaC4gICDvgrcgSXQgaXMgYSBzd2FsbG93LXRhaWwgYnV0dGVyZmx5LCB3aXRoIGEgIHdpbmdzcGFuIG9mIDEwMC0xMjAgbW0sIGFuZCBpdCBoYXMgYW4gIGFkZGl0aW9uYWwgd2hpdGUgc3BvdCBpbiB0aGUgZG9yc3VtIG9mICB0aGUgZm9yZXdpbmcuICAg74K3IEl0cyBzY2llbnRpZmljIG5hbWUgaXMgUGFwaWxpbyBOb2JsZWkuICAg74K3IEl0IGlzIGZvdW5kIGluIE15YW5tYXIsIFl1bm5hbiwgSHViZWkgIChDaGluYSksIE5vcnRoIFRoYWlsYW5kLCBMYW9zLCAgQ2FtYm9kaWEgYW5kIFZpZXRuYW0uICAg74K3IEJ1dHRlcmZsaWVzIHBsYXkgYSBjcnVjaWFsIHJvbGUgaW4gdGhlICBiYWxhbmNlIG9mIHRoZSBlY29zeXN0ZW1zIGFzIHBvbGxpbmF0b3JzICBhbmQgYSBmb29kIHNvdXJjZSBmb3Igb3RoZXIgc3BlY2llcy4gICDvgrcgVGhleSBhcmUgY29uc2lkZXJlZCBhcyB0aGUgaW5kaWNhdG9ycyBvZiAgZW52aXJvbm1lbnRhbCBoZWFsdGgsIGFuZCBjaGFuZ2VzIGluICBidXR0ZXJmbHkgcG9wdWxhdGlvbnMgYW5kIGRpc3RyaWJ1dGlvbnMgIGNhbiBzaWduYWwgY2hhbmdlcyBpbiB0aGUgaGFiaXRhdCwgc3VjaCAgYXMgZGVzdHJ1Y3Rpb24gb3IgZGVncmFkYXRpb24uICAg74K3IEJ1dHRlcmZsaWVzIGFsc28gYWRkIHRvIHRoZSBhZXN0aGV0aWMgIGJlYXV0eSBvZiB0aGUgZW52aXJvbm1lbnQgYW5kIGNhbiBiZSBhICBrZXkgYXNwZWN0IG9mIHRvdXJpc20uICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 15,
      "question" : "Which of the following statements is/arecorrect regarding the National GreenHydrogen Mission?1. It aims to develop the Green Hydrogenproduction capacity of at least 5 MMT(Million Metric Tonne) per annum by2025.2. The SIGHT Programme is a sub-component under the Mission.Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE1",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBOYXRpb25hbCBHcmVlbiBIeWRyb2dlbiBNaXNzaW9uICB3aWxsIHJlc3VsdCBpbiB0aGUgZm9sbG93aW5nIGxpa2VseSAgb3V0Y29tZXMgYnkgMjAzMDogIO+CtyBEZXZlbG9wbWVudCBvZiBHcmVlbiBIeWRyb2dlbiAgcHJvZHVjdGlvbiBjYXBhY2l0eSBvZiBhdCBsZWFzdCA1ICBNTVQgKE1pbGxpb24gTWV0cmljIFRvbm5lKSBwZXIgIGFubnVtIHdpdGggYW4gYXNzb2NpYXRlZCByZW5ld2FibGUgIGVuZXJneSBjYXBhY2l0eSBhZGRpdGlvbiBvZiBhYm91dCAxMjUgIEdXIGluIHRoZSBjb3VudHJ5LiAgIO+CtyBPdmVyIFJzLiBFaWdodCBsYWtoIGNyb3JlcyBpbiB0b3RhbCAgaW52ZXN0bWVudHMuICAg74K3IENyZWF0aW9uIG9mIG92ZXIgc2l4IGxha2ggam9icy4gICDvgrcgQ3VtdWxhdGl2ZSByZWR1Y3Rpb24gaW4gZm9zc2lsIGZ1ZWwgIGltcG9ydHMgb2Ygb3ZlciBScy4gT25lIGxha2ggY3JvcmUuICAg74K3IEFiYXRlbWVudCBvZiBuZWFybHkgNTAgTU1UIG9mIGFubnVhbCAgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zICAgbyBUaGUgTWlzc2lvbiB3aWxsIGZhY2lsaXRhdGUgZGVtYW5kICBjcmVhdGlvbiwgcHJvZHVjdGlvbiwgdXRpbGl6YXRpb24gYW5kICBleHBvcnQgb2YgR3JlZW4gSHlkcm9nZW4uICAgbyBVbmRlciB0aGUgU3RyYXRlZ2ljIEludGVydmVudGlvbnMgZm9yICBHcmVlbiBIeWRyb2dlbiBUcmFuc2l0aW9uIChTSUdIVCkgIFByb2dyYW1tZSwgdHdvIGRpc3RpbmN0IGZpbmFuY2lhbCAgaW5jZW50aXZlIG1lY2hhbmlzbXMgLSB0YXJnZXRpbmcgIGRvbWVzdGljIG1hbnVmYWN0dXJpbmcgb2YgIGVsZWN0cm9seXNlcnMgYW5kIHByb2R1Y3Rpb24gb2YgIEdyZWVuIEh5ZHJvZ2VuIC0gd2lsbCBiZSBwcm92aWRlZCAgdW5kZXIgdGhlIE1pc3Npb24uICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements:1. The evolution of the Basic StructureDoctrine has ensured ParliamentarySupremacy over ConstitutionalSupremacy.2. The Basic Structure Doctrine hasensured permeation ofconstitutionalism, which envisages theidea of limited government.Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE2",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBCYXNpYyBTdHJ1Y3R1cmUgRG9jdHJpbmUgd2FzICBleHBvdW5kZWQgaW4gdGhlIGxhbmRtYXJrIGp1ZGdtZW50IG9mICB0aGUgS2VzYXZhbmFuZGEgQmhhcmF0aSBDYXNlLCAgYWNjb3JkaW5nIHRvIHdoaWNoIHRoZSBCYXNpYyBTdHJ1Y3R1cmUgb2YgIHRoZSBDb25zdGl0dXRpb24gY2Fubm90IGJlIGFsdGVyZWQgb3IgIGFtZW5kZWQgYnkgdGhlIFBhcmxpYW1lbnQgb3IgdGhlICBFeGVjdXRpdmUuIFRodXMsIHRoZSBEb2N0cmluZSBoYXMgbGltaXRlZCAgdGhlIGFtZW5kaW5nIHBvd2VycyBvZiB0aGUgUGFybGlhbWVudCAgdW5kZXIgQXJ0aWNsZSAzNjguIFNvLCB3ZSBjYW4gc2F5IHRoYXQgdGhlICBCYXNpYyBTdHJ1Y3R1cmUgRG9jdHJpbmUgaGFzIGVuc3VyZWQgIHRoZSBQcmluY2lwbGUgb2YgQ29uc3RpdHV0aW9uYWwgIFN1cHJlbWFjeSwgYWxvbmcgd2l0aCB0aGUgaWRlYSBvZiAgY29uc3RpdHV0aW9uYWxpc20sIHJhdGhlciB0aGFuICBQYXJsaWFtZW50YXJ5IFN1cHJlbWFjeSwgYXMgcHJhY3Rpc2VkICBpbiBCcml0YWluLiAgIENvbnN0aXR1dGlvbmFsaXNtIHJlZmVycyB0byB0aGUgc2V0IG9mICBwcmluY2lwbGVzLCBub3JtcyBhbmQgdmFsdWVzIHRoYXQgZGVmaW5lICB0aGUgbGltaXRzIG9mIHRoZSBnb3Zlcm5tZW50IGFuZCBwcm92aWRlICB0aGUgZnJhbWV3b3JrIGZvciBpdHMgZnVuY3Rpb25pbmcuIEl0ICBlbmNvbXBhc3NlcyB0aGUgaWRlYSB0aGF0IGEgZ292ZXJubWVudCdzICBwb3dlciBhbmQgYXV0aG9yaXR5IGFyZSBkZXJpdmVkIGZyb20gYSAgd3JpdHRlbiBDb25zdGl0dXRpb24gdGhhdCBvdXRsaW5lcyB0aGUgYmFzaWMgIHJpZ2h0cyBhbmQgcmVzcG9uc2liaWxpdGllcyBvZiB0aGUgY2l0aXplbnMsICB0aGUgc3RydWN0dXJlIG9mIGdvdmVybm1lbnQgYW5kIHRoZSAgZGlzdHJpYnV0aW9uIG9mIHBvd2VyIGFtb25nIGRpZmZlcmVudCAgYnJhbmNoZXMgb2YgdGhlIGdvdmVybm1lbnQuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 17,
      "question" : "Which of the following constitutional orlegal principles ensure judicialindependence?1. Separation of power.2. Security of the tenure of the judges.3. The Judges (Inquiry) Act, 1968.4. The expenses of the Supreme Courtcharged upon the Consolidated Fund ofIndia.5. The CJI as the Master of the Roster.Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE3",
      "description" : "ICBFeHBsYW5hdGlvbjogIEFzIHRoZSByb2xlIG9mIHRoZSBNYXN0ZXIgb2YgdGhlIFJvc3RlciBvZiAgdGhlIENoaWVmIEp1c3RpY2Ugb2YgSW5kaWEgKENKSSkgaXMgYW4gIGFkbWluaXN0cmF0aXZlIGFjdCwgaXQgZG9lcyBub3QgZW5zdXJlICBqdWRpY2lhbCBpbmRlcGVuZGVuY2UuICAgQ29uc3RpdHV0aW9uYWwgYW5kIExlZ2FsIFByaW5jaXBsZXMgdG8gIEVuc3VyZSBKdWRpY2lhbCBJbmRlcGVuZGVuY2U6ICAg74K3IEFydGljbGUgMTQxOiBUaGUgbGF3IGRlY2xhcmVkIGJ5IHRoZSAgU3VwcmVtZSBDb3VydCBzaGFsbCBiZSBiaW5kaW5nIG9uIGFsbCAgY291cnRzIHdpdGhpbiB0aGUgdGVycml0b3J5IG9mIEluZGlhLiAg74K3IFNlcGFyYXRpb24gb2YgUG93ZXIgLSBBcnRpY2xlIDUwOiAgU2VwYXJhdGlvbiBvZiBwb3dlciBiZXR3ZWVuICBMZWdpc2xhdHVyZTsgRXhlY3V0aXZlOyBhbmQgSnVkaWNpYXJ5IC0gIGlzIG5vdyBhIHBhcnQgb2YgdGhlIEJhc2ljIFN0cnVjdHVyZSBvZiAgdGhlIEluZGlhbiBDb25zdGl0dXRpb24uICDvgrcgU2VjdXJpdHkgb2YgdGhlIFRlbnVyZSBvZiB0aGUgSnVkZ2VzOiAgVGhlIGp1ZGdlcyBvZiB0aGUgU3VwcmVtZSBDb3VydCBvciB0aGUgIEhpZ2ggQ291cnRzIGNhbm5vdCBiZSByZW1vdmVkICBhcmJpdHJhcmlseSBieSB0aGUgZXhlY3V0aXZlIGFuZCB0aGVpciAgcmVtb3ZhbCBoYXMgdG8gdW5kZXJnbyByaWdvcm91cyAgbGVnaXNsYXRpdmUgc2NydXRpbnksIGFzIHByb3ZpZGVkICB1bmRlciBBcnRpY2xlIDEyNCAoNCkuIEZ1cnRoZXIsIEFydGljbGUgIDEyNCAoNSkgbWVudGlvbnMgdGhhdCB0aGUgcmVtb3ZhbCBvZiB0aGUgIGp1ZGdlIG9uIHRoZSBncm91bmRzIG9mICAnbWlzYmVoYXZpb3VyJyBhbmQgJ2luY2FwYWNpdHknIGNhbiAgYmUgcHJlc2NyaWJlZCBieSBsYXcgbWFkZSBieSB0aGUgIFBhcmxpYW1lbnQuICDvgrcgVGhlIEp1ZGdlcyAoSW5xdWlyeSkgQWN0LCAxOTY4OiBJdCBsYXlzICBkb3duIHRoZSBwcm9jZXNzIHRvIHJlbW92ZSB0aGUganVkZ2VzICBvZiB0aGUgU3VwcmVtZSBDb3VydCBhbmQgdGhlIEhpZ2ggIENvdXJ0cywgaW5jbHVkaW5nIHRoZSBpbnZlc3RpZ2F0aW9uICBuZWNlc3NhcnkgdG8gcHJvdmUgbWlzYmVoYXZpb3VyIG9yICBpbmNhcGFjaXR5LiAgIO+CtyBUaGUgU2FsYXJpZXMgb2YgdGhlIEp1ZGdlcyBjYW5ub3QgYmUgIHJlZHVjZWQgLSBBcnRpY2xlIDEyNSAoMik6IFRoZSBzYWxhcnkgb2YgIHRoZSBqdWRnZXMgaXMgZml4ZWQgYnkgdGhlIFBhcmxpYW1lbnQgIGFuZCBpdCBjYW5ub3QgYmUgcmVkdWNlZCBkdXJpbmcgdGhlICB0ZW51cmUgb2YgYSBqdWRnZS4gUHJpdmlsZWdlcywgIGFsbG93YW5jZXMsIGxlYXZlcyBhbmQgcGVuc2lvbiAgcHJvdmlkZWQgdG8gYSBqdWRnZSBjYW5ub3QgYmUgdmFyaWVkIG9yICByZWR1Y2VkIHRvIGhpcy9oZXIgZGlzYWR2YW50YWdlLiAgIO+CtyBUaGUgRXhwZW5zZXMgb2YgdGhlIFN1cHJlbWUgQ291cnQgIGNoYXJnZWQgdXBvbiB0aGUgQ29uc29saWRhdGVkIEZ1bmQgIG9mIEluZGlhIC0gQXJ0aWNsZSAxNDYgKDMpOiBUaGlzIGVuc3VyZXMgIGZpbmFuY2lhbCBpbmRlcGVuZGVuY2Ugb2YgdGhlIGp1ZGljaWFyeSwgIGF3YXkgZnJvbSB0aGUgUGFybGlhbWVudCdzIHZvdGUgb24gdGhlICBtYXR0ZXIgb3IgZXhlY3V0aXZlJ3MgcHJlc3N1cmUgb3IgIGluZmx1ZW5jZS4gICDvgrcgVGhlIEp1cmlzZGljdGlvbiBvZiB0aGUgQ291cnRzIGNhbm5vdCAgYmUgZGltaW5pc2hlZDogVGhlIFBhcmxpYW1lbnQgY2Fubm90ICByZWR1Y2UgdGhlIGp1cmlzZGljdGlvbiBvZiB0aGUgU3VwcmVtZSAgQ291cnQgb3IgdGhlIEhpZ2ggQ291cnRzLCBieSBwYXNzaW5nICBhbnkgbGF3IG9uIGFwcGVhbHMgb3IgU3VwcmVtZSBDb3VydCdzICBPcmlnaW5hbCBKdXJpc2RpY3Rpb24gdW5kZXIgQXJ0aWNsZSAgMTMxIHdpdGggcmVzcGVjdCB0byBkaXNwdXRlIGJldHdlZW4gdGhlICBDZW50cmUgYW5kIHRoZSBTdGF0ZXMuICAg74K3IFRoZSBDb25zdGl0dXRpb24gaW5zdWxhdGVzIHRoZSAgSnVkZ2VzIGZyb20gY3JpdGljaXNtIGluIHRoZSAgUGFybGlhbWVudCBhbmQgdGhlIFN0YXRlICBMZWdpc2xhdHVyZXM6IFRoZSBQYXJsaWFtZW50IG9yIHRoZSAgU3RhdGUgTGVnaXNsYXR1cmVzIGNhbm5vdCBkaXNjdXNzIHRoZSAgY29uZHVjdCBvZiB0aGUganVkZ2VzIGluIGRpc2NoYXJnZSBvZiAgdGhlaXIgZHV0aWVzLiAgIO+CtyBQcm90ZWN0aW9uIGZyb20gQ29udGVtcHQgIFByb2NlZWRpbmdzOiBUaGUgU3VwcmVtZSBDb3VydCwgaW4gIHRoZSBLZXNoYXYgU2luZ2ggQ2FzZSwgaGVsZCB0aGF0ICBBcnRpY2xlcyAxMjEgYW5kIDIxMSBhbHNvIHByb3RlY3QgYSAganVkZ2Ugb2YgdGhlIGNvdXJ0IGZyb20gYW55IGNvbnRlbXB0ICBwcm9jZWVkaW5ncywgd2hpY2ggbWF5IGJlIHRha2VuICBhZ2FpbnN0IGhpbS9oZXIgaW4gZGlzY2hhcmdlIG9mIGhpcy9oZXIgIGR1dGllcy4gICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 2, 3 and 5 only",
        "option2" : " 1, 2, 4 and 5 only",
        "option3" : " 1, 2, 3 and 4 only",
        "option4" : " 3, 4 and 5 only "
      }
    },
    {
      "index" : 18,
      "question" : "In the light of the recent Supreme Courtjudgments, consider the followingstatements about Article 19 of the IndianConstitution:1. 'Additional restrictions' on the right tofreedom of speech of the Ministers canbe imposed, other than those providedunder Article 19.2. A Fundamental Right under Article 19or 21 can be enforced even againstpersons other than the state or itsinstrumentalities.3. The Ministers, including the MPs/MLAs, enjoy lesser freedom of speech, as compared to other citizens, under Article 19(1)(a) of the Indian Constitution.  Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE4",
      "description" : "ICBFeHBsYW5hdGlvbjogIEluIHRoZSBjYXNlIG9mIEthdXNoYWwgS3VtYXIgdi9zIHRoZSAgU3RhdGUgb2YgVXR0YXIgUHJhZGVzaCwgdGhlIFN1cHJlbWUgIENvdXJ0IGhhcyBoZWxkIHRoYXQgdGhlcmUgaXMgbm8gcmVhc29uIHRvICBpbXBvc2UgJ2FkZGl0aW9uYWwgcmVzdHJpY3Rpb25zJyBvbiB0aGUgcmlnaHQgIHRvIGZyZWVkb20gb2Ygc3BlZWNoIG9mIHRoZSBNaW5pc3RlcnMsIGFuZCAgdGhlIGdvdmVybm1lbnQgaXMgbm90IHZpY2FyaW91c2x5IGxpYWJsZSBmb3IgIGRpc3BhcmFnaW5nIHJlbWFya3MgbWFkZSBieSB0aGVtLCBldmVuIGlmICB0aGUgY29tbWVudHMgYXJlIHRyYWNlYWJsZSB0byB0aGUgc3RhdGUgIGFmZmFpcnMgb3IgbWVhbnQgdG8gcHJvdGVjdCB0aGUgZ292ZXJubWVudC4gIFZpY2FyaW91cyBsaWFiaWxpdHkgaXMgYSBzaXR1YXRpb24gaW4gd2hpY2ggIG9uZSBwYXJ0eSBpcyBoZWxkIHBhcnRseSByZXNwb25zaWJsZSBmb3IgdGhlICB1bmxhd2Z1bCBhY3Rpb25zIG9mIGEgdGhpcmQgcGFydHkuICAgRnVuZGFtZW50YWwgUmlnaHRzIGVuZm9yY2VkIGFnYWluc3QgIHRoZSBjaXRpemVuczogQSBGdW5kYW1lbnRhbCBSaWdodCwgdW5kZXIgIEFydGljbGUgMTkgb3IgMjEsIGNhbiBiZSBlbmZvcmNlZCBldmVuICBhZ2FpbnN0IHRoZSBwZXJzb25zIG90aGVyIHRoYW4gdGhlIHN0YXRlIG9yICBpdHMgaW5zdHJ1bWVudGFsaXRpZXMuICAgSy5TLiBQdXR0YXN3YW15IGNhc2UgKDIwMTcpOiBUaGUgIFN1cHJlbWUgQ291cnQgaGVsZCB0aGF0IGluZGl2aWR1YWxzIGFyZSAgcHJvdGVjdGVkIGFnYWluc3QgaW50ZXJmZXJlbmNlIGJ5IHRoZSBzdGF0ZSAgYW5kIG5vbi1zdGF0ZSBhY3RvcnMuIFRoaXMgYWxzbyBtZWFucyB0aGUgIEhvcml6b250YWwgQXBwbGljYXRpb24gb2YgRnVuZGFtZW50YWwgIFJpZ2h0cy4gV2hlcmVhcyB0aGUgVmVydGljYWwgQXBwbGljYXRpb24gb2YgIEZ1bmRhbWVudGFsIFJpZ2h0cyByZWZlcnMgdG8gdGhlICBhcHBsaWNhdGlvbiBvZiB0aGUgRnVuZGFtZW50YWwgUmlnaHRzICBhZ2FpbnN0IHRoZSBzdGF0ZSBvciBpdHMgZnVuY3Rpb25hcmllcy4gICBUaGUgTWluaXN0ZXJzLCBpbmNsdWRpbmcgdGhlIE1Qcy9NTEFzLCAgZW5qb3kgZnJlZWRvbSBvZiBzcGVlY2ggaW4gZXF1YWwgIG1lYXN1cmUgYXMgb3RoZXIgY2l0aXplbnMsIHVuZGVyIEFydGljbGUgIDE5KDEpKGEpIG9mIHRoZSBDb25zdGl0dXRpb24sIGFuZCBncmVhdGVyICBvciBhZGRpdGlvbmFsIHJlc3RyaWN0aW9ucyBjYW5ub3QgYmUgIGltcG9zZWQgb24gdGhlIEZ1bmRhbWVudGFsIFJpZ2h0IG9mICBmcmVlIHNwZWVjaCBvZiBzdWNoIHB1YmxpYyBmdW5jdGlvbmFyaWVzLiAgRnVuZGFtZW50YWwgUmlnaHRzLCB1bmRlciBBcnRpY2xlIDE5LzIxLCAgY2FuIGJlIGVuZm9yY2VkIGV2ZW4gYWdhaW5zdCB0aGUgcGVyc29ucyAgb3RoZXIgdGhhbiB0aGUgc3RhdGUgb3IgaXRzICBpbnN0cnVtZW50YWxpdGllcywgaW5jbHVkaW5nIG90aGVyIGNpdGl6ZW5zLiAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 2 only",
        "option2" : " 1 and 3 only",
        "option3" : " 2 and 3 only",
        "option4" : " 1, 2 and 3"
      }
    },
    {
      "index" : 19,
      "question" : "Consider the following statements:1. According to the Constitution of India,both the President and the Governorenjoy equal powers with respect to theSpecial Address at the commencementof the first session after each generalelection and at the commencement ofthe first session of each year.2. According to the Rules of Procedure andConduct of Business in the Lok Sabha,the Special Address of the President isfollowed up with the Motion of Thanks,prepared and presented independentlyby the President, highlighting thegovernment's successes and failures asa part of policy evaluation.Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDE5",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBTcGVjaWFsIEFkZHJlc3MsIHVuZGVyIEFydGljbGUgODcsIGlzICBwcmVwYXJlZCBieSB0aGUgVW5pb24gR292ZXJubWVudCBhbmQgIHJlYWQgYnkgdGhlIFByZXNpZGVudC4gU2ltaWxhcmx5LCBpbiB0aGUgIHN0YXRlcywgdGhlIFNwZWNpYWwgQWRkcmVzcywgdW5kZXIgQXJ0aWNsZSAgMTc2LCBpcyBwcmVwYXJlZCBieSB0aGUgU3RhdGUgR292ZXJubWVudCAgYW5kIHJlYWQgYnkgdGhlIEdvdmVybm9yLiAgIFRoZSBNb3Rpb24gb2YgVGhhbmtzIGlzIG1vdmVkIGluIHRoZSBMb2sgIFNhYmhhIGFuZCB0aGUgUmFqeWEgU2FiaGEgYWZ0ZXIgdGhlICBQcmVzaWRlbnQncyBTcGVjaWFsIEFkZHJlc3MgdW5kZXIgQXJ0aWNsZSAgODcoMSkuIEhvd2V2ZXIsIHRoZSBwcm92aXNpb24gb2YgdGhlIE1vdGlvbiAgb2YgVGhhbmtzIGhhcyBub3QgYmVlbiBwcm92aWRlZCBpbiB0aGUgIENvbnN0aXR1dGlvbiwgYnV0IHByb3ZpZGVkIGluIHRoZSBSdWxlcyBvZiAgUHJvY2VkdXJlIGFuZCBDb25kdWN0IG9mIEJ1c2luZXNzIGluIHRoZSAgTG9rIFNhYmhhLiAgIEFjY29yZGluZyB0byB0aGUgUnVsZXMgb2YgUHJvY2VkdXJlIGFuZCAgQ29uZHVjdCBvZiBCdXNpbmVzcyBpbiB0aGUgTG9rIFNhYmhhLCAgdGhlIFNwZWNpYWwgQWRkcmVzcyBvZiB0aGUgUHJlc2lkZW50IGlzICBmb2xsb3dlZCB1cCB3aXRoIGEgTW90aW9uIG9mIFRoYW5rcywgIHByZXBhcmVkIGJ5IHRoZSBDZW50cmFsIEdvdmVybm1lbnQsICBiYXNlZCBvbiB0aGUgYWR2aWNlIG9mIHRoZSBDb3VuY2lsIG9mICBNaW5pc3RlcnMsIGhlYWRlZCBieSB0aGUgUHJpbWUgTWluaXN0ZXIuICAgVGhlIFNwZWNpYWwgQWRkcmVzcyBvZiB0aGUgUHJlc2lkZW50ICBjb250YWlucyB0aGUgR292ZXJubWVudCdzIFN0YXRlbWVudCBvZiAgUG9saWN5OiBUaGUgUHJlc2lkZW50J3MgQWRkcmVzcyBpcyB0aGUgIHN0YXRlbWVudCBvZiBwb2xpY3kgb2YgdGhlIEdvdmVybm1lbnQgYW5kLCAgYXMgc3VjaCwgaXMgZHJhZnRlZCBieSB0aGUgR292ZXJubWVudCwgIHdoaWNoIGlzIHJlc3BvbnNpYmxlIGZvciBpdHMgY29udGVudHMuIFRoZSAgU3BlY2lhbCBBZGRyZXNzIGlzIHRoZSBHb3Zlcm5tZW50J3MgIFN0YXRlbWVudCBvZiBQb2xpY3kuICAgVGhlIEFkZHJlc3MgY29udGFpbnMgYSByZXZpZXcgb2YgdmFyaW91cyAgYWN0aXZpdGllcyBhbmQgYWNoaWV2ZW1lbnRzIG9mIHRoZSAgZ292ZXJubWVudCBkdXJpbmcgdGhlIHByZXZpb3VzIHllYXIgYW5kICBzZXRzIG91dCB0aGUgcG9saWNpZXMsIHByb2plY3RzIGFuZCAgcHJvZ3JhbW1lcyB3aGljaCB0aGUgZ292ZXJubWVudCBvZiB0aGUgIGRheSB3aXNoZXMgdG8gcHVyc3VlIHdpdGggcmVnYXJkIHRvICBpbXBvcnRhbnQgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgIGlzc3Vlcy4gVGhlIEFkZHJlc3MgYWxzbyBpbmRpY2F0ZXMsIGluIGJyb2FkICB0ZXJtcywgdGhlIGl0ZW1zIG9mIGxlZ2lzbGF0aXZlIGJ1c2luZXNzLCAgd2hpY2ggYXJlIHByb3Bvc2VkIHRvIGJlIGJyb3VnaHQgZHVyaW5nICB0aGUgc2Vzc2lvbnMgdG8gYmUgaGVsZCBpbiB0aGF0IHllYXIuICAgQXJ0aWNsZSA4NyAtIFNwZWNpYWwgYWRkcmVzcyBieSB0aGUgIFByZXNpZGVudDogICDvgrcgQ2xhdXNlICgxKSBvZiB0aGF0IEFydGljbGUgcHJvdmlkZXMgdGhhdCAgIG8gYXQgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGUgZmlyc3QgIHNlc3Npb24gYWZ0ZXIgZWFjaCBnZW5lcmFsIGVsZWN0aW9uIHRvICB0aGUgSG91c2Ugb2YgdGhlIFBlb3BsZSBhbmQgICBvIGF0IHRoZSBjb21tZW5jZW1lbnQgb2YgdGhlIGZpcnN0ICBzZXNzaW9uIG9mIGVhY2ggeWVhciwgdGhlIFByZXNpZGVudCAgc2hhbGwgYWRkcmVzcyBib3RoIHRoZSBIb3VzZXMgb2YgdGhlICBQYXJsaWFtZW50LCBhc3NlbWJsZWQgdG9nZXRoZXIsIGFuZCAgaW5mb3JtIHRoZSBQYXJsaWFtZW50IG9mIHRoZSBjYXVzZXMgIG9mIGl0cyBzdW1tb25zLiAgIO+CtyBDbGF1c2UgMiBvZiBBcnRpY2xlIDg3IG1lbnRpb25zIHRoYXQgIHByb3Zpc2lvbiBzaGFsbCBiZSBtYWRlIGJ5IHRoZSBSdWxlcyAgcmVndWxhdGluZyB0aGUgcHJvY2VkdXJlIG9mIGVpdGhlciAgSG91c2UgZm9yIHRoZSBhbGxvdG1lbnQgb2YgdGltZSBmb3IgIGRpc2N1c3Npb24gb2YgdGhlIG1hdHRlcnMgcmVmZXJyZWQgdG8gaW4gIHN1Y2ggYWRkcmVzcy4gICDvgrcgTm8gb3RoZXIgYnVzaW5lc3MgaXMgdHJhbnNhY3RlZCB0aWxsICB0aGUgUHJlc2lkZW50IGhhcyBhZGRyZXNzZWQgYm90aCB0aGUgIEhvdXNlcyBvZiB0aGUgUGFybGlhbWVudCwgYXNzZW1ibGVkICB0b2dldGhlciB0aHJvdWdoIHRoZSBTcGVjaWFsICBBZGRyZXNzLiAgIEFydGljbGUgMTc2IC0gU3BlY2lhbCBhZGRyZXNzIGJ5IHRoZSAgR292ZXJub3I6ICAg74K3IEF0IHRoZSBjb21tZW5jZW1lbnQgb2YgdGhlICAgbyBmaXJzdCBzZXNzaW9uIGFmdGVyIGVhY2ggZ2VuZXJhbCAgZWxlY3Rpb24gdG8gdGhlIExlZ2lzbGF0aXZlIEFzc2VtYmx5ICBhbmQgICBvIGF0IHRoZSBjb21tZW5jZW1lbnQgb2YgdGhlIGZpcnN0ICBzZXNzaW9uIG9mIGVhY2ggeWVhciwgICDvgrcgdGhlIEdvdmVybm9yIHNoYWxsIGFkZHJlc3MgdGhlICBMZWdpc2xhdGl2ZSBBc3NlbWJseSBvciwgaW4gdGhlIGNhc2Ugb2YgYSAgU3RhdGUgaGF2aW5nIGEgTGVnaXNsYXRpdmUgQ291bmNpbCBhbHNvLCAgYm90aCBIb3VzZXMgYXNzZW1ibGVkIHRvZ2V0aGVyLCBhbmQgIGluZm9ybSB0aGUgTGVnaXNsYXR1cmUgb2YgdGhlIGNhdXNlcyBvZiAgaXRzIHN1bW1vbnM7ICAg74K3IHByb3Zpc2lvbiBzaGFsbCBiZSBtYWRlIGJ5IHRoZSBSdWxlcyAgcmVndWxhdGluZyB0aGUgcHJvY2VkdXJlIG9mIHRoZSBIb3VzZSAgb3IgZWl0aGVyIEhvdXNlIGZvciB0aGUgYWxsb3RtZW50IG9mIHRpbWUgIGZvciBkaXNjdXNzaW9uIG9mIHRoZSBtYXR0ZXJzIHJlZmVycmVkIHRvICBpbiBzdWNoIGFkZHJlc3MuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 20,
      "question" : "With reference to the Speaker and theDeputy Speaker of the Lok Sabha, considerthe following statements:1. A motion for an adjournment of thebusiness of the House for the purposeof discussing a definite matter of urgentpublic importance may be made withthe consent of the Speaker.2. The election of the Deputy Speaker shallbe held on such date as the Presidentmay fix, and the Speaker shall send toevery member notice of the date of suchelection.3. The Speaker can decide if a question isto be treated as starred or un-starred, ifin the opinion of the Speaker anyquestion put down for oral answer is ofsuch a nature that demands writtenreply.Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDIw",
      "description" : "ICBFeHBsYW5hdGlvbjogIEFsbCB0aGUgYWJvdmUgc3RhdGVtZW50cyBoYXZlIGJlZW4gIHByb3ZpZGVkIGluIHRoZSBSdWxlcyBvZiBQcm9jZWR1cmUgYW5kICBDb25kdWN0IG9mIEJ1c2luZXNzIGluIHRoZSBMb2sgU2FiaGEuICBSdWxlIDU2OiBTdWJqZWN0IHRvIHRoZSBwcm92aXNpb25zIG9mIHRoZXNlICBSdWxlcywgYSBtb3Rpb24gZm9yIGFuIGFkam91cm5tZW50IG9mIHRoZSAgYnVzaW5lc3Mgb2YgdGhlIEhvdXNlIGZvciB0aGUgcHVycG9zZSBvZiAgZGlzY3Vzc2luZyBhIGRlZmluaXRlIG1hdHRlciBvZiB1cmdlbnQgIHB1YmxpYyBpbXBvcnRhbmNlIG1heSBiZSBtYWRlIHdpdGggdGhlICBjb25zZW50IG9mIHRoZSBTcGVha2VyLiAgIFJ1bGUgODogVGhlIGVsZWN0aW9uIG9mIHRoZSBEZXB1dHkgIFNwZWFrZXIgc2hhbGwgYmUgaGVsZCBvbiBzdWNoIGRhdGUgYXMgIHRoZSBTcGVha2VyIG1heSBmaXgsIGFuZCB0aGUgU2VjcmV0YXJ5LSBHZW5lcmFsIHNoYWxsIHNlbmQgdG8gZXZlcnkgbWVtYmVyICBub3RpY2Ugb2YgdGhpcyBkYXRlLiAgIFJ1bGUgNDMgLSBTcGVha2VyIHRvIGRlY2lkZSAgYWRtaXNzaWJpbGl0eTogVGhlIFNwZWFrZXIgc2hhbGwgZGVjaWRlICB3aGV0aGVyIGEgcXVlc3Rpb24sIG9yIGEgcGFydCB0aGVyZW9mLCBpcyBvciAgaXMgbm90IGFkbWlzc2libGUgdW5kZXIgdGhlc2UgUnVsZXMgYW5kICBtYXkgZGlzYWxsb3cgYW55IHF1ZXN0aW9uLCBvciBhIHBhcnQgIHRoZXJlb2YsIHdoZW4gaW4gdGhlIG9waW5pb24gb2YgdGhlIFNwZWFrZXIsICBpdCBpcyBhbiBhYnVzZSBvZiB0aGUgcmlnaHQgb2YgcXVlc3Rpb25pbmcgb3IgIGlzIGNhbGN1bGF0ZWQgdG8gb2JzdHJ1Y3Qgb3IgcHJlanVkaWNpYWxseSAgYWZmZWN0IHRoZSBwcm9jZWR1cmUgb2YgdGhlIEhvdXNlIG9yIGlzIGluICBjb250cmF2ZW50aW9uIG9mIHRoZXNlIFJ1bGVzLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only",
        "option2" : " 3 only",
        "option3" : " 2 only",
        "option4" : " 1 and 3 only"
      }
    },
    {
      "index" : 21,
      "question" : "With reference to the conduct of Census inIndia, consider the following statements:1. The Government conducts Censusunder the Census Act, 1948, in threephases of House-listing, HousingCensus and Population Enumeration,one followed by the other.2. Separate enumeration takes place during the Census for the castes and the tribes, which are specifically notified as the Scheduled Castes, the Scheduled Tribes and Other Backward Class.  3. Responsibility of conducting decennialCensus rests with the Office of RegistrarGeneral and Census Commissioner,under the Ministry of Statistics andProgramme Implementation.Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDIx",
      "description" : "ICBFeHBsYW5hdGlvbjogIENvbmR1Y3Qgb2YgQ2Vuc3VzOiAg74K3IENlbnN1cyBleGVyY2lzZSBpcyBjYXJyaWVkIG91dCBpbiB0d28gIHBoYXNlczogSG91c2UtbGlzdGluZyAmIEhvdXNpbmcgIENlbnN1czsgYW5kIFBvcHVsYXRpb24gRW51bWVyYXRpb24uICAg74K3IFRoZSByZXNwb25zaWJpbGl0eSBvZiBjb25kdWN0aW5nICBkZWNlbm5pYWwgQ2Vuc3VzIHJlc3RzIHdpdGggdGhlICBPZmZpY2Ugb2YgUmVnaXN0cmFyIEdlbmVyYWwgYW5kICBDZW5zdXMgQ29tbWlzc2lvbmVyLCB1bmRlciB0aGUgIE1pbmlzdHJ5IG9mIEhvbWUgQWZmYWlycy4gICDvgrcgVGhlIENlbnN1cyBBY3QsIDE5NDgsIHByb3ZpZGVzICBzdGF0dXRvcnkgZnJhbWV3b3JrIHRvIGl0LiAgRmlyc3QgUGhhc2UgLSBIb3VzZS1saXN0aW5nIGFuZCBIb3VzaW5nICBDZW5zdXM6ICDvgrcgRHVyaW5nIEhvdXNlLWxpc3RpbmcgYW5kIEhvdXNpbmcgIENlbnN1cywgYWxsIGJ1aWxkaW5ncywgQ2Vuc3VzIEhvdXNlcyAgYW5kIGhvdXNlaG9sZHMgYXJlIGlkZW50aWZpZWQgYW5kICBzeXN0ZW1hdGljYWxseSBsaXN0ZWQgaW4gdGhlIHJlbGV2YW50ICBzY2hlZHVsZXMuICAg74K3IEl0IHByb3ZpZGVzIGNvbXByZWhlbnNpdmUgZGF0YSBvbiB0aGUgIGNvbmRpdGlvbnMgb2YgaHVtYW4gc2V0dGxlbWVudHMsICBob3VzaW5nIGRlZmljaXQgYW5kIGNvbnNlcXVlbnRseSB0aGUgIGhvdXNpbmcgcmVxdWlyZW1lbnRzIHRvIGJlIHRha2VuIGNhcmUgIG9mIGluIHRoZSBmb3JtdWxhdGlvbiBvZiBob3VzaW5nICBwb2xpY2llcy4gICDvgrcgVGhpcyBhbHNvIHByb3ZpZGVzIGEgd2lkZSByYW5nZSBvZiAgZGF0YS9pbmZvcm1hdGlvbiBvbiBhbWVuaXRpZXMgYW5kICBhc3NldHMgYXZhaWxhYmxlIHRvIHRoZSBob3VzZWhvbGRzLiAgIO+CtyBJdCBhbHNvIHByb3ZpZGVzIHRoZSBiYXNlIGZvciBQb3B1bGF0aW9uICBFbnVtZXJhdGlvbiBieSBnaXZpbmcgYSBtb3JlIHJlYWxpc3RpYyAgaWRlYSBvZiB0aGUgcG9wdWxhdGlvbiBzaXplIG9mIHRoZSBIb3VzZS0gbGlzdGluZyBibG9ja3MsIHRoZXJlYnkgZW5zdXJpbmcgdGhlICBtb3JlIHByYWN0aWNhbCBjYXJ2aW5nIG9mIHRoZSBibG9ja3MgZm9yICBQb3B1bGF0aW9uIEVudW1lcmF0aW9uLiAgIFNlY29uZCBQaGFzZSAtIFBvcHVsYXRpb24gRW51bWVyYXRpb246ICDvgrcgVGhlIFBvcHVsYXRpb24gRW51bWVyYXRpb24gZm9sbG93cyB0aGUgIEhvdXNpbmcgQ2Vuc3VzIHdpdGhpbiBhIGdhcCBvZiBzaXggdG8gIGVpZ2h0IG1vbnRocy4gIO+CtyBEdXJpbmcgdGhlIHNlY29uZCBwaGFzZSBvZiBDZW5zdXMgIHRha2luZywgZWFjaCBwZXJzb24gaXMgZW51bWVyYXRlZCBhbmQgIGhlci9oaXMgaW5kaXZpZHVhbCBwYXJ0aWN1bGFycywgbGlrZSAgIG8gQWdlICBvIE1hcml0YWwgc3RhdHVzICBvIFJlbGlnaW9uICBvIFNjaGVkdWxlZCBDYXN0L1NjaGVkdWxlZCBUcmliZSAgbyBNb3RoZXIgdG9uZ3VlICBvIEVkdWNhdGlvbiBsZXZlbCAgbyBEaXNhYmlsaXR5ICBvIEVjb25vbWljIGFjdGl2aXR5ICBvIE1pZ3JhdGlvbiAgbyBGZXJ0aWxpdHkgICAgU2VwYXJhdGUgRW51bWVyYXRpb24gZm9yIHRoZSBTQ3MvU1RzOiAgSW4gQ2Vuc3VzLCBjYXN0ZXMgYW5kIHRyaWJlcywgd2hpY2ggYXJlICBzcGVjaWZpY2FsbHkgbm90aWZpZWQgYXMgdGhlIFNjaGVkdWxlZCAgQ2FzdGVzIGFuZCB0aGUgU2NoZWR1bGVkIFRyaWJlcywgYXMgcGVyICB0aGUgQ29uc3RpdHV0aW9uIChTY2hlZHVsZWQgQ2FzdGVzKSAgT3JkZXIgMTk1MCBhbmQgdGhlIENvbnN0aXR1dGlvbiAgKFNjaGVkdWxlZCBUcmliZXMpIE9yZGVyLCAxOTUwLCBhcmUgIGVudW1lcmF0ZWQgc2VwYXJhdGVseS4gSG93ZXZlciwgT0JDcyAgYXJlIG5vdCBlbnVtZXJhdGVkIHNlcGFyYXRlbHkgYXMgcGFydCAgb2YgdGhlIENlbnN1cy4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 2 only",
        "option2" : " 1 and 3 only",
        "option3" : " 1 and 2 only",
        "option4" : " None of the above "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following pairs:S.N. Terms of theConstitution Provision 1. Remission It affects both the punishment prescribed for the offence and the guilt of the offender, and may completely erase the guilt. 2. Commutation Temporarysuspension of the punishment awarded by a court of law. 3. Pardon Changing the punishment from one category to another, such as changing of the death sentence to life imprisonment.  How many pairs given above is/are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDIy",
      "description" : "ICBFeHBsYW5hdGlvbjogIEltcG9ydGFudCBUZXJtczogIO+CtyBJbiAnUGFyZG9uJywgaXQgYWZmZWN0cyBib3RoIHRoZSAgcHVuaXNobWVudCBwcmVzY3JpYmVkIGZvciB0aGUgb2ZmZW5jZSAgYW5kIHRoZSBndWlsdCBvZiB0aGUgb2ZmZW5kZXIuIEEgZnVsbCAgcGFyZG9uIG1heSBjb21wbGV0ZWx5IGVyYXNlIHRoZSBndWlsdC4gICDvgrcgJ1JlcHJpZXZlJyBtZWFucyBhIHRlbXBvcmFyeSAgc3VzcGVuc2lvbiBvZiB0aGUgcHVuaXNobWVudCBhd2FyZGVkICBieSBhIGNvdXJ0IG9mIGxhdy4gRm9yIGV4YW1wbGU6IFB1dHRpbmcgIGEgc3RheSBvcmRlciBvbiBkZWF0aCBzZW50ZW5jZSBvZiBhICBjb252aWN0IGZvciBjZXJ0YWluIHRlbXBvcmFyeSBwZXJpb2QuICAg74K3ICdSZXNwaXRlJyBtZWFucyBwb3N0cG9uZW1lbnQgb2YgdGhlICBzZW50ZW5jZSBvZiBwdW5pc2htZW50IG9yIHJlZHVjaW5nIHRoZSAgc2VudGVuY2UgZHVlIHRvIGNlcnRhaW4gc3BlY2lhbCAgY2lyY3Vtc3RhbmNlcywgc3VjaCBhcyBkaXNhYmlsaXR5LCAgcHJlZ25hbmN5IGV0Yy4gICDvgrcgJ0NvbW11dGF0aW9uJyBtZWFucyBjaGFuZ2luZyB0aGUgIHB1bmlzaG1lbnQgZnJvbSBvbmUgY2F0ZWdvcnkgdG8gIGFub3RoZXIsIHN1Y2ggYXMgY2hhbmdpbmcgb2YgdGhlIGRlYXRoICBzZW50ZW5jZSB0byBsaWZlIGltcHJpc29ubWVudC4gICDvgrcgJ1JlbWlzc2lvbicgaXMgdGhlIHJlZHVjdGlvbiBvZiB0aGUgIGFtb3VudCBvZiBhIHNlbnRlbmNlIHdpdGhvdXQgY2hhbmdpbmcgIGl0cyBjaGFyYWN0ZXIuIEV4YW1wbGU6IEEgcGVyc29uIGlzICBpbXByaXNvbmVkIGZvcjE0IHllYXJzIGluIHNvbGl0YXJ5ICBjb25maW5lbWVudC4gSW4gUmVtaXNzaW9uLCBoaXMgc2VudGVuY2UgIG1pZ2h0IHJlZHVjZSB0byAxMCB5ZWFycywgYnV0IHRoZSAgbmF0dXJlLCBpLmUuLCBzb2xpdGFyeSBjb25maW5lbWVudCB3aWxsICBub3QgY2hhbmdlLiAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " Only one pair",
        "option2" : " Only two pairs",
        "option3" : " All three pairs",
        "option4" : " None of the pairs"
      }
    },
    {
      "index" : 23,
      "question" : "Which of the following constitutional orlegal provisions protect and safeguard theland rights of the Scheduled Tribes andaddress their land acquisition ordisplacement issues and problems?1. The Fifth Schedule to the IndianConstitution.2. The Scheduled Tribes and OtherTraditional Forest Dwellers (Recognitionof Forest Rights) Act, 2006.3. The Right to Fair Compensation andTransparency in Land Acquisition,Rehabilitation and Resettlement Act,2013.4. The Panchayats (Extension to Scheduled Areas) Act, 1996. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDIz",
      "description" : "ICBFeHBsYW5hdGlvbjogIENvbnN0aXR1dGlvbmFsIGFuZCBMZWdhbCBQcm92aXNpb25zICBhZ2FpbnN0IExhbmQgQWNxdWlzaXRpb24gb2YgdGhlIFRyaWJhbHM6ICBUaGUgU2NoZWR1bGVkIFRyaWJlcyAoU1RzKSBoYXZlIGJlZW4gdGhlICBtb3N0IG1hcmdpbmFsaXplZCwgaXNvbGF0ZWQgYW5kIGRlcHJpdmVkICBwb3B1bGF0aW9uLiBUbyBwcm90ZWN0IGFuZCBzYWZlZ3VhcmQgdGhlICBsYW5kIHJpZ2h0cyBvZiB0aGUgU1RzLCBhbmQgdG8gYWRkcmVzcyB0aGUgIGlzc3VlIG9mIGxhbmQgYWNxdWlzaXRpb24gYW5kIGRpc3BsYWNlbWVudCAgb2YgdGhlIHRyaWJhbHMsIHRoZSBmb2xsb3dpbmcgY29uc3RpdHV0aW9uYWwgIGFuZCBsZWdhbCBwcm92aXNpb25zIGhhdmUgYmVlbiBwdXQgaW4gcGxhY2U6ICBUaGUgQ29uc3RpdHV0aW9uIG9mIEluZGlhIC0gVW5kZXIgdGhlICBGaWZ0aCBTY2hlZHVsZTogVGhlIEdvdmVybm9yIG9mIHRoZSBTdGF0ZSwgIHdoaWNoIGhhcyBTY2hlZHVsZWQgQXJlYXMsIGlzIGVtcG93ZXJlZCAgdG8gcHJvaGliaXQgb3IgcmVzdHJpY3QgdGhlIHRyYW5zZmVyIG9mIGxhbmQgIGZyb20gdGhlIHRyaWJhbHMgYW5kIHJlZ3VsYXRlIHRoZSBhbGxvdG1lbnQgIG9mIHRoZSBsYW5kIHRvIHRoZSBtZW1iZXJzIG9mIHRoZSAgU2NoZWR1bGVkIHRyaWJlcy4gICBMYW5kIGJlaW5nIGEgU3RhdGUgc3ViamVjdCwgdmFyaW91cyAgcHJvdmlzaW9ucyBvZiByZWhhYmlsaXRhdGlvbiBhbmQgIHJlc2V0dGxlbWVudCwgYXMgcGVyIHRoZSBSRkNUTEFSUiBBY3QsICAyMDEzIChUaGUgUmlnaHQgdG8gRmFpciBDb21wZW5zYXRpb24gYW5kICBUcmFuc3BhcmVuY3kgaW4gTGFuZCBBY3F1aXNpdGlvbiwgIFJlaGFiaWxpdGF0aW9uIGFuZCBSZXNldHRsZW1lbnQgQWN0LCAyMDEzKSwgIGFyZSBpbXBsZW1lbnRlZCBieSB0aGUgY29uY2VybmVkIFN0YXRlICBHb3Zlcm5tZW50cy4gICBUaGUgU2NoZWR1bGVkIFRyaWJlcyBhbmQgT3RoZXIgIFRyYWRpdGlvbmFsIEZvcmVzdCBEd2VsbGVycyAoUmVjb2duaXRpb24gIG9mIEZvcmVzdCBSaWdodHMpIEFjdCwgMjAwNjogIO+CtyBBIG1lbWJlciBvZiB0aGUgZm9yZXN0IGR3ZWxsaW5nICBTY2hlZHVsZWQgVHJpYmUgb3IgT3RoZXIgVHJhZGl0aW9uYWwgIEZvcmVzdCBEd2VsbGVyIHNoYWxsIG5vdCBiZSBldmljdGVkIG9yICByZW1vdmVkIGZyb20gdGhlIGZvcmVzdCBsYW5kIHVuZGVyIGhpcyAgb2NjdXBhdGlvbiwgdGlsbCB0aGUgcmVjb2duaXRpb24gYW5kICB2ZXJpZmljYXRpb24gcHJvY2VkdXJlIGlzIGNvbXBsZXRlLiAg74K3IFRoZSBHcmFtIFNhYmhhIGlzIGVtcG93ZXJlZCB0byAgcmVndWxhdGUgYWNjZXNzIHRvIHRoZSBjb21tdW5pdHkgZm9yZXN0ICByZXNvdXJjZXMgYW5kIHN0b3AgYW55IGFjdGl2aXR5IHdoaWNoICBhZHZlcnNlbHkgYWZmZWN0cyB0aGUgd2lsZCBhbmltYWxzLCAgZm9yZXN0IGFuZCB0aGUgYmlvZGl2ZXJzaXR5LiAgVGhlIFJpZ2h0IHRvIEZhaXIgQ29tcGVuc2F0aW9uIGFuZCAgVHJhbnNwYXJlbmN5IGluIExhbmQgQWNxdWlzaXRpb24sICBSZWhhYmlsaXRhdGlvbiBhbmQgUmVzZXR0bGVtZW50IEFjdCwgIDIwMTMgKFRoZSBSRkNUTEFSUiBBY3QsIDIwMTMpOiAg74K3IFNlY3Rpb24gNDg6IFRoZSBOYXRpb25hbCBMZXZlbCAgTW9uaXRvcmluZyBDb21taXR0ZWUgZm9yIFJlaGFiaWxpdGF0aW9uICBhbmQgUmVzZXR0bGVtZW50IGhhcyBiZWVuIGNvbnN0aXR1dGVkICB0byByZXZpZXcgYW5kIG1vbml0b3IgaW1wbGVtZW50YXRpb24gIG9mIHJlaGFiaWxpdGF0aW9uIGFuZCByZXNldHRsZW1lbnQgIHNjaGVtZXMgYW5kIHBsYW5zIHJlbGF0ZWQgdG8gbGFuZCAgYWNxdWlzaXRpb24gdW5kZXIgdGhlIFJGQ1RMQVJSIEFjdCwgIDIwMTM7IGFuZCB0aGUgTmF0aW9uYWwgUmVoYWJpbGl0YXRpb24gIGFuZCBSZXNldHRsZW1lbnQgUG9saWN5LCAyMDA3LiAg74K3IFNlY3Rpb24gNDEgKDEpOiBBcyBmYXIgYXMgcG9zc2libGUsIG5vICBhY3F1aXNpdGlvbiBvZiBsYW5kIHNoYWxsIGJlIG1hZGUgaW4gdGhlICBTY2hlZHVsZWQgQXJlYXMuICAg74K3IFNlY3Rpb24gNDEoMik6IEFueSBsYW5kIGFjcXVpc2l0aW9uICBzaGFsbCBiZSBkb25lIG9ubHkgYXMgYSBkZW1vbnN0cmFibGUgIGxhc3QgcmVzb3J0LiAgIO+CtyBTZWN0aW9uIDQxKDMpOiBJbiB0aGUgY2FzZSBvZiBhY3F1aXNpdGlvbiAgb3IgYWx0ZXJuYXRpb24gb2YgYW55IGxhbmQgaW4gdGhlICBTY2hlZHVsZWQgQXJlYXMsIHRoZSBwcmlvciBjb25zZW50IG9mICB0aGUgY29uY2VybmVkIEdyYW0gU2FiaGEgb3IgdGhlICBQYW5jaGF5YXRzIG9yIHRoZSBBdXRvbm9tb3VzIERpc3RyaWN0ICBDb3VuY2lscyBpbiB0aGUgU2NoZWR1bGVkIEFyZWFzIHVuZGVyICB0aGUgRmlmdGggU2NoZWR1bGUgdG8gdGhlIENvbnN0aXR1dGlvbiAgYmUgb2J0YWluZWQsIGluIGFsbCBjYXNlcyBvZiBsYW5kICBhY3F1aXNpdGlvbiBpbiBzdWNoIGFyZWFzLCBpbmNsdWRpbmcgIGFjcXVpc2l0aW9uIGluIGNhc2Ugb2YgdXJnZW5jeS4gICBUaGUgUGFuY2hheWF0cyAoRXh0ZW5zaW9uIHRvIFNjaGVkdWxlZCAgQXJlYXMpIEFjdCwgMTk5NjogVGhlIEdyYW0gU2FiaGEgb3IgdGhlICBQYW5jaGF5YXRzIGF0IHRoZSBhcHByb3ByaWF0ZSBsZXZlbCBzaGFsbCBiZSAgY29uc3VsdGVkIGJlZm9yZSBtYWtpbmcgdGhlIGFjcXVpc2l0aW9uIG9mICBsYW5kIGluIHRoZSBTY2hlZHVsZWQgQXJlYXMgZm9yICBkZXZlbG9wbWVudCBwcm9qZWN0cyBhbmQgYmVmb3JlIHJlc2V0dGxpbmcgIG9yIHJlaGFiaWxpdGF0aW5nIHRoZSBwZXJzb25zIGFmZmVjdGVkIGJ5ICBzdWNoIHByb2plY3RzIGluIHRoZSBTY2hlZHVsZWQgQXJlYXMuICAgVGhlIFNjaGVkdWxlZCBDYXN0ZXMgYW5kIHRoZSBTY2hlZHVsZWQgIFRyaWJlcyAoUHJldmVudGlvbiBvZiBBdHJvY2l0aWVzKSBBY3QsICAxOTg5OiAg74K3IEl0IHByZXZlbnRzIGNvbW1pc3Npb24gb2YgYXRyb2NpdGllcyAgYWdhaW5zdCB0aGUgbWVtYmVycyBvZiB0aGUgU2NoZWR1bGVkICBDYXN0ZXMgYW5kIHRoZSBTY2hlZHVsZWQgVHJpYmVzLCB0byAgcHJvdmlkZSBmb3IgdGhlIHRyaWFsIG9mIHN1Y2ggb2ZmZW5jZXMgYW5kICBmb3IgdGhlIHJlbGllZiBvZiByZWhhYmlsaXRhdGlvbiBvZiB0aGUgIHZpY3RpbXMgb2Ygc3VjaCBvZmZlbmNlcy4gICDvgrcgV3JvbmdmdWxseSBkaXNwb3NzZXNzaW5nIHRoZSBtZW1iZXJzICBvZiB0aGUgU2NoZWR1bGVkIENhc3RlcyBvciB0aGUgIFNjaGVkdWxlZCBUcmliZXMgZnJvbSB0aGVpciBsYW5kIG9yICBlbmhhbmNpbmcgbGl2ZWxpaG9vZCBzZWN1cml0eSBpbiB0aGUgcnVyYWwgIGFyZWFzIGJ5IHByb3ZpZGluZyBhdCBsZWFzdCAxMDAgZGF5cyBvZiAgZ3VhcmFudGVlZCB3YWdlIGVtcGxveW1lbnQgaW4gYSBmaW5hbmNpYWwgIHllYXIsIHRvIGV2ZXJ5IGhvdXNlaG9sZCwgd2hvc2UgYWR1bHQgIG1lbWJlcnMgdm9sdW50ZWVyIHRvIGRvIHVuc2tpbGxlZCBtYW51YWwgIHdvcmsuICBGZWF0dXJlcyBvZiBNR05SRUdBOiAg4oCiICgtKSBQcm92aXNpb24gb2Ygbm90IGxlc3MgdGhhbiBvbmUgaHVuZHJlZCBkYXlzIG9mIHVuc2tpbGxlZCBtYW51YWwgd29yayBhcyAgZ3VhcmFudGVlZCBlbSBsbyBlbnQgaW4gIHllYXIgdG8gZXZlIGkgIGFyZWFzIGFzIHBlciAxaWxnIGUgIGNyZWF0aW9uIG9mIF9fLi4uLi0tLSAtIGFzc2V0cyBvZiAgcHJlc2NyaWJlZCBxICBMIDo7LmlpICAgYmlsaXR5LiAgUHJvdmlzaW9uICBBbGxvd2FuY2UnLCBpZiBhbiBhcHBsaWNhbnQgMXMgbm90ICBlbSBwbGF5ZWQgd2l0aGluIDE1IGRheXMgb2YgdGhlIHJlY2VpcHQgIG9mIGhpcyBhcHBsaWNhdGlvbi4gICgtKUNvbXBlbnNhdGlvbiBmb3IgZGVsYXkgaW4gcGF5bWVudHMgb2YgbW9yZSB0aGFuIDE1IGRheXMgZnJvbSB0aGUgZGF0ZSBvZiBjbG9zdXJlIG9mIHRoZSBNdXN0ZXIgUm9sbCwgaW4gcGF5bWVudHMgb2Ygd2FnZXMgaXMgcGFpZCB0byB0aGUgd29ya2Vycy4gKC0pVGhlIEdyYW0gU2FiaGEgc2hhbGwgY29uZHVjdCByZWd1bGFyIHNvY2lhbCBhdWRpdHMgb2YgYWxsIHRoZSBwcm9qZWN0cyB1bmRlciB0aGUgc2NoZW1lIHRha2VuIHVwIHdpdGhpbiB0aGUgR3JhbSBQYW5jaGF5YXQu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 2, 3 and 4 only",
        "option2" : " 1, 2 and 3 only",
        "option3" : " 1, 3 and 4 only",
        "option4" : " 1, 2, 3 and 4"
      }
    },
    {
      "index" : 27,
      "question" : "Consider the following statements:1. The National Mobile MonitoringSoftware (NMMS) App is applicable for the Mahatma Gandhi NREGA workersfor all the States/Union Territories.2. The main feature of the NMMS App isthe real-time, photographed, geo-taggedattendance of every worker to be takenonce a day.Which of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDI3",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgTmF0aW9uYWwgTW9iaWxlIE1vbml0b3JpbmcgU29mdHdhcmUgKE5NTVMpIEFwcCB3YXMgbGF1bmNoZWQgYnkgdGhlIE1pbmlzdGVyIG9mIFJ1cmFsIERldmVsb3BtZW50IGluIDIwMjEuIFRoaXMgQXBwIGlzIGFpbWVkIGF0IGJyaW5naW5nIG1vcmUgdHJhbnNwYXJlbmN5IGFuZCBlbnN1cmluZyBwcm9wZXIgbW9uaXRvcmluZyBvZiB0aGUgc2NoZW1lcy4gVGhlIE5NTVMgQXBwIHBlcm1pdHMgdGFraW5nIHJlYWwgdGltZSBhdHRlbmRhbmNlIG9mIHRoZSB3b3JrZXJzIGF0IHRoZSBNYWhhdG1hIEdhbmRoaSBOUkVHQSB3b3Jrc2l0ZXMsIGFsb25nIHdpdGggZ2VvLSB0YWdnZWQgcGhvdG9ncmFwaHMuIFRoZSBBcHAgaGVscHMgaW4gaW5jcmVhc2luZyBjaXRpemVuIG92ZXJzaWdodCBvZiB0aGUgcHJvZ3JhbW1lLiBUaGUgTmF0aW9uYWwgTW9iaWxlIE1vbml0b3JpbmcgQXBwIGlzIGFwcGxpY2FibGUgZm9yIHRoZSBNYWhhdG1hIEdhbmRoaSBOUkVHQSAgd29ya2VycyBmb3IgYWxsIHRoZSBTdGF0ZXMvVW5pb24gVGVycml0b3JpZXMuIFRoZSBtYWluIGZlYXR1cmUgb2YgdGhlIEFwcCBpcyB0aGUgcmVhbC0gdGltZSwgcGhvdG9ncmFwaGVkLCBnZW8tdGFnZ2VkIGF0dGVuZGFuY2Ugb2YgZXZlciB5ICB3b3JrZXIgdG8gYmUgdGFrZW4gIG9uY2UgaW4gZWFjaCBoYWxmIG9mIHRoZSBkYXkuIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 29,
      "question" : "-Vi : °  ti> 0the Global Gender Gap r{£ ep<ij\"t.} \"- 2022, consider the following s -s, Os atements:1. The Report has taken into account theparticipation of women at thePanchayat level to rank the countries.2. The Report is published by the World Economic Forum (WEF). Which of the statements given above is/ are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDI5",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgR2xvYmFsIEdlbmRlciBHYXAgSW5kZXgsIDIwMjIsIHB1Ymxpc2hlZCBieSB0aGUgV29ybGQgRWNvbm9taWMgRm9ydW0sIGJlbmNobWFya3MgdGhlIGN1cnJlbnQgc3RhdGUgYW5kIGV2b2x1dGlvbiBvZiBnZW5kZXIgcGFyaXR5IGFjcm9zcyBmb3VyIGtleSBkaW1lbnNpb25zOiAoLSlFY29ub21pYyBPcHBvcnR1bml0eSBQYXJ0aWNpcGF0aW9uICAoLSlFZHVjYXRpb25hbCBBdHRhaW5tZW50ICgtKUhlYWx0aCBhbmQgU3Vydml2YWwgKC0pUG9saXRpY2FsIEVtcG93ZXJtZW50IGFuZCAgUkEgVVNJQVMtMDAwNiAxMSAgIO+CtyAnRGlzcHV0ZXMnIGFyZSB0byBiZSByZWZlcnJlZCB0byBhIHNldmVuLSBtZW1iZXIgYXJiaXRyYWwgdHJpYnVuYWwsIGNhbGxlZCB0aGUgICdDb3VydCBvZiBBcmJpdHJhdGlvbi4nICAgR2VuZXJhdGlvbiBvZiBoeWRyb2VsZWN0cmljIHBvd2VyOiAgSG93ZXZlciwgdGhlIFRyZWF0eSBkb2VzIG5vdCBhbGxvdyB0aGUgIGNyZWF0aW9uIG9mIGxhcmdlIHJpdmVyIHdhdGVyIHN0b3JhZ2UgIHByb2plY3RzLCBidXQgb25seSBydW4tb2YtdGhlLXJpdmVyICBoeWRyb3Bvd2VyIHByb2plY3RzLiAgUHJldmVudHMgc3RvcmFnZSBwcm9qZWN0cyBieSBJbmRpYTogVGhlICBJV1QgcHJldmVudHMgSW5kaWEgZnJvbSBidWlsZGluZyBhbnkgIHN0b3JhZ2Ugc3lzdGVtcyBvbiB0aGUgd2VzdGVybiByaXZlcnMuICBFeGFtcGxlOiBPYmplY3Rpb25zIHRvIHRoZSBLaXNoYW5nYW5nYSAgSHlkcm9lbGVjdHJpYyBQcm9qZWN0LiAgSW5kaWEgaXMgYWxsb3dlZCB0byBtYWtlIHNvbWUgdXNlIG9mIHRoZSAgd2F0ZXJzIG9mIHRoZSB3ZXN0ZXJuIHJpdmVycywgd2hpY2ggaW5jbHVkZTogIEFncmljdWx0dXJhbCBVc2U6IFVzZSBvZiB3YXRlciBmb3IgIGlycmlnYXRpb24sIGV4Y2VwdCBmb3IgaXJyaWdhdGlvbiBvZiAgaG91c2Vob2xkIGdhcmRlbnMgYW5kIHB1YmxpYyAgcmVjcmVhdGlvbmFsIGdhcmRlbnMuICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements withreference to Shukrayaan:1. Shukrayaan is a collaborative missionto Venus by the Indian Space ResearchOrganization and the NationalAeronautics & Space Administration.2. It consists of a Venusian Neutrals Analyzer that will examine how charged particles from the Sun interact with the atmosphere of VWhich of the sta a correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDM5",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBTaHVrcmF5YWFuIEkgd2lsbCBiZSBhbiBvcmJpdGVyICBtaXNzaW9uIGJ5IHRoZSBJbmRpYW4gU3BhY2UgIFJlc2VhcmNoIE9yZ2FuaXphdGlvbiAoSVNSTykgdG8gIHN0dWR5IHRoZSBzdXJmYWNlIGFuZCBhdG1vc3BoZXJlIG9mICBWZW51cy4gSXQgd2lsbCBzdHVkeSB0aGUgcGxhbmV0IGZvciBmb3VyICB5ZWFycy4gU2h1a3JheWFhbiB3YXMgZXhwZWN0ZWQgdG8gYmUgIGxhdW5jaGVkIGluIDIwMjQsIGJ1dCBub3cgaXMgcG9zdHBvbmVkICB0byAyMDMxLiAg74K3IFRoZSBtaXNzaW9uIHdpbGwgc3R1ZHkgVmVudXMncyAgZ2VvbG9naWNhbCBhbmQgdm9sY2FuaWMgYWN0aXZpdHksICBlbWlzc2lvbnMgb24gdGhlIGdyb3VuZCwgd2luZCBzcGVlZCwgIGNsb3VkIGNvdmVyIGFuZCBvdGhlciBwbGFuZXRhcnkgIGNoYXJhY3RlcmlzdGljcyBmcm9tIGFuIGVsbGlwdGljYWwgb3JiaXQuICDvgrcgVGhlIHNwYWNlY3JhZnQgd2lsbCBjYXJyeSBzZXZlcmFsICBpbnN0cnVtZW50cyB0byBwcm9iZSB0aGUgVmVudXNpYW4gIGVudmlyb25tZW50LiAgbyBTeW50aGV0aWMgQXBlcnR1cmUgUmFkYXIgd2lsbCAgZXhhbWluZSB0aGUgVmVudXNpYW4gc3VyZmFjZSwgIHdoaWNoIGlzIHN1cnJvdW5kZWQgYnkgdGhpY2sgY2xvdWRzICB0aGF0IG1ha2UgaXQgaW1wb3NzaWJsZSB0byBnbGltcHNlICB0aGUgc3VyZmFjZSBpbiB2aXNpYmxlIGxpZ2h0LiAgbyBWZW51c2lhbiBOZXV0cmFscyBBbmFseXplciAgKFN3ZWRpc2gtSW5kaWFuIGNvbGxhYm9yYXRpb24pIHdpbGwgIGV4YW1pbmUgaG93IGNoYXJnZWQgcGFydGljbGVzIGZyb20gIHRoZSBTdW4gaW50ZXJhY3Qgd2l0aCB0aGUgIGF0bW9zcGhlcmUgb2YgVmVudXMuICBvIEFuIGluc3RydW1lbnQgdG8gVmVudXMgd2lsbCAgZXhhbWluZSB0aGUgcGxhbmV0J3MgYXRtb3NwaGVyZSBpbiAgaW5mcmFyZWQsIHVsdHJhdmlvbGV0IGFuZCAgc3VibWlsbGltZXRyZSB3YXZlbGVuZ3Rocy4gICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2  \"' ar  "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following statements withreference to the Aditya-Ll Mission:1. The Mission to observe the Sun will belaunched to the first Lagrangian Pointof the Sun-Earth System.2. Solar Ultraviolet Imaging Telescope isan instrument on board the Mission to study the Sun's corona.Which of the statements given above is/  are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQw",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBBZGl0eWEtTDEgaXMgdGhlIGZpcnN0IEluZGlhbiBTcGFjZSAgTWlzc2lvbiB0byBvYnNlcnZlIHRoZSBTdW4gYW5kIHRoZSAgc29sYXIgY29yb25hLiBJdCB3aWxsIG9ic2VydmUgU3VuJ3MgIHBob3Rvc3BoZXJlLCBjaHJvbW9zcGhlcmUgYW5kICBjb3JvbmEuIFRoZSBJbmRpYW4gU3BhY2UgUmVzZWFyY2ggIE9yZ2FuaXphdGlvbiBpcyBwbGFubmluZyB0byBsYXVuY2ggdGhlICBNaXNzaW9uIGJ5IG1pZC0gMjAyMy4gIO+CtyBUaGUgTWlzc2lvbiB3aWxsIGJlIGxhdW5jaGVkIHRvIHRoZSBMMSAgb3JiaXQgKHdoaWNoIGlzIHRoZSBmaXJzdCBMYWdyYW5naWFuIFBvaW50ICBvZiB0aGUgU3VuLUVhcnRoIFN5c3RlbSksIHdoaWNoIGlzIDEuNSAgbWlsbGlvbiBrbXMgZnJvbSB0aGUgRWFydGggdG93YXJkcyB0aGUgIFN1bi4gIO+CtyBBZGl0eWEtTDEgaGFzIHNldmVuIHBheWxvYWRzIGluICB0b3RhbCwgb2Ygd2hpY2ggdGhlIHByaW1hcnkgcGF5bG9hZCBpcyAgdGhlIFZpc2libGUgRW1pc3Npb24gTGluZSAgQ29yb25hZ3JhcGggKFZFTEMpLCB3aGljaCBpcyBhbiAgaW5zdHJ1bWVudCB0byBzdHVkeSB0aGUgU3VuJ3MgIGNvcm9uYS4gSXQgY2FuIGltYWdlIHRoZSBzb2xhciBjb3JvbmEgIGFzIGNsb3NlIHRvIHRoZSBzb2xhciBkaXNrIChhcyBjbG9zZSBhcyAgMS4wNSB0aW1lcyB0aGUgc29sYXIgcmFkaXVzKS4gIO+CtyBTaWduaWZpY2FuY2U6IEFkaXR5YS1MMSB3b3VsZCBoZWxwIGluICB1bmRlcnN0YW5kaW5nIHRoZSBlZmZlY3Qgb2YgdGhlIFN1biBvbiAgdGhlIEVhcnRoIGFuZCBpdHMgc3Vycm91bmRpbmdzLiBJdCAgd291bGQgc3R1ZHkgc29sYXIgdXBwZXIgYXRtb3NwaGVyaWMgIChjaHJvbW9zcGhlcmUgYW5kIGNvcm9uYSkgZHluYW1pY3MgIGFuZCB1bmRlcnN0YW5kIHRoZSBwaHlzaWNzIG9mIHNvbGFyICBjb3JvbmEgYW5kIGl0cyBoZWF0aW5nIG1lY2hhbmlzbS4gSXQgIHdvdWxkIGhlbHAgaW4gdW5kZXJzdGFuZGluZyBjb3JvbmFsICBtYXNzIGVqZWN0aW9uLCBwcmUtZmxhcmUgYW5kIGZsYXJlICBhY3Rpdml0aWVzLCBhbmQgZHluYW1pY3Mgb2Ygc3BhY2UgIHdlYXRoZXIsIHByb3BhZ2F0aW9uIG9mIHBhcnRpY2xlcyBhbmQgIGZpZWxkcyBldGMuICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 41,
      "question" : "Consider the following statements withreference to Kala-Azar:1. Kala-Azar 1s a bacterial infectiontransmitted by the bite of sandflies.2. The disease 1s covered under theNational Vector Borne Disease ControlProgramme in India.Which of the statements given above is/  are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQx",
      "description" : "ICBFeHBsYW5hdGlvbjogIO+CtyBLYWxhLUF6YXIgb3IgVmlzY2VyYWwgTGVpc2htYW5pYXNpcyAgKFZMKSBpcyBhIGNvbXBsZXggaW5mZWN0aW91cyBkaXNlYXNlICB0cmFuc21pdHRlZCBieSB0aGUgYml0ZSBvZiBmZW1hbGUgIFBobGVib3RvbWluZSBzYW5kZmxpZXMuIEl0IGlzIGNhdXNlZCAgYnkgcHJvdG96b2FuIHBhcmFzaXRlcyBvZiB0aGUgZ2VudXMgIExlaXNobWFuaWEuICDvgrcgSW4gSW5kaWEsIGl0IGlzIGVuZGVtaWMgdG8gZm91ciBzdGF0ZXMtICBCaWhhciwgSmhhcmtoYW5kLCBVdHRhciBQcmFkZXNoIGFuZCAgV2VzdCBCZW5nYWwuIEluZGlhIGlzIGNvbW1pdHRlZCB0byAgZWxpbWluYXRpbmcgS2FsYS1BemFyIGJ5IDIwMjMuIDk5LjglIG9mICBlbmRlbWljIGJsb2NrcyBpbiBJbmRpYSBoYXZlIGFscmVhZHkgIGFjaGlldmVkIHRoZSBlbGltaW5hdGlvbiBzdGF0dXMuICAg74K3IFRoZSBuZWdsZWN0ZWQgdHJvcGljYWwgZGlzZWFzZSBhZmZlY3RzICBtaWxsaW9ucyBhbm51YWxseSwgbWFraW5nIGl0IHRoZSBzZWNvbmQgIG1vc3QgY29tbW9uIHBhcmFzaXRpYyBraWxsZXIgYWZ0ZXIgIG1hbGFyaWEuIEl0IGlzIGNvdmVyZWQgdW5kZXIgdGhlIE5hdGlvbmFsICBWZWN0b3IgQm9ybmUgRGlzZWFzZSBDb250cm9sICBQcm9ncmFtbWUgaW4gSW5kaWEuICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2 RA USIAS-0006 "
      }
    },
    {
      "index" : 42,
      "question" : "Consider the following statements aboutthe Foreign Exchange Reserves:1. The Foreign Exchange Management Act ( 1999) mandates the RBI to act as thecustodian of the Foreign ExchangeReserves of India.2. R e Position is included as Jcyign Exchange Reserves £ · fo:h_D of the statements given above is/  are  s 1-0correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQy",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBGb3JlaWduIEV4Y2hhbmdlIFJlc2VydmVzIHJlZmVyIHRvIHRoZSAgcmVzZXJ2ZXMgb2YgdGhlIFJlc2VydmUgQmFuayBvZiBJbmRpYSAoUkJJKSwgIGtlcHQgaW4gdGhlIGZvcm0gb2YgZm9yZWlnbiBjdXJyZW5jeSBhc3NldHMsICBnb2xkLCBTRFJzIChUaGUgU3BlY2lhbCBEcmF3aW5nIFJpZ2h0cykgIGFuZCBSZXNlcnZlIFRyYW5jaGUgUG9zaXRpb24gd2l0aCB0aGUgIEludGVybmF0aW9uYWwgTW9uZXRhcnkgRnVuZCAoSU1GKS4gVGhlICBGb3JleCBSZXNlcnZlIGlzIGtlcHQgYXMgYSBjdXNoaW9uIGFnYWluc3QgIGFueSBwb3RlbnRpYWwgJ0JhbGFuY2Ugb2YgUGF5bWVudHMnIHJlbGF0ZWQgIGNyaXNpcy4gSW4gSW5kaWEsIHRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgIEFjdCwgMTkzNCwgZW5hYmxlZCB0aGUgUkJJIHRvIGFjdCBhcyB0aGUgIGN1c3RvZGlhbiBvZiBUaGUgRm9yZWlnbiBFeGNoYW5nZSAgTWFuYWdlbWVudCBBY3QgRm9yZWlnbiBSZXNlcnZlcy4gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following statements aboutthe Special Rupee Vostro Account (SRVA): 1. All Scheduled Commercial Banks havefull autonomy in opening the SpecialRupee Vostro Accounts for the bank ofthe partner country.2. All exports and imports under thisarrangement may be denominated andinvoiced in Indian Rupee (INR). Which of the statements given above is/  are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQz",
      "description" : "ICBFeHBsYW5hdGlvbjogIEluIG9yZGVyIHRvIHByb21vdGUgZ3Jvd3RoIG9mIGdsb2JhbCB0cmFkZSwgIHdpdGggZW1waGFzaXMgb24gZXhwb3J0cyBmcm9tIEluZGlhIGFuZCB0byAgc3VwcG9ydCB0aGUgaW5jcmVhc2luZyBpbnRlcmVzdHMgb2YgdGhlICBnbG9iYWwgdHJhZGluZyBjb21tdW5pdHkgaW4gSU5SLCBpdCBoYXMgIGJlZW4gZGVjaWRlZCB0byBwdXQgaW4gcGxhY2UgYW4gYWRkaXRpb25hbCAgYXJyYW5nZW1lbnQgZm9yIGludm9pY2luZywgcGF5bWVudCBhbmQgIHNldHRsZW1lbnQgb2YgZXhwb3J0cy9pbXBvcnRzIGluIElOUi4gIEJlZm9yZSBwdXR0aW5nIGluIHBsYWNlIHRoaXMgbWVjaGFuaXNtLCB0aGUgIEFEIGJhbmtzIHNoYWxsIHJlcXVpcmUgcHJpb3IgYXBwcm92YWwgZnJvbSAgdGhlIEZvcmVpZ24gRXhjaGFuZ2UgRGVwYXJ0bWVudCBvZiB0aGUgIFJlc2VydmUgQmFuayBvZiBJbmRpYSwgQ2VudHJhbCBPZmZpY2UgYXQgIE11bWJhaS4gICBBY2NvcmRpbmdseSwgZm9yIHNldHRsZW1lbnQgb2YgdHJhZGUgIHRyYW5zYWN0aW9ucyB3aXRoIGFueSBjb3VudHJ5LCB0aGUgQUQgIChBdXRob3Jpc2VkIERlYWxlcikgYmFuayBpbiBJbmRpYSBtYXkgIG9wZW4gdGhlIFNwZWNpYWwgUnVwZWUgVm9zdHJvIEFjY291bnRzICBvZiB0aGUgY29ycmVzcG9uZGVudCBiYW5rL3Mgb2YgdGhlICBwYXJ0bmVyIHRyYWRpbmcgY291bnRyeS4gSW4gb3JkZXIgdG8gYWxsb3cgIHNldHRsZW1lbnQgb2YgaW50ZXJuYXRpb25hbCB0cmFkZSAgdHJhbnNhY3Rpb25zIHRocm91Z2ggdGhpcyBhcnJhbmdlbWVudCwgaXQgIGhhcyBiZWVuIGRlY2lkZWQgdGhhdDogIO+CtyBUaGUgSW5kaWFuIGltcG9ydGVycywgdW5kZXJ0YWtpbmcgIGltcG9ydHMgdGhyb3VnaCB0aGlzIG1lY2hhbmlzbSwgc2hhbGwgIG1ha2UgcGF5bWVudCBpbiBJTlIsIHdoaWNoIHNoYWxsIGJlICBjcmVkaXRlZCBpbnRvIHRoZSBTcGVjaWFsIFZvc3RybyBBY2NvdW50ICBvZiB0aGUgY29ycmVzcG9uZGVudCBiYW5rIG9mIHRoZSAgcGFydG5lciBjb3VudHJ5LCBhZ2FpbnN0IHRoZSBpbnZvaWNlcyBmb3IgIHRoZSBzdXBwbHkgb2YgZ29vZHMgb3Igc2VydmljZXMgZnJvbSB0aGUgIG92ZXJzZWFzIHNlbGxlci9zdXBwbGllci4gIO+CtyBUaGUgSW5kaWFuIGV4cG9ydGVycywgdW5kZXJ0YWtpbmcgIGV4cG9ydHMgb2YgZ29vZHMgYW5kIHNlcnZpY2VzIHRocm91Z2ggIHRoaXMgbWVjaGFuaXNtLCBzaGFsbCBiZSBwYWlkIHRoZSAgZXhwb3J0IHByb2NlZWRzIGluIElOUiBmcm9tIHRoZSAgYmFsYW5jZXMgaW4gdGhlIGRlc2lnbmF0ZWQgU3BlY2lhbCAgVm9zdHJvIEFjY291bnQgb2YgdGhlIGNvcnJlc3BvbmRlbnQgIGJhbmsgb2YgdGhlIHBhcnRuZXIgY291bnRyeS4gIFNhbGllbnQgZmVhdHVyZXM6ICDvgrcgSW52b2ljaW5nOiBBbGwgZXhwb3J0cyBhbmQgaW1wb3J0cyAgdW5kZXIgdGhpcyBhcnJhbmdlbWVudCBtYXkgYmUgIGRlbm9taW5hdGVkIGFuZCBpbnZvaWNlZCBpbiBJbmRpYW4gIFJ1cGVlIChJTlIpLiAg74K3IEV4Y2hhbmdlIFJhdGU6IFRoZSBleGNoYW5nZSByYXRlICBiZXR3ZWVuIHRoZSBjdXJyZW5jaWVzIG9mIHRoZSB0d28gIHRyYWRpbmcgcGFydG5lciBjb3VudHJpZXMgbWF5IGJlICBtYXJrZXQgZGV0ZXJtaW5lZC4gIO+CtyBTZXR0bGVtZW50OiBUaGUgc2V0dGxlbWVudCBvZiB0cmFkZSAgdHJhbnNhY3Rpb25zIHVuZGVyIHRoaXMgYXJyYW5nZW1lbnQgIHNoYWxsIHRha2UgcGxhY2UgaW4gSU5SLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 44,
      "question" : "Consider the following statements aboutthe Asian Clearing Union (ACU): 1. The Asian Clearing Union (ACU) is aform of payment arrangement where theparticipants settle payments for transactions among the Central Banksof all Asian countries on a multilateralbasis.2. The Asian Monetary Unit is the commonunit of the ACU and is denominatedonly in Dollars and Euros.Which of the statements given above is/  are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ0",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBBc2lhbiBDbGVhcmluZyBVbmlvbiAoQUNVKSBoYXMgYmVlbiAgZXN0YWJsaXNoZWQgYXMgYW4gaW5pdGlhdGl2ZSBvZiB0aGUgVW5pdGVkICBOYXRpb24gRWNvbm9taWMgYW5kIFNvY2lhbCBDb21taXNzaW9uICBmb3IgQXNpYSBhbmQgdGhlIFBhY2lmaWMgKFVORVNDQVApLiAgIFRoZSBDZW50cmFsIEJhbmtzIGFuZCB0aGUgTW9uZXRhcnkgIEF1dGhvcml0aWVzIG9mIEJhbmdsYWRlc2gsIEJodXRhbiwgSW5kaWEsICBJcmFuLCB0aGUgTWFsZGl2ZXMsIE15YW5tYXIsIE5lcGFsLCAgUGFraXN0YW4gYW5kIFNyaSBMYW5rYSBhcmUgY3VycmVudGx5IHRoZSAgbWVtYmVycyBvZiB0aGUgQUNVLiAgVGhlIEFzaWFuIE1vbmV0YXJ5IFVuaXQgKEFNVSkgaXMgdGhlICBjb21tb24gdW5pdCBvZiBhY2NvdW50IG9mIHRoZSBBQ1UsIGFuZCAgaXMgZGVub21pbmF0ZWQgYXMgJ0FDVSBEb2xsYXInLCAnQUNVICBFdXJvJyBhbmQgJ0FDVSBZZW4nLCB3aGljaCBpcyBlcXVpdmFsZW50ICBpbiB2YWx1ZSB0byBvbmUgVVMgRG9sbGFyLCBvbmUgRXVybyBhbmQgIG9uZSBKYXBhbmVzZSBZZW4sIHJlc3BlY3RpdmVseS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only",
        "option2" : " 2 only",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2 8  "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements about the Clearing Corporation of India Ltd. (CCIL): 1. The Clearing Corporation of India Ltd. provides an institutional infrastructure for the clearing and settlement of transactions in Government Securities only. 2. It is regulated by the SEBI. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ1",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBDbGVhcmluZyBDb3Jwb3JhdGlvbiBvZiBJbmRpYSBMdGQuICAoQ0NJTCkgd2FzIHNldCB1cCBpbiAyMDAxIHRvIHByb3ZpZGUgYW4gIGluc3RpdHV0aW9uYWwgaW5mcmFzdHJ1Y3R1cmUgZm9yIHRoZSAgY2xlYXJpbmcgYW5kIHNldHRsZW1lbnQgb2YgdHJhbnNhY3Rpb25zICBpbiBHb3Zlcm5tZW50IFNlY3VyaXRpZXM7IE1vbmV5ICBNYXJrZXQgSW5zdHJ1bWVudHM7IEZvcmVpZ24gRXhjaGFuZ2U7ICBhbmQgb3RoZXIgcmVsYXRlZCBwcm9kdWN0cy4gVGhlIG9iamVjdGl2ZSAgd2FzIHRvIGJyaW5nIGVmZmljaWVuY3kgdG8gdGhlIHRyYW5zYWN0aW9uICBzZXR0bGVtZW50IHByb2Nlc3MgYW5kIG1pdGlnYXRlIHRoZSAgc3lzdGVtaWMgcmlzayBlbWFuYXRpbmcgZnJvbSBzZXR0bGVtZW50ICByZWxhdGVkIHByb2JsZW1zIGFuZCBjb3VudGVyLXBhcnR5IHJpc2suICBUaGUgQ0NJTCBpcyBhIHBheW1lbnQgc3lzdGVtIG9wZXJhdG9yLCAgYXV0aG9yaXplZCBieSB0aGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhICAoUkJJKSB1bmRlciB0aGUgUGF5bWVudCBhbmQgU2V0dGxlbWVudCAgU3lzdGVtcyAoUFNTKSBBY3QsIDIwMDcsIHRvIHByb3ZpZGUgIGd1YXJhbnRlZWQgc2V0dGxlbWVudCBpbiBHb3Zlcm5tZW50ICBTZWN1cml0aWVzIChHLVNlY3MpOyBUcmktcGFydHkgUmVwbyAoVFJFUCk7ICBhbmQgRm9yZXggYW5kIFJ1cGVlIERlcml2YXRpdmVzIG1hcmtldC4gIEluIHZpZXcgb2YgaXRzIGNyaXRpY2FsIGltcG9ydGFuY2UgdG8gdGhlICBJbmRpYW4gZmluYW5jaWFsIHN5c3RlbSwgdGhlIENDSUwgaGFzIGJlZW4gIGRlc2lnbmF0ZWQgYXMgYSBjcml0aWNhbCBGaW5hbmNpYWwgTWFya2V0ICBJbmZyYXN0cnVjdHVyZSAoRk1JKSBieSB0aGUgUkJJIGFuZCBpdCBoYXMgIGdpdmVuIENDSUwgdGhlIHN0YXR1cyBvZiBhIFF1YWxpZnlpbmcgIENlbnRyYWwgQ291bnRlcnBhcnR5IChRQ0NQKS4gICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2  ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 46,
      "question" : "Consider the following statements about the Fully Accessible Route (FAR): 1. This mechanism is provided by the RBI which enables the non-resident Indians to invest in both short-term and long-term securities of the Government of India. 2. There will be no investment ceilings on the securities eligible for investment under the Fully Accessible Route. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ2",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSksIGluICBjb25zdWx0YXRpb24gd2l0aCB0aGUgR292ZXJubWVudCBvZiBJbmRpYSwgIGludHJvZHVjZWQgYSBzZXBhcmF0ZSBjaGFubmVsLCBjYWxsZWQgdGhlICAnRnVsbHkgQWNjZXNzaWJsZSBSb3V0ZScgKEZBUiksIHRvIGVuYWJsZSB0aGUgIG5vbi1yZXNpZGVudHMgdG8gaW52ZXN0IGluIHNwZWNpZmllZCAgR292ZXJubWVudCBvZiBJbmRpYSBEYXRlZCBTZWN1cml0aWVzLiBUaGUgIGVsaWdpYmxlIGludmVzdG9ycyBjYW4gaW52ZXN0IGluIHNwZWNpZmllZCAgR292ZXJubWVudCBTZWN1cml0aWVzLCB3aXRob3V0IGJlaW5nICBzdWJqZWN0IHRvIGFueSBpbnZlc3RtZW50IGNlaWxpbmdzLiBUaGlzICBzY2hlbWUgc2hhbGwgb3BlcmF0ZSBhbG9uZyB3aXRoIHRoZSB0d28gIGV4aXN0aW5nIHJvdXRlcywgdml6LiwgdGhlIE1lZGl1bS1UZXJtICBGcmFtZXdvcmsgKE1URikgYW5kIHRoZSBWb2x1bnRhcnkgIFJldGVudGlvbiBSb3V0ZSAoVlJSKS4gICBUaGUgUmVzZXJ2ZSBCYW5rIG9mIEluZGlhIHNoYWxsIG5vdGlmeSB0aGUgIEdvdmVybm1lbnQgU2VjdXJpdGllcyB0aGF0IHNoYWxsIGJlIGVsaWdpYmxlICBmb3IgaW52ZXN0bWVudCB1bmRlciB0aGUgRkFSIChoZXJlaW5hZnRlciwgICdzcGVjaWZpZWQgc2VjdXJpdGllcycpLiBUaGVzZSBzZWN1cml0aWVzIHdpbGwgIGNvbnRpbnVlIHRvIGJlIGVsaWdpYmxlIGZvciBpbnZlc3RtZW50IGJ5IHRoZSAgcmVzaWRlbnRzLiAnU3BlY2lmaWVkIFNlY3VyaXRpZXMnLCBvbmNlIHNvICBkZXNpZ25hdGVkLCBzaGFsbCByZW1haW4gZWxpZ2libGUgZm9yICBpbnZlc3RtZW50IHVuZGVyIHRoZSBGQVIgdW50aWwgbWF0dXJpdHkuICBUaGlzIG1lY2hhbmlzbSBjYW1lIGludG8gZm9yY2UgaW4gMjAyMC4gICBGRUFUVVJFUyAgSW52ZXN0bWVudHM6IFRoZXJlIHNoYWxsIGJlIG5vICBxdWFudGl0YXRpdmUgbGltaXQgb24gaW52ZXN0bWVudCBieSBlbGlnaWJsZSAgaW52ZXN0b3JzIGluIHRoZSBzcGVjaWZpZWQgc2VjdXJpdGllcy4gIEluIGFkZGl0aW9uLCBhbGwgbmV3IGlzc3VhbmNlcyBvZiAgR292ZXJubWVudCBTZWN1cml0aWVzIG9mIDUteWVhciwgMTAteWVhciAgYW5kIDMwLXllYXIgdGVub3JzLCBmcm9tIHRoZSBmaW5hbmNpYWwgeWVhciAgMjAyMC0yMSwgd2lsbCBiZSBlbGlnaWJsZSBmb3IgaW52ZXN0bWVudCAgdW5kZXIgdGhlIEZBUiBhcyAnU3BlY2lmaWVkIFNlY3VyaXRpZXMnLiAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following statements about the Additional Tier 1 (AT 1) Bonds: 1. They are unsecured bonds having perpetual tenor. 2. They are issued by the RBI. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ3",
      "description" : "ICBFeHBsYW5hdGlvbjogIFRoZSBBZGRpdGlvbmFsIFRpZXIgMSAoQVQgMSkgQm9uZHMgYXJlICB1bnNlY3VyZWQgQm9uZHMgdGhhdCBoYXZlIHBlcnBldHVhbCAgdGVub3IuIEluIG90aGVyIHdvcmRzLCB0aGVzZSBCb25kcywgIGlzc3VlZCBieSB0aGUgYmFua3MsIGhhdmUgbm8gbWF0dXJpdHkgIGRhdGUuIFRoZXkgaGF2ZSBhIGNhbGwgb3B0aW9uLCB3aGljaCBjYW4gYmUgIHVzZWQgYnkgdGhlIGJhbmtzIHRvIGJ1eSB0aGVzZSBCb25kcyBiYWNrICBmcm9tIHRoZSBpbnZlc3RvcnMuIFRoZXNlIEJvbmRzIGFyZSAgdHlwaWNhbGx5IHVzZWQgYnkgdGhlIGJhbmtzIHRvIGJvbHN0ZXIgdGhlaXIgIGNvcmUgb3IgVGllciAxIGNhcGl0YWwuICBUaGUgQVQgMSBCb25kcyBhcmUgc3Vib3JkaW5hdGUgdG8gYWxsIG90aGVyICBkZWJ0IGFuZCBvbmx5IHNlbmlvciB0byBjb21tb24gZXF1aXR5LiAgTXV0dWFsIEZ1bmRzIChNRnMpIHdlcmUgYW1vbmcgdGhlICBsYXJnZXN0IGludmVzdG9ycyBpbiBwZXJwZXR1YWwgZGVidCAgaW5zdHJ1bWVudHMuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements about the Government Securities: 1. All Dated Government Securities are issued having a fixed coupon rate. 2. The auctions of the Government Securities are done on the e-Kuber platform of the RBI.  3. Both primary and secondary issues of the Government Securities are conducted by yield-based auctions. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ4",
      "description" : "ICBFeHBsYW5hdGlvbjogIExvbmctVGVybSBHb3Zlcm5tZW50IFNlY3VyaXRpZXMgKEctIFNlY3MpIC0gIERhdGVkIEctU2VjczogVGhlc2UgYXJlIHRoZSBzZWN1cml0aWVzICB3aGljaCBjYXJyeSBhIGZpeGVkIG9yIGZsb2F0aW5nIGNvdXBvbiAgKGludGVyZXN0IHJhdGUpLCB3aGljaCBpcyBwYWlkIG9uIHRoZSBmYWNlICB2YWx1ZSwgb24gYSBoYWxmLXllYXJseSBiYXNpcy4gVGhlIHRlbm9yICByYW5nZXMgYmV0d2VlbiA1IHRvIDQwIHllYXJzLiAgIEZpeGVkIFJhdGUgQm9uZHM6IFRoZXNlIGFyZSB0aGUgQm9uZHMgb24gIHdoaWNoIHRoZSBjb3Vwb24gcmF0ZSBpcyBmaXhlZCBmb3IgdGhlIGVudGlyZSAgbGlmZSAoaS5lLiwgdGlsbCBtYXR1cml0eSkgb2YgdGhlIEJvbmRzLiBNb3N0ICBHb3Zlcm5tZW50IEJvbmRzIGluIEluZGlhIGFyZSBpc3N1ZWQgYXMgIEZpeGVkIFJhdGUgQm9uZHMuICAgRmxvYXRpbmcgUmF0ZSBCb25kczogVGhlc2UgYXJlIHRoZSAgc2VjdXJpdGllcyB3aGljaCBkbyBub3QgaGF2ZSBhIGZpeGVkIGNvdXBvbiAgcmF0ZS4gSW5zdGVhZCwgdGhleSBoYXZlIGEgdmFyaWFibGUgY291cG9uICByYXRlLCB3aGljaCBpcyByZS1zZXQgYXQgcHJlLWFubm91bmNlZCAgaW50ZXJ2YWxzIChzYXksIGV2ZXJ5IHNpeCBtb250aHMgb3Igb25lICB5ZWFyKS4gICBUeXBlcyBvZiBBdWN0aW9ucyAtICBUaGUgcmF0ZSBvZiBpbnRlcmVzdCAoY291cG9uIHJhdGUpIGdldHMgZml4ZWQgIHRocm91Z2ggYSBtYXJrZXQtYmFzZWQgcHJpY2UgZGlzY292ZXJ5ICBwcm9jZXNzLiAgIFlpZWxkLUJhc2VkIEF1Y3Rpb246IEEgeWllbGQtYmFzZWQgIGF1Y3Rpb24gaXMgZ2VuZXJhbGx5IGNvbmR1Y3RlZCB3aGVuIGEgbmV3ICBHLVNlYyBpcyBpc3N1ZWQuIFRoZSBpbnZlc3RvcnMgYmlkIGluIHlpZWxkICB0ZXJtcy4gQmlkcyBhcmUgYXJyYW5nZWQgaW4gdGhlIGFzY2VuZGluZyAgb3JkZXIgYW5kIGN1dC1vZmYgeWllbGQgaXMgYXJyaXZlZCBhdCB0aGUgIHlpZWxkIGNvcnJlc3BvbmRpbmcgdG8gdGhlIG5vdGlmaWVkIGFtb3VudCAgb2YgdGhlIGF1Y3Rpb24uIFRoZSBjdXQtb2ZmIHlpZWxkIGlzIHRoZW4gIGZpeGVkIGFzIHRoZSBjb3Vwb24gcmF0ZSBmb3IgdGhlIHNlY3VyaXR5LiAgU3VjY2Vzc2Z1bCBiaWRkZXJzIGFyZSB0aG9zZSB3aG8gaGF2ZSBiaWQgIGF0IG9yIGJlbG93IHRoZSBjdXQtb2ZmIHlpZWxkLiAgIFByaWNlLUJhc2VkIEF1Y3Rpb246IEEgcHJpY2UtYmFzZWQgIGF1Y3Rpb24gaXMgY29uZHVjdGVkIHdoZW4gdGhlIEctU2VjLCAgd2hpY2ggaGFzIGFscmVhZHkgYmVlbiBpc3N1ZWQsIGlzIGJlaW5nIHJlLSBpc3N1ZWQuIFRoZSBiaWRkZXJzIHF1b3RlIGluIHRlcm1zIG9mIHByaWNlICBwZXIgUnMuIDEwMCBvZiBmYWNlIG9mIHRoZSBzZWN1cml0eS4gVGhlIGJpZHMgIGFyZSBhcnJhbmdlZCBpbiB0aGUgZGVzY2VuZGluZyBvcmRlciBvZiAgcHJpY2Ugb2ZmZXJlZCBhbmQgdGhlIHN1Y2Nlc3NmdWwgYmlkZGVycyBhcmUgIHRob3NlIHdobyBoYXZlIGJpZCBhdCBvciBhYm92ZSB0aGUgY3V0LW9mZiAgcHJpY2UuICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 2 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1, 2 and 3  "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements about the Gig Workers: 1. The Code on Social Security provides for mandatory registration of all the gig workers. 2. The Code on Social Security provides that the Central Government will establish a Social Security Fund for the gig workers. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDQ5",
      "description" : "IEV4cGxhbmF0aW9uOiBMYWJvdXIgQ29kZXMgdGhhdCBzZWVrIHRvIGludHJvZHVjZSBsYWJvdXIgcmVmb3JtcyBpbiBJbmRpYSBoYXZlIGxlZ2FsbHkgYWNrbm93bGVkZ2VkIHRoZSBwcmVzZW5jZSBvZiB0aGUgJ2dpZyB3b3JrZXJzJyBpbiB0aGUgZWNvbm9teS4gRm9yIGV4YW1wbGUsIHRoZSBDb2RlIG9uIFNvY2lhbCBTZWN1cml0eSwgMjAyMCwgcHJvdmlkZXMgZm9yIHRoZSByZWdpc3RyYXRpb24gb2YgYWxsIHRoZSBnaWcgd29ya2Vycy4gSXQgY2FsbHMgdXBvbiB0aGUgQ2VudHJhbCBhbmQgdGhlIFN0YXRlIEdvdmVybm1lbnRzIHRvIGZvcm11bGF0ZSBzY2hlbWVzIHRvIGVuc3VyZSBzb2NpYWwgc2VjdXJpdHkgYmVuZWZpdHMsIHN1Y2ggYXMgaW5zdXJhbmNlLCBmb3IgdGhlIGdpZyB3b3JrZXJzLiBJdCBhbHNvIGVtcG93ZXJzIHRoZSBHb3Zlcm5tZW50IHRvIHNldCB1cCBTb2NpYWwgU2VjdXJpdHkgRnVuZHMgZm9yIHRoZWlyIGJlbmVmaXQuIFRoZSBjb250cmlidXRpb24gdG8gdGhlc2UgRnVuZHMgbWF5IGJlIGZ1bmRlZCBmcm9tIHRoZSBjb250cmlidXRpb25zIG9mIHRoZSBDZW50cmUsIHRoZSBTdGF0ZXMgYW5kIHRoZSBhZ2dyZWdhdG9yIHBsYXRmb3Jtcywgc3VjaCBhcyBVYmVyLCBab21hdG8gZXRjLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  "
      }
    },
    {
      "index" : 50,
      "question" : "Consider the following statements about the Sovereign Green Bonds (SGBs): 1. The SGBs will be eligible for Repurchase Transactions (Repo). 2. The interest accrued on the SGBs will be paid on a half-yearly basis. 3. There is no cap on foreign investments in the Sovereign Green Bonds. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxsfDUw",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgR3JlZW4gQm9uZHMsIHBvcHVsYXJseSBrbm93biBhcyB0aGUgQ2xpbWF0ZSBCb25kcywgYXJlIGZpeGVkIGludGVyZXN0LWJlYXJpbmcgZmluYW5jaWFsIGluc3RydW1lbnRzLCBpc3N1ZWQgYnkgYW55IHNvdmVyZWlnbiBlbnRpdHkgLyBpbnRlci1nb3Zlcm5tZW50YWwgb3JnYW5pemF0aW9uIC8gY29ycG9yYXRpb24uIFRoZSBwcm9jZWVkcyBvZiB0aGVzZSBCb25kcyBhcmUgdXNlZCBvbmx5IGZvciAgZW52aXJvbm1lbnRhbGx5IGNvbnNjaW91cywgY2xpbWF0ZS0gcmVzaWxpZW50IHByb2plY3RzLiAgIFRoZSBSZXNlcnZlIEJhbmsgb2YgSW5kaWEgKFJCSSkgcmVjZW50bHkgIGF1Y3Rpb25lZCBpdHMgbWFpZGVuIFNvdmVyZWlnbiBHcmVlbiAgQm9uZHMsIHdvcnRoIFJzLjgsMDAwIGNyb3JlcywgdW5kZXIgaXRzICBTb3ZlcmVpZ24gR3JlZW4gQm9uZCBGcmFtZXdvcmsuICAgVGhlIGludmVzdG9ycyBpbiB0aGUgQm9uZHMsIGlzc3VlZCB1bmRlciAgdGhpcyBGcmFtZXdvcmssIGRvIG5vdCBiZWFyIGFueSBwcm9qZWN0ICByZWxhdGVkIHJpc2tzLiAgIFRoZXJlIGlzIG5vIGNhcCBvbiBmb3JlaWduIGludmVzdG1lbnRzIGluICB0aGVzZSBCb25kcywgYmVjYXVzZSB0aGVzZSBpbnN0cnVtZW50cyAgYXJlIGNvbnNpZGVyZWQgYXMgc3BlY2lmaWVkIHNlY3VyaXRpZXMgdW5kZXIgIHRoZSAnRnVsbHkgQWNjZXNzaWJsZSBSb3V0ZScuICAgVGhlIHN0b2NrcyB3aWxsIGJlIGVsaWdpYmxlIGZvciBSZXB1cmNoYXNlICBUcmFuc2FjdGlvbnMgKFJlcG8pLCBhcyBwZXIgdGhlIGNvbmRpdGlvbnMgIG1lbnRpb25lZCBpbiB0aGUgUmVwdXJjaGFzZSAgVHJhbnNhY3Rpb25zIChSZXBvKSAoUmVzZXJ2ZSBCYW5rKSAgRGlyZWN0aW9ucywgMjAxOC4gIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDdXJyZW50IEFmZmFpcnMgRmViIDIwMjN8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "Current Affairs Feb 2023",
      "questionOptions" : {
        "option1" : " 1 and 2 only ",
        "option2" : " 2 and 3 only ",
        "option3" : " 1 and 3 only ",
        "option4" : " 1, 2 and 3  "
      }
    }
  ],
  "subject" : "Current Affairs Feb 2023",
  "topic" : "all",
  "year" : "2024"
}
