{
  "testId" : "forum-2024-prelims-preparatory-1",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2024/forum/prelims/forum-2024-prelims-preparatory-1.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "With reference to Indian Polity, consider the following statements: Statement-I: The Preamble of the Constitution of India states India as a 'republic'. Statement-II: In India, the Head of the State is always elected directly. Which one of the following is correct in respect of the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogIFRoZSBQcmVhbWJsZSBpbiBpdHMgcHJlc2VudCBmb3JtIHJlYWRzICdXZSwgVEhFIFBFT1BMRSBPRiBJTkRJQSwgaGF2aW5nICBzb2xlbW5seSByZXNvbHZlZCB0byBjb25zdGl0dXRlIEluZGlhIGludG8gYSBTT1ZFUkVJR04gU09DSUFMSVNUIFNFQ1VMQVIgREVNT0NSQVRJQyBSRVBVQkxJQyAgYW5kIHRvIHNlY3VyZSB0byBhbGwgaXRzIGNpdGl6ZW5zLiBIZW5jZSB0aGUgUHJlYW1ibGUgc3RhdGVzIEluZGlhIGFzIGEgcmVwdWJsaWMgY291bnRyeS4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQSBkZW1vY3JhdGljIHBvbGl0eSBjYW4gYmUgY2xhc3NpZmllZCBpbnRvIHR3byBjYXRlZ29yaWVzLSBtb25hcmNoeSBhbmQgIHJlcHVibGljLiBJbiBhIG1vbmFyY2h5LCB0aGUgaGVhZCBvZiB0aGUgc3RhdGUgKHVzdWFsbHkga2luZyBvciBxdWVlbikgZW5qb3lzIGEgaGVyZWRpdGFyeSBwb3NpdGlvbiwgdGhhdCBpcywgIGhlL3NoZSBjb21lcyBpbnRvIG9mZmljZSB0aHJvdWdoIHN1Y2Nlc3Npb24sIGUuZy4sIEJyaXRhaW4uIEluIGEgcmVwdWJsaWMsIG9uIHRoZSBvdGhlciBoYW5kLCB0aGUgaGVhZCBvZiAgdGhlIHN0YXRlIGlzIGFsd2F5cyBlbGVjdGVkIC0gZGlyZWN0bHkgb3IgaW5kaXJlY3RseSBmb3IgYSBmaXhlZCBwZXJpb2QuIEhvd2V2ZXIsIGluIGNhc2Ugb2YgSW5kaWEgdGhlIGhlYWQgb2YgIHRoZSBzdGF0ZSBpLmUuIFByZXNpZGVudCBpcyBlbGVjdGVkIGluZGlyZWN0bHkuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBMYXhtaWthbnRoIC0gQ2hhcHRlciA0LCBQcmVhbWJsZSAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both Statement-I and Statement-II are  correct, and Statement-II is the correct  explanation for Statement- I ",
        "option2" : " Both Statement-I and Statement-II are  correct, and Statement-II is not the correct  explanation for Statement-I ",
        "option3" : " Statement-I is correct, but Statement-II is  incorrect ",
        "option4" : " Statement-I is incorrect, but Statement-II is  correct  "
      }
    },
    {
      "index" : 2,
      "question" : "Consider the following statements in respect of the features of the Government of India Act of 1858:  1. It created a new office, Secretary of State for India, vested with complete authority and control over Indian administration. 2. It established an advisory body called Council of India to assist the Secretary of State for India. 3. It empowered legislative councils to discuss the budget and to address questions to the executive. 4. It empowered the Viceroy to issue ordinances, without the concurrence of the legislative council, during an emergency. How many of the statements given above are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgR292ZXJubWVudCBvZiBJbmRpYSBBY3Qgb2YgMTg1OCB3YXMgZW5hY3RlZCBpbiB0aGUgd2FrZSBvZiB0aGUgUmV2b2x0IG9mIDE4NTctYWxzbyBrbm93biBhcyB0aGUgIEZpcnN0IFdhciBvZiBJbmRlcGVuZGVuY2Ugb3IgdGhlICdzZXBveSBtdXRpbnknLiBUaGUgYWN0LCBhbHNvIGtub3duIGFzIHRoZSBBY3QgZm9yIHRoZSBHb29kICBHb3Zlcm5tZW50IG9mIEluZGlhLCBhYm9saXNoZWQgdGhlIEVhc3QgSW5kaWEgQ29tcGFueSwgYW5kIHRyYW5zZmVycmVkIHRoZSBwb3dlcnMgb2YgR292ZXJubWVudCwgIHRlcnJpdG9yaWVzIGFuZCByZXZlbnVlcyB0byB0aGUgQnJpdGlzaCBDcm93bi4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6ICBJdCBjcmVhdGVkIGEgbmV3IG9mZmljZSwgU2VjcmV0YXJ5IG9mIFN0YXRlIGZvciBJbmRpYSwgdmVzdGVkIHdpdGggY29tcGxldGUgIGF1dGhvcml0eSBhbmQgY29udHJvbCBvdmVyIEluZGlhbiBhZG1pbmlzdHJhdGlvbi4gVGhlIHNlY3JldGFyeSBvZiBzdGF0ZSB3YXMgYSBtZW1iZXIgb2YgdGhlIEJyaXRpc2ggIENhYmluZXQgYW5kIHdhcyB1bHRpbWF0ZWx5IHJlc3BvbnNpYmxlIHRvIHRoZSBCcml0aXNoIFBhcmxpYW1lbnQuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiAgSXQgZXN0YWJsaXNoZWQgYSAxNS1tZW1iZXIgYWR2aXNvcnkgYm9keSBjYWxsZWQgIkNvdW5jaWwgb2YgSW5kaWEiIHRvIGFzc2lzdCB0aGUgIFNlY3JldGFyeSBvZiBTdGF0ZSBmb3IgSW5kaWEuIFRoZSBzZWNyZXRhcnkgb2Ygc3RhdGUgd2FzIG1hZGUgdGhlIENoYWlybWFuIG9mIHRoZSBjb3VuY2lsLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBJbmRpYW4gQ291bmNpbHMgQWN0IG9mIDE4OTIgKG5vdCBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCwxODU4KSB3aGljaCBmb3IgdGhlICBmaXJzdCB0aW1lIGVtcG93ZXJlZCBsZWdpc2xhdGl2ZSBjb3VuY2lscyB0byBkaXNjdXNzIHRoZSBidWRnZXQgYW5kIHRvIGFkZHJlc3MgcXVlc3Rpb25zIHRvIHRoZSBleGVjdXRpdmUuICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IEl0IHdhcyB0aGUgSW5kaWFuIENvdW5jaWxzIEFjdCBvZiAxODYxLCB3aGljaCBlbXBvd2VyZWQgdGhlIFZpY2Vyb3kgdG8gaXNzdWUgIG9yZGluYW5jZXMsIHdpdGhvdXQgdGhlIGNvbmN1cnJlbmNlIG9mIHRoZSBsZWdpc2xhdGl2ZSBjb3VuY2lsLCBkdXJpbmcgYW4gZW1lcmdlbmN5LiBUaGUgbGlmZSBvZiBzdWNoIGFuICBvcmRpbmFuY2Ugd2FzIHNpeCBtb250aHMuICAgU291cmNlOiBJbmRpYW4gUG9saXR5LCBMYWtzaG1pa2FudGggLSBDaGFwdGVyIDEsIEhpc3RvcmljYWwgQmFja2dyb3VuZCwgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three  ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 3,
      "question" : "Consider the following statements regarding the functions performed by the Constituent Assembly of India: 1. It enacted laws to regulate the affairs of Independent India. 2. It ratified India's membership of the Commonwealth. 3. It adopted the National song and National Flag for Independent India. 4. It elected the first President of Independent India. How many of the statements given above are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgd2FzIG1hZGUgYSBmdWxseSBzb3ZlcmVpZ24gYm9keSwgd2hpY2ggY291bGQgZnJhbWUgYW55IENvbnN0aXR1dGlvbiBpdCAgcGxlYXNlZC4gVGhlIGFjdCBlbXBvd2VyZWQgdGhlIEFzc2VtYmx5IHRvIGFicm9nYXRlIG9yIGFsdGVyIGFueSBsYXcgbWFkZSBieSB0aGUgQnJpdGlzaCBQYXJsaWFtZW50IGluICByZWxhdGlvbiB0byBJbmRpYS4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBDb25zdGl0dWVudCBBc3NlbWJseSBwZXJmb3JtZWQgdHdvIHNlcGFyYXRlIGZ1bmN0aW9ucy4gT25lIGlzIG1ha2luZyBvZiAgdGhlIENvbnN0aXR1dGlvbiBmb3IgZnJlZSBJbmRpYSBhbmQgZW5hY3Rpbmcgb2Ygb3JkaW5hcnkgbGF3cyBmb3IgdGhlIGNvdW50cnkuIFRoZXNlIHR3byBmdW5jdGlvbnMgIGNvbnRpbnVlZCB0aWxsIE5vdmVtYmVyIDI2LCAxOTQ5LCB3aGVuIHRoZSB0YXNrIG9mIG1ha2luZyB0aGUgQ29uc3RpdHV0aW9uIHdhcyBvdmVyLiBUaHVzLCB0aGUgQXNzZW1ibHkgIGJlY2FtZSB0aGUgZmlyc3QgUGFybGlhbWVudCBvZiBmcmVlIEluZGlhIChEb21pbmlvbiBMZWdpc2xhdHVyZSkuICAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEl0IGlzIHRydWUgdGhhdCB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgcmF0aWZpZWQgaW50ZXJuYXRpb25hbCBhZ3JlZW1lbnQgb24gYmVoYWxmICBvZiBJbmRlcGVuZGVudCBJbmRpYS4gRm9yIGluc3RhbmNlIGl0IHJhdGlmaWVkIEluZGlhJ3MgbWVtYmVyc2hpcCBvZiB0aGUgQ29tbW9ud2VhbHRoIGluIE1heSAxOTQ5LiAgIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IEl0IGlzIHRydWUgdGhhdCB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgYWRvcHRlZCB0aGUgbmF0aW9uYWwgZmxhZyBvbiBKdWx5IDIyLCAxOTQ3LiAgQWxzbywgaXQgYWRvcHRlZCB0aGUgbmF0aW9uYWwgYW50aGVtIG9uIEphbnVhcnkgMjQsIDE5NTAgYW5kIE5hdGlvbmFsIHNvbmcgb24gSmFudWFyeSAyNCwgMTk1MC4gICAgb2YgMjMgfHx8ICAgU3RhdGVtZW50IDQgaXMgY29ycmVjdDogSXQgaXMgdHJ1ZSB0aGF0IHRoZSBDb25zdGl0dWVudCBBc3NlbWJseSBlbGVjdGVkIHRoZSBmaXJzdCBQcmVzaWRlbnQgb2YgIEluZGVwZW5kZW50IEluZGlhLiBUaGUgYXNzZW1ibHkgZWxlY3RlZCBEci4gUmFqZW5kcmEgUHJhc2FkIGFzIHRoZSBmaXJzdCBQcmVzaWRlbnQgb2YgSW5kaWEgb24gSmFudWFyeSAgMjQsIDE5NTAuICAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBMYWtzaG1pa2FudGggLSBDaGFwdGVyIDIsIE1ha2luZyBvZiB0aGUgQ29uc3RpdHV0aW9uLCAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three  ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 4,
      "question" : "With reference to the Indian Judiciary, consider the following statements: Statement-I: The Supreme Court of India is the guardian of the Constitution. Statement-II: The Supreme Court can enforce both Central and State laws all over the territory of India.  Which one of the following is correct in respect of the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgU3VwcmVtZSBDb3VydCBhY3RzIGFzIHRoZSBndWFyZGlhbiBvZiB0aGUgQ29uc3RpdHV0aW9uIGFzIGl0IGNhbiBkZWNsYXJlIGFueSAgbGF3L2V4ZWN1dGl2ZSBhY3Rpb25zIGFzIHVuY29uc3RpdHV0aW9uYWwgaWYgc3VjaCBsYXdzL2FjdGlvbnMgdmlvbGF0ZSB0aGUgcHJvdmlzaW9ucyBvZiB0aGUgIENvbnN0aXR1dGlvbi4gQWxzbyBpdCBhY3RzIGFzIHRoZSBndWFyYW50b3Igb2YgdGhlIGZ1bmRhbWVudGFsIHJpZ2h0cyBvZiB0aGUgY2l0aXplbnMuICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIEluZGlhbiBDb25zdGl0dXRpb24gZXN0YWJsaXNoZXMgYW4gaW50ZWdyYXRlZCBqdWRpY2lhbCBzeXN0ZW0uIFRoZSBTdXByZW1lICBDb3VydCBzdGFuZHMgYXQgdGhlIHRvcCBvZiB0aGUgaW50ZWdyYXRlZCBqdWRpY2lhbCBzeXN0ZW0gaW4gdGhlIGNvdW50cnkuIEJlbG93IGl0LCB0aGVyZSBhcmUgaGlnaCBjb3VydHMgYXQgIHRoZSBzdGF0ZSBsZXZlbCBmb2xsb3dlZCBieSBzdWJvcmRpbmF0ZSBjb3VydHMgYXQgZGlzdHJpY3QgbGV2ZWwuIFRoaXMgc2luZ2xlIHN5c3RlbSBvZiBjb3VydHMgZW5mb3JjZXMgYm90aCAgdGhlIGNlbnRyYWwgbGF3cyBhcyB3ZWxsIGFzIHRoZSBzdGF0ZSBsYXdzLiBJbiBjb250cmFzdCwgaW4gdGhlIFVTQSwgdGhlIGZlZGVyYWwgbGF3cyBhcmUgZW5mb3JjZWQgYnkgdGhlICBmZWRlcmFsIGp1ZGljaWFyeSBhbmQgdGhlIHN0YXRlIGxhd3MgYXJlIGVuZm9yY2VkIGJ5IHRoZSBzdGF0ZSBqdWRpY2lhcnkuIEFsdGhvdWdoIHRoaXMgc3RhdGVtZW50IGlzICBjb3JyZWN0LCBpdCBkb2VzIG5vdCBleHBsYWluIHdoeSB0aGUgU3VwcmVtZSBjb3VydCBpcyBndWFyZGlhbiBvZiB0aGUgY29uc3RpdHV0aW9uLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSwgTGFrc2htaWthbnRoIC0gQ2hhcHRlciAzLCBTYWxpZW50IEZlYXR1cmVzIG9mIENvbnN0aXR1dGlvbiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both Statement-I and Statement-II are  correct and Statement-II is the correct  explanation for Statement- I ",
        "option2" : " Both Statement-I and Statement-II are  correct and Statement-II is not the correct  explanation for Statement-I ",
        "option3" : " Statement-I is correct but Statement-II is  incorrect ",
        "option4" : " Statement-I is incorrect but Statement-II is  correct  "
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following parts of the Indian Constitution was/were amended by the 97th Constitutional Amendment Act, 2011? 1. Part III 2. Part IV 3. Part IV-A 4. Part IX-B How many of the options given above are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgTmluZXR5LVNldmVudGggQW1lbmRtZW50IEFjdCwgMjAxMSBnYXZlIGNvbnN0aXR1dGlvbmFsIHN0YXR1cyBhbmQgcHJvdGVjdGlvbiB0byBjby1vcGVyYXRpdmUgIHNvY2lldGllcyBpbiBJbmRpYS4gICBPcHRpb24gMSBpcyBjb3JyZWN0OiBJdCBpcyB0cnVlIHRoYXQgdGhlIDk3dGggQ29uc3RpdHV0aW9uYWwgQW1lbmRtZW50IEFjdCAoQ0FBKSBhbWVuZGVkIFBhcnQgLSBJSUkgIChBcnRpY2xlIDEyLTM1KSBvZiB0aGUgY29uc3RpdHV0aW9uLiBUaGUgOTd0aCBDQUEgYW1lbmRlZCBBcnRpY2xlIDE5IG9mIHRoZSBJbmRpYW4gY29uc3RpdHV0aW9uIHRvIGluY2x1ZGUgIHRoZSByaWdodCB0byBmb3JtIGNvb3BlcmF0aXZlIHNvY2lldGllcyBhcyBSaWdodCB0byBGcmVlZG9tIHVuZGVyIEFydGljbGUgMTkgKDEpIG9mIHRoZSBjb25zdGl0dXRpb24uICAgT3B0aW9uIDIgaXMgY29ycmVjdDogSXQgaXMgdHJ1ZSB0aGF0IHRoZSA5N3RoIENBQSBhbWVuZGVkIHRoZSBQYXJ0IC0gSVYgKEFydGljbGUgMzYtNTEpIG9mIHRoZSBjb25zdGl0dXRpb24uICBUaGUgOTd0aCBDQUEgaW5zZXJ0ZWQgQXJ0aWNsZSA0M0Igd2hpY2ggc3RhdGVzIHRoYXQgdGhlIFN0YXRlIHNoYWxsIGVuZGVhdm91ciB0byBwcm9tb3RlIHZvbHVudGFyeSAgZm9ybWF0aW9uLCBhdXRvbm9tb3VzIGZ1bmN0aW9uaW5nLCBkZW1vY3JhdGljIGNvbnRyb2wgYW5kIHByb2Zlc3Npb25hbCBtYW5hZ2VtZW50IG9mIGNvLW9wZXJhdGl2ZSAgc29jaWV0aWVzLiBUaHVzIDk3dGggQ0FBIGluY2x1ZGVkIGEgbmV3IERpcmVjdGl2ZSBQcmluY2lwbGUgb2YgU3RhdGUgUG9saWN5IG9uIHByb21vdGlvbiBvZiBjby1vcGVyYXRpdmUgIHNvY2lldGllcy4gICBPcHRpb24gMyBpcyBpbmNvcnJlY3Q6IFRoZSBTd2FyYW4gU2luZ2ggQ29tbWl0dGVlIHN1Z2dlc3RlZCB0aGUgaW5jb3Jwb3JhdGlvbiBvZiBlaWdodCBGdW5kYW1lbnRhbCAgRHV0aWVzIGluIHRoZSBDb25zdGl0dXRpb24sIHRoZSA0Mm5kIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QgKDE5NzYpIGluY2x1ZGVkIHRlbiBGdW5kYW1lbnRhbCAgRHV0aWVzIGFuZCB0aGUgMTF0aCBkdXR5IHdhcyBhZGRlZCBieSA4NnRoIENBQSwgMjAwMi4gICBPcHRpb24gNCBpcyBjb3JyZWN0OiBJdCBpcyB0cnVlIHRoYXQgaXQgYWRkZWQgYSBuZXcgUGFydCBJWC1CIGluIHRoZSBjb25zdGl0dXRpb24gd2hpY2ggaXMgZW50aXRsZWQgYXMgJ1RoZSAgQ28tb3BlcmF0aXZlIFNvY2lldGllcycuIHVuZGVyIHRoZSBhcnRpY2xlIGZyb20gMjQzWkggLSAyNDMgWlQsIHdoaWNoIHByb3ZpZGVkIGd1aWRlbGluZXMgZm9yIHRoZSAgZm9ybWF0aW9uIGFuZCBmdW5jdGlvbmluZyBvZiB0aGUgY29vcGVyYXRpdmUgc29jaWV0aWVzLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBMYXhtaWthbnRoIC0gQXBwZW5kaXggKENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudHMpICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three  ",
        "option4" : "All four   ||| "
      }
    },
    {
      "index" : 6,
      "question" : "Consider the following statements: Statement-1: India can cede a part of its territory in favour of a foreign State. Statement-II: India is a Sovereign Country. Which one of the following is correct in respect of the above statements?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSAnUHJlYW1ibGUnIHJlZmVycyB0byB0aGUgaW50cm9kdWN0aW9uIG9yIHByZWZhY2UgdG8gdGhlIENvbnN0aXR1dGlvbi4gVGhlIFByZWFtYmxlIG9mIEluZGlhbiAgQ29uc3RpdHV0aW9uIGNvbnRhaW5zIHRoZSBzdW1tYXJ5IG9yIGVzc2VuY2Ugb2YgdGhlIENvbnN0aXR1dGlvbi4gVGhlIFByZWFtYmxlIGRlY2xhcmVzIEluZGlhIHRvIGJlIG9mIGEgIHNvdmVyZWlnbiwgc29jaWFsaXN0LCBzZWN1bGFyIGRlbW9jcmF0aWMgYW5kIHJlcHVibGljYW4gcG9saXR5LiAgICBvZiAyMyB8fHwgICBCb3RoIFN0YXRlbWVudC1JIGFuZCBTdGF0ZW1lbnQtSUkgYXJlIGNvcnJlY3Q6IFRoZSB3b3JkICdzb3ZlcmVpZ24nIGltcGxpZXMgdGhhdCBJbmRpYSBpcyBuZWl0aGVyIGEgIGRlcGVuZGVuY3kgbm9yIGEgZG9taW5pb24gb2YgYW55IG90aGVyIG5hdGlvbiwgYnV0IGFuIGluZGVwZW5kZW50IHN0YXRlLiBUaGVyZSBpcyBubyBhdXRob3JpdHkgYWJvdmUgaXQsICBhbmQgaXQgaXMgZnJlZSB0byBjb25kdWN0IGl0cyBvd24gYWZmYWlycyAoYm90aCBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwpLiBCZWluZyBhIHNvdmVyZWlnbiBzdGF0ZSwgSW5kaWEgY2FuICBlaXRoZXIgYWNxdWlyZSBhIGZvcmVpZ24gdGVycml0b3J5IG9yIGNlZGUgYSBwYXJ0IG9mIGl0cyB0ZXJyaXRvcnkgaW4gZmF2b3VyIG9mIGEgZm9yZWlnbiBzdGF0ZS4gVGh1cywgIFN0YXRlbWVudC1JSSBpcyB0aGUgY29ycmVjdCBleHBsYW5hdGlvbiBmb3IgU3RhdGVtZW50LUkuICAgS25vd2xlZGdlIEJhc2U6ICBUaGUgU3VwcmVtZSBDb3VydCBoYXMgaGVsZCB0aGF0IHRoZSBwb3dlciBvZiBQYXJsaWFtZW50IHRvIGRpbWluaXNoIHRoZSBhcmVhIG9mIGEgc3RhdGUgKHVuZGVyIEFydGljbGUgMykgIGRvZXMgbm90IGNvdmVyIGNlc3Npb24gb2YgSW5kaWFuIHRlcnJpdG9yeSB0byBhIGZvcmVpZ24gY291bnRyeS4gSGVuY2UsIEluZGlhbiB0ZXJyaXRvcnkgY2FuIGJlIGNlZGVkIHRvIGEgIGZvcmVpZ24gc3RhdGUgb25seSBieSBhbWVuZGluZyB0aGUgQ29uc3RpdHV0aW9uIHVuZGVyIEFydGljbGUgMzY4LiAgU291cmNlOiBMYW1pa2FudGgsIENoYXB0ZXIgNCAtUHJlYW1ibGU6IHBhZ2UgMTIzICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both Statement-I and Statement-II are  correct, and Statement-II is the correct  explanation for Statement-I ",
        "option2" : " Both Statement-I and Statement-II are  correct, and Statement-II is not the correct  explanation for Statement-I ",
        "option3" : " Statement-I is correct, but Statement-II is  incorrect ",
        "option4" : " Statement-I is incorrect, but Statement-II is  correct  "
      }
    },
    {
      "index" : 7,
      "question" : "Consider the following statements:   1.  Right to reputation forms a part of Article 21 of the Indian Constitution.  2.  The Universal Declaration on Human Rights, 1948 and International Covenant on Civil and Political Rights explicitly mentions the right to reputation.  Which of the statements given above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFzIHBlciB0aGUgU0MsIHRoZSByaWdodCB0byByZXB1dGF0aW9uIGlzIGFuIGludGVncmFsIHBhcnQgb2YgQXJ0aWNsZSAyMSBvZiB0aGUgIENvbnN0aXR1dGlvbi4gSW4gTWFuZWthIEdhbmRoaSB2LiBVbmlvbiBvZiBJbmRpYSAxOTc4LCB0aGUgU0MgZ2F2ZSBhIG5ldyBkaW1lbnNpb24gdG8gQXJ0aWNsZSAyMSBhbmQgaGVsZCAgdGhhdCB0aGUgcmlnaHQgdG8gbGl2ZSBpcyBub3QgbWVyZWx5IGEgcGh5c2ljYWwgcmlnaHQgYnV0IGluY2x1ZGVzIHdpdGhpbiBpdHMgYW1iaXQgdGhlIHJpZ2h0IHRvIGxpdmUgd2l0aCAgaHVtYW4gZGlnbml0eS4gU28sIGJvdGggcmlnaHRzIGFyZSBwYXJ0IG9mIGFydGljbGUgMjEuICAgSW4gdGhlIGp1ZGdtZW50IG9mIFN1YnJhbWFuaWFuIFN3YW15IHYuIFVuaW9uIG9mIEluZGlhLCB0aGUgYXBleCBjb3VydCBoZWxkIHRoYXQgdGhlIHJlcHV0YXRpb24gb2YgYW4gIGluZGl2aWR1YWwgaXMgYSBiYXNpYyBlbGVtZW50IHVuZGVyIEFydGljbGUgMjEgICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBcnRpY2xlIDEyIG9mIHRoZSBVbml2ZXJzYWwgRGVjbGFyYXRpb24gb24gSHVtYW4gUmlnaHRzLCAxOTQ4IGV4cGxpY2l0bHkgc3RhdGVzICBhYm91dCB0aGUgaW1wb3J0YW5jZSBvZiByZXB1dGF0aW9uIGFuZCBob25vdXIuIEZ1cnRoZXIsIEFydGljbGUgMTkgb2YgdGhlIEludGVybmF0aW9uYWwgQ292ZW5hbnQgb24gQ2l2aWwgIGFuZCBQb2xpdGljYWwgUmlnaHRzIG1lbnRpb25zIHRoZSByaWdodCB0byByZXB1dGF0aW9uLiAgIFNvdXJjZTogaHR0cHM6Ly93d3cuaW5kaWF0b2RheS5pbi9sYXcvc3RvcnkvYm9tYmF5LWhpZ2gtY291cnQtc2F5cy1yaWdodC10by1yZXB1dGF0aW9uLWFuZC0gZGlnbml0eS1pbnRlZ3JhbC10by1yaWdodC10by1saWZlLTIzMzE1NjItMjAyMy0wMi0wNyAgIGh0dHBzOi8vd3d3LmluZGlhdG9kYXkuaW4vaW5kaWEvc3Rvcnkvd2hhdC1kZWxoaS1jb3VydC1zYWlkLWluLW1qLWFrYmFyLXByaXlhLXJhbWFuaS12ZXJkaWN0LSBtZXRvby1kZWZhbWF0aW9uLWNhc2UtMTc3MDIxMi0yMDIxLTAyLTE3ICAgaHR0cHM6Ly9ibG9nLmZvcnVtaWFzLmNvbS9qdWRpY2lhcnlzLWluY29uc2lzdGVuY3ktaW4tZGVhbGluZy13aXRoLWNhc2VzLW9mLXBlcnNvbmFsLWxpYmVydHkvICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only  ",
        "option2" : "2 only  ",
        "option3" : "Both 1 and 2  ",
        "option4" : "Neither 1 nor 2   "
      }
    },
    {
      "index" : 8,
      "question" : "Consider the following statements with reference to the Fundamental Rights and other privileges available to persons: 1. Equality before law. 2. Protection against arrest in certain cases. 3. Right to freedom of speech and expression 4. Eligibility to get appointed as Attorney General of India. How many of the above privileges/rights are available to Indian Citizens only, and not to foreigners?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGhhcyB0d28ga2luZHMgb2YgcGVvcGxlLWNpdGl6ZW5zIGFuZCBhbGllbnMuIENpdGl6ZW5zIGFyZSBmdWxsIG1lbWJlcnMgb2YgdGhlIEluZGlhbiBTdGF0ZSBhbmQgb3dlICBhbGxlZ2lhbmNlIHRvIGl0LiBUaGV5IGVuam95IGFsbCBjaXZpbCBhbmQgcG9saXRpY2FsIHJpZ2h0cy4gQWxpZW5zLCBvbiB0aGUgb3RoZXIgaGFuZCwgYXJlIHRoZSBjaXRpemVucyBvZiBzb21lICBvdGhlciBzdGF0ZSBhbmQgaGVuY2UsIGRvIG5vdCBlbmpveSBhbGwgdGhlIGNpdmlsIGFuZCBwb2xpdGljYWwgcmlnaHRzLiAgT3B0aW9ucyAxIGFuZCAyIGFyZSBpbmNvcnJlY3Q6IFRoZSBjb25zdGl0dXRpb24gY29uZmVycyB0aGUgZm9sbG93aW5nIHJpZ2h0cyBhbmQgcHJpdmlsZWdlcyBvbiBjaXRpemVucyAgb2YgSW5kaWEgYW5kIGFsc28gYWxpZW5zIChleGNlcHQgZW5lbXkgYWxpZW5zKSAgMSkgQXJ0aWNsZSAxNDogRXF1YWxpdHkgYmVmb3JlIGxhdyBhbmQgZXF1YWwgcHJvdGVjdGlvbiBvZiBsYXdzLiAgMikgQXJ0aWNsZSAyMDogUHJvdGVjdGlvbiBpbiByZXNwZWN0IG9mIGNvbnZpY3Rpb24gZm9yIG9mZmVuY2VzLiAgMykgQXJ0aWNsZSAyMTogUHJvdGVjdGlvbiBvZiBsaWZlIGFuZCBwZXJzb25hbCBsaWJlcnR5LiAgNCkgQXJ0aWNsZSAyMUE6IFJpZ2h0IHRvIGVsZW1lbnRhcnkgZWR1Y2F0aW9uLiAgNSkgQXJ0aWNsZSAyMjogUHJvdGVjdGlvbiBhZ2FpbnN0IGFycmVzdCBhbmQgZGV0ZW50aW9uIGluIGNlcnRhaW4gY2FzZXMgIDYpIEFydGljbGUgMjM6IFByb2hpYml0aW9uIG9mIHRyYWZmaWMgYW5kIGh1bWFuIGJlaW5ncyBhbmQgZm9yY2VkIGxhYm91ci4gIDcpIEFydGljbGUgMjQ6IFByb2hpYml0aW9uIG9mIGVtcGxveW1lbnQgb2YgY2hpbGRyZW4gaW4gZmFjdG9yaWVzIGV0Yy4gIDgpIEFydGljbGUgMjU6IEZyZWVkb20gb2YgY29uc2NpZW5jZSBhbmQgZnJlZSBwcm9mZXNzaW9uLCBwcmFjdGljZSBhbmQgcHJvcGFnYXRpb24gb2YgcmVsaWdpb24uICA5KSBBcnRpY2xlIDI2OiBGcmVlZG9tIHRvIG1hbmFnZSByZWxpZ2lvdXMgYWZmYWlycy4gIDEwKSBBcnRpY2xlIDI3OiBGcmVlZG9tIGZyb20gcGF5bWVudCBvZiB0YXhlcyBmb3IgcHJvbW90aW9uIG9mIGFueSByZWxpZ2lvbi4gICAgb2YgMjMgfHx8ICAgMTEpIEFydGljbGUgMjg6IEZyZWVkb20gZnJvbSBhdHRlbmRpbmcgcmVsaWdpb3VzIGluc3RydWN0aW9uIG9yIHdvcnNoaXAgaW4gY2VydGFpbiBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbnMuICBPcHRpb25zIDMsIGFuZCA0IGFyZSBjb3JyZWN0OiBUaGUgQ29uc3RpdHV0aW9uIGNvbmZlcnMgdGhlIGZvbGxvd2luZyByaWdodHMgYW5kIHByaXZpbGVnZXMgb24gdGhlICBjaXRpemVucyBvZiBJbmRpYSBhbmQgZGVuaWVzIHRoZSBzYW1lIHRvIGFsaWVucyAoRm9yZWlnbmVycyk6ICAxKSBBcnRpY2xlIDE1LSBSaWdodCBhZ2FpbnN0IGRpc2NyaW1pbmF0aW9uIG9uIGdyb3VuZHMgb2YgcmVsaWdpb24sIHJhY2UsIGNhc3RlLCBzZXggb3IgcGxhY2Ugb2YgYmlydGguICAyKSBBcnRpY2xlIDE2LSBSaWdodCB0byBlcXVhbGl0eSBvZiBvcHBvcnR1bml0eSBpbiB0aGUgbWF0dGVyIG9mIHB1YmxpYyBlbXBsb3ltZW50ICAzKSBBcnRpY2xlIDE5LSBSaWdodCB0byBmcmVlZG9tIG9mIHNwZWVjaCBhbmQgZXhwcmVzc2lvbiwgYXNzZW1ibHksIGFzc29jaWF0aW9uLCBtb3ZlbWVudCwgcmVzaWRlbmNlICBhbmQgcHJvZmVzc2lvbi4gIDQpIEFydGljbGVzIDI5IGFuZCAzMCAtIEN1bHR1cmFsIGFuZCBlZHVjYXRpb25hbCByaWdodHMuICA1KSBSaWdodCB0byB2b3RlIGluIGVsZWN0aW9ucyB0byB0aGUgTG9rIFNhYmhhIGFuZCBzdGF0ZSBsZWdpc2xhdGl2ZSBhc3NlbWJseS4gIDYpIFJpZ2h0IHRvIGNvbnRlc3QgZm9yIHRoZSBtZW1iZXJzaGlwIG9mIHRoZSBQYXJsaWFtZW50IGFuZCB0aGUgc3RhdGUgbGVnaXNsYXR1cmUuICA3KSBFbGlnaWJpbGl0eSB0byBob2xkIGNlcnRhaW4gcHVibGljIG9mZmljZXMsIHRoYXQgaXMsIFByZXNpZGVudCBvZiBJbmRpYSwgVmljZS1QcmVzaWRlbnQgb2YgSW5kaWEsIGp1ZGdlcyBvZiAgdGhlIFN1cHJlbWUgQ291cnQgYW5kIHRoZSBoaWdoIGNvdXJ0cywgR292ZXJub3Igb2Ygc3RhdGVzLCBBdHRvcm5leSBHZW5lcmFsIG9mIEluZGlhIGFuZCBBZHZvY2F0ZSAgR2VuZXJhbCBvZiBzdGF0ZXMuICBTb3VyY2U6IExheG1pa2FudGggY2hhcHRlciA2LCBDaXRpemVuc2hpcCwgcGFnZSAxNjAgYW5kIHBhZ2UgMTg5ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 9,
      "question" : "With reference to features of Indian Constitution, consider the following pairs: Feature of Indian Constitution Features Borrowed From 1. Election of members of Rajya Sabha South African Constitution 2. Procedure established by the law Japanese Constitution 3. Joint sitting of the two houses of Parliament Canadian Constitution 4. Appointment of governors by the centre British Constitution How many of the above pairs are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk=",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgaGFzIGJvcnJvd2VkIG1vc3Qgb2YgaXRzIHByb3Zpc2lvbnMgZnJvbSB0aGUgQ29uc3RpdHV0aW9ucyBvZiB2YXJpb3VzIG90aGVyICBjb3VudHJpZXMgYXMgd2VsbCBhcyBmcm9tIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIEFjdCBvZiAxOTM1LiAgUGFpciAxIGlzIGNvcnJlY3Q6IFRoZSBmb2xsb3dpbmcgZmVhdHVyZXMgYXJlIGJvcnJvd2VkIGZyb20gU291dGggQWZyaWNhbiBDb25zdGl0dXRpb246ICAxKSBQcm9jZWR1cmUgZm9yIGFtZW5kbWVudCBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgMikgRWxlY3Rpb24gb2YgbWVtYmVycyBvZiBSYWp5YSBTYWJoYS4gIFBhaXIgMiBpcyBjb3JyZWN0OiBUaGUgZm9sbG93aW5nIGZlYXR1cmVzIGFyZSBib3Jyb3dlZCBmcm9tIEphcGFuZXNlIENvbnN0aXR1dGlvbjogIDEpIFByb2NlZHVyZSBlc3RhYmxpc2hlZCBieSBMYXcgIFBhaXIgMyBpcyBpbmNvcnJlY3Q6IFRoZSBmb2xsb3dpbmcgZmVhdHVyZXMgYXJlIGJvcnJvd2VkIGZyb20gQXVzdHJhbGlhbiBDb25zdGl0dXRpb24gKG5vdCBDYW5hZGlhbiAgQ29uc3RpdHV0aW9uKSAgMSkgQ29uY3VycmVudCBMaXN0LiAgMikgRnJlZWRvbSBvZiB0cmFkZSwgY29tbWVyY2UgYW5kIGludGVyLWNvdXJzZS4gIDMpIEpvaW50IHNpdHRpbmcgb2YgdGhlIHR3byBIb3VzZXMgb2YgUGFybGlhbWVudC4gIFBhaXIgNCBpcyBpbmNvcnJlY3Q6IFRoZSBmb2xsb3dpbmcgZmVhdHVyZXMgYXJlIGJvcnJvd2VkIGZyb20gQ2FuYWRpYW4gQ29uc3RpdHV0aW9uIChub3QgQnJpdGlzaCAgQ29uc3RpdHV0aW9uKTogIDEpIEZlZGVyYXRpb24gd2l0aCBhIHN0cm9uZyBDZW50cmUuICAyKSBWZXN0aW5nIG9mIHJlc2lkdWFyeSBwb3dlcnMgaW4gdGhlIENlbnRyZS4gICAzKSBBcHBvaW50bWVudCBvZiBzdGF0ZSBnb3Zlcm5vcnMgYnkgdGhlIENlbnRyZS4gIDQpIEFkdmlzb3J5IGp1cmlzZGljdGlvbiBvZiB0aGUgU3VwcmVtZSBDb3VydCAgVGhlIGZvbGxvd2luZyBmZWF0dXJlcyBhcmUgYm9ycm93ZWQgZnJvbSBCcml0aXNoIENvbnN0aXR1dGlvbjogIDEpIFBhcmxpYW1lbnRhcnkgZ292ZXJubWVudC4sIFJ1bGUgb2YgTGF3LiAgMikgTGVnaXNsYXRpdmUgcHJvY2VkdXJlLCBDYWJpbmV0IHN5c3RlbS4gIDMpIFNpbmdsZSBjaXRpemVuc2hpcC4gIDQpIFByZXJvZ2F0aXZlIHdyaXRzLCBQYXJsaWFtZW50YXJ5IHByaXZpbGVnZXMsIGFuZCBCaWNhbWVyYWxpc20uICBTb3VyY2U6IExheG1pa2FudGggY2hhcHRlciAzLSBTYWxpZW50IEZlYXR1cmVzIG9mIHRoZSBDb25zdGl0dXRpb24sIHBhZ2UgMTE1LiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 10,
      "question" : "Consider the following statements regarding the term 'Asymmetric Federalism': 1.  In Asymmetric Federalism, a particular state can have greater executive powers than other states. 2.  It overlooks the diverse cultural, linguistic, and historical differences among constituent units. 3.  Indian Constitution provides for the Asymmetric federalism. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICAgb2YgMjMgfHx8ICAgRmVkZXJhbGlzbSByZWZlcnMgdG8gYSBzeXN0ZW0gb2YgZ292ZXJubWVudCBpbiB3aGljaCB0aGUgcG93ZXIgaXMgZGl2aWRlZCBiZXR3ZWVuIGEgbmF0aW9uYWwgIGdvdmVybm1lbnQgYW5kIHRoZSByZWdpb25hbCBnb3Zlcm5tZW50cyBieSB0aGUgQ29uc3RpdHV0aW9uIGl0c2VsZi4gQm90aCBsZXZlbHMgb2YgZ292ZXJubWVudHMgb3BlcmF0ZSAgaW4gdGhlaXIgcmVzcGVjdGl2ZSBqdXJpc2RpY3Rpb25zIGluZGVwZW5kZW50bHkuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgdGVybSBhc3ltbWV0cmljYWwgZmVkZXJhbGlzbSByZWZlcnMgdG8gYSBmbGV4aWJsZSB0eXBlIG9mIHVuaW9uIG9mIHN0YXRlcyAgd2hpY2ggYWxsb3dzIHRoZSBnb3Zlcm5tZW50IHRvIGN1dCBkaWZmZXJlbnQgZGVhbHMgd2l0aCBkaWZmZXJlbnQgc3RhdGVzIGluIHNwZWNpYWwgbWF0dGVycyBwZXJ0YWluaW5nICB0byB0aGVtLiBUaGlzIG1ldGhvZCBhbGxvd3MgdGhlIGdvdmVybm1lbnQgdG8gZ3JhbnQgc3BlY2lhbCBzdGF0dXMgdG8gc29tZSB1bml0cyBwcm92aWRpbmcgdGhlbSB3aXRoICBzcGVjaWFsIHBvd2VycyBub3QgZW5qb3llZCBieSBvdGhlciBzdGF0ZXMuIEl0IHBlcm1pdHMgcGFydGljdWxhciBzdGF0ZXMgdG8gaGF2ZSBncmVhdGVyIGV4ZWN1dGl2ZSwgIGxlZ2lzbGF0aXZlLCBhbmQgYXQgdGltZXMsIGp1ZGljaWFsIHBvd2VycyB0aGFuIG90aGVyIHN0YXRlcy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogQXN5bW1ldHJpYyBmZWRlcmFsaXNtIHJlY29nbml6ZXMgKG5vdCBvdmVybG9vaykgdGhlIGRpdmVyc2UgY3VsdHVyYWwsICBsaW5ndWlzdGljLCBhbmQgaGlzdG9yaWNhbCBkaWZmZXJlbmNlcyBhbW9uZyBjb25zdGl0dWVudCB1bml0cy4gQW4gYXN5bW1ldHJpY2FsIHNldHVwIGNhbiBiZSBlZmZlY3RpdmUgIHdoZW4gdGhlIG5lZWRzIG9mIHN0YXRlIGFyZSBkaXZlcnNlIHJlbGlnaW91c2x5LCBjdWx0dXJhbGx5IGFuZC9vciBldGhuaWNhbGx5LiBJbiBzdWNoIGEgY2FzZSwgYXN5bW1ldHJpY2FsICBmZWRlcmFsaXNtIGNhdGVycyB0byB0aGUgbmVlZHMgb2YgcGFydGljdWxhciBjb21tdW5pdGllcyBieSBnaXZpbmcgdGhlbSBzcGVjaWFsIHN0YXR1cy4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBBc3ltbWV0cnkgaXMgZXN0YWJsaXNoZWQgdGhyb3VnaCBsZWdhbCBpbnN0aXR1dGlvbmFsIGFycmFuZ2VtZW50cy4gRm9yICBpbnN0YW5jZSwgaW4gSW5kaWEgdGhlc2UgYXJyYW5nZW1lbnRzIGhhdmUgYSBjb25zdGl0dXRpb25hbCBiYXNpcyB3aGVyZWFzIGluIGNvdW50cmllcyBsaWtlIEluZG9uZXNpYSwgIENoaW5hLCBldGMuIGl0IGlzIGJhc2VkIG9uIGxlZ2lzbGF0aXZlIGFycmFuZ2VtZW50cy4gSW5kaWFuIGNvbnN0aXR1dGlvbiBhbGxvd3Mgc29tZSBib3JkZXIgc3RhdGVzIGluIHRoZSAgTm9ydGgtV2VzdCBhbmQgTm9ydGgtRWFzdCByZWdpb24gKGkuZS4sIEphbW11IGFuZCBLYXNobWlyLCBOYWdhbGFuZCBhbmQgTWl6b3JhbSkgdG8gZXhlcmNpc2UgIGNvbnN0aXR1dGlvbmFsIGFzeW1tZXRyaWVzIHVuZGVyIGFydGljbGUgMzcxLiBUaGVyZSBhcmUgYXN5bW1ldHJpZXMgcHJlc2VudCBpbiB0aGUgSW5kaWFuIGNvbnN0aXR1dGlvbiAgYXQgdGhlIHN1YiBzdGF0ZSBsZXZlbCBpbiB0aGUgZm9ybSBvZiBVbmlvbiBUZXJyaXRvcmllcy4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LmxlZ2Fsc2VydmljZWluZGlhLmNvbS9sZWdhbC9hcnRpY2xlLTEzNTMtd2hldGhlci1pbmRpYS1hLXVuaW9uLW9mLXN0YXRlcy1pcy1hbi0gZXhhbXBsZS1vZi1hc3ltbWV0cmljLWZlZGVyYWxpc20tLmh0bWwgIGh0dHBzOi8vYmxvZy5mb3J1bWlhcy5jb20vYW5zd2VyZWQtd2hhdC1kby15b3UtdW5kZXJzdGFuZC1ieS1hc3ltbWV0cmljLWZlZGVyYWxpc20tZGlzY3Vzcy0gdGhlLWltcG9ydGFuY2Utb2YtYXN5bW1ldHJpYy1mZWRlcmFsaXNtLWluLWluZGlhLyAgaHR0cHM6Ly93d3cudGhlaGluZHUuY29tL25ld3MvbmF0aW9uYWwgaGUtZm9ybXMtb2YtZmVkZXJhbGlzbS1pbi1pbmRpYS9hcnRpY2xlMjg5Nzc2NzEuZWNlICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None   ||| "
      }
    },
    {
      "index" : 11,
      "question" : "With reference to consequences of imposition of various types of emergencies on the legislative relations between centre and states, consider the following statements: 1. Upon proclamation of National Emergency, the state legislatures are prohibited from making laws on matters in the State List. 2. Laws made by the Parliament on a State Subject will continue to be operative even after revocation of the President's Rule. 3. Upon proclamation of Financial Emergency, legislative power of states related to financial matters will be exercised by the Parliament only. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEx",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEVtZXJnZW5jeSBwcm92aXNpb25zIGFyZSBjb250YWluZWQgaW4gUGFydCBYVklJSSBvZiB0aGUgQ29uc3RpdHV0aW9uLCBmcm9tIEFydGljbGVzIDM1MiB0byAzNjAuIFRoZXNlICBwcm92aXNpb25zIGVuYWJsZSB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50IHRvIG1lZXQgYW55IGFibm9ybWFsIHNpdHVhdGlvbiBlZmZlY3RpdmVseS4gRW1lcmdlbmN5ICBwcm92aXNpb24gZnVuZGFtZW50YWxseSBhbHRlcnMgdGhlIHJlbGF0aW9ucyBiZXR3ZWVuIGNlbnRyZSBhbmQgc3RhdGUuICAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBPbiB0aGUgcHJvY2xhbWF0aW9uIG9mIE5hdGlvbmFsIGVtZXJnZW5jeSwgcG93ZXIgb2Ygc3RhdGUgbGVnaXNsYXR1cmVzIHRvICBtYWtlIGxhd3Mgb24gc3RhdGUgbGlzdHMgaXMgbm90IHJlc3RyaWN0ZWQuIEl0IGNvbnRpbnVlcyB0byBoYXZlIHNpbXVsdGFuZW91cyBsZWdpc2xhdGl2ZSBwb3dlciBhbG9uZyAgd2l0aCBQYXJsaWFtZW50LCBob3dldmVyIGluIGNhc2Ugb2YgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuIFBhcmxpYW1lbnQgYW5kIHN0YXRlIGFzc2VtYmx5IGxhd3MsIHRoZSAgUGFybGlhbWVudCBsYXcgd2lsbCBwcmV2YWlsLiAgIFN0YXRlbWVudCAyIGlzIGNvcnJlY3Q6IEl0IGlzIHRydWUgdGhhdCBvbiByZXZvY2F0aW9uIG9mIHRoZSBQcmVzaWRlbnQncyBydWxlLCB0aGUgbGF3IG1hZGUgYnkgdGhlICBQYXJsaWFtZW50IG9uIGEgU3RhdGUgU3ViamVjdCB3aWxsIGNvbnRpbnVlIHRvIHByZXZhaWwgdW5sZXNzIGl0IHdvdWxkIGJlIHJlcGVhbGVkIGJ5IHRoZSBzdGF0ZSBsZWdpc2xhdGl2ZSAgYXNzZW1ibHkuIEluIGNvbnRyYXN0LCBsYXdzIG1hZGUgYnkgUGFybGlhbWVudCBkdXJpbmcgbmF0aW9uYWwgZW1lcmdlbmN5IHdpbGwgY2Vhc2UgdG8gaGF2ZSBhbnkgZWZmZWN0ICBvbiB0aGUgZXhwaXJhdGlvbiBvZiA2IG1vbnRocyBhZnRlciByZXZvY2F0aW9uIG9mIG5hdGlvbmFsIGVtZXJnZW5jeS4gICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBPbiBwcm9jbGFtYXRpb24gb2YgZmluYW5jaWFsIGVtZXJnZW5jeSwgUGFybGlhbWVudCBjYW5ub3QgYXNzdW1lIHRoZSAgcG93ZXIgb2Ygc3RhdGUgbGVnaXNsYXR1cmUuIEhvd2V2ZXIgZmluYW5jaWFsIGVtZXJnZW5jeSBlbXBvd2VycyBVbmlvbiBnb3Zlcm5tZW50IHRvIGV4ZWN1dGl2ZSAgZGlyZWN0aW9ucyB0byBhbnkgc3RhdGUgdG8gb2JzZXJ2ZSBmaW5hbmNpYWwgcHJvcHJpZXRhcnkgYW5kIHRvIHJlZHVjZSB0aGUgc2FsYXJpZXMgYW5kIHBlbnNpb25zIG9mICBnb3Zlcm5tZW50IGVtcGxveWVlcyBvZiB0aGUgc3RhdGUuICAgIFNvdXJjZTogIExheG1pa2FudGggLSBDZW50cmUgU3RhdGUgcmVsYXRpb25zICBFbWVyZ2VuY3kgUHJvdmlzaW9ucyAgICAgICBvZiAyMyB8fHwgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 12,
      "question" : "Consider the following statements:  1.  According to Indian Constitution, a person may lose his citizenship if he voluntarily acquires the citizenship of any foreign state. 2.  Indian constitution provides for single citizenship. Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gZGVhbHMgd2l0aCBjaXRpemVuc2hpcCBmcm9tIEFydGljbGVzIDUgdG8gMTEgdW5kZXIgUGFydCBJSS4gSG93ZXZlciwgaXQgY29udGFpbnMgbmVpdGhlciAgYW55IHBlcm1hbmVudCBub3IgYW55IGVsYWJvcmF0ZSBwcm92aXNpb25zIGluIHRoaXMgcmVnYXJkLiBJdCBvbmx5IGlkZW50aWZpZXMgdGhlIHBlcnNvbnMgd2hvIGJlY2FtZSAgY2l0aXplbnMgb2YgSW5kaWEgYXQgaXRzIGNvbW1lbmNlbWVudCAoaS5lLiwgb24gSmFudWFyeSAyNiwgMTk1MCkuIEl0IGVtcG93ZXJzIHRoZSBQYXJsaWFtZW50IHRvIGVuYWN0IGEgIGxhdyB0byBwcm92aWRlIGZvciBhbnkgbWF0dGVyIHJlbGF0aW5nIHRvIGNpdGl6ZW5zaGlwLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IEFjY29yZGluZyB0byBBcnRpY2xlIDkgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSwgbm8gcGVyc29uIHNoYWxsIGJlIGEgY2l0aXplbiBvZiAgSW5kaWEgb3IgYmUgZGVlbWVkIHRvIGJlIGEgY2l0aXplbiBvZiBJbmRpYSwgaWYgaGUgaGFzIHZvbHVudGFyaWx5IGFjcXVpcmVkIHRoZSBjaXRpemVuc2hpcCBvZiBhbnkgZm9yZWlnbiAgc3RhdGUuIFdoZW4gYW4gSW5kaWFuIGNpdGl6ZW4gdm9sdW50YXJpbHkgKGNvbnNjaW91c2x5LCBrbm93aW5nbHkgYW5kIHdpdGhvdXQgZHVyZXNzLCB1bmR1ZSBpbmZsdWVuY2Ugb3IgIGNvbXB1bHNpb24pIGFjcXVpcmVzIHRoZSBjaXRpemVuc2hpcCBvZiBhbm90aGVyIGNvdW50cnksIGhpcyBJbmRpYW4gY2l0aXplbnNoaXAgYXV0b21hdGljYWxseSB0ZXJtaW5hdGVzLiAgVGhpcyBwcm92aXNpb24sIGhvd2V2ZXIsIGRvZXMgbm90IGFwcGx5IGR1cmluZyBhIHdhciBpbiB3aGljaCBJbmRpYSBpcyBlbmdhZ2VkLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogU2luZ2xlIGNpdGl6ZW5zaGlwIG1lYW5zLCB0aGVyZSBpcyBvbmx5IGFuIEluZGlhbiBDaXRpemVuc2hpcCwgbm90IGFueSBTdGF0ZSAgY2l0aXplbnNoaXAuIFRob3VnaCB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiBpcyBmZWRlcmFsIGFuZCBlbnZpc2FnZXMgYSBkdWFsIHBvbGl0eSAoQ2VudHJlIGFuZCBzdGF0ZXMpLCB0aGUgIGNpdGl6ZW5zIGluIEluZGlhIG93ZSBhbGxlZ2lhbmNlIG9ubHkgdG8gdGhlIFVuaW9uLiBUaGVyZSBpcyBubyBzZXBhcmF0ZSBzdGF0ZSBjaXRpemVuc2hpcC4gVGhlIG90aGVyICBmZWRlcmFsIHN0YXRlcyBsaWtlIFVTQSBhbmQgU3dpdHplcmxhbmQsIG9uIHRoZSBvdGhlciBoYW5kLCBhZG9wdGVkIHRoZSBzeXN0ZW0gb2YgZG91YmxlIGNpdGl6ZW5zaGlwLiAgIFNvdXJjZTogTGF4bWlrYW50aCBjaGFwdGVyIDY6IENpdGl6ZW5zaGlwICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 13,
      "question" : "This Act distinguished between the commercial and political functions of the Company. It provided British Government the supreme control over Company's affairs and its administration in India. The Company's territories in India were for the first time called the 'British possessions in India'.  This act was:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluIGEgYmlkIHRvIHJlY3RpZnkgdGhlIGRlZmVjdHMgb2YgdGhlIFJlZ3VsYXRpbmcgQWN0IG9mIDE3NzMsIHRoZSBCcml0aXNoIFBhcmxpYW1lbnQgcGFzc2VkIHRoZSBBbWVuZGluZyAgQWN0IG9mIDE3ODEsIGFsc28ga25vd24gYXMgdGhlIEFjdCBvZiBTZXR0bGVtZW50LiBUaGUgbmV4dCBpbXBvcnRhbnQgYWN0IHdhcyB0aGUgUGl0dCdzIEluZGlhIEFjdCBvZiAxNzg0LiAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBSZWd1bGF0aW5nIEFjdCBvZiAxNzczIGlzIG9mIGdyZWF0IGNvbnN0aXR1dGlvbmFsIGltcG9ydGFuY2UgYXMgaXQgd2FzIHRoZSBmaXJzdCBzdGVwICB0YWtlbiBieSB0aGUgQnJpdGlzaCBHb3Zlcm5tZW50IHRvIGNvbnRyb2wgYW5kIHJlZ3VsYXRlIHRoZSBhZmZhaXJzIG9mIHRoZSBFYXN0IEluZGlhIENvbXBhbnkgaW4gSW5kaWEuIEl0ICByZWNvZ25pc2VkLCBmb3IgdGhlIGZpcnN0IHRpbWUsIHRoZSBwb2xpdGljYWwgYW5kIGFkbWluaXN0cmF0aXZlIGZ1bmN0aW9ucyBvZiB0aGUgQ29tcGFueTsgYW5kIGl0IGxhaWQgdGhlICBmb3VuZGF0aW9ucyBvZiBjZW50cmFsIGFkbWluaXN0cmF0aW9uIGluIEluZGlhLiBJdCBkZXNpZ25hdGVkIHRoZSBHb3Zlcm5vciBvZiBCZW5nYWwgYXMgdGhlICdHb3Zlcm5vci0gR2VuZXJhbCBvZiBCZW5nYWwnIGFuZCBjcmVhdGVkIGFuIEV4ZWN1dGl2ZSBDb3VuY2lsIG9mIGZvdXIgbWVtYmVycyB0byBhc3Npc3QgaGltLiAgIE9wdGlvbiBiIGlzIGNvcnJlY3Q6IFRoZSBQaXR0J3MgSW5kaWEgQWN0IG9mIDE3ODQgZGlzdGluZ3Vpc2hlZCBiZXR3ZWVuIHRoZSBjb21tZXJjaWFsIGFuZCBwb2xpdGljYWwgIGZ1bmN0aW9ucyBvZiB0aGUgQ29tcGFueS4gSXQgYWxsb3dlZCB0aGUgQ291cnQgb2YgRGlyZWN0b3JzIHRvIG1hbmFnZSB0aGUgY29tbWVyY2lhbCBhZmZhaXJzIGJ1dCAgY3JlYXRlZCBhIG5ldyBib2R5IGNhbGxlZCBCb2FyZCBvZiBDb250cm9sIHRvIG1hbmFnZSB0aGUgcG9saXRpY2FsIGFmZmFpcnMuIFRoZSBDb21wYW55J3MgdGVycml0b3JpZXMgaW4gIEluZGlhIHdlcmUgZm9yIHRoZSBmaXJzdCB0aW1lIGNhbGxlZCB0aGUgJ0JyaXRpc2ggcG9zc2Vzc2lvbnMgaW4gSW5kaWEnLiAgSXQgZW1wb3dlcmVkIHRoZSBCb2FyZCBvZiBDb250cm9sICB0byBzdXBlcnZpc2UgYW5kIGRpcmVjdCBhbGwgb3BlcmF0aW9ucyBvZiB0aGUgY2l2aWwgYW5kIG1pbGl0YXJ5IGdvdmVybm1lbnQgb3IgcmV2ZW51ZXMgb2YgdGhlIEJyaXRpc2ggIHBvc3Nlc3Npb25zIGluIEluZGlhLiBJdCBwcm92aWRlZCBCcml0aXNoIEdvdmVybm1lbnQgdGhlIHN1cHJlbWUgY29udHJvbCBvdmVyIENvbXBhbnkncyBhZmZhaXJzIGFuZCBpdHMgIGFkbWluaXN0cmF0aW9uIGluIEluZGlhLiAgIE9wdGlvbiBjIGlzIGluY29ycmVjdDogVGhlIENoYXJ0ZXIgQWN0IG9mIDE3OTMgcmVuZXdlZCB0aGUgQ29tcGFueSdzIGNvbW1lcmNpYWwgcHJpdmlsZWdlcyBmb3IgdGhlIG5leHQgIDIwIHllYXJzLiBUaGUgcm95YWwgYXBwcm92YWwgd2FzIG1hbmRhdGVkIGZvciB0aGUgYXBwb2ludG1lbnQgb2YgdGhlIGdvdmVybm9yIGdlbmVyYWwsIHRoZSBnb3Zlcm5vcnMsICBhbmQgdGhlIGNvbW1hbmRlcmluLWNoaWVmLiAgU2VuaW9yIG9mZmljaWFscyBvZiB0aGUgQ29tcGFueSB3ZXJlIGRlYmFycmVkIGZyb20gbGVhdmluZyBJbmRpYSB3aXRob3V0ICBwZXJtaXNzaW9uIGRvaW5nIHNvIHdhcyB0cmVhdGVkIGFzIHJlc2lnbmF0aW9uLiBUaGUgQ29tcGFueSB3YXMgZW1wb3dlcmVkIHRvIGdpdmUgbGljZW5jZXMgdG8gIGluZGl2aWR1YWxzIGFzIHdlbGwgYXMgdGhlIENvbXBhbnkncyBlbXBsb3llZXMgdG8gdHJhZGUgaW4gSW5kaWEuIFRoZSBsaWNlbmNlcywga25vd24gYXMgJ3ByaXZpbGVnZScgb3IgICdjb3VudHJ5IHRyYWRlJywgcGF2ZWQgdGhlIHdheSBmb3Igc2hpcG1lbnRzIG9mIG9waXVtIHRvIENoaW5hLiAgVGhlIHJldmVudWUgYWRtaW5pc3RyYXRpb24gd2FzICBzZXBhcmF0ZWQgZnJvbSB0aGUganVkaWNpYXJ5IGZ1bmN0aW9ucywgYW5kIHRoaXMgbGVkIHRvIGRpc2FwcGVhcmluZyBvZiB0aGUgTWFhbCBBZGFsYXRzLiAgIE9wdGlvbiBkIGlzIGluY29ycmVjdDogVGhlIENoYXJ0ZXIgQWN0IG9mIDE4MzMgd2FzIHRoZSBmaW5hbCBzdGVwIHRvd2FyZHMgY2VudHJhbGlzYXRpb24gaW4gQnJpdGlzaCBJbmRpYS4gSXQgIG1hZGUgdGhlIEdvdmVybm9yLUdlbmVyYWwgb2YgQmVuZ2FsIGFzIHRoZSBHb3Zlcm5vci1HZW5lcmFsIG9mIEluZGlhIGFuZCB2ZXN0ZWQgaW4gaGltIGFsbCBjaXZpbCBhbmQgIG1pbGl0YXJ5IHBvd2Vycy4gVGh1cywgdGhlIGFjdCBjcmVhdGVkLCBmb3IgdGhlIGZpcnN0IHRpbWUsIGEgR292ZXJubWVudCBvZiBJbmRpYSBoYXZpbmcgYXV0aG9yaXR5IG92ZXIgdGhlICBlbnRpcmUgdGVycml0b3JpYWwgYXJlYSBwb3NzZXNzZWQgYnkgdGhlIEJyaXRpc2ggaW4gSW5kaWEuIEl0IGRlcHJpdmVkIHRoZSBnb3Zlcm5vciBvZiBCb21iYXkgYW5kIE1hZHJhcyBvZiAgdGhlaXIgbGVnaXNsYXRpdmUgcG93ZXJzLiBJdCBlbmRlZCB0aGUgYWN0aXZpdGllcyBvZiB0aGUgRWFzdCBJbmRpYSBDb21wYW55IGFzIGEgY29tbWVyY2lhbCBib2R5LCB3aGljaCAgICBvZiAyMyB8fHwgICBiZWNhbWUgYSBwdXJlbHkgYWRtaW5pc3RyYXRpdmUgYm9keS4gSXQgcHJvdmlkZWQgdGhhdCB0aGUgY29tcGFueSdzIHRlcnJpdG9yaWVzIGluIEluZGlhIHdlcmUgaGVsZCBieSBpdCAnaW4gIHRydXN0IGZvciBIaXMgTWFqZXN0eSwgSGlzIGhlaXJzIGFuZCBzdWNjZXNzb3JzJy4gIFNvdXJjZTogTGF4bWlrYW50aCwgY2hhcHRlciAxOiAgSGlzdG9yaWNhbCBiYWNrZ3JvdW5kICBTcGVjdHJ1bSwgQ2hhcHRlciAyNjogQ29uc3RpdHV0aW9uYWwsIEFkbWluaXN0cmF0aXZlLCBhbmQgSnVkaWNpYWwgRGV2ZWxvcG1lbnRzICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "The Regulating Act of 1773 ",
        "option2" : "The Pitt's India Act of 1784 ",
        "option3" : "The Charter Act of 1793 ",
        "option4" : "The Charter Act of 1833  "
      }
    },
    {
      "index" : 14,
      "question" : "With reference to various committees of the Constituent Assembly and their Chairman, consider the following pairs: Constituent Assembly Committees Chairmen 1. Union Constitution Committee Jawaharlal Nehru 2.  States Committee (Committee for Negotiating with States) Sardar Patel 3. Steering Committee J.B. Kripalani 4. Rules of Procedure Committee Dr. Rajendra Prasad How many of the above pairs are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dWVudCBBc3NlbWJseSBhcHBvaW50ZWQgYSBudW1iZXIgb2YgY29tbWl0dGVlcyB0byBkZWFsIHdpdGggZGlmZmVyZW50IHRhc2tzIG9mIGNvbnN0aXR1dGlvbi0gbWFraW5nLiBPdXQgb2YgdGhlc2UsIGVpZ2h0IHdlcmUgbWFqb3IgY29tbWl0dGVlcyBhbmQgdGhlIG90aGVycyB3ZXJlIG1pbm9yIGNvbW1pdHRlZXMuICBNYWpvciBDb21taXR0ZWVzOiAgMSkgVW5pb24gUG93ZXJzIENvbW1pdHRlZSAtIEphd2FoYXJsYWwgTmVocnUgICAyKSBVbmlvbiBDb25zdGl0dXRpb24gQ29tbWl0dGVlIC0gSmF3YWhhcmxhbCBOZWhydSAoSGVuY2UsIHBhaXIgMSBpcyBjb3JyZWN0KSAgMykgUHJvdmluY2lhbCBDb25zdGl0dXRpb24gQ29tbWl0dGVlIC0gU2FyZGFyIFBhdGVsICA0KSBEcmFmdGluZyBDb21taXR0ZWUgLSBEci4gQi5SLiBBbWJlZGthciAgIDUpIEFkdmlzb3J5IENvbW1pdHRlZSBvbiBGdW5kYW1lbnRhbCBSaWdodHMsIE1pbm9yaXRpZXMgYW5kIFRyaWJhbCBhbmQgRXhjbHVkZWQgQXJlYXMgLSBTYXJkYXIgUGF0ZWwuICAgNikgUnVsZXMgb2YgUHJvY2VkdXJlIENvbW1pdHRlZSAtIERyLiBSYWplbmRyYSBQcmFzYWQgKEhlbmNlLCBwYWlyIDQgaXMgY29ycmVjdCkgIDcpIFN0YXRlcyBDb21taXR0ZWUgKENvbW1pdHRlZSBmb3IgTmVnb3RpYXRpbmcgd2l0aCBTdGF0ZXMpIC0gSmF3YWhhcmxhbCBOZWhydSAoSGVuY2UsIHBhaXIgMiBpcyAgaW5jb3JyZWN0KSAgOCkgU3RlZXJpbmcgQ29tbWl0dGVlIC0gRHIuIFJhamVuZHJhIFByYXNhZCAoSGVuY2UsIHBhaXIgMyBpcyBpbmNvcnJlY3QpICBTaW5jZSwgb25seSB0d28gcGFpcnMgMSBhbmQgNCBhcmUgY29ycmVjdGx5IG1hdGNoZWQuIEhlbmNlLCBvcHRpb24gYiBpcyBjb3JyZWN0IGFuc3dlci4gIFNvdXJjZTogTGF4bWlrYW50aCwgQ2hhcHRlciAyOiBNYWtpbmcgb2YgdGhlIENvbnN0aXR1dGlvbiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two  ",
        "option3" : "Only three  ",
        "option4" : "All four   "
      }
    },
    {
      "index" : 15,
      "question" : "With reference to the Indian and British Parliamentary Systems, consider the following statements: 1.  Both the Indian and British Parliamentary systems are strictly based on Doctrine of the Sovereignty of Parliament. 2.  In both countries, the Prime Minister must be from the Lower House of Parliament. 3.  Britain has the system of legal responsibility of the ministers, while India has no such system. 4.  Both the countries have an elected Head of the State. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE1",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEV2ZW4gdGhvdWdoIHRoZSBJbmRpYW4gcGFybGlhbWVudGFyeSBzeXN0ZW0gaXMgbGFyZ2VseSBiYXNlZCBvbiB0aGUgQnJpdGlzaCBwYXR0ZXJuLCB0aGVyZSBhcmUgc29tZSAgZnVuZGFtZW50YWwgZGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgdHdvLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBUaGUgQnJpdGlzaCBzeXN0ZW0gaXMgYmFzZWQgb24gdGhlIGRvY3RyaW5lIG9mIHRoZSBzb3ZlcmVpZ250eSBvZiBQYXJsaWFtZW50LCAgd2hpbGUgdGhlIFBhcmxpYW1lbnQgaXMgbm90IHN1cHJlbWUgaW4gSW5kaWEgYW5kIGVuam95cyBsaW1pdGVkIGFuZCByZXN0cmljdGVkIHBvd2VycyBkdWUgdG8gYSB3cml0dGVuICBDb25zdGl0dXRpb24sIGZlZGVyYWwgc3lzdGVtLCBqdWRpY2lhbCByZXZpZXcgYW5kIGZ1bmRhbWVudGFsIHJpZ2h0cy4gIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogSW4gQnJpdGFpbiwgdGhlIFByaW1lIE1pbmlzdGVyIHNob3VsZCBiZSBhIG1lbWJlciBvZiB0aGUgTG93ZXIgSG91c2UgIChIb3VzZSBvZiBDb21tb25zKSBvZiB0aGUgUGFybGlhbWVudC4gSW4gSW5kaWEsIHRoZSBQcmltZSBNaW5pc3RlciBtYXkgYmUgYSBtZW1iZXIgb2YgYW55IG9mIHRoZSB0d28gIEhvdXNlcyBvZiBQYXJsaWFtZW50LiBVc3VhbGx5LCB0aGUgbWVtYmVycyBvZiBQYXJsaWFtZW50IGFsb25lIGFyZSBhcHBvaW50ZWQgYXMgbWluaXN0ZXJzIGluIEJyaXRhaW4uIEluICBJbmRpYSwgYSBwZXJzb24gd2hvIGlzIG5vdCBhIG1lbWJlciBvZiBQYXJsaWFtZW50IGNhbiBhbHNvIGJlIGFwcG9pbnRlZCBhcyBtaW5pc3RlciwgYnV0IGZvciBhIG1heGltdW0gIHBlcmlvZCBvZiBzaXggbW9udGhzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdDogSW4gSW5kaWEsIHRoZXJlIGlzIG5vIGxlZ2FsIHJlc3BvbnNpYmlsaXR5IG9mIHRoZSBtaW5pc3Rlci4gV2hpbGUgQnJpdGFpbiBoYXMgdGhlICBzeXN0ZW0gb2YgbGVnYWwgcmVzcG9uc2liaWxpdHkgb2YgdGhlIG1pbmlzdGVyLiBVbmxpa2UgaW4gQnJpdGFpbiwgdGhlIG1pbmlzdGVycyBpbiBJbmRpYSBhcmUgbm90IHJlcXVpcmVkIHRvICBjb3VudGVyc2lnbiB0aGUgb2ZmaWNpYWwgYWN0cyBvZiB0aGUgSGVhZCBvZiB0aGUgU3RhdGUuICBTdGF0ZW1lbnQgNCBpcyBpbmNvcnJlY3Q6IEluZGlhIGhhcyBhIHJlcHVibGljYW4gc3lzdGVtIGluIHBsYWNlIG9mIEJyaXRpc2ggbW9uYXJjaGljYWwgc3lzdGVtLiBJbiBvdGhlciAgd29yZHMsIHRoZSBIZWFkIG9mIHRoZSBTdGF0ZSBpbiBJbmRpYSAodGhhdCBpcywgUHJlc2lkZW50KSBpcyBlbGVjdGVkLCB3aGlsZSB0aGUgSGVhZCBvZiB0aGUgU3RhdGUgaW4gIEJyaXRhaW4gKHRoYXQgaXMsIEtpbmcgb3IgUXVlZW4pIGVuam95cyBhIGhlcmVkaXRhcnkgcG9zaXRpb24uICBTb3VyY2U6IGNoYXB0ZXIgMyBhbmQgMTJ0aCBvZiBNLiBMYXhtaWthbnRoICAgICAgICBvZiAyMyB8fHwgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 16,
      "question" : "Consider the following statements regarding the features of the Indian constitution: 1. Division of powers 2. Written constitution 3. Flexibility of constitution 4. Independent judiciary 5. Strong centre How many of the above represents the federal features of the Indian Constitution?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgUG9saXRpY2FsIHNjaWVudGlzdHMgaGF2ZSBjbGFzc2lmaWVkIGdvdmVybm1lbnRzIGludG8gdW5pdGFyeSBhbmQgZmVkZXJhbCBvbiB0aGUgYmFzaXMgb2YgdGhlIG5hdHVyZSBvZiAgcmVsYXRpb25zIGJldHdlZW4gdGhlIG5hdGlvbmFsIGdvdmVybm1lbnQgYW5kIHRoZSByZWdpb25hbCBnb3Zlcm5tZW50cy4gQnkgZGVmaW5pdGlvbiwgYSB1bml0YXJ5ICBnb3Zlcm5tZW50IGlzIG9uZSBpbiB3aGljaCBhbGwgdGhlIHBvd2VycyBhcmUgdmVzdGVkIGluIHRoZSBuYXRpb25hbCBnb3Zlcm5tZW50IGFuZCB0aGUgcmVnaW9uYWwgIGdvdmVybm1lbnRzLCBpZiBhdCBhbGwgZXhpc3QsIGRlcml2ZSB0aGVpciBhdXRob3JpdHkgZnJvbSB0aGUgbmF0aW9uYWwgZ292ZXJubWVudC4gQSBmZWRlcmFsIGdvdmVybm1lbnQsIG9uICB0aGUgb3RoZXIgaGFuZCwgaXMgb25lIGluIHdoaWNoIHBvd2VycyBhcmUgZGl2aWRlZCBiZXR3ZWVuIHRoZSBuYXRpb25hbCBnb3Zlcm5tZW50IGFuZCB0aGUgcmVnaW9uYWwgIGdvdmVybm1lbnRzIGJ5IHRoZSBDb25zdGl0dXRpb24gaXRzZWxmLiAgT3B0aW9uIDEgaXMgY29ycmVjdDogRGl2aXNpb24gb2YgUG93ZXIgaXMgYSBmZWRlcmFsIGZlYXR1cmUuIFRoZSBDb25zdGl0dXRpb24gZGl2aWRlZCB0aGUgcG93ZXJzIGJldHdlZW4gIHRoZSBDZW50cmUgYW5kIHRoZSBzdGF0ZXMgaW4gdGVybXMgb2YgdGhlIFVuaW9uIExpc3QsIFN0YXRlIExpc3QgYW5kIENvbmN1cnJlbnQgTGlzdCBpbiB0aGUgU2V2ZW50aCAgU2NoZWR1bGUuIFRoZSBVbmlvbiBMaXN0IGNvbnNpc3RzIG9mIDEwMCBzdWJqZWN0cyAob3JpZ2luYWxseSA5NyksIHRoZSBTdGF0ZSBMaXN0IDYxIHN1YmplY3RzIChvcmlnaW5hbGx5IDY2KSAgYW5kIHRoZSBDb25jdXJyZW50IExpc3QgNTIgc3ViamVjdHMgKG9yaWdpbmFsbHkgNDcpLiBCb3RoIHRoZSBDZW50cmUgYW5kIHRoZSBzdGF0ZXMgY2FuIG1ha2UgbGF3cyBvbiB0aGUgIHN1YmplY3RzIG9mIHRoZSBjb25jdXJyZW50IGxpc3QsIGJ1dCBpbiBjYXNlIG9mIGEgY29uZmxpY3QsIHRoZSBDZW50cmFsIGxhdyBwcmV2YWlscy4gVGhlIHJlc2lkdWFyeSBzdWJqZWN0cyAgKGllLCB3aGljaCBhcmUgbm90IG1lbnRpb25lZCBpbiBhbnkgb2YgdGhlIHRocmVlIGxpc3RzKSBhcmUgZ2l2ZW4gdG8gdGhlIENlbnRyZS4gIE9wdGlvbiAyIGlzIGNvcnJlY3Q6IFdyaXR0ZW4gQ29uc3RpdHV0aW9uIGlzIGEgZmVkZXJhbCBmZWF0dXJlLiBUaGUgQ29uc3RpdHV0aW9uIGlzIG5vdCBvbmx5IGEgd3JpdHRlbiAgZG9jdW1lbnQgYnV0IGFsc28gdGhlIGxlbmd0aGllc3QgQ29uc3RpdHV0aW9uIG9mIHRoZSB3b3JsZC4gSXQgc3BlY2lmaWVzIHRoZSBzdHJ1Y3R1cmUsIG9yZ2FuaXNhdGlvbiwgIHBvd2VycyBhbmQgZnVuY3Rpb25zIG9mIGJvdGggdGhlIENlbnRyYWwgYW5kIHN0YXRlIGdvdmVybm1lbnRzIGFuZCBwcmVzY3JpYmVzIHRoZSBsaW1pdHMgd2l0aGluIHdoaWNoICB0aGV5IG11c3Qgb3BlcmF0ZS4gVGh1cywgaXQgYXZvaWRzIHRoZSBtaXN1bmRlcnN0YW5kaW5ncyBhbmQgZGlzYWdyZWVtZW50cyBiZXR3ZWVuIHRoZSB0d28uICBPcHRpb24gMyBpcyBpbmNvcnJlY3Q6IEZsZXhpYmlsaXR5IG9mIHRoZSBDb25zdGl0dXRpb24gaXMgYSB1bml0YXJ5IGZlYXR1cmUuIFRoZSBwcm9jZXNzIG9mIGNvbnN0aXR1dGlvbmFsICBhbWVuZG1lbnQgaXMgbGVzcyByaWdpZCB0aGFuIHdoYXQgaXMgZm91bmQgaW4gb3RoZXIgZmVkZXJhdGlvbnMuIFRoZSBidWxrIG9mIHRoZSBDb25zdGl0dXRpb24gY2FuIGJlICBhbWVuZGVkIGJ5IHRoZSB1bmlsYXRlcmFsIGFjdGlvbiBvZiB0aGUgUGFybGlhbWVudCwgZWl0aGVyIGJ5IHNpbXBsZSBtYWpvcml0eSBvciBieSBzcGVjaWFsIG1ham9yaXR5LiAgRnVydGhlciwgdGhlIHBvd2VyIHRvIGluaXRpYXRlIGFuIGFtZW5kbWVudCB0byB0aGUgQ29uc3RpdHV0aW9uIGxpZXMgb25seSB3aXRoIHRoZSBDZW50cmUuIEluIFVTLCB0aGUgIHN0YXRlcyBjYW4gYWxzbyBwcm9wb3NlIGFuIGFtZW5kbWVudCB0byB0aGUgQ29uc3RpdHV0aW9uLiAgT3B0aW9uIDQgaXMgY29ycmVjdDogSW5kZXBlbmRlbnQganVkaWNpYXJ5IGlzIGEgZmVkZXJhbCBmZWF0dXJlLiBUaGUgQ29uc3RpdHV0aW9uIGVzdGFibGlzaGVzIGFuICBpbmRlcGVuZGVudCBqdWRpY2lhcnkgaGVhZGVkIGJ5IHRoZSBTdXByZW1lIENvdXJ0IGZvciB0d28gcHVycG9zZXM6IG9uZSwgdG8gcHJvdGVjdCB0aGUgc3VwcmVtYWN5IG9mICB0aGUgQ29uc3RpdHV0aW9uIGJ5IGV4ZXJjaXNpbmcgdGhlIHBvd2VyIG9mIGp1ZGljaWFsIHJldmlldzsgYW5kIHR3bywgdG8gc2V0dGxlIHRoZSBkaXNwdXRlcyBiZXR3ZWVuIHRoZSAgQ2VudHJlIGFuZCB0aGUgc3RhdGVzIG9yIGJldHdlZW4gdGhlIHN0YXRlcy4gVGhlIENvbnN0aXR1dGlvbiBjb250YWlucyB2YXJpb3VzIG1lYXN1cmVzIGxpa2Ugc2VjdXJpdHkgb2YgIHRlbnVyZSB0byBqdWRnZXMsIGZpeGVkIHNlcnZpY2UgY29uZGl0aW9ucyBhbmQgc28gb24gdG8gbWFrZSB0aGUganVkaWNpYXJ5IGluZGVwZW5kZW50IG9mIHRoZSAgZ292ZXJubWVudC4gIE9wdGlvbiA1IGlzIGluY29ycmVjdDogU3Ryb25nIGNlbnRyZSBpcyBhIHVuaXRhcnkgZmVhdHVyZS4gVGhlIGRpdmlzaW9uIG9mIHBvd2VycyBpcyBpbiBmYXZvdXIgb2YgdGhlICBDZW50cmUgYW5kIGhpZ2hseSBpbmVxdWl0YWJsZSBmcm9tIHRoZSBmZWRlcmFsIGFuZ2xlLiBGaXJzdGx5LCB0aGUgVW5pb24gTGlzdCBjb250YWlucyBtb3JlIHN1YmplY3RzIHRoYW4gIHRoZSBTdGF0ZSBMaXN0LiBTZWNvbmRseSwgdGhlIG1vcmUgaW1wb3J0YW50IHN1YmplY3RzIGhhdmUgYmVlbiBpbmNsdWRlZCBpbiB0aGUgVW5pb24gTGlzdC4gVGhpcmRseSwgdGhlICBDZW50cmUgaGFzIG92ZXJyaWRpbmcgYXV0aG9yaXR5IG92ZXIgdGhlIENvbmN1cnJlbnQgTGlzdC4gRmluYWxseSwgdGhlIHJlc2lkdWFyeSBwb3dlcnMgaGF2ZSBhbHNvIGJlZW4gIGxlZnQgd2l0aCB0aGUgQ2VudHJlLCB3aGlsZSBpbiB0aGUgVVMsIHRoZXkgYXJlIHZlc3RlZCBpbiB0aGUgc3RhdGVzLiBUaHVzLCB0aGUgQ29uc3RpdHV0aW9uIGhhcyBtYWRlIHRoZSAgQ2VudHJlIHZlcnkgc3Ryb25nLiAgU291cmNlOiBJbmRpYW4gUG9saXR5IGJ5IE0uIExheG1pa2FudGgsIENoYXB0ZXIgMTMsIGZlZGVyYWwgc3lzdGVtICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only two ",
        "option2" : "Only three  ",
        "option3" : "Only four ",
        "option4" : "All five   ||| "
      }
    },
    {
      "index" : 17,
      "question" : "Consider the following statements regarding the territorial extent of state and centre legislation: 1. The Parliament alone can make 'extraterritorial legislation'. 2. The Governor is empowered to direct that an act of Parliament does not apply to a scheduled area in the state. 3. The President is empowered to direct that an act of Parliament does not apply to a tribal area (autonomous districts) in Assam. 4. The President can make regulations for the peace, progress and good government of the Union Territories of the Andaman and Nicobar Islands and Lakshadweep. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE3",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENvbnN0aXR1dGlvbiBkZWZpbmVzIHRoZSB0ZXJyaXRvcmlhbCBsaW1pdHMgb2YgdGhlIGxlZ2lzbGF0aXZlIHBvd2VycyB2ZXN0ZWQgaW4gdGhlIENlbnRyZSBhbmQgdGhlIHN0YXRlcyAgaW4gdGhlIGZvbGxvd2luZyB3YXk6ICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgUGFybGlhbWVudCBhbG9uZSBjYW4gbWFrZSAnZXh0cmEtdGVycml0b3JpYWwgbGVnaXNsYXRpb24nLiBUaHVzLCB0aGUgbGF3cyBvZiB0aGUgIFBhcmxpYW1lbnQgYXJlIGFsc28gYXBwbGljYWJsZSB0byB0aGUgSW5kaWFuIGNpdGl6ZW5zIGFuZCB0aGVpciBwcm9wZXJ0eSBpbiBhbnkgcGFydCBvZiB0aGUgd29ybGQuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgZ292ZXJub3IgaXMgZW1wb3dlcmVkIHRvIGRpcmVjdCB0aGF0IGFuIGFjdCBvZiBQYXJsaWFtZW50IGRvZXMgbm90IGFwcGx5IHRvICBhIHNjaGVkdWxlZCBhcmVhIGluIHRoZSBzdGF0ZSBvciBhcHBseSB3aXRoIHNwZWNpZmllZCBtb2RpZmljYXRpb25zIGFuZCBleGNlcHRpb25zLiAgICBvZiAyMyB8fHwgICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IFRoZSBHb3Zlcm5vciBvZiBBc3NhbSBtYXkgbGlrZXdpc2UgZGlyZWN0IHRoYXQgYW4gYWN0IG9mIFBhcmxpYW1lbnQgZG9lcyBub3QgIGFwcGx5IHRvIGEgdHJpYmFsIGFyZWEgKGF1dG9ub21vdXMgZGlzdHJpY3QpIGluIHRoZSBzdGF0ZSBvciBhcHBseSB3aXRoIHNwZWNpZmllZCBtb2RpZmljYXRpb25zIGFuZCAgZXhjZXB0aW9ucy4gVGhlIFByZXNpZGVudCBlbmpveXMgdGhlIHNhbWUgcG93ZXIgd2l0aCByZXNwZWN0IHRvIHRyaWJhbCBhcmVhcyAoYXV0b25vbW91cyBkaXN0cmljdHMpIGluICBNZWdoYWxheWEsIFRyaXB1cmEgYW5kIE1pem9yYW0uICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBUaGUgUHJlc2lkZW50IGNhbiBtYWtlIHJlZ3VsYXRpb25zIGZvciB0aGUgcGVhY2UsIHByb2dyZXNzIGFuZCBnb29kICBnb3Zlcm5tZW50IG9mIHRoZSBmb3VyIFVuaW9uIFRlcnJpdG9yaWVzLXRoZSBBbmRhbWFuIGFuZCBOaWNvYmFyIElzbGFuZHMsIExha3NoYWR3ZWVwLCBEYWRyYSBhbmQgIE5hZ2FyIEhhdmVsaSBhbmQgRGFtYW4gYW5kIERpdS4gQSByZWd1bGF0aW9uIHNvIG1hZGUgaGFzIHRoZSBzYW1lIGZvcmNlIGFuZCBlZmZlY3QgYXMgYW4gYWN0IG9mICBQYXJsaWFtZW50LiBJdCBtYXkgYWxzbyByZXBlYWwgb3IgYW1lbmQgYW55IGFjdCBvZiBQYXJsaWFtZW50IGluIHJlbGF0aW9uIHRvIHRoZXNlIHVuaW9uIHRlcnJpdG9yaWVzLiAgIFNvdXJjZTogTGF4bWlrYW50aCwgY2hhcHRlciAxNCwgY2VudHJlIHN0YXRlIHJlbGF0aW9ucyAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two  ",
        "option3" : "Only three ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 18,
      "question" : "Consider the following statements: Statement 1: The Indian Constitution empowers the Centre to exercise control over the state's legislative matters. Statement 2: The office of the Governor of a state is an employment under the central government. Which one of the following is correct with respect to the above statements?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIENvbnN0aXR1dGlvbiBlbXBvd2VycyB0aGUgQ2VudHJlIHRvIGV4ZXJjaXNlIGNvbnRyb2wgb3ZlciB0aGUgc3RhdGUncyAgbGVnaXNsYXRpdmUgbWF0dGVycyBpbiBmb2xsb3dpbmcgd2F5czogIDEpIFRoZSBnb3Zlcm5vciBjYW4gcmVzZXJ2ZSBjZXJ0YWluIHR5cGVzIG9mIGJpbGxzIHBhc3NlZCBieSB0aGUgc3RhdGUgbGVnaXNsYXR1cmUgZm9yIHRoZSBjb25zaWRlcmF0aW9uIG9mICB0aGUgUHJlc2lkZW50LiBUaGUgcHJlc2lkZW50IGVuam95cyBhYnNvbHV0ZSB2ZXRvIG92ZXIgdGhlbS4gIDIpIEJpbGxzIG9uIGNlcnRhaW4gbWF0dGVycyBlbnVtZXJhdGVkIGluIHRoZSBTdGF0ZSBMaXN0IGNhbiBiZSBpbnRyb2R1Y2VkIGluIHRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBvbmx5ICB3aXRoIHRoZSBwcmV2aW91cyBzYW5jdGlvbiBvZiB0aGUgcHJlc2lkZW50LiAoRm9yIGV4YW1wbGUsIHRoZSBiaWxscyBpbXBvc2luZyByZXN0cmljdGlvbnMgb24gdGhlICBmcmVlZG9tIG9mIHRyYWRlIGFuZCBjb21tZXJjZSkuICAzKSBUaGUgUHJlc2lkZW50IGNhbiBkaXJlY3QgdGhlIHN0YXRlcyB0byByZXNlcnZlIG1vbmV5IGJpbGxzIGFuZCBvdGhlciBmaW5hbmNpYWwgYmlsbHMgcGFzc2VkIGJ5IHRoZSBzdGF0ZSAgbGVnaXNsYXR1cmUgZm9yIGhpcyBjb25zaWRlcmF0aW9uIGR1cmluZyBhIGZpbmFuY2lhbCBlbWVyZ2VuY3kuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IFRoZSBHb3Zlcm5vciBpcyBhcHBvaW50ZWQgYnkgdGhlIHByZXNpZGVudCBieSB3YXJyYW50IHVuZGVyIGhpcyBoYW5kIGFuZCAgc2VhbC4gSW4gYSB3YXksIGhlIGlzIGEgbm9taW5lZSBvZiB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50LiBCdXQsIGFzIGhlbGQgYnkgdGhlIFN1cHJlbWUgQ291cnQgaW4gMTk3OSwgdGhlICBvZmZpY2Ugb2YgZ292ZXJub3Igb2YgYSBzdGF0ZSBpcyBub3QgYW4gZW1wbG95bWVudCB1bmRlciB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50LiBJdCBpcyBhbiBpbmRlcGVuZGVudCAgY29uc3RpdHV0aW9uYWwgb2ZmaWNlIGFuZCBpcyBub3QgdW5kZXIgdGhlIGNvbnRyb2wgb2Ygb3Igc3Vib3JkaW5hdGUgdG8gdGhlIENlbnRyYWwgZ292ZXJubWVudC4gIFNvdXJjZTogTGF4bWlrYW50aCwgY2hhcHRlciAxNCwgY2VudHJlIHN0YXRlIHJlbGF0aW9ucyBhbmQgY2hhcHRlciAzMCwgR292ZXJub3IgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both statement 1 and statement 2 are correct  and statement 2 is the correct explanation of  statement 1. ",
        "option2" : " Both statement 1 and statement 2 are correct  and statement 2 is not the correct explanation  of statement 1. ",
        "option3" : " Statement 1 is correct but statement 2 is  incorrect. ",
        "option4" : " Statement 1 is incorrect but statement 2 is  correct.  "
      }
    },
    {
      "index" : 19,
      "question" : "The Centre is empowered to give directions to the states with regard to the exercise of their executive power in which of the following matters? 1. The construction and maintenance of means of communication by the state 2. The measures to be taken for the protection of the railways within the state 3. The provision of adequate facilities for instruction in the mother-tongue at the primary stage of education to children belonging to linguistic minority groups in the state 4. The drawing up and execution of the specified schemes for the welfare of the economically weaker sections in the state. Select the correct answer using the codes given below:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDE5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBwcm92aWRlcyB0aGF0IHRoZSBleGVjdXRpdmUgcG93ZXIgb2YgZXZlcnkgc3RhdGUgaXMgdG8gYmUgZXhlcmNpc2VkIGluIGEgd2F5IHNvICB0aGF0OiAgKGEpIHRvIGVuc3VyZSBjb21wbGlhbmNlIHdpdGggdGhlIGxhd3MgbWFkZSBieSB0aGUgUGFybGlhbWVudCBhbmQgYW55IGV4aXN0aW5nIGxhdyB3aGljaCBhcHBseSBpbiB0aGUgIHN0YXRlOyBhbmQgICAoYikgbm90IHRvIGltcGVkZSBvciBwcmVqdWRpY2UgdGhlIGV4ZXJjaXNlIG9mIGV4ZWN1dGl2ZSBwb3dlciBvZiB0aGUgQ2VudHJlIGluIHRoZSBzdGF0ZS4gICBJbiBib3RoIGFib3ZlIGNhc2VzLCB0aGUgQ2VudHJlIGNhbiBnaXZlIGRpcmVjdGlvbnMgdG8gdGhlIHN0YXRlIGFzIGFyZSBuZWNlc3NhcnkgZm9yIHRoZSBzYWlkIHB1cnBvc2UuICBJbiBhZGRpdGlvbiB0byB0aGUgYWJvdmUgdHdvIGNhc2VzLCB0aGUgQ2VudHJlIGlzIGVtcG93ZXJlZCB0byBnaXZlIGV4ZWN1dGl2ZSBkaXJlY3Rpb25zIHRvIHRoZSBzdGF0ZXMgaW4gIHRoZSBmb2xsb3dpbmcgbWF0dGVyczogICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBUaGUgY29uc3RydWN0aW9uIGFuZCBtYWludGVuYW5jZSBvZiBtZWFucyBvZiBjb21tdW5pY2F0aW9uIChkZWNsYXJlZCB0byBiZSBvZiAgbmF0aW9uYWwgb3IgbWlsaXRhcnkgaW1wb3J0YW5jZSkgYnkgdGhlIHN0YXRlICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgbWVhc3VyZXMgdG8gYmUgdGFrZW4gZm9yIHRoZSBwcm90ZWN0aW9uIG9mIHRoZSByYWlsd2F5cyB3aXRoaW4gdGhlIHN0YXRlICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgcHJvdmlzaW9uIG9mIGFkZXF1YXRlIGZhY2lsaXRpZXMgZm9yIGluc3RydWN0aW9uIGluIHRoZSBtb3RoZXItdG9uZ3VlIGF0IHRoZSAgcHJpbWFyeSBzdGFnZSBvZiBlZHVjYXRpb24gdG8gY2hpbGRyZW4gYmVsb25naW5nIHRvIGxpbmd1aXN0aWMgbWlub3JpdHkgZ3JvdXBzIGluIHRoZSBzdGF0ZSAgU3RhdGVtZW50IDQgaXMgaW5jb3JyZWN0OiBUaGUgZHJhd2luZyB1cCBhbmQgZXhlY3V0aW9uIG9mIHRoZSBzcGVjaWZpZWQgc2NoZW1lcyBmb3IgdGhlIHdlbGZhcmUgb2YgdGhlICBTY2hlZHVsZWQgVHJpYmVzIChhbmQgbm90IHRoZSBlY29ub21pY2FsbHkgd2Vha2VyIHNlY3Rpb25zKSBpbiB0aGUgc3RhdGUuICAgU291cmNlOiBMYXhtaWthbnRoLCBjaGFwdGVyIDE0LCBjZW50cmUgc3RhdGUgcmVsYXRpb25zICAgICBvZiAyMyB8fHwgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1, 3 and 4 only ",
        "option3" : "1, 2 and 3 only ",
        "option4" : "2, 3 and 4 only  "
      }
    },
    {
      "index" : 20,
      "question" : "Consider the following statements regarding the centre- state financial relations: 1. The 101st Amendment Act of 2016 has conferred concurrent power upon Parliament and State Legislatures to make laws regarding Goods and Services Tax. 2. The residuary power of taxation is vested in the parliament. Which of the statements given above is/ are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENvbnN0aXR1dGlvbiBkaXZpZGVzIHRoZSB0YXhhdGlvbiBwb3dlcnMgYmV0d2VlbiB0aGUgQ2VudHJlIGFuZCB0aGUgc3RhdGVzIGluIHRoZSBmb2xsb3dpbmcgd2F5OiAgMSkgVGhlIFBhcmxpYW1lbnQgaGFzIGV4Y2x1c2l2ZSBwb3dlciB0byBsZXZ5IHRheGVzIG9uIHN1YmplY3RzIGVudW1lcmF0ZWQgaW4gdGhlIFVuaW9uIExpc3QgKHdoaWNoIGFyZSAgMTUgaW4gbnVtYmVyKS4gIDIpIFRoZSBzdGF0ZSBsZWdpc2xhdHVyZSBoYXMgZXhjbHVzaXZlIHBvd2VyIHRvIGxldnkgdGF4ZXMgb24gc3ViamVjdHMgZW51bWVyYXRlZCBpbiB0aGUgU3RhdGUgTGlzdCAod2hpY2ggIGFyZSAyMCBpbiBudW1iZXIpLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlcmUgYXJlIG5vIHRheCBlbnRyaWVzIGluIHRoZSBDb25jdXJyZW50IExpc3Qgb2Ygc2V2ZW50aCBzY2hlZHVsZS4gSW4gb3RoZXIgIHdvcmRzLCB0aGUgY29uY3VycmVudCBqdXJpc2RpY3Rpb24gaXMgbm90IGF2YWlsYWJsZSB3aXRoIHJlc3BlY3QgdG8gdGF4IGxlZ2lzbGF0aW9uLiBCdXQgdGhlIDEwMXN0ICBBbWVuZG1lbnQgQWN0IG9mIDIwMTYgaGFzIG1hZGUgYW4gZXhjZXB0aW9uIGJ5IG1ha2luZyBhIHNwZWNpYWwgcHJvdmlzaW9uIChBcnRpY2xlIDI0Ni1BKSB3aXRoIHJlc3BlY3QgIHRvIGdvb2RzIGFuZCBzZXJ2aWNlcyB0YXguIFRoaXMgQW1lbmRtZW50IGhhcyBjb25mZXJyZWQgY29uY3VycmVudCBwb3dlciB1cG9uIFBhcmxpYW1lbnQgYW5kIFN0YXRlICBMZWdpc2xhdHVyZXMgdG8gbWFrZSBsYXdzIGdvdmVybmluZyBnb29kcyBhbmQgc2VydmljZXMgdGF4LiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIHJlc2lkdWFyeSBwb3dlciBvZiB0YXhhdGlvbiAodGhhdCBpcywgdGhlIHBvd2VyIHRvIGltcG9zZSB0YXhlcyBub3QgIGVudW1lcmF0ZWQgaW4gYW55IG9mIHRoZSB0aHJlZSBsaXN0cykgaXMgdmVzdGVkIGluIHRoZSBQYXJsaWFtZW50LiBVbmRlciB0aGlzIHByb3Zpc2lvbiwgdGhlIFBhcmxpYW1lbnQgIGhhcyBpbXBvc2VkIGdpZnQgdGF4LCB3ZWFsdGggdGF4IGFuZCBleHBlbmRpdHVyZSB0YXguICAgU291cmNlOiBMYXhtaWthbnRoIGNoYXB0ZXIgMTQsIGNlbnRyZSBzdGF0ZSByZWxhdGlvbnMgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 21,
      "question" : "The given idea mentioned in the preamble of Indian Constitution implies providing opportunities for the development of individuals. It also means the absence of restraints on the activities of individuals. However, it is not absolute but qualified.  Which among the following is described above? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIx",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgdGhyZWUga2V5IGNvbXBvbmVudHMgb2YgdGhlIFByZWFtYmxlIG9mIEluZGlhbiBDb25zdGl0dXRpb24gYXJlIEZyYXRlcm5pdHksIExpYmVydHksIGFuZCBFcXVhbGl0eS4gSW4gIHRoZSBjb250ZXh0IG9mIHRoZSBQcmVhbWJsZSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbiwgJ0xpYmVydHknIGltcGxpZXMgdGhlIGFic2VuY2Ugb2YgcmVzdHJhaW50cyBvbiB0aGUgIGFjdGl2aXRpZXMgb2YgaW5kaXZpZHVhbHMsIGFuZCBhdCB0aGUgc2FtZSB0aW1lLCBwcm92aWRpbmcgb3Bwb3J0dW5pdGllcyBmb3IgdGhlIGRldmVsb3BtZW50IG9mICBpbmRpdmlkdWFsIHBlcnNvbmFsaXRpZXMuIFRoZSBQcmVhbWJsZSBzZWN1cmVzIHRvIGFsbCBjaXRpemVucyBvZiBJbmRpYSBsaWJlcnR5IG9mIHRob3VnaHQsIGV4cHJlc3Npb24sICBiZWxpZWYsIGZhaXRoLCBhbmQgd29yc2hpcCwgdGhyb3VnaCBkZW1vY3JhdGljIHByb2Nlc3Nlcy4gSG93ZXZlciwgdGhpcyBsaWJlcnR5IGlzIG5vdCBhYnNvbHV0ZSBidXQgIHF1YWxpZmllZC4gVGhpcyBtZWFucyB0aGF0IGxpYmVydHkgZG9lc24ndCBnaXZlIGNpdGl6ZW5zIHRoZSByaWdodCB0byBkbyBhbnl0aGluZyB0aGV5IHBsZWFzZSwgYnV0IHRoZXkgbXVzdCAgcmVzcGVjdCB0aGUgbGliZXJ0aWVzIGFuZCByaWdodHMgb2Ygb3RoZXJzIGFzIHdlbGwuIFRoZSBTdGF0ZSBjYW4gaW1wb3NlIHJlYXNvbmFibGUgcmVzdHJpY3Rpb25zIG9uICBpbmRpdmlkdWFsIGxpYmVydHkgaW4gb3JkZXIgdG8gbWFpbnRhaW4gcHVibGljIG9yZGVyIGFuZCBkZWNlbmN5LCBwcm90ZWN0IHN0YXRlIHNlY3VyaXR5LCBldGMuICAgVGhpcyBjb25jZXB0IG9mIGxpYmVydHkgaXMgaW5mbHVlbmNlZCBieSB0aGUgaWRlYXMgb2YgdGhlIEZyZW5jaCBSZXZvbHV0aW9uLiAgIFNvdXJjZTogSW5kaWFuIFBvbGl0eSBieSBMYXhtaWthbnRoLCA2dGggRWRpdGlvbiwgQ2hhcHRlci00ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sovereignty ",
        "option2" : "Liberty ",
        "option3" : "Fraternity ",
        "option4" : "Justice   ||| "
      }
    },
    {
      "index" : 22,
      "question" : "Consider the following statements with reference to the borrowing powers of the Central and State governments in India: 1. The limits on borrowing by the Central Government are fixed by the Finance Commission. 2. A state government can borrow within India upon the security of the Consolidated Fund of the State. 3. The Central government can give guarantees in respect of loans raised by any state. How many of the above given statements are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgQ29uc3RpdHV0aW9uIG1ha2VzIHNldmVyYWwgcHJvdmlzaW9ucyBhYm91dCB0aGUgYm9ycm93aW5nIHBvd2VycyBvZiB0aGUgQ2VudHJlIGFuZCB0aGUgc3RhdGUuICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBDZW50cmFsIGdvdmVybm1lbnQgY2FuIGJvcnJvdyBlaXRoZXIgd2l0aGluIEluZGlhIG9yIG91dHNpZGUgdXBvbiB0aGUgIHNlY3VyaXR5IG9mIHRoZSBDb25zb2xpZGF0ZWQgRnVuZCBvZiBJbmRpYSBvciBjYW4gZ2l2ZSBndWFyYW50ZWVzLCBidXQgYm90aCB3aXRoaW4gdGhlIGxpbWl0cyBmaXhlZCBieSAgdGhlIFBhcmxpYW1lbnQgKG5vdCBGaW5hbmNlIENvbW1pc3Npb24pLiBTbyBmYXIsIG5vIHN1Y2ggbGF3IGhhcyBiZWVuIGVuYWN0ZWQgYnkgdGhlIFBhcmxpYW1lbnQuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBIHN0YXRlIGdvdmVybm1lbnQgY2FuIGJvcnJvdyB3aXRoaW4gSW5kaWEgIHVwb24gdGhlIHNlY3VyaXR5IG9mIHRoZSAgQ29uc29saWRhdGVkIEZ1bmQgb2YgdGhlIFN0YXRlIG9yIGNhbiBnaXZlIGd1YXJhbnRlZXMsIGJ1dCBib3RoIHdpdGhpbiB0aGUgbGltaXRzIGZpeGVkIGJ5IHRoZSBsZWdpc2xhdHVyZSAgb2YgdGhhdCBzdGF0ZS4gICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgQ2VudHJhbCBnb3Zlcm5tZW50IGNhbiBtYWtlIGxvYW5zIHRvIGFueSBzdGF0ZSBvciBnaXZlIGd1YXJhbnRlZXMgaW4gIHJlc3BlY3Qgb2YgbG9hbnMgcmFpc2VkIGJ5IGFueSBzdGF0ZS4gQW55IHN1bXMgcmVxdWlyZWQgZm9yIHRoZSBwdXJwb3NlIG9mIG1ha2luZyBzdWNoIGxvYW5zIGFyZSB0byBiZSAgY2hhcmdlZCBvbiB0aGUgQ29uc29saWRhdGVkIEZ1bmQgb2YgSW5kaWEuIEhvd2V2ZXIsIGEgc3RhdGUgY2Fubm90IHJhaXNlIGFueSBsb2FuIHdpdGhvdXQgdGhlIGNvbnNlbnQgb2YgIHRoZSBDZW50cmUsIGlmIHRoZXJlIGlzIHN0aWxsIG91dHN0YW5kaW5nIGFueSBwYXJ0IG9mIGEgbG9hbiBtYWRlIHRvIHRoZSBzdGF0ZSBieSB0aGUgQ2VudHJlIG9yIGluIHJlc3BlY3Qgb2YgIHdoaWNoIGEgZ3VhcmFudGVlIGhhcyBiZWVuIGdpdmVuIGJ5IHRoZSBDZW50cmUuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIENoYXB0ZXItMTQgICAgb2YgMjMgfHx8ICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "One only ",
        "option2" : "Two only ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 23,
      "question" : "Consider the following statements with reference to the Citizenship in India: 1. NRIs (Non-Resident Indians) hold Indian citizenship while Overseas Citizens of India (OCIs) do not. 2. Both NRIs and OCIs are eligible to vote in elections in India. 3. Both NRIs and OCI cardholders do not require visa to enter India. How many of the above given statements are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgTlJJIChOb24tUmVzaWRlbnQgSW5kaWFuKSBhbmQgT0NJIChPdmVyc2VhcyBDaXRpemVuIG9mIEluZGlhKSBhcmUgdHdvIGNsYXNzaWZpY2F0aW9ucyB1c2VkIGJ5IHRoZSBJbmRpYW4gIGdvdmVybm1lbnQgZm9yIHBlb3BsZSBvZiBJbmRpYW4gb3JpZ2luIGxpdmluZyBhYnJvYWQuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiBBbiBOUkkgaXMgYW4gSW5kaWFuIGNpdGl6ZW4gd2hvIHJlc2lkZXMgb3V0c2lkZSBJbmRpYSBmb3IgYSBjZXJ0YWluIHBlcmlvZCBmb3IgdGhlICBwdXJwb3NlIG9mIGVtcGxveW1lbnQsIGJ1c2luZXNzLCBvciB2b2NhdGlvbiAob3V0IG9mIEluZGlhKSBvciBzdGF5cyBhYnJvYWQgdW5kZXIgY2lyY3Vtc3RhbmNlcyAgaW5kaWNhdGluZyBhbiBpbnRlbnRpb24gZm9yIGFuIHVuY2VydGFpbiBkdXJhdGlvbiBvZiBzdGF5IGFicm9hZC4gT0NJIGlzIGEgcmVjb2duaXRpb24gb2YgcGVvcGxlIG9mIEluZGlhbiAgb3JpZ2luIGxpdmluZyBpbiBvdGhlciBjb3VudHJpZXMuIEl0J3MgZm9yIHBlb3BsZSB3aG8gaGF2ZSBtaWdyYXRlZCBmcm9tIEluZGlhIGFuZCBhY3F1aXJlZCBjaXRpemVuc2hpcCBvZiAgYSBmb3JlaWduIGNvdW50cnksIG9yIHRoZWlyIGRlc2NlbmRhbnRzLiBPQ0lzIGFyZSBub3QgSW5kaWFuIGNpdGl6ZW5zLCBidXQgdGhleSBoYXZlIG1hbnkgb2YgdGhlIHNhbWUgIHJpZ2h0cyBhcyBJbmRpYW4gY2l0aXplbnMuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IE5SSXMsIGFzIEluZGlhbiBjaXRpemVucywgYXJlIGVsaWdpYmxlIHRvIHZvdGUgaW4gSW5kaWFuIGVsZWN0aW9ucywgYnV0IHRoZXkgbXVzdCAgYmUgcGh5c2ljYWxseSBwcmVzZW50IGluIHRoZWlyIGNvbnN0aXR1ZW5jeSBvbiB0aGUgZGF5IG9mIHZvdGluZy4gT0NJcywgaG93ZXZlciwgZG8gbm90IGhhdmUgdGhlIHJpZ2h0IHRvICB2b3RlIGluIEluZGlhbiBlbGVjdGlvbnMgYXMgdGhleSBhcmUgbm90IEluZGlhbiBjaXRpemVucy4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IE5SSXMsIGFzIEluZGlhbiBjaXRpemVucywgZG8gbm90IHJlcXVpcmUgYSB2aXNhIHRvIGVudGVyIEluZGlhLiBUaGV5IGNhbiBlbnRlciBhbmQgIGxlYXZlIHRoZSBjb3VudHJ5IGZyZWVseSB3aXRoIHRoZWlyIEluZGlhbiBwYXNzcG9ydC4gSG93ZXZlciwgT0NJcyByZXF1aXJlIGFuIE9DSSBjYXJkICh3aGljaCBmdW5jdGlvbnMgIHNpbWlsYXIgdG8gYSBsb25nLXRlcm0gbXVsdGlwbGUtZW50cnkgdmlzYSkgdG8gZW50ZXIgSW5kaWEuIFRoZXkgZG8gbm90IG5lZWQgYSBzZXBhcmF0ZSB2aXNhLCBidXQgdGhleSBkbyAgbmVlZCB0aGUgT0NJIGNhcmQsIHdoaWNoIG11c3QgYmUgcmVuZXdlZCBwZXJpb2RpY2FsbHkuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIENoYXB0ZXItNiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "One only ",
        "option2" : "Two only ",
        "option3" : "All Three  ",
        "option4" : "None  "
      }
    },
    {
      "index" : 24,
      "question" : "Consider the following statements: Statement I: The President's rule can be imposed on the ground of failure of constitutional machinery in a state. Statement II: It is the duty of the Centre to protect every state against external aggression and internal disturbance. Which one of the following is correct in respect of the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI0",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIEluZGlhbiBDb25zdGl0dXRpb24gcHJvdmlkZXMgcHJvdmlzaW9ucyBmb3IgdGhyZWUgdHlwZXMgb2YgZW1lcmdlbmNpZXM6IG5hdGlvbmFsIGVtZXJnZW5jeSwgc3RhdGUgIGVtZXJnZW5jeSAoY29tbW9ubHkga25vd24gYXMgUHJlc2lkZW50J3MgUnVsZSksIGFuZCBmaW5hbmNpYWwgZW1lcmdlbmN5LiBUaGVzZSBlbWVyZ2VuY3kgcHJvdmlzaW9ucyAgYXJlIG91dGxpbmVkIGluIEFydGljbGVzIDM1MiwgMzU2LCBhbmQgMzYwIG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uLCByZXNwZWN0aXZlbHkuICBTdGF0ZW1lbnQtSSBpcyBjb3JyZWN0OiBQcmVzaWRlbnQncyBydWxlIGNhbiBiZSBpbXBvc2VkIG9uIHRoZSBncm91bmQgb2YgZmFpbHVyZSBvZiBjb25zdGl0dXRpb25hbCAgbWFjaGluZXJ5LiBUaGlzIGlzIGNvcnJlY3QuIEFydGljbGUgMzU2IG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIGVtcG93ZXJzIHRoZSBQcmVzaWRlbnQgb2YgSW5kaWEgdG8gIGltcG9zZSBQcmVzaWRlbnQncyBydWxlIG9yIGNlbnRyYWwgcnVsZSBpbiBhIHN0YXRlIGlmIHRoZXJlIGlzIGEgZmFpbHVyZSBvZiBjb25zdGl0dXRpb25hbCBtYWNoaW5lcnkgaW4gdGhhdCAgc3RhdGUsIHN1Y2ggYXMgdGhlIGluYWJpbGl0eSB0byBjYXJyeSBvbiB0aGUgZ292ZXJuYW5jZSBhY2NvcmRpbmcgdG8gdGhlIHByb3Zpc2lvbnMgbGFpZCBvdXQgaW4gdGhlICBDb25zdGl0dXRpb24uICBTdGF0ZW1lbnQtSUkgaXMgY29ycmVjdDogSXQgaXMgdGhlIGR1dHkgb2YgdGhlIGNlbnRlciB0byBwcm90ZWN0IGV2ZXJ5IHN0YXRlIGFnYWluc3QgZXh0ZXJuYWwgYWdncmVzc2lvbiBhbmQgIGludGVybmFsIGRpc3R1cmJhbmNlLiBUaGlzIGlzIGFsc28gY29ycmVjdC4gQXJ0aWNsZSAzNTUgb2YgdGhlIEluZGlhbiBDb25zdGl0dXRpb24gc3RhdGVzIHRoYXQgaXQgaXMgdGhlIGR1dHkgb2YgIHRoZSBjZW50cmFsIGdvdmVybm1lbnQgdG8gcHJvdGVjdCBldmVyeSBzdGF0ZSBhZ2FpbnN0IGV4dGVybmFsIGFnZ3Jlc3Npb24gYW5kIGludGVybmFsIGRpc3R1cmJhbmNlIGFuZCB0byAgZW5zdXJlIHRoYXQgdGhlIGdvdmVybm1lbnQgb2YgZXZlcnkgc3RhdGUgaXMgY2FycmllZCBvbiBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIHByb3Zpc2lvbnMgb2YgdGhlICBDb25zdGl0dXRpb24uICBTdGF0ZW1lbnQtSUkgaXMgbm90IHRoZSBjb3JyZWN0IGV4cGxhbmF0aW9uIGZvciBTdGF0ZW1lbnQtSTogVGhlIGR1dHkgb2YgdGhlIGNlbnRlciB0byBwcm90ZWN0IGV2ZXJ5ICBzdGF0ZSBhZ2FpbnN0IGV4dGVybmFsIGFnZ3Jlc3Npb24gYW5kIGludGVybmFsIGRpc3R1cmJhbmNlIGlzIGEgYnJvYWRlciBjb25jZXB0LCB3aGlsZSB0aGUgaW1wb3NpdGlvbiBvZiAgUHJlc2lkZW50J3MgcnVsZSBvbiB0aGUgZ3JvdW5kIG9mIGZhaWx1cmUgb2YgY29uc3RpdHV0aW9uYWwgbWFjaGluZXJ5IGlzIGEgc3BlY2lmaWMgcHJvdmlzaW9uIHVuZGVyIEFydGljbGUgIDM1Ni4gVGhlIHR3byBzdGF0ZW1lbnRzIGFyZSByZWxhdGVkIHRvIGRpZmZlcmVudCBhc3BlY3RzIG9mIHRoZSBjb25zdGl0dXRpb25hbCBmcmFtZXdvcmsgYW5kIGFyZSBub3QgIGRpcmVjdGx5IGV4cGxhbmF0b3J5IG9mIGVhY2ggb3RoZXIuICBTb3VyY2U6IEluZGlhbiBQb2xpdHkgYnkgTGF4bWlrYW50aCwgNnRoIEVkaXRpb24sIENoYXB0ZXItMTQgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Both Statement-I and Statement-II are  correct and Statement-II is the correct  explanation for Statement-I ",
        "option2" : "Both Statement-I and Statement-II are  correct and Statement-II is not the correct  explanation for Statement-I ",
        "option3" : "Statement-I is correct but Statement-II is  incorrect ",
        "option4" : " Statement-I is incorrect but Statement-II is  correct  "
      }
    },
    {
      "index" : 25,
      "question" : "Consider the following functionaries: 1.  Prime Minister 2.  Chief Ministers of all the States  3.  Chief Ministers of Union Territories having a Legislative Assembly 4.  Administrators of Union Territories not having a Legislative Assembly 5.  All the Ministers of the Union Council of Ministers. How many of the above given are the members of the Inter State Council? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAyMyB8fHwgICBUaGUgSW50ZXItU3RhdGUgQ291bmNpbCB3YXMgZXN0YWJsaXNoZWQgdW5kZXIgQXJ0aWNsZSAyNjMgb2YgdGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSB0aHJvdWdoIGEgIFByZXNpZGVudGlhbCBPcmRlciBkYXRlZCAyOHRoIE1heSAxOTkwLiBUaGUgaW50ZXItc3RhdGUgY291bmNpbCBpcyBhIHJlY29tbWVuZGF0b3J5IGJvZHkgdGhhdCBoYXMgYmVlbiAgZW1wb3dlcmVkIHRvIGludmVzdGlnYXRlIGFuZCBkaXNjdXNzIHN1YmplY3RzIG9mIGNvbW1vbiBpbnRlcmVzdCBiZXR3ZWVuIHRoZSBVbmlvbiBhbmQgc3RhdGUocyksIG9yICBhbW9uZyBzdGF0ZXMuICBJdCBhbHNvIG1ha2VzIHJlY29tbWVuZGF0aW9ucyBmb3IgYmV0dGVyIGNvb3JkaW5hdGlvbiBvZiBwb2xpY3kgYW5kIGFjdGlvbiBvbiB0aGVzZSBzdWJqZWN0cywgYW5kICBkZWxpYmVyYXRpb25zIG9uIG1hdHRlcnMgb2YgZ2VuZXJhbCBpbnRlcmVzdCB0byB0aGUgc3RhdGVzLCB3aGljaCBtYXkgYmUgcmVmZXJyZWQgdG8gaXQgYnkgaXRzIGNoYWlybWFuLiAgVGhlIENvdW5jaWwgY29uc2lzdHMgb2Y6ICAxKSBQcmltZSBNaW5pc3RlciAtIENoYWlybWFuIChIZW5jZSwgb3B0aW9uIDEgaXMgY29ycmVjdCkgIDIpIENoaWVmIE1pbmlzdGVycyBvZiBhbGwgU3RhdGVzIC0gTWVtYmVycyAoSGVuY2UsIG9wdGlvbiAyIGlzIGNvcnJlY3QpICAzKSBDaGllZiBNaW5pc3RlcnMgb2YgVW5pb24gVGVycml0b3JpZXMgaGF2aW5nIGEgTGVnaXNsYXRpdmUgQXNzZW1ibHkgKEhlbmNlLCBvcHRpb24gMyBpcyBjb3JyZWN0KSAgNCkgQWRtaW5pc3RyYXRvcnMgb2YgVVRzIG5vdCBoYXZpbmcgYSBMZWdpc2xhdGl2ZSBBc3NlbWJseSAtIE1lbWJlcnMgKEhlbmNlLCBvcHRpb24gNCBpcyBjb3JyZWN0KSAgNSkgU2l4IE1pbmlzdGVycyBvZiBDYWJpbmV0IHJhbmsgaW4gdGhlIFVuaW9uIENvdW5jaWwgb2YgTWluaXN0ZXJzIChOb3QgYWxsIG1pbmlzdGVycyBpbiBDb00pIHRvIGJlICBub21pbmF0ZWQgYnkgdGhlIFByaW1lIE1pbmlzdGVyIE1lbWJlcnMuIChIZW5jZSwgb3B0aW9uIDUgaXMgaW5jb3JyZWN0KSAgU291cmNlOiBodHRwOi8vaW50ZXJzdGF0ZWNvdW5jaWwubmljLmluICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only two ",
        "option2" : "Only three ",
        "option3" : "Only four ",
        "option4" : "All five  "
      }
    },
    {
      "index" : 26,
      "question" : "Consider the following recommendations:  1.  Imposition of emergency provisions mentioned under Articles 355 and 356 in district or a part of district rather than in whole state.  2.  The guidelines for the appointment of Chief Ministers of the State must be clearly laid down. 3.  The Vice President and Speaker of the Lok Sabha should be consulted by the Prime Minister of India while selecting the Governor of a State.  How many of the above recommendations were made by the Punchhi Commission, related to Centre-State relations? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIFB1bmNoaGkgY29tbWlzc2lvbiBoYXMgc3VnZ2VzdGVkICJsb2NhbGl6aW5nIGVtZXJnZW5jeSBwcm92aXNpb25zIiB1bmRlciAgQXJ0aWNsZXMgMzU1IGFuZCAzNTYgaW4gb3JkZXIgdG8gcHV0IGxvY2FsaXplZCBhcmVhcyBzdWNoIGFzIGEgZGlzdHJpY3Qgb3IgcGFydHMgb2YgYSBkaXN0cmljdCB1bmRlciB0aGUgIEdvdmVybm9yJ3MgY29udHJvbCBhcyBvcHBvc2VkIHRvIHRoZSBlbnRpcmUgc3RhdGUuIEhvd2V2ZXIsIHRoZSB0ZXJtIG9mIHN1Y2ggYW4gZW1lcmdlbmN5IHByb3Zpc2lvbiAgc2hvdWxkIG5vdCBleGNlZWQgdGhyZWUgbW9udGhzLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gT25lIG9mIHRoZSBrZXkgcmVjb21tZW5kYXRpb25zIGdpdmVuIGJ5IHRoZSBQdW5jaGhpIENvbW1pc3Npb24gaXMgdGhlIGxheWluZyAgZG93biBvZiB0aGUgcHJlY2lzZSBndWlkZWxpbmVzIGZvciB0aGUgYXBwb2ludG1lbnQgb2YgQ2hpZWYgTWluaXN0ZXJzLiAgIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdC4gVGhlIFNhcmthcmlhIENvbW1pc3Npb24gcmVjb21tZW5kZWQgdGhhdCB0aGUgUHJpbWUgTWluaXN0ZXIgIHNob3VsZCBjb25zdWx0IHRoZSBTcGVha2VyIG9mIHRoZSBMb2sgU2FiaGEgYW5kIHRoZSBWaWNlLVByZXNpZGVudCBvZiBJbmRpYSBiZWZvcmUgYXBwb2ludGluZyBhICBHb3Zlcm5vciwgc3RhdGluZyB0aGF0IHN1Y2ggY29uc3VsdGF0aW9uIHdpbGwgc2lnbmlmaWNhbnRseSBpbmNyZWFzZSB0aGUgY3JlZGliaWxpdHkgb2YgdGhlIHNlbGVjdGlvbiAgcHJvY2Vzcy4gVGhlIGNvbW1pc3Npb24gYWxzbyBjb25kZW1uZWQgdGhlIGFyYml0cmFyeSByZW1vdmFsIG9mIGdvdmVybm9ycyBmcm9tIG9mZmljZSwgc3RhdGluZyAgdGhhdCAndGhlIHByYWN0aWNlIG9mIHRyZWF0aW5nIGdvdmVybm9ycyBhcyBwb2xpdGljYWwgZm9vdGJhbGwgbXVzdCBzdG9wJy4gICBTb3VyY2U6IGh0dHBzOi8vd3d3LnByZXNlcnZlYXJ0aWNsZXMuY29tL3BvbGl0aWNhbC1zY2llbmNlL3doYXQtd2VyZS10aGUtbWFpbi1yZWNvbW1lbmRhdGlvbnMtIG9mLXB1bmNoaGktY29tbWlzc2lvbi8xMjUzMiAgIGh0dHBzOi8vd3d3Lm1oYS5nb3YuaW4vc2l0ZXMvZGVmYXVsdC9maWxlcy8yMDIyLTA4L0NDU1JlbGF0aW9uMTIwNTA4JTVCMSU1RC5wZGYgIGh0dHBzOi8vaW5kaWFua2Fub29uLm9yZy9kb2NmcmFnbWVudC81MDU2NTYvP2JpZz0wJmZvcm1JbnB1dD1kaXNjcmV0aW9uYXJ5JTIwcG93ZXIlMjBvZiUyMCBnb3Zlcm5vciAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None   ||| "
      }
    },
    {
      "index" : 27,
      "question" : "With reference to the Constituent Assembly of India, consider the following statements: 1.  All the members of the Constituent assembly were indirectly elected by the members of the provincial assemblies. 2.  The seats allotted to the princely states were to be filled through direct elections. 3.  Sarojini Naidu was one of the members of the Constituent Assembly. How many of the above given statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0LiBUaGUgbWVtYmVycyBvZiB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgd2VyZSBwYXJ0bHkgZWxlY3RlZCBhbmQgcGFydGx5ICBub21pbmF0ZWQuIFRoZSBtZW1iZXJzIGZyb20gcHJvdmluY2VzIHdlcmUgaW5kaXJlY3RseSBlbGVjdGVkIGFuZCBmcm9tIHByaW5jZWx5IHN0YXRlcyB3ZXJlICBub21pbmF0ZWQuIFRoZXNlIHBhcnRseSBlbGVjdGVkIG1lbWJlcnMgd2VyZSBpbmRpcmVjdGx5IGVsZWN0ZWQgYnkgdGhlIG1lbWJlcnMgb2YgdGhlIHByb3ZpbmNpYWwgIGFzc2VtYmxpZXMsIHdobyB0aGVtc2VsdmVzIHdlcmUgZWxlY3RlZCBvbiBhIGxpbWl0ZWQgZnJhbmNoaXNlLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gSW4gSnVseS1BdWd1c3QgMTk0NiwgZWxlY3Rpb25zIHRvIHRoZSBjb25zdGl0dWVudCBhc3NlbWJseSB3ZXJlIGhlbGQgZm9yIHRoZSAgMjk2IHNlYXRzIGFsbG90dGVkIHRvIHRoZSBCcml0aXNoIEluZGlhbiBQcm92aW5jZXMuIFRoZSBNdXNsaW0gTGVhZ3VlIHNlY3VyZWQgNzMgc2VhdHMsIHRoZSBJbmRpYW4gIE5hdGlvbmFsIENvbmdyZXNzIGFjcXVpcmVkIDIwOCBzZWF0cywgYW5kIHRoZSByZW1haW5pbmcgMTUgc2VhdHMgd2VudCB0byBzbWFsbCBncm91cHMgYW5kIGluZGVwZW5kZW50cy4gIEVhcmxpZXIgdGhlcmUgd2FzIGEgcHJvdmlzaW9uIGFjY29yZGluZyB0byB3aGljaCB0aGUgc2VhdHMgYWxsb3R0ZWQgdG8gdGhlIHByaW5jZWx5IHN0YXRlcyB3ZXJlIHRvIGJlIGZpbGxlZCAgICBvZiAyMyB8fHwgICB0aHJvdWdoIG5vbWluYXRpb24gYnkgdGhlIGhlYWRzIG9mIHRoZSBwcmluY2VseSBzdGF0ZXMgYnV0IGFzIHRoZXkgb3B0ZWQgdG8gc3RheSBhd2F5IHRoZXJlZm9yZSB0aGUgOTMgIHNlYXRzIGFsbG9jYXRlZCB0byB0aGUgcHJpbmNlbHkgc3RhdGVzIHdlcmUgbm90IGZpbGxlZC4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3QuIFRoZSBDb25zdGl0dWVudCBBc3NlbWJseSB3YXMgbm90IGVsZWN0ZWQgZGlyZWN0bHkgYnkgdGhlIHBlb3BsZSBvZiBJbmRpYSBiYXNlZCAgb24gYWR1bHQgZnJhbmNoaXNlLiBUaGUgQ29uc3RpdHVlbnQgQXNzZW1ibHkgY29uc2lzdGVkIG9mIHJlcHJlc2VudGF0aXZlcyBmcm9tIGV2ZXJ5IHNlY3Rpb24gb2YgIHRoZSBJbmRpYW4gc29jaWV0eSBzdWNoIGFzIEhpbmR1cywgTXVzbGltcywgU2lraHMsIFBhcnNpcywgQW5nbG8tSW5kaWFucywgSW5kaWFuIENocmlzdGlhbnMsIFNDcywgYW5kIFNUcywgIGluY2x1ZGluZyB3b21lbiBmcm9tIGFsbCB0aGVzZSBzZWN0aW9ucy4gVGhlIDE1IHdvbWVuIG1lbWJlcnMgd2hvIHdlcmUgdGhlIHBhcnQgb2YgQ29uc3RpdHVlbnQgIEFzc2VtYmx5IHdlcmUgRGFrc2hheWFuaSBWZWxheXVkaGFuLCBBbW11IFN3YW1pbmF0aGFuLCBCZWd1bSBBaXpheiBSYXN1bCwgRHVyZ2FiYWkgRGVzaG11a2gsICBIYW5zYSBNZWh0YSwgS2FtbGEgQ2hhdWRoYXJ5LCBMZWVsYSBSb3ksIE1hbGF0aSBDaG91ZGh1cnksIFB1cm5pbWEgQmFuZXJqZWUsIFJhamt1bWFyaSBBbXJpdCBLYXVyLCAgUmVudWthIFJheSwgU2Fyb2ppbmkgTmFpZHUsIFN1Y2hldGEgS3JpcGxhbmksIFZpamF5YSBMYWtzaG1pIFBhbmRpdCBhbmQgQW5uaWUgTWFzY2FyZW5lLiAgU291cmNlOiBNLiBMYXhtaWthbnRoIEluZGlhbiBQb2xpdHkgICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 28,
      "question" : "A State law made upon the subjects mentioned in the Concurrent list shall prevail over Union laws under which of the following circumstances? 1. If law made by the State legislature is reserved for the consideration of the President and received his/her assent. 2. If the law made by the State legislature aims to give effect to the provisions of fundamental rights. 3. If the Supreme court of India directed states to make laws on the subject enumerated in the concurrent list.   Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI4",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBwcm92aWRlcyBmb3IgYSB0aHJlZWZvbGQgZGlzdHJpYnV0aW9uIG9mIGxlZ2lzbGF0aXZlIHN1YmplY3RzIGJldHdlZW4gdGhlIFVuaW9uICBhbmQgU3RhdGVzIC0gVW5pb24gbGlzdCAoMTAwIHN1YmplY3RzKSwgU3RhdGUgbGlzdCAoNjEgc3ViamVjdHMpIGFuZCBDb25jdXJyZW50IGxpc3QgKDUyIHN1YmplY3RzKSBlbnNocmluZWQgIGluIHRoZSBTZXZlbnRoIHNjaGVkdWxlIG9mIHRoZSBjb25zdGl0dXRpb24uICAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogVGhlIGxhd3MgbWFkZSBieSB0aGUgU3RhdGUgbGVnaXNsYXRpdmUgYXNzZW1ibHkgbWF5IHByZXZhaWwgb3ZlciBsYXdzIG1hZGUgYnkgIHRoZSBQYXJsaWFtZW50IGlmIHN1Y2ggbGF3cyB3ZXJlIHJlc2VydmVkIGZvciB0aGUgY29uc2lkZXJhdGlvbiBvZiB0aGUgUHJlc2lkZW50IGFuZCByZWNlaXZlZCB0aGUgIHByZXNpZGVudCdzIGFzc2VudC4gSG93ZXZlciwgaXQgd291bGQgc3RpbGwgYmUgY29tcGV0ZW50IGZvciBQYXJsaWFtZW50IHRvIG92ZXJyaWRlIHN1Y2ggU3RhdGUgbGF3IGJ5ICBzdWJzZXF1ZW50IGxlZ2lzbGF0aW9uLiAgIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdDogVGhlcmUgaXMgbm8gc3VjaCBleGVtcHRpb24gZ2l2ZW4gdG8gdGhlIHN0YXRlIGxlZ2lzbGF0aXZlIGFzc2VtYmx5IGluIG1hdHRlcnMgIHJlbGF0ZWQgdG8gY29uY3VycmVudCBsaXN0LiBJZiB0aGVyZSBpcyBjb25mbGljdCBvdmVyIGNlbnRyZSBhbmQgc3RhdGUgbGF3cyByZWdhcmRpbmcgbWF0dGVycyBlbnVtZXJhdGVkIGluICB0aGUgY29uY3VycmVudCBsaXN0LCB0aGVuIGNlbnRyZSBsYXcgc2hhbGwgcHJldmFpbC4gIFN0YXRlbWVudCAzIGlzIGluY29ycmVjdDogVGhlcmUgaXMgbm8gc3VjaCBleGNlcHRpb25hbCBjb25kaXRpb24gZm9yIHRoZSBzdGF0ZSBsYXdzIHRvIHByZXZhaWwgb3ZlciAgdW5pb24gbGF3IGluIGNhc2Ugb2YgaW5jb25zaXN0ZW5jeSBiZXR3ZWVuIHRoZW0gd2l0aCByZXNwZWN0IHRvIGNvbmN1cnJlbnQgbGlzdC4gSWYgdGhlcmUgaXMgaW5jb25zaXN0ZW5jeSAgYmV0d2VlbiB1bmlvbiBhbmQgc3RhdGUgbGF3cywgdGhlbiB0aGUgdW5pb24gbGF3IHdpbGwgcHJldmFpbCBldmVuIGlmIHRob3NlIHN0YXRlIGxhd3Mgd2VyZSBtYWRlIG9uIHRoZSAgZGlyZWN0aW9ucyBvZiB0aGUgU3VwcmVtZSBjb3VydC4gICBTb3VyY2U6ICBERCBCYXN1IC0gU3RhdGUgbGVnaXNsYXR1cmUgKG9yZGluYW5jZSBtYWtpbmcgcG93ZXIgb2YgR292ZXJub3IpICBMYXhtaWthbnRoIC0gQ2VudHJlIFN0YXRlIHJlbGF0aW9ucyAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 and 3 only ",
        "option3" : "1 and 3 only ",
        "option4" : "1, 2 and 3  "
      }
    },
    {
      "index" : 29,
      "question" : "With reference to the Delegation of Functions between Centre and States in India, consider the following statements: 1.  Centre cannot delegate its legislative powers to the states. 2.  The President may delegate any of the executive functions of the Centre to the state government.  3.  The Parliament can delegate executive functions of the Centre to a state without the consent of that state.  How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIGRpc3RyaWJ1dGlvbiBvZiBsZWdpc2xhdGl2ZSBwb3dlcnMgYmV0d2VlbiB0aGUgQ2VudHJlIGFuZCB0aGUgc3RhdGVzIGlzIHJpZ2lkLiAgVGhlcmVmb3JlLCB0aGUgQ2VudHJlIGNhbm5vdCBkZWxlZ2F0ZSBpdHMgbGVnaXNsYXRpdmUgcG93ZXJzIHRvIHRoZSBzdGF0ZXMgYW5kIGEgc2luZ2xlIHN0YXRlIGNhbm5vdCAgcmVxdWVzdCBQYXJsaWFtZW50IHRvIG1ha2UgYSBsYXcgb24gYSBzdGF0ZSBzdWJqZWN0LiBHZW5lcmFsbHksIHRoZSBkaXN0cmlidXRpb24gb2YgZXhlY3V0aXZlICBwb3dlciBmb2xsb3dzIHRoZSBkaXN0cmlidXRpb24gb2YgbGVnaXNsYXRpdmUgcG93ZXJzLiBIb3dldmVyLCBzdWNoIGEgcmlnaWQgZGl2aXNpb24gaW4gdGhlIGV4ZWN1dGl2ZSAgc3BoZXJlIG1heSByZXN1bHQgaW4gb2NjYXNpb25hbCBkaXNwdXRlcyBiZXR3ZWVuIHRoZSBDZW50cmUgYW5kIHRoZSBzdGF0ZXMuIFRoZXJlZm9yZSwgdG8gbWl0aWdhdGUgIHJpZ2lkaXR5IGFuZCBwcmV2ZW50IGEgZGVhZGxvY2sgc2l0dWF0aW9uLCB0aGUgQ29uc3RpdHV0aW9uIHByb3ZpZGVzIGZvciB0aGUgaW50ZXItZ292ZXJubWVudCBkZWxlZ2F0aW9uICBvZiBleGVjdXRpdmUgcG93ZXJzLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gQW55IG9mIHRoZSBleGVjdXRpdmUgZnVuY3Rpb25zIG9mIHRoZSBDZW50cmUgbWF5IGJlIGRlbGVnYXRlZCB0byB0aGUgc3RhdGUgIGdvdmVybm1lbnQgYnkgdGhlIFByZXNpZGVudCB3aXRoIHRoZSBjb25zZW50IG9mIHRoZSBzdGF0ZSBnb3Zlcm5tZW50LiBPbiB0aGUgb3RoZXIgaGFuZCwgdGhlICBHb3Zlcm5vciBvZiBhIHN0YXRlIG1heSwgd2l0aCB0aGUgY29uc2VudCBvZiB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50LCBkZWxlZ2F0ZSBhbnkgb2YgdGhlIHN0YXRlJ3MgIGV4ZWN1dGl2ZSBwb3dlcnMgdG8gdGhlIENlbnRyYWwgR292ZXJubWVudC4gVGhpcyBtdXR1YWwgZGVsZWdhdGlvbiBvZiBhZG1pbmlzdHJhdGl2ZSByZXNwb25zaWJpbGl0aWVzICBtYXkgYmUgY29uZGl0aW9uYWwgb3IgdW5jb25kaXRpb25hbC4gICAgb2YgMjMgfHx8ICAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gVGhlIENvbnN0aXR1dGlvbiBvZiBJbmRpYSBhbHNvIHByb3ZpZGVzIGZvciB0aGUgZGVsZWdhdGlvbiBvZiB0aGUgZXhlY3V0aXZlICBmdW5jdGlvbnMgb2YgdGhlIENlbnRyZSB0byBhIHN0YXRlIHdpdGhvdXQgdGhhdCBzdGF0ZSdzIGNvbnNlbnQuIEhvd2V2ZXIsIGluIHRoaXMgY2FzZSwgdGhlIGRlbGVnYXRpb24gaXMgIGRvbmUgYnkgdGhlIFBhcmxpYW1lbnQgYW5kIG5vdCB0aGUgcHJlc2lkZW50LiBUaGlzIG11dHVhbCBkZWxlZ2F0aW9uIG9mIGZ1bmN0aW9ucyBiZXR3ZWVuIHRoZSBDZW50cmUgIGFuZCB0aGUgc3RhdGUgbWF5IHRha2UgcGxhY2UgZWl0aGVyIHVuZGVyIGFuIGFncmVlbWVudCBvciBieSBhIGxlZ2lzbGF0aW9uLiBUaGUgQ2VudHJlIG1heSB1dGlsaXNlICBib3RoIG1ldGhvZHMgYnV0IGEgc3RhdGUgY2FuIG9ubHkgdXNlIHRoZSBmaXJzdCBtZXRob2QgaS5lLiB0aGUgYWdyZWVtZW50LiAgU291cmNlOiAgTS4gTGF4bWlrYW50aCBDaGFwdGVyIDE0ICAgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 30,
      "question" : "With reference to 'Discretionary grants', consider the following statements: 1. There is no constitutional obligation for the centre to give these grants to states. 2. States can make these grants only for those public purposes which are within their legislative jurisdictions. 3. Centre allots these grants to states based only on the recommendation of the Finance commission. Which of the statement/s given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMw",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQmVzaWRlcyBzaGFyaW5nIG9mIHRheGVzIGJldHdlZW4gdGhlIENlbnRyZSBhbmQgdGhlIHN0YXRlcywgdGhlIENvbnN0aXR1dGlvbiBwcm92aWRlcyBmb3IgZ3JhbnRzLWluLWFpZCB0byAgdGhlIHN0YXRlcyBmcm9tIHRoZSBDZW50cmFsIHJlc291cmNlcy4gVGhlcmUgYXJlIHR3byB0eXBlcyBvZiBncmFudHMtaW4tYWlkLSBzdGF0dXRvcnkgZ3JhbnRzIGFuZCAgZGlzY3JldGlvbmFyeSBncmFudHMuICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0OiAgRGlzY3JldGlvbmFyeSBncmFudHMgYXJlIGNhbGxlZCBzbyBiZWNhdXNlIHRoZXJlIGlzIG5vIGNvbnN0aXR1dGlvbmFsIG9ibGlnYXRpb24gIGZvciB0aGUgY2VudHJlIHRvIGdpdmUgdGhlc2UgZ3JhbnRzIHRvIHN0YXRlcyBhbmQgbWF0dGVycyBsaWUgd2l0aGluIHRoZSBjZW50cmUncyBkaXNjcmV0aW9uLiBUaGVzZSBncmFudHMgIGFyZSBnaXZlbiB0byBzdGF0ZXMgdG8gaGVscCBzdGF0ZXMgdG8gZnVsZmlsIHRoZWlyIGRldmVsb3BtZW50YWwgcGxhbnMgYW5kIGluZmx1ZW5jZSBzdGF0ZXMgdG8gaW1wbGVtZW50IHRoZSAgbmF0aW9uYWwgcGxhbi4gICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEFydGljbGUgMjgyIGVtcG93ZXJzIGJvdGggdGhlIENlbnRyZSBhbmQgdGhlIHN0YXRlcyB0byBtYWtlIGFueSBncmFudHMgZm9yICBhbnkgcHVibGljIHB1cnBvc2UsIGV2ZW4gaWYgaXQgaXMgbm90IHdpdGhpbiB0aGVpciByZXNwZWN0aXZlIGxlZ2lzbGF0aXZlIGp1cmlzZGljdGlvbnMuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3Q6IENlbnRyZSBkb2VzIG5vdCBhbGxvdCB0aGVzZSBncmFudHMgdG8gc3RhdGVzIGJhc2VkIG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiAgdGhlIEZpbmFuY2UgY29tbWlzc2lvbi4gSW4gY29udHJhc3Qgc3RhdHV0b3J5IGdyYW50cyAoQXJ0aWNsZSAyNzUpIGFyZSBhbGxvdHRlZCB0byBzdGF0ZXMgYnkgdGhlIGNlbnRyZSAgYmFzZWQgb24gdGhlIHJlY29tbWVuZGF0aW9uIG9mIHRoZSBGaW5hbmNlIGNvbW1pc3Npb24uICAgU291cmNlOiBMYXhtaWthbnRoOiBDZW50cmUgLSBTdGF0ZSByZWxhdGlvbnMgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "1 and 3 only ",
        "option3" : " 2 only ",
        "option4" : "1 and 2 only  "
      }
    },
    {
      "index" : 31,
      "question" : "With reference to termination of Indian citizenship, consider the following statements: If an individual: 1. Unlawfully traded or communicated with the enemy during a war.  2. Shown disloyalty to the Constitution of India. 3. Ordinarily resident out of India for seven years continuously. 4. Voluntarily acquires the citizenship of another country with which India may be engaged in war.  In how many cases given above, there would be compulsory termination of Indian citizenship of an individual?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDaXRpemVuc2hpcCBBY3QgKDE5NTUpIHByZXNjcmliZXMgdGhyZWUgd2F5cyBvZiBsb3NpbmcgY2l0aXplbnNoaXAgd2hldGhlciBhY3F1aXJlZCB1bmRlciB0aGUgQWN0IG9yICBwcmlvciB0byBpdCB1bmRlciB0aGUgQ29uc3RpdHV0aW9uLCB2aXosIHJlbnVuY2lhdGlvbiwgdGVybWluYXRpb24gYW5kIGRlcHJpdmF0aW9uOiAgT3B0aW9ucyAxLCAyIGFuZCAzIGFyZSBjb3JyZWN0LiBEZXByaXZhdGlvbiBpcyBhIGNvbXB1bHNvcnkgdGVybWluYXRpb24gb2YgY2l0aXplbnNoaXAgaW4gSW5kaWEuIEEgY2l0aXplbiAgb2YgSW5kaWEgYnkgbmF0dXJhbGl6YXRpb24sIHJlZ2lzdHJhdGlvbiwgZG9taWNpbGUgYW5kIHJlc2lkZW5jZSwgbWF5IGJlIGRlcHJpdmVkIG9mIGhpcyBjaXRpemVuc2hpcCBieSBhbiAgb3JkZXIgb2YgdGhlIENlbnRyYWwgR292ZXJubWVudCBpZiBpdCBpcyBzYXRpc2ZpZWQgdGhhdDogIDEpIFRoZSBjaXRpemVuIGhhcyBvYnRhaW5lZCB0aGUgY2l0aXplbnNoaXAgYnkgbWVhbnMgb2YgZnJhdWQsIGZhbHNlIHJlcHJlc2VudGF0aW9uIG9yIGNvbmNlYWxtZW50IG9mIGFueSAgbWF0ZXJpYWwgZmFjdDsgIDIpIFRoZSBjaXRpemVuIGhhcyBzaG93biBkaXNsb3lhbHR5IHRvIHRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWE7ICAzKSBUaGUgY2l0aXplbiBoYXMgdW5sYXdmdWxseSB0cmFkZWQgb3IgY29tbXVuaWNhdGVkIHdpdGggdGhlIGVuZW15IGR1cmluZyBhIHdhcjsgIDQpIFRoZSBjaXRpemVuIGhhcywgd2l0aGluIGZpdmUgeWVhcnMgYWZ0ZXIgcmVnaXN0cmF0aW9uIG9yIG5ldXRyYWxpemF0aW9uLCBiZWVuIGltcHJpc29uZWQgaW4gYW55IGNvdW50cnkgIGZvciB0d28geWVhcnM7ICA1KSBUaGUgY2l0aXplbiBoYXMgYmVlbiBvcmRpbmFyaWx5IHJlc2lkZW50IG91dCBvZiBJbmRpYSBmb3Igc2V2ZW4geWVhcnMgY29udGludW91c2x5LiAgIE9wdGlvbiA0IGlzIGluY29ycmVjdC4gV2hlbiBhbiBJbmRpYW4gY2l0aXplbiB2b2x1bnRhcmlseSAoY29uc2Npb3VzbHksIGtub3dpbmdseSBhbmQgd2l0aG91dCBkdXJlc3MsICB1bmR1ZSBpbmZsdWVuY2Ugb3IgY29tcHVsc2lvbikgYWNxdWlyZXMgY2l0aXplbnNoaXAgb2YgYW5vdGhlciBjb3VudHJ5LCBoaXMgSW5kaWFuIGNpdGl6ZW5zaGlwICBhdXRvbWF0aWNhbGx5IHRlcm1pbmF0ZXMuIFRoaXMgcHJvdmlzaW9uLCBob3dldmVyLCBkb2VzIG5vdCBhcHBseSBkdXJpbmcgYSB3YXIgaW4gd2hpY2ggSW5kaWEgaXMgIGVuZ2FnZWQuICBTb3VyY2U6IExheG1pa2FudGggY2hhcHRlciA2LCBDaXRpemVuc2hpcCAgaHR0cHM6Ly93d3cubGVnYWxzZXJ2aWNlaW5kaWEuY29tL2xlZ2FsL2FydGljbGUtMzYwMi1tZXRob2RzLW9mLWFjcXVpcmluZy1hbmQtbG9zaW5nLW9mLSBjaXRpemVuc2hpcC11bmRlci1pbmRpYW4tY2l0aXplbnNoaXAtYWN0Lmh0bWwgICAgICBvZiAyMyB8fHwgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "All four     ||| "
      }
    },
    {
      "index" : 32,
      "question" : "Consider the following statements regarding the Basic Structure of the Constitution of India:  1. The Supreme Court has the power to determine what constitutes Basic Structure.    2. India has borrowed the Basic Structure doctrine from the Constitution of Russia. 3. The balance between Fundamental Rights and the Directive Principle of State Policies is identified as a part of Basic structure. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMy",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3QuIFRoZSBDb25zdGl0dXRpb24gaXMgbm90IGFic29sdXRlIGFuZCB0aGUgU3VwcmVtZSBDb3VydCBpcyB0aGUgZmluYWwgYXJiaXRlciBhbmQgIGludGVycHJldGVyIG9mIGFsbCBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnRzLiBUaGUgU3VwcmVtZSBDb3VydCBoYXMgdGhlIGV4Y2x1c2l2ZSBwb3dlciB0byBkZXRlcm1pbmUgIHRoZSBmZWF0dXJlcywgcHJpbmNpcGxlcyBvciBjb3JlIHZhbHVlcyB0aGF0IGZvcm0gcGFydCBvZiB0aGUgQmFzaWMgU3RydWN0dXJlIGZyYW1ld29yay4gTGlrZSBldmVyeSAgb3RoZXIgY291bnRyeSwgSW5kaWEgaXMgYmFzZWQgb24gYW4gaWRlYSBhbmQgY2VydGFpbiB2YWx1ZXMsIGJlIGl0IGRlbW9jcmFjeSwgc2VjdWxhcmlzbSwgZXRjLiBPbmNlIHRoZXNlICBpZGVhcyBhcmUgZWxpbWluYXRlZCBvciB0cmFuc2Zvcm1lZCwgdGhlIG5hdHVyZSBvZiBJbmRpYSBhbmQgaXRzIENvbnN0aXR1dGlvbiBpcyBkZXN0cm95ZWQgdG9vLiAgU3RhdGVtZW50IDIgaXMgaW5jb3JyZWN0LiBUaGUgcGhyYXNlICdiYXNpYyBzdHJ1Y3R1cmUnIHdhcyBpbnRyb2R1Y2VkIGZvciB0aGUgZmlyc3QgdGltZSBieSBNLksuICBOYW1iaWFyIGFuZCBvdGhlciBjb3Vuc2VscyB3aGlsZSBhcmd1aW5nIGZvciB0aGUgcGV0aXRpb25lcnMgaW4gdGhlIEdvbGFrbmF0aCBjYXNlLCBidXQgaXQgd2FzIG9ubHkgaW4gIDE5NzMgdGhhdCB0aGUgY29uY2VwdCBzdXJmYWNlZCBpbiB0aGUgdGV4dCBvZiB0aGUgYXBleCBjb3VydCdzIHZlcmRpY3QgaW4gdGhlIGhpc3RvcmljIGNhc2Ugb2YgIEtlc2F2YW5hbmRhIEJoYXJhdGkgdi4gU3RhdGUgb2YgS2VyYWxhIGluIDE5NzMgYnkgdGhlIFN1cHJlbWUgQ291cnQuIFNpbmNlIHRoZW4sIHRoZSBTdXByZW1lIENvdXJ0IGlzICBub3cgcmVnYXJkZWQgYXMgdGhlIGludGVycHJldGVyIG9mIHRoZSBDb25zdGl0dXRpb24gYW5kIHRoZSBhcmJpdGVyIG9mIGFsbCBhbWVuZG1lbnRzIG1hZGUgYnkgIFBhcmxpYW1lbnQsIGFuZCB0aGUgUGFybGlhbWVudCBjYW5ub3QgZGlzdG9ydCwgZGFtYWdlLCBvciBhbHRlciB0aGUgZnVuZGFtZW50YWwgcHJvdmlzaW9ucyBvZiB0aGUgIENvbnN0aXR1dGlvbiB1bmRlciB0aGUgcHJldGVuc2Ugb2YgYWx0ZXJpbmcgaXQuICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0LiAgSGFybW9ueSBhbmQgYmFsYW5jZSBiZXR3ZWVuIEZ1bmRhbWVudGFsIFJpZ2h0cyBhbmQgRGlyZWN0aXZlIFByaW5jaXBsZXMgaXMgIG9uZSBvZiB0aGUgYmFzaWMgZmVhdHVyZXMgb2YgdGhlIENvbnN0aXR1dGlvbiBhcyBsYWlkIGRvd24gYnkgdGhlIFN1cHJlbWUgQ291cnQuICAgU291cmNlOiBMYXhtaWthbnRoLCBDaGFwdGVyIDExLCBCYXNpYyBzdHJ1Y3R1cmUgIGh0dHBzOi8vd3d3LmxlZ2Fsc2VydmljZWluZGlhLmNvbS9hcnRpY2xlcyBoeWcuaHRtICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 33,
      "question" : "Consider the following options:  1. Formation of a Stable Government 2. Allows wide representation in the Government 3. Prevents Despotism 4. Upholds Separation of Power 5. Establishment of Responsible Government How many of the above mentioned are the merits of the Parliamentary system over the Presidential system?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDMz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIE9wdGlvbiAxIGlzIGluY29ycmVjdC4gVGhlIFN0YWJsZSBnb3Zlcm5tZW50IGlzIGEga2V5IGZlYXR1cmUgb2YgdGhlIFByZXNpZGVudGlhbCBzeXN0ZW0uIFRoZSAgUGFybGlhbWVudGFyeSBzeXN0ZW0gZG9lcyBub3QgcHJvdmlkZSBhIHN0YWJsZSBnb3Zlcm5tZW50LiBUaGVyZSBpcyBubyBndWFyYW50ZWUgdGhhdCBhIGdvdmVybm1lbnQgIGNhbiBzdXJ2aXZlIGl0cyB0ZW51cmUuIFRoZSBtaW5pc3RlcnMgZGVwZW5kIG9uIHRoZSBtZXJjeSBvZiB0aGUgbWFqb3JpdHkgbGVnaXNsYXRvcnMgZm9yIHRoZWlyIGNvbnRpbnVpdHkgIGFuZCBzdXJ2aXZhbCBpbiBvZmZpY2UuIEEgbm8tY29uZmlkZW5jZSBtb3Rpb24gb3IgcG9saXRpY2FsIGRlZmVjdGlvbiBvciBldmlscyBvZiB0aGUgbXVsdGlwYXJ0eSBjb2FsaXRpb24gIGNhbiBtYWtlIHRoZSBnb3Zlcm5tZW50IHVuc3RhYmxlLiAgT3B0aW9uIDIgaXMgY29ycmVjdC4gVGhlIFBhcmxpYW1lbnRhcnkgc3lzdGVtIGFsbG93cyB3aWRlIHJlcHJlc2VudGF0aW9uLCB0aGUgZXhlY3V0aXZlIGNvbnNpc3RzIG9mIGEgIGdyb3VwIG9mIGluZGl2aWR1YWxzIChpLmUuLCBtaW5pc3RlcnMgd2hvIGFyZSByZXByZXNlbnRhdGl2ZXMgb2YgdGhlIHBlb3BsZSkuIEhlbmNlLCBpdCBpcyBwb3NzaWJsZSB0byBwcm92aWRlICByZXByZXNlbnRhdGlvbiB0byBhbGwgc2VjdGlvbnMgYW5kIHJlZ2lvbnMgaW4gdGhlIGdvdmVybm1lbnQuICBPcHRpb24gMyBpcyBjb3JyZWN0LiBUaGUgUGFybGlhbWVudGFyeSBzeXN0ZW0gcHJldmVudHMgdGhlIERlc3BvdGlzbSBzeXN0ZW0sIHdoaWNoIG1lYW5zIHRoZSAgZXhlY3V0aXZlIGF1dGhvcml0eSBpcyB2ZXN0ZWQgaW4gYSBncm91cCBvZiBpbmRpdmlkdWFscyAoY291bmNpbCBvZiBtaW5pc3RlcnMpIGFuZCBub3QgaW4gYSBzaW5nbGUgcGVyc29uLiAgVGhpcyBkaXNwZXJzYWwgb2YgYXV0aG9yaXR5IGNoZWNrcyB0aGUgZGljdGF0b3JpYWwgdGVuZGVuY2llcyBvZiB0aGUgZXhlY3V0aXZlLiAgT3B0aW9uIDQgaXMgaW5jb3JyZWN0LiBUaGUgUGFybGlhbWVudGFyeSBzeXN0ZW0gZG9lcyBub3Qgc3RyaWN0bHkgZm9sbG93IHRoZSBkb2N0cmluZSBvZiBzZXBhcmF0aW9uIG9mICBwb3dlciAoc2VwYXJhdGlvbiBvZiBQb3dlciBpcyB0aGUgQmFzaWMgZmVhdHVyZSBvZiB0aGUgUHJlc2lkZW50aWFsIHN5c3RlbSBvZiBnb3Zlcm5tZW50KS4gVGhlIGxlZ2lzbGF0dXJlICBhbmQgdGhlIGV4ZWN1dGl2ZSBhY3QgdG9nZXRoZXIgYW5kIGFyZSBpbnNlcGFyYWJsZS4gVGhlIGNhYmluZXQgYWN0cyBhcyB0aGUgbGVhZGVyIG9mIGxlZ2lzbGF0dXJlIGFzIHdlbGwgYXMgIHRoZSBleGVjdXRpdmUuICAgT3B0aW9uIDUgaXMgY29ycmVjdC4gQnkgaXRzIHZlcnkgbmF0dXJlLCB0aGUgUGFybGlhbWVudGFyeSBzeXN0ZW0gZXN0YWJsaXNoZXMgYSByZXNwb25zaWJsZSBnb3Zlcm5tZW50LiAgVGhlIG1pbmlzdGVycyBhcmUgcmVzcG9uc2libGUgdG8gdGhlIFBhcmxpYW1lbnQgZm9yIGFsbCB0aGVpciBhY3RzIG9mIG9taXNzaW9uIGFuZCBjb21taXNzaW9uLiBUaGUgIFBhcmxpYW1lbnQgZXhlcmNpc2VzIGNvbnRyb2wgb3ZlciB0aGUgbWluaXN0ZXJzIHRocm91Z2ggdmFyaW91cyBkZXZpY2VzIGxpa2UgcXVlc3Rpb24gaG91ciwgZGlzY3Vzc2lvbnMsICBhZGpvdXJubWVudCBtb3Rpb24sIG5vLWNvbmZpZGVuY2UgbW90aW9uLCBldGMgIFNvdXJjZTogTGF4bWlrYW50aCwgY2hhcHRlciAxMiwgUGFybGlhbWVudGFyeSBzeXN0ZW0gIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only two ",
        "option2" : "Only three ",
        "option3" : "Only four ",
        "option4" : "All five  "
      }
    },
    {
      "index" : 34,
      "question" : "Consider the following statements: Statement-I: The State Government has the primary responsibility to regulate betting and gambling. Statement-II: Betting and gambling is a state subject under Schedule VII of the Indian Constitution. Which one of the following is correct in respect of the above statements? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM0",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgICBvZiAyMyB8fHwgICAgQm90aCBTdGF0ZW1lbnQtSSBhbmQgU3RhdGVtZW50LUlJIGFyZSBjb3JyZWN0LCBhbmQgU3RhdGVtZW50LUlJIGlzIHRoZSBjb3JyZWN0IGV4cGxhbmF0aW9uIG9mICBTdGF0ZW1lbnQtSSAgIFN0YXRlbWVudC1JIGlzIGNvcnJlY3QuIFRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEsIDE5NTAsIGVtcG93ZXJzIHRoZSBTdGF0ZSBHb3Zlcm5tZW50cyB0byBsZWdpc2xhdGUgIG9uIHRoZSBsZWdhbGl0eSBvciBpbGxlZ2FsaXR5IG9mIGdhbWJsaW5nIHBvbGljaWVzLiAgIFN0YXRlbWVudC1JSSBpcyBjb3JyZWN0LiBUaGUgb2ZmZW5jZSBoYXMgYmVlbiBlbnRydXN0ZWQgdG8gdGhlIFN0YXRlIEdvdmVybm1lbnRzIHVuZGVyIEVudHJ5IDM0LCByZWFkICB3aXRoIEVudHJ5IDY0IG9mIExpc3QgSUkgKFN0YXRlIGxpc3QpIG9mIHRoZSBTZXZlbnRoIFNjaGVkdWxlLiBUaGlzIGltcGxpZXMgdGhhdCBvbmx5IFN0YXRlIEdvdmVybm1lbnRzIGNhbiAgbWFrZSBsYXdzIGFyb3VuZCAnYmV0dGluZyBhbmQgZ2FtYmxpbmcnIHVubGVzcyB0aGUgUGFybGlhbWVudCBleGVyY2lzZXMgaXRzIHBvd2VyIHVuZGVyIEFydGljbGUgMjQ5ICBvciBBcnRpY2xlIDI1MC4gRnVydGhlcm1vcmUsIEVudHJ5IDYyIGVtcG93ZXJzIHRoZSBTdGF0ZSBHb3Zlcm5tZW50cyB0byBsZWdpc2xhdGUgaW4gdGhlIG1hdHRlciBvZiAgaW1wb3NpbmcgdGF4ZXMgb24gZ2FtYmxpbmcgYW5kIGJldHRpbmcuIEhlbmNlLCBpdCBleHBsYWlucyBTdGF0ZW1lbnQtSS4gIFRoZSBQdWJsaWMgR2FtYmxpbmcgQWN0LCBvZiAxODY3LCBpcyBhIGh5YnJpZCB2ZXJzaW9uIG9mIHRoZSBHYW1pbmcgQWN0LCAxODQ1LCBvZiB0aGUgVW5pdGVkIEtpbmdkb20sICBhbmQgdGhlIEJldHRpbmcgQWN0LCBvZiAxODUzIG9mIElyZWxhbmQuIFNlY3Rpb24gMSBvZiB0aGUgUHVibGljIEdhbWluZyBBY3QsIDE4NjcsIGRlZmluZXMgdGhlICdjb21tb24tIGdhbWluZyBob3VzZScgYW5kIHRoZSBBY3Qgc3RpcHVsYXRlcyB0aGUgcHVuaXNobWVudCBmb3IgdGhlIG93bmVyIG9yIG9jY3VwaWVyIG9mIHRoZSBnYW1pbmcgaG91c2UuICBUaGlzIHByb3Zpc2lvbiBkZWZpbmVzIGlsbGVnYWwgZm9ybXMgb2YgZ2FtYmxpbmcuIFRoZSBwbGF5aW5nIG9mIGdhbWVzIHRoYXQgaW52b2x2ZSBjYXJkcywgZGljZSwgdGFibGVzLCBvciAgb3RoZXIgZ2FtaW5nIGluc3RydW1lbnRzIGlzIGFuIG9mZmVuY2Ugd2hlbiB0aGVzZSBpbnN0cnVtZW50cyBhcmUga2VwdCBvciBwbGF5ZWQgZm9yIHRoZSBwdXJwb3NlIG9mICBlYXJuaW5nIHByb2ZpdHMuICBTb3VyY2U6IExheG1pa2FudGgsIGNoYXB0ZXIgMTQsIGNlbnRyZSBzdGF0ZSByZWxhdGlvbnMgIGh0dHA6Ly9jb25zdGl0dXRpb25vZmluZGlhLmV0YWwuaW4vc2NoZWR1bGVfN18yLyAgIChodHRwczovL3d3dy5pbmRpYWNvZGUubmljLmluL2JpdHN0cmVhbS8xMjM0NTY3ODkvMjI2OS8xL0FBQTE4NjdfX19fMDMucGRmKSAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Both Statement-I and Statement-II are  correct and Statement-II is the correct  explanation of Statement-I. ",
        "option2" : " Both Statement-I and Statement-II are  correct and Statement-II is not the correct  explanation of Statement-I. ",
        "option3" : " Statement-I is correct but Statement-II is  incorrect. ",
        "option4" : " Statement-I is incorrect but Statement-II is  correct.  "
      }
    },
    {
      "index" : 35,
      "question" : "The Parliament of India can legislate on a state subject in case of- 1. National Emergency 2. President's Rule 3. Financial Emergency 4. A single State requests Centre  5. Implementation of International agreements  How many of the above options are correct with respect to the Parliament legislation power on State List?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM1",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFRoZSBDb25zdGl0dXRpb24gZW1wb3dlcnMgdGhlIFBhcmxpYW1lbnQgdG8gbWFrZSBsYXdzIG9uIGFueSBtYXR0ZXIgZW51bWVyYXRlZCBpbiB0aGUgU3RhdGUgTGlzdCAgdW5kZXIgdGhlIGZvbGxvd2luZyBmaXZlIGV4dHJhb3JkaW5hcnkgY2lyY3Vtc3RhbmNlcyAgT3B0aW9uIDEgaXMgY29ycmVjdC4gRHVyaW5nIGEgTmF0aW9uYWwgRW1lcmdlbmN5LSBUaGUgUGFybGlhbWVudCBhY3F1aXJlcyB0aGUgcG93ZXIgdG8gbGVnaXNsYXRlIHdpdGggIHJlc3BlY3QgdG8gZ29vZHMgYW5kIHNlcnZpY2VzIHRheGVzIG9yIG1hdHRlcnMgaW4gdGhlIFN0YXRlIExpc3QsIHdoaWxlIGEgcHJvY2xhbWF0aW9uIG9mIG5hdGlvbmFsICBlbWVyZ2VuY3kgaXMgaW4gb3BlcmF0aW9uIHRoZSBleHBpcmF0aW9uIG9mIHNpeCBtb250aHMgYWZ0ZXIgdGhlIGVtZXJnZW5jeSBoYXMgY2Vhc2VkIHRvIG9wZXJhdGUuICBPcHRpb24gMiBpcyBjb3JyZWN0LiBEdXJpbmcgUHJlc2lkZW50J3MgUnVsZS0gV2hlbiB0aGUgUHJlc2lkZW50J3MgcnVsZSBpcyBpbXBvc2VkIGluIGEgc3RhdGUsIHRoZSAgUGFybGlhbWVudCBiZWNvbWVzIGVtcG93ZXJlZCB0byBtYWtlIGxhd3Mgd2l0aCByZXNwZWN0IHRvIGFueSBtYXR0ZXIgaW4gdGhlIFN0YXRlIExpc3QgaW4gcmVsYXRpb24gdG8gIHRoYXQgc3RhdGUuIEEgbGF3IG1hZGUgc28gYnkgdGhlIFBhcmxpYW1lbnQgY29udGludWVzIHRvIGJlIG9wZXJhdGl2ZSBldmVuIGFmdGVyIHRoZSBwcmVzaWRlbnQncyBydWxlLiBCdXQsICBzdWNoIGEgbGF3IGNhbiBiZSByZXBlYWxlZCBvciBhbHRlcmVkIG9yIHJlLWVuYWN0ZWQgYnkgdGhlIHN0YXRlIGxlZ2lzbGF0dXJlLiAgT3B0aW9uIDMgaXMgaW5jb3JyZWN0LiBUaGVyZSBpcyBubyBwcm92aXNpb24gaW4gdGhlIENvbnN0aXR1dGlvbiB3aGljaCBlbmFibGVzIHRoZSBDZW50cmUgdG8gbWFrZSBsYXdzIG9uICB0aGUgU3RhdGUgbGlzdCBkdXJpbmcgRmluYW5jaWFsIEVtZXJnZW5jeS4gIE9wdGlvbiA0IGlzIGluY29ycmVjdC4gV2hlbiBTdGF0ZXMgTWFrZSBhIFJlcXVlc3QtIFdoZW4gdGhlIGxlZ2lzbGF0dXJlcyBvZiB0d28gb3IgbW9yZSBzdGF0ZXMgKG5vdCBieSAgYSBzaW5nbGUgc3RhdGUpIHBhc3MgcmVzb2x1dGlvbnMgcmVxdWVzdGluZyB0aGUgUGFybGlhbWVudCB0byBlbmFjdCBsYXdzIG9uIGEgbWF0dGVyIGluIHRoZSBTdGF0ZSBMaXN0LCB0aGVuICB0aGUgUGFybGlhbWVudCBjYW4gbWFrZSBsYXdzIGZvciByZWd1bGF0aW5nIHRoYXQgbWF0dGVyLiBIb3dldmVyLCBhbnkgb3RoZXIgc3RhdGUgbWF5IGFkb3B0IGl0ICBhZnRlcndhcmRzIGJ5IHBhc3NpbmcgYSByZXNvbHV0aW9uIHRvIHRoYXQgZWZmZWN0IGluIGl0cyBsZWdpc2xhdHVyZS4gU3VjaCBhIGxhdyBjYW4gYmUgYW1lbmRlZCBvciByZXBlYWxlZCAgb25seSBieSB0aGUgUGFybGlhbWVudCBhbmQgbm90IGJ5IHRoZSBsZWdpc2xhdHVyZXMgb2YgdGhlIGNvbmNlcm5lZCBzdGF0ZXMgIE9wdGlvbiA1IGlzIGNvcnJlY3QuIFRvIEltcGxlbWVudCBJbnRlcm5hdGlvbmFsIEFncmVlbWVudHMtIFRoZSBQYXJsaWFtZW50IGNhbiBtYWtlIGxhd3Mgb24gYW55ICBtYXR0ZXIgaW4gdGhlIFN0YXRlIExpc3QgZm9yIGltcGxlbWVudGluZyBpbnRlcm5hdGlvbmFsIHRyZWF0aWVzLCBhZ3JlZW1lbnRzIG9yIGNvbnZlbnRpb25zLiBUaGlzICBwcm92aXNpb24gZW5hYmxlcyB0aGUgQ2VudHJhbCBnb3Zlcm5tZW50IHRvIGZ1bGZpbCBpdHMgaW50ZXJuYXRpb25hbCBvYmxpZ2F0aW9ucyBhbmQgY29tbWl0bWVudHMgIEtub3dsZWRnZSBCYXNlOiAgT3RoZXIgcHJvdmlzaW9uIHdoZW4gQ2VudHJlIGNhbiBtYWtlIGxhd3Mgb24gU3RhdGUgTGlzdHM6ICAxKSBXaGVuIFJhanlhIFNhYmhhIFBhc3NlcyBhIFJlc29sdXRpb24tIElmIHRoZSBSYWp5YSBTYWJoYSBkZWNsYXJlcyB0aGF0IGl0IGlzIG5lY2Vzc2FyeSBpbiB0aGUgbmF0aW9uYWwgIGludGVyZXN0IHRoYXQgUGFybGlhbWVudCBzaG91bGQgbWFrZSBsYXdzIHdpdGggcmVzcGVjdCB0byBnb29kcyBhbmQgc2VydmljZXMgdGF4LiBTdWNoIGEgcmVzb2x1dGlvbiAgbXVzdCBiZSBzdXBwb3J0ZWQgYnkgdHdvLXRoaXJkcyBvZiB0aGUgbWVtYmVycyBwcmVzZW50IGFuZCB2b3RpbmcuICBTb3VyY2U6IExheG1pa2FudGgsIGNoYXB0ZXIgMTIsIFBhcmxpYW1hbnRhcnkgc3lzdGVtICAgIG9mIDIzIHx8fCAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only two ",
        "option2" : "Only three ",
        "option3" : "Only four ",
        "option4" : "All five  "
      }
    },
    {
      "index" : 36,
      "question" : "Which of the following are the reasons for the inclusion of emergency provisions in the Indian constitution? 1.  To safeguard the sovereignty, unity, integrity and security of the country. 2.  To vest powers to centre so as to handle special situations. 3.  To prevent maladministration or corruption in the country. 4.  To prevent internal subversion when the government is deliberately acting against the constitution. Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM2",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVGhlIHJhdGlvbmFsZSBiZWhpbmQgdGhlIGluY2x1c2lvbiBvZiBlbWVyZ2VuY3kgcHJvdmlzaW9ucyBpbiB0aGUgSW5kaWFuICBjb25zdGl0dXRpb24gd2FzIHRvIHNhZmVndWFyZCB0aGUgc292ZXJlaWdudHksIHVuaXR5LCBpbnRlZ3JpdHkgYW5kIHNlY3VyaXR5IG9mIHRoZSBjb3VudHJ5LCB0aGUgZGVtb2NyYXRpYyAgcG9saXRpY2FsIHN5c3RlbSBhbmQgdGhlIENvbnN0aXR1dGlvbiBpdHNlbGYuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJdCBhbGxvd3MgdGhlIENlbnRyZSB0byBhc3N1bWUgd2lkZSBwb3dlcnMgc28gYXMgdG8gaGFuZGxlIHNwZWNpYWwgc2l0dWF0aW9ucy4gIEluIGVtZXJnZW5jeSwgdGhlIENlbnRyZSBjYW4gdGFrZSBmdWxsIGxlZ2lzbGF0aXZlIGFuZCBleGVjdXRpdmUgY29udHJvbCBvZiBhbnkgc3RhdGUuIEVtZXJnZW5jeSBwcm92aXNpb24gIGFsc28gYWxsb3dzIHRoZSBDZW50cmUgdG8gY3VydGFpbCBvciBzdXNwZW5kIGZyZWVkb20gb2YgdGhlIGNpdGl6ZW5zIGlmIG5lZWQgYmUuICBTdGF0ZW1lbnQgMyBpcyBpbmNvcnJlY3QuIFRoZSBwcm92aXNpb25zIHdlcmUgbm90IGluY2x1ZGVkIGluIHRoZSBDb25zdGl0dXRpb24gdG8gcHJldmVudCAgbWFsYWRtaW5pc3RyYXRpb24gb3IgY29ycnVwdGlvbiBpbiB0aGUgY291bnRyeSBidXQgdG8gcHJldmVudCB0aGUgYnJlYWtkb3duIG9mIGNvbnN0aXR1dGlvbmFsICBtYWNoaW5lcnkuIEluIGZhY3QsIGNvcnJ1cHRpb24gaXMgbm90IG9uZSBvZiB0aGUgY3JpdGVyaWEgdG8gaW1wb3NlIGVtZXJnZW5jeSBpbiB0aGUgY291bnRyeS4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3QuIEl0IHdhcyBpbmNsdWRlZCB0byBwcmV2ZW50IGludGVybmFsIHN1YnZlcnNpb24gd2hlbiB0aGUgZ292ZXJubWVudCBpcyAgZGVsaWJlcmF0ZWx5IGFjdGluZyBhZ2FpbnN0IHRoZSBjb25zdGl0dXRpb24uICBTb3VyY2U6IExheG1pa2FudGggNnRoIGVkaXRpb24gQ2hhcHRlci0zIFNhbGllbnQgZmVhdHVyZXMgb2YgdGhlIGNvbnN0aXR1dGlvbiBwYWdlLTMuNiAgaHR0cDovL3d3dy5sZWdhbHNlcnZpY2VzaW5kaWEuY29tL2FydGljbGUvMTc2OS9FbWVyZ2VuY3ktUHJvdmlzaW9uczotRWZmZWN0cy1hbmQtSW1wYWN0Li5odG1sICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2 only ",
        "option2" : "1, 2 and 4 only ",
        "option3" : "1, 3 and 4 only ",
        "option4" : "2 and 3 only     ||| "
      }
    },
    {
      "index" : 37,
      "question" : "With reference to the Parliament's power to acquire foreign territories, consider the following statements: 1.  Article 2 of the Constitution allows the admission of new states that are not part of the Union of India. 2.  India has never acquired any foreign territory since her independence from Britain in 1947. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM3",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgQXJ0aWNsZSAyIGVtcG93ZXJzIHRoZSBQYXJsaWFtZW50IHRvICdhZG1pdCBpbnRvIHRoZSBVbmlvbiBvZiBJbmRpYSwgb3IgZXN0YWJsaXNoLCBuZXcgc3RhdGVzIG9uIHN1Y2ggIHRlcm1zIGFuZCBjb25kaXRpb25zIGFzIGl0IHRoaW5rcyBmaXQnLiBUaHVzLCBBcnRpY2xlIDIgZ3JhbnRzIHR3byBwb3dlcnMgdG8gdGhlIFBhcmxpYW1lbnQ6ICAgMSkgdGhlIHBvd2VyIHRvIGFkbWl0IGludG8gdGhlIFVuaW9uIG9mIEluZGlhIG5ldyBzdGF0ZXM7IGFuZCAgIDIpIHRoZSBwb3dlciB0byBlc3RhYmxpc2ggbmV3IHN0YXRlcy4gICBUaGUgZmlyc3QgcmVmZXJzIHRvIHRoZSBhZG1pc3Npb24gb2Ygc3RhdGVzIHdoaWNoIGFyZSBhbHJlYWR5IGluIGV4aXN0ZW5jZSwgd2hpbGUgdGhlIHNlY29uZCByZWZlcnMgdG8gdGhlICBlc3RhYmxpc2htZW50IG9mIHN0YXRlcyB3aGljaCB3ZXJlIG5vdCBpbiBleGlzdGVuY2UgYmVmb3JlLiAgIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IE5vdGFibHksIEFydGljbGUgMiByZWxhdGVzIHRvIHRoZSBhZG1pc3Npb24gb3IgZXN0YWJsaXNobWVudCBvZiBuZXcgc3RhdGVzIHRoYXQgYXJlICBub3QgcGFydCBvZiB0aGUgVW5pb24gb2YgSW5kaWEuIEFydGljbGUgMywgb24gdGhlIG90aGVyIGhhbmQsIHJlbGF0ZXMgdG8gdGhlIGZvcm1hdGlvbiBvZiBvciBjaGFuZ2VzIGluIHRoZSAgZXhpc3Rpbmcgc3RhdGVzIG9mIHRoZSBVbmlvbiBvZiBJbmRpYS4gSW4gb3RoZXIgd29yZHMsIEFydGljbGUgMyBkZWFscyB3aXRoIHRoZSBpbnRlcm5hbCByZS1hZGp1c3RtZW50IGludGVyICBzZSBvZiB0aGUgdGVycml0b3JpZXMgb2YgdGhlIGNvbnN0aXR1ZW50IHN0YXRlcyBvZiB0aGUgVW5pb24gb2YgSW5kaWEuICBTdGF0ZW1lbnQgMiBpcyBpbmNvcnJlY3Q6IEJlaW5nIGEgc292ZXJlaWduIHN0YXRlLCBJbmRpYSBjYW4gYWNxdWlyZSBmb3JlaWduIHRlcnJpdG9yaWVzIGFjY29yZGluZyB0byB0aGUgIG1vZGVzIHJlY29nbml6ZWQgYnkgaW50ZXJuYXRpb25hbCBsYXcsIGkuZS4sIGNlc3Npb24gKGZvbGxvd2luZyB0cmVhdHksIHB1cmNoYXNlLCBnaWZ0LCBsZWFzZSBvciBwbGViaXNjaXRlKSwgIG9jY3VwYXRpb24gKGhpdGhlcnRvIHVub2NjdXBpZWQgYnkgYSByZWNvZ25pc2VkIHJ1bGVyKSwgY29ucXVlc3Qgb3Igc3VianVnYXRpb24uICAgRm9yIGV4YW1wbGUsIEluZGlhIGFjcXVpcmVkIHNldmVyYWwgZm9yZWlnbiB0ZXJyaXRvcmllcyBzdWNoIGFzIERhZHJhIGFuZCBOYWdhciBIYXZlbGk7IEdvYSwgRGFtYW4gIGFuZCBEaXU7IFB1ZHVjaGVycnk7IGFuZCBTaWtraW0gc2luY2UgdGhlIGNvbW1lbmNlbWVudCBvZiB0aGUgQ29uc3RpdHV0aW9uLiAgICBTb3VyY2U6ICAgLCBNLiBMYXhtaWthbnQgUERGIDZ0aCBFZGl0aW9uICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2    "
      }
    },
    {
      "index" : 38,
      "question" : "To protect the interest of States in the financial matters, which of the following provisions were laid down by the Constitution of India? 1. A bill which varies any tax in which states are interested can be introduced in the Parliament only after consulting the State governments. 2. The Parliament can alter the definition of agricultural income only on the recommendation of the President. 3. A bill introduced in Parliament affecting the vertical distribution of taxes between centre and states can be introduced only on the recommendation of the Finance commission. 4. A bill that imposes any surcharge on tax for the purpose of the centre can be introduced in the Parliament only on the recommendation of the President.  Select the correct answer using the code given below: ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM4",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUbyBwcm90ZWN0IHRoZSBpbnRlcmVzdCBvZiBzdGF0ZXMgaW4gdGhlIGZpbmFuY2lhbCBtYXR0ZXJzLCB0aGUgQ29uc3RpdHV0aW9uIGxheXMgZG93biB0aGF0IHRoZSBmb2xsb3dpbmcgIGJpbGxzIGNhbiBiZSBpbnRyb2R1Y2VkIGluIHRoZSBQYXJsaWFtZW50IG9ubHkgb24gdGhlIHJlY29tbWVuZGF0aW9uIG9mIHRoZSBQcmVzaWRlbnQ6ICAoLSlBIGJpbGwgd2hpY2ggaW1wb3NlcyBvciB2YXJpZXMgYW55IHRheCBvciBkdXR5IGluIHdoaWNoIHN0YXRlcyBhcmUgaW50ZXJlc3RlZDsgICgtKUEgYmlsbCB3aGljaCB2YXJpZXMgdGhlIG1lYW5pbmcgb2YgdGhlIGV4cHJlc3Npb24gJ2FncmljdWx0dXJhbCBpbmNvbWUnIGFzIGRlZmluZWQgZm9yIHRoZSBwdXJwb3NlcyBvZiAgdGhlIGVuYWN0bWVudHMgcmVsYXRpbmcgdG8gSW5kaWFuIGluY29tZSB0YXggICgtKUEgYmlsbCB3aGljaCBhZmZlY3RzIHRoZSBwcmluY2lwbGVzIG9uIHdoaWNoIG1vbmV5IGlzIGRpc3RyaWJ1dGFibGUgdG8gc3RhdGVzICAgKC0pQSBiaWxsIHdoaWNoIGltcG9zZXMgYW55IHN1cmNoYXJnZSBvbiBhbnkgc3BlY2lmaWVkIHRheCBvciBkdXR5IGZvciB0aGUgcHVycG9zZSBvZiB0aGUgQ2VudHJlICAgIG9mIDIzIHx8fCAgIFN0YXRlbWVudCAxIGlzIGluY29ycmVjdDogQSBiaWxsIHdoaWNoIHZhcmllcyBhbnkgdGF4IGluIHdoaWNoIHN0YXRlcyBhcmUgaW50ZXJlc3RlZCBzaGFsbCBiZSBpbnRyb2R1Y2VkIGluICB0aGUgUGFybGlhbWVudCBvbmx5IG9uIHRoZSByZWNvbW1lbmRhdGlvbiBvZiB0aGUgUHJlc2lkZW50IChub3QgYWZ0ZXIgY29uc3VsdGF0aW9uIHdpdGggc3RhdGUgIGdvdmVybm1lbnRzKS4gICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBBIGJpbGwgd2hpY2ggcHJvcG9zZXMgdG8gYWx0ZXIgdGhlIG1lYW5pbmcgb2YgYWdyaWN1bHR1cmUgaW5jb21lIG11c3QgYmUgIGludHJvZHVjZWQgaW4gdGhlIFBhcmxpYW1lbnQgb24gdGhlIHJlY29tbWVuZGF0aW9uIG9mIHRoZSBQcmVzaWRlbnQuICAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBUaGUgYmlsbCBhZmZlY3RpbmcgdGhlIHByaW5jaXBsZXMgb24gd2hpY2ggbW9uZXkgaXMgZGlzdHJpYnV0ZWQgYmV0d2VlbiBjZW50cmUgIGFuZCBzdGF0ZXMgbmVlZCBub3QgdG8gYmUgcmVjb21tZW5kZWQgYnkgdGhlIEZpbmFuY2UgQ29tbWlzc2lvbiwgcmF0aGVyIHN1Y2ggYmlsbCBjYW4gYmUgaW50cm9kdWNlZCAgaW4gdGhlIFBhcmxpYW1lbnQgb25seSBhZnRlciB0aGUgcmVjb21tZW5kYXRpb24gb2YgdGhlIFByZXNpZGVudC4gICBTdGF0ZW1lbnQgNCBpcyBjb3JyZWN0OiBJdCBpcyB0cnVlIHRoYXQgdGhlIGJpbGwgd2hpY2ggaW1wb3NlcyBhbnkgc3VyY2hhcmdlIG9uIHRheCBmb3IgdGhlIHB1cnBvc2Ugb2YgdGhlICBjZW50cmUgY2FuIGJlIGludHJvZHVjZWQgaW4gdGhlIFBhcmxpYW1lbnQgb25seSBvbiB0aGUgcmVjb21tZW5kYXRpb24gb2YgdGhlIFByZXNpZGVudC4gQXMgdGhlICBwcm9jZWVkcyBvZiBzdXJjaGFyZ2UgYXJlIG5vdCBzaGFyZWQgd2l0aCB0aGUgc3RhdGVzLCBzbyB0aGUgZGl2aXNpYmxlIHBvb2wgb2YgZmluYW5jZSBmcm9tIGNlbnRyZSB0byAgc3RhdGVzIHdvdWxkIGJlIGFmZmVjdGVkLiBUaHVzLCBzdGF0ZXMgd291bGQgYmUgZ2V0dGluZyBsZXNzZXIgc2hhcmUgbmVnYXRpdmVseSBpbXBhY3RpbmcgdGhlaXIgIGZpbmFuY2VzLiAgU291cmNlOiBMYXhtaWthbnRoIC0gQ2VudHJlIFN0YXRlIFJlbGF0aW9ucyAoUHJvdGVjdGlvbiBvZiBTdGF0ZXMnIGludGVyZXN0cykgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 4 only ",
        "option2" : "2, 3 and 4 only ",
        "option3" : "2 and 4 only ",
        "option4" : "1, 2, 3 and 4   "
      }
    },
    {
      "index" : 39,
      "question" : "Consider the following statements regarding relations between centre and states during a Financial Emergency: 1.  All money bills or other financial bills of the states can be reserved for the consideration of President. 2.  The President may declare a reduction in the salaries of persons serving in the states. 3.  The President can reduce the salary of judges of the High Courts. How many of the above statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM5",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdDogRHVyaW5nIGEgZmluYW5jaWFsIGVtZXJnZW5jeSB0aGUgY2VudHJlIGNhbiBkaXJlY3QgdGhlIHN0YXRlIHRvIHJlc2VydmUgYWxsICBtb25leSBiaWxscyBvciBvdGhlciBmaW5hbmNpYWwgYmlsbHMgZm9yIHRoZSBjb25zaWRlcmF0aW9uIG9mIHRoZSBQcmVzaWRlbnQgYWZ0ZXIgYmVpbmcgcGFzc2VkIGJ5IHRoZSBTdGF0ZSAgTGVnaXNsYXR1cmUuICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0OiBUaGUgUHJlc2lkZW50LCBtYXkgaXNzdWUgZGlyZWN0aW9uLCB0byByZWR1Y2UgdGhlIHNhbGFyaWVzIG9yIHRoZSBhbGxvd2FuY2VzIG9mIGFsbCAgb3IgYW55IGNsYXNzIG9mIHBlb3BsZSBzZXJ2aW5nIGluIHRoZSBzdGF0ZS4gVGhlIFByZXNpZGVudCBtYXkgYWxzbyBpc3N1ZSBkaXJlY3Rpb25zIGZvciB0aGUgcmVkdWN0aW9uIG9mICBzYWxhcmllcyBhbmQgYWxsb3dhbmNlcyBvZiBhbGwgb3IgYW55IGNsYXNzIG9mIHBlcnNvbnMgc2VydmluZyB0aGUgVW5pb24uICBTdGF0ZW1lbnQgMyBpcyBjb3JyZWN0OiBUaGUgUHJlc2lkZW50IGhhcyB0aGUgcG93ZXIgdG8gcmVkdWNlIHNhbGFyaWVzIG9mIGp1ZGdlcyB3b3JraW5nIG5vdCBvbmx5IGluIHRoZSAgU3VwcmVtZSBDb3VydCwgYnV0IGFsc28gdGhlIGp1ZGdlcyB3b3JraW5nIGluIHRoZSBIaWdoIENvdXJ0cy4gIFNvdXJjZTogUG9saXR5IGJ5IExheG1pa2FudGgsIDV0aCBlZGl0aW9uLCBDaC0xNiAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 40,
      "question" : "Consider the following pairs with respect to reorganisation of states: Commission Recommendations 1. Dhar Commission Reorganisation of states on administrative convenience 2. JVP Committee Rejected states' reorganisation on language basis 3. Fazl Ali Commission Reorganisation of states on the basis of one language one state. How many of the pairs given above are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQw",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBUaGUgaW50ZWdyYXRpb24gb2YgcHJpbmNlbHkgc3RhdGVzIGFmdGVyIEluZGlhJ3MgaW5kZXBlbmRlbmNlIHdpdGggdGhlIHJlc3Qgb2YgSW5kaWEgd2FzIGFuIGFkIGhvYyAgYXJyYW5nZW1lbnQuIFRoZXJlIGhhZCBiZWVuIGRlbWFuZHMgZnJvbSBkaWZmZXJlbnQgcmVnaW9ucyBmb3IgcmVvcmdhbml6YXRpb24gb2Ygc3RhdGVzIG9uIGEgbGluZ3Vpc3RpYyAgYmFzaXMuIENvbnNlcXVlbnRseSwgdGhyZWUgbWFpbiBjb21taXR0ZWVzL2NvbW1pc3Npb25zIHdlcmUgc2V0IHVwIHRvIGRlYWwgd2l0aCB0aGUgcXVlc3Rpb24gb2YgIHJlb3JnYW5pemF0aW9uIG9mIHN0YXRlcyBvbiBhIGxpbmd1aXN0aWMgYmFzaXMuICBQYWlyIDEgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBMaW5ndWlzdGljIFByb3ZpbmNlcyBDb21taXNzaW9uIHVuZGVyIHRoZSBjaGFpcm1hbnNoaXAgb2YgUy5LLiBEaGFyICB3YXMgYXBwb2ludGVkIGJ5IHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIGluIEp1bmUgMTk0OCB0byBleGFtaW5lIHRoZSBmZWFzaWJpbGl0eSBvZiByZW9yZ2FuaXNhdGlvbiBvZiAgc3RhdGVzLiBUaGUgY29tbWlzc2lvbiBzdWJtaXR0ZWQgaXRzIHJlcG9ydCBpbiBEZWNlbWJlciwgMTk0OCwgYW5kIHJlY29tbWVuZGVkIHRoZSByZW9yZ2FuaXNhdGlvbiBvZiAgc3RhdGVzIG9uIHRoZSBiYXNpcyBvZiBhZG1pbmlzdHJhdGl2ZSBjb252ZW5pZW5jZSByYXRoZXIgdGhhbiBsaW5ndWlzdGljIGZhY3RvciAoYW5kIG5vdCB2aWNlLXZlcnNhKS4gICBQYWlyIDIgaXMgY29ycmVjdGx5IG1hdGNoZWQuIFRoZSBKVlAgQ29tbWl0dGVlIHdhcyBhcHBvaW50ZWQgaW4gRGVjZW1iZXIsIDE5NDgsIHRvIGV4YW1pbmUgdGhlIHdob2xlICBxdWVzdGlvbiBvZiBzdGF0ZXMgcmVvcmdhbmlzYXRpb24gYWZyZXNoLiBJdCBjb25zaXN0ZWQgb2YgSmF3YWhhcmxhbCBOZWhydSwgVmFsbGFoYmhhaSBQYXRlbCBhbmQgUGF0dGFiaGkgIFNpdGFyYW1heXlhLiBJdCBmb3JtYWxseSByZWplY3RlZCBsYW5ndWFnZSBhcyB0aGUgYmFzaXMgZm9yIHJlb3JnYW5pc2F0aW9uIG9mIHN0YXRlcy4gIFBhaXIgMyBpcyBpbmNvcnJlY3RseSBtYXRjaGVkLiBGYXpsIEFsaSBDb21taXNzaW9uLCBhbHNvIGtub3duIGFzIFN0YXRlcyBSZW9yZ2FuaXNhdGlvbiBDb21taXNzaW9uLCAgd2FzIGFwcG9pbnRlZCBieSB0aGUgR292ZXJubWVudCBvZiBJbmRpYSBpbiBEZWNlbWJlciwgMTk1My4gSXQgYnJvYWRseSBhY2NlcHRlZCBsYW5ndWFnZSBhcyB0aGUgYmFzaXMgIG9mIHJlb3JnYW5pc2F0aW9uIG9mIHN0YXRlcy4gQnV0LCBpdCByZWplY3RlZCB0aGUgdGhlb3J5IG9mICdvbmUgbGFuZ3VhZ2Utb25lIHN0YXRlJy4gSXQgaWRlbnRpZmllZCBmb3VyIG1ham9yICBmYWN0b3JzIHRoYXQgY2FuIGJlIHRha2VuIGludG8gYWNjb3VudCBpbiBhbnkgc2NoZW1lIG9mIHJlb3JnYW5pc2F0aW9uIG9mIHN0YXRlczogIDEpIFByZXNlcnZhdGlvbiBhbmQgc3RyZW5ndGhlbmluZyBvZiB0aGUgdW5pdHkgYW5kIHNlY3VyaXR5IG9mIHRoZSBjb3VudHJ5LiAgICBvZiAyMyB8fHwgICAyKSBMaW5ndWlzdGljIGFuZCBjdWx0dXJhbCBob21vZ2VuZWl0eS4gIDMpIEZpbmFuY2lhbCwgZWNvbm9taWMgYW5kIGFkbWluaXN0cmF0aXZlIGNvbnNpZGVyYXRpb25zLiAgNCkgUGxhbm5pbmcgYW5kIHByb21vdGlvbiBvZiB0aGUgd2VsZmFyZSBvZiB0aGUgcGVvcGxlIGluIGVhY2ggc3RhdGUgYXMgd2VsbCBhcyBvZiB0aGUgbmF0aW9uIGFzIGEgd2hvbGUuICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIDZ0aCBFZGl0aW9uLCBDaGFwdGVyLTUgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 41,
      "question" : "In the context of Indian polity, which one of the following is the most appropriate idea behind Indian Socialism? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQx",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBBIFByZWFtYmxlIHNlcnZlcyBhcyBhbiBpbnRyb2R1Y3Rpb24gdG8gdGhlIGNvbnN0aXR1dGlvbiBhbmQgY29udGFpbnMgYmFzaWMgcHJpbmNpcGxlcyBhbmQgZ29hbHMgb2YgdGhlICBDb25zdGl0dXRpb24uIFRoZSB3b3JkIFNvY2lhbGlzdCB3YXMgaW5zZXJ0ZWQgaW50byB0aGUgcHJlYW1ibGUgb2YgdGhlIEluZGlhbiBjb25zdGl0dXRpb24gYnkgdGhlIDQybmQgIENvbnN0aXR1dGlvbmFsIEFtZW5kbWVudCBBY3QgaW4gMTk3NiBkdXJpbmcgdGhlIHBlcmlvZCBvZiBlbWVyZ2VuY3kuICAgT3B0aW9uIGEgaXMgaW5jb3JyZWN0OiBVbmxpa2UgSW5kaWFuIHNvY2lhbGlzbSwgU3RhdGUgU29jaWFsaXNtIGFsc28ga25vd24gYXMgQ29tbXVuaXN0aWMgc29jaWFsaXNtICBpbnZvbHZlcyB0aGUgbmF0aW9uYWxpc2F0aW9uIG9mIGFsbCBtZWFucyBvZiBwcm9kdWN0aW9uIGFuZCBhYm9saXRpb24gb2YgcHJpdmF0ZSBwcm9wZXJ0eS4gICBPcHRpb24gYiBpcyBpbmNvcnJlY3Q6IE1hcnhpc20gU29jaWFsaXNtIGJlbGlldmVzIHRoYXQgZmFjdG9ycyBvZiBwcm9kdWN0aW9uIHNob3VsZCBiZSBvd25lZCBhbmQgcnVuICBieSB3b3JrZXJzIHRocm91Z2ggYSB3ZWxsLWRldmVsb3BlZCBhbmQgY2VudHJhbGlzZWQgc3RydWN0dXJlLiBNYXJ4aXN0IHRoZW9yaWVzIHdlcmUgaW5mbHVlbnRpYWwgaW4gdGhlICBkZXZlbG9wbWVudCBvZiBzb2NpYWxpc20sIHdoaWNoIHJlcXVpcmVzIHNoYXJlZCBvd25lcnNoaXAgYnkgd29ya2VycyBvZiB0aGUgbWVhbnMgb2YgcHJvZHVjdGlvbi4gIE9wdGlvbiBjIGlzIGNvcnJlY3Q6IEluZGlhbiBicmFuZCBvZiBzb2NpYWxpc20gaXMgYSAnZGVtb2NyYXRpYyBzb2NpYWxpc20nIGFuZCBub3QgYSAnY29tbXVuaXN0aWMgIHNvY2lhbGlzbScgKGFsc28ga25vd24gYXMgJ3N0YXRlIHNvY2lhbGlzbScpLiBDb21tdW5pc3RpYyBTb2NpYWxpc20gaW52b2x2ZXMgdGhlIG5hdGlvbmFsaXNhdGlvbiBvZiBhbGwgIG1lYW5zIG9mIHByb2R1Y3Rpb24gYW5kIGRpc3RyaWJ1dGlvbiBhbmQgdGhlIGFib2xpdGlvbiBvZiBwcml2YXRlIHByb3BlcnR5LiBEZW1vY3JhdGljIHNvY2lhbGlzbSwgb24gdGhlICBvdGhlciBoYW5kLCBob2xkcyBmYWl0aCBpbiBhICdtaXhlZCBlY29ub215JyB3aGVyZSBib3RoIHB1YmxpYyBhbmQgcHJpdmF0ZSBzZWN0b3JzIGNvLWV4aXN0IHNpZGUgYnkgIHNpZGUuIEFzIHRoZSBTdXByZW1lIENvdXJ0IHNheXMsICdEZW1vY3JhdGljIHNvY2lhbGlzbSBhaW1zIHRvIGVuZCBwb3ZlcnR5LCBpZ25vcmFuY2UsIGRpc2Vhc2UgYW5kICBpbmVxdWFsaXR5IG9mIG9wcG9ydHVuaXR5LiAgT3B0aW9uIGQgaXMgaW5jb3JyZWN0OiBFbnN1cmluZyBlcXVpdGFibGUgZWNvbm9taWMgZ3Jvd3RoIHRocm91Z2ggZXhjbHVzaXZlIHN0YXRlJ3MgcGxhbm5pbmcgaXMgbm90IGFuICBpZGVhIGJlaGluZCBJbmRpYW4gc29jaWFsaXNtLiBJbmRpYW4gc29jaWFsaXNtIHByb21vdGVzIHRoZSBjb25jZXB0IG9mIE1peGVkIGVjb25vbXkgaW4gd2hpY2ggcHJpdmF0ZSAgcGxheWVycyBhbHNvIGhhdmUgYXV0b25vbXkgdG8gZGV2aXNlIHRoZWlyIG93biBwbGFuIGFuZCBjb250cmlidXRlIHRvIHRoZSBlY29ub21pYyBkZXZlbG9wbWVudCBvZiBhICBjb3VudHJ5LCB0aHVzIHRoaXMgc3RhdGVtZW50IGlzIGluY29ycmVjdC4gIFNvdXJjZTogTGF4bWlrYW50aCAtIFByZWFtYmxlIG9mIHRoZSBjb25zdGl0dXRpb24gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " Nationalisation of all the means of production. ",
        "option2" : " Ownership of all the means of production by  workers. ",
        "option3" : " Coexistence of both public and private  sectors. ",
        "option4" : " Economic planning exclusively by the State to  ensure inclusive growth of a country.     ||| "
      }
    },
    {
      "index" : 42,
      "question" : "With reference to the 'Objectives Resolution', introduced in the first session of the Constituent Assembly, consider the following statements: 1.  It declared India as an Independent Sovereign Republic. 2.  It provides for adequate safeguards for minorities and depressed classes. 3.  It guaranteed to people of India, the equality of status of opportunity. How many of the above given statements are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQy",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlICdPYmplY3RpdmVzIFJlc29sdXRpb24nIHdhcyBtb3ZlZCBieSBKYXdhaGFybGFsIE5laHJ1IGluIHRoZSBDb25zdGl0dWVudCBBc3NlbWJseSBpbiBEZWNlbWJlciwgIDE5NDYuIEl0IGxhaWQgZG93biB0aGUgZnVuZGFtZW50YWxzIGFuZCBwaGlsb3NvcGh5IG9mIHRoZSBjb25zdGl0dXRpb25hbCBzdHJ1Y3R1cmUuICBUaGlzIFJlc29sdXRpb24gd2FzIHVuYW5pbW91c2x5IGFkb3B0ZWQgYnkgdGhlIEFzc2VtYmx5IG9uIEphbnVhcnkgMjIsIDE5NDcuIEl0cyBtb2RpZmllZCB2ZXJzaW9uIGZvcm1zICB0aGUgUHJlYW1ibGUgb2YgdGhlIHByZXNlbnQgQ29uc3RpdHV0aW9uLiAgU3RhdGVtZW50IDEgaXMgY29ycmVjdC4gVW5kZXIgdGhlIE9iamVjdGl2ZXMgcmVzb2x1dGlvbiwgdGhlIENvbnN0aXR1ZW50IEFzc2VtYmx5IGRlY2xhcmVkIGl0cyBmaXJtIGFuZCAgc29sZW1uIHJlc29sdmUgdG8gcHJvY2xhaW0gSW5kaWEgYXMgYW4gSW5kZXBlbmRlbnQgU292ZXJlaWduIFJlcHVibGljIGFuZCB0byBkcmF3IHVwIGZvciBoZXIgZnV0dXJlICBnb3Zlcm5hbmNlIGEgY29uc3RpdHV0aW9uICBTdGF0ZW1lbnQgMiBpcyBjb3JyZWN0LiBJdCBwcm92aWRlcyB0aGF0IGFkZXF1YXRlIHNhZmVndWFyZHMgc2hhbGwgYmUgcHJvdmlkZWQgZm9yIG1pbm9yaXRpZXMsIGJhY2t3YXJkICBhbmQgdHJpYmFsIGFyZWFzLCBhbmQgZGVwcmVzc2VkIGFuZCBvdGhlciBiYWNrd2FyZCBjbGFzc2VzLiAgU3RhdGVtZW50IDMgaXMgY29ycmVjdC4gSXQgZ3VhcmFudGVlZCBhbmQgc2VjdXJlZCB0byBhbGwgdGhlIHBlb3BsZSBvZiBJbmRpYSBqdXN0aWNlLCBzb2NpYWwsIGVjb25vbWljIGFuZCAgcG9saXRpY2FsOyBlcXVhbGl0eSBvZiBzdGF0dXMgb2Ygb3Bwb3J0dW5pdHksIGFuZCBiZWZvcmUgdGhlIGxhdzsgZnJlZWRvbSBvZiB0aG91Z2h0LCBleHByZXNzaW9uLCBiZWxpZWYsICBmYWl0aCwgd29yc2hpcCwgdm9jYXRpb24sIGFzc29jaWF0aW9uIGFuZCBhY3Rpb24sIHN1YmplY3QgdG8gbGF3IGFuZCBwdWJsaWMgbW9yYWxpdHkuICBTb3VyY2U6IEluZGlhbiBQb2xpdHksIE0uIExheG1pa2FudGgsIENoYXB0ZXItIDIgICAgICAgb2YgMjMgfHx8ICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 43,
      "question" : "Consider the following provisions of the Indian Constitution: 1. Citizenship 2. Provisional Parliament 3. Fundamental Rights  4. Directive Principles of State Policy  How many of the above-given provisions of the Indian constitution came into force on November 26, 1949, itself? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "IEV4cCkgT3B0aW9uIGIgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgVGhlIENvbnN0aXR1dGlvbiBhcyBhZG9wdGVkIG9uIE5vdmVtYmVyIDI2LCAxOTQ5LCBjb250YWluZWQgYSBQcmVhbWJsZSwgMzk1IEFydGljbGVzIGFuZCA4IFNjaGVkdWxlcy4gIFRoZSBQcmVhbWJsZSB3YXMgZW5hY3RlZCBhZnRlciB0aGUgZW50aXJlIENvbnN0aXR1dGlvbiB3YXMgYWxyZWFkeSBlbmFjdGVkLiAgT3B0aW9ucyAxIGFuZCAyIGFyZSBjb3JyZWN0LiBTb21lIHByb3Zpc2lvbnMgb2YgdGhlIENvbnN0aXR1dGlvbiBwZXJ0YWluaW5nIHRvIGNpdGl6ZW5zaGlwLCBlbGVjdGlvbnMsICBwcm92aXNpb25hbCBwYXJsaWFtZW50LCB0ZW1wb3JhcnkgYW5kIHRyYW5zaXRpb25hbCBwcm92aXNpb25zLCBhbmQgc2hvcnQgdGl0bGUgY29udGFpbmVkIGluIEFydGljbGVzIDUsIDYsIDcsICA4LCA5LCA2MCwgMzI0LCAzNjYsIDM2NywgMzc5LCAzODAsIDM4OCwgMzkxLCAzOTIgYW5kIDM5MyBjYW1lIGludG8gZm9yY2Ugb24gTm92ZW1iZXIgMjYsIDE5NDksIGl0c2VsZi4gIE9wdGlvbnMgMyBhbmQgNCBhcmUgaW5jb3JyZWN0LiBNb3N0IG9mIHRoZSBwcm92aXNpb25zIG9mIHRoZSBDb25zdGl0dXRpb24sIGluY2x1ZGluZyBGdW5kYW1lbnRhbCBSaWdodHMgIGFuZCBEaXJlY3RpdmUgUHJpbmNpcGxlcyBvZiBTdGF0ZSBQb2xpY3ksIGNhbWUgaW50byBmb3JjZSBvbiBKYW51YXJ5IDI2LCAxOTUwLiBUaGlzIGRheSBpcyByZWZlcnJlZCB0byBpbiAgdGhlIENvbnN0aXR1dGlvbiBhcyB0aGUgJ2RhdGUgb2YgaXRzIGNvbW1lbmNlbWVudCcgYW5kIGNlbGVicmF0ZWQgYXMgUmVwdWJsaWMgRGF5LiBKYW51YXJ5IDI2IHdhcyAgc3BlY2lmaWNhbGx5IGNob3NlbiBhcyB0aGUgJ2RhdGUgb2YgY29tbWVuY2VtZW50JyBiZWNhdXNlIGl0IHdhcyBvbiB0aGlzIGRheSBpbiAxOTMwIHRoYXQgUHVybmEgU3dhcmFqICBkYXkgd2FzIGNlbGVicmF0ZWQsIGZvbGxvd2luZyB0aGUgcmVzb2x1dGlvbiBvZiB0aGUgTGFob3JlIFNlc3Npb24gKERlY2VtYmVyIDE5MjkpIG9mIHRoZSBDb25ncmVzcy4gIFNvdXJjZTogIEluZGlhbiBwb2xpdHkgYnkgTSBMYXhtaWthbnRoIDZ0aCBlZGl0aW9uIHBkZi4gQ2hhcHRlciBuYW1lLSBtYWtpbmcgb2YgdGhlIGNvbnN0aXR1dGlvbi4gUGFnZSAgbm8tIDgxLiAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "Only three ",
        "option4" : "All four  "
      }
    },
    {
      "index" : 44,
      "question" : "With reference to non-official members in the legislative councils during colonial rule, consider the following statements: 1.  Indian Councils Act of 1861 provided that the Viceroy can nominate Indians as non-official members to his legislative council.  2.  Indian Councils Act of 1909 allowed the provincial legislative councils to have non-official majority. Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ0",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBTdGF0ZW1lbnQgMSBpcyBjb3JyZWN0LiBJbmRpYW4gQ291bmNpbHMgQWN0IG9mIDE4NjEgbWFkZSBhIGJlZ2lubmluZyBvZiB0aGUgcmVwcmVzZW50YXRpdmUgaW5zdGl0dXRpb25zIGJ5ICBhc3NvY2lhdGluZyBJbmRpYW5zIHdpdGggdGhlIGxhdy1tYWtpbmcgcHJvY2Vzcy4gSXQsIHByb3ZpZGVkIHRoYXQgdGhlIFZpY2Vyb3kgY2FuIG5vbWluYXRlIHNvbWUgIEluZGlhbnMgYXMgbm9uLW9mZmljaWFsIG1lbWJlcnMgb2YgaGlzIGV4cGFuZGVkIGNvdW5jaWwuIEluIDE4NjIsIExvcmQgQ2FubmluZywgdGhlIHRoZW4gVmljZXJveSwgIG5vbWluYXRlZCB0aHJlZSBJbmRpYW5zIHRvIGhpcyBsZWdpc2xhdGl2ZSBjb3VuY2lsLXRoZSBSYWphIG9mIEJlbmFyYXMsIHRoZSBNYWhhcmFqYSBvZiBQYXRpYWxhIGFuZCBTaXIgIERpbmthciBSYW8uICAgU3RhdGVtZW50IDIgaXMgY29ycmVjdC4gSW5kaWFuIENvdW5jaWxzIEFjdCBvZiAxODkyIGluY3JlYXNlZCB0aGUgbnVtYmVyIG9mIGFkZGl0aW9uYWwgKG5vbi1vZmZpY2lhbCkgIG1lbWJlcnMgaW4gdGhlIENlbnRyYWwgYW5kIHByb3ZpbmNpYWwgbGVnaXNsYXRpdmUgY291bmNpbHMsIGJ1dCBtYWludGFpbmVkIHRoZSBtYWpvcml0eSBvZiBvZmZpY2lhbCAgbWVtYmVycyBpbiB0aGVtLiAgSW5kaWFuIGNvdW5jaWxzIGFjdCAxOTA5IGFsbG93ZWQgdGhlIHByb3ZpbmNpYWwgbGVnaXNsYXRpdmUgY291bmNpbHMgdG8gaGF2ZSBub24tb2ZmaWNpYWwgbWFqb3JpdHkuICBTb3VyY2U6IExheG1pa2FudGggSW5kaWFuIHBvbGl0eSBjaGFwdGVyIDEgIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 only ",
        "option2" : "2 only ",
        "option3" : "Both 1 and 2 ",
        "option4" : "Neither 1 nor 2  "
      }
    },
    {
      "index" : 45,
      "question" : "Consider the following statements: 1. The Act dropped the title of Emperor of India from the royal titles of the King of England. 2. The Act ended the British rule in India and declared India as an independent and sovereign state. 3. The Act granted freedom to the Indian princely states either to join the Dominion of India or Dominion of Pakistan or to remain independent. How many of the above given statements are correct about the Indian Independence Act of 1947? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgT24gRmVicnVhcnkgMjAsIDE5NDcsIHRoZSBCcml0aXNoIFByaW1lIE1pbmlzdGVyIENsZW1lbnQgQXRsZWUgZGVjbGFyZWQgdGhhdCB0aGUgQnJpdGlzaCBydWxlIGluIEluZGlhICB3b3VsZCBlbmQgYnkgSnVuZSAzMCwxOTQ4OyBhZnRlciB3aGljaCB0aGUgcG93ZXIgd291bGQgYmUgdHJhbnNmZXJyZWQgdG8gcmVzcG9uc2libGUgSW5kaWFuIGhhbmRzLiBPbiAgSnVuZSAzLCAxOTQ3LCBMb3JkIE1vdW50YmF0dGVuLCB0aGUgdmljZXJveSBvZiBJbmRpYSwgcHV0IGZvcnRoIHRoZSBwYXJ0aXRpb24gcGxhbiwga25vd24gYXMgdGhlICBNb3VudGJhdHRlbiBQbGFuLiBUaGUgcGxhbiB3YXMgYWNjZXB0ZWQgYnkgdGhlIENvbmdyZXNzIGFuZCB0aGUgTXVzbGltIExlYWd1ZS4gSW1tZWRpYXRlIGVmZmVjdCB3YXMgIGdpdmVuIHRvIHRoZSBwbGFuIGJ5IGVuYWN0aW5nIHRoZSBJbmRpYW4gSW5kZXBlbmRlbmNlIEFjdC4gIFN0YXRlbWVudCAxIGlzIGNvcnJlY3Q6IFRoZSBhY3QgZHJvcHBlZCB0aGUgdGl0bGUgb2YgJ0VtcGVyb3Igb2YgSW5kaWEnIGZyb20gdGhlIHJveWFsIHRpdGxlcyBvZiB0aGUga2luZyAgb2YgRW5nbGFuZC4gSXQgcHJvY2xhaW1lZCB0aGUgbGFwc2Ugb2YgQnJpdGlzaCBwYXJhbW91bnRjeSBvdmVyIHRoZSBJbmRpYW4gcHJpbmNlbHkgc3RhdGVzIGFuZCB0cmVhdHkgIHJlbGF0aW9ucyB3aXRoIHRyaWJhbCBhcmVhcyBmcm9tIEF1Z3VzdCAxNSwxOTQ3LiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogVGhlIGFjdCBlbmRlZCB0aGUgQnJpdGlzaCBydWxlIGluIEluZGlhIGFuZCBkZWNsYXJlZCBJbmRpYSBhcyBhbiBpbmRlcGVuZGVudCBhbmQgIHNvdmVyZWlnbiBzdGF0ZS4gIFN0YXRlbWVudCAzIGlzIGNvcnJlY3Q6IFRoZSBhY3QgZ3JhbnRlZCBmcmVlZG9tIHRvIHRoZSBJbmRpYW4gcHJpbmNlbHkgc3RhdGVzIGVpdGhlciB0byBqb2luIHRoZSBEb21pbmlvbiAgb2YgSW5kaWEgb3IgRG9taW5pb24gb2YgUGFraXN0YW4gb3IgdG8gcmVtYWluIGluZGVwZW5kZW50LiAgS25vd2xlZGdlIEJhc2U6ICAgT3RoZXIgcHJvdmlzaW9ucyBvZiBJbmRpYW4gSW5kZXBlbmRlbmNlIEFjdCBvZiAxOTQ3OiAgICBvZiAyMyB8fHwgICAxKSBJdCBwcm92aWRlZCBmb3IgdGhlIHBhcnRpdGlvbiBvZiBJbmRpYSBhbmQgY3JlYXRpb24gb2YgdHdvIGluZGVwZW5kZW50IGRvbWluaW9ucyBvZiBJbmRpYSBhbmQgUGFraXN0YW4gIHdpdGggdGhlIHJpZ2h0IHRvIHNlY2VkZSBmcm9tIHRoZSBCcml0aXNoIENvbW1vbndlYWx0aC4gIDIpIEl0IGFib2xpc2hlZCB0aGUgb2ZmaWNlIG9mIHZpY2Vyb3kgYW5kIHByb3ZpZGVkLCBmb3IgZWFjaCBkb21pbmlvbiwgYSBnb3Zlcm5vci1nZW5lcmFsLCB3aG8gd2FzIHRvIGJlICBhcHBvaW50ZWQgYnkgdGhlIEJyaXRpc2ggS2luZyBvbiB0aGUgYWR2aWNlIG9mIHRoZSBkb21pbmlvbiBjYWJpbmV0LiBIaXMgTWFqZXN0eSdzIEdvdmVybm1lbnQgaW4gIEJyaXRhaW4gd2FzIHRvIGhhdmUgbm8gcmVzcG9uc2liaWxpdHkgd2l0aCByZXNwZWN0IHRvIHRoZSBHb3Zlcm5tZW50IG9mIEluZGlhIG9yIFBha2lzdGFuLiAgMykgSXQgZW1wb3dlcmVkIHRoZSBDb25zdGl0dWVudCBBc3NlbWJsaWVzIG9mIHRoZSB0d28gZG9taW5pb25zIHRvIGZyYW1lIGFuZCBhZG9wdCBhbnkgY29uc3RpdHV0aW9uICBmb3IgdGhlaXIgcmVzcGVjdGl2ZSBuYXRpb25zIGFuZCB0byByZXBlYWwgYW55IGFjdCBvZiB0aGUgQnJpdGlzaCBQYXJsaWFtZW50LCBpbmNsdWRpbmcgdGhlICBJbmRlcGVuZGVuY2UgYWN0IGl0c2VsZi4gIDQpIEl0IGVtcG93ZXJlZCB0aGUgQ29uc3RpdHVlbnQgQXNzZW1ibGllcyBvZiBib3RoIHRoZSBkb21pbmlvbnMgdG8gbGVnaXNsYXRlIGZvciB0aGVpciByZXNwZWN0aXZlICB0ZXJyaXRvcmllcyB0aWxsIHRoZSBuZXcgY29uc3RpdHV0aW9ucyB3ZXJlIGRyYWZ0ZWQgYW5kIGVuZm9yY2VkLiBObyBBY3Qgb2YgdGhlIEJyaXRpc2ggUGFybGlhbWVudCAgcGFzc2VkIGFmdGVyIEF1Z3VzdCAxNSwgMTk0NyB3YXMgdG8gZXh0ZW5kIHRvIGVpdGhlciBvZiB0aGUgbmV3IGRvbWluaW9ucyB1bmxlc3MgaXQgd2FzIGV4dGVuZGVkICB0aGVyZXRvIGJ5IGEgbGF3IG9mIHRoZSBsZWdpc2xhdHVyZSBvZiB0aGUgZG9taW5pb24uICBTb3VyY2U6ICBMYXhtaWthbnRoICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 46,
      "question" : "The Constitution of India follows the Principle of Integrated Judiciary, which means  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ2",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICAgT3B0aW9uIGEgaXMgY29ycmVjdDogSW50ZWdyYXRlZCBqdWRpY2lhcnkgbWVhbnMgdGhhdCBhIHNpbmdsZSBzeXN0ZW0gb2YgY291cnRzIGVuZm9yY2VzIGJvdGggdGhlIENlbnRyYWwgIGxhd3MgYXMgd2VsbCBhcyB0aGUgU3RhdGUgbGF3cy4gICAxKSBUaGUgSW5kaWFuIENvbnN0aXR1dGlvbiBoYXMgZXN0YWJsaXNoZWQgYW4gaW50ZWdyYXRlZCBqdWRpY2lhbCBzeXN0ZW0gd2l0aCB0aGUgU3VwcmVtZSBDb3VydCBhdCB0aGUgIHRvcCBhbmQgdGhlIHN0YXRlIGhpZ2ggY291cnRzIGJlbG93IGl0LiAgIDIpIFRoaXMgc2luZ2xlIHN5c3RlbSBvZiBjb3VydHMgZW5mb3JjZXMgYm90aCB0aGUgQ2VudHJhbCBsYXdzIGFzIHdlbGwgYXMgdGhlIHN0YXRlIGxhd3MuICAgSW4gVVMsIHRoZXJlIGlzIGEgZG91YmxlIHN5c3RlbSBvZiBjb3VydHMgd2hlcmVieSB0aGUgZmVkZXJhbCBsYXdzIGFyZSBlbmZvcmNlZCBieSB0aGUgZmVkZXJhbCBqdWRpY2lhcnkgIGFuZCB0aGUgc3RhdGUgbGF3cyBieSB0aGUgc3RhdGUganVkaWNpYXJ5LiAgIFNvdXJjZTogTGF4bWlrYW50aCBJbmRpYW4gcG9saXR5IDZ0aCBlZGl0aW9uIHBhZ2UgMzExIChQZGYpICAgTGF4bWlrYW50aCBJbmRpYW4gcG9saXR5IDZ0aCBlZGl0aW9uIHBhZ2UgNjExIChQZGYpICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " A single system of courts enforces both the  central as well as state laws.  ",
        "option2" : " The Supreme Court has power to punish for  contempt of lower courts.  ",
        "option3" : " All judges of courts in India are appointed by  the President of India.  ",
        "option4" : " The Supreme Court is the ultimate interpreter  of the Constitution.      ||| "
      }
    },
    {
      "index" : 47,
      "question" : "Consider the following pairs regarding the various types of instruments in Direct Democracy and their description:  Instrument Description 1. Referendum A procedure whereby a proposed legislation is referred to the electorate for settlement by their direct votes. 2. Initiative A method by means of which the people can propose a bill to the legislature for enactment. 3. Recall A method by means of which the voters can remove an officer before the expiry of his term. 4. Plebiscite A method of obtaining the opinion of people on any issue of public importance. How many of the above given pairs are correctly matched? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ3",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgRGVtb2NyYWN5IGlzIG9mIHR3byB0eXBlcy1kaXJlY3QgYW5kIGluZGlyZWN0LiBJbiBkaXJlY3QgZGVtb2NyYWN5LCB0aGUgcGVvcGxlIGV4ZXJjaXNlIHRoZWlyIHN1cHJlbWUgIHBvd2VyIGRpcmVjdGx5IGFzIGlzIHRoZSBjYXNlIGluIFN3aXR6ZXJsYW5kLiBUaGVyZSBhcmUgZm91ciBkZXZpY2VzIG9mIGRpcmVjdCBkZW1vY3JhY3ksIG5hbWVseSwgIFJlZmVyZW5kdW0sIEluaXRpYXRpdmUsIFJlY2FsbCBhbmQgUGxlYmlzY2l0ZS4gSW4gaW5kaXJlY3QgZGVtb2NyYWN5LCBvbiB0aGUgb3RoZXIgaGFuZCwgdGhlICByZXByZXNlbnRhdGl2ZXMgZWxlY3RlZCBieSB0aGUgcGVvcGxlIGV4ZXJjaXNlIHRoZSBzdXByZW1lIHBvd2VyIGFuZCB0aHVzIGNhcnJ5IG9uIHRoZSBnb3Zlcm5tZW50IGFuZCAgbWFrZSB0aGUgbGF3cy4gVGhpcyB0eXBlIG9mIGRlbW9jcmFjeSwgYWxzbyBrbm93biBhcyByZXByZXNlbnRhdGl2ZSBkZW1vY3JhY3ksIGlzIG9mIHR3byBraW5kcy0gcGFybGlhbWVudGFyeSBhbmQgcHJlc2lkZW50aWFsLiAgUGFpciAxIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBSZWZlcmVuZHVtIGlzIGEgcHJvY2VkdXJlIHdoZXJlYnkgYSBwcm9wb3NlZCBsZWdpc2xhdGlvbiBpcyByZWZlcnJlZCB0byB0aGUgIGVsZWN0b3JhdGUgZm9yIHNldHRsZW1lbnQgYnkgdGhlaXIgZGlyZWN0IHZvdGVzLiAgIFBhaXIgMiBpcyBjb3JyZWN0bHkgbWF0Y2hlZDogSW5pdGlhdGl2ZSBpcyBhIG1ldGhvZCBieSBtZWFucyBvZiB3aGljaCB0aGUgcGVvcGxlIGNhbiBwcm9wb3NlIGEgYmlsbCB0byB0aGUgIGxlZ2lzbGF0dXJlIGZvciBlbmFjdG1lbnQuICAgUGFpciAzIGlzIGNvcnJlY3RseSBtYXRjaGVkOiBSZWNhbGwgaXMgYSBtZXRob2QgYnkgbWVhbnMgb2Ygd2hpY2ggdGhlIHZvdGVycyBjYW4gcmVtb3ZlIGEgcmVwcmVzZW50YXRpdmUgIG9yIGFuIG9mZmljZXIgYmVmb3JlIHRoZSBleHBpcnkgb2YgaGlzIHRlcm0sIHdoZW4gaGUgZmFpbHMgdG8gZGlzY2hhcmdlIGhpcyBkdXRpZXMgcHJvcGVybHkuICBQYWlyIDQgaXMgY29ycmVjdGx5IG1hdGNoZWQ6IFBsZWJpc2NpdGUgaXMgYSBtZXRob2Qgb2Ygb2J0YWluaW5nIHRoZSBvcGluaW9uIG9mIHBlb3BsZSBvbiBhbnkgaXNzdWUgb2YgIHB1YmxpYyBpbXBvcnRhbmNlLiBJdCBpcyBnZW5lcmFsbHkgdXNlZCB0byBzb2x2ZSB0aGUgdGVycml0b3JpYWwgZGlzcHV0ZXMuICBTb3VyY2U6IE0gTGFrc2htaWthbnRoIGNoLTQgICAgICBvZiAyMyB8fHwgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one pair ",
        "option2" : "Only two pairs ",
        "option3" : "Only three pairs ",
        "option4" : "All the four pairs  "
      }
    },
    {
      "index" : 48,
      "question" : "Consider the following statements regarding the Second Schedule and the Third Schedule of Indian Constitution: 1.  Both the second and third schedules contains provision related to Vice President. 2.  The President and the Governor of states are included only in Second Schedule and not in the Third Schedule. 3.  The Comptroller and Auditor General of India is included in both the Schedules. 4.  Both the Schedules can be amended by a simple majority of the Parliament. Which of the statements given above are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ4",
      "description" : "IEV4cCkgT3B0aW9uIGQgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIFdoZW4gdGhlIEluZGlhbiBDb25zdGl0dXRpb24gd2FzIGFkb3B0ZWQgaW4gMTk0OSwgaXQgY29uc2lzdGVkIG9mIDggU2NoZWR1bGVzLiBOb3csIHRoZSBJbmRpYW4gIENvbnN0aXR1dGlvbiBpcyBkaXZpZGVkIGludG8gMTIgc2NoZWR1bGVzLiAgICBTdGF0ZW1lbnQgMSBpcyBpbmNvcnJlY3Q6IFRoZSBWaWNlIFByZXNpZGVudCBpcyBub3QgaW5jbHVkZWQgaW4gdGhpcmQgc2NoZWR1bGUuIFRoZSBUaGlyZCBTY2hlZHVsZSAgY29udGFpbnMgdGhlIGZvcm1zIG9mIG9hdGggYW5kIGFmZmlybWF0aW9uIHRvIGJlIHRha2VuIGJ5IHZhcmlvdXMgcGVyc29ucy4gIFRoZSBDaGFpcm1hbiAoVmljZSBQcmVzaWRlbnQpIGFuZCB0aGUgRGVwdXR5IENoYWlybWFuIG9mIHRoZSBSYWp5YSBTYWJoYSBhcmUgbWVudGlvbmVkIGluIHNjaGVkdWxlICAyLiBUaGUgU2Vjb25kIFNjaGVkdWxlIGRlYWxzIHdpdGggdGhlIHByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdGhlIGVtb2x1bWVudHMsIGFsbG93YW5jZXMsIHByaXZpbGVnZXMsIGV0Yy4gICBTdGF0ZW1lbnRzIDIgaXMgY29ycmVjdDogVGhlIFByZXNpZGVudCBhbmQgdGhlIEdvdmVybm9yIG9mIHN0YXRlcyBhcmUgaW5jbHVkZWQgb25seSBpbiBzZWNvbmQgU2NoZWR1bGUgIGFuZCBub3QgaW4gdGhpcmQgc2NoZWR1bGUuIEFydGljbGUgNjAgYW5kIEFydGljbGUgMTU5IG9mIHRoZSBJbmRpYW4gQ29uc3RpdHV0aW9uIHByb3ZpZGVzIGZvciB0aGUgcHJvdmlzaW9uICBvZiBvYXRoIG9yIGFmZmlybWF0aW9uIGJ5IHRoZSBQcmVzaWRlbnQgYW5kIEdvdmVybm9yIHJlc3BlY3RpdmVseS4gIFN0YXRlbWVudHMgMyBpcyBjb3JyZWN0OiBUaGUgQ29tcHRyb2xsZXIgYW5kIEF1ZGl0b3IgR2VuZXJhbCBvZiBJbmRpYSBpcyB0aGUgaGVhZCBvZiB0aGUgSW5kaWFuIGF1ZGl0ICYgIGFjY291bnQgZGVwYXJ0bWVudC4gSGUgaXMgYWxzbyB0aGUgY2hpZWYgR3VhcmRpYW4gb2YgcHVibGljIHB1cnNlLiBUaGUgQ0FHIGlzIGluY2x1ZGVkIGluIGJvdGggdGhlIDJuZCAgYW5kIDNyZCBzY2hlZHVsZSBvZiB0aGUgSW5kaWFuIENvbnN0aXR1dGlvbi4gIFN0YXRlbWVudCA0IGlzIGNvcnJlY3Q6IFRoZSBhbWVuZG1lbnQgdG8gdGhlIHNlY29uZCBhbmQgdGhpcmQgc2NoZWR1bGUgaXMgZG9uZSBieSBTaW1wbGUgTWFqb3JpdHkgb2YgIHRoZSB0d28gaG91c2VzIG9mIFBhcmxpYW1lbnQgb3V0c2lkZSB0aGUgc2NvcGUgb2YgQXJ0aWNsZSAzNjguICBLbm93bGVkZ2UgQmFzZTogICAxKSBUaGUgU2Vjb25kIFNjaGVkdWxlIGRlYWxzIHdpdGggdGhlIHByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdGhlIGVtb2x1bWVudHMsIGFsbG93YW5jZXMsIHByaXZpbGVnZXMgYW5kICBzbyBvbiBvZiB0aGUgUHJlc2lkZW50IG9mIEluZGlhLCBHb3Zlcm5vcnMgb2YgSW5kaWFuIFN0YXRlcywgU3BlYWtlciBvZiBMb2sgU2FiaGEgJiBEZXB1dHkgU3BlYWtlciBvZiAgTG9rIFNhYmhhLCBDaGFpcm1hbiBvZiBSYWp5YSBTYWJoYSAmIERlcHV0eSBDaGFpcm1hbiBvZiBSYWp5YSBTYWJoYSwgIFNwZWFrZXIgYW5kIERlcHV0eSBTcGVha2VyICBvZiBMZWdpc2xhdGl2ZSBBc3NlbWJsaWVzIG9mIEluZGlhbiBTdGF0ZXMsIENoYWlybWFuIGFuZCBEZXB1dHkgQ2hhaXJtYW4gb2YgTGVnaXNsYXRpdmUgQ291bmNpbHMgb2YgIHRoZSBJbmRpYW4gU3RhdGVzLCBTdXByZW1lIENvdXJ0IGFuZCBIaWdoIENvdXJ0IEp1ZGdlcyBhbmQgQ29tcHRyb2xsZXIgJiBBdWRpdG9yIEdlbmVyYWwgb2YgSW5kaWEgIChDQUcpICAyKSBUaGUgVGhpcmQgU2NoZWR1bGUgY29udGFpbnMgdGhlIGZvcm1zIG9mIG9hdGggYW5kIGFmZmlybWF0aW9uIGZvciBVbmlvbiBNaW5pc3RlcnMgb2YgSW5kaWEsICBQYXJsaWFtZW50IEVsZWN0aW9uIENhbmRpZGF0ZXMsIE1lbWJlcnMgb2YgUGFybGlhbWVudCAoTVBzKSwgU3VwcmVtZSBDb3VydCBKdWRnZXMsIENvbXB0cm9sbGVyICBhbmQgQXVkaXRvciBHZW5lcmFsLCBTdGF0ZSBNaW5pc3RlcnMsIFN0YXRlIExlZ2lzbGF0dXJlIEVsZWN0aW9ucyBDYW5kaWRhdGVzLCBTdGF0ZSBMZWdpc2xhdHVyZSAgTWVtYmVycyBhbmQgSGlnaCBDb3VydCBKdWRnZXMuICBTb3VyY2U6IENoYXB0ZXIgMyBhbmQgMTAgb2YgTS4gTGF4bWlrYW50ICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1, 2 and 3 only ",
        "option2" : "3 and 4 only ",
        "option3" : "1 and 4 only ",
        "option4" : "2, 3 and 4 only     "
      }
    },
    {
      "index" : 49,
      "question" : "Consider the following statements: 1.  The Constitution explicitly empowers only the President of India to notify rules for all the matters relating to citizenship. 2.  Only an Indian citizen can become a Judge of the Supreme Court. 3.  A person is not eligible to be appointed as the President of India if he has acquired citizenship by naturalization. How many of the above given statements are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ5",
      "description" : "IEV4cCkgT3B0aW9uIGEgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0OiBBcnRpY2xlcyA1IHRvIDExIHVuZGVyIFBhcnQgSUkgb2YgdGhlIEluZGlhbiBDb25zdGl0dXRpb24gZGVhbHMgd2l0aCB0aGUgIHByb3Zpc2lvbnMgcmVsYXRpbmcgdG8gdGhlIGNpdGl6ZW5zaGlwIG1hdHRlcnMuIFRoZXNlIHByb3Zpc2lvbnMgb25seSBwcm92aWRlIGZvciB0aGUgcGVyc29ucyB3aG8gY2FuICBiZWNvbWUgY2l0aXplbiBhdCB0aGUgdGltZSBvZiB0aGUgY29tbWVuY2VtZW50IG9mIHRoZSBDb25zdGl0dXRpb24uIEl0IGRvZXMgbm90IGRlYWwgd2l0aCBhY3F1aXNpdGlvbiAgKG90aGVyIHRoYW4gYXQgdGhlIHRpbWUgb2YgY29tbWVuY2VtZW50IG9mIHRoZSBDb25zdGl0dXRpb24pIG9yIGxvc3Mgb2YgY2l0aXplbnNoaXAuIEFjY29yZGluZ2x5LCBpdCAgZW1wb3dlcnMgUGFybGlhbWVudCB0byBlbmFjdCBsYXcgZm9yIHRoZSBtYXR0ZXJzIHJlbGF0aW5nIHRvIGNpdGl6ZW5zaGlwLiBQYXJsaWFtZW50IGhhcyBlbmFjdGVkIGxhd3MgIGxpa2UgQ2l0aXplbnNoaXAgQWN0LCAxOTU1IGluIHRoaXMgcmVnYXJkLiBIZW5jZSwgdGhlIGNvbnN0aXR1dGlvbiBkb2VzIG5vdCBleHBsaWNpdGx5IGVtcG93ZXIgdGhlICBQcmVzaWRlbnQgdG8gbWFrZSBydWxlcyBwZXJ0YWluaW5nIHRvIGNpdGl6ZW5zaGlwIGluIEluZGlhLiAgU3RhdGVtZW50IDIgaXMgY29ycmVjdDogQXJ0aWNsZSAxMjQoMykgZXhwcmVzc2x5IHByb3ZpZGVzIHRoYXQgb25seSBhIGNpdGl6ZW4gb2YgSW5kaWEgY2FuIGJlIGFwcG9pbnRlZCBhcyAgdGhlIEp1ZGdlIG9mIFN1cHJlbWUgQ291cnQuIEJlc2lkZXMgdGhlc2UgcHJvdmlzaW9ucywgdGhlcmUgYXJlIHZhcmlvdXMgb2ZmaWNlcyB0byB3aGljaCBvbmx5IGFuIEluZGlhbiAgY2l0aXplbiBjYW4gYmUgYXBwb2ludGVkLiBUaGVzZSBpbmNsdWRlIG9mZmljZSBvZiBQcmVzaWRlbnQgYW5kIFZpY2UtUHJlc2lkZW50IG9mIEluZGlhLCBKdWRnZXMgb2YgSGlnaCAgQ291cnRzLCBHb3Zlcm5vciBvZiBzdGF0ZXMsIEF0dG9ybmV5IEdlbmVyYWwgb2YgSW5kaWEgYW5kIEFkdm9jYXRlIEdlbmVyYWwgb2YgU3RhdGVzLiAgU3RhdGVtZW50IDMgaXMgaW5jb3JyZWN0OiBBcyBmYXIgYXMgY2l0aXplbnNoaXAgaXMgY29uY2VybmVkIGZvciB0aGUgb2ZmaWNlIG9mIHRoZSBQcmVzaWRlbnQgb2YgSW5kaWEsIHRoZSAgb25seSBjb25kaXRpb24gaXMgdGhhdCBoZSBzaG91bGQgYmUgYSBjaXRpemVuIG9mIEluZGlhLiBIZW5jZSwgY2l0aXplbnMgYnkgYmlydGggb3IgYnkgbmF0dXJhbGl6YXRpb24tICBib3RoIGFyZSBlbGlnaWJsZSBmb3IgdGhlIG9mZmljZSBvZiBQcmVzaWRlbnQuIE5hdHVyYWxpemF0aW9uIG1lYW5zIGdyYW50aW5nIGNpdGl6ZW5zaGlwIGJ5IENlbnRyYWwgICAgb2YgMjMgfHx8ICAgR292ZXJubWVudCB0byBhIHBlcnNvbiAobm90IGJlaW5nIGFuIGlsbGVnYWwgbWlncmFudCkgb24gbWVldGluZyBjZXJ0YWluIGNvbmRpdGlvbnMuIEhlbmNlLCB0aGUgIHN0YXRlbWVudCBnaXZlbiBpcyBpbmNvcnJlY3QuICAgU291cmNlOiBMYXhtaWthbnRoICA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Only one  ",
        "option2" : "Only two ",
        "option3" : "All three ",
        "option4" : "None  "
      }
    },
    {
      "index" : 50,
      "question" : "Why India is sometimes referred to as a 'quasi-federal' polity? ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDUw",
      "description" : "IEV4cCkgT3B0aW9uIGMgaXMgdGhlIGNvcnJlY3QgYW5zd2VyLiAgIEluZGlhIGlzIHJlZ2FyZGVkIGFzIGEgc2VtaS1mZWRlcmFsIHN0YXRlIG9yIGEgcXVhc2ktZmVkZXJhbCBzdGF0ZSBhcyBkZXNjcmliZWQgYnkgUHJvZi4gSy5DLiBXaGVhcmUuIFRoZSAgU3VwcmVtZSBDb3VydCBvZiBJbmRpYSBhbHNvIGRlc2NyaWJlcyBpdCBhcyBhIGZlZGVyYWwgc3RydWN0dXJlIHdpdGggYSBzdHJvbmcgYmlhcyB0b3dhcmRzIHRoZSBDZW50cmUuICBGZWRlcmFsIGZlYXR1cmVzIG9mIEluZGlhbiAgQ29uc3RpdHV0aW9uICBVbml0YXJ5IGZlYXR1cmVzIG9mIEluZGlhbiBDb25zdGl0dXRpb24gIDEuIFN1cHJlbWFjeSBvZiB0aGUgIENvbnN0aXR1dGlvbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAxLiBTaW5nbGUgQ29uc3RpdHV0aW9uICAyLiBCaWNhbWVyYWwgTGVnaXNsYXR1cmUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDIuIFJhanlhIFNhYmhhIGRvZXMgbm90IHJlcHJlc2VudCB0aGUgIFN0YXRlcyBlcXVhbGl0eSAgMy4gRHVhbCBHb3Zlcm5tZW50ICAzLiBEaXZpc2lvbiBvZiBwb3dlciBpcyBub3QgZXF1YWwgaS5lLiwgIHN0cm9uZyBjZW50cmUuICA0LiBSaWdpZCBDb25zdGl0dXRpb24gICA0LiBDb25zdGl0dXRpb24gaXMgbm90IHN0cmljdGx5IHJpZ2lkIGV4LiAgQW1lbmRtZW50IHRocm91Z2ggU2ltcGxlIG1ham9yaXR5ICA1LiBJbmRlcGVuZGVudCBKdWRpY2lhcnkgNS4gSW50ZWdyYXRlZCBKdWRpY2lhcnkgIDYuIEluIHRoZSBjYXNlIG9mIGEgZmVkZXJhbCAgY291bnRyeSB0aGVyZSBpcyBhIHN5c3RlbSBvZiAgcmV2ZW51ZSBzaGFyaW5nIGJldHdlZW4gdGhlICBDZW50ZXIgYW5kIHRoZSBTdGF0ZS4gIDYuIFRoZSBDb25zdGl0dXRpb24gb2YgSW5kaWEgaGFzIGdpdmVuICBlbWVyZ2VuY3kgcG93ZXJzIHRvIHRoZSBQcmVzaWRlbnQgIFN0YXRlbWVudCBhIGlzIGluY29ycmVjdDogVGhlIG1haW4gcHJpbmNpcGxlIG9uIHdoaWNoIHRoZSBwYXJsaWFtZW50YXJ5IHN5c3RlbSBvcGVyYXRlcyBpcyAgcmVzcG9uc2liaWxpdHkgb2YgZXhlY3V0aXZlIHRvIHRoZSBsZWdpc2xhdHVyZS4gIFN0YXRlbWVudCBiIGlzIGluY29ycmVjdDogQmljYW1lcmFsaXNtIGlzIGEgZmVkZXJhbCBmZWF0dXJlIG9mIEluZGlhbiBjb25zdGl0dXRpb24uIEJpY2FtZXJhbGlzbSBtZWFucyAgdGhlcmUgYXJlIHR3byBob3VzZXMgb2YgUGFybGlhbWVudCBsb3dlciBob3VzZSBvciBMb2sgU2FiaGEgaGF2aW5nIHJlcHJlc2VudGF0aXZlcyBlbGVjdGVkIGRpcmVjdGx5IGJ5ICB0aGUgcGVvcGxlIGFuZCB0aGUgdXBwZXIgaG91c2UgbmFtZWx5IHRoZSBjb3VuY2lsIG9mIHN0YXRlcyBvciBSYWp5YSBTYWJoYSB3aGljaCByZXByZXNlbnRzIHRoZSAgZmVkZXJhdGluZyB1bml0cy4gIFN0YXRlbWVudCBjIGlzIGNvcnJlY3Q6IFF1YXNpIGZlZGVyYWwgcmVmZXJzIHRvIGEgc3lzdGVtIG9mIGdvdmVybm1lbnQgd2hlcmUgdGhlIGRpc3RyaWJ1dGlvbiBvZiBwb3dlcnMgIGJldHdlZW4gdGhlIENlbnRlciBhbmQgdGhlIHN0YXRlIGFyZSBub3QgZXF1YWwuIEluZGlhIGlzIGEgZmVkZXJhdGlvbiB3aXRoIGEgdW5pdGFyeSBiaWFzIGFuZCBpcyByZWZlcnJlZCBhcyAgYSBxdWFzaS1mZWRlcmFsIHN0YXRlIGJlY2F1c2Ugb2Ygc3Ryb25nIGNlbnRyYWwgbWFjaGluZXJ5LiBBY2NvcmRpbmcgdG8gSyBTYW50aGFuYW0sIGZhY3RvciBsaWtlICBkb21pbmFuY2Ugb2YgdGhlIGNlbnRyZSBpbiB0aGUgZmluYW5jaWFsIHNwaGVyZSBhbmQgdGhlIGRlcGVuZGVuY2Ugb2Ygc3RhdGVzIHVwb24gdGhlIGNlbnRyYWwgZ3JhbnRzICByZXNwb25zaWJsZSBmb3IgdW5pdGFyeSBiaWFzLiAgU3RhdGVtZW50IGQgaXMgaW5jb3JyZWN0OiBJbmRpYSBmb2xsb3dzIGR1YWwgcG9saXR5IGF0IHRoZSBjZW50cmUgYW5kIHN0YXRlIGxldmVsIGNvbnN0aXR1dGVzIGFzIGEgZmVkZXJhbCAgZmVhdHVyZSBvZiBJbmRpYW4gc3RhdGUuIER1YWwgcG9saXR5IG1lYW5zIGNlbnRyZSBhbmQgc3RhdGUgYXJlIGVuZG93ZWQgd2l0aCBzb3ZlcmVpZ24gcG93ZXJzIHRvIGJlICBleGVyY2lzZWQgaW4gdGhlIGZpZWxkIGFzc2lnbmVkIHRvIHRoZW0gcmVzcGVjdGl2ZWx5IGJ5IHRoZSBjb25zdGl0dXRpb24uICBTb3VyY2U6ICBMYXhtaWthbnQgICAgIG9mIDIzIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : " In India, executive is responsible to the  legislature for all its acts and policies. ",
        "option2" : " Indian constitution provides a Bicameral  legislature for the Centre and the states. ",
        "option3" : " India is a federal country with balance of  power tilted towards Centre. ",
        "option4" : " Indian constitution provides for division of  power between the Centre and the states.   "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2024"
}