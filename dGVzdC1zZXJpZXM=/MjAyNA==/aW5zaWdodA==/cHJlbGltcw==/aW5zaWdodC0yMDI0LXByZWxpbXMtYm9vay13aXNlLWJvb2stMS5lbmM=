{
  "testId" : "insight-2024-prelims-book-wise-book-1",
  "testType" : "all",
  "fullFilePath" : "C:\\Users\\sverma2\\SHUBHAM\\junk\\Study-CSPU\\current-affairs-util\\test-series\\2024\\insight\\prelims\\insight-2024-prelims-book-wise-1.pdf",
  "question" : [
    {
      "index" : 3,
      "question" : "Consider the following statements.  \n\t1. Savannah grows on either side of the equator and extend till the tropics.  \n\t2. Temperate grass is more nutritious and longer than Savannah.  \n\t3. Tropical Savannahs receive greater rainfall than Temperate Grasslands and thus contain more  number of trees.  Which of the above is/are correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDM=",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFRpZGFsIGhpZ2hzIGFuZCBsb3dzIGRlcGVuZCBvbiBhIGxvdCBvZiBkaWZmZXJlbnQgZmFjdG9ycy4gVGhlIHNoYXBlIGFuZCBnZW9tZXRyeSBvZiAgIGEgY29hc3RsaW5lIHBsYXkgYSBtYWpvciByb2xlLCBhcyBkbyB0aGUgbG9jYXRpb25zIG9mIHRoZSBTdW4gYW5kIE1vb24uIFN0b3JtICAgc3lzdGVtcyBhdCBzZWEgYW5kIG9uIGxhbmQgYWxzbyBzaGlmdCBsYXJnZSBxdWFudGl0aWVzIG9mIHdhdGVyIGFyb3VuZCBhbmQgYWZmZWN0IHRoZSAgIHRpZGVzLiBEZXRhaWxlZCBmb3JlY2FzdHMgYXJlIGF2YWlsYWJsZSBmb3IgaGlnaCBhbmQgbG93IHRpZGVzIGluIGFsbCBzZWEgcG9ydHMsIGJ1dCBhcmUgICBzcGVjaWZpYyB0byBsb2NhbCBjb25kaXRpb25zLiAgICBUaGF0IG1hbnkgb2YgdGhlIGFyZWFzIG9mIHRoZSB3b3JsZCB3aXRoIGhpZ2ggcmFuZ2VzIG9mIHRpZGVzIGFyZSBpbiB0aGUgYXJlYXMgb2YgQWxhc2thLCAgIENhbmFkYSwgYW5kIG5vcnRoZXJuIEV1cm9wZSBoYXMgY3JlYXRlZCBhIG1pc2NvbmNlcHRpb24gdGhhdCB0aGUgcmFuZ2Ugb2YgdGlkZSAgIGluY3JlYXNlcyB3aXRoIGluY3JlYXNpbmcgbGF0aXR1ZGUgKGFzIG9uZSBtb3ZlcyBmYXJ0aGVyIGZyb20gdGhlIGVxdWF0b3IgYW5kIGNsb3NlciB0byAgIHRoZSBwb2xlcykuIFRoaXMgaXMgaW5jb3JyZWN0LiAgIEluY3JlYXNlZCB0aWRhbCByYW5nZXMgaW4gdGhlc2UgYXJlYXMgYXJlIGNyZWF0ZWQgYnkgdGhlIHBvc2l0aW9ucyBhbmQgY29uZmlndXJhdGlvbnMgb2YgICB0aGUgY29udGluZW50cyBpbiB0aGUgbm9ydGhlcm4gaGVtaXNwaGVyZS4gSW4gdGhlIGhpZ2hlciBsYXRpdHVkZXMgb2YgdGhlIG5vcnRoZXJuICAgaGVtaXNwaGVyZSwgdGhlIGNvbnRpbmVudHMgb2YgTm9ydGggQW1lcmljYSwgRXVyb3BlLCBhbmQgQXNpYSBhcmUgcHJlc3NlZCBjbG9zZXIgICB0b2dldGhlci4gVGhpcyAnY29uc3RyaWN0aW9uJyBvZiB0aGUgb2NlYW5zIGNyZWF0ZXMgdGhlIGVmZmVjdCBvZiBhIGhpZ2hlciByYW5nZSBvZiB0aWRlcy4gICBJbiB0aGUgaGlnaGVyIGxhdGl0dWRlcyBvZiB0aGUgc291dGhlcm4gaGVtaXNwaGVyZSwgaW4gdGhlIHNvdXRoZXJuIHRpcHMgb2YgU291dGggQW1lcmljYSwgICBzb3V0aGVybiBBZnJpY2EsIEF1c3RyYWxpYSwgYW5kIEFudGFyY3RpY2EsIHRpZGFsIHJhbmdlcyBhcmUgbm90IGluY3JlYXNlZC4gSW4gdGhlc2UgYXJlYXMgICB0aGUgY29udGluZW50cyBhcmUgbm90IHByZXNzZWQgY2xvc2VseSB0b2dldGhlciwgdGhlcmUgaXMgbm90IGEgJ2NvbnN0cmljdGlvbicgb2YgdGhlICAgb2NlYW5zLCBhbmQgdGhlIHRpZGFsIHJhbmdlcyBhcmUgbm90IGluY3JlYXNlZC4gICBTZWUgaHR0cHM6Ly9vY2VhbnNlcnZpY2Uubm9hYS5nb3YvZmFjdHMvaGlnaGVzdHRpZGUuaHRtbCAgICBUaGUgc2hhcGUgb2YgYmF5cyBhbmQgZXN0dWFyaWVzIGFsc28gY2FuIG1hZ25pZnkgdGhlIGludGVuc2l0eSBvZiB0aWRlcy4gRnVubmVsLSAgIHNoYXBlZCBiYXlzIGluIHBhcnRpY3VsYXIgY2FuIGRyYW1hdGljYWxseSBhbHRlciB0aWRhbCBtYWduaXR1ZGUuICAgIFRoZSBCYXkgb2YgRnVuZHkgaW4gTm92YSBTY290aWEgaXMgdGhlIGNsYXNzaWMgZXhhbXBsZSBvZiB0aGlzIGVmZmVjdCwgYW5kIGhhcyB0aGUgaGlnaGVzdCAgIHRpZGVzIGluIHRoZSB3b3JsZCAtIG92ZXIgMTUgbWV0ZXJzLiAgIE5hcnJvdyBpbmxldHMgYW5kIHNoYWxsb3cgd2F0ZXIgYWxzbyB0ZW5kIHRvIGRpc3NpcGF0ZSBpbmNvbWluZyB0aWRlcy4gICBJbiBlc3R1YXJpZXMgd2l0aCBzdHJvbmcgdGlkYWwgcml2ZXJzLCBzdWNoIGFzIHRoZSBEZWxhd2FyZSBSaXZlciBhbmQgQ29sdW1iaWEgUml2ZXIsICAgcG93ZXJmdWwgc2Vhc29uYWwgcml2ZXIgZmxvd3MgaW4gdGhlIHNwcmluZyBjYW4gc2V2ZXJlbHkgYWx0ZXIgb3IgbWFzayB0aGUgaW5jb21pbmcgdGlkZS4gICAgUSBTb3VyY2U6IEFSOiBQYWdlIDM2OiBHZW9ncmFwaHkgTkNFUlQgN3RoOiBPdXIgRW52aXJvbm1lbnQgICAgVyAgVyAgVyAgLlAgIERGICBOTyAgVEUgIFMuICBDTyAgICAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgICAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "1 and 2  ",
        "option2" : "2 and 3  ",
        "option3" : "1 and 3  ",
        "option4" : "1, 2 and 3    "
      }
    },
    {
      "index" : 5,
      "question" : "The minimum number of states that one must cross in a road drive from Gurugram to  Kolkata via Lucknow, including the destination and the origin is  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDU=",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIE9uZSBtdXN0IHBhc3MgdGhyb3VnaCBvbmx5IEhhcnlhbmEsIFVQLCBCaWhhciBhbmQgV2VzdCBCZW5nYWwgdG8gcmVhY2ggS29sa2F0YS4gU2VlIGEgcm91dGUgICBiZWxvdzogICAgUSBTb3VyY2U6IE1hcC1iYXNlZDogSW5kaWEgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "two only  ",
        "option2" : "three  ",
        "option3" : "four  ",
        "option4" : "five    "
      }
    },
    {
      "index" : 6,
      "question" : "The Berring strait connects the  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDY=",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIEl0IGNvbm5lY3RzIHRoZSBQYWNpZmljIGFuZCBBcmN0aWMgb2NlYW5zLiAgICBUaGUgSW50ZXJuYXRpb25hbCBEYXRlIExpbmUgcnVucyBhcm91bmQgdGhlIEJlcmluZyBzdHJhaXQuICAgIFRoaXMgc3RyYWl0IHNlcGFyYXRlcyB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgUnVzc2lhIGJ5IGFyb3VuZCA4NSBrbSwgd2l0aCBhIHdhdGVyIGRlcHRoIHRoYXQgICBtZWFzdXJlcyBvbmx5IDMwLTUwIG1ldGVycyEgICAgSW4gdGhlIGxhc3QgZmV3IGRlY2FkZXMgc29tZSBmYWN0aW9ucyBoYXZlIGRpc2N1c3NlZCB0aGUgY29uc3RydWN0aW9uIG9mIGEgYnJpZGdlIG92ZXIgdGhlICAgc3RyYWl0LCBob3dldmVyLCBmaW5hbmNpYWwgYW5kIHdlYXRoZXIgY29uY2VybnMgaGF2ZSBjb250aW51YWxseSBzdGFsbGVkIHRoZSBwcm9qZWN0LiAgICBRIFNvdXJjZTogUGFnZSAzNTogTkNFUlQgNnRoIEdlb2dyYXBoeTogVGhlIEVhcnRoIE91ciBIYWJpdGF0ICAgIA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Pacific and Arctic oceans  ",
        "option2" : "Atlantic and Pacific oceans  ",
        "option3" : "Pacific and Atlantic oceans  ",
        "option4" : "Atlantic and Arctic oceans    "
      }
    },
    {
      "index" : 7,
      "question" : "In Leh and Ladakh region, one can suffer from both sunstroke and frost bite at the  same time because of the  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc=",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFRoZSBhbHRpdHVkZSBpbiBMYWRha2ggdmFyaWVzIGZyb20gYWJvdXQgMzAwMG0gKGluIEthcmdpbCkgdG8gbW9yZSB0aGFuIDgsMDAwbSAoaW4gdGhlICAgS2FyYWtvcmFtKS4gICAgRHVlIHRvIHN1Y2ggYSBoaWdoIGFsdGl0dWRlLCB0aGUgY2xpbWF0ZSBpcyBleHRyZW1lbHkgY29sZCBhbmQgZHJ5LiAgIFRoZSBhaXIgYXQgdGhpcyBhbHRpdHVkZSBpcyBzbyB0aGluIHRoYXQgdGhlIGhlYXQgb2YgdGhlIHN1biBjYW4gYmUgZmVsdCBpbnRlbnNlbHkuIFRoaXMgaXMgICBjYWxsZWQgYXMgcmFyZWZpZWQgYWlyIGFuZCBjYW4gbGVhZCB0byBicmVhdGhpbmcgaXNzdWVzLiBUaGUgYXJlYSBleHBlcmllbmNlcyBmcmVlemluZyAgIHdpbmRzIGFuZCBidXJuaW5nIGhvdCBzdW5saWdodC4gICBZb3Ugd2lsbCBiZSBzdXJwcmlzZWQgdG8ga25vdyB0aGF0IGlmIHlvdSBzaXQgaW4gdGhlIHN1biB3aXRoIHlvdXIgZmVldCBpbiB0aGUgc2hhZGUsIHlvdSAgIG1heSBzdWZmZXIgZnJvbSBib3RoIHN1bnN0cm9rZSBhbmQgZnJvc3QgYml0ZSBhdCB0aGUgc2FtZSB0aW1lLiAgICBUaGUgZGF5IHRlbXBlcmF0dXJlcyBpbiBzdW1tZXIgYXJlIGp1c3QgYWJvdmUgemVybyBkZWdyZWUgYW5kIHRoZSBuaWdodCB0ZW1wZXJhdHVyZXMgd2VsbCAgIGJlbG93IC0zMMKwQy4gSXQgaXMgZnJlZXppbmcgY29sZCBpbiB0aGUgd2ludGVycyB3aGVuIHRoZSB0ZW1wZXJhdHVyZXMgbWF5IHJlbWFpbiBiZWxvdyAtNDDCsEMgICBmb3IgbW9zdCBvZiB0aGUgdGltZS4gQXMgaXQgbGllcyBpbiB0aGUgcmFpbiBzaGFkb3cgb2YgdGhlIEhpbWFsYXlhcywgdGhlcmUgaXMgbGl0dGxlIHJhaW5mYWxsLCBhcyBsb3cgICBhcyAxMCBjbSBldmVyeSB5ZWFyLiBBbGwgdGhlc2UgbWFrZSB1cCBmb3IgYSBob3N0aWxlIGV4cGVyaWVuY2UgZm9yIGFuIGFybXkgc29sZGllciBpbiBMYWRha2guICAgIFEgU291cmNlOiBQYWdlIDc0OiBHZW9ncmFwaHkgTkNFUlQgN3RoOiBPdXIgRW52aXJvbm1lbnQgICAg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Cold temperatures and rarefied air of the region  ",
        "option2" : "Rainshadow orography of the region  ",
        "option3" : "Western disturbances occurring in the region  ",
        "option4" : "None of the above    "
      }
    },
    {
      "index" : 13,
      "question" : "The Tropic of Cancer is the farthest from which of the following cities?  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDEz",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFJlZmVyIHRvIHRoZSBtYXAgYmVsb3c6ICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICAgICBRIFNvdXJjZTogTWFwLWJhc2VkOiBJbmRpYSAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ujjain  ",
        "option2" : "Bhuj  ",
        "option3" : "Ambikapur and Ranchi  ",
        "option4" : "Gaya    "
      }
    },
    {
      "index" : 22,
      "question" : "With reference to political parties, which of the following statements is incorrect?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDIy",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIEZ1bmN0aW9ucyBvZiBQb2xpdGljYWwgUGFydHk6ICAgIEJhc2ljYWxseSwgcG9saXRpY2FsIHBhcnRpZXMgZmlsbCBwb2xpdGljYWwgb2ZmaWNlcyBhbmQgZXhlcmNpc2UgcG9saXRpY2FsIHBvd2VyLiBQYXJ0aWVzIGRvIHNvIGJ5ICAgcGVyZm9ybWluZyBhIHNlcmllcyBvZiBmdW5jdGlvbnM6ICAgIDEgUGFydGllcyBjb250ZXN0IGVsZWN0aW9ucy4gSW4gbW9zdCBkZW1vY3JhY2llcywgZWxlY3Rpb25zIGFyZSBmb3VnaHQgbWFpbmx5IGFtb25nIHRoZSAgIGNhbmRpZGF0ZXMgcHV0IHVwIGJ5IHBvbGl0aWNhbCBwYXJ0aWVzLiAgICAyIFBhcnRpZXMgcHV0IGZvcndhcmQgZGlmZmVyZW50IHBvbGljaWVzIGFuZCBwcm9ncmFtbWVzIGFuZCB0aGUgdm90ZXJzIGNob29zZSBmcm9tIHRoZW0uIEEgICBwYXJ0eSByZWR1Y2VzIGEgdmFzdCBtdWx0aXR1ZGUgb2Ygb3BpbmlvbnMgaW50byBhIGZldyBiYXNpYyBwb3NpdGlvbnMgd2hpY2ggaXQuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Such parties play a decisive role in making laws for a country.  ",
        "option2" : "Many of the pressure groups are the extensions of political parties among different   sections of society.  ",
        "option3" : "In India, a political party must have at least 150 registered electors as its members.  ",
        "option4" : "Such parties provide people access to government machinery and welfare schemes   implemented by governments.    "
      }
    },
    {
      "index" : 26,
      "question" : "\"We must make our political democracy a social democracy as well. Political  democracy cannot last unless there lies at the base of its social democracy.\"  With reference to the Indian Democracy, this statement was given by-  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI2",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Mahatma Gandhi  ",
        "option2" : "Dr. Rajendra Prasad  ",
        "option3" : "Dr. B.R. Ambedkar  ",
        "option4" : "Jawahar Lal Nehru    "
      }
    },
    {
      "index" : 27,
      "question" : "Which of the followings is not a right of an accused person guaranteed by Indian  Constitution?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDI3",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFJpZ2h0cyBvZiBhY2N1c2VkIFBlcnNvbiAgICBPdXIgQ29uc3RpdHV0aW9uIGVuc3VyZXMgdGhhdCBwZXJzb25zIGFjY3VzZWQgb2YgdmFyaW91cyBvZmZlbmNlcyB3b3VsZCBhbHNvIGdldCBzdWZmaWNpZW50ICAgcHJvdGVjdGlvbi4gV2Ugb2Z0ZW4gdGVuZCB0byBiZWxpZXZlIHRoYXQgYW55b25lIHdobyBpcyBjaGFyZ2VkIHdpdGggc29tZSBvZmZlbmNlIGlzIGd1aWx0eS4gICBIb3dldmVyLCBubyBvbmUgaXMgZ3VpbHR5IHVubGVzcyB0aGUgY291cnQgaGFzIGZvdW5kIHRoYXQgcGVyc29uIGd1aWx0eSBvZiBhbiBvZmZlbmNlLiBJdCBpcyBhbHNvICAgbmVjZXNzYXJ5IHRoYXQgYSBwZXJzb24gYWNjdXNlZCBvZiBhbnkgY3JpbWUgc2hvdWxkIGdldCBhZGVxdWF0ZSBvcHBvcnR1bml0eSB0byBkZWZlbmQgICBoZXJzZWxmIG9yIGhpbXNlbGYuIFRvIGVuc3VyZSBhIGZhaXIgdHJpYWwgaW4gY291cnRzLCB0aGUgQ29uc3RpdHV0aW9uIGhhcyBwcm92aWRlZCB0aHJlZSByaWdodHM6ICAgIE5vIHBlcnNvbiB3b3VsZCBiZSBwdW5pc2hlZCBmb3IgdGhlIHNhbWUgb2ZmZW5jZSBtb3JlIHRoYW4gb25jZSwgICBObyBsYXcgc2hhbGwgZGVjbGFyZSBhbnkgYWN0aW9uIGFzIGlsbGVnYWwgZnJvbSBhIGJhY2tkYXRlLCBhbmQgICBObyBwZXJzb24gc2hhbGwgYmUgYXNrZWQgdG8gZ2l2ZSBldmlkZW5jZSBhZ2FpbnN0IGhpbXNlbGYgb3IgaGVyc2VsZi4gICBPcHRpb24gRCBpcyBpbmNvcnJlY3QsIHRoZXJlIGlzIG5vIHN1Y2ggcHJvdmlzaW9uLiAgICBCdXQgdGhlcmUgYXJlIHNvbWUgZXhjZXB0aW9ucyBvZiB0aGVzZSBmdW5kYW1lbnRhbCByaWdodHMuIExpa2U6LSAgIA==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Accused person would not be punished for the same offence more than once.  ",
        "option2" : "No law shall declare any action as illegal from a backdate.  ",
        "option3" : "Accused person shall not be asked to give evidence against himself or herself.  ",
        "option4" : "An accused person has the right to seek reprieve from the judiciary for the charges   imposed on them.    "
      }
    },
    {
      "index" : 43,
      "question" : "Which of the following features is most likely to be found in the mature stages of  river flow as the river gets closer to the sea?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQz",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIEFzIHRoZSByaXZlciBlbnRlcnMgdGhlIHBsYWluIGl0IHR3aXN0cyBhbmQgdHVybnMgZm9ybWluZyBsYXJnZSBiZW5kcyBrbm93biBhcyBtZWFuZGVycy4gRHVlIHRvICAgY29udGludW91cyBlcm9zaW9uIGFuZCBkZXBvc2l0aW9uIGFsb25nIHRoZSBzaWRlcyBvZiB0aGUgbWVhbmRlciwgdGhlIGVuZHMgb2YgdGhlIG1lYW5kZXIgICBsb29wIGNvbWUgY2xvc2VyIGFuZCBjbG9zZXIuIEluIGR1ZSBjb3Vyc2Ugb2YgdGltZSB0aGUgbWVhbmRlciBsb29wIGN1dHMgb2ZmIGZyb20gdGhlIHJpdmVyIGFuZCAgIGZvcm1zIGEgY3V0LW9mZiBsYWtlLCBhbHNvIGNhbGxlZCBhbiBveC1ib3cgbGFrZS4gQXQgdGltZXMgdGhlIHJpdmVyIG92ZXJmbG93cyBpdHMgYmFua3MuICAgIFRoaXMgbGVhZHMgdG8gdGhlIGZsb29kaW5nIG9mIHRoZSBuZWlnaGJvdXJpbmcgYXJlYXMuIEFzIGl0IGZsb29kcywgaXQgZGVwb3NpdHMgbGF5ZXJzIG9mIGZpbmUgc29pbCAgIGFuZCBvdGhlciBtYXRlcmlhbCBjYWxsZWQgc2VkaW1lbnRzIGFsb25nIGl0cyBiYW5rcy4gVGhpcyBsZWFkcyB0byB0aGUgZm9ybWF0aW9uIG9mIGEgZmxhdCBmZXJ0aWxlICAgZmxvb2RwbGFpbi4gVGhlIHJhaXNlZCBiYW5rcyBhcmUgY2FsbGVkIGxldmVlcy4gQXMgdGhlIHJpdmVyIGFwcHJvYWNoZXMgdGhlIHNlYSwgdGhlIHNwZWVkIG9mIHRoZSAgIGZsb3dpbmcgd2F0ZXIgZGVjcmVhc2VzIGFuZCB0aGUgcml2ZXIgYmVnaW5zIHRvIGJyZWFrIHVwIGludG8gYSBudW1iZXIgb2Ygc3RyZWFtcyBjYWxsZWQgICBkaXN0cmlidXRhcmllcy4gICAgVGhlIHJpdmVyIGJlY29tZXMgc28gc2xvdyB0aGF0IGl0IGJlZ2lucyB0byBkZXBvc2l0IGl0cyBsb2FkLiBFYWNoIGRpc3RyaWJ1dGFyeSBmb3JtcyBpdHMgb3duICAgbW91dGguIFRoZSBjb2xsZWN0aW9uIG9mIHNlZGltZW50cyBmcm9tIGFsbCB0aGUgbW91dGhzIGZvcm1zIGEgZGVsdGEuICAgIFEgU291cmNlOiBQYWdlIDE2OiBPdXIgRW52aXJvbm1lbnQgLSA3dGggTkNFUlQgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Levees  ",
        "option2" : "Ox-bow lakes  ",
        "option3" : "Meanders  ",
        "option4" : "Distributaries    "
      }
    },
    {
      "index" : 45,
      "question" : "In the context of human history, which of the following was developed (or occurred)  the latest?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDQ1",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIE1ldGFsbHVyZ3kgYW5kIG1lZ2FsaXRocyBkZXZlbG9wZWQgbXVjaCBsYXRlciBhZnRlciB0aGUgZGV2ZWxvcG1lbnQgb2YgYWdyaWN1bHR1cmUsIHdoaWNoICAgcmVhbGx5IGhlcmFsZGVkIHRoZSBiZWdpbm5pbmcgb2YgYSBzZXR0bGVkIGxpZmVzdHlsZSBvZiBodW1hbiBiZWluZ3MuICAgIFRha2luZyByb290IGFyb3VuZCAxMiwwMDAgeWVhcnMgYWdvLCBhZ3JpY3VsdHVyZSB0cmlnZ2VyZWQgc3VjaCBhIGNoYW5nZSBpbiBzb2NpZXR5IGFuZCB0aGUgICB3YXkgaW4gd2hpY2ggcGVvcGxlIGxpdmVkIHRoYXQgaXRzIGRldmVsb3BtZW50IGhhcyBiZWVuIGR1YmJlZCB0aGUgJ05lb2xpdGhpYyBSZXZvbHV0aW9uLicgICAgVHJhZGl0aW9uYWwgaHVudGVyLWdhdGhlcmVyIGxpZmVzdHlsZXMsIGZvbGxvd2VkIGJ5IGh1bWFucyBzaW5jZSB0aGVpciBldm9sdXRpb24sIHdlcmUgc3dlcHQgICBhc2lkZSBpbiBmYXZvdXIgb2YgcGVybWFuZW50IHNldHRsZW1lbnRzIGFuZCBhIHJlbGlhYmxlIGZvb2Qgc3VwcGx5LiBPdXQgb2YgYWdyaWN1bHR1cmUsIGNpdGllcyAgIGFuZCBjaXZpbGl6YXRpb25zIGdyZXcsIGFuZCBiZWNhdXNlIGNyb3BzIGFuZCBhbmltYWxzIGNvdWxkIG5vdyBiZSBmYXJtZWQgdG8gbWVldCBkZW1hbmQsICAgdGhlIGdsb2JhbCBwb3B1bGF0aW9uIHJvY2tldGVkLWZyb20gc29tZSBmaXZlIG1pbGxpb24gcGVvcGxlIDEwLDAwMCB5ZWFycyBhZ28sIHRvIG1vcmUgdGhhbiAgIHNldmVuIGJpbGxpb24gdG9kYXkuICAgIFNlZSBodHRwczovL2dlbm9ncmFwaGljLm5hdGlvbmFsZ2VvZ3JhcGhpYy5jb20vZGV2ZWxvcG1lbnQtb2YtYWdyaWN1bHR1cmUvICAgIExlYXJuaW5nOiBIb21pbml6YXRpb24sIGFsc28gY2FsbGVkIGFudGhyb3BvZ2VuZXNpcywgcmVmZXJzIHRvIHRoZSBwcm9jZXNzIG9mIGJlY29taW5nICAgaHVtYW4sIGFuZCBpcyB1c2VkIGluIHNvbWV3aGF0IGRpZmZlcmVudCBjb250ZXh0cyBpbiB0aGUgZmllbGRzIG9mIHBhbGVvbnRvbG9neSBhbmQgICBwYWxlb2FudGhyb3BvbG9neSwgYXJjaGFlb2xvZ3ksIHBoaWxvc29waHksIGFuZCB0aGVvbG9neS4gICAgQW5hdG9taWNhbGx5IG1vZGVybiBodW1hbnMgKEFNSCwgb3IgQU1IUykgZGV2ZWxvcGVkIHdpdGhpbiB0aGUgc3BlY2llcyBIb21vIHNhcGllbnMgICBhYm91dCAyMDAsMDAwIHllYXJzIGFnby4gICAgVyAgVyAgVyAgLlAgIERGICBOTyAgVEUgIFMuICBDTyAgICAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgICAgIFEgU291cmNlOiBBUjogUGFnZSAzOiBPdXIgUGFzdHMgSSAtIDZ0aCBOQ0VSVCAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Metallurgy  ",
        "option2" : "Megaliths  ",
        "option3" : "Agriculture  ",
        "option4" : "Hunting-gathering    "
      }
    },
    {
      "index" : 60,
      "question" : "Which of the following languages spoken in Northern and Western India belongs to  the family of Indo-European languages?  © |form without written permission by copyright owner. Copyright infringers may face civil and criminal liability  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDYw",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFNhbnNrcml0IGlzIHBhcnQgb2YgYSBmYW1pbHkgb2YgbGFuZ3VhZ2VzIGtub3duIGFzIEluZG8tRXVyb3BlYW4uIFNvbWUgSW5kaWFuIGxhbmd1YWdlcyBzdWNoICAgYXMgQXNzYW1lc2UsIEd1amFyYXRpLCBIaW5kaSwgS2FzaG1pcmkgYW5kIFNpbmRoaSwgYW5kIG1hbnkgRXVyb3BlYW4gbGFuZ3VhZ2VzIHN1Y2ggYXMgICBFbmdsaXNoLCBGcmVuY2gsIEdlcm1hbiwgR3JlZWssIEl0YWxpYW4gYW5kIFNwYW5pc2ggYmVsb25nIHRvIHRoaXMgZmFtaWx5LiBUaGV5IGFyZSBjYWxsZWQgYSAgIGZhbWlseSBiZWNhdXNlIHRoZXkgb3JpZ2luYWxseSBoYWQgd29yZHMgaW4gY29tbW9uLiBGb3IgaW5zdGFuY2UsIHRha2UgdGhlIHdvcmRzICdtYXRyJyAgIChTYW5za3JpdCksICdtYScgKEhpbmRpKSBhbmQgJ21vdGhlcicgKEVuZ2xpc2gpLiAgICBTaW5vLVRpYmV0YW4sIGluIGEgZmV3IHNvdXJjZXMgYWxzbyBrbm93biBhcyBUcmFucy1IaW1hbGF5YW4sIGlzIGEgZmFtaWx5IG9mIG1vcmUgdGhhbiA0MDAgICBsYW5ndWFnZXMsIHNlY29uZCBvbmx5IHRvIEluZG8tRXVyb3BlYW4gaW4gbnVtYmVyIG9mIG5hdGl2ZSBzcGVha2Vycy4gICAgVGhlIFNpbm8tVGliZXRhbiBsYW5ndWFnZXMgd2l0aCB0aGUgbW9zdCBuYXRpdmUgc3BlYWtlcnMgYXJlIHRoZSB2YXJpZXRpZXMgb2YgQ2hpbmVzZSAoMS4zICAgYmlsbGlvbiksIEJ1cm1lc2UgKDMzIG1pbGxpb24pLCBhbmQgdGhlIFRpYmV0aWMgbGFuZ3VhZ2VzICg2IG1pbGxpb24pLiAgICBPdGhlciBsYW5ndWFnZXMgb2YgdGhlIGZhbWlseSBhcmUgc3Bva2VuIGluIHRoZSBIaW1hbGF5YXMsIHRoZSBTb3V0aGVhc3QgQXNpYW4gTWFzc2lmIGFuZCB0aGUgICBlYXN0ZXJuIGVkZ2Ugb2YgdGhlIFRpYmV0YW4gUGxhdGVhdS4gTW9zdCBoYXZlIHNtYWxsIHNwZWVjaCBjb21tdW5pdGllcyBpbiByZW1vdGUgbW91bnRhaW4gICBhcmVhcyBhbmQgYXMgc3VjaCBhcmUgcG9vcmx5IGRvY3VtZW50ZWQuICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICBRIFNvdXJjZTogUGFnZSA0NDogT3VyIFBhc3RzIEkgLSA2dGggTkNFUlQgICAg",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Sindhi  ",
        "option2" : "Kashmiri  ",
        "option3" : "Gujarati  ",
        "option4" : "All of the above    "
      }
    },
    {
      "index" : 70,
      "question" : "The Global Infrastructure Facility (GIF) is an initiative of the  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcw",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFRoZSBHbG9iYWwgSW5mcmFzdHJ1Y3R1cmUgRmFjaWxpdHkgKEdJRiksIGEgRzIwIGluaXRpYXRpdmUsIGlzIGEgZ2xvYmFsIGNvbGxhYm9yYXRpb24gcGxhdGZvcm0gdGhhdCAgIGludGVncmF0ZXMgZWZmb3J0cyB0byBib29zdCBwcml2YXRlIGludmVzdG1lbnQgaW4gc3VzdGFpbmFibGUsIHF1YWxpdHkgaW5mcmFzdHJ1Y3R1cmUgcHJvamVjdHMgaW4gICBkZXZlbG9waW5nIGNvdW50cmllcyBhbmQgZW1lcmdpbmcgbWFya2V0cy4gV2UgZW5hYmxlIGNvbGxlY3RpdmUgYWN0aW9uIGFtb25nIGEgd2lkZSByYW5nZSAgIG9mIHBhcnRuZXJzIC0gaW5jbHVkaW5nIGRvbm9ycywgZGV2ZWxvcG1lbnQgZmluYW5jZSBpbnN0aXR1dGlvbnMsIGNvdW50cnkgZ292ZXJubWVudHMsIHdpdGggICBpbnB1dHMgb2YgcHJpdmF0ZSBzZWN0b3IgaW52ZXN0b3JzIGFuZCBmaW5hbmNpZXJzIC0gdG8gbGV2ZXJhZ2UgcmVzb3VyY2VzIGFuZCBleHBlcnRpc2UgYW5kIGZpbmQgICBzb2x1dGlvbnMgdG8gYnVpbGQgYmFua2FibGUgcGlwZWxpbmVzIG9mIGluZnJhc3RydWN0dXJlIHByb2plY3RzIHRoYXQgYXR0cmFjdCBwcml2YXRlIGZpbmFuY2luZy4gICAgUXVhbGl0eSBpbmZyYXN0cnVjdHVyZSBkcml2ZXMgZWNvbm9taWMgZ3Jvd3RoLCBzb2NpYWwgcHJvZ3Jlc3MsIGFuZCBjbGltYXRlIGFjdGlvbi4gTm93aGVyZSBhcmUgICBsb3ctY2FyYm9uLCBjbGltYXRlLXJlc2lsaWVudCwgc3VzdGFpbmFibGUgaW5mcmFzdHJ1Y3R1cmUgbmVlZHMgZ3JlYXRlciB0aGFuIGluIGVtZXJnaW5nICAgbWFya2V0cywgd2hlcmUgaW5mcmFzdHJ1Y3R1cmUgZGVmaWNpdHMgYXJlIGxhcmdlIGF0IGJlc3QgYW5kIHN0YWdnZXJpbmcgYXQgd29yc3QuICAgIEdJRiBpcyBzdXBwb3J0ZWQgYnkgZ2VuZXJvdXMgY29udHJpYnV0aW9ucyBmcm9tIHRoZSBnb3Zlcm5tZW50cyBvZiBBdXN0cmFsaWEsIENhbmFkYSwgQ2hpbmEsICAgRGVubWFyaywgR2VybWFueSwgSmFwYW4sIFNpbmdhcG9yZSwgYW5kIHRoZSBXb3JsZCBCYW5rLiAgICBXICBXICBXICAuUCAgREYgIE5PICBURSAgUy4gIENPICAgICAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSAgICAgVGhlIEFzaWFuIEluZnJhc3RydWN0dXJlIEludmVzdG1lbnQgQmFuayAoQUlJQikgaXMgZXhwYW5kaW5nIGludG8gYSBuZXcgcGFydG5lcnNoaXAgYnkgICBiZWNvbWluZyBhIHRlY2huaWNhbCBwYXJ0bmVyIG9mIHRoZSBHbG9iYWwgSW5mcmFzdHJ1Y3R1cmUgRmFjaWxpdHkgKEdJRikuICAgIFEgU291cmNlOiBTb21ldGltZXMgaW4gbmV3czogaHR0cHM6Ly93d3cuZ2xvYmFsaW5mcmFmYWNpbGl0eS5vcmcvYWJvdXQtZ2lmICAgICA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "World Bank  ",
        "option2" : "G20  ",
        "option3" : "International Monetary Fund  ",
        "option4" : "Asian Infrastructure Investment Bank    "
      }
    },
    {
      "index" : 72,
      "question" : "Recently, the National Dairy Research Institute of India has produced the first-ever  clone of a calf. The breed of this calf is-  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDcy",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFJlY2VudGx5LCB0aGUgTmF0aW9uYWwgRGFpcnkgUmVzZWFyY2ggSW5zdGl0dXRlIGhhcyBwcm9kdWNlZCB0aGUgZmlyc3QtZXZlciBjbG9uZSBvZiBhIGNhbGYgICBiZWxvbmdpbmcgdG8gdGhlIGluZGlnZW5vdXMgR2lyIGNvdyBicmVlZC4gVGhlIGNhbGYgaGFzIGJlZW4gbmFtZWQgR2FuZ2EuICAgIEhlbmNlLCBvcHRpb24gYyBpcyBjb3JyZWN0LiAgICBTY2llbnRpc3RzIHVzZWQgdGhyZWUgYW5pbWFscyBmb3IgcHJvZHVjaW5nIHRoaXMgY2FsZjogT29jeXRlIHdhcyB0YWtlbiBmcm9tIHRoZSBTYWhpd2FsIGJyZWVkLCAgIGEgc29tYXRpYyBjZWxsIGZyb20gdGhlIEdpciBicmVlZCwgYW5kIGEgc3Vycm9nYXRlIGFuaW1hbCB3YXMgYSBjcm9zc2JyZWVkLiAgICBSZXByb2R1Y3RpdmUgY2xvbmluZzogSXQgaXMgYSBwcm9jZXNzIGJ5IHdoaWNoIGFuIGV4YWN0IGdlbmV0aWMgcmVwbGljYSwgb3IgY2xvbmUsIG9mIGFuIGV4aXN0aW5nICAgb3JnYW5pc20sIGlzIGNyZWF0ZWQgdGhyb3VnaCBhIHR5cGUgb2YgY2xvbmluZyBjYWxsZWQgc29tYXRpYyBjZWxsIG51Y2xlYXIgdHJhbnNmZXIgKFNDTlQpLiBUaGlzICAgaW52b2x2ZXMgcmVtb3ZpbmcgdGhlIG51Y2xldXMgb2YgYW4gZWdnIGNlbGwgYW5kIHJlcGxhY2luZyBpdCB3aXRoIHRoZSBudWNsZXVzIG9mIGEgc29tYXRpYyBjZWxsICAgKGEgbm9uLXJlcHJvZHVjdGl2ZSBjZWxsKSBmcm9tIHRoZSBvcmdhbmlzbSB0byBiZSBjbG9uZWQuICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICAgICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Tharparkar  ",
        "option2" : "Rathi        © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability    ",
        "option3" : "Gir  ",
        "option4" : "Red Sindhi    "
      }
    },
    {
      "index" : 75,
      "question" : "Which one of the following statements is correct regarding Sharda Peeth Corridor?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDc1",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFNoYXJkYSBQZWV0aCBDb3JyaWRvciAgICBVbmlvbiBIb21lIE1pbmlzdGVyIHNhaWQgdGhlIGdvdmVybm1lbnQgd291bGQgbW92ZSBmb3J3YXJkIHRvIG9wZW4gYSBjb3JyaWRvciB0byB0aGUgICBTaGFyZGEgUGVldGggaW4gUGFraXN0YW4tb2NjdXBpZWQtS2FzaG1pciAoUG9LKSBvbiB0aGUgbGluZXMgb2YgdGhlIEthcnRhcnB1ciBjb3JyaWRvci4gICAgVyAgVyAgVyAgLlAgIERGICBOTyAgVEUgIFMuICBDTyAgICAgIMKpIHwgZm9ybSB3aXRob3V0IHdyaXR0ZW4gcGVybWlzc2lvbiBieSBjb3B5cmlnaHQgb3duZXIuIENvcHlyaWdodCBpbmZyaW5nZXJzIG1heSBmYWNlIGNpdmlsIGFuZCBjcmltaW5hbCBsaWFiaWxpdHkgICAgIFNoYXJhZGEgUGVldGggaXMgYSBydWluZWQgSGluZHUgdGVtcGxlIGFuZCBhbmNpZW50IGNlbnRyZSBvZiBsZWFybmluZyBsb2NhdGVkIGluIHRoZSAgIE5lZWx1bSBWYWxsZXkgb2YgUGFraXN0YW4tT2NjdXBpZWQgS2FzaG1pci4gICAgSGVuY2UsIG9wdGlvbiAoYSkgYW5kIChiKSBib3RoIGFyZSBpbmNvcnJlY3QuICAgIEl0IGlzIHNpdHVhdGVkIGluIHRoZSB2YWxsZXkgb2YgTW91bnQgSGFybXVraCwgYmVsaWV2ZWQgYnkgS2FzaG1pcmkgUGFuZGl0cyB0byBiZSB0aGUgICBhYm9kZSBvZiBTaGl2YS4gICBJdCB3YXMgcHJvYmFibHkgY29tbWlzc2lvbmVkIGJ5IExhbGl0YWRpdHlhIE11a3RhcGlkYSB0aG91Z2ggbm8gZGVmaW5pdGl2ZSBldmlkZW5jZSAgIGV4aXN0cyBpbiBmYXZvdXIuICAgQWwtQmlydW5pIHJlY29yZGVkIHRoZSBwbGFjZSBmb3IgdGhlIGZpcnN0IHRpbWUsIGFzIGEgcmV2ZXJlZCBzaHJpbmUgaG91c2luZyBhIHdvb2RlbiAgIGltYWdlIG9mIFNoYXJkYS4gICAgSGVuY2UsIG9wdGlvbiAoYykgaXMgY29ycmVjdC4gICAgQmV0d2VlbiB0aGUgNnRoIGFuZCAxMnRoIGNlbnR1cmllcyBDRSwgaXQgd2FzIGFtb25nIHRoZSBtb3N0IHByb21pbmVudCB0ZW1wbGUgICB1bml2ZXJzaXRpZXMgaW4gdGhlIEluZGlhbiBzdWJjb250aW5lbnQuICAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGluY29ycmVjdC4gICAgSXQgcGxheWVkIGEga2V5IHJvbGUgaW4gdGhlIGRldmVsb3BtZW50IGFuZCBwb3B1bGFyaXNhdGlvbiBvZiB0aGUgU2hhcmFkYSBzY3JpcHQgaW4gTm9ydGggICBJbmRpYSwgY2F1c2luZyB0aGUgc2NyaXB0IHRvIGJlIG5hbWVkIGFmdGVyIGl0LCBhbmQgS2FzaG1pciB0byBhY3F1aXJlIHRoZSBtb25pa2VyICAgJ1NoYXJhZGEgRGVzaCcsIG1lYW5pbmcgJ2NvdW50cnkgb2YgU2hhcmFkYScuICAg",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "It is situated in Himanchal Pradesh.  ",
        "option2" : "It is a ruined Hindu temple and ancient centre of learning located in the Chandrabhaga   Valley.  ",
        "option3" : "Al-Biruni recorded the place for the first time, as a revered shrine housing a wooden   image of Sharda.  ",
        "option4" : "Between the 3rd and 4th BC, it was among the most prominent temple universities in the   Indian subcontinent.    "
      }
    },
    {
      "index" : 82,
      "question" : "Khamba Thoibi is regarded as the greatest of all the epics of the  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDgy",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICBLaGFtYmEgVGhvaWJpIGlzIHJlZ2FyZGVkIGFzIHRoZSBncmVhdGVzdCBvZiBhbGwgdGhlIE1laXRlaSBlcGljcy4gSXQgY29uc2lzdHMgb2YgYXBwcm94aW1hdGVseSAgIDM0LDAwMCB2ZXJzZXMsIGV2ZW4gbG9uZ2VyIHRoYW4gdGhlIFJhbWF5YW5hLiBUaGUgZXBpYyBwb2V0cnkgaGFzIGZpZnRlZW4gY2hhcHRlcnMgKFBhbmR1cHMpICAgYW5kIG5pbmV0eSB0d28gc2VjdGlvbnMgKFRhYW5na2FrcykuIEl0IGlzIGJhc2VkIG9uIHRoZSBsZWdlbmRhcnkgbG92ZSBzdG9yeSBvZiBLaGFtYmEsIGEgaGVybyAgIGluIEthbmdsZWkgbXl0aG9sb2d5IGFuZCBUaG9pYmksIHRoZSB0aGVuIHByaW5jZXNzIG9mIE1vaXJhbmcuIFRoZSB3b3JrIGlzIGNvbXBvc2VkIGJ5IEhpamFtICAgQW5nYW5naGFsLCBhIGxlZ2VuZGFyeSBiYXJkLCBib3JuIGluIFNhbXVyb3UuICAgIEFub3RoZXIgZXBpYyBpcyBOdW1pdCBLYXBwYSwgbGl0ZXJhbGx5IG1lYW5pbmcgIlNob290aW5nIGF0IHRoZSBTdW4iLiAgICBMZWFybmluZzogSXNsYW0gd2FzIGludHJvZHVjZWQgaW4gdGhlIExhZGFraCByZWdpb24gbW9yZSB0aGFuIGZvdXIgaHVuZHJlZCB5ZWFycyBhZ28gYW5kICAgdGhlcmUgaXMgYSBzaWduaWZpY2FudCBNdXNsaW0gcG9wdWxhdGlvbiBoZXJlLiBMYWRha2ggaGFzIGEgdmVyeSByaWNoIG9yYWwgdHJhZGl0aW9uIG9mIHNvbmdzIGFuZCAgIHBvZW1zLiAgICBMb2NhbCB2ZXJzaW9ucyBvZiB0aGUgVGliZXRhbiBuYXRpb25hbCBlcGljIHRoZSBLZXNhciBTYWdhIGFyZSBwZXJmb3JtZWQgYW5kIHN1bmcgYnkgYm90aCAgIE11c2xpbXMgYW5kIEJ1ZGRoaXN0cy4gICAgUSBTb3VyY2U6IFBhZ2UgMTA6IFNvY2lhbCBhbmQgUG9saXRpY2FsIExpZmUgLSBJICAgIA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Ladakhis  ",
        "option2" : "Meiteis  ",
        "option3" : "Pandups  ",
        "option4" : "Khambas    "
      }
    },
    {
      "index" : 89,
      "question" : "Regions located at nearly the same or very close latitudes are:  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDg5",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIFJlZmVyIHRvIHRoZSBtYXAgYmVsb3c6ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXAgY291cnRlc3k6IG1hcHNvZmluZGlhLmNvbSAgICBRIFNvdXJjZTogTWFwIGJhc2VkOiBJbmRpYSAgICA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Bengaluru, Kavaratti and Chennai  ",
        "option2" : "Mumbai, Raipur and Hyderabad  ",
        "option3" : "Lucknow, Itanagar and Jaipur  ",
        "option4" : "None of the above    "
      }
    },
    {
      "index" : 92,
      "question" : "Which of the following statement regarding Institute of Eminence (IoE) is correct?  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDky",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIEluc3RpdHV0ZSBvZiBFbWluZW5jZSAoSW9FKSAgICBUaGUgSW5zdGl0dXRlIG9mIEVtaW5lbmNlIChJb0UpIGlzIGEgcmVjb2duaXRpb24gc2NoZW1lIHVuZGVyIFVuaXZlcnNpdHkgR3JhbnRzICAgQ29tbWlzc2lvbiAoVUdDKSB0aGF0IGhlbHBzIGVtcG93ZXIgaGlnaGVyIGVkdWNhdGlvbmFsIGluc3RpdHV0aW9ucy4gVGhlIEhSRCAgICBXICBXICBXICAuUCAgREYgIE5PICBURSAgUy4gIENPICAgICAgwqkgfCBmb3JtIHdpdGhvdXQgd3JpdHRlbiBwZXJtaXNzaW9uIGJ5IGNvcHlyaWdodCBvd25lci4gQ29weXJpZ2h0IGluZnJpbmdlcnMgbWF5IGZhY2UgY2l2aWwgYW5kIGNyaW1pbmFsIGxpYWJpbGl0eSAgICAgTWluaXN0cnkgb2YgSW5kaWEgZ3JhbnRzIHRoZSBJbnN0aXR1dGlvbiBvZiBFbWluZW5jZSBzdGF0dXMgdG8gbXVsdGlwbGUgdW5pdmVyc2l0aWVzLiAgIEluc3RpdHV0aW9ucyB0aGF0IGFjcXVpcmUgdGhlIElvRSBzdGF0dXMgZ2V0IGZ1bGwgYXV0b25vbXkgb3ZlciB0aGVpciBlZHVjYXRpb25hbCAgIHN0cnVjdHVyZSBhbmQgY291cnNlcy4gTW9yZW92ZXIsIHRoZSBjZW50cmFsIGdvdmVybm1lbnQgYXV0aG9yaXRpZXMgd2lsbCBnaXZlIElOUiAgIDEwMDAgY3JvcmUgdG8gcHVibGljIGluc3RpdHV0aW9ucyBldmVyeSB5ZWFyLiBIZW5jZSwgb3B0aW9uIChiKSBpcyBjb3JyZWN0LiAgIFB1YmxpYyBpbnN0aXR1dGlvbnMgd291bGQgYmUgZ3JhbnRlZCAxMDAwIGNyb3JlLCB3aGVyZWFzLCB0aGUgZ292ZXJubWVudCAgIHdvdWxkIG9mZmVyIG5vIHN1Y2ggZmluYW5jaWFsIGFzc2lzdGFuY2UgdG8gcHJpdmF0ZSBpbnN0aXR1dGlvbnMuICAgIFRoZSBzdGF0dXMgb2YgJ0luc3RpdHV0ZSBvZiBFbWluZW5jZScgd2FzIGxhdW5jaGVkIHRvIGVtcG93ZXIgaGlnaGVyIGVkdWNhdGlvbiBpbnN0aXR1dGlvbnMgaW4gICBJbmRpYSBhbmQgaGVscCB0aGVtIGltcGxlbWVudCB3b3JsZC1jbGFzcyB0ZWFjaGluZyBzeXN0ZW1zIHRvIGVuaGFuY2UgYWZmb3JkYWJsZSBhY2Nlc3MgdG8gICBoaWdoLXF1YWxpdHkgZWR1Y2F0aW9uLiBUaGUgVW5pdmVyc2l0eSBHcmFudHMgQ29tbWlzc2lvbiBzZXQgdGhlIElvRSBzY2hlbWUgaW4gMjAxNy4gICBUd2VudHkgaW5zdGl0dXRpb25zIHJlY2VpdmVkIHRoZSBncmFudCwgYW5kIGVsZXZlbiBhbW9uZyB0aGUgc2VsZWN0ZWQgb25lcyBnb3QgdGhlIEluc3RpdHV0aW9ucyAgIG9mIEVtaW5lbmNlIHN0YXR1cyBpbiBBcHJpbCAyMDIxLiAgICAgV2hvIGlzIGVsaWdpYmxlIGZvciB0aGUgSW5zdGl0dXRlIG9mIEVtaW5lbmNlIHN0YXR1cz8gICAgQW4gaGlnaGVyIGVkdWNhdGlvbiBpbnN0aXR1dGlvbiBpbiBJbmRpYSByZXF1aXJlcyB0aGUgZm9sbG93aW5nIGNoYXJhY3RlcmlzdGljcyB0byBiZWNvbWUgYW4gICBJbnN0aXR1dGUgb2YgRW1pbmVuY2UuICAgIFRoZSBOYXRpb25hbCBJbnN0aXR1dGlvbiBSYW5raW5nIEZyYW1ld29yayAoTklSRikgcmVxdWlyZXMgdGhlIG9yZ2FuaXphdGlvbiB0byAgIHJhbmsgYW1vbmcgdGhlIHRvcCBmaWZ0eSBpbnN0aXR1dGlvbnMgaW4gaXRzIGNhdGVnb3J5LiAgIFN0YXRlIHB1YmxpYyB1bml2ZXJzaXRpZXMsIGluc3RpdHV0ZXMgb2YgbmF0aW9uYWwgaW1wb3J0YW5jZSwgaW5zdGl0dXRpb25zIHN1YmplY3QgdG8gICBwcm9mZXNzaW9uYWwgcmVndWxhdG9yeSBjb3VuY2lsIHJlZ3VsYXRpb24sIGFuZCBnb3Zlcm5tZW50LW93bmVkIGluc3RpdHV0aW9ucyB3aWxsICAgY29udGludWUgdG8gb3BlcmF0ZSB1bmRlciBleGlzdGluZyBhY3RzLiAgIEFjY29yZGluZyB0byBVR0MgUmVndWxhdGlvbnMgZm9yIEluc3RpdHV0aW9ucyBvZiBFbWluZW5jZSwgdGhlIGRlZW1lZC10by1iZSB1bml2ZXJzaXRpZXMgICB0aGF0IGZhbGwgdW5kZXIgdGhlIGdvdmVybm1lbnQgYXV0aG9yaXR5IHdpbGwgcmVjZWl2ZSBhZGRpdGlvbmFsIGluY2VudGl2ZXMuICAgICBodHRwczovL2luZGlhbmV4cHJlc3MuY29tL2FydGljbGUvZXhwcmVzcy1leGNsdXNpdmUvZm9yLXByaXZhdGUtY2FtcHVzZXMtaW5zdGl0dXRpb24tb2YtZW1pbmVuYyBlLSAgdGFnLWdpZnQtd3JhcHBlZC1pbi1yZWQtdGFwZS04NTIyNTQ4LyAgICBodHRwczovL3d3dy5vbmxpbmVtYW5pcGFsLmNvbS9ibG9ncy93aGF0LWlzLWluc3RpdHV0ZS1vZi1lbWluZW5jZSAgICAg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "Institute of Eminence (IoE) is a recognition scheme under All India Council for Technical   Education (AICTE).  ",
        "option2" : "Institutions that acquire the IoE status get full autonomy over their educational structure   and courses.        © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability    ",
        "option3" : "Under IoE, Central government authorities will give INR 1000 crore to both private and   public institutions every year.  ",
        "option4" : "One of the criteria is that 'The National Institution Ranking Framework (NIRF) requires the   organization to rank among the top five institutions in its category.'    "
      }
    },
    {
      "index" : 99,
      "question" : "DigiClaim platform was initiated for  ",
      "questionId" : "fFBhcGVyIC0gSXxhbGx8YWxsfDk5",
      "description" : "ICBBbnN3ZXIgSnVzdGlmaWNhdGlvbiA6ICAgIERpZ2lDbGFpbSBwbGF0Zm9ybSAgICBBZ3JpY3VsdHVyZSBNaW5pc3RlciBOYXJlbmRyYSBTaW5naCBUb21hciBsYXVuY2hlZCBhICdEaWdpQ2xhaW0nIHBsYXRmb3JtIHVuZGVyIHRoZSAgIG5hdGlvbmFsIGNyb3AgaW5zdXJhbmNlIHBvcnRhbCBmb3Igc3BlZWR5IGRpc2J1cnNhbCBvZiBjbGFpbXMgdG8gaW5zdXJlZCBmYXJtZXJzLiAgIEhlbmNlLCBvcHRpb24gKGQpIGlzIGNvcnJlY3QuICAgIE9uIHRoZSBvY2Nhc2lvbiwgdGhlIE1pbmlzdGVyIGFsc28gdHJhbnNmZXJyZWQgYW4gaW5zdXJhbmNlIGNsYWltIHRvdGFsaW5nIFJzIDEsMjYwLjM1IGNyb3JlICAgIFcgIFcgIFcgIC5QICBERiAgTk8gIFRFICBTLiAgQ08gICAgICDCqSB8IGZvcm0gd2l0aG91dCB3cml0dGVuIHBlcm1pc3Npb24gYnkgY29weXJpZ2h0IG93bmVyLiBDb3B5cmlnaHQgaW5mcmluZ2VycyBtYXkgZmFjZSBjaXZpbCBhbmQgY3JpbWluYWwgbGlhYmlsaXR5ICAgICB0aHJvdWdoIHRoZSBEaWdpQ2xhaW0gcGxhdGZvcm0gdG8gdGhlIGluc3VyZWQgZmFybWVycyBpbiBSYWphc3RoYW4sIFV0dGFyIFByYWRlc2gsIEhpbWFjaGFsICAgUHJhZGVzaCwgQ2hoYXR0aXNnYXJoLCBVdHRhcmFraGFuZCBhbmQgSGFyeWFuYSB3aXRoIGEgY2xpY2sgb2YgYSBidXR0b24sIGFuIG9mZmljaWFsIHN0YXRlbWVudCAgIHNhaWQuICAgIEluIHRoZSBjdXJyZW50IHN5c3RlbSwgdGhlcmUgaGF2ZSBiZWVuIHNldmVyYWwgaW5zdGFuY2VzIG9mIGluc3VyZWQgZmFybWVycycgY2xhaW1zIGJlaW5nICAgZGVsYXllZCBkdWUgdG8gYSB2YXJpZXR5IG9mIGZhY3RvcnMuIFRha2luZyBjb2duaXphbmNlIG9mIGZhcm1lcnMnIHdlbGZhcmUgYW5kIHRvIGV4cGVkaXRlIHRoZSAgIGNsYWltIGRpc2J1cnNhbCBwcm9jZXNzLCB0aGUgQWdyaWN1bHR1cmUgTWluaXN0cnkgaGFzIGNvbWUgdXAgd2l0aCB0aGUgRGlnaUNsYWltIG1vZHVsZSwgaXQgc2FpZC4gICAgV2l0aCB0aGUgRGlnaUNsYWltIHBsYXRmb3JtLCBub3cgZmFybWVycycgY2xhaW1zIHdpbGwgYmUgcHJvY2Vzc2VkIGRpcmVjdGx5IHRvIHRoZWlyIHJlc3BlY3RpdmUgICBiYW5rIGFjY291bnRzIGluIGEgdHJhbnNwYXJlbnQgYW5kIGFjY291bnRhYmxlIG1hbm5lci4gVGhpcyB0ZWNobm9sb2d5IGhhcyBiZWVuIGVuYWJsZWQgICB0aHJvdWdoIHRoZSBpbnRlZ3JhdGlvbiBvZiBOYXRpb25hbCBDcm9wIEluc3VyYW5jZSBQb3J0YWwgKE5DSVApIGFuZCBQdWJsaWMgRmluYW5jZSAgIE1hbmFnZW1lbnQgU3lzdGVtIChQRk1TKS4gICAgVGhpcyB3b3VsZCBkaXJlY3RseSBpbXBhY3QgdGhlIGNsYWltIHJldmVyc2FsIHJhdGlvLCB3aGljaCBpcyBleHBlY3RlZCB0byBnbyBkb3duIHdpdGggICBEaWdpQ2xhaW0uIEFub3RoZXIgbm90ZXdvcnRoeSBmZWF0dXJlIG9mIHRoaXMgZGlnaXRhbCBhZHZhbmNlbWVudCBpcyB0aGF0IGZhcm1lcnMgd291bGQgYmUgYWJsZSAgIHRvIHRyYWNrIHRoZSBjbGFpbSBzZXR0bGVtZW50IHByb2Nlc3Mgb24gdGhlaXIgbW9iaWxlIHBob25lcyBpbiByZWFsLXRpbWUgYW5kIGF2YWlsIHRoZSAgIHNjaGVtZSdzIGJlbmVmaXRzLiAgICBodHRwczovL3d3dy5maW5hbmNpYWxleHByZXNzLmNvbS9lY29ub215L25hcmVuZHJhLXNpbmdoLXRvbWFyLWxhdW5jaGVzLWRpZ2ljbGFpbS1wbGF0Zm9ybS1mICAgb3Itc3BlZWR5LWRpc2J1cnNhbC1vZi1pbnN1cmFuY2UtY2xhaW1zLXRvLWZhcm1lcnNuYnNwLzMwMjAzNjgvICAgICA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxhbGx8YWxs",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "all",
      "questionType" : "normal",
      "subject" : "all",
      "questionOptions" : {
        "option1" : "For faster and timely delivery of various documents by government  ",
        "option2" : "Early claim of Income tax returns  ",
        "option3" : "Recovery of fines and fees by central government agencies  ",
        "option4" : "Speedy disbursal of claims to insured farmers        © | form without written permission by copyright owner. Copyright infringers may face civil and criminal liability     "
      }
    }
  ],
  "subject" : "all",
  "topic" : "all",
  "year" : "2024"
}
