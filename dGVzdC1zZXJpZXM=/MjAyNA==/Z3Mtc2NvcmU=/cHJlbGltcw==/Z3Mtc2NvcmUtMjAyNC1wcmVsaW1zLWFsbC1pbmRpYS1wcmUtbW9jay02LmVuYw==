{
  "testId" : "gs-score-2024-prelims-all-india-pre-mock-6",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2024/gs-score/prelims/gs-score-2024-prelims-all-india-pre-mock-6.pdf",
  "question" : [
    {
      "index" : 1,
      "question" : "In the writer's opinion, the energy crisis ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MQ==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " is an outcome of unregulated supply of oil  to industries ",
        "option2" : " will subside as soon as the Arab oil begins  to  ow again ",
        "option3" : " is very likely to lead to the world war ",
        "option4" : " will remain with us for an almost  inde nite period of time."
      }
    },
    {
      "index" : 2,
      "question" : "The type of writing in the given passage could be called",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Mg==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " of cial ",
        "option2" : " scienti c ",
        "option3" : " popular ",
        "option4" : " political  Passage-2 All who have gone before you have submitted to  the stroke of death. All who come after you shall  undergo the same fate. The great and the good,  The prince and the peasant, the renowned and the  obscure travel alike the road which leads to the  grave. At the moment when you expire, thousands  throughout the world shall with you, be yielding up  their breath. Can that be held to be a great calamity  which is common to you with everything that lives  on the earth which is an event as much according  to the course of the nature, as it is that leaves shall  fall in autumn or that fruits should drop from the  tree when it is fully ripe. "
      }
    },
    {
      "index" : 3,
      "question" : "The author compares death with the fall of the ripe fruit from a tree to show that death ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Mw==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " occurs in nature also ",
        "option2" : " is a kind of fall from a great height ",
        "option3" : " gives freedom from the ordeals of life ",
        "option4" : " occurs with the achievement of fullness "
      }
    },
    {
      "index" : 4,
      "question" : "Death is a natural phenomenon because ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NA==",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " the moment you die, thousands of people  all over the world die with you.",
        "option2" : " it is as natural as the fall of leaves of  fruits from the trees",
        "option3" : " may people have died in the past ",
        "option4" : " the great and the good, the price and the  peasant, the renowned and the obscure,  all die. Passage-3 According to McNeill, a Brahmin priest was expected  to be able to recite at least one of the Vedas. The  practice was essential for several centuries when  the Vedas had not yet been written down. It must  have had a selective effect, since priests would  have been recruited from those able or willing to  memorize long passages. It must have helped in  the dissemination of the work, since a memorized  passage can be duplicated many times."
      }
    },
    {
      "index" : 5,
      "question" : "Which of the following can be inferred from the above passage?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NQ==",
      "description" : "IEV4cGxhbmF0aW9uOiAoYikgaXMgdGhlIGNvcnJlY3QgYW5zd2VyIGNob2ljZSBBcHBhcmVudGx5ICBNY05laWxsIGlzIGEgV2VzdGVybmVyIHdobyBpcyBkb2luZyBzb21lIHNvcnQgIG9mIHJlc2VhcmNoIG9uIHRoZSByb2xlIG9mIHRoZSBCcmFobWluIHByaWVzdCBpbiAgYW5jaWVudCBJbmRpYW4gc29jaWV0eS4gRnJvbSB0aGUgd2F5IGhpcyB0aG91Z2h0cyAgYXJlIGV2b2x2aW5nIGluIHRoZSBwYXNzYWdlIChyZWNpdGUtbWVtb3JpemUtICBkaXNzZW1pbmF0aW9uLWR1cGxpY2F0ZWQpLCBNY05laWxsIGNhbiBvbmx5ICB1bmRlcnN0YW5kIHRoZSByb2xlIG9mIGEgVmVkaWMgcHJpZXN0IGJ5IGRyYXdpbmcgIGEgZGlyZWN0IGFuYWxvZ3kgYmV0d2VlbiB0aGUgVmVkaWMgcHJpZXN0LCB3aG9tICBoZSBkb2VzIG5vdCB1bmRlcnN0YW5kIGV4Y2VwdCBzdXBlcu+AgSBjaWFsbHksIGFuZCAgYSByZWNvcmRlZCBhdWRpbyBjYXNldHRlLCB3aGljaCBpcyBhbiBlc3NlbnRpYWwgIGFuZCB1YmlxdWl0b3VzIGl0ZW0gaW4gTWNOZWlsbCdzIHdvcmxkLiAoYSkgYW5kIChkKSBhcmUgbW9yZSBvciBsZXNzIHN0YXRlZCBpbiB0aGUgcGFzc2FnZSwgIHNvIHRoZXJlIGlzIG5vIGluZmVyZW5jZSBpbnZvbHZlZC4gJy4uLiBwcmFjdGljZSBvZiAgcmVjaXRpbmcgVmVkYXMgd2FzIGVzc2VudGlhbCAuLi4nIG1lYW5zIHRoYXQgaXQgd2FzICBhbiBvYmxpZ2F0aW9uIGFuZCAnLi4uIHdoZW4gdGhlIFZlZGFzIGhhZCBub3QgeWV0ICBiZWVuIHdyaXR0ZW4gZG93biAuLi4nIG1lYW5zIFZlZGljIGh5bW5zIGhhZCAgbm90IGJlZW4gc2NyaXB0ZWQuIChjKSBhbHNvIGlzIGxlc3Mgb2YgYW4gaW5mZXJlbmNlIGFuZCBtb3JlIG9mIGEgIHN1cm1pc2Uu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Reciting the Vedas was a Brahmin's  obligation.",
        "option2" : " The Vedic priest was like a recorded  audio cassette.",
        "option3" : " McNeill studied the behaviour of Brahmin  priests.",
        "option4" : " Vedic hymns had not been scripted.  Passage-4 Developed countries have made adequate provisions  for social security for senior citizens. State insurers  (as well as private ones) offer medicare and pension  bene ts to people who can no longer earn. In India,  with the lapse of the joint family system, the  traditional shelter of the elderly has disappeared.  And the state faced with a  nancial crunch is not  in a position to provide social security. So, it is  advisable that the working population should give  serious thought to building a  nancial base for  itself."
      }
    },
    {
      "index" : 6,
      "question" : "Which one of the following, if it were to happen, weakens the conclusions drawn in the above passage the most?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Ng==",
      "description" : "IEV4cGxhbmF0aW9uOiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyIGNob2ljZS4gVGhlIGFycmFuZ2VtZW50ICBlbWVyZ2VzIHNvbWV3aGF0IGxpa2UgdGhpczotIFByZW1pc2UgLSBJOiBJZiAgZGV2ZWxvcGVkIGNvdW50cnksIHRoZW4gc29jaWFsIHNlY3VyaXR5IGZvciB0aGUgIGVsZGVybHkuIFByZW1pc2UgLSBJSTogTm8gc29jaWFsIHNlY3VyaXR5IGZvciB0aGUgIGVsZGVybHkgaW4gSW5kaWEsIGFzIGl0IGlzIG5vdCBhIGRldmVsb3BlZCBjb3VudHJ5ICBhbmQgYWxzbyB0aGUgdHJhZGl0aW9uYWwgc3VwcG9ydCAtICdqb2ludCBmYW1pbHkgIHN5c3RlbScgLSBmb3IgdGhlbSBpcyB2YW5pc2hpbmcuIENvbmNsdXNpb246ICBUaGVyZWZvcmUsIHdvcmtpbmcgcGVvcGxlIGluIEluZGlhIG11c3Qgc2F2ZSBmb3IgIHRoZWlyIG9sZCBhZ2UuIChjKSBhbm5vdW5jZXMgdGhlIGdvb2QgbmV3cyBmb3IgSW5kaWFuIHdvcmtpbmcgIHBlb3BsZTogJ0luZGlhIHdpbGwgYmVjb21lIGEgZGV2ZWxvcGVkIGNvdW50cnkgIGluIHRoZSBmdXR1cmUsJyBpbXBseWluZyBzb2NpYWwgc2VjdXJpdHkgZm9yIHRoZSAgZWxkZXJseSwgdGhlcmVieSB3ZWFrZW5pbmcgdGhlIGNvbmNsdXNpb24uIChhKSBhbmQgKGIpIGluZGljYXRlIHNvbWUgZW5jb3VyYWdpbmcgZnV0dXJlICB0cmVuZHMsIGJ1dCBkbyBub3Qgb2J2aWF0ZSB0aGUgbmVjZXNzaXR5IGZvciBJbmRpYW4gIHdvcmtpbmcgcGVvcGxlIHRvIHNhdmUgZm9yIHRoZWlyIG9sZCBhZ2UuIChkKSBTdHJlbmd0aGVucyB0aGUgY29uY2x1c2lvbiwgcmF0aGVyIHRoYW4gIHdlYWtlbmluZyBpdC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " The investible income of the working  population, as a proportion of its total  income, will grow in the future.",
        "option2" : " The insurance sector is underdeveloped  and trends indicate that it will be  extensively privatized in the future. 3 ",
        "option3" : " India is on a path of development that  will take it to a developed country  status, with all its positive and negative  implications.",
        "option4" : " If the working population builds a  stronger  nancial base, there will be a  revival of the joint family system. Passage-5 Various studies have shown that our forested  and hilly regions and, in general, areas where  biodiversity - as re ected in the variety of  ora  - is high, are the places where poverty appears  to be high. And these same areas are also the  ones where educational performance seems to  be poor. Therefore, it may be surmised that,  even disregarding poverty status, richness in  biodiversity goes hand in hand with educational  backwardness."
      }
    },
    {
      "index" : 7,
      "question" : "Which one of the following statements, if true, can be said to best provide supporting evidence for the surmise mentioned in the passage?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Nw==",
      "description" : "IEV4cGxhbmF0aW9uOiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyIGNob2ljZS4gVGhlIHN1cm1pc2UgIG9yIGh5cG90aGVzaXMgaW4gdGhlIHBhc3NhZ2UgaW1wbGllcyB0aGF0OiAgYmlvZGl2ZXJzaXR5IGlzIGludmVyc2VseSBwcm9wb3J0aW9uYWwgdG8gIGVkdWNhdGlvbmFsIHBlcmZvcm1hbmNlLCB3aXRoIHBvdmVydHkgcGxheWluZyAgbm8gcm9sZSBpbiB0aGlzIHJlbGF0aW9uc2hpcC4gKGQpIG1lcmVseSBjb27vgIEgcm1zIHRoZSBpbnZlcnNlIHJlbGF0aW9uc2hpcCwgYXQgIGFsbCBsZXZlbHMgb2YgcG92ZXJ0eS4gKGEpIHJlbGF0ZXMgZ29vZCBlZHVjYXRpb24gcGVyZm9ybWFuY2Ugd2l0aCAgaGlnaCBsZXZlbHMgb2YgcG92ZXJ0eSwgcmVnYXJkbGVzcyBvZiBiaW9kaXZlcnNpdHkgICh2YXJpZXR5IG9mIO+AgiBvcmEpLiBJdCBpcywgdGhlcmVmb3JlLCBpcnJlbGV2YW50LiAoYikgYW5kIChjKSBhbHNvIHN1cHBvcnQgdGhlIGludmVyc2UgcmVsYXRpb25zaGlwICBiZXR3ZWVuIGJpb2RpdmVyc2l0eSBhbmQgZWR1Y2F0aW9uYWwgIHBlcmZvcm1hbmNlLCBidXQgZWFjaCByZXNlcnZlcyBhIHJvbGUgZm9yIHBvdmVydHkgIGluIHRoaXMgcmVsYXRpb25zaGlwLiAoYykgc3VtbWFyaXplcyBiZXR0ZXIsIGhlbmNlIChjKS4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " In regions where there is little variety in   ora, educational performance is seen to  be as good as in regions with high variety  in  ora, where poverty levels are high.",
        "option2" : " Regions which show high biodiversity  also exhibit poor education performance,  at low levels of poverty.",
        "option3" : " Regions which show high biodiversity  reveal high levels of poverty and poor  educational performance.",
        "option4" : " In regions where there is low biodiversity,  at all levels of poverty, educational  performance is seen to be good. Passage-6 The child Artist Deepak Mouthattil still builds  castles in the sand. In addition, he also makes  portraits and abstract expressions in sand. For the  last two years, on Gandhi Jayanti on October 2,  Deepak has been paying homage to the Father of  the Nation by making Gandhi's sculpture in sand  on Shanghumughom beach. In 2011, it covered  an area of about 100 feet. Forty of them worked  on it from 6 a.m. to 4 p.m. Some of them were his  friends from Kannur, his home town, who are  working in the city. The end result was pleasing.  In 2012 too, he created another work in sand to  pay his respects to Gandhi, but on a smaller scale.  As usual, in addition to his small team of friends  and well-wishers, passersby and visitors to the  beach joined in when they saw him working. 'Who  does not like to play in the sand?' asks Deepak, all  smiles. According to his instructions, they heaped  the sand in certain places, made mounds of it in  certain other places and  attened it elsewhere. At  the end of three hours, they were able to sculpt  an image of the Mahatma. His creative endeavor  on Gandhi Jayanti has been supported by various  organizations with the result that Deepak had  painted 22 works showing different incidents from  Gandhi's life, all in water colour. The works were  put on in an exhibition that was sponsored by the  Public Relations Department of the Government of  Kerala."
      }
    },
    {
      "index" : 8,
      "question" : "What instructions, do you think, were given by Deepak to his team?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8OA==",
      "description" : "IEV4cGxhbmF0aW9uOiBDaG9pY2UgKGEpLCAoYikgYW5kIChjKSBnaXZlIHBhcnRpYWwgcmVhc29ucyBhbmQgIGFuc3dlcnMuIEEgY29tcGxldGUgYW5zd2VyIGNhbiBiZSBmb3VuZCBpbiAgY2hvaWNlIChkKSB3aGljaCBsaXN0cyBhbGwgdGhlIGFjdGlvbnMgcGVyZm9ybWVkIGJ5ICB0aGUgdGVhbSB0byBwcm9kdWNlIHRoZSBwaWN0dXJlIHRvIHBheSBob21hZ2UgdG8gIEdhbmRoaWppLiA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " To collect sand and sculpt the portrait. ",
        "option2" : " To mix water colours and mix sand with  water.",
        "option3" : " Level the sand, heap it up and mould it. ",
        "option4" : " To heap the sand, make mounds,  atten  it and sculpt the image."
      }
    },
    {
      "index" : 9,
      "question" : "Why did various organizations help Deepak? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8OQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBObyBkb3VidCBEZWVwYWsgd2FzIGEgY2hpbGQgYXJ0aXN0IGJ1dCB0aGF0IGlzICBub3QgdGhlIG9ubHkgcmVhc29uIGZvciBvdGhlcnMgdG8gaGVscCBoaW0uIFNvICBjaG9pY2UgKGEpIGlzIGVsaW1pbmF0ZWQsIEFuc3dlciAoYykgc2F5cyB3YXRlciAgY29sb3VyIHdhcyB1c2VkIGFuZCB0aGF0IGRvZXNuJ3Qgc291bmQgYSBzdHJvbmcgIHJlYXNvbi4gQ2hvaWNlIChkKSBzYXlzIGhpcyB3b3JrcyB3ZXJlIHNwb25zb3JlZCAgYnkgdGhlIEdvdmVybm1lbnQgb2YgS2VyYWxhLiBCb3RoIHRoZSBhbnN3ZXJzICBhcmUgaW5jb21wbGV0ZS4gVGhlcmUgaXMgYSBiZXR0ZXIgcmVhc29uIGFuZCAgdGhhdCBpcyBmb3VuZCBpbiBjaG9pY2UgKGIpLiBIZW5jZSAoYikgaXMgdGhlIHJpZ2h0ICBhbnN3ZXIu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Because Deepak was a child artist. ",
        "option2" : " Because his creativity was so rare, it  embraced 22 different facets of Gandhiji's  life.",
        "option3" : " Because all the paintings were in water  colour.",
        "option4" : " Because these works were sponsored by  the Government of Kerala. "
      }
    },
    {
      "index" : 10,
      "question" : "How many different types of people helped Deepak with his portraits?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MTA=",
      "description" : "IEV4cGxhbmF0aW9uOiBEZWVwYWsgY291bGRuJ3QgaGF2ZSB3b3JrZWQgc2luZ2xlaGFuZGVkbHk7ICBoZSBkaWQgdGFrZSBzdXBwb3J0IG9mIHNvbWUgcGVvcGxlLiBTbyBjaG9pY2UgIChhKSBpcyBvdXQuIENob2ljZSAoYykgYW5kIChkKSBzYXkgd2hvIGhlbHBlZCBoaW0gIGJ1dCB0aGV5IGFyZSBub3QgdGhlIG9ubHkgb25lcyB3aG8gaGVscGVkIGhpbS4gIChiKSBUaGVyZSBhcmUgc29tZSBtb3JlIHdobyBoZWxwZWQgaGltLiBDaG9pY2UgIHNheXMgZm91ciBkaWZmZXJlbnQgdHlwZXMgb2YgcGVvcGxlIGhlbHBlZCBoaW0uICAoZnJpZW5kcywgd2VsbC13aXNoZXJzLCBwYXNzZXJzYnkgYW5kIHZpc2l0b3JzKS4gIFRoZXJlZm9yZSwgY2hvaWNlIChiKSBpcyByaWdodCBhbmQgY29tcGxldGUu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Single-handed ",
        "option2" : " Four different types of people ",
        "option3" : " Deepak and his relatives ",
        "option4" : " People from Kannur and visitors "
      }
    },
    {
      "index" : 17,
      "question" : "Ravi is the oldest member in a family of  ve persons. Ravi has three children including Mina who has equal number of brother and sister. Rinki is the mother of Pinki who is the sister of Mina. How many male members are there in the family?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MTc=",
      "description" : "IEV4cGxhbmF0aW9uOiBHZW5kZXIgb2YgTWluYSBjYW5ub3QgYmUgZGV0ZXJtaW5lZC4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " One ",
        "option2" : " Two ",
        "option3" : " Three ",
        "option4" : " Cannot be determined  Directions (Q. 18-22): Read the following four  passages and answer the items that follow. Passage - 7 One crucial consequence of the fact that science is a  social activity. It is the demolition of the legendary  belief that it is an entirely amoral, intellectual  game of problem-solving. On this view, scientists  are desiccated calculating machines, whose work  is determined solely by meter readings and what  they can deduce from them. The truth is very  different. Far from being amoral and coldly logical,  science actually generates values. These include  intellectual humility, an unusually acute regard  for honesty, respect for the revolutionary and the  apparent crank, and stress on the importance of  co-operation. These are not optional extras for the  scientist; they arise directly out of the pursuit of  science. The degree to which a scientist lives by  them will be re ected in the health of the scienti c  community and in an individual scientist's long  term success in his trade. Even the most inveterate  liar must, if he is to succeed in science, cultivate  a deep respect for the truth when he is about his  work."
      }
    },
    {
      "index" : 18,
      "question" : "The author stoutly refutes the notion that science is an amoral, intellectual game of problem solving by",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MTg=",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " pointing out that scientists are calculating  machines whose work is determined by  accurate meter readings.",
        "option2" : " stating that science is a social activity. ",
        "option3" : " showing how the inexorable, self-  correcting movement will purge science  of falsehood",
        "option4" : " listing the traits of a true scientist and  providing that liars can never pursue  science. 5  Passage - 8 Mobile technology is transforming the global  banking and payment industry by providing  added convenience to existing bank customers in  developed markets, and by offering new services  to the unbanked customers in emerging markets.  Any new product for the G2P market needs to  consider the incentives and motivations of all  parties involved in the current value chain. As  banks, mobile network operators (MNOs), NGOs  and non-pro t  rms build new services to seize the  opportunity to reach the large unbanked population,  they must take time to understand the needs of  customers. This opportunity has attracted several  new players ranging from MNOs and start-ups to  companies from adjacent industries such as retail,  each trying its own business model to succeed in  this new world. The in ux of so many players and  services has created confusion for customers, lack  of coordination among players and limited scale  for a single company. History tells us that after  the initial stage of confusion, the dust eventually  settles down and a few winners emerge."
      }
    },
    {
      "index" : 19,
      "question" : "What does the author mean by 'unbanked customer'?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MTk=",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Not having access to the services of a  bank.",
        "option2" : " A person who buys goods or services from  a  nancial institution.",
        "option3" : " A customer of a speci ed kind with whom  one has to deal.",
        "option4" : " Both 2 and 3 "
      }
    },
    {
      "index" : 20,
      "question" : "Which of the following is most OPPOSITE in meaning of the word given in the passage? INFLUX",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MjA=",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Invasion ",
        "option2" : " Enlargement ",
        "option3" : " Advance ",
        "option4" : " Ebb  Passage - 9 It can be argued that most of the consumer  dissatisfaction with marketing strategies arises  from an inability to aim advertising at only the  likely buyers of a given product. There are three  groups of consumers who are affected by the  marketing process. First, there are the market  segment people who need the commodity in  question. Second, there are the program target  people in the market segment with the 'best  t'  characteristics for a speci c product. Lots of people  may need trousers, but only a few qualify as likely  buyers of very expensive designer trousers. Finally,  there is the program audience? all people who are  actually exposed to the marketing program without  regard to whether they need or want the product."
      }
    },
    {
      "index" : 21,
      "question" : "The author mentions 'trousers' most likely in order to",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MjE=",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " make a comparison between the program  target and the program audience",
        "option2" : " emphasize the similarities between the  market segment and the program target",
        "option3" : " provide an example of the way three  groups of consumers are affected by a  marketing program",
        "option4" : " clarify the distinction between the market  segment and the program target Passage - 10 In nearly all human populations a majority of  individuals can taste the arti cially synthesized  chemical phenylthiocarbonide (PTC). However, the  percentage varies dramatically-from as low as  60% in India to as high as 95% in Africa. That this  polymorphism is observed in nonhuman primates  as well indicates a long evolutionary history which,  although obviously not acting on PTC, might re ect  evolutionary selection for taste discrimination of  other, more signi cant bitter substances, such as  certain toxic plants."
      }
    },
    {
      "index" : 22,
      "question" : "Which of the following provides the most reasonable explanation for the assertion in the  rst paragraph that evolutionary history 'obviously' did not act on PTC? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MjI=",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " PTC is not a naturally occurring chemical  but rather has been produced only  recently by scientists.",
        "option2" : " Most humans lack suf cient taste  sensitivity to discriminate between  PTC and bitter chemicals occurring  naturally. ",
        "option3" : " Variability among humans respecting  PTC discrimination, like variability  respecting earwax, cannot be explained  in terms of evolutionary adaptively.",
        "option4" : " Unlike non-human primates, humans  can discriminate intellectually between  toxic and nontoxic bitter substances. 6  Directions (Q. 23-24): Study the following  information to answer the given question: Seven persons viz. A, B, C, D, E, F and G are sitting  in a row. All of them are facing north. D sits  fth  to the right of G. D does not sit at the extreme left  end of the row. B is not an immediate neighbour  G. Two people sit between A and C. A sits at one  of the positions to the left of B. B sits third to the  left of F."
      }
    },
    {
      "index" : 23,
      "question" : "Who among the following sits third to the right of C?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MjM=",
      "description" : "IEV4cGxhbmF0aW9uOiBPbmx5IHR3byBwZXJzb25zIGFyZSBzaXR0aW5nIHRvIHRoZSBsZWZ0IG9mIEMu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " G ",
        "option2" : " A ",
        "option3" : " F ",
        "option4" : " No one "
      }
    },
    {
      "index" : 24,
      "question" : "What is F's position with respect to C? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MjQ=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaHVzLCBGIHNpdHMgc2Vjb25kIHRvIHRoZSByaWdodCBvZiBDLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Second to the left ",
        "option2" : " Third to the right ",
        "option3" : " Second to the right ",
        "option4" : " Fourth to the right "
      }
    },
    {
      "index" : 7626,
      "question" : "2, 5, 9, 19, 37, ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzYyNg==",
      "description" : "IEdpdmVuIHNlcmllcyA9IDIsIDUsIDksIDE5LCAzNywgNzYgMjEyMjcuIENvcnJlY3QgT3B0aW9uOiAoYykgMjEyIDI3LiAgRXhwbGFuYXRpb246IEdpdmVuIHNlcmllcyA9IDcsIDI1LCA2MSwgMTIxLCAyMTIgNCA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 5 ",
        "option2" : " 19 ",
        "option3" : " 37 ",
        "option4" : " 76 "
      }
    },
    {
      "index" : 33,
      "question" : "According to the passage, the purpose of worshiping God should be1. to regain the lost power of the celestial beings.2. to safeguard the celestial beings' status. 3. to demonstrate our love for God. 4. to be motivated by our focus on loving God.Which of the above statements are valid in the light of the passage?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MzM=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgdHdvIHJpZ2h0IGFuc3dlcnMgYXJlIGluIGNob2ljZSAoYikuIFRoZSAgcmVtYWluaW5nIGFuc3dlcnMvY2hvaWNlcyBhcmUgaW5zdWbvgIEgY2llbnQu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 3 and 4 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " 2 and 3 only "
      }
    },
    {
      "index" : 34,
      "question" : "According to the passage, Mathura is famous because1. it is the holy place where Krishna was born.2. Ambarisha and Dhruva did penance there.3. it was originally called Madhu Nagar. 4. many devotees go there. ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MzQ=",
      "description" : "IEV4cGxhbmF0aW9uOiBBbWJhcmlzaGEgYW5kIERocnV2YSBkaWQgcGVuYW5jZSB0aGVyZSBhbmQgIGl0IHdhcyB0aGUgcGxhY2Ugd2hlcmUgTG9yZCBLcmlzaG5hIHdhcyBib3JuLiAgKGIpIE90aGVyIHR3byByZWFzb25zIGFyZSBpcnJlbGV2YW50LiBBbnN3ZXJzIChhKSwgIGFuZCAoYykgYXJlIHdyb25nIGFuZCBvbmx5IGFuc3dlciAoZCkgaXMgcmlnaHQu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 1 and 3 only ",
        "option2" : " 1 and 4 only ",
        "option3" : " 2 and 3 only ",
        "option4" : " 1 and 2 only "
      }
    },
    {
      "index" : 35,
      "question" : "''It is important to visit these places'. Why? 1. They are holy. 2. The Lord manifests and images are placed by sages and heavenly/earthly beings.3. Only seven sites are holy. 4. It excludes Tirupathi. 8 ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MzU=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGVyZSBhcmUgdHdvIGNob2ljZXMgd2hpY2ggYXJlIHJpZ2h0LiAgQ2hvaWNlcyAoYykgYW5kIChkKSBhcmUgY2xlYXJseSBpbmFkZXF1YXRlICBhbmQgaXJyZWxldmFudCBhbnN3ZXJzLiBUaGUgb3RoZXIgdHdvICAoYykgY2hvaWNlIChhKSBhbmQgKGIpIGFyZSByaWdodC4gVGh1cywgb3B0aW9uICBpcyByaWdodC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Only 1 and 4 ",
        "option2" : " Only 2 and 3 ",
        "option3" : " Only 1 and 2 ",
        "option4" : " Only 2 and 4 "
      }
    },
    {
      "index" : 36,
      "question" : "What should we do to make our worship in temples more meaningful?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MzY=",
      "description" : "IEV4cGxhbmF0aW9uOiBDaG9pY2UgKGEpIHNvdW5kcyByZWFzb25hYmxlIGVub3VnaCBidXQgbm90ICBhcyB0aGUgcmlnaHQgYW5zd2VyLiBDaG9pY2UgKGIpIG1hbnkgbm90IGJlICBhY2NlcHRhYmxlIGJlY2F1c2UgdGhhdCByZWFzb24gZG9lc24ndCBzZXJ2ZSB0aGUgIHB1cnBvc2UuIENob2ljZSAoYykgc2F5cyBvbmUgc2hvdWxkIGJlIGF3YXJlIG9mICB0aGUgbXl0aG9sb2dpY2FsIGFudGVjZWRlbnRzIGFuZCBzdG9yaWVzIGFib3V0ICB0aGUgb3JpZ2lucyBvZiB0aGUgdGVtcGxlcy4gQnV0IGxpc3RlbmluZyB0byBhICBkaXNjb3Vyc2UgaXMgb25seSBoYWxmIHRoZSBzdG9yeS4gU28sIGNob2ljZSAoZCkgaXMgIHJ1bGVkIG91dCBhbmQgY2hvaWNlIChjKSBpcyB0aGUgcmlnaHQgYW5zd2VyLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " We should worship more often than we  do now.",
        "option2" : " We should study the mythology of all  temples.",
        "option3" : " We become aware of the mythological  and anecdotal stories of temple origins.",
        "option4" : " We should listen to religious discourses  reverentially. Passage-12 As in common knowledge, while the male lion's  mane incites our imagination, it is actually the  lionesses that bring in food and ensure the survival  of the species. As Renana Jhavwala of SEWA and  a member of UN Secretary General's High-Level  Panel on Women's Economic Empowerment aptly  says, 'Women's work is invisible ... women are  at the base of the economic pyramid. Women are  stuck on a 'sticky  oor' of low technology, low  productivity, low skills, low earnings, and low  dignity.' Rural women in the Asia-Paci c region  make critical contributions to household production  and national food security, yet their contribution is  hardly acknowledged.  There is strong empirical evidence to suggest  that money in the hands of the mother increases  expenditure on children. There is a strong positive  correlation between women's status and economic/ social development. Policymakers across the world  have placed great emphasis on gender equality. The  experience suggests that economic development  alone is not enough to bring about equality.  What is needed is policy action. This is where the  importance of women's political empowerment  comes. Democracy in the 21st century is moving  towards equity and inclusion. This is the underlying  message of citizens' movements across the world.  And with the increasing role of women at the policy  level and in institutions of government, democracy  can become 'politics of difference' and 'politics of  presence.'"
      }
    },
    {
      "index" : 37,
      "question" : "'Democracy in the 21st century is moving towards equity and inclusion.' implies that",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Mzc=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Every citizen has the right to participate  actively in democracy in the 21st  century.",
        "option2" : " Women had no role in politics before the  21st century.",
        "option3" : " Democracy in the 21st century is  accepting both men and women equally  in mainstream politics. ",
        "option4" : " None of the above  Passage-13 During the reign of king Veer, there lived a wise  magistrate. Haripant's verdicts were always just  and people from all over the vast kingdom came to  him in order to settle their disputes. In the city where  Haripant lived, there was a greedy ghee merchant  named Niranjan. He always kept twenty barrels of  ghee. Of these,  fteen would contain good quality  ghee and the remaining could be adulterated. He  would mix the two and sell them. This went on for  a long time, till  nally the people fed up with being  cheated, complained to Haripant. Haripant had the ghee examined and found to  it be adulterated. He gave Niranjan a choice of  punishment-drink the  ve barrels of adulterated  ghee from his shop, or receive a hundred lashings,  or pay a thousand gold coins to the treasury.  Niranjan thought for a while. Losing a thousand  gold coins was too much and a hundred lashings  too painful. So, he decided to drink the  ve barrels  of ghee. Though Niranjan sold adulterated goods  in his shop, he made sure his own food was of the  best quality. So, after drinking one barrel of ghee,  he began to feel sick. By the second barrel, he was  vomiting. At this point, he decided to opt for the  lashings instead. But he was pampered and his  body was unused to any harsh treatment. After ten  lashes, he started trembling and by twenty he was  giddy. 'Stop!' he screamed. 'I will pay the thousand  gold coins!' And he handed them over."
      }
    },
    {
      "index" : 38,
      "question" : "Why was Sean reluctant to take Luke along? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Mzg=",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Because he was a sel sh man ",
        "option2" : " He feared that Luke's reaction may alert  the Emperor's men",
        "option3" : " Because Luke could harm him ",
        "option4" : " He wanted to bring fruits for Luke  himself"
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following can be inferred from the passage?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Mzk=",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Luke did not take good care of his uncle ",
        "option2" : " Lake of self-control had put Luke into  trouble",
        "option3" : " The Emperor was a wicked man ",
        "option4" : " Luke had a habit of speaking loudly  9  Direction (Q. 40-42): Six persons name A, B, C,  D, E, and F are sitting in a straight bench from  west to east direction but some of them are facing  south direction and some of them are facing north  direction but not necessary in the same direction.  The person B sits 3rd from any one end of the bench  and facing in the north direction. Only one person  sits between person B and person E and both are  facing in the opposite direction as compared to  each other. The person A sits 3rd to the right of the  person F who is facing in the north direction. The  person D sits at the corner and faces in the same  direction as compared to the person F. The person  C sits immediate right to the person B. The person  C and person A both are facing in the opposite  direction as compared to person B. No of person/s  between the person C and the person D is equal to  the number of person/s between the person A and  the person B."
      }
    },
    {
      "index" : 40,
      "question" : "Who sits 2nd to the right of F ? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDA=",
      "description" : "IEV4cGxhbmF0aW9uOiAgQyBzaXRzIDJuZCB0byB0aGUgcmlnaHQgb2YgRi4gNSA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " A ",
        "option2" : " C ",
        "option3" : " D ",
        "option4" : " E "
      }
    },
    {
      "index" : 41,
      "question" : "How many persons are facing in the north direction ?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDE=",
      "description" : "IEV4cGxhbmF0aW9uOiAgMyBwZXJzb25zIGFyZSBmYWNpbmcgTm9ydGggRGlyZWN0aW9uLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 2 ",
        "option3" : " 3 ",
        "option4" : " 4 "
      }
    },
    {
      "index" : 42,
      "question" : "How many persons sit between the person F and the person D ?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDI=",
      "description" : "IEV4cGxhbmF0aW9uOiAgVGhlcmUgYXJlIDMgcGVyc29ucyBzaXR0aW5nIGJldHdlZW4gRiBhbmQgIEQuIDQzLiBDb3JyZWN0IE9wdGlvbjogKGIpIG5lZWRsZSwgYXMgbmliICBpcyBjYWxsZWQgYXMgbmVlZGxlLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 2 ",
        "option2" : " 3 ",
        "option3" : " 4 ",
        "option4" : " 5 "
      }
    },
    {
      "index" : 44,
      "question" : "Point Q is to 8 meters the south of point P. Point S is 5 meters to the north-east of point T which is 3 meters to the south of point Q. Point R is 8 meters to the north of point S. The shortest distance between point Q and point S is 4 meters. Which direction is point P with respect to point R?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDQ=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaHVzLCBQIGlzIHRvIHRoZSBXZXN0IG9mIHBvaW50IFIu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " North East ",
        "option2" : " East ",
        "option3" : " South West ",
        "option4" : " West "
      }
    },
    {
      "index" : 45,
      "question" : "In a row of boys sitting from left to the right facing North, Kapil is 15th from the left. Kapil, when shifted to his right by three places, becomes the fourth boy to the left of Sunil, who is 17th from the right. How many boys are sitting in the row?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDU=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgcG9zaXRpb24gYWxvbmdzIHdpdGggbm8uIG9mIHN0dWRlbnQgYXJlIGdpdmVuICBiZWxvdyAxNygxNCszKS0gS2FwaWwncyBuZXcgcG9zaXRpb24gLSAzIC0gU3VuaWwgLTE2IFRvdGFsIG51bWJlciBvZiBib3lzIGluIHRoZSByb3cgPSAxNyArIDEgKyAzICsgMSAgKzE2ID0gMzggMzc0Ni4gQ29ycmVjdCBPcHRpb246IChjKSAzIDogIEV4cGxhbmF0aW9uOiBGb3IgZGV0ZXJtaW5pbmcgbWlycm9yIHRpbWUsIHdlIGhhdmUgdG8gc3VidHJhY3QgIGdpdmVuIHRpbWUgZnJvbSAxMSA6IDYwIG9yIDEyIDogMDAgSGVuY2UsIDExIDogNjAgLSA4IDogMjMgPSAzIDogMzc=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 37 ",
        "option2" : " 39 ",
        "option3" : " 38 ",
        "option4" : " Data inadequate "
      }
    },
    {
      "index" : 47,
      "question" : "Which of the following statement is incorrect? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDc=",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUgbGFzdCBwYXJhZ3JhcGgsICdCZWZvcmUgb25lIGNhbiB0YWxrICBhYm91dCBhbnl0aGluZyBlbHNlIG9uZSBtdXN0IHByb3ZpZGUgdGhlIG5vcm1hbCAgZXNzZW50aWFscyBvZiBsaWZlIHRvIGh1bWFuIGJlaW5ncy4nIFRodXMsIChkKSBjYW4gIGJlIGVsaW1pbmF0ZWQuIEFsc28gdGhlIGxpbmVzLCAnTmF0aW9uYWxpc20uLi5oYXMgIGEgdGVuZGVuY3kgdG8gbGltaXQnIGEgY291bnRyeSBhbmQgJ2JlY29tZXMgYSAgKGIpIGRhbmdlciBpbnRlcm5hdGlvbmFsbHknIG1ha2Ugb3B0aW9ucyAoYSkgYW5kICBpbmNvcnJlY3QuIFRodXMsIG9wdGlvbiAoYykgaXMgdGhlIGNvcnJlY3QgYW5zd2VyICBjaG9pY2Uu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Nationalism can limit the growth of a  country.",
        "option2" : " Nationalism can become a danger  internationally.",
        "option3" : " Something that is good can never turn  evil.",
        "option4" : " The essentials of life must be provided  before talking of anything else."
      }
    },
    {
      "index" : 48,
      "question" : "What are the positives of nationalism? ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDg=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgYXV0aG9yIG1lbnRpb25zIE5laHJ1J3MgYmVsaWVmIGluICBuYXRpb25hbGlzbSBhcyAnYSBzdHJvbmcgY2VtZW50aW5nIGxpbmsgaW4gIChkKSB3ZWxkaW5nIHRoZSBjb27vgIIgaWN0aW5nIGdyb3VwcycuIFRodXMsIG9wdGlvbiAgaXMgY29ycmVjdC4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " It helps a country to become a super  power.",
        "option2" : " It makes one think of one's country as  something different from the rest.",
        "option3" : " It instills a feeling of self-con dence in  the minds of people.",
        "option4" : " It works as a strong cementing link in  welding the con icting groups."
      }
    },
    {
      "index" : 49,
      "question" : "With which of the following, the author is most likely to agree?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NDk=",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUgbGluZXMgJ05laHJ1LCBvbiB0aGUgaW50ZXJuYXRpb25hbCAgcGxhbmUsIGdyb3BlZCBmb3Igb25lIHdvcmxkIG9mIGhpcyB2aXNpb24uIEhlICBzdXBwb3J0ZWQgbmF0aW9uYWxpc20gYnV0IGVtcGhhc2l6ZWQgdGhhdCBpdCAgbXVzdCBub3QgYmUgYWxsb3dlZCB0byBiZWNvbWUgYWdncmVzc2l2ZSBhbmQgIGNvbWUgaW4gdGhlIHdheSBvZiBpbnRlcm5hdGlvbmFsIGRldmVsb3BtZW50Jy4gIE9wdGlvbiAoYSkgY2xlYXJseSBmb2xsb3dzIGZyb20gdGhpcy4gQWxzbywgdGhlICBhdXRob3Igc2F5cyB0aGF0IE5laHJ1IHdhcyAnY29uc2Npb3VzIG9mICB3aGF0IGEgc3Ryb25nIGxpbmsgbmF0aW9uYWxpc20gaXMgaW4gd2VsZGluZyAgdGhlIGNvbu+AgiBpY3RpbmcgZ3JvdXBzIGluIGEgY291bnRyeScgYnV0IGhlICBkb2VzIG5vdCByZWZlciB0byBpdHMgbGluayBiZXlvbmQgdGhlIGNvdW50cnkncyAgYm9yZGVycy4gVGh1cywgb3B0aW9uIChiKSBpcyBpbmNvcnJlY3QuIE9wdGlvbiAgKGMpIGlzIG1lbnRpb25lZCBvbmx5IGluIHRoZSBjb250ZXh0IG9mICd3aGVuIGl0ICBiZWNvbWVzIHN1Y2Nlc3NmdWwuLi4nIFRodXMsIGl0IGlzIG5vdCBjb21wbGV0ZWx5ICBjb3JyZWN0LiBJbiB0aGUgc2Vjb25kIHBhcmFncmFwaCwgaXQgaXMgc3RhdGVkICB0aGF0ICdhIG5hcnJvdyBuYXRpb25hbCBwb2xpY3kuLi4gaXMgYmFkLi4uIGJlY2F1c2UgIHlvdSBsb3NlIHNpZ2h0IG9mIHRoZSB1bHRpbWF0ZSBnb29kIGFuZCB0aGVyZWJ5ICBlbmRhbmdlciB5b3VyIG93biBnb29kLicgVGhpcyBkb2Vzbid0IGxlYWQgdXMgIHRvIGNvbmNsdWRlIHRoYXQgdWx0aW1hdGUgZ29vZCBvZiBhIG5hdGlvbiBsaWVzICBoZW5jZSwgb3B0aW9uIChkKSBjYW4gYWxzbyBiZSBlbGltaW5hdGVkLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Nehru was not comfortable in preaching  his vision of one world though he also  believed in the power of nationalism.",
        "option2" : " Nehru was conscious that nationalism  was a strong cementing link even beyond  the country's borders.",
        "option3" : " Nationalism often becomes aggressive  and comes in the way of development of  internationalism.",
        "option4" : " Ultimate good of a nation lies in  internationalism not in a narrow national  policy, as its followers often lose sight."
      }
    },
    {
      "index" : 50,
      "question" : "What can be said about Nehru's realization of nationalism?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTA=",
      "description" : "IEV4cGxhbmF0aW9uOiBJdCBpcyBjbGVhcmx5IHN0YXRlZCB0aGF0IE5laHJ1IGJlbGlldmVkIGluIHRoZSAgcG93ZXIgb2YgdGhlIG5hdGlvbmFsaXNtLiBUaGUgYXV0aG9yIG9ic2VydmVkICB0aGF0LCAnaGUgd2FzIGNvbnNjaW91cyBvZiB3aGF0IGEgc3Ryb25nIGNlbWVudGluZyAgbGluayBuYXRpb25hbGlzbSBpcyBpbiB3ZWxkaW5nIHRoZSBjb27vgIIgaWN0aW5nICBncm91cHMgaW4gYSBjb3VudHJ5IGludG8gYW4gaXJyZXNpc3RpYmxlIGZvcmNlICAoYykgd2hlbiBpdCBpcyDvgIEgZ2h0aW5nIGZvciBpdHMgZnJlZWRvbScuIE9wdGlvbiAgZGlyZWN0bHkgZm9sbG93cyBmcm9tIHRoYXQu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " He groped for words to explain it in the  international forums.",
        "option2" : " It must be aggressively followed to pave  the way for international development.",
        "option3" : " It works as a strong cementing link  in welding the con icting groups in a  country into an irresistible force.",
        "option4" : " The nations of Europe during the 19th  century became powerful only because  they followed nationalism. Directions (Q. 51-59): Read the following four  passages and answer the items that follow. Passage-15 The Sun, while going on his daily rounds saw a  princess and fell in love with her. Whenever he  could slip away from the heavens, he would take  human form and go down to the princess to spend  11  some time with her. The princess too became quite  fond of him and would wait for him to come. One  day the Sun decided to send her a blood-red ruby as  a token of his love for her. He put the gem in a silk  bag, and calling a crow that was  ying past, asked  the bird to deliver the gem to his beloved. Crows  had milky white feathers in those days and it was  considered auspicious if a crow came anywhere  near you. So the Sun was pleased that he had  found a crow to deliver the gem. As the crow sped  through the sky with the silken bag, the aroma of  food lured him. Looking down, the crow saw that  a wedding feast was in progress, and immediately  it was distracted from its mission. Food was one  thing it could never resist."
      }
    },
    {
      "index" : 51,
      "question" : "What did the Sun send for the princess as a token of his love?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTE=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " He sent her the crow ",
        "option2" : " He sent her dry cow dung ",
        "option3" : " He sent her a red ruby ",
        "option4" : " He gifted her the city of Myanmar  Passage-16 Our voyage was very prosperous, but I shall not  trouble the reader with a journal of it. The captain  called in at one or two ports and sent in his longboat  for provisions and fresh water, but I never went out  of the ship till we came into the Downs, which was  on the 3rd day of June 1706, about nine months  after my escape. I offered to leave my goods in  security for payment of my freight, but the captain  protested he would not receive one farthing. We  took kind leave of each other, and I made him  promise that he would come to see me at my house  in Redriff. I hired a house and a guide for  ve  shillings which I borrowed from the captain."
      }
    },
    {
      "index" : 52,
      "question" : "When the writer uses the word 'prosperous' to describe the voyage, he means that",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTI=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " it made him rich ",
        "option2" : " it made him healthy ",
        "option3" : " it was very pleasant ",
        "option4" : " it was uneventful "
      }
    },
    {
      "index" : 53,
      "question" : "From the passage, it is clear that the captain's attitude to the author was",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTM=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " one of hostility ",
        "option2" : " one of indifference ",
        "option3" : " one of extreme friendliness and kindness ",
        "option4" : " one of disgust and irritation  Passage-17 The New Year is a time for resolutions. Mentally  at least, most of us could compile formidable lists  of do's and don'ts. The same old favorites recur  year in and year out with monotonous regularity.  Past experience has taught us that certain  accomplishments are beyond attainment. If we remain inveterate smokers, it is only because  we have so often experienced the frustration that  results from failure. Most of us fail in our efforts  at self-improvement because our schemes are too  ambitious and we never have time to carry them  out. We also make the fundamental error of announcing  our resolutions to everybody so that we look even  more foolish when we slip back into our old bad  ways."
      }
    },
    {
      "index" : 54,
      "question" : "The phrase 'formidable lists of do's and don'ts means that",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTQ=",
      "description" : "IDYg",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " the bad points of our character are  formidable",
        "option2" : " the list is so long that it is frightening ",
        "option3" : " the things that need to be included is  frightening",
        "option4" : " the realisation that we are so imperfect  is frightening Passage-18 Indian culture respects its elders, and abuse of the  elderly is a western thing. We've forever heard the  line. Only problem: It's a terrible myth. A recent  study in twenty cities across India revealed that at  least 31% of elders face abuse and 24% are abused  almost daily. And in a society where parents  often crave male babies, the study found that  sons were responsible for as much as 59% of the  abuse. Daughters-in law accounted of nearly 23%  of the incidents of Abuse. Elderly women are more  abused than men. In the most abusive situations,  the senior citizens remain silent about every form  of abuse because they often don't know where to  complain in the absence of legal provisions. An  earlier report by HelpAge and the World Health  Organisation, based on discussions with elderly  persons and health workers who interact with  senior citizens in New Delhi, described the kinds  of abuse the elderly are usually subjected to. The  abuse is not always physical. Among the various  kinds of abuse, rampant are showing them extreme  neglect, not feeding parents well, or making them  wait endlessly for meals, showing differential  treatment, verbal abuse and economic abuse. In  many of these cases, property and other assets  12  are grabbed from them. It's frightening! India has about eighty million senior citizens, a  gure that will double in twenty years. The need of the hour is moral education, right from the school level, that caring for the elderly is non-negotiable."
      }
    },
    {
      "index" : 55,
      "question" : "With reference to the passage, consider thefollowing statements:1. Hundreds of senior citizens are regularlyabused by none other than their own nearand dear ones.2. In situations of parental abuse wherethe law cannot offer much help, moralconditioning helps.Which of the statements given above is/arecorrect?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTU=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgcGFzc2FnZSBzdGF0ZXMgdGhhdCBzb25zIGFuZCBkYXVnaHRlcnMtaW4tIGxhdyBhcmUgcGVycGV0cmF0b3JzIG9mIHBhcmVudGFsIGFidXNlIHZhbGlkYXRpbmcgIHN0YXRlbWVudCAoMSkgdG8gYmUgY29ycmVjdC4gVGhlIGNvbmNsdWRpbmcgcGFydCAgb2YgdGhlIHBhcmEgdmFsaWRhdGVzIHN0YXRlbWVudCAoMikgYWxzbyB0byBiZSAgY29ycmVjdC4gU28gYm90aCBzdGF0ZW1lbnRzIGFyZSB0cnVlLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Only 1",
        "option2" : " Only 2",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 56,
      "question" : "What does the writer mean by 'caring for theelderly is non-negotiable'?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTY=",
      "description" : "IEV4cGxhbmF0aW9uOiAnTm9uLW5lZ290aWFibGUnIG1lYW5zIHNvbWV0aGluZyB0aGF0IGlzIG5vdCAgb3BlbiB0byBkaXNjdXNzaW9uIG9yIGFyYml0cmF0aW9uLiBJbiBvdGhlciB3b3JkcyAgaXQgaXMgYSBtb3JhbCBvYmxpZ2F0aW9uLiBDaG9pY2UgKGEpIGlzIGluY29ycmVjdCBhcyAgcGFyZW50cyBhcmUgdHJlYXRlZCBhcyBjb21tb2RpdGllcy4gQ2hvaWNlIChiKSBpcyAgYSBkaXN0b3J0aW9uIG9mIHRoZSB0ZXJtICdub24tbmVnb3RpYWJsZScuIENob2ljZSAgKGMpIHJpZ2h0bHkgaW50ZXJwcmV0cyB0aGUgdGVybSBpbiB0aGUgY29udGV4dCBvZiAgdGFraW5nIGNhcmUgb2YgdGhlIGVsZGVybHku",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Parents can be bought, sold, exchanged or transferred.",
        "option2" : " Caring for parents is not something that can be  rmly established and laws framed thereby.",
        "option3" : " Caring for parents is not a choice, it is an obligation and cannot be settled by arbitration or concession.",
        "option4" : " Caring for parents should be made part of school curriculum."
      }
    },
    {
      "index" : 57,
      "question" : "With reference to the passage, consider thefollowing statements:1. In India, there seem to be no laws toprotect the elderly dependents fromabuse.2. Indian society shows a bias towards themale child.Which of the statements above is/are trueaccording to the passage?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTc=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgcGFzc2FnZSBzdGF0ZXMgdGhhdCBlbGRlcnMgd2hvIGZhY2UgYWJ1c2UgIHN1ZmZlciBpbiBzaWxlbmNlIGFzIHRoZXkgZG8gbm90IGtub3cgd2hvbSB0byAgY29tcGxhaW4gdG8sIGV2aWRlbmNlaW5nIHN0YXRlbWVudCAoMSkgdG8gYmUgIHRydWUuIFN0YXRlbWVudCAoMikgaXMgYWxzbyB0cnVlIGFzIHRoZSBwYXNzYWdlICBzdGF0ZXMgdGhhdCBwYXJlbnRzIHN0aWxsIGhhdmUgYSBwcmVmZXJlbmNlIGZvciAgbWFsZSBjaGlsZHJlbi4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Only 1",
        "option2" : " Only 2",
        "option3" : " Both 1 and 2",
        "option4" : " Neither 1 nor 2"
      }
    },
    {
      "index" : 58,
      "question" : "What is the indication of the various surveys?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTg=",
      "description" : "IEV4cGxhbmF0aW9uOiBDaG9pY2UgKGEpLCAoYikgYW5kIChjKSBhcmUgZGlzdG9ydGlvbnMgb2Ygc3VydmV5ICByZWFkaW5ncy4gQ2hvaWNlIChkKSB0aGF0IHNvbnMgYXJlIG1haW4gIHBlcnBldHJhdG9ycyBvZiBhYnVzZSBhZ2FpbnN0IHBhcmVudHMgaXMgdHJ1ZS4=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Daughters-in-law are the main perpetrators of crime against the elderly.",
        "option2" : " Twenty three percent of the elderly face abuse on a daily basis.",
        "option3" : " Sons are as criminal-minded as daughters-in-law, when it comes to abuse of elders.",
        "option4" : " Sons are the main perpetrators of abuse against the elderly."
      }
    },
    {
      "index" : 59,
      "question" : "What is a 'terrible myth', according to thewriter?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NTk=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgJ215dGgnIGlzIHRoYXQgZWxkZXJseSBhYnVzZSBkb2Vzbid0IGhhcHBlbiAgaW4gSW5kaWEsIGFzIHN0YXRlZCBpbiAoYSkuIENob2ljZSAoYikgaXMgb3V0IG9mICBzY29wZSBvZiB0aGUgcGFzc2FnZS4gQ2hvaWNlcyAoYykgYW5kIChkKSBwcmVzZW50ICBhIGNvbnRyYXN0IGJldHdlZW4gdGhlIFdlc3QgYW5kIEluZGlhLCBhbmQgdGhlICBwYXNzYWdlIGRvZXMgbm90IHByZXNlbnQgYSBjb250cmFzdCBhdCBhbGwuIEl0ICBtZXJlbHkgc3RhdGVzIHRoYXQgcGVvcGxlIGluIEluZGlhIHN1ZmZlciBmcm9tICB0aGUgbWlzY29uY2VwdGlvbiB0aGF0IGVsZGVybHkgYWJ1c2UgaXMgd2VzdGVybi0gY2VudHJpYy4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " That abuse of the elderly is a western thing.",
        "option2" : " That Indian culture upholds the joint family system so abuse of the elderly is minimal.",
        "option3" : " That elderly abuse is more prevalent in India than in the West.",
        "option4" : " That elderly abuse is more prevalent in the West than in India. Direction (Q. 60-61): Point B is in the east direction with respect to point A at a distance of 3m. Point D is in south direction with respect to point A at a distance of 2m. Point E is in the east direction with respect to point D at a distance of 3m. Point C is in the east direction with respect to point B at a distance of 4m. Point F is in the east direction with respect to point E at a distance of 4m. Point G is in south direction with respect to point E at a distance of 3m. Points B and E are at a distance of 2m from each other."
      }
    },
    {
      "index" : 60,
      "question" : "What is the distance between points G and F?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NjA=",
      "description" : "IEV4cGxhbmF0aW9uOiAgRGlzdGFuY2UgYmV0d2VlbiBwb2ludHMgRyBhbmQgRiA9IEdGMiA9IEVHIEVGMiAyKyA9IEdGMiA9IDMgNDIgMisgPSBHRjIgPSAyNSA9IEdGID0gNW0=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 3 m",
        "option2" : " 5 m",
        "option3" : " 8 m",
        "option4" : " 10 m"
      }
    },
    {
      "index" : 61,
      "question" : "In which direction point F is with respect tothe point C ?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NjE=",
      "description" : "IEV4cGxhbmF0aW9uOiBQb2ludCBGIGlzIGluIFNvdXRoIGRpcmVjdGlvbiB3aXRoIHJlc3BlY3QgdG8gIHBvaW50IEMu",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " North",
        "option2" : " South",
        "option3" : " West",
        "option4" : " East 13 "
      }
    },
    {
      "index" : 62,
      "question" : "Select the related word from the given alternatives ?DTXU : GPTX :: MHSC : ?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NjI=",
      "description" : "IEV4cGxhbmF0aW9uOiBEIC0tICgrMykgLS0gRyBUIC0tICgtIDQpIC0tIFAgWCAtLSAoLSA0KSAtLSBUIFUgLS0gKCszKSAtLSBYIFNhbWUgYXMsIE0gLS0gKCszKSAtLSBQIEggLS0gKC0gNCkgLS0gRCBTIC0tICgtIDQpIC0tIE8gQyAtLSAoKzMpIC0tIEYgSGVuY2Ugb3B0aW9uIDIgaXMgY29ycmVjdC4gNjMuIENvcnJlY3QgT3B0aW9uOiAoYykgMSAmIDIgYm90aCAgZm9sbG93IEV4cGxhbmF0aW9uOiBTb21lIHBsYXRlcyBhcmUgY3VydmVkICsgbm8gY3VydmUgaXMgY2lyY2xlID0gIHNvbWUgcGxhdGVzIGFyZSBub3QgY2lyY2xlIEJ1dCwgdGhlIHBvc3NpYmlsaXR5IG1heSBvY2N1ciBIZW5jZSwgMSBmb2xsb3dzLiAgQWdhaW4sIHNvbWUgcGxhdGVzIGFyZSBub3QgY2lyY2xlIMKuIHNvbWUgcGxhdGVzICBtYXkgYmUgY2lyY2xlLiBIZW5jZSwgMiBmb2xsb3dzLiAgNyAgNjQuIENvcnJlY3QgT3B0aW9uOiAoYykgMSAmIDIgYm90aCAgZm9sbG93IEV4cGxhbmF0aW9uOiBBbGwg74CCIG93ZXJzIGFyZSBibGFjayArIHNvbWUgYmxhY2sgYXJlIGJyb3duID0gIE5vIGNvbmNsdXNpb24gQnV0LCBwb3NzaWJpbGl0eSBtYXkgb2NjdXIgSGVuY2UsIDEgZm9sbG93cy4gQWdhaW4sIEFsbCDvgIIgb3dlcnMgYXJlIGJsYWNrIMKuIFNvbWUgYmxhY2sgYXJlICDvgIIgb3dlcnMuIGkuZSwgc29tZSBibGFjayBtYXkgbm90IGJlIO+AgiBvd2VyLiBIZW5jZSwgMiBmb2xsb3dzLiA2NS4gQ29ycmVjdCBPcHRpb246IChkKSBOZWl0aGVyIDEgbm9yICAyIGZvbGxvd3MgRXhwbGFuYXRpb246IE5vIHdpdGggaXMgZ3JhbnRzICsgc29tZSBncmFudHMgYXJlIGNsYWltcyA9ICBzb21lIGNsYWltcyBhcmUgbm90IHdpc2ggU29tZSBncmFudHMgYXJlIGNsYWltcy4gSGVuY2UsIG5vIGdyYW50IGlzIGNsYWltICBjYW4ndCBmb2xsb3cgQWxsIGNsYWltcyBhcmUgZ3JhbnQgwq4gbm90IGZvbGxvdy4gSGVuY2UsIG5laXRoZXIgMSBub3IgMiBmb2xsb3dzLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " SRTH ",
        "option2" : " PDOF ",
        "option3" : " SDTH ",
        "option4" : " POQE  Direction for the questions 63 to 65: In the  following questions some statements are followed  by some conclusions. Read the statements carefully  and answer accordingly.   63. Statement:"
      }
    },
    {
      "index" : 1,
      "question" : "All plates are circle2. Some square are circle3. No square is curveConclusion:1. All circle being plates is a possibility2. At least some plates may be squareSelect the correct option using the codes given below.",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8MQ==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Only 1 follows ",
        "option2" : " Only 2 follows ",
        "option3" : " Both 1 and 2 follows ",
        "option4" : " Neither 1 nor 2 follows "
      }
    },
    {
      "index" : 66,
      "question" : "If the Hindi professors in the university constitute 2% of all the professors in the university, then what is the number of professors in the university?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NjY=",
      "description" : "IEV4cGxhbmF0aW9uOiAgVG90YWwgbm8uIG9mIEhpbmRpIHByb2Zlc3NvciBpcyA2ICsgNCA9IDEwIExldCB0b3RhbCBudW1iZXIgb2YgcHJvZmVzc29yIGluIHRoZSBpbml2ZXJzaXR5IGJlICBQLiBTbywgMiUgb2YgUCA9IDEwICAsd2hpY2ggZ2l2ZXMgcCA9IDUwMA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 450 ",
        "option2" : " 500 ",
        "option3" : " 600 ",
        "option4" : " 550 "
      }
    },
    {
      "index" : 67,
      "question" : "If the number of female Physics professors in the age group 30-39 equals 25% of all the Physics professors in that age group, then what is the number of male Physics professors in the age group 30-39?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Njc=",
      "description" : "IEV4cGxhbmF0aW9uOiBUb3RhbCBudW1iZXIgb2YgcGh5c2ljcyBwcm9mZXNzb3IgaXMgNDAgZnJvbSDvgIEgZy4gIDEgJiAyIFRoZSAlIG9mIHBoeXNpY3MgcHJvZmVzc29yIGluIHRoZSBhZ2UgZ3JvdXAgMzAgLSAgMzkgaXMgMzAlIEhlbmNlLCB0b3RhbCBuby4gcGh5c2ljcyBwcm9mZXNzb3IgaW4gdGhlIGFnciAzMCAgLSAzOSBPdXQgb2YgMTIsIDI1JSBpLmUuICgyNS8xMDApIGFyZSBmZW1hbGUsIGhlbmNlIHRoZSAgbm8uIG9mIG1hbGVzIHBoeXNpY3MgcHJvZmVzc29yIGluIHRoZSBhZ2UgZ3JvdXAgIDMwIC0gMzkgaXMgID0gMTIgLSAzID0gOQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 12 ",
        "option2" : " 15 ",
        "option3" : " 9 ",
        "option4" : " 21 "
      }
    },
    {
      "index" : 68,
      "question" : "What percentage of all Hindi professors are females?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Njg=",
      "description" : "IEV4cGxhbmF0aW9uOiBOdW1iZXIgb2YgZmVtYWxlIGhpbmRpIHByb2Zlc3NvciBpcyA2IFRvdGFsIG5vLiBvZiBoaW5kaSBwcm9mZXNzb3IgaXMgNiArIDQgPSAxMCUgb2YgSGluZGkgIHByb2Zlc3NvcnMsIHdobyBhcmUgZmVtYWxlcw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 50 ",
        "option2" : " 60 ",
        "option3" : " 55 ",
        "option4" : " 45  14 "
      }
    },
    {
      "index" : 69,
      "question" : "Which one of the following disciplines has the highest ratio of males to females?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Njk=",
      "description" : "IEV4cGxhbmF0aW9uOiBDb21wdXRlciwgQmlvbG9neSwgYW5kIEhpbmRpIGhhdmUgbW9yZSBmZW1hbGUgIHRoYW4gbWFsZXMsIHNvIHdlIGRvbid0IGNhbGN1bGF0ZSB0aGUgcmF0aW8gZm9yICB0aGVtIEZvciBwaHlzaWNzLCBtYWxlIC8gZmVtYWxlIHJhdGlvID0gMzIvOCA9IDQgRm9yIG1hdGhlbWF0aWNzID0gMjgvOCA8NCBGb3IgRW5nbGlzaCA9IDI0LzggPSAz",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " Physics ",
        "option2" : " Computer ",
        "option3" : " Hindi ",
        "option4" : " English "
      }
    },
    {
      "index" : 70,
      "question" : "How many Physics professors belong to the age group 20-29?",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzA=",
      "description" : "IEV4cGxhbmF0aW9uOiBGcm9tIGdyYXBoIDEsIHRvdGFsIG51bWJlciBvZiBwaHlzaWNzIHByb2Zlc3NvciAgYXJlIDMyICsgOCA9IDQwIEZyb20gZ3JhcGggMiwgNDAlIG9mIHBoeXNpY3MgcHJvZmVzc29yIGFyZSBpbiAgdGhlIGFnZSBncm91cCAyMCAtIDI5IEhlbmNlLCBudW1iZXIgb2YgcGh5c2ljcyBwcm9mZXNzb3IgaW4gdGhlIDIwIC0gIDI5IGFnZSBncm91cA==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 8 ",
        "option2" : " 16 ",
        "option3" : " 12 ",
        "option4" : " 14  Directions (Q. 71-77): Read the following three  passages and answer the items that follow. Passage-19 My duties in the zoo included feeding the lions. The  popular belief is that lions have the sweetness of  character, sagacity, and courage. But my experience  with them shattered this myth. Albert, the male,  often used to surprise me by suddenly jumping out  against the bars with a hair-raising cough of wrath.  When I leaped in the air like a startled stag. I am  sure he enjoyed his hastily snatching the biggest  joint of meat, he would pinch the meat belongs to  the lioness and the cubs. "
      }
    },
    {
      "index" : 71,
      "question" : "The traditional image of a lion according to the passage is that ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzE=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " he is intelligent, kind, and handsome ",
        "option2" : " he is foolish, short-tempered, and  dangerous",
        "option3" : " he is wise, gentle, and brave ",
        "option4" : " he is noisy, hungry, and wrathful "
      }
    },
    {
      "index" : 72,
      "question" : "The lion in this passage is described as if ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzI=",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " he was an unusually cruel beast ",
        "option2" : " he had a personality like a human ",
        "option3" : " he was a beast with a sense of wrath ",
        "option4" : " he had a mind like a monster  Passage-20 Spring is the season of renewal when new green  can be seen on the trees and the lawn of parks  Spring  owers have blossomed in a riot of scent  and a rainbow of colours. Houses shake out their  dust and housewives go about in a  urry of activity.  Woolens begin to disappear; the light cotton begins  to come back. Lazy lizards came out of their winter  sleep and go back to their job of  y-hunting. "
      }
    },
    {
      "index" : 73,
      "question" : "The spring season is usually a ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzM=",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " time for regeneration ",
        "option2" : " time to plant saplings ",
        "option3" : " period of plenty ",
        "option4" : " festive time  Passage-21 If you realize your innate power, you don't need a  seat or position to serve the people. You can do better  without a formal post, as did Mahatma Gandhi.  Often a ruler is not a reformer and a reformer  doesn't rule! The main motivating factor for people  is their emotions, especially when illiteracy is high.  This is used and misused by political parties and  religious leaders for short term gains. The only  way to counter this is broad-based education, both  scienti c and spiritual. Most political leaders lack education in true service.  Few are above the boundaries of race, religion and  nationality. Like any other profession, we need to  have a system for educating politicians. A certain  level of social education and maturity is needed  to shoulder responsibility. The ministers must be  able to ignore the sycophants around them and  learn to listen to their own knowledge to be right  and wrong. We have to get out of the politics of hate and  mistrust. True politics is to care for all people. When  service of the people is the main aim of politics and  not power or pleasure, any country will develop  much faster as everyone will be competing to serve  better instead of for personal gains."
      }
    },
    {
      "index" : 74,
      "question" : "As per the passage, every minister should ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzQ=",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUgbGFzdCBwYXJhIHdoaWNoIGV4cGxhaW5zIHdoYXQgdHJ1ZSAgcG9saXRpY3MgaXMuIFRoZSBsYXN0IHNlbnRlbmNlIG9mIHBhcmEgMiB0ZWxscyBvbmUgIHdoYXQgYSB0cnVlIHBvbGl0aWNpYW4gc2hvdWxkIGRvLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " listen to the voice of the people. ",
        "option2" : " compete to gain more. ",
        "option3" : " be guided by his own conscience. ",
        "option4" : " learn true politics. "
      }
    },
    {
      "index" : 75,
      "question" : "The statement, 'Few are above the boundaries of race, religion and nationality' means",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzU=",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgcGFzc2FnZSBjbGVhcmx5IHN1Z2dlc3RzIHRoYXQgb3B0aW9uIChjKSBpcyAgdGhlIHJpZ2h0IGNob2ljZS4gOCA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " very few political leaders care for all  people.",
        "option2" : " political leaders are not in uenced by  the race, religion and nationality of their  people. 15  vvvvv",
        "option3" : " most leaders fail to lead their people in  the right path. ",
        "option4" : " hardly does any political leader care for  people irrespective of their caste, religion  and nationality."
      }
    },
    {
      "index" : 76,
      "question" : "As per the passage, Mahatma Gandhi ",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8NzY=",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUg74CBIHJzdCB0aHJlZSBzZW50ZW5jZXMgb2YgcGFyYSAxIHdoaWNoICBwb2ludCB0byBvcHRpb24gKGMpLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " craved for power and position. ",
        "option2" : " would have done better service to people  with a formal post.",
        "option3" : " served the people without a formal post  as he realised his inherent power.",
        "option4" : " said that people didn't need any seat or  position to do service."
      }
    },
    {
      "index" : 77,
      "question" : "The most important factor that motivates people is",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Nzc=",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUgZm91cnRoIHNlbnRlbmNlIG9mIHBhcmEgb25lLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " their emotions. ",
        "option2" : " their spiritual power. ",
        "option3" : " their illiteracy. ",
        "option4" : " their capacity to rule. "
      }
    },
    {
      "index" : 78,
      "question" : "A toy is in the form of a cone mounted on a hemisphere. The radius of the hemisphere and that of the cone is 4cm and height 6cm.The total surface area of the toy is",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Nzg=",
      "description" : "IEV4cGxhbmF0aW9uOiBTdXJmYWNlIGFyZWEgb2YgaGVtaXNwaGVyZSA9IDMgMnIgPSDCtCDCtDMgMjIgNyAxNiBIZWlnaHQgPSA2Y20gYW5kIHJhZGl1cyA9IDRjbSBTbGFudCBoZWlnaHQgPSAzNiAxNisgPSA3LjIgY20gU3VyZmFjZSBhcmVhIG9mIGNvbmUgPSBwcmwgPSDCtCDCtCAyMiA3IDQ3Mi4gNCA3IDIuID0gOTAuNSBjbTIgIFRvdGFsIHN1ZmFjZSBhcmVhIG9mIHRoZSB0b3kgPSAxNTAgKyA5MC41ID0gMjQwLjUgY20y",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 220.5 sq cm ",
        "option2" : " 240.5 sq cm ",
        "option3" : " 260.5 sq cm ",
        "option4" : " 280.5 sq cm "
      }
    },
    {
      "index" : 79,
      "question" : "A tap can  ll a cistern in 6 hrs and another can empty it in 15 hrs. If both the taps are opened simultaneously, the time to  ll the 4/5th part of the cistern is -",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8Nzk=",
      "description" : "IEV4cGxhbmF0aW9uOiBGaWxsaW5nIHRhcCA9IDYgaHJzIEVtcHR5IHRhcCA9IDE1IGhycyBUaW1lIHRha2VuIGJ5IGJvdGggdGhlIHRhcHMgdG8g74CBIGxsIHRoZSA0LzV0aCAgcGFydCBvZiBjaXN0ZXJuID0gIDQgNSAxIDEgNiAxIDE1LSDDpiDDqCDDpyDDtiDDuCDDtyA9IDggaHI=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " 10 hr ",
        "option2" : " 8 hr ",
        "option3" : " 6 hr ",
        "option4" : " 12 hr "
      }
    },
    {
      "index" : 80,
      "question" : "Two vessels A and B contain milk and water mixed in the ratio 6 : 5 and 4 : 3 respectively. The ratio in which these two mixture be mixed to get a new mixture containing milk is:",
      "questionId" : "fFBhcGVyIC0gSXxHUy0yfENTQVR8ODA=",
      "description" : "IEV4cGxhbmF0aW9uOiBSYXRpbyBvZiBtaWxrIGFuZCB3YXRlciBpbiB2ZXNzZWwgIEEgPSA2IDogNSBTbywgcXVhbnRpdHkgb2YgbWlsayBpbiB2ZXNzZWwgQSA9ICA2IDExIFJhdGlvIG9mIG1pbGsgYW5kIHdhdGVyIGluIHZlc3NlbCBCID0gMyA6IDQgU28sIHF1YW50aXR5IG9mIG1pbGsgaW4gdmVzc2VsIEIgPSAgMyA3IFF1YW50aXR5IG9mIG1pbGsgaW4gbmV3IG1peHR1cmUgID0gPSDCtCA9NTEgMiAzIDYyMCAxMiAxMDAgMzEgNjAgJSBCeSBhbGxpZ2F0aW9uLCBSZXF1aXJlZCByYXRpbyBpcyBnaXZlbiBiZWxvdy4gTm90ZSB0aGUgbnVtYmVyIHRvIHRoZSByaWdodCBpcyB0aGUgcXVhbnRpdHkgb2YgQSwgIHdoaWxlIHRvIHRoZSBsZWZ0IGl0IGlzIEIuIDE5IDY2MCAzNyA0MjAgOiBOZXcgcmF0aW8gPSAgMTkgNjYwIDQyMCAzNyAxMzMgNDA3IMK0ID0gdnZ2dnYg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxHUy0yfENTQVQ=",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "CSAT",
      "questionType" : "normal",
      "subject" : "GS-2",
      "questionOptions" : {
        "option1" : " ",
        "option2" : " ",
        "option3" : " ",
        "option4" : "  "
      }
    }
  ],
  "subject" : "GS-2",
  "topic" : "CSAT",
  "year" : "2024"
}
