{
  "testId" : "gs-score-2024-prelims-all-india-pre-mock-2",
  "testType" : "all",
  "fullFilePath" : "upsc-test-series/test-series/2024/gs-score/prelims/gs-score-2024-prelims-all-india-pre-mock-2.pdf",
  "question" : [
    {
      "index" : 2,
      "question" : "Bacon's statement that 'history makes men wise 'is interpreted by the author as follows",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wy",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " history aided by technological support  makes men wise",
        "option2" : " history as a plain and actual record of  events makes men wise",
        "option3" : " a sentimentalised account of events is  good history as it gives pleasure",
        "option4" : " a good history cannot dispense with the  help offered by movies Passage-2 As I slung my pack onto my shoulders a big  mosquito thudded against my cheek. There had  been a few through the day, but it was early in the  season - the ice had gone out just two weeks before  - and I had scarcely noticed them. But now as I  walked down the ridge, the last breeze faded, and  they were on me. Rising in clouds from the soggy  tundra, they pelted against my face. I reached in  my pocket for the repellent and came up empty."
      }
    },
    {
      "index" : 3,
      "question" : "The traveler could not feel the breeze because ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wz",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " The mosquito had bitten him ",
        "option2" : " He was at the foot of the ridge ",
        "option3" : " There was no ice on the mountain ",
        "option4" : " There was no breeze on the tundra  mountain"
      }
    },
    {
      "index" : 4,
      "question" : "When he was in the arctic, the time of the year was",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Middle of winter ",
        "option2" : " Early autumn ",
        "option3" : " Early spring ",
        "option4" : " Middle of summer  Passage-3 Reservation came with the caveat that its  usefulness and validity would be examined every  few years. However, since the inception of class- based quotas, the term has morphed to 'caste- based' quotas. At one time, class may have been  synonymous with caste. This is not the case any  longer. But it doesn't suit any politician, or any  government, to acknowledge this, since vote bank  politics suggest that it is wise to keep communities,  rather than classes, happy. There are other ways  of appealing to the economically backward, after  all. The thought behind reservation was that those  who come from families which have been educated  for generations have an unfair advantage over  those who are  rst-generation learners. There is  some credence to this idea. But in exploiting the  political mileage that this allowed, our parties have  ensured that the principle is all but lost. When you  have economically well-off communities, which  have been educated for generations,  ghting in the  Supreme Court for the removal of the 'creamy layer'  rider, you know that there is something very wrong  about the approach we have taken to reservation. 3 "
      }
    },
    {
      "index" : 5,
      "question" : "According to the passage which of the following option is correct about reservation?1. The provision for the validity of reservation is examined every few year.2. It is also termed as class based quotas. 3. It is perpetuating due to vote bank politics.4. It is based on educational and economic backwardness.Select the correct answer using the codes given below.",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1",
      "description" : "IEV4cGxhbmF0aW9uIDogT3B0aW9uIDEgaXMgbWVudGlvbmVkIGF0IHRoZSBiZWdpbm5pbmcgb2YgIHBhc3NhZ2UuIE9wdGlvbiAyIGlzIHdyb25nIGFzIGl0IGlzICdjYXN0ZSBiYXNlZCBxdW90YXMnICBub3QgJ2NsYXNzLWJhc2VkJy4gRHVlIHRvIHZvdGUgYmFuayBwb2xpdGljcyBwb2xpdGljaWFucyBhcmUgIHN1cHBvcnRpbmcgcmVzZXJ2YXRpb24uIFNvLCBvcHRpb24gMyBpcyBhbHNvICBjb3JyZWN0LiBJbiB0aGUgcGFzc2FnZSBpdCBpcyBtZW50aW9uZWQgdGhhdCBmb3IgIDFzdCBnZW5lcmF0aW9uIGxlYXJuZXIgcmVzZXJ2YXRpb24gaXMgbmVlZGVkICBpLmUuIGVkdWNhdGlvbiBiYWNrd2FyZG5lc3MuIElmIGRvZXNuJ3QgdGFsayAgYWJvdXQgZWNvbm9taWMgYmFja3dhcmRuZXNzLg==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 1 and 3 only ",
        "option3" : " 2 and 4 only ",
        "option4" : " All of the above  Passage-4 Many persons have been attracted towards  smuggling due to huge pro ts involved in this  anti-national activity. Some of them became  millionaires overnights. India as a vast coastline  both on the East and West Coast. It has been a  heaven for smugglers who have been carrying on  their activities with great impunity. There is no  doubt that from time to time certain seizures were  made by the enforcement authorities, during raids  and ambush but even allowing these losses, the  smugglers made huge pro ts."
      }
    },
    {
      "index" : 6,
      "question" : "The passage best supports the statement that ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w2",
      "description" : "IEV4cGxhbmF0aW9uIDogVGhlIHBhc3NhZ2UgYWJvdmUgaXMgYmFzZWQgb24gdGhlIGluY3JlYXNlIGluICBzbXVnZ2xpbmcgYWN0aXZpdGllcyBkdWUgdG8gaHVnZSBwcm/vgIEgdHMgaW4gaXQuICBIZW5jZSwgdGhlIHBhc3NhZ2UgYmVzdCBzdXBwb3J0cyB0aGUgb3B0aW9uICAoZCku",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " smuggling hampers the economic  development of a nation.",
        "option2" : " smuggling needs to be curbed. ",
        "option3" : " authorities are taking strict measures to  curb smuggling.",
        "option4" : " smuggling is fast increasing in our country  owing to the quick pro t it entails."
      }
    },
    {
      "index" : 37,
      "question" : "If a number 131xy is divisible by 7, 3 7. and 11 then, value of 2x + y is:",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzNw==",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 13 ",
        "option2" : " 14 ",
        "option3" : " 18 ",
        "option4" : " 19 "
      }
    },
    {
      "index" : 8,
      "question" : "The sum of the series (-100) + (-95) + (-90) + ________ + 105 + 110 is:",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w4",
      "description" : "IEdpdmVuLCBzZXJpZXMgPSAoLTEwMCkgKyAoLSA5NSkgKyAoLSA5MCkgKyAuLi4uLi4gKyAgMTA1ICsgMTEwID0gKC0xMDApICsgKC05NSkgKyAoLTkwKSAuLi4uLiAoLTUpICsgKDApICsgNSArIDEwICArIDk1ICsgMTAwICsgMTA1ICsgMTEwIEhlbmNlLCBzdW0gPSAxMDUgKyAxMTAgPSAyMTUgKGQpIDkuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogVGh1cywgRSBpcyB0aGUgbmVwaGV3IG9mIEMuIChhKSAxMC4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBOdW1iZXIgb2YgYnVzZXMgPSAgQWZ0ZXIgNTAlIGluY3JlYXNlID0gNDE0IMOXID0gNjIxIE51bWJlciBvZiByaWtzaGF3cyA9ICBBZnRlciAyNSUgZGVjcmVhc2UgPSAgUmVxdWlyZWQgcmF0aW8gPSA2MjEvMTYyID0gMjMgOiA2IChhKSAxMS4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBCaWtlcyA9IDE4MDAgw5cgPSA0ODYgLSAzNiA9IDQ1MCAgU2Nvb3RlciA9IMOXIDE4MDAgPSAxNDQgVG90YWwgPSA0NTAgKyAxNDQgPSA1OTQgQ2FycywgQXV0b3MgYW5kIFJpY2tzaGF3cyAgID0gNzQwIFJlcXVpcmVkIERpZmZlcmVuY2U9IDc0MCAtIDU5NCA9IDE0NiAoYikgMTIuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogTnVtYmVyIG9mIGJ1c2VzID0gMTgwMCDDlyAyMy8xMDAgPSA0MTQgTnVtYmVyIG9mIGNhcnMgPSAxODAwIMOXIDEzLzEwMCA9IDIzNCBBVFEsIE5ldyBudW1iZXIgb2YgYnVzZXMgPSA0MTQgKyAyNiA9IDQ0MCBOZXcgbnVtYmVycyBvZiBjYXJzID0gMjM0IC0gMjYgPSAyMDggUmVxdWlyZWQgcGVyY2VudGFnZSA9IDIwOC80NDAgw5cgMTAwID0gIDQ3LjI3JSDCuyA0NyUgKGIpIDEzLiBDb3JyZWN0IE9wdGlvbiAgRXhwbGFuYXRpb246IFRoZSBhdXRoZXIgaGFzIGF0dGFja2VkIHRoZSBhcHByb2FjaCBvZiAgc2NpZW50aXNtIHRvd2FyZHMgU29jaWFsIFNjaWVuY2VzLiAzICAoYykgMTQuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogVGhlIGF1dGhvciBoYXMgdHJpZWQgdG8gc2hvdyB0aGF0IHNjaWVudGlzbSAgY2Fubm90IGJlIHByb3Blcmx5IGFwcGxpZWQgdG8gZXhwbGFpbiBzb2NpYWwgIGJlaGF2aW91ci4gKGMpIDE1LiBDb3JyZWN0IE9wdGlvbiAgRXhwbGFuYXRpb246IFRoZSBhdXRob3IgY3JpdGljaXplcyB0aGUgYXBwbGljYXRpb24gb2YgIHNjaWVudGlzbSB0byBzb2NpYWwgc2NpZW5jZXMuIChjKSAxNi4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBUaGUgcGFzc2FnZSBlbXBoYXNpemVzIHRoYXQgYWbvgIEgcm1hdGlvbiBvZiAgYSBuZXcgY3VsdHVyZSBpbnZvbHZlcyB2aWV3aW5nIHRoZSB3aG9sZSwgIGluY2x1ZGluZyB0aGUgcG9pbnRzIHRoYXQgYXJlIGxlc3MgZGVzaXJhYmxlLiAoZCkgMTcuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogVGhlIHBhc3NhZ2Ugc3RhdGVzIHRoYXQgYXBwcmVjaWF0aXZlICBpbnF1aXJ5IG11c3QgcHJlY2VkZSBjdWx0dXJhbCBjaGFuZ2VzIGluIGFuICBvcmdhbml6YXRpb24uIChhKSAxOC4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBBIGhlaWdodGVuZWQgcm9sbGVyIGNvYXN0ZXIgZWZmZWN0LCBhbmQgbm90ICBhbiBvcHBvcnR1bml0eSBmb3IgYSByb2xsZXIgY29hc3RlciByaWRlLCAgaXMgYSBjaGFyYWN0ZXJpc3RpYyBvZiB0aGUgc3RhZ2Ugb2Ygc21hbGwgIHZpY3Rvcmllcy4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 210 ",
        "option2" : " 220 ",
        "option3" : " 215 ",
        "option4" : " 200 "
      }
    },
    {
      "index" : 19,
      "question" : "LNJP : MPMT : : UVES : ? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wxOQ==",
      "description" : "IFNpbWlsYXJseQ==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " XWHV ",
        "option2" : " VXHV ",
        "option3" : " VXHW ",
        "option4" : " HXST "
      }
    },
    {
      "index" : 20,
      "question" : "3. 7 : 65 : : 11 : ? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyMA==",
      "description" : "IDcgPSAoNyArIDEpMiArIDEgPSA2NSBzbywgMTEgPSAoMTEgKyAxKTIgKyAxID0gIDE0NCArIDEgPSAxNDU=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 122 ",
        "option2" : " 121 ",
        "option3" : " 144 ",
        "option4" : " 145 "
      }
    },
    {
      "index" : 21,
      "question" : "If * stands for +, # stands for -, @ stands for ×, and % stands for ÷ then, which of the following statement is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyMQ==",
      "description" : "IChhKSDDniAyNTYlMTZANSMyOCA9IDI1NiDDtyAxNiDDlyA1IC0gMjggPSAgODAgLSAyOCA9IDUy",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 256%16@5#28 = 52 ",
        "option2" : " 256#16%5#28 = 120 ",
        "option3" : " 256@5%16*28 = 408 ",
        "option4" : " 256#16@5%28 = 80 "
      }
    },
    {
      "index" : 22,
      "question" : "Examine the following statements. Statements:Some net are den.Some den is pen.All pen is bill.Some bill is pot.Conclusions:I. Some net is pot.II. Some den is pot.III. Some net is bill.Which of the given conclusion is true?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyMg==",
      "description" : "IEV4cGxhbmF0aW9uOiBBY2NvcmRpbmcgdG8gdGhlIHF1ZXN0aW9uLCBJLiBTb21lIG5ldCBpcyBwb3QgLSBub3QgdHJ1ZSBJSS4gU29tZSBkZW4gaXMgcG90IC0gbm90IHRydWUgSUlJLiBTb21lIG5ldCBpcyBiaWxsIC0gbm90IHRydWU=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only I and II ",
        "option2" : " Only II and III ",
        "option3" : " Only I and III ",
        "option4" : " None of these "
      }
    },
    {
      "index" : 23,
      "question" : "Six persons viz. A, B, C, D, E and F are sitting in a straight line facing towards north direction but not necessarily in the same order. D sits second to the right of F. Only one person sits between A and F. C and F are not immediate neighbours. B sits second to the left of E. More than one persons are sitting between E and C. Who sits third to the right of A?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyMw==",
      "description" : "IEV4cGxhbmF0aW9uOiBUaGUgc2l0dGluZyBwYXR0ZXJuIGZyb20gbGVmdCB0byByaWdodCBpcyBDIC0gQSAtIEIgLSBGIC0gRSAtIEQgVGh1cywgRSBzaXRzIHRoaXJkIHRvIHRoZSByaWdodCBvZiBBLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " E ",
        "option2" : " F ",
        "option3" : " D ",
        "option4" : " None of these  Direction for the questions 24-26: In the  following questions two statements are given  followed by two conclusions. Read them  carefully and then answer the following  questions."
      }
    },
    {
      "index" : 24,
      "question" : "Statement-1: Some clerks are poor. Statement-2: Ram is a poor.Conclusion-1: Ram is clerk.Conclusion-2: Ram has a large family.",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyNA==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 1 follows ",
        "option2" : " Only 2 follows ",
        "option3" : " Both follows ",
        "option4" : " None follows "
      }
    },
    {
      "index" : 25,
      "question" : "Statement-1: All books are pens. Statement-2: All pens are cats.Conclusion-1: All books are cats.Conclusion-2: Some pens are books. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyNQ==",
      "description" : "IEFsbCBib29rcyBhcmUgcGVucyArIGFsbCBwZW5zIGFyZSBjYXRzIMKuIEFsbCAgYm9va3MgYXJlIGNhdHMuIEhlbmNlLCAyIGZvbGxvd3MuIEFnYWluLCBBbGwgYm9va3MgYXJlIHBlbnMgwq4gc29tZSBwZW5zIGFyZSAgYm9va3MuIDEgZm9sbG93cy4g",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 1 follows ",
        "option2" : " Only 2 follows ",
        "option3" : " Both follows ",
        "option4" : " None follows "
      }
    },
    {
      "index" : 26,
      "question" : "Statement-1: No dog is a rat. Statement-2: Some rats are mats.Conclusion-1: No rat is a dog.Conclusion-2: Some mats are not dogs. ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyNg==",
      "description" : "IE5vIGRvZyBpcyBhIHJhdCArIHNvbWUgcmF0cyBhcmUgbWF0cyDCriBzb21lICBtYXRzIGFyZSBub3QgcmF0cy4gQW5kLCBubyBkb2cgaXMgYSByYXQgwq4gbm8gcmF0IGlzIGEgZG9nLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 1 follows ",
        "option2" : " Only 2 follows ",
        "option3" : " Both follows ",
        "option4" : " None follows  Direction for the following 5 (Five) items: Read the following one passages and answer the  items that follow the passages. Your answers to  these items should be based on the passages only. 7  Passage-1 During the con icts that took place between the  years 1740 and 1763, the British naval warfare of  the period by no means possessed the very decided  character with which it became stamped, a quarter  of a century later. In our own times, the British  marine appears to have improved in quality, as its  enemies' deteriorated. In the year 1812, however,  a great change that came over the other navies of  Europe, was merely a consequence of the different  states, threw nautical enterprises into the shade,  and gave an engrossing direction to courage and  talent, in another quarter. While France was  struggling,  rst for independence, and next for the  mastery of the mastery of the continent, a marine  was a secondary object. To these, and other similar  causes, must be referred the explanation of the  seeming causes, must be referred the explanation  of the last great con icts of Europe; an invincibility  that was more apparent than real however, as  many well established defeats were, even then,  intermingled with her thousand victories. America  had her full share in the exploits of the English  marine. The gentry of the colonies willingly placed  their sons in the royal navy, and many a bit of square  bunting has been  ying at the royal mast heads of  the King's ships, in the nineteenth century, as the  distinguishing symbols of Americans, who had to  took for their birth places among those of ourselves.  In the course of a chequered life, in which we have  been brought in collision with as great a diversity  of rank, professions, and characters, we have been  thrown into contact with no fewer than eight out  of ten English admirals of American birth; while,  it has never yet been our good fortune to meet  with many countrymen, who have had this rank  bestowed on them by our own government."
      }
    },
    {
      "index" : 27,
      "question" : "With reference to the passage, read the following statements:1. During the nineteenth century, there was a remarkable diversity in the English navy which was charecterized by the presence of many Americans across its rank and  le.2. Closer to the present times, the British navy has deteriorated in quality because the navies of European countries have increased in quality.Which of the statements given above is/are correct?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyNw==",
      "description" : "IEV4cGxhbmF0aW9uOiBTdGF0ZW1lbnQgKDEpIGlzIGNvcnJlY3QgYXMgY2FuIGJlIGV2aWRlbmNlZCAgb24gcmVhZGluZyB0aGUgZW5kIG9mIHRoZSBwYXJhLiBTdGF0ZW1lbnQgKDIpICBpcyBpbmNvcnJlY3QgYXMgaXQgc3RhdGVzIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiAgd2hhdCBpcyBzdGF0ZWQgaW4gdGhlIHBhcmEuIFJlZmVyIHRoZSDvgIEgcnN0IGZvdXIgIGxpbmVzIHRoYXQgc3RhdGUgdGhhdCB0b2RheSB0aGUgcXVhbGl0eSBvZiB0aGUgIEJyaXRpc2ggbmF2eSBpcyBnb29kIGJlY2F1c2UgdGhlIHF1YWxpdHkgb2YgIG90aGVyIE5hdmllcyBoYXMgZGV0ZXJpb3JhdGVkLiBPbmx5IHN0YXRlbWVudCAgKDEpIGlzIGNvcnJlY3QuIDQg",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 28,
      "question" : "'A countryman' in the last line of the passage refers to:",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyOA==",
      "description" : "IEV4cGxhbmF0aW9uOiBOb3RlIHRoZSB1c2Ugb2YgdGhlIGNvbmp1bmN0aW9uICd3aGlsZScgaW4gIHRoZSBsYXN0IGxpbmUgd2hpY2ggcHJlc2VudHMgYSBjb250cmFzdC4gIE1hbnkgQW1lcmljYW5zIHdlcmUgZWxldmF0ZWQgdG8gdGhlIHBvc3QgIG9mIGFkbWlyYWxzIGluIHRoZSBFbmdsaXNoIGFybXkgYnV0IHRvIGhlYXIgIG9mIEJyaXRpc2hlcnMgYmVpbmcgcmFpc2VkIHRvIHN1Y2ggYSBwb3N0IHdhcyAgcmFyZS4gQ2l2aWxpYW5zIG9mIGVpdGhlciBjb3VudHJ5IGFyZSBub3QgdGhlICAoYykgc3ViamVjdCBvZiB0aGUgcGFzc2FnZSBzbyBjaG9pY2VzIChhKSBhbmQgIGFyZSBydWxlZCBvdXQuIENob2ljZSAoYikgaXMgYXB0LiA=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " A civilian from England. ",
        "option2" : " An Englishman serving in the English  navy.",
        "option3" : " A Civilian from America ",
        "option4" : " An American serving in the English  navy."
      }
    },
    {
      "index" : 29,
      "question" : "The line 'and many a bit of square bunting has been  ying __________birth places among those of ourselves' means:",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wyOQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBDaG9pY2UgKGEpIGRvZXMgbm90IGFuc3dlciB0aGUgcXVlc3Rpb24gYW5kICBjYW4gYmUgdGhlIGNhdXNlIG9mIChkKSB3aGljaCBpcyB0aGUgcmlnaHQgIGFuc3dlci4gQ2hvaWNlcyAoYikgYW5kIChjKSBBbWVyaWNhbiBzZXJ2ZWQgIGluIHRoZSBCcml0aXNoIG5hdnksIHRoZWlyIO+AgiBhZ3Mgd2VyZSBzZWVuICDvgIIgeWluZyBvbiBCcml0aXNoIHNoaXBzIHRvIGhlbHAgZGV0ZWN0IHRoZWlyICBzaGlwcyBmcm9tIHRoZSByZXN0IG9mIHRoZSDvgIIgZWV0LiAnQnVudGluZ3MnICBtZWFucyDvgIIgYWdzLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " The gentry of the American colonies  willingly sent their sons to join the  English navy. ",
        "option2" : " Americans celebrating the great exploits  of the English navy.",
        "option3" : " Many American admirals were of British  descent.",
        "option4" : " Many Americans were present in the  English navy and so their  ags were seen   ying on the British ships to differentiate  their ships from those of the other."
      }
    },
    {
      "index" : 30,
      "question" : "With reference to the passage, read the following statements:1. In the aftermath of 1812, the navy of Europe took a backseat and the army occupied the center stage because of numerous con icts in the continent .2. After 1812 the English navy was assumed to be invincible, though its performance was not that spectacular.Which of the statements given above is/are correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzMA==",
      "description" : "IEV4cGxhbmF0aW9uOiBGb3JtIHRoZSBwYXNzYWdlIHdlIGNhbiBpbmZlciBib3RoICBzdGF0ZW1lbnRzIHRvIGJlIHRydWUu",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Only 1 ",
        "option2" : " Only 2 ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 31,
      "question" : "The performance of the British naval warfare between 1740 and 1763 was ___.",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzMQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBSZWZlciB0byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBwYXJhIHdoaWNoICBtZW50aW9ucyB0aGF0IHBlcmZvcm1hbmNlIG9mIHRoZSBFbmdsaXNoICBuYXZ5IHBvc3QgMTc2MyB3YXMgcGVyY2VpdmVkIHRvIGJlICBzcGVjdGFjdWxhciBiZWNhdXNlIG9mIEV1cm9wZSdzIGNvbnF1ZXN0cywgIDE3NjMuIHF1aXRlIGNvbnRyYXJ5IHRvIHdoYXQgaXQgd2FzIGJlZm9yZSAgV2UgY2FuIHRodXMgaW5mZXIgdGhhdCB0aGUgcGVyZm9ybWFuY2UgIGR1cmluZyAxNzQwIHRvIDE3NjMgd2FzIHF1aXRlIG9yZGluYXJ5IG9yICBsYWNrIGx1c3R1cmUuIE90aGVyIG9wdGlvbnMgYXJlIGV4dHJlbWUuICAnQ2hlcXVlcmVkJyBtZWFucyBjaGFyYWN0ZXJpemVkIGJ5ICDvgIIgdWN0dWF0aW5nIGZvcnR1bmVzIGFuZCB0aGlzIGlzIG5vdCB0cnVlIG9mICB0aGUgQnJpdGlzaCBuYXZ5IGR1cmluZyB0aGUgcGVyaW9kIG1lbnRpb25lZCAgYWJvdmUu",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " lack lustre. ",
        "option2" : " spectacular. ",
        "option3" : " disappointing. ",
        "option4" : " chequered.  8 "
      }
    },
    {
      "index" : 32,
      "question" : "Which of the following is the smallest? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzMg==",
      "description" : "IExDTSBvZiAoNiwgMywgNCwgMikgPSAxMiAgIENsZWFybHksIGlzIHRoZSBzbWFsbGVzdC4=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " ",
        "option2" : " ",
        "option3" : " ",
        "option4" : " "
      }
    },
    {
      "index" : 34,
      "question" : "The narrator is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzNA==",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " a priest ",
        "option2" : " the leader of pupils ",
        "option3" : " an instrumentalist ",
        "option4" : " a singer "
      }
    },
    {
      "index" : 35,
      "question" : "The statements that 'the ovation was positively thunderous' means that ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzNQ==",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " There was a joyful expression of  appreciation by the people ",
        "option2" : " The audience joined the singers and sang  aloud ",
        "option3" : " The audience made circles and danced in  ecstasy ",
        "option4" : " The audience made a noise resembling  thunder Passage-2 Personally, I have been very fortunate and almost  inevitable, I have received courtesy from my own  countrymen as well as from the English . Even  my gaolers and the policemen, from place to place  have been kind to me and much of the bitterness  of con ict and the sting of goal-life has been toned  down because of this human touch. It was not  surprising that my own countrymen should treat  me so for I had gained a measure of notoriety and  popularity among them. Even for Englishmen I was  an individual and not merely one of the mass and I  imagine the fact that I had received my education  in England, brought me nearer to them."
      }
    },
    {
      "index" : 36,
      "question" : "The phrase 'almost inevitably' in this passage means ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzNg==",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " without precedence ",
        "option2" : " unexpectedly ",
        "option3" : " invariably ",
        "option4" : " considerably  Direction for the following 7 (Seven) items: Read the following three passages and answer the  items that follow the passages. Your answers to  these items should be based on the passages only. Passage-1 Last year I suffered a stroke I had to be hospitalized.  I was put in a general ward for there was no room  in the intensive coronary care unit. Not far from my bed was a patient in obvious  indigent circumstances and on a hospital diet. For  breakfast, he used to get two eggs, besides other  things. The man was regularly visited by a twelve-year-old  boy, perhaps his son, dressed in worn-out clothes.  The man always kept one egg for that boy when  he arrived soon after the doctors had done their  rounds. One day was a shortfall in the supply of eggs to the  hospital and our man got only one egg. He looked  at it for a long time, turning it over in his hands,  and then put it away. He thought the boy's need  was greater than his perhaps. 9 "
      }
    },
    {
      "index" : 37,
      "question" : "What does 'indigent circumstances', as used in the passage mean?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzNw==",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Miserable condition ",
        "option2" : " Miserly personality ",
        "option3" : " Very poor condition ",
        "option4" : " Rich background "
      }
    },
    {
      "index" : 38,
      "question" : "What does the above passage focus on? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzOA==",
      "description" : "",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Poverty of the man ",
        "option2" : " Nature of the dirty hospital ",
        "option3" : " Paternal affection of the man ",
        "option4" : " Poor condition of the boy  Passage-2 There are few things in this world that  ll me  with such wonder as the fact that a man can kill a  whale. The scenes in a whaleman's life are varied  and very stirring. Sometimes he is  oating on the  calm ocean, idling about the deck and whistling for  a breeze, when all of a, sudden the loud cry is heard,  ''There she blows!' and in a moment the boats are  in the water, and he is engaged in all the toils  of an exciting chase. Then comes the battle with  the great whale of the deep, with all its risks and  dangers. Sometimes he is unfortunate, the decks  are clean, he has nothing to do. At other times he  is lucky, 'cutting in' and 'trying out' engage all his  energies and attention. Frequently storms toss him  on the angry sea, and show him, if he will but learn  the lesson, how helpless a creature he is, and how  thoroughly dependent at all times for life, safety,  and success, upon the arm of God. "
      }
    },
    {
      "index" : 39,
      "question" : "Which of the following statement(s) follow(s) from the passage? 1. Storms always make the whaleman realize that he is a helpless creature. 2. The whaleman is fortunate when he has nothing to do. Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3wzOQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogTmVpdGhlciBzdGF0ZW1lbnQgZm9sbG93cyBmcm9tIHRoZSBwYXNzYWdlLiAgU3RhdGVtZW50IDEgaXMgaW5jb3JyZWN0IHNpbmNlIHRoZSBhdXRob3IgaXMsICBkb3VidGZ1bCB3aGV0aGVyIHRoZSBzZWFtYW4gd2lsbCBsZWFybiBoaXMgIGxlc3NvbiBmcm9tIHRoZSBzdG9ybSBvciBub3QtICcuLi4uIGlmIGhlIHdpbGwgIGh1dCBsZWFybiB0aGUgbGVzc29uIC4uLCdTdGF0ZW1lbnQgMiBkaXJlY3RseSAgY29udHJhZGljdHMgdGhlIHBhc3NhZ2UtJycgU29tZXRpbWVzIGhlICBpcyB1bmZvcnR1bmF0ZSwgdGhlIGRlY2tzIGFyZSBjbGVhbiwgaGUgaGFzICBub3RoaW5nIHRvIGRvLic=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 40,
      "question" : "Which of the following statement(s) follow(s) from the passage? 1. Whales are seen only in calm seas. 2. The whaleman survives only by chance. Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0MA==",
      "description" : "IEV4cGxhbmF0aW9uIDogTmVpdGhlciBzdGF0ZW1lbnQgZm9sbG93cyBmcm9tIHRoZSBwYXNzYWdlLiAgVGhvdWdoIHRoZSBhdXRob3IgZ2l2ZXMgYSBkZXNjcmlwdGlvbiBvZiAgYSB3aGFsZSBzaWdodGluZywgaXQgZG9lcyBub3QgZm9sbG93IHRoYXQgIHdoYWxlcyBhcmUgc2VlbiBvbmx5IGluIGNhaXJuIHNlYXMuIFRoZSAgc2Vjb25kIHN0YXRlbWVudCBpcyBhbHNvIGluY29ycmVjdC4gV2hpbGUgdGhlICBhdXRob3Igc3RhdGVzIHRoYXQgdGhlIHdoYWxlbWFuICd0aG9yb3VnaGx5ICBkZXBlbmRlbnQgYXQgYWxsIHRpbWVzIGZvciBsaWZlLCBzYWZldHksIGFuZCAgc3VjY2VzcywgdXBvbiB0aGUgYXJtIG9mIEdvZCcgdGhpcyBkb2VzIG5vdCAgbWVhbiB0aGF0IGhlIHN1cnZpdmVzIGJ5IGNoYW5jZSBhbG9uZSBhbmQgIG5vdCB0aHJvdWdoIGhpcyBvd24gZWZmb3J0cy4gNSA=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 41,
      "question" : "The author 1. is astonished by the fact that humans can kill whales. 2. thinks that God always protects the whaleman from danger. Select the correct answer using the codes given below: ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0MQ==",
      "description" : "IEV4cGxhbmF0aW9uIDogT25seSBzdGF0ZW1lbnQgMSBmb2xsb3dzIGZyb20gdGhlIHBhc3NhZ2UtICAnVGhlcmUgYXJlIGZldyB0aGluZ3MgaW4gdGhpcyB3b3JsZCB0aGF0IO+AgSBsbCAgbWUgd2l0aCBzdWNoIHdvbmRlciBhcyB0aGUgZmFjdCB0aGF0IG1hbiAgY2FuIGtpbGwgYSB3aGFsZS4nIFN0YXRlbWVudCAyIGlzIGluY29ycmVjdC4gIFRoZSBhdXRob3Igb25seSBzdGF0ZXMgdGhhdCB0aGUgd2hhbGVtYW4gIGlzIGRlcGVuZGVudCBvbiBHb2QsIG5vdCB0aGF0IEdvZCBhbHdheXMgIHByb3RlY3RzIGhpbS4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  Passage-3 What is to be the limit of forgiveness? It would  probably have been allowed by many of the  ancients that an unforgiving temper was not to  be commended. They would have said, we are not  to exact a penalty for every nice offense, we are to  overlook some things, we are to be blind sometimes.  But they would have said at the same time, we  must be careful to keep our self-respect and to be  on a level with the world. On the whole, they would  have said, it is the part of a man fully to requite to  his friends their bene ts and to his enemies their  injuries."
      }
    },
    {
      "index" : 42,
      "question" : "Which one of the following is the cored statement? According to the writer, we must",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0Mg==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " ignore an offense if it is nice ",
        "option2" : " forgive people if they bring us nice  presents",
        "option3" : " forgive pretty offenders ",
        "option4" : " not punish each and every offense "
      }
    },
    {
      "index" : 43,
      "question" : "What is the underlying tone of the passage? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0Mw==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " We must be forgiving in general ",
        "option2" : " We must forgive our friends ",
        "option3" : " There is no limit whatsoever to our duty  to forgive",
        "option4" : " We must always punish the wrongdoer  10  In a right angle triangle ABC, 44. ÐB is right  angle and DE is parallel to AC and the length  of DE is 45% the length of AC. What is the  area of DBDE, if the area of DABC is 40 cm2?"
      }
    },
    {
      "index" : 46,
      "question" : "Starting from 123....a number of 100 digits is written. What is the remainder when that number is divided by 8?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0Ng==",
      "description" : "IEV4cGxhbmF0aW9uOiBGcm9tIDEgdG8gOSB0aGVyZSBhcmUgOSBkaWdpdHMuIFN0YXJ0aW5nIDEwLCAgdGhlcmUgYXJlIDIgZGlnaXRzIGZvciBldmVyeSBudW1iZXIgLiBIZW5jZSAgZnJvbSAxMCB0aWxsIDU0LCB0aGVyZSBhcmUgNDUgbnVtYmVycyBvciAgOTAgZGlnaXRzLiBIZW5jZSB0aGUgbnVtYmVyIG9mIDk5IGRpZ2l0cyBpcyAgMTIzLi4uLjU0LiBIZW5jZSAxMDB0aCBkaWdpdCB3aWxsIGJlIDU1ICh0aGUgIDFzdCA1IG9mIDUgb2YgNTUpLiBIZW5jZSB0aGUgbGFzdCBkaWdpdHMgYXJlICA1NDUuIFdoZW4gdGhpcyBudW1iZXIgaXMgZGl2aWRlZCBieSA4LCB0aGUgIDEuIHJlbWFpbmRlciBpcyA=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 ",
        "option2" : " 2 ",
        "option3" : " 3 ",
        "option4" : " 0 "
      }
    },
    {
      "index" : 47,
      "question" : "A number is obtained by adding 47 to the product of 71 and an unknown number. When this new number is divided by 7, we get quotient as 98. That unknown number is multiple of which?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0Nw==",
      "description" : "IExldCwgdGhlIHVua25vd24gbnVtYmVyID0geCBGcm9tIHF1ZXN0aW9uLCA3MXggKyA0NyA9IDk4IMOXIDcgw54gNzF4ID0gIDY4NiAtIDQ3IMOeIHggPSAzIMOeIG11bHRpcGxlIG9mIDM=",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 2 ",
        "option2" : " 5 ",
        "option3" : " 7 ",
        "option4" : " 3 "
      }
    },
    {
      "index" : 48,
      "question" : "The simpli ed value of  is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0OA==",
      "description" : "IEdpdmVuLCA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " ",
        "option2" : " ",
        "option3" : " ",
        "option4" : " "
      }
    },
    {
      "index" : 49,
      "question" : "If '-' stands for '÷', '+' stands for '×', '÷', stands for '-' and, '×' for '+' then, which one of the following is correct? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w0OQ==",
      "description" : "IDE5IMO3IDUgKyA0IC0gMiDDlyA0ID0gMTkgLSA1IMOXIDQgw7cgMiArIDQgID0gMTkgLSA1IMOXIDIgKyA0ID0gMjMgLSAxMCA9IDEzIChhKSA1MC4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBUb3RhbCBlc3RpbWF0ZSA9IFJzLiA3MjUuNSBsYWtoOyBFc3RpbWF0ZSBvZiBjb250aW5nZW5jaWVzICA9ICgxICsgMTUgKyA0LjIgKyA1KSA9IFJzLjI1LjIgbGFraC4gTm93IGFzIHRoZSBlc3RpbWF0ZSBvZiBjb250aW5nZW5jaWVzIGlzICBkb3VibGVkLCBpdCBpbmNyZWFzZXMgYnkgUnMuMjUuMiBsYWtocy4gQW5kIGhlbmNlIHRoZSBwZXJjZW50YWdlIGluY3JlYXNlIGluIHRoZSAgdG90YWwgZXN0aW1hdGUgaXMgIChiKSA1MS4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBUaWxsIDE5OTAsIGFjdHVhbCBhbW91bnQgc3BlbnQgID0gUnMuNzI1LjUgbGFraHMgRXhwZW5kaXR1cmUgZm9yIDE5OTEgYXMgZXN0aW1hdGVkICA9IDIwOS41IGxha2hzLiBSZXF1aXJlZCBwZXJjZW50YWdlIGluY3JlYXNlICA9ICAoYikgNTIuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogSW4gdGhlIGdpdmVuIHRhYmxlIHdlIGNhbiBzZWUgdGhhdCB0aGUgY29zdHMgIHRoYXQgY2FuIGJlIHRha2VuIHVuZGVyIHRoZSBoZWFkICdNYXRlcmlhbHMnICBhcmUgOiBDZW1lbnQsIFN0ZWVsLCBCcmlja3MgYW5kIE90aGVyIGJ1aWxkaW5nICBtYXRlcmlhbHMuIDYgIFRoZSBlc3RpbWF0ZWQgY29zdCBvZiB0aGVzZSBoZWFkcyBpbiAxOTkwID0gODAgKyA0NSArIDEyICsgMTggPSAxNTUgVGhlIGVzdGltYXRlZCBjb3N0IG9mIHRoZXNlIGhlYWRzIGluIDE5OTEgPSA3NSArIDYwICsgMTYgKyAyMSA9IDE3MiBTaW5jZSB0aGUgY29zdCBvZiBtYXRlcmlhbCByaXNlcyBieSA1JSwgaGVuY2UgaXQgIHdvdWxkIHJpc2UgYnkgIDAuMDUgw5cgKDE1NSArIDE3MikgPSBScy4xNi4zNSBsYWtocy4gKGIpIDUzLiBDb3JyZWN0IE9wdGlvbiAgRXhwbGFuYXRpb246IFRoZSBlc3RpbWF0ZWQgY29zdHMgb2YgbWF0ZXJpYWwgYW5kIGxhYm91ciBmb3IgIGRpZmZlcmVudCB5ZWFycyBhcmUgOiAxOTg4ID0gMi4xIDE5ODkgPSA5NSArIDcwICsgMTUgKyAyNSArIDI1ID0gMjMwIDE5OTAgPSA4MCArIDQ1ICsgMTIgKyAxOCArIDIwID0gMTc1IDE5OTEgPSA3NSArIDYwICsgMTYgKyAyMSArIDE4ID0gMTkwIFJlcXVpcmVkIHByb3BvcnRpb24gIA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 19 + 5 - 4 × 2 ÷ 4 = 1 ",
        "option2" : " 19 × 5 - 4 ÷ 2 + 4 = 16 ",
        "option3" : " 19 ÷ 5 + 4 - 2 × 4 = 13 ",
        "option4" : " 19 ÷ 5 + 4 + 2 ÷ 4 = 20  Direction (Q. 50-53): The table below shows  the estimated cost (in Rs. Lakh) of a project of  laying a railway line between two places. 1988 1989 1990 1991 Surveying 41.5 7.5 2.2 0.5 Cement - 95.0 80.0 75.0 Steel - 70.0 45.0 60.0 Bricks - 15.0 12.0 16.0 Other buildig  material - 25.0 18.0 21.0 Labour 2.1 25.0 20.0 18.0 Administration 7.5 15.0 15.0 14.0 Contingencies 1.0 15.0 4.2 5.0 Total 52.1 267.5 196.4 209.5"
      }
    },
    {
      "index" : 54,
      "question" : "A dealer marks his goods so as to make 20% pro t. But due to a  re in his warehouse, 5% of his goods are damaged, also 25% became soiled and hence, they had to be sold at half their cost. If he sells the remaining at the marked price, his net gain or loss is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1NA==",
      "description" : "IEV4cGxhbmF0aW9uIDogTGV0IG5vLiBvZiBhcnRpY2xlcyA9IDEwMCBvZiAxIFJzLiBlYWNoIFNvLCBUb3RhbCBDUCA9IFJzLiAxMDAgQVRRLCByZXF1aXJlZCBTUCA9IDEwMCArIDIwID0gUnMuIDEyMCBcIFNQIG9mIGVhY2ggYXJ0aWNsZSA9IFJzLiAxLjIgU1Agb2YgMjUlIGFydGljbGVzID0gw5cgMjUgPSBScy4gMTIuNSBSZW1haW5pbmcgYXJ0aWNsZXMgPSAxMDAgLSAyNSAtIDUgPSA3MCBTUCBvZiA3MCBhcnRpY2xlcyA9IDcwIMOXIDEuMiA9IFJzLiA4NCBUb3RhbCBTUCA9IDg0ICsgMTIuNSA9IFJzLiA5Ni41IExvc3MgPSAxMDAgLSA5Ni41ID0gMy41IExvc3MlID0gPSAzLjUl",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 2% gain ",
        "option2" : " 4% loss ",
        "option3" : " 3% gain ",
        "option4" : " 3.5% loss "
      }
    },
    {
      "index" : 55,
      "question" : "If average monthly income of A and B is 14000. Average monthly income of B and C is 15600 and average monthly income of C and A is 14400, then what is the monthly income of C?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1NQ==",
      "description" : "ICDDniBBICsgQiA9IDI4MDAwIC4uLi4uLi4uLi4uLi4gKGkpICDDniBCICsgQyA9IDMxMjAwIC4uLi4uLi4uLi4uLi4gKGlpKSAgw54gQyArIEEgPSAyODgwMCAuLi4uLi4uLi4uLi4uIChpaWkpIEFkZGluZyBlcXVhdGlvbiAoaSkgKyAoaWkpICsgKGlpaSkgMihBICsgQiArIEMpID0gODgwMDAgQSArIEIgKyBDID0gNDQwMDAgLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uIChpdikgRnJvbSBlcXVhdGlvbiAoaSkgYW5kIChpdikgIDE2MDAwLiBIZW5jZSwgQyA9IA==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 16000 ",
        "option2" : " 15000 ",
        "option3" : " 15500 ",
        "option4" : " 14000 "
      }
    },
    {
      "index" : 56,
      "question" : "A contractor undertook a task for 150 days and employed 200 men on it. He  nd that only  of the work has been done in 50 days. How many more workers are required to complete the work in scheduled time?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1Ng==",
      "description" : "IEV4cGxhbmF0aW9uIDogTGV0ICd4JyBtb3JlIHdvcmtlcnMgYXJlIHJlcXVpcmVkICBCeSBNREggZm9ybXVsYSwgICDDniB4ID0gMTAwICAgU28sIDEwMCBtb3JlIHdvcmtlcnMgYXJlIHJlcXVpcmVkLg==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 100 ",
        "option2" : " 200 ",
        "option3" : " 300 ",
        "option4" : " 150 "
      }
    },
    {
      "index" : 57,
      "question" : "1.5, 2.5, 4, 6, 8.5, ? ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1Nw==",
      "description" : "",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 11 ",
        "option2" : " 11.5 ",
        "option3" : " 11.75 ",
        "option4" : " 13 "
      }
    },
    {
      "index" : 58,
      "question" : "The average temperature of Monday, Tuesday and Wednesday was 60°C. The average temperature of Tuesday, Wednesday and Thursday was 65°C. The temperature on Thursday was 62°C. Find the temperature of Monday.",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1OA==",
      "description" : "IEV4cGxhbmF0aW9uIDogVGVtcHJhdHVyZSBvZiAoTW9uLiArIFR1ZS4gKyBXZWQuKSAgPSA2MCDDlyAzID0xODDCuiBDIFRlbXBlcmF0dXJlIG9mIChUdWUuICsgV2VkLiArIFRodS4gKSAgPSA2NSDDlyAzID0gMTk1wrogQyBUZW1wZXJhdHVyZSBvZiAoVGh1LiAtIE1vbikgID0gMTk1IC0gMTgwID0gMTXCuiBDIFRlbXBlcmF0dXJlIG9mIE1vbmRheSA9IDYyIC0gMTUgPSA0N8K6Qw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 42°C ",
        "option2" : " 47°C ",
        "option3" : " 52°C ",
        "option4" : " 77°C  Direction for the following 6 (Six) items: Read the following three passages and answer the  items that follow the passages. Your answers to  these items should be based on the passages only. Passage-1 The agricultural sector is in distress and some of  the farmers are even forced to commit suicide is no  news. The fact is that little has so far been done to  strengthen agriculture. It is also well known that  the agricultural output has close relations with the  climatic conditions. The recent unseasonal rains in  many parts of India, followed by searing heat wave  conditions, have caused extensive damage to the  crops. In the weeks to come, demands for waiving of  agricultural loans and increasing the procurement  prices of food grains are bound to be taken up by  political leaders. Eventually, the government would  be forced to concede some of their demands."
      }
    },
    {
      "index" : 59,
      "question" : "Agricultural output is related to: ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w1OQ==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Financial Credit given to farmers ",
        "option2" : " Infrastructural Development ",
        "option3" : " Government's support given to farmers ",
        "option4" : " Climatic Conditions  12 "
      }
    },
    {
      "index" : 60,
      "question" : "Due to distress in agriculture sector, the government can face which of the following demands from the farmers?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w2MA==",
      "description" : "IChhKSA2MS4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiAoYikgZG9lcyBub3QgYXR0YWNrIHRoZSBhcmd1bWVudCwgaXQgaGVscHMgdGhlICBBc3NvY2lhdGlvbidzIGNhdXNlLiAoYykgaXMgcG9pbnRsZXNzLCBpZiB0aGVyZSAgaXNuJ3QgYWRlcXVhdGUgY29uc3VtcHRpb24uIE9wdGlvbiAoZCkgZG9lcyAgbm90IGFkZHJlc3MgdGhlIGNvcmUgaXNzdWUgYXMgZGlyZWN0bHkgYXMgKGEpLiAgQnV0IChhKSBpZiB0cnVlLCB3b3VsZCByZW5kZXIgdGhlIGN1bXVsYXRpdmUgIGVmZm9ydHMgb2YgdGhlIEFzc29jaWF0aW9uIGZydWl0bGVzcy4gNyAgKGMpIDYyLiBDb3JyZWN0IE9wdGlvbiAgRXhwbGFuYXRpb246IFRoZSBhdXRob3IgaGFzIHVzZWQgY29tcGFyaXNvbnMgd2l0aCAgb2JqZWN0cyBsaWtlIGEgdG9wIGFuZCByZWZlcmVuY2VzIHRvIGdlb21ldHJpYyAgc2hhcGVzIGxpa2UgY29uZXMuIChjKSA2My4gQ29ycmVjdCBPcHRpb24gIEV4cGxhbmF0aW9uOiBUaGUgRWFydGgncyByb3RhdGlvbiBvbiBpdHMgYXhpcyBjYXVzZXMgdGhlICBhbHRlcm5hdGlvbiBiZXR3ZWVuIGRheSBhbmQgbmlnaHQsIHdoaWNoICB3ZSBhbGwga25vdyB0YWtlcyBvbmx5IDI0IGhvdXJzLiAoYSkgNjQuIENvcnJlY3QgT3B0aW9uICBFeHBsYW5hdGlvbjogVGhlIO+AgSByc3Qgc2VudGVuY2Ugb2YgdGhlIHBhc3NhZ2Ugc2hvd3MgdGhhdCAgdGhlIHBhc3NhZ2UgaXMgYWJvdXQgdGhlIHZhcmlldHkgb2YgbW90aW9ucyAgb2YgdGhlIGVhcnRoLg==",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Waiving of agricultural loans. ",
        "option2" : " Increasing the procurement prices of food  grains",
        "option3" : " Increasing the agricultural loans. ",
        "option4" : " Waiving of agricultural loans and  increasing the procurement prices of food  grains. Passage-2 Argentina's beef cattle herd has dropped to under "
      }
    },
    {
      "index" : 67,
      "question" : "Two boats start from P and Q. Distance between P and Q is 108 km. Their speeds in still water are 12 kmph and 15 kmph respectively. If  rst boat traveling downstream and second boat is traveling upstream, then after how much time will they meet?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w2Nw==",
      "description" : "IEdpdmVuLCBkaXN0YW5jZSA9IDEwOCBrbSBMZXQgc3BlZWQgb2Ygc3RyZWFtID0geCBrbXBoIEZvciwgMXN0IGJvYXQgZG93bnN0cmVhbSBzcGVlZCA9ICgxMiArIHgpICBrbXBoIEZvciwgMm5kIGJvYXQgdXBzdHJlYW0gc3BlZWQgPSAoMTUgLSB4KSBrbXBoIE1lZXRpbmcgdGltZSA9ID0gNCBob3Vycw==",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 4.5 hours ",
        "option2" : " 4 hours ",
        "option3" : " 5.4 hours ",
        "option4" : " 6 hours "
      }
    },
    {
      "index" : 68,
      "question" : "The letters of the word 'POWERS' can be arranged in how many ways?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w2OA==",
      "description" : "IEdpdmVuLCB3b3JkID0gJ1BPV0VSJyBMZXR0ZXJzID0gNiBOby4gb2Ygd2F5cyA9ID0gNiDDlyA1IMOXIDQgw5cgMyDDlyAyIMOXIDEgPSA3MjAgIHdheXM=",
      "correctOption" : "Mg==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 640 ",
        "option2" : " 720 ",
        "option3" : " 1440 ",
        "option4" : " 360 "
      }
    },
    {
      "index" : 69,
      "question" : "There are 40 students in a class. One of them weighing 50 kg goes away and a new student joins. The average weight of the class increases by half kg. The weight of the new student is :",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w2OQ==",
      "description" : "IEV4cGxhbmF0aW9uOiBMZXQgdGhlIGF2ZXJhZ2UgPSB4IEhlbmNlICwgU3VtIG9mIHdlaWdodCBvZiA0MCBzdHVkZW50cyA9IDQweCBOb3cgdGhlIHdlaWdodCBvZiBuZXcgc3R1ZGVudCA9IHkgSGVuY2UgLCA0MHggLSA1MCArIHkgPSA0MCAoeCArIDAuNSApIDQweCAtIDUwICsgeSA9IDQweCArIDIwIHkgPSA3MCBrZy4=",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 70 kg ",
        "option2" : " 75 kg ",
        "option3" : " 72 kg ",
        "option4" : " 76 kg  Direction for the following 6 (Six) items: Read the following three passages and answer the  items that follow the passages. Your answers to  these items should be based on the passages only. Passage-1 With the inevitable growth of specialization I see  the universities facing two great dangers. First, it is  very easy to get so involved in the technical details  of education that the object of education is lost.  And secondly, in an effort to condition a university  to the needs of its students and to the needs of the  state it may lose its power to make or mold those  students into responsible men, capable of thinking  for themselves and capable of expressing the results  of their thoughts to others."
      }
    },
    {
      "index" : 70,
      "question" : "The author calls the growth of specialization 'inevitable'. Which one of the following statements is likely to be the most correct reason for this inevitability?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3MA==",
      "description" : "",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " Universities give grants only to do  specialization working different  disciplines",
        "option2" : " The professors and researchers in  universities are competent only for  specialized work",
        "option3" : " Specialization helps the economic growth  of the nation",
        "option4" : " In an age of science and technology  specialization becomes necessary"
      }
    },
    {
      "index" : 71,
      "question" : "Which one of the following statements most correctly suggests the warning implied in the passage?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3MQ==",
      "description" : "",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " University education should not be  concerned with technical details",
        "option2" : " Universities should not subordinate  themselves to the interests of the state",
        "option3" : " Universities should be concerned only  with the needs of students",
        "option4" : " Universities should not go in for any  specialization Passage-2 The National Watershed Development Project  for Rained Area (NWDPRA), was initiated in the  1980's. Extensive changes were introduced in this  major programme for the development of the rained  agriculture during 1990-91. It was also decided  that Central assistance for the implementation of  the programme should be liberalised with 75 per  cent of the amount to be given as grants to the  States and 25 per cent as loans. The NWDPRA  envisages that a micro watershed will be taken  up for development in every block having assured  14  irrigation of less than 30 percent. In developing  the micro watersheds, a holistic approach is  to be adopted including, inter alia, the diverse  producing systems, be that seasonal cropping,  perennials like horticulture, forestry or animal  husbandry activities. Use of vegetative barriers  is the principal means to prevent soil erosion and  to conserve moisture. Arable, non-arable lands as  well as the drainage lines will be treated in an  integrated manner. To the largest extent possible,  the programmes contemplate enrolment of  bene ciaries both in planning for development and  execution of various activities. Extension support  through local progressive farmers is another  critical element. Training of all concerned has been  emphasised. "
      }
    },
    {
      "index" : 72,
      "question" : "Consider the following statements : 1. Improvements have been made to the NWDPRA.2. There was a proposal for a lowered Central assistance for NWDPRA.As per the above passage, which of the given statements is/are valid?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3Mg==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFN0YXRlbWVudCAxIGlzIGludmFsaWQgYmVjYXVzZSB0aGUgcGFzc2FnZSAgb25seSB0ZWxscyB1cyB0aGF0ICdleHRlbnNpdmUgY2hhbmdlcycgd2VyZSAgaW50cm9kdWNlZCBJbiBOV0RQUkEuIFdoZXRoZXIgdGhlICBpbXByb3ZlbWVudHMgaGF2ZSBiZWVuIG1hZGUgb3Igbm90IGlzICBub3Qga25vd24uIFN0YXRlbWVudCAyIGlzIGludmFsaWQgYmVjYXVzZSAgdGhlcmUgd2FzIGEgcHJvcG9zYWwgZm9yIGEgbGliZXJhbGlzZWQgY2VudHJhbCAgYXNzaXN0YW5jZS4gVGhpcyBkb2VzIG5vdCBtZWFuIHRoYXQgdGhlICBjZW50cmFsIGFzc2lzdGFuY2Ugd2FzIGxvd2VyZWQuIGZlbmNlLCBvcHRpb24gIChkKSBpcyB0aGUgY29ycmVjdCBhbnN3ZXIu",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 73,
      "question" : "With reference to the above passage, consider the following assumptions :1. Vegetative barriers are related to soil erosion and moisture conservation.2. A holistic approach will help in developing micro watersheds.Which of the given assumption is/are vali?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3Mw==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFN0YXRlbWVudCAxIGlzIHZhbGlkIGJhc2VkIG9uIHRoZSBzZW50ZW5jZSAgJ1VzZSB2ZWdldGF0aXZlIGJhcnJpZXJzIGlzIHRoZSBwcmluY2lwYWwgIG1lYW5zIHRvIHByZXZlbnQgc29pbCBlcm9zaW9uIGFuZCB0byAgY29uc2VydmUgbW9pc3R1cmUuJyBTdGF0ZW1lbnRzIDIgaXMgbm90ICB2YWxpZCBiZWNhdXNlIHRoZSBzZW50ZW5jZSAnSW4gZGV2ZWxvcGluZyAgdGhlIG1pY3JvIHdhdGVyc2hlZHMsIGEgaG9saXN0aWMgYXBwcm9hY2ggIGlzIHRvIGJlIGFkb3B0ZWQnIGRvZXMgbm90IHRlbGwgdXMgd2hldGhlciAgYSBob2xpc3RpYyBhcHByb2FjaCB3aWxsIGhlbHAgaW4gZGV2ZWxvcGluZyAgKGEpIG1pY3JvIHdhdGVyc2hlZHMgb3Igbm90LicgSGVuY2UsIG9wdGlvbiAgaXMgdGhlIGNvcnJlY3QgYW5zd2Vy",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 74,
      "question" : "Consider the following statements : 1. Rainfed agriculture development is a component of NWDPRA.2. Support through local progressive farmers is important for NWDPRA.As per the above passage, which of the given statements is/are valid?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3NA==",
      "description" : "IEV4cGxhbmF0aW9uIDogIFRoZSBwYXNzYWdlIHRlbGxzIHVzIHRoYXQgJ0V4dGVuc2l2ZSBjaGFuZ2VzICB3ZXJlIGludHJvZHVjZWQgaW4gdGhpcyBtYWpvciBwcm9ncmFtbWUgIGZvciB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIHJhaW5mZWQgIDggIGFncmljdWx0dXJlJyB0aGlzIGNlYXJseSBtZWFucyB0aGF0IHJhaW5lZCAgYWdyaWN1bHR1cmUgZGV2ZWxvcG1lbnQgaXMgYSBjb21wb25lbnQgb2YgIE5XRFBSQSBGcm9tIHRoZSBzZW50ZW5jZSAnRXh0ZW5zaW9uICBTdXBwb3J0IHRocm91Z2ggbG9jYWwgcHJvZ3Jlc3NpdmUgZmFybWVycyAgaXMgYW5vdGhlciBjcml0aWNhbCBlbGVtZW50Licgd2UgY2FuIHNheSBtYXQgIHN1cHBvcnQgdGhyb3VnaCBsb2NhbCBwcm9ncmVzc2l2ZSBmYXJtZXIgaXMgIGltcG9ydGFudCBmb3IgTldEUFJBLiBIZW5jZSwgb3B0aW9uIChjKSBpcyAgdGhlIGNvcnJlY3QgYW5zd2VyLg==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2  Passage-3 A man had two blacksmiths for his neighbors.  Their names were Pengu and Shengu. The man  was greatly troubled by the noise of their hammers.  He decided to talk to them. The next day he called  both of them and offered Rs. 100 each, if they found  new huts, for themselves. They took the money and  agreed to  nd new huts for themselves. The next  morning he woke up again to the sound of their  hammers. He went out to see why the blacksmiths  hadn't found new huts and he discovered that  Pengu and Shengu had kept their promise. They  had exchanged their huts."
      }
    },
    {
      "index" : 77,
      "question" : "A water tap 'A' can  ll a tank in 8 hours, while another tap 'B' can  ll it in 6 hours. If both are opened together, and after 2 hours. Tap 'A' was closed. Then. 'B' will take how many hours to  ll the rest part of tank?",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3Nw==",
      "description" : "IFRvdGFsIGNhcGFjaXR5ID0gTENNICg2LCA4KSA9IDI0ICBBIEIgIDggNiAgRWZmaSBjaWVuY3kgICB3b3JrIGRvbmUgaW4gMiBob3VycyAgPSAoNCArIDMpIMOXIDIgPSAxNCAgUmVzdCB3b3JrID0gMjQgLSAxNCA9IDEwICB0aW1lIHRha2VuIGJ5IGhvdXJz",
      "correctOption" : "NA==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 6 hours ",
        "option2" : " 3½ hours ",
        "option3" : " 4 hours ",
        "option4" : " 2½ hours "
      }
    },
    {
      "index" : 78,
      "question" : "Let M be the least number which when divided by 12,21,32, and 36 the remainder in each case 17. is 8 and M is multiple of 15 71. sum of digit of number is 7 1. 872. Number is multiple of 87 2. Select the correct answer using the codes given below.",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3OA==",
      "description" : "IExDTSBvZiAxMiwgMjEsIDMyIGFuZCAzNiBpcyAyMDE2ICB0aGUgbnVtYmVyIGlzIE0gPSAyMDE2eCArIDggIHRoaXMgbnVtYmVyIGlzIG11bHRpcGxlIG9mIDE3ICBwdXQgdmFsdWUgbGVhc3QgdmFsdWUgb2YgeCAgTSA9IDIwMTYoNikgKyA4ICBNID0gMTIxMDQgIEhlbmNlLCBzdW0gPSAxICsgMCArIDQgKyAyID0gNw==",
      "correctOption" : "MQ==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 1 only ",
        "option2" : " 2 only ",
        "option3" : " Both 1 and 2 ",
        "option4" : " Neither 1 nor 2 "
      }
    },
    {
      "index" : 79,
      "question" : "A book seller sells a book at 10% pro t. Had he bought if 4% less and sold for 6 rupees more, he could have get pro t. Cost price is ",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w3OQ==",
      "description" : "IDE1MC4gQ29zdCBwcmljZSA9IA==",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 130 ",
        "option2" : " 140 ",
        "option3" : " 150 ",
        "option4" : " 160 "
      }
    },
    {
      "index" : 80,
      "question" : "Two numbers x and y are chosen at random from the set of  rst 30 natural numbers. The probability that x2 - y2 is divisible by 3 is",
      "questionId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0c3w4MA==",
      "description" : "IEV4cGxhbmF0aW9uOiBPdXQgb2YgMzAgbnVtYmVycyAyIG51bWJlcnMgY2FuIGJlIGNob3NlbiAgaW4gMzBDMiB3YXlzLiBTbywgZXhoYXVzdGl2ZSBudW1iZXIgb2YgY2FzZXMgPSAzMEMyID0gNDM1IFNpbmNlIHgyIC0geTIgaXMgZGl2aXNpYmxlIGJ5IDMgaWYgZWl0aGVyIHggYW5kIHkgIGFyZSBkaXZpc2libGUgYnkgMyBvciBub25lIG9mIHggYW5kIHkgaXMgZGl2aXNpYmxlICAzLiBieSAgVGh1cywgdGhlIGZhdm91cmFibGUgbnVtYmVycywgb2YgY2FzZXMgPSAxMEMyICArIDIwQzIgPSAyMzUgXCByZXF1aXJlZCBwcm9iYWJpbGl0eSA9ICB2dnZ2diA=",
      "correctOption" : "Mw==",
      "topicId" : "fFBhcGVyIC0gSXxDU0FUfEZ1bmRhbWVudGFsIFJpZ2h0cw==",
      "year" : 2024,
      "paper" : "Paper - I",
      "topic" : "Fundamental Rights",
      "questionType" : "normal",
      "subject" : "CSAT",
      "questionOptions" : {
        "option1" : " 43/89 ",
        "option2" : " 57/87 ",
        "option3" : " 47/87 ",
        "option4" : " 41/83  vvvvv "
      }
    }
  ],
  "subject" : "CSAT",
  "topic" : "Fundamental Rights",
  "year" : "2024"
}
